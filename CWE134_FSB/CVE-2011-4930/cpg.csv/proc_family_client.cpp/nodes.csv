command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2014219	File	data/converged/CVE-2011-4930_htcondor/proc_family_client.cpp								
ANR	2014220	Function	log_exit	30:0:1027:1448							
ANR	2014221	FunctionDef	"log_exit (const char * op_str , proc_family_error_t error_code)"		2014220	0					
ANR	2014222	CompoundStatement		32:0:1100:1448	2014220	0					
ANR	2014223	IdentifierDeclStatement	int debug_level = D_PROCFAMILY ;	33:1:1103:1133	2014220	0	True				
ANR	2014224	IdentifierDecl	debug_level = D_PROCFAMILY		2014220	0					
ANR	2014225	IdentifierDeclType	int		2014220	0					
ANR	2014226	Identifier	debug_level		2014220	1					
ANR	2014227	AssignmentExpression	debug_level = D_PROCFAMILY		2014220	2		=			
ANR	2014228	Identifier	D_PROCFAMILY		2014220	0					
ANR	2014229	Identifier	D_PROCFAMILY		2014220	1					
ANR	2014230	IfStatement	if ( error_code != PROC_FAMILY_ERROR_SUCCESS )		2014220	1					
ANR	2014231	Condition	error_code != PROC_FAMILY_ERROR_SUCCESS	34:5:1140:1178	2014220	0	True				
ANR	2014232	EqualityExpression	error_code != PROC_FAMILY_ERROR_SUCCESS		2014220	0		!=			
ANR	2014233	Identifier	error_code		2014220	0					
ANR	2014234	Identifier	PROC_FAMILY_ERROR_SUCCESS		2014220	1					
ANR	2014235	CompoundStatement		3:46:80:80	2014220	1					
ANR	2014236	ExpressionStatement	debug_level = D_ALWAYS	35:2:1185:1207	2014220	0	True				
ANR	2014237	AssignmentExpression	debug_level = D_ALWAYS		2014220	0		=			
ANR	2014238	Identifier	debug_level		2014220	0					
ANR	2014239	Identifier	D_ALWAYS		2014220	1					
ANR	2014240	IdentifierDeclStatement	const char * result = proc_family_error_lookup ( error_code ) ;	37:1:1213:1270	2014220	2	True				
ANR	2014241	IdentifierDecl	* result = proc_family_error_lookup ( error_code )		2014220	0					
ANR	2014242	IdentifierDeclType	const char *		2014220	0					
ANR	2014243	Identifier	result		2014220	1					
ANR	2014244	AssignmentExpression	* result = proc_family_error_lookup ( error_code )		2014220	2		=			
ANR	2014245	Identifier	result		2014220	0					
ANR	2014246	CallExpression	proc_family_error_lookup ( error_code )		2014220	1					
ANR	2014247	Callee	proc_family_error_lookup		2014220	0					
ANR	2014248	Identifier	proc_family_error_lookup		2014220	0					
ANR	2014249	ArgumentList	error_code		2014220	1					
ANR	2014250	Argument	error_code		2014220	0					
ANR	2014251	Identifier	error_code		2014220	0					
ANR	2014252	IfStatement	if ( result == NULL )		2014220	3					
ANR	2014253	Condition	result == NULL	38:5:1277:1290	2014220	0	True				
ANR	2014254	EqualityExpression	result == NULL		2014220	0		==			
ANR	2014255	Identifier	result		2014220	0					
ANR	2014256	Identifier	NULL		2014220	1					
ANR	2014257	CompoundStatement		7:21:192:192	2014220	1					
ANR	2014258	ExpressionStatement	"result = ""Unexpected return code"""	39:2:1297:1330	2014220	0	True				
ANR	2014259	AssignmentExpression	"result = ""Unexpected return code"""		2014220	0		=			
ANR	2014260	Identifier	result		2014220	0					
ANR	2014261	PrimaryExpression	"""Unexpected return code"""		2014220	1					
ANR	2014262	ExpressionStatement	"dprintf ( debug_level , ""Result of \\""%s\\"" operation from ProcD: %s\\n"" , op_str , result )"	41:1:1336:1446	2014220	4	True				
ANR	2014263	CallExpression	"dprintf ( debug_level , ""Result of \\""%s\\"" operation from ProcD: %s\\n"" , op_str , result )"		2014220	0					
ANR	2014264	Callee	dprintf		2014220	0					
ANR	2014265	Identifier	dprintf		2014220	0					
ANR	2014266	ArgumentList	debug_level		2014220	1					
ANR	2014267	Argument	debug_level		2014220	0					
ANR	2014268	Identifier	debug_level		2014220	0					
ANR	2014269	Argument	"""Result of \\""%s\\"" operation from ProcD: %s\\n"""		2014220	1					
ANR	2014270	PrimaryExpression	"""Result of \\""%s\\"" operation from ProcD: %s\\n"""		2014220	0					
ANR	2014271	Argument	op_str		2014220	2					
ANR	2014272	Identifier	op_str		2014220	0					
ANR	2014273	Argument	result		2014220	3					
ANR	2014274	Identifier	result		2014220	0					
ANR	2014275	ReturnType	static void		2014220	1					
ANR	2014276	Identifier	log_exit		2014220	2					
ANR	2014277	ParameterList	"const char * op_str , proc_family_error_t error_code"		2014220	3					
ANR	2014278	Parameter	const char * op_str	31:9:1048:1065	2014220	0	True				
ANR	2014279	ParameterType	const char *		2014220	0					
ANR	2014280	Identifier	op_str		2014220	1					
ANR	2014281	Parameter	proc_family_error_t error_code	31:29:1068:1097	2014220	1	True				
ANR	2014282	ParameterType	proc_family_error_t		2014220	0					
ANR	2014283	Identifier	error_code		2014220	1					
ANR	2014284	CFGEntryNode	ENTRY		2014220		True				
ANR	2014285	CFGExitNode	EXIT		2014220		True				
ANR	2014286	Symbol	result		2014220						
ANR	2014287	Symbol	op_str		2014220						
ANR	2014288	Symbol	D_PROCFAMILY		2014220						
ANR	2014289	Symbol	debug_level		2014220						
ANR	2014290	Symbol	NULL		2014220						
ANR	2014291	Symbol	D_ALWAYS		2014220						
ANR	2014292	Symbol	proc_family_error_lookup		2014220						
ANR	2014293	Symbol	error_code		2014220						
ANR	2014294	Symbol	PROC_FAMILY_ERROR_SUCCESS		2014220						
ANR	2014295	Function	ProcFamilyClient :: initialize	47:0:1451:1848							
ANR	2014296	FunctionDef	ProcFamilyClient :: initialize (const char * addr)		2014295	0					
ANR	2014297	CompoundStatement		49:0:1503:1848	2014295	0					
ANR	2014298	Statement	m_client	52:1:1577:1584	2014295	0	True				
ANR	2014299	Statement	=	52:10:1586:1586	2014295	1	True				
ANR	2014300	Statement	new	52:12:1588:1590	2014295	2	True				
ANR	2014301	ExpressionStatement	LocalClient	52:16:1592:1603	2014295	3	True				
ANR	2014302	Identifier	LocalClient		2014295	0					
ANR	2014303	ExpressionStatement	ASSERT ( m_client != NULL )	53:1:1606:1630	2014295	4	True				
ANR	2014304	CallExpression	ASSERT ( m_client != NULL )		2014295	0					
ANR	2014305	Callee	ASSERT		2014295	0					
ANR	2014306	Identifier	ASSERT		2014295	0					
ANR	2014307	ArgumentList	m_client != NULL		2014295	1					
ANR	2014308	Argument	m_client != NULL		2014295	0					
ANR	2014309	EqualityExpression	m_client != NULL		2014295	0		!=			
ANR	2014310	Identifier	m_client		2014295	0					
ANR	2014311	Identifier	NULL		2014295	1					
ANR	2014312	IfStatement	if ( ! m_client -> initialize ( addr ) )		2014295	5					
ANR	2014313	Condition	! m_client -> initialize ( addr )	54:5:1637:1663	2014295	0	True				
ANR	2014314	UnaryOperationExpression	! m_client -> initialize ( addr )		2014295	0					
ANR	2014315	UnaryOperator	!		2014295	0					
ANR	2014316	CallExpression	m_client -> initialize ( addr )		2014295	1					
ANR	2014317	Callee	m_client -> initialize		2014295	0					
ANR	2014318	PtrMemberAccess	m_client -> initialize		2014295	0					
ANR	2014319	Identifier	m_client		2014295	0					
ANR	2014320	Identifier	initialize		2014295	1					
ANR	2014321	ArgumentList	addr		2014295	1					
ANR	2014322	Argument	addr		2014295	0					
ANR	2014323	Identifier	addr		2014295	0					
ANR	2014324	CompoundStatement		6:34:162:162	2014295	1					
ANR	2014325	ExpressionStatement	"dprintf ( D_ALWAYS , ""ProcFamilyClient: error initializing LocalClient\\n"" )"	55:2:1670:1751	2014295	0	True				
ANR	2014326	CallExpression	"dprintf ( D_ALWAYS , ""ProcFamilyClient: error initializing LocalClient\\n"" )"		2014295	0					
ANR	2014327	Callee	dprintf		2014295	0					
ANR	2014328	Identifier	dprintf		2014295	0					
ANR	2014329	ArgumentList	D_ALWAYS		2014295	1					
ANR	2014330	Argument	D_ALWAYS		2014295	0					
ANR	2014331	Identifier	D_ALWAYS		2014295	0					
ANR	2014332	Argument	"""ProcFamilyClient: error initializing LocalClient\\n"""		2014295	1					
ANR	2014333	PrimaryExpression	"""ProcFamilyClient: error initializing LocalClient\\n"""		2014295	0					
ANR	2014334	Statement	delete	57:2:1755:1760	2014295	1	True				
ANR	2014335	ExpressionStatement	m_client	57:9:1762:1770	2014295	2	True				
ANR	2014336	Identifier	m_client		2014295	0					
ANR	2014337	ExpressionStatement	m_client = NULL	58:2:1774:1789	2014295	3	True				
ANR	2014338	AssignmentExpression	m_client = NULL		2014295	0		=			
ANR	2014339	Identifier	m_client		2014295	0					
ANR	2014340	Identifier	NULL		2014295	1					
ANR	2014341	ReturnStatement	return false ;	59:2:1793:1805	2014295	4	True				
ANR	2014342	Identifier	false		2014295	0					
ANR	2014343	ExpressionStatement	m_initialized = true	62:1:1812:1832	2014295	6	True				
ANR	2014344	AssignmentExpression	m_initialized = true		2014295	0		=			
ANR	2014345	Identifier	m_initialized		2014295	0					
ANR	2014346	Identifier	true		2014295	1					
ANR	2014347	ReturnStatement	return true ;	63:1:1835:1846	2014295	7	True				
ANR	2014348	Identifier	true		2014295	0					
ANR	2014349	ReturnType	bool		2014295	1					
ANR	2014350	Identifier	ProcFamilyClient :: initialize		2014295	2					
ANR	2014351	ParameterList	const char * addr		2014295	3					
ANR	2014352	Parameter	const char * addr	48:29:1485:1500	2014295	0	True				
ANR	2014353	ParameterType	const char *		2014295	0					
ANR	2014354	Identifier	addr		2014295	1					
ANR	2014355	CFGEntryNode	ENTRY		2014295		True				
ANR	2014356	CFGExitNode	EXIT		2014295		True				
ANR	2014357	Symbol	m_initialized		2014295						
ANR	2014358	Symbol	NULL		2014295						
ANR	2014359	Symbol	m_client -> initialize		2014295						
ANR	2014360	Symbol	D_ALWAYS		2014295						
ANR	2014361	Symbol	false		2014295						
ANR	2014362	Symbol	true		2014295						
ANR	2014363	Symbol	addr		2014295						
ANR	2014364	Symbol	m_client		2014295						
ANR	2014365	Symbol	* m_client		2014295						
ANR	2014366	Function	ProcFamilyClient :: ~ProcFamilyClient	66:0:1851:2031							
ANR	2014367	FunctionDef	ProcFamilyClient :: ~ProcFamilyClient ()		2014366	0					
ANR	2014368	CompoundStatement		67:0:1889:2031	2014366	0					
ANR	2014369	IfStatement	if ( ! m_initialized )		2014366	0					
ANR	2014370	Condition	! m_initialized	70:5:1943:1956	2014366	0	True				
ANR	2014371	UnaryOperationExpression	! m_initialized		2014366	0					
ANR	2014372	UnaryOperator	!		2014366	0					
ANR	2014373	Identifier	m_initialized		2014366	1					
ANR	2014374	CompoundStatement		4:21:69:69	2014366	1					
ANR	2014375	ReturnStatement	return ;	71:2:1963:1969	2014366	0	True				
ANR	2014376	Statement	delete	76:1:2014:2019	2014366	1	True				
ANR	2014377	ExpressionStatement	m_client	76:8:2021:2029	2014366	2	True				
ANR	2014378	Identifier	m_client		2014366	0					
ANR	2014379	Identifier	ProcFamilyClient :: ~ProcFamilyClient		2014366	1					
ANR	2014380	ParameterList			2014366	2					
ANR	2014381	CFGEntryNode	ENTRY		2014366		True				
ANR	2014382	CFGExitNode	EXIT		2014366		True				
ANR	2014383	Symbol	m_initialized		2014366						
ANR	2014384	Function	ProcFamilyClient :: register_subfamily	79:0:2034:3695							
ANR	2014385	FunctionDef	"ProcFamilyClient :: register_subfamily (pid_t root_pid , pid_t watcher_pid , int max_snapshot_interval , bool & response)"		2014384	0					
ANR	2014386	CompoundStatement		84:0:2265:3695	2014384	0					
ANR	2014387	ExpressionStatement	ASSERT ( m_initialized )	85:1:2268:2289	2014384	0	True				
ANR	2014388	CallExpression	ASSERT ( m_initialized )		2014384	0					
ANR	2014389	Callee	ASSERT		2014384	0					
ANR	2014390	Identifier	ASSERT		2014384	0					
ANR	2014391	ArgumentList	m_initialized		2014384	1					
ANR	2014392	Argument	m_initialized		2014384	0					
ANR	2014393	Identifier	m_initialized		2014384	0					
ANR	2014394	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""About to register family for PID %u with the ProcD\\n"" , root_pid )"	87:1:2293:2398	2014384	1	True				
ANR	2014395	CallExpression	"dprintf ( D_PROCFAMILY , ""About to register family for PID %u with the ProcD\\n"" , root_pid )"		2014384	0					
ANR	2014396	Callee	dprintf		2014384	0					
ANR	2014397	Identifier	dprintf		2014384	0					
ANR	2014398	ArgumentList	D_PROCFAMILY		2014384	1					
ANR	2014399	Argument	D_PROCFAMILY		2014384	0					
ANR	2014400	Identifier	D_PROCFAMILY		2014384	0					
ANR	2014401	Argument	"""About to register family for PID %u with the ProcD\\n"""		2014384	1					
ANR	2014402	PrimaryExpression	"""About to register family for PID %u with the ProcD\\n"""		2014384	0					
ANR	2014403	Argument	root_pid		2014384	2					
ANR	2014404	Identifier	root_pid		2014384	0					
ANR	2014405	IdentifierDeclStatement	int message_len = sizeof ( proc_family_command_t ) + sizeof ( pid_t ) + sizeof ( pid_t ) + sizeof ( int ) ;	91:1:2402:2552	2014384	2	True				
ANR	2014406	IdentifierDecl	message_len = sizeof ( proc_family_command_t ) + sizeof ( pid_t ) + sizeof ( pid_t ) + sizeof ( int )		2014384	0					
ANR	2014407	IdentifierDeclType	int		2014384	0					
ANR	2014408	Identifier	message_len		2014384	1					
ANR	2014409	AssignmentExpression	message_len = sizeof ( proc_family_command_t ) + sizeof ( pid_t ) + sizeof ( pid_t ) + sizeof ( int )		2014384	2		=			
ANR	2014410	Identifier	message_len		2014384	0					
ANR	2014411	AdditiveExpression	sizeof ( proc_family_command_t ) + sizeof ( pid_t ) + sizeof ( pid_t ) + sizeof ( int )		2014384	1		+			
ANR	2014412	SizeofExpression	sizeof ( proc_family_command_t )		2014384	0					
ANR	2014413	Sizeof	sizeof		2014384	0					
ANR	2014414	SizeofOperand	proc_family_command_t		2014384	1					
ANR	2014415	AdditiveExpression	sizeof ( pid_t ) + sizeof ( pid_t ) + sizeof ( int )		2014384	1		+			
ANR	2014416	SizeofExpression	sizeof ( pid_t )		2014384	0					
ANR	2014417	Sizeof	sizeof		2014384	0					
ANR	2014418	SizeofOperand	pid_t		2014384	1					
ANR	2014419	AdditiveExpression	sizeof ( pid_t ) + sizeof ( int )		2014384	1		+			
ANR	2014420	SizeofExpression	sizeof ( pid_t )		2014384	0					
ANR	2014421	Sizeof	sizeof		2014384	0					
ANR	2014422	SizeofOperand	pid_t		2014384	1					
ANR	2014423	SizeofExpression	sizeof ( int )		2014384	1					
ANR	2014424	Sizeof	sizeof		2014384	0					
ANR	2014425	SizeofOperand	int		2014384	1					
ANR	2014426	IdentifierDeclStatement	void * buffer = malloc ( message_len ) ;	95:1:2555:2589	2014384	3	True				
ANR	2014427	IdentifierDecl	* buffer = malloc ( message_len )		2014384	0					
ANR	2014428	IdentifierDeclType	void *		2014384	0					
ANR	2014429	Identifier	buffer		2014384	1					
ANR	2014430	AssignmentExpression	* buffer = malloc ( message_len )		2014384	2		=			
ANR	2014431	Identifier	buffer		2014384	0					
ANR	2014432	CallExpression	malloc ( message_len )		2014384	1					
ANR	2014433	Callee	malloc		2014384	0					
ANR	2014434	Identifier	malloc		2014384	0					
ANR	2014435	ArgumentList	message_len		2014384	1					
ANR	2014436	Argument	message_len		2014384	0					
ANR	2014437	Identifier	message_len		2014384	0					
ANR	2014438	ExpressionStatement	ASSERT ( buffer != NULL )	96:1:2592:2614	2014384	4	True				
ANR	2014439	CallExpression	ASSERT ( buffer != NULL )		2014384	0					
ANR	2014440	Callee	ASSERT		2014384	0					
ANR	2014441	Identifier	ASSERT		2014384	0					
ANR	2014442	ArgumentList	buffer != NULL		2014384	1					
ANR	2014443	Argument	buffer != NULL		2014384	0					
ANR	2014444	EqualityExpression	buffer != NULL		2014384	0		!=			
ANR	2014445	Identifier	buffer		2014384	0					
ANR	2014446	Identifier	NULL		2014384	1					
ANR	2014447	IdentifierDeclStatement	char * ptr = ( char * ) buffer ;	97:1:2617:2642	2014384	5	True				
ANR	2014448	IdentifierDecl	* ptr = ( char * ) buffer		2014384	0					
ANR	2014449	IdentifierDeclType	char *		2014384	0					
ANR	2014450	Identifier	ptr		2014384	1					
ANR	2014451	AssignmentExpression	* ptr = ( char * ) buffer		2014384	2		=			
ANR	2014452	Identifier	ptr		2014384	0					
ANR	2014453	CastExpression	( char * ) buffer		2014384	1					
ANR	2014454	CastTarget	char *		2014384	0					
ANR	2014455	Identifier	buffer		2014384	1					
ANR	2014456	ExpressionStatement	* ( proc_family_command_t * ) ptr = PROC_FAMILY_REGISTER_SUBFAMILY	101:1:2679:2740	2014384	6	True				
ANR	2014457	AssignmentExpression	* ( proc_family_command_t * ) ptr = PROC_FAMILY_REGISTER_SUBFAMILY		2014384	0		=			
ANR	2014458	UnaryOperationExpression	* ( proc_family_command_t * ) ptr		2014384	0					
ANR	2014459	UnaryOperator	*		2014384	0					
ANR	2014460	CastExpression	( proc_family_command_t * ) ptr		2014384	1					
ANR	2014461	CastTarget	proc_family_command_t *		2014384	0					
ANR	2014462	Identifier	ptr		2014384	1					
ANR	2014463	Identifier	PROC_FAMILY_REGISTER_SUBFAMILY		2014384	1					
ANR	2014464	ExpressionStatement	ptr += sizeof ( proc_family_command_t )	102:1:2743:2779	2014384	7	True				
ANR	2014465	AssignmentExpression	ptr += sizeof ( proc_family_command_t )		2014384	0		+=			
ANR	2014466	Identifier	ptr		2014384	0					
ANR	2014467	SizeofExpression	sizeof ( proc_family_command_t )		2014384	1					
ANR	2014468	Sizeof	sizeof		2014384	0					
ANR	2014469	SizeofOperand	proc_family_command_t		2014384	1					
ANR	2014470	ExpressionStatement	* ( pid_t * ) ptr = root_pid	106:1:2812:2835	2014384	8	True				
ANR	2014471	AssignmentExpression	* ( pid_t * ) ptr = root_pid		2014384	0		=			
ANR	2014472	UnaryOperationExpression	* ( pid_t * ) ptr		2014384	0					
ANR	2014473	UnaryOperator	*		2014384	0					
ANR	2014474	CastExpression	( pid_t * ) ptr		2014384	1					
ANR	2014475	CastTarget	pid_t *		2014384	0					
ANR	2014476	Identifier	ptr		2014384	1					
ANR	2014477	Identifier	root_pid		2014384	1					
ANR	2014478	ExpressionStatement	ptr += sizeof ( pid_t )	107:1:2838:2858	2014384	9	True				
ANR	2014479	AssignmentExpression	ptr += sizeof ( pid_t )		2014384	0		+=			
ANR	2014480	Identifier	ptr		2014384	0					
ANR	2014481	SizeofExpression	sizeof ( pid_t )		2014384	1					
ANR	2014482	Sizeof	sizeof		2014384	0					
ANR	2014483	SizeofOperand	pid_t		2014384	1					
ANR	2014484	ExpressionStatement	* ( pid_t * ) ptr = watcher_pid	111:1:2894:2920	2014384	10	True				
ANR	2014485	AssignmentExpression	* ( pid_t * ) ptr = watcher_pid		2014384	0		=			
ANR	2014486	UnaryOperationExpression	* ( pid_t * ) ptr		2014384	0					
ANR	2014487	UnaryOperator	*		2014384	0					
ANR	2014488	CastExpression	( pid_t * ) ptr		2014384	1					
ANR	2014489	CastTarget	pid_t *		2014384	0					
ANR	2014490	Identifier	ptr		2014384	1					
ANR	2014491	Identifier	watcher_pid		2014384	1					
ANR	2014492	ExpressionStatement	ptr += sizeof ( pid_t )	112:1:2923:2943	2014384	11	True				
ANR	2014493	AssignmentExpression	ptr += sizeof ( pid_t )		2014384	0		+=			
ANR	2014494	Identifier	ptr		2014384	0					
ANR	2014495	SizeofExpression	sizeof ( pid_t )		2014384	1					
ANR	2014496	Sizeof	sizeof		2014384	0					
ANR	2014497	SizeofOperand	pid_t		2014384	1					
ANR	2014498	ExpressionStatement	* ( int * ) ptr = max_snapshot_interval	116:1:3003:3037	2014384	12	True				
ANR	2014499	AssignmentExpression	* ( int * ) ptr = max_snapshot_interval		2014384	0		=			
ANR	2014500	UnaryOperationExpression	* ( int * ) ptr		2014384	0					
ANR	2014501	UnaryOperator	*		2014384	0					
ANR	2014502	CastExpression	( int * ) ptr		2014384	1					
ANR	2014503	CastTarget	int *		2014384	0					
ANR	2014504	Identifier	ptr		2014384	1					
ANR	2014505	Identifier	max_snapshot_interval		2014384	1					
ANR	2014506	ExpressionStatement	ptr += sizeof ( int )	117:1:3040:3058	2014384	13	True				
ANR	2014507	AssignmentExpression	ptr += sizeof ( int )		2014384	0		+=			
ANR	2014508	Identifier	ptr		2014384	0					
ANR	2014509	SizeofExpression	sizeof ( int )		2014384	1					
ANR	2014510	Sizeof	sizeof		2014384	0					
ANR	2014511	SizeofOperand	int		2014384	1					
ANR	2014512	ExpressionStatement	ASSERT ( ptr - ( char * ) buffer == message_len )	121:1:3089:3131	2014384	14	True				
ANR	2014513	CallExpression	ASSERT ( ptr - ( char * ) buffer == message_len )		2014384	0					
ANR	2014514	Callee	ASSERT		2014384	0					
ANR	2014515	Identifier	ASSERT		2014384	0					
ANR	2014516	ArgumentList	ptr - ( char * ) buffer == message_len		2014384	1					
ANR	2014517	Argument	ptr - ( char * ) buffer == message_len		2014384	0					
ANR	2014518	EqualityExpression	ptr - ( char * ) buffer == message_len		2014384	0		==			
ANR	2014519	AdditiveExpression	ptr - ( char * ) buffer		2014384	0		-			
ANR	2014520	Identifier	ptr		2014384	0					
ANR	2014521	CastExpression	( char * ) buffer		2014384	1					
ANR	2014522	CastTarget	char *		2014384	0					
ANR	2014523	Identifier	buffer		2014384	1					
ANR	2014524	Identifier	message_len		2014384	1					
ANR	2014525	IfStatement	"if ( ! m_client -> start_connection ( buffer , message_len ) )"		2014384	15					
ANR	2014526	Condition	"! m_client -> start_connection ( buffer , message_len )"	125:5:3173:3220	2014384	0	True				
ANR	2014527	UnaryOperationExpression	"! m_client -> start_connection ( buffer , message_len )"		2014384	0					
ANR	2014528	UnaryOperator	!		2014384	0					
ANR	2014529	CallExpression	"m_client -> start_connection ( buffer , message_len )"		2014384	1					
ANR	2014530	Callee	m_client -> start_connection		2014384	0					
ANR	2014531	PtrMemberAccess	m_client -> start_connection		2014384	0					
ANR	2014532	Identifier	m_client		2014384	0					
ANR	2014533	Identifier	start_connection		2014384	1					
ANR	2014534	ArgumentList	buffer		2014384	1					
ANR	2014535	Argument	buffer		2014384	0					
ANR	2014536	Identifier	buffer		2014384	0					
ANR	2014537	Argument	message_len		2014384	1					
ANR	2014538	Identifier	message_len		2014384	0					
ANR	2014539	CompoundStatement		42:55:957:957	2014384	1					
ANR	2014540	ExpressionStatement	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to start connection with ProcD\\n"" )"	126:2:3227:3315	2014384	0	True				
ANR	2014541	CallExpression	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to start connection with ProcD\\n"" )"		2014384	0					
ANR	2014542	Callee	dprintf		2014384	0					
ANR	2014543	Identifier	dprintf		2014384	0					
ANR	2014544	ArgumentList	D_ALWAYS		2014384	1					
ANR	2014545	Argument	D_ALWAYS		2014384	0					
ANR	2014546	Identifier	D_ALWAYS		2014384	0					
ANR	2014547	Argument	"""ProcFamilyClient: failed to start connection with ProcD\\n"""		2014384	1					
ANR	2014548	PrimaryExpression	"""ProcFamilyClient: failed to start connection with ProcD\\n"""		2014384	0					
ANR	2014549	ExpressionStatement	free ( buffer )	128:2:3319:3331	2014384	1	True				
ANR	2014550	CallExpression	free ( buffer )		2014384	0					
ANR	2014551	Callee	free		2014384	0					
ANR	2014552	Identifier	free		2014384	0					
ANR	2014553	ArgumentList	buffer		2014384	1					
ANR	2014554	Argument	buffer		2014384	0					
ANR	2014555	Identifier	buffer		2014384	0					
ANR	2014556	ReturnStatement	return false ;	129:2:3335:3347	2014384	2	True				
ANR	2014557	Identifier	false		2014384	0					
ANR	2014558	ExpressionStatement	free ( buffer )	131:1:3353:3365	2014384	16	True				
ANR	2014559	CallExpression	free ( buffer )		2014384	0					
ANR	2014560	Callee	free		2014384	0					
ANR	2014561	Identifier	free		2014384	0					
ANR	2014562	ArgumentList	buffer		2014384	1					
ANR	2014563	Argument	buffer		2014384	0					
ANR	2014564	Identifier	buffer		2014384	0					
ANR	2014565	IdentifierDeclStatement	proc_family_error_t err ;	132:1:3368:3391	2014384	17	True				
ANR	2014566	IdentifierDecl	err		2014384	0					
ANR	2014567	IdentifierDeclType	proc_family_error_t		2014384	0					
ANR	2014568	Identifier	err		2014384	1					
ANR	2014569	IfStatement	"if ( ! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) ) )"		2014384	18					
ANR	2014570	Condition	"! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"	133:5:3398:3452	2014384	0	True				
ANR	2014571	UnaryOperationExpression	"! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"		2014384	0					
ANR	2014572	UnaryOperator	!		2014384	0					
ANR	2014573	CallExpression	"m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"		2014384	1					
ANR	2014574	Callee	m_client -> read_data		2014384	0					
ANR	2014575	PtrMemberAccess	m_client -> read_data		2014384	0					
ANR	2014576	Identifier	m_client		2014384	0					
ANR	2014577	Identifier	read_data		2014384	1					
ANR	2014578	ArgumentList	& err		2014384	1					
ANR	2014579	Argument	& err		2014384	0					
ANR	2014580	UnaryOperationExpression	& err		2014384	0					
ANR	2014581	UnaryOperator	&		2014384	0					
ANR	2014582	Identifier	err		2014384	1					
ANR	2014583	Argument	sizeof ( proc_family_error_t )		2014384	1					
ANR	2014584	SizeofExpression	sizeof ( proc_family_error_t )		2014384	0					
ANR	2014585	Sizeof	sizeof		2014384	0					
ANR	2014586	SizeofOperand	proc_family_error_t		2014384	1					
ANR	2014587	CompoundStatement		50:62:1189:1189	2014384	1					
ANR	2014588	ExpressionStatement	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to read response from ProcD\\n"" )"	134:2:3459:3544	2014384	0	True				
ANR	2014589	CallExpression	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to read response from ProcD\\n"" )"		2014384	0					
ANR	2014590	Callee	dprintf		2014384	0					
ANR	2014591	Identifier	dprintf		2014384	0					
ANR	2014592	ArgumentList	D_ALWAYS		2014384	1					
ANR	2014593	Argument	D_ALWAYS		2014384	0					
ANR	2014594	Identifier	D_ALWAYS		2014384	0					
ANR	2014595	Argument	"""ProcFamilyClient: failed to read response from ProcD\\n"""		2014384	1					
ANR	2014596	PrimaryExpression	"""ProcFamilyClient: failed to read response from ProcD\\n"""		2014384	0					
ANR	2014597	ReturnStatement	return false ;	136:2:3548:3560	2014384	1	True				
ANR	2014598	Identifier	false		2014384	0					
ANR	2014599	ExpressionStatement	m_client -> end_connection ( )	138:1:3566:3592	2014384	19	True				
ANR	2014600	CallExpression	m_client -> end_connection ( )		2014384	0					
ANR	2014601	Callee	m_client -> end_connection		2014384	0					
ANR	2014602	PtrMemberAccess	m_client -> end_connection		2014384	0					
ANR	2014603	Identifier	m_client		2014384	0					
ANR	2014604	Identifier	end_connection		2014384	1					
ANR	2014605	ArgumentList			2014384	1					
ANR	2014606	ExpressionStatement	"log_exit ( ""register_subfamily"" , err )"	140:1:3596:3631	2014384	20	True				
ANR	2014607	CallExpression	"log_exit ( ""register_subfamily"" , err )"		2014384	0					
ANR	2014608	Callee	log_exit		2014384	0					
ANR	2014609	Identifier	log_exit		2014384	0					
ANR	2014610	ArgumentList	"""register_subfamily"""		2014384	1					
ANR	2014611	Argument	"""register_subfamily"""		2014384	0					
ANR	2014612	PrimaryExpression	"""register_subfamily"""		2014384	0					
ANR	2014613	Argument	err		2014384	1					
ANR	2014614	Identifier	err		2014384	0					
ANR	2014615	ExpressionStatement	response = ( err == PROC_FAMILY_ERROR_SUCCESS )	141:1:3634:3679	2014384	21	True				
ANR	2014616	AssignmentExpression	response = ( err == PROC_FAMILY_ERROR_SUCCESS )		2014384	0		=			
ANR	2014617	Identifier	response		2014384	0					
ANR	2014618	EqualityExpression	err == PROC_FAMILY_ERROR_SUCCESS		2014384	1		==			
ANR	2014619	Identifier	err		2014384	0					
ANR	2014620	Identifier	PROC_FAMILY_ERROR_SUCCESS		2014384	1					
ANR	2014621	ReturnStatement	return true ;	142:1:3682:3693	2014384	22	True				
ANR	2014622	Identifier	true		2014384	0					
ANR	2014623	ReturnType	bool		2014384	1					
ANR	2014624	Identifier	ProcFamilyClient :: register_subfamily		2014384	2					
ANR	2014625	ParameterList	"pid_t root_pid , pid_t watcher_pid , int max_snapshot_interval , bool & response"		2014384	3					
ANR	2014626	Parameter	pid_t root_pid	80:37:2076:2089	2014384	0	True				
ANR	2014627	ParameterType	pid_t		2014384	0					
ANR	2014628	Identifier	root_pid		2014384	1					
ANR	2014629	Parameter	pid_t watcher_pid	81:37:2129:2145	2014384	1	True				
ANR	2014630	ParameterType	pid_t		2014384	0					
ANR	2014631	Identifier	watcher_pid		2014384	1					
ANR	2014632	Parameter	int max_snapshot_interval	82:37:2185:2209	2014384	2	True				
ANR	2014633	ParameterType	int		2014384	0					
ANR	2014634	Identifier	max_snapshot_interval		2014384	1					
ANR	2014635	Parameter	bool & response	83:37:2249:2262	2014384	3	True				
ANR	2014636	ParameterType	bool &		2014384	0					
ANR	2014637	Identifier	response		2014384	1					
ANR	2014638	CFGEntryNode	ENTRY		2014384		True				
ANR	2014639	CFGExitNode	EXIT		2014384		True				
ANR	2014640	Symbol	m_initialized		2014384						
ANR	2014641	Symbol	m_client -> read_data		2014384						
ANR	2014642	Symbol	D_PROCFAMILY		2014384						
ANR	2014643	Symbol	watcher_pid		2014384						
ANR	2014644	Symbol	& err		2014384						
ANR	2014645	Symbol	* ( pid_t * ) ptr		2014384						
ANR	2014646	Symbol	m_client -> start_connection		2014384						
ANR	2014647	Symbol	* ptr		2014384						
ANR	2014648	Symbol	buffer		2014384						
ANR	2014649	Symbol	malloc		2014384						
ANR	2014650	Symbol	NULL		2014384						
ANR	2014651	Symbol	err		2014384						
ANR	2014652	Symbol	message_len		2014384						
ANR	2014653	Symbol	D_ALWAYS		2014384						
ANR	2014654	Symbol	false		2014384						
ANR	2014655	Symbol	* ( proc_family_command_t * ) ptr		2014384						
ANR	2014656	Symbol	* m_client		2014384						
ANR	2014657	Symbol	ptr		2014384						
ANR	2014658	Symbol	max_snapshot_interval		2014384						
ANR	2014659	Symbol	response		2014384						
ANR	2014660	Symbol	true		2014384						
ANR	2014661	Symbol	PROC_FAMILY_ERROR_SUCCESS		2014384						
ANR	2014662	Symbol	root_pid		2014384						
ANR	2014663	Symbol	PROC_FAMILY_REGISTER_SUBFAMILY		2014384						
ANR	2014664	Symbol	* ( int * ) ptr		2014384						
ANR	2014665	Symbol	m_client		2014384						
ANR	2014666	Function	ProcFamilyClient :: track_family_via_environment	145:0:3698:5161							
ANR	2014667	FunctionDef	"ProcFamilyClient :: track_family_via_environment (pid_t pid , PidEnvID & penvid , bool & response)"		2014666	0					
ANR	2014668	CompoundStatement		149:0:3889:5161	2014666	0					
ANR	2014669	ExpressionStatement	ASSERT ( m_initialized )	150:1:3892:3913	2014666	0	True				
ANR	2014670	CallExpression	ASSERT ( m_initialized )		2014666	0					
ANR	2014671	Callee	ASSERT		2014666	0					
ANR	2014672	Identifier	ASSERT		2014666	0					
ANR	2014673	ArgumentList	m_initialized		2014666	1					
ANR	2014674	Argument	m_initialized		2014666	0					
ANR	2014675	Identifier	m_initialized		2014666	0					
ANR	2014676	Statement	dprintf	152:1:3917:3923	2014666	1	True				
ANR	2014677	Statement	(	152:8:3924:3924	2014666	2	True				
ANR	2014678	Statement	D_PROCFAMILY	152:9:3925:3936	2014666	3	True				
ANR	2014679	Statement	","	152:21:3937:3937	2014666	4	True				
ANR	2014680	Statement	"""About to tell ProcD to track family with root %u """	153:9:3948:3998	2014666	5	True				
ANR	2014681	Statement	"""via environment\\n"""	154:13:4013:4031	2014666	6	True				
ANR	2014682	Statement	","	154:32:4032:4032	2014666	7	True				
ANR	2014683	Statement	pid	155:9:4043:4045	2014666	8	True				
ANR	2014684	Statement	)	155:12:4046:4046	2014666	9	True				
ANR	2014685	ExpressionStatement		155:13:4047:4047	2014666	10	True				
ANR	2014686	IdentifierDeclStatement	int message_len = sizeof ( proc_family_command_t ) + sizeof ( pid_t ) + sizeof ( int ) + sizeof ( PidEnvID ) ;	157:1:4051:4204	2014666	11	True				
ANR	2014687	IdentifierDecl	message_len = sizeof ( proc_family_command_t ) + sizeof ( pid_t ) + sizeof ( int ) + sizeof ( PidEnvID )		2014666	0					
ANR	2014688	IdentifierDeclType	int		2014666	0					
ANR	2014689	Identifier	message_len		2014666	1					
ANR	2014690	AssignmentExpression	message_len = sizeof ( proc_family_command_t ) + sizeof ( pid_t ) + sizeof ( int ) + sizeof ( PidEnvID )		2014666	2		=			
ANR	2014691	Identifier	message_len		2014666	0					
ANR	2014692	AdditiveExpression	sizeof ( proc_family_command_t ) + sizeof ( pid_t ) + sizeof ( int ) + sizeof ( PidEnvID )		2014666	1		+			
ANR	2014693	SizeofExpression	sizeof ( proc_family_command_t )		2014666	0					
ANR	2014694	Sizeof	sizeof		2014666	0					
ANR	2014695	SizeofOperand	proc_family_command_t		2014666	1					
ANR	2014696	AdditiveExpression	sizeof ( pid_t ) + sizeof ( int ) + sizeof ( PidEnvID )		2014666	1		+			
ANR	2014697	SizeofExpression	sizeof ( pid_t )		2014666	0					
ANR	2014698	Sizeof	sizeof		2014666	0					
ANR	2014699	SizeofOperand	pid_t		2014666	1					
ANR	2014700	AdditiveExpression	sizeof ( int ) + sizeof ( PidEnvID )		2014666	1		+			
ANR	2014701	SizeofExpression	sizeof ( int )		2014666	0					
ANR	2014702	Sizeof	sizeof		2014666	0					
ANR	2014703	SizeofOperand	int		2014666	1					
ANR	2014704	SizeofExpression	sizeof ( PidEnvID )		2014666	1					
ANR	2014705	Sizeof	sizeof		2014666	0					
ANR	2014706	SizeofOperand	PidEnvID		2014666	1					
ANR	2014707	IdentifierDeclStatement	void * buffer = malloc ( message_len ) ;	161:1:4207:4241	2014666	12	True				
ANR	2014708	IdentifierDecl	* buffer = malloc ( message_len )		2014666	0					
ANR	2014709	IdentifierDeclType	void *		2014666	0					
ANR	2014710	Identifier	buffer		2014666	1					
ANR	2014711	AssignmentExpression	* buffer = malloc ( message_len )		2014666	2		=			
ANR	2014712	Identifier	buffer		2014666	0					
ANR	2014713	CallExpression	malloc ( message_len )		2014666	1					
ANR	2014714	Callee	malloc		2014666	0					
ANR	2014715	Identifier	malloc		2014666	0					
ANR	2014716	ArgumentList	message_len		2014666	1					
ANR	2014717	Argument	message_len		2014666	0					
ANR	2014718	Identifier	message_len		2014666	0					
ANR	2014719	ExpressionStatement	ASSERT ( buffer != NULL )	162:1:4244:4266	2014666	13	True				
ANR	2014720	CallExpression	ASSERT ( buffer != NULL )		2014666	0					
ANR	2014721	Callee	ASSERT		2014666	0					
ANR	2014722	Identifier	ASSERT		2014666	0					
ANR	2014723	ArgumentList	buffer != NULL		2014666	1					
ANR	2014724	Argument	buffer != NULL		2014666	0					
ANR	2014725	EqualityExpression	buffer != NULL		2014666	0		!=			
ANR	2014726	Identifier	buffer		2014666	0					
ANR	2014727	Identifier	NULL		2014666	1					
ANR	2014728	IdentifierDeclStatement	char * ptr = ( char * ) buffer ;	163:1:4269:4294	2014666	14	True				
ANR	2014729	IdentifierDecl	* ptr = ( char * ) buffer		2014666	0					
ANR	2014730	IdentifierDeclType	char *		2014666	0					
ANR	2014731	Identifier	ptr		2014666	1					
ANR	2014732	AssignmentExpression	* ptr = ( char * ) buffer		2014666	2		=			
ANR	2014733	Identifier	ptr		2014666	0					
ANR	2014734	CastExpression	( char * ) buffer		2014666	1					
ANR	2014735	CastTarget	char *		2014666	0					
ANR	2014736	Identifier	buffer		2014666	1					
ANR	2014737	ExpressionStatement	* ( proc_family_command_t * ) ptr = PROC_FAMILY_TRACK_FAMILY_VIA_ENVIRONMENT	165:1:4298:4369	2014666	15	True				
ANR	2014738	AssignmentExpression	* ( proc_family_command_t * ) ptr = PROC_FAMILY_TRACK_FAMILY_VIA_ENVIRONMENT		2014666	0		=			
ANR	2014739	UnaryOperationExpression	* ( proc_family_command_t * ) ptr		2014666	0					
ANR	2014740	UnaryOperator	*		2014666	0					
ANR	2014741	CastExpression	( proc_family_command_t * ) ptr		2014666	1					
ANR	2014742	CastTarget	proc_family_command_t *		2014666	0					
ANR	2014743	Identifier	ptr		2014666	1					
ANR	2014744	Identifier	PROC_FAMILY_TRACK_FAMILY_VIA_ENVIRONMENT		2014666	1					
ANR	2014745	ExpressionStatement	ptr += sizeof ( proc_family_command_t )	166:1:4372:4408	2014666	16	True				
ANR	2014746	AssignmentExpression	ptr += sizeof ( proc_family_command_t )		2014666	0		+=			
ANR	2014747	Identifier	ptr		2014666	0					
ANR	2014748	SizeofExpression	sizeof ( proc_family_command_t )		2014666	1					
ANR	2014749	Sizeof	sizeof		2014666	0					
ANR	2014750	SizeofOperand	proc_family_command_t		2014666	1					
ANR	2014751	ExpressionStatement	* ( pid_t * ) ptr = pid	168:1:4412:4430	2014666	17	True				
ANR	2014752	AssignmentExpression	* ( pid_t * ) ptr = pid		2014666	0		=			
ANR	2014753	UnaryOperationExpression	* ( pid_t * ) ptr		2014666	0					
ANR	2014754	UnaryOperator	*		2014666	0					
ANR	2014755	CastExpression	( pid_t * ) ptr		2014666	1					
ANR	2014756	CastTarget	pid_t *		2014666	0					
ANR	2014757	Identifier	ptr		2014666	1					
ANR	2014758	Identifier	pid		2014666	1					
ANR	2014759	ExpressionStatement	ptr += sizeof ( pid_t )	169:1:4433:4453	2014666	18	True				
ANR	2014760	AssignmentExpression	ptr += sizeof ( pid_t )		2014666	0		+=			
ANR	2014761	Identifier	ptr		2014666	0					
ANR	2014762	SizeofExpression	sizeof ( pid_t )		2014666	1					
ANR	2014763	Sizeof	sizeof		2014666	0					
ANR	2014764	SizeofOperand	pid_t		2014666	1					
ANR	2014765	ExpressionStatement	* ( int * ) ptr = sizeof ( PidEnvID )	171:1:4457:4486	2014666	19	True				
ANR	2014766	AssignmentExpression	* ( int * ) ptr = sizeof ( PidEnvID )		2014666	0		=			
ANR	2014767	UnaryOperationExpression	* ( int * ) ptr		2014666	0					
ANR	2014768	UnaryOperator	*		2014666	0					
ANR	2014769	CastExpression	( int * ) ptr		2014666	1					
ANR	2014770	CastTarget	int *		2014666	0					
ANR	2014771	Identifier	ptr		2014666	1					
ANR	2014772	SizeofExpression	sizeof ( PidEnvID )		2014666	1					
ANR	2014773	Sizeof	sizeof		2014666	0					
ANR	2014774	SizeofOperand	PidEnvID		2014666	1					
ANR	2014775	ExpressionStatement	ptr += sizeof ( int )	172:1:4489:4507	2014666	20	True				
ANR	2014776	AssignmentExpression	ptr += sizeof ( int )		2014666	0		+=			
ANR	2014777	Identifier	ptr		2014666	0					
ANR	2014778	SizeofExpression	sizeof ( int )		2014666	1					
ANR	2014779	Sizeof	sizeof		2014666	0					
ANR	2014780	SizeofOperand	int		2014666	1					
ANR	2014781	ExpressionStatement	"pidenvid_copy ( ( PidEnvID * ) ptr , & penvid )"	174:1:4511:4549	2014666	21	True				
ANR	2014782	CallExpression	"pidenvid_copy ( ( PidEnvID * ) ptr , & penvid )"		2014666	0					
ANR	2014783	Callee	pidenvid_copy		2014666	0					
ANR	2014784	Identifier	pidenvid_copy		2014666	0					
ANR	2014785	ArgumentList	( PidEnvID * ) ptr		2014666	1					
ANR	2014786	Argument	( PidEnvID * ) ptr		2014666	0					
ANR	2014787	CastExpression	( PidEnvID * ) ptr		2014666	0					
ANR	2014788	CastTarget	PidEnvID *		2014666	0					
ANR	2014789	Identifier	ptr		2014666	1					
ANR	2014790	Argument	& penvid		2014666	1					
ANR	2014791	UnaryOperationExpression	& penvid		2014666	0					
ANR	2014792	UnaryOperator	&		2014666	0					
ANR	2014793	Identifier	penvid		2014666	1					
ANR	2014794	ExpressionStatement	ptr += sizeof ( PidEnvID )	175:1:4552:4575	2014666	22	True				
ANR	2014795	AssignmentExpression	ptr += sizeof ( PidEnvID )		2014666	0		+=			
ANR	2014796	Identifier	ptr		2014666	0					
ANR	2014797	SizeofExpression	sizeof ( PidEnvID )		2014666	1					
ANR	2014798	Sizeof	sizeof		2014666	0					
ANR	2014799	SizeofOperand	PidEnvID		2014666	1					
ANR	2014800	ExpressionStatement	ASSERT ( ptr - ( char * ) buffer == message_len )	177:1:4579:4621	2014666	23	True				
ANR	2014801	CallExpression	ASSERT ( ptr - ( char * ) buffer == message_len )		2014666	0					
ANR	2014802	Callee	ASSERT		2014666	0					
ANR	2014803	Identifier	ASSERT		2014666	0					
ANR	2014804	ArgumentList	ptr - ( char * ) buffer == message_len		2014666	1					
ANR	2014805	Argument	ptr - ( char * ) buffer == message_len		2014666	0					
ANR	2014806	EqualityExpression	ptr - ( char * ) buffer == message_len		2014666	0		==			
ANR	2014807	AdditiveExpression	ptr - ( char * ) buffer		2014666	0		-			
ANR	2014808	Identifier	ptr		2014666	0					
ANR	2014809	CastExpression	( char * ) buffer		2014666	1					
ANR	2014810	CastTarget	char *		2014666	0					
ANR	2014811	Identifier	buffer		2014666	1					
ANR	2014812	Identifier	message_len		2014666	1					
ANR	2014813	IfStatement	"if ( ! m_client -> start_connection ( buffer , message_len ) )"		2014666	24					
ANR	2014814	Condition	"! m_client -> start_connection ( buffer , message_len )"	179:5:4629:4676	2014666	0	True				
ANR	2014815	UnaryOperationExpression	"! m_client -> start_connection ( buffer , message_len )"		2014666	0					
ANR	2014816	UnaryOperator	!		2014666	0					
ANR	2014817	CallExpression	"m_client -> start_connection ( buffer , message_len )"		2014666	1					
ANR	2014818	Callee	m_client -> start_connection		2014666	0					
ANR	2014819	PtrMemberAccess	m_client -> start_connection		2014666	0					
ANR	2014820	Identifier	m_client		2014666	0					
ANR	2014821	Identifier	start_connection		2014666	1					
ANR	2014822	ArgumentList	buffer		2014666	1					
ANR	2014823	Argument	buffer		2014666	0					
ANR	2014824	Identifier	buffer		2014666	0					
ANR	2014825	Argument	message_len		2014666	1					
ANR	2014826	Identifier	message_len		2014666	0					
ANR	2014827	CompoundStatement		31:55:789:789	2014666	1					
ANR	2014828	ExpressionStatement	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to start connection with ProcD\\n"" )"	180:2:4683:4771	2014666	0	True				
ANR	2014829	CallExpression	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to start connection with ProcD\\n"" )"		2014666	0					
ANR	2014830	Callee	dprintf		2014666	0					
ANR	2014831	Identifier	dprintf		2014666	0					
ANR	2014832	ArgumentList	D_ALWAYS		2014666	1					
ANR	2014833	Argument	D_ALWAYS		2014666	0					
ANR	2014834	Identifier	D_ALWAYS		2014666	0					
ANR	2014835	Argument	"""ProcFamilyClient: failed to start connection with ProcD\\n"""		2014666	1					
ANR	2014836	PrimaryExpression	"""ProcFamilyClient: failed to start connection with ProcD\\n"""		2014666	0					
ANR	2014837	ExpressionStatement	free ( buffer )	182:2:4775:4787	2014666	1	True				
ANR	2014838	CallExpression	free ( buffer )		2014666	0					
ANR	2014839	Callee	free		2014666	0					
ANR	2014840	Identifier	free		2014666	0					
ANR	2014841	ArgumentList	buffer		2014666	1					
ANR	2014842	Argument	buffer		2014666	0					
ANR	2014843	Identifier	buffer		2014666	0					
ANR	2014844	ReturnStatement	return false ;	183:2:4791:4803	2014666	2	True				
ANR	2014845	Identifier	false		2014666	0					
ANR	2014846	ExpressionStatement	free ( buffer )	185:1:4809:4821	2014666	25	True				
ANR	2014847	CallExpression	free ( buffer )		2014666	0					
ANR	2014848	Callee	free		2014666	0					
ANR	2014849	Identifier	free		2014666	0					
ANR	2014850	ArgumentList	buffer		2014666	1					
ANR	2014851	Argument	buffer		2014666	0					
ANR	2014852	Identifier	buffer		2014666	0					
ANR	2014853	IdentifierDeclStatement	proc_family_error_t err ;	186:1:4824:4847	2014666	26	True				
ANR	2014854	IdentifierDecl	err		2014666	0					
ANR	2014855	IdentifierDeclType	proc_family_error_t		2014666	0					
ANR	2014856	Identifier	err		2014666	1					
ANR	2014857	IfStatement	"if ( ! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) ) )"		2014666	27					
ANR	2014858	Condition	"! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"	187:5:4854:4908	2014666	0	True				
ANR	2014859	UnaryOperationExpression	"! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"		2014666	0					
ANR	2014860	UnaryOperator	!		2014666	0					
ANR	2014861	CallExpression	"m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"		2014666	1					
ANR	2014862	Callee	m_client -> read_data		2014666	0					
ANR	2014863	PtrMemberAccess	m_client -> read_data		2014666	0					
ANR	2014864	Identifier	m_client		2014666	0					
ANR	2014865	Identifier	read_data		2014666	1					
ANR	2014866	ArgumentList	& err		2014666	1					
ANR	2014867	Argument	& err		2014666	0					
ANR	2014868	UnaryOperationExpression	& err		2014666	0					
ANR	2014869	UnaryOperator	&		2014666	0					
ANR	2014870	Identifier	err		2014666	1					
ANR	2014871	Argument	sizeof ( proc_family_error_t )		2014666	1					
ANR	2014872	SizeofExpression	sizeof ( proc_family_error_t )		2014666	0					
ANR	2014873	Sizeof	sizeof		2014666	0					
ANR	2014874	SizeofOperand	proc_family_error_t		2014666	1					
ANR	2014875	CompoundStatement		39:62:1021:1021	2014666	1					
ANR	2014876	ExpressionStatement	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to read response from ProcD\\n"" )"	188:2:4915:5000	2014666	0	True				
ANR	2014877	CallExpression	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to read response from ProcD\\n"" )"		2014666	0					
ANR	2014878	Callee	dprintf		2014666	0					
ANR	2014879	Identifier	dprintf		2014666	0					
ANR	2014880	ArgumentList	D_ALWAYS		2014666	1					
ANR	2014881	Argument	D_ALWAYS		2014666	0					
ANR	2014882	Identifier	D_ALWAYS		2014666	0					
ANR	2014883	Argument	"""ProcFamilyClient: failed to read response from ProcD\\n"""		2014666	1					
ANR	2014884	PrimaryExpression	"""ProcFamilyClient: failed to read response from ProcD\\n"""		2014666	0					
ANR	2014885	ReturnStatement	return false ;	190:2:5004:5016	2014666	1	True				
ANR	2014886	Identifier	false		2014666	0					
ANR	2014887	ExpressionStatement	m_client -> end_connection ( )	192:1:5022:5048	2014666	28	True				
ANR	2014888	CallExpression	m_client -> end_connection ( )		2014666	0					
ANR	2014889	Callee	m_client -> end_connection		2014666	0					
ANR	2014890	PtrMemberAccess	m_client -> end_connection		2014666	0					
ANR	2014891	Identifier	m_client		2014666	0					
ANR	2014892	Identifier	end_connection		2014666	1					
ANR	2014893	ArgumentList			2014666	1					
ANR	2014894	ExpressionStatement	"log_exit ( ""track_family_via_environment"" , err )"	194:1:5052:5097	2014666	29	True				
ANR	2014895	CallExpression	"log_exit ( ""track_family_via_environment"" , err )"		2014666	0					
ANR	2014896	Callee	log_exit		2014666	0					
ANR	2014897	Identifier	log_exit		2014666	0					
ANR	2014898	ArgumentList	"""track_family_via_environment"""		2014666	1					
ANR	2014899	Argument	"""track_family_via_environment"""		2014666	0					
ANR	2014900	PrimaryExpression	"""track_family_via_environment"""		2014666	0					
ANR	2014901	Argument	err		2014666	1					
ANR	2014902	Identifier	err		2014666	0					
ANR	2014903	ExpressionStatement	response = ( err == PROC_FAMILY_ERROR_SUCCESS )	195:1:5100:5145	2014666	30	True				
ANR	2014904	AssignmentExpression	response = ( err == PROC_FAMILY_ERROR_SUCCESS )		2014666	0		=			
ANR	2014905	Identifier	response		2014666	0					
ANR	2014906	EqualityExpression	err == PROC_FAMILY_ERROR_SUCCESS		2014666	1		==			
ANR	2014907	Identifier	err		2014666	0					
ANR	2014908	Identifier	PROC_FAMILY_ERROR_SUCCESS		2014666	1					
ANR	2014909	ReturnStatement	return true ;	196:1:5148:5159	2014666	31	True				
ANR	2014910	Identifier	true		2014666	0					
ANR	2014911	ReturnType	bool		2014666	1					
ANR	2014912	Identifier	ProcFamilyClient :: track_family_via_environment		2014666	2					
ANR	2014913	ParameterList	"pid_t pid , PidEnvID & penvid , bool & response"		2014666	3					
ANR	2014914	Parameter	pid_t pid	146:47:3750:3758	2014666	0	True				
ANR	2014915	ParameterType	pid_t		2014666	0					
ANR	2014916	Identifier	pid		2014666	1					
ANR	2014917	Parameter	PidEnvID & penvid	147:47:3808:3823	2014666	1	True				
ANR	2014918	ParameterType	PidEnvID &		2014666	0					
ANR	2014919	Identifier	penvid		2014666	1					
ANR	2014920	Parameter	bool & response	148:47:3873:3886	2014666	2	True				
ANR	2014921	ParameterType	bool &		2014666	0					
ANR	2014922	Identifier	response		2014666	1					
ANR	2014923	CFGEntryNode	ENTRY		2014666		True				
ANR	2014924	CFGExitNode	EXIT		2014666		True				
ANR	2014925	Symbol	m_initialized		2014666						
ANR	2014926	Symbol	m_client -> read_data		2014666						
ANR	2014927	Symbol	& penvid		2014666						
ANR	2014928	Symbol	pid		2014666						
ANR	2014929	Symbol	& err		2014666						
ANR	2014930	Symbol	* ( pid_t * ) ptr		2014666						
ANR	2014931	Symbol	m_client -> start_connection		2014666						
ANR	2014932	Symbol	* ptr		2014666						
ANR	2014933	Symbol	buffer		2014666						
ANR	2014934	Symbol	malloc		2014666						
ANR	2014935	Symbol	PROC_FAMILY_TRACK_FAMILY_VIA_ENVIRONMENT		2014666						
ANR	2014936	Symbol	NULL		2014666						
ANR	2014937	Symbol	err		2014666						
ANR	2014938	Symbol	message_len		2014666						
ANR	2014939	Symbol	D_ALWAYS		2014666						
ANR	2014940	Symbol	false		2014666						
ANR	2014941	Symbol	* ( proc_family_command_t * ) ptr		2014666						
ANR	2014942	Symbol	* m_client		2014666						
ANR	2014943	Symbol	ptr		2014666						
ANR	2014944	Symbol	response		2014666						
ANR	2014945	Symbol	true		2014666						
ANR	2014946	Symbol	penvid		2014666						
ANR	2014947	Symbol	PROC_FAMILY_ERROR_SUCCESS		2014666						
ANR	2014948	Symbol	* ( int * ) ptr		2014666						
ANR	2014949	Symbol	m_client		2014666						
ANR	2014950	Function	ProcFamilyClient :: track_family_via_login	199:0:5164:6617							
ANR	2014951	FunctionDef	"ProcFamilyClient :: track_family_via_login (pid_t pid , const char * login , bool & response)"		2014950	0					
ANR	2014952	CompoundStatement		203:0:5338:6617	2014950	0					
ANR	2014953	ExpressionStatement	ASSERT ( m_initialized )	204:1:5341:5362	2014950	0	True				
ANR	2014954	CallExpression	ASSERT ( m_initialized )		2014950	0					
ANR	2014955	Callee	ASSERT		2014950	0					
ANR	2014956	Identifier	ASSERT		2014950	0					
ANR	2014957	ArgumentList	m_initialized		2014950	1					
ANR	2014958	Argument	m_initialized		2014950	0					
ANR	2014959	Identifier	m_initialized		2014950	0					
ANR	2014960	Statement	dprintf	206:1:5366:5372	2014950	1	True				
ANR	2014961	Statement	(	206:8:5373:5373	2014950	2	True				
ANR	2014962	Statement	D_PROCFAMILY	206:9:5374:5385	2014950	3	True				
ANR	2014963	Statement	","	206:21:5386:5386	2014950	4	True				
ANR	2014964	Statement	"""About to tell ProcD to track family with root %u """	207:9:5397:5447	2014950	5	True				
ANR	2014965	Statement	"""via login %s\\n"""	208:13:5462:5477	2014950	6	True				
ANR	2014966	Statement	","	208:29:5478:5478	2014950	7	True				
ANR	2014967	Statement	pid	209:9:5489:5491	2014950	8	True				
ANR	2014968	Statement	","	209:12:5492:5492	2014950	9	True				
ANR	2014969	Statement	login	210:9:5503:5507	2014950	10	True				
ANR	2014970	Statement	)	210:14:5508:5508	2014950	11	True				
ANR	2014971	ExpressionStatement		210:15:5509:5509	2014950	12	True				
ANR	2014972	IdentifierDeclStatement	int login_len = strlen ( login ) + 1 ;	212:1:5513:5546	2014950	13	True				
ANR	2014973	IdentifierDecl	login_len = strlen ( login ) + 1		2014950	0					
ANR	2014974	IdentifierDeclType	int		2014950	0					
ANR	2014975	Identifier	login_len		2014950	1					
ANR	2014976	AssignmentExpression	login_len = strlen ( login ) + 1		2014950	2		=			
ANR	2014977	Identifier	login_len		2014950	0					
ANR	2014978	AdditiveExpression	strlen ( login ) + 1		2014950	1		+			
ANR	2014979	CallExpression	strlen ( login )		2014950	0					
ANR	2014980	Callee	strlen		2014950	0					
ANR	2014981	Identifier	strlen		2014950	0					
ANR	2014982	ArgumentList	login		2014950	1					
ANR	2014983	Argument	login		2014950	0					
ANR	2014984	Identifier	login		2014950	0					
ANR	2014985	PrimaryExpression	1		2014950	1					
ANR	2014986	IdentifierDeclStatement	int message_len = sizeof ( proc_family_command_t ) + sizeof ( pid_t ) + sizeof ( int ) + login_len ;	213:1:5549:5695	2014950	14	True				
ANR	2014987	IdentifierDecl	message_len = sizeof ( proc_family_command_t ) + sizeof ( pid_t ) + sizeof ( int ) + login_len		2014950	0					
ANR	2014988	IdentifierDeclType	int		2014950	0					
ANR	2014989	Identifier	message_len		2014950	1					
ANR	2014990	AssignmentExpression	message_len = sizeof ( proc_family_command_t ) + sizeof ( pid_t ) + sizeof ( int ) + login_len		2014950	2		=			
ANR	2014991	Identifier	message_len		2014950	0					
ANR	2014992	AdditiveExpression	sizeof ( proc_family_command_t ) + sizeof ( pid_t ) + sizeof ( int ) + login_len		2014950	1		+			
ANR	2014993	SizeofExpression	sizeof ( proc_family_command_t )		2014950	0					
ANR	2014994	Sizeof	sizeof		2014950	0					
ANR	2014995	SizeofOperand	proc_family_command_t		2014950	1					
ANR	2014996	AdditiveExpression	sizeof ( pid_t ) + sizeof ( int ) + login_len		2014950	1		+			
ANR	2014997	SizeofExpression	sizeof ( pid_t )		2014950	0					
ANR	2014998	Sizeof	sizeof		2014950	0					
ANR	2014999	SizeofOperand	pid_t		2014950	1					
ANR	2015000	AdditiveExpression	sizeof ( int ) + login_len		2014950	1		+			
ANR	2015001	SizeofExpression	sizeof ( int )		2014950	0					
ANR	2015002	Sizeof	sizeof		2014950	0					
ANR	2015003	SizeofOperand	int		2014950	1					
ANR	2015004	Identifier	login_len		2014950	1					
ANR	2015005	IdentifierDeclStatement	void * buffer = malloc ( message_len ) ;	217:1:5698:5732	2014950	15	True				
ANR	2015006	IdentifierDecl	* buffer = malloc ( message_len )		2014950	0					
ANR	2015007	IdentifierDeclType	void *		2014950	0					
ANR	2015008	Identifier	buffer		2014950	1					
ANR	2015009	AssignmentExpression	* buffer = malloc ( message_len )		2014950	2		=			
ANR	2015010	Identifier	buffer		2014950	0					
ANR	2015011	CallExpression	malloc ( message_len )		2014950	1					
ANR	2015012	Callee	malloc		2014950	0					
ANR	2015013	Identifier	malloc		2014950	0					
ANR	2015014	ArgumentList	message_len		2014950	1					
ANR	2015015	Argument	message_len		2014950	0					
ANR	2015016	Identifier	message_len		2014950	0					
ANR	2015017	ExpressionStatement	ASSERT ( buffer != NULL )	218:1:5735:5757	2014950	16	True				
ANR	2015018	CallExpression	ASSERT ( buffer != NULL )		2014950	0					
ANR	2015019	Callee	ASSERT		2014950	0					
ANR	2015020	Identifier	ASSERT		2014950	0					
ANR	2015021	ArgumentList	buffer != NULL		2014950	1					
ANR	2015022	Argument	buffer != NULL		2014950	0					
ANR	2015023	EqualityExpression	buffer != NULL		2014950	0		!=			
ANR	2015024	Identifier	buffer		2014950	0					
ANR	2015025	Identifier	NULL		2014950	1					
ANR	2015026	IdentifierDeclStatement	char * ptr = ( char * ) buffer ;	219:1:5760:5785	2014950	17	True				
ANR	2015027	IdentifierDecl	* ptr = ( char * ) buffer		2014950	0					
ANR	2015028	IdentifierDeclType	char *		2014950	0					
ANR	2015029	Identifier	ptr		2014950	1					
ANR	2015030	AssignmentExpression	* ptr = ( char * ) buffer		2014950	2		=			
ANR	2015031	Identifier	ptr		2014950	0					
ANR	2015032	CastExpression	( char * ) buffer		2014950	1					
ANR	2015033	CastTarget	char *		2014950	0					
ANR	2015034	Identifier	buffer		2014950	1					
ANR	2015035	ExpressionStatement	* ( proc_family_command_t * ) ptr = PROC_FAMILY_TRACK_FAMILY_VIA_LOGIN	221:1:5789:5854	2014950	18	True				
ANR	2015036	AssignmentExpression	* ( proc_family_command_t * ) ptr = PROC_FAMILY_TRACK_FAMILY_VIA_LOGIN		2014950	0		=			
ANR	2015037	UnaryOperationExpression	* ( proc_family_command_t * ) ptr		2014950	0					
ANR	2015038	UnaryOperator	*		2014950	0					
ANR	2015039	CastExpression	( proc_family_command_t * ) ptr		2014950	1					
ANR	2015040	CastTarget	proc_family_command_t *		2014950	0					
ANR	2015041	Identifier	ptr		2014950	1					
ANR	2015042	Identifier	PROC_FAMILY_TRACK_FAMILY_VIA_LOGIN		2014950	1					
ANR	2015043	ExpressionStatement	ptr += sizeof ( proc_family_command_t )	222:1:5857:5893	2014950	19	True				
ANR	2015044	AssignmentExpression	ptr += sizeof ( proc_family_command_t )		2014950	0		+=			
ANR	2015045	Identifier	ptr		2014950	0					
ANR	2015046	SizeofExpression	sizeof ( proc_family_command_t )		2014950	1					
ANR	2015047	Sizeof	sizeof		2014950	0					
ANR	2015048	SizeofOperand	proc_family_command_t		2014950	1					
ANR	2015049	ExpressionStatement	* ( pid_t * ) ptr = pid	224:1:5897:5915	2014950	20	True				
ANR	2015050	AssignmentExpression	* ( pid_t * ) ptr = pid		2014950	0		=			
ANR	2015051	UnaryOperationExpression	* ( pid_t * ) ptr		2014950	0					
ANR	2015052	UnaryOperator	*		2014950	0					
ANR	2015053	CastExpression	( pid_t * ) ptr		2014950	1					
ANR	2015054	CastTarget	pid_t *		2014950	0					
ANR	2015055	Identifier	ptr		2014950	1					
ANR	2015056	Identifier	pid		2014950	1					
ANR	2015057	ExpressionStatement	ptr += sizeof ( pid_t )	225:1:5918:5938	2014950	21	True				
ANR	2015058	AssignmentExpression	ptr += sizeof ( pid_t )		2014950	0		+=			
ANR	2015059	Identifier	ptr		2014950	0					
ANR	2015060	SizeofExpression	sizeof ( pid_t )		2014950	1					
ANR	2015061	Sizeof	sizeof		2014950	0					
ANR	2015062	SizeofOperand	pid_t		2014950	1					
ANR	2015063	ExpressionStatement	* ( int * ) ptr = login_len	227:1:5942:5964	2014950	22	True				
ANR	2015064	AssignmentExpression	* ( int * ) ptr = login_len		2014950	0		=			
ANR	2015065	UnaryOperationExpression	* ( int * ) ptr		2014950	0					
ANR	2015066	UnaryOperator	*		2014950	0					
ANR	2015067	CastExpression	( int * ) ptr		2014950	1					
ANR	2015068	CastTarget	int *		2014950	0					
ANR	2015069	Identifier	ptr		2014950	1					
ANR	2015070	Identifier	login_len		2014950	1					
ANR	2015071	ExpressionStatement	ptr += sizeof ( int )	228:1:5967:5985	2014950	23	True				
ANR	2015072	AssignmentExpression	ptr += sizeof ( int )		2014950	0		+=			
ANR	2015073	Identifier	ptr		2014950	0					
ANR	2015074	SizeofExpression	sizeof ( int )		2014950	1					
ANR	2015075	Sizeof	sizeof		2014950	0					
ANR	2015076	SizeofOperand	int		2014950	1					
ANR	2015077	ExpressionStatement	"memcpy ( ptr , login , login_len )"	230:1:5989:6018	2014950	24	True				
ANR	2015078	CallExpression	"memcpy ( ptr , login , login_len )"		2014950	0					
ANR	2015079	Callee	memcpy		2014950	0					
ANR	2015080	Identifier	memcpy		2014950	0					
ANR	2015081	ArgumentList	ptr		2014950	1					
ANR	2015082	Argument	ptr		2014950	0					
ANR	2015083	Identifier	ptr		2014950	0					
ANR	2015084	Argument	login		2014950	1					
ANR	2015085	Identifier	login		2014950	0					
ANR	2015086	Argument	login_len		2014950	2					
ANR	2015087	Identifier	login_len		2014950	0					
ANR	2015088	ExpressionStatement	ptr += login_len	231:1:6021:6037	2014950	25	True				
ANR	2015089	AssignmentExpression	ptr += login_len		2014950	0		+=			
ANR	2015090	Identifier	ptr		2014950	0					
ANR	2015091	Identifier	login_len		2014950	1					
ANR	2015092	ExpressionStatement	ASSERT ( ptr - ( char * ) buffer == message_len )	233:1:6041:6083	2014950	26	True				
ANR	2015093	CallExpression	ASSERT ( ptr - ( char * ) buffer == message_len )		2014950	0					
ANR	2015094	Callee	ASSERT		2014950	0					
ANR	2015095	Identifier	ASSERT		2014950	0					
ANR	2015096	ArgumentList	ptr - ( char * ) buffer == message_len		2014950	1					
ANR	2015097	Argument	ptr - ( char * ) buffer == message_len		2014950	0					
ANR	2015098	EqualityExpression	ptr - ( char * ) buffer == message_len		2014950	0		==			
ANR	2015099	AdditiveExpression	ptr - ( char * ) buffer		2014950	0		-			
ANR	2015100	Identifier	ptr		2014950	0					
ANR	2015101	CastExpression	( char * ) buffer		2014950	1					
ANR	2015102	CastTarget	char *		2014950	0					
ANR	2015103	Identifier	buffer		2014950	1					
ANR	2015104	Identifier	message_len		2014950	1					
ANR	2015105	IfStatement	"if ( ! m_client -> start_connection ( buffer , message_len ) )"		2014950	27					
ANR	2015106	Condition	"! m_client -> start_connection ( buffer , message_len )"	235:5:6091:6138	2014950	0	True				
ANR	2015107	UnaryOperationExpression	"! m_client -> start_connection ( buffer , message_len )"		2014950	0					
ANR	2015108	UnaryOperator	!		2014950	0					
ANR	2015109	CallExpression	"m_client -> start_connection ( buffer , message_len )"		2014950	1					
ANR	2015110	Callee	m_client -> start_connection		2014950	0					
ANR	2015111	PtrMemberAccess	m_client -> start_connection		2014950	0					
ANR	2015112	Identifier	m_client		2014950	0					
ANR	2015113	Identifier	start_connection		2014950	1					
ANR	2015114	ArgumentList	buffer		2014950	1					
ANR	2015115	Argument	buffer		2014950	0					
ANR	2015116	Identifier	buffer		2014950	0					
ANR	2015117	Argument	message_len		2014950	1					
ANR	2015118	Identifier	message_len		2014950	0					
ANR	2015119	CompoundStatement		33:55:802:802	2014950	1					
ANR	2015120	ExpressionStatement	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to start connection with ProcD\\n"" )"	236:2:6145:6233	2014950	0	True				
ANR	2015121	CallExpression	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to start connection with ProcD\\n"" )"		2014950	0					
ANR	2015122	Callee	dprintf		2014950	0					
ANR	2015123	Identifier	dprintf		2014950	0					
ANR	2015124	ArgumentList	D_ALWAYS		2014950	1					
ANR	2015125	Argument	D_ALWAYS		2014950	0					
ANR	2015126	Identifier	D_ALWAYS		2014950	0					
ANR	2015127	Argument	"""ProcFamilyClient: failed to start connection with ProcD\\n"""		2014950	1					
ANR	2015128	PrimaryExpression	"""ProcFamilyClient: failed to start connection with ProcD\\n"""		2014950	0					
ANR	2015129	ExpressionStatement	free ( buffer )	238:2:6237:6249	2014950	1	True				
ANR	2015130	CallExpression	free ( buffer )		2014950	0					
ANR	2015131	Callee	free		2014950	0					
ANR	2015132	Identifier	free		2014950	0					
ANR	2015133	ArgumentList	buffer		2014950	1					
ANR	2015134	Argument	buffer		2014950	0					
ANR	2015135	Identifier	buffer		2014950	0					
ANR	2015136	ReturnStatement	return false ;	239:2:6253:6265	2014950	2	True				
ANR	2015137	Identifier	false		2014950	0					
ANR	2015138	ExpressionStatement	free ( buffer )	241:1:6271:6283	2014950	28	True				
ANR	2015139	CallExpression	free ( buffer )		2014950	0					
ANR	2015140	Callee	free		2014950	0					
ANR	2015141	Identifier	free		2014950	0					
ANR	2015142	ArgumentList	buffer		2014950	1					
ANR	2015143	Argument	buffer		2014950	0					
ANR	2015144	Identifier	buffer		2014950	0					
ANR	2015145	IdentifierDeclStatement	proc_family_error_t err ;	242:1:6286:6309	2014950	29	True				
ANR	2015146	IdentifierDecl	err		2014950	0					
ANR	2015147	IdentifierDeclType	proc_family_error_t		2014950	0					
ANR	2015148	Identifier	err		2014950	1					
ANR	2015149	IfStatement	"if ( ! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) ) )"		2014950	30					
ANR	2015150	Condition	"! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"	243:5:6316:6370	2014950	0	True				
ANR	2015151	UnaryOperationExpression	"! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"		2014950	0					
ANR	2015152	UnaryOperator	!		2014950	0					
ANR	2015153	CallExpression	"m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"		2014950	1					
ANR	2015154	Callee	m_client -> read_data		2014950	0					
ANR	2015155	PtrMemberAccess	m_client -> read_data		2014950	0					
ANR	2015156	Identifier	m_client		2014950	0					
ANR	2015157	Identifier	read_data		2014950	1					
ANR	2015158	ArgumentList	& err		2014950	1					
ANR	2015159	Argument	& err		2014950	0					
ANR	2015160	UnaryOperationExpression	& err		2014950	0					
ANR	2015161	UnaryOperator	&		2014950	0					
ANR	2015162	Identifier	err		2014950	1					
ANR	2015163	Argument	sizeof ( proc_family_error_t )		2014950	1					
ANR	2015164	SizeofExpression	sizeof ( proc_family_error_t )		2014950	0					
ANR	2015165	Sizeof	sizeof		2014950	0					
ANR	2015166	SizeofOperand	proc_family_error_t		2014950	1					
ANR	2015167	CompoundStatement		41:62:1034:1034	2014950	1					
ANR	2015168	ExpressionStatement	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to read response from ProcD\\n"" )"	244:2:6377:6462	2014950	0	True				
ANR	2015169	CallExpression	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to read response from ProcD\\n"" )"		2014950	0					
ANR	2015170	Callee	dprintf		2014950	0					
ANR	2015171	Identifier	dprintf		2014950	0					
ANR	2015172	ArgumentList	D_ALWAYS		2014950	1					
ANR	2015173	Argument	D_ALWAYS		2014950	0					
ANR	2015174	Identifier	D_ALWAYS		2014950	0					
ANR	2015175	Argument	"""ProcFamilyClient: failed to read response from ProcD\\n"""		2014950	1					
ANR	2015176	PrimaryExpression	"""ProcFamilyClient: failed to read response from ProcD\\n"""		2014950	0					
ANR	2015177	ReturnStatement	return false ;	246:2:6466:6478	2014950	1	True				
ANR	2015178	Identifier	false		2014950	0					
ANR	2015179	ExpressionStatement	m_client -> end_connection ( )	248:1:6484:6510	2014950	31	True				
ANR	2015180	CallExpression	m_client -> end_connection ( )		2014950	0					
ANR	2015181	Callee	m_client -> end_connection		2014950	0					
ANR	2015182	PtrMemberAccess	m_client -> end_connection		2014950	0					
ANR	2015183	Identifier	m_client		2014950	0					
ANR	2015184	Identifier	end_connection		2014950	1					
ANR	2015185	ArgumentList			2014950	1					
ANR	2015186	ExpressionStatement	"log_exit ( ""track_family_via_login"" , err )"	250:1:6514:6553	2014950	32	True				
ANR	2015187	CallExpression	"log_exit ( ""track_family_via_login"" , err )"		2014950	0					
ANR	2015188	Callee	log_exit		2014950	0					
ANR	2015189	Identifier	log_exit		2014950	0					
ANR	2015190	ArgumentList	"""track_family_via_login"""		2014950	1					
ANR	2015191	Argument	"""track_family_via_login"""		2014950	0					
ANR	2015192	PrimaryExpression	"""track_family_via_login"""		2014950	0					
ANR	2015193	Argument	err		2014950	1					
ANR	2015194	Identifier	err		2014950	0					
ANR	2015195	ExpressionStatement	response = ( err == PROC_FAMILY_ERROR_SUCCESS )	251:1:6556:6601	2014950	33	True				
ANR	2015196	AssignmentExpression	response = ( err == PROC_FAMILY_ERROR_SUCCESS )		2014950	0		=			
ANR	2015197	Identifier	response		2014950	0					
ANR	2015198	EqualityExpression	err == PROC_FAMILY_ERROR_SUCCESS		2014950	1		==			
ANR	2015199	Identifier	err		2014950	0					
ANR	2015200	Identifier	PROC_FAMILY_ERROR_SUCCESS		2014950	1					
ANR	2015201	ReturnStatement	return true ;	252:1:6604:6615	2014950	34	True				
ANR	2015202	Identifier	true		2014950	0					
ANR	2015203	ReturnType	bool		2014950	1					
ANR	2015204	Identifier	ProcFamilyClient :: track_family_via_login		2014950	2					
ANR	2015205	ParameterList	"pid_t pid , const char * login , bool & response"		2014950	3					
ANR	2015206	Parameter	pid_t pid	200:41:5210:5218	2014950	0	True				
ANR	2015207	ParameterType	pid_t		2014950	0					
ANR	2015208	Identifier	pid		2014950	1					
ANR	2015209	Parameter	const char * login	201:41:5262:5278	2014950	1	True				
ANR	2015210	ParameterType	const char *		2014950	0					
ANR	2015211	Identifier	login		2014950	1					
ANR	2015212	Parameter	bool & response	202:41:5322:5335	2014950	2	True				
ANR	2015213	ParameterType	bool &		2014950	0					
ANR	2015214	Identifier	response		2014950	1					
ANR	2015215	CFGEntryNode	ENTRY		2014950		True				
ANR	2015216	CFGExitNode	EXIT		2014950		True				
ANR	2015217	Symbol	m_initialized		2014950						
ANR	2015218	Symbol	m_client -> read_data		2014950						
ANR	2015219	Symbol	pid		2014950						
ANR	2015220	Symbol	login		2014950						
ANR	2015221	Symbol	& err		2014950						
ANR	2015222	Symbol	* ( pid_t * ) ptr		2014950						
ANR	2015223	Symbol	strlen		2014950						
ANR	2015224	Symbol	PROC_FAMILY_TRACK_FAMILY_VIA_LOGIN		2014950						
ANR	2015225	Symbol	m_client -> start_connection		2014950						
ANR	2015226	Symbol	* ptr		2014950						
ANR	2015227	Symbol	buffer		2014950						
ANR	2015228	Symbol	malloc		2014950						
ANR	2015229	Symbol	NULL		2014950						
ANR	2015230	Symbol	err		2014950						
ANR	2015231	Symbol	message_len		2014950						
ANR	2015232	Symbol	D_ALWAYS		2014950						
ANR	2015233	Symbol	false		2014950						
ANR	2015234	Symbol	* ( proc_family_command_t * ) ptr		2014950						
ANR	2015235	Symbol	* m_client		2014950						
ANR	2015236	Symbol	ptr		2014950						
ANR	2015237	Symbol	login_len		2014950						
ANR	2015238	Symbol	response		2014950						
ANR	2015239	Symbol	true		2014950						
ANR	2015240	Symbol	PROC_FAMILY_ERROR_SUCCESS		2014950						
ANR	2015241	Symbol	* ( int * ) ptr		2014950						
ANR	2015242	Symbol	m_client		2014950						
ANR	2015243	Function	ProcFamilyClient :: track_family_via_allocated_supplementary_group	256:0:6639:8296							
ANR	2015244	FunctionDef	"ProcFamilyClient :: track_family_via_allocated_supplementary_group (pid_t pid , bool & response , gid_t & gid)"		2015243	0					
ANR	2015245	CompoundStatement		260:0:6858:8296	2015243	0					
ANR	2015246	ExpressionStatement	ASSERT ( m_initialized )	261:1:6861:6882	2015243	0	True				
ANR	2015247	CallExpression	ASSERT ( m_initialized )		2015243	0					
ANR	2015248	Callee	ASSERT		2015243	0					
ANR	2015249	Identifier	ASSERT		2015243	0					
ANR	2015250	ArgumentList	m_initialized		2015243	1					
ANR	2015251	Argument	m_initialized		2015243	0					
ANR	2015252	Identifier	m_initialized		2015243	0					
ANR	2015253	Statement	dprintf	263:1:6886:6892	2015243	1	True				
ANR	2015254	Statement	(	263:8:6893:6893	2015243	2	True				
ANR	2015255	Statement	D_PROCFAMILY	263:9:6894:6905	2015243	3	True				
ANR	2015256	Statement	","	263:21:6906:6906	2015243	4	True				
ANR	2015257	Statement	"""About to tell ProcD to track family with root %u """	264:9:6917:6967	2015243	5	True				
ANR	2015258	Statement	"""via GID\\n"""	265:13:6982:6992	2015243	6	True				
ANR	2015259	Statement	","	265:24:6993:6993	2015243	7	True				
ANR	2015260	Statement	pid	266:9:7004:7006	2015243	8	True				
ANR	2015261	Statement	)	266:12:7007:7007	2015243	9	True				
ANR	2015262	ExpressionStatement		266:13:7008:7008	2015243	10	True				
ANR	2015263	IdentifierDeclStatement	int message_len = sizeof ( proc_family_command_t ) + sizeof ( pid_t ) ;	268:1:7012:7094	2015243	11	True				
ANR	2015264	IdentifierDecl	message_len = sizeof ( proc_family_command_t ) + sizeof ( pid_t )		2015243	0					
ANR	2015265	IdentifierDeclType	int		2015243	0					
ANR	2015266	Identifier	message_len		2015243	1					
ANR	2015267	AssignmentExpression	message_len = sizeof ( proc_family_command_t ) + sizeof ( pid_t )		2015243	2		=			
ANR	2015268	Identifier	message_len		2015243	0					
ANR	2015269	AdditiveExpression	sizeof ( proc_family_command_t ) + sizeof ( pid_t )		2015243	1		+			
ANR	2015270	SizeofExpression	sizeof ( proc_family_command_t )		2015243	0					
ANR	2015271	Sizeof	sizeof		2015243	0					
ANR	2015272	SizeofOperand	proc_family_command_t		2015243	1					
ANR	2015273	SizeofExpression	sizeof ( pid_t )		2015243	1					
ANR	2015274	Sizeof	sizeof		2015243	0					
ANR	2015275	SizeofOperand	pid_t		2015243	1					
ANR	2015276	IdentifierDeclStatement	void * buffer = malloc ( message_len ) ;	270:1:7097:7131	2015243	12	True				
ANR	2015277	IdentifierDecl	* buffer = malloc ( message_len )		2015243	0					
ANR	2015278	IdentifierDeclType	void *		2015243	0					
ANR	2015279	Identifier	buffer		2015243	1					
ANR	2015280	AssignmentExpression	* buffer = malloc ( message_len )		2015243	2		=			
ANR	2015281	Identifier	buffer		2015243	0					
ANR	2015282	CallExpression	malloc ( message_len )		2015243	1					
ANR	2015283	Callee	malloc		2015243	0					
ANR	2015284	Identifier	malloc		2015243	0					
ANR	2015285	ArgumentList	message_len		2015243	1					
ANR	2015286	Argument	message_len		2015243	0					
ANR	2015287	Identifier	message_len		2015243	0					
ANR	2015288	ExpressionStatement	ASSERT ( buffer != NULL )	271:1:7134:7156	2015243	13	True				
ANR	2015289	CallExpression	ASSERT ( buffer != NULL )		2015243	0					
ANR	2015290	Callee	ASSERT		2015243	0					
ANR	2015291	Identifier	ASSERT		2015243	0					
ANR	2015292	ArgumentList	buffer != NULL		2015243	1					
ANR	2015293	Argument	buffer != NULL		2015243	0					
ANR	2015294	EqualityExpression	buffer != NULL		2015243	0		!=			
ANR	2015295	Identifier	buffer		2015243	0					
ANR	2015296	Identifier	NULL		2015243	1					
ANR	2015297	IdentifierDeclStatement	char * ptr = ( char * ) buffer ;	272:1:7159:7184	2015243	14	True				
ANR	2015298	IdentifierDecl	* ptr = ( char * ) buffer		2015243	0					
ANR	2015299	IdentifierDeclType	char *		2015243	0					
ANR	2015300	Identifier	ptr		2015243	1					
ANR	2015301	AssignmentExpression	* ptr = ( char * ) buffer		2015243	2		=			
ANR	2015302	Identifier	ptr		2015243	0					
ANR	2015303	CastExpression	( char * ) buffer		2015243	1					
ANR	2015304	CastTarget	char *		2015243	0					
ANR	2015305	Identifier	buffer		2015243	1					
ANR	2015306	ExpressionStatement	* ( proc_family_command_t * ) ptr = PROC_FAMILY_TRACK_FAMILY_VIA_ALLOCATED_SUPPLEMENTARY_GROUP	274:1:7188:7279	2015243	15	True				
ANR	2015307	AssignmentExpression	* ( proc_family_command_t * ) ptr = PROC_FAMILY_TRACK_FAMILY_VIA_ALLOCATED_SUPPLEMENTARY_GROUP		2015243	0		=			
ANR	2015308	UnaryOperationExpression	* ( proc_family_command_t * ) ptr		2015243	0					
ANR	2015309	UnaryOperator	*		2015243	0					
ANR	2015310	CastExpression	( proc_family_command_t * ) ptr		2015243	1					
ANR	2015311	CastTarget	proc_family_command_t *		2015243	0					
ANR	2015312	Identifier	ptr		2015243	1					
ANR	2015313	Identifier	PROC_FAMILY_TRACK_FAMILY_VIA_ALLOCATED_SUPPLEMENTARY_GROUP		2015243	1					
ANR	2015314	ExpressionStatement	ptr += sizeof ( proc_family_command_t )	276:1:7282:7318	2015243	16	True				
ANR	2015315	AssignmentExpression	ptr += sizeof ( proc_family_command_t )		2015243	0		+=			
ANR	2015316	Identifier	ptr		2015243	0					
ANR	2015317	SizeofExpression	sizeof ( proc_family_command_t )		2015243	1					
ANR	2015318	Sizeof	sizeof		2015243	0					
ANR	2015319	SizeofOperand	proc_family_command_t		2015243	1					
ANR	2015320	ExpressionStatement	* ( pid_t * ) ptr = pid	278:1:7322:7340	2015243	17	True				
ANR	2015321	AssignmentExpression	* ( pid_t * ) ptr = pid		2015243	0		=			
ANR	2015322	UnaryOperationExpression	* ( pid_t * ) ptr		2015243	0					
ANR	2015323	UnaryOperator	*		2015243	0					
ANR	2015324	CastExpression	( pid_t * ) ptr		2015243	1					
ANR	2015325	CastTarget	pid_t *		2015243	0					
ANR	2015326	Identifier	ptr		2015243	1					
ANR	2015327	Identifier	pid		2015243	1					
ANR	2015328	ExpressionStatement	ptr += sizeof ( pid_t )	279:1:7343:7363	2015243	18	True				
ANR	2015329	AssignmentExpression	ptr += sizeof ( pid_t )		2015243	0		+=			
ANR	2015330	Identifier	ptr		2015243	0					
ANR	2015331	SizeofExpression	sizeof ( pid_t )		2015243	1					
ANR	2015332	Sizeof	sizeof		2015243	0					
ANR	2015333	SizeofOperand	pid_t		2015243	1					
ANR	2015334	ExpressionStatement	ASSERT ( ptr - ( char * ) buffer == message_len )	281:1:7367:7409	2015243	19	True				
ANR	2015335	CallExpression	ASSERT ( ptr - ( char * ) buffer == message_len )		2015243	0					
ANR	2015336	Callee	ASSERT		2015243	0					
ANR	2015337	Identifier	ASSERT		2015243	0					
ANR	2015338	ArgumentList	ptr - ( char * ) buffer == message_len		2015243	1					
ANR	2015339	Argument	ptr - ( char * ) buffer == message_len		2015243	0					
ANR	2015340	EqualityExpression	ptr - ( char * ) buffer == message_len		2015243	0		==			
ANR	2015341	AdditiveExpression	ptr - ( char * ) buffer		2015243	0		-			
ANR	2015342	Identifier	ptr		2015243	0					
ANR	2015343	CastExpression	( char * ) buffer		2015243	1					
ANR	2015344	CastTarget	char *		2015243	0					
ANR	2015345	Identifier	buffer		2015243	1					
ANR	2015346	Identifier	message_len		2015243	1					
ANR	2015347	IfStatement	"if ( ! m_client -> start_connection ( buffer , message_len ) )"		2015243	20					
ANR	2015348	Condition	"! m_client -> start_connection ( buffer , message_len )"	283:5:7418:7465	2015243	0	True				
ANR	2015349	UnaryOperationExpression	"! m_client -> start_connection ( buffer , message_len )"		2015243	0					
ANR	2015350	UnaryOperator	!		2015243	0					
ANR	2015351	CallExpression	"m_client -> start_connection ( buffer , message_len )"		2015243	1					
ANR	2015352	Callee	m_client -> start_connection		2015243	0					
ANR	2015353	PtrMemberAccess	m_client -> start_connection		2015243	0					
ANR	2015354	Identifier	m_client		2015243	0					
ANR	2015355	Identifier	start_connection		2015243	1					
ANR	2015356	ArgumentList	buffer		2015243	1					
ANR	2015357	Argument	buffer		2015243	0					
ANR	2015358	Identifier	buffer		2015243	0					
ANR	2015359	Argument	message_len		2015243	1					
ANR	2015360	Identifier	message_len		2015243	0					
ANR	2015361	CompoundStatement		24:55:609:609	2015243	1					
ANR	2015362	ExpressionStatement	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to start connection with ProcD\\n"" )"	284:2:7472:7560	2015243	0	True				
ANR	2015363	CallExpression	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to start connection with ProcD\\n"" )"		2015243	0					
ANR	2015364	Callee	dprintf		2015243	0					
ANR	2015365	Identifier	dprintf		2015243	0					
ANR	2015366	ArgumentList	D_ALWAYS		2015243	1					
ANR	2015367	Argument	D_ALWAYS		2015243	0					
ANR	2015368	Identifier	D_ALWAYS		2015243	0					
ANR	2015369	Argument	"""ProcFamilyClient: failed to start connection with ProcD\\n"""		2015243	1					
ANR	2015370	PrimaryExpression	"""ProcFamilyClient: failed to start connection with ProcD\\n"""		2015243	0					
ANR	2015371	ExpressionStatement	free ( buffer )	286:2:7564:7576	2015243	1	True				
ANR	2015372	CallExpression	free ( buffer )		2015243	0					
ANR	2015373	Callee	free		2015243	0					
ANR	2015374	Identifier	free		2015243	0					
ANR	2015375	ArgumentList	buffer		2015243	1					
ANR	2015376	Argument	buffer		2015243	0					
ANR	2015377	Identifier	buffer		2015243	0					
ANR	2015378	ReturnStatement	return false ;	287:2:7580:7592	2015243	2	True				
ANR	2015379	Identifier	false		2015243	0					
ANR	2015380	ExpressionStatement	free ( buffer )	289:1:7598:7610	2015243	21	True				
ANR	2015381	CallExpression	free ( buffer )		2015243	0					
ANR	2015382	Callee	free		2015243	0					
ANR	2015383	Identifier	free		2015243	0					
ANR	2015384	ArgumentList	buffer		2015243	1					
ANR	2015385	Argument	buffer		2015243	0					
ANR	2015386	Identifier	buffer		2015243	0					
ANR	2015387	IdentifierDeclStatement	proc_family_error_t err ;	290:1:7613:7636	2015243	22	True				
ANR	2015388	IdentifierDecl	err		2015243	0					
ANR	2015389	IdentifierDeclType	proc_family_error_t		2015243	0					
ANR	2015390	Identifier	err		2015243	1					
ANR	2015391	IfStatement	"if ( ! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) ) )"		2015243	23					
ANR	2015392	Condition	"! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"	291:5:7643:7697	2015243	0	True				
ANR	2015393	UnaryOperationExpression	"! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"		2015243	0					
ANR	2015394	UnaryOperator	!		2015243	0					
ANR	2015395	CallExpression	"m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"		2015243	1					
ANR	2015396	Callee	m_client -> read_data		2015243	0					
ANR	2015397	PtrMemberAccess	m_client -> read_data		2015243	0					
ANR	2015398	Identifier	m_client		2015243	0					
ANR	2015399	Identifier	read_data		2015243	1					
ANR	2015400	ArgumentList	& err		2015243	1					
ANR	2015401	Argument	& err		2015243	0					
ANR	2015402	UnaryOperationExpression	& err		2015243	0					
ANR	2015403	UnaryOperator	&		2015243	0					
ANR	2015404	Identifier	err		2015243	1					
ANR	2015405	Argument	sizeof ( proc_family_error_t )		2015243	1					
ANR	2015406	SizeofExpression	sizeof ( proc_family_error_t )		2015243	0					
ANR	2015407	Sizeof	sizeof		2015243	0					
ANR	2015408	SizeofOperand	proc_family_error_t		2015243	1					
ANR	2015409	CompoundStatement		32:62:841:841	2015243	1					
ANR	2015410	ExpressionStatement	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to read response from ProcD\\n"" )"	292:2:7704:7789	2015243	0	True				
ANR	2015411	CallExpression	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to read response from ProcD\\n"" )"		2015243	0					
ANR	2015412	Callee	dprintf		2015243	0					
ANR	2015413	Identifier	dprintf		2015243	0					
ANR	2015414	ArgumentList	D_ALWAYS		2015243	1					
ANR	2015415	Argument	D_ALWAYS		2015243	0					
ANR	2015416	Identifier	D_ALWAYS		2015243	0					
ANR	2015417	Argument	"""ProcFamilyClient: failed to read response from ProcD\\n"""		2015243	1					
ANR	2015418	PrimaryExpression	"""ProcFamilyClient: failed to read response from ProcD\\n"""		2015243	0					
ANR	2015419	ReturnStatement	return false ;	294:2:7793:7805	2015243	1	True				
ANR	2015420	Identifier	false		2015243	0					
ANR	2015421	IfStatement	if ( err == PROC_FAMILY_ERROR_SUCCESS )		2015243	24					
ANR	2015422	Condition	err == PROC_FAMILY_ERROR_SUCCESS	296:5:7815:7846	2015243	0	True				
ANR	2015423	EqualityExpression	err == PROC_FAMILY_ERROR_SUCCESS		2015243	0		==			
ANR	2015424	Identifier	err		2015243	0					
ANR	2015425	Identifier	PROC_FAMILY_ERROR_SUCCESS		2015243	1					
ANR	2015426	CompoundStatement		37:39:990:990	2015243	1					
ANR	2015427	IfStatement	"if ( ! m_client -> read_data ( & gid , sizeof ( gid_t ) ) )"		2015243	0					
ANR	2015428	Condition	"! m_client -> read_data ( & gid , sizeof ( gid_t ) )"	297:6:7857:7897	2015243	0	True				
ANR	2015429	UnaryOperationExpression	"! m_client -> read_data ( & gid , sizeof ( gid_t ) )"		2015243	0					
ANR	2015430	UnaryOperator	!		2015243	0					
ANR	2015431	CallExpression	"m_client -> read_data ( & gid , sizeof ( gid_t ) )"		2015243	1					
ANR	2015432	Callee	m_client -> read_data		2015243	0					
ANR	2015433	PtrMemberAccess	m_client -> read_data		2015243	0					
ANR	2015434	Identifier	m_client		2015243	0					
ANR	2015435	Identifier	read_data		2015243	1					
ANR	2015436	ArgumentList	& gid		2015243	1					
ANR	2015437	Argument	& gid		2015243	0					
ANR	2015438	UnaryOperationExpression	& gid		2015243	0					
ANR	2015439	UnaryOperator	&		2015243	0					
ANR	2015440	Identifier	gid		2015243	1					
ANR	2015441	Argument	sizeof ( gid_t )		2015243	1					
ANR	2015442	SizeofExpression	sizeof ( gid_t )		2015243	0					
ANR	2015443	Sizeof	sizeof		2015243	0					
ANR	2015444	SizeofOperand	gid_t		2015243	1					
ANR	2015445	CompoundStatement		38:49:1041:1041	2015243	1					
ANR	2015446	ExpressionStatement	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to read group ID from ProcD\\n"" )"	298:3:7905:7991	2015243	0	True				
ANR	2015447	CallExpression	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to read group ID from ProcD\\n"" )"		2015243	0					
ANR	2015448	Callee	dprintf		2015243	0					
ANR	2015449	Identifier	dprintf		2015243	0					
ANR	2015450	ArgumentList	D_ALWAYS		2015243	1					
ANR	2015451	Argument	D_ALWAYS		2015243	0					
ANR	2015452	Identifier	D_ALWAYS		2015243	0					
ANR	2015453	Argument	"""ProcFamilyClient: failed to read group ID from ProcD\\n"""		2015243	1					
ANR	2015454	PrimaryExpression	"""ProcFamilyClient: failed to read group ID from ProcD\\n"""		2015243	0					
ANR	2015455	ReturnStatement	return false ;	300:3:7996:8008	2015243	1	True				
ANR	2015456	Identifier	false		2015243	0					
ANR	2015457	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""tracking family with root PID %u using group ID %u\\n"" , pid , gid )"	302:2:8016:8133	2015243	1	True				
ANR	2015458	CallExpression	"dprintf ( D_PROCFAMILY , ""tracking family with root PID %u using group ID %u\\n"" , pid , gid )"		2015243	0					
ANR	2015459	Callee	dprintf		2015243	0					
ANR	2015460	Identifier	dprintf		2015243	0					
ANR	2015461	ArgumentList	D_PROCFAMILY		2015243	1					
ANR	2015462	Argument	D_PROCFAMILY		2015243	0					
ANR	2015463	Identifier	D_PROCFAMILY		2015243	0					
ANR	2015464	Argument	"""tracking family with root PID %u using group ID %u\\n"""		2015243	1					
ANR	2015465	PrimaryExpression	"""tracking family with root PID %u using group ID %u\\n"""		2015243	0					
ANR	2015466	Argument	pid		2015243	2					
ANR	2015467	Identifier	pid		2015243	0					
ANR	2015468	Argument	gid		2015243	3					
ANR	2015469	Identifier	gid		2015243	0					
ANR	2015470	ExpressionStatement	m_client -> end_connection ( )	307:1:8139:8165	2015243	25	True				
ANR	2015471	CallExpression	m_client -> end_connection ( )		2015243	0					
ANR	2015472	Callee	m_client -> end_connection		2015243	0					
ANR	2015473	PtrMemberAccess	m_client -> end_connection		2015243	0					
ANR	2015474	Identifier	m_client		2015243	0					
ANR	2015475	Identifier	end_connection		2015243	1					
ANR	2015476	ArgumentList			2015243	1					
ANR	2015477	ExpressionStatement	"log_exit ( ""track_family_via_allocated_supplementary_group"" , err )"	309:1:8169:8232	2015243	26	True				
ANR	2015478	CallExpression	"log_exit ( ""track_family_via_allocated_supplementary_group"" , err )"		2015243	0					
ANR	2015479	Callee	log_exit		2015243	0					
ANR	2015480	Identifier	log_exit		2015243	0					
ANR	2015481	ArgumentList	"""track_family_via_allocated_supplementary_group"""		2015243	1					
ANR	2015482	Argument	"""track_family_via_allocated_supplementary_group"""		2015243	0					
ANR	2015483	PrimaryExpression	"""track_family_via_allocated_supplementary_group"""		2015243	0					
ANR	2015484	Argument	err		2015243	1					
ANR	2015485	Identifier	err		2015243	0					
ANR	2015486	ExpressionStatement	response = ( err == PROC_FAMILY_ERROR_SUCCESS )	310:1:8235:8280	2015243	27	True				
ANR	2015487	AssignmentExpression	response = ( err == PROC_FAMILY_ERROR_SUCCESS )		2015243	0		=			
ANR	2015488	Identifier	response		2015243	0					
ANR	2015489	EqualityExpression	err == PROC_FAMILY_ERROR_SUCCESS		2015243	1		==			
ANR	2015490	Identifier	err		2015243	0					
ANR	2015491	Identifier	PROC_FAMILY_ERROR_SUCCESS		2015243	1					
ANR	2015492	ReturnStatement	return true ;	311:1:8283:8294	2015243	28	True				
ANR	2015493	Identifier	true		2015243	0					
ANR	2015494	ReturnType	bool		2015243	1					
ANR	2015495	Identifier	ProcFamilyClient :: track_family_via_allocated_supplementary_group		2015243	2					
ANR	2015496	ParameterList	"pid_t pid , bool & response , gid_t & gid"		2015243	3					
ANR	2015497	Parameter	pid_t pid	257:65:6709:6717	2015243	0	True				
ANR	2015498	ParameterType	pid_t		2015243	0					
ANR	2015499	Identifier	pid		2015243	1					
ANR	2015500	Parameter	bool & response	258:55:6775:6788	2015243	1	True				
ANR	2015501	ParameterType	bool &		2015243	0					
ANR	2015502	Identifier	response		2015243	1					
ANR	2015503	Parameter	gid_t & gid	259:55:6846:6855	2015243	2	True				
ANR	2015504	ParameterType	gid_t &		2015243	0					
ANR	2015505	Identifier	gid		2015243	1					
ANR	2015506	CFGEntryNode	ENTRY		2015243		True				
ANR	2015507	CFGExitNode	EXIT		2015243		True				
ANR	2015508	Symbol	m_initialized		2015243						
ANR	2015509	Symbol	m_client -> read_data		2015243						
ANR	2015510	Symbol	gid		2015243						
ANR	2015511	Symbol	D_PROCFAMILY		2015243						
ANR	2015512	Symbol	pid		2015243						
ANR	2015513	Symbol	& err		2015243						
ANR	2015514	Symbol	* ( pid_t * ) ptr		2015243						
ANR	2015515	Symbol	m_client -> start_connection		2015243						
ANR	2015516	Symbol	* ptr		2015243						
ANR	2015517	Symbol	buffer		2015243						
ANR	2015518	Symbol	PROC_FAMILY_TRACK_FAMILY_VIA_ALLOCATED_SUPPLEMENTARY_GROUP		2015243						
ANR	2015519	Symbol	malloc		2015243						
ANR	2015520	Symbol	NULL		2015243						
ANR	2015521	Symbol	err		2015243						
ANR	2015522	Symbol	message_len		2015243						
ANR	2015523	Symbol	D_ALWAYS		2015243						
ANR	2015524	Symbol	false		2015243						
ANR	2015525	Symbol	* ( proc_family_command_t * ) ptr		2015243						
ANR	2015526	Symbol	* m_client		2015243						
ANR	2015527	Symbol	ptr		2015243						
ANR	2015528	Symbol	& gid		2015243						
ANR	2015529	Symbol	response		2015243						
ANR	2015530	Symbol	true		2015243						
ANR	2015531	Symbol	PROC_FAMILY_ERROR_SUCCESS		2015243						
ANR	2015532	Symbol	m_client		2015243						
ANR	2015533	Function	ProcFamilyClient :: track_family_via_associated_supplementary_group	314:0:8299:9710							
ANR	2015534	FunctionDef	"ProcFamilyClient :: track_family_via_associated_supplementary_group (pid_t pid , gid_t gid , bool & response)"		2015533	0					
ANR	2015535	CompoundStatement		318:0:8518:9710	2015533	0					
ANR	2015536	ExpressionStatement	ASSERT ( m_initialized )	319:1:8521:8542	2015533	0	True				
ANR	2015537	CallExpression	ASSERT ( m_initialized )		2015533	0					
ANR	2015538	Callee	ASSERT		2015533	0					
ANR	2015539	Identifier	ASSERT		2015533	0					
ANR	2015540	ArgumentList	m_initialized		2015533	1					
ANR	2015541	Argument	m_initialized		2015533	0					
ANR	2015542	Identifier	m_initialized		2015533	0					
ANR	2015543	Statement	dprintf	321:1:8546:8552	2015533	1	True				
ANR	2015544	Statement	(	321:8:8553:8553	2015533	2	True				
ANR	2015545	Statement	D_PROCFAMILY	321:9:8554:8565	2015533	3	True				
ANR	2015546	Statement	","	321:21:8566:8566	2015533	4	True				
ANR	2015547	Statement	"""About to tell ProcD to track family with root %u """	322:9:8577:8627	2015533	5	True				
ANR	2015548	Statement	"""via GID %u\\n"""	323:13:8642:8655	2015533	6	True				
ANR	2015549	Statement	","	323:27:8656:8656	2015533	7	True				
ANR	2015550	Statement	pid	324:9:8667:8669	2015533	8	True				
ANR	2015551	Statement	","	324:12:8670:8670	2015533	9	True				
ANR	2015552	Statement	gid	325:3:8676:8678	2015533	10	True				
ANR	2015553	Statement	)	325:6:8679:8679	2015533	11	True				
ANR	2015554	ExpressionStatement		325:7:8680:8680	2015533	12	True				
ANR	2015555	IdentifierDeclStatement	int message_len = sizeof ( proc_family_command_t ) + sizeof ( pid_t ) + sizeof ( gid_t ) ;	327:1:8684:8789	2015533	13	True				
ANR	2015556	IdentifierDecl	message_len = sizeof ( proc_family_command_t ) + sizeof ( pid_t ) + sizeof ( gid_t )		2015533	0					
ANR	2015557	IdentifierDeclType	int		2015533	0					
ANR	2015558	Identifier	message_len		2015533	1					
ANR	2015559	AssignmentExpression	message_len = sizeof ( proc_family_command_t ) + sizeof ( pid_t ) + sizeof ( gid_t )		2015533	2		=			
ANR	2015560	Identifier	message_len		2015533	0					
ANR	2015561	AdditiveExpression	sizeof ( proc_family_command_t ) + sizeof ( pid_t ) + sizeof ( gid_t )		2015533	1		+			
ANR	2015562	SizeofExpression	sizeof ( proc_family_command_t )		2015533	0					
ANR	2015563	Sizeof	sizeof		2015533	0					
ANR	2015564	SizeofOperand	proc_family_command_t		2015533	1					
ANR	2015565	AdditiveExpression	sizeof ( pid_t ) + sizeof ( gid_t )		2015533	1		+			
ANR	2015566	SizeofExpression	sizeof ( pid_t )		2015533	0					
ANR	2015567	Sizeof	sizeof		2015533	0					
ANR	2015568	SizeofOperand	pid_t		2015533	1					
ANR	2015569	SizeofExpression	sizeof ( gid_t )		2015533	1					
ANR	2015570	Sizeof	sizeof		2015533	0					
ANR	2015571	SizeofOperand	gid_t		2015533	1					
ANR	2015572	IdentifierDeclStatement	void * buffer = malloc ( message_len ) ;	330:1:8792:8826	2015533	14	True				
ANR	2015573	IdentifierDecl	* buffer = malloc ( message_len )		2015533	0					
ANR	2015574	IdentifierDeclType	void *		2015533	0					
ANR	2015575	Identifier	buffer		2015533	1					
ANR	2015576	AssignmentExpression	* buffer = malloc ( message_len )		2015533	2		=			
ANR	2015577	Identifier	buffer		2015533	0					
ANR	2015578	CallExpression	malloc ( message_len )		2015533	1					
ANR	2015579	Callee	malloc		2015533	0					
ANR	2015580	Identifier	malloc		2015533	0					
ANR	2015581	ArgumentList	message_len		2015533	1					
ANR	2015582	Argument	message_len		2015533	0					
ANR	2015583	Identifier	message_len		2015533	0					
ANR	2015584	ExpressionStatement	ASSERT ( buffer != NULL )	331:1:8829:8851	2015533	15	True				
ANR	2015585	CallExpression	ASSERT ( buffer != NULL )		2015533	0					
ANR	2015586	Callee	ASSERT		2015533	0					
ANR	2015587	Identifier	ASSERT		2015533	0					
ANR	2015588	ArgumentList	buffer != NULL		2015533	1					
ANR	2015589	Argument	buffer != NULL		2015533	0					
ANR	2015590	EqualityExpression	buffer != NULL		2015533	0		!=			
ANR	2015591	Identifier	buffer		2015533	0					
ANR	2015592	Identifier	NULL		2015533	1					
ANR	2015593	IdentifierDeclStatement	char * ptr = ( char * ) buffer ;	332:1:8854:8879	2015533	16	True				
ANR	2015594	IdentifierDecl	* ptr = ( char * ) buffer		2015533	0					
ANR	2015595	IdentifierDeclType	char *		2015533	0					
ANR	2015596	Identifier	ptr		2015533	1					
ANR	2015597	AssignmentExpression	* ptr = ( char * ) buffer		2015533	2		=			
ANR	2015598	Identifier	ptr		2015533	0					
ANR	2015599	CastExpression	( char * ) buffer		2015533	1					
ANR	2015600	CastTarget	char *		2015533	0					
ANR	2015601	Identifier	buffer		2015533	1					
ANR	2015602	ExpressionStatement	* ( proc_family_command_t * ) ptr = PROC_FAMILY_TRACK_FAMILY_VIA_ASSOCIATED_SUPPLEMENTARY_GROUP	334:1:8883:8975	2015533	17	True				
ANR	2015603	AssignmentExpression	* ( proc_family_command_t * ) ptr = PROC_FAMILY_TRACK_FAMILY_VIA_ASSOCIATED_SUPPLEMENTARY_GROUP		2015533	0		=			
ANR	2015604	UnaryOperationExpression	* ( proc_family_command_t * ) ptr		2015533	0					
ANR	2015605	UnaryOperator	*		2015533	0					
ANR	2015606	CastExpression	( proc_family_command_t * ) ptr		2015533	1					
ANR	2015607	CastTarget	proc_family_command_t *		2015533	0					
ANR	2015608	Identifier	ptr		2015533	1					
ANR	2015609	Identifier	PROC_FAMILY_TRACK_FAMILY_VIA_ASSOCIATED_SUPPLEMENTARY_GROUP		2015533	1					
ANR	2015610	ExpressionStatement	ptr += sizeof ( proc_family_command_t )	336:1:8978:9014	2015533	18	True				
ANR	2015611	AssignmentExpression	ptr += sizeof ( proc_family_command_t )		2015533	0		+=			
ANR	2015612	Identifier	ptr		2015533	0					
ANR	2015613	SizeofExpression	sizeof ( proc_family_command_t )		2015533	1					
ANR	2015614	Sizeof	sizeof		2015533	0					
ANR	2015615	SizeofOperand	proc_family_command_t		2015533	1					
ANR	2015616	ExpressionStatement	* ( pid_t * ) ptr = pid	338:1:9018:9036	2015533	19	True				
ANR	2015617	AssignmentExpression	* ( pid_t * ) ptr = pid		2015533	0		=			
ANR	2015618	UnaryOperationExpression	* ( pid_t * ) ptr		2015533	0					
ANR	2015619	UnaryOperator	*		2015533	0					
ANR	2015620	CastExpression	( pid_t * ) ptr		2015533	1					
ANR	2015621	CastTarget	pid_t *		2015533	0					
ANR	2015622	Identifier	ptr		2015533	1					
ANR	2015623	Identifier	pid		2015533	1					
ANR	2015624	ExpressionStatement	ptr += sizeof ( pid_t )	339:1:9039:9059	2015533	20	True				
ANR	2015625	AssignmentExpression	ptr += sizeof ( pid_t )		2015533	0		+=			
ANR	2015626	Identifier	ptr		2015533	0					
ANR	2015627	SizeofExpression	sizeof ( pid_t )		2015533	1					
ANR	2015628	Sizeof	sizeof		2015533	0					
ANR	2015629	SizeofOperand	pid_t		2015533	1					
ANR	2015630	ExpressionStatement	* ( gid_t * ) ptr = gid	341:1:9063:9081	2015533	21	True				
ANR	2015631	AssignmentExpression	* ( gid_t * ) ptr = gid		2015533	0		=			
ANR	2015632	UnaryOperationExpression	* ( gid_t * ) ptr		2015533	0					
ANR	2015633	UnaryOperator	*		2015533	0					
ANR	2015634	CastExpression	( gid_t * ) ptr		2015533	1					
ANR	2015635	CastTarget	gid_t *		2015533	0					
ANR	2015636	Identifier	ptr		2015533	1					
ANR	2015637	Identifier	gid		2015533	1					
ANR	2015638	ExpressionStatement	ptr += sizeof ( gid_t )	342:1:9084:9104	2015533	22	True				
ANR	2015639	AssignmentExpression	ptr += sizeof ( gid_t )		2015533	0		+=			
ANR	2015640	Identifier	ptr		2015533	0					
ANR	2015641	SizeofExpression	sizeof ( gid_t )		2015533	1					
ANR	2015642	Sizeof	sizeof		2015533	0					
ANR	2015643	SizeofOperand	gid_t		2015533	1					
ANR	2015644	ExpressionStatement	ASSERT ( ptr - ( char * ) buffer == message_len )	344:1:9108:9150	2015533	23	True				
ANR	2015645	CallExpression	ASSERT ( ptr - ( char * ) buffer == message_len )		2015533	0					
ANR	2015646	Callee	ASSERT		2015533	0					
ANR	2015647	Identifier	ASSERT		2015533	0					
ANR	2015648	ArgumentList	ptr - ( char * ) buffer == message_len		2015533	1					
ANR	2015649	Argument	ptr - ( char * ) buffer == message_len		2015533	0					
ANR	2015650	EqualityExpression	ptr - ( char * ) buffer == message_len		2015533	0		==			
ANR	2015651	AdditiveExpression	ptr - ( char * ) buffer		2015533	0		-			
ANR	2015652	Identifier	ptr		2015533	0					
ANR	2015653	CastExpression	( char * ) buffer		2015533	1					
ANR	2015654	CastTarget	char *		2015533	0					
ANR	2015655	Identifier	buffer		2015533	1					
ANR	2015656	Identifier	message_len		2015533	1					
ANR	2015657	IfStatement	"if ( ! m_client -> start_connection ( buffer , message_len ) )"		2015533	24					
ANR	2015658	Condition	"! m_client -> start_connection ( buffer , message_len )"	346:5:9159:9206	2015533	0	True				
ANR	2015659	UnaryOperationExpression	"! m_client -> start_connection ( buffer , message_len )"		2015533	0					
ANR	2015660	UnaryOperator	!		2015533	0					
ANR	2015661	CallExpression	"m_client -> start_connection ( buffer , message_len )"		2015533	1					
ANR	2015662	Callee	m_client -> start_connection		2015533	0					
ANR	2015663	PtrMemberAccess	m_client -> start_connection		2015533	0					
ANR	2015664	Identifier	m_client		2015533	0					
ANR	2015665	Identifier	start_connection		2015533	1					
ANR	2015666	ArgumentList	buffer		2015533	1					
ANR	2015667	Argument	buffer		2015533	0					
ANR	2015668	Identifier	buffer		2015533	0					
ANR	2015669	Argument	message_len		2015533	1					
ANR	2015670	Identifier	message_len		2015533	0					
ANR	2015671	CompoundStatement		29:55:690:690	2015533	1					
ANR	2015672	ExpressionStatement	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to start connection with ProcD\\n"" )"	347:2:9213:9301	2015533	0	True				
ANR	2015673	CallExpression	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to start connection with ProcD\\n"" )"		2015533	0					
ANR	2015674	Callee	dprintf		2015533	0					
ANR	2015675	Identifier	dprintf		2015533	0					
ANR	2015676	ArgumentList	D_ALWAYS		2015533	1					
ANR	2015677	Argument	D_ALWAYS		2015533	0					
ANR	2015678	Identifier	D_ALWAYS		2015533	0					
ANR	2015679	Argument	"""ProcFamilyClient: failed to start connection with ProcD\\n"""		2015533	1					
ANR	2015680	PrimaryExpression	"""ProcFamilyClient: failed to start connection with ProcD\\n"""		2015533	0					
ANR	2015681	ExpressionStatement	free ( buffer )	349:2:9305:9317	2015533	1	True				
ANR	2015682	CallExpression	free ( buffer )		2015533	0					
ANR	2015683	Callee	free		2015533	0					
ANR	2015684	Identifier	free		2015533	0					
ANR	2015685	ArgumentList	buffer		2015533	1					
ANR	2015686	Argument	buffer		2015533	0					
ANR	2015687	Identifier	buffer		2015533	0					
ANR	2015688	ReturnStatement	return false ;	350:2:9321:9333	2015533	2	True				
ANR	2015689	Identifier	false		2015533	0					
ANR	2015690	ExpressionStatement	free ( buffer )	352:1:9339:9351	2015533	25	True				
ANR	2015691	CallExpression	free ( buffer )		2015533	0					
ANR	2015692	Callee	free		2015533	0					
ANR	2015693	Identifier	free		2015533	0					
ANR	2015694	ArgumentList	buffer		2015533	1					
ANR	2015695	Argument	buffer		2015533	0					
ANR	2015696	Identifier	buffer		2015533	0					
ANR	2015697	IdentifierDeclStatement	proc_family_error_t err ;	353:1:9354:9377	2015533	26	True				
ANR	2015698	IdentifierDecl	err		2015533	0					
ANR	2015699	IdentifierDeclType	proc_family_error_t		2015533	0					
ANR	2015700	Identifier	err		2015533	1					
ANR	2015701	IfStatement	"if ( ! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) ) )"		2015533	27					
ANR	2015702	Condition	"! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"	354:5:9384:9438	2015533	0	True				
ANR	2015703	UnaryOperationExpression	"! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"		2015533	0					
ANR	2015704	UnaryOperator	!		2015533	0					
ANR	2015705	CallExpression	"m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"		2015533	1					
ANR	2015706	Callee	m_client -> read_data		2015533	0					
ANR	2015707	PtrMemberAccess	m_client -> read_data		2015533	0					
ANR	2015708	Identifier	m_client		2015533	0					
ANR	2015709	Identifier	read_data		2015533	1					
ANR	2015710	ArgumentList	& err		2015533	1					
ANR	2015711	Argument	& err		2015533	0					
ANR	2015712	UnaryOperationExpression	& err		2015533	0					
ANR	2015713	UnaryOperator	&		2015533	0					
ANR	2015714	Identifier	err		2015533	1					
ANR	2015715	Argument	sizeof ( proc_family_error_t )		2015533	1					
ANR	2015716	SizeofExpression	sizeof ( proc_family_error_t )		2015533	0					
ANR	2015717	Sizeof	sizeof		2015533	0					
ANR	2015718	SizeofOperand	proc_family_error_t		2015533	1					
ANR	2015719	CompoundStatement		37:62:922:922	2015533	1					
ANR	2015720	ExpressionStatement	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to read response from ProcD\\n"" )"	355:2:9445:9530	2015533	0	True				
ANR	2015721	CallExpression	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to read response from ProcD\\n"" )"		2015533	0					
ANR	2015722	Callee	dprintf		2015533	0					
ANR	2015723	Identifier	dprintf		2015533	0					
ANR	2015724	ArgumentList	D_ALWAYS		2015533	1					
ANR	2015725	Argument	D_ALWAYS		2015533	0					
ANR	2015726	Identifier	D_ALWAYS		2015533	0					
ANR	2015727	Argument	"""ProcFamilyClient: failed to read response from ProcD\\n"""		2015533	1					
ANR	2015728	PrimaryExpression	"""ProcFamilyClient: failed to read response from ProcD\\n"""		2015533	0					
ANR	2015729	ReturnStatement	return false ;	357:2:9534:9546	2015533	1	True				
ANR	2015730	Identifier	false		2015533	0					
ANR	2015731	ExpressionStatement	m_client -> end_connection ( )	359:1:9552:9578	2015533	28	True				
ANR	2015732	CallExpression	m_client -> end_connection ( )		2015533	0					
ANR	2015733	Callee	m_client -> end_connection		2015533	0					
ANR	2015734	PtrMemberAccess	m_client -> end_connection		2015533	0					
ANR	2015735	Identifier	m_client		2015533	0					
ANR	2015736	Identifier	end_connection		2015533	1					
ANR	2015737	ArgumentList			2015533	1					
ANR	2015738	ExpressionStatement	"log_exit ( ""track_family_via_associated_supplementary_group"" , err )"	361:1:9582:9646	2015533	29	True				
ANR	2015739	CallExpression	"log_exit ( ""track_family_via_associated_supplementary_group"" , err )"		2015533	0					
ANR	2015740	Callee	log_exit		2015533	0					
ANR	2015741	Identifier	log_exit		2015533	0					
ANR	2015742	ArgumentList	"""track_family_via_associated_supplementary_group"""		2015533	1					
ANR	2015743	Argument	"""track_family_via_associated_supplementary_group"""		2015533	0					
ANR	2015744	PrimaryExpression	"""track_family_via_associated_supplementary_group"""		2015533	0					
ANR	2015745	Argument	err		2015533	1					
ANR	2015746	Identifier	err		2015533	0					
ANR	2015747	ExpressionStatement	response = ( err == PROC_FAMILY_ERROR_SUCCESS )	362:1:9649:9694	2015533	30	True				
ANR	2015748	AssignmentExpression	response = ( err == PROC_FAMILY_ERROR_SUCCESS )		2015533	0		=			
ANR	2015749	Identifier	response		2015533	0					
ANR	2015750	EqualityExpression	err == PROC_FAMILY_ERROR_SUCCESS		2015533	1		==			
ANR	2015751	Identifier	err		2015533	0					
ANR	2015752	Identifier	PROC_FAMILY_ERROR_SUCCESS		2015533	1					
ANR	2015753	ReturnStatement	return true ;	363:1:9697:9708	2015533	31	True				
ANR	2015754	Identifier	true		2015533	0					
ANR	2015755	ReturnType	bool		2015533	1					
ANR	2015756	Identifier	ProcFamilyClient :: track_family_via_associated_supplementary_group		2015533	2					
ANR	2015757	ParameterList	"pid_t pid , gid_t gid , bool & response"		2015533	3					
ANR	2015758	Parameter	pid_t pid	315:66:8370:8378	2015533	0	True				
ANR	2015759	ParameterType	pid_t		2015533	0					
ANR	2015760	Identifier	pid		2015533	1					
ANR	2015761	Parameter	gid_t gid	316:55:8436:8444	2015533	1	True				
ANR	2015762	ParameterType	gid_t		2015533	0					
ANR	2015763	Identifier	gid		2015533	1					
ANR	2015764	Parameter	bool & response	317:55:8502:8515	2015533	2	True				
ANR	2015765	ParameterType	bool &		2015533	0					
ANR	2015766	Identifier	response		2015533	1					
ANR	2015767	CFGEntryNode	ENTRY		2015533		True				
ANR	2015768	CFGExitNode	EXIT		2015533		True				
ANR	2015769	Symbol	m_initialized		2015533						
ANR	2015770	Symbol	malloc		2015533						
ANR	2015771	Symbol	m_client -> read_data		2015533						
ANR	2015772	Symbol	gid		2015533						
ANR	2015773	Symbol	NULL		2015533						
ANR	2015774	Symbol	err		2015533						
ANR	2015775	Symbol	message_len		2015533						
ANR	2015776	Symbol	D_ALWAYS		2015533						
ANR	2015777	Symbol	false		2015533						
ANR	2015778	Symbol	* ( proc_family_command_t * ) ptr		2015533						
ANR	2015779	Symbol	pid		2015533						
ANR	2015780	Symbol	* ( gid_t * ) ptr		2015533						
ANR	2015781	Symbol	& err		2015533						
ANR	2015782	Symbol	PROC_FAMILY_TRACK_FAMILY_VIA_ASSOCIATED_SUPPLEMENTARY_GROUP		2015533						
ANR	2015783	Symbol	* ( pid_t * ) ptr		2015533						
ANR	2015784	Symbol	* m_client		2015533						
ANR	2015785	Symbol	ptr		2015533						
ANR	2015786	Symbol	response		2015533						
ANR	2015787	Symbol	m_client -> start_connection		2015533						
ANR	2015788	Symbol	* ptr		2015533						
ANR	2015789	Symbol	true		2015533						
ANR	2015790	Symbol	PROC_FAMILY_ERROR_SUCCESS		2015533						
ANR	2015791	Symbol	buffer		2015533						
ANR	2015792	Symbol	m_client		2015533						
ANR	2015793	Function	ProcFamilyClient :: track_family_via_cgroup	368:0:9752:11215							
ANR	2015794	FunctionDef	"ProcFamilyClient :: track_family_via_cgroup (pid_t pid , const char * cgroup , bool & response)"		2015793	0					
ANR	2015795	CompoundStatement		372:0:9931:11215	2015793	0					
ANR	2015796	ExpressionStatement	ASSERT ( m_initialized )	373:1:9934:9955	2015793	0	True				
ANR	2015797	CallExpression	ASSERT ( m_initialized )		2015793	0					
ANR	2015798	Callee	ASSERT		2015793	0					
ANR	2015799	Identifier	ASSERT		2015793	0					
ANR	2015800	ArgumentList	m_initialized		2015793	1					
ANR	2015801	Argument	m_initialized		2015793	0					
ANR	2015802	Identifier	m_initialized		2015793	0					
ANR	2015803	Statement	dprintf	375:1:9959:9965	2015793	1	True				
ANR	2015804	Statement	(	375:8:9966:9966	2015793	2	True				
ANR	2015805	Statement	D_FULLDEBUG	375:9:9967:9977	2015793	3	True				
ANR	2015806	Statement	","	375:20:9978:9978	2015793	4	True				
ANR	2015807	Statement	"""About to tell ProcD to track family with root %u """	376:2:9982:10032	2015793	5	True				
ANR	2015808	Statement	"""via cgroup %s\\n"""	377:6:10040:10056	2015793	6	True				
ANR	2015809	Statement	","	377:23:10057:10057	2015793	7	True				
ANR	2015810	Statement	pid	378:2:10061:10063	2015793	8	True				
ANR	2015811	Statement	","	378:5:10064:10064	2015793	9	True				
ANR	2015812	Statement	cgroup	379:2:10068:10073	2015793	10	True				
ANR	2015813	Statement	)	379:8:10074:10074	2015793	11	True				
ANR	2015814	ExpressionStatement		379:9:10075:10075	2015793	12	True				
ANR	2015815	IdentifierDeclStatement	size_t cgroup_len = strlen ( cgroup ) ;	381:1:10079:10113	2015793	13	True				
ANR	2015816	IdentifierDecl	cgroup_len = strlen ( cgroup )		2015793	0					
ANR	2015817	IdentifierDeclType	size_t		2015793	0					
ANR	2015818	Identifier	cgroup_len		2015793	1					
ANR	2015819	AssignmentExpression	cgroup_len = strlen ( cgroup )		2015793	2		=			
ANR	2015820	Identifier	cgroup_len		2015793	0					
ANR	2015821	CallExpression	strlen ( cgroup )		2015793	1					
ANR	2015822	Callee	strlen		2015793	0					
ANR	2015823	Identifier	strlen		2015793	0					
ANR	2015824	ArgumentList	cgroup		2015793	1					
ANR	2015825	Argument	cgroup		2015793	0					
ANR	2015826	Identifier	cgroup		2015793	0					
ANR	2015827	IdentifierDeclStatement	int message_len = sizeof ( proc_family_command_t ) + sizeof ( pid_t ) + sizeof ( size_t ) + sizeof ( char ) * cgroup_len ;	383:1:10117:10238	2015793	14	True				
ANR	2015828	IdentifierDecl	message_len = sizeof ( proc_family_command_t ) + sizeof ( pid_t ) + sizeof ( size_t ) + sizeof ( char ) * cgroup_len		2015793	0					
ANR	2015829	IdentifierDeclType	int		2015793	0					
ANR	2015830	Identifier	message_len		2015793	1					
ANR	2015831	AssignmentExpression	message_len = sizeof ( proc_family_command_t ) + sizeof ( pid_t ) + sizeof ( size_t ) + sizeof ( char ) * cgroup_len		2015793	2		=			
ANR	2015832	Identifier	message_len		2015793	0					
ANR	2015833	AdditiveExpression	sizeof ( proc_family_command_t ) + sizeof ( pid_t ) + sizeof ( size_t ) + sizeof ( char ) * cgroup_len		2015793	1		+			
ANR	2015834	SizeofExpression	sizeof ( proc_family_command_t )		2015793	0					
ANR	2015835	Sizeof	sizeof		2015793	0					
ANR	2015836	SizeofOperand	proc_family_command_t		2015793	1					
ANR	2015837	AdditiveExpression	sizeof ( pid_t ) + sizeof ( size_t ) + sizeof ( char ) * cgroup_len		2015793	1		+			
ANR	2015838	SizeofExpression	sizeof ( pid_t )		2015793	0					
ANR	2015839	Sizeof	sizeof		2015793	0					
ANR	2015840	SizeofOperand	pid_t		2015793	1					
ANR	2015841	AdditiveExpression	sizeof ( size_t ) + sizeof ( char ) * cgroup_len		2015793	1		+			
ANR	2015842	SizeofExpression	sizeof ( size_t )		2015793	0					
ANR	2015843	Sizeof	sizeof		2015793	0					
ANR	2015844	SizeofOperand	size_t		2015793	1					
ANR	2015845	MultiplicativeExpression	sizeof ( char ) * cgroup_len		2015793	1		*			
ANR	2015846	SizeofExpression	sizeof ( char )		2015793	0					
ANR	2015847	Sizeof	sizeof		2015793	0					
ANR	2015848	SizeofOperand	char		2015793	1					
ANR	2015849	Identifier	cgroup_len		2015793	1					
ANR	2015850	IdentifierDeclStatement	void * buffer = malloc ( message_len ) ;	387:1:10241:10275	2015793	15	True				
ANR	2015851	IdentifierDecl	* buffer = malloc ( message_len )		2015793	0					
ANR	2015852	IdentifierDeclType	void *		2015793	0					
ANR	2015853	Identifier	buffer		2015793	1					
ANR	2015854	AssignmentExpression	* buffer = malloc ( message_len )		2015793	2		=			
ANR	2015855	Identifier	buffer		2015793	0					
ANR	2015856	CallExpression	malloc ( message_len )		2015793	1					
ANR	2015857	Callee	malloc		2015793	0					
ANR	2015858	Identifier	malloc		2015793	0					
ANR	2015859	ArgumentList	message_len		2015793	1					
ANR	2015860	Argument	message_len		2015793	0					
ANR	2015861	Identifier	message_len		2015793	0					
ANR	2015862	ExpressionStatement	ASSERT ( buffer != NULL )	388:1:10278:10300	2015793	16	True				
ANR	2015863	CallExpression	ASSERT ( buffer != NULL )		2015793	0					
ANR	2015864	Callee	ASSERT		2015793	0					
ANR	2015865	Identifier	ASSERT		2015793	0					
ANR	2015866	ArgumentList	buffer != NULL		2015793	1					
ANR	2015867	Argument	buffer != NULL		2015793	0					
ANR	2015868	EqualityExpression	buffer != NULL		2015793	0		!=			
ANR	2015869	Identifier	buffer		2015793	0					
ANR	2015870	Identifier	NULL		2015793	1					
ANR	2015871	IdentifierDeclStatement	char * ptr = ( char * ) buffer ;	389:1:10303:10328	2015793	17	True				
ANR	2015872	IdentifierDecl	* ptr = ( char * ) buffer		2015793	0					
ANR	2015873	IdentifierDeclType	char *		2015793	0					
ANR	2015874	Identifier	ptr		2015793	1					
ANR	2015875	AssignmentExpression	* ptr = ( char * ) buffer		2015793	2		=			
ANR	2015876	Identifier	ptr		2015793	0					
ANR	2015877	CastExpression	( char * ) buffer		2015793	1					
ANR	2015878	CastTarget	char *		2015793	0					
ANR	2015879	Identifier	buffer		2015793	1					
ANR	2015880	ExpressionStatement	* ( proc_family_command_t * ) ptr = PROC_FAMILY_TRACK_FAMILY_VIA_CGROUP	391:1:10332:10400	2015793	18	True				
ANR	2015881	AssignmentExpression	* ( proc_family_command_t * ) ptr = PROC_FAMILY_TRACK_FAMILY_VIA_CGROUP		2015793	0		=			
ANR	2015882	UnaryOperationExpression	* ( proc_family_command_t * ) ptr		2015793	0					
ANR	2015883	UnaryOperator	*		2015793	0					
ANR	2015884	CastExpression	( proc_family_command_t * ) ptr		2015793	1					
ANR	2015885	CastTarget	proc_family_command_t *		2015793	0					
ANR	2015886	Identifier	ptr		2015793	1					
ANR	2015887	Identifier	PROC_FAMILY_TRACK_FAMILY_VIA_CGROUP		2015793	1					
ANR	2015888	ExpressionStatement	ptr += sizeof ( proc_family_command_t )	393:1:10403:10439	2015793	19	True				
ANR	2015889	AssignmentExpression	ptr += sizeof ( proc_family_command_t )		2015793	0		+=			
ANR	2015890	Identifier	ptr		2015793	0					
ANR	2015891	SizeofExpression	sizeof ( proc_family_command_t )		2015793	1					
ANR	2015892	Sizeof	sizeof		2015793	0					
ANR	2015893	SizeofOperand	proc_family_command_t		2015793	1					
ANR	2015894	ExpressionStatement	* ( pid_t * ) ptr = pid	395:1:10443:10461	2015793	20	True				
ANR	2015895	AssignmentExpression	* ( pid_t * ) ptr = pid		2015793	0		=			
ANR	2015896	UnaryOperationExpression	* ( pid_t * ) ptr		2015793	0					
ANR	2015897	UnaryOperator	*		2015793	0					
ANR	2015898	CastExpression	( pid_t * ) ptr		2015793	1					
ANR	2015899	CastTarget	pid_t *		2015793	0					
ANR	2015900	Identifier	ptr		2015793	1					
ANR	2015901	Identifier	pid		2015793	1					
ANR	2015902	ExpressionStatement	ptr += sizeof ( pid_t )	396:1:10464:10484	2015793	21	True				
ANR	2015903	AssignmentExpression	ptr += sizeof ( pid_t )		2015793	0		+=			
ANR	2015904	Identifier	ptr		2015793	0					
ANR	2015905	SizeofExpression	sizeof ( pid_t )		2015793	1					
ANR	2015906	Sizeof	sizeof		2015793	0					
ANR	2015907	SizeofOperand	pid_t		2015793	1					
ANR	2015908	ExpressionStatement	* ( size_t * ) ptr = cgroup_len	398:1:10488:10514	2015793	22	True				
ANR	2015909	AssignmentExpression	* ( size_t * ) ptr = cgroup_len		2015793	0		=			
ANR	2015910	UnaryOperationExpression	* ( size_t * ) ptr		2015793	0					
ANR	2015911	UnaryOperator	*		2015793	0					
ANR	2015912	CastExpression	( size_t * ) ptr		2015793	1					
ANR	2015913	CastTarget	size_t *		2015793	0					
ANR	2015914	Identifier	ptr		2015793	1					
ANR	2015915	Identifier	cgroup_len		2015793	1					
ANR	2015916	ExpressionStatement	ptr += sizeof ( size_t )	399:1:10517:10538	2015793	23	True				
ANR	2015917	AssignmentExpression	ptr += sizeof ( size_t )		2015793	0		+=			
ANR	2015918	Identifier	ptr		2015793	0					
ANR	2015919	SizeofExpression	sizeof ( size_t )		2015793	1					
ANR	2015920	Sizeof	sizeof		2015793	0					
ANR	2015921	SizeofOperand	size_t		2015793	1					
ANR	2015922	ExpressionStatement	"memcpy ( ( void * ) ptr , ( const void * ) cgroup , sizeof ( char ) * cgroup_len )"	401:1:10542:10608	2015793	24	True				
ANR	2015923	CallExpression	"memcpy ( ( void * ) ptr , ( const void * ) cgroup , sizeof ( char ) * cgroup_len )"		2015793	0					
ANR	2015924	Callee	memcpy		2015793	0					
ANR	2015925	Identifier	memcpy		2015793	0					
ANR	2015926	ArgumentList	( void * ) ptr		2015793	1					
ANR	2015927	Argument	( void * ) ptr		2015793	0					
ANR	2015928	CastExpression	( void * ) ptr		2015793	0					
ANR	2015929	CastTarget	void *		2015793	0					
ANR	2015930	Identifier	ptr		2015793	1					
ANR	2015931	Argument	( const void * ) cgroup		2015793	1					
ANR	2015932	CastExpression	( const void * ) cgroup		2015793	0					
ANR	2015933	CastTarget	const void *		2015793	0					
ANR	2015934	Identifier	cgroup		2015793	1					
ANR	2015935	Argument	sizeof ( char ) * cgroup_len		2015793	2					
ANR	2015936	MultiplicativeExpression	sizeof ( char ) * cgroup_len		2015793	0		*			
ANR	2015937	SizeofExpression	sizeof ( char )		2015793	0					
ANR	2015938	Sizeof	sizeof		2015793	0					
ANR	2015939	SizeofOperand	char		2015793	1					
ANR	2015940	Identifier	cgroup_len		2015793	1					
ANR	2015941	ExpressionStatement	ptr += cgroup_len * sizeof ( char )	402:1:10611:10641	2015793	25	True				
ANR	2015942	AssignmentExpression	ptr += cgroup_len * sizeof ( char )		2015793	0		+=			
ANR	2015943	Identifier	ptr		2015793	0					
ANR	2015944	MultiplicativeExpression	cgroup_len * sizeof ( char )		2015793	1		*			
ANR	2015945	Identifier	cgroup_len		2015793	0					
ANR	2015946	SizeofExpression	sizeof ( char )		2015793	1					
ANR	2015947	Sizeof	sizeof		2015793	0					
ANR	2015948	SizeofOperand	char		2015793	1					
ANR	2015949	ExpressionStatement	ASSERT ( ptr - ( char * ) buffer == message_len )	404:1:10645:10687	2015793	26	True				
ANR	2015950	CallExpression	ASSERT ( ptr - ( char * ) buffer == message_len )		2015793	0					
ANR	2015951	Callee	ASSERT		2015793	0					
ANR	2015952	Identifier	ASSERT		2015793	0					
ANR	2015953	ArgumentList	ptr - ( char * ) buffer == message_len		2015793	1					
ANR	2015954	Argument	ptr - ( char * ) buffer == message_len		2015793	0					
ANR	2015955	EqualityExpression	ptr - ( char * ) buffer == message_len		2015793	0		==			
ANR	2015956	AdditiveExpression	ptr - ( char * ) buffer		2015793	0		-			
ANR	2015957	Identifier	ptr		2015793	0					
ANR	2015958	CastExpression	( char * ) buffer		2015793	1					
ANR	2015959	CastTarget	char *		2015793	0					
ANR	2015960	Identifier	buffer		2015793	1					
ANR	2015961	Identifier	message_len		2015793	1					
ANR	2015962	IfStatement	"if ( ! m_client -> start_connection ( buffer , message_len ) )"		2015793	27					
ANR	2015963	Condition	"! m_client -> start_connection ( buffer , message_len )"	406:5:10695:10742	2015793	0	True				
ANR	2015964	UnaryOperationExpression	"! m_client -> start_connection ( buffer , message_len )"		2015793	0					
ANR	2015965	UnaryOperator	!		2015793	0					
ANR	2015966	CallExpression	"m_client -> start_connection ( buffer , message_len )"		2015793	1					
ANR	2015967	Callee	m_client -> start_connection		2015793	0					
ANR	2015968	PtrMemberAccess	m_client -> start_connection		2015793	0					
ANR	2015969	Identifier	m_client		2015793	0					
ANR	2015970	Identifier	start_connection		2015793	1					
ANR	2015971	ArgumentList	buffer		2015793	1					
ANR	2015972	Argument	buffer		2015793	0					
ANR	2015973	Identifier	buffer		2015793	0					
ANR	2015974	Argument	message_len		2015793	1					
ANR	2015975	Identifier	message_len		2015793	0					
ANR	2015976	CompoundStatement		35:55:813:813	2015793	1					
ANR	2015977	ExpressionStatement	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to start connection with ProcD\\n"" )"	407:2:10749:10830	2015793	0	True				
ANR	2015978	CallExpression	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to start connection with ProcD\\n"" )"		2015793	0					
ANR	2015979	Callee	dprintf		2015793	0					
ANR	2015980	Identifier	dprintf		2015793	0					
ANR	2015981	ArgumentList	D_ALWAYS		2015793	1					
ANR	2015982	Argument	D_ALWAYS		2015793	0					
ANR	2015983	Identifier	D_ALWAYS		2015793	0					
ANR	2015984	Argument	"""ProcFamilyClient: failed to start connection with ProcD\\n"""		2015793	1					
ANR	2015985	PrimaryExpression	"""ProcFamilyClient: failed to start connection with ProcD\\n"""		2015793	0					
ANR	2015986	ExpressionStatement	free ( buffer )	409:2:10834:10846	2015793	1	True				
ANR	2015987	CallExpression	free ( buffer )		2015793	0					
ANR	2015988	Callee	free		2015793	0					
ANR	2015989	Identifier	free		2015793	0					
ANR	2015990	ArgumentList	buffer		2015793	1					
ANR	2015991	Argument	buffer		2015793	0					
ANR	2015992	Identifier	buffer		2015793	0					
ANR	2015993	ReturnStatement	return false ;	410:2:10850:10862	2015793	2	True				
ANR	2015994	Identifier	false		2015793	0					
ANR	2015995	ExpressionStatement	free ( buffer )	412:1:10875:10887	2015793	28	True				
ANR	2015996	CallExpression	free ( buffer )		2015793	0					
ANR	2015997	Callee	free		2015793	0					
ANR	2015998	Identifier	free		2015793	0					
ANR	2015999	ArgumentList	buffer		2015793	1					
ANR	2016000	Argument	buffer		2015793	0					
ANR	2016001	Identifier	buffer		2015793	0					
ANR	2016002	IdentifierDeclStatement	proc_family_error_t err ;	413:1:10890:10913	2015793	29	True				
ANR	2016003	IdentifierDecl	err		2015793	0					
ANR	2016004	IdentifierDeclType	proc_family_error_t		2015793	0					
ANR	2016005	Identifier	err		2015793	1					
ANR	2016006	IfStatement	"if ( ! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) ) )"		2015793	30					
ANR	2016007	Condition	"! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"	414:5:10920:10974	2015793	0	True				
ANR	2016008	UnaryOperationExpression	"! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"		2015793	0					
ANR	2016009	UnaryOperator	!		2015793	0					
ANR	2016010	CallExpression	"m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"		2015793	1					
ANR	2016011	Callee	m_client -> read_data		2015793	0					
ANR	2016012	PtrMemberAccess	m_client -> read_data		2015793	0					
ANR	2016013	Identifier	m_client		2015793	0					
ANR	2016014	Identifier	read_data		2015793	1					
ANR	2016015	ArgumentList	& err		2015793	1					
ANR	2016016	Argument	& err		2015793	0					
ANR	2016017	UnaryOperationExpression	& err		2015793	0					
ANR	2016018	UnaryOperator	&		2015793	0					
ANR	2016019	Identifier	err		2015793	1					
ANR	2016020	Argument	sizeof ( proc_family_error_t )		2015793	1					
ANR	2016021	SizeofExpression	sizeof ( proc_family_error_t )		2015793	0					
ANR	2016022	Sizeof	sizeof		2015793	0					
ANR	2016023	SizeofOperand	proc_family_error_t		2015793	1					
ANR	2016024	CompoundStatement		43:62:1045:1045	2015793	1					
ANR	2016025	ExpressionStatement	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to read response from ProcD\\n"" )"	415:2:10981:11059	2015793	0	True				
ANR	2016026	CallExpression	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to read response from ProcD\\n"" )"		2015793	0					
ANR	2016027	Callee	dprintf		2015793	0					
ANR	2016028	Identifier	dprintf		2015793	0					
ANR	2016029	ArgumentList	D_ALWAYS		2015793	1					
ANR	2016030	Argument	D_ALWAYS		2015793	0					
ANR	2016031	Identifier	D_ALWAYS		2015793	0					
ANR	2016032	Argument	"""ProcFamilyClient: failed to read response from ProcD\\n"""		2015793	1					
ANR	2016033	PrimaryExpression	"""ProcFamilyClient: failed to read response from ProcD\\n"""		2015793	0					
ANR	2016034	ReturnStatement	return false ;	417:2:11063:11075	2015793	1	True				
ANR	2016035	Identifier	false		2015793	0					
ANR	2016036	ExpressionStatement	m_client -> end_connection ( )	419:1:11081:11107	2015793	31	True				
ANR	2016037	CallExpression	m_client -> end_connection ( )		2015793	0					
ANR	2016038	Callee	m_client -> end_connection		2015793	0					
ANR	2016039	PtrMemberAccess	m_client -> end_connection		2015793	0					
ANR	2016040	Identifier	m_client		2015793	0					
ANR	2016041	Identifier	end_connection		2015793	1					
ANR	2016042	ArgumentList			2015793	1					
ANR	2016043	ExpressionStatement	"log_exit ( ""track_family_via_cgroup"" , err )"	421:1:11111:11151	2015793	32	True				
ANR	2016044	CallExpression	"log_exit ( ""track_family_via_cgroup"" , err )"		2015793	0					
ANR	2016045	Callee	log_exit		2015793	0					
ANR	2016046	Identifier	log_exit		2015793	0					
ANR	2016047	ArgumentList	"""track_family_via_cgroup"""		2015793	1					
ANR	2016048	Argument	"""track_family_via_cgroup"""		2015793	0					
ANR	2016049	PrimaryExpression	"""track_family_via_cgroup"""		2015793	0					
ANR	2016050	Argument	err		2015793	1					
ANR	2016051	Identifier	err		2015793	0					
ANR	2016052	ExpressionStatement	response = ( err == PROC_FAMILY_ERROR_SUCCESS )	422:1:11154:11199	2015793	33	True				
ANR	2016053	AssignmentExpression	response = ( err == PROC_FAMILY_ERROR_SUCCESS )		2015793	0		=			
ANR	2016054	Identifier	response		2015793	0					
ANR	2016055	EqualityExpression	err == PROC_FAMILY_ERROR_SUCCESS		2015793	1		==			
ANR	2016056	Identifier	err		2015793	0					
ANR	2016057	Identifier	PROC_FAMILY_ERROR_SUCCESS		2015793	1					
ANR	2016058	ReturnStatement	return true ;	423:1:11202:11213	2015793	34	True				
ANR	2016059	Identifier	true		2015793	0					
ANR	2016060	ReturnType	bool		2015793	1					
ANR	2016061	Identifier	ProcFamilyClient :: track_family_via_cgroup		2015793	2					
ANR	2016062	ParameterList	"pid_t pid , const char * cgroup , bool & response"		2015793	3					
ANR	2016063	Parameter	pid_t pid	369:42:9799:9807	2015793	0	True				
ANR	2016064	ParameterType	pid_t		2015793	0					
ANR	2016065	Identifier	pid		2015793	1					
ANR	2016066	Parameter	const char * cgroup	370:42:9852:9870	2015793	1	True				
ANR	2016067	ParameterType	const char *		2015793	0					
ANR	2016068	Identifier	cgroup		2015793	1					
ANR	2016069	Parameter	bool & response	371:42:9915:9928	2015793	2	True				
ANR	2016070	ParameterType	bool &		2015793	0					
ANR	2016071	Identifier	response		2015793	1					
ANR	2016072	CFGEntryNode	ENTRY		2015793		True				
ANR	2016073	CFGExitNode	EXIT		2015793		True				
ANR	2016074	Symbol	m_initialized		2015793						
ANR	2016075	Symbol	m_client -> read_data		2015793						
ANR	2016076	Symbol	* ( size_t * ) ptr		2015793						
ANR	2016077	Symbol	pid		2015793						
ANR	2016078	Symbol	& err		2015793						
ANR	2016079	Symbol	* ( pid_t * ) ptr		2015793						
ANR	2016080	Symbol	strlen		2015793						
ANR	2016081	Symbol	cgroup_len		2015793						
ANR	2016082	Symbol	m_client -> start_connection		2015793						
ANR	2016083	Symbol	* ptr		2015793						
ANR	2016084	Symbol	buffer		2015793						
ANR	2016085	Symbol	malloc		2015793						
ANR	2016086	Symbol	NULL		2015793						
ANR	2016087	Symbol	err		2015793						
ANR	2016088	Symbol	message_len		2015793						
ANR	2016089	Symbol	PROC_FAMILY_TRACK_FAMILY_VIA_CGROUP		2015793						
ANR	2016090	Symbol	D_ALWAYS		2015793						
ANR	2016091	Symbol	false		2015793						
ANR	2016092	Symbol	* ( proc_family_command_t * ) ptr		2015793						
ANR	2016093	Symbol	cgroup		2015793						
ANR	2016094	Symbol	* m_client		2015793						
ANR	2016095	Symbol	ptr		2015793						
ANR	2016096	Symbol	response		2015793						
ANR	2016097	Symbol	true		2015793						
ANR	2016098	Symbol	PROC_FAMILY_ERROR_SUCCESS		2015793						
ANR	2016099	Symbol	m_client		2015793						
ANR	2016100	Function	ProcFamilyClient :: use_glexec_for_family	427:0:11225:12717							
ANR	2016101	FunctionDef	"ProcFamilyClient :: use_glexec_for_family (pid_t pid , const char * proxy , bool & response)"		2016100	0					
ANR	2016102	CompoundStatement		431:0:11396:12717	2016100	0					
ANR	2016103	ExpressionStatement	ASSERT ( m_initialized )	432:1:11399:11420	2016100	0	True				
ANR	2016104	CallExpression	ASSERT ( m_initialized )		2016100	0					
ANR	2016105	Callee	ASSERT		2016100	0					
ANR	2016106	Identifier	ASSERT		2016100	0					
ANR	2016107	ArgumentList	m_initialized		2016100	1					
ANR	2016108	Argument	m_initialized		2016100	0					
ANR	2016109	Identifier	m_initialized		2016100	0					
ANR	2016110	Statement	dprintf	434:1:11424:11430	2016100	1	True				
ANR	2016111	Statement	(	434:8:11431:11431	2016100	2	True				
ANR	2016112	Statement	D_PROCFAMILY	434:9:11432:11443	2016100	3	True				
ANR	2016113	Statement	","	434:21:11444:11444	2016100	4	True				
ANR	2016114	Statement	"""About to tell ProcD to use glexec for family with root %u """	435:9:11455:11514	2016100	5	True				
ANR	2016115	Statement	"""with proxy %s\\n"""	436:13:11529:11545	2016100	6	True				
ANR	2016116	Statement	","	436:30:11546:11546	2016100	7	True				
ANR	2016117	Statement	pid	437:9:11557:11559	2016100	8	True				
ANR	2016118	Statement	","	437:12:11560:11560	2016100	9	True				
ANR	2016119	Statement	proxy	438:9:11571:11575	2016100	10	True				
ANR	2016120	Statement	)	438:14:11576:11576	2016100	11	True				
ANR	2016121	ExpressionStatement		438:15:11577:11577	2016100	12	True				
ANR	2016122	IdentifierDeclStatement	int proxy_len = strlen ( proxy ) + 1 ;	440:1:11581:11614	2016100	13	True				
ANR	2016123	IdentifierDecl	proxy_len = strlen ( proxy ) + 1		2016100	0					
ANR	2016124	IdentifierDeclType	int		2016100	0					
ANR	2016125	Identifier	proxy_len		2016100	1					
ANR	2016126	AssignmentExpression	proxy_len = strlen ( proxy ) + 1		2016100	2		=			
ANR	2016127	Identifier	proxy_len		2016100	0					
ANR	2016128	AdditiveExpression	strlen ( proxy ) + 1		2016100	1		+			
ANR	2016129	CallExpression	strlen ( proxy )		2016100	0					
ANR	2016130	Callee	strlen		2016100	0					
ANR	2016131	Identifier	strlen		2016100	0					
ANR	2016132	ArgumentList	proxy		2016100	1					
ANR	2016133	Argument	proxy		2016100	0					
ANR	2016134	Identifier	proxy		2016100	0					
ANR	2016135	PrimaryExpression	1		2016100	1					
ANR	2016136	IdentifierDeclStatement	int message_len = sizeof ( proc_family_command_t ) + sizeof ( pid_t ) + sizeof ( int ) + proxy_len ;	441:1:11617:11763	2016100	14	True				
ANR	2016137	IdentifierDecl	message_len = sizeof ( proc_family_command_t ) + sizeof ( pid_t ) + sizeof ( int ) + proxy_len		2016100	0					
ANR	2016138	IdentifierDeclType	int		2016100	0					
ANR	2016139	Identifier	message_len		2016100	1					
ANR	2016140	AssignmentExpression	message_len = sizeof ( proc_family_command_t ) + sizeof ( pid_t ) + sizeof ( int ) + proxy_len		2016100	2		=			
ANR	2016141	Identifier	message_len		2016100	0					
ANR	2016142	AdditiveExpression	sizeof ( proc_family_command_t ) + sizeof ( pid_t ) + sizeof ( int ) + proxy_len		2016100	1		+			
ANR	2016143	SizeofExpression	sizeof ( proc_family_command_t )		2016100	0					
ANR	2016144	Sizeof	sizeof		2016100	0					
ANR	2016145	SizeofOperand	proc_family_command_t		2016100	1					
ANR	2016146	AdditiveExpression	sizeof ( pid_t ) + sizeof ( int ) + proxy_len		2016100	1		+			
ANR	2016147	SizeofExpression	sizeof ( pid_t )		2016100	0					
ANR	2016148	Sizeof	sizeof		2016100	0					
ANR	2016149	SizeofOperand	pid_t		2016100	1					
ANR	2016150	AdditiveExpression	sizeof ( int ) + proxy_len		2016100	1		+			
ANR	2016151	SizeofExpression	sizeof ( int )		2016100	0					
ANR	2016152	Sizeof	sizeof		2016100	0					
ANR	2016153	SizeofOperand	int		2016100	1					
ANR	2016154	Identifier	proxy_len		2016100	1					
ANR	2016155	IdentifierDeclStatement	void * buffer = malloc ( message_len ) ;	445:1:11766:11800	2016100	15	True				
ANR	2016156	IdentifierDecl	* buffer = malloc ( message_len )		2016100	0					
ANR	2016157	IdentifierDeclType	void *		2016100	0					
ANR	2016158	Identifier	buffer		2016100	1					
ANR	2016159	AssignmentExpression	* buffer = malloc ( message_len )		2016100	2		=			
ANR	2016160	Identifier	buffer		2016100	0					
ANR	2016161	CallExpression	malloc ( message_len )		2016100	1					
ANR	2016162	Callee	malloc		2016100	0					
ANR	2016163	Identifier	malloc		2016100	0					
ANR	2016164	ArgumentList	message_len		2016100	1					
ANR	2016165	Argument	message_len		2016100	0					
ANR	2016166	Identifier	message_len		2016100	0					
ANR	2016167	ExpressionStatement	ASSERT ( buffer != NULL )	446:1:11803:11825	2016100	16	True				
ANR	2016168	CallExpression	ASSERT ( buffer != NULL )		2016100	0					
ANR	2016169	Callee	ASSERT		2016100	0					
ANR	2016170	Identifier	ASSERT		2016100	0					
ANR	2016171	ArgumentList	buffer != NULL		2016100	1					
ANR	2016172	Argument	buffer != NULL		2016100	0					
ANR	2016173	EqualityExpression	buffer != NULL		2016100	0		!=			
ANR	2016174	Identifier	buffer		2016100	0					
ANR	2016175	Identifier	NULL		2016100	1					
ANR	2016176	IdentifierDeclStatement	char * ptr = ( char * ) buffer ;	447:1:11828:11853	2016100	17	True				
ANR	2016177	IdentifierDecl	* ptr = ( char * ) buffer		2016100	0					
ANR	2016178	IdentifierDeclType	char *		2016100	0					
ANR	2016179	Identifier	ptr		2016100	1					
ANR	2016180	AssignmentExpression	* ptr = ( char * ) buffer		2016100	2		=			
ANR	2016181	Identifier	ptr		2016100	0					
ANR	2016182	CastExpression	( char * ) buffer		2016100	1					
ANR	2016183	CastTarget	char *		2016100	0					
ANR	2016184	Identifier	buffer		2016100	1					
ANR	2016185	ExpressionStatement	* ( proc_family_command_t * ) ptr = PROC_FAMILY_USE_GLEXEC_FOR_FAMILY	449:1:11857:11921	2016100	18	True				
ANR	2016186	AssignmentExpression	* ( proc_family_command_t * ) ptr = PROC_FAMILY_USE_GLEXEC_FOR_FAMILY		2016100	0		=			
ANR	2016187	UnaryOperationExpression	* ( proc_family_command_t * ) ptr		2016100	0					
ANR	2016188	UnaryOperator	*		2016100	0					
ANR	2016189	CastExpression	( proc_family_command_t * ) ptr		2016100	1					
ANR	2016190	CastTarget	proc_family_command_t *		2016100	0					
ANR	2016191	Identifier	ptr		2016100	1					
ANR	2016192	Identifier	PROC_FAMILY_USE_GLEXEC_FOR_FAMILY		2016100	1					
ANR	2016193	ExpressionStatement	ptr += sizeof ( proc_family_command_t )	450:1:11924:11960	2016100	19	True				
ANR	2016194	AssignmentExpression	ptr += sizeof ( proc_family_command_t )		2016100	0		+=			
ANR	2016195	Identifier	ptr		2016100	0					
ANR	2016196	SizeofExpression	sizeof ( proc_family_command_t )		2016100	1					
ANR	2016197	Sizeof	sizeof		2016100	0					
ANR	2016198	SizeofOperand	proc_family_command_t		2016100	1					
ANR	2016199	ExpressionStatement	* ( pid_t * ) ptr = pid	452:1:11964:11982	2016100	20	True				
ANR	2016200	AssignmentExpression	* ( pid_t * ) ptr = pid		2016100	0		=			
ANR	2016201	UnaryOperationExpression	* ( pid_t * ) ptr		2016100	0					
ANR	2016202	UnaryOperator	*		2016100	0					
ANR	2016203	CastExpression	( pid_t * ) ptr		2016100	1					
ANR	2016204	CastTarget	pid_t *		2016100	0					
ANR	2016205	Identifier	ptr		2016100	1					
ANR	2016206	Identifier	pid		2016100	1					
ANR	2016207	ExpressionStatement	ptr += sizeof ( pid_t )	453:1:11985:12005	2016100	21	True				
ANR	2016208	AssignmentExpression	ptr += sizeof ( pid_t )		2016100	0		+=			
ANR	2016209	Identifier	ptr		2016100	0					
ANR	2016210	SizeofExpression	sizeof ( pid_t )		2016100	1					
ANR	2016211	Sizeof	sizeof		2016100	0					
ANR	2016212	SizeofOperand	pid_t		2016100	1					
ANR	2016213	ExpressionStatement	* ( int * ) ptr = proxy_len	455:1:12009:12031	2016100	22	True				
ANR	2016214	AssignmentExpression	* ( int * ) ptr = proxy_len		2016100	0		=			
ANR	2016215	UnaryOperationExpression	* ( int * ) ptr		2016100	0					
ANR	2016216	UnaryOperator	*		2016100	0					
ANR	2016217	CastExpression	( int * ) ptr		2016100	1					
ANR	2016218	CastTarget	int *		2016100	0					
ANR	2016219	Identifier	ptr		2016100	1					
ANR	2016220	Identifier	proxy_len		2016100	1					
ANR	2016221	ExpressionStatement	ptr += sizeof ( int )	456:1:12034:12052	2016100	23	True				
ANR	2016222	AssignmentExpression	ptr += sizeof ( int )		2016100	0		+=			
ANR	2016223	Identifier	ptr		2016100	0					
ANR	2016224	SizeofExpression	sizeof ( int )		2016100	1					
ANR	2016225	Sizeof	sizeof		2016100	0					
ANR	2016226	SizeofOperand	int		2016100	1					
ANR	2016227	ExpressionStatement	"memcpy ( ptr , proxy , proxy_len )"	458:1:12056:12085	2016100	24	True				
ANR	2016228	CallExpression	"memcpy ( ptr , proxy , proxy_len )"		2016100	0					
ANR	2016229	Callee	memcpy		2016100	0					
ANR	2016230	Identifier	memcpy		2016100	0					
ANR	2016231	ArgumentList	ptr		2016100	1					
ANR	2016232	Argument	ptr		2016100	0					
ANR	2016233	Identifier	ptr		2016100	0					
ANR	2016234	Argument	proxy		2016100	1					
ANR	2016235	Identifier	proxy		2016100	0					
ANR	2016236	Argument	proxy_len		2016100	2					
ANR	2016237	Identifier	proxy_len		2016100	0					
ANR	2016238	ExpressionStatement	ptr += proxy_len	459:1:12088:12104	2016100	25	True				
ANR	2016239	AssignmentExpression	ptr += proxy_len		2016100	0		+=			
ANR	2016240	Identifier	ptr		2016100	0					
ANR	2016241	Identifier	proxy_len		2016100	1					
ANR	2016242	ExpressionStatement	ASSERT ( ptr - ( char * ) buffer == message_len )	461:1:12108:12150	2016100	26	True				
ANR	2016243	CallExpression	ASSERT ( ptr - ( char * ) buffer == message_len )		2016100	0					
ANR	2016244	Callee	ASSERT		2016100	0					
ANR	2016245	Identifier	ASSERT		2016100	0					
ANR	2016246	ArgumentList	ptr - ( char * ) buffer == message_len		2016100	1					
ANR	2016247	Argument	ptr - ( char * ) buffer == message_len		2016100	0					
ANR	2016248	EqualityExpression	ptr - ( char * ) buffer == message_len		2016100	0		==			
ANR	2016249	AdditiveExpression	ptr - ( char * ) buffer		2016100	0		-			
ANR	2016250	Identifier	ptr		2016100	0					
ANR	2016251	CastExpression	( char * ) buffer		2016100	1					
ANR	2016252	CastTarget	char *		2016100	0					
ANR	2016253	Identifier	buffer		2016100	1					
ANR	2016254	Identifier	message_len		2016100	1					
ANR	2016255	IfStatement	"if ( ! m_client -> start_connection ( buffer , message_len ) )"		2016100	27					
ANR	2016256	Condition	"! m_client -> start_connection ( buffer , message_len )"	463:5:12158:12205	2016100	0	True				
ANR	2016257	UnaryOperationExpression	"! m_client -> start_connection ( buffer , message_len )"		2016100	0					
ANR	2016258	UnaryOperator	!		2016100	0					
ANR	2016259	CallExpression	"m_client -> start_connection ( buffer , message_len )"		2016100	1					
ANR	2016260	Callee	m_client -> start_connection		2016100	0					
ANR	2016261	PtrMemberAccess	m_client -> start_connection		2016100	0					
ANR	2016262	Identifier	m_client		2016100	0					
ANR	2016263	Identifier	start_connection		2016100	1					
ANR	2016264	ArgumentList	buffer		2016100	1					
ANR	2016265	Argument	buffer		2016100	0					
ANR	2016266	Identifier	buffer		2016100	0					
ANR	2016267	Argument	message_len		2016100	1					
ANR	2016268	Identifier	message_len		2016100	0					
ANR	2016269	CompoundStatement		33:55:811:811	2016100	1					
ANR	2016270	Statement	dprintf	464:2:12212:12218	2016100	0	True				
ANR	2016271	Statement	(	464:9:12219:12219	2016100	1	True				
ANR	2016272	Statement	D_ALWAYS	464:10:12220:12227	2016100	2	True				
ANR	2016273	Statement	","	464:18:12228:12228	2016100	3	True				
ANR	2016274	Statement	"""ProcFamilyClient: """	465:10:12240:12259	2016100	4	True				
ANR	2016275	Statement	"""failed to start connection with ProcD\\n"""	466:14:12275:12315	2016100	5	True				
ANR	2016276	Statement	)	466:55:12316:12316	2016100	6	True				
ANR	2016277	ExpressionStatement		466:56:12317:12317	2016100	7	True				
ANR	2016278	ExpressionStatement	free ( buffer )	467:2:12321:12333	2016100	8	True				
ANR	2016279	CallExpression	free ( buffer )		2016100	0					
ANR	2016280	Callee	free		2016100	0					
ANR	2016281	Identifier	free		2016100	0					
ANR	2016282	ArgumentList	buffer		2016100	1					
ANR	2016283	Argument	buffer		2016100	0					
ANR	2016284	Identifier	buffer		2016100	0					
ANR	2016285	ReturnStatement	return false ;	468:2:12337:12349	2016100	9	True				
ANR	2016286	Identifier	false		2016100	0					
ANR	2016287	ExpressionStatement	free ( buffer )	470:1:12355:12367	2016100	28	True				
ANR	2016288	CallExpression	free ( buffer )		2016100	0					
ANR	2016289	Callee	free		2016100	0					
ANR	2016290	Identifier	free		2016100	0					
ANR	2016291	ArgumentList	buffer		2016100	1					
ANR	2016292	Argument	buffer		2016100	0					
ANR	2016293	Identifier	buffer		2016100	0					
ANR	2016294	IdentifierDeclStatement	proc_family_error_t err ;	471:1:12370:12393	2016100	29	True				
ANR	2016295	IdentifierDecl	err		2016100	0					
ANR	2016296	IdentifierDeclType	proc_family_error_t		2016100	0					
ANR	2016297	Identifier	err		2016100	1					
ANR	2016298	IfStatement	"if ( ! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) ) )"		2016100	30					
ANR	2016299	Condition	"! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"	472:5:12400:12454	2016100	0	True				
ANR	2016300	UnaryOperationExpression	"! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"		2016100	0					
ANR	2016301	UnaryOperator	!		2016100	0					
ANR	2016302	CallExpression	"m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"		2016100	1					
ANR	2016303	Callee	m_client -> read_data		2016100	0					
ANR	2016304	PtrMemberAccess	m_client -> read_data		2016100	0					
ANR	2016305	Identifier	m_client		2016100	0					
ANR	2016306	Identifier	read_data		2016100	1					
ANR	2016307	ArgumentList	& err		2016100	1					
ANR	2016308	Argument	& err		2016100	0					
ANR	2016309	UnaryOperationExpression	& err		2016100	0					
ANR	2016310	UnaryOperator	&		2016100	0					
ANR	2016311	Identifier	err		2016100	1					
ANR	2016312	Argument	sizeof ( proc_family_error_t )		2016100	1					
ANR	2016313	SizeofExpression	sizeof ( proc_family_error_t )		2016100	0					
ANR	2016314	Sizeof	sizeof		2016100	0					
ANR	2016315	SizeofOperand	proc_family_error_t		2016100	1					
ANR	2016316	CompoundStatement		42:62:1060:1060	2016100	1					
ANR	2016317	Statement	dprintf	473:2:12461:12467	2016100	0	True				
ANR	2016318	Statement	(	473:9:12468:12468	2016100	1	True				
ANR	2016319	Statement	D_ALWAYS	473:10:12469:12476	2016100	2	True				
ANR	2016320	Statement	","	473:18:12477:12477	2016100	3	True				
ANR	2016321	Statement	"""ProcFamilyClient: """	474:10:12489:12508	2016100	4	True				
ANR	2016322	Statement	"""failed to read response from ProcD\\n"""	475:14:12524:12561	2016100	5	True				
ANR	2016323	Statement	)	475:52:12562:12562	2016100	6	True				
ANR	2016324	ExpressionStatement		475:53:12563:12563	2016100	7	True				
ANR	2016325	ReturnStatement	return false ;	476:2:12567:12579	2016100	8	True				
ANR	2016326	Identifier	false		2016100	0					
ANR	2016327	ExpressionStatement	m_client -> end_connection ( )	478:1:12585:12611	2016100	31	True				
ANR	2016328	CallExpression	m_client -> end_connection ( )		2016100	0					
ANR	2016329	Callee	m_client -> end_connection		2016100	0					
ANR	2016330	PtrMemberAccess	m_client -> end_connection		2016100	0					
ANR	2016331	Identifier	m_client		2016100	0					
ANR	2016332	Identifier	end_connection		2016100	1					
ANR	2016333	ArgumentList			2016100	1					
ANR	2016334	ExpressionStatement	"log_exit ( ""use_glexec_for_family"" , err )"	480:1:12615:12653	2016100	32	True				
ANR	2016335	CallExpression	"log_exit ( ""use_glexec_for_family"" , err )"		2016100	0					
ANR	2016336	Callee	log_exit		2016100	0					
ANR	2016337	Identifier	log_exit		2016100	0					
ANR	2016338	ArgumentList	"""use_glexec_for_family"""		2016100	1					
ANR	2016339	Argument	"""use_glexec_for_family"""		2016100	0					
ANR	2016340	PrimaryExpression	"""use_glexec_for_family"""		2016100	0					
ANR	2016341	Argument	err		2016100	1					
ANR	2016342	Identifier	err		2016100	0					
ANR	2016343	ExpressionStatement	response = ( err == PROC_FAMILY_ERROR_SUCCESS )	481:1:12656:12701	2016100	33	True				
ANR	2016344	AssignmentExpression	response = ( err == PROC_FAMILY_ERROR_SUCCESS )		2016100	0		=			
ANR	2016345	Identifier	response		2016100	0					
ANR	2016346	EqualityExpression	err == PROC_FAMILY_ERROR_SUCCESS		2016100	1		==			
ANR	2016347	Identifier	err		2016100	0					
ANR	2016348	Identifier	PROC_FAMILY_ERROR_SUCCESS		2016100	1					
ANR	2016349	ReturnStatement	return true ;	482:1:12704:12715	2016100	34	True				
ANR	2016350	Identifier	true		2016100	0					
ANR	2016351	ReturnType	bool		2016100	1					
ANR	2016352	Identifier	ProcFamilyClient :: use_glexec_for_family		2016100	2					
ANR	2016353	ParameterList	"pid_t pid , const char * proxy , bool & response"		2016100	3					
ANR	2016354	Parameter	pid_t pid	428:40:11270:11278	2016100	0	True				
ANR	2016355	ParameterType	pid_t		2016100	0					
ANR	2016356	Identifier	pid		2016100	1					
ANR	2016357	Parameter	const char * proxy	429:40:11321:11337	2016100	1	True				
ANR	2016358	ParameterType	const char *		2016100	0					
ANR	2016359	Identifier	proxy		2016100	1					
ANR	2016360	Parameter	bool & response	430:40:11380:11393	2016100	2	True				
ANR	2016361	ParameterType	bool &		2016100	0					
ANR	2016362	Identifier	response		2016100	1					
ANR	2016363	CFGEntryNode	ENTRY		2016100		True				
ANR	2016364	CFGExitNode	EXIT		2016100		True				
ANR	2016365	Symbol	m_initialized		2016100						
ANR	2016366	Symbol	m_client -> read_data		2016100						
ANR	2016367	Symbol	PROC_FAMILY_USE_GLEXEC_FOR_FAMILY		2016100						
ANR	2016368	Symbol	pid		2016100						
ANR	2016369	Symbol	& err		2016100						
ANR	2016370	Symbol	* ( pid_t * ) ptr		2016100						
ANR	2016371	Symbol	strlen		2016100						
ANR	2016372	Symbol	m_client -> start_connection		2016100						
ANR	2016373	Symbol	* ptr		2016100						
ANR	2016374	Symbol	buffer		2016100						
ANR	2016375	Symbol	proxy_len		2016100						
ANR	2016376	Symbol	malloc		2016100						
ANR	2016377	Symbol	NULL		2016100						
ANR	2016378	Symbol	err		2016100						
ANR	2016379	Symbol	message_len		2016100						
ANR	2016380	Symbol	false		2016100						
ANR	2016381	Symbol	* ( proc_family_command_t * ) ptr		2016100						
ANR	2016382	Symbol	* m_client		2016100						
ANR	2016383	Symbol	ptr		2016100						
ANR	2016384	Symbol	proxy		2016100						
ANR	2016385	Symbol	response		2016100						
ANR	2016386	Symbol	true		2016100						
ANR	2016387	Symbol	PROC_FAMILY_ERROR_SUCCESS		2016100						
ANR	2016388	Symbol	* ( int * ) ptr		2016100						
ANR	2016389	Symbol	m_client		2016100						
ANR	2016390	Function	ProcFamilyClient :: get_usage	485:0:12720:14038							
ANR	2016391	FunctionDef	"ProcFamilyClient :: get_usage (pid_t pid , ProcFamilyUsage & usage , bool & response)"		2016390	0					
ANR	2016392	CompoundStatement		487:0:12804:14038	2016390	0					
ANR	2016393	ExpressionStatement	ASSERT ( m_initialized )	488:1:12807:12828	2016390	0	True				
ANR	2016394	CallExpression	ASSERT ( m_initialized )		2016390	0					
ANR	2016395	Callee	ASSERT		2016390	0					
ANR	2016396	Identifier	ASSERT		2016390	0					
ANR	2016397	ArgumentList	m_initialized		2016390	1					
ANR	2016398	Argument	m_initialized		2016390	0					
ANR	2016399	Identifier	m_initialized		2016390	0					
ANR	2016400	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""About to get usage data from ProcD for family with root %u\\n"" , pid )"	490:1:12832:12940	2016390	1	True				
ANR	2016401	CallExpression	"dprintf ( D_PROCFAMILY , ""About to get usage data from ProcD for family with root %u\\n"" , pid )"		2016390	0					
ANR	2016402	Callee	dprintf		2016390	0					
ANR	2016403	Identifier	dprintf		2016390	0					
ANR	2016404	ArgumentList	D_PROCFAMILY		2016390	1					
ANR	2016405	Argument	D_PROCFAMILY		2016390	0					
ANR	2016406	Identifier	D_PROCFAMILY		2016390	0					
ANR	2016407	Argument	"""About to get usage data from ProcD for family with root %u\\n"""		2016390	1					
ANR	2016408	PrimaryExpression	"""About to get usage data from ProcD for family with root %u\\n"""		2016390	0					
ANR	2016409	Argument	pid		2016390	2					
ANR	2016410	Identifier	pid		2016390	0					
ANR	2016411	IdentifierDeclStatement	int message_len = sizeof ( proc_family_command_t ) + sizeof ( pid_t ) ;	494:1:12944:13026	2016390	2	True				
ANR	2016412	IdentifierDecl	message_len = sizeof ( proc_family_command_t ) + sizeof ( pid_t )		2016390	0					
ANR	2016413	IdentifierDeclType	int		2016390	0					
ANR	2016414	Identifier	message_len		2016390	1					
ANR	2016415	AssignmentExpression	message_len = sizeof ( proc_family_command_t ) + sizeof ( pid_t )		2016390	2		=			
ANR	2016416	Identifier	message_len		2016390	0					
ANR	2016417	AdditiveExpression	sizeof ( proc_family_command_t ) + sizeof ( pid_t )		2016390	1		+			
ANR	2016418	SizeofExpression	sizeof ( proc_family_command_t )		2016390	0					
ANR	2016419	Sizeof	sizeof		2016390	0					
ANR	2016420	SizeofOperand	proc_family_command_t		2016390	1					
ANR	2016421	SizeofExpression	sizeof ( pid_t )		2016390	1					
ANR	2016422	Sizeof	sizeof		2016390	0					
ANR	2016423	SizeofOperand	pid_t		2016390	1					
ANR	2016424	IdentifierDeclStatement	void * buffer = malloc ( message_len ) ;	496:1:13029:13063	2016390	3	True				
ANR	2016425	IdentifierDecl	* buffer = malloc ( message_len )		2016390	0					
ANR	2016426	IdentifierDeclType	void *		2016390	0					
ANR	2016427	Identifier	buffer		2016390	1					
ANR	2016428	AssignmentExpression	* buffer = malloc ( message_len )		2016390	2		=			
ANR	2016429	Identifier	buffer		2016390	0					
ANR	2016430	CallExpression	malloc ( message_len )		2016390	1					
ANR	2016431	Callee	malloc		2016390	0					
ANR	2016432	Identifier	malloc		2016390	0					
ANR	2016433	ArgumentList	message_len		2016390	1					
ANR	2016434	Argument	message_len		2016390	0					
ANR	2016435	Identifier	message_len		2016390	0					
ANR	2016436	ExpressionStatement	ASSERT ( buffer != NULL )	497:1:13066:13088	2016390	4	True				
ANR	2016437	CallExpression	ASSERT ( buffer != NULL )		2016390	0					
ANR	2016438	Callee	ASSERT		2016390	0					
ANR	2016439	Identifier	ASSERT		2016390	0					
ANR	2016440	ArgumentList	buffer != NULL		2016390	1					
ANR	2016441	Argument	buffer != NULL		2016390	0					
ANR	2016442	EqualityExpression	buffer != NULL		2016390	0		!=			
ANR	2016443	Identifier	buffer		2016390	0					
ANR	2016444	Identifier	NULL		2016390	1					
ANR	2016445	IdentifierDeclStatement	char * ptr = ( char * ) buffer ;	498:1:13091:13116	2016390	5	True				
ANR	2016446	IdentifierDecl	* ptr = ( char * ) buffer		2016390	0					
ANR	2016447	IdentifierDeclType	char *		2016390	0					
ANR	2016448	Identifier	ptr		2016390	1					
ANR	2016449	AssignmentExpression	* ptr = ( char * ) buffer		2016390	2		=			
ANR	2016450	Identifier	ptr		2016390	0					
ANR	2016451	CastExpression	( char * ) buffer		2016390	1					
ANR	2016452	CastTarget	char *		2016390	0					
ANR	2016453	Identifier	buffer		2016390	1					
ANR	2016454	ExpressionStatement	* ( proc_family_command_t * ) ptr = PROC_FAMILY_GET_USAGE	500:1:13120:13172	2016390	6	True				
ANR	2016455	AssignmentExpression	* ( proc_family_command_t * ) ptr = PROC_FAMILY_GET_USAGE		2016390	0		=			
ANR	2016456	UnaryOperationExpression	* ( proc_family_command_t * ) ptr		2016390	0					
ANR	2016457	UnaryOperator	*		2016390	0					
ANR	2016458	CastExpression	( proc_family_command_t * ) ptr		2016390	1					
ANR	2016459	CastTarget	proc_family_command_t *		2016390	0					
ANR	2016460	Identifier	ptr		2016390	1					
ANR	2016461	Identifier	PROC_FAMILY_GET_USAGE		2016390	1					
ANR	2016462	ExpressionStatement	ptr += sizeof ( proc_family_command_t )	501:1:13175:13211	2016390	7	True				
ANR	2016463	AssignmentExpression	ptr += sizeof ( proc_family_command_t )		2016390	0		+=			
ANR	2016464	Identifier	ptr		2016390	0					
ANR	2016465	SizeofExpression	sizeof ( proc_family_command_t )		2016390	1					
ANR	2016466	Sizeof	sizeof		2016390	0					
ANR	2016467	SizeofOperand	proc_family_command_t		2016390	1					
ANR	2016468	ExpressionStatement	* ( pid_t * ) ptr = pid	503:1:13215:13233	2016390	8	True				
ANR	2016469	AssignmentExpression	* ( pid_t * ) ptr = pid		2016390	0		=			
ANR	2016470	UnaryOperationExpression	* ( pid_t * ) ptr		2016390	0					
ANR	2016471	UnaryOperator	*		2016390	0					
ANR	2016472	CastExpression	( pid_t * ) ptr		2016390	1					
ANR	2016473	CastTarget	pid_t *		2016390	0					
ANR	2016474	Identifier	ptr		2016390	1					
ANR	2016475	Identifier	pid		2016390	1					
ANR	2016476	ExpressionStatement	ptr += sizeof ( pid_t )	504:1:13236:13256	2016390	9	True				
ANR	2016477	AssignmentExpression	ptr += sizeof ( pid_t )		2016390	0		+=			
ANR	2016478	Identifier	ptr		2016390	0					
ANR	2016479	SizeofExpression	sizeof ( pid_t )		2016390	1					
ANR	2016480	Sizeof	sizeof		2016390	0					
ANR	2016481	SizeofOperand	pid_t		2016390	1					
ANR	2016482	ExpressionStatement	ASSERT ( ptr - ( char * ) buffer == message_len )	506:1:13260:13302	2016390	10	True				
ANR	2016483	CallExpression	ASSERT ( ptr - ( char * ) buffer == message_len )		2016390	0					
ANR	2016484	Callee	ASSERT		2016390	0					
ANR	2016485	Identifier	ASSERT		2016390	0					
ANR	2016486	ArgumentList	ptr - ( char * ) buffer == message_len		2016390	1					
ANR	2016487	Argument	ptr - ( char * ) buffer == message_len		2016390	0					
ANR	2016488	EqualityExpression	ptr - ( char * ) buffer == message_len		2016390	0		==			
ANR	2016489	AdditiveExpression	ptr - ( char * ) buffer		2016390	0		-			
ANR	2016490	Identifier	ptr		2016390	0					
ANR	2016491	CastExpression	( char * ) buffer		2016390	1					
ANR	2016492	CastTarget	char *		2016390	0					
ANR	2016493	Identifier	buffer		2016390	1					
ANR	2016494	Identifier	message_len		2016390	1					
ANR	2016495	IfStatement	"if ( ! m_client -> start_connection ( buffer , message_len ) )"		2016390	11					
ANR	2016496	Condition	"! m_client -> start_connection ( buffer , message_len )"	508:5:13310:13357	2016390	0	True				
ANR	2016497	UnaryOperationExpression	"! m_client -> start_connection ( buffer , message_len )"		2016390	0					
ANR	2016498	UnaryOperator	!		2016390	0					
ANR	2016499	CallExpression	"m_client -> start_connection ( buffer , message_len )"		2016390	1					
ANR	2016500	Callee	m_client -> start_connection		2016390	0					
ANR	2016501	PtrMemberAccess	m_client -> start_connection		2016390	0					
ANR	2016502	Identifier	m_client		2016390	0					
ANR	2016503	Identifier	start_connection		2016390	1					
ANR	2016504	ArgumentList	buffer		2016390	1					
ANR	2016505	Argument	buffer		2016390	0					
ANR	2016506	Identifier	buffer		2016390	0					
ANR	2016507	Argument	message_len		2016390	1					
ANR	2016508	Identifier	message_len		2016390	0					
ANR	2016509	CompoundStatement		22:55:555:555	2016390	1					
ANR	2016510	ExpressionStatement	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to start connection with ProcD\\n"" )"	509:2:13364:13452	2016390	0	True				
ANR	2016511	CallExpression	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to start connection with ProcD\\n"" )"		2016390	0					
ANR	2016512	Callee	dprintf		2016390	0					
ANR	2016513	Identifier	dprintf		2016390	0					
ANR	2016514	ArgumentList	D_ALWAYS		2016390	1					
ANR	2016515	Argument	D_ALWAYS		2016390	0					
ANR	2016516	Identifier	D_ALWAYS		2016390	0					
ANR	2016517	Argument	"""ProcFamilyClient: failed to start connection with ProcD\\n"""		2016390	1					
ANR	2016518	PrimaryExpression	"""ProcFamilyClient: failed to start connection with ProcD\\n"""		2016390	0					
ANR	2016519	ExpressionStatement	free ( buffer )	511:2:13456:13468	2016390	1	True				
ANR	2016520	CallExpression	free ( buffer )		2016390	0					
ANR	2016521	Callee	free		2016390	0					
ANR	2016522	Identifier	free		2016390	0					
ANR	2016523	ArgumentList	buffer		2016390	1					
ANR	2016524	Argument	buffer		2016390	0					
ANR	2016525	Identifier	buffer		2016390	0					
ANR	2016526	ReturnStatement	return false ;	512:2:13472:13484	2016390	2	True				
ANR	2016527	Identifier	false		2016390	0					
ANR	2016528	ExpressionStatement	free ( buffer )	514:1:13490:13502	2016390	12	True				
ANR	2016529	CallExpression	free ( buffer )		2016390	0					
ANR	2016530	Callee	free		2016390	0					
ANR	2016531	Identifier	free		2016390	0					
ANR	2016532	ArgumentList	buffer		2016390	1					
ANR	2016533	Argument	buffer		2016390	0					
ANR	2016534	Identifier	buffer		2016390	0					
ANR	2016535	IdentifierDeclStatement	proc_family_error_t err ;	515:1:13505:13528	2016390	13	True				
ANR	2016536	IdentifierDecl	err		2016390	0					
ANR	2016537	IdentifierDeclType	proc_family_error_t		2016390	0					
ANR	2016538	Identifier	err		2016390	1					
ANR	2016539	IfStatement	"if ( ! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) ) )"		2016390	14					
ANR	2016540	Condition	"! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"	516:5:13535:13589	2016390	0	True				
ANR	2016541	UnaryOperationExpression	"! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"		2016390	0					
ANR	2016542	UnaryOperator	!		2016390	0					
ANR	2016543	CallExpression	"m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"		2016390	1					
ANR	2016544	Callee	m_client -> read_data		2016390	0					
ANR	2016545	PtrMemberAccess	m_client -> read_data		2016390	0					
ANR	2016546	Identifier	m_client		2016390	0					
ANR	2016547	Identifier	read_data		2016390	1					
ANR	2016548	ArgumentList	& err		2016390	1					
ANR	2016549	Argument	& err		2016390	0					
ANR	2016550	UnaryOperationExpression	& err		2016390	0					
ANR	2016551	UnaryOperator	&		2016390	0					
ANR	2016552	Identifier	err		2016390	1					
ANR	2016553	Argument	sizeof ( proc_family_error_t )		2016390	1					
ANR	2016554	SizeofExpression	sizeof ( proc_family_error_t )		2016390	0					
ANR	2016555	Sizeof	sizeof		2016390	0					
ANR	2016556	SizeofOperand	proc_family_error_t		2016390	1					
ANR	2016557	CompoundStatement		30:62:787:787	2016390	1					
ANR	2016558	ExpressionStatement	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to read response from ProcD\\n"" )"	517:2:13596:13681	2016390	0	True				
ANR	2016559	CallExpression	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to read response from ProcD\\n"" )"		2016390	0					
ANR	2016560	Callee	dprintf		2016390	0					
ANR	2016561	Identifier	dprintf		2016390	0					
ANR	2016562	ArgumentList	D_ALWAYS		2016390	1					
ANR	2016563	Argument	D_ALWAYS		2016390	0					
ANR	2016564	Identifier	D_ALWAYS		2016390	0					
ANR	2016565	Argument	"""ProcFamilyClient: failed to read response from ProcD\\n"""		2016390	1					
ANR	2016566	PrimaryExpression	"""ProcFamilyClient: failed to read response from ProcD\\n"""		2016390	0					
ANR	2016567	ReturnStatement	return false ;	519:2:13685:13697	2016390	1	True				
ANR	2016568	Identifier	false		2016390	0					
ANR	2016569	IfStatement	if ( err == PROC_FAMILY_ERROR_SUCCESS )		2016390	15					
ANR	2016570	Condition	err == PROC_FAMILY_ERROR_SUCCESS	521:5:13707:13738	2016390	0	True				
ANR	2016571	EqualityExpression	err == PROC_FAMILY_ERROR_SUCCESS		2016390	0		==			
ANR	2016572	Identifier	err		2016390	0					
ANR	2016573	Identifier	PROC_FAMILY_ERROR_SUCCESS		2016390	1					
ANR	2016574	CompoundStatement		35:39:936:936	2016390	1					
ANR	2016575	IfStatement	"if ( ! m_client -> read_data ( & usage , sizeof ( ProcFamilyUsage ) ) )"		2016390	0					
ANR	2016576	Condition	"! m_client -> read_data ( & usage , sizeof ( ProcFamilyUsage ) )"	522:6:13749:13801	2016390	0	True				
ANR	2016577	UnaryOperationExpression	"! m_client -> read_data ( & usage , sizeof ( ProcFamilyUsage ) )"		2016390	0					
ANR	2016578	UnaryOperator	!		2016390	0					
ANR	2016579	CallExpression	"m_client -> read_data ( & usage , sizeof ( ProcFamilyUsage ) )"		2016390	1					
ANR	2016580	Callee	m_client -> read_data		2016390	0					
ANR	2016581	PtrMemberAccess	m_client -> read_data		2016390	0					
ANR	2016582	Identifier	m_client		2016390	0					
ANR	2016583	Identifier	read_data		2016390	1					
ANR	2016584	ArgumentList	& usage		2016390	1					
ANR	2016585	Argument	& usage		2016390	0					
ANR	2016586	UnaryOperationExpression	& usage		2016390	0					
ANR	2016587	UnaryOperator	&		2016390	0					
ANR	2016588	Identifier	usage		2016390	1					
ANR	2016589	Argument	sizeof ( ProcFamilyUsage )		2016390	1					
ANR	2016590	SizeofExpression	sizeof ( ProcFamilyUsage )		2016390	0					
ANR	2016591	Sizeof	sizeof		2016390	0					
ANR	2016592	SizeofOperand	ProcFamilyUsage		2016390	1					
ANR	2016593	CompoundStatement		36:61:999:999	2016390	1					
ANR	2016594	ExpressionStatement	"dprintf ( D_ALWAYS , ""ProcFamilyClient: error getting usage from ProcD\\n"" )"	523:3:13809:13891	2016390	0	True				
ANR	2016595	CallExpression	"dprintf ( D_ALWAYS , ""ProcFamilyClient: error getting usage from ProcD\\n"" )"		2016390	0					
ANR	2016596	Callee	dprintf		2016390	0					
ANR	2016597	Identifier	dprintf		2016390	0					
ANR	2016598	ArgumentList	D_ALWAYS		2016390	1					
ANR	2016599	Argument	D_ALWAYS		2016390	0					
ANR	2016600	Identifier	D_ALWAYS		2016390	0					
ANR	2016601	Argument	"""ProcFamilyClient: error getting usage from ProcD\\n"""		2016390	1					
ANR	2016602	PrimaryExpression	"""ProcFamilyClient: error getting usage from ProcD\\n"""		2016390	0					
ANR	2016603	ReturnStatement	return false ;	525:3:13896:13908	2016390	1	True				
ANR	2016604	Identifier	false		2016390	0					
ANR	2016605	ExpressionStatement	m_client -> end_connection ( )	528:1:13918:13944	2016390	16	True				
ANR	2016606	CallExpression	m_client -> end_connection ( )		2016390	0					
ANR	2016607	Callee	m_client -> end_connection		2016390	0					
ANR	2016608	PtrMemberAccess	m_client -> end_connection		2016390	0					
ANR	2016609	Identifier	m_client		2016390	0					
ANR	2016610	Identifier	end_connection		2016390	1					
ANR	2016611	ArgumentList			2016390	1					
ANR	2016612	ExpressionStatement	"log_exit ( ""get_usage"" , err )"	530:1:13948:13974	2016390	17	True				
ANR	2016613	CallExpression	"log_exit ( ""get_usage"" , err )"		2016390	0					
ANR	2016614	Callee	log_exit		2016390	0					
ANR	2016615	Identifier	log_exit		2016390	0					
ANR	2016616	ArgumentList	"""get_usage"""		2016390	1					
ANR	2016617	Argument	"""get_usage"""		2016390	0					
ANR	2016618	PrimaryExpression	"""get_usage"""		2016390	0					
ANR	2016619	Argument	err		2016390	1					
ANR	2016620	Identifier	err		2016390	0					
ANR	2016621	ExpressionStatement	response = ( err == PROC_FAMILY_ERROR_SUCCESS )	531:1:13977:14022	2016390	18	True				
ANR	2016622	AssignmentExpression	response = ( err == PROC_FAMILY_ERROR_SUCCESS )		2016390	0		=			
ANR	2016623	Identifier	response		2016390	0					
ANR	2016624	EqualityExpression	err == PROC_FAMILY_ERROR_SUCCESS		2016390	1		==			
ANR	2016625	Identifier	err		2016390	0					
ANR	2016626	Identifier	PROC_FAMILY_ERROR_SUCCESS		2016390	1					
ANR	2016627	ReturnStatement	return true ;	532:1:14025:14036	2016390	19	True				
ANR	2016628	Identifier	true		2016390	0					
ANR	2016629	ReturnType	bool		2016390	1					
ANR	2016630	Identifier	ProcFamilyClient :: get_usage		2016390	2					
ANR	2016631	ParameterList	"pid_t pid , ProcFamilyUsage & usage , bool & response"		2016390	3					
ANR	2016632	Parameter	pid_t pid	486:28:12753:12761	2016390	0	True				
ANR	2016633	ParameterType	pid_t		2016390	0					
ANR	2016634	Identifier	pid		2016390	1					
ANR	2016635	Parameter	ProcFamilyUsage & usage	486:39:12764:12785	2016390	1	True				
ANR	2016636	ParameterType	ProcFamilyUsage &		2016390	0					
ANR	2016637	Identifier	usage		2016390	1					
ANR	2016638	Parameter	bool & response	486:63:12788:12801	2016390	2	True				
ANR	2016639	ParameterType	bool &		2016390	0					
ANR	2016640	Identifier	response		2016390	1					
ANR	2016641	CFGEntryNode	ENTRY		2016390		True				
ANR	2016642	CFGExitNode	EXIT		2016390		True				
ANR	2016643	Symbol	m_initialized		2016390						
ANR	2016644	Symbol	m_client -> read_data		2016390						
ANR	2016645	Symbol	D_PROCFAMILY		2016390						
ANR	2016646	Symbol	usage		2016390						
ANR	2016647	Symbol	& usage		2016390						
ANR	2016648	Symbol	pid		2016390						
ANR	2016649	Symbol	& err		2016390						
ANR	2016650	Symbol	* ( pid_t * ) ptr		2016390						
ANR	2016651	Symbol	m_client -> start_connection		2016390						
ANR	2016652	Symbol	* ptr		2016390						
ANR	2016653	Symbol	buffer		2016390						
ANR	2016654	Symbol	malloc		2016390						
ANR	2016655	Symbol	NULL		2016390						
ANR	2016656	Symbol	PROC_FAMILY_GET_USAGE		2016390						
ANR	2016657	Symbol	err		2016390						
ANR	2016658	Symbol	message_len		2016390						
ANR	2016659	Symbol	D_ALWAYS		2016390						
ANR	2016660	Symbol	false		2016390						
ANR	2016661	Symbol	* ( proc_family_command_t * ) ptr		2016390						
ANR	2016662	Symbol	* m_client		2016390						
ANR	2016663	Symbol	ptr		2016390						
ANR	2016664	Symbol	response		2016390						
ANR	2016665	Symbol	true		2016390						
ANR	2016666	Symbol	PROC_FAMILY_ERROR_SUCCESS		2016390						
ANR	2016667	Symbol	m_client		2016390						
ANR	2016668	Function	ProcFamilyClient :: signal_process	535:0:14041:15223							
ANR	2016669	FunctionDef	"ProcFamilyClient :: signal_process (pid_t pid , int sig , bool & response)"		2016668	0					
ANR	2016670	CompoundStatement		537:0:14115:15223	2016668	0					
ANR	2016671	ExpressionStatement	ASSERT ( m_initialized )	538:1:14118:14139	2016668	0	True				
ANR	2016672	CallExpression	ASSERT ( m_initialized )		2016668	0					
ANR	2016673	Callee	ASSERT		2016668	0					
ANR	2016674	Identifier	ASSERT		2016668	0					
ANR	2016675	ArgumentList	m_initialized		2016668	1					
ANR	2016676	Argument	m_initialized		2016668	0					
ANR	2016677	Identifier	m_initialized		2016668	0					
ANR	2016678	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""About to send process %u signal %d via the ProcD\\n"" , pid , sig )"	540:1:14143:14255	2016668	1	True				
ANR	2016679	CallExpression	"dprintf ( D_PROCFAMILY , ""About to send process %u signal %d via the ProcD\\n"" , pid , sig )"		2016668	0					
ANR	2016680	Callee	dprintf		2016668	0					
ANR	2016681	Identifier	dprintf		2016668	0					
ANR	2016682	ArgumentList	D_PROCFAMILY		2016668	1					
ANR	2016683	Argument	D_PROCFAMILY		2016668	0					
ANR	2016684	Identifier	D_PROCFAMILY		2016668	0					
ANR	2016685	Argument	"""About to send process %u signal %d via the ProcD\\n"""		2016668	1					
ANR	2016686	PrimaryExpression	"""About to send process %u signal %d via the ProcD\\n"""		2016668	0					
ANR	2016687	Argument	pid		2016668	2					
ANR	2016688	Identifier	pid		2016668	0					
ANR	2016689	Argument	sig		2016668	3					
ANR	2016690	Identifier	sig		2016668	0					
ANR	2016691	IdentifierDeclStatement	int message_len = sizeof ( proc_family_command_t ) + sizeof ( pid_t ) + sizeof ( int ) ;	545:1:14259:14374	2016668	2	True				
ANR	2016692	IdentifierDecl	message_len = sizeof ( proc_family_command_t ) + sizeof ( pid_t ) + sizeof ( int )		2016668	0					
ANR	2016693	IdentifierDeclType	int		2016668	0					
ANR	2016694	Identifier	message_len		2016668	1					
ANR	2016695	AssignmentExpression	message_len = sizeof ( proc_family_command_t ) + sizeof ( pid_t ) + sizeof ( int )		2016668	2		=			
ANR	2016696	Identifier	message_len		2016668	0					
ANR	2016697	AdditiveExpression	sizeof ( proc_family_command_t ) + sizeof ( pid_t ) + sizeof ( int )		2016668	1		+			
ANR	2016698	SizeofExpression	sizeof ( proc_family_command_t )		2016668	0					
ANR	2016699	Sizeof	sizeof		2016668	0					
ANR	2016700	SizeofOperand	proc_family_command_t		2016668	1					
ANR	2016701	AdditiveExpression	sizeof ( pid_t ) + sizeof ( int )		2016668	1		+			
ANR	2016702	SizeofExpression	sizeof ( pid_t )		2016668	0					
ANR	2016703	Sizeof	sizeof		2016668	0					
ANR	2016704	SizeofOperand	pid_t		2016668	1					
ANR	2016705	SizeofExpression	sizeof ( int )		2016668	1					
ANR	2016706	Sizeof	sizeof		2016668	0					
ANR	2016707	SizeofOperand	int		2016668	1					
ANR	2016708	IdentifierDeclStatement	void * buffer = malloc ( message_len ) ;	548:1:14377:14411	2016668	3	True				
ANR	2016709	IdentifierDecl	* buffer = malloc ( message_len )		2016668	0					
ANR	2016710	IdentifierDeclType	void *		2016668	0					
ANR	2016711	Identifier	buffer		2016668	1					
ANR	2016712	AssignmentExpression	* buffer = malloc ( message_len )		2016668	2		=			
ANR	2016713	Identifier	buffer		2016668	0					
ANR	2016714	CallExpression	malloc ( message_len )		2016668	1					
ANR	2016715	Callee	malloc		2016668	0					
ANR	2016716	Identifier	malloc		2016668	0					
ANR	2016717	ArgumentList	message_len		2016668	1					
ANR	2016718	Argument	message_len		2016668	0					
ANR	2016719	Identifier	message_len		2016668	0					
ANR	2016720	ExpressionStatement	ASSERT ( buffer != NULL )	549:1:14414:14436	2016668	4	True				
ANR	2016721	CallExpression	ASSERT ( buffer != NULL )		2016668	0					
ANR	2016722	Callee	ASSERT		2016668	0					
ANR	2016723	Identifier	ASSERT		2016668	0					
ANR	2016724	ArgumentList	buffer != NULL		2016668	1					
ANR	2016725	Argument	buffer != NULL		2016668	0					
ANR	2016726	EqualityExpression	buffer != NULL		2016668	0		!=			
ANR	2016727	Identifier	buffer		2016668	0					
ANR	2016728	Identifier	NULL		2016668	1					
ANR	2016729	IdentifierDeclStatement	char * ptr = ( char * ) buffer ;	550:1:14439:14464	2016668	5	True				
ANR	2016730	IdentifierDecl	* ptr = ( char * ) buffer		2016668	0					
ANR	2016731	IdentifierDeclType	char *		2016668	0					
ANR	2016732	Identifier	ptr		2016668	1					
ANR	2016733	AssignmentExpression	* ptr = ( char * ) buffer		2016668	2		=			
ANR	2016734	Identifier	ptr		2016668	0					
ANR	2016735	CastExpression	( char * ) buffer		2016668	1					
ANR	2016736	CastTarget	char *		2016668	0					
ANR	2016737	Identifier	buffer		2016668	1					
ANR	2016738	ExpressionStatement	* ( proc_family_command_t * ) ptr = PROC_FAMILY_SIGNAL_PROCESS	552:1:14468:14525	2016668	6	True				
ANR	2016739	AssignmentExpression	* ( proc_family_command_t * ) ptr = PROC_FAMILY_SIGNAL_PROCESS		2016668	0		=			
ANR	2016740	UnaryOperationExpression	* ( proc_family_command_t * ) ptr		2016668	0					
ANR	2016741	UnaryOperator	*		2016668	0					
ANR	2016742	CastExpression	( proc_family_command_t * ) ptr		2016668	1					
ANR	2016743	CastTarget	proc_family_command_t *		2016668	0					
ANR	2016744	Identifier	ptr		2016668	1					
ANR	2016745	Identifier	PROC_FAMILY_SIGNAL_PROCESS		2016668	1					
ANR	2016746	ExpressionStatement	ptr += sizeof ( proc_family_command_t )	553:1:14528:14564	2016668	7	True				
ANR	2016747	AssignmentExpression	ptr += sizeof ( proc_family_command_t )		2016668	0		+=			
ANR	2016748	Identifier	ptr		2016668	0					
ANR	2016749	SizeofExpression	sizeof ( proc_family_command_t )		2016668	1					
ANR	2016750	Sizeof	sizeof		2016668	0					
ANR	2016751	SizeofOperand	proc_family_command_t		2016668	1					
ANR	2016752	ExpressionStatement	* ( pid_t * ) ptr = pid	555:1:14568:14586	2016668	8	True				
ANR	2016753	AssignmentExpression	* ( pid_t * ) ptr = pid		2016668	0		=			
ANR	2016754	UnaryOperationExpression	* ( pid_t * ) ptr		2016668	0					
ANR	2016755	UnaryOperator	*		2016668	0					
ANR	2016756	CastExpression	( pid_t * ) ptr		2016668	1					
ANR	2016757	CastTarget	pid_t *		2016668	0					
ANR	2016758	Identifier	ptr		2016668	1					
ANR	2016759	Identifier	pid		2016668	1					
ANR	2016760	ExpressionStatement	ptr += sizeof ( pid_t )	556:1:14589:14609	2016668	9	True				
ANR	2016761	AssignmentExpression	ptr += sizeof ( pid_t )		2016668	0		+=			
ANR	2016762	Identifier	ptr		2016668	0					
ANR	2016763	SizeofExpression	sizeof ( pid_t )		2016668	1					
ANR	2016764	Sizeof	sizeof		2016668	0					
ANR	2016765	SizeofOperand	pid_t		2016668	1					
ANR	2016766	ExpressionStatement	* ( int * ) ptr = sig	558:1:14613:14629	2016668	10	True				
ANR	2016767	AssignmentExpression	* ( int * ) ptr = sig		2016668	0		=			
ANR	2016768	UnaryOperationExpression	* ( int * ) ptr		2016668	0					
ANR	2016769	UnaryOperator	*		2016668	0					
ANR	2016770	CastExpression	( int * ) ptr		2016668	1					
ANR	2016771	CastTarget	int *		2016668	0					
ANR	2016772	Identifier	ptr		2016668	1					
ANR	2016773	Identifier	sig		2016668	1					
ANR	2016774	ExpressionStatement	ptr += sizeof ( int )	559:1:14632:14650	2016668	11	True				
ANR	2016775	AssignmentExpression	ptr += sizeof ( int )		2016668	0		+=			
ANR	2016776	Identifier	ptr		2016668	0					
ANR	2016777	SizeofExpression	sizeof ( int )		2016668	1					
ANR	2016778	Sizeof	sizeof		2016668	0					
ANR	2016779	SizeofOperand	int		2016668	1					
ANR	2016780	ExpressionStatement	ASSERT ( ptr - ( char * ) buffer == message_len )	561:1:14654:14696	2016668	12	True				
ANR	2016781	CallExpression	ASSERT ( ptr - ( char * ) buffer == message_len )		2016668	0					
ANR	2016782	Callee	ASSERT		2016668	0					
ANR	2016783	Identifier	ASSERT		2016668	0					
ANR	2016784	ArgumentList	ptr - ( char * ) buffer == message_len		2016668	1					
ANR	2016785	Argument	ptr - ( char * ) buffer == message_len		2016668	0					
ANR	2016786	EqualityExpression	ptr - ( char * ) buffer == message_len		2016668	0		==			
ANR	2016787	AdditiveExpression	ptr - ( char * ) buffer		2016668	0		-			
ANR	2016788	Identifier	ptr		2016668	0					
ANR	2016789	CastExpression	( char * ) buffer		2016668	1					
ANR	2016790	CastTarget	char *		2016668	0					
ANR	2016791	Identifier	buffer		2016668	1					
ANR	2016792	Identifier	message_len		2016668	1					
ANR	2016793	IfStatement	"if ( ! m_client -> start_connection ( buffer , message_len ) )"		2016668	13					
ANR	2016794	Condition	"! m_client -> start_connection ( buffer , message_len )"	563:5:14705:14752	2016668	0	True				
ANR	2016795	UnaryOperationExpression	"! m_client -> start_connection ( buffer , message_len )"		2016668	0					
ANR	2016796	UnaryOperator	!		2016668	0					
ANR	2016797	CallExpression	"m_client -> start_connection ( buffer , message_len )"		2016668	1					
ANR	2016798	Callee	m_client -> start_connection		2016668	0					
ANR	2016799	PtrMemberAccess	m_client -> start_connection		2016668	0					
ANR	2016800	Identifier	m_client		2016668	0					
ANR	2016801	Identifier	start_connection		2016668	1					
ANR	2016802	ArgumentList	buffer		2016668	1					
ANR	2016803	Argument	buffer		2016668	0					
ANR	2016804	Identifier	buffer		2016668	0					
ANR	2016805	Argument	message_len		2016668	1					
ANR	2016806	Identifier	message_len		2016668	0					
ANR	2016807	CompoundStatement		27:55:639:639	2016668	1					
ANR	2016808	ExpressionStatement	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to start connection with ProcD\\n"" )"	564:2:14759:14847	2016668	0	True				
ANR	2016809	CallExpression	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to start connection with ProcD\\n"" )"		2016668	0					
ANR	2016810	Callee	dprintf		2016668	0					
ANR	2016811	Identifier	dprintf		2016668	0					
ANR	2016812	ArgumentList	D_ALWAYS		2016668	1					
ANR	2016813	Argument	D_ALWAYS		2016668	0					
ANR	2016814	Identifier	D_ALWAYS		2016668	0					
ANR	2016815	Argument	"""ProcFamilyClient: failed to start connection with ProcD\\n"""		2016668	1					
ANR	2016816	PrimaryExpression	"""ProcFamilyClient: failed to start connection with ProcD\\n"""		2016668	0					
ANR	2016817	ExpressionStatement	free ( buffer )	566:2:14851:14863	2016668	1	True				
ANR	2016818	CallExpression	free ( buffer )		2016668	0					
ANR	2016819	Callee	free		2016668	0					
ANR	2016820	Identifier	free		2016668	0					
ANR	2016821	ArgumentList	buffer		2016668	1					
ANR	2016822	Argument	buffer		2016668	0					
ANR	2016823	Identifier	buffer		2016668	0					
ANR	2016824	ReturnStatement	return false ;	567:2:14867:14879	2016668	2	True				
ANR	2016825	Identifier	false		2016668	0					
ANR	2016826	ExpressionStatement	free ( buffer )	569:1:14885:14897	2016668	14	True				
ANR	2016827	CallExpression	free ( buffer )		2016668	0					
ANR	2016828	Callee	free		2016668	0					
ANR	2016829	Identifier	free		2016668	0					
ANR	2016830	ArgumentList	buffer		2016668	1					
ANR	2016831	Argument	buffer		2016668	0					
ANR	2016832	Identifier	buffer		2016668	0					
ANR	2016833	IdentifierDeclStatement	proc_family_error_t err ;	570:1:14900:14923	2016668	15	True				
ANR	2016834	IdentifierDecl	err		2016668	0					
ANR	2016835	IdentifierDeclType	proc_family_error_t		2016668	0					
ANR	2016836	Identifier	err		2016668	1					
ANR	2016837	IfStatement	"if ( ! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) ) )"		2016668	16					
ANR	2016838	Condition	"! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"	571:5:14930:14984	2016668	0	True				
ANR	2016839	UnaryOperationExpression	"! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"		2016668	0					
ANR	2016840	UnaryOperator	!		2016668	0					
ANR	2016841	CallExpression	"m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"		2016668	1					
ANR	2016842	Callee	m_client -> read_data		2016668	0					
ANR	2016843	PtrMemberAccess	m_client -> read_data		2016668	0					
ANR	2016844	Identifier	m_client		2016668	0					
ANR	2016845	Identifier	read_data		2016668	1					
ANR	2016846	ArgumentList	& err		2016668	1					
ANR	2016847	Argument	& err		2016668	0					
ANR	2016848	UnaryOperationExpression	& err		2016668	0					
ANR	2016849	UnaryOperator	&		2016668	0					
ANR	2016850	Identifier	err		2016668	1					
ANR	2016851	Argument	sizeof ( proc_family_error_t )		2016668	1					
ANR	2016852	SizeofExpression	sizeof ( proc_family_error_t )		2016668	0					
ANR	2016853	Sizeof	sizeof		2016668	0					
ANR	2016854	SizeofOperand	proc_family_error_t		2016668	1					
ANR	2016855	CompoundStatement		35:62:871:871	2016668	1					
ANR	2016856	ExpressionStatement	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to read response from ProcD\\n"" )"	572:2:14991:15076	2016668	0	True				
ANR	2016857	CallExpression	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to read response from ProcD\\n"" )"		2016668	0					
ANR	2016858	Callee	dprintf		2016668	0					
ANR	2016859	Identifier	dprintf		2016668	0					
ANR	2016860	ArgumentList	D_ALWAYS		2016668	1					
ANR	2016861	Argument	D_ALWAYS		2016668	0					
ANR	2016862	Identifier	D_ALWAYS		2016668	0					
ANR	2016863	Argument	"""ProcFamilyClient: failed to read response from ProcD\\n"""		2016668	1					
ANR	2016864	PrimaryExpression	"""ProcFamilyClient: failed to read response from ProcD\\n"""		2016668	0					
ANR	2016865	ReturnStatement	return false ;	574:2:15080:15092	2016668	1	True				
ANR	2016866	Identifier	false		2016668	0					
ANR	2016867	ExpressionStatement	m_client -> end_connection ( )	576:1:15098:15124	2016668	17	True				
ANR	2016868	CallExpression	m_client -> end_connection ( )		2016668	0					
ANR	2016869	Callee	m_client -> end_connection		2016668	0					
ANR	2016870	PtrMemberAccess	m_client -> end_connection		2016668	0					
ANR	2016871	Identifier	m_client		2016668	0					
ANR	2016872	Identifier	end_connection		2016668	1					
ANR	2016873	ArgumentList			2016668	1					
ANR	2016874	ExpressionStatement	"log_exit ( ""signal_process"" , err )"	578:1:15128:15159	2016668	18	True				
ANR	2016875	CallExpression	"log_exit ( ""signal_process"" , err )"		2016668	0					
ANR	2016876	Callee	log_exit		2016668	0					
ANR	2016877	Identifier	log_exit		2016668	0					
ANR	2016878	ArgumentList	"""signal_process"""		2016668	1					
ANR	2016879	Argument	"""signal_process"""		2016668	0					
ANR	2016880	PrimaryExpression	"""signal_process"""		2016668	0					
ANR	2016881	Argument	err		2016668	1					
ANR	2016882	Identifier	err		2016668	0					
ANR	2016883	ExpressionStatement	response = ( err == PROC_FAMILY_ERROR_SUCCESS )	579:1:15162:15207	2016668	19	True				
ANR	2016884	AssignmentExpression	response = ( err == PROC_FAMILY_ERROR_SUCCESS )		2016668	0		=			
ANR	2016885	Identifier	response		2016668	0					
ANR	2016886	EqualityExpression	err == PROC_FAMILY_ERROR_SUCCESS		2016668	1		==			
ANR	2016887	Identifier	err		2016668	0					
ANR	2016888	Identifier	PROC_FAMILY_ERROR_SUCCESS		2016668	1					
ANR	2016889	ReturnStatement	return true ;	580:1:15210:15221	2016668	20	True				
ANR	2016890	Identifier	true		2016668	0					
ANR	2016891	ReturnType	bool		2016668	1					
ANR	2016892	Identifier	ProcFamilyClient :: signal_process		2016668	2					
ANR	2016893	ParameterList	"pid_t pid , int sig , bool & response"		2016668	3					
ANR	2016894	Parameter	pid_t pid	536:33:14079:14087	2016668	0	True				
ANR	2016895	ParameterType	pid_t		2016668	0					
ANR	2016896	Identifier	pid		2016668	1					
ANR	2016897	Parameter	int sig	536:44:14090:14096	2016668	1	True				
ANR	2016898	ParameterType	int		2016668	0					
ANR	2016899	Identifier	sig		2016668	1					
ANR	2016900	Parameter	bool & response	536:53:14099:14112	2016668	2	True				
ANR	2016901	ParameterType	bool &		2016668	0					
ANR	2016902	Identifier	response		2016668	1					
ANR	2016903	CFGEntryNode	ENTRY		2016668		True				
ANR	2016904	CFGExitNode	EXIT		2016668		True				
ANR	2016905	Symbol	m_initialized		2016668						
ANR	2016906	Symbol	m_client -> read_data		2016668						
ANR	2016907	Symbol	D_PROCFAMILY		2016668						
ANR	2016908	Symbol	pid		2016668						
ANR	2016909	Symbol	& err		2016668						
ANR	2016910	Symbol	* ( pid_t * ) ptr		2016668						
ANR	2016911	Symbol	sig		2016668						
ANR	2016912	Symbol	m_client -> start_connection		2016668						
ANR	2016913	Symbol	* ptr		2016668						
ANR	2016914	Symbol	buffer		2016668						
ANR	2016915	Symbol	malloc		2016668						
ANR	2016916	Symbol	NULL		2016668						
ANR	2016917	Symbol	err		2016668						
ANR	2016918	Symbol	message_len		2016668						
ANR	2016919	Symbol	D_ALWAYS		2016668						
ANR	2016920	Symbol	false		2016668						
ANR	2016921	Symbol	* ( proc_family_command_t * ) ptr		2016668						
ANR	2016922	Symbol	PROC_FAMILY_SIGNAL_PROCESS		2016668						
ANR	2016923	Symbol	* m_client		2016668						
ANR	2016924	Symbol	ptr		2016668						
ANR	2016925	Symbol	response		2016668						
ANR	2016926	Symbol	true		2016668						
ANR	2016927	Symbol	PROC_FAMILY_ERROR_SUCCESS		2016668						
ANR	2016928	Symbol	* ( int * ) ptr		2016668						
ANR	2016929	Symbol	m_client		2016668						
ANR	2016930	Function	ProcFamilyClient :: kill_family	583:0:15226:15489							
ANR	2016931	FunctionDef	"ProcFamilyClient :: kill_family (pid_t pid , bool & response)"		2016930	0					
ANR	2016932	CompoundStatement		585:0:15288:15489	2016930	0					
ANR	2016933	ExpressionStatement	ASSERT ( m_initialized )	586:1:15291:15312	2016930	0	True				
ANR	2016934	CallExpression	ASSERT ( m_initialized )		2016930	0					
ANR	2016935	Callee	ASSERT		2016930	0					
ANR	2016936	Identifier	ASSERT		2016930	0					
ANR	2016937	ArgumentList	m_initialized		2016930	1					
ANR	2016938	Argument	m_initialized		2016930	0					
ANR	2016939	Identifier	m_initialized		2016930	0					
ANR	2016940	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""About to kill family with root process %u using the ProcD\\n"" , pid )"	588:1:15316:15423	2016930	1	True				
ANR	2016941	CallExpression	"dprintf ( D_PROCFAMILY , ""About to kill family with root process %u using the ProcD\\n"" , pid )"		2016930	0					
ANR	2016942	Callee	dprintf		2016930	0					
ANR	2016943	Identifier	dprintf		2016930	0					
ANR	2016944	ArgumentList	D_PROCFAMILY		2016930	1					
ANR	2016945	Argument	D_PROCFAMILY		2016930	0					
ANR	2016946	Identifier	D_PROCFAMILY		2016930	0					
ANR	2016947	Argument	"""About to kill family with root process %u using the ProcD\\n"""		2016930	1					
ANR	2016948	PrimaryExpression	"""About to kill family with root process %u using the ProcD\\n"""		2016930	0					
ANR	2016949	Argument	pid		2016930	2					
ANR	2016950	Identifier	pid		2016930	0					
ANR	2016951	ReturnStatement	"return signal_family ( pid , PROC_FAMILY_KILL_FAMILY , response ) ;"	592:1:15427:15487	2016930	2	True				
ANR	2016952	CallExpression	"signal_family ( pid , PROC_FAMILY_KILL_FAMILY , response )"		2016930	0					
ANR	2016953	Callee	signal_family		2016930	0					
ANR	2016954	Identifier	signal_family		2016930	0					
ANR	2016955	ArgumentList	pid		2016930	1					
ANR	2016956	Argument	pid		2016930	0					
ANR	2016957	Identifier	pid		2016930	0					
ANR	2016958	Argument	PROC_FAMILY_KILL_FAMILY		2016930	1					
ANR	2016959	Identifier	PROC_FAMILY_KILL_FAMILY		2016930	0					
ANR	2016960	Argument	response		2016930	2					
ANR	2016961	Identifier	response		2016930	0					
ANR	2016962	ReturnType	bool		2016930	1					
ANR	2016963	Identifier	ProcFamilyClient :: kill_family		2016930	2					
ANR	2016964	ParameterList	"pid_t pid , bool & response"		2016930	3					
ANR	2016965	Parameter	pid_t pid	584:30:15261:15269	2016930	0	True				
ANR	2016966	ParameterType	pid_t		2016930	0					
ANR	2016967	Identifier	pid		2016930	1					
ANR	2016968	Parameter	bool & response	584:41:15272:15285	2016930	1	True				
ANR	2016969	ParameterType	bool &		2016930	0					
ANR	2016970	Identifier	response		2016930	1					
ANR	2016971	CFGEntryNode	ENTRY		2016930		True				
ANR	2016972	CFGExitNode	EXIT		2016930		True				
ANR	2016973	Symbol	m_initialized		2016930						
ANR	2016974	Symbol	D_PROCFAMILY		2016930						
ANR	2016975	Symbol	response		2016930						
ANR	2016976	Symbol	pid		2016930						
ANR	2016977	Symbol	signal_family		2016930						
ANR	2016978	Symbol	PROC_FAMILY_KILL_FAMILY		2016930						
ANR	2016979	Function	ProcFamilyClient :: suspend_family	595:0:15492:15764							
ANR	2016980	FunctionDef	"ProcFamilyClient :: suspend_family (pid_t pid , bool & response)"		2016979	0					
ANR	2016981	CompoundStatement		597:0:15557:15764	2016979	0					
ANR	2016982	ExpressionStatement	ASSERT ( m_initialized )	598:1:15560:15581	2016979	0	True				
ANR	2016983	CallExpression	ASSERT ( m_initialized )		2016979	0					
ANR	2016984	Callee	ASSERT		2016979	0					
ANR	2016985	Identifier	ASSERT		2016979	0					
ANR	2016986	ArgumentList	m_initialized		2016979	1					
ANR	2016987	Argument	m_initialized		2016979	0					
ANR	2016988	Identifier	m_initialized		2016979	0					
ANR	2016989	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""About to suspend family with root process %u using the ProcD\\n"" , pid )"	600:1:15585:15695	2016979	1	True				
ANR	2016990	CallExpression	"dprintf ( D_PROCFAMILY , ""About to suspend family with root process %u using the ProcD\\n"" , pid )"		2016979	0					
ANR	2016991	Callee	dprintf		2016979	0					
ANR	2016992	Identifier	dprintf		2016979	0					
ANR	2016993	ArgumentList	D_PROCFAMILY		2016979	1					
ANR	2016994	Argument	D_PROCFAMILY		2016979	0					
ANR	2016995	Identifier	D_PROCFAMILY		2016979	0					
ANR	2016996	Argument	"""About to suspend family with root process %u using the ProcD\\n"""		2016979	1					
ANR	2016997	PrimaryExpression	"""About to suspend family with root process %u using the ProcD\\n"""		2016979	0					
ANR	2016998	Argument	pid		2016979	2					
ANR	2016999	Identifier	pid		2016979	0					
ANR	2017000	ReturnStatement	"return signal_family ( pid , PROC_FAMILY_SUSPEND_FAMILY , response ) ;"	604:1:15699:15762	2016979	2	True				
ANR	2017001	CallExpression	"signal_family ( pid , PROC_FAMILY_SUSPEND_FAMILY , response )"		2016979	0					
ANR	2017002	Callee	signal_family		2016979	0					
ANR	2017003	Identifier	signal_family		2016979	0					
ANR	2017004	ArgumentList	pid		2016979	1					
ANR	2017005	Argument	pid		2016979	0					
ANR	2017006	Identifier	pid		2016979	0					
ANR	2017007	Argument	PROC_FAMILY_SUSPEND_FAMILY		2016979	1					
ANR	2017008	Identifier	PROC_FAMILY_SUSPEND_FAMILY		2016979	0					
ANR	2017009	Argument	response		2016979	2					
ANR	2017010	Identifier	response		2016979	0					
ANR	2017011	ReturnType	bool		2016979	1					
ANR	2017012	Identifier	ProcFamilyClient :: suspend_family		2016979	2					
ANR	2017013	ParameterList	"pid_t pid , bool & response"		2016979	3					
ANR	2017014	Parameter	pid_t pid	596:33:15530:15538	2016979	0	True				
ANR	2017015	ParameterType	pid_t		2016979	0					
ANR	2017016	Identifier	pid		2016979	1					
ANR	2017017	Parameter	bool & response	596:44:15541:15554	2016979	1	True				
ANR	2017018	ParameterType	bool &		2016979	0					
ANR	2017019	Identifier	response		2016979	1					
ANR	2017020	CFGEntryNode	ENTRY		2016979		True				
ANR	2017021	CFGExitNode	EXIT		2016979		True				
ANR	2017022	Symbol	m_initialized		2016979						
ANR	2017023	Symbol	D_PROCFAMILY		2016979						
ANR	2017024	Symbol	response		2016979						
ANR	2017025	Symbol	pid		2016979						
ANR	2017026	Symbol	signal_family		2016979						
ANR	2017027	Symbol	PROC_FAMILY_SUSPEND_FAMILY		2016979						
ANR	2017028	Function	ProcFamilyClient :: continue_family	607:0:15767:16042							
ANR	2017029	FunctionDef	"ProcFamilyClient :: continue_family (pid_t pid , bool & response)"		2017028	0					
ANR	2017030	CompoundStatement		609:0:15833:16042	2017028	0					
ANR	2017031	ExpressionStatement	ASSERT ( m_initialized )	610:1:15836:15857	2017028	0	True				
ANR	2017032	CallExpression	ASSERT ( m_initialized )		2017028	0					
ANR	2017033	Callee	ASSERT		2017028	0					
ANR	2017034	Identifier	ASSERT		2017028	0					
ANR	2017035	ArgumentList	m_initialized		2017028	1					
ANR	2017036	Argument	m_initialized		2017028	0					
ANR	2017037	Identifier	m_initialized		2017028	0					
ANR	2017038	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""About to continue family with root process %u using the ProcD\\n"" , pid )"	612:1:15861:15972	2017028	1	True				
ANR	2017039	CallExpression	"dprintf ( D_PROCFAMILY , ""About to continue family with root process %u using the ProcD\\n"" , pid )"		2017028	0					
ANR	2017040	Callee	dprintf		2017028	0					
ANR	2017041	Identifier	dprintf		2017028	0					
ANR	2017042	ArgumentList	D_PROCFAMILY		2017028	1					
ANR	2017043	Argument	D_PROCFAMILY		2017028	0					
ANR	2017044	Identifier	D_PROCFAMILY		2017028	0					
ANR	2017045	Argument	"""About to continue family with root process %u using the ProcD\\n"""		2017028	1					
ANR	2017046	PrimaryExpression	"""About to continue family with root process %u using the ProcD\\n"""		2017028	0					
ANR	2017047	Argument	pid		2017028	2					
ANR	2017048	Identifier	pid		2017028	0					
ANR	2017049	ReturnStatement	"return signal_family ( pid , PROC_FAMILY_CONTINUE_FAMILY , response ) ;"	616:1:15976:16040	2017028	2	True				
ANR	2017050	CallExpression	"signal_family ( pid , PROC_FAMILY_CONTINUE_FAMILY , response )"		2017028	0					
ANR	2017051	Callee	signal_family		2017028	0					
ANR	2017052	Identifier	signal_family		2017028	0					
ANR	2017053	ArgumentList	pid		2017028	1					
ANR	2017054	Argument	pid		2017028	0					
ANR	2017055	Identifier	pid		2017028	0					
ANR	2017056	Argument	PROC_FAMILY_CONTINUE_FAMILY		2017028	1					
ANR	2017057	Identifier	PROC_FAMILY_CONTINUE_FAMILY		2017028	0					
ANR	2017058	Argument	response		2017028	2					
ANR	2017059	Identifier	response		2017028	0					
ANR	2017060	ReturnType	bool		2017028	1					
ANR	2017061	Identifier	ProcFamilyClient :: continue_family		2017028	2					
ANR	2017062	ParameterList	"pid_t pid , bool & response"		2017028	3					
ANR	2017063	Parameter	pid_t pid	608:34:15806:15814	2017028	0	True				
ANR	2017064	ParameterType	pid_t		2017028	0					
ANR	2017065	Identifier	pid		2017028	1					
ANR	2017066	Parameter	bool & response	608:45:15817:15830	2017028	1	True				
ANR	2017067	ParameterType	bool &		2017028	0					
ANR	2017068	Identifier	response		2017028	1					
ANR	2017069	CFGEntryNode	ENTRY		2017028		True				
ANR	2017070	CFGExitNode	EXIT		2017028		True				
ANR	2017071	Symbol	m_initialized		2017028						
ANR	2017072	Symbol	D_PROCFAMILY		2017028						
ANR	2017073	Symbol	response		2017028						
ANR	2017074	Symbol	pid		2017028						
ANR	2017075	Symbol	signal_family		2017028						
ANR	2017076	Symbol	PROC_FAMILY_CONTINUE_FAMILY		2017028						
ANR	2017077	Function	ProcFamilyClient :: signal_family	619:0:16045:17102							
ANR	2017078	FunctionDef	"ProcFamilyClient :: signal_family (pid_t pid , proc_family_command_t command , bool & response)"		2017077	0					
ANR	2017079	CompoundStatement		623:0:16204:17102	2017077	0					
ANR	2017080	ExpressionStatement	ASSERT ( m_initialized )	624:1:16207:16228	2017077	0	True				
ANR	2017081	CallExpression	ASSERT ( m_initialized )		2017077	0					
ANR	2017082	Callee	ASSERT		2017077	0					
ANR	2017083	Identifier	ASSERT		2017077	0					
ANR	2017084	ArgumentList	m_initialized		2017077	1					
ANR	2017085	Argument	m_initialized		2017077	0					
ANR	2017086	Identifier	m_initialized		2017077	0					
ANR	2017087	IdentifierDeclStatement	int message_len = sizeof ( proc_family_command_t ) + sizeof ( pid_t ) ;	626:1:16232:16314	2017077	1	True				
ANR	2017088	IdentifierDecl	message_len = sizeof ( proc_family_command_t ) + sizeof ( pid_t )		2017077	0					
ANR	2017089	IdentifierDeclType	int		2017077	0					
ANR	2017090	Identifier	message_len		2017077	1					
ANR	2017091	AssignmentExpression	message_len = sizeof ( proc_family_command_t ) + sizeof ( pid_t )		2017077	2		=			
ANR	2017092	Identifier	message_len		2017077	0					
ANR	2017093	AdditiveExpression	sizeof ( proc_family_command_t ) + sizeof ( pid_t )		2017077	1		+			
ANR	2017094	SizeofExpression	sizeof ( proc_family_command_t )		2017077	0					
ANR	2017095	Sizeof	sizeof		2017077	0					
ANR	2017096	SizeofOperand	proc_family_command_t		2017077	1					
ANR	2017097	SizeofExpression	sizeof ( pid_t )		2017077	1					
ANR	2017098	Sizeof	sizeof		2017077	0					
ANR	2017099	SizeofOperand	pid_t		2017077	1					
ANR	2017100	IdentifierDeclStatement	void * buffer = malloc ( message_len ) ;	628:1:16317:16351	2017077	2	True				
ANR	2017101	IdentifierDecl	* buffer = malloc ( message_len )		2017077	0					
ANR	2017102	IdentifierDeclType	void *		2017077	0					
ANR	2017103	Identifier	buffer		2017077	1					
ANR	2017104	AssignmentExpression	* buffer = malloc ( message_len )		2017077	2		=			
ANR	2017105	Identifier	buffer		2017077	0					
ANR	2017106	CallExpression	malloc ( message_len )		2017077	1					
ANR	2017107	Callee	malloc		2017077	0					
ANR	2017108	Identifier	malloc		2017077	0					
ANR	2017109	ArgumentList	message_len		2017077	1					
ANR	2017110	Argument	message_len		2017077	0					
ANR	2017111	Identifier	message_len		2017077	0					
ANR	2017112	ExpressionStatement	ASSERT ( buffer != NULL )	629:1:16354:16376	2017077	3	True				
ANR	2017113	CallExpression	ASSERT ( buffer != NULL )		2017077	0					
ANR	2017114	Callee	ASSERT		2017077	0					
ANR	2017115	Identifier	ASSERT		2017077	0					
ANR	2017116	ArgumentList	buffer != NULL		2017077	1					
ANR	2017117	Argument	buffer != NULL		2017077	0					
ANR	2017118	EqualityExpression	buffer != NULL		2017077	0		!=			
ANR	2017119	Identifier	buffer		2017077	0					
ANR	2017120	Identifier	NULL		2017077	1					
ANR	2017121	IdentifierDeclStatement	char * ptr = ( char * ) buffer ;	630:1:16379:16404	2017077	4	True				
ANR	2017122	IdentifierDecl	* ptr = ( char * ) buffer		2017077	0					
ANR	2017123	IdentifierDeclType	char *		2017077	0					
ANR	2017124	Identifier	ptr		2017077	1					
ANR	2017125	AssignmentExpression	* ptr = ( char * ) buffer		2017077	2		=			
ANR	2017126	Identifier	ptr		2017077	0					
ANR	2017127	CastExpression	( char * ) buffer		2017077	1					
ANR	2017128	CastTarget	char *		2017077	0					
ANR	2017129	Identifier	buffer		2017077	1					
ANR	2017130	ExpressionStatement	* ( proc_family_command_t * ) ptr = command	632:1:16408:16446	2017077	5	True				
ANR	2017131	AssignmentExpression	* ( proc_family_command_t * ) ptr = command		2017077	0		=			
ANR	2017132	UnaryOperationExpression	* ( proc_family_command_t * ) ptr		2017077	0					
ANR	2017133	UnaryOperator	*		2017077	0					
ANR	2017134	CastExpression	( proc_family_command_t * ) ptr		2017077	1					
ANR	2017135	CastTarget	proc_family_command_t *		2017077	0					
ANR	2017136	Identifier	ptr		2017077	1					
ANR	2017137	Identifier	command		2017077	1					
ANR	2017138	ExpressionStatement	ptr += sizeof ( proc_family_command_t )	633:1:16449:16485	2017077	6	True				
ANR	2017139	AssignmentExpression	ptr += sizeof ( proc_family_command_t )		2017077	0		+=			
ANR	2017140	Identifier	ptr		2017077	0					
ANR	2017141	SizeofExpression	sizeof ( proc_family_command_t )		2017077	1					
ANR	2017142	Sizeof	sizeof		2017077	0					
ANR	2017143	SizeofOperand	proc_family_command_t		2017077	1					
ANR	2017144	ExpressionStatement	* ( pid_t * ) ptr = pid	635:1:16489:16507	2017077	7	True				
ANR	2017145	AssignmentExpression	* ( pid_t * ) ptr = pid		2017077	0		=			
ANR	2017146	UnaryOperationExpression	* ( pid_t * ) ptr		2017077	0					
ANR	2017147	UnaryOperator	*		2017077	0					
ANR	2017148	CastExpression	( pid_t * ) ptr		2017077	1					
ANR	2017149	CastTarget	pid_t *		2017077	0					
ANR	2017150	Identifier	ptr		2017077	1					
ANR	2017151	Identifier	pid		2017077	1					
ANR	2017152	ExpressionStatement	ptr += sizeof ( pid_t )	636:1:16510:16530	2017077	8	True				
ANR	2017153	AssignmentExpression	ptr += sizeof ( pid_t )		2017077	0		+=			
ANR	2017154	Identifier	ptr		2017077	0					
ANR	2017155	SizeofExpression	sizeof ( pid_t )		2017077	1					
ANR	2017156	Sizeof	sizeof		2017077	0					
ANR	2017157	SizeofOperand	pid_t		2017077	1					
ANR	2017158	ExpressionStatement	ASSERT ( ptr - ( char * ) buffer == message_len )	638:1:16534:16576	2017077	9	True				
ANR	2017159	CallExpression	ASSERT ( ptr - ( char * ) buffer == message_len )		2017077	0					
ANR	2017160	Callee	ASSERT		2017077	0					
ANR	2017161	Identifier	ASSERT		2017077	0					
ANR	2017162	ArgumentList	ptr - ( char * ) buffer == message_len		2017077	1					
ANR	2017163	Argument	ptr - ( char * ) buffer == message_len		2017077	0					
ANR	2017164	EqualityExpression	ptr - ( char * ) buffer == message_len		2017077	0		==			
ANR	2017165	AdditiveExpression	ptr - ( char * ) buffer		2017077	0		-			
ANR	2017166	Identifier	ptr		2017077	0					
ANR	2017167	CastExpression	( char * ) buffer		2017077	1					
ANR	2017168	CastTarget	char *		2017077	0					
ANR	2017169	Identifier	buffer		2017077	1					
ANR	2017170	Identifier	message_len		2017077	1					
ANR	2017171	IfStatement	"if ( ! m_client -> start_connection ( buffer , message_len ) )"		2017077	10					
ANR	2017172	Condition	"! m_client -> start_connection ( buffer , message_len )"	640:5:16585:16632	2017077	0	True				
ANR	2017173	UnaryOperationExpression	"! m_client -> start_connection ( buffer , message_len )"		2017077	0					
ANR	2017174	UnaryOperator	!		2017077	0					
ANR	2017175	CallExpression	"m_client -> start_connection ( buffer , message_len )"		2017077	1					
ANR	2017176	Callee	m_client -> start_connection		2017077	0					
ANR	2017177	PtrMemberAccess	m_client -> start_connection		2017077	0					
ANR	2017178	Identifier	m_client		2017077	0					
ANR	2017179	Identifier	start_connection		2017077	1					
ANR	2017180	ArgumentList	buffer		2017077	1					
ANR	2017181	Argument	buffer		2017077	0					
ANR	2017182	Identifier	buffer		2017077	0					
ANR	2017183	Argument	message_len		2017077	1					
ANR	2017184	Identifier	message_len		2017077	0					
ANR	2017185	CompoundStatement		18:55:430:430	2017077	1					
ANR	2017186	ExpressionStatement	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to start connection with ProcD\\n"" )"	641:2:16639:16727	2017077	0	True				
ANR	2017187	CallExpression	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to start connection with ProcD\\n"" )"		2017077	0					
ANR	2017188	Callee	dprintf		2017077	0					
ANR	2017189	Identifier	dprintf		2017077	0					
ANR	2017190	ArgumentList	D_ALWAYS		2017077	1					
ANR	2017191	Argument	D_ALWAYS		2017077	0					
ANR	2017192	Identifier	D_ALWAYS		2017077	0					
ANR	2017193	Argument	"""ProcFamilyClient: failed to start connection with ProcD\\n"""		2017077	1					
ANR	2017194	PrimaryExpression	"""ProcFamilyClient: failed to start connection with ProcD\\n"""		2017077	0					
ANR	2017195	ExpressionStatement	free ( buffer )	643:2:16731:16743	2017077	1	True				
ANR	2017196	CallExpression	free ( buffer )		2017077	0					
ANR	2017197	Callee	free		2017077	0					
ANR	2017198	Identifier	free		2017077	0					
ANR	2017199	ArgumentList	buffer		2017077	1					
ANR	2017200	Argument	buffer		2017077	0					
ANR	2017201	Identifier	buffer		2017077	0					
ANR	2017202	ReturnStatement	return false ;	644:2:16747:16759	2017077	2	True				
ANR	2017203	Identifier	false		2017077	0					
ANR	2017204	ExpressionStatement	free ( buffer )	646:1:16765:16777	2017077	11	True				
ANR	2017205	CallExpression	free ( buffer )		2017077	0					
ANR	2017206	Callee	free		2017077	0					
ANR	2017207	Identifier	free		2017077	0					
ANR	2017208	ArgumentList	buffer		2017077	1					
ANR	2017209	Argument	buffer		2017077	0					
ANR	2017210	Identifier	buffer		2017077	0					
ANR	2017211	IdentifierDeclStatement	proc_family_error_t err ;	647:1:16780:16803	2017077	12	True				
ANR	2017212	IdentifierDecl	err		2017077	0					
ANR	2017213	IdentifierDeclType	proc_family_error_t		2017077	0					
ANR	2017214	Identifier	err		2017077	1					
ANR	2017215	IfStatement	"if ( ! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) ) )"		2017077	13					
ANR	2017216	Condition	"! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"	648:5:16810:16864	2017077	0	True				
ANR	2017217	UnaryOperationExpression	"! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"		2017077	0					
ANR	2017218	UnaryOperator	!		2017077	0					
ANR	2017219	CallExpression	"m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"		2017077	1					
ANR	2017220	Callee	m_client -> read_data		2017077	0					
ANR	2017221	PtrMemberAccess	m_client -> read_data		2017077	0					
ANR	2017222	Identifier	m_client		2017077	0					
ANR	2017223	Identifier	read_data		2017077	1					
ANR	2017224	ArgumentList	& err		2017077	1					
ANR	2017225	Argument	& err		2017077	0					
ANR	2017226	UnaryOperationExpression	& err		2017077	0					
ANR	2017227	UnaryOperator	&		2017077	0					
ANR	2017228	Identifier	err		2017077	1					
ANR	2017229	Argument	sizeof ( proc_family_error_t )		2017077	1					
ANR	2017230	SizeofExpression	sizeof ( proc_family_error_t )		2017077	0					
ANR	2017231	Sizeof	sizeof		2017077	0					
ANR	2017232	SizeofOperand	proc_family_error_t		2017077	1					
ANR	2017233	CompoundStatement		26:62:662:662	2017077	1					
ANR	2017234	ExpressionStatement	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to read response from ProcD\\n"" )"	649:2:16871:16956	2017077	0	True				
ANR	2017235	CallExpression	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to read response from ProcD\\n"" )"		2017077	0					
ANR	2017236	Callee	dprintf		2017077	0					
ANR	2017237	Identifier	dprintf		2017077	0					
ANR	2017238	ArgumentList	D_ALWAYS		2017077	1					
ANR	2017239	Argument	D_ALWAYS		2017077	0					
ANR	2017240	Identifier	D_ALWAYS		2017077	0					
ANR	2017241	Argument	"""ProcFamilyClient: failed to read response from ProcD\\n"""		2017077	1					
ANR	2017242	PrimaryExpression	"""ProcFamilyClient: failed to read response from ProcD\\n"""		2017077	0					
ANR	2017243	ReturnStatement	return false ;	651:2:16960:16972	2017077	1	True				
ANR	2017244	Identifier	false		2017077	0					
ANR	2017245	ExpressionStatement	m_client -> end_connection ( )	653:1:16978:17004	2017077	14	True				
ANR	2017246	CallExpression	m_client -> end_connection ( )		2017077	0					
ANR	2017247	Callee	m_client -> end_connection		2017077	0					
ANR	2017248	PtrMemberAccess	m_client -> end_connection		2017077	0					
ANR	2017249	Identifier	m_client		2017077	0					
ANR	2017250	Identifier	end_connection		2017077	1					
ANR	2017251	ArgumentList			2017077	1					
ANR	2017252	ExpressionStatement	"log_exit ( ""signal_family"" , err )"	655:1:17008:17038	2017077	15	True				
ANR	2017253	CallExpression	"log_exit ( ""signal_family"" , err )"		2017077	0					
ANR	2017254	Callee	log_exit		2017077	0					
ANR	2017255	Identifier	log_exit		2017077	0					
ANR	2017256	ArgumentList	"""signal_family"""		2017077	1					
ANR	2017257	Argument	"""signal_family"""		2017077	0					
ANR	2017258	PrimaryExpression	"""signal_family"""		2017077	0					
ANR	2017259	Argument	err		2017077	1					
ANR	2017260	Identifier	err		2017077	0					
ANR	2017261	ExpressionStatement	response = ( err == PROC_FAMILY_ERROR_SUCCESS )	656:1:17041:17086	2017077	16	True				
ANR	2017262	AssignmentExpression	response = ( err == PROC_FAMILY_ERROR_SUCCESS )		2017077	0		=			
ANR	2017263	Identifier	response		2017077	0					
ANR	2017264	EqualityExpression	err == PROC_FAMILY_ERROR_SUCCESS		2017077	1		==			
ANR	2017265	Identifier	err		2017077	0					
ANR	2017266	Identifier	PROC_FAMILY_ERROR_SUCCESS		2017077	1					
ANR	2017267	ReturnStatement	return true ;	657:1:17089:17100	2017077	17	True				
ANR	2017268	Identifier	true		2017077	0					
ANR	2017269	ReturnType	bool		2017077	1					
ANR	2017270	Identifier	ProcFamilyClient :: signal_family		2017077	2					
ANR	2017271	ParameterList	"pid_t pid , proc_family_command_t command , bool & response"		2017077	3					
ANR	2017272	Parameter	pid_t pid	620:32:16082:16090	2017077	0	True				
ANR	2017273	ParameterType	pid_t		2017077	0					
ANR	2017274	Identifier	pid		2017077	1					
ANR	2017275	Parameter	proc_family_command_t command	621:32:16125:16153	2017077	1	True				
ANR	2017276	ParameterType	proc_family_command_t		2017077	0					
ANR	2017277	Identifier	command		2017077	1					
ANR	2017278	Parameter	bool & response	622:32:16188:16201	2017077	2	True				
ANR	2017279	ParameterType	bool &		2017077	0					
ANR	2017280	Identifier	response		2017077	1					
ANR	2017281	CFGEntryNode	ENTRY		2017077		True				
ANR	2017282	CFGExitNode	EXIT		2017077		True				
ANR	2017283	Symbol	m_initialized		2017077						
ANR	2017284	Symbol	malloc		2017077						
ANR	2017285	Symbol	m_client -> read_data		2017077						
ANR	2017286	Symbol	NULL		2017077						
ANR	2017287	Symbol	err		2017077						
ANR	2017288	Symbol	message_len		2017077						
ANR	2017289	Symbol	D_ALWAYS		2017077						
ANR	2017290	Symbol	false		2017077						
ANR	2017291	Symbol	* ( proc_family_command_t * ) ptr		2017077						
ANR	2017292	Symbol	pid		2017077						
ANR	2017293	Symbol	& err		2017077						
ANR	2017294	Symbol	command		2017077						
ANR	2017295	Symbol	* ( pid_t * ) ptr		2017077						
ANR	2017296	Symbol	* m_client		2017077						
ANR	2017297	Symbol	ptr		2017077						
ANR	2017298	Symbol	response		2017077						
ANR	2017299	Symbol	m_client -> start_connection		2017077						
ANR	2017300	Symbol	* ptr		2017077						
ANR	2017301	Symbol	true		2017077						
ANR	2017302	Symbol	PROC_FAMILY_ERROR_SUCCESS		2017077						
ANR	2017303	Symbol	buffer		2017077						
ANR	2017304	Symbol	m_client		2017077						
ANR	2017305	Function	ProcFamilyClient :: unregister_family	660:0:17105:18158							
ANR	2017306	FunctionDef	"ProcFamilyClient :: unregister_family (pid_t pid , bool & response)"		2017305	0					
ANR	2017307	CompoundStatement		662:0:17173:18158	2017305	0					
ANR	2017308	ExpressionStatement	ASSERT ( m_initialized )	663:1:17176:17197	2017305	0	True				
ANR	2017309	CallExpression	ASSERT ( m_initialized )		2017305	0					
ANR	2017310	Callee	ASSERT		2017305	0					
ANR	2017311	Identifier	ASSERT		2017305	0					
ANR	2017312	ArgumentList	m_initialized		2017305	1					
ANR	2017313	Argument	m_initialized		2017305	0					
ANR	2017314	Identifier	m_initialized		2017305	0					
ANR	2017315	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""About to unregister family with root %u from the ProcD\\n"" , pid )"	665:1:17201:17305	2017305	1	True				
ANR	2017316	CallExpression	"dprintf ( D_PROCFAMILY , ""About to unregister family with root %u from the ProcD\\n"" , pid )"		2017305	0					
ANR	2017317	Callee	dprintf		2017305	0					
ANR	2017318	Identifier	dprintf		2017305	0					
ANR	2017319	ArgumentList	D_PROCFAMILY		2017305	1					
ANR	2017320	Argument	D_PROCFAMILY		2017305	0					
ANR	2017321	Identifier	D_PROCFAMILY		2017305	0					
ANR	2017322	Argument	"""About to unregister family with root %u from the ProcD\\n"""		2017305	1					
ANR	2017323	PrimaryExpression	"""About to unregister family with root %u from the ProcD\\n"""		2017305	0					
ANR	2017324	Argument	pid		2017305	2					
ANR	2017325	Identifier	pid		2017305	0					
ANR	2017326	IdentifierDeclStatement	int message_len = sizeof ( proc_family_command_t ) + sizeof ( pid_t ) ;	669:1:17309:17391	2017305	2	True				
ANR	2017327	IdentifierDecl	message_len = sizeof ( proc_family_command_t ) + sizeof ( pid_t )		2017305	0					
ANR	2017328	IdentifierDeclType	int		2017305	0					
ANR	2017329	Identifier	message_len		2017305	1					
ANR	2017330	AssignmentExpression	message_len = sizeof ( proc_family_command_t ) + sizeof ( pid_t )		2017305	2		=			
ANR	2017331	Identifier	message_len		2017305	0					
ANR	2017332	AdditiveExpression	sizeof ( proc_family_command_t ) + sizeof ( pid_t )		2017305	1		+			
ANR	2017333	SizeofExpression	sizeof ( proc_family_command_t )		2017305	0					
ANR	2017334	Sizeof	sizeof		2017305	0					
ANR	2017335	SizeofOperand	proc_family_command_t		2017305	1					
ANR	2017336	SizeofExpression	sizeof ( pid_t )		2017305	1					
ANR	2017337	Sizeof	sizeof		2017305	0					
ANR	2017338	SizeofOperand	pid_t		2017305	1					
ANR	2017339	IdentifierDeclStatement	void * buffer = malloc ( message_len ) ;	671:1:17394:17428	2017305	3	True				
ANR	2017340	IdentifierDecl	* buffer = malloc ( message_len )		2017305	0					
ANR	2017341	IdentifierDeclType	void *		2017305	0					
ANR	2017342	Identifier	buffer		2017305	1					
ANR	2017343	AssignmentExpression	* buffer = malloc ( message_len )		2017305	2		=			
ANR	2017344	Identifier	buffer		2017305	0					
ANR	2017345	CallExpression	malloc ( message_len )		2017305	1					
ANR	2017346	Callee	malloc		2017305	0					
ANR	2017347	Identifier	malloc		2017305	0					
ANR	2017348	ArgumentList	message_len		2017305	1					
ANR	2017349	Argument	message_len		2017305	0					
ANR	2017350	Identifier	message_len		2017305	0					
ANR	2017351	ExpressionStatement	ASSERT ( buffer != NULL )	672:1:17431:17453	2017305	4	True				
ANR	2017352	CallExpression	ASSERT ( buffer != NULL )		2017305	0					
ANR	2017353	Callee	ASSERT		2017305	0					
ANR	2017354	Identifier	ASSERT		2017305	0					
ANR	2017355	ArgumentList	buffer != NULL		2017305	1					
ANR	2017356	Argument	buffer != NULL		2017305	0					
ANR	2017357	EqualityExpression	buffer != NULL		2017305	0		!=			
ANR	2017358	Identifier	buffer		2017305	0					
ANR	2017359	Identifier	NULL		2017305	1					
ANR	2017360	IdentifierDeclStatement	char * ptr = ( char * ) buffer ;	673:1:17456:17481	2017305	5	True				
ANR	2017361	IdentifierDecl	* ptr = ( char * ) buffer		2017305	0					
ANR	2017362	IdentifierDeclType	char *		2017305	0					
ANR	2017363	Identifier	ptr		2017305	1					
ANR	2017364	AssignmentExpression	* ptr = ( char * ) buffer		2017305	2		=			
ANR	2017365	Identifier	ptr		2017305	0					
ANR	2017366	CastExpression	( char * ) buffer		2017305	1					
ANR	2017367	CastTarget	char *		2017305	0					
ANR	2017368	Identifier	buffer		2017305	1					
ANR	2017369	ExpressionStatement	* ( proc_family_command_t * ) ptr = PROC_FAMILY_UNREGISTER_FAMILY	675:1:17485:17545	2017305	6	True				
ANR	2017370	AssignmentExpression	* ( proc_family_command_t * ) ptr = PROC_FAMILY_UNREGISTER_FAMILY		2017305	0		=			
ANR	2017371	UnaryOperationExpression	* ( proc_family_command_t * ) ptr		2017305	0					
ANR	2017372	UnaryOperator	*		2017305	0					
ANR	2017373	CastExpression	( proc_family_command_t * ) ptr		2017305	1					
ANR	2017374	CastTarget	proc_family_command_t *		2017305	0					
ANR	2017375	Identifier	ptr		2017305	1					
ANR	2017376	Identifier	PROC_FAMILY_UNREGISTER_FAMILY		2017305	1					
ANR	2017377	ExpressionStatement	ptr += sizeof ( proc_family_command_t )	676:1:17548:17584	2017305	7	True				
ANR	2017378	AssignmentExpression	ptr += sizeof ( proc_family_command_t )		2017305	0		+=			
ANR	2017379	Identifier	ptr		2017305	0					
ANR	2017380	SizeofExpression	sizeof ( proc_family_command_t )		2017305	1					
ANR	2017381	Sizeof	sizeof		2017305	0					
ANR	2017382	SizeofOperand	proc_family_command_t		2017305	1					
ANR	2017383	ExpressionStatement	* ( pid_t * ) ptr = pid	678:1:17588:17606	2017305	8	True				
ANR	2017384	AssignmentExpression	* ( pid_t * ) ptr = pid		2017305	0		=			
ANR	2017385	UnaryOperationExpression	* ( pid_t * ) ptr		2017305	0					
ANR	2017386	UnaryOperator	*		2017305	0					
ANR	2017387	CastExpression	( pid_t * ) ptr		2017305	1					
ANR	2017388	CastTarget	pid_t *		2017305	0					
ANR	2017389	Identifier	ptr		2017305	1					
ANR	2017390	Identifier	pid		2017305	1					
ANR	2017391	ExpressionStatement	ptr += sizeof ( pid_t )	679:1:17609:17629	2017305	9	True				
ANR	2017392	AssignmentExpression	ptr += sizeof ( pid_t )		2017305	0		+=			
ANR	2017393	Identifier	ptr		2017305	0					
ANR	2017394	SizeofExpression	sizeof ( pid_t )		2017305	1					
ANR	2017395	Sizeof	sizeof		2017305	0					
ANR	2017396	SizeofOperand	pid_t		2017305	1					
ANR	2017397	IfStatement	"if ( ! m_client -> start_connection ( buffer , message_len ) )"		2017305	10					
ANR	2017398	Condition	"! m_client -> start_connection ( buffer , message_len )"	681:5:17637:17684	2017305	0	True				
ANR	2017399	UnaryOperationExpression	"! m_client -> start_connection ( buffer , message_len )"		2017305	0					
ANR	2017400	UnaryOperator	!		2017305	0					
ANR	2017401	CallExpression	"m_client -> start_connection ( buffer , message_len )"		2017305	1					
ANR	2017402	Callee	m_client -> start_connection		2017305	0					
ANR	2017403	PtrMemberAccess	m_client -> start_connection		2017305	0					
ANR	2017404	Identifier	m_client		2017305	0					
ANR	2017405	Identifier	start_connection		2017305	1					
ANR	2017406	ArgumentList	buffer		2017305	1					
ANR	2017407	Argument	buffer		2017305	0					
ANR	2017408	Identifier	buffer		2017305	0					
ANR	2017409	Argument	message_len		2017305	1					
ANR	2017410	Identifier	message_len		2017305	0					
ANR	2017411	CompoundStatement		20:55:513:513	2017305	1					
ANR	2017412	ExpressionStatement	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to start connection with ProcD\\n"" )"	682:2:17691:17779	2017305	0	True				
ANR	2017413	CallExpression	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to start connection with ProcD\\n"" )"		2017305	0					
ANR	2017414	Callee	dprintf		2017305	0					
ANR	2017415	Identifier	dprintf		2017305	0					
ANR	2017416	ArgumentList	D_ALWAYS		2017305	1					
ANR	2017417	Argument	D_ALWAYS		2017305	0					
ANR	2017418	Identifier	D_ALWAYS		2017305	0					
ANR	2017419	Argument	"""ProcFamilyClient: failed to start connection with ProcD\\n"""		2017305	1					
ANR	2017420	PrimaryExpression	"""ProcFamilyClient: failed to start connection with ProcD\\n"""		2017305	0					
ANR	2017421	ExpressionStatement	free ( buffer )	684:2:17783:17795	2017305	1	True				
ANR	2017422	CallExpression	free ( buffer )		2017305	0					
ANR	2017423	Callee	free		2017305	0					
ANR	2017424	Identifier	free		2017305	0					
ANR	2017425	ArgumentList	buffer		2017305	1					
ANR	2017426	Argument	buffer		2017305	0					
ANR	2017427	Identifier	buffer		2017305	0					
ANR	2017428	ReturnStatement	return false ;	685:2:17799:17811	2017305	2	True				
ANR	2017429	Identifier	false		2017305	0					
ANR	2017430	ExpressionStatement	free ( buffer )	687:1:17817:17829	2017305	11	True				
ANR	2017431	CallExpression	free ( buffer )		2017305	0					
ANR	2017432	Callee	free		2017305	0					
ANR	2017433	Identifier	free		2017305	0					
ANR	2017434	ArgumentList	buffer		2017305	1					
ANR	2017435	Argument	buffer		2017305	0					
ANR	2017436	Identifier	buffer		2017305	0					
ANR	2017437	IdentifierDeclStatement	proc_family_error_t err ;	688:1:17832:17855	2017305	12	True				
ANR	2017438	IdentifierDecl	err		2017305	0					
ANR	2017439	IdentifierDeclType	proc_family_error_t		2017305	0					
ANR	2017440	Identifier	err		2017305	1					
ANR	2017441	IfStatement	"if ( ! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) ) )"		2017305	13					
ANR	2017442	Condition	"! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"	689:5:17862:17916	2017305	0	True				
ANR	2017443	UnaryOperationExpression	"! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"		2017305	0					
ANR	2017444	UnaryOperator	!		2017305	0					
ANR	2017445	CallExpression	"m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"		2017305	1					
ANR	2017446	Callee	m_client -> read_data		2017305	0					
ANR	2017447	PtrMemberAccess	m_client -> read_data		2017305	0					
ANR	2017448	Identifier	m_client		2017305	0					
ANR	2017449	Identifier	read_data		2017305	1					
ANR	2017450	ArgumentList	& err		2017305	1					
ANR	2017451	Argument	& err		2017305	0					
ANR	2017452	UnaryOperationExpression	& err		2017305	0					
ANR	2017453	UnaryOperator	&		2017305	0					
ANR	2017454	Identifier	err		2017305	1					
ANR	2017455	Argument	sizeof ( proc_family_error_t )		2017305	1					
ANR	2017456	SizeofExpression	sizeof ( proc_family_error_t )		2017305	0					
ANR	2017457	Sizeof	sizeof		2017305	0					
ANR	2017458	SizeofOperand	proc_family_error_t		2017305	1					
ANR	2017459	CompoundStatement		28:62:745:745	2017305	1					
ANR	2017460	ExpressionStatement	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to read response from ProcD\\n"" )"	690:2:17923:18008	2017305	0	True				
ANR	2017461	CallExpression	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to read response from ProcD\\n"" )"		2017305	0					
ANR	2017462	Callee	dprintf		2017305	0					
ANR	2017463	Identifier	dprintf		2017305	0					
ANR	2017464	ArgumentList	D_ALWAYS		2017305	1					
ANR	2017465	Argument	D_ALWAYS		2017305	0					
ANR	2017466	Identifier	D_ALWAYS		2017305	0					
ANR	2017467	Argument	"""ProcFamilyClient: failed to read response from ProcD\\n"""		2017305	1					
ANR	2017468	PrimaryExpression	"""ProcFamilyClient: failed to read response from ProcD\\n"""		2017305	0					
ANR	2017469	ReturnStatement	return false ;	692:2:18012:18024	2017305	1	True				
ANR	2017470	Identifier	false		2017305	0					
ANR	2017471	ExpressionStatement	m_client -> end_connection ( )	694:1:18030:18056	2017305	14	True				
ANR	2017472	CallExpression	m_client -> end_connection ( )		2017305	0					
ANR	2017473	Callee	m_client -> end_connection		2017305	0					
ANR	2017474	PtrMemberAccess	m_client -> end_connection		2017305	0					
ANR	2017475	Identifier	m_client		2017305	0					
ANR	2017476	Identifier	end_connection		2017305	1					
ANR	2017477	ArgumentList			2017305	1					
ANR	2017478	ExpressionStatement	"log_exit ( ""unregister_family"" , err )"	696:1:18060:18094	2017305	15	True				
ANR	2017479	CallExpression	"log_exit ( ""unregister_family"" , err )"		2017305	0					
ANR	2017480	Callee	log_exit		2017305	0					
ANR	2017481	Identifier	log_exit		2017305	0					
ANR	2017482	ArgumentList	"""unregister_family"""		2017305	1					
ANR	2017483	Argument	"""unregister_family"""		2017305	0					
ANR	2017484	PrimaryExpression	"""unregister_family"""		2017305	0					
ANR	2017485	Argument	err		2017305	1					
ANR	2017486	Identifier	err		2017305	0					
ANR	2017487	ExpressionStatement	response = ( err == PROC_FAMILY_ERROR_SUCCESS )	697:1:18097:18142	2017305	16	True				
ANR	2017488	AssignmentExpression	response = ( err == PROC_FAMILY_ERROR_SUCCESS )		2017305	0		=			
ANR	2017489	Identifier	response		2017305	0					
ANR	2017490	EqualityExpression	err == PROC_FAMILY_ERROR_SUCCESS		2017305	1		==			
ANR	2017491	Identifier	err		2017305	0					
ANR	2017492	Identifier	PROC_FAMILY_ERROR_SUCCESS		2017305	1					
ANR	2017493	ReturnStatement	return true ;	698:1:18145:18156	2017305	17	True				
ANR	2017494	Identifier	true		2017305	0					
ANR	2017495	ReturnType	bool		2017305	1					
ANR	2017496	Identifier	ProcFamilyClient :: unregister_family		2017305	2					
ANR	2017497	ParameterList	"pid_t pid , bool & response"		2017305	3					
ANR	2017498	Parameter	pid_t pid	661:36:17146:17154	2017305	0	True				
ANR	2017499	ParameterType	pid_t		2017305	0					
ANR	2017500	Identifier	pid		2017305	1					
ANR	2017501	Parameter	bool & response	661:47:17157:17170	2017305	1	True				
ANR	2017502	ParameterType	bool &		2017305	0					
ANR	2017503	Identifier	response		2017305	1					
ANR	2017504	CFGEntryNode	ENTRY		2017305		True				
ANR	2017505	CFGExitNode	EXIT		2017305		True				
ANR	2017506	Symbol	m_initialized		2017305						
ANR	2017507	Symbol	malloc		2017305						
ANR	2017508	Symbol	PROC_FAMILY_UNREGISTER_FAMILY		2017305						
ANR	2017509	Symbol	m_client -> read_data		2017305						
ANR	2017510	Symbol	D_PROCFAMILY		2017305						
ANR	2017511	Symbol	NULL		2017305						
ANR	2017512	Symbol	err		2017305						
ANR	2017513	Symbol	message_len		2017305						
ANR	2017514	Symbol	D_ALWAYS		2017305						
ANR	2017515	Symbol	false		2017305						
ANR	2017516	Symbol	* ( proc_family_command_t * ) ptr		2017305						
ANR	2017517	Symbol	pid		2017305						
ANR	2017518	Symbol	& err		2017305						
ANR	2017519	Symbol	* ( pid_t * ) ptr		2017305						
ANR	2017520	Symbol	* m_client		2017305						
ANR	2017521	Symbol	ptr		2017305						
ANR	2017522	Symbol	response		2017305						
ANR	2017523	Symbol	m_client -> start_connection		2017305						
ANR	2017524	Symbol	* ptr		2017305						
ANR	2017525	Symbol	true		2017305						
ANR	2017526	Symbol	PROC_FAMILY_ERROR_SUCCESS		2017305						
ANR	2017527	Symbol	buffer		2017305						
ANR	2017528	Symbol	m_client		2017305						
ANR	2017529	Function	ProcFamilyClient :: snapshot	701:0:18161:18876							
ANR	2017530	FunctionDef	ProcFamilyClient :: snapshot (bool & response)		2017529	0					
ANR	2017531	CompoundStatement		703:0:18209:18876	2017529	0					
ANR	2017532	ExpressionStatement	ASSERT ( m_initialized )	704:1:18212:18233	2017529	0	True				
ANR	2017533	CallExpression	ASSERT ( m_initialized )		2017529	0					
ANR	2017534	Callee	ASSERT		2017529	0					
ANR	2017535	Identifier	ASSERT		2017529	0					
ANR	2017536	ArgumentList	m_initialized		2017529	1					
ANR	2017537	Argument	m_initialized		2017529	0					
ANR	2017538	Identifier	m_initialized		2017529	0					
ANR	2017539	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""About to tell the ProcD to take a snapshot\\n"" )"	706:1:18237:18306	2017529	1	True				
ANR	2017540	CallExpression	"dprintf ( D_PROCFAMILY , ""About to tell the ProcD to take a snapshot\\n"" )"		2017529	0					
ANR	2017541	Callee	dprintf		2017529	0					
ANR	2017542	Identifier	dprintf		2017529	0					
ANR	2017543	ArgumentList	D_PROCFAMILY		2017529	1					
ANR	2017544	Argument	D_PROCFAMILY		2017529	0					
ANR	2017545	Identifier	D_PROCFAMILY		2017529	0					
ANR	2017546	Argument	"""About to tell the ProcD to take a snapshot\\n"""		2017529	1					
ANR	2017547	PrimaryExpression	"""About to tell the ProcD to take a snapshot\\n"""		2017529	0					
ANR	2017548	IdentifierDeclStatement	proc_family_command_t command = PROC_FAMILY_TAKE_SNAPSHOT ;	708:1:18310:18367	2017529	2	True				
ANR	2017549	IdentifierDecl	command = PROC_FAMILY_TAKE_SNAPSHOT		2017529	0					
ANR	2017550	IdentifierDeclType	proc_family_command_t		2017529	0					
ANR	2017551	Identifier	command		2017529	1					
ANR	2017552	AssignmentExpression	command = PROC_FAMILY_TAKE_SNAPSHOT		2017529	2		=			
ANR	2017553	Identifier	PROC_FAMILY_TAKE_SNAPSHOT		2017529	0					
ANR	2017554	Identifier	PROC_FAMILY_TAKE_SNAPSHOT		2017529	1					
ANR	2017555	IfStatement	"if ( ! m_client -> start_connection ( & command , sizeof ( proc_family_command_t ) ) )"		2017529	3					
ANR	2017556	Condition	"! m_client -> start_connection ( & command , sizeof ( proc_family_command_t ) )"	710:5:18375:18442	2017529	0	True				
ANR	2017557	UnaryOperationExpression	"! m_client -> start_connection ( & command , sizeof ( proc_family_command_t ) )"		2017529	0					
ANR	2017558	UnaryOperator	!		2017529	0					
ANR	2017559	CallExpression	"m_client -> start_connection ( & command , sizeof ( proc_family_command_t ) )"		2017529	1					
ANR	2017560	Callee	m_client -> start_connection		2017529	0					
ANR	2017561	PtrMemberAccess	m_client -> start_connection		2017529	0					
ANR	2017562	Identifier	m_client		2017529	0					
ANR	2017563	Identifier	start_connection		2017529	1					
ANR	2017564	ArgumentList	& command		2017529	1					
ANR	2017565	Argument	& command		2017529	0					
ANR	2017566	UnaryOperationExpression	& command		2017529	0					
ANR	2017567	UnaryOperator	&		2017529	0					
ANR	2017568	Identifier	command		2017529	1					
ANR	2017569	Argument	sizeof ( proc_family_command_t )		2017529	1					
ANR	2017570	SizeofExpression	sizeof ( proc_family_command_t )		2017529	0					
ANR	2017571	Sizeof	sizeof		2017529	0					
ANR	2017572	SizeofOperand	proc_family_command_t		2017529	1					
ANR	2017573	CompoundStatement		8:75:235:235	2017529	1					
ANR	2017574	ExpressionStatement	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to start connection with ProcD\\n"" )"	711:2:18449:18537	2017529	0	True				
ANR	2017575	CallExpression	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to start connection with ProcD\\n"" )"		2017529	0					
ANR	2017576	Callee	dprintf		2017529	0					
ANR	2017577	Identifier	dprintf		2017529	0					
ANR	2017578	ArgumentList	D_ALWAYS		2017529	1					
ANR	2017579	Argument	D_ALWAYS		2017529	0					
ANR	2017580	Identifier	D_ALWAYS		2017529	0					
ANR	2017581	Argument	"""ProcFamilyClient: failed to start connection with ProcD\\n"""		2017529	1					
ANR	2017582	PrimaryExpression	"""ProcFamilyClient: failed to start connection with ProcD\\n"""		2017529	0					
ANR	2017583	ReturnStatement	return false ;	713:2:18541:18553	2017529	1	True				
ANR	2017584	Identifier	false		2017529	0					
ANR	2017585	IdentifierDeclStatement	proc_family_error_t err ;	715:1:18559:18582	2017529	4	True				
ANR	2017586	IdentifierDecl	err		2017529	0					
ANR	2017587	IdentifierDeclType	proc_family_error_t		2017529	0					
ANR	2017588	Identifier	err		2017529	1					
ANR	2017589	IfStatement	"if ( ! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) ) )"		2017529	5					
ANR	2017590	Condition	"! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"	716:5:18589:18643	2017529	0	True				
ANR	2017591	UnaryOperationExpression	"! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"		2017529	0					
ANR	2017592	UnaryOperator	!		2017529	0					
ANR	2017593	CallExpression	"m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"		2017529	1					
ANR	2017594	Callee	m_client -> read_data		2017529	0					
ANR	2017595	PtrMemberAccess	m_client -> read_data		2017529	0					
ANR	2017596	Identifier	m_client		2017529	0					
ANR	2017597	Identifier	read_data		2017529	1					
ANR	2017598	ArgumentList	& err		2017529	1					
ANR	2017599	Argument	& err		2017529	0					
ANR	2017600	UnaryOperationExpression	& err		2017529	0					
ANR	2017601	UnaryOperator	&		2017529	0					
ANR	2017602	Identifier	err		2017529	1					
ANR	2017603	Argument	sizeof ( proc_family_error_t )		2017529	1					
ANR	2017604	SizeofExpression	sizeof ( proc_family_error_t )		2017529	0					
ANR	2017605	Sizeof	sizeof		2017529	0					
ANR	2017606	SizeofOperand	proc_family_error_t		2017529	1					
ANR	2017607	CompoundStatement		14:62:436:436	2017529	1					
ANR	2017608	ExpressionStatement	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to read response from ProcD\\n"" )"	717:2:18650:18735	2017529	0	True				
ANR	2017609	CallExpression	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to read response from ProcD\\n"" )"		2017529	0					
ANR	2017610	Callee	dprintf		2017529	0					
ANR	2017611	Identifier	dprintf		2017529	0					
ANR	2017612	ArgumentList	D_ALWAYS		2017529	1					
ANR	2017613	Argument	D_ALWAYS		2017529	0					
ANR	2017614	Identifier	D_ALWAYS		2017529	0					
ANR	2017615	Argument	"""ProcFamilyClient: failed to read response from ProcD\\n"""		2017529	1					
ANR	2017616	PrimaryExpression	"""ProcFamilyClient: failed to read response from ProcD\\n"""		2017529	0					
ANR	2017617	ReturnStatement	return false ;	719:2:18739:18751	2017529	1	True				
ANR	2017618	Identifier	false		2017529	0					
ANR	2017619	ExpressionStatement	m_client -> end_connection ( )	721:1:18757:18783	2017529	6	True				
ANR	2017620	CallExpression	m_client -> end_connection ( )		2017529	0					
ANR	2017621	Callee	m_client -> end_connection		2017529	0					
ANR	2017622	PtrMemberAccess	m_client -> end_connection		2017529	0					
ANR	2017623	Identifier	m_client		2017529	0					
ANR	2017624	Identifier	end_connection		2017529	1					
ANR	2017625	ArgumentList			2017529	1					
ANR	2017626	ExpressionStatement	"log_exit ( ""snapshot"" , err )"	723:1:18787:18812	2017529	7	True				
ANR	2017627	CallExpression	"log_exit ( ""snapshot"" , err )"		2017529	0					
ANR	2017628	Callee	log_exit		2017529	0					
ANR	2017629	Identifier	log_exit		2017529	0					
ANR	2017630	ArgumentList	"""snapshot"""		2017529	1					
ANR	2017631	Argument	"""snapshot"""		2017529	0					
ANR	2017632	PrimaryExpression	"""snapshot"""		2017529	0					
ANR	2017633	Argument	err		2017529	1					
ANR	2017634	Identifier	err		2017529	0					
ANR	2017635	ExpressionStatement	response = ( err == PROC_FAMILY_ERROR_SUCCESS )	724:1:18815:18860	2017529	8	True				
ANR	2017636	AssignmentExpression	response = ( err == PROC_FAMILY_ERROR_SUCCESS )		2017529	0		=			
ANR	2017637	Identifier	response		2017529	0					
ANR	2017638	EqualityExpression	err == PROC_FAMILY_ERROR_SUCCESS		2017529	1		==			
ANR	2017639	Identifier	err		2017529	0					
ANR	2017640	Identifier	PROC_FAMILY_ERROR_SUCCESS		2017529	1					
ANR	2017641	ReturnStatement	return true ;	725:1:18863:18874	2017529	9	True				
ANR	2017642	Identifier	true		2017529	0					
ANR	2017643	ReturnType	bool		2017529	1					
ANR	2017644	Identifier	ProcFamilyClient :: snapshot		2017529	2					
ANR	2017645	ParameterList	bool & response		2017529	3					
ANR	2017646	Parameter	bool & response	702:27:18193:18206	2017529	0	True				
ANR	2017647	ParameterType	bool &		2017529	0					
ANR	2017648	Identifier	response		2017529	1					
ANR	2017649	CFGEntryNode	ENTRY		2017529		True				
ANR	2017650	CFGExitNode	EXIT		2017529		True				
ANR	2017651	Symbol	m_initialized		2017529						
ANR	2017652	Symbol	& command		2017529						
ANR	2017653	Symbol	m_client -> read_data		2017529						
ANR	2017654	Symbol	D_PROCFAMILY		2017529						
ANR	2017655	Symbol	err		2017529						
ANR	2017656	Symbol	PROC_FAMILY_TAKE_SNAPSHOT		2017529						
ANR	2017657	Symbol	D_ALWAYS		2017529						
ANR	2017658	Symbol	false		2017529						
ANR	2017659	Symbol	& err		2017529						
ANR	2017660	Symbol	command		2017529						
ANR	2017661	Symbol	* m_client		2017529						
ANR	2017662	Symbol	response		2017529						
ANR	2017663	Symbol	m_client -> start_connection		2017529						
ANR	2017664	Symbol	true		2017529						
ANR	2017665	Symbol	PROC_FAMILY_ERROR_SUCCESS		2017529						
ANR	2017666	Symbol	m_client		2017529						
ANR	2017667	Function	ProcFamilyClient :: quit	728:0:18879:19566							
ANR	2017668	FunctionDef	ProcFamilyClient :: quit (bool & response)		2017667	0					
ANR	2017669	CompoundStatement		730:0:18923:19566	2017667	0					
ANR	2017670	ExpressionStatement	ASSERT ( m_initialized )	731:1:18926:18947	2017667	0	True				
ANR	2017671	CallExpression	ASSERT ( m_initialized )		2017667	0					
ANR	2017672	Callee	ASSERT		2017667	0					
ANR	2017673	Identifier	ASSERT		2017667	0					
ANR	2017674	ArgumentList	m_initialized		2017667	1					
ANR	2017675	Argument	m_initialized		2017667	0					
ANR	2017676	Identifier	m_initialized		2017667	0					
ANR	2017677	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""About to tell the ProcD to exit\\n"" )"	733:1:18951:19009	2017667	1	True				
ANR	2017678	CallExpression	"dprintf ( D_PROCFAMILY , ""About to tell the ProcD to exit\\n"" )"		2017667	0					
ANR	2017679	Callee	dprintf		2017667	0					
ANR	2017680	Identifier	dprintf		2017667	0					
ANR	2017681	ArgumentList	D_PROCFAMILY		2017667	1					
ANR	2017682	Argument	D_PROCFAMILY		2017667	0					
ANR	2017683	Identifier	D_PROCFAMILY		2017667	0					
ANR	2017684	Argument	"""About to tell the ProcD to exit\\n"""		2017667	1					
ANR	2017685	PrimaryExpression	"""About to tell the ProcD to exit\\n"""		2017667	0					
ANR	2017686	IdentifierDeclStatement	proc_family_command_t command = PROC_FAMILY_QUIT ;	735:1:19013:19061	2017667	2	True				
ANR	2017687	IdentifierDecl	command = PROC_FAMILY_QUIT		2017667	0					
ANR	2017688	IdentifierDeclType	proc_family_command_t		2017667	0					
ANR	2017689	Identifier	command		2017667	1					
ANR	2017690	AssignmentExpression	command = PROC_FAMILY_QUIT		2017667	2		=			
ANR	2017691	Identifier	PROC_FAMILY_QUIT		2017667	0					
ANR	2017692	Identifier	PROC_FAMILY_QUIT		2017667	1					
ANR	2017693	IfStatement	"if ( ! m_client -> start_connection ( & command , sizeof ( proc_family_command_t ) ) )"		2017667	3					
ANR	2017694	Condition	"! m_client -> start_connection ( & command , sizeof ( proc_family_command_t ) )"	737:5:19069:19136	2017667	0	True				
ANR	2017695	UnaryOperationExpression	"! m_client -> start_connection ( & command , sizeof ( proc_family_command_t ) )"		2017667	0					
ANR	2017696	UnaryOperator	!		2017667	0					
ANR	2017697	CallExpression	"m_client -> start_connection ( & command , sizeof ( proc_family_command_t ) )"		2017667	1					
ANR	2017698	Callee	m_client -> start_connection		2017667	0					
ANR	2017699	PtrMemberAccess	m_client -> start_connection		2017667	0					
ANR	2017700	Identifier	m_client		2017667	0					
ANR	2017701	Identifier	start_connection		2017667	1					
ANR	2017702	ArgumentList	& command		2017667	1					
ANR	2017703	Argument	& command		2017667	0					
ANR	2017704	UnaryOperationExpression	& command		2017667	0					
ANR	2017705	UnaryOperator	&		2017667	0					
ANR	2017706	Identifier	command		2017667	1					
ANR	2017707	Argument	sizeof ( proc_family_command_t )		2017667	1					
ANR	2017708	SizeofExpression	sizeof ( proc_family_command_t )		2017667	0					
ANR	2017709	Sizeof	sizeof		2017667	0					
ANR	2017710	SizeofOperand	proc_family_command_t		2017667	1					
ANR	2017711	CompoundStatement		8:75:215:215	2017667	1					
ANR	2017712	ExpressionStatement	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to start connection with ProcD\\n"" )"	738:2:19143:19231	2017667	0	True				
ANR	2017713	CallExpression	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to start connection with ProcD\\n"" )"		2017667	0					
ANR	2017714	Callee	dprintf		2017667	0					
ANR	2017715	Identifier	dprintf		2017667	0					
ANR	2017716	ArgumentList	D_ALWAYS		2017667	1					
ANR	2017717	Argument	D_ALWAYS		2017667	0					
ANR	2017718	Identifier	D_ALWAYS		2017667	0					
ANR	2017719	Argument	"""ProcFamilyClient: failed to start connection with ProcD\\n"""		2017667	1					
ANR	2017720	PrimaryExpression	"""ProcFamilyClient: failed to start connection with ProcD\\n"""		2017667	0					
ANR	2017721	ReturnStatement	return false ;	740:2:19235:19247	2017667	1	True				
ANR	2017722	Identifier	false		2017667	0					
ANR	2017723	IdentifierDeclStatement	proc_family_error_t err ;	742:1:19253:19276	2017667	4	True				
ANR	2017724	IdentifierDecl	err		2017667	0					
ANR	2017725	IdentifierDeclType	proc_family_error_t		2017667	0					
ANR	2017726	Identifier	err		2017667	1					
ANR	2017727	IfStatement	"if ( ! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) ) )"		2017667	5					
ANR	2017728	Condition	"! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"	743:5:19283:19337	2017667	0	True				
ANR	2017729	UnaryOperationExpression	"! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"		2017667	0					
ANR	2017730	UnaryOperator	!		2017667	0					
ANR	2017731	CallExpression	"m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"		2017667	1					
ANR	2017732	Callee	m_client -> read_data		2017667	0					
ANR	2017733	PtrMemberAccess	m_client -> read_data		2017667	0					
ANR	2017734	Identifier	m_client		2017667	0					
ANR	2017735	Identifier	read_data		2017667	1					
ANR	2017736	ArgumentList	& err		2017667	1					
ANR	2017737	Argument	& err		2017667	0					
ANR	2017738	UnaryOperationExpression	& err		2017667	0					
ANR	2017739	UnaryOperator	&		2017667	0					
ANR	2017740	Identifier	err		2017667	1					
ANR	2017741	Argument	sizeof ( proc_family_error_t )		2017667	1					
ANR	2017742	SizeofExpression	sizeof ( proc_family_error_t )		2017667	0					
ANR	2017743	Sizeof	sizeof		2017667	0					
ANR	2017744	SizeofOperand	proc_family_error_t		2017667	1					
ANR	2017745	CompoundStatement		14:62:416:416	2017667	1					
ANR	2017746	ExpressionStatement	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to read response from ProcD\\n"" )"	744:2:19344:19429	2017667	0	True				
ANR	2017747	CallExpression	"dprintf ( D_ALWAYS , ""ProcFamilyClient: failed to read response from ProcD\\n"" )"		2017667	0					
ANR	2017748	Callee	dprintf		2017667	0					
ANR	2017749	Identifier	dprintf		2017667	0					
ANR	2017750	ArgumentList	D_ALWAYS		2017667	1					
ANR	2017751	Argument	D_ALWAYS		2017667	0					
ANR	2017752	Identifier	D_ALWAYS		2017667	0					
ANR	2017753	Argument	"""ProcFamilyClient: failed to read response from ProcD\\n"""		2017667	1					
ANR	2017754	PrimaryExpression	"""ProcFamilyClient: failed to read response from ProcD\\n"""		2017667	0					
ANR	2017755	ReturnStatement	return false ;	746:2:19433:19445	2017667	1	True				
ANR	2017756	Identifier	false		2017667	0					
ANR	2017757	ExpressionStatement	m_client -> end_connection ( )	748:1:19451:19477	2017667	6	True				
ANR	2017758	CallExpression	m_client -> end_connection ( )		2017667	0					
ANR	2017759	Callee	m_client -> end_connection		2017667	0					
ANR	2017760	PtrMemberAccess	m_client -> end_connection		2017667	0					
ANR	2017761	Identifier	m_client		2017667	0					
ANR	2017762	Identifier	end_connection		2017667	1					
ANR	2017763	ArgumentList			2017667	1					
ANR	2017764	ExpressionStatement	"log_exit ( ""quit"" , err )"	750:1:19481:19502	2017667	7	True				
ANR	2017765	CallExpression	"log_exit ( ""quit"" , err )"		2017667	0					
ANR	2017766	Callee	log_exit		2017667	0					
ANR	2017767	Identifier	log_exit		2017667	0					
ANR	2017768	ArgumentList	"""quit"""		2017667	1					
ANR	2017769	Argument	"""quit"""		2017667	0					
ANR	2017770	PrimaryExpression	"""quit"""		2017667	0					
ANR	2017771	Argument	err		2017667	1					
ANR	2017772	Identifier	err		2017667	0					
ANR	2017773	ExpressionStatement	response = ( err == PROC_FAMILY_ERROR_SUCCESS )	751:1:19505:19550	2017667	8	True				
ANR	2017774	AssignmentExpression	response = ( err == PROC_FAMILY_ERROR_SUCCESS )		2017667	0		=			
ANR	2017775	Identifier	response		2017667	0					
ANR	2017776	EqualityExpression	err == PROC_FAMILY_ERROR_SUCCESS		2017667	1		==			
ANR	2017777	Identifier	err		2017667	0					
ANR	2017778	Identifier	PROC_FAMILY_ERROR_SUCCESS		2017667	1					
ANR	2017779	ReturnStatement	return true ;	752:1:19553:19564	2017667	9	True				
ANR	2017780	Identifier	true		2017667	0					
ANR	2017781	ReturnType	bool		2017667	1					
ANR	2017782	Identifier	ProcFamilyClient :: quit		2017667	2					
ANR	2017783	ParameterList	bool & response		2017667	3					
ANR	2017784	Parameter	bool & response	729:23:18907:18920	2017667	0	True				
ANR	2017785	ParameterType	bool &		2017667	0					
ANR	2017786	Identifier	response		2017667	1					
ANR	2017787	CFGEntryNode	ENTRY		2017667		True				
ANR	2017788	CFGExitNode	EXIT		2017667		True				
ANR	2017789	Symbol	m_initialized		2017667						
ANR	2017790	Symbol	& command		2017667						
ANR	2017791	Symbol	m_client -> read_data		2017667						
ANR	2017792	Symbol	D_PROCFAMILY		2017667						
ANR	2017793	Symbol	err		2017667						
ANR	2017794	Symbol	D_ALWAYS		2017667						
ANR	2017795	Symbol	false		2017667						
ANR	2017796	Symbol	& err		2017667						
ANR	2017797	Symbol	command		2017667						
ANR	2017798	Symbol	* m_client		2017667						
ANR	2017799	Symbol	response		2017667						
ANR	2017800	Symbol	m_client -> start_connection		2017667						
ANR	2017801	Symbol	PROC_FAMILY_QUIT		2017667						
ANR	2017802	Symbol	true		2017667						
ANR	2017803	Symbol	PROC_FAMILY_ERROR_SUCCESS		2017667						
ANR	2017804	Symbol	m_client		2017667						
ANR	2017805	Function	ProcFamilyClient :: dump	755:0:19569:21952							
ANR	2017806	FunctionDef	"ProcFamilyClient :: dump (pid_t pid , bool & response , std :: vector < ProcFamilyDump > & vec)"		2017805	0					
ANR	2017807	CompoundStatement		759:0:19704:21952	2017805	0					
ANR	2017808	ExpressionStatement	ASSERT ( m_initialized )	760:1:19707:19728	2017805	0	True				
ANR	2017809	CallExpression	ASSERT ( m_initialized )		2017805	0					
ANR	2017810	Callee	ASSERT		2017805	0					
ANR	2017811	Identifier	ASSERT		2017805	0					
ANR	2017812	ArgumentList	m_initialized		2017805	1					
ANR	2017813	Argument	m_initialized		2017805	0					
ANR	2017814	Identifier	m_initialized		2017805	0					
ANR	2017815	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""About to retrive snapshot state from ProcD\\n"" )"	762:1:19732:19801	2017805	1	True				
ANR	2017816	CallExpression	"dprintf ( D_PROCFAMILY , ""About to retrive snapshot state from ProcD\\n"" )"		2017805	0					
ANR	2017817	Callee	dprintf		2017805	0					
ANR	2017818	Identifier	dprintf		2017805	0					
ANR	2017819	ArgumentList	D_PROCFAMILY		2017805	1					
ANR	2017820	Argument	D_PROCFAMILY		2017805	0					
ANR	2017821	Identifier	D_PROCFAMILY		2017805	0					
ANR	2017822	Argument	"""About to retrive snapshot state from ProcD\\n"""		2017805	1					
ANR	2017823	PrimaryExpression	"""About to retrive snapshot state from ProcD\\n"""		2017805	0					
ANR	2017824	IdentifierDeclStatement	int message_len = sizeof ( proc_family_command_t ) + sizeof ( pid_t ) ;	764:1:19805:19887	2017805	2	True				
ANR	2017825	IdentifierDecl	message_len = sizeof ( proc_family_command_t ) + sizeof ( pid_t )		2017805	0					
ANR	2017826	IdentifierDeclType	int		2017805	0					
ANR	2017827	Identifier	message_len		2017805	1					
ANR	2017828	AssignmentExpression	message_len = sizeof ( proc_family_command_t ) + sizeof ( pid_t )		2017805	2		=			
ANR	2017829	Identifier	message_len		2017805	0					
ANR	2017830	AdditiveExpression	sizeof ( proc_family_command_t ) + sizeof ( pid_t )		2017805	1		+			
ANR	2017831	SizeofExpression	sizeof ( proc_family_command_t )		2017805	0					
ANR	2017832	Sizeof	sizeof		2017805	0					
ANR	2017833	SizeofOperand	proc_family_command_t		2017805	1					
ANR	2017834	SizeofExpression	sizeof ( pid_t )		2017805	1					
ANR	2017835	Sizeof	sizeof		2017805	0					
ANR	2017836	SizeofOperand	pid_t		2017805	1					
ANR	2017837	IdentifierDeclStatement	void * buffer = malloc ( message_len ) ;	766:1:19890:19924	2017805	3	True				
ANR	2017838	IdentifierDecl	* buffer = malloc ( message_len )		2017805	0					
ANR	2017839	IdentifierDeclType	void *		2017805	0					
ANR	2017840	Identifier	buffer		2017805	1					
ANR	2017841	AssignmentExpression	* buffer = malloc ( message_len )		2017805	2		=			
ANR	2017842	Identifier	buffer		2017805	0					
ANR	2017843	CallExpression	malloc ( message_len )		2017805	1					
ANR	2017844	Callee	malloc		2017805	0					
ANR	2017845	Identifier	malloc		2017805	0					
ANR	2017846	ArgumentList	message_len		2017805	1					
ANR	2017847	Argument	message_len		2017805	0					
ANR	2017848	Identifier	message_len		2017805	0					
ANR	2017849	ExpressionStatement	ASSERT ( buffer != NULL )	767:1:19927:19949	2017805	4	True				
ANR	2017850	CallExpression	ASSERT ( buffer != NULL )		2017805	0					
ANR	2017851	Callee	ASSERT		2017805	0					
ANR	2017852	Identifier	ASSERT		2017805	0					
ANR	2017853	ArgumentList	buffer != NULL		2017805	1					
ANR	2017854	Argument	buffer != NULL		2017805	0					
ANR	2017855	EqualityExpression	buffer != NULL		2017805	0		!=			
ANR	2017856	Identifier	buffer		2017805	0					
ANR	2017857	Identifier	NULL		2017805	1					
ANR	2017858	IdentifierDeclStatement	char * ptr = ( char * ) buffer ;	768:1:19952:19977	2017805	5	True				
ANR	2017859	IdentifierDecl	* ptr = ( char * ) buffer		2017805	0					
ANR	2017860	IdentifierDeclType	char *		2017805	0					
ANR	2017861	Identifier	ptr		2017805	1					
ANR	2017862	AssignmentExpression	* ptr = ( char * ) buffer		2017805	2		=			
ANR	2017863	Identifier	ptr		2017805	0					
ANR	2017864	CastExpression	( char * ) buffer		2017805	1					
ANR	2017865	CastTarget	char *		2017805	0					
ANR	2017866	Identifier	buffer		2017805	1					
ANR	2017867	ExpressionStatement	* ( proc_family_command_t * ) ptr = PROC_FAMILY_DUMP	770:1:19981:20028	2017805	6	True				
ANR	2017868	AssignmentExpression	* ( proc_family_command_t * ) ptr = PROC_FAMILY_DUMP		2017805	0		=			
ANR	2017869	UnaryOperationExpression	* ( proc_family_command_t * ) ptr		2017805	0					
ANR	2017870	UnaryOperator	*		2017805	0					
ANR	2017871	CastExpression	( proc_family_command_t * ) ptr		2017805	1					
ANR	2017872	CastTarget	proc_family_command_t *		2017805	0					
ANR	2017873	Identifier	ptr		2017805	1					
ANR	2017874	Identifier	PROC_FAMILY_DUMP		2017805	1					
ANR	2017875	ExpressionStatement	ptr += sizeof ( proc_family_command_t )	771:1:20031:20067	2017805	7	True				
ANR	2017876	AssignmentExpression	ptr += sizeof ( proc_family_command_t )		2017805	0		+=			
ANR	2017877	Identifier	ptr		2017805	0					
ANR	2017878	SizeofExpression	sizeof ( proc_family_command_t )		2017805	1					
ANR	2017879	Sizeof	sizeof		2017805	0					
ANR	2017880	SizeofOperand	proc_family_command_t		2017805	1					
ANR	2017881	ExpressionStatement	* ( pid_t * ) ptr = pid	773:1:20071:20089	2017805	8	True				
ANR	2017882	AssignmentExpression	* ( pid_t * ) ptr = pid		2017805	0		=			
ANR	2017883	UnaryOperationExpression	* ( pid_t * ) ptr		2017805	0					
ANR	2017884	UnaryOperator	*		2017805	0					
ANR	2017885	CastExpression	( pid_t * ) ptr		2017805	1					
ANR	2017886	CastTarget	pid_t *		2017805	0					
ANR	2017887	Identifier	ptr		2017805	1					
ANR	2017888	Identifier	pid		2017805	1					
ANR	2017889	ExpressionStatement	ptr += sizeof ( pid_t )	774:1:20092:20112	2017805	9	True				
ANR	2017890	AssignmentExpression	ptr += sizeof ( pid_t )		2017805	0		+=			
ANR	2017891	Identifier	ptr		2017805	0					
ANR	2017892	SizeofExpression	sizeof ( pid_t )		2017805	1					
ANR	2017893	Sizeof	sizeof		2017805	0					
ANR	2017894	SizeofOperand	pid_t		2017805	1					
ANR	2017895	ExpressionStatement	ASSERT ( ptr - ( char * ) buffer == message_len )	776:1:20116:20158	2017805	10	True				
ANR	2017896	CallExpression	ASSERT ( ptr - ( char * ) buffer == message_len )		2017805	0					
ANR	2017897	Callee	ASSERT		2017805	0					
ANR	2017898	Identifier	ASSERT		2017805	0					
ANR	2017899	ArgumentList	ptr - ( char * ) buffer == message_len		2017805	1					
ANR	2017900	Argument	ptr - ( char * ) buffer == message_len		2017805	0					
ANR	2017901	EqualityExpression	ptr - ( char * ) buffer == message_len		2017805	0		==			
ANR	2017902	AdditiveExpression	ptr - ( char * ) buffer		2017805	0		-			
ANR	2017903	Identifier	ptr		2017805	0					
ANR	2017904	CastExpression	( char * ) buffer		2017805	1					
ANR	2017905	CastTarget	char *		2017805	0					
ANR	2017906	Identifier	buffer		2017805	1					
ANR	2017907	Identifier	message_len		2017805	1					
ANR	2017908	IfStatement	"if ( ! m_client -> start_connection ( buffer , message_len ) )"		2017805	11					
ANR	2017909	Condition	"! m_client -> start_connection ( buffer , message_len )"	778:5:20166:20213	2017805	0	True				
ANR	2017910	UnaryOperationExpression	"! m_client -> start_connection ( buffer , message_len )"		2017805	0					
ANR	2017911	UnaryOperator	!		2017805	0					
ANR	2017912	CallExpression	"m_client -> start_connection ( buffer , message_len )"		2017805	1					
ANR	2017913	Callee	m_client -> start_connection		2017805	0					
ANR	2017914	PtrMemberAccess	m_client -> start_connection		2017805	0					
ANR	2017915	Identifier	m_client		2017805	0					
ANR	2017916	Identifier	start_connection		2017805	1					
ANR	2017917	ArgumentList	buffer		2017805	1					
ANR	2017918	Argument	buffer		2017805	0					
ANR	2017919	Identifier	buffer		2017805	0					
ANR	2017920	Argument	message_len		2017805	1					
ANR	2017921	Identifier	message_len		2017805	0					
ANR	2017922	CompoundStatement		20:55:511:511	2017805	1					
ANR	2017923	Statement	dprintf	779:2:20220:20226	2017805	0	True				
ANR	2017924	Statement	(	779:9:20227:20227	2017805	1	True				
ANR	2017925	Statement	D_ALWAYS	779:10:20228:20235	2017805	2	True				
ANR	2017926	Statement	","	779:18:20236:20236	2017805	3	True				
ANR	2017927	Statement	"""ProcFamilyClient: """	780:10:20248:20267	2017805	4	True				
ANR	2017928	Statement	"""failed to start connection with ProcD\\n"""	781:7:20276:20316	2017805	5	True				
ANR	2017929	Statement	)	781:48:20317:20317	2017805	6	True				
ANR	2017930	ExpressionStatement		781:49:20318:20318	2017805	7	True				
ANR	2017931	ExpressionStatement	free ( buffer )	783:2:20323:20335	2017805	8	True				
ANR	2017932	CallExpression	free ( buffer )		2017805	0					
ANR	2017933	Callee	free		2017805	0					
ANR	2017934	Identifier	free		2017805	0					
ANR	2017935	ArgumentList	buffer		2017805	1					
ANR	2017936	Argument	buffer		2017805	0					
ANR	2017937	Identifier	buffer		2017805	0					
ANR	2017938	ReturnStatement	return false ;	784:2:20339:20351	2017805	9	True				
ANR	2017939	Identifier	false		2017805	0					
ANR	2017940	ExpressionStatement	free ( buffer )	786:1:20357:20369	2017805	12	True				
ANR	2017941	CallExpression	free ( buffer )		2017805	0					
ANR	2017942	Callee	free		2017805	0					
ANR	2017943	Identifier	free		2017805	0					
ANR	2017944	ArgumentList	buffer		2017805	1					
ANR	2017945	Argument	buffer		2017805	0					
ANR	2017946	Identifier	buffer		2017805	0					
ANR	2017947	IdentifierDeclStatement	proc_family_error_t err ;	788:1:20373:20396	2017805	13	True				
ANR	2017948	IdentifierDecl	err		2017805	0					
ANR	2017949	IdentifierDeclType	proc_family_error_t		2017805	0					
ANR	2017950	Identifier	err		2017805	1					
ANR	2017951	IfStatement	"if ( ! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) ) )"		2017805	14					
ANR	2017952	Condition	"! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"	789:5:20403:20457	2017805	0	True				
ANR	2017953	UnaryOperationExpression	"! m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"		2017805	0					
ANR	2017954	UnaryOperator	!		2017805	0					
ANR	2017955	CallExpression	"m_client -> read_data ( & err , sizeof ( proc_family_error_t ) )"		2017805	1					
ANR	2017956	Callee	m_client -> read_data		2017805	0					
ANR	2017957	PtrMemberAccess	m_client -> read_data		2017805	0					
ANR	2017958	Identifier	m_client		2017805	0					
ANR	2017959	Identifier	read_data		2017805	1					
ANR	2017960	ArgumentList	& err		2017805	1					
ANR	2017961	Argument	& err		2017805	0					
ANR	2017962	UnaryOperationExpression	& err		2017805	0					
ANR	2017963	UnaryOperator	&		2017805	0					
ANR	2017964	Identifier	err		2017805	1					
ANR	2017965	Argument	sizeof ( proc_family_error_t )		2017805	1					
ANR	2017966	SizeofExpression	sizeof ( proc_family_error_t )		2017805	0					
ANR	2017967	Sizeof	sizeof		2017805	0					
ANR	2017968	SizeofOperand	proc_family_error_t		2017805	1					
ANR	2017969	CompoundStatement		31:62:755:755	2017805	1					
ANR	2017970	Statement	dprintf	790:2:20464:20470	2017805	0	True				
ANR	2017971	Statement	(	790:9:20471:20471	2017805	1	True				
ANR	2017972	Statement	D_ALWAYS	790:10:20472:20479	2017805	2	True				
ANR	2017973	Statement	","	790:18:20480:20480	2017805	3	True				
ANR	2017974	Statement	"""ProcFamilyClient: """	791:10:20492:20511	2017805	4	True				
ANR	2017975	Statement	"""failed to read response from ProcD\\n"""	792:7:20520:20557	2017805	5	True				
ANR	2017976	Statement	)	792:45:20558:20558	2017805	6	True				
ANR	2017977	ExpressionStatement		792:46:20559:20559	2017805	7	True				
ANR	2017978	ReturnStatement	return false ;	793:2:20563:20575	2017805	8	True				
ANR	2017979	Identifier	false		2017805	0					
ANR	2017980	ExpressionStatement	response = ( err == PROC_FAMILY_ERROR_SUCCESS )	795:1:20581:20626	2017805	15	True				
ANR	2017981	AssignmentExpression	response = ( err == PROC_FAMILY_ERROR_SUCCESS )		2017805	0		=			
ANR	2017982	Identifier	response		2017805	0					
ANR	2017983	EqualityExpression	err == PROC_FAMILY_ERROR_SUCCESS		2017805	1		==			
ANR	2017984	Identifier	err		2017805	0					
ANR	2017985	Identifier	PROC_FAMILY_ERROR_SUCCESS		2017805	1					
ANR	2017986	IfStatement	if ( ! response )		2017805	16					
ANR	2017987	Condition	! response	796:5:20633:20641	2017805	0	True				
ANR	2017988	UnaryOperationExpression	! response		2017805	0					
ANR	2017989	UnaryOperator	!		2017805	0					
ANR	2017990	Identifier	response		2017805	1					
ANR	2017991	CompoundStatement		38:16:939:939	2017805	1					
ANR	2017992	ExpressionStatement	m_client -> end_connection ( )	797:2:20648:20674	2017805	0	True				
ANR	2017993	CallExpression	m_client -> end_connection ( )		2017805	0					
ANR	2017994	Callee	m_client -> end_connection		2017805	0					
ANR	2017995	PtrMemberAccess	m_client -> end_connection		2017805	0					
ANR	2017996	Identifier	m_client		2017805	0					
ANR	2017997	Identifier	end_connection		2017805	1					
ANR	2017998	ArgumentList			2017805	1					
ANR	2017999	ExpressionStatement	"log_exit ( ""dump"" , err )"	798:2:20678:20699	2017805	1	True				
ANR	2018000	CallExpression	"log_exit ( ""dump"" , err )"		2017805	0					
ANR	2018001	Callee	log_exit		2017805	0					
ANR	2018002	Identifier	log_exit		2017805	0					
ANR	2018003	ArgumentList	"""dump"""		2017805	1					
ANR	2018004	Argument	"""dump"""		2017805	0					
ANR	2018005	PrimaryExpression	"""dump"""		2017805	0					
ANR	2018006	Argument	err		2017805	1					
ANR	2018007	Identifier	err		2017805	0					
ANR	2018008	ReturnStatement	return true ;	799:2:20703:20714	2017805	2	True				
ANR	2018009	Identifier	true		2017805	0					
ANR	2018010	ExpressionStatement	vec . clear ( )	802:1:20721:20732	2017805	17	True				
ANR	2018011	CallExpression	vec . clear ( )		2017805	0					
ANR	2018012	Callee	vec . clear		2017805	0					
ANR	2018013	MemberAccess	vec . clear		2017805	0					
ANR	2018014	Identifier	vec		2017805	0					
ANR	2018015	Identifier	clear		2017805	1					
ANR	2018016	ArgumentList			2017805	1					
ANR	2018017	IdentifierDeclStatement	int family_count ;	804:1:20736:20752	2017805	18	True				
ANR	2018018	IdentifierDecl	family_count		2017805	0					
ANR	2018019	IdentifierDeclType	int		2017805	0					
ANR	2018020	Identifier	family_count		2017805	1					
ANR	2018021	IfStatement	"if ( ! m_client -> read_data ( & family_count , sizeof ( int ) ) )"		2017805	19					
ANR	2018022	Condition	"! m_client -> read_data ( & family_count , sizeof ( int ) )"	805:5:20759:20806	2017805	0	True				
ANR	2018023	UnaryOperationExpression	"! m_client -> read_data ( & family_count , sizeof ( int ) )"		2017805	0					
ANR	2018024	UnaryOperator	!		2017805	0					
ANR	2018025	CallExpression	"m_client -> read_data ( & family_count , sizeof ( int ) )"		2017805	1					
ANR	2018026	Callee	m_client -> read_data		2017805	0					
ANR	2018027	PtrMemberAccess	m_client -> read_data		2017805	0					
ANR	2018028	Identifier	m_client		2017805	0					
ANR	2018029	Identifier	read_data		2017805	1					
ANR	2018030	ArgumentList	& family_count		2017805	1					
ANR	2018031	Argument	& family_count		2017805	0					
ANR	2018032	UnaryOperationExpression	& family_count		2017805	0					
ANR	2018033	UnaryOperator	&		2017805	0					
ANR	2018034	Identifier	family_count		2017805	1					
ANR	2018035	Argument	sizeof ( int )		2017805	1					
ANR	2018036	SizeofExpression	sizeof ( int )		2017805	0					
ANR	2018037	Sizeof	sizeof		2017805	0					
ANR	2018038	SizeofOperand	int		2017805	1					
ANR	2018039	CompoundStatement		47:55:1104:1104	2017805	1					
ANR	2018040	Statement	dprintf	806:2:20813:20819	2017805	0	True				
ANR	2018041	Statement	(	806:9:20820:20820	2017805	1	True				
ANR	2018042	Statement	D_ALWAYS	806:10:20821:20828	2017805	2	True				
ANR	2018043	Statement	","	806:18:20829:20829	2017805	3	True				
ANR	2018044	Statement	"""ProcFamilyClient: """	807:10:20841:20860	2017805	4	True				
ANR	2018045	Statement	"""failed to read family count from ProcD\\n"""	808:14:20876:20917	2017805	5	True				
ANR	2018046	Statement	)	808:56:20918:20918	2017805	6	True				
ANR	2018047	ExpressionStatement		808:57:20919:20919	2017805	7	True				
ANR	2018048	ReturnStatement	return false ;	809:2:20923:20935	2017805	8	True				
ANR	2018049	Identifier	false		2017805	0					
ANR	2018050	ExpressionStatement	vec . resize ( family_count )	811:1:20941:20965	2017805	20	True				
ANR	2018051	CallExpression	vec . resize ( family_count )		2017805	0					
ANR	2018052	Callee	vec . resize		2017805	0					
ANR	2018053	MemberAccess	vec . resize		2017805	0					
ANR	2018054	Identifier	vec		2017805	0					
ANR	2018055	Identifier	resize		2017805	1					
ANR	2018056	ArgumentList	family_count		2017805	1					
ANR	2018057	Argument	family_count		2017805	0					
ANR	2018058	Identifier	family_count		2017805	0					
ANR	2018059	ForStatement	for ( int i = 0 ; i < family_count ; ++ i )		2017805	21					
ANR	2018060	ForInit	int i = 0 ;	812:6:20973:20982	2017805	0	True				
ANR	2018061	IdentifierDeclStatement	int i = 0 ;		2017805	0					
ANR	2018062	IdentifierDecl	i = 0		2017805	0					
ANR	2018063	IdentifierDeclType	int		2017805	0					
ANR	2018064	Identifier	i		2017805	1					
ANR	2018065	AssignmentExpression	i = 0		2017805	2		=			
ANR	2018066	Identifier	i		2017805	0					
ANR	2018067	PrimaryExpression	0		2017805	1					
ANR	2018068	Condition	i < family_count	812:17:20984:20999	2017805	1	True				
ANR	2018069	RelationalExpression	i < family_count		2017805	0		<			
ANR	2018070	Identifier	i		2017805	0					
ANR	2018071	Identifier	family_count		2017805	1					
ANR	2018072	UnaryExpression	++ i	812:35:21002:21004	2017805	2	True				
ANR	2018073	IncDec	++		2017805	0					
ANR	2018074	Identifier	i		2017805	1					
ANR	2018075	CompoundStatement		64:2:1638:1652	2017805	3					
ANR	2018076	IfStatement	"if ( ! m_client -> read_data ( & vec [ i ] . parent_root , sizeof ( pid_t ) ) || ! m_client -> read_data ( & vec [ i ] . root_pid , sizeof ( pid_t ) ) || ! m_client -> read_data ( & vec [ i ] . watcher_pid , sizeof ( pid_t ) ) )"		2017805	0					
ANR	2018077	Condition	"! m_client -> read_data ( & vec [ i ] . parent_root , sizeof ( pid_t ) ) || ! m_client -> read_data ( & vec [ i ] . root_pid , sizeof ( pid_t ) ) || ! m_client -> read_data ( & vec [ i ] . watcher_pid , sizeof ( pid_t ) )"	813:6:21015:21196	2017805	0	True				
ANR	2018078	OrExpression	"! m_client -> read_data ( & vec [ i ] . parent_root , sizeof ( pid_t ) ) || ! m_client -> read_data ( & vec [ i ] . root_pid , sizeof ( pid_t ) ) || ! m_client -> read_data ( & vec [ i ] . watcher_pid , sizeof ( pid_t ) )"		2017805	0		||			
ANR	2018079	UnaryOperationExpression	"! m_client -> read_data ( & vec [ i ] . parent_root , sizeof ( pid_t ) )"		2017805	0					
ANR	2018080	UnaryOperator	!		2017805	0					
ANR	2018081	CallExpression	"m_client -> read_data ( & vec [ i ] . parent_root , sizeof ( pid_t ) )"		2017805	1					
ANR	2018082	Callee	m_client -> read_data		2017805	0					
ANR	2018083	PtrMemberAccess	m_client -> read_data		2017805	0					
ANR	2018084	Identifier	m_client		2017805	0					
ANR	2018085	Identifier	read_data		2017805	1					
ANR	2018086	ArgumentList	& vec [ i ] . parent_root		2017805	1					
ANR	2018087	Argument	& vec [ i ] . parent_root		2017805	0					
ANR	2018088	UnaryOperationExpression	& vec [ i ] . parent_root		2017805	0					
ANR	2018089	UnaryOperator	&		2017805	0					
ANR	2018090	MemberAccess	vec [ i ] . parent_root		2017805	1					
ANR	2018091	ArrayIndexing	vec [ i ]		2017805	0					
ANR	2018092	Identifier	vec		2017805	0					
ANR	2018093	Identifier	i		2017805	1					
ANR	2018094	Identifier	parent_root		2017805	1					
ANR	2018095	Argument	sizeof ( pid_t )		2017805	1					
ANR	2018096	SizeofExpression	sizeof ( pid_t )		2017805	0					
ANR	2018097	Sizeof	sizeof		2017805	0					
ANR	2018098	SizeofOperand	pid_t		2017805	1					
ANR	2018099	OrExpression	"! m_client -> read_data ( & vec [ i ] . root_pid , sizeof ( pid_t ) ) || ! m_client -> read_data ( & vec [ i ] . watcher_pid , sizeof ( pid_t ) )"		2017805	1		||			
ANR	2018100	UnaryOperationExpression	"! m_client -> read_data ( & vec [ i ] . root_pid , sizeof ( pid_t ) )"		2017805	0					
ANR	2018101	UnaryOperator	!		2017805	0					
ANR	2018102	CallExpression	"m_client -> read_data ( & vec [ i ] . root_pid , sizeof ( pid_t ) )"		2017805	1					
ANR	2018103	Callee	m_client -> read_data		2017805	0					
ANR	2018104	PtrMemberAccess	m_client -> read_data		2017805	0					
ANR	2018105	Identifier	m_client		2017805	0					
ANR	2018106	Identifier	read_data		2017805	1					
ANR	2018107	ArgumentList	& vec [ i ] . root_pid		2017805	1					
ANR	2018108	Argument	& vec [ i ] . root_pid		2017805	0					
ANR	2018109	UnaryOperationExpression	& vec [ i ] . root_pid		2017805	0					
ANR	2018110	UnaryOperator	&		2017805	0					
ANR	2018111	MemberAccess	vec [ i ] . root_pid		2017805	1					
ANR	2018112	ArrayIndexing	vec [ i ]		2017805	0					
ANR	2018113	Identifier	vec		2017805	0					
ANR	2018114	Identifier	i		2017805	1					
ANR	2018115	Identifier	root_pid		2017805	1					
ANR	2018116	Argument	sizeof ( pid_t )		2017805	1					
ANR	2018117	SizeofExpression	sizeof ( pid_t )		2017805	0					
ANR	2018118	Sizeof	sizeof		2017805	0					
ANR	2018119	SizeofOperand	pid_t		2017805	1					
ANR	2018120	UnaryOperationExpression	"! m_client -> read_data ( & vec [ i ] . watcher_pid , sizeof ( pid_t ) )"		2017805	1					
ANR	2018121	UnaryOperator	!		2017805	0					
ANR	2018122	CallExpression	"m_client -> read_data ( & vec [ i ] . watcher_pid , sizeof ( pid_t ) )"		2017805	1					
ANR	2018123	Callee	m_client -> read_data		2017805	0					
ANR	2018124	PtrMemberAccess	m_client -> read_data		2017805	0					
ANR	2018125	Identifier	m_client		2017805	0					
ANR	2018126	Identifier	read_data		2017805	1					
ANR	2018127	ArgumentList	& vec [ i ] . watcher_pid		2017805	1					
ANR	2018128	Argument	& vec [ i ] . watcher_pid		2017805	0					
ANR	2018129	UnaryOperationExpression	& vec [ i ] . watcher_pid		2017805	0					
ANR	2018130	UnaryOperator	&		2017805	0					
ANR	2018131	MemberAccess	vec [ i ] . watcher_pid		2017805	1					
ANR	2018132	ArrayIndexing	vec [ i ]		2017805	0					
ANR	2018133	Identifier	vec		2017805	0					
ANR	2018134	Identifier	i		2017805	1					
ANR	2018135	Identifier	watcher_pid		2017805	1					
ANR	2018136	Argument	sizeof ( pid_t )		2017805	1					
ANR	2018137	SizeofExpression	sizeof ( pid_t )		2017805	0					
ANR	2018138	Sizeof	sizeof		2017805	0					
ANR	2018139	SizeofOperand	pid_t		2017805	1					
ANR	2018140	CompoundStatement		58:2:1496:1496	2017805	1					
ANR	2018141	Statement	dprintf	817:3:21206:21212	2017805	0	True				
ANR	2018142	Statement	(	817:10:21213:21213	2017805	1	True				
ANR	2018143	Statement	D_ALWAYS	817:11:21214:21221	2017805	2	True				
ANR	2018144	Statement	","	817:19:21222:21222	2017805	3	True				
ANR	2018145	Statement	"""ProcFamilyClient: """	818:11:21235:21254	2017805	4	True				
ANR	2018146	Statement	"""failed reading family dump info from ProcD\\n"""	819:15:21271:21316	2017805	5	True				
ANR	2018147	Statement	)	819:61:21317:21317	2017805	6	True				
ANR	2018148	ExpressionStatement		819:62:21318:21318	2017805	7	True				
ANR	2018149	ReturnStatement	return false ;	820:3:21323:21335	2017805	8	True				
ANR	2018150	Identifier	false		2017805	0					
ANR	2018151	IdentifierDeclStatement	int proc_count ;	822:2:21343:21357	2017805	1	True				
ANR	2018152	IdentifierDecl	proc_count		2017805	0					
ANR	2018153	IdentifierDeclType	int		2017805	0					
ANR	2018154	Identifier	proc_count		2017805	1					
ANR	2018155	IfStatement	"if ( ! m_client -> read_data ( & proc_count , sizeof ( int ) ) )"		2017805	2					
ANR	2018156	Condition	"! m_client -> read_data ( & proc_count , sizeof ( int ) )"	823:6:21365:21410	2017805	0	True				
ANR	2018157	UnaryOperationExpression	"! m_client -> read_data ( & proc_count , sizeof ( int ) )"		2017805	0					
ANR	2018158	UnaryOperator	!		2017805	0					
ANR	2018159	CallExpression	"m_client -> read_data ( & proc_count , sizeof ( int ) )"		2017805	1					
ANR	2018160	Callee	m_client -> read_data		2017805	0					
ANR	2018161	PtrMemberAccess	m_client -> read_data		2017805	0					
ANR	2018162	Identifier	m_client		2017805	0					
ANR	2018163	Identifier	read_data		2017805	1					
ANR	2018164	ArgumentList	& proc_count		2017805	1					
ANR	2018165	Argument	& proc_count		2017805	0					
ANR	2018166	UnaryOperationExpression	& proc_count		2017805	0					
ANR	2018167	UnaryOperator	&		2017805	0					
ANR	2018168	Identifier	proc_count		2017805	1					
ANR	2018169	Argument	sizeof ( int )		2017805	1					
ANR	2018170	SizeofExpression	sizeof ( int )		2017805	0					
ANR	2018171	Sizeof	sizeof		2017805	0					
ANR	2018172	SizeofOperand	int		2017805	1					
ANR	2018173	CompoundStatement		65:54:1708:1708	2017805	1					
ANR	2018174	Statement	dprintf	824:3:21418:21424	2017805	0	True				
ANR	2018175	Statement	(	824:10:21425:21425	2017805	1	True				
ANR	2018176	Statement	D_ALWAYS	824:11:21426:21433	2017805	2	True				
ANR	2018177	Statement	","	824:19:21434:21434	2017805	3	True				
ANR	2018178	Statement	"""ProcFamilyClient: """	825:11:21447:21466	2017805	4	True				
ANR	2018179	Statement	"""failed reading process count from ProcD\\n"""	826:15:21483:21525	2017805	5	True				
ANR	2018180	Statement	)	826:58:21526:21526	2017805	6	True				
ANR	2018181	ExpressionStatement		826:59:21527:21527	2017805	7	True				
ANR	2018182	ReturnStatement	return false ;	827:3:21532:21544	2017805	8	True				
ANR	2018183	Identifier	false		2017805	0					
ANR	2018184	ExpressionStatement	vec [ i ] . procs . resize ( proc_count )	829:2:21552:21583	2017805	3	True				
ANR	2018185	CallExpression	vec [ i ] . procs . resize ( proc_count )		2017805	0					
ANR	2018186	Callee	vec [ i ] . procs . resize		2017805	0					
ANR	2018187	MemberAccess	vec [ i ] . procs . resize		2017805	0					
ANR	2018188	MemberAccess	vec [ i ] . procs		2017805	0					
ANR	2018189	ArrayIndexing	vec [ i ]		2017805	0					
ANR	2018190	Identifier	vec		2017805	0					
ANR	2018191	Identifier	i		2017805	1					
ANR	2018192	Identifier	procs		2017805	1					
ANR	2018193	Identifier	resize		2017805	1					
ANR	2018194	ArgumentList	proc_count		2017805	1					
ANR	2018195	Argument	proc_count		2017805	0					
ANR	2018196	Identifier	proc_count		2017805	0					
ANR	2018197	ForStatement	for ( int j = 0 ; j < proc_count ; ++ j )		2017805	4					
ANR	2018198	ForInit	int j = 0 ;	830:7:21592:21601	2017805	0	True				
ANR	2018199	IdentifierDeclStatement	int j = 0 ;		2017805	0					
ANR	2018200	IdentifierDecl	j = 0		2017805	0					
ANR	2018201	IdentifierDeclType	int		2017805	0					
ANR	2018202	Identifier	j		2017805	1					
ANR	2018203	AssignmentExpression	j = 0		2017805	2		=			
ANR	2018204	Identifier	j		2017805	0					
ANR	2018205	PrimaryExpression	0		2017805	1					
ANR	2018206	Condition	j < proc_count	830:18:21603:21616	2017805	1	True				
ANR	2018207	RelationalExpression	j < proc_count		2017805	0		<			
ANR	2018208	Identifier	j		2017805	0					
ANR	2018209	Identifier	proc_count		2017805	1					
ANR	2018210	UnaryExpression	++ j	830:34:21619:21621	2017805	2	True				
ANR	2018211	IncDec	++		2017805	0					
ANR	2018212	Identifier	j		2017805	1					
ANR	2018213	CompoundStatement		72:39:1919:1919	2017805	3					
ANR	2018214	IfStatement	"if ( ! m_client -> read_data ( & vec [ i ] . procs [ j ] , sizeof ( ProcFamilyProcessDump ) ) )"		2017805	0					
ANR	2018215	Condition	"! m_client -> read_data ( & vec [ i ] . procs [ j ] , sizeof ( ProcFamilyProcessDump ) )"	831:7:21633:21729	2017805	0	True				
ANR	2018216	UnaryOperationExpression	"! m_client -> read_data ( & vec [ i ] . procs [ j ] , sizeof ( ProcFamilyProcessDump ) )"		2017805	0					
ANR	2018217	UnaryOperator	!		2017805	0					
ANR	2018218	CallExpression	"m_client -> read_data ( & vec [ i ] . procs [ j ] , sizeof ( ProcFamilyProcessDump ) )"		2017805	1					
ANR	2018219	Callee	m_client -> read_data		2017805	0					
ANR	2018220	PtrMemberAccess	m_client -> read_data		2017805	0					
ANR	2018221	Identifier	m_client		2017805	0					
ANR	2018222	Identifier	read_data		2017805	1					
ANR	2018223	ArgumentList	& vec [ i ] . procs [ j ]		2017805	1					
ANR	2018224	Argument	& vec [ i ] . procs [ j ]		2017805	0					
ANR	2018225	UnaryOperationExpression	& vec [ i ] . procs [ j ]		2017805	0					
ANR	2018226	UnaryOperator	&		2017805	0					
ANR	2018227	ArrayIndexing	vec [ i ] . procs [ j ]		2017805	1					
ANR	2018228	MemberAccess	vec [ i ] . procs		2017805	0					
ANR	2018229	ArrayIndexing	vec [ i ]		2017805	0					
ANR	2018230	Identifier	vec		2017805	0					
ANR	2018231	Identifier	i		2017805	1					
ANR	2018232	Identifier	procs		2017805	1					
ANR	2018233	Identifier	j		2017805	1					
ANR	2018234	Argument	sizeof ( ProcFamilyProcessDump )		2017805	1					
ANR	2018235	SizeofExpression	sizeof ( ProcFamilyProcessDump )		2017805	0					
ANR	2018236	Sizeof	sizeof		2017805	0					
ANR	2018237	SizeofOperand	ProcFamilyProcessDump		2017805	1					
ANR	2018238	CompoundStatement		75:3:2030:2030	2017805	1					
ANR	2018239	Statement	dprintf	834:3:21740:21746	2017805	0	True				
ANR	2018240	Statement	(	834:10:21747:21747	2017805	1	True				
ANR	2018241	Statement	D_ALWAYS	834:11:21748:21755	2017805	2	True				
ANR	2018242	Statement	","	834:19:21756:21756	2017805	3	True				
ANR	2018243	Statement	"""ProcFamilyClient: """	835:11:21769:21788	2017805	4	True				
ANR	2018244	Statement	"""failed reading process dump info from ProcD\\n"""	836:15:21805:21851	2017805	5	True				
ANR	2018245	Statement	)	836:62:21852:21852	2017805	6	True				
ANR	2018246	ExpressionStatement		836:63:21853:21853	2017805	7	True				
ANR	2018247	ReturnStatement	return false ;	837:3:21858:21870	2017805	8	True				
ANR	2018248	Identifier	false		2017805	0					
ANR	2018249	ExpressionStatement	m_client -> end_connection ( )	841:1:21885:21911	2017805	22	True				
ANR	2018250	CallExpression	m_client -> end_connection ( )		2017805	0					
ANR	2018251	Callee	m_client -> end_connection		2017805	0					
ANR	2018252	PtrMemberAccess	m_client -> end_connection		2017805	0					
ANR	2018253	Identifier	m_client		2017805	0					
ANR	2018254	Identifier	end_connection		2017805	1					
ANR	2018255	ArgumentList			2017805	1					
ANR	2018256	ExpressionStatement	"log_exit ( ""dump"" , err )"	843:1:21915:21936	2017805	23	True				
ANR	2018257	CallExpression	"log_exit ( ""dump"" , err )"		2017805	0					
ANR	2018258	Callee	log_exit		2017805	0					
ANR	2018259	Identifier	log_exit		2017805	0					
ANR	2018260	ArgumentList	"""dump"""		2017805	1					
ANR	2018261	Argument	"""dump"""		2017805	0					
ANR	2018262	PrimaryExpression	"""dump"""		2017805	0					
ANR	2018263	Argument	err		2017805	1					
ANR	2018264	Identifier	err		2017805	0					
ANR	2018265	ReturnStatement	return true ;	844:1:21939:21950	2017805	24	True				
ANR	2018266	Identifier	true		2017805	0					
ANR	2018267	ReturnType	bool		2017805	1					
ANR	2018268	Identifier	ProcFamilyClient :: dump		2017805	2					
ANR	2018269	ParameterList	"pid_t pid , bool & response , std :: vector < ProcFamilyDump > & vec"		2017805	3					
ANR	2018270	Parameter	pid_t pid	756:23:19597:19605	2017805	0	True				
ANR	2018271	ParameterType	pid_t		2017805	0					
ANR	2018272	Identifier	pid		2017805	1					
ANR	2018273	Parameter	bool & response	757:23:19631:19644	2017805	1	True				
ANR	2018274	ParameterType	bool &		2017805	0					
ANR	2018275	Identifier	response		2017805	1					
ANR	2018276	Parameter	std :: vector < ProcFamilyDump > & vec	758:23:19670:19701	2017805	2	True				
ANR	2018277	ParameterType	std :: vector < ProcFamilyDump > &		2017805	0					
ANR	2018278	Identifier	vec		2017805	1					
ANR	2018279	CFGEntryNode	ENTRY		2017805		True				
ANR	2018280	CFGExitNode	EXIT		2017805		True				
ANR	2018281	Symbol	m_initialized		2017805						
ANR	2018282	Symbol	& vec [ i ] . watcher_pid		2017805						
ANR	2018283	Symbol	m_client -> read_data		2017805						
ANR	2018284	Symbol	D_PROCFAMILY		2017805						
ANR	2018285	Symbol	& vec [ i ] . root_pid		2017805						
ANR	2018286	Symbol	& family_count		2017805						
ANR	2018287	Symbol	pid		2017805						
ANR	2018288	Symbol	& err		2017805						
ANR	2018289	Symbol	* ( pid_t * ) ptr		2017805						
ANR	2018290	Symbol	vec		2017805						
ANR	2018291	Symbol	PROC_FAMILY_DUMP		2017805						
ANR	2018292	Symbol	m_client -> start_connection		2017805						
ANR	2018293	Symbol	* ptr		2017805						
ANR	2018294	Symbol	buffer		2017805						
ANR	2018295	Symbol	& proc_count		2017805						
ANR	2018296	Symbol	malloc		2017805						
ANR	2018297	Symbol	NULL		2017805						
ANR	2018298	Symbol	& vec [ i ] . parent_root		2017805						
ANR	2018299	Symbol	err		2017805						
ANR	2018300	Symbol	message_len		2017805						
ANR	2018301	Symbol	false		2017805						
ANR	2018302	Symbol	* ( proc_family_command_t * ) ptr		2017805						
ANR	2018303	Symbol	i		2017805						
ANR	2018304	Symbol	j		2017805						
ANR	2018305	Symbol	vec [ i ] . procs		2017805						
ANR	2018306	Symbol	* m_client		2017805						
ANR	2018307	Symbol	family_count		2017805						
ANR	2018308	Symbol	ptr		2017805						
ANR	2018309	Symbol	proc_count		2017805						
ANR	2018310	Symbol	* i		2017805						
ANR	2018311	Symbol	response		2017805						
ANR	2018312	Symbol	true		2017805						
ANR	2018313	Symbol	PROC_FAMILY_ERROR_SUCCESS		2017805						
ANR	2018314	Symbol	m_client		2017805						
ANR	2018315	Symbol	* vec		2017805						
