command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5609150	File	data/converged/CVE-2011-4930_htcondor/xen_type.linux.cpp								
ANR	5609151	DeclStmt									
ANR	5609152	Decl							define XEN_CKPT_TIMESTAMP_FILE XEN_MEM_SAVED_FILE XEN_CKPT_TIMESTAMP_FILE_SUFFIX extern VMGahp	define XEN_CKPT_TIMESTAMP_FILE XEN_MEM_SAVED_FILE XEN_CKPT_TIMESTAMP_FILE_SUFFIX extern VMGahp *	vmgahp
ANR	5609153	Function	VirshType :: VirshType	48:0:1600:1881							
ANR	5609154	FunctionDef	"VirshType :: VirshType (const char * workingpath , ClassAd * ad)"		5609153	0					
ANR	5609155	CompoundStatement		49:0:1696:1881	5609153	0					
ANR	5609156	ExpressionStatement	m_cputime_before_suspend = 0	50:1:1699:1727	5609153	0	True				
ANR	5609157	AssignmentExpression	m_cputime_before_suspend = 0		5609153	0		=			
ANR	5609158	Identifier	m_cputime_before_suspend		5609153	0					
ANR	5609159	PrimaryExpression	0		5609153	1					
ANR	5609160	ExpressionStatement	m_xen_hw_vt = false	51:1:1730:1749	5609153	1	True				
ANR	5609161	AssignmentExpression	m_xen_hw_vt = false		5609153	0		=			
ANR	5609162	Identifier	m_xen_hw_vt		5609153	0					
ANR	5609163	Identifier	false		5609153	1					
ANR	5609164	ExpressionStatement	m_allow_hw_vt_suspend = false	52:1:1752:1781	5609153	2	True				
ANR	5609165	AssignmentExpression	m_allow_hw_vt_suspend = false		5609153	0		=			
ANR	5609166	Identifier	m_allow_hw_vt_suspend		5609153	0					
ANR	5609167	Identifier	false		5609153	1					
ANR	5609168	ExpressionStatement	m_restart_with_ckpt = false	53:1:1784:1811	5609153	3	True				
ANR	5609169	AssignmentExpression	m_restart_with_ckpt = false		5609153	0		=			
ANR	5609170	Identifier	m_restart_with_ckpt		5609153	0					
ANR	5609171	Identifier	false		5609153	1					
ANR	5609172	ExpressionStatement	m_has_transferred_disk_file = false	54:1:1814:1849	5609153	4	True				
ANR	5609173	AssignmentExpression	m_has_transferred_disk_file = false		5609153	0		=			
ANR	5609174	Identifier	m_has_transferred_disk_file		5609153	0					
ANR	5609175	Identifier	false		5609153	1					
ANR	5609176	ExpressionStatement	m_libvirt_connection = NULL	55:1:1852:1879	5609153	5	True				
ANR	5609177	AssignmentExpression	m_libvirt_connection = NULL		5609153	0		=			
ANR	5609178	Identifier	m_libvirt_connection		5609153	0					
ANR	5609179	Identifier	NULL		5609153	1					
ANR	5609180	Identifier	VirshType :: VirshType		5609153	1					
ANR	5609181	ParameterList	"const char * workingpath , ClassAd * ad"		5609153	2					
ANR	5609182	Parameter	const char * workingpath	48:21:1621:1643	5609153	0	True				
ANR	5609183	ParameterType	const char *		5609153	0					
ANR	5609184	Identifier	workingpath		5609153	1					
ANR	5609185	Parameter	ClassAd * ad	48:45:1645:1655	5609153	1	True				
ANR	5609186	ParameterType	ClassAd *		5609153	0					
ANR	5609187	Identifier	ad		5609153	1					
ANR	5609188	CFGEntryNode	ENTRY		5609153		True				
ANR	5609189	CFGExitNode	EXIT		5609153		True				
ANR	5609190	Symbol	m_restart_with_ckpt		5609153						
ANR	5609191	Symbol	ad		5609153						
ANR	5609192	Symbol	m_libvirt_connection		5609153						
ANR	5609193	Symbol	NULL		5609153						
ANR	5609194	Symbol	m_cputime_before_suspend		5609153						
ANR	5609195	Symbol	workingpath		5609153						
ANR	5609196	Symbol	m_allow_hw_vt_suspend		5609153						
ANR	5609197	Symbol	m_xen_hw_vt		5609153						
ANR	5609198	Symbol	false		5609153						
ANR	5609199	Symbol	m_has_transferred_disk_file		5609153						
ANR	5609200	Function	VirshType :: ~VirshType	58:0:1884:2223							
ANR	5609201	FunctionDef	VirshType :: ~VirshType ()		5609200	0					
ANR	5609202	CompoundStatement		59:0:1908:2223	5609200	0					
ANR	5609203	IdentifierDeclStatement	priv_state old_priv = set_user_priv ( ) ;	60:1:1911:1948	5609200	0	True				
ANR	5609204	IdentifierDecl	old_priv = set_user_priv ( )		5609200	0					
ANR	5609205	IdentifierDeclType	priv_state		5609200	0					
ANR	5609206	Identifier	old_priv		5609200	1					
ANR	5609207	AssignmentExpression	old_priv = set_user_priv ( )		5609200	2		=			
ANR	5609208	Identifier	old_priv		5609200	0					
ANR	5609209	CallExpression	set_user_priv ( )		5609200	1					
ANR	5609210	Callee	set_user_priv		5609200	0					
ANR	5609211	Identifier	set_user_priv		5609200	0					
ANR	5609212	ArgumentList			5609200	1					
ANR	5609213	ExpressionStatement	Shutdown ( )	61:1:1951:1961	5609200	1	True				
ANR	5609214	CallExpression	Shutdown ( )		5609200	0					
ANR	5609215	Callee	Shutdown		5609200	0					
ANR	5609216	Identifier	Shutdown		5609200	0					
ANR	5609217	ArgumentList			5609200	1					
ANR	5609218	ExpressionStatement	set_priv ( old_priv )	62:1:1964:1984	5609200	2	True				
ANR	5609219	CallExpression	set_priv ( old_priv )		5609200	0					
ANR	5609220	Callee	set_priv		5609200	0					
ANR	5609221	Identifier	set_priv		5609200	0					
ANR	5609222	ArgumentList	old_priv		5609200	1					
ANR	5609223	Argument	old_priv		5609200	0					
ANR	5609224	Identifier	old_priv		5609200	0					
ANR	5609225	IfStatement	if ( getVMStatus ( ) != VM_STOPPED )		5609200	3					
ANR	5609226	Condition	getVMStatus ( ) != VM_STOPPED	64:5:1992:2018	5609200	0	True				
ANR	5609227	EqualityExpression	getVMStatus ( ) != VM_STOPPED		5609200	0		!=			
ANR	5609228	CallExpression	getVMStatus ( )		5609200	0					
ANR	5609229	Callee	getVMStatus		5609200	0					
ANR	5609230	Identifier	getVMStatus		5609200	0					
ANR	5609231	ArgumentList			5609200	1					
ANR	5609232	Identifier	VM_STOPPED		5609200	1					
ANR	5609233	CompoundStatement		6:35:113:113	5609200	1					
ANR	5609234	ExpressionStatement	killVM ( )	66:2:2053:2061	5609200	0	True				
ANR	5609235	CallExpression	killVM ( )		5609200	0					
ANR	5609236	Callee	killVM		5609200	0					
ANR	5609237	Identifier	killVM		5609200	0					
ANR	5609238	ArgumentList			5609200	1					
ANR	5609239	ExpressionStatement	setVMStatus ( VM_STOPPED )	68:1:2067:2090	5609200	4	True				
ANR	5609240	CallExpression	setVMStatus ( VM_STOPPED )		5609200	0					
ANR	5609241	Callee	setVMStatus		5609200	0					
ANR	5609242	Identifier	setVMStatus		5609200	0					
ANR	5609243	ArgumentList	VM_STOPPED		5609200	1					
ANR	5609244	Argument	VM_STOPPED		5609200	0					
ANR	5609245	Identifier	VM_STOPPED		5609200	0					
ANR	5609246	IdentifierDeclStatement	XenDisk * disk = NULL ;	70:1:2094:2114	5609200	5	True				
ANR	5609247	IdentifierDecl	* disk = NULL		5609200	0					
ANR	5609248	IdentifierDeclType	XenDisk *		5609200	0					
ANR	5609249	Identifier	disk		5609200	1					
ANR	5609250	AssignmentExpression	* disk = NULL		5609200	2		=			
ANR	5609251	Identifier	NULL		5609200	0					
ANR	5609252	Identifier	NULL		5609200	1					
ANR	5609253	ExpressionStatement	m_disk_list . Rewind ( )	71:1:2117:2137	5609200	6	True				
ANR	5609254	CallExpression	m_disk_list . Rewind ( )		5609200	0					
ANR	5609255	Callee	m_disk_list . Rewind		5609200	0					
ANR	5609256	MemberAccess	m_disk_list . Rewind		5609200	0					
ANR	5609257	Identifier	m_disk_list		5609200	0					
ANR	5609258	Identifier	Rewind		5609200	1					
ANR	5609259	ArgumentList			5609200	1					
ANR	5609260	WhileStatement	while ( m_disk_list . Next ( disk ) )		5609200	7					
ANR	5609261	Condition	m_disk_list . Next ( disk )	72:8:2147:2168	5609200	0	True				
ANR	5609262	CallExpression	m_disk_list . Next ( disk )		5609200	0					
ANR	5609263	Callee	m_disk_list . Next		5609200	0					
ANR	5609264	MemberAccess	m_disk_list . Next		5609200	0					
ANR	5609265	Identifier	m_disk_list		5609200	0					
ANR	5609266	Identifier	Next		5609200	1					
ANR	5609267	ArgumentList	disk		5609200	1					
ANR	5609268	Argument	disk		5609200	0					
ANR	5609269	Identifier	disk		5609200	0					
ANR	5609270	CompoundStatement		14:33:263:263	5609200	1					
ANR	5609271	ExpressionStatement	m_disk_list . DeleteCurrent ( )	73:2:2176:2203	5609200	0	True				
ANR	5609272	CallExpression	m_disk_list . DeleteCurrent ( )		5609200	0					
ANR	5609273	Callee	m_disk_list . DeleteCurrent		5609200	0					
ANR	5609274	MemberAccess	m_disk_list . DeleteCurrent		5609200	0					
ANR	5609275	Identifier	m_disk_list		5609200	0					
ANR	5609276	Identifier	DeleteCurrent		5609200	1					
ANR	5609277	ArgumentList			5609200	1					
ANR	5609278	Statement	delete	74:2:2207:2212	5609200	1	True				
ANR	5609279	ExpressionStatement	disk	74:9:2214:2218	5609200	2	True				
ANR	5609280	Identifier	disk		5609200	0					
ANR	5609281	Identifier	VirshType :: ~VirshType		5609200	1					
ANR	5609282	ParameterList			5609200	2					
ANR	5609283	CFGEntryNode	ENTRY		5609200		True				
ANR	5609284	CFGExitNode	EXIT		5609200		True				
ANR	5609285	Symbol	old_priv		5609200						
ANR	5609286	Symbol	disk		5609200						
ANR	5609287	Symbol	NULL		5609200						
ANR	5609288	Symbol	m_disk_list		5609200						
ANR	5609289	Symbol	m_disk_list . Next		5609200						
ANR	5609290	Symbol	getVMStatus		5609200						
ANR	5609291	Symbol	set_user_priv		5609200						
ANR	5609292	Symbol	VM_STOPPED		5609200						
ANR	5609293	Function	VirshType :: Config	78:0:2226:3227							
ANR	5609294	FunctionDef	VirshType :: Config ()		5609293	0					
ANR	5609295	CompoundStatement		80:0:2251:3227	5609293	0					
ANR	5609296	IdentifierDeclStatement	char * config_value = NULL ;	81:1:2254:2279	5609293	0	True				
ANR	5609297	IdentifierDecl	* config_value = NULL		5609293	0					
ANR	5609298	IdentifierDeclType	char *		5609293	0					
ANR	5609299	Identifier	config_value		5609293	1					
ANR	5609300	AssignmentExpression	* config_value = NULL		5609293	2		=			
ANR	5609301	Identifier	NULL		5609293	0					
ANR	5609302	Identifier	NULL		5609293	1					
ANR	5609303	ExpressionStatement	"config_value = param ( ""VM_NETWORKING_BRIDGE_INTERFACE"" )"	83:1:2283:2337	5609293	1	True				
ANR	5609304	AssignmentExpression	"config_value = param ( ""VM_NETWORKING_BRIDGE_INTERFACE"" )"		5609293	0		=			
ANR	5609305	Identifier	config_value		5609293	0					
ANR	5609306	CallExpression	"param ( ""VM_NETWORKING_BRIDGE_INTERFACE"" )"		5609293	1					
ANR	5609307	Callee	param		5609293	0					
ANR	5609308	Identifier	param		5609293	0					
ANR	5609309	ArgumentList	"""VM_NETWORKING_BRIDGE_INTERFACE"""		5609293	1					
ANR	5609310	Argument	"""VM_NETWORKING_BRIDGE_INTERFACE"""		5609293	0					
ANR	5609311	PrimaryExpression	"""VM_NETWORKING_BRIDGE_INTERFACE"""		5609293	0					
ANR	5609312	IfStatement	if ( config_value )		5609293	2					
ANR	5609313	Condition	config_value	84:5:2344:2355	5609293	0	True				
ANR	5609314	Identifier	config_value		5609293	0					
ANR	5609315	CompoundStatement		5:20:107:107	5609293	1					
ANR	5609316	ExpressionStatement	m_vm_bridge_interface = delete_quotation_marks ( config_value ) . Value ( )	85:2:2363:2431	5609293	0	True				
ANR	5609317	AssignmentExpression	m_vm_bridge_interface = delete_quotation_marks ( config_value ) . Value ( )		5609293	0		=			
ANR	5609318	Identifier	m_vm_bridge_interface		5609293	0					
ANR	5609319	CallExpression	delete_quotation_marks ( config_value ) . Value ( )		5609293	1					
ANR	5609320	Callee	delete_quotation_marks ( config_value ) . Value		5609293	0					
ANR	5609321	MemberAccess	delete_quotation_marks ( config_value ) . Value		5609293	0					
ANR	5609322	CallExpression	delete_quotation_marks ( config_value )		5609293	0					
ANR	5609323	Callee	delete_quotation_marks		5609293	0					
ANR	5609324	Identifier	delete_quotation_marks		5609293	0					
ANR	5609325	ArgumentList	config_value		5609293	1					
ANR	5609326	Argument	config_value		5609293	0					
ANR	5609327	Identifier	config_value		5609293	0					
ANR	5609328	Identifier	Value		5609293	1					
ANR	5609329	ArgumentList			5609293	1					
ANR	5609330	ExpressionStatement	free ( config_value )	86:2:2435:2453	5609293	1	True				
ANR	5609331	CallExpression	free ( config_value )		5609293	0					
ANR	5609332	Callee	free		5609293	0					
ANR	5609333	Identifier	free		5609293	0					
ANR	5609334	ArgumentList	config_value		5609293	1					
ANR	5609335	Argument	config_value		5609293	0					
ANR	5609336	Identifier	config_value		5609293	0					
ANR	5609337	ElseStatement	else		5609293	0					
ANR	5609338	IfStatement	"if ( vmgahp -> m_gahp_config -> m_vm_networking_types . contains ( ""bridge"" ) == true )"		5609293	0					
ANR	5609339	Condition	"vmgahp -> m_gahp_config -> m_vm_networking_types . contains ( ""bridge"" ) == true"	87:12:2467:2537	5609293	0	True				
ANR	5609340	EqualityExpression	"vmgahp -> m_gahp_config -> m_vm_networking_types . contains ( ""bridge"" ) == true"		5609293	0		==			
ANR	5609341	CallExpression	"vmgahp -> m_gahp_config -> m_vm_networking_types . contains ( ""bridge"" )"		5609293	0					
ANR	5609342	Callee	vmgahp -> m_gahp_config -> m_vm_networking_types . contains		5609293	0					
ANR	5609343	MemberAccess	vmgahp -> m_gahp_config -> m_vm_networking_types . contains		5609293	0					
ANR	5609344	PtrMemberAccess	vmgahp -> m_gahp_config -> m_vm_networking_types		5609293	0					
ANR	5609345	PtrMemberAccess	vmgahp -> m_gahp_config		5609293	0					
ANR	5609346	Identifier	vmgahp		5609293	0					
ANR	5609347	Identifier	m_gahp_config		5609293	1					
ANR	5609348	Identifier	m_vm_networking_types		5609293	1					
ANR	5609349	Identifier	contains		5609293	1					
ANR	5609350	ArgumentList	"""bridge"""		5609293	1					
ANR	5609351	Argument	"""bridge"""		5609293	0					
ANR	5609352	PrimaryExpression	"""bridge"""		5609293	0					
ANR	5609353	Identifier	true		5609293	1					
ANR	5609354	CompoundStatement		8:85:288:288	5609293	1					
ANR	5609355	Statement	vmprintf	88:2:2544:2551	5609293	0	True				
ANR	5609356	Statement	(	88:10:2552:2552	5609293	1	True				
ANR	5609357	Statement	D_ALWAYS	88:12:2554:2561	5609293	2	True				
ANR	5609358	Statement	","	88:20:2562:2562	5609293	3	True				
ANR	5609359	Statement	"""ERROR: 'VM_NETWORKING_TYPE' contains """	88:22:2564:2602	5609293	4	True				
ANR	5609360	Statement	"""'bridge' but VM_NETWORKING_BRIDGE_INTERFACE """	89:4:2608:2653	5609293	5	True				
ANR	5609361	Statement	"""isn't defined, so 'bridge' """	90:4:2659:2687	5609293	6	True				
ANR	5609362	Statement	"""networking is disabled\\n"""	91:4:2693:2718	5609293	7	True				
ANR	5609363	Statement	)	91:30:2719:2719	5609293	8	True				
ANR	5609364	ExpressionStatement		91:31:2720:2720	5609293	9	True				
ANR	5609365	ExpressionStatement	"vmgahp -> m_gahp_config -> m_vm_networking_types . remove ( ""bridge"" )"	92:2:2724:2785	5609293	10	True				
ANR	5609366	CallExpression	"vmgahp -> m_gahp_config -> m_vm_networking_types . remove ( ""bridge"" )"		5609293	0					
ANR	5609367	Callee	vmgahp -> m_gahp_config -> m_vm_networking_types . remove		5609293	0					
ANR	5609368	MemberAccess	vmgahp -> m_gahp_config -> m_vm_networking_types . remove		5609293	0					
ANR	5609369	PtrMemberAccess	vmgahp -> m_gahp_config -> m_vm_networking_types		5609293	0					
ANR	5609370	PtrMemberAccess	vmgahp -> m_gahp_config		5609293	0					
ANR	5609371	Identifier	vmgahp		5609293	0					
ANR	5609372	Identifier	m_gahp_config		5609293	1					
ANR	5609373	Identifier	m_vm_networking_types		5609293	1					
ANR	5609374	Identifier	remove		5609293	1					
ANR	5609375	ArgumentList	"""bridge"""		5609293	1					
ANR	5609376	Argument	"""bridge"""		5609293	0					
ANR	5609377	PrimaryExpression	"""bridge"""		5609293	0					
ANR	5609378	IfStatement	if ( vmgahp -> m_gahp_config -> m_vm_networking_types . isEmpty ( ) )		5609293	11					
ANR	5609379	Condition	vmgahp -> m_gahp_config -> m_vm_networking_types . isEmpty ( )	93:6:2793:2846	5609293	0	True				
ANR	5609380	CallExpression	vmgahp -> m_gahp_config -> m_vm_networking_types . isEmpty ( )		5609293	0					
ANR	5609381	Callee	vmgahp -> m_gahp_config -> m_vm_networking_types . isEmpty		5609293	0					
ANR	5609382	MemberAccess	vmgahp -> m_gahp_config -> m_vm_networking_types . isEmpty		5609293	0					
ANR	5609383	PtrMemberAccess	vmgahp -> m_gahp_config -> m_vm_networking_types		5609293	0					
ANR	5609384	PtrMemberAccess	vmgahp -> m_gahp_config		5609293	0					
ANR	5609385	Identifier	vmgahp		5609293	0					
ANR	5609386	Identifier	m_gahp_config		5609293	1					
ANR	5609387	Identifier	m_vm_networking_types		5609293	1					
ANR	5609388	Identifier	isEmpty		5609293	1					
ANR	5609389	ArgumentList			5609293	1					
ANR	5609390	CompoundStatement		14:63:598:598	5609293	1					
ANR	5609391	Statement	vmprintf	94:3:2855:2862	5609293	0	True				
ANR	5609392	Statement	(	94:11:2863:2863	5609293	1	True				
ANR	5609393	Statement	D_ALWAYS	94:13:2865:2872	5609293	2	True				
ANR	5609394	Statement	","	94:21:2873:2873	5609293	3	True				
ANR	5609395	Statement	"""ERROR: 'VM_NETWORKING' is true """	94:23:2875:2907	5609293	4	True				
ANR	5609396	Statement	"""but 'VM_NETWORKING_TYPE' contains """	95:5:2914:2949	5609293	5	True				
ANR	5609397	Statement	"""no valid entries, so 'VM_NETWORKING' """	96:5:2956:2994	5609293	6	True				
ANR	5609398	Statement	"""is disabled\\n"""	97:5:3001:3015	5609293	7	True				
ANR	5609399	Statement	)	97:20:3016:3016	5609293	8	True				
ANR	5609400	ExpressionStatement		97:21:3017:3017	5609293	9	True				
ANR	5609401	ExpressionStatement	vmgahp -> m_gahp_config -> m_vm_networking = false	98:3:3022:3068	5609293	10	True				
ANR	5609402	AssignmentExpression	vmgahp -> m_gahp_config -> m_vm_networking = false		5609293	0		=			
ANR	5609403	PtrMemberAccess	vmgahp -> m_gahp_config -> m_vm_networking		5609293	0					
ANR	5609404	PtrMemberAccess	vmgahp -> m_gahp_config		5609293	0					
ANR	5609405	Identifier	vmgahp		5609293	0					
ANR	5609406	Identifier	m_gahp_config		5609293	1					
ANR	5609407	Identifier	m_vm_networking		5609293	1					
ANR	5609408	Identifier	false		5609293	1					
ANR	5609409	ElseStatement	else		5609293	0					
ANR	5609410	CompoundStatement		20:9:827:827	5609293	0					
ANR	5609411	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Setting default networking type to 'nat'\\n"" )"	100:3:3084:3154	5609293	0	True				
ANR	5609412	CallExpression	"vmprintf ( D_ALWAYS , ""Setting default networking type to 'nat'\\n"" )"		5609293	0					
ANR	5609413	Callee	vmprintf		5609293	0					
ANR	5609414	Identifier	vmprintf		5609293	0					
ANR	5609415	ArgumentList	D_ALWAYS		5609293	1					
ANR	5609416	Argument	D_ALWAYS		5609293	0					
ANR	5609417	Identifier	D_ALWAYS		5609293	0					
ANR	5609418	Argument	"""Setting default networking type to 'nat'\\n"""		5609293	1					
ANR	5609419	PrimaryExpression	"""Setting default networking type to 'nat'\\n"""		5609293	0					
ANR	5609420	ExpressionStatement	"vmgahp -> m_gahp_config -> m_vm_default_networking_type = ""nat"""	102:3:3159:3218	5609293	1	True				
ANR	5609421	AssignmentExpression	"vmgahp -> m_gahp_config -> m_vm_default_networking_type = ""nat"""		5609293	0		=			
ANR	5609422	PtrMemberAccess	vmgahp -> m_gahp_config -> m_vm_default_networking_type		5609293	0					
ANR	5609423	PtrMemberAccess	vmgahp -> m_gahp_config		5609293	0					
ANR	5609424	Identifier	vmgahp		5609293	0					
ANR	5609425	Identifier	m_gahp_config		5609293	1					
ANR	5609426	Identifier	m_vm_default_networking_type		5609293	1					
ANR	5609427	PrimaryExpression	"""nat"""		5609293	1					
ANR	5609428	ReturnType	void		5609293	1					
ANR	5609429	Identifier	VirshType :: Config		5609293	2					
ANR	5609430	ParameterList			5609293	3					
ANR	5609431	CFGEntryNode	ENTRY		5609293		True				
ANR	5609432	CFGExitNode	EXIT		5609293		True				
ANR	5609433	Symbol	config_value		5609293						
ANR	5609434	Symbol	m_vm_bridge_interface		5609293						
ANR	5609435	Symbol	NULL		5609293						
ANR	5609436	Symbol	vmgahp -> m_gahp_config -> m_vm_networking_types . isEmpty		5609293						
ANR	5609437	Symbol	vmgahp -> m_gahp_config -> m_vm_networking_types		5609293						
ANR	5609438	Symbol	false		5609293						
ANR	5609439	Symbol	D_ALWAYS		5609293						
ANR	5609440	Symbol	delete_quotation_marks		5609293						
ANR	5609441	Symbol	vmgahp -> m_gahp_config -> m_vm_default_networking_type		5609293						
ANR	5609442	Symbol	* vmgahp		5609293						
ANR	5609443	Symbol	vmgahp -> m_gahp_config -> m_vm_networking		5609293						
ANR	5609444	Symbol	* vmgahp -> m_gahp_config		5609293						
ANR	5609445	Symbol	param		5609293						
ANR	5609446	Symbol	vmgahp		5609293						
ANR	5609447	Symbol	delete_quotation_marks ( config_value ) . Value		5609293						
ANR	5609448	Symbol	true		5609293						
ANR	5609449	Symbol	vmgahp -> m_gahp_config -> m_vm_networking_types . contains		5609293						
ANR	5609450	Symbol	* * vmgahp		5609293						
ANR	5609451	Symbol	vmgahp -> m_gahp_config		5609293						
ANR	5609452	Function	VirshType :: Start	107:0:3230:5221							
ANR	5609453	FunctionDef	VirshType :: Start ()		5609452	0					
ANR	5609454	CompoundStatement		109:0:3254:5221	5609452	0					
ANR	5609455	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::Start\\n"" )"	110:1:3257:3307	5609452	0	True				
ANR	5609456	CallExpression	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::Start\\n"" )"		5609452	0					
ANR	5609457	Callee	vmprintf		5609452	0					
ANR	5609458	Identifier	vmprintf		5609452	0					
ANR	5609459	ArgumentList	D_FULLDEBUG		5609452	1					
ANR	5609460	Argument	D_FULLDEBUG		5609452	0					
ANR	5609461	Identifier	D_FULLDEBUG		5609452	0					
ANR	5609462	Argument	"""Inside VirshType::Start\\n"""		5609452	1					
ANR	5609463	PrimaryExpression	"""Inside VirshType::Start\\n"""		5609452	0					
ANR	5609464	IfStatement	if ( ( m_configfile . Length ( ) == 0 ) )		5609452	1					
ANR	5609465	Condition	m_configfile . Length ( ) == 0	112:5:3315:3342	5609452	0	True				
ANR	5609466	EqualityExpression	m_configfile . Length ( ) == 0		5609452	0		==			
ANR	5609467	CallExpression	m_configfile . Length ( )		5609452	0					
ANR	5609468	Callee	m_configfile . Length		5609452	0					
ANR	5609469	MemberAccess	m_configfile . Length		5609452	0					
ANR	5609470	Identifier	m_configfile		5609452	0					
ANR	5609471	Identifier	Length		5609452	1					
ANR	5609472	ArgumentList			5609452	1					
ANR	5609473	PrimaryExpression	0		5609452	1					
ANR	5609474	CompoundStatement		4:35:90:90	5609452	1					
ANR	5609475	ExpressionStatement	m_result_msg = VMGAHP_ERR_INTERNAL	114:9:3357:3391	5609452	0	True				
ANR	5609476	AssignmentExpression	m_result_msg = VMGAHP_ERR_INTERNAL		5609452	0		=			
ANR	5609477	Identifier	m_result_msg		5609452	0					
ANR	5609478	Identifier	VMGAHP_ERR_INTERNAL		5609452	1					
ANR	5609479	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""Config file was not set configfile: %s\\n"" , m_configfile . Value ( ) )"	115:2:3395:3482	5609452	1	True				
ANR	5609480	CallExpression	"vmprintf ( D_FULLDEBUG , ""Config file was not set configfile: %s\\n"" , m_configfile . Value ( ) )"		5609452	0					
ANR	5609481	Callee	vmprintf		5609452	0					
ANR	5609482	Identifier	vmprintf		5609452	0					
ANR	5609483	ArgumentList	D_FULLDEBUG		5609452	1					
ANR	5609484	Argument	D_FULLDEBUG		5609452	0					
ANR	5609485	Identifier	D_FULLDEBUG		5609452	0					
ANR	5609486	Argument	"""Config file was not set configfile: %s\\n"""		5609452	1					
ANR	5609487	PrimaryExpression	"""Config file was not set configfile: %s\\n"""		5609452	0					
ANR	5609488	Argument	m_configfile . Value ( )		5609452	2					
ANR	5609489	CallExpression	m_configfile . Value ( )		5609452	0					
ANR	5609490	Callee	m_configfile . Value		5609452	0					
ANR	5609491	MemberAccess	m_configfile . Value		5609452	0					
ANR	5609492	Identifier	m_configfile		5609452	0					
ANR	5609493	Identifier	Value		5609452	1					
ANR	5609494	ArgumentList			5609452	1					
ANR	5609495	ReturnStatement	return false ;	116:2:3486:3498	5609452	2	True				
ANR	5609496	Identifier	false		5609452	0					
ANR	5609497	IfStatement	if ( getVMStatus ( ) != VM_STOPPED )		5609452	2					
ANR	5609498	Condition	getVMStatus ( ) != VM_STOPPED	119:5:3509:3535	5609452	0	True				
ANR	5609499	EqualityExpression	getVMStatus ( ) != VM_STOPPED		5609452	0		!=			
ANR	5609500	CallExpression	getVMStatus ( )		5609452	0					
ANR	5609501	Callee	getVMStatus		5609452	0					
ANR	5609502	Identifier	getVMStatus		5609452	0					
ANR	5609503	ArgumentList			5609452	1					
ANR	5609504	Identifier	VM_STOPPED		5609452	1					
ANR	5609505	CompoundStatement		11:35:284:284	5609452	1					
ANR	5609506	ExpressionStatement	m_result_msg = VMGAHP_ERR_VM_INVALID_OPERATION	120:2:3543:3589	5609452	0	True				
ANR	5609507	AssignmentExpression	m_result_msg = VMGAHP_ERR_VM_INVALID_OPERATION		5609452	0		=			
ANR	5609508	Identifier	m_result_msg		5609452	0					
ANR	5609509	Identifier	VMGAHP_ERR_VM_INVALID_OPERATION		5609452	1					
ANR	5609510	ReturnStatement	return false ;	121:2:3593:3605	5609452	1	True				
ANR	5609511	Identifier	false		5609452	0					
ANR	5609512	IfStatement	if ( m_restart_with_ckpt )		5609452	3					
ANR	5609513	Condition	m_restart_with_ckpt	124:5:3616:3634	5609452	0	True				
ANR	5609514	Identifier	m_restart_with_ckpt		5609452	0					
ANR	5609515	CompoundStatement		17:2:387:406	5609452	1					
ANR	5609516	IdentifierDeclStatement	bool res = Resume ( ) ;	125:2:3642:3661	5609452	0	True				
ANR	5609517	IdentifierDecl	res = Resume ( )		5609452	0					
ANR	5609518	IdentifierDeclType	bool		5609452	0					
ANR	5609519	Identifier	res		5609452	1					
ANR	5609520	AssignmentExpression	res = Resume ( )		5609452	2		=			
ANR	5609521	Identifier	res		5609452	0					
ANR	5609522	CallExpression	Resume ( )		5609452	1					
ANR	5609523	Callee	Resume		5609452	0					
ANR	5609524	Identifier	Resume		5609452	0					
ANR	5609525	ArgumentList			5609452	1					
ANR	5609526	IfStatement	if ( res )		5609452	1					
ANR	5609527	Condition	res	126:6:3669:3671	5609452	0	True				
ANR	5609528	Identifier	res		5609452	0					
ANR	5609529	CompoundStatement		18:12:420:420	5609452	1					
ANR	5609530	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Succeeded to restart with checkpointed files\\n"" )"	128:3:3696:3764	5609452	0	True				
ANR	5609531	CallExpression	"vmprintf ( D_ALWAYS , ""Succeeded to restart with checkpointed files\\n"" )"		5609452	0					
ANR	5609532	Callee	vmprintf		5609452	0					
ANR	5609533	Identifier	vmprintf		5609452	0					
ANR	5609534	ArgumentList	D_ALWAYS		5609452	1					
ANR	5609535	Argument	D_ALWAYS		5609452	0					
ANR	5609536	Identifier	D_ALWAYS		5609452	0					
ANR	5609537	Argument	"""Succeeded to restart with checkpointed files\\n"""		5609452	1					
ANR	5609538	PrimaryExpression	"""Succeeded to restart with checkpointed files\\n"""		5609452	0					
ANR	5609539	ExpressionStatement	updateAllWriteDiskTimestamp ( time ( NULL ) )	131:3:3837:3876	5609452	1	True				
ANR	5609540	CallExpression	updateAllWriteDiskTimestamp ( time ( NULL ) )		5609452	0					
ANR	5609541	Callee	updateAllWriteDiskTimestamp		5609452	0					
ANR	5609542	Identifier	updateAllWriteDiskTimestamp		5609452	0					
ANR	5609543	ArgumentList	time ( NULL )		5609452	1					
ANR	5609544	Argument	time ( NULL )		5609452	0					
ANR	5609545	CallExpression	time ( NULL )		5609452	0					
ANR	5609546	Callee	time		5609452	0					
ANR	5609547	Identifier	time		5609452	0					
ANR	5609548	ArgumentList	NULL		5609452	1					
ANR	5609549	Argument	NULL		5609452	0					
ANR	5609550	Identifier	NULL		5609452	0					
ANR	5609551	ExpressionStatement	m_start_time . getTime ( )	132:3:3881:3903	5609452	2	True				
ANR	5609552	CallExpression	m_start_time . getTime ( )		5609452	0					
ANR	5609553	Callee	m_start_time . getTime		5609452	0					
ANR	5609554	MemberAccess	m_start_time . getTime		5609452	0					
ANR	5609555	Identifier	m_start_time		5609452	0					
ANR	5609556	Identifier	getTime		5609452	1					
ANR	5609557	ArgumentList			5609452	1					
ANR	5609558	ReturnStatement	return true ;	133:3:3908:3919	5609452	3	True				
ANR	5609559	Identifier	true		5609452	0					
ANR	5609560	ElseStatement	else		5609452	0					
ANR	5609561	CompoundStatement		26:8:674:674	5609452	0					
ANR	5609562	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Failed to restart with checkpointed files\\n"" )"	136:3:3982:4047	5609452	0	True				
ANR	5609563	CallExpression	"vmprintf ( D_ALWAYS , ""Failed to restart with checkpointed files\\n"" )"		5609452	0					
ANR	5609564	Callee	vmprintf		5609452	0					
ANR	5609565	Identifier	vmprintf		5609452	0					
ANR	5609566	ArgumentList	D_ALWAYS		5609452	1					
ANR	5609567	Argument	D_ALWAYS		5609452	0					
ANR	5609568	Identifier	D_ALWAYS		5609452	0					
ANR	5609569	Argument	"""Failed to restart with checkpointed files\\n"""		5609452	1					
ANR	5609570	PrimaryExpression	"""Failed to restart with checkpointed files\\n"""		5609452	0					
ANR	5609571	ExpressionStatement	"vmprintf ( D_ALWAYS , ""So, we will try to create a new configuration file\\n"" )"	137:3:4052:4126	5609452	1	True				
ANR	5609572	CallExpression	"vmprintf ( D_ALWAYS , ""So, we will try to create a new configuration file\\n"" )"		5609452	0					
ANR	5609573	Callee	vmprintf		5609452	0					
ANR	5609574	Identifier	vmprintf		5609452	0					
ANR	5609575	ArgumentList	D_ALWAYS		5609452	1					
ANR	5609576	Argument	D_ALWAYS		5609452	0					
ANR	5609577	Identifier	D_ALWAYS		5609452	0					
ANR	5609578	Argument	"""So, we will try to create a new configuration file\\n"""		5609452	1					
ANR	5609579	PrimaryExpression	"""So, we will try to create a new configuration file\\n"""		5609452	0					
ANR	5609580	ExpressionStatement	deleteNonTransferredFiles ( )	139:3:4132:4159	5609452	2	True				
ANR	5609581	CallExpression	deleteNonTransferredFiles ( )		5609452	0					
ANR	5609582	Callee	deleteNonTransferredFiles		5609452	0					
ANR	5609583	Identifier	deleteNonTransferredFiles		5609452	0					
ANR	5609584	ArgumentList			5609452	1					
ANR	5609585	ExpressionStatement	"m_configfile = """""	140:3:4164:4181	5609452	3	True				
ANR	5609586	AssignmentExpression	"m_configfile = """""		5609452	0		=			
ANR	5609587	Identifier	m_configfile		5609452	0					
ANR	5609588	PrimaryExpression	""""""		5609452	1					
ANR	5609589	ExpressionStatement	"m_suspendfile = """""	141:3:4186:4204	5609452	4	True				
ANR	5609590	AssignmentExpression	"m_suspendfile = """""		5609452	0		=			
ANR	5609591	Identifier	m_suspendfile		5609452	0					
ANR	5609592	PrimaryExpression	""""""		5609452	1					
ANR	5609593	ExpressionStatement	m_restart_with_ckpt = false	142:3:4209:4236	5609452	5	True				
ANR	5609594	AssignmentExpression	m_restart_with_ckpt = false		5609452	0		=			
ANR	5609595	Identifier	m_restart_with_ckpt		5609452	0					
ANR	5609596	Identifier	false		5609452	1					
ANR	5609597	IfStatement	if ( this -> CreateConfigFile ( ) == false )		5609452	6					
ANR	5609598	Condition	this -> CreateConfigFile ( ) == false	144:7:4246:4278	5609452	0	True				
ANR	5609599	EqualityExpression	this -> CreateConfigFile ( ) == false		5609452	0		==			
ANR	5609600	CallExpression	this -> CreateConfigFile ( )		5609452	0					
ANR	5609601	Callee	this -> CreateConfigFile		5609452	0					
ANR	5609602	PtrMemberAccess	this -> CreateConfigFile		5609452	0					
ANR	5609603	Identifier	this		5609452	0					
ANR	5609604	Identifier	CreateConfigFile		5609452	1					
ANR	5609605	ArgumentList			5609452	1					
ANR	5609606	Identifier	false		5609452	1					
ANR	5609607	CompoundStatement		36:43:1027:1027	5609452	1					
ANR	5609608	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Failed to create a new configuration files\\n"" )"	145:4:4288:4354	5609452	0	True				
ANR	5609609	CallExpression	"vmprintf ( D_ALWAYS , ""Failed to create a new configuration files\\n"" )"		5609452	0					
ANR	5609610	Callee	vmprintf		5609452	0					
ANR	5609611	Identifier	vmprintf		5609452	0					
ANR	5609612	ArgumentList	D_ALWAYS		5609452	1					
ANR	5609613	Argument	D_ALWAYS		5609452	0					
ANR	5609614	Identifier	D_ALWAYS		5609452	0					
ANR	5609615	Argument	"""Failed to create a new configuration files\\n"""		5609452	1					
ANR	5609616	PrimaryExpression	"""Failed to create a new configuration files\\n"""		5609452	0					
ANR	5609617	ReturnStatement	return false ;	146:4:4360:4372	5609452	1	True				
ANR	5609618	Identifier	false		5609452	0					
ANR	5609619	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""Trying XML: %s\\n"" , m_xml . Value ( ) )"	153:1:4454:4510	5609452	4	True				
ANR	5609620	CallExpression	"vmprintf ( D_FULLDEBUG , ""Trying XML: %s\\n"" , m_xml . Value ( ) )"		5609452	0					
ANR	5609621	Callee	vmprintf		5609452	0					
ANR	5609622	Identifier	vmprintf		5609452	0					
ANR	5609623	ArgumentList	D_FULLDEBUG		5609452	1					
ANR	5609624	Argument	D_FULLDEBUG		5609452	0					
ANR	5609625	Identifier	D_FULLDEBUG		5609452	0					
ANR	5609626	Argument	"""Trying XML: %s\\n"""		5609452	1					
ANR	5609627	PrimaryExpression	"""Trying XML: %s\\n"""		5609452	0					
ANR	5609628	Argument	m_xml . Value ( )		5609452	2					
ANR	5609629	CallExpression	m_xml . Value ( )		5609452	0					
ANR	5609630	Callee	m_xml . Value		5609452	0					
ANR	5609631	MemberAccess	m_xml . Value		5609452	0					
ANR	5609632	Identifier	m_xml		5609452	0					
ANR	5609633	Identifier	Value		5609452	1					
ANR	5609634	ArgumentList			5609452	1					
ANR	5609635	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	154:1:4513:4546	5609452	5	True				
ANR	5609636	IdentifierDecl	priv = set_root_priv ( )		5609452	0					
ANR	5609637	IdentifierDeclType	priv_state		5609452	0					
ANR	5609638	Identifier	priv		5609452	1					
ANR	5609639	AssignmentExpression	priv = set_root_priv ( )		5609452	2		=			
ANR	5609640	Identifier	priv		5609452	0					
ANR	5609641	CallExpression	set_root_priv ( )		5609452	1					
ANR	5609642	Callee	set_root_priv		5609452	0					
ANR	5609643	Identifier	set_root_priv		5609452	0					
ANR	5609644	ArgumentList			5609452	1					
ANR	5609645	IdentifierDeclStatement	"virDomainPtr vm = virDomainCreateXML ( m_libvirt_connection , m_xml . Value ( ) , 0 ) ;"	155:1:4549:4625	5609452	6	True				
ANR	5609646	IdentifierDecl	"vm = virDomainCreateXML ( m_libvirt_connection , m_xml . Value ( ) , 0 )"		5609452	0					
ANR	5609647	IdentifierDeclType	virDomainPtr		5609452	0					
ANR	5609648	Identifier	vm		5609452	1					
ANR	5609649	AssignmentExpression	"vm = virDomainCreateXML ( m_libvirt_connection , m_xml . Value ( ) , 0 )"		5609452	2		=			
ANR	5609650	Identifier	vm		5609452	0					
ANR	5609651	CallExpression	"virDomainCreateXML ( m_libvirt_connection , m_xml . Value ( ) , 0 )"		5609452	1					
ANR	5609652	Callee	virDomainCreateXML		5609452	0					
ANR	5609653	Identifier	virDomainCreateXML		5609452	0					
ANR	5609654	ArgumentList	m_libvirt_connection		5609452	1					
ANR	5609655	Argument	m_libvirt_connection		5609452	0					
ANR	5609656	Identifier	m_libvirt_connection		5609452	0					
ANR	5609657	Argument	m_xml . Value ( )		5609452	1					
ANR	5609658	CallExpression	m_xml . Value ( )		5609452	0					
ANR	5609659	Callee	m_xml . Value		5609452	0					
ANR	5609660	MemberAccess	m_xml . Value		5609452	0					
ANR	5609661	Identifier	m_xml		5609452	0					
ANR	5609662	Identifier	Value		5609452	1					
ANR	5609663	ArgumentList			5609452	1					
ANR	5609664	Argument	0		5609452	2					
ANR	5609665	PrimaryExpression	0		5609452	0					
ANR	5609666	ExpressionStatement	set_priv ( priv )	156:1:4628:4642	5609452	7	True				
ANR	5609667	CallExpression	set_priv ( priv )		5609452	0					
ANR	5609668	Callee	set_priv		5609452	0					
ANR	5609669	Identifier	set_priv		5609452	0					
ANR	5609670	ArgumentList	priv		5609452	1					
ANR	5609671	Argument	priv		5609452	0					
ANR	5609672	Identifier	priv		5609452	0					
ANR	5609673	IfStatement	if ( vm == NULL )		5609452	8					
ANR	5609674	Condition	vm == NULL	158:4:4649:4658	5609452	0	True				
ANR	5609675	EqualityExpression	vm == NULL		5609452	0		==			
ANR	5609676	Identifier	vm		5609452	0					
ANR	5609677	Identifier	NULL		5609452	1					
ANR	5609678	CompoundStatement		54:5:1492:1551	5609452	1					
ANR	5609679	IdentifierDeclStatement	virErrorPtr err = virConnGetLastError ( m_libvirt_connection ) ;	162:5:4747:4806	5609452	0	True				
ANR	5609680	IdentifierDecl	err = virConnGetLastError ( m_libvirt_connection )		5609452	0					
ANR	5609681	IdentifierDeclType	virErrorPtr		5609452	0					
ANR	5609682	Identifier	err		5609452	1					
ANR	5609683	AssignmentExpression	err = virConnGetLastError ( m_libvirt_connection )		5609452	2		=			
ANR	5609684	Identifier	err		5609452	0					
ANR	5609685	CallExpression	virConnGetLastError ( m_libvirt_connection )		5609452	1					
ANR	5609686	Callee	virConnGetLastError		5609452	0					
ANR	5609687	Identifier	virConnGetLastError		5609452	0					
ANR	5609688	ArgumentList	m_libvirt_connection		5609452	1					
ANR	5609689	Argument	m_libvirt_connection		5609452	0					
ANR	5609690	Identifier	m_libvirt_connection		5609452	0					
ANR	5609691	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Failed to create libvirt domain: %s\\n"" , ( err ? err -> message : ""No reason found"" ) )"	163:5:4813:4914	5609452	1	True				
ANR	5609692	CallExpression	"vmprintf ( D_ALWAYS , ""Failed to create libvirt domain: %s\\n"" , ( err ? err -> message : ""No reason found"" ) )"		5609452	0					
ANR	5609693	Callee	vmprintf		5609452	0					
ANR	5609694	Identifier	vmprintf		5609452	0					
ANR	5609695	ArgumentList	D_ALWAYS		5609452	1					
ANR	5609696	Argument	D_ALWAYS		5609452	0					
ANR	5609697	Identifier	D_ALWAYS		5609452	0					
ANR	5609698	Argument	"""Failed to create libvirt domain: %s\\n"""		5609452	1					
ANR	5609699	PrimaryExpression	"""Failed to create libvirt domain: %s\\n"""		5609452	0					
ANR	5609700	Argument	"err ? err -> message : ""No reason found"""		5609452	2					
ANR	5609701	ConditionalExpression	"err ? err -> message : ""No reason found"""		5609452	0					
ANR	5609702	Condition	err		5609452	0					
ANR	5609703	Identifier	err		5609452	0					
ANR	5609704	PtrMemberAccess	err -> message		5609452	1					
ANR	5609705	Identifier	err		5609452	0					
ANR	5609706	Identifier	message		5609452	1					
ANR	5609707	PrimaryExpression	"""No reason found"""		5609452	2					
ANR	5609708	ReturnStatement	return false ;	165:5:4947:4959	5609452	2	True				
ANR	5609709	Identifier	false		5609452	0					
ANR	5609710	ExpressionStatement	priv = set_root_priv ( )	169:1:4969:4991	5609452	9	True				
ANR	5609711	AssignmentExpression	priv = set_root_priv ( )		5609452	0		=			
ANR	5609712	Identifier	priv		5609452	0					
ANR	5609713	CallExpression	set_root_priv ( )		5609452	1					
ANR	5609714	Callee	set_root_priv		5609452	0					
ANR	5609715	Identifier	set_root_priv		5609452	0					
ANR	5609716	ArgumentList			5609452	1					
ANR	5609717	ExpressionStatement	virDomainFree ( vm )	170:1:4994:5011	5609452	10	True				
ANR	5609718	CallExpression	virDomainFree ( vm )		5609452	0					
ANR	5609719	Callee	virDomainFree		5609452	0					
ANR	5609720	Identifier	virDomainFree		5609452	0					
ANR	5609721	ArgumentList	vm		5609452	1					
ANR	5609722	Argument	vm		5609452	0					
ANR	5609723	Identifier	vm		5609452	0					
ANR	5609724	ExpressionStatement	set_priv ( priv )	171:1:5014:5028	5609452	11	True				
ANR	5609725	CallExpression	set_priv ( priv )		5609452	0					
ANR	5609726	Callee	set_priv		5609452	0					
ANR	5609727	Identifier	set_priv		5609452	0					
ANR	5609728	ArgumentList	priv		5609452	1					
ANR	5609729	Argument	priv		5609452	0					
ANR	5609730	Identifier	priv		5609452	0					
ANR	5609731	ExpressionStatement	setVMStatus ( VM_RUNNING )	173:1:5032:5055	5609452	12	True				
ANR	5609732	CallExpression	setVMStatus ( VM_RUNNING )		5609452	0					
ANR	5609733	Callee	setVMStatus		5609452	0					
ANR	5609734	Identifier	setVMStatus		5609452	0					
ANR	5609735	ArgumentList	VM_RUNNING		5609452	1					
ANR	5609736	Argument	VM_RUNNING		5609452	0					
ANR	5609737	Identifier	VM_RUNNING		5609452	0					
ANR	5609738	ExpressionStatement	m_start_time . getTime ( )	174:1:5058:5080	5609452	13	True				
ANR	5609739	CallExpression	m_start_time . getTime ( )		5609452	0					
ANR	5609740	Callee	m_start_time . getTime		5609452	0					
ANR	5609741	MemberAccess	m_start_time . getTime		5609452	0					
ANR	5609742	Identifier	m_start_time		5609452	0					
ANR	5609743	Identifier	getTime		5609452	1					
ANR	5609744	ArgumentList			5609452	1					
ANR	5609745	ExpressionStatement	m_cpu_time = 0	175:1:5083:5097	5609452	14	True				
ANR	5609746	AssignmentExpression	m_cpu_time = 0		5609452	0		=			
ANR	5609747	Identifier	m_cpu_time		5609452	0					
ANR	5609748	PrimaryExpression	0		5609452	1					
ANR	5609749	ExpressionStatement	updateAllWriteDiskTimestamp ( time ( NULL ) )	178:1:5166:5205	5609452	15	True				
ANR	5609750	CallExpression	updateAllWriteDiskTimestamp ( time ( NULL ) )		5609452	0					
ANR	5609751	Callee	updateAllWriteDiskTimestamp		5609452	0					
ANR	5609752	Identifier	updateAllWriteDiskTimestamp		5609452	0					
ANR	5609753	ArgumentList	time ( NULL )		5609452	1					
ANR	5609754	Argument	time ( NULL )		5609452	0					
ANR	5609755	CallExpression	time ( NULL )		5609452	0					
ANR	5609756	Callee	time		5609452	0					
ANR	5609757	Identifier	time		5609452	0					
ANR	5609758	ArgumentList	NULL		5609452	1					
ANR	5609759	Argument	NULL		5609452	0					
ANR	5609760	Identifier	NULL		5609452	0					
ANR	5609761	ReturnStatement	return true ;	179:1:5208:5219	5609452	16	True				
ANR	5609762	Identifier	true		5609452	0					
ANR	5609763	ReturnType	bool		5609452	1					
ANR	5609764	Identifier	VirshType :: Start		5609452	2					
ANR	5609765	ParameterList			5609452	3					
ANR	5609766	CFGEntryNode	ENTRY		5609452		True				
ANR	5609767	CFGExitNode	EXIT		5609452		True				
ANR	5609768	Symbol	m_result_msg		5609452						
ANR	5609769	Symbol	VMGAHP_ERR_INTERNAL		5609452						
ANR	5609770	Symbol	m_cpu_time		5609452						
ANR	5609771	Symbol	getVMStatus		5609452						
ANR	5609772	Symbol	m_configfile		5609452						
ANR	5609773	Symbol	virConnGetLastError		5609452						
ANR	5609774	Symbol	m_xml . Value		5609452						
ANR	5609775	Symbol	m_libvirt_connection		5609452						
ANR	5609776	Symbol	m_configfile . Value		5609452						
ANR	5609777	Symbol	priv		5609452						
ANR	5609778	Symbol	virDomainCreateXML		5609452						
ANR	5609779	Symbol	VM_RUNNING		5609452						
ANR	5609780	Symbol	res		5609452						
ANR	5609781	Symbol	m_start_time		5609452						
ANR	5609782	Symbol	this -> CreateConfigFile		5609452						
ANR	5609783	Symbol	NULL		5609452						
ANR	5609784	Symbol	err		5609452						
ANR	5609785	Symbol	err -> message		5609452						
ANR	5609786	Symbol	VMGAHP_ERR_VM_INVALID_OPERATION		5609452						
ANR	5609787	Symbol	m_suspendfile		5609452						
ANR	5609788	Symbol	m_configfile . Length		5609452						
ANR	5609789	Symbol	false		5609452						
ANR	5609790	Symbol	D_ALWAYS		5609452						
ANR	5609791	Symbol	this		5609452						
ANR	5609792	Symbol	m_xml		5609452						
ANR	5609793	Symbol	VM_STOPPED		5609452						
ANR	5609794	Symbol	D_FULLDEBUG		5609452						
ANR	5609795	Symbol	set_root_priv		5609452						
ANR	5609796	Symbol	* this		5609452						
ANR	5609797	Symbol	* err		5609452						
ANR	5609798	Symbol	m_restart_with_ckpt		5609452						
ANR	5609799	Symbol	vm		5609452						
ANR	5609800	Symbol	true		5609452						
ANR	5609801	Symbol	time		5609452						
ANR	5609802	Symbol	Resume		5609452						
ANR	5609803	Function	VirshType :: Shutdown	182:0:5224:7441							
ANR	5609804	FunctionDef	VirshType :: Shutdown ()		5609803	0					
ANR	5609805	CompoundStatement		184:0:5251:7441	5609803	0					
ANR	5609806	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::Shutdown\\n"" )"	185:1:5254:5307	5609803	0	True				
ANR	5609807	CallExpression	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::Shutdown\\n"" )"		5609803	0					
ANR	5609808	Callee	vmprintf		5609803	0					
ANR	5609809	Identifier	vmprintf		5609803	0					
ANR	5609810	ArgumentList	D_FULLDEBUG		5609803	1					
ANR	5609811	Argument	D_FULLDEBUG		5609803	0					
ANR	5609812	Identifier	D_FULLDEBUG		5609803	0					
ANR	5609813	Argument	"""Inside VirshType::Shutdown\\n"""		5609803	1					
ANR	5609814	PrimaryExpression	"""Inside VirshType::Shutdown\\n"""		5609803	0					
ANR	5609815	IfStatement	if ( ( m_configfile . Length ( ) == 0 ) )		5609803	1					
ANR	5609816	Condition	m_configfile . Length ( ) == 0	187:5:5315:5342	5609803	0	True				
ANR	5609817	EqualityExpression	m_configfile . Length ( ) == 0		5609803	0		==			
ANR	5609818	CallExpression	m_configfile . Length ( )		5609803	0					
ANR	5609819	Callee	m_configfile . Length		5609803	0					
ANR	5609820	MemberAccess	m_configfile . Length		5609803	0					
ANR	5609821	Identifier	m_configfile		5609803	0					
ANR	5609822	Identifier	Length		5609803	1					
ANR	5609823	ArgumentList			5609803	1					
ANR	5609824	PrimaryExpression	0		5609803	1					
ANR	5609825	CompoundStatement		4:36:94:94	5609803	1					
ANR	5609826	ExpressionStatement	m_result_msg = VMGAHP_ERR_INTERNAL	188:2:5350:5384	5609803	0	True				
ANR	5609827	AssignmentExpression	m_result_msg = VMGAHP_ERR_INTERNAL		5609803	0		=			
ANR	5609828	Identifier	m_result_msg		5609803	0					
ANR	5609829	Identifier	VMGAHP_ERR_INTERNAL		5609803	1					
ANR	5609830	ReturnStatement	return false ;	189:2:5388:5400	5609803	1	True				
ANR	5609831	Identifier	false		5609803	0					
ANR	5609832	IfStatement	if ( getVMStatus ( ) == VM_STOPPED )		5609803	2					
ANR	5609833	Condition	getVMStatus ( ) == VM_STOPPED	192:5:5411:5437	5609803	0	True				
ANR	5609834	EqualityExpression	getVMStatus ( ) == VM_STOPPED		5609803	0		==			
ANR	5609835	CallExpression	getVMStatus ( )		5609803	0					
ANR	5609836	Callee	getVMStatus		5609803	0					
ANR	5609837	Identifier	getVMStatus		5609803	0					
ANR	5609838	ArgumentList			5609803	1					
ANR	5609839	Identifier	VM_STOPPED		5609803	1					
ANR	5609840	CompoundStatement		9:35:189:189	5609803	1					
ANR	5609841	IfStatement	if ( m_self_shutdown )		5609803	0					
ANR	5609842	Condition	m_self_shutdown	193:6:5449:5463	5609803	0	True				
ANR	5609843	Identifier	m_self_shutdown		5609803	0					
ANR	5609844	CompoundStatement		10:24:215:215	5609803	1					
ANR	5609845	IfStatement	if ( m_vm_no_output_vm )		5609803	0					
ANR	5609846	Condition	m_vm_no_output_vm	194:7:5476:5492	5609803	0	True				
ANR	5609847	Identifier	m_vm_no_output_vm		5609803	0					
ANR	5609848	CompoundStatement		11:27:244:244	5609803	1					
ANR	5609849	ExpressionStatement	m_delete_working_files = true	197:4:5612:5641	5609803	0	True				
ANR	5609850	AssignmentExpression	m_delete_working_files = true		5609803	0		=			
ANR	5609851	Identifier	m_delete_working_files		5609803	0					
ANR	5609852	Identifier	true		5609803	1					
ANR	5609853	ExpressionStatement	m_is_checkpointed = false	198:4:5647:5672	5609803	1	True				
ANR	5609854	AssignmentExpression	m_is_checkpointed = false		5609803	0		=			
ANR	5609855	Identifier	m_is_checkpointed		5609803	0					
ANR	5609856	Identifier	false		5609803	1					
ANR	5609857	ElseStatement	else		5609803	0					
ANR	5609858	CompoundStatement		28:4:715:735	5609803	0					
ANR	5609859	IfStatement	if ( ! m_suspendfile . IsEmpty ( ) )		5609803	0					
ANR	5609860	Condition	! m_suspendfile . IsEmpty ( )	200:8:5693:5716	5609803	0	True				
ANR	5609861	UnaryOperationExpression	! m_suspendfile . IsEmpty ( )		5609803	0					
ANR	5609862	UnaryOperator	!		5609803	0					
ANR	5609863	CallExpression	m_suspendfile . IsEmpty ( )		5609803	1					
ANR	5609864	Callee	m_suspendfile . IsEmpty		5609803	0					
ANR	5609865	MemberAccess	m_suspendfile . IsEmpty		5609803	0					
ANR	5609866	Identifier	m_suspendfile		5609803	0					
ANR	5609867	Identifier	IsEmpty		5609803	1					
ANR	5609868	ArgumentList			5609803	1					
ANR	5609869	CompoundStatement		17:35:468:468	5609803	1					
ANR	5609870	ExpressionStatement	unlink ( m_suspendfile . Value ( ) )	201:5:5727:5756	5609803	0	True				
ANR	5609871	CallExpression	unlink ( m_suspendfile . Value ( ) )		5609803	0					
ANR	5609872	Callee	unlink		5609803	0					
ANR	5609873	Identifier	unlink		5609803	0					
ANR	5609874	ArgumentList	m_suspendfile . Value ( )		5609803	1					
ANR	5609875	Argument	m_suspendfile . Value ( )		5609803	0					
ANR	5609876	CallExpression	m_suspendfile . Value ( )		5609803	0					
ANR	5609877	Callee	m_suspendfile . Value		5609803	0					
ANR	5609878	MemberAccess	m_suspendfile . Value		5609803	0					
ANR	5609879	Identifier	m_suspendfile		5609803	0					
ANR	5609880	Identifier	Value		5609803	1					
ANR	5609881	ArgumentList			5609803	1					
ANR	5609882	ExpressionStatement	"m_suspendfile = """""	203:4:5768:5786	5609803	1	True				
ANR	5609883	AssignmentExpression	"m_suspendfile = """""		5609803	0		=			
ANR	5609884	Identifier	m_suspendfile		5609803	0					
ANR	5609885	PrimaryExpression	""""""		5609803	1					
ANR	5609886	IfStatement	if ( ! m_configfile . IsEmpty ( ) )		5609803	2					
ANR	5609887	Condition	! m_configfile . IsEmpty ( )	206:8:5849:5871	5609803	0	True				
ANR	5609888	UnaryOperationExpression	! m_configfile . IsEmpty ( )		5609803	0					
ANR	5609889	UnaryOperator	!		5609803	0					
ANR	5609890	CallExpression	m_configfile . IsEmpty ( )		5609803	1					
ANR	5609891	Callee	m_configfile . IsEmpty		5609803	0					
ANR	5609892	MemberAccess	m_configfile . IsEmpty		5609803	0					
ANR	5609893	Identifier	m_configfile		5609803	0					
ANR	5609894	Identifier	IsEmpty		5609803	1					
ANR	5609895	ArgumentList			5609803	1					
ANR	5609896	CompoundStatement		23:34:623:623	5609803	1					
ANR	5609897	ExpressionStatement	unlink ( m_configfile . Value ( ) )	207:5:5882:5910	5609803	0	True				
ANR	5609898	CallExpression	unlink ( m_configfile . Value ( ) )		5609803	0					
ANR	5609899	Callee	unlink		5609803	0					
ANR	5609900	Identifier	unlink		5609803	0					
ANR	5609901	ArgumentList	m_configfile . Value ( )		5609803	1					
ANR	5609902	Argument	m_configfile . Value ( )		5609803	0					
ANR	5609903	CallExpression	m_configfile . Value ( )		5609803	0					
ANR	5609904	Callee	m_configfile . Value		5609803	0					
ANR	5609905	MemberAccess	m_configfile . Value		5609803	0					
ANR	5609906	Identifier	m_configfile		5609803	0					
ANR	5609907	Identifier	Value		5609803	1					
ANR	5609908	ArgumentList			5609803	1					
ANR	5609909	IdentifierDeclStatement	MyString tmpfilename ;	211:4:5967:5987	5609803	3	True				
ANR	5609910	IdentifierDecl	tmpfilename		5609803	0					
ANR	5609911	IdentifierDeclType	MyString		5609803	0					
ANR	5609912	Identifier	tmpfilename		5609803	1					
ANR	5609913	ExpressionStatement	"tmpfilename . sprintf ( ""%s%c%s"" , m_workingpath . Value ( ) , DIR_DELIM_CHAR , XEN_CKPT_TIMESTAMP_FILE )"	212:4:5993:6092	5609803	4	True				
ANR	5609914	CallExpression	"tmpfilename . sprintf ( ""%s%c%s"" , m_workingpath . Value ( ) , DIR_DELIM_CHAR , XEN_CKPT_TIMESTAMP_FILE )"		5609803	0					
ANR	5609915	Callee	tmpfilename . sprintf		5609803	0					
ANR	5609916	MemberAccess	tmpfilename . sprintf		5609803	0					
ANR	5609917	Identifier	tmpfilename		5609803	0					
ANR	5609918	Identifier	sprintf		5609803	1					
ANR	5609919	ArgumentList	"""%s%c%s"""		5609803	1					
ANR	5609920	Argument	"""%s%c%s"""		5609803	0					
ANR	5609921	PrimaryExpression	"""%s%c%s"""		5609803	0					
ANR	5609922	Argument	m_workingpath . Value ( )		5609803	1					
ANR	5609923	CallExpression	m_workingpath . Value ( )		5609803	0					
ANR	5609924	Callee	m_workingpath . Value		5609803	0					
ANR	5609925	MemberAccess	m_workingpath . Value		5609803	0					
ANR	5609926	Identifier	m_workingpath		5609803	0					
ANR	5609927	Identifier	Value		5609803	1					
ANR	5609928	ArgumentList			5609803	1					
ANR	5609929	Argument	DIR_DELIM_CHAR		5609803	2					
ANR	5609930	Identifier	DIR_DELIM_CHAR		5609803	0					
ANR	5609931	Argument	XEN_CKPT_TIMESTAMP_FILE		5609803	3					
ANR	5609932	Identifier	XEN_CKPT_TIMESTAMP_FILE		5609803	0					
ANR	5609933	ExpressionStatement	unlink ( tmpfilename . Value ( ) )	214:4:6098:6125	5609803	5	True				
ANR	5609934	CallExpression	unlink ( tmpfilename . Value ( ) )		5609803	0					
ANR	5609935	Callee	unlink		5609803	0					
ANR	5609936	Identifier	unlink		5609803	0					
ANR	5609937	ArgumentList	tmpfilename . Value ( )		5609803	1					
ANR	5609938	Argument	tmpfilename . Value ( )		5609803	0					
ANR	5609939	CallExpression	tmpfilename . Value ( )		5609803	0					
ANR	5609940	Callee	tmpfilename . Value		5609803	0					
ANR	5609941	MemberAccess	tmpfilename . Value		5609803	0					
ANR	5609942	Identifier	tmpfilename		5609803	0					
ANR	5609943	Identifier	Value		5609803	1					
ANR	5609944	ArgumentList			5609803	1					
ANR	5609945	ExpressionStatement	updateLocalWriteDiskTimestamp ( time ( NULL ) )	217:4:6202:6243	5609803	6	True				
ANR	5609946	CallExpression	updateLocalWriteDiskTimestamp ( time ( NULL ) )		5609803	0					
ANR	5609947	Callee	updateLocalWriteDiskTimestamp		5609803	0					
ANR	5609948	Identifier	updateLocalWriteDiskTimestamp		5609803	0					
ANR	5609949	ArgumentList	time ( NULL )		5609803	1					
ANR	5609950	Argument	time ( NULL )		5609803	0					
ANR	5609951	CallExpression	time ( NULL )		5609803	0					
ANR	5609952	Callee	time		5609803	0					
ANR	5609953	Identifier	time		5609803	0					
ANR	5609954	ArgumentList	NULL		5609803	1					
ANR	5609955	Argument	NULL		5609803	0					
ANR	5609956	Identifier	NULL		5609803	0					
ANR	5609957	ExpressionStatement	m_self_shutdown = false	222:2:6348:6371	5609803	1	True				
ANR	5609958	AssignmentExpression	m_self_shutdown = false		5609803	0		=			
ANR	5609959	Identifier	m_self_shutdown		5609803	0					
ANR	5609960	Identifier	false		5609803	1					
ANR	5609961	ReturnStatement	return true ;	223:2:6375:6386	5609803	2	True				
ANR	5609962	Identifier	true		5609803	0					
ANR	5609963	ExpressionStatement	ResumeFromSoftSuspend ( )	230:1:6496:6519	5609803	3	True				
ANR	5609964	CallExpression	ResumeFromSoftSuspend ( )		5609803	0					
ANR	5609965	Callee	ResumeFromSoftSuspend		5609803	0					
ANR	5609966	Identifier	ResumeFromSoftSuspend		5609803	0					
ANR	5609967	ArgumentList			5609803	1					
ANR	5609968	IfStatement	if ( getVMStatus ( ) == VM_RUNNING )		5609803	4					
ANR	5609969	Condition	getVMStatus ( ) == VM_RUNNING	232:5:6527:6553	5609803	0	True				
ANR	5609970	EqualityExpression	getVMStatus ( ) == VM_RUNNING		5609803	0		==			
ANR	5609971	CallExpression	getVMStatus ( )		5609803	0					
ANR	5609972	Callee	getVMStatus		5609803	0					
ANR	5609973	Identifier	getVMStatus		5609803	0					
ANR	5609974	ArgumentList			5609803	1					
ANR	5609975	Identifier	VM_RUNNING		5609803	1					
ANR	5609976	CompoundStatement		51:16:1360:1441	5609803	1					
ANR	5609977	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	233:2:6561:6594	5609803	0	True				
ANR	5609978	IdentifierDecl	priv = set_root_priv ( )		5609803	0					
ANR	5609979	IdentifierDeclType	priv_state		5609803	0					
ANR	5609980	Identifier	priv		5609803	1					
ANR	5609981	AssignmentExpression	priv = set_root_priv ( )		5609803	2		=			
ANR	5609982	Identifier	priv		5609803	0					
ANR	5609983	CallExpression	set_root_priv ( )		5609803	1					
ANR	5609984	Callee	set_root_priv		5609803	0					
ANR	5609985	Identifier	set_root_priv		5609803	0					
ANR	5609986	ArgumentList			5609803	1					
ANR	5609987	IdentifierDeclStatement	"virDomainPtr dom = virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) ) ;"	234:16:6612:6693	5609803	1	True				
ANR	5609988	IdentifierDecl	"dom = virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) )"		5609803	0					
ANR	5609989	IdentifierDeclType	virDomainPtr		5609803	0					
ANR	5609990	Identifier	dom		5609803	1					
ANR	5609991	AssignmentExpression	"dom = virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) )"		5609803	2		=			
ANR	5609992	Identifier	dom		5609803	0					
ANR	5609993	CallExpression	"virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) )"		5609803	1					
ANR	5609994	Callee	virDomainLookupByName		5609803	0					
ANR	5609995	Identifier	virDomainLookupByName		5609803	0					
ANR	5609996	ArgumentList	m_libvirt_connection		5609803	1					
ANR	5609997	Argument	m_libvirt_connection		5609803	0					
ANR	5609998	Identifier	m_libvirt_connection		5609803	0					
ANR	5609999	Argument	m_vm_name . Value ( )		5609803	1					
ANR	5610000	CallExpression	m_vm_name . Value ( )		5609803	0					
ANR	5610001	Callee	m_vm_name . Value		5609803	0					
ANR	5610002	MemberAccess	m_vm_name . Value		5609803	0					
ANR	5610003	Identifier	m_vm_name		5609803	0					
ANR	5610004	Identifier	Value		5609803	1					
ANR	5610005	ArgumentList			5609803	1					
ANR	5610006	ExpressionStatement	set_priv ( priv )	235:2:6697:6711	5609803	2	True				
ANR	5610007	CallExpression	set_priv ( priv )		5609803	0					
ANR	5610008	Callee	set_priv		5609803	0					
ANR	5610009	Identifier	set_priv		5609803	0					
ANR	5610010	ArgumentList	priv		5609803	1					
ANR	5610011	Argument	priv		5609803	0					
ANR	5610012	Identifier	priv		5609803	0					
ANR	5610013	IfStatement	if ( dom == NULL )		5609803	3					
ANR	5610014	Condition	dom == NULL	236:5:6718:6728	5609803	0	True				
ANR	5610015	EqualityExpression	dom == NULL		5609803	0		==			
ANR	5610016	Identifier	dom		5609803	0					
ANR	5610017	Identifier	NULL		5609803	1					
ANR	5610018	CompoundStatement		55:6:1491:1550	5609803	1					
ANR	5610019	IdentifierDeclStatement	virErrorPtr err = virConnGetLastError ( m_libvirt_connection ) ;	238:6:6743:6802	5609803	0	True				
ANR	5610020	IdentifierDecl	err = virConnGetLastError ( m_libvirt_connection )		5609803	0					
ANR	5610021	IdentifierDeclType	virErrorPtr		5609803	0					
ANR	5610022	Identifier	err		5609803	1					
ANR	5610023	AssignmentExpression	err = virConnGetLastError ( m_libvirt_connection )		5609803	2		=			
ANR	5610024	Identifier	err		5609803	0					
ANR	5610025	CallExpression	virConnGetLastError ( m_libvirt_connection )		5609803	1					
ANR	5610026	Callee	virConnGetLastError		5609803	0					
ANR	5610027	Identifier	virConnGetLastError		5609803	0					
ANR	5610028	ArgumentList	m_libvirt_connection		5609803	1					
ANR	5610029	Argument	m_libvirt_connection		5609803	0					
ANR	5610030	Identifier	m_libvirt_connection		5609803	0					
ANR	5610031	IfStatement	if ( err && err -> code != VIR_ERR_NO_DOMAIN )		5609803	1					
ANR	5610032	Condition	err && err -> code != VIR_ERR_NO_DOMAIN	239:10:6814:6850	5609803	0	True				
ANR	5610033	AndExpression	err && err -> code != VIR_ERR_NO_DOMAIN		5609803	0		&&			
ANR	5610034	Identifier	err		5609803	0					
ANR	5610035	EqualityExpression	err -> code != VIR_ERR_NO_DOMAIN		5609803	1		!=			
ANR	5610036	PtrMemberAccess	err -> code		5609803	0					
ANR	5610037	Identifier	err		5609803	0					
ANR	5610038	Identifier	code		5609803	1					
ANR	5610039	Identifier	VIR_ERR_NO_DOMAIN		5609803	1					
ANR	5610040	CompoundStatement		57:8:1609:1609	5609803	1					
ANR	5610041	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Error finding domain %s: %s\\n"" , m_vm_name . Value ( ) , ( err ? err -> message : ""No reason found"" ) )"	241:3:6866:6978	5609803	0	True				
ANR	5610042	CallExpression	"vmprintf ( D_ALWAYS , ""Error finding domain %s: %s\\n"" , m_vm_name . Value ( ) , ( err ? err -> message : ""No reason found"" ) )"		5609803	0					
ANR	5610043	Callee	vmprintf		5609803	0					
ANR	5610044	Identifier	vmprintf		5609803	0					
ANR	5610045	ArgumentList	D_ALWAYS		5609803	1					
ANR	5610046	Argument	D_ALWAYS		5609803	0					
ANR	5610047	Identifier	D_ALWAYS		5609803	0					
ANR	5610048	Argument	"""Error finding domain %s: %s\\n"""		5609803	1					
ANR	5610049	PrimaryExpression	"""Error finding domain %s: %s\\n"""		5609803	0					
ANR	5610050	Argument	m_vm_name . Value ( )		5609803	2					
ANR	5610051	CallExpression	m_vm_name . Value ( )		5609803	0					
ANR	5610052	Callee	m_vm_name . Value		5609803	0					
ANR	5610053	MemberAccess	m_vm_name . Value		5609803	0					
ANR	5610054	Identifier	m_vm_name		5609803	0					
ANR	5610055	Identifier	Value		5609803	1					
ANR	5610056	ArgumentList			5609803	1					
ANR	5610057	Argument	"err ? err -> message : ""No reason found"""		5609803	3					
ANR	5610058	ConditionalExpression	"err ? err -> message : ""No reason found"""		5609803	0					
ANR	5610059	Condition	err		5609803	0					
ANR	5610060	Identifier	err		5609803	0					
ANR	5610061	PtrMemberAccess	err -> message		5609803	1					
ANR	5610062	Identifier	err		5609803	0					
ANR	5610063	Identifier	message		5609803	1					
ANR	5610064	PrimaryExpression	"""No reason found"""		5609803	2					
ANR	5610065	ReturnStatement	return false ;	242:3:6983:6995	5609803	1	True				
ANR	5610066	Identifier	false		5609803	0					
ANR	5610067	ElseStatement	else		5609803	0					
ANR	5610068	CompoundStatement		65:6:1810:1845	5609803	0					
ANR	5610069	ExpressionStatement	priv = set_root_priv ( )	247:6:7032:7054	5609803	0	True				
ANR	5610070	AssignmentExpression	priv = set_root_priv ( )		5609803	0		=			
ANR	5610071	Identifier	priv		5609803	0					
ANR	5610072	CallExpression	set_root_priv ( )		5609803	1					
ANR	5610073	Callee	set_root_priv		5609803	0					
ANR	5610074	Identifier	set_root_priv		5609803	0					
ANR	5610075	ArgumentList			5609803	1					
ANR	5610076	IdentifierDeclStatement	int result = virDomainShutdown ( dom ) ;	248:6:7062:7097	5609803	1	True				
ANR	5610077	IdentifierDecl	result = virDomainShutdown ( dom )		5609803	0					
ANR	5610078	IdentifierDeclType	int		5609803	0					
ANR	5610079	Identifier	result		5609803	1					
ANR	5610080	AssignmentExpression	result = virDomainShutdown ( dom )		5609803	2		=			
ANR	5610081	Identifier	result		5609803	0					
ANR	5610082	CallExpression	virDomainShutdown ( dom )		5609803	1					
ANR	5610083	Callee	virDomainShutdown		5609803	0					
ANR	5610084	Identifier	virDomainShutdown		5609803	0					
ANR	5610085	ArgumentList	dom		5609803	1					
ANR	5610086	Argument	dom		5609803	0					
ANR	5610087	Identifier	dom		5609803	0					
ANR	5610088	ExpressionStatement	virDomainFree ( dom )	249:6:7105:7123	5609803	2	True				
ANR	5610089	CallExpression	virDomainFree ( dom )		5609803	0					
ANR	5610090	Callee	virDomainFree		5609803	0					
ANR	5610091	Identifier	virDomainFree		5609803	0					
ANR	5610092	ArgumentList	dom		5609803	1					
ANR	5610093	Argument	dom		5609803	0					
ANR	5610094	Identifier	dom		5609803	0					
ANR	5610095	ExpressionStatement	set_priv ( priv )	250:6:7131:7145	5609803	3	True				
ANR	5610096	CallExpression	set_priv ( priv )		5609803	0					
ANR	5610097	Callee	set_priv		5609803	0					
ANR	5610098	Identifier	set_priv		5609803	0					
ANR	5610099	ArgumentList	priv		5609803	1					
ANR	5610100	Argument	priv		5609803	0					
ANR	5610101	Identifier	priv		5609803	0					
ANR	5610102	IfStatement	if ( result != 0 )		5609803	4					
ANR	5610103	Condition	result != 0	251:10:7157:7167	5609803	0	True				
ANR	5610104	EqualityExpression	result != 0		5609803	0		!=			
ANR	5610105	Identifier	result		5609803	0					
ANR	5610106	PrimaryExpression	0		5609803	1					
ANR	5610107	CompoundStatement		68:24:1919:1919	5609803	1					
ANR	5610108	ExpressionStatement	killVM ( )	254:7:7241:7249	5609803	0	True				
ANR	5610109	CallExpression	killVM ( )		5609803	0					
ANR	5610110	Callee	killVM		5609803	0					
ANR	5610111	Identifier	killVM		5609803	0					
ANR	5610112	ArgumentList			5609803	1					
ANR	5610113	ExpressionStatement	m_delete_working_files = true	258:2:7313:7342	5609803	4	True				
ANR	5610114	AssignmentExpression	m_delete_working_files = true		5609803	0		=			
ANR	5610115	Identifier	m_delete_working_files		5609803	0					
ANR	5610116	Identifier	true		5609803	1					
ANR	5610117	ExpressionStatement	m_is_checkpointed = false	259:2:7346:7371	5609803	5	True				
ANR	5610118	AssignmentExpression	m_is_checkpointed = false		5609803	0		=			
ANR	5610119	Identifier	m_is_checkpointed		5609803	0					
ANR	5610120	Identifier	false		5609803	1					
ANR	5610121	ExpressionStatement	setVMStatus ( VM_STOPPED )	262:1:7378:7401	5609803	5	True				
ANR	5610122	CallExpression	setVMStatus ( VM_STOPPED )		5609803	0					
ANR	5610123	Callee	setVMStatus		5609803	0					
ANR	5610124	Identifier	setVMStatus		5609803	0					
ANR	5610125	ArgumentList	VM_STOPPED		5609803	1					
ANR	5610126	Argument	VM_STOPPED		5609803	0					
ANR	5610127	Identifier	VM_STOPPED		5609803	0					
ANR	5610128	ExpressionStatement	m_stop_time . getTime ( )	263:1:7404:7425	5609803	6	True				
ANR	5610129	CallExpression	m_stop_time . getTime ( )		5609803	0					
ANR	5610130	Callee	m_stop_time . getTime		5609803	0					
ANR	5610131	MemberAccess	m_stop_time . getTime		5609803	0					
ANR	5610132	Identifier	m_stop_time		5609803	0					
ANR	5610133	Identifier	getTime		5609803	1					
ANR	5610134	ArgumentList			5609803	1					
ANR	5610135	ReturnStatement	return true ;	264:1:7428:7439	5609803	7	True				
ANR	5610136	Identifier	true		5609803	0					
ANR	5610137	ReturnType	bool		5609803	1					
ANR	5610138	Identifier	VirshType :: Shutdown		5609803	2					
ANR	5610139	ParameterList			5609803	3					
ANR	5610140	CFGEntryNode	ENTRY		5609803		True				
ANR	5610141	CFGExitNode	EXIT		5609803		True				
ANR	5610142	Symbol	m_result_msg		5609803						
ANR	5610143	Symbol	VMGAHP_ERR_INTERNAL		5609803						
ANR	5610144	Symbol	m_vm_name		5609803						
ANR	5610145	Symbol	m_workingpath . Value		5609803						
ANR	5610146	Symbol	dom		5609803						
ANR	5610147	Symbol	err -> code		5609803						
ANR	5610148	Symbol	getVMStatus		5609803						
ANR	5610149	Symbol	m_configfile		5609803						
ANR	5610150	Symbol	m_suspendfile . IsEmpty		5609803						
ANR	5610151	Symbol	VIR_ERR_NO_DOMAIN		5609803						
ANR	5610152	Symbol	m_suspendfile . Value		5609803						
ANR	5610153	Symbol	m_configfile . IsEmpty		5609803						
ANR	5610154	Symbol	tmpfilename . Value		5609803						
ANR	5610155	Symbol	virConnGetLastError		5609803						
ANR	5610156	Symbol	result		5609803						
ANR	5610157	Symbol	m_stop_time		5609803						
ANR	5610158	Symbol	m_libvirt_connection		5609803						
ANR	5610159	Symbol	tmpfilename		5609803						
ANR	5610160	Symbol	m_configfile . Value		5609803						
ANR	5610161	Symbol	virDomainShutdown		5609803						
ANR	5610162	Symbol	priv		5609803						
ANR	5610163	Symbol	VM_RUNNING		5609803						
ANR	5610164	Symbol	m_self_shutdown		5609803						
ANR	5610165	Symbol	XEN_CKPT_TIMESTAMP_FILE		5609803						
ANR	5610166	Symbol	NULL		5609803						
ANR	5610167	Symbol	m_delete_working_files		5609803						
ANR	5610168	Symbol	err		5609803						
ANR	5610169	Symbol	err -> message		5609803						
ANR	5610170	Symbol	m_suspendfile		5609803						
ANR	5610171	Symbol	m_configfile . Length		5609803						
ANR	5610172	Symbol	DIR_DELIM_CHAR		5609803						
ANR	5610173	Symbol	false		5609803						
ANR	5610174	Symbol	D_ALWAYS		5609803						
ANR	5610175	Symbol	VM_STOPPED		5609803						
ANR	5610176	Symbol	virDomainLookupByName		5609803						
ANR	5610177	Symbol	D_FULLDEBUG		5609803						
ANR	5610178	Symbol	set_root_priv		5609803						
ANR	5610179	Symbol	m_vm_name . Value		5609803						
ANR	5610180	Symbol	* err		5609803						
ANR	5610181	Symbol	m_workingpath		5609803						
ANR	5610182	Symbol	m_is_checkpointed		5609803						
ANR	5610183	Symbol	true		5609803						
ANR	5610184	Symbol	time		5609803						
ANR	5610185	Symbol	m_vm_no_output_vm		5609803						
ANR	5610186	Function	VirshType :: Checkpoint	267:0:7444:8602							
ANR	5610187	FunctionDef	VirshType :: Checkpoint ()		5610186	0					
ANR	5610188	CompoundStatement		269:0:7473:8602	5610186	0					
ANR	5610189	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::Checkpoint\\n"" )"	270:1:7476:7531	5610186	0	True				
ANR	5610190	CallExpression	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::Checkpoint\\n"" )"		5610186	0					
ANR	5610191	Callee	vmprintf		5610186	0					
ANR	5610192	Identifier	vmprintf		5610186	0					
ANR	5610193	ArgumentList	D_FULLDEBUG		5610186	1					
ANR	5610194	Argument	D_FULLDEBUG		5610186	0					
ANR	5610195	Identifier	D_FULLDEBUG		5610186	0					
ANR	5610196	Argument	"""Inside VirshType::Checkpoint\\n"""		5610186	1					
ANR	5610197	PrimaryExpression	"""Inside VirshType::Checkpoint\\n"""		5610186	0					
ANR	5610198	IfStatement	if ( ( m_configfile . Length ( ) == 0 ) )		5610186	1					
ANR	5610199	Condition	m_configfile . Length ( ) == 0	272:5:7539:7566	5610186	0	True				
ANR	5610200	EqualityExpression	m_configfile . Length ( ) == 0		5610186	0		==			
ANR	5610201	CallExpression	m_configfile . Length ( )		5610186	0					
ANR	5610202	Callee	m_configfile . Length		5610186	0					
ANR	5610203	MemberAccess	m_configfile . Length		5610186	0					
ANR	5610204	Identifier	m_configfile		5610186	0					
ANR	5610205	Identifier	Length		5610186	1					
ANR	5610206	ArgumentList			5610186	1					
ANR	5610207	PrimaryExpression	0		5610186	1					
ANR	5610208	CompoundStatement		4:35:95:95	5610186	1					
ANR	5610209	ExpressionStatement	m_result_msg = VMGAHP_ERR_INTERNAL	273:2:7573:7607	5610186	0	True				
ANR	5610210	AssignmentExpression	m_result_msg = VMGAHP_ERR_INTERNAL		5610186	0		=			
ANR	5610211	Identifier	m_result_msg		5610186	0					
ANR	5610212	Identifier	VMGAHP_ERR_INTERNAL		5610186	1					
ANR	5610213	ReturnStatement	return false ;	274:2:7611:7623	5610186	1	True				
ANR	5610214	Identifier	false		5610186	0					
ANR	5610215	IfStatement	if ( getVMStatus ( ) == VM_STOPPED )		5610186	2					
ANR	5610216	Condition	getVMStatus ( ) == VM_STOPPED	277:5:7634:7660	5610186	0	True				
ANR	5610217	EqualityExpression	getVMStatus ( ) == VM_STOPPED		5610186	0		==			
ANR	5610218	CallExpression	getVMStatus ( )		5610186	0					
ANR	5610219	Callee	getVMStatus		5610186	0					
ANR	5610220	Identifier	getVMStatus		5610186	0					
ANR	5610221	ArgumentList			5610186	1					
ANR	5610222	Identifier	VM_STOPPED		5610186	1					
ANR	5610223	CompoundStatement		9:35:190:190	5610186	1					
ANR	5610224	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Checkpoint is called for a stopped VM\\n"" )"	278:2:7668:7729	5610186	0	True				
ANR	5610225	CallExpression	"vmprintf ( D_ALWAYS , ""Checkpoint is called for a stopped VM\\n"" )"		5610186	0					
ANR	5610226	Callee	vmprintf		5610186	0					
ANR	5610227	Identifier	vmprintf		5610186	0					
ANR	5610228	ArgumentList	D_ALWAYS		5610186	1					
ANR	5610229	Argument	D_ALWAYS		5610186	0					
ANR	5610230	Identifier	D_ALWAYS		5610186	0					
ANR	5610231	Argument	"""Checkpoint is called for a stopped VM\\n"""		5610186	1					
ANR	5610232	PrimaryExpression	"""Checkpoint is called for a stopped VM\\n"""		5610186	0					
ANR	5610233	ExpressionStatement	m_result_msg = VMGAHP_ERR_VM_INVALID_OPERATION	279:2:7733:7779	5610186	1	True				
ANR	5610234	AssignmentExpression	m_result_msg = VMGAHP_ERR_VM_INVALID_OPERATION		5610186	0		=			
ANR	5610235	Identifier	m_result_msg		5610186	0					
ANR	5610236	Identifier	VMGAHP_ERR_VM_INVALID_OPERATION		5610186	1					
ANR	5610237	ReturnStatement	return false ;	280:2:7783:7795	5610186	2	True				
ANR	5610238	Identifier	false		5610186	0					
ANR	5610239	IfStatement	if ( ! m_vm_checkpoint )		5610186	3					
ANR	5610240	Condition	! m_vm_checkpoint	283:5:7806:7821	5610186	0	True				
ANR	5610241	UnaryOperationExpression	! m_vm_checkpoint		5610186	0					
ANR	5610242	UnaryOperator	!		5610186	0					
ANR	5610243	Identifier	m_vm_checkpoint		5610186	1					
ANR	5610244	CompoundStatement		15:24:351:351	5610186	1					
ANR	5610245	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Checkpoint is not supported.\\n"" )"	284:2:7829:7881	5610186	0	True				
ANR	5610246	CallExpression	"vmprintf ( D_ALWAYS , ""Checkpoint is not supported.\\n"" )"		5610186	0					
ANR	5610247	Callee	vmprintf		5610186	0					
ANR	5610248	Identifier	vmprintf		5610186	0					
ANR	5610249	ArgumentList	D_ALWAYS		5610186	1					
ANR	5610250	Argument	D_ALWAYS		5610186	0					
ANR	5610251	Identifier	D_ALWAYS		5610186	0					
ANR	5610252	Argument	"""Checkpoint is not supported.\\n"""		5610186	1					
ANR	5610253	PrimaryExpression	"""Checkpoint is not supported.\\n"""		5610186	0					
ANR	5610254	ExpressionStatement	m_result_msg = VMGAHP_ERR_VM_NO_SUPPORT_CHECKPOINT	285:2:7885:7935	5610186	1	True				
ANR	5610255	AssignmentExpression	m_result_msg = VMGAHP_ERR_VM_NO_SUPPORT_CHECKPOINT		5610186	0		=			
ANR	5610256	Identifier	m_result_msg		5610186	0					
ANR	5610257	Identifier	VMGAHP_ERR_VM_NO_SUPPORT_CHECKPOINT		5610186	1					
ANR	5610258	ReturnStatement	return false ;	286:2:7939:7951	5610186	2	True				
ANR	5610259	Identifier	false		5610186	0					
ANR	5610260	IfStatement	if ( m_xen_hw_vt && ! m_allow_hw_vt_suspend )		5610186	4					
ANR	5610261	Condition	m_xen_hw_vt && ! m_allow_hw_vt_suspend	289:5:7962:7998	5610186	0	True				
ANR	5610262	AndExpression	m_xen_hw_vt && ! m_allow_hw_vt_suspend		5610186	0		&&			
ANR	5610263	Identifier	m_xen_hw_vt		5610186	0					
ANR	5610264	UnaryOperationExpression	! m_allow_hw_vt_suspend		5610186	1					
ANR	5610265	UnaryOperator	!		5610186	0					
ANR	5610266	Identifier	m_allow_hw_vt_suspend		5610186	1					
ANR	5610267	CompoundStatement		21:45:528:528	5610186	1					
ANR	5610268	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Checkpoint of Hardware VT is not supported.\\n"" )"	293:2:8143:8210	5610186	0	True				
ANR	5610269	CallExpression	"vmprintf ( D_ALWAYS , ""Checkpoint of Hardware VT is not supported.\\n"" )"		5610186	0					
ANR	5610270	Callee	vmprintf		5610186	0					
ANR	5610271	Identifier	vmprintf		5610186	0					
ANR	5610272	ArgumentList	D_ALWAYS		5610186	1					
ANR	5610273	Argument	D_ALWAYS		5610186	0					
ANR	5610274	Identifier	D_ALWAYS		5610186	0					
ANR	5610275	Argument	"""Checkpoint of Hardware VT is not supported.\\n"""		5610186	1					
ANR	5610276	PrimaryExpression	"""Checkpoint of Hardware VT is not supported.\\n"""		5610186	0					
ANR	5610277	ExpressionStatement	m_result_msg = VMGAHP_ERR_VM_NO_SUPPORT_CHECKPOINT	294:2:8214:8264	5610186	1	True				
ANR	5610278	AssignmentExpression	m_result_msg = VMGAHP_ERR_VM_NO_SUPPORT_CHECKPOINT		5610186	0		=			
ANR	5610279	Identifier	m_result_msg		5610186	0					
ANR	5610280	Identifier	VMGAHP_ERR_VM_NO_SUPPORT_CHECKPOINT		5610186	1					
ANR	5610281	ReturnStatement	return false ;	295:2:8268:8280	5610186	2	True				
ANR	5610282	Identifier	false		5610186	0					
ANR	5610283	ExpressionStatement	ResumeFromSoftSuspend ( )	299:1:8334:8357	5610186	5	True				
ANR	5610284	CallExpression	ResumeFromSoftSuspend ( )		5610186	0					
ANR	5610285	Callee	ResumeFromSoftSuspend		5610186	0					
ANR	5610286	Identifier	ResumeFromSoftSuspend		5610186	0					
ANR	5610287	ArgumentList			5610186	1					
ANR	5610288	IfStatement	if ( createCkptFiles ( ) == false )		5610186	6					
ANR	5610289	Condition	createCkptFiles ( ) == false	302:5:8419:8444	5610186	0	True				
ANR	5610290	EqualityExpression	createCkptFiles ( ) == false		5610186	0		==			
ANR	5610291	CallExpression	createCkptFiles ( )		5610186	0					
ANR	5610292	Callee	createCkptFiles		5610186	0					
ANR	5610293	Identifier	createCkptFiles		5610186	0					
ANR	5610294	ArgumentList			5610186	1					
ANR	5610295	Identifier	false		5610186	1					
ANR	5610296	CompoundStatement		34:34:974:974	5610186	1					
ANR	5610297	ExpressionStatement	m_result_msg = VMGAHP_ERR_VM_CANNOT_CREATE_CKPT_FILES	303:2:8452:8505	5610186	0	True				
ANR	5610298	AssignmentExpression	m_result_msg = VMGAHP_ERR_VM_CANNOT_CREATE_CKPT_FILES		5610186	0		=			
ANR	5610299	Identifier	m_result_msg		5610186	0					
ANR	5610300	Identifier	VMGAHP_ERR_VM_CANNOT_CREATE_CKPT_FILES		5610186	1					
ANR	5610301	ExpressionStatement	"vmprintf ( D_ALWAYS , ""failed to create checkpoint files\\n"" )"	304:2:8509:8566	5610186	1	True				
ANR	5610302	CallExpression	"vmprintf ( D_ALWAYS , ""failed to create checkpoint files\\n"" )"		5610186	0					
ANR	5610303	Callee	vmprintf		5610186	0					
ANR	5610304	Identifier	vmprintf		5610186	0					
ANR	5610305	ArgumentList	D_ALWAYS		5610186	1					
ANR	5610306	Argument	D_ALWAYS		5610186	0					
ANR	5610307	Identifier	D_ALWAYS		5610186	0					
ANR	5610308	Argument	"""failed to create checkpoint files\\n"""		5610186	1					
ANR	5610309	PrimaryExpression	"""failed to create checkpoint files\\n"""		5610186	0					
ANR	5610310	ReturnStatement	return false ;	305:2:8570:8582	5610186	2	True				
ANR	5610311	Identifier	false		5610186	0					
ANR	5610312	ReturnStatement	return true ;	308:1:8589:8600	5610186	7	True				
ANR	5610313	Identifier	true		5610186	0					
ANR	5610314	ReturnType	bool		5610186	1					
ANR	5610315	Identifier	VirshType :: Checkpoint		5610186	2					
ANR	5610316	ParameterList			5610186	3					
ANR	5610317	CFGEntryNode	ENTRY		5610186		True				
ANR	5610318	CFGExitNode	EXIT		5610186		True				
ANR	5610319	Symbol	m_result_msg		5610186						
ANR	5610320	Symbol	VMGAHP_ERR_INTERNAL		5610186						
ANR	5610321	Symbol	VMGAHP_ERR_VM_INVALID_OPERATION		5610186						
ANR	5610322	Symbol	m_configfile . Length		5610186						
ANR	5610323	Symbol	false		5610186						
ANR	5610324	Symbol	getVMStatus		5610186						
ANR	5610325	Symbol	D_ALWAYS		5610186						
ANR	5610326	Symbol	m_configfile		5610186						
ANR	5610327	Symbol	VM_STOPPED		5610186						
ANR	5610328	Symbol	D_FULLDEBUG		5610186						
ANR	5610329	Symbol	m_vm_checkpoint		5610186						
ANR	5610330	Symbol	m_allow_hw_vt_suspend		5610186						
ANR	5610331	Symbol	createCkptFiles		5610186						
ANR	5610332	Symbol	m_xen_hw_vt		5610186						
ANR	5610333	Symbol	true		5610186						
ANR	5610334	Symbol	VMGAHP_ERR_VM_NO_SUPPORT_CHECKPOINT		5610186						
ANR	5610335	Symbol	VMGAHP_ERR_VM_CANNOT_CREATE_CKPT_FILES		5610186						
ANR	5610336	Function	VirshType :: CreateVirshConfigFile	314:0:8759:11545							
ANR	5610337	FunctionDef	VirshType :: CreateVirshConfigFile (const char * filename)		5610336	0					
ANR	5610338	CompoundStatement		315:0:8819:11545	5610336	0					
ANR	5610339	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""In VirshType::CreateVirshConfigFile\\n"" )"	316:2:8823:8885	5610336	0	True				
ANR	5610340	CallExpression	"vmprintf ( D_FULLDEBUG , ""In VirshType::CreateVirshConfigFile\\n"" )"		5610336	0					
ANR	5610341	Callee	vmprintf		5610336	0					
ANR	5610342	Identifier	vmprintf		5610336	0					
ANR	5610343	ArgumentList	D_FULLDEBUG		5610336	1					
ANR	5610344	Argument	D_FULLDEBUG		5610336	0					
ANR	5610345	Identifier	D_FULLDEBUG		5610336	0					
ANR	5610346	Argument	"""In VirshType::CreateVirshConfigFile\\n"""		5610336	1					
ANR	5610347	PrimaryExpression	"""In VirshType::CreateVirshConfigFile\\n"""		5610336	0					
ANR	5610348	IdentifierDeclStatement	"char * tmp = param ( ""LIBVIRT_XML_SCRIPT"" ) ;"	318:2:8913:8953	5610336	1	True				
ANR	5610349	IdentifierDecl	"* tmp = param ( ""LIBVIRT_XML_SCRIPT"" )"		5610336	0					
ANR	5610350	IdentifierDeclType	char *		5610336	0					
ANR	5610351	Identifier	tmp		5610336	1					
ANR	5610352	AssignmentExpression	"* tmp = param ( ""LIBVIRT_XML_SCRIPT"" )"		5610336	2		=			
ANR	5610353	Identifier	tmp		5610336	0					
ANR	5610354	CallExpression	"param ( ""LIBVIRT_XML_SCRIPT"" )"		5610336	1					
ANR	5610355	Callee	param		5610336	0					
ANR	5610356	Identifier	param		5610336	0					
ANR	5610357	ArgumentList	"""LIBVIRT_XML_SCRIPT"""		5610336	1					
ANR	5610358	Argument	"""LIBVIRT_XML_SCRIPT"""		5610336	0					
ANR	5610359	PrimaryExpression	"""LIBVIRT_XML_SCRIPT"""		5610336	0					
ANR	5610360	IfStatement	if ( tmp == NULL )		5610336	2					
ANR	5610361	Condition	tmp == NULL	319:5:8960:8970	5610336	0	True				
ANR	5610362	EqualityExpression	tmp == NULL		5610336	0		==			
ANR	5610363	Identifier	tmp		5610336	0					
ANR	5610364	Identifier	NULL		5610336	1					
ANR	5610365	CompoundStatement		6:4:157:157	5610336	1					
ANR	5610366	ExpressionStatement	"vmprintf ( D_ALWAYS , ""LIBVIRT_XML_SCRIPT not defined\\n"" )"	321:6:8985:9039	5610336	0	True				
ANR	5610367	CallExpression	"vmprintf ( D_ALWAYS , ""LIBVIRT_XML_SCRIPT not defined\\n"" )"		5610336	0					
ANR	5610368	Callee	vmprintf		5610336	0					
ANR	5610369	Identifier	vmprintf		5610336	0					
ANR	5610370	ArgumentList	D_ALWAYS		5610336	1					
ANR	5610371	Argument	D_ALWAYS		5610336	0					
ANR	5610372	Identifier	D_ALWAYS		5610336	0					
ANR	5610373	Argument	"""LIBVIRT_XML_SCRIPT not defined\\n"""		5610336	1					
ANR	5610374	PrimaryExpression	"""LIBVIRT_XML_SCRIPT not defined\\n"""		5610336	0					
ANR	5610375	ReturnStatement	return false ;	322:6:9047:9059	5610336	1	True				
ANR	5610376	Identifier	false		5610336	0					
ANR	5610377	IdentifierDeclStatement	ArgList args ;	325:2:9107:9119	5610336	3	True				
ANR	5610378	IdentifierDecl	args		5610336	0					
ANR	5610379	IdentifierDeclType	ArgList		5610336	0					
ANR	5610380	Identifier	args		5610336	1					
ANR	5610381	ExpressionStatement	args . AppendArg ( tmp )	326:2:9123:9142	5610336	4	True				
ANR	5610382	CallExpression	args . AppendArg ( tmp )		5610336	0					
ANR	5610383	Callee	args . AppendArg		5610336	0					
ANR	5610384	MemberAccess	args . AppendArg		5610336	0					
ANR	5610385	Identifier	args		5610336	0					
ANR	5610386	Identifier	AppendArg		5610336	1					
ANR	5610387	ArgumentList	tmp		5610336	1					
ANR	5610388	Argument	tmp		5610336	0					
ANR	5610389	Identifier	tmp		5610336	0					
ANR	5610390	ExpressionStatement	free ( tmp )	327:2:9146:9155	5610336	5	True				
ANR	5610391	CallExpression	free ( tmp )		5610336	0					
ANR	5610392	Callee	free		5610336	0					
ANR	5610393	Identifier	free		5610336	0					
ANR	5610394	ArgumentList	tmp		5610336	1					
ANR	5610395	Argument	tmp		5610336	0					
ANR	5610396	Identifier	tmp		5610336	0					
ANR	5610397	ExpressionStatement	"tmp = param ( ""LIBVIRT_XML_SCRIPT_ARGS"" )"	334:2:9445:9483	5610336	6	True				
ANR	5610398	AssignmentExpression	"tmp = param ( ""LIBVIRT_XML_SCRIPT_ARGS"" )"		5610336	0		=			
ANR	5610399	Identifier	tmp		5610336	0					
ANR	5610400	CallExpression	"param ( ""LIBVIRT_XML_SCRIPT_ARGS"" )"		5610336	1					
ANR	5610401	Callee	param		5610336	0					
ANR	5610402	Identifier	param		5610336	0					
ANR	5610403	ArgumentList	"""LIBVIRT_XML_SCRIPT_ARGS"""		5610336	1					
ANR	5610404	Argument	"""LIBVIRT_XML_SCRIPT_ARGS"""		5610336	0					
ANR	5610405	PrimaryExpression	"""LIBVIRT_XML_SCRIPT_ARGS"""		5610336	0					
ANR	5610406	IfStatement	if ( tmp != NULL )		5610336	7					
ANR	5610407	Condition	tmp != NULL	335:5:9490:9500	5610336	0	True				
ANR	5610408	EqualityExpression	tmp != NULL		5610336	0		!=			
ANR	5610409	Identifier	tmp		5610336	0					
ANR	5610410	Identifier	NULL		5610336	1					
ANR	5610411	CompoundStatement		23:6:695:712	5610336	1					
ANR	5610412	IdentifierDeclStatement	MyString errormsg ;	337:6:9515:9532	5610336	0	True				
ANR	5610413	IdentifierDecl	errormsg		5610336	0					
ANR	5610414	IdentifierDeclType	MyString		5610336	0					
ANR	5610415	Identifier	errormsg		5610336	1					
ANR	5610416	ExpressionStatement	"args . AppendArgsV1RawOrV2Quoted ( tmp , & errormsg )"	338:6:9540:9585	5610336	1	True				
ANR	5610417	CallExpression	"args . AppendArgsV1RawOrV2Quoted ( tmp , & errormsg )"		5610336	0					
ANR	5610418	Callee	args . AppendArgsV1RawOrV2Quoted		5610336	0					
ANR	5610419	MemberAccess	args . AppendArgsV1RawOrV2Quoted		5610336	0					
ANR	5610420	Identifier	args		5610336	0					
ANR	5610421	Identifier	AppendArgsV1RawOrV2Quoted		5610336	1					
ANR	5610422	ArgumentList	tmp		5610336	1					
ANR	5610423	Argument	tmp		5610336	0					
ANR	5610424	Identifier	tmp		5610336	0					
ANR	5610425	Argument	& errormsg		5610336	1					
ANR	5610426	UnaryOperationExpression	& errormsg		5610336	0					
ANR	5610427	UnaryOperator	&		5610336	0					
ANR	5610428	Identifier	errormsg		5610336	1					
ANR	5610429	ExpressionStatement	free ( tmp )	339:6:9593:9602	5610336	2	True				
ANR	5610430	CallExpression	free ( tmp )		5610336	0					
ANR	5610431	Callee	free		5610336	0					
ANR	5610432	Identifier	free		5610336	0					
ANR	5610433	ArgumentList	tmp		5610336	1					
ANR	5610434	Argument	tmp		5610336	0					
ANR	5610435	Identifier	tmp		5610336	0					
ANR	5610436	IdentifierDeclStatement	"StringList input_strings , output_strings , error_strings ;"	341:2:9612:9667	5610336	8	True				
ANR	5610437	IdentifierDecl	input_strings		5610336	0					
ANR	5610438	IdentifierDeclType	StringList		5610336	0					
ANR	5610439	Identifier	input_strings		5610336	1					
ANR	5610440	IdentifierDecl	output_strings		5610336	1					
ANR	5610441	IdentifierDeclType	StringList		5610336	0					
ANR	5610442	Identifier	output_strings		5610336	1					
ANR	5610443	IdentifierDecl	error_strings		5610336	2					
ANR	5610444	IdentifierDeclType	StringList		5610336	0					
ANR	5610445	Identifier	error_strings		5610336	1					
ANR	5610446	IdentifierDeclStatement	MyString classad_string ;	342:2:9671:9694	5610336	9	True				
ANR	5610447	IdentifierDecl	classad_string		5610336	0					
ANR	5610448	IdentifierDeclType	MyString		5610336	0					
ANR	5610449	Identifier	classad_string		5610336	1					
ANR	5610450	ExpressionStatement	m_classAd . sPrint ( classad_string )	343:2:9698:9730	5610336	10	True				
ANR	5610451	CallExpression	m_classAd . sPrint ( classad_string )		5610336	0					
ANR	5610452	Callee	m_classAd . sPrint		5610336	0					
ANR	5610453	MemberAccess	m_classAd . sPrint		5610336	0					
ANR	5610454	Identifier	m_classAd		5610336	0					
ANR	5610455	Identifier	sPrint		5610336	1					
ANR	5610456	ArgumentList	classad_string		5610336	1					
ANR	5610457	Argument	classad_string		5610336	0					
ANR	5610458	Identifier	classad_string		5610336	0					
ANR	5610459	ExpressionStatement	classad_string += VMPARAM_XEN_BOOTLOADER	344:2:9734:9774	5610336	11	True				
ANR	5610460	AssignmentExpression	classad_string += VMPARAM_XEN_BOOTLOADER		5610336	0		+=			
ANR	5610461	Identifier	classad_string		5610336	0					
ANR	5610462	Identifier	VMPARAM_XEN_BOOTLOADER		5610336	1					
ANR	5610463	ExpressionStatement	"classad_string += "" = \\"""""	345:2:9778:9803	5610336	12	True				
ANR	5610464	AssignmentExpression	"classad_string += "" = \\"""""		5610336	0		+=			
ANR	5610465	Identifier	classad_string		5610336	0					
ANR	5610466	PrimaryExpression	""" = \\"""""		5610336	1					
ANR	5610467	ExpressionStatement	classad_string += m_xen_bootloader	346:2:9807:9841	5610336	13	True				
ANR	5610468	AssignmentExpression	classad_string += m_xen_bootloader		5610336	0		+=			
ANR	5610469	Identifier	classad_string		5610336	0					
ANR	5610470	Identifier	m_xen_bootloader		5610336	1					
ANR	5610471	ExpressionStatement	"classad_string += ""\\""\\n"""	347:2:9845:9869	5610336	14	True				
ANR	5610472	AssignmentExpression	"classad_string += ""\\""\\n"""		5610336	0		+=			
ANR	5610473	Identifier	classad_string		5610336	0					
ANR	5610474	PrimaryExpression	"""\\""\\n"""		5610336	1					
ANR	5610475	IfStatement	if ( classad_string . find ( VMPARAM_XEN_INITRD ) < 1 )		5610336	15					
ANR	5610476	Condition	classad_string . find ( VMPARAM_XEN_INITRD ) < 1	348:5:9876:9918	5610336	0	True				
ANR	5610477	RelationalExpression	classad_string . find ( VMPARAM_XEN_INITRD ) < 1		5610336	0		<			
ANR	5610478	CallExpression	classad_string . find ( VMPARAM_XEN_INITRD )		5610336	0					
ANR	5610479	Callee	classad_string . find		5610336	0					
ANR	5610480	MemberAccess	classad_string . find		5610336	0					
ANR	5610481	Identifier	classad_string		5610336	0					
ANR	5610482	Identifier	find		5610336	1					
ANR	5610483	ArgumentList	VMPARAM_XEN_INITRD		5610336	1					
ANR	5610484	Argument	VMPARAM_XEN_INITRD		5610336	0					
ANR	5610485	Identifier	VMPARAM_XEN_INITRD		5610336	0					
ANR	5610486	PrimaryExpression	1		5610336	1					
ANR	5610487	CompoundStatement		35:4:1105:1105	5610336	1					
ANR	5610488	ExpressionStatement	classad_string += VMPARAM_XEN_INITRD	350:6:9933:9969	5610336	0	True				
ANR	5610489	AssignmentExpression	classad_string += VMPARAM_XEN_INITRD		5610336	0		+=			
ANR	5610490	Identifier	classad_string		5610336	0					
ANR	5610491	Identifier	VMPARAM_XEN_INITRD		5610336	1					
ANR	5610492	ExpressionStatement	"classad_string += "" = \\"""""	351:6:9977:10002	5610336	1	True				
ANR	5610493	AssignmentExpression	"classad_string += "" = \\"""""		5610336	0		+=			
ANR	5610494	Identifier	classad_string		5610336	0					
ANR	5610495	PrimaryExpression	""" = \\"""""		5610336	1					
ANR	5610496	ExpressionStatement	classad_string += m_xen_initrd_file	352:6:10010:10045	5610336	2	True				
ANR	5610497	AssignmentExpression	classad_string += m_xen_initrd_file		5610336	0		+=			
ANR	5610498	Identifier	classad_string		5610336	0					
ANR	5610499	Identifier	m_xen_initrd_file		5610336	1					
ANR	5610500	ExpressionStatement	"classad_string += ""\\""\\n"""	353:6:10053:10077	5610336	3	True				
ANR	5610501	AssignmentExpression	"classad_string += ""\\""\\n"""		5610336	0		+=			
ANR	5610502	Identifier	classad_string		5610336	0					
ANR	5610503	PrimaryExpression	"""\\""\\n"""		5610336	1					
ANR	5610504	IfStatement	if ( ! m_vm_bridge_interface . empty ( ) )		5610336	16					
ANR	5610505	Condition	! m_vm_bridge_interface . empty ( )	355:5:10090:10119	5610336	0	True				
ANR	5610506	UnaryOperationExpression	! m_vm_bridge_interface . empty ( )		5610336	0					
ANR	5610507	UnaryOperator	!		5610336	0					
ANR	5610508	CallExpression	m_vm_bridge_interface . empty ( )		5610336	1					
ANR	5610509	Callee	m_vm_bridge_interface . empty		5610336	0					
ANR	5610510	MemberAccess	m_vm_bridge_interface . empty		5610336	0					
ANR	5610511	Identifier	m_vm_bridge_interface		5610336	0					
ANR	5610512	Identifier	empty		5610336	1					
ANR	5610513	ArgumentList			5610336	1					
ANR	5610514	CompoundStatement		42:4:1306:1306	5610336	1					
ANR	5610515	ExpressionStatement	classad_string += VMPARAM_BRIDGE_INTERFACE	357:6:10134:10176	5610336	0	True				
ANR	5610516	AssignmentExpression	classad_string += VMPARAM_BRIDGE_INTERFACE		5610336	0		+=			
ANR	5610517	Identifier	classad_string		5610336	0					
ANR	5610518	Identifier	VMPARAM_BRIDGE_INTERFACE		5610336	1					
ANR	5610519	ExpressionStatement	"classad_string += "" = \\"""""	358:6:10184:10209	5610336	1	True				
ANR	5610520	AssignmentExpression	"classad_string += "" = \\"""""		5610336	0		+=			
ANR	5610521	Identifier	classad_string		5610336	0					
ANR	5610522	PrimaryExpression	""" = \\"""""		5610336	1					
ANR	5610523	ExpressionStatement	classad_string += m_vm_bridge_interface . c_str ( )	359:6:10217:10264	5610336	2	True				
ANR	5610524	AssignmentExpression	classad_string += m_vm_bridge_interface . c_str ( )		5610336	0		+=			
ANR	5610525	Identifier	classad_string		5610336	0					
ANR	5610526	CallExpression	m_vm_bridge_interface . c_str ( )		5610336	1					
ANR	5610527	Callee	m_vm_bridge_interface . c_str		5610336	0					
ANR	5610528	MemberAccess	m_vm_bridge_interface . c_str		5610336	0					
ANR	5610529	Identifier	m_vm_bridge_interface		5610336	0					
ANR	5610530	Identifier	c_str		5610336	1					
ANR	5610531	ArgumentList			5610336	1					
ANR	5610532	ExpressionStatement	"classad_string += ""\\""\\n"""	360:6:10272:10296	5610336	3	True				
ANR	5610533	AssignmentExpression	"classad_string += ""\\""\\n"""		5610336	0		+=			
ANR	5610534	Identifier	classad_string		5610336	0					
ANR	5610535	PrimaryExpression	"""\\""\\n"""		5610336	1					
ANR	5610536	IfStatement	if ( classad_string . find ( ATTR_JOB_VM_NETWORKING_TYPE ) < 1 )		5610336	17					
ANR	5610537	Condition	classad_string . find ( ATTR_JOB_VM_NETWORKING_TYPE ) < 1	362:5:10309:10360	5610336	0	True				
ANR	5610538	RelationalExpression	classad_string . find ( ATTR_JOB_VM_NETWORKING_TYPE ) < 1		5610336	0		<			
ANR	5610539	CallExpression	classad_string . find ( ATTR_JOB_VM_NETWORKING_TYPE )		5610336	0					
ANR	5610540	Callee	classad_string . find		5610336	0					
ANR	5610541	MemberAccess	classad_string . find		5610336	0					
ANR	5610542	Identifier	classad_string		5610336	0					
ANR	5610543	Identifier	find		5610336	1					
ANR	5610544	ArgumentList	ATTR_JOB_VM_NETWORKING_TYPE		5610336	1					
ANR	5610545	Argument	ATTR_JOB_VM_NETWORKING_TYPE		5610336	0					
ANR	5610546	Identifier	ATTR_JOB_VM_NETWORKING_TYPE		5610336	0					
ANR	5610547	PrimaryExpression	1		5610336	1					
ANR	5610548	CompoundStatement		49:4:1547:1547	5610336	1					
ANR	5610549	ExpressionStatement	classad_string += ATTR_JOB_VM_NETWORKING_TYPE	364:6:10375:10420	5610336	0	True				
ANR	5610550	AssignmentExpression	classad_string += ATTR_JOB_VM_NETWORKING_TYPE		5610336	0		+=			
ANR	5610551	Identifier	classad_string		5610336	0					
ANR	5610552	Identifier	ATTR_JOB_VM_NETWORKING_TYPE		5610336	1					
ANR	5610553	ExpressionStatement	"classad_string += "" = \\"""""	365:6:10428:10453	5610336	1	True				
ANR	5610554	AssignmentExpression	"classad_string += "" = \\"""""		5610336	0		+=			
ANR	5610555	Identifier	classad_string		5610336	0					
ANR	5610556	PrimaryExpression	""" = \\"""""		5610336	1					
ANR	5610557	ExpressionStatement	classad_string += m_vm_networking_type . Value ( )	366:6:10461:10507	5610336	2	True				
ANR	5610558	AssignmentExpression	classad_string += m_vm_networking_type . Value ( )		5610336	0		+=			
ANR	5610559	Identifier	classad_string		5610336	0					
ANR	5610560	CallExpression	m_vm_networking_type . Value ( )		5610336	1					
ANR	5610561	Callee	m_vm_networking_type . Value		5610336	0					
ANR	5610562	MemberAccess	m_vm_networking_type . Value		5610336	0					
ANR	5610563	Identifier	m_vm_networking_type		5610336	0					
ANR	5610564	Identifier	Value		5610336	1					
ANR	5610565	ArgumentList			5610336	1					
ANR	5610566	ExpressionStatement	"classad_string += ""\\""\\n"""	367:6:10515:10539	5610336	3	True				
ANR	5610567	AssignmentExpression	"classad_string += ""\\""\\n"""		5610336	0		+=			
ANR	5610568	Identifier	classad_string		5610336	0					
ANR	5610569	PrimaryExpression	"""\\""\\n"""		5610336	1					
ANR	5610570	ExpressionStatement	input_strings . append ( classad_string . Value ( ) )	369:2:10549:10593	5610336	18	True				
ANR	5610571	CallExpression	input_strings . append ( classad_string . Value ( ) )		5610336	0					
ANR	5610572	Callee	input_strings . append		5610336	0					
ANR	5610573	MemberAccess	input_strings . append		5610336	0					
ANR	5610574	Identifier	input_strings		5610336	0					
ANR	5610575	Identifier	append		5610336	1					
ANR	5610576	ArgumentList	classad_string . Value ( )		5610336	1					
ANR	5610577	Argument	classad_string . Value ( )		5610336	0					
ANR	5610578	CallExpression	classad_string . Value ( )		5610336	0					
ANR	5610579	Callee	classad_string . Value		5610336	0					
ANR	5610580	MemberAccess	classad_string . Value		5610336	0					
ANR	5610581	Identifier	classad_string		5610336	0					
ANR	5610582	Identifier	Value		5610336	1					
ANR	5610583	ArgumentList			5610336	1					
ANR	5610584	ExpressionStatement	tmp = input_strings . print_to_string ( )	371:2:10600:10637	5610336	19	True				
ANR	5610585	AssignmentExpression	tmp = input_strings . print_to_string ( )		5610336	0		=			
ANR	5610586	Identifier	tmp		5610336	0					
ANR	5610587	CallExpression	input_strings . print_to_string ( )		5610336	1					
ANR	5610588	Callee	input_strings . print_to_string		5610336	0					
ANR	5610589	MemberAccess	input_strings . print_to_string		5610336	0					
ANR	5610590	Identifier	input_strings		5610336	0					
ANR	5610591	Identifier	print_to_string		5610336	1					
ANR	5610592	ArgumentList			5610336	1					
ANR	5610593	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""LIBVIRT_XML_SCRIPT_ARGS input_strings= %s\\n"" , tmp )"	372:2:10641:10714	5610336	20	True				
ANR	5610594	CallExpression	"vmprintf ( D_FULLDEBUG , ""LIBVIRT_XML_SCRIPT_ARGS input_strings= %s\\n"" , tmp )"		5610336	0					
ANR	5610595	Callee	vmprintf		5610336	0					
ANR	5610596	Identifier	vmprintf		5610336	0					
ANR	5610597	ArgumentList	D_FULLDEBUG		5610336	1					
ANR	5610598	Argument	D_FULLDEBUG		5610336	0					
ANR	5610599	Identifier	D_FULLDEBUG		5610336	0					
ANR	5610600	Argument	"""LIBVIRT_XML_SCRIPT_ARGS input_strings= %s\\n"""		5610336	1					
ANR	5610601	PrimaryExpression	"""LIBVIRT_XML_SCRIPT_ARGS input_strings= %s\\n"""		5610336	0					
ANR	5610602	Argument	tmp		5610336	2					
ANR	5610603	Identifier	tmp		5610336	0					
ANR	5610604	ExpressionStatement	free ( tmp )	373:2:10718:10727	5610336	21	True				
ANR	5610605	CallExpression	free ( tmp )		5610336	0					
ANR	5610606	Callee	free		5610336	0					
ANR	5610607	Identifier	free		5610336	0					
ANR	5610608	ArgumentList	tmp		5610336	1					
ANR	5610609	Argument	tmp		5610336	0					
ANR	5610610	Identifier	tmp		5610336	0					
ANR	5610611	IdentifierDeclStatement	"int ret = systemCommand ( args , PRIV_ROOT , & output_strings , & input_strings , & error_strings , false ) ;"	375:2:10732:10828	5610336	22	True				
ANR	5610612	IdentifierDecl	"ret = systemCommand ( args , PRIV_ROOT , & output_strings , & input_strings , & error_strings , false )"		5610336	0					
ANR	5610613	IdentifierDeclType	int		5610336	0					
ANR	5610614	Identifier	ret		5610336	1					
ANR	5610615	AssignmentExpression	"ret = systemCommand ( args , PRIV_ROOT , & output_strings , & input_strings , & error_strings , false )"		5610336	2		=			
ANR	5610616	Identifier	ret		5610336	0					
ANR	5610617	CallExpression	"systemCommand ( args , PRIV_ROOT , & output_strings , & input_strings , & error_strings , false )"		5610336	1					
ANR	5610618	Callee	systemCommand		5610336	0					
ANR	5610619	Identifier	systemCommand		5610336	0					
ANR	5610620	ArgumentList	args		5610336	1					
ANR	5610621	Argument	args		5610336	0					
ANR	5610622	Identifier	args		5610336	0					
ANR	5610623	Argument	PRIV_ROOT		5610336	1					
ANR	5610624	Identifier	PRIV_ROOT		5610336	0					
ANR	5610625	Argument	& output_strings		5610336	2					
ANR	5610626	UnaryOperationExpression	& output_strings		5610336	0					
ANR	5610627	UnaryOperator	&		5610336	0					
ANR	5610628	Identifier	output_strings		5610336	1					
ANR	5610629	Argument	& input_strings		5610336	3					
ANR	5610630	UnaryOperationExpression	& input_strings		5610336	0					
ANR	5610631	UnaryOperator	&		5610336	0					
ANR	5610632	Identifier	input_strings		5610336	1					
ANR	5610633	Argument	& error_strings		5610336	4					
ANR	5610634	UnaryOperationExpression	& error_strings		5610336	0					
ANR	5610635	UnaryOperator	&		5610336	0					
ANR	5610636	Identifier	error_strings		5610336	1					
ANR	5610637	Argument	false		5610336	5					
ANR	5610638	Identifier	false		5610336	0					
ANR	5610639	ExpressionStatement	error_strings . rewind ( )	376:2:10832:10854	5610336	23	True				
ANR	5610640	CallExpression	error_strings . rewind ( )		5610336	0					
ANR	5610641	Callee	error_strings . rewind		5610336	0					
ANR	5610642	MemberAccess	error_strings . rewind		5610336	0					
ANR	5610643	Identifier	error_strings		5610336	0					
ANR	5610644	Identifier	rewind		5610336	1					
ANR	5610645	ArgumentList			5610336	1					
ANR	5610646	IfStatement	if ( ret != 0 )		5610336	24					
ANR	5610647	Condition	ret != 0	377:5:10861:10868	5610336	0	True				
ANR	5610648	EqualityExpression	ret != 0		5610336	0		!=			
ANR	5610649	Identifier	ret		5610336	0					
ANR	5610650	PrimaryExpression	0		5610336	1					
ANR	5610651	CompoundStatement		64:4:2055:2055	5610336	1					
ANR	5610652	ExpressionStatement	"vmprintf ( D_ALWAYS , ""XML helper script could not be executed\\n"" )"	379:6:10883:10946	5610336	0	True				
ANR	5610653	CallExpression	"vmprintf ( D_ALWAYS , ""XML helper script could not be executed\\n"" )"		5610336	0					
ANR	5610654	Callee	vmprintf		5610336	0					
ANR	5610655	Identifier	vmprintf		5610336	0					
ANR	5610656	ArgumentList	D_ALWAYS		5610336	1					
ANR	5610657	Argument	D_ALWAYS		5610336	0					
ANR	5610658	Identifier	D_ALWAYS		5610336	0					
ANR	5610659	Argument	"""XML helper script could not be executed\\n"""		5610336	1					
ANR	5610660	PrimaryExpression	"""XML helper script could not be executed\\n"""		5610336	0					
ANR	5610661	ExpressionStatement	output_strings . rewind ( )	380:6:10954:10977	5610336	1	True				
ANR	5610662	CallExpression	output_strings . rewind ( )		5610336	0					
ANR	5610663	Callee	output_strings . rewind		5610336	0					
ANR	5610664	MemberAccess	output_strings . rewind		5610336	0					
ANR	5610665	Identifier	output_strings		5610336	0					
ANR	5610666	Identifier	rewind		5610336	1					
ANR	5610667	ArgumentList			5610336	1					
ANR	5610668	WhileStatement	while ( ( tmp = error_strings . next ( ) ) != NULL )		5610336	2					
ANR	5610669	Condition	( tmp = error_strings . next ( ) ) != NULL	384:12:11148:11183	5610336	0	True				
ANR	5610670	EqualityExpression	( tmp = error_strings . next ( ) ) != NULL		5610336	0		!=			
ANR	5610671	AssignmentExpression	tmp = error_strings . next ( )		5610336	0		=			
ANR	5610672	Identifier	tmp		5610336	0					
ANR	5610673	CallExpression	error_strings . next ( )		5610336	1					
ANR	5610674	Callee	error_strings . next		5610336	0					
ANR	5610675	MemberAccess	error_strings . next		5610336	0					
ANR	5610676	Identifier	error_strings		5610336	0					
ANR	5610677	Identifier	next		5610336	1					
ANR	5610678	ArgumentList			5610336	1					
ANR	5610679	Identifier	NULL		5610336	1					
ANR	5610680	CompoundStatement		71:1:2367:2367	5610336	1					
ANR	5610681	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""Helper stderr output: %s\\n"" , tmp )"	386:3:11192:11248	5610336	0	True				
ANR	5610682	CallExpression	"vmprintf ( D_FULLDEBUG , ""Helper stderr output: %s\\n"" , tmp )"		5610336	0					
ANR	5610683	Callee	vmprintf		5610336	0					
ANR	5610684	Identifier	vmprintf		5610336	0					
ANR	5610685	ArgumentList	D_FULLDEBUG		5610336	1					
ANR	5610686	Argument	D_FULLDEBUG		5610336	0					
ANR	5610687	Identifier	D_FULLDEBUG		5610336	0					
ANR	5610688	Argument	"""Helper stderr output: %s\\n"""		5610336	1					
ANR	5610689	PrimaryExpression	"""Helper stderr output: %s\\n"""		5610336	0					
ANR	5610690	Argument	tmp		5610336	2					
ANR	5610691	Identifier	tmp		5610336	0					
ANR	5610692	ReturnStatement	return false ;	388:6:11259:11271	5610336	3	True				
ANR	5610693	Identifier	false		5610336	0					
ANR	5610694	ExpressionStatement	error_strings . rewind ( )	390:2:11281:11303	5610336	25	True				
ANR	5610695	CallExpression	error_strings . rewind ( )		5610336	0					
ANR	5610696	Callee	error_strings . rewind		5610336	0					
ANR	5610697	MemberAccess	error_strings . rewind		5610336	0					
ANR	5610698	Identifier	error_strings		5610336	0					
ANR	5610699	Identifier	rewind		5610336	1					
ANR	5610700	ArgumentList			5610336	1					
ANR	5610701	WhileStatement	while ( ( tmp = error_strings . next ( ) ) != NULL )		5610336	26					
ANR	5610702	Condition	( tmp = error_strings . next ( ) ) != NULL	391:8:11313:11348	5610336	0	True				
ANR	5610703	EqualityExpression	( tmp = error_strings . next ( ) ) != NULL		5610336	0		!=			
ANR	5610704	AssignmentExpression	tmp = error_strings . next ( )		5610336	0		=			
ANR	5610705	Identifier	tmp		5610336	0					
ANR	5610706	CallExpression	error_strings . next ( )		5610336	1					
ANR	5610707	Callee	error_strings . next		5610336	0					
ANR	5610708	MemberAccess	error_strings . next		5610336	0					
ANR	5610709	Identifier	error_strings		5610336	0					
ANR	5610710	Identifier	next		5610336	1					
ANR	5610711	ArgumentList			5610336	1					
ANR	5610712	Identifier	NULL		5610336	1					
ANR	5610713	CompoundStatement		78:4:2535:2535	5610336	1					
ANR	5610714	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Helper stderr output: %s\\n"" , tmp )"	393:6:11363:11416	5610336	0	True				
ANR	5610715	CallExpression	"vmprintf ( D_ALWAYS , ""Helper stderr output: %s\\n"" , tmp )"		5610336	0					
ANR	5610716	Callee	vmprintf		5610336	0					
ANR	5610717	Identifier	vmprintf		5610336	0					
ANR	5610718	ArgumentList	D_ALWAYS		5610336	1					
ANR	5610719	Argument	D_ALWAYS		5610336	0					
ANR	5610720	Identifier	D_ALWAYS		5610336	0					
ANR	5610721	Argument	"""Helper stderr output: %s\\n"""		5610336	1					
ANR	5610722	PrimaryExpression	"""Helper stderr output: %s\\n"""		5610336	0					
ANR	5610723	Argument	tmp		5610336	2					
ANR	5610724	Identifier	tmp		5610336	0					
ANR	5610725	ExpressionStatement	output_strings . rewind ( )	395:2:11426:11449	5610336	27	True				
ANR	5610726	CallExpression	output_strings . rewind ( )		5610336	0					
ANR	5610727	Callee	output_strings . rewind		5610336	0					
ANR	5610728	MemberAccess	output_strings . rewind		5610336	0					
ANR	5610729	Identifier	output_strings		5610336	0					
ANR	5610730	Identifier	rewind		5610336	1					
ANR	5610731	ArgumentList			5610336	1					
ANR	5610732	WhileStatement	while ( ( tmp = output_strings . next ( ) ) != NULL )		5610336	28					
ANR	5610733	Condition	( tmp = output_strings . next ( ) ) != NULL	396:8:11459:11495	5610336	0	True				
ANR	5610734	EqualityExpression	( tmp = output_strings . next ( ) ) != NULL		5610336	0		!=			
ANR	5610735	AssignmentExpression	tmp = output_strings . next ( )		5610336	0		=			
ANR	5610736	Identifier	tmp		5610336	0					
ANR	5610737	CallExpression	output_strings . next ( )		5610336	1					
ANR	5610738	Callee	output_strings . next		5610336	0					
ANR	5610739	MemberAccess	output_strings . next		5610336	0					
ANR	5610740	Identifier	output_strings		5610336	0					
ANR	5610741	Identifier	next		5610336	1					
ANR	5610742	ArgumentList			5610336	1					
ANR	5610743	Identifier	NULL		5610336	1					
ANR	5610744	CompoundStatement		83:4:2682:2682	5610336	1					
ANR	5610745	ExpressionStatement	m_xml += tmp	398:6:11510:11522	5610336	0	True				
ANR	5610746	AssignmentExpression	m_xml += tmp		5610336	0		+=			
ANR	5610747	Identifier	m_xml		5610336	0					
ANR	5610748	Identifier	tmp		5610336	1					
ANR	5610749	ReturnStatement	return true ;	400:2:11532:11543	5610336	29	True				
ANR	5610750	Identifier	true		5610336	0					
ANR	5610751	ReturnType	bool		5610336	1					
ANR	5610752	Identifier	VirshType :: CreateVirshConfigFile		5610336	2					
ANR	5610753	ParameterList	const char * filename		5610336	3					
ANR	5610754	Parameter	const char * filename	314:38:8797:8816	5610336	0	True				
ANR	5610755	ParameterType	const char *		5610336	0					
ANR	5610756	Identifier	filename		5610336	1					
ANR	5610757	CFGEntryNode	ENTRY		5610336		True				
ANR	5610758	CFGExitNode	EXIT		5610336		True				
ANR	5610759	Symbol	m_xen_bootloader		5610336						
ANR	5610760	Symbol	m_vm_bridge_interface		5610336						
ANR	5610761	Symbol	classad_string . Value		5610336						
ANR	5610762	Symbol	error_strings . next		5610336						
ANR	5610763	Symbol	systemCommand		5610336						
ANR	5610764	Symbol	classad_string		5610336						
ANR	5610765	Symbol	errormsg		5610336						
ANR	5610766	Symbol	VMPARAM_BRIDGE_INTERFACE		5610336						
ANR	5610767	Symbol	classad_string . find		5610336						
ANR	5610768	Symbol	param		5610336						
ANR	5610769	Symbol	tmp		5610336						
ANR	5610770	Symbol	output_strings		5610336						
ANR	5610771	Symbol	error_strings		5610336						
ANR	5610772	Symbol	input_strings		5610336						
ANR	5610773	Symbol	& errormsg		5610336						
ANR	5610774	Symbol	& output_strings		5610336						
ANR	5610775	Symbol	output_strings . next		5610336						
ANR	5610776	Symbol	input_strings . print_to_string		5610336						
ANR	5610777	Symbol	ret		5610336						
ANR	5610778	Symbol	m_vm_bridge_interface . c_str		5610336						
ANR	5610779	Symbol	NULL		5610336						
ANR	5610780	Symbol	D_ALWAYS		5610336						
ANR	5610781	Symbol	false		5610336						
ANR	5610782	Symbol	m_xml		5610336						
ANR	5610783	Symbol	m_vm_networking_type		5610336						
ANR	5610784	Symbol	D_FULLDEBUG		5610336						
ANR	5610785	Symbol	args		5610336						
ANR	5610786	Symbol	filename		5610336						
ANR	5610787	Symbol	VMPARAM_XEN_INITRD		5610336						
ANR	5610788	Symbol	m_vm_bridge_interface . empty		5610336						
ANR	5610789	Symbol	& input_strings		5610336						
ANR	5610790	Symbol	& error_strings		5610336						
ANR	5610791	Symbol	ATTR_JOB_VM_NETWORKING_TYPE		5610336						
ANR	5610792	Symbol	true		5610336						
ANR	5610793	Symbol	PRIV_ROOT		5610336						
ANR	5610794	Symbol	VMPARAM_XEN_BOOTLOADER		5610336						
ANR	5610795	Symbol	m_xen_initrd_file		5610336						
ANR	5610796	Symbol	m_vm_networking_type . Value		5610336						
ANR	5610797	Symbol	m_classAd		5610336						
ANR	5610798	Function	VirshType :: ResumeFromSoftSuspend	403:0:11548:12436							
ANR	5610799	FunctionDef	VirshType :: ResumeFromSoftSuspend ()		5610798	0					
ANR	5610800	CompoundStatement		405:0:11592:12436	5610798	0					
ANR	5610801	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::ResumeFromSoftSuspend\\n"" )"	406:1:11595:11661	5610798	0	True				
ANR	5610802	CallExpression	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::ResumeFromSoftSuspend\\n"" )"		5610798	0					
ANR	5610803	Callee	vmprintf		5610798	0					
ANR	5610804	Identifier	vmprintf		5610798	0					
ANR	5610805	ArgumentList	D_FULLDEBUG		5610798	1					
ANR	5610806	Argument	D_FULLDEBUG		5610798	0					
ANR	5610807	Identifier	D_FULLDEBUG		5610798	0					
ANR	5610808	Argument	"""Inside VirshType::ResumeFromSoftSuspend\\n"""		5610798	1					
ANR	5610809	PrimaryExpression	"""Inside VirshType::ResumeFromSoftSuspend\\n"""		5610798	0					
ANR	5610810	IfStatement	if ( ( m_configfile . Length ( ) == 0 ) )		5610798	1					
ANR	5610811	Condition	m_configfile . Length ( ) == 0	407:5:11668:11695	5610798	0	True				
ANR	5610812	EqualityExpression	m_configfile . Length ( ) == 0		5610798	0		==			
ANR	5610813	CallExpression	m_configfile . Length ( )		5610798	0					
ANR	5610814	Callee	m_configfile . Length		5610798	0					
ANR	5610815	MemberAccess	m_configfile . Length		5610798	0					
ANR	5610816	Identifier	m_configfile		5610798	0					
ANR	5610817	Identifier	Length		5610798	1					
ANR	5610818	ArgumentList			5610798	1					
ANR	5610819	PrimaryExpression	0		5610798	1					
ANR	5610820	CompoundStatement		3:35:105:105	5610798	1					
ANR	5610821	ReturnStatement	return false ;	408:2:11702:11714	5610798	0	True				
ANR	5610822	Identifier	false		5610798	0					
ANR	5610823	IfStatement	if ( m_is_soft_suspended )		5610798	2					
ANR	5610824	Condition	m_is_soft_suspended	411:5:11725:11743	5610798	0	True				
ANR	5610825	Identifier	m_is_soft_suspended		5610798	0					
ANR	5610826	CompoundStatement		20:2:563:596	5610798	1					
ANR	5610827	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	413:2:11752:11785	5610798	0	True				
ANR	5610828	IdentifierDecl	priv = set_root_priv ( )		5610798	0					
ANR	5610829	IdentifierDeclType	priv_state		5610798	0					
ANR	5610830	Identifier	priv		5610798	1					
ANR	5610831	AssignmentExpression	priv = set_root_priv ( )		5610798	2		=			
ANR	5610832	Identifier	priv		5610798	0					
ANR	5610833	CallExpression	set_root_priv ( )		5610798	1					
ANR	5610834	Callee	set_root_priv		5610798	0					
ANR	5610835	Identifier	set_root_priv		5610798	0					
ANR	5610836	ArgumentList			5610798	1					
ANR	5610837	IdentifierDeclStatement	"virDomainPtr dom = virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) ) ;"	414:2:11789:11870	5610798	1	True				
ANR	5610838	IdentifierDecl	"dom = virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) )"		5610798	0					
ANR	5610839	IdentifierDeclType	virDomainPtr		5610798	0					
ANR	5610840	Identifier	dom		5610798	1					
ANR	5610841	AssignmentExpression	"dom = virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) )"		5610798	2		=			
ANR	5610842	Identifier	dom		5610798	0					
ANR	5610843	CallExpression	"virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) )"		5610798	1					
ANR	5610844	Callee	virDomainLookupByName		5610798	0					
ANR	5610845	Identifier	virDomainLookupByName		5610798	0					
ANR	5610846	ArgumentList	m_libvirt_connection		5610798	1					
ANR	5610847	Argument	m_libvirt_connection		5610798	0					
ANR	5610848	Identifier	m_libvirt_connection		5610798	0					
ANR	5610849	Argument	m_vm_name . Value ( )		5610798	1					
ANR	5610850	CallExpression	m_vm_name . Value ( )		5610798	0					
ANR	5610851	Callee	m_vm_name . Value		5610798	0					
ANR	5610852	MemberAccess	m_vm_name . Value		5610798	0					
ANR	5610853	Identifier	m_vm_name		5610798	0					
ANR	5610854	Identifier	Value		5610798	1					
ANR	5610855	ArgumentList			5610798	1					
ANR	5610856	ExpressionStatement	set_priv ( priv )	415:2:11874:11888	5610798	2	True				
ANR	5610857	CallExpression	set_priv ( priv )		5610798	0					
ANR	5610858	Callee	set_priv		5610798	0					
ANR	5610859	Identifier	set_priv		5610798	0					
ANR	5610860	ArgumentList	priv		5610798	1					
ANR	5610861	Argument	priv		5610798	0					
ANR	5610862	Identifier	priv		5610798	0					
ANR	5610863	IfStatement	if ( dom == NULL )		5610798	3					
ANR	5610864	Condition	dom == NULL	416:5:11895:11905	5610798	0	True				
ANR	5610865	EqualityExpression	dom == NULL		5610798	0		==			
ANR	5610866	Identifier	dom		5610798	0					
ANR	5610867	Identifier	NULL		5610798	1					
ANR	5610868	CompoundStatement		14:6:327:386	5610798	1					
ANR	5610869	IdentifierDeclStatement	virErrorPtr err = virConnGetLastError ( m_libvirt_connection ) ;	418:6:11920:11979	5610798	0	True				
ANR	5610870	IdentifierDecl	err = virConnGetLastError ( m_libvirt_connection )		5610798	0					
ANR	5610871	IdentifierDeclType	virErrorPtr		5610798	0					
ANR	5610872	Identifier	err		5610798	1					
ANR	5610873	AssignmentExpression	err = virConnGetLastError ( m_libvirt_connection )		5610798	2		=			
ANR	5610874	Identifier	err		5610798	0					
ANR	5610875	CallExpression	virConnGetLastError ( m_libvirt_connection )		5610798	1					
ANR	5610876	Callee	virConnGetLastError		5610798	0					
ANR	5610877	Identifier	virConnGetLastError		5610798	0					
ANR	5610878	ArgumentList	m_libvirt_connection		5610798	1					
ANR	5610879	Argument	m_libvirt_connection		5610798	0					
ANR	5610880	Identifier	m_libvirt_connection		5610798	0					
ANR	5610881	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Error finding domain %s: %s\\n"" , m_vm_name . Value ( ) , ( err ? err -> message : ""No reason found"" ) )"	419:6:11987:12099	5610798	1	True				
ANR	5610882	CallExpression	"vmprintf ( D_ALWAYS , ""Error finding domain %s: %s\\n"" , m_vm_name . Value ( ) , ( err ? err -> message : ""No reason found"" ) )"		5610798	0					
ANR	5610883	Callee	vmprintf		5610798	0					
ANR	5610884	Identifier	vmprintf		5610798	0					
ANR	5610885	ArgumentList	D_ALWAYS		5610798	1					
ANR	5610886	Argument	D_ALWAYS		5610798	0					
ANR	5610887	Identifier	D_ALWAYS		5610798	0					
ANR	5610888	Argument	"""Error finding domain %s: %s\\n"""		5610798	1					
ANR	5610889	PrimaryExpression	"""Error finding domain %s: %s\\n"""		5610798	0					
ANR	5610890	Argument	m_vm_name . Value ( )		5610798	2					
ANR	5610891	CallExpression	m_vm_name . Value ( )		5610798	0					
ANR	5610892	Callee	m_vm_name . Value		5610798	0					
ANR	5610893	MemberAccess	m_vm_name . Value		5610798	0					
ANR	5610894	Identifier	m_vm_name		5610798	0					
ANR	5610895	Identifier	Value		5610798	1					
ANR	5610896	ArgumentList			5610798	1					
ANR	5610897	Argument	"err ? err -> message : ""No reason found"""		5610798	3					
ANR	5610898	ConditionalExpression	"err ? err -> message : ""No reason found"""		5610798	0					
ANR	5610899	Condition	err		5610798	0					
ANR	5610900	Identifier	err		5610798	0					
ANR	5610901	PtrMemberAccess	err -> message		5610798	1					
ANR	5610902	Identifier	err		5610798	0					
ANR	5610903	Identifier	message		5610798	1					
ANR	5610904	PrimaryExpression	"""No reason found"""		5610798	2					
ANR	5610905	ReturnStatement	return false ;	420:6:12107:12119	5610798	2	True				
ANR	5610906	Identifier	false		5610798	0					
ANR	5610907	ExpressionStatement	priv = set_root_priv ( )	423:2:12130:12152	5610798	4	True				
ANR	5610908	AssignmentExpression	priv = set_root_priv ( )		5610798	0		=			
ANR	5610909	Identifier	priv		5610798	0					
ANR	5610910	CallExpression	set_root_priv ( )		5610798	1					
ANR	5610911	Callee	set_root_priv		5610798	0					
ANR	5610912	Identifier	set_root_priv		5610798	0					
ANR	5610913	ArgumentList			5610798	1					
ANR	5610914	IdentifierDeclStatement	int result = virDomainResume ( dom ) ;	424:2:12156:12189	5610798	5	True				
ANR	5610915	IdentifierDecl	result = virDomainResume ( dom )		5610798	0					
ANR	5610916	IdentifierDeclType	int		5610798	0					
ANR	5610917	Identifier	result		5610798	1					
ANR	5610918	AssignmentExpression	result = virDomainResume ( dom )		5610798	2		=			
ANR	5610919	Identifier	result		5610798	0					
ANR	5610920	CallExpression	virDomainResume ( dom )		5610798	1					
ANR	5610921	Callee	virDomainResume		5610798	0					
ANR	5610922	Identifier	virDomainResume		5610798	0					
ANR	5610923	ArgumentList	dom		5610798	1					
ANR	5610924	Argument	dom		5610798	0					
ANR	5610925	Identifier	dom		5610798	0					
ANR	5610926	ExpressionStatement	virDomainFree ( dom )	425:2:12193:12211	5610798	6	True				
ANR	5610927	CallExpression	virDomainFree ( dom )		5610798	0					
ANR	5610928	Callee	virDomainFree		5610798	0					
ANR	5610929	Identifier	virDomainFree		5610798	0					
ANR	5610930	ArgumentList	dom		5610798	1					
ANR	5610931	Argument	dom		5610798	0					
ANR	5610932	Identifier	dom		5610798	0					
ANR	5610933	ExpressionStatement	set_priv ( priv )	426:2:12215:12229	5610798	7	True				
ANR	5610934	CallExpression	set_priv ( priv )		5610798	0					
ANR	5610935	Callee	set_priv		5610798	0					
ANR	5610936	Identifier	set_priv		5610798	0					
ANR	5610937	ArgumentList	priv		5610798	1					
ANR	5610938	Argument	priv		5610798	0					
ANR	5610939	Identifier	priv		5610798	0					
ANR	5610940	IfStatement	if ( result != 0 )		5610798	8					
ANR	5610941	Condition	result != 0	427:6:12237:12247	5610798	0	True				
ANR	5610942	EqualityExpression	result != 0		5610798	0		!=			
ANR	5610943	Identifier	result		5610798	0					
ANR	5610944	PrimaryExpression	0		5610798	1					
ANR	5610945	CompoundStatement		23:20:658:658	5610798	1					
ANR	5610946	Statement	vmprintf	429:3:12278:12285	5610798	0	True				
ANR	5610947	Statement	(	429:11:12286:12286	5610798	1	True				
ANR	5610948	Statement	D_ALWAYS	429:12:12287:12294	5610798	2	True				
ANR	5610949	Statement	","	429:20:12295:12295	5610798	3	True				
ANR	5610950	Statement	"""Unpausing VM failed in """	429:22:12297:12321	5610798	4	True				
ANR	5610951	Statement	"""VirshType::ResumeFromSoftSuspend\\n"""	430:5:12328:12363	5610798	5	True				
ANR	5610952	Statement	)	430:41:12364:12364	5610798	6	True				
ANR	5610953	ExpressionStatement		430:42:12365:12365	5610798	7	True				
ANR	5610954	ReturnStatement	return false ;	431:3:12370:12382	5610798	8	True				
ANR	5610955	Identifier	false		5610798	0					
ANR	5610956	ExpressionStatement	m_is_soft_suspended = false	433:2:12390:12417	5610798	9	True				
ANR	5610957	AssignmentExpression	m_is_soft_suspended = false		5610798	0		=			
ANR	5610958	Identifier	m_is_soft_suspended		5610798	0					
ANR	5610959	Identifier	false		5610798	1					
ANR	5610960	ReturnStatement	return true ;	435:1:12423:12434	5610798	3	True				
ANR	5610961	Identifier	true		5610798	0					
ANR	5610962	ReturnType	bool		5610798	1					
ANR	5610963	Identifier	VirshType :: ResumeFromSoftSuspend		5610798	2					
ANR	5610964	ParameterList			5610798	3					
ANR	5610965	CFGEntryNode	ENTRY		5610798		True				
ANR	5610966	CFGExitNode	EXIT		5610798		True				
ANR	5610967	Symbol	m_vm_name		5610798						
ANR	5610968	Symbol	dom		5610798						
ANR	5610969	Symbol	NULL		5610798						
ANR	5610970	Symbol	err		5610798						
ANR	5610971	Symbol	err -> message		5610798						
ANR	5610972	Symbol	m_configfile . Length		5610798						
ANR	5610973	Symbol	false		5610798						
ANR	5610974	Symbol	D_ALWAYS		5610798						
ANR	5610975	Symbol	m_configfile		5610798						
ANR	5610976	Symbol	virDomainLookupByName		5610798						
ANR	5610977	Symbol	D_FULLDEBUG		5610798						
ANR	5610978	Symbol	set_root_priv		5610798						
ANR	5610979	Symbol	virDomainResume		5610798						
ANR	5610980	Symbol	m_vm_name . Value		5610798						
ANR	5610981	Symbol	virConnGetLastError		5610798						
ANR	5610982	Symbol	* err		5610798						
ANR	5610983	Symbol	result		5610798						
ANR	5610984	Symbol	m_libvirt_connection		5610798						
ANR	5610985	Symbol	m_is_soft_suspended		5610798						
ANR	5610986	Symbol	true		5610798						
ANR	5610987	Symbol	priv		5610798						
ANR	5610988	Function	VirshType :: SoftSuspend	438:0:12439:13479							
ANR	5610989	FunctionDef	VirshType :: SoftSuspend ()		5610988	0					
ANR	5610990	CompoundStatement		440:0:12469:13479	5610988	0					
ANR	5610991	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::SoftSuspend\\n"" )"	441:1:12472:12528	5610988	0	True				
ANR	5610992	CallExpression	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::SoftSuspend\\n"" )"		5610988	0					
ANR	5610993	Callee	vmprintf		5610988	0					
ANR	5610994	Identifier	vmprintf		5610988	0					
ANR	5610995	ArgumentList	D_FULLDEBUG		5610988	1					
ANR	5610996	Argument	D_FULLDEBUG		5610988	0					
ANR	5610997	Identifier	D_FULLDEBUG		5610988	0					
ANR	5610998	Argument	"""Inside VirshType::SoftSuspend\\n"""		5610988	1					
ANR	5610999	PrimaryExpression	"""Inside VirshType::SoftSuspend\\n"""		5610988	0					
ANR	5611000	IfStatement	if ( ( m_configfile . Length ( ) == 0 ) )		5610988	1					
ANR	5611001	Condition	m_configfile . Length ( ) == 0	443:5:12536:12563	5610988	0	True				
ANR	5611002	EqualityExpression	m_configfile . Length ( ) == 0		5610988	0		==			
ANR	5611003	CallExpression	m_configfile . Length ( )		5610988	0					
ANR	5611004	Callee	m_configfile . Length		5610988	0					
ANR	5611005	MemberAccess	m_configfile . Length		5610988	0					
ANR	5611006	Identifier	m_configfile		5610988	0					
ANR	5611007	Identifier	Length		5610988	1					
ANR	5611008	ArgumentList			5610988	1					
ANR	5611009	PrimaryExpression	0		5610988	1					
ANR	5611010	CompoundStatement		4:35:96:96	5610988	1					
ANR	5611011	ExpressionStatement	m_result_msg = VMGAHP_ERR_INTERNAL	444:2:12570:12604	5610988	0	True				
ANR	5611012	AssignmentExpression	m_result_msg = VMGAHP_ERR_INTERNAL		5610988	0		=			
ANR	5611013	Identifier	m_result_msg		5610988	0					
ANR	5611014	Identifier	VMGAHP_ERR_INTERNAL		5610988	1					
ANR	5611015	ReturnStatement	return false ;	445:2:12608:12620	5610988	1	True				
ANR	5611016	Identifier	false		5610988	0					
ANR	5611017	IfStatement	if ( m_is_soft_suspended )		5610988	2					
ANR	5611018	Condition	m_is_soft_suspended	448:5:12631:12649	5610988	0	True				
ANR	5611019	Identifier	m_is_soft_suspended		5610988	0					
ANR	5611020	CompoundStatement		9:27:183:183	5610988	1					
ANR	5611021	ReturnStatement	return true ;	449:2:12657:12668	5610988	0	True				
ANR	5611022	Identifier	true		5610988	0					
ANR	5611023	IfStatement	if ( getVMStatus ( ) != VM_RUNNING )		5610988	3					
ANR	5611024	Condition	getVMStatus ( ) != VM_RUNNING	452:5:12679:12705	5610988	0	True				
ANR	5611025	EqualityExpression	getVMStatus ( ) != VM_RUNNING		5610988	0		!=			
ANR	5611026	CallExpression	getVMStatus ( )		5610988	0					
ANR	5611027	Callee	getVMStatus		5610988	0					
ANR	5611028	Identifier	getVMStatus		5610988	0					
ANR	5611029	ArgumentList			5610988	1					
ANR	5611030	Identifier	VM_RUNNING		5610988	1					
ANR	5611031	CompoundStatement		13:35:239:239	5610988	1					
ANR	5611032	ExpressionStatement	m_result_msg = VMGAHP_ERR_VM_INVALID_OPERATION	453:2:12713:12759	5610988	0	True				
ANR	5611033	AssignmentExpression	m_result_msg = VMGAHP_ERR_VM_INVALID_OPERATION		5610988	0		=			
ANR	5611034	Identifier	m_result_msg		5610988	0					
ANR	5611035	Identifier	VMGAHP_ERR_VM_INVALID_OPERATION		5610988	1					
ANR	5611036	ReturnStatement	return false ;	454:2:12763:12775	5610988	1	True				
ANR	5611037	Identifier	false		5610988	0					
ANR	5611038	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	457:1:12782:12815	5610988	4	True				
ANR	5611039	IdentifierDecl	priv = set_root_priv ( )		5610988	0					
ANR	5611040	IdentifierDeclType	priv_state		5610988	0					
ANR	5611041	Identifier	priv		5610988	1					
ANR	5611042	AssignmentExpression	priv = set_root_priv ( )		5610988	2		=			
ANR	5611043	Identifier	priv		5610988	0					
ANR	5611044	CallExpression	set_root_priv ( )		5610988	1					
ANR	5611045	Callee	set_root_priv		5610988	0					
ANR	5611046	Identifier	set_root_priv		5610988	0					
ANR	5611047	ArgumentList			5610988	1					
ANR	5611048	IdentifierDeclStatement	"virDomainPtr dom = virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) ) ;"	458:1:12818:12899	5610988	5	True				
ANR	5611049	IdentifierDecl	"dom = virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) )"		5610988	0					
ANR	5611050	IdentifierDeclType	virDomainPtr		5610988	0					
ANR	5611051	Identifier	dom		5610988	1					
ANR	5611052	AssignmentExpression	"dom = virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) )"		5610988	2		=			
ANR	5611053	Identifier	dom		5610988	0					
ANR	5611054	CallExpression	"virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) )"		5610988	1					
ANR	5611055	Callee	virDomainLookupByName		5610988	0					
ANR	5611056	Identifier	virDomainLookupByName		5610988	0					
ANR	5611057	ArgumentList	m_libvirt_connection		5610988	1					
ANR	5611058	Argument	m_libvirt_connection		5610988	0					
ANR	5611059	Identifier	m_libvirt_connection		5610988	0					
ANR	5611060	Argument	m_vm_name . Value ( )		5610988	1					
ANR	5611061	CallExpression	m_vm_name . Value ( )		5610988	0					
ANR	5611062	Callee	m_vm_name . Value		5610988	0					
ANR	5611063	MemberAccess	m_vm_name . Value		5610988	0					
ANR	5611064	Identifier	m_vm_name		5610988	0					
ANR	5611065	Identifier	Value		5610988	1					
ANR	5611066	ArgumentList			5610988	1					
ANR	5611067	ExpressionStatement	set_priv ( priv )	459:1:12902:12916	5610988	6	True				
ANR	5611068	CallExpression	set_priv ( priv )		5610988	0					
ANR	5611069	Callee	set_priv		5610988	0					
ANR	5611070	Identifier	set_priv		5610988	0					
ANR	5611071	ArgumentList	priv		5610988	1					
ANR	5611072	Argument	priv		5610988	0					
ANR	5611073	Identifier	priv		5610988	0					
ANR	5611074	IfStatement	if ( dom == NULL )		5610988	7					
ANR	5611075	Condition	dom == NULL	460:4:12922:12932	5610988	0	True				
ANR	5611076	EqualityExpression	dom == NULL		5610988	0		==			
ANR	5611077	Identifier	dom		5610988	0					
ANR	5611078	Identifier	NULL		5610988	1					
ANR	5611079	CompoundStatement		23:5:475:534	5610988	1					
ANR	5611080	IdentifierDeclStatement	virErrorPtr err = virConnGetLastError ( m_libvirt_connection ) ;	462:5:12945:13004	5610988	0	True				
ANR	5611081	IdentifierDecl	err = virConnGetLastError ( m_libvirt_connection )		5610988	0					
ANR	5611082	IdentifierDeclType	virErrorPtr		5610988	0					
ANR	5611083	Identifier	err		5610988	1					
ANR	5611084	AssignmentExpression	err = virConnGetLastError ( m_libvirt_connection )		5610988	2		=			
ANR	5611085	Identifier	err		5610988	0					
ANR	5611086	CallExpression	virConnGetLastError ( m_libvirt_connection )		5610988	1					
ANR	5611087	Callee	virConnGetLastError		5610988	0					
ANR	5611088	Identifier	virConnGetLastError		5610988	0					
ANR	5611089	ArgumentList	m_libvirt_connection		5610988	1					
ANR	5611090	Argument	m_libvirt_connection		5610988	0					
ANR	5611091	Identifier	m_libvirt_connection		5610988	0					
ANR	5611092	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Error finding domain %s: %s\\n"" , m_vm_name . Value ( ) , ( err ? err -> message : ""No reason found"" ) )"	463:5:13011:13123	5610988	1	True				
ANR	5611093	CallExpression	"vmprintf ( D_ALWAYS , ""Error finding domain %s: %s\\n"" , m_vm_name . Value ( ) , ( err ? err -> message : ""No reason found"" ) )"		5610988	0					
ANR	5611094	Callee	vmprintf		5610988	0					
ANR	5611095	Identifier	vmprintf		5610988	0					
ANR	5611096	ArgumentList	D_ALWAYS		5610988	1					
ANR	5611097	Argument	D_ALWAYS		5610988	0					
ANR	5611098	Identifier	D_ALWAYS		5610988	0					
ANR	5611099	Argument	"""Error finding domain %s: %s\\n"""		5610988	1					
ANR	5611100	PrimaryExpression	"""Error finding domain %s: %s\\n"""		5610988	0					
ANR	5611101	Argument	m_vm_name . Value ( )		5610988	2					
ANR	5611102	CallExpression	m_vm_name . Value ( )		5610988	0					
ANR	5611103	Callee	m_vm_name . Value		5610988	0					
ANR	5611104	MemberAccess	m_vm_name . Value		5610988	0					
ANR	5611105	Identifier	m_vm_name		5610988	0					
ANR	5611106	Identifier	Value		5610988	1					
ANR	5611107	ArgumentList			5610988	1					
ANR	5611108	Argument	"err ? err -> message : ""No reason found"""		5610988	3					
ANR	5611109	ConditionalExpression	"err ? err -> message : ""No reason found"""		5610988	0					
ANR	5611110	Condition	err		5610988	0					
ANR	5611111	Identifier	err		5610988	0					
ANR	5611112	PtrMemberAccess	err -> message		5610988	1					
ANR	5611113	Identifier	err		5610988	0					
ANR	5611114	Identifier	message		5610988	1					
ANR	5611115	PrimaryExpression	"""No reason found"""		5610988	2					
ANR	5611116	ReturnStatement	return false ;	464:5:13130:13142	5610988	2	True				
ANR	5611117	Identifier	false		5610988	0					
ANR	5611118	IdentifierDeclStatement	int result = virDomainSuspend ( dom ) ;	467:1:13151:13185	5610988	8	True				
ANR	5611119	IdentifierDecl	result = virDomainSuspend ( dom )		5610988	0					
ANR	5611120	IdentifierDeclType	int		5610988	0					
ANR	5611121	Identifier	result		5610988	1					
ANR	5611122	AssignmentExpression	result = virDomainSuspend ( dom )		5610988	2		=			
ANR	5611123	Identifier	result		5610988	0					
ANR	5611124	CallExpression	virDomainSuspend ( dom )		5610988	1					
ANR	5611125	Callee	virDomainSuspend		5610988	0					
ANR	5611126	Identifier	virDomainSuspend		5610988	0					
ANR	5611127	ArgumentList	dom		5610988	1					
ANR	5611128	Argument	dom		5610988	0					
ANR	5611129	Identifier	dom		5610988	0					
ANR	5611130	ExpressionStatement	virDomainFree ( dom )	468:1:13188:13206	5610988	9	True				
ANR	5611131	CallExpression	virDomainFree ( dom )		5610988	0					
ANR	5611132	Callee	virDomainFree		5610988	0					
ANR	5611133	Identifier	virDomainFree		5610988	0					
ANR	5611134	ArgumentList	dom		5610988	1					
ANR	5611135	Argument	dom		5610988	0					
ANR	5611136	Identifier	dom		5610988	0					
ANR	5611137	IfStatement	if ( result == 0 )		5610988	10					
ANR	5611138	Condition	result == 0	469:5:13213:13223	5610988	0	True				
ANR	5611139	EqualityExpression	result == 0		5610988	0		==			
ANR	5611140	Identifier	result		5610988	0					
ANR	5611141	PrimaryExpression	0		5610988	1					
ANR	5611142	CompoundStatement		30:19:757:757	5610988	1					
ANR	5611143	ExpressionStatement	m_is_soft_suspended = true	471:2:13252:13278	5610988	0	True				
ANR	5611144	AssignmentExpression	m_is_soft_suspended = true		5610988	0		=			
ANR	5611145	Identifier	m_is_soft_suspended		5610988	0					
ANR	5611146	Identifier	true		5610988	1					
ANR	5611147	ReturnStatement	return true ;	472:2:13282:13293	5610988	1	True				
ANR	5611148	Identifier	true		5610988	0					
ANR	5611149	ExpressionStatement	"vmprintf ( D_ALWAYS , ""SoftSuspend failed, so try hard Suspend instead!.\\n"" )"	477:1:13385:13458	5610988	11	True				
ANR	5611150	CallExpression	"vmprintf ( D_ALWAYS , ""SoftSuspend failed, so try hard Suspend instead!.\\n"" )"		5610988	0					
ANR	5611151	Callee	vmprintf		5610988	0					
ANR	5611152	Identifier	vmprintf		5610988	0					
ANR	5611153	ArgumentList	D_ALWAYS		5610988	1					
ANR	5611154	Argument	D_ALWAYS		5610988	0					
ANR	5611155	Identifier	D_ALWAYS		5610988	0					
ANR	5611156	Argument	"""SoftSuspend failed, so try hard Suspend instead!.\\n"""		5610988	1					
ANR	5611157	PrimaryExpression	"""SoftSuspend failed, so try hard Suspend instead!.\\n"""		5610988	0					
ANR	5611158	ReturnStatement	return Suspend ( ) ;	478:1:13461:13477	5610988	12	True				
ANR	5611159	CallExpression	Suspend ( )		5610988	0					
ANR	5611160	Callee	Suspend		5610988	0					
ANR	5611161	Identifier	Suspend		5610988	0					
ANR	5611162	ArgumentList			5610988	1					
ANR	5611163	ReturnType	bool		5610988	1					
ANR	5611164	Identifier	VirshType :: SoftSuspend		5610988	2					
ANR	5611165	ParameterList			5610988	3					
ANR	5611166	CFGEntryNode	ENTRY		5610988		True				
ANR	5611167	CFGExitNode	EXIT		5610988		True				
ANR	5611168	Symbol	m_result_msg		5610988						
ANR	5611169	Symbol	VMGAHP_ERR_INTERNAL		5610988						
ANR	5611170	Symbol	m_vm_name		5610988						
ANR	5611171	Symbol	dom		5610988						
ANR	5611172	Symbol	getVMStatus		5610988						
ANR	5611173	Symbol	m_configfile		5610988						
ANR	5611174	Symbol	Suspend		5610988						
ANR	5611175	Symbol	virConnGetLastError		5610988						
ANR	5611176	Symbol	result		5610988						
ANR	5611177	Symbol	m_libvirt_connection		5610988						
ANR	5611178	Symbol	virDomainSuspend		5610988						
ANR	5611179	Symbol	priv		5610988						
ANR	5611180	Symbol	VM_RUNNING		5610988						
ANR	5611181	Symbol	NULL		5610988						
ANR	5611182	Symbol	err		5610988						
ANR	5611183	Symbol	err -> message		5610988						
ANR	5611184	Symbol	VMGAHP_ERR_VM_INVALID_OPERATION		5610988						
ANR	5611185	Symbol	m_configfile . Length		5610988						
ANR	5611186	Symbol	false		5610988						
ANR	5611187	Symbol	D_ALWAYS		5610988						
ANR	5611188	Symbol	virDomainLookupByName		5610988						
ANR	5611189	Symbol	D_FULLDEBUG		5610988						
ANR	5611190	Symbol	set_root_priv		5610988						
ANR	5611191	Symbol	m_vm_name . Value		5610988						
ANR	5611192	Symbol	* err		5610988						
ANR	5611193	Symbol	m_is_soft_suspended		5610988						
ANR	5611194	Symbol	true		5610988						
ANR	5611195	Function	VirshType :: Suspend	481:0:13482:15024							
ANR	5611196	FunctionDef	VirshType :: Suspend ()		5611195	0					
ANR	5611197	CompoundStatement		483:0:13508:15024	5611195	0					
ANR	5611198	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::Suspend\\n"" )"	484:1:13511:13563	5611195	0	True				
ANR	5611199	CallExpression	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::Suspend\\n"" )"		5611195	0					
ANR	5611200	Callee	vmprintf		5611195	0					
ANR	5611201	Identifier	vmprintf		5611195	0					
ANR	5611202	ArgumentList	D_FULLDEBUG		5611195	1					
ANR	5611203	Argument	D_FULLDEBUG		5611195	0					
ANR	5611204	Identifier	D_FULLDEBUG		5611195	0					
ANR	5611205	Argument	"""Inside VirshType::Suspend\\n"""		5611195	1					
ANR	5611206	PrimaryExpression	"""Inside VirshType::Suspend\\n"""		5611195	0					
ANR	5611207	IfStatement	if ( ( m_configfile . Length ( ) == 0 ) )		5611195	1					
ANR	5611208	Condition	m_configfile . Length ( ) == 0	486:5:13571:13598	5611195	0	True				
ANR	5611209	EqualityExpression	m_configfile . Length ( ) == 0		5611195	0		==			
ANR	5611210	CallExpression	m_configfile . Length ( )		5611195	0					
ANR	5611211	Callee	m_configfile . Length		5611195	0					
ANR	5611212	MemberAccess	m_configfile . Length		5611195	0					
ANR	5611213	Identifier	m_configfile		5611195	0					
ANR	5611214	Identifier	Length		5611195	1					
ANR	5611215	ArgumentList			5611195	1					
ANR	5611216	PrimaryExpression	0		5611195	1					
ANR	5611217	CompoundStatement		4:36:93:93	5611195	1					
ANR	5611218	ExpressionStatement	m_result_msg = VMGAHP_ERR_INTERNAL	487:2:13606:13640	5611195	0	True				
ANR	5611219	AssignmentExpression	m_result_msg = VMGAHP_ERR_INTERNAL		5611195	0		=			
ANR	5611220	Identifier	m_result_msg		5611195	0					
ANR	5611221	Identifier	VMGAHP_ERR_INTERNAL		5611195	1					
ANR	5611222	ReturnStatement	return false ;	488:2:13644:13656	5611195	1	True				
ANR	5611223	Identifier	false		5611195	0					
ANR	5611224	IfStatement	if ( getVMStatus ( ) == VM_SUSPENDED )		5611195	2					
ANR	5611225	Condition	getVMStatus ( ) == VM_SUSPENDED	491:5:13667:13695	5611195	0	True				
ANR	5611226	EqualityExpression	getVMStatus ( ) == VM_SUSPENDED		5611195	0		==			
ANR	5611227	CallExpression	getVMStatus ( )		5611195	0					
ANR	5611228	Callee	getVMStatus		5611195	0					
ANR	5611229	Identifier	getVMStatus		5611195	0					
ANR	5611230	ArgumentList			5611195	1					
ANR	5611231	Identifier	VM_SUSPENDED		5611195	1					
ANR	5611232	CompoundStatement		9:37:190:190	5611195	1					
ANR	5611233	ReturnStatement	return true ;	492:2:13703:13714	5611195	0	True				
ANR	5611234	Identifier	true		5611195	0					
ANR	5611235	IfStatement	if ( getVMStatus ( ) != VM_RUNNING )		5611195	3					
ANR	5611236	Condition	getVMStatus ( ) != VM_RUNNING	495:5:13725:13751	5611195	0	True				
ANR	5611237	EqualityExpression	getVMStatus ( ) != VM_RUNNING		5611195	0		!=			
ANR	5611238	CallExpression	getVMStatus ( )		5611195	0					
ANR	5611239	Callee	getVMStatus		5611195	0					
ANR	5611240	Identifier	getVMStatus		5611195	0					
ANR	5611241	ArgumentList			5611195	1					
ANR	5611242	Identifier	VM_RUNNING		5611195	1					
ANR	5611243	CompoundStatement		13:35:246:246	5611195	1					
ANR	5611244	ExpressionStatement	m_result_msg = VMGAHP_ERR_VM_INVALID_OPERATION	496:2:13759:13805	5611195	0	True				
ANR	5611245	AssignmentExpression	m_result_msg = VMGAHP_ERR_VM_INVALID_OPERATION		5611195	0		=			
ANR	5611246	Identifier	m_result_msg		5611195	0					
ANR	5611247	Identifier	VMGAHP_ERR_VM_INVALID_OPERATION		5611195	1					
ANR	5611248	ReturnStatement	return false ;	497:2:13809:13821	5611195	1	True				
ANR	5611249	Identifier	false		5611195	0					
ANR	5611250	IfStatement	if ( m_xen_hw_vt && ! m_allow_hw_vt_suspend )		5611195	4					
ANR	5611251	Condition	m_xen_hw_vt && ! m_allow_hw_vt_suspend	500:5:13832:13868	5611195	0	True				
ANR	5611252	AndExpression	m_xen_hw_vt && ! m_allow_hw_vt_suspend		5611195	0		&&			
ANR	5611253	Identifier	m_xen_hw_vt		5611195	0					
ANR	5611254	UnaryOperationExpression	! m_allow_hw_vt_suspend		5611195	1					
ANR	5611255	UnaryOperator	!		5611195	0					
ANR	5611256	Identifier	m_allow_hw_vt_suspend		5611195	1					
ANR	5611257	CompoundStatement		18:45:363:363	5611195	1					
ANR	5611258	ExpressionStatement	m_result_msg = VMGAHP_ERR_VM_NO_SUPPORT_SUSPEND	503:2:13975:14022	5611195	0	True				
ANR	5611259	AssignmentExpression	m_result_msg = VMGAHP_ERR_VM_NO_SUPPORT_SUSPEND		5611195	0		=			
ANR	5611260	Identifier	m_result_msg		5611195	0					
ANR	5611261	Identifier	VMGAHP_ERR_VM_NO_SUPPORT_SUSPEND		5611195	1					
ANR	5611262	ReturnStatement	return false ;	504:2:14026:14038	5611195	1	True				
ANR	5611263	Identifier	false		5611195	0					
ANR	5611264	ExpressionStatement	ResumeFromSoftSuspend ( )	508:1:14093:14116	5611195	5	True				
ANR	5611265	CallExpression	ResumeFromSoftSuspend ( )		5611195	0					
ANR	5611266	Callee	ResumeFromSoftSuspend		5611195	0					
ANR	5611267	Identifier	ResumeFromSoftSuspend		5611195	0					
ANR	5611268	ArgumentList			5611195	1					
ANR	5611269	IdentifierDeclStatement	MyString tmpfilename ;	510:1:14120:14140	5611195	6	True				
ANR	5611270	IdentifierDecl	tmpfilename		5611195	0					
ANR	5611271	IdentifierDeclType	MyString		5611195	0					
ANR	5611272	Identifier	tmpfilename		5611195	1					
ANR	5611273	ExpressionStatement	makeNameofSuspendfile ( tmpfilename )	511:1:14143:14177	5611195	7	True				
ANR	5611274	CallExpression	makeNameofSuspendfile ( tmpfilename )		5611195	0					
ANR	5611275	Callee	makeNameofSuspendfile		5611195	0					
ANR	5611276	Identifier	makeNameofSuspendfile		5611195	0					
ANR	5611277	ArgumentList	tmpfilename		5611195	1					
ANR	5611278	Argument	tmpfilename		5611195	0					
ANR	5611279	Identifier	tmpfilename		5611195	0					
ANR	5611280	ExpressionStatement	unlink ( tmpfilename . Value ( ) )	512:1:14180:14207	5611195	8	True				
ANR	5611281	CallExpression	unlink ( tmpfilename . Value ( ) )		5611195	0					
ANR	5611282	Callee	unlink		5611195	0					
ANR	5611283	Identifier	unlink		5611195	0					
ANR	5611284	ArgumentList	tmpfilename . Value ( )		5611195	1					
ANR	5611285	Argument	tmpfilename . Value ( )		5611195	0					
ANR	5611286	CallExpression	tmpfilename . Value ( )		5611195	0					
ANR	5611287	Callee	tmpfilename . Value		5611195	0					
ANR	5611288	MemberAccess	tmpfilename . Value		5611195	0					
ANR	5611289	Identifier	tmpfilename		5611195	0					
ANR	5611290	Identifier	Value		5611195	1					
ANR	5611291	ArgumentList			5611195	1					
ANR	5611292	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	514:1:14211:14244	5611195	9	True				
ANR	5611293	IdentifierDecl	priv = set_root_priv ( )		5611195	0					
ANR	5611294	IdentifierDeclType	priv_state		5611195	0					
ANR	5611295	Identifier	priv		5611195	1					
ANR	5611296	AssignmentExpression	priv = set_root_priv ( )		5611195	2		=			
ANR	5611297	Identifier	priv		5611195	0					
ANR	5611298	CallExpression	set_root_priv ( )		5611195	1					
ANR	5611299	Callee	set_root_priv		5611195	0					
ANR	5611300	Identifier	set_root_priv		5611195	0					
ANR	5611301	ArgumentList			5611195	1					
ANR	5611302	IdentifierDeclStatement	"virDomainPtr dom = virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) ) ;"	515:1:14247:14328	5611195	10	True				
ANR	5611303	IdentifierDecl	"dom = virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) )"		5611195	0					
ANR	5611304	IdentifierDeclType	virDomainPtr		5611195	0					
ANR	5611305	Identifier	dom		5611195	1					
ANR	5611306	AssignmentExpression	"dom = virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) )"		5611195	2		=			
ANR	5611307	Identifier	dom		5611195	0					
ANR	5611308	CallExpression	"virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) )"		5611195	1					
ANR	5611309	Callee	virDomainLookupByName		5611195	0					
ANR	5611310	Identifier	virDomainLookupByName		5611195	0					
ANR	5611311	ArgumentList	m_libvirt_connection		5611195	1					
ANR	5611312	Argument	m_libvirt_connection		5611195	0					
ANR	5611313	Identifier	m_libvirt_connection		5611195	0					
ANR	5611314	Argument	m_vm_name . Value ( )		5611195	1					
ANR	5611315	CallExpression	m_vm_name . Value ( )		5611195	0					
ANR	5611316	Callee	m_vm_name . Value		5611195	0					
ANR	5611317	MemberAccess	m_vm_name . Value		5611195	0					
ANR	5611318	Identifier	m_vm_name		5611195	0					
ANR	5611319	Identifier	Value		5611195	1					
ANR	5611320	ArgumentList			5611195	1					
ANR	5611321	ExpressionStatement	set_priv ( priv )	516:1:14331:14345	5611195	11	True				
ANR	5611322	CallExpression	set_priv ( priv )		5611195	0					
ANR	5611323	Callee	set_priv		5611195	0					
ANR	5611324	Identifier	set_priv		5611195	0					
ANR	5611325	ArgumentList	priv		5611195	1					
ANR	5611326	Argument	priv		5611195	0					
ANR	5611327	Identifier	priv		5611195	0					
ANR	5611328	IfStatement	if ( dom == NULL )		5611195	12					
ANR	5611329	Condition	dom == NULL	517:4:14351:14361	5611195	0	True				
ANR	5611330	EqualityExpression	dom == NULL		5611195	0		==			
ANR	5611331	Identifier	dom		5611195	0					
ANR	5611332	Identifier	NULL		5611195	1					
ANR	5611333	CompoundStatement		37:5:865:924	5611195	1					
ANR	5611334	IdentifierDeclStatement	virErrorPtr err = virConnGetLastError ( m_libvirt_connection ) ;	519:5:14374:14433	5611195	0	True				
ANR	5611335	IdentifierDecl	err = virConnGetLastError ( m_libvirt_connection )		5611195	0					
ANR	5611336	IdentifierDeclType	virErrorPtr		5611195	0					
ANR	5611337	Identifier	err		5611195	1					
ANR	5611338	AssignmentExpression	err = virConnGetLastError ( m_libvirt_connection )		5611195	2		=			
ANR	5611339	Identifier	err		5611195	0					
ANR	5611340	CallExpression	virConnGetLastError ( m_libvirt_connection )		5611195	1					
ANR	5611341	Callee	virConnGetLastError		5611195	0					
ANR	5611342	Identifier	virConnGetLastError		5611195	0					
ANR	5611343	ArgumentList	m_libvirt_connection		5611195	1					
ANR	5611344	Argument	m_libvirt_connection		5611195	0					
ANR	5611345	Identifier	m_libvirt_connection		5611195	0					
ANR	5611346	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Error finding domain %s: %s\\n"" , m_vm_name . Value ( ) , ( err ? err -> message : ""No reason found"" ) )"	520:5:14440:14552	5611195	1	True				
ANR	5611347	CallExpression	"vmprintf ( D_ALWAYS , ""Error finding domain %s: %s\\n"" , m_vm_name . Value ( ) , ( err ? err -> message : ""No reason found"" ) )"		5611195	0					
ANR	5611348	Callee	vmprintf		5611195	0					
ANR	5611349	Identifier	vmprintf		5611195	0					
ANR	5611350	ArgumentList	D_ALWAYS		5611195	1					
ANR	5611351	Argument	D_ALWAYS		5611195	0					
ANR	5611352	Identifier	D_ALWAYS		5611195	0					
ANR	5611353	Argument	"""Error finding domain %s: %s\\n"""		5611195	1					
ANR	5611354	PrimaryExpression	"""Error finding domain %s: %s\\n"""		5611195	0					
ANR	5611355	Argument	m_vm_name . Value ( )		5611195	2					
ANR	5611356	CallExpression	m_vm_name . Value ( )		5611195	0					
ANR	5611357	Callee	m_vm_name . Value		5611195	0					
ANR	5611358	MemberAccess	m_vm_name . Value		5611195	0					
ANR	5611359	Identifier	m_vm_name		5611195	0					
ANR	5611360	Identifier	Value		5611195	1					
ANR	5611361	ArgumentList			5611195	1					
ANR	5611362	Argument	"err ? err -> message : ""No reason found"""		5611195	3					
ANR	5611363	ConditionalExpression	"err ? err -> message : ""No reason found"""		5611195	0					
ANR	5611364	Condition	err		5611195	0					
ANR	5611365	Identifier	err		5611195	0					
ANR	5611366	PtrMemberAccess	err -> message		5611195	1					
ANR	5611367	Identifier	err		5611195	0					
ANR	5611368	Identifier	message		5611195	1					
ANR	5611369	PrimaryExpression	"""No reason found"""		5611195	2					
ANR	5611370	ReturnStatement	return false ;	521:5:14559:14571	5611195	2	True				
ANR	5611371	Identifier	false		5611195	0					
ANR	5611372	ExpressionStatement	priv = set_root_priv ( )	524:1:14580:14602	5611195	13	True				
ANR	5611373	AssignmentExpression	priv = set_root_priv ( )		5611195	0		=			
ANR	5611374	Identifier	priv		5611195	0					
ANR	5611375	CallExpression	set_root_priv ( )		5611195	1					
ANR	5611376	Callee	set_root_priv		5611195	0					
ANR	5611377	Identifier	set_root_priv		5611195	0					
ANR	5611378	ArgumentList			5611195	1					
ANR	5611379	IdentifierDeclStatement	"int result = virDomainSave ( dom , tmpfilename . Value ( ) ) ;"	525:1:14605:14657	5611195	14	True				
ANR	5611380	IdentifierDecl	"result = virDomainSave ( dom , tmpfilename . Value ( ) )"		5611195	0					
ANR	5611381	IdentifierDeclType	int		5611195	0					
ANR	5611382	Identifier	result		5611195	1					
ANR	5611383	AssignmentExpression	"result = virDomainSave ( dom , tmpfilename . Value ( ) )"		5611195	2		=			
ANR	5611384	Identifier	result		5611195	0					
ANR	5611385	CallExpression	"virDomainSave ( dom , tmpfilename . Value ( ) )"		5611195	1					
ANR	5611386	Callee	virDomainSave		5611195	0					
ANR	5611387	Identifier	virDomainSave		5611195	0					
ANR	5611388	ArgumentList	dom		5611195	1					
ANR	5611389	Argument	dom		5611195	0					
ANR	5611390	Identifier	dom		5611195	0					
ANR	5611391	Argument	tmpfilename . Value ( )		5611195	1					
ANR	5611392	CallExpression	tmpfilename . Value ( )		5611195	0					
ANR	5611393	Callee	tmpfilename . Value		5611195	0					
ANR	5611394	MemberAccess	tmpfilename . Value		5611195	0					
ANR	5611395	Identifier	tmpfilename		5611195	0					
ANR	5611396	Identifier	Value		5611195	1					
ANR	5611397	ArgumentList			5611195	1					
ANR	5611398	ExpressionStatement	virDomainFree ( dom )	526:1:14660:14678	5611195	15	True				
ANR	5611399	CallExpression	virDomainFree ( dom )		5611195	0					
ANR	5611400	Callee	virDomainFree		5611195	0					
ANR	5611401	Identifier	virDomainFree		5611195	0					
ANR	5611402	ArgumentList	dom		5611195	1					
ANR	5611403	Argument	dom		5611195	0					
ANR	5611404	Identifier	dom		5611195	0					
ANR	5611405	ExpressionStatement	set_priv ( priv )	527:1:14681:14695	5611195	16	True				
ANR	5611406	CallExpression	set_priv ( priv )		5611195	0					
ANR	5611407	Callee	set_priv		5611195	0					
ANR	5611408	Identifier	set_priv		5611195	0					
ANR	5611409	ArgumentList	priv		5611195	1					
ANR	5611410	Argument	priv		5611195	0					
ANR	5611411	Identifier	priv		5611195	0					
ANR	5611412	IfStatement	if ( result != 0 )		5611195	17					
ANR	5611413	Condition	result != 0	528:5:14702:14712	5611195	0	True				
ANR	5611414	EqualityExpression	result != 0		5611195	0		!=			
ANR	5611415	Identifier	result		5611195	0					
ANR	5611416	PrimaryExpression	0		5611195	1					
ANR	5611417	CompoundStatement		46:19:1207:1207	5611195	1					
ANR	5611418	ExpressionStatement	unlink ( tmpfilename . Value ( ) )	533:2:14844:14871	5611195	0	True				
ANR	5611419	CallExpression	unlink ( tmpfilename . Value ( ) )		5611195	0					
ANR	5611420	Callee	unlink		5611195	0					
ANR	5611421	Identifier	unlink		5611195	0					
ANR	5611422	ArgumentList	tmpfilename . Value ( )		5611195	1					
ANR	5611423	Argument	tmpfilename . Value ( )		5611195	0					
ANR	5611424	CallExpression	tmpfilename . Value ( )		5611195	0					
ANR	5611425	Callee	tmpfilename . Value		5611195	0					
ANR	5611426	MemberAccess	tmpfilename . Value		5611195	0					
ANR	5611427	Identifier	tmpfilename		5611195	0					
ANR	5611428	Identifier	Value		5611195	1					
ANR	5611429	ArgumentList			5611195	1					
ANR	5611430	ReturnStatement	return false ;	534:2:14875:14887	5611195	1	True				
ANR	5611431	Identifier	false		5611195	0					
ANR	5611432	ExpressionStatement	m_suspendfile = tmpfilename	537:1:14894:14921	5611195	18	True				
ANR	5611433	AssignmentExpression	m_suspendfile = tmpfilename		5611195	0		=			
ANR	5611434	Identifier	m_suspendfile		5611195	0					
ANR	5611435	Identifier	tmpfilename		5611195	1					
ANR	5611436	ExpressionStatement	setVMStatus ( VM_SUSPENDED )	539:1:14925:14950	5611195	19	True				
ANR	5611437	CallExpression	setVMStatus ( VM_SUSPENDED )		5611195	0					
ANR	5611438	Callee	setVMStatus		5611195	0					
ANR	5611439	Identifier	setVMStatus		5611195	0					
ANR	5611440	ArgumentList	VM_SUSPENDED		5611195	1					
ANR	5611441	Argument	VM_SUSPENDED		5611195	0					
ANR	5611442	Identifier	VM_SUSPENDED		5611195	0					
ANR	5611443	ExpressionStatement	m_cputime_before_suspend += m_cpu_time	540:1:14953:14991	5611195	20	True				
ANR	5611444	AssignmentExpression	m_cputime_before_suspend += m_cpu_time		5611195	0		+=			
ANR	5611445	Identifier	m_cputime_before_suspend		5611195	0					
ANR	5611446	Identifier	m_cpu_time		5611195	1					
ANR	5611447	ExpressionStatement	m_cpu_time = 0	541:1:14994:15008	5611195	21	True				
ANR	5611448	AssignmentExpression	m_cpu_time = 0		5611195	0		=			
ANR	5611449	Identifier	m_cpu_time		5611195	0					
ANR	5611450	PrimaryExpression	0		5611195	1					
ANR	5611451	ReturnStatement	return true ;	542:1:15011:15022	5611195	22	True				
ANR	5611452	Identifier	true		5611195	0					
ANR	5611453	ReturnType	bool		5611195	1					
ANR	5611454	Identifier	VirshType :: Suspend		5611195	2					
ANR	5611455	ParameterList			5611195	3					
ANR	5611456	CFGEntryNode	ENTRY		5611195		True				
ANR	5611457	CFGExitNode	EXIT		5611195		True				
ANR	5611458	Symbol	m_result_msg		5611195						
ANR	5611459	Symbol	VMGAHP_ERR_INTERNAL		5611195						
ANR	5611460	Symbol	m_vm_name		5611195						
ANR	5611461	Symbol	dom		5611195						
ANR	5611462	Symbol	m_cpu_time		5611195						
ANR	5611463	Symbol	getVMStatus		5611195						
ANR	5611464	Symbol	m_configfile		5611195						
ANR	5611465	Symbol	tmpfilename . Value		5611195						
ANR	5611466	Symbol	virConnGetLastError		5611195						
ANR	5611467	Symbol	result		5611195						
ANR	5611468	Symbol	m_libvirt_connection		5611195						
ANR	5611469	Symbol	tmpfilename		5611195						
ANR	5611470	Symbol	m_allow_hw_vt_suspend		5611195						
ANR	5611471	Symbol	priv		5611195						
ANR	5611472	Symbol	VM_RUNNING		5611195						
ANR	5611473	Symbol	NULL		5611195						
ANR	5611474	Symbol	err		5611195						
ANR	5611475	Symbol	err -> message		5611195						
ANR	5611476	Symbol	VMGAHP_ERR_VM_INVALID_OPERATION		5611195						
ANR	5611477	Symbol	virDomainSave		5611195						
ANR	5611478	Symbol	m_suspendfile		5611195						
ANR	5611479	Symbol	m_configfile . Length		5611195						
ANR	5611480	Symbol	false		5611195						
ANR	5611481	Symbol	D_ALWAYS		5611195						
ANR	5611482	Symbol	virDomainLookupByName		5611195						
ANR	5611483	Symbol	D_FULLDEBUG		5611195						
ANR	5611484	Symbol	set_root_priv		5611195						
ANR	5611485	Symbol	m_vm_name . Value		5611195						
ANR	5611486	Symbol	* err		5611195						
ANR	5611487	Symbol	m_cputime_before_suspend		5611195						
ANR	5611488	Symbol	VM_SUSPENDED		5611195						
ANR	5611489	Symbol	VMGAHP_ERR_VM_NO_SUPPORT_SUSPEND		5611195						
ANR	5611490	Symbol	true		5611195						
ANR	5611491	Symbol	m_xen_hw_vt		5611195						
ANR	5611492	Function	VirshType :: Resume	545:0:15027:16109							
ANR	5611493	FunctionDef	VirshType :: Resume ()		5611492	0					
ANR	5611494	CompoundStatement		547:0:15052:16109	5611492	0					
ANR	5611495	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::Resume\\n"" )"	548:1:15055:15106	5611492	0	True				
ANR	5611496	CallExpression	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::Resume\\n"" )"		5611492	0					
ANR	5611497	Callee	vmprintf		5611492	0					
ANR	5611498	Identifier	vmprintf		5611492	0					
ANR	5611499	ArgumentList	D_FULLDEBUG		5611492	1					
ANR	5611500	Argument	D_FULLDEBUG		5611492	0					
ANR	5611501	Identifier	D_FULLDEBUG		5611492	0					
ANR	5611502	Argument	"""Inside VirshType::Resume\\n"""		5611492	1					
ANR	5611503	PrimaryExpression	"""Inside VirshType::Resume\\n"""		5611492	0					
ANR	5611504	IfStatement	if ( ( m_configfile . Length ( ) == 0 ) )		5611492	1					
ANR	5611505	Condition	m_configfile . Length ( ) == 0	550:4:15113:15140	5611492	0	True				
ANR	5611506	EqualityExpression	m_configfile . Length ( ) == 0		5611492	0		==			
ANR	5611507	CallExpression	m_configfile . Length ( )		5611492	0					
ANR	5611508	Callee	m_configfile . Length		5611492	0					
ANR	5611509	MemberAccess	m_configfile . Length		5611492	0					
ANR	5611510	Identifier	m_configfile		5611492	0					
ANR	5611511	Identifier	Length		5611492	1					
ANR	5611512	ArgumentList			5611492	1					
ANR	5611513	PrimaryExpression	0		5611492	1					
ANR	5611514	CompoundStatement		4:34:90:90	5611492	1					
ANR	5611515	ExpressionStatement	m_result_msg = VMGAHP_ERR_INTERNAL	551:2:15147:15181	5611492	0	True				
ANR	5611516	AssignmentExpression	m_result_msg = VMGAHP_ERR_INTERNAL		5611492	0		=			
ANR	5611517	Identifier	m_result_msg		5611492	0					
ANR	5611518	Identifier	VMGAHP_ERR_INTERNAL		5611492	1					
ANR	5611519	ReturnStatement	return false ;	552:2:15185:15197	5611492	1	True				
ANR	5611520	Identifier	false		5611492	0					
ANR	5611521	ExpressionStatement	ResumeFromSoftSuspend ( )	556:1:15252:15275	5611492	2	True				
ANR	5611522	CallExpression	ResumeFromSoftSuspend ( )		5611492	0					
ANR	5611523	Callee	ResumeFromSoftSuspend		5611492	0					
ANR	5611524	Identifier	ResumeFromSoftSuspend		5611492	0					
ANR	5611525	ArgumentList			5611492	1					
ANR	5611526	IfStatement	if ( getVMStatus ( ) == VM_RUNNING )		5611492	3					
ANR	5611527	Condition	getVMStatus ( ) == VM_RUNNING	558:5:15283:15309	5611492	0	True				
ANR	5611528	EqualityExpression	getVMStatus ( ) == VM_RUNNING		5611492	0		==			
ANR	5611529	CallExpression	getVMStatus ( )		5611492	0					
ANR	5611530	Callee	getVMStatus		5611492	0					
ANR	5611531	Identifier	getVMStatus		5611492	0					
ANR	5611532	ArgumentList			5611492	1					
ANR	5611533	Identifier	VM_RUNNING		5611492	1					
ANR	5611534	CompoundStatement		12:35:260:260	5611492	1					
ANR	5611535	ReturnStatement	return true ;	559:2:15317:15328	5611492	0	True				
ANR	5611536	Identifier	true		5611492	0					
ANR	5611537	IfStatement	if ( ! m_restart_with_ckpt && ( getVMStatus ( ) != VM_SUSPENDED ) )		5611492	4					
ANR	5611538	Condition	! m_restart_with_ckpt && ( getVMStatus ( ) != VM_SUSPENDED )	562:5:15339:15397	5611492	0	True				
ANR	5611539	AndExpression	! m_restart_with_ckpt && ( getVMStatus ( ) != VM_SUSPENDED )		5611492	0		&&			
ANR	5611540	UnaryOperationExpression	! m_restart_with_ckpt		5611492	0					
ANR	5611541	UnaryOperator	!		5611492	0					
ANR	5611542	Identifier	m_restart_with_ckpt		5611492	1					
ANR	5611543	EqualityExpression	getVMStatus ( ) != VM_SUSPENDED		5611492	1		!=			
ANR	5611544	CallExpression	getVMStatus ( )		5611492	0					
ANR	5611545	Callee	getVMStatus		5611492	0					
ANR	5611546	Identifier	getVMStatus		5611492	0					
ANR	5611547	ArgumentList			5611492	1					
ANR	5611548	Identifier	VM_SUSPENDED		5611492	1					
ANR	5611549	CompoundStatement		17:38:348:348	5611492	1					
ANR	5611550	ExpressionStatement	m_result_msg = VMGAHP_ERR_VM_INVALID_OPERATION	564:2:15405:15451	5611492	0	True				
ANR	5611551	AssignmentExpression	m_result_msg = VMGAHP_ERR_VM_INVALID_OPERATION		5611492	0		=			
ANR	5611552	Identifier	m_result_msg		5611492	0					
ANR	5611553	Identifier	VMGAHP_ERR_VM_INVALID_OPERATION		5611492	1					
ANR	5611554	ReturnStatement	return false ;	565:2:15455:15467	5611492	1	True				
ANR	5611555	Identifier	false		5611492	0					
ANR	5611556	ExpressionStatement	m_restart_with_ckpt = false	567:1:15473:15500	5611492	5	True				
ANR	5611557	AssignmentExpression	m_restart_with_ckpt = false		5611492	0		=			
ANR	5611558	Identifier	m_restart_with_ckpt		5611492	0					
ANR	5611559	Identifier	false		5611492	1					
ANR	5611560	ExpressionStatement	m_is_checkpointed = false	569:1:15504:15529	5611492	6	True				
ANR	5611561	AssignmentExpression	m_is_checkpointed = false		5611492	0		=			
ANR	5611562	Identifier	m_is_checkpointed		5611492	0					
ANR	5611563	Identifier	false		5611492	1					
ANR	5611564	IfStatement	"if ( check_vm_read_access_file ( m_suspendfile . Value ( ) , true ) == false )"		5611492	7					
ANR	5611565	Condition	"check_vm_read_access_file ( m_suspendfile . Value ( ) , true ) == false"	571:5:15537:15599	5611492	0	True				
ANR	5611566	EqualityExpression	"check_vm_read_access_file ( m_suspendfile . Value ( ) , true ) == false"		5611492	0		==			
ANR	5611567	CallExpression	"check_vm_read_access_file ( m_suspendfile . Value ( ) , true )"		5611492	0					
ANR	5611568	Callee	check_vm_read_access_file		5611492	0					
ANR	5611569	Identifier	check_vm_read_access_file		5611492	0					
ANR	5611570	ArgumentList	m_suspendfile . Value ( )		5611492	1					
ANR	5611571	Argument	m_suspendfile . Value ( )		5611492	0					
ANR	5611572	CallExpression	m_suspendfile . Value ( )		5611492	0					
ANR	5611573	Callee	m_suspendfile . Value		5611492	0					
ANR	5611574	MemberAccess	m_suspendfile . Value		5611492	0					
ANR	5611575	Identifier	m_suspendfile		5611492	0					
ANR	5611576	Identifier	Value		5611492	1					
ANR	5611577	ArgumentList			5611492	1					
ANR	5611578	Argument	true		5611492	1					
ANR	5611579	Identifier	true		5611492	0					
ANR	5611580	Identifier	false		5611492	1					
ANR	5611581	CompoundStatement		25:71:550:550	5611492	1					
ANR	5611582	ExpressionStatement	m_result_msg = VMGAHP_ERR_VM_INVALID_SUSPEND_FILE	572:2:15607:15656	5611492	0	True				
ANR	5611583	AssignmentExpression	m_result_msg = VMGAHP_ERR_VM_INVALID_SUSPEND_FILE		5611492	0		=			
ANR	5611584	Identifier	m_result_msg		5611492	0					
ANR	5611585	Identifier	VMGAHP_ERR_VM_INVALID_SUSPEND_FILE		5611492	1					
ANR	5611586	ReturnStatement	return false ;	573:2:15660:15672	5611492	1	True				
ANR	5611587	Identifier	false		5611492	0					
ANR	5611588	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	576:1:15679:15712	5611492	8	True				
ANR	5611589	IdentifierDecl	priv = set_root_priv ( )		5611492	0					
ANR	5611590	IdentifierDeclType	priv_state		5611492	0					
ANR	5611591	Identifier	priv		5611492	1					
ANR	5611592	AssignmentExpression	priv = set_root_priv ( )		5611492	2		=			
ANR	5611593	Identifier	priv		5611492	0					
ANR	5611594	CallExpression	set_root_priv ( )		5611492	1					
ANR	5611595	Callee	set_root_priv		5611492	0					
ANR	5611596	Identifier	set_root_priv		5611492	0					
ANR	5611597	ArgumentList			5611492	1					
ANR	5611598	IdentifierDeclStatement	"int result = virDomainRestore ( m_libvirt_connection , m_suspendfile . Value ( ) ) ;"	577:1:15715:15789	5611492	9	True				
ANR	5611599	IdentifierDecl	"result = virDomainRestore ( m_libvirt_connection , m_suspendfile . Value ( ) )"		5611492	0					
ANR	5611600	IdentifierDeclType	int		5611492	0					
ANR	5611601	Identifier	result		5611492	1					
ANR	5611602	AssignmentExpression	"result = virDomainRestore ( m_libvirt_connection , m_suspendfile . Value ( ) )"		5611492	2		=			
ANR	5611603	Identifier	result		5611492	0					
ANR	5611604	CallExpression	"virDomainRestore ( m_libvirt_connection , m_suspendfile . Value ( ) )"		5611492	1					
ANR	5611605	Callee	virDomainRestore		5611492	0					
ANR	5611606	Identifier	virDomainRestore		5611492	0					
ANR	5611607	ArgumentList	m_libvirt_connection		5611492	1					
ANR	5611608	Argument	m_libvirt_connection		5611492	0					
ANR	5611609	Identifier	m_libvirt_connection		5611492	0					
ANR	5611610	Argument	m_suspendfile . Value ( )		5611492	1					
ANR	5611611	CallExpression	m_suspendfile . Value ( )		5611492	0					
ANR	5611612	Callee	m_suspendfile . Value		5611492	0					
ANR	5611613	MemberAccess	m_suspendfile . Value		5611492	0					
ANR	5611614	Identifier	m_suspendfile		5611492	0					
ANR	5611615	Identifier	Value		5611492	1					
ANR	5611616	ArgumentList			5611492	1					
ANR	5611617	ExpressionStatement	set_priv ( priv )	578:1:15792:15806	5611492	10	True				
ANR	5611618	CallExpression	set_priv ( priv )		5611492	0					
ANR	5611619	Callee	set_priv		5611492	0					
ANR	5611620	Identifier	set_priv		5611492	0					
ANR	5611621	ArgumentList	priv		5611492	1					
ANR	5611622	Argument	priv		5611492	0					
ANR	5611623	Identifier	priv		5611492	0					
ANR	5611624	IfStatement	if ( result != 0 )		5611492	11					
ANR	5611625	Condition	result != 0	580:5:15814:15824	5611492	0	True				
ANR	5611626	EqualityExpression	result != 0		5611492	0		!=			
ANR	5611627	Identifier	result		5611492	0					
ANR	5611628	PrimaryExpression	0		5611492	1					
ANR	5611629	CompoundStatement		34:19:775:775	5611492	1					
ANR	5611630	ReturnStatement	return false ;	585:2:15956:15968	5611492	0	True				
ANR	5611631	Identifier	false		5611492	0					
ANR	5611632	ExpressionStatement	setVMStatus ( VM_RUNNING )	588:1:15975:15998	5611492	12	True				
ANR	5611633	CallExpression	setVMStatus ( VM_RUNNING )		5611492	0					
ANR	5611634	Callee	setVMStatus		5611492	0					
ANR	5611635	Identifier	setVMStatus		5611492	0					
ANR	5611636	ArgumentList	VM_RUNNING		5611492	1					
ANR	5611637	Argument	VM_RUNNING		5611492	0					
ANR	5611638	Identifier	VM_RUNNING		5611492	0					
ANR	5611639	ExpressionStatement	m_cpu_time = 0	589:1:16001:16015	5611492	13	True				
ANR	5611640	AssignmentExpression	m_cpu_time = 0		5611492	0		=			
ANR	5611641	Identifier	m_cpu_time		5611492	0					
ANR	5611642	PrimaryExpression	0		5611492	1					
ANR	5611643	ExpressionStatement	unlink ( m_suspendfile . Value ( ) )	592:1:16043:16072	5611492	14	True				
ANR	5611644	CallExpression	unlink ( m_suspendfile . Value ( ) )		5611492	0					
ANR	5611645	Callee	unlink		5611492	0					
ANR	5611646	Identifier	unlink		5611492	0					
ANR	5611647	ArgumentList	m_suspendfile . Value ( )		5611492	1					
ANR	5611648	Argument	m_suspendfile . Value ( )		5611492	0					
ANR	5611649	CallExpression	m_suspendfile . Value ( )		5611492	0					
ANR	5611650	Callee	m_suspendfile . Value		5611492	0					
ANR	5611651	MemberAccess	m_suspendfile . Value		5611492	0					
ANR	5611652	Identifier	m_suspendfile		5611492	0					
ANR	5611653	Identifier	Value		5611492	1					
ANR	5611654	ArgumentList			5611492	1					
ANR	5611655	ExpressionStatement	"m_suspendfile = """""	593:1:16075:16093	5611492	15	True				
ANR	5611656	AssignmentExpression	"m_suspendfile = """""		5611492	0		=			
ANR	5611657	Identifier	m_suspendfile		5611492	0					
ANR	5611658	PrimaryExpression	""""""		5611492	1					
ANR	5611659	ReturnStatement	return true ;	594:1:16096:16107	5611492	16	True				
ANR	5611660	Identifier	true		5611492	0					
ANR	5611661	ReturnType	bool		5611492	1					
ANR	5611662	Identifier	VirshType :: Resume		5611492	2					
ANR	5611663	ParameterList			5611492	3					
ANR	5611664	CFGEntryNode	ENTRY		5611492		True				
ANR	5611665	CFGExitNode	EXIT		5611492		True				
ANR	5611666	Symbol	m_result_msg		5611492						
ANR	5611667	Symbol	VMGAHP_ERR_INTERNAL		5611492						
ANR	5611668	Symbol	VMGAHP_ERR_VM_INVALID_OPERATION		5611492						
ANR	5611669	Symbol	m_suspendfile		5611492						
ANR	5611670	Symbol	m_cpu_time		5611492						
ANR	5611671	Symbol	m_configfile . Length		5611492						
ANR	5611672	Symbol	false		5611492						
ANR	5611673	Symbol	getVMStatus		5611492						
ANR	5611674	Symbol	m_configfile		5611492						
ANR	5611675	Symbol	D_FULLDEBUG		5611492						
ANR	5611676	Symbol	set_root_priv		5611492						
ANR	5611677	Symbol	m_suspendfile . Value		5611492						
ANR	5611678	Symbol	VMGAHP_ERR_VM_INVALID_SUSPEND_FILE		5611492						
ANR	5611679	Symbol	result		5611492						
ANR	5611680	Symbol	m_restart_with_ckpt		5611492						
ANR	5611681	Symbol	m_libvirt_connection		5611492						
ANR	5611682	Symbol	VM_SUSPENDED		5611492						
ANR	5611683	Symbol	virDomainRestore		5611492						
ANR	5611684	Symbol	m_is_checkpointed		5611492						
ANR	5611685	Symbol	true		5611492						
ANR	5611686	Symbol	priv		5611492						
ANR	5611687	Symbol	VM_RUNNING		5611492						
ANR	5611688	Symbol	check_vm_read_access_file		5611492						
ANR	5611689	Function	VirshType :: Status	597:0:16112:19641							
ANR	5611690	FunctionDef	VirshType :: Status ()		5611689	0					
ANR	5611691	CompoundStatement		599:0:16137:19641	5611689	0					
ANR	5611692	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::Status\\n"" )"	600:1:16140:16191	5611689	0	True				
ANR	5611693	CallExpression	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::Status\\n"" )"		5611689	0					
ANR	5611694	Callee	vmprintf		5611689	0					
ANR	5611695	Identifier	vmprintf		5611689	0					
ANR	5611696	ArgumentList	D_FULLDEBUG		5611689	1					
ANR	5611697	Argument	D_FULLDEBUG		5611689	0					
ANR	5611698	Identifier	D_FULLDEBUG		5611689	0					
ANR	5611699	Argument	"""Inside VirshType::Status\\n"""		5611689	1					
ANR	5611700	PrimaryExpression	"""Inside VirshType::Status\\n"""		5611689	0					
ANR	5611701	IfStatement	if ( ( m_configfile . Length ( ) == 0 ) )		5611689	1					
ANR	5611702	Condition	m_configfile . Length ( ) == 0	602:5:16199:16226	5611689	0	True				
ANR	5611703	EqualityExpression	m_configfile . Length ( ) == 0		5611689	0		==			
ANR	5611704	CallExpression	m_configfile . Length ( )		5611689	0					
ANR	5611705	Callee	m_configfile . Length		5611689	0					
ANR	5611706	MemberAccess	m_configfile . Length		5611689	0					
ANR	5611707	Identifier	m_configfile		5611689	0					
ANR	5611708	Identifier	Length		5611689	1					
ANR	5611709	ArgumentList			5611689	1					
ANR	5611710	PrimaryExpression	0		5611689	1					
ANR	5611711	CompoundStatement		4:35:91:91	5611689	1					
ANR	5611712	ExpressionStatement	m_result_msg = VMGAHP_ERR_INTERNAL	603:3:16234:16268	5611689	0	True				
ANR	5611713	AssignmentExpression	m_result_msg = VMGAHP_ERR_INTERNAL		5611689	0		=			
ANR	5611714	Identifier	m_result_msg		5611689	0					
ANR	5611715	Identifier	VMGAHP_ERR_INTERNAL		5611689	1					
ANR	5611716	ReturnStatement	return false ;	604:3:16273:16285	5611689	1	True				
ANR	5611717	Identifier	false		5611689	0					
ANR	5611718	ExpressionStatement	"m_result_msg = """""	607:2:16294:16311	5611689	2	True				
ANR	5611719	AssignmentExpression	"m_result_msg = """""		5611689	0		=			
ANR	5611720	Identifier	m_result_msg		5611689	0					
ANR	5611721	PrimaryExpression	""""""		5611689	1					
ANR	5611722	IfStatement	if ( m_vm_networking )		5611689	3					
ANR	5611723	Condition	m_vm_networking	609:6:16320:16334	5611689	0	True				
ANR	5611724	Identifier	m_vm_networking		5611689	0					
ANR	5611725	CompoundStatement		11:24:200:200	5611689	1					
ANR	5611726	IfStatement	if ( m_vm_mac . IsEmpty ( ) == false )		5611689	0					
ANR	5611727	Condition	m_vm_mac . IsEmpty ( ) == false	610:7:16347:16373	5611689	0	True				
ANR	5611728	EqualityExpression	m_vm_mac . IsEmpty ( ) == false		5611689	0		==			
ANR	5611729	CallExpression	m_vm_mac . IsEmpty ( )		5611689	0					
ANR	5611730	Callee	m_vm_mac . IsEmpty		5611689	0					
ANR	5611731	MemberAccess	m_vm_mac . IsEmpty		5611689	0					
ANR	5611732	Identifier	m_vm_mac		5611689	0					
ANR	5611733	Identifier	IsEmpty		5611689	1					
ANR	5611734	ArgumentList			5611689	1					
ANR	5611735	Identifier	false		5611689	1					
ANR	5611736	CompoundStatement		12:37:239:239	5611689	1					
ANR	5611737	IfStatement	if ( m_result_msg . IsEmpty ( ) == false )		5611689	0					
ANR	5611738	Condition	m_result_msg . IsEmpty ( ) == false	611:8:16387:16417	5611689	0	True				
ANR	5611739	EqualityExpression	m_result_msg . IsEmpty ( ) == false		5611689	0		==			
ANR	5611740	CallExpression	m_result_msg . IsEmpty ( )		5611689	0					
ANR	5611741	Callee	m_result_msg . IsEmpty		5611689	0					
ANR	5611742	MemberAccess	m_result_msg . IsEmpty		5611689	0					
ANR	5611743	Identifier	m_result_msg		5611689	0					
ANR	5611744	Identifier	IsEmpty		5611689	1					
ANR	5611745	ArgumentList			5611689	1					
ANR	5611746	Identifier	false		5611689	1					
ANR	5611747	CompoundStatement		13:42:283:283	5611689	1					
ANR	5611748	ExpressionStatement	"m_result_msg += "" """	612:5:16428:16447	5611689	0	True				
ANR	5611749	AssignmentExpression	"m_result_msg += "" """		5611689	0		+=			
ANR	5611750	Identifier	m_result_msg		5611689	0					
ANR	5611751	PrimaryExpression	""" """		5611689	1					
ANR	5611752	ExpressionStatement	m_result_msg += VMGAHP_STATUS_COMMAND_MAC	614:4:16459:16500	5611689	1	True				
ANR	5611753	AssignmentExpression	m_result_msg += VMGAHP_STATUS_COMMAND_MAC		5611689	0		+=			
ANR	5611754	Identifier	m_result_msg		5611689	0					
ANR	5611755	Identifier	VMGAHP_STATUS_COMMAND_MAC		5611689	1					
ANR	5611756	ExpressionStatement	"m_result_msg += ""="""	615:4:16506:16525	5611689	2	True				
ANR	5611757	AssignmentExpression	"m_result_msg += ""="""		5611689	0		+=			
ANR	5611758	Identifier	m_result_msg		5611689	0					
ANR	5611759	PrimaryExpression	"""="""		5611689	1					
ANR	5611760	ExpressionStatement	m_result_msg += m_vm_mac	616:4:16531:16555	5611689	3	True				
ANR	5611761	AssignmentExpression	m_result_msg += m_vm_mac		5611689	0		+=			
ANR	5611762	Identifier	m_result_msg		5611689	0					
ANR	5611763	Identifier	m_vm_mac		5611689	1					
ANR	5611764	IfStatement	if ( m_vm_ip . IsEmpty ( ) == false )		5611689	1					
ANR	5611765	Condition	m_vm_ip . IsEmpty ( ) == false	619:7:16570:16595	5611689	0	True				
ANR	5611766	EqualityExpression	m_vm_ip . IsEmpty ( ) == false		5611689	0		==			
ANR	5611767	CallExpression	m_vm_ip . IsEmpty ( )		5611689	0					
ANR	5611768	Callee	m_vm_ip . IsEmpty		5611689	0					
ANR	5611769	MemberAccess	m_vm_ip . IsEmpty		5611689	0					
ANR	5611770	Identifier	m_vm_ip		5611689	0					
ANR	5611771	Identifier	IsEmpty		5611689	1					
ANR	5611772	ArgumentList			5611689	1					
ANR	5611773	Identifier	false		5611689	1					
ANR	5611774	CompoundStatement		21:36:461:461	5611689	1					
ANR	5611775	IfStatement	if ( m_result_msg . IsEmpty ( ) == false )		5611689	0					
ANR	5611776	Condition	m_result_msg . IsEmpty ( ) == false	620:8:16609:16639	5611689	0	True				
ANR	5611777	EqualityExpression	m_result_msg . IsEmpty ( ) == false		5611689	0		==			
ANR	5611778	CallExpression	m_result_msg . IsEmpty ( )		5611689	0					
ANR	5611779	Callee	m_result_msg . IsEmpty		5611689	0					
ANR	5611780	MemberAccess	m_result_msg . IsEmpty		5611689	0					
ANR	5611781	Identifier	m_result_msg		5611689	0					
ANR	5611782	Identifier	IsEmpty		5611689	1					
ANR	5611783	ArgumentList			5611689	1					
ANR	5611784	Identifier	false		5611689	1					
ANR	5611785	CompoundStatement		22:42:505:505	5611689	1					
ANR	5611786	ExpressionStatement	"m_result_msg += "" """	621:5:16650:16669	5611689	0	True				
ANR	5611787	AssignmentExpression	"m_result_msg += "" """		5611689	0		+=			
ANR	5611788	Identifier	m_result_msg		5611689	0					
ANR	5611789	PrimaryExpression	""" """		5611689	1					
ANR	5611790	ExpressionStatement	m_result_msg += VMGAHP_STATUS_COMMAND_IP	623:4:16681:16721	5611689	1	True				
ANR	5611791	AssignmentExpression	m_result_msg += VMGAHP_STATUS_COMMAND_IP		5611689	0		+=			
ANR	5611792	Identifier	m_result_msg		5611689	0					
ANR	5611793	Identifier	VMGAHP_STATUS_COMMAND_IP		5611689	1					
ANR	5611794	ExpressionStatement	"m_result_msg += ""="""	624:4:16727:16746	5611689	2	True				
ANR	5611795	AssignmentExpression	"m_result_msg += ""="""		5611689	0		+=			
ANR	5611796	Identifier	m_result_msg		5611689	0					
ANR	5611797	PrimaryExpression	"""="""		5611689	1					
ANR	5611798	ExpressionStatement	m_result_msg += m_vm_ip	625:4:16752:16775	5611689	3	True				
ANR	5611799	AssignmentExpression	m_result_msg += m_vm_ip		5611689	0		+=			
ANR	5611800	Identifier	m_result_msg		5611689	0					
ANR	5611801	Identifier	m_vm_ip		5611689	1					
ANR	5611802	IfStatement	if ( m_result_msg . IsEmpty ( ) == false )		5611689	4					
ANR	5611803	Condition	m_result_msg . IsEmpty ( ) == false	629:6:16793:16823	5611689	0	True				
ANR	5611804	EqualityExpression	m_result_msg . IsEmpty ( ) == false		5611689	0		==			
ANR	5611805	CallExpression	m_result_msg . IsEmpty ( )		5611689	0					
ANR	5611806	Callee	m_result_msg . IsEmpty		5611689	0					
ANR	5611807	MemberAccess	m_result_msg . IsEmpty		5611689	0					
ANR	5611808	Identifier	m_result_msg		5611689	0					
ANR	5611809	Identifier	IsEmpty		5611689	1					
ANR	5611810	ArgumentList			5611689	1					
ANR	5611811	Identifier	false		5611689	1					
ANR	5611812	CompoundStatement		31:40:689:689	5611689	1					
ANR	5611813	ExpressionStatement	"m_result_msg += "" """	630:3:16832:16851	5611689	0	True				
ANR	5611814	AssignmentExpression	"m_result_msg += "" """		5611689	0		+=			
ANR	5611815	Identifier	m_result_msg		5611689	0					
ANR	5611816	PrimaryExpression	""" """		5611689	1					
ANR	5611817	ExpressionStatement	m_result_msg += VMGAHP_STATUS_COMMAND_STATUS	633:2:16860:16904	5611689	5	True				
ANR	5611818	AssignmentExpression	m_result_msg += VMGAHP_STATUS_COMMAND_STATUS		5611689	0		+=			
ANR	5611819	Identifier	m_result_msg		5611689	0					
ANR	5611820	Identifier	VMGAHP_STATUS_COMMAND_STATUS		5611689	1					
ANR	5611821	ExpressionStatement	"m_result_msg += ""="""	634:2:16908:16927	5611689	6	True				
ANR	5611822	AssignmentExpression	"m_result_msg += ""="""		5611689	0		+=			
ANR	5611823	Identifier	m_result_msg		5611689	0					
ANR	5611824	PrimaryExpression	"""="""		5611689	1					
ANR	5611825	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	636:1:16931:16964	5611689	7	True				
ANR	5611826	IdentifierDecl	priv = set_root_priv ( )		5611689	0					
ANR	5611827	IdentifierDeclType	priv_state		5611689	0					
ANR	5611828	Identifier	priv		5611689	1					
ANR	5611829	AssignmentExpression	priv = set_root_priv ( )		5611689	2		=			
ANR	5611830	Identifier	priv		5611689	0					
ANR	5611831	CallExpression	set_root_priv ( )		5611689	1					
ANR	5611832	Callee	set_root_priv		5611689	0					
ANR	5611833	Identifier	set_root_priv		5611689	0					
ANR	5611834	ArgumentList			5611689	1					
ANR	5611835	IdentifierDeclStatement	"virDomainPtr dom = virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) ) ;"	637:1:16967:17048	5611689	8	True				
ANR	5611836	IdentifierDecl	"dom = virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) )"		5611689	0					
ANR	5611837	IdentifierDeclType	virDomainPtr		5611689	0					
ANR	5611838	Identifier	dom		5611689	1					
ANR	5611839	AssignmentExpression	"dom = virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) )"		5611689	2		=			
ANR	5611840	Identifier	dom		5611689	0					
ANR	5611841	CallExpression	"virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) )"		5611689	1					
ANR	5611842	Callee	virDomainLookupByName		5611689	0					
ANR	5611843	Identifier	virDomainLookupByName		5611689	0					
ANR	5611844	ArgumentList	m_libvirt_connection		5611689	1					
ANR	5611845	Argument	m_libvirt_connection		5611689	0					
ANR	5611846	Identifier	m_libvirt_connection		5611689	0					
ANR	5611847	Argument	m_vm_name . Value ( )		5611689	1					
ANR	5611848	CallExpression	m_vm_name . Value ( )		5611689	0					
ANR	5611849	Callee	m_vm_name . Value		5611689	0					
ANR	5611850	MemberAccess	m_vm_name . Value		5611689	0					
ANR	5611851	Identifier	m_vm_name		5611689	0					
ANR	5611852	Identifier	Value		5611689	1					
ANR	5611853	ArgumentList			5611689	1					
ANR	5611854	ExpressionStatement	set_priv ( priv )	638:1:17051:17065	5611689	9	True				
ANR	5611855	CallExpression	set_priv ( priv )		5611689	0					
ANR	5611856	Callee	set_priv		5611689	0					
ANR	5611857	Identifier	set_priv		5611689	0					
ANR	5611858	ArgumentList	priv		5611689	1					
ANR	5611859	Argument	priv		5611689	0					
ANR	5611860	Identifier	priv		5611689	0					
ANR	5611861	IfStatement	if ( dom == NULL )		5611689	10					
ANR	5611862	Condition	dom == NULL	639:4:17071:17081	5611689	0	True				
ANR	5611863	EqualityExpression	dom == NULL		5611689	0		==			
ANR	5611864	Identifier	dom		5611689	0					
ANR	5611865	Identifier	NULL		5611689	1					
ANR	5611866	CompoundStatement		43:2:951:1010	5611689	1					
ANR	5611867	IdentifierDeclStatement	virErrorPtr err = virConnGetLastError ( m_libvirt_connection ) ;	641:2:17089:17148	5611689	0	True				
ANR	5611868	IdentifierDecl	err = virConnGetLastError ( m_libvirt_connection )		5611689	0					
ANR	5611869	IdentifierDeclType	virErrorPtr		5611689	0					
ANR	5611870	Identifier	err		5611689	1					
ANR	5611871	AssignmentExpression	err = virConnGetLastError ( m_libvirt_connection )		5611689	2		=			
ANR	5611872	Identifier	err		5611689	0					
ANR	5611873	CallExpression	virConnGetLastError ( m_libvirt_connection )		5611689	1					
ANR	5611874	Callee	virConnGetLastError		5611689	0					
ANR	5611875	Identifier	virConnGetLastError		5611689	0					
ANR	5611876	ArgumentList	m_libvirt_connection		5611689	1					
ANR	5611877	Argument	m_libvirt_connection		5611689	0					
ANR	5611878	Identifier	m_libvirt_connection		5611689	0					
ANR	5611879	IfStatement	if ( err )		5611689	1					
ANR	5611880	Condition	err	643:10:17161:17163	5611689	0	True				
ANR	5611881	Identifier	err		5611689	0					
ANR	5611882	CompoundStatement		46:2:1031:1031	5611689	1					
ANR	5611883	SwitchStatement	switch ( err -> code )		5611689	0					
ANR	5611884	Condition	err -> code	645:11:17182:17190	5611689	0	True				
ANR	5611885	PtrMemberAccess	err -> code		5611689	0					
ANR	5611886	Identifier	err		5611689	0					
ANR	5611887	Identifier	code		5611689	1					
ANR	5611888	CompoundStatement		48:3:1058:1058	5611689	1					
ANR	5611889	Statement	case	647:4:17202:17205	5611689	0	True				
ANR	5611890	Statement	(	647:9:17207:17207	5611689	1	True				
ANR	5611891	Statement	VIR_ERR_NO_DOMAIN	647:10:17208:17224	5611689	2	True				
ANR	5611892	Statement	)	647:27:17225:17225	5611689	3	True				
ANR	5611893	Statement	:	647:28:17226:17226	5611689	4	True				
ANR	5611894	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""Couldn't find domain %s, assuming it was shutdown\\n"" , m_vm_name . Value ( ) )"	649:5:17288:17383	5611689	5	True				
ANR	5611895	CallExpression	"vmprintf ( D_FULLDEBUG , ""Couldn't find domain %s, assuming it was shutdown\\n"" , m_vm_name . Value ( ) )"		5611689	0					
ANR	5611896	Callee	vmprintf		5611689	0					
ANR	5611897	Identifier	vmprintf		5611689	0					
ANR	5611898	ArgumentList	D_FULLDEBUG		5611689	1					
ANR	5611899	Argument	D_FULLDEBUG		5611689	0					
ANR	5611900	Identifier	D_FULLDEBUG		5611689	0					
ANR	5611901	Argument	"""Couldn't find domain %s, assuming it was shutdown\\n"""		5611689	1					
ANR	5611902	PrimaryExpression	"""Couldn't find domain %s, assuming it was shutdown\\n"""		5611689	0					
ANR	5611903	Argument	m_vm_name . Value ( )		5611689	2					
ANR	5611904	CallExpression	m_vm_name . Value ( )		5611689	0					
ANR	5611905	Callee	m_vm_name . Value		5611689	0					
ANR	5611906	MemberAccess	m_vm_name . Value		5611689	0					
ANR	5611907	Identifier	m_vm_name		5611689	0					
ANR	5611908	Identifier	Value		5611689	1					
ANR	5611909	ArgumentList			5611689	1					
ANR	5611910	IfStatement	if ( getVMStatus ( ) == VM_RUNNING )		5611689	6					
ANR	5611911	Condition	getVMStatus ( ) == VM_RUNNING	650:8:17393:17419	5611689	0	True				
ANR	5611912	EqualityExpression	getVMStatus ( ) == VM_RUNNING		5611689	0		==			
ANR	5611913	CallExpression	getVMStatus ( )		5611689	0					
ANR	5611914	Callee	getVMStatus		5611689	0					
ANR	5611915	Identifier	getVMStatus		5611689	0					
ANR	5611916	ArgumentList			5611689	1					
ANR	5611917	Identifier	VM_RUNNING		5611689	1					
ANR	5611918	CompoundStatement		52:37:1284:1284	5611689	1					
ANR	5611919	ExpressionStatement	m_self_shutdown = true	651:6:17430:17452	5611689	0	True				
ANR	5611920	AssignmentExpression	m_self_shutdown = true		5611689	0		=			
ANR	5611921	Identifier	m_self_shutdown		5611689	0					
ANR	5611922	Identifier	true		5611689	1					
ANR	5611923	IfStatement	if ( getVMStatus ( ) != VM_STOPPED )		5611689	7					
ANR	5611924	Condition	getVMStatus ( ) != VM_STOPPED	653:8:17469:17495	5611689	0	True				
ANR	5611925	EqualityExpression	getVMStatus ( ) != VM_STOPPED		5611689	0		!=			
ANR	5611926	CallExpression	getVMStatus ( )		5611689	0					
ANR	5611927	Callee	getVMStatus		5611689	0					
ANR	5611928	Identifier	getVMStatus		5611689	0					
ANR	5611929	ArgumentList			5611689	1					
ANR	5611930	Identifier	VM_STOPPED		5611689	1					
ANR	5611931	CompoundStatement		55:37:1360:1360	5611689	1					
ANR	5611932	ExpressionStatement	setVMStatus ( VM_STOPPED )	654:6:17506:17529	5611689	0	True				
ANR	5611933	CallExpression	setVMStatus ( VM_STOPPED )		5611689	0					
ANR	5611934	Callee	setVMStatus		5611689	0					
ANR	5611935	Identifier	setVMStatus		5611689	0					
ANR	5611936	ArgumentList	VM_STOPPED		5611689	1					
ANR	5611937	Argument	VM_STOPPED		5611689	0					
ANR	5611938	Identifier	VM_STOPPED		5611689	0					
ANR	5611939	ExpressionStatement	m_stop_time . getTime ( )	655:6:17537:17558	5611689	1	True				
ANR	5611940	CallExpression	m_stop_time . getTime ( )		5611689	0					
ANR	5611941	Callee	m_stop_time . getTime		5611689	0					
ANR	5611942	MemberAccess	m_stop_time . getTime		5611689	0					
ANR	5611943	Identifier	m_stop_time		5611689	0					
ANR	5611944	Identifier	getTime		5611689	1					
ANR	5611945	ArgumentList			5611689	1					
ANR	5611946	ExpressionStatement	"m_result_msg += ""Stopped"""	657:5:17572:17597	5611689	8	True				
ANR	5611947	AssignmentExpression	"m_result_msg += ""Stopped"""		5611689	0		+=			
ANR	5611948	Identifier	m_result_msg		5611689	0					
ANR	5611949	PrimaryExpression	"""Stopped"""		5611689	1					
ANR	5611950	ReturnStatement	return true ;	658:5:17604:17615	5611689	9	True				
ANR	5611951	Identifier	true		5611689	0					
ANR	5611952	BreakStatement	break ;	659:4:17621:17626	5611689	10	True				
ANR	5611953	Statement	case	660:4:17632:17635	5611689	11	True				
ANR	5611954	Statement	(	660:9:17637:17637	5611689	12	True				
ANR	5611955	Statement	VIR_ERR_SYSTEM_ERROR	660:10:17638:17657	5611689	13	True				
ANR	5611956	Statement	)	660:30:17658:17658	5611689	14	True				
ANR	5611957	Statement	:	660:31:17659:17659	5611689	15	True				
ANR	5611958	ExpressionStatement	"vmprintf ( D_ALWAYS , ""libvirt communication error detected, attempting to reconnect...\\n"" )"	661:5:17669:17757	5611689	16	True				
ANR	5611959	CallExpression	"vmprintf ( D_ALWAYS , ""libvirt communication error detected, attempting to reconnect...\\n"" )"		5611689	0					
ANR	5611960	Callee	vmprintf		5611689	0					
ANR	5611961	Identifier	vmprintf		5611689	0					
ANR	5611962	ArgumentList	D_ALWAYS		5611689	1					
ANR	5611963	Argument	D_ALWAYS		5611689	0					
ANR	5611964	Identifier	D_ALWAYS		5611689	0					
ANR	5611965	Argument	"""libvirt communication error detected, attempting to reconnect...\\n"""		5611689	1					
ANR	5611966	PrimaryExpression	"""libvirt communication error detected, attempting to reconnect...\\n"""		5611689	0					
ANR	5611967	ExpressionStatement	this -> Connect ( )	662:5:17764:17779	5611689	17	True				
ANR	5611968	CallExpression	this -> Connect ( )		5611689	0					
ANR	5611969	Callee	this -> Connect		5611689	0					
ANR	5611970	PtrMemberAccess	this -> Connect		5611689	0					
ANR	5611971	Identifier	this		5611689	0					
ANR	5611972	Identifier	Connect		5611689	1					
ANR	5611973	ArgumentList			5611689	1					
ANR	5611974	IfStatement	"if ( NULL == ( dom = virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) ) ) )"		5611689	18					
ANR	5611975	Condition	"NULL == ( dom = virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) ) )"	663:10:17791:17871	5611689	0	True				
ANR	5611976	EqualityExpression	"NULL == ( dom = virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) ) )"		5611689	0		==			
ANR	5611977	Identifier	NULL		5611689	0					
ANR	5611978	AssignmentExpression	"dom = virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) )"		5611689	1		=			
ANR	5611979	Identifier	dom		5611689	0					
ANR	5611980	CallExpression	"virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) )"		5611689	1					
ANR	5611981	Callee	virDomainLookupByName		5611689	0					
ANR	5611982	Identifier	virDomainLookupByName		5611689	0					
ANR	5611983	ArgumentList	m_libvirt_connection		5611689	1					
ANR	5611984	Argument	m_libvirt_connection		5611689	0					
ANR	5611985	Identifier	m_libvirt_connection		5611689	0					
ANR	5611986	Argument	m_vm_name . Value ( )		5611689	1					
ANR	5611987	CallExpression	m_vm_name . Value ( )		5611689	0					
ANR	5611988	Callee	m_vm_name . Value		5611689	0					
ANR	5611989	MemberAccess	m_vm_name . Value		5611689	0					
ANR	5611990	Identifier	m_vm_name		5611689	0					
ANR	5611991	Identifier	Value		5611689	1					
ANR	5611992	ArgumentList			5611689	1					
ANR	5611993	CompoundStatement		66:5:1742:1742	5611689	1					
ANR	5611994	ExpressionStatement	"vmprintf ( D_ALWAYS , ""could not reconnect to libvirt... marking vm as stopped (should exit)\\n"" )"	665:6:17888:17981	5611689	0	True				
ANR	5611995	CallExpression	"vmprintf ( D_ALWAYS , ""could not reconnect to libvirt... marking vm as stopped (should exit)\\n"" )"		5611689	0					
ANR	5611996	Callee	vmprintf		5611689	0					
ANR	5611997	Identifier	vmprintf		5611689	0					
ANR	5611998	ArgumentList	D_ALWAYS		5611689	1					
ANR	5611999	Argument	D_ALWAYS		5611689	0					
ANR	5612000	Identifier	D_ALWAYS		5611689	0					
ANR	5612001	Argument	"""could not reconnect to libvirt... marking vm as stopped (should exit)\\n"""		5611689	1					
ANR	5612002	PrimaryExpression	"""could not reconnect to libvirt... marking vm as stopped (should exit)\\n"""		5611689	0					
ANR	5612003	IfStatement	if ( getVMStatus ( ) == VM_RUNNING )		5611689	1					
ANR	5612004	Condition	getVMStatus ( ) == VM_RUNNING	666:9:17992:18018	5611689	0	True				
ANR	5612005	EqualityExpression	getVMStatus ( ) == VM_RUNNING		5611689	0		==			
ANR	5612006	CallExpression	getVMStatus ( )		5611689	0					
ANR	5612007	Callee	getVMStatus		5611689	0					
ANR	5612008	Identifier	getVMStatus		5611689	0					
ANR	5612009	ArgumentList			5611689	1					
ANR	5612010	Identifier	VM_RUNNING		5611689	1					
ANR	5612011	CompoundStatement		68:38:1883:1883	5611689	1					
ANR	5612012	ExpressionStatement	m_self_shutdown = true	667:7:18030:18052	5611689	0	True				
ANR	5612013	AssignmentExpression	m_self_shutdown = true		5611689	0		=			
ANR	5612014	Identifier	m_self_shutdown		5611689	0					
ANR	5612015	Identifier	true		5611689	1					
ANR	5612016	IfStatement	if ( getVMStatus ( ) != VM_STOPPED )		5611689	2					
ANR	5612017	Condition	getVMStatus ( ) != VM_STOPPED	669:9:18071:18097	5611689	0	True				
ANR	5612018	EqualityExpression	getVMStatus ( ) != VM_STOPPED		5611689	0		!=			
ANR	5612019	CallExpression	getVMStatus ( )		5611689	0					
ANR	5612020	Callee	getVMStatus		5611689	0					
ANR	5612021	Identifier	getVMStatus		5611689	0					
ANR	5612022	ArgumentList			5611689	1					
ANR	5612023	Identifier	VM_STOPPED		5611689	1					
ANR	5612024	CompoundStatement		71:38:1962:1962	5611689	1					
ANR	5612025	ExpressionStatement	setVMStatus ( VM_STOPPED )	670:7:18109:18132	5611689	0	True				
ANR	5612026	CallExpression	setVMStatus ( VM_STOPPED )		5611689	0					
ANR	5612027	Callee	setVMStatus		5611689	0					
ANR	5612028	Identifier	setVMStatus		5611689	0					
ANR	5612029	ArgumentList	VM_STOPPED		5611689	1					
ANR	5612030	Argument	VM_STOPPED		5611689	0					
ANR	5612031	Identifier	VM_STOPPED		5611689	0					
ANR	5612032	ExpressionStatement	m_stop_time . getTime ( )	671:7:18141:18162	5611689	1	True				
ANR	5612033	CallExpression	m_stop_time . getTime ( )		5611689	0					
ANR	5612034	Callee	m_stop_time . getTime		5611689	0					
ANR	5612035	MemberAccess	m_stop_time . getTime		5611689	0					
ANR	5612036	Identifier	m_stop_time		5611689	0					
ANR	5612037	Identifier	getTime		5611689	1					
ANR	5612038	ArgumentList			5611689	1					
ANR	5612039	ExpressionStatement	"m_result_msg += ""Stopped"""	673:6:18178:18203	5611689	3	True				
ANR	5612040	AssignmentExpression	"m_result_msg += ""Stopped"""		5611689	0		+=			
ANR	5612041	Identifier	m_result_msg		5611689	0					
ANR	5612042	PrimaryExpression	"""Stopped"""		5611689	1					
ANR	5612043	ReturnStatement	return true ;	674:6:18211:18222	5611689	4	True				
ANR	5612044	Identifier	true		5611689	0					
ANR	5612045	ElseStatement	else		5611689	0					
ANR	5612046	CompoundStatement		79:5:2108:2108	5611689	0					
ANR	5612047	ExpressionStatement	"vmprintf ( D_ALWAYS , ""libvirt has successfully reconnected!\\n"" )"	678:6:18254:18315	5611689	0	True				
ANR	5612048	CallExpression	"vmprintf ( D_ALWAYS , ""libvirt has successfully reconnected!\\n"" )"		5611689	0					
ANR	5612049	Callee	vmprintf		5611689	0					
ANR	5612050	Identifier	vmprintf		5611689	0					
ANR	5612051	ArgumentList	D_ALWAYS		5611689	1					
ANR	5612052	Argument	D_ALWAYS		5611689	0					
ANR	5612053	Identifier	D_ALWAYS		5611689	0					
ANR	5612054	Argument	"""libvirt has successfully reconnected!\\n"""		5611689	1					
ANR	5612055	PrimaryExpression	"""libvirt has successfully reconnected!\\n"""		5611689	0					
ANR	5612056	BreakStatement	break ;	680:4:18328:18333	5611689	19	True				
ANR	5612057	Label	default :	681:3:18338:18345	5611689	20	True				
ANR	5612058	Identifier	default		5611689	0					
ANR	5612059	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Error finding domain %s(%d): %s\\n"" , m_vm_name . Value ( ) , err -> code , err -> message )"	682:4:18351:18451	5611689	21	True				
ANR	5612060	CallExpression	"vmprintf ( D_ALWAYS , ""Error finding domain %s(%d): %s\\n"" , m_vm_name . Value ( ) , err -> code , err -> message )"		5611689	0					
ANR	5612061	Callee	vmprintf		5611689	0					
ANR	5612062	Identifier	vmprintf		5611689	0					
ANR	5612063	ArgumentList	D_ALWAYS		5611689	1					
ANR	5612064	Argument	D_ALWAYS		5611689	0					
ANR	5612065	Identifier	D_ALWAYS		5611689	0					
ANR	5612066	Argument	"""Error finding domain %s(%d): %s\\n"""		5611689	1					
ANR	5612067	PrimaryExpression	"""Error finding domain %s(%d): %s\\n"""		5611689	0					
ANR	5612068	Argument	m_vm_name . Value ( )		5611689	2					
ANR	5612069	CallExpression	m_vm_name . Value ( )		5611689	0					
ANR	5612070	Callee	m_vm_name . Value		5611689	0					
ANR	5612071	MemberAccess	m_vm_name . Value		5611689	0					
ANR	5612072	Identifier	m_vm_name		5611689	0					
ANR	5612073	Identifier	Value		5611689	1					
ANR	5612074	ArgumentList			5611689	1					
ANR	5612075	Argument	err -> code		5611689	3					
ANR	5612076	PtrMemberAccess	err -> code		5611689	0					
ANR	5612077	Identifier	err		5611689	0					
ANR	5612078	Identifier	code		5611689	1					
ANR	5612079	Argument	err -> message		5611689	4					
ANR	5612080	PtrMemberAccess	err -> message		5611689	0					
ANR	5612081	Identifier	err		5611689	0					
ANR	5612082	Identifier	message		5611689	1					
ANR	5612083	ReturnStatement	return false ;	683:4:18457:18469	5611689	22	True				
ANR	5612084	Identifier	false		5611689	0					
ANR	5612085	ElseStatement	else		5611689	0					
ANR	5612086	CompoundStatement		89:2:2351:2351	5611689	0					
ANR	5612087	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Error finding domain, no error returned from libvirt\\n"" )"	688:3:18494:18571	5611689	0	True				
ANR	5612088	CallExpression	"vmprintf ( D_ALWAYS , ""Error finding domain, no error returned from libvirt\\n"" )"		5611689	0					
ANR	5612089	Callee	vmprintf		5611689	0					
ANR	5612090	Identifier	vmprintf		5611689	0					
ANR	5612091	ArgumentList	D_ALWAYS		5611689	1					
ANR	5612092	Argument	D_ALWAYS		5611689	0					
ANR	5612093	Identifier	D_ALWAYS		5611689	0					
ANR	5612094	Argument	"""Error finding domain, no error returned from libvirt\\n"""		5611689	1					
ANR	5612095	PrimaryExpression	"""Error finding domain, no error returned from libvirt\\n"""		5611689	0					
ANR	5612096	ReturnStatement	return false ;	689:3:18576:18588	5611689	1	True				
ANR	5612097	Identifier	false		5611689	0					
ANR	5612098	IdentifierDeclStatement	virDomainInfo _info ;	694:1:18600:18619	5611689	11	True				
ANR	5612099	IdentifierDecl	_info		5611689	0					
ANR	5612100	IdentifierDeclType	virDomainInfo		5611689	0					
ANR	5612101	Identifier	_info		5611689	1					
ANR	5612102	IdentifierDeclStatement	virDomainInfoPtr info = & _info ;	695:1:18622:18652	5611689	12	True				
ANR	5612103	IdentifierDecl	info = & _info		5611689	0					
ANR	5612104	IdentifierDeclType	virDomainInfoPtr		5611689	0					
ANR	5612105	Identifier	info		5611689	1					
ANR	5612106	AssignmentExpression	info = & _info		5611689	2		=			
ANR	5612107	Identifier	info		5611689	0					
ANR	5612108	UnaryOperationExpression	& _info		5611689	1					
ANR	5612109	UnaryOperator	&		5611689	0					
ANR	5612110	Identifier	_info		5611689	1					
ANR	5612111	IfStatement	"if ( virDomainGetInfo ( dom , info ) < 0 )"		5611689	13					
ANR	5612112	Condition	"virDomainGetInfo ( dom , info ) < 0"	696:4:18658:18688	5611689	0	True				
ANR	5612113	RelationalExpression	"virDomainGetInfo ( dom , info ) < 0"		5611689	0		<			
ANR	5612114	CallExpression	"virDomainGetInfo ( dom , info )"		5611689	0					
ANR	5612115	Callee	virDomainGetInfo		5611689	0					
ANR	5612116	Identifier	virDomainGetInfo		5611689	0					
ANR	5612117	ArgumentList	dom		5611689	1					
ANR	5612118	Argument	dom		5611689	0					
ANR	5612119	Identifier	dom		5611689	0					
ANR	5612120	Argument	info		5611689	1					
ANR	5612121	Identifier	info		5611689	0					
ANR	5612122	PrimaryExpression	0		5611689	1					
ANR	5612123	CompoundStatement		100:5:2563:2622	5611689	1					
ANR	5612124	IdentifierDeclStatement	virErrorPtr err = virConnGetLastError ( m_libvirt_connection ) ;	698:5:18701:18760	5611689	0	True				
ANR	5612125	IdentifierDecl	err = virConnGetLastError ( m_libvirt_connection )		5611689	0					
ANR	5612126	IdentifierDeclType	virErrorPtr		5611689	0					
ANR	5612127	Identifier	err		5611689	1					
ANR	5612128	AssignmentExpression	err = virConnGetLastError ( m_libvirt_connection )		5611689	2		=			
ANR	5612129	Identifier	err		5611689	0					
ANR	5612130	CallExpression	virConnGetLastError ( m_libvirt_connection )		5611689	1					
ANR	5612131	Callee	virConnGetLastError		5611689	0					
ANR	5612132	Identifier	virConnGetLastError		5611689	0					
ANR	5612133	ArgumentList	m_libvirt_connection		5611689	1					
ANR	5612134	Argument	m_libvirt_connection		5611689	0					
ANR	5612135	Identifier	m_libvirt_connection		5611689	0					
ANR	5612136	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Error finding domain info %s: %s\\n"" , m_vm_name . Value ( ) , ( err ? err -> message : ""No reason found"" ) )"	699:5:18767:18884	5611689	1	True				
ANR	5612137	CallExpression	"vmprintf ( D_ALWAYS , ""Error finding domain info %s: %s\\n"" , m_vm_name . Value ( ) , ( err ? err -> message : ""No reason found"" ) )"		5611689	0					
ANR	5612138	Callee	vmprintf		5611689	0					
ANR	5612139	Identifier	vmprintf		5611689	0					
ANR	5612140	ArgumentList	D_ALWAYS		5611689	1					
ANR	5612141	Argument	D_ALWAYS		5611689	0					
ANR	5612142	Identifier	D_ALWAYS		5611689	0					
ANR	5612143	Argument	"""Error finding domain info %s: %s\\n"""		5611689	1					
ANR	5612144	PrimaryExpression	"""Error finding domain info %s: %s\\n"""		5611689	0					
ANR	5612145	Argument	m_vm_name . Value ( )		5611689	2					
ANR	5612146	CallExpression	m_vm_name . Value ( )		5611689	0					
ANR	5612147	Callee	m_vm_name . Value		5611689	0					
ANR	5612148	MemberAccess	m_vm_name . Value		5611689	0					
ANR	5612149	Identifier	m_vm_name		5611689	0					
ANR	5612150	Identifier	Value		5611689	1					
ANR	5612151	ArgumentList			5611689	1					
ANR	5612152	Argument	"err ? err -> message : ""No reason found"""		5611689	3					
ANR	5612153	ConditionalExpression	"err ? err -> message : ""No reason found"""		5611689	0					
ANR	5612154	Condition	err		5611689	0					
ANR	5612155	Identifier	err		5611689	0					
ANR	5612156	PtrMemberAccess	err -> message		5611689	1					
ANR	5612157	Identifier	err		5611689	0					
ANR	5612158	Identifier	message		5611689	1					
ANR	5612159	PrimaryExpression	"""No reason found"""		5611689	2					
ANR	5612160	ReturnStatement	return false ;	700:5:18891:18903	5611689	2	True				
ANR	5612161	Identifier	false		5611689	0					
ANR	5612162	IfStatement	if ( info -> state == VIR_DOMAIN_RUNNING || info -> state == VIR_DOMAIN_BLOCKED )		5611689	14					
ANR	5612163	Condition	info -> state == VIR_DOMAIN_RUNNING || info -> state == VIR_DOMAIN_BLOCKED	702:4:18914:18983	5611689	0	True				
ANR	5612164	OrExpression	info -> state == VIR_DOMAIN_RUNNING || info -> state == VIR_DOMAIN_BLOCKED		5611689	0		||			
ANR	5612165	EqualityExpression	info -> state == VIR_DOMAIN_RUNNING		5611689	0		==			
ANR	5612166	PtrMemberAccess	info -> state		5611689	0					
ANR	5612167	Identifier	info		5611689	0					
ANR	5612168	Identifier	state		5611689	1					
ANR	5612169	Identifier	VIR_DOMAIN_RUNNING		5611689	1					
ANR	5612170	EqualityExpression	info -> state == VIR_DOMAIN_BLOCKED		5611689	1		==			
ANR	5612171	PtrMemberAccess	info -> state		5611689	0					
ANR	5612172	Identifier	info		5611689	0					
ANR	5612173	Identifier	state		5611689	1					
ANR	5612174	Identifier	VIR_DOMAIN_BLOCKED		5611689	1					
ANR	5612175	CompoundStatement		105:3:2851:2851	5611689	1					
ANR	5612176	ExpressionStatement	setVMStatus ( VM_RUNNING )	704:5:18996:19019	5611689	0	True				
ANR	5612177	CallExpression	setVMStatus ( VM_RUNNING )		5611689	0					
ANR	5612178	Callee	setVMStatus		5611689	0					
ANR	5612179	Identifier	setVMStatus		5611689	0					
ANR	5612180	ArgumentList	VM_RUNNING		5611689	1					
ANR	5612181	Argument	VM_RUNNING		5611689	0					
ANR	5612182	Identifier	VM_RUNNING		5611689	0					
ANR	5612183	ExpressionStatement	m_cpu_time = info -> cpuTime / 1000000000.0	706:5:19073:19114	5611689	1	True				
ANR	5612184	AssignmentExpression	m_cpu_time = info -> cpuTime / 1000000000.0		5611689	0		=			
ANR	5612185	Identifier	m_cpu_time		5611689	0					
ANR	5612186	MultiplicativeExpression	info -> cpuTime / 1000000000.0		5611689	1		/			
ANR	5612187	PtrMemberAccess	info -> cpuTime		5611689	0					
ANR	5612188	Identifier	info		5611689	0					
ANR	5612189	Identifier	cpuTime		5611689	1					
ANR	5612190	PrimaryExpression	1000000000.0		5611689	1					
ANR	5612191	ExpressionStatement	"m_result_msg += ""Running"""	707:5:19121:19146	5611689	2	True				
ANR	5612192	AssignmentExpression	"m_result_msg += ""Running"""		5611689	0		+=			
ANR	5612193	Identifier	m_result_msg		5611689	0					
ANR	5612194	PrimaryExpression	"""Running"""		5611689	1					
ANR	5612195	ExpressionStatement	virDomainFree ( dom )	708:5:19153:19171	5611689	3	True				
ANR	5612196	CallExpression	virDomainFree ( dom )		5611689	0					
ANR	5612197	Callee	virDomainFree		5611689	0					
ANR	5612198	Identifier	virDomainFree		5611689	0					
ANR	5612199	ArgumentList	dom		5611689	1					
ANR	5612200	Argument	dom		5611689	0					
ANR	5612201	Identifier	dom		5611689	0					
ANR	5612202	ReturnStatement	return true ;	709:5:19178:19189	5611689	4	True				
ANR	5612203	Identifier	true		5611689	0					
ANR	5612204	ElseStatement	else		5611689	0					
ANR	5612205	IfStatement	if ( info -> state == VIR_DOMAIN_PAUSED )		5611689	0					
ANR	5612206	Condition	info -> state == VIR_DOMAIN_PAUSED	711:9:19205:19236	5611689	0	True				
ANR	5612207	EqualityExpression	info -> state == VIR_DOMAIN_PAUSED		5611689	0		==			
ANR	5612208	PtrMemberAccess	info -> state		5611689	0					
ANR	5612209	Identifier	info		5611689	0					
ANR	5612210	Identifier	state		5611689	1					
ANR	5612211	Identifier	VIR_DOMAIN_PAUSED		5611689	1					
ANR	5612212	CompoundStatement		114:3:3104:3104	5611689	1					
ANR	5612213	ExpressionStatement	"m_result_msg += ""Suspended"""	713:5:19249:19276	5611689	0	True				
ANR	5612214	AssignmentExpression	"m_result_msg += ""Suspended"""		5611689	0		+=			
ANR	5612215	Identifier	m_result_msg		5611689	0					
ANR	5612216	PrimaryExpression	"""Suspended"""		5611689	1					
ANR	5612217	ExpressionStatement	virDomainFree ( dom )	714:5:19283:19301	5611689	1	True				
ANR	5612218	CallExpression	virDomainFree ( dom )		5611689	0					
ANR	5612219	Callee	virDomainFree		5611689	0					
ANR	5612220	Identifier	virDomainFree		5611689	0					
ANR	5612221	ArgumentList	dom		5611689	1					
ANR	5612222	Argument	dom		5611689	0					
ANR	5612223	Identifier	dom		5611689	0					
ANR	5612224	ReturnStatement	return true ;	715:5:19308:19319	5611689	2	True				
ANR	5612225	Identifier	true		5611689	0					
ANR	5612226	ElseStatement	else		5611689	0					
ANR	5612227	CompoundStatement		120:3:3197:3197	5611689	0					
ANR	5612228	IfStatement	if ( getVMStatus ( ) == VM_RUNNING )		5611689	0					
ANR	5612229	Condition	getVMStatus ( ) == VM_RUNNING	719:8:19345:19371	5611689	0	True				
ANR	5612230	EqualityExpression	getVMStatus ( ) == VM_RUNNING		5611689	0		==			
ANR	5612231	CallExpression	getVMStatus ( )		5611689	0					
ANR	5612232	Callee	getVMStatus		5611689	0					
ANR	5612233	Identifier	getVMStatus		5611689	0					
ANR	5612234	ArgumentList			5611689	1					
ANR	5612235	Identifier	VM_RUNNING		5611689	1					
ANR	5612236	CompoundStatement		122:7:3243:3243	5611689	1					
ANR	5612237	ExpressionStatement	m_self_shutdown = true	721:2:19385:19407	5611689	0	True				
ANR	5612238	AssignmentExpression	m_self_shutdown = true		5611689	0		=			
ANR	5612239	Identifier	m_self_shutdown		5611689	0					
ANR	5612240	Identifier	true		5611689	1					
ANR	5612241	IfStatement	if ( getVMStatus ( ) != VM_STOPPED )		5611689	1					
ANR	5612242	Condition	getVMStatus ( ) != VM_STOPPED	723:8:19426:19452	5611689	0	True				
ANR	5612243	EqualityExpression	getVMStatus ( ) != VM_STOPPED		5611689	0		!=			
ANR	5612244	CallExpression	getVMStatus ( )		5611689	0					
ANR	5612245	Callee	getVMStatus		5611689	0					
ANR	5612246	Identifier	getVMStatus		5611689	0					
ANR	5612247	ArgumentList			5611689	1					
ANR	5612248	Identifier	VM_STOPPED		5611689	1					
ANR	5612249	CompoundStatement		126:7:3324:3324	5611689	1					
ANR	5612250	ExpressionStatement	setVMStatus ( VM_STOPPED )	725:2:19466:19489	5611689	0	True				
ANR	5612251	CallExpression	setVMStatus ( VM_STOPPED )		5611689	0					
ANR	5612252	Callee	setVMStatus		5611689	0					
ANR	5612253	Identifier	setVMStatus		5611689	0					
ANR	5612254	ArgumentList	VM_STOPPED		5611689	1					
ANR	5612255	Argument	VM_STOPPED		5611689	0					
ANR	5612256	Identifier	VM_STOPPED		5611689	0					
ANR	5612257	ExpressionStatement	m_stop_time . getTime ( )	726:2:19493:19514	5611689	1	True				
ANR	5612258	CallExpression	m_stop_time . getTime ( )		5611689	0					
ANR	5612259	Callee	m_stop_time . getTime		5611689	0					
ANR	5612260	MemberAccess	m_stop_time . getTime		5611689	0					
ANR	5612261	Identifier	m_stop_time		5611689	0					
ANR	5612262	Identifier	getTime		5611689	1					
ANR	5612263	ArgumentList			5611689	1					
ANR	5612264	ExpressionStatement	"m_result_msg += ""Stopped"""	728:5:19530:19555	5611689	2	True				
ANR	5612265	AssignmentExpression	"m_result_msg += ""Stopped"""		5611689	0		+=			
ANR	5612266	Identifier	m_result_msg		5611689	0					
ANR	5612267	PrimaryExpression	"""Stopped"""		5611689	1					
ANR	5612268	ExpressionStatement	virDomainFree ( dom )	729:5:19562:19580	5611689	3	True				
ANR	5612269	CallExpression	virDomainFree ( dom )		5611689	0					
ANR	5612270	Callee	virDomainFree		5611689	0					
ANR	5612271	Identifier	virDomainFree		5611689	0					
ANR	5612272	ArgumentList	dom		5611689	1					
ANR	5612273	Argument	dom		5611689	0					
ANR	5612274	Identifier	dom		5611689	0					
ANR	5612275	ReturnStatement	return true ;	730:5:19587:19598	5611689	4	True				
ANR	5612276	Identifier	true		5611689	0					
ANR	5612277	ExpressionStatement	virDomainFree ( dom )	732:1:19606:19624	5611689	15	True				
ANR	5612278	CallExpression	virDomainFree ( dom )		5611689	0					
ANR	5612279	Callee	virDomainFree		5611689	0					
ANR	5612280	Identifier	virDomainFree		5611689	0					
ANR	5612281	ArgumentList	dom		5611689	1					
ANR	5612282	Argument	dom		5611689	0					
ANR	5612283	Identifier	dom		5611689	0					
ANR	5612284	ReturnStatement	return false ;	733:1:19627:19639	5611689	16	True				
ANR	5612285	Identifier	false		5611689	0					
ANR	5612286	ReturnType	bool		5611689	1					
ANR	5612287	Identifier	VirshType :: Status		5611689	2					
ANR	5612288	ParameterList			5611689	3					
ANR	5612289	CFGEntryNode	ENTRY		5611689		True				
ANR	5612290	CFGExitNode	EXIT		5611689		True				
ANR	5612291	Symbol	m_result_msg		5611689						
ANR	5612292	Symbol	info -> state		5611689						
ANR	5612293	Symbol	VMGAHP_ERR_INTERNAL		5611689						
ANR	5612294	Symbol	m_vm_mac		5611689						
ANR	5612295	Symbol	m_vm_mac . IsEmpty		5611689						
ANR	5612296	Symbol	m_vm_name		5611689						
ANR	5612297	Symbol	dom		5611689						
ANR	5612298	Symbol	err -> code		5611689						
ANR	5612299	Symbol	m_cpu_time		5611689						
ANR	5612300	Symbol	m_result_msg . IsEmpty		5611689						
ANR	5612301	Symbol	m_vm_ip		5611689						
ANR	5612302	Symbol	getVMStatus		5611689						
ANR	5612303	Symbol	m_configfile		5611689						
ANR	5612304	Symbol	VMGAHP_STATUS_COMMAND_IP		5611689						
ANR	5612305	Symbol	virConnGetLastError		5611689						
ANR	5612306	Symbol	VMGAHP_STATUS_COMMAND_MAC		5611689						
ANR	5612307	Symbol	m_stop_time		5611689						
ANR	5612308	Symbol	m_libvirt_connection		5611689						
ANR	5612309	Symbol	VIR_DOMAIN_PAUSED		5611689						
ANR	5612310	Symbol	priv		5611689						
ANR	5612311	Symbol	VM_RUNNING		5611689						
ANR	5612312	Symbol	VIR_DOMAIN_BLOCKED		5611689						
ANR	5612313	Symbol	info		5611689						
ANR	5612314	Symbol	m_self_shutdown		5611689						
ANR	5612315	Symbol	& _info		5611689						
ANR	5612316	Symbol	_info		5611689						
ANR	5612317	Symbol	VIR_DOMAIN_RUNNING		5611689						
ANR	5612318	Symbol	NULL		5611689						
ANR	5612319	Symbol	err		5611689						
ANR	5612320	Symbol	err -> message		5611689						
ANR	5612321	Symbol	info -> cpuTime		5611689						
ANR	5612322	Symbol	m_configfile . Length		5611689						
ANR	5612323	Symbol	false		5611689						
ANR	5612324	Symbol	D_ALWAYS		5611689						
ANR	5612325	Symbol	this		5611689						
ANR	5612326	Symbol	virDomainLookupByName		5611689						
ANR	5612327	Symbol	VM_STOPPED		5611689						
ANR	5612328	Symbol	D_FULLDEBUG		5611689						
ANR	5612329	Symbol	set_root_priv		5611689						
ANR	5612330	Symbol	m_vm_name . Value		5611689						
ANR	5612331	Symbol	* err		5611689						
ANR	5612332	Symbol	virDomainGetInfo		5611689						
ANR	5612333	Symbol	m_vm_networking		5611689						
ANR	5612334	Symbol	VMGAHP_STATUS_COMMAND_STATUS		5611689						
ANR	5612335	Symbol	true		5611689						
ANR	5612336	Symbol	m_vm_ip . IsEmpty		5611689						
ANR	5612337	Symbol	* info		5611689						
ANR	5612338	Function	virshIOError	739:0:19712:19921							
ANR	5612339	FunctionDef	"virshIOError (const char * filename , FILE * fp)"		5612338	0					
ANR	5612340	CompoundStatement		740:0:19764:19921	5612338	0					
ANR	5612341	ExpressionStatement	"vmprintf ( D_ALWAYS , ""failed to fprintf in CreateVirshConfigFile(%s:%s)\\n"" , filename , strerror ( errno ) )"	741:1:19767:19870	5612338	0	True				
ANR	5612342	CallExpression	"vmprintf ( D_ALWAYS , ""failed to fprintf in CreateVirshConfigFile(%s:%s)\\n"" , filename , strerror ( errno ) )"		5612338	0					
ANR	5612343	Callee	vmprintf		5612338	0					
ANR	5612344	Identifier	vmprintf		5612338	0					
ANR	5612345	ArgumentList	D_ALWAYS		5612338	1					
ANR	5612346	Argument	D_ALWAYS		5612338	0					
ANR	5612347	Identifier	D_ALWAYS		5612338	0					
ANR	5612348	Argument	"""failed to fprintf in CreateVirshConfigFile(%s:%s)\\n"""		5612338	1					
ANR	5612349	PrimaryExpression	"""failed to fprintf in CreateVirshConfigFile(%s:%s)\\n"""		5612338	0					
ANR	5612350	Argument	filename		5612338	2					
ANR	5612351	Identifier	filename		5612338	0					
ANR	5612352	Argument	strerror ( errno )		5612338	3					
ANR	5612353	CallExpression	strerror ( errno )		5612338	0					
ANR	5612354	Callee	strerror		5612338	0					
ANR	5612355	Identifier	strerror		5612338	0					
ANR	5612356	ArgumentList	errno		5612338	1					
ANR	5612357	Argument	errno		5612338	0					
ANR	5612358	Identifier	errno		5612338	0					
ANR	5612359	IfStatement	if ( fp )		5612338	1					
ANR	5612360	Condition	fp	743:5:19877:19878	5612338	0	True				
ANR	5612361	Identifier	fp		5612338	0					
ANR	5612362	CompoundStatement		4:10:117:117	5612338	1					
ANR	5612363	ExpressionStatement	fclose ( fp )	744:2:19886:19896	5612338	0	True				
ANR	5612364	CallExpression	fclose ( fp )		5612338	0					
ANR	5612365	Callee	fclose		5612338	0					
ANR	5612366	Identifier	fclose		5612338	0					
ANR	5612367	ArgumentList	fp		5612338	1					
ANR	5612368	Argument	fp		5612338	0					
ANR	5612369	Identifier	fp		5612338	0					
ANR	5612370	ExpressionStatement	unlink ( filename )	746:1:19902:19918	5612338	2	True				
ANR	5612371	CallExpression	unlink ( filename )		5612338	0					
ANR	5612372	Callee	unlink		5612338	0					
ANR	5612373	Identifier	unlink		5612338	0					
ANR	5612374	ArgumentList	filename		5612338	1					
ANR	5612375	Argument	filename		5612338	0					
ANR	5612376	Identifier	filename		5612338	0					
ANR	5612377	ReturnType	void		5612338	1					
ANR	5612378	Identifier	virshIOError		5612338	2					
ANR	5612379	ParameterList	"const char * filename , FILE * fp"		5612338	3					
ANR	5612380	Parameter	const char * filename	739:18:19730:19750	5612338	0	True				
ANR	5612381	ParameterType	const char *		5612338	0					
ANR	5612382	Identifier	filename		5612338	1					
ANR	5612383	Parameter	FILE * fp	739:41:19753:19761	5612338	1	True				
ANR	5612384	ParameterType	FILE *		5612338	0					
ANR	5612385	Identifier	fp		5612338	1					
ANR	5612386	CFGEntryNode	ENTRY		5612338		True				
ANR	5612387	CFGExitNode	EXIT		5612338		True				
ANR	5612388	Symbol	strerror		5612338						
ANR	5612389	Symbol	errno		5612338						
ANR	5612390	Symbol	filename		5612338						
ANR	5612391	Symbol	D_ALWAYS		5612338						
ANR	5612392	Symbol	fp		5612338						
ANR	5612393	Function	KVMType :: CreateVirshConfigFile	750:0:19924:21430							
ANR	5612394	FunctionDef	KVMType :: CreateVirshConfigFile (const char * filename)		5612393	0					
ANR	5612395	CompoundStatement		751:0:19983:21430	5612393	0					
ANR	5612396	IdentifierDeclStatement	MyString disk_string ;	752:1:19986:20006	5612393	0	True				
ANR	5612397	IdentifierDecl	disk_string		5612393	0					
ANR	5612398	IdentifierDeclType	MyString		5612393	0					
ANR	5612399	Identifier	disk_string		5612393	1					
ANR	5612400	IfStatement	if ( ! filename )		5612393	1					
ANR	5612401	Condition	! filename	754:4:20013:20021	5612393	0	True				
ANR	5612402	UnaryOperationExpression	! filename		5612393	0					
ANR	5612403	UnaryOperator	!		5612393	0					
ANR	5612404	Identifier	filename		5612393	1					
ANR	5612405	ReturnStatement	return false ;	754:15:20024:20036	5612393	1	True				
ANR	5612406	Identifier	false		5612393	0					
ANR	5612407	IfStatement	if ( ! VirshType :: CreateVirshConfigFile ( filename ) )		5612393	2					
ANR	5612408	Condition	! VirshType :: CreateVirshConfigFile ( filename )	759:5:20161:20203	5612393	0	True				
ANR	5612409	UnaryOperationExpression	! VirshType :: CreateVirshConfigFile ( filename )		5612393	0					
ANR	5612410	UnaryOperator	!		5612393	0					
ANR	5612411	CallExpression	VirshType :: CreateVirshConfigFile ( filename )		5612393	1					
ANR	5612412	Callee	VirshType :: CreateVirshConfigFile		5612393	0					
ANR	5612413	Identifier	VirshType :: CreateVirshConfigFile		5612393	0					
ANR	5612414	ArgumentList	filename		5612393	1					
ANR	5612415	Argument	filename		5612393	0					
ANR	5612416	Identifier	filename		5612393	0					
ANR	5612417	CompoundStatement		10:1:223:223	5612393	1					
ANR	5612418	ExpressionStatement	"vmprintf ( D_ALWAYS , ""KVMType::CreateVirshConfigFile no XML found, generating defaults\\n"" )"	761:2:20211:20299	5612393	0	True				
ANR	5612419	CallExpression	"vmprintf ( D_ALWAYS , ""KVMType::CreateVirshConfigFile no XML found, generating defaults\\n"" )"		5612393	0					
ANR	5612420	Callee	vmprintf		5612393	0					
ANR	5612421	Identifier	vmprintf		5612393	0					
ANR	5612422	ArgumentList	D_ALWAYS		5612393	1					
ANR	5612423	Argument	D_ALWAYS		5612393	0					
ANR	5612424	Identifier	D_ALWAYS		5612393	0					
ANR	5612425	Argument	"""KVMType::CreateVirshConfigFile no XML found, generating defaults\\n"""		5612393	1					
ANR	5612426	PrimaryExpression	"""KVMType::CreateVirshConfigFile no XML found, generating defaults\\n"""		5612393	0					
ANR	5612427	ExpressionStatement	"m_xml += ""<domain type='kvm'>"""	763:2:20304:20334	5612393	1	True				
ANR	5612428	AssignmentExpression	"m_xml += ""<domain type='kvm'>"""		5612393	0		+=			
ANR	5612429	Identifier	m_xml		5612393	0					
ANR	5612430	PrimaryExpression	"""<domain type='kvm'>"""		5612393	1					
ANR	5612431	ExpressionStatement	"m_xml += ""<name>"""	764:2:20338:20355	5612393	2	True				
ANR	5612432	AssignmentExpression	"m_xml += ""<name>"""		5612393	0		+=			
ANR	5612433	Identifier	m_xml		5612393	0					
ANR	5612434	PrimaryExpression	"""<name>"""		5612393	1					
ANR	5612435	ExpressionStatement	m_xml += m_vm_name	765:2:20359:20377	5612393	3	True				
ANR	5612436	AssignmentExpression	m_xml += m_vm_name		5612393	0		+=			
ANR	5612437	Identifier	m_xml		5612393	0					
ANR	5612438	Identifier	m_vm_name		5612393	1					
ANR	5612439	ExpressionStatement	"m_xml += ""</name>"""	766:2:20381:20399	5612393	4	True				
ANR	5612440	AssignmentExpression	"m_xml += ""</name>"""		5612393	0		+=			
ANR	5612441	Identifier	m_xml		5612393	0					
ANR	5612442	PrimaryExpression	"""</name>"""		5612393	1					
ANR	5612443	ExpressionStatement	"m_xml += ""<memory>"""	767:2:20403:20422	5612393	5	True				
ANR	5612444	AssignmentExpression	"m_xml += ""<memory>"""		5612393	0		+=			
ANR	5612445	Identifier	m_xml		5612393	0					
ANR	5612446	PrimaryExpression	"""<memory>"""		5612393	1					
ANR	5612447	ExpressionStatement	m_xml += m_vm_mem * 1024	768:2:20426:20450	5612393	6	True				
ANR	5612448	AssignmentExpression	m_xml += m_vm_mem * 1024		5612393	0		+=			
ANR	5612449	Identifier	m_xml		5612393	0					
ANR	5612450	MultiplicativeExpression	m_vm_mem * 1024		5612393	1		*			
ANR	5612451	Identifier	m_vm_mem		5612393	0					
ANR	5612452	PrimaryExpression	1024		5612393	1					
ANR	5612453	ExpressionStatement	"m_xml += ""</memory>"""	769:2:20454:20474	5612393	7	True				
ANR	5612454	AssignmentExpression	"m_xml += ""</memory>"""		5612393	0		+=			
ANR	5612455	Identifier	m_xml		5612393	0					
ANR	5612456	PrimaryExpression	"""</memory>"""		5612393	1					
ANR	5612457	ExpressionStatement	"m_xml += ""<vcpu>"""	770:2:20478:20495	5612393	8	True				
ANR	5612458	AssignmentExpression	"m_xml += ""<vcpu>"""		5612393	0		+=			
ANR	5612459	Identifier	m_xml		5612393	0					
ANR	5612460	PrimaryExpression	"""<vcpu>"""		5612393	1					
ANR	5612461	ExpressionStatement	m_xml += m_vcpus	771:2:20499:20515	5612393	9	True				
ANR	5612462	AssignmentExpression	m_xml += m_vcpus		5612393	0		+=			
ANR	5612463	Identifier	m_xml		5612393	0					
ANR	5612464	Identifier	m_vcpus		5612393	1					
ANR	5612465	ExpressionStatement	"m_xml += ""</vcpu>"""	772:2:20519:20537	5612393	10	True				
ANR	5612466	AssignmentExpression	"m_xml += ""</vcpu>"""		5612393	0		+=			
ANR	5612467	Identifier	m_xml		5612393	0					
ANR	5612468	PrimaryExpression	"""</vcpu>"""		5612393	1					
ANR	5612469	ExpressionStatement	"m_xml += ""<os><type>hvm</type></os>"""	773:2:20541:20577	5612393	11	True				
ANR	5612470	AssignmentExpression	"m_xml += ""<os><type>hvm</type></os>"""		5612393	0		+=			
ANR	5612471	Identifier	m_xml		5612393	0					
ANR	5612472	PrimaryExpression	"""<os><type>hvm</type></os>"""		5612393	1					
ANR	5612473	ExpressionStatement	"m_xml += ""<devices>"""	774:2:20581:20601	5612393	12	True				
ANR	5612474	AssignmentExpression	"m_xml += ""<devices>"""		5612393	0		+=			
ANR	5612475	Identifier	m_xml		5612393	0					
ANR	5612476	PrimaryExpression	"""<devices>"""		5612393	1					
ANR	5612477	ExpressionStatement	"m_xml += ""<console type='pty'><source path='/dev/ptmx'/></console>"""	775:2:20605:20672	5612393	13	True				
ANR	5612478	AssignmentExpression	"m_xml += ""<console type='pty'><source path='/dev/ptmx'/></console>"""		5612393	0		+=			
ANR	5612479	Identifier	m_xml		5612393	0					
ANR	5612480	PrimaryExpression	"""<console type='pty'><source path='/dev/ptmx'/></console>"""		5612393	1					
ANR	5612481	IfStatement	if ( m_vm_networking )		5612393	14					
ANR	5612482	Condition	m_vm_networking	776:6:20680:20694	5612393	0	True				
ANR	5612483	Identifier	m_vm_networking		5612393	0					
ANR	5612484	CompoundStatement		27:3:717:717	5612393	1					
ANR	5612485	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""mac address is %s\\n"" , m_vm_job_mac . Value ( ) )"	778:3:20706:20772	5612393	0	True				
ANR	5612486	CallExpression	"vmprintf ( D_FULLDEBUG , ""mac address is %s\\n"" , m_vm_job_mac . Value ( ) )"		5612393	0					
ANR	5612487	Callee	vmprintf		5612393	0					
ANR	5612488	Identifier	vmprintf		5612393	0					
ANR	5612489	ArgumentList	D_FULLDEBUG		5612393	1					
ANR	5612490	Argument	D_FULLDEBUG		5612393	0					
ANR	5612491	Identifier	D_FULLDEBUG		5612393	0					
ANR	5612492	Argument	"""mac address is %s\\n"""		5612393	1					
ANR	5612493	PrimaryExpression	"""mac address is %s\\n"""		5612393	0					
ANR	5612494	Argument	m_vm_job_mac . Value ( )		5612393	2					
ANR	5612495	CallExpression	m_vm_job_mac . Value ( )		5612393	0					
ANR	5612496	Callee	m_vm_job_mac . Value		5612393	0					
ANR	5612497	MemberAccess	m_vm_job_mac . Value		5612393	0					
ANR	5612498	Identifier	m_vm_job_mac		5612393	0					
ANR	5612499	Identifier	Value		5612393	1					
ANR	5612500	ArgumentList			5612393	1					
ANR	5612501	IfStatement	"if ( m_vm_networking_type . find ( ""nat"" ) >= 0 )"		5612393	1					
ANR	5612502	Condition	"m_vm_networking_type . find ( ""nat"" ) >= 0"	779:7:20781:20817	5612393	0	True				
ANR	5612503	RelationalExpression	"m_vm_networking_type . find ( ""nat"" ) >= 0"		5612393	0		>=			
ANR	5612504	CallExpression	"m_vm_networking_type . find ( ""nat"" )"		5612393	0					
ANR	5612505	Callee	m_vm_networking_type . find		5612393	0					
ANR	5612506	MemberAccess	m_vm_networking_type . find		5612393	0					
ANR	5612507	Identifier	m_vm_networking_type		5612393	0					
ANR	5612508	Identifier	find		5612393	1					
ANR	5612509	ArgumentList	"""nat"""		5612393	1					
ANR	5612510	Argument	"""nat"""		5612393	0					
ANR	5612511	PrimaryExpression	"""nat"""		5612393	0					
ANR	5612512	PrimaryExpression	0		5612393	1					
ANR	5612513	CompoundStatement		29:47:837:837	5612393	1					
ANR	5612514	ExpressionStatement	"m_xml += ""<interface type='network'><source network='default'/></interface>"""	780:3:20826:20902	5612393	0	True				
ANR	5612515	AssignmentExpression	"m_xml += ""<interface type='network'><source network='default'/></interface>"""		5612393	0		+=			
ANR	5612516	Identifier	m_xml		5612393	0					
ANR	5612517	PrimaryExpression	"""<interface type='network'><source network='default'/></interface>"""		5612393	1					
ANR	5612518	ElseStatement	else		5612393	0					
ANR	5612519	IfStatement	"if ( m_vm_networking_type . find ( ""bridge"" ) >= 0 )"		5612393	0					
ANR	5612520	Condition	"m_vm_networking_type . find ( ""bridge"" ) >= 0"	782:12:20921:20960	5612393	0	True				
ANR	5612521	RelationalExpression	"m_vm_networking_type . find ( ""bridge"" ) >= 0"		5612393	0		>=			
ANR	5612522	CallExpression	"m_vm_networking_type . find ( ""bridge"" )"		5612393	0					
ANR	5612523	Callee	m_vm_networking_type . find		5612393	0					
ANR	5612524	MemberAccess	m_vm_networking_type . find		5612393	0					
ANR	5612525	Identifier	m_vm_networking_type		5612393	0					
ANR	5612526	Identifier	find		5612393	1					
ANR	5612527	ArgumentList	"""bridge"""		5612393	1					
ANR	5612528	Argument	"""bridge"""		5612393	0					
ANR	5612529	PrimaryExpression	"""bridge"""		5612393	0					
ANR	5612530	PrimaryExpression	0		5612393	1					
ANR	5612531	CompoundStatement		33:3:983:983	5612393	1					
ANR	5612532	ExpressionStatement	"m_xml += ""<interface type='bridge'>"""	784:3:20972:21008	5612393	0	True				
ANR	5612533	AssignmentExpression	"m_xml += ""<interface type='bridge'>"""		5612393	0		+=			
ANR	5612534	Identifier	m_xml		5612393	0					
ANR	5612535	PrimaryExpression	"""<interface type='bridge'>"""		5612393	1					
ANR	5612536	IfStatement	if ( ! m_vm_bridge_interface . empty ( ) )		5612393	1					
ANR	5612537	Condition	! m_vm_bridge_interface . empty ( )	785:7:21017:21046	5612393	0	True				
ANR	5612538	UnaryOperationExpression	! m_vm_bridge_interface . empty ( )		5612393	0					
ANR	5612539	UnaryOperator	!		5612393	0					
ANR	5612540	CallExpression	m_vm_bridge_interface . empty ( )		5612393	1					
ANR	5612541	Callee	m_vm_bridge_interface . empty		5612393	0					
ANR	5612542	MemberAccess	m_vm_bridge_interface . empty		5612393	0					
ANR	5612543	Identifier	m_vm_bridge_interface		5612393	0					
ANR	5612544	Identifier	empty		5612393	1					
ANR	5612545	ArgumentList			5612393	1					
ANR	5612546	CompoundStatement		35:39:1065:1065	5612393	1					
ANR	5612547	ExpressionStatement	"m_xml += ""<source bridge='"""	786:4:21055:21082	5612393	0	True				
ANR	5612548	AssignmentExpression	"m_xml += ""<source bridge='"""		5612393	0		+=			
ANR	5612549	Identifier	m_xml		5612393	0					
ANR	5612550	PrimaryExpression	"""<source bridge='"""		5612393	1					
ANR	5612551	ExpressionStatement	m_xml += m_vm_bridge_interface . c_str ( )	787:4:21088:21126	5612393	1	True				
ANR	5612552	AssignmentExpression	m_xml += m_vm_bridge_interface . c_str ( )		5612393	0		+=			
ANR	5612553	Identifier	m_xml		5612393	0					
ANR	5612554	CallExpression	m_vm_bridge_interface . c_str ( )		5612393	1					
ANR	5612555	Callee	m_vm_bridge_interface . c_str		5612393	0					
ANR	5612556	MemberAccess	m_vm_bridge_interface . c_str		5612393	0					
ANR	5612557	Identifier	m_vm_bridge_interface		5612393	0					
ANR	5612558	Identifier	c_str		5612393	1					
ANR	5612559	ArgumentList			5612393	1					
ANR	5612560	ExpressionStatement	"m_xml += ""'/>"""	788:4:21132:21146	5612393	2	True				
ANR	5612561	AssignmentExpression	"m_xml += ""'/>"""		5612393	0		+=			
ANR	5612562	Identifier	m_xml		5612393	0					
ANR	5612563	PrimaryExpression	"""'/>"""		5612393	1					
ANR	5612564	IfStatement	if ( ! m_vm_job_mac . IsEmpty ( ) )		5612393	2					
ANR	5612565	Condition	! m_vm_job_mac . IsEmpty ( )	790:6:21159:21181	5612393	0	True				
ANR	5612566	UnaryOperationExpression	! m_vm_job_mac . IsEmpty ( )		5612393	0					
ANR	5612567	UnaryOperator	!		5612393	0					
ANR	5612568	CallExpression	m_vm_job_mac . IsEmpty ( )		5612393	1					
ANR	5612569	Callee	m_vm_job_mac . IsEmpty		5612393	0					
ANR	5612570	MemberAccess	m_vm_job_mac . IsEmpty		5612393	0					
ANR	5612571	Identifier	m_vm_job_mac		5612393	0					
ANR	5612572	Identifier	IsEmpty		5612393	1					
ANR	5612573	ArgumentList			5612393	1					
ANR	5612574	CompoundStatement		41:4:1204:1204	5612393	1					
ANR	5612575	ExpressionStatement	"m_xml += ""<mac address='"""	792:4:21194:21219	5612393	0	True				
ANR	5612576	AssignmentExpression	"m_xml += ""<mac address='"""		5612393	0		+=			
ANR	5612577	Identifier	m_xml		5612393	0					
ANR	5612578	PrimaryExpression	"""<mac address='"""		5612393	1					
ANR	5612579	ExpressionStatement	m_xml += m_vm_job_mac	793:4:21225:21246	5612393	1	True				
ANR	5612580	AssignmentExpression	m_xml += m_vm_job_mac		5612393	0		+=			
ANR	5612581	Identifier	m_xml		5612393	0					
ANR	5612582	Identifier	m_vm_job_mac		5612393	1					
ANR	5612583	ExpressionStatement	"m_xml += ""'/>"""	794:4:21252:21266	5612393	2	True				
ANR	5612584	AssignmentExpression	"m_xml += ""'/>"""		5612393	0		+=			
ANR	5612585	Identifier	m_xml		5612393	0					
ANR	5612586	PrimaryExpression	"""'/>"""		5612393	1					
ANR	5612587	ExpressionStatement	"m_xml += ""</interface>"""	796:3:21277:21300	5612393	3	True				
ANR	5612588	AssignmentExpression	"m_xml += ""</interface>"""		5612393	0		+=			
ANR	5612589	Identifier	m_xml		5612393	0					
ANR	5612590	PrimaryExpression	"""</interface>"""		5612393	1					
ANR	5612591	ExpressionStatement	disk_string = makeVirshDiskString ( )	799:2:21314:21349	5612393	15	True				
ANR	5612592	AssignmentExpression	disk_string = makeVirshDiskString ( )		5612393	0		=			
ANR	5612593	Identifier	disk_string		5612393	0					
ANR	5612594	CallExpression	makeVirshDiskString ( )		5612393	1					
ANR	5612595	Callee	makeVirshDiskString		5612393	0					
ANR	5612596	Identifier	makeVirshDiskString		5612393	0					
ANR	5612597	ArgumentList			5612393	1					
ANR	5612598	ExpressionStatement	m_xml += disk_string	801:2:21354:21374	5612393	16	True				
ANR	5612599	AssignmentExpression	m_xml += disk_string		5612393	0		+=			
ANR	5612600	Identifier	m_xml		5612393	0					
ANR	5612601	Identifier	disk_string		5612393	1					
ANR	5612602	ExpressionStatement	"m_xml += ""</devices></domain>"""	802:2:21378:21408	5612393	17	True				
ANR	5612603	AssignmentExpression	"m_xml += ""</devices></domain>"""		5612393	0		+=			
ANR	5612604	Identifier	m_xml		5612393	0					
ANR	5612605	PrimaryExpression	"""</devices></domain>"""		5612393	1					
ANR	5612606	ReturnStatement	return true ;	807:1:21417:21428	5612393	3	True				
ANR	5612607	Identifier	true		5612393	0					
ANR	5612608	ReturnType	bool		5612393	1					
ANR	5612609	Identifier	KVMType :: CreateVirshConfigFile		5612393	2					
ANR	5612610	ParameterList	const char * filename		5612393	3					
ANR	5612611	Parameter	const char * filename	750:36:19960:19980	5612393	0	True				
ANR	5612612	ParameterType	const char *		5612393	0					
ANR	5612613	Identifier	filename		5612393	1					
ANR	5612614	CFGEntryNode	ENTRY		5612393		True				
ANR	5612615	CFGExitNode	EXIT		5612393		True				
ANR	5612616	Symbol	m_vm_name		5612393						
ANR	5612617	Symbol	m_vm_bridge_interface		5612393						
ANR	5612618	Symbol	m_vm_bridge_interface . c_str		5612393						
ANR	5612619	Symbol	m_vm_job_mac . IsEmpty		5612393						
ANR	5612620	Symbol	disk_string		5612393						
ANR	5612621	Symbol	m_vm_mem		5612393						
ANR	5612622	Symbol	m_vm_networking_type . find		5612393						
ANR	5612623	Symbol	false		5612393						
ANR	5612624	Symbol	D_ALWAYS		5612393						
ANR	5612625	Symbol	m_xml		5612393						
ANR	5612626	Symbol	m_vm_job_mac		5612393						
ANR	5612627	Symbol	m_vm_networking_type		5612393						
ANR	5612628	Symbol	VirshType :: CreateVirshConfigFile		5612393						
ANR	5612629	Symbol	D_FULLDEBUG		5612393						
ANR	5612630	Symbol	filename		5612393						
ANR	5612631	Symbol	m_vm_job_mac . Value		5612393						
ANR	5612632	Symbol	m_vm_bridge_interface . empty		5612393						
ANR	5612633	Symbol	m_vm_networking		5612393						
ANR	5612634	Symbol	true		5612393						
ANR	5612635	Symbol	m_vcpus		5612393						
ANR	5612636	Symbol	makeVirshDiskString		5612393						
ANR	5612637	Function	XenType :: CreateVirshConfigFile	811:0:21434:23589							
ANR	5612638	FunctionDef	XenType :: CreateVirshConfigFile (const char * filename)		5612637	0					
ANR	5612639	CompoundStatement		813:0:21492:23589	5612637	0					
ANR	5612640	IdentifierDeclStatement	MyString disk_string ;	814:1:21495:21515	5612637	0	True				
ANR	5612641	IdentifierDecl	disk_string		5612637	0					
ANR	5612642	IdentifierDeclType	MyString		5612637	0					
ANR	5612643	Identifier	disk_string		5612637	1					
ANR	5612644	IfStatement	if ( ! filename )		5612637	1					
ANR	5612645	Condition	! filename	816:5:21523:21531	5612637	0	True				
ANR	5612646	UnaryOperationExpression	! filename		5612637	0					
ANR	5612647	UnaryOperator	!		5612637	0					
ANR	5612648	Identifier	filename		5612637	1					
ANR	5612649	ReturnStatement	return false ;	816:17:21535:21547	5612637	1	True				
ANR	5612650	Identifier	false		5612637	0					
ANR	5612651	IfStatement	if ( ! VirshType :: CreateVirshConfigFile ( filename ) )		5612637	2					
ANR	5612652	Condition	! VirshType :: CreateVirshConfigFile ( filename )	818:5:21555:21597	5612637	0	True				
ANR	5612653	UnaryOperationExpression	! VirshType :: CreateVirshConfigFile ( filename )		5612637	0					
ANR	5612654	UnaryOperator	!		5612637	0					
ANR	5612655	CallExpression	VirshType :: CreateVirshConfigFile ( filename )		5612637	1					
ANR	5612656	Callee	VirshType :: CreateVirshConfigFile		5612637	0					
ANR	5612657	Identifier	VirshType :: CreateVirshConfigFile		5612637	0					
ANR	5612658	ArgumentList	filename		5612637	1					
ANR	5612659	Argument	filename		5612637	0					
ANR	5612660	Identifier	filename		5612637	0					
ANR	5612661	CompoundStatement		7:1:108:108	5612637	1					
ANR	5612662	ExpressionStatement	"vmprintf ( D_ALWAYS , ""XenType::CreateVirshConfigFile no XML found, generating defaults\\n"" )"	820:2:21605:21693	5612637	0	True				
ANR	5612663	CallExpression	"vmprintf ( D_ALWAYS , ""XenType::CreateVirshConfigFile no XML found, generating defaults\\n"" )"		5612637	0					
ANR	5612664	Callee	vmprintf		5612637	0					
ANR	5612665	Identifier	vmprintf		5612637	0					
ANR	5612666	ArgumentList	D_ALWAYS		5612637	1					
ANR	5612667	Argument	D_ALWAYS		5612637	0					
ANR	5612668	Identifier	D_ALWAYS		5612637	0					
ANR	5612669	Argument	"""XenType::CreateVirshConfigFile no XML found, generating defaults\\n"""		5612637	1					
ANR	5612670	PrimaryExpression	"""XenType::CreateVirshConfigFile no XML found, generating defaults\\n"""		5612637	0					
ANR	5612671	ExpressionStatement	"m_xml += ""<domain type='xen'>"""	822:2:21698:21728	5612637	1	True				
ANR	5612672	AssignmentExpression	"m_xml += ""<domain type='xen'>"""		5612637	0		+=			
ANR	5612673	Identifier	m_xml		5612637	0					
ANR	5612674	PrimaryExpression	"""<domain type='xen'>"""		5612637	1					
ANR	5612675	ExpressionStatement	"m_xml += ""<name>"""	823:2:21732:21749	5612637	2	True				
ANR	5612676	AssignmentExpression	"m_xml += ""<name>"""		5612637	0		+=			
ANR	5612677	Identifier	m_xml		5612637	0					
ANR	5612678	PrimaryExpression	"""<name>"""		5612637	1					
ANR	5612679	ExpressionStatement	m_xml += m_vm_name	824:2:21753:21771	5612637	3	True				
ANR	5612680	AssignmentExpression	m_xml += m_vm_name		5612637	0		+=			
ANR	5612681	Identifier	m_xml		5612637	0					
ANR	5612682	Identifier	m_vm_name		5612637	1					
ANR	5612683	ExpressionStatement	"m_xml += ""</name>"""	825:2:21775:21793	5612637	4	True				
ANR	5612684	AssignmentExpression	"m_xml += ""</name>"""		5612637	0		+=			
ANR	5612685	Identifier	m_xml		5612637	0					
ANR	5612686	PrimaryExpression	"""</name>"""		5612637	1					
ANR	5612687	ExpressionStatement	"m_xml += ""<memory>"""	826:2:21797:21816	5612637	5	True				
ANR	5612688	AssignmentExpression	"m_xml += ""<memory>"""		5612637	0		+=			
ANR	5612689	Identifier	m_xml		5612637	0					
ANR	5612690	PrimaryExpression	"""<memory>"""		5612637	1					
ANR	5612691	ExpressionStatement	m_xml += m_vm_mem * 1024	827:2:21820:21844	5612637	6	True				
ANR	5612692	AssignmentExpression	m_xml += m_vm_mem * 1024		5612637	0		+=			
ANR	5612693	Identifier	m_xml		5612637	0					
ANR	5612694	MultiplicativeExpression	m_vm_mem * 1024		5612637	1		*			
ANR	5612695	Identifier	m_vm_mem		5612637	0					
ANR	5612696	PrimaryExpression	1024		5612637	1					
ANR	5612697	ExpressionStatement	"m_xml += ""</memory>"""	828:2:21848:21868	5612637	7	True				
ANR	5612698	AssignmentExpression	"m_xml += ""</memory>"""		5612637	0		+=			
ANR	5612699	Identifier	m_xml		5612637	0					
ANR	5612700	PrimaryExpression	"""</memory>"""		5612637	1					
ANR	5612701	ExpressionStatement	"m_xml += ""<vcpu>"""	829:2:21872:21889	5612637	8	True				
ANR	5612702	AssignmentExpression	"m_xml += ""<vcpu>"""		5612637	0		+=			
ANR	5612703	Identifier	m_xml		5612637	0					
ANR	5612704	PrimaryExpression	"""<vcpu>"""		5612637	1					
ANR	5612705	ExpressionStatement	m_xml += m_vcpus	830:2:21893:21909	5612637	9	True				
ANR	5612706	AssignmentExpression	m_xml += m_vcpus		5612637	0		+=			
ANR	5612707	Identifier	m_xml		5612637	0					
ANR	5612708	Identifier	m_vcpus		5612637	1					
ANR	5612709	ExpressionStatement	"m_xml += ""</vcpu>"""	831:2:21913:21931	5612637	10	True				
ANR	5612710	AssignmentExpression	"m_xml += ""</vcpu>"""		5612637	0		+=			
ANR	5612711	Identifier	m_xml		5612637	0					
ANR	5612712	PrimaryExpression	"""</vcpu>"""		5612637	1					
ANR	5612713	ExpressionStatement	"m_xml += ""<os><type>linux</type>"""	832:2:21935:21968	5612637	11	True				
ANR	5612714	AssignmentExpression	"m_xml += ""<os><type>linux</type>"""		5612637	0		+=			
ANR	5612715	Identifier	m_xml		5612637	0					
ANR	5612716	PrimaryExpression	"""<os><type>linux</type>"""		5612637	1					
ANR	5612717	IfStatement	if ( m_xen_kernel_file . IsEmpty ( ) == false )		5612637	12					
ANR	5612718	Condition	m_xen_kernel_file . IsEmpty ( ) == false	834:6:21977:22012	5612637	0	True				
ANR	5612719	EqualityExpression	m_xen_kernel_file . IsEmpty ( ) == false		5612637	0		==			
ANR	5612720	CallExpression	m_xen_kernel_file . IsEmpty ( )		5612637	0					
ANR	5612721	Callee	m_xen_kernel_file . IsEmpty		5612637	0					
ANR	5612722	MemberAccess	m_xen_kernel_file . IsEmpty		5612637	0					
ANR	5612723	Identifier	m_xen_kernel_file		5612637	0					
ANR	5612724	Identifier	IsEmpty		5612637	1					
ANR	5612725	ArgumentList			5612637	1					
ANR	5612726	Identifier	false		5612637	1					
ANR	5612727	CompoundStatement		22:45:523:523	5612637	1					
ANR	5612728	ExpressionStatement	"m_xml += ""<kernel>"""	835:3:22021:22040	5612637	0	True				
ANR	5612729	AssignmentExpression	"m_xml += ""<kernel>"""		5612637	0		+=			
ANR	5612730	Identifier	m_xml		5612637	0					
ANR	5612731	PrimaryExpression	"""<kernel>"""		5612637	1					
ANR	5612732	ExpressionStatement	m_xml += m_xen_kernel_file	836:3:22045:22071	5612637	1	True				
ANR	5612733	AssignmentExpression	m_xml += m_xen_kernel_file		5612637	0		+=			
ANR	5612734	Identifier	m_xml		5612637	0					
ANR	5612735	Identifier	m_xen_kernel_file		5612637	1					
ANR	5612736	ExpressionStatement	"m_xml += ""</kernel>"""	837:3:22076:22096	5612637	2	True				
ANR	5612737	AssignmentExpression	"m_xml += ""</kernel>"""		5612637	0		+=			
ANR	5612738	Identifier	m_xml		5612637	0					
ANR	5612739	PrimaryExpression	"""</kernel>"""		5612637	1					
ANR	5612740	IfStatement	if ( m_xen_initrd_file . IsEmpty ( ) == false )		5612637	3					
ANR	5612741	Condition	m_xen_initrd_file . IsEmpty ( ) == false	838:7:22105:22140	5612637	0	True				
ANR	5612742	EqualityExpression	m_xen_initrd_file . IsEmpty ( ) == false		5612637	0		==			
ANR	5612743	CallExpression	m_xen_initrd_file . IsEmpty ( )		5612637	0					
ANR	5612744	Callee	m_xen_initrd_file . IsEmpty		5612637	0					
ANR	5612745	MemberAccess	m_xen_initrd_file . IsEmpty		5612637	0					
ANR	5612746	Identifier	m_xen_initrd_file		5612637	0					
ANR	5612747	Identifier	IsEmpty		5612637	1					
ANR	5612748	ArgumentList			5612637	1					
ANR	5612749	Identifier	false		5612637	1					
ANR	5612750	CompoundStatement		26:46:651:651	5612637	1					
ANR	5612751	ExpressionStatement	"m_xml += ""<initrd>"""	839:4:22150:22169	5612637	0	True				
ANR	5612752	AssignmentExpression	"m_xml += ""<initrd>"""		5612637	0		+=			
ANR	5612753	Identifier	m_xml		5612637	0					
ANR	5612754	PrimaryExpression	"""<initrd>"""		5612637	1					
ANR	5612755	ExpressionStatement	m_xml += m_xen_initrd_file	840:4:22175:22201	5612637	1	True				
ANR	5612756	AssignmentExpression	m_xml += m_xen_initrd_file		5612637	0		+=			
ANR	5612757	Identifier	m_xml		5612637	0					
ANR	5612758	Identifier	m_xen_initrd_file		5612637	1					
ANR	5612759	ExpressionStatement	"m_xml += ""</initrd>"""	841:4:22207:22227	5612637	2	True				
ANR	5612760	AssignmentExpression	"m_xml += ""</initrd>"""		5612637	0		+=			
ANR	5612761	Identifier	m_xml		5612637	0					
ANR	5612762	PrimaryExpression	"""</initrd>"""		5612637	1					
ANR	5612763	IfStatement	if ( m_xen_root . IsEmpty ( ) == false )		5612637	4					
ANR	5612764	Condition	m_xen_root . IsEmpty ( ) == false	843:7:22241:22269	5612637	0	True				
ANR	5612765	EqualityExpression	m_xen_root . IsEmpty ( ) == false		5612637	0		==			
ANR	5612766	CallExpression	m_xen_root . IsEmpty ( )		5612637	0					
ANR	5612767	Callee	m_xen_root . IsEmpty		5612637	0					
ANR	5612768	MemberAccess	m_xen_root . IsEmpty		5612637	0					
ANR	5612769	Identifier	m_xen_root		5612637	0					
ANR	5612770	Identifier	IsEmpty		5612637	1					
ANR	5612771	ArgumentList			5612637	1					
ANR	5612772	Identifier	false		5612637	1					
ANR	5612773	CompoundStatement		31:39:780:780	5612637	1					
ANR	5612774	ExpressionStatement	"m_xml += ""<root>"""	844:4:22279:22296	5612637	0	True				
ANR	5612775	AssignmentExpression	"m_xml += ""<root>"""		5612637	0		+=			
ANR	5612776	Identifier	m_xml		5612637	0					
ANR	5612777	PrimaryExpression	"""<root>"""		5612637	1					
ANR	5612778	ExpressionStatement	m_xml += m_xen_root	845:4:22302:22321	5612637	1	True				
ANR	5612779	AssignmentExpression	m_xml += m_xen_root		5612637	0		+=			
ANR	5612780	Identifier	m_xml		5612637	0					
ANR	5612781	Identifier	m_xen_root		5612637	1					
ANR	5612782	ExpressionStatement	"m_xml += ""</root>"""	846:4:22327:22345	5612637	2	True				
ANR	5612783	AssignmentExpression	"m_xml += ""</root>"""		5612637	0		+=			
ANR	5612784	Identifier	m_xml		5612637	0					
ANR	5612785	PrimaryExpression	"""</root>"""		5612637	1					
ANR	5612786	IfStatement	if ( m_xen_kernel_params . IsEmpty ( ) == false )		5612637	5					
ANR	5612787	Condition	m_xen_kernel_params . IsEmpty ( ) == false	849:7:22360:22397	5612637	0	True				
ANR	5612788	EqualityExpression	m_xen_kernel_params . IsEmpty ( ) == false		5612637	0		==			
ANR	5612789	CallExpression	m_xen_kernel_params . IsEmpty ( )		5612637	0					
ANR	5612790	Callee	m_xen_kernel_params . IsEmpty		5612637	0					
ANR	5612791	MemberAccess	m_xen_kernel_params . IsEmpty		5612637	0					
ANR	5612792	Identifier	m_xen_kernel_params		5612637	0					
ANR	5612793	Identifier	IsEmpty		5612637	1					
ANR	5612794	ArgumentList			5612637	1					
ANR	5612795	Identifier	false		5612637	1					
ANR	5612796	CompoundStatement		37:48:908:908	5612637	1					
ANR	5612797	ExpressionStatement	"m_xml += ""<cmdline>"""	850:4:22407:22427	5612637	0	True				
ANR	5612798	AssignmentExpression	"m_xml += ""<cmdline>"""		5612637	0		+=			
ANR	5612799	Identifier	m_xml		5612637	0					
ANR	5612800	PrimaryExpression	"""<cmdline>"""		5612637	1					
ANR	5612801	ExpressionStatement	m_xml += m_xen_kernel_params	851:4:22433:22461	5612637	1	True				
ANR	5612802	AssignmentExpression	m_xml += m_xen_kernel_params		5612637	0		+=			
ANR	5612803	Identifier	m_xml		5612637	0					
ANR	5612804	Identifier	m_xen_kernel_params		5612637	1					
ANR	5612805	ExpressionStatement	"m_xml += ""</cmdline>"""	852:4:22467:22488	5612637	2	True				
ANR	5612806	AssignmentExpression	"m_xml += ""</cmdline>"""		5612637	0		+=			
ANR	5612807	Identifier	m_xml		5612637	0					
ANR	5612808	PrimaryExpression	"""</cmdline>"""		5612637	1					
ANR	5612809	ExpressionStatement	"m_xml += ""</os>"""	856:2:22502:22518	5612637	13	True				
ANR	5612810	AssignmentExpression	"m_xml += ""</os>"""		5612637	0		+=			
ANR	5612811	Identifier	m_xml		5612637	0					
ANR	5612812	PrimaryExpression	"""</os>"""		5612637	1					
ANR	5612813	IfStatement	"if ( strcasecmp ( m_xen_kernel_submit_param . Value ( ) , XEN_KERNEL_INCLUDED ) == 0 )"		5612637	14					
ANR	5612814	Condition	"strcasecmp ( m_xen_kernel_submit_param . Value ( ) , XEN_KERNEL_INCLUDED ) == 0"	857:6:22526:22596	5612637	0	True				
ANR	5612815	EqualityExpression	"strcasecmp ( m_xen_kernel_submit_param . Value ( ) , XEN_KERNEL_INCLUDED ) == 0"		5612637	0		==			
ANR	5612816	CallExpression	"strcasecmp ( m_xen_kernel_submit_param . Value ( ) , XEN_KERNEL_INCLUDED )"		5612637	0					
ANR	5612817	Callee	strcasecmp		5612637	0					
ANR	5612818	Identifier	strcasecmp		5612637	0					
ANR	5612819	ArgumentList	m_xen_kernel_submit_param . Value ( )		5612637	1					
ANR	5612820	Argument	m_xen_kernel_submit_param . Value ( )		5612637	0					
ANR	5612821	CallExpression	m_xen_kernel_submit_param . Value ( )		5612637	0					
ANR	5612822	Callee	m_xen_kernel_submit_param . Value		5612637	0					
ANR	5612823	MemberAccess	m_xen_kernel_submit_param . Value		5612637	0					
ANR	5612824	Identifier	m_xen_kernel_submit_param		5612637	0					
ANR	5612825	Identifier	Value		5612637	1					
ANR	5612826	ArgumentList			5612637	1					
ANR	5612827	Argument	XEN_KERNEL_INCLUDED		5612637	1					
ANR	5612828	Identifier	XEN_KERNEL_INCLUDED		5612637	0					
ANR	5612829	PrimaryExpression	0		5612637	1					
ANR	5612830	CompoundStatement		45:79:1106:1106	5612637	1					
ANR	5612831	ExpressionStatement	"m_xml += ""<bootloader>"""	858:3:22604:22627	5612637	0	True				
ANR	5612832	AssignmentExpression	"m_xml += ""<bootloader>"""		5612637	0		+=			
ANR	5612833	Identifier	m_xml		5612637	0					
ANR	5612834	PrimaryExpression	"""<bootloader>"""		5612637	1					
ANR	5612835	ExpressionStatement	m_xml += m_xen_bootloader	859:3:22632:22657	5612637	1	True				
ANR	5612836	AssignmentExpression	m_xml += m_xen_bootloader		5612637	0		+=			
ANR	5612837	Identifier	m_xml		5612637	0					
ANR	5612838	Identifier	m_xen_bootloader		5612637	1					
ANR	5612839	ExpressionStatement	"m_xml += ""</bootloader>"""	860:3:22662:22686	5612637	2	True				
ANR	5612840	AssignmentExpression	"m_xml += ""</bootloader>"""		5612637	0		+=			
ANR	5612841	Identifier	m_xml		5612637	0					
ANR	5612842	PrimaryExpression	"""</bootloader>"""		5612637	1					
ANR	5612843	ExpressionStatement	"m_xml += ""<devices>"""	862:2:22694:22714	5612637	15	True				
ANR	5612844	AssignmentExpression	"m_xml += ""<devices>"""		5612637	0		+=			
ANR	5612845	Identifier	m_xml		5612637	0					
ANR	5612846	PrimaryExpression	"""<devices>"""		5612637	1					
ANR	5612847	ExpressionStatement	"m_xml += ""<console type='pty'><source path='/dev/ptmx'/></console>"""	863:2:22718:22785	5612637	16	True				
ANR	5612848	AssignmentExpression	"m_xml += ""<console type='pty'><source path='/dev/ptmx'/></console>"""		5612637	0		+=			
ANR	5612849	Identifier	m_xml		5612637	0					
ANR	5612850	PrimaryExpression	"""<console type='pty'><source path='/dev/ptmx'/></console>"""		5612637	1					
ANR	5612851	IfStatement	if ( m_vm_networking )		5612637	17					
ANR	5612852	Condition	m_vm_networking	864:6:22793:22807	5612637	0	True				
ANR	5612853	Identifier	m_vm_networking		5612637	0					
ANR	5612854	CompoundStatement		52:24:1318:1318	5612637	1					
ANR	5612855	IfStatement	"if ( m_vm_networking_type . find ( ""nat"" ) >= 0 )"		5612637	0					
ANR	5612856	Condition	"m_vm_networking_type . find ( ""nat"" ) >= 0"	865:7:22820:22856	5612637	0	True				
ANR	5612857	RelationalExpression	"m_vm_networking_type . find ( ""nat"" ) >= 0"		5612637	0		>=			
ANR	5612858	CallExpression	"m_vm_networking_type . find ( ""nat"" )"		5612637	0					
ANR	5612859	Callee	m_vm_networking_type . find		5612637	0					
ANR	5612860	MemberAccess	m_vm_networking_type . find		5612637	0					
ANR	5612861	Identifier	m_vm_networking_type		5612637	0					
ANR	5612862	Identifier	find		5612637	1					
ANR	5612863	ArgumentList	"""nat"""		5612637	1					
ANR	5612864	Argument	"""nat"""		5612637	0					
ANR	5612865	PrimaryExpression	"""nat"""		5612637	0					
ANR	5612866	PrimaryExpression	0		5612637	1					
ANR	5612867	CompoundStatement		53:47:1367:1367	5612637	1					
ANR	5612868	ExpressionStatement	"m_xml += ""<interface type='network'><source network='default'/></interface>"""	866:4:22866:22942	5612637	0	True				
ANR	5612869	AssignmentExpression	"m_xml += ""<interface type='network'><source network='default'/></interface>"""		5612637	0		+=			
ANR	5612870	Identifier	m_xml		5612637	0					
ANR	5612871	PrimaryExpression	"""<interface type='network'><source network='default'/></interface>"""		5612637	1					
ANR	5612872	ElseStatement	else		5612637	0					
ANR	5612873	IfStatement	"if ( m_vm_networking_type . find ( ""bridge"" ) >= 0 )"		5612637	0					
ANR	5612874	Condition	"m_vm_networking_type . find ( ""bridge"" ) >= 0"	867:14:22958:22997	5612637	0	True				
ANR	5612875	RelationalExpression	"m_vm_networking_type . find ( ""bridge"" ) >= 0"		5612637	0		>=			
ANR	5612876	CallExpression	"m_vm_networking_type . find ( ""bridge"" )"		5612637	0					
ANR	5612877	Callee	m_vm_networking_type . find		5612637	0					
ANR	5612878	MemberAccess	m_vm_networking_type . find		5612637	0					
ANR	5612879	Identifier	m_vm_networking_type		5612637	0					
ANR	5612880	Identifier	find		5612637	1					
ANR	5612881	ArgumentList	"""bridge"""		5612637	1					
ANR	5612882	Argument	"""bridge"""		5612637	0					
ANR	5612883	PrimaryExpression	"""bridge"""		5612637	0					
ANR	5612884	PrimaryExpression	0		5612637	1					
ANR	5612885	CompoundStatement		55:56:1507:1507	5612637	1					
ANR	5612886	ExpressionStatement	"m_xml += ""<interface type='bridge'>"""	868:4:23006:23042	5612637	0	True				
ANR	5612887	AssignmentExpression	"m_xml += ""<interface type='bridge'>"""		5612637	0		+=			
ANR	5612888	Identifier	m_xml		5612637	0					
ANR	5612889	PrimaryExpression	"""<interface type='bridge'>"""		5612637	1					
ANR	5612890	IfStatement	if ( ! m_vm_bridge_interface . empty ( ) )		5612637	1					
ANR	5612891	Condition	! m_vm_bridge_interface . empty ( )	869:8:23052:23081	5612637	0	True				
ANR	5612892	UnaryOperationExpression	! m_vm_bridge_interface . empty ( )		5612637	0					
ANR	5612893	UnaryOperator	!		5612637	0					
ANR	5612894	CallExpression	m_vm_bridge_interface . empty ( )		5612637	1					
ANR	5612895	Callee	m_vm_bridge_interface . empty		5612637	0					
ANR	5612896	MemberAccess	m_vm_bridge_interface . empty		5612637	0					
ANR	5612897	Identifier	m_vm_bridge_interface		5612637	0					
ANR	5612898	Identifier	empty		5612637	1					
ANR	5612899	ArgumentList			5612637	1					
ANR	5612900	CompoundStatement		57:40:1591:1591	5612637	1					
ANR	5612901	ExpressionStatement	"m_xml += ""<source bridge='"""	870:5:23091:23118	5612637	0	True				
ANR	5612902	AssignmentExpression	"m_xml += ""<source bridge='"""		5612637	0		+=			
ANR	5612903	Identifier	m_xml		5612637	0					
ANR	5612904	PrimaryExpression	"""<source bridge='"""		5612637	1					
ANR	5612905	ExpressionStatement	m_xml += m_vm_bridge_interface . c_str ( )	871:5:23125:23163	5612637	1	True				
ANR	5612906	AssignmentExpression	m_xml += m_vm_bridge_interface . c_str ( )		5612637	0		+=			
ANR	5612907	Identifier	m_xml		5612637	0					
ANR	5612908	CallExpression	m_vm_bridge_interface . c_str ( )		5612637	1					
ANR	5612909	Callee	m_vm_bridge_interface . c_str		5612637	0					
ANR	5612910	MemberAccess	m_vm_bridge_interface . c_str		5612637	0					
ANR	5612911	Identifier	m_vm_bridge_interface		5612637	0					
ANR	5612912	Identifier	c_str		5612637	1					
ANR	5612913	ArgumentList			5612637	1					
ANR	5612914	ExpressionStatement	"m_xml += ""'/>"""	872:5:23170:23184	5612637	2	True				
ANR	5612915	AssignmentExpression	"m_xml += ""'/>"""		5612637	0		+=			
ANR	5612916	Identifier	m_xml		5612637	0					
ANR	5612917	PrimaryExpression	"""'/>"""		5612637	1					
ANR	5612918	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""mac address is %s"" , m_vm_job_mac . Value ( ) )"	874:4:23196:23260	5612637	2	True				
ANR	5612919	CallExpression	"vmprintf ( D_FULLDEBUG , ""mac address is %s"" , m_vm_job_mac . Value ( ) )"		5612637	0					
ANR	5612920	Callee	vmprintf		5612637	0					
ANR	5612921	Identifier	vmprintf		5612637	0					
ANR	5612922	ArgumentList	D_FULLDEBUG		5612637	1					
ANR	5612923	Argument	D_FULLDEBUG		5612637	0					
ANR	5612924	Identifier	D_FULLDEBUG		5612637	0					
ANR	5612925	Argument	"""mac address is %s"""		5612637	1					
ANR	5612926	PrimaryExpression	"""mac address is %s"""		5612637	0					
ANR	5612927	Argument	m_vm_job_mac . Value ( )		5612637	2					
ANR	5612928	CallExpression	m_vm_job_mac . Value ( )		5612637	0					
ANR	5612929	Callee	m_vm_job_mac . Value		5612637	0					
ANR	5612930	MemberAccess	m_vm_job_mac . Value		5612637	0					
ANR	5612931	Identifier	m_vm_job_mac		5612637	0					
ANR	5612932	Identifier	Value		5612637	1					
ANR	5612933	ArgumentList			5612637	1					
ANR	5612934	IfStatement	if ( ! m_vm_job_mac . IsEmpty ( ) )		5612637	3					
ANR	5612935	Condition	! m_vm_job_mac . IsEmpty ( )	875:7:23269:23291	5612637	0	True				
ANR	5612936	UnaryOperationExpression	! m_vm_job_mac . IsEmpty ( )		5612637	0					
ANR	5612937	UnaryOperator	!		5612637	0					
ANR	5612938	CallExpression	m_vm_job_mac . IsEmpty ( )		5612637	1					
ANR	5612939	Callee	m_vm_job_mac . IsEmpty		5612637	0					
ANR	5612940	MemberAccess	m_vm_job_mac . IsEmpty		5612637	0					
ANR	5612941	Identifier	m_vm_job_mac		5612637	0					
ANR	5612942	Identifier	IsEmpty		5612637	1					
ANR	5612943	ArgumentList			5612637	1					
ANR	5612944	CompoundStatement		64:4:1805:1805	5612637	1					
ANR	5612945	ExpressionStatement	"m_xml += ""<mac address='"""	877:5:23305:23330	5612637	0	True				
ANR	5612946	AssignmentExpression	"m_xml += ""<mac address='"""		5612637	0		+=			
ANR	5612947	Identifier	m_xml		5612637	0					
ANR	5612948	PrimaryExpression	"""<mac address='"""		5612637	1					
ANR	5612949	ExpressionStatement	m_xml += m_vm_job_mac	878:5:23337:23358	5612637	1	True				
ANR	5612950	AssignmentExpression	m_xml += m_vm_job_mac		5612637	0		+=			
ANR	5612951	Identifier	m_xml		5612637	0					
ANR	5612952	Identifier	m_vm_job_mac		5612637	1					
ANR	5612953	ExpressionStatement	"m_xml += ""'/>"""	879:5:23365:23379	5612637	2	True				
ANR	5612954	AssignmentExpression	"m_xml += ""'/>"""		5612637	0		+=			
ANR	5612955	Identifier	m_xml		5612637	0					
ANR	5612956	PrimaryExpression	"""'/>"""		5612637	1					
ANR	5612957	ExpressionStatement	"m_xml += ""</interface>"""	881:4:23391:23414	5612637	4	True				
ANR	5612958	AssignmentExpression	"m_xml += ""</interface>"""		5612637	0		+=			
ANR	5612959	Identifier	m_xml		5612637	0					
ANR	5612960	PrimaryExpression	"""</interface>"""		5612637	1					
ANR	5612961	ExpressionStatement	disk_string = makeVirshDiskString ( )	886:2:23476:23511	5612637	18	True				
ANR	5612962	AssignmentExpression	disk_string = makeVirshDiskString ( )		5612637	0		=			
ANR	5612963	Identifier	disk_string		5612637	0					
ANR	5612964	CallExpression	makeVirshDiskString ( )		5612637	1					
ANR	5612965	Callee	makeVirshDiskString		5612637	0					
ANR	5612966	Identifier	makeVirshDiskString		5612637	0					
ANR	5612967	ArgumentList			5612637	1					
ANR	5612968	ExpressionStatement	m_xml += disk_string	887:2:23515:23535	5612637	19	True				
ANR	5612969	AssignmentExpression	m_xml += disk_string		5612637	0		+=			
ANR	5612970	Identifier	m_xml		5612637	0					
ANR	5612971	Identifier	disk_string		5612637	1					
ANR	5612972	ExpressionStatement	"m_xml += ""</devices></domain>"""	888:2:23539:23569	5612637	20	True				
ANR	5612973	AssignmentExpression	"m_xml += ""</devices></domain>"""		5612637	0		+=			
ANR	5612974	Identifier	m_xml		5612637	0					
ANR	5612975	PrimaryExpression	"""</devices></domain>"""		5612637	1					
ANR	5612976	ReturnStatement	return true ;	891:1:23576:23587	5612637	3	True				
ANR	5612977	Identifier	true		5612637	0					
ANR	5612978	ReturnType	bool		5612637	1					
ANR	5612979	Identifier	XenType :: CreateVirshConfigFile		5612637	2					
ANR	5612980	ParameterList	const char * filename		5612637	3					
ANR	5612981	Parameter	const char * filename	812:31:21470:21489	5612637	0	True				
ANR	5612982	ParameterType	const char *		5612637	0					
ANR	5612983	Identifier	filename		5612637	1					
ANR	5612984	CFGEntryNode	ENTRY		5612637		True				
ANR	5612985	CFGExitNode	EXIT		5612637		True				
ANR	5612986	Symbol	m_vm_name		5612637						
ANR	5612987	Symbol	m_xen_root . IsEmpty		5612637						
ANR	5612988	Symbol	m_xen_bootloader		5612637						
ANR	5612989	Symbol	m_vm_bridge_interface		5612637						
ANR	5612990	Symbol	m_vm_job_mac . IsEmpty		5612637						
ANR	5612991	Symbol	m_xen_kernel_submit_param		5612637						
ANR	5612992	Symbol	m_vm_mem		5612637						
ANR	5612993	Symbol	m_vm_networking_type . find		5612637						
ANR	5612994	Symbol	m_vm_job_mac		5612637						
ANR	5612995	Symbol	m_xen_initrd_file . IsEmpty		5612637						
ANR	5612996	Symbol	XEN_KERNEL_INCLUDED		5612637						
ANR	5612997	Symbol	m_xen_kernel_submit_param . Value		5612637						
ANR	5612998	Symbol	m_xen_kernel_file		5612637						
ANR	5612999	Symbol	m_xen_kernel_params		5612637						
ANR	5613000	Symbol	strcasecmp		5612637						
ANR	5613001	Symbol	makeVirshDiskString		5612637						
ANR	5613002	Symbol	m_xen_root		5612637						
ANR	5613003	Symbol	m_vm_bridge_interface . c_str		5612637						
ANR	5613004	Symbol	disk_string		5612637						
ANR	5613005	Symbol	m_xen_kernel_file . IsEmpty		5612637						
ANR	5613006	Symbol	false		5612637						
ANR	5613007	Symbol	D_ALWAYS		5612637						
ANR	5613008	Symbol	m_xml		5612637						
ANR	5613009	Symbol	m_vm_networking_type		5612637						
ANR	5613010	Symbol	VirshType :: CreateVirshConfigFile		5612637						
ANR	5613011	Symbol	D_FULLDEBUG		5612637						
ANR	5613012	Symbol	filename		5612637						
ANR	5613013	Symbol	m_vm_bridge_interface . empty		5612637						
ANR	5613014	Symbol	m_vm_job_mac . Value		5612637						
ANR	5613015	Symbol	m_xen_kernel_params . IsEmpty		5612637						
ANR	5613016	Symbol	m_vm_networking		5612637						
ANR	5613017	Symbol	true		5612637						
ANR	5613018	Symbol	m_xen_initrd_file		5612637						
ANR	5613019	Symbol	m_vcpus		5612637						
ANR	5613020	Function	VirshType :: CreateXenVMConfigFile	894:0:23592:23741							
ANR	5613021	FunctionDef	VirshType :: CreateXenVMConfigFile (const char * filename)		5613020	0					
ANR	5613022	CompoundStatement		896:0:23652:23741	5613020	0					
ANR	5613023	IfStatement	if ( ! filename )		5613020	0					
ANR	5613024	Condition	! filename	897:5:23659:23667	5613020	0	True				
ANR	5613025	UnaryOperationExpression	! filename		5613020	0					
ANR	5613026	UnaryOperator	!		5613020	0					
ANR	5613027	Identifier	filename		5613020	1					
ANR	5613028	CompoundStatement		2:17:18:18	5613020	1					
ANR	5613029	ReturnStatement	return false ;	898:2:23675:23687	5613020	0	True				
ANR	5613030	Identifier	false		5613020	0					
ANR	5613031	ReturnStatement	return CreateVirshConfigFile ( filename ) ;	901:8:23701:23739	5613020	1	True				
ANR	5613032	CallExpression	CreateVirshConfigFile ( filename )		5613020	0					
ANR	5613033	Callee	CreateVirshConfigFile		5613020	0					
ANR	5613034	Identifier	CreateVirshConfigFile		5613020	0					
ANR	5613035	ArgumentList	filename		5613020	1					
ANR	5613036	Argument	filename		5613020	0					
ANR	5613037	Identifier	filename		5613020	0					
ANR	5613038	ReturnType	bool		5613020	1					
ANR	5613039	Identifier	VirshType :: CreateXenVMConfigFile		5613020	2					
ANR	5613040	ParameterList	const char * filename		5613020	3					
ANR	5613041	Parameter	const char * filename	895:33:23630:23649	5613020	0	True				
ANR	5613042	ParameterType	const char *		5613020	0					
ANR	5613043	Identifier	filename		5613020	1					
ANR	5613044	CFGEntryNode	ENTRY		5613020		True				
ANR	5613045	CFGExitNode	EXIT		5613020		True				
ANR	5613046	Symbol	filename		5613020						
ANR	5613047	Symbol	CreateVirshConfigFile		5613020						
ANR	5613048	Symbol	false		5613020						
ANR	5613049	Function	VirshType :: Connect	904:0:23744:24159							
ANR	5613050	FunctionDef	VirshType :: Connect ()		5613049	0					
ANR	5613051	CompoundStatement		905:0:23770:24159	5613049	0					
ANR	5613052	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	906:1:23773:23806	5613049	0	True				
ANR	5613053	IdentifierDecl	priv = set_root_priv ( )		5613049	0					
ANR	5613054	IdentifierDeclType	priv_state		5613049	0					
ANR	5613055	Identifier	priv		5613049	1					
ANR	5613056	AssignmentExpression	priv = set_root_priv ( )		5613049	2		=			
ANR	5613057	Identifier	priv		5613049	0					
ANR	5613058	CallExpression	set_root_priv ( )		5613049	1					
ANR	5613059	Callee	set_root_priv		5613049	0					
ANR	5613060	Identifier	set_root_priv		5613049	0					
ANR	5613061	ArgumentList			5613049	1					
ANR	5613062	IfStatement	if ( m_libvirt_connection )		5613049	1					
ANR	5613063	Condition	m_libvirt_connection	908:6:23815:23834	5613049	0	True				
ANR	5613064	Identifier	m_libvirt_connection		5613049	0					
ANR	5613065	CompoundStatement		5:1:68:68	5613049	1					
ANR	5613066	ExpressionStatement	virConnectClose ( m_libvirt_connection )	910:2:23843:23882	5613049	0	True				
ANR	5613067	CallExpression	virConnectClose ( m_libvirt_connection )		5613049	0					
ANR	5613068	Callee	virConnectClose		5613049	0					
ANR	5613069	Identifier	virConnectClose		5613049	0					
ANR	5613070	ArgumentList	m_libvirt_connection		5613049	1					
ANR	5613071	Argument	m_libvirt_connection		5613049	0					
ANR	5613072	Identifier	m_libvirt_connection		5613049	0					
ANR	5613073	ExpressionStatement	m_libvirt_connection = virConnectOpen ( m_sessionID . c_str ( ) )	913:4:23892:23952	5613049	2	True				
ANR	5613074	AssignmentExpression	m_libvirt_connection = virConnectOpen ( m_sessionID . c_str ( ) )		5613049	0		=			
ANR	5613075	Identifier	m_libvirt_connection		5613049	0					
ANR	5613076	CallExpression	virConnectOpen ( m_sessionID . c_str ( ) )		5613049	1					
ANR	5613077	Callee	virConnectOpen		5613049	0					
ANR	5613078	Identifier	virConnectOpen		5613049	0					
ANR	5613079	ArgumentList	m_sessionID . c_str ( )		5613049	1					
ANR	5613080	Argument	m_sessionID . c_str ( )		5613049	0					
ANR	5613081	CallExpression	m_sessionID . c_str ( )		5613049	0					
ANR	5613082	Callee	m_sessionID . c_str		5613049	0					
ANR	5613083	MemberAccess	m_sessionID . c_str		5613049	0					
ANR	5613084	Identifier	m_sessionID		5613049	0					
ANR	5613085	Identifier	c_str		5613049	1					
ANR	5613086	ArgumentList			5613049	1					
ANR	5613087	ExpressionStatement	set_priv ( priv )	914:4:23958:23972	5613049	3	True				
ANR	5613088	CallExpression	set_priv ( priv )		5613049	0					
ANR	5613089	Callee	set_priv		5613049	0					
ANR	5613090	Identifier	set_priv		5613049	0					
ANR	5613091	ArgumentList	priv		5613049	1					
ANR	5613092	Argument	priv		5613049	0					
ANR	5613093	Identifier	priv		5613049	0					
ANR	5613094	IfStatement	if ( m_libvirt_connection == NULL )		5613049	4					
ANR	5613095	Condition	m_libvirt_connection == NULL	916:7:23982:24009	5613049	0	True				
ANR	5613096	EqualityExpression	m_libvirt_connection == NULL		5613049	0		==			
ANR	5613097	Identifier	m_libvirt_connection		5613049	0					
ANR	5613098	Identifier	NULL		5613049	1					
ANR	5613099	CompoundStatement		14:2:250:285	5613049	1					
ANR	5613100	IdentifierDeclStatement	virErrorPtr err = virGetLastError ( ) ;	918:2:24021:24056	5613049	0	True				
ANR	5613101	IdentifierDecl	err = virGetLastError ( )		5613049	0					
ANR	5613102	IdentifierDeclType	virErrorPtr		5613049	0					
ANR	5613103	Identifier	err		5613049	1					
ANR	5613104	AssignmentExpression	err = virGetLastError ( )		5613049	2		=			
ANR	5613105	Identifier	err		5613049	0					
ANR	5613106	CallExpression	virGetLastError ( )		5613049	1					
ANR	5613107	Callee	virGetLastError		5613049	0					
ANR	5613108	Identifier	virGetLastError		5613049	0					
ANR	5613109	ArgumentList			5613049	1					
ANR	5613110	ExpressionStatement	"EXCEPT ( ""Failed to create libvirt connection: %s"" , ( err ? err -> message : ""No reason found"" ) )"	919:2:24060:24151	5613049	1	True				
ANR	5613111	CallExpression	"EXCEPT ( ""Failed to create libvirt connection: %s"" , ( err ? err -> message : ""No reason found"" ) )"		5613049	0					
ANR	5613112	Callee	EXCEPT		5613049	0					
ANR	5613113	Identifier	EXCEPT		5613049	0					
ANR	5613114	ArgumentList	"""Failed to create libvirt connection: %s"""		5613049	1					
ANR	5613115	Argument	"""Failed to create libvirt connection: %s"""		5613049	0					
ANR	5613116	PrimaryExpression	"""Failed to create libvirt connection: %s"""		5613049	0					
ANR	5613117	Argument	"err ? err -> message : ""No reason found"""		5613049	1					
ANR	5613118	ConditionalExpression	"err ? err -> message : ""No reason found"""		5613049	0					
ANR	5613119	Condition	err		5613049	0					
ANR	5613120	Identifier	err		5613049	0					
ANR	5613121	PtrMemberAccess	err -> message		5613049	1					
ANR	5613122	Identifier	err		5613049	0					
ANR	5613123	Identifier	message		5613049	1					
ANR	5613124	PrimaryExpression	"""No reason found"""		5613049	2					
ANR	5613125	ReturnType	void		5613049	1					
ANR	5613126	Identifier	VirshType :: Connect		5613049	2					
ANR	5613127	ParameterList			5613049	3					
ANR	5613128	CFGEntryNode	ENTRY		5613049		True				
ANR	5613129	CFGExitNode	EXIT		5613049		True				
ANR	5613130	Symbol	* err		5613049						
ANR	5613131	Symbol	m_sessionID . c_str		5613049						
ANR	5613132	Symbol	m_libvirt_connection		5613049						
ANR	5613133	Symbol	NULL		5613049						
ANR	5613134	Symbol	m_sessionID		5613049						
ANR	5613135	Symbol	err		5613049						
ANR	5613136	Symbol	err -> message		5613049						
ANR	5613137	Symbol	virGetLastError		5613049						
ANR	5613138	Symbol	virConnectOpen		5613049						
ANR	5613139	Symbol	set_root_priv		5613049						
ANR	5613140	Symbol	priv		5613049						
ANR	5613141	Function	VirshType :: parseXenDiskParam	923:0:24162:26984							
ANR	5613142	FunctionDef	VirshType :: parseXenDiskParam (const char * format)		5613141	0					
ANR	5613143	CompoundStatement		925:0:24216:26984	5613141	0					
ANR	5613144	IfStatement	if ( ! format || ( format [ 0 ] == '\\0' ) )		5613141	0					
ANR	5613145	Condition	! format || ( format [ 0 ] == '\\0' )	926:5:24223:24252	5613141	0	True				
ANR	5613146	OrExpression	! format || ( format [ 0 ] == '\\0' )		5613141	0		||			
ANR	5613147	UnaryOperationExpression	! format		5613141	0					
ANR	5613148	UnaryOperator	!		5613141	0					
ANR	5613149	Identifier	format		5613141	1					
ANR	5613150	EqualityExpression	format [ 0 ] == '\\0'		5613141	1		==			
ANR	5613151	ArrayIndexing	format [ 0 ]		5613141	0					
ANR	5613152	Identifier	format		5613141	0					
ANR	5613153	PrimaryExpression	0		5613141	1					
ANR	5613154	PrimaryExpression	'\\0'		5613141	1					
ANR	5613155	CompoundStatement		2:38:39:39	5613141	1					
ANR	5613156	ReturnStatement	return false ;	927:2:24260:24272	5613141	0	True				
ANR	5613157	Identifier	false		5613141	0					
ANR	5613158	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""format = %s\\n"" , format )"	930:4:24282:24328	5613141	1	True				
ANR	5613159	CallExpression	"vmprintf ( D_FULLDEBUG , ""format = %s\\n"" , format )"		5613141	0					
ANR	5613160	Callee	vmprintf		5613141	0					
ANR	5613161	Identifier	vmprintf		5613141	0					
ANR	5613162	ArgumentList	D_FULLDEBUG		5613141	1					
ANR	5613163	Argument	D_FULLDEBUG		5613141	0					
ANR	5613164	Identifier	D_FULLDEBUG		5613141	0					
ANR	5613165	Argument	"""format = %s\\n"""		5613141	1					
ANR	5613166	PrimaryExpression	"""format = %s\\n"""		5613141	0					
ANR	5613167	Argument	format		5613141	2					
ANR	5613168	Identifier	format		5613141	0					
ANR	5613169	IdentifierDeclStatement	StringList working_files ;	932:1:24332:24356	5613141	2	True				
ANR	5613170	IdentifierDecl	working_files		5613141	0					
ANR	5613171	IdentifierDeclType	StringList		5613141	0					
ANR	5613172	Identifier	working_files		5613141	1					
ANR	5613173	ExpressionStatement	"find_all_files_in_dir ( m_workingpath . Value ( ) , working_files , true )"	933:1:24359:24424	5613141	3	True				
ANR	5613174	CallExpression	"find_all_files_in_dir ( m_workingpath . Value ( ) , working_files , true )"		5613141	0					
ANR	5613175	Callee	find_all_files_in_dir		5613141	0					
ANR	5613176	Identifier	find_all_files_in_dir		5613141	0					
ANR	5613177	ArgumentList	m_workingpath . Value ( )		5613141	1					
ANR	5613178	Argument	m_workingpath . Value ( )		5613141	0					
ANR	5613179	CallExpression	m_workingpath . Value ( )		5613141	0					
ANR	5613180	Callee	m_workingpath . Value		5613141	0					
ANR	5613181	MemberAccess	m_workingpath . Value		5613141	0					
ANR	5613182	Identifier	m_workingpath		5613141	0					
ANR	5613183	Identifier	Value		5613141	1					
ANR	5613184	ArgumentList			5613141	1					
ANR	5613185	Argument	working_files		5613141	1					
ANR	5613186	Identifier	working_files		5613141	0					
ANR	5613187	Argument	true		5613141	2					
ANR	5613188	Identifier	true		5613141	0					
ANR	5613189	IdentifierDeclStatement	"StringList disk_files ( format , "","" ) ;"	935:1:24428:24462	5613141	4	True				
ANR	5613190	IdentifierDecl	"disk_files ( format , "","" )"		5613141	0					
ANR	5613191	IdentifierDeclType	StringList		5613141	0					
ANR	5613192	Identifier	disk_files		5613141	1					
ANR	5613193	Expression	"format , "","""		5613141	2					
ANR	5613194	Identifier	format		5613141	0					
ANR	5613195	PrimaryExpression	""","""		5613141	1					
ANR	5613196	IfStatement	if ( disk_files . isEmpty ( ) )		5613141	5					
ANR	5613197	Condition	disk_files . isEmpty ( )	936:5:24469:24488	5613141	0	True				
ANR	5613198	CallExpression	disk_files . isEmpty ( )		5613141	0					
ANR	5613199	Callee	disk_files . isEmpty		5613141	0					
ANR	5613200	MemberAccess	disk_files . isEmpty		5613141	0					
ANR	5613201	Identifier	disk_files		5613141	0					
ANR	5613202	Identifier	isEmpty		5613141	1					
ANR	5613203	ArgumentList			5613141	1					
ANR	5613204	CompoundStatement		12:28:275:275	5613141	1					
ANR	5613205	ReturnStatement	return false ;	937:2:24496:24508	5613141	0	True				
ANR	5613206	Identifier	false		5613141	0					
ANR	5613207	ExpressionStatement	disk_files . rewind ( )	940:1:24515:24534	5613141	6	True				
ANR	5613208	CallExpression	disk_files . rewind ( )		5613141	0					
ANR	5613209	Callee	disk_files . rewind		5613141	0					
ANR	5613210	MemberAccess	disk_files . rewind		5613141	0					
ANR	5613211	Identifier	disk_files		5613141	0					
ANR	5613212	Identifier	rewind		5613141	1					
ANR	5613213	ArgumentList			5613141	1					
ANR	5613214	IdentifierDeclStatement	const char * one_disk = NULL ;	941:1:24537:24564	5613141	7	True				
ANR	5613215	IdentifierDecl	* one_disk = NULL		5613141	0					
ANR	5613216	IdentifierDeclType	const char *		5613141	0					
ANR	5613217	Identifier	one_disk		5613141	1					
ANR	5613218	AssignmentExpression	* one_disk = NULL		5613141	2		=			
ANR	5613219	Identifier	NULL		5613141	0					
ANR	5613220	Identifier	NULL		5613141	1					
ANR	5613221	WhileStatement	while ( ( one_disk = disk_files . next ( ) ) != NULL )		5613141	8					
ANR	5613222	Condition	( one_disk = disk_files . next ( ) ) != NULL	942:8:24574:24612	5613141	0	True				
ANR	5613223	EqualityExpression	( one_disk = disk_files . next ( ) ) != NULL		5613141	0		!=			
ANR	5613224	AssignmentExpression	one_disk = disk_files . next ( )		5613141	0		=			
ANR	5613225	Identifier	one_disk		5613141	0					
ANR	5613226	CallExpression	disk_files . next ( )		5613141	1					
ANR	5613227	Callee	disk_files . next		5613141	0					
ANR	5613228	MemberAccess	disk_files . next		5613141	0					
ANR	5613229	Identifier	disk_files		5613141	0					
ANR	5613230	Identifier	next		5613141	1					
ANR	5613231	ArgumentList			5613141	1					
ANR	5613232	Identifier	NULL		5613141	1					
ANR	5613233	CompoundStatement		67:2:1557:1601	5613141	1					
ANR	5613234	IdentifierDeclStatement	"StringList single_disk_file ( one_disk , "":"" ) ;"	944:2:24643:24685	5613141	0	True				
ANR	5613235	IdentifierDecl	"single_disk_file ( one_disk , "":"" )"		5613141	0					
ANR	5613236	IdentifierDeclType	StringList		5613141	0					
ANR	5613237	Identifier	single_disk_file		5613141	1					
ANR	5613238	Expression	"one_disk , "":"""		5613141	2					
ANR	5613239	Identifier	one_disk		5613141	0					
ANR	5613240	PrimaryExpression	""":"""		5613141	1					
ANR	5613241	IdentifierDeclStatement	int iNumParams = single_disk_file . number ( ) ;	945:8:24695:24737	5613141	1	True				
ANR	5613242	IdentifierDecl	iNumParams = single_disk_file . number ( )		5613141	0					
ANR	5613243	IdentifierDeclType	int		5613141	0					
ANR	5613244	Identifier	iNumParams		5613141	1					
ANR	5613245	AssignmentExpression	iNumParams = single_disk_file . number ( )		5613141	2		=			
ANR	5613246	Identifier	iNumParams		5613141	0					
ANR	5613247	CallExpression	single_disk_file . number ( )		5613141	1					
ANR	5613248	Callee	single_disk_file . number		5613141	0					
ANR	5613249	MemberAccess	single_disk_file . number		5613141	0					
ANR	5613250	Identifier	single_disk_file		5613141	0					
ANR	5613251	Identifier	number		5613141	1					
ANR	5613252	ArgumentList			5613141	1					
ANR	5613253	IfStatement	if ( iNumParams < 3 || iNumParams > 4 )		5613141	2					
ANR	5613254	Condition	iNumParams < 3 || iNumParams > 4	946:6:24745:24776	5613141	0	True				
ANR	5613255	OrExpression	iNumParams < 3 || iNumParams > 4		5613141	0		||			
ANR	5613256	RelationalExpression	iNumParams < 3		5613141	0		<			
ANR	5613257	Identifier	iNumParams		5613141	0					
ANR	5613258	PrimaryExpression	3		5613141	1					
ANR	5613259	RelationalExpression	iNumParams > 4		5613141	1		>			
ANR	5613260	Identifier	iNumParams		5613141	0					
ANR	5613261	PrimaryExpression	4		5613141	1					
ANR	5613262	CompoundStatement		23:8:572:572	5613141	1					
ANR	5613263	ReturnStatement	return false ;	948:3:24794:24806	5613141	0	True				
ANR	5613264	Identifier	false		5613141	0					
ANR	5613265	ExpressionStatement	single_disk_file . rewind ( )	951:2:24815:24840	5613141	3	True				
ANR	5613266	CallExpression	single_disk_file . rewind ( )		5613141	0					
ANR	5613267	Callee	single_disk_file . rewind		5613141	0					
ANR	5613268	MemberAccess	single_disk_file . rewind		5613141	0					
ANR	5613269	Identifier	single_disk_file		5613141	0					
ANR	5613270	Identifier	rewind		5613141	1					
ANR	5613271	ArgumentList			5613141	1					
ANR	5613272	IdentifierDeclStatement	MyString dfile = single_disk_file . next ( ) ;	954:2:24870:24910	5613141	4	True				
ANR	5613273	IdentifierDecl	dfile = single_disk_file . next ( )		5613141	0					
ANR	5613274	IdentifierDeclType	MyString		5613141	0					
ANR	5613275	Identifier	dfile		5613141	1					
ANR	5613276	AssignmentExpression	dfile = single_disk_file . next ( )		5613141	2		=			
ANR	5613277	Identifier	dfile		5613141	0					
ANR	5613278	CallExpression	single_disk_file . next ( )		5613141	1					
ANR	5613279	Callee	single_disk_file . next		5613141	0					
ANR	5613280	MemberAccess	single_disk_file . next		5613141	0					
ANR	5613281	Identifier	single_disk_file		5613141	0					
ANR	5613282	Identifier	next		5613141	1					
ANR	5613283	ArgumentList			5613141	1					
ANR	5613284	IfStatement	if ( dfile . IsEmpty ( ) )		5613141	5					
ANR	5613285	Condition	dfile . IsEmpty ( )	955:6:24918:24932	5613141	0	True				
ANR	5613286	CallExpression	dfile . IsEmpty ( )		5613141	0					
ANR	5613287	Callee	dfile . IsEmpty		5613141	0					
ANR	5613288	MemberAccess	dfile . IsEmpty		5613141	0					
ANR	5613289	Identifier	dfile		5613141	0					
ANR	5613290	Identifier	IsEmpty		5613141	1					
ANR	5613291	ArgumentList			5613141	1					
ANR	5613292	CompoundStatement		31:24:719:719	5613141	1					
ANR	5613293	ReturnStatement	return false ;	956:3:24941:24953	5613141	0	True				
ANR	5613294	Identifier	false		5613141	0					
ANR	5613295	ExpressionStatement	dfile . trim ( )	958:2:24961:24973	5613141	6	True				
ANR	5613296	CallExpression	dfile . trim ( )		5613141	0					
ANR	5613297	Callee	dfile . trim		5613141	0					
ANR	5613298	MemberAccess	dfile . trim		5613141	0					
ANR	5613299	Identifier	dfile		5613141	0					
ANR	5613300	Identifier	trim		5613141	1					
ANR	5613301	ArgumentList			5613141	1					
ANR	5613302	IdentifierDeclStatement	const char * tmp_base_name = condor_basename ( dfile . Value ( ) ) ;	960:2:24978:25036	5613141	7	True				
ANR	5613303	IdentifierDecl	* tmp_base_name = condor_basename ( dfile . Value ( ) )		5613141	0					
ANR	5613304	IdentifierDeclType	const char *		5613141	0					
ANR	5613305	Identifier	tmp_base_name		5613141	1					
ANR	5613306	AssignmentExpression	* tmp_base_name = condor_basename ( dfile . Value ( ) )		5613141	2		=			
ANR	5613307	Identifier	tmp_base_name		5613141	0					
ANR	5613308	CallExpression	condor_basename ( dfile . Value ( ) )		5613141	1					
ANR	5613309	Callee	condor_basename		5613141	0					
ANR	5613310	Identifier	condor_basename		5613141	0					
ANR	5613311	ArgumentList	dfile . Value ( )		5613141	1					
ANR	5613312	Argument	dfile . Value ( )		5613141	0					
ANR	5613313	CallExpression	dfile . Value ( )		5613141	0					
ANR	5613314	Callee	dfile . Value		5613141	0					
ANR	5613315	MemberAccess	dfile . Value		5613141	0					
ANR	5613316	Identifier	dfile		5613141	0					
ANR	5613317	Identifier	Value		5613141	1					
ANR	5613318	ArgumentList			5613141	1					
ANR	5613319	IfStatement	if ( ! tmp_base_name )		5613141	8					
ANR	5613320	Condition	! tmp_base_name	961:6:25044:25057	5613141	0	True				
ANR	5613321	UnaryOperationExpression	! tmp_base_name		5613141	0					
ANR	5613322	UnaryOperator	!		5613141	0					
ANR	5613323	Identifier	tmp_base_name		5613141	1					
ANR	5613324	CompoundStatement		37:23:844:844	5613141	1					
ANR	5613325	ReturnStatement	return false ;	962:3:25066:25078	5613141	0	True				
ANR	5613326	Identifier	false		5613141	0					
ANR	5613327	IdentifierDeclStatement	MyString disk_file ;	966:2:25143:25161	5613141	9	True				
ANR	5613328	IdentifierDecl	disk_file		5613141	0					
ANR	5613329	IdentifierDeclType	MyString		5613141	0					
ANR	5613330	Identifier	disk_file		5613141	1					
ANR	5613331	IfStatement	"if ( filelist_contains_file ( dfile . Value ( ) , & working_files , true ) )"		5613141	10					
ANR	5613332	Condition	"filelist_contains_file ( dfile . Value ( ) , & working_files , true )"	967:6:25169:25232	5613141	0	True				
ANR	5613333	CallExpression	"filelist_contains_file ( dfile . Value ( ) , & working_files , true )"		5613141	0					
ANR	5613334	Callee	filelist_contains_file		5613141	0					
ANR	5613335	Identifier	filelist_contains_file		5613141	0					
ANR	5613336	ArgumentList	dfile . Value ( )		5613141	1					
ANR	5613337	Argument	dfile . Value ( )		5613141	0					
ANR	5613338	CallExpression	dfile . Value ( )		5613141	0					
ANR	5613339	Callee	dfile . Value		5613141	0					
ANR	5613340	MemberAccess	dfile . Value		5613141	0					
ANR	5613341	Identifier	dfile		5613141	0					
ANR	5613342	Identifier	Value		5613141	1					
ANR	5613343	ArgumentList			5613141	1					
ANR	5613344	Argument	& working_files		5613141	1					
ANR	5613345	UnaryOperationExpression	& working_files		5613141	0					
ANR	5613346	UnaryOperator	&		5613141	0					
ANR	5613347	Identifier	working_files		5613141	1					
ANR	5613348	Argument	true		5613141	2					
ANR	5613349	Identifier	true		5613141	0					
ANR	5613350	CompoundStatement		44:29:1019:1019	5613141	1					
ANR	5613351	ExpressionStatement	disk_file = m_workingpath	970:3:25267:25292	5613141	0	True				
ANR	5613352	AssignmentExpression	disk_file = m_workingpath		5613141	0		=			
ANR	5613353	Identifier	disk_file		5613141	0					
ANR	5613354	Identifier	m_workingpath		5613141	1					
ANR	5613355	ExpressionStatement	disk_file += DIR_DELIM_CHAR	971:3:25297:25324	5613141	1	True				
ANR	5613356	AssignmentExpression	disk_file += DIR_DELIM_CHAR		5613141	0		+=			
ANR	5613357	Identifier	disk_file		5613141	0					
ANR	5613358	Identifier	DIR_DELIM_CHAR		5613141	1					
ANR	5613359	ExpressionStatement	disk_file += tmp_base_name	972:3:25329:25355	5613141	2	True				
ANR	5613360	AssignmentExpression	disk_file += tmp_base_name		5613141	0		+=			
ANR	5613361	Identifier	disk_file		5613141	0					
ANR	5613362	Identifier	tmp_base_name		5613141	1					
ANR	5613363	ExpressionStatement	m_has_transferred_disk_file = true	974:3:25361:25395	5613141	3	True				
ANR	5613364	AssignmentExpression	m_has_transferred_disk_file = true		5613141	0		=			
ANR	5613365	Identifier	m_has_transferred_disk_file		5613141	0					
ANR	5613366	Identifier	true		5613141	1					
ANR	5613367	ElseStatement	else		5613141	0					
ANR	5613368	CompoundStatement		51:8:1188:1188	5613141	0					
ANR	5613369	IfStatement	if ( fullpath ( dfile . Value ( ) ) == false )		5613141	0					
ANR	5613370	Condition	fullpath ( dfile . Value ( ) ) == false	977:7:25445:25476	5613141	0	True				
ANR	5613371	EqualityExpression	fullpath ( dfile . Value ( ) ) == false		5613141	0		==			
ANR	5613372	CallExpression	fullpath ( dfile . Value ( ) )		5613141	0					
ANR	5613373	Callee	fullpath		5613141	0					
ANR	5613374	Identifier	fullpath		5613141	0					
ANR	5613375	ArgumentList	dfile . Value ( )		5613141	1					
ANR	5613376	Argument	dfile . Value ( )		5613141	0					
ANR	5613377	CallExpression	dfile . Value ( )		5613141	0					
ANR	5613378	Callee	dfile . Value		5613141	0					
ANR	5613379	MemberAccess	dfile . Value		5613141	0					
ANR	5613380	Identifier	dfile		5613141	0					
ANR	5613381	Identifier	Value		5613141	1					
ANR	5613382	ArgumentList			5613141	1					
ANR	5613383	Identifier	false		5613141	1					
ANR	5613384	CompoundStatement		53:41:1262:1262	5613141	1					
ANR	5613385	Statement	vmprintf	978:4:25485:25492	5613141	0	True				
ANR	5613386	Statement	(	978:12:25493:25493	5613141	1	True				
ANR	5613387	Statement	D_ALWAYS	978:13:25494:25501	5613141	2	True				
ANR	5613388	Statement	","	978:21:25502:25502	5613141	3	True				
ANR	5613389	Statement	"""File(%s) for xen disk """	978:23:25504:25527	5613141	4	True				
ANR	5613390	Statement	"""should have full path name\\n"""	979:6:25535:25564	5613141	5	True				
ANR	5613391	Statement	","	979:36:25565:25565	5613141	6	True				
ANR	5613392	Statement	dfile	979:38:25567:25571	5613141	7	True				
ANR	5613393	Statement	.	979:43:25572:25572	5613141	8	True				
ANR	5613394	Statement	Value	979:44:25573:25577	5613141	9	True				
ANR	5613395	Statement	(	979:49:25578:25578	5613141	10	True				
ANR	5613396	Statement	)	979:50:25579:25579	5613141	11	True				
ANR	5613397	Statement	)	979:51:25580:25580	5613141	12	True				
ANR	5613398	ExpressionStatement		979:52:25581:25581	5613141	13	True				
ANR	5613399	ReturnStatement	return false ;	980:4:25587:25599	5613141	14	True				
ANR	5613400	Identifier	false		5613141	0					
ANR	5613401	ExpressionStatement	disk_file = dfile	982:3:25609:25626	5613141	1	True				
ANR	5613402	AssignmentExpression	disk_file = dfile		5613141	0		=			
ANR	5613403	Identifier	disk_file		5613141	0					
ANR	5613404	Identifier	dfile		5613141	1					
ANR	5613405	IdentifierDeclStatement	MyString disk_device = single_disk_file . next ( ) ;	986:2:25652:25698	5613141	11	True				
ANR	5613406	IdentifierDecl	disk_device = single_disk_file . next ( )		5613141	0					
ANR	5613407	IdentifierDeclType	MyString		5613141	0					
ANR	5613408	Identifier	disk_device		5613141	1					
ANR	5613409	AssignmentExpression	disk_device = single_disk_file . next ( )		5613141	2		=			
ANR	5613410	Identifier	disk_device		5613141	0					
ANR	5613411	CallExpression	single_disk_file . next ( )		5613141	1					
ANR	5613412	Callee	single_disk_file . next		5613141	0					
ANR	5613413	MemberAccess	single_disk_file . next		5613141	0					
ANR	5613414	Identifier	single_disk_file		5613141	0					
ANR	5613415	Identifier	next		5613141	1					
ANR	5613416	ArgumentList			5613141	1					
ANR	5613417	ExpressionStatement	disk_device . trim ( )	987:2:25702:25720	5613141	12	True				
ANR	5613418	CallExpression	disk_device . trim ( )		5613141	0					
ANR	5613419	Callee	disk_device . trim		5613141	0					
ANR	5613420	MemberAccess	disk_device . trim		5613141	0					
ANR	5613421	Identifier	disk_device		5613141	0					
ANR	5613422	Identifier	trim		5613141	1					
ANR	5613423	ArgumentList			5613141	1					
ANR	5613424	ExpressionStatement	disk_device . lower_case ( )	988:2:25724:25748	5613141	13	True				
ANR	5613425	CallExpression	disk_device . lower_case ( )		5613141	0					
ANR	5613426	Callee	disk_device . lower_case		5613141	0					
ANR	5613427	MemberAccess	disk_device . lower_case		5613141	0					
ANR	5613428	Identifier	disk_device		5613141	0					
ANR	5613429	Identifier	lower_case		5613141	1					
ANR	5613430	ArgumentList			5613141	1					
ANR	5613431	IdentifierDeclStatement	MyString disk_perm = single_disk_file . next ( ) ;	991:2:25774:25818	5613141	14	True				
ANR	5613432	IdentifierDecl	disk_perm = single_disk_file . next ( )		5613141	0					
ANR	5613433	IdentifierDeclType	MyString		5613141	0					
ANR	5613434	Identifier	disk_perm		5613141	1					
ANR	5613435	AssignmentExpression	disk_perm = single_disk_file . next ( )		5613141	2		=			
ANR	5613436	Identifier	disk_perm		5613141	0					
ANR	5613437	CallExpression	single_disk_file . next ( )		5613141	1					
ANR	5613438	Callee	single_disk_file . next		5613141	0					
ANR	5613439	MemberAccess	single_disk_file . next		5613141	0					
ANR	5613440	Identifier	single_disk_file		5613141	0					
ANR	5613441	Identifier	next		5613141	1					
ANR	5613442	ArgumentList			5613141	1					
ANR	5613443	ExpressionStatement	disk_perm . trim ( )	992:2:25822:25838	5613141	15	True				
ANR	5613444	CallExpression	disk_perm . trim ( )		5613141	0					
ANR	5613445	Callee	disk_perm . trim		5613141	0					
ANR	5613446	MemberAccess	disk_perm . trim		5613141	0					
ANR	5613447	Identifier	disk_perm		5613141	0					
ANR	5613448	Identifier	trim		5613141	1					
ANR	5613449	ArgumentList			5613141	1					
ANR	5613450	IfStatement	"if ( ! strcasecmp ( disk_perm . Value ( ) , ""w"" ) || ! strcasecmp ( disk_perm . Value ( ) , ""rw"" ) )"		5613141	16					
ANR	5613451	Condition	"! strcasecmp ( disk_perm . Value ( ) , ""w"" ) || ! strcasecmp ( disk_perm . Value ( ) , ""rw"" )"	994:6:25847:25921	5613141	0	True				
ANR	5613452	OrExpression	"! strcasecmp ( disk_perm . Value ( ) , ""w"" ) || ! strcasecmp ( disk_perm . Value ( ) , ""rw"" )"		5613141	0		||			
ANR	5613453	UnaryOperationExpression	"! strcasecmp ( disk_perm . Value ( ) , ""w"" )"		5613141	0					
ANR	5613454	UnaryOperator	!		5613141	0					
ANR	5613455	CallExpression	"strcasecmp ( disk_perm . Value ( ) , ""w"" )"		5613141	1					
ANR	5613456	Callee	strcasecmp		5613141	0					
ANR	5613457	Identifier	strcasecmp		5613141	0					
ANR	5613458	ArgumentList	disk_perm . Value ( )		5613141	1					
ANR	5613459	Argument	disk_perm . Value ( )		5613141	0					
ANR	5613460	CallExpression	disk_perm . Value ( )		5613141	0					
ANR	5613461	Callee	disk_perm . Value		5613141	0					
ANR	5613462	MemberAccess	disk_perm . Value		5613141	0					
ANR	5613463	Identifier	disk_perm		5613141	0					
ANR	5613464	Identifier	Value		5613141	1					
ANR	5613465	ArgumentList			5613141	1					
ANR	5613466	Argument	"""w"""		5613141	1					
ANR	5613467	PrimaryExpression	"""w"""		5613141	0					
ANR	5613468	UnaryOperationExpression	"! strcasecmp ( disk_perm . Value ( ) , ""rw"" )"		5613141	1					
ANR	5613469	UnaryOperator	!		5613141	0					
ANR	5613470	CallExpression	"strcasecmp ( disk_perm . Value ( ) , ""rw"" )"		5613141	1					
ANR	5613471	Callee	strcasecmp		5613141	0					
ANR	5613472	Identifier	strcasecmp		5613141	0					
ANR	5613473	ArgumentList	disk_perm . Value ( )		5613141	1					
ANR	5613474	Argument	disk_perm . Value ( )		5613141	0					
ANR	5613475	CallExpression	disk_perm . Value ( )		5613141	0					
ANR	5613476	Callee	disk_perm . Value		5613141	0					
ANR	5613477	MemberAccess	disk_perm . Value		5613141	0					
ANR	5613478	Identifier	disk_perm		5613141	0					
ANR	5613479	Identifier	Value		5613141	1					
ANR	5613480	ArgumentList			5613141	1					
ANR	5613481	Argument	"""rw"""		5613141	1					
ANR	5613482	PrimaryExpression	"""rw"""		5613141	0					
ANR	5613483	CompoundStatement		71:8:1716:1716	5613141	1					
ANR	5613484	IfStatement	"if ( check_vm_write_access_file ( disk_file . Value ( ) , false ) == false )"		5613141	0					
ANR	5613485	Condition	"check_vm_write_access_file ( disk_file . Value ( ) , false ) == false"	997:7:25984:26044	5613141	0	True				
ANR	5613486	EqualityExpression	"check_vm_write_access_file ( disk_file . Value ( ) , false ) == false"		5613141	0		==			
ANR	5613487	CallExpression	"check_vm_write_access_file ( disk_file . Value ( ) , false )"		5613141	0					
ANR	5613488	Callee	check_vm_write_access_file		5613141	0					
ANR	5613489	Identifier	check_vm_write_access_file		5613141	0					
ANR	5613490	ArgumentList	disk_file . Value ( )		5613141	1					
ANR	5613491	Argument	disk_file . Value ( )		5613141	0					
ANR	5613492	CallExpression	disk_file . Value ( )		5613141	0					
ANR	5613493	Callee	disk_file . Value		5613141	0					
ANR	5613494	MemberAccess	disk_file . Value		5613141	0					
ANR	5613495	Identifier	disk_file		5613141	0					
ANR	5613496	Identifier	Value		5613141	1					
ANR	5613497	ArgumentList			5613141	1					
ANR	5613498	Argument	false		5613141	1					
ANR	5613499	Identifier	false		5613141	0					
ANR	5613500	Identifier	false		5613141	1					
ANR	5613501	CompoundStatement		73:71:1831:1831	5613141	1					
ANR	5613502	ExpressionStatement	"vmprintf ( D_ALWAYS , ""xen disk image file('%s') cannot be modified\\n"" , disk_file . Value ( ) )"	998:4:26054:26150	5613141	0	True				
ANR	5613503	CallExpression	"vmprintf ( D_ALWAYS , ""xen disk image file('%s') cannot be modified\\n"" , disk_file . Value ( ) )"		5613141	0					
ANR	5613504	Callee	vmprintf		5613141	0					
ANR	5613505	Identifier	vmprintf		5613141	0					
ANR	5613506	ArgumentList	D_ALWAYS		5613141	1					
ANR	5613507	Argument	D_ALWAYS		5613141	0					
ANR	5613508	Identifier	D_ALWAYS		5613141	0					
ANR	5613509	Argument	"""xen disk image file('%s') cannot be modified\\n"""		5613141	1					
ANR	5613510	PrimaryExpression	"""xen disk image file('%s') cannot be modified\\n"""		5613141	0					
ANR	5613511	Argument	disk_file . Value ( )		5613141	2					
ANR	5613512	CallExpression	disk_file . Value ( )		5613141	0					
ANR	5613513	Callee	disk_file . Value		5613141	0					
ANR	5613514	MemberAccess	disk_file . Value		5613141	0					
ANR	5613515	Identifier	disk_file		5613141	0					
ANR	5613516	Identifier	Value		5613141	1					
ANR	5613517	ArgumentList			5613141	1					
ANR	5613518	ReturnStatement	return false ;	1000:4:26156:26168	5613141	1	True				
ANR	5613519	Identifier	false		5613141	0					
ANR	5613520	ElseStatement	else		5613141	0					
ANR	5613521	CompoundStatement		79:8:1975:1975	5613141	0					
ANR	5613522	IfStatement	"if ( check_vm_read_access_file ( disk_file . Value ( ) , false ) == false )"		5613141	0					
ANR	5613523	Condition	"check_vm_read_access_file ( disk_file . Value ( ) , false ) == false"	1005:7:26243:26302	5613141	0	True				
ANR	5613524	EqualityExpression	"check_vm_read_access_file ( disk_file . Value ( ) , false ) == false"		5613141	0		==			
ANR	5613525	CallExpression	"check_vm_read_access_file ( disk_file . Value ( ) , false )"		5613141	0					
ANR	5613526	Callee	check_vm_read_access_file		5613141	0					
ANR	5613527	Identifier	check_vm_read_access_file		5613141	0					
ANR	5613528	ArgumentList	disk_file . Value ( )		5613141	1					
ANR	5613529	Argument	disk_file . Value ( )		5613141	0					
ANR	5613530	CallExpression	disk_file . Value ( )		5613141	0					
ANR	5613531	Callee	disk_file . Value		5613141	0					
ANR	5613532	MemberAccess	disk_file . Value		5613141	0					
ANR	5613533	Identifier	disk_file		5613141	0					
ANR	5613534	Identifier	Value		5613141	1					
ANR	5613535	ArgumentList			5613141	1					
ANR	5613536	Argument	false		5613141	1					
ANR	5613537	Identifier	false		5613141	0					
ANR	5613538	Identifier	false		5613141	1					
ANR	5613539	CompoundStatement		81:70:2089:2089	5613141	1					
ANR	5613540	ExpressionStatement	"vmprintf ( D_ALWAYS , ""xen disk image file('%s') cannot be read\\n"" , disk_file . Value ( ) )"	1006:4:26312:26401	5613141	0	True				
ANR	5613541	CallExpression	"vmprintf ( D_ALWAYS , ""xen disk image file('%s') cannot be read\\n"" , disk_file . Value ( ) )"		5613141	0					
ANR	5613542	Callee	vmprintf		5613141	0					
ANR	5613543	Identifier	vmprintf		5613141	0					
ANR	5613544	ArgumentList	D_ALWAYS		5613141	1					
ANR	5613545	Argument	D_ALWAYS		5613141	0					
ANR	5613546	Identifier	D_ALWAYS		5613141	0					
ANR	5613547	Argument	"""xen disk image file('%s') cannot be read\\n"""		5613141	1					
ANR	5613548	PrimaryExpression	"""xen disk image file('%s') cannot be read\\n"""		5613141	0					
ANR	5613549	Argument	disk_file . Value ( )		5613141	2					
ANR	5613550	CallExpression	disk_file . Value ( )		5613141	0					
ANR	5613551	Callee	disk_file . Value		5613141	0					
ANR	5613552	MemberAccess	disk_file . Value		5613141	0					
ANR	5613553	Identifier	disk_file		5613141	0					
ANR	5613554	Identifier	Value		5613141	1					
ANR	5613555	ArgumentList			5613141	1					
ANR	5613556	ReturnStatement	return false ;	1008:4:26407:26419	5613141	1	True				
ANR	5613557	Identifier	false		5613141	0					
ANR	5613558	Statement	XenDisk	1012:2:26433:26439	5613141	17	True				
ANR	5613559	Statement	*	1012:10:26441:26441	5613141	18	True				
ANR	5613560	Statement	newdisk	1012:11:26442:26448	5613141	19	True				
ANR	5613561	Statement	=	1012:19:26450:26450	5613141	20	True				
ANR	5613562	Statement	new	1012:21:26452:26454	5613141	21	True				
ANR	5613563	ExpressionStatement	XenDisk	1012:25:26456:26463	5613141	22	True				
ANR	5613564	Identifier	XenDisk		5613141	0					
ANR	5613565	ExpressionStatement	ASSERT ( newdisk )	1013:2:26467:26482	5613141	23	True				
ANR	5613566	CallExpression	ASSERT ( newdisk )		5613141	0					
ANR	5613567	Callee	ASSERT		5613141	0					
ANR	5613568	Identifier	ASSERT		5613141	0					
ANR	5613569	ArgumentList	newdisk		5613141	1					
ANR	5613570	Argument	newdisk		5613141	0					
ANR	5613571	Identifier	newdisk		5613141	0					
ANR	5613572	ExpressionStatement	newdisk -> filename = disk_file	1014:2:26486:26515	5613141	24	True				
ANR	5613573	AssignmentExpression	newdisk -> filename = disk_file		5613141	0		=			
ANR	5613574	PtrMemberAccess	newdisk -> filename		5613141	0					
ANR	5613575	Identifier	newdisk		5613141	0					
ANR	5613576	Identifier	filename		5613141	1					
ANR	5613577	Identifier	disk_file		5613141	1					
ANR	5613578	ExpressionStatement	newdisk -> device = disk_device	1015:2:26519:26548	5613141	25	True				
ANR	5613579	AssignmentExpression	newdisk -> device = disk_device		5613141	0		=			
ANR	5613580	PtrMemberAccess	newdisk -> device		5613141	0					
ANR	5613581	Identifier	newdisk		5613141	0					
ANR	5613582	Identifier	device		5613141	1					
ANR	5613583	Identifier	disk_device		5613141	1					
ANR	5613584	ExpressionStatement	newdisk -> permission = disk_perm	1016:2:26552:26583	5613141	26	True				
ANR	5613585	AssignmentExpression	newdisk -> permission = disk_perm		5613141	0		=			
ANR	5613586	PtrMemberAccess	newdisk -> permission		5613141	0					
ANR	5613587	Identifier	newdisk		5613141	0					
ANR	5613588	Identifier	permission		5613141	1					
ANR	5613589	Identifier	disk_perm		5613141	1					
ANR	5613590	IfStatement	if ( iNumParams == 4 )		5613141	27					
ANR	5613591	Condition	iNumParams == 4	1019:12:26653:26667	5613141	0	True				
ANR	5613592	EqualityExpression	iNumParams == 4		5613141	0		==			
ANR	5613593	Identifier	iNumParams		5613141	0					
ANR	5613594	PrimaryExpression	4		5613141	1					
ANR	5613595	CompoundStatement		96:8:2462:2462	5613141	1					
ANR	5613596	ExpressionStatement	newdisk -> format = single_disk_file . next ( )	1021:12:26693:26734	5613141	0	True				
ANR	5613597	AssignmentExpression	newdisk -> format = single_disk_file . next ( )		5613141	0		=			
ANR	5613598	PtrMemberAccess	newdisk -> format		5613141	0					
ANR	5613599	Identifier	newdisk		5613141	0					
ANR	5613600	Identifier	format		5613141	1					
ANR	5613601	CallExpression	single_disk_file . next ( )		5613141	1					
ANR	5613602	Callee	single_disk_file . next		5613141	0					
ANR	5613603	MemberAccess	single_disk_file . next		5613141	0					
ANR	5613604	Identifier	single_disk_file		5613141	0					
ANR	5613605	Identifier	next		5613141	1					
ANR	5613606	ArgumentList			5613141	1					
ANR	5613607	ExpressionStatement	newdisk -> format . trim ( )	1022:12:26748:26770	5613141	1	True				
ANR	5613608	CallExpression	newdisk -> format . trim ( )		5613141	0					
ANR	5613609	Callee	newdisk -> format . trim		5613141	0					
ANR	5613610	MemberAccess	newdisk -> format . trim		5613141	0					
ANR	5613611	PtrMemberAccess	newdisk -> format		5613141	0					
ANR	5613612	Identifier	newdisk		5613141	0					
ANR	5613613	Identifier	format		5613141	1					
ANR	5613614	Identifier	trim		5613141	1					
ANR	5613615	ArgumentList			5613141	1					
ANR	5613616	ExpressionStatement	newdisk -> format . lower_case ( )	1023:12:26784:26812	5613141	2	True				
ANR	5613617	CallExpression	newdisk -> format . lower_case ( )		5613141	0					
ANR	5613618	Callee	newdisk -> format . lower_case		5613141	0					
ANR	5613619	MemberAccess	newdisk -> format . lower_case		5613141	0					
ANR	5613620	PtrMemberAccess	newdisk -> format		5613141	0					
ANR	5613621	Identifier	newdisk		5613141	0					
ANR	5613622	Identifier	format		5613141	1					
ANR	5613623	Identifier	lower_case		5613141	1					
ANR	5613624	ArgumentList			5613141	1					
ANR	5613625	ExpressionStatement	m_disk_list . Append ( newdisk )	1026:2:26835:26862	5613141	28	True				
ANR	5613626	CallExpression	m_disk_list . Append ( newdisk )		5613141	0					
ANR	5613627	Callee	m_disk_list . Append		5613141	0					
ANR	5613628	MemberAccess	m_disk_list . Append		5613141	0					
ANR	5613629	Identifier	m_disk_list		5613141	0					
ANR	5613630	Identifier	Append		5613141	1					
ANR	5613631	ArgumentList	newdisk		5613141	1					
ANR	5613632	Argument	newdisk		5613141	0					
ANR	5613633	Identifier	newdisk		5613141	0					
ANR	5613634	IfStatement	if ( m_disk_list . Number ( ) == 0 )		5613141	9					
ANR	5613635	Condition	m_disk_list . Number ( ) == 0	1029:5:26873:26897	5613141	0	True				
ANR	5613636	EqualityExpression	m_disk_list . Number ( ) == 0		5613141	0		==			
ANR	5613637	CallExpression	m_disk_list . Number ( )		5613141	0					
ANR	5613638	Callee	m_disk_list . Number		5613141	0					
ANR	5613639	MemberAccess	m_disk_list . Number		5613141	0					
ANR	5613640	Identifier	m_disk_list		5613141	0					
ANR	5613641	Identifier	Number		5613141	1					
ANR	5613642	ArgumentList			5613141	1					
ANR	5613643	PrimaryExpression	0		5613141	1					
ANR	5613644	CompoundStatement		105:33:2684:2684	5613141	1					
ANR	5613645	ExpressionStatement	"vmprintf ( D_ALWAYS , ""No valid Virsh disk\\n"" )"	1030:2:26905:26948	5613141	0	True				
ANR	5613646	CallExpression	"vmprintf ( D_ALWAYS , ""No valid Virsh disk\\n"" )"		5613141	0					
ANR	5613647	Callee	vmprintf		5613141	0					
ANR	5613648	Identifier	vmprintf		5613141	0					
ANR	5613649	ArgumentList	D_ALWAYS		5613141	1					
ANR	5613650	Argument	D_ALWAYS		5613141	0					
ANR	5613651	Identifier	D_ALWAYS		5613141	0					
ANR	5613652	Argument	"""No valid Virsh disk\\n"""		5613141	1					
ANR	5613653	PrimaryExpression	"""No valid Virsh disk\\n"""		5613141	0					
ANR	5613654	ReturnStatement	return false ;	1031:2:26952:26964	5613141	1	True				
ANR	5613655	Identifier	false		5613141	0					
ANR	5613656	ReturnStatement	return true ;	1034:1:26971:26982	5613141	10	True				
ANR	5613657	Identifier	true		5613141	0					
ANR	5613658	ReturnType	bool		5613141	1					
ANR	5613659	Identifier	VirshType :: parseXenDiskParam		5613141	2					
ANR	5613660	ParameterList	const char * format		5613141	3					
ANR	5613661	Parameter	const char * format	924:29:24196:24213	5613141	0	True				
ANR	5613662	ParameterType	const char *		5613141	0					
ANR	5613663	Identifier	format		5613141	1					
ANR	5613664	CFGEntryNode	ENTRY		5613141		True				
ANR	5613665	CFGExitNode	EXIT		5613141		True				
ANR	5613666	Symbol	m_workingpath . Value		5613141						
ANR	5613667	Symbol	one_disk		5613141						
ANR	5613668	Symbol	m_disk_list		5613141						
ANR	5613669	Symbol	m_disk_list . Number		5613141						
ANR	5613670	Symbol	& working_files		5613141						
ANR	5613671	Symbol	disk_files . isEmpty		5613141						
ANR	5613672	Symbol	dfile		5613141						
ANR	5613673	Symbol	newdisk -> format		5613141						
ANR	5613674	Symbol	single_disk_file . next		5613141						
ANR	5613675	Symbol	disk_device		5613141						
ANR	5613676	Symbol	newdisk -> permission		5613141						
ANR	5613677	Symbol	disk_files . next		5613141						
ANR	5613678	Symbol	fullpath		5613141						
ANR	5613679	Symbol	dfile . Value		5613141						
ANR	5613680	Symbol	disk_file		5613141						
ANR	5613681	Symbol	disk_files		5613141						
ANR	5613682	Symbol	tmp_base_name		5613141						
ANR	5613683	Symbol	disk_perm		5613141						
ANR	5613684	Symbol	single_disk_file		5613141						
ANR	5613685	Symbol	strcasecmp		5613141						
ANR	5613686	Symbol	m_has_transferred_disk_file		5613141						
ANR	5613687	Symbol	NULL		5613141						
ANR	5613688	Symbol	* newdisk		5613141						
ANR	5613689	Symbol	DIR_DELIM_CHAR		5613141						
ANR	5613690	Symbol	format		5613141						
ANR	5613691	Symbol	false		5613141						
ANR	5613692	Symbol	D_ALWAYS		5613141						
ANR	5613693	Symbol	D_FULLDEBUG		5613141						
ANR	5613694	Symbol	filelist_contains_file		5613141						
ANR	5613695	Symbol	dfile . IsEmpty		5613141						
ANR	5613696	Symbol	working_files		5613141						
ANR	5613697	Symbol	m_workingpath		5613141						
ANR	5613698	Symbol	disk_perm . Value		5613141						
ANR	5613699	Symbol	* format		5613141						
ANR	5613700	Symbol	disk_file . Value		5613141						
ANR	5613701	Symbol	true		5613141						
ANR	5613702	Symbol	single_disk_file . number		5613141						
ANR	5613703	Symbol	iNumParams		5613141						
ANR	5613704	Symbol	check_vm_write_access_file		5613141						
ANR	5613705	Symbol	condor_basename		5613141						
ANR	5613706	Symbol	check_vm_read_access_file		5613141						
ANR	5613707	Symbol	newdisk		5613141						
ANR	5613708	Symbol	newdisk -> filename		5613141						
ANR	5613709	Symbol	newdisk -> device		5613141						
ANR	5613710	Function	VirshType :: makeVirshDiskString	1039:0:27048:27973							
ANR	5613711	FunctionDef	VirshType :: makeVirshDiskString ()		5613710	0					
ANR	5613712	CompoundStatement		1041:0:27094:27973	5613710	0					
ANR	5613713	IdentifierDeclStatement	MyString xendisk ;	1042:1:27097:27113	5613710	0	True				
ANR	5613714	IdentifierDecl	xendisk		5613710	0					
ANR	5613715	IdentifierDeclType	MyString		5613710	0					
ANR	5613716	Identifier	xendisk		5613710	1					
ANR	5613717	ExpressionStatement	"xendisk = """""	1043:1:27116:27128	5613710	1	True				
ANR	5613718	AssignmentExpression	"xendisk = """""		5613710	0		=			
ANR	5613719	Identifier	xendisk		5613710	0					
ANR	5613720	PrimaryExpression	""""""		5613710	1					
ANR	5613721	IdentifierDeclStatement	bool first_disk = true ;	1044:1:27131:27153	5613710	2	True				
ANR	5613722	IdentifierDecl	first_disk = true		5613710	0					
ANR	5613723	IdentifierDeclType	bool		5613710	0					
ANR	5613724	Identifier	first_disk		5613710	1					
ANR	5613725	AssignmentExpression	first_disk = true		5613710	2		=			
ANR	5613726	Identifier	true		5613710	0					
ANR	5613727	Identifier	true		5613710	1					
ANR	5613728	IdentifierDeclStatement	XenDisk * vdisk = NULL ;	1046:1:27157:27178	5613710	3	True				
ANR	5613729	IdentifierDecl	* vdisk = NULL		5613710	0					
ANR	5613730	IdentifierDeclType	XenDisk *		5613710	0					
ANR	5613731	Identifier	vdisk		5613710	1					
ANR	5613732	AssignmentExpression	* vdisk = NULL		5613710	2		=			
ANR	5613733	Identifier	NULL		5613710	0					
ANR	5613734	Identifier	NULL		5613710	1					
ANR	5613735	ExpressionStatement	m_disk_list . Rewind ( )	1047:1:27181:27201	5613710	4	True				
ANR	5613736	CallExpression	m_disk_list . Rewind ( )		5613710	0					
ANR	5613737	Callee	m_disk_list . Rewind		5613710	0					
ANR	5613738	MemberAccess	m_disk_list . Rewind		5613710	0					
ANR	5613739	Identifier	m_disk_list		5613710	0					
ANR	5613740	Identifier	Rewind		5613710	1					
ANR	5613741	ArgumentList			5613710	1					
ANR	5613742	WhileStatement	while ( m_disk_list . Next ( vdisk ) )		5613710	5					
ANR	5613743	Condition	m_disk_list . Next ( vdisk )	1048:8:27211:27233	5613710	0	True				
ANR	5613744	CallExpression	m_disk_list . Next ( vdisk )		5613710	0					
ANR	5613745	Callee	m_disk_list . Next		5613710	0					
ANR	5613746	MemberAccess	m_disk_list . Next		5613710	0					
ANR	5613747	Identifier	m_disk_list		5613710	0					
ANR	5613748	Identifier	Next		5613710	1					
ANR	5613749	ArgumentList	vdisk		5613710	1					
ANR	5613750	Argument	vdisk		5613710	0					
ANR	5613751	Identifier	vdisk		5613710	0					
ANR	5613752	CompoundStatement		8:34:142:142	5613710	1					
ANR	5613753	IfStatement	if ( ! first_disk )		5613710	0					
ANR	5613754	Condition	! first_disk	1049:6:27245:27255	5613710	0	True				
ANR	5613755	UnaryOperationExpression	! first_disk		5613710	0					
ANR	5613756	UnaryOperator	!		5613710	0					
ANR	5613757	Identifier	first_disk		5613710	1					
ANR	5613758	CompoundStatement		9:20:164:164	5613710	1					
ANR	5613759	ExpressionStatement	"xendisk += ""</disk>"""	1050:3:27264:27284	5613710	0	True				
ANR	5613760	AssignmentExpression	"xendisk += ""</disk>"""		5613710	0		+=			
ANR	5613761	Identifier	xendisk		5613710	0					
ANR	5613762	PrimaryExpression	"""</disk>"""		5613710	1					
ANR	5613763	ExpressionStatement	first_disk = false	1052:2:27292:27310	5613710	1	True				
ANR	5613764	AssignmentExpression	first_disk = false		5613710	0		=			
ANR	5613765	Identifier	first_disk		5613710	0					
ANR	5613766	Identifier	false		5613710	1					
ANR	5613767	IfStatement	"if ( strstr ( vdisk -> filename . Value ( ) , "".iso"" ) )"		5613710	2					
ANR	5613768	Condition	"strstr ( vdisk -> filename . Value ( ) , "".iso"" )"	1053:13:27325:27364	5613710	0	True				
ANR	5613769	CallExpression	"strstr ( vdisk -> filename . Value ( ) , "".iso"" )"		5613710	0					
ANR	5613770	Callee	strstr		5613710	0					
ANR	5613771	Identifier	strstr		5613710	0					
ANR	5613772	ArgumentList	vdisk -> filename . Value ( )		5613710	1					
ANR	5613773	Argument	vdisk -> filename . Value ( )		5613710	0					
ANR	5613774	CallExpression	vdisk -> filename . Value ( )		5613710	0					
ANR	5613775	Callee	vdisk -> filename . Value		5613710	0					
ANR	5613776	MemberAccess	vdisk -> filename . Value		5613710	0					
ANR	5613777	PtrMemberAccess	vdisk -> filename		5613710	0					
ANR	5613778	Identifier	vdisk		5613710	0					
ANR	5613779	Identifier	filename		5613710	1					
ANR	5613780	Identifier	Value		5613710	1					
ANR	5613781	ArgumentList			5613710	1					
ANR	5613782	Argument	""".iso"""		5613710	1					
ANR	5613783	PrimaryExpression	""".iso"""		5613710	0					
ANR	5613784	CompoundStatement		14:8:281:281	5613710	1					
ANR	5613785	ExpressionStatement	"xendisk += ""<disk type='file' device='cdrom'>"""	1055:12:27390:27436	5613710	0	True				
ANR	5613786	AssignmentExpression	"xendisk += ""<disk type='file' device='cdrom'>"""		5613710	0		+=			
ANR	5613787	Identifier	xendisk		5613710	0					
ANR	5613788	PrimaryExpression	"""<disk type='file' device='cdrom'>"""		5613710	1					
ANR	5613789	ElseStatement	else		5613710	0					
ANR	5613790	CompoundStatement		18:8:374:374	5613710	0					
ANR	5613791	ExpressionStatement	"xendisk += ""<disk type='file'>"""	1059:12:27483:27514	5613710	0	True				
ANR	5613792	AssignmentExpression	"xendisk += ""<disk type='file'>"""		5613710	0		+=			
ANR	5613793	Identifier	xendisk		5613710	0					
ANR	5613794	PrimaryExpression	"""<disk type='file'>"""		5613710	1					
ANR	5613795	IfStatement	if ( vdisk -> format . Length ( ) )		5613710	3					
ANR	5613796	Condition	vdisk -> format . Length ( )	1062:12:27539:27560	5613710	0	True				
ANR	5613797	CallExpression	vdisk -> format . Length ( )		5613710	0					
ANR	5613798	Callee	vdisk -> format . Length		5613710	0					
ANR	5613799	MemberAccess	vdisk -> format . Length		5613710	0					
ANR	5613800	PtrMemberAccess	vdisk -> format		5613710	0					
ANR	5613801	Identifier	vdisk		5613710	0					
ANR	5613802	Identifier	format		5613710	1					
ANR	5613803	Identifier	Length		5613710	1					
ANR	5613804	ArgumentList			5613710	1					
ANR	5613805	CompoundStatement		23:8:476:476	5613710	1					
ANR	5613806	ExpressionStatement	"xendisk += ""<driver name='qemu' type='"""	1064:11:27584:27623	5613710	0	True				
ANR	5613807	AssignmentExpression	"xendisk += ""<driver name='qemu' type='"""		5613710	0		+=			
ANR	5613808	Identifier	xendisk		5613710	0					
ANR	5613809	PrimaryExpression	"""<driver name='qemu' type='"""		5613710	1					
ANR	5613810	ExpressionStatement	xendisk += vdisk -> format	1065:11:27636:27660	5613710	1	True				
ANR	5613811	AssignmentExpression	xendisk += vdisk -> format		5613710	0		+=			
ANR	5613812	Identifier	xendisk		5613710	0					
ANR	5613813	PtrMemberAccess	vdisk -> format		5613710	1					
ANR	5613814	Identifier	vdisk		5613710	0					
ANR	5613815	Identifier	format		5613710	1					
ANR	5613816	ExpressionStatement	"xendisk += ""'/>"""	1066:11:27673:27689	5613710	2	True				
ANR	5613817	AssignmentExpression	"xendisk += ""'/>"""		5613710	0		+=			
ANR	5613818	Identifier	xendisk		5613710	0					
ANR	5613819	PrimaryExpression	"""'/>"""		5613710	1					
ANR	5613820	ExpressionStatement	"xendisk += ""<source file='"""	1069:2:27704:27731	5613710	4	True				
ANR	5613821	AssignmentExpression	"xendisk += ""<source file='"""		5613710	0		+=			
ANR	5613822	Identifier	xendisk		5613710	0					
ANR	5613823	PrimaryExpression	"""<source file='"""		5613710	1					
ANR	5613824	ExpressionStatement	xendisk += vdisk -> filename	1070:2:27735:27761	5613710	5	True				
ANR	5613825	AssignmentExpression	xendisk += vdisk -> filename		5613710	0		+=			
ANR	5613826	Identifier	xendisk		5613710	0					
ANR	5613827	PtrMemberAccess	vdisk -> filename		5613710	1					
ANR	5613828	Identifier	vdisk		5613710	0					
ANR	5613829	Identifier	filename		5613710	1					
ANR	5613830	ExpressionStatement	"xendisk += ""'/>"""	1071:2:27765:27781	5613710	6	True				
ANR	5613831	AssignmentExpression	"xendisk += ""'/>"""		5613710	0		+=			
ANR	5613832	Identifier	xendisk		5613710	0					
ANR	5613833	PrimaryExpression	"""'/>"""		5613710	1					
ANR	5613834	ExpressionStatement	"xendisk += ""<target dev='"""	1072:2:27785:27811	5613710	7	True				
ANR	5613835	AssignmentExpression	"xendisk += ""<target dev='"""		5613710	0		+=			
ANR	5613836	Identifier	xendisk		5613710	0					
ANR	5613837	PrimaryExpression	"""<target dev='"""		5613710	1					
ANR	5613838	ExpressionStatement	xendisk += vdisk -> device	1073:2:27815:27839	5613710	8	True				
ANR	5613839	AssignmentExpression	xendisk += vdisk -> device		5613710	0		+=			
ANR	5613840	Identifier	xendisk		5613710	0					
ANR	5613841	PtrMemberAccess	vdisk -> device		5613710	1					
ANR	5613842	Identifier	vdisk		5613710	0					
ANR	5613843	Identifier	device		5613710	1					
ANR	5613844	ExpressionStatement	"xendisk += ""'/>"""	1074:2:27843:27859	5613710	9	True				
ANR	5613845	AssignmentExpression	"xendisk += ""'/>"""		5613710	0		+=			
ANR	5613846	Identifier	xendisk		5613710	0					
ANR	5613847	PrimaryExpression	"""'/>"""		5613710	1					
ANR	5613848	IfStatement	"if ( vdisk -> permission == ""r"" )"		5613710	10					
ANR	5613849	Condition	"vdisk -> permission == ""r"""	1076:6:27868:27891	5613710	0	True				
ANR	5613850	EqualityExpression	"vdisk -> permission == ""r"""		5613710	0		==			
ANR	5613851	PtrMemberAccess	vdisk -> permission		5613710	0					
ANR	5613852	Identifier	vdisk		5613710	0					
ANR	5613853	Identifier	permission		5613710	1					
ANR	5613854	PrimaryExpression	"""r"""		5613710	1					
ANR	5613855	CompoundStatement		36:32:799:799	5613710	1					
ANR	5613856	ExpressionStatement	"xendisk += ""<readonly/>"""	1077:3:27899:27923	5613710	0	True				
ANR	5613857	AssignmentExpression	"xendisk += ""<readonly/>"""		5613710	0		+=			
ANR	5613858	Identifier	xendisk		5613710	0					
ANR	5613859	PrimaryExpression	"""<readonly/>"""		5613710	1					
ANR	5613860	ExpressionStatement	"xendisk += ""</disk>"""	1080:1:27933:27953	5613710	6	True				
ANR	5613861	AssignmentExpression	"xendisk += ""</disk>"""		5613710	0		+=			
ANR	5613862	Identifier	xendisk		5613710	0					
ANR	5613863	PrimaryExpression	"""</disk>"""		5613710	1					
ANR	5613864	ReturnStatement	return xendisk ;	1082:1:27957:27971	5613710	7	True				
ANR	5613865	Identifier	xendisk		5613710	0					
ANR	5613866	ReturnType	MyString		5613710	1					
ANR	5613867	Identifier	VirshType :: makeVirshDiskString		5613710	2					
ANR	5613868	ParameterList			5613710	3					
ANR	5613869	CFGEntryNode	ENTRY		5613710		True				
ANR	5613870	CFGExitNode	EXIT		5613710		True				
ANR	5613871	Symbol	vdisk -> device		5613710						
ANR	5613872	Symbol	vdisk -> permission		5613710						
ANR	5613873	Symbol	vdisk -> format . Length		5613710						
ANR	5613874	Symbol	NULL		5613710						
ANR	5613875	Symbol	m_disk_list		5613710						
ANR	5613876	Symbol	false		5613710						
ANR	5613877	Symbol	vdisk -> filename . Value		5613710						
ANR	5613878	Symbol	first_disk		5613710						
ANR	5613879	Symbol	* vdisk		5613710						
ANR	5613880	Symbol	vdisk -> format		5613710						
ANR	5613881	Symbol	strstr		5613710						
ANR	5613882	Symbol	m_disk_list . Next		5613710						
ANR	5613883	Symbol	vdisk -> filename		5613710						
ANR	5613884	Symbol	true		5613710						
ANR	5613885	Symbol	xendisk		5613710						
ANR	5613886	Symbol	vdisk		5613710						
ANR	5613887	Function	VirshType :: writableXenDisk	1085:0:27976:28399							
ANR	5613888	FunctionDef	VirshType :: writableXenDisk (const char * file)		5613887	0					
ANR	5613889	CompoundStatement		1087:0:28026:28399	5613887	0					
ANR	5613890	IfStatement	if ( ! file )		5613887	0					
ANR	5613891	Condition	! file	1088:5:28033:28037	5613887	0	True				
ANR	5613892	UnaryOperationExpression	! file		5613887	0					
ANR	5613893	UnaryOperator	!		5613887	0					
ANR	5613894	Identifier	file		5613887	1					
ANR	5613895	CompoundStatement		2:13:14:14	5613887	1					
ANR	5613896	ReturnStatement	return false ;	1089:2:28045:28057	5613887	0	True				
ANR	5613897	Identifier	false		5613887	0					
ANR	5613898	IdentifierDeclStatement	XenDisk * vdisk = NULL ;	1092:1:28064:28085	5613887	1	True				
ANR	5613899	IdentifierDecl	* vdisk = NULL		5613887	0					
ANR	5613900	IdentifierDeclType	XenDisk *		5613887	0					
ANR	5613901	Identifier	vdisk		5613887	1					
ANR	5613902	AssignmentExpression	* vdisk = NULL		5613887	2		=			
ANR	5613903	Identifier	NULL		5613887	0					
ANR	5613904	Identifier	NULL		5613887	1					
ANR	5613905	ExpressionStatement	m_disk_list . Rewind ( )	1093:1:28088:28108	5613887	2	True				
ANR	5613906	CallExpression	m_disk_list . Rewind ( )		5613887	0					
ANR	5613907	Callee	m_disk_list . Rewind		5613887	0					
ANR	5613908	MemberAccess	m_disk_list . Rewind		5613887	0					
ANR	5613909	Identifier	m_disk_list		5613887	0					
ANR	5613910	Identifier	Rewind		5613887	1					
ANR	5613911	ArgumentList			5613887	1					
ANR	5613912	WhileStatement	while ( m_disk_list . Next ( vdisk ) )		5613887	3					
ANR	5613913	Condition	m_disk_list . Next ( vdisk )	1094:8:28118:28140	5613887	0	True				
ANR	5613914	CallExpression	m_disk_list . Next ( vdisk )		5613887	0					
ANR	5613915	Callee	m_disk_list . Next		5613887	0					
ANR	5613916	MemberAccess	m_disk_list . Next		5613887	0					
ANR	5613917	Identifier	m_disk_list		5613887	0					
ANR	5613918	Identifier	Next		5613887	1					
ANR	5613919	ArgumentList	vdisk		5613887	1					
ANR	5613920	Argument	vdisk		5613887	0					
ANR	5613921	Identifier	vdisk		5613887	0					
ANR	5613922	CompoundStatement		8:34:117:117	5613887	1					
ANR	5613923	IfStatement	"if ( ! strcasecmp ( basename ( file ) , basename ( vdisk -> filename . Value ( ) ) ) )"		5613887	0					
ANR	5613924	Condition	"! strcasecmp ( basename ( file ) , basename ( vdisk -> filename . Value ( ) ) )"	1095:6:28152:28213	5613887	0	True				
ANR	5613925	UnaryOperationExpression	"! strcasecmp ( basename ( file ) , basename ( vdisk -> filename . Value ( ) ) )"		5613887	0					
ANR	5613926	UnaryOperator	!		5613887	0					
ANR	5613927	CallExpression	"strcasecmp ( basename ( file ) , basename ( vdisk -> filename . Value ( ) ) )"		5613887	1					
ANR	5613928	Callee	strcasecmp		5613887	0					
ANR	5613929	Identifier	strcasecmp		5613887	0					
ANR	5613930	ArgumentList	basename ( file )		5613887	1					
ANR	5613931	Argument	basename ( file )		5613887	0					
ANR	5613932	CallExpression	basename ( file )		5613887	0					
ANR	5613933	Callee	basename		5613887	0					
ANR	5613934	Identifier	basename		5613887	0					
ANR	5613935	ArgumentList	file		5613887	1					
ANR	5613936	Argument	file		5613887	0					
ANR	5613937	Identifier	file		5613887	0					
ANR	5613938	Argument	basename ( vdisk -> filename . Value ( ) )		5613887	1					
ANR	5613939	CallExpression	basename ( vdisk -> filename . Value ( ) )		5613887	0					
ANR	5613940	Callee	basename		5613887	0					
ANR	5613941	Identifier	basename		5613887	0					
ANR	5613942	ArgumentList	vdisk -> filename . Value ( )		5613887	1					
ANR	5613943	Argument	vdisk -> filename . Value ( )		5613887	0					
ANR	5613944	CallExpression	vdisk -> filename . Value ( )		5613887	0					
ANR	5613945	Callee	vdisk -> filename . Value		5613887	0					
ANR	5613946	MemberAccess	vdisk -> filename . Value		5613887	0					
ANR	5613947	PtrMemberAccess	vdisk -> filename		5613887	0					
ANR	5613948	Identifier	vdisk		5613887	0					
ANR	5613949	Identifier	filename		5613887	1					
ANR	5613950	Identifier	Value		5613887	1					
ANR	5613951	ArgumentList			5613887	1					
ANR	5613952	CompoundStatement		9:71:190:190	5613887	1					
ANR	5613953	IfStatement	"if ( ! strcasecmp ( vdisk -> permission . Value ( ) , ""w"" ) || ! strcasecmp ( vdisk -> permission . Value ( ) , ""rw"" ) )"		5613887	0					
ANR	5613954	Condition	"! strcasecmp ( vdisk -> permission . Value ( ) , ""w"" ) || ! strcasecmp ( vdisk -> permission . Value ( ) , ""rw"" )"	1096:7:28226:28321	5613887	0	True				
ANR	5613955	OrExpression	"! strcasecmp ( vdisk -> permission . Value ( ) , ""w"" ) || ! strcasecmp ( vdisk -> permission . Value ( ) , ""rw"" )"		5613887	0		||			
ANR	5613956	UnaryOperationExpression	"! strcasecmp ( vdisk -> permission . Value ( ) , ""w"" )"		5613887	0					
ANR	5613957	UnaryOperator	!		5613887	0					
ANR	5613958	CallExpression	"strcasecmp ( vdisk -> permission . Value ( ) , ""w"" )"		5613887	1					
ANR	5613959	Callee	strcasecmp		5613887	0					
ANR	5613960	Identifier	strcasecmp		5613887	0					
ANR	5613961	ArgumentList	vdisk -> permission . Value ( )		5613887	1					
ANR	5613962	Argument	vdisk -> permission . Value ( )		5613887	0					
ANR	5613963	CallExpression	vdisk -> permission . Value ( )		5613887	0					
ANR	5613964	Callee	vdisk -> permission . Value		5613887	0					
ANR	5613965	MemberAccess	vdisk -> permission . Value		5613887	0					
ANR	5613966	PtrMemberAccess	vdisk -> permission		5613887	0					
ANR	5613967	Identifier	vdisk		5613887	0					
ANR	5613968	Identifier	permission		5613887	1					
ANR	5613969	Identifier	Value		5613887	1					
ANR	5613970	ArgumentList			5613887	1					
ANR	5613971	Argument	"""w"""		5613887	1					
ANR	5613972	PrimaryExpression	"""w"""		5613887	0					
ANR	5613973	UnaryOperationExpression	"! strcasecmp ( vdisk -> permission . Value ( ) , ""rw"" )"		5613887	1					
ANR	5613974	UnaryOperator	!		5613887	0					
ANR	5613975	CallExpression	"strcasecmp ( vdisk -> permission . Value ( ) , ""rw"" )"		5613887	1					
ANR	5613976	Callee	strcasecmp		5613887	0					
ANR	5613977	Identifier	strcasecmp		5613887	0					
ANR	5613978	ArgumentList	vdisk -> permission . Value ( )		5613887	1					
ANR	5613979	Argument	vdisk -> permission . Value ( )		5613887	0					
ANR	5613980	CallExpression	vdisk -> permission . Value ( )		5613887	0					
ANR	5613981	Callee	vdisk -> permission . Value		5613887	0					
ANR	5613982	MemberAccess	vdisk -> permission . Value		5613887	0					
ANR	5613983	PtrMemberAccess	vdisk -> permission		5613887	0					
ANR	5613984	Identifier	vdisk		5613887	0					
ANR	5613985	Identifier	permission		5613887	1					
ANR	5613986	Identifier	Value		5613887	1					
ANR	5613987	ArgumentList			5613887	1					
ANR	5613988	Argument	"""rw"""		5613887	1					
ANR	5613989	PrimaryExpression	"""rw"""		5613887	0					
ANR	5613990	CompoundStatement		11:51:297:297	5613887	1					
ANR	5613991	ReturnStatement	return true ;	1098:4:28330:28341	5613887	0	True				
ANR	5613992	Identifier	true		5613887	0					
ANR	5613993	ElseStatement	else		5613887	0					
ANR	5613994	CompoundStatement		13:9:325:325	5613887	0					
ANR	5613995	ReturnStatement	return false ;	1100:4:28358:28370	5613887	0	True				
ANR	5613996	Identifier	false		5613887	0					
ANR	5613997	ReturnStatement	return false ;	1104:1:28385:28397	5613887	4	True				
ANR	5613998	Identifier	false		5613887	0					
ANR	5613999	ReturnType	bool		5613887	1					
ANR	5614000	Identifier	VirshType :: writableXenDisk		5613887	2					
ANR	5614001	ParameterList	const char * file		5613887	3					
ANR	5614002	Parameter	const char * file	1086:27:28008:28023	5613887	0	True				
ANR	5614003	ParameterType	const char *		5613887	0					
ANR	5614004	Identifier	file		5613887	1					
ANR	5614005	CFGEntryNode	ENTRY		5613887		True				
ANR	5614006	CFGExitNode	EXIT		5613887		True				
ANR	5614007	Symbol	vdisk -> permission		5613887						
ANR	5614008	Symbol	NULL		5613887						
ANR	5614009	Symbol	m_disk_list		5613887						
ANR	5614010	Symbol	false		5613887						
ANR	5614011	Symbol	vdisk -> filename . Value		5613887						
ANR	5614012	Symbol	file		5613887						
ANR	5614013	Symbol	* vdisk		5613887						
ANR	5614014	Symbol	basename		5613887						
ANR	5614015	Symbol	m_disk_list . Next		5613887						
ANR	5614016	Symbol	vdisk -> filename		5613887						
ANR	5614017	Symbol	vdisk -> permission . Value		5613887						
ANR	5614018	Symbol	true		5613887						
ANR	5614019	Symbol	strcasecmp		5613887						
ANR	5614020	Symbol	vdisk		5613887						
ANR	5614021	Function	VirshType :: updateLocalWriteDiskTimestamp	1107:0:28402:29041							
ANR	5614022	FunctionDef	VirshType :: updateLocalWriteDiskTimestamp (time_t timestamp)		5614021	0					
ANR	5614023	CompoundStatement		1109:0:28466:29041	5614021	0					
ANR	5614024	IdentifierDeclStatement	char * tmp_file = NULL ;	1110:1:28469:28490	5614021	0	True				
ANR	5614025	IdentifierDecl	* tmp_file = NULL		5614021	0					
ANR	5614026	IdentifierDeclType	char *		5614021	0					
ANR	5614027	Identifier	tmp_file		5614021	1					
ANR	5614028	AssignmentExpression	* tmp_file = NULL		5614021	2		=			
ANR	5614029	Identifier	NULL		5614021	0					
ANR	5614030	Identifier	NULL		5614021	1					
ANR	5614031	IdentifierDeclStatement	StringList working_files ;	1111:1:28493:28517	5614021	1	True				
ANR	5614032	IdentifierDecl	working_files		5614021	0					
ANR	5614033	IdentifierDeclType	StringList		5614021	0					
ANR	5614034	Identifier	working_files		5614021	1					
ANR	5614035	IdentifierDeclStatement	struct utimbuf timewrap ;	1112:1:28520:28543	5614021	2	True				
ANR	5614036	IdentifierDecl	timewrap		5614021	0					
ANR	5614037	IdentifierDeclType	struct utimbuf		5614021	0					
ANR	5614038	Identifier	timewrap		5614021	1					
ANR	5614039	ExpressionStatement	"find_all_files_in_dir ( m_workingpath . Value ( ) , working_files , true )"	1114:1:28547:28612	5614021	3	True				
ANR	5614040	CallExpression	"find_all_files_in_dir ( m_workingpath . Value ( ) , working_files , true )"		5614021	0					
ANR	5614041	Callee	find_all_files_in_dir		5614021	0					
ANR	5614042	Identifier	find_all_files_in_dir		5614021	0					
ANR	5614043	ArgumentList	m_workingpath . Value ( )		5614021	1					
ANR	5614044	Argument	m_workingpath . Value ( )		5614021	0					
ANR	5614045	CallExpression	m_workingpath . Value ( )		5614021	0					
ANR	5614046	Callee	m_workingpath . Value		5614021	0					
ANR	5614047	MemberAccess	m_workingpath . Value		5614021	0					
ANR	5614048	Identifier	m_workingpath		5614021	0					
ANR	5614049	Identifier	Value		5614021	1					
ANR	5614050	ArgumentList			5614021	1					
ANR	5614051	Argument	working_files		5614021	1					
ANR	5614052	Identifier	working_files		5614021	0					
ANR	5614053	Argument	true		5614021	2					
ANR	5614054	Identifier	true		5614021	0					
ANR	5614055	ExpressionStatement	working_files . rewind ( )	1116:1:28616:28638	5614021	4	True				
ANR	5614056	CallExpression	working_files . rewind ( )		5614021	0					
ANR	5614057	Callee	working_files . rewind		5614021	0					
ANR	5614058	MemberAccess	working_files . rewind		5614021	0					
ANR	5614059	Identifier	working_files		5614021	0					
ANR	5614060	Identifier	rewind		5614021	1					
ANR	5614061	ArgumentList			5614021	1					
ANR	5614062	WhileStatement	while ( ( tmp_file = working_files . next ( ) ) != NULL )		5614021	5					
ANR	5614063	Condition	( tmp_file = working_files . next ( ) ) != NULL	1117:8:28648:28688	5614021	0	True				
ANR	5614064	EqualityExpression	( tmp_file = working_files . next ( ) ) != NULL		5614021	0		!=			
ANR	5614065	AssignmentExpression	tmp_file = working_files . next ( )		5614021	0		=			
ANR	5614066	Identifier	tmp_file		5614021	0					
ANR	5614067	CallExpression	working_files . next ( )		5614021	1					
ANR	5614068	Callee	working_files . next		5614021	0					
ANR	5614069	MemberAccess	working_files . next		5614021	0					
ANR	5614070	Identifier	working_files		5614021	0					
ANR	5614071	Identifier	next		5614021	1					
ANR	5614072	ArgumentList			5614021	1					
ANR	5614073	Identifier	NULL		5614021	1					
ANR	5614074	CompoundStatement		9:52:225:225	5614021	1					
ANR	5614075	IfStatement	if ( writableXenDisk ( tmp_file ) )		5614021	0					
ANR	5614076	Condition	writableXenDisk ( tmp_file )	1122:6:28908:28932	5614021	0	True				
ANR	5614077	CallExpression	writableXenDisk ( tmp_file )		5614021	0					
ANR	5614078	Callee	writableXenDisk		5614021	0					
ANR	5614079	Identifier	writableXenDisk		5614021	0					
ANR	5614080	ArgumentList	tmp_file		5614021	1					
ANR	5614081	Argument	tmp_file		5614021	0					
ANR	5614082	Identifier	tmp_file		5614021	0					
ANR	5614083	CompoundStatement		14:34:469:469	5614021	1					
ANR	5614084	ExpressionStatement	timewrap . actime = timestamp	1123:3:28941:28968	5614021	0	True				
ANR	5614085	AssignmentExpression	timewrap . actime = timestamp		5614021	0		=			
ANR	5614086	MemberAccess	timewrap . actime		5614021	0					
ANR	5614087	Identifier	timewrap		5614021	0					
ANR	5614088	Identifier	actime		5614021	1					
ANR	5614089	Identifier	timestamp		5614021	1					
ANR	5614090	ExpressionStatement	timewrap . modtime = timestamp	1124:3:28973:29001	5614021	1	True				
ANR	5614091	AssignmentExpression	timewrap . modtime = timestamp		5614021	0		=			
ANR	5614092	MemberAccess	timewrap . modtime		5614021	0					
ANR	5614093	Identifier	timewrap		5614021	0					
ANR	5614094	Identifier	modtime		5614021	1					
ANR	5614095	Identifier	timestamp		5614021	1					
ANR	5614096	ExpressionStatement	"utime ( tmp_file , & timewrap )"	1125:3:29006:29032	5614021	2	True				
ANR	5614097	CallExpression	"utime ( tmp_file , & timewrap )"		5614021	0					
ANR	5614098	Callee	utime		5614021	0					
ANR	5614099	Identifier	utime		5614021	0					
ANR	5614100	ArgumentList	tmp_file		5614021	1					
ANR	5614101	Argument	tmp_file		5614021	0					
ANR	5614102	Identifier	tmp_file		5614021	0					
ANR	5614103	Argument	& timewrap		5614021	1					
ANR	5614104	UnaryOperationExpression	& timewrap		5614021	0					
ANR	5614105	UnaryOperator	&		5614021	0					
ANR	5614106	Identifier	timewrap		5614021	1					
ANR	5614107	ReturnType	void		5614021	1					
ANR	5614108	Identifier	VirshType :: updateLocalWriteDiskTimestamp		5614021	2					
ANR	5614109	ParameterList	time_t timestamp		5614021	3					
ANR	5614110	Parameter	time_t timestamp	1108:41:28448:28463	5614021	0	True				
ANR	5614111	ParameterType	time_t		5614021	0					
ANR	5614112	Identifier	timestamp		5614021	1					
ANR	5614113	CFGEntryNode	ENTRY		5614021		True				
ANR	5614114	CFGExitNode	EXIT		5614021		True				
ANR	5614115	Symbol	working_files . next		5614021						
ANR	5614116	Symbol	NULL		5614021						
ANR	5614117	Symbol	m_workingpath . Value		5614021						
ANR	5614118	Symbol	& timewrap		5614021						
ANR	5614119	Symbol	timewrap		5614021						
ANR	5614120	Symbol	timewrap . actime		5614021						
ANR	5614121	Symbol	working_files		5614021						
ANR	5614122	Symbol	m_workingpath		5614021						
ANR	5614123	Symbol	true		5614021						
ANR	5614124	Symbol	writableXenDisk		5614021						
ANR	5614125	Symbol	tmp_file		5614021						
ANR	5614126	Symbol	timewrap . modtime		5614021						
ANR	5614127	Symbol	timestamp		5614021						
ANR	5614128	Function	VirshType :: updateAllWriteDiskTimestamp	1130:0:29044:29471							
ANR	5614129	FunctionDef	VirshType :: updateAllWriteDiskTimestamp (time_t timestamp)		5614128	0					
ANR	5614130	CompoundStatement		1132:0:29106:29471	5614128	0					
ANR	5614131	IdentifierDeclStatement	struct utimbuf timewrap ;	1133:1:29109:29132	5614128	0	True				
ANR	5614132	IdentifierDecl	timewrap		5614128	0					
ANR	5614133	IdentifierDeclType	struct utimbuf		5614128	0					
ANR	5614134	Identifier	timewrap		5614128	1					
ANR	5614135	IdentifierDeclStatement	XenDisk * vdisk = NULL ;	1135:1:29136:29157	5614128	1	True				
ANR	5614136	IdentifierDecl	* vdisk = NULL		5614128	0					
ANR	5614137	IdentifierDeclType	XenDisk *		5614128	0					
ANR	5614138	Identifier	vdisk		5614128	1					
ANR	5614139	AssignmentExpression	* vdisk = NULL		5614128	2		=			
ANR	5614140	Identifier	NULL		5614128	0					
ANR	5614141	Identifier	NULL		5614128	1					
ANR	5614142	ExpressionStatement	m_disk_list . Rewind ( )	1136:1:29160:29180	5614128	2	True				
ANR	5614143	CallExpression	m_disk_list . Rewind ( )		5614128	0					
ANR	5614144	Callee	m_disk_list . Rewind		5614128	0					
ANR	5614145	MemberAccess	m_disk_list . Rewind		5614128	0					
ANR	5614146	Identifier	m_disk_list		5614128	0					
ANR	5614147	Identifier	Rewind		5614128	1					
ANR	5614148	ArgumentList			5614128	1					
ANR	5614149	WhileStatement	while ( m_disk_list . Next ( vdisk ) )		5614128	3					
ANR	5614150	Condition	m_disk_list . Next ( vdisk )	1137:8:29190:29212	5614128	0	True				
ANR	5614151	CallExpression	m_disk_list . Next ( vdisk )		5614128	0					
ANR	5614152	Callee	m_disk_list . Next		5614128	0					
ANR	5614153	MemberAccess	m_disk_list . Next		5614128	0					
ANR	5614154	Identifier	m_disk_list		5614128	0					
ANR	5614155	Identifier	Next		5614128	1					
ANR	5614156	ArgumentList	vdisk		5614128	1					
ANR	5614157	Argument	vdisk		5614128	0					
ANR	5614158	Identifier	vdisk		5614128	0					
ANR	5614159	CompoundStatement		6:34:109:109	5614128	1					
ANR	5614160	IfStatement	"if ( ! strcasecmp ( vdisk -> permission . Value ( ) , ""w"" ) || ! strcasecmp ( vdisk -> permission . Value ( ) , ""rw"" ) )"		5614128	0					
ANR	5614161	Condition	"! strcasecmp ( vdisk -> permission . Value ( ) , ""w"" ) || ! strcasecmp ( vdisk -> permission . Value ( ) , ""rw"" )"	1138:6:29224:29318	5614128	0	True				
ANR	5614162	OrExpression	"! strcasecmp ( vdisk -> permission . Value ( ) , ""w"" ) || ! strcasecmp ( vdisk -> permission . Value ( ) , ""rw"" )"		5614128	0		||			
ANR	5614163	UnaryOperationExpression	"! strcasecmp ( vdisk -> permission . Value ( ) , ""w"" )"		5614128	0					
ANR	5614164	UnaryOperator	!		5614128	0					
ANR	5614165	CallExpression	"strcasecmp ( vdisk -> permission . Value ( ) , ""w"" )"		5614128	1					
ANR	5614166	Callee	strcasecmp		5614128	0					
ANR	5614167	Identifier	strcasecmp		5614128	0					
ANR	5614168	ArgumentList	vdisk -> permission . Value ( )		5614128	1					
ANR	5614169	Argument	vdisk -> permission . Value ( )		5614128	0					
ANR	5614170	CallExpression	vdisk -> permission . Value ( )		5614128	0					
ANR	5614171	Callee	vdisk -> permission . Value		5614128	0					
ANR	5614172	MemberAccess	vdisk -> permission . Value		5614128	0					
ANR	5614173	PtrMemberAccess	vdisk -> permission		5614128	0					
ANR	5614174	Identifier	vdisk		5614128	0					
ANR	5614175	Identifier	permission		5614128	1					
ANR	5614176	Identifier	Value		5614128	1					
ANR	5614177	ArgumentList			5614128	1					
ANR	5614178	Argument	"""w"""		5614128	1					
ANR	5614179	PrimaryExpression	"""w"""		5614128	0					
ANR	5614180	UnaryOperationExpression	"! strcasecmp ( vdisk -> permission . Value ( ) , ""rw"" )"		5614128	1					
ANR	5614181	UnaryOperator	!		5614128	0					
ANR	5614182	CallExpression	"strcasecmp ( vdisk -> permission . Value ( ) , ""rw"" )"		5614128	1					
ANR	5614183	Callee	strcasecmp		5614128	0					
ANR	5614184	Identifier	strcasecmp		5614128	0					
ANR	5614185	ArgumentList	vdisk -> permission . Value ( )		5614128	1					
ANR	5614186	Argument	vdisk -> permission . Value ( )		5614128	0					
ANR	5614187	CallExpression	vdisk -> permission . Value ( )		5614128	0					
ANR	5614188	Callee	vdisk -> permission . Value		5614128	0					
ANR	5614189	MemberAccess	vdisk -> permission . Value		5614128	0					
ANR	5614190	PtrMemberAccess	vdisk -> permission		5614128	0					
ANR	5614191	Identifier	vdisk		5614128	0					
ANR	5614192	Identifier	permission		5614128	1					
ANR	5614193	Identifier	Value		5614128	1					
ANR	5614194	ArgumentList			5614128	1					
ANR	5614195	Argument	"""rw"""		5614128	1					
ANR	5614196	PrimaryExpression	"""rw"""		5614128	0					
ANR	5614197	CompoundStatement		8:50:214:214	5614128	1					
ANR	5614198	ExpressionStatement	timewrap . actime = timestamp	1141:3:29356:29383	5614128	0	True				
ANR	5614199	AssignmentExpression	timewrap . actime = timestamp		5614128	0		=			
ANR	5614200	MemberAccess	timewrap . actime		5614128	0					
ANR	5614201	Identifier	timewrap		5614128	0					
ANR	5614202	Identifier	actime		5614128	1					
ANR	5614203	Identifier	timestamp		5614128	1					
ANR	5614204	ExpressionStatement	timewrap . modtime = timestamp	1142:3:29388:29416	5614128	1	True				
ANR	5614205	AssignmentExpression	timewrap . modtime = timestamp		5614128	0		=			
ANR	5614206	MemberAccess	timewrap . modtime		5614128	0					
ANR	5614207	Identifier	timewrap		5614128	0					
ANR	5614208	Identifier	modtime		5614128	1					
ANR	5614209	Identifier	timestamp		5614128	1					
ANR	5614210	ExpressionStatement	"utime ( vdisk -> filename . Value ( ) , & timewrap )"	1143:3:29421:29462	5614128	2	True				
ANR	5614211	CallExpression	"utime ( vdisk -> filename . Value ( ) , & timewrap )"		5614128	0					
ANR	5614212	Callee	utime		5614128	0					
ANR	5614213	Identifier	utime		5614128	0					
ANR	5614214	ArgumentList	vdisk -> filename . Value ( )		5614128	1					
ANR	5614215	Argument	vdisk -> filename . Value ( )		5614128	0					
ANR	5614216	CallExpression	vdisk -> filename . Value ( )		5614128	0					
ANR	5614217	Callee	vdisk -> filename . Value		5614128	0					
ANR	5614218	MemberAccess	vdisk -> filename . Value		5614128	0					
ANR	5614219	PtrMemberAccess	vdisk -> filename		5614128	0					
ANR	5614220	Identifier	vdisk		5614128	0					
ANR	5614221	Identifier	filename		5614128	1					
ANR	5614222	Identifier	Value		5614128	1					
ANR	5614223	ArgumentList			5614128	1					
ANR	5614224	Argument	& timewrap		5614128	1					
ANR	5614225	UnaryOperationExpression	& timewrap		5614128	0					
ANR	5614226	UnaryOperator	&		5614128	0					
ANR	5614227	Identifier	timewrap		5614128	1					
ANR	5614228	ReturnType	void		5614128	1					
ANR	5614229	Identifier	VirshType :: updateAllWriteDiskTimestamp		5614128	2					
ANR	5614230	ParameterList	time_t timestamp		5614128	3					
ANR	5614231	Parameter	time_t timestamp	1131:39:29088:29103	5614128	0	True				
ANR	5614232	ParameterType	time_t		5614128	0					
ANR	5614233	Identifier	timestamp		5614128	1					
ANR	5614234	CFGEntryNode	ENTRY		5614128		True				
ANR	5614235	CFGExitNode	EXIT		5614128		True				
ANR	5614236	Symbol	vdisk -> permission		5614128						
ANR	5614237	Symbol	NULL		5614128						
ANR	5614238	Symbol	& timewrap		5614128						
ANR	5614239	Symbol	m_disk_list		5614128						
ANR	5614240	Symbol	vdisk -> filename . Value		5614128						
ANR	5614241	Symbol	timewrap		5614128						
ANR	5614242	Symbol	timewrap . actime		5614128						
ANR	5614243	Symbol	* vdisk		5614128						
ANR	5614244	Symbol	m_disk_list . Next		5614128						
ANR	5614245	Symbol	vdisk -> filename		5614128						
ANR	5614246	Symbol	vdisk -> permission . Value		5614128						
ANR	5614247	Symbol	strcasecmp		5614128						
ANR	5614248	Symbol	vdisk		5614128						
ANR	5614249	Symbol	timewrap . modtime		5614128						
ANR	5614250	Symbol	timestamp		5614128						
ANR	5614251	Function	VirshType :: createCkptFiles	1148:0:29474:30737							
ANR	5614252	FunctionDef	VirshType :: createCkptFiles ()		5614251	0					
ANR	5614253	CompoundStatement		1150:0:29512:30737	5614251	0					
ANR	5614254	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::createCkptFiles\\n"" )"	1151:1:29515:29575	5614251	0	True				
ANR	5614255	CallExpression	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::createCkptFiles\\n"" )"		5614251	0					
ANR	5614256	Callee	vmprintf		5614251	0					
ANR	5614257	Identifier	vmprintf		5614251	0					
ANR	5614258	ArgumentList	D_FULLDEBUG		5614251	1					
ANR	5614259	Argument	D_FULLDEBUG		5614251	0					
ANR	5614260	Identifier	D_FULLDEBUG		5614251	0					
ANR	5614261	Argument	"""Inside VirshType::createCkptFiles\\n"""		5614251	1					
ANR	5614262	PrimaryExpression	"""Inside VirshType::createCkptFiles\\n"""		5614251	0					
ANR	5614263	IfStatement	if ( getVMStatus ( ) == VM_STOPPED )		5614251	1					
ANR	5614264	Condition	getVMStatus ( ) == VM_STOPPED	1154:5:29628:29654	5614251	0	True				
ANR	5614265	EqualityExpression	getVMStatus ( ) == VM_STOPPED		5614251	0		==			
ANR	5614266	CallExpression	getVMStatus ( )		5614251	0					
ANR	5614267	Callee	getVMStatus		5614251	0					
ANR	5614268	Identifier	getVMStatus		5614251	0					
ANR	5614269	ArgumentList			5614251	1					
ANR	5614270	Identifier	VM_STOPPED		5614251	1					
ANR	5614271	CompoundStatement		5:35:145:145	5614251	1					
ANR	5614272	ExpressionStatement	"vmprintf ( D_ALWAYS , ""createCkptFiles is called for a stopped VM\\n"" )"	1155:2:29662:29728	5614251	0	True				
ANR	5614273	CallExpression	"vmprintf ( D_ALWAYS , ""createCkptFiles is called for a stopped VM\\n"" )"		5614251	0					
ANR	5614274	Callee	vmprintf		5614251	0					
ANR	5614275	Identifier	vmprintf		5614251	0					
ANR	5614276	ArgumentList	D_ALWAYS		5614251	1					
ANR	5614277	Argument	D_ALWAYS		5614251	0					
ANR	5614278	Identifier	D_ALWAYS		5614251	0					
ANR	5614279	Argument	"""createCkptFiles is called for a stopped VM\\n"""		5614251	1					
ANR	5614280	PrimaryExpression	"""createCkptFiles is called for a stopped VM\\n"""		5614251	0					
ANR	5614281	ReturnStatement	return false ;	1156:2:29732:29744	5614251	1	True				
ANR	5614282	Identifier	false		5614251	0					
ANR	5614283	IfStatement	if ( getVMStatus ( ) == VM_RUNNING )		5614251	2					
ANR	5614284	Condition	getVMStatus ( ) == VM_RUNNING	1159:5:29755:29781	5614251	0	True				
ANR	5614285	EqualityExpression	getVMStatus ( ) == VM_RUNNING		5614251	0		==			
ANR	5614286	CallExpression	getVMStatus ( )		5614251	0					
ANR	5614287	Callee	getVMStatus		5614251	0					
ANR	5614288	Identifier	getVMStatus		5614251	0					
ANR	5614289	ArgumentList			5614251	1					
ANR	5614290	Identifier	VM_RUNNING		5614251	1					
ANR	5614291	CompoundStatement		10:35:272:272	5614251	1					
ANR	5614292	IfStatement	if ( Suspend ( ) == false )		5614251	0					
ANR	5614293	Condition	Suspend ( ) == false	1160:6:29793:29810	5614251	0	True				
ANR	5614294	EqualityExpression	Suspend ( ) == false		5614251	0		==			
ANR	5614295	CallExpression	Suspend ( )		5614251	0					
ANR	5614296	Callee	Suspend		5614251	0					
ANR	5614297	Identifier	Suspend		5614251	0					
ANR	5614298	ArgumentList			5614251	1					
ANR	5614299	Identifier	false		5614251	1					
ANR	5614300	CompoundStatement		11:27:301:301	5614251	1					
ANR	5614301	ReturnStatement	return false ;	1161:3:29819:29831	5614251	0	True				
ANR	5614302	Identifier	false		5614251	0					
ANR	5614303	IfStatement	if ( getVMStatus ( ) == VM_SUSPENDED )		5614251	3					
ANR	5614304	Condition	getVMStatus ( ) == VM_SUSPENDED	1165:5:29846:29874	5614251	0	True				
ANR	5614305	EqualityExpression	getVMStatus ( ) == VM_SUSPENDED		5614251	0		==			
ANR	5614306	CallExpression	getVMStatus ( )		5614251	0					
ANR	5614307	Callee	getVMStatus		5614251	0					
ANR	5614308	Identifier	getVMStatus		5614251	0					
ANR	5614309	ArgumentList			5614251	1					
ANR	5614310	Identifier	VM_SUSPENDED		5614251	1					
ANR	5614311	CompoundStatement		22:2:527:584	5614251	1					
ANR	5614312	IdentifierDeclStatement	time_t current_time = time ( NULL ) ;	1167:2:29911:29943	5614251	0	True				
ANR	5614313	IdentifierDecl	current_time = time ( NULL )		5614251	0					
ANR	5614314	IdentifierDeclType	time_t		5614251	0					
ANR	5614315	Identifier	current_time		5614251	1					
ANR	5614316	AssignmentExpression	current_time = time ( NULL )		5614251	2		=			
ANR	5614317	Identifier	current_time		5614251	0					
ANR	5614318	CallExpression	time ( NULL )		5614251	1					
ANR	5614319	Callee	time		5614251	0					
ANR	5614320	Identifier	time		5614251	0					
ANR	5614321	ArgumentList	NULL		5614251	1					
ANR	5614322	Argument	NULL		5614251	0					
ANR	5614323	Identifier	NULL		5614251	0					
ANR	5614324	IdentifierDeclStatement	MyString timestampfile ( m_suspendfile ) ;	1168:2:29947:29984	5614251	1	True				
ANR	5614325	IdentifierDecl	timestampfile ( m_suspendfile )		5614251	0					
ANR	5614326	IdentifierDeclType	MyString		5614251	0					
ANR	5614327	Identifier	timestampfile		5614251	1					
ANR	5614328	Identifier	m_suspendfile		5614251	2					
ANR	5614329	ExpressionStatement	timestampfile += XEN_CKPT_TIMESTAMP_FILE_SUFFIX	1169:2:29988:30035	5614251	2	True				
ANR	5614330	AssignmentExpression	timestampfile += XEN_CKPT_TIMESTAMP_FILE_SUFFIX		5614251	0		+=			
ANR	5614331	Identifier	timestampfile		5614251	0					
ANR	5614332	Identifier	XEN_CKPT_TIMESTAMP_FILE_SUFFIX		5614251	1					
ANR	5614333	IdentifierDeclStatement	"FILE * fp = safe_fopen_wrapper ( timestampfile . Value ( ) , ""w"" ) ;"	1171:2:30040:30097	5614251	3	True				
ANR	5614334	IdentifierDecl	"* fp = safe_fopen_wrapper ( timestampfile . Value ( ) , ""w"" )"		5614251	0					
ANR	5614335	IdentifierDeclType	FILE *		5614251	0					
ANR	5614336	Identifier	fp		5614251	1					
ANR	5614337	AssignmentExpression	"* fp = safe_fopen_wrapper ( timestampfile . Value ( ) , ""w"" )"		5614251	2		=			
ANR	5614338	Identifier	fp		5614251	0					
ANR	5614339	CallExpression	"safe_fopen_wrapper ( timestampfile . Value ( ) , ""w"" )"		5614251	1					
ANR	5614340	Callee	safe_fopen_wrapper		5614251	0					
ANR	5614341	Identifier	safe_fopen_wrapper		5614251	0					
ANR	5614342	ArgumentList	timestampfile . Value ( )		5614251	1					
ANR	5614343	Argument	timestampfile . Value ( )		5614251	0					
ANR	5614344	CallExpression	timestampfile . Value ( )		5614251	0					
ANR	5614345	Callee	timestampfile . Value		5614251	0					
ANR	5614346	MemberAccess	timestampfile . Value		5614251	0					
ANR	5614347	Identifier	timestampfile		5614251	0					
ANR	5614348	Identifier	Value		5614251	1					
ANR	5614349	ArgumentList			5614251	1					
ANR	5614350	Argument	"""w"""		5614251	1					
ANR	5614351	PrimaryExpression	"""w"""		5614251	0					
ANR	5614352	IfStatement	if ( ! fp )		5614251	4					
ANR	5614353	Condition	! fp	1172:6:30105:30107	5614251	0	True				
ANR	5614354	UnaryOperationExpression	! fp		5614251	0					
ANR	5614355	UnaryOperator	!		5614251	0					
ANR	5614356	Identifier	fp		5614251	1					
ANR	5614357	CompoundStatement		23:12:598:598	5614251	1					
ANR	5614358	Statement	vmprintf	1173:3:30116:30123	5614251	0	True				
ANR	5614359	Statement	(	1173:11:30124:30124	5614251	1	True				
ANR	5614360	Statement	D_ALWAYS	1173:12:30125:30132	5614251	2	True				
ANR	5614361	Statement	","	1173:20:30133:30133	5614251	3	True				
ANR	5614362	Statement	"""failed to safe_fopen_wrapper file(%s) for """	1173:22:30135:30178	5614251	4	True				
ANR	5614363	Statement	"""checkpoint timestamp : safe_fopen_wrapper returns %s\\n"""	1174:5:30185:30240	5614251	5	True				
ANR	5614364	Statement	","	1174:61:30241:30241	5614251	6	True				
ANR	5614365	Statement	timestampfile	1175:5:30248:30260	5614251	7	True				
ANR	5614366	Statement	.	1175:18:30261:30261	5614251	8	True				
ANR	5614367	Statement	Value	1175:19:30262:30266	5614251	9	True				
ANR	5614368	Statement	(	1175:24:30267:30267	5614251	10	True				
ANR	5614369	Statement	)	1175:25:30268:30268	5614251	11	True				
ANR	5614370	Statement	","	1175:26:30269:30269	5614251	12	True				
ANR	5614371	Statement	strerror	1175:28:30271:30278	5614251	13	True				
ANR	5614372	Statement	(	1175:36:30279:30279	5614251	14	True				
ANR	5614373	Statement	errno	1175:37:30280:30284	5614251	15	True				
ANR	5614374	Statement	)	1175:42:30285:30285	5614251	16	True				
ANR	5614375	Statement	)	1175:43:30286:30286	5614251	17	True				
ANR	5614376	ExpressionStatement		1175:44:30287:30287	5614251	18	True				
ANR	5614377	ExpressionStatement	Resume ( )	1176:3:30292:30300	5614251	19	True				
ANR	5614378	CallExpression	Resume ( )		5614251	0					
ANR	5614379	Callee	Resume		5614251	0					
ANR	5614380	Identifier	Resume		5614251	0					
ANR	5614381	ArgumentList			5614251	1					
ANR	5614382	ReturnStatement	return false ;	1177:3:30305:30317	5614251	20	True				
ANR	5614383	Identifier	false		5614251	0					
ANR	5614384	IfStatement	"if ( fprintf ( fp , ""%d\\n"" , ( int ) current_time ) < 0 )"		5614251	5					
ANR	5614385	Condition	"fprintf ( fp , ""%d\\n"" , ( int ) current_time ) < 0"	1179:6:30329:30370	5614251	0	True				
ANR	5614386	RelationalExpression	"fprintf ( fp , ""%d\\n"" , ( int ) current_time ) < 0"		5614251	0		<			
ANR	5614387	CallExpression	"fprintf ( fp , ""%d\\n"" , ( int ) current_time )"		5614251	0					
ANR	5614388	Callee	fprintf		5614251	0					
ANR	5614389	Identifier	fprintf		5614251	0					
ANR	5614390	ArgumentList	fp		5614251	1					
ANR	5614391	Argument	fp		5614251	0					
ANR	5614392	Identifier	fp		5614251	0					
ANR	5614393	Argument	"""%d\\n"""		5614251	1					
ANR	5614394	PrimaryExpression	"""%d\\n"""		5614251	0					
ANR	5614395	Argument	( int ) current_time		5614251	2					
ANR	5614396	CastExpression	( int ) current_time		5614251	0					
ANR	5614397	CastTarget	int		5614251	0					
ANR	5614398	Identifier	current_time		5614251	1					
ANR	5614399	PrimaryExpression	0		5614251	1					
ANR	5614400	CompoundStatement		30:51:861:861	5614251	1					
ANR	5614401	ExpressionStatement	fclose ( fp )	1180:3:30379:30389	5614251	0	True				
ANR	5614402	CallExpression	fclose ( fp )		5614251	0					
ANR	5614403	Callee	fclose		5614251	0					
ANR	5614404	Identifier	fclose		5614251	0					
ANR	5614405	ArgumentList	fp		5614251	1					
ANR	5614406	Argument	fp		5614251	0					
ANR	5614407	Identifier	fp		5614251	0					
ANR	5614408	ExpressionStatement	unlink ( timestampfile . Value ( ) )	1181:3:30394:30423	5614251	1	True				
ANR	5614409	CallExpression	unlink ( timestampfile . Value ( ) )		5614251	0					
ANR	5614410	Callee	unlink		5614251	0					
ANR	5614411	Identifier	unlink		5614251	0					
ANR	5614412	ArgumentList	timestampfile . Value ( )		5614251	1					
ANR	5614413	Argument	timestampfile . Value ( )		5614251	0					
ANR	5614414	CallExpression	timestampfile . Value ( )		5614251	0					
ANR	5614415	Callee	timestampfile . Value		5614251	0					
ANR	5614416	MemberAccess	timestampfile . Value		5614251	0					
ANR	5614417	Identifier	timestampfile		5614251	0					
ANR	5614418	Identifier	Value		5614251	1					
ANR	5614419	ArgumentList			5614251	1					
ANR	5614420	Statement	vmprintf	1182:3:30428:30435	5614251	2	True				
ANR	5614421	Statement	(	1182:11:30436:30436	5614251	3	True				
ANR	5614422	Statement	D_ALWAYS	1182:12:30437:30444	5614251	4	True				
ANR	5614423	Statement	","	1182:20:30445:30445	5614251	5	True				
ANR	5614424	Statement	"""failed to fprintf for checkpoint timestamp """	1182:22:30447:30491	5614251	6	True				
ANR	5614425	Statement	"""file(%s:%s)\\n"""	1183:5:30498:30512	5614251	7	True				
ANR	5614426	Statement	","	1183:20:30513:30513	5614251	8	True				
ANR	5614427	Statement	timestampfile	1183:22:30515:30527	5614251	9	True				
ANR	5614428	Statement	.	1183:35:30528:30528	5614251	10	True				
ANR	5614429	Statement	Value	1183:36:30529:30533	5614251	11	True				
ANR	5614430	Statement	(	1183:41:30534:30534	5614251	12	True				
ANR	5614431	Statement	)	1183:42:30535:30535	5614251	13	True				
ANR	5614432	Statement	","	1183:43:30536:30536	5614251	14	True				
ANR	5614433	Statement	strerror	1183:45:30538:30545	5614251	15	True				
ANR	5614434	Statement	(	1183:53:30546:30546	5614251	16	True				
ANR	5614435	Statement	errno	1183:54:30547:30551	5614251	17	True				
ANR	5614436	Statement	)	1183:59:30552:30552	5614251	18	True				
ANR	5614437	Statement	)	1183:60:30553:30553	5614251	19	True				
ANR	5614438	ExpressionStatement		1183:61:30554:30554	5614251	20	True				
ANR	5614439	ExpressionStatement	Resume ( )	1184:3:30559:30567	5614251	21	True				
ANR	5614440	CallExpression	Resume ( )		5614251	0					
ANR	5614441	Callee	Resume		5614251	0					
ANR	5614442	Identifier	Resume		5614251	0					
ANR	5614443	ArgumentList			5614251	1					
ANR	5614444	ReturnStatement	return false ;	1185:3:30572:30584	5614251	22	True				
ANR	5614445	Identifier	false		5614251	0					
ANR	5614446	ExpressionStatement	fclose ( fp )	1187:2:30592:30602	5614251	6	True				
ANR	5614447	CallExpression	fclose ( fp )		5614251	0					
ANR	5614448	Callee	fclose		5614251	0					
ANR	5614449	Identifier	fclose		5614251	0					
ANR	5614450	ArgumentList	fp		5614251	1					
ANR	5614451	Argument	fp		5614251	0					
ANR	5614452	Identifier	fp		5614251	0					
ANR	5614453	ExpressionStatement	updateAllWriteDiskTimestamp ( current_time )	1188:2:30606:30647	5614251	7	True				
ANR	5614454	CallExpression	updateAllWriteDiskTimestamp ( current_time )		5614251	0					
ANR	5614455	Callee	updateAllWriteDiskTimestamp		5614251	0					
ANR	5614456	Identifier	updateAllWriteDiskTimestamp		5614251	0					
ANR	5614457	ArgumentList	current_time		5614251	1					
ANR	5614458	Argument	current_time		5614251	0					
ANR	5614459	Identifier	current_time		5614251	0					
ANR	5614460	ExpressionStatement	m_is_checkpointed = true	1191:2:30677:30701	5614251	8	True				
ANR	5614461	AssignmentExpression	m_is_checkpointed = true		5614251	0		=			
ANR	5614462	Identifier	m_is_checkpointed		5614251	0					
ANR	5614463	Identifier	true		5614251	1					
ANR	5614464	ReturnStatement	return true ;	1192:2:30705:30716	5614251	9	True				
ANR	5614465	Identifier	true		5614251	0					
ANR	5614466	ReturnStatement	return false ;	1195:1:30723:30735	5614251	4	True				
ANR	5614467	Identifier	false		5614251	0					
ANR	5614468	ReturnType	bool		5614251	1					
ANR	5614469	Identifier	VirshType :: createCkptFiles		5614251	2					
ANR	5614470	ParameterList			5614251	3					
ANR	5614471	CFGEntryNode	ENTRY		5614251		True				
ANR	5614472	CFGExitNode	EXIT		5614251		True				
ANR	5614473	Symbol	timestampfile		5614251						
ANR	5614474	Symbol	NULL		5614251						
ANR	5614475	Symbol	XEN_CKPT_TIMESTAMP_FILE_SUFFIX		5614251						
ANR	5614476	Symbol	safe_fopen_wrapper		5614251						
ANR	5614477	Symbol	getVMStatus		5614251						
ANR	5614478	Symbol	D_ALWAYS		5614251						
ANR	5614479	Symbol	false		5614251						
ANR	5614480	Symbol	VM_STOPPED		5614251						
ANR	5614481	Symbol	Suspend		5614251						
ANR	5614482	Symbol	D_FULLDEBUG		5614251						
ANR	5614483	Symbol	fp		5614251						
ANR	5614484	Symbol	fprintf		5614251						
ANR	5614485	Symbol	VM_SUSPENDED		5614251						
ANR	5614486	Symbol	m_is_checkpointed		5614251						
ANR	5614487	Symbol	true		5614251						
ANR	5614488	Symbol	time		5614251						
ANR	5614489	Symbol	VM_RUNNING		5614251						
ANR	5614490	Symbol	current_time		5614251						
ANR	5614491	Symbol	timestampfile . Value		5614251						
ANR	5614492	Function	KVMType :: checkXenParams	1198:0:30740:31265							
ANR	5614493	FunctionDef	KVMType :: checkXenParams (VMGahpConfig * config)		5614492	0					
ANR	5614494	CompoundStatement		1199:0:30792:31265	5614492	0					
ANR	5614495	IdentifierDeclStatement	MyString fixedvalue ;	1200:2:30796:30815	5614492	0	True				
ANR	5614496	IdentifierDecl	fixedvalue		5614492	0					
ANR	5614497	IdentifierDeclType	MyString		5614492	0					
ANR	5614498	Identifier	fixedvalue		5614492	1					
ANR	5614499	IfStatement	if ( ! config )		5614492	1					
ANR	5614500	Condition	! config	1201:6:30823:30829	5614492	0	True				
ANR	5614501	UnaryOperationExpression	! config		5614492	0					
ANR	5614502	UnaryOperator	!		5614492	0					
ANR	5614503	Identifier	config		5614492	1					
ANR	5614504	CompoundStatement		3:16:40:40	5614492	1					
ANR	5614505	ReturnStatement	return false ;	1202:4:30839:30851	5614492	0	True				
ANR	5614506	Identifier	false		5614492	0					
ANR	5614507	IfStatement	"if ( check_vm_read_access_file ( ""/dev/kvm"" , true ) == false )"		5614492	2					
ANR	5614508	Condition	"check_vm_read_access_file ( ""/dev/kvm"" , true ) == false"	1206:5:30920:30971	5614492	0	True				
ANR	5614509	EqualityExpression	"check_vm_read_access_file ( ""/dev/kvm"" , true ) == false"		5614492	0		==			
ANR	5614510	CallExpression	"check_vm_read_access_file ( ""/dev/kvm"" , true )"		5614492	0					
ANR	5614511	Callee	check_vm_read_access_file		5614492	0					
ANR	5614512	Identifier	check_vm_read_access_file		5614492	0					
ANR	5614513	ArgumentList	"""/dev/kvm"""		5614492	1					
ANR	5614514	Argument	"""/dev/kvm"""		5614492	0					
ANR	5614515	PrimaryExpression	"""/dev/kvm"""		5614492	0					
ANR	5614516	Argument	true		5614492	1					
ANR	5614517	Identifier	true		5614492	0					
ANR	5614518	Identifier	false		5614492	1					
ANR	5614519	CompoundStatement		8:59:181:181	5614492	1					
ANR	5614520	ExpressionStatement	"vmprintf ( D_ALWAYS , ""\\nFile Permission Error: Cannot read /dev/kvm as root\\n"" )"	1207:4:30980:31057	5614492	0	True				
ANR	5614521	CallExpression	"vmprintf ( D_ALWAYS , ""\\nFile Permission Error: Cannot read /dev/kvm as root\\n"" )"		5614492	0					
ANR	5614522	Callee	vmprintf		5614492	0					
ANR	5614523	Identifier	vmprintf		5614492	0					
ANR	5614524	ArgumentList	D_ALWAYS		5614492	1					
ANR	5614525	Argument	D_ALWAYS		5614492	0					
ANR	5614526	Identifier	D_ALWAYS		5614492	0					
ANR	5614527	Argument	"""\\nFile Permission Error: Cannot read /dev/kvm as root\\n"""		5614492	1					
ANR	5614528	PrimaryExpression	"""\\nFile Permission Error: Cannot read /dev/kvm as root\\n"""		5614492	0					
ANR	5614529	ReturnStatement	return false ;	1208:4:31063:31075	5614492	1	True				
ANR	5614530	Identifier	false		5614492	0					
ANR	5614531	IfStatement	"if ( check_vm_write_access_file ( ""/dev/kvm"" , true ) == false )"		5614492	3					
ANR	5614532	Condition	"check_vm_write_access_file ( ""/dev/kvm"" , true ) == false"	1210:5:31086:31138	5614492	0	True				
ANR	5614533	EqualityExpression	"check_vm_write_access_file ( ""/dev/kvm"" , true ) == false"		5614492	0		==			
ANR	5614534	CallExpression	"check_vm_write_access_file ( ""/dev/kvm"" , true )"		5614492	0					
ANR	5614535	Callee	check_vm_write_access_file		5614492	0					
ANR	5614536	Identifier	check_vm_write_access_file		5614492	0					
ANR	5614537	ArgumentList	"""/dev/kvm"""		5614492	1					
ANR	5614538	Argument	"""/dev/kvm"""		5614492	0					
ANR	5614539	PrimaryExpression	"""/dev/kvm"""		5614492	0					
ANR	5614540	Argument	true		5614492	1					
ANR	5614541	Identifier	true		5614492	0					
ANR	5614542	Identifier	false		5614492	1					
ANR	5614543	CompoundStatement		12:60:348:348	5614492	1					
ANR	5614544	ExpressionStatement	"vmprintf ( D_ALWAYS , ""\\nFile Permission Error: Cannot write /dev/kvm as root\\n"" )"	1211:4:31147:31225	5614492	0	True				
ANR	5614545	CallExpression	"vmprintf ( D_ALWAYS , ""\\nFile Permission Error: Cannot write /dev/kvm as root\\n"" )"		5614492	0					
ANR	5614546	Callee	vmprintf		5614492	0					
ANR	5614547	Identifier	vmprintf		5614492	0					
ANR	5614548	ArgumentList	D_ALWAYS		5614492	1					
ANR	5614549	Argument	D_ALWAYS		5614492	0					
ANR	5614550	Identifier	D_ALWAYS		5614492	0					
ANR	5614551	Argument	"""\\nFile Permission Error: Cannot write /dev/kvm as root\\n"""		5614492	1					
ANR	5614552	PrimaryExpression	"""\\nFile Permission Error: Cannot write /dev/kvm as root\\n"""		5614492	0					
ANR	5614553	ReturnStatement	return false ;	1212:4:31231:31243	5614492	1	True				
ANR	5614554	Identifier	false		5614492	0					
ANR	5614555	ReturnStatement	return true ;	1214:2:31251:31262	5614492	4	True				
ANR	5614556	Identifier	true		5614492	0					
ANR	5614557	ReturnType	bool		5614492	1					
ANR	5614558	Identifier	KVMType :: checkXenParams		5614492	2					
ANR	5614559	ParameterList	VMGahpConfig * config		5614492	3					
ANR	5614560	Parameter	VMGahpConfig * config	1198:29:30769:30789	5614492	0	True				
ANR	5614561	ParameterType	VMGahpConfig *		5614492	0					
ANR	5614562	Identifier	config		5614492	1					
ANR	5614563	CFGEntryNode	ENTRY		5614492		True				
ANR	5614564	CFGExitNode	EXIT		5614492		True				
ANR	5614565	Symbol	fixedvalue		5614492						
ANR	5614566	Symbol	false		5614492						
ANR	5614567	Symbol	true		5614492						
ANR	5614568	Symbol	D_ALWAYS		5614492						
ANR	5614569	Symbol	check_vm_write_access_file		5614492						
ANR	5614570	Symbol	config		5614492						
ANR	5614571	Symbol	check_vm_read_access_file		5614492						
ANR	5614572	Function	KVMType :: killVMFast	1218:0:31268:31554							
ANR	5614573	FunctionDef	KVMType :: killVMFast (const char * vmname)		5614572	0					
ANR	5614574	CompoundStatement		1220:0:31313:31554	5614572	0					
ANR	5614575	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""Inside KVMType::killVMFast\\n"" )"	1221:1:31316:31369	5614572	0	True				
ANR	5614576	CallExpression	"vmprintf ( D_FULLDEBUG , ""Inside KVMType::killVMFast\\n"" )"		5614572	0					
ANR	5614577	Callee	vmprintf		5614572	0					
ANR	5614578	Identifier	vmprintf		5614572	0					
ANR	5614579	ArgumentList	D_FULLDEBUG		5614572	1					
ANR	5614580	Argument	D_FULLDEBUG		5614572	0					
ANR	5614581	Identifier	D_FULLDEBUG		5614572	0					
ANR	5614582	Argument	"""Inside KVMType::killVMFast\\n"""		5614572	1					
ANR	5614583	PrimaryExpression	"""Inside KVMType::killVMFast\\n"""		5614572	0					
ANR	5614584	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	1222:1:31372:31405	5614572	1	True				
ANR	5614585	IdentifierDecl	priv = set_root_priv ( )		5614572	0					
ANR	5614586	IdentifierDeclType	priv_state		5614572	0					
ANR	5614587	Identifier	priv		5614572	1					
ANR	5614588	AssignmentExpression	priv = set_root_priv ( )		5614572	2		=			
ANR	5614589	Identifier	priv		5614572	0					
ANR	5614590	CallExpression	set_root_priv ( )		5614572	1					
ANR	5614591	Callee	set_root_priv		5614572	0					
ANR	5614592	Identifier	set_root_priv		5614572	0					
ANR	5614593	ArgumentList			5614572	1					
ANR	5614594	IdentifierDeclStatement	"virConnectPtr libvirt_connection = virConnectOpen ( ""qemu:///session"" ) ;"	1223:1:31408:31476	5614572	2	True				
ANR	5614595	IdentifierDecl	"libvirt_connection = virConnectOpen ( ""qemu:///session"" )"		5614572	0					
ANR	5614596	IdentifierDeclType	virConnectPtr		5614572	0					
ANR	5614597	Identifier	libvirt_connection		5614572	1					
ANR	5614598	AssignmentExpression	"libvirt_connection = virConnectOpen ( ""qemu:///session"" )"		5614572	2		=			
ANR	5614599	Identifier	libvirt_connection		5614572	0					
ANR	5614600	CallExpression	"virConnectOpen ( ""qemu:///session"" )"		5614572	1					
ANR	5614601	Callee	virConnectOpen		5614572	0					
ANR	5614602	Identifier	virConnectOpen		5614572	0					
ANR	5614603	ArgumentList	"""qemu:///session"""		5614572	1					
ANR	5614604	Argument	"""qemu:///session"""		5614572	0					
ANR	5614605	PrimaryExpression	"""qemu:///session"""		5614572	0					
ANR	5614606	ExpressionStatement	set_priv ( priv )	1224:1:31479:31493	5614572	3	True				
ANR	5614607	CallExpression	set_priv ( priv )		5614572	0					
ANR	5614608	Callee	set_priv		5614572	0					
ANR	5614609	Identifier	set_priv		5614572	0					
ANR	5614610	ArgumentList	priv		5614572	1					
ANR	5614611	Argument	priv		5614572	0					
ANR	5614612	Identifier	priv		5614572	0					
ANR	5614613	ReturnStatement	"return VirshType :: killVMFast ( vmname , libvirt_connection ) ;"	1225:1:31496:31552	5614572	4	True				
ANR	5614614	CallExpression	"VirshType :: killVMFast ( vmname , libvirt_connection )"		5614572	0					
ANR	5614615	Callee	VirshType :: killVMFast		5614572	0					
ANR	5614616	Identifier	VirshType :: killVMFast		5614572	0					
ANR	5614617	ArgumentList	vmname		5614572	1					
ANR	5614618	Argument	vmname		5614572	0					
ANR	5614619	Identifier	vmname		5614572	0					
ANR	5614620	Argument	libvirt_connection		5614572	1					
ANR	5614621	Identifier	libvirt_connection		5614572	0					
ANR	5614622	ReturnType	bool		5614572	1					
ANR	5614623	Identifier	KVMType :: killVMFast		5614572	2					
ANR	5614624	ParameterList	const char * vmname		5614572	3					
ANR	5614625	Parameter	const char * vmname	1219:20:31293:31310	5614572	0	True				
ANR	5614626	ParameterType	const char *		5614572	0					
ANR	5614627	Identifier	vmname		5614572	1					
ANR	5614628	CFGEntryNode	ENTRY		5614572		True				
ANR	5614629	CFGExitNode	EXIT		5614572		True				
ANR	5614630	Symbol	libvirt_connection		5614572						
ANR	5614631	Symbol	virConnectOpen		5614572						
ANR	5614632	Symbol	VirshType :: killVMFast		5614572						
ANR	5614633	Symbol	D_FULLDEBUG		5614572						
ANR	5614634	Symbol	set_root_priv		5614572						
ANR	5614635	Symbol	priv		5614572						
ANR	5614636	Symbol	vmname		5614572						
ANR	5614637	Function	XenType :: checkXenParams	1228:0:31557:32252							
ANR	5614638	FunctionDef	XenType :: checkXenParams (VMGahpConfig * config)		5614637	0					
ANR	5614639	CompoundStatement		1230:0:31608:32252	5614637	0					
ANR	5614640	IdentifierDeclStatement	char * config_value = NULL ;	1231:1:31611:31636	5614637	0	True				
ANR	5614641	IdentifierDecl	* config_value = NULL		5614637	0					
ANR	5614642	IdentifierDeclType	char *		5614637	0					
ANR	5614643	Identifier	config_value		5614637	1					
ANR	5614644	AssignmentExpression	* config_value = NULL		5614637	2		=			
ANR	5614645	Identifier	NULL		5614637	0					
ANR	5614646	Identifier	NULL		5614637	1					
ANR	5614647	IdentifierDeclStatement	MyString fixedvalue ;	1232:1:31639:31658	5614637	1	True				
ANR	5614648	IdentifierDecl	fixedvalue		5614637	0					
ANR	5614649	IdentifierDeclType	MyString		5614637	0					
ANR	5614650	Identifier	fixedvalue		5614637	1					
ANR	5614651	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""In XenType::checkXenParams()\\n"" )"	1233:1:31661:31716	5614637	2	True				
ANR	5614652	CallExpression	"vmprintf ( D_FULLDEBUG , ""In XenType::checkXenParams()\\n"" )"		5614637	0					
ANR	5614653	Callee	vmprintf		5614637	0					
ANR	5614654	Identifier	vmprintf		5614637	0					
ANR	5614655	ArgumentList	D_FULLDEBUG		5614637	1					
ANR	5614656	Argument	D_FULLDEBUG		5614637	0					
ANR	5614657	Identifier	D_FULLDEBUG		5614637	0					
ANR	5614658	Argument	"""In XenType::checkXenParams()\\n"""		5614637	1					
ANR	5614659	PrimaryExpression	"""In XenType::checkXenParams()\\n"""		5614637	0					
ANR	5614660	IfStatement	if ( ! config )		5614637	3					
ANR	5614661	Condition	! config	1234:5:31723:31729	5614637	0	True				
ANR	5614662	UnaryOperationExpression	! config		5614637	0					
ANR	5614663	UnaryOperator	!		5614637	0					
ANR	5614664	Identifier	config		5614637	1					
ANR	5614665	CompoundStatement		5:15:124:124	5614637	1					
ANR	5614666	ReturnStatement	return false ;	1235:2:31737:31749	5614637	0	True				
ANR	5614667	Identifier	false		5614637	0					
ANR	5614668	ExpressionStatement	"config_value = param ( ""XEN_BOOTLOADER"" )"	1239:1:31802:31840	5614637	4	True				
ANR	5614669	AssignmentExpression	"config_value = param ( ""XEN_BOOTLOADER"" )"		5614637	0		=			
ANR	5614670	Identifier	config_value		5614637	0					
ANR	5614671	CallExpression	"param ( ""XEN_BOOTLOADER"" )"		5614637	1					
ANR	5614672	Callee	param		5614637	0					
ANR	5614673	Identifier	param		5614637	0					
ANR	5614674	ArgumentList	"""XEN_BOOTLOADER"""		5614637	1					
ANR	5614675	Argument	"""XEN_BOOTLOADER"""		5614637	0					
ANR	5614676	PrimaryExpression	"""XEN_BOOTLOADER"""		5614637	0					
ANR	5614677	IfStatement	if ( ! config_value )		5614637	5					
ANR	5614678	Condition	! config_value	1240:5:31847:31859	5614637	0	True				
ANR	5614679	UnaryOperationExpression	! config_value		5614637	0					
ANR	5614680	UnaryOperator	!		5614637	0					
ANR	5614681	Identifier	config_value		5614637	1					
ANR	5614682	CompoundStatement		11:21:254:254	5614637	1					
ANR	5614683	ExpressionStatement	"vmprintf ( D_ALWAYS , ""\\nERROR: You should define Xen bootloader\\n"" )"	1241:2:31867:31932	5614637	0	True				
ANR	5614684	CallExpression	"vmprintf ( D_ALWAYS , ""\\nERROR: You should define Xen bootloader\\n"" )"		5614637	0					
ANR	5614685	Callee	vmprintf		5614637	0					
ANR	5614686	Identifier	vmprintf		5614637	0					
ANR	5614687	ArgumentList	D_ALWAYS		5614637	1					
ANR	5614688	Argument	D_ALWAYS		5614637	0					
ANR	5614689	Identifier	D_ALWAYS		5614637	0					
ANR	5614690	Argument	"""\\nERROR: You should define Xen bootloader\\n"""		5614637	1					
ANR	5614691	PrimaryExpression	"""\\nERROR: You should define Xen bootloader\\n"""		5614637	0					
ANR	5614692	ReturnStatement	return false ;	1242:2:31936:31948	5614637	1	True				
ANR	5614693	Identifier	false		5614637	0					
ANR	5614694	ExpressionStatement	fixedvalue = delete_quotation_marks ( config_value )	1244:1:31954:32003	5614637	6	True				
ANR	5614695	AssignmentExpression	fixedvalue = delete_quotation_marks ( config_value )		5614637	0		=			
ANR	5614696	Identifier	fixedvalue		5614637	0					
ANR	5614697	CallExpression	delete_quotation_marks ( config_value )		5614637	1					
ANR	5614698	Callee	delete_quotation_marks		5614637	0					
ANR	5614699	Identifier	delete_quotation_marks		5614637	0					
ANR	5614700	ArgumentList	config_value		5614637	1					
ANR	5614701	Argument	config_value		5614637	0					
ANR	5614702	Identifier	config_value		5614637	0					
ANR	5614703	ExpressionStatement	free ( config_value )	1245:1:32006:32024	5614637	7	True				
ANR	5614704	CallExpression	free ( config_value )		5614637	0					
ANR	5614705	Callee	free		5614637	0					
ANR	5614706	Identifier	free		5614637	0					
ANR	5614707	ArgumentList	config_value		5614637	1					
ANR	5614708	Argument	config_value		5614637	0					
ANR	5614709	Identifier	config_value		5614637	0					
ANR	5614710	IfStatement	"if ( check_vm_read_access_file ( fixedvalue . Value ( ) , true ) == false )"		5614637	8					
ANR	5614711	Condition	"check_vm_read_access_file ( fixedvalue . Value ( ) , true ) == false"	1248:5:32063:32122	5614637	0	True				
ANR	5614712	EqualityExpression	"check_vm_read_access_file ( fixedvalue . Value ( ) , true ) == false"		5614637	0		==			
ANR	5614713	CallExpression	"check_vm_read_access_file ( fixedvalue . Value ( ) , true )"		5614637	0					
ANR	5614714	Callee	check_vm_read_access_file		5614637	0					
ANR	5614715	Identifier	check_vm_read_access_file		5614637	0					
ANR	5614716	ArgumentList	fixedvalue . Value ( )		5614637	1					
ANR	5614717	Argument	fixedvalue . Value ( )		5614637	0					
ANR	5614718	CallExpression	fixedvalue . Value ( )		5614637	0					
ANR	5614719	Callee	fixedvalue . Value		5614637	0					
ANR	5614720	MemberAccess	fixedvalue . Value		5614637	0					
ANR	5614721	Identifier	fixedvalue		5614637	0					
ANR	5614722	Identifier	Value		5614637	1					
ANR	5614723	ArgumentList			5614637	1					
ANR	5614724	Argument	true		5614637	1					
ANR	5614725	Identifier	true		5614637	0					
ANR	5614726	Identifier	false		5614637	1					
ANR	5614727	CompoundStatement		19:68:517:517	5614637	1					
ANR	5614728	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Xen bootloader file '%s' cannot be read\\n"" , fixedvalue . Value ( ) )"	1249:2:32130:32217	5614637	0	True				
ANR	5614729	CallExpression	"vmprintf ( D_ALWAYS , ""Xen bootloader file '%s' cannot be read\\n"" , fixedvalue . Value ( ) )"		5614637	0					
ANR	5614730	Callee	vmprintf		5614637	0					
ANR	5614731	Identifier	vmprintf		5614637	0					
ANR	5614732	ArgumentList	D_ALWAYS		5614637	1					
ANR	5614733	Argument	D_ALWAYS		5614637	0					
ANR	5614734	Identifier	D_ALWAYS		5614637	0					
ANR	5614735	Argument	"""Xen bootloader file '%s' cannot be read\\n"""		5614637	1					
ANR	5614736	PrimaryExpression	"""Xen bootloader file '%s' cannot be read\\n"""		5614637	0					
ANR	5614737	Argument	fixedvalue . Value ( )		5614637	2					
ANR	5614738	CallExpression	fixedvalue . Value ( )		5614637	0					
ANR	5614739	Callee	fixedvalue . Value		5614637	0					
ANR	5614740	MemberAccess	fixedvalue . Value		5614637	0					
ANR	5614741	Identifier	fixedvalue		5614637	0					
ANR	5614742	Identifier	Value		5614637	1					
ANR	5614743	ArgumentList			5614637	1					
ANR	5614744	ReturnStatement	return false ;	1251:2:32221:32233	5614637	1	True				
ANR	5614745	Identifier	false		5614637	0					
ANR	5614746	ReturnStatement	return true ;	1253:1:32239:32250	5614637	9	True				
ANR	5614747	Identifier	true		5614637	0					
ANR	5614748	ReturnType	bool		5614637	1					
ANR	5614749	Identifier	XenType :: checkXenParams		5614637	2					
ANR	5614750	ParameterList	VMGahpConfig * config		5614637	3					
ANR	5614751	Parameter	VMGahpConfig * config	1229:24:31586:31605	5614637	0	True				
ANR	5614752	ParameterType	VMGahpConfig *		5614637	0					
ANR	5614753	Identifier	config		5614637	1					
ANR	5614754	CFGEntryNode	ENTRY		5614637		True				
ANR	5614755	CFGExitNode	EXIT		5614637		True				
ANR	5614756	Symbol	config_value		5614637						
ANR	5614757	Symbol	NULL		5614637						
ANR	5614758	Symbol	fixedvalue		5614637						
ANR	5614759	Symbol	param		5614637						
ANR	5614760	Symbol	fixedvalue . Value		5614637						
ANR	5614761	Symbol	false		5614637						
ANR	5614762	Symbol	D_ALWAYS		5614637						
ANR	5614763	Symbol	true		5614637						
ANR	5614764	Symbol	D_FULLDEBUG		5614637						
ANR	5614765	Symbol	delete_quotation_marks		5614637						
ANR	5614766	Symbol	config		5614637						
ANR	5614767	Symbol	check_vm_read_access_file		5614637						
ANR	5614768	Function	XenType :: killVMFast	1256:0:32255:32533							
ANR	5614769	FunctionDef	XenType :: killVMFast (const char * vmname)		5614768	0					
ANR	5614770	CompoundStatement		1258:0:32300:32533	5614768	0					
ANR	5614771	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""Inside XenType::killVMFast\\n"" )"	1259:1:32303:32356	5614768	0	True				
ANR	5614772	CallExpression	"vmprintf ( D_FULLDEBUG , ""Inside XenType::killVMFast\\n"" )"		5614768	0					
ANR	5614773	Callee	vmprintf		5614768	0					
ANR	5614774	Identifier	vmprintf		5614768	0					
ANR	5614775	ArgumentList	D_FULLDEBUG		5614768	1					
ANR	5614776	Argument	D_FULLDEBUG		5614768	0					
ANR	5614777	Identifier	D_FULLDEBUG		5614768	0					
ANR	5614778	Argument	"""Inside XenType::killVMFast\\n"""		5614768	1					
ANR	5614779	PrimaryExpression	"""Inside XenType::killVMFast\\n"""		5614768	0					
ANR	5614780	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	1260:1:32359:32392	5614768	1	True				
ANR	5614781	IdentifierDecl	priv = set_root_priv ( )		5614768	0					
ANR	5614782	IdentifierDeclType	priv_state		5614768	0					
ANR	5614783	Identifier	priv		5614768	1					
ANR	5614784	AssignmentExpression	priv = set_root_priv ( )		5614768	2		=			
ANR	5614785	Identifier	priv		5614768	0					
ANR	5614786	CallExpression	set_root_priv ( )		5614768	1					
ANR	5614787	Callee	set_root_priv		5614768	0					
ANR	5614788	Identifier	set_root_priv		5614768	0					
ANR	5614789	ArgumentList			5614768	1					
ANR	5614790	IdentifierDeclStatement	"virConnectPtr libvirt_connection = virConnectOpen ( ""xen:///"" ) ;"	1261:1:32395:32455	5614768	2	True				
ANR	5614791	IdentifierDecl	"libvirt_connection = virConnectOpen ( ""xen:///"" )"		5614768	0					
ANR	5614792	IdentifierDeclType	virConnectPtr		5614768	0					
ANR	5614793	Identifier	libvirt_connection		5614768	1					
ANR	5614794	AssignmentExpression	"libvirt_connection = virConnectOpen ( ""xen:///"" )"		5614768	2		=			
ANR	5614795	Identifier	libvirt_connection		5614768	0					
ANR	5614796	CallExpression	"virConnectOpen ( ""xen:///"" )"		5614768	1					
ANR	5614797	Callee	virConnectOpen		5614768	0					
ANR	5614798	Identifier	virConnectOpen		5614768	0					
ANR	5614799	ArgumentList	"""xen:///"""		5614768	1					
ANR	5614800	Argument	"""xen:///"""		5614768	0					
ANR	5614801	PrimaryExpression	"""xen:///"""		5614768	0					
ANR	5614802	ExpressionStatement	set_priv ( priv )	1262:1:32458:32472	5614768	3	True				
ANR	5614803	CallExpression	set_priv ( priv )		5614768	0					
ANR	5614804	Callee	set_priv		5614768	0					
ANR	5614805	Identifier	set_priv		5614768	0					
ANR	5614806	ArgumentList	priv		5614768	1					
ANR	5614807	Argument	priv		5614768	0					
ANR	5614808	Identifier	priv		5614768	0					
ANR	5614809	ReturnStatement	"return VirshType :: killVMFast ( vmname , libvirt_connection ) ;"	1263:1:32475:32531	5614768	4	True				
ANR	5614810	CallExpression	"VirshType :: killVMFast ( vmname , libvirt_connection )"		5614768	0					
ANR	5614811	Callee	VirshType :: killVMFast		5614768	0					
ANR	5614812	Identifier	VirshType :: killVMFast		5614768	0					
ANR	5614813	ArgumentList	vmname		5614768	1					
ANR	5614814	Argument	vmname		5614768	0					
ANR	5614815	Identifier	vmname		5614768	0					
ANR	5614816	Argument	libvirt_connection		5614768	1					
ANR	5614817	Identifier	libvirt_connection		5614768	0					
ANR	5614818	ReturnType	bool		5614768	1					
ANR	5614819	Identifier	XenType :: killVMFast		5614768	2					
ANR	5614820	ParameterList	const char * vmname		5614768	3					
ANR	5614821	Parameter	const char * vmname	1257:20:32280:32297	5614768	0	True				
ANR	5614822	ParameterType	const char *		5614768	0					
ANR	5614823	Identifier	vmname		5614768	1					
ANR	5614824	CFGEntryNode	ENTRY		5614768		True				
ANR	5614825	CFGExitNode	EXIT		5614768		True				
ANR	5614826	Symbol	libvirt_connection		5614768						
ANR	5614827	Symbol	virConnectOpen		5614768						
ANR	5614828	Symbol	VirshType :: killVMFast		5614768						
ANR	5614829	Symbol	D_FULLDEBUG		5614768						
ANR	5614830	Symbol	set_root_priv		5614768						
ANR	5614831	Symbol	priv		5614768						
ANR	5614832	Symbol	vmname		5614768						
ANR	5614833	Function	VirshType :: makeNameofSuspendfile	1266:0:32536:32679							
ANR	5614834	FunctionDef	VirshType :: makeNameofSuspendfile (MyString & name)		5614833	0					
ANR	5614835	CompoundStatement		1268:0:32590:32679	5614833	0					
ANR	5614836	ExpressionStatement	"name . sprintf ( ""%s%c%s"" , m_workingpath . Value ( ) , DIR_DELIM_CHAR , XEN_MEM_SAVED_FILE )"	1269:1:32593:32677	5614833	0	True				
ANR	5614837	CallExpression	"name . sprintf ( ""%s%c%s"" , m_workingpath . Value ( ) , DIR_DELIM_CHAR , XEN_MEM_SAVED_FILE )"		5614833	0					
ANR	5614838	Callee	name . sprintf		5614833	0					
ANR	5614839	MemberAccess	name . sprintf		5614833	0					
ANR	5614840	Identifier	name		5614833	0					
ANR	5614841	Identifier	sprintf		5614833	1					
ANR	5614842	ArgumentList	"""%s%c%s"""		5614833	1					
ANR	5614843	Argument	"""%s%c%s"""		5614833	0					
ANR	5614844	PrimaryExpression	"""%s%c%s"""		5614833	0					
ANR	5614845	Argument	m_workingpath . Value ( )		5614833	1					
ANR	5614846	CallExpression	m_workingpath . Value ( )		5614833	0					
ANR	5614847	Callee	m_workingpath . Value		5614833	0					
ANR	5614848	MemberAccess	m_workingpath . Value		5614833	0					
ANR	5614849	Identifier	m_workingpath		5614833	0					
ANR	5614850	Identifier	Value		5614833	1					
ANR	5614851	ArgumentList			5614833	1					
ANR	5614852	Argument	DIR_DELIM_CHAR		5614833	2					
ANR	5614853	Identifier	DIR_DELIM_CHAR		5614833	0					
ANR	5614854	Argument	XEN_MEM_SAVED_FILE		5614833	3					
ANR	5614855	Identifier	XEN_MEM_SAVED_FILE		5614833	0					
ANR	5614856	ReturnType	void		5614833	1					
ANR	5614857	Identifier	VirshType :: makeNameofSuspendfile		5614833	2					
ANR	5614858	ParameterList	MyString & name		5614833	3					
ANR	5614859	Parameter	MyString & name	1267:33:32574:32587	5614833	0	True				
ANR	5614860	ParameterType	MyString &		5614833	0					
ANR	5614861	Identifier	name		5614833	1					
ANR	5614862	CFGEntryNode	ENTRY		5614833		True				
ANR	5614863	CFGExitNode	EXIT		5614833		True				
ANR	5614864	Symbol	m_workingpath		5614833						
ANR	5614865	Symbol	m_workingpath . Value		5614833						
ANR	5614866	Symbol	XEN_MEM_SAVED_FILE		5614833						
ANR	5614867	Symbol	DIR_DELIM_CHAR		5614833						
ANR	5614868	Symbol	name		5614833						
ANR	5614869	Function	VirshType :: checkCkptSuspendFile	1276:0:32835:34481							
ANR	5614870	FunctionDef	VirshType :: checkCkptSuspendFile (const char * file)		5614869	0					
ANR	5614871	CompoundStatement		1278:0:32890:34481	5614869	0					
ANR	5614872	IfStatement	if ( ! file || file [ 0 ] == '\\0' )		5614869	0					
ANR	5614873	Condition	! file || file [ 0 ] == '\\0'	1279:5:32897:32920	5614869	0	True				
ANR	5614874	OrExpression	! file || file [ 0 ] == '\\0'		5614869	0		||			
ANR	5614875	UnaryOperationExpression	! file		5614869	0					
ANR	5614876	UnaryOperator	!		5614869	0					
ANR	5614877	Identifier	file		5614869	1					
ANR	5614878	EqualityExpression	file [ 0 ] == '\\0'		5614869	1		==			
ANR	5614879	ArrayIndexing	file [ 0 ]		5614869	0					
ANR	5614880	Identifier	file		5614869	0					
ANR	5614881	PrimaryExpression	0		5614869	1					
ANR	5614882	PrimaryExpression	'\\0'		5614869	1					
ANR	5614883	CompoundStatement		2:32:33:33	5614869	1					
ANR	5614884	ReturnStatement	return false ;	1280:2:32928:32940	5614869	0	True				
ANR	5614885	Identifier	false		5614869	0					
ANR	5614886	IdentifierDeclStatement	MyString timestampfile ( file ) ;	1284:1:32971:32999	5614869	1	True				
ANR	5614887	IdentifierDecl	timestampfile ( file )		5614869	0					
ANR	5614888	IdentifierDeclType	MyString		5614869	0					
ANR	5614889	Identifier	timestampfile		5614869	1					
ANR	5614890	Identifier	file		5614869	2					
ANR	5614891	ExpressionStatement	timestampfile += XEN_CKPT_TIMESTAMP_FILE_SUFFIX	1285:1:33002:33049	5614869	2	True				
ANR	5614892	AssignmentExpression	timestampfile += XEN_CKPT_TIMESTAMP_FILE_SUFFIX		5614869	0		+=			
ANR	5614893	Identifier	timestampfile		5614869	0					
ANR	5614894	Identifier	XEN_CKPT_TIMESTAMP_FILE_SUFFIX		5614869	1					
ANR	5614895	IdentifierDeclStatement	"FILE * fp = safe_fopen_wrapper ( timestampfile . Value ( ) , ""r"" ) ;"	1287:1:33053:33110	5614869	3	True				
ANR	5614896	IdentifierDecl	"* fp = safe_fopen_wrapper ( timestampfile . Value ( ) , ""r"" )"		5614869	0					
ANR	5614897	IdentifierDeclType	FILE *		5614869	0					
ANR	5614898	Identifier	fp		5614869	1					
ANR	5614899	AssignmentExpression	"* fp = safe_fopen_wrapper ( timestampfile . Value ( ) , ""r"" )"		5614869	2		=			
ANR	5614900	Identifier	fp		5614869	0					
ANR	5614901	CallExpression	"safe_fopen_wrapper ( timestampfile . Value ( ) , ""r"" )"		5614869	1					
ANR	5614902	Callee	safe_fopen_wrapper		5614869	0					
ANR	5614903	Identifier	safe_fopen_wrapper		5614869	0					
ANR	5614904	ArgumentList	timestampfile . Value ( )		5614869	1					
ANR	5614905	Argument	timestampfile . Value ( )		5614869	0					
ANR	5614906	CallExpression	timestampfile . Value ( )		5614869	0					
ANR	5614907	Callee	timestampfile . Value		5614869	0					
ANR	5614908	MemberAccess	timestampfile . Value		5614869	0					
ANR	5614909	Identifier	timestampfile		5614869	0					
ANR	5614910	Identifier	Value		5614869	1					
ANR	5614911	ArgumentList			5614869	1					
ANR	5614912	Argument	"""r"""		5614869	1					
ANR	5614913	PrimaryExpression	"""r"""		5614869	0					
ANR	5614914	IfStatement	if ( ! fp )		5614869	4					
ANR	5614915	Condition	! fp	1288:5:33117:33119	5614869	0	True				
ANR	5614916	UnaryOperationExpression	! fp		5614869	0					
ANR	5614917	UnaryOperator	!		5614869	0					
ANR	5614918	Identifier	fp		5614869	1					
ANR	5614919	CompoundStatement		11:11:232:232	5614869	1					
ANR	5614920	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Cannot find the timestamp file\\n"" )"	1289:2:33127:33181	5614869	0	True				
ANR	5614921	CallExpression	"vmprintf ( D_ALWAYS , ""Cannot find the timestamp file\\n"" )"		5614869	0					
ANR	5614922	Callee	vmprintf		5614869	0					
ANR	5614923	Identifier	vmprintf		5614869	0					
ANR	5614924	ArgumentList	D_ALWAYS		5614869	1					
ANR	5614925	Argument	D_ALWAYS		5614869	0					
ANR	5614926	Identifier	D_ALWAYS		5614869	0					
ANR	5614927	Argument	"""Cannot find the timestamp file\\n"""		5614869	1					
ANR	5614928	PrimaryExpression	"""Cannot find the timestamp file\\n"""		5614869	0					
ANR	5614929	ReturnStatement	return false ;	1290:2:33185:33197	5614869	1	True				
ANR	5614930	Identifier	false		5614869	0					
ANR	5614931	IdentifierDeclStatement	char buffer [ 128 ] ;	1293:1:33204:33220	5614869	5	True				
ANR	5614932	IdentifierDecl	buffer [ 128 ]		5614869	0					
ANR	5614933	IdentifierDeclType	char [ 128 ]		5614869	0					
ANR	5614934	Identifier	buffer		5614869	1					
ANR	5614935	PrimaryExpression	128		5614869	2					
ANR	5614936	IfStatement	"if ( fgets ( buffer , sizeof ( buffer ) , fp ) == NULL )"		5614869	6					
ANR	5614937	Condition	"fgets ( buffer , sizeof ( buffer ) , fp ) == NULL"	1294:5:33227:33267	5614869	0	True				
ANR	5614938	EqualityExpression	"fgets ( buffer , sizeof ( buffer ) , fp ) == NULL"		5614869	0		==			
ANR	5614939	CallExpression	"fgets ( buffer , sizeof ( buffer ) , fp )"		5614869	0					
ANR	5614940	Callee	fgets		5614869	0					
ANR	5614941	Identifier	fgets		5614869	0					
ANR	5614942	ArgumentList	buffer		5614869	1					
ANR	5614943	Argument	buffer		5614869	0					
ANR	5614944	Identifier	buffer		5614869	0					
ANR	5614945	Argument	sizeof ( buffer )		5614869	1					
ANR	5614946	SizeofExpression	sizeof ( buffer )		5614869	0					
ANR	5614947	Sizeof	sizeof		5614869	0					
ANR	5614948	SizeofOperand	buffer		5614869	1					
ANR	5614949	Argument	fp		5614869	2					
ANR	5614950	Identifier	fp		5614869	0					
ANR	5614951	Identifier	NULL		5614869	1					
ANR	5614952	CompoundStatement		17:49:380:380	5614869	1					
ANR	5614953	ExpressionStatement	fclose ( fp )	1295:2:33275:33285	5614869	0	True				
ANR	5614954	CallExpression	fclose ( fp )		5614869	0					
ANR	5614955	Callee	fclose		5614869	0					
ANR	5614956	Identifier	fclose		5614869	0					
ANR	5614957	ArgumentList	fp		5614869	1					
ANR	5614958	Argument	fp		5614869	0					
ANR	5614959	Identifier	fp		5614869	0					
ANR	5614960	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Invalid timestamp file\\n"" )"	1296:2:33289:33335	5614869	1	True				
ANR	5614961	CallExpression	"vmprintf ( D_ALWAYS , ""Invalid timestamp file\\n"" )"		5614869	0					
ANR	5614962	Callee	vmprintf		5614869	0					
ANR	5614963	Identifier	vmprintf		5614869	0					
ANR	5614964	ArgumentList	D_ALWAYS		5614869	1					
ANR	5614965	Argument	D_ALWAYS		5614869	0					
ANR	5614966	Identifier	D_ALWAYS		5614869	0					
ANR	5614967	Argument	"""Invalid timestamp file\\n"""		5614869	1					
ANR	5614968	PrimaryExpression	"""Invalid timestamp file\\n"""		5614869	0					
ANR	5614969	ReturnStatement	return false ;	1297:2:33339:33351	5614869	2	True				
ANR	5614970	Identifier	false		5614869	0					
ANR	5614971	ExpressionStatement	fclose ( fp )	1299:1:33357:33367	5614869	7	True				
ANR	5614972	CallExpression	fclose ( fp )		5614869	0					
ANR	5614973	Callee	fclose		5614869	0					
ANR	5614974	Identifier	fclose		5614869	0					
ANR	5614975	ArgumentList	fp		5614869	1					
ANR	5614976	Argument	fp		5614869	0					
ANR	5614977	Identifier	fp		5614869	0					
ANR	5614978	IdentifierDeclStatement	MyString tmp_str ;	1301:1:33371:33387	5614869	8	True				
ANR	5614979	IdentifierDecl	tmp_str		5614869	0					
ANR	5614980	IdentifierDeclType	MyString		5614869	0					
ANR	5614981	Identifier	tmp_str		5614869	1					
ANR	5614982	ExpressionStatement	tmp_str = buffer	1302:1:33390:33406	5614869	9	True				
ANR	5614983	AssignmentExpression	tmp_str = buffer		5614869	0		=			
ANR	5614984	Identifier	tmp_str		5614869	0					
ANR	5614985	Identifier	buffer		5614869	1					
ANR	5614986	IfStatement	if ( tmp_str . IsEmpty ( ) )		5614869	10					
ANR	5614987	Condition	tmp_str . IsEmpty ( )	1303:5:33413:33429	5614869	0	True				
ANR	5614988	CallExpression	tmp_str . IsEmpty ( )		5614869	0					
ANR	5614989	Callee	tmp_str . IsEmpty		5614869	0					
ANR	5614990	MemberAccess	tmp_str . IsEmpty		5614869	0					
ANR	5614991	Identifier	tmp_str		5614869	0					
ANR	5614992	Identifier	IsEmpty		5614869	1					
ANR	5614993	ArgumentList			5614869	1					
ANR	5614994	CompoundStatement		26:25:542:542	5614869	1					
ANR	5614995	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Invalid timestamp file\\n"" )"	1304:2:33437:33483	5614869	0	True				
ANR	5614996	CallExpression	"vmprintf ( D_ALWAYS , ""Invalid timestamp file\\n"" )"		5614869	0					
ANR	5614997	Callee	vmprintf		5614869	0					
ANR	5614998	Identifier	vmprintf		5614869	0					
ANR	5614999	ArgumentList	D_ALWAYS		5614869	1					
ANR	5615000	Argument	D_ALWAYS		5614869	0					
ANR	5615001	Identifier	D_ALWAYS		5614869	0					
ANR	5615002	Argument	"""Invalid timestamp file\\n"""		5614869	1					
ANR	5615003	PrimaryExpression	"""Invalid timestamp file\\n"""		5614869	0					
ANR	5615004	ReturnStatement	return false ;	1305:2:33487:33499	5614869	1	True				
ANR	5615005	Identifier	false		5614869	0					
ANR	5615006	ExpressionStatement	tmp_str . trim ( )	1307:1:33505:33519	5614869	11	True				
ANR	5615007	CallExpression	tmp_str . trim ( )		5614869	0					
ANR	5615008	Callee	tmp_str . trim		5614869	0					
ANR	5615009	MemberAccess	tmp_str . trim		5614869	0					
ANR	5615010	Identifier	tmp_str		5614869	0					
ANR	5615011	Identifier	trim		5614869	1					
ANR	5615012	ArgumentList			5614869	1					
ANR	5615013	IdentifierDeclStatement	time_t timestamp ;	1309:1:33523:33539	5614869	12	True				
ANR	5615014	IdentifierDecl	timestamp		5614869	0					
ANR	5615015	IdentifierDeclType	time_t		5614869	0					
ANR	5615016	Identifier	timestamp		5614869	1					
ANR	5615017	ExpressionStatement	timestamp = ( time_t ) atoi ( tmp_str . Value ( ) )	1310:1:33542:33583	5614869	13	True				
ANR	5615018	AssignmentExpression	timestamp = ( time_t ) atoi ( tmp_str . Value ( ) )		5614869	0		=			
ANR	5615019	Identifier	timestamp		5614869	0					
ANR	5615020	CastExpression	( time_t ) atoi ( tmp_str . Value ( ) )		5614869	1					
ANR	5615021	CastTarget	time_t		5614869	0					
ANR	5615022	CallExpression	atoi ( tmp_str . Value ( ) )		5614869	1					
ANR	5615023	Callee	atoi		5614869	0					
ANR	5615024	Identifier	atoi		5614869	0					
ANR	5615025	ArgumentList	tmp_str . Value ( )		5614869	1					
ANR	5615026	Argument	tmp_str . Value ( )		5614869	0					
ANR	5615027	CallExpression	tmp_str . Value ( )		5614869	0					
ANR	5615028	Callee	tmp_str . Value		5614869	0					
ANR	5615029	MemberAccess	tmp_str . Value		5614869	0					
ANR	5615030	Identifier	tmp_str		5614869	0					
ANR	5615031	Identifier	Value		5614869	1					
ANR	5615032	ArgumentList			5614869	1					
ANR	5615033	IfStatement	if ( timestamp <= 0 )		5614869	14					
ANR	5615034	Condition	timestamp <= 0	1311:5:33590:33603	5614869	0	True				
ANR	5615035	RelationalExpression	timestamp <= 0		5614869	0		<=			
ANR	5615036	Identifier	timestamp		5614869	0					
ANR	5615037	PrimaryExpression	0		5614869	1					
ANR	5615038	CompoundStatement		34:22:716:716	5614869	1					
ANR	5615039	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Invalid timestamp file\\n"" )"	1312:2:33611:33657	5614869	0	True				
ANR	5615040	CallExpression	"vmprintf ( D_ALWAYS , ""Invalid timestamp file\\n"" )"		5614869	0					
ANR	5615041	Callee	vmprintf		5614869	0					
ANR	5615042	Identifier	vmprintf		5614869	0					
ANR	5615043	ArgumentList	D_ALWAYS		5614869	1					
ANR	5615044	Argument	D_ALWAYS		5614869	0					
ANR	5615045	Identifier	D_ALWAYS		5614869	0					
ANR	5615046	Argument	"""Invalid timestamp file\\n"""		5614869	1					
ANR	5615047	PrimaryExpression	"""Invalid timestamp file\\n"""		5614869	0					
ANR	5615048	ReturnStatement	return false ;	1313:2:33661:33673	5614869	1	True				
ANR	5615049	Identifier	false		5614869	0					
ANR	5615050	IdentifierDeclStatement	XenDisk * vdisk = NULL ;	1316:1:33680:33701	5614869	15	True				
ANR	5615051	IdentifierDecl	* vdisk = NULL		5614869	0					
ANR	5615052	IdentifierDeclType	XenDisk *		5614869	0					
ANR	5615053	Identifier	vdisk		5614869	1					
ANR	5615054	AssignmentExpression	* vdisk = NULL		5614869	2		=			
ANR	5615055	Identifier	NULL		5614869	0					
ANR	5615056	Identifier	NULL		5614869	1					
ANR	5615057	ExpressionStatement	m_disk_list . Rewind ( )	1317:1:33704:33724	5614869	16	True				
ANR	5615058	CallExpression	m_disk_list . Rewind ( )		5614869	0					
ANR	5615059	Callee	m_disk_list . Rewind		5614869	0					
ANR	5615060	MemberAccess	m_disk_list . Rewind		5614869	0					
ANR	5615061	Identifier	m_disk_list		5614869	0					
ANR	5615062	Identifier	Rewind		5614869	1					
ANR	5615063	ArgumentList			5614869	1					
ANR	5615064	WhileStatement	while ( m_disk_list . Next ( vdisk ) )		5614869	17					
ANR	5615065	Condition	m_disk_list . Next ( vdisk )	1318:8:33734:33756	5614869	0	True				
ANR	5615066	CallExpression	m_disk_list . Next ( vdisk )		5614869	0					
ANR	5615067	Callee	m_disk_list . Next		5614869	0					
ANR	5615068	MemberAccess	m_disk_list . Next		5614869	0					
ANR	5615069	Identifier	m_disk_list		5614869	0					
ANR	5615070	Identifier	Next		5614869	1					
ANR	5615071	ArgumentList	vdisk		5614869	1					
ANR	5615072	Argument	vdisk		5614869	0					
ANR	5615073	Identifier	vdisk		5614869	0					
ANR	5615074	CompoundStatement		41:34:869:869	5614869	1					
ANR	5615075	IfStatement	"if ( ! strcasecmp ( vdisk -> permission . Value ( ) , ""w"" ) || ! strcasecmp ( vdisk -> permission . Value ( ) , ""rw"" ) )"		5614869	0					
ANR	5615076	Condition	"! strcasecmp ( vdisk -> permission . Value ( ) , ""w"" ) || ! strcasecmp ( vdisk -> permission . Value ( ) , ""rw"" )"	1319:6:33768:33862	5614869	0	True				
ANR	5615077	OrExpression	"! strcasecmp ( vdisk -> permission . Value ( ) , ""w"" ) || ! strcasecmp ( vdisk -> permission . Value ( ) , ""rw"" )"		5614869	0		||			
ANR	5615078	UnaryOperationExpression	"! strcasecmp ( vdisk -> permission . Value ( ) , ""w"" )"		5614869	0					
ANR	5615079	UnaryOperator	!		5614869	0					
ANR	5615080	CallExpression	"strcasecmp ( vdisk -> permission . Value ( ) , ""w"" )"		5614869	1					
ANR	5615081	Callee	strcasecmp		5614869	0					
ANR	5615082	Identifier	strcasecmp		5614869	0					
ANR	5615083	ArgumentList	vdisk -> permission . Value ( )		5614869	1					
ANR	5615084	Argument	vdisk -> permission . Value ( )		5614869	0					
ANR	5615085	CallExpression	vdisk -> permission . Value ( )		5614869	0					
ANR	5615086	Callee	vdisk -> permission . Value		5614869	0					
ANR	5615087	MemberAccess	vdisk -> permission . Value		5614869	0					
ANR	5615088	PtrMemberAccess	vdisk -> permission		5614869	0					
ANR	5615089	Identifier	vdisk		5614869	0					
ANR	5615090	Identifier	permission		5614869	1					
ANR	5615091	Identifier	Value		5614869	1					
ANR	5615092	ArgumentList			5614869	1					
ANR	5615093	Argument	"""w"""		5614869	1					
ANR	5615094	PrimaryExpression	"""w"""		5614869	0					
ANR	5615095	UnaryOperationExpression	"! strcasecmp ( vdisk -> permission . Value ( ) , ""rw"" )"		5614869	1					
ANR	5615096	UnaryOperator	!		5614869	0					
ANR	5615097	CallExpression	"strcasecmp ( vdisk -> permission . Value ( ) , ""rw"" )"		5614869	1					
ANR	5615098	Callee	strcasecmp		5614869	0					
ANR	5615099	Identifier	strcasecmp		5614869	0					
ANR	5615100	ArgumentList	vdisk -> permission . Value ( )		5614869	1					
ANR	5615101	Argument	vdisk -> permission . Value ( )		5614869	0					
ANR	5615102	CallExpression	vdisk -> permission . Value ( )		5614869	0					
ANR	5615103	Callee	vdisk -> permission . Value		5614869	0					
ANR	5615104	MemberAccess	vdisk -> permission . Value		5614869	0					
ANR	5615105	PtrMemberAccess	vdisk -> permission		5614869	0					
ANR	5615106	Identifier	vdisk		5614869	0					
ANR	5615107	Identifier	permission		5614869	1					
ANR	5615108	Identifier	Value		5614869	1					
ANR	5615109	ArgumentList			5614869	1					
ANR	5615110	Argument	"""rw"""		5614869	1					
ANR	5615111	PrimaryExpression	"""rw"""		5614869	0					
ANR	5615112	CompoundStatement		47:3:1082:1103	5614869	1					
ANR	5615113	IdentifierDeclStatement	time_t disk_mtime ;	1323:3:33951:33968	5614869	0	True				
ANR	5615114	IdentifierDecl	disk_mtime		5614869	0					
ANR	5615115	IdentifierDeclType	time_t		5614869	0					
ANR	5615116	Identifier	disk_mtime		5614869	1					
ANR	5615117	IdentifierDeclStatement	struct stat disk_stat ;	1324:3:33973:33994	5614869	1	True				
ANR	5615118	IdentifierDecl	disk_stat		5614869	0					
ANR	5615119	IdentifierDeclType	struct stat		5614869	0					
ANR	5615120	Identifier	disk_stat		5614869	1					
ANR	5615121	IfStatement	"if ( stat ( vdisk -> filename . Value ( ) , & disk_stat ) < 0 )"		5614869	2					
ANR	5615122	Condition	"stat ( vdisk -> filename . Value ( ) , & disk_stat ) < 0"	1325:7:34003:34048	5614869	0	True				
ANR	5615123	RelationalExpression	"stat ( vdisk -> filename . Value ( ) , & disk_stat ) < 0"		5614869	0		<			
ANR	5615124	CallExpression	"stat ( vdisk -> filename . Value ( ) , & disk_stat )"		5614869	0					
ANR	5615125	Callee	stat		5614869	0					
ANR	5615126	Identifier	stat		5614869	0					
ANR	5615127	ArgumentList	vdisk -> filename . Value ( )		5614869	1					
ANR	5615128	Argument	vdisk -> filename . Value ( )		5614869	0					
ANR	5615129	CallExpression	vdisk -> filename . Value ( )		5614869	0					
ANR	5615130	Callee	vdisk -> filename . Value		5614869	0					
ANR	5615131	MemberAccess	vdisk -> filename . Value		5614869	0					
ANR	5615132	PtrMemberAccess	vdisk -> filename		5614869	0					
ANR	5615133	Identifier	vdisk		5614869	0					
ANR	5615134	Identifier	filename		5614869	1					
ANR	5615135	Identifier	Value		5614869	1					
ANR	5615136	ArgumentList			5614869	1					
ANR	5615137	Argument	& disk_stat		5614869	1					
ANR	5615138	UnaryOperationExpression	& disk_stat		5614869	0					
ANR	5615139	UnaryOperator	&		5614869	0					
ANR	5615140	Identifier	disk_stat		5614869	1					
ANR	5615141	PrimaryExpression	0		5614869	1					
ANR	5615142	CompoundStatement		48:56:1161:1161	5614869	1					
ANR	5615143	ExpressionStatement	"vmprintf ( D_ALWAYS , ""\\nERROR: Failed to access \\""%s\\"":%s\\n"" , vdisk -> filename . Value ( ) , strerror ( errno ) )"	1326:4:34058:34165	5614869	0	True				
ANR	5615144	CallExpression	"vmprintf ( D_ALWAYS , ""\\nERROR: Failed to access \\""%s\\"":%s\\n"" , vdisk -> filename . Value ( ) , strerror ( errno ) )"		5614869	0					
ANR	5615145	Callee	vmprintf		5614869	0					
ANR	5615146	Identifier	vmprintf		5614869	0					
ANR	5615147	ArgumentList	D_ALWAYS		5614869	1					
ANR	5615148	Argument	D_ALWAYS		5614869	0					
ANR	5615149	Identifier	D_ALWAYS		5614869	0					
ANR	5615150	Argument	"""\\nERROR: Failed to access \\""%s\\"":%s\\n"""		5614869	1					
ANR	5615151	PrimaryExpression	"""\\nERROR: Failed to access \\""%s\\"":%s\\n"""		5614869	0					
ANR	5615152	Argument	vdisk -> filename . Value ( )		5614869	2					
ANR	5615153	CallExpression	vdisk -> filename . Value ( )		5614869	0					
ANR	5615154	Callee	vdisk -> filename . Value		5614869	0					
ANR	5615155	MemberAccess	vdisk -> filename . Value		5614869	0					
ANR	5615156	PtrMemberAccess	vdisk -> filename		5614869	0					
ANR	5615157	Identifier	vdisk		5614869	0					
ANR	5615158	Identifier	filename		5614869	1					
ANR	5615159	Identifier	Value		5614869	1					
ANR	5615160	ArgumentList			5614869	1					
ANR	5615161	Argument	strerror ( errno )		5614869	3					
ANR	5615162	CallExpression	strerror ( errno )		5614869	0					
ANR	5615163	Callee	strerror		5614869	0					
ANR	5615164	Identifier	strerror		5614869	0					
ANR	5615165	ArgumentList	errno		5614869	1					
ANR	5615166	Argument	errno		5614869	0					
ANR	5615167	Identifier	errno		5614869	0					
ANR	5615168	ReturnStatement	return false ;	1328:4:34171:34183	5614869	1	True				
ANR	5615169	Identifier	false		5614869	0					
ANR	5615170	ExpressionStatement	disk_mtime = disk_stat . st_mtime	1330:3:34193:34224	5614869	3	True				
ANR	5615171	AssignmentExpression	disk_mtime = disk_stat . st_mtime		5614869	0		=			
ANR	5615172	Identifier	disk_mtime		5614869	0					
ANR	5615173	MemberAccess	disk_stat . st_mtime		5614869	1					
ANR	5615174	Identifier	disk_stat		5614869	0					
ANR	5615175	Identifier	st_mtime		5614869	1					
ANR	5615176	IfStatement	if ( disk_mtime != timestamp )		5614869	4					
ANR	5615177	Condition	disk_mtime != timestamp	1333:7:34248:34270	5614869	0	True				
ANR	5615178	EqualityExpression	disk_mtime != timestamp		5614869	0		!=			
ANR	5615179	Identifier	disk_mtime		5614869	0					
ANR	5615180	Identifier	timestamp		5614869	1					
ANR	5615181	CompoundStatement		56:33:1383:1383	5614869	1					
ANR	5615182	Statement	vmprintf	1334:4:34280:34287	5614869	0	True				
ANR	5615183	Statement	(	1334:12:34288:34288	5614869	1	True				
ANR	5615184	Statement	D_ALWAYS	1334:13:34289:34296	5614869	2	True				
ANR	5615185	Statement	","	1334:21:34297:34297	5614869	3	True				
ANR	5615186	Statement	"""Checkpoint timestamp mismatch: """	1334:23:34299:34331	5614869	4	True				
ANR	5615187	Statement	"""timestamp of suspend file=%d, mtime of disk file=%d\\n"""	1335:6:34339:34393	5614869	5	True				
ANR	5615188	Statement	","	1335:61:34394:34394	5614869	6	True				
ANR	5615189	Statement	(	1336:6:34402:34402	5614869	7	True				
ANR	5615190	Statement	int	1336:7:34403:34405	5614869	8	True				
ANR	5615191	Statement	)	1336:10:34406:34406	5614869	9	True				
ANR	5615192	Statement	timestamp	1336:11:34407:34415	5614869	10	True				
ANR	5615193	Statement	","	1336:20:34416:34416	5614869	11	True				
ANR	5615194	Statement	(	1336:22:34418:34418	5614869	12	True				
ANR	5615195	Statement	int	1336:23:34419:34421	5614869	13	True				
ANR	5615196	Statement	)	1336:26:34422:34422	5614869	14	True				
ANR	5615197	Statement	disk_mtime	1336:27:34423:34432	5614869	15	True				
ANR	5615198	Statement	)	1336:37:34433:34433	5614869	16	True				
ANR	5615199	ExpressionStatement		1336:38:34434:34434	5614869	17	True				
ANR	5615200	ReturnStatement	return false ;	1337:4:34440:34452	5614869	18	True				
ANR	5615201	Identifier	false		5614869	0					
ANR	5615202	ReturnStatement	return true ;	1342:1:34468:34479	5614869	18	True				
ANR	5615203	Identifier	true		5614869	0					
ANR	5615204	ReturnType	bool		5614869	1					
ANR	5615205	Identifier	VirshType :: checkCkptSuspendFile		5614869	2					
ANR	5615206	ParameterList	const char * file		5614869	3					
ANR	5615207	Parameter	const char * file	1277:32:32872:32887	5614869	0	True				
ANR	5615208	ParameterType	const char *		5614869	0					
ANR	5615209	Identifier	file		5614869	1					
ANR	5615210	CFGEntryNode	ENTRY		5614869		True				
ANR	5615211	CFGExitNode	EXIT		5614869		True				
ANR	5615212	Symbol	XEN_CKPT_TIMESTAMP_FILE_SUFFIX		5614869						
ANR	5615213	Symbol	m_disk_list		5614869						
ANR	5615214	Symbol	fp		5614869						
ANR	5615215	Symbol	tmp_str . IsEmpty		5614869						
ANR	5615216	Symbol	fgets		5614869						
ANR	5615217	Symbol	file		5614869						
ANR	5615218	Symbol	* vdisk		5614869						
ANR	5615219	Symbol	vdisk -> filename		5614869						
ANR	5615220	Symbol	& disk_stat		5614869						
ANR	5615221	Symbol	vdisk -> permission . Value		5614869						
ANR	5615222	Symbol	buffer		5614869						
ANR	5615223	Symbol	strcasecmp		5614869						
ANR	5615224	Symbol	timestamp		5614869						
ANR	5615225	Symbol	timestampfile		5614869						
ANR	5615226	Symbol	atoi		5614869						
ANR	5615227	Symbol	vdisk -> permission		5614869						
ANR	5615228	Symbol	stat		5614869						
ANR	5615229	Symbol	errno		5614869						
ANR	5615230	Symbol	NULL		5614869						
ANR	5615231	Symbol	tmp_str		5614869						
ANR	5615232	Symbol	disk_stat . st_mtime		5614869						
ANR	5615233	Symbol	safe_fopen_wrapper		5614869						
ANR	5615234	Symbol	false		5614869						
ANR	5615235	Symbol	D_ALWAYS		5614869						
ANR	5615236	Symbol	tmp_str . Value		5614869						
ANR	5615237	Symbol	vdisk -> filename . Value		5614869						
ANR	5615238	Symbol	* file		5614869						
ANR	5615239	Symbol	disk_mtime		5614869						
ANR	5615240	Symbol	strerror		5614869						
ANR	5615241	Symbol	m_disk_list . Next		5614869						
ANR	5615242	Symbol	true		5614869						
ANR	5615243	Symbol	disk_stat		5614869						
ANR	5615244	Symbol	timestampfile . Value		5614869						
ANR	5615245	Symbol	vdisk		5614869						
ANR	5615246	Function	VirshType :: findCkptConfigAndSuspendFile	1345:0:34484:35789							
ANR	5615247	FunctionDef	"VirshType :: findCkptConfigAndSuspendFile (MyString & vmconfig , MyString & suspendfile)"		5615246	0					
ANR	5615248	CompoundStatement		1347:0:34572:35789	5615246	0					
ANR	5615249	IfStatement	if ( m_transfer_intermediate_files . isEmpty ( ) )		5615246	0					
ANR	5615250	Condition	m_transfer_intermediate_files . isEmpty ( )	1348:5:34579:34617	5615246	0	True				
ANR	5615251	CallExpression	m_transfer_intermediate_files . isEmpty ( )		5615246	0					
ANR	5615252	Callee	m_transfer_intermediate_files . isEmpty		5615246	0					
ANR	5615253	MemberAccess	m_transfer_intermediate_files . isEmpty		5615246	0					
ANR	5615254	Identifier	m_transfer_intermediate_files		5615246	0					
ANR	5615255	Identifier	isEmpty		5615246	1					
ANR	5615256	ArgumentList			5615246	1					
ANR	5615257	CompoundStatement		2:47:48:48	5615246	1					
ANR	5615258	ReturnStatement	return false ;	1349:2:34625:34637	5615246	0	True				
ANR	5615259	Identifier	false		5615246	0					
ANR	5615260	ExpressionStatement	"vmconfig = """""	1352:1:34644:34657	5615246	1	True				
ANR	5615261	AssignmentExpression	"vmconfig = """""		5615246	0		=			
ANR	5615262	Identifier	vmconfig		5615246	0					
ANR	5615263	PrimaryExpression	""""""		5615246	1					
ANR	5615264	ExpressionStatement	"suspendfile = """""	1353:1:34660:34676	5615246	2	True				
ANR	5615265	AssignmentExpression	"suspendfile = """""		5615246	0		=			
ANR	5615266	Identifier	suspendfile		5615246	0					
ANR	5615267	PrimaryExpression	""""""		5615246	1					
ANR	5615268	IdentifierDeclStatement	MyString tmpconfig ;	1355:1:34680:34698	5615246	3	True				
ANR	5615269	IdentifierDecl	tmpconfig		5615246	0					
ANR	5615270	IdentifierDeclType	MyString		5615246	0					
ANR	5615271	Identifier	tmpconfig		5615246	1					
ANR	5615272	IdentifierDeclStatement	MyString tmpsuspendfile ;	1356:1:34701:34724	5615246	4	True				
ANR	5615273	IdentifierDecl	tmpsuspendfile		5615246	0					
ANR	5615274	IdentifierDeclType	MyString		5615246	0					
ANR	5615275	Identifier	tmpsuspendfile		5615246	1					
ANR	5615276	IfStatement	"if ( filelist_contains_file ( XEN_CONFIG_FILE_NAME , & m_transfer_intermediate_files , true ) )"		5615246	5					
ANR	5615277	Condition	"filelist_contains_file ( XEN_CONFIG_FILE_NAME , & m_transfer_intermediate_files , true )"	1358:5:34732:34818	5615246	0	True				
ANR	5615278	CallExpression	"filelist_contains_file ( XEN_CONFIG_FILE_NAME , & m_transfer_intermediate_files , true )"		5615246	0					
ANR	5615279	Callee	filelist_contains_file		5615246	0					
ANR	5615280	Identifier	filelist_contains_file		5615246	0					
ANR	5615281	ArgumentList	XEN_CONFIG_FILE_NAME		5615246	1					
ANR	5615282	Argument	XEN_CONFIG_FILE_NAME		5615246	0					
ANR	5615283	Identifier	XEN_CONFIG_FILE_NAME		5615246	0					
ANR	5615284	Argument	& m_transfer_intermediate_files		5615246	1					
ANR	5615285	UnaryOperationExpression	& m_transfer_intermediate_files		5615246	0					
ANR	5615286	UnaryOperator	&		5615246	0					
ANR	5615287	Identifier	m_transfer_intermediate_files		5615246	1					
ANR	5615288	Argument	true		5615246	2					
ANR	5615289	Identifier	true		5615246	0					
ANR	5615290	CompoundStatement		13:44:249:249	5615246	1					
ANR	5615291	ExpressionStatement	"tmpconfig . sprintf ( ""%s%c%s"" , m_workingpath . Value ( ) , DIR_DELIM_CHAR , XEN_CONFIG_FILE_NAME )"	1361:2:34880:34971	5615246	0	True				
ANR	5615292	CallExpression	"tmpconfig . sprintf ( ""%s%c%s"" , m_workingpath . Value ( ) , DIR_DELIM_CHAR , XEN_CONFIG_FILE_NAME )"		5615246	0					
ANR	5615293	Callee	tmpconfig . sprintf		5615246	0					
ANR	5615294	MemberAccess	tmpconfig . sprintf		5615246	0					
ANR	5615295	Identifier	tmpconfig		5615246	0					
ANR	5615296	Identifier	sprintf		5615246	1					
ANR	5615297	ArgumentList	"""%s%c%s"""		5615246	1					
ANR	5615298	Argument	"""%s%c%s"""		5615246	0					
ANR	5615299	PrimaryExpression	"""%s%c%s"""		5615246	0					
ANR	5615300	Argument	m_workingpath . Value ( )		5615246	1					
ANR	5615301	CallExpression	m_workingpath . Value ( )		5615246	0					
ANR	5615302	Callee	m_workingpath . Value		5615246	0					
ANR	5615303	MemberAccess	m_workingpath . Value		5615246	0					
ANR	5615304	Identifier	m_workingpath		5615246	0					
ANR	5615305	Identifier	Value		5615246	1					
ANR	5615306	ArgumentList			5615246	1					
ANR	5615307	Argument	DIR_DELIM_CHAR		5615246	2					
ANR	5615308	Identifier	DIR_DELIM_CHAR		5615246	0					
ANR	5615309	Argument	XEN_CONFIG_FILE_NAME		5615246	3					
ANR	5615310	Identifier	XEN_CONFIG_FILE_NAME		5615246	0					
ANR	5615311	IdentifierDeclStatement	MyString tmp_name ;	1365:1:34978:34995	5615246	6	True				
ANR	5615312	IdentifierDecl	tmp_name		5615246	0					
ANR	5615313	IdentifierDeclType	MyString		5615246	0					
ANR	5615314	Identifier	tmp_name		5615246	1					
ANR	5615315	ExpressionStatement	makeNameofSuspendfile ( tmp_name )	1366:1:34998:35029	5615246	7	True				
ANR	5615316	CallExpression	makeNameofSuspendfile ( tmp_name )		5615246	0					
ANR	5615317	Callee	makeNameofSuspendfile		5615246	0					
ANR	5615318	Identifier	makeNameofSuspendfile		5615246	0					
ANR	5615319	ArgumentList	tmp_name		5615246	1					
ANR	5615320	Argument	tmp_name		5615246	0					
ANR	5615321	Identifier	tmp_name		5615246	0					
ANR	5615322	IfStatement	"if ( filelist_contains_file ( tmp_name . Value ( ) , & m_transfer_intermediate_files , true ) )"		5615246	8					
ANR	5615323	Condition	"filelist_contains_file ( tmp_name . Value ( ) , & m_transfer_intermediate_files , true )"	1368:5:35037:35118	5615246	0	True				
ANR	5615324	CallExpression	"filelist_contains_file ( tmp_name . Value ( ) , & m_transfer_intermediate_files , true )"		5615246	0					
ANR	5615325	Callee	filelist_contains_file		5615246	0					
ANR	5615326	Identifier	filelist_contains_file		5615246	0					
ANR	5615327	ArgumentList	tmp_name . Value ( )		5615246	1					
ANR	5615328	Argument	tmp_name . Value ( )		5615246	0					
ANR	5615329	CallExpression	tmp_name . Value ( )		5615246	0					
ANR	5615330	Callee	tmp_name . Value		5615246	0					
ANR	5615331	MemberAccess	tmp_name . Value		5615246	0					
ANR	5615332	Identifier	tmp_name		5615246	0					
ANR	5615333	Identifier	Value		5615246	1					
ANR	5615334	ArgumentList			5615246	1					
ANR	5615335	Argument	& m_transfer_intermediate_files		5615246	1					
ANR	5615336	UnaryOperationExpression	& m_transfer_intermediate_files		5615246	0					
ANR	5615337	UnaryOperator	&		5615246	0					
ANR	5615338	Identifier	m_transfer_intermediate_files		5615246	1					
ANR	5615339	Argument	true		5615246	2					
ANR	5615340	Identifier	true		5615246	0					
ANR	5615341	CompoundStatement		23:44:549:549	5615246	1					
ANR	5615342	ExpressionStatement	tmpsuspendfile = tmp_name	1371:2:35186:35211	5615246	0	True				
ANR	5615343	AssignmentExpression	tmpsuspendfile = tmp_name		5615246	0		=			
ANR	5615344	Identifier	tmpsuspendfile		5615246	0					
ANR	5615345	Identifier	tmp_name		5615246	1					
ANR	5615346	IfStatement	"if ( check_vm_read_access_file ( tmpsuspendfile . Value ( ) , true ) == false )"		5615246	1					
ANR	5615347	Condition	"check_vm_read_access_file ( tmpsuspendfile . Value ( ) , true ) == false"	1372:6:35219:35282	5615246	0	True				
ANR	5615348	EqualityExpression	"check_vm_read_access_file ( tmpsuspendfile . Value ( ) , true ) == false"		5615246	0		==			
ANR	5615349	CallExpression	"check_vm_read_access_file ( tmpsuspendfile . Value ( ) , true )"		5615246	0					
ANR	5615350	Callee	check_vm_read_access_file		5615246	0					
ANR	5615351	Identifier	check_vm_read_access_file		5615246	0					
ANR	5615352	ArgumentList	tmpsuspendfile . Value ( )		5615246	1					
ANR	5615353	Argument	tmpsuspendfile . Value ( )		5615246	0					
ANR	5615354	CallExpression	tmpsuspendfile . Value ( )		5615246	0					
ANR	5615355	Callee	tmpsuspendfile . Value		5615246	0					
ANR	5615356	MemberAccess	tmpsuspendfile . Value		5615246	0					
ANR	5615357	Identifier	tmpsuspendfile		5615246	0					
ANR	5615358	Identifier	Value		5615246	1					
ANR	5615359	ArgumentList			5615246	1					
ANR	5615360	Argument	true		5615246	1					
ANR	5615361	Identifier	true		5615246	0					
ANR	5615362	Identifier	false		5615246	1					
ANR	5615363	CompoundStatement		26:72:712:712	5615246	1					
ANR	5615364	ReturnStatement	return false ;	1373:3:35290:35302	5615246	0	True				
ANR	5615365	Identifier	false		5615246	0					
ANR	5615366	IfStatement	if ( ( tmpconfig . Length ( ) > 0 ) && ( tmpsuspendfile . Length ( ) > 0 ) )		5615246	9					
ANR	5615367	Condition	( tmpconfig . Length ( ) > 0 ) && ( tmpsuspendfile . Length ( ) > 0 )	1377:5:35317:35377	5615246	0	True				
ANR	5615368	AndExpression	( tmpconfig . Length ( ) > 0 ) && ( tmpsuspendfile . Length ( ) > 0 )		5615246	0		&&			
ANR	5615369	RelationalExpression	tmpconfig . Length ( ) > 0		5615246	0		>			
ANR	5615370	CallExpression	tmpconfig . Length ( )		5615246	0					
ANR	5615371	Callee	tmpconfig . Length		5615246	0					
ANR	5615372	MemberAccess	tmpconfig . Length		5615246	0					
ANR	5615373	Identifier	tmpconfig		5615246	0					
ANR	5615374	Identifier	Length		5615246	1					
ANR	5615375	ArgumentList			5615246	1					
ANR	5615376	PrimaryExpression	0		5615246	1					
ANR	5615377	RelationalExpression	tmpsuspendfile . Length ( ) > 0		5615246	1		>			
ANR	5615378	CallExpression	tmpsuspendfile . Length ( )		5615246	0					
ANR	5615379	Callee	tmpsuspendfile . Length		5615246	0					
ANR	5615380	MemberAccess	tmpsuspendfile . Length		5615246	0					
ANR	5615381	Identifier	tmpsuspendfile		5615246	0					
ANR	5615382	Identifier	Length		5615246	1					
ANR	5615383	ArgumentList			5615246	1					
ANR	5615384	PrimaryExpression	0		5615246	1					
ANR	5615385	CompoundStatement		32:35:807:807	5615246	1					
ANR	5615386	IfStatement	if ( checkCkptSuspendFile ( tmpsuspendfile . Value ( ) ) )		5615246	0					
ANR	5615387	Condition	checkCkptSuspendFile ( tmpsuspendfile . Value ( ) )	1384:6:35644:35687	5615246	0	True				
ANR	5615388	CallExpression	checkCkptSuspendFile ( tmpsuspendfile . Value ( ) )		5615246	0					
ANR	5615389	Callee	checkCkptSuspendFile		5615246	0					
ANR	5615390	Identifier	checkCkptSuspendFile		5615246	0					
ANR	5615391	ArgumentList	tmpsuspendfile . Value ( )		5615246	1					
ANR	5615392	Argument	tmpsuspendfile . Value ( )		5615246	0					
ANR	5615393	CallExpression	tmpsuspendfile . Value ( )		5615246	0					
ANR	5615394	Callee	tmpsuspendfile . Value		5615246	0					
ANR	5615395	MemberAccess	tmpsuspendfile . Value		5615246	0					
ANR	5615396	Identifier	tmpsuspendfile		5615246	0					
ANR	5615397	Identifier	Value		5615246	1					
ANR	5615398	ArgumentList			5615246	1					
ANR	5615399	CompoundStatement		38:53:1118:1118	5615246	1					
ANR	5615400	ExpressionStatement	vmconfig = tmpconfig	1385:3:35696:35716	5615246	0	True				
ANR	5615401	AssignmentExpression	vmconfig = tmpconfig		5615246	0		=			
ANR	5615402	Identifier	vmconfig		5615246	0					
ANR	5615403	Identifier	tmpconfig		5615246	1					
ANR	5615404	ExpressionStatement	suspendfile = tmpsuspendfile	1386:3:35721:35749	5615246	1	True				
ANR	5615405	AssignmentExpression	suspendfile = tmpsuspendfile		5615246	0		=			
ANR	5615406	Identifier	suspendfile		5615246	0					
ANR	5615407	Identifier	tmpsuspendfile		5615246	1					
ANR	5615408	ReturnStatement	return true ;	1387:3:35754:35765	5615246	2	True				
ANR	5615409	Identifier	true		5615246	0					
ANR	5615410	ReturnStatement	return false ;	1390:1:35775:35787	5615246	10	True				
ANR	5615411	Identifier	false		5615246	0					
ANR	5615412	ReturnType	bool		5615246	1					
ANR	5615413	Identifier	VirshType :: findCkptConfigAndSuspendFile		5615246	2					
ANR	5615414	ParameterList	"MyString & vmconfig , MyString & suspendfile"		5615246	3					
ANR	5615415	Parameter	MyString & vmconfig	1346:40:34529:34546	5615246	0	True				
ANR	5615416	ParameterType	MyString &		5615246	0					
ANR	5615417	Identifier	vmconfig		5615246	1					
ANR	5615418	Parameter	MyString & suspendfile	1346:60:34549:34569	5615246	1	True				
ANR	5615419	ParameterType	MyString &		5615246	0					
ANR	5615420	Identifier	suspendfile		5615246	1					
ANR	5615421	CFGEntryNode	ENTRY		5615246		True				
ANR	5615422	CFGExitNode	EXIT		5615246		True				
ANR	5615423	Symbol	m_transfer_intermediate_files		5615246						
ANR	5615424	Symbol	XEN_CONFIG_FILE_NAME		5615246						
ANR	5615425	Symbol	tmpconfig		5615246						
ANR	5615426	Symbol	tmpsuspendfile . Value		5615246						
ANR	5615427	Symbol	m_workingpath . Value		5615246						
ANR	5615428	Symbol	tmp_name . Value		5615246						
ANR	5615429	Symbol	DIR_DELIM_CHAR		5615246						
ANR	5615430	Symbol	vmconfig		5615246						
ANR	5615431	Symbol	false		5615246						
ANR	5615432	Symbol	tmpsuspendfile		5615246						
ANR	5615433	Symbol	tmpsuspendfile . Length		5615246						
ANR	5615434	Symbol	& m_transfer_intermediate_files		5615246						
ANR	5615435	Symbol	filelist_contains_file		5615246						
ANR	5615436	Symbol	tmp_name		5615246						
ANR	5615437	Symbol	tmpconfig . Length		5615246						
ANR	5615438	Symbol	suspendfile		5615246						
ANR	5615439	Symbol	m_workingpath		5615246						
ANR	5615440	Symbol	m_transfer_intermediate_files . isEmpty		5615246						
ANR	5615441	Symbol	true		5615246						
ANR	5615442	Symbol	check_vm_read_access_file		5615246						
ANR	5615443	Symbol	checkCkptSuspendFile		5615246						
ANR	5615444	Function	VirshType :: killVM	1393:0:35792:36067							
ANR	5615445	FunctionDef	VirshType :: killVM ()		5615444	0					
ANR	5615446	CompoundStatement		1395:0:35817:36067	5615444	0					
ANR	5615447	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::killVM\\n"" )"	1396:1:35820:35871	5615444	0	True				
ANR	5615448	CallExpression	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::killVM\\n"" )"		5615444	0					
ANR	5615449	Callee	vmprintf		5615444	0					
ANR	5615450	Identifier	vmprintf		5615444	0					
ANR	5615451	ArgumentList	D_FULLDEBUG		5615444	1					
ANR	5615452	Argument	D_FULLDEBUG		5615444	0					
ANR	5615453	Identifier	D_FULLDEBUG		5615444	0					
ANR	5615454	Argument	"""Inside VirshType::killVM\\n"""		5615444	1					
ANR	5615455	PrimaryExpression	"""Inside VirshType::killVM\\n"""		5615444	0					
ANR	5615456	IfStatement	if ( ( m_vm_name . Length ( ) == 0 ) )		5615444	1					
ANR	5615457	Condition	m_vm_name . Length ( ) == 0	1398:5:35879:35905	5615444	0	True				
ANR	5615458	EqualityExpression	m_vm_name . Length ( ) == 0		5615444	0		==			
ANR	5615459	CallExpression	m_vm_name . Length ( )		5615444	0					
ANR	5615460	Callee	m_vm_name . Length		5615444	0					
ANR	5615461	MemberAccess	m_vm_name . Length		5615444	0					
ANR	5615462	Identifier	m_vm_name		5615444	0					
ANR	5615463	Identifier	Length		5615444	1					
ANR	5615464	ArgumentList			5615444	1					
ANR	5615465	PrimaryExpression	0		5615444	1					
ANR	5615466	CompoundStatement		4:35:91:91	5615444	1					
ANR	5615467	ReturnStatement	return false ;	1399:2:35913:35925	5615444	0	True				
ANR	5615468	Identifier	false		5615444	0					
ANR	5615469	ExpressionStatement	ResumeFromSoftSuspend ( )	1403:1:35980:36003	5615444	2	True				
ANR	5615470	CallExpression	ResumeFromSoftSuspend ( )		5615444	0					
ANR	5615471	Callee	ResumeFromSoftSuspend		5615444	0					
ANR	5615472	Identifier	ResumeFromSoftSuspend		5615444	0					
ANR	5615473	ArgumentList			5615444	1					
ANR	5615474	ReturnStatement	"return killVMFast ( m_vm_name . Value ( ) , m_libvirt_connection ) ;"	1405:1:36007:36065	5615444	3	True				
ANR	5615475	CallExpression	"killVMFast ( m_vm_name . Value ( ) , m_libvirt_connection )"		5615444	0					
ANR	5615476	Callee	killVMFast		5615444	0					
ANR	5615477	Identifier	killVMFast		5615444	0					
ANR	5615478	ArgumentList	m_vm_name . Value ( )		5615444	1					
ANR	5615479	Argument	m_vm_name . Value ( )		5615444	0					
ANR	5615480	CallExpression	m_vm_name . Value ( )		5615444	0					
ANR	5615481	Callee	m_vm_name . Value		5615444	0					
ANR	5615482	MemberAccess	m_vm_name . Value		5615444	0					
ANR	5615483	Identifier	m_vm_name		5615444	0					
ANR	5615484	Identifier	Value		5615444	1					
ANR	5615485	ArgumentList			5615444	1					
ANR	5615486	Argument	m_libvirt_connection		5615444	1					
ANR	5615487	Identifier	m_libvirt_connection		5615444	0					
ANR	5615488	ReturnType	bool		5615444	1					
ANR	5615489	Identifier	VirshType :: killVM		5615444	2					
ANR	5615490	ParameterList			5615444	3					
ANR	5615491	CFGEntryNode	ENTRY		5615444		True				
ANR	5615492	CFGExitNode	EXIT		5615444		True				
ANR	5615493	Symbol	m_vm_name . Value		5615444						
ANR	5615494	Symbol	m_vm_name		5615444						
ANR	5615495	Symbol	killVMFast		5615444						
ANR	5615496	Symbol	m_libvirt_connection		5615444						
ANR	5615497	Symbol	m_vm_name . Length		5615444						
ANR	5615498	Symbol	false		5615444						
ANR	5615499	Symbol	D_FULLDEBUG		5615444						
ANR	5615500	Function	VirshType :: killVMFast	1408:0:36070:36815							
ANR	5615501	FunctionDef	"VirshType :: killVMFast (const char * vmname , virConnectPtr libvirt_con)"		5615500	0					
ANR	5615502	CompoundStatement		1410:0:36144:36815	5615500	0					
ANR	5615503	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::killVMFast\\n"" )"	1411:1:36147:36202	5615500	0	True				
ANR	5615504	CallExpression	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::killVMFast\\n"" )"		5615500	0					
ANR	5615505	Callee	vmprintf		5615500	0					
ANR	5615506	Identifier	vmprintf		5615500	0					
ANR	5615507	ArgumentList	D_FULLDEBUG		5615500	1					
ANR	5615508	Argument	D_FULLDEBUG		5615500	0					
ANR	5615509	Identifier	D_FULLDEBUG		5615500	0					
ANR	5615510	Argument	"""Inside VirshType::killVMFast\\n"""		5615500	1					
ANR	5615511	PrimaryExpression	"""Inside VirshType::killVMFast\\n"""		5615500	0					
ANR	5615512	IfStatement	if ( ! vmname || ( vmname [ 0 ] == '\\0' ) )		5615500	1					
ANR	5615513	Condition	! vmname || ( vmname [ 0 ] == '\\0' )	1413:5:36210:36239	5615500	0	True				
ANR	5615514	OrExpression	! vmname || ( vmname [ 0 ] == '\\0' )		5615500	0		||			
ANR	5615515	UnaryOperationExpression	! vmname		5615500	0					
ANR	5615516	UnaryOperator	!		5615500	0					
ANR	5615517	Identifier	vmname		5615500	1					
ANR	5615518	EqualityExpression	vmname [ 0 ] == '\\0'		5615500	1		==			
ANR	5615519	ArrayIndexing	vmname [ 0 ]		5615500	0					
ANR	5615520	Identifier	vmname		5615500	0					
ANR	5615521	PrimaryExpression	0		5615500	1					
ANR	5615522	PrimaryExpression	'\\0'		5615500	1					
ANR	5615523	CompoundStatement		4:38:98:98	5615500	1					
ANR	5615524	ReturnStatement	return false ;	1414:2:36247:36259	5615500	0	True				
ANR	5615525	Identifier	false		5615500	0					
ANR	5615526	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	1417:1:36266:36299	5615500	2	True				
ANR	5615527	IdentifierDecl	priv = set_root_priv ( )		5615500	0					
ANR	5615528	IdentifierDeclType	priv_state		5615500	0					
ANR	5615529	Identifier	priv		5615500	1					
ANR	5615530	AssignmentExpression	priv = set_root_priv ( )		5615500	2		=			
ANR	5615531	Identifier	priv		5615500	0					
ANR	5615532	CallExpression	set_root_priv ( )		5615500	1					
ANR	5615533	Callee	set_root_priv		5615500	0					
ANR	5615534	Identifier	set_root_priv		5615500	0					
ANR	5615535	ArgumentList			5615500	1					
ANR	5615536	IdentifierDeclStatement	"virDomainPtr dom = virDomainLookupByName ( libvirt_con , vmname ) ;"	1418:1:36302:36363	5615500	3	True				
ANR	5615537	IdentifierDecl	"dom = virDomainLookupByName ( libvirt_con , vmname )"		5615500	0					
ANR	5615538	IdentifierDeclType	virDomainPtr		5615500	0					
ANR	5615539	Identifier	dom		5615500	1					
ANR	5615540	AssignmentExpression	"dom = virDomainLookupByName ( libvirt_con , vmname )"		5615500	2		=			
ANR	5615541	Identifier	dom		5615500	0					
ANR	5615542	CallExpression	"virDomainLookupByName ( libvirt_con , vmname )"		5615500	1					
ANR	5615543	Callee	virDomainLookupByName		5615500	0					
ANR	5615544	Identifier	virDomainLookupByName		5615500	0					
ANR	5615545	ArgumentList	libvirt_con		5615500	1					
ANR	5615546	Argument	libvirt_con		5615500	0					
ANR	5615547	Identifier	libvirt_con		5615500	0					
ANR	5615548	Argument	vmname		5615500	1					
ANR	5615549	Identifier	vmname		5615500	0					
ANR	5615550	ExpressionStatement	set_priv ( priv )	1419:1:36366:36380	5615500	4	True				
ANR	5615551	CallExpression	set_priv ( priv )		5615500	0					
ANR	5615552	Callee	set_priv		5615500	0					
ANR	5615553	Identifier	set_priv		5615500	0					
ANR	5615554	ArgumentList	priv		5615500	1					
ANR	5615555	Argument	priv		5615500	0					
ANR	5615556	Identifier	priv		5615500	0					
ANR	5615557	IfStatement	if ( dom == NULL )		5615500	5					
ANR	5615558	Condition	dom == NULL	1420:4:36386:36396	5615500	0	True				
ANR	5615559	EqualityExpression	dom == NULL		5615500	0		==			
ANR	5615560	Identifier	dom		5615500	0					
ANR	5615561	Identifier	NULL		5615500	1					
ANR	5615562	CompoundStatement		13:5:264:314	5615500	1					
ANR	5615563	IdentifierDeclStatement	virErrorPtr err = virConnGetLastError ( libvirt_con ) ;	1422:5:36409:36459	5615500	0	True				
ANR	5615564	IdentifierDecl	err = virConnGetLastError ( libvirt_con )		5615500	0					
ANR	5615565	IdentifierDeclType	virErrorPtr		5615500	0					
ANR	5615566	Identifier	err		5615500	1					
ANR	5615567	AssignmentExpression	err = virConnGetLastError ( libvirt_con )		5615500	2		=			
ANR	5615568	Identifier	err		5615500	0					
ANR	5615569	CallExpression	virConnGetLastError ( libvirt_con )		5615500	1					
ANR	5615570	Callee	virConnGetLastError		5615500	0					
ANR	5615571	Identifier	virConnGetLastError		5615500	0					
ANR	5615572	ArgumentList	libvirt_con		5615500	1					
ANR	5615573	Argument	libvirt_con		5615500	0					
ANR	5615574	Identifier	libvirt_con		5615500	0					
ANR	5615575	IfStatement	if ( err && err -> code != VIR_ERR_NO_DOMAIN )		5615500	1					
ANR	5615576	Condition	err && err -> code != VIR_ERR_NO_DOMAIN	1423:9:36470:36506	5615500	0	True				
ANR	5615577	AndExpression	err && err -> code != VIR_ERR_NO_DOMAIN		5615500	0		&&			
ANR	5615578	Identifier	err		5615500	0					
ANR	5615579	EqualityExpression	err -> code != VIR_ERR_NO_DOMAIN		5615500	1		!=			
ANR	5615580	PtrMemberAccess	err -> code		5615500	0					
ANR	5615581	Identifier	err		5615500	0					
ANR	5615582	Identifier	code		5615500	1					
ANR	5615583	Identifier	VIR_ERR_NO_DOMAIN		5615500	1					
ANR	5615584	CompoundStatement		15:7:371:371	5615500	1					
ANR	5615585	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Error finding domain %s: %s\\n"" , vmname , ( err ? err -> message : ""No reason found"" ) )"	1425:2:36520:36621	5615500	0	True				
ANR	5615586	CallExpression	"vmprintf ( D_ALWAYS , ""Error finding domain %s: %s\\n"" , vmname , ( err ? err -> message : ""No reason found"" ) )"		5615500	0					
ANR	5615587	Callee	vmprintf		5615500	0					
ANR	5615588	Identifier	vmprintf		5615500	0					
ANR	5615589	ArgumentList	D_ALWAYS		5615500	1					
ANR	5615590	Argument	D_ALWAYS		5615500	0					
ANR	5615591	Identifier	D_ALWAYS		5615500	0					
ANR	5615592	Argument	"""Error finding domain %s: %s\\n"""		5615500	1					
ANR	5615593	PrimaryExpression	"""Error finding domain %s: %s\\n"""		5615500	0					
ANR	5615594	Argument	vmname		5615500	2					
ANR	5615595	Identifier	vmname		5615500	0					
ANR	5615596	Argument	"err ? err -> message : ""No reason found"""		5615500	3					
ANR	5615597	ConditionalExpression	"err ? err -> message : ""No reason found"""		5615500	0					
ANR	5615598	Condition	err		5615500	0					
ANR	5615599	Identifier	err		5615500	0					
ANR	5615600	PtrMemberAccess	err -> message		5615500	1					
ANR	5615601	Identifier	err		5615500	0					
ANR	5615602	Identifier	message		5615500	1					
ANR	5615603	PrimaryExpression	"""No reason found"""		5615500	2					
ANR	5615604	ReturnStatement	return false ;	1426:2:36625:36637	5615500	1	True				
ANR	5615605	Identifier	false		5615500	0					
ANR	5615606	ElseStatement	else		5615500	0					
ANR	5615607	CompoundStatement		20:7:520:520	5615500	0					
ANR	5615608	ReturnStatement	return true ;	1430:2:36669:36680	5615500	0	True				
ANR	5615609	Identifier	true		5615500	0					
ANR	5615610	ExpressionStatement	priv = set_root_priv ( )	1434:1:36698:36720	5615500	6	True				
ANR	5615611	AssignmentExpression	priv = set_root_priv ( )		5615500	0		=			
ANR	5615612	Identifier	priv		5615500	0					
ANR	5615613	CallExpression	set_root_priv ( )		5615500	1					
ANR	5615614	Callee	set_root_priv		5615500	0					
ANR	5615615	Identifier	set_root_priv		5615500	0					
ANR	5615616	ArgumentList			5615500	1					
ANR	5615617	IdentifierDeclStatement	bool ret = ( virDomainDestroy ( dom ) == 0 ) ;	1435:1:36723:36762	5615500	7	True				
ANR	5615618	IdentifierDecl	ret = ( virDomainDestroy ( dom ) == 0 )		5615500	0					
ANR	5615619	IdentifierDeclType	bool		5615500	0					
ANR	5615620	Identifier	ret		5615500	1					
ANR	5615621	AssignmentExpression	ret = ( virDomainDestroy ( dom ) == 0 )		5615500	2		=			
ANR	5615622	Identifier	ret		5615500	0					
ANR	5615623	EqualityExpression	virDomainDestroy ( dom ) == 0		5615500	1		==			
ANR	5615624	CallExpression	virDomainDestroy ( dom )		5615500	0					
ANR	5615625	Callee	virDomainDestroy		5615500	0					
ANR	5615626	Identifier	virDomainDestroy		5615500	0					
ANR	5615627	ArgumentList	dom		5615500	1					
ANR	5615628	Argument	dom		5615500	0					
ANR	5615629	Identifier	dom		5615500	0					
ANR	5615630	PrimaryExpression	0		5615500	1					
ANR	5615631	ExpressionStatement	virDomainFree ( dom )	1436:1:36765:36783	5615500	8	True				
ANR	5615632	CallExpression	virDomainFree ( dom )		5615500	0					
ANR	5615633	Callee	virDomainFree		5615500	0					
ANR	5615634	Identifier	virDomainFree		5615500	0					
ANR	5615635	ArgumentList	dom		5615500	1					
ANR	5615636	Argument	dom		5615500	0					
ANR	5615637	Identifier	dom		5615500	0					
ANR	5615638	ExpressionStatement	set_priv ( priv )	1437:1:36786:36800	5615500	9	True				
ANR	5615639	CallExpression	set_priv ( priv )		5615500	0					
ANR	5615640	Callee	set_priv		5615500	0					
ANR	5615641	Identifier	set_priv		5615500	0					
ANR	5615642	ArgumentList	priv		5615500	1					
ANR	5615643	Argument	priv		5615500	0					
ANR	5615644	Identifier	priv		5615500	0					
ANR	5615645	ReturnStatement	return ret ;	1438:1:36803:36813	5615500	10	True				
ANR	5615646	Identifier	ret		5615500	0					
ANR	5615647	ReturnType	bool		5615500	1					
ANR	5615648	Identifier	VirshType :: killVMFast		5615500	2					
ANR	5615649	ParameterList	"const char * vmname , virConnectPtr libvirt_con"		5615500	3					
ANR	5615650	Parameter	const char * vmname	1409:22:36097:36114	5615500	0	True				
ANR	5615651	ParameterType	const char *		5615500	0					
ANR	5615652	Identifier	vmname		5615500	1					
ANR	5615653	Parameter	virConnectPtr libvirt_con	1409:42:36117:36141	5615500	1	True				
ANR	5615654	ParameterType	virConnectPtr		5615500	0					
ANR	5615655	Identifier	libvirt_con		5615500	1					
ANR	5615656	CFGEntryNode	ENTRY		5615500		True				
ANR	5615657	CFGExitNode	EXIT		5615500		True				
ANR	5615658	Symbol	ret		5615500						
ANR	5615659	Symbol	libvirt_con		5615500						
ANR	5615660	Symbol	dom		5615500						
ANR	5615661	Symbol	NULL		5615500						
ANR	5615662	Symbol	err		5615500						
ANR	5615663	Symbol	err -> message		5615500						
ANR	5615664	Symbol	err -> code		5615500						
ANR	5615665	Symbol	false		5615500						
ANR	5615666	Symbol	D_ALWAYS		5615500						
ANR	5615667	Symbol	virDomainLookupByName		5615500						
ANR	5615668	Symbol	D_FULLDEBUG		5615500						
ANR	5615669	Symbol	set_root_priv		5615500						
ANR	5615670	Symbol	vmname		5615500						
ANR	5615671	Symbol	VIR_ERR_NO_DOMAIN		5615500						
ANR	5615672	Symbol	* vmname		5615500						
ANR	5615673	Symbol	virConnGetLastError		5615500						
ANR	5615674	Symbol	* err		5615500						
ANR	5615675	Symbol	virDomainDestroy		5615500						
ANR	5615676	Symbol	true		5615500						
ANR	5615677	Symbol	priv		5615500						
ANR	5615678	Function	XenType :: XenType	1441:0:36818:36991							
ANR	5615679	FunctionDef	"XenType :: XenType (const char * workingpath , ClassAd * ad)"		5615678	0					
ANR	5615680	CompoundStatement		1443:0:36906:36991	5615678	0					
ANR	5615681	ExpressionStatement	"m_sessionID = ""xen:///"""	1445:2:36911:36932	5615678	0	True				
ANR	5615682	AssignmentExpression	"m_sessionID = ""xen:///"""		5615678	0		=			
ANR	5615683	Identifier	m_sessionID		5615678	0					
ANR	5615684	PrimaryExpression	"""xen:///"""		5615678	1					
ANR	5615685	ExpressionStatement	this -> Connect ( )	1446:2:36936:36951	5615678	1	True				
ANR	5615686	CallExpression	this -> Connect ( )		5615678	0					
ANR	5615687	Callee	this -> Connect		5615678	0					
ANR	5615688	PtrMemberAccess	this -> Connect		5615678	0					
ANR	5615689	Identifier	this		5615678	0					
ANR	5615690	Identifier	Connect		5615678	1					
ANR	5615691	ArgumentList			5615678	1					
ANR	5615692	ExpressionStatement	m_vmtype = CONDOR_VM_UNIVERSE_XEN	1447:2:36955:36988	5615678	2	True				
ANR	5615693	AssignmentExpression	m_vmtype = CONDOR_VM_UNIVERSE_XEN		5615678	0		=			
ANR	5615694	Identifier	m_vmtype		5615678	0					
ANR	5615695	Identifier	CONDOR_VM_UNIVERSE_XEN		5615678	1					
ANR	5615696	Identifier	XenType :: XenType		5615678	1					
ANR	5615697	ParameterList	"const char * workingpath , ClassAd * ad"		5615678	2					
ANR	5615698	Parameter	const char * workingpath	1441:17:36835:36858	5615678	0	True				
ANR	5615699	ParameterType	const char *		5615678	0					
ANR	5615700	Identifier	workingpath		5615678	1					
ANR	5615701	Parameter	ClassAd * ad	1441:43:36861:36872	5615678	1	True				
ANR	5615702	ParameterType	ClassAd *		5615678	0					
ANR	5615703	Identifier	ad		5615678	1					
ANR	5615704	CFGEntryNode	ENTRY		5615678		True				
ANR	5615705	CFGExitNode	EXIT		5615678		True				
ANR	5615706	Symbol	m_vmtype		5615678						
ANR	5615707	Symbol	ad		5615678						
ANR	5615708	Symbol	m_sessionID		5615678						
ANR	5615709	Symbol	workingpath		5615678						
ANR	5615710	Symbol	CONDOR_VM_UNIVERSE_XEN		5615678						
ANR	5615711	Symbol	this		5615678						
ANR	5615712	Function	XenType :: CreateConfigFile	1451:0:36994:43002							
ANR	5615713	FunctionDef	XenType :: CreateConfigFile ()		5615712	0					
ANR	5615714	CompoundStatement		1452:0:37027:43002	5615712	0					
ANR	5615715	IdentifierDeclStatement	char * config_value = NULL ;	1453:1:37030:37055	5615712	0	True				
ANR	5615716	IdentifierDecl	* config_value = NULL		5615712	0					
ANR	5615717	IdentifierDeclType	char *		5615712	0					
ANR	5615718	Identifier	config_value		5615712	1					
ANR	5615719	AssignmentExpression	* config_value = NULL		5615712	2		=			
ANR	5615720	Identifier	NULL		5615712	0					
ANR	5615721	Identifier	NULL		5615712	1					
ANR	5615722	IdentifierDeclStatement	priv_state priv ;	1454:1:37058:37073	5615712	1	True				
ANR	5615723	IdentifierDecl	priv		5615712	0					
ANR	5615724	IdentifierDeclType	priv_state		5615712	0					
ANR	5615725	Identifier	priv		5615712	1					
ANR	5615726	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""In XenType::CreateConfigFile()\\n"" )"	1456:1:37077:37134	5615712	2	True				
ANR	5615727	CallExpression	"vmprintf ( D_FULLDEBUG , ""In XenType::CreateConfigFile()\\n"" )"		5615712	0					
ANR	5615728	Callee	vmprintf		5615712	0					
ANR	5615729	Identifier	vmprintf		5615712	0					
ANR	5615730	ArgumentList	D_FULLDEBUG		5615712	1					
ANR	5615731	Argument	D_FULLDEBUG		5615712	0					
ANR	5615732	Identifier	D_FULLDEBUG		5615712	0					
ANR	5615733	Argument	"""In XenType::CreateConfigFile()\\n"""		5615712	1					
ANR	5615734	PrimaryExpression	"""In XenType::CreateConfigFile()\\n"""		5615712	0					
ANR	5615735	IfStatement	if ( parseCommonParamFromClassAd ( true ) == false )		5615712	3					
ANR	5615736	Condition	parseCommonParamFromClassAd ( true ) == false	1459:5:37210:37251	5615712	0	True				
ANR	5615737	EqualityExpression	parseCommonParamFromClassAd ( true ) == false		5615712	0		==			
ANR	5615738	CallExpression	parseCommonParamFromClassAd ( true )		5615712	0					
ANR	5615739	Callee	parseCommonParamFromClassAd		5615712	0					
ANR	5615740	Identifier	parseCommonParamFromClassAd		5615712	0					
ANR	5615741	ArgumentList	true		5615712	1					
ANR	5615742	Argument	true		5615712	0					
ANR	5615743	Identifier	true		5615712	0					
ANR	5615744	Identifier	false		5615712	1					
ANR	5615745	CompoundStatement		8:50:227:227	5615712	1					
ANR	5615746	ReturnStatement	return false ;	1460:2:37259:37271	5615712	0	True				
ANR	5615747	Identifier	false		5615712	0					
ANR	5615748	IfStatement	if ( m_vm_mem < 32 )		5615712	4					
ANR	5615749	Condition	m_vm_mem < 32	1463:5:37282:37294	5615712	0	True				
ANR	5615750	RelationalExpression	m_vm_mem < 32		5615712	0		<			
ANR	5615751	Identifier	m_vm_mem		5615712	0					
ANR	5615752	PrimaryExpression	32		5615712	1					
ANR	5615753	CompoundStatement		12:21:270:270	5615712	1					
ANR	5615754	ExpressionStatement	m_vm_mem = 32	1465:2:37363:37376	5615712	0	True				
ANR	5615755	AssignmentExpression	m_vm_mem = 32		5615712	0		=			
ANR	5615756	Identifier	m_vm_mem		5615712	0					
ANR	5615757	PrimaryExpression	32		5615712	1					
ANR	5615758	IfStatement	"if ( m_classAd . LookupString ( VMPARAM_XEN_KERNEL , m_xen_kernel_submit_param ) != 1 )"		5615712	5					
ANR	5615759	Condition	"m_classAd . LookupString ( VMPARAM_XEN_KERNEL , m_xen_kernel_submit_param ) != 1"	1469:5:37426:37500	5615712	0	True				
ANR	5615760	EqualityExpression	"m_classAd . LookupString ( VMPARAM_XEN_KERNEL , m_xen_kernel_submit_param ) != 1"		5615712	0		!=			
ANR	5615761	CallExpression	"m_classAd . LookupString ( VMPARAM_XEN_KERNEL , m_xen_kernel_submit_param )"		5615712	0					
ANR	5615762	Callee	m_classAd . LookupString		5615712	0					
ANR	5615763	MemberAccess	m_classAd . LookupString		5615712	0					
ANR	5615764	Identifier	m_classAd		5615712	0					
ANR	5615765	Identifier	LookupString		5615712	1					
ANR	5615766	ArgumentList	VMPARAM_XEN_KERNEL		5615712	1					
ANR	5615767	Argument	VMPARAM_XEN_KERNEL		5615712	0					
ANR	5615768	Identifier	VMPARAM_XEN_KERNEL		5615712	0					
ANR	5615769	Argument	m_xen_kernel_submit_param		5615712	1					
ANR	5615770	Identifier	m_xen_kernel_submit_param		5615712	0					
ANR	5615771	PrimaryExpression	1		5615712	1					
ANR	5615772	CompoundStatement		18:83:476:476	5615712	1					
ANR	5615773	ExpressionStatement	"vmprintf ( D_ALWAYS , ""%s cannot be found in job classAd\\n"" , VMPARAM_XEN_KERNEL )"	1470:2:37508:37592	5615712	0	True				
ANR	5615774	CallExpression	"vmprintf ( D_ALWAYS , ""%s cannot be found in job classAd\\n"" , VMPARAM_XEN_KERNEL )"		5615712	0					
ANR	5615775	Callee	vmprintf		5615712	0					
ANR	5615776	Identifier	vmprintf		5615712	0					
ANR	5615777	ArgumentList	D_ALWAYS		5615712	1					
ANR	5615778	Argument	D_ALWAYS		5615712	0					
ANR	5615779	Identifier	D_ALWAYS		5615712	0					
ANR	5615780	Argument	"""%s cannot be found in job classAd\\n"""		5615712	1					
ANR	5615781	PrimaryExpression	"""%s cannot be found in job classAd\\n"""		5615712	0					
ANR	5615782	Argument	VMPARAM_XEN_KERNEL		5615712	2					
ANR	5615783	Identifier	VMPARAM_XEN_KERNEL		5615712	0					
ANR	5615784	ExpressionStatement	m_result_msg = VMGAHP_ERR_JOBCLASSAD_XEN_NO_KERNEL_PARAM	1472:2:37596:37652	5615712	1	True				
ANR	5615785	AssignmentExpression	m_result_msg = VMGAHP_ERR_JOBCLASSAD_XEN_NO_KERNEL_PARAM		5615712	0		=			
ANR	5615786	Identifier	m_result_msg		5615712	0					
ANR	5615787	Identifier	VMGAHP_ERR_JOBCLASSAD_XEN_NO_KERNEL_PARAM		5615712	1					
ANR	5615788	ReturnStatement	return false ;	1473:2:37656:37668	5615712	2	True				
ANR	5615789	Identifier	false		5615712	0					
ANR	5615790	ExpressionStatement	m_xen_kernel_submit_param . trim ( )	1475:1:37674:37706	5615712	6	True				
ANR	5615791	CallExpression	m_xen_kernel_submit_param . trim ( )		5615712	0					
ANR	5615792	Callee	m_xen_kernel_submit_param . trim		5615712	0					
ANR	5615793	MemberAccess	m_xen_kernel_submit_param . trim		5615712	0					
ANR	5615794	Identifier	m_xen_kernel_submit_param		5615712	0					
ANR	5615795	Identifier	trim		5615712	1					
ANR	5615796	ArgumentList			5615712	1					
ANR	5615797	IfStatement	"if ( strcasecmp ( m_xen_kernel_submit_param . Value ( ) , XEN_KERNEL_INCLUDED ) == 0 )"		5615712	7					
ANR	5615798	Condition	"strcasecmp ( m_xen_kernel_submit_param . Value ( ) , XEN_KERNEL_INCLUDED ) == 0"	1477:4:37713:37783	5615712	0	True				
ANR	5615799	EqualityExpression	"strcasecmp ( m_xen_kernel_submit_param . Value ( ) , XEN_KERNEL_INCLUDED ) == 0"		5615712	0		==			
ANR	5615800	CallExpression	"strcasecmp ( m_xen_kernel_submit_param . Value ( ) , XEN_KERNEL_INCLUDED )"		5615712	0					
ANR	5615801	Callee	strcasecmp		5615712	0					
ANR	5615802	Identifier	strcasecmp		5615712	0					
ANR	5615803	ArgumentList	m_xen_kernel_submit_param . Value ( )		5615712	1					
ANR	5615804	Argument	m_xen_kernel_submit_param . Value ( )		5615712	0					
ANR	5615805	CallExpression	m_xen_kernel_submit_param . Value ( )		5615712	0					
ANR	5615806	Callee	m_xen_kernel_submit_param . Value		5615712	0					
ANR	5615807	MemberAccess	m_xen_kernel_submit_param . Value		5615712	0					
ANR	5615808	Identifier	m_xen_kernel_submit_param		5615712	0					
ANR	5615809	Identifier	Value		5615712	1					
ANR	5615810	ArgumentList			5615712	1					
ANR	5615811	Argument	XEN_KERNEL_INCLUDED		5615712	1					
ANR	5615812	Identifier	XEN_KERNEL_INCLUDED		5615712	0					
ANR	5615813	PrimaryExpression	0		5615712	1					
ANR	5615814	CompoundStatement		27:1:760:760	5615712	1					
ANR	5615815	ExpressionStatement	"vmprintf ( D_ALWAYS , ""VMGahp will use xen bootloader\\n"" )"	1480:3:37860:37914	5615712	0	True				
ANR	5615816	CallExpression	"vmprintf ( D_ALWAYS , ""VMGahp will use xen bootloader\\n"" )"		5615712	0					
ANR	5615817	Callee	vmprintf		5615712	0					
ANR	5615818	Identifier	vmprintf		5615712	0					
ANR	5615819	ArgumentList	D_ALWAYS		5615712	1					
ANR	5615820	Argument	D_ALWAYS		5615712	0					
ANR	5615821	Identifier	D_ALWAYS		5615712	0					
ANR	5615822	Argument	"""VMGahp will use xen bootloader\\n"""		5615712	1					
ANR	5615823	PrimaryExpression	"""VMGahp will use xen bootloader\\n"""		5615712	0					
ANR	5615824	ExpressionStatement	"config_value = param ( ""XEN_BOOTLOADER"" )"	1481:3:37919:37959	5615712	1	True				
ANR	5615825	AssignmentExpression	"config_value = param ( ""XEN_BOOTLOADER"" )"		5615712	0		=			
ANR	5615826	Identifier	config_value		5615712	0					
ANR	5615827	CallExpression	"param ( ""XEN_BOOTLOADER"" )"		5615712	1					
ANR	5615828	Callee	param		5615712	0					
ANR	5615829	Identifier	param		5615712	0					
ANR	5615830	ArgumentList	"""XEN_BOOTLOADER"""		5615712	1					
ANR	5615831	Argument	"""XEN_BOOTLOADER"""		5615712	0					
ANR	5615832	PrimaryExpression	"""XEN_BOOTLOADER"""		5615712	0					
ANR	5615833	IfStatement	if ( ! config_value )		5615712	2					
ANR	5615834	Condition	! config_value	1482:7:37968:37980	5615712	0	True				
ANR	5615835	UnaryOperationExpression	! config_value		5615712	0					
ANR	5615836	UnaryOperator	!		5615712	0					
ANR	5615837	Identifier	config_value		5615712	1					
ANR	5615838	CompoundStatement		31:23:956:956	5615712	1					
ANR	5615839	Statement	vmprintf	1483:4:37990:37997	5615712	0	True				
ANR	5615840	Statement	(	1483:12:37998:37998	5615712	1	True				
ANR	5615841	Statement	D_ALWAYS	1483:13:37999:38006	5615712	2	True				
ANR	5615842	Statement	","	1483:21:38007:38007	5615712	3	True				
ANR	5615843	Statement	"""xen bootloader is not defined """	1483:23:38009:38040	5615712	4	True				
ANR	5615844	Statement	"""in vmgahp config file\\n"""	1484:6:38048:38072	5615712	5	True				
ANR	5615845	Statement	)	1484:31:38073:38073	5615712	6	True				
ANR	5615846	ExpressionStatement		1484:32:38074:38074	5615712	7	True				
ANR	5615847	ExpressionStatement	m_result_msg = VMGAHP_ERR_CRITICAL	1485:4:38080:38114	5615712	8	True				
ANR	5615848	AssignmentExpression	m_result_msg = VMGAHP_ERR_CRITICAL		5615712	0		=			
ANR	5615849	Identifier	m_result_msg		5615712	0					
ANR	5615850	Identifier	VMGAHP_ERR_CRITICAL		5615712	1					
ANR	5615851	ReturnStatement	return false ;	1486:4:38120:38132	5615712	9	True				
ANR	5615852	Identifier	false		5615712	0					
ANR	5615853	ElseStatement	else		5615712	0					
ANR	5615854	CompoundStatement		36:9:1115:1115	5615712	0					
ANR	5615855	ExpressionStatement	m_xen_bootloader = delete_quotation_marks ( config_value )	1488:4:38149:38204	5615712	0	True				
ANR	5615856	AssignmentExpression	m_xen_bootloader = delete_quotation_marks ( config_value )		5615712	0		=			
ANR	5615857	Identifier	m_xen_bootloader		5615712	0					
ANR	5615858	CallExpression	delete_quotation_marks ( config_value )		5615712	1					
ANR	5615859	Callee	delete_quotation_marks		5615712	0					
ANR	5615860	Identifier	delete_quotation_marks		5615712	0					
ANR	5615861	ArgumentList	config_value		5615712	1					
ANR	5615862	Argument	config_value		5615712	0					
ANR	5615863	Identifier	config_value		5615712	0					
ANR	5615864	ExpressionStatement	free ( config_value )	1489:4:38210:38228	5615712	1	True				
ANR	5615865	CallExpression	free ( config_value )		5615712	0					
ANR	5615866	Callee	free		5615712	0					
ANR	5615867	Identifier	free		5615712	0					
ANR	5615868	ArgumentList	config_value		5615712	1					
ANR	5615869	Argument	config_value		5615712	0					
ANR	5615870	Identifier	config_value		5615712	0					
ANR	5615871	ElseStatement	else		5615712	0					
ANR	5615872	IfStatement	"if ( strcasecmp ( m_xen_kernel_submit_param . Value ( ) , XEN_KERNEL_HW_VT ) == 0 )"		5615712	0					
ANR	5615873	Condition	"strcasecmp ( m_xen_kernel_submit_param . Value ( ) , XEN_KERNEL_HW_VT ) == 0"	1492:10:38251:38318	5615712	0	True				
ANR	5615874	EqualityExpression	"strcasecmp ( m_xen_kernel_submit_param . Value ( ) , XEN_KERNEL_HW_VT ) == 0"		5615712	0		==			
ANR	5615875	CallExpression	"strcasecmp ( m_xen_kernel_submit_param . Value ( ) , XEN_KERNEL_HW_VT )"		5615712	0					
ANR	5615876	Callee	strcasecmp		5615712	0					
ANR	5615877	Identifier	strcasecmp		5615712	0					
ANR	5615878	ArgumentList	m_xen_kernel_submit_param . Value ( )		5615712	1					
ANR	5615879	Argument	m_xen_kernel_submit_param . Value ( )		5615712	0					
ANR	5615880	CallExpression	m_xen_kernel_submit_param . Value ( )		5615712	0					
ANR	5615881	Callee	m_xen_kernel_submit_param . Value		5615712	0					
ANR	5615882	MemberAccess	m_xen_kernel_submit_param . Value		5615712	0					
ANR	5615883	Identifier	m_xen_kernel_submit_param		5615712	0					
ANR	5615884	Identifier	Value		5615712	1					
ANR	5615885	ArgumentList			5615712	1					
ANR	5615886	Argument	XEN_KERNEL_HW_VT		5615712	1					
ANR	5615887	Identifier	XEN_KERNEL_HW_VT		5615712	0					
ANR	5615888	PrimaryExpression	0		5615712	1					
ANR	5615889	CompoundStatement		41:80:1293:1293	5615712	1					
ANR	5615890	ExpressionStatement	"vmprintf ( D_ALWAYS , ""This VM requires hardware virtualization\\n"" )"	1493:2:38325:38389	5615712	0	True				
ANR	5615891	CallExpression	"vmprintf ( D_ALWAYS , ""This VM requires hardware virtualization\\n"" )"		5615712	0					
ANR	5615892	Callee	vmprintf		5615712	0					
ANR	5615893	Identifier	vmprintf		5615712	0					
ANR	5615894	ArgumentList	D_ALWAYS		5615712	1					
ANR	5615895	Argument	D_ALWAYS		5615712	0					
ANR	5615896	Identifier	D_ALWAYS		5615712	0					
ANR	5615897	Argument	"""This VM requires hardware virtualization\\n"""		5615712	1					
ANR	5615898	PrimaryExpression	"""This VM requires hardware virtualization\\n"""		5615712	0					
ANR	5615899	IfStatement	if ( ! m_vm_hardware_vt )		5615712	1					
ANR	5615900	Condition	! m_vm_hardware_vt	1494:6:38397:38413	5615712	0	True				
ANR	5615901	UnaryOperationExpression	! m_vm_hardware_vt		5615712	0					
ANR	5615902	UnaryOperator	!		5615712	0					
ANR	5615903	Identifier	m_vm_hardware_vt		5615712	1					
ANR	5615904	CompoundStatement		43:26:1389:1389	5615712	1					
ANR	5615905	ExpressionStatement	m_result_msg = VMGAHP_ERR_JOBCLASSAD_MISMATCHED_HARDWARE_VT	1495:3:38422:38481	5615712	0	True				
ANR	5615906	AssignmentExpression	m_result_msg = VMGAHP_ERR_JOBCLASSAD_MISMATCHED_HARDWARE_VT		5615712	0		=			
ANR	5615907	Identifier	m_result_msg		5615712	0					
ANR	5615908	Identifier	VMGAHP_ERR_JOBCLASSAD_MISMATCHED_HARDWARE_VT		5615712	1					
ANR	5615909	ReturnStatement	return false ;	1496:3:38486:38498	5615712	1	True				
ANR	5615910	Identifier	false		5615712	0					
ANR	5615911	ExpressionStatement	m_xen_hw_vt = true	1498:2:38506:38524	5615712	2	True				
ANR	5615912	AssignmentExpression	m_xen_hw_vt = true		5615712	0		=			
ANR	5615913	Identifier	m_xen_hw_vt		5615712	0					
ANR	5615914	Identifier	true		5615712	1					
ANR	5615915	ExpressionStatement	"m_allow_hw_vt_suspend = param_boolean ( ""XEN_ALLOW_HARDWARE_VT_SUSPEND"" , false )"	1499:2:38528:38608	5615712	3	True				
ANR	5615916	AssignmentExpression	"m_allow_hw_vt_suspend = param_boolean ( ""XEN_ALLOW_HARDWARE_VT_SUSPEND"" , false )"		5615712	0		=			
ANR	5615917	Identifier	m_allow_hw_vt_suspend		5615712	0					
ANR	5615918	CallExpression	"param_boolean ( ""XEN_ALLOW_HARDWARE_VT_SUSPEND"" , false )"		5615712	1					
ANR	5615919	Callee	param_boolean		5615712	0					
ANR	5615920	Identifier	param_boolean		5615712	0					
ANR	5615921	ArgumentList	"""XEN_ALLOW_HARDWARE_VT_SUSPEND"""		5615712	1					
ANR	5615922	Argument	"""XEN_ALLOW_HARDWARE_VT_SUSPEND"""		5615712	0					
ANR	5615923	PrimaryExpression	"""XEN_ALLOW_HARDWARE_VT_SUSPEND"""		5615712	0					
ANR	5615924	Argument	false		5615712	1					
ANR	5615925	Identifier	false		5615712	0					
ANR	5615926	ElseStatement	else		5615712	0					
ANR	5615927	CompoundStatement		59:2:1966:1987	5615712	0					
ANR	5615928	IfStatement	"if ( check_vm_read_access_file ( m_xen_kernel_submit_param . Value ( ) , false ) == false )"		5615712	0					
ANR	5615929	Condition	"check_vm_read_access_file ( m_xen_kernel_submit_param . Value ( ) , false ) == false"	1504:6:38725:38800	5615712	0	True				
ANR	5615930	EqualityExpression	"check_vm_read_access_file ( m_xen_kernel_submit_param . Value ( ) , false ) == false"		5615712	0		==			
ANR	5615931	CallExpression	"check_vm_read_access_file ( m_xen_kernel_submit_param . Value ( ) , false )"		5615712	0					
ANR	5615932	Callee	check_vm_read_access_file		5615712	0					
ANR	5615933	Identifier	check_vm_read_access_file		5615712	0					
ANR	5615934	ArgumentList	m_xen_kernel_submit_param . Value ( )		5615712	1					
ANR	5615935	Argument	m_xen_kernel_submit_param . Value ( )		5615712	0					
ANR	5615936	CallExpression	m_xen_kernel_submit_param . Value ( )		5615712	0					
ANR	5615937	Callee	m_xen_kernel_submit_param . Value		5615712	0					
ANR	5615938	MemberAccess	m_xen_kernel_submit_param . Value		5615712	0					
ANR	5615939	Identifier	m_xen_kernel_submit_param		5615712	0					
ANR	5615940	Identifier	Value		5615712	1					
ANR	5615941	ArgumentList			5615712	1					
ANR	5615942	Argument	false		5615712	1					
ANR	5615943	Identifier	false		5615712	0					
ANR	5615944	Identifier	false		5615712	1					
ANR	5615945	CompoundStatement		53:84:1775:1775	5615712	1					
ANR	5615946	ExpressionStatement	"vmprintf ( D_ALWAYS , ""xen kernel file '%s' cannot be read\\n"" , m_xen_kernel_submit_param . Value ( ) )"	1505:3:38808:38907	5615712	0	True				
ANR	5615947	CallExpression	"vmprintf ( D_ALWAYS , ""xen kernel file '%s' cannot be read\\n"" , m_xen_kernel_submit_param . Value ( ) )"		5615712	0					
ANR	5615948	Callee	vmprintf		5615712	0					
ANR	5615949	Identifier	vmprintf		5615712	0					
ANR	5615950	ArgumentList	D_ALWAYS		5615712	1					
ANR	5615951	Argument	D_ALWAYS		5615712	0					
ANR	5615952	Identifier	D_ALWAYS		5615712	0					
ANR	5615953	Argument	"""xen kernel file '%s' cannot be read\\n"""		5615712	1					
ANR	5615954	PrimaryExpression	"""xen kernel file '%s' cannot be read\\n"""		5615712	0					
ANR	5615955	Argument	m_xen_kernel_submit_param . Value ( )		5615712	2					
ANR	5615956	CallExpression	m_xen_kernel_submit_param . Value ( )		5615712	0					
ANR	5615957	Callee	m_xen_kernel_submit_param . Value		5615712	0					
ANR	5615958	MemberAccess	m_xen_kernel_submit_param . Value		5615712	0					
ANR	5615959	Identifier	m_xen_kernel_submit_param		5615712	0					
ANR	5615960	Identifier	Value		5615712	1					
ANR	5615961	ArgumentList			5615712	1					
ANR	5615962	ExpressionStatement	m_result_msg = VMGAHP_ERR_JOBCLASSAD_XEN_KERNEL_NOT_FOUND	1507:3:38912:38969	5615712	1	True				
ANR	5615963	AssignmentExpression	m_result_msg = VMGAHP_ERR_JOBCLASSAD_XEN_KERNEL_NOT_FOUND		5615712	0		=			
ANR	5615964	Identifier	m_result_msg		5615712	0					
ANR	5615965	Identifier	VMGAHP_ERR_JOBCLASSAD_XEN_KERNEL_NOT_FOUND		5615712	1					
ANR	5615966	ReturnStatement	return false ;	1508:3:38974:38986	5615712	2	True				
ANR	5615967	Identifier	false		5615712	0					
ANR	5615968	IdentifierDeclStatement	MyString tmp_fullname ;	1510:2:38994:39015	5615712	1	True				
ANR	5615969	IdentifierDecl	tmp_fullname		5615712	0					
ANR	5615970	IdentifierDeclType	MyString		5615712	0					
ANR	5615971	Identifier	tmp_fullname		5615712	1					
ANR	5615972	IfStatement	"if ( isTransferedFile ( m_xen_kernel_submit_param . Value ( ) , tmp_fullname ) )"		5615712	2					
ANR	5615973	Condition	"isTransferedFile ( m_xen_kernel_submit_param . Value ( ) , tmp_fullname )"	1511:6:39023:39092	5615712	0	True				
ANR	5615974	CallExpression	"isTransferedFile ( m_xen_kernel_submit_param . Value ( ) , tmp_fullname )"		5615712	0					
ANR	5615975	Callee	isTransferedFile		5615712	0					
ANR	5615976	Identifier	isTransferedFile		5615712	0					
ANR	5615977	ArgumentList	m_xen_kernel_submit_param . Value ( )		5615712	1					
ANR	5615978	Argument	m_xen_kernel_submit_param . Value ( )		5615712	0					
ANR	5615979	CallExpression	m_xen_kernel_submit_param . Value ( )		5615712	0					
ANR	5615980	Callee	m_xen_kernel_submit_param . Value		5615712	0					
ANR	5615981	MemberAccess	m_xen_kernel_submit_param . Value		5615712	0					
ANR	5615982	Identifier	m_xen_kernel_submit_param		5615712	0					
ANR	5615983	Identifier	Value		5615712	1					
ANR	5615984	ArgumentList			5615712	1					
ANR	5615985	Argument	tmp_fullname		5615712	1					
ANR	5615986	Identifier	tmp_fullname		5615712	0					
ANR	5615987	CompoundStatement		61:21:2068:2068	5615712	1					
ANR	5615988	ExpressionStatement	m_xen_kernel_submit_param = tmp_fullname	1515:3:39158:39198	5615712	0	True				
ANR	5615989	AssignmentExpression	m_xen_kernel_submit_param = tmp_fullname		5615712	0		=			
ANR	5615990	Identifier	m_xen_kernel_submit_param		5615712	0					
ANR	5615991	Identifier	tmp_fullname		5615712	1					
ANR	5615992	ExpressionStatement	m_xen_kernel_file = m_xen_kernel_submit_param	1518:2:39207:39252	5615712	3	True				
ANR	5615993	AssignmentExpression	m_xen_kernel_file = m_xen_kernel_submit_param		5615712	0		=			
ANR	5615994	Identifier	m_xen_kernel_file		5615712	0					
ANR	5615995	Identifier	m_xen_kernel_submit_param		5615712	1					
ANR	5615996	IfStatement	"if ( m_classAd . LookupString ( VMPARAM_XEN_INITRD , m_xen_initrd_file ) == 1 )"		5615712	4					
ANR	5615997	Condition	"m_classAd . LookupString ( VMPARAM_XEN_INITRD , m_xen_initrd_file ) == 1"	1520:6:39261:39331	5615712	0	True				
ANR	5615998	EqualityExpression	"m_classAd . LookupString ( VMPARAM_XEN_INITRD , m_xen_initrd_file ) == 1"		5615712	0		==			
ANR	5615999	CallExpression	"m_classAd . LookupString ( VMPARAM_XEN_INITRD , m_xen_initrd_file )"		5615712	0					
ANR	5616000	Callee	m_classAd . LookupString		5615712	0					
ANR	5616001	MemberAccess	m_classAd . LookupString		5615712	0					
ANR	5616002	Identifier	m_classAd		5615712	0					
ANR	5616003	Identifier	LookupString		5615712	1					
ANR	5616004	ArgumentList	VMPARAM_XEN_INITRD		5615712	1					
ANR	5616005	Argument	VMPARAM_XEN_INITRD		5615712	0					
ANR	5616006	Identifier	VMPARAM_XEN_INITRD		5615712	0					
ANR	5616007	Argument	m_xen_initrd_file		5615712	1					
ANR	5616008	Identifier	m_xen_initrd_file		5615712	0					
ANR	5616009	PrimaryExpression	1		5615712	1					
ANR	5616010	CompoundStatement		70:12:2307:2307	5615712	1					
ANR	5616011	ExpressionStatement	m_xen_initrd_file . trim ( )	1523:3:39386:39410	5615712	0	True				
ANR	5616012	CallExpression	m_xen_initrd_file . trim ( )		5615712	0					
ANR	5616013	Callee	m_xen_initrd_file . trim		5615712	0					
ANR	5616014	MemberAccess	m_xen_initrd_file . trim		5615712	0					
ANR	5616015	Identifier	m_xen_initrd_file		5615712	0					
ANR	5616016	Identifier	trim		5615712	1					
ANR	5616017	ArgumentList			5615712	1					
ANR	5616018	IfStatement	"if ( check_vm_read_access_file ( m_xen_initrd_file . Value ( ) , false ) == false )"		5615712	1					
ANR	5616019	Condition	"check_vm_read_access_file ( m_xen_initrd_file . Value ( ) , false ) == false"	1524:7:39419:39486	5615712	0	True				
ANR	5616020	EqualityExpression	"check_vm_read_access_file ( m_xen_initrd_file . Value ( ) , false ) == false"		5615712	0		==			
ANR	5616021	CallExpression	"check_vm_read_access_file ( m_xen_initrd_file . Value ( ) , false )"		5615712	0					
ANR	5616022	Callee	check_vm_read_access_file		5615712	0					
ANR	5616023	Identifier	check_vm_read_access_file		5615712	0					
ANR	5616024	ArgumentList	m_xen_initrd_file . Value ( )		5615712	1					
ANR	5616025	Argument	m_xen_initrd_file . Value ( )		5615712	0					
ANR	5616026	CallExpression	m_xen_initrd_file . Value ( )		5615712	0					
ANR	5616027	Callee	m_xen_initrd_file . Value		5615712	0					
ANR	5616028	MemberAccess	m_xen_initrd_file . Value		5615712	0					
ANR	5616029	Identifier	m_xen_initrd_file		5615712	0					
ANR	5616030	Identifier	Value		5615712	1					
ANR	5616031	ArgumentList			5615712	1					
ANR	5616032	Argument	false		5615712	1					
ANR	5616033	Identifier	false		5615712	0					
ANR	5616034	Identifier	false		5615712	1					
ANR	5616035	CompoundStatement		73:77:2461:2461	5615712	1					
ANR	5616036	ExpressionStatement	"vmprintf ( D_ALWAYS , ""xen ramdisk file '%s' cannot be read\\n"" , m_xen_initrd_file . Value ( ) )"	1526:4:39554:39647	5615712	0	True				
ANR	5616037	CallExpression	"vmprintf ( D_ALWAYS , ""xen ramdisk file '%s' cannot be read\\n"" , m_xen_initrd_file . Value ( ) )"		5615712	0					
ANR	5616038	Callee	vmprintf		5615712	0					
ANR	5616039	Identifier	vmprintf		5615712	0					
ANR	5616040	ArgumentList	D_ALWAYS		5615712	1					
ANR	5616041	Argument	D_ALWAYS		5615712	0					
ANR	5616042	Identifier	D_ALWAYS		5615712	0					
ANR	5616043	Argument	"""xen ramdisk file '%s' cannot be read\\n"""		5615712	1					
ANR	5616044	PrimaryExpression	"""xen ramdisk file '%s' cannot be read\\n"""		5615712	0					
ANR	5616045	Argument	m_xen_initrd_file . Value ( )		5615712	2					
ANR	5616046	CallExpression	m_xen_initrd_file . Value ( )		5615712	0					
ANR	5616047	Callee	m_xen_initrd_file . Value		5615712	0					
ANR	5616048	MemberAccess	m_xen_initrd_file . Value		5615712	0					
ANR	5616049	Identifier	m_xen_initrd_file		5615712	0					
ANR	5616050	Identifier	Value		5615712	1					
ANR	5616051	ArgumentList			5615712	1					
ANR	5616052	ExpressionStatement	m_result_msg = VMGAHP_ERR_JOBCLASSAD_XEN_INITRD_NOT_FOUND	1528:4:39653:39710	5615712	1	True				
ANR	5616053	AssignmentExpression	m_result_msg = VMGAHP_ERR_JOBCLASSAD_XEN_INITRD_NOT_FOUND		5615712	0		=			
ANR	5616054	Identifier	m_result_msg		5615712	0					
ANR	5616055	Identifier	VMGAHP_ERR_JOBCLASSAD_XEN_INITRD_NOT_FOUND		5615712	1					
ANR	5616056	ReturnStatement	return false ;	1529:4:39716:39728	5615712	2	True				
ANR	5616057	Identifier	false		5615712	0					
ANR	5616058	IfStatement	"if ( isTransferedFile ( m_xen_initrd_file . Value ( ) , tmp_fullname ) )"		5615712	2					
ANR	5616059	Condition	"isTransferedFile ( m_xen_initrd_file . Value ( ) , tmp_fullname )"	1531:7:39742:39804	5615712	0	True				
ANR	5616060	CallExpression	"isTransferedFile ( m_xen_initrd_file . Value ( ) , tmp_fullname )"		5615712	0					
ANR	5616061	Callee	isTransferedFile		5615712	0					
ANR	5616062	Identifier	isTransferedFile		5615712	0					
ANR	5616063	ArgumentList	m_xen_initrd_file . Value ( )		5615712	1					
ANR	5616064	Argument	m_xen_initrd_file . Value ( )		5615712	0					
ANR	5616065	CallExpression	m_xen_initrd_file . Value ( )		5615712	0					
ANR	5616066	Callee	m_xen_initrd_file . Value		5615712	0					
ANR	5616067	MemberAccess	m_xen_initrd_file . Value		5615712	0					
ANR	5616068	Identifier	m_xen_initrd_file		5615712	0					
ANR	5616069	Identifier	Value		5615712	1					
ANR	5616070	ArgumentList			5615712	1					
ANR	5616071	Argument	tmp_fullname		5615712	1					
ANR	5616072	Identifier	tmp_fullname		5615712	0					
ANR	5616073	CompoundStatement		81:22:2780:2780	5615712	1					
ANR	5616074	ExpressionStatement	m_xen_initrd_file = tmp_fullname	1535:4:39873:39905	5615712	0	True				
ANR	5616075	AssignmentExpression	m_xen_initrd_file = tmp_fullname		5615712	0		=			
ANR	5616076	Identifier	m_xen_initrd_file		5615712	0					
ANR	5616077	Identifier	tmp_fullname		5615712	1					
ANR	5616078	IfStatement	if ( m_xen_kernel_file . IsEmpty ( ) == false )		5615712	8					
ANR	5616079	Condition	m_xen_kernel_file . IsEmpty ( ) == false	1540:5:39925:39960	5615712	0	True				
ANR	5616080	EqualityExpression	m_xen_kernel_file . IsEmpty ( ) == false		5615712	0		==			
ANR	5616081	CallExpression	m_xen_kernel_file . IsEmpty ( )		5615712	0					
ANR	5616082	Callee	m_xen_kernel_file . IsEmpty		5615712	0					
ANR	5616083	MemberAccess	m_xen_kernel_file . IsEmpty		5615712	0					
ANR	5616084	Identifier	m_xen_kernel_file		5615712	0					
ANR	5616085	Identifier	IsEmpty		5615712	1					
ANR	5616086	ArgumentList			5615712	1					
ANR	5616087	Identifier	false		5615712	1					
ANR	5616088	CompoundStatement		89:44:2936:2936	5615712	1					
ANR	5616089	IfStatement	"if ( m_classAd . LookupString ( VMPARAM_XEN_ROOT , m_xen_root ) != 1 )"		5615712	0					
ANR	5616090	Condition	"m_classAd . LookupString ( VMPARAM_XEN_ROOT , m_xen_root ) != 1"	1542:6:40010:40066	5615712	0	True				
ANR	5616091	EqualityExpression	"m_classAd . LookupString ( VMPARAM_XEN_ROOT , m_xen_root ) != 1"		5615712	0		!=			
ANR	5616092	CallExpression	"m_classAd . LookupString ( VMPARAM_XEN_ROOT , m_xen_root )"		5615712	0					
ANR	5616093	Callee	m_classAd . LookupString		5615712	0					
ANR	5616094	MemberAccess	m_classAd . LookupString		5615712	0					
ANR	5616095	Identifier	m_classAd		5615712	0					
ANR	5616096	Identifier	LookupString		5615712	1					
ANR	5616097	ArgumentList	VMPARAM_XEN_ROOT		5615712	1					
ANR	5616098	Argument	VMPARAM_XEN_ROOT		5615712	0					
ANR	5616099	Identifier	VMPARAM_XEN_ROOT		5615712	0					
ANR	5616100	Argument	m_xen_root		5615712	1					
ANR	5616101	Identifier	m_xen_root		5615712	0					
ANR	5616102	PrimaryExpression	1		5615712	1					
ANR	5616103	CompoundStatement		91:66:3042:3042	5615712	1					
ANR	5616104	ExpressionStatement	"vmprintf ( D_ALWAYS , ""%s cannot be found in job classAd\\n"" , VMPARAM_XEN_ROOT )"	1543:3:40075:40155	5615712	0	True				
ANR	5616105	CallExpression	"vmprintf ( D_ALWAYS , ""%s cannot be found in job classAd\\n"" , VMPARAM_XEN_ROOT )"		5615712	0					
ANR	5616106	Callee	vmprintf		5615712	0					
ANR	5616107	Identifier	vmprintf		5615712	0					
ANR	5616108	ArgumentList	D_ALWAYS		5615712	1					
ANR	5616109	Argument	D_ALWAYS		5615712	0					
ANR	5616110	Identifier	D_ALWAYS		5615712	0					
ANR	5616111	Argument	"""%s cannot be found in job classAd\\n"""		5615712	1					
ANR	5616112	PrimaryExpression	"""%s cannot be found in job classAd\\n"""		5615712	0					
ANR	5616113	Argument	VMPARAM_XEN_ROOT		5615712	2					
ANR	5616114	Identifier	VMPARAM_XEN_ROOT		5615712	0					
ANR	5616115	ExpressionStatement	m_result_msg = VMGAHP_ERR_JOBCLASSAD_XEN_NO_ROOT_DEVICE_PARAM	1545:3:40160:40221	5615712	1	True				
ANR	5616116	AssignmentExpression	m_result_msg = VMGAHP_ERR_JOBCLASSAD_XEN_NO_ROOT_DEVICE_PARAM		5615712	0		=			
ANR	5616117	Identifier	m_result_msg		5615712	0					
ANR	5616118	Identifier	VMGAHP_ERR_JOBCLASSAD_XEN_NO_ROOT_DEVICE_PARAM		5615712	1					
ANR	5616119	ReturnStatement	return false ;	1546:3:40226:40238	5615712	2	True				
ANR	5616120	Identifier	false		5615712	0					
ANR	5616121	ExpressionStatement	m_xen_root . trim ( )	1548:2:40246:40263	5615712	1	True				
ANR	5616122	CallExpression	m_xen_root . trim ( )		5615712	0					
ANR	5616123	Callee	m_xen_root . trim		5615712	0					
ANR	5616124	MemberAccess	m_xen_root . trim		5615712	0					
ANR	5616125	Identifier	m_xen_root		5615712	0					
ANR	5616126	Identifier	trim		5615712	1					
ANR	5616127	ArgumentList			5615712	1					
ANR	5616128	IdentifierDeclStatement	MyString xen_disk ;	1551:1:40270:40287	5615712	9	True				
ANR	5616129	IdentifierDecl	xen_disk		5615712	0					
ANR	5616130	IdentifierDeclType	MyString		5615712	0					
ANR	5616131	Identifier	xen_disk		5615712	1					
ANR	5616132	IfStatement	"if ( m_classAd . LookupString ( VMPARAM_VM_DISK , xen_disk ) != 1 )"		5615712	10					
ANR	5616133	Condition	"m_classAd . LookupString ( VMPARAM_VM_DISK , xen_disk ) != 1"	1553:5:40331:40384	5615712	0	True				
ANR	5616134	EqualityExpression	"m_classAd . LookupString ( VMPARAM_VM_DISK , xen_disk ) != 1"		5615712	0		!=			
ANR	5616135	CallExpression	"m_classAd . LookupString ( VMPARAM_VM_DISK , xen_disk )"		5615712	0					
ANR	5616136	Callee	m_classAd . LookupString		5615712	0					
ANR	5616137	MemberAccess	m_classAd . LookupString		5615712	0					
ANR	5616138	Identifier	m_classAd		5615712	0					
ANR	5616139	Identifier	LookupString		5615712	1					
ANR	5616140	ArgumentList	VMPARAM_VM_DISK		5615712	1					
ANR	5616141	Argument	VMPARAM_VM_DISK		5615712	0					
ANR	5616142	Identifier	VMPARAM_VM_DISK		5615712	0					
ANR	5616143	Argument	xen_disk		5615712	1					
ANR	5616144	Identifier	xen_disk		5615712	0					
ANR	5616145	PrimaryExpression	1		5615712	1					
ANR	5616146	CompoundStatement		102:62:3360:3360	5615712	1					
ANR	5616147	ExpressionStatement	"vmprintf ( D_ALWAYS , ""%s cannot be found in job classAd\\n"" , VMPARAM_VM_DISK )"	1554:2:40392:40470	5615712	0	True				
ANR	5616148	CallExpression	"vmprintf ( D_ALWAYS , ""%s cannot be found in job classAd\\n"" , VMPARAM_VM_DISK )"		5615712	0					
ANR	5616149	Callee	vmprintf		5615712	0					
ANR	5616150	Identifier	vmprintf		5615712	0					
ANR	5616151	ArgumentList	D_ALWAYS		5615712	1					
ANR	5616152	Argument	D_ALWAYS		5615712	0					
ANR	5616153	Identifier	D_ALWAYS		5615712	0					
ANR	5616154	Argument	"""%s cannot be found in job classAd\\n"""		5615712	1					
ANR	5616155	PrimaryExpression	"""%s cannot be found in job classAd\\n"""		5615712	0					
ANR	5616156	Argument	VMPARAM_VM_DISK		5615712	2					
ANR	5616157	Identifier	VMPARAM_VM_DISK		5615712	0					
ANR	5616158	ExpressionStatement	m_result_msg = VMGAHP_ERR_JOBCLASSAD_XEN_NO_DISK_PARAM	1556:2:40474:40528	5615712	1	True				
ANR	5616159	AssignmentExpression	m_result_msg = VMGAHP_ERR_JOBCLASSAD_XEN_NO_DISK_PARAM		5615712	0		=			
ANR	5616160	Identifier	m_result_msg		5615712	0					
ANR	5616161	Identifier	VMGAHP_ERR_JOBCLASSAD_XEN_NO_DISK_PARAM		5615712	1					
ANR	5616162	ReturnStatement	return false ;	1557:2:40532:40544	5615712	2	True				
ANR	5616163	Identifier	false		5615712	0					
ANR	5616164	ExpressionStatement	xen_disk . trim ( )	1559:1:40550:40565	5615712	11	True				
ANR	5616165	CallExpression	xen_disk . trim ( )		5615712	0					
ANR	5616166	Callee	xen_disk . trim		5615712	0					
ANR	5616167	MemberAccess	xen_disk . trim		5615712	0					
ANR	5616168	Identifier	xen_disk		5615712	0					
ANR	5616169	Identifier	trim		5615712	1					
ANR	5616170	ArgumentList			5615712	1					
ANR	5616171	ExpressionStatement	priv = set_root_priv ( )	1563:1:40645:40667	5615712	12	True				
ANR	5616172	AssignmentExpression	priv = set_root_priv ( )		5615712	0		=			
ANR	5616173	Identifier	priv		5615712	0					
ANR	5616174	CallExpression	set_root_priv ( )		5615712	1					
ANR	5616175	Callee	set_root_priv		5615712	0					
ANR	5616176	Identifier	set_root_priv		5615712	0					
ANR	5616177	ArgumentList			5615712	1					
ANR	5616178	IfStatement	if ( parseXenDiskParam ( xen_disk . Value ( ) ) == false )		5615712	13					
ANR	5616179	Condition	parseXenDiskParam ( xen_disk . Value ( ) ) == false	1565:5:40675:40718	5615712	0	True				
ANR	5616180	EqualityExpression	parseXenDiskParam ( xen_disk . Value ( ) ) == false		5615712	0		==			
ANR	5616181	CallExpression	parseXenDiskParam ( xen_disk . Value ( ) )		5615712	0					
ANR	5616182	Callee	parseXenDiskParam		5615712	0					
ANR	5616183	Identifier	parseXenDiskParam		5615712	0					
ANR	5616184	ArgumentList	xen_disk . Value ( )		5615712	1					
ANR	5616185	Argument	xen_disk . Value ( )		5615712	0					
ANR	5616186	CallExpression	xen_disk . Value ( )		5615712	0					
ANR	5616187	Callee	xen_disk . Value		5615712	0					
ANR	5616188	MemberAccess	xen_disk . Value		5615712	0					
ANR	5616189	Identifier	xen_disk		5615712	0					
ANR	5616190	Identifier	Value		5615712	1					
ANR	5616191	ArgumentList			5615712	1					
ANR	5616192	Identifier	false		5615712	1					
ANR	5616193	CompoundStatement		114:52:3694:3694	5615712	1					
ANR	5616194	ExpressionStatement	"vmprintf ( D_ALWAYS , ""xen disk format(%s) is incorrect\\n"" , xen_disk . Value ( ) )"	1566:2:40726:40804	5615712	0	True				
ANR	5616195	CallExpression	"vmprintf ( D_ALWAYS , ""xen disk format(%s) is incorrect\\n"" , xen_disk . Value ( ) )"		5615712	0					
ANR	5616196	Callee	vmprintf		5615712	0					
ANR	5616197	Identifier	vmprintf		5615712	0					
ANR	5616198	ArgumentList	D_ALWAYS		5615712	1					
ANR	5616199	Argument	D_ALWAYS		5615712	0					
ANR	5616200	Identifier	D_ALWAYS		5615712	0					
ANR	5616201	Argument	"""xen disk format(%s) is incorrect\\n"""		5615712	1					
ANR	5616202	PrimaryExpression	"""xen disk format(%s) is incorrect\\n"""		5615712	0					
ANR	5616203	Argument	xen_disk . Value ( )		5615712	2					
ANR	5616204	CallExpression	xen_disk . Value ( )		5615712	0					
ANR	5616205	Callee	xen_disk . Value		5615712	0					
ANR	5616206	MemberAccess	xen_disk . Value		5615712	0					
ANR	5616207	Identifier	xen_disk		5615712	0					
ANR	5616208	Identifier	Value		5615712	1					
ANR	5616209	ArgumentList			5615712	1					
ANR	5616210	ExpressionStatement	m_result_msg = VMGAHP_ERR_JOBCLASSAD_XEN_INVALID_DISK_PARAM	1568:2:40808:40867	5615712	1	True				
ANR	5616211	AssignmentExpression	m_result_msg = VMGAHP_ERR_JOBCLASSAD_XEN_INVALID_DISK_PARAM		5615712	0		=			
ANR	5616212	Identifier	m_result_msg		5615712	0					
ANR	5616213	Identifier	VMGAHP_ERR_JOBCLASSAD_XEN_INVALID_DISK_PARAM		5615712	1					
ANR	5616214	ExpressionStatement	set_priv ( priv )	1569:2:40871:40885	5615712	2	True				
ANR	5616215	CallExpression	set_priv ( priv )		5615712	0					
ANR	5616216	Callee	set_priv		5615712	0					
ANR	5616217	Identifier	set_priv		5615712	0					
ANR	5616218	ArgumentList	priv		5615712	1					
ANR	5616219	Argument	priv		5615712	0					
ANR	5616220	Identifier	priv		5615712	0					
ANR	5616221	ReturnStatement	return false ;	1570:2:40889:40901	5615712	3	True				
ANR	5616222	Identifier	false		5615712	0					
ANR	5616223	ExpressionStatement	set_priv ( priv )	1572:1:40907:40921	5615712	14	True				
ANR	5616224	CallExpression	set_priv ( priv )		5615712	0					
ANR	5616225	Callee	set_priv		5615712	0					
ANR	5616226	Identifier	set_priv		5615712	0					
ANR	5616227	ArgumentList	priv		5615712	1					
ANR	5616228	Argument	priv		5615712	0					
ANR	5616229	Identifier	priv		5615712	0					
ANR	5616230	IfStatement	"if ( m_classAd . LookupString ( VMPARAM_XEN_KERNEL_PARAMS , m_xen_kernel_params ) == 1 )"		5615712	15					
ANR	5616231	Condition	"m_classAd . LookupString ( VMPARAM_XEN_KERNEL_PARAMS , m_xen_kernel_params ) == 1"	1575:5:40974:41048	5615712	0	True				
ANR	5616232	EqualityExpression	"m_classAd . LookupString ( VMPARAM_XEN_KERNEL_PARAMS , m_xen_kernel_params ) == 1"		5615712	0		==			
ANR	5616233	CallExpression	"m_classAd . LookupString ( VMPARAM_XEN_KERNEL_PARAMS , m_xen_kernel_params )"		5615712	0					
ANR	5616234	Callee	m_classAd . LookupString		5615712	0					
ANR	5616235	MemberAccess	m_classAd . LookupString		5615712	0					
ANR	5616236	Identifier	m_classAd		5615712	0					
ANR	5616237	Identifier	LookupString		5615712	1					
ANR	5616238	ArgumentList	VMPARAM_XEN_KERNEL_PARAMS		5615712	1					
ANR	5616239	Argument	VMPARAM_XEN_KERNEL_PARAMS		5615712	0					
ANR	5616240	Identifier	VMPARAM_XEN_KERNEL_PARAMS		5615712	0					
ANR	5616241	Argument	m_xen_kernel_params		5615712	1					
ANR	5616242	Identifier	m_xen_kernel_params		5615712	0					
ANR	5616243	PrimaryExpression	1		5615712	1					
ANR	5616244	CompoundStatement		124:83:4024:4024	5615712	1					
ANR	5616245	ExpressionStatement	m_xen_kernel_params . trim ( )	1576:2:41056:41082	5615712	0	True				
ANR	5616246	CallExpression	m_xen_kernel_params . trim ( )		5615712	0					
ANR	5616247	Callee	m_xen_kernel_params . trim		5615712	0					
ANR	5616248	MemberAccess	m_xen_kernel_params . trim		5615712	0					
ANR	5616249	Identifier	m_xen_kernel_params		5615712	0					
ANR	5616250	Identifier	trim		5615712	1					
ANR	5616251	ArgumentList			5615712	1					
ANR	5616252	IfStatement	if ( m_transfer_intermediate_files . isEmpty ( ) == false )		5615712	16					
ANR	5616253	Condition	m_transfer_intermediate_files . isEmpty ( ) == false	1580:5:41161:41208	5615712	0	True				
ANR	5616254	EqualityExpression	m_transfer_intermediate_files . isEmpty ( ) == false		5615712	0		==			
ANR	5616255	CallExpression	m_transfer_intermediate_files . isEmpty ( )		5615712	0					
ANR	5616256	Callee	m_transfer_intermediate_files . isEmpty		5615712	0					
ANR	5616257	MemberAccess	m_transfer_intermediate_files . isEmpty		5615712	0					
ANR	5616258	Identifier	m_transfer_intermediate_files		5615712	0					
ANR	5616259	Identifier	isEmpty		5615712	1					
ANR	5616260	ArgumentList			5615712	1					
ANR	5616261	Identifier	false		5615712	1					
ANR	5616262	CompoundStatement		133:2:4292:4318	5615712	1					
ANR	5616263	IdentifierDeclStatement	MyString ckpt_config_file ;	1583:2:41291:41316	5615712	0	True				
ANR	5616264	IdentifierDecl	ckpt_config_file		5615712	0					
ANR	5616265	IdentifierDeclType	MyString		5615712	0					
ANR	5616266	Identifier	ckpt_config_file		5615712	1					
ANR	5616267	IdentifierDeclStatement	MyString ckpt_suspend_file ;	1584:2:41320:41346	5615712	1	True				
ANR	5616268	IdentifierDecl	ckpt_suspend_file		5615712	0					
ANR	5616269	IdentifierDeclType	MyString		5615712	0					
ANR	5616270	Identifier	ckpt_suspend_file		5615712	1					
ANR	5616271	IfStatement	"if ( findCkptConfigAndSuspendFile ( ckpt_config_file , ckpt_suspend_file ) == false )"		5615712	2					
ANR	5616272	Condition	"findCkptConfigAndSuspendFile ( ckpt_config_file , ckpt_suspend_file ) == false"	1585:6:41354:41431	5615712	0	True				
ANR	5616273	EqualityExpression	"findCkptConfigAndSuspendFile ( ckpt_config_file , ckpt_suspend_file ) == false"		5615712	0		==			
ANR	5616274	CallExpression	"findCkptConfigAndSuspendFile ( ckpt_config_file , ckpt_suspend_file )"		5615712	0					
ANR	5616275	Callee	findCkptConfigAndSuspendFile		5615712	0					
ANR	5616276	Identifier	findCkptConfigAndSuspendFile		5615712	0					
ANR	5616277	ArgumentList	ckpt_config_file		5615712	1					
ANR	5616278	Argument	ckpt_config_file		5615712	0					
ANR	5616279	Identifier	ckpt_config_file		5615712	0					
ANR	5616280	Argument	ckpt_suspend_file		5615712	1					
ANR	5616281	Identifier	ckpt_suspend_file		5615712	0					
ANR	5616282	Identifier	false		5615712	1					
ANR	5616283	CompoundStatement		135:15:4407:4407	5615712	1					
ANR	5616284	Statement	vmprintf	1587:3:41440:41447	5615712	0	True				
ANR	5616285	Statement	(	1587:11:41448:41448	5615712	1	True				
ANR	5616286	Statement	D_ALWAYS	1587:12:41449:41456	5615712	2	True				
ANR	5616287	Statement	","	1587:20:41457:41457	5615712	3	True				
ANR	5616288	Statement	"""Checkpoint files exist but """	1587:22:41459:41487	5615712	4	True				
ANR	5616289	Statement	"""cannot find the correct config file and suspend file\\n"""	1588:5:41494:41549	5615712	5	True				
ANR	5616290	Statement	)	1588:61:41550:41550	5615712	6	True				
ANR	5616291	ExpressionStatement		1588:62:41551:41551	5615712	7	True				
ANR	5616292	ExpressionStatement	deleteNonTransferredFiles ( )	1590:3:41614:41641	5615712	8	True				
ANR	5616293	CallExpression	deleteNonTransferredFiles ( )		5615712	0					
ANR	5616294	Callee	deleteNonTransferredFiles		5615712	0					
ANR	5616295	Identifier	deleteNonTransferredFiles		5615712	0					
ANR	5616296	ArgumentList			5615712	1					
ANR	5616297	ExpressionStatement	m_restart_with_ckpt = false	1591:3:41646:41673	5615712	9	True				
ANR	5616298	AssignmentExpression	m_restart_with_ckpt = false		5615712	0		=			
ANR	5616299	Identifier	m_restart_with_ckpt		5615712	0					
ANR	5616300	Identifier	false		5615712	1					
ANR	5616301	ElseStatement	else		5615712	0					
ANR	5616302	CompoundStatement		141:8:4655:4655	5615712	0					
ANR	5616303	ExpressionStatement	m_configfile = ckpt_config_file	1593:3:41688:41719	5615712	0	True				
ANR	5616304	AssignmentExpression	m_configfile = ckpt_config_file		5615712	0		=			
ANR	5616305	Identifier	m_configfile		5615712	0					
ANR	5616306	Identifier	ckpt_config_file		5615712	1					
ANR	5616307	ExpressionStatement	m_suspendfile = ckpt_suspend_file	1594:3:41724:41757	5615712	1	True				
ANR	5616308	AssignmentExpression	m_suspendfile = ckpt_suspend_file		5615712	0		=			
ANR	5616309	Identifier	m_suspendfile		5615712	0					
ANR	5616310	Identifier	ckpt_suspend_file		5615712	1					
ANR	5616311	Statement	vmprintf	1595:3:41762:41769	5615712	2	True				
ANR	5616312	Statement	(	1595:11:41770:41770	5615712	3	True				
ANR	5616313	Statement	D_ALWAYS	1595:12:41771:41778	5615712	4	True				
ANR	5616314	Statement	","	1595:20:41779:41779	5615712	5	True				
ANR	5616315	Statement	"""Found checkpointed files, """	1595:22:41781:41808	5615712	6	True				
ANR	5616316	Statement	"""so we start using them\\n"""	1596:5:41815:41840	5615712	7	True				
ANR	5616317	Statement	)	1596:31:41841:41841	5615712	8	True				
ANR	5616318	ExpressionStatement		1596:32:41842:41842	5615712	9	True				
ANR	5616319	ExpressionStatement	m_restart_with_ckpt = true	1597:3:41847:41873	5615712	10	True				
ANR	5616320	AssignmentExpression	m_restart_with_ckpt = true		5615712	0		=			
ANR	5616321	Identifier	m_restart_with_ckpt		5615712	0					
ANR	5616322	Identifier	true		5615712	1					
ANR	5616323	ReturnStatement	return true ;	1598:3:41878:41889	5615712	11	True				
ANR	5616324	Identifier	true		5615712	0					
ANR	5616325	IfStatement	if ( m_vm_checkpoint )		5615712	17					
ANR	5616326	Condition	m_vm_checkpoint	1603:5:41962:41976	5615712	0	True				
ANR	5616327	Identifier	m_vm_checkpoint		5615712	0					
ANR	5616328	CompoundStatement		152:23:4952:4952	5615712	1					
ANR	5616329	IfStatement	if ( m_has_transferred_disk_file )		5615712	0					
ANR	5616330	Condition	m_has_transferred_disk_file	1608:6:42180:42206	5615712	0	True				
ANR	5616331	Identifier	m_has_transferred_disk_file		5615712	0					
ANR	5616332	CompoundStatement		157:36:5182:5182	5615712	1					
ANR	5616333	Statement	vmprintf	1612:3:42373:42380	5615712	0	True				
ANR	5616334	Statement	(	1612:11:42381:42381	5615712	1	True				
ANR	5616335	Statement	D_ALWAYS	1612:12:42382:42389	5615712	2	True				
ANR	5616336	Statement	","	1612:20:42390:42390	5615712	3	True				
ANR	5616337	Statement	"""To use vm checkpint in Virsh, """	1612:22:42392:42423	5615712	4	True				
ANR	5616338	Statement	"""all disk and iso files should be """	1613:5:42430:42464	5615712	5	True				
ANR	5616339	Statement	"""in a shared file system\\n"""	1614:5:42471:42497	5615712	6	True				
ANR	5616340	Statement	)	1614:32:42498:42498	5615712	7	True				
ANR	5616341	ExpressionStatement		1614:33:42499:42499	5615712	8	True				
ANR	5616342	ExpressionStatement	m_result_msg = VMGAHP_ERR_JOBCLASSAD_XEN_MISMATCHED_CHECKPOINT	1615:3:42504:42566	5615712	9	True				
ANR	5616343	AssignmentExpression	m_result_msg = VMGAHP_ERR_JOBCLASSAD_XEN_MISMATCHED_CHECKPOINT		5615712	0		=			
ANR	5616344	Identifier	m_result_msg		5615712	0					
ANR	5616345	Identifier	VMGAHP_ERR_JOBCLASSAD_XEN_MISMATCHED_CHECKPOINT		5615712	1					
ANR	5616346	ReturnStatement	return false ;	1616:3:42571:42583	5615712	10	True				
ANR	5616347	Identifier	false		5615712	0					
ANR	5616348	IdentifierDeclStatement	MyString tmp_config_name ;	1622:1:42623:42647	5615712	18	True				
ANR	5616349	IdentifierDecl	tmp_config_name		5615712	0					
ANR	5616350	IdentifierDeclType	MyString		5615712	0					
ANR	5616351	Identifier	tmp_config_name		5615712	1					
ANR	5616352	ExpressionStatement	"tmp_config_name . sprintf ( ""%s%c%s"" , m_workingpath . Value ( ) , DIR_DELIM_CHAR , XEN_CONFIG_FILE_NAME )"	1623:1:42650:42746	5615712	19	True				
ANR	5616353	CallExpression	"tmp_config_name . sprintf ( ""%s%c%s"" , m_workingpath . Value ( ) , DIR_DELIM_CHAR , XEN_CONFIG_FILE_NAME )"		5615712	0					
ANR	5616354	Callee	tmp_config_name . sprintf		5615712	0					
ANR	5616355	MemberAccess	tmp_config_name . sprintf		5615712	0					
ANR	5616356	Identifier	tmp_config_name		5615712	0					
ANR	5616357	Identifier	sprintf		5615712	1					
ANR	5616358	ArgumentList	"""%s%c%s"""		5615712	1					
ANR	5616359	Argument	"""%s%c%s"""		5615712	0					
ANR	5616360	PrimaryExpression	"""%s%c%s"""		5615712	0					
ANR	5616361	Argument	m_workingpath . Value ( )		5615712	1					
ANR	5616362	CallExpression	m_workingpath . Value ( )		5615712	0					
ANR	5616363	Callee	m_workingpath . Value		5615712	0					
ANR	5616364	MemberAccess	m_workingpath . Value		5615712	0					
ANR	5616365	Identifier	m_workingpath		5615712	0					
ANR	5616366	Identifier	Value		5615712	1					
ANR	5616367	ArgumentList			5615712	1					
ANR	5616368	Argument	DIR_DELIM_CHAR		5615712	2					
ANR	5616369	Identifier	DIR_DELIM_CHAR		5615712	0					
ANR	5616370	Argument	XEN_CONFIG_FILE_NAME		5615712	3					
ANR	5616371	Identifier	XEN_CONFIG_FILE_NAME		5615712	0					
ANR	5616372	ExpressionStatement	"vmprintf ( D_ALWAYS , ""CreateXenVMConfigFile\\n"" )"	1626:1:42750:42795	5615712	20	True				
ANR	5616373	CallExpression	"vmprintf ( D_ALWAYS , ""CreateXenVMConfigFile\\n"" )"		5615712	0					
ANR	5616374	Callee	vmprintf		5615712	0					
ANR	5616375	Identifier	vmprintf		5615712	0					
ANR	5616376	ArgumentList	D_ALWAYS		5615712	1					
ANR	5616377	Argument	D_ALWAYS		5615712	0					
ANR	5616378	Identifier	D_ALWAYS		5615712	0					
ANR	5616379	Argument	"""CreateXenVMConfigFile\\n"""		5615712	1					
ANR	5616380	PrimaryExpression	"""CreateXenVMConfigFile\\n"""		5615712	0					
ANR	5616381	IfStatement	if ( CreateXenVMConfigFile ( tmp_config_name . Value ( ) ) == false )		5615712	21					
ANR	5616382	Condition	CreateXenVMConfigFile ( tmp_config_name . Value ( ) ) == false	1628:5:42803:42860	5615712	0	True				
ANR	5616383	EqualityExpression	CreateXenVMConfigFile ( tmp_config_name . Value ( ) ) == false		5615712	0		==			
ANR	5616384	CallExpression	CreateXenVMConfigFile ( tmp_config_name . Value ( ) )		5615712	0					
ANR	5616385	Callee	CreateXenVMConfigFile		5615712	0					
ANR	5616386	Identifier	CreateXenVMConfigFile		5615712	0					
ANR	5616387	ArgumentList	tmp_config_name . Value ( )		5615712	1					
ANR	5616388	Argument	tmp_config_name . Value ( )		5615712	0					
ANR	5616389	CallExpression	tmp_config_name . Value ( )		5615712	0					
ANR	5616390	Callee	tmp_config_name . Value		5615712	0					
ANR	5616391	MemberAccess	tmp_config_name . Value		5615712	0					
ANR	5616392	Identifier	tmp_config_name		5615712	0					
ANR	5616393	Identifier	Value		5615712	1					
ANR	5616394	ArgumentList			5615712	1					
ANR	5616395	Identifier	false		5615712	1					
ANR	5616396	CompoundStatement		178:14:5836:5836	5615712	1					
ANR	5616397	ExpressionStatement	m_result_msg = VMGAHP_ERR_CRITICAL	1630:2:42868:42902	5615712	0	True				
ANR	5616398	AssignmentExpression	m_result_msg = VMGAHP_ERR_CRITICAL		5615712	0		=			
ANR	5616399	Identifier	m_result_msg		5615712	0					
ANR	5616400	Identifier	VMGAHP_ERR_CRITICAL		5615712	1					
ANR	5616401	ReturnStatement	return false ;	1631:2:42906:42918	5615712	1	True				
ANR	5616402	Identifier	false		5615712	0					
ANR	5616403	ExpressionStatement	m_configfile = tmp_config_name . Value ( )	1635:1:42948:42986	5615712	22	True				
ANR	5616404	AssignmentExpression	m_configfile = tmp_config_name . Value ( )		5615712	0		=			
ANR	5616405	Identifier	m_configfile		5615712	0					
ANR	5616406	CallExpression	tmp_config_name . Value ( )		5615712	1					
ANR	5616407	Callee	tmp_config_name . Value		5615712	0					
ANR	5616408	MemberAccess	tmp_config_name . Value		5615712	0					
ANR	5616409	Identifier	tmp_config_name		5615712	0					
ANR	5616410	Identifier	Value		5615712	1					
ANR	5616411	ArgumentList			5615712	1					
ANR	5616412	ReturnStatement	return true ;	1636:1:42989:43000	5615712	23	True				
ANR	5616413	Identifier	true		5615712	0					
ANR	5616414	ReturnType	bool		5615712	1					
ANR	5616415	Identifier	XenType :: CreateConfigFile		5615712	2					
ANR	5616416	ParameterList			5615712	3					
ANR	5616417	CFGEntryNode	ENTRY		5615712		True				
ANR	5616418	CFGExitNode	EXIT		5615712		True				
ANR	5616419	Symbol	m_result_msg		5615712						
ANR	5616420	Symbol	VMGAHP_ERR_JOBCLASSAD_XEN_MISMATCHED_CHECKPOINT		5615712						
ANR	5616421	Symbol	isTransferedFile		5615712						
ANR	5616422	Symbol	m_workingpath . Value		5615712						
ANR	5616423	Symbol	tmp_fullname		5615712						
ANR	5616424	Symbol	m_xen_kernel_submit_param		5615712						
ANR	5616425	Symbol	m_vm_mem		5615712						
ANR	5616426	Symbol	delete_quotation_marks		5615712						
ANR	5616427	Symbol	xen_disk . Value		5615712						
ANR	5616428	Symbol	XEN_KERNEL_INCLUDED		5615712						
ANR	5616429	Symbol	m_xen_kernel_submit_param . Value		5615712						
ANR	5616430	Symbol	m_xen_kernel_file		5615712						
ANR	5616431	Symbol	VMPARAM_XEN_ROOT		5615712						
ANR	5616432	Symbol	m_xen_kernel_params		5615712						
ANR	5616433	Symbol	m_allow_hw_vt_suspend		5615712						
ANR	5616434	Symbol	m_vm_checkpoint		5615712						
ANR	5616435	Symbol	VMGAHP_ERR_JOBCLASSAD_XEN_INITRD_NOT_FOUND		5615712						
ANR	5616436	Symbol	VMGAHP_ERR_JOBCLASSAD_XEN_INVALID_DISK_PARAM		5615712						
ANR	5616437	Symbol	VMGAHP_ERR_JOBCLASSAD_XEN_NO_KERNEL_PARAM		5615712						
ANR	5616438	Symbol	priv		5615712						
ANR	5616439	Symbol	VMGAHP_ERR_JOBCLASSAD_XEN_KERNEL_NOT_FOUND		5615712						
ANR	5616440	Symbol	strcasecmp		5615712						
ANR	5616441	Symbol	VMGAHP_ERR_JOBCLASSAD_MISMATCHED_HARDWARE_VT		5615712						
ANR	5616442	Symbol	m_transfer_intermediate_files		5615712						
ANR	5616443	Symbol	XEN_CONFIG_FILE_NAME		5615712						
ANR	5616444	Symbol	NULL		5615712						
ANR	5616445	Symbol	m_classAd . LookupString		5615712						
ANR	5616446	Symbol	m_xen_kernel_file . IsEmpty		5615712						
ANR	5616447	Symbol	VMPARAM_XEN_KERNEL		5615712						
ANR	5616448	Symbol	D_FULLDEBUG		5615712						
ANR	5616449	Symbol	param_boolean		5615712						
ANR	5616450	Symbol	VMGAHP_ERR_JOBCLASSAD_XEN_NO_ROOT_DEVICE_PARAM		5615712						
ANR	5616451	Symbol	m_restart_with_ckpt		5615712						
ANR	5616452	Symbol	VMPARAM_XEN_INITRD		5615712						
ANR	5616453	Symbol	tmp_config_name . Value		5615712						
ANR	5616454	Symbol	true		5615712						
ANR	5616455	Symbol	XEN_KERNEL_HW_VT		5615712						
ANR	5616456	Symbol	parseXenDiskParam		5615712						
ANR	5616457	Symbol	config_value		5615712						
ANR	5616458	Symbol	parseCommonParamFromClassAd		5615712						
ANR	5616459	Symbol	m_xen_bootloader		5615712						
ANR	5616460	Symbol	VMGAHP_ERR_JOBCLASSAD_XEN_NO_DISK_PARAM		5615712						
ANR	5616461	Symbol	VMGAHP_ERR_CRITICAL		5615712						
ANR	5616462	Symbol	ckpt_suspend_file		5615712						
ANR	5616463	Symbol	m_configfile		5615712						
ANR	5616464	Symbol	findCkptConfigAndSuspendFile		5615712						
ANR	5616465	Symbol	param		5615712						
ANR	5616466	Symbol	m_transfer_intermediate_files . isEmpty		5615712						
ANR	5616467	Symbol	m_vm_hardware_vt		5615712						
ANR	5616468	Symbol	m_has_transferred_disk_file		5615712						
ANR	5616469	Symbol	m_xen_root		5615712						
ANR	5616470	Symbol	VMPARAM_VM_DISK		5615712						
ANR	5616471	Symbol	tmp_config_name		5615712						
ANR	5616472	Symbol	m_suspendfile		5615712						
ANR	5616473	Symbol	DIR_DELIM_CHAR		5615712						
ANR	5616474	Symbol	false		5615712						
ANR	5616475	Symbol	D_ALWAYS		5615712						
ANR	5616476	Symbol	set_root_priv		5615712						
ANR	5616477	Symbol	ckpt_config_file		5615712						
ANR	5616478	Symbol	CreateXenVMConfigFile		5615712						
ANR	5616479	Symbol	m_workingpath		5615712						
ANR	5616480	Symbol	m_xen_hw_vt		5615712						
ANR	5616481	Symbol	m_xen_initrd_file		5615712						
ANR	5616482	Symbol	xen_disk		5615712						
ANR	5616483	Symbol	VMPARAM_XEN_KERNEL_PARAMS		5615712						
ANR	5616484	Symbol	m_classAd		5615712						
ANR	5616485	Symbol	m_xen_initrd_file . Value		5615712						
ANR	5616486	Symbol	check_vm_read_access_file		5615712						
ANR	5616487	Function	KVMType :: KVMType	1640:0:43006:43184							
ANR	5616488	FunctionDef	"KVMType :: KVMType (const char * workingpath , ClassAd * ad)"		5616487	0					
ANR	5616489	CompoundStatement		1642:0:43094:43184	5616487	0					
ANR	5616490	ExpressionStatement	"m_sessionID = ""qemu:///session"""	1644:1:43098:43127	5616487	0	True				
ANR	5616491	AssignmentExpression	"m_sessionID = ""qemu:///session"""		5616487	0		=			
ANR	5616492	Identifier	m_sessionID		5616487	0					
ANR	5616493	PrimaryExpression	"""qemu:///session"""		5616487	1					
ANR	5616494	ExpressionStatement	this -> Connect ( )	1645:1:43130:43145	5616487	1	True				
ANR	5616495	CallExpression	this -> Connect ( )		5616487	0					
ANR	5616496	Callee	this -> Connect		5616487	0					
ANR	5616497	PtrMemberAccess	this -> Connect		5616487	0					
ANR	5616498	Identifier	this		5616487	0					
ANR	5616499	Identifier	Connect		5616487	1					
ANR	5616500	ArgumentList			5616487	1					
ANR	5616501	ExpressionStatement	m_vmtype = CONDOR_VM_UNIVERSE_KVM	1646:1:43148:43181	5616487	2	True				
ANR	5616502	AssignmentExpression	m_vmtype = CONDOR_VM_UNIVERSE_KVM		5616487	0		=			
ANR	5616503	Identifier	m_vmtype		5616487	0					
ANR	5616504	Identifier	CONDOR_VM_UNIVERSE_KVM		5616487	1					
ANR	5616505	Identifier	KVMType :: KVMType		5616487	1					
ANR	5616506	ParameterList	"const char * workingpath , ClassAd * ad"		5616487	2					
ANR	5616507	Parameter	const char * workingpath	1640:17:43023:43046	5616487	0	True				
ANR	5616508	ParameterType	const char *		5616487	0					
ANR	5616509	Identifier	workingpath		5616487	1					
ANR	5616510	Parameter	ClassAd * ad	1640:43:43049:43060	5616487	1	True				
ANR	5616511	ParameterType	ClassAd *		5616487	0					
ANR	5616512	Identifier	ad		5616487	1					
ANR	5616513	CFGEntryNode	ENTRY		5616487		True				
ANR	5616514	CFGExitNode	EXIT		5616487		True				
ANR	5616515	Symbol	m_vmtype		5616487						
ANR	5616516	Symbol	ad		5616487						
ANR	5616517	Symbol	m_sessionID		5616487						
ANR	5616518	Symbol	CONDOR_VM_UNIVERSE_KVM		5616487						
ANR	5616519	Symbol	workingpath		5616487						
ANR	5616520	Symbol	this		5616487						
ANR	5616521	Function	KVMType :: CreateConfigFile	1650:0:43187:46013							
ANR	5616522	FunctionDef	KVMType :: CreateConfigFile ()		5616521	0					
ANR	5616523	CompoundStatement		1652:0:43220:46013	5616521	0					
ANR	5616524	IdentifierDeclStatement	priv_state priv ;	1653:1:43223:43238	5616521	0	True				
ANR	5616525	IdentifierDecl	priv		5616521	0					
ANR	5616526	IdentifierDeclType	priv_state		5616521	0					
ANR	5616527	Identifier	priv		5616521	1					
ANR	5616528	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""In KVMType::CreateConfigFile()\\n"" )"	1655:1:43242:43299	5616521	1	True				
ANR	5616529	CallExpression	"vmprintf ( D_FULLDEBUG , ""In KVMType::CreateConfigFile()\\n"" )"		5616521	0					
ANR	5616530	Callee	vmprintf		5616521	0					
ANR	5616531	Identifier	vmprintf		5616521	0					
ANR	5616532	ArgumentList	D_FULLDEBUG		5616521	1					
ANR	5616533	Argument	D_FULLDEBUG		5616521	0					
ANR	5616534	Identifier	D_FULLDEBUG		5616521	0					
ANR	5616535	Argument	"""In KVMType::CreateConfigFile()\\n"""		5616521	1					
ANR	5616536	PrimaryExpression	"""In KVMType::CreateConfigFile()\\n"""		5616521	0					
ANR	5616537	IfStatement	if ( parseCommonParamFromClassAd ( true ) == false )		5616521	2					
ANR	5616538	Condition	parseCommonParamFromClassAd ( true ) == false	1658:5:43375:43416	5616521	0	True				
ANR	5616539	EqualityExpression	parseCommonParamFromClassAd ( true ) == false		5616521	0		==			
ANR	5616540	CallExpression	parseCommonParamFromClassAd ( true )		5616521	0					
ANR	5616541	Callee	parseCommonParamFromClassAd		5616521	0					
ANR	5616542	Identifier	parseCommonParamFromClassAd		5616521	0					
ANR	5616543	ArgumentList	true		5616521	1					
ANR	5616544	Argument	true		5616521	0					
ANR	5616545	Identifier	true		5616521	0					
ANR	5616546	Identifier	false		5616521	1					
ANR	5616547	CompoundStatement		7:50:199:199	5616521	1					
ANR	5616548	ReturnStatement	return false ;	1659:2:43424:43436	5616521	0	True				
ANR	5616549	Identifier	false		5616521	0					
ANR	5616550	IfStatement	if ( m_vm_mem < 32 )		5616521	3					
ANR	5616551	Condition	m_vm_mem < 32	1662:5:43447:43459	5616521	0	True				
ANR	5616552	RelationalExpression	m_vm_mem < 32		5616521	0		<			
ANR	5616553	Identifier	m_vm_mem		5616521	0					
ANR	5616554	PrimaryExpression	32		5616521	1					
ANR	5616555	CompoundStatement		11:21:242:242	5616521	1					
ANR	5616556	ExpressionStatement	m_vm_mem = 32	1664:2:43528:43541	5616521	0	True				
ANR	5616557	AssignmentExpression	m_vm_mem = 32		5616521	0		=			
ANR	5616558	Identifier	m_vm_mem		5616521	0					
ANR	5616559	PrimaryExpression	32		5616521	1					
ANR	5616560	IdentifierDeclStatement	MyString kvm_disk ;	1667:1:43548:43565	5616521	4	True				
ANR	5616561	IdentifierDecl	kvm_disk		5616521	0					
ANR	5616562	IdentifierDeclType	MyString		5616521	0					
ANR	5616563	Identifier	kvm_disk		5616521	1					
ANR	5616564	IfStatement	"if ( m_classAd . LookupString ( VMPARAM_VM_DISK , kvm_disk ) != 1 )"		5616521	5					
ANR	5616565	Condition	"m_classAd . LookupString ( VMPARAM_VM_DISK , kvm_disk ) != 1"	1669:5:43609:43662	5616521	0	True				
ANR	5616566	EqualityExpression	"m_classAd . LookupString ( VMPARAM_VM_DISK , kvm_disk ) != 1"		5616521	0		!=			
ANR	5616567	CallExpression	"m_classAd . LookupString ( VMPARAM_VM_DISK , kvm_disk )"		5616521	0					
ANR	5616568	Callee	m_classAd . LookupString		5616521	0					
ANR	5616569	MemberAccess	m_classAd . LookupString		5616521	0					
ANR	5616570	Identifier	m_classAd		5616521	0					
ANR	5616571	Identifier	LookupString		5616521	1					
ANR	5616572	ArgumentList	VMPARAM_VM_DISK		5616521	1					
ANR	5616573	Argument	VMPARAM_VM_DISK		5616521	0					
ANR	5616574	Identifier	VMPARAM_VM_DISK		5616521	0					
ANR	5616575	Argument	kvm_disk		5616521	1					
ANR	5616576	Identifier	kvm_disk		5616521	0					
ANR	5616577	PrimaryExpression	1		5616521	1					
ANR	5616578	CompoundStatement		18:62:445:445	5616521	1					
ANR	5616579	ExpressionStatement	"vmprintf ( D_ALWAYS , ""%s cannot be found in job classAd\\n"" , VMPARAM_VM_DISK )"	1670:2:43670:43748	5616521	0	True				
ANR	5616580	CallExpression	"vmprintf ( D_ALWAYS , ""%s cannot be found in job classAd\\n"" , VMPARAM_VM_DISK )"		5616521	0					
ANR	5616581	Callee	vmprintf		5616521	0					
ANR	5616582	Identifier	vmprintf		5616521	0					
ANR	5616583	ArgumentList	D_ALWAYS		5616521	1					
ANR	5616584	Argument	D_ALWAYS		5616521	0					
ANR	5616585	Identifier	D_ALWAYS		5616521	0					
ANR	5616586	Argument	"""%s cannot be found in job classAd\\n"""		5616521	1					
ANR	5616587	PrimaryExpression	"""%s cannot be found in job classAd\\n"""		5616521	0					
ANR	5616588	Argument	VMPARAM_VM_DISK		5616521	2					
ANR	5616589	Identifier	VMPARAM_VM_DISK		5616521	0					
ANR	5616590	ExpressionStatement	m_result_msg = VMGAHP_ERR_JOBCLASSAD_XEN_NO_DISK_PARAM	1672:2:43752:43806	5616521	1	True				
ANR	5616591	AssignmentExpression	m_result_msg = VMGAHP_ERR_JOBCLASSAD_XEN_NO_DISK_PARAM		5616521	0		=			
ANR	5616592	Identifier	m_result_msg		5616521	0					
ANR	5616593	Identifier	VMGAHP_ERR_JOBCLASSAD_XEN_NO_DISK_PARAM		5616521	1					
ANR	5616594	ReturnStatement	return false ;	1673:2:43810:43822	5616521	2	True				
ANR	5616595	Identifier	false		5616521	0					
ANR	5616596	ExpressionStatement	kvm_disk . trim ( )	1675:1:43828:43843	5616521	6	True				
ANR	5616597	CallExpression	kvm_disk . trim ( )		5616521	0					
ANR	5616598	Callee	kvm_disk . trim		5616521	0					
ANR	5616599	MemberAccess	kvm_disk . trim		5616521	0					
ANR	5616600	Identifier	kvm_disk		5616521	0					
ANR	5616601	Identifier	trim		5616521	1					
ANR	5616602	ArgumentList			5616521	1					
ANR	5616603	ExpressionStatement	priv = set_root_priv ( )	1679:1:43923:43945	5616521	7	True				
ANR	5616604	AssignmentExpression	priv = set_root_priv ( )		5616521	0		=			
ANR	5616605	Identifier	priv		5616521	0					
ANR	5616606	CallExpression	set_root_priv ( )		5616521	1					
ANR	5616607	Callee	set_root_priv		5616521	0					
ANR	5616608	Identifier	set_root_priv		5616521	0					
ANR	5616609	ArgumentList			5616521	1					
ANR	5616610	IfStatement	if ( parseXenDiskParam ( kvm_disk . Value ( ) ) == false )		5616521	8					
ANR	5616611	Condition	parseXenDiskParam ( kvm_disk . Value ( ) ) == false	1681:5:43953:43996	5616521	0	True				
ANR	5616612	EqualityExpression	parseXenDiskParam ( kvm_disk . Value ( ) ) == false		5616521	0		==			
ANR	5616613	CallExpression	parseXenDiskParam ( kvm_disk . Value ( ) )		5616521	0					
ANR	5616614	Callee	parseXenDiskParam		5616521	0					
ANR	5616615	Identifier	parseXenDiskParam		5616521	0					
ANR	5616616	ArgumentList	kvm_disk . Value ( )		5616521	1					
ANR	5616617	Argument	kvm_disk . Value ( )		5616521	0					
ANR	5616618	CallExpression	kvm_disk . Value ( )		5616521	0					
ANR	5616619	Callee	kvm_disk . Value		5616521	0					
ANR	5616620	MemberAccess	kvm_disk . Value		5616521	0					
ANR	5616621	Identifier	kvm_disk		5616521	0					
ANR	5616622	Identifier	Value		5616521	1					
ANR	5616623	ArgumentList			5616521	1					
ANR	5616624	Identifier	false		5616521	1					
ANR	5616625	CompoundStatement		30:52:779:779	5616521	1					
ANR	5616626	ExpressionStatement	"vmprintf ( D_ALWAYS , ""kvm disk format(%s) is incorrect\\n"" , kvm_disk . Value ( ) )"	1682:2:44004:44082	5616521	0	True				
ANR	5616627	CallExpression	"vmprintf ( D_ALWAYS , ""kvm disk format(%s) is incorrect\\n"" , kvm_disk . Value ( ) )"		5616521	0					
ANR	5616628	Callee	vmprintf		5616521	0					
ANR	5616629	Identifier	vmprintf		5616521	0					
ANR	5616630	ArgumentList	D_ALWAYS		5616521	1					
ANR	5616631	Argument	D_ALWAYS		5616521	0					
ANR	5616632	Identifier	D_ALWAYS		5616521	0					
ANR	5616633	Argument	"""kvm disk format(%s) is incorrect\\n"""		5616521	1					
ANR	5616634	PrimaryExpression	"""kvm disk format(%s) is incorrect\\n"""		5616521	0					
ANR	5616635	Argument	kvm_disk . Value ( )		5616521	2					
ANR	5616636	CallExpression	kvm_disk . Value ( )		5616521	0					
ANR	5616637	Callee	kvm_disk . Value		5616521	0					
ANR	5616638	MemberAccess	kvm_disk . Value		5616521	0					
ANR	5616639	Identifier	kvm_disk		5616521	0					
ANR	5616640	Identifier	Value		5616521	1					
ANR	5616641	ArgumentList			5616521	1					
ANR	5616642	ExpressionStatement	m_result_msg = VMGAHP_ERR_JOBCLASSAD_KVM_INVALID_DISK_PARAM	1684:2:44086:44145	5616521	1	True				
ANR	5616643	AssignmentExpression	m_result_msg = VMGAHP_ERR_JOBCLASSAD_KVM_INVALID_DISK_PARAM		5616521	0		=			
ANR	5616644	Identifier	m_result_msg		5616521	0					
ANR	5616645	Identifier	VMGAHP_ERR_JOBCLASSAD_KVM_INVALID_DISK_PARAM		5616521	1					
ANR	5616646	ExpressionStatement	set_priv ( priv )	1685:2:44149:44163	5616521	2	True				
ANR	5616647	CallExpression	set_priv ( priv )		5616521	0					
ANR	5616648	Callee	set_priv		5616521	0					
ANR	5616649	Identifier	set_priv		5616521	0					
ANR	5616650	ArgumentList	priv		5616521	1					
ANR	5616651	Argument	priv		5616521	0					
ANR	5616652	Identifier	priv		5616521	0					
ANR	5616653	ReturnStatement	return false ;	1686:2:44167:44179	5616521	3	True				
ANR	5616654	Identifier	false		5616521	0					
ANR	5616655	ExpressionStatement	set_priv ( priv )	1688:1:44185:44199	5616521	9	True				
ANR	5616656	CallExpression	set_priv ( priv )		5616521	0					
ANR	5616657	Callee	set_priv		5616521	0					
ANR	5616658	Identifier	set_priv		5616521	0					
ANR	5616659	ArgumentList	priv		5616521	1					
ANR	5616660	Argument	priv		5616521	0					
ANR	5616661	Identifier	priv		5616521	0					
ANR	5616662	IfStatement	if ( m_transfer_intermediate_files . isEmpty ( ) == false )		5616521	10					
ANR	5616663	Condition	m_transfer_intermediate_files . isEmpty ( ) == false	1691:5:44275:44322	5616521	0	True				
ANR	5616664	EqualityExpression	m_transfer_intermediate_files . isEmpty ( ) == false		5616521	0		==			
ANR	5616665	CallExpression	m_transfer_intermediate_files . isEmpty ( )		5616521	0					
ANR	5616666	Callee	m_transfer_intermediate_files . isEmpty		5616521	0					
ANR	5616667	MemberAccess	m_transfer_intermediate_files . isEmpty		5616521	0					
ANR	5616668	Identifier	m_transfer_intermediate_files		5616521	0					
ANR	5616669	Identifier	isEmpty		5616521	1					
ANR	5616670	ArgumentList			5616521	1					
ANR	5616671	Identifier	false		5616521	1					
ANR	5616672	CompoundStatement		44:2:1213:1239	5616521	1					
ANR	5616673	IdentifierDeclStatement	MyString ckpt_config_file ;	1694:2:44405:44430	5616521	0	True				
ANR	5616674	IdentifierDecl	ckpt_config_file		5616521	0					
ANR	5616675	IdentifierDeclType	MyString		5616521	0					
ANR	5616676	Identifier	ckpt_config_file		5616521	1					
ANR	5616677	IdentifierDeclStatement	MyString ckpt_suspend_file ;	1695:2:44434:44460	5616521	1	True				
ANR	5616678	IdentifierDecl	ckpt_suspend_file		5616521	0					
ANR	5616679	IdentifierDeclType	MyString		5616521	0					
ANR	5616680	Identifier	ckpt_suspend_file		5616521	1					
ANR	5616681	IfStatement	"if ( findCkptConfigAndSuspendFile ( ckpt_config_file , ckpt_suspend_file ) == false )"		5616521	2					
ANR	5616682	Condition	"findCkptConfigAndSuspendFile ( ckpt_config_file , ckpt_suspend_file ) == false"	1696:6:44468:44545	5616521	0	True				
ANR	5616683	EqualityExpression	"findCkptConfigAndSuspendFile ( ckpt_config_file , ckpt_suspend_file ) == false"		5616521	0		==			
ANR	5616684	CallExpression	"findCkptConfigAndSuspendFile ( ckpt_config_file , ckpt_suspend_file )"		5616521	0					
ANR	5616685	Callee	findCkptConfigAndSuspendFile		5616521	0					
ANR	5616686	Identifier	findCkptConfigAndSuspendFile		5616521	0					
ANR	5616687	ArgumentList	ckpt_config_file		5616521	1					
ANR	5616688	Argument	ckpt_config_file		5616521	0					
ANR	5616689	Identifier	ckpt_config_file		5616521	0					
ANR	5616690	Argument	ckpt_suspend_file		5616521	1					
ANR	5616691	Identifier	ckpt_suspend_file		5616521	0					
ANR	5616692	Identifier	false		5616521	1					
ANR	5616693	CompoundStatement		46:15:1328:1328	5616521	1					
ANR	5616694	Statement	vmprintf	1698:3:44554:44561	5616521	0	True				
ANR	5616695	Statement	(	1698:11:44562:44562	5616521	1	True				
ANR	5616696	Statement	D_ALWAYS	1698:12:44563:44570	5616521	2	True				
ANR	5616697	Statement	","	1698:20:44571:44571	5616521	3	True				
ANR	5616698	Statement	"""Checkpoint files exist but """	1698:22:44573:44601	5616521	4	True				
ANR	5616699	Statement	"""cannot find the correct config file and suspend file\\n"""	1699:5:44608:44663	5616521	5	True				
ANR	5616700	Statement	)	1699:61:44664:44664	5616521	6	True				
ANR	5616701	ExpressionStatement		1699:62:44665:44665	5616521	7	True				
ANR	5616702	ExpressionStatement	deleteNonTransferredFiles ( )	1701:3:44728:44755	5616521	8	True				
ANR	5616703	CallExpression	deleteNonTransferredFiles ( )		5616521	0					
ANR	5616704	Callee	deleteNonTransferredFiles		5616521	0					
ANR	5616705	Identifier	deleteNonTransferredFiles		5616521	0					
ANR	5616706	ArgumentList			5616521	1					
ANR	5616707	ExpressionStatement	m_restart_with_ckpt = false	1702:3:44760:44787	5616521	9	True				
ANR	5616708	AssignmentExpression	m_restart_with_ckpt = false		5616521	0		=			
ANR	5616709	Identifier	m_restart_with_ckpt		5616521	0					
ANR	5616710	Identifier	false		5616521	1					
ANR	5616711	ElseStatement	else		5616521	0					
ANR	5616712	CompoundStatement		52:8:1576:1576	5616521	0					
ANR	5616713	ExpressionStatement	m_configfile = ckpt_config_file	1704:3:44802:44833	5616521	0	True				
ANR	5616714	AssignmentExpression	m_configfile = ckpt_config_file		5616521	0		=			
ANR	5616715	Identifier	m_configfile		5616521	0					
ANR	5616716	Identifier	ckpt_config_file		5616521	1					
ANR	5616717	ExpressionStatement	m_suspendfile = ckpt_suspend_file	1705:3:44838:44871	5616521	1	True				
ANR	5616718	AssignmentExpression	m_suspendfile = ckpt_suspend_file		5616521	0		=			
ANR	5616719	Identifier	m_suspendfile		5616521	0					
ANR	5616720	Identifier	ckpt_suspend_file		5616521	1					
ANR	5616721	Statement	vmprintf	1706:3:44876:44883	5616521	2	True				
ANR	5616722	Statement	(	1706:11:44884:44884	5616521	3	True				
ANR	5616723	Statement	D_ALWAYS	1706:12:44885:44892	5616521	4	True				
ANR	5616724	Statement	","	1706:20:44893:44893	5616521	5	True				
ANR	5616725	Statement	"""Found checkpointed files, """	1706:22:44895:44922	5616521	6	True				
ANR	5616726	Statement	"""so we start using them\\n"""	1707:5:44929:44954	5616521	7	True				
ANR	5616727	Statement	)	1707:31:44955:44955	5616521	8	True				
ANR	5616728	ExpressionStatement		1707:32:44956:44956	5616521	9	True				
ANR	5616729	ExpressionStatement	m_restart_with_ckpt = true	1708:3:44961:44987	5616521	10	True				
ANR	5616730	AssignmentExpression	m_restart_with_ckpt = true		5616521	0		=			
ANR	5616731	Identifier	m_restart_with_ckpt		5616521	0					
ANR	5616732	Identifier	true		5616521	1					
ANR	5616733	ReturnStatement	return true ;	1709:3:44992:45003	5616521	11	True				
ANR	5616734	Identifier	true		5616521	0					
ANR	5616735	IfStatement	if ( m_vm_checkpoint )		5616521	11					
ANR	5616736	Condition	m_vm_checkpoint	1714:5:45076:45090	5616521	0	True				
ANR	5616737	Identifier	m_vm_checkpoint		5616521	0					
ANR	5616738	CompoundStatement		63:23:1873:1873	5616521	1					
ANR	5616739	IfStatement	if ( m_has_transferred_disk_file )		5616521	0					
ANR	5616740	Condition	m_has_transferred_disk_file	1717:6:45191:45217	5616521	0	True				
ANR	5616741	Identifier	m_has_transferred_disk_file		5616521	0					
ANR	5616742	CompoundStatement		66:36:2000:2000	5616521	1					
ANR	5616743	Statement	vmprintf	1721:3:45384:45391	5616521	0	True				
ANR	5616744	Statement	(	1721:11:45392:45392	5616521	1	True				
ANR	5616745	Statement	D_ALWAYS	1721:12:45393:45400	5616521	2	True				
ANR	5616746	Statement	","	1721:20:45401:45401	5616521	3	True				
ANR	5616747	Statement	"""To use vm checkpint in Virsh, """	1721:22:45403:45434	5616521	4	True				
ANR	5616748	Statement	"""all disk and iso files should be """	1722:5:45441:45475	5616521	5	True				
ANR	5616749	Statement	"""in a shared file system\\n"""	1723:5:45482:45508	5616521	6	True				
ANR	5616750	Statement	)	1723:32:45509:45509	5616521	7	True				
ANR	5616751	ExpressionStatement		1723:33:45510:45510	5616521	8	True				
ANR	5616752	ExpressionStatement	m_result_msg = VMGAHP_ERR_JOBCLASSAD_KVM_MISMATCHED_CHECKPOINT	1724:3:45515:45577	5616521	9	True				
ANR	5616753	AssignmentExpression	m_result_msg = VMGAHP_ERR_JOBCLASSAD_KVM_MISMATCHED_CHECKPOINT		5616521	0		=			
ANR	5616754	Identifier	m_result_msg		5616521	0					
ANR	5616755	Identifier	VMGAHP_ERR_JOBCLASSAD_KVM_MISMATCHED_CHECKPOINT		5616521	1					
ANR	5616756	ReturnStatement	return false ;	1725:3:45582:45594	5616521	10	True				
ANR	5616757	Identifier	false		5616521	0					
ANR	5616758	IdentifierDeclStatement	MyString tmp_config_name ;	1731:1:45634:45658	5616521	12	True				
ANR	5616759	IdentifierDecl	tmp_config_name		5616521	0					
ANR	5616760	IdentifierDeclType	MyString		5616521	0					
ANR	5616761	Identifier	tmp_config_name		5616521	1					
ANR	5616762	ExpressionStatement	"tmp_config_name . sprintf ( ""%s%c%s"" , m_workingpath . Value ( ) , DIR_DELIM_CHAR , XEN_CONFIG_FILE_NAME )"	1732:1:45661:45757	5616521	13	True				
ANR	5616763	CallExpression	"tmp_config_name . sprintf ( ""%s%c%s"" , m_workingpath . Value ( ) , DIR_DELIM_CHAR , XEN_CONFIG_FILE_NAME )"		5616521	0					
ANR	5616764	Callee	tmp_config_name . sprintf		5616521	0					
ANR	5616765	MemberAccess	tmp_config_name . sprintf		5616521	0					
ANR	5616766	Identifier	tmp_config_name		5616521	0					
ANR	5616767	Identifier	sprintf		5616521	1					
ANR	5616768	ArgumentList	"""%s%c%s"""		5616521	1					
ANR	5616769	Argument	"""%s%c%s"""		5616521	0					
ANR	5616770	PrimaryExpression	"""%s%c%s"""		5616521	0					
ANR	5616771	Argument	m_workingpath . Value ( )		5616521	1					
ANR	5616772	CallExpression	m_workingpath . Value ( )		5616521	0					
ANR	5616773	Callee	m_workingpath . Value		5616521	0					
ANR	5616774	MemberAccess	m_workingpath . Value		5616521	0					
ANR	5616775	Identifier	m_workingpath		5616521	0					
ANR	5616776	Identifier	Value		5616521	1					
ANR	5616777	ArgumentList			5616521	1					
ANR	5616778	Argument	DIR_DELIM_CHAR		5616521	2					
ANR	5616779	Identifier	DIR_DELIM_CHAR		5616521	0					
ANR	5616780	Argument	XEN_CONFIG_FILE_NAME		5616521	3					
ANR	5616781	Identifier	XEN_CONFIG_FILE_NAME		5616521	0					
ANR	5616782	ExpressionStatement	"vmprintf ( D_ALWAYS , ""CreateKvmVMConfigFile\\n"" )"	1735:1:45761:45806	5616521	14	True				
ANR	5616783	CallExpression	"vmprintf ( D_ALWAYS , ""CreateKvmVMConfigFile\\n"" )"		5616521	0					
ANR	5616784	Callee	vmprintf		5616521	0					
ANR	5616785	Identifier	vmprintf		5616521	0					
ANR	5616786	ArgumentList	D_ALWAYS		5616521	1					
ANR	5616787	Argument	D_ALWAYS		5616521	0					
ANR	5616788	Identifier	D_ALWAYS		5616521	0					
ANR	5616789	Argument	"""CreateKvmVMConfigFile\\n"""		5616521	1					
ANR	5616790	PrimaryExpression	"""CreateKvmVMConfigFile\\n"""		5616521	0					
ANR	5616791	IfStatement	if ( CreateXenVMConfigFile ( tmp_config_name . Value ( ) ) == false )		5616521	15					
ANR	5616792	Condition	CreateXenVMConfigFile ( tmp_config_name . Value ( ) ) == false	1737:5:45814:45871	5616521	0	True				
ANR	5616793	EqualityExpression	CreateXenVMConfigFile ( tmp_config_name . Value ( ) ) == false		5616521	0		==			
ANR	5616794	CallExpression	CreateXenVMConfigFile ( tmp_config_name . Value ( ) )		5616521	0					
ANR	5616795	Callee	CreateXenVMConfigFile		5616521	0					
ANR	5616796	Identifier	CreateXenVMConfigFile		5616521	0					
ANR	5616797	ArgumentList	tmp_config_name . Value ( )		5616521	1					
ANR	5616798	Argument	tmp_config_name . Value ( )		5616521	0					
ANR	5616799	CallExpression	tmp_config_name . Value ( )		5616521	0					
ANR	5616800	Callee	tmp_config_name . Value		5616521	0					
ANR	5616801	MemberAccess	tmp_config_name . Value		5616521	0					
ANR	5616802	Identifier	tmp_config_name		5616521	0					
ANR	5616803	Identifier	Value		5616521	1					
ANR	5616804	ArgumentList			5616521	1					
ANR	5616805	Identifier	false		5616521	1					
ANR	5616806	CompoundStatement		87:14:2654:2654	5616521	1					
ANR	5616807	ExpressionStatement	m_result_msg = VMGAHP_ERR_CRITICAL	1739:2:45879:45913	5616521	0	True				
ANR	5616808	AssignmentExpression	m_result_msg = VMGAHP_ERR_CRITICAL		5616521	0		=			
ANR	5616809	Identifier	m_result_msg		5616521	0					
ANR	5616810	Identifier	VMGAHP_ERR_CRITICAL		5616521	1					
ANR	5616811	ReturnStatement	return false ;	1740:2:45917:45929	5616521	1	True				
ANR	5616812	Identifier	false		5616521	0					
ANR	5616813	ExpressionStatement	m_configfile = tmp_config_name . Value ( )	1744:1:45959:45997	5616521	16	True				
ANR	5616814	AssignmentExpression	m_configfile = tmp_config_name . Value ( )		5616521	0		=			
ANR	5616815	Identifier	m_configfile		5616521	0					
ANR	5616816	CallExpression	tmp_config_name . Value ( )		5616521	1					
ANR	5616817	Callee	tmp_config_name . Value		5616521	0					
ANR	5616818	MemberAccess	tmp_config_name . Value		5616521	0					
ANR	5616819	Identifier	tmp_config_name		5616521	0					
ANR	5616820	Identifier	Value		5616521	1					
ANR	5616821	ArgumentList			5616521	1					
ANR	5616822	ReturnStatement	return true ;	1745:1:46000:46011	5616521	17	True				
ANR	5616823	Identifier	true		5616521	0					
ANR	5616824	ReturnType	bool		5616521	1					
ANR	5616825	Identifier	KVMType :: CreateConfigFile		5616521	2					
ANR	5616826	ParameterList			5616521	3					
ANR	5616827	CFGEntryNode	ENTRY		5616521		True				
ANR	5616828	CFGExitNode	EXIT		5616521		True				
ANR	5616829	Symbol	m_result_msg		5616521						
ANR	5616830	Symbol	parseCommonParamFromClassAd		5616521						
ANR	5616831	Symbol	m_workingpath . Value		5616521						
ANR	5616832	Symbol	m_vm_mem		5616521						
ANR	5616833	Symbol	VMGAHP_ERR_JOBCLASSAD_XEN_NO_DISK_PARAM		5616521						
ANR	5616834	Symbol	ckpt_suspend_file		5616521						
ANR	5616835	Symbol	VMGAHP_ERR_CRITICAL		5616521						
ANR	5616836	Symbol	m_configfile		5616521						
ANR	5616837	Symbol	findCkptConfigAndSuspendFile		5616521						
ANR	5616838	Symbol	VMGAHP_ERR_JOBCLASSAD_KVM_MISMATCHED_CHECKPOINT		5616521						
ANR	5616839	Symbol	m_transfer_intermediate_files . isEmpty		5616521						
ANR	5616840	Symbol	m_vm_checkpoint		5616521						
ANR	5616841	Symbol	priv		5616521						
ANR	5616842	Symbol	m_has_transferred_disk_file		5616521						
ANR	5616843	Symbol	VMPARAM_VM_DISK		5616521						
ANR	5616844	Symbol	m_transfer_intermediate_files		5616521						
ANR	5616845	Symbol	XEN_CONFIG_FILE_NAME		5616521						
ANR	5616846	Symbol	tmp_config_name		5616521						
ANR	5616847	Symbol	m_classAd . LookupString		5616521						
ANR	5616848	Symbol	kvm_disk . Value		5616521						
ANR	5616849	Symbol	m_suspendfile		5616521						
ANR	5616850	Symbol	DIR_DELIM_CHAR		5616521						
ANR	5616851	Symbol	false		5616521						
ANR	5616852	Symbol	D_ALWAYS		5616521						
ANR	5616853	Symbol	D_FULLDEBUG		5616521						
ANR	5616854	Symbol	set_root_priv		5616521						
ANR	5616855	Symbol	ckpt_config_file		5616521						
ANR	5616856	Symbol	CreateXenVMConfigFile		5616521						
ANR	5616857	Symbol	m_restart_with_ckpt		5616521						
ANR	5616858	Symbol	m_workingpath		5616521						
ANR	5616859	Symbol	VMGAHP_ERR_JOBCLASSAD_KVM_INVALID_DISK_PARAM		5616521						
ANR	5616860	Symbol	tmp_config_name . Value		5616521						
ANR	5616861	Symbol	true		5616521						
ANR	5616862	Symbol	parseXenDiskParam		5616521						
ANR	5616863	Symbol	kvm_disk		5616521						
ANR	5616864	Symbol	m_classAd		5616521						
