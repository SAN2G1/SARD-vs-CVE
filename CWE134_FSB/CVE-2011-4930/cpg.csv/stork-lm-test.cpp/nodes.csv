command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5261229	File	data/converged/CVE-2011-4930_htcondor/stork-lm-test.cpp								
ANR	5261230	DeclStmt									
ANR	5261231	Decl							list < DCLeaseManagerLease * >	list < DCLeaseManagerLease * >	mylist
ANR	5261232	Function	main	28:0:1001:1490							
ANR	5261233	FunctionDef	"main (int argc , char * * argv)"		5261232	0					
ANR	5261234	CompoundStatement		29:0:1036:1490	5261232	0					
ANR	5261235	ExpressionStatement	( void ) argc	30:1:1039:1050	5261232	0	True				
ANR	5261236	CastExpression	( void ) argc		5261232	0					
ANR	5261237	CastTarget	void		5261232	0					
ANR	5261238	Identifier	argc		5261232	1					
ANR	5261239	ExpressionStatement	( void ) argv	31:1:1053:1064	5261232	1	True				
ANR	5261240	CastExpression	( void ) argv		5261232	0					
ANR	5261241	CastTarget	void		5261232	0					
ANR	5261242	Identifier	argv		5261232	1					
ANR	5261243	IdentifierDeclStatement	DCLeaseManagerLease l ;	33:1:1068:1089	5261232	2	True				
ANR	5261244	IdentifierDecl	l		5261232	0					
ANR	5261245	IdentifierDeclType	DCLeaseManagerLease		5261232	0					
ANR	5261246	Identifier	l		5261232	1					
ANR	5261247	ExpressionStatement	mylist . push_back ( & l )	34:1:1092:1114	5261232	3	True				
ANR	5261248	CallExpression	mylist . push_back ( & l )		5261232	0					
ANR	5261249	Callee	mylist . push_back		5261232	0					
ANR	5261250	MemberAccess	mylist . push_back		5261232	0					
ANR	5261251	Identifier	mylist		5261232	0					
ANR	5261252	Identifier	push_back		5261232	1					
ANR	5261253	ArgumentList	& l		5261232	1					
ANR	5261254	Argument	& l		5261232	0					
ANR	5261255	UnaryOperationExpression	& l		5261232	0					
ANR	5261256	UnaryOperator	&		5261232	0					
ANR	5261257	Identifier	l		5261232	1					
ANR	5261258	ExpressionStatement	mylist . remove ( & l )	35:1:1117:1135	5261232	4	True				
ANR	5261259	CallExpression	mylist . remove ( & l )		5261232	0					
ANR	5261260	Callee	mylist . remove		5261232	0					
ANR	5261261	MemberAccess	mylist . remove		5261232	0					
ANR	5261262	Identifier	mylist		5261232	0					
ANR	5261263	Identifier	remove		5261232	1					
ANR	5261264	ArgumentList	& l		5261232	1					
ANR	5261265	Argument	& l		5261232	0					
ANR	5261266	UnaryOperationExpression	& l		5261232	0					
ANR	5261267	UnaryOperator	&		5261232	0					
ANR	5261268	Identifier	l		5261232	1					
ANR	5261269	ExpressionStatement	config ( )	37:1:1139:1147	5261232	5	True				
ANR	5261270	CallExpression	config ( )		5261232	0					
ANR	5261271	Callee	config		5261232	0					
ANR	5261272	Identifier	config		5261232	0					
ANR	5261273	ArgumentList			5261232	1					
ANR	5261274	ExpressionStatement	Termlog = 1	38:1:1150:1161	5261232	6	True				
ANR	5261275	AssignmentExpression	Termlog = 1		5261232	0		=			
ANR	5261276	Identifier	Termlog		5261232	0					
ANR	5261277	PrimaryExpression	1		5261232	1					
ANR	5261278	ExpressionStatement	"dprintf_config ( ""TOOL"" )"	39:1:1164:1186	5261232	7	True				
ANR	5261279	CallExpression	"dprintf_config ( ""TOOL"" )"		5261232	0					
ANR	5261280	Callee	dprintf_config		5261232	0					
ANR	5261281	Identifier	dprintf_config		5261232	0					
ANR	5261282	ArgumentList	"""TOOL"""		5261232	1					
ANR	5261283	Argument	"""TOOL"""		5261232	0					
ANR	5261284	PrimaryExpression	"""TOOL"""		5261232	0					
ANR	5261285	IdentifierDeclStatement	StorkLeaseManager mm ;	41:1:1190:1210	5261232	8	True				
ANR	5261286	IdentifierDecl	mm		5261232	0					
ANR	5261287	IdentifierDeclType	StorkLeaseManager		5261232	0					
ANR	5261288	Identifier	mm		5261232	1					
ANR	5261289	ExpressionStatement	"printf ( ""mm size %d @ %p\\n"" , sizeof ( mm ) , & mm )"	42:1:1213:1259	5261232	9	True				
ANR	5261290	CallExpression	"printf ( ""mm size %d @ %p\\n"" , sizeof ( mm ) , & mm )"		5261232	0					
ANR	5261291	Callee	printf		5261232	0					
ANR	5261292	Identifier	printf		5261232	0					
ANR	5261293	ArgumentList	"""mm size %d @ %p\\n"""		5261232	1					
ANR	5261294	Argument	"""mm size %d @ %p\\n"""		5261232	0					
ANR	5261295	PrimaryExpression	"""mm size %d @ %p\\n"""		5261232	0					
ANR	5261296	Argument	sizeof ( mm )		5261232	1					
ANR	5261297	SizeofExpression	sizeof ( mm )		5261232	0					
ANR	5261298	Sizeof	sizeof		5261232	0					
ANR	5261299	SizeofOperand	mm		5261232	1					
ANR	5261300	Argument	& mm		5261232	2					
ANR	5261301	UnaryOperationExpression	& mm		5261232	0					
ANR	5261302	UnaryOperator	&		5261232	0					
ANR	5261303	Identifier	mm		5261232	1					
ANR	5261304	IdentifierDeclStatement	const char * result = NULL ;	43:1:1262:1287	5261232	10	True				
ANR	5261305	IdentifierDecl	* result = NULL		5261232	0					
ANR	5261306	IdentifierDeclType	const char *		5261232	0					
ANR	5261307	Identifier	result		5261232	1					
ANR	5261308	AssignmentExpression	* result = NULL		5261232	2		=			
ANR	5261309	Identifier	NULL		5261232	0					
ANR	5261310	Identifier	NULL		5261232	1					
ANR	5261311	ExpressionStatement	result = mm . getTransferDirectory ( NULL )	44:1:1290:1328	5261232	11	True				
ANR	5261312	AssignmentExpression	result = mm . getTransferDirectory ( NULL )		5261232	0		=			
ANR	5261313	Identifier	result		5261232	0					
ANR	5261314	CallExpression	mm . getTransferDirectory ( NULL )		5261232	1					
ANR	5261315	Callee	mm . getTransferDirectory		5261232	0					
ANR	5261316	MemberAccess	mm . getTransferDirectory		5261232	0					
ANR	5261317	Identifier	mm		5261232	0					
ANR	5261318	Identifier	getTransferDirectory		5261232	1					
ANR	5261319	ArgumentList	NULL		5261232	1					
ANR	5261320	Argument	NULL		5261232	0					
ANR	5261321	Identifier	NULL		5261232	0					
ANR	5261322	ExpressionStatement	"printf ( ""TODD dest = %s\\n"" , result ? result : ""(NULL)"" )"	45:1:1331:1386	5261232	12	True				
ANR	5261323	CallExpression	"printf ( ""TODD dest = %s\\n"" , result ? result : ""(NULL)"" )"		5261232	0					
ANR	5261324	Callee	printf		5261232	0					
ANR	5261325	Identifier	printf		5261232	0					
ANR	5261326	ArgumentList	"""TODD dest = %s\\n"""		5261232	1					
ANR	5261327	Argument	"""TODD dest = %s\\n"""		5261232	0					
ANR	5261328	PrimaryExpression	"""TODD dest = %s\\n"""		5261232	0					
ANR	5261329	Argument	"result ? result : ""(NULL)"""		5261232	1					
ANR	5261330	ConditionalExpression	"result ? result : ""(NULL)"""		5261232	0					
ANR	5261331	Condition	result		5261232	0					
ANR	5261332	Identifier	result		5261232	0					
ANR	5261333	Identifier	result		5261232	1					
ANR	5261334	PrimaryExpression	"""(NULL)"""		5261232	2					
ANR	5261335	ExpressionStatement	result = mm . getTransferDirectory ( NULL )	46:1:1389:1427	5261232	13	True				
ANR	5261336	AssignmentExpression	result = mm . getTransferDirectory ( NULL )		5261232	0		=			
ANR	5261337	Identifier	result		5261232	0					
ANR	5261338	CallExpression	mm . getTransferDirectory ( NULL )		5261232	1					
ANR	5261339	Callee	mm . getTransferDirectory		5261232	0					
ANR	5261340	MemberAccess	mm . getTransferDirectory		5261232	0					
ANR	5261341	Identifier	mm		5261232	0					
ANR	5261342	Identifier	getTransferDirectory		5261232	1					
ANR	5261343	ArgumentList	NULL		5261232	1					
ANR	5261344	Argument	NULL		5261232	0					
ANR	5261345	Identifier	NULL		5261232	0					
ANR	5261346	ExpressionStatement	"printf ( ""TODD dest = %s\\n"" , result ? result : ""(NULL)"" )"	47:1:1430:1485	5261232	14	True				
ANR	5261347	CallExpression	"printf ( ""TODD dest = %s\\n"" , result ? result : ""(NULL)"" )"		5261232	0					
ANR	5261348	Callee	printf		5261232	0					
ANR	5261349	Identifier	printf		5261232	0					
ANR	5261350	ArgumentList	"""TODD dest = %s\\n"""		5261232	1					
ANR	5261351	Argument	"""TODD dest = %s\\n"""		5261232	0					
ANR	5261352	PrimaryExpression	"""TODD dest = %s\\n"""		5261232	0					
ANR	5261353	Argument	"result ? result : ""(NULL)"""		5261232	1					
ANR	5261354	ConditionalExpression	"result ? result : ""(NULL)"""		5261232	0					
ANR	5261355	Condition	result		5261232	0					
ANR	5261356	Identifier	result		5261232	0					
ANR	5261357	Identifier	result		5261232	1					
ANR	5261358	PrimaryExpression	"""(NULL)"""		5261232	2					
ANR	5261359	ReturnType	int		5261232	1					
ANR	5261360	Identifier	main		5261232	2					
ANR	5261361	ParameterList	"int argc , char * * argv"		5261232	3					
ANR	5261362	Parameter	int argc	28:11:1012:1019	5261232	0	True				
ANR	5261363	ParameterType	int		5261232	0					
ANR	5261364	Identifier	argc		5261232	1					
ANR	5261365	Parameter	char * * argv	28:21:1022:1032	5261232	1	True				
ANR	5261366	ParameterType	char * *		5261232	0					
ANR	5261367	Identifier	argv		5261232	1					
ANR	5261368	CFGEntryNode	ENTRY		5261232		True				
ANR	5261369	CFGExitNode	EXIT		5261232		True				
ANR	5261370	Symbol	argc		5261232						
ANR	5261371	Symbol	mm		5261232						
ANR	5261372	Symbol	result		5261232						
ANR	5261373	Symbol	& l		5261232						
ANR	5261374	Symbol	NULL		5261232						
ANR	5261375	Symbol	mm . getTransferDirectory		5261232						
ANR	5261376	Symbol	mylist		5261232						
ANR	5261377	Symbol	Termlog		5261232						
ANR	5261378	Symbol	& mm		5261232						
ANR	5261379	Symbol	l		5261232						
ANR	5261380	Symbol	argv		5261232						
