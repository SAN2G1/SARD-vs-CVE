command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2399052	File	data/converged/CVE-2011-4930_htcondor/src_.deprecate_stork_dap_q.cpp								
ANR	2399053	Function	main	36:0:1185:2670							
ANR	2399054	FunctionDef	"main (int argc , char * * argv)"		2399053	0					
ANR	2399055	CompoundStatement		37:0:1217:2670	2399053	0					
ANR	2399056	IdentifierDeclStatement	struct stork_global_opts global_opts ;	38:1:1220:1256	2399053	0	True				
ANR	2399057	IdentifierDecl	global_opts		2399053	0					
ANR	2399058	IdentifierDeclType	struct stork_global_opts		2399053	0					
ANR	2399059	Identifier	global_opts		2399053	1					
ANR	2399060	ExpressionStatement	config ( )	39:1:1259:1267	2399053	1	True				
ANR	2399061	CallExpression	config ( )		2399053	0					
ANR	2399062	Callee	config		2399053	0					
ANR	2399063	Identifier	config		2399053	0					
ANR	2399064	ArgumentList			2399053	1					
ANR	2399065	ExpressionStatement	"stork_parse_global_opts ( argc , argv , USAGE , & global_opts , true )"	42:1:1327:1389	2399053	2	True				
ANR	2399066	CallExpression	"stork_parse_global_opts ( argc , argv , USAGE , & global_opts , true )"		2399053	0					
ANR	2399067	Callee	stork_parse_global_opts		2399053	0					
ANR	2399068	Identifier	stork_parse_global_opts		2399053	0					
ANR	2399069	ArgumentList	argc		2399053	1					
ANR	2399070	Argument	argc		2399053	0					
ANR	2399071	Identifier	argc		2399053	0					
ANR	2399072	Argument	argv		2399053	1					
ANR	2399073	Identifier	argv		2399053	0					
ANR	2399074	Argument	USAGE		2399053	2					
ANR	2399075	Identifier	USAGE		2399053	0					
ANR	2399076	Argument	& global_opts		2399053	3					
ANR	2399077	UnaryOperationExpression	& global_opts		2399053	0					
ANR	2399078	UnaryOperator	&		2399053	0					
ANR	2399079	Identifier	global_opts		2399053	1					
ANR	2399080	Argument	true		2399053	4					
ANR	2399081	Identifier	true		2399053	0					
ANR	2399082	SwitchStatement	switch ( argc )		2399053	3					
ANR	2399083	Condition	argc	45:9:1430:1433	2399053	0	True				
ANR	2399084	Identifier	argc		2399053	0					
ANR	2399085	CompoundStatement		9:15:218:218	2399053	1					
ANR	2399086	Label	case 1 :	46:2:1440:1446	2399053	0	True				
ANR	2399087	BreakStatement	break ;	48:3:1468:1473	2399053	1	True				
ANR	2399088	Label	case 2 :	49:2:1477:1483	2399053	2	True				
ANR	2399089	IfStatement	if ( argv [ 1 ] [ 0 ] == '-' )		2399053	3					
ANR	2399090	Condition	argv [ 1 ] [ 0 ] == '-'	51:7:1554:1570	2399053	0	True				
ANR	2399091	EqualityExpression	argv [ 1 ] [ 0 ] == '-'		2399053	0		==			
ANR	2399092	ArrayIndexing	argv [ 1 ] [ 0 ]		2399053	0					
ANR	2399093	ArrayIndexing	argv [ 1 ]		2399053	0					
ANR	2399094	Identifier	argv		2399053	0					
ANR	2399095	PrimaryExpression	1		2399053	1					
ANR	2399096	PrimaryExpression	0		2399053	1					
ANR	2399097	PrimaryExpression	'-'		2399053	1					
ANR	2399098	CompoundStatement		15:26:355:355	2399053	1					
ANR	2399099	ExpressionStatement	"fprintf ( stderr , ""unknown option: '%s'\\n"" , argv [ 1 ] )"	53:4:1613:1663	2399053	0	True				
ANR	2399100	CallExpression	"fprintf ( stderr , ""unknown option: '%s'\\n"" , argv [ 1 ] )"		2399053	0					
ANR	2399101	Callee	fprintf		2399053	0					
ANR	2399102	Identifier	fprintf		2399053	0					
ANR	2399103	ArgumentList	stderr		2399053	1					
ANR	2399104	Argument	stderr		2399053	0					
ANR	2399105	Identifier	stderr		2399053	0					
ANR	2399106	Argument	"""unknown option: '%s'\\n"""		2399053	1					
ANR	2399107	PrimaryExpression	"""unknown option: '%s'\\n"""		2399053	0					
ANR	2399108	Argument	argv [ 1 ]		2399053	2					
ANR	2399109	ArrayIndexing	argv [ 1 ]		2399053	0					
ANR	2399110	Identifier	argv		2399053	0					
ANR	2399111	PrimaryExpression	1		2399053	1					
ANR	2399112	ExpressionStatement	"stork_print_usage ( stderr , argv [ 0 ] , USAGE , true )"	54:4:1669:1716	2399053	1	True				
ANR	2399113	CallExpression	"stork_print_usage ( stderr , argv [ 0 ] , USAGE , true )"		2399053	0					
ANR	2399114	Callee	stork_print_usage		2399053	0					
ANR	2399115	Identifier	stork_print_usage		2399053	0					
ANR	2399116	ArgumentList	stderr		2399053	1					
ANR	2399117	Argument	stderr		2399053	0					
ANR	2399118	Identifier	stderr		2399053	0					
ANR	2399119	Argument	argv [ 0 ]		2399053	1					
ANR	2399120	ArrayIndexing	argv [ 0 ]		2399053	0					
ANR	2399121	Identifier	argv		2399053	0					
ANR	2399122	PrimaryExpression	0		2399053	1					
ANR	2399123	Argument	USAGE		2399053	2					
ANR	2399124	Identifier	USAGE		2399053	0					
ANR	2399125	Argument	true		2399053	3					
ANR	2399126	Identifier	true		2399053	0					
ANR	2399127	ExpressionStatement	exit ( 1 )	55:4:1722:1729	2399053	2	True				
ANR	2399128	CallExpression	exit ( 1 )		2399053	0					
ANR	2399129	Callee	exit		2399053	0					
ANR	2399130	Identifier	exit		2399053	0					
ANR	2399131	ArgumentList	1		2399053	1					
ANR	2399132	Argument	1		2399053	0					
ANR	2399133	PrimaryExpression	1		2399053	0					
ANR	2399134	ExpressionStatement	global_opts . server = argv [ 1 ]	57:3:1739:1767	2399053	4	True				
ANR	2399135	AssignmentExpression	global_opts . server = argv [ 1 ]		2399053	0		=			
ANR	2399136	MemberAccess	global_opts . server		2399053	0					
ANR	2399137	Identifier	global_opts		2399053	0					
ANR	2399138	Identifier	server		2399053	1					
ANR	2399139	ArrayIndexing	argv [ 1 ]		2399053	1					
ANR	2399140	Identifier	argv		2399053	0					
ANR	2399141	PrimaryExpression	1		2399053	1					
ANR	2399142	BreakStatement	break ;	58:3:1772:1777	2399053	5	True				
ANR	2399143	Label	default :	59:2:1781:1788	2399053	6	True				
ANR	2399144	Identifier	default		2399053	0					
ANR	2399145	ExpressionStatement	"fprintf ( stderr , ""too many arguments\\n"" )"	60:3:1793:1832	2399053	7	True				
ANR	2399146	CallExpression	"fprintf ( stderr , ""too many arguments\\n"" )"		2399053	0					
ANR	2399147	Callee	fprintf		2399053	0					
ANR	2399148	Identifier	fprintf		2399053	0					
ANR	2399149	ArgumentList	stderr		2399053	1					
ANR	2399150	Argument	stderr		2399053	0					
ANR	2399151	Identifier	stderr		2399053	0					
ANR	2399152	Argument	"""too many arguments\\n"""		2399053	1					
ANR	2399153	PrimaryExpression	"""too many arguments\\n"""		2399053	0					
ANR	2399154	ExpressionStatement	"stork_print_usage ( stderr , argv [ 0 ] , USAGE , true )"	61:3:1837:1884	2399053	8	True				
ANR	2399155	CallExpression	"stork_print_usage ( stderr , argv [ 0 ] , USAGE , true )"		2399053	0					
ANR	2399156	Callee	stork_print_usage		2399053	0					
ANR	2399157	Identifier	stork_print_usage		2399053	0					
ANR	2399158	ArgumentList	stderr		2399053	1					
ANR	2399159	Argument	stderr		2399053	0					
ANR	2399160	Identifier	stderr		2399053	0					
ANR	2399161	Argument	argv [ 0 ]		2399053	1					
ANR	2399162	ArrayIndexing	argv [ 0 ]		2399053	0					
ANR	2399163	Identifier	argv		2399053	0					
ANR	2399164	PrimaryExpression	0		2399053	1					
ANR	2399165	Argument	USAGE		2399053	2					
ANR	2399166	Identifier	USAGE		2399053	0					
ANR	2399167	Argument	true		2399053	3					
ANR	2399168	Identifier	true		2399053	0					
ANR	2399169	ExpressionStatement	exit ( 1 )	62:3:1889:1896	2399053	9	True				
ANR	2399170	CallExpression	exit ( 1 )		2399053	0					
ANR	2399171	Callee	exit		2399053	0					
ANR	2399172	Identifier	exit		2399053	0					
ANR	2399173	ArgumentList	1		2399053	1					
ANR	2399174	Argument	1		2399053	0					
ANR	2399175	PrimaryExpression	1		2399053	0					
ANR	2399176	IdentifierDeclStatement	char * error_reason = NULL ;	66:2:1905:1931	2399053	4	True				
ANR	2399177	IdentifierDecl	* error_reason = NULL		2399053	0					
ANR	2399178	IdentifierDeclType	char *		2399053	0					
ANR	2399179	Identifier	error_reason		2399053	1					
ANR	2399180	AssignmentExpression	* error_reason = NULL		2399053	2		=			
ANR	2399181	Identifier	NULL		2399053	0					
ANR	2399182	Identifier	NULL		2399053	1					
ANR	2399183	IdentifierDeclStatement	int result_size = 0 ;	67:2:1935:1954	2399053	5	True				
ANR	2399184	IdentifierDecl	result_size = 0		2399053	0					
ANR	2399185	IdentifierDeclType	int		2399053	0					
ANR	2399186	Identifier	result_size		2399053	1					
ANR	2399187	AssignmentExpression	result_size = 0		2399053	2		=			
ANR	2399188	Identifier	result_size		2399053	0					
ANR	2399189	PrimaryExpression	0		2399053	1					
ANR	2399190	IdentifierDeclStatement	classad :: ClassAd * * result = NULL ;	68:2:1958:1991	2399053	6	True				
ANR	2399191	IdentifierDecl	* * result = NULL		2399053	0					
ANR	2399192	IdentifierDeclType	classad :: ClassAd * *		2399053	0					
ANR	2399193	Identifier	result		2399053	1					
ANR	2399194	AssignmentExpression	* * result = NULL		2399053	2		=			
ANR	2399195	Identifier	NULL		2399053	0					
ANR	2399196	Identifier	NULL		2399053	1					
ANR	2399197	IdentifierDeclStatement	"int rc = stork_list ( global_opts . server , result_size , result , error_reason ) ;"	70:2:1996:2094	2399053	7	True				
ANR	2399198	IdentifierDecl	"rc = stork_list ( global_opts . server , result_size , result , error_reason )"		2399053	0					
ANR	2399199	IdentifierDeclType	int		2399053	0					
ANR	2399200	Identifier	rc		2399053	1					
ANR	2399201	AssignmentExpression	"rc = stork_list ( global_opts . server , result_size , result , error_reason )"		2399053	2		=			
ANR	2399202	Identifier	rc		2399053	0					
ANR	2399203	CallExpression	"stork_list ( global_opts . server , result_size , result , error_reason )"		2399053	1					
ANR	2399204	Callee	stork_list		2399053	0					
ANR	2399205	Identifier	stork_list		2399053	0					
ANR	2399206	ArgumentList	global_opts . server		2399053	1					
ANR	2399207	Argument	global_opts . server		2399053	0					
ANR	2399208	MemberAccess	global_opts . server		2399053	0					
ANR	2399209	Identifier	global_opts		2399053	0					
ANR	2399210	Identifier	server		2399053	1					
ANR	2399211	Argument	result_size		2399053	1					
ANR	2399212	Identifier	result_size		2399053	0					
ANR	2399213	Argument	result		2399053	2					
ANR	2399214	Identifier	result		2399053	0					
ANR	2399215	Argument	error_reason		2399053	3					
ANR	2399216	Identifier	error_reason		2399053	0					
ANR	2399217	IfStatement	if ( ! rc )		2399053	8					
ANR	2399218	Condition	! rc	77:6:2106:2108	2399053	0	True				
ANR	2399219	UnaryOperationExpression	! rc		2399053	0					
ANR	2399220	UnaryOperator	!		2399053	0					
ANR	2399221	Identifier	rc		2399053	1					
ANR	2399222	CompoundStatement		41:11:893:893	2399053	1					
ANR	2399223	ExpressionStatement	"fprintf ( stderr , ""ERROR getting list of jobs (%s)\\n"" , error_reason )"	78:3:2116:2190	2399053	0	True				
ANR	2399224	CallExpression	"fprintf ( stderr , ""ERROR getting list of jobs (%s)\\n"" , error_reason )"		2399053	0					
ANR	2399225	Callee	fprintf		2399053	0					
ANR	2399226	Identifier	fprintf		2399053	0					
ANR	2399227	ArgumentList	stderr		2399053	1					
ANR	2399228	Argument	stderr		2399053	0					
ANR	2399229	Identifier	stderr		2399053	0					
ANR	2399230	Argument	"""ERROR getting list of jobs (%s)\\n"""		2399053	1					
ANR	2399231	PrimaryExpression	"""ERROR getting list of jobs (%s)\\n"""		2399053	0					
ANR	2399232	Argument	error_reason		2399053	2					
ANR	2399233	Identifier	error_reason		2399053	0					
ANR	2399234	ElseStatement	else		2399053	0					
ANR	2399235	CompoundStatement		52:3:1165:1170	2399053	0					
ANR	2399236	ExpressionStatement	"fprintf ( stdout , ""===============\\n"" )"	81:3:2206:2242	2399053	0	True				
ANR	2399237	CallExpression	"fprintf ( stdout , ""===============\\n"" )"		2399053	0					
ANR	2399238	Callee	fprintf		2399053	0					
ANR	2399239	Identifier	fprintf		2399053	0					
ANR	2399240	ArgumentList	stdout		2399053	1					
ANR	2399241	Argument	stdout		2399053	0					
ANR	2399242	Identifier	stdout		2399053	0					
ANR	2399243	Argument	"""===============\\n"""		2399053	1					
ANR	2399244	PrimaryExpression	"""===============\\n"""		2399053	0					
ANR	2399245	ExpressionStatement	"fprintf ( stdout , ""job queue:\\n"" )"	82:3:2247:2278	2399053	1	True				
ANR	2399246	CallExpression	"fprintf ( stdout , ""job queue:\\n"" )"		2399053	0					
ANR	2399247	Callee	fprintf		2399053	0					
ANR	2399248	Identifier	fprintf		2399053	0					
ANR	2399249	ArgumentList	stdout		2399053	1					
ANR	2399250	Argument	stdout		2399053	0					
ANR	2399251	Identifier	stdout		2399053	0					
ANR	2399252	Argument	"""job queue:\\n"""		2399053	1					
ANR	2399253	PrimaryExpression	"""job queue:\\n"""		2399053	0					
ANR	2399254	ExpressionStatement	"fprintf ( stdout , ""===============\\n"" )"	83:3:2283:2319	2399053	2	True				
ANR	2399255	CallExpression	"fprintf ( stdout , ""===============\\n"" )"		2399053	0					
ANR	2399256	Callee	fprintf		2399053	0					
ANR	2399257	Identifier	fprintf		2399053	0					
ANR	2399258	ArgumentList	stdout		2399053	1					
ANR	2399259	Argument	stdout		2399053	0					
ANR	2399260	Identifier	stdout		2399053	0					
ANR	2399261	Argument	"""===============\\n"""		2399053	1					
ANR	2399262	PrimaryExpression	"""===============\\n"""		2399053	0					
ANR	2399263	IdentifierDeclStatement	classad :: PrettyPrint unparser ;	85:3:2325:2354	2399053	3	True				
ANR	2399264	IdentifierDecl	unparser		2399053	0					
ANR	2399265	IdentifierDeclType	classad :: PrettyPrint		2399053	0					
ANR	2399266	Identifier	unparser		2399053	1					
ANR	2399267	IdentifierDeclStatement	std :: string buffer ;	86:3:2359:2377	2399053	4	True				
ANR	2399268	IdentifierDecl	buffer		2399053	0					
ANR	2399269	IdentifierDeclType	std :: string		2399053	0					
ANR	2399270	Identifier	buffer		2399053	1					
ANR	2399271	IdentifierDeclStatement	int i ;	88:3:2383:2388	2399053	5	True				
ANR	2399272	IdentifierDecl	i		2399053	0					
ANR	2399273	IdentifierDeclType	int		2399053	0					
ANR	2399274	Identifier	i		2399053	1					
ANR	2399275	ForStatement	for ( i = 0 ; i < result_size ; i ++ )		2399053	6					
ANR	2399276	ForInit	i = 0 ;	89:8:2398:2401	2399053	0	True				
ANR	2399277	AssignmentExpression	i = 0		2399053	0		=			
ANR	2399278	Identifier	i		2399053	0					
ANR	2399279	PrimaryExpression	0		2399053	1					
ANR	2399280	Condition	i < result_size	89:13:2403:2415	2399053	1	True				
ANR	2399281	RelationalExpression	i < result_size		2399053	0		<			
ANR	2399282	Identifier	i		2399053	0					
ANR	2399283	Identifier	result_size		2399053	1					
ANR	2399284	PostIncDecOperationExpression	i ++	89:28:2418:2420	2399053	2	True				
ANR	2399285	Identifier	i		2399053	0					
ANR	2399286	IncDec	++		2399053	1					
ANR	2399287	CompoundStatement		53:33:1205:1205	2399053	3					
ANR	2399288	ExpressionStatement	"buffer = """""	90:4:2429:2440	2399053	0	True				
ANR	2399289	AssignmentExpression	"buffer = """""		2399053	0		=			
ANR	2399290	Identifier	buffer		2399053	0					
ANR	2399291	PrimaryExpression	""""""		2399053	1					
ANR	2399292	ExpressionStatement	"unparser . Unparse ( buffer , result [ i ] )"	91:4:2490:2526	2399053	1	True				
ANR	2399293	CallExpression	"unparser . Unparse ( buffer , result [ i ] )"		2399053	0					
ANR	2399294	Callee	unparser . Unparse		2399053	0					
ANR	2399295	MemberAccess	unparser . Unparse		2399053	0					
ANR	2399296	Identifier	unparser		2399053	0					
ANR	2399297	Identifier	Unparse		2399053	1					
ANR	2399298	ArgumentList	buffer		2399053	1					
ANR	2399299	Argument	buffer		2399053	0					
ANR	2399300	Identifier	buffer		2399053	0					
ANR	2399301	Argument	result [ i ]		2399053	1					
ANR	2399302	ArrayIndexing	result [ i ]		2399053	0					
ANR	2399303	Identifier	result		2399053	0					
ANR	2399304	Identifier	i		2399053	1					
ANR	2399305	ExpressionStatement	"fprintf ( stdout , ""\\n%s\\n"" , buffer . c_str ( ) )"	92:4:2532:2574	2399053	2	True				
ANR	2399306	CallExpression	"fprintf ( stdout , ""\\n%s\\n"" , buffer . c_str ( ) )"		2399053	0					
ANR	2399307	Callee	fprintf		2399053	0					
ANR	2399308	Identifier	fprintf		2399053	0					
ANR	2399309	ArgumentList	stdout		2399053	1					
ANR	2399310	Argument	stdout		2399053	0					
ANR	2399311	Identifier	stdout		2399053	0					
ANR	2399312	Argument	"""\\n%s\\n"""		2399053	1					
ANR	2399313	PrimaryExpression	"""\\n%s\\n"""		2399053	0					
ANR	2399314	Argument	buffer . c_str ( )		2399053	2					
ANR	2399315	CallExpression	buffer . c_str ( )		2399053	0					
ANR	2399316	Callee	buffer . c_str		2399053	0					
ANR	2399317	MemberAccess	buffer . c_str		2399053	0					
ANR	2399318	Identifier	buffer		2399053	0					
ANR	2399319	Identifier	c_str		2399053	1					
ANR	2399320	ArgumentList			2399053	1					
ANR	2399321	ExpressionStatement	"fprintf ( stdout , ""===============\\n"" )"	94:3:2584:2620	2399053	7	True				
ANR	2399322	CallExpression	"fprintf ( stdout , ""===============\\n"" )"		2399053	0					
ANR	2399323	Callee	fprintf		2399053	0					
ANR	2399324	Identifier	fprintf		2399053	0					
ANR	2399325	ArgumentList	stdout		2399053	1					
ANR	2399326	Argument	stdout		2399053	0					
ANR	2399327	Identifier	stdout		2399053	0					
ANR	2399328	Argument	"""===============\\n"""		2399053	1					
ANR	2399329	PrimaryExpression	"""===============\\n"""		2399053	0					
ANR	2399330	Statement	delete	95:3:2625:2630	2399053	8	True				
ANR	2399331	Statement	[	95:10:2632:2632	2399053	9	True				
ANR	2399332	Statement	]	95:11:2633:2633	2399053	10	True				
ANR	2399333	ExpressionStatement	result	95:13:2635:2641	2399053	11	True				
ANR	2399334	Identifier	result		2399053	0					
ANR	2399335	ReturnStatement	return ( rc ) ? 0 : 1 ;	98:2:2652:2667	2399053	9	True				
ANR	2399336	ConditionalExpression	( rc ) ? 0 : 1		2399053	0					
ANR	2399337	Condition	rc		2399053	0					
ANR	2399338	Identifier	rc		2399053	0					
ANR	2399339	PrimaryExpression	0		2399053	1					
ANR	2399340	PrimaryExpression	1		2399053	2					
ANR	2399341	ReturnType	int		2399053	1					
ANR	2399342	Identifier	main		2399053	2					
ANR	2399343	ParameterList	"int argc , char * * argv"		2399053	3					
ANR	2399344	Parameter	int argc	36:9:1194:1201	2399053	0	True				
ANR	2399345	ParameterType	int		2399053	0					
ANR	2399346	Identifier	argc		2399053	1					
ANR	2399347	Parameter	char * * argv	36:19:1204:1214	2399053	1	True				
ANR	2399348	ParameterType	char * *		2399053	0					
ANR	2399349	Identifier	argv		2399053	1					
ANR	2399350	CFGEntryNode	ENTRY		2399053		True				
ANR	2399351	CFGExitNode	EXIT		2399053		True				
ANR	2399352	Symbol	argc		2399053						
ANR	2399353	Symbol	buffer . c_str		2399053						
ANR	2399354	Symbol	NULL		2399053						
ANR	2399355	Symbol	stdout		2399053						
ANR	2399356	Symbol	global_opts . server		2399053						
ANR	2399357	Symbol	global_opts		2399053						
ANR	2399358	Symbol	i		2399053						
ANR	2399359	Symbol	* argv		2399053						
ANR	2399360	Symbol	stderr		2399053						
ANR	2399361	Symbol	argv		2399053						
ANR	2399362	Symbol	result		2399053						
ANR	2399363	Symbol	rc		2399053						
ANR	2399364	Symbol	error_reason		2399053						
ANR	2399365	Symbol	* i		2399053						
ANR	2399366	Symbol	USAGE		2399053						
ANR	2399367	Symbol	* result		2399053						
ANR	2399368	Symbol	true		2399053						
ANR	2399369	Symbol	* * argv		2399053						
ANR	2399370	Symbol	stork_list		2399053						
ANR	2399371	Symbol	unparser		2399053						
ANR	2399372	Symbol	buffer		2399053						
ANR	2399373	Symbol	& global_opts		2399053						
ANR	2399374	Symbol	result_size		2399053						
