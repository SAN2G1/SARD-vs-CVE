command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3619370	File	data/converged/CVE-2011-4930_htcondor/src_condor_procd_named_pipe_reader.unix.cpp								
ANR	3619371	Function	NamedPipeReader :: initialize	27:0:973:1327							
ANR	3619372	FunctionDef	NamedPipeReader :: initialize (const char * addr)		3619371	0					
ANR	3619373	CompoundStatement		29:0:1024:1327	3619371	0					
ANR	3619374	ExpressionStatement	ASSERT ( ! m_initialized )	30:1:1027:1049	3619371	0	True				
ANR	3619375	CallExpression	ASSERT ( ! m_initialized )		3619371	0					
ANR	3619376	Callee	ASSERT		3619371	0					
ANR	3619377	Identifier	ASSERT		3619371	0					
ANR	3619378	ArgumentList	! m_initialized		3619371	1					
ANR	3619379	Argument	! m_initialized		3619371	0					
ANR	3619380	UnaryOperationExpression	! m_initialized		3619371	0					
ANR	3619381	UnaryOperator	!		3619371	0					
ANR	3619382	Identifier	m_initialized		3619371	1					
ANR	3619383	ExpressionStatement	ASSERT ( addr != NULL )	32:1:1053:1073	3619371	1	True				
ANR	3619384	CallExpression	ASSERT ( addr != NULL )		3619371	0					
ANR	3619385	Callee	ASSERT		3619371	0					
ANR	3619386	Identifier	ASSERT		3619371	0					
ANR	3619387	ArgumentList	addr != NULL		3619371	1					
ANR	3619388	Argument	addr != NULL		3619371	0					
ANR	3619389	EqualityExpression	addr != NULL		3619371	0		!=			
ANR	3619390	Identifier	addr		3619371	0					
ANR	3619391	Identifier	NULL		3619371	1					
ANR	3619392	ExpressionStatement	m_addr = strdup ( addr )	33:1:1076:1097	3619371	2	True				
ANR	3619393	AssignmentExpression	m_addr = strdup ( addr )		3619371	0		=			
ANR	3619394	Identifier	m_addr		3619371	0					
ANR	3619395	CallExpression	strdup ( addr )		3619371	1					
ANR	3619396	Callee	strdup		3619371	0					
ANR	3619397	Identifier	strdup		3619371	0					
ANR	3619398	ArgumentList	addr		3619371	1					
ANR	3619399	Argument	addr		3619371	0					
ANR	3619400	Identifier	addr		3619371	0					
ANR	3619401	ExpressionStatement	ASSERT ( m_addr != NULL )	34:1:1100:1122	3619371	3	True				
ANR	3619402	CallExpression	ASSERT ( m_addr != NULL )		3619371	0					
ANR	3619403	Callee	ASSERT		3619371	0					
ANR	3619404	Identifier	ASSERT		3619371	0					
ANR	3619405	ArgumentList	m_addr != NULL		3619371	1					
ANR	3619406	Argument	m_addr != NULL		3619371	0					
ANR	3619407	EqualityExpression	m_addr != NULL		3619371	0		!=			
ANR	3619408	Identifier	m_addr		3619371	0					
ANR	3619409	Identifier	NULL		3619371	1					
ANR	3619410	IfStatement	"if ( ! named_pipe_create ( addr , m_pipe , m_dummy_pipe ) )"		3619371	4					
ANR	3619411	Condition	"! named_pipe_create ( addr , m_pipe , m_dummy_pipe )"	36:5:1130:1175	3619371	0	True				
ANR	3619412	UnaryOperationExpression	"! named_pipe_create ( addr , m_pipe , m_dummy_pipe )"		3619371	0					
ANR	3619413	UnaryOperator	!		3619371	0					
ANR	3619414	CallExpression	"named_pipe_create ( addr , m_pipe , m_dummy_pipe )"		3619371	1					
ANR	3619415	Callee	named_pipe_create		3619371	0					
ANR	3619416	Identifier	named_pipe_create		3619371	0					
ANR	3619417	ArgumentList	addr		3619371	1					
ANR	3619418	Argument	addr		3619371	0					
ANR	3619419	Identifier	addr		3619371	0					
ANR	3619420	Argument	m_pipe		3619371	1					
ANR	3619421	Identifier	m_pipe		3619371	0					
ANR	3619422	Argument	m_dummy_pipe		3619371	2					
ANR	3619423	Identifier	m_dummy_pipe		3619371	0					
ANR	3619424	CompoundStatement		8:53:153:153	3619371	1					
ANR	3619425	ExpressionStatement	"dprintf ( D_ALWAYS , ""failed to initialize named pipe at %s\\n"" , addr )"	37:2:1182:1268	3619371	0	True				
ANR	3619426	CallExpression	"dprintf ( D_ALWAYS , ""failed to initialize named pipe at %s\\n"" , addr )"		3619371	0					
ANR	3619427	Callee	dprintf		3619371	0					
ANR	3619428	Identifier	dprintf		3619371	0					
ANR	3619429	ArgumentList	D_ALWAYS		3619371	1					
ANR	3619430	Argument	D_ALWAYS		3619371	0					
ANR	3619431	Identifier	D_ALWAYS		3619371	0					
ANR	3619432	Argument	"""failed to initialize named pipe at %s\\n"""		3619371	1					
ANR	3619433	PrimaryExpression	"""failed to initialize named pipe at %s\\n"""		3619371	0					
ANR	3619434	Argument	addr		3619371	2					
ANR	3619435	Identifier	addr		3619371	0					
ANR	3619436	ReturnStatement	return false ;	40:2:1272:1284	3619371	1	True				
ANR	3619437	Identifier	false		3619371	0					
ANR	3619438	ExpressionStatement	m_initialized = true	43:1:1291:1311	3619371	5	True				
ANR	3619439	AssignmentExpression	m_initialized = true		3619371	0		=			
ANR	3619440	Identifier	m_initialized		3619371	0					
ANR	3619441	Identifier	true		3619371	1					
ANR	3619442	ReturnStatement	return true ;	44:1:1314:1325	3619371	6	True				
ANR	3619443	Identifier	true		3619371	0					
ANR	3619444	ReturnType	bool		3619371	1					
ANR	3619445	Identifier	NamedPipeReader :: initialize		3619371	2					
ANR	3619446	ParameterList	const char * addr		3619371	3					
ANR	3619447	Parameter	const char * addr	28:28:1006:1021	3619371	0	True				
ANR	3619448	ParameterType	const char *		3619371	0					
ANR	3619449	Identifier	addr		3619371	1					
ANR	3619450	CFGEntryNode	ENTRY		3619371		True				
ANR	3619451	CFGExitNode	EXIT		3619371		True				
ANR	3619452	Symbol	m_initialized		3619371						
ANR	3619453	Symbol	NULL		3619371						
ANR	3619454	Symbol	named_pipe_create		3619371						
ANR	3619455	Symbol	D_ALWAYS		3619371						
ANR	3619456	Symbol	false		3619371						
ANR	3619457	Symbol	true		3619371						
ANR	3619458	Symbol	strdup		3619371						
ANR	3619459	Symbol	m_addr		3619371						
ANR	3619460	Symbol	addr		3619371						
ANR	3619461	Symbol	m_dummy_pipe		3619371						
ANR	3619462	Symbol	m_pipe		3619371						
ANR	3619463	Function	NamedPipeReader :: ~NamedPipeReader	47:0:1330:1638							
ANR	3619464	FunctionDef	NamedPipeReader :: ~NamedPipeReader ()		3619463	0					
ANR	3619465	CompoundStatement		48:0:1366:1638	3619463	0					
ANR	3619466	IfStatement	if ( ! m_initialized )		3619463	0					
ANR	3619467	Condition	! m_initialized	51:5:1420:1433	3619463	0	True				
ANR	3619468	UnaryOperationExpression	! m_initialized		3619463	0					
ANR	3619469	UnaryOperator	!		3619463	0					
ANR	3619470	Identifier	m_initialized		3619463	1					
ANR	3619471	CompoundStatement		4:21:69:69	3619463	1					
ANR	3619472	ReturnStatement	return ;	52:2:1440:1446	3619463	0	True				
ANR	3619473	ExpressionStatement	close ( m_dummy_pipe )	57:1:1494:1513	3619463	1	True				
ANR	3619474	CallExpression	close ( m_dummy_pipe )		3619463	0					
ANR	3619475	Callee	close		3619463	0					
ANR	3619476	Identifier	close		3619463	0					
ANR	3619477	ArgumentList	m_dummy_pipe		3619463	1					
ANR	3619478	Argument	m_dummy_pipe		3619463	0					
ANR	3619479	Identifier	m_dummy_pipe		3619463	0					
ANR	3619480	ExpressionStatement	close ( m_pipe )	58:1:1516:1529	3619463	2	True				
ANR	3619481	CallExpression	close ( m_pipe )		3619463	0					
ANR	3619482	Callee	close		3619463	0					
ANR	3619483	Identifier	close		3619463	0					
ANR	3619484	ArgumentList	m_pipe		3619463	1					
ANR	3619485	Argument	m_pipe		3619463	0					
ANR	3619486	Identifier	m_pipe		3619463	0					
ANR	3619487	ExpressionStatement	unlink ( m_addr )	62:1:1574:1588	3619463	3	True				
ANR	3619488	CallExpression	unlink ( m_addr )		3619463	0					
ANR	3619489	Callee	unlink		3619463	0					
ANR	3619490	Identifier	unlink		3619463	0					
ANR	3619491	ArgumentList	m_addr		3619463	1					
ANR	3619492	Argument	m_addr		3619463	0					
ANR	3619493	Identifier	m_addr		3619463	0					
ANR	3619494	ExpressionStatement	free ( m_addr )	66:1:1624:1636	3619463	4	True				
ANR	3619495	CallExpression	free ( m_addr )		3619463	0					
ANR	3619496	Callee	free		3619463	0					
ANR	3619497	Identifier	free		3619463	0					
ANR	3619498	ArgumentList	m_addr		3619463	1					
ANR	3619499	Argument	m_addr		3619463	0					
ANR	3619500	Identifier	m_addr		3619463	0					
ANR	3619501	Identifier	NamedPipeReader :: ~NamedPipeReader		3619463	1					
ANR	3619502	ParameterList			3619463	2					
ANR	3619503	CFGEntryNode	ENTRY		3619463		True				
ANR	3619504	CFGExitNode	EXIT		3619463		True				
ANR	3619505	Symbol	m_initialized		3619463						
ANR	3619506	Symbol	m_addr		3619463						
ANR	3619507	Symbol	m_dummy_pipe		3619463						
ANR	3619508	Symbol	m_pipe		3619463						
ANR	3619509	Function	NamedPipeReader :: get_path	69:0:1641:1717							
ANR	3619510	FunctionDef	NamedPipeReader :: get_path ()		3619509	0					
ANR	3619511	CompoundStatement		71:0:1675:1717	3619509	0					
ANR	3619512	ExpressionStatement	ASSERT ( m_initialized )	72:1:1678:1699	3619509	0	True				
ANR	3619513	CallExpression	ASSERT ( m_initialized )		3619509	0					
ANR	3619514	Callee	ASSERT		3619509	0					
ANR	3619515	Identifier	ASSERT		3619509	0					
ANR	3619516	ArgumentList	m_initialized		3619509	1					
ANR	3619517	Argument	m_initialized		3619509	0					
ANR	3619518	Identifier	m_initialized		3619509	0					
ANR	3619519	ReturnStatement	return m_addr ;	73:1:1702:1715	3619509	1	True				
ANR	3619520	Identifier	m_addr		3619509	0					
ANR	3619521	ReturnType	char *		3619509	1					
ANR	3619522	Identifier	NamedPipeReader :: get_path		3619509	2					
ANR	3619523	ParameterList			3619509	3					
ANR	3619524	CFGEntryNode	ENTRY		3619509		True				
ANR	3619525	CFGExitNode	EXIT		3619509		True				
ANR	3619526	Symbol	m_initialized		3619509						
ANR	3619527	Symbol	m_addr		3619509						
ANR	3619528	Function	NamedPipeReader :: set_watchdog	76:0:1720:1834							
ANR	3619529	FunctionDef	NamedPipeReader :: set_watchdog (NamedPipeWatchdog * watchdog)		3619528	0					
ANR	3619530	CompoundStatement		78:0:1784:1834	3619528	0					
ANR	3619531	ExpressionStatement	ASSERT ( m_initialized )	79:1:1787:1808	3619528	0	True				
ANR	3619532	CallExpression	ASSERT ( m_initialized )		3619528	0					
ANR	3619533	Callee	ASSERT		3619528	0					
ANR	3619534	Identifier	ASSERT		3619528	0					
ANR	3619535	ArgumentList	m_initialized		3619528	1					
ANR	3619536	Argument	m_initialized		3619528	0					
ANR	3619537	Identifier	m_initialized		3619528	0					
ANR	3619538	ExpressionStatement	m_watchdog = watchdog	80:1:1811:1832	3619528	1	True				
ANR	3619539	AssignmentExpression	m_watchdog = watchdog		3619528	0		=			
ANR	3619540	Identifier	m_watchdog		3619528	0					
ANR	3619541	Identifier	watchdog		3619528	1					
ANR	3619542	ReturnType	void		3619528	1					
ANR	3619543	Identifier	NamedPipeReader :: set_watchdog		3619528	2					
ANR	3619544	ParameterList	NamedPipeWatchdog * watchdog		3619528	3					
ANR	3619545	Parameter	NamedPipeWatchdog * watchdog	77:30:1755:1781	3619528	0	True				
ANR	3619546	ParameterType	NamedPipeWatchdog *		3619528	0					
ANR	3619547	Identifier	watchdog		3619528	1					
ANR	3619548	CFGEntryNode	ENTRY		3619528		True				
ANR	3619549	CFGExitNode	EXIT		3619528		True				
ANR	3619550	Symbol	m_initialized		3619528						
ANR	3619551	Symbol	watchdog		3619528						
ANR	3619552	Symbol	m_watchdog		3619528						
ANR	3619553	Function	NamedPipeReader :: read_data	83:0:1837:3560							
ANR	3619554	FunctionDef	"NamedPipeReader :: read_data (void * buffer , int len)"		3619553	0					
ANR	3619555	CompoundStatement		85:0:1892:3560	3619553	0					
ANR	3619556	ExpressionStatement	ASSERT ( m_initialized )	86:1:1895:1916	3619553	0	True				
ANR	3619557	CallExpression	ASSERT ( m_initialized )		3619553	0					
ANR	3619558	Callee	ASSERT		3619553	0					
ANR	3619559	Identifier	ASSERT		3619553	0					
ANR	3619560	ArgumentList	m_initialized		3619553	1					
ANR	3619561	Argument	m_initialized		3619553	0					
ANR	3619562	Identifier	m_initialized		3619553	0					
ANR	3619563	ExpressionStatement	ASSERT ( len <= PIPE_BUF )	92:1:2077:2100	3619553	1	True				
ANR	3619564	CallExpression	ASSERT ( len <= PIPE_BUF )		3619553	0					
ANR	3619565	Callee	ASSERT		3619553	0					
ANR	3619566	Identifier	ASSERT		3619553	0					
ANR	3619567	ArgumentList	len <= PIPE_BUF		3619553	1					
ANR	3619568	Argument	len <= PIPE_BUF		3619553	0					
ANR	3619569	RelationalExpression	len <= PIPE_BUF		3619553	0		<=			
ANR	3619570	Identifier	len		3619553	0					
ANR	3619571	Identifier	PIPE_BUF		3619553	1					
ANR	3619572	IfStatement	if ( m_watchdog != NULL )		3619553	2					
ANR	3619573	Condition	m_watchdog != NULL	102:5:2523:2540	3619553	0	True				
ANR	3619574	EqualityExpression	m_watchdog != NULL		3619553	0		!=			
ANR	3619575	Identifier	m_watchdog		3619553	0					
ANR	3619576	Identifier	NULL		3619553	1					
ANR	3619577	CompoundStatement		25:2:895:955	3619553	1					
ANR	3619578	IdentifierDeclStatement	fd_set read_fd_set ;	103:2:2547:2565	3619553	0	True				
ANR	3619579	IdentifierDecl	read_fd_set		3619553	0					
ANR	3619580	IdentifierDeclType	fd_set		3619553	0					
ANR	3619581	Identifier	read_fd_set		3619553	1					
ANR	3619582	ExpressionStatement	FD_ZERO ( & read_fd_set )	104:2:2569:2590	3619553	1	True				
ANR	3619583	CallExpression	FD_ZERO ( & read_fd_set )		3619553	0					
ANR	3619584	Callee	FD_ZERO		3619553	0					
ANR	3619585	Identifier	FD_ZERO		3619553	0					
ANR	3619586	ArgumentList	& read_fd_set		3619553	1					
ANR	3619587	Argument	& read_fd_set		3619553	0					
ANR	3619588	UnaryOperationExpression	& read_fd_set		3619553	0					
ANR	3619589	UnaryOperator	&		3619553	0					
ANR	3619590	Identifier	read_fd_set		3619553	1					
ANR	3619591	ExpressionStatement	"FD_SET ( m_pipe , & read_fd_set )"	105:2:2594:2622	3619553	2	True				
ANR	3619592	CallExpression	"FD_SET ( m_pipe , & read_fd_set )"		3619553	0					
ANR	3619593	Callee	FD_SET		3619553	0					
ANR	3619594	Identifier	FD_SET		3619553	0					
ANR	3619595	ArgumentList	m_pipe		3619553	1					
ANR	3619596	Argument	m_pipe		3619553	0					
ANR	3619597	Identifier	m_pipe		3619553	0					
ANR	3619598	Argument	& read_fd_set		3619553	1					
ANR	3619599	UnaryOperationExpression	& read_fd_set		3619553	0					
ANR	3619600	UnaryOperator	&		3619553	0					
ANR	3619601	Identifier	read_fd_set		3619553	1					
ANR	3619602	IdentifierDeclStatement	int watchdog_pipe = m_watchdog -> get_file_descriptor ( ) ;	106:2:2626:2679	3619553	3	True				
ANR	3619603	IdentifierDecl	watchdog_pipe = m_watchdog -> get_file_descriptor ( )		3619553	0					
ANR	3619604	IdentifierDeclType	int		3619553	0					
ANR	3619605	Identifier	watchdog_pipe		3619553	1					
ANR	3619606	AssignmentExpression	watchdog_pipe = m_watchdog -> get_file_descriptor ( )		3619553	2		=			
ANR	3619607	Identifier	watchdog_pipe		3619553	0					
ANR	3619608	CallExpression	m_watchdog -> get_file_descriptor ( )		3619553	1					
ANR	3619609	Callee	m_watchdog -> get_file_descriptor		3619553	0					
ANR	3619610	PtrMemberAccess	m_watchdog -> get_file_descriptor		3619553	0					
ANR	3619611	Identifier	m_watchdog		3619553	0					
ANR	3619612	Identifier	get_file_descriptor		3619553	1					
ANR	3619613	ArgumentList			3619553	1					
ANR	3619614	ExpressionStatement	"FD_SET ( watchdog_pipe , & read_fd_set )"	107:2:2683:2718	3619553	4	True				
ANR	3619615	CallExpression	"FD_SET ( watchdog_pipe , & read_fd_set )"		3619553	0					
ANR	3619616	Callee	FD_SET		3619553	0					
ANR	3619617	Identifier	FD_SET		3619553	0					
ANR	3619618	ArgumentList	watchdog_pipe		3619553	1					
ANR	3619619	Argument	watchdog_pipe		3619553	0					
ANR	3619620	Identifier	watchdog_pipe		3619553	0					
ANR	3619621	Argument	& read_fd_set		3619553	1					
ANR	3619622	UnaryOperationExpression	& read_fd_set		3619553	0					
ANR	3619623	UnaryOperator	&		3619553	0					
ANR	3619624	Identifier	read_fd_set		3619553	1					
ANR	3619625	IdentifierDeclStatement	int max_fd = ( m_pipe > watchdog_pipe ) ? m_pipe : watchdog_pipe ;	108:2:2722:2784	3619553	5	True				
ANR	3619626	IdentifierDecl	max_fd = ( m_pipe > watchdog_pipe ) ? m_pipe : watchdog_pipe		3619553	0					
ANR	3619627	IdentifierDeclType	int		3619553	0					
ANR	3619628	Identifier	max_fd		3619553	1					
ANR	3619629	AssignmentExpression	max_fd = ( m_pipe > watchdog_pipe ) ? m_pipe : watchdog_pipe		3619553	2		=			
ANR	3619630	Identifier	max_fd		3619553	0					
ANR	3619631	ConditionalExpression	( m_pipe > watchdog_pipe ) ? m_pipe : watchdog_pipe		3619553	1					
ANR	3619632	Condition	m_pipe > watchdog_pipe		3619553	0					
ANR	3619633	RelationalExpression	m_pipe > watchdog_pipe		3619553	0		>			
ANR	3619634	Identifier	m_pipe		3619553	0					
ANR	3619635	Identifier	watchdog_pipe		3619553	1					
ANR	3619636	Identifier	m_pipe		3619553	1					
ANR	3619637	Identifier	watchdog_pipe		3619553	2					
ANR	3619638	IdentifierDeclStatement	"int ret = select ( max_fd + 1 , & read_fd_set , NULL , NULL , NULL ) ;"	109:2:2788:2848	3619553	6	True				
ANR	3619639	IdentifierDecl	"ret = select ( max_fd + 1 , & read_fd_set , NULL , NULL , NULL )"		3619553	0					
ANR	3619640	IdentifierDeclType	int		3619553	0					
ANR	3619641	Identifier	ret		3619553	1					
ANR	3619642	AssignmentExpression	"ret = select ( max_fd + 1 , & read_fd_set , NULL , NULL , NULL )"		3619553	2		=			
ANR	3619643	Identifier	ret		3619553	0					
ANR	3619644	CallExpression	"select ( max_fd + 1 , & read_fd_set , NULL , NULL , NULL )"		3619553	1					
ANR	3619645	Callee	select		3619553	0					
ANR	3619646	Identifier	select		3619553	0					
ANR	3619647	ArgumentList	max_fd + 1		3619553	1					
ANR	3619648	Argument	max_fd + 1		3619553	0					
ANR	3619649	AdditiveExpression	max_fd + 1		3619553	0		+			
ANR	3619650	Identifier	max_fd		3619553	0					
ANR	3619651	PrimaryExpression	1		3619553	1					
ANR	3619652	Argument	& read_fd_set		3619553	1					
ANR	3619653	UnaryOperationExpression	& read_fd_set		3619553	0					
ANR	3619654	UnaryOperator	&		3619553	0					
ANR	3619655	Identifier	read_fd_set		3619553	1					
ANR	3619656	Argument	NULL		3619553	2					
ANR	3619657	Identifier	NULL		3619553	0					
ANR	3619658	Argument	NULL		3619553	3					
ANR	3619659	Identifier	NULL		3619553	0					
ANR	3619660	Argument	NULL		3619553	4					
ANR	3619661	Identifier	NULL		3619553	0					
ANR	3619662	IfStatement	if ( ret == - 1 )		3619553	7					
ANR	3619663	Condition	ret == - 1	110:6:2856:2864	3619553	0	True				
ANR	3619664	EqualityExpression	ret == - 1		3619553	0		==			
ANR	3619665	Identifier	ret		3619553	0					
ANR	3619666	UnaryOperationExpression	- 1		3619553	1					
ANR	3619667	UnaryOperator	-		3619553	0					
ANR	3619668	PrimaryExpression	1		3619553	1					
ANR	3619669	CompoundStatement		26:17:974:974	3619553	1					
ANR	3619670	ExpressionStatement	"dprintf ( D_ALWAYS , ""select error: %s (%d)\\n"" , strerror ( errno ) , errno )"	111:3:2872:2973	3619553	0	True				
ANR	3619671	CallExpression	"dprintf ( D_ALWAYS , ""select error: %s (%d)\\n"" , strerror ( errno ) , errno )"		3619553	0					
ANR	3619672	Callee	dprintf		3619553	0					
ANR	3619673	Identifier	dprintf		3619553	0					
ANR	3619674	ArgumentList	D_ALWAYS		3619553	1					
ANR	3619675	Argument	D_ALWAYS		3619553	0					
ANR	3619676	Identifier	D_ALWAYS		3619553	0					
ANR	3619677	Argument	"""select error: %s (%d)\\n"""		3619553	1					
ANR	3619678	PrimaryExpression	"""select error: %s (%d)\\n"""		3619553	0					
ANR	3619679	Argument	strerror ( errno )		3619553	2					
ANR	3619680	CallExpression	strerror ( errno )		3619553	0					
ANR	3619681	Callee	strerror		3619553	0					
ANR	3619682	Identifier	strerror		3619553	0					
ANR	3619683	ArgumentList	errno		3619553	1					
ANR	3619684	Argument	errno		3619553	0					
ANR	3619685	Identifier	errno		3619553	0					
ANR	3619686	Argument	errno		3619553	3					
ANR	3619687	Identifier	errno		3619553	0					
ANR	3619688	ReturnStatement	return false ;	115:3:2978:2990	3619553	1	True				
ANR	3619689	Identifier	false		3619553	0					
ANR	3619690	IfStatement	"if ( FD_ISSET ( watchdog_pipe , & read_fd_set ) && ! FD_ISSET ( m_pipe , & read_fd_set ) )"		3619553	8					
ANR	3619691	Condition	"FD_ISSET ( watchdog_pipe , & read_fd_set ) && ! FD_ISSET ( m_pipe , & read_fd_set )"	117:6:3002:3079	3619553	0	True				
ANR	3619692	AndExpression	"FD_ISSET ( watchdog_pipe , & read_fd_set ) && ! FD_ISSET ( m_pipe , & read_fd_set )"		3619553	0		&&			
ANR	3619693	CallExpression	"FD_ISSET ( watchdog_pipe , & read_fd_set )"		3619553	0					
ANR	3619694	Callee	FD_ISSET		3619553	0					
ANR	3619695	Identifier	FD_ISSET		3619553	0					
ANR	3619696	ArgumentList	watchdog_pipe		3619553	1					
ANR	3619697	Argument	watchdog_pipe		3619553	0					
ANR	3619698	Identifier	watchdog_pipe		3619553	0					
ANR	3619699	Argument	& read_fd_set		3619553	1					
ANR	3619700	UnaryOperationExpression	& read_fd_set		3619553	0					
ANR	3619701	UnaryOperator	&		3619553	0					
ANR	3619702	Identifier	read_fd_set		3619553	1					
ANR	3619703	UnaryOperationExpression	"! FD_ISSET ( m_pipe , & read_fd_set )"		3619553	1					
ANR	3619704	UnaryOperator	!		3619553	0					
ANR	3619705	CallExpression	"FD_ISSET ( m_pipe , & read_fd_set )"		3619553	1					
ANR	3619706	Callee	FD_ISSET		3619553	0					
ANR	3619707	Identifier	FD_ISSET		3619553	0					
ANR	3619708	ArgumentList	m_pipe		3619553	1					
ANR	3619709	Argument	m_pipe		3619553	0					
ANR	3619710	Identifier	m_pipe		3619553	0					
ANR	3619711	Argument	& read_fd_set		3619553	1					
ANR	3619712	UnaryOperationExpression	& read_fd_set		3619553	0					
ANR	3619713	UnaryOperator	&		3619553	0					
ANR	3619714	Identifier	read_fd_set		3619553	1					
ANR	3619715	CompoundStatement		35:4:1192:1192	3619553	1					
ANR	3619716	Statement	dprintf	120:3:3090:3096	3619553	0	True				
ANR	3619717	Statement	(	120:10:3097:3097	3619553	1	True				
ANR	3619718	Statement	D_ALWAYS	120:11:3098:3105	3619553	2	True				
ANR	3619719	Statement	","	120:19:3106:3106	3619553	3	True				
ANR	3619720	Statement	"""error reading from named pipe: """	121:11:3119:3151	3619553	4	True				
ANR	3619721	Statement	"""watchdog pipe has closed\\n"""	122:15:3168:3195	3619553	5	True				
ANR	3619722	Statement	)	122:43:3196:3196	3619553	6	True				
ANR	3619723	ExpressionStatement		122:44:3197:3197	3619553	7	True				
ANR	3619724	ReturnStatement	return false ;	123:3:3202:3214	3619553	8	True				
ANR	3619725	Identifier	false		3619553	0					
ANR	3619726	IdentifierDeclStatement	"int bytes = read ( m_pipe , buffer , len ) ;"	127:1:3225:3262	3619553	3	True				
ANR	3619727	IdentifierDecl	"bytes = read ( m_pipe , buffer , len )"		3619553	0					
ANR	3619728	IdentifierDeclType	int		3619553	0					
ANR	3619729	Identifier	bytes		3619553	1					
ANR	3619730	AssignmentExpression	"bytes = read ( m_pipe , buffer , len )"		3619553	2		=			
ANR	3619731	Identifier	bytes		3619553	0					
ANR	3619732	CallExpression	"read ( m_pipe , buffer , len )"		3619553	1					
ANR	3619733	Callee	read		3619553	0					
ANR	3619734	Identifier	read		3619553	0					
ANR	3619735	ArgumentList	m_pipe		3619553	1					
ANR	3619736	Argument	m_pipe		3619553	0					
ANR	3619737	Identifier	m_pipe		3619553	0					
ANR	3619738	Argument	buffer		3619553	1					
ANR	3619739	Identifier	buffer		3619553	0					
ANR	3619740	Argument	len		3619553	2					
ANR	3619741	Identifier	len		3619553	0					
ANR	3619742	IfStatement	if ( bytes != len )		3619553	4					
ANR	3619743	Condition	bytes != len	128:5:3269:3280	3619553	0	True				
ANR	3619744	EqualityExpression	bytes != len		3619553	0		!=			
ANR	3619745	Identifier	bytes		3619553	0					
ANR	3619746	Identifier	len		3619553	1					
ANR	3619747	CompoundStatement		44:19:1390:1390	3619553	1					
ANR	3619748	IfStatement	if ( bytes == - 1 )		3619553	0					
ANR	3619749	Condition	bytes == - 1	129:6:3291:3301	3619553	0	True				
ANR	3619750	EqualityExpression	bytes == - 1		3619553	0		==			
ANR	3619751	Identifier	bytes		3619553	0					
ANR	3619752	UnaryOperationExpression	- 1		3619553	1					
ANR	3619753	UnaryOperator	-		3619553	0					
ANR	3619754	PrimaryExpression	1		3619553	1					
ANR	3619755	CompoundStatement		45:19:1411:1411	3619553	1					
ANR	3619756	ExpressionStatement	"dprintf ( D_ALWAYS , ""read error: %s (%d)\\n"" , strerror ( errno ) , errno )"	130:3:3309:3408	3619553	0	True				
ANR	3619757	CallExpression	"dprintf ( D_ALWAYS , ""read error: %s (%d)\\n"" , strerror ( errno ) , errno )"		3619553	0					
ANR	3619758	Callee	dprintf		3619553	0					
ANR	3619759	Identifier	dprintf		3619553	0					
ANR	3619760	ArgumentList	D_ALWAYS		3619553	1					
ANR	3619761	Argument	D_ALWAYS		3619553	0					
ANR	3619762	Identifier	D_ALWAYS		3619553	0					
ANR	3619763	Argument	"""read error: %s (%d)\\n"""		3619553	1					
ANR	3619764	PrimaryExpression	"""read error: %s (%d)\\n"""		3619553	0					
ANR	3619765	Argument	strerror ( errno )		3619553	2					
ANR	3619766	CallExpression	strerror ( errno )		3619553	0					
ANR	3619767	Callee	strerror		3619553	0					
ANR	3619768	Identifier	strerror		3619553	0					
ANR	3619769	ArgumentList	errno		3619553	1					
ANR	3619770	Argument	errno		3619553	0					
ANR	3619771	Identifier	errno		3619553	0					
ANR	3619772	Argument	errno		3619553	3					
ANR	3619773	Identifier	errno		3619553	0					
ANR	3619774	ElseStatement	else		3619553	0					
ANR	3619775	CompoundStatement		51:7:1528:1528	3619553	0					
ANR	3619776	ExpressionStatement	"dprintf ( D_ALWAYS , ""error: read %d of %d bytes\\n"" , bytes , len )"	136:3:3426:3520	3619553	0	True				
ANR	3619777	CallExpression	"dprintf ( D_ALWAYS , ""error: read %d of %d bytes\\n"" , bytes , len )"		3619553	0					
ANR	3619778	Callee	dprintf		3619553	0					
ANR	3619779	Identifier	dprintf		3619553	0					
ANR	3619780	ArgumentList	D_ALWAYS		3619553	1					
ANR	3619781	Argument	D_ALWAYS		3619553	0					
ANR	3619782	Identifier	D_ALWAYS		3619553	0					
ANR	3619783	Argument	"""error: read %d of %d bytes\\n"""		3619553	1					
ANR	3619784	PrimaryExpression	"""error: read %d of %d bytes\\n"""		3619553	0					
ANR	3619785	Argument	bytes		3619553	2					
ANR	3619786	Identifier	bytes		3619553	0					
ANR	3619787	Argument	len		3619553	3					
ANR	3619788	Identifier	len		3619553	0					
ANR	3619789	ReturnStatement	return false ;	141:2:3528:3540	3619553	1	True				
ANR	3619790	Identifier	false		3619553	0					
ANR	3619791	ReturnStatement	return true ;	144:1:3547:3558	3619553	5	True				
ANR	3619792	Identifier	true		3619553	0					
ANR	3619793	ReturnType	bool		3619553	1					
ANR	3619794	Identifier	NamedPipeReader :: read_data		3619553	2					
ANR	3619795	ParameterList	"void * buffer , int len"		3619553	3					
ANR	3619796	Parameter	void * buffer	84:27:1869:1880	3619553	0	True				
ANR	3619797	ParameterType	void *		3619553	0					
ANR	3619798	Identifier	buffer		3619553	1					
ANR	3619799	Parameter	int len	84:41:1883:1889	3619553	1	True				
ANR	3619800	ParameterType	int		3619553	0					
ANR	3619801	Identifier	len		3619553	1					
ANR	3619802	CFGEntryNode	ENTRY		3619553		True				
ANR	3619803	CFGExitNode	EXIT		3619553		True				
ANR	3619804	Symbol	ret		3619553						
ANR	3619805	Symbol	m_initialized		3619553						
ANR	3619806	Symbol	errno		3619553						
ANR	3619807	Symbol	PIPE_BUF		3619553						
ANR	3619808	Symbol	NULL		3619553						
ANR	3619809	Symbol	select		3619553						
ANR	3619810	Symbol	read		3619553						
ANR	3619811	Symbol	watchdog_pipe		3619553						
ANR	3619812	Symbol	D_ALWAYS		3619553						
ANR	3619813	Symbol	false		3619553						
ANR	3619814	Symbol	read_fd_set		3619553						
ANR	3619815	Symbol	m_pipe		3619553						
ANR	3619816	Symbol	strerror		3619553						
ANR	3619817	Symbol	* m_watchdog		3619553						
ANR	3619818	Symbol	m_watchdog -> get_file_descriptor		3619553						
ANR	3619819	Symbol	len		3619553						
ANR	3619820	Symbol	FD_ISSET		3619553						
ANR	3619821	Symbol	max_fd		3619553						
ANR	3619822	Symbol	bytes		3619553						
ANR	3619823	Symbol	m_watchdog		3619553						
ANR	3619824	Symbol	& read_fd_set		3619553						
ANR	3619825	Symbol	true		3619553						
ANR	3619826	Symbol	buffer		3619553						
ANR	3619827	Function	NamedPipeReader :: poll	147:0:3563:4604							
ANR	3619828	FunctionDef	"NamedPipeReader :: poll (int timeout , bool & ready)"		3619827	0					
ANR	3619829	CompoundStatement		149:0:3616:4604	3619827	0					
ANR	3619830	ExpressionStatement	ASSERT ( m_initialized )	154:1:3795:3816	3619827	0	True				
ANR	3619831	CallExpression	ASSERT ( m_initialized )		3619827	0					
ANR	3619832	Callee	ASSERT		3619827	0					
ANR	3619833	Identifier	ASSERT		3619827	0					
ANR	3619834	ArgumentList	m_initialized		3619827	1					
ANR	3619835	Argument	m_initialized		3619827	0					
ANR	3619836	Identifier	m_initialized		3619827	0					
ANR	3619837	ExpressionStatement	ASSERT ( timeout >= - 1 )	156:1:3820:3841	3619827	1	True				
ANR	3619838	CallExpression	ASSERT ( timeout >= - 1 )		3619827	0					
ANR	3619839	Callee	ASSERT		3619827	0					
ANR	3619840	Identifier	ASSERT		3619827	0					
ANR	3619841	ArgumentList	timeout >= - 1		3619827	1					
ANR	3619842	Argument	timeout >= - 1		3619827	0					
ANR	3619843	RelationalExpression	timeout >= - 1		3619827	0		>=			
ANR	3619844	Identifier	timeout		3619827	0					
ANR	3619845	UnaryOperationExpression	- 1		3619827	1					
ANR	3619846	UnaryOperator	-		3619827	0					
ANR	3619847	PrimaryExpression	1		3619827	1					
ANR	3619848	IdentifierDeclStatement	fd_set read_fd_set ;	158:1:3845:3863	3619827	2	True				
ANR	3619849	IdentifierDecl	read_fd_set		3619827	0					
ANR	3619850	IdentifierDeclType	fd_set		3619827	0					
ANR	3619851	Identifier	read_fd_set		3619827	1					
ANR	3619852	ExpressionStatement	FD_ZERO ( & read_fd_set )	159:1:3866:3887	3619827	3	True				
ANR	3619853	CallExpression	FD_ZERO ( & read_fd_set )		3619827	0					
ANR	3619854	Callee	FD_ZERO		3619827	0					
ANR	3619855	Identifier	FD_ZERO		3619827	0					
ANR	3619856	ArgumentList	& read_fd_set		3619827	1					
ANR	3619857	Argument	& read_fd_set		3619827	0					
ANR	3619858	UnaryOperationExpression	& read_fd_set		3619827	0					
ANR	3619859	UnaryOperator	&		3619827	0					
ANR	3619860	Identifier	read_fd_set		3619827	1					
ANR	3619861	ExpressionStatement	"FD_SET ( m_pipe , & read_fd_set )"	160:1:3890:3918	3619827	4	True				
ANR	3619862	CallExpression	"FD_SET ( m_pipe , & read_fd_set )"		3619827	0					
ANR	3619863	Callee	FD_SET		3619827	0					
ANR	3619864	Identifier	FD_SET		3619827	0					
ANR	3619865	ArgumentList	m_pipe		3619827	1					
ANR	3619866	Argument	m_pipe		3619827	0					
ANR	3619867	Identifier	m_pipe		3619827	0					
ANR	3619868	Argument	& read_fd_set		3619827	1					
ANR	3619869	UnaryOperationExpression	& read_fd_set		3619827	0					
ANR	3619870	UnaryOperator	&		3619827	0					
ANR	3619871	Identifier	read_fd_set		3619827	1					
ANR	3619872	IdentifierDeclStatement	struct timeval * tv_ptr = NULL ;	162:1:3922:3951	3619827	5	True				
ANR	3619873	IdentifierDecl	* tv_ptr = NULL		3619827	0					
ANR	3619874	IdentifierDeclType	struct timeval *		3619827	0					
ANR	3619875	Identifier	tv_ptr		3619827	1					
ANR	3619876	AssignmentExpression	* tv_ptr = NULL		3619827	2		=			
ANR	3619877	Identifier	NULL		3619827	0					
ANR	3619878	Identifier	NULL		3619827	1					
ANR	3619879	IdentifierDeclStatement	struct timeval tv ;	163:1:3954:3971	3619827	6	True				
ANR	3619880	IdentifierDecl	tv		3619827	0					
ANR	3619881	IdentifierDeclType	struct timeval		3619827	0					
ANR	3619882	Identifier	tv		3619827	1					
ANR	3619883	IfStatement	if ( timeout != - 1 )		3619827	7					
ANR	3619884	Condition	timeout != - 1	164:5:3978:3990	3619827	0	True				
ANR	3619885	EqualityExpression	timeout != - 1		3619827	0		!=			
ANR	3619886	Identifier	timeout		3619827	0					
ANR	3619887	UnaryOperationExpression	- 1		3619827	1					
ANR	3619888	UnaryOperator	-		3619827	0					
ANR	3619889	PrimaryExpression	1		3619827	1					
ANR	3619890	CompoundStatement		16:20:376:376	3619827	1					
ANR	3619891	ExpressionStatement	tv . tv_sec = timeout	165:2:3997:4016	3619827	0	True				
ANR	3619892	AssignmentExpression	tv . tv_sec = timeout		3619827	0		=			
ANR	3619893	MemberAccess	tv . tv_sec		3619827	0					
ANR	3619894	Identifier	tv		3619827	0					
ANR	3619895	Identifier	tv_sec		3619827	1					
ANR	3619896	Identifier	timeout		3619827	1					
ANR	3619897	ExpressionStatement	tv . tv_usec = 0	166:2:4020:4034	3619827	1	True				
ANR	3619898	AssignmentExpression	tv . tv_usec = 0		3619827	0		=			
ANR	3619899	MemberAccess	tv . tv_usec		3619827	0					
ANR	3619900	Identifier	tv		3619827	0					
ANR	3619901	Identifier	tv_usec		3619827	1					
ANR	3619902	PrimaryExpression	0		3619827	1					
ANR	3619903	ExpressionStatement	tv_ptr = & tv	167:2:4038:4050	3619827	2	True				
ANR	3619904	AssignmentExpression	tv_ptr = & tv		3619827	0		=			
ANR	3619905	Identifier	tv_ptr		3619827	0					
ANR	3619906	UnaryOperationExpression	& tv		3619827	1					
ANR	3619907	UnaryOperator	&		3619827	0					
ANR	3619908	Identifier	tv		3619827	1					
ANR	3619909	IdentifierDeclStatement	"int ret = select ( m_pipe + 1 , & read_fd_set , NULL , NULL , tv_ptr ) ;"	170:1:4057:4119	3619827	8	True				
ANR	3619910	IdentifierDecl	"ret = select ( m_pipe + 1 , & read_fd_set , NULL , NULL , tv_ptr )"		3619827	0					
ANR	3619911	IdentifierDeclType	int		3619827	0					
ANR	3619912	Identifier	ret		3619827	1					
ANR	3619913	AssignmentExpression	"ret = select ( m_pipe + 1 , & read_fd_set , NULL , NULL , tv_ptr )"		3619827	2		=			
ANR	3619914	Identifier	ret		3619827	0					
ANR	3619915	CallExpression	"select ( m_pipe + 1 , & read_fd_set , NULL , NULL , tv_ptr )"		3619827	1					
ANR	3619916	Callee	select		3619827	0					
ANR	3619917	Identifier	select		3619827	0					
ANR	3619918	ArgumentList	m_pipe + 1		3619827	1					
ANR	3619919	Argument	m_pipe + 1		3619827	0					
ANR	3619920	AdditiveExpression	m_pipe + 1		3619827	0		+			
ANR	3619921	Identifier	m_pipe		3619827	0					
ANR	3619922	PrimaryExpression	1		3619827	1					
ANR	3619923	Argument	& read_fd_set		3619827	1					
ANR	3619924	UnaryOperationExpression	& read_fd_set		3619827	0					
ANR	3619925	UnaryOperator	&		3619827	0					
ANR	3619926	Identifier	read_fd_set		3619827	1					
ANR	3619927	Argument	NULL		3619827	2					
ANR	3619928	Identifier	NULL		3619827	0					
ANR	3619929	Argument	NULL		3619827	3					
ANR	3619930	Identifier	NULL		3619827	0					
ANR	3619931	Argument	tv_ptr		3619827	4					
ANR	3619932	Identifier	tv_ptr		3619827	0					
ANR	3619933	IfStatement	if ( ret == - 1 )		3619827	9					
ANR	3619934	Condition	ret == - 1	171:5:4126:4134	3619827	0	True				
ANR	3619935	EqualityExpression	ret == - 1		3619827	0		==			
ANR	3619936	Identifier	ret		3619827	0					
ANR	3619937	UnaryOperationExpression	- 1		3619827	1					
ANR	3619938	UnaryOperator	-		3619827	0					
ANR	3619939	PrimaryExpression	1		3619827	1					
ANR	3619940	CompoundStatement		23:16:520:520	3619827	1					
ANR	3619941	IfStatement	if ( errno == EINTR )		3619827	0					
ANR	3619942	Condition	errno == EINTR	172:6:4145:4158	3619827	0	True				
ANR	3619943	EqualityExpression	errno == EINTR		3619827	0		==			
ANR	3619944	Identifier	errno		3619827	0					
ANR	3619945	Identifier	EINTR		3619827	1					
ANR	3619946	CompoundStatement		24:23:545:545	3619827	1					
ANR	3619947	ExpressionStatement	ready = false	177:3:4391:4404	3619827	0	True				
ANR	3619948	AssignmentExpression	ready = false		3619827	0		=			
ANR	3619949	Identifier	ready		3619827	0					
ANR	3619950	Identifier	false		3619827	1					
ANR	3619951	ReturnStatement	return true ;	178:3:4409:4420	3619827	1	True				
ANR	3619952	Identifier	true		3619827	0					
ANR	3619953	ExpressionStatement	"dprintf ( D_ALWAYS , ""select error: %s (%d)\\n"" , strerror ( errno ) , errno )"	180:2:4428:4526	3619827	1	True				
ANR	3619954	CallExpression	"dprintf ( D_ALWAYS , ""select error: %s (%d)\\n"" , strerror ( errno ) , errno )"		3619827	0					
ANR	3619955	Callee	dprintf		3619827	0					
ANR	3619956	Identifier	dprintf		3619827	0					
ANR	3619957	ArgumentList	D_ALWAYS		3619827	1					
ANR	3619958	Argument	D_ALWAYS		3619827	0					
ANR	3619959	Identifier	D_ALWAYS		3619827	0					
ANR	3619960	Argument	"""select error: %s (%d)\\n"""		3619827	1					
ANR	3619961	PrimaryExpression	"""select error: %s (%d)\\n"""		3619827	0					
ANR	3619962	Argument	strerror ( errno )		3619827	2					
ANR	3619963	CallExpression	strerror ( errno )		3619827	0					
ANR	3619964	Callee	strerror		3619827	0					
ANR	3619965	Identifier	strerror		3619827	0					
ANR	3619966	ArgumentList	errno		3619827	1					
ANR	3619967	Argument	errno		3619827	0					
ANR	3619968	Identifier	errno		3619827	0					
ANR	3619969	Argument	errno		3619827	3					
ANR	3619970	Identifier	errno		3619827	0					
ANR	3619971	ReturnStatement	return false ;	184:2:4530:4542	3619827	2	True				
ANR	3619972	Identifier	false		3619827	0					
ANR	3619973	ExpressionStatement	"ready = FD_ISSET ( m_pipe , & read_fd_set )"	187:1:4549:4587	3619827	10	True				
ANR	3619974	AssignmentExpression	"ready = FD_ISSET ( m_pipe , & read_fd_set )"		3619827	0		=			
ANR	3619975	Identifier	ready		3619827	0					
ANR	3619976	CallExpression	"FD_ISSET ( m_pipe , & read_fd_set )"		3619827	1					
ANR	3619977	Callee	FD_ISSET		3619827	0					
ANR	3619978	Identifier	FD_ISSET		3619827	0					
ANR	3619979	ArgumentList	m_pipe		3619827	1					
ANR	3619980	Argument	m_pipe		3619827	0					
ANR	3619981	Identifier	m_pipe		3619827	0					
ANR	3619982	Argument	& read_fd_set		3619827	1					
ANR	3619983	UnaryOperationExpression	& read_fd_set		3619827	0					
ANR	3619984	UnaryOperator	&		3619827	0					
ANR	3619985	Identifier	read_fd_set		3619827	1					
ANR	3619986	ReturnStatement	return true ;	189:1:4591:4602	3619827	11	True				
ANR	3619987	Identifier	true		3619827	0					
ANR	3619988	ReturnType	bool		3619827	1					
ANR	3619989	Identifier	NamedPipeReader :: poll		3619827	2					
ANR	3619990	ParameterList	"int timeout , bool & ready"		3619827	3					
ANR	3619991	Parameter	int timeout	148:22:3590:3600	3619827	0	True				
ANR	3619992	ParameterType	int		3619827	0					
ANR	3619993	Identifier	timeout		3619827	1					
ANR	3619994	Parameter	bool & ready	148:35:3603:3613	3619827	1	True				
ANR	3619995	ParameterType	bool &		3619827	0					
ANR	3619996	Identifier	ready		3619827	1					
ANR	3619997	CFGEntryNode	ENTRY		3619827		True				
ANR	3619998	CFGExitNode	EXIT		3619827		True				
ANR	3619999	Symbol	tv . tv_sec		3619827						
ANR	3620000	Symbol	tv . tv_usec		3619827						
ANR	3620001	Symbol	ret		3619827						
ANR	3620002	Symbol	m_initialized		3619827						
ANR	3620003	Symbol	tv		3619827						
ANR	3620004	Symbol	errno		3619827						
ANR	3620005	Symbol	NULL		3619827						
ANR	3620006	Symbol	select		3619827						
ANR	3620007	Symbol	EINTR		3619827						
ANR	3620008	Symbol	false		3619827						
ANR	3620009	Symbol	D_ALWAYS		3619827						
ANR	3620010	Symbol	read_fd_set		3619827						
ANR	3620011	Symbol	tv_ptr		3619827						
ANR	3620012	Symbol	& tv		3619827						
ANR	3620013	Symbol	timeout		3619827						
ANR	3620014	Symbol	m_pipe		3619827						
ANR	3620015	Symbol	strerror		3619827						
ANR	3620016	Symbol	FD_ISSET		3619827						
ANR	3620017	Symbol	ready		3619827						
ANR	3620018	Symbol	& read_fd_set		3619827						
ANR	3620019	Symbol	true		3619827						
ANR	3620020	Function	NamedPipeReader :: consistent	198:0:4865:5935							
ANR	3620021	FunctionDef	NamedPipeReader :: consistent ()		3620020	0					
ANR	3620022	CompoundStatement		200:0:4904:5935	3620020	0					
ANR	3620023	IdentifierDeclStatement	struct stat fbuf ;	201:1:4907:4923	3620020	0	True				
ANR	3620024	IdentifierDecl	fbuf		3620020	0					
ANR	3620025	IdentifierDeclType	struct stat		3620020	0					
ANR	3620026	Identifier	fbuf		3620020	1					
ANR	3620027	IdentifierDeclStatement	struct stat lbuf ;	202:1:4926:4942	3620020	1	True				
ANR	3620028	IdentifierDecl	lbuf		3620020	0					
ANR	3620029	IdentifierDeclType	struct stat		3620020	0					
ANR	3620030	Identifier	lbuf		3620020	1					
ANR	3620031	ExpressionStatement	ASSERT ( m_initialized )	204:1:4946:4967	3620020	2	True				
ANR	3620032	CallExpression	ASSERT ( m_initialized )		3620020	0					
ANR	3620033	Callee	ASSERT		3620020	0					
ANR	3620034	Identifier	ASSERT		3620020	0					
ANR	3620035	ArgumentList	m_initialized		3620020	1					
ANR	3620036	Argument	m_initialized		3620020	0					
ANR	3620037	Identifier	m_initialized		3620020	0					
ANR	3620038	IfStatement	"if ( fstat ( m_pipe , & fbuf ) < 0 )"		3620020	3					
ANR	3620039	Condition	"fstat ( m_pipe , & fbuf ) < 0"	207:5:5042:5065	3620020	0	True				
ANR	3620040	RelationalExpression	"fstat ( m_pipe , & fbuf ) < 0"		3620020	0		<			
ANR	3620041	CallExpression	"fstat ( m_pipe , & fbuf )"		3620020	0					
ANR	3620042	Callee	fstat		3620020	0					
ANR	3620043	Identifier	fstat		3620020	0					
ANR	3620044	ArgumentList	m_pipe		3620020	1					
ANR	3620045	Argument	m_pipe		3620020	0					
ANR	3620046	Identifier	m_pipe		3620020	0					
ANR	3620047	Argument	& fbuf		3620020	1					
ANR	3620048	UnaryOperationExpression	& fbuf		3620020	0					
ANR	3620049	UnaryOperator	&		3620020	0					
ANR	3620050	Identifier	fbuf		3620020	1					
ANR	3620051	PrimaryExpression	0		3620020	1					
ANR	3620052	CompoundStatement		8:31:163:163	3620020	1					
ANR	3620053	Statement	dprintf	208:2:5072:5078	3620020	0	True				
ANR	3620054	Statement	(	208:9:5079:5079	3620020	1	True				
ANR	3620055	Statement	D_FULLDEBUG	208:10:5080:5090	3620020	2	True				
ANR	3620056	Statement	","	208:21:5091:5091	3620020	3	True				
ANR	3620057	Statement	"""NamedPipeReader::consistent(): """	209:3:5096:5128	3620020	4	True				
ANR	3620058	Statement	"""Failed to lstat() supposedly open named pipe! Named pipe is """	210:3:5133:5194	3620020	5	True				
ANR	3620059	Statement	"""inconsistent! %s (%d)\\n"""	211:3:5199:5223	3620020	6	True				
ANR	3620060	Statement	","	211:28:5224:5224	3620020	7	True				
ANR	3620061	Statement	strerror	212:3:5229:5236	3620020	8	True				
ANR	3620062	Statement	(	212:11:5237:5237	3620020	9	True				
ANR	3620063	Statement	errno	212:12:5238:5242	3620020	10	True				
ANR	3620064	Statement	)	212:17:5243:5243	3620020	11	True				
ANR	3620065	Statement	","	212:18:5244:5244	3620020	12	True				
ANR	3620066	Statement	errno	213:3:5249:5253	3620020	13	True				
ANR	3620067	Statement	)	213:8:5254:5254	3620020	14	True				
ANR	3620068	ExpressionStatement		213:9:5255:5255	3620020	15	True				
ANR	3620069	ReturnStatement	return false ;	214:2:5259:5271	3620020	16	True				
ANR	3620070	Identifier	false		3620020	0					
ANR	3620071	IfStatement	"if ( lstat ( m_addr , & lbuf ) < 0 )"		3620020	4					
ANR	3620072	Condition	"lstat ( m_addr , & lbuf ) < 0"	218:5:5347:5370	3620020	0	True				
ANR	3620073	RelationalExpression	"lstat ( m_addr , & lbuf ) < 0"		3620020	0		<			
ANR	3620074	CallExpression	"lstat ( m_addr , & lbuf )"		3620020	0					
ANR	3620075	Callee	lstat		3620020	0					
ANR	3620076	Identifier	lstat		3620020	0					
ANR	3620077	ArgumentList	m_addr		3620020	1					
ANR	3620078	Argument	m_addr		3620020	0					
ANR	3620079	Identifier	m_addr		3620020	0					
ANR	3620080	Argument	& lbuf		3620020	1					
ANR	3620081	UnaryOperationExpression	& lbuf		3620020	0					
ANR	3620082	UnaryOperator	&		3620020	0					
ANR	3620083	Identifier	lbuf		3620020	1					
ANR	3620084	PrimaryExpression	0		3620020	1					
ANR	3620085	CompoundStatement		19:31:468:468	3620020	1					
ANR	3620086	Statement	dprintf	219:2:5377:5383	3620020	0	True				
ANR	3620087	Statement	(	219:9:5384:5384	3620020	1	True				
ANR	3620088	Statement	D_FULLDEBUG	219:10:5385:5395	3620020	2	True				
ANR	3620089	Statement	","	219:21:5396:5396	3620020	3	True				
ANR	3620090	Statement	"""NamedPipeReader::consistent(): """	220:3:5401:5433	3620020	4	True				
ANR	3620091	Statement	"""Failed to stat() supposedly present named pipe! Named pipe """	221:3:5438:5498	3620020	5	True				
ANR	3620092	Statement	"""is inconsistent! %s (%d)\\n"""	222:3:5503:5530	3620020	6	True				
ANR	3620093	Statement	","	222:31:5531:5531	3620020	7	True				
ANR	3620094	Statement	strerror	223:3:5536:5543	3620020	8	True				
ANR	3620095	Statement	(	223:11:5544:5544	3620020	9	True				
ANR	3620096	Statement	errno	223:12:5545:5549	3620020	10	True				
ANR	3620097	Statement	)	223:17:5550:5550	3620020	11	True				
ANR	3620098	Statement	","	223:18:5551:5551	3620020	12	True				
ANR	3620099	Statement	errno	224:3:5556:5560	3620020	13	True				
ANR	3620100	Statement	)	224:8:5561:5561	3620020	14	True				
ANR	3620101	ExpressionStatement		224:9:5562:5562	3620020	15	True				
ANR	3620102	ReturnStatement	return false ;	225:2:5566:5578	3620020	16	True				
ANR	3620103	Identifier	false		3620020	0					
ANR	3620104	IfStatement	if ( fbuf . st_dev != lbuf . st_dev || fbuf . st_ino != lbuf . st_ino )		3620020	5					
ANR	3620105	Condition	fbuf . st_dev != lbuf . st_dev || fbuf . st_ino != lbuf . st_ino	229:5:5644:5702	3620020	0	True				
ANR	3620106	OrExpression	fbuf . st_dev != lbuf . st_dev || fbuf . st_ino != lbuf . st_ino		3620020	0		||			
ANR	3620107	EqualityExpression	fbuf . st_dev != lbuf . st_dev		3620020	0		!=			
ANR	3620108	MemberAccess	fbuf . st_dev		3620020	0					
ANR	3620109	Identifier	fbuf		3620020	0					
ANR	3620110	Identifier	st_dev		3620020	1					
ANR	3620111	MemberAccess	lbuf . st_dev		3620020	1					
ANR	3620112	Identifier	lbuf		3620020	0					
ANR	3620113	Identifier	st_dev		3620020	1					
ANR	3620114	EqualityExpression	fbuf . st_ino != lbuf . st_ino		3620020	1		!=			
ANR	3620115	MemberAccess	fbuf . st_ino		3620020	0					
ANR	3620116	Identifier	fbuf		3620020	0					
ANR	3620117	Identifier	st_ino		3620020	1					
ANR	3620118	MemberAccess	lbuf . st_ino		3620020	1					
ANR	3620119	Identifier	lbuf		3620020	0					
ANR	3620120	Identifier	st_ino		3620020	1					
ANR	3620121	CompoundStatement		32:1:801:801	3620020	1					
ANR	3620122	Statement	dprintf	232:2:5710:5716	3620020	0	True				
ANR	3620123	Statement	(	232:9:5717:5717	3620020	1	True				
ANR	3620124	Statement	D_ALWAYS	232:10:5718:5725	3620020	2	True				
ANR	3620125	Statement	","	232:18:5726:5726	3620020	3	True				
ANR	3620126	Statement	"""NamedPipeReader::consistent(): """	233:3:5732:5764	3620020	4	True				
ANR	3620127	Statement	"""The named pipe at m_addr: '%s' is inconsistent with the """	234:3:5769:5826	3620020	5	True				
ANR	3620128	Statement	"""originally opened m_addr when the procd was started.\\n"""	235:3:5831:5886	3620020	6	True				
ANR	3620129	Statement	","	235:59:5887:5887	3620020	7	True				
ANR	3620130	Statement	m_addr	236:3:5892:5897	3620020	8	True				
ANR	3620131	Statement	)	236:9:5898:5898	3620020	9	True				
ANR	3620132	ExpressionStatement		236:10:5899:5899	3620020	10	True				
ANR	3620133	ReturnStatement	return false ;	237:2:5903:5915	3620020	11	True				
ANR	3620134	Identifier	false		3620020	0					
ANR	3620135	ReturnStatement	return true ;	240:1:5922:5933	3620020	6	True				
ANR	3620136	Identifier	true		3620020	0					
ANR	3620137	ReturnType	bool		3620020	1					
ANR	3620138	Identifier	NamedPipeReader :: consistent		3620020	2					
ANR	3620139	ParameterList			3620020	3					
ANR	3620140	CFGEntryNode	ENTRY		3620020		True				
ANR	3620141	CFGExitNode	EXIT		3620020		True				
ANR	3620142	Symbol	m_initialized		3620020						
ANR	3620143	Symbol	fbuf		3620020						
ANR	3620144	Symbol	lstat		3620020						
ANR	3620145	Symbol	fbuf . st_ino		3620020						
ANR	3620146	Symbol	false		3620020						
ANR	3620147	Symbol	fstat		3620020						
ANR	3620148	Symbol	fbuf . st_dev		3620020						
ANR	3620149	Symbol	lbuf . st_dev		3620020						
ANR	3620150	Symbol	m_addr		3620020						
ANR	3620151	Symbol	& lbuf		3620020						
ANR	3620152	Symbol	& fbuf		3620020						
ANR	3620153	Symbol	m_pipe		3620020						
ANR	3620154	Symbol	lbuf		3620020						
ANR	3620155	Symbol	true		3620020						
ANR	3620156	Symbol	lbuf . st_ino		3620020						
