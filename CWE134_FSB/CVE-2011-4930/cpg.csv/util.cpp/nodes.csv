command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5522369	File	data/converged/CVE-2011-4930_htcondor/util.cpp								
ANR	5522370	Function	not_root_squashed	35:0:1387:2729							
ANR	5522371	FunctionDef	not_root_squashed (char const * exec_path)		5522370	0					
ANR	5522372	CompoundStatement		37:0:1442:2729	5522370	0					
ANR	5522373	IdentifierDeclStatement	MyString test_dir ;	38:1:1445:1462	5522370	0	True				
ANR	5522374	IdentifierDecl	test_dir		5522370	0					
ANR	5522375	IdentifierDeclType	MyString		5522370	0					
ANR	5522376	Identifier	test_dir		5522370	1					
ANR	5522377	ExpressionStatement	"test_dir . sprintf ( ""%s/.root_squash_test"" , exec_path )"	39:1:1465:1516	5522370	1	True				
ANR	5522378	CallExpression	"test_dir . sprintf ( ""%s/.root_squash_test"" , exec_path )"		5522370	0					
ANR	5522379	Callee	test_dir . sprintf		5522370	0					
ANR	5522380	MemberAccess	test_dir . sprintf		5522370	0					
ANR	5522381	Identifier	test_dir		5522370	0					
ANR	5522382	Identifier	sprintf		5522370	1					
ANR	5522383	ArgumentList	"""%s/.root_squash_test"""		5522370	1					
ANR	5522384	Argument	"""%s/.root_squash_test"""		5522370	0					
ANR	5522385	PrimaryExpression	"""%s/.root_squash_test"""		5522370	0					
ANR	5522386	Argument	exec_path		5522370	1					
ANR	5522387	Identifier	exec_path		5522370	0					
ANR	5522388	IfStatement	if ( rmdir ( test_dir . Value ( ) ) == - 1 )		5522370	2					
ANR	5522389	Condition	rmdir ( test_dir . Value ( ) ) == - 1	41:5:1524:1552	5522370	0	True				
ANR	5522390	EqualityExpression	rmdir ( test_dir . Value ( ) ) == - 1		5522370	0		==			
ANR	5522391	CallExpression	rmdir ( test_dir . Value ( ) )		5522370	0					
ANR	5522392	Callee	rmdir		5522370	0					
ANR	5522393	Identifier	rmdir		5522370	0					
ANR	5522394	ArgumentList	test_dir . Value ( )		5522370	1					
ANR	5522395	Argument	test_dir . Value ( )		5522370	0					
ANR	5522396	CallExpression	test_dir . Value ( )		5522370	0					
ANR	5522397	Callee	test_dir . Value		5522370	0					
ANR	5522398	MemberAccess	test_dir . Value		5522370	0					
ANR	5522399	Identifier	test_dir		5522370	0					
ANR	5522400	Identifier	Value		5522370	1					
ANR	5522401	ArgumentList			5522370	1					
ANR	5522402	UnaryOperationExpression	- 1		5522370	1					
ANR	5522403	UnaryOperator	-		5522370	0					
ANR	5522404	PrimaryExpression	1		5522370	1					
ANR	5522405	CompoundStatement		5:36:112:112	5522370	1					
ANR	5522406	IfStatement	if ( errno != ENOENT )		5522370	0					
ANR	5522407	Condition	errno != ENOENT	42:6:1563:1577	5522370	0	True				
ANR	5522408	EqualityExpression	errno != ENOENT		5522370	0		!=			
ANR	5522409	Identifier	errno		5522370	0					
ANR	5522410	Identifier	ENOENT		5522370	1					
ANR	5522411	CompoundStatement		6:23:137:137	5522370	1					
ANR	5522412	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""not_root_squashed: rmdir of %s failed: %s\\n"" , test_dir . Value ( ) , strerror ( errno ) )"	43:3:1585:1720	5522370	0	True				
ANR	5522413	CallExpression	"dprintf ( D_FULLDEBUG , ""not_root_squashed: rmdir of %s failed: %s\\n"" , test_dir . Value ( ) , strerror ( errno ) )"		5522370	0					
ANR	5522414	Callee	dprintf		5522370	0					
ANR	5522415	Identifier	dprintf		5522370	0					
ANR	5522416	ArgumentList	D_FULLDEBUG		5522370	1					
ANR	5522417	Argument	D_FULLDEBUG		5522370	0					
ANR	5522418	Identifier	D_FULLDEBUG		5522370	0					
ANR	5522419	Argument	"""not_root_squashed: rmdir of %s failed: %s\\n"""		5522370	1					
ANR	5522420	PrimaryExpression	"""not_root_squashed: rmdir of %s failed: %s\\n"""		5522370	0					
ANR	5522421	Argument	test_dir . Value ( )		5522370	2					
ANR	5522422	CallExpression	test_dir . Value ( )		5522370	0					
ANR	5522423	Callee	test_dir . Value		5522370	0					
ANR	5522424	MemberAccess	test_dir . Value		5522370	0					
ANR	5522425	Identifier	test_dir		5522370	0					
ANR	5522426	Identifier	Value		5522370	1					
ANR	5522427	ArgumentList			5522370	1					
ANR	5522428	Argument	strerror ( errno )		5522370	3					
ANR	5522429	CallExpression	strerror ( errno )		5522370	0					
ANR	5522430	Callee	strerror		5522370	0					
ANR	5522431	Identifier	strerror		5522370	0					
ANR	5522432	ArgumentList	errno		5522370	1					
ANR	5522433	Argument	errno		5522370	0					
ANR	5522434	Identifier	errno		5522370	0					
ANR	5522435	ReturnStatement	return false ;	47:3:1725:1737	5522370	1	True				
ANR	5522436	Identifier	false		5522370	0					
ANR	5522437	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	50:1:1747:1780	5522370	3	True				
ANR	5522438	IdentifierDecl	priv = set_root_priv ( )		5522370	0					
ANR	5522439	IdentifierDeclType	priv_state		5522370	0					
ANR	5522440	Identifier	priv		5522370	1					
ANR	5522441	AssignmentExpression	priv = set_root_priv ( )		5522370	2		=			
ANR	5522442	Identifier	priv		5522370	0					
ANR	5522443	CallExpression	set_root_priv ( )		5522370	1					
ANR	5522444	Callee	set_root_priv		5522370	0					
ANR	5522445	Identifier	set_root_priv		5522370	0					
ANR	5522446	ArgumentList			5522370	1					
ANR	5522447	IdentifierDeclStatement	"int rv = mkdir ( test_dir . Value ( ) , 0755 ) ;"	51:1:1783:1821	5522370	4	True				
ANR	5522448	IdentifierDecl	"rv = mkdir ( test_dir . Value ( ) , 0755 )"		5522370	0					
ANR	5522449	IdentifierDeclType	int		5522370	0					
ANR	5522450	Identifier	rv		5522370	1					
ANR	5522451	AssignmentExpression	"rv = mkdir ( test_dir . Value ( ) , 0755 )"		5522370	2		=			
ANR	5522452	Identifier	rv		5522370	0					
ANR	5522453	CallExpression	"mkdir ( test_dir . Value ( ) , 0755 )"		5522370	1					
ANR	5522454	Callee	mkdir		5522370	0					
ANR	5522455	Identifier	mkdir		5522370	0					
ANR	5522456	ArgumentList	test_dir . Value ( )		5522370	1					
ANR	5522457	Argument	test_dir . Value ( )		5522370	0					
ANR	5522458	CallExpression	test_dir . Value ( )		5522370	0					
ANR	5522459	Callee	test_dir . Value		5522370	0					
ANR	5522460	MemberAccess	test_dir . Value		5522370	0					
ANR	5522461	Identifier	test_dir		5522370	0					
ANR	5522462	Identifier	Value		5522370	1					
ANR	5522463	ArgumentList			5522370	1					
ANR	5522464	Argument	0755		5522370	1					
ANR	5522465	PrimaryExpression	0755		5522370	0					
ANR	5522466	ExpressionStatement	set_priv ( priv )	52:1:1824:1838	5522370	5	True				
ANR	5522467	CallExpression	set_priv ( priv )		5522370	0					
ANR	5522468	Callee	set_priv		5522370	0					
ANR	5522469	Identifier	set_priv		5522370	0					
ANR	5522470	ArgumentList	priv		5522370	1					
ANR	5522471	Argument	priv		5522370	0					
ANR	5522472	Identifier	priv		5522370	0					
ANR	5522473	IfStatement	if ( rv == - 1 )		5522370	6					
ANR	5522474	Condition	rv == - 1	53:5:1845:1852	5522370	0	True				
ANR	5522475	EqualityExpression	rv == - 1		5522370	0		==			
ANR	5522476	Identifier	rv		5522370	0					
ANR	5522477	UnaryOperationExpression	- 1		5522370	1					
ANR	5522478	UnaryOperator	-		5522370	0					
ANR	5522479	PrimaryExpression	1		5522370	1					
ANR	5522480	CompoundStatement		17:15:412:412	5522370	1					
ANR	5522481	IfStatement	if ( errno == EACCES )		5522370	0					
ANR	5522482	Condition	errno == EACCES	54:6:1863:1877	5522370	0	True				
ANR	5522483	EqualityExpression	errno == EACCES		5522370	0		==			
ANR	5522484	Identifier	errno		5522370	0					
ANR	5522485	Identifier	EACCES		5522370	1					
ANR	5522486	CompoundStatement		18:23:437:437	5522370	1					
ANR	5522487	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""execute directory %s root-squashed\\n"" , exec_path )"	55:3:1885:1978	5522370	0	True				
ANR	5522488	CallExpression	"dprintf ( D_FULLDEBUG , ""execute directory %s root-squashed\\n"" , exec_path )"		5522370	0					
ANR	5522489	Callee	dprintf		5522370	0					
ANR	5522490	Identifier	dprintf		5522370	0					
ANR	5522491	ArgumentList	D_FULLDEBUG		5522370	1					
ANR	5522492	Argument	D_FULLDEBUG		5522370	0					
ANR	5522493	Identifier	D_FULLDEBUG		5522370	0					
ANR	5522494	Argument	"""execute directory %s root-squashed\\n"""		5522370	1					
ANR	5522495	PrimaryExpression	"""execute directory %s root-squashed\\n"""		5522370	0					
ANR	5522496	Argument	exec_path		5522370	2					
ANR	5522497	Identifier	exec_path		5522370	0					
ANR	5522498	ElseStatement	else		5522370	0					
ANR	5522499	CompoundStatement		23:7:548:548	5522370	0					
ANR	5522500	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""not_root_squashed: mkdir of %s failed: %s\\n"" , test_dir . Value ( ) , strerror ( errno ) )"	60:3:1996:2131	5522370	0	True				
ANR	5522501	CallExpression	"dprintf ( D_FULLDEBUG , ""not_root_squashed: mkdir of %s failed: %s\\n"" , test_dir . Value ( ) , strerror ( errno ) )"		5522370	0					
ANR	5522502	Callee	dprintf		5522370	0					
ANR	5522503	Identifier	dprintf		5522370	0					
ANR	5522504	ArgumentList	D_FULLDEBUG		5522370	1					
ANR	5522505	Argument	D_FULLDEBUG		5522370	0					
ANR	5522506	Identifier	D_FULLDEBUG		5522370	0					
ANR	5522507	Argument	"""not_root_squashed: mkdir of %s failed: %s\\n"""		5522370	1					
ANR	5522508	PrimaryExpression	"""not_root_squashed: mkdir of %s failed: %s\\n"""		5522370	0					
ANR	5522509	Argument	test_dir . Value ( )		5522370	2					
ANR	5522510	CallExpression	test_dir . Value ( )		5522370	0					
ANR	5522511	Callee	test_dir . Value		5522370	0					
ANR	5522512	MemberAccess	test_dir . Value		5522370	0					
ANR	5522513	Identifier	test_dir		5522370	0					
ANR	5522514	Identifier	Value		5522370	1					
ANR	5522515	ArgumentList			5522370	1					
ANR	5522516	Argument	strerror ( errno )		5522370	3					
ANR	5522517	CallExpression	strerror ( errno )		5522370	0					
ANR	5522518	Callee	strerror		5522370	0					
ANR	5522519	Identifier	strerror		5522370	0					
ANR	5522520	ArgumentList	errno		5522370	1					
ANR	5522521	Argument	errno		5522370	0					
ANR	5522522	Identifier	errno		5522370	0					
ANR	5522523	ReturnStatement	return false ;	65:2:2139:2151	5522370	1	True				
ANR	5522524	Identifier	false		5522370	0					
ANR	5522525	IdentifierDeclStatement	struct stat st ;	67:1:2157:2171	5522370	7	True				
ANR	5522526	IdentifierDecl	st		5522370	0					
ANR	5522527	IdentifierDeclType	struct stat		5522370	0					
ANR	5522528	Identifier	st		5522370	1					
ANR	5522529	IfStatement	"if ( stat ( test_dir . Value ( ) , & st ) == - 1 )"		5522370	8					
ANR	5522530	Condition	"stat ( test_dir . Value ( ) , & st ) == - 1"	68:5:2178:2210	5522370	0	True				
ANR	5522531	EqualityExpression	"stat ( test_dir . Value ( ) , & st ) == - 1"		5522370	0		==			
ANR	5522532	CallExpression	"stat ( test_dir . Value ( ) , & st )"		5522370	0					
ANR	5522533	Callee	stat		5522370	0					
ANR	5522534	Identifier	stat		5522370	0					
ANR	5522535	ArgumentList	test_dir . Value ( )		5522370	1					
ANR	5522536	Argument	test_dir . Value ( )		5522370	0					
ANR	5522537	CallExpression	test_dir . Value ( )		5522370	0					
ANR	5522538	Callee	test_dir . Value		5522370	0					
ANR	5522539	MemberAccess	test_dir . Value		5522370	0					
ANR	5522540	Identifier	test_dir		5522370	0					
ANR	5522541	Identifier	Value		5522370	1					
ANR	5522542	ArgumentList			5522370	1					
ANR	5522543	Argument	& st		5522370	1					
ANR	5522544	UnaryOperationExpression	& st		5522370	0					
ANR	5522545	UnaryOperator	&		5522370	0					
ANR	5522546	Identifier	st		5522370	1					
ANR	5522547	UnaryOperationExpression	- 1		5522370	1					
ANR	5522548	UnaryOperator	-		5522370	0					
ANR	5522549	PrimaryExpression	1		5522370	1					
ANR	5522550	CompoundStatement		32:40:770:770	5522370	1					
ANR	5522551	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""not_root_squashed: stat of %s failed: %s\\n"" , test_dir . Value ( ) , strerror ( errno ) )"	69:2:2217:2348	5522370	0	True				
ANR	5522552	CallExpression	"dprintf ( D_FULLDEBUG , ""not_root_squashed: stat of %s failed: %s\\n"" , test_dir . Value ( ) , strerror ( errno ) )"		5522370	0					
ANR	5522553	Callee	dprintf		5522370	0					
ANR	5522554	Identifier	dprintf		5522370	0					
ANR	5522555	ArgumentList	D_FULLDEBUG		5522370	1					
ANR	5522556	Argument	D_FULLDEBUG		5522370	0					
ANR	5522557	Identifier	D_FULLDEBUG		5522370	0					
ANR	5522558	Argument	"""not_root_squashed: stat of %s failed: %s\\n"""		5522370	1					
ANR	5522559	PrimaryExpression	"""not_root_squashed: stat of %s failed: %s\\n"""		5522370	0					
ANR	5522560	Argument	test_dir . Value ( )		5522370	2					
ANR	5522561	CallExpression	test_dir . Value ( )		5522370	0					
ANR	5522562	Callee	test_dir . Value		5522370	0					
ANR	5522563	MemberAccess	test_dir . Value		5522370	0					
ANR	5522564	Identifier	test_dir		5522370	0					
ANR	5522565	Identifier	Value		5522370	1					
ANR	5522566	ArgumentList			5522370	1					
ANR	5522567	Argument	strerror ( errno )		5522370	3					
ANR	5522568	CallExpression	strerror ( errno )		5522370	0					
ANR	5522569	Callee	strerror		5522370	0					
ANR	5522570	Identifier	strerror		5522370	0					
ANR	5522571	ArgumentList	errno		5522370	1					
ANR	5522572	Argument	errno		5522370	0					
ANR	5522573	Identifier	errno		5522370	0					
ANR	5522574	ReturnStatement	return false ;	73:2:2352:2364	5522370	1	True				
ANR	5522575	Identifier	false		5522370	0					
ANR	5522576	IfStatement	if ( rmdir ( test_dir . Value ( ) ) == - 1 )		5522370	9					
ANR	5522577	Condition	rmdir ( test_dir . Value ( ) ) == - 1	75:5:2374:2402	5522370	0	True				
ANR	5522578	EqualityExpression	rmdir ( test_dir . Value ( ) ) == - 1		5522370	0		==			
ANR	5522579	CallExpression	rmdir ( test_dir . Value ( ) )		5522370	0					
ANR	5522580	Callee	rmdir		5522370	0					
ANR	5522581	Identifier	rmdir		5522370	0					
ANR	5522582	ArgumentList	test_dir . Value ( )		5522370	1					
ANR	5522583	Argument	test_dir . Value ( )		5522370	0					
ANR	5522584	CallExpression	test_dir . Value ( )		5522370	0					
ANR	5522585	Callee	test_dir . Value		5522370	0					
ANR	5522586	MemberAccess	test_dir . Value		5522370	0					
ANR	5522587	Identifier	test_dir		5522370	0					
ANR	5522588	Identifier	Value		5522370	1					
ANR	5522589	ArgumentList			5522370	1					
ANR	5522590	UnaryOperationExpression	- 1		5522370	1					
ANR	5522591	UnaryOperator	-		5522370	0					
ANR	5522592	PrimaryExpression	1		5522370	1					
ANR	5522593	CompoundStatement		39:36:962:962	5522370	1					
ANR	5522594	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""rmdir of %s failed: %s\\n"" , test_dir . Value ( ) , strerror ( errno ) )"	76:2:2409:2522	5522370	0	True				
ANR	5522595	CallExpression	"dprintf ( D_FULLDEBUG , ""rmdir of %s failed: %s\\n"" , test_dir . Value ( ) , strerror ( errno ) )"		5522370	0					
ANR	5522596	Callee	dprintf		5522370	0					
ANR	5522597	Identifier	dprintf		5522370	0					
ANR	5522598	ArgumentList	D_FULLDEBUG		5522370	1					
ANR	5522599	Argument	D_FULLDEBUG		5522370	0					
ANR	5522600	Identifier	D_FULLDEBUG		5522370	0					
ANR	5522601	Argument	"""rmdir of %s failed: %s\\n"""		5522370	1					
ANR	5522602	PrimaryExpression	"""rmdir of %s failed: %s\\n"""		5522370	0					
ANR	5522603	Argument	test_dir . Value ( )		5522370	2					
ANR	5522604	CallExpression	test_dir . Value ( )		5522370	0					
ANR	5522605	Callee	test_dir . Value		5522370	0					
ANR	5522606	MemberAccess	test_dir . Value		5522370	0					
ANR	5522607	Identifier	test_dir		5522370	0					
ANR	5522608	Identifier	Value		5522370	1					
ANR	5522609	ArgumentList			5522370	1					
ANR	5522610	Argument	strerror ( errno )		5522370	3					
ANR	5522611	CallExpression	strerror ( errno )		5522370	0					
ANR	5522612	Callee	strerror		5522370	0					
ANR	5522613	Identifier	strerror		5522370	0					
ANR	5522614	ArgumentList	errno		5522370	1					
ANR	5522615	Argument	errno		5522370	0					
ANR	5522616	Identifier	errno		5522370	0					
ANR	5522617	ReturnStatement	return false ;	80:2:2526:2538	5522370	1	True				
ANR	5522618	Identifier	false		5522370	0					
ANR	5522619	IdentifierDeclStatement	bool not_squashed = ( st . st_uid == 0 ) ;	83:1:2545:2581	5522370	10	True				
ANR	5522620	IdentifierDecl	not_squashed = ( st . st_uid == 0 )		5522370	0					
ANR	5522621	IdentifierDeclType	bool		5522370	0					
ANR	5522622	Identifier	not_squashed		5522370	1					
ANR	5522623	AssignmentExpression	not_squashed = ( st . st_uid == 0 )		5522370	2		=			
ANR	5522624	Identifier	not_squashed		5522370	0					
ANR	5522625	EqualityExpression	st . st_uid == 0		5522370	1		==			
ANR	5522626	MemberAccess	st . st_uid		5522370	0					
ANR	5522627	Identifier	st		5522370	0					
ANR	5522628	Identifier	st_uid		5522370	1					
ANR	5522629	PrimaryExpression	0		5522370	1					
ANR	5522630	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""execute directory %s %s root-squashed\\n"" , exec_path , not_squashed ? ""not"" : """" )"	84:1:2584:2705	5522370	11	True				
ANR	5522631	CallExpression	"dprintf ( D_FULLDEBUG , ""execute directory %s %s root-squashed\\n"" , exec_path , not_squashed ? ""not"" : """" )"		5522370	0					
ANR	5522632	Callee	dprintf		5522370	0					
ANR	5522633	Identifier	dprintf		5522370	0					
ANR	5522634	ArgumentList	D_FULLDEBUG		5522370	1					
ANR	5522635	Argument	D_FULLDEBUG		5522370	0					
ANR	5522636	Identifier	D_FULLDEBUG		5522370	0					
ANR	5522637	Argument	"""execute directory %s %s root-squashed\\n"""		5522370	1					
ANR	5522638	PrimaryExpression	"""execute directory %s %s root-squashed\\n"""		5522370	0					
ANR	5522639	Argument	exec_path		5522370	2					
ANR	5522640	Identifier	exec_path		5522370	0					
ANR	5522641	Argument	"not_squashed ? ""not"" : """""		5522370	3					
ANR	5522642	ConditionalExpression	"not_squashed ? ""not"" : """""		5522370	0					
ANR	5522643	Condition	not_squashed		5522370	0					
ANR	5522644	Identifier	not_squashed		5522370	0					
ANR	5522645	PrimaryExpression	"""not"""		5522370	1					
ANR	5522646	PrimaryExpression	""""""		5522370	2					
ANR	5522647	ReturnStatement	return not_squashed ;	88:1:2708:2727	5522370	12	True				
ANR	5522648	Identifier	not_squashed		5522370	0					
ANR	5522649	ReturnType	static bool		5522370	1					
ANR	5522650	Identifier	not_root_squashed		5522370	2					
ANR	5522651	ParameterList	char const * exec_path		5522370	3					
ANR	5522652	Parameter	char const * exec_path	36:19:1418:1438	5522370	0	True				
ANR	5522653	ParameterType	char const *		5522370	0					
ANR	5522654	Identifier	exec_path		5522370	1					
ANR	5522655	CFGEntryNode	ENTRY		5522370		True				
ANR	5522656	CFGExitNode	EXIT		5522370		True				
ANR	5522657	Symbol	st		5522370						
ANR	5522658	Symbol	errno		5522370						
ANR	5522659	Symbol	stat		5522370						
ANR	5522660	Symbol	rv		5522370						
ANR	5522661	Symbol	false		5522370						
ANR	5522662	Symbol	test_dir		5522370						
ANR	5522663	Symbol	D_FULLDEBUG		5522370						
ANR	5522664	Symbol	set_root_priv		5522370						
ANR	5522665	Symbol	& st		5522370						
ANR	5522666	Symbol	rmdir		5522370						
ANR	5522667	Symbol	ENOENT		5522370						
ANR	5522668	Symbol	not_squashed		5522370						
ANR	5522669	Symbol	strerror		5522370						
ANR	5522670	Symbol	exec_path		5522370						
ANR	5522671	Symbol	test_dir . Value		5522370						
ANR	5522672	Symbol	st . st_uid		5522370						
ANR	5522673	Symbol	priv		5522370						
ANR	5522674	Symbol	EACCES		5522370						
ANR	5522675	Symbol	mkdir		5522370						
ANR	5522676	Function	check_execute_dir_perms	91:0:2732:5077							
ANR	5522677	FunctionDef	check_execute_dir_perms (char const * exec_path)		5522676	0					
ANR	5522678	CompoundStatement		93:0:2793:5077	5522676	0					
ANR	5522679	IdentifierDeclStatement	struct stat st ;	94:1:2796:2810	5522676	0	True				
ANR	5522680	IdentifierDecl	st		5522676	0					
ANR	5522681	IdentifierDeclType	struct stat		5522676	0					
ANR	5522682	Identifier	st		5522676	1					
ANR	5522683	IfStatement	"if ( stat ( exec_path , & st ) < 0 )"		5522676	1					
ANR	5522684	Condition	"stat ( exec_path , & st ) < 0"	95:5:2817:2840	5522676	0	True				
ANR	5522685	RelationalExpression	"stat ( exec_path , & st ) < 0"		5522676	0		<			
ANR	5522686	CallExpression	"stat ( exec_path , & st )"		5522676	0					
ANR	5522687	Callee	stat		5522676	0					
ANR	5522688	Identifier	stat		5522676	0					
ANR	5522689	ArgumentList	exec_path		5522676	1					
ANR	5522690	Argument	exec_path		5522676	0					
ANR	5522691	Identifier	exec_path		5522676	0					
ANR	5522692	Argument	& st		5522676	1					
ANR	5522693	UnaryOperationExpression	& st		5522676	0					
ANR	5522694	UnaryOperator	&		5522676	0					
ANR	5522695	Identifier	st		5522676	1					
ANR	5522696	PrimaryExpression	0		5522676	1					
ANR	5522697	CompoundStatement		3:31:49:49	5522676	1					
ANR	5522698	ExpressionStatement	"EXCEPT ( ""stat exec path (%s), errno: %d (%s)"" , exec_path , errno , strerror ( errno ) )"	96:2:2847:2935	5522676	0	True				
ANR	5522699	CallExpression	"EXCEPT ( ""stat exec path (%s), errno: %d (%s)"" , exec_path , errno , strerror ( errno ) )"		5522676	0					
ANR	5522700	Callee	EXCEPT		5522676	0					
ANR	5522701	Identifier	EXCEPT		5522676	0					
ANR	5522702	ArgumentList	"""stat exec path (%s), errno: %d (%s)"""		5522676	1					
ANR	5522703	Argument	"""stat exec path (%s), errno: %d (%s)"""		5522676	0					
ANR	5522704	PrimaryExpression	"""stat exec path (%s), errno: %d (%s)"""		5522676	0					
ANR	5522705	Argument	exec_path		5522676	1					
ANR	5522706	Identifier	exec_path		5522676	0					
ANR	5522707	Argument	errno		5522676	2					
ANR	5522708	Identifier	errno		5522676	0					
ANR	5522709	Argument	strerror ( errno )		5522676	3					
ANR	5522710	CallExpression	strerror ( errno )		5522676	0					
ANR	5522711	Callee	strerror		5522676	0					
ANR	5522712	Identifier	strerror		5522676	0					
ANR	5522713	ArgumentList	errno		5522676	1					
ANR	5522714	Argument	errno		5522676	0					
ANR	5522715	Identifier	errno		5522676	0					
ANR	5522716	IfStatement	if ( privsep_enabled ( ) )		5522676	2					
ANR	5522717	Condition	privsep_enabled ( )	106:5:3235:3251	5522676	0	True				
ANR	5522718	CallExpression	privsep_enabled ( )		5522676	0					
ANR	5522719	Callee	privsep_enabled		5522676	0					
ANR	5522720	Identifier	privsep_enabled		5522676	0					
ANR	5522721	ArgumentList			5522676	1					
ANR	5522722	CompoundStatement		14:24:460:460	5522676	1					
ANR	5522723	ReturnStatement	return ;	107:2:3258:3264	5522676	0	True				
ANR	5522724	IdentifierDeclStatement	mode_t new_mode = 0 ;	114:1:3444:3463	5522676	3	True				
ANR	5522725	IdentifierDecl	new_mode = 0		5522676	0					
ANR	5522726	IdentifierDeclType	mode_t		5522676	0					
ANR	5522727	Identifier	new_mode		5522676	1					
ANR	5522728	AssignmentExpression	new_mode = 0		5522676	2		=			
ANR	5522729	Identifier	new_mode		5522676	0					
ANR	5522730	PrimaryExpression	0		5522676	1					
ANR	5522731	IdentifierDeclStatement	mode_t desired_mode = _S_IREAD | _S_IWRITE ;	116:1:3485:3527	5522676	4	True				
ANR	5522732	IdentifierDecl	desired_mode = _S_IREAD | _S_IWRITE		5522676	0					
ANR	5522733	IdentifierDeclType	mode_t		5522676	0					
ANR	5522734	Identifier	desired_mode		5522676	1					
ANR	5522735	AssignmentExpression	desired_mode = _S_IREAD | _S_IWRITE		5522676	2		=			
ANR	5522736	Identifier	desired_mode		5522676	0					
ANR	5522737	InclusiveOrExpression	_S_IREAD | _S_IWRITE		5522676	1		|			
ANR	5522738	Identifier	_S_IREAD		5522676	0					
ANR	5522739	Identifier	_S_IWRITE		5522676	1					
ANR	5522740	IfStatement	if ( ( st . st_mode & desired_mode ) != desired_mode )		5522676	5					
ANR	5522741	Condition	( st . st_mode & desired_mode ) != desired_mode	117:5:3534:3576	5522676	0	True				
ANR	5522742	EqualityExpression	( st . st_mode & desired_mode ) != desired_mode		5522676	0		!=			
ANR	5522743	BitAndExpression	st . st_mode & desired_mode		5522676	0		&			
ANR	5522744	MemberAccess	st . st_mode		5522676	0					
ANR	5522745	Identifier	st		5522676	0					
ANR	5522746	Identifier	st_mode		5522676	1					
ANR	5522747	Identifier	desired_mode		5522676	1					
ANR	5522748	Identifier	desired_mode		5522676	1					
ANR	5522749	CompoundStatement		25:50:785:785	5522676	1					
ANR	5522750	ExpressionStatement	new_mode = st . st_mode | desired_mode	118:2:3583:3619	5522676	0	True				
ANR	5522751	AssignmentExpression	new_mode = st . st_mode | desired_mode		5522676	0		=			
ANR	5522752	Identifier	new_mode		5522676	0					
ANR	5522753	InclusiveOrExpression	st . st_mode | desired_mode		5522676	1		|			
ANR	5522754	MemberAccess	st . st_mode		5522676	0					
ANR	5522755	Identifier	st		5522676	0					
ANR	5522756	Identifier	st_mode		5522676	1					
ANR	5522757	Identifier	desired_mode		5522676	1					
ANR	5522758	IfStatement	if ( new_mode != 0 )		5522676	6					
ANR	5522759	Condition	new_mode != 0	161:5:4852:4864	5522676	0	True				
ANR	5522760	EqualityExpression	new_mode != 0		5522676	0		!=			
ANR	5522761	Identifier	new_mode		5522676	0					
ANR	5522762	PrimaryExpression	0		5522676	1					
ANR	5522763	CompoundStatement		69:20:2073:2073	5522676	1					
ANR	5522764	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Changing permission on %s\\n"" , exec_path )"	162:2:4871:4933	5522676	0	True				
ANR	5522765	CallExpression	"dprintf ( D_FULLDEBUG , ""Changing permission on %s\\n"" , exec_path )"		5522676	0					
ANR	5522766	Callee	dprintf		5522676	0					
ANR	5522767	Identifier	dprintf		5522676	0					
ANR	5522768	ArgumentList	D_FULLDEBUG		5522676	1					
ANR	5522769	Argument	D_FULLDEBUG		5522676	0					
ANR	5522770	Identifier	D_FULLDEBUG		5522676	0					
ANR	5522771	Argument	"""Changing permission on %s\\n"""		5522676	1					
ANR	5522772	PrimaryExpression	"""Changing permission on %s\\n"""		5522676	0					
ANR	5522773	Argument	exec_path		5522676	2					
ANR	5522774	Identifier	exec_path		5522676	0					
ANR	5522775	IfStatement	"if ( chmod ( exec_path , new_mode ) < 0 )"		5522676	1					
ANR	5522776	Condition	"chmod ( exec_path , new_mode ) < 0"	163:6:4941:4970	5522676	0	True				
ANR	5522777	RelationalExpression	"chmod ( exec_path , new_mode ) < 0"		5522676	0		<			
ANR	5522778	CallExpression	"chmod ( exec_path , new_mode )"		5522676	0					
ANR	5522779	Callee	chmod		5522676	0					
ANR	5522780	Identifier	chmod		5522676	0					
ANR	5522781	ArgumentList	exec_path		5522676	1					
ANR	5522782	Argument	exec_path		5522676	0					
ANR	5522783	Identifier	exec_path		5522676	0					
ANR	5522784	Argument	new_mode		5522676	1					
ANR	5522785	Identifier	new_mode		5522676	0					
ANR	5522786	PrimaryExpression	0		5522676	1					
ANR	5522787	CompoundStatement		71:38:2179:2179	5522676	1					
ANR	5522788	ExpressionStatement	"EXCEPT ( ""chmod exec path (%s), errno: %d (%s)"" , exec_path , errno , strerror ( errno ) )"	164:3:4978:5068	5522676	0	True				
ANR	5522789	CallExpression	"EXCEPT ( ""chmod exec path (%s), errno: %d (%s)"" , exec_path , errno , strerror ( errno ) )"		5522676	0					
ANR	5522790	Callee	EXCEPT		5522676	0					
ANR	5522791	Identifier	EXCEPT		5522676	0					
ANR	5522792	ArgumentList	"""chmod exec path (%s), errno: %d (%s)"""		5522676	1					
ANR	5522793	Argument	"""chmod exec path (%s), errno: %d (%s)"""		5522676	0					
ANR	5522794	PrimaryExpression	"""chmod exec path (%s), errno: %d (%s)"""		5522676	0					
ANR	5522795	Argument	exec_path		5522676	1					
ANR	5522796	Identifier	exec_path		5522676	0					
ANR	5522797	Argument	errno		5522676	2					
ANR	5522798	Identifier	errno		5522676	0					
ANR	5522799	Argument	strerror ( errno )		5522676	3					
ANR	5522800	CallExpression	strerror ( errno )		5522676	0					
ANR	5522801	Callee	strerror		5522676	0					
ANR	5522802	Identifier	strerror		5522676	0					
ANR	5522803	ArgumentList	errno		5522676	1					
ANR	5522804	Argument	errno		5522676	0					
ANR	5522805	Identifier	errno		5522676	0					
ANR	5522806	ReturnType	static void		5522676	1					
ANR	5522807	Identifier	check_execute_dir_perms		5522676	2					
ANR	5522808	ParameterList	char const * exec_path		5522676	3					
ANR	5522809	Parameter	char const * exec_path	92:25:2769:2789	5522676	0	True				
ANR	5522810	ParameterType	char const *		5522676	0					
ANR	5522811	Identifier	exec_path		5522676	1					
ANR	5522812	CFGEntryNode	ENTRY		5522676		True				
ANR	5522813	CFGExitNode	EXIT		5522676		True				
ANR	5522814	Symbol	st		5522676						
ANR	5522815	Symbol	stat		5522676						
ANR	5522816	Symbol	errno		5522676						
ANR	5522817	Symbol	_S_IREAD		5522676						
ANR	5522818	Symbol	& st		5522676						
ANR	5522819	Symbol	st . st_mode		5522676						
ANR	5522820	Symbol	D_FULLDEBUG		5522676						
ANR	5522821	Symbol	strerror		5522676						
ANR	5522822	Symbol	exec_path		5522676						
ANR	5522823	Symbol	desired_mode		5522676						
ANR	5522824	Symbol	privsep_enabled		5522676						
ANR	5522825	Symbol	new_mode		5522676						
ANR	5522826	Symbol	_S_IWRITE		5522676						
ANR	5522827	Symbol	chmod		5522676						
ANR	5522828	Function	check_execute_dir_perms	170:0:5080:5254							
ANR	5522829	FunctionDef	check_execute_dir_perms (StringList & list)		5522828	0					
ANR	5522830	CompoundStatement		172:0:5129:5254	5522828	0					
ANR	5522831	IdentifierDeclStatement	char const * exec_path ;	173:1:5132:5153	5522828	0	True				
ANR	5522832	IdentifierDecl	* exec_path		5522828	0					
ANR	5522833	IdentifierDeclType	char const *		5522828	0					
ANR	5522834	Identifier	exec_path		5522828	1					
ANR	5522835	ExpressionStatement	list . rewind ( )	175:1:5157:5170	5522828	1	True				
ANR	5522836	CallExpression	list . rewind ( )		5522828	0					
ANR	5522837	Callee	list . rewind		5522828	0					
ANR	5522838	MemberAccess	list . rewind		5522828	0					
ANR	5522839	Identifier	list		5522828	0					
ANR	5522840	Identifier	rewind		5522828	1					
ANR	5522841	ArgumentList			5522828	1					
ANR	5522842	WhileStatement	while ( ( exec_path = list . next ( ) ) )		5522828	2					
ANR	5522843	Condition	exec_path = list . next ( )	177:8:5181:5205	5522828	0	True				
ANR	5522844	AssignmentExpression	exec_path = list . next ( )		5522828	0		=			
ANR	5522845	Identifier	exec_path		5522828	0					
ANR	5522846	CallExpression	list . next ( )		5522828	1					
ANR	5522847	Callee	list . next		5522828	0					
ANR	5522848	MemberAccess	list . next		5522828	0					
ANR	5522849	Identifier	list		5522828	0					
ANR	5522850	Identifier	next		5522828	1					
ANR	5522851	ArgumentList			5522828	1					
ANR	5522852	CompoundStatement		6:36:79:79	5522828	1					
ANR	5522853	ExpressionStatement	check_execute_dir_perms ( exec_path )	178:2:5213:5249	5522828	0	True				
ANR	5522854	CallExpression	check_execute_dir_perms ( exec_path )		5522828	0					
ANR	5522855	Callee	check_execute_dir_perms		5522828	0					
ANR	5522856	Identifier	check_execute_dir_perms		5522828	0					
ANR	5522857	ArgumentList	exec_path		5522828	1					
ANR	5522858	Argument	exec_path		5522828	0					
ANR	5522859	Identifier	exec_path		5522828	0					
ANR	5522860	ReturnType	void		5522828	1					
ANR	5522861	Identifier	check_execute_dir_perms		5522828	2					
ANR	5522862	ParameterList	StringList & list		5522828	3					
ANR	5522863	Parameter	StringList & list	171:25:5110:5125	5522828	0	True				
ANR	5522864	ParameterType	StringList &		5522828	0					
ANR	5522865	Identifier	list		5522828	1					
ANR	5522866	CFGEntryNode	ENTRY		5522828		True				
ANR	5522867	CFGExitNode	EXIT		5522828		True				
ANR	5522868	Symbol	exec_path		5522828						
ANR	5522869	Symbol	list . next		5522828						
ANR	5522870	Symbol	list		5522828						
ANR	5522871	Function	check_recovery_file	182:0:5257:6394							
ANR	5522872	FunctionDef	check_recovery_file (const char * execute_dir)		5522871	0					
ANR	5522873	CompoundStatement		184:0:5309:6394	5522871	0					
ANR	5522874	IdentifierDeclStatement	MyString recovery_file ;	185:1:5312:5334	5522871	0	True				
ANR	5522875	IdentifierDecl	recovery_file		5522871	0					
ANR	5522876	IdentifierDeclType	MyString		5522871	0					
ANR	5522877	Identifier	recovery_file		5522871	1					
ANR	5522878	IdentifierDeclStatement	FILE * recovery_fp = NULL ;	186:1:5337:5361	5522871	1	True				
ANR	5522879	IdentifierDecl	* recovery_fp = NULL		5522871	0					
ANR	5522880	IdentifierDeclType	FILE *		5522871	0					
ANR	5522881	Identifier	recovery_fp		5522871	1					
ANR	5522882	AssignmentExpression	* recovery_fp = NULL		5522871	2		=			
ANR	5522883	Identifier	NULL		5522871	0					
ANR	5522884	Identifier	NULL		5522871	1					
ANR	5522885	IdentifierDeclStatement	ClassAd * recovery_ad = NULL ;	187:1:5364:5391	5522871	2	True				
ANR	5522886	IdentifierDecl	* recovery_ad = NULL		5522871	0					
ANR	5522887	IdentifierDeclType	ClassAd *		5522871	0					
ANR	5522888	Identifier	recovery_ad		5522871	1					
ANR	5522889	AssignmentExpression	* recovery_ad = NULL		5522871	2		=			
ANR	5522890	Identifier	NULL		5522871	0					
ANR	5522891	Identifier	NULL		5522871	1					
ANR	5522892	IfStatement	if ( execute_dir == NULL )		5522871	3					
ANR	5522893	Condition	execute_dir == NULL	188:6:5399:5417	5522871	0	True				
ANR	5522894	EqualityExpression	execute_dir == NULL		5522871	0		==			
ANR	5522895	Identifier	execute_dir		5522871	0					
ANR	5522896	Identifier	NULL		5522871	1					
ANR	5522897	CompoundStatement		5:28:111:111	5522871	1					
ANR	5522898	ReturnStatement	return ;	189:2:5425:5431	5522871	0	True				
ANR	5522899	ExpressionStatement	"recovery_file . sprintf ( ""%s.recover"" , execute_dir )"	192:1:5438:5488	5522871	4	True				
ANR	5522900	CallExpression	"recovery_file . sprintf ( ""%s.recover"" , execute_dir )"		5522871	0					
ANR	5522901	Callee	recovery_file . sprintf		5522871	0					
ANR	5522902	MemberAccess	recovery_file . sprintf		5522871	0					
ANR	5522903	Identifier	recovery_file		5522871	0					
ANR	5522904	Identifier	sprintf		5522871	1					
ANR	5522905	ArgumentList	"""%s.recover"""		5522871	1					
ANR	5522906	Argument	"""%s.recover"""		5522871	0					
ANR	5522907	PrimaryExpression	"""%s.recover"""		5522871	0					
ANR	5522908	Argument	execute_dir		5522871	1					
ANR	5522909	Identifier	execute_dir		5522871	0					
ANR	5522910	IdentifierDeclStatement	StatInfo si ( recovery_file . Value ( ) ) ;	194:1:5492:5528	5522871	5	True				
ANR	5522911	IdentifierDecl	si ( recovery_file . Value ( ) )		5522871	0					
ANR	5522912	IdentifierDeclType	StatInfo		5522871	0					
ANR	5522913	Identifier	si		5522871	1					
ANR	5522914	CallExpression	recovery_file . Value ( )		5522871	2					
ANR	5522915	Callee	recovery_file . Value		5522871	0					
ANR	5522916	MemberAccess	recovery_file . Value		5522871	0					
ANR	5522917	Identifier	recovery_file		5522871	0					
ANR	5522918	Identifier	Value		5522871	1					
ANR	5522919	ArgumentList			5522871	1					
ANR	5522920	IfStatement	if ( si . Error ( ) )		5522871	6					
ANR	5522921	Condition	si . Error ( )	196:6:5537:5546	5522871	0	True				
ANR	5522922	CallExpression	si . Error ( )		5522871	0					
ANR	5522923	Callee	si . Error		5522871	0					
ANR	5522924	MemberAccess	si . Error		5522871	0					
ANR	5522925	Identifier	si		5522871	0					
ANR	5522926	Identifier	Error		5522871	1					
ANR	5522927	ArgumentList			5522871	1					
ANR	5522928	CompoundStatement		13:19:240:240	5522871	1					
ANR	5522929	IfStatement	if ( si . Error ( ) != SINoFile )		5522871	0					
ANR	5522930	Condition	si . Error ( ) != SINoFile	197:7:5559:5580	5522871	0	True				
ANR	5522931	EqualityExpression	si . Error ( ) != SINoFile		5522871	0		!=			
ANR	5522932	CallExpression	si . Error ( )		5522871	0					
ANR	5522933	Callee	si . Error		5522871	0					
ANR	5522934	MemberAccess	si . Error		5522871	0					
ANR	5522935	Identifier	si		5522871	0					
ANR	5522936	Identifier	Error		5522871	1					
ANR	5522937	ArgumentList			5522871	1					
ANR	5522938	Identifier	SINoFile		5522871	1					
ANR	5522939	CompoundStatement		14:32:274:274	5522871	1					
ANR	5522940	ExpressionStatement	unlink ( recovery_file . Value ( ) )	198:3:5589:5620	5522871	0	True				
ANR	5522941	CallExpression	unlink ( recovery_file . Value ( ) )		5522871	0					
ANR	5522942	Callee	unlink		5522871	0					
ANR	5522943	Identifier	unlink		5522871	0					
ANR	5522944	ArgumentList	recovery_file . Value ( )		5522871	1					
ANR	5522945	Argument	recovery_file . Value ( )		5522871	0					
ANR	5522946	CallExpression	recovery_file . Value ( )		5522871	0					
ANR	5522947	Callee	recovery_file . Value		5522871	0					
ANR	5522948	MemberAccess	recovery_file . Value		5522871	0					
ANR	5522949	Identifier	recovery_file		5522871	0					
ANR	5522950	Identifier	Value		5522871	1					
ANR	5522951	ArgumentList			5522871	1					
ANR	5522952	ReturnStatement	return ;	200:2:5628:5634	5522871	1	True				
ANR	5522953	ExpressionStatement	"recovery_fp = safe_fopen_wrapper_follow ( recovery_file . Value ( ) , ""r"" )"	205:1:5675:5744	5522871	7	True				
ANR	5522954	AssignmentExpression	"recovery_fp = safe_fopen_wrapper_follow ( recovery_file . Value ( ) , ""r"" )"		5522871	0		=			
ANR	5522955	Identifier	recovery_fp		5522871	0					
ANR	5522956	CallExpression	"safe_fopen_wrapper_follow ( recovery_file . Value ( ) , ""r"" )"		5522871	1					
ANR	5522957	Callee	safe_fopen_wrapper_follow		5522871	0					
ANR	5522958	Identifier	safe_fopen_wrapper_follow		5522871	0					
ANR	5522959	ArgumentList	recovery_file . Value ( )		5522871	1					
ANR	5522960	Argument	recovery_file . Value ( )		5522871	0					
ANR	5522961	CallExpression	recovery_file . Value ( )		5522871	0					
ANR	5522962	Callee	recovery_file . Value		5522871	0					
ANR	5522963	MemberAccess	recovery_file . Value		5522871	0					
ANR	5522964	Identifier	recovery_file		5522871	0					
ANR	5522965	Identifier	Value		5522871	1					
ANR	5522966	ArgumentList			5522871	1					
ANR	5522967	Argument	"""r"""		5522871	1					
ANR	5522968	PrimaryExpression	"""r"""		5522871	0					
ANR	5522969	IfStatement	if ( recovery_fp == NULL )		5522871	8					
ANR	5522970	Condition	recovery_fp == NULL	206:6:5752:5770	5522871	0	True				
ANR	5522971	EqualityExpression	recovery_fp == NULL		5522871	0		==			
ANR	5522972	Identifier	recovery_fp		5522871	0					
ANR	5522973	Identifier	NULL		5522871	1					
ANR	5522974	CompoundStatement		23:28:464:464	5522871	1					
ANR	5522975	ExpressionStatement	unlink ( recovery_file . Value ( ) )	207:2:5778:5809	5522871	0	True				
ANR	5522976	CallExpression	unlink ( recovery_file . Value ( ) )		5522871	0					
ANR	5522977	Callee	unlink		5522871	0					
ANR	5522978	Identifier	unlink		5522871	0					
ANR	5522979	ArgumentList	recovery_file . Value ( )		5522871	1					
ANR	5522980	Argument	recovery_file . Value ( )		5522871	0					
ANR	5522981	CallExpression	recovery_file . Value ( )		5522871	0					
ANR	5522982	Callee	recovery_file . Value		5522871	0					
ANR	5522983	MemberAccess	recovery_file . Value		5522871	0					
ANR	5522984	Identifier	recovery_file		5522871	0					
ANR	5522985	Identifier	Value		5522871	1					
ANR	5522986	ArgumentList			5522871	1					
ANR	5522987	ReturnStatement	return ;	208:2:5813:5819	5522871	1	True				
ANR	5522988	IdentifierDeclStatement	int eof = 0 ;	211:1:5826:5837	5522871	9	True				
ANR	5522989	IdentifierDecl	eof = 0		5522871	0					
ANR	5522990	IdentifierDeclType	int		5522871	0					
ANR	5522991	Identifier	eof		5522871	1					
ANR	5522992	AssignmentExpression	eof = 0		5522871	2		=			
ANR	5522993	Identifier	eof		5522871	0					
ANR	5522994	PrimaryExpression	0		5522871	1					
ANR	5522995	IdentifierDeclStatement	int error = 0 ;	212:1:5840:5853	5522871	10	True				
ANR	5522996	IdentifierDecl	error = 0		5522871	0					
ANR	5522997	IdentifierDeclType	int		5522871	0					
ANR	5522998	Identifier	error		5522871	1					
ANR	5522999	AssignmentExpression	error = 0		5522871	2		=			
ANR	5523000	Identifier	error		5522871	0					
ANR	5523001	PrimaryExpression	0		5522871	1					
ANR	5523002	IdentifierDeclStatement	int empty = 0 ;	213:1:5856:5869	5522871	11	True				
ANR	5523003	IdentifierDecl	empty = 0		5522871	0					
ANR	5523004	IdentifierDeclType	int		5522871	0					
ANR	5523005	Identifier	empty		5522871	1					
ANR	5523006	AssignmentExpression	empty = 0		5522871	2		=			
ANR	5523007	Identifier	empty		5522871	0					
ANR	5523008	PrimaryExpression	0		5522871	1					
ANR	5523009	ExpressionStatement	"recovery_ad = new ClassAd ( recovery_fp , ""***"" , eof , error , empty )"	214:1:5872:5938	5522871	12	True				
ANR	5523010	AssignmentExpression	"recovery_ad = new ClassAd ( recovery_fp , ""***"" , eof , error , empty )"		5522871	0		=			
ANR	5523011	Identifier	recovery_ad		5522871	0					
ANR	5523012	Expression	"recovery_fp , ""***"" , eof , error , empty"		5522871	1					
ANR	5523013	Identifier	recovery_fp		5522871	0					
ANR	5523014	Expression	"""***"" , eof , error , empty"		5522871	1					
ANR	5523015	PrimaryExpression	"""***"""		5522871	0					
ANR	5523016	Expression	"eof , error , empty"		5522871	1					
ANR	5523017	Identifier	eof		5522871	0					
ANR	5523018	Expression	"error , empty"		5522871	1					
ANR	5523019	Identifier	error		5522871	0					
ANR	5523020	Identifier	empty		5522871	1					
ANR	5523021	IfStatement	if ( error || empty )		5522871	13					
ANR	5523022	Condition	error || empty	215:6:5946:5959	5522871	0	True				
ANR	5523023	OrExpression	error || empty		5522871	0		||			
ANR	5523024	Identifier	error		5522871	0					
ANR	5523025	Identifier	empty		5522871	1					
ANR	5523026	CompoundStatement		32:23:653:653	5522871	1					
ANR	5523027	ExpressionStatement	fclose ( recovery_fp )	216:2:5967:5988	5522871	0	True				
ANR	5523028	CallExpression	fclose ( recovery_fp )		5522871	0					
ANR	5523029	Callee	fclose		5522871	0					
ANR	5523030	Identifier	fclose		5522871	0					
ANR	5523031	ArgumentList	recovery_fp		5522871	1					
ANR	5523032	Argument	recovery_fp		5522871	0					
ANR	5523033	Identifier	recovery_fp		5522871	0					
ANR	5523034	ExpressionStatement	unlink ( recovery_file . Value ( ) )	217:2:5992:6023	5522871	1	True				
ANR	5523035	CallExpression	unlink ( recovery_file . Value ( ) )		5522871	0					
ANR	5523036	Callee	unlink		5522871	0					
ANR	5523037	Identifier	unlink		5522871	0					
ANR	5523038	ArgumentList	recovery_file . Value ( )		5522871	1					
ANR	5523039	Argument	recovery_file . Value ( )		5522871	0					
ANR	5523040	CallExpression	recovery_file . Value ( )		5522871	0					
ANR	5523041	Callee	recovery_file . Value		5522871	0					
ANR	5523042	MemberAccess	recovery_file . Value		5522871	0					
ANR	5523043	Identifier	recovery_file		5522871	0					
ANR	5523044	Identifier	Value		5522871	1					
ANR	5523045	ArgumentList			5522871	1					
ANR	5523046	ReturnStatement	return ;	218:2:6027:6033	5522871	2	True				
ANR	5523047	IdentifierDeclStatement	int universe = 0 ;	221:1:6040:6056	5522871	14	True				
ANR	5523048	IdentifierDecl	universe = 0		5522871	0					
ANR	5523049	IdentifierDeclType	int		5522871	0					
ANR	5523050	Identifier	universe		5522871	1					
ANR	5523051	AssignmentExpression	universe = 0		5522871	2		=			
ANR	5523052	Identifier	universe		5522871	0					
ANR	5523053	PrimaryExpression	0		5522871	1					
ANR	5523054	ExpressionStatement	"recovery_ad -> LookupInteger ( ATTR_JOB_UNIVERSE , universe )"	222:1:6059:6116	5522871	15	True				
ANR	5523055	CallExpression	"recovery_ad -> LookupInteger ( ATTR_JOB_UNIVERSE , universe )"		5522871	0					
ANR	5523056	Callee	recovery_ad -> LookupInteger		5522871	0					
ANR	5523057	PtrMemberAccess	recovery_ad -> LookupInteger		5522871	0					
ANR	5523058	Identifier	recovery_ad		5522871	0					
ANR	5523059	Identifier	LookupInteger		5522871	1					
ANR	5523060	ArgumentList	ATTR_JOB_UNIVERSE		5522871	1					
ANR	5523061	Argument	ATTR_JOB_UNIVERSE		5522871	0					
ANR	5523062	Identifier	ATTR_JOB_UNIVERSE		5522871	0					
ANR	5523063	Argument	universe		5522871	1					
ANR	5523064	Identifier	universe		5522871	0					
ANR	5523065	IfStatement	if ( universe == CONDOR_UNIVERSE_VM )		5522871	16					
ANR	5523066	Condition	universe == CONDOR_UNIVERSE_VM	223:6:6124:6153	5522871	0	True				
ANR	5523067	EqualityExpression	universe == CONDOR_UNIVERSE_VM		5522871	0		==			
ANR	5523068	Identifier	universe		5522871	0					
ANR	5523069	Identifier	CONDOR_UNIVERSE_VM		5522871	1					
ANR	5523070	CompoundStatement		41:2:851:865	5522871	1					
ANR	5523071	IdentifierDeclStatement	MyString vm_id ;	224:2:6161:6175	5522871	0	True				
ANR	5523072	IdentifierDecl	vm_id		5522871	0					
ANR	5523073	IdentifierDeclType	MyString		5522871	0					
ANR	5523074	Identifier	vm_id		5522871	1					
ANR	5523075	ExpressionStatement	"recovery_ad -> LookupString ( ""JobVMId"" , vm_id )"	225:2:6179:6224	5522871	1	True				
ANR	5523076	CallExpression	"recovery_ad -> LookupString ( ""JobVMId"" , vm_id )"		5522871	0					
ANR	5523077	Callee	recovery_ad -> LookupString		5522871	0					
ANR	5523078	PtrMemberAccess	recovery_ad -> LookupString		5522871	0					
ANR	5523079	Identifier	recovery_ad		5522871	0					
ANR	5523080	Identifier	LookupString		5522871	1					
ANR	5523081	ArgumentList	"""JobVMId"""		5522871	1					
ANR	5523082	Argument	"""JobVMId"""		5522871	0					
ANR	5523083	PrimaryExpression	"""JobVMId"""		5522871	0					
ANR	5523084	Argument	vm_id		5522871	1					
ANR	5523085	Identifier	vm_id		5522871	0					
ANR	5523086	IfStatement	if ( ! vm_id . IsEmpty ( ) )		5522871	2					
ANR	5523087	Condition	! vm_id . IsEmpty ( )	226:7:6233:6248	5522871	0	True				
ANR	5523088	UnaryOperationExpression	! vm_id . IsEmpty ( )		5522871	0					
ANR	5523089	UnaryOperator	!		5522871	0					
ANR	5523090	CallExpression	vm_id . IsEmpty ( )		5522871	1					
ANR	5523091	Callee	vm_id . IsEmpty		5522871	0					
ANR	5523092	MemberAccess	vm_id . IsEmpty		5522871	0					
ANR	5523093	Identifier	vm_id		5522871	0					
ANR	5523094	Identifier	IsEmpty		5522871	1					
ANR	5523095	ArgumentList			5522871	1					
ANR	5523096	CompoundStatement		43:26:942:942	5522871	1					
ANR	5523097	ExpressionStatement	resmgr -> m_vmuniverse_mgr . killVM ( vm_id . Value ( ) )	227:3:6257:6305	5522871	0	True				
ANR	5523098	CallExpression	resmgr -> m_vmuniverse_mgr . killVM ( vm_id . Value ( ) )		5522871	0					
ANR	5523099	Callee	resmgr -> m_vmuniverse_mgr . killVM		5522871	0					
ANR	5523100	MemberAccess	resmgr -> m_vmuniverse_mgr . killVM		5522871	0					
ANR	5523101	PtrMemberAccess	resmgr -> m_vmuniverse_mgr		5522871	0					
ANR	5523102	Identifier	resmgr		5522871	0					
ANR	5523103	Identifier	m_vmuniverse_mgr		5522871	1					
ANR	5523104	Identifier	killVM		5522871	1					
ANR	5523105	ArgumentList	vm_id . Value ( )		5522871	1					
ANR	5523106	Argument	vm_id . Value ( )		5522871	0					
ANR	5523107	CallExpression	vm_id . Value ( )		5522871	0					
ANR	5523108	Callee	vm_id . Value		5522871	0					
ANR	5523109	MemberAccess	vm_id . Value		5522871	0					
ANR	5523110	Identifier	vm_id		5522871	0					
ANR	5523111	Identifier	Value		5522871	1					
ANR	5523112	ArgumentList			5522871	1					
ANR	5523113	Statement	delete	231:1:6316:6321	5522871	17	True				
ANR	5523114	ExpressionStatement	recovery_ad	231:8:6323:6334	5522871	18	True				
ANR	5523115	Identifier	recovery_ad		5522871	0					
ANR	5523116	ExpressionStatement	fclose ( recovery_fp )	232:1:6337:6358	5522871	19	True				
ANR	5523117	CallExpression	fclose ( recovery_fp )		5522871	0					
ANR	5523118	Callee	fclose		5522871	0					
ANR	5523119	Identifier	fclose		5522871	0					
ANR	5523120	ArgumentList	recovery_fp		5522871	1					
ANR	5523121	Argument	recovery_fp		5522871	0					
ANR	5523122	Identifier	recovery_fp		5522871	0					
ANR	5523123	ExpressionStatement	unlink ( recovery_file . Value ( ) )	233:1:6361:6392	5522871	20	True				
ANR	5523124	CallExpression	unlink ( recovery_file . Value ( ) )		5522871	0					
ANR	5523125	Callee	unlink		5522871	0					
ANR	5523126	Identifier	unlink		5522871	0					
ANR	5523127	ArgumentList	recovery_file . Value ( )		5522871	1					
ANR	5523128	Argument	recovery_file . Value ( )		5522871	0					
ANR	5523129	CallExpression	recovery_file . Value ( )		5522871	0					
ANR	5523130	Callee	recovery_file . Value		5522871	0					
ANR	5523131	MemberAccess	recovery_file . Value		5522871	0					
ANR	5523132	Identifier	recovery_file		5522871	0					
ANR	5523133	Identifier	Value		5522871	1					
ANR	5523134	ArgumentList			5522871	1					
ANR	5523135	ReturnType	void		5522871	1					
ANR	5523136	Identifier	check_recovery_file		5522871	2					
ANR	5523137	ParameterList	const char * execute_dir		5522871	3					
ANR	5523138	Parameter	const char * execute_dir	183:21:5283:5305	5522871	0	True				
ANR	5523139	ParameterType	const char *		5522871	0					
ANR	5523140	Identifier	execute_dir		5522871	1					
ANR	5523141	CFGEntryNode	ENTRY		5522871		True				
ANR	5523142	CFGExitNode	EXIT		5522871		True				
ANR	5523143	Symbol	execute_dir		5522871						
ANR	5523144	Symbol	recovery_file		5522871						
ANR	5523145	Symbol	NULL		5522871						
ANR	5523146	Symbol	* resmgr		5522871						
ANR	5523147	Symbol	vm_id . Value		5522871						
ANR	5523148	Symbol	error		5522871						
ANR	5523149	Symbol	recovery_ad		5522871						
ANR	5523150	Symbol	empty		5522871						
ANR	5523151	Symbol	recovery_file . Value		5522871						
ANR	5523152	Symbol	vm_id		5522871						
ANR	5523153	Symbol	SINoFile		5522871						
ANR	5523154	Symbol	vm_id . IsEmpty		5522871						
ANR	5523155	Symbol	ATTR_JOB_UNIVERSE		5522871						
ANR	5523156	Symbol	resmgr		5522871						
ANR	5523157	Symbol	recovery_fp		5522871						
ANR	5523158	Symbol	si		5522871						
ANR	5523159	Symbol	universe		5522871						
ANR	5523160	Symbol	CONDOR_UNIVERSE_VM		5522871						
ANR	5523161	Symbol	si . Error		5522871						
ANR	5523162	Symbol	safe_fopen_wrapper_follow		5522871						
ANR	5523163	Symbol	eof		5522871						
ANR	5523164	Symbol	resmgr -> m_vmuniverse_mgr		5522871						
ANR	5523165	Function	cleanup_execute_dirs	236:0:6397:7473							
ANR	5523166	FunctionDef	cleanup_execute_dirs (StringList & list)		5523165	0					
ANR	5523167	CompoundStatement		238:0:6443:7473	5523165	0					
ANR	5523168	IdentifierDeclStatement	char const * exec_path ;	239:1:6446:6467	5523165	0	True				
ANR	5523169	IdentifierDecl	* exec_path		5523165	0					
ANR	5523170	IdentifierDeclType	char const *		5523165	0					
ANR	5523171	Identifier	exec_path		5523165	1					
ANR	5523172	ExpressionStatement	list . rewind ( )	241:1:6471:6484	5523165	1	True				
ANR	5523173	CallExpression	list . rewind ( )		5523165	0					
ANR	5523174	Callee	list . rewind		5523165	0					
ANR	5523175	MemberAccess	list . rewind		5523165	0					
ANR	5523176	Identifier	list		5523165	0					
ANR	5523177	Identifier	rewind		5523165	1					
ANR	5523178	ArgumentList			5523165	1					
ANR	5523179	WhileStatement	while ( ( exec_path = list . next ( ) ) )		5523165	2					
ANR	5523180	Condition	exec_path = list . next ( )	243:8:6495:6519	5523165	0	True				
ANR	5523181	AssignmentExpression	exec_path = list . next ( )		5523165	0		=			
ANR	5523182	Identifier	exec_path		5523165	0					
ANR	5523183	CallExpression	list . next ( )		5523165	1					
ANR	5523184	Callee	list . next		5523165	0					
ANR	5523185	MemberAccess	list . next		5523165	0					
ANR	5523186	Identifier	list		5523165	0					
ANR	5523187	Identifier	next		5523165	1					
ANR	5523188	ArgumentList			5523165	1					
ANR	5523189	CompoundStatement		13:2:274:306	5523165	1					
ANR	5523190	IdentifierDeclStatement	dynuser nobody_login ;	245:2:6546:6566	5523165	0	True				
ANR	5523191	IdentifierDecl	nobody_login		5523165	0					
ANR	5523192	IdentifierDeclType	dynuser		5523165	0					
ANR	5523193	Identifier	nobody_login		5523165	1					
ANR	5523194	ExpressionStatement	"nobody_login . cleanup_condor_users ( ""condor-run-"" )"	247:2:6613:6661	5523165	1	True				
ANR	5523195	CallExpression	"nobody_login . cleanup_condor_users ( ""condor-run-"" )"		5523165	0					
ANR	5523196	Callee	nobody_login . cleanup_condor_users		5523165	0					
ANR	5523197	MemberAccess	nobody_login . cleanup_condor_users		5523165	0					
ANR	5523198	Identifier	nobody_login		5523165	0					
ANR	5523199	Identifier	cleanup_condor_users		5523165	1					
ANR	5523200	ArgumentList	"""condor-run-"""		5523165	1					
ANR	5523201	Argument	"""condor-run-"""		5523165	0					
ANR	5523202	PrimaryExpression	"""condor-run-"""		5523165	0					
ANR	5523203	IdentifierDeclStatement	Directory execute_dir ( exec_path ) ;	250:2:6718:6750	5523165	2	True				
ANR	5523204	IdentifierDecl	execute_dir ( exec_path )		5523165	0					
ANR	5523205	IdentifierDeclType	Directory		5523165	0					
ANR	5523206	Identifier	execute_dir		5523165	1					
ANR	5523207	Identifier	exec_path		5523165	2					
ANR	5523208	ExpressionStatement	execute_dir . Rewind ( )	252:2:6755:6775	5523165	3	True				
ANR	5523209	CallExpression	execute_dir . Rewind ( )		5523165	0					
ANR	5523210	Callee	execute_dir . Rewind		5523165	0					
ANR	5523211	MemberAccess	execute_dir . Rewind		5523165	0					
ANR	5523212	Identifier	execute_dir		5523165	0					
ANR	5523213	Identifier	Rewind		5523165	1					
ANR	5523214	ArgumentList			5523165	1					
ANR	5523215	WhileStatement	while ( execute_dir . Next ( ) )		5523165	4					
ANR	5523216	Condition	execute_dir . Next ( )	253:10:6787:6804	5523165	0	True				
ANR	5523217	CallExpression	execute_dir . Next ( )		5523165	0					
ANR	5523218	Callee	execute_dir . Next		5523165	0					
ANR	5523219	MemberAccess	execute_dir . Next		5523165	0					
ANR	5523220	Identifier	execute_dir		5523165	0					
ANR	5523221	Identifier	Next		5523165	1					
ANR	5523222	ArgumentList			5523165	1					
ANR	5523223	CompoundStatement		16:31:364:364	5523165	1					
ANR	5523224	ExpressionStatement	check_recovery_file ( execute_dir . GetFullPath ( ) )	254:3:6813:6861	5523165	0	True				
ANR	5523225	CallExpression	check_recovery_file ( execute_dir . GetFullPath ( ) )		5523165	0					
ANR	5523226	Callee	check_recovery_file		5523165	0					
ANR	5523227	Identifier	check_recovery_file		5523165	0					
ANR	5523228	ArgumentList	execute_dir . GetFullPath ( )		5523165	1					
ANR	5523229	Argument	execute_dir . GetFullPath ( )		5523165	0					
ANR	5523230	CallExpression	execute_dir . GetFullPath ( )		5523165	0					
ANR	5523231	Callee	execute_dir . GetFullPath		5523165	0					
ANR	5523232	MemberAccess	execute_dir . GetFullPath		5523165	0					
ANR	5523233	Identifier	execute_dir		5523165	0					
ANR	5523234	Identifier	GetFullPath		5523165	1					
ANR	5523235	ArgumentList			5523165	1					
ANR	5523236	ExpressionStatement	execute_dir . Remove_Entire_Directory ( )	257:2:6870:6907	5523165	5	True				
ANR	5523237	CallExpression	execute_dir . Remove_Entire_Directory ( )		5523165	0					
ANR	5523238	Callee	execute_dir . Remove_Entire_Directory		5523165	0					
ANR	5523239	MemberAccess	execute_dir . Remove_Entire_Directory		5523165	0					
ANR	5523240	Identifier	execute_dir		5523165	0					
ANR	5523241	Identifier	Remove_Entire_Directory		5523165	1					
ANR	5523242	ArgumentList			5523165	1					
ANR	5523243	ReturnType	void		5523165	1					
ANR	5523244	Identifier	cleanup_execute_dirs		5523165	2					
ANR	5523245	ParameterList	StringList & list		5523165	3					
ANR	5523246	Parameter	StringList & list	237:22:6424:6439	5523165	0	True				
ANR	5523247	ParameterType	StringList &		5523165	0					
ANR	5523248	Identifier	list		5523165	1					
ANR	5523249	CFGEntryNode	ENTRY		5523165		True				
ANR	5523250	CFGExitNode	EXIT		5523165		True				
ANR	5523251	Symbol	execute_dir		5523165						
ANR	5523252	Symbol	exec_path		5523165						
ANR	5523253	Symbol	execute_dir . GetFullPath		5523165						
ANR	5523254	Symbol	execute_dir . Next		5523165						
ANR	5523255	Symbol	list . next		5523165						
ANR	5523256	Symbol	list		5523165						
ANR	5523257	Symbol	nobody_login		5523165						
ANR	5523258	Function	cleanup_execute_dir	283:0:7476:9675							
ANR	5523259	FunctionDef	"cleanup_execute_dir (int pid , char const * exec_path)"		5523258	0					
ANR	5523260	CompoundStatement		285:0:7533:9675	5523258	0					
ANR	5523261	ExpressionStatement	ASSERT ( pid )	286:1:7536:7549	5523258	0	True				
ANR	5523262	CallExpression	ASSERT ( pid )		5523258	0					
ANR	5523263	Callee	ASSERT		5523258	0					
ANR	5523264	Identifier	ASSERT		5523258	0					
ANR	5523265	ArgumentList	pid		5523258	1					
ANR	5523266	Argument	pid		5523258	0					
ANR	5523267	Identifier	pid		5523258	0					
ANR	5523268	IdentifierDeclStatement	MyString buf ;	289:1:7572:7584	5523258	1	True				
ANR	5523269	IdentifierDecl	buf		5523258	0					
ANR	5523270	IdentifierDeclType	MyString		5523258	0					
ANR	5523271	Identifier	buf		5523258	1					
ANR	5523272	IdentifierDeclStatement	dynuser nobody_login ;	290:1:7587:7607	5523258	2	True				
ANR	5523273	IdentifierDecl	nobody_login		5523258	0					
ANR	5523274	IdentifierDeclType	dynuser		5523258	0					
ANR	5523275	Identifier	nobody_login		5523258	1					
ANR	5523276	IfStatement	if ( nobody_login . reuse_accounts ( ) == false )		5523258	3					
ANR	5523277	Condition	nobody_login . reuse_accounts ( ) == false	292:6:7616:7653	5523258	0	True				
ANR	5523278	EqualityExpression	nobody_login . reuse_accounts ( ) == false		5523258	0		==			
ANR	5523279	CallExpression	nobody_login . reuse_accounts ( )		5523258	0					
ANR	5523280	Callee	nobody_login . reuse_accounts		5523258	0					
ANR	5523281	MemberAccess	nobody_login . reuse_accounts		5523258	0					
ANR	5523282	Identifier	nobody_login		5523258	0					
ANR	5523283	Identifier	reuse_accounts		5523258	1					
ANR	5523284	ArgumentList			5523258	1					
ANR	5523285	Identifier	false		5523258	1					
ANR	5523286	CompoundStatement		8:47:123:123	5523258	1					
ANR	5523287	ExpressionStatement	"buf . sprintf ( ""condor-run-%d"" , pid )"	297:2:7889:7921	5523258	0	True				
ANR	5523288	CallExpression	"buf . sprintf ( ""condor-run-%d"" , pid )"		5523258	0					
ANR	5523289	Callee	buf . sprintf		5523258	0					
ANR	5523290	MemberAccess	buf . sprintf		5523258	0					
ANR	5523291	Identifier	buf		5523258	0					
ANR	5523292	Identifier	sprintf		5523258	1					
ANR	5523293	ArgumentList	"""condor-run-%d"""		5523258	1					
ANR	5523294	Argument	"""condor-run-%d"""		5523258	0					
ANR	5523295	PrimaryExpression	"""condor-run-%d"""		5523258	0					
ANR	5523296	Argument	pid		5523258	1					
ANR	5523297	Identifier	pid		5523258	0					
ANR	5523298	IfStatement	if ( nobody_login . deleteuser ( buf . Value ( ) ) )		5523258	1					
ANR	5523299	Condition	nobody_login . deleteuser ( buf . Value ( ) )	298:7:7930:7965	5523258	0	True				
ANR	5523300	CallExpression	nobody_login . deleteuser ( buf . Value ( ) )		5523258	0					
ANR	5523301	Callee	nobody_login . deleteuser		5523258	0					
ANR	5523302	MemberAccess	nobody_login . deleteuser		5523258	0					
ANR	5523303	Identifier	nobody_login		5523258	0					
ANR	5523304	Identifier	deleteuser		5523258	1					
ANR	5523305	ArgumentList	buf . Value ( )		5523258	1					
ANR	5523306	Argument	buf . Value ( )		5523258	0					
ANR	5523307	CallExpression	buf . Value ( )		5523258	0					
ANR	5523308	Callee	buf . Value		5523258	0					
ANR	5523309	MemberAccess	buf . Value		5523258	0					
ANR	5523310	Identifier	buf		5523258	0					
ANR	5523311	Identifier	Value		5523258	1					
ANR	5523312	ArgumentList			5523258	1					
ANR	5523313	CompoundStatement		14:46:435:435	5523258	1					
ANR	5523314	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Removed account %s left by starter\\n"" , buf . Value ( ) )"	299:3:7974:8045	5523258	0	True				
ANR	5523315	CallExpression	"dprintf ( D_FULLDEBUG , ""Removed account %s left by starter\\n"" , buf . Value ( ) )"		5523258	0					
ANR	5523316	Callee	dprintf		5523258	0					
ANR	5523317	Identifier	dprintf		5523258	0					
ANR	5523318	ArgumentList	D_FULLDEBUG		5523258	1					
ANR	5523319	Argument	D_FULLDEBUG		5523258	0					
ANR	5523320	Identifier	D_FULLDEBUG		5523258	0					
ANR	5523321	Argument	"""Removed account %s left by starter\\n"""		5523258	1					
ANR	5523322	PrimaryExpression	"""Removed account %s left by starter\\n"""		5523258	0					
ANR	5523323	Argument	buf . Value ( )		5523258	2					
ANR	5523324	CallExpression	buf . Value ( )		5523258	0					
ANR	5523325	Callee	buf . Value		5523258	0					
ANR	5523326	MemberAccess	buf . Value		5523258	0					
ANR	5523327	Identifier	buf		5523258	0					
ANR	5523328	Identifier	Value		5523258	1					
ANR	5523329	ArgumentList			5523258	1					
ANR	5523330	ExpressionStatement	"buf . sprintf ( ""%s\\\\dir_%d"" , exec_path , pid )"	308:1:8315:8358	5523258	4	True				
ANR	5523331	CallExpression	"buf . sprintf ( ""%s\\\\dir_%d"" , exec_path , pid )"		5523258	0					
ANR	5523332	Callee	buf . sprintf		5523258	0					
ANR	5523333	MemberAccess	buf . sprintf		5523258	0					
ANR	5523334	Identifier	buf		5523258	0					
ANR	5523335	Identifier	sprintf		5523258	1					
ANR	5523336	ArgumentList	"""%s\\\\dir_%d"""		5523258	1					
ANR	5523337	Argument	"""%s\\\\dir_%d"""		5523258	0					
ANR	5523338	PrimaryExpression	"""%s\\\\dir_%d"""		5523258	0					
ANR	5523339	Argument	exec_path		5523258	1					
ANR	5523340	Identifier	exec_path		5523258	0					
ANR	5523341	Argument	pid		5523258	2					
ANR	5523342	Identifier	pid		5523258	0					
ANR	5523343	ExpressionStatement	check_recovery_file ( buf . Value ( ) )	310:1:8363:8397	5523258	5	True				
ANR	5523344	CallExpression	check_recovery_file ( buf . Value ( ) )		5523258	0					
ANR	5523345	Callee	check_recovery_file		5523258	0					
ANR	5523346	Identifier	check_recovery_file		5523258	0					
ANR	5523347	ArgumentList	buf . Value ( )		5523258	1					
ANR	5523348	Argument	buf . Value ( )		5523258	0					
ANR	5523349	CallExpression	buf . Value ( )		5523258	0					
ANR	5523350	Callee	buf . Value		5523258	0					
ANR	5523351	MemberAccess	buf . Value		5523258	0					
ANR	5523352	Identifier	buf		5523258	0					
ANR	5523353	Identifier	Value		5523258	1					
ANR	5523354	ArgumentList			5523258	1					
ANR	5523355	IdentifierDeclStatement	Directory dir ( buf . Value ( ) ) ;	312:1:8401:8429	5523258	6	True				
ANR	5523356	IdentifierDecl	dir ( buf . Value ( ) )		5523258	0					
ANR	5523357	IdentifierDeclType	Directory		5523258	0					
ANR	5523358	Identifier	dir		5523258	1					
ANR	5523359	CallExpression	buf . Value ( )		5523258	2					
ANR	5523360	Callee	buf . Value		5523258	0					
ANR	5523361	MemberAccess	buf . Value		5523258	0					
ANR	5523362	Identifier	buf		5523258	0					
ANR	5523363	Identifier	Value		5523258	1					
ANR	5523364	ArgumentList			5523258	1					
ANR	5523365	ExpressionStatement	dir . Remove_Full_Path ( buf . Value ( ) )	313:1:8432:8465	5523258	7	True				
ANR	5523366	CallExpression	dir . Remove_Full_Path ( buf . Value ( ) )		5523258	0					
ANR	5523367	Callee	dir . Remove_Full_Path		5523258	0					
ANR	5523368	MemberAccess	dir . Remove_Full_Path		5523258	0					
ANR	5523369	Identifier	dir		5523258	0					
ANR	5523370	Identifier	Remove_Full_Path		5523258	1					
ANR	5523371	ArgumentList	buf . Value ( )		5523258	1					
ANR	5523372	Argument	buf . Value ( )		5523258	0					
ANR	5523373	CallExpression	buf . Value ( )		5523258	0					
ANR	5523374	Callee	buf . Value		5523258	0					
ANR	5523375	MemberAccess	buf . Value		5523258	0					
ANR	5523376	Identifier	buf		5523258	0					
ANR	5523377	Identifier	Value		5523258	1					
ANR	5523378	ArgumentList			5523258	1					
ANR	5523379	ReturnType	void		5523258	1					
ANR	5523380	Identifier	cleanup_execute_dir		5523258	2					
ANR	5523381	ParameterList	"int pid , char const * exec_path"		5523258	3					
ANR	5523382	Parameter	int pid	284:20:7501:7507	5523258	0	True				
ANR	5523383	ParameterType	int		5523258	0					
ANR	5523384	Identifier	pid		5523258	1					
ANR	5523385	Parameter	char const * exec_path	284:29:7510:7530	5523258	1	True				
ANR	5523386	ParameterType	char const *		5523258	0					
ANR	5523387	Identifier	exec_path		5523258	1					
ANR	5523388	CFGEntryNode	ENTRY		5523258		True				
ANR	5523389	CFGExitNode	EXIT		5523258		True				
ANR	5523390	Symbol	exec_path		5523258						
ANR	5523391	Symbol	buf		5523258						
ANR	5523392	Symbol	nobody_login . reuse_accounts		5523258						
ANR	5523393	Symbol	nobody_login . deleteuser		5523258						
ANR	5523394	Symbol	false		5523258						
ANR	5523395	Symbol	buf . Value		5523258						
ANR	5523396	Symbol	pid		5523258						
ANR	5523397	Symbol	D_FULLDEBUG		5523258						
ANR	5523398	Symbol	nobody_login		5523258						
ANR	5523399	Symbol	dir		5523258						
ANR	5523400	Function	create_port	359:0:9678:9838							
ANR	5523401	FunctionDef	create_port (ReliSock * rsock)		5523400	0					
ANR	5523402	CompoundStatement		361:0:9713:9838	5523400	0					
ANR	5523403	ExpressionStatement	rsock -> bind ( FALSE )	363:1:9766:9786	5523400	0	True				
ANR	5523404	CallExpression	rsock -> bind ( FALSE )		5523400	0					
ANR	5523405	Callee	rsock -> bind		5523400	0					
ANR	5523406	PtrMemberAccess	rsock -> bind		5523400	0					
ANR	5523407	Identifier	rsock		5523400	0					
ANR	5523408	Identifier	bind		5523400	1					
ANR	5523409	ArgumentList	FALSE		5523400	1					
ANR	5523410	Argument	FALSE		5523400	0					
ANR	5523411	Identifier	FALSE		5523400	0					
ANR	5523412	ExpressionStatement	rsock -> listen ( )	364:1:9789:9804	5523400	1	True				
ANR	5523413	CallExpression	rsock -> listen ( )		5523400	0					
ANR	5523414	Callee	rsock -> listen		5523400	0					
ANR	5523415	PtrMemberAccess	rsock -> listen		5523400	0					
ANR	5523416	Identifier	rsock		5523400	0					
ANR	5523417	Identifier	listen		5523400	1					
ANR	5523418	ArgumentList			5523400	1					
ANR	5523419	ReturnStatement	return rsock -> get_file_desc ( ) ;	365:1:9807:9836	5523400	2	True				
ANR	5523420	CallExpression	rsock -> get_file_desc ( )		5523400	0					
ANR	5523421	Callee	rsock -> get_file_desc		5523400	0					
ANR	5523422	PtrMemberAccess	rsock -> get_file_desc		5523400	0					
ANR	5523423	Identifier	rsock		5523400	0					
ANR	5523424	Identifier	get_file_desc		5523400	1					
ANR	5523425	ArgumentList			5523400	1					
ANR	5523426	ReturnType	int		5523400	1					
ANR	5523427	Identifier	create_port		5523400	2					
ANR	5523428	ParameterList	ReliSock * rsock		5523400	3					
ANR	5523429	Parameter	ReliSock * rsock	360:13:9695:9709	5523400	0	True				
ANR	5523430	ParameterType	ReliSock *		5523400	0					
ANR	5523431	Identifier	rsock		5523400	1					
ANR	5523432	CFGEntryNode	ENTRY		5523400		True				
ANR	5523433	CFGExitNode	EXIT		5523400		True				
ANR	5523434	Symbol	rsock		5523400						
ANR	5523435	Symbol	FALSE		5523400						
ANR	5523436	Symbol	rsock -> get_file_desc		5523400						
ANR	5523437	Symbol	* rsock		5523400						
ANR	5523438	Function	reply	369:0:9842:9984							
ANR	5523439	FunctionDef	"reply (Stream * s , int cmd)"		5523438	0					
ANR	5523440	CompoundStatement		371:0:9875:9984	5523438	0					
ANR	5523441	ExpressionStatement	s -> encode ( )	372:1:9878:9889	5523438	0	True				
ANR	5523442	CallExpression	s -> encode ( )		5523438	0					
ANR	5523443	Callee	s -> encode		5523438	0					
ANR	5523444	PtrMemberAccess	s -> encode		5523438	0					
ANR	5523445	Identifier	s		5523438	0					
ANR	5523446	Identifier	encode		5523438	1					
ANR	5523447	ArgumentList			5523438	1					
ANR	5523448	IfStatement	if ( ! s -> code ( cmd ) || ! s -> end_of_message ( ) )		5523438	1					
ANR	5523449	Condition	! s -> code ( cmd ) || ! s -> end_of_message ( )	373:5:9896:9934	5523438	0	True				
ANR	5523450	OrExpression	! s -> code ( cmd ) || ! s -> end_of_message ( )		5523438	0		||			
ANR	5523451	UnaryOperationExpression	! s -> code ( cmd )		5523438	0					
ANR	5523452	UnaryOperator	!		5523438	0					
ANR	5523453	CallExpression	s -> code ( cmd )		5523438	1					
ANR	5523454	Callee	s -> code		5523438	0					
ANR	5523455	PtrMemberAccess	s -> code		5523438	0					
ANR	5523456	Identifier	s		5523438	0					
ANR	5523457	Identifier	code		5523438	1					
ANR	5523458	ArgumentList	cmd		5523438	1					
ANR	5523459	Argument	cmd		5523438	0					
ANR	5523460	Identifier	cmd		5523438	0					
ANR	5523461	UnaryOperationExpression	! s -> end_of_message ( )		5523438	1					
ANR	5523462	UnaryOperator	!		5523438	0					
ANR	5523463	CallExpression	s -> end_of_message ( )		5523438	1					
ANR	5523464	Callee	s -> end_of_message		5523438	0					
ANR	5523465	PtrMemberAccess	s -> end_of_message		5523438	0					
ANR	5523466	Identifier	s		5523438	0					
ANR	5523467	Identifier	end_of_message		5523438	1					
ANR	5523468	ArgumentList			5523438	1					
ANR	5523469	CompoundStatement		3:47:62:62	5523438	1					
ANR	5523470	ReturnStatement	return false ;	374:2:9942:9954	5523438	0	True				
ANR	5523471	Identifier	false		5523438	0					
ANR	5523472	ElseStatement	else		5523438	0					
ANR	5523473	CompoundStatement		5:8:88:88	5523438	0					
ANR	5523474	ReturnStatement	return true ;	376:2:9968:9979	5523438	0	True				
ANR	5523475	Identifier	true		5523438	0					
ANR	5523476	ReturnType	bool		5523438	1					
ANR	5523477	Identifier	reply		5523438	2					
ANR	5523478	ParameterList	"Stream * s , int cmd"		5523438	3					
ANR	5523479	Parameter	Stream * s	370:7:9854:9862	5523438	0	True				
ANR	5523480	ParameterType	Stream *		5523438	0					
ANR	5523481	Identifier	s		5523438	1					
ANR	5523482	Parameter	int cmd	370:18:9865:9871	5523438	1	True				
ANR	5523483	ParameterType	int		5523438	0					
ANR	5523484	Identifier	cmd		5523438	1					
ANR	5523485	CFGEntryNode	ENTRY		5523438		True				
ANR	5523486	CFGExitNode	EXIT		5523438		True				
ANR	5523487	Symbol	s		5523438						
ANR	5523488	Symbol	s -> code		5523438						
ANR	5523489	Symbol	false		5523438						
ANR	5523490	Symbol	true		5523438						
ANR	5523491	Symbol	cmd		5523438						
ANR	5523492	Symbol	* s		5523438						
ANR	5523493	Symbol	s -> end_of_message		5523438						
ANR	5523494	Function	refuse	381:0:9988:10159							
ANR	5523495	FunctionDef	refuse (Stream * s)		5523494	0					
ANR	5523496	CompoundStatement		383:0:10013:10159	5523494	0					
ANR	5523497	ExpressionStatement	s -> end_of_message ( )	384:1:10016:10035	5523494	0	True				
ANR	5523498	CallExpression	s -> end_of_message ( )		5523494	0					
ANR	5523499	Callee	s -> end_of_message		5523494	0					
ANR	5523500	PtrMemberAccess	s -> end_of_message		5523494	0					
ANR	5523501	Identifier	s		5523494	0					
ANR	5523502	Identifier	end_of_message		5523494	1					
ANR	5523503	ArgumentList			5523494	1					
ANR	5523504	ExpressionStatement	s -> encode ( )	385:1:10038:10049	5523494	1	True				
ANR	5523505	CallExpression	s -> encode ( )		5523494	0					
ANR	5523506	Callee	s -> encode		5523494	0					
ANR	5523507	PtrMemberAccess	s -> encode		5523494	0					
ANR	5523508	Identifier	s		5523494	0					
ANR	5523509	Identifier	encode		5523494	1					
ANR	5523510	ArgumentList			5523494	1					
ANR	5523511	IfStatement	if ( ! s -> put ( NOT_OK ) )		5523494	2					
ANR	5523512	Condition	! s -> put ( NOT_OK )	386:5:10056:10070	5523494	0	True				
ANR	5523513	UnaryOperationExpression	! s -> put ( NOT_OK )		5523494	0					
ANR	5523514	UnaryOperator	!		5523494	0					
ANR	5523515	CallExpression	s -> put ( NOT_OK )		5523494	1					
ANR	5523516	Callee	s -> put		5523494	0					
ANR	5523517	PtrMemberAccess	s -> put		5523494	0					
ANR	5523518	Identifier	s		5523494	0					
ANR	5523519	Identifier	put		5523494	1					
ANR	5523520	ArgumentList	NOT_OK		5523494	1					
ANR	5523521	Argument	NOT_OK		5523494	0					
ANR	5523522	Identifier	NOT_OK		5523494	0					
ANR	5523523	CompoundStatement		4:23:60:60	5523494	1					
ANR	5523524	ReturnStatement	return false ;	387:2:10078:10090	5523494	0	True				
ANR	5523525	Identifier	false		5523494	0					
ANR	5523526	IfStatement	if ( ! s -> end_of_message ( ) )		5523494	3					
ANR	5523527	Condition	! s -> end_of_message ( )	389:5:10101:10120	5523494	0	True				
ANR	5523528	UnaryOperationExpression	! s -> end_of_message ( )		5523494	0					
ANR	5523529	UnaryOperator	!		5523494	0					
ANR	5523530	CallExpression	s -> end_of_message ( )		5523494	1					
ANR	5523531	Callee	s -> end_of_message		5523494	0					
ANR	5523532	PtrMemberAccess	s -> end_of_message		5523494	0					
ANR	5523533	Identifier	s		5523494	0					
ANR	5523534	Identifier	end_of_message		5523494	1					
ANR	5523535	ArgumentList			5523494	1					
ANR	5523536	CompoundStatement		7:28:110:110	5523494	1					
ANR	5523537	ReturnStatement	return false ;	390:2:10128:10140	5523494	0	True				
ANR	5523538	Identifier	false		5523494	0					
ANR	5523539	ReturnStatement	return true ;	392:1:10146:10157	5523494	4	True				
ANR	5523540	Identifier	true		5523494	0					
ANR	5523541	ReturnType	bool		5523494	1					
ANR	5523542	Identifier	refuse		5523494	2					
ANR	5523543	ParameterList	Stream * s		5523494	3					
ANR	5523544	Parameter	Stream * s	382:8:10001:10009	5523494	0	True				
ANR	5523545	ParameterType	Stream *		5523494	0					
ANR	5523546	Identifier	s		5523494	1					
ANR	5523547	CFGEntryNode	ENTRY		5523494		True				
ANR	5523548	CFGExitNode	EXIT		5523494		True				
ANR	5523549	Symbol	NOT_OK		5523494						
ANR	5523550	Symbol	s		5523494						
ANR	5523551	Symbol	false		5523494						
ANR	5523552	Symbol	true		5523494						
ANR	5523553	Symbol	* s		5523494						
ANR	5523554	Symbol	s -> put		5523494						
ANR	5523555	Symbol	s -> end_of_message		5523494						
ANR	5523556	Function	caInsert	396:0:10163:10788							
ANR	5523557	FunctionDef	"caInsert (ClassAd * target , ClassAd * source , const char * attr , const char * prefix)"		5523556	0					
ANR	5523558	CompoundStatement		399:0:10255:10788	5523556	0					
ANR	5523559	IdentifierDeclStatement	ExprTree * tree ;	400:1:10258:10272	5523556	0	True				
ANR	5523560	IdentifierDecl	* tree		5523556	0					
ANR	5523561	IdentifierDeclType	ExprTree *		5523556	0					
ANR	5523562	Identifier	tree		5523556	1					
ANR	5523563	IfStatement	if ( ! attr )		5523556	1					
ANR	5523564	Condition	! attr	402:5:10280:10284	5523556	0	True				
ANR	5523565	UnaryOperationExpression	! attr		5523556	0					
ANR	5523566	UnaryOperator	!		5523556	0					
ANR	5523567	Identifier	attr		5523556	1					
ANR	5523568	CompoundStatement		4:13:32:32	5523556	1					
ANR	5523569	ExpressionStatement	"EXCEPT ( ""caInsert called with NULL attribute"" )"	403:2:10292:10339	5523556	0	True				
ANR	5523570	CallExpression	"EXCEPT ( ""caInsert called with NULL attribute"" )"		5523556	0					
ANR	5523571	Callee	EXCEPT		5523556	0					
ANR	5523572	Identifier	EXCEPT		5523556	0					
ANR	5523573	ArgumentList	"""caInsert called with NULL attribute"""		5523556	1					
ANR	5523574	Argument	"""caInsert called with NULL attribute"""		5523556	0					
ANR	5523575	PrimaryExpression	"""caInsert called with NULL attribute"""		5523556	0					
ANR	5523576	IfStatement	if ( ! target || ! source )		5523556	2					
ANR	5523577	Condition	! target || ! source	405:5:10349:10366	5523556	0	True				
ANR	5523578	OrExpression	! target || ! source		5523556	0		||			
ANR	5523579	UnaryOperationExpression	! target		5523556	0					
ANR	5523580	UnaryOperator	!		5523556	0					
ANR	5523581	Identifier	target		5523556	1					
ANR	5523582	UnaryOperationExpression	! source		5523556	1					
ANR	5523583	UnaryOperator	!		5523556	0					
ANR	5523584	Identifier	source		5523556	1					
ANR	5523585	CompoundStatement		7:26:114:114	5523556	1					
ANR	5523586	ExpressionStatement	"EXCEPT ( ""caInsert called with NULL classad"" )"	406:2:10374:10419	5523556	0	True				
ANR	5523587	CallExpression	"EXCEPT ( ""caInsert called with NULL classad"" )"		5523556	0					
ANR	5523588	Callee	EXCEPT		5523556	0					
ANR	5523589	Identifier	EXCEPT		5523556	0					
ANR	5523590	ArgumentList	"""caInsert called with NULL classad"""		5523556	1					
ANR	5523591	Argument	"""caInsert called with NULL classad"""		5523556	0					
ANR	5523592	PrimaryExpression	"""caInsert called with NULL classad"""		5523556	0					
ANR	5523593	IdentifierDeclStatement	MyString new_attr ;	409:1:10426:10443	5523556	3	True				
ANR	5523594	IdentifierDecl	new_attr		5523556	0					
ANR	5523595	IdentifierDeclType	MyString		5523556	0					
ANR	5523596	Identifier	new_attr		5523556	1					
ANR	5523597	IfStatement	if ( prefix )		5523556	4					
ANR	5523598	Condition	prefix	410:5:10450:10455	5523556	0	True				
ANR	5523599	Identifier	prefix		5523556	0					
ANR	5523600	CompoundStatement		12:14:203:203	5523556	1					
ANR	5523601	ExpressionStatement	new_attr = prefix	411:2:10463:10480	5523556	0	True				
ANR	5523602	AssignmentExpression	new_attr = prefix		5523556	0		=			
ANR	5523603	Identifier	new_attr		5523556	0					
ANR	5523604	Identifier	prefix		5523556	1					
ANR	5523605	ExpressionStatement	new_attr += attr	413:1:10486:10502	5523556	5	True				
ANR	5523606	AssignmentExpression	new_attr += attr		5523556	0		+=			
ANR	5523607	Identifier	new_attr		5523556	0					
ANR	5523608	Identifier	attr		5523556	1					
ANR	5523609	ExpressionStatement	tree = source -> LookupExpr ( attr )	415:1:10506:10539	5523556	6	True				
ANR	5523610	AssignmentExpression	tree = source -> LookupExpr ( attr )		5523556	0		=			
ANR	5523611	Identifier	tree		5523556	0					
ANR	5523612	CallExpression	source -> LookupExpr ( attr )		5523556	1					
ANR	5523613	Callee	source -> LookupExpr		5523556	0					
ANR	5523614	PtrMemberAccess	source -> LookupExpr		5523556	0					
ANR	5523615	Identifier	source		5523556	0					
ANR	5523616	Identifier	LookupExpr		5523556	1					
ANR	5523617	ArgumentList	attr		5523556	1					
ANR	5523618	Argument	attr		5523556	0					
ANR	5523619	Identifier	attr		5523556	0					
ANR	5523620	IfStatement	if ( ! tree )		5523556	7					
ANR	5523621	Condition	! tree	416:5:10546:10550	5523556	0	True				
ANR	5523622	UnaryOperationExpression	! tree		5523556	0					
ANR	5523623	UnaryOperator	!		5523556	0					
ANR	5523624	Identifier	tree		5523556	1					
ANR	5523625	CompoundStatement		18:13:298:298	5523556	1					
ANR	5523626	ExpressionStatement	target -> Delete ( new_attr . Value ( ) )	417:2:10558:10590	5523556	0	True				
ANR	5523627	CallExpression	target -> Delete ( new_attr . Value ( ) )		5523556	0					
ANR	5523628	Callee	target -> Delete		5523556	0					
ANR	5523629	PtrMemberAccess	target -> Delete		5523556	0					
ANR	5523630	Identifier	target		5523556	0					
ANR	5523631	Identifier	Delete		5523556	1					
ANR	5523632	ArgumentList	new_attr . Value ( )		5523556	1					
ANR	5523633	Argument	new_attr . Value ( )		5523556	0					
ANR	5523634	CallExpression	new_attr . Value ( )		5523556	0					
ANR	5523635	Callee	new_attr . Value		5523556	0					
ANR	5523636	MemberAccess	new_attr . Value		5523556	0					
ANR	5523637	Identifier	new_attr		5523556	0					
ANR	5523638	Identifier	Value		5523556	1					
ANR	5523639	ArgumentList			5523556	1					
ANR	5523640	ReturnStatement	return false ;	418:2:10594:10606	5523556	1	True				
ANR	5523641	Identifier	false		5523556	0					
ANR	5523642	IfStatement	"if ( ! target -> Insert ( new_attr . Value ( ) , tree -> Copy ( ) ) )"		5523556	8					
ANR	5523643	Condition	"! target -> Insert ( new_attr . Value ( ) , tree -> Copy ( ) )"	420:6:10617:10663	5523556	0	True				
ANR	5523644	UnaryOperationExpression	"! target -> Insert ( new_attr . Value ( ) , tree -> Copy ( ) )"		5523556	0					
ANR	5523645	UnaryOperator	!		5523556	0					
ANR	5523646	CallExpression	"target -> Insert ( new_attr . Value ( ) , tree -> Copy ( ) )"		5523556	1					
ANR	5523647	Callee	target -> Insert		5523556	0					
ANR	5523648	PtrMemberAccess	target -> Insert		5523556	0					
ANR	5523649	Identifier	target		5523556	0					
ANR	5523650	Identifier	Insert		5523556	1					
ANR	5523651	ArgumentList	new_attr . Value ( )		5523556	1					
ANR	5523652	Argument	new_attr . Value ( )		5523556	0					
ANR	5523653	CallExpression	new_attr . Value ( )		5523556	0					
ANR	5523654	Callee	new_attr . Value		5523556	0					
ANR	5523655	MemberAccess	new_attr . Value		5523556	0					
ANR	5523656	Identifier	new_attr		5523556	0					
ANR	5523657	Identifier	Value		5523556	1					
ANR	5523658	ArgumentList			5523556	1					
ANR	5523659	Argument	tree -> Copy ( )		5523556	1					
ANR	5523660	CallExpression	tree -> Copy ( )		5523556	0					
ANR	5523661	Callee	tree -> Copy		5523556	0					
ANR	5523662	PtrMemberAccess	tree -> Copy		5523556	0					
ANR	5523663	Identifier	tree		5523556	0					
ANR	5523664	Identifier	Copy		5523556	1					
ANR	5523665	ArgumentList			5523556	1					
ANR	5523666	CompoundStatement		22:56:411:411	5523556	1					
ANR	5523667	ExpressionStatement	"dprintf ( D_ALWAYS , ""caInsert: Can't insert %s into target classad.\\n"" , attr )"	421:2:10671:10753	5523556	0	True				
ANR	5523668	CallExpression	"dprintf ( D_ALWAYS , ""caInsert: Can't insert %s into target classad.\\n"" , attr )"		5523556	0					
ANR	5523669	Callee	dprintf		5523556	0					
ANR	5523670	Identifier	dprintf		5523556	0					
ANR	5523671	ArgumentList	D_ALWAYS		5523556	1					
ANR	5523672	Argument	D_ALWAYS		5523556	0					
ANR	5523673	Identifier	D_ALWAYS		5523556	0					
ANR	5523674	Argument	"""caInsert: Can't insert %s into target classad.\\n"""		5523556	1					
ANR	5523675	PrimaryExpression	"""caInsert: Can't insert %s into target classad.\\n"""		5523556	0					
ANR	5523676	Argument	attr		5523556	2					
ANR	5523677	Identifier	attr		5523556	0					
ANR	5523678	ReturnStatement	return false ;	423:2:10757:10769	5523556	1	True				
ANR	5523679	Identifier	false		5523556	0					
ANR	5523680	ReturnStatement	return true ;	425:1:10775:10786	5523556	9	True				
ANR	5523681	Identifier	true		5523556	0					
ANR	5523682	ReturnType	bool		5523556	1					
ANR	5523683	Identifier	caInsert		5523556	2					
ANR	5523684	ParameterList	"ClassAd * target , ClassAd * source , const char * attr , const char * prefix"		5523556	3					
ANR	5523685	Parameter	ClassAd * target	397:10:10178:10192	5523556	0	True				
ANR	5523686	ParameterType	ClassAd *		5523556	0					
ANR	5523687	Identifier	target		5523556	1					
ANR	5523688	Parameter	ClassAd * source	397:27:10195:10209	5523556	1	True				
ANR	5523689	ParameterType	ClassAd *		5523556	0					
ANR	5523690	Identifier	source		5523556	1					
ANR	5523691	Parameter	const char * attr	397:44:10212:10227	5523556	2	True				
ANR	5523692	ParameterType	const char *		5523556	0					
ANR	5523693	Identifier	attr		5523556	1					
ANR	5523694	Parameter	const char * prefix	398:4:10234:10251	5523556	3	True				
ANR	5523695	ParameterType	const char *		5523556	0					
ANR	5523696	Identifier	prefix		5523556	1					
ANR	5523697	CFGEntryNode	ENTRY		5523556		True				
ANR	5523698	CFGExitNode	EXIT		5523556		True				
ANR	5523699	Symbol	prefix		5523556						
ANR	5523700	Symbol	tree		5523556						
ANR	5523701	Symbol	false		5523556						
ANR	5523702	Symbol	D_ALWAYS		5523556						
ANR	5523703	Symbol	source		5523556						
ANR	5523704	Symbol	target		5523556						
ANR	5523705	Symbol	* tree		5523556						
ANR	5523706	Symbol	* target		5523556						
ANR	5523707	Symbol	target -> Insert		5523556						
ANR	5523708	Symbol	* source		5523556						
ANR	5523709	Symbol	true		5523556						
ANR	5523710	Symbol	attr		5523556						
ANR	5523711	Symbol	source -> LookupExpr		5523556						
ANR	5523712	Symbol	new_attr		5523556						
ANR	5523713	Symbol	new_attr . Value		5523556						
ANR	5523714	Symbol	tree -> Copy		5523556						
ANR	5523715	Function	configInsert	443:0:11557:11675							
ANR	5523716	FunctionDef	"configInsert (ClassAd * ad , const char * attr , bool is_fatal)"		5523715	0					
ANR	5523717	CompoundStatement		445:0:11623:11675	5523715	0					
ANR	5523718	ReturnStatement	"return configInsert ( ad , attr , attr , is_fatal ) ;"	446:1:11626:11673	5523715	0	True				
ANR	5523719	CallExpression	"configInsert ( ad , attr , attr , is_fatal )"		5523715	0					
ANR	5523720	Callee	configInsert		5523715	0					
ANR	5523721	Identifier	configInsert		5523715	0					
ANR	5523722	ArgumentList	ad		5523715	1					
ANR	5523723	Argument	ad		5523715	0					
ANR	5523724	Identifier	ad		5523715	0					
ANR	5523725	Argument	attr		5523715	1					
ANR	5523726	Identifier	attr		5523715	0					
ANR	5523727	Argument	attr		5523715	2					
ANR	5523728	Identifier	attr		5523715	0					
ANR	5523729	Argument	is_fatal		5523715	3					
ANR	5523730	Identifier	is_fatal		5523715	0					
ANR	5523731	ReturnType	bool		5523715	1					
ANR	5523732	Identifier	configInsert		5523715	2					
ANR	5523733	ParameterList	"ClassAd * ad , const char * attr , bool is_fatal"		5523715	3					
ANR	5523734	Parameter	ClassAd * ad	444:14:11576:11586	5523715	0	True				
ANR	5523735	ParameterType	ClassAd *		5523715	0					
ANR	5523736	Identifier	ad		5523715	1					
ANR	5523737	Parameter	const char * attr	444:27:11589:11604	5523715	1	True				
ANR	5523738	ParameterType	const char *		5523715	0					
ANR	5523739	Identifier	attr		5523715	1					
ANR	5523740	Parameter	bool is_fatal	444:45:11607:11619	5523715	2	True				
ANR	5523741	ParameterType	bool		5523715	0					
ANR	5523742	Identifier	is_fatal		5523715	1					
ANR	5523743	CFGEntryNode	ENTRY		5523715		True				
ANR	5523744	CFGExitNode	EXIT		5523715		True				
ANR	5523745	Symbol	is_fatal		5523715						
ANR	5523746	Symbol	ad		5523715						
ANR	5523747	Symbol	configInsert		5523715						
ANR	5523748	Symbol	attr		5523715						
ANR	5523749	Function	configInsert	455:0:11854:12242							
ANR	5523750	FunctionDef	"configInsert (ClassAd * ad , const char * param_name , const char * attr , bool is_fatal)"		5523749	0					
ANR	5523751	CompoundStatement		458:0:11951:12242	5523749	0					
ANR	5523752	IdentifierDeclStatement	char * val = param ( param_name ) ;	459:1:11954:11985	5523749	0	True				
ANR	5523753	IdentifierDecl	* val = param ( param_name )		5523749	0					
ANR	5523754	IdentifierDeclType	char *		5523749	0					
ANR	5523755	Identifier	val		5523749	1					
ANR	5523756	AssignmentExpression	* val = param ( param_name )		5523749	2		=			
ANR	5523757	Identifier	val		5523749	0					
ANR	5523758	CallExpression	param ( param_name )		5523749	1					
ANR	5523759	Callee	param		5523749	0					
ANR	5523760	Identifier	param		5523749	0					
ANR	5523761	ArgumentList	param_name		5523749	1					
ANR	5523762	Argument	param_name		5523749	0					
ANR	5523763	Identifier	param_name		5523749	0					
ANR	5523764	IfStatement	if ( ! val )		5523749	1					
ANR	5523765	Condition	! val	460:5:11992:11996	5523749	0	True				
ANR	5523766	UnaryOperationExpression	! val		5523749	0					
ANR	5523767	UnaryOperator	!		5523749	0					
ANR	5523768	Identifier	val		5523749	1					
ANR	5523769	CompoundStatement		3:13:48:48	5523749	1					
ANR	5523770	IfStatement	if ( is_fatal )		5523749	0					
ANR	5523771	Condition	is_fatal	461:6:12008:12015	5523749	0	True				
ANR	5523772	Identifier	is_fatal		5523749	0					
ANR	5523773	CompoundStatement		4:17:67:67	5523749	1					
ANR	5523774	ExpressionStatement	"EXCEPT ( ""Required attribute \\""%s\\"" is not defined"" , attr )"	462:3:12024:12082	5523749	0	True				
ANR	5523775	CallExpression	"EXCEPT ( ""Required attribute \\""%s\\"" is not defined"" , attr )"		5523749	0					
ANR	5523776	Callee	EXCEPT		5523749	0					
ANR	5523777	Identifier	EXCEPT		5523749	0					
ANR	5523778	ArgumentList	"""Required attribute \\""%s\\"" is not defined"""		5523749	1					
ANR	5523779	Argument	"""Required attribute \\""%s\\"" is not defined"""		5523749	0					
ANR	5523780	PrimaryExpression	"""Required attribute \\""%s\\"" is not defined"""		5523749	0					
ANR	5523781	Argument	attr		5523749	1					
ANR	5523782	Identifier	attr		5523749	0					
ANR	5523783	ReturnStatement	return false ;	464:2:12090:12102	5523749	1	True				
ANR	5523784	Identifier	false		5523749	0					
ANR	5523785	IfStatement	"if ( ! ad -> AssignExpr ( attr , val ) )"		5523749	2					
ANR	5523786	Condition	"! ad -> AssignExpr ( attr , val )"	467:6:12114:12142	5523749	0	True				
ANR	5523787	UnaryOperationExpression	"! ad -> AssignExpr ( attr , val )"		5523749	0					
ANR	5523788	UnaryOperator	!		5523749	0					
ANR	5523789	CallExpression	"ad -> AssignExpr ( attr , val )"		5523749	1					
ANR	5523790	Callee	ad -> AssignExpr		5523749	0					
ANR	5523791	PtrMemberAccess	ad -> AssignExpr		5523749	0					
ANR	5523792	Identifier	ad		5523749	0					
ANR	5523793	Identifier	AssignExpr		5523749	1					
ANR	5523794	ArgumentList	attr		5523749	1					
ANR	5523795	Argument	attr		5523749	0					
ANR	5523796	Identifier	attr		5523749	0					
ANR	5523797	Argument	val		5523749	1					
ANR	5523798	Identifier	val		5523749	0					
ANR	5523799	CompoundStatement		10:38:194:194	5523749	1					
ANR	5523800	ExpressionStatement	"EXCEPT ( ""Syntax error in %s expression: '%s'"" , attr , val )"	468:2:12150:12208	5523749	0	True				
ANR	5523801	CallExpression	"EXCEPT ( ""Syntax error in %s expression: '%s'"" , attr , val )"		5523749	0					
ANR	5523802	Callee	EXCEPT		5523749	0					
ANR	5523803	Identifier	EXCEPT		5523749	0					
ANR	5523804	ArgumentList	"""Syntax error in %s expression: '%s'"""		5523749	1					
ANR	5523805	Argument	"""Syntax error in %s expression: '%s'"""		5523749	0					
ANR	5523806	PrimaryExpression	"""Syntax error in %s expression: '%s'"""		5523749	0					
ANR	5523807	Argument	attr		5523749	1					
ANR	5523808	Identifier	attr		5523749	0					
ANR	5523809	Argument	val		5523749	2					
ANR	5523810	Identifier	val		5523749	0					
ANR	5523811	ExpressionStatement	free ( val )	471:1:12215:12226	5523749	3	True				
ANR	5523812	CallExpression	free ( val )		5523749	0					
ANR	5523813	Callee	free		5523749	0					
ANR	5523814	Identifier	free		5523749	0					
ANR	5523815	ArgumentList	val		5523749	1					
ANR	5523816	Argument	val		5523749	0					
ANR	5523817	Identifier	val		5523749	0					
ANR	5523818	ReturnStatement	return true ;	472:1:12229:12240	5523749	4	True				
ANR	5523819	Identifier	true		5523749	0					
ANR	5523820	ReturnType	bool		5523749	1					
ANR	5523821	Identifier	configInsert		5523749	2					
ANR	5523822	ParameterList	"ClassAd * ad , const char * param_name , const char * attr , bool is_fatal"		5523749	3					
ANR	5523823	Parameter	ClassAd * ad	456:14:11873:11883	5523749	0	True				
ANR	5523824	ParameterType	ClassAd *		5523749	0					
ANR	5523825	Identifier	ad		5523749	1					
ANR	5523826	Parameter	const char * param_name	456:27:11886:11907	5523749	1	True				
ANR	5523827	ParameterType	const char *		5523749	0					
ANR	5523828	Identifier	param_name		5523749	1					
ANR	5523829	Parameter	const char * attr	457:5:11916:11931	5523749	2	True				
ANR	5523830	ParameterType	const char *		5523749	0					
ANR	5523831	Identifier	attr		5523749	1					
ANR	5523832	Parameter	bool is_fatal	457:23:11934:11946	5523749	3	True				
ANR	5523833	ParameterType	bool		5523749	0					
ANR	5523834	Identifier	is_fatal		5523749	1					
ANR	5523835	CFGEntryNode	ENTRY		5523749		True				
ANR	5523836	CFGExitNode	EXIT		5523749		True				
ANR	5523837	Symbol	is_fatal		5523749						
ANR	5523838	Symbol	val		5523749						
ANR	5523839	Symbol	ad		5523749						
ANR	5523840	Symbol	param		5523749						
ANR	5523841	Symbol	ad -> AssignExpr		5523749						
ANR	5523842	Symbol	false		5523749						
ANR	5523843	Symbol	true		5523749						
ANR	5523844	Symbol	* ad		5523749						
ANR	5523845	Symbol	attr		5523749						
ANR	5523846	Symbol	param_name		5523749						
ANR	5523847	Function	stream_to_rip	481:0:12503:13114							
ANR	5523848	FunctionDef	stream_to_rip (Stream * stream)		5523847	0					
ANR	5523849	CompoundStatement		483:0:12545:13114	5523847	0					
ANR	5523850	IdentifierDeclStatement	char * id = NULL ;	484:1:12548:12563	5523847	0	True				
ANR	5523851	IdentifierDecl	* id = NULL		5523847	0					
ANR	5523852	IdentifierDeclType	char *		5523847	0					
ANR	5523853	Identifier	id		5523847	1					
ANR	5523854	AssignmentExpression	* id = NULL		5523847	2		=			
ANR	5523855	Identifier	NULL		5523847	0					
ANR	5523856	Identifier	NULL		5523847	1					
ANR	5523857	IdentifierDeclStatement	Resource * rip ;	485:1:12566:12579	5523847	1	True				
ANR	5523858	IdentifierDecl	* rip		5523847	0					
ANR	5523859	IdentifierDeclType	Resource *		5523847	0					
ANR	5523860	Identifier	rip		5523847	1					
ANR	5523861	ExpressionStatement	stream -> decode ( )	487:1:12583:12599	5523847	2	True				
ANR	5523862	CallExpression	stream -> decode ( )		5523847	0					
ANR	5523863	Callee	stream -> decode		5523847	0					
ANR	5523864	PtrMemberAccess	stream -> decode		5523847	0					
ANR	5523865	Identifier	stream		5523847	0					
ANR	5523866	Identifier	decode		5523847	1					
ANR	5523867	ArgumentList			5523847	1					
ANR	5523868	IfStatement	if ( ! stream -> get_secret ( id ) )		5523847	3					
ANR	5523869	Condition	! stream -> get_secret ( id )	488:5:12606:12629	5523847	0	True				
ANR	5523870	UnaryOperationExpression	! stream -> get_secret ( id )		5523847	0					
ANR	5523871	UnaryOperator	!		5523847	0					
ANR	5523872	CallExpression	stream -> get_secret ( id )		5523847	1					
ANR	5523873	Callee	stream -> get_secret		5523847	0					
ANR	5523874	PtrMemberAccess	stream -> get_secret		5523847	0					
ANR	5523875	Identifier	stream		5523847	0					
ANR	5523876	Identifier	get_secret		5523847	1					
ANR	5523877	ArgumentList	id		5523847	1					
ANR	5523878	Argument	id		5523847	0					
ANR	5523879	Identifier	id		5523847	0					
ANR	5523880	CompoundStatement		6:32:87:87	5523847	1					
ANR	5523881	ExpressionStatement	"dprintf ( D_ALWAYS , ""Can't read ClaimId\\n"" )"	489:2:12637:12680	5523847	0	True				
ANR	5523882	CallExpression	"dprintf ( D_ALWAYS , ""Can't read ClaimId\\n"" )"		5523847	0					
ANR	5523883	Callee	dprintf		5523847	0					
ANR	5523884	Identifier	dprintf		5523847	0					
ANR	5523885	ArgumentList	D_ALWAYS		5523847	1					
ANR	5523886	Argument	D_ALWAYS		5523847	0					
ANR	5523887	Identifier	D_ALWAYS		5523847	0					
ANR	5523888	Argument	"""Can't read ClaimId\\n"""		5523847	1					
ANR	5523889	PrimaryExpression	"""Can't read ClaimId\\n"""		5523847	0					
ANR	5523890	ExpressionStatement	free ( id )	490:2:12684:12694	5523847	1	True				
ANR	5523891	CallExpression	free ( id )		5523847	0					
ANR	5523892	Callee	free		5523847	0					
ANR	5523893	Identifier	free		5523847	0					
ANR	5523894	ArgumentList	id		5523847	1					
ANR	5523895	Argument	id		5523847	0					
ANR	5523896	Identifier	id		5523847	0					
ANR	5523897	ReturnStatement	return NULL ;	491:2:12698:12709	5523847	2	True				
ANR	5523898	Identifier	NULL		5523847	0					
ANR	5523899	IfStatement	if ( ! stream -> end_of_message ( ) )		5523847	4					
ANR	5523900	Condition	! stream -> end_of_message ( )	493:5:12719:12744	5523847	0	True				
ANR	5523901	UnaryOperationExpression	! stream -> end_of_message ( )		5523847	0					
ANR	5523902	UnaryOperator	!		5523847	0					
ANR	5523903	CallExpression	stream -> end_of_message ( )		5523847	1					
ANR	5523904	Callee	stream -> end_of_message		5523847	0					
ANR	5523905	PtrMemberAccess	stream -> end_of_message		5523847	0					
ANR	5523906	Identifier	stream		5523847	0					
ANR	5523907	Identifier	end_of_message		5523847	1					
ANR	5523908	ArgumentList			5523847	1					
ANR	5523909	CompoundStatement		11:34:202:202	5523847	1					
ANR	5523910	ExpressionStatement	"dprintf ( D_ALWAYS , ""Can't read end_of_message\\n"" )"	494:2:12752:12802	5523847	0	True				
ANR	5523911	CallExpression	"dprintf ( D_ALWAYS , ""Can't read end_of_message\\n"" )"		5523847	0					
ANR	5523912	Callee	dprintf		5523847	0					
ANR	5523913	Identifier	dprintf		5523847	0					
ANR	5523914	ArgumentList	D_ALWAYS		5523847	1					
ANR	5523915	Argument	D_ALWAYS		5523847	0					
ANR	5523916	Identifier	D_ALWAYS		5523847	0					
ANR	5523917	Argument	"""Can't read end_of_message\\n"""		5523847	1					
ANR	5523918	PrimaryExpression	"""Can't read end_of_message\\n"""		5523847	0					
ANR	5523919	ExpressionStatement	free ( id )	495:2:12806:12816	5523847	1	True				
ANR	5523920	CallExpression	free ( id )		5523847	0					
ANR	5523921	Callee	free		5523847	0					
ANR	5523922	Identifier	free		5523847	0					
ANR	5523923	ArgumentList	id		5523847	1					
ANR	5523924	Argument	id		5523847	0					
ANR	5523925	Identifier	id		5523847	0					
ANR	5523926	ReturnStatement	return NULL ;	496:2:12820:12831	5523847	2	True				
ANR	5523927	Identifier	NULL		5523847	0					
ANR	5523928	ExpressionStatement	rip = resmgr -> get_by_cur_id ( id )	498:1:12837:12870	5523847	5	True				
ANR	5523929	AssignmentExpression	rip = resmgr -> get_by_cur_id ( id )		5523847	0		=			
ANR	5523930	Identifier	rip		5523847	0					
ANR	5523931	CallExpression	resmgr -> get_by_cur_id ( id )		5523847	1					
ANR	5523932	Callee	resmgr -> get_by_cur_id		5523847	0					
ANR	5523933	PtrMemberAccess	resmgr -> get_by_cur_id		5523847	0					
ANR	5523934	Identifier	resmgr		5523847	0					
ANR	5523935	Identifier	get_by_cur_id		5523847	1					
ANR	5523936	ArgumentList	id		5523847	1					
ANR	5523937	Argument	id		5523847	0					
ANR	5523938	Identifier	id		5523847	0					
ANR	5523939	IfStatement	if ( ! rip )		5523847	6					
ANR	5523940	Condition	! rip	499:5:12877:12880	5523847	0	True				
ANR	5523941	UnaryOperationExpression	! rip		5523847	0					
ANR	5523942	UnaryOperator	!		5523847	0					
ANR	5523943	Identifier	rip		5523847	1					
ANR	5523944	CompoundStatement		18:2:342:365	5523847	1					
ANR	5523945	IdentifierDeclStatement	ClaimIdParser idp ( id ) ;	500:2:12888:12911	5523847	0	True				
ANR	5523946	IdentifierDecl	idp ( id )		5523847	0					
ANR	5523947	IdentifierDeclType	ClaimIdParser		5523847	0					
ANR	5523948	Identifier	idp		5523847	1					
ANR	5523949	Identifier	id		5523847	2					
ANR	5523950	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error: can't find resource with ClaimId (%s) -- perhaps this claim was already removed?\\n"" , idp . publicClaimId ( ) )"	501:2:12915:13054	5523847	1	True				
ANR	5523951	CallExpression	"dprintf ( D_ALWAYS , ""Error: can't find resource with ClaimId (%s) -- perhaps this claim was already removed?\\n"" , idp . publicClaimId ( ) )"		5523847	0					
ANR	5523952	Callee	dprintf		5523847	0					
ANR	5523953	Identifier	dprintf		5523847	0					
ANR	5523954	ArgumentList	D_ALWAYS		5523847	1					
ANR	5523955	Argument	D_ALWAYS		5523847	0					
ANR	5523956	Identifier	D_ALWAYS		5523847	0					
ANR	5523957	Argument	"""Error: can't find resource with ClaimId (%s) -- perhaps this claim was already removed?\\n"""		5523847	1					
ANR	5523958	PrimaryExpression	"""Error: can't find resource with ClaimId (%s) -- perhaps this claim was already removed?\\n"""		5523847	0					
ANR	5523959	Argument	idp . publicClaimId ( )		5523847	2					
ANR	5523960	CallExpression	idp . publicClaimId ( )		5523847	0					
ANR	5523961	Callee	idp . publicClaimId		5523847	0					
ANR	5523962	MemberAccess	idp . publicClaimId		5523847	0					
ANR	5523963	Identifier	idp		5523847	0					
ANR	5523964	Identifier	publicClaimId		5523847	1					
ANR	5523965	ArgumentList			5523847	1					
ANR	5523966	ExpressionStatement	free ( id )	503:2:13058:13068	5523847	2	True				
ANR	5523967	CallExpression	free ( id )		5523847	0					
ANR	5523968	Callee	free		5523847	0					
ANR	5523969	Identifier	free		5523847	0					
ANR	5523970	ArgumentList	id		5523847	1					
ANR	5523971	Argument	id		5523847	0					
ANR	5523972	Identifier	id		5523847	0					
ANR	5523973	ReturnStatement	return NULL ;	504:2:13072:13083	5523847	3	True				
ANR	5523974	Identifier	NULL		5523847	0					
ANR	5523975	ExpressionStatement	free ( id )	506:1:13089:13099	5523847	7	True				
ANR	5523976	CallExpression	free ( id )		5523847	0					
ANR	5523977	Callee	free		5523847	0					
ANR	5523978	Identifier	free		5523847	0					
ANR	5523979	ArgumentList	id		5523847	1					
ANR	5523980	Argument	id		5523847	0					
ANR	5523981	Identifier	id		5523847	0					
ANR	5523982	ReturnStatement	return rip ;	507:1:13102:13112	5523847	8	True				
ANR	5523983	Identifier	rip		5523847	0					
ANR	5523984	ReturnType	Resource *		5523847	1					
ANR	5523985	Identifier	stream_to_rip		5523847	2					
ANR	5523986	ParameterList	Stream * stream		5523847	3					
ANR	5523987	Parameter	Stream * stream	482:15:12528:12541	5523847	0	True				
ANR	5523988	ParameterType	Stream *		5523847	0					
ANR	5523989	Identifier	stream		5523847	1					
ANR	5523990	CFGEntryNode	ENTRY		5523847		True				
ANR	5523991	CFGExitNode	EXIT		5523847		True				
ANR	5523992	Symbol	stream -> end_of_message		5523847						
ANR	5523993	Symbol	NULL		5523847						
ANR	5523994	Symbol	D_ALWAYS		5523847						
ANR	5523995	Symbol	* resmgr		5523847						
ANR	5523996	Symbol	idp . publicClaimId		5523847						
ANR	5523997	Symbol	idp		5523847						
ANR	5523998	Symbol	stream		5523847						
ANR	5523999	Symbol	resmgr		5523847						
ANR	5524000	Symbol	rip		5523847						
ANR	5524001	Symbol	* stream		5523847						
ANR	5524002	Symbol	stream -> get_secret		5523847						
ANR	5524003	Symbol	id		5523847						
ANR	5524004	Symbol	resmgr -> get_by_cur_id		5523847						
ANR	5524005	Function	getVacateType	511:0:13118:13367							
ANR	5524006	FunctionDef	getVacateType (ClassAd * ad)		5524005	0					
ANR	5524007	CompoundStatement		513:0:13158:13367	5524005	0					
ANR	5524008	IdentifierDeclStatement	VacateType vac_t ;	514:1:13161:13177	5524005	0	True				
ANR	5524009	IdentifierDecl	vac_t		5524005	0					
ANR	5524010	IdentifierDeclType	VacateType		5524005	0					
ANR	5524011	Identifier	vac_t		5524005	1					
ANR	5524012	IdentifierDeclStatement	char * vac_t_str = NULL ;	515:1:13180:13202	5524005	1	True				
ANR	5524013	IdentifierDecl	* vac_t_str = NULL		5524005	0					
ANR	5524014	IdentifierDeclType	char *		5524005	0					
ANR	5524015	Identifier	vac_t_str		5524005	1					
ANR	5524016	AssignmentExpression	* vac_t_str = NULL		5524005	2		=			
ANR	5524017	Identifier	NULL		5524005	0					
ANR	5524018	Identifier	NULL		5524005	1					
ANR	5524019	IfStatement	"if ( ! ad -> LookupString ( ATTR_VACATE_TYPE , & vac_t_str ) )"		5524005	2					
ANR	5524020	Condition	"! ad -> LookupString ( ATTR_VACATE_TYPE , & vac_t_str )"	516:5:13209:13256	5524005	0	True				
ANR	5524021	UnaryOperationExpression	"! ad -> LookupString ( ATTR_VACATE_TYPE , & vac_t_str )"		5524005	0					
ANR	5524022	UnaryOperator	!		5524005	0					
ANR	5524023	CallExpression	"ad -> LookupString ( ATTR_VACATE_TYPE , & vac_t_str )"		5524005	1					
ANR	5524024	Callee	ad -> LookupString		5524005	0					
ANR	5524025	PtrMemberAccess	ad -> LookupString		5524005	0					
ANR	5524026	Identifier	ad		5524005	0					
ANR	5524027	Identifier	LookupString		5524005	1					
ANR	5524028	ArgumentList	ATTR_VACATE_TYPE		5524005	1					
ANR	5524029	Argument	ATTR_VACATE_TYPE		5524005	0					
ANR	5524030	Identifier	ATTR_VACATE_TYPE		5524005	0					
ANR	5524031	Argument	& vac_t_str		5524005	1					
ANR	5524032	UnaryOperationExpression	& vac_t_str		5524005	0					
ANR	5524033	UnaryOperator	&		5524005	0					
ANR	5524034	Identifier	vac_t_str		5524005	1					
ANR	5524035	CompoundStatement		4:56:101:101	5524005	1					
ANR	5524036	ReturnStatement	return VACATE_GRACEFUL ;	517:2:13265:13287	5524005	0	True				
ANR	5524037	Identifier	VACATE_GRACEFUL		5524005	0					
ANR	5524038	ExpressionStatement	vac_t = getVacateTypeNum ( vac_t_str )	519:1:13293:13330	5524005	3	True				
ANR	5524039	AssignmentExpression	vac_t = getVacateTypeNum ( vac_t_str )		5524005	0		=			
ANR	5524040	Identifier	vac_t		5524005	0					
ANR	5524041	CallExpression	getVacateTypeNum ( vac_t_str )		5524005	1					
ANR	5524042	Callee	getVacateTypeNum		5524005	0					
ANR	5524043	Identifier	getVacateTypeNum		5524005	0					
ANR	5524044	ArgumentList	vac_t_str		5524005	1					
ANR	5524045	Argument	vac_t_str		5524005	0					
ANR	5524046	Identifier	vac_t_str		5524005	0					
ANR	5524047	ExpressionStatement	free ( vac_t_str )	520:1:13333:13350	5524005	4	True				
ANR	5524048	CallExpression	free ( vac_t_str )		5524005	0					
ANR	5524049	Callee	free		5524005	0					
ANR	5524050	Identifier	free		5524005	0					
ANR	5524051	ArgumentList	vac_t_str		5524005	1					
ANR	5524052	Argument	vac_t_str		5524005	0					
ANR	5524053	Identifier	vac_t_str		5524005	0					
ANR	5524054	ReturnStatement	return vac_t ;	521:1:13353:13365	5524005	5	True				
ANR	5524055	Identifier	vac_t		5524005	0					
ANR	5524056	ReturnType	VacateType		5524005	1					
ANR	5524057	Identifier	getVacateType		5524005	2					
ANR	5524058	ParameterList	ClassAd * ad		5524005	3					
ANR	5524059	Parameter	ClassAd * ad	512:15:13144:13154	5524005	0	True				
ANR	5524060	ParameterType	ClassAd *		5524005	0					
ANR	5524061	Identifier	ad		5524005	1					
ANR	5524062	CFGEntryNode	ENTRY		5524005		True				
ANR	5524063	CFGExitNode	EXIT		5524005		True				
ANR	5524064	Symbol	ad -> LookupString		5524005						
ANR	5524065	Symbol	vac_t		5524005						
ANR	5524066	Symbol	ad		5524005						
ANR	5524067	Symbol	NULL		5524005						
ANR	5524068	Symbol	& vac_t_str		5524005						
ANR	5524069	Symbol	* ad		5524005						
ANR	5524070	Symbol	vac_t_str		5524005						
ANR	5524071	Symbol	getVacateTypeNum		5524005						
ANR	5524072	Symbol	VACATE_GRACEFUL		5524005						
ANR	5524073	Symbol	ATTR_VACATE_TYPE		5524005						
