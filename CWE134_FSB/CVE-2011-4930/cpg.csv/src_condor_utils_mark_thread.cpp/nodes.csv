command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4816738	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_mark_thread.cpp								
ANR	4816739	DeclStmt									
ANR	4816740	Decl							mark_thread_func_t	mark_thread_func_t	start_callback
ANR	4816741	DeclStmt									
ANR	4816742	Decl							mark_thread_func_t	mark_thread_func_t	stop_callback
ANR	4816743	Function	_mark_thread_safe_callback	27:0:976:1153							
ANR	4816744	FunctionDef	"_mark_thread_safe_callback (mark_thread_func_t start_routine , mark_thread_func_t stop_routine)"		4816743	0					
ANR	4816745	CompoundStatement		29:0:1078:1153	4816743	0					
ANR	4816746	ExpressionStatement	start_callback = start_routine	30:1:1081:1111	4816743	0	True				
ANR	4816747	AssignmentExpression	start_callback = start_routine		4816743	0		=			
ANR	4816748	Identifier	start_callback		4816743	0					
ANR	4816749	Identifier	start_routine		4816743	1					
ANR	4816750	ExpressionStatement	stop_callback = stop_routine	31:1:1114:1142	4816743	1	True				
ANR	4816751	AssignmentExpression	stop_callback = stop_routine		4816743	0		=			
ANR	4816752	Identifier	stop_callback		4816743	0					
ANR	4816753	Identifier	stop_routine		4816743	1					
ANR	4816754	ReturnStatement	return ;	32:1:1145:1151	4816743	2	True				
ANR	4816755	ReturnType	void		4816743	1					
ANR	4816756	Identifier	_mark_thread_safe_callback		4816743	2					
ANR	4816757	ParameterList	"mark_thread_func_t start_routine , mark_thread_func_t stop_routine"		4816743	3					
ANR	4816758	Parameter	mark_thread_func_t start_routine	27:32:1008:1039	4816743	0	True				
ANR	4816759	ParameterType	mark_thread_func_t		4816743	0					
ANR	4816760	Identifier	start_routine		4816743	1					
ANR	4816761	Parameter	mark_thread_func_t stop_routine	28:2:1045:1075	4816743	1	True				
ANR	4816762	ParameterType	mark_thread_func_t		4816743	0					
ANR	4816763	Identifier	stop_routine		4816743	1					
ANR	4816764	CFGEntryNode	ENTRY		4816743		True				
ANR	4816765	CFGExitNode	EXIT		4816743		True				
ANR	4816766	Symbol	start_callback		4816743						
ANR	4816767	Symbol	stop_callback		4816743						
ANR	4816768	Symbol	start_routine		4816743						
ANR	4816769	Symbol	stop_routine		4816743						
ANR	4816770	Function	my_local_basename	42:0:1423:1663							
ANR	4816771	FunctionDef	my_local_basename (const char * path)		4816770	0					
ANR	4816772	CompoundStatement		44:0:1479:1663	4816770	0					
ANR	4816773	IdentifierDeclStatement	"const char * s , * name ;"	45:1:1482:1502	4816770	0	True				
ANR	4816774	IdentifierDecl	* s		4816770	0					
ANR	4816775	IdentifierDeclType	const char *		4816770	0					
ANR	4816776	Identifier	s		4816770	1					
ANR	4816777	IdentifierDecl	* name		4816770	1					
ANR	4816778	IdentifierDeclType	const char *		4816770	0					
ANR	4816779	Identifier	name		4816770	1					
ANR	4816780	IfStatement	if ( ! path )		4816770	1					
ANR	4816781	Condition	! path	47:5:1510:1515	4816770	0	True				
ANR	4816782	UnaryOperationExpression	! path		4816770	0					
ANR	4816783	UnaryOperator	!		4816770	0					
ANR	4816784	Identifier	path		4816770	1					
ANR	4816785	CompoundStatement		4:14:39:39	4816770	1					
ANR	4816786	ReturnStatement	"return """" ;"	48:2:1523:1532	4816770	0	True				
ANR	4816787	PrimaryExpression	""""""		4816770	0					
ANR	4816788	ExpressionStatement	name = path	51:1:1539:1550	4816770	2	True				
ANR	4816789	AssignmentExpression	name = path		4816770	0		=			
ANR	4816790	Identifier	name		4816770	0					
ANR	4816791	Identifier	path		4816770	1					
ANR	4816792	ForStatement	for ( s = path ; s && * s != '\\0' ; s ++ )		4816770	3					
ANR	4816793	ForInit	s = path ;	53:6:1559:1567	4816770	0	True				
ANR	4816794	AssignmentExpression	s = path		4816770	0		=			
ANR	4816795	Identifier	s		4816770	0					
ANR	4816796	Identifier	path		4816770	1					
ANR	4816797	Condition	s && * s != '\\0'	53:16:1569:1583	4816770	1	True				
ANR	4816798	AndExpression	s && * s != '\\0'		4816770	0		&&			
ANR	4816799	Identifier	s		4816770	0					
ANR	4816800	EqualityExpression	* s != '\\0'		4816770	1		!=			
ANR	4816801	UnaryOperationExpression	* s		4816770	0					
ANR	4816802	UnaryOperator	*		4816770	0					
ANR	4816803	Identifier	s		4816770	1					
ANR	4816804	PrimaryExpression	'\\0'		4816770	1					
ANR	4816805	PostIncDecOperationExpression	s ++	53:33:1586:1588	4816770	2	True				
ANR	4816806	Identifier	s		4816770	0					
ANR	4816807	IncDec	++		4816770	1					
ANR	4816808	CompoundStatement		10:38:111:111	4816770	3					
ANR	4816809	IfStatement	if ( * s == '\\\\' || * s == '/' )		4816770	0					
ANR	4816810	Condition	* s == '\\\\' || * s == '/'	54:6:1599:1621	4816770	0	True				
ANR	4816811	OrExpression	* s == '\\\\' || * s == '/'		4816770	0		||			
ANR	4816812	EqualityExpression	* s == '\\\\'		4816770	0		==			
ANR	4816813	UnaryOperationExpression	* s		4816770	0					
ANR	4816814	UnaryOperator	*		4816770	0					
ANR	4816815	Identifier	s		4816770	1					
ANR	4816816	PrimaryExpression	'\\\\'		4816770	1					
ANR	4816817	EqualityExpression	* s == '/'		4816770	1		==			
ANR	4816818	UnaryOperationExpression	* s		4816770	0					
ANR	4816819	UnaryOperator	*		4816770	0					
ANR	4816820	Identifier	s		4816770	1					
ANR	4816821	PrimaryExpression	'/'		4816770	1					
ANR	4816822	CompoundStatement		11:31:144:144	4816770	1					
ANR	4816823	ExpressionStatement	name = s + 1	55:3:1629:1639	4816770	0	True				
ANR	4816824	AssignmentExpression	name = s + 1		4816770	0		=			
ANR	4816825	Identifier	name		4816770	0					
ANR	4816826	AdditiveExpression	s + 1		4816770	1		+			
ANR	4816827	Identifier	s		4816770	0					
ANR	4816828	PrimaryExpression	1		4816770	1					
ANR	4816829	ReturnStatement	return name ;	59:1:1650:1661	4816770	4	True				
ANR	4816830	Identifier	name		4816770	0					
ANR	4816831	ReturnType	static const char *		4816770	1					
ANR	4816832	Identifier	my_local_basename		4816770	2					
ANR	4816833	ParameterList	const char * path		4816770	3					
ANR	4816834	Parameter	const char * path	43:18:1461:1476	4816770	0	True				
ANR	4816835	ParameterType	const char *		4816770	0					
ANR	4816836	Identifier	path		4816770	1					
ANR	4816837	CFGEntryNode	ENTRY		4816770		True				
ANR	4816838	CFGExitNode	EXIT		4816770		True				
ANR	4816839	Symbol	path		4816770						
ANR	4816840	Symbol	s		4816770						
ANR	4816841	Symbol	name		4816770						
ANR	4816842	Symbol	* s		4816770						
ANR	4816843	Function	_mark_thread_safe	63:0:1667:2703							
ANR	4816844	FunctionDef	"_mark_thread_safe (int start_or_stop , int dologging , const char * descrip , const char * func , const char * file , int line)"		4816843	0					
ANR	4816845	CompoundStatement		65:0:1800:2703	4816843	0					
ANR	4816846	IdentifierDeclStatement	mark_thread_func_t callback = 0 ;	66:1:1803:1832	4816843	0	True				
ANR	4816847	IdentifierDecl	callback = 0		4816843	0					
ANR	4816848	IdentifierDeclType	mark_thread_func_t		4816843	0					
ANR	4816849	Identifier	callback		4816843	1					
ANR	4816850	AssignmentExpression	callback = 0		4816843	2		=			
ANR	4816851	Identifier	callback		4816843	0					
ANR	4816852	PrimaryExpression	0		4816843	1					
ANR	4816853	IdentifierDeclStatement	const char * mode = 0 ;	67:1:1835:1853	4816843	1	True				
ANR	4816854	IdentifierDecl	* mode = 0		4816843	0					
ANR	4816855	IdentifierDeclType	const char *		4816843	0					
ANR	4816856	Identifier	mode		4816843	1					
ANR	4816857	AssignmentExpression	* mode = 0		4816843	2		=			
ANR	4816858	Identifier	mode		4816843	0					
ANR	4816859	PrimaryExpression	0		4816843	1					
ANR	4816860	IdentifierDeclStatement	char buf [ 40 ] ;	69:1:1869:1881	4816843	2	True				
ANR	4816861	IdentifierDecl	buf [ 40 ]		4816843	0					
ANR	4816862	IdentifierDeclType	char [ 40 ]		4816843	0					
ANR	4816863	Identifier	buf		4816843	1					
ANR	4816864	PrimaryExpression	40		4816843	2					
ANR	4816865	SwitchStatement	switch ( start_or_stop )		4816843	3					
ANR	4816866	Condition	start_or_stop	72:9:1900:1912	4816843	0	True				
ANR	4816867	Identifier	start_or_stop		4816843	0					
ANR	4816868	CompoundStatement		8:24:114:114	4816843	1					
ANR	4816869	Label	case 1 :	73:2:1919:1925	4816843	0	True				
ANR	4816870	ExpressionStatement	callback = start_callback	74:3:1930:1955	4816843	1	True				
ANR	4816871	AssignmentExpression	callback = start_callback		4816843	0		=			
ANR	4816872	Identifier	callback		4816843	0					
ANR	4816873	Identifier	start_callback		4816843	1					
ANR	4816874	ExpressionStatement	"mode = ""start"""	75:3:1960:1974	4816843	2	True				
ANR	4816875	AssignmentExpression	"mode = ""start"""		4816843	0		=			
ANR	4816876	Identifier	mode		4816843	0					
ANR	4816877	PrimaryExpression	"""start"""		4816843	1					
ANR	4816878	BreakStatement	break ;	76:3:1979:1984	4816843	3	True				
ANR	4816879	Label	case 2 :	77:2:1988:1994	4816843	4	True				
ANR	4816880	ExpressionStatement	callback = stop_callback	78:3:1999:2023	4816843	5	True				
ANR	4816881	AssignmentExpression	callback = stop_callback		4816843	0		=			
ANR	4816882	Identifier	callback		4816843	0					
ANR	4816883	Identifier	stop_callback		4816843	1					
ANR	4816884	ExpressionStatement	"mode = ""stop"""	79:3:2028:2041	4816843	6	True				
ANR	4816885	AssignmentExpression	"mode = ""stop"""		4816843	0		=			
ANR	4816886	Identifier	mode		4816843	0					
ANR	4816887	PrimaryExpression	"""stop"""		4816843	1					
ANR	4816888	BreakStatement	break ;	80:3:2046:2051	4816843	7	True				
ANR	4816889	Label	default :	81:2:2055:2062	4816843	8	True				
ANR	4816890	Identifier	default		4816843	0					
ANR	4816891	ExpressionStatement	"EXCEPT ( ""unexpected mode: %d"" , start_or_stop )"	82:3:2067:2110	4816843	9	True				
ANR	4816892	CallExpression	"EXCEPT ( ""unexpected mode: %d"" , start_or_stop )"		4816843	0					
ANR	4816893	Callee	EXCEPT		4816843	0					
ANR	4816894	Identifier	EXCEPT		4816843	0					
ANR	4816895	ArgumentList	"""unexpected mode: %d"""		4816843	1					
ANR	4816896	Argument	"""unexpected mode: %d"""		4816843	0					
ANR	4816897	PrimaryExpression	"""unexpected mode: %d"""		4816843	0					
ANR	4816898	Argument	start_or_stop		4816843	1					
ANR	4816899	Identifier	start_or_stop		4816843	0					
ANR	4816900	IfStatement	if ( ! callback )		4816843	4					
ANR	4816901	Condition	! callback	85:6:2122:2130	4816843	0	True				
ANR	4816902	UnaryOperationExpression	! callback		4816843	0					
ANR	4816903	UnaryOperator	!		4816843	0					
ANR	4816904	Identifier	callback		4816843	1					
ANR	4816905	CompoundStatement		21:18:333:333	4816843	1					
ANR	4816906	ReturnStatement	return ;	87:2:2170:2176	4816843	0	True				
ANR	4816907	IfStatement	if ( descrip == NULL )		4816843	5					
ANR	4816908	Condition	descrip == NULL	90:5:2187:2201	4816843	0	True				
ANR	4816909	EqualityExpression	descrip == NULL		4816843	0		==			
ANR	4816910	Identifier	descrip		4816843	0					
ANR	4816911	Identifier	NULL		4816843	1					
ANR	4816912	CompoundStatement		26:22:403:403	4816843	1					
ANR	4816913	ExpressionStatement	"descrip = ""\\0"""	91:2:2208:2222	4816843	0	True				
ANR	4816914	AssignmentExpression	"descrip = ""\\0"""		4816843	0		=			
ANR	4816915	Identifier	descrip		4816843	0					
ANR	4816916	PrimaryExpression	"""\\0"""		4816843	1					
ANR	4816917	ExpressionStatement	"strcpy ( buf , ""tid="" )"	95:1:2243:2261	4816843	6	True				
ANR	4816918	CallExpression	"strcpy ( buf , ""tid="" )"		4816843	0					
ANR	4816919	Callee	strcpy		4816843	0					
ANR	4816920	Identifier	strcpy		4816843	0					
ANR	4816921	ArgumentList	buf		4816843	1					
ANR	4816922	Argument	buf		4816843	0					
ANR	4816923	Identifier	buf		4816843	0					
ANR	4816924	Argument	"""tid="""		4816843	1					
ANR	4816925	PrimaryExpression	"""tid="""		4816843	0					
ANR	4816926	ExpressionStatement	"func = itoa ( GetCurrentThreadId ( ) , & buf [ 4 ] , 10 )"	96:1:2264:2311	4816843	7	True				
ANR	4816927	AssignmentExpression	"func = itoa ( GetCurrentThreadId ( ) , & buf [ 4 ] , 10 )"		4816843	0		=			
ANR	4816928	Identifier	func		4816843	0					
ANR	4816929	CallExpression	"itoa ( GetCurrentThreadId ( ) , & buf [ 4 ] , 10 )"		4816843	1					
ANR	4816930	Callee	itoa		4816843	0					
ANR	4816931	Identifier	itoa		4816843	0					
ANR	4816932	ArgumentList	GetCurrentThreadId ( )		4816843	1					
ANR	4816933	Argument	GetCurrentThreadId ( )		4816843	0					
ANR	4816934	CallExpression	GetCurrentThreadId ( )		4816843	0					
ANR	4816935	Callee	GetCurrentThreadId		4816843	0					
ANR	4816936	Identifier	GetCurrentThreadId		4816843	0					
ANR	4816937	ArgumentList			4816843	1					
ANR	4816938	Argument	& buf [ 4 ]		4816843	1					
ANR	4816939	UnaryOperationExpression	& buf [ 4 ]		4816843	0					
ANR	4816940	UnaryOperator	&		4816843	0					
ANR	4816941	ArrayIndexing	buf [ 4 ]		4816843	1					
ANR	4816942	Identifier	buf		4816843	0					
ANR	4816943	PrimaryExpression	4		4816843	1					
ANR	4816944	Argument	10		4816843	2					
ANR	4816945	PrimaryExpression	10		4816843	0					
ANR	4816946	IfStatement	if ( dologging && ( DebugFlags & D_FULLDEBUG ) )		4816843	8					
ANR	4816947	Condition	dologging && ( DebugFlags & D_FULLDEBUG )	99:6:2328:2366	4816843	0	True				
ANR	4816948	AndExpression	dologging && ( DebugFlags & D_FULLDEBUG )		4816843	0		&&			
ANR	4816949	Identifier	dologging		4816843	0					
ANR	4816950	BitAndExpression	DebugFlags & D_FULLDEBUG		4816843	1		&			
ANR	4816951	Identifier	DebugFlags		4816843	0					
ANR	4816952	Identifier	D_FULLDEBUG		4816843	1					
ANR	4816953	CompoundStatement		35:47:568:568	4816843	1					
ANR	4816954	ExpressionStatement	"dprintf ( D_THREADS , ""Entering thread safe %s [%s] in %s:%d %s()\\n"" , mode , descrip , my_local_basename ( file ) , line , func )"	100:2:2373:2494	4816843	0	True				
ANR	4816955	CallExpression	"dprintf ( D_THREADS , ""Entering thread safe %s [%s] in %s:%d %s()\\n"" , mode , descrip , my_local_basename ( file ) , line , func )"		4816843	0					
ANR	4816956	Callee	dprintf		4816843	0					
ANR	4816957	Identifier	dprintf		4816843	0					
ANR	4816958	ArgumentList	D_THREADS		4816843	1					
ANR	4816959	Argument	D_THREADS		4816843	0					
ANR	4816960	Identifier	D_THREADS		4816843	0					
ANR	4816961	Argument	"""Entering thread safe %s [%s] in %s:%d %s()\\n"""		4816843	1					
ANR	4816962	PrimaryExpression	"""Entering thread safe %s [%s] in %s:%d %s()\\n"""		4816843	0					
ANR	4816963	Argument	mode		4816843	2					
ANR	4816964	Identifier	mode		4816843	0					
ANR	4816965	Argument	descrip		4816843	3					
ANR	4816966	Identifier	descrip		4816843	0					
ANR	4816967	Argument	my_local_basename ( file )		4816843	4					
ANR	4816968	CallExpression	my_local_basename ( file )		4816843	0					
ANR	4816969	Callee	my_local_basename		4816843	0					
ANR	4816970	Identifier	my_local_basename		4816843	0					
ANR	4816971	ArgumentList	file		4816843	1					
ANR	4816972	Argument	file		4816843	0					
ANR	4816973	Identifier	file		4816843	0					
ANR	4816974	Argument	line		4816843	5					
ANR	4816975	Identifier	line		4816843	0					
ANR	4816976	Argument	func		4816843	6					
ANR	4816977	Identifier	func		4816843	0					
ANR	4816978	ExpressionStatement	( * callback ) ( )	104:1:2501:2514	4816843	9	True				
ANR	4816979	CallExpression	( * callback ) ( )		4816843	0					
ANR	4816980	Callee	* callback		4816843	0					
ANR	4816981	UnaryOperationExpression	* callback		4816843	0					
ANR	4816982	UnaryOperator	*		4816843	0					
ANR	4816983	Identifier	callback		4816843	1					
ANR	4816984	ArgumentList			4816843	1					
ANR	4816985	IfStatement	if ( dologging && ( DebugFlags & D_FULLDEBUG ) )		4816843	10					
ANR	4816986	Condition	dologging && ( DebugFlags & D_FULLDEBUG )	106:6:2523:2561	4816843	0	True				
ANR	4816987	AndExpression	dologging && ( DebugFlags & D_FULLDEBUG )		4816843	0		&&			
ANR	4816988	Identifier	dologging		4816843	0					
ANR	4816989	BitAndExpression	DebugFlags & D_FULLDEBUG		4816843	1		&			
ANR	4816990	Identifier	DebugFlags		4816843	0					
ANR	4816991	Identifier	D_FULLDEBUG		4816843	1					
ANR	4816992	CompoundStatement		42:47:763:763	4816843	1					
ANR	4816993	ExpressionStatement	"dprintf ( D_THREADS , ""Leaving thread safe %s [%s] in %s:%d %s()\\n"" , mode , descrip , my_local_basename ( file ) , line , func )"	107:2:2568:2688	4816843	0	True				
ANR	4816994	CallExpression	"dprintf ( D_THREADS , ""Leaving thread safe %s [%s] in %s:%d %s()\\n"" , mode , descrip , my_local_basename ( file ) , line , func )"		4816843	0					
ANR	4816995	Callee	dprintf		4816843	0					
ANR	4816996	Identifier	dprintf		4816843	0					
ANR	4816997	ArgumentList	D_THREADS		4816843	1					
ANR	4816998	Argument	D_THREADS		4816843	0					
ANR	4816999	Identifier	D_THREADS		4816843	0					
ANR	4817000	Argument	"""Leaving thread safe %s [%s] in %s:%d %s()\\n"""		4816843	1					
ANR	4817001	PrimaryExpression	"""Leaving thread safe %s [%s] in %s:%d %s()\\n"""		4816843	0					
ANR	4817002	Argument	mode		4816843	2					
ANR	4817003	Identifier	mode		4816843	0					
ANR	4817004	Argument	descrip		4816843	3					
ANR	4817005	Identifier	descrip		4816843	0					
ANR	4817006	Argument	my_local_basename ( file )		4816843	4					
ANR	4817007	CallExpression	my_local_basename ( file )		4816843	0					
ANR	4817008	Callee	my_local_basename		4816843	0					
ANR	4817009	Identifier	my_local_basename		4816843	0					
ANR	4817010	ArgumentList	file		4816843	1					
ANR	4817011	Argument	file		4816843	0					
ANR	4817012	Identifier	file		4816843	0					
ANR	4817013	Argument	line		4816843	5					
ANR	4817014	Identifier	line		4816843	0					
ANR	4817015	Argument	func		4816843	6					
ANR	4817016	Identifier	func		4816843	0					
ANR	4817017	ReturnStatement	return ;	111:1:2695:2701	4816843	11	True				
ANR	4817018	ReturnType	void		4816843	1					
ANR	4817019	Identifier	_mark_thread_safe		4816843	2					
ANR	4817020	ParameterList	"int start_or_stop , int dologging , const char * descrip , const char * func , const char * file , int line"		4816843	3					
ANR	4817021	Parameter	int start_or_stop	63:23:1690:1706	4816843	0	True				
ANR	4817022	ParameterType	int		4816843	0					
ANR	4817023	Identifier	start_or_stop		4816843	1					
ANR	4817024	Parameter	int dologging	63:42:1709:1721	4816843	1	True				
ANR	4817025	ParameterType	int		4816843	0					
ANR	4817026	Identifier	dologging		4816843	1					
ANR	4817027	Parameter	const char * descrip	63:57:1724:1742	4816843	2	True				
ANR	4817028	ParameterType	const char *		4816843	0					
ANR	4817029	Identifier	descrip		4816843	1					
ANR	4817030	Parameter	const char * func	64:8:1754:1769	4816843	3	True				
ANR	4817031	ParameterType	const char *		4816843	0					
ANR	4817032	Identifier	func		4816843	1					
ANR	4817033	Parameter	const char * file	64:26:1772:1787	4816843	4	True				
ANR	4817034	ParameterType	const char *		4816843	0					
ANR	4817035	Identifier	file		4816843	1					
ANR	4817036	Parameter	int line	64:44:1790:1797	4816843	5	True				
ANR	4817037	ParameterType	int		4816843	0					
ANR	4817038	Identifier	line		4816843	1					
ANR	4817039	CFGEntryNode	ENTRY		4816843		True				
ANR	4817040	CFGExitNode	EXIT		4816843		True				
ANR	4817041	Symbol	descrip		4816843						
ANR	4817042	Symbol	NULL		4816843						
ANR	4817043	Symbol	GetCurrentThreadId		4816843						
ANR	4817044	Symbol	stop_callback		4816843						
ANR	4817045	Symbol	line		4816843						
ANR	4817046	Symbol	D_THREADS		4816843						
ANR	4817047	Symbol	D_FULLDEBUG		4816843						
ANR	4817048	Symbol	DebugFlags		4816843						
ANR	4817049	Symbol	itoa		4816843						
ANR	4817050	Symbol	dologging		4816843						
ANR	4817051	Symbol	mode		4816843						
ANR	4817052	Symbol	buf		4816843						
ANR	4817053	Symbol	start_callback		4816843						
ANR	4817054	Symbol	file		4816843						
ANR	4817055	Symbol	start_or_stop		4816843						
ANR	4817056	Symbol	func		4816843						
ANR	4817057	Symbol	callback		4816843						
ANR	4817058	Symbol	my_local_basename		4816843						
