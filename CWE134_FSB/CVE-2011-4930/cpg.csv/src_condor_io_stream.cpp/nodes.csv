command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3458481	File	data/converged/CVE-2011-4930_htcondor/src_condor_io_stream.cpp								
ANR	3458482	DeclStmt									
ANR	3458483	Decl							int	int	putcount
ANR	3458484	DeclStmt									
ANR	3458485	Decl							int	int	getcount
ANR	3458486	DeclStmt									
ANR	3458487	Decl							int	int	Stream :: timeout_multiplier
ANR	3458488	DeclStmt									
ANR	3458489	Decl							int	int	shipcount
ANR	3458490	Function	Stream :: Stream	58:0:1518:1981							
ANR	3458491	FunctionDef	Stream :: Stream (stream_code c)		3458490	0					
ANR	3458492	CompoundStatement		74:0:1979:1981	3458490	0					
ANR	3458493	Identifier	Stream :: Stream		3458490	1					
ANR	3458494	ParameterList	stream_code c		3458490	2					
ANR	3458495	Parameter	stream_code c	58:17:1535:1547	3458490	0	True				
ANR	3458496	ParameterType	stream_code		3458490	0					
ANR	3458497	Identifier	c		3458490	1					
ANR	3458498	CFGEntryNode	ENTRY		3458490		True				
ANR	3458499	CFGExitNode	EXIT		3458490		True				
ANR	3458500	Symbol	c		3458490						
ANR	3458501	Function	Stream :: ~Stream	85:0:2179:2331							
ANR	3458502	FunctionDef	Stream :: ~Stream ()		3458501	0					
ANR	3458503	CompoundStatement		86:0:2199:2331	3458501	0					
ANR	3458504	IfStatement	if ( decrypt_buf )		3458501	0					
ANR	3458505	Condition	decrypt_buf	87:5:2206:2216	3458501	0	True				
ANR	3458506	Identifier	decrypt_buf		3458501	0					
ANR	3458507	CompoundStatement		2:19:20:20	3458501	1					
ANR	3458508	ExpressionStatement	free ( decrypt_buf )	88:2:2224:2243	3458501	0	True				
ANR	3458509	CallExpression	free ( decrypt_buf )		3458501	0					
ANR	3458510	Callee	free		3458501	0					
ANR	3458511	Identifier	free		3458501	0					
ANR	3458512	ArgumentList	decrypt_buf		3458501	1					
ANR	3458513	Argument	decrypt_buf		3458501	0					
ANR	3458514	Identifier	decrypt_buf		3458501	0					
ANR	3458515	ExpressionStatement	free ( m_peer_description_str )	90:1:2249:2277	3458501	1	True				
ANR	3458516	CallExpression	free ( m_peer_description_str )		3458501	0					
ANR	3458517	Callee	free		3458501	0					
ANR	3458518	Identifier	free		3458501	0					
ANR	3458519	ArgumentList	m_peer_description_str		3458501	1					
ANR	3458520	Argument	m_peer_description_str		3458501	0					
ANR	3458521	Identifier	m_peer_description_str		3458501	0					
ANR	3458522	IfStatement	if ( m_peer_version )		3458501	2					
ANR	3458523	Condition	m_peer_version	91:5:2284:2297	3458501	0	True				
ANR	3458524	Identifier	m_peer_version		3458501	0					
ANR	3458525	CompoundStatement		6:22:101:101	3458501	1					
ANR	3458526	Statement	delete	92:2:2305:2310	3458501	0	True				
ANR	3458527	ExpressionStatement	m_peer_version	92:9:2312:2326	3458501	1	True				
ANR	3458528	Identifier	m_peer_version		3458501	0					
ANR	3458529	Identifier	Stream :: ~Stream		3458501	1					
ANR	3458530	ParameterList			3458501	2					
ANR	3458531	CFGEntryNode	ENTRY		3458501		True				
ANR	3458532	CFGExitNode	EXIT		3458501		True				
ANR	3458533	Symbol	m_peer_description_str		3458501						
ANR	3458534	Symbol	m_peer_version		3458501						
ANR	3458535	Symbol	decrypt_buf		3458501						
ANR	3458536	Function	Stream :: code	96:0:2334:2692							
ANR	3458537	FunctionDef	Stream :: code (char & c)		3458536	0					
ANR	3458538	CompoundStatement		98:0:2362:2692	3458536	0					
ANR	3458539	SwitchStatement	switch ( _coding )		3458536	0					
ANR	3458540	Condition	_coding	99:8:2372:2378	3458536	0	True				
ANR	3458541	Identifier	_coding		3458536	0					
ANR	3458542	CompoundStatement		2:16:17:17	3458536	1					
ANR	3458543	Label	case stream_encode :	100:2:2384:2402	3458536	0	True				
ANR	3458544	Identifier	stream_encode		3458536	0					
ANR	3458545	ReturnStatement	return put ( c ) ;	101:3:2407:2420	3458536	1	True				
ANR	3458546	CallExpression	put ( c )		3458536	0					
ANR	3458547	Callee	put		3458536	0					
ANR	3458548	Identifier	put		3458536	0					
ANR	3458549	ArgumentList	c		3458536	1					
ANR	3458550	Argument	c		3458536	0					
ANR	3458551	Identifier	c		3458536	0					
ANR	3458552	Label	case stream_decode :	102:2:2424:2442	3458536	2	True				
ANR	3458553	Identifier	stream_decode		3458536	0					
ANR	3458554	ReturnStatement	return get ( c ) ;	103:3:2447:2460	3458536	3	True				
ANR	3458555	CallExpression	get ( c )		3458536	0					
ANR	3458556	Callee	get		3458536	0					
ANR	3458557	Identifier	get		3458536	0					
ANR	3458558	ArgumentList	c		3458536	1					
ANR	3458559	Argument	c		3458536	0					
ANR	3458560	Identifier	c		3458536	0					
ANR	3458561	Label	case stream_unknown :	104:2:2464:2483	3458536	4	True				
ANR	3458562	Identifier	stream_unknown		3458536	0					
ANR	3458563	ExpressionStatement	"EXCEPT ( ""ERROR: Stream::code(char &c) has unknown direction!"" )"	105:3:2488:2549	3458536	5	True				
ANR	3458564	CallExpression	"EXCEPT ( ""ERROR: Stream::code(char &c) has unknown direction!"" )"		3458536	0					
ANR	3458565	Callee	EXCEPT		3458536	0					
ANR	3458566	Identifier	EXCEPT		3458536	0					
ANR	3458567	ArgumentList	"""ERROR: Stream::code(char &c) has unknown direction!"""		3458536	1					
ANR	3458568	Argument	"""ERROR: Stream::code(char &c) has unknown direction!"""		3458536	0					
ANR	3458569	PrimaryExpression	"""ERROR: Stream::code(char &c) has unknown direction!"""		3458536	0					
ANR	3458570	BreakStatement	break ;	106:3:2554:2559	3458536	6	True				
ANR	3458571	Label	default :	107:2:2563:2570	3458536	7	True				
ANR	3458572	Identifier	default		3458536	0					
ANR	3458573	ExpressionStatement	"EXCEPT ( ""ERROR: Stream::code(char &c)'s _coding is illegal!"" )"	108:3:2575:2635	3458536	8	True				
ANR	3458574	CallExpression	"EXCEPT ( ""ERROR: Stream::code(char &c)'s _coding is illegal!"" )"		3458536	0					
ANR	3458575	Callee	EXCEPT		3458536	0					
ANR	3458576	Identifier	EXCEPT		3458536	0					
ANR	3458577	ArgumentList	"""ERROR: Stream::code(char &c)'s _coding is illegal!"""		3458536	1					
ANR	3458578	Argument	"""ERROR: Stream::code(char &c)'s _coding is illegal!"""		3458536	0					
ANR	3458579	PrimaryExpression	"""ERROR: Stream::code(char &c)'s _coding is illegal!"""		3458536	0					
ANR	3458580	BreakStatement	break ;	109:3:2640:2645	3458536	9	True				
ANR	3458581	ReturnStatement	return FALSE ;	112:1:2652:2664	3458536	1	True				
ANR	3458582	Identifier	FALSE		3458536	0					
ANR	3458583	ReturnType	int		3458536	1					
ANR	3458584	Identifier	Stream :: code		3458536	2					
ANR	3458585	ParameterList	char & c		3458536	3					
ANR	3458586	Parameter	char & c	97:14:2353:2359	3458536	0	True				
ANR	3458587	ParameterType	char &		3458536	0					
ANR	3458588	Identifier	c		3458536	1					
ANR	3458589	CFGEntryNode	ENTRY		3458536		True				
ANR	3458590	CFGExitNode	EXIT		3458536		True				
ANR	3458591	Symbol	_coding		3458536						
ANR	3458592	Symbol	c		3458536						
ANR	3458593	Symbol	get		3458536						
ANR	3458594	Symbol	FALSE		3458536						
ANR	3458595	Symbol	put		3458536						
ANR	3458596	Function	Stream :: code	115:0:2695:3080							
ANR	3458597	FunctionDef	Stream :: code (unsigned char & c)		3458596	0					
ANR	3458598	CompoundStatement		117:0:2732:3080	3458596	0					
ANR	3458599	SwitchStatement	switch ( _coding )		3458596	0					
ANR	3458600	Condition	_coding	118:8:2742:2748	3458596	0	True				
ANR	3458601	Identifier	_coding		3458596	0					
ANR	3458602	CompoundStatement		2:16:17:17	3458596	1					
ANR	3458603	Label	case stream_encode :	119:2:2754:2772	3458596	0	True				
ANR	3458604	Identifier	stream_encode		3458596	0					
ANR	3458605	ReturnStatement	return put ( c ) ;	120:3:2777:2790	3458596	1	True				
ANR	3458606	CallExpression	put ( c )		3458596	0					
ANR	3458607	Callee	put		3458596	0					
ANR	3458608	Identifier	put		3458596	0					
ANR	3458609	ArgumentList	c		3458596	1					
ANR	3458610	Argument	c		3458596	0					
ANR	3458611	Identifier	c		3458596	0					
ANR	3458612	Label	case stream_decode :	121:2:2794:2812	3458596	2	True				
ANR	3458613	Identifier	stream_decode		3458596	0					
ANR	3458614	ReturnStatement	return get ( c ) ;	122:3:2817:2830	3458596	3	True				
ANR	3458615	CallExpression	get ( c )		3458596	0					
ANR	3458616	Callee	get		3458596	0					
ANR	3458617	Identifier	get		3458596	0					
ANR	3458618	ArgumentList	c		3458596	1					
ANR	3458619	Argument	c		3458596	0					
ANR	3458620	Identifier	c		3458596	0					
ANR	3458621	Label	case stream_unknown :	123:2:2834:2853	3458596	4	True				
ANR	3458622	Identifier	stream_unknown		3458596	0					
ANR	3458623	ExpressionStatement	"EXCEPT ( ""ERROR: Stream::code(unsigned char &c) has unknown direction!"" )"	124:3:2858:2928	3458596	5	True				
ANR	3458624	CallExpression	"EXCEPT ( ""ERROR: Stream::code(unsigned char &c) has unknown direction!"" )"		3458596	0					
ANR	3458625	Callee	EXCEPT		3458596	0					
ANR	3458626	Identifier	EXCEPT		3458596	0					
ANR	3458627	ArgumentList	"""ERROR: Stream::code(unsigned char &c) has unknown direction!"""		3458596	1					
ANR	3458628	Argument	"""ERROR: Stream::code(unsigned char &c) has unknown direction!"""		3458596	0					
ANR	3458629	PrimaryExpression	"""ERROR: Stream::code(unsigned char &c) has unknown direction!"""		3458596	0					
ANR	3458630	BreakStatement	break ;	125:3:2933:2938	3458596	6	True				
ANR	3458631	Label	default :	126:2:2942:2949	3458596	7	True				
ANR	3458632	Identifier	default		3458596	0					
ANR	3458633	ExpressionStatement	"EXCEPT ( ""ERROR: Stream::code(unsigned char &c)'s _coding is illegal!"" )"	127:3:2954:3023	3458596	8	True				
ANR	3458634	CallExpression	"EXCEPT ( ""ERROR: Stream::code(unsigned char &c)'s _coding is illegal!"" )"		3458596	0					
ANR	3458635	Callee	EXCEPT		3458596	0					
ANR	3458636	Identifier	EXCEPT		3458596	0					
ANR	3458637	ArgumentList	"""ERROR: Stream::code(unsigned char &c)'s _coding is illegal!"""		3458596	1					
ANR	3458638	Argument	"""ERROR: Stream::code(unsigned char &c)'s _coding is illegal!"""		3458596	0					
ANR	3458639	PrimaryExpression	"""ERROR: Stream::code(unsigned char &c)'s _coding is illegal!"""		3458596	0					
ANR	3458640	BreakStatement	break ;	128:3:3028:3033	3458596	9	True				
ANR	3458641	ReturnStatement	return FALSE ;	131:1:3040:3052	3458596	1	True				
ANR	3458642	Identifier	FALSE		3458596	0					
ANR	3458643	ReturnType	int		3458596	1					
ANR	3458644	Identifier	Stream :: code		3458596	2					
ANR	3458645	ParameterList	unsigned char & c		3458596	3					
ANR	3458646	Parameter	unsigned char & c	116:14:2714:2729	3458596	0	True				
ANR	3458647	ParameterType	unsigned char &		3458596	0					
ANR	3458648	Identifier	c		3458596	1					
ANR	3458649	CFGEntryNode	ENTRY		3458596		True				
ANR	3458650	CFGExitNode	EXIT		3458596		True				
ANR	3458651	Symbol	_coding		3458596						
ANR	3458652	Symbol	c		3458596						
ANR	3458653	Symbol	get		3458596						
ANR	3458654	Symbol	FALSE		3458596						
ANR	3458655	Symbol	put		3458596						
ANR	3458656	Function	Stream :: code	136:0:3085:3441							
ANR	3458657	FunctionDef	Stream :: code (int & i)		3458656	0					
ANR	3458658	CompoundStatement		138:0:3113:3441	3458656	0					
ANR	3458659	SwitchStatement	switch ( _coding )		3458656	0					
ANR	3458660	Condition	_coding	139:8:3123:3129	3458656	0	True				
ANR	3458661	Identifier	_coding		3458656	0					
ANR	3458662	CompoundStatement		2:16:17:17	3458656	1					
ANR	3458663	Label	case stream_encode :	140:2:3135:3153	3458656	0	True				
ANR	3458664	Identifier	stream_encode		3458656	0					
ANR	3458665	ReturnStatement	return put ( i ) ;	141:3:3158:3171	3458656	1	True				
ANR	3458666	CallExpression	put ( i )		3458656	0					
ANR	3458667	Callee	put		3458656	0					
ANR	3458668	Identifier	put		3458656	0					
ANR	3458669	ArgumentList	i		3458656	1					
ANR	3458670	Argument	i		3458656	0					
ANR	3458671	Identifier	i		3458656	0					
ANR	3458672	Label	case stream_decode :	142:2:3175:3193	3458656	2	True				
ANR	3458673	Identifier	stream_decode		3458656	0					
ANR	3458674	ReturnStatement	return get ( i ) ;	143:3:3198:3211	3458656	3	True				
ANR	3458675	CallExpression	get ( i )		3458656	0					
ANR	3458676	Callee	get		3458656	0					
ANR	3458677	Identifier	get		3458656	0					
ANR	3458678	ArgumentList	i		3458656	1					
ANR	3458679	Argument	i		3458656	0					
ANR	3458680	Identifier	i		3458656	0					
ANR	3458681	Label	case stream_unknown :	144:2:3215:3234	3458656	4	True				
ANR	3458682	Identifier	stream_unknown		3458656	0					
ANR	3458683	ExpressionStatement	"EXCEPT ( ""ERROR: Stream::code(int &i) has unknown direction!"" )"	145:3:3239:3299	3458656	5	True				
ANR	3458684	CallExpression	"EXCEPT ( ""ERROR: Stream::code(int &i) has unknown direction!"" )"		3458656	0					
ANR	3458685	Callee	EXCEPT		3458656	0					
ANR	3458686	Identifier	EXCEPT		3458656	0					
ANR	3458687	ArgumentList	"""ERROR: Stream::code(int &i) has unknown direction!"""		3458656	1					
ANR	3458688	Argument	"""ERROR: Stream::code(int &i) has unknown direction!"""		3458656	0					
ANR	3458689	PrimaryExpression	"""ERROR: Stream::code(int &i) has unknown direction!"""		3458656	0					
ANR	3458690	BreakStatement	break ;	146:3:3304:3309	3458656	6	True				
ANR	3458691	Label	default :	147:2:3313:3320	3458656	7	True				
ANR	3458692	Identifier	default		3458656	0					
ANR	3458693	ExpressionStatement	"EXCEPT ( ""ERROR: Stream::code(int &i)'s _coding is illegal!"" )"	148:3:3325:3384	3458656	8	True				
ANR	3458694	CallExpression	"EXCEPT ( ""ERROR: Stream::code(int &i)'s _coding is illegal!"" )"		3458656	0					
ANR	3458695	Callee	EXCEPT		3458656	0					
ANR	3458696	Identifier	EXCEPT		3458656	0					
ANR	3458697	ArgumentList	"""ERROR: Stream::code(int &i)'s _coding is illegal!"""		3458656	1					
ANR	3458698	Argument	"""ERROR: Stream::code(int &i)'s _coding is illegal!"""		3458656	0					
ANR	3458699	PrimaryExpression	"""ERROR: Stream::code(int &i)'s _coding is illegal!"""		3458656	0					
ANR	3458700	BreakStatement	break ;	149:3:3389:3394	3458656	9	True				
ANR	3458701	ReturnStatement	return FALSE ;	152:1:3401:3413	3458656	1	True				
ANR	3458702	Identifier	FALSE		3458656	0					
ANR	3458703	ReturnType	int		3458656	1					
ANR	3458704	Identifier	Stream :: code		3458656	2					
ANR	3458705	ParameterList	int & i		3458656	3					
ANR	3458706	Parameter	int & i	137:14:3104:3110	3458656	0	True				
ANR	3458707	ParameterType	int &		3458656	0					
ANR	3458708	Identifier	i		3458656	1					
ANR	3458709	CFGEntryNode	ENTRY		3458656		True				
ANR	3458710	CFGExitNode	EXIT		3458656		True				
ANR	3458711	Symbol	_coding		3458656						
ANR	3458712	Symbol	get		3458656						
ANR	3458713	Symbol	i		3458656						
ANR	3458714	Symbol	FALSE		3458656						
ANR	3458715	Symbol	put		3458656						
ANR	3458716	Function	Stream :: code	157:0:3446:3829							
ANR	3458717	FunctionDef	Stream :: code (unsigned int & i)		3458716	0					
ANR	3458718	CompoundStatement		159:0:3483:3829	3458716	0					
ANR	3458719	SwitchStatement	switch ( _coding )		3458716	0					
ANR	3458720	Condition	_coding	160:8:3493:3499	3458716	0	True				
ANR	3458721	Identifier	_coding		3458716	0					
ANR	3458722	CompoundStatement		2:16:17:17	3458716	1					
ANR	3458723	Label	case stream_encode :	161:2:3505:3523	3458716	0	True				
ANR	3458724	Identifier	stream_encode		3458716	0					
ANR	3458725	ReturnStatement	return put ( i ) ;	162:3:3528:3541	3458716	1	True				
ANR	3458726	CallExpression	put ( i )		3458716	0					
ANR	3458727	Callee	put		3458716	0					
ANR	3458728	Identifier	put		3458716	0					
ANR	3458729	ArgumentList	i		3458716	1					
ANR	3458730	Argument	i		3458716	0					
ANR	3458731	Identifier	i		3458716	0					
ANR	3458732	Label	case stream_decode :	163:2:3545:3563	3458716	2	True				
ANR	3458733	Identifier	stream_decode		3458716	0					
ANR	3458734	ReturnStatement	return get ( i ) ;	164:3:3568:3581	3458716	3	True				
ANR	3458735	CallExpression	get ( i )		3458716	0					
ANR	3458736	Callee	get		3458716	0					
ANR	3458737	Identifier	get		3458716	0					
ANR	3458738	ArgumentList	i		3458716	1					
ANR	3458739	Argument	i		3458716	0					
ANR	3458740	Identifier	i		3458716	0					
ANR	3458741	Label	case stream_unknown :	165:2:3585:3604	3458716	4	True				
ANR	3458742	Identifier	stream_unknown		3458716	0					
ANR	3458743	ExpressionStatement	"EXCEPT ( ""ERROR: Stream::code(unsigned int &i) has unknown direction!"" )"	166:3:3609:3678	3458716	5	True				
ANR	3458744	CallExpression	"EXCEPT ( ""ERROR: Stream::code(unsigned int &i) has unknown direction!"" )"		3458716	0					
ANR	3458745	Callee	EXCEPT		3458716	0					
ANR	3458746	Identifier	EXCEPT		3458716	0					
ANR	3458747	ArgumentList	"""ERROR: Stream::code(unsigned int &i) has unknown direction!"""		3458716	1					
ANR	3458748	Argument	"""ERROR: Stream::code(unsigned int &i) has unknown direction!"""		3458716	0					
ANR	3458749	PrimaryExpression	"""ERROR: Stream::code(unsigned int &i) has unknown direction!"""		3458716	0					
ANR	3458750	BreakStatement	break ;	167:3:3683:3688	3458716	6	True				
ANR	3458751	Label	default :	168:2:3692:3699	3458716	7	True				
ANR	3458752	Identifier	default		3458716	0					
ANR	3458753	ExpressionStatement	"EXCEPT ( ""ERROR: Stream::code(unsigned int &i)'s _coding is illegal!"" )"	169:3:3704:3772	3458716	8	True				
ANR	3458754	CallExpression	"EXCEPT ( ""ERROR: Stream::code(unsigned int &i)'s _coding is illegal!"" )"		3458716	0					
ANR	3458755	Callee	EXCEPT		3458716	0					
ANR	3458756	Identifier	EXCEPT		3458716	0					
ANR	3458757	ArgumentList	"""ERROR: Stream::code(unsigned int &i)'s _coding is illegal!"""		3458716	1					
ANR	3458758	Argument	"""ERROR: Stream::code(unsigned int &i)'s _coding is illegal!"""		3458716	0					
ANR	3458759	PrimaryExpression	"""ERROR: Stream::code(unsigned int &i)'s _coding is illegal!"""		3458716	0					
ANR	3458760	BreakStatement	break ;	170:3:3777:3782	3458716	9	True				
ANR	3458761	ReturnStatement	return FALSE ;	173:1:3789:3801	3458716	1	True				
ANR	3458762	Identifier	FALSE		3458716	0					
ANR	3458763	ReturnType	int		3458716	1					
ANR	3458764	Identifier	Stream :: code		3458716	2					
ANR	3458765	ParameterList	unsigned int & i		3458716	3					
ANR	3458766	Parameter	unsigned int & i	158:14:3465:3480	3458716	0	True				
ANR	3458767	ParameterType	unsigned int &		3458716	0					
ANR	3458768	Identifier	i		3458716	1					
ANR	3458769	CFGEntryNode	ENTRY		3458716		True				
ANR	3458770	CFGExitNode	EXIT		3458716		True				
ANR	3458771	Symbol	_coding		3458716						
ANR	3458772	Symbol	get		3458716						
ANR	3458773	Symbol	i		3458716						
ANR	3458774	Symbol	FALSE		3458716						
ANR	3458775	Symbol	put		3458716						
ANR	3458776	Function	Stream :: code	177:0:3833:4191							
ANR	3458777	FunctionDef	Stream :: code (long & l)		3458776	0					
ANR	3458778	CompoundStatement		179:0:3861:4191	3458776	0					
ANR	3458779	SwitchStatement	switch ( _coding )		3458776	0					
ANR	3458780	Condition	_coding	180:8:3871:3877	3458776	0	True				
ANR	3458781	Identifier	_coding		3458776	0					
ANR	3458782	CompoundStatement		2:16:17:17	3458776	1					
ANR	3458783	Label	case stream_encode :	181:2:3883:3901	3458776	0	True				
ANR	3458784	Identifier	stream_encode		3458776	0					
ANR	3458785	ReturnStatement	return put ( l ) ;	182:3:3906:3919	3458776	1	True				
ANR	3458786	CallExpression	put ( l )		3458776	0					
ANR	3458787	Callee	put		3458776	0					
ANR	3458788	Identifier	put		3458776	0					
ANR	3458789	ArgumentList	l		3458776	1					
ANR	3458790	Argument	l		3458776	0					
ANR	3458791	Identifier	l		3458776	0					
ANR	3458792	Label	case stream_decode :	183:2:3923:3941	3458776	2	True				
ANR	3458793	Identifier	stream_decode		3458776	0					
ANR	3458794	ReturnStatement	return get ( l ) ;	184:3:3946:3959	3458776	3	True				
ANR	3458795	CallExpression	get ( l )		3458776	0					
ANR	3458796	Callee	get		3458776	0					
ANR	3458797	Identifier	get		3458776	0					
ANR	3458798	ArgumentList	l		3458776	1					
ANR	3458799	Argument	l		3458776	0					
ANR	3458800	Identifier	l		3458776	0					
ANR	3458801	Label	case stream_unknown :	185:2:3963:3982	3458776	4	True				
ANR	3458802	Identifier	stream_unknown		3458776	0					
ANR	3458803	ExpressionStatement	"EXCEPT ( ""ERROR: Stream::code(long &l) has unknown direction!"" )"	186:3:3987:4048	3458776	5	True				
ANR	3458804	CallExpression	"EXCEPT ( ""ERROR: Stream::code(long &l) has unknown direction!"" )"		3458776	0					
ANR	3458805	Callee	EXCEPT		3458776	0					
ANR	3458806	Identifier	EXCEPT		3458776	0					
ANR	3458807	ArgumentList	"""ERROR: Stream::code(long &l) has unknown direction!"""		3458776	1					
ANR	3458808	Argument	"""ERROR: Stream::code(long &l) has unknown direction!"""		3458776	0					
ANR	3458809	PrimaryExpression	"""ERROR: Stream::code(long &l) has unknown direction!"""		3458776	0					
ANR	3458810	BreakStatement	break ;	187:3:4053:4058	3458776	6	True				
ANR	3458811	Label	default :	188:2:4062:4069	3458776	7	True				
ANR	3458812	Identifier	default		3458776	0					
ANR	3458813	ExpressionStatement	"EXCEPT ( ""ERROR: Stream::code(long &l)'s _coding is illegal!"" )"	189:3:4074:4134	3458776	8	True				
ANR	3458814	CallExpression	"EXCEPT ( ""ERROR: Stream::code(long &l)'s _coding is illegal!"" )"		3458776	0					
ANR	3458815	Callee	EXCEPT		3458776	0					
ANR	3458816	Identifier	EXCEPT		3458776	0					
ANR	3458817	ArgumentList	"""ERROR: Stream::code(long &l)'s _coding is illegal!"""		3458776	1					
ANR	3458818	Argument	"""ERROR: Stream::code(long &l)'s _coding is illegal!"""		3458776	0					
ANR	3458819	PrimaryExpression	"""ERROR: Stream::code(long &l)'s _coding is illegal!"""		3458776	0					
ANR	3458820	BreakStatement	break ;	190:3:4139:4144	3458776	9	True				
ANR	3458821	ReturnStatement	return FALSE ;	193:1:4151:4163	3458776	1	True				
ANR	3458822	Identifier	FALSE		3458776	0					
ANR	3458823	ReturnType	int		3458776	1					
ANR	3458824	Identifier	Stream :: code		3458776	2					
ANR	3458825	ParameterList	long & l		3458776	3					
ANR	3458826	Parameter	long & l	178:14:3852:3858	3458776	0	True				
ANR	3458827	ParameterType	long &		3458776	0					
ANR	3458828	Identifier	l		3458776	1					
ANR	3458829	CFGEntryNode	ENTRY		3458776		True				
ANR	3458830	CFGExitNode	EXIT		3458776		True				
ANR	3458831	Symbol	_coding		3458776						
ANR	3458832	Symbol	get		3458776						
ANR	3458833	Symbol	FALSE		3458776						
ANR	3458834	Symbol	l		3458776						
ANR	3458835	Symbol	put		3458776						
ANR	3458836	Function	Stream :: code	197:0:4195:4580							
ANR	3458837	FunctionDef	Stream :: code (unsigned long & l)		3458836	0					
ANR	3458838	CompoundStatement		199:0:4232:4580	3458836	0					
ANR	3458839	SwitchStatement	switch ( _coding )		3458836	0					
ANR	3458840	Condition	_coding	200:8:4242:4248	3458836	0	True				
ANR	3458841	Identifier	_coding		3458836	0					
ANR	3458842	CompoundStatement		2:16:17:17	3458836	1					
ANR	3458843	Label	case stream_encode :	201:2:4254:4272	3458836	0	True				
ANR	3458844	Identifier	stream_encode		3458836	0					
ANR	3458845	ReturnStatement	return put ( l ) ;	202:3:4277:4290	3458836	1	True				
ANR	3458846	CallExpression	put ( l )		3458836	0					
ANR	3458847	Callee	put		3458836	0					
ANR	3458848	Identifier	put		3458836	0					
ANR	3458849	ArgumentList	l		3458836	1					
ANR	3458850	Argument	l		3458836	0					
ANR	3458851	Identifier	l		3458836	0					
ANR	3458852	Label	case stream_decode :	203:2:4294:4312	3458836	2	True				
ANR	3458853	Identifier	stream_decode		3458836	0					
ANR	3458854	ReturnStatement	return get ( l ) ;	204:3:4317:4330	3458836	3	True				
ANR	3458855	CallExpression	get ( l )		3458836	0					
ANR	3458856	Callee	get		3458836	0					
ANR	3458857	Identifier	get		3458836	0					
ANR	3458858	ArgumentList	l		3458836	1					
ANR	3458859	Argument	l		3458836	0					
ANR	3458860	Identifier	l		3458836	0					
ANR	3458861	Label	case stream_unknown :	205:2:4334:4353	3458836	4	True				
ANR	3458862	Identifier	stream_unknown		3458836	0					
ANR	3458863	ExpressionStatement	"EXCEPT ( ""ERROR: Stream::code(unsigned long &l) has unknown direction!"" )"	206:3:4358:4428	3458836	5	True				
ANR	3458864	CallExpression	"EXCEPT ( ""ERROR: Stream::code(unsigned long &l) has unknown direction!"" )"		3458836	0					
ANR	3458865	Callee	EXCEPT		3458836	0					
ANR	3458866	Identifier	EXCEPT		3458836	0					
ANR	3458867	ArgumentList	"""ERROR: Stream::code(unsigned long &l) has unknown direction!"""		3458836	1					
ANR	3458868	Argument	"""ERROR: Stream::code(unsigned long &l) has unknown direction!"""		3458836	0					
ANR	3458869	PrimaryExpression	"""ERROR: Stream::code(unsigned long &l) has unknown direction!"""		3458836	0					
ANR	3458870	BreakStatement	break ;	207:3:4433:4438	3458836	6	True				
ANR	3458871	Label	default :	208:2:4442:4449	3458836	7	True				
ANR	3458872	Identifier	default		3458836	0					
ANR	3458873	ExpressionStatement	"EXCEPT ( ""ERROR: Stream::code(unsigned long &l)'s _coding is illegal!"" )"	209:3:4454:4523	3458836	8	True				
ANR	3458874	CallExpression	"EXCEPT ( ""ERROR: Stream::code(unsigned long &l)'s _coding is illegal!"" )"		3458836	0					
ANR	3458875	Callee	EXCEPT		3458836	0					
ANR	3458876	Identifier	EXCEPT		3458836	0					
ANR	3458877	ArgumentList	"""ERROR: Stream::code(unsigned long &l)'s _coding is illegal!"""		3458836	1					
ANR	3458878	Argument	"""ERROR: Stream::code(unsigned long &l)'s _coding is illegal!"""		3458836	0					
ANR	3458879	PrimaryExpression	"""ERROR: Stream::code(unsigned long &l)'s _coding is illegal!"""		3458836	0					
ANR	3458880	BreakStatement	break ;	210:3:4528:4533	3458836	9	True				
ANR	3458881	ReturnStatement	return FALSE ;	213:1:4540:4552	3458836	1	True				
ANR	3458882	Identifier	FALSE		3458836	0					
ANR	3458883	ReturnType	int		3458836	1					
ANR	3458884	Identifier	Stream :: code		3458836	2					
ANR	3458885	ParameterList	unsigned long & l		3458836	3					
ANR	3458886	Parameter	unsigned long & l	198:14:4214:4229	3458836	0	True				
ANR	3458887	ParameterType	unsigned long &		3458836	0					
ANR	3458888	Identifier	l		3458836	1					
ANR	3458889	CFGEntryNode	ENTRY		3458836		True				
ANR	3458890	CFGExitNode	EXIT		3458836		True				
ANR	3458891	Symbol	_coding		3458836						
ANR	3458892	Symbol	get		3458836						
ANR	3458893	Symbol	FALSE		3458836						
ANR	3458894	Symbol	l		3458836						
ANR	3458895	Symbol	put		3458836						
ANR	3458896	Function	Stream :: code	218:0:4626:4993							
ANR	3458897	FunctionDef	Stream :: code (int64_t & l)		3458896	0					
ANR	3458898	CompoundStatement		220:0:4657:4993	3458896	0					
ANR	3458899	SwitchStatement	switch ( _coding )		3458896	0					
ANR	3458900	Condition	_coding	221:8:4667:4673	3458896	0	True				
ANR	3458901	Identifier	_coding		3458896	0					
ANR	3458902	CompoundStatement		2:16:17:17	3458896	1					
ANR	3458903	Label	case stream_encode :	222:2:4679:4697	3458896	0	True				
ANR	3458904	Identifier	stream_encode		3458896	0					
ANR	3458905	ReturnStatement	return put ( l ) ;	223:3:4702:4715	3458896	1	True				
ANR	3458906	CallExpression	put ( l )		3458896	0					
ANR	3458907	Callee	put		3458896	0					
ANR	3458908	Identifier	put		3458896	0					
ANR	3458909	ArgumentList	l		3458896	1					
ANR	3458910	Argument	l		3458896	0					
ANR	3458911	Identifier	l		3458896	0					
ANR	3458912	Label	case stream_decode :	224:2:4719:4737	3458896	2	True				
ANR	3458913	Identifier	stream_decode		3458896	0					
ANR	3458914	ReturnStatement	return get ( l ) ;	225:3:4742:4755	3458896	3	True				
ANR	3458915	CallExpression	get ( l )		3458896	0					
ANR	3458916	Callee	get		3458896	0					
ANR	3458917	Identifier	get		3458896	0					
ANR	3458918	ArgumentList	l		3458896	1					
ANR	3458919	Argument	l		3458896	0					
ANR	3458920	Identifier	l		3458896	0					
ANR	3458921	Label	case stream_unknown :	226:2:4759:4778	3458896	4	True				
ANR	3458922	Identifier	stream_unknown		3458896	0					
ANR	3458923	ExpressionStatement	"EXCEPT ( ""ERROR: Stream::code(int64_t &l) has unknown direction!"" )"	227:3:4783:4847	3458896	5	True				
ANR	3458924	CallExpression	"EXCEPT ( ""ERROR: Stream::code(int64_t &l) has unknown direction!"" )"		3458896	0					
ANR	3458925	Callee	EXCEPT		3458896	0					
ANR	3458926	Identifier	EXCEPT		3458896	0					
ANR	3458927	ArgumentList	"""ERROR: Stream::code(int64_t &l) has unknown direction!"""		3458896	1					
ANR	3458928	Argument	"""ERROR: Stream::code(int64_t &l) has unknown direction!"""		3458896	0					
ANR	3458929	PrimaryExpression	"""ERROR: Stream::code(int64_t &l) has unknown direction!"""		3458896	0					
ANR	3458930	BreakStatement	break ;	228:3:4852:4857	3458896	6	True				
ANR	3458931	Label	default :	229:2:4861:4868	3458896	7	True				
ANR	3458932	Identifier	default		3458896	0					
ANR	3458933	ExpressionStatement	"EXCEPT ( ""ERROR: Stream::code(int64_t &l)'s _coding is illegal!"" )"	230:3:4873:4936	3458896	8	True				
ANR	3458934	CallExpression	"EXCEPT ( ""ERROR: Stream::code(int64_t &l)'s _coding is illegal!"" )"		3458896	0					
ANR	3458935	Callee	EXCEPT		3458896	0					
ANR	3458936	Identifier	EXCEPT		3458896	0					
ANR	3458937	ArgumentList	"""ERROR: Stream::code(int64_t &l)'s _coding is illegal!"""		3458896	1					
ANR	3458938	Argument	"""ERROR: Stream::code(int64_t &l)'s _coding is illegal!"""		3458896	0					
ANR	3458939	PrimaryExpression	"""ERROR: Stream::code(int64_t &l)'s _coding is illegal!"""		3458896	0					
ANR	3458940	BreakStatement	break ;	231:3:4941:4946	3458896	9	True				
ANR	3458941	ReturnStatement	return FALSE ;	234:1:4953:4965	3458896	1	True				
ANR	3458942	Identifier	FALSE		3458896	0					
ANR	3458943	ReturnType	int		3458896	1					
ANR	3458944	Identifier	Stream :: code		3458896	2					
ANR	3458945	ParameterList	int64_t & l		3458896	3					
ANR	3458946	Parameter	int64_t & l	219:14:4645:4654	3458896	0	True				
ANR	3458947	ParameterType	int64_t &		3458896	0					
ANR	3458948	Identifier	l		3458896	1					
ANR	3458949	CFGEntryNode	ENTRY		3458896		True				
ANR	3458950	CFGExitNode	EXIT		3458896		True				
ANR	3458951	Symbol	_coding		3458896						
ANR	3458952	Symbol	get		3458896						
ANR	3458953	Symbol	FALSE		3458896						
ANR	3458954	Symbol	l		3458896						
ANR	3458955	Symbol	put		3458896						
ANR	3458956	Function	Stream :: code	237:0:4996:5366							
ANR	3458957	FunctionDef	Stream :: code (uint64_t & l)		3458956	0					
ANR	3458958	CompoundStatement		239:0:5028:5366	3458956	0					
ANR	3458959	SwitchStatement	switch ( _coding )		3458956	0					
ANR	3458960	Condition	_coding	240:8:5038:5044	3458956	0	True				
ANR	3458961	Identifier	_coding		3458956	0					
ANR	3458962	CompoundStatement		2:16:17:17	3458956	1					
ANR	3458963	Label	case stream_encode :	241:2:5050:5068	3458956	0	True				
ANR	3458964	Identifier	stream_encode		3458956	0					
ANR	3458965	ReturnStatement	return put ( l ) ;	242:3:5073:5086	3458956	1	True				
ANR	3458966	CallExpression	put ( l )		3458956	0					
ANR	3458967	Callee	put		3458956	0					
ANR	3458968	Identifier	put		3458956	0					
ANR	3458969	ArgumentList	l		3458956	1					
ANR	3458970	Argument	l		3458956	0					
ANR	3458971	Identifier	l		3458956	0					
ANR	3458972	Label	case stream_decode :	243:2:5090:5108	3458956	2	True				
ANR	3458973	Identifier	stream_decode		3458956	0					
ANR	3458974	ReturnStatement	return get ( l ) ;	244:3:5113:5126	3458956	3	True				
ANR	3458975	CallExpression	get ( l )		3458956	0					
ANR	3458976	Callee	get		3458956	0					
ANR	3458977	Identifier	get		3458956	0					
ANR	3458978	ArgumentList	l		3458956	1					
ANR	3458979	Argument	l		3458956	0					
ANR	3458980	Identifier	l		3458956	0					
ANR	3458981	Label	case stream_unknown :	245:2:5130:5149	3458956	4	True				
ANR	3458982	Identifier	stream_unknown		3458956	0					
ANR	3458983	ExpressionStatement	"EXCEPT ( ""ERROR: Stream::code(uint64_t &l) has unknown direction!"" )"	246:3:5154:5219	3458956	5	True				
ANR	3458984	CallExpression	"EXCEPT ( ""ERROR: Stream::code(uint64_t &l) has unknown direction!"" )"		3458956	0					
ANR	3458985	Callee	EXCEPT		3458956	0					
ANR	3458986	Identifier	EXCEPT		3458956	0					
ANR	3458987	ArgumentList	"""ERROR: Stream::code(uint64_t &l) has unknown direction!"""		3458956	1					
ANR	3458988	Argument	"""ERROR: Stream::code(uint64_t &l) has unknown direction!"""		3458956	0					
ANR	3458989	PrimaryExpression	"""ERROR: Stream::code(uint64_t &l) has unknown direction!"""		3458956	0					
ANR	3458990	BreakStatement	break ;	247:3:5224:5229	3458956	6	True				
ANR	3458991	Label	default :	248:2:5233:5240	3458956	7	True				
ANR	3458992	Identifier	default		3458956	0					
ANR	3458993	ExpressionStatement	"EXCEPT ( ""ERROR: Stream::code(uint64_t &l)'s _coding is illegal!"" )"	249:3:5245:5309	3458956	8	True				
ANR	3458994	CallExpression	"EXCEPT ( ""ERROR: Stream::code(uint64_t &l)'s _coding is illegal!"" )"		3458956	0					
ANR	3458995	Callee	EXCEPT		3458956	0					
ANR	3458996	Identifier	EXCEPT		3458956	0					
ANR	3458997	ArgumentList	"""ERROR: Stream::code(uint64_t &l)'s _coding is illegal!"""		3458956	1					
ANR	3458998	Argument	"""ERROR: Stream::code(uint64_t &l)'s _coding is illegal!"""		3458956	0					
ANR	3458999	PrimaryExpression	"""ERROR: Stream::code(uint64_t &l)'s _coding is illegal!"""		3458956	0					
ANR	3459000	BreakStatement	break ;	250:3:5314:5319	3458956	9	True				
ANR	3459001	ReturnStatement	return FALSE ;	253:1:5326:5338	3458956	1	True				
ANR	3459002	Identifier	FALSE		3458956	0					
ANR	3459003	ReturnType	int		3458956	1					
ANR	3459004	Identifier	Stream :: code		3458956	2					
ANR	3459005	ParameterList	uint64_t & l		3458956	3					
ANR	3459006	Parameter	uint64_t & l	238:14:5015:5025	3458956	0	True				
ANR	3459007	ParameterType	uint64_t &		3458956	0					
ANR	3459008	Identifier	l		3458956	1					
ANR	3459009	CFGEntryNode	ENTRY		3458956		True				
ANR	3459010	CFGExitNode	EXIT		3458956		True				
ANR	3459011	Symbol	_coding		3458956						
ANR	3459012	Symbol	get		3458956						
ANR	3459013	Symbol	FALSE		3458956						
ANR	3459014	Symbol	l		3458956						
ANR	3459015	Symbol	put		3458956						
ANR	3459016	Function	Stream :: code	258:0:5377:5738							
ANR	3459017	FunctionDef	Stream :: code (short & s)		3459016	0					
ANR	3459018	CompoundStatement		260:0:5406:5738	3459016	0					
ANR	3459019	SwitchStatement	switch ( _coding )		3459016	0					
ANR	3459020	Condition	_coding	261:8:5416:5422	3459016	0	True				
ANR	3459021	Identifier	_coding		3459016	0					
ANR	3459022	CompoundStatement		2:16:17:17	3459016	1					
ANR	3459023	Label	case stream_encode :	262:2:5428:5446	3459016	0	True				
ANR	3459024	Identifier	stream_encode		3459016	0					
ANR	3459025	ReturnStatement	return put ( s ) ;	263:3:5451:5464	3459016	1	True				
ANR	3459026	CallExpression	put ( s )		3459016	0					
ANR	3459027	Callee	put		3459016	0					
ANR	3459028	Identifier	put		3459016	0					
ANR	3459029	ArgumentList	s		3459016	1					
ANR	3459030	Argument	s		3459016	0					
ANR	3459031	Identifier	s		3459016	0					
ANR	3459032	Label	case stream_decode :	264:2:5468:5486	3459016	2	True				
ANR	3459033	Identifier	stream_decode		3459016	0					
ANR	3459034	ReturnStatement	return get ( s ) ;	265:3:5491:5504	3459016	3	True				
ANR	3459035	CallExpression	get ( s )		3459016	0					
ANR	3459036	Callee	get		3459016	0					
ANR	3459037	Identifier	get		3459016	0					
ANR	3459038	ArgumentList	s		3459016	1					
ANR	3459039	Argument	s		3459016	0					
ANR	3459040	Identifier	s		3459016	0					
ANR	3459041	Label	case stream_unknown :	266:2:5508:5527	3459016	4	True				
ANR	3459042	Identifier	stream_unknown		3459016	0					
ANR	3459043	ExpressionStatement	"EXCEPT ( ""ERROR: Stream::code(short &s) has unknown direction!"" )"	267:3:5532:5594	3459016	5	True				
ANR	3459044	CallExpression	"EXCEPT ( ""ERROR: Stream::code(short &s) has unknown direction!"" )"		3459016	0					
ANR	3459045	Callee	EXCEPT		3459016	0					
ANR	3459046	Identifier	EXCEPT		3459016	0					
ANR	3459047	ArgumentList	"""ERROR: Stream::code(short &s) has unknown direction!"""		3459016	1					
ANR	3459048	Argument	"""ERROR: Stream::code(short &s) has unknown direction!"""		3459016	0					
ANR	3459049	PrimaryExpression	"""ERROR: Stream::code(short &s) has unknown direction!"""		3459016	0					
ANR	3459050	BreakStatement	break ;	268:3:5599:5604	3459016	6	True				
ANR	3459051	Label	default :	269:2:5608:5615	3459016	7	True				
ANR	3459052	Identifier	default		3459016	0					
ANR	3459053	ExpressionStatement	"EXCEPT ( ""ERROR: Stream::code(short &s)'s _coding is illegal!"" )"	270:3:5620:5681	3459016	8	True				
ANR	3459054	CallExpression	"EXCEPT ( ""ERROR: Stream::code(short &s)'s _coding is illegal!"" )"		3459016	0					
ANR	3459055	Callee	EXCEPT		3459016	0					
ANR	3459056	Identifier	EXCEPT		3459016	0					
ANR	3459057	ArgumentList	"""ERROR: Stream::code(short &s)'s _coding is illegal!"""		3459016	1					
ANR	3459058	Argument	"""ERROR: Stream::code(short &s)'s _coding is illegal!"""		3459016	0					
ANR	3459059	PrimaryExpression	"""ERROR: Stream::code(short &s)'s _coding is illegal!"""		3459016	0					
ANR	3459060	BreakStatement	break ;	271:3:5686:5691	3459016	9	True				
ANR	3459061	ReturnStatement	return FALSE ;	274:1:5698:5710	3459016	1	True				
ANR	3459062	Identifier	FALSE		3459016	0					
ANR	3459063	ReturnType	int		3459016	1					
ANR	3459064	Identifier	Stream :: code		3459016	2					
ANR	3459065	ParameterList	short & s		3459016	3					
ANR	3459066	Parameter	short & s	259:14:5396:5403	3459016	0	True				
ANR	3459067	ParameterType	short &		3459016	0					
ANR	3459068	Identifier	s		3459016	1					
ANR	3459069	CFGEntryNode	ENTRY		3459016		True				
ANR	3459070	CFGExitNode	EXIT		3459016		True				
ANR	3459071	Symbol	_coding		3459016						
ANR	3459072	Symbol	s		3459016						
ANR	3459073	Symbol	get		3459016						
ANR	3459074	Symbol	FALSE		3459016						
ANR	3459075	Symbol	put		3459016						
ANR	3459076	Function	Stream :: code	279:0:5743:6131							
ANR	3459077	FunctionDef	Stream :: code (unsigned short & s)		3459076	0					
ANR	3459078	CompoundStatement		281:0:5781:6131	3459076	0					
ANR	3459079	SwitchStatement	switch ( _coding )		3459076	0					
ANR	3459080	Condition	_coding	282:8:5791:5797	3459076	0	True				
ANR	3459081	Identifier	_coding		3459076	0					
ANR	3459082	CompoundStatement		2:16:17:17	3459076	1					
ANR	3459083	Label	case stream_encode :	283:2:5803:5821	3459076	0	True				
ANR	3459084	Identifier	stream_encode		3459076	0					
ANR	3459085	ReturnStatement	return put ( s ) ;	284:3:5826:5839	3459076	1	True				
ANR	3459086	CallExpression	put ( s )		3459076	0					
ANR	3459087	Callee	put		3459076	0					
ANR	3459088	Identifier	put		3459076	0					
ANR	3459089	ArgumentList	s		3459076	1					
ANR	3459090	Argument	s		3459076	0					
ANR	3459091	Identifier	s		3459076	0					
ANR	3459092	Label	case stream_decode :	285:2:5843:5861	3459076	2	True				
ANR	3459093	Identifier	stream_decode		3459076	0					
ANR	3459094	ReturnStatement	return get ( s ) ;	286:3:5866:5879	3459076	3	True				
ANR	3459095	CallExpression	get ( s )		3459076	0					
ANR	3459096	Callee	get		3459076	0					
ANR	3459097	Identifier	get		3459076	0					
ANR	3459098	ArgumentList	s		3459076	1					
ANR	3459099	Argument	s		3459076	0					
ANR	3459100	Identifier	s		3459076	0					
ANR	3459101	Label	case stream_unknown :	287:2:5883:5902	3459076	4	True				
ANR	3459102	Identifier	stream_unknown		3459076	0					
ANR	3459103	ExpressionStatement	"EXCEPT ( ""ERROR: Stream::code(unsigned short &s) has unknown direction!"" )"	288:3:5907:5978	3459076	5	True				
ANR	3459104	CallExpression	"EXCEPT ( ""ERROR: Stream::code(unsigned short &s) has unknown direction!"" )"		3459076	0					
ANR	3459105	Callee	EXCEPT		3459076	0					
ANR	3459106	Identifier	EXCEPT		3459076	0					
ANR	3459107	ArgumentList	"""ERROR: Stream::code(unsigned short &s) has unknown direction!"""		3459076	1					
ANR	3459108	Argument	"""ERROR: Stream::code(unsigned short &s) has unknown direction!"""		3459076	0					
ANR	3459109	PrimaryExpression	"""ERROR: Stream::code(unsigned short &s) has unknown direction!"""		3459076	0					
ANR	3459110	BreakStatement	break ;	289:3:5983:5988	3459076	6	True				
ANR	3459111	Label	default :	290:2:5992:5999	3459076	7	True				
ANR	3459112	Identifier	default		3459076	0					
ANR	3459113	ExpressionStatement	"EXCEPT ( ""ERROR: Stream::code(unsigned short &s)'s _coding is illegal!"" )"	291:3:6004:6074	3459076	8	True				
ANR	3459114	CallExpression	"EXCEPT ( ""ERROR: Stream::code(unsigned short &s)'s _coding is illegal!"" )"		3459076	0					
ANR	3459115	Callee	EXCEPT		3459076	0					
ANR	3459116	Identifier	EXCEPT		3459076	0					
ANR	3459117	ArgumentList	"""ERROR: Stream::code(unsigned short &s)'s _coding is illegal!"""		3459076	1					
ANR	3459118	Argument	"""ERROR: Stream::code(unsigned short &s)'s _coding is illegal!"""		3459076	0					
ANR	3459119	PrimaryExpression	"""ERROR: Stream::code(unsigned short &s)'s _coding is illegal!"""		3459076	0					
ANR	3459120	BreakStatement	break ;	292:3:6079:6084	3459076	9	True				
ANR	3459121	ReturnStatement	return FALSE ;	295:1:6091:6103	3459076	1	True				
ANR	3459122	Identifier	FALSE		3459076	0					
ANR	3459123	ReturnType	int		3459076	1					
ANR	3459124	Identifier	Stream :: code		3459076	2					
ANR	3459125	ParameterList	unsigned short & s		3459076	3					
ANR	3459126	Parameter	unsigned short & s	280:14:5762:5778	3459076	0	True				
ANR	3459127	ParameterType	unsigned short &		3459076	0					
ANR	3459128	Identifier	s		3459076	1					
ANR	3459129	CFGEntryNode	ENTRY		3459076		True				
ANR	3459130	CFGExitNode	EXIT		3459076		True				
ANR	3459131	Symbol	_coding		3459076						
ANR	3459132	Symbol	s		3459076						
ANR	3459133	Symbol	get		3459076						
ANR	3459134	Symbol	FALSE		3459076						
ANR	3459135	Symbol	put		3459076						
ANR	3459136	Function	Stream :: code	300:0:6136:6497							
ANR	3459137	FunctionDef	Stream :: code (float & f)		3459136	0					
ANR	3459138	CompoundStatement		302:0:6165:6497	3459136	0					
ANR	3459139	SwitchStatement	switch ( _coding )		3459136	0					
ANR	3459140	Condition	_coding	303:8:6175:6181	3459136	0	True				
ANR	3459141	Identifier	_coding		3459136	0					
ANR	3459142	CompoundStatement		2:16:17:17	3459136	1					
ANR	3459143	Label	case stream_encode :	304:2:6187:6205	3459136	0	True				
ANR	3459144	Identifier	stream_encode		3459136	0					
ANR	3459145	ReturnStatement	return put ( f ) ;	305:3:6210:6223	3459136	1	True				
ANR	3459146	CallExpression	put ( f )		3459136	0					
ANR	3459147	Callee	put		3459136	0					
ANR	3459148	Identifier	put		3459136	0					
ANR	3459149	ArgumentList	f		3459136	1					
ANR	3459150	Argument	f		3459136	0					
ANR	3459151	Identifier	f		3459136	0					
ANR	3459152	Label	case stream_decode :	306:2:6227:6245	3459136	2	True				
ANR	3459153	Identifier	stream_decode		3459136	0					
ANR	3459154	ReturnStatement	return get ( f ) ;	307:3:6250:6263	3459136	3	True				
ANR	3459155	CallExpression	get ( f )		3459136	0					
ANR	3459156	Callee	get		3459136	0					
ANR	3459157	Identifier	get		3459136	0					
ANR	3459158	ArgumentList	f		3459136	1					
ANR	3459159	Argument	f		3459136	0					
ANR	3459160	Identifier	f		3459136	0					
ANR	3459161	Label	case stream_unknown :	308:2:6267:6286	3459136	4	True				
ANR	3459162	Identifier	stream_unknown		3459136	0					
ANR	3459163	ExpressionStatement	"EXCEPT ( ""ERROR: Stream::code(float &f) has unknown direction!"" )"	309:3:6291:6353	3459136	5	True				
ANR	3459164	CallExpression	"EXCEPT ( ""ERROR: Stream::code(float &f) has unknown direction!"" )"		3459136	0					
ANR	3459165	Callee	EXCEPT		3459136	0					
ANR	3459166	Identifier	EXCEPT		3459136	0					
ANR	3459167	ArgumentList	"""ERROR: Stream::code(float &f) has unknown direction!"""		3459136	1					
ANR	3459168	Argument	"""ERROR: Stream::code(float &f) has unknown direction!"""		3459136	0					
ANR	3459169	PrimaryExpression	"""ERROR: Stream::code(float &f) has unknown direction!"""		3459136	0					
ANR	3459170	BreakStatement	break ;	310:3:6358:6363	3459136	6	True				
ANR	3459171	Label	default :	311:2:6367:6374	3459136	7	True				
ANR	3459172	Identifier	default		3459136	0					
ANR	3459173	ExpressionStatement	"EXCEPT ( ""ERROR: Stream::code(float &f)'s _coding is illegal!"" )"	312:3:6379:6440	3459136	8	True				
ANR	3459174	CallExpression	"EXCEPT ( ""ERROR: Stream::code(float &f)'s _coding is illegal!"" )"		3459136	0					
ANR	3459175	Callee	EXCEPT		3459136	0					
ANR	3459176	Identifier	EXCEPT		3459136	0					
ANR	3459177	ArgumentList	"""ERROR: Stream::code(float &f)'s _coding is illegal!"""		3459136	1					
ANR	3459178	Argument	"""ERROR: Stream::code(float &f)'s _coding is illegal!"""		3459136	0					
ANR	3459179	PrimaryExpression	"""ERROR: Stream::code(float &f)'s _coding is illegal!"""		3459136	0					
ANR	3459180	BreakStatement	break ;	313:3:6445:6450	3459136	9	True				
ANR	3459181	ReturnStatement	return FALSE ;	316:1:6457:6469	3459136	1	True				
ANR	3459182	Identifier	FALSE		3459136	0					
ANR	3459183	ReturnType	int		3459136	1					
ANR	3459184	Identifier	Stream :: code		3459136	2					
ANR	3459185	ParameterList	float & f		3459136	3					
ANR	3459186	Parameter	float & f	301:14:6155:6162	3459136	0	True				
ANR	3459187	ParameterType	float &		3459136	0					
ANR	3459188	Identifier	f		3459136	1					
ANR	3459189	CFGEntryNode	ENTRY		3459136		True				
ANR	3459190	CFGExitNode	EXIT		3459136		True				
ANR	3459191	Symbol	_coding		3459136						
ANR	3459192	Symbol	f		3459136						
ANR	3459193	Symbol	get		3459136						
ANR	3459194	Symbol	FALSE		3459136						
ANR	3459195	Symbol	put		3459136						
ANR	3459196	Function	Stream :: code	321:0:6502:6866							
ANR	3459197	FunctionDef	Stream :: code (double & d)		3459196	0					
ANR	3459198	CompoundStatement		323:0:6532:6866	3459196	0					
ANR	3459199	SwitchStatement	switch ( _coding )		3459196	0					
ANR	3459200	Condition	_coding	324:8:6542:6548	3459196	0	True				
ANR	3459201	Identifier	_coding		3459196	0					
ANR	3459202	CompoundStatement		2:16:17:17	3459196	1					
ANR	3459203	Label	case stream_encode :	325:2:6554:6572	3459196	0	True				
ANR	3459204	Identifier	stream_encode		3459196	0					
ANR	3459205	ReturnStatement	return put ( d ) ;	326:3:6577:6590	3459196	1	True				
ANR	3459206	CallExpression	put ( d )		3459196	0					
ANR	3459207	Callee	put		3459196	0					
ANR	3459208	Identifier	put		3459196	0					
ANR	3459209	ArgumentList	d		3459196	1					
ANR	3459210	Argument	d		3459196	0					
ANR	3459211	Identifier	d		3459196	0					
ANR	3459212	Label	case stream_decode :	327:2:6594:6612	3459196	2	True				
ANR	3459213	Identifier	stream_decode		3459196	0					
ANR	3459214	ReturnStatement	return get ( d ) ;	328:3:6617:6630	3459196	3	True				
ANR	3459215	CallExpression	get ( d )		3459196	0					
ANR	3459216	Callee	get		3459196	0					
ANR	3459217	Identifier	get		3459196	0					
ANR	3459218	ArgumentList	d		3459196	1					
ANR	3459219	Argument	d		3459196	0					
ANR	3459220	Identifier	d		3459196	0					
ANR	3459221	Label	case stream_unknown :	329:2:6634:6653	3459196	4	True				
ANR	3459222	Identifier	stream_unknown		3459196	0					
ANR	3459223	ExpressionStatement	"EXCEPT ( ""ERROR: Stream::code(double &d) has unknown direction!"" )"	330:3:6658:6721	3459196	5	True				
ANR	3459224	CallExpression	"EXCEPT ( ""ERROR: Stream::code(double &d) has unknown direction!"" )"		3459196	0					
ANR	3459225	Callee	EXCEPT		3459196	0					
ANR	3459226	Identifier	EXCEPT		3459196	0					
ANR	3459227	ArgumentList	"""ERROR: Stream::code(double &d) has unknown direction!"""		3459196	1					
ANR	3459228	Argument	"""ERROR: Stream::code(double &d) has unknown direction!"""		3459196	0					
ANR	3459229	PrimaryExpression	"""ERROR: Stream::code(double &d) has unknown direction!"""		3459196	0					
ANR	3459230	BreakStatement	break ;	331:3:6726:6731	3459196	6	True				
ANR	3459231	Label	default :	332:2:6735:6742	3459196	7	True				
ANR	3459232	Identifier	default		3459196	0					
ANR	3459233	ExpressionStatement	"EXCEPT ( ""ERROR: Stream::code(double &d)'s _coding is illegal!"" )"	333:3:6747:6809	3459196	8	True				
ANR	3459234	CallExpression	"EXCEPT ( ""ERROR: Stream::code(double &d)'s _coding is illegal!"" )"		3459196	0					
ANR	3459235	Callee	EXCEPT		3459196	0					
ANR	3459236	Identifier	EXCEPT		3459196	0					
ANR	3459237	ArgumentList	"""ERROR: Stream::code(double &d)'s _coding is illegal!"""		3459196	1					
ANR	3459238	Argument	"""ERROR: Stream::code(double &d)'s _coding is illegal!"""		3459196	0					
ANR	3459239	PrimaryExpression	"""ERROR: Stream::code(double &d)'s _coding is illegal!"""		3459196	0					
ANR	3459240	BreakStatement	break ;	334:3:6814:6819	3459196	9	True				
ANR	3459241	ReturnStatement	return FALSE ;	337:1:6826:6838	3459196	1	True				
ANR	3459242	Identifier	FALSE		3459196	0					
ANR	3459243	ReturnType	int		3459196	1					
ANR	3459244	Identifier	Stream :: code		3459196	2					
ANR	3459245	ParameterList	double & d		3459196	3					
ANR	3459246	Parameter	double & d	322:14:6521:6529	3459196	0	True				
ANR	3459247	ParameterType	double &		3459196	0					
ANR	3459248	Identifier	d		3459196	1					
ANR	3459249	CFGEntryNode	ENTRY		3459196		True				
ANR	3459250	CFGExitNode	EXIT		3459196		True				
ANR	3459251	Symbol	_coding		3459196						
ANR	3459252	Symbol	d		3459196						
ANR	3459253	Symbol	get		3459196						
ANR	3459254	Symbol	FALSE		3459196						
ANR	3459255	Symbol	put		3459196						
ANR	3459256	Function	Stream :: code	342:0:6871:7232							
ANR	3459257	FunctionDef	Stream :: code (char * & s)		3459256	0					
ANR	3459258	CompoundStatement		344:0:6900:7232	3459256	0					
ANR	3459259	SwitchStatement	switch ( _coding )		3459256	0					
ANR	3459260	Condition	_coding	345:8:6910:6916	3459256	0	True				
ANR	3459261	Identifier	_coding		3459256	0					
ANR	3459262	CompoundStatement		2:16:17:17	3459256	1					
ANR	3459263	Label	case stream_encode :	346:2:6922:6940	3459256	0	True				
ANR	3459264	Identifier	stream_encode		3459256	0					
ANR	3459265	ReturnStatement	return put ( s ) ;	347:3:6945:6958	3459256	1	True				
ANR	3459266	CallExpression	put ( s )		3459256	0					
ANR	3459267	Callee	put		3459256	0					
ANR	3459268	Identifier	put		3459256	0					
ANR	3459269	ArgumentList	s		3459256	1					
ANR	3459270	Argument	s		3459256	0					
ANR	3459271	Identifier	s		3459256	0					
ANR	3459272	Label	case stream_decode :	348:2:6962:6980	3459256	2	True				
ANR	3459273	Identifier	stream_decode		3459256	0					
ANR	3459274	ReturnStatement	return get ( s ) ;	349:3:6985:6998	3459256	3	True				
ANR	3459275	CallExpression	get ( s )		3459256	0					
ANR	3459276	Callee	get		3459256	0					
ANR	3459277	Identifier	get		3459256	0					
ANR	3459278	ArgumentList	s		3459256	1					
ANR	3459279	Argument	s		3459256	0					
ANR	3459280	Identifier	s		3459256	0					
ANR	3459281	Label	case stream_unknown :	350:2:7002:7021	3459256	4	True				
ANR	3459282	Identifier	stream_unknown		3459256	0					
ANR	3459283	ExpressionStatement	"EXCEPT ( ""ERROR: Stream::code(char *&s) has unknown direction!"" )"	351:3:7026:7088	3459256	5	True				
ANR	3459284	CallExpression	"EXCEPT ( ""ERROR: Stream::code(char *&s) has unknown direction!"" )"		3459256	0					
ANR	3459285	Callee	EXCEPT		3459256	0					
ANR	3459286	Identifier	EXCEPT		3459256	0					
ANR	3459287	ArgumentList	"""ERROR: Stream::code(char *&s) has unknown direction!"""		3459256	1					
ANR	3459288	Argument	"""ERROR: Stream::code(char *&s) has unknown direction!"""		3459256	0					
ANR	3459289	PrimaryExpression	"""ERROR: Stream::code(char *&s) has unknown direction!"""		3459256	0					
ANR	3459290	BreakStatement	break ;	352:3:7093:7098	3459256	6	True				
ANR	3459291	Label	default :	353:2:7102:7109	3459256	7	True				
ANR	3459292	Identifier	default		3459256	0					
ANR	3459293	ExpressionStatement	"EXCEPT ( ""ERROR: Stream::code(char *&s)'s _coding is illegal!"" )"	354:3:7114:7175	3459256	8	True				
ANR	3459294	CallExpression	"EXCEPT ( ""ERROR: Stream::code(char *&s)'s _coding is illegal!"" )"		3459256	0					
ANR	3459295	Callee	EXCEPT		3459256	0					
ANR	3459296	Identifier	EXCEPT		3459256	0					
ANR	3459297	ArgumentList	"""ERROR: Stream::code(char *&s)'s _coding is illegal!"""		3459256	1					
ANR	3459298	Argument	"""ERROR: Stream::code(char *&s)'s _coding is illegal!"""		3459256	0					
ANR	3459299	PrimaryExpression	"""ERROR: Stream::code(char *&s)'s _coding is illegal!"""		3459256	0					
ANR	3459300	BreakStatement	break ;	355:3:7180:7185	3459256	9	True				
ANR	3459301	ReturnStatement	return FALSE ;	358:1:7192:7204	3459256	1	True				
ANR	3459302	Identifier	FALSE		3459256	0					
ANR	3459303	ReturnType	int		3459256	1					
ANR	3459304	Identifier	Stream :: code		3459256	2					
ANR	3459305	ParameterList	char * & s		3459256	3					
ANR	3459306	Parameter	char * & s	343:14:6890:6897	3459256	0	True				
ANR	3459307	ParameterType	char * &		3459256	0					
ANR	3459308	Identifier	s		3459256	1					
ANR	3459309	CFGEntryNode	ENTRY		3459256		True				
ANR	3459310	CFGExitNode	EXIT		3459256		True				
ANR	3459311	Symbol	_coding		3459256						
ANR	3459312	Symbol	s		3459256						
ANR	3459313	Symbol	get		3459256						
ANR	3459314	Symbol	FALSE		3459256						
ANR	3459315	Symbol	put		3459256						
ANR	3459316	Function	Stream :: code	362:0:7236:7606							
ANR	3459317	FunctionDef	Stream :: code (MyString & s)		3459316	0					
ANR	3459318	CompoundStatement		364:0:7268:7606	3459316	0					
ANR	3459319	SwitchStatement	switch ( _coding )		3459316	0					
ANR	3459320	Condition	_coding	365:8:7278:7284	3459316	0	True				
ANR	3459321	Identifier	_coding		3459316	0					
ANR	3459322	CompoundStatement		2:16:17:17	3459316	1					
ANR	3459323	Label	case stream_encode :	366:2:7290:7308	3459316	0	True				
ANR	3459324	Identifier	stream_encode		3459316	0					
ANR	3459325	ReturnStatement	return put ( s ) ;	367:3:7313:7326	3459316	1	True				
ANR	3459326	CallExpression	put ( s )		3459316	0					
ANR	3459327	Callee	put		3459316	0					
ANR	3459328	Identifier	put		3459316	0					
ANR	3459329	ArgumentList	s		3459316	1					
ANR	3459330	Argument	s		3459316	0					
ANR	3459331	Identifier	s		3459316	0					
ANR	3459332	Label	case stream_decode :	368:2:7330:7348	3459316	2	True				
ANR	3459333	Identifier	stream_decode		3459316	0					
ANR	3459334	ReturnStatement	return get ( s ) ;	369:3:7353:7366	3459316	3	True				
ANR	3459335	CallExpression	get ( s )		3459316	0					
ANR	3459336	Callee	get		3459316	0					
ANR	3459337	Identifier	get		3459316	0					
ANR	3459338	ArgumentList	s		3459316	1					
ANR	3459339	Argument	s		3459316	0					
ANR	3459340	Identifier	s		3459316	0					
ANR	3459341	Label	case stream_unknown :	370:2:7370:7389	3459316	4	True				
ANR	3459342	Identifier	stream_unknown		3459316	0					
ANR	3459343	ExpressionStatement	"EXCEPT ( ""ERROR: Stream::code(MyString &s) has unknown direction!"" )"	371:3:7394:7459	3459316	5	True				
ANR	3459344	CallExpression	"EXCEPT ( ""ERROR: Stream::code(MyString &s) has unknown direction!"" )"		3459316	0					
ANR	3459345	Callee	EXCEPT		3459316	0					
ANR	3459346	Identifier	EXCEPT		3459316	0					
ANR	3459347	ArgumentList	"""ERROR: Stream::code(MyString &s) has unknown direction!"""		3459316	1					
ANR	3459348	Argument	"""ERROR: Stream::code(MyString &s) has unknown direction!"""		3459316	0					
ANR	3459349	PrimaryExpression	"""ERROR: Stream::code(MyString &s) has unknown direction!"""		3459316	0					
ANR	3459350	BreakStatement	break ;	372:3:7464:7469	3459316	6	True				
ANR	3459351	Label	default :	373:2:7473:7480	3459316	7	True				
ANR	3459352	Identifier	default		3459316	0					
ANR	3459353	ExpressionStatement	"EXCEPT ( ""ERROR: Stream::code(MyString &s)'s _coding is illegal!"" )"	374:3:7485:7549	3459316	8	True				
ANR	3459354	CallExpression	"EXCEPT ( ""ERROR: Stream::code(MyString &s)'s _coding is illegal!"" )"		3459316	0					
ANR	3459355	Callee	EXCEPT		3459316	0					
ANR	3459356	Identifier	EXCEPT		3459316	0					
ANR	3459357	ArgumentList	"""ERROR: Stream::code(MyString &s)'s _coding is illegal!"""		3459316	1					
ANR	3459358	Argument	"""ERROR: Stream::code(MyString &s)'s _coding is illegal!"""		3459316	0					
ANR	3459359	PrimaryExpression	"""ERROR: Stream::code(MyString &s)'s _coding is illegal!"""		3459316	0					
ANR	3459360	BreakStatement	break ;	375:3:7554:7559	3459316	9	True				
ANR	3459361	ReturnStatement	return FALSE ;	378:1:7566:7578	3459316	1	True				
ANR	3459362	Identifier	FALSE		3459316	0					
ANR	3459363	ReturnType	int		3459316	1					
ANR	3459364	Identifier	Stream :: code		3459316	2					
ANR	3459365	ParameterList	MyString & s		3459316	3					
ANR	3459366	Parameter	MyString & s	363:14:7255:7265	3459316	0	True				
ANR	3459367	ParameterType	MyString &		3459316	0					
ANR	3459368	Identifier	s		3459316	1					
ANR	3459369	CFGEntryNode	ENTRY		3459316		True				
ANR	3459370	CFGExitNode	EXIT		3459316		True				
ANR	3459371	Symbol	_coding		3459316						
ANR	3459372	Symbol	s		3459316						
ANR	3459373	Symbol	get		3459316						
ANR	3459374	Symbol	FALSE		3459316						
ANR	3459375	Symbol	put		3459316						
ANR	3459376	Function	Stream :: code	382:0:7610:7989							
ANR	3459377	FunctionDef	Stream :: code (std :: string & s)		3459376	0					
ANR	3459378	CompoundStatement		384:0:7645:7989	3459376	0					
ANR	3459379	SwitchStatement	switch ( _coding )		3459376	0					
ANR	3459380	Condition	_coding	385:8:7655:7661	3459376	0	True				
ANR	3459381	Identifier	_coding		3459376	0					
ANR	3459382	CompoundStatement		2:16:17:17	3459376	1					
ANR	3459383	Label	case stream_encode :	386:2:7667:7685	3459376	0	True				
ANR	3459384	Identifier	stream_encode		3459376	0					
ANR	3459385	ReturnStatement	return put ( s ) ;	387:3:7690:7703	3459376	1	True				
ANR	3459386	CallExpression	put ( s )		3459376	0					
ANR	3459387	Callee	put		3459376	0					
ANR	3459388	Identifier	put		3459376	0					
ANR	3459389	ArgumentList	s		3459376	1					
ANR	3459390	Argument	s		3459376	0					
ANR	3459391	Identifier	s		3459376	0					
ANR	3459392	Label	case stream_decode :	388:2:7707:7725	3459376	2	True				
ANR	3459393	Identifier	stream_decode		3459376	0					
ANR	3459394	ReturnStatement	return get ( s ) ;	389:3:7730:7743	3459376	3	True				
ANR	3459395	CallExpression	get ( s )		3459376	0					
ANR	3459396	Callee	get		3459376	0					
ANR	3459397	Identifier	get		3459376	0					
ANR	3459398	ArgumentList	s		3459376	1					
ANR	3459399	Argument	s		3459376	0					
ANR	3459400	Identifier	s		3459376	0					
ANR	3459401	Label	case stream_unknown :	390:2:7747:7766	3459376	4	True				
ANR	3459402	Identifier	stream_unknown		3459376	0					
ANR	3459403	ExpressionStatement	"EXCEPT ( ""ERROR: Stream::code(std::string &s) has unknown direction!"" )"	391:3:7771:7839	3459376	5	True				
ANR	3459404	CallExpression	"EXCEPT ( ""ERROR: Stream::code(std::string &s) has unknown direction!"" )"		3459376	0					
ANR	3459405	Callee	EXCEPT		3459376	0					
ANR	3459406	Identifier	EXCEPT		3459376	0					
ANR	3459407	ArgumentList	"""ERROR: Stream::code(std::string &s) has unknown direction!"""		3459376	1					
ANR	3459408	Argument	"""ERROR: Stream::code(std::string &s) has unknown direction!"""		3459376	0					
ANR	3459409	PrimaryExpression	"""ERROR: Stream::code(std::string &s) has unknown direction!"""		3459376	0					
ANR	3459410	BreakStatement	break ;	392:3:7844:7849	3459376	6	True				
ANR	3459411	Label	default :	393:2:7853:7860	3459376	7	True				
ANR	3459412	Identifier	default		3459376	0					
ANR	3459413	ExpressionStatement	"EXCEPT ( ""ERROR: Stream::code(std::string &s)'s _coding is illegal!"" )"	394:3:7865:7932	3459376	8	True				
ANR	3459414	CallExpression	"EXCEPT ( ""ERROR: Stream::code(std::string &s)'s _coding is illegal!"" )"		3459376	0					
ANR	3459415	Callee	EXCEPT		3459376	0					
ANR	3459416	Identifier	EXCEPT		3459376	0					
ANR	3459417	ArgumentList	"""ERROR: Stream::code(std::string &s)'s _coding is illegal!"""		3459376	1					
ANR	3459418	Argument	"""ERROR: Stream::code(std::string &s)'s _coding is illegal!"""		3459376	0					
ANR	3459419	PrimaryExpression	"""ERROR: Stream::code(std::string &s)'s _coding is illegal!"""		3459376	0					
ANR	3459420	BreakStatement	break ;	395:3:7937:7942	3459376	9	True				
ANR	3459421	ReturnStatement	return FALSE ;	398:1:7949:7961	3459376	1	True				
ANR	3459422	Identifier	FALSE		3459376	0					
ANR	3459423	ReturnType	int		3459376	1					
ANR	3459424	Identifier	Stream :: code		3459376	2					
ANR	3459425	ParameterList	std :: string & s		3459376	3					
ANR	3459426	Parameter	std :: string & s	383:14:7629:7642	3459376	0	True				
ANR	3459427	ParameterType	std :: string &		3459376	0					
ANR	3459428	Identifier	s		3459376	1					
ANR	3459429	CFGEntryNode	ENTRY		3459376		True				
ANR	3459430	CFGExitNode	EXIT		3459376		True				
ANR	3459431	Symbol	_coding		3459376						
ANR	3459432	Symbol	s		3459376						
ANR	3459433	Symbol	get		3459376						
ANR	3459434	Symbol	FALSE		3459376						
ANR	3459435	Symbol	put		3459376						
ANR	3459436	Function	Stream :: code	402:0:7993:8395							
ANR	3459437	FunctionDef	"Stream :: code (char * & s , int & len)"		3459436	0					
ANR	3459438	CompoundStatement		404:0:8033:8395	3459436	0					
ANR	3459439	SwitchStatement	switch ( _coding )		3459436	0					
ANR	3459440	Condition	_coding	405:8:8043:8049	3459436	0	True				
ANR	3459441	Identifier	_coding		3459436	0					
ANR	3459442	CompoundStatement		2:16:17:17	3459436	1					
ANR	3459443	Label	case stream_encode :	406:2:8055:8073	3459436	0	True				
ANR	3459444	Identifier	stream_encode		3459436	0					
ANR	3459445	ReturnStatement	"return put ( s , len ) ;"	407:3:8078:8096	3459436	1	True				
ANR	3459446	CallExpression	"put ( s , len )"		3459436	0					
ANR	3459447	Callee	put		3459436	0					
ANR	3459448	Identifier	put		3459436	0					
ANR	3459449	ArgumentList	s		3459436	1					
ANR	3459450	Argument	s		3459436	0					
ANR	3459451	Identifier	s		3459436	0					
ANR	3459452	Argument	len		3459436	1					
ANR	3459453	Identifier	len		3459436	0					
ANR	3459454	Label	case stream_decode :	408:2:8100:8118	3459436	2	True				
ANR	3459455	Identifier	stream_decode		3459436	0					
ANR	3459456	ReturnStatement	"return get ( s , len ) ;"	409:3:8123:8141	3459436	3	True				
ANR	3459457	CallExpression	"get ( s , len )"		3459436	0					
ANR	3459458	Callee	get		3459436	0					
ANR	3459459	Identifier	get		3459436	0					
ANR	3459460	ArgumentList	s		3459436	1					
ANR	3459461	Argument	s		3459436	0					
ANR	3459462	Identifier	s		3459436	0					
ANR	3459463	Argument	len		3459436	1					
ANR	3459464	Identifier	len		3459436	0					
ANR	3459465	Label	case stream_unknown :	410:2:8145:8164	3459436	4	True				
ANR	3459466	Identifier	stream_unknown		3459436	0					
ANR	3459467	ExpressionStatement	"EXCEPT ( ""ERROR: Stream::code(char *&s, int &len) has unknown direction!"" )"	411:3:8169:8241	3459436	5	True				
ANR	3459468	CallExpression	"EXCEPT ( ""ERROR: Stream::code(char *&s, int &len) has unknown direction!"" )"		3459436	0					
ANR	3459469	Callee	EXCEPT		3459436	0					
ANR	3459470	Identifier	EXCEPT		3459436	0					
ANR	3459471	ArgumentList	"""ERROR: Stream::code(char *&s, int &len) has unknown direction!"""		3459436	1					
ANR	3459472	Argument	"""ERROR: Stream::code(char *&s, int &len) has unknown direction!"""		3459436	0					
ANR	3459473	PrimaryExpression	"""ERROR: Stream::code(char *&s, int &len) has unknown direction!"""		3459436	0					
ANR	3459474	BreakStatement	break ;	412:3:8246:8251	3459436	6	True				
ANR	3459475	Label	default :	413:2:8255:8262	3459436	7	True				
ANR	3459476	Identifier	default		3459436	0					
ANR	3459477	ExpressionStatement	"EXCEPT ( ""ERROR: Stream::code(char *&s, int &len)'s _coding is illegal!"" )"	414:3:8267:8338	3459436	8	True				
ANR	3459478	CallExpression	"EXCEPT ( ""ERROR: Stream::code(char *&s, int &len)'s _coding is illegal!"" )"		3459436	0					
ANR	3459479	Callee	EXCEPT		3459436	0					
ANR	3459480	Identifier	EXCEPT		3459436	0					
ANR	3459481	ArgumentList	"""ERROR: Stream::code(char *&s, int &len)'s _coding is illegal!"""		3459436	1					
ANR	3459482	Argument	"""ERROR: Stream::code(char *&s, int &len)'s _coding is illegal!"""		3459436	0					
ANR	3459483	PrimaryExpression	"""ERROR: Stream::code(char *&s, int &len)'s _coding is illegal!"""		3459436	0					
ANR	3459484	BreakStatement	break ;	415:3:8343:8348	3459436	9	True				
ANR	3459485	ReturnStatement	return FALSE ;	418:1:8355:8367	3459436	1	True				
ANR	3459486	Identifier	FALSE		3459436	0					
ANR	3459487	ReturnType	int		3459436	1					
ANR	3459488	Identifier	Stream :: code		3459436	2					
ANR	3459489	ParameterList	"char * & s , int & len"		3459436	3					
ANR	3459490	Parameter	char * & s	403:14:8012:8019	3459436	0	True				
ANR	3459491	ParameterType	char * &		3459436	0					
ANR	3459492	Identifier	s		3459436	1					
ANR	3459493	Parameter	int & len	403:24:8022:8030	3459436	1	True				
ANR	3459494	ParameterType	int &		3459436	0					
ANR	3459495	Identifier	len		3459436	1					
ANR	3459496	CFGEntryNode	ENTRY		3459436		True				
ANR	3459497	CFGExitNode	EXIT		3459436		True				
ANR	3459498	Symbol	_coding		3459436						
ANR	3459499	Symbol	s		3459436						
ANR	3459500	Symbol	len		3459436						
ANR	3459501	Symbol	get		3459436						
ANR	3459502	Symbol	FALSE		3459436						
ANR	3459503	Symbol	put		3459436						
ANR	3459504	Function	Stream :: code_bytes_bool	422:0:8399:8522							
ANR	3459505	FunctionDef	"Stream :: code_bytes_bool (void * p , int l)"		3459504	0					
ANR	3459506	CompoundStatement		424:0:8444:8522	3459504	0					
ANR	3459507	IfStatement	"if ( code_bytes ( p , l ) < 0 )"		3459504	0					
ANR	3459508	Condition	"code_bytes ( p , l ) < 0"	425:5:8451:8472	3459504	0	True				
ANR	3459509	RelationalExpression	"code_bytes ( p , l ) < 0"		3459504	0		<			
ANR	3459510	CallExpression	"code_bytes ( p , l )"		3459504	0					
ANR	3459511	Callee	code_bytes		3459504	0					
ANR	3459512	Identifier	code_bytes		3459504	0					
ANR	3459513	ArgumentList	p		3459504	1					
ANR	3459514	Argument	p		3459504	0					
ANR	3459515	Identifier	p		3459504	0					
ANR	3459516	Argument	l		3459504	1					
ANR	3459517	Identifier	l		3459504	0					
ANR	3459518	PrimaryExpression	0		3459504	1					
ANR	3459519	CompoundStatement		2:30:31:31	3459504	1					
ANR	3459520	ReturnStatement	return FALSE ;	426:2:8480:8492	3459504	0	True				
ANR	3459521	Identifier	FALSE		3459504	0					
ANR	3459522	ElseStatement	else		3459504	0					
ANR	3459523	CompoundStatement		4:8:57:57	3459504	0					
ANR	3459524	ReturnStatement	return TRUE ;	428:2:8506:8517	3459504	0	True				
ANR	3459525	Identifier	TRUE		3459504	0					
ANR	3459526	ReturnType	int		3459504	1					
ANR	3459527	Identifier	Stream :: code_bytes_bool		3459504	2					
ANR	3459528	ParameterList	"void * p , int l"		3459504	3					
ANR	3459529	Parameter	void * p	423:24:8428:8434	3459504	0	True				
ANR	3459530	ParameterType	void *		3459504	0					
ANR	3459531	Identifier	p		3459504	1					
ANR	3459532	Parameter	int l	423:33:8437:8441	3459504	1	True				
ANR	3459533	ParameterType	int		3459504	0					
ANR	3459534	Identifier	l		3459504	1					
ANR	3459535	CFGEntryNode	ENTRY		3459504		True				
ANR	3459536	CFGExitNode	EXIT		3459504		True				
ANR	3459537	Symbol	p		3459504						
ANR	3459538	Symbol	TRUE		3459504						
ANR	3459539	Symbol	FALSE		3459504						
ANR	3459540	Symbol	l		3459504						
ANR	3459541	Symbol	code_bytes		3459504						
ANR	3459542	Function	Stream :: code_bytes	433:0:8526:8943							
ANR	3459543	FunctionDef	"Stream :: code_bytes (void * p , int l)"		3459542	0					
ANR	3459544	CompoundStatement		435:0:8566:8943	3459542	0					
ANR	3459545	SwitchStatement	switch ( _coding )		3459542	0					
ANR	3459546	Condition	_coding	436:8:8576:8582	3459542	0	True				
ANR	3459547	Identifier	_coding		3459542	0					
ANR	3459548	CompoundStatement		2:17:18:18	3459542	1					
ANR	3459549	Label	case stream_encode :	437:2:8589:8607	3459542	0	True				
ANR	3459550	Identifier	stream_encode		3459542	0					
ANR	3459551	ReturnStatement	"return put_bytes ( ( const void * ) p , l ) ;"	438:3:8612:8648	3459542	1	True				
ANR	3459552	CallExpression	"put_bytes ( ( const void * ) p , l )"		3459542	0					
ANR	3459553	Callee	put_bytes		3459542	0					
ANR	3459554	Identifier	put_bytes		3459542	0					
ANR	3459555	ArgumentList	( const void * ) p		3459542	1					
ANR	3459556	Argument	( const void * ) p		3459542	0					
ANR	3459557	CastExpression	( const void * ) p		3459542	0					
ANR	3459558	CastTarget	const void *		3459542	0					
ANR	3459559	Identifier	p		3459542	1					
ANR	3459560	Argument	l		3459542	1					
ANR	3459561	Identifier	l		3459542	0					
ANR	3459562	Label	case stream_decode :	439:2:8652:8670	3459542	2	True				
ANR	3459563	Identifier	stream_decode		3459542	0					
ANR	3459564	ReturnStatement	"return get_bytes ( p , l ) ;"	440:3:8675:8697	3459542	3	True				
ANR	3459565	CallExpression	"get_bytes ( p , l )"		3459542	0					
ANR	3459566	Callee	get_bytes		3459542	0					
ANR	3459567	Identifier	get_bytes		3459542	0					
ANR	3459568	ArgumentList	p		3459542	1					
ANR	3459569	Argument	p		3459542	0					
ANR	3459570	Identifier	p		3459542	0					
ANR	3459571	Argument	l		3459542	1					
ANR	3459572	Identifier	l		3459542	0					
ANR	3459573	Label	case stream_unknown :	441:2:8701:8720	3459542	4	True				
ANR	3459574	Identifier	stream_unknown		3459542	0					
ANR	3459575	ExpressionStatement	"EXCEPT ( ""ERROR: Stream::code(void *p, int l) has unknown direction!"" )"	442:3:8725:8793	3459542	5	True				
ANR	3459576	CallExpression	"EXCEPT ( ""ERROR: Stream::code(void *p, int l) has unknown direction!"" )"		3459542	0					
ANR	3459577	Callee	EXCEPT		3459542	0					
ANR	3459578	Identifier	EXCEPT		3459542	0					
ANR	3459579	ArgumentList	"""ERROR: Stream::code(void *p, int l) has unknown direction!"""		3459542	1					
ANR	3459580	Argument	"""ERROR: Stream::code(void *p, int l) has unknown direction!"""		3459542	0					
ANR	3459581	PrimaryExpression	"""ERROR: Stream::code(void *p, int l) has unknown direction!"""		3459542	0					
ANR	3459582	BreakStatement	break ;	443:3:8798:8803	3459542	6	True				
ANR	3459583	Label	default :	444:2:8807:8814	3459542	7	True				
ANR	3459584	Identifier	default		3459542	0					
ANR	3459585	ExpressionStatement	"EXCEPT ( ""ERROR: Stream::code(void *p, int l)'s _coding is illegal!"" )"	445:3:8819:8886	3459542	8	True				
ANR	3459586	CallExpression	"EXCEPT ( ""ERROR: Stream::code(void *p, int l)'s _coding is illegal!"" )"		3459542	0					
ANR	3459587	Callee	EXCEPT		3459542	0					
ANR	3459588	Identifier	EXCEPT		3459542	0					
ANR	3459589	ArgumentList	"""ERROR: Stream::code(void *p, int l)'s _coding is illegal!"""		3459542	1					
ANR	3459590	Argument	"""ERROR: Stream::code(void *p, int l)'s _coding is illegal!"""		3459542	0					
ANR	3459591	PrimaryExpression	"""ERROR: Stream::code(void *p, int l)'s _coding is illegal!"""		3459542	0					
ANR	3459592	BreakStatement	break ;	446:3:8891:8896	3459542	9	True				
ANR	3459593	ReturnStatement	return FALSE ;	449:1:8903:8915	3459542	1	True				
ANR	3459594	Identifier	FALSE		3459542	0					
ANR	3459595	ReturnType	int		3459542	1					
ANR	3459596	Identifier	Stream :: code_bytes		3459542	2					
ANR	3459597	ParameterList	"void * p , int l"		3459542	3					
ANR	3459598	Parameter	void * p	434:19:8550:8556	3459542	0	True				
ANR	3459599	ParameterType	void *		3459542	0					
ANR	3459600	Identifier	p		3459542	1					
ANR	3459601	Parameter	int l	434:28:8559:8563	3459542	1	True				
ANR	3459602	ParameterType	int		3459542	0					
ANR	3459603	Identifier	l		3459542	1					
ANR	3459604	CFGEntryNode	ENTRY		3459542		True				
ANR	3459605	CFGExitNode	EXIT		3459542		True				
ANR	3459606	Symbol	p		3459542						
ANR	3459607	Symbol	_coding		3459542						
ANR	3459608	Symbol	FALSE		3459542						
ANR	3459609	Symbol	l		3459542						
ANR	3459610	Symbol	put_bytes		3459542						
ANR	3459611	Symbol	get_bytes		3459542						
ANR	3459612	Function	Stream :: code	458:0:9029:9142							
ANR	3459613	FunctionDef	Stream :: code (PROC_ID & id)		3459612	0					
ANR	3459614	CompoundStatement		460:0:9060:9142	3459612	0					
ANR	3459615	ExpressionStatement	STREAM_ASSERT ( code ( id . cluster ) )	461:1:9063:9094	3459612	0	True				
ANR	3459616	CallExpression	STREAM_ASSERT ( code ( id . cluster ) )		3459612	0					
ANR	3459617	Callee	STREAM_ASSERT		3459612	0					
ANR	3459618	Identifier	STREAM_ASSERT		3459612	0					
ANR	3459619	ArgumentList	code ( id . cluster )		3459612	1					
ANR	3459620	Argument	code ( id . cluster )		3459612	0					
ANR	3459621	CallExpression	code ( id . cluster )		3459612	0					
ANR	3459622	Callee	code		3459612	0					
ANR	3459623	Identifier	code		3459612	0					
ANR	3459624	ArgumentList	id . cluster		3459612	1					
ANR	3459625	Argument	id . cluster		3459612	0					
ANR	3459626	MemberAccess	id . cluster		3459612	0					
ANR	3459627	Identifier	id		3459612	0					
ANR	3459628	Identifier	cluster		3459612	1					
ANR	3459629	ExpressionStatement	STREAM_ASSERT ( code ( id . proc ) )	462:1:9097:9125	3459612	1	True				
ANR	3459630	CallExpression	STREAM_ASSERT ( code ( id . proc ) )		3459612	0					
ANR	3459631	Callee	STREAM_ASSERT		3459612	0					
ANR	3459632	Identifier	STREAM_ASSERT		3459612	0					
ANR	3459633	ArgumentList	code ( id . proc )		3459612	1					
ANR	3459634	Argument	code ( id . proc )		3459612	0					
ANR	3459635	CallExpression	code ( id . proc )		3459612	0					
ANR	3459636	Callee	code		3459612	0					
ANR	3459637	Identifier	code		3459612	0					
ANR	3459638	ArgumentList	id . proc		3459612	1					
ANR	3459639	Argument	id . proc		3459612	0					
ANR	3459640	MemberAccess	id . proc		3459612	0					
ANR	3459641	Identifier	id		3459612	0					
ANR	3459642	Identifier	proc		3459612	1					
ANR	3459643	ReturnStatement	return TRUE ;	464:1:9129:9140	3459612	2	True				
ANR	3459644	Identifier	TRUE		3459612	0					
ANR	3459645	ReturnType	int		3459612	1					
ANR	3459646	Identifier	Stream :: code		3459612	2					
ANR	3459647	ParameterList	PROC_ID & id		3459612	3					
ANR	3459648	Parameter	PROC_ID & id	459:13:9047:9057	3459612	0	True				
ANR	3459649	ParameterType	PROC_ID &		3459612	0					
ANR	3459650	Identifier	id		3459612	1					
ANR	3459651	CFGEntryNode	ENTRY		3459612		True				
ANR	3459652	CFGExitNode	EXIT		3459612		True				
ANR	3459653	Symbol	code		3459612						
ANR	3459654	Symbol	id . proc		3459612						
ANR	3459655	Symbol	TRUE		3459612						
ANR	3459656	Symbol	id		3459612						
ANR	3459657	Symbol	id . cluster		3459612						
ANR	3459658	Function	Stream :: code	467:0:9145:9964							
ANR	3459659	FunctionDef	Stream :: code (STARTUP_INFO & start)		3459658	0					
ANR	3459660	CompoundStatement		469:0:9184:9964	3459658	0					
ANR	3459661	ExpressionStatement	STREAM_ASSERT ( code ( start . version_num ) )	470:1:9187:9225	3459658	0	True				
ANR	3459662	CallExpression	STREAM_ASSERT ( code ( start . version_num ) )		3459658	0					
ANR	3459663	Callee	STREAM_ASSERT		3459658	0					
ANR	3459664	Identifier	STREAM_ASSERT		3459658	0					
ANR	3459665	ArgumentList	code ( start . version_num )		3459658	1					
ANR	3459666	Argument	code ( start . version_num )		3459658	0					
ANR	3459667	CallExpression	code ( start . version_num )		3459658	0					
ANR	3459668	Callee	code		3459658	0					
ANR	3459669	Identifier	code		3459658	0					
ANR	3459670	ArgumentList	start . version_num		3459658	1					
ANR	3459671	Argument	start . version_num		3459658	0					
ANR	3459672	MemberAccess	start . version_num		3459658	0					
ANR	3459673	Identifier	start		3459658	0					
ANR	3459674	Identifier	version_num		3459658	1					
ANR	3459675	ExpressionStatement	STREAM_ASSERT ( code ( start . cluster ) )	471:1:9228:9262	3459658	1	True				
ANR	3459676	CallExpression	STREAM_ASSERT ( code ( start . cluster ) )		3459658	0					
ANR	3459677	Callee	STREAM_ASSERT		3459658	0					
ANR	3459678	Identifier	STREAM_ASSERT		3459658	0					
ANR	3459679	ArgumentList	code ( start . cluster )		3459658	1					
ANR	3459680	Argument	code ( start . cluster )		3459658	0					
ANR	3459681	CallExpression	code ( start . cluster )		3459658	0					
ANR	3459682	Callee	code		3459658	0					
ANR	3459683	Identifier	code		3459658	0					
ANR	3459684	ArgumentList	start . cluster		3459658	1					
ANR	3459685	Argument	start . cluster		3459658	0					
ANR	3459686	MemberAccess	start . cluster		3459658	0					
ANR	3459687	Identifier	start		3459658	0					
ANR	3459688	Identifier	cluster		3459658	1					
ANR	3459689	ExpressionStatement	STREAM_ASSERT ( code ( start . proc ) )	472:1:9265:9296	3459658	2	True				
ANR	3459690	CallExpression	STREAM_ASSERT ( code ( start . proc ) )		3459658	0					
ANR	3459691	Callee	STREAM_ASSERT		3459658	0					
ANR	3459692	Identifier	STREAM_ASSERT		3459658	0					
ANR	3459693	ArgumentList	code ( start . proc )		3459658	1					
ANR	3459694	Argument	code ( start . proc )		3459658	0					
ANR	3459695	CallExpression	code ( start . proc )		3459658	0					
ANR	3459696	Callee	code		3459658	0					
ANR	3459697	Identifier	code		3459658	0					
ANR	3459698	ArgumentList	start . proc		3459658	1					
ANR	3459699	Argument	start . proc		3459658	0					
ANR	3459700	MemberAccess	start . proc		3459658	0					
ANR	3459701	Identifier	start		3459658	0					
ANR	3459702	Identifier	proc		3459658	1					
ANR	3459703	ExpressionStatement	STREAM_ASSERT ( code ( start . job_class ) )	473:1:9299:9335	3459658	3	True				
ANR	3459704	CallExpression	STREAM_ASSERT ( code ( start . job_class ) )		3459658	0					
ANR	3459705	Callee	STREAM_ASSERT		3459658	0					
ANR	3459706	Identifier	STREAM_ASSERT		3459658	0					
ANR	3459707	ArgumentList	code ( start . job_class )		3459658	1					
ANR	3459708	Argument	code ( start . job_class )		3459658	0					
ANR	3459709	CallExpression	code ( start . job_class )		3459658	0					
ANR	3459710	Callee	code		3459658	0					
ANR	3459711	Identifier	code		3459658	0					
ANR	3459712	ArgumentList	start . job_class		3459658	1					
ANR	3459713	Argument	start . job_class		3459658	0					
ANR	3459714	MemberAccess	start . job_class		3459658	0					
ANR	3459715	Identifier	start		3459658	0					
ANR	3459716	Identifier	job_class		3459658	1					
ANR	3459717	ExpressionStatement	STREAM_ASSERT ( code ( start . uid ) )	475:1:9394:9424	3459658	4	True				
ANR	3459718	CallExpression	STREAM_ASSERT ( code ( start . uid ) )		3459658	0					
ANR	3459719	Callee	STREAM_ASSERT		3459658	0					
ANR	3459720	Identifier	STREAM_ASSERT		3459658	0					
ANR	3459721	ArgumentList	code ( start . uid )		3459658	1					
ANR	3459722	Argument	code ( start . uid )		3459658	0					
ANR	3459723	CallExpression	code ( start . uid )		3459658	0					
ANR	3459724	Callee	code		3459658	0					
ANR	3459725	Identifier	code		3459658	0					
ANR	3459726	ArgumentList	start . uid		3459658	1					
ANR	3459727	Argument	start . uid		3459658	0					
ANR	3459728	MemberAccess	start . uid		3459658	0					
ANR	3459729	Identifier	start		3459658	0					
ANR	3459730	Identifier	uid		3459658	1					
ANR	3459731	ExpressionStatement	STREAM_ASSERT ( code ( start . gid ) )	476:1:9427:9457	3459658	5	True				
ANR	3459732	CallExpression	STREAM_ASSERT ( code ( start . gid ) )		3459658	0					
ANR	3459733	Callee	STREAM_ASSERT		3459658	0					
ANR	3459734	Identifier	STREAM_ASSERT		3459658	0					
ANR	3459735	ArgumentList	code ( start . gid )		3459658	1					
ANR	3459736	Argument	code ( start . gid )		3459658	0					
ANR	3459737	CallExpression	code ( start . gid )		3459658	0					
ANR	3459738	Callee	code		3459658	0					
ANR	3459739	Identifier	code		3459658	0					
ANR	3459740	ArgumentList	start . gid		3459658	1					
ANR	3459741	Argument	start . gid		3459658	0					
ANR	3459742	MemberAccess	start . gid		3459658	0					
ANR	3459743	Identifier	start		3459658	0					
ANR	3459744	Identifier	gid		3459658	1					
ANR	3459745	ExpressionStatement	STREAM_ASSERT ( code ( start . virt_pid ) )	477:1:9460:9495	3459658	6	True				
ANR	3459746	CallExpression	STREAM_ASSERT ( code ( start . virt_pid ) )		3459658	0					
ANR	3459747	Callee	STREAM_ASSERT		3459658	0					
ANR	3459748	Identifier	STREAM_ASSERT		3459658	0					
ANR	3459749	ArgumentList	code ( start . virt_pid )		3459658	1					
ANR	3459750	Argument	code ( start . virt_pid )		3459658	0					
ANR	3459751	CallExpression	code ( start . virt_pid )		3459658	0					
ANR	3459752	Callee	code		3459658	0					
ANR	3459753	Identifier	code		3459658	0					
ANR	3459754	ArgumentList	start . virt_pid		3459658	1					
ANR	3459755	Argument	start . virt_pid		3459658	0					
ANR	3459756	MemberAccess	start . virt_pid		3459658	0					
ANR	3459757	Identifier	start		3459658	0					
ANR	3459758	Identifier	virt_pid		3459658	1					
ANR	3459759	IdentifierDeclStatement	condor_signal_t temp = ( condor_signal_t ) start . soft_kill_sig ;	478:1:9498:9557	3459658	7	True				
ANR	3459760	IdentifierDecl	temp = ( condor_signal_t ) start . soft_kill_sig		3459658	0					
ANR	3459761	IdentifierDeclType	condor_signal_t		3459658	0					
ANR	3459762	Identifier	temp		3459658	1					
ANR	3459763	AssignmentExpression	temp = ( condor_signal_t ) start . soft_kill_sig		3459658	2		=			
ANR	3459764	Identifier	temp		3459658	0					
ANR	3459765	CastExpression	( condor_signal_t ) start . soft_kill_sig		3459658	1					
ANR	3459766	CastTarget	condor_signal_t		3459658	0					
ANR	3459767	MemberAccess	start . soft_kill_sig		3459658	1					
ANR	3459768	Identifier	start		3459658	0					
ANR	3459769	Identifier	soft_kill_sig		3459658	1					
ANR	3459770	ExpressionStatement	STREAM_ASSERT ( code ( temp ) )	479:1:9560:9585	3459658	8	True				
ANR	3459771	CallExpression	STREAM_ASSERT ( code ( temp ) )		3459658	0					
ANR	3459772	Callee	STREAM_ASSERT		3459658	0					
ANR	3459773	Identifier	STREAM_ASSERT		3459658	0					
ANR	3459774	ArgumentList	code ( temp )		3459658	1					
ANR	3459775	Argument	code ( temp )		3459658	0					
ANR	3459776	CallExpression	code ( temp )		3459658	0					
ANR	3459777	Callee	code		3459658	0					
ANR	3459778	Identifier	code		3459658	0					
ANR	3459779	ArgumentList	temp		3459658	1					
ANR	3459780	Argument	temp		3459658	0					
ANR	3459781	Identifier	temp		3459658	0					
ANR	3459782	ExpressionStatement	start . soft_kill_sig = ( int ) temp	480:1:9588:9619	3459658	9	True				
ANR	3459783	AssignmentExpression	start . soft_kill_sig = ( int ) temp		3459658	0		=			
ANR	3459784	MemberAccess	start . soft_kill_sig		3459658	0					
ANR	3459785	Identifier	start		3459658	0					
ANR	3459786	Identifier	soft_kill_sig		3459658	1					
ANR	3459787	CastExpression	( int ) temp		3459658	1					
ANR	3459788	CastTarget	int		3459658	0					
ANR	3459789	Identifier	temp		3459658	1					
ANR	3459790	ExpressionStatement	STREAM_ASSERT ( code ( start . cmd ) )	482:1:9629:9659	3459658	10	True				
ANR	3459791	CallExpression	STREAM_ASSERT ( code ( start . cmd ) )		3459658	0					
ANR	3459792	Callee	STREAM_ASSERT		3459658	0					
ANR	3459793	Identifier	STREAM_ASSERT		3459658	0					
ANR	3459794	ArgumentList	code ( start . cmd )		3459658	1					
ANR	3459795	Argument	code ( start . cmd )		3459658	0					
ANR	3459796	CallExpression	code ( start . cmd )		3459658	0					
ANR	3459797	Callee	code		3459658	0					
ANR	3459798	Identifier	code		3459658	0					
ANR	3459799	ArgumentList	start . cmd		3459658	1					
ANR	3459800	Argument	start . cmd		3459658	0					
ANR	3459801	MemberAccess	start . cmd		3459658	0					
ANR	3459802	Identifier	start		3459658	0					
ANR	3459803	Identifier	cmd		3459658	1					
ANR	3459804	ExpressionStatement	STREAM_ASSERT ( code ( start . args_v1or2 ) )	483:1:9662:9699	3459658	11	True				
ANR	3459805	CallExpression	STREAM_ASSERT ( code ( start . args_v1or2 ) )		3459658	0					
ANR	3459806	Callee	STREAM_ASSERT		3459658	0					
ANR	3459807	Identifier	STREAM_ASSERT		3459658	0					
ANR	3459808	ArgumentList	code ( start . args_v1or2 )		3459658	1					
ANR	3459809	Argument	code ( start . args_v1or2 )		3459658	0					
ANR	3459810	CallExpression	code ( start . args_v1or2 )		3459658	0					
ANR	3459811	Callee	code		3459658	0					
ANR	3459812	Identifier	code		3459658	0					
ANR	3459813	ArgumentList	start . args_v1or2		3459658	1					
ANR	3459814	Argument	start . args_v1or2		3459658	0					
ANR	3459815	MemberAccess	start . args_v1or2		3459658	0					
ANR	3459816	Identifier	start		3459658	0					
ANR	3459817	Identifier	args_v1or2		3459658	1					
ANR	3459818	ExpressionStatement	STREAM_ASSERT ( code ( start . env_v1or2 ) )	484:1:9702:9738	3459658	12	True				
ANR	3459819	CallExpression	STREAM_ASSERT ( code ( start . env_v1or2 ) )		3459658	0					
ANR	3459820	Callee	STREAM_ASSERT		3459658	0					
ANR	3459821	Identifier	STREAM_ASSERT		3459658	0					
ANR	3459822	ArgumentList	code ( start . env_v1or2 )		3459658	1					
ANR	3459823	Argument	code ( start . env_v1or2 )		3459658	0					
ANR	3459824	CallExpression	code ( start . env_v1or2 )		3459658	0					
ANR	3459825	Callee	code		3459658	0					
ANR	3459826	Identifier	code		3459658	0					
ANR	3459827	ArgumentList	start . env_v1or2		3459658	1					
ANR	3459828	Argument	start . env_v1or2		3459658	0					
ANR	3459829	MemberAccess	start . env_v1or2		3459658	0					
ANR	3459830	Identifier	start		3459658	0					
ANR	3459831	Identifier	env_v1or2		3459658	1					
ANR	3459832	ExpressionStatement	STREAM_ASSERT ( code ( start . iwd ) )	485:1:9741:9771	3459658	13	True				
ANR	3459833	CallExpression	STREAM_ASSERT ( code ( start . iwd ) )		3459658	0					
ANR	3459834	Callee	STREAM_ASSERT		3459658	0					
ANR	3459835	Identifier	STREAM_ASSERT		3459658	0					
ANR	3459836	ArgumentList	code ( start . iwd )		3459658	1					
ANR	3459837	Argument	code ( start . iwd )		3459658	0					
ANR	3459838	CallExpression	code ( start . iwd )		3459658	0					
ANR	3459839	Callee	code		3459658	0					
ANR	3459840	Identifier	code		3459658	0					
ANR	3459841	ArgumentList	start . iwd		3459658	1					
ANR	3459842	Argument	start . iwd		3459658	0					
ANR	3459843	MemberAccess	start . iwd		3459658	0					
ANR	3459844	Identifier	start		3459658	0					
ANR	3459845	Identifier	iwd		3459658	1					
ANR	3459846	ExpressionStatement	STREAM_ASSERT ( code ( start . ckpt_wanted ) )	486:1:9774:9812	3459658	14	True				
ANR	3459847	CallExpression	STREAM_ASSERT ( code ( start . ckpt_wanted ) )		3459658	0					
ANR	3459848	Callee	STREAM_ASSERT		3459658	0					
ANR	3459849	Identifier	STREAM_ASSERT		3459658	0					
ANR	3459850	ArgumentList	code ( start . ckpt_wanted )		3459658	1					
ANR	3459851	Argument	code ( start . ckpt_wanted )		3459658	0					
ANR	3459852	CallExpression	code ( start . ckpt_wanted )		3459658	0					
ANR	3459853	Callee	code		3459658	0					
ANR	3459854	Identifier	code		3459658	0					
ANR	3459855	ArgumentList	start . ckpt_wanted		3459658	1					
ANR	3459856	Argument	start . ckpt_wanted		3459658	0					
ANR	3459857	MemberAccess	start . ckpt_wanted		3459658	0					
ANR	3459858	Identifier	start		3459658	0					
ANR	3459859	Identifier	ckpt_wanted		3459658	1					
ANR	3459860	ExpressionStatement	STREAM_ASSERT ( code ( start . is_restart ) )	487:1:9815:9852	3459658	15	True				
ANR	3459861	CallExpression	STREAM_ASSERT ( code ( start . is_restart ) )		3459658	0					
ANR	3459862	Callee	STREAM_ASSERT		3459658	0					
ANR	3459863	Identifier	STREAM_ASSERT		3459658	0					
ANR	3459864	ArgumentList	code ( start . is_restart )		3459658	1					
ANR	3459865	Argument	code ( start . is_restart )		3459658	0					
ANR	3459866	CallExpression	code ( start . is_restart )		3459658	0					
ANR	3459867	Callee	code		3459658	0					
ANR	3459868	Identifier	code		3459658	0					
ANR	3459869	ArgumentList	start . is_restart		3459658	1					
ANR	3459870	Argument	start . is_restart		3459658	0					
ANR	3459871	MemberAccess	start . is_restart		3459658	0					
ANR	3459872	Identifier	start		3459658	0					
ANR	3459873	Identifier	is_restart		3459658	1					
ANR	3459874	ExpressionStatement	STREAM_ASSERT ( code ( start . coredump_limit_exists ) )	488:1:9855:9903	3459658	16	True				
ANR	3459875	CallExpression	STREAM_ASSERT ( code ( start . coredump_limit_exists ) )		3459658	0					
ANR	3459876	Callee	STREAM_ASSERT		3459658	0					
ANR	3459877	Identifier	STREAM_ASSERT		3459658	0					
ANR	3459878	ArgumentList	code ( start . coredump_limit_exists )		3459658	1					
ANR	3459879	Argument	code ( start . coredump_limit_exists )		3459658	0					
ANR	3459880	CallExpression	code ( start . coredump_limit_exists )		3459658	0					
ANR	3459881	Callee	code		3459658	0					
ANR	3459882	Identifier	code		3459658	0					
ANR	3459883	ArgumentList	start . coredump_limit_exists		3459658	1					
ANR	3459884	Argument	start . coredump_limit_exists		3459658	0					
ANR	3459885	MemberAccess	start . coredump_limit_exists		3459658	0					
ANR	3459886	Identifier	start		3459658	0					
ANR	3459887	Identifier	coredump_limit_exists		3459658	1					
ANR	3459888	ExpressionStatement	STREAM_ASSERT ( code ( start . coredump_limit ) )	489:1:9906:9947	3459658	17	True				
ANR	3459889	CallExpression	STREAM_ASSERT ( code ( start . coredump_limit ) )		3459658	0					
ANR	3459890	Callee	STREAM_ASSERT		3459658	0					
ANR	3459891	Identifier	STREAM_ASSERT		3459658	0					
ANR	3459892	ArgumentList	code ( start . coredump_limit )		3459658	1					
ANR	3459893	Argument	code ( start . coredump_limit )		3459658	0					
ANR	3459894	CallExpression	code ( start . coredump_limit )		3459658	0					
ANR	3459895	Callee	code		3459658	0					
ANR	3459896	Identifier	code		3459658	0					
ANR	3459897	ArgumentList	start . coredump_limit		3459658	1					
ANR	3459898	Argument	start . coredump_limit		3459658	0					
ANR	3459899	MemberAccess	start . coredump_limit		3459658	0					
ANR	3459900	Identifier	start		3459658	0					
ANR	3459901	Identifier	coredump_limit		3459658	1					
ANR	3459902	ReturnStatement	return TRUE ;	491:1:9951:9962	3459658	18	True				
ANR	3459903	Identifier	TRUE		3459658	0					
ANR	3459904	ReturnType	int		3459658	1					
ANR	3459905	Identifier	Stream :: code		3459658	2					
ANR	3459906	ParameterList	STARTUP_INFO & start		3459658	3					
ANR	3459907	Parameter	STARTUP_INFO & start	468:13:9163:9181	3459658	0	True				
ANR	3459908	ParameterType	STARTUP_INFO &		3459658	0					
ANR	3459909	Identifier	start		3459658	1					
ANR	3459910	CFGEntryNode	ENTRY		3459658		True				
ANR	3459911	CFGExitNode	EXIT		3459658		True				
ANR	3459912	Symbol	start . coredump_limit_exists		3459658						
ANR	3459913	Symbol	start . args_v1or2		3459658						
ANR	3459914	Symbol	temp		3459658						
ANR	3459915	Symbol	code		3459658						
ANR	3459916	Symbol	start . job_class		3459658						
ANR	3459917	Symbol	start . soft_kill_sig		3459658						
ANR	3459918	Symbol	start . cluster		3459658						
ANR	3459919	Symbol	start . proc		3459658						
ANR	3459920	Symbol	start		3459658						
ANR	3459921	Symbol	start . env_v1or2		3459658						
ANR	3459922	Symbol	TRUE		3459658						
ANR	3459923	Symbol	start . virt_pid		3459658						
ANR	3459924	Symbol	start . gid		3459658						
ANR	3459925	Symbol	start . ckpt_wanted		3459658						
ANR	3459926	Symbol	start . cmd		3459658						
ANR	3459927	Symbol	start . coredump_limit		3459658						
ANR	3459928	Symbol	start . iwd		3459658						
ANR	3459929	Symbol	start . version_num		3459658						
ANR	3459930	Symbol	start . uid		3459658						
ANR	3459931	Symbol	start . is_restart		3459658						
ANR	3459932	Function	Stream :: code	494:0:9967:10074							
ANR	3459933	FunctionDef	Stream :: code (PORTS & p)		3459932	0					
ANR	3459934	CompoundStatement		496:0:9995:10074	3459932	0					
ANR	3459935	ExpressionStatement	STREAM_ASSERT ( code ( p . port1 ) )	497:1:9998:10026	3459932	0	True				
ANR	3459936	CallExpression	STREAM_ASSERT ( code ( p . port1 ) )		3459932	0					
ANR	3459937	Callee	STREAM_ASSERT		3459932	0					
ANR	3459938	Identifier	STREAM_ASSERT		3459932	0					
ANR	3459939	ArgumentList	code ( p . port1 )		3459932	1					
ANR	3459940	Argument	code ( p . port1 )		3459932	0					
ANR	3459941	CallExpression	code ( p . port1 )		3459932	0					
ANR	3459942	Callee	code		3459932	0					
ANR	3459943	Identifier	code		3459932	0					
ANR	3459944	ArgumentList	p . port1		3459932	1					
ANR	3459945	Argument	p . port1		3459932	0					
ANR	3459946	MemberAccess	p . port1		3459932	0					
ANR	3459947	Identifier	p		3459932	0					
ANR	3459948	Identifier	port1		3459932	1					
ANR	3459949	ExpressionStatement	STREAM_ASSERT ( code ( p . port2 ) )	498:1:10029:10057	3459932	1	True				
ANR	3459950	CallExpression	STREAM_ASSERT ( code ( p . port2 ) )		3459932	0					
ANR	3459951	Callee	STREAM_ASSERT		3459932	0					
ANR	3459952	Identifier	STREAM_ASSERT		3459932	0					
ANR	3459953	ArgumentList	code ( p . port2 )		3459932	1					
ANR	3459954	Argument	code ( p . port2 )		3459932	0					
ANR	3459955	CallExpression	code ( p . port2 )		3459932	0					
ANR	3459956	Callee	code		3459932	0					
ANR	3459957	Identifier	code		3459932	0					
ANR	3459958	ArgumentList	p . port2		3459932	1					
ANR	3459959	Argument	p . port2		3459932	0					
ANR	3459960	MemberAccess	p . port2		3459932	0					
ANR	3459961	Identifier	p		3459932	0					
ANR	3459962	Identifier	port2		3459932	1					
ANR	3459963	ReturnStatement	return TRUE ;	500:1:10061:10072	3459932	2	True				
ANR	3459964	Identifier	TRUE		3459932	0					
ANR	3459965	ReturnType	int		3459932	1					
ANR	3459966	Identifier	Stream :: code		3459932	2					
ANR	3459967	ParameterList	PORTS & p		3459932	3					
ANR	3459968	Parameter	PORTS & p	495:13:9985:9992	3459932	0	True				
ANR	3459969	ParameterType	PORTS &		3459932	0					
ANR	3459970	Identifier	p		3459932	1					
ANR	3459971	CFGEntryNode	ENTRY		3459932		True				
ANR	3459972	CFGExitNode	EXIT		3459932		True				
ANR	3459973	Symbol	p		3459932						
ANR	3459974	Symbol	p . port1		3459932						
ANR	3459975	Symbol	p . port2		3459932						
ANR	3459976	Symbol	code		3459932						
ANR	3459977	Symbol	TRUE		3459932						
ANR	3459978	Function	Stream :: code	503:0:10077:10618							
ANR	3459979	FunctionDef	Stream :: code (StartdRec & rec)		3459978	0					
ANR	3459980	CompoundStatement		505:0:10110:10618	3459978	0					
ANR	3459981	IfStatement	if ( ! code ( rec . version_num ) )		3459978	0					
ANR	3459982	Condition	! code ( rec . version_num )	506:5:10117:10138	3459978	0	True				
ANR	3459983	UnaryOperationExpression	! code ( rec . version_num )		3459978	0					
ANR	3459984	UnaryOperator	!		3459978	0					
ANR	3459985	CallExpression	code ( rec . version_num )		3459978	1					
ANR	3459986	Callee	code		3459978	0					
ANR	3459987	Identifier	code		3459978	0					
ANR	3459988	ArgumentList	rec . version_num		3459978	1					
ANR	3459989	Argument	rec . version_num		3459978	0					
ANR	3459990	MemberAccess	rec . version_num		3459978	0					
ANR	3459991	Identifier	rec		3459978	0					
ANR	3459992	Identifier	version_num		3459978	1					
ANR	3459993	ReturnStatement	return FALSE ;	506:30:10142:10154	3459978	1	True				
ANR	3459994	Identifier	FALSE		3459978	0					
ANR	3459995	IfStatement	if ( rec . version_num >= 0 )		3459978	1					
ANR	3459996	Condition	rec . version_num >= 0	508:5:10162:10180	3459978	0	True				
ANR	3459997	RelationalExpression	rec . version_num >= 0		3459978	0		>=			
ANR	3459998	MemberAccess	rec . version_num		3459978	0					
ANR	3459999	Identifier	rec		3459978	0					
ANR	3460000	Identifier	version_num		3459978	1					
ANR	3460001	PrimaryExpression	0		3459978	1					
ANR	3460002	CompoundStatement		5:1:74:74	3459978	1					
ANR	3460003	ExpressionStatement	rec . ports . port1 = rec . version_num	512:2:10283:10316	3459978	0	True				
ANR	3460004	AssignmentExpression	rec . ports . port1 = rec . version_num		3459978	0		=			
ANR	3460005	MemberAccess	rec . ports . port1		3459978	0					
ANR	3460006	MemberAccess	rec . ports		3459978	0					
ANR	3460007	Identifier	rec		3459978	0					
ANR	3460008	Identifier	ports		3459978	1					
ANR	3460009	Identifier	port1		3459978	1					
ANR	3460010	MemberAccess	rec . version_num		3459978	1					
ANR	3460011	Identifier	rec		3459978	0					
ANR	3460012	Identifier	version_num		3459978	1					
ANR	3460013	IfStatement	if ( ! code ( rec . ports . port2 ) )		3459978	1					
ANR	3460014	Condition	! code ( rec . ports . port2 )	513:7:10325:10346	3459978	0	True				
ANR	3460015	UnaryOperationExpression	! code ( rec . ports . port2 )		3459978	0					
ANR	3460016	UnaryOperator	!		3459978	0					
ANR	3460017	CallExpression	code ( rec . ports . port2 )		3459978	1					
ANR	3460018	Callee	code		3459978	0					
ANR	3460019	Identifier	code		3459978	0					
ANR	3460020	ArgumentList	rec . ports . port2		3459978	1					
ANR	3460021	Argument	rec . ports . port2		3459978	0					
ANR	3460022	MemberAccess	rec . ports . port2		3459978	0					
ANR	3460023	MemberAccess	rec . ports		3459978	0					
ANR	3460024	Identifier	rec		3459978	0					
ANR	3460025	Identifier	ports		3459978	1					
ANR	3460026	Identifier	port2		3459978	1					
ANR	3460027	ReturnStatement	return FALSE ;	513:32:10350:10362	3459978	1	True				
ANR	3460028	Identifier	FALSE		3459978	0					
ANR	3460029	ReturnStatement	return TRUE ;	514:2:10366:10377	3459978	2	True				
ANR	3460030	Identifier	TRUE		3459978	0					
ANR	3460031	IfStatement	if ( ! code ( rec . ports ) )		3459978	2					
ANR	3460032	Condition	! code ( rec . ports )	516:5:10387:10402	3459978	0	True				
ANR	3460033	UnaryOperationExpression	! code ( rec . ports )		3459978	0					
ANR	3460034	UnaryOperator	!		3459978	0					
ANR	3460035	CallExpression	code ( rec . ports )		3459978	1					
ANR	3460036	Callee	code		3459978	0					
ANR	3460037	Identifier	code		3459978	0					
ANR	3460038	ArgumentList	rec . ports		3459978	1					
ANR	3460039	Argument	rec . ports		3459978	0					
ANR	3460040	MemberAccess	rec . ports		3459978	0					
ANR	3460041	Identifier	rec		3459978	0					
ANR	3460042	Identifier	ports		3459978	1					
ANR	3460043	ReturnStatement	return FALSE ;	516:24:10406:10418	3459978	1	True				
ANR	3460044	Identifier	FALSE		3459978	0					
ANR	3460045	IfStatement	if ( ! code ( rec . ip_addr ) )		3459978	3					
ANR	3460046	Condition	! code ( rec . ip_addr )	517:5:10425:10442	3459978	0	True				
ANR	3460047	UnaryOperationExpression	! code ( rec . ip_addr )		3459978	0					
ANR	3460048	UnaryOperator	!		3459978	0					
ANR	3460049	CallExpression	code ( rec . ip_addr )		3459978	1					
ANR	3460050	Callee	code		3459978	0					
ANR	3460051	Identifier	code		3459978	0					
ANR	3460052	ArgumentList	rec . ip_addr		3459978	1					
ANR	3460053	Argument	rec . ip_addr		3459978	0					
ANR	3460054	MemberAccess	rec . ip_addr		3459978	0					
ANR	3460055	Identifier	rec		3459978	0					
ANR	3460056	Identifier	ip_addr		3459978	1					
ANR	3460057	ReturnStatement	return FALSE ;	517:26:10446:10458	3459978	1	True				
ANR	3460058	Identifier	FALSE		3459978	0					
ANR	3460059	IfStatement	if ( is_encode ( ) )		3459978	4					
ANR	3460060	Condition	is_encode ( )	519:5:10466:10476	3459978	0	True				
ANR	3460061	CallExpression	is_encode ( )		3459978	0					
ANR	3460062	Callee	is_encode		3459978	0					
ANR	3460063	Identifier	is_encode		3459978	0					
ANR	3460064	ArgumentList			3459978	1					
ANR	3460065	CompoundStatement		15:19:369:369	3459978	1					
ANR	3460066	IfStatement	if ( ! code ( rec . server_name ) )		3459978	0					
ANR	3460067	Condition	! code ( rec . server_name )	520:6:10488:10509	3459978	0	True				
ANR	3460068	UnaryOperationExpression	! code ( rec . server_name )		3459978	0					
ANR	3460069	UnaryOperator	!		3459978	0					
ANR	3460070	CallExpression	code ( rec . server_name )		3459978	1					
ANR	3460071	Callee	code		3459978	0					
ANR	3460072	Identifier	code		3459978	0					
ANR	3460073	ArgumentList	rec . server_name		3459978	1					
ANR	3460074	Argument	rec . server_name		3459978	0					
ANR	3460075	MemberAccess	rec . server_name		3459978	0					
ANR	3460076	Identifier	rec		3459978	0					
ANR	3460077	Identifier	server_name		3459978	1					
ANR	3460078	ReturnStatement	return FALSE ;	520:31:10513:10525	3459978	1	True				
ANR	3460079	Identifier	FALSE		3459978	0					
ANR	3460080	ElseStatement	else		3459978	0					
ANR	3460081	IfStatement	if ( is_decode ( ) )		3459978	0					
ANR	3460082	Condition	is_decode ( )	521:13:10540:10550	3459978	0	True				
ANR	3460083	CallExpression	is_decode ( )		3459978	0					
ANR	3460084	Callee	is_decode		3459978	0					
ANR	3460085	Identifier	is_decode		3459978	0					
ANR	3460086	ArgumentList			3459978	1					
ANR	3460087	CompoundStatement		17:27:443:443	3459978	1					
ANR	3460088	IfStatement	if ( ! code ( rec . server_name ) )		3459978	0					
ANR	3460089	Condition	! code ( rec . server_name )	522:6:10562:10583	3459978	0	True				
ANR	3460090	UnaryOperationExpression	! code ( rec . server_name )		3459978	0					
ANR	3460091	UnaryOperator	!		3459978	0					
ANR	3460092	CallExpression	code ( rec . server_name )		3459978	1					
ANR	3460093	Callee	code		3459978	0					
ANR	3460094	Identifier	code		3459978	0					
ANR	3460095	ArgumentList	rec . server_name		3459978	1					
ANR	3460096	Argument	rec . server_name		3459978	0					
ANR	3460097	MemberAccess	rec . server_name		3459978	0					
ANR	3460098	Identifier	rec		3459978	0					
ANR	3460099	Identifier	server_name		3459978	1					
ANR	3460100	ReturnStatement	return FALSE ;	522:31:10587:10599	3459978	1	True				
ANR	3460101	Identifier	FALSE		3459978	0					
ANR	3460102	ReturnStatement	return TRUE ;	524:1:10605:10616	3459978	5	True				
ANR	3460103	Identifier	TRUE		3459978	0					
ANR	3460104	ReturnType	int		3459978	1					
ANR	3460105	Identifier	Stream :: code		3459978	2					
ANR	3460106	ParameterList	StartdRec & rec		3459978	3					
ANR	3460107	Parameter	StartdRec & rec	504:13:10094:10107	3459978	0	True				
ANR	3460108	ParameterType	StartdRec &		3459978	0					
ANR	3460109	Identifier	rec		3459978	1					
ANR	3460110	CFGEntryNode	ENTRY		3459978		True				
ANR	3460111	CFGExitNode	EXIT		3459978		True				
ANR	3460112	Symbol	rec		3459978						
ANR	3460113	Symbol	rec . version_num		3459978						
ANR	3460114	Symbol	rec . ip_addr		3459978						
ANR	3460115	Symbol	code		3459978						
ANR	3460116	Symbol	rec . ports		3459978						
ANR	3460117	Symbol	is_encode		3459978						
ANR	3460118	Symbol	is_decode		3459978						
ANR	3460119	Symbol	TRUE		3459978						
ANR	3460120	Symbol	FALSE		3459978						
ANR	3460121	Symbol	rec . ports . port1		3459978						
ANR	3460122	Symbol	rec . ports . port2		3459978						
ANR	3460123	Symbol	rec . server_name		3459978						
ANR	3460124	Function	Stream :: code	528:0:10622:10908							
ANR	3460125	FunctionDef	Stream :: code (open_flags_t & flags)		3460124	0					
ANR	3460126	CompoundStatement		530:0:10661:10908	3460124	0					
ANR	3460127	IdentifierDeclStatement	"int real_flags , rval ;"	531:1:10664:10684	3460124	0	True				
ANR	3460128	IdentifierDecl	real_flags		3460124	0					
ANR	3460129	IdentifierDeclType	int		3460124	0					
ANR	3460130	Identifier	real_flags		3460124	1					
ANR	3460131	IdentifierDecl	rval		3460124	1					
ANR	3460132	IdentifierDeclType	int		3460124	0					
ANR	3460133	Identifier	rval		3460124	1					
ANR	3460134	IfStatement	if ( _coding == stream_encode )		3460124	1					
ANR	3460135	Condition	_coding == stream_encode	533:5:10692:10715	3460124	0	True				
ANR	3460136	EqualityExpression	_coding == stream_encode		3460124	0		==			
ANR	3460137	Identifier	_coding		3460124	0					
ANR	3460138	Identifier	stream_encode		3460124	1					
ANR	3460139	CompoundStatement		4:31:56:56	3460124	1					
ANR	3460140	ExpressionStatement	real_flags = open_flags_encode ( ( int ) flags )	534:2:10722:10764	3460124	0	True				
ANR	3460141	AssignmentExpression	real_flags = open_flags_encode ( ( int ) flags )		3460124	0		=			
ANR	3460142	Identifier	real_flags		3460124	0					
ANR	3460143	CallExpression	open_flags_encode ( ( int ) flags )		3460124	1					
ANR	3460144	Callee	open_flags_encode		3460124	0					
ANR	3460145	Identifier	open_flags_encode		3460124	0					
ANR	3460146	ArgumentList	( int ) flags		3460124	1					
ANR	3460147	Argument	( int ) flags		3460124	0					
ANR	3460148	CastExpression	( int ) flags		3460124	0					
ANR	3460149	CastTarget	int		3460124	0					
ANR	3460150	Identifier	flags		3460124	1					
ANR	3460151	ExpressionStatement	rval = code ( real_flags )	537:1:10771:10794	3460124	2	True				
ANR	3460152	AssignmentExpression	rval = code ( real_flags )		3460124	0		=			
ANR	3460153	Identifier	rval		3460124	0					
ANR	3460154	CallExpression	code ( real_flags )		3460124	1					
ANR	3460155	Callee	code		3460124	0					
ANR	3460156	Identifier	code		3460124	0					
ANR	3460157	ArgumentList	real_flags		3460124	1					
ANR	3460158	Argument	real_flags		3460124	0					
ANR	3460159	Identifier	real_flags		3460124	0					
ANR	3460160	IfStatement	if ( _coding == stream_decode )		3460124	3					
ANR	3460161	Condition	_coding == stream_decode	539:5:10802:10825	3460124	0	True				
ANR	3460162	EqualityExpression	_coding == stream_decode		3460124	0		==			
ANR	3460163	Identifier	_coding		3460124	0					
ANR	3460164	Identifier	stream_decode		3460124	1					
ANR	3460165	CompoundStatement		10:31:166:166	3460124	1					
ANR	3460166	ExpressionStatement	flags = ( open_flags_t ) open_flags_decode ( ( int ) real_flags )	540:2:10832:10888	3460124	0	True				
ANR	3460167	AssignmentExpression	flags = ( open_flags_t ) open_flags_decode ( ( int ) real_flags )		3460124	0		=			
ANR	3460168	Identifier	flags		3460124	0					
ANR	3460169	CastExpression	( open_flags_t ) open_flags_decode ( ( int ) real_flags )		3460124	1					
ANR	3460170	CastTarget	open_flags_t		3460124	0					
ANR	3460171	CallExpression	open_flags_decode ( ( int ) real_flags )		3460124	1					
ANR	3460172	Callee	open_flags_decode		3460124	0					
ANR	3460173	Identifier	open_flags_decode		3460124	0					
ANR	3460174	ArgumentList	( int ) real_flags		3460124	1					
ANR	3460175	Argument	( int ) real_flags		3460124	0					
ANR	3460176	CastExpression	( int ) real_flags		3460124	0					
ANR	3460177	CastTarget	int		3460124	0					
ANR	3460178	Identifier	real_flags		3460124	1					
ANR	3460179	ReturnStatement	return rval ;	543:1:10895:10906	3460124	4	True				
ANR	3460180	Identifier	rval		3460124	0					
ANR	3460181	ReturnType	int		3460124	1					
ANR	3460182	Identifier	Stream :: code		3460124	2					
ANR	3460183	ParameterList	open_flags_t & flags		3460124	3					
ANR	3460184	Parameter	open_flags_t & flags	529:13:10640:10658	3460124	0	True				
ANR	3460185	ParameterType	open_flags_t &		3460124	0					
ANR	3460186	Identifier	flags		3460124	1					
ANR	3460187	CFGEntryNode	ENTRY		3460124		True				
ANR	3460188	CFGExitNode	EXIT		3460124		True				
ANR	3460189	Symbol	open_flags_encode		3460124						
ANR	3460190	Symbol	stream_decode		3460124						
ANR	3460191	Symbol	_coding		3460124						
ANR	3460192	Symbol	code		3460124						
ANR	3460193	Symbol	real_flags		3460124						
ANR	3460194	Symbol	stream_encode		3460124						
ANR	3460195	Symbol	open_flags_decode		3460124						
ANR	3460196	Symbol	flags		3460124						
ANR	3460197	Symbol	rval		3460124						
ANR	3460198	Function	Stream :: code	546:0:10911:11223							
ANR	3460199	FunctionDef	Stream :: code (condor_errno_t & errno_num)		3460198	0					
ANR	3460200	CompoundStatement		548:0:10956:11223	3460198	0					
ANR	3460201	IdentifierDeclStatement	"int real_errno_num , rval ;"	549:1:10959:10983	3460198	0	True				
ANR	3460202	IdentifierDecl	real_errno_num		3460198	0					
ANR	3460203	IdentifierDeclType	int		3460198	0					
ANR	3460204	Identifier	real_errno_num		3460198	1					
ANR	3460205	IdentifierDecl	rval		3460198	1					
ANR	3460206	IdentifierDeclType	int		3460198	0					
ANR	3460207	Identifier	rval		3460198	1					
ANR	3460208	IfStatement	if ( _coding == stream_encode )		3460198	1					
ANR	3460209	Condition	_coding == stream_encode	551:5:10992:11015	3460198	0	True				
ANR	3460210	EqualityExpression	_coding == stream_encode		3460198	0		==			
ANR	3460211	Identifier	_coding		3460198	0					
ANR	3460212	Identifier	stream_encode		3460198	1					
ANR	3460213	CompoundStatement		4:31:61:61	3460198	1					
ANR	3460214	ExpressionStatement	real_errno_num = errno_num_encode ( ( int ) errno_num )	552:2:11022:11071	3460198	0	True				
ANR	3460215	AssignmentExpression	real_errno_num = errno_num_encode ( ( int ) errno_num )		3460198	0		=			
ANR	3460216	Identifier	real_errno_num		3460198	0					
ANR	3460217	CallExpression	errno_num_encode ( ( int ) errno_num )		3460198	1					
ANR	3460218	Callee	errno_num_encode		3460198	0					
ANR	3460219	Identifier	errno_num_encode		3460198	0					
ANR	3460220	ArgumentList	( int ) errno_num		3460198	1					
ANR	3460221	Argument	( int ) errno_num		3460198	0					
ANR	3460222	CastExpression	( int ) errno_num		3460198	0					
ANR	3460223	CastTarget	int		3460198	0					
ANR	3460224	Identifier	errno_num		3460198	1					
ANR	3460225	ExpressionStatement	rval = code ( real_errno_num )	555:1:11078:11105	3460198	2	True				
ANR	3460226	AssignmentExpression	rval = code ( real_errno_num )		3460198	0		=			
ANR	3460227	Identifier	rval		3460198	0					
ANR	3460228	CallExpression	code ( real_errno_num )		3460198	1					
ANR	3460229	Callee	code		3460198	0					
ANR	3460230	Identifier	code		3460198	0					
ANR	3460231	ArgumentList	real_errno_num		3460198	1					
ANR	3460232	Argument	real_errno_num		3460198	0					
ANR	3460233	Identifier	real_errno_num		3460198	0					
ANR	3460234	IfStatement	if ( _coding == stream_decode )		3460198	3					
ANR	3460235	Condition	_coding == stream_decode	557:5:11113:11136	3460198	0	True				
ANR	3460236	EqualityExpression	_coding == stream_decode		3460198	0		==			
ANR	3460237	Identifier	_coding		3460198	0					
ANR	3460238	Identifier	stream_decode		3460198	1					
ANR	3460239	CompoundStatement		10:31:182:182	3460198	1					
ANR	3460240	ExpressionStatement	errno_num = ( condor_errno_t ) errno_num_decode ( real_errno_num )	558:2:11143:11203	3460198	0	True				
ANR	3460241	AssignmentExpression	errno_num = ( condor_errno_t ) errno_num_decode ( real_errno_num )		3460198	0		=			
ANR	3460242	Identifier	errno_num		3460198	0					
ANR	3460243	CastExpression	( condor_errno_t ) errno_num_decode ( real_errno_num )		3460198	1					
ANR	3460244	CastTarget	condor_errno_t		3460198	0					
ANR	3460245	CallExpression	errno_num_decode ( real_errno_num )		3460198	1					
ANR	3460246	Callee	errno_num_decode		3460198	0					
ANR	3460247	Identifier	errno_num_decode		3460198	0					
ANR	3460248	ArgumentList	real_errno_num		3460198	1					
ANR	3460249	Argument	real_errno_num		3460198	0					
ANR	3460250	Identifier	real_errno_num		3460198	0					
ANR	3460251	ReturnStatement	return rval ;	561:1:11210:11221	3460198	4	True				
ANR	3460252	Identifier	rval		3460198	0					
ANR	3460253	ReturnType	int		3460198	1					
ANR	3460254	Identifier	Stream :: code		3460198	2					
ANR	3460255	ParameterList	condor_errno_t & errno_num		3460198	3					
ANR	3460256	Parameter	condor_errno_t & errno_num	547:13:10929:10953	3460198	0	True				
ANR	3460257	ParameterType	condor_errno_t &		3460198	0					
ANR	3460258	Identifier	errno_num		3460198	1					
ANR	3460259	CFGEntryNode	ENTRY		3460198		True				
ANR	3460260	CFGExitNode	EXIT		3460198		True				
ANR	3460261	Symbol	stream_decode		3460198						
ANR	3460262	Symbol	_coding		3460198						
ANR	3460263	Symbol	code		3460198						
ANR	3460264	Symbol	stream_encode		3460198						
ANR	3460265	Symbol	errno_num		3460198						
ANR	3460266	Symbol	real_errno_num		3460198						
ANR	3460267	Symbol	rval		3460198						
ANR	3460268	Symbol	errno_num_encode		3460198						
ANR	3460269	Symbol	errno_num_decode		3460198						
ANR	3460270	Function	Stream :: code	572:0:11270:11566							
ANR	3460271	FunctionDef	Stream :: code (condor_signal_t & sig_num)		3460270	0					
ANR	3460272	CompoundStatement		574:0:11314:11566	3460270	0					
ANR	3460273	IdentifierDeclStatement	"int real_sig_num , rval ;"	575:1:11317:11339	3460270	0	True				
ANR	3460274	IdentifierDecl	real_sig_num		3460270	0					
ANR	3460275	IdentifierDeclType	int		3460270	0					
ANR	3460276	Identifier	real_sig_num		3460270	1					
ANR	3460277	IdentifierDecl	rval		3460270	1					
ANR	3460278	IdentifierDeclType	int		3460270	0					
ANR	3460279	Identifier	rval		3460270	1					
ANR	3460280	IfStatement	if ( _coding == stream_encode )		3460270	1					
ANR	3460281	Condition	_coding == stream_encode	577:5:11348:11371	3460270	0	True				
ANR	3460282	EqualityExpression	_coding == stream_encode		3460270	0		==			
ANR	3460283	Identifier	_coding		3460270	0					
ANR	3460284	Identifier	stream_encode		3460270	1					
ANR	3460285	CompoundStatement		4:31:59:59	3460270	1					
ANR	3460286	ExpressionStatement	real_sig_num = sig_num_encode ( ( int ) sig_num )	578:2:11378:11421	3460270	0	True				
ANR	3460287	AssignmentExpression	real_sig_num = sig_num_encode ( ( int ) sig_num )		3460270	0		=			
ANR	3460288	Identifier	real_sig_num		3460270	0					
ANR	3460289	CallExpression	sig_num_encode ( ( int ) sig_num )		3460270	1					
ANR	3460290	Callee	sig_num_encode		3460270	0					
ANR	3460291	Identifier	sig_num_encode		3460270	0					
ANR	3460292	ArgumentList	( int ) sig_num		3460270	1					
ANR	3460293	Argument	( int ) sig_num		3460270	0					
ANR	3460294	CastExpression	( int ) sig_num		3460270	0					
ANR	3460295	CastTarget	int		3460270	0					
ANR	3460296	Identifier	sig_num		3460270	1					
ANR	3460297	ExpressionStatement	rval = code ( real_sig_num )	581:1:11428:11453	3460270	2	True				
ANR	3460298	AssignmentExpression	rval = code ( real_sig_num )		3460270	0		=			
ANR	3460299	Identifier	rval		3460270	0					
ANR	3460300	CallExpression	code ( real_sig_num )		3460270	1					
ANR	3460301	Callee	code		3460270	0					
ANR	3460302	Identifier	code		3460270	0					
ANR	3460303	ArgumentList	real_sig_num		3460270	1					
ANR	3460304	Argument	real_sig_num		3460270	0					
ANR	3460305	Identifier	real_sig_num		3460270	0					
ANR	3460306	IfStatement	if ( _coding == stream_decode )		3460270	3					
ANR	3460307	Condition	_coding == stream_decode	583:5:11461:11484	3460270	0	True				
ANR	3460308	EqualityExpression	_coding == stream_decode		3460270	0		==			
ANR	3460309	Identifier	_coding		3460270	0					
ANR	3460310	Identifier	stream_decode		3460270	1					
ANR	3460311	CompoundStatement		10:31:172:172	3460270	1					
ANR	3460312	ExpressionStatement	sig_num = ( condor_signal_t ) sig_num_decode ( real_sig_num )	584:2:11491:11546	3460270	0	True				
ANR	3460313	AssignmentExpression	sig_num = ( condor_signal_t ) sig_num_decode ( real_sig_num )		3460270	0		=			
ANR	3460314	Identifier	sig_num		3460270	0					
ANR	3460315	CastExpression	( condor_signal_t ) sig_num_decode ( real_sig_num )		3460270	1					
ANR	3460316	CastTarget	condor_signal_t		3460270	0					
ANR	3460317	CallExpression	sig_num_decode ( real_sig_num )		3460270	1					
ANR	3460318	Callee	sig_num_decode		3460270	0					
ANR	3460319	Identifier	sig_num_decode		3460270	0					
ANR	3460320	ArgumentList	real_sig_num		3460270	1					
ANR	3460321	Argument	real_sig_num		3460270	0					
ANR	3460322	Identifier	real_sig_num		3460270	0					
ANR	3460323	ReturnStatement	return rval ;	587:1:11553:11564	3460270	4	True				
ANR	3460324	Identifier	rval		3460270	0					
ANR	3460325	ReturnType	int		3460270	1					
ANR	3460326	Identifier	Stream :: code		3460270	2					
ANR	3460327	ParameterList	condor_signal_t & sig_num		3460270	3					
ANR	3460328	Parameter	condor_signal_t & sig_num	573:13:11288:11311	3460270	0	True				
ANR	3460329	ParameterType	condor_signal_t &		3460270	0					
ANR	3460330	Identifier	sig_num		3460270	1					
ANR	3460331	CFGEntryNode	ENTRY		3460270		True				
ANR	3460332	CFGExitNode	EXIT		3460270		True				
ANR	3460333	Symbol	stream_decode		3460270						
ANR	3460334	Symbol	_coding		3460270						
ANR	3460335	Symbol	code		3460270						
ANR	3460336	Symbol	stream_encode		3460270						
ANR	3460337	Symbol	sig_num		3460270						
ANR	3460338	Symbol	rval		3460270						
ANR	3460339	Symbol	sig_num_decode		3460270						
ANR	3460340	Symbol	real_sig_num		3460270						
ANR	3460341	Symbol	sig_num_encode		3460270						
ANR	3460342	Function	Stream :: code	591:0:11570:11838							
ANR	3460343	FunctionDef	Stream :: code (fcntl_cmd_t & cmd)		3460342	0					
ANR	3460344	CompoundStatement		593:0:11606:11838	3460342	0					
ANR	3460345	IdentifierDeclStatement	"int real_cmd , rval ;"	594:1:11609:11627	3460342	0	True				
ANR	3460346	IdentifierDecl	real_cmd		3460342	0					
ANR	3460347	IdentifierDeclType	int		3460342	0					
ANR	3460348	Identifier	real_cmd		3460342	1					
ANR	3460349	IdentifierDecl	rval		3460342	1					
ANR	3460350	IdentifierDeclType	int		3460342	0					
ANR	3460351	Identifier	rval		3460342	1					
ANR	3460352	IfStatement	if ( _coding == stream_encode )		3460342	1					
ANR	3460353	Condition	_coding == stream_encode	596:5:11635:11658	3460342	0	True				
ANR	3460354	EqualityExpression	_coding == stream_encode		3460342	0		==			
ANR	3460355	Identifier	_coding		3460342	0					
ANR	3460356	Identifier	stream_encode		3460342	1					
ANR	3460357	CompoundStatement		4:31:54:54	3460342	1					
ANR	3460358	ExpressionStatement	real_cmd = fcntl_cmd_encode ( ( int ) cmd )	597:2:11665:11702	3460342	0	True				
ANR	3460359	AssignmentExpression	real_cmd = fcntl_cmd_encode ( ( int ) cmd )		3460342	0		=			
ANR	3460360	Identifier	real_cmd		3460342	0					
ANR	3460361	CallExpression	fcntl_cmd_encode ( ( int ) cmd )		3460342	1					
ANR	3460362	Callee	fcntl_cmd_encode		3460342	0					
ANR	3460363	Identifier	fcntl_cmd_encode		3460342	0					
ANR	3460364	ArgumentList	( int ) cmd		3460342	1					
ANR	3460365	Argument	( int ) cmd		3460342	0					
ANR	3460366	CastExpression	( int ) cmd		3460342	0					
ANR	3460367	CastTarget	int		3460342	0					
ANR	3460368	Identifier	cmd		3460342	1					
ANR	3460369	ExpressionStatement	rval = code ( real_cmd )	600:1:11709:11730	3460342	2	True				
ANR	3460370	AssignmentExpression	rval = code ( real_cmd )		3460342	0		=			
ANR	3460371	Identifier	rval		3460342	0					
ANR	3460372	CallExpression	code ( real_cmd )		3460342	1					
ANR	3460373	Callee	code		3460342	0					
ANR	3460374	Identifier	code		3460342	0					
ANR	3460375	ArgumentList	real_cmd		3460342	1					
ANR	3460376	Argument	real_cmd		3460342	0					
ANR	3460377	Identifier	real_cmd		3460342	0					
ANR	3460378	IfStatement	if ( _coding == stream_decode )		3460342	3					
ANR	3460379	Condition	_coding == stream_decode	602:5:11738:11761	3460342	0	True				
ANR	3460380	EqualityExpression	_coding == stream_decode		3460342	0		==			
ANR	3460381	Identifier	_coding		3460342	0					
ANR	3460382	Identifier	stream_decode		3460342	1					
ANR	3460383	CompoundStatement		10:31:157:157	3460342	1					
ANR	3460384	ExpressionStatement	cmd = ( fcntl_cmd_t ) fcntl_cmd_decode ( ( int ) real_cmd )	603:2:11768:11818	3460342	0	True				
ANR	3460385	AssignmentExpression	cmd = ( fcntl_cmd_t ) fcntl_cmd_decode ( ( int ) real_cmd )		3460342	0		=			
ANR	3460386	Identifier	cmd		3460342	0					
ANR	3460387	CastExpression	( fcntl_cmd_t ) fcntl_cmd_decode ( ( int ) real_cmd )		3460342	1					
ANR	3460388	CastTarget	fcntl_cmd_t		3460342	0					
ANR	3460389	CallExpression	fcntl_cmd_decode ( ( int ) real_cmd )		3460342	1					
ANR	3460390	Callee	fcntl_cmd_decode		3460342	0					
ANR	3460391	Identifier	fcntl_cmd_decode		3460342	0					
ANR	3460392	ArgumentList	( int ) real_cmd		3460342	1					
ANR	3460393	Argument	( int ) real_cmd		3460342	0					
ANR	3460394	CastExpression	( int ) real_cmd		3460342	0					
ANR	3460395	CastTarget	int		3460342	0					
ANR	3460396	Identifier	real_cmd		3460342	1					
ANR	3460397	ReturnStatement	return rval ;	606:1:11825:11836	3460342	4	True				
ANR	3460398	Identifier	rval		3460342	0					
ANR	3460399	ReturnType	int		3460342	1					
ANR	3460400	Identifier	Stream :: code		3460342	2					
ANR	3460401	ParameterList	fcntl_cmd_t & cmd		3460342	3					
ANR	3460402	Parameter	fcntl_cmd_t & cmd	592:13:11588:11603	3460342	0	True				
ANR	3460403	ParameterType	fcntl_cmd_t &		3460342	0					
ANR	3460404	Identifier	cmd		3460342	1					
ANR	3460405	CFGEntryNode	ENTRY		3460342		True				
ANR	3460406	CFGExitNode	EXIT		3460342		True				
ANR	3460407	Symbol	stream_decode		3460342						
ANR	3460408	Symbol	_coding		3460342						
ANR	3460409	Symbol	code		3460342						
ANR	3460410	Symbol	stream_encode		3460342						
ANR	3460411	Symbol	fcntl_cmd_encode		3460342						
ANR	3460412	Symbol	real_cmd		3460342						
ANR	3460413	Symbol	rval		3460342						
ANR	3460414	Symbol	cmd		3460342						
ANR	3460415	Symbol	fcntl_cmd_decode		3460342						
ANR	3460416	Function	Stream :: code	609:0:11841:12451							
ANR	3460417	FunctionDef	Stream :: code (struct rusage & r)		3460416	0					
ANR	3460418	CompoundStatement		611:0:11877:12451	3460416	0					
ANR	3460419	ExpressionStatement	STREAM_ASSERT ( code ( r . ru_utime ) )	612:1:11880:11911	3460416	0	True				
ANR	3460420	CallExpression	STREAM_ASSERT ( code ( r . ru_utime ) )		3460416	0					
ANR	3460421	Callee	STREAM_ASSERT		3460416	0					
ANR	3460422	Identifier	STREAM_ASSERT		3460416	0					
ANR	3460423	ArgumentList	code ( r . ru_utime )		3460416	1					
ANR	3460424	Argument	code ( r . ru_utime )		3460416	0					
ANR	3460425	CallExpression	code ( r . ru_utime )		3460416	0					
ANR	3460426	Callee	code		3460416	0					
ANR	3460427	Identifier	code		3460416	0					
ANR	3460428	ArgumentList	r . ru_utime		3460416	1					
ANR	3460429	Argument	r . ru_utime		3460416	0					
ANR	3460430	MemberAccess	r . ru_utime		3460416	0					
ANR	3460431	Identifier	r		3460416	0					
ANR	3460432	Identifier	ru_utime		3460416	1					
ANR	3460433	ExpressionStatement	STREAM_ASSERT ( code ( r . ru_stime ) )	613:1:11914:11945	3460416	1	True				
ANR	3460434	CallExpression	STREAM_ASSERT ( code ( r . ru_stime ) )		3460416	0					
ANR	3460435	Callee	STREAM_ASSERT		3460416	0					
ANR	3460436	Identifier	STREAM_ASSERT		3460416	0					
ANR	3460437	ArgumentList	code ( r . ru_stime )		3460416	1					
ANR	3460438	Argument	code ( r . ru_stime )		3460416	0					
ANR	3460439	CallExpression	code ( r . ru_stime )		3460416	0					
ANR	3460440	Callee	code		3460416	0					
ANR	3460441	Identifier	code		3460416	0					
ANR	3460442	ArgumentList	r . ru_stime		3460416	1					
ANR	3460443	Argument	r . ru_stime		3460416	0					
ANR	3460444	MemberAccess	r . ru_stime		3460416	0					
ANR	3460445	Identifier	r		3460416	0					
ANR	3460446	Identifier	ru_stime		3460416	1					
ANR	3460447	ExpressionStatement	STREAM_ASSERT ( code ( r . ru_maxrss ) )	614:1:11948:11980	3460416	2	True				
ANR	3460448	CallExpression	STREAM_ASSERT ( code ( r . ru_maxrss ) )		3460416	0					
ANR	3460449	Callee	STREAM_ASSERT		3460416	0					
ANR	3460450	Identifier	STREAM_ASSERT		3460416	0					
ANR	3460451	ArgumentList	code ( r . ru_maxrss )		3460416	1					
ANR	3460452	Argument	code ( r . ru_maxrss )		3460416	0					
ANR	3460453	CallExpression	code ( r . ru_maxrss )		3460416	0					
ANR	3460454	Callee	code		3460416	0					
ANR	3460455	Identifier	code		3460416	0					
ANR	3460456	ArgumentList	r . ru_maxrss		3460416	1					
ANR	3460457	Argument	r . ru_maxrss		3460416	0					
ANR	3460458	MemberAccess	r . ru_maxrss		3460416	0					
ANR	3460459	Identifier	r		3460416	0					
ANR	3460460	Identifier	ru_maxrss		3460416	1					
ANR	3460461	ExpressionStatement	STREAM_ASSERT ( code ( r . ru_ixrss ) )	615:1:11983:12014	3460416	3	True				
ANR	3460462	CallExpression	STREAM_ASSERT ( code ( r . ru_ixrss ) )		3460416	0					
ANR	3460463	Callee	STREAM_ASSERT		3460416	0					
ANR	3460464	Identifier	STREAM_ASSERT		3460416	0					
ANR	3460465	ArgumentList	code ( r . ru_ixrss )		3460416	1					
ANR	3460466	Argument	code ( r . ru_ixrss )		3460416	0					
ANR	3460467	CallExpression	code ( r . ru_ixrss )		3460416	0					
ANR	3460468	Callee	code		3460416	0					
ANR	3460469	Identifier	code		3460416	0					
ANR	3460470	ArgumentList	r . ru_ixrss		3460416	1					
ANR	3460471	Argument	r . ru_ixrss		3460416	0					
ANR	3460472	MemberAccess	r . ru_ixrss		3460416	0					
ANR	3460473	Identifier	r		3460416	0					
ANR	3460474	Identifier	ru_ixrss		3460416	1					
ANR	3460475	ExpressionStatement	STREAM_ASSERT ( code ( r . ru_idrss ) )	616:1:12017:12048	3460416	4	True				
ANR	3460476	CallExpression	STREAM_ASSERT ( code ( r . ru_idrss ) )		3460416	0					
ANR	3460477	Callee	STREAM_ASSERT		3460416	0					
ANR	3460478	Identifier	STREAM_ASSERT		3460416	0					
ANR	3460479	ArgumentList	code ( r . ru_idrss )		3460416	1					
ANR	3460480	Argument	code ( r . ru_idrss )		3460416	0					
ANR	3460481	CallExpression	code ( r . ru_idrss )		3460416	0					
ANR	3460482	Callee	code		3460416	0					
ANR	3460483	Identifier	code		3460416	0					
ANR	3460484	ArgumentList	r . ru_idrss		3460416	1					
ANR	3460485	Argument	r . ru_idrss		3460416	0					
ANR	3460486	MemberAccess	r . ru_idrss		3460416	0					
ANR	3460487	Identifier	r		3460416	0					
ANR	3460488	Identifier	ru_idrss		3460416	1					
ANR	3460489	ExpressionStatement	STREAM_ASSERT ( code ( r . ru_isrss ) )	617:1:12051:12082	3460416	5	True				
ANR	3460490	CallExpression	STREAM_ASSERT ( code ( r . ru_isrss ) )		3460416	0					
ANR	3460491	Callee	STREAM_ASSERT		3460416	0					
ANR	3460492	Identifier	STREAM_ASSERT		3460416	0					
ANR	3460493	ArgumentList	code ( r . ru_isrss )		3460416	1					
ANR	3460494	Argument	code ( r . ru_isrss )		3460416	0					
ANR	3460495	CallExpression	code ( r . ru_isrss )		3460416	0					
ANR	3460496	Callee	code		3460416	0					
ANR	3460497	Identifier	code		3460416	0					
ANR	3460498	ArgumentList	r . ru_isrss		3460416	1					
ANR	3460499	Argument	r . ru_isrss		3460416	0					
ANR	3460500	MemberAccess	r . ru_isrss		3460416	0					
ANR	3460501	Identifier	r		3460416	0					
ANR	3460502	Identifier	ru_isrss		3460416	1					
ANR	3460503	ExpressionStatement	STREAM_ASSERT ( code ( r . ru_minflt ) )	618:1:12085:12117	3460416	6	True				
ANR	3460504	CallExpression	STREAM_ASSERT ( code ( r . ru_minflt ) )		3460416	0					
ANR	3460505	Callee	STREAM_ASSERT		3460416	0					
ANR	3460506	Identifier	STREAM_ASSERT		3460416	0					
ANR	3460507	ArgumentList	code ( r . ru_minflt )		3460416	1					
ANR	3460508	Argument	code ( r . ru_minflt )		3460416	0					
ANR	3460509	CallExpression	code ( r . ru_minflt )		3460416	0					
ANR	3460510	Callee	code		3460416	0					
ANR	3460511	Identifier	code		3460416	0					
ANR	3460512	ArgumentList	r . ru_minflt		3460416	1					
ANR	3460513	Argument	r . ru_minflt		3460416	0					
ANR	3460514	MemberAccess	r . ru_minflt		3460416	0					
ANR	3460515	Identifier	r		3460416	0					
ANR	3460516	Identifier	ru_minflt		3460416	1					
ANR	3460517	ExpressionStatement	STREAM_ASSERT ( code ( r . ru_majflt ) )	619:1:12120:12152	3460416	7	True				
ANR	3460518	CallExpression	STREAM_ASSERT ( code ( r . ru_majflt ) )		3460416	0					
ANR	3460519	Callee	STREAM_ASSERT		3460416	0					
ANR	3460520	Identifier	STREAM_ASSERT		3460416	0					
ANR	3460521	ArgumentList	code ( r . ru_majflt )		3460416	1					
ANR	3460522	Argument	code ( r . ru_majflt )		3460416	0					
ANR	3460523	CallExpression	code ( r . ru_majflt )		3460416	0					
ANR	3460524	Callee	code		3460416	0					
ANR	3460525	Identifier	code		3460416	0					
ANR	3460526	ArgumentList	r . ru_majflt		3460416	1					
ANR	3460527	Argument	r . ru_majflt		3460416	0					
ANR	3460528	MemberAccess	r . ru_majflt		3460416	0					
ANR	3460529	Identifier	r		3460416	0					
ANR	3460530	Identifier	ru_majflt		3460416	1					
ANR	3460531	ExpressionStatement	STREAM_ASSERT ( code ( r . ru_nswap ) )	620:1:12155:12186	3460416	8	True				
ANR	3460532	CallExpression	STREAM_ASSERT ( code ( r . ru_nswap ) )		3460416	0					
ANR	3460533	Callee	STREAM_ASSERT		3460416	0					
ANR	3460534	Identifier	STREAM_ASSERT		3460416	0					
ANR	3460535	ArgumentList	code ( r . ru_nswap )		3460416	1					
ANR	3460536	Argument	code ( r . ru_nswap )		3460416	0					
ANR	3460537	CallExpression	code ( r . ru_nswap )		3460416	0					
ANR	3460538	Callee	code		3460416	0					
ANR	3460539	Identifier	code		3460416	0					
ANR	3460540	ArgumentList	r . ru_nswap		3460416	1					
ANR	3460541	Argument	r . ru_nswap		3460416	0					
ANR	3460542	MemberAccess	r . ru_nswap		3460416	0					
ANR	3460543	Identifier	r		3460416	0					
ANR	3460544	Identifier	ru_nswap		3460416	1					
ANR	3460545	ExpressionStatement	STREAM_ASSERT ( code ( r . ru_inblock ) )	621:1:12189:12222	3460416	9	True				
ANR	3460546	CallExpression	STREAM_ASSERT ( code ( r . ru_inblock ) )		3460416	0					
ANR	3460547	Callee	STREAM_ASSERT		3460416	0					
ANR	3460548	Identifier	STREAM_ASSERT		3460416	0					
ANR	3460549	ArgumentList	code ( r . ru_inblock )		3460416	1					
ANR	3460550	Argument	code ( r . ru_inblock )		3460416	0					
ANR	3460551	CallExpression	code ( r . ru_inblock )		3460416	0					
ANR	3460552	Callee	code		3460416	0					
ANR	3460553	Identifier	code		3460416	0					
ANR	3460554	ArgumentList	r . ru_inblock		3460416	1					
ANR	3460555	Argument	r . ru_inblock		3460416	0					
ANR	3460556	MemberAccess	r . ru_inblock		3460416	0					
ANR	3460557	Identifier	r		3460416	0					
ANR	3460558	Identifier	ru_inblock		3460416	1					
ANR	3460559	ExpressionStatement	STREAM_ASSERT ( code ( r . ru_oublock ) )	622:1:12225:12258	3460416	10	True				
ANR	3460560	CallExpression	STREAM_ASSERT ( code ( r . ru_oublock ) )		3460416	0					
ANR	3460561	Callee	STREAM_ASSERT		3460416	0					
ANR	3460562	Identifier	STREAM_ASSERT		3460416	0					
ANR	3460563	ArgumentList	code ( r . ru_oublock )		3460416	1					
ANR	3460564	Argument	code ( r . ru_oublock )		3460416	0					
ANR	3460565	CallExpression	code ( r . ru_oublock )		3460416	0					
ANR	3460566	Callee	code		3460416	0					
ANR	3460567	Identifier	code		3460416	0					
ANR	3460568	ArgumentList	r . ru_oublock		3460416	1					
ANR	3460569	Argument	r . ru_oublock		3460416	0					
ANR	3460570	MemberAccess	r . ru_oublock		3460416	0					
ANR	3460571	Identifier	r		3460416	0					
ANR	3460572	Identifier	ru_oublock		3460416	1					
ANR	3460573	ExpressionStatement	STREAM_ASSERT ( code ( r . ru_msgsnd ) )	623:1:12261:12293	3460416	11	True				
ANR	3460574	CallExpression	STREAM_ASSERT ( code ( r . ru_msgsnd ) )		3460416	0					
ANR	3460575	Callee	STREAM_ASSERT		3460416	0					
ANR	3460576	Identifier	STREAM_ASSERT		3460416	0					
ANR	3460577	ArgumentList	code ( r . ru_msgsnd )		3460416	1					
ANR	3460578	Argument	code ( r . ru_msgsnd )		3460416	0					
ANR	3460579	CallExpression	code ( r . ru_msgsnd )		3460416	0					
ANR	3460580	Callee	code		3460416	0					
ANR	3460581	Identifier	code		3460416	0					
ANR	3460582	ArgumentList	r . ru_msgsnd		3460416	1					
ANR	3460583	Argument	r . ru_msgsnd		3460416	0					
ANR	3460584	MemberAccess	r . ru_msgsnd		3460416	0					
ANR	3460585	Identifier	r		3460416	0					
ANR	3460586	Identifier	ru_msgsnd		3460416	1					
ANR	3460587	ExpressionStatement	STREAM_ASSERT ( code ( r . ru_msgrcv ) )	624:1:12296:12328	3460416	12	True				
ANR	3460588	CallExpression	STREAM_ASSERT ( code ( r . ru_msgrcv ) )		3460416	0					
ANR	3460589	Callee	STREAM_ASSERT		3460416	0					
ANR	3460590	Identifier	STREAM_ASSERT		3460416	0					
ANR	3460591	ArgumentList	code ( r . ru_msgrcv )		3460416	1					
ANR	3460592	Argument	code ( r . ru_msgrcv )		3460416	0					
ANR	3460593	CallExpression	code ( r . ru_msgrcv )		3460416	0					
ANR	3460594	Callee	code		3460416	0					
ANR	3460595	Identifier	code		3460416	0					
ANR	3460596	ArgumentList	r . ru_msgrcv		3460416	1					
ANR	3460597	Argument	r . ru_msgrcv		3460416	0					
ANR	3460598	MemberAccess	r . ru_msgrcv		3460416	0					
ANR	3460599	Identifier	r		3460416	0					
ANR	3460600	Identifier	ru_msgrcv		3460416	1					
ANR	3460601	ExpressionStatement	STREAM_ASSERT ( code ( r . ru_nsignals ) )	625:1:12331:12365	3460416	13	True				
ANR	3460602	CallExpression	STREAM_ASSERT ( code ( r . ru_nsignals ) )		3460416	0					
ANR	3460603	Callee	STREAM_ASSERT		3460416	0					
ANR	3460604	Identifier	STREAM_ASSERT		3460416	0					
ANR	3460605	ArgumentList	code ( r . ru_nsignals )		3460416	1					
ANR	3460606	Argument	code ( r . ru_nsignals )		3460416	0					
ANR	3460607	CallExpression	code ( r . ru_nsignals )		3460416	0					
ANR	3460608	Callee	code		3460416	0					
ANR	3460609	Identifier	code		3460416	0					
ANR	3460610	ArgumentList	r . ru_nsignals		3460416	1					
ANR	3460611	Argument	r . ru_nsignals		3460416	0					
ANR	3460612	MemberAccess	r . ru_nsignals		3460416	0					
ANR	3460613	Identifier	r		3460416	0					
ANR	3460614	Identifier	ru_nsignals		3460416	1					
ANR	3460615	ExpressionStatement	STREAM_ASSERT ( code ( r . ru_nvcsw ) )	626:1:12368:12399	3460416	14	True				
ANR	3460616	CallExpression	STREAM_ASSERT ( code ( r . ru_nvcsw ) )		3460416	0					
ANR	3460617	Callee	STREAM_ASSERT		3460416	0					
ANR	3460618	Identifier	STREAM_ASSERT		3460416	0					
ANR	3460619	ArgumentList	code ( r . ru_nvcsw )		3460416	1					
ANR	3460620	Argument	code ( r . ru_nvcsw )		3460416	0					
ANR	3460621	CallExpression	code ( r . ru_nvcsw )		3460416	0					
ANR	3460622	Callee	code		3460416	0					
ANR	3460623	Identifier	code		3460416	0					
ANR	3460624	ArgumentList	r . ru_nvcsw		3460416	1					
ANR	3460625	Argument	r . ru_nvcsw		3460416	0					
ANR	3460626	MemberAccess	r . ru_nvcsw		3460416	0					
ANR	3460627	Identifier	r		3460416	0					
ANR	3460628	Identifier	ru_nvcsw		3460416	1					
ANR	3460629	ExpressionStatement	STREAM_ASSERT ( code ( r . ru_nivcsw ) )	627:1:12402:12434	3460416	15	True				
ANR	3460630	CallExpression	STREAM_ASSERT ( code ( r . ru_nivcsw ) )		3460416	0					
ANR	3460631	Callee	STREAM_ASSERT		3460416	0					
ANR	3460632	Identifier	STREAM_ASSERT		3460416	0					
ANR	3460633	ArgumentList	code ( r . ru_nivcsw )		3460416	1					
ANR	3460634	Argument	code ( r . ru_nivcsw )		3460416	0					
ANR	3460635	CallExpression	code ( r . ru_nivcsw )		3460416	0					
ANR	3460636	Callee	code		3460416	0					
ANR	3460637	Identifier	code		3460416	0					
ANR	3460638	ArgumentList	r . ru_nivcsw		3460416	1					
ANR	3460639	Argument	r . ru_nivcsw		3460416	0					
ANR	3460640	MemberAccess	r . ru_nivcsw		3460416	0					
ANR	3460641	Identifier	r		3460416	0					
ANR	3460642	Identifier	ru_nivcsw		3460416	1					
ANR	3460643	ReturnStatement	return TRUE ;	629:1:12438:12449	3460416	16	True				
ANR	3460644	Identifier	TRUE		3460416	0					
ANR	3460645	ReturnType	int		3460416	1					
ANR	3460646	Identifier	Stream :: code		3460416	2					
ANR	3460647	ParameterList	struct rusage & r		3460416	3					
ANR	3460648	Parameter	struct rusage & r	610:13:11859:11874	3460416	0	True				
ANR	3460649	ParameterType	struct rusage &		3460416	0					
ANR	3460650	Identifier	r		3460416	1					
ANR	3460651	CFGEntryNode	ENTRY		3460416		True				
ANR	3460652	CFGExitNode	EXIT		3460416		True				
ANR	3460653	Symbol	r . ru_inblock		3460416						
ANR	3460654	Symbol	code		3460416						
ANR	3460655	Symbol	r . ru_isrss		3460416						
ANR	3460656	Symbol	r . ru_oublock		3460416						
ANR	3460657	Symbol	r . ru_msgsnd		3460416						
ANR	3460658	Symbol	TRUE		3460416						
ANR	3460659	Symbol	r . ru_ixrss		3460416						
ANR	3460660	Symbol	r . ru_msgrcv		3460416						
ANR	3460661	Symbol	r . ru_nsignals		3460416						
ANR	3460662	Symbol	r . ru_nvcsw		3460416						
ANR	3460663	Symbol	r		3460416						
ANR	3460664	Symbol	r . ru_utime		3460416						
ANR	3460665	Symbol	r . ru_nivcsw		3460416						
ANR	3460666	Symbol	r . ru_nswap		3460416						
ANR	3460667	Symbol	r . ru_minflt		3460416						
ANR	3460668	Symbol	r . ru_majflt		3460416						
ANR	3460669	Symbol	r . ru_stime		3460416						
ANR	3460670	Symbol	r . ru_maxrss		3460416						
ANR	3460671	Symbol	r . ru_idrss		3460416						
ANR	3460672	Function	Stream :: code	632:0:12454:12939							
ANR	3460673	FunctionDef	Stream :: code (struct stat & s)		3460672	0					
ANR	3460674	CompoundStatement		634:0:12488:12939	3460672	0					
ANR	3460675	ExpressionStatement	STREAM_ASSERT ( code ( s . st_dev ) )	635:1:12491:12520	3460672	0	True				
ANR	3460676	CallExpression	STREAM_ASSERT ( code ( s . st_dev ) )		3460672	0					
ANR	3460677	Callee	STREAM_ASSERT		3460672	0					
ANR	3460678	Identifier	STREAM_ASSERT		3460672	0					
ANR	3460679	ArgumentList	code ( s . st_dev )		3460672	1					
ANR	3460680	Argument	code ( s . st_dev )		3460672	0					
ANR	3460681	CallExpression	code ( s . st_dev )		3460672	0					
ANR	3460682	Callee	code		3460672	0					
ANR	3460683	Identifier	code		3460672	0					
ANR	3460684	ArgumentList	s . st_dev		3460672	1					
ANR	3460685	Argument	s . st_dev		3460672	0					
ANR	3460686	MemberAccess	s . st_dev		3460672	0					
ANR	3460687	Identifier	s		3460672	0					
ANR	3460688	Identifier	st_dev		3460672	1					
ANR	3460689	ExpressionStatement	STREAM_ASSERT ( code ( s . st_ino ) )	636:1:12523:12552	3460672	1	True				
ANR	3460690	CallExpression	STREAM_ASSERT ( code ( s . st_ino ) )		3460672	0					
ANR	3460691	Callee	STREAM_ASSERT		3460672	0					
ANR	3460692	Identifier	STREAM_ASSERT		3460672	0					
ANR	3460693	ArgumentList	code ( s . st_ino )		3460672	1					
ANR	3460694	Argument	code ( s . st_ino )		3460672	0					
ANR	3460695	CallExpression	code ( s . st_ino )		3460672	0					
ANR	3460696	Callee	code		3460672	0					
ANR	3460697	Identifier	code		3460672	0					
ANR	3460698	ArgumentList	s . st_ino		3460672	1					
ANR	3460699	Argument	s . st_ino		3460672	0					
ANR	3460700	MemberAccess	s . st_ino		3460672	0					
ANR	3460701	Identifier	s		3460672	0					
ANR	3460702	Identifier	st_ino		3460672	1					
ANR	3460703	ExpressionStatement	STREAM_ASSERT ( code ( s . st_mode ) )	637:1:12555:12585	3460672	2	True				
ANR	3460704	CallExpression	STREAM_ASSERT ( code ( s . st_mode ) )		3460672	0					
ANR	3460705	Callee	STREAM_ASSERT		3460672	0					
ANR	3460706	Identifier	STREAM_ASSERT		3460672	0					
ANR	3460707	ArgumentList	code ( s . st_mode )		3460672	1					
ANR	3460708	Argument	code ( s . st_mode )		3460672	0					
ANR	3460709	CallExpression	code ( s . st_mode )		3460672	0					
ANR	3460710	Callee	code		3460672	0					
ANR	3460711	Identifier	code		3460672	0					
ANR	3460712	ArgumentList	s . st_mode		3460672	1					
ANR	3460713	Argument	s . st_mode		3460672	0					
ANR	3460714	MemberAccess	s . st_mode		3460672	0					
ANR	3460715	Identifier	s		3460672	0					
ANR	3460716	Identifier	st_mode		3460672	1					
ANR	3460717	ExpressionStatement	STREAM_ASSERT ( code ( s . st_nlink ) )	638:1:12588:12619	3460672	3	True				
ANR	3460718	CallExpression	STREAM_ASSERT ( code ( s . st_nlink ) )		3460672	0					
ANR	3460719	Callee	STREAM_ASSERT		3460672	0					
ANR	3460720	Identifier	STREAM_ASSERT		3460672	0					
ANR	3460721	ArgumentList	code ( s . st_nlink )		3460672	1					
ANR	3460722	Argument	code ( s . st_nlink )		3460672	0					
ANR	3460723	CallExpression	code ( s . st_nlink )		3460672	0					
ANR	3460724	Callee	code		3460672	0					
ANR	3460725	Identifier	code		3460672	0					
ANR	3460726	ArgumentList	s . st_nlink		3460672	1					
ANR	3460727	Argument	s . st_nlink		3460672	0					
ANR	3460728	MemberAccess	s . st_nlink		3460672	0					
ANR	3460729	Identifier	s		3460672	0					
ANR	3460730	Identifier	st_nlink		3460672	1					
ANR	3460731	ExpressionStatement	STREAM_ASSERT ( code ( s . st_uid ) )	639:1:12622:12651	3460672	4	True				
ANR	3460732	CallExpression	STREAM_ASSERT ( code ( s . st_uid ) )		3460672	0					
ANR	3460733	Callee	STREAM_ASSERT		3460672	0					
ANR	3460734	Identifier	STREAM_ASSERT		3460672	0					
ANR	3460735	ArgumentList	code ( s . st_uid )		3460672	1					
ANR	3460736	Argument	code ( s . st_uid )		3460672	0					
ANR	3460737	CallExpression	code ( s . st_uid )		3460672	0					
ANR	3460738	Callee	code		3460672	0					
ANR	3460739	Identifier	code		3460672	0					
ANR	3460740	ArgumentList	s . st_uid		3460672	1					
ANR	3460741	Argument	s . st_uid		3460672	0					
ANR	3460742	MemberAccess	s . st_uid		3460672	0					
ANR	3460743	Identifier	s		3460672	0					
ANR	3460744	Identifier	st_uid		3460672	1					
ANR	3460745	ExpressionStatement	STREAM_ASSERT ( code ( s . st_gid ) )	640:1:12654:12683	3460672	5	True				
ANR	3460746	CallExpression	STREAM_ASSERT ( code ( s . st_gid ) )		3460672	0					
ANR	3460747	Callee	STREAM_ASSERT		3460672	0					
ANR	3460748	Identifier	STREAM_ASSERT		3460672	0					
ANR	3460749	ArgumentList	code ( s . st_gid )		3460672	1					
ANR	3460750	Argument	code ( s . st_gid )		3460672	0					
ANR	3460751	CallExpression	code ( s . st_gid )		3460672	0					
ANR	3460752	Callee	code		3460672	0					
ANR	3460753	Identifier	code		3460672	0					
ANR	3460754	ArgumentList	s . st_gid		3460672	1					
ANR	3460755	Argument	s . st_gid		3460672	0					
ANR	3460756	MemberAccess	s . st_gid		3460672	0					
ANR	3460757	Identifier	s		3460672	0					
ANR	3460758	Identifier	st_gid		3460672	1					
ANR	3460759	ExpressionStatement	STREAM_ASSERT ( code ( s . st_rdev ) )	641:1:12686:12716	3460672	6	True				
ANR	3460760	CallExpression	STREAM_ASSERT ( code ( s . st_rdev ) )		3460672	0					
ANR	3460761	Callee	STREAM_ASSERT		3460672	0					
ANR	3460762	Identifier	STREAM_ASSERT		3460672	0					
ANR	3460763	ArgumentList	code ( s . st_rdev )		3460672	1					
ANR	3460764	Argument	code ( s . st_rdev )		3460672	0					
ANR	3460765	CallExpression	code ( s . st_rdev )		3460672	0					
ANR	3460766	Callee	code		3460672	0					
ANR	3460767	Identifier	code		3460672	0					
ANR	3460768	ArgumentList	s . st_rdev		3460672	1					
ANR	3460769	Argument	s . st_rdev		3460672	0					
ANR	3460770	MemberAccess	s . st_rdev		3460672	0					
ANR	3460771	Identifier	s		3460672	0					
ANR	3460772	Identifier	st_rdev		3460672	1					
ANR	3460773	ExpressionStatement	STREAM_ASSERT ( code ( s . st_size ) )	642:1:12719:12749	3460672	7	True				
ANR	3460774	CallExpression	STREAM_ASSERT ( code ( s . st_size ) )		3460672	0					
ANR	3460775	Callee	STREAM_ASSERT		3460672	0					
ANR	3460776	Identifier	STREAM_ASSERT		3460672	0					
ANR	3460777	ArgumentList	code ( s . st_size )		3460672	1					
ANR	3460778	Argument	code ( s . st_size )		3460672	0					
ANR	3460779	CallExpression	code ( s . st_size )		3460672	0					
ANR	3460780	Callee	code		3460672	0					
ANR	3460781	Identifier	code		3460672	0					
ANR	3460782	ArgumentList	s . st_size		3460672	1					
ANR	3460783	Argument	s . st_size		3460672	0					
ANR	3460784	MemberAccess	s . st_size		3460672	0					
ANR	3460785	Identifier	s		3460672	0					
ANR	3460786	Identifier	st_size		3460672	1					
ANR	3460787	ExpressionStatement	STREAM_ASSERT ( code ( s . st_atime ) )	643:1:12752:12783	3460672	8	True				
ANR	3460788	CallExpression	STREAM_ASSERT ( code ( s . st_atime ) )		3460672	0					
ANR	3460789	Callee	STREAM_ASSERT		3460672	0					
ANR	3460790	Identifier	STREAM_ASSERT		3460672	0					
ANR	3460791	ArgumentList	code ( s . st_atime )		3460672	1					
ANR	3460792	Argument	code ( s . st_atime )		3460672	0					
ANR	3460793	CallExpression	code ( s . st_atime )		3460672	0					
ANR	3460794	Callee	code		3460672	0					
ANR	3460795	Identifier	code		3460672	0					
ANR	3460796	ArgumentList	s . st_atime		3460672	1					
ANR	3460797	Argument	s . st_atime		3460672	0					
ANR	3460798	MemberAccess	s . st_atime		3460672	0					
ANR	3460799	Identifier	s		3460672	0					
ANR	3460800	Identifier	st_atime		3460672	1					
ANR	3460801	ExpressionStatement	STREAM_ASSERT ( code ( s . st_mtime ) )	644:1:12786:12817	3460672	9	True				
ANR	3460802	CallExpression	STREAM_ASSERT ( code ( s . st_mtime ) )		3460672	0					
ANR	3460803	Callee	STREAM_ASSERT		3460672	0					
ANR	3460804	Identifier	STREAM_ASSERT		3460672	0					
ANR	3460805	ArgumentList	code ( s . st_mtime )		3460672	1					
ANR	3460806	Argument	code ( s . st_mtime )		3460672	0					
ANR	3460807	CallExpression	code ( s . st_mtime )		3460672	0					
ANR	3460808	Callee	code		3460672	0					
ANR	3460809	Identifier	code		3460672	0					
ANR	3460810	ArgumentList	s . st_mtime		3460672	1					
ANR	3460811	Argument	s . st_mtime		3460672	0					
ANR	3460812	MemberAccess	s . st_mtime		3460672	0					
ANR	3460813	Identifier	s		3460672	0					
ANR	3460814	Identifier	st_mtime		3460672	1					
ANR	3460815	ExpressionStatement	STREAM_ASSERT ( code ( s . st_ctime ) )	645:1:12820:12851	3460672	10	True				
ANR	3460816	CallExpression	STREAM_ASSERT ( code ( s . st_ctime ) )		3460672	0					
ANR	3460817	Callee	STREAM_ASSERT		3460672	0					
ANR	3460818	Identifier	STREAM_ASSERT		3460672	0					
ANR	3460819	ArgumentList	code ( s . st_ctime )		3460672	1					
ANR	3460820	Argument	code ( s . st_ctime )		3460672	0					
ANR	3460821	CallExpression	code ( s . st_ctime )		3460672	0					
ANR	3460822	Callee	code		3460672	0					
ANR	3460823	Identifier	code		3460672	0					
ANR	3460824	ArgumentList	s . st_ctime		3460672	1					
ANR	3460825	Argument	s . st_ctime		3460672	0					
ANR	3460826	MemberAccess	s . st_ctime		3460672	0					
ANR	3460827	Identifier	s		3460672	0					
ANR	3460828	Identifier	st_ctime		3460672	1					
ANR	3460829	ExpressionStatement	STREAM_ASSERT ( code ( s . st_blksize ) )	646:1:12854:12887	3460672	11	True				
ANR	3460830	CallExpression	STREAM_ASSERT ( code ( s . st_blksize ) )		3460672	0					
ANR	3460831	Callee	STREAM_ASSERT		3460672	0					
ANR	3460832	Identifier	STREAM_ASSERT		3460672	0					
ANR	3460833	ArgumentList	code ( s . st_blksize )		3460672	1					
ANR	3460834	Argument	code ( s . st_blksize )		3460672	0					
ANR	3460835	CallExpression	code ( s . st_blksize )		3460672	0					
ANR	3460836	Callee	code		3460672	0					
ANR	3460837	Identifier	code		3460672	0					
ANR	3460838	ArgumentList	s . st_blksize		3460672	1					
ANR	3460839	Argument	s . st_blksize		3460672	0					
ANR	3460840	MemberAccess	s . st_blksize		3460672	0					
ANR	3460841	Identifier	s		3460672	0					
ANR	3460842	Identifier	st_blksize		3460672	1					
ANR	3460843	ExpressionStatement	STREAM_ASSERT ( code ( s . st_blocks ) )	647:1:12890:12922	3460672	12	True				
ANR	3460844	CallExpression	STREAM_ASSERT ( code ( s . st_blocks ) )		3460672	0					
ANR	3460845	Callee	STREAM_ASSERT		3460672	0					
ANR	3460846	Identifier	STREAM_ASSERT		3460672	0					
ANR	3460847	ArgumentList	code ( s . st_blocks )		3460672	1					
ANR	3460848	Argument	code ( s . st_blocks )		3460672	0					
ANR	3460849	CallExpression	code ( s . st_blocks )		3460672	0					
ANR	3460850	Callee	code		3460672	0					
ANR	3460851	Identifier	code		3460672	0					
ANR	3460852	ArgumentList	s . st_blocks		3460672	1					
ANR	3460853	Argument	s . st_blocks		3460672	0					
ANR	3460854	MemberAccess	s . st_blocks		3460672	0					
ANR	3460855	Identifier	s		3460672	0					
ANR	3460856	Identifier	st_blocks		3460672	1					
ANR	3460857	ReturnStatement	return TRUE ;	649:1:12926:12937	3460672	13	True				
ANR	3460858	Identifier	TRUE		3460672	0					
ANR	3460859	ReturnType	int		3460672	1					
ANR	3460860	Identifier	Stream :: code		3460672	2					
ANR	3460861	ParameterList	struct stat & s		3460672	3					
ANR	3460862	Parameter	struct stat & s	633:13:12472:12485	3460672	0	True				
ANR	3460863	ParameterType	struct stat &		3460672	0					
ANR	3460864	Identifier	s		3460672	1					
ANR	3460865	CFGEntryNode	ENTRY		3460672		True				
ANR	3460866	CFGExitNode	EXIT		3460672		True				
ANR	3460867	Symbol	s . st_dev		3460672						
ANR	3460868	Symbol	code		3460672						
ANR	3460869	Symbol	s . st_uid		3460672						
ANR	3460870	Symbol	s . st_rdev		3460672						
ANR	3460871	Symbol	s . st_atime		3460672						
ANR	3460872	Symbol	s . st_blocks		3460672						
ANR	3460873	Symbol	TRUE		3460672						
ANR	3460874	Symbol	s . st_mode		3460672						
ANR	3460875	Symbol	s . st_size		3460672						
ANR	3460876	Symbol	s . st_mtime		3460672						
ANR	3460877	Symbol	s . st_nlink		3460672						
ANR	3460878	Symbol	s . st_ctime		3460672						
ANR	3460879	Symbol	s		3460672						
ANR	3460880	Symbol	s . st_gid		3460672						
ANR	3460881	Symbol	s . st_blksize		3460672						
ANR	3460882	Symbol	s . st_ino		3460672						
ANR	3460883	Function	Stream :: code	653:0:12964:13451							
ANR	3460884	FunctionDef	Stream :: code (struct stat64 & s)		3460883	0					
ANR	3460885	CompoundStatement		655:0:13000:13451	3460883	0					
ANR	3460886	ExpressionStatement	STREAM_ASSERT ( code ( s . st_dev ) )	656:1:13003:13032	3460883	0	True				
ANR	3460887	CallExpression	STREAM_ASSERT ( code ( s . st_dev ) )		3460883	0					
ANR	3460888	Callee	STREAM_ASSERT		3460883	0					
ANR	3460889	Identifier	STREAM_ASSERT		3460883	0					
ANR	3460890	ArgumentList	code ( s . st_dev )		3460883	1					
ANR	3460891	Argument	code ( s . st_dev )		3460883	0					
ANR	3460892	CallExpression	code ( s . st_dev )		3460883	0					
ANR	3460893	Callee	code		3460883	0					
ANR	3460894	Identifier	code		3460883	0					
ANR	3460895	ArgumentList	s . st_dev		3460883	1					
ANR	3460896	Argument	s . st_dev		3460883	0					
ANR	3460897	MemberAccess	s . st_dev		3460883	0					
ANR	3460898	Identifier	s		3460883	0					
ANR	3460899	Identifier	st_dev		3460883	1					
ANR	3460900	ExpressionStatement	STREAM_ASSERT ( code ( s . st_ino ) )	657:1:13035:13064	3460883	1	True				
ANR	3460901	CallExpression	STREAM_ASSERT ( code ( s . st_ino ) )		3460883	0					
ANR	3460902	Callee	STREAM_ASSERT		3460883	0					
ANR	3460903	Identifier	STREAM_ASSERT		3460883	0					
ANR	3460904	ArgumentList	code ( s . st_ino )		3460883	1					
ANR	3460905	Argument	code ( s . st_ino )		3460883	0					
ANR	3460906	CallExpression	code ( s . st_ino )		3460883	0					
ANR	3460907	Callee	code		3460883	0					
ANR	3460908	Identifier	code		3460883	0					
ANR	3460909	ArgumentList	s . st_ino		3460883	1					
ANR	3460910	Argument	s . st_ino		3460883	0					
ANR	3460911	MemberAccess	s . st_ino		3460883	0					
ANR	3460912	Identifier	s		3460883	0					
ANR	3460913	Identifier	st_ino		3460883	1					
ANR	3460914	ExpressionStatement	STREAM_ASSERT ( code ( s . st_mode ) )	658:1:13067:13097	3460883	2	True				
ANR	3460915	CallExpression	STREAM_ASSERT ( code ( s . st_mode ) )		3460883	0					
ANR	3460916	Callee	STREAM_ASSERT		3460883	0					
ANR	3460917	Identifier	STREAM_ASSERT		3460883	0					
ANR	3460918	ArgumentList	code ( s . st_mode )		3460883	1					
ANR	3460919	Argument	code ( s . st_mode )		3460883	0					
ANR	3460920	CallExpression	code ( s . st_mode )		3460883	0					
ANR	3460921	Callee	code		3460883	0					
ANR	3460922	Identifier	code		3460883	0					
ANR	3460923	ArgumentList	s . st_mode		3460883	1					
ANR	3460924	Argument	s . st_mode		3460883	0					
ANR	3460925	MemberAccess	s . st_mode		3460883	0					
ANR	3460926	Identifier	s		3460883	0					
ANR	3460927	Identifier	st_mode		3460883	1					
ANR	3460928	ExpressionStatement	STREAM_ASSERT ( code ( s . st_nlink ) )	659:1:13100:13131	3460883	3	True				
ANR	3460929	CallExpression	STREAM_ASSERT ( code ( s . st_nlink ) )		3460883	0					
ANR	3460930	Callee	STREAM_ASSERT		3460883	0					
ANR	3460931	Identifier	STREAM_ASSERT		3460883	0					
ANR	3460932	ArgumentList	code ( s . st_nlink )		3460883	1					
ANR	3460933	Argument	code ( s . st_nlink )		3460883	0					
ANR	3460934	CallExpression	code ( s . st_nlink )		3460883	0					
ANR	3460935	Callee	code		3460883	0					
ANR	3460936	Identifier	code		3460883	0					
ANR	3460937	ArgumentList	s . st_nlink		3460883	1					
ANR	3460938	Argument	s . st_nlink		3460883	0					
ANR	3460939	MemberAccess	s . st_nlink		3460883	0					
ANR	3460940	Identifier	s		3460883	0					
ANR	3460941	Identifier	st_nlink		3460883	1					
ANR	3460942	ExpressionStatement	STREAM_ASSERT ( code ( s . st_uid ) )	660:1:13134:13163	3460883	4	True				
ANR	3460943	CallExpression	STREAM_ASSERT ( code ( s . st_uid ) )		3460883	0					
ANR	3460944	Callee	STREAM_ASSERT		3460883	0					
ANR	3460945	Identifier	STREAM_ASSERT		3460883	0					
ANR	3460946	ArgumentList	code ( s . st_uid )		3460883	1					
ANR	3460947	Argument	code ( s . st_uid )		3460883	0					
ANR	3460948	CallExpression	code ( s . st_uid )		3460883	0					
ANR	3460949	Callee	code		3460883	0					
ANR	3460950	Identifier	code		3460883	0					
ANR	3460951	ArgumentList	s . st_uid		3460883	1					
ANR	3460952	Argument	s . st_uid		3460883	0					
ANR	3460953	MemberAccess	s . st_uid		3460883	0					
ANR	3460954	Identifier	s		3460883	0					
ANR	3460955	Identifier	st_uid		3460883	1					
ANR	3460956	ExpressionStatement	STREAM_ASSERT ( code ( s . st_gid ) )	661:1:13166:13195	3460883	5	True				
ANR	3460957	CallExpression	STREAM_ASSERT ( code ( s . st_gid ) )		3460883	0					
ANR	3460958	Callee	STREAM_ASSERT		3460883	0					
ANR	3460959	Identifier	STREAM_ASSERT		3460883	0					
ANR	3460960	ArgumentList	code ( s . st_gid )		3460883	1					
ANR	3460961	Argument	code ( s . st_gid )		3460883	0					
ANR	3460962	CallExpression	code ( s . st_gid )		3460883	0					
ANR	3460963	Callee	code		3460883	0					
ANR	3460964	Identifier	code		3460883	0					
ANR	3460965	ArgumentList	s . st_gid		3460883	1					
ANR	3460966	Argument	s . st_gid		3460883	0					
ANR	3460967	MemberAccess	s . st_gid		3460883	0					
ANR	3460968	Identifier	s		3460883	0					
ANR	3460969	Identifier	st_gid		3460883	1					
ANR	3460970	ExpressionStatement	STREAM_ASSERT ( code ( s . st_rdev ) )	662:1:13198:13228	3460883	6	True				
ANR	3460971	CallExpression	STREAM_ASSERT ( code ( s . st_rdev ) )		3460883	0					
ANR	3460972	Callee	STREAM_ASSERT		3460883	0					
ANR	3460973	Identifier	STREAM_ASSERT		3460883	0					
ANR	3460974	ArgumentList	code ( s . st_rdev )		3460883	1					
ANR	3460975	Argument	code ( s . st_rdev )		3460883	0					
ANR	3460976	CallExpression	code ( s . st_rdev )		3460883	0					
ANR	3460977	Callee	code		3460883	0					
ANR	3460978	Identifier	code		3460883	0					
ANR	3460979	ArgumentList	s . st_rdev		3460883	1					
ANR	3460980	Argument	s . st_rdev		3460883	0					
ANR	3460981	MemberAccess	s . st_rdev		3460883	0					
ANR	3460982	Identifier	s		3460883	0					
ANR	3460983	Identifier	st_rdev		3460883	1					
ANR	3460984	ExpressionStatement	STREAM_ASSERT ( code ( s . st_size ) )	663:1:13231:13261	3460883	7	True				
ANR	3460985	CallExpression	STREAM_ASSERT ( code ( s . st_size ) )		3460883	0					
ANR	3460986	Callee	STREAM_ASSERT		3460883	0					
ANR	3460987	Identifier	STREAM_ASSERT		3460883	0					
ANR	3460988	ArgumentList	code ( s . st_size )		3460883	1					
ANR	3460989	Argument	code ( s . st_size )		3460883	0					
ANR	3460990	CallExpression	code ( s . st_size )		3460883	0					
ANR	3460991	Callee	code		3460883	0					
ANR	3460992	Identifier	code		3460883	0					
ANR	3460993	ArgumentList	s . st_size		3460883	1					
ANR	3460994	Argument	s . st_size		3460883	0					
ANR	3460995	MemberAccess	s . st_size		3460883	0					
ANR	3460996	Identifier	s		3460883	0					
ANR	3460997	Identifier	st_size		3460883	1					
ANR	3460998	ExpressionStatement	STREAM_ASSERT ( code ( s . st_atime ) )	664:1:13264:13295	3460883	8	True				
ANR	3460999	CallExpression	STREAM_ASSERT ( code ( s . st_atime ) )		3460883	0					
ANR	3461000	Callee	STREAM_ASSERT		3460883	0					
ANR	3461001	Identifier	STREAM_ASSERT		3460883	0					
ANR	3461002	ArgumentList	code ( s . st_atime )		3460883	1					
ANR	3461003	Argument	code ( s . st_atime )		3460883	0					
ANR	3461004	CallExpression	code ( s . st_atime )		3460883	0					
ANR	3461005	Callee	code		3460883	0					
ANR	3461006	Identifier	code		3460883	0					
ANR	3461007	ArgumentList	s . st_atime		3460883	1					
ANR	3461008	Argument	s . st_atime		3460883	0					
ANR	3461009	MemberAccess	s . st_atime		3460883	0					
ANR	3461010	Identifier	s		3460883	0					
ANR	3461011	Identifier	st_atime		3460883	1					
ANR	3461012	ExpressionStatement	STREAM_ASSERT ( code ( s . st_mtime ) )	665:1:13298:13329	3460883	9	True				
ANR	3461013	CallExpression	STREAM_ASSERT ( code ( s . st_mtime ) )		3460883	0					
ANR	3461014	Callee	STREAM_ASSERT		3460883	0					
ANR	3461015	Identifier	STREAM_ASSERT		3460883	0					
ANR	3461016	ArgumentList	code ( s . st_mtime )		3460883	1					
ANR	3461017	Argument	code ( s . st_mtime )		3460883	0					
ANR	3461018	CallExpression	code ( s . st_mtime )		3460883	0					
ANR	3461019	Callee	code		3460883	0					
ANR	3461020	Identifier	code		3460883	0					
ANR	3461021	ArgumentList	s . st_mtime		3460883	1					
ANR	3461022	Argument	s . st_mtime		3460883	0					
ANR	3461023	MemberAccess	s . st_mtime		3460883	0					
ANR	3461024	Identifier	s		3460883	0					
ANR	3461025	Identifier	st_mtime		3460883	1					
ANR	3461026	ExpressionStatement	STREAM_ASSERT ( code ( s . st_ctime ) )	666:1:13332:13363	3460883	10	True				
ANR	3461027	CallExpression	STREAM_ASSERT ( code ( s . st_ctime ) )		3460883	0					
ANR	3461028	Callee	STREAM_ASSERT		3460883	0					
ANR	3461029	Identifier	STREAM_ASSERT		3460883	0					
ANR	3461030	ArgumentList	code ( s . st_ctime )		3460883	1					
ANR	3461031	Argument	code ( s . st_ctime )		3460883	0					
ANR	3461032	CallExpression	code ( s . st_ctime )		3460883	0					
ANR	3461033	Callee	code		3460883	0					
ANR	3461034	Identifier	code		3460883	0					
ANR	3461035	ArgumentList	s . st_ctime		3460883	1					
ANR	3461036	Argument	s . st_ctime		3460883	0					
ANR	3461037	MemberAccess	s . st_ctime		3460883	0					
ANR	3461038	Identifier	s		3460883	0					
ANR	3461039	Identifier	st_ctime		3460883	1					
ANR	3461040	ExpressionStatement	STREAM_ASSERT ( code ( s . st_blksize ) )	667:1:13366:13399	3460883	11	True				
ANR	3461041	CallExpression	STREAM_ASSERT ( code ( s . st_blksize ) )		3460883	0					
ANR	3461042	Callee	STREAM_ASSERT		3460883	0					
ANR	3461043	Identifier	STREAM_ASSERT		3460883	0					
ANR	3461044	ArgumentList	code ( s . st_blksize )		3460883	1					
ANR	3461045	Argument	code ( s . st_blksize )		3460883	0					
ANR	3461046	CallExpression	code ( s . st_blksize )		3460883	0					
ANR	3461047	Callee	code		3460883	0					
ANR	3461048	Identifier	code		3460883	0					
ANR	3461049	ArgumentList	s . st_blksize		3460883	1					
ANR	3461050	Argument	s . st_blksize		3460883	0					
ANR	3461051	MemberAccess	s . st_blksize		3460883	0					
ANR	3461052	Identifier	s		3460883	0					
ANR	3461053	Identifier	st_blksize		3460883	1					
ANR	3461054	ExpressionStatement	STREAM_ASSERT ( code ( s . st_blocks ) )	668:1:13402:13434	3460883	12	True				
ANR	3461055	CallExpression	STREAM_ASSERT ( code ( s . st_blocks ) )		3460883	0					
ANR	3461056	Callee	STREAM_ASSERT		3460883	0					
ANR	3461057	Identifier	STREAM_ASSERT		3460883	0					
ANR	3461058	ArgumentList	code ( s . st_blocks )		3460883	1					
ANR	3461059	Argument	code ( s . st_blocks )		3460883	0					
ANR	3461060	CallExpression	code ( s . st_blocks )		3460883	0					
ANR	3461061	Callee	code		3460883	0					
ANR	3461062	Identifier	code		3460883	0					
ANR	3461063	ArgumentList	s . st_blocks		3460883	1					
ANR	3461064	Argument	s . st_blocks		3460883	0					
ANR	3461065	MemberAccess	s . st_blocks		3460883	0					
ANR	3461066	Identifier	s		3460883	0					
ANR	3461067	Identifier	st_blocks		3460883	1					
ANR	3461068	ReturnStatement	return TRUE ;	670:1:13438:13449	3460883	13	True				
ANR	3461069	Identifier	TRUE		3460883	0					
ANR	3461070	ReturnType	int		3460883	1					
ANR	3461071	Identifier	Stream :: code		3460883	2					
ANR	3461072	ParameterList	struct stat64 & s		3460883	3					
ANR	3461073	Parameter	struct stat64 & s	654:13:12982:12997	3460883	0	True				
ANR	3461074	ParameterType	struct stat64 &		3460883	0					
ANR	3461075	Identifier	s		3460883	1					
ANR	3461076	CFGEntryNode	ENTRY		3460883		True				
ANR	3461077	CFGExitNode	EXIT		3460883		True				
ANR	3461078	Symbol	s . st_dev		3460883						
ANR	3461079	Symbol	code		3460883						
ANR	3461080	Symbol	s . st_uid		3460883						
ANR	3461081	Symbol	s . st_rdev		3460883						
ANR	3461082	Symbol	s . st_atime		3460883						
ANR	3461083	Symbol	s . st_blocks		3460883						
ANR	3461084	Symbol	TRUE		3460883						
ANR	3461085	Symbol	s . st_mode		3460883						
ANR	3461086	Symbol	s . st_size		3460883						
ANR	3461087	Symbol	s . st_mtime		3460883						
ANR	3461088	Symbol	s . st_nlink		3460883						
ANR	3461089	Symbol	s . st_ctime		3460883						
ANR	3461090	Symbol	s		3460883						
ANR	3461091	Symbol	s . st_gid		3460883						
ANR	3461092	Symbol	s . st_blksize		3460883						
ANR	3461093	Symbol	s . st_ino		3460883						
ANR	3461094	Function	Stream :: code	673:0:13454:13580							
ANR	3461095	FunctionDef	Stream :: code (struct rlimit64 & rl)		3461094	0					
ANR	3461096	CompoundStatement		675:0:13493:13580	3461094	0					
ANR	3461097	ExpressionStatement	STREAM_ASSERT ( code ( rl . rlim_cur ) )	676:1:13496:13528	3461094	0	True				
ANR	3461098	CallExpression	STREAM_ASSERT ( code ( rl . rlim_cur ) )		3461094	0					
ANR	3461099	Callee	STREAM_ASSERT		3461094	0					
ANR	3461100	Identifier	STREAM_ASSERT		3461094	0					
ANR	3461101	ArgumentList	code ( rl . rlim_cur )		3461094	1					
ANR	3461102	Argument	code ( rl . rlim_cur )		3461094	0					
ANR	3461103	CallExpression	code ( rl . rlim_cur )		3461094	0					
ANR	3461104	Callee	code		3461094	0					
ANR	3461105	Identifier	code		3461094	0					
ANR	3461106	ArgumentList	rl . rlim_cur		3461094	1					
ANR	3461107	Argument	rl . rlim_cur		3461094	0					
ANR	3461108	MemberAccess	rl . rlim_cur		3461094	0					
ANR	3461109	Identifier	rl		3461094	0					
ANR	3461110	Identifier	rlim_cur		3461094	1					
ANR	3461111	ExpressionStatement	STREAM_ASSERT ( code ( rl . rlim_max ) )	677:1:13531:13563	3461094	1	True				
ANR	3461112	CallExpression	STREAM_ASSERT ( code ( rl . rlim_max ) )		3461094	0					
ANR	3461113	Callee	STREAM_ASSERT		3461094	0					
ANR	3461114	Identifier	STREAM_ASSERT		3461094	0					
ANR	3461115	ArgumentList	code ( rl . rlim_max )		3461094	1					
ANR	3461116	Argument	code ( rl . rlim_max )		3461094	0					
ANR	3461117	CallExpression	code ( rl . rlim_max )		3461094	0					
ANR	3461118	Callee	code		3461094	0					
ANR	3461119	Identifier	code		3461094	0					
ANR	3461120	ArgumentList	rl . rlim_max		3461094	1					
ANR	3461121	Argument	rl . rlim_max		3461094	0					
ANR	3461122	MemberAccess	rl . rlim_max		3461094	0					
ANR	3461123	Identifier	rl		3461094	0					
ANR	3461124	Identifier	rlim_max		3461094	1					
ANR	3461125	ReturnStatement	return TRUE ;	679:1:13567:13578	3461094	2	True				
ANR	3461126	Identifier	TRUE		3461094	0					
ANR	3461127	ReturnType	int		3461094	1					
ANR	3461128	Identifier	Stream :: code		3461094	2					
ANR	3461129	ParameterList	struct rlimit64 & rl		3461094	3					
ANR	3461130	Parameter	struct rlimit64 & rl	674:13:13472:13490	3461094	0	True				
ANR	3461131	ParameterType	struct rlimit64 &		3461094	0					
ANR	3461132	Identifier	rl		3461094	1					
ANR	3461133	CFGEntryNode	ENTRY		3461094		True				
ANR	3461134	CFGExitNode	EXIT		3461094		True				
ANR	3461135	Symbol	code		3461094						
ANR	3461136	Symbol	rl . rlim_cur		3461094						
ANR	3461137	Symbol	TRUE		3461094						
ANR	3461138	Symbol	rl		3461094						
ANR	3461139	Symbol	rl . rlim_max		3461094						
ANR	3461140	Function	Stream :: code	684:0:13615:14060							
ANR	3461141	FunctionDef	Stream :: code (struct statfs & s)		3461140	0					
ANR	3461142	CompoundStatement		686:0:13651:14060	3461140	0					
ANR	3461143	IfStatement	if ( _coding == stream_decode )		3461140	0					
ANR	3461144	Condition	_coding == stream_decode	687:5:13658:13681	3461140	0	True				
ANR	3461145	EqualityExpression	_coding == stream_decode		3461140	0		==			
ANR	3461146	Identifier	_coding		3461140	0					
ANR	3461147	Identifier	stream_decode		3461140	1					
ANR	3461148	CompoundStatement		3:1:33:33	3461140	1					
ANR	3461149	ExpressionStatement	"memset ( & s , 0 , sizeof ( struct statfs ) )"	690:2:13735:13771	3461140	0	True				
ANR	3461150	CallExpression	"memset ( & s , 0 , sizeof ( struct statfs ) )"		3461140	0					
ANR	3461151	Callee	memset		3461140	0					
ANR	3461152	Identifier	memset		3461140	0					
ANR	3461153	ArgumentList	& s		3461140	1					
ANR	3461154	Argument	& s		3461140	0					
ANR	3461155	UnaryOperationExpression	& s		3461140	0					
ANR	3461156	UnaryOperator	&		3461140	0					
ANR	3461157	Identifier	s		3461140	1					
ANR	3461158	Argument	0		3461140	1					
ANR	3461159	PrimaryExpression	0		3461140	0					
ANR	3461160	Argument	sizeof ( struct statfs )		3461140	2					
ANR	3461161	SizeofExpression	sizeof ( struct statfs )		3461140	0					
ANR	3461162	Sizeof	sizeof		3461140	0					
ANR	3461163	SizeofOperand	struct statfs		3461140	1					
ANR	3461164	ExpressionStatement	STREAM_ASSERT ( code ( s . f_bsize ) )	693:1:13778:13808	3461140	1	True				
ANR	3461165	CallExpression	STREAM_ASSERT ( code ( s . f_bsize ) )		3461140	0					
ANR	3461166	Callee	STREAM_ASSERT		3461140	0					
ANR	3461167	Identifier	STREAM_ASSERT		3461140	0					
ANR	3461168	ArgumentList	code ( s . f_bsize )		3461140	1					
ANR	3461169	Argument	code ( s . f_bsize )		3461140	0					
ANR	3461170	CallExpression	code ( s . f_bsize )		3461140	0					
ANR	3461171	Callee	code		3461140	0					
ANR	3461172	Identifier	code		3461140	0					
ANR	3461173	ArgumentList	s . f_bsize		3461140	1					
ANR	3461174	Argument	s . f_bsize		3461140	0					
ANR	3461175	MemberAccess	s . f_bsize		3461140	0					
ANR	3461176	Identifier	s		3461140	0					
ANR	3461177	Identifier	f_bsize		3461140	1					
ANR	3461178	ExpressionStatement	STREAM_ASSERT ( code ( s . f_blocks ) )	694:1:13811:13842	3461140	2	True				
ANR	3461179	CallExpression	STREAM_ASSERT ( code ( s . f_blocks ) )		3461140	0					
ANR	3461180	Callee	STREAM_ASSERT		3461140	0					
ANR	3461181	Identifier	STREAM_ASSERT		3461140	0					
ANR	3461182	ArgumentList	code ( s . f_blocks )		3461140	1					
ANR	3461183	Argument	code ( s . f_blocks )		3461140	0					
ANR	3461184	CallExpression	code ( s . f_blocks )		3461140	0					
ANR	3461185	Callee	code		3461140	0					
ANR	3461186	Identifier	code		3461140	0					
ANR	3461187	ArgumentList	s . f_blocks		3461140	1					
ANR	3461188	Argument	s . f_blocks		3461140	0					
ANR	3461189	MemberAccess	s . f_blocks		3461140	0					
ANR	3461190	Identifier	s		3461140	0					
ANR	3461191	Identifier	f_blocks		3461140	1					
ANR	3461192	ExpressionStatement	STREAM_ASSERT ( code ( s . f_bfree ) )	695:1:13845:13875	3461140	3	True				
ANR	3461193	CallExpression	STREAM_ASSERT ( code ( s . f_bfree ) )		3461140	0					
ANR	3461194	Callee	STREAM_ASSERT		3461140	0					
ANR	3461195	Identifier	STREAM_ASSERT		3461140	0					
ANR	3461196	ArgumentList	code ( s . f_bfree )		3461140	1					
ANR	3461197	Argument	code ( s . f_bfree )		3461140	0					
ANR	3461198	CallExpression	code ( s . f_bfree )		3461140	0					
ANR	3461199	Callee	code		3461140	0					
ANR	3461200	Identifier	code		3461140	0					
ANR	3461201	ArgumentList	s . f_bfree		3461140	1					
ANR	3461202	Argument	s . f_bfree		3461140	0					
ANR	3461203	MemberAccess	s . f_bfree		3461140	0					
ANR	3461204	Identifier	s		3461140	0					
ANR	3461205	Identifier	f_bfree		3461140	1					
ANR	3461206	ExpressionStatement	STREAM_ASSERT ( code ( s . f_files ) )	696:1:13878:13908	3461140	4	True				
ANR	3461207	CallExpression	STREAM_ASSERT ( code ( s . f_files ) )		3461140	0					
ANR	3461208	Callee	STREAM_ASSERT		3461140	0					
ANR	3461209	Identifier	STREAM_ASSERT		3461140	0					
ANR	3461210	ArgumentList	code ( s . f_files )		3461140	1					
ANR	3461211	Argument	code ( s . f_files )		3461140	0					
ANR	3461212	CallExpression	code ( s . f_files )		3461140	0					
ANR	3461213	Callee	code		3461140	0					
ANR	3461214	Identifier	code		3461140	0					
ANR	3461215	ArgumentList	s . f_files		3461140	1					
ANR	3461216	Argument	s . f_files		3461140	0					
ANR	3461217	MemberAccess	s . f_files		3461140	0					
ANR	3461218	Identifier	s		3461140	0					
ANR	3461219	Identifier	f_files		3461140	1					
ANR	3461220	ExpressionStatement	STREAM_ASSERT ( code ( s . f_ffree ) )	697:1:13911:13941	3461140	5	True				
ANR	3461221	CallExpression	STREAM_ASSERT ( code ( s . f_ffree ) )		3461140	0					
ANR	3461222	Callee	STREAM_ASSERT		3461140	0					
ANR	3461223	Identifier	STREAM_ASSERT		3461140	0					
ANR	3461224	ArgumentList	code ( s . f_ffree )		3461140	1					
ANR	3461225	Argument	code ( s . f_ffree )		3461140	0					
ANR	3461226	CallExpression	code ( s . f_ffree )		3461140	0					
ANR	3461227	Callee	code		3461140	0					
ANR	3461228	Identifier	code		3461140	0					
ANR	3461229	ArgumentList	s . f_ffree		3461140	1					
ANR	3461230	Argument	s . f_ffree		3461140	0					
ANR	3461231	MemberAccess	s . f_ffree		3461140	0					
ANR	3461232	Identifier	s		3461140	0					
ANR	3461233	Identifier	f_ffree		3461140	1					
ANR	3461234	ExpressionStatement	STREAM_ASSERT ( code ( s . f_bfree ) )	700:1:13966:13996	3461140	6	True				
ANR	3461235	CallExpression	STREAM_ASSERT ( code ( s . f_bfree ) )		3461140	0					
ANR	3461236	Callee	STREAM_ASSERT		3461140	0					
ANR	3461237	Identifier	STREAM_ASSERT		3461140	0					
ANR	3461238	ArgumentList	code ( s . f_bfree )		3461140	1					
ANR	3461239	Argument	code ( s . f_bfree )		3461140	0					
ANR	3461240	CallExpression	code ( s . f_bfree )		3461140	0					
ANR	3461241	Callee	code		3461140	0					
ANR	3461242	Identifier	code		3461140	0					
ANR	3461243	ArgumentList	s . f_bfree		3461140	1					
ANR	3461244	Argument	s . f_bfree		3461140	0					
ANR	3461245	MemberAccess	s . f_bfree		3461140	0					
ANR	3461246	Identifier	s		3461140	0					
ANR	3461247	Identifier	f_bfree		3461140	1					
ANR	3461248	ReturnStatement	return TRUE ;	705:1:14047:14058	3461140	7	True				
ANR	3461249	Identifier	TRUE		3461140	0					
ANR	3461250	ReturnType	int		3461140	1					
ANR	3461251	Identifier	Stream :: code		3461140	2					
ANR	3461252	ParameterList	struct statfs & s		3461140	3					
ANR	3461253	Parameter	struct statfs & s	685:13:13633:13648	3461140	0	True				
ANR	3461254	ParameterType	struct statfs &		3461140	0					
ANR	3461255	Identifier	s		3461140	1					
ANR	3461256	CFGEntryNode	ENTRY		3461140		True				
ANR	3461257	CFGExitNode	EXIT		3461140		True				
ANR	3461258	Symbol	stream_decode		3461140						
ANR	3461259	Symbol	_coding		3461140						
ANR	3461260	Symbol	s . f_blocks		3461140						
ANR	3461261	Symbol	s		3461140						
ANR	3461262	Symbol	code		3461140						
ANR	3461263	Symbol	s . f_bsize		3461140						
ANR	3461264	Symbol	& s		3461140						
ANR	3461265	Symbol	TRUE		3461140						
ANR	3461266	Symbol	s . f_ffree		3461140						
ANR	3461267	Symbol	s . f_files		3461140						
ANR	3461268	Symbol	s . f_bfree		3461140						
ANR	3461269	Function	Stream :: code	708:0:14063:14197							
ANR	3461270	FunctionDef	Stream :: code (struct timezone & tz)		3461269	0					
ANR	3461271	CompoundStatement		710:0:14102:14197	3461269	0					
ANR	3461272	ExpressionStatement	STREAM_ASSERT ( code ( tz . tz_minuteswest ) )	711:1:14105:14143	3461269	0	True				
ANR	3461273	CallExpression	STREAM_ASSERT ( code ( tz . tz_minuteswest ) )		3461269	0					
ANR	3461274	Callee	STREAM_ASSERT		3461269	0					
ANR	3461275	Identifier	STREAM_ASSERT		3461269	0					
ANR	3461276	ArgumentList	code ( tz . tz_minuteswest )		3461269	1					
ANR	3461277	Argument	code ( tz . tz_minuteswest )		3461269	0					
ANR	3461278	CallExpression	code ( tz . tz_minuteswest )		3461269	0					
ANR	3461279	Callee	code		3461269	0					
ANR	3461280	Identifier	code		3461269	0					
ANR	3461281	ArgumentList	tz . tz_minuteswest		3461269	1					
ANR	3461282	Argument	tz . tz_minuteswest		3461269	0					
ANR	3461283	MemberAccess	tz . tz_minuteswest		3461269	0					
ANR	3461284	Identifier	tz		3461269	0					
ANR	3461285	Identifier	tz_minuteswest		3461269	1					
ANR	3461286	ExpressionStatement	STREAM_ASSERT ( code ( tz . tz_dsttime ) )	712:1:14146:14180	3461269	1	True				
ANR	3461287	CallExpression	STREAM_ASSERT ( code ( tz . tz_dsttime ) )		3461269	0					
ANR	3461288	Callee	STREAM_ASSERT		3461269	0					
ANR	3461289	Identifier	STREAM_ASSERT		3461269	0					
ANR	3461290	ArgumentList	code ( tz . tz_dsttime )		3461269	1					
ANR	3461291	Argument	code ( tz . tz_dsttime )		3461269	0					
ANR	3461292	CallExpression	code ( tz . tz_dsttime )		3461269	0					
ANR	3461293	Callee	code		3461269	0					
ANR	3461294	Identifier	code		3461269	0					
ANR	3461295	ArgumentList	tz . tz_dsttime		3461269	1					
ANR	3461296	Argument	tz . tz_dsttime		3461269	0					
ANR	3461297	MemberAccess	tz . tz_dsttime		3461269	0					
ANR	3461298	Identifier	tz		3461269	0					
ANR	3461299	Identifier	tz_dsttime		3461269	1					
ANR	3461300	ReturnStatement	return TRUE ;	714:1:14184:14195	3461269	2	True				
ANR	3461301	Identifier	TRUE		3461269	0					
ANR	3461302	ReturnType	int		3461269	1					
ANR	3461303	Identifier	Stream :: code		3461269	2					
ANR	3461304	ParameterList	struct timezone & tz		3461269	3					
ANR	3461305	Parameter	struct timezone & tz	709:13:14081:14099	3461269	0	True				
ANR	3461306	ParameterType	struct timezone &		3461269	0					
ANR	3461307	Identifier	tz		3461269	1					
ANR	3461308	CFGEntryNode	ENTRY		3461269		True				
ANR	3461309	CFGExitNode	EXIT		3461269		True				
ANR	3461310	Symbol	code		3461269						
ANR	3461311	Symbol	tz		3461269						
ANR	3461312	Symbol	TRUE		3461269						
ANR	3461313	Symbol	tz . tz_minuteswest		3461269						
ANR	3461314	Symbol	tz . tz_dsttime		3461269						
ANR	3461315	Function	Stream :: code	717:0:14200:14322							
ANR	3461316	FunctionDef	Stream :: code (struct timeval & tv)		3461315	0					
ANR	3461317	CompoundStatement		719:0:14238:14322	3461315	0					
ANR	3461318	ExpressionStatement	STREAM_ASSERT ( code ( tv . tv_sec ) )	720:1:14241:14271	3461315	0	True				
ANR	3461319	CallExpression	STREAM_ASSERT ( code ( tv . tv_sec ) )		3461315	0					
ANR	3461320	Callee	STREAM_ASSERT		3461315	0					
ANR	3461321	Identifier	STREAM_ASSERT		3461315	0					
ANR	3461322	ArgumentList	code ( tv . tv_sec )		3461315	1					
ANR	3461323	Argument	code ( tv . tv_sec )		3461315	0					
ANR	3461324	CallExpression	code ( tv . tv_sec )		3461315	0					
ANR	3461325	Callee	code		3461315	0					
ANR	3461326	Identifier	code		3461315	0					
ANR	3461327	ArgumentList	tv . tv_sec		3461315	1					
ANR	3461328	Argument	tv . tv_sec		3461315	0					
ANR	3461329	MemberAccess	tv . tv_sec		3461315	0					
ANR	3461330	Identifier	tv		3461315	0					
ANR	3461331	Identifier	tv_sec		3461315	1					
ANR	3461332	ExpressionStatement	STREAM_ASSERT ( code ( tv . tv_usec ) )	721:1:14274:14305	3461315	1	True				
ANR	3461333	CallExpression	STREAM_ASSERT ( code ( tv . tv_usec ) )		3461315	0					
ANR	3461334	Callee	STREAM_ASSERT		3461315	0					
ANR	3461335	Identifier	STREAM_ASSERT		3461315	0					
ANR	3461336	ArgumentList	code ( tv . tv_usec )		3461315	1					
ANR	3461337	Argument	code ( tv . tv_usec )		3461315	0					
ANR	3461338	CallExpression	code ( tv . tv_usec )		3461315	0					
ANR	3461339	Callee	code		3461315	0					
ANR	3461340	Identifier	code		3461315	0					
ANR	3461341	ArgumentList	tv . tv_usec		3461315	1					
ANR	3461342	Argument	tv . tv_usec		3461315	0					
ANR	3461343	MemberAccess	tv . tv_usec		3461315	0					
ANR	3461344	Identifier	tv		3461315	0					
ANR	3461345	Identifier	tv_usec		3461315	1					
ANR	3461346	ReturnStatement	return TRUE ;	723:1:14309:14320	3461315	2	True				
ANR	3461347	Identifier	TRUE		3461315	0					
ANR	3461348	ReturnType	int		3461315	1					
ANR	3461349	Identifier	Stream :: code		3461315	2					
ANR	3461350	ParameterList	struct timeval & tv		3461315	3					
ANR	3461351	Parameter	struct timeval & tv	718:13:14218:14235	3461315	0	True				
ANR	3461352	ParameterType	struct timeval &		3461315	0					
ANR	3461353	Identifier	tv		3461315	1					
ANR	3461354	CFGEntryNode	ENTRY		3461315		True				
ANR	3461355	CFGExitNode	EXIT		3461315		True				
ANR	3461356	Symbol	tv . tv_sec		3461315						
ANR	3461357	Symbol	tv . tv_usec		3461315						
ANR	3461358	Symbol	tv		3461315						
ANR	3461359	Symbol	code		3461315						
ANR	3461360	Symbol	TRUE		3461315						
ANR	3461361	Function	Stream :: code	726:0:14326:14447							
ANR	3461362	FunctionDef	Stream :: code (struct utimbuf & ut)		3461361	0					
ANR	3461363	CompoundStatement		728:0:14363:14447	3461361	0					
ANR	3461364	ExpressionStatement	STREAM_ASSERT ( code ( ut . actime ) )	729:1:14366:14396	3461361	0	True				
ANR	3461365	CallExpression	STREAM_ASSERT ( code ( ut . actime ) )		3461361	0					
ANR	3461366	Callee	STREAM_ASSERT		3461361	0					
ANR	3461367	Identifier	STREAM_ASSERT		3461361	0					
ANR	3461368	ArgumentList	code ( ut . actime )		3461361	1					
ANR	3461369	Argument	code ( ut . actime )		3461361	0					
ANR	3461370	CallExpression	code ( ut . actime )		3461361	0					
ANR	3461371	Callee	code		3461361	0					
ANR	3461372	Identifier	code		3461361	0					
ANR	3461373	ArgumentList	ut . actime		3461361	1					
ANR	3461374	Argument	ut . actime		3461361	0					
ANR	3461375	MemberAccess	ut . actime		3461361	0					
ANR	3461376	Identifier	ut		3461361	0					
ANR	3461377	Identifier	actime		3461361	1					
ANR	3461378	ExpressionStatement	STREAM_ASSERT ( code ( ut . modtime ) )	730:1:14399:14430	3461361	1	True				
ANR	3461379	CallExpression	STREAM_ASSERT ( code ( ut . modtime ) )		3461361	0					
ANR	3461380	Callee	STREAM_ASSERT		3461361	0					
ANR	3461381	Identifier	STREAM_ASSERT		3461361	0					
ANR	3461382	ArgumentList	code ( ut . modtime )		3461361	1					
ANR	3461383	Argument	code ( ut . modtime )		3461361	0					
ANR	3461384	CallExpression	code ( ut . modtime )		3461361	0					
ANR	3461385	Callee	code		3461361	0					
ANR	3461386	Identifier	code		3461361	0					
ANR	3461387	ArgumentList	ut . modtime		3461361	1					
ANR	3461388	Argument	ut . modtime		3461361	0					
ANR	3461389	MemberAccess	ut . modtime		3461361	0					
ANR	3461390	Identifier	ut		3461361	0					
ANR	3461391	Identifier	modtime		3461361	1					
ANR	3461392	ReturnStatement	return TRUE ;	732:1:14434:14445	3461361	2	True				
ANR	3461393	Identifier	TRUE		3461361	0					
ANR	3461394	ReturnType	int		3461361	1					
ANR	3461395	Identifier	Stream :: code		3461361	2					
ANR	3461396	ParameterList	struct utimbuf & ut		3461361	3					
ANR	3461397	Parameter	struct utimbuf & ut	727:13:14343:14360	3461361	0	True				
ANR	3461398	ParameterType	struct utimbuf &		3461361	0					
ANR	3461399	Identifier	ut		3461361	1					
ANR	3461400	CFGEntryNode	ENTRY		3461361		True				
ANR	3461401	CFGExitNode	EXIT		3461361		True				
ANR	3461402	Symbol	code		3461361						
ANR	3461403	Symbol	ut . actime		3461361						
ANR	3461404	Symbol	ut . modtime		3461361						
ANR	3461405	Symbol	TRUE		3461361						
ANR	3461406	Symbol	ut		3461361						
ANR	3461407	Function	Stream :: code	735:0:14450:15570							
ANR	3461408	FunctionDef	Stream :: code (struct rlimit & rl)		3461407	0					
ANR	3461409	CompoundStatement		737:0:14487:15570	3461407	0					
ANR	3461410	ExpressionStatement	STREAM_ASSERT ( code ( rl . rlim_cur ) )	757:1:15486:15518	3461407	0	True				
ANR	3461411	CallExpression	STREAM_ASSERT ( code ( rl . rlim_cur ) )		3461407	0					
ANR	3461412	Callee	STREAM_ASSERT		3461407	0					
ANR	3461413	Identifier	STREAM_ASSERT		3461407	0					
ANR	3461414	ArgumentList	code ( rl . rlim_cur )		3461407	1					
ANR	3461415	Argument	code ( rl . rlim_cur )		3461407	0					
ANR	3461416	CallExpression	code ( rl . rlim_cur )		3461407	0					
ANR	3461417	Callee	code		3461407	0					
ANR	3461418	Identifier	code		3461407	0					
ANR	3461419	ArgumentList	rl . rlim_cur		3461407	1					
ANR	3461420	Argument	rl . rlim_cur		3461407	0					
ANR	3461421	MemberAccess	rl . rlim_cur		3461407	0					
ANR	3461422	Identifier	rl		3461407	0					
ANR	3461423	Identifier	rlim_cur		3461407	1					
ANR	3461424	ExpressionStatement	STREAM_ASSERT ( code ( rl . rlim_max ) )	758:1:15521:15553	3461407	1	True				
ANR	3461425	CallExpression	STREAM_ASSERT ( code ( rl . rlim_max ) )		3461407	0					
ANR	3461426	Callee	STREAM_ASSERT		3461407	0					
ANR	3461427	Identifier	STREAM_ASSERT		3461407	0					
ANR	3461428	ArgumentList	code ( rl . rlim_max )		3461407	1					
ANR	3461429	Argument	code ( rl . rlim_max )		3461407	0					
ANR	3461430	CallExpression	code ( rl . rlim_max )		3461407	0					
ANR	3461431	Callee	code		3461407	0					
ANR	3461432	Identifier	code		3461407	0					
ANR	3461433	ArgumentList	rl . rlim_max		3461407	1					
ANR	3461434	Argument	rl . rlim_max		3461407	0					
ANR	3461435	MemberAccess	rl . rlim_max		3461407	0					
ANR	3461436	Identifier	rl		3461407	0					
ANR	3461437	Identifier	rlim_max		3461407	1					
ANR	3461438	ReturnStatement	return TRUE ;	760:1:15557:15568	3461407	2	True				
ANR	3461439	Identifier	TRUE		3461407	0					
ANR	3461440	ReturnType	int		3461407	1					
ANR	3461441	Identifier	Stream :: code		3461407	2					
ANR	3461442	ParameterList	struct rlimit & rl		3461407	3					
ANR	3461443	Parameter	struct rlimit & rl	736:13:14468:14484	3461407	0	True				
ANR	3461444	ParameterType	struct rlimit &		3461407	0					
ANR	3461445	Identifier	rl		3461407	1					
ANR	3461446	CFGEntryNode	ENTRY		3461407		True				
ANR	3461447	CFGExitNode	EXIT		3461407		True				
ANR	3461448	Symbol	code		3461407						
ANR	3461449	Symbol	rl . rlim_cur		3461407						
ANR	3461450	Symbol	TRUE		3461407						
ANR	3461451	Symbol	rl		3461407						
ANR	3461452	Symbol	rl . rlim_max		3461407						
ANR	3461453	Function	Stream :: code_array	768:0:15806:16200							
ANR	3461454	FunctionDef	"Stream :: code_array (gid_t * & array , int & len)"		3461453	0					
ANR	3461455	CompoundStatement		770:0:15854:16200	3461453	0					
ANR	3461456	IdentifierDeclStatement	int i ;	771:1:15857:15862	3461453	0	True				
ANR	3461457	IdentifierDecl	i		3461453	0					
ANR	3461458	IdentifierDeclType	int		3461453	0					
ANR	3461459	Identifier	i		3461453	1					
ANR	3461460	IfStatement	if ( _coding == stream_encode )		3461453	1					
ANR	3461461	Condition	_coding == stream_encode	773:5:15870:15893	3461453	0	True				
ANR	3461462	EqualityExpression	_coding == stream_encode		3461453	0		==			
ANR	3461463	Identifier	_coding		3461453	0					
ANR	3461464	Identifier	stream_encode		3461453	1					
ANR	3461465	CompoundStatement		5:1:42:42	3461453	1					
ANR	3461466	IfStatement	if ( len > 0 && array == NULL )		3461453	0					
ANR	3461467	Condition	len > 0 && array == NULL	775:6:15905:15928	3461453	0	True				
ANR	3461468	AndExpression	len > 0 && array == NULL		3461453	0		&&			
ANR	3461469	RelationalExpression	len > 0		3461453	0		>			
ANR	3461470	Identifier	len		3461453	0					
ANR	3461471	PrimaryExpression	0		3461453	1					
ANR	3461472	EqualityExpression	array == NULL		3461453	1		==			
ANR	3461473	Identifier	array		3461453	0					
ANR	3461474	Identifier	NULL		3461453	1					
ANR	3461475	CompoundStatement		7:2:78:78	3461453	1					
ANR	3461476	ReturnStatement	return FALSE ;	777:3:15938:15950	3461453	0	True				
ANR	3461477	Identifier	FALSE		3461453	0					
ANR	3461478	ExpressionStatement	STREAM_ASSERT ( code ( len ) )	781:1:15961:15985	3461453	2	True				
ANR	3461479	CallExpression	STREAM_ASSERT ( code ( len ) )		3461453	0					
ANR	3461480	Callee	STREAM_ASSERT		3461453	0					
ANR	3461481	Identifier	STREAM_ASSERT		3461453	0					
ANR	3461482	ArgumentList	code ( len )		3461453	1					
ANR	3461483	Argument	code ( len )		3461453	0					
ANR	3461484	CallExpression	code ( len )		3461453	0					
ANR	3461485	Callee	code		3461453	0					
ANR	3461486	Identifier	code		3461453	0					
ANR	3461487	ArgumentList	len		3461453	1					
ANR	3461488	Argument	len		3461453	0					
ANR	3461489	Identifier	len		3461453	0					
ANR	3461490	IfStatement	if ( len > 0 )		3461453	3					
ANR	3461491	Condition	len > 0	783:5:15993:15999	3461453	0	True				
ANR	3461492	RelationalExpression	len > 0		3461453	0		>			
ANR	3461493	Identifier	len		3461453	0					
ANR	3461494	PrimaryExpression	0		3461453	1					
ANR	3461495	CompoundStatement		15:1:148:148	3461453	1					
ANR	3461496	IfStatement	if ( ! array )		3461453	0					
ANR	3461497	Condition	! array	785:6:16011:16016	3461453	0	True				
ANR	3461498	UnaryOperationExpression	! array		3461453	0					
ANR	3461499	UnaryOperator	!		3461453	0					
ANR	3461500	Identifier	array		3461453	1					
ANR	3461501	CompoundStatement		17:2:166:166	3461453	1					
ANR	3461502	ExpressionStatement	array = ( gid_t * ) malloc ( sizeof ( gid_t ) * len )	787:3:16026:16069	3461453	0	True				
ANR	3461503	AssignmentExpression	array = ( gid_t * ) malloc ( sizeof ( gid_t ) * len )		3461453	0		=			
ANR	3461504	Identifier	array		3461453	0					
ANR	3461505	CastExpression	( gid_t * ) malloc ( sizeof ( gid_t ) * len )		3461453	1					
ANR	3461506	CastTarget	gid_t *		3461453	0					
ANR	3461507	CallExpression	malloc ( sizeof ( gid_t ) * len )		3461453	1					
ANR	3461508	Callee	malloc		3461453	0					
ANR	3461509	Identifier	malloc		3461453	0					
ANR	3461510	ArgumentList	sizeof ( gid_t ) * len		3461453	1					
ANR	3461511	Argument	sizeof ( gid_t ) * len		3461453	0					
ANR	3461512	MultiplicativeExpression	sizeof ( gid_t ) * len		3461453	0		*			
ANR	3461513	SizeofExpression	sizeof ( gid_t )		3461453	0					
ANR	3461514	Sizeof	sizeof		3461453	0					
ANR	3461515	SizeofOperand	gid_t		3461453	1					
ANR	3461516	Identifier	len		3461453	1					
ANR	3461517	ForStatement	for ( i = 0 ; i < len ; i ++ )		3461453	1					
ANR	3461518	ForInit	i = 0 ;	791:7:16119:16124	3461453	0	True				
ANR	3461519	AssignmentExpression	i = 0		3461453	0		=			
ANR	3461520	Identifier	i		3461453	0					
ANR	3461521	PrimaryExpression	0		3461453	1					
ANR	3461522	Condition	i < len	791:14:16126:16132	3461453	1	True				
ANR	3461523	RelationalExpression	i < len		3461453	0		<			
ANR	3461524	Identifier	i		3461453	0					
ANR	3461525	Identifier	len		3461453	1					
ANR	3461526	PostIncDecOperationExpression	i ++	791:23:16135:16137	3461453	2	True				
ANR	3461527	Identifier	i		3461453	0					
ANR	3461528	IncDec	++		3461453	1					
ANR	3461529	CompoundStatement		23:2:287:287	3461453	3					
ANR	3461530	ExpressionStatement	STREAM_ASSERT ( code ( array [ i ] ) )	793:3:16147:16176	3461453	0	True				
ANR	3461531	CallExpression	STREAM_ASSERT ( code ( array [ i ] ) )		3461453	0					
ANR	3461532	Callee	STREAM_ASSERT		3461453	0					
ANR	3461533	Identifier	STREAM_ASSERT		3461453	0					
ANR	3461534	ArgumentList	code ( array [ i ] )		3461453	1					
ANR	3461535	Argument	code ( array [ i ] )		3461453	0					
ANR	3461536	CallExpression	code ( array [ i ] )		3461453	0					
ANR	3461537	Callee	code		3461453	0					
ANR	3461538	Identifier	code		3461453	0					
ANR	3461539	ArgumentList	array [ i ]		3461453	1					
ANR	3461540	Argument	array [ i ]		3461453	0					
ANR	3461541	ArrayIndexing	array [ i ]		3461453	0					
ANR	3461542	Identifier	array		3461453	0					
ANR	3461543	Identifier	i		3461453	1					
ANR	3461544	ReturnStatement	return TRUE ;	797:1:16187:16198	3461453	4	True				
ANR	3461545	Identifier	TRUE		3461453	0					
ANR	3461546	ReturnType	int		3461453	1					
ANR	3461547	Identifier	Stream :: code_array		3461453	2					
ANR	3461548	ParameterList	"gid_t * & array , int & len"		3461453	3					
ANR	3461549	Parameter	gid_t * & array	769:19:15829:15841	3461453	0	True				
ANR	3461550	ParameterType	gid_t * &		3461453	0					
ANR	3461551	Identifier	array		3461453	1					
ANR	3461552	Parameter	int & len	769:34:15844:15851	3461453	1	True				
ANR	3461553	ParameterType	int &		3461453	0					
ANR	3461554	Identifier	len		3461453	1					
ANR	3461555	CFGEntryNode	ENTRY		3461453		True				
ANR	3461556	CFGExitNode	EXIT		3461453		True				
ANR	3461557	Symbol	malloc		3461453						
ANR	3461558	Symbol	_coding		3461453						
ANR	3461559	Symbol	NULL		3461453						
ANR	3461560	Symbol	code		3461453						
ANR	3461561	Symbol	* i		3461453						
ANR	3461562	Symbol	len		3461453						
ANR	3461563	Symbol	array		3461453						
ANR	3461564	Symbol	stream_encode		3461453						
ANR	3461565	Symbol	i		3461453						
ANR	3461566	Symbol	TRUE		3461453						
ANR	3461567	Symbol	FALSE		3461453						
ANR	3461568	Symbol	* array		3461453						
ANR	3461569	Function	Stream :: code	803:0:16231:16722							
ANR	3461570	FunctionDef	Stream :: code (condor_mode_t & m)		3461569	0					
ANR	3461571	CompoundStatement		805:0:16266:16722	3461569	0					
ANR	3461572	IdentifierDeclStatement	"mode_t mask = 0 , y = 0 ;"	806:1:16269:16291	3461569	0	True				
ANR	3461573	IdentifierDecl	mask = 0		3461569	0					
ANR	3461574	IdentifierDeclType	mode_t		3461569	0					
ANR	3461575	Identifier	mask		3461569	1					
ANR	3461576	AssignmentExpression	mask = 0		3461569	2		=			
ANR	3461577	Identifier	mask		3461569	0					
ANR	3461578	PrimaryExpression	0		3461569	1					
ANR	3461579	IdentifierDecl	y = 0		3461569	1					
ANR	3461580	IdentifierDeclType	mode_t		3461569	0					
ANR	3461581	Identifier	y		3461569	1					
ANR	3461582	AssignmentExpression	y = 0		3461569	2		=			
ANR	3461583	Identifier	y		3461569	0					
ANR	3461584	PrimaryExpression	0		3461569	1					
ANR	3461585	ExpressionStatement	mask |= ( S_IRUSR | S_IWUSR | S_IXUSR | S_IRGRP | S_IWGRP | S_IXGRP | S_IROTH | S_IWOTH | S_IXOTH )	808:1:16314:16405	3461569	1	True				
ANR	3461586	AssignmentExpression	mask |= ( S_IRUSR | S_IWUSR | S_IXUSR | S_IRGRP | S_IWGRP | S_IXGRP | S_IROTH | S_IWOTH | S_IXOTH )		3461569	0		|=			
ANR	3461587	Identifier	mask		3461569	0					
ANR	3461588	InclusiveOrExpression	S_IRUSR | S_IWUSR | S_IXUSR | S_IRGRP | S_IWGRP | S_IXGRP | S_IROTH | S_IWOTH | S_IXOTH		3461569	1		|			
ANR	3461589	Identifier	S_IRUSR		3461569	0					
ANR	3461590	InclusiveOrExpression	S_IWUSR | S_IXUSR | S_IRGRP | S_IWGRP | S_IXGRP | S_IROTH | S_IWOTH | S_IXOTH		3461569	1		|			
ANR	3461591	Identifier	S_IWUSR		3461569	0					
ANR	3461592	InclusiveOrExpression	S_IXUSR | S_IRGRP | S_IWGRP | S_IXGRP | S_IROTH | S_IWOTH | S_IXOTH		3461569	1		|			
ANR	3461593	Identifier	S_IXUSR		3461569	0					
ANR	3461594	InclusiveOrExpression	S_IRGRP | S_IWGRP | S_IXGRP | S_IROTH | S_IWOTH | S_IXOTH		3461569	1		|			
ANR	3461595	Identifier	S_IRGRP		3461569	0					
ANR	3461596	InclusiveOrExpression	S_IWGRP | S_IXGRP | S_IROTH | S_IWOTH | S_IXOTH		3461569	1		|			
ANR	3461597	Identifier	S_IWGRP		3461569	0					
ANR	3461598	InclusiveOrExpression	S_IXGRP | S_IROTH | S_IWOTH | S_IXOTH		3461569	1		|			
ANR	3461599	Identifier	S_IXGRP		3461569	0					
ANR	3461600	InclusiveOrExpression	S_IROTH | S_IWOTH | S_IXOTH		3461569	1		|			
ANR	3461601	Identifier	S_IROTH		3461569	0					
ANR	3461602	InclusiveOrExpression	S_IWOTH | S_IXOTH		3461569	1		|			
ANR	3461603	Identifier	S_IWOTH		3461569	0					
ANR	3461604	Identifier	S_IXOTH		3461569	1					
ANR	3461605	IfStatement	if ( _coding == stream_encode )		3461569	2					
ANR	3461606	Condition	_coding == stream_encode	812:8:16416:16439	3461569	0	True				
ANR	3461607	EqualityExpression	_coding == stream_encode		3461569	0		==			
ANR	3461608	Identifier	_coding		3461569	0					
ANR	3461609	Identifier	stream_encode		3461569	1					
ANR	3461610	CompoundStatement		8:35:176:176	3461569	1					
ANR	3461611	ExpressionStatement	y = m & mask	813:2:16447:16459	3461569	0	True				
ANR	3461612	AssignmentExpression	y = m & mask		3461569	0		=			
ANR	3461613	Identifier	y		3461569	0					
ANR	3461614	BitAndExpression	m & mask		3461569	1		&			
ANR	3461615	Identifier	m		3461569	0					
ANR	3461616	Identifier	mask		3461569	1					
ANR	3461617	ExpressionStatement	STREAM_ASSERT ( code ( y ) )	821:2:16546:16568	3461569	3	True				
ANR	3461618	CallExpression	STREAM_ASSERT ( code ( y ) )		3461569	0					
ANR	3461619	Callee	STREAM_ASSERT		3461569	0					
ANR	3461620	Identifier	STREAM_ASSERT		3461569	0					
ANR	3461621	ArgumentList	code ( y )		3461569	1					
ANR	3461622	Argument	code ( y )		3461569	0					
ANR	3461623	CallExpression	code ( y )		3461569	0					
ANR	3461624	Callee	code		3461569	0					
ANR	3461625	Identifier	code		3461569	0					
ANR	3461626	ArgumentList	y		3461569	1					
ANR	3461627	Argument	y		3461569	0					
ANR	3461628	Identifier	y		3461569	0					
ANR	3461629	IfStatement	if ( _coding == stream_decode )		3461569	4					
ANR	3461630	Condition	_coding == stream_decode	823:8:16579:16602	3461569	0	True				
ANR	3461631	EqualityExpression	_coding == stream_decode		3461569	0		==			
ANR	3461632	Identifier	_coding		3461569	0					
ANR	3461633	Identifier	stream_decode		3461569	1					
ANR	3461634	CompoundStatement		19:35:339:339	3461569	1					
ANR	3461635	ExpressionStatement	m = ( condor_mode_t ) ( y & mask )	825:2:16630:16659	3461569	0	True				
ANR	3461636	AssignmentExpression	m = ( condor_mode_t ) ( y & mask )		3461569	0		=			
ANR	3461637	Identifier	m		3461569	0					
ANR	3461638	CastExpression	( condor_mode_t ) ( y & mask )		3461569	1					
ANR	3461639	CastTarget	condor_mode_t		3461569	0					
ANR	3461640	BitAndExpression	y & mask		3461569	1		&			
ANR	3461641	Identifier	y		3461569	0					
ANR	3461642	Identifier	mask		3461569	1					
ANR	3461643	ReturnStatement	return TRUE ;	831:1:16709:16720	3461569	5	True				
ANR	3461644	Identifier	TRUE		3461569	0					
ANR	3461645	ReturnType	int		3461569	1					
ANR	3461646	Identifier	Stream :: code		3461569	2					
ANR	3461647	ParameterList	condor_mode_t & m		3461569	3					
ANR	3461648	Parameter	condor_mode_t & m	804:13:16248:16263	3461569	0	True				
ANR	3461649	ParameterType	condor_mode_t &		3461569	0					
ANR	3461650	Identifier	m		3461569	1					
ANR	3461651	CFGEntryNode	ENTRY		3461569		True				
ANR	3461652	CFGExitNode	EXIT		3461569		True				
ANR	3461653	Symbol	stream_decode		3461569						
ANR	3461654	Symbol	S_IROTH		3461569						
ANR	3461655	Symbol	_coding		3461569						
ANR	3461656	Symbol	code		3461569						
ANR	3461657	Symbol	S_IXGRP		3461569						
ANR	3461658	Symbol	S_IWGRP		3461569						
ANR	3461659	Symbol	S_IWOTH		3461569						
ANR	3461660	Symbol	S_IXOTH		3461569						
ANR	3461661	Symbol	TRUE		3461569						
ANR	3461662	Symbol	m		3461569						
ANR	3461663	Symbol	S_IRUSR		3461569						
ANR	3461664	Symbol	S_IWUSR		3461569						
ANR	3461665	Symbol	stream_encode		3461569						
ANR	3461666	Symbol	S_IXUSR		3461569						
ANR	3461667	Symbol	y		3461569						
ANR	3461668	Symbol	S_IRGRP		3461569						
ANR	3461669	Symbol	mask		3461569						
ANR	3461670	Function	Stream :: put	840:0:16750:16996							
ANR	3461671	FunctionDef	Stream :: put (char c)		3461670	0					
ANR	3461672	CompoundStatement		842:0:16776:16996	3461670	0					
ANR	3461673	ExpressionStatement	getcount = 0	843:2:16780:16791	3461670	0	True				
ANR	3461674	AssignmentExpression	getcount = 0		3461670	0		=			
ANR	3461675	Identifier	getcount		3461670	0					
ANR	3461676	PrimaryExpression	0		3461670	1					
ANR	3461677	ExpressionStatement	"NETWORK_TRACE ( ""put char "" << c << "" c("" << ++ putcount << "") "" )"	844:2:16795:16857	3461670	1	True				
ANR	3461678	CallExpression	"NETWORK_TRACE ( ""put char "" << c << "" c("" << ++ putcount << "") "" )"		3461670	0					
ANR	3461679	Callee	NETWORK_TRACE		3461670	0					
ANR	3461680	Identifier	NETWORK_TRACE		3461670	0					
ANR	3461681	ArgumentList	"""put char "" << c << "" c("" << ++ putcount << "") """		3461670	1					
ANR	3461682	Argument	"""put char "" << c << "" c("" << ++ putcount << "") """		3461670	0					
ANR	3461683	ShiftExpression	"""put char "" << c << "" c("" << ++ putcount << "") """		3461670	0		<<			
ANR	3461684	PrimaryExpression	"""put char """		3461670	0					
ANR	3461685	ShiftExpression	"c << "" c("" << ++ putcount << "") """		3461670	1		<<			
ANR	3461686	Identifier	c		3461670	0					
ANR	3461687	ShiftExpression	""" c("" << ++ putcount << "") """		3461670	1		<<			
ANR	3461688	PrimaryExpression	""" c("""		3461670	0					
ANR	3461689	ShiftExpression	"++ putcount << "") """		3461670	1		<<			
ANR	3461690	UnaryExpression	++ putcount		3461670	0					
ANR	3461691	IncDec	++		3461670	0					
ANR	3461692	Identifier	putcount		3461670	1					
ANR	3461693	PrimaryExpression	""") """		3461670	1					
ANR	3461694	SwitchStatement	switch ( _code )		3461670	2					
ANR	3461695	Condition	_code	846:8:16868:16872	3461670	0	True				
ANR	3461696	Identifier	_code		3461670	0					
ANR	3461697	CompoundStatement		5:14:97:97	3461670	1					
ANR	3461698	Label	case internal :	847:2:16878:16891	3461670	0	True				
ANR	3461699	Identifier	internal		3461670	0					
ANR	3461700	Label	case external :	848:2:16895:16908	3461670	1	True				
ANR	3461701	Identifier	external		3461670	0					
ANR	3461702	Label	case ascii :	849:2:16912:16922	3461670	2	True				
ANR	3461703	Identifier	ascii		3461670	0					
ANR	3461704	IfStatement	"if ( put_bytes ( & c , 1 ) != 1 )"		3461670	3					
ANR	3461705	Condition	"put_bytes ( & c , 1 ) != 1"	850:7:16931:16951	3461670	0	True				
ANR	3461706	EqualityExpression	"put_bytes ( & c , 1 ) != 1"		3461670	0		!=			
ANR	3461707	CallExpression	"put_bytes ( & c , 1 )"		3461670	0					
ANR	3461708	Callee	put_bytes		3461670	0					
ANR	3461709	Identifier	put_bytes		3461670	0					
ANR	3461710	ArgumentList	& c		3461670	1					
ANR	3461711	Argument	& c		3461670	0					
ANR	3461712	UnaryOperationExpression	& c		3461670	0					
ANR	3461713	UnaryOperator	&		3461670	0					
ANR	3461714	Identifier	c		3461670	1					
ANR	3461715	Argument	1		3461670	1					
ANR	3461716	PrimaryExpression	1		3461670	0					
ANR	3461717	PrimaryExpression	1		3461670	1					
ANR	3461718	ReturnStatement	return FALSE ;	850:30:16954:16966	3461670	1	True				
ANR	3461719	Identifier	FALSE		3461670	0					
ANR	3461720	BreakStatement	break ;	851:3:16971:16976	3461670	4	True				
ANR	3461721	ReturnStatement	return TRUE ;	854:1:16983:16994	3461670	3	True				
ANR	3461722	Identifier	TRUE		3461670	0					
ANR	3461723	ReturnType	int		3461670	1					
ANR	3461724	Identifier	Stream :: put		3461670	2					
ANR	3461725	ParameterList	char c		3461670	3					
ANR	3461726	Parameter	char c	841:13:16768:16773	3461670	0	True				
ANR	3461727	ParameterType	char		3461670	0					
ANR	3461728	Identifier	c		3461670	1					
ANR	3461729	CFGEntryNode	ENTRY		3461670		True				
ANR	3461730	CFGExitNode	EXIT		3461670		True				
ANR	3461731	Symbol	c		3461670						
ANR	3461732	Symbol	_code		3461670						
ANR	3461733	Symbol	putcount		3461670						
ANR	3461734	Symbol	& c		3461670						
ANR	3461735	Symbol	TRUE		3461670						
ANR	3461736	Symbol	FALSE		3461670						
ANR	3461737	Symbol	put_bytes		3461670						
ANR	3461738	Symbol	getcount		3461670						
ANR	3461739	Function	Stream :: put	859:0:17001:17256							
ANR	3461740	FunctionDef	Stream :: put (unsigned char c)		3461739	0					
ANR	3461741	CompoundStatement		861:0:17036:17256	3461739	0					
ANR	3461742	ExpressionStatement	getcount = 0	862:2:17040:17051	3461739	0	True				
ANR	3461743	AssignmentExpression	getcount = 0		3461739	0		=			
ANR	3461744	Identifier	getcount		3461739	0					
ANR	3461745	PrimaryExpression	0		3461739	1					
ANR	3461746	ExpressionStatement	"NETWORK_TRACE ( ""put char "" << c << "" c("" << ++ putcount << "") "" )"	863:2:17055:17117	3461739	1	True				
ANR	3461747	CallExpression	"NETWORK_TRACE ( ""put char "" << c << "" c("" << ++ putcount << "") "" )"		3461739	0					
ANR	3461748	Callee	NETWORK_TRACE		3461739	0					
ANR	3461749	Identifier	NETWORK_TRACE		3461739	0					
ANR	3461750	ArgumentList	"""put char "" << c << "" c("" << ++ putcount << "") """		3461739	1					
ANR	3461751	Argument	"""put char "" << c << "" c("" << ++ putcount << "") """		3461739	0					
ANR	3461752	ShiftExpression	"""put char "" << c << "" c("" << ++ putcount << "") """		3461739	0		<<			
ANR	3461753	PrimaryExpression	"""put char """		3461739	0					
ANR	3461754	ShiftExpression	"c << "" c("" << ++ putcount << "") """		3461739	1		<<			
ANR	3461755	Identifier	c		3461739	0					
ANR	3461756	ShiftExpression	""" c("" << ++ putcount << "") """		3461739	1		<<			
ANR	3461757	PrimaryExpression	""" c("""		3461739	0					
ANR	3461758	ShiftExpression	"++ putcount << "") """		3461739	1		<<			
ANR	3461759	UnaryExpression	++ putcount		3461739	0					
ANR	3461760	IncDec	++		3461739	0					
ANR	3461761	Identifier	putcount		3461739	1					
ANR	3461762	PrimaryExpression	""") """		3461739	1					
ANR	3461763	SwitchStatement	switch ( _code )		3461739	2					
ANR	3461764	Condition	_code	865:8:17128:17132	3461739	0	True				
ANR	3461765	Identifier	_code		3461739	0					
ANR	3461766	CompoundStatement		5:14:97:97	3461739	1					
ANR	3461767	Label	case internal :	866:2:17138:17151	3461739	0	True				
ANR	3461768	Identifier	internal		3461739	0					
ANR	3461769	Label	case external :	867:2:17155:17168	3461739	1	True				
ANR	3461770	Identifier	external		3461739	0					
ANR	3461771	Label	case ascii :	868:2:17172:17182	3461739	2	True				
ANR	3461772	Identifier	ascii		3461739	0					
ANR	3461773	IfStatement	"if ( put_bytes ( & c , 1 ) != 1 )"		3461739	3					
ANR	3461774	Condition	"put_bytes ( & c , 1 ) != 1"	869:7:17191:17211	3461739	0	True				
ANR	3461775	EqualityExpression	"put_bytes ( & c , 1 ) != 1"		3461739	0		!=			
ANR	3461776	CallExpression	"put_bytes ( & c , 1 )"		3461739	0					
ANR	3461777	Callee	put_bytes		3461739	0					
ANR	3461778	Identifier	put_bytes		3461739	0					
ANR	3461779	ArgumentList	& c		3461739	1					
ANR	3461780	Argument	& c		3461739	0					
ANR	3461781	UnaryOperationExpression	& c		3461739	0					
ANR	3461782	UnaryOperator	&		3461739	0					
ANR	3461783	Identifier	c		3461739	1					
ANR	3461784	Argument	1		3461739	1					
ANR	3461785	PrimaryExpression	1		3461739	0					
ANR	3461786	PrimaryExpression	1		3461739	1					
ANR	3461787	ReturnStatement	return FALSE ;	869:30:17214:17226	3461739	1	True				
ANR	3461788	Identifier	FALSE		3461739	0					
ANR	3461789	BreakStatement	break ;	870:3:17231:17236	3461739	4	True				
ANR	3461790	ReturnStatement	return TRUE ;	873:1:17243:17254	3461739	3	True				
ANR	3461791	Identifier	TRUE		3461739	0					
ANR	3461792	ReturnType	int		3461739	1					
ANR	3461793	Identifier	Stream :: put		3461739	2					
ANR	3461794	ParameterList	unsigned char c		3461739	3					
ANR	3461795	Parameter	unsigned char c	860:13:17019:17033	3461739	0	True				
ANR	3461796	ParameterType	unsigned char		3461739	0					
ANR	3461797	Identifier	c		3461739	1					
ANR	3461798	CFGEntryNode	ENTRY		3461739		True				
ANR	3461799	CFGExitNode	EXIT		3461739		True				
ANR	3461800	Symbol	c		3461739						
ANR	3461801	Symbol	_code		3461739						
ANR	3461802	Symbol	putcount		3461739						
ANR	3461803	Symbol	& c		3461739						
ANR	3461804	Symbol	TRUE		3461739						
ANR	3461805	Symbol	FALSE		3461739						
ANR	3461806	Symbol	put_bytes		3461739						
ANR	3461807	Symbol	getcount		3461739						
ANR	3461808	Function	Stream :: put	878:0:17261:17886							
ANR	3461809	FunctionDef	Stream :: put (int i)		3461808	0					
ANR	3461810	CompoundStatement		880:0:17287:17886	3461808	0					
ANR	3461811	IdentifierDeclStatement	int tmp ;	881:1:17290:17298	3461808	0	True				
ANR	3461812	IdentifierDecl	tmp		3461808	0					
ANR	3461813	IdentifierDeclType	int		3461808	0					
ANR	3461814	Identifier	tmp		3461808	1					
ANR	3461815	IdentifierDeclStatement	char pad ;	882:1:17301:17309	3461808	1	True				
ANR	3461816	IdentifierDecl	pad		3461808	0					
ANR	3461817	IdentifierDeclType	char		3461808	0					
ANR	3461818	Identifier	pad		3461808	1					
ANR	3461819	ExpressionStatement	getcount = 0	883:2:17313:17324	3461808	2	True				
ANR	3461820	AssignmentExpression	getcount = 0		3461808	0		=			
ANR	3461821	Identifier	getcount		3461808	0					
ANR	3461822	PrimaryExpression	0		3461808	1					
ANR	3461823	ExpressionStatement	putcount += 4	884:2:17328:17340	3461808	3	True				
ANR	3461824	AssignmentExpression	putcount += 4		3461808	0		+=			
ANR	3461825	Identifier	putcount		3461808	0					
ANR	3461826	PrimaryExpression	4		3461808	1					
ANR	3461827	ExpressionStatement	"NETWORK_TRACE ( ""put int "" << i << "" c("" << putcount << "") "" )"	885:2:17344:17403	3461808	4	True				
ANR	3461828	CallExpression	"NETWORK_TRACE ( ""put int "" << i << "" c("" << putcount << "") "" )"		3461808	0					
ANR	3461829	Callee	NETWORK_TRACE		3461808	0					
ANR	3461830	Identifier	NETWORK_TRACE		3461808	0					
ANR	3461831	ArgumentList	"""put int "" << i << "" c("" << putcount << "") """		3461808	1					
ANR	3461832	Argument	"""put int "" << i << "" c("" << putcount << "") """		3461808	0					
ANR	3461833	ShiftExpression	"""put int "" << i << "" c("" << putcount << "") """		3461808	0		<<			
ANR	3461834	PrimaryExpression	"""put int """		3461808	0					
ANR	3461835	ShiftExpression	"i << "" c("" << putcount << "") """		3461808	1		<<			
ANR	3461836	Identifier	i		3461808	0					
ANR	3461837	ShiftExpression	""" c("" << putcount << "") """		3461808	1		<<			
ANR	3461838	PrimaryExpression	""" c("""		3461808	0					
ANR	3461839	ShiftExpression	"putcount << "") """		3461808	1		<<			
ANR	3461840	Identifier	putcount		3461808	0					
ANR	3461841	PrimaryExpression	""") """		3461808	1					
ANR	3461842	SwitchStatement	switch ( _code )		3461808	5					
ANR	3461843	Condition	_code	888:8:17460:17464	3461808	0	True				
ANR	3461844	Identifier	_code		3461808	0					
ANR	3461845	CompoundStatement		9:14:178:178	3461808	1					
ANR	3461846	Label	case internal :	889:2:17470:17483	3461808	0	True				
ANR	3461847	Identifier	internal		3461808	0					
ANR	3461848	IfStatement	"if ( put_bytes ( & i , sizeof ( int ) ) != sizeof ( int ) )"		3461808	1					
ANR	3461849	Condition	"put_bytes ( & i , sizeof ( int ) ) != sizeof ( int )"	890:7:17492:17532	3461808	0	True				
ANR	3461850	EqualityExpression	"put_bytes ( & i , sizeof ( int ) ) != sizeof ( int )"		3461808	0		!=			
ANR	3461851	CallExpression	"put_bytes ( & i , sizeof ( int ) )"		3461808	0					
ANR	3461852	Callee	put_bytes		3461808	0					
ANR	3461853	Identifier	put_bytes		3461808	0					
ANR	3461854	ArgumentList	& i		3461808	1					
ANR	3461855	Argument	& i		3461808	0					
ANR	3461856	UnaryOperationExpression	& i		3461808	0					
ANR	3461857	UnaryOperator	&		3461808	0					
ANR	3461858	Identifier	i		3461808	1					
ANR	3461859	Argument	sizeof ( int )		3461808	1					
ANR	3461860	SizeofExpression	sizeof ( int )		3461808	0					
ANR	3461861	Sizeof	sizeof		3461808	0					
ANR	3461862	SizeofOperand	int		3461808	1					
ANR	3461863	SizeofExpression	sizeof ( int )		3461808	1					
ANR	3461864	Sizeof	sizeof		3461808	0					
ANR	3461865	SizeofOperand	int		3461808	1					
ANR	3461866	ReturnStatement	return FALSE ;	890:50:17535:17547	3461808	1	True				
ANR	3461867	Identifier	FALSE		3461808	0					
ANR	3461868	BreakStatement	break ;	891:3:17552:17557	3461808	2	True				
ANR	3461869	Label	case external :	893:2:17562:17575	3461808	3	True				
ANR	3461870	Identifier	external		3461808	0					
ANR	3461871	CompoundStatement		14:17:289:289	3461808	4					
ANR	3461872	ExpressionStatement	tmp = htonl ( i )	894:3:17582:17596	3461808	0	True				
ANR	3461873	AssignmentExpression	tmp = htonl ( i )		3461808	0		=			
ANR	3461874	Identifier	tmp		3461808	0					
ANR	3461875	CallExpression	htonl ( i )		3461808	1					
ANR	3461876	Callee	htonl		3461808	0					
ANR	3461877	Identifier	htonl		3461808	0					
ANR	3461878	ArgumentList	i		3461808	1					
ANR	3461879	Argument	i		3461808	0					
ANR	3461880	Identifier	i		3461808	0					
ANR	3461881	ExpressionStatement	pad = ( i >= 0 ) ? 0 : 0xff	895:3:17601:17626	3461808	1	True				
ANR	3461882	AssignmentExpression	pad = ( i >= 0 ) ? 0 : 0xff		3461808	0		=			
ANR	3461883	Identifier	pad		3461808	0					
ANR	3461884	ConditionalExpression	( i >= 0 ) ? 0 : 0xff		3461808	1					
ANR	3461885	Condition	i >= 0		3461808	0					
ANR	3461886	RelationalExpression	i >= 0		3461808	0		>=			
ANR	3461887	Identifier	i		3461808	0					
ANR	3461888	PrimaryExpression	0		3461808	1					
ANR	3461889	PrimaryExpression	0		3461808	1					
ANR	3461890	PrimaryExpression	0xff		3461808	2					
ANR	3461891	ForStatement	for ( int s = 0 ; s < INT_SIZE - ( int ) sizeof ( int ) ; s ++ )		3461808	2					
ANR	3461892	ForInit	int s = 0 ;	896:8:17657:17664	3461808	0	True				
ANR	3461893	IdentifierDeclStatement	int s = 0 ;		3461808	0					
ANR	3461894	IdentifierDecl	s = 0		3461808	0					
ANR	3461895	IdentifierDeclType	int		3461808	0					
ANR	3461896	Identifier	s		3461808	1					
ANR	3461897	AssignmentExpression	s = 0		3461808	2		=			
ANR	3461898	Identifier	s		3461808	0					
ANR	3461899	PrimaryExpression	0		3461808	1					
ANR	3461900	Condition	s < INT_SIZE - ( int ) sizeof ( int )	896:17:17666:17694	3461808	1	True				
ANR	3461901	RelationalExpression	s < INT_SIZE - ( int ) sizeof ( int )		3461808	0		<			
ANR	3461902	Identifier	s		3461808	0					
ANR	3461903	AdditiveExpression	INT_SIZE - ( int ) sizeof ( int )		3461808	1		-			
ANR	3461904	Identifier	INT_SIZE		3461808	0					
ANR	3461905	CastExpression	( int ) sizeof ( int )		3461808	1					
ANR	3461906	CastTarget	int		3461808	0					
ANR	3461907	SizeofExpression	sizeof ( int )		3461808	1					
ANR	3461908	Sizeof	sizeof		3461808	0					
ANR	3461909	SizeofOperand	int		3461808	1					
ANR	3461910	PostIncDecOperationExpression	s ++	896:48:17697:17699	3461808	2	True				
ANR	3461911	Identifier	s		3461808	0					
ANR	3461912	IncDec	++		3461808	1					
ANR	3461913	CompoundStatement		17:53:414:414	3461808	3					
ANR	3461914	IfStatement	"if ( put_bytes ( & pad , 1 ) != 1 )"		3461808	0					
ANR	3461915	Condition	"put_bytes ( & pad , 1 ) != 1"	897:8:17712:17734	3461808	0	True				
ANR	3461916	EqualityExpression	"put_bytes ( & pad , 1 ) != 1"		3461808	0		!=			
ANR	3461917	CallExpression	"put_bytes ( & pad , 1 )"		3461808	0					
ANR	3461918	Callee	put_bytes		3461808	0					
ANR	3461919	Identifier	put_bytes		3461808	0					
ANR	3461920	ArgumentList	& pad		3461808	1					
ANR	3461921	Argument	& pad		3461808	0					
ANR	3461922	UnaryOperationExpression	& pad		3461808	0					
ANR	3461923	UnaryOperator	&		3461808	0					
ANR	3461924	Identifier	pad		3461808	1					
ANR	3461925	Argument	1		3461808	1					
ANR	3461926	PrimaryExpression	1		3461808	0					
ANR	3461927	PrimaryExpression	1		3461808	1					
ANR	3461928	ReturnStatement	return FALSE ;	897:33:17737:17749	3461808	1	True				
ANR	3461929	Identifier	FALSE		3461808	0					
ANR	3461930	IfStatement	"if ( put_bytes ( & tmp , sizeof ( int ) ) != sizeof ( int ) )"		3461808	3					
ANR	3461931	Condition	"put_bytes ( & tmp , sizeof ( int ) ) != sizeof ( int )"	899:7:17763:17805	3461808	0	True				
ANR	3461932	EqualityExpression	"put_bytes ( & tmp , sizeof ( int ) ) != sizeof ( int )"		3461808	0		!=			
ANR	3461933	CallExpression	"put_bytes ( & tmp , sizeof ( int ) )"		3461808	0					
ANR	3461934	Callee	put_bytes		3461808	0					
ANR	3461935	Identifier	put_bytes		3461808	0					
ANR	3461936	ArgumentList	& tmp		3461808	1					
ANR	3461937	Argument	& tmp		3461808	0					
ANR	3461938	UnaryOperationExpression	& tmp		3461808	0					
ANR	3461939	UnaryOperator	&		3461808	0					
ANR	3461940	Identifier	tmp		3461808	1					
ANR	3461941	Argument	sizeof ( int )		3461808	1					
ANR	3461942	SizeofExpression	sizeof ( int )		3461808	0					
ANR	3461943	Sizeof	sizeof		3461808	0					
ANR	3461944	SizeofOperand	int		3461808	1					
ANR	3461945	SizeofExpression	sizeof ( int )		3461808	1					
ANR	3461946	Sizeof	sizeof		3461808	0					
ANR	3461947	SizeofOperand	int		3461808	1					
ANR	3461948	ReturnStatement	return FALSE ;	899:52:17808:17820	3461808	1	True				
ANR	3461949	Identifier	FALSE		3461808	0					
ANR	3461950	BreakStatement	break ;	900:3:17825:17830	3461808	4	True				
ANR	3461951	Label	case ascii :	903:2:17839:17849	3461808	5	True				
ANR	3461952	Identifier	ascii		3461808	0					
ANR	3461953	ReturnStatement	return FALSE ;	904:3:17854:17866	3461808	6	True				
ANR	3461954	Identifier	FALSE		3461808	0					
ANR	3461955	ReturnStatement	return TRUE ;	907:1:17873:17884	3461808	6	True				
ANR	3461956	Identifier	TRUE		3461808	0					
ANR	3461957	ReturnType	int		3461808	1					
ANR	3461958	Identifier	Stream :: put		3461808	2					
ANR	3461959	ParameterList	int i		3461808	3					
ANR	3461960	Parameter	int i	879:13:17279:17284	3461808	0	True				
ANR	3461961	ParameterType	int		3461808	0					
ANR	3461962	Identifier	i		3461808	1					
ANR	3461963	CFGEntryNode	ENTRY		3461808		True				
ANR	3461964	CFGExitNode	EXIT		3461808		True				
ANR	3461965	Symbol	_code		3461808						
ANR	3461966	Symbol	INT_SIZE		3461808						
ANR	3461967	Symbol	i		3461808						
ANR	3461968	Symbol	TRUE		3461808						
ANR	3461969	Symbol	htonl		3461808						
ANR	3461970	Symbol	& i		3461808						
ANR	3461971	Symbol	pad		3461808						
ANR	3461972	Symbol	s		3461808						
ANR	3461973	Symbol	tmp		3461808						
ANR	3461974	Symbol	putcount		3461808						
ANR	3461975	Symbol	FALSE		3461808						
ANR	3461976	Symbol	& tmp		3461808						
ANR	3461977	Symbol	put_bytes		3461808						
ANR	3461978	Symbol	getcount		3461808						
ANR	3461979	Symbol	& pad		3461808						
ANR	3461980	Function	Stream :: put	912:0:17891:18452							
ANR	3461981	FunctionDef	Stream :: put (unsigned int i)		3461980	0					
ANR	3461982	CompoundStatement		914:0:17926:18452	3461980	0					
ANR	3461983	IdentifierDeclStatement	unsigned int tmp ;	915:1:17929:17946	3461980	0	True				
ANR	3461984	IdentifierDecl	tmp		3461980	0					
ANR	3461985	IdentifierDeclType	unsigned int		3461980	0					
ANR	3461986	Identifier	tmp		3461980	1					
ANR	3461987	IdentifierDeclStatement	char pad ;	916:1:17949:17960	3461980	1	True				
ANR	3461988	IdentifierDecl	pad		3461980	0					
ANR	3461989	IdentifierDeclType	char		3461980	0					
ANR	3461990	Identifier	pad		3461980	1					
ANR	3461991	ExpressionStatement	getcount = 0	917:2:17964:17975	3461980	2	True				
ANR	3461992	AssignmentExpression	getcount = 0		3461980	0		=			
ANR	3461993	Identifier	getcount		3461980	0					
ANR	3461994	PrimaryExpression	0		3461980	1					
ANR	3461995	ExpressionStatement	putcount += 4	918:2:17979:17991	3461980	3	True				
ANR	3461996	AssignmentExpression	putcount += 4		3461980	0		+=			
ANR	3461997	Identifier	putcount		3461980	0					
ANR	3461998	PrimaryExpression	4		3461980	1					
ANR	3461999	ExpressionStatement	"NETWORK_TRACE ( ""put int "" << i << "" c("" << putcount << "") "" )"	919:2:17995:18054	3461980	4	True				
ANR	3462000	CallExpression	"NETWORK_TRACE ( ""put int "" << i << "" c("" << putcount << "") "" )"		3461980	0					
ANR	3462001	Callee	NETWORK_TRACE		3461980	0					
ANR	3462002	Identifier	NETWORK_TRACE		3461980	0					
ANR	3462003	ArgumentList	"""put int "" << i << "" c("" << putcount << "") """		3461980	1					
ANR	3462004	Argument	"""put int "" << i << "" c("" << putcount << "") """		3461980	0					
ANR	3462005	ShiftExpression	"""put int "" << i << "" c("" << putcount << "") """		3461980	0		<<			
ANR	3462006	PrimaryExpression	"""put int """		3461980	0					
ANR	3462007	ShiftExpression	"i << "" c("" << putcount << "") """		3461980	1		<<			
ANR	3462008	Identifier	i		3461980	0					
ANR	3462009	ShiftExpression	""" c("" << putcount << "") """		3461980	1		<<			
ANR	3462010	PrimaryExpression	""" c("""		3461980	0					
ANR	3462011	ShiftExpression	"putcount << "") """		3461980	1		<<			
ANR	3462012	Identifier	putcount		3461980	0					
ANR	3462013	PrimaryExpression	""") """		3461980	1					
ANR	3462014	SwitchStatement	switch ( _code )		3461980	5					
ANR	3462015	Condition	_code	921:8:18065:18069	3461980	0	True				
ANR	3462016	Identifier	_code		3461980	0					
ANR	3462017	CompoundStatement		8:14:144:144	3461980	1					
ANR	3462018	Label	case internal :	922:2:18075:18088	3461980	0	True				
ANR	3462019	Identifier	internal		3461980	0					
ANR	3462020	IfStatement	"if ( put_bytes ( & i , sizeof ( int ) ) != sizeof ( int ) )"		3461980	1					
ANR	3462021	Condition	"put_bytes ( & i , sizeof ( int ) ) != sizeof ( int )"	923:7:18097:18137	3461980	0	True				
ANR	3462022	EqualityExpression	"put_bytes ( & i , sizeof ( int ) ) != sizeof ( int )"		3461980	0		!=			
ANR	3462023	CallExpression	"put_bytes ( & i , sizeof ( int ) )"		3461980	0					
ANR	3462024	Callee	put_bytes		3461980	0					
ANR	3462025	Identifier	put_bytes		3461980	0					
ANR	3462026	ArgumentList	& i		3461980	1					
ANR	3462027	Argument	& i		3461980	0					
ANR	3462028	UnaryOperationExpression	& i		3461980	0					
ANR	3462029	UnaryOperator	&		3461980	0					
ANR	3462030	Identifier	i		3461980	1					
ANR	3462031	Argument	sizeof ( int )		3461980	1					
ANR	3462032	SizeofExpression	sizeof ( int )		3461980	0					
ANR	3462033	Sizeof	sizeof		3461980	0					
ANR	3462034	SizeofOperand	int		3461980	1					
ANR	3462035	SizeofExpression	sizeof ( int )		3461980	1					
ANR	3462036	Sizeof	sizeof		3461980	0					
ANR	3462037	SizeofOperand	int		3461980	1					
ANR	3462038	ReturnStatement	return FALSE ;	923:50:18140:18152	3461980	1	True				
ANR	3462039	Identifier	FALSE		3461980	0					
ANR	3462040	BreakStatement	break ;	924:3:18157:18162	3461980	2	True				
ANR	3462041	Label	case external :	926:2:18167:18180	3461980	3	True				
ANR	3462042	Identifier	external		3461980	0					
ANR	3462043	CompoundStatement		13:17:255:255	3461980	4					
ANR	3462044	ExpressionStatement	tmp = htonl ( i )	927:3:18187:18201	3461980	0	True				
ANR	3462045	AssignmentExpression	tmp = htonl ( i )		3461980	0		=			
ANR	3462046	Identifier	tmp		3461980	0					
ANR	3462047	CallExpression	htonl ( i )		3461980	1					
ANR	3462048	Callee	htonl		3461980	0					
ANR	3462049	Identifier	htonl		3461980	0					
ANR	3462050	ArgumentList	i		3461980	1					
ANR	3462051	Argument	i		3461980	0					
ANR	3462052	Identifier	i		3461980	0					
ANR	3462053	ExpressionStatement	pad = 0	928:3:18206:18213	3461980	1	True				
ANR	3462054	AssignmentExpression	pad = 0		3461980	0		=			
ANR	3462055	Identifier	pad		3461980	0					
ANR	3462056	PrimaryExpression	0		3461980	1					
ANR	3462057	ForStatement	for ( int s = 0 ; s < INT_SIZE - ( int ) sizeof ( int ) ; s ++ )		3461980	2					
ANR	3462058	ForInit	int s = 0 ;	929:8:18223:18230	3461980	0	True				
ANR	3462059	IdentifierDeclStatement	int s = 0 ;		3461980	0					
ANR	3462060	IdentifierDecl	s = 0		3461980	0					
ANR	3462061	IdentifierDeclType	int		3461980	0					
ANR	3462062	Identifier	s		3461980	1					
ANR	3462063	AssignmentExpression	s = 0		3461980	2		=			
ANR	3462064	Identifier	s		3461980	0					
ANR	3462065	PrimaryExpression	0		3461980	1					
ANR	3462066	Condition	s < INT_SIZE - ( int ) sizeof ( int )	929:17:18232:18260	3461980	1	True				
ANR	3462067	RelationalExpression	s < INT_SIZE - ( int ) sizeof ( int )		3461980	0		<			
ANR	3462068	Identifier	s		3461980	0					
ANR	3462069	AdditiveExpression	INT_SIZE - ( int ) sizeof ( int )		3461980	1		-			
ANR	3462070	Identifier	INT_SIZE		3461980	0					
ANR	3462071	CastExpression	( int ) sizeof ( int )		3461980	1					
ANR	3462072	CastTarget	int		3461980	0					
ANR	3462073	SizeofExpression	sizeof ( int )		3461980	1					
ANR	3462074	Sizeof	sizeof		3461980	0					
ANR	3462075	SizeofOperand	int		3461980	1					
ANR	3462076	PostIncDecOperationExpression	s ++	929:48:18263:18265	3461980	2	True				
ANR	3462077	Identifier	s		3461980	0					
ANR	3462078	IncDec	++		3461980	1					
ANR	3462079	CompoundStatement		16:53:341:341	3461980	3					
ANR	3462080	IfStatement	"if ( put_bytes ( & pad , 1 ) != 1 )"		3461980	0					
ANR	3462081	Condition	"put_bytes ( & pad , 1 ) != 1"	930:8:18278:18300	3461980	0	True				
ANR	3462082	EqualityExpression	"put_bytes ( & pad , 1 ) != 1"		3461980	0		!=			
ANR	3462083	CallExpression	"put_bytes ( & pad , 1 )"		3461980	0					
ANR	3462084	Callee	put_bytes		3461980	0					
ANR	3462085	Identifier	put_bytes		3461980	0					
ANR	3462086	ArgumentList	& pad		3461980	1					
ANR	3462087	Argument	& pad		3461980	0					
ANR	3462088	UnaryOperationExpression	& pad		3461980	0					
ANR	3462089	UnaryOperator	&		3461980	0					
ANR	3462090	Identifier	pad		3461980	1					
ANR	3462091	Argument	1		3461980	1					
ANR	3462092	PrimaryExpression	1		3461980	0					
ANR	3462093	PrimaryExpression	1		3461980	1					
ANR	3462094	ReturnStatement	return FALSE ;	930:33:18303:18315	3461980	1	True				
ANR	3462095	Identifier	FALSE		3461980	0					
ANR	3462096	IfStatement	"if ( put_bytes ( & tmp , sizeof ( int ) ) != sizeof ( int ) )"		3461980	3					
ANR	3462097	Condition	"put_bytes ( & tmp , sizeof ( int ) ) != sizeof ( int )"	932:7:18329:18371	3461980	0	True				
ANR	3462098	EqualityExpression	"put_bytes ( & tmp , sizeof ( int ) ) != sizeof ( int )"		3461980	0		!=			
ANR	3462099	CallExpression	"put_bytes ( & tmp , sizeof ( int ) )"		3461980	0					
ANR	3462100	Callee	put_bytes		3461980	0					
ANR	3462101	Identifier	put_bytes		3461980	0					
ANR	3462102	ArgumentList	& tmp		3461980	1					
ANR	3462103	Argument	& tmp		3461980	0					
ANR	3462104	UnaryOperationExpression	& tmp		3461980	0					
ANR	3462105	UnaryOperator	&		3461980	0					
ANR	3462106	Identifier	tmp		3461980	1					
ANR	3462107	Argument	sizeof ( int )		3461980	1					
ANR	3462108	SizeofExpression	sizeof ( int )		3461980	0					
ANR	3462109	Sizeof	sizeof		3461980	0					
ANR	3462110	SizeofOperand	int		3461980	1					
ANR	3462111	SizeofExpression	sizeof ( int )		3461980	1					
ANR	3462112	Sizeof	sizeof		3461980	0					
ANR	3462113	SizeofOperand	int		3461980	1					
ANR	3462114	ReturnStatement	return FALSE ;	932:52:18374:18386	3461980	1	True				
ANR	3462115	Identifier	FALSE		3461980	0					
ANR	3462116	BreakStatement	break ;	933:3:18391:18396	3461980	4	True				
ANR	3462117	Label	case ascii :	936:2:18405:18415	3461980	5	True				
ANR	3462118	Identifier	ascii		3461980	0					
ANR	3462119	ReturnStatement	return FALSE ;	937:3:18420:18432	3461980	6	True				
ANR	3462120	Identifier	FALSE		3461980	0					
ANR	3462121	ReturnStatement	return TRUE ;	940:1:18439:18450	3461980	6	True				
ANR	3462122	Identifier	TRUE		3461980	0					
ANR	3462123	ReturnType	int		3461980	1					
ANR	3462124	Identifier	Stream :: put		3461980	2					
ANR	3462125	ParameterList	unsigned int i		3461980	3					
ANR	3462126	Parameter	unsigned int i	913:13:17909:17923	3461980	0	True				
ANR	3462127	ParameterType	unsigned int		3461980	0					
ANR	3462128	Identifier	i		3461980	1					
ANR	3462129	CFGEntryNode	ENTRY		3461980		True				
ANR	3462130	CFGExitNode	EXIT		3461980		True				
ANR	3462131	Symbol	_code		3461980						
ANR	3462132	Symbol	INT_SIZE		3461980						
ANR	3462133	Symbol	i		3461980						
ANR	3462134	Symbol	TRUE		3461980						
ANR	3462135	Symbol	htonl		3461980						
ANR	3462136	Symbol	& i		3461980						
ANR	3462137	Symbol	pad		3461980						
ANR	3462138	Symbol	s		3461980						
ANR	3462139	Symbol	tmp		3461980						
ANR	3462140	Symbol	putcount		3461980						
ANR	3462141	Symbol	FALSE		3461980						
ANR	3462142	Symbol	& tmp		3461980						
ANR	3462143	Symbol	put_bytes		3461980						
ANR	3462144	Symbol	getcount		3461980						
ANR	3462145	Symbol	& pad		3461980						
ANR	3462146	Function	hton_is_noop	944:0:18514:18575							
ANR	3462147	FunctionDef	hton_is_noop ()		3462146	0					
ANR	3462148	CompoundStatement		945:0:18541:18575	3462146	0					
ANR	3462149	ReturnStatement	return ( bool ) ( 1 == htons ( 1 ) ) ;	946:1:18544:18573	3462146	0	True				
ANR	3462150	CastExpression	( bool ) ( 1 == htons ( 1 ) )		3462146	0					
ANR	3462151	CastTarget	bool		3462146	0					
ANR	3462152	EqualityExpression	1 == htons ( 1 )		3462146	1		==			
ANR	3462153	PrimaryExpression	1		3462146	0					
ANR	3462154	CallExpression	htons ( 1 )		3462146	1					
ANR	3462155	Callee	htons		3462146	0					
ANR	3462156	Identifier	htons		3462146	0					
ANR	3462157	ArgumentList	1		3462146	1					
ANR	3462158	Argument	1		3462146	0					
ANR	3462159	PrimaryExpression	1		3462146	0					
ANR	3462160	ReturnType	static bool		3462146	1					
ANR	3462161	Identifier	hton_is_noop		3462146	2					
ANR	3462162	ParameterList			3462146	3					
ANR	3462163	CFGEntryNode	ENTRY		3462146		True				
ANR	3462164	CFGExitNode	EXIT		3462146		True				
ANR	3462165	Symbol	htons		3462146						
ANR	3462166	Function	htonL	950:0:18640:18893							
ANR	3462167	FunctionDef	htonL (unsigned long hostint)		3462166	0					
ANR	3462168	CompoundStatement		951:0:18690:18893	3462166	0					
ANR	3462169	IdentifierDeclStatement	unsigned long netint ;	952:1:18693:18713	3462166	0	True				
ANR	3462170	IdentifierDecl	netint		3462166	0					
ANR	3462171	IdentifierDeclType	unsigned long		3462166	0					
ANR	3462172	Identifier	netint		3462166	1					
ANR	3462173	IdentifierDeclStatement	char * hostp = ( char * ) & hostint ;	953:1:18716:18746	3462166	1	True				
ANR	3462174	IdentifierDecl	* hostp = ( char * ) & hostint		3462166	0					
ANR	3462175	IdentifierDeclType	char *		3462166	0					
ANR	3462176	Identifier	hostp		3462166	1					
ANR	3462177	AssignmentExpression	* hostp = ( char * ) & hostint		3462166	2		=			
ANR	3462178	Identifier	hostp		3462166	0					
ANR	3462179	CastExpression	( char * ) & hostint		3462166	1					
ANR	3462180	CastTarget	char *		3462166	0					
ANR	3462181	UnaryOperationExpression	& hostint		3462166	1					
ANR	3462182	UnaryOperator	&		3462166	0					
ANR	3462183	Identifier	hostint		3462166	1					
ANR	3462184	IdentifierDeclStatement	char * netp = ( char * ) & netint ;	954:1:18749:18777	3462166	2	True				
ANR	3462185	IdentifierDecl	* netp = ( char * ) & netint		3462166	0					
ANR	3462186	IdentifierDeclType	char *		3462166	0					
ANR	3462187	Identifier	netp		3462166	1					
ANR	3462188	AssignmentExpression	* netp = ( char * ) & netint		3462166	2		=			
ANR	3462189	Identifier	netp		3462166	0					
ANR	3462190	CastExpression	( char * ) & netint		3462166	1					
ANR	3462191	CastTarget	char *		3462166	0					
ANR	3462192	UnaryOperationExpression	& netint		3462166	1					
ANR	3462193	UnaryOperator	&		3462166	0					
ANR	3462194	Identifier	netint		3462166	1					
ANR	3462195	ForStatement	"for ( unsigned int i = 0 , j = sizeof ( long ) - 1 ; i < sizeof ( long ) ; i ++ , j -- )"		3462166	3					
ANR	3462196	ForInit	"unsigned int i = 0 , j = sizeof ( long ) - 1 ;"	956:6:18786:18820	3462166	0	True				
ANR	3462197	IdentifierDeclStatement	"unsigned int i = 0 , j = sizeof ( long ) - 1 ;"		3462166	0					
ANR	3462198	IdentifierDecl	i = 0		3462166	0					
ANR	3462199	IdentifierDeclType	unsigned int		3462166	0					
ANR	3462200	Identifier	i		3462166	1					
ANR	3462201	AssignmentExpression	i = 0		3462166	2		=			
ANR	3462202	Identifier	i		3462166	0					
ANR	3462203	PrimaryExpression	0		3462166	1					
ANR	3462204	IdentifierDecl	j = sizeof ( long ) - 1		3462166	1					
ANR	3462205	IdentifierDeclType	unsigned int		3462166	0					
ANR	3462206	Identifier	j		3462166	1					
ANR	3462207	AssignmentExpression	j = sizeof ( long ) - 1		3462166	2		=			
ANR	3462208	Identifier	j		3462166	0					
ANR	3462209	AdditiveExpression	sizeof ( long ) - 1		3462166	1		-			
ANR	3462210	SizeofExpression	sizeof ( long )		3462166	0					
ANR	3462211	Sizeof	sizeof		3462166	0					
ANR	3462212	SizeofOperand	long		3462166	1					
ANR	3462213	PrimaryExpression	1		3462166	1					
ANR	3462214	Condition	i < sizeof ( long )	956:42:18822:18837	3462166	1	True				
ANR	3462215	RelationalExpression	i < sizeof ( long )		3462166	0		<			
ANR	3462216	Identifier	i		3462166	0					
ANR	3462217	SizeofExpression	sizeof ( long )		3462166	1					
ANR	3462218	Sizeof	sizeof		3462166	0					
ANR	3462219	SizeofOperand	long		3462166	1					
ANR	3462220	Expression	"i ++ , j --"	956:60:18840:18847	3462166	2	True				
ANR	3462221	PostIncDecOperationExpression	i ++		3462166	0					
ANR	3462222	Identifier	i		3462166	0					
ANR	3462223	IncDec	++		3462166	1					
ANR	3462224	PostIncDecOperationExpression	j --		3462166	1					
ANR	3462225	Identifier	j		3462166	0					
ANR	3462226	IncDec	--		3462166	1					
ANR	3462227	CompoundStatement		6:70:159:159	3462166	3					
ANR	3462228	ExpressionStatement	netp [ i ] = hostp [ j ]	957:2:18854:18872	3462166	0	True				
ANR	3462229	AssignmentExpression	netp [ i ] = hostp [ j ]		3462166	0		=			
ANR	3462230	ArrayIndexing	netp [ i ]		3462166	0					
ANR	3462231	Identifier	netp		3462166	0					
ANR	3462232	Identifier	i		3462166	1					
ANR	3462233	ArrayIndexing	hostp [ j ]		3462166	1					
ANR	3462234	Identifier	hostp		3462166	0					
ANR	3462235	Identifier	j		3462166	1					
ANR	3462236	ReturnStatement	return netint ;	959:1:18878:18891	3462166	4	True				
ANR	3462237	Identifier	netint		3462166	0					
ANR	3462238	ReturnType	static unsigned long		3462166	1					
ANR	3462239	Identifier	htonL		3462166	2					
ANR	3462240	ParameterList	unsigned long hostint		3462166	3					
ANR	3462241	Parameter	unsigned long hostint	950:27:18667:18687	3462166	0	True				
ANR	3462242	ParameterType	unsigned long		3462166	0					
ANR	3462243	Identifier	hostint		3462166	1					
ANR	3462244	CFGEntryNode	ENTRY		3462166		True				
ANR	3462245	CFGExitNode	EXIT		3462166		True				
ANR	3462246	Symbol	netp		3462166						
ANR	3462247	Symbol	& netint		3462166						
ANR	3462248	Symbol	* i		3462166						
ANR	3462249	Symbol	* j		3462166						
ANR	3462250	Symbol	hostp		3462166						
ANR	3462251	Symbol	& hostint		3462166						
ANR	3462252	Symbol	netint		3462166						
ANR	3462253	Symbol	i		3462166						
ANR	3462254	Symbol	j		3462166						
ANR	3462255	Symbol	hostint		3462166						
ANR	3462256	Symbol	* netp		3462166						
ANR	3462257	Symbol	* hostp		3462166						
ANR	3462258	Function	ntohL	963:0:18958:19212							
ANR	3462259	FunctionDef	ntohL (unsigned long netint)		3462258	0					
ANR	3462260	CompoundStatement		964:0:19007:19212	3462258	0					
ANR	3462261	IdentifierDeclStatement	unsigned long hostint ;	965:1:19010:19031	3462258	0	True				
ANR	3462262	IdentifierDecl	hostint		3462258	0					
ANR	3462263	IdentifierDeclType	unsigned long		3462258	0					
ANR	3462264	Identifier	hostint		3462258	1					
ANR	3462265	IdentifierDeclStatement	char * hostp = ( char * ) & hostint ;	966:1:19034:19064	3462258	1	True				
ANR	3462266	IdentifierDecl	* hostp = ( char * ) & hostint		3462258	0					
ANR	3462267	IdentifierDeclType	char *		3462258	0					
ANR	3462268	Identifier	hostp		3462258	1					
ANR	3462269	AssignmentExpression	* hostp = ( char * ) & hostint		3462258	2		=			
ANR	3462270	Identifier	hostp		3462258	0					
ANR	3462271	CastExpression	( char * ) & hostint		3462258	1					
ANR	3462272	CastTarget	char *		3462258	0					
ANR	3462273	UnaryOperationExpression	& hostint		3462258	1					
ANR	3462274	UnaryOperator	&		3462258	0					
ANR	3462275	Identifier	hostint		3462258	1					
ANR	3462276	IdentifierDeclStatement	char * netp = ( char * ) & netint ;	967:1:19067:19095	3462258	2	True				
ANR	3462277	IdentifierDecl	* netp = ( char * ) & netint		3462258	0					
ANR	3462278	IdentifierDeclType	char *		3462258	0					
ANR	3462279	Identifier	netp		3462258	1					
ANR	3462280	AssignmentExpression	* netp = ( char * ) & netint		3462258	2		=			
ANR	3462281	Identifier	netp		3462258	0					
ANR	3462282	CastExpression	( char * ) & netint		3462258	1					
ANR	3462283	CastTarget	char *		3462258	0					
ANR	3462284	UnaryOperationExpression	& netint		3462258	1					
ANR	3462285	UnaryOperator	&		3462258	0					
ANR	3462286	Identifier	netint		3462258	1					
ANR	3462287	ForStatement	"for ( unsigned int i = 0 , j = sizeof ( long ) - 1 ; i < sizeof ( long ) ; i ++ , j -- )"		3462258	3					
ANR	3462288	ForInit	"unsigned int i = 0 , j = sizeof ( long ) - 1 ;"	969:6:19104:19138	3462258	0	True				
ANR	3462289	IdentifierDeclStatement	"unsigned int i = 0 , j = sizeof ( long ) - 1 ;"		3462258	0					
ANR	3462290	IdentifierDecl	i = 0		3462258	0					
ANR	3462291	IdentifierDeclType	unsigned int		3462258	0					
ANR	3462292	Identifier	i		3462258	1					
ANR	3462293	AssignmentExpression	i = 0		3462258	2		=			
ANR	3462294	Identifier	i		3462258	0					
ANR	3462295	PrimaryExpression	0		3462258	1					
ANR	3462296	IdentifierDecl	j = sizeof ( long ) - 1		3462258	1					
ANR	3462297	IdentifierDeclType	unsigned int		3462258	0					
ANR	3462298	Identifier	j		3462258	1					
ANR	3462299	AssignmentExpression	j = sizeof ( long ) - 1		3462258	2		=			
ANR	3462300	Identifier	j		3462258	0					
ANR	3462301	AdditiveExpression	sizeof ( long ) - 1		3462258	1		-			
ANR	3462302	SizeofExpression	sizeof ( long )		3462258	0					
ANR	3462303	Sizeof	sizeof		3462258	0					
ANR	3462304	SizeofOperand	long		3462258	1					
ANR	3462305	PrimaryExpression	1		3462258	1					
ANR	3462306	Condition	i < sizeof ( long )	969:42:19140:19155	3462258	1	True				
ANR	3462307	RelationalExpression	i < sizeof ( long )		3462258	0		<			
ANR	3462308	Identifier	i		3462258	0					
ANR	3462309	SizeofExpression	sizeof ( long )		3462258	1					
ANR	3462310	Sizeof	sizeof		3462258	0					
ANR	3462311	SizeofOperand	long		3462258	1					
ANR	3462312	Expression	"i ++ , j --"	969:60:19158:19165	3462258	2	True				
ANR	3462313	PostIncDecOperationExpression	i ++		3462258	0					
ANR	3462314	Identifier	i		3462258	0					
ANR	3462315	IncDec	++		3462258	1					
ANR	3462316	PostIncDecOperationExpression	j --		3462258	1					
ANR	3462317	Identifier	j		3462258	0					
ANR	3462318	IncDec	--		3462258	1					
ANR	3462319	CompoundStatement		6:70:160:160	3462258	3					
ANR	3462320	ExpressionStatement	hostp [ i ] = netp [ j ]	970:2:19172:19190	3462258	0	True				
ANR	3462321	AssignmentExpression	hostp [ i ] = netp [ j ]		3462258	0		=			
ANR	3462322	ArrayIndexing	hostp [ i ]		3462258	0					
ANR	3462323	Identifier	hostp		3462258	0					
ANR	3462324	Identifier	i		3462258	1					
ANR	3462325	ArrayIndexing	netp [ j ]		3462258	1					
ANR	3462326	Identifier	netp		3462258	0					
ANR	3462327	Identifier	j		3462258	1					
ANR	3462328	ReturnStatement	return hostint ;	972:1:19196:19210	3462258	4	True				
ANR	3462329	Identifier	hostint		3462258	0					
ANR	3462330	ReturnType	static unsigned long		3462258	1					
ANR	3462331	Identifier	ntohL		3462258	2					
ANR	3462332	ParameterList	unsigned long netint		3462258	3					
ANR	3462333	Parameter	unsigned long netint	963:27:18985:19004	3462258	0	True				
ANR	3462334	ParameterType	unsigned long		3462258	0					
ANR	3462335	Identifier	netint		3462258	1					
ANR	3462336	CFGEntryNode	ENTRY		3462258		True				
ANR	3462337	CFGExitNode	EXIT		3462258		True				
ANR	3462338	Symbol	netp		3462258						
ANR	3462339	Symbol	& netint		3462258						
ANR	3462340	Symbol	* i		3462258						
ANR	3462341	Symbol	* j		3462258						
ANR	3462342	Symbol	hostp		3462258						
ANR	3462343	Symbol	& hostint		3462258						
ANR	3462344	Symbol	netint		3462258						
ANR	3462345	Symbol	i		3462258						
ANR	3462346	Symbol	j		3462258						
ANR	3462347	Symbol	hostint		3462258						
ANR	3462348	Symbol	* netp		3462258						
ANR	3462349	Symbol	* hostp		3462258						
ANR	3462350	Function	Stream :: put	975:0:19215:19950							
ANR	3462351	FunctionDef	Stream :: put (long l)		3462350	0					
ANR	3462352	CompoundStatement		977:0:19241:19950	3462350	0					
ANR	3462353	IdentifierDeclStatement	char pad ;	978:1:19244:19252	3462350	0	True				
ANR	3462354	IdentifierDecl	pad		3462350	0					
ANR	3462355	IdentifierDeclType	char		3462350	0					
ANR	3462356	Identifier	pad		3462350	1					
ANR	3462357	ExpressionStatement	"NETWORK_TRACE ( ""put long "" << l )"	979:2:19256:19287	3462350	1	True				
ANR	3462358	CallExpression	"NETWORK_TRACE ( ""put long "" << l )"		3462350	0					
ANR	3462359	Callee	NETWORK_TRACE		3462350	0					
ANR	3462360	Identifier	NETWORK_TRACE		3462350	0					
ANR	3462361	ArgumentList	"""put long "" << l"		3462350	1					
ANR	3462362	Argument	"""put long "" << l"		3462350	0					
ANR	3462363	ShiftExpression	"""put long "" << l"		3462350	0		<<			
ANR	3462364	PrimaryExpression	"""put long """		3462350	0					
ANR	3462365	Identifier	l		3462350	1					
ANR	3462366	SwitchStatement	switch ( _code )		3462350	2					
ANR	3462367	Condition	_code	981:8:19298:19302	3462350	0	True				
ANR	3462368	Identifier	_code		3462350	0					
ANR	3462369	CompoundStatement		5:14:62:62	3462350	1					
ANR	3462370	Label	case internal :	982:2:19308:19321	3462350	0	True				
ANR	3462371	Identifier	internal		3462350	0					
ANR	3462372	IfStatement	"if ( put_bytes ( & l , sizeof ( long ) ) != sizeof ( long ) )"		3462350	1					
ANR	3462373	Condition	"put_bytes ( & l , sizeof ( long ) ) != sizeof ( long )"	983:7:19330:19372	3462350	0	True				
ANR	3462374	EqualityExpression	"put_bytes ( & l , sizeof ( long ) ) != sizeof ( long )"		3462350	0		!=			
ANR	3462375	CallExpression	"put_bytes ( & l , sizeof ( long ) )"		3462350	0					
ANR	3462376	Callee	put_bytes		3462350	0					
ANR	3462377	Identifier	put_bytes		3462350	0					
ANR	3462378	ArgumentList	& l		3462350	1					
ANR	3462379	Argument	& l		3462350	0					
ANR	3462380	UnaryOperationExpression	& l		3462350	0					
ANR	3462381	UnaryOperator	&		3462350	0					
ANR	3462382	Identifier	l		3462350	1					
ANR	3462383	Argument	sizeof ( long )		3462350	1					
ANR	3462384	SizeofExpression	sizeof ( long )		3462350	0					
ANR	3462385	Sizeof	sizeof		3462350	0					
ANR	3462386	SizeofOperand	long		3462350	1					
ANR	3462387	SizeofExpression	sizeof ( long )		3462350	1					
ANR	3462388	Sizeof	sizeof		3462350	0					
ANR	3462389	SizeofOperand	long		3462350	1					
ANR	3462390	ReturnStatement	return FALSE ;	983:52:19375:19387	3462350	1	True				
ANR	3462391	Identifier	FALSE		3462350	0					
ANR	3462392	BreakStatement	break ;	984:3:19392:19397	3462350	2	True				
ANR	3462393	Label	case external :	986:2:19402:19415	3462350	3	True				
ANR	3462394	Identifier	external		3462350	0					
ANR	3462395	IfStatement	if ( ( sizeof ( int ) == sizeof ( long ) ) || ( sizeof ( long ) > INT_SIZE ) )		3462350	4					
ANR	3462396	Condition	( sizeof ( int ) == sizeof ( long ) ) || ( sizeof ( long ) > INT_SIZE )	987:7:19424:19481	3462350	0	True				
ANR	3462397	OrExpression	( sizeof ( int ) == sizeof ( long ) ) || ( sizeof ( long ) > INT_SIZE )		3462350	0		||			
ANR	3462398	EqualityExpression	sizeof ( int ) == sizeof ( long )		3462350	0		==			
ANR	3462399	SizeofExpression	sizeof ( int )		3462350	0					
ANR	3462400	Sizeof	sizeof		3462350	0					
ANR	3462401	SizeofOperand	int		3462350	1					
ANR	3462402	SizeofExpression	sizeof ( long )		3462350	1					
ANR	3462403	Sizeof	sizeof		3462350	0					
ANR	3462404	SizeofOperand	long		3462350	1					
ANR	3462405	RelationalExpression	sizeof ( long ) > INT_SIZE		3462350	1		>			
ANR	3462406	SizeofExpression	sizeof ( long )		3462350	0					
ANR	3462407	Sizeof	sizeof		3462350	0					
ANR	3462408	SizeofOperand	long		3462350	1					
ANR	3462409	Identifier	INT_SIZE		3462350	1					
ANR	3462410	CompoundStatement		11:67:242:242	3462350	1					
ANR	3462411	ReturnStatement	return put ( ( int ) l ) ;	988:4:19490:19508	3462350	0	True				
ANR	3462412	CallExpression	put ( ( int ) l )		3462350	0					
ANR	3462413	Callee	put		3462350	0					
ANR	3462414	Identifier	put		3462350	0					
ANR	3462415	ArgumentList	( int ) l		3462350	1					
ANR	3462416	Argument	( int ) l		3462350	0					
ANR	3462417	CastExpression	( int ) l		3462350	0					
ANR	3462418	CastTarget	int		3462350	0					
ANR	3462419	Identifier	l		3462350	1					
ANR	3462420	ElseStatement	else		3462350	0					
ANR	3462421	CompoundStatement		13:10:278:278	3462350	0					
ANR	3462422	IfStatement	if ( ! hton_is_noop ( ) )		3462350	0					
ANR	3462423	Condition	! hton_is_noop ( )	990:8:19530:19544	3462350	0	True				
ANR	3462424	UnaryOperationExpression	! hton_is_noop ( )		3462350	0					
ANR	3462425	UnaryOperator	!		3462350	0					
ANR	3462426	CallExpression	hton_is_noop ( )		3462350	1					
ANR	3462427	Callee	hton_is_noop		3462350	0					
ANR	3462428	Identifier	hton_is_noop		3462350	0					
ANR	3462429	ArgumentList			3462350	1					
ANR	3462430	CompoundStatement		14:25:305:305	3462350	1					
ANR	3462431	ExpressionStatement	l = htonL ( l )	991:5:19590:19602	3462350	0	True				
ANR	3462432	AssignmentExpression	l = htonL ( l )		3462350	0		=			
ANR	3462433	Identifier	l		3462350	0					
ANR	3462434	CallExpression	htonL ( l )		3462350	1					
ANR	3462435	Callee	htonL		3462350	0					
ANR	3462436	Identifier	htonL		3462350	0					
ANR	3462437	ArgumentList	l		3462350	1					
ANR	3462438	Argument	l		3462350	0					
ANR	3462439	Identifier	l		3462350	0					
ANR	3462440	IfStatement	if ( sizeof ( long ) < INT_SIZE )		3462350	1					
ANR	3462441	Condition	sizeof ( long ) < INT_SIZE	993:8:19618:19640	3462350	0	True				
ANR	3462442	RelationalExpression	sizeof ( long ) < INT_SIZE		3462350	0		<			
ANR	3462443	SizeofExpression	sizeof ( long )		3462350	0					
ANR	3462444	Sizeof	sizeof		3462350	0					
ANR	3462445	SizeofOperand	long		3462350	1					
ANR	3462446	Identifier	INT_SIZE		3462350	1					
ANR	3462447	CompoundStatement		17:33:401:401	3462350	1					
ANR	3462448	ExpressionStatement	pad = ( l >= 0 ) ? 0 : 0xff	994:5:19650:19675	3462350	0	True				
ANR	3462449	AssignmentExpression	pad = ( l >= 0 ) ? 0 : 0xff		3462350	0		=			
ANR	3462450	Identifier	pad		3462350	0					
ANR	3462451	ConditionalExpression	( l >= 0 ) ? 0 : 0xff		3462350	1					
ANR	3462452	Condition	l >= 0		3462350	0					
ANR	3462453	RelationalExpression	l >= 0		3462350	0		>=			
ANR	3462454	Identifier	l		3462350	0					
ANR	3462455	PrimaryExpression	0		3462350	1					
ANR	3462456	PrimaryExpression	0		3462350	1					
ANR	3462457	PrimaryExpression	0xff		3462350	2					
ANR	3462458	ForStatement	for ( int s = 0 ; s < INT_SIZE - ( int ) sizeof ( long ) ; s ++ )		3462350	1					
ANR	3462459	ForInit	int s = 0 ;	995:10:19708:19715	3462350	0	True				
ANR	3462460	IdentifierDeclStatement	int s = 0 ;		3462350	0					
ANR	3462461	IdentifierDecl	s = 0		3462350	0					
ANR	3462462	IdentifierDeclType	int		3462350	0					
ANR	3462463	Identifier	s		3462350	1					
ANR	3462464	AssignmentExpression	s = 0		3462350	2		=			
ANR	3462465	Identifier	s		3462350	0					
ANR	3462466	PrimaryExpression	0		3462350	1					
ANR	3462467	Condition	s < INT_SIZE - ( int ) sizeof ( long )	995:19:19717:19746	3462350	1	True				
ANR	3462468	RelationalExpression	s < INT_SIZE - ( int ) sizeof ( long )		3462350	0		<			
ANR	3462469	Identifier	s		3462350	0					
ANR	3462470	AdditiveExpression	INT_SIZE - ( int ) sizeof ( long )		3462350	1		-			
ANR	3462471	Identifier	INT_SIZE		3462350	0					
ANR	3462472	CastExpression	( int ) sizeof ( long )		3462350	1					
ANR	3462473	CastTarget	int		3462350	0					
ANR	3462474	SizeofExpression	sizeof ( long )		3462350	1					
ANR	3462475	Sizeof	sizeof		3462350	0					
ANR	3462476	SizeofOperand	long		3462350	1					
ANR	3462477	PostIncDecOperationExpression	s ++	995:51:19749:19751	3462350	2	True				
ANR	3462478	Identifier	s		3462350	0					
ANR	3462479	IncDec	++		3462350	1					
ANR	3462480	CompoundStatement		19:56:512:512	3462350	3					
ANR	3462481	IfStatement	"if ( put_bytes ( & pad , 1 ) != 1 )"		3462350	0					
ANR	3462482	Condition	"put_bytes ( & pad , 1 ) != 1"	996:10:19766:19788	3462350	0	True				
ANR	3462483	EqualityExpression	"put_bytes ( & pad , 1 ) != 1"		3462350	0		!=			
ANR	3462484	CallExpression	"put_bytes ( & pad , 1 )"		3462350	0					
ANR	3462485	Callee	put_bytes		3462350	0					
ANR	3462486	Identifier	put_bytes		3462350	0					
ANR	3462487	ArgumentList	& pad		3462350	1					
ANR	3462488	Argument	& pad		3462350	0					
ANR	3462489	UnaryOperationExpression	& pad		3462350	0					
ANR	3462490	UnaryOperator	&		3462350	0					
ANR	3462491	Identifier	pad		3462350	1					
ANR	3462492	Argument	1		3462350	1					
ANR	3462493	PrimaryExpression	1		3462350	0					
ANR	3462494	PrimaryExpression	1		3462350	1					
ANR	3462495	ReturnStatement	return FALSE ;	996:35:19791:19803	3462350	1	True				
ANR	3462496	Identifier	FALSE		3462350	0					
ANR	3462497	IfStatement	"if ( put_bytes ( & l , sizeof ( long ) ) != sizeof ( long ) )"		3462350	2					
ANR	3462498	Condition	"put_bytes ( & l , sizeof ( long ) ) != sizeof ( long )"	999:8:19826:19868	3462350	0	True				
ANR	3462499	EqualityExpression	"put_bytes ( & l , sizeof ( long ) ) != sizeof ( long )"		3462350	0		!=			
ANR	3462500	CallExpression	"put_bytes ( & l , sizeof ( long ) )"		3462350	0					
ANR	3462501	Callee	put_bytes		3462350	0					
ANR	3462502	Identifier	put_bytes		3462350	0					
ANR	3462503	ArgumentList	& l		3462350	1					
ANR	3462504	Argument	& l		3462350	0					
ANR	3462505	UnaryOperationExpression	& l		3462350	0					
ANR	3462506	UnaryOperator	&		3462350	0					
ANR	3462507	Identifier	l		3462350	1					
ANR	3462508	Argument	sizeof ( long )		3462350	1					
ANR	3462509	SizeofExpression	sizeof ( long )		3462350	0					
ANR	3462510	Sizeof	sizeof		3462350	0					
ANR	3462511	SizeofOperand	long		3462350	1					
ANR	3462512	SizeofExpression	sizeof ( long )		3462350	1					
ANR	3462513	Sizeof	sizeof		3462350	0					
ANR	3462514	SizeofOperand	long		3462350	1					
ANR	3462515	ReturnStatement	return FALSE ;	999:53:19871:19883	3462350	1	True				
ANR	3462516	Identifier	FALSE		3462350	0					
ANR	3462517	BreakStatement	break ;	1001:3:19893:19898	3462350	5	True				
ANR	3462518	Label	case ascii :	1003:2:19903:19913	3462350	6	True				
ANR	3462519	Identifier	ascii		3462350	0					
ANR	3462520	ReturnStatement	return FALSE ;	1004:3:19918:19930	3462350	7	True				
ANR	3462521	Identifier	FALSE		3462350	0					
ANR	3462522	ReturnStatement	return TRUE ;	1007:1:19937:19948	3462350	3	True				
ANR	3462523	Identifier	TRUE		3462350	0					
ANR	3462524	ReturnType	int		3462350	1					
ANR	3462525	Identifier	Stream :: put		3462350	2					
ANR	3462526	ParameterList	long l		3462350	3					
ANR	3462527	Parameter	long l	976:13:19233:19238	3462350	0	True				
ANR	3462528	ParameterType	long		3462350	0					
ANR	3462529	Identifier	l		3462350	1					
ANR	3462530	CFGEntryNode	ENTRY		3462350		True				
ANR	3462531	CFGExitNode	EXIT		3462350		True				
ANR	3462532	Symbol	_code		3462350						
ANR	3462533	Symbol	INT_SIZE		3462350						
ANR	3462534	Symbol	TRUE		3462350						
ANR	3462535	Symbol	l		3462350						
ANR	3462536	Symbol	put		3462350						
ANR	3462537	Symbol	htonL		3462350						
ANR	3462538	Symbol	pad		3462350						
ANR	3462539	Symbol	& l		3462350						
ANR	3462540	Symbol	s		3462350						
ANR	3462541	Symbol	hton_is_noop		3462350						
ANR	3462542	Symbol	FALSE		3462350						
ANR	3462543	Symbol	put_bytes		3462350						
ANR	3462544	Symbol	& pad		3462350						
ANR	3462545	Function	Stream :: put	1012:0:19955:20669							
ANR	3462546	FunctionDef	Stream :: put (unsigned long l)		3462545	0					
ANR	3462547	CompoundStatement		1014:0:19990:20669	3462545	0					
ANR	3462548	IdentifierDeclStatement	char pad ;	1015:1:19993:20001	3462545	0	True				
ANR	3462549	IdentifierDecl	pad		3462545	0					
ANR	3462550	IdentifierDeclType	char		3462545	0					
ANR	3462551	Identifier	pad		3462545	1					
ANR	3462552	ExpressionStatement	"NETWORK_TRACE ( ""put long "" << l )"	1016:2:20005:20036	3462545	1	True				
ANR	3462553	CallExpression	"NETWORK_TRACE ( ""put long "" << l )"		3462545	0					
ANR	3462554	Callee	NETWORK_TRACE		3462545	0					
ANR	3462555	Identifier	NETWORK_TRACE		3462545	0					
ANR	3462556	ArgumentList	"""put long "" << l"		3462545	1					
ANR	3462557	Argument	"""put long "" << l"		3462545	0					
ANR	3462558	ShiftExpression	"""put long "" << l"		3462545	0		<<			
ANR	3462559	PrimaryExpression	"""put long """		3462545	0					
ANR	3462560	Identifier	l		3462545	1					
ANR	3462561	SwitchStatement	switch ( _code )		3462545	2					
ANR	3462562	Condition	_code	1018:8:20047:20051	3462545	0	True				
ANR	3462563	Identifier	_code		3462545	0					
ANR	3462564	CompoundStatement		5:14:62:62	3462545	1					
ANR	3462565	Label	case internal :	1019:2:20057:20070	3462545	0	True				
ANR	3462566	Identifier	internal		3462545	0					
ANR	3462567	IfStatement	"if ( put_bytes ( & l , sizeof ( long ) ) != sizeof ( long ) )"		3462545	1					
ANR	3462568	Condition	"put_bytes ( & l , sizeof ( long ) ) != sizeof ( long )"	1020:7:20079:20121	3462545	0	True				
ANR	3462569	EqualityExpression	"put_bytes ( & l , sizeof ( long ) ) != sizeof ( long )"		3462545	0		!=			
ANR	3462570	CallExpression	"put_bytes ( & l , sizeof ( long ) )"		3462545	0					
ANR	3462571	Callee	put_bytes		3462545	0					
ANR	3462572	Identifier	put_bytes		3462545	0					
ANR	3462573	ArgumentList	& l		3462545	1					
ANR	3462574	Argument	& l		3462545	0					
ANR	3462575	UnaryOperationExpression	& l		3462545	0					
ANR	3462576	UnaryOperator	&		3462545	0					
ANR	3462577	Identifier	l		3462545	1					
ANR	3462578	Argument	sizeof ( long )		3462545	1					
ANR	3462579	SizeofExpression	sizeof ( long )		3462545	0					
ANR	3462580	Sizeof	sizeof		3462545	0					
ANR	3462581	SizeofOperand	long		3462545	1					
ANR	3462582	SizeofExpression	sizeof ( long )		3462545	1					
ANR	3462583	Sizeof	sizeof		3462545	0					
ANR	3462584	SizeofOperand	long		3462545	1					
ANR	3462585	ReturnStatement	return FALSE ;	1020:52:20124:20136	3462545	1	True				
ANR	3462586	Identifier	FALSE		3462545	0					
ANR	3462587	BreakStatement	break ;	1021:3:20141:20146	3462545	2	True				
ANR	3462588	Label	case external :	1023:2:20151:20164	3462545	3	True				
ANR	3462589	Identifier	external		3462545	0					
ANR	3462590	IfStatement	if ( ( sizeof ( int ) == sizeof ( long ) ) || ( sizeof ( long ) > INT_SIZE ) )		3462545	4					
ANR	3462591	Condition	( sizeof ( int ) == sizeof ( long ) ) || ( sizeof ( long ) > INT_SIZE )	1024:7:20173:20230	3462545	0	True				
ANR	3462592	OrExpression	( sizeof ( int ) == sizeof ( long ) ) || ( sizeof ( long ) > INT_SIZE )		3462545	0		||			
ANR	3462593	EqualityExpression	sizeof ( int ) == sizeof ( long )		3462545	0		==			
ANR	3462594	SizeofExpression	sizeof ( int )		3462545	0					
ANR	3462595	Sizeof	sizeof		3462545	0					
ANR	3462596	SizeofOperand	int		3462545	1					
ANR	3462597	SizeofExpression	sizeof ( long )		3462545	1					
ANR	3462598	Sizeof	sizeof		3462545	0					
ANR	3462599	SizeofOperand	long		3462545	1					
ANR	3462600	RelationalExpression	sizeof ( long ) > INT_SIZE		3462545	1		>			
ANR	3462601	SizeofExpression	sizeof ( long )		3462545	0					
ANR	3462602	Sizeof	sizeof		3462545	0					
ANR	3462603	SizeofOperand	long		3462545	1					
ANR	3462604	Identifier	INT_SIZE		3462545	1					
ANR	3462605	CompoundStatement		11:67:242:242	3462545	1					
ANR	3462606	ReturnStatement	return put ( ( unsigned int ) l ) ;	1025:4:20239:20266	3462545	0	True				
ANR	3462607	CallExpression	put ( ( unsigned int ) l )		3462545	0					
ANR	3462608	Callee	put		3462545	0					
ANR	3462609	Identifier	put		3462545	0					
ANR	3462610	ArgumentList	( unsigned int ) l		3462545	1					
ANR	3462611	Argument	( unsigned int ) l		3462545	0					
ANR	3462612	CastExpression	( unsigned int ) l		3462545	0					
ANR	3462613	CastTarget	unsigned int		3462545	0					
ANR	3462614	Identifier	l		3462545	1					
ANR	3462615	ElseStatement	else		3462545	0					
ANR	3462616	CompoundStatement		13:10:287:287	3462545	0					
ANR	3462617	IfStatement	if ( ! hton_is_noop ( ) )		3462545	0					
ANR	3462618	Condition	! hton_is_noop ( )	1027:8:20288:20302	3462545	0	True				
ANR	3462619	UnaryOperationExpression	! hton_is_noop ( )		3462545	0					
ANR	3462620	UnaryOperator	!		3462545	0					
ANR	3462621	CallExpression	hton_is_noop ( )		3462545	1					
ANR	3462622	Callee	hton_is_noop		3462545	0					
ANR	3462623	Identifier	hton_is_noop		3462545	0					
ANR	3462624	ArgumentList			3462545	1					
ANR	3462625	CompoundStatement		14:25:314:314	3462545	1					
ANR	3462626	ExpressionStatement	l = htonL ( l )	1028:5:20348:20360	3462545	0	True				
ANR	3462627	AssignmentExpression	l = htonL ( l )		3462545	0		=			
ANR	3462628	Identifier	l		3462545	0					
ANR	3462629	CallExpression	htonL ( l )		3462545	1					
ANR	3462630	Callee	htonL		3462545	0					
ANR	3462631	Identifier	htonL		3462545	0					
ANR	3462632	ArgumentList	l		3462545	1					
ANR	3462633	Argument	l		3462545	0					
ANR	3462634	Identifier	l		3462545	0					
ANR	3462635	IfStatement	if ( sizeof ( long ) < INT_SIZE )		3462545	1					
ANR	3462636	Condition	sizeof ( long ) < INT_SIZE	1030:8:20376:20398	3462545	0	True				
ANR	3462637	RelationalExpression	sizeof ( long ) < INT_SIZE		3462545	0		<			
ANR	3462638	SizeofExpression	sizeof ( long )		3462545	0					
ANR	3462639	Sizeof	sizeof		3462545	0					
ANR	3462640	SizeofOperand	long		3462545	1					
ANR	3462641	Identifier	INT_SIZE		3462545	1					
ANR	3462642	CompoundStatement		17:33:410:410	3462545	1					
ANR	3462643	ExpressionStatement	pad = 0	1031:5:20408:20415	3462545	0	True				
ANR	3462644	AssignmentExpression	pad = 0		3462545	0		=			
ANR	3462645	Identifier	pad		3462545	0					
ANR	3462646	PrimaryExpression	0		3462545	1					
ANR	3462647	ForStatement	for ( int s = 0 ; s < INT_SIZE - ( int ) sizeof ( long ) ; s ++ )		3462545	1					
ANR	3462648	ForInit	int s = 0 ;	1032:10:20427:20434	3462545	0	True				
ANR	3462649	IdentifierDeclStatement	int s = 0 ;		3462545	0					
ANR	3462650	IdentifierDecl	s = 0		3462545	0					
ANR	3462651	IdentifierDeclType	int		3462545	0					
ANR	3462652	Identifier	s		3462545	1					
ANR	3462653	AssignmentExpression	s = 0		3462545	2		=			
ANR	3462654	Identifier	s		3462545	0					
ANR	3462655	PrimaryExpression	0		3462545	1					
ANR	3462656	Condition	s < INT_SIZE - ( int ) sizeof ( long )	1032:19:20436:20465	3462545	1	True				
ANR	3462657	RelationalExpression	s < INT_SIZE - ( int ) sizeof ( long )		3462545	0		<			
ANR	3462658	Identifier	s		3462545	0					
ANR	3462659	AdditiveExpression	INT_SIZE - ( int ) sizeof ( long )		3462545	1		-			
ANR	3462660	Identifier	INT_SIZE		3462545	0					
ANR	3462661	CastExpression	( int ) sizeof ( long )		3462545	1					
ANR	3462662	CastTarget	int		3462545	0					
ANR	3462663	SizeofExpression	sizeof ( long )		3462545	1					
ANR	3462664	Sizeof	sizeof		3462545	0					
ANR	3462665	SizeofOperand	long		3462545	1					
ANR	3462666	PostIncDecOperationExpression	s ++	1032:51:20468:20470	3462545	2	True				
ANR	3462667	Identifier	s		3462545	0					
ANR	3462668	IncDec	++		3462545	1					
ANR	3462669	CompoundStatement		19:56:482:482	3462545	3					
ANR	3462670	IfStatement	"if ( put_bytes ( & pad , 1 ) != 1 )"		3462545	0					
ANR	3462671	Condition	"put_bytes ( & pad , 1 ) != 1"	1033:10:20485:20507	3462545	0	True				
ANR	3462672	EqualityExpression	"put_bytes ( & pad , 1 ) != 1"		3462545	0		!=			
ANR	3462673	CallExpression	"put_bytes ( & pad , 1 )"		3462545	0					
ANR	3462674	Callee	put_bytes		3462545	0					
ANR	3462675	Identifier	put_bytes		3462545	0					
ANR	3462676	ArgumentList	& pad		3462545	1					
ANR	3462677	Argument	& pad		3462545	0					
ANR	3462678	UnaryOperationExpression	& pad		3462545	0					
ANR	3462679	UnaryOperator	&		3462545	0					
ANR	3462680	Identifier	pad		3462545	1					
ANR	3462681	Argument	1		3462545	1					
ANR	3462682	PrimaryExpression	1		3462545	0					
ANR	3462683	PrimaryExpression	1		3462545	1					
ANR	3462684	ReturnStatement	return FALSE ;	1033:35:20510:20522	3462545	1	True				
ANR	3462685	Identifier	FALSE		3462545	0					
ANR	3462686	IfStatement	"if ( put_bytes ( & l , sizeof ( long ) ) != sizeof ( long ) )"		3462545	2					
ANR	3462687	Condition	"put_bytes ( & l , sizeof ( long ) ) != sizeof ( long )"	1036:8:20545:20587	3462545	0	True				
ANR	3462688	EqualityExpression	"put_bytes ( & l , sizeof ( long ) ) != sizeof ( long )"		3462545	0		!=			
ANR	3462689	CallExpression	"put_bytes ( & l , sizeof ( long ) )"		3462545	0					
ANR	3462690	Callee	put_bytes		3462545	0					
ANR	3462691	Identifier	put_bytes		3462545	0					
ANR	3462692	ArgumentList	& l		3462545	1					
ANR	3462693	Argument	& l		3462545	0					
ANR	3462694	UnaryOperationExpression	& l		3462545	0					
ANR	3462695	UnaryOperator	&		3462545	0					
ANR	3462696	Identifier	l		3462545	1					
ANR	3462697	Argument	sizeof ( long )		3462545	1					
ANR	3462698	SizeofExpression	sizeof ( long )		3462545	0					
ANR	3462699	Sizeof	sizeof		3462545	0					
ANR	3462700	SizeofOperand	long		3462545	1					
ANR	3462701	SizeofExpression	sizeof ( long )		3462545	1					
ANR	3462702	Sizeof	sizeof		3462545	0					
ANR	3462703	SizeofOperand	long		3462545	1					
ANR	3462704	ReturnStatement	return FALSE ;	1036:53:20590:20602	3462545	1	True				
ANR	3462705	Identifier	FALSE		3462545	0					
ANR	3462706	BreakStatement	break ;	1038:3:20612:20617	3462545	5	True				
ANR	3462707	Label	case ascii :	1040:2:20622:20632	3462545	6	True				
ANR	3462708	Identifier	ascii		3462545	0					
ANR	3462709	ReturnStatement	return FALSE ;	1041:3:20637:20649	3462545	7	True				
ANR	3462710	Identifier	FALSE		3462545	0					
ANR	3462711	ReturnStatement	return TRUE ;	1044:1:20656:20667	3462545	3	True				
ANR	3462712	Identifier	TRUE		3462545	0					
ANR	3462713	ReturnType	int		3462545	1					
ANR	3462714	Identifier	Stream :: put		3462545	2					
ANR	3462715	ParameterList	unsigned long l		3462545	3					
ANR	3462716	Parameter	unsigned long l	1013:13:19973:19987	3462545	0	True				
ANR	3462717	ParameterType	unsigned long		3462545	0					
ANR	3462718	Identifier	l		3462545	1					
ANR	3462719	CFGEntryNode	ENTRY		3462545		True				
ANR	3462720	CFGExitNode	EXIT		3462545		True				
ANR	3462721	Symbol	_code		3462545						
ANR	3462722	Symbol	INT_SIZE		3462545						
ANR	3462723	Symbol	TRUE		3462545						
ANR	3462724	Symbol	l		3462545						
ANR	3462725	Symbol	put		3462545						
ANR	3462726	Symbol	htonL		3462545						
ANR	3462727	Symbol	pad		3462545						
ANR	3462728	Symbol	& l		3462545						
ANR	3462729	Symbol	s		3462545						
ANR	3462730	Symbol	hton_is_noop		3462545						
ANR	3462731	Symbol	FALSE		3462545						
ANR	3462732	Symbol	put_bytes		3462545						
ANR	3462733	Symbol	& pad		3462545						
ANR	3462734	Function	htonLL	1052:0:20806:21053							
ANR	3462735	FunctionDef	htonLL (uint64_t hostint)		3462734	0					
ANR	3462736	CompoundStatement		1053:0:20847:21053	3462734	0					
ANR	3462737	IdentifierDeclStatement	uint64_t netint ;	1054:1:20850:20865	3462734	0	True				
ANR	3462738	IdentifierDecl	netint		3462734	0					
ANR	3462739	IdentifierDeclType	uint64_t		3462734	0					
ANR	3462740	Identifier	netint		3462734	1					
ANR	3462741	IdentifierDeclStatement	char * hostp = ( char * ) & hostint ;	1055:1:20868:20898	3462734	1	True				
ANR	3462742	IdentifierDecl	* hostp = ( char * ) & hostint		3462734	0					
ANR	3462743	IdentifierDeclType	char *		3462734	0					
ANR	3462744	Identifier	hostp		3462734	1					
ANR	3462745	AssignmentExpression	* hostp = ( char * ) & hostint		3462734	2		=			
ANR	3462746	Identifier	hostp		3462734	0					
ANR	3462747	CastExpression	( char * ) & hostint		3462734	1					
ANR	3462748	CastTarget	char *		3462734	0					
ANR	3462749	UnaryOperationExpression	& hostint		3462734	1					
ANR	3462750	UnaryOperator	&		3462734	0					
ANR	3462751	Identifier	hostint		3462734	1					
ANR	3462752	IdentifierDeclStatement	char * netp = ( char * ) & netint ;	1056:1:20901:20929	3462734	2	True				
ANR	3462753	IdentifierDecl	* netp = ( char * ) & netint		3462734	0					
ANR	3462754	IdentifierDeclType	char *		3462734	0					
ANR	3462755	Identifier	netp		3462734	1					
ANR	3462756	AssignmentExpression	* netp = ( char * ) & netint		3462734	2		=			
ANR	3462757	Identifier	netp		3462734	0					
ANR	3462758	CastExpression	( char * ) & netint		3462734	1					
ANR	3462759	CastTarget	char *		3462734	0					
ANR	3462760	UnaryOperationExpression	& netint		3462734	1					
ANR	3462761	UnaryOperator	&		3462734	0					
ANR	3462762	Identifier	netint		3462734	1					
ANR	3462763	ForStatement	"for ( unsigned int i = 0 , j = sizeof ( uint64_t ) - 1 ; i < sizeof ( uint64_t ) ; i ++ , j -- )"		3462734	3					
ANR	3462764	ForInit	"unsigned int i = 0 , j = sizeof ( uint64_t ) - 1 ;"	1058:6:20938:20976	3462734	0	True				
ANR	3462765	IdentifierDeclStatement	"unsigned int i = 0 , j = sizeof ( uint64_t ) - 1 ;"		3462734	0					
ANR	3462766	IdentifierDecl	i = 0		3462734	0					
ANR	3462767	IdentifierDeclType	unsigned int		3462734	0					
ANR	3462768	Identifier	i		3462734	1					
ANR	3462769	AssignmentExpression	i = 0		3462734	2		=			
ANR	3462770	Identifier	i		3462734	0					
ANR	3462771	PrimaryExpression	0		3462734	1					
ANR	3462772	IdentifierDecl	j = sizeof ( uint64_t ) - 1		3462734	1					
ANR	3462773	IdentifierDeclType	unsigned int		3462734	0					
ANR	3462774	Identifier	j		3462734	1					
ANR	3462775	AssignmentExpression	j = sizeof ( uint64_t ) - 1		3462734	2		=			
ANR	3462776	Identifier	j		3462734	0					
ANR	3462777	AdditiveExpression	sizeof ( uint64_t ) - 1		3462734	1		-			
ANR	3462778	SizeofExpression	sizeof ( uint64_t )		3462734	0					
ANR	3462779	Sizeof	sizeof		3462734	0					
ANR	3462780	SizeofOperand	uint64_t		3462734	1					
ANR	3462781	PrimaryExpression	1		3462734	1					
ANR	3462782	Condition	i < sizeof ( uint64_t )	1058:46:20978:20997	3462734	1	True				
ANR	3462783	RelationalExpression	i < sizeof ( uint64_t )		3462734	0		<			
ANR	3462784	Identifier	i		3462734	0					
ANR	3462785	SizeofExpression	sizeof ( uint64_t )		3462734	1					
ANR	3462786	Sizeof	sizeof		3462734	0					
ANR	3462787	SizeofOperand	uint64_t		3462734	1					
ANR	3462788	Expression	"i ++ , j --"	1058:68:21000:21007	3462734	2	True				
ANR	3462789	PostIncDecOperationExpression	i ++		3462734	0					
ANR	3462790	Identifier	i		3462734	0					
ANR	3462791	IncDec	++		3462734	1					
ANR	3462792	PostIncDecOperationExpression	j --		3462734	1					
ANR	3462793	Identifier	j		3462734	0					
ANR	3462794	IncDec	--		3462734	1					
ANR	3462795	CompoundStatement		6:78:162:162	3462734	3					
ANR	3462796	ExpressionStatement	netp [ i ] = hostp [ j ]	1059:2:21014:21032	3462734	0	True				
ANR	3462797	AssignmentExpression	netp [ i ] = hostp [ j ]		3462734	0		=			
ANR	3462798	ArrayIndexing	netp [ i ]		3462734	0					
ANR	3462799	Identifier	netp		3462734	0					
ANR	3462800	Identifier	i		3462734	1					
ANR	3462801	ArrayIndexing	hostp [ j ]		3462734	1					
ANR	3462802	Identifier	hostp		3462734	0					
ANR	3462803	Identifier	j		3462734	1					
ANR	3462804	ReturnStatement	return netint ;	1061:1:21038:21051	3462734	4	True				
ANR	3462805	Identifier	netint		3462734	0					
ANR	3462806	ReturnType	static uint64_t		3462734	1					
ANR	3462807	Identifier	htonLL		3462734	2					
ANR	3462808	ParameterList	uint64_t hostint		3462734	3					
ANR	3462809	Parameter	uint64_t hostint	1052:23:20829:20844	3462734	0	True				
ANR	3462810	ParameterType	uint64_t		3462734	0					
ANR	3462811	Identifier	hostint		3462734	1					
ANR	3462812	CFGEntryNode	ENTRY		3462734		True				
ANR	3462813	CFGExitNode	EXIT		3462734		True				
ANR	3462814	Symbol	netp		3462734						
ANR	3462815	Symbol	& netint		3462734						
ANR	3462816	Symbol	* i		3462734						
ANR	3462817	Symbol	* j		3462734						
ANR	3462818	Symbol	hostp		3462734						
ANR	3462819	Symbol	& hostint		3462734						
ANR	3462820	Symbol	netint		3462734						
ANR	3462821	Symbol	i		3462734						
ANR	3462822	Symbol	j		3462734						
ANR	3462823	Symbol	hostint		3462734						
ANR	3462824	Symbol	* netp		3462734						
ANR	3462825	Symbol	* hostp		3462734						
ANR	3462826	Function	ntohLL	1066:0:21146:21394							
ANR	3462827	FunctionDef	ntohLL (uint64_t netint)		3462826	0					
ANR	3462828	CompoundStatement		1067:0:21186:21394	3462826	0					
ANR	3462829	IdentifierDeclStatement	uint64_t hostint ;	1068:1:21189:21205	3462826	0	True				
ANR	3462830	IdentifierDecl	hostint		3462826	0					
ANR	3462831	IdentifierDeclType	uint64_t		3462826	0					
ANR	3462832	Identifier	hostint		3462826	1					
ANR	3462833	IdentifierDeclStatement	char * hostp = ( char * ) & hostint ;	1069:1:21208:21238	3462826	1	True				
ANR	3462834	IdentifierDecl	* hostp = ( char * ) & hostint		3462826	0					
ANR	3462835	IdentifierDeclType	char *		3462826	0					
ANR	3462836	Identifier	hostp		3462826	1					
ANR	3462837	AssignmentExpression	* hostp = ( char * ) & hostint		3462826	2		=			
ANR	3462838	Identifier	hostp		3462826	0					
ANR	3462839	CastExpression	( char * ) & hostint		3462826	1					
ANR	3462840	CastTarget	char *		3462826	0					
ANR	3462841	UnaryOperationExpression	& hostint		3462826	1					
ANR	3462842	UnaryOperator	&		3462826	0					
ANR	3462843	Identifier	hostint		3462826	1					
ANR	3462844	IdentifierDeclStatement	char * netp = ( char * ) & netint ;	1070:1:21241:21269	3462826	2	True				
ANR	3462845	IdentifierDecl	* netp = ( char * ) & netint		3462826	0					
ANR	3462846	IdentifierDeclType	char *		3462826	0					
ANR	3462847	Identifier	netp		3462826	1					
ANR	3462848	AssignmentExpression	* netp = ( char * ) & netint		3462826	2		=			
ANR	3462849	Identifier	netp		3462826	0					
ANR	3462850	CastExpression	( char * ) & netint		3462826	1					
ANR	3462851	CastTarget	char *		3462826	0					
ANR	3462852	UnaryOperationExpression	& netint		3462826	1					
ANR	3462853	UnaryOperator	&		3462826	0					
ANR	3462854	Identifier	netint		3462826	1					
ANR	3462855	ForStatement	"for ( unsigned int i = 0 , j = sizeof ( uint64_t ) - 1 ; i < sizeof ( uint64_t ) ; i ++ , j -- )"		3462826	3					
ANR	3462856	ForInit	"unsigned int i = 0 , j = sizeof ( uint64_t ) - 1 ;"	1072:6:21278:21316	3462826	0	True				
ANR	3462857	IdentifierDeclStatement	"unsigned int i = 0 , j = sizeof ( uint64_t ) - 1 ;"		3462826	0					
ANR	3462858	IdentifierDecl	i = 0		3462826	0					
ANR	3462859	IdentifierDeclType	unsigned int		3462826	0					
ANR	3462860	Identifier	i		3462826	1					
ANR	3462861	AssignmentExpression	i = 0		3462826	2		=			
ANR	3462862	Identifier	i		3462826	0					
ANR	3462863	PrimaryExpression	0		3462826	1					
ANR	3462864	IdentifierDecl	j = sizeof ( uint64_t ) - 1		3462826	1					
ANR	3462865	IdentifierDeclType	unsigned int		3462826	0					
ANR	3462866	Identifier	j		3462826	1					
ANR	3462867	AssignmentExpression	j = sizeof ( uint64_t ) - 1		3462826	2		=			
ANR	3462868	Identifier	j		3462826	0					
ANR	3462869	AdditiveExpression	sizeof ( uint64_t ) - 1		3462826	1		-			
ANR	3462870	SizeofExpression	sizeof ( uint64_t )		3462826	0					
ANR	3462871	Sizeof	sizeof		3462826	0					
ANR	3462872	SizeofOperand	uint64_t		3462826	1					
ANR	3462873	PrimaryExpression	1		3462826	1					
ANR	3462874	Condition	i < sizeof ( uint64_t )	1072:46:21318:21337	3462826	1	True				
ANR	3462875	RelationalExpression	i < sizeof ( uint64_t )		3462826	0		<			
ANR	3462876	Identifier	i		3462826	0					
ANR	3462877	SizeofExpression	sizeof ( uint64_t )		3462826	1					
ANR	3462878	Sizeof	sizeof		3462826	0					
ANR	3462879	SizeofOperand	uint64_t		3462826	1					
ANR	3462880	Expression	"i ++ , j --"	1072:68:21340:21347	3462826	2	True				
ANR	3462881	PostIncDecOperationExpression	i ++		3462826	0					
ANR	3462882	Identifier	i		3462826	0					
ANR	3462883	IncDec	++		3462826	1					
ANR	3462884	PostIncDecOperationExpression	j --		3462826	1					
ANR	3462885	Identifier	j		3462826	0					
ANR	3462886	IncDec	--		3462826	1					
ANR	3462887	CompoundStatement		6:78:163:163	3462826	3					
ANR	3462888	ExpressionStatement	hostp [ i ] = netp [ j ]	1073:2:21354:21372	3462826	0	True				
ANR	3462889	AssignmentExpression	hostp [ i ] = netp [ j ]		3462826	0		=			
ANR	3462890	ArrayIndexing	hostp [ i ]		3462826	0					
ANR	3462891	Identifier	hostp		3462826	0					
ANR	3462892	Identifier	i		3462826	1					
ANR	3462893	ArrayIndexing	netp [ j ]		3462826	1					
ANR	3462894	Identifier	netp		3462826	0					
ANR	3462895	Identifier	j		3462826	1					
ANR	3462896	ReturnStatement	return hostint ;	1075:1:21378:21392	3462826	4	True				
ANR	3462897	Identifier	hostint		3462826	0					
ANR	3462898	ReturnType	static uint64_t		3462826	1					
ANR	3462899	Identifier	ntohLL		3462826	2					
ANR	3462900	ParameterList	uint64_t netint		3462826	3					
ANR	3462901	Parameter	uint64_t netint	1066:23:21169:21183	3462826	0	True				
ANR	3462902	ParameterType	uint64_t		3462826	0					
ANR	3462903	Identifier	netint		3462826	1					
ANR	3462904	CFGEntryNode	ENTRY		3462826		True				
ANR	3462905	CFGExitNode	EXIT		3462826		True				
ANR	3462906	Symbol	netp		3462826						
ANR	3462907	Symbol	& netint		3462826						
ANR	3462908	Symbol	* i		3462826						
ANR	3462909	Symbol	* j		3462826						
ANR	3462910	Symbol	hostp		3462826						
ANR	3462911	Symbol	& hostint		3462826						
ANR	3462912	Symbol	netint		3462826						
ANR	3462913	Symbol	i		3462826						
ANR	3462914	Symbol	j		3462826						
ANR	3462915	Symbol	hostint		3462826						
ANR	3462916	Symbol	* netp		3462826						
ANR	3462917	Symbol	* hostp		3462826						
ANR	3462918	Function	Stream :: put	1078:0:21397:22163							
ANR	3462919	FunctionDef	Stream :: put (int64_t l)		3462918	0					
ANR	3462920	CompoundStatement		1080:0:21426:22163	3462918	0					
ANR	3462921	IdentifierDeclStatement	char pad ;	1081:1:21429:21437	3462918	0	True				
ANR	3462922	IdentifierDecl	pad		3462918	0					
ANR	3462923	IdentifierDeclType	char		3462918	0					
ANR	3462924	Identifier	pad		3462918	1					
ANR	3462925	ExpressionStatement	"NETWORK_TRACE ( ""put int64_t"" << l )"	1082:2:21441:21474	3462918	1	True				
ANR	3462926	CallExpression	"NETWORK_TRACE ( ""put int64_t"" << l )"		3462918	0					
ANR	3462927	Callee	NETWORK_TRACE		3462918	0					
ANR	3462928	Identifier	NETWORK_TRACE		3462918	0					
ANR	3462929	ArgumentList	"""put int64_t"" << l"		3462918	1					
ANR	3462930	Argument	"""put int64_t"" << l"		3462918	0					
ANR	3462931	ShiftExpression	"""put int64_t"" << l"		3462918	0		<<			
ANR	3462932	PrimaryExpression	"""put int64_t"""		3462918	0					
ANR	3462933	Identifier	l		3462918	1					
ANR	3462934	SwitchStatement	switch ( _code )		3462918	2					
ANR	3462935	Condition	_code	1084:8:21485:21489	3462918	0	True				
ANR	3462936	Identifier	_code		3462918	0					
ANR	3462937	CompoundStatement		5:14:64:64	3462918	1					
ANR	3462938	Label	case internal :	1085:2:21495:21508	3462918	0	True				
ANR	3462939	Identifier	internal		3462918	0					
ANR	3462940	IfStatement	"if ( put_bytes ( & l , sizeof ( int64_t ) ) != sizeof ( int64_t ) )"		3462918	1					
ANR	3462941	Condition	"put_bytes ( & l , sizeof ( int64_t ) ) != sizeof ( int64_t )"	1086:7:21517:21565	3462918	0	True				
ANR	3462942	EqualityExpression	"put_bytes ( & l , sizeof ( int64_t ) ) != sizeof ( int64_t )"		3462918	0		!=			
ANR	3462943	CallExpression	"put_bytes ( & l , sizeof ( int64_t ) )"		3462918	0					
ANR	3462944	Callee	put_bytes		3462918	0					
ANR	3462945	Identifier	put_bytes		3462918	0					
ANR	3462946	ArgumentList	& l		3462918	1					
ANR	3462947	Argument	& l		3462918	0					
ANR	3462948	UnaryOperationExpression	& l		3462918	0					
ANR	3462949	UnaryOperator	&		3462918	0					
ANR	3462950	Identifier	l		3462918	1					
ANR	3462951	Argument	sizeof ( int64_t )		3462918	1					
ANR	3462952	SizeofExpression	sizeof ( int64_t )		3462918	0					
ANR	3462953	Sizeof	sizeof		3462918	0					
ANR	3462954	SizeofOperand	int64_t		3462918	1					
ANR	3462955	SizeofExpression	sizeof ( int64_t )		3462918	1					
ANR	3462956	Sizeof	sizeof		3462918	0					
ANR	3462957	SizeofOperand	int64_t		3462918	1					
ANR	3462958	ReturnStatement	return FALSE ;	1086:58:21568:21580	3462918	1	True				
ANR	3462959	Identifier	FALSE		3462918	0					
ANR	3462960	BreakStatement	break ;	1087:3:21585:21590	3462918	2	True				
ANR	3462961	Label	case external :	1089:2:21595:21608	3462918	3	True				
ANR	3462962	Identifier	external		3462918	0					
ANR	3462963	IfStatement	if ( ( sizeof ( int ) == sizeof ( int64_t ) ) || ( sizeof ( int64_t ) > INT_SIZE ) )		3462918	4					
ANR	3462964	Condition	( sizeof ( int ) == sizeof ( int64_t ) ) || ( sizeof ( int64_t ) > INT_SIZE )	1090:7:21617:21680	3462918	0	True				
ANR	3462965	OrExpression	( sizeof ( int ) == sizeof ( int64_t ) ) || ( sizeof ( int64_t ) > INT_SIZE )		3462918	0		||			
ANR	3462966	EqualityExpression	sizeof ( int ) == sizeof ( int64_t )		3462918	0		==			
ANR	3462967	SizeofExpression	sizeof ( int )		3462918	0					
ANR	3462968	Sizeof	sizeof		3462918	0					
ANR	3462969	SizeofOperand	int		3462918	1					
ANR	3462970	SizeofExpression	sizeof ( int64_t )		3462918	1					
ANR	3462971	Sizeof	sizeof		3462918	0					
ANR	3462972	SizeofOperand	int64_t		3462918	1					
ANR	3462973	RelationalExpression	sizeof ( int64_t ) > INT_SIZE		3462918	1		>			
ANR	3462974	SizeofExpression	sizeof ( int64_t )		3462918	0					
ANR	3462975	Sizeof	sizeof		3462918	0					
ANR	3462976	SizeofOperand	int64_t		3462918	1					
ANR	3462977	Identifier	INT_SIZE		3462918	1					
ANR	3462978	CompoundStatement		11:73:256:256	3462918	1					
ANR	3462979	ReturnStatement	return put ( ( long ) l ) ;	1091:4:21689:21708	3462918	0	True				
ANR	3462980	CallExpression	put ( ( long ) l )		3462918	0					
ANR	3462981	Callee	put		3462918	0					
ANR	3462982	Identifier	put		3462918	0					
ANR	3462983	ArgumentList	( long ) l		3462918	1					
ANR	3462984	Argument	( long ) l		3462918	0					
ANR	3462985	CastExpression	( long ) l		3462918	0					
ANR	3462986	CastTarget	long		3462918	0					
ANR	3462987	Identifier	l		3462918	1					
ANR	3462988	ElseStatement	else		3462918	0					
ANR	3462989	CompoundStatement		13:10:293:293	3462918	0					
ANR	3462990	IfStatement	if ( ! hton_is_noop ( ) )		3462918	0					
ANR	3462991	Condition	! hton_is_noop ( )	1093:8:21730:21744	3462918	0	True				
ANR	3462992	UnaryOperationExpression	! hton_is_noop ( )		3462918	0					
ANR	3462993	UnaryOperator	!		3462918	0					
ANR	3462994	CallExpression	hton_is_noop ( )		3462918	1					
ANR	3462995	Callee	hton_is_noop		3462918	0					
ANR	3462996	Identifier	hton_is_noop		3462918	0					
ANR	3462997	ArgumentList			3462918	1					
ANR	3462998	CompoundStatement		14:25:320:320	3462918	1					
ANR	3462999	ExpressionStatement	l = htonLL ( l )	1094:5:21790:21803	3462918	0	True				
ANR	3463000	AssignmentExpression	l = htonLL ( l )		3462918	0		=			
ANR	3463001	Identifier	l		3462918	0					
ANR	3463002	CallExpression	htonLL ( l )		3462918	1					
ANR	3463003	Callee	htonLL		3462918	0					
ANR	3463004	Identifier	htonLL		3462918	0					
ANR	3463005	ArgumentList	l		3462918	1					
ANR	3463006	Argument	l		3462918	0					
ANR	3463007	Identifier	l		3462918	0					
ANR	3463008	IfStatement	if ( sizeof ( int64_t ) < INT_SIZE )		3462918	1					
ANR	3463009	Condition	sizeof ( int64_t ) < INT_SIZE	1096:8:21819:21844	3462918	0	True				
ANR	3463010	RelationalExpression	sizeof ( int64_t ) < INT_SIZE		3462918	0		<			
ANR	3463011	SizeofExpression	sizeof ( int64_t )		3462918	0					
ANR	3463012	Sizeof	sizeof		3462918	0					
ANR	3463013	SizeofOperand	int64_t		3462918	1					
ANR	3463014	Identifier	INT_SIZE		3462918	1					
ANR	3463015	CompoundStatement		17:36:420:420	3462918	1					
ANR	3463016	ExpressionStatement	pad = ( l >= 0 ) ? 0 : 0xff	1097:5:21854:21879	3462918	0	True				
ANR	3463017	AssignmentExpression	pad = ( l >= 0 ) ? 0 : 0xff		3462918	0		=			
ANR	3463018	Identifier	pad		3462918	0					
ANR	3463019	ConditionalExpression	( l >= 0 ) ? 0 : 0xff		3462918	1					
ANR	3463020	Condition	l >= 0		3462918	0					
ANR	3463021	RelationalExpression	l >= 0		3462918	0		>=			
ANR	3463022	Identifier	l		3462918	0					
ANR	3463023	PrimaryExpression	0		3462918	1					
ANR	3463024	PrimaryExpression	0		3462918	1					
ANR	3463025	PrimaryExpression	0xff		3462918	2					
ANR	3463026	ForStatement	for ( int s = 0 ; s < INT_SIZE - ( int ) sizeof ( int64_t ) ; s ++ )		3462918	1					
ANR	3463027	ForInit	int s = 0 ;	1098:10:21912:21919	3462918	0	True				
ANR	3463028	IdentifierDeclStatement	int s = 0 ;		3462918	0					
ANR	3463029	IdentifierDecl	s = 0		3462918	0					
ANR	3463030	IdentifierDeclType	int		3462918	0					
ANR	3463031	Identifier	s		3462918	1					
ANR	3463032	AssignmentExpression	s = 0		3462918	2		=			
ANR	3463033	Identifier	s		3462918	0					
ANR	3463034	PrimaryExpression	0		3462918	1					
ANR	3463035	Condition	s < INT_SIZE - ( int ) sizeof ( int64_t )	1098:19:21921:21953	3462918	1	True				
ANR	3463036	RelationalExpression	s < INT_SIZE - ( int ) sizeof ( int64_t )		3462918	0		<			
ANR	3463037	Identifier	s		3462918	0					
ANR	3463038	AdditiveExpression	INT_SIZE - ( int ) sizeof ( int64_t )		3462918	1		-			
ANR	3463039	Identifier	INT_SIZE		3462918	0					
ANR	3463040	CastExpression	( int ) sizeof ( int64_t )		3462918	1					
ANR	3463041	CastTarget	int		3462918	0					
ANR	3463042	SizeofExpression	sizeof ( int64_t )		3462918	1					
ANR	3463043	Sizeof	sizeof		3462918	0					
ANR	3463044	SizeofOperand	int64_t		3462918	1					
ANR	3463045	PostIncDecOperationExpression	s ++	1098:54:21956:21958	3462918	2	True				
ANR	3463046	Identifier	s		3462918	0					
ANR	3463047	IncDec	++		3462918	1					
ANR	3463048	CompoundStatement		19:59:534:534	3462918	3					
ANR	3463049	IfStatement	"if ( put_bytes ( & pad , 1 ) != 1 )"		3462918	0					
ANR	3463050	Condition	"put_bytes ( & pad , 1 ) != 1"	1099:10:21973:21995	3462918	0	True				
ANR	3463051	EqualityExpression	"put_bytes ( & pad , 1 ) != 1"		3462918	0		!=			
ANR	3463052	CallExpression	"put_bytes ( & pad , 1 )"		3462918	0					
ANR	3463053	Callee	put_bytes		3462918	0					
ANR	3463054	Identifier	put_bytes		3462918	0					
ANR	3463055	ArgumentList	& pad		3462918	1					
ANR	3463056	Argument	& pad		3462918	0					
ANR	3463057	UnaryOperationExpression	& pad		3462918	0					
ANR	3463058	UnaryOperator	&		3462918	0					
ANR	3463059	Identifier	pad		3462918	1					
ANR	3463060	Argument	1		3462918	1					
ANR	3463061	PrimaryExpression	1		3462918	0					
ANR	3463062	PrimaryExpression	1		3462918	1					
ANR	3463063	ReturnStatement	return FALSE ;	1099:35:21998:22010	3462918	1	True				
ANR	3463064	Identifier	FALSE		3462918	0					
ANR	3463065	IfStatement	"if ( put_bytes ( & l , sizeof ( int64_t ) ) != sizeof ( int64_t ) )"		3462918	2					
ANR	3463066	Condition	"put_bytes ( & l , sizeof ( int64_t ) ) != sizeof ( int64_t )"	1102:8:22033:22081	3462918	0	True				
ANR	3463067	EqualityExpression	"put_bytes ( & l , sizeof ( int64_t ) ) != sizeof ( int64_t )"		3462918	0		!=			
ANR	3463068	CallExpression	"put_bytes ( & l , sizeof ( int64_t ) )"		3462918	0					
ANR	3463069	Callee	put_bytes		3462918	0					
ANR	3463070	Identifier	put_bytes		3462918	0					
ANR	3463071	ArgumentList	& l		3462918	1					
ANR	3463072	Argument	& l		3462918	0					
ANR	3463073	UnaryOperationExpression	& l		3462918	0					
ANR	3463074	UnaryOperator	&		3462918	0					
ANR	3463075	Identifier	l		3462918	1					
ANR	3463076	Argument	sizeof ( int64_t )		3462918	1					
ANR	3463077	SizeofExpression	sizeof ( int64_t )		3462918	0					
ANR	3463078	Sizeof	sizeof		3462918	0					
ANR	3463079	SizeofOperand	int64_t		3462918	1					
ANR	3463080	SizeofExpression	sizeof ( int64_t )		3462918	1					
ANR	3463081	Sizeof	sizeof		3462918	0					
ANR	3463082	SizeofOperand	int64_t		3462918	1					
ANR	3463083	ReturnStatement	return FALSE ;	1102:59:22084:22096	3462918	1	True				
ANR	3463084	Identifier	FALSE		3462918	0					
ANR	3463085	BreakStatement	break ;	1104:3:22106:22111	3462918	5	True				
ANR	3463086	Label	case ascii :	1106:2:22116:22126	3462918	6	True				
ANR	3463087	Identifier	ascii		3462918	0					
ANR	3463088	ReturnStatement	return FALSE ;	1107:3:22131:22143	3462918	7	True				
ANR	3463089	Identifier	FALSE		3462918	0					
ANR	3463090	ReturnStatement	return TRUE ;	1110:1:22150:22161	3462918	3	True				
ANR	3463091	Identifier	TRUE		3462918	0					
ANR	3463092	ReturnType	int		3462918	1					
ANR	3463093	Identifier	Stream :: put		3462918	2					
ANR	3463094	ParameterList	int64_t l		3462918	3					
ANR	3463095	Parameter	int64_t l	1079:13:21415:21423	3462918	0	True				
ANR	3463096	ParameterType	int64_t		3462918	0					
ANR	3463097	Identifier	l		3462918	1					
ANR	3463098	CFGEntryNode	ENTRY		3462918		True				
ANR	3463099	CFGExitNode	EXIT		3462918		True				
ANR	3463100	Symbol	_code		3462918						
ANR	3463101	Symbol	INT_SIZE		3462918						
ANR	3463102	Symbol	htonLL		3462918						
ANR	3463103	Symbol	TRUE		3462918						
ANR	3463104	Symbol	l		3462918						
ANR	3463105	Symbol	put		3462918						
ANR	3463106	Symbol	pad		3462918						
ANR	3463107	Symbol	& l		3462918						
ANR	3463108	Symbol	s		3462918						
ANR	3463109	Symbol	hton_is_noop		3462918						
ANR	3463110	Symbol	FALSE		3462918						
ANR	3463111	Symbol	put_bytes		3462918						
ANR	3463112	Symbol	& pad		3462918						
ANR	3463113	Function	Stream :: put	1114:0:22167:22913							
ANR	3463114	FunctionDef	Stream :: put (uint64_t l)		3463113	0					
ANR	3463115	CompoundStatement		1116:0:22197:22913	3463113	0					
ANR	3463116	IdentifierDeclStatement	char pad ;	1117:1:22200:22208	3463113	0	True				
ANR	3463117	IdentifierDecl	pad		3463113	0					
ANR	3463118	IdentifierDeclType	char		3463113	0					
ANR	3463119	Identifier	pad		3463113	1					
ANR	3463120	ExpressionStatement	"NETWORK_TRACE ( ""put uint64_t"" << l )"	1118:2:22212:22246	3463113	1	True				
ANR	3463121	CallExpression	"NETWORK_TRACE ( ""put uint64_t"" << l )"		3463113	0					
ANR	3463122	Callee	NETWORK_TRACE		3463113	0					
ANR	3463123	Identifier	NETWORK_TRACE		3463113	0					
ANR	3463124	ArgumentList	"""put uint64_t"" << l"		3463113	1					
ANR	3463125	Argument	"""put uint64_t"" << l"		3463113	0					
ANR	3463126	ShiftExpression	"""put uint64_t"" << l"		3463113	0		<<			
ANR	3463127	PrimaryExpression	"""put uint64_t"""		3463113	0					
ANR	3463128	Identifier	l		3463113	1					
ANR	3463129	SwitchStatement	switch ( _code )		3463113	2					
ANR	3463130	Condition	_code	1120:8:22257:22261	3463113	0	True				
ANR	3463131	Identifier	_code		3463113	0					
ANR	3463132	CompoundStatement		5:14:65:65	3463113	1					
ANR	3463133	Label	case internal :	1121:2:22267:22280	3463113	0	True				
ANR	3463134	Identifier	internal		3463113	0					
ANR	3463135	IfStatement	"if ( put_bytes ( & l , sizeof ( uint64_t ) ) != sizeof ( uint64_t ) )"		3463113	1					
ANR	3463136	Condition	"put_bytes ( & l , sizeof ( uint64_t ) ) != sizeof ( uint64_t )"	1122:7:22289:22339	3463113	0	True				
ANR	3463137	EqualityExpression	"put_bytes ( & l , sizeof ( uint64_t ) ) != sizeof ( uint64_t )"		3463113	0		!=			
ANR	3463138	CallExpression	"put_bytes ( & l , sizeof ( uint64_t ) )"		3463113	0					
ANR	3463139	Callee	put_bytes		3463113	0					
ANR	3463140	Identifier	put_bytes		3463113	0					
ANR	3463141	ArgumentList	& l		3463113	1					
ANR	3463142	Argument	& l		3463113	0					
ANR	3463143	UnaryOperationExpression	& l		3463113	0					
ANR	3463144	UnaryOperator	&		3463113	0					
ANR	3463145	Identifier	l		3463113	1					
ANR	3463146	Argument	sizeof ( uint64_t )		3463113	1					
ANR	3463147	SizeofExpression	sizeof ( uint64_t )		3463113	0					
ANR	3463148	Sizeof	sizeof		3463113	0					
ANR	3463149	SizeofOperand	uint64_t		3463113	1					
ANR	3463150	SizeofExpression	sizeof ( uint64_t )		3463113	1					
ANR	3463151	Sizeof	sizeof		3463113	0					
ANR	3463152	SizeofOperand	uint64_t		3463113	1					
ANR	3463153	ReturnStatement	return FALSE ;	1122:60:22342:22354	3463113	1	True				
ANR	3463154	Identifier	FALSE		3463113	0					
ANR	3463155	BreakStatement	break ;	1123:3:22359:22364	3463113	2	True				
ANR	3463156	Label	case external :	1125:2:22369:22382	3463113	3	True				
ANR	3463157	Identifier	external		3463113	0					
ANR	3463158	IfStatement	if ( ( sizeof ( int ) == sizeof ( uint64_t ) ) || ( sizeof ( uint64_t ) > INT_SIZE ) )		3463113	4					
ANR	3463159	Condition	( sizeof ( int ) == sizeof ( uint64_t ) ) || ( sizeof ( uint64_t ) > INT_SIZE )	1126:7:22391:22456	3463113	0	True				
ANR	3463160	OrExpression	( sizeof ( int ) == sizeof ( uint64_t ) ) || ( sizeof ( uint64_t ) > INT_SIZE )		3463113	0		||			
ANR	3463161	EqualityExpression	sizeof ( int ) == sizeof ( uint64_t )		3463113	0		==			
ANR	3463162	SizeofExpression	sizeof ( int )		3463113	0					
ANR	3463163	Sizeof	sizeof		3463113	0					
ANR	3463164	SizeofOperand	int		3463113	1					
ANR	3463165	SizeofExpression	sizeof ( uint64_t )		3463113	1					
ANR	3463166	Sizeof	sizeof		3463113	0					
ANR	3463167	SizeofOperand	uint64_t		3463113	1					
ANR	3463168	RelationalExpression	sizeof ( uint64_t ) > INT_SIZE		3463113	1		>			
ANR	3463169	SizeofExpression	sizeof ( uint64_t )		3463113	0					
ANR	3463170	Sizeof	sizeof		3463113	0					
ANR	3463171	SizeofOperand	uint64_t		3463113	1					
ANR	3463172	Identifier	INT_SIZE		3463113	1					
ANR	3463173	CompoundStatement		11:75:261:261	3463113	1					
ANR	3463174	ReturnStatement	return put ( ( unsigned long ) l ) ;	1127:4:22465:22493	3463113	0	True				
ANR	3463175	CallExpression	put ( ( unsigned long ) l )		3463113	0					
ANR	3463176	Callee	put		3463113	0					
ANR	3463177	Identifier	put		3463113	0					
ANR	3463178	ArgumentList	( unsigned long ) l		3463113	1					
ANR	3463179	Argument	( unsigned long ) l		3463113	0					
ANR	3463180	CastExpression	( unsigned long ) l		3463113	0					
ANR	3463181	CastTarget	unsigned long		3463113	0					
ANR	3463182	Identifier	l		3463113	1					
ANR	3463183	ElseStatement	else		3463113	0					
ANR	3463184	CompoundStatement		13:10:307:307	3463113	0					
ANR	3463185	IfStatement	if ( ! hton_is_noop ( ) )		3463113	0					
ANR	3463186	Condition	! hton_is_noop ( )	1129:8:22515:22529	3463113	0	True				
ANR	3463187	UnaryOperationExpression	! hton_is_noop ( )		3463113	0					
ANR	3463188	UnaryOperator	!		3463113	0					
ANR	3463189	CallExpression	hton_is_noop ( )		3463113	1					
ANR	3463190	Callee	hton_is_noop		3463113	0					
ANR	3463191	Identifier	hton_is_noop		3463113	0					
ANR	3463192	ArgumentList			3463113	1					
ANR	3463193	CompoundStatement		14:25:334:334	3463113	1					
ANR	3463194	ExpressionStatement	l = htonLL ( l )	1130:5:22575:22588	3463113	0	True				
ANR	3463195	AssignmentExpression	l = htonLL ( l )		3463113	0		=			
ANR	3463196	Identifier	l		3463113	0					
ANR	3463197	CallExpression	htonLL ( l )		3463113	1					
ANR	3463198	Callee	htonLL		3463113	0					
ANR	3463199	Identifier	htonLL		3463113	0					
ANR	3463200	ArgumentList	l		3463113	1					
ANR	3463201	Argument	l		3463113	0					
ANR	3463202	Identifier	l		3463113	0					
ANR	3463203	IfStatement	if ( sizeof ( uint64_t ) < INT_SIZE )		3463113	1					
ANR	3463204	Condition	sizeof ( uint64_t ) < INT_SIZE	1132:8:22604:22630	3463113	0	True				
ANR	3463205	RelationalExpression	sizeof ( uint64_t ) < INT_SIZE		3463113	0		<			
ANR	3463206	SizeofExpression	sizeof ( uint64_t )		3463113	0					
ANR	3463207	Sizeof	sizeof		3463113	0					
ANR	3463208	SizeofOperand	uint64_t		3463113	1					
ANR	3463209	Identifier	INT_SIZE		3463113	1					
ANR	3463210	CompoundStatement		17:37:435:435	3463113	1					
ANR	3463211	ExpressionStatement	pad = 0	1133:5:22640:22647	3463113	0	True				
ANR	3463212	AssignmentExpression	pad = 0		3463113	0		=			
ANR	3463213	Identifier	pad		3463113	0					
ANR	3463214	PrimaryExpression	0		3463113	1					
ANR	3463215	ForStatement	for ( int s = 0 ; s < INT_SIZE - ( int ) sizeof ( uint64_t ) ; s ++ )		3463113	1					
ANR	3463216	ForInit	int s = 0 ;	1134:10:22659:22666	3463113	0	True				
ANR	3463217	IdentifierDeclStatement	int s = 0 ;		3463113	0					
ANR	3463218	IdentifierDecl	s = 0		3463113	0					
ANR	3463219	IdentifierDeclType	int		3463113	0					
ANR	3463220	Identifier	s		3463113	1					
ANR	3463221	AssignmentExpression	s = 0		3463113	2		=			
ANR	3463222	Identifier	s		3463113	0					
ANR	3463223	PrimaryExpression	0		3463113	1					
ANR	3463224	Condition	s < INT_SIZE - ( int ) sizeof ( uint64_t )	1134:19:22668:22701	3463113	1	True				
ANR	3463225	RelationalExpression	s < INT_SIZE - ( int ) sizeof ( uint64_t )		3463113	0		<			
ANR	3463226	Identifier	s		3463113	0					
ANR	3463227	AdditiveExpression	INT_SIZE - ( int ) sizeof ( uint64_t )		3463113	1		-			
ANR	3463228	Identifier	INT_SIZE		3463113	0					
ANR	3463229	CastExpression	( int ) sizeof ( uint64_t )		3463113	1					
ANR	3463230	CastTarget	int		3463113	0					
ANR	3463231	SizeofExpression	sizeof ( uint64_t )		3463113	1					
ANR	3463232	Sizeof	sizeof		3463113	0					
ANR	3463233	SizeofOperand	uint64_t		3463113	1					
ANR	3463234	PostIncDecOperationExpression	s ++	1134:55:22704:22706	3463113	2	True				
ANR	3463235	Identifier	s		3463113	0					
ANR	3463236	IncDec	++		3463113	1					
ANR	3463237	CompoundStatement		19:60:511:511	3463113	3					
ANR	3463238	IfStatement	"if ( put_bytes ( & pad , 1 ) != 1 )"		3463113	0					
ANR	3463239	Condition	"put_bytes ( & pad , 1 ) != 1"	1135:10:22721:22743	3463113	0	True				
ANR	3463240	EqualityExpression	"put_bytes ( & pad , 1 ) != 1"		3463113	0		!=			
ANR	3463241	CallExpression	"put_bytes ( & pad , 1 )"		3463113	0					
ANR	3463242	Callee	put_bytes		3463113	0					
ANR	3463243	Identifier	put_bytes		3463113	0					
ANR	3463244	ArgumentList	& pad		3463113	1					
ANR	3463245	Argument	& pad		3463113	0					
ANR	3463246	UnaryOperationExpression	& pad		3463113	0					
ANR	3463247	UnaryOperator	&		3463113	0					
ANR	3463248	Identifier	pad		3463113	1					
ANR	3463249	Argument	1		3463113	1					
ANR	3463250	PrimaryExpression	1		3463113	0					
ANR	3463251	PrimaryExpression	1		3463113	1					
ANR	3463252	ReturnStatement	return FALSE ;	1135:35:22746:22758	3463113	1	True				
ANR	3463253	Identifier	FALSE		3463113	0					
ANR	3463254	IfStatement	"if ( put_bytes ( & l , sizeof ( uint64_t ) ) != sizeof ( uint64_t ) )"		3463113	2					
ANR	3463255	Condition	"put_bytes ( & l , sizeof ( uint64_t ) ) != sizeof ( uint64_t )"	1138:8:22781:22831	3463113	0	True				
ANR	3463256	EqualityExpression	"put_bytes ( & l , sizeof ( uint64_t ) ) != sizeof ( uint64_t )"		3463113	0		!=			
ANR	3463257	CallExpression	"put_bytes ( & l , sizeof ( uint64_t ) )"		3463113	0					
ANR	3463258	Callee	put_bytes		3463113	0					
ANR	3463259	Identifier	put_bytes		3463113	0					
ANR	3463260	ArgumentList	& l		3463113	1					
ANR	3463261	Argument	& l		3463113	0					
ANR	3463262	UnaryOperationExpression	& l		3463113	0					
ANR	3463263	UnaryOperator	&		3463113	0					
ANR	3463264	Identifier	l		3463113	1					
ANR	3463265	Argument	sizeof ( uint64_t )		3463113	1					
ANR	3463266	SizeofExpression	sizeof ( uint64_t )		3463113	0					
ANR	3463267	Sizeof	sizeof		3463113	0					
ANR	3463268	SizeofOperand	uint64_t		3463113	1					
ANR	3463269	SizeofExpression	sizeof ( uint64_t )		3463113	1					
ANR	3463270	Sizeof	sizeof		3463113	0					
ANR	3463271	SizeofOperand	uint64_t		3463113	1					
ANR	3463272	ReturnStatement	return FALSE ;	1138:61:22834:22846	3463113	1	True				
ANR	3463273	Identifier	FALSE		3463113	0					
ANR	3463274	BreakStatement	break ;	1140:3:22856:22861	3463113	5	True				
ANR	3463275	Label	case ascii :	1142:2:22866:22876	3463113	6	True				
ANR	3463276	Identifier	ascii		3463113	0					
ANR	3463277	ReturnStatement	return FALSE ;	1143:3:22881:22893	3463113	7	True				
ANR	3463278	Identifier	FALSE		3463113	0					
ANR	3463279	ReturnStatement	return TRUE ;	1146:1:22900:22911	3463113	3	True				
ANR	3463280	Identifier	TRUE		3463113	0					
ANR	3463281	ReturnType	int		3463113	1					
ANR	3463282	Identifier	Stream :: put		3463113	2					
ANR	3463283	ParameterList	uint64_t l		3463113	3					
ANR	3463284	Parameter	uint64_t l	1115:13:22185:22194	3463113	0	True				
ANR	3463285	ParameterType	uint64_t		3463113	0					
ANR	3463286	Identifier	l		3463113	1					
ANR	3463287	CFGEntryNode	ENTRY		3463113		True				
ANR	3463288	CFGExitNode	EXIT		3463113		True				
ANR	3463289	Symbol	_code		3463113						
ANR	3463290	Symbol	INT_SIZE		3463113						
ANR	3463291	Symbol	htonLL		3463113						
ANR	3463292	Symbol	TRUE		3463113						
ANR	3463293	Symbol	l		3463113						
ANR	3463294	Symbol	put		3463113						
ANR	3463295	Symbol	pad		3463113						
ANR	3463296	Symbol	& l		3463113						
ANR	3463297	Symbol	s		3463113						
ANR	3463298	Symbol	hton_is_noop		3463113						
ANR	3463299	Symbol	FALSE		3463113						
ANR	3463300	Symbol	put_bytes		3463113						
ANR	3463301	Symbol	& pad		3463113						
ANR	3463302	Function	Stream :: put	1151:0:22924:23192							
ANR	3463303	FunctionDef	Stream :: put (short s)		3463302	0					
ANR	3463304	CompoundStatement		1153:0:22951:23192	3463302	0					
ANR	3463305	ExpressionStatement	"NETWORK_TRACE ( ""put short "" << s )"	1154:2:22955:22987	3463302	0	True				
ANR	3463306	CallExpression	"NETWORK_TRACE ( ""put short "" << s )"		3463302	0					
ANR	3463307	Callee	NETWORK_TRACE		3463302	0					
ANR	3463308	Identifier	NETWORK_TRACE		3463302	0					
ANR	3463309	ArgumentList	"""put short "" << s"		3463302	1					
ANR	3463310	Argument	"""put short "" << s"		3463302	0					
ANR	3463311	ShiftExpression	"""put short "" << s"		3463302	0		<<			
ANR	3463312	PrimaryExpression	"""put short """		3463302	0					
ANR	3463313	Identifier	s		3463302	1					
ANR	3463314	SwitchStatement	switch ( _code )		3463302	1					
ANR	3463315	Condition	_code	1156:8:22998:23002	3463302	0	True				
ANR	3463316	Identifier	_code		3463302	0					
ANR	3463317	CompoundStatement		4:14:52:52	3463302	1					
ANR	3463318	Label	case internal :	1157:2:23008:23021	3463302	0	True				
ANR	3463319	Identifier	internal		3463302	0					
ANR	3463320	IfStatement	"if ( put_bytes ( & s , sizeof ( short ) ) != sizeof ( short ) )"		3463302	1					
ANR	3463321	Condition	"put_bytes ( & s , sizeof ( short ) ) != sizeof ( short )"	1158:7:23030:23074	3463302	0	True				
ANR	3463322	EqualityExpression	"put_bytes ( & s , sizeof ( short ) ) != sizeof ( short )"		3463302	0		!=			
ANR	3463323	CallExpression	"put_bytes ( & s , sizeof ( short ) )"		3463302	0					
ANR	3463324	Callee	put_bytes		3463302	0					
ANR	3463325	Identifier	put_bytes		3463302	0					
ANR	3463326	ArgumentList	& s		3463302	1					
ANR	3463327	Argument	& s		3463302	0					
ANR	3463328	UnaryOperationExpression	& s		3463302	0					
ANR	3463329	UnaryOperator	&		3463302	0					
ANR	3463330	Identifier	s		3463302	1					
ANR	3463331	Argument	sizeof ( short )		3463302	1					
ANR	3463332	SizeofExpression	sizeof ( short )		3463302	0					
ANR	3463333	Sizeof	sizeof		3463302	0					
ANR	3463334	SizeofOperand	short		3463302	1					
ANR	3463335	SizeofExpression	sizeof ( short )		3463302	1					
ANR	3463336	Sizeof	sizeof		3463302	0					
ANR	3463337	SizeofOperand	short		3463302	1					
ANR	3463338	ReturnStatement	return FALSE ;	1158:54:23077:23089	3463302	1	True				
ANR	3463339	Identifier	FALSE		3463302	0					
ANR	3463340	BreakStatement	break ;	1159:3:23094:23099	3463302	2	True				
ANR	3463341	Label	case external :	1161:2:23104:23117	3463302	3	True				
ANR	3463342	Identifier	external		3463302	0					
ANR	3463343	ReturnStatement	return put ( ( int ) s ) ;	1162:3:23122:23140	3463302	4	True				
ANR	3463344	CallExpression	put ( ( int ) s )		3463302	0					
ANR	3463345	Callee	put		3463302	0					
ANR	3463346	Identifier	put		3463302	0					
ANR	3463347	ArgumentList	( int ) s		3463302	1					
ANR	3463348	Argument	( int ) s		3463302	0					
ANR	3463349	CastExpression	( int ) s		3463302	0					
ANR	3463350	CastTarget	int		3463302	0					
ANR	3463351	Identifier	s		3463302	1					
ANR	3463352	Label	case ascii :	1164:2:23145:23155	3463302	5	True				
ANR	3463353	Identifier	ascii		3463302	0					
ANR	3463354	ReturnStatement	return FALSE ;	1165:3:23160:23172	3463302	6	True				
ANR	3463355	Identifier	FALSE		3463302	0					
ANR	3463356	ReturnStatement	return TRUE ;	1168:1:23179:23190	3463302	2	True				
ANR	3463357	Identifier	TRUE		3463302	0					
ANR	3463358	ReturnType	int		3463302	1					
ANR	3463359	Identifier	Stream :: put		3463302	2					
ANR	3463360	ParameterList	short s		3463302	3					
ANR	3463361	Parameter	short s	1152:13:22942:22948	3463302	0	True				
ANR	3463362	ParameterType	short		3463302	0					
ANR	3463363	Identifier	s		3463302	1					
ANR	3463364	CFGEntryNode	ENTRY		3463302		True				
ANR	3463365	CFGExitNode	EXIT		3463302		True				
ANR	3463366	Symbol	s		3463302						
ANR	3463367	Symbol	_code		3463302						
ANR	3463368	Symbol	& s		3463302						
ANR	3463369	Symbol	TRUE		3463302						
ANR	3463370	Symbol	FALSE		3463302						
ANR	3463371	Symbol	put_bytes		3463302						
ANR	3463372	Symbol	put		3463302						
ANR	3463373	Function	Stream :: put	1173:0:23197:23483							
ANR	3463374	FunctionDef	Stream :: put (unsigned short s)		3463373	0					
ANR	3463375	CompoundStatement		1175:0:23233:23483	3463373	0					
ANR	3463376	ExpressionStatement	"NETWORK_TRACE ( ""put short "" << s )"	1176:2:23237:23269	3463373	0	True				
ANR	3463377	CallExpression	"NETWORK_TRACE ( ""put short "" << s )"		3463373	0					
ANR	3463378	Callee	NETWORK_TRACE		3463373	0					
ANR	3463379	Identifier	NETWORK_TRACE		3463373	0					
ANR	3463380	ArgumentList	"""put short "" << s"		3463373	1					
ANR	3463381	Argument	"""put short "" << s"		3463373	0					
ANR	3463382	ShiftExpression	"""put short "" << s"		3463373	0		<<			
ANR	3463383	PrimaryExpression	"""put short """		3463373	0					
ANR	3463384	Identifier	s		3463373	1					
ANR	3463385	SwitchStatement	switch ( _code )		3463373	1					
ANR	3463386	Condition	_code	1178:8:23280:23284	3463373	0	True				
ANR	3463387	Identifier	_code		3463373	0					
ANR	3463388	CompoundStatement		4:14:52:52	3463373	1					
ANR	3463389	Label	case internal :	1179:2:23290:23303	3463373	0	True				
ANR	3463390	Identifier	internal		3463373	0					
ANR	3463391	IfStatement	"if ( put_bytes ( & s , sizeof ( short ) ) != sizeof ( short ) )"		3463373	1					
ANR	3463392	Condition	"put_bytes ( & s , sizeof ( short ) ) != sizeof ( short )"	1180:7:23312:23356	3463373	0	True				
ANR	3463393	EqualityExpression	"put_bytes ( & s , sizeof ( short ) ) != sizeof ( short )"		3463373	0		!=			
ANR	3463394	CallExpression	"put_bytes ( & s , sizeof ( short ) )"		3463373	0					
ANR	3463395	Callee	put_bytes		3463373	0					
ANR	3463396	Identifier	put_bytes		3463373	0					
ANR	3463397	ArgumentList	& s		3463373	1					
ANR	3463398	Argument	& s		3463373	0					
ANR	3463399	UnaryOperationExpression	& s		3463373	0					
ANR	3463400	UnaryOperator	&		3463373	0					
ANR	3463401	Identifier	s		3463373	1					
ANR	3463402	Argument	sizeof ( short )		3463373	1					
ANR	3463403	SizeofExpression	sizeof ( short )		3463373	0					
ANR	3463404	Sizeof	sizeof		3463373	0					
ANR	3463405	SizeofOperand	short		3463373	1					
ANR	3463406	SizeofExpression	sizeof ( short )		3463373	1					
ANR	3463407	Sizeof	sizeof		3463373	0					
ANR	3463408	SizeofOperand	short		3463373	1					
ANR	3463409	ReturnStatement	return FALSE ;	1180:54:23359:23371	3463373	1	True				
ANR	3463410	Identifier	FALSE		3463373	0					
ANR	3463411	BreakStatement	break ;	1181:3:23376:23381	3463373	2	True				
ANR	3463412	Label	case external :	1183:2:23386:23399	3463373	3	True				
ANR	3463413	Identifier	external		3463373	0					
ANR	3463414	ReturnStatement	return put ( ( unsigned int ) s ) ;	1184:3:23404:23431	3463373	4	True				
ANR	3463415	CallExpression	put ( ( unsigned int ) s )		3463373	0					
ANR	3463416	Callee	put		3463373	0					
ANR	3463417	Identifier	put		3463373	0					
ANR	3463418	ArgumentList	( unsigned int ) s		3463373	1					
ANR	3463419	Argument	( unsigned int ) s		3463373	0					
ANR	3463420	CastExpression	( unsigned int ) s		3463373	0					
ANR	3463421	CastTarget	unsigned int		3463373	0					
ANR	3463422	Identifier	s		3463373	1					
ANR	3463423	Label	case ascii :	1186:2:23436:23446	3463373	5	True				
ANR	3463424	Identifier	ascii		3463373	0					
ANR	3463425	ReturnStatement	return FALSE ;	1187:3:23451:23463	3463373	6	True				
ANR	3463426	Identifier	FALSE		3463373	0					
ANR	3463427	ReturnStatement	return TRUE ;	1190:1:23470:23481	3463373	2	True				
ANR	3463428	Identifier	TRUE		3463373	0					
ANR	3463429	ReturnType	int		3463373	1					
ANR	3463430	Identifier	Stream :: put		3463373	2					
ANR	3463431	ParameterList	unsigned short s		3463373	3					
ANR	3463432	Parameter	unsigned short s	1174:13:23215:23230	3463373	0	True				
ANR	3463433	ParameterType	unsigned short		3463373	0					
ANR	3463434	Identifier	s		3463373	1					
ANR	3463435	CFGEntryNode	ENTRY		3463373		True				
ANR	3463436	CFGExitNode	EXIT		3463373		True				
ANR	3463437	Symbol	s		3463373						
ANR	3463438	Symbol	_code		3463373						
ANR	3463439	Symbol	& s		3463373						
ANR	3463440	Symbol	TRUE		3463373						
ANR	3463441	Symbol	FALSE		3463373						
ANR	3463442	Symbol	put_bytes		3463373						
ANR	3463443	Symbol	put		3463373						
ANR	3463444	Function	Stream :: put	1195:0:23488:23759							
ANR	3463445	FunctionDef	Stream :: put (float f)		3463444	0					
ANR	3463446	CompoundStatement		1197:0:23515:23759	3463444	0					
ANR	3463447	ExpressionStatement	"NETWORK_TRACE ( ""put float "" << f )"	1198:2:23519:23551	3463444	0	True				
ANR	3463448	CallExpression	"NETWORK_TRACE ( ""put float "" << f )"		3463444	0					
ANR	3463449	Callee	NETWORK_TRACE		3463444	0					
ANR	3463450	Identifier	NETWORK_TRACE		3463444	0					
ANR	3463451	ArgumentList	"""put float "" << f"		3463444	1					
ANR	3463452	Argument	"""put float "" << f"		3463444	0					
ANR	3463453	ShiftExpression	"""put float "" << f"		3463444	0		<<			
ANR	3463454	PrimaryExpression	"""put float """		3463444	0					
ANR	3463455	Identifier	f		3463444	1					
ANR	3463456	SwitchStatement	switch ( _code )		3463444	1					
ANR	3463457	Condition	_code	1200:8:23562:23566	3463444	0	True				
ANR	3463458	Identifier	_code		3463444	0					
ANR	3463459	CompoundStatement		4:14:52:52	3463444	1					
ANR	3463460	Label	case internal :	1201:2:23572:23585	3463444	0	True				
ANR	3463461	Identifier	internal		3463444	0					
ANR	3463462	IfStatement	"if ( put_bytes ( & f , sizeof ( float ) ) != sizeof ( float ) )"		3463444	1					
ANR	3463463	Condition	"put_bytes ( & f , sizeof ( float ) ) != sizeof ( float )"	1202:7:23594:23638	3463444	0	True				
ANR	3463464	EqualityExpression	"put_bytes ( & f , sizeof ( float ) ) != sizeof ( float )"		3463444	0		!=			
ANR	3463465	CallExpression	"put_bytes ( & f , sizeof ( float ) )"		3463444	0					
ANR	3463466	Callee	put_bytes		3463444	0					
ANR	3463467	Identifier	put_bytes		3463444	0					
ANR	3463468	ArgumentList	& f		3463444	1					
ANR	3463469	Argument	& f		3463444	0					
ANR	3463470	UnaryOperationExpression	& f		3463444	0					
ANR	3463471	UnaryOperator	&		3463444	0					
ANR	3463472	Identifier	f		3463444	1					
ANR	3463473	Argument	sizeof ( float )		3463444	1					
ANR	3463474	SizeofExpression	sizeof ( float )		3463444	0					
ANR	3463475	Sizeof	sizeof		3463444	0					
ANR	3463476	SizeofOperand	float		3463444	1					
ANR	3463477	SizeofExpression	sizeof ( float )		3463444	1					
ANR	3463478	Sizeof	sizeof		3463444	0					
ANR	3463479	SizeofOperand	float		3463444	1					
ANR	3463480	ReturnStatement	return FALSE ;	1202:54:23641:23653	3463444	1	True				
ANR	3463481	Identifier	FALSE		3463444	0					
ANR	3463482	BreakStatement	break ;	1203:3:23658:23663	3463444	2	True				
ANR	3463483	Label	case external :	1205:2:23668:23681	3463444	3	True				
ANR	3463484	Identifier	external		3463444	0					
ANR	3463485	ReturnStatement	return put ( ( double ) f ) ;	1206:3:23686:23707	3463444	4	True				
ANR	3463486	CallExpression	put ( ( double ) f )		3463444	0					
ANR	3463487	Callee	put		3463444	0					
ANR	3463488	Identifier	put		3463444	0					
ANR	3463489	ArgumentList	( double ) f		3463444	1					
ANR	3463490	Argument	( double ) f		3463444	0					
ANR	3463491	CastExpression	( double ) f		3463444	0					
ANR	3463492	CastTarget	double		3463444	0					
ANR	3463493	Identifier	f		3463444	1					
ANR	3463494	Label	case ascii :	1208:2:23712:23722	3463444	5	True				
ANR	3463495	Identifier	ascii		3463444	0					
ANR	3463496	ReturnStatement	return FALSE ;	1209:3:23727:23739	3463444	6	True				
ANR	3463497	Identifier	FALSE		3463444	0					
ANR	3463498	ReturnStatement	return TRUE ;	1212:1:23746:23757	3463444	2	True				
ANR	3463499	Identifier	TRUE		3463444	0					
ANR	3463500	ReturnType	int		3463444	1					
ANR	3463501	Identifier	Stream :: put		3463444	2					
ANR	3463502	ParameterList	float f		3463444	3					
ANR	3463503	Parameter	float f	1196:13:23506:23512	3463444	0	True				
ANR	3463504	ParameterType	float		3463444	0					
ANR	3463505	Identifier	f		3463444	1					
ANR	3463506	CFGEntryNode	ENTRY		3463444		True				
ANR	3463507	CFGExitNode	EXIT		3463444		True				
ANR	3463508	Symbol	_code		3463444						
ANR	3463509	Symbol	f		3463444						
ANR	3463510	Symbol	TRUE		3463444						
ANR	3463511	Symbol	FALSE		3463444						
ANR	3463512	Symbol	& f		3463444						
ANR	3463513	Symbol	put_bytes		3463444						
ANR	3463514	Symbol	put		3463444						
ANR	3463515	Function	Stream :: put	1217:0:23764:24139							
ANR	3463516	FunctionDef	Stream :: put (double d)		3463515	0					
ANR	3463517	CompoundStatement		1219:0:23792:24139	3463515	0					
ANR	3463518	ExpressionStatement	"NETWORK_TRACE ( ""put double "" << d )"	1220:2:23796:23829	3463515	0	True				
ANR	3463519	CallExpression	"NETWORK_TRACE ( ""put double "" << d )"		3463515	0					
ANR	3463520	Callee	NETWORK_TRACE		3463515	0					
ANR	3463521	Identifier	NETWORK_TRACE		3463515	0					
ANR	3463522	ArgumentList	"""put double "" << d"		3463515	1					
ANR	3463523	Argument	"""put double "" << d"		3463515	0					
ANR	3463524	ShiftExpression	"""put double "" << d"		3463515	0		<<			
ANR	3463525	PrimaryExpression	"""put double """		3463515	0					
ANR	3463526	Identifier	d		3463515	1					
ANR	3463527	IdentifierDeclStatement	"int frac , exp ;"	1221:1:23832:23846	3463515	1	True				
ANR	3463528	IdentifierDecl	frac		3463515	0					
ANR	3463529	IdentifierDeclType	int		3463515	0					
ANR	3463530	Identifier	frac		3463515	1					
ANR	3463531	IdentifierDecl	exp		3463515	1					
ANR	3463532	IdentifierDeclType	int		3463515	0					
ANR	3463533	Identifier	exp		3463515	1					
ANR	3463534	SwitchStatement	switch ( _code )		3463515	2					
ANR	3463535	Condition	_code	1224:8:23858:23862	3463515	0	True				
ANR	3463536	Identifier	_code		3463515	0					
ANR	3463537	CompoundStatement		6:14:71:71	3463515	1					
ANR	3463538	Label	case internal :	1225:2:23868:23881	3463515	0	True				
ANR	3463539	Identifier	internal		3463515	0					
ANR	3463540	IfStatement	"if ( put_bytes ( & d , sizeof ( double ) ) != sizeof ( double ) )"		3463515	1					
ANR	3463541	Condition	"put_bytes ( & d , sizeof ( double ) ) != sizeof ( double )"	1226:7:23890:23936	3463515	0	True				
ANR	3463542	EqualityExpression	"put_bytes ( & d , sizeof ( double ) ) != sizeof ( double )"		3463515	0		!=			
ANR	3463543	CallExpression	"put_bytes ( & d , sizeof ( double ) )"		3463515	0					
ANR	3463544	Callee	put_bytes		3463515	0					
ANR	3463545	Identifier	put_bytes		3463515	0					
ANR	3463546	ArgumentList	& d		3463515	1					
ANR	3463547	Argument	& d		3463515	0					
ANR	3463548	UnaryOperationExpression	& d		3463515	0					
ANR	3463549	UnaryOperator	&		3463515	0					
ANR	3463550	Identifier	d		3463515	1					
ANR	3463551	Argument	sizeof ( double )		3463515	1					
ANR	3463552	SizeofExpression	sizeof ( double )		3463515	0					
ANR	3463553	Sizeof	sizeof		3463515	0					
ANR	3463554	SizeofOperand	double		3463515	1					
ANR	3463555	SizeofExpression	sizeof ( double )		3463515	1					
ANR	3463556	Sizeof	sizeof		3463515	0					
ANR	3463557	SizeofOperand	double		3463515	1					
ANR	3463558	ReturnStatement	return FALSE ;	1226:56:23939:23951	3463515	1	True				
ANR	3463559	Identifier	FALSE		3463515	0					
ANR	3463560	BreakStatement	break ;	1227:3:23956:23961	3463515	2	True				
ANR	3463561	Label	case external :	1229:2:23966:23979	3463515	3	True				
ANR	3463562	Identifier	external		3463515	0					
ANR	3463563	ExpressionStatement	"frac = ( int ) ( frexp ( d , & exp ) * ( double ) FRAC_CONST )"	1230:3:23984:24034	3463515	4	True				
ANR	3463564	AssignmentExpression	"frac = ( int ) ( frexp ( d , & exp ) * ( double ) FRAC_CONST )"		3463515	0		=			
ANR	3463565	Identifier	frac		3463515	0					
ANR	3463566	CastExpression	"( int ) ( frexp ( d , & exp ) * ( double ) FRAC_CONST )"		3463515	1					
ANR	3463567	CastTarget	int		3463515	0					
ANR	3463568	MultiplicativeExpression	"frexp ( d , & exp ) * ( double ) FRAC_CONST"		3463515	1		*			
ANR	3463569	CallExpression	"frexp ( d , & exp )"		3463515	0					
ANR	3463570	Callee	frexp		3463515	0					
ANR	3463571	Identifier	frexp		3463515	0					
ANR	3463572	ArgumentList	d		3463515	1					
ANR	3463573	Argument	d		3463515	0					
ANR	3463574	Identifier	d		3463515	0					
ANR	3463575	Argument	& exp		3463515	1					
ANR	3463576	UnaryOperationExpression	& exp		3463515	0					
ANR	3463577	UnaryOperator	&		3463515	0					
ANR	3463578	Identifier	exp		3463515	1					
ANR	3463579	CastExpression	( double ) FRAC_CONST		3463515	1					
ANR	3463580	CastTarget	double		3463515	0					
ANR	3463581	Identifier	FRAC_CONST		3463515	1					
ANR	3463582	IfStatement	if ( ! put ( frac ) )		3463515	5					
ANR	3463583	Condition	! put ( frac )	1231:7:24043:24052	3463515	0	True				
ANR	3463584	UnaryOperationExpression	! put ( frac )		3463515	0					
ANR	3463585	UnaryOperator	!		3463515	0					
ANR	3463586	CallExpression	put ( frac )		3463515	1					
ANR	3463587	Callee	put		3463515	0					
ANR	3463588	Identifier	put		3463515	0					
ANR	3463589	ArgumentList	frac		3463515	1					
ANR	3463590	Argument	frac		3463515	0					
ANR	3463591	Identifier	frac		3463515	0					
ANR	3463592	ReturnStatement	return FALSE ;	1231:19:24055:24067	3463515	1	True				
ANR	3463593	Identifier	FALSE		3463515	0					
ANR	3463594	ReturnStatement	return put ( exp ) ;	1232:3:24072:24087	3463515	6	True				
ANR	3463595	CallExpression	put ( exp )		3463515	0					
ANR	3463596	Callee	put		3463515	0					
ANR	3463597	Identifier	put		3463515	0					
ANR	3463598	ArgumentList	exp		3463515	1					
ANR	3463599	Argument	exp		3463515	0					
ANR	3463600	Identifier	exp		3463515	0					
ANR	3463601	Label	case ascii :	1234:2:24092:24102	3463515	7	True				
ANR	3463602	Identifier	ascii		3463515	0					
ANR	3463603	ReturnStatement	return FALSE ;	1235:3:24107:24119	3463515	8	True				
ANR	3463604	Identifier	FALSE		3463515	0					
ANR	3463605	ReturnStatement	return TRUE ;	1238:1:24126:24137	3463515	3	True				
ANR	3463606	Identifier	TRUE		3463515	0					
ANR	3463607	ReturnType	int		3463515	1					
ANR	3463608	Identifier	Stream :: put		3463515	2					
ANR	3463609	ParameterList	double d		3463515	3					
ANR	3463610	Parameter	double d	1218:13:23782:23789	3463515	0	True				
ANR	3463611	ParameterType	double		3463515	0					
ANR	3463612	Identifier	d		3463515	1					
ANR	3463613	CFGEntryNode	ENTRY		3463515		True				
ANR	3463614	CFGExitNode	EXIT		3463515		True				
ANR	3463615	Symbol	FRAC_CONST		3463515						
ANR	3463616	Symbol	frexp		3463515						
ANR	3463617	Symbol	d		3463515						
ANR	3463618	Symbol	& exp		3463515						
ANR	3463619	Symbol	_code		3463515						
ANR	3463620	Symbol	TRUE		3463515						
ANR	3463621	Symbol	& d		3463515						
ANR	3463622	Symbol	FALSE		3463515						
ANR	3463623	Symbol	exp		3463515						
ANR	3463624	Symbol	put_bytes		3463515						
ANR	3463625	Symbol	frac		3463515						
ANR	3463626	Symbol	put		3463515						
ANR	3463627	Function	Stream :: put	1243:0:24144:25056							
ANR	3463628	FunctionDef	Stream :: put (char const * s)		3463627	0					
ANR	3463629	CompoundStatement		1245:0:24177:25056	3463627	0					
ANR	3463630	IdentifierDeclStatement	int len ;	1246:1:24180:24188	3463627	0	True				
ANR	3463631	IdentifierDecl	len		3463627	0					
ANR	3463632	IdentifierDeclType	int		3463627	0					
ANR	3463633	Identifier	len		3463627	1					
ANR	3463634	ExpressionStatement	"NETWORK_TRACE ( ""put string "" << s )"	1248:2:24193:24226	3463627	1	True				
ANR	3463635	CallExpression	"NETWORK_TRACE ( ""put string "" << s )"		3463627	0					
ANR	3463636	Callee	NETWORK_TRACE		3463627	0					
ANR	3463637	Identifier	NETWORK_TRACE		3463627	0					
ANR	3463638	ArgumentList	"""put string "" << s"		3463627	1					
ANR	3463639	Argument	"""put string "" << s"		3463627	0					
ANR	3463640	ShiftExpression	"""put string "" << s"		3463627	0		<<			
ANR	3463641	PrimaryExpression	"""put string """		3463627	0					
ANR	3463642	Identifier	s		3463627	1					
ANR	3463643	SwitchStatement	switch ( _code )		3463627	2					
ANR	3463644	Condition	_code	1250:8:24237:24241	3463627	0	True				
ANR	3463645	Identifier	_code		3463627	0					
ANR	3463646	CompoundStatement		6:14:65:65	3463627	1					
ANR	3463647	Label	case internal :	1251:2:24247:24260	3463627	0	True				
ANR	3463648	Identifier	internal		3463627	0					
ANR	3463649	Label	case external :	1252:2:24264:24277	3463627	1	True				
ANR	3463650	Identifier	external		3463627	0					
ANR	3463651	IfStatement	if ( ! s )		3463627	2					
ANR	3463652	Condition	! s	1253:7:24286:24287	3463627	0	True				
ANR	3463653	UnaryOperationExpression	! s		3463627	0					
ANR	3463654	UnaryOperator	!		3463627	0					
ANR	3463655	Identifier	s		3463627	1					
ANR	3463656	CompoundStatement		9:10:111:111	3463627	1					
ANR	3463657	IfStatement	if ( get_encryption ( ) )		3463627	0					
ANR	3463658	Condition	get_encryption ( )	1254:32:24323:24338	3463627	0	True				
ANR	3463659	CallExpression	get_encryption ( )		3463627	0					
ANR	3463660	Callee	get_encryption		3463627	0					
ANR	3463661	Identifier	get_encryption		3463627	0					
ANR	3463662	ArgumentList			3463627	1					
ANR	3463663	CompoundStatement		10:50:163:163	3463627	1					
ANR	3463664	ExpressionStatement	len = 1	1255:32:24375:24382	3463627	0	True				
ANR	3463665	AssignmentExpression	len = 1		3463627	0		=			
ANR	3463666	Identifier	len		3463627	0					
ANR	3463667	PrimaryExpression	1		3463627	1					
ANR	3463668	IfStatement	if ( put ( len ) == FALSE )		3463627	1					
ANR	3463669	Condition	put ( len ) == FALSE	1256:36:24420:24436	3463627	0	True				
ANR	3463670	EqualityExpression	put ( len ) == FALSE		3463627	0		==			
ANR	3463671	CallExpression	put ( len )		3463627	0					
ANR	3463672	Callee	put		3463627	0					
ANR	3463673	Identifier	put		3463627	0					
ANR	3463674	ArgumentList	len		3463627	1					
ANR	3463675	Argument	len		3463627	0					
ANR	3463676	Identifier	len		3463627	0					
ANR	3463677	Identifier	FALSE		3463627	1					
ANR	3463678	CompoundStatement		12:55:261:261	3463627	1					
ANR	3463679	ReturnStatement	return FALSE ;	1257:36:24477:24489	3463627	0	True				
ANR	3463680	Identifier	FALSE		3463627	0					
ANR	3463681	IfStatement	"if ( put_bytes ( BIN_NULL_CHAR , 1 ) != 1 )"		3463627	1					
ANR	3463682	Condition	"put_bytes ( BIN_NULL_CHAR , 1 ) != 1"	1260:32:24587:24618	3463627	0	True				
ANR	3463683	EqualityExpression	"put_bytes ( BIN_NULL_CHAR , 1 ) != 1"		3463627	0		!=			
ANR	3463684	CallExpression	"put_bytes ( BIN_NULL_CHAR , 1 )"		3463627	0					
ANR	3463685	Callee	put_bytes		3463627	0					
ANR	3463686	Identifier	put_bytes		3463627	0					
ANR	3463687	ArgumentList	BIN_NULL_CHAR		3463627	1					
ANR	3463688	Argument	BIN_NULL_CHAR		3463627	0					
ANR	3463689	Identifier	BIN_NULL_CHAR		3463627	0					
ANR	3463690	Argument	1		3463627	1					
ANR	3463691	PrimaryExpression	1		3463627	0					
ANR	3463692	PrimaryExpression	1		3463627	1					
ANR	3463693	ReturnStatement	return FALSE ;	1260:66:24621:24633	3463627	1	True				
ANR	3463694	Identifier	FALSE		3463627	0					
ANR	3463695	ElseStatement	else		3463627	0					
ANR	3463696	CompoundStatement		18:7:469:469	3463627	0					
ANR	3463697	ExpressionStatement	len = strlen ( s ) + 1	1263:28:24677:24694	3463627	0	True				
ANR	3463698	AssignmentExpression	len = strlen ( s ) + 1		3463627	0		=			
ANR	3463699	Identifier	len		3463627	0					
ANR	3463700	AdditiveExpression	strlen ( s ) + 1		3463627	1		+			
ANR	3463701	CallExpression	strlen ( s )		3463627	0					
ANR	3463702	Callee	strlen		3463627	0					
ANR	3463703	Identifier	strlen		3463627	0					
ANR	3463704	ArgumentList	s		3463627	1					
ANR	3463705	Argument	s		3463627	0					
ANR	3463706	Identifier	s		3463627	0					
ANR	3463707	PrimaryExpression	1		3463627	1					
ANR	3463708	IfStatement	if ( get_encryption ( ) )		3463627	1					
ANR	3463709	Condition	get_encryption ( )	1264:32:24728:24743	3463627	0	True				
ANR	3463710	CallExpression	get_encryption ( )		3463627	0					
ANR	3463711	Callee	get_encryption		3463627	0					
ANR	3463712	Identifier	get_encryption		3463627	0					
ANR	3463713	ArgumentList			3463627	1					
ANR	3463714	CompoundStatement		20:50:568:568	3463627	1					
ANR	3463715	IfStatement	if ( put ( len ) == FALSE )		3463627	0					
ANR	3463716	Condition	put ( len ) == FALSE	1265:36:24784:24800	3463627	0	True				
ANR	3463717	EqualityExpression	put ( len ) == FALSE		3463627	0		==			
ANR	3463718	CallExpression	put ( len )		3463627	0					
ANR	3463719	Callee	put		3463627	0					
ANR	3463720	Identifier	put		3463627	0					
ANR	3463721	ArgumentList	len		3463627	1					
ANR	3463722	Argument	len		3463627	0					
ANR	3463723	Identifier	len		3463627	0					
ANR	3463724	Identifier	FALSE		3463627	1					
ANR	3463725	CompoundStatement		21:55:625:625	3463627	1					
ANR	3463726	ReturnStatement	return FALSE ;	1266:36:24841:24853	3463627	0	True				
ANR	3463727	Identifier	FALSE		3463627	0					
ANR	3463728	IfStatement	"if ( put_bytes ( s , len ) != len )"		3463627	2					
ANR	3463729	Condition	"put_bytes ( s , len ) != len"	1269:32:24951:24974	3463627	0	True				
ANR	3463730	EqualityExpression	"put_bytes ( s , len ) != len"		3463627	0		!=			
ANR	3463731	CallExpression	"put_bytes ( s , len )"		3463627	0					
ANR	3463732	Callee	put_bytes		3463627	0					
ANR	3463733	Identifier	put_bytes		3463627	0					
ANR	3463734	ArgumentList	s		3463627	1					
ANR	3463735	Argument	s		3463627	0					
ANR	3463736	Identifier	s		3463627	0					
ANR	3463737	Argument	len		3463627	1					
ANR	3463738	Identifier	len		3463627	0					
ANR	3463739	Identifier	len		3463627	1					
ANR	3463740	ReturnStatement	return FALSE ;	1269:58:24977:24989	3463627	1	True				
ANR	3463741	Identifier	FALSE		3463627	0					
ANR	3463742	BreakStatement	break ;	1271:3:24999:25004	3463627	3	True				
ANR	3463743	Label	case ascii :	1273:2:25009:25019	3463627	4	True				
ANR	3463744	Identifier	ascii		3463627	0					
ANR	3463745	ReturnStatement	return FALSE ;	1274:3:25024:25036	3463627	5	True				
ANR	3463746	Identifier	FALSE		3463627	0					
ANR	3463747	ReturnStatement	return TRUE ;	1277:1:25043:25054	3463627	3	True				
ANR	3463748	Identifier	TRUE		3463627	0					
ANR	3463749	ReturnType	int		3463627	1					
ANR	3463750	Identifier	Stream :: put		3463627	2					
ANR	3463751	ParameterList	char const * s		3463627	3					
ANR	3463752	Parameter	char const * s	1244:13:24162:24174	3463627	0	True				
ANR	3463753	ParameterType	char const *		3463627	0					
ANR	3463754	Identifier	s		3463627	1					
ANR	3463755	CFGEntryNode	ENTRY		3463627		True				
ANR	3463756	CFGExitNode	EXIT		3463627		True				
ANR	3463757	Symbol	strlen		3463627						
ANR	3463758	Symbol	s		3463627						
ANR	3463759	Symbol	len		3463627						
ANR	3463760	Symbol	_code		3463627						
ANR	3463761	Symbol	BIN_NULL_CHAR		3463627						
ANR	3463762	Symbol	TRUE		3463627						
ANR	3463763	Symbol	FALSE		3463627						
ANR	3463764	Symbol	put_bytes		3463627						
ANR	3463765	Symbol	get_encryption		3463627						
ANR	3463766	Symbol	put		3463627						
ANR	3463767	Function	Stream :: put	1280:0:25059:25124							
ANR	3463768	FunctionDef	Stream :: put (const MyString & s)		3463767	0					
ANR	3463769	CompoundStatement		1282:0:25096:25124	3463767	0					
ANR	3463770	ReturnStatement	return put ( s . Value ( ) ) ;	1283:1:25099:25122	3463767	0	True				
ANR	3463771	CallExpression	put ( s . Value ( ) )		3463767	0					
ANR	3463772	Callee	put		3463767	0					
ANR	3463773	Identifier	put		3463767	0					
ANR	3463774	ArgumentList	s . Value ( )		3463767	1					
ANR	3463775	Argument	s . Value ( )		3463767	0					
ANR	3463776	CallExpression	s . Value ( )		3463767	0					
ANR	3463777	Callee	s . Value		3463767	0					
ANR	3463778	MemberAccess	s . Value		3463767	0					
ANR	3463779	Identifier	s		3463767	0					
ANR	3463780	Identifier	Value		3463767	1					
ANR	3463781	ArgumentList			3463767	1					
ANR	3463782	ReturnType	int		3463767	1					
ANR	3463783	Identifier	Stream :: put		3463767	2					
ANR	3463784	ParameterList	const MyString & s		3463767	3					
ANR	3463785	Parameter	const MyString & s	1281:13:25077:25093	3463767	0	True				
ANR	3463786	ParameterType	const MyString &		3463767	0					
ANR	3463787	Identifier	s		3463767	1					
ANR	3463788	CFGEntryNode	ENTRY		3463767		True				
ANR	3463789	CFGExitNode	EXIT		3463767		True				
ANR	3463790	Symbol	s		3463767						
ANR	3463791	Symbol	s . Value		3463767						
ANR	3463792	Symbol	put		3463767						
ANR	3463793	Function	Stream :: put	1286:0:25127:25195							
ANR	3463794	FunctionDef	Stream :: put (const std :: string & s)		3463793	0					
ANR	3463795	CompoundStatement		1288:0:25167:25195	3463793	0					
ANR	3463796	ReturnStatement	return put ( s . c_str ( ) ) ;	1289:1:25170:25193	3463793	0	True				
ANR	3463797	CallExpression	put ( s . c_str ( ) )		3463793	0					
ANR	3463798	Callee	put		3463793	0					
ANR	3463799	Identifier	put		3463793	0					
ANR	3463800	ArgumentList	s . c_str ( )		3463793	1					
ANR	3463801	Argument	s . c_str ( )		3463793	0					
ANR	3463802	CallExpression	s . c_str ( )		3463793	0					
ANR	3463803	Callee	s . c_str		3463793	0					
ANR	3463804	MemberAccess	s . c_str		3463793	0					
ANR	3463805	Identifier	s		3463793	0					
ANR	3463806	Identifier	c_str		3463793	1					
ANR	3463807	ArgumentList			3463793	1					
ANR	3463808	ReturnType	int		3463793	1					
ANR	3463809	Identifier	Stream :: put		3463793	2					
ANR	3463810	ParameterList	const std :: string & s		3463793	3					
ANR	3463811	Parameter	const std :: string & s	1287:13:25145:25164	3463793	0	True				
ANR	3463812	ParameterType	const std :: string &		3463793	0					
ANR	3463813	Identifier	s		3463793	1					
ANR	3463814	CFGEntryNode	ENTRY		3463793		True				
ANR	3463815	CFGExitNode	EXIT		3463793		True				
ANR	3463816	Symbol	s		3463793						
ANR	3463817	Symbol	s . c_str		3463793						
ANR	3463818	Symbol	put		3463793						
ANR	3463819	Function	Stream :: put_secret	1292:0:25198:25353							
ANR	3463820	FunctionDef	Stream :: put_secret (char const * s)		3463819	0					
ANR	3463821	CompoundStatement		1294:0:25238:25353	3463819	0					
ANR	3463822	IdentifierDeclStatement	int retval ;	1295:1:25241:25251	3463819	0	True				
ANR	3463823	IdentifierDecl	retval		3463819	0					
ANR	3463824	IdentifierDeclType	int		3463819	0					
ANR	3463825	Identifier	retval		3463819	1					
ANR	3463826	ExpressionStatement	prepare_crypto_for_secret ( )	1297:1:25255:25282	3463819	1	True				
ANR	3463827	CallExpression	prepare_crypto_for_secret ( )		3463819	0					
ANR	3463828	Callee	prepare_crypto_for_secret		3463819	0					
ANR	3463829	Identifier	prepare_crypto_for_secret		3463819	0					
ANR	3463830	ArgumentList			3463819	1					
ANR	3463831	ExpressionStatement	retval = put ( s )	1299:1:25286:25301	3463819	2	True				
ANR	3463832	AssignmentExpression	retval = put ( s )		3463819	0		=			
ANR	3463833	Identifier	retval		3463819	0					
ANR	3463834	CallExpression	put ( s )		3463819	1					
ANR	3463835	Callee	put		3463819	0					
ANR	3463836	Identifier	put		3463819	0					
ANR	3463837	ArgumentList	s		3463819	1					
ANR	3463838	Argument	s		3463819	0					
ANR	3463839	Identifier	s		3463819	0					
ANR	3463840	ExpressionStatement	restore_crypto_after_secret ( )	1301:1:25305:25334	3463819	3	True				
ANR	3463841	CallExpression	restore_crypto_after_secret ( )		3463819	0					
ANR	3463842	Callee	restore_crypto_after_secret		3463819	0					
ANR	3463843	Identifier	restore_crypto_after_secret		3463819	0					
ANR	3463844	ArgumentList			3463819	1					
ANR	3463845	ReturnStatement	return retval ;	1303:1:25338:25351	3463819	4	True				
ANR	3463846	Identifier	retval		3463819	0					
ANR	3463847	ReturnType	int		3463819	1					
ANR	3463848	Identifier	Stream :: put_secret		3463819	2					
ANR	3463849	ParameterList	char const * s		3463819	3					
ANR	3463850	Parameter	char const * s	1293:20:25222:25234	3463819	0	True				
ANR	3463851	ParameterType	char const *		3463819	0					
ANR	3463852	Identifier	s		3463819	1					
ANR	3463853	CFGEntryNode	ENTRY		3463819		True				
ANR	3463854	CFGExitNode	EXIT		3463819		True				
ANR	3463855	Symbol	s		3463819						
ANR	3463856	Symbol	retval		3463819						
ANR	3463857	Symbol	put		3463819						
ANR	3463858	Function	Stream :: get_secret	1306:0:25356:25506							
ANR	3463859	FunctionDef	Stream :: get_secret (char * & s)		3463858	0					
ANR	3463860	CompoundStatement		1308:0:25391:25506	3463858	0					
ANR	3463861	IdentifierDeclStatement	int retval ;	1309:1:25394:25404	3463858	0	True				
ANR	3463862	IdentifierDecl	retval		3463858	0					
ANR	3463863	IdentifierDeclType	int		3463858	0					
ANR	3463864	Identifier	retval		3463858	1					
ANR	3463865	ExpressionStatement	prepare_crypto_for_secret ( )	1311:1:25408:25435	3463858	1	True				
ANR	3463866	CallExpression	prepare_crypto_for_secret ( )		3463858	0					
ANR	3463867	Callee	prepare_crypto_for_secret		3463858	0					
ANR	3463868	Identifier	prepare_crypto_for_secret		3463858	0					
ANR	3463869	ArgumentList			3463858	1					
ANR	3463870	ExpressionStatement	retval = get ( s )	1313:1:25439:25454	3463858	2	True				
ANR	3463871	AssignmentExpression	retval = get ( s )		3463858	0		=			
ANR	3463872	Identifier	retval		3463858	0					
ANR	3463873	CallExpression	get ( s )		3463858	1					
ANR	3463874	Callee	get		3463858	0					
ANR	3463875	Identifier	get		3463858	0					
ANR	3463876	ArgumentList	s		3463858	1					
ANR	3463877	Argument	s		3463858	0					
ANR	3463878	Identifier	s		3463858	0					
ANR	3463879	ExpressionStatement	restore_crypto_after_secret ( )	1315:1:25458:25487	3463858	3	True				
ANR	3463880	CallExpression	restore_crypto_after_secret ( )		3463858	0					
ANR	3463881	Callee	restore_crypto_after_secret		3463858	0					
ANR	3463882	Identifier	restore_crypto_after_secret		3463858	0					
ANR	3463883	ArgumentList			3463858	1					
ANR	3463884	ReturnStatement	return retval ;	1317:1:25491:25504	3463858	4	True				
ANR	3463885	Identifier	retval		3463858	0					
ANR	3463886	ReturnType	int		3463858	1					
ANR	3463887	Identifier	Stream :: get_secret		3463858	2					
ANR	3463888	ParameterList	char * & s		3463858	3					
ANR	3463889	Parameter	char * & s	1307:20:25380:25387	3463858	0	True				
ANR	3463890	ParameterType	char * &		3463858	0					
ANR	3463891	Identifier	s		3463858	1					
ANR	3463892	CFGEntryNode	ENTRY		3463858		True				
ANR	3463893	CFGExitNode	EXIT		3463858		True				
ANR	3463894	Symbol	s		3463858						
ANR	3463895	Symbol	get		3463858						
ANR	3463896	Symbol	retval		3463858						
ANR	3463897	Function	Stream :: put	1320:0:25509:26397							
ANR	3463898	FunctionDef	"Stream :: put (char const * s , int l)"		3463897	0					
ANR	3463899	CompoundStatement		1322:0:25550:26397	3463897	0					
ANR	3463900	ExpressionStatement	"NETWORK_TRACE ( ""put string \\"""" << s << ""\\"" and int "" << l )"	1323:4:25556:25615	3463897	0	True				
ANR	3463901	CallExpression	"NETWORK_TRACE ( ""put string \\"""" << s << ""\\"" and int "" << l )"		3463897	0					
ANR	3463902	Callee	NETWORK_TRACE		3463897	0					
ANR	3463903	Identifier	NETWORK_TRACE		3463897	0					
ANR	3463904	ArgumentList	"""put string \\"""" << s << ""\\"" and int "" << l"		3463897	1					
ANR	3463905	Argument	"""put string \\"""" << s << ""\\"" and int "" << l"		3463897	0					
ANR	3463906	ShiftExpression	"""put string \\"""" << s << ""\\"" and int "" << l"		3463897	0		<<			
ANR	3463907	PrimaryExpression	"""put string \\"""""		3463897	0					
ANR	3463908	ShiftExpression	"s << ""\\"" and int "" << l"		3463897	1		<<			
ANR	3463909	Identifier	s		3463897	0					
ANR	3463910	ShiftExpression	"""\\"" and int "" << l"		3463897	1		<<			
ANR	3463911	PrimaryExpression	"""\\"" and int """		3463897	0					
ANR	3463912	Identifier	l		3463897	1					
ANR	3463913	SwitchStatement	switch ( _code )		3463897	1					
ANR	3463914	Condition	_code	1325:8:25626:25630	3463897	0	True				
ANR	3463915	Identifier	_code		3463897	0					
ANR	3463916	CompoundStatement		4:14:81:81	3463897	1					
ANR	3463917	Label	case internal :	1326:2:25636:25649	3463897	0	True				
ANR	3463918	Identifier	internal		3463897	0					
ANR	3463919	Label	case external :	1327:2:25653:25666	3463897	1	True				
ANR	3463920	Identifier	external		3463897	0					
ANR	3463921	IfStatement	if ( ! s )		3463897	2					
ANR	3463922	Condition	! s	1328:7:25675:25676	3463897	0	True				
ANR	3463923	UnaryOperationExpression	! s		3463897	0					
ANR	3463924	UnaryOperator	!		3463897	0					
ANR	3463925	Identifier	s		3463897	1					
ANR	3463926	CompoundStatement		7:10:127:127	3463897	1					
ANR	3463927	IfStatement	if ( get_encryption ( ) )		3463897	0					
ANR	3463928	Condition	get_encryption ( )	1329:32:25712:25727	3463897	0	True				
ANR	3463929	CallExpression	get_encryption ( )		3463897	0					
ANR	3463930	Callee	get_encryption		3463897	0					
ANR	3463931	Identifier	get_encryption		3463897	0					
ANR	3463932	ArgumentList			3463897	1					
ANR	3463933	CompoundStatement		9:32:213:224	3463897	1					
ANR	3463934	IdentifierDeclStatement	int len = 1 ;	1330:32:25764:25775	3463897	0	True				
ANR	3463935	IdentifierDecl	len = 1		3463897	0					
ANR	3463936	IdentifierDeclType	int		3463897	0					
ANR	3463937	Identifier	len		3463897	1					
ANR	3463938	AssignmentExpression	len = 1		3463897	2		=			
ANR	3463939	Identifier	len		3463897	0					
ANR	3463940	PrimaryExpression	1		3463897	1					
ANR	3463941	IfStatement	if ( put ( len ) == FALSE )		3463897	1					
ANR	3463942	Condition	put ( len ) == FALSE	1331:36:25813:25829	3463897	0	True				
ANR	3463943	EqualityExpression	put ( len ) == FALSE		3463897	0		==			
ANR	3463944	CallExpression	put ( len )		3463897	0					
ANR	3463945	Callee	put		3463897	0					
ANR	3463946	Identifier	put		3463897	0					
ANR	3463947	ArgumentList	len		3463897	1					
ANR	3463948	Argument	len		3463897	0					
ANR	3463949	Identifier	len		3463897	0					
ANR	3463950	Identifier	FALSE		3463897	1					
ANR	3463951	CompoundStatement		10:55:281:281	3463897	1					
ANR	3463952	ReturnStatement	return FALSE ;	1332:36:25870:25882	3463897	0	True				
ANR	3463953	Identifier	FALSE		3463897	0					
ANR	3463954	IfStatement	"if ( put_bytes ( BIN_NULL_CHAR , 1 ) != 1 )"		3463897	1					
ANR	3463955	Condition	"put_bytes ( BIN_NULL_CHAR , 1 ) != 1"	1336:32:25981:26012	3463897	0	True				
ANR	3463956	EqualityExpression	"put_bytes ( BIN_NULL_CHAR , 1 ) != 1"		3463897	0		!=			
ANR	3463957	CallExpression	"put_bytes ( BIN_NULL_CHAR , 1 )"		3463897	0					
ANR	3463958	Callee	put_bytes		3463897	0					
ANR	3463959	Identifier	put_bytes		3463897	0					
ANR	3463960	ArgumentList	BIN_NULL_CHAR		3463897	1					
ANR	3463961	Argument	BIN_NULL_CHAR		3463897	0					
ANR	3463962	Identifier	BIN_NULL_CHAR		3463897	0					
ANR	3463963	Argument	1		3463897	1					
ANR	3463964	PrimaryExpression	1		3463897	0					
ANR	3463965	PrimaryExpression	1		3463897	1					
ANR	3463966	ReturnStatement	return FALSE ;	1336:66:26015:26027	3463897	1	True				
ANR	3463967	Identifier	FALSE		3463897	0					
ANR	3463968	ElseStatement	else		3463897	0					
ANR	3463969	CompoundStatement		17:7:490:490	3463897	0					
ANR	3463970	IfStatement	if ( get_encryption ( ) )		3463897	0					
ANR	3463971	Condition	get_encryption ( )	1339:32:26075:26090	3463897	0	True				
ANR	3463972	CallExpression	get_encryption ( )		3463897	0					
ANR	3463973	Callee	get_encryption		3463897	0					
ANR	3463974	Identifier	get_encryption		3463897	0					
ANR	3463975	ArgumentList			3463897	1					
ANR	3463976	CompoundStatement		18:50:542:542	3463897	1					
ANR	3463977	IfStatement	if ( put ( l ) == FALSE )		3463897	0					
ANR	3463978	Condition	put ( l ) == FALSE	1340:36:26131:26145	3463897	0	True				
ANR	3463979	EqualityExpression	put ( l ) == FALSE		3463897	0		==			
ANR	3463980	CallExpression	put ( l )		3463897	0					
ANR	3463981	Callee	put		3463897	0					
ANR	3463982	Identifier	put		3463897	0					
ANR	3463983	ArgumentList	l		3463897	1					
ANR	3463984	Argument	l		3463897	0					
ANR	3463985	Identifier	l		3463897	0					
ANR	3463986	Identifier	FALSE		3463897	1					
ANR	3463987	CompoundStatement		19:53:597:597	3463897	1					
ANR	3463988	ReturnStatement	return FALSE ;	1341:36:26186:26198	3463897	0	True				
ANR	3463989	Identifier	FALSE		3463897	0					
ANR	3463990	IfStatement	"if ( put_bytes ( s , l ) != l )"		3463897	1					
ANR	3463991	Condition	"put_bytes ( s , l ) != l"	1344:32:26296:26315	3463897	0	True				
ANR	3463992	EqualityExpression	"put_bytes ( s , l ) != l"		3463897	0		!=			
ANR	3463993	CallExpression	"put_bytes ( s , l )"		3463897	0					
ANR	3463994	Callee	put_bytes		3463897	0					
ANR	3463995	Identifier	put_bytes		3463897	0					
ANR	3463996	ArgumentList	s		3463897	1					
ANR	3463997	Argument	s		3463897	0					
ANR	3463998	Identifier	s		3463897	0					
ANR	3463999	Argument	l		3463897	1					
ANR	3464000	Identifier	l		3463897	0					
ANR	3464001	Identifier	l		3463897	1					
ANR	3464002	ReturnStatement	return FALSE ;	1344:54:26318:26330	3463897	1	True				
ANR	3464003	Identifier	FALSE		3463897	0					
ANR	3464004	BreakStatement	break ;	1346:3:26340:26345	3463897	3	True				
ANR	3464005	Label	case ascii :	1348:2:26350:26360	3463897	4	True				
ANR	3464006	Identifier	ascii		3463897	0					
ANR	3464007	ReturnStatement	return FALSE ;	1349:3:26365:26377	3463897	5	True				
ANR	3464008	Identifier	FALSE		3463897	0					
ANR	3464009	ReturnStatement	return TRUE ;	1352:1:26384:26395	3463897	2	True				
ANR	3464010	Identifier	TRUE		3463897	0					
ANR	3464011	ReturnType	int		3463897	1					
ANR	3464012	Identifier	Stream :: put		3463897	2					
ANR	3464013	ParameterList	"char const * s , int l"		3463897	3					
ANR	3464014	Parameter	char const * s	1321:13:25527:25539	3463897	0	True				
ANR	3464015	ParameterType	char const *		3463897	0					
ANR	3464016	Identifier	s		3463897	1					
ANR	3464017	Parameter	int l	1321:28:25542:25547	3463897	1	True				
ANR	3464018	ParameterType	int		3463897	0					
ANR	3464019	Identifier	l		3463897	1					
ANR	3464020	CFGEntryNode	ENTRY		3463897		True				
ANR	3464021	CFGExitNode	EXIT		3463897		True				
ANR	3464022	Symbol	s		3463897						
ANR	3464023	Symbol	len		3463897						
ANR	3464024	Symbol	_code		3463897						
ANR	3464025	Symbol	BIN_NULL_CHAR		3463897						
ANR	3464026	Symbol	TRUE		3463897						
ANR	3464027	Symbol	FALSE		3463897						
ANR	3464028	Symbol	l		3463897						
ANR	3464029	Symbol	put_bytes		3463897						
ANR	3464030	Symbol	get_encryption		3463897						
ANR	3464031	Symbol	put		3463897						
ANR	3464032	Function	Stream :: get	1365:0:26429:26779							
ANR	3464033	FunctionDef	Stream :: get (char & c)		3464032	0					
ANR	3464034	CompoundStatement		1367:0:26456:26779	3464032	0					
ANR	3464035	ExpressionStatement	putcount = 0	1368:3:26461:26472	3464032	0	True				
ANR	3464036	AssignmentExpression	putcount = 0		3464032	0		=			
ANR	3464037	Identifier	putcount		3464032	0					
ANR	3464038	PrimaryExpression	0		3464032	1					
ANR	3464039	SwitchStatement	switch ( _code )		3464032	1					
ANR	3464040	Condition	_code	1370:8:26483:26487	3464032	0	True				
ANR	3464041	Identifier	_code		3464032	0					
ANR	3464042	CompoundStatement		4:14:32:32	3464032	1					
ANR	3464043	Label	case internal :	1371:2:26493:26506	3464032	0	True				
ANR	3464044	Identifier	internal		3464032	0					
ANR	3464045	Label	case external :	1372:2:26510:26523	3464032	1	True				
ANR	3464046	Identifier	external		3464032	0					
ANR	3464047	Label	case ascii :	1373:2:26527:26537	3464032	2	True				
ANR	3464048	Identifier	ascii		3464032	0					
ANR	3464049	IfStatement	"if ( get_bytes ( & c , 1 ) != 1 )"		3464032	3					
ANR	3464050	Condition	"get_bytes ( & c , 1 ) != 1"	1374:7:26546:26566	3464032	0	True				
ANR	3464051	EqualityExpression	"get_bytes ( & c , 1 ) != 1"		3464032	0		!=			
ANR	3464052	CallExpression	"get_bytes ( & c , 1 )"		3464032	0					
ANR	3464053	Callee	get_bytes		3464032	0					
ANR	3464054	Identifier	get_bytes		3464032	0					
ANR	3464055	ArgumentList	& c		3464032	1					
ANR	3464056	Argument	& c		3464032	0					
ANR	3464057	UnaryOperationExpression	& c		3464032	0					
ANR	3464058	UnaryOperator	&		3464032	0					
ANR	3464059	Identifier	c		3464032	1					
ANR	3464060	Argument	1		3464032	1					
ANR	3464061	PrimaryExpression	1		3464032	0					
ANR	3464062	PrimaryExpression	1		3464032	1					
ANR	3464063	CompoundStatement		8:30:112:112	3464032	1					
ANR	3464064	ExpressionStatement	"dprintf ( D_NETWORK , ""Stream::get(char) failed\\n"" )"	1375:16:26587:26635	3464032	0	True				
ANR	3464065	CallExpression	"dprintf ( D_NETWORK , ""Stream::get(char) failed\\n"" )"		3464032	0					
ANR	3464066	Callee	dprintf		3464032	0					
ANR	3464067	Identifier	dprintf		3464032	0					
ANR	3464068	ArgumentList	D_NETWORK		3464032	1					
ANR	3464069	Argument	D_NETWORK		3464032	0					
ANR	3464070	Identifier	D_NETWORK		3464032	0					
ANR	3464071	Argument	"""Stream::get(char) failed\\n"""		3464032	1					
ANR	3464072	PrimaryExpression	"""Stream::get(char) failed\\n"""		3464032	0					
ANR	3464073	ReturnStatement	return FALSE ;	1376:16:26653:26665	3464032	1	True				
ANR	3464074	Identifier	FALSE		3464032	0					
ANR	3464075	BreakStatement	break ;	1378:3:26684:26689	3464032	4	True				
ANR	3464076	ExpressionStatement	"NETWORK_TRACE ( ""get char "" << c << "" c("" << ++ getcount << "") "" )"	1380:3:26697:26759	3464032	2	True				
ANR	3464077	CallExpression	"NETWORK_TRACE ( ""get char "" << c << "" c("" << ++ getcount << "") "" )"		3464032	0					
ANR	3464078	Callee	NETWORK_TRACE		3464032	0					
ANR	3464079	Identifier	NETWORK_TRACE		3464032	0					
ANR	3464080	ArgumentList	"""get char "" << c << "" c("" << ++ getcount << "") """		3464032	1					
ANR	3464081	Argument	"""get char "" << c << "" c("" << ++ getcount << "") """		3464032	0					
ANR	3464082	ShiftExpression	"""get char "" << c << "" c("" << ++ getcount << "") """		3464032	0		<<			
ANR	3464083	PrimaryExpression	"""get char """		3464032	0					
ANR	3464084	ShiftExpression	"c << "" c("" << ++ getcount << "") """		3464032	1		<<			
ANR	3464085	Identifier	c		3464032	0					
ANR	3464086	ShiftExpression	""" c("" << ++ getcount << "") """		3464032	1		<<			
ANR	3464087	PrimaryExpression	""" c("""		3464032	0					
ANR	3464088	ShiftExpression	"++ getcount << "") """		3464032	1		<<			
ANR	3464089	UnaryExpression	++ getcount		3464032	0					
ANR	3464090	IncDec	++		3464032	0					
ANR	3464091	Identifier	getcount		3464032	1					
ANR	3464092	PrimaryExpression	""") """		3464032	1					
ANR	3464093	ReturnStatement	return TRUE ;	1381:1:26766:26777	3464032	3	True				
ANR	3464094	Identifier	TRUE		3464032	0					
ANR	3464095	ReturnType	int		3464032	1					
ANR	3464096	Identifier	Stream :: get		3464032	2					
ANR	3464097	ParameterList	char & c		3464032	3					
ANR	3464098	Parameter	char & c	1366:13:26447:26453	3464032	0	True				
ANR	3464099	ParameterType	char &		3464032	0					
ANR	3464100	Identifier	c		3464032	1					
ANR	3464101	CFGEntryNode	ENTRY		3464032		True				
ANR	3464102	CFGExitNode	EXIT		3464032		True				
ANR	3464103	Symbol	c		3464032						
ANR	3464104	Symbol	_code		3464032						
ANR	3464105	Symbol	putcount		3464032						
ANR	3464106	Symbol	& c		3464032						
ANR	3464107	Symbol	D_NETWORK		3464032						
ANR	3464108	Symbol	TRUE		3464032						
ANR	3464109	Symbol	FALSE		3464032						
ANR	3464110	Symbol	get_bytes		3464032						
ANR	3464111	Symbol	getcount		3464032						
ANR	3464112	Function	Stream :: get	1386:0:26784:27144							
ANR	3464113	FunctionDef	Stream :: get (unsigned char & c)		3464112	0					
ANR	3464114	CompoundStatement		1388:0:26820:27144	3464112	0					
ANR	3464115	ExpressionStatement	putcount = 0	1389:3:26825:26836	3464112	0	True				
ANR	3464116	AssignmentExpression	putcount = 0		3464112	0		=			
ANR	3464117	Identifier	putcount		3464112	0					
ANR	3464118	PrimaryExpression	0		3464112	1					
ANR	3464119	SwitchStatement	switch ( _code )		3464112	1					
ANR	3464120	Condition	_code	1391:8:26847:26851	3464112	0	True				
ANR	3464121	Identifier	_code		3464112	0					
ANR	3464122	CompoundStatement		4:14:32:32	3464112	1					
ANR	3464123	Label	case internal :	1392:2:26857:26870	3464112	0	True				
ANR	3464124	Identifier	internal		3464112	0					
ANR	3464125	Label	case external :	1393:2:26874:26887	3464112	1	True				
ANR	3464126	Identifier	external		3464112	0					
ANR	3464127	Label	case ascii :	1394:2:26891:26901	3464112	2	True				
ANR	3464128	Identifier	ascii		3464112	0					
ANR	3464129	IfStatement	"if ( get_bytes ( & c , 1 ) != 1 )"		3464112	3					
ANR	3464130	Condition	"get_bytes ( & c , 1 ) != 1"	1395:7:26910:26930	3464112	0	True				
ANR	3464131	EqualityExpression	"get_bytes ( & c , 1 ) != 1"		3464112	0		!=			
ANR	3464132	CallExpression	"get_bytes ( & c , 1 )"		3464112	0					
ANR	3464133	Callee	get_bytes		3464112	0					
ANR	3464134	Identifier	get_bytes		3464112	0					
ANR	3464135	ArgumentList	& c		3464112	1					
ANR	3464136	Argument	& c		3464112	0					
ANR	3464137	UnaryOperationExpression	& c		3464112	0					
ANR	3464138	UnaryOperator	&		3464112	0					
ANR	3464139	Identifier	c		3464112	1					
ANR	3464140	Argument	1		3464112	1					
ANR	3464141	PrimaryExpression	1		3464112	0					
ANR	3464142	PrimaryExpression	1		3464112	1					
ANR	3464143	CompoundStatement		8:30:112:112	3464112	1					
ANR	3464144	ExpressionStatement	"dprintf ( D_NETWORK , ""Stream::get(uchar) failed\\n"" )"	1396:16:26951:27000	3464112	0	True				
ANR	3464145	CallExpression	"dprintf ( D_NETWORK , ""Stream::get(uchar) failed\\n"" )"		3464112	0					
ANR	3464146	Callee	dprintf		3464112	0					
ANR	3464147	Identifier	dprintf		3464112	0					
ANR	3464148	ArgumentList	D_NETWORK		3464112	1					
ANR	3464149	Argument	D_NETWORK		3464112	0					
ANR	3464150	Identifier	D_NETWORK		3464112	0					
ANR	3464151	Argument	"""Stream::get(uchar) failed\\n"""		3464112	1					
ANR	3464152	PrimaryExpression	"""Stream::get(uchar) failed\\n"""		3464112	0					
ANR	3464153	ReturnStatement	return FALSE ;	1397:16:27018:27030	3464112	1	True				
ANR	3464154	Identifier	FALSE		3464112	0					
ANR	3464155	BreakStatement	break ;	1399:3:27049:27054	3464112	4	True				
ANR	3464156	ExpressionStatement	"NETWORK_TRACE ( ""get char "" << c << "" c("" << ++ getcount << "") "" )"	1401:3:27062:27124	3464112	2	True				
ANR	3464157	CallExpression	"NETWORK_TRACE ( ""get char "" << c << "" c("" << ++ getcount << "") "" )"		3464112	0					
ANR	3464158	Callee	NETWORK_TRACE		3464112	0					
ANR	3464159	Identifier	NETWORK_TRACE		3464112	0					
ANR	3464160	ArgumentList	"""get char "" << c << "" c("" << ++ getcount << "") """		3464112	1					
ANR	3464161	Argument	"""get char "" << c << "" c("" << ++ getcount << "") """		3464112	0					
ANR	3464162	ShiftExpression	"""get char "" << c << "" c("" << ++ getcount << "") """		3464112	0		<<			
ANR	3464163	PrimaryExpression	"""get char """		3464112	0					
ANR	3464164	ShiftExpression	"c << "" c("" << ++ getcount << "") """		3464112	1		<<			
ANR	3464165	Identifier	c		3464112	0					
ANR	3464166	ShiftExpression	""" c("" << ++ getcount << "") """		3464112	1		<<			
ANR	3464167	PrimaryExpression	""" c("""		3464112	0					
ANR	3464168	ShiftExpression	"++ getcount << "") """		3464112	1		<<			
ANR	3464169	UnaryExpression	++ getcount		3464112	0					
ANR	3464170	IncDec	++		3464112	0					
ANR	3464171	Identifier	getcount		3464112	1					
ANR	3464172	PrimaryExpression	""") """		3464112	1					
ANR	3464173	ReturnStatement	return TRUE ;	1402:1:27131:27142	3464112	3	True				
ANR	3464174	Identifier	TRUE		3464112	0					
ANR	3464175	ReturnType	int		3464112	1					
ANR	3464176	Identifier	Stream :: get		3464112	2					
ANR	3464177	ParameterList	unsigned char & c		3464112	3					
ANR	3464178	Parameter	unsigned char & c	1387:13:26802:26817	3464112	0	True				
ANR	3464179	ParameterType	unsigned char &		3464112	0					
ANR	3464180	Identifier	c		3464112	1					
ANR	3464181	CFGEntryNode	ENTRY		3464112		True				
ANR	3464182	CFGExitNode	EXIT		3464112		True				
ANR	3464183	Symbol	c		3464112						
ANR	3464184	Symbol	_code		3464112						
ANR	3464185	Symbol	putcount		3464112						
ANR	3464186	Symbol	& c		3464112						
ANR	3464187	Symbol	D_NETWORK		3464112						
ANR	3464188	Symbol	TRUE		3464112						
ANR	3464189	Symbol	FALSE		3464112						
ANR	3464190	Symbol	get_bytes		3464112						
ANR	3464191	Symbol	getcount		3464112						
ANR	3464192	Function	Stream :: get	1407:0:27149:28393							
ANR	3464193	FunctionDef	Stream :: get (int & i)		3464192	0					
ANR	3464194	CompoundStatement		1409:0:27176:28393	3464192	0					
ANR	3464195	IdentifierDeclStatement	int tmp ;	1410:1:27179:27187	3464192	0	True				
ANR	3464196	IdentifierDecl	tmp		3464192	0					
ANR	3464197	IdentifierDeclType	int		3464192	0					
ANR	3464198	Identifier	tmp		3464192	1					
ANR	3464199	IdentifierDeclStatement	"char pad [ INT_SIZE - sizeof ( int ) ] , sign ;"	1411:1:27190:27226	3464192	1	True				
ANR	3464200	IdentifierDecl	pad [ INT_SIZE - sizeof ( int ) ]		3464192	0					
ANR	3464201	IdentifierDeclType	char [ INT_SIZE - sizeof ( int ) ]		3464192	0					
ANR	3464202	Identifier	pad		3464192	1					
ANR	3464203	AdditiveExpression	INT_SIZE - sizeof ( int )		3464192	2		-			
ANR	3464204	Identifier	INT_SIZE		3464192	0					
ANR	3464205	SizeofExpression	sizeof ( int )		3464192	1					
ANR	3464206	Sizeof	sizeof		3464192	0					
ANR	3464207	SizeofOperand	int		3464192	1					
ANR	3464208	IdentifierDecl	sign		3464192	1					
ANR	3464209	IdentifierDeclType	char		3464192	0					
ANR	3464210	Identifier	sign		3464192	1					
ANR	3464211	SwitchStatement	switch ( _code )		3464192	2					
ANR	3464212	Condition	_code	1413:8:27237:27241	3464192	0	True				
ANR	3464213	Identifier	_code		3464192	0					
ANR	3464214	CompoundStatement		5:14:66:66	3464192	1					
ANR	3464215	Label	case internal :	1414:2:27247:27260	3464192	0	True				
ANR	3464216	Identifier	internal		3464192	0					
ANR	3464217	IfStatement	"if ( get_bytes ( & i , sizeof ( int ) ) != sizeof ( int ) )"		3464192	1					
ANR	3464218	Condition	"get_bytes ( & i , sizeof ( int ) ) != sizeof ( int )"	1415:7:27269:27309	3464192	0	True				
ANR	3464219	EqualityExpression	"get_bytes ( & i , sizeof ( int ) ) != sizeof ( int )"		3464192	0		!=			
ANR	3464220	CallExpression	"get_bytes ( & i , sizeof ( int ) )"		3464192	0					
ANR	3464221	Callee	get_bytes		3464192	0					
ANR	3464222	Identifier	get_bytes		3464192	0					
ANR	3464223	ArgumentList	& i		3464192	1					
ANR	3464224	Argument	& i		3464192	0					
ANR	3464225	UnaryOperationExpression	& i		3464192	0					
ANR	3464226	UnaryOperator	&		3464192	0					
ANR	3464227	Identifier	i		3464192	1					
ANR	3464228	Argument	sizeof ( int )		3464192	1					
ANR	3464229	SizeofExpression	sizeof ( int )		3464192	0					
ANR	3464230	Sizeof	sizeof		3464192	0					
ANR	3464231	SizeofOperand	int		3464192	1					
ANR	3464232	SizeofExpression	sizeof ( int )		3464192	1					
ANR	3464233	Sizeof	sizeof		3464192	0					
ANR	3464234	SizeofOperand	int		3464192	1					
ANR	3464235	CompoundStatement		7:50:135:135	3464192	1					
ANR	3464236	ExpressionStatement	"dprintf ( D_NETWORK , ""Stream::get(int) from internal failed\\n"" )"	1416:16:27330:27391	3464192	0	True				
ANR	3464237	CallExpression	"dprintf ( D_NETWORK , ""Stream::get(int) from internal failed\\n"" )"		3464192	0					
ANR	3464238	Callee	dprintf		3464192	0					
ANR	3464239	Identifier	dprintf		3464192	0					
ANR	3464240	ArgumentList	D_NETWORK		3464192	1					
ANR	3464241	Argument	D_NETWORK		3464192	0					
ANR	3464242	Identifier	D_NETWORK		3464192	0					
ANR	3464243	Argument	"""Stream::get(int) from internal failed\\n"""		3464192	1					
ANR	3464244	PrimaryExpression	"""Stream::get(int) from internal failed\\n"""		3464192	0					
ANR	3464245	ReturnStatement	return FALSE ;	1417:16:27409:27421	3464192	1	True				
ANR	3464246	Identifier	FALSE		3464192	0					
ANR	3464247	BreakStatement	break ;	1419:3:27440:27445	3464192	2	True				
ANR	3464248	Label	case external :	1421:2:27450:27463	3464192	3	True				
ANR	3464249	Identifier	external		3464192	0					
ANR	3464250	CompoundStatement		13:17:288:288	3464192	4					
ANR	3464251	IfStatement	if ( INT_SIZE > sizeof ( int ) )		3464192	0					
ANR	3464252	Condition	INT_SIZE > sizeof ( int )	1422:7:27474:27495	3464192	0	True				
ANR	3464253	RelationalExpression	INT_SIZE > sizeof ( int )		3464192	0		>			
ANR	3464254	Identifier	INT_SIZE		3464192	0					
ANR	3464255	SizeofExpression	sizeof ( int )		3464192	1					
ANR	3464256	Sizeof	sizeof		3464192	0					
ANR	3464257	SizeofOperand	int		3464192	1					
ANR	3464258	CompoundStatement		14:31:321:321	3464192	1					
ANR	3464259	IfStatement	"if ( get_bytes ( pad , INT_SIZE - sizeof ( int ) ) != INT_SIZE - sizeof ( int ) )"		3464192	0					
ANR	3464260	Condition	"get_bytes ( pad , INT_SIZE - sizeof ( int ) ) != INT_SIZE - sizeof ( int )"	1423:8:27530:27594	3464192	0	True				
ANR	3464261	EqualityExpression	"get_bytes ( pad , INT_SIZE - sizeof ( int ) ) != INT_SIZE - sizeof ( int )"		3464192	0		!=			
ANR	3464262	CallExpression	"get_bytes ( pad , INT_SIZE - sizeof ( int ) )"		3464192	0					
ANR	3464263	Callee	get_bytes		3464192	0					
ANR	3464264	Identifier	get_bytes		3464192	0					
ANR	3464265	ArgumentList	pad		3464192	1					
ANR	3464266	Argument	pad		3464192	0					
ANR	3464267	Identifier	pad		3464192	0					
ANR	3464268	Argument	INT_SIZE - sizeof ( int )		3464192	1					
ANR	3464269	AdditiveExpression	INT_SIZE - sizeof ( int )		3464192	0		-			
ANR	3464270	Identifier	INT_SIZE		3464192	0					
ANR	3464271	SizeofExpression	sizeof ( int )		3464192	1					
ANR	3464272	Sizeof	sizeof		3464192	0					
ANR	3464273	SizeofOperand	int		3464192	1					
ANR	3464274	AdditiveExpression	INT_SIZE - sizeof ( int )		3464192	1		-			
ANR	3464275	Identifier	INT_SIZE		3464192	0					
ANR	3464276	SizeofExpression	sizeof ( int )		3464192	1					
ANR	3464277	Sizeof	sizeof		3464192	0					
ANR	3464278	SizeofOperand	int		3464192	1					
ANR	3464279	CompoundStatement		16:30:420:420	3464192	1					
ANR	3464280	ExpressionStatement	"dprintf ( D_NETWORK , ""Stream::get(int) failed to read padding\\n"" )"	1425:20:27619:27682	3464192	0	True				
ANR	3464281	CallExpression	"dprintf ( D_NETWORK , ""Stream::get(int) failed to read padding\\n"" )"		3464192	0					
ANR	3464282	Callee	dprintf		3464192	0					
ANR	3464283	Identifier	dprintf		3464192	0					
ANR	3464284	ArgumentList	D_NETWORK		3464192	1					
ANR	3464285	Argument	D_NETWORK		3464192	0					
ANR	3464286	Identifier	D_NETWORK		3464192	0					
ANR	3464287	Argument	"""Stream::get(int) failed to read padding\\n"""		3464192	1					
ANR	3464288	PrimaryExpression	"""Stream::get(int) failed to read padding\\n"""		3464192	0					
ANR	3464289	ReturnStatement	return FALSE ;	1426:5:27689:27701	3464192	1	True				
ANR	3464290	Identifier	FALSE		3464192	0					
ANR	3464291	IfStatement	"if ( get_bytes ( & tmp , sizeof ( int ) ) != sizeof ( int ) )"		3464192	1					
ANR	3464292	Condition	"get_bytes ( & tmp , sizeof ( int ) ) != sizeof ( int )"	1429:7:27721:27763	3464192	0	True				
ANR	3464293	EqualityExpression	"get_bytes ( & tmp , sizeof ( int ) ) != sizeof ( int )"		3464192	0		!=			
ANR	3464294	CallExpression	"get_bytes ( & tmp , sizeof ( int ) )"		3464192	0					
ANR	3464295	Callee	get_bytes		3464192	0					
ANR	3464296	Identifier	get_bytes		3464192	0					
ANR	3464297	ArgumentList	& tmp		3464192	1					
ANR	3464298	Argument	& tmp		3464192	0					
ANR	3464299	UnaryOperationExpression	& tmp		3464192	0					
ANR	3464300	UnaryOperator	&		3464192	0					
ANR	3464301	Identifier	tmp		3464192	1					
ANR	3464302	Argument	sizeof ( int )		3464192	1					
ANR	3464303	SizeofExpression	sizeof ( int )		3464192	0					
ANR	3464304	Sizeof	sizeof		3464192	0					
ANR	3464305	SizeofOperand	int		3464192	1					
ANR	3464306	SizeofExpression	sizeof ( int )		3464192	1					
ANR	3464307	Sizeof	sizeof		3464192	0					
ANR	3464308	SizeofOperand	int		3464192	1					
ANR	3464309	CompoundStatement		21:52:589:589	3464192	1					
ANR	3464310	ExpressionStatement	"dprintf ( D_NETWORK , ""Stream::get(int) failed to read int\\n"" )"	1430:16:27784:27843	3464192	0	True				
ANR	3464311	CallExpression	"dprintf ( D_NETWORK , ""Stream::get(int) failed to read int\\n"" )"		3464192	0					
ANR	3464312	Callee	dprintf		3464192	0					
ANR	3464313	Identifier	dprintf		3464192	0					
ANR	3464314	ArgumentList	D_NETWORK		3464192	1					
ANR	3464315	Argument	D_NETWORK		3464192	0					
ANR	3464316	Identifier	D_NETWORK		3464192	0					
ANR	3464317	Argument	"""Stream::get(int) failed to read int\\n"""		3464192	1					
ANR	3464318	PrimaryExpression	"""Stream::get(int) failed to read int\\n"""		3464192	0					
ANR	3464319	ReturnStatement	return FALSE ;	1431:16:27861:27873	3464192	1	True				
ANR	3464320	Identifier	FALSE		3464192	0					
ANR	3464321	ExpressionStatement	i = ntohl ( tmp )	1433:3:27892:27906	3464192	2	True				
ANR	3464322	AssignmentExpression	i = ntohl ( tmp )		3464192	0		=			
ANR	3464323	Identifier	i		3464192	0					
ANR	3464324	CallExpression	ntohl ( tmp )		3464192	1					
ANR	3464325	Callee	ntohl		3464192	0					
ANR	3464326	Identifier	ntohl		3464192	0					
ANR	3464327	ArgumentList	tmp		3464192	1					
ANR	3464328	Argument	tmp		3464192	0					
ANR	3464329	Identifier	tmp		3464192	0					
ANR	3464330	ExpressionStatement	sign = ( i >= 0 ) ? 0 : 0xff	1434:3:27911:27937	3464192	3	True				
ANR	3464331	AssignmentExpression	sign = ( i >= 0 ) ? 0 : 0xff		3464192	0		=			
ANR	3464332	Identifier	sign		3464192	0					
ANR	3464333	ConditionalExpression	( i >= 0 ) ? 0 : 0xff		3464192	1					
ANR	3464334	Condition	i >= 0		3464192	0					
ANR	3464335	RelationalExpression	i >= 0		3464192	0		>=			
ANR	3464336	Identifier	i		3464192	0					
ANR	3464337	PrimaryExpression	0		3464192	1					
ANR	3464338	PrimaryExpression	0		3464192	1					
ANR	3464339	PrimaryExpression	0xff		3464192	2					
ANR	3464340	ForStatement	for ( int s = 0 ; s < INT_SIZE - ( int ) sizeof ( int ) ; s ++ )		3464192	4					
ANR	3464341	ForInit	int s = 0 ;	1435:8:27947:27954	3464192	0	True				
ANR	3464342	IdentifierDeclStatement	int s = 0 ;		3464192	0					
ANR	3464343	IdentifierDecl	s = 0		3464192	0					
ANR	3464344	IdentifierDeclType	int		3464192	0					
ANR	3464345	Identifier	s		3464192	1					
ANR	3464346	AssignmentExpression	s = 0		3464192	2		=			
ANR	3464347	Identifier	s		3464192	0					
ANR	3464348	PrimaryExpression	0		3464192	1					
ANR	3464349	Condition	s < INT_SIZE - ( int ) sizeof ( int )	1435:17:27956:27984	3464192	1	True				
ANR	3464350	RelationalExpression	s < INT_SIZE - ( int ) sizeof ( int )		3464192	0		<			
ANR	3464351	Identifier	s		3464192	0					
ANR	3464352	AdditiveExpression	INT_SIZE - ( int ) sizeof ( int )		3464192	1		-			
ANR	3464353	Identifier	INT_SIZE		3464192	0					
ANR	3464354	CastExpression	( int ) sizeof ( int )		3464192	1					
ANR	3464355	CastTarget	int		3464192	0					
ANR	3464356	SizeofExpression	sizeof ( int )		3464192	1					
ANR	3464357	Sizeof	sizeof		3464192	0					
ANR	3464358	SizeofOperand	int		3464192	1					
ANR	3464359	PostIncDecOperationExpression	s ++	1435:48:27987:27989	3464192	2	True				
ANR	3464360	Identifier	s		3464192	0					
ANR	3464361	IncDec	++		3464192	1					
ANR	3464362	CompoundStatement		27:53:815:815	3464192	3					
ANR	3464363	IfStatement	if ( pad [ s ] != sign )		3464192	0					
ANR	3464364	Condition	pad [ s ] != sign	1436:8:28020:28033	3464192	0	True				
ANR	3464365	EqualityExpression	pad [ s ] != sign		3464192	0		!=			
ANR	3464366	ArrayIndexing	pad [ s ]		3464192	0					
ANR	3464367	Identifier	pad		3464192	0					
ANR	3464368	Identifier	s		3464192	1					
ANR	3464369	Identifier	sign		3464192	1					
ANR	3464370	CompoundStatement		28:24:859:859	3464192	1					
ANR	3464371	ExpressionStatement	"dprintf ( D_NETWORK , ""Stream::get(int) incorrect pad received: %x\\n"" , pad [ s ] )"	1437:20:28058:28189	3464192	0	True				
ANR	3464372	CallExpression	"dprintf ( D_NETWORK , ""Stream::get(int) incorrect pad received: %x\\n"" , pad [ s ] )"		3464192	0					
ANR	3464373	Callee	dprintf		3464192	0					
ANR	3464374	Identifier	dprintf		3464192	0					
ANR	3464375	ArgumentList	D_NETWORK		3464192	1					
ANR	3464376	Argument	D_NETWORK		3464192	0					
ANR	3464377	Identifier	D_NETWORK		3464192	0					
ANR	3464378	Argument	"""Stream::get(int) incorrect pad received: %x\\n"""		3464192	1					
ANR	3464379	PrimaryExpression	"""Stream::get(int) incorrect pad received: %x\\n"""		3464192	0					
ANR	3464380	Argument	pad [ s ]		3464192	2					
ANR	3464381	ArrayIndexing	pad [ s ]		3464192	0					
ANR	3464382	Identifier	pad		3464192	0					
ANR	3464383	Identifier	s		3464192	1					
ANR	3464384	ReturnStatement	return FALSE ;	1440:5:28196:28208	3464192	1	True				
ANR	3464385	Identifier	FALSE		3464192	0					
ANR	3464386	BreakStatement	break ;	1443:3:28236:28241	3464192	5	True				
ANR	3464387	Label	case ascii :	1446:2:28250:28260	3464192	5	True				
ANR	3464388	Identifier	ascii		3464192	0					
ANR	3464389	ReturnStatement	return FALSE ;	1447:3:28265:28277	3464192	6	True				
ANR	3464390	Identifier	FALSE		3464192	0					
ANR	3464391	ExpressionStatement	putcount = 0	1449:3:28285:28296	3464192	3	True				
ANR	3464392	AssignmentExpression	putcount = 0		3464192	0		=			
ANR	3464393	Identifier	putcount		3464192	0					
ANR	3464394	PrimaryExpression	0		3464192	1					
ANR	3464395	ExpressionStatement	getcount += 4	1450:3:28301:28314	3464192	4	True				
ANR	3464396	AssignmentExpression	getcount += 4		3464192	0		+=			
ANR	3464397	Identifier	getcount		3464192	0					
ANR	3464398	PrimaryExpression	4		3464192	1					
ANR	3464399	ExpressionStatement	"NETWORK_TRACE ( ""get int "" << i << "" c("" << getcount << "") "" )"	1451:3:28319:28377	3464192	5	True				
ANR	3464400	CallExpression	"NETWORK_TRACE ( ""get int "" << i << "" c("" << getcount << "") "" )"		3464192	0					
ANR	3464401	Callee	NETWORK_TRACE		3464192	0					
ANR	3464402	Identifier	NETWORK_TRACE		3464192	0					
ANR	3464403	ArgumentList	"""get int "" << i << "" c("" << getcount << "") """		3464192	1					
ANR	3464404	Argument	"""get int "" << i << "" c("" << getcount << "") """		3464192	0					
ANR	3464405	ShiftExpression	"""get int "" << i << "" c("" << getcount << "") """		3464192	0		<<			
ANR	3464406	PrimaryExpression	"""get int """		3464192	0					
ANR	3464407	ShiftExpression	"i << "" c("" << getcount << "") """		3464192	1		<<			
ANR	3464408	Identifier	i		3464192	0					
ANR	3464409	ShiftExpression	""" c("" << getcount << "") """		3464192	1		<<			
ANR	3464410	PrimaryExpression	""" c("""		3464192	0					
ANR	3464411	ShiftExpression	"getcount << "") """		3464192	1		<<			
ANR	3464412	Identifier	getcount		3464192	0					
ANR	3464413	PrimaryExpression	""") """		3464192	1					
ANR	3464414	ReturnStatement	return TRUE ;	1452:1:28380:28391	3464192	6	True				
ANR	3464415	Identifier	TRUE		3464192	0					
ANR	3464416	ReturnType	int		3464192	1					
ANR	3464417	Identifier	Stream :: get		3464192	2					
ANR	3464418	ParameterList	int & i		3464192	3					
ANR	3464419	Parameter	int & i	1408:13:27167:27173	3464192	0	True				
ANR	3464420	ParameterType	int &		3464192	0					
ANR	3464421	Identifier	i		3464192	1					
ANR	3464422	CFGEntryNode	ENTRY		3464192		True				
ANR	3464423	CFGExitNode	EXIT		3464192		True				
ANR	3464424	Symbol	_code		3464192						
ANR	3464425	Symbol	INT_SIZE		3464192						
ANR	3464426	Symbol	sign		3464192						
ANR	3464427	Symbol	i		3464192						
ANR	3464428	Symbol	ntohl		3464192						
ANR	3464429	Symbol	TRUE		3464192						
ANR	3464430	Symbol	get_bytes		3464192						
ANR	3464431	Symbol	& i		3464192						
ANR	3464432	Symbol	pad		3464192						
ANR	3464433	Symbol	s		3464192						
ANR	3464434	Symbol	tmp		3464192						
ANR	3464435	Symbol	putcount		3464192						
ANR	3464436	Symbol	D_NETWORK		3464192						
ANR	3464437	Symbol	FALSE		3464192						
ANR	3464438	Symbol	& tmp		3464192						
ANR	3464439	Symbol	* s		3464192						
ANR	3464440	Symbol	* pad		3464192						
ANR	3464441	Symbol	getcount		3464192						
ANR	3464442	Function	Stream :: get	1457:0:28398:29624							
ANR	3464443	FunctionDef	Stream :: get (unsigned int & i)		3464442	0					
ANR	3464444	CompoundStatement		1459:0:28433:29624	3464442	0					
ANR	3464445	IdentifierDeclStatement	unsigned int tmp ;	1460:1:28436:28452	3464442	0	True				
ANR	3464446	IdentifierDecl	tmp		3464442	0					
ANR	3464447	IdentifierDeclType	unsigned int		3464442	0					
ANR	3464448	Identifier	tmp		3464442	1					
ANR	3464449	IdentifierDeclStatement	char pad [ INT_SIZE - sizeof ( int ) ] ;	1461:1:28455:28487	3464442	1	True				
ANR	3464450	IdentifierDecl	pad [ INT_SIZE - sizeof ( int ) ]		3464442	0					
ANR	3464451	IdentifierDeclType	char [ INT_SIZE - sizeof ( int ) ]		3464442	0					
ANR	3464452	Identifier	pad		3464442	1					
ANR	3464453	AdditiveExpression	INT_SIZE - sizeof ( int )		3464442	2		-			
ANR	3464454	Identifier	INT_SIZE		3464442	0					
ANR	3464455	SizeofExpression	sizeof ( int )		3464442	1					
ANR	3464456	Sizeof	sizeof		3464442	0					
ANR	3464457	SizeofOperand	int		3464442	1					
ANR	3464458	SwitchStatement	switch ( _code )		3464442	2					
ANR	3464459	Condition	_code	1463:8:28498:28502	3464442	0	True				
ANR	3464460	Identifier	_code		3464442	0					
ANR	3464461	CompoundStatement		5:14:70:70	3464442	1					
ANR	3464462	Label	case internal :	1464:2:28508:28521	3464442	0	True				
ANR	3464463	Identifier	internal		3464442	0					
ANR	3464464	IfStatement	"if ( get_bytes ( & i , sizeof ( int ) ) != sizeof ( int ) )"		3464442	1					
ANR	3464465	Condition	"get_bytes ( & i , sizeof ( int ) ) != sizeof ( int )"	1465:7:28530:28570	3464442	0	True				
ANR	3464466	EqualityExpression	"get_bytes ( & i , sizeof ( int ) ) != sizeof ( int )"		3464442	0		!=			
ANR	3464467	CallExpression	"get_bytes ( & i , sizeof ( int ) )"		3464442	0					
ANR	3464468	Callee	get_bytes		3464442	0					
ANR	3464469	Identifier	get_bytes		3464442	0					
ANR	3464470	ArgumentList	& i		3464442	1					
ANR	3464471	Argument	& i		3464442	0					
ANR	3464472	UnaryOperationExpression	& i		3464442	0					
ANR	3464473	UnaryOperator	&		3464442	0					
ANR	3464474	Identifier	i		3464442	1					
ANR	3464475	Argument	sizeof ( int )		3464442	1					
ANR	3464476	SizeofExpression	sizeof ( int )		3464442	0					
ANR	3464477	Sizeof	sizeof		3464442	0					
ANR	3464478	SizeofOperand	int		3464442	1					
ANR	3464479	SizeofExpression	sizeof ( int )		3464442	1					
ANR	3464480	Sizeof	sizeof		3464442	0					
ANR	3464481	SizeofOperand	int		3464442	1					
ANR	3464482	CompoundStatement		7:50:139:139	3464442	1					
ANR	3464483	ExpressionStatement	"dprintf ( D_NETWORK , ""Stream::get(uint) from internal failed\\n"" )"	1466:16:28591:28653	3464442	0	True				
ANR	3464484	CallExpression	"dprintf ( D_NETWORK , ""Stream::get(uint) from internal failed\\n"" )"		3464442	0					
ANR	3464485	Callee	dprintf		3464442	0					
ANR	3464486	Identifier	dprintf		3464442	0					
ANR	3464487	ArgumentList	D_NETWORK		3464442	1					
ANR	3464488	Argument	D_NETWORK		3464442	0					
ANR	3464489	Identifier	D_NETWORK		3464442	0					
ANR	3464490	Argument	"""Stream::get(uint) from internal failed\\n"""		3464442	1					
ANR	3464491	PrimaryExpression	"""Stream::get(uint) from internal failed\\n"""		3464442	0					
ANR	3464492	ReturnStatement	return FALSE ;	1467:16:28671:28683	3464442	1	True				
ANR	3464493	Identifier	FALSE		3464442	0					
ANR	3464494	BreakStatement	break ;	1469:3:28702:28707	3464442	2	True				
ANR	3464495	Label	case external :	1471:2:28712:28725	3464442	3	True				
ANR	3464496	Identifier	external		3464442	0					
ANR	3464497	CompoundStatement		13:17:293:293	3464442	4					
ANR	3464498	IfStatement	if ( INT_SIZE > sizeof ( int ) )		3464442	0					
ANR	3464499	Condition	INT_SIZE > sizeof ( int )	1472:7:28736:28757	3464442	0	True				
ANR	3464500	RelationalExpression	INT_SIZE > sizeof ( int )		3464442	0		>			
ANR	3464501	Identifier	INT_SIZE		3464442	0					
ANR	3464502	SizeofExpression	sizeof ( int )		3464442	1					
ANR	3464503	Sizeof	sizeof		3464442	0					
ANR	3464504	SizeofOperand	int		3464442	1					
ANR	3464505	CompoundStatement		14:31:326:326	3464442	1					
ANR	3464506	IfStatement	"if ( get_bytes ( pad , INT_SIZE - sizeof ( int ) ) != INT_SIZE - sizeof ( int ) )"		3464442	0					
ANR	3464507	Condition	"get_bytes ( pad , INT_SIZE - sizeof ( int ) ) != INT_SIZE - sizeof ( int )"	1473:8:28792:28856	3464442	0	True				
ANR	3464508	EqualityExpression	"get_bytes ( pad , INT_SIZE - sizeof ( int ) ) != INT_SIZE - sizeof ( int )"		3464442	0		!=			
ANR	3464509	CallExpression	"get_bytes ( pad , INT_SIZE - sizeof ( int ) )"		3464442	0					
ANR	3464510	Callee	get_bytes		3464442	0					
ANR	3464511	Identifier	get_bytes		3464442	0					
ANR	3464512	ArgumentList	pad		3464442	1					
ANR	3464513	Argument	pad		3464442	0					
ANR	3464514	Identifier	pad		3464442	0					
ANR	3464515	Argument	INT_SIZE - sizeof ( int )		3464442	1					
ANR	3464516	AdditiveExpression	INT_SIZE - sizeof ( int )		3464442	0		-			
ANR	3464517	Identifier	INT_SIZE		3464442	0					
ANR	3464518	SizeofExpression	sizeof ( int )		3464442	1					
ANR	3464519	Sizeof	sizeof		3464442	0					
ANR	3464520	SizeofOperand	int		3464442	1					
ANR	3464521	AdditiveExpression	INT_SIZE - sizeof ( int )		3464442	1		-			
ANR	3464522	Identifier	INT_SIZE		3464442	0					
ANR	3464523	SizeofExpression	sizeof ( int )		3464442	1					
ANR	3464524	Sizeof	sizeof		3464442	0					
ANR	3464525	SizeofOperand	int		3464442	1					
ANR	3464526	CompoundStatement		16:30:425:425	3464442	1					
ANR	3464527	ExpressionStatement	"dprintf ( D_NETWORK , ""Stream::get(uint) failed to read padding\\n"" )"	1475:20:28881:28945	3464442	0	True				
ANR	3464528	CallExpression	"dprintf ( D_NETWORK , ""Stream::get(uint) failed to read padding\\n"" )"		3464442	0					
ANR	3464529	Callee	dprintf		3464442	0					
ANR	3464530	Identifier	dprintf		3464442	0					
ANR	3464531	ArgumentList	D_NETWORK		3464442	1					
ANR	3464532	Argument	D_NETWORK		3464442	0					
ANR	3464533	Identifier	D_NETWORK		3464442	0					
ANR	3464534	Argument	"""Stream::get(uint) failed to read padding\\n"""		3464442	1					
ANR	3464535	PrimaryExpression	"""Stream::get(uint) failed to read padding\\n"""		3464442	0					
ANR	3464536	ReturnStatement	return FALSE ;	1476:5:28952:28964	3464442	1	True				
ANR	3464537	Identifier	FALSE		3464442	0					
ANR	3464538	IfStatement	"if ( get_bytes ( & tmp , sizeof ( int ) ) != sizeof ( int ) )"		3464442	1					
ANR	3464539	Condition	"get_bytes ( & tmp , sizeof ( int ) ) != sizeof ( int )"	1479:7:28984:29026	3464442	0	True				
ANR	3464540	EqualityExpression	"get_bytes ( & tmp , sizeof ( int ) ) != sizeof ( int )"		3464442	0		!=			
ANR	3464541	CallExpression	"get_bytes ( & tmp , sizeof ( int ) )"		3464442	0					
ANR	3464542	Callee	get_bytes		3464442	0					
ANR	3464543	Identifier	get_bytes		3464442	0					
ANR	3464544	ArgumentList	& tmp		3464442	1					
ANR	3464545	Argument	& tmp		3464442	0					
ANR	3464546	UnaryOperationExpression	& tmp		3464442	0					
ANR	3464547	UnaryOperator	&		3464442	0					
ANR	3464548	Identifier	tmp		3464442	1					
ANR	3464549	Argument	sizeof ( int )		3464442	1					
ANR	3464550	SizeofExpression	sizeof ( int )		3464442	0					
ANR	3464551	Sizeof	sizeof		3464442	0					
ANR	3464552	SizeofOperand	int		3464442	1					
ANR	3464553	SizeofExpression	sizeof ( int )		3464442	1					
ANR	3464554	Sizeof	sizeof		3464442	0					
ANR	3464555	SizeofOperand	int		3464442	1					
ANR	3464556	CompoundStatement		21:52:595:595	3464442	1					
ANR	3464557	ExpressionStatement	"dprintf ( D_NETWORK , ""Stream::get(uint) failed to read int\\n"" )"	1480:16:29047:29107	3464442	0	True				
ANR	3464558	CallExpression	"dprintf ( D_NETWORK , ""Stream::get(uint) failed to read int\\n"" )"		3464442	0					
ANR	3464559	Callee	dprintf		3464442	0					
ANR	3464560	Identifier	dprintf		3464442	0					
ANR	3464561	ArgumentList	D_NETWORK		3464442	1					
ANR	3464562	Argument	D_NETWORK		3464442	0					
ANR	3464563	Identifier	D_NETWORK		3464442	0					
ANR	3464564	Argument	"""Stream::get(uint) failed to read int\\n"""		3464442	1					
ANR	3464565	PrimaryExpression	"""Stream::get(uint) failed to read int\\n"""		3464442	0					
ANR	3464566	ReturnStatement	return FALSE ;	1481:16:29125:29137	3464442	1	True				
ANR	3464567	Identifier	FALSE		3464442	0					
ANR	3464568	ExpressionStatement	i = ntohl ( tmp )	1483:3:29156:29170	3464442	2	True				
ANR	3464569	AssignmentExpression	i = ntohl ( tmp )		3464442	0		=			
ANR	3464570	Identifier	i		3464442	0					
ANR	3464571	CallExpression	ntohl ( tmp )		3464442	1					
ANR	3464572	Callee	ntohl		3464442	0					
ANR	3464573	Identifier	ntohl		3464442	0					
ANR	3464574	ArgumentList	tmp		3464442	1					
ANR	3464575	Argument	tmp		3464442	0					
ANR	3464576	Identifier	tmp		3464442	0					
ANR	3464577	ForStatement	for ( int s = 0 ; s < INT_SIZE - ( int ) sizeof ( int ) ; s ++ )		3464442	3					
ANR	3464578	ForInit	int s = 0 ;	1484:8:29180:29187	3464442	0	True				
ANR	3464579	IdentifierDeclStatement	int s = 0 ;		3464442	0					
ANR	3464580	IdentifierDecl	s = 0		3464442	0					
ANR	3464581	IdentifierDeclType	int		3464442	0					
ANR	3464582	Identifier	s		3464442	1					
ANR	3464583	AssignmentExpression	s = 0		3464442	2		=			
ANR	3464584	Identifier	s		3464442	0					
ANR	3464585	PrimaryExpression	0		3464442	1					
ANR	3464586	Condition	s < INT_SIZE - ( int ) sizeof ( int )	1484:17:29189:29217	3464442	1	True				
ANR	3464587	RelationalExpression	s < INT_SIZE - ( int ) sizeof ( int )		3464442	0		<			
ANR	3464588	Identifier	s		3464442	0					
ANR	3464589	AdditiveExpression	INT_SIZE - ( int ) sizeof ( int )		3464442	1		-			
ANR	3464590	Identifier	INT_SIZE		3464442	0					
ANR	3464591	CastExpression	( int ) sizeof ( int )		3464442	1					
ANR	3464592	CastTarget	int		3464442	0					
ANR	3464593	SizeofExpression	sizeof ( int )		3464442	1					
ANR	3464594	Sizeof	sizeof		3464442	0					
ANR	3464595	SizeofOperand	int		3464442	1					
ANR	3464596	PostIncDecOperationExpression	s ++	1484:48:29220:29222	3464442	2	True				
ANR	3464597	Identifier	s		3464442	0					
ANR	3464598	IncDec	++		3464442	1					
ANR	3464599	CompoundStatement		26:53:791:791	3464442	3					
ANR	3464600	IfStatement	if ( pad [ s ] != 0 )		3464442	0					
ANR	3464601	Condition	pad [ s ] != 0	1485:8:29253:29263	3464442	0	True				
ANR	3464602	EqualityExpression	pad [ s ] != 0		3464442	0		!=			
ANR	3464603	ArrayIndexing	pad [ s ]		3464442	0					
ANR	3464604	Identifier	pad		3464442	0					
ANR	3464605	Identifier	s		3464442	1					
ANR	3464606	PrimaryExpression	0		3464442	1					
ANR	3464607	CompoundStatement		27:21:832:832	3464442	1					
ANR	3464608	ExpressionStatement	"dprintf ( D_NETWORK , ""Stream::get(uint) incorrect pad received: %x\\n"" , pad [ s ] )"	1486:20:29288:29420	3464442	0	True				
ANR	3464609	CallExpression	"dprintf ( D_NETWORK , ""Stream::get(uint) incorrect pad received: %x\\n"" , pad [ s ] )"		3464442	0					
ANR	3464610	Callee	dprintf		3464442	0					
ANR	3464611	Identifier	dprintf		3464442	0					
ANR	3464612	ArgumentList	D_NETWORK		3464442	1					
ANR	3464613	Argument	D_NETWORK		3464442	0					
ANR	3464614	Identifier	D_NETWORK		3464442	0					
ANR	3464615	Argument	"""Stream::get(uint) incorrect pad received: %x\\n"""		3464442	1					
ANR	3464616	PrimaryExpression	"""Stream::get(uint) incorrect pad received: %x\\n"""		3464442	0					
ANR	3464617	Argument	pad [ s ]		3464442	2					
ANR	3464618	ArrayIndexing	pad [ s ]		3464442	0					
ANR	3464619	Identifier	pad		3464442	0					
ANR	3464620	Identifier	s		3464442	1					
ANR	3464621	ReturnStatement	return FALSE ;	1489:5:29427:29439	3464442	1	True				
ANR	3464622	Identifier	FALSE		3464442	0					
ANR	3464623	BreakStatement	break ;	1492:3:29467:29472	3464442	4	True				
ANR	3464624	Label	case ascii :	1495:2:29481:29491	3464442	5	True				
ANR	3464625	Identifier	ascii		3464442	0					
ANR	3464626	ReturnStatement	return FALSE ;	1496:3:29496:29508	3464442	6	True				
ANR	3464627	Identifier	FALSE		3464442	0					
ANR	3464628	ExpressionStatement	putcount = 0	1498:3:29516:29527	3464442	3	True				
ANR	3464629	AssignmentExpression	putcount = 0		3464442	0		=			
ANR	3464630	Identifier	putcount		3464442	0					
ANR	3464631	PrimaryExpression	0		3464442	1					
ANR	3464632	ExpressionStatement	getcount += 4	1499:3:29532:29545	3464442	4	True				
ANR	3464633	AssignmentExpression	getcount += 4		3464442	0		+=			
ANR	3464634	Identifier	getcount		3464442	0					
ANR	3464635	PrimaryExpression	4		3464442	1					
ANR	3464636	ExpressionStatement	"NETWORK_TRACE ( ""get int "" << i << "" c("" << getcount << "") "" )"	1500:3:29550:29608	3464442	5	True				
ANR	3464637	CallExpression	"NETWORK_TRACE ( ""get int "" << i << "" c("" << getcount << "") "" )"		3464442	0					
ANR	3464638	Callee	NETWORK_TRACE		3464442	0					
ANR	3464639	Identifier	NETWORK_TRACE		3464442	0					
ANR	3464640	ArgumentList	"""get int "" << i << "" c("" << getcount << "") """		3464442	1					
ANR	3464641	Argument	"""get int "" << i << "" c("" << getcount << "") """		3464442	0					
ANR	3464642	ShiftExpression	"""get int "" << i << "" c("" << getcount << "") """		3464442	0		<<			
ANR	3464643	PrimaryExpression	"""get int """		3464442	0					
ANR	3464644	ShiftExpression	"i << "" c("" << getcount << "") """		3464442	1		<<			
ANR	3464645	Identifier	i		3464442	0					
ANR	3464646	ShiftExpression	""" c("" << getcount << "") """		3464442	1		<<			
ANR	3464647	PrimaryExpression	""" c("""		3464442	0					
ANR	3464648	ShiftExpression	"getcount << "") """		3464442	1		<<			
ANR	3464649	Identifier	getcount		3464442	0					
ANR	3464650	PrimaryExpression	""") """		3464442	1					
ANR	3464651	ReturnStatement	return TRUE ;	1501:1:29611:29622	3464442	6	True				
ANR	3464652	Identifier	TRUE		3464442	0					
ANR	3464653	ReturnType	int		3464442	1					
ANR	3464654	Identifier	Stream :: get		3464442	2					
ANR	3464655	ParameterList	unsigned int & i		3464442	3					
ANR	3464656	Parameter	unsigned int & i	1458:13:28416:28430	3464442	0	True				
ANR	3464657	ParameterType	unsigned int &		3464442	0					
ANR	3464658	Identifier	i		3464442	1					
ANR	3464659	CFGEntryNode	ENTRY		3464442		True				
ANR	3464660	CFGExitNode	EXIT		3464442		True				
ANR	3464661	Symbol	_code		3464442						
ANR	3464662	Symbol	INT_SIZE		3464442						
ANR	3464663	Symbol	i		3464442						
ANR	3464664	Symbol	ntohl		3464442						
ANR	3464665	Symbol	TRUE		3464442						
ANR	3464666	Symbol	get_bytes		3464442						
ANR	3464667	Symbol	& i		3464442						
ANR	3464668	Symbol	pad		3464442						
ANR	3464669	Symbol	s		3464442						
ANR	3464670	Symbol	tmp		3464442						
ANR	3464671	Symbol	putcount		3464442						
ANR	3464672	Symbol	D_NETWORK		3464442						
ANR	3464673	Symbol	FALSE		3464442						
ANR	3464674	Symbol	& tmp		3464442						
ANR	3464675	Symbol	* pad		3464442						
ANR	3464676	Symbol	* s		3464442						
ANR	3464677	Symbol	getcount		3464442						
ANR	3464678	Function	Stream :: get	1506:0:29629:30541							
ANR	3464679	FunctionDef	Stream :: get (long & l)		3464678	0					
ANR	3464680	CompoundStatement		1508:0:29656:30541	3464678	0					
ANR	3464681	IdentifierDeclStatement	int i ;	1509:1:29659:29665	3464678	0	True				
ANR	3464682	IdentifierDecl	i		3464678	0					
ANR	3464683	IdentifierDeclType	int		3464678	0					
ANR	3464684	Identifier	i		3464678	1					
ANR	3464685	IdentifierDeclStatement	"char pad [ INT_SIZE - sizeof ( long ) ] , sign ;"	1510:1:29668:29705	3464678	1	True				
ANR	3464686	IdentifierDecl	pad [ INT_SIZE - sizeof ( long ) ]		3464678	0					
ANR	3464687	IdentifierDeclType	char [ INT_SIZE - sizeof ( long ) ]		3464678	0					
ANR	3464688	Identifier	pad		3464678	1					
ANR	3464689	AdditiveExpression	INT_SIZE - sizeof ( long )		3464678	2		-			
ANR	3464690	Identifier	INT_SIZE		3464678	0					
ANR	3464691	SizeofExpression	sizeof ( long )		3464678	1					
ANR	3464692	Sizeof	sizeof		3464678	0					
ANR	3464693	SizeofOperand	long		3464678	1					
ANR	3464694	IdentifierDecl	sign		3464678	1					
ANR	3464695	IdentifierDeclType	char		3464678	0					
ANR	3464696	Identifier	sign		3464678	1					
ANR	3464697	SwitchStatement	switch ( _code )		3464678	2					
ANR	3464698	Condition	_code	1512:8:29716:29720	3464678	0	True				
ANR	3464699	Identifier	_code		3464678	0					
ANR	3464700	CompoundStatement		5:14:65:65	3464678	1					
ANR	3464701	Label	case internal :	1513:2:29726:29739	3464678	0	True				
ANR	3464702	Identifier	internal		3464678	0					
ANR	3464703	IfStatement	"if ( get_bytes ( & l , sizeof ( long ) ) != sizeof ( long ) )"		3464678	1					
ANR	3464704	Condition	"get_bytes ( & l , sizeof ( long ) ) != sizeof ( long )"	1514:7:29748:29790	3464678	0	True				
ANR	3464705	EqualityExpression	"get_bytes ( & l , sizeof ( long ) ) != sizeof ( long )"		3464678	0		!=			
ANR	3464706	CallExpression	"get_bytes ( & l , sizeof ( long ) )"		3464678	0					
ANR	3464707	Callee	get_bytes		3464678	0					
ANR	3464708	Identifier	get_bytes		3464678	0					
ANR	3464709	ArgumentList	& l		3464678	1					
ANR	3464710	Argument	& l		3464678	0					
ANR	3464711	UnaryOperationExpression	& l		3464678	0					
ANR	3464712	UnaryOperator	&		3464678	0					
ANR	3464713	Identifier	l		3464678	1					
ANR	3464714	Argument	sizeof ( long )		3464678	1					
ANR	3464715	SizeofExpression	sizeof ( long )		3464678	0					
ANR	3464716	Sizeof	sizeof		3464678	0					
ANR	3464717	SizeofOperand	long		3464678	1					
ANR	3464718	SizeofExpression	sizeof ( long )		3464678	1					
ANR	3464719	Sizeof	sizeof		3464678	0					
ANR	3464720	SizeofOperand	long		3464678	1					
ANR	3464721	ReturnStatement	return FALSE ;	1514:52:29793:29805	3464678	1	True				
ANR	3464722	Identifier	FALSE		3464678	0					
ANR	3464723	BreakStatement	break ;	1515:3:29810:29815	3464678	2	True				
ANR	3464724	Label	case external :	1517:2:29820:29833	3464678	3	True				
ANR	3464725	Identifier	external		3464678	0					
ANR	3464726	IfStatement	if ( ( sizeof ( int ) == sizeof ( long ) ) || ( sizeof ( long ) > INT_SIZE ) )		3464678	4					
ANR	3464727	Condition	( sizeof ( int ) == sizeof ( long ) ) || ( sizeof ( long ) > INT_SIZE )	1518:7:29842:29899	3464678	0	True				
ANR	3464728	OrExpression	( sizeof ( int ) == sizeof ( long ) ) || ( sizeof ( long ) > INT_SIZE )		3464678	0		||			
ANR	3464729	EqualityExpression	sizeof ( int ) == sizeof ( long )		3464678	0		==			
ANR	3464730	SizeofExpression	sizeof ( int )		3464678	0					
ANR	3464731	Sizeof	sizeof		3464678	0					
ANR	3464732	SizeofOperand	int		3464678	1					
ANR	3464733	SizeofExpression	sizeof ( long )		3464678	1					
ANR	3464734	Sizeof	sizeof		3464678	0					
ANR	3464735	SizeofOperand	long		3464678	1					
ANR	3464736	RelationalExpression	sizeof ( long ) > INT_SIZE		3464678	1		>			
ANR	3464737	SizeofExpression	sizeof ( long )		3464678	0					
ANR	3464738	Sizeof	sizeof		3464678	0					
ANR	3464739	SizeofOperand	long		3464678	1					
ANR	3464740	Identifier	INT_SIZE		3464678	1					
ANR	3464741	CompoundStatement		11:67:245:245	3464678	1					
ANR	3464742	IfStatement	if ( ! get ( i ) )		3464678	0					
ANR	3464743	Condition	! get ( i )	1519:8:29912:29918	3464678	0	True				
ANR	3464744	UnaryOperationExpression	! get ( i )		3464678	0					
ANR	3464745	UnaryOperator	!		3464678	0					
ANR	3464746	CallExpression	get ( i )		3464678	1					
ANR	3464747	Callee	get		3464678	0					
ANR	3464748	Identifier	get		3464678	0					
ANR	3464749	ArgumentList	i		3464678	1					
ANR	3464750	Argument	i		3464678	0					
ANR	3464751	Identifier	i		3464678	0					
ANR	3464752	ReturnStatement	return FALSE ;	1519:17:29921:29933	3464678	1	True				
ANR	3464753	Identifier	FALSE		3464678	0					
ANR	3464754	ExpressionStatement	l = ( long ) i	1520:4:29939:29951	3464678	1	True				
ANR	3464755	AssignmentExpression	l = ( long ) i		3464678	0		=			
ANR	3464756	Identifier	l		3464678	0					
ANR	3464757	CastExpression	( long ) i		3464678	1					
ANR	3464758	CastTarget	long		3464678	0					
ANR	3464759	Identifier	i		3464678	1					
ANR	3464760	ElseStatement	else		3464678	0					
ANR	3464761	CompoundStatement		14:10:306:306	3464678	0					
ANR	3464762	IfStatement	if ( sizeof ( long ) < INT_SIZE )		3464678	0					
ANR	3464763	Condition	sizeof ( long ) < INT_SIZE	1522:8:29973:29995	3464678	0	True				
ANR	3464764	RelationalExpression	sizeof ( long ) < INT_SIZE		3464678	0		<			
ANR	3464765	SizeofExpression	sizeof ( long )		3464678	0					
ANR	3464766	Sizeof	sizeof		3464678	0					
ANR	3464767	SizeofOperand	long		3464678	1					
ANR	3464768	Identifier	INT_SIZE		3464678	1					
ANR	3464769	CompoundStatement		15:33:341:341	3464678	1					
ANR	3464770	IfStatement	"if ( get_bytes ( pad , INT_SIZE - sizeof ( long ) ) != INT_SIZE - sizeof ( long ) )"		3464678	0					
ANR	3464771	Condition	"get_bytes ( pad , INT_SIZE - sizeof ( long ) ) != INT_SIZE - sizeof ( long )"	1523:9:30009:30076	3464678	0	True				
ANR	3464772	EqualityExpression	"get_bytes ( pad , INT_SIZE - sizeof ( long ) ) != INT_SIZE - sizeof ( long )"		3464678	0		!=			
ANR	3464773	CallExpression	"get_bytes ( pad , INT_SIZE - sizeof ( long ) )"		3464678	0					
ANR	3464774	Callee	get_bytes		3464678	0					
ANR	3464775	Identifier	get_bytes		3464678	0					
ANR	3464776	ArgumentList	pad		3464678	1					
ANR	3464777	Argument	pad		3464678	0					
ANR	3464778	Identifier	pad		3464678	0					
ANR	3464779	Argument	INT_SIZE - sizeof ( long )		3464678	1					
ANR	3464780	AdditiveExpression	INT_SIZE - sizeof ( long )		3464678	0		-			
ANR	3464781	Identifier	INT_SIZE		3464678	0					
ANR	3464782	SizeofExpression	sizeof ( long )		3464678	1					
ANR	3464783	Sizeof	sizeof		3464678	0					
ANR	3464784	SizeofOperand	long		3464678	1					
ANR	3464785	AdditiveExpression	INT_SIZE - sizeof ( long )		3464678	1		-			
ANR	3464786	Identifier	INT_SIZE		3464678	0					
ANR	3464787	SizeofExpression	sizeof ( long )		3464678	1					
ANR	3464788	Sizeof	sizeof		3464678	0					
ANR	3464789	SizeofOperand	long		3464678	1					
ANR	3464790	CompoundStatement		17:32:422:422	3464678	1					
ANR	3464791	ReturnStatement	return FALSE ;	1525:6:30087:30099	3464678	0	True				
ANR	3464792	Identifier	FALSE		3464678	0					
ANR	3464793	IfStatement	"if ( get_bytes ( & l , sizeof ( long ) ) != sizeof ( long ) )"		3464678	1					
ANR	3464794	Condition	"get_bytes ( & l , sizeof ( long ) ) != sizeof ( long )"	1528:8:30122:30164	3464678	0	True				
ANR	3464795	EqualityExpression	"get_bytes ( & l , sizeof ( long ) ) != sizeof ( long )"		3464678	0		!=			
ANR	3464796	CallExpression	"get_bytes ( & l , sizeof ( long ) )"		3464678	0					
ANR	3464797	Callee	get_bytes		3464678	0					
ANR	3464798	Identifier	get_bytes		3464678	0					
ANR	3464799	ArgumentList	& l		3464678	1					
ANR	3464800	Argument	& l		3464678	0					
ANR	3464801	UnaryOperationExpression	& l		3464678	0					
ANR	3464802	UnaryOperator	&		3464678	0					
ANR	3464803	Identifier	l		3464678	1					
ANR	3464804	Argument	sizeof ( long )		3464678	1					
ANR	3464805	SizeofExpression	sizeof ( long )		3464678	0					
ANR	3464806	Sizeof	sizeof		3464678	0					
ANR	3464807	SizeofOperand	long		3464678	1					
ANR	3464808	SizeofExpression	sizeof ( long )		3464678	1					
ANR	3464809	Sizeof	sizeof		3464678	0					
ANR	3464810	SizeofOperand	long		3464678	1					
ANR	3464811	ReturnStatement	return FALSE ;	1528:53:30167:30179	3464678	1	True				
ANR	3464812	Identifier	FALSE		3464678	0					
ANR	3464813	IfStatement	if ( ! hton_is_noop ( ) )		3464678	2					
ANR	3464814	Condition	! hton_is_noop ( )	1529:8:30189:30203	3464678	0	True				
ANR	3464815	UnaryOperationExpression	! hton_is_noop ( )		3464678	0					
ANR	3464816	UnaryOperator	!		3464678	0					
ANR	3464817	CallExpression	hton_is_noop ( )		3464678	1					
ANR	3464818	Callee	hton_is_noop		3464678	0					
ANR	3464819	Identifier	hton_is_noop		3464678	0					
ANR	3464820	ArgumentList			3464678	1					
ANR	3464821	CompoundStatement		22:25:549:549	3464678	1					
ANR	3464822	ExpressionStatement	l = ntohL ( l )	1530:5:30246:30258	3464678	0	True				
ANR	3464823	AssignmentExpression	l = ntohL ( l )		3464678	0		=			
ANR	3464824	Identifier	l		3464678	0					
ANR	3464825	CallExpression	ntohL ( l )		3464678	1					
ANR	3464826	Callee	ntohL		3464678	0					
ANR	3464827	Identifier	ntohL		3464678	0					
ANR	3464828	ArgumentList	l		3464678	1					
ANR	3464829	Argument	l		3464678	0					
ANR	3464830	Identifier	l		3464678	0					
ANR	3464831	ExpressionStatement	sign = ( l >= 0 ) ? 0 : 0xff	1532:4:30270:30296	3464678	3	True				
ANR	3464832	AssignmentExpression	sign = ( l >= 0 ) ? 0 : 0xff		3464678	0		=			
ANR	3464833	Identifier	sign		3464678	0					
ANR	3464834	ConditionalExpression	( l >= 0 ) ? 0 : 0xff		3464678	1					
ANR	3464835	Condition	l >= 0		3464678	0					
ANR	3464836	RelationalExpression	l >= 0		3464678	0		>=			
ANR	3464837	Identifier	l		3464678	0					
ANR	3464838	PrimaryExpression	0		3464678	1					
ANR	3464839	PrimaryExpression	0		3464678	1					
ANR	3464840	PrimaryExpression	0xff		3464678	2					
ANR	3464841	ForStatement	for ( int s = 0 ; s < INT_SIZE - ( int ) sizeof ( long ) ; s ++ )		3464678	4					
ANR	3464842	ForInit	int s = 0 ;	1533:9:30307:30314	3464678	0	True				
ANR	3464843	IdentifierDeclStatement	int s = 0 ;		3464678	0					
ANR	3464844	IdentifierDecl	s = 0		3464678	0					
ANR	3464845	IdentifierDeclType	int		3464678	0					
ANR	3464846	Identifier	s		3464678	1					
ANR	3464847	AssignmentExpression	s = 0		3464678	2		=			
ANR	3464848	Identifier	s		3464678	0					
ANR	3464849	PrimaryExpression	0		3464678	1					
ANR	3464850	Condition	s < INT_SIZE - ( int ) sizeof ( long )	1533:18:30316:30345	3464678	1	True				
ANR	3464851	RelationalExpression	s < INT_SIZE - ( int ) sizeof ( long )		3464678	0		<			
ANR	3464852	Identifier	s		3464678	0					
ANR	3464853	AdditiveExpression	INT_SIZE - ( int ) sizeof ( long )		3464678	1		-			
ANR	3464854	Identifier	INT_SIZE		3464678	0					
ANR	3464855	CastExpression	( int ) sizeof ( long )		3464678	1					
ANR	3464856	CastTarget	int		3464678	0					
ANR	3464857	SizeofExpression	sizeof ( long )		3464678	1					
ANR	3464858	Sizeof	sizeof		3464678	0					
ANR	3464859	SizeofOperand	long		3464678	1					
ANR	3464860	PostIncDecOperationExpression	s ++	1533:50:30348:30350	3464678	2	True				
ANR	3464861	Identifier	s		3464678	0					
ANR	3464862	IncDec	++		3464678	1					
ANR	3464863	CompoundStatement		26:55:696:696	3464678	3					
ANR	3464864	IfStatement	if ( pad [ s ] != sign )		3464678	0					
ANR	3464865	Condition	pad [ s ] != sign	1534:9:30377:30390	3464678	0	True				
ANR	3464866	EqualityExpression	pad [ s ] != sign		3464678	0		!=			
ANR	3464867	ArrayIndexing	pad [ s ]		3464678	0					
ANR	3464868	Identifier	pad		3464678	0					
ANR	3464869	Identifier	s		3464678	1					
ANR	3464870	Identifier	sign		3464678	1					
ANR	3464871	CompoundStatement		27:25:736:736	3464678	1					
ANR	3464872	ReturnStatement	return FALSE ;	1535:6:30401:30413	3464678	0	True				
ANR	3464873	Identifier	FALSE		3464678	0					
ANR	3464874	BreakStatement	break ;	1539:3:30448:30453	3464678	5	True				
ANR	3464875	Label	case ascii :	1541:2:30458:30468	3464678	6	True				
ANR	3464876	Identifier	ascii		3464678	0					
ANR	3464877	ReturnStatement	return FALSE ;	1542:3:30473:30485	3464678	7	True				
ANR	3464878	Identifier	FALSE		3464678	0					
ANR	3464879	ExpressionStatement	"NETWORK_TRACE ( ""get long "" << l )"	1544:4:30494:30525	3464678	3	True				
ANR	3464880	CallExpression	"NETWORK_TRACE ( ""get long "" << l )"		3464678	0					
ANR	3464881	Callee	NETWORK_TRACE		3464678	0					
ANR	3464882	Identifier	NETWORK_TRACE		3464678	0					
ANR	3464883	ArgumentList	"""get long "" << l"		3464678	1					
ANR	3464884	Argument	"""get long "" << l"		3464678	0					
ANR	3464885	ShiftExpression	"""get long "" << l"		3464678	0		<<			
ANR	3464886	PrimaryExpression	"""get long """		3464678	0					
ANR	3464887	Identifier	l		3464678	1					
ANR	3464888	ReturnStatement	return TRUE ;	1545:1:30528:30539	3464678	4	True				
ANR	3464889	Identifier	TRUE		3464678	0					
ANR	3464890	ReturnType	int		3464678	1					
ANR	3464891	Identifier	Stream :: get		3464678	2					
ANR	3464892	ParameterList	long & l		3464678	3					
ANR	3464893	Parameter	long & l	1507:13:29647:29653	3464678	0	True				
ANR	3464894	ParameterType	long &		3464678	0					
ANR	3464895	Identifier	l		3464678	1					
ANR	3464896	CFGEntryNode	ENTRY		3464678		True				
ANR	3464897	CFGExitNode	EXIT		3464678		True				
ANR	3464898	Symbol	_code		3464678						
ANR	3464899	Symbol	INT_SIZE		3464678						
ANR	3464900	Symbol	sign		3464678						
ANR	3464901	Symbol	i		3464678						
ANR	3464902	Symbol	ntohL		3464678						
ANR	3464903	Symbol	TRUE		3464678						
ANR	3464904	Symbol	l		3464678						
ANR	3464905	Symbol	get_bytes		3464678						
ANR	3464906	Symbol	pad		3464678						
ANR	3464907	Symbol	& l		3464678						
ANR	3464908	Symbol	s		3464678						
ANR	3464909	Symbol	hton_is_noop		3464678						
ANR	3464910	Symbol	get		3464678						
ANR	3464911	Symbol	FALSE		3464678						
ANR	3464912	Symbol	* pad		3464678						
ANR	3464913	Symbol	* s		3464678						
ANR	3464914	Function	Stream :: get	1550:0:30546:31444							
ANR	3464915	FunctionDef	Stream :: get (unsigned long & l)		3464914	0					
ANR	3464916	CompoundStatement		1552:0:30582:31444	3464914	0					
ANR	3464917	IdentifierDeclStatement	unsigned int i ;	1553:1:30585:30600	3464914	0	True				
ANR	3464918	IdentifierDecl	i		3464914	0					
ANR	3464919	IdentifierDeclType	unsigned int		3464914	0					
ANR	3464920	Identifier	i		3464914	1					
ANR	3464921	IdentifierDeclStatement	char pad [ INT_SIZE - sizeof ( long ) ] ;	1554:1:30603:30634	3464914	1	True				
ANR	3464922	IdentifierDecl	pad [ INT_SIZE - sizeof ( long ) ]		3464914	0					
ANR	3464923	IdentifierDeclType	char [ INT_SIZE - sizeof ( long ) ]		3464914	0					
ANR	3464924	Identifier	pad		3464914	1					
ANR	3464925	AdditiveExpression	INT_SIZE - sizeof ( long )		3464914	2		-			
ANR	3464926	Identifier	INT_SIZE		3464914	0					
ANR	3464927	SizeofExpression	sizeof ( long )		3464914	1					
ANR	3464928	Sizeof	sizeof		3464914	0					
ANR	3464929	SizeofOperand	long		3464914	1					
ANR	3464930	SwitchStatement	switch ( _code )		3464914	2					
ANR	3464931	Condition	_code	1556:8:30645:30649	3464914	0	True				
ANR	3464932	Identifier	_code		3464914	0					
ANR	3464933	CompoundStatement		5:14:68:68	3464914	1					
ANR	3464934	Label	case internal :	1557:2:30655:30668	3464914	0	True				
ANR	3464935	Identifier	internal		3464914	0					
ANR	3464936	IfStatement	"if ( get_bytes ( & l , sizeof ( long ) ) != sizeof ( long ) )"		3464914	1					
ANR	3464937	Condition	"get_bytes ( & l , sizeof ( long ) ) != sizeof ( long )"	1558:7:30677:30719	3464914	0	True				
ANR	3464938	EqualityExpression	"get_bytes ( & l , sizeof ( long ) ) != sizeof ( long )"		3464914	0		!=			
ANR	3464939	CallExpression	"get_bytes ( & l , sizeof ( long ) )"		3464914	0					
ANR	3464940	Callee	get_bytes		3464914	0					
ANR	3464941	Identifier	get_bytes		3464914	0					
ANR	3464942	ArgumentList	& l		3464914	1					
ANR	3464943	Argument	& l		3464914	0					
ANR	3464944	UnaryOperationExpression	& l		3464914	0					
ANR	3464945	UnaryOperator	&		3464914	0					
ANR	3464946	Identifier	l		3464914	1					
ANR	3464947	Argument	sizeof ( long )		3464914	1					
ANR	3464948	SizeofExpression	sizeof ( long )		3464914	0					
ANR	3464949	Sizeof	sizeof		3464914	0					
ANR	3464950	SizeofOperand	long		3464914	1					
ANR	3464951	SizeofExpression	sizeof ( long )		3464914	1					
ANR	3464952	Sizeof	sizeof		3464914	0					
ANR	3464953	SizeofOperand	long		3464914	1					
ANR	3464954	ReturnStatement	return FALSE ;	1558:52:30722:30734	3464914	1	True				
ANR	3464955	Identifier	FALSE		3464914	0					
ANR	3464956	BreakStatement	break ;	1559:3:30739:30744	3464914	2	True				
ANR	3464957	Label	case external :	1561:2:30749:30762	3464914	3	True				
ANR	3464958	Identifier	external		3464914	0					
ANR	3464959	IfStatement	if ( ( sizeof ( int ) == sizeof ( long ) ) || ( sizeof ( long ) > INT_SIZE ) )		3464914	4					
ANR	3464960	Condition	( sizeof ( int ) == sizeof ( long ) ) || ( sizeof ( long ) > INT_SIZE )	1562:7:30771:30828	3464914	0	True				
ANR	3464961	OrExpression	( sizeof ( int ) == sizeof ( long ) ) || ( sizeof ( long ) > INT_SIZE )		3464914	0		||			
ANR	3464962	EqualityExpression	sizeof ( int ) == sizeof ( long )		3464914	0		==			
ANR	3464963	SizeofExpression	sizeof ( int )		3464914	0					
ANR	3464964	Sizeof	sizeof		3464914	0					
ANR	3464965	SizeofOperand	int		3464914	1					
ANR	3464966	SizeofExpression	sizeof ( long )		3464914	1					
ANR	3464967	Sizeof	sizeof		3464914	0					
ANR	3464968	SizeofOperand	long		3464914	1					
ANR	3464969	RelationalExpression	sizeof ( long ) > INT_SIZE		3464914	1		>			
ANR	3464970	SizeofExpression	sizeof ( long )		3464914	0					
ANR	3464971	Sizeof	sizeof		3464914	0					
ANR	3464972	SizeofOperand	long		3464914	1					
ANR	3464973	Identifier	INT_SIZE		3464914	1					
ANR	3464974	CompoundStatement		11:67:248:248	3464914	1					
ANR	3464975	IfStatement	if ( ! get ( i ) )		3464914	0					
ANR	3464976	Condition	! get ( i )	1563:8:30841:30847	3464914	0	True				
ANR	3464977	UnaryOperationExpression	! get ( i )		3464914	0					
ANR	3464978	UnaryOperator	!		3464914	0					
ANR	3464979	CallExpression	get ( i )		3464914	1					
ANR	3464980	Callee	get		3464914	0					
ANR	3464981	Identifier	get		3464914	0					
ANR	3464982	ArgumentList	i		3464914	1					
ANR	3464983	Argument	i		3464914	0					
ANR	3464984	Identifier	i		3464914	0					
ANR	3464985	ReturnStatement	return FALSE ;	1563:17:30850:30862	3464914	1	True				
ANR	3464986	Identifier	FALSE		3464914	0					
ANR	3464987	ExpressionStatement	l = ( unsigned long ) i	1564:4:30868:30889	3464914	1	True				
ANR	3464988	AssignmentExpression	l = ( unsigned long ) i		3464914	0		=			
ANR	3464989	Identifier	l		3464914	0					
ANR	3464990	CastExpression	( unsigned long ) i		3464914	1					
ANR	3464991	CastTarget	unsigned long		3464914	0					
ANR	3464992	Identifier	i		3464914	1					
ANR	3464993	ElseStatement	else		3464914	0					
ANR	3464994	CompoundStatement		14:10:318:318	3464914	0					
ANR	3464995	IfStatement	if ( sizeof ( long ) < INT_SIZE )		3464914	0					
ANR	3464996	Condition	sizeof ( long ) < INT_SIZE	1566:8:30911:30933	3464914	0	True				
ANR	3464997	RelationalExpression	sizeof ( long ) < INT_SIZE		3464914	0		<			
ANR	3464998	SizeofExpression	sizeof ( long )		3464914	0					
ANR	3464999	Sizeof	sizeof		3464914	0					
ANR	3465000	SizeofOperand	long		3464914	1					
ANR	3465001	Identifier	INT_SIZE		3464914	1					
ANR	3465002	CompoundStatement		15:33:353:353	3464914	1					
ANR	3465003	IfStatement	"if ( get_bytes ( pad , INT_SIZE - sizeof ( long ) ) != INT_SIZE - sizeof ( long ) )"		3464914	0					
ANR	3465004	Condition	"get_bytes ( pad , INT_SIZE - sizeof ( long ) ) != INT_SIZE - sizeof ( long )"	1567:9:30947:31014	3464914	0	True				
ANR	3465005	EqualityExpression	"get_bytes ( pad , INT_SIZE - sizeof ( long ) ) != INT_SIZE - sizeof ( long )"		3464914	0		!=			
ANR	3465006	CallExpression	"get_bytes ( pad , INT_SIZE - sizeof ( long ) )"		3464914	0					
ANR	3465007	Callee	get_bytes		3464914	0					
ANR	3465008	Identifier	get_bytes		3464914	0					
ANR	3465009	ArgumentList	pad		3464914	1					
ANR	3465010	Argument	pad		3464914	0					
ANR	3465011	Identifier	pad		3464914	0					
ANR	3465012	Argument	INT_SIZE - sizeof ( long )		3464914	1					
ANR	3465013	AdditiveExpression	INT_SIZE - sizeof ( long )		3464914	0		-			
ANR	3465014	Identifier	INT_SIZE		3464914	0					
ANR	3465015	SizeofExpression	sizeof ( long )		3464914	1					
ANR	3465016	Sizeof	sizeof		3464914	0					
ANR	3465017	SizeofOperand	long		3464914	1					
ANR	3465018	AdditiveExpression	INT_SIZE - sizeof ( long )		3464914	1		-			
ANR	3465019	Identifier	INT_SIZE		3464914	0					
ANR	3465020	SizeofExpression	sizeof ( long )		3464914	1					
ANR	3465021	Sizeof	sizeof		3464914	0					
ANR	3465022	SizeofOperand	long		3464914	1					
ANR	3465023	CompoundStatement		17:32:434:434	3464914	1					
ANR	3465024	ReturnStatement	return FALSE ;	1569:6:31025:31037	3464914	0	True				
ANR	3465025	Identifier	FALSE		3464914	0					
ANR	3465026	IfStatement	"if ( get_bytes ( & l , sizeof ( long ) ) != sizeof ( long ) )"		3464914	1					
ANR	3465027	Condition	"get_bytes ( & l , sizeof ( long ) ) != sizeof ( long )"	1572:8:31060:31102	3464914	0	True				
ANR	3465028	EqualityExpression	"get_bytes ( & l , sizeof ( long ) ) != sizeof ( long )"		3464914	0		!=			
ANR	3465029	CallExpression	"get_bytes ( & l , sizeof ( long ) )"		3464914	0					
ANR	3465030	Callee	get_bytes		3464914	0					
ANR	3465031	Identifier	get_bytes		3464914	0					
ANR	3465032	ArgumentList	& l		3464914	1					
ANR	3465033	Argument	& l		3464914	0					
ANR	3465034	UnaryOperationExpression	& l		3464914	0					
ANR	3465035	UnaryOperator	&		3464914	0					
ANR	3465036	Identifier	l		3464914	1					
ANR	3465037	Argument	sizeof ( long )		3464914	1					
ANR	3465038	SizeofExpression	sizeof ( long )		3464914	0					
ANR	3465039	Sizeof	sizeof		3464914	0					
ANR	3465040	SizeofOperand	long		3464914	1					
ANR	3465041	SizeofExpression	sizeof ( long )		3464914	1					
ANR	3465042	Sizeof	sizeof		3464914	0					
ANR	3465043	SizeofOperand	long		3464914	1					
ANR	3465044	ReturnStatement	return FALSE ;	1572:53:31105:31117	3464914	1	True				
ANR	3465045	Identifier	FALSE		3464914	0					
ANR	3465046	IfStatement	if ( ! hton_is_noop ( ) )		3464914	2					
ANR	3465047	Condition	! hton_is_noop ( )	1573:8:31127:31141	3464914	0	True				
ANR	3465048	UnaryOperationExpression	! hton_is_noop ( )		3464914	0					
ANR	3465049	UnaryOperator	!		3464914	0					
ANR	3465050	CallExpression	hton_is_noop ( )		3464914	1					
ANR	3465051	Callee	hton_is_noop		3464914	0					
ANR	3465052	Identifier	hton_is_noop		3464914	0					
ANR	3465053	ArgumentList			3464914	1					
ANR	3465054	CompoundStatement		22:25:561:561	3464914	1					
ANR	3465055	ExpressionStatement	l = ntohL ( l )	1574:5:31184:31196	3464914	0	True				
ANR	3465056	AssignmentExpression	l = ntohL ( l )		3464914	0		=			
ANR	3465057	Identifier	l		3464914	0					
ANR	3465058	CallExpression	ntohL ( l )		3464914	1					
ANR	3465059	Callee	ntohL		3464914	0					
ANR	3465060	Identifier	ntohL		3464914	0					
ANR	3465061	ArgumentList	l		3464914	1					
ANR	3465062	Argument	l		3464914	0					
ANR	3465063	Identifier	l		3464914	0					
ANR	3465064	ForStatement	for ( int s = 0 ; s < INT_SIZE - ( int ) sizeof ( long ) ; s ++ )		3464914	3					
ANR	3465065	ForInit	int s = 0 ;	1576:9:31213:31220	3464914	0	True				
ANR	3465066	IdentifierDeclStatement	int s = 0 ;		3464914	0					
ANR	3465067	IdentifierDecl	s = 0		3464914	0					
ANR	3465068	IdentifierDeclType	int		3464914	0					
ANR	3465069	Identifier	s		3464914	1					
ANR	3465070	AssignmentExpression	s = 0		3464914	2		=			
ANR	3465071	Identifier	s		3464914	0					
ANR	3465072	PrimaryExpression	0		3464914	1					
ANR	3465073	Condition	s < INT_SIZE - ( int ) sizeof ( long )	1576:18:31222:31251	3464914	1	True				
ANR	3465074	RelationalExpression	s < INT_SIZE - ( int ) sizeof ( long )		3464914	0		<			
ANR	3465075	Identifier	s		3464914	0					
ANR	3465076	AdditiveExpression	INT_SIZE - ( int ) sizeof ( long )		3464914	1		-			
ANR	3465077	Identifier	INT_SIZE		3464914	0					
ANR	3465078	CastExpression	( int ) sizeof ( long )		3464914	1					
ANR	3465079	CastTarget	int		3464914	0					
ANR	3465080	SizeofExpression	sizeof ( long )		3464914	1					
ANR	3465081	Sizeof	sizeof		3464914	0					
ANR	3465082	SizeofOperand	long		3464914	1					
ANR	3465083	PostIncDecOperationExpression	s ++	1576:50:31254:31256	3464914	2	True				
ANR	3465084	Identifier	s		3464914	0					
ANR	3465085	IncDec	++		3464914	1					
ANR	3465086	CompoundStatement		25:55:676:676	3464914	3					
ANR	3465087	IfStatement	if ( pad [ s ] != 0 )		3464914	0					
ANR	3465088	Condition	pad [ s ] != 0	1577:9:31283:31293	3464914	0	True				
ANR	3465089	EqualityExpression	pad [ s ] != 0		3464914	0		!=			
ANR	3465090	ArrayIndexing	pad [ s ]		3464914	0					
ANR	3465091	Identifier	pad		3464914	0					
ANR	3465092	Identifier	s		3464914	1					
ANR	3465093	PrimaryExpression	0		3464914	1					
ANR	3465094	CompoundStatement		26:22:713:713	3464914	1					
ANR	3465095	ReturnStatement	return FALSE ;	1578:6:31304:31316	3464914	0	True				
ANR	3465096	Identifier	FALSE		3464914	0					
ANR	3465097	BreakStatement	break ;	1582:3:31351:31356	3464914	5	True				
ANR	3465098	Label	case ascii :	1584:2:31361:31371	3464914	6	True				
ANR	3465099	Identifier	ascii		3464914	0					
ANR	3465100	ReturnStatement	return FALSE ;	1585:3:31376:31388	3464914	7	True				
ANR	3465101	Identifier	FALSE		3464914	0					
ANR	3465102	ExpressionStatement	"NETWORK_TRACE ( ""get long "" << l )"	1587:4:31397:31428	3464914	3	True				
ANR	3465103	CallExpression	"NETWORK_TRACE ( ""get long "" << l )"		3464914	0					
ANR	3465104	Callee	NETWORK_TRACE		3464914	0					
ANR	3465105	Identifier	NETWORK_TRACE		3464914	0					
ANR	3465106	ArgumentList	"""get long "" << l"		3464914	1					
ANR	3465107	Argument	"""get long "" << l"		3464914	0					
ANR	3465108	ShiftExpression	"""get long "" << l"		3464914	0		<<			
ANR	3465109	PrimaryExpression	"""get long """		3464914	0					
ANR	3465110	Identifier	l		3464914	1					
ANR	3465111	ReturnStatement	return TRUE ;	1588:1:31431:31442	3464914	4	True				
ANR	3465112	Identifier	TRUE		3464914	0					
ANR	3465113	ReturnType	int		3464914	1					
ANR	3465114	Identifier	Stream :: get		3464914	2					
ANR	3465115	ParameterList	unsigned long & l		3464914	3					
ANR	3465116	Parameter	unsigned long & l	1551:13:30564:30579	3464914	0	True				
ANR	3465117	ParameterType	unsigned long &		3464914	0					
ANR	3465118	Identifier	l		3464914	1					
ANR	3465119	CFGEntryNode	ENTRY		3464914		True				
ANR	3465120	CFGExitNode	EXIT		3464914		True				
ANR	3465121	Symbol	_code		3464914						
ANR	3465122	Symbol	INT_SIZE		3464914						
ANR	3465123	Symbol	i		3464914						
ANR	3465124	Symbol	ntohL		3464914						
ANR	3465125	Symbol	TRUE		3464914						
ANR	3465126	Symbol	l		3464914						
ANR	3465127	Symbol	get_bytes		3464914						
ANR	3465128	Symbol	pad		3464914						
ANR	3465129	Symbol	& l		3464914						
ANR	3465130	Symbol	s		3464914						
ANR	3465131	Symbol	hton_is_noop		3464914						
ANR	3465132	Symbol	get		3464914						
ANR	3465133	Symbol	FALSE		3464914						
ANR	3465134	Symbol	* pad		3464914						
ANR	3465135	Symbol	* s		3464914						
ANR	3465136	Function	Stream :: get	1593:0:31490:32635							
ANR	3465137	FunctionDef	Stream :: get (int64_t & l)		3465136	0					
ANR	3465138	CompoundStatement		1595:0:31520:32635	3465136	0					
ANR	3465139	IdentifierDeclStatement	int i ;	1596:1:31523:31529	3465136	0	True				
ANR	3465140	IdentifierDecl	i		3465136	0					
ANR	3465141	IdentifierDeclType	int		3465136	0					
ANR	3465142	Identifier	i		3465136	1					
ANR	3465143	IdentifierDeclStatement	char sign ;	1597:1:31532:31541	3465136	1	True				
ANR	3465144	IdentifierDecl	sign		3465136	0					
ANR	3465145	IdentifierDeclType	char		3465136	0					
ANR	3465146	Identifier	sign		3465136	1					
ANR	3465147	IdentifierDeclStatement	char pad [ INT_SIZE - sizeof ( int64_t ) ] ;	1601:1:31665:31699	3465136	2	True				
ANR	3465148	IdentifierDecl	pad [ INT_SIZE - sizeof ( int64_t ) ]		3465136	0					
ANR	3465149	IdentifierDeclType	char [ INT_SIZE - sizeof ( int64_t ) ]		3465136	0					
ANR	3465150	Identifier	pad		3465136	1					
ANR	3465151	AdditiveExpression	INT_SIZE - sizeof ( int64_t )		3465136	2		-			
ANR	3465152	Identifier	INT_SIZE		3465136	0					
ANR	3465153	SizeofExpression	sizeof ( int64_t )		3465136	1					
ANR	3465154	Sizeof	sizeof		3465136	0					
ANR	3465155	SizeofOperand	int64_t		3465136	1					
ANR	3465156	SwitchStatement	switch ( _code )		3465136	3					
ANR	3465157	Condition	_code	1604:8:31718:31722	3465136	0	True				
ANR	3465158	Identifier	_code		3465136	0					
ANR	3465159	CompoundStatement		10:14:203:203	3465136	1					
ANR	3465160	Label	case internal :	1605:2:31728:31741	3465136	0	True				
ANR	3465161	Identifier	internal		3465136	0					
ANR	3465162	IfStatement	"if ( get_bytes ( & l , sizeof ( int64_t ) ) != sizeof ( int64_t ) )"		3465136	1					
ANR	3465163	Condition	"get_bytes ( & l , sizeof ( int64_t ) ) != sizeof ( int64_t )"	1606:7:31750:31798	3465136	0	True				
ANR	3465164	EqualityExpression	"get_bytes ( & l , sizeof ( int64_t ) ) != sizeof ( int64_t )"		3465136	0		!=			
ANR	3465165	CallExpression	"get_bytes ( & l , sizeof ( int64_t ) )"		3465136	0					
ANR	3465166	Callee	get_bytes		3465136	0					
ANR	3465167	Identifier	get_bytes		3465136	0					
ANR	3465168	ArgumentList	& l		3465136	1					
ANR	3465169	Argument	& l		3465136	0					
ANR	3465170	UnaryOperationExpression	& l		3465136	0					
ANR	3465171	UnaryOperator	&		3465136	0					
ANR	3465172	Identifier	l		3465136	1					
ANR	3465173	Argument	sizeof ( int64_t )		3465136	1					
ANR	3465174	SizeofExpression	sizeof ( int64_t )		3465136	0					
ANR	3465175	Sizeof	sizeof		3465136	0					
ANR	3465176	SizeofOperand	int64_t		3465136	1					
ANR	3465177	SizeofExpression	sizeof ( int64_t )		3465136	1					
ANR	3465178	Sizeof	sizeof		3465136	0					
ANR	3465179	SizeofOperand	int64_t		3465136	1					
ANR	3465180	ReturnStatement	return FALSE ;	1606:58:31801:31813	3465136	1	True				
ANR	3465181	Identifier	FALSE		3465136	0					
ANR	3465182	BreakStatement	break ;	1607:3:31818:31823	3465136	2	True				
ANR	3465183	Label	case external :	1609:2:31828:31841	3465136	3	True				
ANR	3465184	Identifier	external		3465136	0					
ANR	3465185	IfStatement	if ( ( sizeof ( int ) == sizeof ( int64_t ) ) || ( sizeof ( int64_t ) > INT_SIZE ) )		3465136	4					
ANR	3465186	Condition	( sizeof ( int ) == sizeof ( int64_t ) ) || ( sizeof ( int64_t ) > INT_SIZE )	1610:7:31850:31913	3465136	0	True				
ANR	3465187	OrExpression	( sizeof ( int ) == sizeof ( int64_t ) ) || ( sizeof ( int64_t ) > INT_SIZE )		3465136	0		||			
ANR	3465188	EqualityExpression	sizeof ( int ) == sizeof ( int64_t )		3465136	0		==			
ANR	3465189	SizeofExpression	sizeof ( int )		3465136	0					
ANR	3465190	Sizeof	sizeof		3465136	0					
ANR	3465191	SizeofOperand	int		3465136	1					
ANR	3465192	SizeofExpression	sizeof ( int64_t )		3465136	1					
ANR	3465193	Sizeof	sizeof		3465136	0					
ANR	3465194	SizeofOperand	int64_t		3465136	1					
ANR	3465195	RelationalExpression	sizeof ( int64_t ) > INT_SIZE		3465136	1		>			
ANR	3465196	SizeofExpression	sizeof ( int64_t )		3465136	0					
ANR	3465197	Sizeof	sizeof		3465136	0					
ANR	3465198	SizeofOperand	int64_t		3465136	1					
ANR	3465199	Identifier	INT_SIZE		3465136	1					
ANR	3465200	CompoundStatement		16:73:395:395	3465136	1					
ANR	3465201	IfStatement	if ( ! get ( i ) )		3465136	0					
ANR	3465202	Condition	! get ( i )	1611:8:31926:31932	3465136	0	True				
ANR	3465203	UnaryOperationExpression	! get ( i )		3465136	0					
ANR	3465204	UnaryOperator	!		3465136	0					
ANR	3465205	CallExpression	get ( i )		3465136	1					
ANR	3465206	Callee	get		3465136	0					
ANR	3465207	Identifier	get		3465136	0					
ANR	3465208	ArgumentList	i		3465136	1					
ANR	3465209	Argument	i		3465136	0					
ANR	3465210	Identifier	i		3465136	0					
ANR	3465211	ReturnStatement	return FALSE ;	1611:17:31935:31947	3465136	1	True				
ANR	3465212	Identifier	FALSE		3465136	0					
ANR	3465213	ExpressionStatement	l = ( long ) i	1612:4:31953:31965	3465136	1	True				
ANR	3465214	AssignmentExpression	l = ( long ) i		3465136	0		=			
ANR	3465215	Identifier	l		3465136	0					
ANR	3465216	CastExpression	( long ) i		3465136	1					
ANR	3465217	CastTarget	long		3465136	0					
ANR	3465218	Identifier	i		3465136	1					
ANR	3465219	ElseStatement	else		3465136	0					
ANR	3465220	CompoundStatement		19:10:456:456	3465136	0					
ANR	3465221	IfStatement	if ( sizeof ( int64_t ) < INT_SIZE )		3465136	0					
ANR	3465222	Condition	sizeof ( int64_t ) < INT_SIZE	1615:8:32005:32030	3465136	0	True				
ANR	3465223	RelationalExpression	sizeof ( int64_t ) < INT_SIZE		3465136	0		<			
ANR	3465224	SizeofExpression	sizeof ( int64_t )		3465136	0					
ANR	3465225	Sizeof	sizeof		3465136	0					
ANR	3465226	SizeofOperand	int64_t		3465136	1					
ANR	3465227	Identifier	INT_SIZE		3465136	1					
ANR	3465228	CompoundStatement		21:36:512:512	3465136	1					
ANR	3465229	IfStatement	"if ( get_bytes ( pad , INT_SIZE - sizeof ( int64_t ) ) != INT_SIZE - sizeof ( int64_t ) )"		3465136	0					
ANR	3465230	Condition	"get_bytes ( pad , INT_SIZE - sizeof ( int64_t ) ) != INT_SIZE - sizeof ( int64_t )"	1616:9:32044:32117	3465136	0	True				
ANR	3465231	EqualityExpression	"get_bytes ( pad , INT_SIZE - sizeof ( int64_t ) ) != INT_SIZE - sizeof ( int64_t )"		3465136	0		!=			
ANR	3465232	CallExpression	"get_bytes ( pad , INT_SIZE - sizeof ( int64_t ) )"		3465136	0					
ANR	3465233	Callee	get_bytes		3465136	0					
ANR	3465234	Identifier	get_bytes		3465136	0					
ANR	3465235	ArgumentList	pad		3465136	1					
ANR	3465236	Argument	pad		3465136	0					
ANR	3465237	Identifier	pad		3465136	0					
ANR	3465238	Argument	INT_SIZE - sizeof ( int64_t )		3465136	1					
ANR	3465239	AdditiveExpression	INT_SIZE - sizeof ( int64_t )		3465136	0		-			
ANR	3465240	Identifier	INT_SIZE		3465136	0					
ANR	3465241	SizeofExpression	sizeof ( int64_t )		3465136	1					
ANR	3465242	Sizeof	sizeof		3465136	0					
ANR	3465243	SizeofOperand	int64_t		3465136	1					
ANR	3465244	AdditiveExpression	INT_SIZE - sizeof ( int64_t )		3465136	1		-			
ANR	3465245	Identifier	INT_SIZE		3465136	0					
ANR	3465246	SizeofExpression	sizeof ( int64_t )		3465136	1					
ANR	3465247	Sizeof	sizeof		3465136	0					
ANR	3465248	SizeofOperand	int64_t		3465136	1					
ANR	3465249	CompoundStatement		23:35:599:599	3465136	1					
ANR	3465250	ReturnStatement	return FALSE ;	1618:6:32128:32140	3465136	0	True				
ANR	3465251	Identifier	FALSE		3465136	0					
ANR	3465252	IfStatement	"if ( get_bytes ( & l , sizeof ( int64_t ) ) != sizeof ( int64_t ) )"		3465136	1					
ANR	3465253	Condition	"get_bytes ( & l , sizeof ( int64_t ) ) != sizeof ( int64_t )"	1622:8:32174:32222	3465136	0	True				
ANR	3465254	EqualityExpression	"get_bytes ( & l , sizeof ( int64_t ) ) != sizeof ( int64_t )"		3465136	0		!=			
ANR	3465255	CallExpression	"get_bytes ( & l , sizeof ( int64_t ) )"		3465136	0					
ANR	3465256	Callee	get_bytes		3465136	0					
ANR	3465257	Identifier	get_bytes		3465136	0					
ANR	3465258	ArgumentList	& l		3465136	1					
ANR	3465259	Argument	& l		3465136	0					
ANR	3465260	UnaryOperationExpression	& l		3465136	0					
ANR	3465261	UnaryOperator	&		3465136	0					
ANR	3465262	Identifier	l		3465136	1					
ANR	3465263	Argument	sizeof ( int64_t )		3465136	1					
ANR	3465264	SizeofExpression	sizeof ( int64_t )		3465136	0					
ANR	3465265	Sizeof	sizeof		3465136	0					
ANR	3465266	SizeofOperand	int64_t		3465136	1					
ANR	3465267	SizeofExpression	sizeof ( int64_t )		3465136	1					
ANR	3465268	Sizeof	sizeof		3465136	0					
ANR	3465269	SizeofOperand	int64_t		3465136	1					
ANR	3465270	ReturnStatement	return FALSE ;	1622:59:32225:32237	3465136	1	True				
ANR	3465271	Identifier	FALSE		3465136	0					
ANR	3465272	IfStatement	if ( ! hton_is_noop ( ) )		3465136	2					
ANR	3465273	Condition	! hton_is_noop ( )	1623:8:32247:32261	3465136	0	True				
ANR	3465274	UnaryOperationExpression	! hton_is_noop ( )		3465136	0					
ANR	3465275	UnaryOperator	!		3465136	0					
ANR	3465276	CallExpression	hton_is_noop ( )		3465136	1					
ANR	3465277	Callee	hton_is_noop		3465136	0					
ANR	3465278	Identifier	hton_is_noop		3465136	0					
ANR	3465279	ArgumentList			3465136	1					
ANR	3465280	CompoundStatement		29:25:743:743	3465136	1					
ANR	3465281	ExpressionStatement	l = ntohLL ( l )	1624:5:32304:32317	3465136	0	True				
ANR	3465282	AssignmentExpression	l = ntohLL ( l )		3465136	0		=			
ANR	3465283	Identifier	l		3465136	0					
ANR	3465284	CallExpression	ntohLL ( l )		3465136	1					
ANR	3465285	Callee	ntohLL		3465136	0					
ANR	3465286	Identifier	ntohLL		3465136	0					
ANR	3465287	ArgumentList	l		3465136	1					
ANR	3465288	Argument	l		3465136	0					
ANR	3465289	Identifier	l		3465136	0					
ANR	3465290	ExpressionStatement	sign = ( l >= 0 ) ? 0 : 0xff	1626:4:32329:32355	3465136	3	True				
ANR	3465291	AssignmentExpression	sign = ( l >= 0 ) ? 0 : 0xff		3465136	0		=			
ANR	3465292	Identifier	sign		3465136	0					
ANR	3465293	ConditionalExpression	( l >= 0 ) ? 0 : 0xff		3465136	1					
ANR	3465294	Condition	l >= 0		3465136	0					
ANR	3465295	RelationalExpression	l >= 0		3465136	0		>=			
ANR	3465296	Identifier	l		3465136	0					
ANR	3465297	PrimaryExpression	0		3465136	1					
ANR	3465298	PrimaryExpression	0		3465136	1					
ANR	3465299	PrimaryExpression	0xff		3465136	2					
ANR	3465300	ForStatement	for ( int s = 0 ; s < INT_SIZE - ( int ) sizeof ( int64_t ) ; s ++ )		3465136	4					
ANR	3465301	ForInit	int s = 0 ;	1628:9:32384:32391	3465136	0	True				
ANR	3465302	IdentifierDeclStatement	int s = 0 ;		3465136	0					
ANR	3465303	IdentifierDecl	s = 0		3465136	0					
ANR	3465304	IdentifierDeclType	int		3465136	0					
ANR	3465305	Identifier	s		3465136	1					
ANR	3465306	AssignmentExpression	s = 0		3465136	2		=			
ANR	3465307	Identifier	s		3465136	0					
ANR	3465308	PrimaryExpression	0		3465136	1					
ANR	3465309	Condition	s < INT_SIZE - ( int ) sizeof ( int64_t )	1628:18:32393:32425	3465136	1	True				
ANR	3465310	RelationalExpression	s < INT_SIZE - ( int ) sizeof ( int64_t )		3465136	0		<			
ANR	3465311	Identifier	s		3465136	0					
ANR	3465312	AdditiveExpression	INT_SIZE - ( int ) sizeof ( int64_t )		3465136	1		-			
ANR	3465313	Identifier	INT_SIZE		3465136	0					
ANR	3465314	CastExpression	( int ) sizeof ( int64_t )		3465136	1					
ANR	3465315	CastTarget	int		3465136	0					
ANR	3465316	SizeofExpression	sizeof ( int64_t )		3465136	1					
ANR	3465317	Sizeof	sizeof		3465136	0					
ANR	3465318	SizeofOperand	int64_t		3465136	1					
ANR	3465319	PostIncDecOperationExpression	s ++	1628:53:32428:32430	3465136	2	True				
ANR	3465320	Identifier	s		3465136	0					
ANR	3465321	IncDec	++		3465136	1					
ANR	3465322	CompoundStatement		34:58:912:912	3465136	3					
ANR	3465323	IfStatement	if ( pad [ s ] != sign )		3465136	0					
ANR	3465324	Condition	pad [ s ] != sign	1629:9:32457:32470	3465136	0	True				
ANR	3465325	EqualityExpression	pad [ s ] != sign		3465136	0		!=			
ANR	3465326	ArrayIndexing	pad [ s ]		3465136	0					
ANR	3465327	Identifier	pad		3465136	0					
ANR	3465328	Identifier	s		3465136	1					
ANR	3465329	Identifier	sign		3465136	1					
ANR	3465330	CompoundStatement		35:25:952:952	3465136	1					
ANR	3465331	ReturnStatement	return FALSE ;	1630:6:32481:32493	3465136	0	True				
ANR	3465332	Identifier	FALSE		3465136	0					
ANR	3465333	BreakStatement	break ;	1635:3:32539:32544	3465136	5	True				
ANR	3465334	Label	case ascii :	1637:2:32549:32559	3465136	6	True				
ANR	3465335	Identifier	ascii		3465136	0					
ANR	3465336	ReturnStatement	return FALSE ;	1638:3:32564:32576	3465136	7	True				
ANR	3465337	Identifier	FALSE		3465136	0					
ANR	3465338	ExpressionStatement	"NETWORK_TRACE ( ""get int64_t "" << l )"	1640:4:32585:32619	3465136	4	True				
ANR	3465339	CallExpression	"NETWORK_TRACE ( ""get int64_t "" << l )"		3465136	0					
ANR	3465340	Callee	NETWORK_TRACE		3465136	0					
ANR	3465341	Identifier	NETWORK_TRACE		3465136	0					
ANR	3465342	ArgumentList	"""get int64_t "" << l"		3465136	1					
ANR	3465343	Argument	"""get int64_t "" << l"		3465136	0					
ANR	3465344	ShiftExpression	"""get int64_t "" << l"		3465136	0		<<			
ANR	3465345	PrimaryExpression	"""get int64_t """		3465136	0					
ANR	3465346	Identifier	l		3465136	1					
ANR	3465347	ReturnStatement	return TRUE ;	1641:1:32622:32633	3465136	5	True				
ANR	3465348	Identifier	TRUE		3465136	0					
ANR	3465349	ReturnType	int		3465136	1					
ANR	3465350	Identifier	Stream :: get		3465136	2					
ANR	3465351	ParameterList	int64_t & l		3465136	3					
ANR	3465352	Parameter	int64_t & l	1594:13:31508:31517	3465136	0	True				
ANR	3465353	ParameterType	int64_t &		3465136	0					
ANR	3465354	Identifier	l		3465136	1					
ANR	3465355	CFGEntryNode	ENTRY		3465136		True				
ANR	3465356	CFGExitNode	EXIT		3465136		True				
ANR	3465357	Symbol	_code		3465136						
ANR	3465358	Symbol	INT_SIZE		3465136						
ANR	3465359	Symbol	sign		3465136						
ANR	3465360	Symbol	i		3465136						
ANR	3465361	Symbol	TRUE		3465136						
ANR	3465362	Symbol	l		3465136						
ANR	3465363	Symbol	get_bytes		3465136						
ANR	3465364	Symbol	pad		3465136						
ANR	3465365	Symbol	& l		3465136						
ANR	3465366	Symbol	s		3465136						
ANR	3465367	Symbol	ntohLL		3465136						
ANR	3465368	Symbol	hton_is_noop		3465136						
ANR	3465369	Symbol	get		3465136						
ANR	3465370	Symbol	FALSE		3465136						
ANR	3465371	Symbol	* pad		3465136						
ANR	3465372	Symbol	* s		3465136						
ANR	3465373	Function	Stream :: get	1645:0:32639:33775							
ANR	3465374	FunctionDef	Stream :: get (uint64_t & l)		3465373	0					
ANR	3465375	CompoundStatement		1647:0:32670:33775	3465373	0					
ANR	3465376	IdentifierDeclStatement	unsigned int i ;	1648:1:32673:32688	3465373	0	True				
ANR	3465377	IdentifierDecl	i		3465373	0					
ANR	3465378	IdentifierDeclType	unsigned int		3465373	0					
ANR	3465379	Identifier	i		3465373	1					
ANR	3465380	IdentifierDeclStatement	char pad [ INT_SIZE - sizeof ( uint64_t ) ] ;	1653:1:32824:32859	3465373	1	True				
ANR	3465381	IdentifierDecl	pad [ INT_SIZE - sizeof ( uint64_t ) ]		3465373	0					
ANR	3465382	IdentifierDeclType	char [ INT_SIZE - sizeof ( uint64_t ) ]		3465373	0					
ANR	3465383	Identifier	pad		3465373	1					
ANR	3465384	AdditiveExpression	INT_SIZE - sizeof ( uint64_t )		3465373	2		-			
ANR	3465385	Identifier	INT_SIZE		3465373	0					
ANR	3465386	SizeofExpression	sizeof ( uint64_t )		3465373	1					
ANR	3465387	Sizeof	sizeof		3465373	0					
ANR	3465388	SizeofOperand	uint64_t		3465373	1					
ANR	3465389	SwitchStatement	switch ( _code )		3465373	2					
ANR	3465390	Condition	_code	1656:8:32878:32882	3465373	0	True				
ANR	3465391	Identifier	_code		3465373	0					
ANR	3465392	CompoundStatement		10:14:213:213	3465373	1					
ANR	3465393	Label	case internal :	1657:2:32888:32901	3465373	0	True				
ANR	3465394	Identifier	internal		3465373	0					
ANR	3465395	IfStatement	"if ( get_bytes ( & l , sizeof ( uint64_t ) ) != sizeof ( uint64_t ) )"		3465373	1					
ANR	3465396	Condition	"get_bytes ( & l , sizeof ( uint64_t ) ) != sizeof ( uint64_t )"	1658:7:32910:32960	3465373	0	True				
ANR	3465397	EqualityExpression	"get_bytes ( & l , sizeof ( uint64_t ) ) != sizeof ( uint64_t )"		3465373	0		!=			
ANR	3465398	CallExpression	"get_bytes ( & l , sizeof ( uint64_t ) )"		3465373	0					
ANR	3465399	Callee	get_bytes		3465373	0					
ANR	3465400	Identifier	get_bytes		3465373	0					
ANR	3465401	ArgumentList	& l		3465373	1					
ANR	3465402	Argument	& l		3465373	0					
ANR	3465403	UnaryOperationExpression	& l		3465373	0					
ANR	3465404	UnaryOperator	&		3465373	0					
ANR	3465405	Identifier	l		3465373	1					
ANR	3465406	Argument	sizeof ( uint64_t )		3465373	1					
ANR	3465407	SizeofExpression	sizeof ( uint64_t )		3465373	0					
ANR	3465408	Sizeof	sizeof		3465373	0					
ANR	3465409	SizeofOperand	uint64_t		3465373	1					
ANR	3465410	SizeofExpression	sizeof ( uint64_t )		3465373	1					
ANR	3465411	Sizeof	sizeof		3465373	0					
ANR	3465412	SizeofOperand	uint64_t		3465373	1					
ANR	3465413	ReturnStatement	return FALSE ;	1658:60:32963:32975	3465373	1	True				
ANR	3465414	Identifier	FALSE		3465373	0					
ANR	3465415	BreakStatement	break ;	1659:3:32980:32985	3465373	2	True				
ANR	3465416	Label	case external :	1661:2:32990:33003	3465373	3	True				
ANR	3465417	Identifier	external		3465373	0					
ANR	3465418	IfStatement	if ( ( sizeof ( int ) == sizeof ( uint64_t ) ) || ( sizeof ( uint64_t ) > INT_SIZE ) )		3465373	4					
ANR	3465419	Condition	( sizeof ( int ) == sizeof ( uint64_t ) ) || ( sizeof ( uint64_t ) > INT_SIZE )	1662:7:33012:33077	3465373	0	True				
ANR	3465420	OrExpression	( sizeof ( int ) == sizeof ( uint64_t ) ) || ( sizeof ( uint64_t ) > INT_SIZE )		3465373	0		||			
ANR	3465421	EqualityExpression	sizeof ( int ) == sizeof ( uint64_t )		3465373	0		==			
ANR	3465422	SizeofExpression	sizeof ( int )		3465373	0					
ANR	3465423	Sizeof	sizeof		3465373	0					
ANR	3465424	SizeofOperand	int		3465373	1					
ANR	3465425	SizeofExpression	sizeof ( uint64_t )		3465373	1					
ANR	3465426	Sizeof	sizeof		3465373	0					
ANR	3465427	SizeofOperand	uint64_t		3465373	1					
ANR	3465428	RelationalExpression	sizeof ( uint64_t ) > INT_SIZE		3465373	1		>			
ANR	3465429	SizeofExpression	sizeof ( uint64_t )		3465373	0					
ANR	3465430	Sizeof	sizeof		3465373	0					
ANR	3465431	SizeofOperand	uint64_t		3465373	1					
ANR	3465432	Identifier	INT_SIZE		3465373	1					
ANR	3465433	CompoundStatement		16:75:409:409	3465373	1					
ANR	3465434	IfStatement	if ( ! get ( i ) )		3465373	0					
ANR	3465435	Condition	! get ( i )	1663:8:33090:33096	3465373	0	True				
ANR	3465436	UnaryOperationExpression	! get ( i )		3465373	0					
ANR	3465437	UnaryOperator	!		3465373	0					
ANR	3465438	CallExpression	get ( i )		3465373	1					
ANR	3465439	Callee	get		3465373	0					
ANR	3465440	Identifier	get		3465373	0					
ANR	3465441	ArgumentList	i		3465373	1					
ANR	3465442	Argument	i		3465373	0					
ANR	3465443	Identifier	i		3465373	0					
ANR	3465444	ReturnStatement	return FALSE ;	1663:17:33099:33111	3465373	1	True				
ANR	3465445	Identifier	FALSE		3465373	0					
ANR	3465446	ExpressionStatement	l = ( uint64_t ) i	1664:4:33117:33133	3465373	1	True				
ANR	3465447	AssignmentExpression	l = ( uint64_t ) i		3465373	0		=			
ANR	3465448	Identifier	l		3465373	0					
ANR	3465449	CastExpression	( uint64_t ) i		3465373	1					
ANR	3465450	CastTarget	uint64_t		3465373	0					
ANR	3465451	Identifier	i		3465373	1					
ANR	3465452	ElseStatement	else		3465373	0					
ANR	3465453	CompoundStatement		19:10:474:474	3465373	0					
ANR	3465454	IfStatement	if ( sizeof ( uint64_t ) < INT_SIZE )		3465373	0					
ANR	3465455	Condition	sizeof ( uint64_t ) < INT_SIZE	1667:8:33173:33199	3465373	0	True				
ANR	3465456	RelationalExpression	sizeof ( uint64_t ) < INT_SIZE		3465373	0		<			
ANR	3465457	SizeofExpression	sizeof ( uint64_t )		3465373	0					
ANR	3465458	Sizeof	sizeof		3465373	0					
ANR	3465459	SizeofOperand	uint64_t		3465373	1					
ANR	3465460	Identifier	INT_SIZE		3465373	1					
ANR	3465461	CompoundStatement		21:37:531:531	3465373	1					
ANR	3465462	IfStatement	"if ( get_bytes ( pad , INT_SIZE - sizeof ( uint64_t ) ) != INT_SIZE - sizeof ( uint64_t ) )"		3465373	0					
ANR	3465463	Condition	"get_bytes ( pad , INT_SIZE - sizeof ( uint64_t ) ) != INT_SIZE - sizeof ( uint64_t )"	1668:9:33213:33288	3465373	0	True				
ANR	3465464	EqualityExpression	"get_bytes ( pad , INT_SIZE - sizeof ( uint64_t ) ) != INT_SIZE - sizeof ( uint64_t )"		3465373	0		!=			
ANR	3465465	CallExpression	"get_bytes ( pad , INT_SIZE - sizeof ( uint64_t ) )"		3465373	0					
ANR	3465466	Callee	get_bytes		3465373	0					
ANR	3465467	Identifier	get_bytes		3465373	0					
ANR	3465468	ArgumentList	pad		3465373	1					
ANR	3465469	Argument	pad		3465373	0					
ANR	3465470	Identifier	pad		3465373	0					
ANR	3465471	Argument	INT_SIZE - sizeof ( uint64_t )		3465373	1					
ANR	3465472	AdditiveExpression	INT_SIZE - sizeof ( uint64_t )		3465373	0		-			
ANR	3465473	Identifier	INT_SIZE		3465373	0					
ANR	3465474	SizeofExpression	sizeof ( uint64_t )		3465373	1					
ANR	3465475	Sizeof	sizeof		3465373	0					
ANR	3465476	SizeofOperand	uint64_t		3465373	1					
ANR	3465477	AdditiveExpression	INT_SIZE - sizeof ( uint64_t )		3465373	1		-			
ANR	3465478	Identifier	INT_SIZE		3465373	0					
ANR	3465479	SizeofExpression	sizeof ( uint64_t )		3465373	1					
ANR	3465480	Sizeof	sizeof		3465373	0					
ANR	3465481	SizeofOperand	uint64_t		3465373	1					
ANR	3465482	CompoundStatement		23:36:620:620	3465373	1					
ANR	3465483	ReturnStatement	return FALSE ;	1670:6:33299:33311	3465373	0	True				
ANR	3465484	Identifier	FALSE		3465373	0					
ANR	3465485	IfStatement	"if ( get_bytes ( & l , sizeof ( uint64_t ) ) != sizeof ( uint64_t ) )"		3465373	1					
ANR	3465486	Condition	"get_bytes ( & l , sizeof ( uint64_t ) ) != sizeof ( uint64_t )"	1674:8:33345:33395	3465373	0	True				
ANR	3465487	EqualityExpression	"get_bytes ( & l , sizeof ( uint64_t ) ) != sizeof ( uint64_t )"		3465373	0		!=			
ANR	3465488	CallExpression	"get_bytes ( & l , sizeof ( uint64_t ) )"		3465373	0					
ANR	3465489	Callee	get_bytes		3465373	0					
ANR	3465490	Identifier	get_bytes		3465373	0					
ANR	3465491	ArgumentList	& l		3465373	1					
ANR	3465492	Argument	& l		3465373	0					
ANR	3465493	UnaryOperationExpression	& l		3465373	0					
ANR	3465494	UnaryOperator	&		3465373	0					
ANR	3465495	Identifier	l		3465373	1					
ANR	3465496	Argument	sizeof ( uint64_t )		3465373	1					
ANR	3465497	SizeofExpression	sizeof ( uint64_t )		3465373	0					
ANR	3465498	Sizeof	sizeof		3465373	0					
ANR	3465499	SizeofOperand	uint64_t		3465373	1					
ANR	3465500	SizeofExpression	sizeof ( uint64_t )		3465373	1					
ANR	3465501	Sizeof	sizeof		3465373	0					
ANR	3465502	SizeofOperand	uint64_t		3465373	1					
ANR	3465503	ReturnStatement	return FALSE ;	1674:61:33398:33410	3465373	1	True				
ANR	3465504	Identifier	FALSE		3465373	0					
ANR	3465505	IfStatement	if ( ! hton_is_noop ( ) )		3465373	2					
ANR	3465506	Condition	! hton_is_noop ( )	1675:8:33420:33434	3465373	0	True				
ANR	3465507	UnaryOperationExpression	! hton_is_noop ( )		3465373	0					
ANR	3465508	UnaryOperator	!		3465373	0					
ANR	3465509	CallExpression	hton_is_noop ( )		3465373	1					
ANR	3465510	Callee	hton_is_noop		3465373	0					
ANR	3465511	Identifier	hton_is_noop		3465373	0					
ANR	3465512	ArgumentList			3465373	1					
ANR	3465513	CompoundStatement		29:25:766:766	3465373	1					
ANR	3465514	ExpressionStatement	l = ntohLL ( l )	1676:5:33477:33490	3465373	0	True				
ANR	3465515	AssignmentExpression	l = ntohLL ( l )		3465373	0		=			
ANR	3465516	Identifier	l		3465373	0					
ANR	3465517	CallExpression	ntohLL ( l )		3465373	1					
ANR	3465518	Callee	ntohLL		3465373	0					
ANR	3465519	Identifier	ntohLL		3465373	0					
ANR	3465520	ArgumentList	l		3465373	1					
ANR	3465521	Argument	l		3465373	0					
ANR	3465522	Identifier	l		3465373	0					
ANR	3465523	ForStatement	for ( int s = 0 ; s < INT_SIZE - ( int ) sizeof ( uint64_t ) ; s ++ )		3465373	3					
ANR	3465524	ForInit	int s = 0 ;	1679:9:33525:33532	3465373	0	True				
ANR	3465525	IdentifierDeclStatement	int s = 0 ;		3465373	0					
ANR	3465526	IdentifierDecl	s = 0		3465373	0					
ANR	3465527	IdentifierDeclType	int		3465373	0					
ANR	3465528	Identifier	s		3465373	1					
ANR	3465529	AssignmentExpression	s = 0		3465373	2		=			
ANR	3465530	Identifier	s		3465373	0					
ANR	3465531	PrimaryExpression	0		3465373	1					
ANR	3465532	Condition	s < INT_SIZE - ( int ) sizeof ( uint64_t )	1679:18:33534:33567	3465373	1	True				
ANR	3465533	RelationalExpression	s < INT_SIZE - ( int ) sizeof ( uint64_t )		3465373	0		<			
ANR	3465534	Identifier	s		3465373	0					
ANR	3465535	AdditiveExpression	INT_SIZE - ( int ) sizeof ( uint64_t )		3465373	1		-			
ANR	3465536	Identifier	INT_SIZE		3465373	0					
ANR	3465537	CastExpression	( int ) sizeof ( uint64_t )		3465373	1					
ANR	3465538	CastTarget	int		3465373	0					
ANR	3465539	SizeofExpression	sizeof ( uint64_t )		3465373	1					
ANR	3465540	Sizeof	sizeof		3465373	0					
ANR	3465541	SizeofOperand	uint64_t		3465373	1					
ANR	3465542	PostIncDecOperationExpression	s ++	1679:54:33570:33572	3465373	2	True				
ANR	3465543	Identifier	s		3465373	0					
ANR	3465544	IncDec	++		3465373	1					
ANR	3465545	CompoundStatement		33:59:904:904	3465373	3					
ANR	3465546	IfStatement	if ( pad [ s ] != 0 )		3465373	0					
ANR	3465547	Condition	pad [ s ] != 0	1680:9:33599:33609	3465373	0	True				
ANR	3465548	EqualityExpression	pad [ s ] != 0		3465373	0		!=			
ANR	3465549	ArrayIndexing	pad [ s ]		3465373	0					
ANR	3465550	Identifier	pad		3465373	0					
ANR	3465551	Identifier	s		3465373	1					
ANR	3465552	PrimaryExpression	0		3465373	1					
ANR	3465553	CompoundStatement		34:22:941:941	3465373	1					
ANR	3465554	ReturnStatement	return FALSE ;	1681:6:33620:33632	3465373	0	True				
ANR	3465555	Identifier	FALSE		3465373	0					
ANR	3465556	BreakStatement	break ;	1686:3:33678:33683	3465373	5	True				
ANR	3465557	Label	case ascii :	1688:2:33688:33698	3465373	6	True				
ANR	3465558	Identifier	ascii		3465373	0					
ANR	3465559	ReturnStatement	return FALSE ;	1689:3:33703:33715	3465373	7	True				
ANR	3465560	Identifier	FALSE		3465373	0					
ANR	3465561	ExpressionStatement	"NETWORK_TRACE ( ""get uint64_t "" << l )"	1691:4:33724:33759	3465373	3	True				
ANR	3465562	CallExpression	"NETWORK_TRACE ( ""get uint64_t "" << l )"		3465373	0					
ANR	3465563	Callee	NETWORK_TRACE		3465373	0					
ANR	3465564	Identifier	NETWORK_TRACE		3465373	0					
ANR	3465565	ArgumentList	"""get uint64_t "" << l"		3465373	1					
ANR	3465566	Argument	"""get uint64_t "" << l"		3465373	0					
ANR	3465567	ShiftExpression	"""get uint64_t "" << l"		3465373	0		<<			
ANR	3465568	PrimaryExpression	"""get uint64_t """		3465373	0					
ANR	3465569	Identifier	l		3465373	1					
ANR	3465570	ReturnStatement	return TRUE ;	1692:1:33762:33773	3465373	4	True				
ANR	3465571	Identifier	TRUE		3465373	0					
ANR	3465572	ReturnType	int		3465373	1					
ANR	3465573	Identifier	Stream :: get		3465373	2					
ANR	3465574	ParameterList	uint64_t & l		3465373	3					
ANR	3465575	Parameter	uint64_t & l	1646:13:32657:32667	3465373	0	True				
ANR	3465576	ParameterType	uint64_t &		3465373	0					
ANR	3465577	Identifier	l		3465373	1					
ANR	3465578	CFGEntryNode	ENTRY		3465373		True				
ANR	3465579	CFGExitNode	EXIT		3465373		True				
ANR	3465580	Symbol	_code		3465373						
ANR	3465581	Symbol	INT_SIZE		3465373						
ANR	3465582	Symbol	i		3465373						
ANR	3465583	Symbol	TRUE		3465373						
ANR	3465584	Symbol	l		3465373						
ANR	3465585	Symbol	get_bytes		3465373						
ANR	3465586	Symbol	pad		3465373						
ANR	3465587	Symbol	& l		3465373						
ANR	3465588	Symbol	s		3465373						
ANR	3465589	Symbol	ntohLL		3465373						
ANR	3465590	Symbol	hton_is_noop		3465373						
ANR	3465591	Symbol	get		3465373						
ANR	3465592	Symbol	FALSE		3465373						
ANR	3465593	Symbol	* pad		3465373						
ANR	3465594	Symbol	* s		3465373						
ANR	3465595	Function	Stream :: get	1697:0:33786:34104							
ANR	3465596	FunctionDef	Stream :: get (short & s)		3465595	0					
ANR	3465597	CompoundStatement		1699:0:33814:34104	3465595	0					
ANR	3465598	IdentifierDeclStatement	int i ;	1700:1:33817:33823	3465595	0	True				
ANR	3465599	IdentifierDecl	i		3465595	0					
ANR	3465600	IdentifierDeclType	int		3465595	0					
ANR	3465601	Identifier	i		3465595	1					
ANR	3465602	SwitchStatement	switch ( _code )		3465595	1					
ANR	3465603	Condition	_code	1702:8:33834:33838	3465595	0	True				
ANR	3465604	Identifier	_code		3465595	0					
ANR	3465605	CompoundStatement		4:14:25:25	3465595	1					
ANR	3465606	Label	case internal :	1703:2:33844:33857	3465595	0	True				
ANR	3465607	Identifier	internal		3465595	0					
ANR	3465608	IfStatement	"if ( get_bytes ( & s , sizeof ( short ) ) != sizeof ( short ) )"		3465595	1					
ANR	3465609	Condition	"get_bytes ( & s , sizeof ( short ) ) != sizeof ( short )"	1704:7:33866:33910	3465595	0	True				
ANR	3465610	EqualityExpression	"get_bytes ( & s , sizeof ( short ) ) != sizeof ( short )"		3465595	0		!=			
ANR	3465611	CallExpression	"get_bytes ( & s , sizeof ( short ) )"		3465595	0					
ANR	3465612	Callee	get_bytes		3465595	0					
ANR	3465613	Identifier	get_bytes		3465595	0					
ANR	3465614	ArgumentList	& s		3465595	1					
ANR	3465615	Argument	& s		3465595	0					
ANR	3465616	UnaryOperationExpression	& s		3465595	0					
ANR	3465617	UnaryOperator	&		3465595	0					
ANR	3465618	Identifier	s		3465595	1					
ANR	3465619	Argument	sizeof ( short )		3465595	1					
ANR	3465620	SizeofExpression	sizeof ( short )		3465595	0					
ANR	3465621	Sizeof	sizeof		3465595	0					
ANR	3465622	SizeofOperand	short		3465595	1					
ANR	3465623	SizeofExpression	sizeof ( short )		3465595	1					
ANR	3465624	Sizeof	sizeof		3465595	0					
ANR	3465625	SizeofOperand	short		3465595	1					
ANR	3465626	ReturnStatement	return FALSE ;	1704:54:33913:33925	3465595	1	True				
ANR	3465627	Identifier	FALSE		3465595	0					
ANR	3465628	BreakStatement	break ;	1705:3:33930:33935	3465595	2	True				
ANR	3465629	Label	case external :	1707:2:33940:33953	3465595	3	True				
ANR	3465630	Identifier	external		3465595	0					
ANR	3465631	IfStatement	if ( ! get ( i ) )		3465595	4					
ANR	3465632	Condition	! get ( i )	1708:7:33962:33968	3465595	0	True				
ANR	3465633	UnaryOperationExpression	! get ( i )		3465595	0					
ANR	3465634	UnaryOperator	!		3465595	0					
ANR	3465635	CallExpression	get ( i )		3465595	1					
ANR	3465636	Callee	get		3465595	0					
ANR	3465637	Identifier	get		3465595	0					
ANR	3465638	ArgumentList	i		3465595	1					
ANR	3465639	Argument	i		3465595	0					
ANR	3465640	Identifier	i		3465595	0					
ANR	3465641	ReturnStatement	return FALSE ;	1708:16:33971:33983	3465595	1	True				
ANR	3465642	Identifier	FALSE		3465595	0					
ANR	3465643	ExpressionStatement	s = ( short ) i	1709:3:33988:34001	3465595	5	True				
ANR	3465644	AssignmentExpression	s = ( short ) i		3465595	0		=			
ANR	3465645	Identifier	s		3465595	0					
ANR	3465646	CastExpression	( short ) i		3465595	1					
ANR	3465647	CastTarget	short		3465595	0					
ANR	3465648	Identifier	i		3465595	1					
ANR	3465649	BreakStatement	break ;	1710:3:34006:34011	3465595	6	True				
ANR	3465650	Label	case ascii :	1712:2:34016:34026	3465595	7	True				
ANR	3465651	Identifier	ascii		3465595	0					
ANR	3465652	ReturnStatement	return FALSE ;	1713:3:34031:34043	3465595	8	True				
ANR	3465653	Identifier	FALSE		3465595	0					
ANR	3465654	ExpressionStatement	"NETWORK_TRACE ( ""get short "" << s )"	1715:8:34056:34088	3465595	2	True				
ANR	3465655	CallExpression	"NETWORK_TRACE ( ""get short "" << s )"		3465595	0					
ANR	3465656	Callee	NETWORK_TRACE		3465595	0					
ANR	3465657	Identifier	NETWORK_TRACE		3465595	0					
ANR	3465658	ArgumentList	"""get short "" << s"		3465595	1					
ANR	3465659	Argument	"""get short "" << s"		3465595	0					
ANR	3465660	ShiftExpression	"""get short "" << s"		3465595	0		<<			
ANR	3465661	PrimaryExpression	"""get short """		3465595	0					
ANR	3465662	Identifier	s		3465595	1					
ANR	3465663	ReturnStatement	return TRUE ;	1716:1:34091:34102	3465595	3	True				
ANR	3465664	Identifier	TRUE		3465595	0					
ANR	3465665	ReturnType	int		3465595	1					
ANR	3465666	Identifier	Stream :: get		3465595	2					
ANR	3465667	ParameterList	short & s		3465595	3					
ANR	3465668	Parameter	short & s	1698:13:33804:33811	3465595	0	True				
ANR	3465669	ParameterType	short &		3465595	0					
ANR	3465670	Identifier	s		3465595	1					
ANR	3465671	CFGEntryNode	ENTRY		3465595		True				
ANR	3465672	CFGExitNode	EXIT		3465595		True				
ANR	3465673	Symbol	s		3465595						
ANR	3465674	Symbol	_code		3465595						
ANR	3465675	Symbol	get		3465595						
ANR	3465676	Symbol	i		3465595						
ANR	3465677	Symbol	& s		3465595						
ANR	3465678	Symbol	TRUE		3465595						
ANR	3465679	Symbol	FALSE		3465595						
ANR	3465680	Symbol	get_bytes		3465595						
ANR	3465681	Function	Stream :: get	1721:0:34109:34454							
ANR	3465682	FunctionDef	Stream :: get (unsigned short & s)		3465681	0					
ANR	3465683	CompoundStatement		1723:0:34146:34454	3465681	0					
ANR	3465684	IdentifierDeclStatement	unsigned int i ;	1724:1:34149:34164	3465681	0	True				
ANR	3465685	IdentifierDecl	i		3465681	0					
ANR	3465686	IdentifierDeclType	unsigned int		3465681	0					
ANR	3465687	Identifier	i		3465681	1					
ANR	3465688	SwitchStatement	switch ( _code )		3465681	1					
ANR	3465689	Condition	_code	1726:8:34175:34179	3465681	0	True				
ANR	3465690	Identifier	_code		3465681	0					
ANR	3465691	CompoundStatement		4:14:34:34	3465681	1					
ANR	3465692	Label	case internal :	1727:2:34185:34198	3465681	0	True				
ANR	3465693	Identifier	internal		3465681	0					
ANR	3465694	IfStatement	"if ( get_bytes ( & s , sizeof ( short ) ) != sizeof ( short ) )"		3465681	1					
ANR	3465695	Condition	"get_bytes ( & s , sizeof ( short ) ) != sizeof ( short )"	1728:7:34207:34251	3465681	0	True				
ANR	3465696	EqualityExpression	"get_bytes ( & s , sizeof ( short ) ) != sizeof ( short )"		3465681	0		!=			
ANR	3465697	CallExpression	"get_bytes ( & s , sizeof ( short ) )"		3465681	0					
ANR	3465698	Callee	get_bytes		3465681	0					
ANR	3465699	Identifier	get_bytes		3465681	0					
ANR	3465700	ArgumentList	& s		3465681	1					
ANR	3465701	Argument	& s		3465681	0					
ANR	3465702	UnaryOperationExpression	& s		3465681	0					
ANR	3465703	UnaryOperator	&		3465681	0					
ANR	3465704	Identifier	s		3465681	1					
ANR	3465705	Argument	sizeof ( short )		3465681	1					
ANR	3465706	SizeofExpression	sizeof ( short )		3465681	0					
ANR	3465707	Sizeof	sizeof		3465681	0					
ANR	3465708	SizeofOperand	short		3465681	1					
ANR	3465709	SizeofExpression	sizeof ( short )		3465681	1					
ANR	3465710	Sizeof	sizeof		3465681	0					
ANR	3465711	SizeofOperand	short		3465681	1					
ANR	3465712	ReturnStatement	return FALSE ;	1728:54:34254:34266	3465681	1	True				
ANR	3465713	Identifier	FALSE		3465681	0					
ANR	3465714	BreakStatement	break ;	1729:3:34271:34276	3465681	2	True				
ANR	3465715	Label	case external :	1731:2:34281:34294	3465681	3	True				
ANR	3465716	Identifier	external		3465681	0					
ANR	3465717	IfStatement	if ( ! get ( i ) )		3465681	4					
ANR	3465718	Condition	! get ( i )	1732:7:34303:34309	3465681	0	True				
ANR	3465719	UnaryOperationExpression	! get ( i )		3465681	0					
ANR	3465720	UnaryOperator	!		3465681	0					
ANR	3465721	CallExpression	get ( i )		3465681	1					
ANR	3465722	Callee	get		3465681	0					
ANR	3465723	Identifier	get		3465681	0					
ANR	3465724	ArgumentList	i		3465681	1					
ANR	3465725	Argument	i		3465681	0					
ANR	3465726	Identifier	i		3465681	0					
ANR	3465727	ReturnStatement	return FALSE ;	1732:16:34312:34324	3465681	1	True				
ANR	3465728	Identifier	FALSE		3465681	0					
ANR	3465729	ExpressionStatement	s = ( unsigned short ) i	1733:3:34329:34351	3465681	5	True				
ANR	3465730	AssignmentExpression	s = ( unsigned short ) i		3465681	0		=			
ANR	3465731	Identifier	s		3465681	0					
ANR	3465732	CastExpression	( unsigned short ) i		3465681	1					
ANR	3465733	CastTarget	unsigned short		3465681	0					
ANR	3465734	Identifier	i		3465681	1					
ANR	3465735	BreakStatement	break ;	1734:3:34356:34361	3465681	6	True				
ANR	3465736	Label	case ascii :	1736:2:34366:34376	3465681	7	True				
ANR	3465737	Identifier	ascii		3465681	0					
ANR	3465738	ReturnStatement	return FALSE ;	1737:3:34381:34393	3465681	8	True				
ANR	3465739	Identifier	FALSE		3465681	0					
ANR	3465740	ExpressionStatement	"NETWORK_TRACE ( ""get short "" << s )"	1739:8:34406:34438	3465681	2	True				
ANR	3465741	CallExpression	"NETWORK_TRACE ( ""get short "" << s )"		3465681	0					
ANR	3465742	Callee	NETWORK_TRACE		3465681	0					
ANR	3465743	Identifier	NETWORK_TRACE		3465681	0					
ANR	3465744	ArgumentList	"""get short "" << s"		3465681	1					
ANR	3465745	Argument	"""get short "" << s"		3465681	0					
ANR	3465746	ShiftExpression	"""get short "" << s"		3465681	0		<<			
ANR	3465747	PrimaryExpression	"""get short """		3465681	0					
ANR	3465748	Identifier	s		3465681	1					
ANR	3465749	ReturnStatement	return TRUE ;	1740:1:34441:34452	3465681	3	True				
ANR	3465750	Identifier	TRUE		3465681	0					
ANR	3465751	ReturnType	int		3465681	1					
ANR	3465752	Identifier	Stream :: get		3465681	2					
ANR	3465753	ParameterList	unsigned short & s		3465681	3					
ANR	3465754	Parameter	unsigned short & s	1722:13:34127:34143	3465681	0	True				
ANR	3465755	ParameterType	unsigned short &		3465681	0					
ANR	3465756	Identifier	s		3465681	1					
ANR	3465757	CFGEntryNode	ENTRY		3465681		True				
ANR	3465758	CFGExitNode	EXIT		3465681		True				
ANR	3465759	Symbol	s		3465681						
ANR	3465760	Symbol	_code		3465681						
ANR	3465761	Symbol	get		3465681						
ANR	3465762	Symbol	i		3465681						
ANR	3465763	Symbol	& s		3465681						
ANR	3465764	Symbol	TRUE		3465681						
ANR	3465765	Symbol	FALSE		3465681						
ANR	3465766	Symbol	get_bytes		3465681						
ANR	3465767	Function	Stream :: get	1745:0:34459:34779							
ANR	3465768	FunctionDef	Stream :: get (float & f)		3465767	0					
ANR	3465769	CompoundStatement		1747:0:34487:34779	3465767	0					
ANR	3465770	IdentifierDeclStatement	double d ;	1748:1:34490:34498	3465767	0	True				
ANR	3465771	IdentifierDecl	d		3465767	0					
ANR	3465772	IdentifierDeclType	double		3465767	0					
ANR	3465773	Identifier	d		3465767	1					
ANR	3465774	SwitchStatement	switch ( _code )		3465767	1					
ANR	3465775	Condition	_code	1750:8:34509:34513	3465767	0	True				
ANR	3465776	Identifier	_code		3465767	0					
ANR	3465777	CompoundStatement		4:14:27:27	3465767	1					
ANR	3465778	Label	case internal :	1751:2:34519:34532	3465767	0	True				
ANR	3465779	Identifier	internal		3465767	0					
ANR	3465780	IfStatement	"if ( get_bytes ( & f , sizeof ( float ) ) != sizeof ( float ) )"		3465767	1					
ANR	3465781	Condition	"get_bytes ( & f , sizeof ( float ) ) != sizeof ( float )"	1752:7:34541:34585	3465767	0	True				
ANR	3465782	EqualityExpression	"get_bytes ( & f , sizeof ( float ) ) != sizeof ( float )"		3465767	0		!=			
ANR	3465783	CallExpression	"get_bytes ( & f , sizeof ( float ) )"		3465767	0					
ANR	3465784	Callee	get_bytes		3465767	0					
ANR	3465785	Identifier	get_bytes		3465767	0					
ANR	3465786	ArgumentList	& f		3465767	1					
ANR	3465787	Argument	& f		3465767	0					
ANR	3465788	UnaryOperationExpression	& f		3465767	0					
ANR	3465789	UnaryOperator	&		3465767	0					
ANR	3465790	Identifier	f		3465767	1					
ANR	3465791	Argument	sizeof ( float )		3465767	1					
ANR	3465792	SizeofExpression	sizeof ( float )		3465767	0					
ANR	3465793	Sizeof	sizeof		3465767	0					
ANR	3465794	SizeofOperand	float		3465767	1					
ANR	3465795	SizeofExpression	sizeof ( float )		3465767	1					
ANR	3465796	Sizeof	sizeof		3465767	0					
ANR	3465797	SizeofOperand	float		3465767	1					
ANR	3465798	ReturnStatement	return FALSE ;	1752:54:34588:34600	3465767	1	True				
ANR	3465799	Identifier	FALSE		3465767	0					
ANR	3465800	BreakStatement	break ;	1753:3:34605:34610	3465767	2	True				
ANR	3465801	Label	case external :	1755:2:34615:34628	3465767	3	True				
ANR	3465802	Identifier	external		3465767	0					
ANR	3465803	IfStatement	if ( ! get ( d ) )		3465767	4					
ANR	3465804	Condition	! get ( d )	1756:7:34637:34643	3465767	0	True				
ANR	3465805	UnaryOperationExpression	! get ( d )		3465767	0					
ANR	3465806	UnaryOperator	!		3465767	0					
ANR	3465807	CallExpression	get ( d )		3465767	1					
ANR	3465808	Callee	get		3465767	0					
ANR	3465809	Identifier	get		3465767	0					
ANR	3465810	ArgumentList	d		3465767	1					
ANR	3465811	Argument	d		3465767	0					
ANR	3465812	Identifier	d		3465767	0					
ANR	3465813	ReturnStatement	return FALSE ;	1756:16:34646:34658	3465767	1	True				
ANR	3465814	Identifier	FALSE		3465767	0					
ANR	3465815	ExpressionStatement	f = ( float ) d	1757:3:34663:34676	3465767	5	True				
ANR	3465816	AssignmentExpression	f = ( float ) d		3465767	0		=			
ANR	3465817	Identifier	f		3465767	0					
ANR	3465818	CastExpression	( float ) d		3465767	1					
ANR	3465819	CastTarget	float		3465767	0					
ANR	3465820	Identifier	d		3465767	1					
ANR	3465821	BreakStatement	break ;	1758:3:34681:34686	3465767	6	True				
ANR	3465822	Label	case ascii :	1760:2:34691:34701	3465767	7	True				
ANR	3465823	Identifier	ascii		3465767	0					
ANR	3465824	ReturnStatement	return FALSE ;	1761:3:34706:34718	3465767	8	True				
ANR	3465825	Identifier	FALSE		3465767	0					
ANR	3465826	ExpressionStatement	"NETWORK_TRACE ( ""get float "" << f )"	1763:8:34731:34763	3465767	2	True				
ANR	3465827	CallExpression	"NETWORK_TRACE ( ""get float "" << f )"		3465767	0					
ANR	3465828	Callee	NETWORK_TRACE		3465767	0					
ANR	3465829	Identifier	NETWORK_TRACE		3465767	0					
ANR	3465830	ArgumentList	"""get float "" << f"		3465767	1					
ANR	3465831	Argument	"""get float "" << f"		3465767	0					
ANR	3465832	ShiftExpression	"""get float "" << f"		3465767	0		<<			
ANR	3465833	PrimaryExpression	"""get float """		3465767	0					
ANR	3465834	Identifier	f		3465767	1					
ANR	3465835	ReturnStatement	return TRUE ;	1764:1:34766:34777	3465767	3	True				
ANR	3465836	Identifier	TRUE		3465767	0					
ANR	3465837	ReturnType	int		3465767	1					
ANR	3465838	Identifier	Stream :: get		3465767	2					
ANR	3465839	ParameterList	float & f		3465767	3					
ANR	3465840	Parameter	float & f	1746:13:34477:34484	3465767	0	True				
ANR	3465841	ParameterType	float &		3465767	0					
ANR	3465842	Identifier	f		3465767	1					
ANR	3465843	CFGEntryNode	ENTRY		3465767		True				
ANR	3465844	CFGExitNode	EXIT		3465767		True				
ANR	3465845	Symbol	d		3465767						
ANR	3465846	Symbol	_code		3465767						
ANR	3465847	Symbol	f		3465767						
ANR	3465848	Symbol	get		3465767						
ANR	3465849	Symbol	TRUE		3465767						
ANR	3465850	Symbol	FALSE		3465767						
ANR	3465851	Symbol	& f		3465767						
ANR	3465852	Symbol	get_bytes		3465767						
ANR	3465853	Function	Stream :: get	1769:0:34784:35189							
ANR	3465854	FunctionDef	Stream :: get (double & d)		3465853	0					
ANR	3465855	CompoundStatement		1771:0:34813:35189	3465853	0					
ANR	3465856	IdentifierDeclStatement	"int frac , exp ;"	1772:1:34816:34830	3465853	0	True				
ANR	3465857	IdentifierDecl	frac		3465853	0					
ANR	3465858	IdentifierDeclType	int		3465853	0					
ANR	3465859	Identifier	frac		3465853	1					
ANR	3465860	IdentifierDecl	exp		3465853	1					
ANR	3465861	IdentifierDeclType	int		3465853	0					
ANR	3465862	Identifier	exp		3465853	1					
ANR	3465863	SwitchStatement	switch ( _code )		3465853	1					
ANR	3465864	Condition	_code	1774:8:34841:34845	3465853	0	True				
ANR	3465865	Identifier	_code		3465853	0					
ANR	3465866	CompoundStatement		4:14:33:33	3465853	1					
ANR	3465867	Label	case internal :	1775:2:34851:34864	3465853	0	True				
ANR	3465868	Identifier	internal		3465853	0					
ANR	3465869	IfStatement	"if ( get_bytes ( & d , sizeof ( double ) ) != sizeof ( double ) )"		3465853	1					
ANR	3465870	Condition	"get_bytes ( & d , sizeof ( double ) ) != sizeof ( double )"	1776:7:34873:34919	3465853	0	True				
ANR	3465871	EqualityExpression	"get_bytes ( & d , sizeof ( double ) ) != sizeof ( double )"		3465853	0		!=			
ANR	3465872	CallExpression	"get_bytes ( & d , sizeof ( double ) )"		3465853	0					
ANR	3465873	Callee	get_bytes		3465853	0					
ANR	3465874	Identifier	get_bytes		3465853	0					
ANR	3465875	ArgumentList	& d		3465853	1					
ANR	3465876	Argument	& d		3465853	0					
ANR	3465877	UnaryOperationExpression	& d		3465853	0					
ANR	3465878	UnaryOperator	&		3465853	0					
ANR	3465879	Identifier	d		3465853	1					
ANR	3465880	Argument	sizeof ( double )		3465853	1					
ANR	3465881	SizeofExpression	sizeof ( double )		3465853	0					
ANR	3465882	Sizeof	sizeof		3465853	0					
ANR	3465883	SizeofOperand	double		3465853	1					
ANR	3465884	SizeofExpression	sizeof ( double )		3465853	1					
ANR	3465885	Sizeof	sizeof		3465853	0					
ANR	3465886	SizeofOperand	double		3465853	1					
ANR	3465887	ReturnStatement	return FALSE ;	1776:56:34922:34934	3465853	1	True				
ANR	3465888	Identifier	FALSE		3465853	0					
ANR	3465889	BreakStatement	break ;	1777:3:34939:34944	3465853	2	True				
ANR	3465890	Label	case external :	1779:2:34949:34962	3465853	3	True				
ANR	3465891	Identifier	external		3465853	0					
ANR	3465892	IfStatement	if ( ! get ( frac ) )		3465853	4					
ANR	3465893	Condition	! get ( frac )	1780:7:34971:34980	3465853	0	True				
ANR	3465894	UnaryOperationExpression	! get ( frac )		3465853	0					
ANR	3465895	UnaryOperator	!		3465853	0					
ANR	3465896	CallExpression	get ( frac )		3465853	1					
ANR	3465897	Callee	get		3465853	0					
ANR	3465898	Identifier	get		3465853	0					
ANR	3465899	ArgumentList	frac		3465853	1					
ANR	3465900	Argument	frac		3465853	0					
ANR	3465901	Identifier	frac		3465853	0					
ANR	3465902	ReturnStatement	return FALSE ;	1780:19:34983:34995	3465853	1	True				
ANR	3465903	Identifier	FALSE		3465853	0					
ANR	3465904	IfStatement	if ( ! get ( exp ) )		3465853	5					
ANR	3465905	Condition	! get ( exp )	1781:7:35004:35012	3465853	0	True				
ANR	3465906	UnaryOperationExpression	! get ( exp )		3465853	0					
ANR	3465907	UnaryOperator	!		3465853	0					
ANR	3465908	CallExpression	get ( exp )		3465853	1					
ANR	3465909	Callee	get		3465853	0					
ANR	3465910	Identifier	get		3465853	0					
ANR	3465911	ArgumentList	exp		3465853	1					
ANR	3465912	Argument	exp		3465853	0					
ANR	3465913	Identifier	exp		3465853	0					
ANR	3465914	ReturnStatement	return FALSE ;	1781:18:35015:35027	3465853	1	True				
ANR	3465915	Identifier	FALSE		3465853	0					
ANR	3465916	ExpressionStatement	"d = ldexp ( ( ( ( double ) frac ) / ( ( double ) FRAC_CONST ) ) , exp )"	1782:3:35032:35085	3465853	6	True				
ANR	3465917	AssignmentExpression	"d = ldexp ( ( ( ( double ) frac ) / ( ( double ) FRAC_CONST ) ) , exp )"		3465853	0		=			
ANR	3465918	Identifier	d		3465853	0					
ANR	3465919	CallExpression	"ldexp ( ( ( ( double ) frac ) / ( ( double ) FRAC_CONST ) ) , exp )"		3465853	1					
ANR	3465920	Callee	ldexp		3465853	0					
ANR	3465921	Identifier	ldexp		3465853	0					
ANR	3465922	ArgumentList	( ( double ) frac ) / ( ( double ) FRAC_CONST )		3465853	1					
ANR	3465923	Argument	( ( double ) frac ) / ( ( double ) FRAC_CONST )		3465853	0					
ANR	3465924	MultiplicativeExpression	( ( double ) frac ) / ( ( double ) FRAC_CONST )		3465853	0		/			
ANR	3465925	CastExpression	( double ) frac		3465853	0					
ANR	3465926	CastTarget	double		3465853	0					
ANR	3465927	Identifier	frac		3465853	1					
ANR	3465928	CastExpression	( double ) FRAC_CONST		3465853	1					
ANR	3465929	CastTarget	double		3465853	0					
ANR	3465930	Identifier	FRAC_CONST		3465853	1					
ANR	3465931	Argument	exp		3465853	1					
ANR	3465932	Identifier	exp		3465853	0					
ANR	3465933	BreakStatement	break ;	1783:3:35090:35095	3465853	7	True				
ANR	3465934	Label	case ascii :	1785:2:35100:35110	3465853	8	True				
ANR	3465935	Identifier	ascii		3465853	0					
ANR	3465936	ReturnStatement	return FALSE ;	1786:3:35115:35127	3465853	9	True				
ANR	3465937	Identifier	FALSE		3465853	0					
ANR	3465938	ExpressionStatement	"NETWORK_TRACE ( ""get double "" << d )"	1788:8:35140:35173	3465853	2	True				
ANR	3465939	CallExpression	"NETWORK_TRACE ( ""get double "" << d )"		3465853	0					
ANR	3465940	Callee	NETWORK_TRACE		3465853	0					
ANR	3465941	Identifier	NETWORK_TRACE		3465853	0					
ANR	3465942	ArgumentList	"""get double "" << d"		3465853	1					
ANR	3465943	Argument	"""get double "" << d"		3465853	0					
ANR	3465944	ShiftExpression	"""get double "" << d"		3465853	0		<<			
ANR	3465945	PrimaryExpression	"""get double """		3465853	0					
ANR	3465946	Identifier	d		3465853	1					
ANR	3465947	ReturnStatement	return TRUE ;	1789:1:35176:35187	3465853	3	True				
ANR	3465948	Identifier	TRUE		3465853	0					
ANR	3465949	ReturnType	int		3465853	1					
ANR	3465950	Identifier	Stream :: get		3465853	2					
ANR	3465951	ParameterList	double & d		3465853	3					
ANR	3465952	Parameter	double & d	1770:13:34802:34810	3465853	0	True				
ANR	3465953	ParameterType	double &		3465853	0					
ANR	3465954	Identifier	d		3465853	1					
ANR	3465955	CFGEntryNode	ENTRY		3465853		True				
ANR	3465956	CFGExitNode	EXIT		3465853		True				
ANR	3465957	Symbol	FRAC_CONST		3465853						
ANR	3465958	Symbol	d		3465853						
ANR	3465959	Symbol	_code		3465853						
ANR	3465960	Symbol	ldexp		3465853						
ANR	3465961	Symbol	get		3465853						
ANR	3465962	Symbol	TRUE		3465853						
ANR	3465963	Symbol	& d		3465853						
ANR	3465964	Symbol	FALSE		3465853						
ANR	3465965	Symbol	exp		3465853						
ANR	3465966	Symbol	frac		3465853						
ANR	3465967	Symbol	get_bytes		3465853						
ANR	3465968	Function	Stream :: get	1803:0:35613:36108							
ANR	3465969	FunctionDef	Stream :: get (char * & s)		3465968	0					
ANR	3465970	CompoundStatement		1805:0:35641:36108	3465968	0					
ANR	3465971	IdentifierDeclStatement	char const * ptr = NULL ;	1806:1:35644:35666	3465968	0	True				
ANR	3465972	IdentifierDecl	* ptr = NULL		3465968	0					
ANR	3465973	IdentifierDeclType	char const *		3465968	0					
ANR	3465974	Identifier	ptr		3465968	1					
ANR	3465975	AssignmentExpression	* ptr = NULL		3465968	2		=			
ANR	3465976	Identifier	NULL		3465968	0					
ANR	3465977	Identifier	NULL		3465968	1					
ANR	3465978	ExpressionStatement	ASSERT ( s == NULL )	1812:1:35921:35940	3465968	1	True				
ANR	3465979	CallExpression	ASSERT ( s == NULL )		3465968	0					
ANR	3465980	Callee	ASSERT		3465968	0					
ANR	3465981	Identifier	ASSERT		3465968	0					
ANR	3465982	ArgumentList	s == NULL		3465968	1					
ANR	3465983	Argument	s == NULL		3465968	0					
ANR	3465984	EqualityExpression	s == NULL		3465968	0		==			
ANR	3465985	Identifier	s		3465968	0					
ANR	3465986	Identifier	NULL		3465968	1					
ANR	3465987	IdentifierDeclStatement	int result = get_string_ptr ( ptr ) ;	1814:1:35944:35976	3465968	2	True				
ANR	3465988	IdentifierDecl	result = get_string_ptr ( ptr )		3465968	0					
ANR	3465989	IdentifierDeclType	int		3465968	0					
ANR	3465990	Identifier	result		3465968	1					
ANR	3465991	AssignmentExpression	result = get_string_ptr ( ptr )		3465968	2		=			
ANR	3465992	Identifier	result		3465968	0					
ANR	3465993	CallExpression	get_string_ptr ( ptr )		3465968	1					
ANR	3465994	Callee	get_string_ptr		3465968	0					
ANR	3465995	Identifier	get_string_ptr		3465968	0					
ANR	3465996	ArgumentList	ptr		3465968	1					
ANR	3465997	Argument	ptr		3465968	0					
ANR	3465998	Identifier	ptr		3465968	0					
ANR	3465999	IfStatement	if ( result == TRUE )		3465968	3					
ANR	3466000	Condition	result == TRUE	1815:5:35983:35996	3465968	0	True				
ANR	3466001	EqualityExpression	result == TRUE		3465968	0		==			
ANR	3466002	Identifier	result		3465968	0					
ANR	3466003	Identifier	TRUE		3465968	1					
ANR	3466004	CompoundStatement		11:22:358:358	3465968	1					
ANR	3466005	IfStatement	if ( ptr )		3465968	0					
ANR	3466006	Condition	ptr	1816:6:36008:36010	3465968	0	True				
ANR	3466007	Identifier	ptr		3465968	0					
ANR	3466008	CompoundStatement		12:12:372:372	3465968	1					
ANR	3466009	ExpressionStatement	s = strdup ( ptr )	1817:3:36019:36034	3465968	0	True				
ANR	3466010	AssignmentExpression	s = strdup ( ptr )		3465968	0		=			
ANR	3466011	Identifier	s		3465968	0					
ANR	3466012	CallExpression	strdup ( ptr )		3465968	1					
ANR	3466013	Callee	strdup		3465968	0					
ANR	3466014	Identifier	strdup		3465968	0					
ANR	3466015	ArgumentList	ptr		3465968	1					
ANR	3466016	Argument	ptr		3465968	0					
ANR	3466017	Identifier	ptr		3465968	0					
ANR	3466018	ElseStatement	else		3465968	0					
ANR	3466019	CompoundStatement		15:7:405:405	3465968	0					
ANR	3466020	ExpressionStatement	s = NULL	1820:3:36052:36060	3465968	0	True				
ANR	3466021	AssignmentExpression	s = NULL		3465968	0		=			
ANR	3466022	Identifier	s		3465968	0					
ANR	3466023	Identifier	NULL		3465968	1					
ANR	3466024	ElseStatement	else		3465968	0					
ANR	3466025	CompoundStatement		19:6:433:433	3465968	0					
ANR	3466026	ExpressionStatement	s = NULL	1824:2:36079:36087	3465968	0	True				
ANR	3466027	AssignmentExpression	s = NULL		3465968	0		=			
ANR	3466028	Identifier	s		3465968	0					
ANR	3466029	Identifier	NULL		3465968	1					
ANR	3466030	ReturnStatement	return result ;	1826:1:36093:36106	3465968	4	True				
ANR	3466031	Identifier	result		3465968	0					
ANR	3466032	ReturnType	int		3465968	1					
ANR	3466033	Identifier	Stream :: get		3465968	2					
ANR	3466034	ParameterList	char * & s		3465968	3					
ANR	3466035	Parameter	char * & s	1804:13:35631:35638	3465968	0	True				
ANR	3466036	ParameterType	char * &		3465968	0					
ANR	3466037	Identifier	s		3465968	1					
ANR	3466038	CFGEntryNode	ENTRY		3465968		True				
ANR	3466039	CFGExitNode	EXIT		3465968		True				
ANR	3466040	Symbol	result		3465968						
ANR	3466041	Symbol	s		3465968						
ANR	3466042	Symbol	NULL		3465968						
ANR	3466043	Symbol	get_string_ptr		3465968						
ANR	3466044	Symbol	TRUE		3465968						
ANR	3466045	Symbol	strdup		3465968						
ANR	3466046	Symbol	ptr		3465968						
ANR	3466047	Function	Stream :: get	1836:0:36410:36739							
ANR	3466048	FunctionDef	"Stream :: get (char * s , int l)"		3466047	0					
ANR	3466049	CompoundStatement		1838:0:36445:36739	3466047	0					
ANR	3466050	IdentifierDeclStatement	char const * ptr = NULL ;	1839:1:36448:36470	3466047	0	True				
ANR	3466051	IdentifierDecl	* ptr = NULL		3466047	0					
ANR	3466052	IdentifierDeclType	char const *		3466047	0					
ANR	3466053	Identifier	ptr		3466047	1					
ANR	3466054	AssignmentExpression	* ptr = NULL		3466047	2		=			
ANR	3466055	Identifier	NULL		3466047	0					
ANR	3466056	Identifier	NULL		3466047	1					
ANR	3466057	ExpressionStatement	ASSERT ( s != NULL && l > 0 )	1841:1:36474:36502	3466047	1	True				
ANR	3466058	CallExpression	ASSERT ( s != NULL && l > 0 )		3466047	0					
ANR	3466059	Callee	ASSERT		3466047	0					
ANR	3466060	Identifier	ASSERT		3466047	0					
ANR	3466061	ArgumentList	s != NULL && l > 0		3466047	1					
ANR	3466062	Argument	s != NULL && l > 0		3466047	0					
ANR	3466063	AndExpression	s != NULL && l > 0		3466047	0		&&			
ANR	3466064	EqualityExpression	s != NULL		3466047	0		!=			
ANR	3466065	Identifier	s		3466047	0					
ANR	3466066	Identifier	NULL		3466047	1					
ANR	3466067	RelationalExpression	l > 0		3466047	1		>			
ANR	3466068	Identifier	l		3466047	0					
ANR	3466069	PrimaryExpression	0		3466047	1					
ANR	3466070	IdentifierDeclStatement	int result = get_string_ptr ( ptr ) ;	1843:1:36506:36538	3466047	2	True				
ANR	3466071	IdentifierDecl	result = get_string_ptr ( ptr )		3466047	0					
ANR	3466072	IdentifierDeclType	int		3466047	0					
ANR	3466073	Identifier	result		3466047	1					
ANR	3466074	AssignmentExpression	result = get_string_ptr ( ptr )		3466047	2		=			
ANR	3466075	Identifier	result		3466047	0					
ANR	3466076	CallExpression	get_string_ptr ( ptr )		3466047	1					
ANR	3466077	Callee	get_string_ptr		3466047	0					
ANR	3466078	Identifier	get_string_ptr		3466047	0					
ANR	3466079	ArgumentList	ptr		3466047	1					
ANR	3466080	Argument	ptr		3466047	0					
ANR	3466081	Identifier	ptr		3466047	0					
ANR	3466082	IfStatement	if ( result != TRUE || ! ptr )		3466047	3					
ANR	3466083	Condition	result != TRUE || ! ptr	1844:5:36545:36566	3466047	0	True				
ANR	3466084	OrExpression	result != TRUE || ! ptr		3466047	0		||			
ANR	3466085	EqualityExpression	result != TRUE		3466047	0		!=			
ANR	3466086	Identifier	result		3466047	0					
ANR	3466087	Identifier	TRUE		3466047	1					
ANR	3466088	UnaryOperationExpression	! ptr		3466047	1					
ANR	3466089	UnaryOperator	!		3466047	0					
ANR	3466090	Identifier	ptr		3466047	1					
ANR	3466091	CompoundStatement		7:30:124:124	3466047	1					
ANR	3466092	ExpressionStatement	"ptr = """""	1845:2:36574:36582	3466047	0	True				
ANR	3466093	AssignmentExpression	"ptr = """""		3466047	0		=			
ANR	3466094	Identifier	ptr		3466047	0					
ANR	3466095	PrimaryExpression	""""""		3466047	1					
ANR	3466096	IdentifierDeclStatement	int len = strlen ( ptr ) ;	1848:1:36589:36610	3466047	4	True				
ANR	3466097	IdentifierDecl	len = strlen ( ptr )		3466047	0					
ANR	3466098	IdentifierDeclType	int		3466047	0					
ANR	3466099	Identifier	len		3466047	1					
ANR	3466100	AssignmentExpression	len = strlen ( ptr )		3466047	2		=			
ANR	3466101	Identifier	len		3466047	0					
ANR	3466102	CallExpression	strlen ( ptr )		3466047	1					
ANR	3466103	Callee	strlen		3466047	0					
ANR	3466104	Identifier	strlen		3466047	0					
ANR	3466105	ArgumentList	ptr		3466047	1					
ANR	3466106	Argument	ptr		3466047	0					
ANR	3466107	Identifier	ptr		3466047	0					
ANR	3466108	IfStatement	if ( len + 1 > l )		3466047	5					
ANR	3466109	Condition	len + 1 > l	1849:5:36617:36627	3466047	0	True				
ANR	3466110	RelationalExpression	len + 1 > l		3466047	0		>			
ANR	3466111	AdditiveExpression	len + 1		3466047	0		+			
ANR	3466112	Identifier	len		3466047	0					
ANR	3466113	PrimaryExpression	1		3466047	1					
ANR	3466114	Identifier	l		3466047	1					
ANR	3466115	CompoundStatement		12:19:185:185	3466047	1					
ANR	3466116	ExpressionStatement	"strncpy ( s , ptr , l - 1 )"	1850:2:36635:36653	3466047	0	True				
ANR	3466117	CallExpression	"strncpy ( s , ptr , l - 1 )"		3466047	0					
ANR	3466118	Callee	strncpy		3466047	0					
ANR	3466119	Identifier	strncpy		3466047	0					
ANR	3466120	ArgumentList	s		3466047	1					
ANR	3466121	Argument	s		3466047	0					
ANR	3466122	Identifier	s		3466047	0					
ANR	3466123	Argument	ptr		3466047	1					
ANR	3466124	Identifier	ptr		3466047	0					
ANR	3466125	Argument	l - 1		3466047	2					
ANR	3466126	AdditiveExpression	l - 1		3466047	0		-			
ANR	3466127	Identifier	l		3466047	0					
ANR	3466128	PrimaryExpression	1		3466047	1					
ANR	3466129	ExpressionStatement	s [ l ] = '\\0'	1851:2:36657:36668	3466047	1	True				
ANR	3466130	AssignmentExpression	s [ l ] = '\\0'		3466047	0		=			
ANR	3466131	ArrayIndexing	s [ l ]		3466047	0					
ANR	3466132	Identifier	s		3466047	0					
ANR	3466133	Identifier	l		3466047	1					
ANR	3466134	PrimaryExpression	'\\0'		3466047	1					
ANR	3466135	ExpressionStatement	result = FALSE	1852:2:36672:36686	3466047	2	True				
ANR	3466136	AssignmentExpression	result = FALSE		3466047	0		=			
ANR	3466137	Identifier	result		3466047	0					
ANR	3466138	Identifier	FALSE		3466047	1					
ANR	3466139	ElseStatement	else		3466047	0					
ANR	3466140	CompoundStatement		17:6:251:251	3466047	0					
ANR	3466141	ExpressionStatement	"strncpy ( s , ptr , l )"	1855:2:36701:36717	3466047	0	True				
ANR	3466142	CallExpression	"strncpy ( s , ptr , l )"		3466047	0					
ANR	3466143	Callee	strncpy		3466047	0					
ANR	3466144	Identifier	strncpy		3466047	0					
ANR	3466145	ArgumentList	s		3466047	1					
ANR	3466146	Argument	s		3466047	0					
ANR	3466147	Identifier	s		3466047	0					
ANR	3466148	Argument	ptr		3466047	1					
ANR	3466149	Identifier	ptr		3466047	0					
ANR	3466150	Argument	l		3466047	2					
ANR	3466151	Identifier	l		3466047	0					
ANR	3466152	ReturnStatement	return result ;	1858:1:36724:36737	3466047	6	True				
ANR	3466153	Identifier	result		3466047	0					
ANR	3466154	ReturnType	int		3466047	1					
ANR	3466155	Identifier	Stream :: get		3466047	2					
ANR	3466156	ParameterList	"char * s , int l"		3466047	3					
ANR	3466157	Parameter	char * s	1837:13:36428:36434	3466047	0	True				
ANR	3466158	ParameterType	char *		3466047	0					
ANR	3466159	Identifier	s		3466047	1					
ANR	3466160	Parameter	int l	1837:22:36437:36442	3466047	1	True				
ANR	3466161	ParameterType	int		3466047	0					
ANR	3466162	Identifier	l		3466047	1					
ANR	3466163	CFGEntryNode	ENTRY		3466047		True				
ANR	3466164	CFGExitNode	EXIT		3466047		True				
ANR	3466165	Symbol	result		3466047						
ANR	3466166	Symbol	strlen		3466047						
ANR	3466167	Symbol	s		3466047						
ANR	3466168	Symbol	NULL		3466047						
ANR	3466169	Symbol	len		3466047						
ANR	3466170	Symbol	get_string_ptr		3466047						
ANR	3466171	Symbol	* l		3466047						
ANR	3466172	Symbol	TRUE		3466047						
ANR	3466173	Symbol	FALSE		3466047						
ANR	3466174	Symbol	l		3466047						
ANR	3466175	Symbol	* s		3466047						
ANR	3466176	Symbol	ptr		3466047						
ANR	3466177	Function	Stream :: get_string_ptr	1861:0:36742:38337							
ANR	3466178	FunctionDef	Stream :: get_string_ptr (char const * & s)		3466177	0					
ANR	3466179	CompoundStatement		1862:41:36787:38337	3466177	0					
ANR	3466180	IdentifierDeclStatement	char c ;	1863:1:36790:36796	3466177	0	True				
ANR	3466181	IdentifierDecl	c		3466177	0					
ANR	3466182	IdentifierDeclType	char		3466177	0					
ANR	3466183	Identifier	c		3466177	1					
ANR	3466184	IdentifierDeclStatement	void * tmp_ptr = 0 ;	1864:1:36799:36817	3466177	1	True				
ANR	3466185	IdentifierDecl	* tmp_ptr = 0		3466177	0					
ANR	3466186	IdentifierDeclType	void *		3466177	0					
ANR	3466187	Identifier	tmp_ptr		3466177	1					
ANR	3466188	AssignmentExpression	* tmp_ptr = 0		3466177	2		=			
ANR	3466189	Identifier	tmp_ptr		3466177	0					
ANR	3466190	PrimaryExpression	0		3466177	1					
ANR	3466191	IdentifierDeclStatement	int len ;	1865:4:36823:36834	3466177	2	True				
ANR	3466192	IdentifierDecl	len		3466177	0					
ANR	3466193	IdentifierDeclType	int		3466177	0					
ANR	3466194	Identifier	len		3466177	1					
ANR	3466195	ExpressionStatement	s = NULL	1867:1:36838:36846	3466177	3	True				
ANR	3466196	AssignmentExpression	s = NULL		3466177	0		=			
ANR	3466197	Identifier	s		3466177	0					
ANR	3466198	Identifier	NULL		3466177	1					
ANR	3466199	SwitchStatement	switch ( _code )		3466177	4					
ANR	3466200	Condition	_code	1868:8:36856:36860	3466177	0	True				
ANR	3466201	Identifier	_code		3466177	0					
ANR	3466202	CompoundStatement		7:14:74:74	3466177	1					
ANR	3466203	Label	case internal :	1869:2:36866:36879	3466177	0	True				
ANR	3466204	Identifier	internal		3466177	0					
ANR	3466205	Label	case external :	1870:2:36883:36896	3466177	1	True				
ANR	3466206	Identifier	external		3466177	0					
ANR	3466207	IfStatement	if ( ! get_encryption ( ) )		3466177	2					
ANR	3466208	Condition	! get_encryption ( )	1872:24:36998:37014	3466177	0	True				
ANR	3466209	UnaryOperationExpression	! get_encryption ( )		3466177	0					
ANR	3466210	UnaryOperator	!		3466177	0					
ANR	3466211	CallExpression	get_encryption ( )		3466177	1					
ANR	3466212	Callee	get_encryption		3466177	0					
ANR	3466213	Identifier	get_encryption		3466177	0					
ANR	3466214	ArgumentList			3466177	1					
ANR	3466215	CompoundStatement		11:43:229:229	3466177	1					
ANR	3466216	IfStatement	if ( ! peek ( c ) )		3466177	0					
ANR	3466217	Condition	! peek ( c )	1873:28:37047:37054	3466177	0	True				
ANR	3466218	UnaryOperationExpression	! peek ( c )		3466177	0					
ANR	3466219	UnaryOperator	!		3466177	0					
ANR	3466220	CallExpression	peek ( c )		3466177	1					
ANR	3466221	Callee	peek		3466177	0					
ANR	3466222	Identifier	peek		3466177	0					
ANR	3466223	ArgumentList	c		3466177	1					
ANR	3466224	Argument	c		3466177	0					
ANR	3466225	Identifier	c		3466177	0					
ANR	3466226	ReturnStatement	return FALSE ;	1873:38:37057:37069	3466177	1	True				
ANR	3466227	Identifier	FALSE		3466177	0					
ANR	3466228	IfStatement	if ( c == '\\255' )		3466177	1					
ANR	3466229	Condition	c == '\\255'	1874:28:37099:37109	3466177	0	True				
ANR	3466230	EqualityExpression	c == '\\255'		3466177	0		==			
ANR	3466231	Identifier	c		3466177	0					
ANR	3466232	PrimaryExpression	'\\255'		3466177	1					
ANR	3466233	CompoundStatement		13:40:323:323	3466177	1					
ANR	3466234	IfStatement	"if ( get_bytes ( & c , 1 ) != 1 )"		3466177	0					
ANR	3466235	Condition	"get_bytes ( & c , 1 ) != 1"	1875:32:37145:37165	3466177	0	True				
ANR	3466236	EqualityExpression	"get_bytes ( & c , 1 ) != 1"		3466177	0		!=			
ANR	3466237	CallExpression	"get_bytes ( & c , 1 )"		3466177	0					
ANR	3466238	Callee	get_bytes		3466177	0					
ANR	3466239	Identifier	get_bytes		3466177	0					
ANR	3466240	ArgumentList	& c		3466177	1					
ANR	3466241	Argument	& c		3466177	0					
ANR	3466242	UnaryOperationExpression	& c		3466177	0					
ANR	3466243	UnaryOperator	&		3466177	0					
ANR	3466244	Identifier	c		3466177	1					
ANR	3466245	Argument	1		3466177	1					
ANR	3466246	PrimaryExpression	1		3466177	0					
ANR	3466247	PrimaryExpression	1		3466177	1					
ANR	3466248	ReturnStatement	return FALSE ;	1875:55:37168:37180	3466177	1	True				
ANR	3466249	Identifier	FALSE		3466177	0					
ANR	3466250	ExpressionStatement	s = NULL	1876:7:37189:37197	3466177	1	True				
ANR	3466251	AssignmentExpression	s = NULL		3466177	0		=			
ANR	3466252	Identifier	s		3466177	0					
ANR	3466253	Identifier	NULL		3466177	1					
ANR	3466254	ElseStatement	else		3466177	0					
ANR	3466255	CompoundStatement		17:28:465:465	3466177	0					
ANR	3466256	IfStatement	"if ( get_ptr ( tmp_ptr , '\\0' ) <= 0 )"		3466177	0					
ANR	3466257	Condition	"get_ptr ( tmp_ptr , '\\0' ) <= 0"	1879:32:37287:37313	3466177	0	True				
ANR	3466258	RelationalExpression	"get_ptr ( tmp_ptr , '\\0' ) <= 0"		3466177	0		<=			
ANR	3466259	CallExpression	"get_ptr ( tmp_ptr , '\\0' )"		3466177	0					
ANR	3466260	Callee	get_ptr		3466177	0					
ANR	3466261	Identifier	get_ptr		3466177	0					
ANR	3466262	ArgumentList	tmp_ptr		3466177	1					
ANR	3466263	Argument	tmp_ptr		3466177	0					
ANR	3466264	Identifier	tmp_ptr		3466177	0					
ANR	3466265	Argument	'\\0'		3466177	1					
ANR	3466266	PrimaryExpression	'\\0'		3466177	0					
ANR	3466267	PrimaryExpression	0		3466177	1					
ANR	3466268	ReturnStatement	return FALSE ;	1879:61:37316:37328	3466177	1	True				
ANR	3466269	Identifier	FALSE		3466177	0					
ANR	3466270	ExpressionStatement	s = ( char * ) tmp_ptr	1880:7:37337:37356	3466177	1	True				
ANR	3466271	AssignmentExpression	s = ( char * ) tmp_ptr		3466177	0		=			
ANR	3466272	Identifier	s		3466177	0					
ANR	3466273	CastExpression	( char * ) tmp_ptr		3466177	1					
ANR	3466274	CastTarget	char *		3466177	0					
ANR	3466275	Identifier	tmp_ptr		3466177	1					
ANR	3466276	ElseStatement	else		3466177	0					
ANR	3466277	CompoundStatement		22:25:643:643	3466177	0					
ANR	3466278	IfStatement	if ( get ( len ) == FALSE )		3466177	0					
ANR	3466279	Condition	get ( len ) == FALSE	1885:28:37537:37553	3466177	0	True				
ANR	3466280	EqualityExpression	get ( len ) == FALSE		3466177	0		==			
ANR	3466281	CallExpression	get ( len )		3466177	0					
ANR	3466282	Callee	get		3466177	0					
ANR	3466283	Identifier	get		3466177	0					
ANR	3466284	ArgumentList	len		3466177	1					
ANR	3466285	Argument	len		3466177	0					
ANR	3466286	Identifier	len		3466177	0					
ANR	3466287	Identifier	FALSE		3466177	1					
ANR	3466288	CompoundStatement		24:47:768:768	3466177	1					
ANR	3466289	ReturnStatement	return FALSE ;	1886:28:37586:37598	3466177	0	True				
ANR	3466290	Identifier	FALSE		3466177	0					
ANR	3466291	IfStatement	if ( ! decrypt_buf || decrypt_buf_len < len )		3466177	1					
ANR	3466292	Condition	! decrypt_buf || decrypt_buf_len < len	1889:10:37637:37673	3466177	0	True				
ANR	3466293	OrExpression	! decrypt_buf || decrypt_buf_len < len		3466177	0		||			
ANR	3466294	UnaryOperationExpression	! decrypt_buf		3466177	0					
ANR	3466295	UnaryOperator	!		3466177	0					
ANR	3466296	Identifier	decrypt_buf		3466177	1					
ANR	3466297	RelationalExpression	decrypt_buf_len < len		3466177	1		<			
ANR	3466298	Identifier	decrypt_buf_len		3466177	0					
ANR	3466299	Identifier	len		3466177	1					
ANR	3466300	CompoundStatement		28:50:889:889	3466177	1					
ANR	3466301	ExpressionStatement	free ( decrypt_buf )	1890:7:37686:37705	3466177	0	True				
ANR	3466302	CallExpression	free ( decrypt_buf )		3466177	0					
ANR	3466303	Callee	free		3466177	0					
ANR	3466304	Identifier	free		3466177	0					
ANR	3466305	ArgumentList	decrypt_buf		3466177	1					
ANR	3466306	Argument	decrypt_buf		3466177	0					
ANR	3466307	Identifier	decrypt_buf		3466177	0					
ANR	3466308	ExpressionStatement	decrypt_buf = ( char * ) malloc ( len )	1891:7:37714:37747	3466177	1	True				
ANR	3466309	AssignmentExpression	decrypt_buf = ( char * ) malloc ( len )		3466177	0		=			
ANR	3466310	Identifier	decrypt_buf		3466177	0					
ANR	3466311	CastExpression	( char * ) malloc ( len )		3466177	1					
ANR	3466312	CastTarget	char *		3466177	0					
ANR	3466313	CallExpression	malloc ( len )		3466177	1					
ANR	3466314	Callee	malloc		3466177	0					
ANR	3466315	Identifier	malloc		3466177	0					
ANR	3466316	ArgumentList	len		3466177	1					
ANR	3466317	Argument	len		3466177	0					
ANR	3466318	Identifier	len		3466177	0					
ANR	3466319	ExpressionStatement	ASSERT ( decrypt_buf )	1892:7:37756:37777	3466177	2	True				
ANR	3466320	CallExpression	ASSERT ( decrypt_buf )		3466177	0					
ANR	3466321	Callee	ASSERT		3466177	0					
ANR	3466322	Identifier	ASSERT		3466177	0					
ANR	3466323	ArgumentList	decrypt_buf		3466177	1					
ANR	3466324	Argument	decrypt_buf		3466177	0					
ANR	3466325	Identifier	decrypt_buf		3466177	0					
ANR	3466326	ExpressionStatement	decrypt_buf_len = len	1893:7:37786:37807	3466177	3	True				
ANR	3466327	AssignmentExpression	decrypt_buf_len = len		3466177	0		=			
ANR	3466328	Identifier	decrypt_buf_len		3466177	0					
ANR	3466329	Identifier	len		3466177	1					
ANR	3466330	IfStatement	"if ( get_bytes ( decrypt_buf , len ) != len )"		3466177	2					
ANR	3466331	Condition	"get_bytes ( decrypt_buf , len ) != len"	1896:28:37846:37879	3466177	0	True				
ANR	3466332	EqualityExpression	"get_bytes ( decrypt_buf , len ) != len"		3466177	0		!=			
ANR	3466333	CallExpression	"get_bytes ( decrypt_buf , len )"		3466177	0					
ANR	3466334	Callee	get_bytes		3466177	0					
ANR	3466335	Identifier	get_bytes		3466177	0					
ANR	3466336	ArgumentList	decrypt_buf		3466177	1					
ANR	3466337	Argument	decrypt_buf		3466177	0					
ANR	3466338	Identifier	decrypt_buf		3466177	0					
ANR	3466339	Argument	len		3466177	1					
ANR	3466340	Identifier	len		3466177	0					
ANR	3466341	Identifier	len		3466177	1					
ANR	3466342	CompoundStatement		35:65:1095:1095	3466177	1					
ANR	3466343	ReturnStatement	return FALSE ;	1897:28:37913:37925	3466177	0	True				
ANR	3466344	Identifier	FALSE		3466177	0					
ANR	3466345	IfStatement	if ( * decrypt_buf == '\\255' )		3466177	3					
ANR	3466346	Condition	* decrypt_buf == '\\255'	1900:28:37982:38003	3466177	0	True				
ANR	3466347	EqualityExpression	* decrypt_buf == '\\255'		3466177	0		==			
ANR	3466348	UnaryOperationExpression	* decrypt_buf		3466177	0					
ANR	3466349	UnaryOperator	*		3466177	0					
ANR	3466350	Identifier	decrypt_buf		3466177	1					
ANR	3466351	PrimaryExpression	'\\255'		3466177	1					
ANR	3466352	CompoundStatement		39:53:1219:1219	3466177	1					
ANR	3466353	ExpressionStatement	s = NULL	1901:7:38016:38024	3466177	0	True				
ANR	3466354	AssignmentExpression	s = NULL		3466177	0		=			
ANR	3466355	Identifier	s		3466177	0					
ANR	3466356	Identifier	NULL		3466177	1					
ANR	3466357	ElseStatement	else		3466177	0					
ANR	3466358	CompoundStatement		42:29:1293:1293	3466177	0					
ANR	3466359	ExpressionStatement	s = decrypt_buf	1904:7:38090:38105	3466177	0	True				
ANR	3466360	AssignmentExpression	s = decrypt_buf		3466177	0		=			
ANR	3466361	Identifier	s		3466177	0					
ANR	3466362	Identifier	decrypt_buf		3466177	1					
ANR	3466363	BreakStatement	break ;	1907:20:38175:38180	3466177	3	True				
ANR	3466364	Label	case ascii :	1909:2:38185:38195	3466177	4	True				
ANR	3466365	Identifier	ascii		3466177	0					
ANR	3466366	ReturnStatement	return FALSE ;	1910:3:38200:38212	3466177	5	True				
ANR	3466367	Identifier	FALSE		3466177	0					
ANR	3466368	IfStatement	if ( s )		3466177	5					
ANR	3466369	Condition	s	1912:5:38222:38222	3466177	0	True				
ANR	3466370	Identifier	s		3466177	0					
ANR	3466371	CompoundStatement		51:9:1438:1438	3466177	1					
ANR	3466372	ExpressionStatement	"NETWORK_TRACE ( ""get string ptr "" << s )"	1913:2:38230:38267	3466177	0	True				
ANR	3466373	CallExpression	"NETWORK_TRACE ( ""get string ptr "" << s )"		3466177	0					
ANR	3466374	Callee	NETWORK_TRACE		3466177	0					
ANR	3466375	Identifier	NETWORK_TRACE		3466177	0					
ANR	3466376	ArgumentList	"""get string ptr "" << s"		3466177	1					
ANR	3466377	Argument	"""get string ptr "" << s"		3466177	0					
ANR	3466378	ShiftExpression	"""get string ptr "" << s"		3466177	0		<<			
ANR	3466379	PrimaryExpression	"""get string ptr """		3466177	0					
ANR	3466380	Identifier	s		3466177	1					
ANR	3466381	ElseStatement	else		3466177	0					
ANR	3466382	CompoundStatement		54:6:1490:1490	3466177	0					
ANR	3466383	ExpressionStatement	"NETWORK_TRACE ( ""get string ptr NULL"" )"	1916:2:38282:38318	3466177	0	True				
ANR	3466384	CallExpression	"NETWORK_TRACE ( ""get string ptr NULL"" )"		3466177	0					
ANR	3466385	Callee	NETWORK_TRACE		3466177	0					
ANR	3466386	Identifier	NETWORK_TRACE		3466177	0					
ANR	3466387	ArgumentList	"""get string ptr NULL"""		3466177	1					
ANR	3466388	Argument	"""get string ptr NULL"""		3466177	0					
ANR	3466389	PrimaryExpression	"""get string ptr NULL"""		3466177	0					
ANR	3466390	ReturnStatement	return TRUE ;	1918:1:38324:38335	3466177	6	True				
ANR	3466391	Identifier	TRUE		3466177	0					
ANR	3466392	ReturnType	int		3466177	1					
ANR	3466393	Identifier	Stream :: get_string_ptr		3466177	2					
ANR	3466394	ParameterList	char const * & s		3466177	3					
ANR	3466395	Parameter	char const * & s	1862:24:36770:36783	3466177	0	True				
ANR	3466396	ParameterType	char const * &		3466177	0					
ANR	3466397	Identifier	s		3466177	1					
ANR	3466398	CFGEntryNode	ENTRY		3466177		True				
ANR	3466399	CFGExitNode	EXIT		3466177		True				
ANR	3466400	Symbol	malloc		3466177						
ANR	3466401	Symbol	c		3466177						
ANR	3466402	Symbol	NULL		3466177						
ANR	3466403	Symbol	_code		3466177						
ANR	3466404	Symbol	& c		3466177						
ANR	3466405	Symbol	TRUE		3466177						
ANR	3466406	Symbol	decrypt_buf_len		3466177						
ANR	3466407	Symbol	* decrypt_buf		3466177						
ANR	3466408	Symbol	tmp_ptr		3466177						
ANR	3466409	Symbol	decrypt_buf		3466177						
ANR	3466410	Symbol	get_encryption		3466177						
ANR	3466411	Symbol	get_bytes		3466177						
ANR	3466412	Symbol	peek		3466177						
ANR	3466413	Symbol	get_ptr		3466177						
ANR	3466414	Symbol	s		3466177						
ANR	3466415	Symbol	len		3466177						
ANR	3466416	Symbol	get		3466177						
ANR	3466417	Symbol	FALSE		3466177						
ANR	3466418	Function	Stream :: get	1930:0:38738:38953							
ANR	3466419	FunctionDef	Stream :: get (MyString & s)		3466418	0					
ANR	3466420	CompoundStatement		1932:0:38769:38953	3466418	0					
ANR	3466421	IdentifierDeclStatement	char const * ptr = NULL ;	1933:1:38772:38794	3466418	0	True				
ANR	3466422	IdentifierDecl	* ptr = NULL		3466418	0					
ANR	3466423	IdentifierDeclType	char const *		3466418	0					
ANR	3466424	Identifier	ptr		3466418	1					
ANR	3466425	AssignmentExpression	* ptr = NULL		3466418	2		=			
ANR	3466426	Identifier	NULL		3466418	0					
ANR	3466427	Identifier	NULL		3466418	1					
ANR	3466428	IdentifierDeclStatement	int result = get_string_ptr ( ptr ) ;	1934:1:38797:38829	3466418	1	True				
ANR	3466429	IdentifierDecl	result = get_string_ptr ( ptr )		3466418	0					
ANR	3466430	IdentifierDeclType	int		3466418	0					
ANR	3466431	Identifier	result		3466418	1					
ANR	3466432	AssignmentExpression	result = get_string_ptr ( ptr )		3466418	2		=			
ANR	3466433	Identifier	result		3466418	0					
ANR	3466434	CallExpression	get_string_ptr ( ptr )		3466418	1					
ANR	3466435	Callee	get_string_ptr		3466418	0					
ANR	3466436	Identifier	get_string_ptr		3466418	0					
ANR	3466437	ArgumentList	ptr		3466418	1					
ANR	3466438	Argument	ptr		3466418	0					
ANR	3466439	Identifier	ptr		3466418	0					
ANR	3466440	IfStatement	if ( result == TRUE )		3466418	2					
ANR	3466441	Condition	result == TRUE	1935:5:38836:38849	3466418	0	True				
ANR	3466442	EqualityExpression	result == TRUE		3466418	0		==			
ANR	3466443	Identifier	result		3466418	0					
ANR	3466444	Identifier	TRUE		3466418	1					
ANR	3466445	CompoundStatement		4:22:83:83	3466418	1					
ANR	3466446	IfStatement	if ( ptr )		3466418	0					
ANR	3466447	Condition	ptr	1936:6:38861:38863	3466418	0	True				
ANR	3466448	Identifier	ptr		3466418	0					
ANR	3466449	CompoundStatement		5:12:97:97	3466418	1					
ANR	3466450	ExpressionStatement	s = ptr	1937:3:38872:38879	3466418	0	True				
ANR	3466451	AssignmentExpression	s = ptr		3466418	0		=			
ANR	3466452	Identifier	s		3466418	0					
ANR	3466453	Identifier	ptr		3466418	1					
ANR	3466454	ElseStatement	else		3466418	0					
ANR	3466455	CompoundStatement		8:7:122:122	3466418	0					
ANR	3466456	ExpressionStatement	s = NULL	1940:3:38897:38905	3466418	0	True				
ANR	3466457	AssignmentExpression	s = NULL		3466418	0		=			
ANR	3466458	Identifier	s		3466418	0					
ANR	3466459	Identifier	NULL		3466418	1					
ANR	3466460	ElseStatement	else		3466418	0					
ANR	3466461	CompoundStatement		12:6:150:150	3466418	0					
ANR	3466462	ExpressionStatement	s = NULL	1944:2:38924:38932	3466418	0	True				
ANR	3466463	AssignmentExpression	s = NULL		3466418	0		=			
ANR	3466464	Identifier	s		3466418	0					
ANR	3466465	Identifier	NULL		3466418	1					
ANR	3466466	ReturnStatement	return result ;	1946:1:38938:38951	3466418	3	True				
ANR	3466467	Identifier	result		3466418	0					
ANR	3466468	ReturnType	int		3466418	1					
ANR	3466469	Identifier	Stream :: get		3466418	2					
ANR	3466470	ParameterList	MyString & s		3466418	3					
ANR	3466471	Parameter	MyString & s	1931:13:38756:38766	3466418	0	True				
ANR	3466472	ParameterType	MyString &		3466418	0					
ANR	3466473	Identifier	s		3466418	1					
ANR	3466474	CFGEntryNode	ENTRY		3466418		True				
ANR	3466475	CFGExitNode	EXIT		3466418		True				
ANR	3466476	Symbol	result		3466418						
ANR	3466477	Symbol	s		3466418						
ANR	3466478	Symbol	NULL		3466418						
ANR	3466479	Symbol	get_string_ptr		3466418						
ANR	3466480	Symbol	TRUE		3466418						
ANR	3466481	Symbol	ptr		3466418						
ANR	3466482	Function	Stream :: get	1949:0:38956:39170							
ANR	3466483	FunctionDef	Stream :: get (std :: string & s)		3466482	0					
ANR	3466484	CompoundStatement		1951:0:38990:39170	3466482	0					
ANR	3466485	IdentifierDeclStatement	char const * ptr = NULL ;	1952:1:38993:39015	3466482	0	True				
ANR	3466486	IdentifierDecl	* ptr = NULL		3466482	0					
ANR	3466487	IdentifierDeclType	char const *		3466482	0					
ANR	3466488	Identifier	ptr		3466482	1					
ANR	3466489	AssignmentExpression	* ptr = NULL		3466482	2		=			
ANR	3466490	Identifier	NULL		3466482	0					
ANR	3466491	Identifier	NULL		3466482	1					
ANR	3466492	IdentifierDeclStatement	int result = get_string_ptr ( ptr ) ;	1953:1:39018:39050	3466482	1	True				
ANR	3466493	IdentifierDecl	result = get_string_ptr ( ptr )		3466482	0					
ANR	3466494	IdentifierDeclType	int		3466482	0					
ANR	3466495	Identifier	result		3466482	1					
ANR	3466496	AssignmentExpression	result = get_string_ptr ( ptr )		3466482	2		=			
ANR	3466497	Identifier	result		3466482	0					
ANR	3466498	CallExpression	get_string_ptr ( ptr )		3466482	1					
ANR	3466499	Callee	get_string_ptr		3466482	0					
ANR	3466500	Identifier	get_string_ptr		3466482	0					
ANR	3466501	ArgumentList	ptr		3466482	1					
ANR	3466502	Argument	ptr		3466482	0					
ANR	3466503	Identifier	ptr		3466482	0					
ANR	3466504	IfStatement	if ( result == TRUE )		3466482	2					
ANR	3466505	Condition	result == TRUE	1954:5:39057:39070	3466482	0	True				
ANR	3466506	EqualityExpression	result == TRUE		3466482	0		==			
ANR	3466507	Identifier	result		3466482	0					
ANR	3466508	Identifier	TRUE		3466482	1					
ANR	3466509	CompoundStatement		4:22:83:83	3466482	1					
ANR	3466510	IfStatement	if ( ptr )		3466482	0					
ANR	3466511	Condition	ptr	1955:6:39082:39084	3466482	0	True				
ANR	3466512	Identifier	ptr		3466482	0					
ANR	3466513	CompoundStatement		5:12:97:97	3466482	1					
ANR	3466514	ExpressionStatement	s = ptr	1956:3:39093:39100	3466482	0	True				
ANR	3466515	AssignmentExpression	s = ptr		3466482	0		=			
ANR	3466516	Identifier	s		3466482	0					
ANR	3466517	Identifier	ptr		3466482	1					
ANR	3466518	ElseStatement	else		3466482	0					
ANR	3466519	CompoundStatement		8:7:122:122	3466482	0					
ANR	3466520	ExpressionStatement	"s = """""	1959:3:39118:39124	3466482	0	True				
ANR	3466521	AssignmentExpression	"s = """""		3466482	0		=			
ANR	3466522	Identifier	s		3466482	0					
ANR	3466523	PrimaryExpression	""""""		3466482	1					
ANR	3466524	ElseStatement	else		3466482	0					
ANR	3466525	CompoundStatement		12:6:148:148	3466482	0					
ANR	3466526	ExpressionStatement	"s = """""	1963:2:39143:39149	3466482	0	True				
ANR	3466527	AssignmentExpression	"s = """""		3466482	0		=			
ANR	3466528	Identifier	s		3466482	0					
ANR	3466529	PrimaryExpression	""""""		3466482	1					
ANR	3466530	ReturnStatement	return result ;	1965:1:39155:39168	3466482	3	True				
ANR	3466531	Identifier	result		3466482	0					
ANR	3466532	ReturnType	int		3466482	1					
ANR	3466533	Identifier	Stream :: get		3466482	2					
ANR	3466534	ParameterList	std :: string & s		3466482	3					
ANR	3466535	Parameter	std :: string & s	1950:13:38974:38987	3466482	0	True				
ANR	3466536	ParameterType	std :: string &		3466482	0					
ANR	3466537	Identifier	s		3466482	1					
ANR	3466538	CFGEntryNode	ENTRY		3466482		True				
ANR	3466539	CFGExitNode	EXIT		3466482		True				
ANR	3466540	Symbol	result		3466482						
ANR	3466541	Symbol	s		3466482						
ANR	3466542	Symbol	NULL		3466482						
ANR	3466543	Symbol	get_string_ptr		3466482						
ANR	3466544	Symbol	TRUE		3466482						
ANR	3466545	Symbol	ptr		3466482						
ANR	3466546	Function	Stream :: snd_int	1968:0:39173:39368							
ANR	3466547	FunctionDef	"Stream :: snd_int (int val , int end_of_record)"		3466546	0					
ANR	3466548	CompoundStatement		1973:0:39228:39368	3466546	0					
ANR	3466549	ExpressionStatement	encode ( )	1974:1:39231:39239	3466546	0	True				
ANR	3466550	CallExpression	encode ( )		3466546	0					
ANR	3466551	Callee	encode		3466546	0					
ANR	3466552	Identifier	encode		3466546	0					
ANR	3466553	ArgumentList			3466546	1					
ANR	3466554	IfStatement	if ( ! code ( val ) )		3466546	1					
ANR	3466555	Condition	! code ( val )	1975:5:39246:39255	3466546	0	True				
ANR	3466556	UnaryOperationExpression	! code ( val )		3466546	0					
ANR	3466557	UnaryOperator	!		3466546	0					
ANR	3466558	CallExpression	code ( val )		3466546	1					
ANR	3466559	Callee	code		3466546	0					
ANR	3466560	Identifier	code		3466546	0					
ANR	3466561	ArgumentList	val		3466546	1					
ANR	3466562	Argument	val		3466546	0					
ANR	3466563	Identifier	val		3466546	0					
ANR	3466564	CompoundStatement		3:17:29:29	3466546	1					
ANR	3466565	ReturnStatement	return FALSE ;	1976:2:39262:39274	3466546	0	True				
ANR	3466566	Identifier	FALSE		3466546	0					
ANR	3466567	IfStatement	if ( end_of_record )		3466546	2					
ANR	3466568	Condition	end_of_record	1979:5:39285:39297	3466546	0	True				
ANR	3466569	Identifier	end_of_record		3466546	0					
ANR	3466570	CompoundStatement		7:20:71:71	3466546	1					
ANR	3466571	IfStatement	if ( ! end_of_message ( ) )		3466546	0					
ANR	3466572	Condition	! end_of_message ( )	1980:6:39308:39324	3466546	0	True				
ANR	3466573	UnaryOperationExpression	! end_of_message ( )		3466546	0					
ANR	3466574	UnaryOperator	!		3466546	0					
ANR	3466575	CallExpression	end_of_message ( )		3466546	1					
ANR	3466576	Callee	end_of_message		3466546	0					
ANR	3466577	Identifier	end_of_message		3466546	0					
ANR	3466578	ArgumentList			3466546	1					
ANR	3466579	CompoundStatement		8:25:98:98	3466546	1					
ANR	3466580	ReturnStatement	return FALSE ;	1981:3:39332:39344	3466546	0	True				
ANR	3466581	Identifier	FALSE		3466546	0					
ANR	3466582	ReturnStatement	return TRUE ;	1985:1:39355:39366	3466546	3	True				
ANR	3466583	Identifier	TRUE		3466546	0					
ANR	3466584	ReturnType	int		3466546	1					
ANR	3466585	Identifier	Stream :: snd_int		3466546	2					
ANR	3466586	ParameterList	"int val , int end_of_record"		3466546	3					
ANR	3466587	Parameter	int val	1970:1:39196:39202	3466546	0	True				
ANR	3466588	ParameterType	int		3466546	0					
ANR	3466589	Identifier	val		3466546	1					
ANR	3466590	Parameter	int end_of_record	1971:1:39207:39223	3466546	1	True				
ANR	3466591	ParameterType	int		3466546	0					
ANR	3466592	Identifier	end_of_record		3466546	1					
ANR	3466593	CFGEntryNode	ENTRY		3466546		True				
ANR	3466594	CFGExitNode	EXIT		3466546		True				
ANR	3466595	Symbol	val		3466546						
ANR	3466596	Symbol	end_of_record		3466546						
ANR	3466597	Symbol	code		3466546						
ANR	3466598	Symbol	end_of_message		3466546						
ANR	3466599	Symbol	TRUE		3466546						
ANR	3466600	Symbol	FALSE		3466546						
ANR	3466601	Function	Stream :: rcv_int	1989:0:39372:39567							
ANR	3466602	FunctionDef	"Stream :: rcv_int (int & val , int end_of_record)"		3466601	0					
ANR	3466603	CompoundStatement		1994:0:39427:39567	3466601	0					
ANR	3466604	ExpressionStatement	decode ( )	1995:1:39430:39438	3466601	0	True				
ANR	3466605	CallExpression	decode ( )		3466601	0					
ANR	3466606	Callee	decode		3466601	0					
ANR	3466607	Identifier	decode		3466601	0					
ANR	3466608	ArgumentList			3466601	1					
ANR	3466609	IfStatement	if ( ! code ( val ) )		3466601	1					
ANR	3466610	Condition	! code ( val )	1996:5:39445:39454	3466601	0	True				
ANR	3466611	UnaryOperationExpression	! code ( val )		3466601	0					
ANR	3466612	UnaryOperator	!		3466601	0					
ANR	3466613	CallExpression	code ( val )		3466601	1					
ANR	3466614	Callee	code		3466601	0					
ANR	3466615	Identifier	code		3466601	0					
ANR	3466616	ArgumentList	val		3466601	1					
ANR	3466617	Argument	val		3466601	0					
ANR	3466618	Identifier	val		3466601	0					
ANR	3466619	CompoundStatement		3:17:29:29	3466601	1					
ANR	3466620	ReturnStatement	return FALSE ;	1997:2:39461:39473	3466601	0	True				
ANR	3466621	Identifier	FALSE		3466601	0					
ANR	3466622	IfStatement	if ( end_of_record )		3466601	2					
ANR	3466623	Condition	end_of_record	2000:5:39484:39496	3466601	0	True				
ANR	3466624	Identifier	end_of_record		3466601	0					
ANR	3466625	CompoundStatement		7:20:71:71	3466601	1					
ANR	3466626	IfStatement	if ( ! end_of_message ( ) )		3466601	0					
ANR	3466627	Condition	! end_of_message ( )	2001:6:39507:39523	3466601	0	True				
ANR	3466628	UnaryOperationExpression	! end_of_message ( )		3466601	0					
ANR	3466629	UnaryOperator	!		3466601	0					
ANR	3466630	CallExpression	end_of_message ( )		3466601	1					
ANR	3466631	Callee	end_of_message		3466601	0					
ANR	3466632	Identifier	end_of_message		3466601	0					
ANR	3466633	ArgumentList			3466601	1					
ANR	3466634	CompoundStatement		8:25:98:98	3466601	1					
ANR	3466635	ReturnStatement	return FALSE ;	2002:3:39531:39543	3466601	0	True				
ANR	3466636	Identifier	FALSE		3466601	0					
ANR	3466637	ReturnStatement	return TRUE ;	2006:1:39554:39565	3466601	3	True				
ANR	3466638	Identifier	TRUE		3466601	0					
ANR	3466639	ReturnType	int		3466601	1					
ANR	3466640	Identifier	Stream :: rcv_int		3466601	2					
ANR	3466641	ParameterList	"int & val , int end_of_record"		3466601	3					
ANR	3466642	Parameter	int & val	1991:1:39395:39402	3466601	0	True				
ANR	3466643	ParameterType	int &		3466601	0					
ANR	3466644	Identifier	val		3466601	1					
ANR	3466645	Parameter	int end_of_record	1992:1:39406:39422	3466601	1	True				
ANR	3466646	ParameterType	int		3466601	0					
ANR	3466647	Identifier	end_of_record		3466601	1					
ANR	3466648	CFGEntryNode	ENTRY		3466601		True				
ANR	3466649	CFGExitNode	EXIT		3466601		True				
ANR	3466650	Symbol	val		3466601						
ANR	3466651	Symbol	end_of_record		3466601						
ANR	3466652	Symbol	code		3466601						
ANR	3466653	Symbol	end_of_message		3466601						
ANR	3466654	Symbol	TRUE		3466601						
ANR	3466655	Symbol	FALSE		3466601						
ANR	3466656	Function	Stream :: allow_one_empty_message	2009:0:39570:39646							
ANR	3466657	FunctionDef	Stream :: allow_one_empty_message ()		3466656	0					
ANR	3466658	CompoundStatement		2011:0:39610:39646	3466656	0					
ANR	3466659	ExpressionStatement	allow_empty_message_flag = TRUE	2012:1:39613:39644	3466656	0	True				
ANR	3466660	AssignmentExpression	allow_empty_message_flag = TRUE		3466656	0		=			
ANR	3466661	Identifier	allow_empty_message_flag		3466656	0					
ANR	3466662	Identifier	TRUE		3466656	1					
ANR	3466663	ReturnType	void		3466656	1					
ANR	3466664	Identifier	Stream :: allow_one_empty_message		3466656	2					
ANR	3466665	ParameterList			3466656	3					
ANR	3466666	CFGEntryNode	ENTRY		3466656		True				
ANR	3466667	CFGExitNode	EXIT		3466656		True				
ANR	3466668	Symbol	allow_empty_message_flag		3466656						
ANR	3466669	Symbol	TRUE		3466656						
ANR	3466670	Function	Stream :: set_crypto_mode	2015:0:39649:39889							
ANR	3466671	FunctionDef	Stream :: set_crypto_mode (bool enabled)		3466670	0					
ANR	3466672	CompoundStatement		2017:0:39693:39889	3466670	0					
ANR	3466673	IfStatement	if ( canEncrypt ( ) && enabled )		3466670	0					
ANR	3466674	Condition	canEncrypt ( ) && enabled	2018:5:39700:39722	3466670	0	True				
ANR	3466675	AndExpression	canEncrypt ( ) && enabled		3466670	0		&&			
ANR	3466676	CallExpression	canEncrypt ( )		3466670	0					
ANR	3466677	Callee	canEncrypt		3466670	0					
ANR	3466678	Identifier	canEncrypt		3466670	0					
ANR	3466679	ArgumentList			3466670	1					
ANR	3466680	Identifier	enabled		3466670	1					
ANR	3466681	CompoundStatement		2:30:31:31	3466670	1					
ANR	3466682	ExpressionStatement	crypto_mode_ = true	2019:2:39729:39748	3466670	0	True				
ANR	3466683	AssignmentExpression	crypto_mode_ = true		3466670	0		=			
ANR	3466684	Identifier	crypto_mode_		3466670	0					
ANR	3466685	Identifier	true		3466670	1					
ANR	3466686	ElseStatement	else		3466670	0					
ANR	3466687	CompoundStatement		4:8:64:64	3466670	0					
ANR	3466688	IfStatement	if ( enabled )		3466670	0					
ANR	3466689	Condition	enabled	2021:6:39766:39772	3466670	0	True				
ANR	3466690	Identifier	enabled		3466670	0					
ANR	3466691	CompoundStatement		5:15:81:81	3466670	1					
ANR	3466692	ExpressionStatement	"dprintf ( D_SECURITY , ""NOT enabling crypto - there was no key exchanged.\\n"" )"	2022:3:39780:39856	3466670	0	True				
ANR	3466693	CallExpression	"dprintf ( D_SECURITY , ""NOT enabling crypto - there was no key exchanged.\\n"" )"		3466670	0					
ANR	3466694	Callee	dprintf		3466670	0					
ANR	3466695	Identifier	dprintf		3466670	0					
ANR	3466696	ArgumentList	D_SECURITY		3466670	1					
ANR	3466697	Argument	D_SECURITY		3466670	0					
ANR	3466698	Identifier	D_SECURITY		3466670	0					
ANR	3466699	Argument	"""NOT enabling crypto - there was no key exchanged.\\n"""		3466670	1					
ANR	3466700	PrimaryExpression	"""NOT enabling crypto - there was no key exchanged.\\n"""		3466670	0					
ANR	3466701	ExpressionStatement	crypto_mode_ = false	2024:2:39864:39884	3466670	1	True				
ANR	3466702	AssignmentExpression	crypto_mode_ = false		3466670	0		=			
ANR	3466703	Identifier	crypto_mode_		3466670	0					
ANR	3466704	Identifier	false		3466670	1					
ANR	3466705	ReturnType	void		3466670	1					
ANR	3466706	Identifier	Stream :: set_crypto_mode		3466670	2					
ANR	3466707	ParameterList	bool enabled		3466670	3					
ANR	3466708	Parameter	bool enabled	2016:24:39679:39690	3466670	0	True				
ANR	3466709	ParameterType	bool		3466670	0					
ANR	3466710	Identifier	enabled		3466670	1					
ANR	3466711	CFGEntryNode	ENTRY		3466670		True				
ANR	3466712	CFGExitNode	EXIT		3466670		True				
ANR	3466713	Symbol	crypto_mode_		3466670						
ANR	3466714	Symbol	canEncrypt		3466670						
ANR	3466715	Symbol	D_SECURITY		3466670						
ANR	3466716	Symbol	true		3466670						
ANR	3466717	Symbol	false		3466670						
ANR	3466718	Symbol	enabled		3466670						
ANR	3466719	Function	Stream :: get_encryption	2028:0:39892:39958							
ANR	3466720	FunctionDef	Stream :: get_encryption ()		3466719	0					
ANR	3466721	CompoundStatement		2030:0:39929:39958	3466719	0					
ANR	3466722	ReturnStatement	return ( crypto_mode_ ) ;	2031:4:39935:39956	3466719	0	True				
ANR	3466723	Identifier	crypto_mode_		3466719	0					
ANR	3466724	ReturnType	bool		3466719	1					
ANR	3466725	Identifier	Stream :: get_encryption		3466719	2					
ANR	3466726	ParameterList			3466719	3					
ANR	3466727	CFGEntryNode	ENTRY		3466719		True				
ANR	3466728	CFGExitNode	EXIT		3466719		True				
ANR	3466729	Symbol	crypto_mode_		3466719						
ANR	3466730	Function	Stream :: peer_description	2035:0:39962:40175							
ANR	3466731	FunctionDef	Stream :: peer_description ()		3466730	0					
ANR	3466732	CompoundStatement		2036:27:40002:40175	3466730	0					
ANR	3466733	IfStatement	if ( m_peer_description_str )		3466730	0					
ANR	3466734	Condition	m_peer_description_str	2037:4:40008:40029	3466730	0	True				
ANR	3466735	Identifier	m_peer_description_str		3466730	0					
ANR	3466736	CompoundStatement		2:28:29:29	3466730	1					
ANR	3466737	ReturnStatement	return m_peer_description_str ;	2038:2:40036:40065	3466730	0	True				
ANR	3466738	Identifier	m_peer_description_str		3466730	0					
ANR	3466739	IdentifierDeclStatement	char const * desc = default_peer_description ( ) ;	2040:1:40071:40116	3466730	1	True				
ANR	3466740	IdentifierDecl	* desc = default_peer_description ( )		3466730	0					
ANR	3466741	IdentifierDeclType	char const *		3466730	0					
ANR	3466742	Identifier	desc		3466730	1					
ANR	3466743	AssignmentExpression	* desc = default_peer_description ( )		3466730	2		=			
ANR	3466744	Identifier	desc		3466730	0					
ANR	3466745	CallExpression	default_peer_description ( )		3466730	1					
ANR	3466746	Callee	default_peer_description		3466730	0					
ANR	3466747	Identifier	default_peer_description		3466730	0					
ANR	3466748	ArgumentList			3466730	1					
ANR	3466749	IfStatement	if ( ! desc )		3466730	2					
ANR	3466750	Condition	! desc	2041:4:40122:40126	3466730	0	True				
ANR	3466751	UnaryOperationExpression	! desc		3466730	0					
ANR	3466752	UnaryOperator	!		3466730	0					
ANR	3466753	Identifier	desc		3466730	1					
ANR	3466754	CompoundStatement		6:11:126:126	3466730	1					
ANR	3466755	ReturnStatement	"return ""(unknown peer)"" ;"	2042:2:40133:40156	3466730	0	True				
ANR	3466756	PrimaryExpression	"""(unknown peer)"""		3466730	0					
ANR	3466757	ReturnStatement	return desc ;	2044:1:40162:40173	3466730	3	True				
ANR	3466758	Identifier	desc		3466730	0					
ANR	3466759	ReturnType	char const *		3466730	1					
ANR	3466760	Identifier	Stream :: peer_description		3466730	2					
ANR	3466761	ParameterList			3466730	3					
ANR	3466762	CFGEntryNode	ENTRY		3466730		True				
ANR	3466763	CFGExitNode	EXIT		3466730		True				
ANR	3466764	Symbol	m_peer_description_str		3466730						
ANR	3466765	Symbol	default_peer_description		3466730						
ANR	3466766	Symbol	desc		3466730						
ANR	3466767	Function	Stream :: set_peer_description	2047:0:40178:40360							
ANR	3466768	FunctionDef	Stream :: set_peer_description (char const * str)		3466767	0					
ANR	3466769	CompoundStatement		2048:46:40229:40360	3466767	0					
ANR	3466770	ExpressionStatement	free ( m_peer_description_str )	2049:1:40232:40260	3466767	0	True				
ANR	3466771	CallExpression	free ( m_peer_description_str )		3466767	0					
ANR	3466772	Callee	free		3466767	0					
ANR	3466773	Identifier	free		3466767	0					
ANR	3466774	ArgumentList	m_peer_description_str		3466767	1					
ANR	3466775	Argument	m_peer_description_str		3466767	0					
ANR	3466776	Identifier	m_peer_description_str		3466767	0					
ANR	3466777	IfStatement	if ( str )		3466767	1					
ANR	3466778	Condition	str	2050:4:40266:40268	3466767	0	True				
ANR	3466779	Identifier	str		3466767	0					
ANR	3466780	CompoundStatement		3:9:41:41	3466767	1					
ANR	3466781	ExpressionStatement	m_peer_description_str = strdup ( str )	2051:2:40275:40311	3466767	0	True				
ANR	3466782	AssignmentExpression	m_peer_description_str = strdup ( str )		3466767	0		=			
ANR	3466783	Identifier	m_peer_description_str		3466767	0					
ANR	3466784	CallExpression	strdup ( str )		3466767	1					
ANR	3466785	Callee	strdup		3466767	0					
ANR	3466786	Identifier	strdup		3466767	0					
ANR	3466787	ArgumentList	str		3466767	1					
ANR	3466788	Argument	str		3466767	0					
ANR	3466789	Identifier	str		3466767	0					
ANR	3466790	ElseStatement	else		3466767	0					
ANR	3466791	CompoundStatement		6:6:92:92	3466767	0					
ANR	3466792	ExpressionStatement	m_peer_description_str = NULL	2054:2:40326:40355	3466767	0	True				
ANR	3466793	AssignmentExpression	m_peer_description_str = NULL		3466767	0		=			
ANR	3466794	Identifier	m_peer_description_str		3466767	0					
ANR	3466795	Identifier	NULL		3466767	1					
ANR	3466796	ReturnType	void		3466767	1					
ANR	3466797	Identifier	Stream :: set_peer_description		3466767	2					
ANR	3466798	ParameterList	char const * str		3466767	3					
ANR	3466799	Parameter	char const * str	2048:29:40212:40226	3466767	0	True				
ANR	3466800	ParameterType	char const *		3466767	0					
ANR	3466801	Identifier	str		3466767	1					
ANR	3466802	CFGEntryNode	ENTRY		3466767		True				
ANR	3466803	CFGExitNode	EXIT		3466767		True				
ANR	3466804	Symbol	str		3466767						
ANR	3466805	Symbol	NULL		3466767						
ANR	3466806	Symbol	m_peer_description_str		3466767						
ANR	3466807	Symbol	strdup		3466767						
ANR	3466808	Function	Stream :: get_peer_version	2058:0:40363:40448							
ANR	3466809	FunctionDef	Stream :: get_peer_version ()		3466808	0					
ANR	3466810	CompoundStatement		2060:0:40422:40448	3466808	0					
ANR	3466811	ReturnStatement	return m_peer_version ;	2061:1:40425:40446	3466808	0	True				
ANR	3466812	Identifier	m_peer_version		3466808	0					
ANR	3466813	ReturnType	CondorVersionInfo const *		3466808	1					
ANR	3466814	Identifier	Stream :: get_peer_version		3466808	2					
ANR	3466815	ParameterList			3466808	3					
ANR	3466816	CFGEntryNode	ENTRY		3466808		True				
ANR	3466817	CFGExitNode	EXIT		3466808		True				
ANR	3466818	Symbol	m_peer_version		3466808						
ANR	3466819	Function	Stream :: set_peer_version	2064:0:40451:40666							
ANR	3466820	FunctionDef	Stream :: set_peer_version (CondorVersionInfo const * version)		3466819	0					
ANR	3466821	CompoundStatement		2066:0:40515:40666	3466819	0					
ANR	3466822	IfStatement	if ( m_peer_version )		3466819	0					
ANR	3466823	Condition	m_peer_version	2067:5:40522:40535	3466819	0	True				
ANR	3466824	Identifier	m_peer_version		3466819	0					
ANR	3466825	CompoundStatement		2:22:23:23	3466819	1					
ANR	3466826	Statement	delete	2068:2:40543:40548	3466819	0	True				
ANR	3466827	ExpressionStatement	m_peer_version	2068:9:40550:40564	3466819	1	True				
ANR	3466828	Identifier	m_peer_version		3466819	0					
ANR	3466829	ExpressionStatement	m_peer_version = NULL	2069:2:40568:40589	3466819	2	True				
ANR	3466830	AssignmentExpression	m_peer_version = NULL		3466819	0		=			
ANR	3466831	Identifier	m_peer_version		3466819	0					
ANR	3466832	Identifier	NULL		3466819	1					
ANR	3466833	IfStatement	if ( version )		3466819	1					
ANR	3466834	Condition	version	2071:5:40599:40605	3466819	0	True				
ANR	3466835	Identifier	version		3466819	0					
ANR	3466836	CompoundStatement		6:15:93:93	3466819	1					
ANR	3466837	ExpressionStatement	m_peer_version = new CondorVersionInfo ( * version )	2072:2:40613:40661	3466819	0	True				
ANR	3466838	AssignmentExpression	m_peer_version = new CondorVersionInfo ( * version )		3466819	0		=			
ANR	3466839	Identifier	m_peer_version		3466819	0					
ANR	3466840	UnaryOperationExpression	* version		3466819	1					
ANR	3466841	UnaryOperator	*		3466819	0					
ANR	3466842	Identifier	version		3466819	1					
ANR	3466843	ReturnType	void		3466819	1					
ANR	3466844	Identifier	Stream :: set_peer_version		3466819	2					
ANR	3466845	ParameterList	CondorVersionInfo const * version		3466819	3					
ANR	3466846	Parameter	CondorVersionInfo const * version	2065:25:40481:40512	3466819	0	True				
ANR	3466847	ParameterType	CondorVersionInfo const *		3466819	0					
ANR	3466848	Identifier	version		3466819	1					
ANR	3466849	CFGEntryNode	ENTRY		3466819		True				
ANR	3466850	CFGExitNode	EXIT		3466819		True				
ANR	3466851	Symbol	NULL		3466819						
ANR	3466852	Symbol	m_peer_version		3466819						
ANR	3466853	Symbol	* version		3466819						
ANR	3466854	Symbol	version		3466819						
ANR	3466855	Function	Stream :: set_deadline_timeout	2076:0:40669:40907							
ANR	3466856	FunctionDef	Stream :: set_deadline_timeout (int t)		3466855	0					
ANR	3466857	CompoundStatement		2078:0:40710:40907	3466855	0					
ANR	3466858	IfStatement	if ( t < 0 )		3466855	0					
ANR	3466859	Condition	t < 0	2079:5:40717:40721	3466855	0	True				
ANR	3466860	RelationalExpression	t < 0		3466855	0		<			
ANR	3466861	Identifier	t		3466855	0					
ANR	3466862	PrimaryExpression	0		3466855	1					
ANR	3466863	CompoundStatement		2:13:14:14	3466855	1					
ANR	3466864	ExpressionStatement	m_deadline_time = 0	2081:2:40747:40766	3466855	0	True				
ANR	3466865	AssignmentExpression	m_deadline_time = 0		3466855	0		=			
ANR	3466866	Identifier	m_deadline_time		3466855	0					
ANR	3466867	PrimaryExpression	0		3466855	1					
ANR	3466868	ElseStatement	else		3466855	0					
ANR	3466869	CompoundStatement		6:6:66:66	3466855	0					
ANR	3466870	IfStatement	if ( Sock :: get_timeout_multiplier ( ) > 0 )		3466855	0					
ANR	3466871	Condition	Sock :: get_timeout_multiplier ( ) > 0	2084:6:40785:40818	3466855	0	True				
ANR	3466872	RelationalExpression	Sock :: get_timeout_multiplier ( ) > 0		3466855	0		>			
ANR	3466873	CallExpression	Sock :: get_timeout_multiplier ( )		3466855	0					
ANR	3466874	Callee	Sock :: get_timeout_multiplier		3466855	0					
ANR	3466875	Identifier	Sock :: get_timeout_multiplier		3466855	0					
ANR	3466876	ArgumentList			3466855	1					
ANR	3466877	PrimaryExpression	0		3466855	1					
ANR	3466878	CompoundStatement		7:43:111:111	3466855	1					
ANR	3466879	ExpressionStatement	t *= Sock :: get_timeout_multiplier ( )	2085:3:40827:40862	3466855	0	True				
ANR	3466880	AssignmentExpression	t *= Sock :: get_timeout_multiplier ( )		3466855	0		*=			
ANR	3466881	Identifier	t		3466855	0					
ANR	3466882	CallExpression	Sock :: get_timeout_multiplier ( )		3466855	1					
ANR	3466883	Callee	Sock :: get_timeout_multiplier		3466855	0					
ANR	3466884	Identifier	Sock :: get_timeout_multiplier		3466855	0					
ANR	3466885	ArgumentList			3466855	1					
ANR	3466886	ExpressionStatement	m_deadline_time = time ( NULL ) + t	2087:2:40870:40902	3466855	1	True				
ANR	3466887	AssignmentExpression	m_deadline_time = time ( NULL ) + t		3466855	0		=			
ANR	3466888	Identifier	m_deadline_time		3466855	0					
ANR	3466889	AdditiveExpression	time ( NULL ) + t		3466855	1		+			
ANR	3466890	CallExpression	time ( NULL )		3466855	0					
ANR	3466891	Callee	time		3466855	0					
ANR	3466892	Identifier	time		3466855	0					
ANR	3466893	ArgumentList	NULL		3466855	1					
ANR	3466894	Argument	NULL		3466855	0					
ANR	3466895	Identifier	NULL		3466855	0					
ANR	3466896	Identifier	t		3466855	1					
ANR	3466897	ReturnType	void		3466855	1					
ANR	3466898	Identifier	Stream :: set_deadline_timeout		3466855	2					
ANR	3466899	ParameterList	int t		3466855	3					
ANR	3466900	Parameter	int t	2077:29:40703:40707	3466855	0	True				
ANR	3466901	ParameterType	int		3466855	0					
ANR	3466902	Identifier	t		3466855	1					
ANR	3466903	CFGEntryNode	ENTRY		3466855		True				
ANR	3466904	CFGExitNode	EXIT		3466855		True				
ANR	3466905	Symbol	NULL		3466855						
ANR	3466906	Symbol	t		3466855						
ANR	3466907	Symbol	Sock :: get_timeout_multiplier		3466855						
ANR	3466908	Symbol	m_deadline_time		3466855						
ANR	3466909	Symbol	time		3466855						
ANR	3466910	Function	Stream :: set_deadline	2091:0:40910:40970							
ANR	3466911	FunctionDef	Stream :: set_deadline (time_t t)		3466910	0					
ANR	3466912	CompoundStatement		2093:0:40946:40970	3466910	0					
ANR	3466913	ExpressionStatement	m_deadline_time = t	2094:1:40949:40968	3466910	0	True				
ANR	3466914	AssignmentExpression	m_deadline_time = t		3466910	0		=			
ANR	3466915	Identifier	m_deadline_time		3466910	0					
ANR	3466916	Identifier	t		3466910	1					
ANR	3466917	ReturnType	void		3466910	1					
ANR	3466918	Identifier	Stream :: set_deadline		3466910	2					
ANR	3466919	ParameterList	time_t t		3466910	3					
ANR	3466920	Parameter	time_t t	2092:21:40936:40943	3466910	0	True				
ANR	3466921	ParameterType	time_t		3466910	0					
ANR	3466922	Identifier	t		3466910	1					
ANR	3466923	CFGEntryNode	ENTRY		3466910		True				
ANR	3466924	CFGExitNode	EXIT		3466910		True				
ANR	3466925	Symbol	t		3466910						
ANR	3466926	Symbol	m_deadline_time		3466910						
ANR	3466927	Function	Stream :: get_deadline	2097:0:40973:41030							
ANR	3466928	FunctionDef	Stream :: get_deadline ()		3466927	0					
ANR	3466929	CompoundStatement		2099:0:41003:41030	3466927	0					
ANR	3466930	ReturnStatement	return m_deadline_time ;	2100:1:41006:41028	3466927	0	True				
ANR	3466931	Identifier	m_deadline_time		3466927	0					
ANR	3466932	ReturnType	time_t		3466927	1					
ANR	3466933	Identifier	Stream :: get_deadline		3466927	2					
ANR	3466934	ParameterList			3466927	3					
ANR	3466935	CFGEntryNode	ENTRY		3466927		True				
ANR	3466936	CFGExitNode	EXIT		3466927		True				
ANR	3466937	Symbol	m_deadline_time		3466927						
ANR	3466938	Function	Stream :: deadline_expired	2103:0:41033:41129							
ANR	3466939	FunctionDef	Stream :: deadline_expired ()		3466938	0					
ANR	3466940	CompoundStatement		2105:0:41065:41129	3466938	0					
ANR	3466941	ReturnStatement	return m_deadline_time != 0 && time ( NULL ) > m_deadline_time ;	2106:1:41068:41127	3466938	0	True				
ANR	3466942	AndExpression	m_deadline_time != 0 && time ( NULL ) > m_deadline_time		3466938	0		&&			
ANR	3466943	EqualityExpression	m_deadline_time != 0		3466938	0		!=			
ANR	3466944	Identifier	m_deadline_time		3466938	0					
ANR	3466945	PrimaryExpression	0		3466938	1					
ANR	3466946	RelationalExpression	time ( NULL ) > m_deadline_time		3466938	1		>			
ANR	3466947	CallExpression	time ( NULL )		3466938	0					
ANR	3466948	Callee	time		3466938	0					
ANR	3466949	Identifier	time		3466938	0					
ANR	3466950	ArgumentList	NULL		3466938	1					
ANR	3466951	Argument	NULL		3466938	0					
ANR	3466952	Identifier	NULL		3466938	0					
ANR	3466953	Identifier	m_deadline_time		3466938	1					
ANR	3466954	ReturnType	bool		3466938	1					
ANR	3466955	Identifier	Stream :: deadline_expired		3466938	2					
ANR	3466956	ParameterList			3466938	3					
ANR	3466957	CFGEntryNode	ENTRY		3466938		True				
ANR	3466958	CFGExitNode	EXIT		3466938		True				
ANR	3466959	Symbol	NULL		3466938						
ANR	3466960	Symbol	m_deadline_time		3466938						
ANR	3466961	Symbol	time		3466938						
ANR	3466962	Function	Stream :: prepare_crypto_for_secret_is_noop	2109:0:41132:41447							
ANR	3466963	FunctionDef	Stream :: prepare_crypto_for_secret_is_noop ()		3466962	0					
ANR	3466964	CompoundStatement		2111:0:41181:41447	3466962	0					
ANR	3466965	IdentifierDeclStatement	CondorVersionInfo const * peer_ver = get_peer_version ( ) ;	2112:1:41184:41238	3466962	0	True				
ANR	3466966	IdentifierDecl	* peer_ver = get_peer_version ( )		3466962	0					
ANR	3466967	IdentifierDeclType	CondorVersionInfo const *		3466962	0					
ANR	3466968	Identifier	peer_ver		3466962	1					
ANR	3466969	AssignmentExpression	* peer_ver = get_peer_version ( )		3466962	2		=			
ANR	3466970	Identifier	peer_ver		3466962	0					
ANR	3466971	CallExpression	get_peer_version ( )		3466962	1					
ANR	3466972	Callee	get_peer_version		3466962	0					
ANR	3466973	Identifier	get_peer_version		3466962	0					
ANR	3466974	ArgumentList			3466962	1					
ANR	3466975	IfStatement	"if ( ! peer_ver || peer_ver -> built_since_version ( 7 , 1 , 3 ) )"		3466962	1					
ANR	3466976	Condition	"! peer_ver || peer_ver -> built_since_version ( 7 , 1 , 3 )"	2113:5:41245:41293	3466962	0	True				
ANR	3466977	OrExpression	"! peer_ver || peer_ver -> built_since_version ( 7 , 1 , 3 )"		3466962	0		||			
ANR	3466978	UnaryOperationExpression	! peer_ver		3466962	0					
ANR	3466979	UnaryOperator	!		3466962	0					
ANR	3466980	Identifier	peer_ver		3466962	1					
ANR	3466981	CallExpression	"peer_ver -> built_since_version ( 7 , 1 , 3 )"		3466962	1					
ANR	3466982	Callee	peer_ver -> built_since_version		3466962	0					
ANR	3466983	PtrMemberAccess	peer_ver -> built_since_version		3466962	0					
ANR	3466984	Identifier	peer_ver		3466962	0					
ANR	3466985	Identifier	built_since_version		3466962	1					
ANR	3466986	ArgumentList	7		3466962	1					
ANR	3466987	Argument	7		3466962	0					
ANR	3466988	PrimaryExpression	7		3466962	0					
ANR	3466989	Argument	1		3466962	1					
ANR	3466990	PrimaryExpression	1		3466962	0					
ANR	3466991	Argument	3		3466962	2					
ANR	3466992	PrimaryExpression	3		3466962	0					
ANR	3466993	CompoundStatement		3:57:115:115	3466962	1					
ANR	3466994	IfStatement	if ( ! get_encryption ( ) )		3466962	0					
ANR	3466995	Condition	! get_encryption ( )	2114:6:41305:41321	3466962	0	True				
ANR	3466996	UnaryOperationExpression	! get_encryption ( )		3466962	0					
ANR	3466997	UnaryOperator	!		3466962	0					
ANR	3466998	CallExpression	get_encryption ( )		3466962	1					
ANR	3466999	Callee	get_encryption		3466962	0					
ANR	3467000	Identifier	get_encryption		3466962	0					
ANR	3467001	ArgumentList			3466962	1					
ANR	3467002	CompoundStatement		4:26:143:143	3466962	1					
ANR	3467003	IfStatement	if ( canEncrypt ( ) )		3466962	0					
ANR	3467004	Condition	canEncrypt ( )	2115:7:41334:41345	3466962	0	True				
ANR	3467005	CallExpression	canEncrypt ( )		3466962	0					
ANR	3467006	Callee	canEncrypt		3466962	0					
ANR	3467007	Identifier	canEncrypt		3466962	0					
ANR	3467008	ArgumentList			3466962	1					
ANR	3467009	CompoundStatement		5:22:167:167	3466962	1					
ANR	3467010	ReturnStatement	return false ;	2117:4:41407:41419	3466962	0	True				
ANR	3467011	Identifier	false		3466962	0					
ANR	3467012	ReturnStatement	return true ;	2121:1:41434:41445	3466962	2	True				
ANR	3467013	Identifier	true		3466962	0					
ANR	3467014	ReturnType	bool		3466962	1					
ANR	3467015	Identifier	Stream :: prepare_crypto_for_secret_is_noop		3466962	2					
ANR	3467016	ParameterList			3466962	3					
ANR	3467017	CFGEntryNode	ENTRY		3466962		True				
ANR	3467018	CFGExitNode	EXIT		3466962		True				
ANR	3467019	Symbol	peer_ver -> built_since_version		3466962						
ANR	3467020	Symbol	peer_ver		3466962						
ANR	3467021	Symbol	canEncrypt		3466962						
ANR	3467022	Symbol	false		3466962						
ANR	3467023	Symbol	true		3466962						
ANR	3467024	Symbol	* peer_ver		3466962						
ANR	3467025	Symbol	get_peer_version		3466962						
ANR	3467026	Symbol	get_encryption		3466962						
ANR	3467027	Function	Stream :: prepare_crypto_for_secret	2124:0:41450:41716							
ANR	3467028	FunctionDef	Stream :: prepare_crypto_for_secret ()		3467027	0					
ANR	3467029	CompoundStatement		2126:0:41491:41716	3467027	0					
ANR	3467030	ExpressionStatement	m_crypto_state_before_secret = true	2127:1:41494:41529	3467027	0	True				
ANR	3467031	AssignmentExpression	m_crypto_state_before_secret = true		3467027	0		=			
ANR	3467032	Identifier	m_crypto_state_before_secret		3467027	0					
ANR	3467033	Identifier	true		3467027	1					
ANR	3467034	IfStatement	if ( ! prepare_crypto_for_secret_is_noop ( ) )		3467027	1					
ANR	3467035	Condition	! prepare_crypto_for_secret_is_noop ( )	2128:5:41536:41571	3467027	0	True				
ANR	3467036	UnaryOperationExpression	! prepare_crypto_for_secret_is_noop ( )		3467027	0					
ANR	3467037	UnaryOperator	!		3467027	0					
ANR	3467038	CallExpression	prepare_crypto_for_secret_is_noop ( )		3467027	1					
ANR	3467039	Callee	prepare_crypto_for_secret_is_noop		3467027	0					
ANR	3467040	Identifier	prepare_crypto_for_secret_is_noop		3467027	0					
ANR	3467041	ArgumentList			3467027	1					
ANR	3467042	CompoundStatement		3:44:83:83	3467027	1					
ANR	3467043	ExpressionStatement	"dprintf ( D_NETWORK , ""encrypting secret\\n"" )"	2129:2:41579:41619	3467027	0	True				
ANR	3467044	CallExpression	"dprintf ( D_NETWORK , ""encrypting secret\\n"" )"		3467027	0					
ANR	3467045	Callee	dprintf		3467027	0					
ANR	3467046	Identifier	dprintf		3467027	0					
ANR	3467047	ArgumentList	D_NETWORK		3467027	1					
ANR	3467048	Argument	D_NETWORK		3467027	0					
ANR	3467049	Identifier	D_NETWORK		3467027	0					
ANR	3467050	Argument	"""encrypting secret\\n"""		3467027	1					
ANR	3467051	PrimaryExpression	"""encrypting secret\\n"""		3467027	0					
ANR	3467052	ExpressionStatement	m_crypto_state_before_secret = get_encryption ( )	2130:2:41623:41670	3467027	1	True				
ANR	3467053	AssignmentExpression	m_crypto_state_before_secret = get_encryption ( )		3467027	0		=			
ANR	3467054	Identifier	m_crypto_state_before_secret		3467027	0					
ANR	3467055	CallExpression	get_encryption ( )		3467027	1					
ANR	3467056	Callee	get_encryption		3467027	0					
ANR	3467057	Identifier	get_encryption		3467027	0					
ANR	3467058	ArgumentList			3467027	1					
ANR	3467059	ExpressionStatement	set_crypto_mode ( true )	2131:2:41690:41711	3467027	2	True				
ANR	3467060	CallExpression	set_crypto_mode ( true )		3467027	0					
ANR	3467061	Callee	set_crypto_mode		3467027	0					
ANR	3467062	Identifier	set_crypto_mode		3467027	0					
ANR	3467063	ArgumentList	true		3467027	1					
ANR	3467064	Argument	true		3467027	0					
ANR	3467065	Identifier	true		3467027	0					
ANR	3467066	ReturnType	void		3467027	1					
ANR	3467067	Identifier	Stream :: prepare_crypto_for_secret		3467027	2					
ANR	3467068	ParameterList			3467027	3					
ANR	3467069	CFGEntryNode	ENTRY		3467027		True				
ANR	3467070	CFGExitNode	EXIT		3467027		True				
ANR	3467071	Symbol	m_crypto_state_before_secret		3467027						
ANR	3467072	Symbol	prepare_crypto_for_secret_is_noop		3467027						
ANR	3467073	Symbol	true		3467027						
ANR	3467074	Symbol	D_NETWORK		3467027						
ANR	3467075	Symbol	get_encryption		3467027						
ANR	3467076	Function	Stream :: restore_crypto_after_secret	2135:0:41719:41854							
ANR	3467077	FunctionDef	Stream :: restore_crypto_after_secret ()		3467076	0					
ANR	3467078	CompoundStatement		2137:0:41762:41854	3467076	0					
ANR	3467079	IfStatement	if ( ! m_crypto_state_before_secret )		3467076	0					
ANR	3467080	Condition	! m_crypto_state_before_secret	2138:5:41769:41797	3467076	0	True				
ANR	3467081	UnaryOperationExpression	! m_crypto_state_before_secret		3467076	0					
ANR	3467082	UnaryOperator	!		3467076	0					
ANR	3467083	Identifier	m_crypto_state_before_secret		3467076	1					
ANR	3467084	CompoundStatement		2:37:38:38	3467076	1					
ANR	3467085	ExpressionStatement	set_crypto_mode ( false )	2139:2:41805:41827	3467076	0	True				
ANR	3467086	CallExpression	set_crypto_mode ( false )		3467076	0					
ANR	3467087	Callee	set_crypto_mode		3467076	0					
ANR	3467088	Identifier	set_crypto_mode		3467076	0					
ANR	3467089	ArgumentList	false		3467076	1					
ANR	3467090	Argument	false		3467076	0					
ANR	3467091	Identifier	false		3467076	0					
ANR	3467092	ReturnType	void		3467076	1					
ANR	3467093	Identifier	Stream :: restore_crypto_after_secret		3467076	2					
ANR	3467094	ParameterList			3467076	3					
ANR	3467095	CFGEntryNode	ENTRY		3467076		True				
ANR	3467096	CFGExitNode	EXIT		3467076		True				
ANR	3467097	Symbol	m_crypto_state_before_secret		3467076						
ANR	3467098	Symbol	false		3467076						
ANR	3467099	Function	Stream :: set_timeout_multiplier	2143:0:41857:41990							
ANR	3467100	FunctionDef	Stream :: set_timeout_multiplier (int secs)		3467099	0					
ANR	3467101	CompoundStatement		2145:0:41902:41990	3467099	0					
ANR	3467102	IdentifierDeclStatement	int old_val = timeout_multiplier ;	2146:3:41907:41939	3467099	0	True				
ANR	3467103	IdentifierDecl	old_val = timeout_multiplier		3467099	0					
ANR	3467104	IdentifierDeclType	int		3467099	0					
ANR	3467105	Identifier	old_val		3467099	1					
ANR	3467106	AssignmentExpression	old_val = timeout_multiplier		3467099	2		=			
ANR	3467107	Identifier	timeout_multiplier		3467099	0					
ANR	3467108	Identifier	timeout_multiplier		3467099	1					
ANR	3467109	ExpressionStatement	timeout_multiplier = secs	2147:3:41944:41969	3467099	1	True				
ANR	3467110	AssignmentExpression	timeout_multiplier = secs		3467099	0		=			
ANR	3467111	Identifier	timeout_multiplier		3467099	0					
ANR	3467112	Identifier	secs		3467099	1					
ANR	3467113	ReturnStatement	return old_val ;	2148:3:41974:41988	3467099	2	True				
ANR	3467114	Identifier	old_val		3467099	0					
ANR	3467115	ReturnType	int		3467099	1					
ANR	3467116	Identifier	Stream :: set_timeout_multiplier		3467099	2					
ANR	3467117	ParameterList	int secs		3467099	3					
ANR	3467118	Parameter	int secs	2144:31:41892:41899	3467099	0	True				
ANR	3467119	ParameterType	int		3467099	0					
ANR	3467120	Identifier	secs		3467099	1					
ANR	3467121	CFGEntryNode	ENTRY		3467099		True				
ANR	3467122	CFGExitNode	EXIT		3467099		True				
ANR	3467123	Symbol	old_val		3467099						
ANR	3467124	Symbol	secs		3467099						
ANR	3467125	Symbol	timeout_multiplier		3467099						
ANR	3467126	Function	Stream :: get_timeout_multiplier	2151:0:41993:42060							
ANR	3467127	FunctionDef	Stream :: get_timeout_multiplier ()		3467126	0					
ANR	3467128	CompoundStatement		2153:0:42030:42060	3467126	0					
ANR	3467129	ReturnStatement	return timeout_multiplier ;	2154:1:42033:42058	3467126	0	True				
ANR	3467130	Identifier	timeout_multiplier		3467126	0					
ANR	3467131	ReturnType	int		3467126	1					
ANR	3467132	Identifier	Stream :: get_timeout_multiplier		3467126	2					
ANR	3467133	ParameterList			3467126	3					
ANR	3467134	CFGEntryNode	ENTRY		3467126		True				
ANR	3467135	CFGExitNode	EXIT		3467126		True				
ANR	3467136	Symbol	timeout_multiplier		3467126						
