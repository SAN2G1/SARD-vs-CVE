command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	879657	File	data/converged/CVE-2011-4930_htcondor/condor_crypt.cpp								
ANR	879658	Function	Condor_Crypt_Base :: Condor_Crypt_Base	31:0:1040:1220							
ANR	879659	FunctionDef	"Condor_Crypt_Base :: Condor_Crypt_Base (Protocol prot , const KeyInfo & keyInfo)"		879658	0					
ANR	879660	CompoundStatement		33:0:1143:1220	879658	0					
ANR	879661	ExpressionStatement	ASSERT ( keyInfo_ . getProtocol ( ) == prot )	35:4:1173:1211	879658	0	True				
ANR	879662	CallExpression	ASSERT ( keyInfo_ . getProtocol ( ) == prot )		879658	0					
ANR	879663	Callee	ASSERT		879658	0					
ANR	879664	Identifier	ASSERT		879658	0					
ANR	879665	ArgumentList	keyInfo_ . getProtocol ( ) == prot		879658	1					
ANR	879666	Argument	keyInfo_ . getProtocol ( ) == prot		879658	0					
ANR	879667	EqualityExpression	keyInfo_ . getProtocol ( ) == prot		879658	0		==			
ANR	879668	CallExpression	keyInfo_ . getProtocol ( )		879658	0					
ANR	879669	Callee	keyInfo_ . getProtocol		879658	0					
ANR	879670	MemberAccess	keyInfo_ . getProtocol		879658	0					
ANR	879671	Identifier	keyInfo_		879658	0					
ANR	879672	Identifier	getProtocol		879658	1					
ANR	879673	ArgumentList			879658	1					
ANR	879674	Identifier	prot		879658	1					
ANR	879675	Identifier	Condor_Crypt_Base :: Condor_Crypt_Base		879658	1					
ANR	879676	ParameterList	"Protocol prot , const KeyInfo & keyInfo"		879658	2					
ANR	879677	Parameter	Protocol prot	31:39:1079:1091	879658	0	True				
ANR	879678	ParameterType	Protocol		879658	0					
ANR	879679	Identifier	prot		879658	1					
ANR	879680	Parameter	const KeyInfo & keyInfo	31:54:1094:1115	879658	1	True				
ANR	879681	ParameterType	const KeyInfo &		879658	0					
ANR	879682	Identifier	keyInfo		879658	1					
ANR	879683	CFGEntryNode	ENTRY		879658		True				
ANR	879684	CFGExitNode	EXIT		879658		True				
ANR	879685	Symbol	prot		879658						
ANR	879686	Symbol	keyInfo_ . getProtocol		879658						
ANR	879687	Symbol	keyInfo_		879658						
ANR	879688	Symbol	keyInfo		879658						
ANR	879689	Function	Condor_Crypt_Base :: Condor_Crypt_Base	39:0:1223:1284							
ANR	879690	FunctionDef	Condor_Crypt_Base :: Condor_Crypt_Base ()		879689	0					
ANR	879691	CompoundStatement		41:0:1282:1284	879689	0					
ANR	879692	Identifier	Condor_Crypt_Base :: Condor_Crypt_Base		879689	1					
ANR	879693	ParameterList			879689	2					
ANR	879694	CFGEntryNode	ENTRY		879689		True				
ANR	879695	CFGExitNode	EXIT		879689		True				
ANR	879696	Function	Condor_Crypt_Base :: ~Condor_Crypt_Base	44:0:1287:1331							
ANR	879697	FunctionDef	Condor_Crypt_Base :: ~Condor_Crypt_Base ()		879696	0					
ANR	879698	CompoundStatement		45:0:1329:1331	879696	0					
ANR	879699	Identifier	Condor_Crypt_Base :: ~Condor_Crypt_Base		879696	1					
ANR	879700	ParameterList			879696	2					
ANR	879701	CFGEntryNode	ENTRY		879696		True				
ANR	879702	CFGExitNode	EXIT		879696		True				
ANR	879703	Function	Condor_Crypt_Base :: encryptedSize	48:0:1334:1574							
ANR	879704	FunctionDef	"Condor_Crypt_Base :: encryptedSize (int inputLength , int blockSize)"		879703	0					
ANR	879705	CompoundStatement		49:0:1405:1574	879703	0					
ANR	879706	IdentifierDeclStatement	int size = inputLength % blockSize ;	51:4:1435:1469	879703	0	True				
ANR	879707	IdentifierDecl	size = inputLength % blockSize		879703	0					
ANR	879708	IdentifierDeclType	int		879703	0					
ANR	879709	Identifier	size		879703	1					
ANR	879710	AssignmentExpression	size = inputLength % blockSize		879703	2		=			
ANR	879711	Identifier	size		879703	0					
ANR	879712	MultiplicativeExpression	inputLength % blockSize		879703	1		%			
ANR	879713	Identifier	inputLength		879703	0					
ANR	879714	Identifier	blockSize		879703	1					
ANR	879715	ReturnStatement	return ( inputLength + ( ( size == 0 ) ? blockSize : ( blockSize - size ) ) ) ;	52:4:1475:1544	879703	1	True				
ANR	879716	AdditiveExpression	inputLength + ( ( size == 0 ) ? blockSize : ( blockSize - size ) )		879703	0		+			
ANR	879717	Identifier	inputLength		879703	0					
ANR	879718	ConditionalExpression	( size == 0 ) ? blockSize : ( blockSize - size )		879703	1					
ANR	879719	Condition	size == 0		879703	0					
ANR	879720	EqualityExpression	size == 0		879703	0		==			
ANR	879721	Identifier	size		879703	0					
ANR	879722	PrimaryExpression	0		879703	1					
ANR	879723	Identifier	blockSize		879703	1					
ANR	879724	AdditiveExpression	blockSize - size		879703	2		-			
ANR	879725	Identifier	blockSize		879703	0					
ANR	879726	Identifier	size		879703	1					
ANR	879727	ReturnType	int		879703	1					
ANR	879728	Identifier	Condor_Crypt_Base :: encryptedSize		879703	2					
ANR	879729	ParameterList	"int inputLength , int blockSize"		879703	3					
ANR	879730	Parameter	int inputLength	48:39:1373:1387	879703	0	True				
ANR	879731	ParameterType	int		879703	0					
ANR	879732	Identifier	inputLength		879703	1					
ANR	879733	Parameter	int blockSize	48:56:1390:1402	879703	1	True				
ANR	879734	ParameterType	int		879703	0					
ANR	879735	Identifier	blockSize		879703	1					
ANR	879736	CFGEntryNode	ENTRY		879703		True				
ANR	879737	CFGExitNode	EXIT		879703		True				
ANR	879738	Symbol	size		879703						
ANR	879739	Symbol	inputLength		879703						
ANR	879740	Symbol	blockSize		879703						
ANR	879741	Function	Condor_Crypt_Base :: protocol	58:0:1577:1716							
ANR	879742	FunctionDef	Condor_Crypt_Base :: protocol ()		879741	0					
ANR	879743	CompoundStatement		59:0:1618:1716	879741	0					
ANR	879744	ReturnStatement	return keyInfo_ . getProtocol ( ) ;	61:4:1648:1677	879741	0	True				
ANR	879745	CallExpression	keyInfo_ . getProtocol ( )		879741	0					
ANR	879746	Callee	keyInfo_ . getProtocol		879741	0					
ANR	879747	MemberAccess	keyInfo_ . getProtocol		879741	0					
ANR	879748	Identifier	keyInfo_		879741	0					
ANR	879749	Identifier	getProtocol		879741	1					
ANR	879750	ArgumentList			879741	1					
ANR	879751	ReturnType	Protocol		879741	1					
ANR	879752	Identifier	Condor_Crypt_Base :: protocol		879741	2					
ANR	879753	ParameterList			879741	3					
ANR	879754	CFGEntryNode	ENTRY		879741		True				
ANR	879755	CFGExitNode	EXIT		879741		True				
ANR	879756	Symbol	keyInfo_ . getProtocol		879741						
ANR	879757	Symbol	keyInfo_		879741						
ANR	879758	Function	Condor_Crypt_Base :: randomKey	67:0:1719:2592							
ANR	879759	FunctionDef	Condor_Crypt_Base :: randomKey (int length)		879758	0					
ANR	879760	CompoundStatement		68:0:1778:2592	879758	0					
ANR	879761	IdentifierDeclStatement	unsigned char * key = ( unsigned char * ) ( malloc ( length ) ) ;	69:4:1784:1839	879758	0	True				
ANR	879762	IdentifierDecl	* key = ( unsigned char * ) ( malloc ( length ) )		879758	0					
ANR	879763	IdentifierDeclType	unsigned char *		879758	0					
ANR	879764	Identifier	key		879758	1					
ANR	879765	AssignmentExpression	* key = ( unsigned char * ) ( malloc ( length ) )		879758	2		=			
ANR	879766	Identifier	key		879758	0					
ANR	879767	CastExpression	( unsigned char * ) ( malloc ( length ) )		879758	1					
ANR	879768	CastTarget	unsigned char *		879758	0					
ANR	879769	CallExpression	malloc ( length )		879758	1					
ANR	879770	Callee	malloc		879758	0					
ANR	879771	Identifier	malloc		879758	0					
ANR	879772	ArgumentList	length		879758	1					
ANR	879773	Argument	length		879758	0					
ANR	879774	Identifier	length		879758	0					
ANR	879775	ExpressionStatement	"memset ( key , 0 , length )"	71:1:1843:1865	879758	1	True				
ANR	879776	CallExpression	"memset ( key , 0 , length )"		879758	0					
ANR	879777	Callee	memset		879758	0					
ANR	879778	Identifier	memset		879758	0					
ANR	879779	ArgumentList	key		879758	1					
ANR	879780	Argument	key		879758	0					
ANR	879781	Identifier	key		879758	0					
ANR	879782	Argument	0		879758	1					
ANR	879783	PrimaryExpression	0		879758	0					
ANR	879784	Argument	length		879758	2					
ANR	879785	Identifier	length		879758	0					
ANR	879786	Statement	static	74:1:1893:1898	879758	2	True				
ANR	879787	IdentifierDeclStatement	bool already_seeded = false ;	74:8:1900:1927	879758	3	True				
ANR	879788	IdentifierDecl	already_seeded = false		879758	0					
ANR	879789	IdentifierDeclType	bool		879758	0					
ANR	879790	Identifier	already_seeded		879758	1					
ANR	879791	AssignmentExpression	already_seeded = false		879758	2		=			
ANR	879792	Identifier	false		879758	0					
ANR	879793	Identifier	false		879758	1					
ANR	879794	IdentifierDeclStatement	int size = 128 ;	75:4:1933:1947	879758	4	True				
ANR	879795	IdentifierDecl	size = 128		879758	0					
ANR	879796	IdentifierDeclType	int		879758	0					
ANR	879797	Identifier	size		879758	1					
ANR	879798	AssignmentExpression	size = 128		879758	2		=			
ANR	879799	Identifier	size		879758	0					
ANR	879800	PrimaryExpression	128		879758	1					
ANR	879801	IfStatement	if ( ! already_seeded )		879758	5					
ANR	879802	Condition	! already_seeded	76:8:1957:1972	879758	0	True				
ANR	879803	UnaryOperationExpression	! already_seeded		879758	0					
ANR	879804	UnaryOperator	!		879758	0					
ANR	879805	Identifier	already_seeded		879758	1					
ANR	879806	CompoundStatement		10:8:207:259	879758	1					
ANR	879807	IdentifierDeclStatement	unsigned char * buf = ( unsigned char * ) malloc ( size ) ;	77:8:1986:2038	879758	0	True				
ANR	879808	IdentifierDecl	* buf = ( unsigned char * ) malloc ( size )		879758	0					
ANR	879809	IdentifierDeclType	unsigned char *		879758	0					
ANR	879810	Identifier	buf		879758	1					
ANR	879811	AssignmentExpression	* buf = ( unsigned char * ) malloc ( size )		879758	2		=			
ANR	879812	Identifier	buf		879758	0					
ANR	879813	CastExpression	( unsigned char * ) malloc ( size )		879758	1					
ANR	879814	CastTarget	unsigned char *		879758	0					
ANR	879815	CallExpression	malloc ( size )		879758	1					
ANR	879816	Callee	malloc		879758	0					
ANR	879817	Identifier	malloc		879758	0					
ANR	879818	ArgumentList	size		879758	1					
ANR	879819	Argument	size		879758	0					
ANR	879820	Identifier	size		879758	0					
ANR	879821	ExpressionStatement	ASSERT ( buf )	78:8:2048:2059	879758	1	True				
ANR	879822	CallExpression	ASSERT ( buf )		879758	0					
ANR	879823	Callee	ASSERT		879758	0					
ANR	879824	Identifier	ASSERT		879758	0					
ANR	879825	ArgumentList	buf		879758	1					
ANR	879826	Argument	buf		879758	0					
ANR	879827	Identifier	buf		879758	0					
ANR	879828	ForStatement	for ( int i = 0 ; i < size ; i ++ )		879758	2					
ANR	879829	ForInit	int i = 0 ;	79:7:2068:2077	879758	0	True				
ANR	879830	IdentifierDeclStatement	int i = 0 ;		879758	0					
ANR	879831	IdentifierDecl	i = 0		879758	0					
ANR	879832	IdentifierDeclType	int		879758	0					
ANR	879833	Identifier	i		879758	1					
ANR	879834	AssignmentExpression	i = 0		879758	2		=			
ANR	879835	Identifier	i		879758	0					
ANR	879836	PrimaryExpression	0		879758	1					
ANR	879837	Condition	i < size	79:18:2079:2086	879758	1	True				
ANR	879838	RelationalExpression	i < size		879758	0		<			
ANR	879839	Identifier	i		879758	0					
ANR	879840	Identifier	size		879758	1					
ANR	879841	PostIncDecOperationExpression	i ++	79:28:2089:2091	879758	2	True				
ANR	879842	Identifier	i		879758	0					
ANR	879843	IncDec	++		879758	1					
ANR	879844	CompoundStatement		12:33:315:315	879758	3					
ANR	879845	ExpressionStatement	buf [ i ] = get_random_int ( ) & 0xFF	80:3:2099:2131	879758	0	True				
ANR	879846	AssignmentExpression	buf [ i ] = get_random_int ( ) & 0xFF		879758	0		=			
ANR	879847	ArrayIndexing	buf [ i ]		879758	0					
ANR	879848	Identifier	buf		879758	0					
ANR	879849	Identifier	i		879758	1					
ANR	879850	BitAndExpression	get_random_int ( ) & 0xFF		879758	1		&			
ANR	879851	CallExpression	get_random_int ( )		879758	0					
ANR	879852	Callee	get_random_int		879758	0					
ANR	879853	Identifier	get_random_int		879758	0					
ANR	879854	ArgumentList			879758	1					
ANR	879855	PrimaryExpression	0xFF		879758	1					
ANR	879856	ExpressionStatement	"RAND_seed ( buf , size )"	83:8:2146:2166	879758	3	True				
ANR	879857	CallExpression	"RAND_seed ( buf , size )"		879758	0					
ANR	879858	Callee	RAND_seed		879758	0					
ANR	879859	Identifier	RAND_seed		879758	0					
ANR	879860	ArgumentList	buf		879758	1					
ANR	879861	Argument	buf		879758	0					
ANR	879862	Identifier	buf		879758	0					
ANR	879863	Argument	size		879758	1					
ANR	879864	Identifier	size		879758	0					
ANR	879865	ExpressionStatement	free ( buf )	84:8:2176:2185	879758	4	True				
ANR	879866	CallExpression	free ( buf )		879758	0					
ANR	879867	Callee	free		879758	0					
ANR	879868	Identifier	free		879758	0					
ANR	879869	ArgumentList	buf		879758	1					
ANR	879870	Argument	buf		879758	0					
ANR	879871	Identifier	buf		879758	0					
ANR	879872	ExpressionStatement	already_seeded = true	85:2:2189:2210	879758	5	True				
ANR	879873	AssignmentExpression	already_seeded = true		879758	0		=			
ANR	879874	Identifier	already_seeded		879758	0					
ANR	879875	Identifier	true		879758	1					
ANR	879876	ExpressionStatement	"RAND_bytes ( key , length )"	88:4:2223:2246	879758	6	True				
ANR	879877	CallExpression	"RAND_bytes ( key , length )"		879758	0					
ANR	879878	Callee	RAND_bytes		879758	0					
ANR	879879	Identifier	RAND_bytes		879758	0					
ANR	879880	ArgumentList	key		879758	1					
ANR	879881	Argument	key		879758	0					
ANR	879882	Identifier	key		879758	0					
ANR	879883	Argument	length		879758	1					
ANR	879884	Identifier	length		879758	0					
ANR	879885	ReturnStatement	return key ;	102:4:2580:2590	879758	7	True				
ANR	879886	Identifier	key		879758	0					
ANR	879887	ReturnType	unsigned char *		879758	1					
ANR	879888	Identifier	Condor_Crypt_Base :: randomKey		879758	2					
ANR	879889	ParameterList	int length		879758	3					
ANR	879890	Parameter	int length	67:47:1766:1775	879758	0	True				
ANR	879891	ParameterType	int		879758	0					
ANR	879892	Identifier	length		879758	1					
ANR	879893	CFGEntryNode	ENTRY		879758		True				
ANR	879894	CFGExitNode	EXIT		879758		True				
ANR	879895	Symbol	malloc		879758						
ANR	879896	Symbol	buf		879758						
ANR	879897	Symbol	* buf		879758						
ANR	879898	Symbol	* i		879758						
ANR	879899	Symbol	size		879758						
ANR	879900	Symbol	length		879758						
ANR	879901	Symbol	false		879758						
ANR	879902	Symbol	already_seeded		879758						
ANR	879903	Symbol	get_random_int		879758						
ANR	879904	Symbol	true		879758						
ANR	879905	Symbol	i		879758						
ANR	879906	Symbol	key		879758						
ANR	879907	Function	Condor_Crypt_Base :: randomHexKey	105:0:2595:2832							
ANR	879908	FunctionDef	Condor_Crypt_Base :: randomHexKey (int length)		879907	0					
ANR	879909	CompoundStatement		106:0:2645:2832	879907	0					
ANR	879910	IdentifierDeclStatement	unsigned char * bytes = randomKey ( length ) ;	107:1:2648:2688	879907	0	True				
ANR	879911	IdentifierDecl	* bytes = randomKey ( length )		879907	0					
ANR	879912	IdentifierDeclType	unsigned char *		879907	0					
ANR	879913	Identifier	bytes		879907	1					
ANR	879914	AssignmentExpression	* bytes = randomKey ( length )		879907	2		=			
ANR	879915	Identifier	bytes		879907	0					
ANR	879916	CallExpression	randomKey ( length )		879907	1					
ANR	879917	Callee	randomKey		879907	0					
ANR	879918	Identifier	randomKey		879907	0					
ANR	879919	ArgumentList	length		879907	1					
ANR	879920	Argument	length		879907	0					
ANR	879921	Identifier	length		879907	0					
ANR	879922	IdentifierDeclStatement	char * hex = ( char * ) malloc ( length * 2 + 1 ) ;	108:1:2691:2729	879907	1	True				
ANR	879923	IdentifierDecl	* hex = ( char * ) malloc ( length * 2 + 1 )		879907	0					
ANR	879924	IdentifierDeclType	char *		879907	0					
ANR	879925	Identifier	hex		879907	1					
ANR	879926	AssignmentExpression	* hex = ( char * ) malloc ( length * 2 + 1 )		879907	2		=			
ANR	879927	Identifier	hex		879907	0					
ANR	879928	CastExpression	( char * ) malloc ( length * 2 + 1 )		879907	1					
ANR	879929	CastTarget	char *		879907	0					
ANR	879930	CallExpression	malloc ( length * 2 + 1 )		879907	1					
ANR	879931	Callee	malloc		879907	0					
ANR	879932	Identifier	malloc		879907	0					
ANR	879933	ArgumentList	length * 2 + 1		879907	1					
ANR	879934	Argument	length * 2 + 1		879907	0					
ANR	879935	AdditiveExpression	length * 2 + 1		879907	0		+			
ANR	879936	MultiplicativeExpression	length * 2		879907	0		*			
ANR	879937	Identifier	length		879907	0					
ANR	879938	PrimaryExpression	2		879907	1					
ANR	879939	PrimaryExpression	1		879907	1					
ANR	879940	IdentifierDeclStatement	int i ;	109:1:2732:2737	879907	2	True				
ANR	879941	IdentifierDecl	i		879907	0					
ANR	879942	IdentifierDeclType	int		879907	0					
ANR	879943	Identifier	i		879907	1					
ANR	879944	ForStatement	for ( i = 0 ; i < length ; i ++ )		879907	3					
ANR	879945	ForInit	i = 0 ;	110:5:2744:2747	879907	0	True				
ANR	879946	AssignmentExpression	i = 0		879907	0		=			
ANR	879947	Identifier	i		879907	0					
ANR	879948	PrimaryExpression	0		879907	1					
ANR	879949	Condition	i < length	110:10:2749:2756	879907	1	True				
ANR	879950	RelationalExpression	i < length		879907	0		<			
ANR	879951	Identifier	i		879907	0					
ANR	879952	Identifier	length		879907	1					
ANR	879953	PostIncDecOperationExpression	i ++	110:20:2759:2761	879907	2	True				
ANR	879954	Identifier	i		879907	0					
ANR	879955	IncDec	++		879907	1					
ANR	879956	CompoundStatement		5:25:118:118	879907	3					
ANR	879957	ExpressionStatement	"sprintf ( hex + i * 2 , ""%02x"" , bytes [ i ] )"	111:2:2768:2800	879907	0	True				
ANR	879958	CallExpression	"sprintf ( hex + i * 2 , ""%02x"" , bytes [ i ] )"		879907	0					
ANR	879959	Callee	sprintf		879907	0					
ANR	879960	Identifier	sprintf		879907	0					
ANR	879961	ArgumentList	hex + i * 2		879907	1					
ANR	879962	Argument	hex + i * 2		879907	0					
ANR	879963	AdditiveExpression	hex + i * 2		879907	0		+			
ANR	879964	Identifier	hex		879907	0					
ANR	879965	MultiplicativeExpression	i * 2		879907	1		*			
ANR	879966	Identifier	i		879907	0					
ANR	879967	PrimaryExpression	2		879907	1					
ANR	879968	Argument	"""%02x"""		879907	1					
ANR	879969	PrimaryExpression	"""%02x"""		879907	0					
ANR	879970	Argument	bytes [ i ]		879907	2					
ANR	879971	ArrayIndexing	bytes [ i ]		879907	0					
ANR	879972	Identifier	bytes		879907	0					
ANR	879973	Identifier	i		879907	1					
ANR	879974	ExpressionStatement	free ( bytes )	113:1:2806:2817	879907	4	True				
ANR	879975	CallExpression	free ( bytes )		879907	0					
ANR	879976	Callee	free		879907	0					
ANR	879977	Identifier	free		879907	0					
ANR	879978	ArgumentList	bytes		879907	1					
ANR	879979	Argument	bytes		879907	0					
ANR	879980	Identifier	bytes		879907	0					
ANR	879981	ReturnStatement	return hex ;	114:1:2820:2830	879907	5	True				
ANR	879982	Identifier	hex		879907	0					
ANR	879983	ReturnType	char *		879907	1					
ANR	879984	Identifier	Condor_Crypt_Base :: randomHexKey		879907	2					
ANR	879985	ParameterList	int length		879907	3					
ANR	879986	Parameter	int length	105:38:2633:2642	879907	0	True				
ANR	879987	ParameterType	int		879907	0					
ANR	879988	Identifier	length		879907	1					
ANR	879989	CFGEntryNode	ENTRY		879907		True				
ANR	879990	CFGExitNode	EXIT		879907		True				
ANR	879991	Symbol	randomKey		879907						
ANR	879992	Symbol	malloc		879907						
ANR	879993	Symbol	* i		879907						
ANR	879994	Symbol	bytes		879907						
ANR	879995	Symbol	length		879907						
ANR	879996	Symbol	i		879907						
ANR	879997	Symbol	hex		879907						
ANR	879998	Symbol	* bytes		879907						
ANR	879999	Function	Condor_Crypt_Base :: oneWayHashKey	117:0:2835:3056							
ANR	880000	FunctionDef	Condor_Crypt_Base :: oneWayHashKey (const char * initialKey)		879999	0					
ANR	880001	CompoundStatement		118:0:2911:3056	879999	0					
ANR	880002	ReturnStatement	"return Condor_MD_MAC :: computeOnce ( ( unsigned char * ) initialKey , strlen ( initialKey ) ) ;"	120:4:2941:3023	879999	0	True				
ANR	880003	CallExpression	"Condor_MD_MAC :: computeOnce ( ( unsigned char * ) initialKey , strlen ( initialKey ) )"		879999	0					
ANR	880004	Callee	Condor_MD_MAC :: computeOnce		879999	0					
ANR	880005	Identifier	Condor_MD_MAC :: computeOnce		879999	0					
ANR	880006	ArgumentList	( unsigned char * ) initialKey		879999	1					
ANR	880007	Argument	( unsigned char * ) initialKey		879999	0					
ANR	880008	CastExpression	( unsigned char * ) initialKey		879999	0					
ANR	880009	CastTarget	unsigned char *		879999	0					
ANR	880010	Identifier	initialKey		879999	1					
ANR	880011	Argument	strlen ( initialKey )		879999	1					
ANR	880012	CallExpression	strlen ( initialKey )		879999	0					
ANR	880013	Callee	strlen		879999	0					
ANR	880014	Identifier	strlen		879999	0					
ANR	880015	ArgumentList	initialKey		879999	1					
ANR	880016	Argument	initialKey		879999	0					
ANR	880017	Identifier	initialKey		879999	0					
ANR	880018	ReturnType	unsigned char *		879999	1					
ANR	880019	Identifier	Condor_Crypt_Base :: oneWayHashKey		879999	2					
ANR	880020	ParameterList	const char * initialKey		879999	3					
ANR	880021	Parameter	const char * initialKey	117:51:2886:2908	879999	0	True				
ANR	880022	ParameterType	const char *		879999	0					
ANR	880023	Identifier	initialKey		879999	1					
ANR	880024	CFGEntryNode	ENTRY		879999		True				
ANR	880025	CFGExitNode	EXIT		879999		True				
ANR	880026	Symbol	initialKey		879999						
ANR	880027	Symbol	strlen		879999						
ANR	880028	Symbol	Condor_MD_MAC :: computeOnce		879999						
