command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4985048	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_test_write_term.cpp								
ANR	4985049	DeclStmt									
ANR	4985050	Decl							const char	const char *	VERSION
ANR	4985051	ClassDef	Status	28:0:952:1005							
ANR	4985052	ClassDef	Arguments	30:0:1009:1087							
ANR	4985053	DeclStmt									
ANR	4985054	Decl							const char	const char *	logFile
ANR	4985055	DeclStmt									
ANR	4985056	Decl							int	int	cluster
ANR	4985057	DeclStmt									
ANR	4985058	Decl							bool	bool	writeExec
ANR	4985059	DeclStmt									
ANR	4985060	Decl							Status	"Status ( int argc , char * * argv , Arguments & args )"	CheckArgs
ANR	4985061	DeclStmt									
ANR	4985062	Decl							int	int ( Arguments & args )	WriteTermEvent
ANR	4985063	DeclStmt									
ANR	4985064	Decl							int	int ( Arguments & args )	WriteExecEvent
ANR	4985065	Function	main	45:0:1276:1854							
ANR	4985066	FunctionDef	"main (int argc , char * * argv)"		4985065	0					
ANR	4985067	CompoundStatement		47:0:1308:1854	4985065	0					
ANR	4985068	ExpressionStatement	Termlog = true	49:1:1344:1358	4985065	0	True				
ANR	4985069	AssignmentExpression	Termlog = true		4985065	0		=			
ANR	4985070	Identifier	Termlog		4985065	0					
ANR	4985071	Identifier	true		4985065	1					
ANR	4985072	ExpressionStatement	"dprintf_config ( ""test_write_term"" , get_param_functions ( ) )"	50:1:1361:1417	4985065	1	True				
ANR	4985073	CallExpression	"dprintf_config ( ""test_write_term"" , get_param_functions ( ) )"		4985065	0					
ANR	4985074	Callee	dprintf_config		4985065	0					
ANR	4985075	Identifier	dprintf_config		4985065	0					
ANR	4985076	ArgumentList	"""test_write_term"""		4985065	1					
ANR	4985077	Argument	"""test_write_term"""		4985065	0					
ANR	4985078	PrimaryExpression	"""test_write_term"""		4985065	0					
ANR	4985079	Argument	get_param_functions ( )		4985065	1					
ANR	4985080	CallExpression	get_param_functions ( )		4985065	0					
ANR	4985081	Callee	get_param_functions		4985065	0					
ANR	4985082	Identifier	get_param_functions		4985065	0					
ANR	4985083	ArgumentList			4985065	1					
ANR	4985084	ExpressionStatement	DebugFlags = D_ALWAYS	51:1:1420:1441	4985065	2	True				
ANR	4985085	AssignmentExpression	DebugFlags = D_ALWAYS		4985065	0		=			
ANR	4985086	Identifier	DebugFlags		4985065	0					
ANR	4985087	Identifier	D_ALWAYS		4985065	1					
ANR	4985088	IdentifierDeclStatement	int result = 0 ;	53:1:1445:1460	4985065	3	True				
ANR	4985089	IdentifierDecl	result = 0		4985065	0					
ANR	4985090	IdentifierDeclType	int		4985065	0					
ANR	4985091	Identifier	result		4985065	1					
ANR	4985092	AssignmentExpression	result = 0		4985065	2		=			
ANR	4985093	Identifier	result		4985065	0					
ANR	4985094	PrimaryExpression	0		4985065	1					
ANR	4985095	IdentifierDeclStatement	Arguments args ;	55:1:1464:1478	4985065	4	True				
ANR	4985096	IdentifierDecl	args		4985065	0					
ANR	4985097	IdentifierDeclType	Arguments		4985065	0					
ANR	4985098	Identifier	args		4985065	1					
ANR	4985099	IdentifierDeclStatement	"Status tmpStatus = CheckArgs ( argc , argv , args ) ;"	57:1:1482:1528	4985065	5	True				
ANR	4985100	IdentifierDecl	"tmpStatus = CheckArgs ( argc , argv , args )"		4985065	0					
ANR	4985101	IdentifierDeclType	Status		4985065	0					
ANR	4985102	Identifier	tmpStatus		4985065	1					
ANR	4985103	AssignmentExpression	"tmpStatus = CheckArgs ( argc , argv , args )"		4985065	2		=			
ANR	4985104	Identifier	tmpStatus		4985065	0					
ANR	4985105	CallExpression	"CheckArgs ( argc , argv , args )"		4985065	1					
ANR	4985106	Callee	CheckArgs		4985065	0					
ANR	4985107	Identifier	CheckArgs		4985065	0					
ANR	4985108	ArgumentList	argc		4985065	1					
ANR	4985109	Argument	argc		4985065	0					
ANR	4985110	Identifier	argc		4985065	0					
ANR	4985111	Argument	argv		4985065	1					
ANR	4985112	Identifier	argv		4985065	0					
ANR	4985113	Argument	args		4985065	2					
ANR	4985114	Identifier	args		4985065	0					
ANR	4985115	IfStatement	if ( tmpStatus == STATUS_OK )		4985065	6					
ANR	4985116	Condition	tmpStatus == STATUS_OK	59:6:1537:1558	4985065	0	True				
ANR	4985117	EqualityExpression	tmpStatus == STATUS_OK		4985065	0		==			
ANR	4985118	Identifier	tmpStatus		4985065	0					
ANR	4985119	Identifier	STATUS_OK		4985065	1					
ANR	4985120	CompoundStatement		13:31:253:253	4985065	1					
ANR	4985121	ExpressionStatement	result = WriteTermEvent ( args )	60:2:1566:1595	4985065	0	True				
ANR	4985122	AssignmentExpression	result = WriteTermEvent ( args )		4985065	0		=			
ANR	4985123	Identifier	result		4985065	0					
ANR	4985124	CallExpression	WriteTermEvent ( args )		4985065	1					
ANR	4985125	Callee	WriteTermEvent		4985065	0					
ANR	4985126	Identifier	WriteTermEvent		4985065	0					
ANR	4985127	ArgumentList	args		4985065	1					
ANR	4985128	Argument	args		4985065	0					
ANR	4985129	Identifier	args		4985065	0					
ANR	4985130	ElseStatement	else		4985065	0					
ANR	4985131	IfStatement	if ( tmpStatus == STATUS_ERROR )		4985065	0					
ANR	4985132	Condition	tmpStatus == STATUS_ERROR	61:13:1610:1634	4985065	0	True				
ANR	4985133	EqualityExpression	tmpStatus == STATUS_ERROR		4985065	0		==			
ANR	4985134	Identifier	tmpStatus		4985065	0					
ANR	4985135	Identifier	STATUS_ERROR		4985065	1					
ANR	4985136	CompoundStatement		15:41:329:329	4985065	1					
ANR	4985137	ExpressionStatement	result = 1	62:2:1642:1652	4985065	0	True				
ANR	4985138	AssignmentExpression	result = 1		4985065	0		=			
ANR	4985139	Identifier	result		4985065	0					
ANR	4985140	PrimaryExpression	1		4985065	1					
ANR	4985141	IfStatement	if ( args . writeExec && ( tmpStatus == STATUS_OK ) && ( result == 0 ) )		4985065	7					
ANR	4985142	Condition	args . writeExec && ( tmpStatus == STATUS_OK ) && ( result == 0 )	65:6:1664:1722	4985065	0	True				
ANR	4985143	AndExpression	args . writeExec && ( tmpStatus == STATUS_OK ) && ( result == 0 )		4985065	0		&&			
ANR	4985144	MemberAccess	args . writeExec		4985065	0					
ANR	4985145	Identifier	args		4985065	0					
ANR	4985146	Identifier	writeExec		4985065	1					
ANR	4985147	AndExpression	( tmpStatus == STATUS_OK ) && ( result == 0 )		4985065	1		&&			
ANR	4985148	EqualityExpression	tmpStatus == STATUS_OK		4985065	0		==			
ANR	4985149	Identifier	tmpStatus		4985065	0					
ANR	4985150	Identifier	STATUS_OK		4985065	1					
ANR	4985151	EqualityExpression	result == 0		4985065	1		==			
ANR	4985152	Identifier	result		4985065	0					
ANR	4985153	PrimaryExpression	0		4985065	1					
ANR	4985154	CompoundStatement		19:68:417:417	4985065	1					
ANR	4985155	ExpressionStatement	result = WriteExecEvent ( args )	66:2:1730:1759	4985065	0	True				
ANR	4985156	AssignmentExpression	result = WriteExecEvent ( args )		4985065	0		=			
ANR	4985157	Identifier	result		4985065	0					
ANR	4985158	CallExpression	WriteExecEvent ( args )		4985065	1					
ANR	4985159	Callee	WriteExecEvent		4985065	0					
ANR	4985160	Identifier	WriteExecEvent		4985065	0					
ANR	4985161	ArgumentList	args		4985065	1					
ANR	4985162	Argument	args		4985065	0					
ANR	4985163	Identifier	args		4985065	0					
ANR	4985164	IfStatement	if ( result != 0 )		4985065	8					
ANR	4985165	Condition	result != 0	69:6:1771:1781	4985065	0	True				
ANR	4985166	EqualityExpression	result != 0		4985065	0		!=			
ANR	4985167	Identifier	result		4985065	0					
ANR	4985168	PrimaryExpression	0		4985065	1					
ANR	4985169	CompoundStatement		23:20:476:476	4985065	1					
ANR	4985170	ExpressionStatement	"fprintf ( stderr , ""test_write_term FAILED\\n"" )"	70:2:1789:1832	4985065	0	True				
ANR	4985171	CallExpression	"fprintf ( stderr , ""test_write_term FAILED\\n"" )"		4985065	0					
ANR	4985172	Callee	fprintf		4985065	0					
ANR	4985173	Identifier	fprintf		4985065	0					
ANR	4985174	ArgumentList	stderr		4985065	1					
ANR	4985175	Argument	stderr		4985065	0					
ANR	4985176	Identifier	stderr		4985065	0					
ANR	4985177	Argument	"""test_write_term FAILED\\n"""		4985065	1					
ANR	4985178	PrimaryExpression	"""test_write_term FAILED\\n"""		4985065	0					
ANR	4985179	ReturnStatement	return result ;	73:1:1839:1852	4985065	9	True				
ANR	4985180	Identifier	result		4985065	0					
ANR	4985181	ReturnType	int		4985065	1					
ANR	4985182	Identifier	main		4985065	2					
ANR	4985183	ParameterList	"int argc , char * * argv"		4985065	3					
ANR	4985184	Parameter	int argc	46:5:1285:1292	4985065	0	True				
ANR	4985185	ParameterType	int		4985065	0					
ANR	4985186	Identifier	argc		4985065	1					
ANR	4985187	Parameter	char * * argv	46:15:1295:1305	4985065	1	True				
ANR	4985188	ParameterType	char * *		4985065	0					
ANR	4985189	Identifier	argv		4985065	1					
ANR	4985190	CFGEntryNode	ENTRY		4985065		True				
ANR	4985191	CFGExitNode	EXIT		4985065		True				
ANR	4985192	Symbol	argc		4985065						
ANR	4985193	Symbol	Termlog		4985065						
ANR	4985194	Symbol	get_param_functions		4985065						
ANR	4985195	Symbol	tmpStatus		4985065						
ANR	4985196	Symbol	D_ALWAYS		4985065						
ANR	4985197	Symbol	args . writeExec		4985065						
ANR	4985198	Symbol	DebugFlags		4985065						
ANR	4985199	Symbol	WriteTermEvent		4985065						
ANR	4985200	Symbol	stderr		4985065						
ANR	4985201	Symbol	argv		4985065						
ANR	4985202	Symbol	CheckArgs		4985065						
ANR	4985203	Symbol	STATUS_ERROR		4985065						
ANR	4985204	Symbol	result		4985065						
ANR	4985205	Symbol	args		4985065						
ANR	4985206	Symbol	true		4985065						
ANR	4985207	Symbol	STATUS_OK		4985065						
ANR	4985208	Symbol	WriteExecEvent		4985065						
ANR	4985209	Function	CheckArgs	76:0:1857:3657							
ANR	4985210	FunctionDef	"CheckArgs (int argc , char * * argv , Arguments & args)"		4985209	0					
ANR	4985211	CompoundStatement		78:0:1914:3657	4985209	0					
ANR	4985212	IdentifierDeclStatement	Status status = STATUS_OK ;	79:1:1917:1942	4985209	0	True				
ANR	4985213	IdentifierDecl	status = STATUS_OK		4985209	0					
ANR	4985214	IdentifierDeclType	Status		4985209	0					
ANR	4985215	Identifier	status		4985209	1					
ANR	4985216	AssignmentExpression	status = STATUS_OK		4985209	2		=			
ANR	4985217	Identifier	STATUS_OK		4985209	0					
ANR	4985218	Identifier	STATUS_OK		4985209	1					
ANR	4985219	Statement	const	81:1:1946:1950	4985209	1	True				
ANR	4985220	Statement	char	81:7:1952:1955	4985209	2	True				
ANR	4985221	Statement	*	81:12:1957:1957	4985209	3	True				
ANR	4985222	Statement	usage	81:14:1959:1963	4985209	4	True				
ANR	4985223	Statement	=	81:20:1965:1965	4985209	5	True				
ANR	4985224	Statement	"""Usage: test_write_term [options]\\n"""	81:22:1967:2002	4985209	6	True				
ANR	4985225	Statement	"""  -logfile <filename>: the log file to write\\n"""	82:3:2007:2054	4985209	7	True				
ANR	4985226	Statement	"""  -cluster <number>: the cluster part of the job ID\\n"""	83:3:2059:2113	4985209	8	True				
ANR	4985227	Statement	"""  -exec: write execute event after terminated event\\n"""	84:3:2118:2172	4985209	9	True				
ANR	4985228	Statement	"""  -usage: print this message and exit\\n"""	85:3:2177:2217	4985209	10	True				
ANR	4985229	ExpressionStatement	"""  -version: print the version number and compile date\\n"""	86:3:2222:2279	4985209	11	True				
ANR	4985230	PrimaryExpression	"""  -version: print the version number and compile date\\n"""		4985209	0					
ANR	4985231	ExpressionStatement	args . logFile = NULL	88:1:2283:2302	4985209	12	True				
ANR	4985232	AssignmentExpression	args . logFile = NULL		4985209	0		=			
ANR	4985233	MemberAccess	args . logFile		4985209	0					
ANR	4985234	Identifier	args		4985209	0					
ANR	4985235	Identifier	logFile		4985209	1					
ANR	4985236	Identifier	NULL		4985209	1					
ANR	4985237	ExpressionStatement	args . cluster = - 1	89:1:2305:2322	4985209	13	True				
ANR	4985238	AssignmentExpression	args . cluster = - 1		4985209	0		=			
ANR	4985239	MemberAccess	args . cluster		4985209	0					
ANR	4985240	Identifier	args		4985209	0					
ANR	4985241	Identifier	cluster		4985209	1					
ANR	4985242	UnaryOperationExpression	- 1		4985209	1					
ANR	4985243	UnaryOperator	-		4985209	0					
ANR	4985244	PrimaryExpression	1		4985209	1					
ANR	4985245	ExpressionStatement	args . writeExec = false	90:1:2325:2347	4985209	14	True				
ANR	4985246	AssignmentExpression	args . writeExec = false		4985209	0		=			
ANR	4985247	MemberAccess	args . writeExec		4985209	0					
ANR	4985248	Identifier	args		4985209	0					
ANR	4985249	Identifier	writeExec		4985209	1					
ANR	4985250	Identifier	false		4985209	1					
ANR	4985251	ForStatement	for ( int index = 1 ; index < argc ; ++ index )		4985209	15					
ANR	4985252	ForInit	int index = 1 ;	92:7:2357:2370	4985209	0	True				
ANR	4985253	IdentifierDeclStatement	int index = 1 ;		4985209	0					
ANR	4985254	IdentifierDecl	index = 1		4985209	0					
ANR	4985255	IdentifierDeclType	int		4985209	0					
ANR	4985256	Identifier	index		4985209	1					
ANR	4985257	AssignmentExpression	index = 1		4985209	2		=			
ANR	4985258	Identifier	index		4985209	0					
ANR	4985259	PrimaryExpression	1		4985209	1					
ANR	4985260	Condition	index < argc	92:22:2372:2383	4985209	1	True				
ANR	4985261	RelationalExpression	index < argc		4985209	0		<			
ANR	4985262	Identifier	index		4985209	0					
ANR	4985263	Identifier	argc		4985209	1					
ANR	4985264	UnaryExpression	++ index	92:36:2386:2392	4985209	2	True				
ANR	4985265	IncDec	++		4985209	0					
ANR	4985266	Identifier	index		4985209	1					
ANR	4985267	CompoundStatement		15:46:481:481	4985209	3					
ANR	4985268	IfStatement	"if ( ! strcmp ( argv [ index ] , ""-cluster"" ) )"		4985209	0					
ANR	4985269	Condition	"! strcmp ( argv [ index ] , ""-cluster"" )"	93:7:2405:2436	4985209	0	True				
ANR	4985270	UnaryOperationExpression	"! strcmp ( argv [ index ] , ""-cluster"" )"		4985209	0					
ANR	4985271	UnaryOperator	!		4985209	0					
ANR	4985272	CallExpression	"strcmp ( argv [ index ] , ""-cluster"" )"		4985209	1					
ANR	4985273	Callee	strcmp		4985209	0					
ANR	4985274	Identifier	strcmp		4985209	0					
ANR	4985275	ArgumentList	argv [ index ]		4985209	1					
ANR	4985276	Argument	argv [ index ]		4985209	0					
ANR	4985277	ArrayIndexing	argv [ index ]		4985209	0					
ANR	4985278	Identifier	argv		4985209	0					
ANR	4985279	Identifier	index		4985209	1					
ANR	4985280	Argument	"""-cluster"""		4985209	1					
ANR	4985281	PrimaryExpression	"""-cluster"""		4985209	0					
ANR	4985282	CompoundStatement		16:42:525:525	4985209	1					
ANR	4985283	IfStatement	if ( ++ index >= argc )		4985209	0					
ANR	4985284	Condition	++ index >= argc	94:8:2450:2464	4985209	0	True				
ANR	4985285	RelationalExpression	++ index >= argc		4985209	0		>=			
ANR	4985286	UnaryExpression	++ index		4985209	0					
ANR	4985287	IncDec	++		4985209	0					
ANR	4985288	Identifier	index		4985209	1					
ANR	4985289	Identifier	argc		4985209	1					
ANR	4985290	CompoundStatement		17:26:553:553	4985209	1					
ANR	4985291	ExpressionStatement	"fprintf ( stderr , ""Value needed for -cluster argument\\n"" )"	95:4:2474:2529	4985209	0	True				
ANR	4985292	CallExpression	"fprintf ( stderr , ""Value needed for -cluster argument\\n"" )"		4985209	0					
ANR	4985293	Callee	fprintf		4985209	0					
ANR	4985294	Identifier	fprintf		4985209	0					
ANR	4985295	ArgumentList	stderr		4985209	1					
ANR	4985296	Argument	stderr		4985209	0					
ANR	4985297	Identifier	stderr		4985209	0					
ANR	4985298	Argument	"""Value needed for -cluster argument\\n"""		4985209	1					
ANR	4985299	PrimaryExpression	"""Value needed for -cluster argument\\n"""		4985209	0					
ANR	4985300	ExpressionStatement	"printf ( ""%s"" , usage )"	96:4:2535:2554	4985209	1	True				
ANR	4985301	CallExpression	"printf ( ""%s"" , usage )"		4985209	0					
ANR	4985302	Callee	printf		4985209	0					
ANR	4985303	Identifier	printf		4985209	0					
ANR	4985304	ArgumentList	"""%s"""		4985209	1					
ANR	4985305	Argument	"""%s"""		4985209	0					
ANR	4985306	PrimaryExpression	"""%s"""		4985209	0					
ANR	4985307	Argument	usage		4985209	1					
ANR	4985308	Identifier	usage		4985209	0					
ANR	4985309	ExpressionStatement	status = STATUS_ERROR	97:4:2560:2581	4985209	2	True				
ANR	4985310	AssignmentExpression	status = STATUS_ERROR		4985209	0		=			
ANR	4985311	Identifier	status		4985209	0					
ANR	4985312	Identifier	STATUS_ERROR		4985209	1					
ANR	4985313	ElseStatement	else		4985209	0					
ANR	4985314	CompoundStatement		21:10:678:678	4985209	0					
ANR	4985315	ExpressionStatement	args . cluster = atoi ( argv [ index ] )	99:4:2599:2631	4985209	0	True				
ANR	4985316	AssignmentExpression	args . cluster = atoi ( argv [ index ] )		4985209	0		=			
ANR	4985317	MemberAccess	args . cluster		4985209	0					
ANR	4985318	Identifier	args		4985209	0					
ANR	4985319	Identifier	cluster		4985209	1					
ANR	4985320	CallExpression	atoi ( argv [ index ] )		4985209	1					
ANR	4985321	Callee	atoi		4985209	0					
ANR	4985322	Identifier	atoi		4985209	0					
ANR	4985323	ArgumentList	argv [ index ]		4985209	1					
ANR	4985324	Argument	argv [ index ]		4985209	0					
ANR	4985325	ArrayIndexing	argv [ index ]		4985209	0					
ANR	4985326	Identifier	argv		4985209	0					
ANR	4985327	Identifier	index		4985209	1					
ANR	4985328	ElseStatement	else		4985209	0					
ANR	4985329	IfStatement	"if ( ! strcmp ( argv [ index ] , ""-logfile"" ) )"		4985209	0					
ANR	4985330	Condition	"! strcmp ( argv [ index ] , ""-logfile"" )"	102:14:2653:2684	4985209	0	True				
ANR	4985331	UnaryOperationExpression	"! strcmp ( argv [ index ] , ""-logfile"" )"		4985209	0					
ANR	4985332	UnaryOperator	!		4985209	0					
ANR	4985333	CallExpression	"strcmp ( argv [ index ] , ""-logfile"" )"		4985209	1					
ANR	4985334	Callee	strcmp		4985209	0					
ANR	4985335	Identifier	strcmp		4985209	0					
ANR	4985336	ArgumentList	argv [ index ]		4985209	1					
ANR	4985337	Argument	argv [ index ]		4985209	0					
ANR	4985338	ArrayIndexing	argv [ index ]		4985209	0					
ANR	4985339	Identifier	argv		4985209	0					
ANR	4985340	Identifier	index		4985209	1					
ANR	4985341	Argument	"""-logfile"""		4985209	1					
ANR	4985342	PrimaryExpression	"""-logfile"""		4985209	0					
ANR	4985343	CompoundStatement		25:49:773:773	4985209	1					
ANR	4985344	IfStatement	if ( ++ index >= argc )		4985209	0					
ANR	4985345	Condition	++ index >= argc	103:8:2698:2712	4985209	0	True				
ANR	4985346	RelationalExpression	++ index >= argc		4985209	0		>=			
ANR	4985347	UnaryExpression	++ index		4985209	0					
ANR	4985348	IncDec	++		4985209	0					
ANR	4985349	Identifier	index		4985209	1					
ANR	4985350	Identifier	argc		4985209	1					
ANR	4985351	CompoundStatement		26:26:801:801	4985209	1					
ANR	4985352	ExpressionStatement	"fprintf ( stderr , ""Value needed for -logfile argument\\n"" )"	104:4:2722:2777	4985209	0	True				
ANR	4985353	CallExpression	"fprintf ( stderr , ""Value needed for -logfile argument\\n"" )"		4985209	0					
ANR	4985354	Callee	fprintf		4985209	0					
ANR	4985355	Identifier	fprintf		4985209	0					
ANR	4985356	ArgumentList	stderr		4985209	1					
ANR	4985357	Argument	stderr		4985209	0					
ANR	4985358	Identifier	stderr		4985209	0					
ANR	4985359	Argument	"""Value needed for -logfile argument\\n"""		4985209	1					
ANR	4985360	PrimaryExpression	"""Value needed for -logfile argument\\n"""		4985209	0					
ANR	4985361	ExpressionStatement	"printf ( ""%s"" , usage )"	105:4:2783:2802	4985209	1	True				
ANR	4985362	CallExpression	"printf ( ""%s"" , usage )"		4985209	0					
ANR	4985363	Callee	printf		4985209	0					
ANR	4985364	Identifier	printf		4985209	0					
ANR	4985365	ArgumentList	"""%s"""		4985209	1					
ANR	4985366	Argument	"""%s"""		4985209	0					
ANR	4985367	PrimaryExpression	"""%s"""		4985209	0					
ANR	4985368	Argument	usage		4985209	1					
ANR	4985369	Identifier	usage		4985209	0					
ANR	4985370	ExpressionStatement	status = STATUS_ERROR	106:4:2808:2829	4985209	2	True				
ANR	4985371	AssignmentExpression	status = STATUS_ERROR		4985209	0		=			
ANR	4985372	Identifier	status		4985209	0					
ANR	4985373	Identifier	STATUS_ERROR		4985209	1					
ANR	4985374	ElseStatement	else		4985209	0					
ANR	4985375	CompoundStatement		30:10:926:926	4985209	0					
ANR	4985376	ExpressionStatement	args . logFile = argv [ index ]	108:4:2847:2873	4985209	0	True				
ANR	4985377	AssignmentExpression	args . logFile = argv [ index ]		4985209	0		=			
ANR	4985378	MemberAccess	args . logFile		4985209	0					
ANR	4985379	Identifier	args		4985209	0					
ANR	4985380	Identifier	logFile		4985209	1					
ANR	4985381	ArrayIndexing	argv [ index ]		4985209	1					
ANR	4985382	Identifier	argv		4985209	0					
ANR	4985383	Identifier	index		4985209	1					
ANR	4985384	ElseStatement	else		4985209	0					
ANR	4985385	IfStatement	"if ( ! strcmp ( argv [ index ] , ""-exec"" ) )"		4985209	0					
ANR	4985386	Condition	"! strcmp ( argv [ index ] , ""-exec"" )"	111:14:2895:2923	4985209	0	True				
ANR	4985387	UnaryOperationExpression	"! strcmp ( argv [ index ] , ""-exec"" )"		4985209	0					
ANR	4985388	UnaryOperator	!		4985209	0					
ANR	4985389	CallExpression	"strcmp ( argv [ index ] , ""-exec"" )"		4985209	1					
ANR	4985390	Callee	strcmp		4985209	0					
ANR	4985391	Identifier	strcmp		4985209	0					
ANR	4985392	ArgumentList	argv [ index ]		4985209	1					
ANR	4985393	Argument	argv [ index ]		4985209	0					
ANR	4985394	ArrayIndexing	argv [ index ]		4985209	0					
ANR	4985395	Identifier	argv		4985209	0					
ANR	4985396	Identifier	index		4985209	1					
ANR	4985397	Argument	"""-exec"""		4985209	1					
ANR	4985398	PrimaryExpression	"""-exec"""		4985209	0					
ANR	4985399	CompoundStatement		34:46:1012:1012	4985209	1					
ANR	4985400	ExpressionStatement	args . writeExec = true	112:3:2932:2953	4985209	0	True				
ANR	4985401	AssignmentExpression	args . writeExec = true		4985209	0		=			
ANR	4985402	MemberAccess	args . writeExec		4985209	0					
ANR	4985403	Identifier	args		4985209	0					
ANR	4985404	Identifier	writeExec		4985209	1					
ANR	4985405	Identifier	true		4985209	1					
ANR	4985406	ElseStatement	else		4985209	0					
ANR	4985407	IfStatement	"if ( ! strcmp ( argv [ index ] , ""-usage"" ) )"		4985209	0					
ANR	4985408	Condition	"! strcmp ( argv [ index ] , ""-usage"" )"	114:14:2970:2999	4985209	0	True				
ANR	4985409	UnaryOperationExpression	"! strcmp ( argv [ index ] , ""-usage"" )"		4985209	0					
ANR	4985410	UnaryOperator	!		4985209	0					
ANR	4985411	CallExpression	"strcmp ( argv [ index ] , ""-usage"" )"		4985209	1					
ANR	4985412	Callee	strcmp		4985209	0					
ANR	4985413	Identifier	strcmp		4985209	0					
ANR	4985414	ArgumentList	argv [ index ]		4985209	1					
ANR	4985415	Argument	argv [ index ]		4985209	0					
ANR	4985416	ArrayIndexing	argv [ index ]		4985209	0					
ANR	4985417	Identifier	argv		4985209	0					
ANR	4985418	Identifier	index		4985209	1					
ANR	4985419	Argument	"""-usage"""		4985209	1					
ANR	4985420	PrimaryExpression	"""-usage"""		4985209	0					
ANR	4985421	CompoundStatement		37:47:1088:1088	4985209	1					
ANR	4985422	ExpressionStatement	"printf ( ""%s"" , usage )"	115:3:3008:3027	4985209	0	True				
ANR	4985423	CallExpression	"printf ( ""%s"" , usage )"		4985209	0					
ANR	4985424	Callee	printf		4985209	0					
ANR	4985425	Identifier	printf		4985209	0					
ANR	4985426	ArgumentList	"""%s"""		4985209	1					
ANR	4985427	Argument	"""%s"""		4985209	0					
ANR	4985428	PrimaryExpression	"""%s"""		4985209	0					
ANR	4985429	Argument	usage		4985209	1					
ANR	4985430	Identifier	usage		4985209	0					
ANR	4985431	ExpressionStatement	status = STATUS_CANCEL	116:3:3032:3054	4985209	1	True				
ANR	4985432	AssignmentExpression	status = STATUS_CANCEL		4985209	0		=			
ANR	4985433	Identifier	status		4985209	0					
ANR	4985434	Identifier	STATUS_CANCEL		4985209	1					
ANR	4985435	ElseStatement	else		4985209	0					
ANR	4985436	IfStatement	"if ( ! strcmp ( argv [ index ] , ""-version"" ) )"		4985209	0					
ANR	4985437	Condition	"! strcmp ( argv [ index ] , ""-version"" )"	118:14:3071:3102	4985209	0	True				
ANR	4985438	UnaryOperationExpression	"! strcmp ( argv [ index ] , ""-version"" )"		4985209	0					
ANR	4985439	UnaryOperator	!		4985209	0					
ANR	4985440	CallExpression	"strcmp ( argv [ index ] , ""-version"" )"		4985209	1					
ANR	4985441	Callee	strcmp		4985209	0					
ANR	4985442	Identifier	strcmp		4985209	0					
ANR	4985443	ArgumentList	argv [ index ]		4985209	1					
ANR	4985444	Argument	argv [ index ]		4985209	0					
ANR	4985445	ArrayIndexing	argv [ index ]		4985209	0					
ANR	4985446	Identifier	argv		4985209	0					
ANR	4985447	Identifier	index		4985209	1					
ANR	4985448	Argument	"""-version"""		4985209	1					
ANR	4985449	PrimaryExpression	"""-version"""		4985209	0					
ANR	4985450	CompoundStatement		41:49:1191:1191	4985209	1					
ANR	4985451	ExpressionStatement	"printf ( ""test_write_term: %s, %s\\n"" , VERSION , __DATE__ )"	119:3:3111:3165	4985209	0	True				
ANR	4985452	CallExpression	"printf ( ""test_write_term: %s, %s\\n"" , VERSION , __DATE__ )"		4985209	0					
ANR	4985453	Callee	printf		4985209	0					
ANR	4985454	Identifier	printf		4985209	0					
ANR	4985455	ArgumentList	"""test_write_term: %s, %s\\n"""		4985209	1					
ANR	4985456	Argument	"""test_write_term: %s, %s\\n"""		4985209	0					
ANR	4985457	PrimaryExpression	"""test_write_term: %s, %s\\n"""		4985209	0					
ANR	4985458	Argument	VERSION		4985209	1					
ANR	4985459	Identifier	VERSION		4985209	0					
ANR	4985460	Argument	__DATE__		4985209	2					
ANR	4985461	Identifier	__DATE__		4985209	0					
ANR	4985462	ExpressionStatement	status = STATUS_CANCEL	120:3:3170:3192	4985209	1	True				
ANR	4985463	AssignmentExpression	status = STATUS_CANCEL		4985209	0		=			
ANR	4985464	Identifier	status		4985209	0					
ANR	4985465	Identifier	STATUS_CANCEL		4985209	1					
ANR	4985466	ElseStatement	else		4985209	0					
ANR	4985467	CompoundStatement		45:9:1289:1289	4985209	0					
ANR	4985468	ExpressionStatement	"fprintf ( stderr , ""Unrecognized argument: <%s>\\n"" , argv [ index ] )"	123:3:3209:3270	4985209	0	True				
ANR	4985469	CallExpression	"fprintf ( stderr , ""Unrecognized argument: <%s>\\n"" , argv [ index ] )"		4985209	0					
ANR	4985470	Callee	fprintf		4985209	0					
ANR	4985471	Identifier	fprintf		4985209	0					
ANR	4985472	ArgumentList	stderr		4985209	1					
ANR	4985473	Argument	stderr		4985209	0					
ANR	4985474	Identifier	stderr		4985209	0					
ANR	4985475	Argument	"""Unrecognized argument: <%s>\\n"""		4985209	1					
ANR	4985476	PrimaryExpression	"""Unrecognized argument: <%s>\\n"""		4985209	0					
ANR	4985477	Argument	argv [ index ]		4985209	2					
ANR	4985478	ArrayIndexing	argv [ index ]		4985209	0					
ANR	4985479	Identifier	argv		4985209	0					
ANR	4985480	Identifier	index		4985209	1					
ANR	4985481	ExpressionStatement	"printf ( ""%s"" , usage )"	124:3:3275:3294	4985209	1	True				
ANR	4985482	CallExpression	"printf ( ""%s"" , usage )"		4985209	0					
ANR	4985483	Callee	printf		4985209	0					
ANR	4985484	Identifier	printf		4985209	0					
ANR	4985485	ArgumentList	"""%s"""		4985209	1					
ANR	4985486	Argument	"""%s"""		4985209	0					
ANR	4985487	PrimaryExpression	"""%s"""		4985209	0					
ANR	4985488	Argument	usage		4985209	1					
ANR	4985489	Identifier	usage		4985209	0					
ANR	4985490	ExpressionStatement	status = STATUS_ERROR	125:3:3299:3320	4985209	2	True				
ANR	4985491	AssignmentExpression	status = STATUS_ERROR		4985209	0		=			
ANR	4985492	Identifier	status		4985209	0					
ANR	4985493	Identifier	STATUS_ERROR		4985209	1					
ANR	4985494	IfStatement	if ( status == STATUS_OK && args . logFile == NULL )		4985209	16					
ANR	4985495	Condition	status == STATUS_OK && args . logFile == NULL	129:6:3336:3378	4985209	0	True				
ANR	4985496	AndExpression	status == STATUS_OK && args . logFile == NULL		4985209	0		&&			
ANR	4985497	EqualityExpression	status == STATUS_OK		4985209	0		==			
ANR	4985498	Identifier	status		4985209	0					
ANR	4985499	Identifier	STATUS_OK		4985209	1					
ANR	4985500	EqualityExpression	args . logFile == NULL		4985209	1		==			
ANR	4985501	MemberAccess	args . logFile		4985209	0					
ANR	4985502	Identifier	args		4985209	0					
ANR	4985503	Identifier	logFile		4985209	1					
ANR	4985504	Identifier	NULL		4985209	1					
ANR	4985505	CompoundStatement		52:52:1467:1467	4985209	1					
ANR	4985506	ExpressionStatement	"fprintf ( stderr , ""Log file must be specified\\n"" )"	130:2:3386:3433	4985209	0	True				
ANR	4985507	CallExpression	"fprintf ( stderr , ""Log file must be specified\\n"" )"		4985209	0					
ANR	4985508	Callee	fprintf		4985209	0					
ANR	4985509	Identifier	fprintf		4985209	0					
ANR	4985510	ArgumentList	stderr		4985209	1					
ANR	4985511	Argument	stderr		4985209	0					
ANR	4985512	Identifier	stderr		4985209	0					
ANR	4985513	Argument	"""Log file must be specified\\n"""		4985209	1					
ANR	4985514	PrimaryExpression	"""Log file must be specified\\n"""		4985209	0					
ANR	4985515	ExpressionStatement	"printf ( ""%s"" , usage )"	131:2:3437:3456	4985209	1	True				
ANR	4985516	CallExpression	"printf ( ""%s"" , usage )"		4985209	0					
ANR	4985517	Callee	printf		4985209	0					
ANR	4985518	Identifier	printf		4985209	0					
ANR	4985519	ArgumentList	"""%s"""		4985209	1					
ANR	4985520	Argument	"""%s"""		4985209	0					
ANR	4985521	PrimaryExpression	"""%s"""		4985209	0					
ANR	4985522	Argument	usage		4985209	1					
ANR	4985523	Identifier	usage		4985209	0					
ANR	4985524	ExpressionStatement	status = STATUS_ERROR	132:2:3460:3481	4985209	2	True				
ANR	4985525	AssignmentExpression	status = STATUS_ERROR		4985209	0		=			
ANR	4985526	Identifier	status		4985209	0					
ANR	4985527	Identifier	STATUS_ERROR		4985209	1					
ANR	4985528	IfStatement	if ( status == STATUS_OK && args . cluster == - 1 )		4985209	17					
ANR	4985529	Condition	status == STATUS_OK && args . cluster == - 1	135:6:3493:3533	4985209	0	True				
ANR	4985530	AndExpression	status == STATUS_OK && args . cluster == - 1		4985209	0		&&			
ANR	4985531	EqualityExpression	status == STATUS_OK		4985209	0		==			
ANR	4985532	Identifier	status		4985209	0					
ANR	4985533	Identifier	STATUS_OK		4985209	1					
ANR	4985534	EqualityExpression	args . cluster == - 1		4985209	1		==			
ANR	4985535	MemberAccess	args . cluster		4985209	0					
ANR	4985536	Identifier	args		4985209	0					
ANR	4985537	Identifier	cluster		4985209	1					
ANR	4985538	UnaryOperationExpression	- 1		4985209	1					
ANR	4985539	UnaryOperator	-		4985209	0					
ANR	4985540	PrimaryExpression	1		4985209	1					
ANR	4985541	CompoundStatement		58:50:1622:1622	4985209	1					
ANR	4985542	ExpressionStatement	"fprintf ( stderr , ""Cluster must be specified\\n"" )"	136:2:3541:3587	4985209	0	True				
ANR	4985543	CallExpression	"fprintf ( stderr , ""Cluster must be specified\\n"" )"		4985209	0					
ANR	4985544	Callee	fprintf		4985209	0					
ANR	4985545	Identifier	fprintf		4985209	0					
ANR	4985546	ArgumentList	stderr		4985209	1					
ANR	4985547	Argument	stderr		4985209	0					
ANR	4985548	Identifier	stderr		4985209	0					
ANR	4985549	Argument	"""Cluster must be specified\\n"""		4985209	1					
ANR	4985550	PrimaryExpression	"""Cluster must be specified\\n"""		4985209	0					
ANR	4985551	ExpressionStatement	"printf ( ""%s"" , usage )"	137:2:3591:3610	4985209	1	True				
ANR	4985552	CallExpression	"printf ( ""%s"" , usage )"		4985209	0					
ANR	4985553	Callee	printf		4985209	0					
ANR	4985554	Identifier	printf		4985209	0					
ANR	4985555	ArgumentList	"""%s"""		4985209	1					
ANR	4985556	Argument	"""%s"""		4985209	0					
ANR	4985557	PrimaryExpression	"""%s"""		4985209	0					
ANR	4985558	Argument	usage		4985209	1					
ANR	4985559	Identifier	usage		4985209	0					
ANR	4985560	ExpressionStatement	status = STATUS_ERROR	138:2:3614:3635	4985209	2	True				
ANR	4985561	AssignmentExpression	status = STATUS_ERROR		4985209	0		=			
ANR	4985562	Identifier	status		4985209	0					
ANR	4985563	Identifier	STATUS_ERROR		4985209	1					
ANR	4985564	ReturnStatement	return status ;	141:1:3642:3655	4985209	18	True				
ANR	4985565	Identifier	status		4985209	0					
ANR	4985566	ReturnType	Status		4985209	1					
ANR	4985567	Identifier	CheckArgs		4985209	2					
ANR	4985568	ParameterList	"int argc , char * * argv , Arguments & args"		4985209	3					
ANR	4985569	Parameter	int argc	77:10:1874:1881	4985209	0	True				
ANR	4985570	ParameterType	int		4985209	0					
ANR	4985571	Identifier	argc		4985209	1					
ANR	4985572	Parameter	char * * argv	77:20:1884:1894	4985209	1	True				
ANR	4985573	ParameterType	char * *		4985209	0					
ANR	4985574	Identifier	argv		4985209	1					
ANR	4985575	Parameter	Arguments & args	77:33:1897:1911	4985209	2	True				
ANR	4985576	ParameterType	Arguments &		4985209	0					
ANR	4985577	Identifier	args		4985209	1					
ANR	4985578	CFGEntryNode	ENTRY		4985209		True				
ANR	4985579	CFGExitNode	EXIT		4985209		True				
ANR	4985580	Symbol	argc		4985209						
ANR	4985581	Symbol	strcmp		4985209						
ANR	4985582	Symbol	atoi		4985209						
ANR	4985583	Symbol	STATUS_CANCEL		4985209						
ANR	4985584	Symbol	NULL		4985209						
ANR	4985585	Symbol	args . logFile		4985209						
ANR	4985586	Symbol	* index		4985209						
ANR	4985587	Symbol	usage		4985209						
ANR	4985588	Symbol	false		4985209						
ANR	4985589	Symbol	args . writeExec		4985209						
ANR	4985590	Symbol	index		4985209						
ANR	4985591	Symbol	* argv		4985209						
ANR	4985592	Symbol	__DATE__		4985209						
ANR	4985593	Symbol	stderr		4985209						
ANR	4985594	Symbol	argv		4985209						
ANR	4985595	Symbol	STATUS_ERROR		4985209						
ANR	4985596	Symbol	args		4985209						
ANR	4985597	Symbol	args . cluster		4985209						
ANR	4985598	Symbol	true		4985209						
ANR	4985599	Symbol	VERSION		4985209						
ANR	4985600	Symbol	STATUS_OK		4985209						
ANR	4985601	Symbol	status		4985209						
ANR	4985602	Function	WriteTermEvent	144:0:3660:4256							
ANR	4985603	FunctionDef	WriteTermEvent (Arguments & args)		4985602	0					
ANR	4985604	CompoundStatement		146:0:3696:4256	4985602	0					
ANR	4985605	IdentifierDeclStatement	int result = 0 ;	147:1:3699:3714	4985602	0	True				
ANR	4985606	IdentifierDecl	result = 0		4985602	0					
ANR	4985607	IdentifierDeclType	int		4985602	0					
ANR	4985608	Identifier	result		4985602	1					
ANR	4985609	AssignmentExpression	result = 0		4985602	2		=			
ANR	4985610	Identifier	result		4985602	0					
ANR	4985611	PrimaryExpression	0		4985602	1					
ANR	4985612	IdentifierDeclStatement	"UserLog log ( ""owner"" , args . logFile , args . cluster , 0 , 0 , false ) ;"	149:1:3718:3779	4985602	1	True				
ANR	4985613	IdentifierDecl	"log ( ""owner"" , args . logFile , args . cluster , 0 , 0 , false )"		4985602	0					
ANR	4985614	IdentifierDeclType	UserLog		4985602	0					
ANR	4985615	Identifier	log		4985602	1					
ANR	4985616	Expression	"""owner"" , args . logFile , args . cluster , 0 , 0 , false"		4985602	2					
ANR	4985617	PrimaryExpression	"""owner"""		4985602	0					
ANR	4985618	Expression	"args . logFile , args . cluster , 0 , 0 , false"		4985602	1					
ANR	4985619	MemberAccess	args . logFile		4985602	0					
ANR	4985620	Identifier	args		4985602	0					
ANR	4985621	Identifier	logFile		4985602	1					
ANR	4985622	Expression	"args . cluster , 0 , 0 , false"		4985602	1					
ANR	4985623	MemberAccess	args . cluster		4985602	0					
ANR	4985624	Identifier	args		4985602	0					
ANR	4985625	Identifier	cluster		4985602	1					
ANR	4985626	Expression	"0 , 0 , false"		4985602	1					
ANR	4985627	PrimaryExpression	0		4985602	0					
ANR	4985628	Expression	"0 , false"		4985602	1					
ANR	4985629	PrimaryExpression	0		4985602	0					
ANR	4985630	Identifier	false		4985602	1					
ANR	4985631	ExpressionStatement	sleep ( 10 )	151:1:3783:3792	4985602	2	True				
ANR	4985632	CallExpression	sleep ( 10 )		4985602	0					
ANR	4985633	Callee	sleep		4985602	0					
ANR	4985634	Identifier	sleep		4985602	0					
ANR	4985635	ArgumentList	10		4985602	1					
ANR	4985636	Argument	10		4985602	0					
ANR	4985637	PrimaryExpression	10		4985602	0					
ANR	4985638	ExpressionStatement	"printf ( ""Writing terminated event\\n"" )"	156:1:3839:3875	4985602	3	True				
ANR	4985639	CallExpression	"printf ( ""Writing terminated event\\n"" )"		4985602	0					
ANR	4985640	Callee	printf		4985602	0					
ANR	4985641	Identifier	printf		4985602	0					
ANR	4985642	ArgumentList	"""Writing terminated event\\n"""		4985602	1					
ANR	4985643	Argument	"""Writing terminated event\\n"""		4985602	0					
ANR	4985644	PrimaryExpression	"""Writing terminated event\\n"""		4985602	0					
ANR	4985645	IdentifierDeclStatement	JobTerminatedEvent terminated ;	158:1:3879:3908	4985602	4	True				
ANR	4985646	IdentifierDecl	terminated		4985602	0					
ANR	4985647	IdentifierDeclType	JobTerminatedEvent		4985602	0					
ANR	4985648	Identifier	terminated		4985602	1					
ANR	4985649	ExpressionStatement	terminated . normal = true	159:1:3911:3935	4985602	5	True				
ANR	4985650	AssignmentExpression	terminated . normal = true		4985602	0		=			
ANR	4985651	MemberAccess	terminated . normal		4985602	0					
ANR	4985652	Identifier	terminated		4985602	0					
ANR	4985653	Identifier	normal		4985602	1					
ANR	4985654	Identifier	true		4985602	1					
ANR	4985655	ExpressionStatement	terminated . returnValue = 0	160:1:3938:3964	4985602	6	True				
ANR	4985656	AssignmentExpression	terminated . returnValue = 0		4985602	0		=			
ANR	4985657	MemberAccess	terminated . returnValue		4985602	0					
ANR	4985658	Identifier	terminated		4985602	0					
ANR	4985659	Identifier	returnValue		4985602	1					
ANR	4985660	PrimaryExpression	0		4985602	1					
ANR	4985661	ExpressionStatement	terminated . signalNumber = 0	161:1:3967:3994	4985602	7	True				
ANR	4985662	AssignmentExpression	terminated . signalNumber = 0		4985602	0		=			
ANR	4985663	MemberAccess	terminated . signalNumber		4985602	0					
ANR	4985664	Identifier	terminated		4985602	0					
ANR	4985665	Identifier	signalNumber		4985602	1					
ANR	4985666	PrimaryExpression	0		4985602	1					
ANR	4985667	ExpressionStatement	terminated . sent_bytes = 1000	162:1:3997:4025	4985602	8	True				
ANR	4985668	AssignmentExpression	terminated . sent_bytes = 1000		4985602	0		=			
ANR	4985669	MemberAccess	terminated . sent_bytes		4985602	0					
ANR	4985670	Identifier	terminated		4985602	0					
ANR	4985671	Identifier	sent_bytes		4985602	1					
ANR	4985672	PrimaryExpression	1000		4985602	1					
ANR	4985673	ExpressionStatement	terminated . recvd_bytes = 2000	163:1:4028:4057	4985602	9	True				
ANR	4985674	AssignmentExpression	terminated . recvd_bytes = 2000		4985602	0		=			
ANR	4985675	MemberAccess	terminated . recvd_bytes		4985602	0					
ANR	4985676	Identifier	terminated		4985602	0					
ANR	4985677	Identifier	recvd_bytes		4985602	1					
ANR	4985678	PrimaryExpression	2000		4985602	1					
ANR	4985679	ExpressionStatement	terminated . total_sent_bytes = 5000	164:1:4060:4094	4985602	10	True				
ANR	4985680	AssignmentExpression	terminated . total_sent_bytes = 5000		4985602	0		=			
ANR	4985681	MemberAccess	terminated . total_sent_bytes		4985602	0					
ANR	4985682	Identifier	terminated		4985602	0					
ANR	4985683	Identifier	total_sent_bytes		4985602	1					
ANR	4985684	PrimaryExpression	5000		4985602	1					
ANR	4985685	ExpressionStatement	terminated . total_recvd_bytes = 7000	165:1:4097:4132	4985602	11	True				
ANR	4985686	AssignmentExpression	terminated . total_recvd_bytes = 7000		4985602	0		=			
ANR	4985687	MemberAccess	terminated . total_recvd_bytes		4985602	0					
ANR	4985688	Identifier	terminated		4985602	0					
ANR	4985689	Identifier	total_recvd_bytes		4985602	1					
ANR	4985690	PrimaryExpression	7000		4985602	1					
ANR	4985691	IfStatement	if ( ! log . writeEvent ( & terminated ) )		4985602	12					
ANR	4985692	Condition	! log . writeEvent ( & terminated )	167:6:4141:4168	4985602	0	True				
ANR	4985693	UnaryOperationExpression	! log . writeEvent ( & terminated )		4985602	0					
ANR	4985694	UnaryOperator	!		4985602	0					
ANR	4985695	CallExpression	log . writeEvent ( & terminated )		4985602	1					
ANR	4985696	Callee	log . writeEvent		4985602	0					
ANR	4985697	MemberAccess	log . writeEvent		4985602	0					
ANR	4985698	Identifier	log		4985602	0					
ANR	4985699	Identifier	writeEvent		4985602	1					
ANR	4985700	ArgumentList	& terminated		4985602	1					
ANR	4985701	Argument	& terminated		4985602	0					
ANR	4985702	UnaryOperationExpression	& terminated		4985602	0					
ANR	4985703	UnaryOperator	&		4985602	0					
ANR	4985704	Identifier	terminated		4985602	1					
ANR	4985705	CompoundStatement		22:37:475:475	4985602	1					
ANR	4985706	ExpressionStatement	"fprintf ( stderr , ""Error writing log event\\n"" )"	168:2:4176:4220	4985602	0	True				
ANR	4985707	CallExpression	"fprintf ( stderr , ""Error writing log event\\n"" )"		4985602	0					
ANR	4985708	Callee	fprintf		4985602	0					
ANR	4985709	Identifier	fprintf		4985602	0					
ANR	4985710	ArgumentList	stderr		4985602	1					
ANR	4985711	Argument	stderr		4985602	0					
ANR	4985712	Identifier	stderr		4985602	0					
ANR	4985713	Argument	"""Error writing log event\\n"""		4985602	1					
ANR	4985714	PrimaryExpression	"""Error writing log event\\n"""		4985602	0					
ANR	4985715	ExpressionStatement	result = 1	169:2:4224:4234	4985602	1	True				
ANR	4985716	AssignmentExpression	result = 1		4985602	0		=			
ANR	4985717	Identifier	result		4985602	0					
ANR	4985718	PrimaryExpression	1		4985602	1					
ANR	4985719	ReturnStatement	return result ;	172:1:4241:4254	4985602	13	True				
ANR	4985720	Identifier	result		4985602	0					
ANR	4985721	ReturnType	int		4985602	1					
ANR	4985722	Identifier	WriteTermEvent		4985602	2					
ANR	4985723	ParameterList	Arguments & args		4985602	3					
ANR	4985724	Parameter	Arguments & args	145:15:3679:3693	4985602	0	True				
ANR	4985725	ParameterType	Arguments &		4985602	0					
ANR	4985726	Identifier	args		4985602	1					
ANR	4985727	CFGEntryNode	ENTRY		4985602		True				
ANR	4985728	CFGExitNode	EXIT		4985602		True				
ANR	4985729	Symbol	terminated . total_recvd_bytes		4985602						
ANR	4985730	Symbol	log		4985602						
ANR	4985731	Symbol	& terminated		4985602						
ANR	4985732	Symbol	stderr		4985602						
ANR	4985733	Symbol	args		4985602						
ANR	4985734	Symbol	result		4985602						
ANR	4985735	Symbol	terminated . returnValue		4985602						
ANR	4985736	Symbol	true		4985602						
ANR	4985737	Symbol	terminated . sent_bytes		4985602						
ANR	4985738	Symbol	terminated . normal		4985602						
ANR	4985739	Symbol	terminated . total_sent_bytes		4985602						
ANR	4985740	Symbol	terminated . recvd_bytes		4985602						
ANR	4985741	Symbol	log . writeEvent		4985602						
ANR	4985742	Symbol	terminated		4985602						
ANR	4985743	Symbol	terminated . signalNumber		4985602						
ANR	4985744	Function	WriteExecEvent	175:0:4259:4674							
ANR	4985745	FunctionDef	WriteExecEvent (Arguments & args)		4985744	0					
ANR	4985746	CompoundStatement		177:0:4295:4674	4985744	0					
ANR	4985747	IdentifierDeclStatement	int result = 0 ;	178:1:4298:4313	4985744	0	True				
ANR	4985748	IdentifierDecl	result = 0		4985744	0					
ANR	4985749	IdentifierDeclType	int		4985744	0					
ANR	4985750	Identifier	result		4985744	1					
ANR	4985751	AssignmentExpression	result = 0		4985744	2		=			
ANR	4985752	Identifier	result		4985744	0					
ANR	4985753	PrimaryExpression	0		4985744	1					
ANR	4985754	IdentifierDeclStatement	"UserLog log ( ""owner"" , args . logFile , args . cluster , 0 , 0 , false ) ;"	180:1:4317:4378	4985744	1	True				
ANR	4985755	IdentifierDecl	"log ( ""owner"" , args . logFile , args . cluster , 0 , 0 , false )"		4985744	0					
ANR	4985756	IdentifierDeclType	UserLog		4985744	0					
ANR	4985757	Identifier	log		4985744	1					
ANR	4985758	Expression	"""owner"" , args . logFile , args . cluster , 0 , 0 , false"		4985744	2					
ANR	4985759	PrimaryExpression	"""owner"""		4985744	0					
ANR	4985760	Expression	"args . logFile , args . cluster , 0 , 0 , false"		4985744	1					
ANR	4985761	MemberAccess	args . logFile		4985744	0					
ANR	4985762	Identifier	args		4985744	0					
ANR	4985763	Identifier	logFile		4985744	1					
ANR	4985764	Expression	"args . cluster , 0 , 0 , false"		4985744	1					
ANR	4985765	MemberAccess	args . cluster		4985744	0					
ANR	4985766	Identifier	args		4985744	0					
ANR	4985767	Identifier	cluster		4985744	1					
ANR	4985768	Expression	"0 , 0 , false"		4985744	1					
ANR	4985769	PrimaryExpression	0		4985744	0					
ANR	4985770	Expression	"0 , false"		4985744	1					
ANR	4985771	PrimaryExpression	0		4985744	0					
ANR	4985772	Identifier	false		4985744	1					
ANR	4985773	ExpressionStatement	sleep ( 10 )	182:1:4382:4391	4985744	2	True				
ANR	4985774	CallExpression	sleep ( 10 )		4985744	0					
ANR	4985775	Callee	sleep		4985744	0					
ANR	4985776	Identifier	sleep		4985744	0					
ANR	4985777	ArgumentList	10		4985744	1					
ANR	4985778	Argument	10		4985744	0					
ANR	4985779	PrimaryExpression	10		4985744	0					
ANR	4985780	ExpressionStatement	"printf ( ""Writing execute event\\n"" )"	187:1:4435:4468	4985744	3	True				
ANR	4985781	CallExpression	"printf ( ""Writing execute event\\n"" )"		4985744	0					
ANR	4985782	Callee	printf		4985744	0					
ANR	4985783	Identifier	printf		4985744	0					
ANR	4985784	ArgumentList	"""Writing execute event\\n"""		4985744	1					
ANR	4985785	Argument	"""Writing execute event\\n"""		4985744	0					
ANR	4985786	PrimaryExpression	"""Writing execute event\\n"""		4985744	0					
ANR	4985787	IdentifierDeclStatement	ExecuteEvent execute ;	189:1:4472:4492	4985744	4	True				
ANR	4985788	IdentifierDecl	execute		4985744	0					
ANR	4985789	IdentifierDeclType	ExecuteEvent		4985744	0					
ANR	4985790	Identifier	execute		4985744	1					
ANR	4985791	ExpressionStatement	"strcpy ( execute . executeHost , ""<fake.host.for.test:1234>"" )"	190:1:4495:4553	4985744	5	True				
ANR	4985792	CallExpression	"strcpy ( execute . executeHost , ""<fake.host.for.test:1234>"" )"		4985744	0					
ANR	4985793	Callee	strcpy		4985744	0					
ANR	4985794	Identifier	strcpy		4985744	0					
ANR	4985795	ArgumentList	execute . executeHost		4985744	1					
ANR	4985796	Argument	execute . executeHost		4985744	0					
ANR	4985797	MemberAccess	execute . executeHost		4985744	0					
ANR	4985798	Identifier	execute		4985744	0					
ANR	4985799	Identifier	executeHost		4985744	1					
ANR	4985800	Argument	"""<fake.host.for.test:1234>"""		4985744	1					
ANR	4985801	PrimaryExpression	"""<fake.host.for.test:1234>"""		4985744	0					
ANR	4985802	IfStatement	if ( ! log . writeEvent ( & execute ) )		4985744	6					
ANR	4985803	Condition	! log . writeEvent ( & execute )	192:6:4562:4586	4985744	0	True				
ANR	4985804	UnaryOperationExpression	! log . writeEvent ( & execute )		4985744	0					
ANR	4985805	UnaryOperator	!		4985744	0					
ANR	4985806	CallExpression	log . writeEvent ( & execute )		4985744	1					
ANR	4985807	Callee	log . writeEvent		4985744	0					
ANR	4985808	MemberAccess	log . writeEvent		4985744	0					
ANR	4985809	Identifier	log		4985744	0					
ANR	4985810	Identifier	writeEvent		4985744	1					
ANR	4985811	ArgumentList	& execute		4985744	1					
ANR	4985812	Argument	& execute		4985744	0					
ANR	4985813	UnaryOperationExpression	& execute		4985744	0					
ANR	4985814	UnaryOperator	&		4985744	0					
ANR	4985815	Identifier	execute		4985744	1					
ANR	4985816	CompoundStatement		16:34:294:294	4985744	1					
ANR	4985817	ExpressionStatement	"fprintf ( stderr , ""Error writing log event\\n"" )"	193:2:4594:4638	4985744	0	True				
ANR	4985818	CallExpression	"fprintf ( stderr , ""Error writing log event\\n"" )"		4985744	0					
ANR	4985819	Callee	fprintf		4985744	0					
ANR	4985820	Identifier	fprintf		4985744	0					
ANR	4985821	ArgumentList	stderr		4985744	1					
ANR	4985822	Argument	stderr		4985744	0					
ANR	4985823	Identifier	stderr		4985744	0					
ANR	4985824	Argument	"""Error writing log event\\n"""		4985744	1					
ANR	4985825	PrimaryExpression	"""Error writing log event\\n"""		4985744	0					
ANR	4985826	ExpressionStatement	result = 1	194:2:4642:4652	4985744	1	True				
ANR	4985827	AssignmentExpression	result = 1		4985744	0		=			
ANR	4985828	Identifier	result		4985744	0					
ANR	4985829	PrimaryExpression	1		4985744	1					
ANR	4985830	ReturnStatement	return result ;	197:1:4659:4672	4985744	7	True				
ANR	4985831	Identifier	result		4985744	0					
ANR	4985832	ReturnType	int		4985744	1					
ANR	4985833	Identifier	WriteExecEvent		4985744	2					
ANR	4985834	ParameterList	Arguments & args		4985744	3					
ANR	4985835	Parameter	Arguments & args	176:15:4278:4292	4985744	0	True				
ANR	4985836	ParameterType	Arguments &		4985744	0					
ANR	4985837	Identifier	args		4985744	1					
ANR	4985838	CFGEntryNode	ENTRY		4985744		True				
ANR	4985839	CFGExitNode	EXIT		4985744		True				
ANR	4985840	Symbol	args		4985744						
ANR	4985841	Symbol	result		4985744						
ANR	4985842	Symbol	log		4985744						
ANR	4985843	Symbol	execute . executeHost		4985744						
ANR	4985844	Symbol	log . writeEvent		4985744						
ANR	4985845	Symbol	& execute		4985744						
ANR	4985846	Symbol	stderr		4985744						
ANR	4985847	Symbol	execute		4985744						
