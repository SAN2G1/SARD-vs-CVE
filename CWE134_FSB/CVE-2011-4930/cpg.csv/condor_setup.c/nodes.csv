command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	958019	File	data/converged/CVE-2011-4930_htcondor/condor_setup.c								
ANR	958020	ClassDef	<unnamed>	33:8:1054:1083							
ANR	958021	DeclStmt									
ANR	958022	Decl									bool
ANR	958023	ClassDef	Options	38:0:1155:1972							
ANR	958024	DeclStmt									
ANR	958025	Decl							char	char	newpool
ANR	958026	DeclStmt									
ANR	958027	Decl							char	char	submitjobs
ANR	958028	DeclStmt									
ANR	958029	Decl							char	char	runjobs
ANR	958030	DeclStmt									
ANR	958031	Decl							char	char	vacatejobs
ANR	958032	DeclStmt									
ANR	958033	Decl							char	char	enablevmuniverse
ANR	958034	DeclStmt									
ANR	958035	Decl							char	char	vmnetworking
ANR	958036	DeclStmt									
ANR	958037	Decl							char	char	hadoop
ANR	958038	DeclStmt									
ANR	958039	Decl							char	char *	poolhostname
ANR	958040	DeclStmt									
ANR	958041	Decl							char	char *	poolname
ANR	958042	DeclStmt									
ANR	958043	Decl							char	char *	jvmlocation
ANR	958044	DeclStmt									
ANR	958045	Decl							char	char *	perllocation
ANR	958046	DeclStmt									
ANR	958047	Decl							char	char *	accountingdomain
ANR	958048	DeclStmt									
ANR	958049	Decl							char	char *	release_dir
ANR	958050	DeclStmt									
ANR	958051	Decl							char	char *	smtpserver
ANR	958052	DeclStmt									
ANR	958053	Decl							char	char *	condoremail
ANR	958054	DeclStmt									
ANR	958055	Decl							char	char *	hostallowread
ANR	958056	DeclStmt									
ANR	958057	Decl							char	char *	hostallowwrite
ANR	958058	DeclStmt									
ANR	958059	Decl							char	char *	hostallowadministrator
ANR	958060	DeclStmt									
ANR	958061	Decl							char	char *	vmmaxnumber
ANR	958062	DeclStmt									
ANR	958063	Decl							char	char *	vmversion
ANR	958064	DeclStmt									
ANR	958065	Decl							char	char *	vmmemory
ANR	958066	DeclStmt									
ANR	958067	Decl							char	char *	namedata
ANR	958068	DeclStmt									
ANR	958069	Decl							char	char *	namenode
ANR	958070	DeclStmt									
ANR	958071	Decl							char	char *	nameport
ANR	958072	DeclStmt									
ANR	958073	Decl							char	char *	namewebport
ANR	958074	DeclStmt									
ANR	958075	Decl							Options	Options	Opt
ANR	958076	DeclStmt									
ANR	958077	Decl							const char	const char *	short_options
ANR	958078	DeclStmt									
ANR	958079	Decl							struct option	struct option [ ]	long_options
ANR	958080	DeclStmt									
ANR	958081	Decl							const char	const char *	Config_file
ANR	958082	DeclStmt									
ANR	958083	Decl							const char	const char *	LogFileName
ANR	958084	DeclStmt									
ANR	958085	Decl							FILE	FILE *	LogFileHandle
ANR	958086	DeclStmt									
ANR	958087	Decl							bool	"bool ( int argc , char * * argv )"	parse_args
ANR	958088	DeclStmt									
ANR	958089	Decl							bool	"bool ( const char * attribute , const char * val )"	append_option
ANR	958090	DeclStmt									
ANR	958091	Decl							bool	"bool ( const char * attribute , const char * val )"	set_option
ANR	958092	DeclStmt									
ANR	958093	Decl							bool	"bool ( const char * attribute , const int val )"	set_int_option
ANR	958094	Function	setup_config_file	109:0:3865:3940							
ANR	958095	FunctionDef	setup_config_file ()		958094	0					
ANR	958096	CompoundStatement		109:29:3894:3940	958094	0					
ANR	958097	ExpressionStatement	"Config_file = ""condor_config"""	109:1:3896:3925	958094	0	True				
ANR	958098	AssignmentExpression	"Config_file = ""condor_config"""		958094	0		=			
ANR	958099	Identifier	Config_file		958094	0					
ANR	958100	PrimaryExpression	"""condor_config"""		958094	1					
ANR	958101	ReturnStatement	return true ;	109:32:3927:3938	958094	1	True				
ANR	958102	Identifier	true		958094	0					
ANR	958103	ReturnType	bool		958094	1					
ANR	958104	Identifier	setup_config_file		958094	2					
ANR	958105	ParameterList			958094	3					
ANR	958106	CFGEntryNode	ENTRY		958094		True				
ANR	958107	CFGExitNode	EXIT		958094		True				
ANR	958108	Symbol	Config_file		958094						
ANR	958109	Symbol	true		958094						
ANR	958110	Function	open_log_file	110:0:3943:4034							
ANR	958111	FunctionDef	open_log_file ()		958110	0					
ANR	958112	CompoundStatement		110:25:3968:4034	958110	0					
ANR	958113	ReturnStatement	"return ( NULL != ( LogFileHandle = fopen ( LogFileName , ""w"" ) ) ) ;"	110:1:3970:4032	958110	0	True				
ANR	958114	EqualityExpression	"NULL != ( LogFileHandle = fopen ( LogFileName , ""w"" ) )"		958110	0		!=			
ANR	958115	Identifier	NULL		958110	0					
ANR	958116	AssignmentExpression	"LogFileHandle = fopen ( LogFileName , ""w"" )"		958110	1		=			
ANR	958117	Identifier	LogFileHandle		958110	0					
ANR	958118	CallExpression	"fopen ( LogFileName , ""w"" )"		958110	1					
ANR	958119	Callee	fopen		958110	0					
ANR	958120	Identifier	fopen		958110	0					
ANR	958121	ArgumentList	LogFileName		958110	1					
ANR	958122	Argument	LogFileName		958110	0					
ANR	958123	Identifier	LogFileName		958110	0					
ANR	958124	Argument	"""w"""		958110	1					
ANR	958125	PrimaryExpression	"""w"""		958110	0					
ANR	958126	ReturnType	bool		958110	1					
ANR	958127	Identifier	open_log_file		958110	2					
ANR	958128	ParameterList			958110	3					
ANR	958129	CFGEntryNode	ENTRY		958110		True				
ANR	958130	CFGExitNode	EXIT		958110		True				
ANR	958131	Symbol	fopen		958110						
ANR	958132	Symbol	NULL		958110						
ANR	958133	Symbol	LogFileHandle		958110						
ANR	958134	Symbol	LogFileName		958110						
ANR	958135	Function	close_log_file	111:0:4036:4155							
ANR	958136	FunctionDef	close_log_file ()		958135	0					
ANR	958137	CompoundStatement		111:26:4062:4155	958135	0					
ANR	958138	IfStatement	if ( NULL != LogFileHandle )		958135	0					
ANR	958139	Condition	NULL != LogFileHandle	111:6:4069:4089	958135	0	True				
ANR	958140	EqualityExpression	NULL != LogFileHandle		958135	0		!=			
ANR	958141	Identifier	NULL		958135	0					
ANR	958142	Identifier	LogFileHandle		958135	1					
ANR	958143	CompoundStatement		1:30:30:30	958135	1					
ANR	958144	ExpressionStatement	fclose ( LogFileHandle )	111:32:4095:4116	958135	0	True				
ANR	958145	CallExpression	fclose ( LogFileHandle )		958135	0					
ANR	958146	Callee	fclose		958135	0					
ANR	958147	Identifier	fclose		958135	0					
ANR	958148	ArgumentList	LogFileHandle		958135	1					
ANR	958149	Argument	LogFileHandle		958135	0					
ANR	958150	Identifier	LogFileHandle		958135	0					
ANR	958151	ExpressionStatement	LogFileHandle = NULL	111:55:4118:4138	958135	1	True				
ANR	958152	AssignmentExpression	LogFileHandle = NULL		958135	0		=			
ANR	958153	Identifier	LogFileHandle		958135	0					
ANR	958154	Identifier	NULL		958135	1					
ANR	958155	ReturnStatement	return true ;	111:79:4142:4153	958135	1	True				
ANR	958156	Identifier	true		958135	0					
ANR	958157	ReturnType	bool		958135	1					
ANR	958158	Identifier	close_log_file		958135	2					
ANR	958159	ParameterList			958135	3					
ANR	958160	CFGEntryNode	ENTRY		958135		True				
ANR	958161	CFGExitNode	EXIT		958135		True				
ANR	958162	Symbol	NULL		958135						
ANR	958163	Symbol	true		958135						
ANR	958164	Symbol	LogFileHandle		958135						
ANR	958165	Function	isempty	112:0:4157:4228							
ANR	958166	FunctionDef	isempty (const char * a)		958165	0					
ANR	958167	CompoundStatement		112:29:4186:4228	958165	0					
ANR	958168	ReturnStatement	return ( ( a == NULL ) || ( a [ 0 ] == '\\0' ) ) ;	112:1:4188:4226	958165	0	True				
ANR	958169	OrExpression	( a == NULL ) || ( a [ 0 ] == '\\0' )		958165	0		||			
ANR	958170	EqualityExpression	a == NULL		958165	0		==			
ANR	958171	Identifier	a		958165	0					
ANR	958172	Identifier	NULL		958165	1					
ANR	958173	EqualityExpression	a [ 0 ] == '\\0'		958165	1		==			
ANR	958174	ArrayIndexing	a [ 0 ]		958165	0					
ANR	958175	Identifier	a		958165	0					
ANR	958176	PrimaryExpression	0		958165	1					
ANR	958177	PrimaryExpression	'\\0'		958165	1					
ANR	958178	ReturnType	bool		958165	1					
ANR	958179	Identifier	isempty		958165	2					
ANR	958180	ParameterList	const char * a		958165	3					
ANR	958181	Parameter	const char * a	112:13:4170:4183	958165	0	True				
ANR	958182	ParameterType	const char *		958165	0					
ANR	958183	Identifier	a		958165	1					
ANR	958184	CFGEntryNode	ENTRY		958165		True				
ANR	958185	CFGExitNode	EXIT		958165		True				
ANR	958186	Symbol	a		958165						
ANR	958187	Symbol	NULL		958165						
ANR	958188	Symbol	* a		958165						
ANR	958189	DeclStmt									
ANR	958190	Decl							bool	"bool ( const char * string , const char * attr )"	attribute_matches
ANR	958191	DeclStmt									
ANR	958192	Decl							char	char * ( const char * path )	get_short_path_name
ANR	958193	DeclStmt									
ANR	958194	Decl							void	void ( )	Usage
ANR	958195	DeclStmt									
ANR	958196	Decl							void	void ( )	set_release_dir
ANR	958197	DeclStmt									
ANR	958198	Decl							void	void ( )	set_daemonlist
ANR	958199	DeclStmt									
ANR	958200	Decl							void	void ( )	set_poolinfo
ANR	958201	DeclStmt									
ANR	958202	Decl							void	void ( )	set_startdpolicy
ANR	958203	DeclStmt									
ANR	958204	Decl							void	void ( )	set_jvmlocation
ANR	958205	DeclStmt									
ANR	958206	Decl							void	void ( )	set_vmgahpoptions
ANR	958207	DeclStmt									
ANR	958208	Decl							void	void ( )	set_mailoptions
ANR	958209	DeclStmt									
ANR	958210	Decl							void	void ( )	set_hostpermissions
ANR	958211	DeclStmt									
ANR	958212	Decl							void	void ( )	set_vmuniverse
ANR	958213	DeclStmt									
ANR	958214	Decl							void	void ( )	set_hdfs
ANR	958215	Function	main	129:0:4592:5272							
ANR	958216	FunctionDef	"main (int __argc , char * * __argv)"		958215	0					
ANR	958217	CompoundStatement		129:36:4628:5272	958215	0					
ANR	958218	ExpressionStatement	open_log_file ( )	136:2:4780:4795	958215	0	True				
ANR	958219	CallExpression	open_log_file ( )		958215	0					
ANR	958220	Callee	open_log_file		958215	0					
ANR	958221	Identifier	open_log_file		958215	0					
ANR	958222	ArgumentList			958215	1					
ANR	958223	IfStatement	"if ( ! parse_args ( __argc , __argv ) )"		958215	1					
ANR	958224	Condition	"! parse_args ( __argc , __argv )"	139:7:4809:4838	958215	0	True				
ANR	958225	UnaryOperationExpression	"! parse_args ( __argc , __argv )"		958215	0					
ANR	958226	UnaryOperator	!		958215	0					
ANR	958227	CallExpression	"parse_args ( __argc , __argv )"		958215	1					
ANR	958228	Callee	parse_args		958215	0					
ANR	958229	Identifier	parse_args		958215	0					
ANR	958230	ArgumentList	__argc		958215	1					
ANR	958231	Argument	__argc		958215	0					
ANR	958232	Identifier	__argc		958215	0					
ANR	958233	Argument	__argv		958215	1					
ANR	958234	Identifier	__argv		958215	0					
ANR	958235	CompoundStatement		11:40:213:213	958215	1					
ANR	958236	ExpressionStatement	exit ( 1 )	140:4:4848:4858	958215	0	True				
ANR	958237	CallExpression	exit ( 1 )		958215	0					
ANR	958238	Callee	exit		958215	0					
ANR	958239	Identifier	exit		958215	0					
ANR	958240	ArgumentList	1		958215	1					
ANR	958241	Argument	1		958215	0					
ANR	958242	PrimaryExpression	1		958215	0					
ANR	958243	ExpressionStatement	set_release_dir ( )	143:2:4869:4887	958215	2	True				
ANR	958244	CallExpression	set_release_dir ( )		958215	0					
ANR	958245	Callee	set_release_dir		958215	0					
ANR	958246	Identifier	set_release_dir		958215	0					
ANR	958247	ArgumentList			958215	1					
ANR	958248	ExpressionStatement	set_daemonlist ( )	144:2:4891:4908	958215	3	True				
ANR	958249	CallExpression	set_daemonlist ( )		958215	0					
ANR	958250	Callee	set_daemonlist		958215	0					
ANR	958251	Identifier	set_daemonlist		958215	0					
ANR	958252	ArgumentList			958215	1					
ANR	958253	ExpressionStatement	set_poolinfo ( )	145:2:4912:4927	958215	4	True				
ANR	958254	CallExpression	set_poolinfo ( )		958215	0					
ANR	958255	Callee	set_poolinfo		958215	0					
ANR	958256	Identifier	set_poolinfo		958215	0					
ANR	958257	ArgumentList			958215	1					
ANR	958258	ExpressionStatement	set_startdpolicy ( )	146:2:4952:4971	958215	5	True				
ANR	958259	CallExpression	set_startdpolicy ( )		958215	0					
ANR	958260	Callee	set_startdpolicy		958215	0					
ANR	958261	Identifier	set_startdpolicy		958215	0					
ANR	958262	ArgumentList			958215	1					
ANR	958263	ExpressionStatement	set_jvmlocation ( )	147:2:4975:4993	958215	6	True				
ANR	958264	CallExpression	set_jvmlocation ( )		958215	0					
ANR	958265	Callee	set_jvmlocation		958215	0					
ANR	958266	Identifier	set_jvmlocation		958215	0					
ANR	958267	ArgumentList			958215	1					
ANR	958268	ExpressionStatement	set_mailoptions ( )	149:2:5000:5018	958215	7	True				
ANR	958269	CallExpression	set_mailoptions ( )		958215	0					
ANR	958270	Callee	set_mailoptions		958215	0					
ANR	958271	Identifier	set_mailoptions		958215	0					
ANR	958272	ArgumentList			958215	1					
ANR	958273	ExpressionStatement	set_hostpermissions ( )	150:2:5022:5044	958215	8	True				
ANR	958274	CallExpression	set_hostpermissions ( )		958215	0					
ANR	958275	Callee	set_hostpermissions		958215	0					
ANR	958276	Identifier	set_hostpermissions		958215	0					
ANR	958277	ArgumentList			958215	1					
ANR	958278	ExpressionStatement	set_vmuniverse ( )	151:2:5048:5064	958215	9	True				
ANR	958279	CallExpression	set_vmuniverse ( )		958215	0					
ANR	958280	Callee	set_vmuniverse		958215	0					
ANR	958281	Identifier	set_vmuniverse		958215	0					
ANR	958282	ArgumentList			958215	1					
ANR	958283	ExpressionStatement	set_hdfs ( )	152:2:5068:5078	958215	10	True				
ANR	958284	CallExpression	set_hdfs ( )		958215	0					
ANR	958285	Callee	set_hdfs		958215	0					
ANR	958286	Identifier	set_hdfs		958215	0					
ANR	958287	ArgumentList			958215	1					
ANR	958288	IfStatement	if ( 'Y' == Opt . enablevmuniverse )		958215	11					
ANR	958289	Condition	'Y' == Opt . enablevmuniverse	155:7:5149:5175	958215	0	True				
ANR	958290	EqualityExpression	'Y' == Opt . enablevmuniverse		958215	0		==			
ANR	958291	PrimaryExpression	'Y'		958215	0					
ANR	958292	MemberAccess	Opt . enablevmuniverse		958215	1					
ANR	958293	Identifier	Opt		958215	0					
ANR	958294	Identifier	enablevmuniverse		958215	1					
ANR	958295	CompoundStatement		27:37:550:550	958215	1					
ANR	958296	ExpressionStatement	set_vmgahpoptions ( )	156:4:5185:5205	958215	0	True				
ANR	958297	CallExpression	set_vmgahpoptions ( )		958215	0					
ANR	958298	Callee	set_vmgahpoptions		958215	0					
ANR	958299	Identifier	set_vmgahpoptions		958215	0					
ANR	958300	ArgumentList			958215	1					
ANR	958301	ExpressionStatement	close_log_file ( )	159:2:5216:5233	958215	12	True				
ANR	958302	CallExpression	close_log_file ( )		958215	0					
ANR	958303	Callee	close_log_file		958215	0					
ANR	958304	Identifier	close_log_file		958215	0					
ANR	958305	ArgumentList			958215	1					
ANR	958306	ReturnStatement	return 0 ;	162:2:5261:5269	958215	13	True				
ANR	958307	PrimaryExpression	0		958215	0					
ANR	958308	ReturnType	int		958215	1					
ANR	958309	Identifier	main		958215	2					
ANR	958310	ParameterList	"int __argc , char * * __argv"		958215	3					
ANR	958311	Parameter	int __argc	129:9:4601:4610	958215	0	True				
ANR	958312	ParameterType	int		958215	0					
ANR	958313	Identifier	__argc		958215	1					
ANR	958314	Parameter	char * * __argv	129:21:4613:4625	958215	1	True				
ANR	958315	ParameterType	char * *		958215	0					
ANR	958316	Identifier	__argv		958215	1					
ANR	958317	CFGEntryNode	ENTRY		958215		True				
ANR	958318	CFGExitNode	EXIT		958215		True				
ANR	958319	Symbol	Opt		958215						
ANR	958320	Symbol	__argv		958215						
ANR	958321	Symbol	__argc		958215						
ANR	958322	Symbol	Opt . enablevmuniverse		958215						
ANR	958323	Symbol	parse_args		958215						
ANR	958324	Function	Usage	166:0:5275:5479							
ANR	958325	FunctionDef	Usage ()		958324	0					
ANR	958326	CompoundStatement		167:8:5288:5479	958324	0					
ANR	958327	IdentifierDeclStatement	int i ;	169:1:5292:5297	958324	0	True				
ANR	958328	IdentifierDecl	i		958324	0					
ANR	958329	IdentifierDeclType	int		958324	0					
ANR	958330	Identifier	i		958324	1					
ANR	958331	ExpressionStatement	"printf ( ""Usage:\\n  condor_setup [options]\\n\\n"" )"	171:1:5301:5347	958324	1	True				
ANR	958332	CallExpression	"printf ( ""Usage:\\n  condor_setup [options]\\n\\n"" )"		958324	0					
ANR	958333	Callee	printf		958324	0					
ANR	958334	Identifier	printf		958324	0					
ANR	958335	ArgumentList	"""Usage:\\n  condor_setup [options]\\n\\n"""		958324	1					
ANR	958336	Argument	"""Usage:\\n  condor_setup [options]\\n\\n"""		958324	0					
ANR	958337	PrimaryExpression	"""Usage:\\n  condor_setup [options]\\n\\n"""		958324	0					
ANR	958338	ForStatement	for ( i = 0 ; long_options [ i ] . name ; i ++ )		958324	2					
ANR	958339	ForInit	i = 0 ;	172:6:5355:5358	958324	0	True				
ANR	958340	AssignmentExpression	i = 0		958324	0		=			
ANR	958341	Identifier	i		958324	0					
ANR	958342	PrimaryExpression	0		958324	1					
ANR	958343	Condition	long_options [ i ] . name	172:11:5360:5379	958324	1	True				
ANR	958344	MemberAccess	long_options [ i ] . name		958324	0					
ANR	958345	ArrayIndexing	long_options [ i ]		958324	0					
ANR	958346	Identifier	long_options		958324	0					
ANR	958347	Identifier	i		958324	1					
ANR	958348	Identifier	name		958324	1					
ANR	958349	PostIncDecOperationExpression	i ++	172:33:5382:5384	958324	2	True				
ANR	958350	Identifier	i		958324	0					
ANR	958351	IncDec	++		958324	1					
ANR	958352	CompoundStatement		6:38:98:98	958324	3					
ANR	958353	ExpressionStatement	"printf ( ""  -%c, --%-12s\\n"" , long_options [ i ] . val , long_options [ i ] . name )"	173:2:5391:5464	958324	0	True				
ANR	958354	CallExpression	"printf ( ""  -%c, --%-12s\\n"" , long_options [ i ] . val , long_options [ i ] . name )"		958324	0					
ANR	958355	Callee	printf		958324	0					
ANR	958356	Identifier	printf		958324	0					
ANR	958357	ArgumentList	"""  -%c, --%-12s\\n"""		958324	1					
ANR	958358	Argument	"""  -%c, --%-12s\\n"""		958324	0					
ANR	958359	PrimaryExpression	"""  -%c, --%-12s\\n"""		958324	0					
ANR	958360	Argument	long_options [ i ] . val		958324	1					
ANR	958361	MemberAccess	long_options [ i ] . val		958324	0					
ANR	958362	ArrayIndexing	long_options [ i ]		958324	0					
ANR	958363	Identifier	long_options		958324	0					
ANR	958364	Identifier	i		958324	1					
ANR	958365	Identifier	val		958324	1					
ANR	958366	Argument	long_options [ i ] . name		958324	2					
ANR	958367	MemberAccess	long_options [ i ] . name		958324	0					
ANR	958368	ArrayIndexing	long_options [ i ]		958324	0					
ANR	958369	Identifier	long_options		958324	0					
ANR	958370	Identifier	i		958324	1					
ANR	958371	Identifier	name		958324	1					
ANR	958372	ExpressionStatement	exit ( 0 )	176:1:5470:5477	958324	3	True				
ANR	958373	CallExpression	exit ( 0 )		958324	0					
ANR	958374	Callee	exit		958324	0					
ANR	958375	Identifier	exit		958324	0					
ANR	958376	ArgumentList	0		958324	1					
ANR	958377	Argument	0		958324	0					
ANR	958378	PrimaryExpression	0		958324	0					
ANR	958379	ReturnType	void		958324	1					
ANR	958380	Identifier	Usage		958324	2					
ANR	958381	ParameterList			958324	3					
ANR	958382	CFGEntryNode	ENTRY		958324		True				
ANR	958383	CFGExitNode	EXIT		958324		True				
ANR	958384	Symbol	* i		958324						
ANR	958385	Symbol	long_options		958324						
ANR	958386	Symbol	i		958324						
ANR	958387	Symbol	long_options [ i ] . name		958324						
ANR	958388	Symbol	long_options [ i ] . val		958324						
ANR	958389	Symbol	* long_options		958324						
ANR	958390	Function	set_mailoptions	179:0:5482:5778							
ANR	958391	FunctionDef	set_mailoptions ()		958390	0					
ANR	958392	CompoundStatement		180:18:5506:5778	958390	0					
ANR	958393	IfStatement	if ( Opt . smtpserver )		958390	0					
ANR	958394	Condition	Opt . smtpserver	182:6:5515:5528	958390	0	True				
ANR	958395	MemberAccess	Opt . smtpserver		958390	0					
ANR	958396	Identifier	Opt		958390	0					
ANR	958397	Identifier	smtpserver		958390	1					
ANR	958398	CompoundStatement		3:22:24:24	958390	1					
ANR	958399	ExpressionStatement	"set_option ( ""SMTP_SERVER"" , Opt . smtpserver )"	183:2:5535:5576	958390	0	True				
ANR	958400	CallExpression	"set_option ( ""SMTP_SERVER"" , Opt . smtpserver )"		958390	0					
ANR	958401	Callee	set_option		958390	0					
ANR	958402	Identifier	set_option		958390	0					
ANR	958403	ArgumentList	"""SMTP_SERVER"""		958390	1					
ANR	958404	Argument	"""SMTP_SERVER"""		958390	0					
ANR	958405	PrimaryExpression	"""SMTP_SERVER"""		958390	0					
ANR	958406	Argument	Opt . smtpserver		958390	1					
ANR	958407	MemberAccess	Opt . smtpserver		958390	0					
ANR	958408	Identifier	Opt		958390	0					
ANR	958409	Identifier	smtpserver		958390	1					
ANR	958410	IfStatement	if ( Opt . condoremail )		958390	1					
ANR	958411	Condition	Opt . condoremail	186:6:5588:5602	958390	0	True				
ANR	958412	MemberAccess	Opt . condoremail		958390	0					
ANR	958413	Identifier	Opt		958390	0					
ANR	958414	Identifier	condoremail		958390	1					
ANR	958415	CompoundStatement		7:24:99:99	958390	1					
ANR	958416	ExpressionStatement	"set_option ( ""CONDOR_ADMIN"" , Opt . condoremail )"	187:2:5610:5653	958390	0	True				
ANR	958417	CallExpression	"set_option ( ""CONDOR_ADMIN"" , Opt . condoremail )"		958390	0					
ANR	958418	Callee	set_option		958390	0					
ANR	958419	Identifier	set_option		958390	0					
ANR	958420	ArgumentList	"""CONDOR_ADMIN"""		958390	1					
ANR	958421	Argument	"""CONDOR_ADMIN"""		958390	0					
ANR	958422	PrimaryExpression	"""CONDOR_ADMIN"""		958390	0					
ANR	958423	Argument	Opt . condoremail		958390	1					
ANR	958424	MemberAccess	Opt . condoremail		958390	0					
ANR	958425	Identifier	Opt		958390	0					
ANR	958426	Identifier	condoremail		958390	1					
ANR	958427	IfStatement	if ( Opt . accountingdomain && Opt . accountingdomain [ 0 ] != '\\0' )		958390	2					
ANR	958428	Condition	Opt . accountingdomain && Opt . accountingdomain [ 0 ] != '\\0'	190:6:5665:5719	958390	0	True				
ANR	958429	AndExpression	Opt . accountingdomain && Opt . accountingdomain [ 0 ] != '\\0'		958390	0		&&			
ANR	958430	MemberAccess	Opt . accountingdomain		958390	0					
ANR	958431	Identifier	Opt		958390	0					
ANR	958432	Identifier	accountingdomain		958390	1					
ANR	958433	EqualityExpression	Opt . accountingdomain [ 0 ] != '\\0'		958390	1		!=			
ANR	958434	ArrayIndexing	Opt . accountingdomain [ 0 ]		958390	0					
ANR	958435	MemberAccess	Opt . accountingdomain		958390	0					
ANR	958436	Identifier	Opt		958390	0					
ANR	958437	Identifier	accountingdomain		958390	1					
ANR	958438	PrimaryExpression	0		958390	1					
ANR	958439	PrimaryExpression	'\\0'		958390	1					
ANR	958440	CompoundStatement		11:64:216:216	958390	1					
ANR	958441	ExpressionStatement	"set_option ( ""UID_DOMAIN"" , Opt . accountingdomain )"	191:2:5727:5773	958390	0	True				
ANR	958442	CallExpression	"set_option ( ""UID_DOMAIN"" , Opt . accountingdomain )"		958390	0					
ANR	958443	Callee	set_option		958390	0					
ANR	958444	Identifier	set_option		958390	0					
ANR	958445	ArgumentList	"""UID_DOMAIN"""		958390	1					
ANR	958446	Argument	"""UID_DOMAIN"""		958390	0					
ANR	958447	PrimaryExpression	"""UID_DOMAIN"""		958390	0					
ANR	958448	Argument	Opt . accountingdomain		958390	1					
ANR	958449	MemberAccess	Opt . accountingdomain		958390	0					
ANR	958450	Identifier	Opt		958390	0					
ANR	958451	Identifier	accountingdomain		958390	1					
ANR	958452	ReturnType	void		958390	1					
ANR	958453	Identifier	set_mailoptions		958390	2					
ANR	958454	ParameterList			958390	3					
ANR	958455	CFGEntryNode	ENTRY		958390		True				
ANR	958456	CFGExitNode	EXIT		958390		True				
ANR	958457	Symbol	Opt . smtpserver		958390						
ANR	958458	Symbol	Opt		958390						
ANR	958459	Symbol	* Opt		958390						
ANR	958460	Symbol	Opt . accountingdomain		958390						
ANR	958461	Symbol	Opt . condoremail		958390						
ANR	958462	Symbol	* Opt . accountingdomain		958390						
ANR	958463	Function	set_jvmlocation	195:0:5781:5876							
ANR	958464	FunctionDef	set_jvmlocation ()		958463	0					
ANR	958465	CompoundStatement		196:18:5805:5876	958463	0					
ANR	958466	IfStatement	if ( Opt . jvmlocation )		958463	0					
ANR	958467	Condition	Opt . jvmlocation	198:6:5814:5828	958463	0	True				
ANR	958468	MemberAccess	Opt . jvmlocation		958463	0					
ANR	958469	Identifier	Opt		958463	0					
ANR	958470	Identifier	jvmlocation		958463	1					
ANR	958471	CompoundStatement		3:24:26:26	958463	1					
ANR	958472	ExpressionStatement	"set_option ( ""JAVA"" , Opt . jvmlocation )"	199:2:5836:5871	958463	0	True				
ANR	958473	CallExpression	"set_option ( ""JAVA"" , Opt . jvmlocation )"		958463	0					
ANR	958474	Callee	set_option		958463	0					
ANR	958475	Identifier	set_option		958463	0					
ANR	958476	ArgumentList	"""JAVA"""		958463	1					
ANR	958477	Argument	"""JAVA"""		958463	0					
ANR	958478	PrimaryExpression	"""JAVA"""		958463	0					
ANR	958479	Argument	Opt . jvmlocation		958463	1					
ANR	958480	MemberAccess	Opt . jvmlocation		958463	0					
ANR	958481	Identifier	Opt		958463	0					
ANR	958482	Identifier	jvmlocation		958463	1					
ANR	958483	ReturnType	void		958463	1					
ANR	958484	Identifier	set_jvmlocation		958463	2					
ANR	958485	ParameterList			958463	3					
ANR	958486	CFGEntryNode	ENTRY		958463		True				
ANR	958487	CFGExitNode	EXIT		958463		True				
ANR	958488	Symbol	Opt		958463						
ANR	958489	Symbol	Opt . jvmlocation		958463						
ANR	958490	Function	set_vmgahpoptions	203:0:5879:6872							
ANR	958491	FunctionDef	set_vmgahpoptions ()		958490	0					
ANR	958492	CompoundStatement		204:20:5904:6872	958490	0					
ANR	958493	IfStatement	if ( Opt . perllocation )		958490	0					
ANR	958494	Condition	Opt . perllocation	206:6:5913:5928	958490	0	True				
ANR	958495	MemberAccess	Opt . perllocation		958490	0					
ANR	958496	Identifier	Opt		958490	0					
ANR	958497	Identifier	perllocation		958490	1					
ANR	958498	CompoundStatement		3:25:27:27	958490	1					
ANR	958499	ExpressionStatement	"set_option ( ""VMWARE_PERL"" , Opt . perllocation )"	207:2:5936:5979	958490	0	True				
ANR	958500	CallExpression	"set_option ( ""VMWARE_PERL"" , Opt . perllocation )"		958490	0					
ANR	958501	Callee	set_option		958490	0					
ANR	958502	Identifier	set_option		958490	0					
ANR	958503	ArgumentList	"""VMWARE_PERL"""		958490	1					
ANR	958504	Argument	"""VMWARE_PERL"""		958490	0					
ANR	958505	PrimaryExpression	"""VMWARE_PERL"""		958490	0					
ANR	958506	Argument	Opt . perllocation		958490	1					
ANR	958507	MemberAccess	Opt . perllocation		958490	0					
ANR	958508	Identifier	Opt		958490	0					
ANR	958509	Identifier	perllocation		958490	1					
ANR	958510	IfStatement	if ( Opt . release_dir )		958490	1					
ANR	958511	Condition	Opt . release_dir	210:6:5991:6005	958490	0	True				
ANR	958512	MemberAccess	Opt . release_dir		958490	0					
ANR	958513	Identifier	Opt		958490	0					
ANR	958514	Identifier	release_dir		958490	1					
ANR	958515	CompoundStatement		12:2:248:271	958490	1					
ANR	958516	IdentifierDeclStatement	"char * control_script = ""bin\\\\condor_vm_vmware.pl"" ;"	211:2:6013:6062	958490	0	True				
ANR	958517	IdentifierDecl	"* control_script = ""bin\\\\condor_vm_vmware.pl"""		958490	0					
ANR	958518	IdentifierDeclType	char *		958490	0					
ANR	958519	Identifier	control_script		958490	1					
ANR	958520	AssignmentExpression	"* control_script = ""bin\\\\condor_vm_vmware.pl"""		958490	2		=			
ANR	958521	Identifier	control_script		958490	0					
ANR	958522	PrimaryExpression	"""bin\\\\condor_vm_vmware.pl"""		958490	1					
ANR	958523	IdentifierDeclStatement	char * tmp = malloc ( strlen ( Opt . release_dir ) + strlen ( control_script ) + 2 ) ;	213:2:6068:6148	958490	1	True				
ANR	958524	IdentifierDecl	* tmp = malloc ( strlen ( Opt . release_dir ) + strlen ( control_script ) + 2 )		958490	0					
ANR	958525	IdentifierDeclType	char *		958490	0					
ANR	958526	Identifier	tmp		958490	1					
ANR	958527	AssignmentExpression	* tmp = malloc ( strlen ( Opt . release_dir ) + strlen ( control_script ) + 2 )		958490	2		=			
ANR	958528	Identifier	tmp		958490	0					
ANR	958529	CallExpression	malloc ( strlen ( Opt . release_dir ) + strlen ( control_script ) + 2 )		958490	1					
ANR	958530	Callee	malloc		958490	0					
ANR	958531	Identifier	malloc		958490	0					
ANR	958532	ArgumentList	strlen ( Opt . release_dir ) + strlen ( control_script ) + 2		958490	1					
ANR	958533	Argument	strlen ( Opt . release_dir ) + strlen ( control_script ) + 2		958490	0					
ANR	958534	AdditiveExpression	strlen ( Opt . release_dir ) + strlen ( control_script ) + 2		958490	0		+			
ANR	958535	CallExpression	strlen ( Opt . release_dir )		958490	0					
ANR	958536	Callee	strlen		958490	0					
ANR	958537	Identifier	strlen		958490	0					
ANR	958538	ArgumentList	Opt . release_dir		958490	1					
ANR	958539	Argument	Opt . release_dir		958490	0					
ANR	958540	MemberAccess	Opt . release_dir		958490	0					
ANR	958541	Identifier	Opt		958490	0					
ANR	958542	Identifier	release_dir		958490	1					
ANR	958543	AdditiveExpression	strlen ( control_script ) + 2		958490	1		+			
ANR	958544	CallExpression	strlen ( control_script )		958490	0					
ANR	958545	Callee	strlen		958490	0					
ANR	958546	Identifier	strlen		958490	0					
ANR	958547	ArgumentList	control_script		958490	1					
ANR	958548	Argument	control_script		958490	0					
ANR	958549	Identifier	control_script		958490	0					
ANR	958550	PrimaryExpression	2		958490	1					
ANR	958551	IdentifierDeclStatement	char * short_name = NULL ;	215:2:6153:6176	958490	2	True				
ANR	958552	IdentifierDecl	* short_name = NULL		958490	0					
ANR	958553	IdentifierDeclType	char *		958490	0					
ANR	958554	Identifier	short_name		958490	1					
ANR	958555	AssignmentExpression	* short_name = NULL		958490	2		=			
ANR	958556	Identifier	NULL		958490	0					
ANR	958557	Identifier	NULL		958490	1					
ANR	958558	ExpressionStatement	"sprintf ( tmp , ""%s\\\\%s"" , Opt . release_dir , control_script )"	216:2:6180:6235	958490	3	True				
ANR	958559	CallExpression	"sprintf ( tmp , ""%s\\\\%s"" , Opt . release_dir , control_script )"		958490	0					
ANR	958560	Callee	sprintf		958490	0					
ANR	958561	Identifier	sprintf		958490	0					
ANR	958562	ArgumentList	tmp		958490	1					
ANR	958563	Argument	tmp		958490	0					
ANR	958564	Identifier	tmp		958490	0					
ANR	958565	Argument	"""%s\\\\%s"""		958490	1					
ANR	958566	PrimaryExpression	"""%s\\\\%s"""		958490	0					
ANR	958567	Argument	Opt . release_dir		958490	2					
ANR	958568	MemberAccess	Opt . release_dir		958490	0					
ANR	958569	Identifier	Opt		958490	0					
ANR	958570	Identifier	release_dir		958490	1					
ANR	958571	Argument	control_script		958490	3					
ANR	958572	Identifier	control_script		958490	0					
ANR	958573	ExpressionStatement	short_name = get_short_path_name ( tmp )	217:2:6239:6276	958490	4	True				
ANR	958574	AssignmentExpression	short_name = get_short_path_name ( tmp )		958490	0		=			
ANR	958575	Identifier	short_name		958490	0					
ANR	958576	CallExpression	get_short_path_name ( tmp )		958490	1					
ANR	958577	Callee	get_short_path_name		958490	0					
ANR	958578	Identifier	get_short_path_name		958490	0					
ANR	958579	ArgumentList	tmp		958490	1					
ANR	958580	Argument	tmp		958490	0					
ANR	958581	Identifier	tmp		958490	0					
ANR	958582	ExpressionStatement	free ( tmp )	219:2:6282:6291	958490	5	True				
ANR	958583	CallExpression	free ( tmp )		958490	0					
ANR	958584	Callee	free		958490	0					
ANR	958585	Identifier	free		958490	0					
ANR	958586	ArgumentList	tmp		958490	1					
ANR	958587	Argument	tmp		958490	0					
ANR	958588	Identifier	tmp		958490	0					
ANR	958589	ExpressionStatement	"set_option ( ""VMWARE_SCRIPT"" , short_name )"	221:2:6297:6336	958490	6	True				
ANR	958590	CallExpression	"set_option ( ""VMWARE_SCRIPT"" , short_name )"		958490	0					
ANR	958591	Callee	set_option		958490	0					
ANR	958592	Identifier	set_option		958490	0					
ANR	958593	ArgumentList	"""VMWARE_SCRIPT"""		958490	1					
ANR	958594	Argument	"""VMWARE_SCRIPT"""		958490	0					
ANR	958595	PrimaryExpression	"""VMWARE_SCRIPT"""		958490	0					
ANR	958596	Argument	short_name		958490	1					
ANR	958597	Identifier	short_name		958490	0					
ANR	958598	ExpressionStatement	free ( short_name )	222:2:6340:6356	958490	7	True				
ANR	958599	CallExpression	free ( short_name )		958490	0					
ANR	958600	Callee	free		958490	0					
ANR	958601	Identifier	free		958490	0					
ANR	958602	ArgumentList	short_name		958490	1					
ANR	958603	Argument	short_name		958490	0					
ANR	958604	Identifier	short_name		958490	0					
ANR	958605	IfStatement	if ( Opt . vmversion )		958490	2					
ANR	958606	Condition	Opt . vmversion	226:6:6370:6382	958490	0	True				
ANR	958607	MemberAccess	Opt . vmversion		958490	0					
ANR	958608	Identifier	Opt		958490	0					
ANR	958609	Identifier	vmversion		958490	1					
ANR	958610	CompoundStatement		23:22:481:481	958490	1					
ANR	958611	ExpressionStatement	"set_option ( ""VM_VERSION"" , Opt . vmversion )"	227:2:6390:6429	958490	0	True				
ANR	958612	CallExpression	"set_option ( ""VM_VERSION"" , Opt . vmversion )"		958490	0					
ANR	958613	Callee	set_option		958490	0					
ANR	958614	Identifier	set_option		958490	0					
ANR	958615	ArgumentList	"""VM_VERSION"""		958490	1					
ANR	958616	Argument	"""VM_VERSION"""		958490	0					
ANR	958617	PrimaryExpression	"""VM_VERSION"""		958490	0					
ANR	958618	Argument	Opt . vmversion		958490	1					
ANR	958619	MemberAccess	Opt . vmversion		958490	0					
ANR	958620	Identifier	Opt		958490	0					
ANR	958621	Identifier	vmversion		958490	1					
ANR	958622	IfStatement	if ( Opt . vmmemory )		958490	3					
ANR	958623	Condition	Opt . vmmemory	230:6:6441:6452	958490	0	True				
ANR	958624	MemberAccess	Opt . vmmemory		958490	0					
ANR	958625	Identifier	Opt		958490	0					
ANR	958626	Identifier	vmmemory		958490	1					
ANR	958627	CompoundStatement		27:21:551:551	958490	1					
ANR	958628	ExpressionStatement	"set_option ( ""VM_MEMORY"" , Opt . vmmemory )"	231:2:6460:6497	958490	0	True				
ANR	958629	CallExpression	"set_option ( ""VM_MEMORY"" , Opt . vmmemory )"		958490	0					
ANR	958630	Callee	set_option		958490	0					
ANR	958631	Identifier	set_option		958490	0					
ANR	958632	ArgumentList	"""VM_MEMORY"""		958490	1					
ANR	958633	Argument	"""VM_MEMORY"""		958490	0					
ANR	958634	PrimaryExpression	"""VM_MEMORY"""		958490	0					
ANR	958635	Argument	Opt . vmmemory		958490	1					
ANR	958636	MemberAccess	Opt . vmmemory		958490	0					
ANR	958637	Identifier	Opt		958490	0					
ANR	958638	Identifier	vmmemory		958490	1					
ANR	958639	ExpressionStatement	"set_option ( ""VM_NETWORKING"" , ""TRUE"" )"	234:1:6504:6539	958490	4	True				
ANR	958640	CallExpression	"set_option ( ""VM_NETWORKING"" , ""TRUE"" )"		958490	0					
ANR	958641	Callee	set_option		958490	0					
ANR	958642	Identifier	set_option		958490	0					
ANR	958643	ArgumentList	"""VM_NETWORKING"""		958490	1					
ANR	958644	Argument	"""VM_NETWORKING"""		958490	0					
ANR	958645	PrimaryExpression	"""VM_NETWORKING"""		958490	0					
ANR	958646	Argument	"""TRUE"""		958490	1					
ANR	958647	PrimaryExpression	"""TRUE"""		958490	0					
ANR	958648	IfStatement	if ( 'A' == Opt . vmnetworking )		958490	5					
ANR	958649	Condition	'A' == Opt . vmnetworking	235:6:6547:6569	958490	0	True				
ANR	958650	EqualityExpression	'A' == Opt . vmnetworking		958490	0		==			
ANR	958651	PrimaryExpression	'A'		958490	0					
ANR	958652	MemberAccess	Opt . vmnetworking		958490	1					
ANR	958653	Identifier	Opt		958490	0					
ANR	958654	Identifier	vmnetworking		958490	1					
ANR	958655	CompoundStatement		32:32:668:668	958490	1					
ANR	958656	ExpressionStatement	"set_option ( ""VM_NETWORKING_TYPE"" , ""nat"" )"	236:2:6577:6616	958490	0	True				
ANR	958657	CallExpression	"set_option ( ""VM_NETWORKING_TYPE"" , ""nat"" )"		958490	0					
ANR	958658	Callee	set_option		958490	0					
ANR	958659	Identifier	set_option		958490	0					
ANR	958660	ArgumentList	"""VM_NETWORKING_TYPE"""		958490	1					
ANR	958661	Argument	"""VM_NETWORKING_TYPE"""		958490	0					
ANR	958662	PrimaryExpression	"""VM_NETWORKING_TYPE"""		958490	0					
ANR	958663	Argument	"""nat"""		958490	1					
ANR	958664	PrimaryExpression	"""nat"""		958490	0					
ANR	958665	ElseStatement	else		958490	0					
ANR	958666	IfStatement	if ( 'B' == Opt . vmnetworking )		958490	0					
ANR	958667	Condition	'B' == Opt . vmnetworking	237:13:6631:6653	958490	0	True				
ANR	958668	EqualityExpression	'B' == Opt . vmnetworking		958490	0		==			
ANR	958669	PrimaryExpression	'B'		958490	0					
ANR	958670	MemberAccess	Opt . vmnetworking		958490	1					
ANR	958671	Identifier	Opt		958490	0					
ANR	958672	Identifier	vmnetworking		958490	1					
ANR	958673	CompoundStatement		34:39:752:752	958490	1					
ANR	958674	ExpressionStatement	"set_option ( ""VM_NETWORKING_TYPE"" , ""bridge"" )"	238:2:6661:6703	958490	0	True				
ANR	958675	CallExpression	"set_option ( ""VM_NETWORKING_TYPE"" , ""bridge"" )"		958490	0					
ANR	958676	Callee	set_option		958490	0					
ANR	958677	Identifier	set_option		958490	0					
ANR	958678	ArgumentList	"""VM_NETWORKING_TYPE"""		958490	1					
ANR	958679	Argument	"""VM_NETWORKING_TYPE"""		958490	0					
ANR	958680	PrimaryExpression	"""VM_NETWORKING_TYPE"""		958490	0					
ANR	958681	Argument	"""bridge"""		958490	1					
ANR	958682	PrimaryExpression	"""bridge"""		958490	0					
ANR	958683	ElseStatement	else		958490	0					
ANR	958684	IfStatement	if ( 'C' == Opt . vmnetworking )		958490	0					
ANR	958685	Condition	'C' == Opt . vmnetworking	239:13:6718:6740	958490	0	True				
ANR	958686	EqualityExpression	'C' == Opt . vmnetworking		958490	0		==			
ANR	958687	PrimaryExpression	'C'		958490	0					
ANR	958688	MemberAccess	Opt . vmnetworking		958490	1					
ANR	958689	Identifier	Opt		958490	0					
ANR	958690	Identifier	vmnetworking		958490	1					
ANR	958691	CompoundStatement		36:39:839:839	958490	1					
ANR	958692	ExpressionStatement	"set_option ( ""VM_NETWORKING_TYPE"" , ""nat, bridge"" )"	240:2:6748:6795	958490	0	True				
ANR	958693	CallExpression	"set_option ( ""VM_NETWORKING_TYPE"" , ""nat, bridge"" )"		958490	0					
ANR	958694	Callee	set_option		958490	0					
ANR	958695	Identifier	set_option		958490	0					
ANR	958696	ArgumentList	"""VM_NETWORKING_TYPE"""		958490	1					
ANR	958697	Argument	"""VM_NETWORKING_TYPE"""		958490	0					
ANR	958698	PrimaryExpression	"""VM_NETWORKING_TYPE"""		958490	0					
ANR	958699	Argument	"""nat, bridge"""		958490	1					
ANR	958700	PrimaryExpression	"""nat, bridge"""		958490	0					
ANR	958701	ElseStatement	else		958490	0					
ANR	958702	CompoundStatement		38:8:900:900	958490	0					
ANR	958703	ExpressionStatement	"set_option ( ""VM_NETWORKING"" , ""FALSE"" )"	242:2:6830:6866	958490	0	True				
ANR	958704	CallExpression	"set_option ( ""VM_NETWORKING"" , ""FALSE"" )"		958490	0					
ANR	958705	Callee	set_option		958490	0					
ANR	958706	Identifier	set_option		958490	0					
ANR	958707	ArgumentList	"""VM_NETWORKING"""		958490	1					
ANR	958708	Argument	"""VM_NETWORKING"""		958490	0					
ANR	958709	PrimaryExpression	"""VM_NETWORKING"""		958490	0					
ANR	958710	Argument	"""FALSE"""		958490	1					
ANR	958711	PrimaryExpression	"""FALSE"""		958490	0					
ANR	958712	ReturnType	void		958490	1					
ANR	958713	Identifier	set_vmgahpoptions		958490	2					
ANR	958714	ParameterList			958490	3					
ANR	958715	CFGEntryNode	ENTRY		958490		True				
ANR	958716	CFGExitNode	EXIT		958490		True				
ANR	958717	Symbol	malloc		958490						
ANR	958718	Symbol	NULL		958490						
ANR	958719	Symbol	Opt . release_dir		958490						
ANR	958720	Symbol	control_script		958490						
ANR	958721	Symbol	Opt . perllocation		958490						
ANR	958722	Symbol	get_short_path_name		958490						
ANR	958723	Symbol	strlen		958490						
ANR	958724	Symbol	Opt		958490						
ANR	958725	Symbol	Opt . vmnetworking		958490						
ANR	958726	Symbol	tmp		958490						
ANR	958727	Symbol	Opt . vmmemory		958490						
ANR	958728	Symbol	short_name		958490						
ANR	958729	Symbol	Opt . vmversion		958490						
ANR	958730	Function	set_release_dir	247:0:6875:7165							
ANR	958731	FunctionDef	set_release_dir ()		958730	0					
ANR	958732	CompoundStatement		248:18:6898:7165	958730	0					
ANR	958733	IfStatement	if ( Opt . release_dir )		958730	0					
ANR	958734	Condition	Opt . release_dir	249:6:6906:6920	958730	0	True				
ANR	958735	MemberAccess	Opt . release_dir		958730	0					
ANR	958736	Identifier	Opt		958730	0					
ANR	958737	Identifier	release_dir		958730	1					
ANR	958738	CompoundStatement		2:24:25:25	958730	1					
ANR	958739	ExpressionStatement	"set_option ( ""RELEASE_DIR"" , Opt . release_dir )"	250:2:6928:6970	958730	0	True				
ANR	958740	CallExpression	"set_option ( ""RELEASE_DIR"" , Opt . release_dir )"		958730	0					
ANR	958741	Callee	set_option		958730	0					
ANR	958742	Identifier	set_option		958730	0					
ANR	958743	ArgumentList	"""RELEASE_DIR"""		958730	1					
ANR	958744	Argument	"""RELEASE_DIR"""		958730	0					
ANR	958745	PrimaryExpression	"""RELEASE_DIR"""		958730	0					
ANR	958746	Argument	Opt . release_dir		958730	1					
ANR	958747	MemberAccess	Opt . release_dir		958730	0					
ANR	958748	Identifier	Opt		958730	0					
ANR	958749	Identifier	release_dir		958730	1					
ANR	958750	ExpressionStatement	"set_option ( ""LOCAL_DIR"" , Opt . release_dir )"	251:2:6974:7014	958730	1	True				
ANR	958751	CallExpression	"set_option ( ""LOCAL_DIR"" , Opt . release_dir )"		958730	0					
ANR	958752	Callee	set_option		958730	0					
ANR	958753	Identifier	set_option		958730	0					
ANR	958754	ArgumentList	"""LOCAL_DIR"""		958730	1					
ANR	958755	Argument	"""LOCAL_DIR"""		958730	0					
ANR	958756	PrimaryExpression	"""LOCAL_DIR"""		958730	0					
ANR	958757	Argument	Opt . release_dir		958730	1					
ANR	958758	MemberAccess	Opt . release_dir		958730	0					
ANR	958759	Identifier	Opt		958730	0					
ANR	958760	Identifier	release_dir		958730	1					
ANR	958761	ExpressionStatement	"set_option ( ""HDFS"" , ""$(SBIN)/condor_hdfs.exe"" )"	253:2:7060:7105	958730	2	True				
ANR	958762	CallExpression	"set_option ( ""HDFS"" , ""$(SBIN)/condor_hdfs.exe"" )"		958730	0					
ANR	958763	Callee	set_option		958730	0					
ANR	958764	Identifier	set_option		958730	0					
ANR	958765	ArgumentList	"""HDFS"""		958730	1					
ANR	958766	Argument	"""HDFS"""		958730	0					
ANR	958767	PrimaryExpression	"""HDFS"""		958730	0					
ANR	958768	Argument	"""$(SBIN)/condor_hdfs.exe"""		958730	1					
ANR	958769	PrimaryExpression	"""$(SBIN)/condor_hdfs.exe"""		958730	0					
ANR	958770	ExpressionStatement	"set_option ( ""ROOSTER"" , ""$(SBIN)/condor_rooster.exe"" )"	254:2:7109:7160	958730	3	True				
ANR	958771	CallExpression	"set_option ( ""ROOSTER"" , ""$(SBIN)/condor_rooster.exe"" )"		958730	0					
ANR	958772	Callee	set_option		958730	0					
ANR	958773	Identifier	set_option		958730	0					
ANR	958774	ArgumentList	"""ROOSTER"""		958730	1					
ANR	958775	Argument	"""ROOSTER"""		958730	0					
ANR	958776	PrimaryExpression	"""ROOSTER"""		958730	0					
ANR	958777	Argument	"""$(SBIN)/condor_rooster.exe"""		958730	1					
ANR	958778	PrimaryExpression	"""$(SBIN)/condor_rooster.exe"""		958730	0					
ANR	958779	ReturnType	void		958730	1					
ANR	958780	Identifier	set_release_dir		958730	2					
ANR	958781	ParameterList			958730	3					
ANR	958782	CFGEntryNode	ENTRY		958730		True				
ANR	958783	CFGExitNode	EXIT		958730		True				
ANR	958784	Symbol	Opt		958730						
ANR	958785	Symbol	Opt . release_dir		958730						
ANR	958786	Function	set_startdpolicy	258:0:7168:8394							
ANR	958787	FunctionDef	set_startdpolicy ()		958786	0					
ANR	958788	CompoundStatement		259:19:7192:8394	958786	0					
ANR	958789	IfStatement	if ( Opt . runjobs == 'A' )		958786	0					
ANR	958790	Condition	Opt . runjobs == 'A'	260:5:7199:7216	958786	0	True				
ANR	958791	EqualityExpression	Opt . runjobs == 'A'		958786	0		==			
ANR	958792	MemberAccess	Opt . runjobs		958786	0					
ANR	958793	Identifier	Opt		958786	0					
ANR	958794	Identifier	runjobs		958786	1					
ANR	958795	PrimaryExpression	'A'		958786	1					
ANR	958796	CompoundStatement		2:25:26:26	958786	1					
ANR	958797	ExpressionStatement	"set_option ( ""START"" , ""TRUE"" )"	262:2:7248:7275	958786	0	True				
ANR	958798	CallExpression	"set_option ( ""START"" , ""TRUE"" )"		958786	0					
ANR	958799	Callee	set_option		958786	0					
ANR	958800	Identifier	set_option		958786	0					
ANR	958801	ArgumentList	"""START"""		958786	1					
ANR	958802	Argument	"""START"""		958786	0					
ANR	958803	PrimaryExpression	"""START"""		958786	0					
ANR	958804	Argument	"""TRUE"""		958786	1					
ANR	958805	PrimaryExpression	"""TRUE"""		958786	0					
ANR	958806	ExpressionStatement	"set_option ( ""SUSPEND"" , ""FALSE"" )"	263:2:7279:7309	958786	1	True				
ANR	958807	CallExpression	"set_option ( ""SUSPEND"" , ""FALSE"" )"		958786	0					
ANR	958808	Callee	set_option		958786	0					
ANR	958809	Identifier	set_option		958786	0					
ANR	958810	ArgumentList	"""SUSPEND"""		958786	1					
ANR	958811	Argument	"""SUSPEND"""		958786	0					
ANR	958812	PrimaryExpression	"""SUSPEND"""		958786	0					
ANR	958813	Argument	"""FALSE"""		958786	1					
ANR	958814	PrimaryExpression	"""FALSE"""		958786	0					
ANR	958815	ExpressionStatement	"set_option ( ""WANT_SUSPEND"" , ""FALSE"" )"	264:2:7313:7348	958786	2	True				
ANR	958816	CallExpression	"set_option ( ""WANT_SUSPEND"" , ""FALSE"" )"		958786	0					
ANR	958817	Callee	set_option		958786	0					
ANR	958818	Identifier	set_option		958786	0					
ANR	958819	ArgumentList	"""WANT_SUSPEND"""		958786	1					
ANR	958820	Argument	"""WANT_SUSPEND"""		958786	0					
ANR	958821	PrimaryExpression	"""WANT_SUSPEND"""		958786	0					
ANR	958822	Argument	"""FALSE"""		958786	1					
ANR	958823	PrimaryExpression	"""FALSE"""		958786	0					
ANR	958824	ExpressionStatement	"set_option ( ""WANT_VACATE"" , ""FALSE"" )"	265:2:7352:7386	958786	3	True				
ANR	958825	CallExpression	"set_option ( ""WANT_VACATE"" , ""FALSE"" )"		958786	0					
ANR	958826	Callee	set_option		958786	0					
ANR	958827	Identifier	set_option		958786	0					
ANR	958828	ArgumentList	"""WANT_VACATE"""		958786	1					
ANR	958829	Argument	"""WANT_VACATE"""		958786	0					
ANR	958830	PrimaryExpression	"""WANT_VACATE"""		958786	0					
ANR	958831	Argument	"""FALSE"""		958786	1					
ANR	958832	PrimaryExpression	"""FALSE"""		958786	0					
ANR	958833	ExpressionStatement	"set_option ( ""PREEMPT"" , ""FALSE"" )"	266:2:7390:7420	958786	4	True				
ANR	958834	CallExpression	"set_option ( ""PREEMPT"" , ""FALSE"" )"		958786	0					
ANR	958835	Callee	set_option		958786	0					
ANR	958836	Identifier	set_option		958786	0					
ANR	958837	ArgumentList	"""PREEMPT"""		958786	1					
ANR	958838	Argument	"""PREEMPT"""		958786	0					
ANR	958839	PrimaryExpression	"""PREEMPT"""		958786	0					
ANR	958840	Argument	"""FALSE"""		958786	1					
ANR	958841	PrimaryExpression	"""FALSE"""		958786	0					
ANR	958842	ElseStatement	else		958786	0					
ANR	958843	IfStatement	if ( Opt . runjobs == 'N' )		958786	0					
ANR	958844	Condition	Opt . runjobs == 'N'	268:12:7435:7452	958786	0	True				
ANR	958845	EqualityExpression	Opt . runjobs == 'N'		958786	0		==			
ANR	958846	MemberAccess	Opt . runjobs		958786	0					
ANR	958847	Identifier	Opt		958786	0					
ANR	958848	Identifier	runjobs		958786	1					
ANR	958849	PrimaryExpression	'N'		958786	1					
ANR	958850	CompoundStatement		10:32:262:262	958786	1					
ANR	958851	ExpressionStatement	"set_option ( ""START"" , ""FALSE"" )"	270:2:7483:7511	958786	0	True				
ANR	958852	CallExpression	"set_option ( ""START"" , ""FALSE"" )"		958786	0					
ANR	958853	Callee	set_option		958786	0					
ANR	958854	Identifier	set_option		958786	0					
ANR	958855	ArgumentList	"""START"""		958786	1					
ANR	958856	Argument	"""START"""		958786	0					
ANR	958857	PrimaryExpression	"""START"""		958786	0					
ANR	958858	Argument	"""FALSE"""		958786	1					
ANR	958859	PrimaryExpression	"""FALSE"""		958786	0					
ANR	958860	ElseStatement	else		958786	0					
ANR	958861	IfStatement	if ( Opt . runjobs == 'I' )		958786	0					
ANR	958862	Condition	Opt . runjobs == 'I'	272:12:7526:7543	958786	0	True				
ANR	958863	EqualityExpression	Opt . runjobs == 'I'		958786	0		==			
ANR	958864	MemberAccess	Opt . runjobs		958786	0					
ANR	958865	Identifier	Opt		958786	0					
ANR	958866	Identifier	runjobs		958786	1					
ANR	958867	PrimaryExpression	'I'		958786	1					
ANR	958868	CompoundStatement		14:32:353:353	958786	1					
ANR	958869	ExpressionStatement	"set_option ( ""START"" , ""KeyboardIdle > $(StartIdleTime)"" )"	274:2:7594:7648	958786	0	True				
ANR	958870	CallExpression	"set_option ( ""START"" , ""KeyboardIdle > $(StartIdleTime)"" )"		958786	0					
ANR	958871	Callee	set_option		958786	0					
ANR	958872	Identifier	set_option		958786	0					
ANR	958873	ArgumentList	"""START"""		958786	1					
ANR	958874	Argument	"""START"""		958786	0					
ANR	958875	PrimaryExpression	"""START"""		958786	0					
ANR	958876	Argument	"""KeyboardIdle > $(StartIdleTime)"""		958786	1					
ANR	958877	PrimaryExpression	"""KeyboardIdle > $(StartIdleTime)"""		958786	0					
ANR	958878	ExpressionStatement	"set_option ( ""SUSPEND"" , ""$(UWCS_SUSPEND)"" )"	275:2:7652:7692	958786	1	True				
ANR	958879	CallExpression	"set_option ( ""SUSPEND"" , ""$(UWCS_SUSPEND)"" )"		958786	0					
ANR	958880	Callee	set_option		958786	0					
ANR	958881	Identifier	set_option		958786	0					
ANR	958882	ArgumentList	"""SUSPEND"""		958786	1					
ANR	958883	Argument	"""SUSPEND"""		958786	0					
ANR	958884	PrimaryExpression	"""SUSPEND"""		958786	0					
ANR	958885	Argument	"""$(UWCS_SUSPEND)"""		958786	1					
ANR	958886	PrimaryExpression	"""$(UWCS_SUSPEND)"""		958786	0					
ANR	958887	ExpressionStatement	"set_option ( ""CONTINUE"" , ""KeyboardIdle > $(ContinueIdleTime)"" )"	276:2:7696:7756	958786	2	True				
ANR	958888	CallExpression	"set_option ( ""CONTINUE"" , ""KeyboardIdle > $(ContinueIdleTime)"" )"		958786	0					
ANR	958889	Callee	set_option		958786	0					
ANR	958890	Identifier	set_option		958786	0					
ANR	958891	ArgumentList	"""CONTINUE"""		958786	1					
ANR	958892	Argument	"""CONTINUE"""		958786	0					
ANR	958893	PrimaryExpression	"""CONTINUE"""		958786	0					
ANR	958894	Argument	"""KeyboardIdle > $(ContinueIdleTime)"""		958786	1					
ANR	958895	PrimaryExpression	"""KeyboardIdle > $(ContinueIdleTime)"""		958786	0					
ANR	958896	ElseStatement	else		958786	0					
ANR	958897	IfStatement	if ( Opt . runjobs == 'C' )		958786	0					
ANR	958898	Condition	Opt . runjobs == 'C'	278:12:7771:7788	958786	0	True				
ANR	958899	EqualityExpression	Opt . runjobs == 'C'		958786	0		==			
ANR	958900	MemberAccess	Opt . runjobs		958786	0					
ANR	958901	Identifier	Opt		958786	0					
ANR	958902	Identifier	runjobs		958786	1					
ANR	958903	PrimaryExpression	'C'		958786	1					
ANR	958904	CompoundStatement		20:32:598:598	958786	1					
ANR	958905	ExpressionStatement	"set_option ( ""START"" , ""$(UWCS_START)"" )"	280:2:7840:7876	958786	0	True				
ANR	958906	CallExpression	"set_option ( ""START"" , ""$(UWCS_START)"" )"		958786	0					
ANR	958907	Callee	set_option		958786	0					
ANR	958908	Identifier	set_option		958786	0					
ANR	958909	ArgumentList	"""START"""		958786	1					
ANR	958910	Argument	"""START"""		958786	0					
ANR	958911	PrimaryExpression	"""START"""		958786	0					
ANR	958912	Argument	"""$(UWCS_START)"""		958786	1					
ANR	958913	PrimaryExpression	"""$(UWCS_START)"""		958786	0					
ANR	958914	ExpressionStatement	"set_option ( ""CONTINUE"" , ""$(UWCS_CONTINUE)"" )"	281:2:7880:7922	958786	1	True				
ANR	958915	CallExpression	"set_option ( ""CONTINUE"" , ""$(UWCS_CONTINUE)"" )"		958786	0					
ANR	958916	Callee	set_option		958786	0					
ANR	958917	Identifier	set_option		958786	0					
ANR	958918	ArgumentList	"""CONTINUE"""		958786	1					
ANR	958919	Argument	"""CONTINUE"""		958786	0					
ANR	958920	PrimaryExpression	"""CONTINUE"""		958786	0					
ANR	958921	Argument	"""$(UWCS_CONTINUE)"""		958786	1					
ANR	958922	PrimaryExpression	"""$(UWCS_CONTINUE)"""		958786	0					
ANR	958923	ExpressionStatement	"set_option ( ""SUSPEND"" , ""$(UWCS_SUSPEND)"" )"	283:2:7927:7967	958786	2	True				
ANR	958924	CallExpression	"set_option ( ""SUSPEND"" , ""$(UWCS_SUSPEND)"" )"		958786	0					
ANR	958925	Callee	set_option		958786	0					
ANR	958926	Identifier	set_option		958786	0					
ANR	958927	ArgumentList	"""SUSPEND"""		958786	1					
ANR	958928	Argument	"""SUSPEND"""		958786	0					
ANR	958929	PrimaryExpression	"""SUSPEND"""		958786	0					
ANR	958930	Argument	"""$(UWCS_SUSPEND)"""		958786	1					
ANR	958931	PrimaryExpression	"""$(UWCS_SUSPEND)"""		958786	0					
ANR	958932	ExpressionStatement	"set_option ( ""WANT_SUSPEND"" , ""$(UWCS_WANT_SUSPEND)"" )"	284:2:7971:8021	958786	3	True				
ANR	958933	CallExpression	"set_option ( ""WANT_SUSPEND"" , ""$(UWCS_WANT_SUSPEND)"" )"		958786	0					
ANR	958934	Callee	set_option		958786	0					
ANR	958935	Identifier	set_option		958786	0					
ANR	958936	ArgumentList	"""WANT_SUSPEND"""		958786	1					
ANR	958937	Argument	"""WANT_SUSPEND"""		958786	0					
ANR	958938	PrimaryExpression	"""WANT_SUSPEND"""		958786	0					
ANR	958939	Argument	"""$(UWCS_WANT_SUSPEND)"""		958786	1					
ANR	958940	PrimaryExpression	"""$(UWCS_WANT_SUSPEND)"""		958786	0					
ANR	958941	ExpressionStatement	"set_option ( ""WANT_VACATE"" , ""$(UWCS_WANT_VACATE)"" )"	285:2:8025:8073	958786	4	True				
ANR	958942	CallExpression	"set_option ( ""WANT_VACATE"" , ""$(UWCS_WANT_VACATE)"" )"		958786	0					
ANR	958943	Callee	set_option		958786	0					
ANR	958944	Identifier	set_option		958786	0					
ANR	958945	ArgumentList	"""WANT_VACATE"""		958786	1					
ANR	958946	Argument	"""WANT_VACATE"""		958786	0					
ANR	958947	PrimaryExpression	"""WANT_VACATE"""		958786	0					
ANR	958948	Argument	"""$(UWCS_WANT_VACATE)"""		958786	1					
ANR	958949	PrimaryExpression	"""$(UWCS_WANT_VACATE)"""		958786	0					
ANR	958950	ExpressionStatement	"set_option ( ""WANT_PREEMPT"" , ""$(UWCS_WANT_PREEMPT)"" )"	286:2:8077:8127	958786	5	True				
ANR	958951	CallExpression	"set_option ( ""WANT_PREEMPT"" , ""$(UWCS_WANT_PREEMPT)"" )"		958786	0					
ANR	958952	Callee	set_option		958786	0					
ANR	958953	Identifier	set_option		958786	0					
ANR	958954	ArgumentList	"""WANT_PREEMPT"""		958786	1					
ANR	958955	Argument	"""WANT_PREEMPT"""		958786	0					
ANR	958956	PrimaryExpression	"""WANT_PREEMPT"""		958786	0					
ANR	958957	Argument	"""$(UWCS_WANT_PREEMPT)"""		958786	1					
ANR	958958	PrimaryExpression	"""$(UWCS_WANT_PREEMPT)"""		958786	0					
ANR	958959	IfStatement	if ( Opt . vacatejobs == 'N' )		958786	1					
ANR	958960	Condition	Opt . vacatejobs == 'N'	289:6:8139:8159	958786	0	True				
ANR	958961	EqualityExpression	Opt . vacatejobs == 'N'		958786	0		==			
ANR	958962	MemberAccess	Opt . vacatejobs		958786	0					
ANR	958963	Identifier	Opt		958786	0					
ANR	958964	Identifier	vacatejobs		958786	1					
ANR	958965	PrimaryExpression	'N'		958786	1					
ANR	958966	CompoundStatement		31:30:970:970	958786	1					
ANR	958967	ExpressionStatement	"set_option ( ""WANT_VACATE"" , ""FALSE"" )"	290:3:8168:8202	958786	0	True				
ANR	958968	CallExpression	"set_option ( ""WANT_VACATE"" , ""FALSE"" )"		958786	0					
ANR	958969	Callee	set_option		958786	0					
ANR	958970	Identifier	set_option		958786	0					
ANR	958971	ArgumentList	"""WANT_VACATE"""		958786	1					
ANR	958972	Argument	"""WANT_VACATE"""		958786	0					
ANR	958973	PrimaryExpression	"""WANT_VACATE"""		958786	0					
ANR	958974	Argument	"""FALSE"""		958786	1					
ANR	958975	PrimaryExpression	"""FALSE"""		958786	0					
ANR	958976	ExpressionStatement	"set_option ( ""WANT_SUSPEND"" , ""TRUE"" )"	291:3:8207:8241	958786	1	True				
ANR	958977	CallExpression	"set_option ( ""WANT_SUSPEND"" , ""TRUE"" )"		958786	0					
ANR	958978	Callee	set_option		958786	0					
ANR	958979	Identifier	set_option		958786	0					
ANR	958980	ArgumentList	"""WANT_SUSPEND"""		958786	1					
ANR	958981	Argument	"""WANT_SUSPEND"""		958786	0					
ANR	958982	PrimaryExpression	"""WANT_SUSPEND"""		958786	0					
ANR	958983	Argument	"""TRUE"""		958786	1					
ANR	958984	PrimaryExpression	"""TRUE"""		958786	0					
ANR	958985	ElseStatement	else		958786	0					
ANR	958986	IfStatement	if ( Opt . vacatejobs == 'Y' )		958786	0					
ANR	958987	Condition	Opt . vacatejobs == 'Y'	292:13:8256:8276	958786	0	True				
ANR	958988	EqualityExpression	Opt . vacatejobs == 'Y'		958786	0		==			
ANR	958989	MemberAccess	Opt . vacatejobs		958786	0					
ANR	958990	Identifier	Opt		958786	0					
ANR	958991	Identifier	vacatejobs		958786	1					
ANR	958992	PrimaryExpression	'Y'		958786	1					
ANR	958993	CompoundStatement		34:37:1087:1087	958786	1					
ANR	958994	ExpressionStatement	"set_option ( ""WANT_VACATE"" , ""$(UWCS_WANT_VACATE)"" )"	293:3:8285:8333	958786	0	True				
ANR	958995	CallExpression	"set_option ( ""WANT_VACATE"" , ""$(UWCS_WANT_VACATE)"" )"		958786	0					
ANR	958996	Callee	set_option		958786	0					
ANR	958997	Identifier	set_option		958786	0					
ANR	958998	ArgumentList	"""WANT_VACATE"""		958786	1					
ANR	958999	Argument	"""WANT_VACATE"""		958786	0					
ANR	959000	PrimaryExpression	"""WANT_VACATE"""		958786	0					
ANR	959001	Argument	"""$(UWCS_WANT_VACATE)"""		958786	1					
ANR	959002	PrimaryExpression	"""$(UWCS_WANT_VACATE)"""		958786	0					
ANR	959003	ExpressionStatement	"set_option ( ""WANT_SUSPEND"" , ""$(UWCS_WANT_SUSPEND)"" )"	294:3:8338:8388	958786	1	True				
ANR	959004	CallExpression	"set_option ( ""WANT_SUSPEND"" , ""$(UWCS_WANT_SUSPEND)"" )"		958786	0					
ANR	959005	Callee	set_option		958786	0					
ANR	959006	Identifier	set_option		958786	0					
ANR	959007	ArgumentList	"""WANT_SUSPEND"""		958786	1					
ANR	959008	Argument	"""WANT_SUSPEND"""		958786	0					
ANR	959009	PrimaryExpression	"""WANT_SUSPEND"""		958786	0					
ANR	959010	Argument	"""$(UWCS_WANT_SUSPEND)"""		958786	1					
ANR	959011	PrimaryExpression	"""$(UWCS_WANT_SUSPEND)"""		958786	0					
ANR	959012	ReturnType	void		958786	1					
ANR	959013	Identifier	set_startdpolicy		958786	2					
ANR	959014	ParameterList			958786	3					
ANR	959015	CFGEntryNode	ENTRY		958786		True				
ANR	959016	CFGExitNode	EXIT		958786		True				
ANR	959017	Symbol	Opt		958786						
ANR	959018	Symbol	Opt . runjobs		958786						
ANR	959019	Symbol	Opt . vacatejobs		958786						
ANR	959020	Function	set_poolinfo	299:0:8397:8667							
ANR	959021	FunctionDef	set_poolinfo ()		959020	0					
ANR	959022	CompoundStatement		300:15:8418:8667	959020	0					
ANR	959023	IfStatement	if ( Opt . poolname != NULL )		959020	0					
ANR	959024	Condition	Opt . poolname != NULL	301:6:8426:8445	959020	0	True				
ANR	959025	EqualityExpression	Opt . poolname != NULL		959020	0		!=			
ANR	959026	MemberAccess	Opt . poolname		959020	0					
ANR	959027	Identifier	Opt		959020	0					
ANR	959028	Identifier	poolname		959020	1					
ANR	959029	Identifier	NULL		959020	1					
ANR	959030	CompoundStatement		2:29:30:30	959020	1					
ANR	959031	ExpressionStatement	"set_option ( ""COLLECTOR_NAME"" , Opt . poolname )"	302:2:8453:8495	959020	0	True				
ANR	959032	CallExpression	"set_option ( ""COLLECTOR_NAME"" , Opt . poolname )"		959020	0					
ANR	959033	Callee	set_option		959020	0					
ANR	959034	Identifier	set_option		959020	0					
ANR	959035	ArgumentList	"""COLLECTOR_NAME"""		959020	1					
ANR	959036	Argument	"""COLLECTOR_NAME"""		959020	0					
ANR	959037	PrimaryExpression	"""COLLECTOR_NAME"""		959020	0					
ANR	959038	Argument	Opt . poolname		959020	1					
ANR	959039	MemberAccess	Opt . poolname		959020	0					
ANR	959040	Identifier	Opt		959020	0					
ANR	959041	Identifier	poolname		959020	1					
ANR	959042	ExpressionStatement	"set_option ( ""CONDOR_HOST"" , ""$(FULL_HOSTNAME)"" )"	303:2:8499:8544	959020	1	True				
ANR	959043	CallExpression	"set_option ( ""CONDOR_HOST"" , ""$(FULL_HOSTNAME)"" )"		959020	0					
ANR	959044	Callee	set_option		959020	0					
ANR	959045	Identifier	set_option		959020	0					
ANR	959046	ArgumentList	"""CONDOR_HOST"""		959020	1					
ANR	959047	Argument	"""CONDOR_HOST"""		959020	0					
ANR	959048	PrimaryExpression	"""CONDOR_HOST"""		959020	0					
ANR	959049	Argument	"""$(FULL_HOSTNAME)"""		959020	1					
ANR	959050	PrimaryExpression	"""$(FULL_HOSTNAME)"""		959020	0					
ANR	959051	IfStatement	if ( Opt . poolhostname != NULL && Opt . poolhostname [ 0 ] != '\\0' )		959020	1					
ANR	959052	Condition	Opt . poolhostname != NULL && Opt . poolhostname [ 0 ] != '\\0'	306:6:8556:8610	959020	0	True				
ANR	959053	AndExpression	Opt . poolhostname != NULL && Opt . poolhostname [ 0 ] != '\\0'		959020	0		&&			
ANR	959054	EqualityExpression	Opt . poolhostname != NULL		959020	0		!=			
ANR	959055	MemberAccess	Opt . poolhostname		959020	0					
ANR	959056	Identifier	Opt		959020	0					
ANR	959057	Identifier	poolhostname		959020	1					
ANR	959058	Identifier	NULL		959020	1					
ANR	959059	EqualityExpression	Opt . poolhostname [ 0 ] != '\\0'		959020	1		!=			
ANR	959060	ArrayIndexing	Opt . poolhostname [ 0 ]		959020	0					
ANR	959061	MemberAccess	Opt . poolhostname		959020	0					
ANR	959062	Identifier	Opt		959020	0					
ANR	959063	Identifier	poolhostname		959020	1					
ANR	959064	PrimaryExpression	0		959020	1					
ANR	959065	PrimaryExpression	'\\0'		959020	1					
ANR	959066	CompoundStatement		7:64:195:195	959020	1					
ANR	959067	ExpressionStatement	"set_option ( ""CONDOR_HOST"" , Opt . poolhostname )"	307:2:8618:8661	959020	0	True				
ANR	959068	CallExpression	"set_option ( ""CONDOR_HOST"" , Opt . poolhostname )"		959020	0					
ANR	959069	Callee	set_option		959020	0					
ANR	959070	Identifier	set_option		959020	0					
ANR	959071	ArgumentList	"""CONDOR_HOST"""		959020	1					
ANR	959072	Argument	"""CONDOR_HOST"""		959020	0					
ANR	959073	PrimaryExpression	"""CONDOR_HOST"""		959020	0					
ANR	959074	Argument	Opt . poolhostname		959020	1					
ANR	959075	MemberAccess	Opt . poolhostname		959020	0					
ANR	959076	Identifier	Opt		959020	0					
ANR	959077	Identifier	poolhostname		959020	1					
ANR	959078	ReturnType	void		959020	1					
ANR	959079	Identifier	set_poolinfo		959020	2					
ANR	959080	ParameterList			959020	3					
ANR	959081	CFGEntryNode	ENTRY		959020		True				
ANR	959082	CFGExitNode	EXIT		959020		True				
ANR	959083	Symbol	Opt		959020						
ANR	959084	Symbol	* Opt		959020						
ANR	959085	Symbol	NULL		959020						
ANR	959086	Symbol	Opt . poolname		959020						
ANR	959087	Symbol	* Opt . poolhostname		959020						
ANR	959088	Symbol	Opt . poolhostname		959020						
ANR	959089	Function	set_daemonlist	312:0:8670:9092							
ANR	959090	FunctionDef	set_daemonlist ()		959089	0					
ANR	959091	CompoundStatement		313:17:8692:9092	959089	0					
ANR	959092	IdentifierDeclStatement	char buf [ 1024 ] ;	314:1:8695:8709	959089	0	True				
ANR	959093	IdentifierDecl	buf [ 1024 ]		959089	0					
ANR	959094	IdentifierDeclType	char [ 1024 ]		959089	0					
ANR	959095	Identifier	buf		959089	1					
ANR	959096	PrimaryExpression	1024		959089	2					
ANR	959097	IfStatement	if ( Opt . newpool && Opt . submitjobs && Opt . runjobs )		959089	1					
ANR	959098	Condition	Opt . newpool && Opt . submitjobs && Opt . runjobs	316:6:8718:8761	959089	0	True				
ANR	959099	AndExpression	Opt . newpool && Opt . submitjobs && Opt . runjobs		959089	0		&&			
ANR	959100	MemberAccess	Opt . newpool		959089	0					
ANR	959101	Identifier	Opt		959089	0					
ANR	959102	Identifier	newpool		959089	1					
ANR	959103	AndExpression	Opt . submitjobs && Opt . runjobs		959089	1		&&			
ANR	959104	MemberAccess	Opt . submitjobs		959089	0					
ANR	959105	Identifier	Opt		959089	0					
ANR	959106	Identifier	submitjobs		959089	1					
ANR	959107	MemberAccess	Opt . runjobs		959089	1					
ANR	959108	Identifier	Opt		959089	0					
ANR	959109	Identifier	runjobs		959089	1					
ANR	959110	CompoundStatement		4:53:72:72	959089	1					
ANR	959111	ExpressionStatement	"snprintf ( buf , 1024 , ""MASTER %s %s %s %s"" , ( Opt . newpool == 'Y' ) ? ""COLLECTOR NEGOTIATOR"" : """" , ( Opt . submitjobs == 'Y' ) ? ""SCHEDD"" : """" , ( Opt . runjobs == 'A' || Opt . runjobs == 'I' || Opt . runjobs == 'C' ) ? ""STARTD KBDD"" : """" , ( Opt . hadoop == 'Y' ) ? ""HDFS"" : """" )"	317:2:8769:9052	959089	0	True				
ANR	959112	CallExpression	"snprintf ( buf , 1024 , ""MASTER %s %s %s %s"" , ( Opt . newpool == 'Y' ) ? ""COLLECTOR NEGOTIATOR"" : """" , ( Opt . submitjobs == 'Y' ) ? ""SCHEDD"" : """" , ( Opt . runjobs == 'A' || Opt . runjobs == 'I' || Opt . runjobs == 'C' ) ? ""STARTD KBDD"" : """" , ( Opt . hadoop == 'Y' ) ? ""HDFS"" : """" )"		959089	0					
ANR	959113	Callee	snprintf		959089	0					
ANR	959114	Identifier	snprintf		959089	0					
ANR	959115	ArgumentList	buf		959089	1					
ANR	959116	Argument	buf		959089	0					
ANR	959117	Identifier	buf		959089	0					
ANR	959118	Argument	1024		959089	1					
ANR	959119	PrimaryExpression	1024		959089	0					
ANR	959120	Argument	"""MASTER %s %s %s %s"""		959089	2					
ANR	959121	PrimaryExpression	"""MASTER %s %s %s %s"""		959089	0					
ANR	959122	Argument	"( Opt . newpool == 'Y' ) ? ""COLLECTOR NEGOTIATOR"" : """""		959089	3					
ANR	959123	ConditionalExpression	"( Opt . newpool == 'Y' ) ? ""COLLECTOR NEGOTIATOR"" : """""		959089	0					
ANR	959124	Condition	Opt . newpool == 'Y'		959089	0					
ANR	959125	EqualityExpression	Opt . newpool == 'Y'		959089	0		==			
ANR	959126	MemberAccess	Opt . newpool		959089	0					
ANR	959127	Identifier	Opt		959089	0					
ANR	959128	Identifier	newpool		959089	1					
ANR	959129	PrimaryExpression	'Y'		959089	1					
ANR	959130	PrimaryExpression	"""COLLECTOR NEGOTIATOR"""		959089	1					
ANR	959131	PrimaryExpression	""""""		959089	2					
ANR	959132	Argument	"( Opt . submitjobs == 'Y' ) ? ""SCHEDD"" : """""		959089	4					
ANR	959133	ConditionalExpression	"( Opt . submitjobs == 'Y' ) ? ""SCHEDD"" : """""		959089	0					
ANR	959134	Condition	Opt . submitjobs == 'Y'		959089	0					
ANR	959135	EqualityExpression	Opt . submitjobs == 'Y'		959089	0		==			
ANR	959136	MemberAccess	Opt . submitjobs		959089	0					
ANR	959137	Identifier	Opt		959089	0					
ANR	959138	Identifier	submitjobs		959089	1					
ANR	959139	PrimaryExpression	'Y'		959089	1					
ANR	959140	PrimaryExpression	"""SCHEDD"""		959089	1					
ANR	959141	PrimaryExpression	""""""		959089	2					
ANR	959142	Argument	"( Opt . runjobs == 'A' || Opt . runjobs == 'I' || Opt . runjobs == 'C' ) ? ""STARTD KBDD"" : """""		959089	5					
ANR	959143	ConditionalExpression	"( Opt . runjobs == 'A' || Opt . runjobs == 'I' || Opt . runjobs == 'C' ) ? ""STARTD KBDD"" : """""		959089	0					
ANR	959144	Condition	Opt . runjobs == 'A' || Opt . runjobs == 'I' || Opt . runjobs == 'C'		959089	0					
ANR	959145	OrExpression	Opt . runjobs == 'A' || Opt . runjobs == 'I' || Opt . runjobs == 'C'		959089	0		||			
ANR	959146	EqualityExpression	Opt . runjobs == 'A'		959089	0		==			
ANR	959147	MemberAccess	Opt . runjobs		959089	0					
ANR	959148	Identifier	Opt		959089	0					
ANR	959149	Identifier	runjobs		959089	1					
ANR	959150	PrimaryExpression	'A'		959089	1					
ANR	959151	OrExpression	Opt . runjobs == 'I' || Opt . runjobs == 'C'		959089	1		||			
ANR	959152	EqualityExpression	Opt . runjobs == 'I'		959089	0		==			
ANR	959153	MemberAccess	Opt . runjobs		959089	0					
ANR	959154	Identifier	Opt		959089	0					
ANR	959155	Identifier	runjobs		959089	1					
ANR	959156	PrimaryExpression	'I'		959089	1					
ANR	959157	EqualityExpression	Opt . runjobs == 'C'		959089	1		==			
ANR	959158	MemberAccess	Opt . runjobs		959089	0					
ANR	959159	Identifier	Opt		959089	0					
ANR	959160	Identifier	runjobs		959089	1					
ANR	959161	PrimaryExpression	'C'		959089	1					
ANR	959162	PrimaryExpression	"""STARTD KBDD"""		959089	1					
ANR	959163	PrimaryExpression	""""""		959089	2					
ANR	959164	Argument	"( Opt . hadoop == 'Y' ) ? ""HDFS"" : """""		959089	6					
ANR	959165	ConditionalExpression	"( Opt . hadoop == 'Y' ) ? ""HDFS"" : """""		959089	0					
ANR	959166	Condition	Opt . hadoop == 'Y'		959089	0					
ANR	959167	EqualityExpression	Opt . hadoop == 'Y'		959089	0		==			
ANR	959168	MemberAccess	Opt . hadoop		959089	0					
ANR	959169	Identifier	Opt		959089	0					
ANR	959170	Identifier	hadoop		959089	1					
ANR	959171	PrimaryExpression	'Y'		959089	1					
ANR	959172	PrimaryExpression	"""HDFS"""		959089	1					
ANR	959173	PrimaryExpression	""""""		959089	2					
ANR	959174	ExpressionStatement	"set_option ( ""DAEMON_LIST"" , buf )"	325:2:9057:9087	959089	1	True				
ANR	959175	CallExpression	"set_option ( ""DAEMON_LIST"" , buf )"		959089	0					
ANR	959176	Callee	set_option		959089	0					
ANR	959177	Identifier	set_option		959089	0					
ANR	959178	ArgumentList	"""DAEMON_LIST"""		959089	1					
ANR	959179	Argument	"""DAEMON_LIST"""		959089	0					
ANR	959180	PrimaryExpression	"""DAEMON_LIST"""		959089	0					
ANR	959181	Argument	buf		959089	1					
ANR	959182	Identifier	buf		959089	0					
ANR	959183	ReturnType	void		959089	1					
ANR	959184	Identifier	set_daemonlist		959089	2					
ANR	959185	ParameterList			959089	3					
ANR	959186	CFGEntryNode	ENTRY		959089		True				
ANR	959187	CFGExitNode	EXIT		959089		True				
ANR	959188	Symbol	buf		959089						
ANR	959189	Symbol	Opt		959089						
ANR	959190	Symbol	Opt . hadoop		959089						
ANR	959191	Symbol	Opt . runjobs		959089						
ANR	959192	Symbol	Opt . submitjobs		959089						
ANR	959193	Symbol	Opt . newpool		959089						
ANR	959194	Function	set_hostpermissions	329:0:9095:9412							
ANR	959195	FunctionDef	set_hostpermissions ()		959194	0					
ANR	959196	CompoundStatement		330:22:9122:9412	959194	0					
ANR	959197	IfStatement	if ( Opt . hostallowread != NULL )		959194	0					
ANR	959198	Condition	Opt . hostallowread != NULL	331:6:9130:9154	959194	0	True				
ANR	959199	EqualityExpression	Opt . hostallowread != NULL		959194	0		!=			
ANR	959200	MemberAccess	Opt . hostallowread		959194	0					
ANR	959201	Identifier	Opt		959194	0					
ANR	959202	Identifier	hostallowread		959194	1					
ANR	959203	Identifier	NULL		959194	1					
ANR	959204	CompoundStatement		2:34:35:35	959194	1					
ANR	959205	ExpressionStatement	"set_option ( ""ALLOW_READ"" , Opt . hostallowread )"	332:2:9162:9205	959194	0	True				
ANR	959206	CallExpression	"set_option ( ""ALLOW_READ"" , Opt . hostallowread )"		959194	0					
ANR	959207	Callee	set_option		959194	0					
ANR	959208	Identifier	set_option		959194	0					
ANR	959209	ArgumentList	"""ALLOW_READ"""		959194	1					
ANR	959210	Argument	"""ALLOW_READ"""		959194	0					
ANR	959211	PrimaryExpression	"""ALLOW_READ"""		959194	0					
ANR	959212	Argument	Opt . hostallowread		959194	1					
ANR	959213	MemberAccess	Opt . hostallowread		959194	0					
ANR	959214	Identifier	Opt		959194	0					
ANR	959215	Identifier	hostallowread		959194	1					
ANR	959216	IfStatement	if ( Opt . hostallowwrite != NULL )		959194	1					
ANR	959217	Condition	Opt . hostallowwrite != NULL	334:6:9216:9241	959194	0	True				
ANR	959218	EqualityExpression	Opt . hostallowwrite != NULL		959194	0		!=			
ANR	959219	MemberAccess	Opt . hostallowwrite		959194	0					
ANR	959220	Identifier	Opt		959194	0					
ANR	959221	Identifier	hostallowwrite		959194	1					
ANR	959222	Identifier	NULL		959194	1					
ANR	959223	CompoundStatement		5:35:122:122	959194	1					
ANR	959224	ExpressionStatement	"set_option ( ""ALLOW_WRITE"" , Opt . hostallowwrite )"	335:2:9249:9294	959194	0	True				
ANR	959225	CallExpression	"set_option ( ""ALLOW_WRITE"" , Opt . hostallowwrite )"		959194	0					
ANR	959226	Callee	set_option		959194	0					
ANR	959227	Identifier	set_option		959194	0					
ANR	959228	ArgumentList	"""ALLOW_WRITE"""		959194	1					
ANR	959229	Argument	"""ALLOW_WRITE"""		959194	0					
ANR	959230	PrimaryExpression	"""ALLOW_WRITE"""		959194	0					
ANR	959231	Argument	Opt . hostallowwrite		959194	1					
ANR	959232	MemberAccess	Opt . hostallowwrite		959194	0					
ANR	959233	Identifier	Opt		959194	0					
ANR	959234	Identifier	hostallowwrite		959194	1					
ANR	959235	IfStatement	if ( Opt . hostallowadministrator != NULL )		959194	2					
ANR	959236	Condition	Opt . hostallowadministrator != NULL	337:6:9305:9338	959194	0	True				
ANR	959237	EqualityExpression	Opt . hostallowadministrator != NULL		959194	0		!=			
ANR	959238	MemberAccess	Opt . hostallowadministrator		959194	0					
ANR	959239	Identifier	Opt		959194	0					
ANR	959240	Identifier	hostallowadministrator		959194	1					
ANR	959241	Identifier	NULL		959194	1					
ANR	959242	CompoundStatement		8:43:219:219	959194	1					
ANR	959243	ExpressionStatement	"set_option ( ""ALLOW_ADMINISTRATOR"" , Opt . hostallowadministrator )"	338:2:9346:9407	959194	0	True				
ANR	959244	CallExpression	"set_option ( ""ALLOW_ADMINISTRATOR"" , Opt . hostallowadministrator )"		959194	0					
ANR	959245	Callee	set_option		959194	0					
ANR	959246	Identifier	set_option		959194	0					
ANR	959247	ArgumentList	"""ALLOW_ADMINISTRATOR"""		959194	1					
ANR	959248	Argument	"""ALLOW_ADMINISTRATOR"""		959194	0					
ANR	959249	PrimaryExpression	"""ALLOW_ADMINISTRATOR"""		959194	0					
ANR	959250	Argument	Opt . hostallowadministrator		959194	1					
ANR	959251	MemberAccess	Opt . hostallowadministrator		959194	0					
ANR	959252	Identifier	Opt		959194	0					
ANR	959253	Identifier	hostallowadministrator		959194	1					
ANR	959254	ReturnType	void		959194	1					
ANR	959255	Identifier	set_hostpermissions		959194	2					
ANR	959256	ParameterList			959194	3					
ANR	959257	CFGEntryNode	ENTRY		959194		True				
ANR	959258	CFGExitNode	EXIT		959194		True				
ANR	959259	Symbol	Opt . hostallowadministrator		959194						
ANR	959260	Symbol	Opt		959194						
ANR	959261	Symbol	NULL		959194						
ANR	959262	Symbol	Opt . hostallowread		959194						
ANR	959263	Symbol	Opt . hostallowwrite		959194						
ANR	959264	Function	set_vmuniverse	342:0:9415:9786							
ANR	959265	FunctionDef	set_vmuniverse ()		959264	0					
ANR	959266	CompoundStatement		343:17:9437:9786	959264	0					
ANR	959267	IfStatement	if ( Opt . enablevmuniverse == 'Y' )		959264	0					
ANR	959268	Condition	Opt . enablevmuniverse == 'Y'	344:6:9445:9471	959264	0	True				
ANR	959269	EqualityExpression	Opt . enablevmuniverse == 'Y'		959264	0		==			
ANR	959270	MemberAccess	Opt . enablevmuniverse		959264	0					
ANR	959271	Identifier	Opt		959264	0					
ANR	959272	Identifier	enablevmuniverse		959264	1					
ANR	959273	PrimaryExpression	'Y'		959264	1					
ANR	959274	CompoundStatement		2:36:37:37	959264	1					
ANR	959275	ExpressionStatement	"set_option ( ""VM_GAHP_SERVER"" , ""$(BIN)/condor_vm-gahp.exe"" )"	345:2:9479:9536	959264	0	True				
ANR	959276	CallExpression	"set_option ( ""VM_GAHP_SERVER"" , ""$(BIN)/condor_vm-gahp.exe"" )"		959264	0					
ANR	959277	Callee	set_option		959264	0					
ANR	959278	Identifier	set_option		959264	0					
ANR	959279	ArgumentList	"""VM_GAHP_SERVER"""		959264	1					
ANR	959280	Argument	"""VM_GAHP_SERVER"""		959264	0					
ANR	959281	PrimaryExpression	"""VM_GAHP_SERVER"""		959264	0					
ANR	959282	Argument	"""$(BIN)/condor_vm-gahp.exe"""		959264	1					
ANR	959283	PrimaryExpression	"""$(BIN)/condor_vm-gahp.exe"""		959264	0					
ANR	959284	ExpressionStatement	"set_option ( ""VM_TYPE"" , ""vmware"" )"	346:2:9540:9571	959264	1	True				
ANR	959285	CallExpression	"set_option ( ""VM_TYPE"" , ""vmware"" )"		959264	0					
ANR	959286	Callee	set_option		959264	0					
ANR	959287	Identifier	set_option		959264	0					
ANR	959288	ArgumentList	"""VM_TYPE"""		959264	1					
ANR	959289	Argument	"""VM_TYPE"""		959264	0					
ANR	959290	PrimaryExpression	"""VM_TYPE"""		959264	0					
ANR	959291	Argument	"""vmware"""		959264	1					
ANR	959292	PrimaryExpression	"""vmware"""		959264	0					
ANR	959293	IfStatement	if ( Opt . vmmaxnumber )		959264	1					
ANR	959294	Condition	Opt . vmmaxnumber	349:6:9583:9597	959264	0	True				
ANR	959295	MemberAccess	Opt . vmmaxnumber		959264	0					
ANR	959296	Identifier	Opt		959264	0					
ANR	959297	Identifier	vmmaxnumber		959264	1					
ANR	959298	CompoundStatement		7:24:163:163	959264	1					
ANR	959299	ExpressionStatement	"set_option ( ""VM_MAX_NUMBER"" , Opt . vmmaxnumber )"	350:2:9605:9649	959264	0	True				
ANR	959300	CallExpression	"set_option ( ""VM_MAX_NUMBER"" , Opt . vmmaxnumber )"		959264	0					
ANR	959301	Callee	set_option		959264	0					
ANR	959302	Identifier	set_option		959264	0					
ANR	959303	ArgumentList	"""VM_MAX_NUMBER"""		959264	1					
ANR	959304	Argument	"""VM_MAX_NUMBER"""		959264	0					
ANR	959305	PrimaryExpression	"""VM_MAX_NUMBER"""		959264	0					
ANR	959306	Argument	Opt . vmmaxnumber		959264	1					
ANR	959307	MemberAccess	Opt . vmmaxnumber		959264	0					
ANR	959308	Identifier	Opt		959264	0					
ANR	959309	Identifier	vmmaxnumber		959264	1					
ANR	959310	IfStatement	if ( 'N' == Opt . vmnetworking )		959264	2					
ANR	959311	Condition	'N' == Opt . vmnetworking	353:6:9661:9683	959264	0	True				
ANR	959312	EqualityExpression	'N' == Opt . vmnetworking		959264	0		==			
ANR	959313	PrimaryExpression	'N'		959264	0					
ANR	959314	MemberAccess	Opt . vmnetworking		959264	1					
ANR	959315	Identifier	Opt		959264	0					
ANR	959316	Identifier	vmnetworking		959264	1					
ANR	959317	CompoundStatement		11:32:249:249	959264	1					
ANR	959318	ExpressionStatement	"set_option ( ""VM_NETWORKING"" , ""FALSE"" )"	354:2:9691:9727	959264	0	True				
ANR	959319	CallExpression	"set_option ( ""VM_NETWORKING"" , ""FALSE"" )"		959264	0					
ANR	959320	Callee	set_option		959264	0					
ANR	959321	Identifier	set_option		959264	0					
ANR	959322	ArgumentList	"""VM_NETWORKING"""		959264	1					
ANR	959323	Argument	"""VM_NETWORKING"""		959264	0					
ANR	959324	PrimaryExpression	"""VM_NETWORKING"""		959264	0					
ANR	959325	Argument	"""FALSE"""		959264	1					
ANR	959326	PrimaryExpression	"""FALSE"""		959264	0					
ANR	959327	ElseStatement	else		959264	0					
ANR	959328	CompoundStatement		13:8:299:299	959264	0					
ANR	959329	ExpressionStatement	"set_option ( ""VM_NETWORKING"" , ""TRUE"" )"	356:2:9741:9776	959264	0	True				
ANR	959330	CallExpression	"set_option ( ""VM_NETWORKING"" , ""TRUE"" )"		959264	0					
ANR	959331	Callee	set_option		959264	0					
ANR	959332	Identifier	set_option		959264	0					
ANR	959333	ArgumentList	"""VM_NETWORKING"""		959264	1					
ANR	959334	Argument	"""VM_NETWORKING"""		959264	0					
ANR	959335	PrimaryExpression	"""VM_NETWORKING"""		959264	0					
ANR	959336	Argument	"""TRUE"""		959264	1					
ANR	959337	PrimaryExpression	"""TRUE"""		959264	0					
ANR	959338	ReturnType	void		959264	1					
ANR	959339	Identifier	set_vmuniverse		959264	2					
ANR	959340	ParameterList			959264	3					
ANR	959341	CFGEntryNode	ENTRY		959264		True				
ANR	959342	CFGExitNode	EXIT		959264		True				
ANR	959343	Symbol	Opt		959264						
ANR	959344	Symbol	Opt . vmnetworking		959264						
ANR	959345	Symbol	Opt . enablevmuniverse		959264						
ANR	959346	Symbol	Opt . vmmaxnumber		959264						
ANR	959347	Function	set_hdfs	361:0:9789:10397							
ANR	959348	FunctionDef	set_hdfs ()		959347	0					
ANR	959349	CompoundStatement		361:16:9805:10397	959347	0					
ANR	959350	IdentifierDeclStatement	char buf [ MAX_PATH ] ;	362:1:9808:9826	959347	0	True				
ANR	959351	IdentifierDecl	buf [ MAX_PATH ]		959347	0					
ANR	959352	IdentifierDeclType	char [ MAX_PATH ]		959347	0					
ANR	959353	Identifier	buf		959347	1					
ANR	959354	Identifier	MAX_PATH		959347	2					
ANR	959355	IfStatement	if ( Opt . namedata )		959347	1					
ANR	959356	Condition	Opt . namedata	363:6:9834:9845	959347	0	True				
ANR	959357	MemberAccess	Opt . namedata		959347	0					
ANR	959358	Identifier	Opt		959347	0					
ANR	959359	Identifier	namedata		959347	1					
ANR	959360	CompoundStatement		3:21:43:43	959347	1					
ANR	959361	ExpressionStatement	"set_option ( ""HDFS_SERVICES"" , Opt . namedata )"	364:2:9853:9894	959347	0	True				
ANR	959362	CallExpression	"set_option ( ""HDFS_SERVICES"" , Opt . namedata )"		959347	0					
ANR	959363	Callee	set_option		959347	0					
ANR	959364	Identifier	set_option		959347	0					
ANR	959365	ArgumentList	"""HDFS_SERVICES"""		959347	1					
ANR	959366	Argument	"""HDFS_SERVICES"""		959347	0					
ANR	959367	PrimaryExpression	"""HDFS_SERVICES"""		959347	0					
ANR	959368	Argument	Opt . namedata		959347	1					
ANR	959369	MemberAccess	Opt . namedata		959347	0					
ANR	959370	Identifier	Opt		959347	0					
ANR	959371	Identifier	namedata		959347	1					
ANR	959372	ExpressionStatement	"set_option ( ""HDFS_NAMENODE_DIR"" , ""$(RELEASE_DIR)/HDFS/hadoop_name"" )"	365:2:9898:9964	959347	1	True				
ANR	959373	CallExpression	"set_option ( ""HDFS_NAMENODE_DIR"" , ""$(RELEASE_DIR)/HDFS/hadoop_name"" )"		959347	0					
ANR	959374	Callee	set_option		959347	0					
ANR	959375	Identifier	set_option		959347	0					
ANR	959376	ArgumentList	"""HDFS_NAMENODE_DIR"""		959347	1					
ANR	959377	Argument	"""HDFS_NAMENODE_DIR"""		959347	0					
ANR	959378	PrimaryExpression	"""HDFS_NAMENODE_DIR"""		959347	0					
ANR	959379	Argument	"""$(RELEASE_DIR)/HDFS/hadoop_name"""		959347	1					
ANR	959380	PrimaryExpression	"""$(RELEASE_DIR)/HDFS/hadoop_name"""		959347	0					
ANR	959381	ExpressionStatement	"set_option ( ""HDFS_DATANODE_DIR"" , ""$(RELEASE_DIR)/HDFS/hadoop_data"" )"	366:2:9968:10034	959347	2	True				
ANR	959382	CallExpression	"set_option ( ""HDFS_DATANODE_DIR"" , ""$(RELEASE_DIR)/HDFS/hadoop_data"" )"		959347	0					
ANR	959383	Callee	set_option		959347	0					
ANR	959384	Identifier	set_option		959347	0					
ANR	959385	ArgumentList	"""HDFS_DATANODE_DIR"""		959347	1					
ANR	959386	Argument	"""HDFS_DATANODE_DIR"""		959347	0					
ANR	959387	PrimaryExpression	"""HDFS_DATANODE_DIR"""		959347	0					
ANR	959388	Argument	"""$(RELEASE_DIR)/HDFS/hadoop_data"""		959347	1					
ANR	959389	PrimaryExpression	"""$(RELEASE_DIR)/HDFS/hadoop_data"""		959347	0					
ANR	959390	ExpressionStatement	"set_option ( ""HDFS_HOME"" , ""$(RELEASE_DIR)/HDFS"" )"	367:2:10038:10084	959347	3	True				
ANR	959391	CallExpression	"set_option ( ""HDFS_HOME"" , ""$(RELEASE_DIR)/HDFS"" )"		959347	0					
ANR	959392	Callee	set_option		959347	0					
ANR	959393	Identifier	set_option		959347	0					
ANR	959394	ArgumentList	"""HDFS_HOME"""		959347	1					
ANR	959395	Argument	"""HDFS_HOME"""		959347	0					
ANR	959396	PrimaryExpression	"""HDFS_HOME"""		959347	0					
ANR	959397	Argument	"""$(RELEASE_DIR)/HDFS"""		959347	1					
ANR	959398	PrimaryExpression	"""$(RELEASE_DIR)/HDFS"""		959347	0					
ANR	959399	IfStatement	if ( Opt . namenode && Opt . nameport )		959347	2					
ANR	959400	Condition	Opt . namenode && Opt . nameport	370:6:10096:10123	959347	0	True				
ANR	959401	AndExpression	Opt . namenode && Opt . nameport		959347	0		&&			
ANR	959402	MemberAccess	Opt . namenode		959347	0					
ANR	959403	Identifier	Opt		959347	0					
ANR	959404	Identifier	namenode		959347	1					
ANR	959405	MemberAccess	Opt . nameport		959347	1					
ANR	959406	Identifier	Opt		959347	0					
ANR	959407	Identifier	nameport		959347	1					
ANR	959408	CompoundStatement		10:37:321:321	959347	1					
ANR	959409	ExpressionStatement	"snprintf ( buf , MAX_PATH , ""%s%s%s"" , Opt . namenode , "":"" , Opt . nameport )"	371:2:10131:10197	959347	0	True				
ANR	959410	CallExpression	"snprintf ( buf , MAX_PATH , ""%s%s%s"" , Opt . namenode , "":"" , Opt . nameport )"		959347	0					
ANR	959411	Callee	snprintf		959347	0					
ANR	959412	Identifier	snprintf		959347	0					
ANR	959413	ArgumentList	buf		959347	1					
ANR	959414	Argument	buf		959347	0					
ANR	959415	Identifier	buf		959347	0					
ANR	959416	Argument	MAX_PATH		959347	1					
ANR	959417	Identifier	MAX_PATH		959347	0					
ANR	959418	Argument	"""%s%s%s"""		959347	2					
ANR	959419	PrimaryExpression	"""%s%s%s"""		959347	0					
ANR	959420	Argument	Opt . namenode		959347	3					
ANR	959421	MemberAccess	Opt . namenode		959347	0					
ANR	959422	Identifier	Opt		959347	0					
ANR	959423	Identifier	namenode		959347	1					
ANR	959424	Argument	""":"""		959347	4					
ANR	959425	PrimaryExpression	""":"""		959347	0					
ANR	959426	Argument	Opt . nameport		959347	5					
ANR	959427	MemberAccess	Opt . nameport		959347	0					
ANR	959428	Identifier	Opt		959347	0					
ANR	959429	Identifier	nameport		959347	1					
ANR	959430	ExpressionStatement	"set_option ( ""HDFS_NAMENODE"" , buf )"	372:2:10201:10233	959347	1	True				
ANR	959431	CallExpression	"set_option ( ""HDFS_NAMENODE"" , buf )"		959347	0					
ANR	959432	Callee	set_option		959347	0					
ANR	959433	Identifier	set_option		959347	0					
ANR	959434	ArgumentList	"""HDFS_NAMENODE"""		959347	1					
ANR	959435	Argument	"""HDFS_NAMENODE"""		959347	0					
ANR	959436	PrimaryExpression	"""HDFS_NAMENODE"""		959347	0					
ANR	959437	Argument	buf		959347	1					
ANR	959438	Identifier	buf		959347	0					
ANR	959439	IfStatement	if ( Opt . namenode && Opt . namewebport )		959347	3					
ANR	959440	Condition	Opt . namenode && Opt . namewebport	375:6:10245:10275	959347	0	True				
ANR	959441	AndExpression	Opt . namenode && Opt . namewebport		959347	0		&&			
ANR	959442	MemberAccess	Opt . namenode		959347	0					
ANR	959443	Identifier	Opt		959347	0					
ANR	959444	Identifier	namenode		959347	1					
ANR	959445	MemberAccess	Opt . namewebport		959347	1					
ANR	959446	Identifier	Opt		959347	0					
ANR	959447	Identifier	namewebport		959347	1					
ANR	959448	CompoundStatement		15:40:473:473	959347	1					
ANR	959449	ExpressionStatement	"snprintf ( buf , MAX_PATH , ""%s%s%s"" , Opt . namenode , "":"" , Opt . namewebport )"	376:2:10283:10352	959347	0	True				
ANR	959450	CallExpression	"snprintf ( buf , MAX_PATH , ""%s%s%s"" , Opt . namenode , "":"" , Opt . namewebport )"		959347	0					
ANR	959451	Callee	snprintf		959347	0					
ANR	959452	Identifier	snprintf		959347	0					
ANR	959453	ArgumentList	buf		959347	1					
ANR	959454	Argument	buf		959347	0					
ANR	959455	Identifier	buf		959347	0					
ANR	959456	Argument	MAX_PATH		959347	1					
ANR	959457	Identifier	MAX_PATH		959347	0					
ANR	959458	Argument	"""%s%s%s"""		959347	2					
ANR	959459	PrimaryExpression	"""%s%s%s"""		959347	0					
ANR	959460	Argument	Opt . namenode		959347	3					
ANR	959461	MemberAccess	Opt . namenode		959347	0					
ANR	959462	Identifier	Opt		959347	0					
ANR	959463	Identifier	namenode		959347	1					
ANR	959464	Argument	""":"""		959347	4					
ANR	959465	PrimaryExpression	""":"""		959347	0					
ANR	959466	Argument	Opt . namewebport		959347	5					
ANR	959467	MemberAccess	Opt . namewebport		959347	0					
ANR	959468	Identifier	Opt		959347	0					
ANR	959469	Identifier	namewebport		959347	1					
ANR	959470	ExpressionStatement	"set_option ( ""HDFS_NAMENODE_WEB"" , buf )"	377:2:10356:10392	959347	1	True				
ANR	959471	CallExpression	"set_option ( ""HDFS_NAMENODE_WEB"" , buf )"		959347	0					
ANR	959472	Callee	set_option		959347	0					
ANR	959473	Identifier	set_option		959347	0					
ANR	959474	ArgumentList	"""HDFS_NAMENODE_WEB"""		959347	1					
ANR	959475	Argument	"""HDFS_NAMENODE_WEB"""		959347	0					
ANR	959476	PrimaryExpression	"""HDFS_NAMENODE_WEB"""		959347	0					
ANR	959477	Argument	buf		959347	1					
ANR	959478	Identifier	buf		959347	0					
ANR	959479	ReturnType	void		959347	1					
ANR	959480	Identifier	set_hdfs		959347	2					
ANR	959481	ParameterList			959347	3					
ANR	959482	CFGEntryNode	ENTRY		959347		True				
ANR	959483	CFGExitNode	EXIT		959347		True				
ANR	959484	Symbol	Opt . nameport		959347						
ANR	959485	Symbol	Opt . namedata		959347						
ANR	959486	Symbol	buf		959347						
ANR	959487	Symbol	Opt		959347						
ANR	959488	Symbol	Opt . namenode		959347						
ANR	959489	Symbol	Opt . namewebport		959347						
ANR	959490	Symbol	MAX_PATH		959347						
ANR	959491	Function	parse_args	381:0:10400:14222							
ANR	959492	FunctionDef	"parse_args (int argc , char * * argv)"		959491	0					
ANR	959493	CompoundStatement		382:34:10440:14222	959491	0					
ANR	959494	IdentifierDeclStatement	"int i , option_index ;"	384:1:10444:10463	959491	0	True				
ANR	959495	IdentifierDecl	i		959491	0					
ANR	959496	IdentifierDeclType	int		959491	0					
ANR	959497	Identifier	i		959491	1					
ANR	959498	IdentifierDecl	option_index		959491	1					
ANR	959499	IdentifierDeclType	int		959491	0					
ANR	959500	Identifier	option_index		959491	1					
ANR	959501	IfStatement	if ( argc < 2 )		959491	1					
ANR	959502	Condition	argc < 2	385:6:10471:10478	959491	0	True				
ANR	959503	RelationalExpression	argc < 2		959491	0		<			
ANR	959504	Identifier	argc		959491	0					
ANR	959505	PrimaryExpression	2		959491	1					
ANR	959506	CompoundStatement		4:17:41:41	959491	1					
ANR	959507	ExpressionStatement	Usage ( )	386:2:10486:10493	959491	0	True				
ANR	959508	CallExpression	Usage ( )		959491	0					
ANR	959509	Callee	Usage		959491	0					
ANR	959510	Identifier	Usage		959491	0					
ANR	959511	ArgumentList			959491	1					
ANR	959512	WhileStatement	"while ( ( i = my_getopt_long ( argc , argv , short_options , long_options , & option_index ) ) > 0 )"		959491	2					
ANR	959513	Condition	"( i = my_getopt_long ( argc , argv , short_options , long_options , & option_index ) ) > 0"	388:9:10507:10591	959491	0	True				
ANR	959514	RelationalExpression	"( i = my_getopt_long ( argc , argv , short_options , long_options , & option_index ) ) > 0"		959491	0		>			
ANR	959515	AssignmentExpression	"i = my_getopt_long ( argc , argv , short_options , long_options , & option_index )"		959491	0		=			
ANR	959516	Identifier	i		959491	0					
ANR	959517	CallExpression	"my_getopt_long ( argc , argv , short_options , long_options , & option_index )"		959491	1					
ANR	959518	Callee	my_getopt_long		959491	0					
ANR	959519	Identifier	my_getopt_long		959491	0					
ANR	959520	ArgumentList	argc		959491	1					
ANR	959521	Argument	argc		959491	0					
ANR	959522	Identifier	argc		959491	0					
ANR	959523	Argument	argv		959491	1					
ANR	959524	Identifier	argv		959491	0					
ANR	959525	Argument	short_options		959491	2					
ANR	959526	Identifier	short_options		959491	0					
ANR	959527	Argument	long_options		959491	3					
ANR	959528	Identifier	long_options		959491	0					
ANR	959529	Argument	& option_index		959491	4					
ANR	959530	UnaryOperationExpression	& option_index		959491	0					
ANR	959531	UnaryOperator	&		959491	0					
ANR	959532	Identifier	option_index		959491	1					
ANR	959533	PrimaryExpression	0		959491	1					
ANR	959534	CompoundStatement		8:41:154:154	959491	1					
ANR	959535	SwitchStatement	switch ( i )		959491	0					
ANR	959536	Condition	i	391:9:10607:10607	959491	0	True				
ANR	959537	Identifier	i		959491	0					
ANR	959538	CompoundStatement		10:12:169:169	959491	1					
ANR	959539	Label	case 'a' :	392:3:10615:10623	959491	0	True				
ANR	959540	IfStatement	if ( ! isempty ( my_optarg ) )		959491	1					
ANR	959541	Condition	! isempty ( my_optarg )	393:8:10633:10651	959491	0	True				
ANR	959542	UnaryOperationExpression	! isempty ( my_optarg )		959491	0					
ANR	959543	UnaryOperator	!		959491	0					
ANR	959544	CallExpression	isempty ( my_optarg )		959491	1					
ANR	959545	Callee	isempty		959491	0					
ANR	959546	Identifier	isempty		959491	0					
ANR	959547	ArgumentList	my_optarg		959491	1					
ANR	959548	Argument	my_optarg		959491	0					
ANR	959549	Identifier	my_optarg		959491	0					
ANR	959550	CompoundStatement		12:29:213:213	959491	1					
ANR	959551	ExpressionStatement	Opt . accountingdomain = strdup ( my_optarg )	394:5:10661:10701	959491	0	True				
ANR	959552	AssignmentExpression	Opt . accountingdomain = strdup ( my_optarg )		959491	0		=			
ANR	959553	MemberAccess	Opt . accountingdomain		959491	0					
ANR	959554	Identifier	Opt		959491	0					
ANR	959555	Identifier	accountingdomain		959491	1					
ANR	959556	CallExpression	strdup ( my_optarg )		959491	1					
ANR	959557	Callee	strdup		959491	0					
ANR	959558	Identifier	strdup		959491	0					
ANR	959559	ArgumentList	my_optarg		959491	1					
ANR	959560	Argument	my_optarg		959491	0					
ANR	959561	Identifier	my_optarg		959491	0					
ANR	959562	BreakStatement	break ;	396:3:10712:10717	959491	2	True				
ANR	959563	Label	case 'c' :	397:3:10722:10730	959491	3	True				
ANR	959564	IfStatement	if ( ! isempty ( my_optarg ) )		959491	4					
ANR	959565	Condition	! isempty ( my_optarg )	398:8:10740:10758	959491	0	True				
ANR	959566	UnaryOperationExpression	! isempty ( my_optarg )		959491	0					
ANR	959567	UnaryOperator	!		959491	0					
ANR	959568	CallExpression	isempty ( my_optarg )		959491	1					
ANR	959569	Callee	isempty		959491	0					
ANR	959570	Identifier	isempty		959491	0					
ANR	959571	ArgumentList	my_optarg		959491	1					
ANR	959572	Argument	my_optarg		959491	0					
ANR	959573	Identifier	my_optarg		959491	0					
ANR	959574	CompoundStatement		17:29:320:320	959491	1					
ANR	959575	ExpressionStatement	Opt . condoremail = strdup ( my_optarg )	399:5:10768:10803	959491	0	True				
ANR	959576	AssignmentExpression	Opt . condoremail = strdup ( my_optarg )		959491	0		=			
ANR	959577	MemberAccess	Opt . condoremail		959491	0					
ANR	959578	Identifier	Opt		959491	0					
ANR	959579	Identifier	condoremail		959491	1					
ANR	959580	CallExpression	strdup ( my_optarg )		959491	1					
ANR	959581	Callee	strdup		959491	0					
ANR	959582	Identifier	strdup		959491	0					
ANR	959583	ArgumentList	my_optarg		959491	1					
ANR	959584	Argument	my_optarg		959491	0					
ANR	959585	Identifier	my_optarg		959491	0					
ANR	959586	BreakStatement	break ;	401:3:10814:10819	959491	5	True				
ANR	959587	Label	case 'e' :	403:3:10825:10833	959491	6	True				
ANR	959588	IfStatement	if ( ! isempty ( my_optarg ) )		959491	7					
ANR	959589	Condition	! isempty ( my_optarg )	404:8:10843:10861	959491	0	True				
ANR	959590	UnaryOperationExpression	! isempty ( my_optarg )		959491	0					
ANR	959591	UnaryOperator	!		959491	0					
ANR	959592	CallExpression	isempty ( my_optarg )		959491	1					
ANR	959593	Callee	isempty		959491	0					
ANR	959594	Identifier	isempty		959491	0					
ANR	959595	ArgumentList	my_optarg		959491	1					
ANR	959596	Argument	my_optarg		959491	0					
ANR	959597	Identifier	my_optarg		959491	0					
ANR	959598	CompoundStatement		23:29:423:423	959491	1					
ANR	959599	ExpressionStatement	Opt . hostallowread = strdup ( my_optarg )	405:5:10871:10908	959491	0	True				
ANR	959600	AssignmentExpression	Opt . hostallowread = strdup ( my_optarg )		959491	0		=			
ANR	959601	MemberAccess	Opt . hostallowread		959491	0					
ANR	959602	Identifier	Opt		959491	0					
ANR	959603	Identifier	hostallowread		959491	1					
ANR	959604	CallExpression	strdup ( my_optarg )		959491	1					
ANR	959605	Callee	strdup		959491	0					
ANR	959606	Identifier	strdup		959491	0					
ANR	959607	ArgumentList	my_optarg		959491	1					
ANR	959608	Argument	my_optarg		959491	0					
ANR	959609	Identifier	my_optarg		959491	0					
ANR	959610	BreakStatement	break ;	407:3:10919:10924	959491	8	True				
ANR	959611	Label	case 't' :	409:3:10930:10938	959491	9	True				
ANR	959612	IfStatement	if ( ! isempty ( my_optarg ) )		959491	10					
ANR	959613	Condition	! isempty ( my_optarg )	410:8:10948:10966	959491	0	True				
ANR	959614	UnaryOperationExpression	! isempty ( my_optarg )		959491	0					
ANR	959615	UnaryOperator	!		959491	0					
ANR	959616	CallExpression	isempty ( my_optarg )		959491	1					
ANR	959617	Callee	isempty		959491	0					
ANR	959618	Identifier	isempty		959491	0					
ANR	959619	ArgumentList	my_optarg		959491	1					
ANR	959620	Argument	my_optarg		959491	0					
ANR	959621	Identifier	my_optarg		959491	0					
ANR	959622	CompoundStatement		29:29:528:528	959491	1					
ANR	959623	ExpressionStatement	Opt . hostallowwrite = strdup ( my_optarg )	411:5:10976:11014	959491	0	True				
ANR	959624	AssignmentExpression	Opt . hostallowwrite = strdup ( my_optarg )		959491	0		=			
ANR	959625	MemberAccess	Opt . hostallowwrite		959491	0					
ANR	959626	Identifier	Opt		959491	0					
ANR	959627	Identifier	hostallowwrite		959491	1					
ANR	959628	CallExpression	strdup ( my_optarg )		959491	1					
ANR	959629	Callee	strdup		959491	0					
ANR	959630	Identifier	strdup		959491	0					
ANR	959631	ArgumentList	my_optarg		959491	1					
ANR	959632	Argument	my_optarg		959491	0					
ANR	959633	Identifier	my_optarg		959491	0					
ANR	959634	BreakStatement	break ;	413:3:11025:11030	959491	11	True				
ANR	959635	Label	case 'i' :	415:3:11036:11044	959491	12	True				
ANR	959636	IfStatement	if ( ! isempty ( my_optarg ) )		959491	13					
ANR	959637	Condition	! isempty ( my_optarg )	416:8:11054:11072	959491	0	True				
ANR	959638	UnaryOperationExpression	! isempty ( my_optarg )		959491	0					
ANR	959639	UnaryOperator	!		959491	0					
ANR	959640	CallExpression	isempty ( my_optarg )		959491	1					
ANR	959641	Callee	isempty		959491	0					
ANR	959642	Identifier	isempty		959491	0					
ANR	959643	ArgumentList	my_optarg		959491	1					
ANR	959644	Argument	my_optarg		959491	0					
ANR	959645	Identifier	my_optarg		959491	0					
ANR	959646	CompoundStatement		35:29:634:634	959491	1					
ANR	959647	ExpressionStatement	Opt . hostallowadministrator = strdup ( my_optarg )	417:5:11082:11128	959491	0	True				
ANR	959648	AssignmentExpression	Opt . hostallowadministrator = strdup ( my_optarg )		959491	0		=			
ANR	959649	MemberAccess	Opt . hostallowadministrator		959491	0					
ANR	959650	Identifier	Opt		959491	0					
ANR	959651	Identifier	hostallowadministrator		959491	1					
ANR	959652	CallExpression	strdup ( my_optarg )		959491	1					
ANR	959653	Callee	strdup		959491	0					
ANR	959654	Identifier	strdup		959491	0					
ANR	959655	ArgumentList	my_optarg		959491	1					
ANR	959656	Argument	my_optarg		959491	0					
ANR	959657	Identifier	my_optarg		959491	0					
ANR	959658	BreakStatement	break ;	419:3:11139:11144	959491	14	True				
ANR	959659	Label	case 'j' :	421:3:11150:11158	959491	15	True				
ANR	959660	IfStatement	if ( ! isempty ( my_optarg ) )		959491	16					
ANR	959661	Condition	! isempty ( my_optarg )	422:8:11168:11186	959491	0	True				
ANR	959662	UnaryOperationExpression	! isempty ( my_optarg )		959491	0					
ANR	959663	UnaryOperator	!		959491	0					
ANR	959664	CallExpression	isempty ( my_optarg )		959491	1					
ANR	959665	Callee	isempty		959491	0					
ANR	959666	Identifier	isempty		959491	0					
ANR	959667	ArgumentList	my_optarg		959491	1					
ANR	959668	Argument	my_optarg		959491	0					
ANR	959669	Identifier	my_optarg		959491	0					
ANR	959670	CompoundStatement		41:29:748:748	959491	1					
ANR	959671	ExpressionStatement	Opt . jvmlocation = get_short_path_name ( my_optarg )	423:5:11196:11244	959491	0	True				
ANR	959672	AssignmentExpression	Opt . jvmlocation = get_short_path_name ( my_optarg )		959491	0		=			
ANR	959673	MemberAccess	Opt . jvmlocation		959491	0					
ANR	959674	Identifier	Opt		959491	0					
ANR	959675	Identifier	jvmlocation		959491	1					
ANR	959676	CallExpression	get_short_path_name ( my_optarg )		959491	1					
ANR	959677	Callee	get_short_path_name		959491	0					
ANR	959678	Identifier	get_short_path_name		959491	0					
ANR	959679	ArgumentList	my_optarg		959491	1					
ANR	959680	Argument	my_optarg		959491	0					
ANR	959681	Identifier	my_optarg		959491	0					
ANR	959682	BreakStatement	break ;	425:3:11255:11260	959491	17	True				
ANR	959683	Label	case 'l' :	427:3:11266:11274	959491	18	True				
ANR	959684	IfStatement	if ( ! isempty ( my_optarg ) )		959491	19					
ANR	959685	Condition	! isempty ( my_optarg )	428:8:11284:11302	959491	0	True				
ANR	959686	UnaryOperationExpression	! isempty ( my_optarg )		959491	0					
ANR	959687	UnaryOperator	!		959491	0					
ANR	959688	CallExpression	isempty ( my_optarg )		959491	1					
ANR	959689	Callee	isempty		959491	0					
ANR	959690	Identifier	isempty		959491	0					
ANR	959691	ArgumentList	my_optarg		959491	1					
ANR	959692	Argument	my_optarg		959491	0					
ANR	959693	Identifier	my_optarg		959491	0					
ANR	959694	CompoundStatement		47:29:864:864	959491	1					
ANR	959695	ExpressionStatement	Opt . perllocation = get_short_path_name ( my_optarg )	429:5:11312:11361	959491	0	True				
ANR	959696	AssignmentExpression	Opt . perllocation = get_short_path_name ( my_optarg )		959491	0		=			
ANR	959697	MemberAccess	Opt . perllocation		959491	0					
ANR	959698	Identifier	Opt		959491	0					
ANR	959699	Identifier	perllocation		959491	1					
ANR	959700	CallExpression	get_short_path_name ( my_optarg )		959491	1					
ANR	959701	Callee	get_short_path_name		959491	0					
ANR	959702	Identifier	get_short_path_name		959491	0					
ANR	959703	ArgumentList	my_optarg		959491	1					
ANR	959704	Argument	my_optarg		959491	0					
ANR	959705	Identifier	my_optarg		959491	0					
ANR	959706	BreakStatement	break ;	431:3:11372:11377	959491	20	True				
ANR	959707	Label	case 'n' :	433:3:11383:11391	959491	21	True				
ANR	959708	IfStatement	if ( my_optarg && ( my_optarg [ 0 ] == 'N' || my_optarg [ 0 ] == 'n' ) )		959491	22					
ANR	959709	Condition	my_optarg && ( my_optarg [ 0 ] == 'N' || my_optarg [ 0 ] == 'n' )	434:9:11403:11459	959491	0	True				
ANR	959710	AndExpression	my_optarg && ( my_optarg [ 0 ] == 'N' || my_optarg [ 0 ] == 'n' )		959491	0		&&			
ANR	959711	Identifier	my_optarg		959491	0					
ANR	959712	OrExpression	my_optarg [ 0 ] == 'N' || my_optarg [ 0 ] == 'n'		959491	1		||			
ANR	959713	EqualityExpression	my_optarg [ 0 ] == 'N'		959491	0		==			
ANR	959714	ArrayIndexing	my_optarg [ 0 ]		959491	0					
ANR	959715	Identifier	my_optarg		959491	0					
ANR	959716	PrimaryExpression	0		959491	1					
ANR	959717	PrimaryExpression	'N'		959491	1					
ANR	959718	EqualityExpression	my_optarg [ 0 ] == 'n'		959491	1		==			
ANR	959719	ArrayIndexing	my_optarg [ 0 ]		959491	0					
ANR	959720	Identifier	my_optarg		959491	0					
ANR	959721	PrimaryExpression	0		959491	1					
ANR	959722	PrimaryExpression	'n'		959491	1					
ANR	959723	CompoundStatement		53:69:1022:1022	959491	1					
ANR	959724	ExpressionStatement	Opt . newpool = 'N'	435:5:11470:11487	959491	0	True				
ANR	959725	AssignmentExpression	Opt . newpool = 'N'		959491	0		=			
ANR	959726	MemberAccess	Opt . newpool		959491	0					
ANR	959727	Identifier	Opt		959491	0					
ANR	959728	Identifier	newpool		959491	1					
ANR	959729	PrimaryExpression	'N'		959491	1					
ANR	959730	ElseStatement	else		959491	0					
ANR	959731	CompoundStatement		55:11:1059:1059	959491	0					
ANR	959732	ExpressionStatement	Opt . newpool = 'Y'	437:5:11507:11524	959491	0	True				
ANR	959733	AssignmentExpression	Opt . newpool = 'Y'		959491	0		=			
ANR	959734	MemberAccess	Opt . newpool		959491	0					
ANR	959735	Identifier	Opt		959491	0					
ANR	959736	Identifier	newpool		959491	1					
ANR	959737	PrimaryExpression	'Y'		959491	1					
ANR	959738	BreakStatement	break ;	439:3:11535:11540	959491	23	True				
ANR	959739	Label	case 'd' :	441:3:11549:11557	959491	24	True				
ANR	959740	IfStatement	if ( ! isempty ( my_optarg ) )		959491	25					
ANR	959741	Condition	! isempty ( my_optarg )	442:8:11567:11585	959491	0	True				
ANR	959742	UnaryOperationExpression	! isempty ( my_optarg )		959491	0					
ANR	959743	UnaryOperator	!		959491	0					
ANR	959744	CallExpression	isempty ( my_optarg )		959491	1					
ANR	959745	Callee	isempty		959491	0					
ANR	959746	Identifier	isempty		959491	0					
ANR	959747	ArgumentList	my_optarg		959491	1					
ANR	959748	Argument	my_optarg		959491	0					
ANR	959749	Identifier	my_optarg		959491	0					
ANR	959750	CompoundStatement		61:29:1147:1147	959491	1					
ANR	959751	ExpressionStatement	Opt . release_dir = get_short_path_name ( my_optarg )	443:5:11595:11643	959491	0	True				
ANR	959752	AssignmentExpression	Opt . release_dir = get_short_path_name ( my_optarg )		959491	0		=			
ANR	959753	MemberAccess	Opt . release_dir		959491	0					
ANR	959754	Identifier	Opt		959491	0					
ANR	959755	Identifier	release_dir		959491	1					
ANR	959756	CallExpression	get_short_path_name ( my_optarg )		959491	1					
ANR	959757	Callee	get_short_path_name		959491	0					
ANR	959758	Identifier	get_short_path_name		959491	0					
ANR	959759	ArgumentList	my_optarg		959491	1					
ANR	959760	Argument	my_optarg		959491	0					
ANR	959761	Identifier	my_optarg		959491	0					
ANR	959762	BreakStatement	break ;	445:3:11654:11659	959491	26	True				
ANR	959763	Label	case 'p' :	447:3:11665:11673	959491	27	True				
ANR	959764	IfStatement	if ( ! isempty ( my_optarg ) )		959491	28					
ANR	959765	Condition	! isempty ( my_optarg )	448:8:11683:11701	959491	0	True				
ANR	959766	UnaryOperationExpression	! isempty ( my_optarg )		959491	0					
ANR	959767	UnaryOperator	!		959491	0					
ANR	959768	CallExpression	isempty ( my_optarg )		959491	1					
ANR	959769	Callee	isempty		959491	0					
ANR	959770	Identifier	isempty		959491	0					
ANR	959771	ArgumentList	my_optarg		959491	1					
ANR	959772	Argument	my_optarg		959491	0					
ANR	959773	Identifier	my_optarg		959491	0					
ANR	959774	CompoundStatement		67:29:1263:1263	959491	1					
ANR	959775	ExpressionStatement	Opt . poolname = strdup ( my_optarg )	449:5:11711:11743	959491	0	True				
ANR	959776	AssignmentExpression	Opt . poolname = strdup ( my_optarg )		959491	0		=			
ANR	959777	MemberAccess	Opt . poolname		959491	0					
ANR	959778	Identifier	Opt		959491	0					
ANR	959779	Identifier	poolname		959491	1					
ANR	959780	CallExpression	strdup ( my_optarg )		959491	1					
ANR	959781	Callee	strdup		959491	0					
ANR	959782	Identifier	strdup		959491	0					
ANR	959783	ArgumentList	my_optarg		959491	1					
ANR	959784	Argument	my_optarg		959491	0					
ANR	959785	Identifier	my_optarg		959491	0					
ANR	959786	BreakStatement	break ;	451:3:11754:11759	959491	29	True				
ANR	959787	Label	case 'o' :	453:3:11765:11773	959491	30	True				
ANR	959788	IfStatement	if ( ! isempty ( my_optarg ) )		959491	31					
ANR	959789	Condition	! isempty ( my_optarg )	454:8:11783:11801	959491	0	True				
ANR	959790	UnaryOperationExpression	! isempty ( my_optarg )		959491	0					
ANR	959791	UnaryOperator	!		959491	0					
ANR	959792	CallExpression	isempty ( my_optarg )		959491	1					
ANR	959793	Callee	isempty		959491	0					
ANR	959794	Identifier	isempty		959491	0					
ANR	959795	ArgumentList	my_optarg		959491	1					
ANR	959796	Argument	my_optarg		959491	0					
ANR	959797	Identifier	my_optarg		959491	0					
ANR	959798	CompoundStatement		73:29:1363:1363	959491	1					
ANR	959799	ExpressionStatement	Opt . poolhostname = strdup ( my_optarg )	455:5:11811:11847	959491	0	True				
ANR	959800	AssignmentExpression	Opt . poolhostname = strdup ( my_optarg )		959491	0		=			
ANR	959801	MemberAccess	Opt . poolhostname		959491	0					
ANR	959802	Identifier	Opt		959491	0					
ANR	959803	Identifier	poolhostname		959491	1					
ANR	959804	CallExpression	strdup ( my_optarg )		959491	1					
ANR	959805	Callee	strdup		959491	0					
ANR	959806	Identifier	strdup		959491	0					
ANR	959807	ArgumentList	my_optarg		959491	1					
ANR	959808	Argument	my_optarg		959491	0					
ANR	959809	Identifier	my_optarg		959491	0					
ANR	959810	BreakStatement	break ;	457:3:11858:11863	959491	32	True				
ANR	959811	Label	case 'r' :	459:3:11872:11880	959491	33	True				
ANR	959812	ExpressionStatement	Opt . runjobs = toupper ( my_optarg [ 0 ] )	460:4:11886:11921	959491	34	True				
ANR	959813	AssignmentExpression	Opt . runjobs = toupper ( my_optarg [ 0 ] )		959491	0		=			
ANR	959814	MemberAccess	Opt . runjobs		959491	0					
ANR	959815	Identifier	Opt		959491	0					
ANR	959816	Identifier	runjobs		959491	1					
ANR	959817	CallExpression	toupper ( my_optarg [ 0 ] )		959491	1					
ANR	959818	Callee	toupper		959491	0					
ANR	959819	Identifier	toupper		959491	0					
ANR	959820	ArgumentList	my_optarg [ 0 ]		959491	1					
ANR	959821	Argument	my_optarg [ 0 ]		959491	0					
ANR	959822	ArrayIndexing	my_optarg [ 0 ]		959491	0					
ANR	959823	Identifier	my_optarg		959491	0					
ANR	959824	PrimaryExpression	0		959491	1					
ANR	959825	BreakStatement	break ;	461:3:11926:11931	959491	35	True				
ANR	959826	Label	case 's' :	463:3:11940:11948	959491	36	True				
ANR	959827	IfStatement	if ( my_optarg && ( my_optarg [ 0 ] == 'N' || my_optarg [ 0 ] == 'n' ) )		959491	37					
ANR	959828	Condition	my_optarg && ( my_optarg [ 0 ] == 'N' || my_optarg [ 0 ] == 'n' )	464:9:11959:12015	959491	0	True				
ANR	959829	AndExpression	my_optarg && ( my_optarg [ 0 ] == 'N' || my_optarg [ 0 ] == 'n' )		959491	0		&&			
ANR	959830	Identifier	my_optarg		959491	0					
ANR	959831	OrExpression	my_optarg [ 0 ] == 'N' || my_optarg [ 0 ] == 'n'		959491	1		||			
ANR	959832	EqualityExpression	my_optarg [ 0 ] == 'N'		959491	0		==			
ANR	959833	ArrayIndexing	my_optarg [ 0 ]		959491	0					
ANR	959834	Identifier	my_optarg		959491	0					
ANR	959835	PrimaryExpression	0		959491	1					
ANR	959836	PrimaryExpression	'N'		959491	1					
ANR	959837	EqualityExpression	my_optarg [ 0 ] == 'n'		959491	1		==			
ANR	959838	ArrayIndexing	my_optarg [ 0 ]		959491	0					
ANR	959839	Identifier	my_optarg		959491	0					
ANR	959840	PrimaryExpression	0		959491	1					
ANR	959841	PrimaryExpression	'n'		959491	1					
ANR	959842	CompoundStatement		83:69:1578:1578	959491	1					
ANR	959843	ExpressionStatement	Opt . submitjobs = 'N'	465:5:12026:12046	959491	0	True				
ANR	959844	AssignmentExpression	Opt . submitjobs = 'N'		959491	0		=			
ANR	959845	MemberAccess	Opt . submitjobs		959491	0					
ANR	959846	Identifier	Opt		959491	0					
ANR	959847	Identifier	submitjobs		959491	1					
ANR	959848	PrimaryExpression	'N'		959491	1					
ANR	959849	ElseStatement	else		959491	0					
ANR	959850	CompoundStatement		85:11:1618:1618	959491	0					
ANR	959851	ExpressionStatement	Opt . submitjobs = 'Y'	467:5:12066:12086	959491	0	True				
ANR	959852	AssignmentExpression	Opt . submitjobs = 'Y'		959491	0		=			
ANR	959853	MemberAccess	Opt . submitjobs		959491	0					
ANR	959854	Identifier	Opt		959491	0					
ANR	959855	Identifier	submitjobs		959491	1					
ANR	959856	PrimaryExpression	'Y'		959491	1					
ANR	959857	BreakStatement	break ;	469:3:12097:12102	959491	38	True				
ANR	959858	Label	case 'v' :	471:3:12111:12119	959491	39	True				
ANR	959859	IfStatement	if ( my_optarg && ( my_optarg [ 0 ] == 'N' || my_optarg [ 0 ] == 'n' ) )		959491	40					
ANR	959860	Condition	my_optarg && ( my_optarg [ 0 ] == 'N' || my_optarg [ 0 ] == 'n' )	472:9:12130:12186	959491	0	True				
ANR	959861	AndExpression	my_optarg && ( my_optarg [ 0 ] == 'N' || my_optarg [ 0 ] == 'n' )		959491	0		&&			
ANR	959862	Identifier	my_optarg		959491	0					
ANR	959863	OrExpression	my_optarg [ 0 ] == 'N' || my_optarg [ 0 ] == 'n'		959491	1		||			
ANR	959864	EqualityExpression	my_optarg [ 0 ] == 'N'		959491	0		==			
ANR	959865	ArrayIndexing	my_optarg [ 0 ]		959491	0					
ANR	959866	Identifier	my_optarg		959491	0					
ANR	959867	PrimaryExpression	0		959491	1					
ANR	959868	PrimaryExpression	'N'		959491	1					
ANR	959869	EqualityExpression	my_optarg [ 0 ] == 'n'		959491	1		==			
ANR	959870	ArrayIndexing	my_optarg [ 0 ]		959491	0					
ANR	959871	Identifier	my_optarg		959491	0					
ANR	959872	PrimaryExpression	0		959491	1					
ANR	959873	PrimaryExpression	'n'		959491	1					
ANR	959874	CompoundStatement		91:69:1749:1749	959491	1					
ANR	959875	ExpressionStatement	Opt . vacatejobs = 'N'	473:5:12197:12217	959491	0	True				
ANR	959876	AssignmentExpression	Opt . vacatejobs = 'N'		959491	0		=			
ANR	959877	MemberAccess	Opt . vacatejobs		959491	0					
ANR	959878	Identifier	Opt		959491	0					
ANR	959879	Identifier	vacatejobs		959491	1					
ANR	959880	PrimaryExpression	'N'		959491	1					
ANR	959881	ElseStatement	else		959491	0					
ANR	959882	CompoundStatement		93:11:1789:1789	959491	0					
ANR	959883	ExpressionStatement	Opt . vacatejobs = 'Y'	475:5:12237:12257	959491	0	True				
ANR	959884	AssignmentExpression	Opt . vacatejobs = 'Y'		959491	0		=			
ANR	959885	MemberAccess	Opt . vacatejobs		959491	0					
ANR	959886	Identifier	Opt		959491	0					
ANR	959887	Identifier	vacatejobs		959491	1					
ANR	959888	PrimaryExpression	'Y'		959491	1					
ANR	959889	BreakStatement	break ;	477:3:12268:12273	959491	41	True				
ANR	959890	Label	case 'm' :	479:3:12279:12287	959491	42	True				
ANR	959891	IfStatement	if ( ! isempty ( my_optarg ) )		959491	43					
ANR	959892	Condition	! isempty ( my_optarg )	480:8:12297:12315	959491	0	True				
ANR	959893	UnaryOperationExpression	! isempty ( my_optarg )		959491	0					
ANR	959894	UnaryOperator	!		959491	0					
ANR	959895	CallExpression	isempty ( my_optarg )		959491	1					
ANR	959896	Callee	isempty		959491	0					
ANR	959897	Identifier	isempty		959491	0					
ANR	959898	ArgumentList	my_optarg		959491	1					
ANR	959899	Argument	my_optarg		959491	0					
ANR	959900	Identifier	my_optarg		959491	0					
ANR	959901	CompoundStatement		99:29:1877:1877	959491	1					
ANR	959902	ExpressionStatement	Opt . smtpserver = strdup ( my_optarg )	481:5:12325:12359	959491	0	True				
ANR	959903	AssignmentExpression	Opt . smtpserver = strdup ( my_optarg )		959491	0		=			
ANR	959904	MemberAccess	Opt . smtpserver		959491	0					
ANR	959905	Identifier	Opt		959491	0					
ANR	959906	Identifier	smtpserver		959491	1					
ANR	959907	CallExpression	strdup ( my_optarg )		959491	1					
ANR	959908	Callee	strdup		959491	0					
ANR	959909	Identifier	strdup		959491	0					
ANR	959910	ArgumentList	my_optarg		959491	1					
ANR	959911	Argument	my_optarg		959491	0					
ANR	959912	Identifier	my_optarg		959491	0					
ANR	959913	BreakStatement	break ;	483:3:12370:12375	959491	44	True				
ANR	959914	Label	case 'u' :	485:3:12381:12389	959491	45	True				
ANR	959915	IfStatement	if ( my_optarg && ( my_optarg [ 0 ] == 'N' || my_optarg [ 0 ] == 'n' ) )		959491	46					
ANR	959916	Condition	my_optarg && ( my_optarg [ 0 ] == 'N' || my_optarg [ 0 ] == 'n' )	486:9:12400:12456	959491	0	True				
ANR	959917	AndExpression	my_optarg && ( my_optarg [ 0 ] == 'N' || my_optarg [ 0 ] == 'n' )		959491	0		&&			
ANR	959918	Identifier	my_optarg		959491	0					
ANR	959919	OrExpression	my_optarg [ 0 ] == 'N' || my_optarg [ 0 ] == 'n'		959491	1		||			
ANR	959920	EqualityExpression	my_optarg [ 0 ] == 'N'		959491	0		==			
ANR	959921	ArrayIndexing	my_optarg [ 0 ]		959491	0					
ANR	959922	Identifier	my_optarg		959491	0					
ANR	959923	PrimaryExpression	0		959491	1					
ANR	959924	PrimaryExpression	'N'		959491	1					
ANR	959925	EqualityExpression	my_optarg [ 0 ] == 'n'		959491	1		==			
ANR	959926	ArrayIndexing	my_optarg [ 0 ]		959491	0					
ANR	959927	Identifier	my_optarg		959491	0					
ANR	959928	PrimaryExpression	0		959491	1					
ANR	959929	PrimaryExpression	'n'		959491	1					
ANR	959930	CompoundStatement		105:69:2019:2019	959491	1					
ANR	959931	ExpressionStatement	Opt . enablevmuniverse = 'N'	487:5:12467:12493	959491	0	True				
ANR	959932	AssignmentExpression	Opt . enablevmuniverse = 'N'		959491	0		=			
ANR	959933	MemberAccess	Opt . enablevmuniverse		959491	0					
ANR	959934	Identifier	Opt		959491	0					
ANR	959935	Identifier	enablevmuniverse		959491	1					
ANR	959936	PrimaryExpression	'N'		959491	1					
ANR	959937	ElseStatement	else		959491	0					
ANR	959938	CompoundStatement		107:11:2065:2065	959491	0					
ANR	959939	ExpressionStatement	Opt . enablevmuniverse = 'Y'	489:5:12513:12539	959491	0	True				
ANR	959940	AssignmentExpression	Opt . enablevmuniverse = 'Y'		959491	0		=			
ANR	959941	MemberAccess	Opt . enablevmuniverse		959491	0					
ANR	959942	Identifier	Opt		959491	0					
ANR	959943	Identifier	enablevmuniverse		959491	1					
ANR	959944	PrimaryExpression	'Y'		959491	1					
ANR	959945	BreakStatement	break ;	491:3:12550:12555	959491	47	True				
ANR	959946	Label	case 'w' :	493:3:12564:12572	959491	48	True				
ANR	959947	IfStatement	if ( ! isempty ( my_optarg ) )		959491	49					
ANR	959948	Condition	! isempty ( my_optarg )	494:8:12582:12600	959491	0	True				
ANR	959949	UnaryOperationExpression	! isempty ( my_optarg )		959491	0					
ANR	959950	UnaryOperator	!		959491	0					
ANR	959951	CallExpression	isempty ( my_optarg )		959491	1					
ANR	959952	Callee	isempty		959491	0					
ANR	959953	Identifier	isempty		959491	0					
ANR	959954	ArgumentList	my_optarg		959491	1					
ANR	959955	Argument	my_optarg		959491	0					
ANR	959956	Identifier	my_optarg		959491	0					
ANR	959957	CompoundStatement		113:29:2162:2162	959491	1					
ANR	959958	ExpressionStatement	Opt . vmmaxnumber = strdup ( my_optarg )	495:5:12610:12645	959491	0	True				
ANR	959959	AssignmentExpression	Opt . vmmaxnumber = strdup ( my_optarg )		959491	0		=			
ANR	959960	MemberAccess	Opt . vmmaxnumber		959491	0					
ANR	959961	Identifier	Opt		959491	0					
ANR	959962	Identifier	vmmaxnumber		959491	1					
ANR	959963	CallExpression	strdup ( my_optarg )		959491	1					
ANR	959964	Callee	strdup		959491	0					
ANR	959965	Identifier	strdup		959491	0					
ANR	959966	ArgumentList	my_optarg		959491	1					
ANR	959967	Argument	my_optarg		959491	0					
ANR	959968	Identifier	my_optarg		959491	0					
ANR	959969	BreakStatement	break ;	497:3:12656:12661	959491	50	True				
ANR	959970	Label	case 'x' :	499:3:12667:12675	959491	51	True				
ANR	959971	IfStatement	if ( ! isempty ( my_optarg ) )		959491	52					
ANR	959972	Condition	! isempty ( my_optarg )	500:8:12685:12703	959491	0	True				
ANR	959973	UnaryOperationExpression	! isempty ( my_optarg )		959491	0					
ANR	959974	UnaryOperator	!		959491	0					
ANR	959975	CallExpression	isempty ( my_optarg )		959491	1					
ANR	959976	Callee	isempty		959491	0					
ANR	959977	Identifier	isempty		959491	0					
ANR	959978	ArgumentList	my_optarg		959491	1					
ANR	959979	Argument	my_optarg		959491	0					
ANR	959980	Identifier	my_optarg		959491	0					
ANR	959981	CompoundStatement		119:29:2265:2265	959491	1					
ANR	959982	ExpressionStatement	Opt . vmversion = strdup ( my_optarg )	501:5:12713:12746	959491	0	True				
ANR	959983	AssignmentExpression	Opt . vmversion = strdup ( my_optarg )		959491	0		=			
ANR	959984	MemberAccess	Opt . vmversion		959491	0					
ANR	959985	Identifier	Opt		959491	0					
ANR	959986	Identifier	vmversion		959491	1					
ANR	959987	CallExpression	strdup ( my_optarg )		959491	1					
ANR	959988	Callee	strdup		959491	0					
ANR	959989	Identifier	strdup		959491	0					
ANR	959990	ArgumentList	my_optarg		959491	1					
ANR	959991	Argument	my_optarg		959491	0					
ANR	959992	Identifier	my_optarg		959491	0					
ANR	959993	BreakStatement	break ;	503:3:12757:12762	959491	53	True				
ANR	959994	Label	case 'y' :	505:3:12768:12776	959491	54	True				
ANR	959995	IfStatement	if ( ! isempty ( my_optarg ) )		959491	55					
ANR	959996	Condition	! isempty ( my_optarg )	506:8:12786:12804	959491	0	True				
ANR	959997	UnaryOperationExpression	! isempty ( my_optarg )		959491	0					
ANR	959998	UnaryOperator	!		959491	0					
ANR	959999	CallExpression	isempty ( my_optarg )		959491	1					
ANR	960000	Callee	isempty		959491	0					
ANR	960001	Identifier	isempty		959491	0					
ANR	960002	ArgumentList	my_optarg		959491	1					
ANR	960003	Argument	my_optarg		959491	0					
ANR	960004	Identifier	my_optarg		959491	0					
ANR	960005	CompoundStatement		125:29:2366:2366	959491	1					
ANR	960006	ExpressionStatement	Opt . vmmemory = strdup ( my_optarg )	507:5:12814:12846	959491	0	True				
ANR	960007	AssignmentExpression	Opt . vmmemory = strdup ( my_optarg )		959491	0		=			
ANR	960008	MemberAccess	Opt . vmmemory		959491	0					
ANR	960009	Identifier	Opt		959491	0					
ANR	960010	Identifier	vmmemory		959491	1					
ANR	960011	CallExpression	strdup ( my_optarg )		959491	1					
ANR	960012	Callee	strdup		959491	0					
ANR	960013	Identifier	strdup		959491	0					
ANR	960014	ArgumentList	my_optarg		959491	1					
ANR	960015	Argument	my_optarg		959491	0					
ANR	960016	Identifier	my_optarg		959491	0					
ANR	960017	BreakStatement	break ;	509:3:12857:12862	959491	56	True				
ANR	960018	Label	case 'z' :	511:3:12868:12876	959491	57	True				
ANR	960019	IfStatement	if ( my_optarg )		959491	58					
ANR	960020	Condition	my_optarg	512:9:12887:12895	959491	0	True				
ANR	960021	Identifier	my_optarg		959491	0					
ANR	960022	CompoundStatement		131:21:2458:2458	959491	1					
ANR	960023	ExpressionStatement	Opt . vmnetworking = toupper ( my_optarg [ 0 ] )	513:5:12906:12946	959491	0	True				
ANR	960024	AssignmentExpression	Opt . vmnetworking = toupper ( my_optarg [ 0 ] )		959491	0		=			
ANR	960025	MemberAccess	Opt . vmnetworking		959491	0					
ANR	960026	Identifier	Opt		959491	0					
ANR	960027	Identifier	vmnetworking		959491	1					
ANR	960028	CallExpression	toupper ( my_optarg [ 0 ] )		959491	1					
ANR	960029	Callee	toupper		959491	0					
ANR	960030	Identifier	toupper		959491	0					
ANR	960031	ArgumentList	my_optarg [ 0 ]		959491	1					
ANR	960032	Argument	my_optarg [ 0 ]		959491	0					
ANR	960033	ArrayIndexing	my_optarg [ 0 ]		959491	0					
ANR	960034	Identifier	my_optarg		959491	0					
ANR	960035	PrimaryExpression	0		959491	1					
ANR	960036	BreakStatement	break ;	515:3:12957:12962	959491	59	True				
ANR	960037	Label	case 'q' :	517:3:12968:12976	959491	60	True				
ANR	960038	IfStatement	if ( my_optarg )		959491	61					
ANR	960039	Condition	my_optarg	518:9:12987:12995	959491	0	True				
ANR	960040	Identifier	my_optarg		959491	0					
ANR	960041	CompoundStatement		137:21:2558:2558	959491	1					
ANR	960042	ExpressionStatement	Opt . hadoop = toupper ( my_optarg [ 0 ] )	519:5:13006:13040	959491	0	True				
ANR	960043	AssignmentExpression	Opt . hadoop = toupper ( my_optarg [ 0 ] )		959491	0		=			
ANR	960044	MemberAccess	Opt . hadoop		959491	0					
ANR	960045	Identifier	Opt		959491	0					
ANR	960046	Identifier	hadoop		959491	1					
ANR	960047	CallExpression	toupper ( my_optarg [ 0 ] )		959491	1					
ANR	960048	Callee	toupper		959491	0					
ANR	960049	Identifier	toupper		959491	0					
ANR	960050	ArgumentList	my_optarg [ 0 ]		959491	1					
ANR	960051	Argument	my_optarg [ 0 ]		959491	0					
ANR	960052	ArrayIndexing	my_optarg [ 0 ]		959491	0					
ANR	960053	Identifier	my_optarg		959491	0					
ANR	960054	PrimaryExpression	0		959491	1					
ANR	960055	BreakStatement	break ;	521:4:13052:13057	959491	62	True				
ANR	960056	Label	case 'f' :	523:3:13063:13071	959491	63	True				
ANR	960057	IfStatement	if ( ! isempty ( my_optarg ) )		959491	64					
ANR	960058	Condition	! isempty ( my_optarg )	524:8:13081:13099	959491	0	True				
ANR	960059	UnaryOperationExpression	! isempty ( my_optarg )		959491	0					
ANR	960060	UnaryOperator	!		959491	0					
ANR	960061	CallExpression	isempty ( my_optarg )		959491	1					
ANR	960062	Callee	isempty		959491	0					
ANR	960063	Identifier	isempty		959491	0					
ANR	960064	ArgumentList	my_optarg		959491	1					
ANR	960065	Argument	my_optarg		959491	0					
ANR	960066	Identifier	my_optarg		959491	0					
ANR	960067	CompoundStatement		143:30:2662:2662	959491	1					
ANR	960068	ExpressionStatement	Opt . namenode = strdup ( my_optarg )	525:5:13110:13142	959491	0	True				
ANR	960069	AssignmentExpression	Opt . namenode = strdup ( my_optarg )		959491	0		=			
ANR	960070	MemberAccess	Opt . namenode		959491	0					
ANR	960071	Identifier	Opt		959491	0					
ANR	960072	Identifier	namenode		959491	1					
ANR	960073	CallExpression	strdup ( my_optarg )		959491	1					
ANR	960074	Callee	strdup		959491	0					
ANR	960075	Identifier	strdup		959491	0					
ANR	960076	ArgumentList	my_optarg		959491	1					
ANR	960077	Argument	my_optarg		959491	0					
ANR	960078	Identifier	my_optarg		959491	0					
ANR	960079	BreakStatement	break ;	527:4:13154:13159	959491	65	True				
ANR	960080	Label	case 'k' :	529:3:13165:13173	959491	66	True				
ANR	960081	IfStatement	if ( ! isempty ( my_optarg ) )		959491	67					
ANR	960082	Condition	! isempty ( my_optarg )	530:8:13183:13201	959491	0	True				
ANR	960083	UnaryOperationExpression	! isempty ( my_optarg )		959491	0					
ANR	960084	UnaryOperator	!		959491	0					
ANR	960085	CallExpression	isempty ( my_optarg )		959491	1					
ANR	960086	Callee	isempty		959491	0					
ANR	960087	Identifier	isempty		959491	0					
ANR	960088	ArgumentList	my_optarg		959491	1					
ANR	960089	Argument	my_optarg		959491	0					
ANR	960090	Identifier	my_optarg		959491	0					
ANR	960091	CompoundStatement		149:30:2764:2764	959491	1					
ANR	960092	ExpressionStatement	Opt . namedata = strdup ( my_optarg )	531:5:13212:13244	959491	0	True				
ANR	960093	AssignmentExpression	Opt . namedata = strdup ( my_optarg )		959491	0		=			
ANR	960094	MemberAccess	Opt . namedata		959491	0					
ANR	960095	Identifier	Opt		959491	0					
ANR	960096	Identifier	namedata		959491	1					
ANR	960097	CallExpression	strdup ( my_optarg )		959491	1					
ANR	960098	Callee	strdup		959491	0					
ANR	960099	Identifier	strdup		959491	0					
ANR	960100	ArgumentList	my_optarg		959491	1					
ANR	960101	Argument	my_optarg		959491	0					
ANR	960102	Identifier	my_optarg		959491	0					
ANR	960103	BreakStatement	break ;	533:4:13256:13261	959491	68	True				
ANR	960104	Label	case 'g' :	535:3:13267:13275	959491	69	True				
ANR	960105	IfStatement	if ( ! isempty ( my_optarg ) )		959491	70					
ANR	960106	Condition	! isempty ( my_optarg )	536:8:13285:13303	959491	0	True				
ANR	960107	UnaryOperationExpression	! isempty ( my_optarg )		959491	0					
ANR	960108	UnaryOperator	!		959491	0					
ANR	960109	CallExpression	isempty ( my_optarg )		959491	1					
ANR	960110	Callee	isempty		959491	0					
ANR	960111	Identifier	isempty		959491	0					
ANR	960112	ArgumentList	my_optarg		959491	1					
ANR	960113	Argument	my_optarg		959491	0					
ANR	960114	Identifier	my_optarg		959491	0					
ANR	960115	CompoundStatement		155:30:2866:2866	959491	1					
ANR	960116	ExpressionStatement	Opt . nameport = strdup ( my_optarg )	537:5:13314:13346	959491	0	True				
ANR	960117	AssignmentExpression	Opt . nameport = strdup ( my_optarg )		959491	0		=			
ANR	960118	MemberAccess	Opt . nameport		959491	0					
ANR	960119	Identifier	Opt		959491	0					
ANR	960120	Identifier	nameport		959491	1					
ANR	960121	CallExpression	strdup ( my_optarg )		959491	1					
ANR	960122	Callee	strdup		959491	0					
ANR	960123	Identifier	strdup		959491	0					
ANR	960124	ArgumentList	my_optarg		959491	1					
ANR	960125	Argument	my_optarg		959491	0					
ANR	960126	Identifier	my_optarg		959491	0					
ANR	960127	BreakStatement	break ;	539:4:13358:13363	959491	71	True				
ANR	960128	Label	case 'b' :	541:3:13369:13377	959491	72	True				
ANR	960129	IfStatement	if ( ! isempty ( my_optarg ) )		959491	73					
ANR	960130	Condition	! isempty ( my_optarg )	542:8:13387:13405	959491	0	True				
ANR	960131	UnaryOperationExpression	! isempty ( my_optarg )		959491	0					
ANR	960132	UnaryOperator	!		959491	0					
ANR	960133	CallExpression	isempty ( my_optarg )		959491	1					
ANR	960134	Callee	isempty		959491	0					
ANR	960135	Identifier	isempty		959491	0					
ANR	960136	ArgumentList	my_optarg		959491	1					
ANR	960137	Argument	my_optarg		959491	0					
ANR	960138	Identifier	my_optarg		959491	0					
ANR	960139	CompoundStatement		161:30:2968:2968	959491	1					
ANR	960140	ExpressionStatement	Opt . namewebport = strdup ( my_optarg )	543:5:13416:13451	959491	0	True				
ANR	960141	AssignmentExpression	Opt . namewebport = strdup ( my_optarg )		959491	0		=			
ANR	960142	MemberAccess	Opt . namewebport		959491	0					
ANR	960143	Identifier	Opt		959491	0					
ANR	960144	Identifier	namewebport		959491	1					
ANR	960145	CallExpression	strdup ( my_optarg )		959491	1					
ANR	960146	Callee	strdup		959491	0					
ANR	960147	Identifier	strdup		959491	0					
ANR	960148	ArgumentList	my_optarg		959491	1					
ANR	960149	Argument	my_optarg		959491	0					
ANR	960150	Identifier	my_optarg		959491	0					
ANR	960151	BreakStatement	break ;	545:4:13463:13468	959491	74	True				
ANR	960152	Label	case 'h' :	547:3:13477:13485	959491	75	True				
ANR	960153	Label	default :	548:3:13490:13497	959491	76	True				
ANR	960154	Identifier	default		959491	0					
ANR	960155	ExpressionStatement	Usage ( )	550:4:13549:13556	959491	77	True				
ANR	960156	CallExpression	Usage ( )		959491	0					
ANR	960157	Callee	Usage		959491	0					
ANR	960158	Identifier	Usage		959491	0					
ANR	960159	ArgumentList			959491	1					
ANR	960160	IfStatement	if ( ! ( ( Opt . submitjobs && Opt . runjobs && Opt . newpool ) || ( ! Opt . submitjobs && ! Opt . runjobs && ! Opt . newpool ) ) )		959491	3					
ANR	960161	Condition	! ( ( Opt . submitjobs && Opt . runjobs && Opt . newpool ) || ( ! Opt . submitjobs && ! Opt . runjobs && ! Opt . newpool ) )	569:5:13954:14065	959491	0	True				
ANR	960162	UnaryOperationExpression	! ( ( Opt . submitjobs && Opt . runjobs && Opt . newpool ) || ( ! Opt . submitjobs && ! Opt . runjobs && ! Opt . newpool ) )		959491	0					
ANR	960163	UnaryOperator	!		959491	0					
ANR	960164	OrExpression	( Opt . submitjobs && Opt . runjobs && Opt . newpool ) || ( ! Opt . submitjobs && ! Opt . runjobs && ! Opt . newpool )		959491	1		||			
ANR	960165	AndExpression	Opt . submitjobs && Opt . runjobs && Opt . newpool		959491	0		&&			
ANR	960166	MemberAccess	Opt . submitjobs		959491	0					
ANR	960167	Identifier	Opt		959491	0					
ANR	960168	Identifier	submitjobs		959491	1					
ANR	960169	AndExpression	Opt . runjobs && Opt . newpool		959491	1		&&			
ANR	960170	MemberAccess	Opt . runjobs		959491	0					
ANR	960171	Identifier	Opt		959491	0					
ANR	960172	Identifier	runjobs		959491	1					
ANR	960173	MemberAccess	Opt . newpool		959491	1					
ANR	960174	Identifier	Opt		959491	0					
ANR	960175	Identifier	newpool		959491	1					
ANR	960176	AndExpression	! Opt . submitjobs && ! Opt . runjobs && ! Opt . newpool		959491	1		&&			
ANR	960177	UnaryOperationExpression	! Opt . submitjobs		959491	0					
ANR	960178	UnaryOperator	!		959491	0					
ANR	960179	MemberAccess	Opt . submitjobs		959491	1					
ANR	960180	Identifier	Opt		959491	0					
ANR	960181	Identifier	submitjobs		959491	1					
ANR	960182	AndExpression	! Opt . runjobs && ! Opt . newpool		959491	1		&&			
ANR	960183	UnaryOperationExpression	! Opt . runjobs		959491	0					
ANR	960184	UnaryOperator	!		959491	0					
ANR	960185	MemberAccess	Opt . runjobs		959491	1					
ANR	960186	Identifier	Opt		959491	0					
ANR	960187	Identifier	runjobs		959491	1					
ANR	960188	UnaryOperationExpression	! Opt . newpool		959491	1					
ANR	960189	UnaryOperator	!		959491	0					
ANR	960190	MemberAccess	Opt . newpool		959491	1					
ANR	960191	Identifier	Opt		959491	0					
ANR	960192	Identifier	newpool		959491	1					
ANR	960193	CompoundStatement		189:61:3627:3627	959491	1					
ANR	960194	Statement	fprintf	571:2:14072:14078	959491	0	True				
ANR	960195	Statement	(	571:9:14079:14079	959491	1	True				
ANR	960196	Statement	LogFileHandle	571:10:14080:14092	959491	2	True				
ANR	960197	Statement	","	571:23:14093:14093	959491	3	True				
ANR	960198	Statement	"""%s: --newpool, --runjobs and --submitjobs must be\\n"""	571:25:14095:14147	959491	4	True				
ANR	960199	Statement	"""\\tspecified together\\n"""	572:4:14153:14176	959491	5	True				
ANR	960200	Statement	","	572:28:14177:14177	959491	6	True				
ANR	960201	Statement	argv	572:30:14179:14182	959491	7	True				
ANR	960202	Statement	[	572:34:14183:14183	959491	8	True				
ANR	960203	Statement	0	572:35:14184:14184	959491	9	True				
ANR	960204	Statement	]	572:36:14185:14185	959491	10	True				
ANR	960205	Statement	)	572:37:14186:14186	959491	11	True				
ANR	960206	ExpressionStatement		572:38:14187:14187	959491	12	True				
ANR	960207	ReturnStatement	return false ;	573:2:14191:14203	959491	13	True				
ANR	960208	Identifier	false		959491	0					
ANR	960209	ReturnStatement	return true ;	575:1:14209:14220	959491	4	True				
ANR	960210	Identifier	true		959491	0					
ANR	960211	ReturnType	bool		959491	1					
ANR	960212	Identifier	parse_args		959491	2					
ANR	960213	ParameterList	"int argc , char * * argv"		959491	3					
ANR	960214	Parameter	int argc	382:11:10417:10424	959491	0	True				
ANR	960215	ParameterType	int		959491	0					
ANR	960216	Identifier	argc		959491	1					
ANR	960217	Parameter	char * * argv	382:21:10427:10437	959491	1	True				
ANR	960218	ParameterType	char * *		959491	0					
ANR	960219	Identifier	argv		959491	1					
ANR	960220	CFGEntryNode	ENTRY		959491		True				
ANR	960221	CFGExitNode	EXIT		959491		True				
ANR	960222	Symbol	Opt . namedata		959491						
ANR	960223	Symbol	Opt . poolname		959491						
ANR	960224	Symbol	Opt . namewebport		959491						
ANR	960225	Symbol	Opt . release_dir		959491						
ANR	960226	Symbol	argv		959491						
ANR	960227	Symbol	isempty		959491						
ANR	960228	Symbol	Opt . newpool		959491						
ANR	960229	Symbol	my_getopt_long		959491						
ANR	960230	Symbol	get_short_path_name		959491						
ANR	960231	Symbol	Opt		959491						
ANR	960232	Symbol	Opt . vmnetworking		959491						
ANR	960233	Symbol	long_options		959491						
ANR	960234	Symbol	Opt . hostallowwrite		959491						
ANR	960235	Symbol	Opt . vmmaxnumber		959491						
ANR	960236	Symbol	option_index		959491						
ANR	960237	Symbol	Opt . condoremail		959491						
ANR	960238	Symbol	Opt . vacatejobs		959491						
ANR	960239	Symbol	argc		959491						
ANR	960240	Symbol	& option_index		959491						
ANR	960241	Symbol	Opt . accountingdomain		959491						
ANR	960242	Symbol	toupper		959491						
ANR	960243	Symbol	short_options		959491						
ANR	960244	Symbol	false		959491						
ANR	960245	Symbol	i		959491						
ANR	960246	Symbol	Opt . submitjobs		959491						
ANR	960247	Symbol	Opt . perllocation		959491						
ANR	960248	Symbol	Opt . nameport		959491						
ANR	960249	Symbol	Opt . hostallowadministrator		959491						
ANR	960250	Symbol	Opt . smtpserver		959491						
ANR	960251	Symbol	Opt . hadoop		959491						
ANR	960252	Symbol	Opt . namenode		959491						
ANR	960253	Symbol	Opt . jvmlocation		959491						
ANR	960254	Symbol	Opt . runjobs		959491						
ANR	960255	Symbol	Opt . hostallowread		959491						
ANR	960256	Symbol	true		959491						
ANR	960257	Symbol	Opt . vmmemory		959491						
ANR	960258	Symbol	Opt . vmversion		959491						
ANR	960259	Symbol	strdup		959491						
ANR	960260	Symbol	Opt . enablevmuniverse		959491						
ANR	960261	Symbol	my_optarg		959491						
ANR	960262	Symbol	Opt . poolhostname		959491						
ANR	960263	Symbol	* my_optarg		959491						
ANR	960264	Function	set_option	578:0:14225:17474							
ANR	960265	FunctionDef	"set_option (const char * attribute , const char * val)"		960264	0					
ANR	960266	CompoundStatement		579:51:14281:17474	960264	0					
ANR	960267	IdentifierDeclStatement	char buf [ BUFFERSIZE ] ;	580:1:14284:14304	960264	0	True				
ANR	960268	IdentifierDecl	buf [ BUFFERSIZE ]		960264	0					
ANR	960269	IdentifierDeclType	char [ BUFFERSIZE ]		960264	0					
ANR	960270	Identifier	buf		960264	1					
ANR	960271	Identifier	BUFFERSIZE		960264	2					
ANR	960272	IdentifierDeclStatement	char * config_file_tmp ;	581:1:14307:14328	960264	1	True				
ANR	960273	IdentifierDecl	* config_file_tmp		960264	0					
ANR	960274	IdentifierDeclType	char *		960264	0					
ANR	960275	Identifier	config_file_tmp		960264	1					
ANR	960276	IdentifierDeclStatement	"FILE * cfg , * cfg_out ;"	582:1:14331:14350	960264	2	True				
ANR	960277	IdentifierDecl	* cfg		960264	0					
ANR	960278	IdentifierDeclType	FILE *		960264	0					
ANR	960279	Identifier	cfg		960264	1					
ANR	960280	IdentifierDecl	* cfg_out		960264	1					
ANR	960281	IdentifierDeclType	FILE *		960264	0					
ANR	960282	Identifier	cfg_out		960264	1					
ANR	960283	IdentifierDeclStatement	"bool result , foundit ;"	583:1:14353:14373	960264	3	True				
ANR	960284	IdentifierDecl	result		960264	0					
ANR	960285	IdentifierDeclType	bool		960264	0					
ANR	960286	Identifier	result		960264	1					
ANR	960287	IdentifierDecl	foundit		960264	1					
ANR	960288	IdentifierDeclType	bool		960264	0					
ANR	960289	Identifier	foundit		960264	1					
ANR	960290	ExpressionStatement	result = true	585:1:14377:14397	960264	4	True				
ANR	960291	AssignmentExpression	result = true		960264	0		=			
ANR	960292	Identifier	result		960264	0					
ANR	960293	Identifier	true		960264	1					
ANR	960294	ExpressionStatement	foundit = false	586:1:14400:14421	960264	5	True				
ANR	960295	AssignmentExpression	foundit = false		960264	0		=			
ANR	960296	Identifier	foundit		960264	0					
ANR	960297	Identifier	false		960264	1					
ANR	960298	ExpressionStatement	cfg = cfg_out = NULL	587:1:14424:14444	960264	6	True				
ANR	960299	AssignmentExpression	cfg = cfg_out = NULL		960264	0		=			
ANR	960300	Identifier	cfg		960264	0					
ANR	960301	AssignmentExpression	cfg_out = NULL		960264	1		=			
ANR	960302	Identifier	cfg_out		960264	0					
ANR	960303	Identifier	NULL		960264	1					
ANR	960304	IfStatement	if ( Config_file == NULL && ! setup_config_file ( ) )		960264	7					
ANR	960305	Condition	Config_file == NULL && ! setup_config_file ( )	590:6:14454:14496	960264	0	True				
ANR	960306	AndExpression	Config_file == NULL && ! setup_config_file ( )		960264	0		&&			
ANR	960307	EqualityExpression	Config_file == NULL		960264	0		==			
ANR	960308	Identifier	Config_file		960264	0					
ANR	960309	Identifier	NULL		960264	1					
ANR	960310	UnaryOperationExpression	! setup_config_file ( )		960264	1					
ANR	960311	UnaryOperator	!		960264	0					
ANR	960312	CallExpression	setup_config_file ( )		960264	1					
ANR	960313	Callee	setup_config_file		960264	0					
ANR	960314	Identifier	setup_config_file		960264	0					
ANR	960315	ArgumentList			960264	1					
ANR	960316	CompoundStatement		12:52:218:218	960264	1					
ANR	960317	ExpressionStatement	"fprintf ( LogFileHandle , ""Error opening config file '%s'.\\n\\tErr=%s\\n"" , Config_file , strerror ( errno ) )"	591:2:14504:14607	960264	0	True				
ANR	960318	CallExpression	"fprintf ( LogFileHandle , ""Error opening config file '%s'.\\n\\tErr=%s\\n"" , Config_file , strerror ( errno ) )"		960264	0					
ANR	960319	Callee	fprintf		960264	0					
ANR	960320	Identifier	fprintf		960264	0					
ANR	960321	ArgumentList	LogFileHandle		960264	1					
ANR	960322	Argument	LogFileHandle		960264	0					
ANR	960323	Identifier	LogFileHandle		960264	0					
ANR	960324	Argument	"""Error opening config file '%s'.\\n\\tErr=%s\\n"""		960264	1					
ANR	960325	PrimaryExpression	"""Error opening config file '%s'.\\n\\tErr=%s\\n"""		960264	0					
ANR	960326	Argument	Config_file		960264	2					
ANR	960327	Identifier	Config_file		960264	0					
ANR	960328	Argument	strerror ( errno )		960264	3					
ANR	960329	CallExpression	strerror ( errno )		960264	0					
ANR	960330	Callee	strerror		960264	0					
ANR	960331	Identifier	strerror		960264	0					
ANR	960332	ArgumentList	errno		960264	1					
ANR	960333	Argument	errno		960264	0					
ANR	960334	Identifier	errno		960264	0					
ANR	960335	ExpressionStatement	result = false	593:2:14611:14625	960264	1	True				
ANR	960336	AssignmentExpression	result = false		960264	0		=			
ANR	960337	Identifier	result		960264	0					
ANR	960338	Identifier	false		960264	1					
ANR	960339	ReturnStatement	return result ;	594:2:14629:14642	960264	2	True				
ANR	960340	Identifier	result		960264	0					
ANR	960341	IfStatement	"if ( NULL == ( config_file_tmp = tempnam ( ""."" , Config_file ) ) )"		960264	8					
ANR	960342	Condition	"NULL == ( config_file_tmp = tempnam ( ""."" , Config_file ) )"	597:6:14654:14707	960264	0	True				
ANR	960343	EqualityExpression	"NULL == ( config_file_tmp = tempnam ( ""."" , Config_file ) )"		960264	0		==			
ANR	960344	Identifier	NULL		960264	0					
ANR	960345	AssignmentExpression	"config_file_tmp = tempnam ( ""."" , Config_file )"		960264	1		=			
ANR	960346	Identifier	config_file_tmp		960264	0					
ANR	960347	CallExpression	"tempnam ( ""."" , Config_file )"		960264	1					
ANR	960348	Callee	tempnam		960264	0					
ANR	960349	Identifier	tempnam		960264	0					
ANR	960350	ArgumentList	"""."""		960264	1					
ANR	960351	Argument	"""."""		960264	0					
ANR	960352	PrimaryExpression	"""."""		960264	0					
ANR	960353	Argument	Config_file		960264	1					
ANR	960354	Identifier	Config_file		960264	0					
ANR	960355	CompoundStatement		19:63:429:429	960264	1					
ANR	960356	ExpressionStatement	"fprintf ( LogFileHandle , ""Error creating temporary file '%s'.\\n\\tErr=%s\\n"" , config_file_tmp , strerror ( errno ) )"	598:2:14715:14826	960264	0	True				
ANR	960357	CallExpression	"fprintf ( LogFileHandle , ""Error creating temporary file '%s'.\\n\\tErr=%s\\n"" , config_file_tmp , strerror ( errno ) )"		960264	0					
ANR	960358	Callee	fprintf		960264	0					
ANR	960359	Identifier	fprintf		960264	0					
ANR	960360	ArgumentList	LogFileHandle		960264	1					
ANR	960361	Argument	LogFileHandle		960264	0					
ANR	960362	Identifier	LogFileHandle		960264	0					
ANR	960363	Argument	"""Error creating temporary file '%s'.\\n\\tErr=%s\\n"""		960264	1					
ANR	960364	PrimaryExpression	"""Error creating temporary file '%s'.\\n\\tErr=%s\\n"""		960264	0					
ANR	960365	Argument	config_file_tmp		960264	2					
ANR	960366	Identifier	config_file_tmp		960264	0					
ANR	960367	Argument	strerror ( errno )		960264	3					
ANR	960368	CallExpression	strerror ( errno )		960264	0					
ANR	960369	Callee	strerror		960264	0					
ANR	960370	Identifier	strerror		960264	0					
ANR	960371	ArgumentList	errno		960264	1					
ANR	960372	Argument	errno		960264	0					
ANR	960373	Identifier	errno		960264	0					
ANR	960374	ExpressionStatement	result = false	600:2:14830:14844	960264	1	True				
ANR	960375	AssignmentExpression	result = false		960264	0		=			
ANR	960376	Identifier	result		960264	0					
ANR	960377	Identifier	false		960264	1					
ANR	960378	ReturnStatement	return result ;	601:2:14848:14861	960264	2	True				
ANR	960379	Identifier	result		960264	0					
ANR	960380	ElseStatement	else		960264	0					
ANR	960381	CompoundStatement		24:8:589:589	960264	0					
ANR	960382	ExpressionStatement	"cfg_out = fopen ( config_file_tmp , ""w"" )"	606:1:14942:14979	960264	9	True				
ANR	960383	AssignmentExpression	"cfg_out = fopen ( config_file_tmp , ""w"" )"		960264	0		=			
ANR	960384	Identifier	cfg_out		960264	0					
ANR	960385	CallExpression	"fopen ( config_file_tmp , ""w"" )"		960264	1					
ANR	960386	Callee	fopen		960264	0					
ANR	960387	Identifier	fopen		960264	0					
ANR	960388	ArgumentList	config_file_tmp		960264	1					
ANR	960389	Argument	config_file_tmp		960264	0					
ANR	960390	Identifier	config_file_tmp		960264	0					
ANR	960391	Argument	"""w"""		960264	1					
ANR	960392	PrimaryExpression	"""w"""		960264	0					
ANR	960393	IfStatement	if ( cfg_out == NULL )		960264	10					
ANR	960394	Condition	cfg_out == NULL	607:6:14987:15001	960264	0	True				
ANR	960395	EqualityExpression	cfg_out == NULL		960264	0		==			
ANR	960396	Identifier	cfg_out		960264	0					
ANR	960397	Identifier	NULL		960264	1					
ANR	960398	CompoundStatement		29:24:723:723	960264	1					
ANR	960399	ExpressionStatement	"fprintf ( LogFileHandle , ""Error opening config file '%s'.\\n\\tErr=%s\\n"" , config_file_tmp , strerror ( errno ) )"	608:2:15009:15116	960264	0	True				
ANR	960400	CallExpression	"fprintf ( LogFileHandle , ""Error opening config file '%s'.\\n\\tErr=%s\\n"" , config_file_tmp , strerror ( errno ) )"		960264	0					
ANR	960401	Callee	fprintf		960264	0					
ANR	960402	Identifier	fprintf		960264	0					
ANR	960403	ArgumentList	LogFileHandle		960264	1					
ANR	960404	Argument	LogFileHandle		960264	0					
ANR	960405	Identifier	LogFileHandle		960264	0					
ANR	960406	Argument	"""Error opening config file '%s'.\\n\\tErr=%s\\n"""		960264	1					
ANR	960407	PrimaryExpression	"""Error opening config file '%s'.\\n\\tErr=%s\\n"""		960264	0					
ANR	960408	Argument	config_file_tmp		960264	2					
ANR	960409	Identifier	config_file_tmp		960264	0					
ANR	960410	Argument	strerror ( errno )		960264	3					
ANR	960411	CallExpression	strerror ( errno )		960264	0					
ANR	960412	Callee	strerror		960264	0					
ANR	960413	Identifier	strerror		960264	0					
ANR	960414	ArgumentList	errno		960264	1					
ANR	960415	Argument	errno		960264	0					
ANR	960416	Identifier	errno		960264	0					
ANR	960417	ExpressionStatement	result = false	610:2:15120:15134	960264	1	True				
ANR	960418	AssignmentExpression	result = false		960264	0		=			
ANR	960419	Identifier	result		960264	0					
ANR	960420	Identifier	false		960264	1					
ANR	960421	ReturnStatement	return result ;	611:2:15138:15151	960264	2	True				
ANR	960422	Identifier	result		960264	0					
ANR	960423	ExpressionStatement	"cfg = fopen ( Config_file , ""r"" )"	614:1:15158:15187	960264	11	True				
ANR	960424	AssignmentExpression	"cfg = fopen ( Config_file , ""r"" )"		960264	0		=			
ANR	960425	Identifier	cfg		960264	0					
ANR	960426	CallExpression	"fopen ( Config_file , ""r"" )"		960264	1					
ANR	960427	Callee	fopen		960264	0					
ANR	960428	Identifier	fopen		960264	0					
ANR	960429	ArgumentList	Config_file		960264	1					
ANR	960430	Argument	Config_file		960264	0					
ANR	960431	Identifier	Config_file		960264	0					
ANR	960432	Argument	"""r"""		960264	1					
ANR	960433	PrimaryExpression	"""r"""		960264	0					
ANR	960434	IfStatement	if ( cfg == NULL )		960264	12					
ANR	960435	Condition	cfg == NULL	616:6:15196:15206	960264	0	True				
ANR	960436	EqualityExpression	cfg == NULL		960264	0		==			
ANR	960437	Identifier	cfg		960264	0					
ANR	960438	Identifier	NULL		960264	1					
ANR	960439	CompoundStatement		38:20:928:928	960264	1					
ANR	960440	ExpressionStatement	"fprintf ( LogFileHandle , ""Error opening config file '%s'.\\n\\tErr=%s\\n"" , Config_file , strerror ( errno ) )"	617:2:15214:15317	960264	0	True				
ANR	960441	CallExpression	"fprintf ( LogFileHandle , ""Error opening config file '%s'.\\n\\tErr=%s\\n"" , Config_file , strerror ( errno ) )"		960264	0					
ANR	960442	Callee	fprintf		960264	0					
ANR	960443	Identifier	fprintf		960264	0					
ANR	960444	ArgumentList	LogFileHandle		960264	1					
ANR	960445	Argument	LogFileHandle		960264	0					
ANR	960446	Identifier	LogFileHandle		960264	0					
ANR	960447	Argument	"""Error opening config file '%s'.\\n\\tErr=%s\\n"""		960264	1					
ANR	960448	PrimaryExpression	"""Error opening config file '%s'.\\n\\tErr=%s\\n"""		960264	0					
ANR	960449	Argument	Config_file		960264	2					
ANR	960450	Identifier	Config_file		960264	0					
ANR	960451	Argument	strerror ( errno )		960264	3					
ANR	960452	CallExpression	strerror ( errno )		960264	0					
ANR	960453	Callee	strerror		960264	0					
ANR	960454	Identifier	strerror		960264	0					
ANR	960455	ArgumentList	errno		960264	1					
ANR	960456	Argument	errno		960264	0					
ANR	960457	Identifier	errno		960264	0					
ANR	960458	ExpressionStatement	fclose ( cfg_out )	619:2:15321:15336	960264	1	True				
ANR	960459	CallExpression	fclose ( cfg_out )		960264	0					
ANR	960460	Callee	fclose		960264	0					
ANR	960461	Identifier	fclose		960264	0					
ANR	960462	ArgumentList	cfg_out		960264	1					
ANR	960463	Argument	cfg_out		960264	0					
ANR	960464	Identifier	cfg_out		960264	0					
ANR	960465	ExpressionStatement	result = false	620:2:15340:15354	960264	2	True				
ANR	960466	AssignmentExpression	result = false		960264	0		=			
ANR	960467	Identifier	result		960264	0					
ANR	960468	Identifier	false		960264	1					
ANR	960469	ReturnStatement	return result ;	621:2:15358:15371	960264	3	True				
ANR	960470	Identifier	result		960264	0					
ANR	960471	IfStatement	"if ( 0 != fseek ( cfg , 0 , SEEK_SET ) )"		960264	13					
ANR	960472	Condition	"0 != fseek ( cfg , 0 , SEEK_SET )"	625:6:15420:15447	960264	0	True				
ANR	960473	EqualityExpression	"0 != fseek ( cfg , 0 , SEEK_SET )"		960264	0		!=			
ANR	960474	PrimaryExpression	0		960264	0					
ANR	960475	CallExpression	"fseek ( cfg , 0 , SEEK_SET )"		960264	1					
ANR	960476	Callee	fseek		960264	0					
ANR	960477	Identifier	fseek		960264	0					
ANR	960478	ArgumentList	cfg		960264	1					
ANR	960479	Argument	cfg		960264	0					
ANR	960480	Identifier	cfg		960264	0					
ANR	960481	Argument	0		960264	1					
ANR	960482	PrimaryExpression	0		960264	0					
ANR	960483	Argument	SEEK_SET		960264	2					
ANR	960484	Identifier	SEEK_SET		960264	0					
ANR	960485	CompoundStatement		47:37:1169:1169	960264	1					
ANR	960486	ExpressionStatement	"fprintf ( LogFileHandle , ""Error seeking config file '%s'.\\n\\tErr=%s\\n"" , Config_file , strerror ( errno ) )"	626:2:15455:15558	960264	0	True				
ANR	960487	CallExpression	"fprintf ( LogFileHandle , ""Error seeking config file '%s'.\\n\\tErr=%s\\n"" , Config_file , strerror ( errno ) )"		960264	0					
ANR	960488	Callee	fprintf		960264	0					
ANR	960489	Identifier	fprintf		960264	0					
ANR	960490	ArgumentList	LogFileHandle		960264	1					
ANR	960491	Argument	LogFileHandle		960264	0					
ANR	960492	Identifier	LogFileHandle		960264	0					
ANR	960493	Argument	"""Error seeking config file '%s'.\\n\\tErr=%s\\n"""		960264	1					
ANR	960494	PrimaryExpression	"""Error seeking config file '%s'.\\n\\tErr=%s\\n"""		960264	0					
ANR	960495	Argument	Config_file		960264	2					
ANR	960496	Identifier	Config_file		960264	0					
ANR	960497	Argument	strerror ( errno )		960264	3					
ANR	960498	CallExpression	strerror ( errno )		960264	0					
ANR	960499	Callee	strerror		960264	0					
ANR	960500	Identifier	strerror		960264	0					
ANR	960501	ArgumentList	errno		960264	1					
ANR	960502	Argument	errno		960264	0					
ANR	960503	Identifier	errno		960264	0					
ANR	960504	ExpressionStatement	result = false	628:2:15562:15576	960264	1	True				
ANR	960505	AssignmentExpression	result = false		960264	0		=			
ANR	960506	Identifier	result		960264	0					
ANR	960507	Identifier	false		960264	1					
ANR	960508	ReturnStatement	return result ;	629:2:15580:15593	960264	2	True				
ANR	960509	Identifier	result		960264	0					
ANR	960510	WhileStatement	while ( 1 )		960264	14					
ANR	960511	Condition	1	633:8:15609:15609	960264	0	True				
ANR	960512	PrimaryExpression	1		960264	0					
ANR	960513	CompoundStatement		55:11:1330:1330	960264	1					
ANR	960514	IfStatement	"if ( NULL == fgets ( buf , BUFFERSIZE , cfg ) )"		960264	0					
ANR	960515	Condition	"NULL == fgets ( buf , BUFFERSIZE , cfg )"	634:7:15621:15655	960264	0	True				
ANR	960516	EqualityExpression	"NULL == fgets ( buf , BUFFERSIZE , cfg )"		960264	0		==			
ANR	960517	Identifier	NULL		960264	0					
ANR	960518	CallExpression	"fgets ( buf , BUFFERSIZE , cfg )"		960264	1					
ANR	960519	Callee	fgets		960264	0					
ANR	960520	Identifier	fgets		960264	0					
ANR	960521	ArgumentList	buf		960264	1					
ANR	960522	Argument	buf		960264	0					
ANR	960523	Identifier	buf		960264	0					
ANR	960524	Argument	BUFFERSIZE		960264	1					
ANR	960525	Identifier	BUFFERSIZE		960264	0					
ANR	960526	Argument	cfg		960264	2					
ANR	960527	Identifier	cfg		960264	0					
ANR	960528	CompoundStatement		56:45:1377:1377	960264	1					
ANR	960529	IfStatement	if ( feof ( cfg ) )		960264	0					
ANR	960530	Condition	feof ( cfg )	635:7:15668:15676	960264	0	True				
ANR	960531	CallExpression	feof ( cfg )		960264	0					
ANR	960532	Callee	feof		960264	0					
ANR	960533	Identifier	feof		960264	0					
ANR	960534	ArgumentList	cfg		960264	1					
ANR	960535	Argument	cfg		960264	0					
ANR	960536	Identifier	cfg		960264	0					
ANR	960537	CompoundStatement		57:18:1397:1397	960264	1					
ANR	960538	IfStatement	if ( 0 != fclose ( cfg ) )		960264	0					
ANR	960539	Condition	0 != fclose ( cfg )	638:8:15721:15736	960264	0	True				
ANR	960540	EqualityExpression	0 != fclose ( cfg )		960264	0		!=			
ANR	960541	PrimaryExpression	0		960264	0					
ANR	960542	CallExpression	fclose ( cfg )		960264	1					
ANR	960543	Callee	fclose		960264	0					
ANR	960544	Identifier	fclose		960264	0					
ANR	960545	ArgumentList	cfg		960264	1					
ANR	960546	Argument	cfg		960264	0					
ANR	960547	Identifier	cfg		960264	0					
ANR	960548	CompoundStatement		60:26:1457:1457	960264	1					
ANR	960549	Statement	fprintf	639:5:15746:15752	960264	0	True				
ANR	960550	Statement	(	639:12:15753:15753	960264	1	True				
ANR	960551	Statement	LogFileHandle	639:13:15754:15766	960264	2	True				
ANR	960552	Statement	","	639:26:15767:15767	960264	3	True				
ANR	960553	Statement	"""Error closing config file '%s'.\\n"""	639:28:15769:15803	960264	4	True				
ANR	960554	Statement	"""\\tErr=%s\\n"""	640:7:15812:15823	960264	5	True				
ANR	960555	Statement	","	640:19:15824:15824	960264	6	True				
ANR	960556	Statement	Config_file	640:21:15826:15836	960264	7	True				
ANR	960557	Statement	","	640:32:15837:15837	960264	8	True				
ANR	960558	Statement	strerror	640:34:15839:15846	960264	9	True				
ANR	960559	Statement	(	640:42:15847:15847	960264	10	True				
ANR	960560	Statement	errno	640:43:15848:15852	960264	11	True				
ANR	960561	Statement	)	640:48:15853:15853	960264	12	True				
ANR	960562	Statement	)	640:49:15854:15854	960264	13	True				
ANR	960563	ExpressionStatement		640:50:15855:15855	960264	14	True				
ANR	960564	ExpressionStatement	result = false	641:5:15862:15876	960264	15	True				
ANR	960565	AssignmentExpression	result = false		960264	0		=			
ANR	960566	Identifier	result		960264	0					
ANR	960567	Identifier	false		960264	1					
ANR	960568	IfStatement	if ( ! foundit )		960264	1					
ANR	960569	Condition	! foundit	644:9:15894:15901	960264	0	True				
ANR	960570	UnaryOperationExpression	! foundit		960264	0					
ANR	960571	UnaryOperator	!		960264	0					
ANR	960572	Identifier	foundit		960264	1					
ANR	960573	CompoundStatement		66:20:1623:1623	960264	1					
ANR	960574	ExpressionStatement	fflush ( cfg_out )	646:5:15960:15975	960264	0	True				
ANR	960575	CallExpression	fflush ( cfg_out )		960264	0					
ANR	960576	Callee	fflush		960264	0					
ANR	960577	Identifier	fflush		960264	0					
ANR	960578	ArgumentList	cfg_out		960264	1					
ANR	960579	Argument	cfg_out		960264	0					
ANR	960580	Identifier	cfg_out		960264	0					
ANR	960581	IfStatement	"if ( 0 == fprintf ( cfg_out , ""%s = %s\\n"" , attribute , val ) )"		960264	1					
ANR	960582	Condition	"0 == fprintf ( cfg_out , ""%s = %s\\n"" , attribute , val )"	647:10:15987:16036	960264	0	True				
ANR	960583	EqualityExpression	"0 == fprintf ( cfg_out , ""%s = %s\\n"" , attribute , val )"		960264	0		==			
ANR	960584	PrimaryExpression	0		960264	0					
ANR	960585	CallExpression	"fprintf ( cfg_out , ""%s = %s\\n"" , attribute , val )"		960264	1					
ANR	960586	Callee	fprintf		960264	0					
ANR	960587	Identifier	fprintf		960264	0					
ANR	960588	ArgumentList	cfg_out		960264	1					
ANR	960589	Argument	cfg_out		960264	0					
ANR	960590	Identifier	cfg_out		960264	0					
ANR	960591	Argument	"""%s = %s\\n"""		960264	1					
ANR	960592	PrimaryExpression	"""%s = %s\\n"""		960264	0					
ANR	960593	Argument	attribute		960264	2					
ANR	960594	Identifier	attribute		960264	0					
ANR	960595	Argument	val		960264	3					
ANR	960596	Identifier	val		960264	0					
ANR	960597	CompoundStatement		69:63:1758:1758	960264	1					
ANR	960598	Statement	fprintf	648:6:16048:16054	960264	0	True				
ANR	960599	Statement	(	648:13:16055:16055	960264	1	True				
ANR	960600	Statement	LogFileHandle	648:14:16056:16068	960264	2	True				
ANR	960601	Statement	","	648:27:16069:16069	960264	3	True				
ANR	960602	Statement	"""Error appending to config file '%s'.\\n"""	648:29:16071:16110	960264	4	True				
ANR	960603	Statement	"""\\tErr=%s\\n"""	649:7:16119:16130	960264	5	True				
ANR	960604	Statement	","	649:19:16131:16131	960264	6	True				
ANR	960605	Statement	config_file_tmp	649:21:16133:16147	960264	7	True				
ANR	960606	Statement	","	649:36:16148:16148	960264	8	True				
ANR	960607	Statement	strerror	649:38:16150:16157	960264	9	True				
ANR	960608	Statement	(	649:46:16158:16158	960264	10	True				
ANR	960609	Statement	errno	649:47:16159:16163	960264	11	True				
ANR	960610	Statement	)	649:52:16164:16164	960264	12	True				
ANR	960611	Statement	)	649:53:16165:16165	960264	13	True				
ANR	960612	ExpressionStatement		649:54:16166:16166	960264	14	True				
ANR	960613	ExpressionStatement	result = false	650:6:16174:16188	960264	15	True				
ANR	960614	AssignmentExpression	result = false		960264	0		=			
ANR	960615	Identifier	result		960264	0					
ANR	960616	Identifier	false		960264	1					
ANR	960617	IfStatement	if ( 0 != fclose ( cfg_out ) )		960264	2					
ANR	960618	Condition	0 != fclose ( cfg_out )	654:8:16212:16231	960264	0	True				
ANR	960619	EqualityExpression	0 != fclose ( cfg_out )		960264	0		!=			
ANR	960620	PrimaryExpression	0		960264	0					
ANR	960621	CallExpression	fclose ( cfg_out )		960264	1					
ANR	960622	Callee	fclose		960264	0					
ANR	960623	Identifier	fclose		960264	0					
ANR	960624	ArgumentList	cfg_out		960264	1					
ANR	960625	Argument	cfg_out		960264	0					
ANR	960626	Identifier	cfg_out		960264	0					
ANR	960627	CompoundStatement		76:30:1952:1952	960264	1					
ANR	960628	Statement	fprintf	655:5:16241:16247	960264	0	True				
ANR	960629	Statement	(	655:12:16248:16248	960264	1	True				
ANR	960630	Statement	LogFileHandle	655:13:16249:16261	960264	2	True				
ANR	960631	Statement	","	655:26:16262:16262	960264	3	True				
ANR	960632	Statement	"""Error closing temp config file '%s'.\\n"""	655:28:16264:16303	960264	4	True				
ANR	960633	Statement	"""\\tErr=%s\\n"""	656:7:16312:16323	960264	5	True				
ANR	960634	Statement	","	656:19:16324:16324	960264	6	True				
ANR	960635	Statement	config_file_tmp	656:21:16326:16340	960264	7	True				
ANR	960636	Statement	","	656:36:16341:16341	960264	8	True				
ANR	960637	Statement	strerror	656:38:16343:16350	960264	9	True				
ANR	960638	Statement	(	656:46:16351:16351	960264	10	True				
ANR	960639	Statement	errno	656:47:16352:16356	960264	11	True				
ANR	960640	Statement	)	656:52:16357:16357	960264	12	True				
ANR	960641	Statement	)	656:53:16358:16358	960264	13	True				
ANR	960642	ExpressionStatement		656:54:16359:16359	960264	14	True				
ANR	960643	ExpressionStatement	result = false	657:5:16366:16380	960264	15	True				
ANR	960644	AssignmentExpression	result = false		960264	0		=			
ANR	960645	Identifier	result		960264	0					
ANR	960646	Identifier	false		960264	1					
ANR	960647	IfStatement	if ( 0 != remove ( Config_file ) )		960264	3					
ANR	960648	Condition	0 != remove ( Config_file )	660:8:16397:16420	960264	0	True				
ANR	960649	EqualityExpression	0 != remove ( Config_file )		960264	0		!=			
ANR	960650	PrimaryExpression	0		960264	0					
ANR	960651	CallExpression	remove ( Config_file )		960264	1					
ANR	960652	Callee	remove		960264	0					
ANR	960653	Identifier	remove		960264	0					
ANR	960654	ArgumentList	Config_file		960264	1					
ANR	960655	Argument	Config_file		960264	0					
ANR	960656	Identifier	Config_file		960264	0					
ANR	960657	CompoundStatement		82:35:2142:2142	960264	1					
ANR	960658	Statement	fprintf	661:5:16431:16437	960264	0	True				
ANR	960659	Statement	(	661:12:16438:16438	960264	1	True				
ANR	960660	Statement	LogFileHandle	661:13:16439:16451	960264	2	True				
ANR	960661	Statement	","	661:26:16452:16452	960264	3	True				
ANR	960662	Statement	"""Error removing old config file '%s'.\\n"""	661:28:16454:16493	960264	4	True				
ANR	960663	Statement	"""\\tErr=%s\\n"""	662:7:16502:16513	960264	5	True				
ANR	960664	Statement	","	662:19:16514:16514	960264	6	True				
ANR	960665	Statement	Config_file	662:21:16516:16526	960264	7	True				
ANR	960666	Statement	","	662:32:16527:16527	960264	8	True				
ANR	960667	Statement	strerror	662:34:16529:16536	960264	9	True				
ANR	960668	Statement	(	662:42:16537:16537	960264	10	True				
ANR	960669	Statement	errno	662:43:16538:16542	960264	11	True				
ANR	960670	Statement	)	662:48:16543:16543	960264	12	True				
ANR	960671	Statement	)	662:49:16544:16544	960264	13	True				
ANR	960672	ExpressionStatement		662:50:16545:16545	960264	14	True				
ANR	960673	ElseStatement	else		960264	0					
ANR	960674	IfStatement	"if ( 0 != rename ( config_file_tmp , Config_file ) )"		960264	0					
ANR	960675	Condition	"0 != rename ( config_file_tmp , Config_file )"	663:15:16562:16602	960264	0	True				
ANR	960676	EqualityExpression	"0 != rename ( config_file_tmp , Config_file )"		960264	0		!=			
ANR	960677	PrimaryExpression	0		960264	0					
ANR	960678	CallExpression	"rename ( config_file_tmp , Config_file )"		960264	1					
ANR	960679	Callee	rename		960264	0					
ANR	960680	Identifier	rename		960264	0					
ANR	960681	ArgumentList	config_file_tmp		960264	1					
ANR	960682	Argument	config_file_tmp		960264	0					
ANR	960683	Identifier	config_file_tmp		960264	0					
ANR	960684	Argument	Config_file		960264	1					
ANR	960685	Identifier	Config_file		960264	0					
ANR	960686	CompoundStatement		85:59:2324:2324	960264	1					
ANR	960687	Statement	fprintf	664:5:16613:16619	960264	0	True				
ANR	960688	Statement	(	664:12:16620:16620	960264	1	True				
ANR	960689	Statement	LogFileHandle	664:13:16621:16633	960264	2	True				
ANR	960690	Statement	","	664:26:16634:16634	960264	3	True				
ANR	960691	Statement	"""Error moving new config file '%s' to """	664:28:16636:16674	960264	4	True				
ANR	960692	Statement	"""'%s'.\\n\\tErr=%s\\n"""	665:7:16683:16701	960264	5	True				
ANR	960693	Statement	","	665:26:16702:16702	960264	6	True				
ANR	960694	Statement	config_file_tmp	665:28:16704:16718	960264	7	True				
ANR	960695	Statement	","	665:43:16719:16719	960264	8	True				
ANR	960696	Statement	Config_file	665:45:16721:16731	960264	9	True				
ANR	960697	Statement	","	665:56:16732:16732	960264	10	True				
ANR	960698	Statement	strerror	666:10:16744:16751	960264	11	True				
ANR	960699	Statement	(	666:18:16752:16752	960264	12	True				
ANR	960700	Statement	errno	666:19:16753:16757	960264	13	True				
ANR	960701	Statement	)	666:24:16758:16758	960264	14	True				
ANR	960702	Statement	)	666:25:16759:16759	960264	15	True				
ANR	960703	ExpressionStatement		666:26:16760:16760	960264	16	True				
ANR	960704	BreakStatement	break ;	668:4:16772:16777	960264	4	True				
ANR	960705	ElseStatement	else		960264	0					
ANR	960706	CompoundStatement		92:10:2508:2508	960264	0					
ANR	960707	ExpressionStatement	"fprintf ( LogFileHandle , ""Error reading config file '%s'.\\n\\tErr=%s\\n"" , Config_file , strerror ( errno ) )"	671:4:16796:16900	960264	0	True				
ANR	960708	CallExpression	"fprintf ( LogFileHandle , ""Error reading config file '%s'.\\n\\tErr=%s\\n"" , Config_file , strerror ( errno ) )"		960264	0					
ANR	960709	Callee	fprintf		960264	0					
ANR	960710	Identifier	fprintf		960264	0					
ANR	960711	ArgumentList	LogFileHandle		960264	1					
ANR	960712	Argument	LogFileHandle		960264	0					
ANR	960713	Identifier	LogFileHandle		960264	0					
ANR	960714	Argument	"""Error reading config file '%s'.\\n\\tErr=%s\\n"""		960264	1					
ANR	960715	PrimaryExpression	"""Error reading config file '%s'.\\n\\tErr=%s\\n"""		960264	0					
ANR	960716	Argument	Config_file		960264	2					
ANR	960717	Identifier	Config_file		960264	0					
ANR	960718	Argument	strerror ( errno )		960264	3					
ANR	960719	CallExpression	strerror ( errno )		960264	0					
ANR	960720	Callee	strerror		960264	0					
ANR	960721	Identifier	strerror		960264	0					
ANR	960722	ArgumentList	errno		960264	1					
ANR	960723	Argument	errno		960264	0					
ANR	960724	Identifier	errno		960264	0					
ANR	960725	ReturnStatement	return result ;	674:3:16910:16923	960264	1	True				
ANR	960726	Identifier	result		960264	0					
ANR	960727	IfStatement	"if ( ! foundit && attribute_matches ( buf , attribute ) )"		960264	1					
ANR	960728	Condition	"! foundit && attribute_matches ( buf , attribute )"	677:7:16937:16981	960264	0	True				
ANR	960729	AndExpression	"! foundit && attribute_matches ( buf , attribute )"		960264	0		&&			
ANR	960730	UnaryOperationExpression	! foundit		960264	0					
ANR	960731	UnaryOperator	!		960264	0					
ANR	960732	Identifier	foundit		960264	1					
ANR	960733	CallExpression	"attribute_matches ( buf , attribute )"		960264	1					
ANR	960734	Callee	attribute_matches		960264	0					
ANR	960735	Identifier	attribute_matches		960264	0					
ANR	960736	ArgumentList	buf		960264	1					
ANR	960737	Argument	buf		960264	0					
ANR	960738	Identifier	buf		960264	0					
ANR	960739	Argument	attribute		960264	1					
ANR	960740	Identifier	attribute		960264	0					
ANR	960741	CompoundStatement		99:55:2703:2703	960264	1					
ANR	960742	ExpressionStatement	fflush ( cfg_out )	678:3:16990:17005	960264	0	True				
ANR	960743	CallExpression	fflush ( cfg_out )		960264	0					
ANR	960744	Callee	fflush		960264	0					
ANR	960745	Identifier	fflush		960264	0					
ANR	960746	ArgumentList	cfg_out		960264	1					
ANR	960747	Argument	cfg_out		960264	0					
ANR	960748	Identifier	cfg_out		960264	0					
ANR	960749	IfStatement	"if ( 0 == fprintf ( cfg_out , ""%s = %s\\n"" , attribute , val ) )"		960264	1					
ANR	960750	Condition	"0 == fprintf ( cfg_out , ""%s = %s\\n"" , attribute , val )"	679:7:17014:17063	960264	0	True				
ANR	960751	EqualityExpression	"0 == fprintf ( cfg_out , ""%s = %s\\n"" , attribute , val )"		960264	0		==			
ANR	960752	PrimaryExpression	0		960264	0					
ANR	960753	CallExpression	"fprintf ( cfg_out , ""%s = %s\\n"" , attribute , val )"		960264	1					
ANR	960754	Callee	fprintf		960264	0					
ANR	960755	Identifier	fprintf		960264	0					
ANR	960756	ArgumentList	cfg_out		960264	1					
ANR	960757	Argument	cfg_out		960264	0					
ANR	960758	Identifier	cfg_out		960264	0					
ANR	960759	Argument	"""%s = %s\\n"""		960264	1					
ANR	960760	PrimaryExpression	"""%s = %s\\n"""		960264	0					
ANR	960761	Argument	attribute		960264	2					
ANR	960762	Identifier	attribute		960264	0					
ANR	960763	Argument	val		960264	3					
ANR	960764	Identifier	val		960264	0					
ANR	960765	CompoundStatement		101:59:2784:2784	960264	1					
ANR	960766	Statement	fprintf	680:4:17072:17078	960264	0	True				
ANR	960767	Statement	(	680:11:17079:17079	960264	1	True				
ANR	960768	Statement	LogFileHandle	680:12:17080:17092	960264	2	True				
ANR	960769	Statement	","	680:25:17093:17093	960264	3	True				
ANR	960770	Statement	"""Error writing to config file '%s'.\\n"""	680:27:17095:17132	960264	4	True				
ANR	960771	Statement	"""\\tErr=%s\\n"""	681:5:17139:17150	960264	5	True				
ANR	960772	Statement	","	681:17:17151:17151	960264	6	True				
ANR	960773	Statement	config_file_tmp	681:19:17153:17167	960264	7	True				
ANR	960774	Statement	","	681:34:17168:17168	960264	8	True				
ANR	960775	Statement	strerror	681:36:17170:17177	960264	9	True				
ANR	960776	Statement	(	681:44:17178:17178	960264	10	True				
ANR	960777	Statement	errno	681:45:17179:17183	960264	11	True				
ANR	960778	Statement	)	681:50:17184:17184	960264	12	True				
ANR	960779	Statement	)	681:51:17185:17185	960264	13	True				
ANR	960780	ExpressionStatement		681:52:17186:17186	960264	14	True				
ANR	960781	ExpressionStatement	result = false	682:4:17192:17206	960264	15	True				
ANR	960782	AssignmentExpression	result = false		960264	0		=			
ANR	960783	Identifier	result		960264	0					
ANR	960784	Identifier	false		960264	1					
ANR	960785	ExpressionStatement	foundit = true	684:3:17216:17230	960264	2	True				
ANR	960786	AssignmentExpression	foundit = true		960264	0		=			
ANR	960787	Identifier	foundit		960264	0					
ANR	960788	Identifier	true		960264	1					
ANR	960789	ElseStatement	else		960264	0					
ANR	960790	CompoundStatement		107:9:2959:2959	960264	0					
ANR	960791	IfStatement	"if ( 0 == fprintf ( cfg_out , ""%s"" , buf ) )"		960264	0					
ANR	960792	Condition	"0 == fprintf ( cfg_out , ""%s"" , buf )"	687:8:17268:17299	960264	0	True				
ANR	960793	EqualityExpression	"0 == fprintf ( cfg_out , ""%s"" , buf )"		960264	0		==			
ANR	960794	PrimaryExpression	0		960264	0					
ANR	960795	CallExpression	"fprintf ( cfg_out , ""%s"" , buf )"		960264	1					
ANR	960796	Callee	fprintf		960264	0					
ANR	960797	Identifier	fprintf		960264	0					
ANR	960798	ArgumentList	cfg_out		960264	1					
ANR	960799	Argument	cfg_out		960264	0					
ANR	960800	Identifier	cfg_out		960264	0					
ANR	960801	Argument	"""%s"""		960264	1					
ANR	960802	PrimaryExpression	"""%s"""		960264	0					
ANR	960803	Argument	buf		960264	2					
ANR	960804	Identifier	buf		960264	0					
ANR	960805	CompoundStatement		109:43:3021:3021	960264	1					
ANR	960806	Statement	fprintf	688:4:17309:17315	960264	0	True				
ANR	960807	Statement	(	688:11:17316:17316	960264	1	True				
ANR	960808	Statement	LogFileHandle	688:12:17317:17329	960264	2	True				
ANR	960809	Statement	","	688:25:17330:17330	960264	3	True				
ANR	960810	Statement	"""Error writing to config file '%s'.\\n"""	688:27:17332:17369	960264	4	True				
ANR	960811	Statement	"""\\tErr=%s\\n"""	689:5:17376:17387	960264	5	True				
ANR	960812	Statement	","	689:17:17388:17388	960264	6	True				
ANR	960813	Statement	config_file_tmp	689:19:17390:17404	960264	7	True				
ANR	960814	Statement	","	689:34:17405:17405	960264	8	True				
ANR	960815	Statement	strerror	689:36:17407:17414	960264	9	True				
ANR	960816	Statement	(	689:44:17415:17415	960264	10	True				
ANR	960817	Statement	errno	689:45:17416:17420	960264	11	True				
ANR	960818	Statement	)	689:50:17421:17421	960264	12	True				
ANR	960819	Statement	)	689:51:17422:17422	960264	13	True				
ANR	960820	ExpressionStatement		689:52:17423:17423	960264	14	True				
ANR	960821	ExpressionStatement	result = false	690:4:17429:17443	960264	15	True				
ANR	960822	AssignmentExpression	result = false		960264	0		=			
ANR	960823	Identifier	result		960264	0					
ANR	960824	Identifier	false		960264	1					
ANR	960825	ReturnStatement	return result ;	695:1:17459:17472	960264	15	True				
ANR	960826	Identifier	result		960264	0					
ANR	960827	ReturnType	bool		960264	1					
ANR	960828	Identifier	set_option		960264	2					
ANR	960829	ParameterList	"const char * attribute , const char * val"		960264	3					
ANR	960830	Parameter	const char * attribute	579:11:14241:14261	960264	0	True				
ANR	960831	ParameterType	const char *		960264	0					
ANR	960832	Identifier	attribute		960264	1					
ANR	960833	Parameter	const char * val	579:34:14264:14278	960264	1	True				
ANR	960834	ParameterType	const char *		960264	0					
ANR	960835	Identifier	val		960264	1					
ANR	960836	CFGEntryNode	ENTRY		960264		True				
ANR	960837	CFGExitNode	EXIT		960264		True				
ANR	960838	Symbol	fseek		960264						
ANR	960839	Symbol	fgets		960264						
ANR	960840	Symbol	remove		960264						
ANR	960841	Symbol	attribute_matches		960264						
ANR	960842	Symbol	result		960264						
ANR	960843	Symbol	BUFFERSIZE		960264						
ANR	960844	Symbol	Config_file		960264						
ANR	960845	Symbol	LogFileHandle		960264						
ANR	960846	Symbol	attribute		960264						
ANR	960847	Symbol	cfg_out		960264						
ANR	960848	Symbol	val		960264						
ANR	960849	Symbol	SEEK_SET		960264						
ANR	960850	Symbol	fopen		960264						
ANR	960851	Symbol	errno		960264						
ANR	960852	Symbol	NULL		960264						
ANR	960853	Symbol	foundit		960264						
ANR	960854	Symbol	cfg		960264						
ANR	960855	Symbol	tempnam		960264						
ANR	960856	Symbol	fclose		960264						
ANR	960857	Symbol	false		960264						
ANR	960858	Symbol	fprintf		960264						
ANR	960859	Symbol	strerror		960264						
ANR	960860	Symbol	buf		960264						
ANR	960861	Symbol	rename		960264						
ANR	960862	Symbol	config_file_tmp		960264						
ANR	960863	Symbol	true		960264						
ANR	960864	Symbol	feof		960264						
ANR	960865	Symbol	setup_config_file		960264						
ANR	960866	Function	set_int_option	698:0:17477:17774							
ANR	960867	FunctionDef	"set_int_option (const char * attribute , const int val)"		960866	0					
ANR	960868	CompoundStatement		699:53:17535:17774	960866	0					
ANR	960869	IdentifierDeclStatement	char buf [ 64 ] ;	700:1:17538:17550	960866	0	True				
ANR	960870	IdentifierDecl	buf [ 64 ]		960866	0					
ANR	960871	IdentifierDeclType	char [ 64 ]		960866	0					
ANR	960872	Identifier	buf		960866	1					
ANR	960873	PrimaryExpression	64		960866	2					
ANR	960874	IfStatement	"if ( 0 > snprintf ( buf , 63 , ""%d"" , val ) )"		960866	1					
ANR	960875	Condition	"0 > snprintf ( buf , 63 , ""%d"" , val )"	702:6:17559:17590	960866	0	True				
ANR	960876	RelationalExpression	"0 > snprintf ( buf , 63 , ""%d"" , val )"		960866	0		>			
ANR	960877	PrimaryExpression	0		960866	0					
ANR	960878	CallExpression	"snprintf ( buf , 63 , ""%d"" , val )"		960866	1					
ANR	960879	Callee	snprintf		960866	0					
ANR	960880	Identifier	snprintf		960866	0					
ANR	960881	ArgumentList	buf		960866	1					
ANR	960882	Argument	buf		960866	0					
ANR	960883	Identifier	buf		960866	0					
ANR	960884	Argument	63		960866	1					
ANR	960885	PrimaryExpression	63		960866	0					
ANR	960886	Argument	"""%d"""		960866	2					
ANR	960887	PrimaryExpression	"""%d"""		960866	0					
ANR	960888	Argument	val		960866	3					
ANR	960889	Identifier	val		960866	0					
ANR	960890	CompoundStatement		4:41:58:58	960866	1					
ANR	960891	Statement	fprintf	703:2:17598:17604	960866	0	True				
ANR	960892	Statement	(	703:9:17605:17605	960866	1	True				
ANR	960893	Statement	LogFileHandle	703:10:17606:17618	960866	2	True				
ANR	960894	Statement	","	703:23:17619:17619	960866	3	True				
ANR	960895	Statement	"""Error setting option '%s' to '%d'.\\n\\t"""	703:25:17621:17660	960866	4	True				
ANR	960896	Statement	"""Integer too big!!\\n"""	704:6:17668:17688	960866	5	True				
ANR	960897	Statement	","	704:27:17689:17689	960866	6	True				
ANR	960898	Statement	attribute	704:29:17691:17699	960866	7	True				
ANR	960899	Statement	","	704:38:17700:17700	960866	8	True				
ANR	960900	Statement	val	704:40:17702:17704	960866	9	True				
ANR	960901	Statement	)	704:43:17705:17705	960866	10	True				
ANR	960902	ExpressionStatement		704:44:17706:17706	960866	11	True				
ANR	960903	ReturnStatement	return false ;	705:2:17710:17722	960866	12	True				
ANR	960904	Identifier	false		960866	0					
ANR	960905	ElseStatement	else		960866	0					
ANR	960906	CompoundStatement		8:8:196:196	960866	0					
ANR	960907	ReturnStatement	"return set_option ( attribute , buf ) ;"	707:2:17736:17769	960866	0	True				
ANR	960908	CallExpression	"set_option ( attribute , buf )"		960866	0					
ANR	960909	Callee	set_option		960866	0					
ANR	960910	Identifier	set_option		960866	0					
ANR	960911	ArgumentList	attribute		960866	1					
ANR	960912	Argument	attribute		960866	0					
ANR	960913	Identifier	attribute		960866	0					
ANR	960914	Argument	buf		960866	1					
ANR	960915	Identifier	buf		960866	0					
ANR	960916	ReturnType	bool		960866	1					
ANR	960917	Identifier	set_int_option		960866	2					
ANR	960918	ParameterList	"const char * attribute , const int val"		960866	3					
ANR	960919	Parameter	const char * attribute	699:15:17497:17517	960866	0	True				
ANR	960920	ParameterType	const char *		960866	0					
ANR	960921	Identifier	attribute		960866	1					
ANR	960922	Parameter	const int val	699:38:17520:17532	960866	1	True				
ANR	960923	ParameterType	const int		960866	0					
ANR	960924	Identifier	val		960866	1					
ANR	960925	CFGEntryNode	ENTRY		960866		True				
ANR	960926	CFGExitNode	EXIT		960866		True				
ANR	960927	Symbol	val		960866						
ANR	960928	Symbol	buf		960866						
ANR	960929	Symbol	set_option		960866						
ANR	960930	Symbol	false		960866						
ANR	960931	Symbol	attribute		960866						
ANR	960932	Symbol	snprintf		960866						
ANR	960933	Function	append_option	711:0:17777:17853							
ANR	960934	FunctionDef	"append_option (const char * attribute , const char * val)"		960933	0					
ANR	960935	CompoundStatement		712:54:17836:17853	960933	0					
ANR	960936	ReturnStatement	return false ;	713:1:17839:17851	960933	0	True				
ANR	960937	Identifier	false		960933	0					
ANR	960938	ReturnType	bool		960933	1					
ANR	960939	Identifier	append_option		960933	2					
ANR	960940	ParameterList	"const char * attribute , const char * val"		960933	3					
ANR	960941	Parameter	const char * attribute	712:14:17796:17816	960933	0	True				
ANR	960942	ParameterType	const char *		960933	0					
ANR	960943	Identifier	attribute		960933	1					
ANR	960944	Parameter	const char * val	712:37:17819:17833	960933	1	True				
ANR	960945	ParameterType	const char *		960933	0					
ANR	960946	Identifier	val		960933	1					
ANR	960947	CFGEntryNode	ENTRY		960933		True				
ANR	960948	CFGExitNode	EXIT		960933		True				
ANR	960949	Symbol	val		960933						
ANR	960950	Symbol	false		960933						
ANR	960951	Symbol	attribute		960933						
ANR	960952	Function	attribute_matches	716:0:17856:18809							
ANR	960953	FunctionDef	"attribute_matches (const char * string , const char * attr)"		960952	0					
ANR	960954	CompoundStatement		717:58:17919:18809	960952	0					
ANR	960955	IdentifierDeclStatement	"int i , j , attr_len ;"	719:1:17923:17941	960952	0	True				
ANR	960956	IdentifierDecl	i		960952	0					
ANR	960957	IdentifierDeclType	int		960952	0					
ANR	960958	Identifier	i		960952	1					
ANR	960959	IdentifierDecl	j		960952	1					
ANR	960960	IdentifierDeclType	int		960952	0					
ANR	960961	Identifier	j		960952	1					
ANR	960962	IdentifierDecl	attr_len		960952	2					
ANR	960963	IdentifierDeclType	int		960952	0					
ANR	960964	Identifier	attr_len		960952	1					
ANR	960965	IdentifierDeclStatement	char * buf ;	720:1:17944:17953	960952	1	True				
ANR	960966	IdentifierDecl	* buf		960952	0					
ANR	960967	IdentifierDeclType	char *		960952	0					
ANR	960968	Identifier	buf		960952	1					
ANR	960969	IdentifierDeclStatement	bool matches ;	721:1:17956:17968	960952	2	True				
ANR	960970	IdentifierDecl	matches		960952	0					
ANR	960971	IdentifierDeclType	bool		960952	0					
ANR	960972	Identifier	matches		960952	1					
ANR	960973	ExpressionStatement	matches = false	723:1:17972:17987	960952	3	True				
ANR	960974	AssignmentExpression	matches = false		960952	0		=			
ANR	960975	Identifier	matches		960952	0					
ANR	960976	Identifier	false		960952	1					
ANR	960977	ExpressionStatement	i = j = 0	724:1:17990:17999	960952	4	True				
ANR	960978	AssignmentExpression	i = j = 0		960952	0		=			
ANR	960979	Identifier	i		960952	0					
ANR	960980	AssignmentExpression	j = 0		960952	1		=			
ANR	960981	Identifier	j		960952	0					
ANR	960982	PrimaryExpression	0		960952	1					
ANR	960983	ExpressionStatement	attr_len = strlen ( string )	725:1:18002:18027	960952	5	True				
ANR	960984	AssignmentExpression	attr_len = strlen ( string )		960952	0		=			
ANR	960985	Identifier	attr_len		960952	0					
ANR	960986	CallExpression	strlen ( string )		960952	1					
ANR	960987	Callee	strlen		960952	0					
ANR	960988	Identifier	strlen		960952	0					
ANR	960989	ArgumentList	string		960952	1					
ANR	960990	Argument	string		960952	0					
ANR	960991	Identifier	string		960952	0					
ANR	960992	ExpressionStatement	buf = ( char * ) malloc ( ( attr_len + 1 ) * sizeof ( char ) )	726:1:18030:18076	960952	6	True				
ANR	960993	AssignmentExpression	buf = ( char * ) malloc ( ( attr_len + 1 ) * sizeof ( char ) )		960952	0		=			
ANR	960994	Identifier	buf		960952	0					
ANR	960995	CastExpression	( char * ) malloc ( ( attr_len + 1 ) * sizeof ( char ) )		960952	1					
ANR	960996	CastTarget	char *		960952	0					
ANR	960997	CallExpression	malloc ( ( attr_len + 1 ) * sizeof ( char ) )		960952	1					
ANR	960998	Callee	malloc		960952	0					
ANR	960999	Identifier	malloc		960952	0					
ANR	961000	ArgumentList	( attr_len + 1 ) * sizeof ( char )		960952	1					
ANR	961001	Argument	( attr_len + 1 ) * sizeof ( char )		960952	0					
ANR	961002	MultiplicativeExpression	( attr_len + 1 ) * sizeof ( char )		960952	0		*			
ANR	961003	AdditiveExpression	attr_len + 1		960952	0		+			
ANR	961004	Identifier	attr_len		960952	0					
ANR	961005	PrimaryExpression	1		960952	1					
ANR	961006	SizeofExpression	sizeof ( char )		960952	1					
ANR	961007	Sizeof	sizeof		960952	0					
ANR	961008	SizeofOperand	char		960952	1					
ANR	961009	ForStatement	for ( ; string [ i ] ; i ++ )		960952	7					
ANR	961010	Condition	string [ i ]	728:8:18087:18095	960952	0	True				
ANR	961011	ArrayIndexing	string [ i ]		960952	0					
ANR	961012	Identifier	string		960952	0					
ANR	961013	Identifier	i		960952	1					
ANR	961014	PostIncDecOperationExpression	i ++	728:19:18098:18100	960952	1	True				
ANR	961015	Identifier	i		960952	0					
ANR	961016	IncDec	++		960952	1					
ANR	961017	CompoundStatement		12:25:184:184	960952	2					
ANR	961018	IfStatement	if ( ( string [ i ] == '\\n' ) || ( string [ i ] == '#' ) || ( string [ i ] == '=' ) || ( ( string [ i ] == '\\\\' ) && ( string [ i + 1 ] == '\\n' ) ) || ( ( string [ i ] == ' ' ) && ( j > 0 ) ) || ( ( string [ i ] == '\\t' ) && ( j > 0 ) ) )		960952	0					
ANR	961019	Condition	( string [ i ] == '\\n' ) || ( string [ i ] == '#' ) || ( string [ i ] == '=' ) || ( ( string [ i ] == '\\\\' ) && ( string [ i + 1 ] == '\\n' ) ) || ( ( string [ i ] == ' ' ) && ( j > 0 ) ) || ( ( string [ i ] == '\\t' ) && ( j > 0 ) )	731:7:18182:18486	960952	0	True				
ANR	961020	OrExpression	( string [ i ] == '\\n' ) || ( string [ i ] == '#' ) || ( string [ i ] == '=' ) || ( ( string [ i ] == '\\\\' ) && ( string [ i + 1 ] == '\\n' ) ) || ( ( string [ i ] == ' ' ) && ( j > 0 ) ) || ( ( string [ i ] == '\\t' ) && ( j > 0 ) )		960952	0		||			
ANR	961021	EqualityExpression	string [ i ] == '\\n'		960952	0		==			
ANR	961022	ArrayIndexing	string [ i ]		960952	0					
ANR	961023	Identifier	string		960952	0					
ANR	961024	Identifier	i		960952	1					
ANR	961025	PrimaryExpression	'\\n'		960952	1					
ANR	961026	OrExpression	( string [ i ] == '#' ) || ( string [ i ] == '=' ) || ( ( string [ i ] == '\\\\' ) && ( string [ i + 1 ] == '\\n' ) ) || ( ( string [ i ] == ' ' ) && ( j > 0 ) ) || ( ( string [ i ] == '\\t' ) && ( j > 0 ) )		960952	1		||			
ANR	961027	EqualityExpression	string [ i ] == '#'		960952	0		==			
ANR	961028	ArrayIndexing	string [ i ]		960952	0					
ANR	961029	Identifier	string		960952	0					
ANR	961030	Identifier	i		960952	1					
ANR	961031	PrimaryExpression	'#'		960952	1					
ANR	961032	OrExpression	( string [ i ] == '=' ) || ( ( string [ i ] == '\\\\' ) && ( string [ i + 1 ] == '\\n' ) ) || ( ( string [ i ] == ' ' ) && ( j > 0 ) ) || ( ( string [ i ] == '\\t' ) && ( j > 0 ) )		960952	1		||			
ANR	961033	EqualityExpression	string [ i ] == '='		960952	0		==			
ANR	961034	ArrayIndexing	string [ i ]		960952	0					
ANR	961035	Identifier	string		960952	0					
ANR	961036	Identifier	i		960952	1					
ANR	961037	PrimaryExpression	'='		960952	1					
ANR	961038	OrExpression	( ( string [ i ] == '\\\\' ) && ( string [ i + 1 ] == '\\n' ) ) || ( ( string [ i ] == ' ' ) && ( j > 0 ) ) || ( ( string [ i ] == '\\t' ) && ( j > 0 ) )		960952	1		||			
ANR	961039	AndExpression	( string [ i ] == '\\\\' ) && ( string [ i + 1 ] == '\\n' )		960952	0		&&			
ANR	961040	EqualityExpression	string [ i ] == '\\\\'		960952	0		==			
ANR	961041	ArrayIndexing	string [ i ]		960952	0					
ANR	961042	Identifier	string		960952	0					
ANR	961043	Identifier	i		960952	1					
ANR	961044	PrimaryExpression	'\\\\'		960952	1					
ANR	961045	EqualityExpression	string [ i + 1 ] == '\\n'		960952	1		==			
ANR	961046	ArrayIndexing	string [ i + 1 ]		960952	0					
ANR	961047	Identifier	string		960952	0					
ANR	961048	AdditiveExpression	i + 1		960952	1		+			
ANR	961049	Identifier	i		960952	0					
ANR	961050	PrimaryExpression	1		960952	1					
ANR	961051	PrimaryExpression	'\\n'		960952	1					
ANR	961052	OrExpression	( ( string [ i ] == ' ' ) && ( j > 0 ) ) || ( ( string [ i ] == '\\t' ) && ( j > 0 ) )		960952	1		||			
ANR	961053	AndExpression	( string [ i ] == ' ' ) && ( j > 0 )		960952	0		&&			
ANR	961054	EqualityExpression	string [ i ] == ' '		960952	0		==			
ANR	961055	ArrayIndexing	string [ i ]		960952	0					
ANR	961056	Identifier	string		960952	0					
ANR	961057	Identifier	i		960952	1					
ANR	961058	PrimaryExpression	' '		960952	1					
ANR	961059	RelationalExpression	j > 0		960952	1		>			
ANR	961060	Identifier	j		960952	0					
ANR	961061	PrimaryExpression	0		960952	1					
ANR	961062	AndExpression	( string [ i ] == '\\t' ) && ( j > 0 )		960952	1		&&			
ANR	961063	EqualityExpression	string [ i ] == '\\t'		960952	0		==			
ANR	961064	ArrayIndexing	string [ i ]		960952	0					
ANR	961065	Identifier	string		960952	0					
ANR	961066	Identifier	i		960952	1					
ANR	961067	PrimaryExpression	'\\t'		960952	1					
ANR	961068	RelationalExpression	j > 0		960952	1		>			
ANR	961069	Identifier	j		960952	0					
ANR	961070	PrimaryExpression	0		960952	1					
ANR	961071	CompoundStatement		29:5:574:574	960952	1					
ANR	961072	BreakStatement	break ;	746:4:18500:18505	960952	0	True				
ANR	961073	IfStatement	if ( string [ i ] == ' ' )		960952	1					
ANR	961074	Condition	string [ i ] == ' '	750:7:18554:18569	960952	0	True				
ANR	961075	EqualityExpression	string [ i ] == ' '		960952	0		==			
ANR	961076	ArrayIndexing	string [ i ]		960952	0					
ANR	961077	Identifier	string		960952	0					
ANR	961078	Identifier	i		960952	1					
ANR	961079	PrimaryExpression	' '		960952	1					
ANR	961080	CompoundStatement		34:26:653:653	960952	1					
ANR	961081	ContinueStatement	continue ;	750:28:18575:18583	960952	0	True				
ANR	961082	IfStatement	if ( string [ i ] == '\\t' )		960952	2					
ANR	961083	Condition	string [ i ] == '\\t'	751:7:18594:18610	960952	0	True				
ANR	961084	EqualityExpression	string [ i ] == '\\t'		960952	0		==			
ANR	961085	ArrayIndexing	string [ i ]		960952	0					
ANR	961086	Identifier	string		960952	0					
ANR	961087	Identifier	i		960952	1					
ANR	961088	PrimaryExpression	'\\t'		960952	1					
ANR	961089	CompoundStatement		35:27:694:694	960952	1					
ANR	961090	ContinueStatement	continue ;	751:29:18616:18624	960952	0	True				
ANR	961091	ExpressionStatement	buf [ j ] = string [ i ]	753:2:18631:18649	960952	3	True				
ANR	961092	AssignmentExpression	buf [ j ] = string [ i ]		960952	0		=			
ANR	961093	ArrayIndexing	buf [ j ]		960952	0					
ANR	961094	Identifier	buf		960952	0					
ANR	961095	Identifier	j		960952	1					
ANR	961096	ArrayIndexing	string [ i ]		960952	1					
ANR	961097	Identifier	string		960952	0					
ANR	961098	Identifier	i		960952	1					
ANR	961099	ExpressionStatement	j ++	754:2:18653:18656	960952	4	True				
ANR	961100	PostIncDecOperationExpression	j ++		960952	0					
ANR	961101	Identifier	j		960952	0					
ANR	961102	IncDec	++		960952	1					
ANR	961103	ExpressionStatement	buf [ j ] = '\\0'	757:1:18663:18676	960952	8	True				
ANR	961104	AssignmentExpression	buf [ j ] = '\\0'		960952	0		=			
ANR	961105	ArrayIndexing	buf [ j ]		960952	0					
ANR	961106	Identifier	buf		960952	0					
ANR	961107	Identifier	j		960952	1					
ANR	961108	PrimaryExpression	'\\0'		960952	1					
ANR	961109	ExpressionStatement	"matches = ( 0 == strcasecmp ( attr , buf ) )"	762:1:18737:18777	960952	9	True				
ANR	961110	AssignmentExpression	"matches = ( 0 == strcasecmp ( attr , buf ) )"		960952	0		=			
ANR	961111	Identifier	matches		960952	0					
ANR	961112	EqualityExpression	"0 == strcasecmp ( attr , buf )"		960952	1		==			
ANR	961113	PrimaryExpression	0		960952	0					
ANR	961114	CallExpression	"strcasecmp ( attr , buf )"		960952	1					
ANR	961115	Callee	strcasecmp		960952	0					
ANR	961116	Identifier	strcasecmp		960952	0					
ANR	961117	ArgumentList	attr		960952	1					
ANR	961118	Argument	attr		960952	0					
ANR	961119	Identifier	attr		960952	0					
ANR	961120	Argument	buf		960952	1					
ANR	961121	Identifier	buf		960952	0					
ANR	961122	ExpressionStatement	free ( buf )	763:1:18780:18789	960952	10	True				
ANR	961123	CallExpression	free ( buf )		960952	0					
ANR	961124	Callee	free		960952	0					
ANR	961125	Identifier	free		960952	0					
ANR	961126	ArgumentList	buf		960952	1					
ANR	961127	Argument	buf		960952	0					
ANR	961128	Identifier	buf		960952	0					
ANR	961129	ReturnStatement	return matches ;	765:1:18793:18807	960952	11	True				
ANR	961130	Identifier	matches		960952	0					
ANR	961131	ReturnType	bool		960952	1					
ANR	961132	Identifier	attribute_matches		960952	2					
ANR	961133	ParameterList	"const char * string , const char * attr"		960952	3					
ANR	961134	Parameter	const char * string	717:19:17880:17897	960952	0	True				
ANR	961135	ParameterType	const char *		960952	0					
ANR	961136	Identifier	string		960952	1					
ANR	961137	Parameter	const char * attr	717:39:17900:17915	960952	1	True				
ANR	961138	ParameterType	const char *		960952	0					
ANR	961139	Identifier	attr		960952	1					
ANR	961140	CFGEntryNode	ENTRY		960952		True				
ANR	961141	CFGExitNode	EXIT		960952		True				
ANR	961142	Symbol	malloc		960952						
ANR	961143	Symbol	* buf		960952						
ANR	961144	Symbol	string		960952						
ANR	961145	Symbol	false		960952						
ANR	961146	Symbol	i		960952						
ANR	961147	Symbol	* string		960952						
ANR	961148	Symbol	j		960952						
ANR	961149	Symbol	attr_len		960952						
ANR	961150	Symbol	matches		960952						
ANR	961151	Symbol	strlen		960952						
ANR	961152	Symbol	buf		960952						
ANR	961153	Symbol	* i		960952						
ANR	961154	Symbol	* j		960952						
ANR	961155	Symbol	attr		960952						
ANR	961156	Symbol	strcasecmp		960952						
ANR	961157	Function	get_short_path_name	770:0:18930:19291							
ANR	961158	FunctionDef	get_short_path_name (const char * path)		961157	0					
ANR	961159	CompoundStatement		771:38:18975:19291	961157	0					
ANR	961160	IdentifierDeclStatement	char * short_path = ( char * ) malloc ( MAX_PATH * sizeof ( char ) ) ;	772:1:18978:19035	961157	0	True				
ANR	961161	IdentifierDecl	* short_path = ( char * ) malloc ( MAX_PATH * sizeof ( char ) )		961157	0					
ANR	961162	IdentifierDeclType	char *		961157	0					
ANR	961163	Identifier	short_path		961157	1					
ANR	961164	AssignmentExpression	* short_path = ( char * ) malloc ( MAX_PATH * sizeof ( char ) )		961157	2		=			
ANR	961165	Identifier	short_path		961157	0					
ANR	961166	CastExpression	( char * ) malloc ( MAX_PATH * sizeof ( char ) )		961157	1					
ANR	961167	CastTarget	char *		961157	0					
ANR	961168	CallExpression	malloc ( MAX_PATH * sizeof ( char ) )		961157	1					
ANR	961169	Callee	malloc		961157	0					
ANR	961170	Identifier	malloc		961157	0					
ANR	961171	ArgumentList	MAX_PATH * sizeof ( char )		961157	1					
ANR	961172	Argument	MAX_PATH * sizeof ( char )		961157	0					
ANR	961173	MultiplicativeExpression	MAX_PATH * sizeof ( char )		961157	0		*			
ANR	961174	Identifier	MAX_PATH		961157	0					
ANR	961175	SizeofExpression	sizeof ( char )		961157	1					
ANR	961176	Sizeof	sizeof		961157	0					
ANR	961177	SizeofOperand	char		961157	1					
ANR	961178	IfStatement	if ( short_path )		961157	1					
ANR	961179	Condition	short_path	773:5:19042:19051	961157	0	True				
ANR	961180	Identifier	short_path		961157	0					
ANR	961181	CompoundStatement		3:17:78:78	961157	1					
ANR	961182	IfStatement	"if ( GetShortPathName ( path , short_path , MAX_PATH ) > 0 )"		961157	0					
ANR	961183	Condition	"GetShortPathName ( path , short_path , MAX_PATH ) > 0"	774:6:19062:19109	961157	0	True				
ANR	961184	RelationalExpression	"GetShortPathName ( path , short_path , MAX_PATH ) > 0"		961157	0		>			
ANR	961185	CallExpression	"GetShortPathName ( path , short_path , MAX_PATH )"		961157	0					
ANR	961186	Callee	GetShortPathName		961157	0					
ANR	961187	Identifier	GetShortPathName		961157	0					
ANR	961188	ArgumentList	path		961157	1					
ANR	961189	Argument	path		961157	0					
ANR	961190	Identifier	path		961157	0					
ANR	961191	Argument	short_path		961157	1					
ANR	961192	Identifier	short_path		961157	0					
ANR	961193	Argument	MAX_PATH		961157	2					
ANR	961194	Identifier	MAX_PATH		961157	0					
ANR	961195	PrimaryExpression	0		961157	1					
ANR	961196	CompoundStatement		4:56:136:136	961157	1					
ANR	961197	ReturnStatement	return short_path ;	775:3:19117:19134	961157	0	True				
ANR	961198	Identifier	short_path		961157	0					
ANR	961199	ExpressionStatement	free ( short_path )	779:2:19248:19264	961157	1	True				
ANR	961200	CallExpression	free ( short_path )		961157	0					
ANR	961201	Callee	free		961157	0					
ANR	961202	Identifier	free		961157	0					
ANR	961203	ArgumentList	short_path		961157	1					
ANR	961204	Argument	short_path		961157	0					
ANR	961205	Identifier	short_path		961157	0					
ANR	961206	ReturnStatement	return strdup ( path ) ;	781:1:19270:19289	961157	2	True				
ANR	961207	CallExpression	strdup ( path )		961157	0					
ANR	961208	Callee	strdup		961157	0					
ANR	961209	Identifier	strdup		961157	0					
ANR	961210	ArgumentList	path		961157	1					
ANR	961211	Argument	path		961157	0					
ANR	961212	Identifier	path		961157	0					
ANR	961213	ReturnType	char *		961157	1					
ANR	961214	Identifier	get_short_path_name		961157	2					
ANR	961215	ParameterList	const char * path		961157	3					
ANR	961216	Parameter	const char * path	771:20:18957:18972	961157	0	True				
ANR	961217	ParameterType	const char *		961157	0					
ANR	961218	Identifier	path		961157	1					
ANR	961219	CFGEntryNode	ENTRY		961157		True				
ANR	961220	CFGExitNode	EXIT		961157		True				
ANR	961221	Symbol	GetShortPathName		961157						
ANR	961222	Symbol	path		961157						
ANR	961223	Symbol	malloc		961157						
ANR	961224	Symbol	MAX_PATH		961157						
ANR	961225	Symbol	strdup		961157						
ANR	961226	Symbol	short_path		961157						
