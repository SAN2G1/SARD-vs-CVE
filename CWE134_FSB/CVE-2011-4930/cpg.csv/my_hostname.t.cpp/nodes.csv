command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1892825	File	data/converged/CVE-2011-4930_htcondor/my_hostname.t.cpp								
ANR	1892826	Function	usage	24:0:864:971							
ANR	1892827	FunctionDef	usage (char * me)		1892826	0					
ANR	1892828	CompoundStatement		25:18:887:971	1892826	0					
ANR	1892829	ExpressionStatement	"fprintf ( stderr , ""Usage: %s -ip | -host | -fullhost | -sin\\n"" , me )"	26:1:890:957	1892826	0	True				
ANR	1892830	CallExpression	"fprintf ( stderr , ""Usage: %s -ip | -host | -fullhost | -sin\\n"" , me )"		1892826	0					
ANR	1892831	Callee	fprintf		1892826	0					
ANR	1892832	Identifier	fprintf		1892826	0					
ANR	1892833	ArgumentList	stderr		1892826	1					
ANR	1892834	Argument	stderr		1892826	0					
ANR	1892835	Identifier	stderr		1892826	0					
ANR	1892836	Argument	"""Usage: %s -ip | -host | -fullhost | -sin\\n"""		1892826	1					
ANR	1892837	PrimaryExpression	"""Usage: %s -ip | -host | -fullhost | -sin\\n"""		1892826	0					
ANR	1892838	Argument	me		1892826	2					
ANR	1892839	Identifier	me		1892826	0					
ANR	1892840	ExpressionStatement	exit ( 1 )	27:1:960:969	1892826	1	True				
ANR	1892841	CallExpression	exit ( 1 )		1892826	0					
ANR	1892842	Callee	exit		1892826	0					
ANR	1892843	Identifier	exit		1892826	0					
ANR	1892844	ArgumentList	1		1892826	1					
ANR	1892845	Argument	1		1892826	0					
ANR	1892846	PrimaryExpression	1		1892826	0					
ANR	1892847	ReturnType	void		1892826	1					
ANR	1892848	Identifier	usage		1892826	2					
ANR	1892849	ParameterList	char * me		1892826	3					
ANR	1892850	Parameter	char * me	25:7:876:883	1892826	0	True				
ANR	1892851	ParameterType	char *		1892826	0					
ANR	1892852	Identifier	me		1892826	1					
ANR	1892853	CFGEntryNode	ENTRY		1892826		True				
ANR	1892854	CFGExitNode	EXIT		1892826		True				
ANR	1892855	Symbol	me		1892826						
ANR	1892856	Symbol	stderr		1892826						
ANR	1892857	Function	main	31:0:975:1530							
ANR	1892858	FunctionDef	"main (int argc , char * argv [ ])"		1892857	0					
ANR	1892859	CompoundStatement		33:0:1010:1530	1892857	0					
ANR	1892860	IfStatement	if ( argc != 2 )		1892857	0					
ANR	1892861	Condition	argc != 2	34:5:1017:1025	1892857	0	True				
ANR	1892862	EqualityExpression	argc != 2		1892857	0		!=			
ANR	1892863	Identifier	argc		1892857	0					
ANR	1892864	PrimaryExpression	2		1892857	1					
ANR	1892865	CompoundStatement		2:17:18:18	1892857	1					
ANR	1892866	ExpressionStatement	usage ( argv [ 0 ] )	35:2:1033:1049	1892857	0	True				
ANR	1892867	CallExpression	usage ( argv [ 0 ] )		1892857	0					
ANR	1892868	Callee	usage		1892857	0					
ANR	1892869	Identifier	usage		1892857	0					
ANR	1892870	ArgumentList	argv [ 0 ]		1892857	1					
ANR	1892871	Argument	argv [ 0 ]		1892857	0					
ANR	1892872	ArrayIndexing	argv [ 0 ]		1892857	0					
ANR	1892873	Identifier	argv		1892857	0					
ANR	1892874	PrimaryExpression	0		1892857	1					
ANR	1892875	SwitchStatement	switch ( argv [ 1 ] [ 1 ] )		1892857	1					
ANR	1892876	Condition	argv [ 1 ] [ 1 ]	37:9:1063:1072	1892857	0	True				
ANR	1892877	ArrayIndexing	argv [ 1 ] [ 1 ]		1892857	0					
ANR	1892878	ArrayIndexing	argv [ 1 ]		1892857	0					
ANR	1892879	Identifier	argv		1892857	0					
ANR	1892880	PrimaryExpression	1		1892857	1					
ANR	1892881	PrimaryExpression	1		1892857	1					
ANR	1892882	CompoundStatement		5:22:65:65	1892857	1					
ANR	1892883	Label	case 'i' :	38:1:1079:1087	1892857	0	True				
ANR	1892884	ExpressionStatement	"printf ( ""ip: %ul\\n"" , my_ip_addr ( ) )"	39:2:1091:1126	1892857	1	True				
ANR	1892885	CallExpression	"printf ( ""ip: %ul\\n"" , my_ip_addr ( ) )"		1892857	0					
ANR	1892886	Callee	printf		1892857	0					
ANR	1892887	Identifier	printf		1892857	0					
ANR	1892888	ArgumentList	"""ip: %ul\\n"""		1892857	1					
ANR	1892889	Argument	"""ip: %ul\\n"""		1892857	0					
ANR	1892890	PrimaryExpression	"""ip: %ul\\n"""		1892857	0					
ANR	1892891	Argument	my_ip_addr ( )		1892857	1					
ANR	1892892	CallExpression	my_ip_addr ( )		1892857	0					
ANR	1892893	Callee	my_ip_addr		1892857	0					
ANR	1892894	Identifier	my_ip_addr		1892857	0					
ANR	1892895	ArgumentList			1892857	1					
ANR	1892896	BreakStatement	break ;	40:2:1130:1135	1892857	2	True				
ANR	1892897	Label	case 'h' :	41:1:1138:1146	1892857	3	True				
ANR	1892898	ExpressionStatement	"printf ( ""host: %s\\n"" , my_hostname ( ) )"	42:2:1150:1187	1892857	4	True				
ANR	1892899	CallExpression	"printf ( ""host: %s\\n"" , my_hostname ( ) )"		1892857	0					
ANR	1892900	Callee	printf		1892857	0					
ANR	1892901	Identifier	printf		1892857	0					
ANR	1892902	ArgumentList	"""host: %s\\n"""		1892857	1					
ANR	1892903	Argument	"""host: %s\\n"""		1892857	0					
ANR	1892904	PrimaryExpression	"""host: %s\\n"""		1892857	0					
ANR	1892905	Argument	my_hostname ( )		1892857	1					
ANR	1892906	CallExpression	my_hostname ( )		1892857	0					
ANR	1892907	Callee	my_hostname		1892857	0					
ANR	1892908	Identifier	my_hostname		1892857	0					
ANR	1892909	ArgumentList			1892857	1					
ANR	1892910	BreakStatement	break ;	43:2:1191:1196	1892857	5	True				
ANR	1892911	Label	case 'f' :	44:1:1199:1207	1892857	6	True				
ANR	1892912	ExpressionStatement	"printf ( ""fullhost: %s\\n"" , my_full_hostname ( ) )"	45:2:1211:1257	1892857	7	True				
ANR	1892913	CallExpression	"printf ( ""fullhost: %s\\n"" , my_full_hostname ( ) )"		1892857	0					
ANR	1892914	Callee	printf		1892857	0					
ANR	1892915	Identifier	printf		1892857	0					
ANR	1892916	ArgumentList	"""fullhost: %s\\n"""		1892857	1					
ANR	1892917	Argument	"""fullhost: %s\\n"""		1892857	0					
ANR	1892918	PrimaryExpression	"""fullhost: %s\\n"""		1892857	0					
ANR	1892919	Argument	my_full_hostname ( )		1892857	1					
ANR	1892920	CallExpression	my_full_hostname ( )		1892857	0					
ANR	1892921	Callee	my_full_hostname		1892857	0					
ANR	1892922	Identifier	my_full_hostname		1892857	0					
ANR	1892923	ArgumentList			1892857	1					
ANR	1892924	BreakStatement	break ;	46:2:1261:1266	1892857	8	True				
ANR	1892925	Label	case 's' :	47:1:1269:1277	1892857	9	True				
ANR	1892926	ExpressionStatement	"printf ( ""sin_addr: %ul\\n"" , ( my_sin_addr ( ) ) -> s_addr )"	48:2:1281:1333	1892857	10	True				
ANR	1892927	CallExpression	"printf ( ""sin_addr: %ul\\n"" , ( my_sin_addr ( ) ) -> s_addr )"		1892857	0					
ANR	1892928	Callee	printf		1892857	0					
ANR	1892929	Identifier	printf		1892857	0					
ANR	1892930	ArgumentList	"""sin_addr: %ul\\n"""		1892857	1					
ANR	1892931	Argument	"""sin_addr: %ul\\n"""		1892857	0					
ANR	1892932	PrimaryExpression	"""sin_addr: %ul\\n"""		1892857	0					
ANR	1892933	Argument	( my_sin_addr ( ) ) -> s_addr		1892857	1					
ANR	1892934	PtrMemberAccess	( my_sin_addr ( ) ) -> s_addr		1892857	0					
ANR	1892935	CallExpression	my_sin_addr ( )		1892857	0					
ANR	1892936	Callee	my_sin_addr		1892857	0					
ANR	1892937	Identifier	my_sin_addr		1892857	0					
ANR	1892938	ArgumentList			1892857	1					
ANR	1892939	Identifier	s_addr		1892857	1					
ANR	1892940	ExpressionStatement	"printf ( ""ntohl sin_addr: %ul\\n"" , ntohl ( ( my_sin_addr ( ) ) -> s_addr ) )"	49:2:1337:1402	1892857	11	True				
ANR	1892941	CallExpression	"printf ( ""ntohl sin_addr: %ul\\n"" , ntohl ( ( my_sin_addr ( ) ) -> s_addr ) )"		1892857	0					
ANR	1892942	Callee	printf		1892857	0					
ANR	1892943	Identifier	printf		1892857	0					
ANR	1892944	ArgumentList	"""ntohl sin_addr: %ul\\n"""		1892857	1					
ANR	1892945	Argument	"""ntohl sin_addr: %ul\\n"""		1892857	0					
ANR	1892946	PrimaryExpression	"""ntohl sin_addr: %ul\\n"""		1892857	0					
ANR	1892947	Argument	ntohl ( ( my_sin_addr ( ) ) -> s_addr )		1892857	1					
ANR	1892948	CallExpression	ntohl ( ( my_sin_addr ( ) ) -> s_addr )		1892857	0					
ANR	1892949	Callee	ntohl		1892857	0					
ANR	1892950	Identifier	ntohl		1892857	0					
ANR	1892951	ArgumentList	( my_sin_addr ( ) ) -> s_addr		1892857	1					
ANR	1892952	Argument	( my_sin_addr ( ) ) -> s_addr		1892857	0					
ANR	1892953	PtrMemberAccess	( my_sin_addr ( ) ) -> s_addr		1892857	0					
ANR	1892954	CallExpression	my_sin_addr ( )		1892857	0					
ANR	1892955	Callee	my_sin_addr		1892857	0					
ANR	1892956	Identifier	my_sin_addr		1892857	0					
ANR	1892957	ArgumentList			1892857	1					
ANR	1892958	Identifier	s_addr		1892857	1					
ANR	1892959	ExpressionStatement	"printf ( ""ntoa sin_addr: %s\\n"" , inet_ntoa ( * ( my_sin_addr ( ) ) ) )"	50:2:1406:1466	1892857	12	True				
ANR	1892960	CallExpression	"printf ( ""ntoa sin_addr: %s\\n"" , inet_ntoa ( * ( my_sin_addr ( ) ) ) )"		1892857	0					
ANR	1892961	Callee	printf		1892857	0					
ANR	1892962	Identifier	printf		1892857	0					
ANR	1892963	ArgumentList	"""ntoa sin_addr: %s\\n"""		1892857	1					
ANR	1892964	Argument	"""ntoa sin_addr: %s\\n"""		1892857	0					
ANR	1892965	PrimaryExpression	"""ntoa sin_addr: %s\\n"""		1892857	0					
ANR	1892966	Argument	inet_ntoa ( * ( my_sin_addr ( ) ) )		1892857	1					
ANR	1892967	CallExpression	inet_ntoa ( * ( my_sin_addr ( ) ) )		1892857	0					
ANR	1892968	Callee	inet_ntoa		1892857	0					
ANR	1892969	Identifier	inet_ntoa		1892857	0					
ANR	1892970	ArgumentList	* ( my_sin_addr ( ) )		1892857	1					
ANR	1892971	Argument	* ( my_sin_addr ( ) )		1892857	0					
ANR	1892972	UnaryOperationExpression	* ( my_sin_addr ( ) )		1892857	0					
ANR	1892973	UnaryOperator	*		1892857	0					
ANR	1892974	CallExpression	my_sin_addr ( )		1892857	1					
ANR	1892975	Callee	my_sin_addr		1892857	0					
ANR	1892976	Identifier	my_sin_addr		1892857	0					
ANR	1892977	ArgumentList			1892857	1					
ANR	1892978	BreakStatement	break ;	51:2:1470:1475	1892857	13	True				
ANR	1892979	Label	default :	52:1:1478:1485	1892857	14	True				
ANR	1892980	Identifier	default		1892857	0					
ANR	1892981	ExpressionStatement	usage ( argv [ 0 ] )	53:2:1489:1505	1892857	15	True				
ANR	1892982	CallExpression	usage ( argv [ 0 ] )		1892857	0					
ANR	1892983	Callee	usage		1892857	0					
ANR	1892984	Identifier	usage		1892857	0					
ANR	1892985	ArgumentList	argv [ 0 ]		1892857	1					
ANR	1892986	Argument	argv [ 0 ]		1892857	0					
ANR	1892987	ArrayIndexing	argv [ 0 ]		1892857	0					
ANR	1892988	Identifier	argv		1892857	0					
ANR	1892989	PrimaryExpression	0		1892857	1					
ANR	1892990	BreakStatement	break ;	54:2:1509:1514	1892857	16	True				
ANR	1892991	ReturnStatement	return 0 ;	56:1:1520:1528	1892857	2	True				
ANR	1892992	PrimaryExpression	0		1892857	0					
ANR	1892993	ReturnType	int		1892857	1					
ANR	1892994	Identifier	main		1892857	2					
ANR	1892995	ParameterList	"int argc , char * argv [ ]"		1892857	3					
ANR	1892996	Parameter	int argc	32:6:985:992	1892857	0	True				
ANR	1892997	ParameterType	int		1892857	0					
ANR	1892998	Identifier	argc		1892857	1					
ANR	1892999	Parameter	char * argv [ ]	32:16:995:1006	1892857	1	True				
ANR	1893000	ParameterType	char * [ ]		1892857	0					
ANR	1893001	Identifier	argv		1892857	1					
ANR	1893002	CFGEntryNode	ENTRY		1892857		True				
ANR	1893003	CFGExitNode	EXIT		1892857		True				
ANR	1893004	Symbol	argc		1892857						
ANR	1893005	Symbol	my_sin_addr		1892857						
ANR	1893006	Symbol	ntohl		1892857						
ANR	1893007	Symbol	* argv		1892857						
ANR	1893008	Symbol	inet_ntoa		1892857						
ANR	1893009	Symbol	* ( my_sin_addr ( ) )		1892857						
ANR	1893010	Symbol	argv		1892857						
ANR	1893011	Symbol	my_full_hostname		1892857						
ANR	1893012	Symbol	my_ip_addr		1892857						
ANR	1893013	Symbol	* my_sin_addr		1892857						
ANR	1893014	Symbol	* * argv		1892857						
ANR	1893015	Symbol	my_hostname		1892857						
ANR	1893016	Symbol	( my_sin_addr ( ) ) -> s_addr		1892857						
