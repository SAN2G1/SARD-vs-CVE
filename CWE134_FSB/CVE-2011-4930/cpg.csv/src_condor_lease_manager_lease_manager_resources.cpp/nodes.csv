command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3500863	File	data/converged/CVE-2011-4930_htcondor/src_condor_lease_manager_lease_manager_resources.cpp								
ANR	3500864	Function	LeaseManagerResources :: LeaseManagerResources	39:0:1278:1646							
ANR	3500865	FunctionDef	LeaseManagerResources :: LeaseManagerResources ()		3500864	0					
ANR	3500866	CompoundStatement		40:0:1331:1646	3500864	0					
ANR	3500867	ExpressionStatement	m_lease_id_number = time ( NULL )	41:1:1334:1366	3500864	0	True				
ANR	3500868	AssignmentExpression	m_lease_id_number = time ( NULL )		3500864	0		=			
ANR	3500869	Identifier	m_lease_id_number		3500864	0					
ANR	3500870	CallExpression	time ( NULL )		3500864	1					
ANR	3500871	Callee	time		3500864	0					
ANR	3500872	Identifier	time		3500864	0					
ANR	3500873	ArgumentList	NULL		3500864	1					
ANR	3500874	Argument	NULL		3500864	0					
ANR	3500875	Identifier	NULL		3500864	0					
ANR	3500876	ExpressionStatement	m_default_max_lease_duration = 60	42:1:1369:1402	3500864	1	True				
ANR	3500877	AssignmentExpression	m_default_max_lease_duration = 60		3500864	0		=			
ANR	3500878	Identifier	m_default_max_lease_duration		3500864	0					
ANR	3500879	PrimaryExpression	60		3500864	1					
ANR	3500880	ExpressionStatement	m_max_lease_duration = 1800	43:1:1405:1432	3500864	2	True				
ANR	3500881	AssignmentExpression	m_max_lease_duration = 1800		3500864	0		=			
ANR	3500882	Identifier	m_max_lease_duration		3500864	0					
ANR	3500883	PrimaryExpression	1800		3500864	1					
ANR	3500884	ExpressionStatement	m_max_lease_total = 3600	44:1:1435:1459	3500864	3	True				
ANR	3500885	AssignmentExpression	m_max_lease_total = 3600		3500864	0		=			
ANR	3500886	Identifier	m_max_lease_total		3500864	0					
ANR	3500887	PrimaryExpression	3600		3500864	1					
ANR	3500888	ExpressionStatement	m_collection_log = NULL	45:1:1462:1485	3500864	4	True				
ANR	3500889	AssignmentExpression	m_collection_log = NULL		3500864	0		=			
ANR	3500890	Identifier	m_collection_log		3500864	0					
ANR	3500891	Identifier	NULL		3500864	1					
ANR	3500892	ExpressionStatement	m_enable_ad_debug = false	47:1:1489:1514	3500864	5	True				
ANR	3500893	AssignmentExpression	m_enable_ad_debug = false		3500864	0		=			
ANR	3500894	Identifier	m_enable_ad_debug		3500864	0					
ANR	3500895	Identifier	false		3500864	1					
ANR	3500896	ExpressionStatement	m_stats . m_num_resources = 0	49:1:1518:1545	3500864	6	True				
ANR	3500897	AssignmentExpression	m_stats . m_num_resources = 0		3500864	0		=			
ANR	3500898	MemberAccess	m_stats . m_num_resources		3500864	0					
ANR	3500899	Identifier	m_stats		3500864	0					
ANR	3500900	Identifier	m_num_resources		3500864	1					
ANR	3500901	PrimaryExpression	0		3500864	1					
ANR	3500902	ExpressionStatement	m_stats . m_num_lease_records = 0	50:1:1548:1579	3500864	7	True				
ANR	3500903	AssignmentExpression	m_stats . m_num_lease_records = 0		3500864	0		=			
ANR	3500904	MemberAccess	m_stats . m_num_lease_records		3500864	0					
ANR	3500905	Identifier	m_stats		3500864	0					
ANR	3500906	Identifier	m_num_lease_records		3500864	1					
ANR	3500907	PrimaryExpression	0		3500864	1					
ANR	3500908	ExpressionStatement	m_stats . m_num_valid_leases = 0	51:1:1582:1612	3500864	8	True				
ANR	3500909	AssignmentExpression	m_stats . m_num_valid_leases = 0		3500864	0		=			
ANR	3500910	MemberAccess	m_stats . m_num_valid_leases		3500864	0					
ANR	3500911	Identifier	m_stats		3500864	0					
ANR	3500912	Identifier	m_num_valid_leases		3500864	1					
ANR	3500913	PrimaryExpression	0		3500864	1					
ANR	3500914	ExpressionStatement	m_stats . m_num_busy_leases = 0	52:1:1615:1644	3500864	9	True				
ANR	3500915	AssignmentExpression	m_stats . m_num_busy_leases = 0		3500864	0		=			
ANR	3500916	MemberAccess	m_stats . m_num_busy_leases		3500864	0					
ANR	3500917	Identifier	m_stats		3500864	0					
ANR	3500918	Identifier	m_num_busy_leases		3500864	1					
ANR	3500919	PrimaryExpression	0		3500864	1					
ANR	3500920	Identifier	LeaseManagerResources :: LeaseManagerResources		3500864	1					
ANR	3500921	ParameterList			3500864	2					
ANR	3500922	CFGEntryNode	ENTRY		3500864		True				
ANR	3500923	CFGExitNode	EXIT		3500864		True				
ANR	3500924	Symbol	m_collection_log		3500864						
ANR	3500925	Symbol	m_enable_ad_debug		3500864						
ANR	3500926	Symbol	NULL		3500864						
ANR	3500927	Symbol	m_stats		3500864						
ANR	3500928	Symbol	m_default_max_lease_duration		3500864						
ANR	3500929	Symbol	m_max_lease_total		3500864						
ANR	3500930	Symbol	m_stats . m_num_valid_leases		3500864						
ANR	3500931	Symbol	false		3500864						
ANR	3500932	Symbol	m_stats . m_num_resources		3500864						
ANR	3500933	Symbol	m_lease_id_number		3500864						
ANR	3500934	Symbol	m_stats . m_num_lease_records		3500864						
ANR	3500935	Symbol	time		3500864						
ANR	3500936	Symbol	m_max_lease_duration		3500864						
ANR	3500937	Symbol	m_stats . m_num_busy_leases		3500864						
ANR	3500938	Function	LeaseManagerResources :: ~LeaseManagerResources	55:0:1649:2035							
ANR	3500939	FunctionDef	LeaseManagerResources :: ~LeaseManagerResources ()		3500938	0					
ANR	3500940	CompoundStatement		56:0:1703:2035	3500938	0					
ANR	3500941	IdentifierDeclStatement	"map < string , LeaseManagerLeaseEnt * , less < string > > :: iterator iter ;"	57:1:1706:1770	3500938	0	True				
ANR	3500942	IdentifierDecl	iter		3500938	0					
ANR	3500943	IdentifierDeclType	"map < string , LeaseManagerLeaseEnt * , less < string > > :: iterator"		3500938	0					
ANR	3500944	Identifier	iter		3500938	1					
ANR	3500945	ForStatement	for ( iter = m_used_leases . begin ( ) ; iter != m_used_leases . end ( ) ; iter ++ )		3500938	1					
ANR	3500946	ForInit	iter = m_used_leases . begin ( ) ;	58:6:1778:1806	3500938	0	True				
ANR	3500947	AssignmentExpression	iter = m_used_leases . begin ( )		3500938	0		=			
ANR	3500948	Identifier	iter		3500938	0					
ANR	3500949	CallExpression	m_used_leases . begin ( )		3500938	1					
ANR	3500950	Callee	m_used_leases . begin		3500938	0					
ANR	3500951	MemberAccess	m_used_leases . begin		3500938	0					
ANR	3500952	Identifier	m_used_leases		3500938	0					
ANR	3500953	Identifier	begin		3500938	1					
ANR	3500954	ArgumentList			3500938	1					
ANR	3500955	Condition	iter != m_used_leases . end ( )	58:36:1808:1834	3500938	1	True				
ANR	3500956	EqualityExpression	iter != m_used_leases . end ( )		3500938	0		!=			
ANR	3500957	Identifier	iter		3500938	0					
ANR	3500958	CallExpression	m_used_leases . end ( )		3500938	1					
ANR	3500959	Callee	m_used_leases . end		3500938	0					
ANR	3500960	MemberAccess	m_used_leases . end		3500938	0					
ANR	3500961	Identifier	m_used_leases		3500938	0					
ANR	3500962	Identifier	end		3500938	1					
ANR	3500963	ArgumentList			3500938	1					
ANR	3500964	PostIncDecOperationExpression	iter ++	58:65:1837:1842	3500938	2	True				
ANR	3500965	Identifier	iter		3500938	0					
ANR	3500966	IncDec	++		3500938	1					
ANR	3500967	CompoundStatement		4:2:146:192	3500938	3					
ANR	3500968	IdentifierDeclStatement	LeaseManagerLeaseEnt * lease_ent = iter -> second ;	59:2:1850:1896	3500938	0	True				
ANR	3500969	IdentifierDecl	* lease_ent = iter -> second		3500938	0					
ANR	3500970	IdentifierDeclType	LeaseManagerLeaseEnt *		3500938	0					
ANR	3500971	Identifier	lease_ent		3500938	1					
ANR	3500972	AssignmentExpression	* lease_ent = iter -> second		3500938	2		=			
ANR	3500973	Identifier	lease_ent		3500938	0					
ANR	3500974	PtrMemberAccess	iter -> second		3500938	1					
ANR	3500975	Identifier	iter		3500938	0					
ANR	3500976	Identifier	second		3500938	1					
ANR	3500977	Statement	delete	60:2:1900:1905	3500938	1	True				
ANR	3500978	ExpressionStatement	lease_ent	60:9:1907:1916	3500938	2	True				
ANR	3500979	Identifier	lease_ent		3500938	0					
ANR	3500980	ExpressionStatement	m_used_leases . erase ( iter -> first )	61:2:1920:1954	3500938	3	True				
ANR	3500981	CallExpression	m_used_leases . erase ( iter -> first )		3500938	0					
ANR	3500982	Callee	m_used_leases . erase		3500938	0					
ANR	3500983	MemberAccess	m_used_leases . erase		3500938	0					
ANR	3500984	Identifier	m_used_leases		3500938	0					
ANR	3500985	Identifier	erase		3500938	1					
ANR	3500986	ArgumentList	iter -> first		3500938	1					
ANR	3500987	Argument	iter -> first		3500938	0					
ANR	3500988	PtrMemberAccess	iter -> first		3500938	0					
ANR	3500989	Identifier	iter		3500938	0					
ANR	3500990	Identifier	first		3500938	1					
ANR	3500991	IfStatement	if ( m_collection_log )		3500938	2					
ANR	3500992	Condition	m_collection_log	63:5:1964:1979	3500938	0	True				
ANR	3500993	Identifier	m_collection_log		3500938	0					
ANR	3500994	CompoundStatement		8:24:279:279	3500938	1					
ANR	3500995	Statement	free	64:2:1987:1990	3500938	0	True				
ANR	3500996	Statement	(	64:6:1991:1991	3500938	1	True				
ANR	3500997	Statement	const_cast	64:8:1993:2002	3500938	2	True				
ANR	3500998	Statement	<	64:18:2003:2003	3500938	3	True				
ANR	3500999	Statement	char	64:19:2004:2007	3500938	4	True				
ANR	3501000	Statement	*	64:23:2008:2008	3500938	5	True				
ANR	3501001	Statement	>	64:24:2009:2009	3500938	6	True				
ANR	3501002	Statement	(	64:25:2010:2010	3500938	7	True				
ANR	3501003	Statement	m_collection_log	64:26:2011:2026	3500938	8	True				
ANR	3501004	Statement	)	64:42:2027:2027	3500938	9	True				
ANR	3501005	Statement	)	64:44:2029:2029	3500938	10	True				
ANR	3501006	ExpressionStatement		64:45:2030:2030	3500938	11	True				
ANR	3501007	Identifier	LeaseManagerResources :: ~LeaseManagerResources		3500938	1					
ANR	3501008	ParameterList			3500938	2					
ANR	3501009	CFGEntryNode	ENTRY		3500938		True				
ANR	3501010	CFGExitNode	EXIT		3500938		True				
ANR	3501011	Symbol	m_collection_log		3500938						
ANR	3501012	Symbol	* iter		3500938						
ANR	3501013	Symbol	iter -> first		3500938						
ANR	3501014	Symbol	iter		3500938						
ANR	3501015	Symbol	m_used_leases . begin		3500938						
ANR	3501016	Symbol	m_used_leases . end		3500938						
ANR	3501017	Symbol	lease_ent		3500938						
ANR	3501018	Symbol	m_used_leases		3500938						
ANR	3501019	Symbol	iter -> second		3500938						
ANR	3501020	Function	LeaseManagerResources :: setCollectionLog	68:0:2038:2377							
ANR	3501021	FunctionDef	LeaseManagerResources :: setCollectionLog (const char * f)		3501020	0					
ANR	3501022	CompoundStatement		70:0:2099:2377	3501020	0					
ANR	3501023	IfStatement	if ( f )		3501020	0					
ANR	3501024	Condition	f	71:6:2107:2107	3501020	0	True				
ANR	3501025	Identifier	f		3501020	0					
ANR	3501026	CompoundStatement		2:10:11:11	3501020	1					
ANR	3501027	IfStatement	"if ( m_collection_log && strcmp ( f , m_collection_log ) )"		3501020	0					
ANR	3501028	Condition	"m_collection_log && strcmp ( f , m_collection_log )"	72:7:2120:2168	3501020	0	True				
ANR	3501029	AndExpression	"m_collection_log && strcmp ( f , m_collection_log )"		3501020	0		&&			
ANR	3501030	Identifier	m_collection_log		3501020	0					
ANR	3501031	CallExpression	"strcmp ( f , m_collection_log )"		3501020	1					
ANR	3501032	Callee	strcmp		3501020	0					
ANR	3501033	Identifier	strcmp		3501020	0					
ANR	3501034	ArgumentList	f		3501020	1					
ANR	3501035	Argument	f		3501020	0					
ANR	3501036	Identifier	f		3501020	0					
ANR	3501037	Argument	m_collection_log		3501020	1					
ANR	3501038	Identifier	m_collection_log		3501020	0					
ANR	3501039	CompoundStatement		3:59:72:72	3501020	1					
ANR	3501040	Statement	free	73:3:2177:2180	3501020	0	True				
ANR	3501041	Statement	(	73:7:2181:2181	3501020	1	True				
ANR	3501042	Statement	const_cast	73:9:2183:2192	3501020	2	True				
ANR	3501043	Statement	<	73:19:2193:2193	3501020	3	True				
ANR	3501044	Statement	char	73:20:2194:2197	3501020	4	True				
ANR	3501045	Statement	*	73:24:2198:2198	3501020	5	True				
ANR	3501046	Statement	>	73:25:2199:2199	3501020	6	True				
ANR	3501047	Statement	(	73:26:2200:2200	3501020	7	True				
ANR	3501048	Statement	m_collection_log	73:27:2201:2216	3501020	8	True				
ANR	3501049	Statement	)	73:43:2217:2217	3501020	9	True				
ANR	3501050	Statement	)	73:45:2219:2219	3501020	10	True				
ANR	3501051	ExpressionStatement		73:46:2220:2220	3501020	11	True				
ANR	3501052	ExpressionStatement	m_collection_log = strdup ( f )	74:3:2225:2255	3501020	12	True				
ANR	3501053	AssignmentExpression	m_collection_log = strdup ( f )		3501020	0		=			
ANR	3501054	Identifier	m_collection_log		3501020	0					
ANR	3501055	CallExpression	strdup ( f )		3501020	1					
ANR	3501056	Callee	strdup		3501020	0					
ANR	3501057	Identifier	strdup		3501020	0					
ANR	3501058	ArgumentList	f		3501020	1					
ANR	3501059	Argument	f		3501020	0					
ANR	3501060	Identifier	f		3501020	0					
ANR	3501061	ElseStatement	else		3501020	0					
ANR	3501062	IfStatement	if ( ! m_collection_log )		3501020	0					
ANR	3501063	Condition	! m_collection_log	75:14:2271:2287	3501020	0	True				
ANR	3501064	UnaryOperationExpression	! m_collection_log		3501020	0					
ANR	3501065	UnaryOperator	!		3501020	0					
ANR	3501066	Identifier	m_collection_log		3501020	1					
ANR	3501067	CompoundStatement		6:34:191:191	3501020	1					
ANR	3501068	ExpressionStatement	m_collection_log = strdup ( f )	76:3:2296:2326	3501020	0	True				
ANR	3501069	AssignmentExpression	m_collection_log = strdup ( f )		3501020	0		=			
ANR	3501070	Identifier	m_collection_log		3501020	0					
ANR	3501071	CallExpression	strdup ( f )		3501020	1					
ANR	3501072	Callee	strdup		3501020	0					
ANR	3501073	Identifier	strdup		3501020	0					
ANR	3501074	ArgumentList	f		3501020	1					
ANR	3501075	Argument	f		3501020	0					
ANR	3501076	Identifier	f		3501020	0					
ANR	3501077	ExpressionStatement	ASSERT ( m_collection_log )	78:2:2334:2360	3501020	1	True				
ANR	3501078	CallExpression	ASSERT ( m_collection_log )		3501020	0					
ANR	3501079	Callee	ASSERT		3501020	0					
ANR	3501080	Identifier	ASSERT		3501020	0					
ANR	3501081	ArgumentList	m_collection_log		3501020	1					
ANR	3501082	Argument	m_collection_log		3501020	0					
ANR	3501083	Identifier	m_collection_log		3501020	0					
ANR	3501084	ReturnStatement	return 0 ;	81:1:2367:2375	3501020	1	True				
ANR	3501085	PrimaryExpression	0		3501020	0					
ANR	3501086	ReturnType	int		3501020	1					
ANR	3501087	Identifier	LeaseManagerResources :: setCollectionLog		3501020	2					
ANR	3501088	ParameterList	const char * f		3501020	3					
ANR	3501089	Parameter	const char * f	69:41:2083:2095	3501020	0	True				
ANR	3501090	ParameterType	const char *		3501020	0					
ANR	3501091	Identifier	f		3501020	1					
ANR	3501092	CFGEntryNode	ENTRY		3501020		True				
ANR	3501093	CFGExitNode	EXIT		3501020		True				
ANR	3501094	Symbol	m_collection_log		3501020						
ANR	3501095	Symbol	strcmp		3501020						
ANR	3501096	Symbol	f		3501020						
ANR	3501097	Symbol	strdup		3501020						
ANR	3501098	Function	LeaseManagerResources :: setAdDebug	84:0:2380:2465							
ANR	3501099	FunctionDef	LeaseManagerResources :: setAdDebug (bool enable)		3501098	0					
ANR	3501100	CompoundStatement		86:0:2434:2465	3501098	0					
ANR	3501101	ExpressionStatement	m_enable_ad_debug = enable	87:1:2437:2463	3501098	0	True				
ANR	3501102	AssignmentExpression	m_enable_ad_debug = enable		3501098	0		=			
ANR	3501103	Identifier	m_enable_ad_debug		3501098	0					
ANR	3501104	Identifier	enable		3501098	1					
ANR	3501105	ReturnType	void		3501098	1					
ANR	3501106	Identifier	LeaseManagerResources :: setAdDebug		3501098	2					
ANR	3501107	ParameterList	bool enable		3501098	3					
ANR	3501108	Parameter	bool enable	85:35:2420:2430	3501098	0	True				
ANR	3501109	ParameterType	bool		3501098	0					
ANR	3501110	Identifier	enable		3501098	1					
ANR	3501111	CFGEntryNode	ENTRY		3501098		True				
ANR	3501112	CFGExitNode	EXIT		3501098		True				
ANR	3501113	Symbol	m_enable_ad_debug		3501098						
ANR	3501114	Symbol	enable		3501098						
ANR	3501115	Function	LeaseManagerResources :: setDefaultMaxLeaseDuration	90:0:2468:2573							
ANR	3501116	FunctionDef	LeaseManagerResources :: setDefaultMaxLeaseDuration (int def)		3501115	0					
ANR	3501117	CompoundStatement		92:0:2534:2573	3501115	0					
ANR	3501118	ExpressionStatement	m_default_max_lease_duration = def	93:1:2537:2571	3501115	0	True				
ANR	3501119	AssignmentExpression	m_default_max_lease_duration = def		3501115	0		=			
ANR	3501120	Identifier	m_default_max_lease_duration		3501115	0					
ANR	3501121	Identifier	def		3501115	1					
ANR	3501122	ReturnType	void		3501115	1					
ANR	3501123	Identifier	LeaseManagerResources :: setDefaultMaxLeaseDuration		3501115	2					
ANR	3501124	ParameterList	int def		3501115	3					
ANR	3501125	Parameter	int def	91:51:2524:2530	3501115	0	True				
ANR	3501126	ParameterType	int		3501115	0					
ANR	3501127	Identifier	def		3501115	1					
ANR	3501128	CFGEntryNode	ENTRY		3501115		True				
ANR	3501129	CFGExitNode	EXIT		3501115		True				
ANR	3501130	Symbol	def		3501115						
ANR	3501131	Symbol	m_default_max_lease_duration		3501115						
ANR	3501132	Function	LeaseManagerResources :: setMaxLeaseDuration	96:0:2576:2666							
ANR	3501133	FunctionDef	LeaseManagerResources :: setMaxLeaseDuration (int max)		3501132	0					
ANR	3501134	CompoundStatement		98:0:2635:2666	3501132	0					
ANR	3501135	ExpressionStatement	m_max_lease_duration = max	99:1:2638:2664	3501132	0	True				
ANR	3501136	AssignmentExpression	m_max_lease_duration = max		3501132	0		=			
ANR	3501137	Identifier	m_max_lease_duration		3501132	0					
ANR	3501138	Identifier	max		3501132	1					
ANR	3501139	ReturnType	void		3501132	1					
ANR	3501140	Identifier	LeaseManagerResources :: setMaxLeaseDuration		3501132	2					
ANR	3501141	ParameterList	int max		3501132	3					
ANR	3501142	Parameter	int max	97:44:2625:2631	3501132	0	True				
ANR	3501143	ParameterType	int		3501132	0					
ANR	3501144	Identifier	max		3501132	1					
ANR	3501145	CFGEntryNode	ENTRY		3501132		True				
ANR	3501146	CFGExitNode	EXIT		3501132		True				
ANR	3501147	Symbol	max		3501132						
ANR	3501148	Symbol	m_max_lease_duration		3501132						
ANR	3501149	Function	LeaseManagerResources :: setMaxLeaseTotalDuration	102:0:2669:2761							
ANR	3501150	FunctionDef	LeaseManagerResources :: setMaxLeaseTotalDuration (int max)		3501149	0					
ANR	3501151	CompoundStatement		104:0:2733:2761	3501149	0					
ANR	3501152	ExpressionStatement	m_max_lease_total = max	105:1:2736:2759	3501149	0	True				
ANR	3501153	AssignmentExpression	m_max_lease_total = max		3501149	0		=			
ANR	3501154	Identifier	m_max_lease_total		3501149	0					
ANR	3501155	Identifier	max		3501149	1					
ANR	3501156	ReturnType	void		3501149	1					
ANR	3501157	Identifier	LeaseManagerResources :: setMaxLeaseTotalDuration		3501149	2					
ANR	3501158	ParameterList	int max		3501149	3					
ANR	3501159	Parameter	int max	103:49:2723:2729	3501149	0	True				
ANR	3501160	ParameterType	int		3501149	0					
ANR	3501161	Identifier	max		3501149	1					
ANR	3501162	CFGEntryNode	ENTRY		3501149		True				
ANR	3501163	CFGExitNode	EXIT		3501149		True				
ANR	3501164	Symbol	max		3501149						
ANR	3501165	Symbol	m_max_lease_total		3501149						
ANR	3501166	Function	LeaseManagerResources :: init	108:0:2764:4260							
ANR	3501167	FunctionDef	LeaseManagerResources :: init ()		3501166	0					
ANR	3501168	CompoundStatement		110:0:2804:4260	3501166	0					
ANR	3501169	IfStatement	if ( m_collection_log )		3501166	0					
ANR	3501170	Condition	m_collection_log	112:6:2850:2865	3501166	0	True				
ANR	3501171	Identifier	m_collection_log		3501166	0					
ANR	3501172	CompoundStatement		3:25:64:64	3501166	1					
ANR	3501173	IfStatement	if ( ! m_collection . InitializeFromLog ( m_collection_log ) )		3501166	0					
ANR	3501174	Condition	! m_collection . InitializeFromLog ( m_collection_log )	113:7:2878:2928	3501166	0	True				
ANR	3501175	UnaryOperationExpression	! m_collection . InitializeFromLog ( m_collection_log )		3501166	0					
ANR	3501176	UnaryOperator	!		3501166	0					
ANR	3501177	CallExpression	m_collection . InitializeFromLog ( m_collection_log )		3501166	1					
ANR	3501178	Callee	m_collection . InitializeFromLog		3501166	0					
ANR	3501179	MemberAccess	m_collection . InitializeFromLog		3501166	0					
ANR	3501180	Identifier	m_collection		3501166	0					
ANR	3501181	Identifier	InitializeFromLog		3501166	1					
ANR	3501182	ArgumentList	m_collection_log		3501166	1					
ANR	3501183	Argument	m_collection_log		3501166	0					
ANR	3501184	Identifier	m_collection_log		3501166	0					
ANR	3501185	CompoundStatement		4:61:127:127	3501166	1					
ANR	3501186	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error initializing collection log '%s'\\n"" , m_collection_log )"	114:3:2937:3024	3501166	0	True				
ANR	3501187	CallExpression	"dprintf ( D_ALWAYS , ""Error initializing collection log '%s'\\n"" , m_collection_log )"		3501166	0					
ANR	3501188	Callee	dprintf		3501166	0					
ANR	3501189	Identifier	dprintf		3501166	0					
ANR	3501190	ArgumentList	D_ALWAYS		3501166	1					
ANR	3501191	Argument	D_ALWAYS		3501166	0					
ANR	3501192	Identifier	D_ALWAYS		3501166	0					
ANR	3501193	Argument	"""Error initializing collection log '%s'\\n"""		3501166	1					
ANR	3501194	PrimaryExpression	"""Error initializing collection log '%s'\\n"""		3501166	0					
ANR	3501195	Argument	m_collection_log		3501166	2					
ANR	3501196	Identifier	m_collection_log		3501166	0					
ANR	3501197	ReturnStatement	return - 1 ;	116:3:3029:3038	3501166	1	True				
ANR	3501198	UnaryOperationExpression	- 1		3501166	0					
ANR	3501199	UnaryOperator	-		3501166	0					
ANR	3501200	PrimaryExpression	1		3501166	1					
ANR	3501201	ExpressionStatement	m_search_query . Bind ( & m_collection )	121:1:3069:3105	3501166	1	True				
ANR	3501202	CallExpression	m_search_query . Bind ( & m_collection )		3501166	0					
ANR	3501203	Callee	m_search_query . Bind		3501166	0					
ANR	3501204	MemberAccess	m_search_query . Bind		3501166	0					
ANR	3501205	Identifier	m_search_query		3501166	0					
ANR	3501206	Identifier	Bind		3501166	1					
ANR	3501207	ArgumentList	& m_collection		3501166	1					
ANR	3501208	Argument	& m_collection		3501166	0					
ANR	3501209	UnaryOperationExpression	& m_collection		3501166	0					
ANR	3501210	UnaryOperator	&		3501166	0					
ANR	3501211	Identifier	m_collection		3501166	1					
ANR	3501212	ExpressionStatement	"m_root_view = ""root"""	124:1:3135:3155	3501166	2	True				
ANR	3501213	AssignmentExpression	"m_root_view = ""root"""		3501166	0		=			
ANR	3501214	Identifier	m_root_view		3501166	0					
ANR	3501215	PrimaryExpression	"""root"""		3501166	1					
ANR	3501216	ExpressionStatement	"m_resources_view = ""Resources"""	127:1:3189:3219	3501166	3	True				
ANR	3501217	AssignmentExpression	"m_resources_view = ""Resources"""		3501166	0		=			
ANR	3501218	Identifier	m_resources_view		3501166	0					
ANR	3501219	PrimaryExpression	"""Resources"""		3501166	1					
ANR	3501220	ExpressionStatement	"m_view_key = ""_ViewName"""	128:1:3222:3246	3501166	4	True				
ANR	3501221	AssignmentExpression	"m_view_key = ""_ViewName"""		3501166	0		=			
ANR	3501222	Identifier	m_view_key		3501166	0					
ANR	3501223	PrimaryExpression	"""_ViewName"""		3501166	1					
ANR	3501224	IfStatement	if ( ! m_collection . ViewExists ( m_resources_view ) )		3501166	5					
ANR	3501225	Condition	! m_collection . ViewExists ( m_resources_view )	129:6:3254:3298	3501166	0	True				
ANR	3501226	UnaryOperationExpression	! m_collection . ViewExists ( m_resources_view )		3501166	0					
ANR	3501227	UnaryOperator	!		3501166	0					
ANR	3501228	CallExpression	m_collection . ViewExists ( m_resources_view )		3501166	1					
ANR	3501229	Callee	m_collection . ViewExists		3501166	0					
ANR	3501230	MemberAccess	m_collection . ViewExists		3501166	0					
ANR	3501231	Identifier	m_collection		3501166	0					
ANR	3501232	Identifier	ViewExists		3501166	1					
ANR	3501233	ArgumentList	m_resources_view		3501166	1					
ANR	3501234	Argument	m_resources_view		3501166	0					
ANR	3501235	Identifier	m_resources_view		3501166	0					
ANR	3501236	CompoundStatement		27:2:677:688	3501166	1					
ANR	3501237	IdentifierDeclStatement	char buf [ 64 ] ;	130:2:3306:3318	3501166	0	True				
ANR	3501238	IdentifierDecl	buf [ 64 ]		3501166	0					
ANR	3501239	IdentifierDeclType	char [ 64 ]		3501166	0					
ANR	3501240	Identifier	buf		3501166	1					
ANR	3501241	PrimaryExpression	64		3501166	2					
ANR	3501242	ExpressionStatement	"snprintf ( buf , sizeof ( buf ) , ""( other.%s == \\""%s\\"" )"" , m_view_key . c_str ( ) , m_resources_view . c_str ( ) )"	131:2:3322:3436	3501166	1	True				
ANR	3501243	CallExpression	"snprintf ( buf , sizeof ( buf ) , ""( other.%s == \\""%s\\"" )"" , m_view_key . c_str ( ) , m_resources_view . c_str ( ) )"		3501166	0					
ANR	3501244	Callee	snprintf		3501166	0					
ANR	3501245	Identifier	snprintf		3501166	0					
ANR	3501246	ArgumentList	buf		3501166	1					
ANR	3501247	Argument	buf		3501166	0					
ANR	3501248	Identifier	buf		3501166	0					
ANR	3501249	Argument	sizeof ( buf )		3501166	1					
ANR	3501250	SizeofExpression	sizeof ( buf )		3501166	0					
ANR	3501251	Sizeof	sizeof		3501166	0					
ANR	3501252	SizeofOperand	buf		3501166	1					
ANR	3501253	Argument	"""( other.%s == \\""%s\\"" )"""		3501166	2					
ANR	3501254	PrimaryExpression	"""( other.%s == \\""%s\\"" )"""		3501166	0					
ANR	3501255	Argument	m_view_key . c_str ( )		3501166	3					
ANR	3501256	CallExpression	m_view_key . c_str ( )		3501166	0					
ANR	3501257	Callee	m_view_key . c_str		3501166	0					
ANR	3501258	MemberAccess	m_view_key . c_str		3501166	0					
ANR	3501259	Identifier	m_view_key		3501166	0					
ANR	3501260	Identifier	c_str		3501166	1					
ANR	3501261	ArgumentList			3501166	1					
ANR	3501262	Argument	m_resources_view . c_str ( )		3501166	4					
ANR	3501263	CallExpression	m_resources_view . c_str ( )		3501166	0					
ANR	3501264	Callee	m_resources_view . c_str		3501166	0					
ANR	3501265	MemberAccess	m_resources_view . c_str		3501166	0					
ANR	3501266	Identifier	m_resources_view		3501166	0					
ANR	3501267	Identifier	c_str		3501166	1					
ANR	3501268	ArgumentList			3501166	1					
ANR	3501269	IdentifierDeclStatement	string constraint = buf ;	134:2:3440:3463	3501166	2	True				
ANR	3501270	IdentifierDecl	constraint = buf		3501166	0					
ANR	3501271	IdentifierDeclType	string		3501166	0					
ANR	3501272	Identifier	constraint		3501166	1					
ANR	3501273	AssignmentExpression	constraint = buf		3501166	2		=			
ANR	3501274	Identifier	buf		3501166	0					
ANR	3501275	Identifier	buf		3501166	1					
ANR	3501276	IdentifierDeclStatement	string rank ;	135:2:3467:3478	3501166	3	True				
ANR	3501277	IdentifierDecl	rank		3501166	0					
ANR	3501278	IdentifierDeclType	string		3501166	0					
ANR	3501279	Identifier	rank		3501166	1					
ANR	3501280	IdentifierDeclStatement	string expr ;	136:2:3482:3493	3501166	4	True				
ANR	3501281	IdentifierDecl	expr		3501166	0					
ANR	3501282	IdentifierDeclType	string		3501166	0					
ANR	3501283	Identifier	expr		3501166	1					
ANR	3501284	IfStatement	"if ( ! m_collection . CreateSubView ( m_resources_view , m_root_view , constraint , rank , expr ) )"		3501166	5					
ANR	3501285	Condition	"! m_collection . CreateSubView ( m_resources_view , m_root_view , constraint , rank , expr )"	137:7:3502:3597	3501166	0	True				
ANR	3501286	UnaryOperationExpression	"! m_collection . CreateSubView ( m_resources_view , m_root_view , constraint , rank , expr )"		3501166	0					
ANR	3501287	UnaryOperator	!		3501166	0					
ANR	3501288	CallExpression	"m_collection . CreateSubView ( m_resources_view , m_root_view , constraint , rank , expr )"		3501166	1					
ANR	3501289	Callee	m_collection . CreateSubView		3501166	0					
ANR	3501290	MemberAccess	m_collection . CreateSubView		3501166	0					
ANR	3501291	Identifier	m_collection		3501166	0					
ANR	3501292	Identifier	CreateSubView		3501166	1					
ANR	3501293	ArgumentList	m_resources_view		3501166	1					
ANR	3501294	Argument	m_resources_view		3501166	0					
ANR	3501295	Identifier	m_resources_view		3501166	0					
ANR	3501296	Argument	m_root_view		3501166	1					
ANR	3501297	Identifier	m_root_view		3501166	0					
ANR	3501298	Argument	constraint		3501166	2					
ANR	3501299	Identifier	constraint		3501166	0					
ANR	3501300	Argument	rank		3501166	3					
ANR	3501301	Identifier	rank		3501166	0					
ANR	3501302	Argument	expr		3501166	4					
ANR	3501303	Identifier	expr		3501166	0					
ANR	3501304	CompoundStatement		29:39:796:796	3501166	1					
ANR	3501305	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error creating resources view\\n"" )"	139:3:3606:3660	3501166	0	True				
ANR	3501306	CallExpression	"dprintf ( D_ALWAYS , ""Error creating resources view\\n"" )"		3501166	0					
ANR	3501307	Callee	dprintf		3501166	0					
ANR	3501308	Identifier	dprintf		3501166	0					
ANR	3501309	ArgumentList	D_ALWAYS		3501166	1					
ANR	3501310	Argument	D_ALWAYS		3501166	0					
ANR	3501311	Identifier	D_ALWAYS		3501166	0					
ANR	3501312	Argument	"""Error creating resources view\\n"""		3501166	1					
ANR	3501313	PrimaryExpression	"""Error creating resources view\\n"""		3501166	0					
ANR	3501314	ReturnStatement	return - 1 ;	140:3:3665:3674	3501166	1	True				
ANR	3501315	UnaryOperationExpression	- 1		3501166	0					
ANR	3501316	UnaryOperator	-		3501166	0					
ANR	3501317	PrimaryExpression	1		3501166	1					
ANR	3501318	ExpressionStatement	"m_leases_view = ""Leases"""	145:1:3710:3734	3501166	6	True				
ANR	3501319	AssignmentExpression	"m_leases_view = ""Leases"""		3501166	0		=			
ANR	3501320	Identifier	m_leases_view		3501166	0					
ANR	3501321	PrimaryExpression	"""Leases"""		3501166	1					
ANR	3501322	IfStatement	if ( ! m_collection . ViewExists ( m_leases_view ) )		3501166	7					
ANR	3501323	Condition	! m_collection . ViewExists ( m_leases_view )	146:6:3742:3783	3501166	0	True				
ANR	3501324	UnaryOperationExpression	! m_collection . ViewExists ( m_leases_view )		3501166	0					
ANR	3501325	UnaryOperator	!		3501166	0					
ANR	3501326	CallExpression	m_collection . ViewExists ( m_leases_view )		3501166	1					
ANR	3501327	Callee	m_collection . ViewExists		3501166	0					
ANR	3501328	MemberAccess	m_collection . ViewExists		3501166	0					
ANR	3501329	Identifier	m_collection		3501166	0					
ANR	3501330	Identifier	ViewExists		3501166	1					
ANR	3501331	ArgumentList	m_leases_view		3501166	1					
ANR	3501332	Argument	m_leases_view		3501166	0					
ANR	3501333	Identifier	m_leases_view		3501166	0					
ANR	3501334	CompoundStatement		44:2:1159:1170	3501166	1					
ANR	3501335	IdentifierDeclStatement	char buf [ 64 ] ;	147:2:3791:3803	3501166	0	True				
ANR	3501336	IdentifierDecl	buf [ 64 ]		3501166	0					
ANR	3501337	IdentifierDeclType	char [ 64 ]		3501166	0					
ANR	3501338	Identifier	buf		3501166	1					
ANR	3501339	PrimaryExpression	64		3501166	2					
ANR	3501340	ExpressionStatement	"snprintf ( buf , sizeof ( buf ) , ""( other.%s == \\""%s\\"" )"" , m_view_key . c_str ( ) , m_leases_view . c_str ( ) )"	148:2:3807:3918	3501166	1	True				
ANR	3501341	CallExpression	"snprintf ( buf , sizeof ( buf ) , ""( other.%s == \\""%s\\"" )"" , m_view_key . c_str ( ) , m_leases_view . c_str ( ) )"		3501166	0					
ANR	3501342	Callee	snprintf		3501166	0					
ANR	3501343	Identifier	snprintf		3501166	0					
ANR	3501344	ArgumentList	buf		3501166	1					
ANR	3501345	Argument	buf		3501166	0					
ANR	3501346	Identifier	buf		3501166	0					
ANR	3501347	Argument	sizeof ( buf )		3501166	1					
ANR	3501348	SizeofExpression	sizeof ( buf )		3501166	0					
ANR	3501349	Sizeof	sizeof		3501166	0					
ANR	3501350	SizeofOperand	buf		3501166	1					
ANR	3501351	Argument	"""( other.%s == \\""%s\\"" )"""		3501166	2					
ANR	3501352	PrimaryExpression	"""( other.%s == \\""%s\\"" )"""		3501166	0					
ANR	3501353	Argument	m_view_key . c_str ( )		3501166	3					
ANR	3501354	CallExpression	m_view_key . c_str ( )		3501166	0					
ANR	3501355	Callee	m_view_key . c_str		3501166	0					
ANR	3501356	MemberAccess	m_view_key . c_str		3501166	0					
ANR	3501357	Identifier	m_view_key		3501166	0					
ANR	3501358	Identifier	c_str		3501166	1					
ANR	3501359	ArgumentList			3501166	1					
ANR	3501360	Argument	m_leases_view . c_str ( )		3501166	4					
ANR	3501361	CallExpression	m_leases_view . c_str ( )		3501166	0					
ANR	3501362	Callee	m_leases_view . c_str		3501166	0					
ANR	3501363	MemberAccess	m_leases_view . c_str		3501166	0					
ANR	3501364	Identifier	m_leases_view		3501166	0					
ANR	3501365	Identifier	c_str		3501166	1					
ANR	3501366	ArgumentList			3501166	1					
ANR	3501367	IdentifierDeclStatement	string constraint = buf ;	151:2:3922:3945	3501166	2	True				
ANR	3501368	IdentifierDecl	constraint = buf		3501166	0					
ANR	3501369	IdentifierDeclType	string		3501166	0					
ANR	3501370	Identifier	constraint		3501166	1					
ANR	3501371	AssignmentExpression	constraint = buf		3501166	2		=			
ANR	3501372	Identifier	buf		3501166	0					
ANR	3501373	Identifier	buf		3501166	1					
ANR	3501374	IdentifierDeclStatement	string rank ;	152:2:3949:3960	3501166	3	True				
ANR	3501375	IdentifierDecl	rank		3501166	0					
ANR	3501376	IdentifierDeclType	string		3501166	0					
ANR	3501377	Identifier	rank		3501166	1					
ANR	3501378	IdentifierDeclStatement	string expr ;	153:2:3964:3975	3501166	4	True				
ANR	3501379	IdentifierDecl	expr		3501166	0					
ANR	3501380	IdentifierDeclType	string		3501166	0					
ANR	3501381	Identifier	expr		3501166	1					
ANR	3501382	IfStatement	"if ( ! m_collection . CreateSubView ( m_leases_view , m_root_view , constraint , rank , expr ) )"		3501166	5					
ANR	3501383	Condition	"! m_collection . CreateSubView ( m_leases_view , m_root_view , constraint , rank , expr )"	154:7:3984:4076	3501166	0	True				
ANR	3501384	UnaryOperationExpression	"! m_collection . CreateSubView ( m_leases_view , m_root_view , constraint , rank , expr )"		3501166	0					
ANR	3501385	UnaryOperator	!		3501166	0					
ANR	3501386	CallExpression	"m_collection . CreateSubView ( m_leases_view , m_root_view , constraint , rank , expr )"		3501166	1					
ANR	3501387	Callee	m_collection . CreateSubView		3501166	0					
ANR	3501388	MemberAccess	m_collection . CreateSubView		3501166	0					
ANR	3501389	Identifier	m_collection		3501166	0					
ANR	3501390	Identifier	CreateSubView		3501166	1					
ANR	3501391	ArgumentList	m_leases_view		3501166	1					
ANR	3501392	Argument	m_leases_view		3501166	0					
ANR	3501393	Identifier	m_leases_view		3501166	0					
ANR	3501394	Argument	m_root_view		3501166	1					
ANR	3501395	Identifier	m_root_view		3501166	0					
ANR	3501396	Argument	constraint		3501166	2					
ANR	3501397	Identifier	constraint		3501166	0					
ANR	3501398	Argument	rank		3501166	3					
ANR	3501399	Identifier	rank		3501166	0					
ANR	3501400	Argument	expr		3501166	4					
ANR	3501401	Identifier	expr		3501166	0					
ANR	3501402	CompoundStatement		46:39:1275:1275	3501166	1					
ANR	3501403	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error creating resources view\\n"" )"	156:3:4085:4139	3501166	0	True				
ANR	3501404	CallExpression	"dprintf ( D_ALWAYS , ""Error creating resources view\\n"" )"		3501166	0					
ANR	3501405	Callee	dprintf		3501166	0					
ANR	3501406	Identifier	dprintf		3501166	0					
ANR	3501407	ArgumentList	D_ALWAYS		3501166	1					
ANR	3501408	Argument	D_ALWAYS		3501166	0					
ANR	3501409	Identifier	D_ALWAYS		3501166	0					
ANR	3501410	Argument	"""Error creating resources view\\n"""		3501166	1					
ANR	3501411	PrimaryExpression	"""Error creating resources view\\n"""		3501166	0					
ANR	3501412	ReturnStatement	return - 1 ;	157:3:4144:4153	3501166	1	True				
ANR	3501413	UnaryOperationExpression	- 1		3501166	0					
ANR	3501414	UnaryOperator	-		3501166	0					
ANR	3501415	PrimaryExpression	1		3501166	1					
ANR	3501416	ExpressionStatement	restoreLeases ( )	161:1:4164:4180	3501166	8	True				
ANR	3501417	CallExpression	restoreLeases ( )		3501166	0					
ANR	3501418	Callee	restoreLeases		3501166	0					
ANR	3501419	Identifier	restoreLeases		3501166	0					
ANR	3501420	ArgumentList			3501166	1					
ANR	3501421	ExpressionStatement	m_collection . TruncateLog ( )	164:1:4220:4247	3501166	9	True				
ANR	3501422	CallExpression	m_collection . TruncateLog ( )		3501166	0					
ANR	3501423	Callee	m_collection . TruncateLog		3501166	0					
ANR	3501424	MemberAccess	m_collection . TruncateLog		3501166	0					
ANR	3501425	Identifier	m_collection		3501166	0					
ANR	3501426	Identifier	TruncateLog		3501166	1					
ANR	3501427	ArgumentList			3501166	1					
ANR	3501428	ReturnStatement	return 0 ;	165:1:4250:4258	3501166	10	True				
ANR	3501429	PrimaryExpression	0		3501166	0					
ANR	3501430	ReturnType	int		3501166	1					
ANR	3501431	Identifier	LeaseManagerResources :: init		3501166	2					
ANR	3501432	ParameterList			3501166	3					
ANR	3501433	CFGEntryNode	ENTRY		3501166		True				
ANR	3501434	CFGExitNode	EXIT		3501166		True				
ANR	3501435	Symbol	m_collection_log		3501166						
ANR	3501436	Symbol	m_collection . ViewExists		3501166						
ANR	3501437	Symbol	m_view_key		3501166						
ANR	3501438	Symbol	m_root_view		3501166						
ANR	3501439	Symbol	m_view_key . c_str		3501166						
ANR	3501440	Symbol	m_resources_view		3501166						
ANR	3501441	Symbol	m_collection		3501166						
ANR	3501442	Symbol	D_ALWAYS		3501166						
ANR	3501443	Symbol	m_search_query		3501166						
ANR	3501444	Symbol	m_collection . CreateSubView		3501166						
ANR	3501445	Symbol	& m_collection		3501166						
ANR	3501446	Symbol	m_leases_view . c_str		3501166						
ANR	3501447	Symbol	buf		3501166						
ANR	3501448	Symbol	m_collection . InitializeFromLog		3501166						
ANR	3501449	Symbol	rank		3501166						
ANR	3501450	Symbol	constraint		3501166						
ANR	3501451	Symbol	expr		3501166						
ANR	3501452	Symbol	m_resources_view . c_str		3501166						
ANR	3501453	Symbol	m_leases_view		3501166						
ANR	3501454	Function	LeaseManagerResources :: restoreLeases	168:0:4263:8366							
ANR	3501455	FunctionDef	LeaseManagerResources :: restoreLeases ()		3501454	0					
ANR	3501456	CompoundStatement		170:0:4312:8366	3501454	0					
ANR	3501457	IdentifierDeclStatement	const classad :: View * view = m_collection . GetView ( m_leases_view ) ;	173:4:4356:4421	3501454	0	True				
ANR	3501458	IdentifierDecl	* view = m_collection . GetView ( m_leases_view )		3501454	0					
ANR	3501459	IdentifierDeclType	const classad :: View *		3501454	0					
ANR	3501460	Identifier	view		3501454	1					
ANR	3501461	AssignmentExpression	* view = m_collection . GetView ( m_leases_view )		3501454	2		=			
ANR	3501462	Identifier	view		3501454	0					
ANR	3501463	CallExpression	m_collection . GetView ( m_leases_view )		3501454	1					
ANR	3501464	Callee	m_collection . GetView		3501454	0					
ANR	3501465	MemberAccess	m_collection . GetView		3501454	0					
ANR	3501466	Identifier	m_collection		3501454	0					
ANR	3501467	Identifier	GetView		3501454	1					
ANR	3501468	ArgumentList	m_leases_view		3501454	1					
ANR	3501469	Argument	m_leases_view		3501454	0					
ANR	3501470	Identifier	m_leases_view		3501454	0					
ANR	3501471	IdentifierDeclStatement	"int leases_restored = 0 , bad_leases = 0 ;"	174:1:4424:4464	3501454	1	True				
ANR	3501472	IdentifierDecl	leases_restored = 0		3501454	0					
ANR	3501473	IdentifierDeclType	int		3501454	0					
ANR	3501474	Identifier	leases_restored		3501454	1					
ANR	3501475	AssignmentExpression	leases_restored = 0		3501454	2		=			
ANR	3501476	Identifier	leases_restored		3501454	0					
ANR	3501477	PrimaryExpression	0		3501454	1					
ANR	3501478	IdentifierDecl	bad_leases = 0		3501454	1					
ANR	3501479	IdentifierDeclType	int		3501454	0					
ANR	3501480	Identifier	bad_leases		3501454	1					
ANR	3501481	AssignmentExpression	bad_leases = 0		3501454	2		=			
ANR	3501482	Identifier	bad_leases		3501454	0					
ANR	3501483	PrimaryExpression	0		3501454	1					
ANR	3501484	IdentifierDeclStatement	"int num_lease_ads = 0 , num_lease_states = 0 ;"	175:1:4467:4511	3501454	2	True				
ANR	3501485	IdentifierDecl	num_lease_ads = 0		3501454	0					
ANR	3501486	IdentifierDeclType	int		3501454	0					
ANR	3501487	Identifier	num_lease_ads		3501454	1					
ANR	3501488	AssignmentExpression	num_lease_ads = 0		3501454	2		=			
ANR	3501489	Identifier	num_lease_ads		3501454	0					
ANR	3501490	PrimaryExpression	0		3501454	1					
ANR	3501491	IdentifierDecl	num_lease_states = 0		3501454	1					
ANR	3501492	IdentifierDeclType	int		3501454	0					
ANR	3501493	Identifier	num_lease_states		3501454	1					
ANR	3501494	AssignmentExpression	num_lease_states = 0		3501454	2		=			
ANR	3501495	Identifier	num_lease_states		3501454	0					
ANR	3501496	PrimaryExpression	0		3501454	1					
ANR	3501497	IdentifierDeclStatement	DebugTimerDprintf timer ;	176:1:4514:4537	3501454	3	True				
ANR	3501498	IdentifierDecl	timer		3501454	0					
ANR	3501499	IdentifierDeclType	DebugTimerDprintf		3501454	0					
ANR	3501500	Identifier	timer		3501454	1					
ANR	3501501	ForStatement	for ( classad :: View :: const_iterator view_iter = view -> begin ( ) ; view_iter != view -> end ( ) ; view_iter ++ )		3501454	4					
ANR	3501502	ForInit	classad :: View :: const_iterator view_iter = view -> begin ( ) ;	177:10:4549:4604	3501454	0	True				
ANR	3501503	IdentifierDeclStatement	classad :: View :: const_iterator view_iter = view -> begin ( ) ;		3501454	0					
ANR	3501504	IdentifierDecl	view_iter = view -> begin ( )		3501454	0					
ANR	3501505	IdentifierDeclType	classad :: View :: const_iterator		3501454	0					
ANR	3501506	Identifier	view_iter		3501454	1					
ANR	3501507	AssignmentExpression	view_iter = view -> begin ( )		3501454	2		=			
ANR	3501508	Identifier	view_iter		3501454	0					
ANR	3501509	CallExpression	view -> begin ( )		3501454	1					
ANR	3501510	Callee	view -> begin		3501454	0					
ANR	3501511	PtrMemberAccess	view -> begin		3501454	0					
ANR	3501512	Identifier	view		3501454	0					
ANR	3501513	Identifier	begin		3501454	1					
ANR	3501514	ArgumentList			3501454	1					
ANR	3501515	Condition	view_iter != view -> end ( )	178:4:4610:4633	3501454	1	True				
ANR	3501516	EqualityExpression	view_iter != view -> end ( )		3501454	0		!=			
ANR	3501517	Identifier	view_iter		3501454	0					
ANR	3501518	CallExpression	view -> end ( )		3501454	1					
ANR	3501519	Callee	view -> end		3501454	0					
ANR	3501520	PtrMemberAccess	view -> end		3501454	0					
ANR	3501521	Identifier	view		3501454	0					
ANR	3501522	Identifier	end		3501454	1					
ANR	3501523	ArgumentList			3501454	1					
ANR	3501524	PostIncDecOperationExpression	view_iter ++	179:4:4640:4650	3501454	2	True				
ANR	3501525	Identifier	view_iter		3501454	0					
ANR	3501526	IncDec	++		3501454	1					
ANR	3501527	CompoundStatement		47:2:1301:1349	3501454	3					
ANR	3501528	IdentifierDeclStatement	string key ;	180:8:4664:4674	3501454	0	True				
ANR	3501529	IdentifierDecl	key		3501454	0					
ANR	3501530	IdentifierDeclType	string		3501454	0					
ANR	3501531	Identifier	key		3501454	1					
ANR	3501532	ExpressionStatement	view_iter -> GetKey ( key )	181:8:4684:4708	3501454	1	True				
ANR	3501533	CallExpression	view_iter -> GetKey ( key )		3501454	0					
ANR	3501534	Callee	view_iter -> GetKey		3501454	0					
ANR	3501535	PtrMemberAccess	view_iter -> GetKey		3501454	0					
ANR	3501536	Identifier	view_iter		3501454	0					
ANR	3501537	Identifier	GetKey		3501454	1					
ANR	3501538	ArgumentList	key		3501454	1					
ANR	3501539	Argument	key		3501454	0					
ANR	3501540	Identifier	key		3501454	0					
ANR	3501541	ExpressionStatement	num_lease_ads ++	182:2:4712:4727	3501454	2	True				
ANR	3501542	PostIncDecOperationExpression	num_lease_ads ++		3501454	0					
ANR	3501543	Identifier	num_lease_ads		3501454	0					
ANR	3501544	IncDec	++		3501454	1					
ANR	3501545	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Restoring %s\\n"" , key . c_str ( ) )"	185:2:4756:4809	3501454	3	True				
ANR	3501546	CallExpression	"dprintf ( D_FULLDEBUG , ""Restoring %s\\n"" , key . c_str ( ) )"		3501454	0					
ANR	3501547	Callee	dprintf		3501454	0					
ANR	3501548	Identifier	dprintf		3501454	0					
ANR	3501549	ArgumentList	D_FULLDEBUG		3501454	1					
ANR	3501550	Argument	D_FULLDEBUG		3501454	0					
ANR	3501551	Identifier	D_FULLDEBUG		3501454	0					
ANR	3501552	Argument	"""Restoring %s\\n"""		3501454	1					
ANR	3501553	PrimaryExpression	"""Restoring %s\\n"""		3501454	0					
ANR	3501554	Argument	key . c_str ( )		3501454	2					
ANR	3501555	CallExpression	key . c_str ( )		3501454	0					
ANR	3501556	Callee	key . c_str		3501454	0					
ANR	3501557	MemberAccess	key . c_str		3501454	0					
ANR	3501558	Identifier	key		3501454	0					
ANR	3501559	Identifier	c_str		3501454	1					
ANR	3501560	ArgumentList			3501454	1					
ANR	3501561	IdentifierDeclStatement	classad :: ClassAd * leases_ad = m_collection . GetClassAd ( key ) ;	186:2:4813:4873	3501454	4	True				
ANR	3501562	IdentifierDecl	* leases_ad = m_collection . GetClassAd ( key )		3501454	0					
ANR	3501563	IdentifierDeclType	classad :: ClassAd *		3501454	0					
ANR	3501564	Identifier	leases_ad		3501454	1					
ANR	3501565	AssignmentExpression	* leases_ad = m_collection . GetClassAd ( key )		3501454	2		=			
ANR	3501566	Identifier	leases_ad		3501454	0					
ANR	3501567	CallExpression	m_collection . GetClassAd ( key )		3501454	1					
ANR	3501568	Callee	m_collection . GetClassAd		3501454	0					
ANR	3501569	MemberAccess	m_collection . GetClassAd		3501454	0					
ANR	3501570	Identifier	m_collection		3501454	0					
ANR	3501571	Identifier	GetClassAd		3501454	1					
ANR	3501572	ArgumentList	key		3501454	1					
ANR	3501573	Argument	key		3501454	0					
ANR	3501574	Identifier	key		3501454	0					
ANR	3501575	IfStatement	if ( ! leases_ad )		3501454	5					
ANR	3501576	Condition	! leases_ad	187:7:4882:4891	3501454	0	True				
ANR	3501577	UnaryOperationExpression	! leases_ad		3501454	0					
ANR	3501578	UnaryOperator	!		3501454	0					
ANR	3501579	Identifier	leases_ad		3501454	1					
ANR	3501580	CompoundStatement		18:20:582:582	3501454	1					
ANR	3501581	ExpressionStatement	"dprintf ( D_ALWAYS , ""restore: No ad for key '%s'\\n"" , key . c_str ( ) )"	188:3:4900:4971	3501454	0	True				
ANR	3501582	CallExpression	"dprintf ( D_ALWAYS , ""restore: No ad for key '%s'\\n"" , key . c_str ( ) )"		3501454	0					
ANR	3501583	Callee	dprintf		3501454	0					
ANR	3501584	Identifier	dprintf		3501454	0					
ANR	3501585	ArgumentList	D_ALWAYS		3501454	1					
ANR	3501586	Argument	D_ALWAYS		3501454	0					
ANR	3501587	Identifier	D_ALWAYS		3501454	0					
ANR	3501588	Argument	"""restore: No ad for key '%s'\\n"""		3501454	1					
ANR	3501589	PrimaryExpression	"""restore: No ad for key '%s'\\n"""		3501454	0					
ANR	3501590	Argument	key . c_str ( )		3501454	2					
ANR	3501591	CallExpression	key . c_str ( )		3501454	0					
ANR	3501592	Callee	key . c_str		3501454	0					
ANR	3501593	MemberAccess	key . c_str		3501454	0					
ANR	3501594	Identifier	key		3501454	0					
ANR	3501595	Identifier	c_str		3501454	1					
ANR	3501596	ArgumentList			3501454	1					
ANR	3501597	ExpressionStatement	bad_leases ++	190:3:4976:4988	3501454	1	True				
ANR	3501598	PostIncDecOperationExpression	bad_leases ++		3501454	0					
ANR	3501599	Identifier	bad_leases		3501454	0					
ANR	3501600	IncDec	++		3501454	1					
ANR	3501601	ContinueStatement	continue ;	191:3:4993:5001	3501454	2	True				
ANR	3501602	IdentifierDeclStatement	int lease_count ;	195:2:5074:5090	3501454	6	True				
ANR	3501603	IdentifierDecl	lease_count		3501454	0					
ANR	3501604	IdentifierDeclType	int		3501454	0					
ANR	3501605	Identifier	lease_count		3501454	1					
ANR	3501606	IfStatement	"if ( ! leases_ad -> EvaluateAttrInt ( ""LeaseCount"" , lease_count ) )"		3501454	7					
ANR	3501607	Condition	"! leases_ad -> EvaluateAttrInt ( ""LeaseCount"" , lease_count )"	196:7:5099:5154	3501454	0	True				
ANR	3501608	UnaryOperationExpression	"! leases_ad -> EvaluateAttrInt ( ""LeaseCount"" , lease_count )"		3501454	0					
ANR	3501609	UnaryOperator	!		3501454	0					
ANR	3501610	CallExpression	"leases_ad -> EvaluateAttrInt ( ""LeaseCount"" , lease_count )"		3501454	1					
ANR	3501611	Callee	leases_ad -> EvaluateAttrInt		3501454	0					
ANR	3501612	PtrMemberAccess	leases_ad -> EvaluateAttrInt		3501454	0					
ANR	3501613	Identifier	leases_ad		3501454	0					
ANR	3501614	Identifier	EvaluateAttrInt		3501454	1					
ANR	3501615	ArgumentList	"""LeaseCount"""		3501454	1					
ANR	3501616	Argument	"""LeaseCount"""		3501454	0					
ANR	3501617	PrimaryExpression	"""LeaseCount"""		3501454	0					
ANR	3501618	Argument	lease_count		3501454	1					
ANR	3501619	Identifier	lease_count		3501454	0					
ANR	3501620	CompoundStatement		27:66:845:845	3501454	1					
ANR	3501621	ExpressionStatement	"dprintf ( D_ALWAYS , ""restore: Lease count missing for '%s'\\n"" , key . c_str ( ) )"	197:3:5163:5244	3501454	0	True				
ANR	3501622	CallExpression	"dprintf ( D_ALWAYS , ""restore: Lease count missing for '%s'\\n"" , key . c_str ( ) )"		3501454	0					
ANR	3501623	Callee	dprintf		3501454	0					
ANR	3501624	Identifier	dprintf		3501454	0					
ANR	3501625	ArgumentList	D_ALWAYS		3501454	1					
ANR	3501626	Argument	D_ALWAYS		3501454	0					
ANR	3501627	Identifier	D_ALWAYS		3501454	0					
ANR	3501628	Argument	"""restore: Lease count missing for '%s'\\n"""		3501454	1					
ANR	3501629	PrimaryExpression	"""restore: Lease count missing for '%s'\\n"""		3501454	0					
ANR	3501630	Argument	key . c_str ( )		3501454	2					
ANR	3501631	CallExpression	key . c_str ( )		3501454	0					
ANR	3501632	Callee	key . c_str		3501454	0					
ANR	3501633	MemberAccess	key . c_str		3501454	0					
ANR	3501634	Identifier	key		3501454	0					
ANR	3501635	Identifier	c_str		3501454	1					
ANR	3501636	ArgumentList			3501454	1					
ANR	3501637	ExpressionStatement	bad_leases ++	199:3:5249:5261	3501454	1	True				
ANR	3501638	PostIncDecOperationExpression	bad_leases ++		3501454	0					
ANR	3501639	Identifier	bad_leases		3501454	0					
ANR	3501640	IncDec	++		3501454	1					
ANR	3501641	ContinueStatement	continue ;	200:3:5266:5274	3501454	2	True				
ANR	3501642	IfStatement	if ( ! lease_count )		3501454	8					
ANR	3501643	Condition	! lease_count	202:7:5287:5298	3501454	0	True				
ANR	3501644	UnaryOperationExpression	! lease_count		3501454	0					
ANR	3501645	UnaryOperator	!		3501454	0					
ANR	3501646	Identifier	lease_count		3501454	1					
ANR	3501647	CompoundStatement		33:22:989:989	3501454	1					
ANR	3501648	ContinueStatement	continue ;	203:3:5307:5315	3501454	0	True				
ANR	3501649	IdentifierDeclStatement	classad :: ExprList * lease_states ;	207:2:5358:5389	3501454	9	True				
ANR	3501650	IdentifierDecl	* lease_states		3501454	0					
ANR	3501651	IdentifierDeclType	classad :: ExprList *		3501454	0					
ANR	3501652	Identifier	lease_states		3501454	1					
ANR	3501653	IfStatement	"if ( ! leases_ad -> EvaluateAttrList ( ""States"" , lease_states ) )"		3501454	10					
ANR	3501654	Condition	"! leases_ad -> EvaluateAttrList ( ""States"" , lease_states )"	208:7:5398:5451	3501454	0	True				
ANR	3501655	UnaryOperationExpression	"! leases_ad -> EvaluateAttrList ( ""States"" , lease_states )"		3501454	0					
ANR	3501656	UnaryOperator	!		3501454	0					
ANR	3501657	CallExpression	"leases_ad -> EvaluateAttrList ( ""States"" , lease_states )"		3501454	1					
ANR	3501658	Callee	leases_ad -> EvaluateAttrList		3501454	0					
ANR	3501659	PtrMemberAccess	leases_ad -> EvaluateAttrList		3501454	0					
ANR	3501660	Identifier	leases_ad		3501454	0					
ANR	3501661	Identifier	EvaluateAttrList		3501454	1					
ANR	3501662	ArgumentList	"""States"""		3501454	1					
ANR	3501663	Argument	"""States"""		3501454	0					
ANR	3501664	PrimaryExpression	"""States"""		3501454	0					
ANR	3501665	Argument	lease_states		3501454	1					
ANR	3501666	Identifier	lease_states		3501454	0					
ANR	3501667	CompoundStatement		39:64:1142:1142	3501454	1					
ANR	3501668	ExpressionStatement	"dprintf ( D_ALWAYS , ""restore: No lease states for %s\\n"" , key . c_str ( ) )"	209:3:5460:5535	3501454	0	True				
ANR	3501669	CallExpression	"dprintf ( D_ALWAYS , ""restore: No lease states for %s\\n"" , key . c_str ( ) )"		3501454	0					
ANR	3501670	Callee	dprintf		3501454	0					
ANR	3501671	Identifier	dprintf		3501454	0					
ANR	3501672	ArgumentList	D_ALWAYS		3501454	1					
ANR	3501673	Argument	D_ALWAYS		3501454	0					
ANR	3501674	Identifier	D_ALWAYS		3501454	0					
ANR	3501675	Argument	"""restore: No lease states for %s\\n"""		3501454	1					
ANR	3501676	PrimaryExpression	"""restore: No lease states for %s\\n"""		3501454	0					
ANR	3501677	Argument	key . c_str ( )		3501454	2					
ANR	3501678	CallExpression	key . c_str ( )		3501454	0					
ANR	3501679	Callee	key . c_str		3501454	0					
ANR	3501680	MemberAccess	key . c_str		3501454	0					
ANR	3501681	Identifier	key		3501454	0					
ANR	3501682	Identifier	c_str		3501454	1					
ANR	3501683	ArgumentList			3501454	1					
ANR	3501684	ExpressionStatement	bad_leases ++	211:3:5540:5552	3501454	1	True				
ANR	3501685	PostIncDecOperationExpression	bad_leases ++		3501454	0					
ANR	3501686	Identifier	bad_leases		3501454	0					
ANR	3501687	IncDec	++		3501454	1					
ANR	3501688	ContinueStatement	continue ;	212:3:5557:5565	3501454	2	True				
ANR	3501689	IdentifierDeclStatement	vector < classad :: ExprTree * > :: iterator lease_iter ;	216:2:5614:5662	3501454	11	True				
ANR	3501690	IdentifierDecl	lease_iter		3501454	0					
ANR	3501691	IdentifierDeclType	vector < classad :: ExprTree * > :: iterator		3501454	0					
ANR	3501692	Identifier	lease_iter		3501454	1					
ANR	3501693	ForStatement	for ( lease_iter = lease_states -> begin ( ) ; lease_iter != lease_states -> end ( ) ; lease_iter ++ )		3501454	12					
ANR	3501694	ForInit	lease_iter = lease_states -> begin ( ) ;	217:8:5672:5707	3501454	0	True				
ANR	3501695	AssignmentExpression	lease_iter = lease_states -> begin ( )		3501454	0		=			
ANR	3501696	Identifier	lease_iter		3501454	0					
ANR	3501697	CallExpression	lease_states -> begin ( )		3501454	1					
ANR	3501698	Callee	lease_states -> begin		3501454	0					
ANR	3501699	PtrMemberAccess	lease_states -> begin		3501454	0					
ANR	3501700	Identifier	lease_states		3501454	0					
ANR	3501701	Identifier	begin		3501454	1					
ANR	3501702	ArgumentList			3501454	1					
ANR	3501703	Condition	lease_iter != lease_states -> end ( )	218:5:5714:5747	3501454	1	True				
ANR	3501704	EqualityExpression	lease_iter != lease_states -> end ( )		3501454	0		!=			
ANR	3501705	Identifier	lease_iter		3501454	0					
ANR	3501706	CallExpression	lease_states -> end ( )		3501454	1					
ANR	3501707	Callee	lease_states -> end		3501454	0					
ANR	3501708	PtrMemberAccess	lease_states -> end		3501454	0					
ANR	3501709	Identifier	lease_states		3501454	0					
ANR	3501710	Identifier	end		3501454	1					
ANR	3501711	ArgumentList			3501454	1					
ANR	3501712	PostIncDecOperationExpression	lease_iter ++	219:5:5755:5766	3501454	2	True				
ANR	3501713	Identifier	lease_iter		3501454	0					
ANR	3501714	IncDec	++		3501454	1					
ANR	3501715	CompoundStatement		88:3:2652:2696	3501454	3					
ANR	3501716	IdentifierDeclStatement	classad :: ExprTree * state_expr = * lease_iter ;	220:3:5775:5818	3501454	0	True				
ANR	3501717	IdentifierDecl	* state_expr = * lease_iter		3501454	0					
ANR	3501718	IdentifierDeclType	classad :: ExprTree *		3501454	0					
ANR	3501719	Identifier	state_expr		3501454	1					
ANR	3501720	AssignmentExpression	* state_expr = * lease_iter		3501454	2		=			
ANR	3501721	Identifier	state_expr		3501454	0					
ANR	3501722	UnaryOperationExpression	* lease_iter		3501454	1					
ANR	3501723	UnaryOperator	*		3501454	0					
ANR	3501724	Identifier	lease_iter		3501454	1					
ANR	3501725	ExpressionStatement	num_lease_states ++	221:3:5823:5841	3501454	1	True				
ANR	3501726	PostIncDecOperationExpression	num_lease_states ++		3501454	0					
ANR	3501727	Identifier	num_lease_states		3501454	0					
ANR	3501728	IncDec	++		3501454	1					
ANR	3501729	IfStatement	if ( state_expr -> GetKind ( ) != classad :: ExprTree :: CLASSAD_NODE )		3501454	2					
ANR	3501730	Condition	state_expr -> GetKind ( ) != classad :: ExprTree :: CLASSAD_NODE	222:8:5851:5906	3501454	0	True				
ANR	3501731	EqualityExpression	state_expr -> GetKind ( ) != classad :: ExprTree :: CLASSAD_NODE		3501454	0		!=			
ANR	3501732	CallExpression	state_expr -> GetKind ( )		3501454	0					
ANR	3501733	Callee	state_expr -> GetKind		3501454	0					
ANR	3501734	PtrMemberAccess	state_expr -> GetKind		3501454	0					
ANR	3501735	Identifier	state_expr		3501454	0					
ANR	3501736	Identifier	GetKind		3501454	1					
ANR	3501737	ArgumentList			3501454	1					
ANR	3501738	Identifier	classad :: ExprTree :: CLASSAD_NODE		3501454	1					
ANR	3501739	CompoundStatement		53:67:1597:1597	3501454	1					
ANR	3501740	ExpressionStatement	"dprintf ( D_ALWAYS , ""restore: states isn't a ClassAd in %s!\\n"" , key . c_str ( ) )"	223:4:5916:6006	3501454	0	True				
ANR	3501741	CallExpression	"dprintf ( D_ALWAYS , ""restore: states isn't a ClassAd in %s!\\n"" , key . c_str ( ) )"		3501454	0					
ANR	3501742	Callee	dprintf		3501454	0					
ANR	3501743	Identifier	dprintf		3501454	0					
ANR	3501744	ArgumentList	D_ALWAYS		3501454	1					
ANR	3501745	Argument	D_ALWAYS		3501454	0					
ANR	3501746	Identifier	D_ALWAYS		3501454	0					
ANR	3501747	Argument	"""restore: states isn't a ClassAd in %s!\\n"""		3501454	1					
ANR	3501748	PrimaryExpression	"""restore: states isn't a ClassAd in %s!\\n"""		3501454	0					
ANR	3501749	Argument	key . c_str ( )		3501454	2					
ANR	3501750	CallExpression	key . c_str ( )		3501454	0					
ANR	3501751	Callee	key . c_str		3501454	0					
ANR	3501752	MemberAccess	key . c_str		3501454	0					
ANR	3501753	Identifier	key		3501454	0					
ANR	3501754	Identifier	c_str		3501454	1					
ANR	3501755	ArgumentList			3501454	1					
ANR	3501756	ExpressionStatement	bad_leases ++	226:4:6012:6024	3501454	1	True				
ANR	3501757	PostIncDecOperationExpression	bad_leases ++		3501454	0					
ANR	3501758	Identifier	bad_leases		3501454	0					
ANR	3501759	IncDec	++		3501454	1					
ANR	3501760	ContinueStatement	continue ;	227:4:6030:6038	3501454	2	True				
ANR	3501761	IdentifierDeclStatement	classad :: ClassAd * ad = ( classad :: ClassAd * ) state_expr ;	231:3:6102:6156	3501454	3	True				
ANR	3501762	IdentifierDecl	* ad = ( classad :: ClassAd * ) state_expr		3501454	0					
ANR	3501763	IdentifierDeclType	classad :: ClassAd *		3501454	0					
ANR	3501764	Identifier	ad		3501454	1					
ANR	3501765	AssignmentExpression	* ad = ( classad :: ClassAd * ) state_expr		3501454	2		=			
ANR	3501766	Identifier	ad		3501454	0					
ANR	3501767	CastExpression	( classad :: ClassAd * ) state_expr		3501454	1					
ANR	3501768	CastTarget	classad :: ClassAd *		3501454	0					
ANR	3501769	Identifier	state_expr		3501454	1					
ANR	3501770	IdentifierDeclStatement	int lease_number = 01 ;	232:3:6161:6183	3501454	4	True				
ANR	3501771	IdentifierDecl	lease_number = 01		3501454	0					
ANR	3501772	IdentifierDeclType	int		3501454	0					
ANR	3501773	Identifier	lease_number		3501454	1					
ANR	3501774	AssignmentExpression	lease_number = 01		3501454	2		=			
ANR	3501775	Identifier	lease_number		3501454	0					
ANR	3501776	PrimaryExpression	01		3501454	1					
ANR	3501777	ExpressionStatement	"ad -> EvaluateAttrInt ( ""LeaseNumber"" , lease_number )"	233:3:6188:6238	3501454	5	True				
ANR	3501778	CallExpression	"ad -> EvaluateAttrInt ( ""LeaseNumber"" , lease_number )"		3501454	0					
ANR	3501779	Callee	ad -> EvaluateAttrInt		3501454	0					
ANR	3501780	PtrMemberAccess	ad -> EvaluateAttrInt		3501454	0					
ANR	3501781	Identifier	ad		3501454	0					
ANR	3501782	Identifier	EvaluateAttrInt		3501454	1					
ANR	3501783	ArgumentList	"""LeaseNumber"""		3501454	1					
ANR	3501784	Argument	"""LeaseNumber"""		3501454	0					
ANR	3501785	PrimaryExpression	"""LeaseNumber"""		3501454	0					
ANR	3501786	Argument	lease_number		3501454	1					
ANR	3501787	Identifier	lease_number		3501454	0					
ANR	3501788	IdentifierDeclStatement	bool lease_used = false ;	236:3:6262:6285	3501454	6	True				
ANR	3501789	IdentifierDecl	lease_used = false		3501454	0					
ANR	3501790	IdentifierDeclType	bool		3501454	0					
ANR	3501791	Identifier	lease_used		3501454	1					
ANR	3501792	AssignmentExpression	lease_used = false		3501454	2		=			
ANR	3501793	Identifier	false		3501454	0					
ANR	3501794	Identifier	false		3501454	1					
ANR	3501795	IfStatement	"if ( ! ad -> EvaluateAttrBool ( ""LeaseUsed"" , lease_used ) )"		3501454	7					
ANR	3501796	Condition	"! ad -> EvaluateAttrBool ( ""LeaseUsed"" , lease_used )"	237:8:6295:6342	3501454	0	True				
ANR	3501797	UnaryOperationExpression	"! ad -> EvaluateAttrBool ( ""LeaseUsed"" , lease_used )"		3501454	0					
ANR	3501798	UnaryOperator	!		3501454	0					
ANR	3501799	CallExpression	"ad -> EvaluateAttrBool ( ""LeaseUsed"" , lease_used )"		3501454	1					
ANR	3501800	Callee	ad -> EvaluateAttrBool		3501454	0					
ANR	3501801	PtrMemberAccess	ad -> EvaluateAttrBool		3501454	0					
ANR	3501802	Identifier	ad		3501454	0					
ANR	3501803	Identifier	EvaluateAttrBool		3501454	1					
ANR	3501804	ArgumentList	"""LeaseUsed"""		3501454	1					
ANR	3501805	Argument	"""LeaseUsed"""		3501454	0					
ANR	3501806	PrimaryExpression	"""LeaseUsed"""		3501454	0					
ANR	3501807	Argument	lease_used		3501454	1					
ANR	3501808	Identifier	lease_used		3501454	0					
ANR	3501809	CompoundStatement		68:59:2033:2033	3501454	1					
ANR	3501810	ExpressionStatement	"dprintf ( D_ALWAYS , ""restore: LeaseUsed missing for '%s'\\n"" , key . c_str ( ) )"	238:4:6352:6432	3501454	0	True				
ANR	3501811	CallExpression	"dprintf ( D_ALWAYS , ""restore: LeaseUsed missing for '%s'\\n"" , key . c_str ( ) )"		3501454	0					
ANR	3501812	Callee	dprintf		3501454	0					
ANR	3501813	Identifier	dprintf		3501454	0					
ANR	3501814	ArgumentList	D_ALWAYS		3501454	1					
ANR	3501815	Argument	D_ALWAYS		3501454	0					
ANR	3501816	Identifier	D_ALWAYS		3501454	0					
ANR	3501817	Argument	"""restore: LeaseUsed missing for '%s'\\n"""		3501454	1					
ANR	3501818	PrimaryExpression	"""restore: LeaseUsed missing for '%s'\\n"""		3501454	0					
ANR	3501819	Argument	key . c_str ( )		3501454	2					
ANR	3501820	CallExpression	key . c_str ( )		3501454	0					
ANR	3501821	Callee	key . c_str		3501454	0					
ANR	3501822	MemberAccess	key . c_str		3501454	0					
ANR	3501823	Identifier	key		3501454	0					
ANR	3501824	Identifier	c_str		3501454	1					
ANR	3501825	ArgumentList			3501454	1					
ANR	3501826	IfStatement	if ( ! lease_used )		3501454	8					
ANR	3501827	Condition	! lease_used	241:7:6446:6457	3501454	0	True				
ANR	3501828	UnaryOperationExpression	! lease_used		3501454	0					
ANR	3501829	UnaryOperator	!		3501454	0					
ANR	3501830	Identifier	lease_used		3501454	1					
ANR	3501831	CompoundStatement		72:22:2148:2148	3501454	1					
ANR	3501832	ContinueStatement	continue ;	242:4:6467:6475	3501454	0	True				
ANR	3501833	IdentifierDeclStatement	"string resource , lease_id ;"	246:3:6537:6562	3501454	9	True				
ANR	3501834	IdentifierDecl	resource		3501454	0					
ANR	3501835	IdentifierDeclType	string		3501454	0					
ANR	3501836	Identifier	resource		3501454	1					
ANR	3501837	IdentifierDecl	lease_id		3501454	1					
ANR	3501838	IdentifierDeclType	string		3501454	0					
ANR	3501839	Identifier	lease_id		3501454	1					
ANR	3501840	IdentifierDeclStatement	"int start_time , duration ;"	247:3:6567:6592	3501454	10	True				
ANR	3501841	IdentifierDecl	start_time		3501454	0					
ANR	3501842	IdentifierDeclType	int		3501454	0					
ANR	3501843	Identifier	start_time		3501454	1					
ANR	3501844	IdentifierDecl	duration		3501454	1					
ANR	3501845	IdentifierDeclType	int		3501454	0					
ANR	3501846	Identifier	duration		3501454	1					
ANR	3501847	IfStatement	"if ( ! ad -> EvaluateAttrString ( ""ResourceName"" , resource ) || ! ad -> EvaluateAttrString ( ""LeaseId"" , lease_id ) || ! ad -> EvaluateAttrInt ( ""LeaseStartTime"" , start_time ) || ! ad -> EvaluateAttrInt ( ""LeaseDuration"" , duration ) )"		3501454	11					
ANR	3501848	Condition	"! ad -> EvaluateAttrString ( ""ResourceName"" , resource ) || ! ad -> EvaluateAttrString ( ""LeaseId"" , lease_id ) || ! ad -> EvaluateAttrInt ( ""LeaseStartTime"" , start_time ) || ! ad -> EvaluateAttrInt ( ""LeaseDuration"" , duration )"	248:8:6602:6832	3501454	0	True				
ANR	3501849	OrExpression	"! ad -> EvaluateAttrString ( ""ResourceName"" , resource ) || ! ad -> EvaluateAttrString ( ""LeaseId"" , lease_id ) || ! ad -> EvaluateAttrInt ( ""LeaseStartTime"" , start_time ) || ! ad -> EvaluateAttrInt ( ""LeaseDuration"" , duration )"		3501454	0		||			
ANR	3501850	UnaryOperationExpression	"! ad -> EvaluateAttrString ( ""ResourceName"" , resource )"		3501454	0					
ANR	3501851	UnaryOperator	!		3501454	0					
ANR	3501852	CallExpression	"ad -> EvaluateAttrString ( ""ResourceName"" , resource )"		3501454	1					
ANR	3501853	Callee	ad -> EvaluateAttrString		3501454	0					
ANR	3501854	PtrMemberAccess	ad -> EvaluateAttrString		3501454	0					
ANR	3501855	Identifier	ad		3501454	0					
ANR	3501856	Identifier	EvaluateAttrString		3501454	1					
ANR	3501857	ArgumentList	"""ResourceName"""		3501454	1					
ANR	3501858	Argument	"""ResourceName"""		3501454	0					
ANR	3501859	PrimaryExpression	"""ResourceName"""		3501454	0					
ANR	3501860	Argument	resource		3501454	1					
ANR	3501861	Identifier	resource		3501454	0					
ANR	3501862	OrExpression	"! ad -> EvaluateAttrString ( ""LeaseId"" , lease_id ) || ! ad -> EvaluateAttrInt ( ""LeaseStartTime"" , start_time ) || ! ad -> EvaluateAttrInt ( ""LeaseDuration"" , duration )"		3501454	1		||			
ANR	3501863	UnaryOperationExpression	"! ad -> EvaluateAttrString ( ""LeaseId"" , lease_id )"		3501454	0					
ANR	3501864	UnaryOperator	!		3501454	0					
ANR	3501865	CallExpression	"ad -> EvaluateAttrString ( ""LeaseId"" , lease_id )"		3501454	1					
ANR	3501866	Callee	ad -> EvaluateAttrString		3501454	0					
ANR	3501867	PtrMemberAccess	ad -> EvaluateAttrString		3501454	0					
ANR	3501868	Identifier	ad		3501454	0					
ANR	3501869	Identifier	EvaluateAttrString		3501454	1					
ANR	3501870	ArgumentList	"""LeaseId"""		3501454	1					
ANR	3501871	Argument	"""LeaseId"""		3501454	0					
ANR	3501872	PrimaryExpression	"""LeaseId"""		3501454	0					
ANR	3501873	Argument	lease_id		3501454	1					
ANR	3501874	Identifier	lease_id		3501454	0					
ANR	3501875	OrExpression	"! ad -> EvaluateAttrInt ( ""LeaseStartTime"" , start_time ) || ! ad -> EvaluateAttrInt ( ""LeaseDuration"" , duration )"		3501454	1		||			
ANR	3501876	UnaryOperationExpression	"! ad -> EvaluateAttrInt ( ""LeaseStartTime"" , start_time )"		3501454	0					
ANR	3501877	UnaryOperator	!		3501454	0					
ANR	3501878	CallExpression	"ad -> EvaluateAttrInt ( ""LeaseStartTime"" , start_time )"		3501454	1					
ANR	3501879	Callee	ad -> EvaluateAttrInt		3501454	0					
ANR	3501880	PtrMemberAccess	ad -> EvaluateAttrInt		3501454	0					
ANR	3501881	Identifier	ad		3501454	0					
ANR	3501882	Identifier	EvaluateAttrInt		3501454	1					
ANR	3501883	ArgumentList	"""LeaseStartTime"""		3501454	1					
ANR	3501884	Argument	"""LeaseStartTime"""		3501454	0					
ANR	3501885	PrimaryExpression	"""LeaseStartTime"""		3501454	0					
ANR	3501886	Argument	start_time		3501454	1					
ANR	3501887	Identifier	start_time		3501454	0					
ANR	3501888	UnaryOperationExpression	"! ad -> EvaluateAttrInt ( ""LeaseDuration"" , duration )"		3501454	1					
ANR	3501889	UnaryOperator	!		3501454	0					
ANR	3501890	CallExpression	"ad -> EvaluateAttrInt ( ""LeaseDuration"" , duration )"		3501454	1					
ANR	3501891	Callee	ad -> EvaluateAttrInt		3501454	0					
ANR	3501892	PtrMemberAccess	ad -> EvaluateAttrInt		3501454	0					
ANR	3501893	Identifier	ad		3501454	0					
ANR	3501894	Identifier	EvaluateAttrInt		3501454	1					
ANR	3501895	ArgumentList	"""LeaseDuration"""		3501454	1					
ANR	3501896	Argument	"""LeaseDuration"""		3501454	0					
ANR	3501897	PrimaryExpression	"""LeaseDuration"""		3501454	0					
ANR	3501898	Argument	duration		3501454	1					
ANR	3501899	Identifier	duration		3501454	0					
ANR	3501900	CompoundStatement		82:60:2523:2523	3501454	1					
ANR	3501901	ExpressionStatement	"dprintf ( D_ALWAYS , ""restore: Attributes missing for '%s'\\n"" , key . c_str ( ) )"	252:4:6842:6923	3501454	0	True				
ANR	3501902	CallExpression	"dprintf ( D_ALWAYS , ""restore: Attributes missing for '%s'\\n"" , key . c_str ( ) )"		3501454	0					
ANR	3501903	Callee	dprintf		3501454	0					
ANR	3501904	Identifier	dprintf		3501454	0					
ANR	3501905	ArgumentList	D_ALWAYS		3501454	1					
ANR	3501906	Argument	D_ALWAYS		3501454	0					
ANR	3501907	Identifier	D_ALWAYS		3501454	0					
ANR	3501908	Argument	"""restore: Attributes missing for '%s'\\n"""		3501454	1					
ANR	3501909	PrimaryExpression	"""restore: Attributes missing for '%s'\\n"""		3501454	0					
ANR	3501910	Argument	key . c_str ( )		3501454	2					
ANR	3501911	CallExpression	key . c_str ( )		3501454	0					
ANR	3501912	Callee	key . c_str		3501454	0					
ANR	3501913	MemberAccess	key . c_str		3501454	0					
ANR	3501914	Identifier	key		3501454	0					
ANR	3501915	Identifier	c_str		3501454	1					
ANR	3501916	ArgumentList			3501454	1					
ANR	3501917	ExpressionStatement	bad_leases ++	254:4:6929:6941	3501454	1	True				
ANR	3501918	PostIncDecOperationExpression	bad_leases ++		3501454	0					
ANR	3501919	Identifier	bad_leases		3501454	0					
ANR	3501920	IncDec	++		3501454	1					
ANR	3501921	ContinueStatement	continue ;	255:4:6947:6955	3501454	2	True				
ANR	3501922	IdentifierDeclStatement	int expiration_time = start_time + duration ;	257:3:6965:7009	3501454	12	True				
ANR	3501923	IdentifierDecl	expiration_time = start_time + duration		3501454	0					
ANR	3501924	IdentifierDeclType	int		3501454	0					
ANR	3501925	Identifier	expiration_time		3501454	1					
ANR	3501926	AssignmentExpression	expiration_time = start_time + duration		3501454	2		=			
ANR	3501927	Identifier	expiration_time		3501454	0					
ANR	3501928	AdditiveExpression	start_time + duration		3501454	1		+			
ANR	3501929	Identifier	start_time		3501454	0					
ANR	3501930	Identifier	duration		3501454	1					
ANR	3501931	Statement	LeaseManagerLeaseEnt	260:3:7049:7068	3501454	13	True				
ANR	3501932	Statement	*	260:24:7070:7070	3501454	14	True				
ANR	3501933	Statement	lease_ent	260:25:7071:7079	3501454	15	True				
ANR	3501934	Statement	=	260:35:7081:7081	3501454	16	True				
ANR	3501935	Statement	new	260:37:7083:7085	3501454	17	True				
ANR	3501936	ExpressionStatement	LeaseManagerLeaseEnt	260:41:7087:7107	3501454	18	True				
ANR	3501937	Identifier	LeaseManagerLeaseEnt		3501454	0					
ANR	3501938	ExpressionStatement	lease_ent -> m_lease_ad = ad	261:3:7112:7138	3501454	19	True				
ANR	3501939	AssignmentExpression	lease_ent -> m_lease_ad = ad		3501454	0		=			
ANR	3501940	PtrMemberAccess	lease_ent -> m_lease_ad		3501454	0					
ANR	3501941	Identifier	lease_ent		3501454	0					
ANR	3501942	Identifier	m_lease_ad		3501454	1					
ANR	3501943	Identifier	ad		3501454	1					
ANR	3501944	ExpressionStatement	lease_ent -> m_lease_number = lease_number	262:3:7143:7183	3501454	20	True				
ANR	3501945	AssignmentExpression	lease_ent -> m_lease_number = lease_number		3501454	0		=			
ANR	3501946	PtrMemberAccess	lease_ent -> m_lease_number		3501454	0					
ANR	3501947	Identifier	lease_ent		3501454	0					
ANR	3501948	Identifier	m_lease_number		3501454	1					
ANR	3501949	Identifier	lease_number		3501454	1					
ANR	3501950	ExpressionStatement	lease_ent -> m_leases_ad = leases_ad	263:3:7188:7222	3501454	21	True				
ANR	3501951	AssignmentExpression	lease_ent -> m_leases_ad = leases_ad		3501454	0		=			
ANR	3501952	PtrMemberAccess	lease_ent -> m_leases_ad		3501454	0					
ANR	3501953	Identifier	lease_ent		3501454	0					
ANR	3501954	Identifier	m_leases_ad		3501454	1					
ANR	3501955	Identifier	leases_ad		3501454	1					
ANR	3501956	ExpressionStatement	lease_ent -> m_resource_name = resource	264:3:7227:7264	3501454	22	True				
ANR	3501957	AssignmentExpression	lease_ent -> m_resource_name = resource		3501454	0		=			
ANR	3501958	PtrMemberAccess	lease_ent -> m_resource_name		3501454	0					
ANR	3501959	Identifier	lease_ent		3501454	0					
ANR	3501960	Identifier	m_resource_name		3501454	1					
ANR	3501961	Identifier	resource		3501454	1					
ANR	3501962	ExpressionStatement	lease_ent -> m_expiration = expiration_time	265:3:7269:7310	3501454	23	True				
ANR	3501963	AssignmentExpression	lease_ent -> m_expiration = expiration_time		3501454	0		=			
ANR	3501964	PtrMemberAccess	lease_ent -> m_expiration		3501454	0					
ANR	3501965	Identifier	lease_ent		3501454	0					
ANR	3501966	Identifier	m_expiration		3501454	1					
ANR	3501967	Identifier	expiration_time		3501454	1					
ANR	3501968	ExpressionStatement	m_used_leases [ lease_id ] = lease_ent	268:3:7361:7396	3501454	24	True				
ANR	3501969	AssignmentExpression	m_used_leases [ lease_id ] = lease_ent		3501454	0		=			
ANR	3501970	ArrayIndexing	m_used_leases [ lease_id ]		3501454	0					
ANR	3501971	Identifier	m_used_leases		3501454	0					
ANR	3501972	Identifier	lease_id		3501454	1					
ANR	3501973	Identifier	lease_ent		3501454	1					
ANR	3501974	ExpressionStatement	leases_restored ++	269:3:7401:7418	3501454	25	True				
ANR	3501975	PostIncDecOperationExpression	leases_restored ++		3501454	0					
ANR	3501976	Identifier	leases_restored		3501454	0					
ANR	3501977	IncDec	++		3501454	1					
ANR	3501978	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""\\t%3d: %s ads=%p/%p l=%p r=%s i=%s s=%d d=%d e=%d\\n"" , lease_number , ( lease_used ? ""Used  "" : ""Unused"" ) , ad , leases_ad , lease_ent , resource . c_str ( ) , lease_id . c_str ( ) , start_time , duration , expiration_time )"	271:3:7424:7682	3501454	26	True				
ANR	3501979	CallExpression	"dprintf ( D_FULLDEBUG , ""\\t%3d: %s ads=%p/%p l=%p r=%s i=%s s=%d d=%d e=%d\\n"" , lease_number , ( lease_used ? ""Used  "" : ""Unused"" ) , ad , leases_ad , lease_ent , resource . c_str ( ) , lease_id . c_str ( ) , start_time , duration , expiration_time )"		3501454	0					
ANR	3501980	Callee	dprintf		3501454	0					
ANR	3501981	Identifier	dprintf		3501454	0					
ANR	3501982	ArgumentList	D_FULLDEBUG		3501454	1					
ANR	3501983	Argument	D_FULLDEBUG		3501454	0					
ANR	3501984	Identifier	D_FULLDEBUG		3501454	0					
ANR	3501985	Argument	"""\\t%3d: %s ads=%p/%p l=%p r=%s i=%s s=%d d=%d e=%d\\n"""		3501454	1					
ANR	3501986	PrimaryExpression	"""\\t%3d: %s ads=%p/%p l=%p r=%s i=%s s=%d d=%d e=%d\\n"""		3501454	0					
ANR	3501987	Argument	lease_number		3501454	2					
ANR	3501988	Identifier	lease_number		3501454	0					
ANR	3501989	Argument	"lease_used ? ""Used  "" : ""Unused"""		3501454	3					
ANR	3501990	ConditionalExpression	"lease_used ? ""Used  "" : ""Unused"""		3501454	0					
ANR	3501991	Condition	lease_used		3501454	0					
ANR	3501992	Identifier	lease_used		3501454	0					
ANR	3501993	PrimaryExpression	"""Used  """		3501454	1					
ANR	3501994	PrimaryExpression	"""Unused"""		3501454	2					
ANR	3501995	Argument	ad		3501454	4					
ANR	3501996	Identifier	ad		3501454	0					
ANR	3501997	Argument	leases_ad		3501454	5					
ANR	3501998	Identifier	leases_ad		3501454	0					
ANR	3501999	Argument	lease_ent		3501454	6					
ANR	3502000	Identifier	lease_ent		3501454	0					
ANR	3502001	Argument	resource . c_str ( )		3501454	7					
ANR	3502002	CallExpression	resource . c_str ( )		3501454	0					
ANR	3502003	Callee	resource . c_str		3501454	0					
ANR	3502004	MemberAccess	resource . c_str		3501454	0					
ANR	3502005	Identifier	resource		3501454	0					
ANR	3502006	Identifier	c_str		3501454	1					
ANR	3502007	ArgumentList			3501454	1					
ANR	3502008	Argument	lease_id . c_str ( )		3501454	8					
ANR	3502009	CallExpression	lease_id . c_str ( )		3501454	0					
ANR	3502010	Callee	lease_id . c_str		3501454	0					
ANR	3502011	MemberAccess	lease_id . c_str		3501454	0					
ANR	3502012	Identifier	lease_id		3501454	0					
ANR	3502013	Identifier	c_str		3501454	1					
ANR	3502014	ArgumentList			3501454	1					
ANR	3502015	Argument	start_time		3501454	9					
ANR	3502016	Identifier	start_time		3501454	0					
ANR	3502017	Argument	duration		3501454	10					
ANR	3502018	Identifier	duration		3501454	0					
ANR	3502019	Argument	expiration_time		3501454	11					
ANR	3502020	Identifier	expiration_time		3501454	0					
ANR	3502021	IfStatement	if ( bad_leases )		3501454	5					
ANR	3502022	Condition	bad_leases	281:6:7749:7758	3501454	0	True				
ANR	3502023	Identifier	bad_leases		3501454	0					
ANR	3502024	CompoundStatement		112:19:3449:3449	3501454	1					
ANR	3502025	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to restore %d leases\\n"" , bad_leases )"	282:2:7766:7830	3501454	0	True				
ANR	3502026	CallExpression	"dprintf ( D_ALWAYS , ""Failed to restore %d leases\\n"" , bad_leases )"		3501454	0					
ANR	3502027	Callee	dprintf		3501454	0					
ANR	3502028	Identifier	dprintf		3501454	0					
ANR	3502029	ArgumentList	D_ALWAYS		3501454	1					
ANR	3502030	Argument	D_ALWAYS		3501454	0					
ANR	3502031	Identifier	D_ALWAYS		3501454	0					
ANR	3502032	Argument	"""Failed to restore %d leases\\n"""		3501454	1					
ANR	3502033	PrimaryExpression	"""Failed to restore %d leases\\n"""		3501454	0					
ANR	3502034	Argument	bad_leases		3501454	2					
ANR	3502035	Identifier	bad_leases		3501454	0					
ANR	3502036	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Leases %d / states %d: Restored %d leases\\n"" , num_lease_ads , num_lease_states , leases_restored )"	284:1:7836:7963	3501454	6	True				
ANR	3502037	CallExpression	"dprintf ( D_FULLDEBUG , ""Leases %d / states %d: Restored %d leases\\n"" , num_lease_ads , num_lease_states , leases_restored )"		3501454	0					
ANR	3502038	Callee	dprintf		3501454	0					
ANR	3502039	Identifier	dprintf		3501454	0					
ANR	3502040	ArgumentList	D_FULLDEBUG		3501454	1					
ANR	3502041	Argument	D_FULLDEBUG		3501454	0					
ANR	3502042	Identifier	D_FULLDEBUG		3501454	0					
ANR	3502043	Argument	"""Leases %d / states %d: Restored %d leases\\n"""		3501454	1					
ANR	3502044	PrimaryExpression	"""Leases %d / states %d: Restored %d leases\\n"""		3501454	0					
ANR	3502045	Argument	num_lease_ads		3501454	2					
ANR	3502046	Identifier	num_lease_ads		3501454	0					
ANR	3502047	Argument	num_lease_states		3501454	3					
ANR	3502048	Identifier	num_lease_states		3501454	0					
ANR	3502049	Argument	leases_restored		3501454	4					
ANR	3502050	Identifier	leases_restored		3501454	0					
ANR	3502051	ExpressionStatement	"timer . Log ( ""Restore::num_lease_ads"" , num_lease_ads )"	287:1:7966:8018	3501454	7	True				
ANR	3502052	CallExpression	"timer . Log ( ""Restore::num_lease_ads"" , num_lease_ads )"		3501454	0					
ANR	3502053	Callee	timer . Log		3501454	0					
ANR	3502054	MemberAccess	timer . Log		3501454	0					
ANR	3502055	Identifier	timer		3501454	0					
ANR	3502056	Identifier	Log		3501454	1					
ANR	3502057	ArgumentList	"""Restore::num_lease_ads"""		3501454	1					
ANR	3502058	Argument	"""Restore::num_lease_ads"""		3501454	0					
ANR	3502059	PrimaryExpression	"""Restore::num_lease_ads"""		3501454	0					
ANR	3502060	Argument	num_lease_ads		3501454	1					
ANR	3502061	Identifier	num_lease_ads		3501454	0					
ANR	3502062	ExpressionStatement	"timer . Log ( ""Restore::num_lease_states"" , num_lease_states )"	288:1:8021:8079	3501454	8	True				
ANR	3502063	CallExpression	"timer . Log ( ""Restore::num_lease_states"" , num_lease_states )"		3501454	0					
ANR	3502064	Callee	timer . Log		3501454	0					
ANR	3502065	MemberAccess	timer . Log		3501454	0					
ANR	3502066	Identifier	timer		3501454	0					
ANR	3502067	Identifier	Log		3501454	1					
ANR	3502068	ArgumentList	"""Restore::num_lease_states"""		3501454	1					
ANR	3502069	Argument	"""Restore::num_lease_states"""		3501454	0					
ANR	3502070	PrimaryExpression	"""Restore::num_lease_states"""		3501454	0					
ANR	3502071	Argument	num_lease_states		3501454	1					
ANR	3502072	Identifier	num_lease_states		3501454	0					
ANR	3502073	ExpressionStatement	"timer . Log ( ""Restore::leases_restored"" , leases_restored )"	289:1:8082:8138	3501454	9	True				
ANR	3502074	CallExpression	"timer . Log ( ""Restore::leases_restored"" , leases_restored )"		3501454	0					
ANR	3502075	Callee	timer . Log		3501454	0					
ANR	3502076	MemberAccess	timer . Log		3501454	0					
ANR	3502077	Identifier	timer		3501454	0					
ANR	3502078	Identifier	Log		3501454	1					
ANR	3502079	ArgumentList	"""Restore::leases_restored"""		3501454	1					
ANR	3502080	Argument	"""Restore::leases_restored"""		3501454	0					
ANR	3502081	PrimaryExpression	"""Restore::leases_restored"""		3501454	0					
ANR	3502082	Argument	leases_restored		3501454	1					
ANR	3502083	Identifier	leases_restored		3501454	0					
ANR	3502084	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Expiring restored leases\\n"" )"	292:1:8171:8223	3501454	10	True				
ANR	3502085	CallExpression	"dprintf ( D_FULLDEBUG , ""Expiring restored leases\\n"" )"		3501454	0					
ANR	3502086	Callee	dprintf		3501454	0					
ANR	3502087	Identifier	dprintf		3501454	0					
ANR	3502088	ArgumentList	D_FULLDEBUG		3501454	1					
ANR	3502089	Argument	D_FULLDEBUG		3501454	0					
ANR	3502090	Identifier	D_FULLDEBUG		3501454	0					
ANR	3502091	Argument	"""Expiring restored leases\\n"""		3501454	1					
ANR	3502092	PrimaryExpression	"""Expiring restored leases\\n"""		3501454	0					
ANR	3502093	IfStatement	if ( ExpireLeases ( ) )		3501454	11					
ANR	3502094	Condition	ExpireLeases ( )	293:6:8231:8244	3501454	0	True				
ANR	3502095	CallExpression	ExpireLeases ( )		3501454	0					
ANR	3502096	Callee	ExpireLeases		3501454	0					
ANR	3502097	Identifier	ExpireLeases		3501454	0					
ANR	3502098	ArgumentList			3501454	1					
ANR	3502099	CompoundStatement		124:23:3935:3935	3501454	1					
ANR	3502100	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to expire leases\\n"" )"	294:2:8252:8300	3501454	0	True				
ANR	3502101	CallExpression	"dprintf ( D_ALWAYS , ""Failed to expire leases\\n"" )"		3501454	0					
ANR	3502102	Callee	dprintf		3501454	0					
ANR	3502103	Identifier	dprintf		3501454	0					
ANR	3502104	ArgumentList	D_ALWAYS		3501454	1					
ANR	3502105	Argument	D_ALWAYS		3501454	0					
ANR	3502106	Identifier	D_ALWAYS		3501454	0					
ANR	3502107	Argument	"""Failed to expire leases\\n"""		3501454	1					
ANR	3502108	PrimaryExpression	"""Failed to expire leases\\n"""		3501454	0					
ANR	3502109	ReturnStatement	return - 1 ;	295:2:8304:8313	3501454	1	True				
ANR	3502110	UnaryOperationExpression	- 1		3501454	0					
ANR	3502111	UnaryOperator	-		3501454	0					
ANR	3502112	PrimaryExpression	1		3501454	1					
ANR	3502113	ReturnStatement	return 0 ;	299:1:8356:8364	3501454	12	True				
ANR	3502114	PrimaryExpression	0		3501454	0					
ANR	3502115	ReturnType	int		3501454	1					
ANR	3502116	Identifier	LeaseManagerResources :: restoreLeases		3501454	2					
ANR	3502117	ParameterList			3501454	3					
ANR	3502118	CFGEntryNode	ENTRY		3501454		True				
ANR	3502119	CFGExitNode	EXIT		3501454		True				
ANR	3502120	Symbol	ad -> EvaluateAttrBool		3501454						
ANR	3502121	Symbol	m_collection		3501454						
ANR	3502122	Symbol	view -> end		3501454						
ANR	3502123	Symbol	lease_used		3501454						
ANR	3502124	Symbol	key . c_str		3501454						
ANR	3502125	Symbol	lease_states -> end		3501454						
ANR	3502126	Symbol	state_expr		3501454						
ANR	3502127	Symbol	* lease_ent		3501454						
ANR	3502128	Symbol	view		3501454						
ANR	3502129	Symbol	lease_number		3501454						
ANR	3502130	Symbol	m_collection . GetClassAd		3501454						
ANR	3502131	Symbol	state_expr -> GetKind		3501454						
ANR	3502132	Symbol	view -> begin		3501454						
ANR	3502133	Symbol	lease_ent -> m_leases_ad		3501454						
ANR	3502134	Symbol	lease_iter		3501454						
ANR	3502135	Symbol	ad		3501454						
ANR	3502136	Symbol	resource		3501454						
ANR	3502137	Symbol	* lease_iter		3501454						
ANR	3502138	Symbol	lease_ent -> m_expiration		3501454						
ANR	3502139	Symbol	ExpireLeases		3501454						
ANR	3502140	Symbol	bad_leases		3501454						
ANR	3502141	Symbol	D_FULLDEBUG		3501454						
ANR	3502142	Symbol	* lease_states		3501454						
ANR	3502143	Symbol	classad :: ExprTree :: CLASSAD_NODE		3501454						
ANR	3502144	Symbol	leases_restored		3501454						
ANR	3502145	Symbol	* lease_id		3501454						
ANR	3502146	Symbol	start_time		3501454						
ANR	3502147	Symbol	* m_used_leases		3501454						
ANR	3502148	Symbol	m_collection . GetView		3501454						
ANR	3502149	Symbol	m_leases_view		3501454						
ANR	3502150	Symbol	leases_ad		3501454						
ANR	3502151	Symbol	* state_expr		3501454						
ANR	3502152	Symbol	ad -> EvaluateAttrString		3501454						
ANR	3502153	Symbol	lease_ent -> m_resource_name		3501454						
ANR	3502154	Symbol	lease_count		3501454						
ANR	3502155	Symbol	view_iter		3501454						
ANR	3502156	Symbol	* ad		3501454						
ANR	3502157	Symbol	duration		3501454						
ANR	3502158	Symbol	timer		3501454						
ANR	3502159	Symbol	leases_ad -> EvaluateAttrInt		3501454						
ANR	3502160	Symbol	lease_states -> begin		3501454						
ANR	3502161	Symbol	lease_states		3501454						
ANR	3502162	Symbol	leases_ad -> EvaluateAttrList		3501454						
ANR	3502163	Symbol	ad -> EvaluateAttrInt		3501454						
ANR	3502164	Symbol	lease_ent -> m_lease_ad		3501454						
ANR	3502165	Symbol	num_lease_ads		3501454						
ANR	3502166	Symbol	key		3501454						
ANR	3502167	Symbol	expiration_time		3501454						
ANR	3502168	Symbol	D_ALWAYS		3501454						
ANR	3502169	Symbol	false		3501454						
ANR	3502170	Symbol	lease_ent -> m_lease_number		3501454						
ANR	3502171	Symbol	lease_ent		3501454						
ANR	3502172	Symbol	lease_id . c_str		3501454						
ANR	3502173	Symbol	m_used_leases		3501454						
ANR	3502174	Symbol	* leases_ad		3501454						
ANR	3502175	Symbol	resource . c_str		3501454						
ANR	3502176	Symbol	num_lease_states		3501454						
ANR	3502177	Symbol	* view		3501454						
ANR	3502178	Symbol	lease_id		3501454						
ANR	3502179	Function	LeaseManagerResources :: shutdownFast	302:0:8369:8520							
ANR	3502180	FunctionDef	LeaseManagerResources :: shutdownFast ()		3502179	0					
ANR	3502181	CompoundStatement		304:0:8417:8520	3502179	0					
ANR	3502182	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Truncating classad collection\\n"" )"	305:1:8420:8477	3502179	0	True				
ANR	3502183	CallExpression	"dprintf ( D_FULLDEBUG , ""Truncating classad collection\\n"" )"		3502179	0					
ANR	3502184	Callee	dprintf		3502179	0					
ANR	3502185	Identifier	dprintf		3502179	0					
ANR	3502186	ArgumentList	D_FULLDEBUG		3502179	1					
ANR	3502187	Argument	D_FULLDEBUG		3502179	0					
ANR	3502188	Identifier	D_FULLDEBUG		3502179	0					
ANR	3502189	Argument	"""Truncating classad collection\\n"""		3502179	1					
ANR	3502190	PrimaryExpression	"""Truncating classad collection\\n"""		3502179	0					
ANR	3502191	ExpressionStatement	m_collection . TruncateLog ( )	306:1:8480:8507	3502179	1	True				
ANR	3502192	CallExpression	m_collection . TruncateLog ( )		3502179	0					
ANR	3502193	Callee	m_collection . TruncateLog		3502179	0					
ANR	3502194	MemberAccess	m_collection . TruncateLog		3502179	0					
ANR	3502195	Identifier	m_collection		3502179	0					
ANR	3502196	Identifier	TruncateLog		3502179	1					
ANR	3502197	ArgumentList			3502179	1					
ANR	3502198	ReturnStatement	return 0 ;	307:1:8510:8518	3502179	2	True				
ANR	3502199	PrimaryExpression	0		3502179	0					
ANR	3502200	ReturnType	int		3502179	1					
ANR	3502201	Identifier	LeaseManagerResources :: shutdownFast		3502179	2					
ANR	3502202	ParameterList			3502179	3					
ANR	3502203	CFGEntryNode	ENTRY		3502179		True				
ANR	3502204	CFGExitNode	EXIT		3502179		True				
ANR	3502205	Symbol	m_collection		3502179						
ANR	3502206	Symbol	D_FULLDEBUG		3502179						
ANR	3502207	Function	LeaseManagerResources :: shutdownGraceful	310:0:8523:8678							
ANR	3502208	FunctionDef	LeaseManagerResources :: shutdownGraceful ()		3502207	0					
ANR	3502209	CompoundStatement		312:0:8575:8678	3502207	0					
ANR	3502210	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Truncating classad collection\\n"" )"	313:1:8578:8635	3502207	0	True				
ANR	3502211	CallExpression	"dprintf ( D_FULLDEBUG , ""Truncating classad collection\\n"" )"		3502207	0					
ANR	3502212	Callee	dprintf		3502207	0					
ANR	3502213	Identifier	dprintf		3502207	0					
ANR	3502214	ArgumentList	D_FULLDEBUG		3502207	1					
ANR	3502215	Argument	D_FULLDEBUG		3502207	0					
ANR	3502216	Identifier	D_FULLDEBUG		3502207	0					
ANR	3502217	Argument	"""Truncating classad collection\\n"""		3502207	1					
ANR	3502218	PrimaryExpression	"""Truncating classad collection\\n"""		3502207	0					
ANR	3502219	ExpressionStatement	m_collection . TruncateLog ( )	314:1:8638:8665	3502207	1	True				
ANR	3502220	CallExpression	m_collection . TruncateLog ( )		3502207	0					
ANR	3502221	Callee	m_collection . TruncateLog		3502207	0					
ANR	3502222	MemberAccess	m_collection . TruncateLog		3502207	0					
ANR	3502223	Identifier	m_collection		3502207	0					
ANR	3502224	Identifier	TruncateLog		3502207	1					
ANR	3502225	ArgumentList			3502207	1					
ANR	3502226	ReturnStatement	return 0 ;	315:1:8668:8676	3502207	2	True				
ANR	3502227	PrimaryExpression	0		3502207	0					
ANR	3502228	ReturnType	int		3502207	1					
ANR	3502229	Identifier	LeaseManagerResources :: shutdownGraceful		3502207	2					
ANR	3502230	ParameterList			3502207	3					
ANR	3502231	CFGEntryNode	ENTRY		3502207		True				
ANR	3502232	CFGExitNode	EXIT		3502207		True				
ANR	3502233	Symbol	m_collection		3502207						
ANR	3502234	Symbol	D_FULLDEBUG		3502207						
ANR	3502235	Function	LeaseManagerResources :: QuerySetAd	319:0:8714:9970							
ANR	3502236	FunctionDef	LeaseManagerResources :: QuerySetAd (const classad :: ClassAd & ad)		3502235	0					
ANR	3502237	CompoundStatement		321:0:8783:9970	3502235	0					
ANR	3502238	IdentifierDeclStatement	classad :: ClassAdUnParser unparser ;	322:1:8786:8819	3502235	0	True				
ANR	3502239	IdentifierDecl	unparser		3502235	0					
ANR	3502240	IdentifierDeclType	classad :: ClassAdUnParser		3502235	0					
ANR	3502241	Identifier	unparser		3502235	1					
ANR	3502242	IdentifierDeclStatement	string expr_str ;	326:1:8934:8949	3502235	1	True				
ANR	3502243	IdentifierDecl	expr_str		3502235	0					
ANR	3502244	IdentifierDeclType	string		3502235	0					
ANR	3502245	Identifier	expr_str		3502235	1					
ANR	3502246	IdentifierDeclStatement	"classad :: ExprTree * req_expr = ad . Lookup ( ""Requirements"" ) ;"	327:1:8952:9009	3502235	2	True				
ANR	3502247	IdentifierDecl	"* req_expr = ad . Lookup ( ""Requirements"" )"		3502235	0					
ANR	3502248	IdentifierDeclType	classad :: ExprTree *		3502235	0					
ANR	3502249	Identifier	req_expr		3502235	1					
ANR	3502250	AssignmentExpression	"* req_expr = ad . Lookup ( ""Requirements"" )"		3502235	2		=			
ANR	3502251	Identifier	req_expr		3502235	0					
ANR	3502252	CallExpression	"ad . Lookup ( ""Requirements"" )"		3502235	1					
ANR	3502253	Callee	ad . Lookup		3502235	0					
ANR	3502254	MemberAccess	ad . Lookup		3502235	0					
ANR	3502255	Identifier	ad		3502235	0					
ANR	3502256	Identifier	Lookup		3502235	1					
ANR	3502257	ArgumentList	"""Requirements"""		3502235	1					
ANR	3502258	Argument	"""Requirements"""		3502235	0					
ANR	3502259	PrimaryExpression	"""Requirements"""		3502235	0					
ANR	3502260	IfStatement	if ( ! req_expr )		3502235	3					
ANR	3502261	Condition	! req_expr	328:6:9017:9026	3502235	0	True				
ANR	3502262	UnaryOperationExpression	! req_expr		3502235	0					
ANR	3502263	UnaryOperator	!		3502235	0					
ANR	3502264	Identifier	req_expr		3502235	1					
ANR	3502265	CompoundStatement		8:19:246:246	3502235	1					
ANR	3502266	ExpressionStatement	"expr_str = ""( (other.MaxLeases - other._LeasesUsed) > 0 )"""	329:2:9034:9092	3502235	0	True				
ANR	3502267	AssignmentExpression	"expr_str = ""( (other.MaxLeases - other._LeasesUsed) > 0 )"""		3502235	0		=			
ANR	3502268	Identifier	expr_str		3502235	0					
ANR	3502269	PrimaryExpression	"""( (other.MaxLeases - other._LeasesUsed) > 0 )"""		3502235	1					
ANR	3502270	ElseStatement	else		3502235	0					
ANR	3502271	CompoundStatement		10:8:318:318	3502235	0					
ANR	3502272	ExpressionStatement	"unparser . Unparse ( expr_str , req_expr )"	331:2:9106:9144	3502235	0	True				
ANR	3502273	CallExpression	"unparser . Unparse ( expr_str , req_expr )"		3502235	0					
ANR	3502274	Callee	unparser . Unparse		3502235	0					
ANR	3502275	MemberAccess	unparser . Unparse		3502235	0					
ANR	3502276	Identifier	unparser		3502235	0					
ANR	3502277	Identifier	Unparse		3502235	1					
ANR	3502278	ArgumentList	expr_str		3502235	1					
ANR	3502279	Argument	expr_str		3502235	0					
ANR	3502280	Identifier	expr_str		3502235	0					
ANR	3502281	Argument	req_expr		3502235	1					
ANR	3502282	Identifier	req_expr		3502235	0					
ANR	3502283	ExpressionStatement	"expr_str = "" ( ( "" + expr_str + "" ) && ( (other.MaxLeases - other._LeasesUsed) > 0 ) )"""	332:2:9148:9241	3502235	1	True				
ANR	3502284	AssignmentExpression	"expr_str = "" ( ( "" + expr_str + "" ) && ( (other.MaxLeases - other._LeasesUsed) > 0 ) )"""		3502235	0		=			
ANR	3502285	Identifier	expr_str		3502235	0					
ANR	3502286	AdditiveExpression	""" ( ( "" + expr_str + "" ) && ( (other.MaxLeases - other._LeasesUsed) > 0 ) )"""		3502235	1		+			
ANR	3502287	PrimaryExpression	""" ( ( """		3502235	0					
ANR	3502288	AdditiveExpression	"expr_str + "" ) && ( (other.MaxLeases - other._LeasesUsed) > 0 ) )"""		3502235	1		+			
ANR	3502289	Identifier	expr_str		3502235	0					
ANR	3502290	PrimaryExpression	""" ) && ( (other.MaxLeases - other._LeasesUsed) > 0 ) )"""		3502235	1					
ANR	3502291	IdentifierDeclStatement	classad :: ClassAdParser parser ;	338:1:9304:9333	3502235	4	True				
ANR	3502292	IdentifierDecl	parser		3502235	0					
ANR	3502293	IdentifierDeclType	classad :: ClassAdParser		3502235	0					
ANR	3502294	Identifier	parser		3502235	1					
ANR	3502295	ExpressionStatement	"req_expr = parser . ParseExpression ( expr_str , true )"	339:1:9336:9387	3502235	5	True				
ANR	3502296	AssignmentExpression	"req_expr = parser . ParseExpression ( expr_str , true )"		3502235	0		=			
ANR	3502297	Identifier	req_expr		3502235	0					
ANR	3502298	CallExpression	"parser . ParseExpression ( expr_str , true )"		3502235	1					
ANR	3502299	Callee	parser . ParseExpression		3502235	0					
ANR	3502300	MemberAccess	parser . ParseExpression		3502235	0					
ANR	3502301	Identifier	parser		3502235	0					
ANR	3502302	Identifier	ParseExpression		3502235	1					
ANR	3502303	ArgumentList	expr_str		3502235	1					
ANR	3502304	Argument	expr_str		3502235	0					
ANR	3502305	Identifier	expr_str		3502235	0					
ANR	3502306	Argument	true		3502235	1					
ANR	3502307	Identifier	true		3502235	0					
ANR	3502308	IfStatement	if ( ! req_expr )		3502235	6					
ANR	3502309	Condition	! req_expr	340:6:9395:9403	3502235	0	True				
ANR	3502310	UnaryOperationExpression	! req_expr		3502235	0					
ANR	3502311	UnaryOperator	!		3502235	0					
ANR	3502312	Identifier	req_expr		3502235	1					
ANR	3502313	CompoundStatement		20:18:623:623	3502235	1					
ANR	3502314	ExpressionStatement	"dprintf ( D_ALWAYS , ""Can't find evaluate query expression '%s'\\n"" , expr_str . c_str ( ) )"	341:2:9411:9500	3502235	0	True				
ANR	3502315	CallExpression	"dprintf ( D_ALWAYS , ""Can't find evaluate query expression '%s'\\n"" , expr_str . c_str ( ) )"		3502235	0					
ANR	3502316	Callee	dprintf		3502235	0					
ANR	3502317	Identifier	dprintf		3502235	0					
ANR	3502318	ArgumentList	D_ALWAYS		3502235	1					
ANR	3502319	Argument	D_ALWAYS		3502235	0					
ANR	3502320	Identifier	D_ALWAYS		3502235	0					
ANR	3502321	Argument	"""Can't find evaluate query expression '%s'\\n"""		3502235	1					
ANR	3502322	PrimaryExpression	"""Can't find evaluate query expression '%s'\\n"""		3502235	0					
ANR	3502323	Argument	expr_str . c_str ( )		3502235	2					
ANR	3502324	CallExpression	expr_str . c_str ( )		3502235	0					
ANR	3502325	Callee	expr_str . c_str		3502235	0					
ANR	3502326	MemberAccess	expr_str . c_str		3502235	0					
ANR	3502327	Identifier	expr_str		3502235	0					
ANR	3502328	Identifier	c_str		3502235	1					
ANR	3502329	ArgumentList			3502235	1					
ANR	3502330	ReturnStatement	return false ;	343:2:9504:9516	3502235	1	True				
ANR	3502331	Identifier	false		3502235	0					
ANR	3502332	ExpressionStatement	m_search_query_ad . Clear ( )	347:1:9557:9583	3502235	7	True				
ANR	3502333	CallExpression	m_search_query_ad . Clear ( )		3502235	0					
ANR	3502334	Callee	m_search_query_ad . Clear		3502235	0					
ANR	3502335	MemberAccess	m_search_query_ad . Clear		3502235	0					
ANR	3502336	Identifier	m_search_query_ad		3502235	0					
ANR	3502337	Identifier	Clear		3502235	1					
ANR	3502338	ArgumentList			3502235	1					
ANR	3502339	ExpressionStatement	m_search_query_ad = ad	348:1:9586:9608	3502235	8	True				
ANR	3502340	AssignmentExpression	m_search_query_ad = ad		3502235	0		=			
ANR	3502341	Identifier	m_search_query_ad		3502235	0					
ANR	3502342	Identifier	ad		3502235	1					
ANR	3502343	IfStatement	"if ( ! m_search_query_ad . Insert ( ""Requirements"" , req_expr ) )"		3502235	9					
ANR	3502344	Condition	"! m_search_query_ad . Insert ( ""Requirements"" , req_expr )"	349:6:9616:9668	3502235	0	True				
ANR	3502345	UnaryOperationExpression	"! m_search_query_ad . Insert ( ""Requirements"" , req_expr )"		3502235	0					
ANR	3502346	UnaryOperator	!		3502235	0					
ANR	3502347	CallExpression	"m_search_query_ad . Insert ( ""Requirements"" , req_expr )"		3502235	1					
ANR	3502348	Callee	m_search_query_ad . Insert		3502235	0					
ANR	3502349	MemberAccess	m_search_query_ad . Insert		3502235	0					
ANR	3502350	Identifier	m_search_query_ad		3502235	0					
ANR	3502351	Identifier	Insert		3502235	1					
ANR	3502352	ArgumentList	"""Requirements"""		3502235	1					
ANR	3502353	Argument	"""Requirements"""		3502235	0					
ANR	3502354	PrimaryExpression	"""Requirements"""		3502235	0					
ANR	3502355	Argument	req_expr		3502235	1					
ANR	3502356	Identifier	req_expr		3502235	0					
ANR	3502357	CompoundStatement		29:62:888:888	3502235	1					
ANR	3502358	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to insert modified requirements expr\\n"" )"	350:2:9676:9744	3502235	0	True				
ANR	3502359	CallExpression	"dprintf ( D_ALWAYS , ""Failed to insert modified requirements expr\\n"" )"		3502235	0					
ANR	3502360	Callee	dprintf		3502235	0					
ANR	3502361	Identifier	dprintf		3502235	0					
ANR	3502362	ArgumentList	D_ALWAYS		3502235	1					
ANR	3502363	Argument	D_ALWAYS		3502235	0					
ANR	3502364	Identifier	D_ALWAYS		3502235	0					
ANR	3502365	Argument	"""Failed to insert modified requirements expr\\n"""		3502235	1					
ANR	3502366	PrimaryExpression	"""Failed to insert modified requirements expr\\n"""		3502235	0					
ANR	3502367	ReturnStatement	return false ;	351:2:9748:9760	3502235	1	True				
ANR	3502368	Identifier	false		3502235	0					
ANR	3502369	IfStatement	if ( m_enable_ad_debug )		3502235	10					
ANR	3502370	Condition	m_enable_ad_debug	354:6:9772:9788	3502235	0	True				
ANR	3502371	Identifier	m_enable_ad_debug		3502235	0					
ANR	3502372	CompoundStatement		37:2:1039:1059	3502235	1					
ANR	3502373	IdentifierDeclStatement	classad :: PrettyPrint u ;	356:2:9797:9819	3502235	0	True				
ANR	3502374	IdentifierDecl	u		3502235	0					
ANR	3502375	IdentifierDeclType	classad :: PrettyPrint		3502235	0					
ANR	3502376	Identifier	u		3502235	1					
ANR	3502377	IdentifierDeclStatement	std :: string adbuffer ;	357:2:9823:9843	3502235	1	True				
ANR	3502378	IdentifierDecl	adbuffer		3502235	0					
ANR	3502379	IdentifierDeclType	std :: string		3502235	0					
ANR	3502380	Identifier	adbuffer		3502235	1					
ANR	3502381	ExpressionStatement	"u . Unparse ( adbuffer , & m_search_query_ad )"	358:2:9847:9888	3502235	2	True				
ANR	3502382	CallExpression	"u . Unparse ( adbuffer , & m_search_query_ad )"		3502235	0					
ANR	3502383	Callee	u . Unparse		3502235	0					
ANR	3502384	MemberAccess	u . Unparse		3502235	0					
ANR	3502385	Identifier	u		3502235	0					
ANR	3502386	Identifier	Unparse		3502235	1					
ANR	3502387	ArgumentList	adbuffer		3502235	1					
ANR	3502388	Argument	adbuffer		3502235	0					
ANR	3502389	Identifier	adbuffer		3502235	0					
ANR	3502390	Argument	& m_search_query_ad		3502235	1					
ANR	3502391	UnaryOperationExpression	& m_search_query_ad		3502235	0					
ANR	3502392	UnaryOperator	&		3502235	0					
ANR	3502393	Identifier	m_search_query_ad		3502235	1					
ANR	3502394	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""SearchAd=%s\\n"" , adbuffer . c_str ( ) )"	359:2:9892:9949	3502235	3	True				
ANR	3502395	CallExpression	"dprintf ( D_FULLDEBUG , ""SearchAd=%s\\n"" , adbuffer . c_str ( ) )"		3502235	0					
ANR	3502396	Callee	dprintf		3502235	0					
ANR	3502397	Identifier	dprintf		3502235	0					
ANR	3502398	ArgumentList	D_FULLDEBUG		3502235	1					
ANR	3502399	Argument	D_FULLDEBUG		3502235	0					
ANR	3502400	Identifier	D_FULLDEBUG		3502235	0					
ANR	3502401	Argument	"""SearchAd=%s\\n"""		3502235	1					
ANR	3502402	PrimaryExpression	"""SearchAd=%s\\n"""		3502235	0					
ANR	3502403	Argument	adbuffer . c_str ( )		3502235	2					
ANR	3502404	CallExpression	adbuffer . c_str ( )		3502235	0					
ANR	3502405	Callee	adbuffer . c_str		3502235	0					
ANR	3502406	MemberAccess	adbuffer . c_str		3502235	0					
ANR	3502407	Identifier	adbuffer		3502235	0					
ANR	3502408	Identifier	c_str		3502235	1					
ANR	3502409	ArgumentList			3502235	1					
ANR	3502410	ReturnStatement	return true ;	362:1:9956:9967	3502235	11	True				
ANR	3502411	Identifier	true		3502235	0					
ANR	3502412	ReturnType	bool		3502235	1					
ANR	3502413	Identifier	LeaseManagerResources :: QuerySetAd		3502235	2					
ANR	3502414	ParameterList	const classad :: ClassAd & ad		3502235	3					
ANR	3502415	Parameter	const classad :: ClassAd & ad	320:35:8754:8779	3502235	0	True				
ANR	3502416	ParameterType	const classad :: ClassAd &		3502235	0					
ANR	3502417	Identifier	ad		3502235	1					
ANR	3502418	CFGEntryNode	ENTRY		3502235		True				
ANR	3502419	CFGExitNode	EXIT		3502235		True				
ANR	3502420	Symbol	m_enable_ad_debug		3502235						
ANR	3502421	Symbol	ad		3502235						
ANR	3502422	Symbol	parser . ParseExpression		3502235						
ANR	3502423	Symbol	D_ALWAYS		3502235						
ANR	3502424	Symbol	false		3502235						
ANR	3502425	Symbol	ad . Lookup		3502235						
ANR	3502426	Symbol	D_FULLDEBUG		3502235						
ANR	3502427	Symbol	m_search_query_ad . Insert		3502235						
ANR	3502428	Symbol	req_expr		3502235						
ANR	3502429	Symbol	expr_str		3502235						
ANR	3502430	Symbol	parser		3502235						
ANR	3502431	Symbol	u		3502235						
ANR	3502432	Symbol	& m_search_query_ad		3502235						
ANR	3502433	Symbol	m_search_query_ad		3502235						
ANR	3502434	Symbol	true		3502235						
ANR	3502435	Symbol	unparser		3502235						
ANR	3502436	Symbol	expr_str . c_str		3502235						
ANR	3502437	Symbol	adbuffer . c_str		3502235						
ANR	3502438	Symbol	adbuffer		3502235						
ANR	3502439	Function	LeaseManagerResources :: QueryStart	367:0:10010:10193							
ANR	3502440	FunctionDef	LeaseManagerResources :: QueryStart (const classad :: ClassAd & ad)		3502439	0					
ANR	3502441	CompoundStatement		369:0:10079:10193	3502439	0					
ANR	3502442	IfStatement	if ( ! QuerySetAd ( ad ) )		3502439	0					
ANR	3502443	Condition	! QuerySetAd ( ad )	371:6:10102:10118	3502439	0	True				
ANR	3502444	UnaryOperationExpression	! QuerySetAd ( ad )		3502439	0					
ANR	3502445	UnaryOperator	!		3502439	0					
ANR	3502446	CallExpression	QuerySetAd ( ad )		3502439	1					
ANR	3502447	Callee	QuerySetAd		3502439	0					
ANR	3502448	Identifier	QuerySetAd		3502439	0					
ANR	3502449	ArgumentList	ad		3502439	1					
ANR	3502450	Argument	ad		3502439	0					
ANR	3502451	Identifier	ad		3502439	0					
ANR	3502452	CompoundStatement		3:26:42:42	3502439	1					
ANR	3502453	ReturnStatement	return false ;	372:2:10126:10138	3502439	0	True				
ANR	3502454	Identifier	false		3502439	0					
ANR	3502455	ReturnStatement	return QueryStart ( ) ;	376:1:10170:10190	3502439	1	True				
ANR	3502456	CallExpression	QueryStart ( )		3502439	0					
ANR	3502457	Callee	QueryStart		3502439	0					
ANR	3502458	Identifier	QueryStart		3502439	0					
ANR	3502459	ArgumentList			3502439	1					
ANR	3502460	ReturnType	bool		3502439	1					
ANR	3502461	Identifier	LeaseManagerResources :: QueryStart		3502439	2					
ANR	3502462	ParameterList	const classad :: ClassAd & ad		3502439	3					
ANR	3502463	Parameter	const classad :: ClassAd & ad	368:35:10050:10075	3502439	0	True				
ANR	3502464	ParameterType	const classad :: ClassAd &		3502439	0					
ANR	3502465	Identifier	ad		3502439	1					
ANR	3502466	CFGEntryNode	ENTRY		3502439		True				
ANR	3502467	CFGExitNode	EXIT		3502439		True				
ANR	3502468	Symbol	QuerySetAd		3502439						
ANR	3502469	Symbol	ad		3502439						
ANR	3502470	Symbol	false		3502439						
ANR	3502471	Symbol	QueryStart		3502439						
ANR	3502472	Function	LeaseManagerResources :: QueryStart	381:0:10250:10586							
ANR	3502473	FunctionDef	LeaseManagerResources :: QueryStart ()		3502472	0					
ANR	3502474	CompoundStatement		383:0:10297:10586	3502472	0					
ANR	3502475	Statement	if	384:2:10301:10302	3502472	0	True				
ANR	3502476	Statement	TWO_WAY_MATCHING	384:5:10304:10319	3502472	1	True				
ANR	3502477	ReturnStatement	"return m_search_query . Query ( m_resources_view , & m_search_query_ad , true ) ;"	385:1:10322:10395	3502472	2	True				
ANR	3502478	CallExpression	"m_search_query . Query ( m_resources_view , & m_search_query_ad , true )"		3502472	0					
ANR	3502479	Callee	m_search_query . Query		3502472	0					
ANR	3502480	MemberAccess	m_search_query . Query		3502472	0					
ANR	3502481	Identifier	m_search_query		3502472	0					
ANR	3502482	Identifier	Query		3502472	1					
ANR	3502483	ArgumentList	m_resources_view		3502472	1					
ANR	3502484	Argument	m_resources_view		3502472	0					
ANR	3502485	Identifier	m_resources_view		3502472	0					
ANR	3502486	Argument	& m_search_query_ad		3502472	1					
ANR	3502487	UnaryOperationExpression	& m_search_query_ad		3502472	0					
ANR	3502488	UnaryOperator	&		3502472	0					
ANR	3502489	Identifier	m_search_query_ad		3502472	1					
ANR	3502490	Argument	true		3502472	2					
ANR	3502491	Identifier	true		3502472	0					
ANR	3502492	ReturnType	bool		3502472	1					
ANR	3502493	Identifier	LeaseManagerResources :: QueryStart		3502472	2					
ANR	3502494	ParameterList			3502472	3					
ANR	3502495	CFGEntryNode	ENTRY		3502472		True				
ANR	3502496	CFGExitNode	EXIT		3502472		True				
ANR	3502497	Symbol	& m_search_query_ad		3502472						
ANR	3502498	Symbol	m_resources_view		3502472						
ANR	3502499	Symbol	m_search_query . Query		3502472						
ANR	3502500	Symbol	true		3502472						
ANR	3502501	Symbol	m_search_query		3502472						
ANR	3502502	Function	LeaseManagerResources :: QueryCurrent	395:0:10617:10742							
ANR	3502503	FunctionDef	LeaseManagerResources :: QueryCurrent ()		3502502	0					
ANR	3502504	CompoundStatement		397:0:10680:10742	3502502	0					
ANR	3502505	ReturnStatement	"return QueryCurrent ( m_search_query , m_search_query_key ) ;"	398:1:10683:10740	3502502	0	True				
ANR	3502506	CallExpression	"QueryCurrent ( m_search_query , m_search_query_key )"		3502502	0					
ANR	3502507	Callee	QueryCurrent		3502502	0					
ANR	3502508	Identifier	QueryCurrent		3502502	0					
ANR	3502509	ArgumentList	m_search_query		3502502	1					
ANR	3502510	Argument	m_search_query		3502502	0					
ANR	3502511	Identifier	m_search_query		3502502	0					
ANR	3502512	Argument	m_search_query_key		3502502	1					
ANR	3502513	Identifier	m_search_query_key		3502502	0					
ANR	3502514	ReturnType	classad :: ClassAd *		3502502	1					
ANR	3502515	Identifier	LeaseManagerResources :: QueryCurrent		3502502	2					
ANR	3502516	ParameterList			3502502	3					
ANR	3502517	CFGEntryNode	ENTRY		3502502		True				
ANR	3502518	CFGExitNode	EXIT		3502502		True				
ANR	3502519	Symbol	QueryCurrent		3502502						
ANR	3502520	Symbol	m_search_query		3502502						
ANR	3502521	Symbol	m_search_query_key		3502502						
ANR	3502522	Function	LeaseManagerResources :: QueryNext	402:0:10779:10884							
ANR	3502523	FunctionDef	LeaseManagerResources :: QueryNext ()		3502522	0					
ANR	3502524	CompoundStatement		404:0:10825:10884	3502522	0					
ANR	3502525	ReturnStatement	"return QueryNext ( m_search_query , m_search_query_key ) ;"	405:1:10828:10882	3502522	0	True				
ANR	3502526	CallExpression	"QueryNext ( m_search_query , m_search_query_key )"		3502522	0					
ANR	3502527	Callee	QueryNext		3502522	0					
ANR	3502528	Identifier	QueryNext		3502522	0					
ANR	3502529	ArgumentList	m_search_query		3502522	1					
ANR	3502530	Argument	m_search_query		3502522	0					
ANR	3502531	Identifier	m_search_query		3502522	0					
ANR	3502532	Argument	m_search_query_key		3502522	1					
ANR	3502533	Identifier	m_search_query_key		3502522	0					
ANR	3502534	ReturnType	bool		3502522	1					
ANR	3502535	Identifier	LeaseManagerResources :: QueryNext		3502522	2					
ANR	3502536	ParameterList			3502522	3					
ANR	3502537	CFGEntryNode	ENTRY		3502522		True				
ANR	3502538	CFGExitNode	EXIT		3502522		True				
ANR	3502539	Symbol	QueryNext		3502522						
ANR	3502540	Symbol	m_search_query		3502522						
ANR	3502541	Symbol	m_search_query_key		3502522						
ANR	3502542	Function	LeaseManagerResources :: GetLeases	408:0:10887:16279							
ANR	3502543	FunctionDef	"LeaseManagerResources :: GetLeases (classad :: ClassAd & resource_ad , classad :: ClassAd & request_ad , int target_count , list < classad :: ClassAd * > & leases)"		3502542	0					
ANR	3502544	CompoundStatement		413:0:11069:16279	3502542	0					
ANR	3502545	IdentifierDeclStatement	string resource_name ;	414:1:11072:11092	3502542	0	True				
ANR	3502546	IdentifierDecl	resource_name		3502542	0					
ANR	3502547	IdentifierDeclType	string		3502542	0					
ANR	3502548	Identifier	resource_name		3502542	1					
ANR	3502549	IfStatement	"if ( ! resource_ad . EvaluateAttrString ( ""Name"" , resource_name ) )"		3502542	1					
ANR	3502550	Condition	"! resource_ad . EvaluateAttrString ( ""Name"" , resource_name )"	415:6:11100:11155	3502542	0	True				
ANR	3502551	UnaryOperationExpression	"! resource_ad . EvaluateAttrString ( ""Name"" , resource_name )"		3502542	0					
ANR	3502552	UnaryOperator	!		3502542	0					
ANR	3502553	CallExpression	"resource_ad . EvaluateAttrString ( ""Name"" , resource_name )"		3502542	1					
ANR	3502554	Callee	resource_ad . EvaluateAttrString		3502542	0					
ANR	3502555	MemberAccess	resource_ad . EvaluateAttrString		3502542	0					
ANR	3502556	Identifier	resource_ad		3502542	0					
ANR	3502557	Identifier	EvaluateAttrString		3502542	1					
ANR	3502558	ArgumentList	"""Name"""		3502542	1					
ANR	3502559	Argument	"""Name"""		3502542	0					
ANR	3502560	PrimaryExpression	"""Name"""		3502542	0					
ANR	3502561	Argument	resource_name		3502542	1					
ANR	3502562	Identifier	resource_name		3502542	0					
ANR	3502563	CompoundStatement		3:65:89:89	3502542	1					
ANR	3502564	ExpressionStatement	"dprintf ( D_ALWAYS , ""GetLeases: No name in resource ad\\n"" )"	416:2:11163:11221	3502542	0	True				
ANR	3502565	CallExpression	"dprintf ( D_ALWAYS , ""GetLeases: No name in resource ad\\n"" )"		3502542	0					
ANR	3502566	Callee	dprintf		3502542	0					
ANR	3502567	Identifier	dprintf		3502542	0					
ANR	3502568	ArgumentList	D_ALWAYS		3502542	1					
ANR	3502569	Argument	D_ALWAYS		3502542	0					
ANR	3502570	Identifier	D_ALWAYS		3502542	0					
ANR	3502571	Argument	"""GetLeases: No name in resource ad\\n"""		3502542	1					
ANR	3502572	PrimaryExpression	"""GetLeases: No name in resource ad\\n"""		3502542	0					
ANR	3502573	ReturnStatement	return - 1 ;	417:2:11225:11234	3502542	1	True				
ANR	3502574	UnaryOperationExpression	- 1		3502542	0					
ANR	3502575	UnaryOperator	-		3502542	0					
ANR	3502576	PrimaryExpression	1		3502542	1					
ANR	3502577	IdentifierDeclStatement	string request_name ;	419:1:11240:11259	3502542	2	True				
ANR	3502578	IdentifierDecl	request_name		3502542	0					
ANR	3502579	IdentifierDeclType	string		3502542	0					
ANR	3502580	Identifier	request_name		3502542	1					
ANR	3502581	IfStatement	"if ( ! request_ad . EvaluateAttrString ( ""Name"" , request_name ) )"		3502542	3					
ANR	3502582	Condition	"! request_ad . EvaluateAttrString ( ""Name"" , request_name )"	420:6:11267:11320	3502542	0	True				
ANR	3502583	UnaryOperationExpression	"! request_ad . EvaluateAttrString ( ""Name"" , request_name )"		3502542	0					
ANR	3502584	UnaryOperator	!		3502542	0					
ANR	3502585	CallExpression	"request_ad . EvaluateAttrString ( ""Name"" , request_name )"		3502542	1					
ANR	3502586	Callee	request_ad . EvaluateAttrString		3502542	0					
ANR	3502587	MemberAccess	request_ad . EvaluateAttrString		3502542	0					
ANR	3502588	Identifier	request_ad		3502542	0					
ANR	3502589	Identifier	EvaluateAttrString		3502542	1					
ANR	3502590	ArgumentList	"""Name"""		3502542	1					
ANR	3502591	Argument	"""Name"""		3502542	0					
ANR	3502592	PrimaryExpression	"""Name"""		3502542	0					
ANR	3502593	Argument	request_name		3502542	1					
ANR	3502594	Identifier	request_name		3502542	0					
ANR	3502595	CompoundStatement		8:63:254:254	3502542	1					
ANR	3502596	ExpressionStatement	"dprintf ( D_ALWAYS , ""GetLeases: No name in request ad\\n"" )"	421:2:11328:11385	3502542	0	True				
ANR	3502597	CallExpression	"dprintf ( D_ALWAYS , ""GetLeases: No name in request ad\\n"" )"		3502542	0					
ANR	3502598	Callee	dprintf		3502542	0					
ANR	3502599	Identifier	dprintf		3502542	0					
ANR	3502600	ArgumentList	D_ALWAYS		3502542	1					
ANR	3502601	Argument	D_ALWAYS		3502542	0					
ANR	3502602	Identifier	D_ALWAYS		3502542	0					
ANR	3502603	Argument	"""GetLeases: No name in request ad\\n"""		3502542	1					
ANR	3502604	PrimaryExpression	"""GetLeases: No name in request ad\\n"""		3502542	0					
ANR	3502605	ReturnStatement	return - 1 ;	422:2:11389:11398	3502542	1	True				
ANR	3502606	UnaryOperationExpression	- 1		3502542	0					
ANR	3502607	UnaryOperator	-		3502542	0					
ANR	3502608	PrimaryExpression	1		3502542	1					
ANR	3502609	IdentifierDeclStatement	classad :: ClassAd * leases_ad = GetLeasesAd ( resource_name ) ;	425:1:11405:11464	3502542	4	True				
ANR	3502610	IdentifierDecl	* leases_ad = GetLeasesAd ( resource_name )		3502542	0					
ANR	3502611	IdentifierDeclType	classad :: ClassAd *		3502542	0					
ANR	3502612	Identifier	leases_ad		3502542	1					
ANR	3502613	AssignmentExpression	* leases_ad = GetLeasesAd ( resource_name )		3502542	2		=			
ANR	3502614	Identifier	leases_ad		3502542	0					
ANR	3502615	CallExpression	GetLeasesAd ( resource_name )		3502542	1					
ANR	3502616	Callee	GetLeasesAd		3502542	0					
ANR	3502617	Identifier	GetLeasesAd		3502542	0					
ANR	3502618	ArgumentList	resource_name		3502542	1					
ANR	3502619	Argument	resource_name		3502542	0					
ANR	3502620	Identifier	resource_name		3502542	0					
ANR	3502621	IfStatement	if ( ! leases_ad )		3502542	5					
ANR	3502622	Condition	! leases_ad	426:6:11472:11482	3502542	0	True				
ANR	3502623	UnaryOperationExpression	! leases_ad		3502542	0					
ANR	3502624	UnaryOperator	!		3502542	0					
ANR	3502625	Identifier	leases_ad		3502542	1					
ANR	3502626	CompoundStatement		14:20:416:416	3502542	1					
ANR	3502627	ExpressionStatement	"dprintf ( D_ALWAYS , ""GetLeases: No leases in resource ad for %s\\n"" , resource_name . c_str ( ) )"	427:2:11490:11585	3502542	0	True				
ANR	3502628	CallExpression	"dprintf ( D_ALWAYS , ""GetLeases: No leases in resource ad for %s\\n"" , resource_name . c_str ( ) )"		3502542	0					
ANR	3502629	Callee	dprintf		3502542	0					
ANR	3502630	Identifier	dprintf		3502542	0					
ANR	3502631	ArgumentList	D_ALWAYS		3502542	1					
ANR	3502632	Argument	D_ALWAYS		3502542	0					
ANR	3502633	Identifier	D_ALWAYS		3502542	0					
ANR	3502634	Argument	"""GetLeases: No leases in resource ad for %s\\n"""		3502542	1					
ANR	3502635	PrimaryExpression	"""GetLeases: No leases in resource ad for %s\\n"""		3502542	0					
ANR	3502636	Argument	resource_name . c_str ( )		3502542	2					
ANR	3502637	CallExpression	resource_name . c_str ( )		3502542	0					
ANR	3502638	Callee	resource_name . c_str		3502542	0					
ANR	3502639	MemberAccess	resource_name . c_str		3502542	0					
ANR	3502640	Identifier	resource_name		3502542	0					
ANR	3502641	Identifier	c_str		3502542	1					
ANR	3502642	ArgumentList			3502542	1					
ANR	3502643	ReturnStatement	return - 1 ;	429:2:11589:11598	3502542	1	True				
ANR	3502644	UnaryOperationExpression	- 1		3502542	0					
ANR	3502645	UnaryOperator	-		3502542	0					
ANR	3502646	PrimaryExpression	1		3502542	1					
ANR	3502647	IdentifierDeclStatement	classad :: ExprList * lease_states ;	431:1:11604:11635	3502542	6	True				
ANR	3502648	IdentifierDecl	* lease_states		3502542	0					
ANR	3502649	IdentifierDeclType	classad :: ExprList *		3502542	0					
ANR	3502650	Identifier	lease_states		3502542	1					
ANR	3502651	IfStatement	"if ( ! leases_ad -> EvaluateAttrList ( ""States"" , lease_states ) )"		3502542	7					
ANR	3502652	Condition	"! leases_ad -> EvaluateAttrList ( ""States"" , lease_states )"	432:6:11643:11696	3502542	0	True				
ANR	3502653	UnaryOperationExpression	"! leases_ad -> EvaluateAttrList ( ""States"" , lease_states )"		3502542	0					
ANR	3502654	UnaryOperator	!		3502542	0					
ANR	3502655	CallExpression	"leases_ad -> EvaluateAttrList ( ""States"" , lease_states )"		3502542	1					
ANR	3502656	Callee	leases_ad -> EvaluateAttrList		3502542	0					
ANR	3502657	PtrMemberAccess	leases_ad -> EvaluateAttrList		3502542	0					
ANR	3502658	Identifier	leases_ad		3502542	0					
ANR	3502659	Identifier	EvaluateAttrList		3502542	1					
ANR	3502660	ArgumentList	"""States"""		3502542	1					
ANR	3502661	Argument	"""States"""		3502542	0					
ANR	3502662	PrimaryExpression	"""States"""		3502542	0					
ANR	3502663	Argument	lease_states		3502542	1					
ANR	3502664	Identifier	lease_states		3502542	0					
ANR	3502665	CompoundStatement		20:63:630:630	3502542	1					
ANR	3502666	ExpressionStatement	"dprintf ( D_ALWAYS , ""GetLeases: No lease states in leases ad for %s\\n"" , resource_name . c_str ( ) )"	433:2:11704:11803	3502542	0	True				
ANR	3502667	CallExpression	"dprintf ( D_ALWAYS , ""GetLeases: No lease states in leases ad for %s\\n"" , resource_name . c_str ( ) )"		3502542	0					
ANR	3502668	Callee	dprintf		3502542	0					
ANR	3502669	Identifier	dprintf		3502542	0					
ANR	3502670	ArgumentList	D_ALWAYS		3502542	1					
ANR	3502671	Argument	D_ALWAYS		3502542	0					
ANR	3502672	Identifier	D_ALWAYS		3502542	0					
ANR	3502673	Argument	"""GetLeases: No lease states in leases ad for %s\\n"""		3502542	1					
ANR	3502674	PrimaryExpression	"""GetLeases: No lease states in leases ad for %s\\n"""		3502542	0					
ANR	3502675	Argument	resource_name . c_str ( )		3502542	2					
ANR	3502676	CallExpression	resource_name . c_str ( )		3502542	0					
ANR	3502677	Callee	resource_name . c_str		3502542	0					
ANR	3502678	MemberAccess	resource_name . c_str		3502542	0					
ANR	3502679	Identifier	resource_name		3502542	0					
ANR	3502680	Identifier	c_str		3502542	1					
ANR	3502681	ArgumentList			3502542	1					
ANR	3502682	ReturnStatement	return - 1 ;	435:2:11807:11816	3502542	1	True				
ANR	3502683	UnaryOperationExpression	- 1		3502542	0					
ANR	3502684	UnaryOperator	-		3502542	0					
ANR	3502685	PrimaryExpression	1		3502542	1					
ANR	3502686	IdentifierDeclStatement	int lease_count ;	439:1:11868:11885	3502542	8	True				
ANR	3502687	IdentifierDecl	lease_count		3502542	0					
ANR	3502688	IdentifierDeclType	int		3502542	0					
ANR	3502689	Identifier	lease_count		3502542	1					
ANR	3502690	IfStatement	"if ( ! leases_ad -> EvaluateAttrInt ( ""LeaseCount"" , lease_count ) )"		3502542	9					
ANR	3502691	Condition	"! leases_ad -> EvaluateAttrInt ( ""LeaseCount"" , lease_count )"	440:6:11893:11948	3502542	0	True				
ANR	3502692	UnaryOperationExpression	"! leases_ad -> EvaluateAttrInt ( ""LeaseCount"" , lease_count )"		3502542	0					
ANR	3502693	UnaryOperator	!		3502542	0					
ANR	3502694	CallExpression	"leases_ad -> EvaluateAttrInt ( ""LeaseCount"" , lease_count )"		3502542	1					
ANR	3502695	Callee	leases_ad -> EvaluateAttrInt		3502542	0					
ANR	3502696	PtrMemberAccess	leases_ad -> EvaluateAttrInt		3502542	0					
ANR	3502697	Identifier	leases_ad		3502542	0					
ANR	3502698	Identifier	EvaluateAttrInt		3502542	1					
ANR	3502699	ArgumentList	"""LeaseCount"""		3502542	1					
ANR	3502700	Argument	"""LeaseCount"""		3502542	0					
ANR	3502701	PrimaryExpression	"""LeaseCount"""		3502542	0					
ANR	3502702	Argument	lease_count		3502542	1					
ANR	3502703	Identifier	lease_count		3502542	0					
ANR	3502704	CompoundStatement		28:65:882:882	3502542	1					
ANR	3502705	ExpressionStatement	"dprintf ( D_ALWAYS , ""GetLeases: No 'LeaseCount' in lease ad for %s\\n"" , resource_name . c_str ( ) )"	441:2:11956:12054	3502542	0	True				
ANR	3502706	CallExpression	"dprintf ( D_ALWAYS , ""GetLeases: No 'LeaseCount' in lease ad for %s\\n"" , resource_name . c_str ( ) )"		3502542	0					
ANR	3502707	Callee	dprintf		3502542	0					
ANR	3502708	Identifier	dprintf		3502542	0					
ANR	3502709	ArgumentList	D_ALWAYS		3502542	1					
ANR	3502710	Argument	D_ALWAYS		3502542	0					
ANR	3502711	Identifier	D_ALWAYS		3502542	0					
ANR	3502712	Argument	"""GetLeases: No 'LeaseCount' in lease ad for %s\\n"""		3502542	1					
ANR	3502713	PrimaryExpression	"""GetLeases: No 'LeaseCount' in lease ad for %s\\n"""		3502542	0					
ANR	3502714	Argument	resource_name . c_str ( )		3502542	2					
ANR	3502715	CallExpression	resource_name . c_str ( )		3502542	0					
ANR	3502716	Callee	resource_name . c_str		3502542	0					
ANR	3502717	MemberAccess	resource_name . c_str		3502542	0					
ANR	3502718	Identifier	resource_name		3502542	0					
ANR	3502719	Identifier	c_str		3502542	1					
ANR	3502720	ArgumentList			3502542	1					
ANR	3502721	ReturnStatement	return - 1 ;	443:2:12058:12067	3502542	1	True				
ANR	3502722	UnaryOperationExpression	- 1		3502542	0					
ANR	3502723	UnaryOperator	-		3502542	0					
ANR	3502724	PrimaryExpression	1		3502542	1					
ANR	3502725	IdentifierDeclStatement	int used_count = 0 ;	445:1:12073:12093	3502542	10	True				
ANR	3502726	IdentifierDecl	used_count = 0		3502542	0					
ANR	3502727	IdentifierDeclType	int		3502542	0					
ANR	3502728	Identifier	used_count		3502542	1					
ANR	3502729	AssignmentExpression	used_count = 0		3502542	2		=			
ANR	3502730	Identifier	used_count		3502542	0					
ANR	3502731	PrimaryExpression	0		3502542	1					
ANR	3502732	IfStatement	"if ( ! leases_ad -> EvaluateAttrInt ( ""UsedCount"" , used_count ) )"		3502542	11					
ANR	3502733	Condition	"! leases_ad -> EvaluateAttrInt ( ""UsedCount"" , used_count )"	446:6:12101:12154	3502542	0	True				
ANR	3502734	UnaryOperationExpression	"! leases_ad -> EvaluateAttrInt ( ""UsedCount"" , used_count )"		3502542	0					
ANR	3502735	UnaryOperator	!		3502542	0					
ANR	3502736	CallExpression	"leases_ad -> EvaluateAttrInt ( ""UsedCount"" , used_count )"		3502542	1					
ANR	3502737	Callee	leases_ad -> EvaluateAttrInt		3502542	0					
ANR	3502738	PtrMemberAccess	leases_ad -> EvaluateAttrInt		3502542	0					
ANR	3502739	Identifier	leases_ad		3502542	0					
ANR	3502740	Identifier	EvaluateAttrInt		3502542	1					
ANR	3502741	ArgumentList	"""UsedCount"""		3502542	1					
ANR	3502742	Argument	"""UsedCount"""		3502542	0					
ANR	3502743	PrimaryExpression	"""UsedCount"""		3502542	0					
ANR	3502744	Argument	used_count		3502542	1					
ANR	3502745	Identifier	used_count		3502542	0					
ANR	3502746	CompoundStatement		34:63:1088:1088	3502542	1					
ANR	3502747	ExpressionStatement	"dprintf ( D_ALWAYS , ""GetLeases: No 'UsedCount' in leases ad for %s\\n"" , resource_name . c_str ( ) )"	447:2:12162:12260	3502542	0	True				
ANR	3502748	CallExpression	"dprintf ( D_ALWAYS , ""GetLeases: No 'UsedCount' in leases ad for %s\\n"" , resource_name . c_str ( ) )"		3502542	0					
ANR	3502749	Callee	dprintf		3502542	0					
ANR	3502750	Identifier	dprintf		3502542	0					
ANR	3502751	ArgumentList	D_ALWAYS		3502542	1					
ANR	3502752	Argument	D_ALWAYS		3502542	0					
ANR	3502753	Identifier	D_ALWAYS		3502542	0					
ANR	3502754	Argument	"""GetLeases: No 'UsedCount' in leases ad for %s\\n"""		3502542	1					
ANR	3502755	PrimaryExpression	"""GetLeases: No 'UsedCount' in leases ad for %s\\n"""		3502542	0					
ANR	3502756	Argument	resource_name . c_str ( )		3502542	2					
ANR	3502757	CallExpression	resource_name . c_str ( )		3502542	0					
ANR	3502758	Callee	resource_name . c_str		3502542	0					
ANR	3502759	MemberAccess	resource_name . c_str		3502542	0					
ANR	3502760	Identifier	resource_name		3502542	0					
ANR	3502761	Identifier	c_str		3502542	1					
ANR	3502762	ArgumentList			3502542	1					
ANR	3502763	ReturnStatement	return - 1 ;	449:2:12264:12273	3502542	1	True				
ANR	3502764	UnaryOperationExpression	- 1		3502542	0					
ANR	3502765	UnaryOperator	-		3502542	0					
ANR	3502766	PrimaryExpression	1		3502542	1					
ANR	3502767	IdentifierDeclStatement	"int duration = GetLeaseDuration ( resource_ad , request_ad ) ;"	453:1:12299:12357	3502542	12	True				
ANR	3502768	IdentifierDecl	"duration = GetLeaseDuration ( resource_ad , request_ad )"		3502542	0					
ANR	3502769	IdentifierDeclType	int		3502542	0					
ANR	3502770	Identifier	duration		3502542	1					
ANR	3502771	AssignmentExpression	"duration = GetLeaseDuration ( resource_ad , request_ad )"		3502542	2		=			
ANR	3502772	Identifier	duration		3502542	0					
ANR	3502773	CallExpression	"GetLeaseDuration ( resource_ad , request_ad )"		3502542	1					
ANR	3502774	Callee	GetLeaseDuration		3502542	0					
ANR	3502775	Identifier	GetLeaseDuration		3502542	0					
ANR	3502776	ArgumentList	resource_ad		3502542	1					
ANR	3502777	Argument	resource_ad		3502542	0					
ANR	3502778	Identifier	resource_ad		3502542	0					
ANR	3502779	Argument	request_ad		3502542	1					
ANR	3502780	Identifier	request_ad		3502542	0					
ANR	3502781	IdentifierDeclStatement	int available = ( lease_count - used_count ) / 10 ;	459:1:12573:12622	3502542	13	True				
ANR	3502782	IdentifierDecl	available = ( lease_count - used_count ) / 10		3502542	0					
ANR	3502783	IdentifierDeclType	int		3502542	0					
ANR	3502784	Identifier	available		3502542	1					
ANR	3502785	AssignmentExpression	available = ( lease_count - used_count ) / 10		3502542	2		=			
ANR	3502786	Identifier	available		3502542	0					
ANR	3502787	MultiplicativeExpression	( lease_count - used_count ) / 10		3502542	1		/			
ANR	3502788	AdditiveExpression	lease_count - used_count		3502542	0		-			
ANR	3502789	Identifier	lease_count		3502542	0					
ANR	3502790	Identifier	used_count		3502542	1					
ANR	3502791	PrimaryExpression	10		3502542	1					
ANR	3502792	IfStatement	if ( available < 1 )		3502542	14					
ANR	3502793	Condition	available < 1	460:6:12630:12642	3502542	0	True				
ANR	3502794	RelationalExpression	available < 1		3502542	0		<			
ANR	3502795	Identifier	available		3502542	0					
ANR	3502796	PrimaryExpression	1		3502542	1					
ANR	3502797	CompoundStatement		48:22:1576:1576	3502542	1					
ANR	3502798	ExpressionStatement	available = 1	461:2:12650:12663	3502542	0	True				
ANR	3502799	AssignmentExpression	available = 1		3502542	0		=			
ANR	3502800	Identifier	available		3502542	0					
ANR	3502801	PrimaryExpression	1		3502542	1					
ANR	3502802	IfStatement	if ( target_count > available )		3502542	15					
ANR	3502803	Condition	target_count > available	463:6:12674:12697	3502542	0	True				
ANR	3502804	RelationalExpression	target_count > available		3502542	0		>			
ANR	3502805	Identifier	target_count		3502542	0					
ANR	3502806	Identifier	available		3502542	1					
ANR	3502807	CompoundStatement		51:33:1631:1631	3502542	1					
ANR	3502808	ExpressionStatement	target_count = available	464:2:12705:12729	3502542	0	True				
ANR	3502809	AssignmentExpression	target_count = available		3502542	0		=			
ANR	3502810	Identifier	target_count		3502542	0					
ANR	3502811	Identifier	available		3502542	1					
ANR	3502812	IdentifierDeclStatement	int count = 0 ;	468:1:12799:12813	3502542	16	True				
ANR	3502813	IdentifierDecl	count = 0		3502542	0					
ANR	3502814	IdentifierDeclType	int		3502542	0					
ANR	3502815	Identifier	count		3502542	1					
ANR	3502816	AssignmentExpression	count = 0		3502542	2		=			
ANR	3502817	Identifier	count		3502542	0					
ANR	3502818	PrimaryExpression	0		3502542	1					
ANR	3502819	IdentifierDeclStatement	time_t now = time ( NULL ) ;	469:1:12816:12841	3502542	17	True				
ANR	3502820	IdentifierDecl	now = time ( NULL )		3502542	0					
ANR	3502821	IdentifierDeclType	time_t		3502542	0					
ANR	3502822	Identifier	now		3502542	1					
ANR	3502823	AssignmentExpression	now = time ( NULL )		3502542	2		=			
ANR	3502824	Identifier	now		3502542	0					
ANR	3502825	CallExpression	time ( NULL )		3502542	1					
ANR	3502826	Callee	time		3502542	0					
ANR	3502827	Identifier	time		3502542	0					
ANR	3502828	ArgumentList	NULL		3502542	1					
ANR	3502829	Argument	NULL		3502542	0					
ANR	3502830	Identifier	NULL		3502542	0					
ANR	3502831	IdentifierDeclStatement	vector < classad :: ExprTree * > :: iterator state_iter ;	470:1:12844:12892	3502542	18	True				
ANR	3502832	IdentifierDecl	state_iter		3502542	0					
ANR	3502833	IdentifierDeclType	vector < classad :: ExprTree * > :: iterator		3502542	0					
ANR	3502834	Identifier	state_iter		3502542	1					
ANR	3502835	ForStatement	for ( state_iter = lease_states -> begin ( ) ; state_iter != lease_states -> end ( ) ; state_iter ++ )		3502542	19					
ANR	3502836	ForInit	state_iter = lease_states -> begin ( ) ;	471:7:12901:12936	3502542	0	True				
ANR	3502837	AssignmentExpression	state_iter = lease_states -> begin ( )		3502542	0		=			
ANR	3502838	Identifier	state_iter		3502542	0					
ANR	3502839	CallExpression	lease_states -> begin ( )		3502542	1					
ANR	3502840	Callee	lease_states -> begin		3502542	0					
ANR	3502841	PtrMemberAccess	lease_states -> begin		3502542	0					
ANR	3502842	Identifier	lease_states		3502542	0					
ANR	3502843	Identifier	begin		3502542	1					
ANR	3502844	ArgumentList			3502542	1					
ANR	3502845	Condition	state_iter != lease_states -> end ( )	472:4:12942:12975	3502542	1	True				
ANR	3502846	EqualityExpression	state_iter != lease_states -> end ( )		3502542	0		!=			
ANR	3502847	Identifier	state_iter		3502542	0					
ANR	3502848	CallExpression	lease_states -> end ( )		3502542	1					
ANR	3502849	Callee	lease_states -> end		3502542	0					
ANR	3502850	PtrMemberAccess	lease_states -> end		3502542	0					
ANR	3502851	Identifier	lease_states		3502542	0					
ANR	3502852	Identifier	end		3502542	1					
ANR	3502853	ArgumentList			3502542	1					
ANR	3502854	PostIncDecOperationExpression	state_iter ++	473:4:12982:12993	3502542	2	True				
ANR	3502855	Identifier	state_iter		3502542	0					
ANR	3502856	IncDec	++		3502542	1					
ANR	3502857	CompoundStatement		116:2:3746:3810	3502542	3					
ANR	3502858	IdentifierDeclStatement	classad :: ExprTree * state_expr = * state_iter ;	474:2:13001:13044	3502542	0	True				
ANR	3502859	IdentifierDecl	* state_expr = * state_iter		3502542	0					
ANR	3502860	IdentifierDeclType	classad :: ExprTree *		3502542	0					
ANR	3502861	Identifier	state_expr		3502542	1					
ANR	3502862	AssignmentExpression	* state_expr = * state_iter		3502542	2		=			
ANR	3502863	Identifier	state_expr		3502542	0					
ANR	3502864	UnaryOperationExpression	* state_iter		3502542	1					
ANR	3502865	UnaryOperator	*		3502542	0					
ANR	3502866	Identifier	state_iter		3502542	1					
ANR	3502867	IfStatement	if ( state_expr -> GetKind ( ) != classad :: ExprTree :: CLASSAD_NODE )		3502542	1					
ANR	3502868	Condition	state_expr -> GetKind ( ) != classad :: ExprTree :: CLASSAD_NODE	475:7:13053:13108	3502542	0	True				
ANR	3502869	EqualityExpression	state_expr -> GetKind ( ) != classad :: ExprTree :: CLASSAD_NODE		3502542	0		!=			
ANR	3502870	CallExpression	state_expr -> GetKind ( )		3502542	0					
ANR	3502871	Callee	state_expr -> GetKind		3502542	0					
ANR	3502872	PtrMemberAccess	state_expr -> GetKind		3502542	0					
ANR	3502873	Identifier	state_expr		3502542	0					
ANR	3502874	Identifier	GetKind		3502542	1					
ANR	3502875	ArgumentList			3502542	1					
ANR	3502876	Identifier	classad :: ExprTree :: CLASSAD_NODE		3502542	1					
ANR	3502877	CompoundStatement		63:66:2042:2042	3502542	1					
ANR	3502878	ExpressionStatement	"dprintf ( D_ALWAYS , ""GetLeases:Leases states isn't a ClassAd in %s!\\n"" , resource_name . c_str ( ) )"	476:3:13117:13223	3502542	0	True				
ANR	3502879	CallExpression	"dprintf ( D_ALWAYS , ""GetLeases:Leases states isn't a ClassAd in %s!\\n"" , resource_name . c_str ( ) )"		3502542	0					
ANR	3502880	Callee	dprintf		3502542	0					
ANR	3502881	Identifier	dprintf		3502542	0					
ANR	3502882	ArgumentList	D_ALWAYS		3502542	1					
ANR	3502883	Argument	D_ALWAYS		3502542	0					
ANR	3502884	Identifier	D_ALWAYS		3502542	0					
ANR	3502885	Argument	"""GetLeases:Leases states isn't a ClassAd in %s!\\n"""		3502542	1					
ANR	3502886	PrimaryExpression	"""GetLeases:Leases states isn't a ClassAd in %s!\\n"""		3502542	0					
ANR	3502887	Argument	resource_name . c_str ( )		3502542	2					
ANR	3502888	CallExpression	resource_name . c_str ( )		3502542	0					
ANR	3502889	Callee	resource_name . c_str		3502542	0					
ANR	3502890	MemberAccess	resource_name . c_str		3502542	0					
ANR	3502891	Identifier	resource_name		3502542	0					
ANR	3502892	Identifier	c_str		3502542	1					
ANR	3502893	ArgumentList			3502542	1					
ANR	3502894	ContinueStatement	continue ;	479:3:13228:13236	3502542	1	True				
ANR	3502895	IdentifierDeclStatement	classad :: ClassAd * ad = ( classad :: ClassAd * ) state_expr ;	482:2:13245:13299	3502542	2	True				
ANR	3502896	IdentifierDecl	* ad = ( classad :: ClassAd * ) state_expr		3502542	0					
ANR	3502897	IdentifierDeclType	classad :: ClassAd *		3502542	0					
ANR	3502898	Identifier	ad		3502542	1					
ANR	3502899	AssignmentExpression	* ad = ( classad :: ClassAd * ) state_expr		3502542	2		=			
ANR	3502900	Identifier	ad		3502542	0					
ANR	3502901	CastExpression	( classad :: ClassAd * ) state_expr		3502542	1					
ANR	3502902	CastTarget	classad :: ClassAd *		3502542	0					
ANR	3502903	Identifier	state_expr		3502542	1					
ANR	3502904	IdentifierDeclStatement	int lease_number ;	483:2:13303:13320	3502542	3	True				
ANR	3502905	IdentifierDecl	lease_number		3502542	0					
ANR	3502906	IdentifierDeclType	int		3502542	0					
ANR	3502907	Identifier	lease_number		3502542	1					
ANR	3502908	IdentifierDeclStatement	"bool lease_used , lease_valid ;"	484:2:13324:13352	3502542	4	True				
ANR	3502909	IdentifierDecl	lease_used		3502542	0					
ANR	3502910	IdentifierDeclType	bool		3502542	0					
ANR	3502911	Identifier	lease_used		3502542	1					
ANR	3502912	IdentifierDecl	lease_valid		3502542	1					
ANR	3502913	IdentifierDeclType	bool		3502542	0					
ANR	3502914	Identifier	lease_valid		3502542	1					
ANR	3502915	IfStatement	"if ( ! ad -> EvaluateAttrBool ( ""LeaseUsed"" , lease_used ) || ! ad -> EvaluateAttrBool ( ""LeaseValid"" , lease_valid ) || ! ad -> EvaluateAttrInt ( ""LeaseNumber"" , lease_number ) )"		3502542	5					
ANR	3502916	Condition	"! ad -> EvaluateAttrBool ( ""LeaseUsed"" , lease_used ) || ! ad -> EvaluateAttrBool ( ""LeaseValid"" , lease_valid ) || ! ad -> EvaluateAttrInt ( ""LeaseNumber"" , lease_number )"	485:7:13361:13525	3502542	0	True				
ANR	3502917	OrExpression	"! ad -> EvaluateAttrBool ( ""LeaseUsed"" , lease_used ) || ! ad -> EvaluateAttrBool ( ""LeaseValid"" , lease_valid ) || ! ad -> EvaluateAttrInt ( ""LeaseNumber"" , lease_number )"		3502542	0		||			
ANR	3502918	UnaryOperationExpression	"! ad -> EvaluateAttrBool ( ""LeaseUsed"" , lease_used )"		3502542	0					
ANR	3502919	UnaryOperator	!		3502542	0					
ANR	3502920	CallExpression	"ad -> EvaluateAttrBool ( ""LeaseUsed"" , lease_used )"		3502542	1					
ANR	3502921	Callee	ad -> EvaluateAttrBool		3502542	0					
ANR	3502922	PtrMemberAccess	ad -> EvaluateAttrBool		3502542	0					
ANR	3502923	Identifier	ad		3502542	0					
ANR	3502924	Identifier	EvaluateAttrBool		3502542	1					
ANR	3502925	ArgumentList	"""LeaseUsed"""		3502542	1					
ANR	3502926	Argument	"""LeaseUsed"""		3502542	0					
ANR	3502927	PrimaryExpression	"""LeaseUsed"""		3502542	0					
ANR	3502928	Argument	lease_used		3502542	1					
ANR	3502929	Identifier	lease_used		3502542	0					
ANR	3502930	OrExpression	"! ad -> EvaluateAttrBool ( ""LeaseValid"" , lease_valid ) || ! ad -> EvaluateAttrInt ( ""LeaseNumber"" , lease_number )"		3502542	1		||			
ANR	3502931	UnaryOperationExpression	"! ad -> EvaluateAttrBool ( ""LeaseValid"" , lease_valid )"		3502542	0					
ANR	3502932	UnaryOperator	!		3502542	0					
ANR	3502933	CallExpression	"ad -> EvaluateAttrBool ( ""LeaseValid"" , lease_valid )"		3502542	1					
ANR	3502934	Callee	ad -> EvaluateAttrBool		3502542	0					
ANR	3502935	PtrMemberAccess	ad -> EvaluateAttrBool		3502542	0					
ANR	3502936	Identifier	ad		3502542	0					
ANR	3502937	Identifier	EvaluateAttrBool		3502542	1					
ANR	3502938	ArgumentList	"""LeaseValid"""		3502542	1					
ANR	3502939	Argument	"""LeaseValid"""		3502542	0					
ANR	3502940	PrimaryExpression	"""LeaseValid"""		3502542	0					
ANR	3502941	Argument	lease_valid		3502542	1					
ANR	3502942	Identifier	lease_valid		3502542	0					
ANR	3502943	UnaryOperationExpression	"! ad -> EvaluateAttrInt ( ""LeaseNumber"" , lease_number )"		3502542	1					
ANR	3502944	UnaryOperator	!		3502542	0					
ANR	3502945	CallExpression	"ad -> EvaluateAttrInt ( ""LeaseNumber"" , lease_number )"		3502542	1					
ANR	3502946	Callee	ad -> EvaluateAttrInt		3502542	0					
ANR	3502947	PtrMemberAccess	ad -> EvaluateAttrInt		3502542	0					
ANR	3502948	Identifier	ad		3502542	0					
ANR	3502949	Identifier	EvaluateAttrInt		3502542	1					
ANR	3502950	ArgumentList	"""LeaseNumber"""		3502542	1					
ANR	3502951	Argument	"""LeaseNumber"""		3502542	0					
ANR	3502952	PrimaryExpression	"""LeaseNumber"""		3502542	0					
ANR	3502953	Argument	lease_number		3502542	1					
ANR	3502954	Identifier	lease_number		3502542	0					
ANR	3502955	CompoundStatement		75:58:2459:2459	3502542	1					
ANR	3502956	ExpressionStatement	"dprintf ( D_ALWAYS , ""GetLeases: No used/valid/number in leaseAd for %s!\\n"" , resource_name . c_str ( ) )"	488:3:13534:13644	3502542	0	True				
ANR	3502957	CallExpression	"dprintf ( D_ALWAYS , ""GetLeases: No used/valid/number in leaseAd for %s!\\n"" , resource_name . c_str ( ) )"		3502542	0					
ANR	3502958	Callee	dprintf		3502542	0					
ANR	3502959	Identifier	dprintf		3502542	0					
ANR	3502960	ArgumentList	D_ALWAYS		3502542	1					
ANR	3502961	Argument	D_ALWAYS		3502542	0					
ANR	3502962	Identifier	D_ALWAYS		3502542	0					
ANR	3502963	Argument	"""GetLeases: No used/valid/number in leaseAd for %s!\\n"""		3502542	1					
ANR	3502964	PrimaryExpression	"""GetLeases: No used/valid/number in leaseAd for %s!\\n"""		3502542	0					
ANR	3502965	Argument	resource_name . c_str ( )		3502542	2					
ANR	3502966	CallExpression	resource_name . c_str ( )		3502542	0					
ANR	3502967	Callee	resource_name . c_str		3502542	0					
ANR	3502968	MemberAccess	resource_name . c_str		3502542	0					
ANR	3502969	Identifier	resource_name		3502542	0					
ANR	3502970	Identifier	c_str		3502542	1					
ANR	3502971	ArgumentList			3502542	1					
ANR	3502972	ContinueStatement	continue ;	491:3:13649:13657	3502542	1	True				
ANR	3502973	IfStatement	if ( lease_used || ! lease_valid )		3502542	6					
ANR	3502974	Condition	lease_used || ! lease_valid	493:7:13670:13695	3502542	0	True				
ANR	3502975	OrExpression	lease_used || ! lease_valid		3502542	0		||			
ANR	3502976	Identifier	lease_used		3502542	0					
ANR	3502977	UnaryOperationExpression	! lease_valid		3502542	1					
ANR	3502978	UnaryOperator	!		3502542	0					
ANR	3502979	Identifier	lease_valid		3502542	1					
ANR	3502980	CompoundStatement		81:36:2629:2629	3502542	1					
ANR	3502981	ContinueStatement	continue ;	494:3:13704:13712	3502542	0	True				
ANR	3502982	IdentifierDeclStatement	string lease_id = resource_name ;	498:2:13753:13784	3502542	7	True				
ANR	3502983	IdentifierDecl	lease_id = resource_name		3502542	0					
ANR	3502984	IdentifierDeclType	string		3502542	0					
ANR	3502985	Identifier	lease_id		3502542	1					
ANR	3502986	AssignmentExpression	lease_id = resource_name		3502542	2		=			
ANR	3502987	Identifier	resource_name		3502542	0					
ANR	3502988	Identifier	resource_name		3502542	1					
ANR	3502989	IdentifierDeclStatement	char tmp [ 32 ] ;	499:2:13788:13800	3502542	8	True				
ANR	3502990	IdentifierDecl	tmp [ 32 ]		3502542	0					
ANR	3502991	IdentifierDeclType	char [ 32 ]		3502542	0					
ANR	3502992	Identifier	tmp		3502542	1					
ANR	3502993	PrimaryExpression	32		3502542	2					
ANR	3502994	ExpressionStatement	"snprintf ( tmp , sizeof ( tmp ) , "":%d"" , lease_number )"	500:2:13804:13855	3502542	9	True				
ANR	3502995	CallExpression	"snprintf ( tmp , sizeof ( tmp ) , "":%d"" , lease_number )"		3502542	0					
ANR	3502996	Callee	snprintf		3502542	0					
ANR	3502997	Identifier	snprintf		3502542	0					
ANR	3502998	ArgumentList	tmp		3502542	1					
ANR	3502999	Argument	tmp		3502542	0					
ANR	3503000	Identifier	tmp		3502542	0					
ANR	3503001	Argument	sizeof ( tmp )		3502542	1					
ANR	3503002	SizeofExpression	sizeof ( tmp )		3502542	0					
ANR	3503003	Sizeof	sizeof		3502542	0					
ANR	3503004	SizeofOperand	tmp		3502542	1					
ANR	3503005	Argument	""":%d"""		3502542	2					
ANR	3503006	PrimaryExpression	""":%d"""		3502542	0					
ANR	3503007	Argument	lease_number		3502542	3					
ANR	3503008	Identifier	lease_number		3502542	0					
ANR	3503009	ExpressionStatement	lease_id += tmp	501:2:13859:13874	3502542	10	True				
ANR	3503010	AssignmentExpression	lease_id += tmp		3502542	0		+=			
ANR	3503011	Identifier	lease_id		3502542	0					
ANR	3503012	Identifier	tmp		3502542	1					
ANR	3503013	ExpressionStatement	"snprintf ( tmp , sizeof ( tmp ) , "":%d"" , m_lease_id_number ++ )"	502:2:13878:13936	3502542	11	True				
ANR	3503014	CallExpression	"snprintf ( tmp , sizeof ( tmp ) , "":%d"" , m_lease_id_number ++ )"		3502542	0					
ANR	3503015	Callee	snprintf		3502542	0					
ANR	3503016	Identifier	snprintf		3502542	0					
ANR	3503017	ArgumentList	tmp		3502542	1					
ANR	3503018	Argument	tmp		3502542	0					
ANR	3503019	Identifier	tmp		3502542	0					
ANR	3503020	Argument	sizeof ( tmp )		3502542	1					
ANR	3503021	SizeofExpression	sizeof ( tmp )		3502542	0					
ANR	3503022	Sizeof	sizeof		3502542	0					
ANR	3503023	SizeofOperand	tmp		3502542	1					
ANR	3503024	Argument	""":%d"""		3502542	2					
ANR	3503025	PrimaryExpression	""":%d"""		3502542	0					
ANR	3503026	Argument	m_lease_id_number ++		3502542	3					
ANR	3503027	PostIncDecOperationExpression	m_lease_id_number ++		3502542	0					
ANR	3503028	Identifier	m_lease_id_number		3502542	0					
ANR	3503029	IncDec	++		3502542	1					
ANR	3503030	ExpressionStatement	lease_id += tmp	503:2:13940:13955	3502542	12	True				
ANR	3503031	AssignmentExpression	lease_id += tmp		3502542	0		+=			
ANR	3503032	Identifier	lease_id		3502542	0					
ANR	3503033	Identifier	tmp		3502542	1					
ANR	3503034	Statement	classad	506:2:14013:14019	3502542	13	True				
ANR	3503035	Statement	::	506:9:14020:14021	3502542	14	True				
ANR	3503036	Statement	ClassAd	506:11:14022:14028	3502542	15	True				
ANR	3503037	Statement	*	506:19:14030:14030	3502542	16	True				
ANR	3503038	Statement	updates	506:20:14031:14037	3502542	17	True				
ANR	3503039	Statement	=	506:28:14039:14039	3502542	18	True				
ANR	3503040	Statement	new	506:30:14041:14043	3502542	19	True				
ANR	3503041	ExpressionStatement	classad :: ClassAd	506:34:14045:14061	3502542	20	True				
ANR	3503042	Identifier	classad :: ClassAd		3502542	0					
ANR	3503043	IfStatement	"if ( ! updates -> InsertAttr ( ""LeaseUsed"" , true ) || ! updates -> InsertAttr ( ""LeaseStartTime"" , ( int ) now ) || ! updates -> InsertAttr ( ""LeaseCreationTime"" , ( int ) now ) || ! updates -> InsertAttr ( ""LeaseDuration"" , duration ) || ! updates -> InsertAttr ( ""Requestor"" , request_name ) || ! updates -> InsertAttr ( ""LeaseId"" , lease_id ) )"		3502542	21					
ANR	3503044	Condition	"! updates -> InsertAttr ( ""LeaseUsed"" , true ) || ! updates -> InsertAttr ( ""LeaseStartTime"" , ( int ) now ) || ! updates -> InsertAttr ( ""LeaseCreationTime"" , ( int ) now ) || ! updates -> InsertAttr ( ""LeaseDuration"" , duration ) || ! updates -> InsertAttr ( ""Requestor"" , request_name ) || ! updates -> InsertAttr ( ""LeaseId"" , lease_id )"	507:7:14070:14396	3502542	0	True				
ANR	3503045	OrExpression	"! updates -> InsertAttr ( ""LeaseUsed"" , true ) || ! updates -> InsertAttr ( ""LeaseStartTime"" , ( int ) now ) || ! updates -> InsertAttr ( ""LeaseCreationTime"" , ( int ) now ) || ! updates -> InsertAttr ( ""LeaseDuration"" , duration ) || ! updates -> InsertAttr ( ""Requestor"" , request_name ) || ! updates -> InsertAttr ( ""LeaseId"" , lease_id )"		3502542	0		||			
ANR	3503046	UnaryOperationExpression	"! updates -> InsertAttr ( ""LeaseUsed"" , true )"		3502542	0					
ANR	3503047	UnaryOperator	!		3502542	0					
ANR	3503048	CallExpression	"updates -> InsertAttr ( ""LeaseUsed"" , true )"		3502542	1					
ANR	3503049	Callee	updates -> InsertAttr		3502542	0					
ANR	3503050	PtrMemberAccess	updates -> InsertAttr		3502542	0					
ANR	3503051	Identifier	updates		3502542	0					
ANR	3503052	Identifier	InsertAttr		3502542	1					
ANR	3503053	ArgumentList	"""LeaseUsed"""		3502542	1					
ANR	3503054	Argument	"""LeaseUsed"""		3502542	0					
ANR	3503055	PrimaryExpression	"""LeaseUsed"""		3502542	0					
ANR	3503056	Argument	true		3502542	1					
ANR	3503057	Identifier	true		3502542	0					
ANR	3503058	OrExpression	"! updates -> InsertAttr ( ""LeaseStartTime"" , ( int ) now ) || ! updates -> InsertAttr ( ""LeaseCreationTime"" , ( int ) now ) || ! updates -> InsertAttr ( ""LeaseDuration"" , duration ) || ! updates -> InsertAttr ( ""Requestor"" , request_name ) || ! updates -> InsertAttr ( ""LeaseId"" , lease_id )"		3502542	1		||			
ANR	3503059	UnaryOperationExpression	"! updates -> InsertAttr ( ""LeaseStartTime"" , ( int ) now )"		3502542	0					
ANR	3503060	UnaryOperator	!		3502542	0					
ANR	3503061	CallExpression	"updates -> InsertAttr ( ""LeaseStartTime"" , ( int ) now )"		3502542	1					
ANR	3503062	Callee	updates -> InsertAttr		3502542	0					
ANR	3503063	PtrMemberAccess	updates -> InsertAttr		3502542	0					
ANR	3503064	Identifier	updates		3502542	0					
ANR	3503065	Identifier	InsertAttr		3502542	1					
ANR	3503066	ArgumentList	"""LeaseStartTime"""		3502542	1					
ANR	3503067	Argument	"""LeaseStartTime"""		3502542	0					
ANR	3503068	PrimaryExpression	"""LeaseStartTime"""		3502542	0					
ANR	3503069	Argument	( int ) now		3502542	1					
ANR	3503070	CastExpression	( int ) now		3502542	0					
ANR	3503071	CastTarget	int		3502542	0					
ANR	3503072	Identifier	now		3502542	1					
ANR	3503073	OrExpression	"! updates -> InsertAttr ( ""LeaseCreationTime"" , ( int ) now ) || ! updates -> InsertAttr ( ""LeaseDuration"" , duration ) || ! updates -> InsertAttr ( ""Requestor"" , request_name ) || ! updates -> InsertAttr ( ""LeaseId"" , lease_id )"		3502542	1		||			
ANR	3503074	UnaryOperationExpression	"! updates -> InsertAttr ( ""LeaseCreationTime"" , ( int ) now )"		3502542	0					
ANR	3503075	UnaryOperator	!		3502542	0					
ANR	3503076	CallExpression	"updates -> InsertAttr ( ""LeaseCreationTime"" , ( int ) now )"		3502542	1					
ANR	3503077	Callee	updates -> InsertAttr		3502542	0					
ANR	3503078	PtrMemberAccess	updates -> InsertAttr		3502542	0					
ANR	3503079	Identifier	updates		3502542	0					
ANR	3503080	Identifier	InsertAttr		3502542	1					
ANR	3503081	ArgumentList	"""LeaseCreationTime"""		3502542	1					
ANR	3503082	Argument	"""LeaseCreationTime"""		3502542	0					
ANR	3503083	PrimaryExpression	"""LeaseCreationTime"""		3502542	0					
ANR	3503084	Argument	( int ) now		3502542	1					
ANR	3503085	CastExpression	( int ) now		3502542	0					
ANR	3503086	CastTarget	int		3502542	0					
ANR	3503087	Identifier	now		3502542	1					
ANR	3503088	OrExpression	"! updates -> InsertAttr ( ""LeaseDuration"" , duration ) || ! updates -> InsertAttr ( ""Requestor"" , request_name ) || ! updates -> InsertAttr ( ""LeaseId"" , lease_id )"		3502542	1		||			
ANR	3503089	UnaryOperationExpression	"! updates -> InsertAttr ( ""LeaseDuration"" , duration )"		3502542	0					
ANR	3503090	UnaryOperator	!		3502542	0					
ANR	3503091	CallExpression	"updates -> InsertAttr ( ""LeaseDuration"" , duration )"		3502542	1					
ANR	3503092	Callee	updates -> InsertAttr		3502542	0					
ANR	3503093	PtrMemberAccess	updates -> InsertAttr		3502542	0					
ANR	3503094	Identifier	updates		3502542	0					
ANR	3503095	Identifier	InsertAttr		3502542	1					
ANR	3503096	ArgumentList	"""LeaseDuration"""		3502542	1					
ANR	3503097	Argument	"""LeaseDuration"""		3502542	0					
ANR	3503098	PrimaryExpression	"""LeaseDuration"""		3502542	0					
ANR	3503099	Argument	duration		3502542	1					
ANR	3503100	Identifier	duration		3502542	0					
ANR	3503101	OrExpression	"! updates -> InsertAttr ( ""Requestor"" , request_name ) || ! updates -> InsertAttr ( ""LeaseId"" , lease_id )"		3502542	1		||			
ANR	3503102	UnaryOperationExpression	"! updates -> InsertAttr ( ""Requestor"" , request_name )"		3502542	0					
ANR	3503103	UnaryOperator	!		3502542	0					
ANR	3503104	CallExpression	"updates -> InsertAttr ( ""Requestor"" , request_name )"		3502542	1					
ANR	3503105	Callee	updates -> InsertAttr		3502542	0					
ANR	3503106	PtrMemberAccess	updates -> InsertAttr		3502542	0					
ANR	3503107	Identifier	updates		3502542	0					
ANR	3503108	Identifier	InsertAttr		3502542	1					
ANR	3503109	ArgumentList	"""Requestor"""		3502542	1					
ANR	3503110	Argument	"""Requestor"""		3502542	0					
ANR	3503111	PrimaryExpression	"""Requestor"""		3502542	0					
ANR	3503112	Argument	request_name		3502542	1					
ANR	3503113	Identifier	request_name		3502542	0					
ANR	3503114	UnaryOperationExpression	"! updates -> InsertAttr ( ""LeaseId"" , lease_id )"		3502542	1					
ANR	3503115	UnaryOperator	!		3502542	0					
ANR	3503116	CallExpression	"updates -> InsertAttr ( ""LeaseId"" , lease_id )"		3502542	1					
ANR	3503117	Callee	updates -> InsertAttr		3502542	0					
ANR	3503118	PtrMemberAccess	updates -> InsertAttr		3502542	0					
ANR	3503119	Identifier	updates		3502542	0					
ANR	3503120	Identifier	InsertAttr		3502542	1					
ANR	3503121	ArgumentList	"""LeaseId"""		3502542	1					
ANR	3503122	Argument	"""LeaseId"""		3502542	0					
ANR	3503123	PrimaryExpression	"""LeaseId"""		3502542	0					
ANR	3503124	Argument	lease_id		3502542	1					
ANR	3503125	Identifier	lease_id		3502542	0					
ANR	3503126	CompoundStatement		100:50:3330:3330	3502542	1					
ANR	3503127	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to insert data into lease update ad!\\n"" )"	513:3:14405:14479	3502542	0	True				
ANR	3503128	CallExpression	"dprintf ( D_ALWAYS , ""Failed to insert data into lease update ad!\\n"" )"		3502542	0					
ANR	3503129	Callee	dprintf		3502542	0					
ANR	3503130	Identifier	dprintf		3502542	0					
ANR	3503131	ArgumentList	D_ALWAYS		3502542	1					
ANR	3503132	Argument	D_ALWAYS		3502542	0					
ANR	3503133	Identifier	D_ALWAYS		3502542	0					
ANR	3503134	Argument	"""Failed to insert data into lease update ad!\\n"""		3502542	1					
ANR	3503135	PrimaryExpression	"""Failed to insert data into lease update ad!\\n"""		3502542	0					
ANR	3503136	ContinueStatement	continue ;	515:3:14484:14492	3502542	1	True				
ANR	3503137	IfStatement	"if ( ! UpdateLeaseAd ( resource_name , lease_number , updates ) )"		3502542	22					
ANR	3503138	Condition	"! UpdateLeaseAd ( resource_name , lease_number , updates )"	519:7:14529:14582	3502542	0	True				
ANR	3503139	UnaryOperationExpression	"! UpdateLeaseAd ( resource_name , lease_number , updates )"		3502542	0					
ANR	3503140	UnaryOperator	!		3502542	0					
ANR	3503141	CallExpression	"UpdateLeaseAd ( resource_name , lease_number , updates )"		3502542	1					
ANR	3503142	Callee	UpdateLeaseAd		3502542	0					
ANR	3503143	Identifier	UpdateLeaseAd		3502542	0					
ANR	3503144	ArgumentList	resource_name		3502542	1					
ANR	3503145	Argument	resource_name		3502542	0					
ANR	3503146	Identifier	resource_name		3502542	0					
ANR	3503147	Argument	lease_number		3502542	1					
ANR	3503148	Identifier	lease_number		3502542	0					
ANR	3503149	Argument	updates		3502542	2					
ANR	3503150	Identifier	updates		3502542	0					
ANR	3503151	CompoundStatement		107:64:3516:3516	3502542	1					
ANR	3503152	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to modify lease ad!\\n"" )"	520:3:14591:14642	3502542	0	True				
ANR	3503153	CallExpression	"dprintf ( D_ALWAYS , ""Failed to modify lease ad!\\n"" )"		3502542	0					
ANR	3503154	Callee	dprintf		3502542	0					
ANR	3503155	Identifier	dprintf		3502542	0					
ANR	3503156	ArgumentList	D_ALWAYS		3502542	1					
ANR	3503157	Argument	D_ALWAYS		3502542	0					
ANR	3503158	Identifier	D_ALWAYS		3502542	0					
ANR	3503159	Argument	"""Failed to modify lease ad!\\n"""		3502542	1					
ANR	3503160	PrimaryExpression	"""Failed to modify lease ad!\\n"""		3502542	0					
ANR	3503161	ContinueStatement	continue ;	521:3:14647:14655	3502542	1	True				
ANR	3503162	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Granted leaseID %s to %s for %ds\\n"" , lease_id . c_str ( ) , request_name . c_str ( ) , duration )"	524:2:14664:14779	3502542	23	True				
ANR	3503163	CallExpression	"dprintf ( D_FULLDEBUG , ""Granted leaseID %s to %s for %ds\\n"" , lease_id . c_str ( ) , request_name . c_str ( ) , duration )"		3502542	0					
ANR	3503164	Callee	dprintf		3502542	0					
ANR	3503165	Identifier	dprintf		3502542	0					
ANR	3503166	ArgumentList	D_FULLDEBUG		3502542	1					
ANR	3503167	Argument	D_FULLDEBUG		3502542	0					
ANR	3503168	Identifier	D_FULLDEBUG		3502542	0					
ANR	3503169	Argument	"""Granted leaseID %s to %s for %ds\\n"""		3502542	1					
ANR	3503170	PrimaryExpression	"""Granted leaseID %s to %s for %ds\\n"""		3502542	0					
ANR	3503171	Argument	lease_id . c_str ( )		3502542	2					
ANR	3503172	CallExpression	lease_id . c_str ( )		3502542	0					
ANR	3503173	Callee	lease_id . c_str		3502542	0					
ANR	3503174	MemberAccess	lease_id . c_str		3502542	0					
ANR	3503175	Identifier	lease_id		3502542	0					
ANR	3503176	Identifier	c_str		3502542	1					
ANR	3503177	ArgumentList			3502542	1					
ANR	3503178	Argument	request_name . c_str ( )		3502542	3					
ANR	3503179	CallExpression	request_name . c_str ( )		3502542	0					
ANR	3503180	Callee	request_name . c_str		3502542	0					
ANR	3503181	MemberAccess	request_name . c_str		3502542	0					
ANR	3503182	Identifier	request_name		3502542	0					
ANR	3503183	Identifier	c_str		3502542	1					
ANR	3503184	ArgumentList			3502542	1					
ANR	3503185	Argument	duration		3502542	4					
ANR	3503186	Identifier	duration		3502542	0					
ANR	3503187	IdentifierDeclStatement	classad :: ClassAd * lease_ad = new classad :: ClassAd ( resource_ad ) ;	528:2:14816:14880	3502542	24	True				
ANR	3503188	IdentifierDecl	* lease_ad = new classad :: ClassAd ( resource_ad )		3502542	0					
ANR	3503189	IdentifierDeclType	classad :: ClassAd *		3502542	0					
ANR	3503190	Identifier	lease_ad		3502542	1					
ANR	3503191	AssignmentExpression	* lease_ad = new classad :: ClassAd ( resource_ad )		3502542	2		=			
ANR	3503192	Identifier	resource_ad		3502542	0					
ANR	3503193	Identifier	resource_ad		3502542	1					
ANR	3503194	ExpressionStatement	lease_ad -> Update ( * ad )	531:2:14928:14951	3502542	25	True				
ANR	3503195	CallExpression	lease_ad -> Update ( * ad )		3502542	0					
ANR	3503196	Callee	lease_ad -> Update		3502542	0					
ANR	3503197	PtrMemberAccess	lease_ad -> Update		3502542	0					
ANR	3503198	Identifier	lease_ad		3502542	0					
ANR	3503199	Identifier	Update		3502542	1					
ANR	3503200	ArgumentList	* ad		3502542	1					
ANR	3503201	Argument	* ad		3502542	0					
ANR	3503202	UnaryOperationExpression	* ad		3502542	0					
ANR	3503203	UnaryOperator	*		3502542	0					
ANR	3503204	Identifier	ad		3502542	1					
ANR	3503205	ExpressionStatement	lease_ad -> Delete ( m_view_key )	532:2:14955:14985	3502542	26	True				
ANR	3503206	CallExpression	lease_ad -> Delete ( m_view_key )		3502542	0					
ANR	3503207	Callee	lease_ad -> Delete		3502542	0					
ANR	3503208	PtrMemberAccess	lease_ad -> Delete		3502542	0					
ANR	3503209	Identifier	lease_ad		3502542	0					
ANR	3503210	Identifier	Delete		3502542	1					
ANR	3503211	ArgumentList	m_view_key		3502542	1					
ANR	3503212	Argument	m_view_key		3502542	0					
ANR	3503213	Identifier	m_view_key		3502542	0					
ANR	3503214	ExpressionStatement	"lease_ad -> InsertAttr ( ""ReleaseWhenDone"" , false )"	535:2:15033:15081	3502542	27	True				
ANR	3503215	CallExpression	"lease_ad -> InsertAttr ( ""ReleaseWhenDone"" , false )"		3502542	0					
ANR	3503216	Callee	lease_ad -> InsertAttr		3502542	0					
ANR	3503217	PtrMemberAccess	lease_ad -> InsertAttr		3502542	0					
ANR	3503218	Identifier	lease_ad		3502542	0					
ANR	3503219	Identifier	InsertAttr		3502542	1					
ANR	3503220	ArgumentList	"""ReleaseWhenDone"""		3502542	1					
ANR	3503221	Argument	"""ReleaseWhenDone"""		3502542	0					
ANR	3503222	PrimaryExpression	"""ReleaseWhenDone"""		3502542	0					
ANR	3503223	Argument	false		3502542	1					
ANR	3503224	Identifier	false		3502542	0					
ANR	3503225	ExpressionStatement	leases . push_back ( lease_ad )	538:2:15125:15153	3502542	28	True				
ANR	3503226	CallExpression	leases . push_back ( lease_ad )		3502542	0					
ANR	3503227	Callee	leases . push_back		3502542	0					
ANR	3503228	MemberAccess	leases . push_back		3502542	0					
ANR	3503229	Identifier	leases		3502542	0					
ANR	3503230	Identifier	push_back		3502542	1					
ANR	3503231	ArgumentList	lease_ad		3502542	1					
ANR	3503232	Argument	lease_ad		3502542	0					
ANR	3503233	Identifier	lease_ad		3502542	0					
ANR	3503234	Statement	LeaseManagerLeaseEnt	541:2:15199:15218	3502542	29	True				
ANR	3503235	Statement	*	541:23:15220:15220	3502542	30	True				
ANR	3503236	Statement	lease_ent	541:24:15221:15229	3502542	31	True				
ANR	3503237	Statement	=	541:34:15231:15231	3502542	32	True				
ANR	3503238	Statement	new	541:36:15233:15235	3502542	33	True				
ANR	3503239	ExpressionStatement	LeaseManagerLeaseEnt	541:40:15237:15257	3502542	34	True				
ANR	3503240	Identifier	LeaseManagerLeaseEnt		3502542	0					
ANR	3503241	ExpressionStatement	lease_ent -> m_lease_ad = ad	542:2:15261:15287	3502542	35	True				
ANR	3503242	AssignmentExpression	lease_ent -> m_lease_ad = ad		3502542	0		=			
ANR	3503243	PtrMemberAccess	lease_ent -> m_lease_ad		3502542	0					
ANR	3503244	Identifier	lease_ent		3502542	0					
ANR	3503245	Identifier	m_lease_ad		3502542	1					
ANR	3503246	Identifier	ad		3502542	1					
ANR	3503247	ExpressionStatement	lease_ent -> m_lease_number = lease_number	543:2:15291:15331	3502542	36	True				
ANR	3503248	AssignmentExpression	lease_ent -> m_lease_number = lease_number		3502542	0		=			
ANR	3503249	PtrMemberAccess	lease_ent -> m_lease_number		3502542	0					
ANR	3503250	Identifier	lease_ent		3502542	0					
ANR	3503251	Identifier	m_lease_number		3502542	1					
ANR	3503252	Identifier	lease_number		3502542	1					
ANR	3503253	ExpressionStatement	lease_ent -> m_leases_ad = leases_ad	544:2:15335:15369	3502542	37	True				
ANR	3503254	AssignmentExpression	lease_ent -> m_leases_ad = leases_ad		3502542	0		=			
ANR	3503255	PtrMemberAccess	lease_ent -> m_leases_ad		3502542	0					
ANR	3503256	Identifier	lease_ent		3502542	0					
ANR	3503257	Identifier	m_leases_ad		3502542	1					
ANR	3503258	Identifier	leases_ad		3502542	1					
ANR	3503259	ExpressionStatement	lease_ent -> m_expiration = ( int ) now + duration	545:2:15373:15419	3502542	38	True				
ANR	3503260	AssignmentExpression	lease_ent -> m_expiration = ( int ) now + duration		3502542	0		=			
ANR	3503261	PtrMemberAccess	lease_ent -> m_expiration		3502542	0					
ANR	3503262	Identifier	lease_ent		3502542	0					
ANR	3503263	Identifier	m_expiration		3502542	1					
ANR	3503264	AdditiveExpression	( int ) now + duration		3502542	1		+			
ANR	3503265	CastExpression	( int ) now		3502542	0					
ANR	3503266	CastTarget	int		3502542	0					
ANR	3503267	Identifier	now		3502542	1					
ANR	3503268	Identifier	duration		3502542	1					
ANR	3503269	ExpressionStatement	lease_ent -> m_resource_name = resource_name	546:2:15423:15465	3502542	39	True				
ANR	3503270	AssignmentExpression	lease_ent -> m_resource_name = resource_name		3502542	0		=			
ANR	3503271	PtrMemberAccess	lease_ent -> m_resource_name		3502542	0					
ANR	3503272	Identifier	lease_ent		3502542	0					
ANR	3503273	Identifier	m_resource_name		3502542	1					
ANR	3503274	Identifier	resource_name		3502542	1					
ANR	3503275	ExpressionStatement	m_used_leases [ lease_id ] = lease_ent	547:2:15469:15504	3502542	40	True				
ANR	3503276	AssignmentExpression	m_used_leases [ lease_id ] = lease_ent		3502542	0		=			
ANR	3503277	ArrayIndexing	m_used_leases [ lease_id ]		3502542	0					
ANR	3503278	Identifier	m_used_leases		3502542	0					
ANR	3503279	Identifier	lease_id		3502542	1					
ANR	3503280	Identifier	lease_ent		3502542	1					
ANR	3503281	IfStatement	if ( ++ count >= target_count )		3502542	41					
ANR	3503282	Condition	++ count >= target_count	550:7:15546:15568	3502542	0	True				
ANR	3503283	RelationalExpression	++ count >= target_count		3502542	0		>=			
ANR	3503284	UnaryExpression	++ count		3502542	0					
ANR	3503285	IncDec	++		3502542	0					
ANR	3503286	Identifier	count		3502542	1					
ANR	3503287	Identifier	target_count		3502542	1					
ANR	3503288	CompoundStatement		138:33:4502:4502	3502542	1					
ANR	3503289	BreakStatement	break ;	551:3:15577:15582	3502542	0	True				
ANR	3503290	ExpressionStatement	m_stats . m_num_busy_leases += count	556:1:15626:15660	3502542	20	True				
ANR	3503291	AssignmentExpression	m_stats . m_num_busy_leases += count		3502542	0		+=			
ANR	3503292	MemberAccess	m_stats . m_num_busy_leases		3502542	0					
ANR	3503293	Identifier	m_stats		3502542	0					
ANR	3503294	Identifier	m_num_busy_leases		3502542	1					
ANR	3503295	Identifier	count		3502542	1					
ANR	3503296	ExpressionStatement	used_count += count	557:1:15663:15682	3502542	21	True				
ANR	3503297	AssignmentExpression	used_count += count		3502542	0		+=			
ANR	3503298	Identifier	used_count		3502542	0					
ANR	3503299	Identifier	count		3502542	1					
ANR	3503300	CompoundStatement		148:1:4641:4641	3502542	22					
ANR	3503301	Statement	classad	561:2:15715:15721	3502542	0	True				
ANR	3503302	Statement	::	561:9:15722:15723	3502542	1	True				
ANR	3503303	Statement	ClassAd	561:11:15724:15730	3502542	2	True				
ANR	3503304	Statement	*	561:19:15732:15732	3502542	3	True				
ANR	3503305	Statement	updates	561:20:15733:15739	3502542	4	True				
ANR	3503306	Statement	=	561:28:15741:15741	3502542	5	True				
ANR	3503307	Statement	new	561:30:15743:15745	3502542	6	True				
ANR	3503308	ExpressionStatement	classad :: ClassAd	561:34:15747:15763	3502542	7	True				
ANR	3503309	Identifier	classad :: ClassAd		3502542	0					
ANR	3503310	ExpressionStatement	"updates -> InsertAttr ( ""UsedCount"" , used_count )"	562:2:15767:15813	3502542	8	True				
ANR	3503311	CallExpression	"updates -> InsertAttr ( ""UsedCount"" , used_count )"		3502542	0					
ANR	3503312	Callee	updates -> InsertAttr		3502542	0					
ANR	3503313	PtrMemberAccess	updates -> InsertAttr		3502542	0					
ANR	3503314	Identifier	updates		3502542	0					
ANR	3503315	Identifier	InsertAttr		3502542	1					
ANR	3503316	ArgumentList	"""UsedCount"""		3502542	1					
ANR	3503317	Argument	"""UsedCount"""		3502542	0					
ANR	3503318	PrimaryExpression	"""UsedCount"""		3502542	0					
ANR	3503319	Argument	used_count		3502542	1					
ANR	3503320	Identifier	used_count		3502542	0					
ANR	3503321	IfStatement	"if ( ! UpdateLeasesAd ( resource_name , updates ) )"		3502542	9					
ANR	3503322	Condition	"! UpdateLeasesAd ( resource_name , updates )"	563:7:15822:15862	3502542	0	True				
ANR	3503323	UnaryOperationExpression	"! UpdateLeasesAd ( resource_name , updates )"		3502542	0					
ANR	3503324	UnaryOperator	!		3502542	0					
ANR	3503325	CallExpression	"UpdateLeasesAd ( resource_name , updates )"		3502542	1					
ANR	3503326	Callee	UpdateLeasesAd		3502542	0					
ANR	3503327	Identifier	UpdateLeasesAd		3502542	0					
ANR	3503328	ArgumentList	resource_name		3502542	1					
ANR	3503329	Argument	resource_name		3502542	0					
ANR	3503330	Identifier	resource_name		3502542	0					
ANR	3503331	Argument	updates		3502542	1					
ANR	3503332	Identifier	updates		3502542	0					
ANR	3503333	CompoundStatement		151:51:4796:4796	3502542	1					
ANR	3503334	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed updates leases in collection for %s\\n"" , resource_name . c_str ( ) )"	564:3:15871:15967	3502542	0	True				
ANR	3503335	CallExpression	"dprintf ( D_ALWAYS , ""Failed updates leases in collection for %s\\n"" , resource_name . c_str ( ) )"		3502542	0					
ANR	3503336	Callee	dprintf		3502542	0					
ANR	3503337	Identifier	dprintf		3502542	0					
ANR	3503338	ArgumentList	D_ALWAYS		3502542	1					
ANR	3503339	Argument	D_ALWAYS		3502542	0					
ANR	3503340	Identifier	D_ALWAYS		3502542	0					
ANR	3503341	Argument	"""Failed updates leases in collection for %s\\n"""		3502542	1					
ANR	3503342	PrimaryExpression	"""Failed updates leases in collection for %s\\n"""		3502542	0					
ANR	3503343	Argument	resource_name . c_str ( )		3502542	2					
ANR	3503344	CallExpression	resource_name . c_str ( )		3502542	0					
ANR	3503345	Callee	resource_name . c_str		3502542	0					
ANR	3503346	MemberAccess	resource_name . c_str		3502542	0					
ANR	3503347	Identifier	resource_name		3502542	0					
ANR	3503348	Identifier	c_str		3502542	1					
ANR	3503349	ArgumentList			3502542	1					
ANR	3503350	CompoundStatement		158:1:4935:4935	3502542	23					
ANR	3503351	Statement	classad	571:2:16009:16015	3502542	0	True				
ANR	3503352	Statement	::	571:9:16016:16017	3502542	1	True				
ANR	3503353	Statement	ClassAd	571:11:16018:16024	3502542	2	True				
ANR	3503354	Statement	*	571:19:16026:16026	3502542	3	True				
ANR	3503355	Statement	updates	571:20:16027:16033	3502542	4	True				
ANR	3503356	Statement	=	571:28:16035:16035	3502542	5	True				
ANR	3503357	Statement	new	571:30:16037:16039	3502542	6	True				
ANR	3503358	ExpressionStatement	classad :: ClassAd	571:34:16041:16057	3502542	7	True				
ANR	3503359	Identifier	classad :: ClassAd		3502542	0					
ANR	3503360	ExpressionStatement	"updates -> InsertAttr ( ""_LeasesUsed"" , used_count )"	572:2:16061:16109	3502542	8	True				
ANR	3503361	CallExpression	"updates -> InsertAttr ( ""_LeasesUsed"" , used_count )"		3502542	0					
ANR	3503362	Callee	updates -> InsertAttr		3502542	0					
ANR	3503363	PtrMemberAccess	updates -> InsertAttr		3502542	0					
ANR	3503364	Identifier	updates		3502542	0					
ANR	3503365	Identifier	InsertAttr		3502542	1					
ANR	3503366	ArgumentList	"""_LeasesUsed"""		3502542	1					
ANR	3503367	Argument	"""_LeasesUsed"""		3502542	0					
ANR	3503368	PrimaryExpression	"""_LeasesUsed"""		3502542	0					
ANR	3503369	Argument	used_count		3502542	1					
ANR	3503370	Identifier	used_count		3502542	0					
ANR	3503371	IfStatement	"if ( ! UpdateResourceAd ( resource_name , updates ) )"		3502542	9					
ANR	3503372	Condition	"! UpdateResourceAd ( resource_name , updates )"	573:7:16118:16160	3502542	0	True				
ANR	3503373	UnaryOperationExpression	"! UpdateResourceAd ( resource_name , updates )"		3502542	0					
ANR	3503374	UnaryOperator	!		3502542	0					
ANR	3503375	CallExpression	"UpdateResourceAd ( resource_name , updates )"		3502542	1					
ANR	3503376	Callee	UpdateResourceAd		3502542	0					
ANR	3503377	Identifier	UpdateResourceAd		3502542	0					
ANR	3503378	ArgumentList	resource_name		3502542	1					
ANR	3503379	Argument	resource_name		3502542	0					
ANR	3503380	Identifier	resource_name		3502542	0					
ANR	3503381	Argument	updates		3502542	1					
ANR	3503382	Identifier	updates		3502542	0					
ANR	3503383	CompoundStatement		161:53:5094:5094	3502542	1					
ANR	3503384	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed updates resources for %s\\n"" , resource_name . c_str ( ) )"	574:3:16169:16254	3502542	0	True				
ANR	3503385	CallExpression	"dprintf ( D_ALWAYS , ""Failed updates resources for %s\\n"" , resource_name . c_str ( ) )"		3502542	0					
ANR	3503386	Callee	dprintf		3502542	0					
ANR	3503387	Identifier	dprintf		3502542	0					
ANR	3503388	ArgumentList	D_ALWAYS		3502542	1					
ANR	3503389	Argument	D_ALWAYS		3502542	0					
ANR	3503390	Identifier	D_ALWAYS		3502542	0					
ANR	3503391	Argument	"""Failed updates resources for %s\\n"""		3502542	1					
ANR	3503392	PrimaryExpression	"""Failed updates resources for %s\\n"""		3502542	0					
ANR	3503393	Argument	resource_name . c_str ( )		3502542	2					
ANR	3503394	CallExpression	resource_name . c_str ( )		3502542	0					
ANR	3503395	Callee	resource_name . c_str		3502542	0					
ANR	3503396	MemberAccess	resource_name . c_str		3502542	0					
ANR	3503397	Identifier	resource_name		3502542	0					
ANR	3503398	Identifier	c_str		3502542	1					
ANR	3503399	ArgumentList			3502542	1					
ANR	3503400	ReturnStatement	return count ;	579:1:16265:16277	3502542	24	True				
ANR	3503401	Identifier	count		3502542	0					
ANR	3503402	ReturnType	int		3502542	1					
ANR	3503403	Identifier	LeaseManagerResources :: GetLeases		3502542	2					
ANR	3503404	ParameterList	"classad :: ClassAd & resource_ad , classad :: ClassAd & request_ad , int target_count , list < classad :: ClassAd * > & leases"		3502542	3					
ANR	3503405	Parameter	classad :: ClassAd & resource_ad	409:34:10925:10953	3502542	0	True				
ANR	3503406	ParameterType	classad :: ClassAd &		3502542	0					
ANR	3503407	Identifier	resource_ad		3502542	1					
ANR	3503408	Parameter	classad :: ClassAd & request_ad	410:10:10966:10993	3502542	1	True				
ANR	3503409	ParameterType	classad :: ClassAd &		3502542	0					
ANR	3503410	Identifier	request_ad		3502542	1					
ANR	3503411	Parameter	int target_count	411:10:11006:11021	3502542	2	True				
ANR	3503412	ParameterType	int		3502542	0					
ANR	3503413	Identifier	target_count		3502542	1					
ANR	3503414	Parameter	list < classad :: ClassAd * > & leases	412:10:11034:11065	3502542	3	True				
ANR	3503415	ParameterType	list < classad :: ClassAd * > &		3502542	0					
ANR	3503416	Identifier	leases		3502542	1					
ANR	3503417	CFGEntryNode	ENTRY		3502542		True				
ANR	3503418	CFGExitNode	EXIT		3502542		True				
ANR	3503419	Symbol	ad -> EvaluateAttrBool		3502542						
ANR	3503420	Symbol	lease_used		3502542						
ANR	3503421	Symbol	available		3502542						
ANR	3503422	Symbol	request_ad . EvaluateAttrString		3502542						
ANR	3503423	Symbol	resource_name . c_str		3502542						
ANR	3503424	Symbol	lease_states -> end		3502542						
ANR	3503425	Symbol	state_expr		3502542						
ANR	3503426	Symbol	* lease_ent		3502542						
ANR	3503427	Symbol	UpdateLeaseAd		3502542						
ANR	3503428	Symbol	request_name		3502542						
ANR	3503429	Symbol	GetLeasesAd		3502542						
ANR	3503430	Symbol	UpdateResourceAd		3502542						
ANR	3503431	Symbol	lease_number		3502542						
ANR	3503432	Symbol	tmp		3502542						
ANR	3503433	Symbol	* state_iter		3502542						
ANR	3503434	Symbol	state_expr -> GetKind		3502542						
ANR	3503435	Symbol	m_view_key		3502542						
ANR	3503436	Symbol	lease_ent -> m_leases_ad		3502542						
ANR	3503437	Symbol	NULL		3502542						
ANR	3503438	Symbol	ad		3502542						
ANR	3503439	Symbol	count		3502542						
ANR	3503440	Symbol	lease_ent -> m_expiration		3502542						
ANR	3503441	Symbol	D_FULLDEBUG		3502542						
ANR	3503442	Symbol	* lease_states		3502542						
ANR	3503443	Symbol	classad :: ExprTree :: CLASSAD_NODE		3502542						
ANR	3503444	Symbol	* lease_id		3502542						
ANR	3503445	Symbol	target_count		3502542						
ANR	3503446	Symbol	m_lease_id_number		3502542						
ANR	3503447	Symbol	* updates		3502542						
ANR	3503448	Symbol	* m_used_leases		3502542						
ANR	3503449	Symbol	true		3502542						
ANR	3503450	Symbol	leases_ad		3502542						
ANR	3503451	Symbol	GetLeaseDuration		3502542						
ANR	3503452	Symbol	* state_expr		3502542						
ANR	3503453	Symbol	updates -> InsertAttr		3502542						
ANR	3503454	Symbol	lease_ent -> m_resource_name		3502542						
ANR	3503455	Symbol	lease_count		3502542						
ANR	3503456	Symbol	* ad		3502542						
ANR	3503457	Symbol	updates		3502542						
ANR	3503458	Symbol	duration		3502542						
ANR	3503459	Symbol	leases		3502542						
ANR	3503460	Symbol	leases_ad -> EvaluateAttrInt		3502542						
ANR	3503461	Symbol	lease_states -> begin		3502542						
ANR	3503462	Symbol	lease_states		3502542						
ANR	3503463	Symbol	used_count		3502542						
ANR	3503464	Symbol	leases_ad -> EvaluateAttrList		3502542						
ANR	3503465	Symbol	now		3502542						
ANR	3503466	Symbol	ad -> EvaluateAttrInt		3502542						
ANR	3503467	Symbol	lease_ent -> m_lease_ad		3502542						
ANR	3503468	Symbol	resource_ad . EvaluateAttrString		3502542						
ANR	3503469	Symbol	m_stats . m_num_busy_leases		3502542						
ANR	3503470	Symbol	resource_ad		3502542						
ANR	3503471	Symbol	m_stats		3502542						
ANR	3503472	Symbol	request_ad		3502542						
ANR	3503473	Symbol	UpdateLeasesAd		3502542						
ANR	3503474	Symbol	D_ALWAYS		3502542						
ANR	3503475	Symbol	false		3502542						
ANR	3503476	Symbol	lease_ent -> m_lease_number		3502542						
ANR	3503477	Symbol	state_iter		3502542						
ANR	3503478	Symbol	lease_id . c_str		3502542						
ANR	3503479	Symbol	lease_ent		3502542						
ANR	3503480	Symbol	m_used_leases		3502542						
ANR	3503481	Symbol	request_name . c_str		3502542						
ANR	3503482	Symbol	* leases_ad		3502542						
ANR	3503483	Symbol	lease_ad		3502542						
ANR	3503484	Symbol	time		3502542						
ANR	3503485	Symbol	resource_name		3502542						
ANR	3503486	Symbol	lease_id		3502542						
ANR	3503487	Symbol	lease_valid		3502542						
ANR	3503488	Function	LeaseManagerResources :: RenewLeases	583:0:16325:18618							
ANR	3503489	FunctionDef	"LeaseManagerResources :: RenewLeases (list < const LeaseManagerLease * > & requests , list < LeaseManagerLease * > & leases)"		3503488	0					
ANR	3503490	CompoundStatement		586:0:16453:18618	3503488	0					
ANR	3503491	IdentifierDeclStatement	time_t now = time ( NULL ) ;	587:1:16456:16481	3503488	0	True				
ANR	3503492	IdentifierDecl	now = time ( NULL )		3503488	0					
ANR	3503493	IdentifierDeclType	time_t		3503488	0					
ANR	3503494	Identifier	now		3503488	1					
ANR	3503495	AssignmentExpression	now = time ( NULL )		3503488	2		=			
ANR	3503496	Identifier	now		3503488	0					
ANR	3503497	CallExpression	time ( NULL )		3503488	1					
ANR	3503498	Callee	time		3503488	0					
ANR	3503499	Identifier	time		3503488	0					
ANR	3503500	ArgumentList	NULL		3503488	1					
ANR	3503501	Argument	NULL		3503488	0					
ANR	3503502	Identifier	NULL		3503488	0					
ANR	3503503	ForStatement	for ( list < const LeaseManagerLease * > :: iterator iter = requests . begin ( ) ; iter != requests . end ( ) ; iter ++ )		3503488	1					
ANR	3503504	ForInit	list < const LeaseManagerLease * > :: iterator iter = requests . begin ( ) ;	590:7:16526:16592	3503488	0	True				
ANR	3503505	IdentifierDeclStatement	list < const LeaseManagerLease * > :: iterator iter = requests . begin ( ) ;		3503488	0					
ANR	3503506	IdentifierDecl	iter = requests . begin ( )		3503488	0					
ANR	3503507	IdentifierDeclType	list < const LeaseManagerLease * > :: iterator		3503488	0					
ANR	3503508	Identifier	iter		3503488	1					
ANR	3503509	AssignmentExpression	iter = requests . begin ( )		3503488	2		=			
ANR	3503510	Identifier	iter		3503488	0					
ANR	3503511	CallExpression	requests . begin ( )		3503488	1					
ANR	3503512	Callee	requests . begin		3503488	0					
ANR	3503513	MemberAccess	requests . begin		3503488	0					
ANR	3503514	Identifier	requests		3503488	0					
ANR	3503515	Identifier	begin		3503488	1					
ANR	3503516	ArgumentList			3503488	1					
ANR	3503517	Condition	iter != requests . end ( )	591:4:16598:16619	3503488	1	True				
ANR	3503518	EqualityExpression	iter != requests . end ( )		3503488	0		!=			
ANR	3503519	Identifier	iter		3503488	0					
ANR	3503520	CallExpression	requests . end ( )		3503488	1					
ANR	3503521	Callee	requests . end		3503488	0					
ANR	3503522	MemberAccess	requests . end		3503488	0					
ANR	3503523	Identifier	requests		3503488	0					
ANR	3503524	Identifier	end		3503488	1					
ANR	3503525	ArgumentList			3503488	1					
ANR	3503526	PostIncDecOperationExpression	iter ++	592:4:16626:16631	3503488	2	True				
ANR	3503527	Identifier	iter		3503488	0					
ANR	3503528	IncDec	++		3503488	1					
ANR	3503529	CompoundStatement		62:2:1912:2011	3503488	3					
ANR	3503530	IdentifierDeclStatement	const LeaseManagerLease * request = * iter ;	594:2:16640:16680	3503488	0	True				
ANR	3503531	IdentifierDecl	* request = * iter		3503488	0					
ANR	3503532	IdentifierDeclType	const LeaseManagerLease *		3503488	0					
ANR	3503533	Identifier	request		3503488	1					
ANR	3503534	AssignmentExpression	* request = * iter		3503488	2		=			
ANR	3503535	Identifier	request		3503488	0					
ANR	3503536	UnaryOperationExpression	* iter		3503488	1					
ANR	3503537	UnaryOperator	*		3503488	0					
ANR	3503538	Identifier	iter		3503488	1					
ANR	3503539	IdentifierDeclStatement	LeaseManagerLeaseEnt * lease_ent = FindLease ( * request ) ;	595:2:16684:16739	3503488	1	True				
ANR	3503540	IdentifierDecl	* lease_ent = FindLease ( * request )		3503488	0					
ANR	3503541	IdentifierDeclType	LeaseManagerLeaseEnt *		3503488	0					
ANR	3503542	Identifier	lease_ent		3503488	1					
ANR	3503543	AssignmentExpression	* lease_ent = FindLease ( * request )		3503488	2		=			
ANR	3503544	Identifier	lease_ent		3503488	0					
ANR	3503545	CallExpression	FindLease ( * request )		3503488	1					
ANR	3503546	Callee	FindLease		3503488	0					
ANR	3503547	Identifier	FindLease		3503488	0					
ANR	3503548	ArgumentList	* request		3503488	1					
ANR	3503549	Argument	* request		3503488	0					
ANR	3503550	UnaryOperationExpression	* request		3503488	0					
ANR	3503551	UnaryOperator	*		3503488	0					
ANR	3503552	Identifier	request		3503488	1					
ANR	3503553	IfStatement	if ( ! lease_ent )		3503488	2					
ANR	3503554	Condition	! lease_ent	596:7:16748:16758	3503488	0	True				
ANR	3503555	UnaryOperationExpression	! lease_ent		3503488	0					
ANR	3503556	UnaryOperator	!		3503488	0					
ANR	3503557	Identifier	lease_ent		3503488	1					
ANR	3503558	CompoundStatement		11:21:308:308	3503488	1					
ANR	3503559	ExpressionStatement	"dprintf ( D_ALWAYS , ""renew: Can't find matching lease ad for %s!\\n"" , request -> getLeaseId ( ) . c_str ( ) )"	597:3:16767:16878	3503488	0	True				
ANR	3503560	CallExpression	"dprintf ( D_ALWAYS , ""renew: Can't find matching lease ad for %s!\\n"" , request -> getLeaseId ( ) . c_str ( ) )"		3503488	0					
ANR	3503561	Callee	dprintf		3503488	0					
ANR	3503562	Identifier	dprintf		3503488	0					
ANR	3503563	ArgumentList	D_ALWAYS		3503488	1					
ANR	3503564	Argument	D_ALWAYS		3503488	0					
ANR	3503565	Identifier	D_ALWAYS		3503488	0					
ANR	3503566	Argument	"""renew: Can't find matching lease ad for %s!\\n"""		3503488	1					
ANR	3503567	PrimaryExpression	"""renew: Can't find matching lease ad for %s!\\n"""		3503488	0					
ANR	3503568	Argument	request -> getLeaseId ( ) . c_str ( )		3503488	2					
ANR	3503569	CallExpression	request -> getLeaseId ( ) . c_str ( )		3503488	0					
ANR	3503570	Callee	request -> getLeaseId ( ) . c_str		3503488	0					
ANR	3503571	MemberAccess	request -> getLeaseId ( ) . c_str		3503488	0					
ANR	3503572	CallExpression	request -> getLeaseId ( )		3503488	0					
ANR	3503573	Callee	request -> getLeaseId		3503488	0					
ANR	3503574	PtrMemberAccess	request -> getLeaseId		3503488	0					
ANR	3503575	Identifier	request		3503488	0					
ANR	3503576	Identifier	getLeaseId		3503488	1					
ANR	3503577	ArgumentList			3503488	1					
ANR	3503578	Identifier	c_str		3503488	1					
ANR	3503579	ArgumentList			3503488	1					
ANR	3503580	ContinueStatement	continue ;	600:3:16883:16891	3503488	1	True				
ANR	3503581	IdentifierDeclStatement	bool valid = false ;	602:2:16899:16917	3503488	3	True				
ANR	3503582	IdentifierDecl	valid = false		3503488	0					
ANR	3503583	IdentifierDeclType	bool		3503488	0					
ANR	3503584	Identifier	valid		3503488	1					
ANR	3503585	AssignmentExpression	valid = false		3503488	2		=			
ANR	3503586	Identifier	false		3503488	0					
ANR	3503587	Identifier	false		3503488	1					
ANR	3503588	IfStatement	"if ( ! lease_ent -> m_lease_ad -> EvaluateAttrBool ( ""LeaseValid"" , valid ) )"		3503488	4					
ANR	3503589	Condition	"! lease_ent -> m_lease_ad -> EvaluateAttrBool ( ""LeaseValid"" , valid )"	603:7:16926:17004	3503488	0	True				
ANR	3503590	UnaryOperationExpression	"! lease_ent -> m_lease_ad -> EvaluateAttrBool ( ""LeaseValid"" , valid )"		3503488	0					
ANR	3503591	UnaryOperator	!		3503488	0					
ANR	3503592	CallExpression	"lease_ent -> m_lease_ad -> EvaluateAttrBool ( ""LeaseValid"" , valid )"		3503488	1					
ANR	3503593	Callee	lease_ent -> m_lease_ad -> EvaluateAttrBool		3503488	0					
ANR	3503594	PtrMemberAccess	lease_ent -> m_lease_ad -> EvaluateAttrBool		3503488	0					
ANR	3503595	PtrMemberAccess	lease_ent -> m_lease_ad		3503488	0					
ANR	3503596	Identifier	lease_ent		3503488	0					
ANR	3503597	Identifier	m_lease_ad		3503488	1					
ANR	3503598	Identifier	EvaluateAttrBool		3503488	1					
ANR	3503599	ArgumentList	"""LeaseValid"""		3503488	1					
ANR	3503600	Argument	"""LeaseValid"""		3503488	0					
ANR	3503601	PrimaryExpression	"""LeaseValid"""		3503488	0					
ANR	3503602	Argument	valid		3503488	1					
ANR	3503603	Identifier	valid		3503488	0					
ANR	3503604	CompoundStatement		19:26:554:554	3503488	1					
ANR	3503605	ExpressionStatement	"dprintf ( D_ALWAYS , ""renew: warning: No 'valid' flag in lease ad!\\n"" )"	605:3:17013:17088	3503488	0	True				
ANR	3503606	CallExpression	"dprintf ( D_ALWAYS , ""renew: warning: No 'valid' flag in lease ad!\\n"" )"		3503488	0					
ANR	3503607	Callee	dprintf		3503488	0					
ANR	3503608	Identifier	dprintf		3503488	0					
ANR	3503609	ArgumentList	D_ALWAYS		3503488	1					
ANR	3503610	Argument	D_ALWAYS		3503488	0					
ANR	3503611	Identifier	D_ALWAYS		3503488	0					
ANR	3503612	Argument	"""renew: warning: No 'valid' flag in lease ad!\\n"""		3503488	1					
ANR	3503613	PrimaryExpression	"""renew: warning: No 'valid' flag in lease ad!\\n"""		3503488	0					
ANR	3503614	IdentifierDeclStatement	int creation_time ;	609:2:17097:17115	3503488	5	True				
ANR	3503615	IdentifierDecl	creation_time		3503488	0					
ANR	3503616	IdentifierDeclType	int		3503488	0					
ANR	3503617	Identifier	creation_time		3503488	1					
ANR	3503618	IdentifierDeclStatement	bool release = ! valid ;	610:2:17119:17140	3503488	6	True				
ANR	3503619	IdentifierDecl	release = ! valid		3503488	0					
ANR	3503620	IdentifierDeclType	bool		3503488	0					
ANR	3503621	Identifier	release		3503488	1					
ANR	3503622	AssignmentExpression	release = ! valid		3503488	2		=			
ANR	3503623	Identifier	release		3503488	0					
ANR	3503624	UnaryOperationExpression	! valid		3503488	1					
ANR	3503625	UnaryOperator	!		3503488	0					
ANR	3503626	Identifier	valid		3503488	1					
ANR	3503627	IfStatement	"if ( ! lease_ent -> m_lease_ad -> EvaluateAttrInt ( ""LeaseCreationTime"" , creation_time ) )"		3503488	7					
ANR	3503628	Condition	"! lease_ent -> m_lease_ad -> EvaluateAttrInt ( ""LeaseCreationTime"" , creation_time )"	611:7:17149:17240	3503488	0	True				
ANR	3503629	UnaryOperationExpression	"! lease_ent -> m_lease_ad -> EvaluateAttrInt ( ""LeaseCreationTime"" , creation_time )"		3503488	0					
ANR	3503630	UnaryOperator	!		3503488	0					
ANR	3503631	CallExpression	"lease_ent -> m_lease_ad -> EvaluateAttrInt ( ""LeaseCreationTime"" , creation_time )"		3503488	1					
ANR	3503632	Callee	lease_ent -> m_lease_ad -> EvaluateAttrInt		3503488	0					
ANR	3503633	PtrMemberAccess	lease_ent -> m_lease_ad -> EvaluateAttrInt		3503488	0					
ANR	3503634	PtrMemberAccess	lease_ent -> m_lease_ad		3503488	0					
ANR	3503635	Identifier	lease_ent		3503488	0					
ANR	3503636	Identifier	m_lease_ad		3503488	1					
ANR	3503637	Identifier	EvaluateAttrInt		3503488	1					
ANR	3503638	ArgumentList	"""LeaseCreationTime"""		3503488	1					
ANR	3503639	Argument	"""LeaseCreationTime"""		3503488	0					
ANR	3503640	PrimaryExpression	"""LeaseCreationTime"""		3503488	0					
ANR	3503641	Argument	creation_time		3503488	1					
ANR	3503642	Identifier	creation_time		3503488	0					
ANR	3503643	CompoundStatement		27:33:790:790	3503488	1					
ANR	3503644	ExpressionStatement	"dprintf ( D_ALWAYS , ""renew: warning: No 'creation time' in lease ad!\\n"" )"	613:3:17249:17327	3503488	0	True				
ANR	3503645	CallExpression	"dprintf ( D_ALWAYS , ""renew: warning: No 'creation time' in lease ad!\\n"" )"		3503488	0					
ANR	3503646	Callee	dprintf		3503488	0					
ANR	3503647	Identifier	dprintf		3503488	0					
ANR	3503648	ArgumentList	D_ALWAYS		3503488	1					
ANR	3503649	Argument	D_ALWAYS		3503488	0					
ANR	3503650	Identifier	D_ALWAYS		3503488	0					
ANR	3503651	Argument	"""renew: warning: No 'creation time' in lease ad!\\n"""		3503488	1					
ANR	3503652	PrimaryExpression	"""renew: warning: No 'creation time' in lease ad!\\n"""		3503488	0					
ANR	3503653	IfStatement	if ( ( creation_time + m_max_lease_total ) < now )		3503488	8					
ANR	3503654	Condition	( creation_time + m_max_lease_total ) < now	616:7:17340:17382	3503488	0	True				
ANR	3503655	RelationalExpression	( creation_time + m_max_lease_total ) < now		3503488	0		<			
ANR	3503656	AdditiveExpression	creation_time + m_max_lease_total		3503488	0		+			
ANR	3503657	Identifier	creation_time		3503488	0					
ANR	3503658	Identifier	m_max_lease_total		3503488	1					
ANR	3503659	Identifier	now		3503488	1					
ANR	3503660	CompoundStatement		31:53:932:932	3503488	1					
ANR	3503661	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""renew: Lease %s hit max duration\\n"" , lease_ent -> m_resource_name . c_str ( ) )"	617:3:17391:17499	3503488	0	True				
ANR	3503662	CallExpression	"dprintf ( D_FULLDEBUG , ""renew: Lease %s hit max duration\\n"" , lease_ent -> m_resource_name . c_str ( ) )"		3503488	0					
ANR	3503663	Callee	dprintf		3503488	0					
ANR	3503664	Identifier	dprintf		3503488	0					
ANR	3503665	ArgumentList	D_FULLDEBUG		3503488	1					
ANR	3503666	Argument	D_FULLDEBUG		3503488	0					
ANR	3503667	Identifier	D_FULLDEBUG		3503488	0					
ANR	3503668	Argument	"""renew: Lease %s hit max duration\\n"""		3503488	1					
ANR	3503669	PrimaryExpression	"""renew: Lease %s hit max duration\\n"""		3503488	0					
ANR	3503670	Argument	lease_ent -> m_resource_name . c_str ( )		3503488	2					
ANR	3503671	CallExpression	lease_ent -> m_resource_name . c_str ( )		3503488	0					
ANR	3503672	Callee	lease_ent -> m_resource_name . c_str		3503488	0					
ANR	3503673	MemberAccess	lease_ent -> m_resource_name . c_str		3503488	0					
ANR	3503674	PtrMemberAccess	lease_ent -> m_resource_name		3503488	0					
ANR	3503675	Identifier	lease_ent		3503488	0					
ANR	3503676	Identifier	m_resource_name		3503488	1					
ANR	3503677	Identifier	c_str		3503488	1					
ANR	3503678	ArgumentList			3503488	1					
ANR	3503679	ExpressionStatement	release = true	620:3:17504:17518	3503488	1	True				
ANR	3503680	AssignmentExpression	release = true		3503488	0		=			
ANR	3503681	Identifier	release		3503488	0					
ANR	3503682	Identifier	true		3503488	1					
ANR	3503683	IdentifierDeclStatement	classad :: ClassAd * resource_ad = GetResourceAd ( lease_ent -> m_resource_name ) ;	624:2:17552:17630	3503488	9	True				
ANR	3503684	IdentifierDecl	* resource_ad = GetResourceAd ( lease_ent -> m_resource_name )		3503488	0					
ANR	3503685	IdentifierDeclType	classad :: ClassAd *		3503488	0					
ANR	3503686	Identifier	resource_ad		3503488	1					
ANR	3503687	AssignmentExpression	* resource_ad = GetResourceAd ( lease_ent -> m_resource_name )		3503488	2		=			
ANR	3503688	Identifier	resource_ad		3503488	0					
ANR	3503689	CallExpression	GetResourceAd ( lease_ent -> m_resource_name )		3503488	1					
ANR	3503690	Callee	GetResourceAd		3503488	0					
ANR	3503691	Identifier	GetResourceAd		3503488	0					
ANR	3503692	ArgumentList	lease_ent -> m_resource_name		3503488	1					
ANR	3503693	Argument	lease_ent -> m_resource_name		3503488	0					
ANR	3503694	PtrMemberAccess	lease_ent -> m_resource_name		3503488	0					
ANR	3503695	Identifier	lease_ent		3503488	0					
ANR	3503696	Identifier	m_resource_name		3503488	1					
ANR	3503697	IfStatement	if ( ! resource_ad )		3503488	10					
ANR	3503698	Condition	! resource_ad	626:7:17639:17650	3503488	0	True				
ANR	3503699	UnaryOperationExpression	! resource_ad		3503488	0					
ANR	3503700	UnaryOperator	!		3503488	0					
ANR	3503701	Identifier	resource_ad		3503488	1					
ANR	3503702	CompoundStatement		41:22:1200:1200	3503488	1					
ANR	3503703	ExpressionStatement	"dprintf ( D_ALWAYS , ""RenewLease: Can't find resource '%s'\\n"" , lease_ent -> m_resource_name . c_str ( ) )"	627:3:17659:17762	3503488	0	True				
ANR	3503704	CallExpression	"dprintf ( D_ALWAYS , ""RenewLease: Can't find resource '%s'\\n"" , lease_ent -> m_resource_name . c_str ( ) )"		3503488	0					
ANR	3503705	Callee	dprintf		3503488	0					
ANR	3503706	Identifier	dprintf		3503488	0					
ANR	3503707	ArgumentList	D_ALWAYS		3503488	1					
ANR	3503708	Argument	D_ALWAYS		3503488	0					
ANR	3503709	Identifier	D_ALWAYS		3503488	0					
ANR	3503710	Argument	"""RenewLease: Can't find resource '%s'\\n"""		3503488	1					
ANR	3503711	PrimaryExpression	"""RenewLease: Can't find resource '%s'\\n"""		3503488	0					
ANR	3503712	Argument	lease_ent -> m_resource_name . c_str ( )		3503488	2					
ANR	3503713	CallExpression	lease_ent -> m_resource_name . c_str ( )		3503488	0					
ANR	3503714	Callee	lease_ent -> m_resource_name . c_str		3503488	0					
ANR	3503715	MemberAccess	lease_ent -> m_resource_name . c_str		3503488	0					
ANR	3503716	PtrMemberAccess	lease_ent -> m_resource_name		3503488	0					
ANR	3503717	Identifier	lease_ent		3503488	0					
ANR	3503718	Identifier	m_resource_name		3503488	1					
ANR	3503719	Identifier	c_str		3503488	1					
ANR	3503720	ArgumentList			3503488	1					
ANR	3503721	ContinueStatement	continue ;	629:3:17767:17775	3503488	1	True				
ANR	3503722	IdentifierDeclStatement	"int duration = GetLeaseDuration ( * resource_ad , * request ) ;"	633:2:17806:17864	3503488	11	True				
ANR	3503723	IdentifierDecl	"duration = GetLeaseDuration ( * resource_ad , * request )"		3503488	0					
ANR	3503724	IdentifierDeclType	int		3503488	0					
ANR	3503725	Identifier	duration		3503488	1					
ANR	3503726	AssignmentExpression	"duration = GetLeaseDuration ( * resource_ad , * request )"		3503488	2		=			
ANR	3503727	Identifier	duration		3503488	0					
ANR	3503728	CallExpression	"GetLeaseDuration ( * resource_ad , * request )"		3503488	1					
ANR	3503729	Callee	GetLeaseDuration		3503488	0					
ANR	3503730	Identifier	GetLeaseDuration		3503488	0					
ANR	3503731	ArgumentList	* resource_ad		3503488	1					
ANR	3503732	Argument	* resource_ad		3503488	0					
ANR	3503733	UnaryOperationExpression	* resource_ad		3503488	0					
ANR	3503734	UnaryOperator	*		3503488	0					
ANR	3503735	Identifier	resource_ad		3503488	1					
ANR	3503736	Argument	* request		3503488	1					
ANR	3503737	UnaryOperationExpression	* request		3503488	0					
ANR	3503738	UnaryOperator	*		3503488	0					
ANR	3503739	Identifier	request		3503488	1					
ANR	3503740	Statement	classad	634:2:17868:17874	3503488	12	True				
ANR	3503741	Statement	::	634:9:17875:17876	3503488	13	True				
ANR	3503742	Statement	ClassAd	634:11:17877:17883	3503488	14	True				
ANR	3503743	Statement	*	634:19:17885:17885	3503488	15	True				
ANR	3503744	Statement	updates	634:20:17886:17892	3503488	16	True				
ANR	3503745	Statement	=	634:28:17894:17894	3503488	17	True				
ANR	3503746	Statement	new	634:30:17896:17898	3503488	18	True				
ANR	3503747	ExpressionStatement	classad :: ClassAd	634:34:17900:17916	3503488	19	True				
ANR	3503748	Identifier	classad :: ClassAd		3503488	0					
ANR	3503749	ExpressionStatement	"updates -> InsertAttr ( ""LeaseUsed"" , true )"	635:2:17920:17960	3503488	20	True				
ANR	3503750	CallExpression	"updates -> InsertAttr ( ""LeaseUsed"" , true )"		3503488	0					
ANR	3503751	Callee	updates -> InsertAttr		3503488	0					
ANR	3503752	PtrMemberAccess	updates -> InsertAttr		3503488	0					
ANR	3503753	Identifier	updates		3503488	0					
ANR	3503754	Identifier	InsertAttr		3503488	1					
ANR	3503755	ArgumentList	"""LeaseUsed"""		3503488	1					
ANR	3503756	Argument	"""LeaseUsed"""		3503488	0					
ANR	3503757	PrimaryExpression	"""LeaseUsed"""		3503488	0					
ANR	3503758	Argument	true		3503488	1					
ANR	3503759	Identifier	true		3503488	0					
ANR	3503760	ExpressionStatement	"updates -> InsertAttr ( ""LeaseStartTime"" , ( int ) now )"	636:2:17964:18014	3503488	21	True				
ANR	3503761	CallExpression	"updates -> InsertAttr ( ""LeaseStartTime"" , ( int ) now )"		3503488	0					
ANR	3503762	Callee	updates -> InsertAttr		3503488	0					
ANR	3503763	PtrMemberAccess	updates -> InsertAttr		3503488	0					
ANR	3503764	Identifier	updates		3503488	0					
ANR	3503765	Identifier	InsertAttr		3503488	1					
ANR	3503766	ArgumentList	"""LeaseStartTime"""		3503488	1					
ANR	3503767	Argument	"""LeaseStartTime"""		3503488	0					
ANR	3503768	PrimaryExpression	"""LeaseStartTime"""		3503488	0					
ANR	3503769	Argument	( int ) now		3503488	1					
ANR	3503770	CastExpression	( int ) now		3503488	0					
ANR	3503771	CastTarget	int		3503488	0					
ANR	3503772	Identifier	now		3503488	1					
ANR	3503773	ExpressionStatement	"updates -> InsertAttr ( ""LeaseDuration"" , duration )"	637:2:18018:18066	3503488	22	True				
ANR	3503774	CallExpression	"updates -> InsertAttr ( ""LeaseDuration"" , duration )"		3503488	0					
ANR	3503775	Callee	updates -> InsertAttr		3503488	0					
ANR	3503776	PtrMemberAccess	updates -> InsertAttr		3503488	0					
ANR	3503777	Identifier	updates		3503488	0					
ANR	3503778	Identifier	InsertAttr		3503488	1					
ANR	3503779	ArgumentList	"""LeaseDuration"""		3503488	1					
ANR	3503780	Argument	"""LeaseDuration"""		3503488	0					
ANR	3503781	PrimaryExpression	"""LeaseDuration"""		3503488	0					
ANR	3503782	Argument	duration		3503488	1					
ANR	3503783	Identifier	duration		3503488	0					
ANR	3503784	ExpressionStatement	"updates -> InsertAttr ( ""ReleaseWhenDone"" , release )"	638:2:18070:18119	3503488	23	True				
ANR	3503785	CallExpression	"updates -> InsertAttr ( ""ReleaseWhenDone"" , release )"		3503488	0					
ANR	3503786	Callee	updates -> InsertAttr		3503488	0					
ANR	3503787	PtrMemberAccess	updates -> InsertAttr		3503488	0					
ANR	3503788	Identifier	updates		3503488	0					
ANR	3503789	Identifier	InsertAttr		3503488	1					
ANR	3503790	ArgumentList	"""ReleaseWhenDone"""		3503488	1					
ANR	3503791	Argument	"""ReleaseWhenDone"""		3503488	0					
ANR	3503792	PrimaryExpression	"""ReleaseWhenDone"""		3503488	0					
ANR	3503793	Argument	release		3503488	1					
ANR	3503794	Identifier	release		3503488	0					
ANR	3503795	IfStatement	"if ( ! UpdateLeaseAd ( lease_ent -> m_resource_name , lease_ent -> m_lease_number , updates ) )"		3503488	24					
ANR	3503796	Condition	"! UpdateLeaseAd ( lease_ent -> m_resource_name , lease_ent -> m_lease_number , updates )"	639:7:18128:18223	3503488	0	True				
ANR	3503797	UnaryOperationExpression	"! UpdateLeaseAd ( lease_ent -> m_resource_name , lease_ent -> m_lease_number , updates )"		3503488	0					
ANR	3503798	UnaryOperator	!		3503488	0					
ANR	3503799	CallExpression	"UpdateLeaseAd ( lease_ent -> m_resource_name , lease_ent -> m_lease_number , updates )"		3503488	1					
ANR	3503800	Callee	UpdateLeaseAd		3503488	0					
ANR	3503801	Identifier	UpdateLeaseAd		3503488	0					
ANR	3503802	ArgumentList	lease_ent -> m_resource_name		3503488	1					
ANR	3503803	Argument	lease_ent -> m_resource_name		3503488	0					
ANR	3503804	PtrMemberAccess	lease_ent -> m_resource_name		3503488	0					
ANR	3503805	Identifier	lease_ent		3503488	0					
ANR	3503806	Identifier	m_resource_name		3503488	1					
ANR	3503807	Argument	lease_ent -> m_lease_number		3503488	1					
ANR	3503808	PtrMemberAccess	lease_ent -> m_lease_number		3503488	0					
ANR	3503809	Identifier	lease_ent		3503488	0					
ANR	3503810	Identifier	m_lease_number		3503488	1					
ANR	3503811	Argument	updates		3503488	2					
ANR	3503812	Identifier	updates		3503488	0					
ANR	3503813	CompoundStatement		56:20:1773:1773	3503488	1					
ANR	3503814	ExpressionStatement	"dprintf ( D_ALWAYS , ""Renew: Failed to update lease\\n"" )"	642:3:18232:18286	3503488	0	True				
ANR	3503815	CallExpression	"dprintf ( D_ALWAYS , ""Renew: Failed to update lease\\n"" )"		3503488	0					
ANR	3503816	Callee	dprintf		3503488	0					
ANR	3503817	Identifier	dprintf		3503488	0					
ANR	3503818	ArgumentList	D_ALWAYS		3503488	1					
ANR	3503819	Argument	D_ALWAYS		3503488	0					
ANR	3503820	Identifier	D_ALWAYS		3503488	0					
ANR	3503821	Argument	"""Renew: Failed to update lease\\n"""		3503488	1					
ANR	3503822	PrimaryExpression	"""Renew: Failed to update lease\\n"""		3503488	0					
ANR	3503823	ExpressionStatement	lease_ent -> m_expiration = ( int ) now + duration	646:2:18316:18362	3503488	25	True				
ANR	3503824	AssignmentExpression	lease_ent -> m_expiration = ( int ) now + duration		3503488	0		=			
ANR	3503825	PtrMemberAccess	lease_ent -> m_expiration		3503488	0					
ANR	3503826	Identifier	lease_ent		3503488	0					
ANR	3503827	Identifier	m_expiration		3503488	1					
ANR	3503828	AdditiveExpression	( int ) now + duration		3503488	1		+			
ANR	3503829	CastExpression	( int ) now		3503488	0					
ANR	3503830	CastTarget	int		3503488	0					
ANR	3503831	Identifier	now		3503488	1					
ANR	3503832	Identifier	duration		3503488	1					
ANR	3503833	IdentifierDeclStatement	"LeaseManagerLease * new_lease = new LeaseManagerLease ( request -> getLeaseId ( ) , duration , release ) ;"	647:2:18366:18465	3503488	26	True				
ANR	3503834	IdentifierDecl	"* new_lease = new LeaseManagerLease ( request -> getLeaseId ( ) , duration , release )"		3503488	0					
ANR	3503835	IdentifierDeclType	LeaseManagerLease *		3503488	0					
ANR	3503836	Identifier	new_lease		3503488	1					
ANR	3503837	AssignmentExpression	"* new_lease = new LeaseManagerLease ( request -> getLeaseId ( ) , duration , release )"		3503488	2		=			
ANR	3503838	Identifier	new_lease		3503488	0					
ANR	3503839	Expression	"request -> getLeaseId ( ) , duration , release"		3503488	1					
ANR	3503840	CallExpression	request -> getLeaseId ( )		3503488	0					
ANR	3503841	Callee	request -> getLeaseId		3503488	0					
ANR	3503842	PtrMemberAccess	request -> getLeaseId		3503488	0					
ANR	3503843	Identifier	request		3503488	0					
ANR	3503844	Identifier	getLeaseId		3503488	1					
ANR	3503845	ArgumentList			3503488	1					
ANR	3503846	Expression	"duration , release"		3503488	1					
ANR	3503847	Identifier	duration		3503488	0					
ANR	3503848	Identifier	release		3503488	1					
ANR	3503849	ExpressionStatement	leases . push_back ( new_lease )	649:2:18469:18498	3503488	27	True				
ANR	3503850	CallExpression	leases . push_back ( new_lease )		3503488	0					
ANR	3503851	Callee	leases . push_back		3503488	0					
ANR	3503852	MemberAccess	leases . push_back		3503488	0					
ANR	3503853	Identifier	leases		3503488	0					
ANR	3503854	Identifier	push_back		3503488	1					
ANR	3503855	ArgumentList	new_lease		3503488	1					
ANR	3503856	Argument	new_lease		3503488	0					
ANR	3503857	Identifier	new_lease		3503488	0					
ANR	3503858	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Renewed lease %s for %ds\\n"" , request -> getLeaseId ( ) . c_str ( ) , duration )"	651:2:18503:18601	3503488	28	True				
ANR	3503859	CallExpression	"dprintf ( D_FULLDEBUG , ""Renewed lease %s for %ds\\n"" , request -> getLeaseId ( ) . c_str ( ) , duration )"		3503488	0					
ANR	3503860	Callee	dprintf		3503488	0					
ANR	3503861	Identifier	dprintf		3503488	0					
ANR	3503862	ArgumentList	D_FULLDEBUG		3503488	1					
ANR	3503863	Argument	D_FULLDEBUG		3503488	0					
ANR	3503864	Identifier	D_FULLDEBUG		3503488	0					
ANR	3503865	Argument	"""Renewed lease %s for %ds\\n"""		3503488	1					
ANR	3503866	PrimaryExpression	"""Renewed lease %s for %ds\\n"""		3503488	0					
ANR	3503867	Argument	request -> getLeaseId ( ) . c_str ( )		3503488	2					
ANR	3503868	CallExpression	request -> getLeaseId ( ) . c_str ( )		3503488	0					
ANR	3503869	Callee	request -> getLeaseId ( ) . c_str		3503488	0					
ANR	3503870	MemberAccess	request -> getLeaseId ( ) . c_str		3503488	0					
ANR	3503871	CallExpression	request -> getLeaseId ( )		3503488	0					
ANR	3503872	Callee	request -> getLeaseId		3503488	0					
ANR	3503873	PtrMemberAccess	request -> getLeaseId		3503488	0					
ANR	3503874	Identifier	request		3503488	0					
ANR	3503875	Identifier	getLeaseId		3503488	1					
ANR	3503876	ArgumentList			3503488	1					
ANR	3503877	Identifier	c_str		3503488	1					
ANR	3503878	ArgumentList			3503488	1					
ANR	3503879	Argument	duration		3503488	3					
ANR	3503880	Identifier	duration		3503488	0					
ANR	3503881	ReturnStatement	return 0 ;	655:1:18608:18616	3503488	2	True				
ANR	3503882	PrimaryExpression	0		3503488	0					
ANR	3503883	ReturnType	int		3503488	1					
ANR	3503884	Identifier	LeaseManagerResources :: RenewLeases		3503488	2					
ANR	3503885	ParameterList	"list < const LeaseManagerLease * > & requests , list < LeaseManagerLease * > & leases"		3503488	3					
ANR	3503886	Parameter	list < const LeaseManagerLease * > & requests	584:36:16365:16405	3503488	0	True				
ANR	3503887	ParameterType	list < const LeaseManagerLease * > &		3503488	0					
ANR	3503888	Identifier	requests		3503488	1					
ANR	3503889	Parameter	list < LeaseManagerLease * > & leases	585:9:16417:16449	3503488	1	True				
ANR	3503890	ParameterType	list < LeaseManagerLease * > &		3503488	0					
ANR	3503891	Identifier	leases		3503488	1					
ANR	3503892	CFGEntryNode	ENTRY		3503488		True				
ANR	3503893	CFGExitNode	EXIT		3503488		True				
ANR	3503894	Symbol	creation_time		3503488						
ANR	3503895	Symbol	request		3503488						
ANR	3503896	Symbol	requests . begin		3503488						
ANR	3503897	Symbol	lease_ent -> m_resource_name		3503488						
ANR	3503898	Symbol	FindLease		3503488						
ANR	3503899	Symbol	release		3503488						
ANR	3503900	Symbol	* * lease_ent		3503488						
ANR	3503901	Symbol	requests . end		3503488						
ANR	3503902	Symbol	requests		3503488						
ANR	3503903	Symbol	request -> getLeaseId ( ) . c_str		3503488						
ANR	3503904	Symbol	updates		3503488						
ANR	3503905	Symbol	GetResourceAd		3503488						
ANR	3503906	Symbol	* lease_ent		3503488						
ANR	3503907	Symbol	UpdateLeaseAd		3503488						
ANR	3503908	Symbol	valid		3503488						
ANR	3503909	Symbol	duration		3503488						
ANR	3503910	Symbol	leases		3503488						
ANR	3503911	Symbol	* iter		3503488						
ANR	3503912	Symbol	now		3503488						
ANR	3503913	Symbol	lease_ent -> m_lease_ad		3503488						
ANR	3503914	Symbol	request -> getLeaseId		3503488						
ANR	3503915	Symbol	resource_ad		3503488						
ANR	3503916	Symbol	NULL		3503488						
ANR	3503917	Symbol	m_max_lease_total		3503488						
ANR	3503918	Symbol	D_ALWAYS		3503488						
ANR	3503919	Symbol	false		3503488						
ANR	3503920	Symbol	iter		3503488						
ANR	3503921	Symbol	lease_ent -> m_expiration		3503488						
ANR	3503922	Symbol	D_FULLDEBUG		3503488						
ANR	3503923	Symbol	lease_ent -> m_lease_number		3503488						
ANR	3503924	Symbol	lease_ent		3503488						
ANR	3503925	Symbol	* lease_ent -> m_lease_ad		3503488						
ANR	3503926	Symbol	lease_ent -> m_lease_ad -> EvaluateAttrInt		3503488						
ANR	3503927	Symbol	* request		3503488						
ANR	3503928	Symbol	lease_ent -> m_lease_ad -> EvaluateAttrBool		3503488						
ANR	3503929	Symbol	* resource_ad		3503488						
ANR	3503930	Symbol	true		3503488						
ANR	3503931	Symbol	new_lease		3503488						
ANR	3503932	Symbol	time		3503488						
ANR	3503933	Symbol	lease_ent -> m_resource_name . c_str		3503488						
ANR	3503934	Symbol	GetLeaseDuration		3503488						
ANR	3503935	Function	LeaseManagerResources :: ReleaseLeases	659:0:18666:19401							
ANR	3503936	FunctionDef	LeaseManagerResources :: ReleaseLeases (list < const LeaseManagerLease * > & requests)		3503935	0					
ANR	3503937	CompoundStatement		662:0:18753:19401	3503935	0					
ANR	3503938	IdentifierDeclStatement	int count = 0 ;	665:1:18792:18806	3503935	0	True				
ANR	3503939	IdentifierDecl	count = 0		3503935	0					
ANR	3503940	IdentifierDeclType	int		3503935	0					
ANR	3503941	Identifier	count		3503935	1					
ANR	3503942	AssignmentExpression	count = 0		3503935	2		=			
ANR	3503943	Identifier	count		3503935	0					
ANR	3503944	PrimaryExpression	0		3503935	1					
ANR	3503945	IdentifierDeclStatement	int status = 0 ;	666:1:18809:18824	3503935	1	True				
ANR	3503946	IdentifierDecl	status = 0		3503935	0					
ANR	3503947	IdentifierDeclType	int		3503935	0					
ANR	3503948	Identifier	status		3503935	1					
ANR	3503949	AssignmentExpression	status = 0		3503935	2		=			
ANR	3503950	Identifier	status		3503935	0					
ANR	3503951	PrimaryExpression	0		3503935	1					
ANR	3503952	ForStatement	for ( list < const LeaseManagerLease * > :: iterator iter = requests . begin ( ) ; iter != requests . end ( ) ; iter ++ )		3503935	2					
ANR	3503953	ForInit	list < const LeaseManagerLease * > :: iterator iter = requests . begin ( ) ;	667:7:18833:18899	3503935	0	True				
ANR	3503954	IdentifierDeclStatement	list < const LeaseManagerLease * > :: iterator iter = requests . begin ( ) ;		3503935	0					
ANR	3503955	IdentifierDecl	iter = requests . begin ( )		3503935	0					
ANR	3503956	IdentifierDeclType	list < const LeaseManagerLease * > :: iterator		3503935	0					
ANR	3503957	Identifier	iter		3503935	1					
ANR	3503958	AssignmentExpression	iter = requests . begin ( )		3503935	2		=			
ANR	3503959	Identifier	iter		3503935	0					
ANR	3503960	CallExpression	requests . begin ( )		3503935	1					
ANR	3503961	Callee	requests . begin		3503935	0					
ANR	3503962	MemberAccess	requests . begin		3503935	0					
ANR	3503963	Identifier	requests		3503935	0					
ANR	3503964	Identifier	begin		3503935	1					
ANR	3503965	ArgumentList			3503935	1					
ANR	3503966	Condition	iter != requests . end ( )	668:4:18905:18926	3503935	1	True				
ANR	3503967	EqualityExpression	iter != requests . end ( )		3503935	0		!=			
ANR	3503968	Identifier	iter		3503935	0					
ANR	3503969	CallExpression	requests . end ( )		3503935	1					
ANR	3503970	Callee	requests . end		3503935	0					
ANR	3503971	MemberAccess	requests . end		3503935	0					
ANR	3503972	Identifier	requests		3503935	0					
ANR	3503973	Identifier	end		3503935	1					
ANR	3503974	ArgumentList			3503935	1					
ANR	3503975	PostIncDecOperationExpression	iter ++	669:4:18933:18938	3503935	2	True				
ANR	3503976	Identifier	iter		3503935	0					
ANR	3503977	IncDec	++		3503935	1					
ANR	3503978	CompoundStatement		11:2:237:292	3503935	3					
ANR	3503979	IdentifierDeclStatement	const LeaseManagerLease * request = * iter ;	671:2:18947:18987	3503935	0	True				
ANR	3503980	IdentifierDecl	* request = * iter		3503935	0					
ANR	3503981	IdentifierDeclType	const LeaseManagerLease *		3503935	0					
ANR	3503982	Identifier	request		3503935	1					
ANR	3503983	AssignmentExpression	* request = * iter		3503935	2		=			
ANR	3503984	Identifier	request		3503935	0					
ANR	3503985	UnaryOperationExpression	* iter		3503935	1					
ANR	3503986	UnaryOperator	*		3503935	0					
ANR	3503987	Identifier	iter		3503935	1					
ANR	3503988	IdentifierDeclStatement	LeaseManagerLeaseEnt * lease_ent = FindLease ( * request ) ;	672:2:18991:19046	3503935	1	True				
ANR	3503989	IdentifierDecl	* lease_ent = FindLease ( * request )		3503935	0					
ANR	3503990	IdentifierDeclType	LeaseManagerLeaseEnt *		3503935	0					
ANR	3503991	Identifier	lease_ent		3503935	1					
ANR	3503992	AssignmentExpression	* lease_ent = FindLease ( * request )		3503935	2		=			
ANR	3503993	Identifier	lease_ent		3503935	0					
ANR	3503994	CallExpression	FindLease ( * request )		3503935	1					
ANR	3503995	Callee	FindLease		3503935	0					
ANR	3503996	Identifier	FindLease		3503935	0					
ANR	3503997	ArgumentList	* request		3503935	1					
ANR	3503998	Argument	* request		3503935	0					
ANR	3503999	UnaryOperationExpression	* request		3503935	0					
ANR	3504000	UnaryOperator	*		3503935	0					
ANR	3504001	Identifier	request		3503935	1					
ANR	3504002	IfStatement	if ( ! lease_ent )		3503935	2					
ANR	3504003	Condition	! lease_ent	673:7:19055:19065	3503935	0	True				
ANR	3504004	UnaryOperationExpression	! lease_ent		3503935	0					
ANR	3504005	UnaryOperator	!		3503935	0					
ANR	3504006	Identifier	lease_ent		3503935	1					
ANR	3504007	CompoundStatement		12:21:315:315	3503935	1					
ANR	3504008	ExpressionStatement	"dprintf ( D_ALWAYS , ""release: Can't find matching lease ad!\\n"" )"	674:3:19074:19143	3503935	0	True				
ANR	3504009	CallExpression	"dprintf ( D_ALWAYS , ""release: Can't find matching lease ad!\\n"" )"		3503935	0					
ANR	3504010	Callee	dprintf		3503935	0					
ANR	3504011	Identifier	dprintf		3503935	0					
ANR	3504012	ArgumentList	D_ALWAYS		3503935	1					
ANR	3504013	Argument	D_ALWAYS		3503935	0					
ANR	3504014	Identifier	D_ALWAYS		3503935	0					
ANR	3504015	Argument	"""release: Can't find matching lease ad!\\n"""		3503935	1					
ANR	3504016	PrimaryExpression	"""release: Can't find matching lease ad!\\n"""		3503935	0					
ANR	3504017	ExpressionStatement	status = - 1	676:3:19148:19159	3503935	1	True				
ANR	3504018	AssignmentExpression	status = - 1		3503935	0		=			
ANR	3504019	Identifier	status		3503935	0					
ANR	3504020	UnaryOperationExpression	- 1		3503935	1					
ANR	3504021	UnaryOperator	-		3503935	0					
ANR	3504022	PrimaryExpression	1		3503935	1					
ANR	3504023	ContinueStatement	continue ;	677:3:19164:19172	3503935	2	True				
ANR	3504024	IfStatement	if ( ! TerminateLease ( * lease_ent ) )		3503935	3					
ANR	3504025	Condition	! TerminateLease ( * lease_ent )	679:7:19185:19213	3503935	0	True				
ANR	3504026	UnaryOperationExpression	! TerminateLease ( * lease_ent )		3503935	0					
ANR	3504027	UnaryOperator	!		3503935	0					
ANR	3504028	CallExpression	TerminateLease ( * lease_ent )		3503935	1					
ANR	3504029	Callee	TerminateLease		3503935	0					
ANR	3504030	Identifier	TerminateLease		3503935	0					
ANR	3504031	ArgumentList	* lease_ent		3503935	1					
ANR	3504032	Argument	* lease_ent		3503935	0					
ANR	3504033	UnaryOperationExpression	* lease_ent		3503935	0					
ANR	3504034	UnaryOperator	*		3503935	0					
ANR	3504035	Identifier	lease_ent		3503935	1					
ANR	3504036	CompoundStatement		18:39:463:463	3503935	1					
ANR	3504037	ExpressionStatement	status = - 1	680:3:19222:19233	3503935	0	True				
ANR	3504038	AssignmentExpression	status = - 1		3503935	0		=			
ANR	3504039	Identifier	status		3503935	0					
ANR	3504040	UnaryOperationExpression	- 1		3503935	1					
ANR	3504041	UnaryOperator	-		3503935	0					
ANR	3504042	PrimaryExpression	1		3503935	1					
ANR	3504043	ElseStatement	else		3503935	0					
ANR	3504044	CompoundStatement		20:9:490:490	3503935	0					
ANR	3504045	ExpressionStatement	count ++	682:3:19249:19256	3503935	0	True				
ANR	3504046	PostIncDecOperationExpression	count ++		3503935	0					
ANR	3504047	Identifier	count		3503935	0					
ANR	3504048	IncDec	++		3503935	1					
ANR	3504049	ExpressionStatement	m_used_leases . erase ( request -> getLeaseId ( ) )	684:2:19264:19308	3503935	4	True				
ANR	3504050	CallExpression	m_used_leases . erase ( request -> getLeaseId ( ) )		3503935	0					
ANR	3504051	Callee	m_used_leases . erase		3503935	0					
ANR	3504052	MemberAccess	m_used_leases . erase		3503935	0					
ANR	3504053	Identifier	m_used_leases		3503935	0					
ANR	3504054	Identifier	erase		3503935	1					
ANR	3504055	ArgumentList	request -> getLeaseId ( )		3503935	1					
ANR	3504056	Argument	request -> getLeaseId ( )		3503935	0					
ANR	3504057	CallExpression	request -> getLeaseId ( )		3503935	0					
ANR	3504058	Callee	request -> getLeaseId		3503935	0					
ANR	3504059	PtrMemberAccess	request -> getLeaseId		3503935	0					
ANR	3504060	Identifier	request		3503935	0					
ANR	3504061	Identifier	getLeaseId		3503935	1					
ANR	3504062	ArgumentList			3503935	1					
ANR	3504063	Statement	delete	685:2:19312:19317	3503935	5	True				
ANR	3504064	ExpressionStatement	lease_ent	685:9:19319:19328	3503935	6	True				
ANR	3504065	Identifier	lease_ent		3503935	0					
ANR	3504066	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""%d leases released\\n"" , count )"	687:1:19334:19387	3503935	3	True				
ANR	3504067	CallExpression	"dprintf ( D_FULLDEBUG , ""%d leases released\\n"" , count )"		3503935	0					
ANR	3504068	Callee	dprintf		3503935	0					
ANR	3504069	Identifier	dprintf		3503935	0					
ANR	3504070	ArgumentList	D_FULLDEBUG		3503935	1					
ANR	3504071	Argument	D_FULLDEBUG		3503935	0					
ANR	3504072	Identifier	D_FULLDEBUG		3503935	0					
ANR	3504073	Argument	"""%d leases released\\n"""		3503935	1					
ANR	3504074	PrimaryExpression	"""%d leases released\\n"""		3503935	0					
ANR	3504075	Argument	count		3503935	2					
ANR	3504076	Identifier	count		3503935	0					
ANR	3504077	ReturnStatement	return 0 ;	689:1:19391:19399	3503935	4	True				
ANR	3504078	PrimaryExpression	0		3503935	0					
ANR	3504079	ReturnType	int		3503935	1					
ANR	3504080	Identifier	LeaseManagerResources :: ReleaseLeases		3503935	2					
ANR	3504081	ParameterList	list < const LeaseManagerLease * > & requests		3503935	3					
ANR	3504082	Parameter	list < const LeaseManagerLease * > & requests	661:1:18709:18749	3503935	0	True				
ANR	3504083	ParameterType	list < const LeaseManagerLease * > &		3503935	0					
ANR	3504084	Identifier	requests		3503935	1					
ANR	3504085	CFGEntryNode	ENTRY		3503935		True				
ANR	3504086	CFGExitNode	EXIT		3503935		True				
ANR	3504087	Symbol	request		3503935						
ANR	3504088	Symbol	requests . begin		3503935						
ANR	3504089	Symbol	FindLease		3503935						
ANR	3504090	Symbol	count		3503935						
ANR	3504091	Symbol	D_ALWAYS		3503935						
ANR	3504092	Symbol	iter		3503935						
ANR	3504093	Symbol	requests . end		3503935						
ANR	3504094	Symbol	D_FULLDEBUG		3503935						
ANR	3504095	Symbol	requests		3503935						
ANR	3504096	Symbol	lease_ent		3503935						
ANR	3504097	Symbol	TerminateLease		3503935						
ANR	3504098	Symbol	* lease_ent		3503935						
ANR	3504099	Symbol	m_used_leases		3503935						
ANR	3504100	Symbol	* iter		3503935						
ANR	3504101	Symbol	* request		3503935						
ANR	3504102	Symbol	request -> getLeaseId		3503935						
ANR	3504103	Symbol	status		3503935						
ANR	3504104	Function	LeaseManagerResources :: AddResource	693:0:19458:23497							
ANR	3504105	FunctionDef	LeaseManagerResources :: AddResource (classad :: ClassAd * new_res_ad)		3504104	0					
ANR	3504106	CompoundStatement		695:0:19529:23497	3504104	0					
ANR	3504107	IdentifierDeclStatement	int max_leases ;	697:1:19570:19586	3504104	0	True				
ANR	3504108	IdentifierDecl	max_leases		3504104	0					
ANR	3504109	IdentifierDeclType	int		3504104	0					
ANR	3504110	Identifier	max_leases		3504104	1					
ANR	3504111	IfStatement	"if ( ! new_res_ad -> EvaluateAttrInt ( ""MaxLeases"" , max_leases ) )"		3504104	1					
ANR	3504112	Condition	"! new_res_ad -> EvaluateAttrInt ( ""MaxLeases"" , max_leases )"	698:6:19594:19648	3504104	0	True				
ANR	3504113	UnaryOperationExpression	"! new_res_ad -> EvaluateAttrInt ( ""MaxLeases"" , max_leases )"		3504104	0					
ANR	3504114	UnaryOperator	!		3504104	0					
ANR	3504115	CallExpression	"new_res_ad -> EvaluateAttrInt ( ""MaxLeases"" , max_leases )"		3504104	1					
ANR	3504116	Callee	new_res_ad -> EvaluateAttrInt		3504104	0					
ANR	3504117	PtrMemberAccess	new_res_ad -> EvaluateAttrInt		3504104	0					
ANR	3504118	Identifier	new_res_ad		3504104	0					
ANR	3504119	Identifier	EvaluateAttrInt		3504104	1					
ANR	3504120	ArgumentList	"""MaxLeases"""		3504104	1					
ANR	3504121	Argument	"""MaxLeases"""		3504104	0					
ANR	3504122	PrimaryExpression	"""MaxLeases"""		3504104	0					
ANR	3504123	Argument	max_leases		3504104	1					
ANR	3504124	Identifier	max_leases		3504104	0					
ANR	3504125	CompoundStatement		4:64:122:122	3504104	1					
ANR	3504126	Statement	dprintf	699:2:19656:19662	3504104	0	True				
ANR	3504127	Statement	(	699:9:19663:19663	3504104	1	True				
ANR	3504128	Statement	D_ALWAYS	699:11:19665:19672	3504104	2	True				
ANR	3504129	Statement	","	699:19:19673:19673	3504104	3	True				
ANR	3504130	Statement	"""AddResource: No MaxLeases in resource ad;"""	700:5:19680:19722	3504104	4	True				
ANR	3504131	Statement	""" assumming 1\\n"""	701:5:19729:19744	3504104	5	True				
ANR	3504132	Statement	)	701:22:19746:19746	3504104	6	True				
ANR	3504133	ExpressionStatement		701:23:19747:19747	3504104	7	True				
ANR	3504134	ExpressionStatement	max_leases = 1	702:2:19751:19765	3504104	8	True				
ANR	3504135	AssignmentExpression	max_leases = 1		3504104	0		=			
ANR	3504136	Identifier	max_leases		3504104	0					
ANR	3504137	PrimaryExpression	1		3504104	1					
ANR	3504138	ElseStatement	else		3504104	0					
ANR	3504139	IfStatement	if ( max_leases < 0 )		3504104	0					
ANR	3504140	Condition	max_leases < 0	703:13:19780:19793	3504104	0	True				
ANR	3504141	RelationalExpression	max_leases < 0		3504104	0		<			
ANR	3504142	Identifier	max_leases		3504104	0					
ANR	3504143	PrimaryExpression	0		3504104	1					
ANR	3504144	CompoundStatement		9:30:267:267	3504104	1					
ANR	3504145	ExpressionStatement	"dprintf ( D_ALWAYS , ""AddResource: MaxLeases < 0; setting to zero\\n"" )"	704:2:19801:19874	3504104	0	True				
ANR	3504146	CallExpression	"dprintf ( D_ALWAYS , ""AddResource: MaxLeases < 0; setting to zero\\n"" )"		3504104	0					
ANR	3504147	Callee	dprintf		3504104	0					
ANR	3504148	Identifier	dprintf		3504104	0					
ANR	3504149	ArgumentList	D_ALWAYS		3504104	1					
ANR	3504150	Argument	D_ALWAYS		3504104	0					
ANR	3504151	Identifier	D_ALWAYS		3504104	0					
ANR	3504152	Argument	"""AddResource: MaxLeases < 0; setting to zero\\n"""		3504104	1					
ANR	3504153	PrimaryExpression	"""AddResource: MaxLeases < 0; setting to zero\\n"""		3504104	0					
ANR	3504154	ExpressionStatement	max_leases = 0	706:2:19878:19892	3504104	1	True				
ANR	3504155	AssignmentExpression	max_leases = 0		3504104	0		=			
ANR	3504156	Identifier	max_leases		3504104	0					
ANR	3504157	PrimaryExpression	0		3504104	1					
ANR	3504158	IdentifierDeclStatement	string resource_name ;	708:1:19898:19919	3504104	2	True				
ANR	3504159	IdentifierDecl	resource_name		3504104	0					
ANR	3504160	IdentifierDeclType	string		3504104	0					
ANR	3504161	Identifier	resource_name		3504104	1					
ANR	3504162	IfStatement	"if ( ! new_res_ad -> EvaluateAttrString ( ""Name"" , resource_name ) )"		3504104	3					
ANR	3504163	Condition	"! new_res_ad -> EvaluateAttrString ( ""Name"" , resource_name )"	709:6:19927:19982	3504104	0	True				
ANR	3504164	UnaryOperationExpression	"! new_res_ad -> EvaluateAttrString ( ""Name"" , resource_name )"		3504104	0					
ANR	3504165	UnaryOperator	!		3504104	0					
ANR	3504166	CallExpression	"new_res_ad -> EvaluateAttrString ( ""Name"" , resource_name )"		3504104	1					
ANR	3504167	Callee	new_res_ad -> EvaluateAttrString		3504104	0					
ANR	3504168	PtrMemberAccess	new_res_ad -> EvaluateAttrString		3504104	0					
ANR	3504169	Identifier	new_res_ad		3504104	0					
ANR	3504170	Identifier	EvaluateAttrString		3504104	1					
ANR	3504171	ArgumentList	"""Name"""		3504104	1					
ANR	3504172	Argument	"""Name"""		3504104	0					
ANR	3504173	PrimaryExpression	"""Name"""		3504104	0					
ANR	3504174	Argument	resource_name		3504104	1					
ANR	3504175	Identifier	resource_name		3504104	0					
ANR	3504176	CompoundStatement		15:65:456:456	3504104	1					
ANR	3504177	ExpressionStatement	"dprintf ( D_ALWAYS , ""AddResource: No Name in resource ad\\n"" )"	710:2:19990:20050	3504104	0	True				
ANR	3504178	CallExpression	"dprintf ( D_ALWAYS , ""AddResource: No Name in resource ad\\n"" )"		3504104	0					
ANR	3504179	Callee	dprintf		3504104	0					
ANR	3504180	Identifier	dprintf		3504104	0					
ANR	3504181	ArgumentList	D_ALWAYS		3504104	1					
ANR	3504182	Argument	D_ALWAYS		3504104	0					
ANR	3504183	Identifier	D_ALWAYS		3504104	0					
ANR	3504184	Argument	"""AddResource: No Name in resource ad\\n"""		3504104	1					
ANR	3504185	PrimaryExpression	"""AddResource: No Name in resource ad\\n"""		3504104	0					
ANR	3504186	Statement	delete	711:2:20054:20059	3504104	1	True				
ANR	3504187	ExpressionStatement	new_res_ad	711:9:20061:20071	3504104	2	True				
ANR	3504188	Identifier	new_res_ad		3504104	0					
ANR	3504189	ReturnStatement	return - 1 ;	712:2:20075:20084	3504104	3	True				
ANR	3504190	UnaryOperationExpression	- 1		3504104	0					
ANR	3504191	UnaryOperator	-		3504104	0					
ANR	3504192	PrimaryExpression	1		3504104	1					
ANR	3504193	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""AddResource: Looking to add resource %s (max = %d) @ %p\\n"" , resource_name . c_str ( ) , max_leases , new_res_ad )"	714:1:20090:20228	3504104	4	True				
ANR	3504194	CallExpression	"dprintf ( D_FULLDEBUG , ""AddResource: Looking to add resource %s (max = %d) @ %p\\n"" , resource_name . c_str ( ) , max_leases , new_res_ad )"		3504104	0					
ANR	3504195	Callee	dprintf		3504104	0					
ANR	3504196	Identifier	dprintf		3504104	0					
ANR	3504197	ArgumentList	D_FULLDEBUG		3504104	1					
ANR	3504198	Argument	D_FULLDEBUG		3504104	0					
ANR	3504199	Identifier	D_FULLDEBUG		3504104	0					
ANR	3504200	Argument	"""AddResource: Looking to add resource %s (max = %d) @ %p\\n"""		3504104	1					
ANR	3504201	PrimaryExpression	"""AddResource: Looking to add resource %s (max = %d) @ %p\\n"""		3504104	0					
ANR	3504202	Argument	resource_name . c_str ( )		3504104	2					
ANR	3504203	CallExpression	resource_name . c_str ( )		3504104	0					
ANR	3504204	Callee	resource_name . c_str		3504104	0					
ANR	3504205	MemberAccess	resource_name . c_str		3504104	0					
ANR	3504206	Identifier	resource_name		3504104	0					
ANR	3504207	Identifier	c_str		3504104	1					
ANR	3504208	ArgumentList			3504104	1					
ANR	3504209	Argument	max_leases		3504104	3					
ANR	3504210	Identifier	max_leases		3504104	0					
ANR	3504211	Argument	new_res_ad		3504104	4					
ANR	3504212	Identifier	new_res_ad		3504104	0					
ANR	3504213	IdentifierDeclStatement	classad :: ClassAd * old_res_ad ;	719:1:20269:20297	3504104	5	True				
ANR	3504214	IdentifierDecl	* old_res_ad		3504104	0					
ANR	3504215	IdentifierDeclType	classad :: ClassAd *		3504104	0					
ANR	3504216	Identifier	old_res_ad		3504104	1					
ANR	3504217	ExpressionStatement	old_res_ad = GetResourceAd ( resource_name )	720:1:20300:20343	3504104	6	True				
ANR	3504218	AssignmentExpression	old_res_ad = GetResourceAd ( resource_name )		3504104	0		=			
ANR	3504219	Identifier	old_res_ad		3504104	0					
ANR	3504220	CallExpression	GetResourceAd ( resource_name )		3504104	1					
ANR	3504221	Callee	GetResourceAd		3504104	0					
ANR	3504222	Identifier	GetResourceAd		3504104	0					
ANR	3504223	ArgumentList	resource_name		3504104	1					
ANR	3504224	Argument	resource_name		3504104	0					
ANR	3504225	Identifier	resource_name		3504104	0					
ANR	3504226	IfStatement	if ( old_res_ad )		3504104	7					
ANR	3504227	Condition	old_res_ad	721:6:20351:20360	3504104	0	True				
ANR	3504228	Identifier	old_res_ad		3504104	0					
ANR	3504229	CompoundStatement		33:2:979:1001	3504104	1					
ANR	3504230	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""AddResource: Found matching old ad @ %p\\n"" , old_res_ad )"	722:2:20368:20452	3504104	0	True				
ANR	3504231	CallExpression	"dprintf ( D_FULLDEBUG , ""AddResource: Found matching old ad @ %p\\n"" , old_res_ad )"		3504104	0					
ANR	3504232	Callee	dprintf		3504104	0					
ANR	3504233	Identifier	dprintf		3504104	0					
ANR	3504234	ArgumentList	D_FULLDEBUG		3504104	1					
ANR	3504235	Argument	D_FULLDEBUG		3504104	0					
ANR	3504236	Identifier	D_FULLDEBUG		3504104	0					
ANR	3504237	Argument	"""AddResource: Found matching old ad @ %p\\n"""		3504104	1					
ANR	3504238	PrimaryExpression	"""AddResource: Found matching old ad @ %p\\n"""		3504104	0					
ANR	3504239	Argument	old_res_ad		3504104	2					
ANR	3504240	Identifier	old_res_ad		3504104	0					
ANR	3504241	IdentifierDeclStatement	"int new_seq , new_stime ;"	726:2:20483:20505	3504104	1	True				
ANR	3504242	IdentifierDecl	new_seq		3504104	0					
ANR	3504243	IdentifierDeclType	int		3504104	0					
ANR	3504244	Identifier	new_seq		3504104	1					
ANR	3504245	IdentifierDecl	new_stime		3504104	1					
ANR	3504246	IdentifierDeclType	int		3504104	0					
ANR	3504247	Identifier	new_stime		3504104	1					
ANR	3504248	IdentifierDeclStatement	"int old_seq , old_stime ;"	727:2:20509:20531	3504104	2	True				
ANR	3504249	IdentifierDecl	old_seq		3504104	0					
ANR	3504250	IdentifierDeclType	int		3504104	0					
ANR	3504251	Identifier	old_seq		3504104	1					
ANR	3504252	IdentifierDecl	old_stime		3504104	1					
ANR	3504253	IdentifierDeclType	int		3504104	0					
ANR	3504254	Identifier	old_stime		3504104	1					
ANR	3504255	IfStatement	"if ( old_res_ad -> EvaluateAttrInt ( ATTR_UPDATE_SEQUENCE_NUMBER , old_seq ) && old_res_ad -> EvaluateAttrInt ( ATTR_DAEMON_START_TIME , old_stime ) && new_res_ad -> EvaluateAttrInt ( ATTR_UPDATE_SEQUENCE_NUMBER , new_seq ) && new_res_ad -> EvaluateAttrInt ( ATTR_DAEMON_START_TIME , new_stime ) )"		3504104	3					
ANR	3504256	Condition	"old_res_ad -> EvaluateAttrInt ( ATTR_UPDATE_SEQUENCE_NUMBER , old_seq ) && old_res_ad -> EvaluateAttrInt ( ATTR_DAEMON_START_TIME , old_stime ) && new_res_ad -> EvaluateAttrInt ( ATTR_UPDATE_SEQUENCE_NUMBER , new_seq ) && new_res_ad -> EvaluateAttrInt ( ATTR_DAEMON_START_TIME , new_stime )"	728:7:20540:20875	3504104	0	True				
ANR	3504257	AndExpression	"old_res_ad -> EvaluateAttrInt ( ATTR_UPDATE_SEQUENCE_NUMBER , old_seq ) && old_res_ad -> EvaluateAttrInt ( ATTR_DAEMON_START_TIME , old_stime ) && new_res_ad -> EvaluateAttrInt ( ATTR_UPDATE_SEQUENCE_NUMBER , new_seq ) && new_res_ad -> EvaluateAttrInt ( ATTR_DAEMON_START_TIME , new_stime )"		3504104	0		&&			
ANR	3504258	CallExpression	"old_res_ad -> EvaluateAttrInt ( ATTR_UPDATE_SEQUENCE_NUMBER , old_seq )"		3504104	0					
ANR	3504259	Callee	old_res_ad -> EvaluateAttrInt		3504104	0					
ANR	3504260	PtrMemberAccess	old_res_ad -> EvaluateAttrInt		3504104	0					
ANR	3504261	Identifier	old_res_ad		3504104	0					
ANR	3504262	Identifier	EvaluateAttrInt		3504104	1					
ANR	3504263	ArgumentList	ATTR_UPDATE_SEQUENCE_NUMBER		3504104	1					
ANR	3504264	Argument	ATTR_UPDATE_SEQUENCE_NUMBER		3504104	0					
ANR	3504265	Identifier	ATTR_UPDATE_SEQUENCE_NUMBER		3504104	0					
ANR	3504266	Argument	old_seq		3504104	1					
ANR	3504267	Identifier	old_seq		3504104	0					
ANR	3504268	AndExpression	"old_res_ad -> EvaluateAttrInt ( ATTR_DAEMON_START_TIME , old_stime ) && new_res_ad -> EvaluateAttrInt ( ATTR_UPDATE_SEQUENCE_NUMBER , new_seq ) && new_res_ad -> EvaluateAttrInt ( ATTR_DAEMON_START_TIME , new_stime )"		3504104	1		&&			
ANR	3504269	CallExpression	"old_res_ad -> EvaluateAttrInt ( ATTR_DAEMON_START_TIME , old_stime )"		3504104	0					
ANR	3504270	Callee	old_res_ad -> EvaluateAttrInt		3504104	0					
ANR	3504271	PtrMemberAccess	old_res_ad -> EvaluateAttrInt		3504104	0					
ANR	3504272	Identifier	old_res_ad		3504104	0					
ANR	3504273	Identifier	EvaluateAttrInt		3504104	1					
ANR	3504274	ArgumentList	ATTR_DAEMON_START_TIME		3504104	1					
ANR	3504275	Argument	ATTR_DAEMON_START_TIME		3504104	0					
ANR	3504276	Identifier	ATTR_DAEMON_START_TIME		3504104	0					
ANR	3504277	Argument	old_stime		3504104	1					
ANR	3504278	Identifier	old_stime		3504104	0					
ANR	3504279	AndExpression	"new_res_ad -> EvaluateAttrInt ( ATTR_UPDATE_SEQUENCE_NUMBER , new_seq ) && new_res_ad -> EvaluateAttrInt ( ATTR_DAEMON_START_TIME , new_stime )"		3504104	1		&&			
ANR	3504280	CallExpression	"new_res_ad -> EvaluateAttrInt ( ATTR_UPDATE_SEQUENCE_NUMBER , new_seq )"		3504104	0					
ANR	3504281	Callee	new_res_ad -> EvaluateAttrInt		3504104	0					
ANR	3504282	PtrMemberAccess	new_res_ad -> EvaluateAttrInt		3504104	0					
ANR	3504283	Identifier	new_res_ad		3504104	0					
ANR	3504284	Identifier	EvaluateAttrInt		3504104	1					
ANR	3504285	ArgumentList	ATTR_UPDATE_SEQUENCE_NUMBER		3504104	1					
ANR	3504286	Argument	ATTR_UPDATE_SEQUENCE_NUMBER		3504104	0					
ANR	3504287	Identifier	ATTR_UPDATE_SEQUENCE_NUMBER		3504104	0					
ANR	3504288	Argument	new_seq		3504104	1					
ANR	3504289	Identifier	new_seq		3504104	0					
ANR	3504290	CallExpression	"new_res_ad -> EvaluateAttrInt ( ATTR_DAEMON_START_TIME , new_stime )"		3504104	1					
ANR	3504291	Callee	new_res_ad -> EvaluateAttrInt		3504104	0					
ANR	3504292	PtrMemberAccess	new_res_ad -> EvaluateAttrInt		3504104	0					
ANR	3504293	Identifier	new_res_ad		3504104	0					
ANR	3504294	Identifier	EvaluateAttrInt		3504104	1					
ANR	3504295	ArgumentList	ATTR_DAEMON_START_TIME		3504104	1					
ANR	3504296	Argument	ATTR_DAEMON_START_TIME		3504104	0					
ANR	3504297	Identifier	ATTR_DAEMON_START_TIME		3504104	0					
ANR	3504298	Argument	new_stime		3504104	1					
ANR	3504299	Identifier	new_stime		3504104	0					
ANR	3504300	CompoundStatement		41:26:1349:1349	3504104	1					
ANR	3504301	IfStatement	if ( ( new_seq == old_seq ) && ( new_stime == old_stime ) )		3504104	0					
ANR	3504302	Condition	( new_seq == old_seq ) && ( new_stime == old_stime )	738:9:20944:20995	3504104	0	True				
ANR	3504303	AndExpression	( new_seq == old_seq ) && ( new_stime == old_stime )		3504104	0		&&			
ANR	3504304	EqualityExpression	new_seq == old_seq		3504104	0		==			
ANR	3504305	Identifier	new_seq		3504104	0					
ANR	3504306	Identifier	old_seq		3504104	1					
ANR	3504307	EqualityExpression	new_stime == old_stime		3504104	1		==			
ANR	3504308	Identifier	new_stime		3504104	0					
ANR	3504309	Identifier	old_stime		3504104	1					
ANR	3504310	CompoundStatement		44:65:1470:1470	3504104	1					
ANR	3504311	ExpressionStatement	"old_res_ad -> InsertAttr ( ""_Expired"" , false )"	739:4:21006:21049	3504104	0	True				
ANR	3504312	CallExpression	"old_res_ad -> InsertAttr ( ""_Expired"" , false )"		3504104	0					
ANR	3504313	Callee	old_res_ad -> InsertAttr		3504104	0					
ANR	3504314	PtrMemberAccess	old_res_ad -> InsertAttr		3504104	0					
ANR	3504315	Identifier	old_res_ad		3504104	0					
ANR	3504316	Identifier	InsertAttr		3504104	1					
ANR	3504317	ArgumentList	"""_Expired"""		3504104	1					
ANR	3504318	Argument	"""_Expired"""		3504104	0					
ANR	3504319	PrimaryExpression	"""_Expired"""		3504104	0					
ANR	3504320	Argument	false		3504104	1					
ANR	3504321	Identifier	false		3504104	0					
ANR	3504322	Statement	delete	740:4:21055:21060	3504104	1	True				
ANR	3504323	ExpressionStatement	new_res_ad	740:11:21062:21072	3504104	2	True				
ANR	3504324	Identifier	new_res_ad		3504104	0					
ANR	3504325	ReturnStatement	return 0 ;	741:4:21078:21086	3504104	3	True				
ANR	3504326	PrimaryExpression	0		3504104	0					
ANR	3504327	ElseStatement	else		3504104	0					
ANR	3504328	CompoundStatement		50:8:1575:1575	3504104	0					
ANR	3504329	ExpressionStatement	m_stats . m_num_resources ++	745:2:21109:21134	3504104	0	True				
ANR	3504330	PostIncDecOperationExpression	m_stats . m_num_resources ++		3504104	0					
ANR	3504331	MemberAccess	m_stats . m_num_resources		3504104	0					
ANR	3504332	Identifier	m_stats		3504104	0					
ANR	3504333	Identifier	m_num_resources		3504104	1					
ANR	3504334	IncDec	++		3504104	1					
ANR	3504335	IdentifierDeclStatement	"classad :: ExprTree * req_expr = new_res_ad -> Lookup ( ""Requirements"" ) ;"	749:1:21181:21247	3504104	8	True				
ANR	3504336	IdentifierDecl	"* req_expr = new_res_ad -> Lookup ( ""Requirements"" )"		3504104	0					
ANR	3504337	IdentifierDeclType	classad :: ExprTree *		3504104	0					
ANR	3504338	Identifier	req_expr		3504104	1					
ANR	3504339	AssignmentExpression	"* req_expr = new_res_ad -> Lookup ( ""Requirements"" )"		3504104	2		=			
ANR	3504340	Identifier	req_expr		3504104	0					
ANR	3504341	CallExpression	"new_res_ad -> Lookup ( ""Requirements"" )"		3504104	1					
ANR	3504342	Callee	new_res_ad -> Lookup		3504104	0					
ANR	3504343	PtrMemberAccess	new_res_ad -> Lookup		3504104	0					
ANR	3504344	Identifier	new_res_ad		3504104	0					
ANR	3504345	Identifier	Lookup		3504104	1					
ANR	3504346	ArgumentList	"""Requirements"""		3504104	1					
ANR	3504347	Argument	"""Requirements"""		3504104	0					
ANR	3504348	PrimaryExpression	"""Requirements"""		3504104	0					
ANR	3504349	IfStatement	if ( ! req_expr )		3504104	9					
ANR	3504350	Condition	! req_expr	750:6:21255:21263	3504104	0	True				
ANR	3504351	UnaryOperationExpression	! req_expr		3504104	0					
ANR	3504352	UnaryOperator	!		3504104	0					
ANR	3504353	Identifier	req_expr		3504104	1					
ANR	3504354	CompoundStatement		60:2:1854:1883	3504104	1					
ANR	3504355	IdentifierDeclStatement	"string expr_str = ""true"" ;"	751:2:21271:21295	3504104	0	True				
ANR	3504356	IdentifierDecl	"expr_str = ""true"""		3504104	0					
ANR	3504357	IdentifierDeclType	string		3504104	0					
ANR	3504358	Identifier	expr_str		3504104	1					
ANR	3504359	AssignmentExpression	"expr_str = ""true"""		3504104	2		=			
ANR	3504360	Identifier	expr_str		3504104	0					
ANR	3504361	PrimaryExpression	"""true"""		3504104	1					
ANR	3504362	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""No requirements; setting to %s\\n"" , expr_str . c_str ( ) )"	752:2:21299:21380	3504104	1	True				
ANR	3504363	CallExpression	"dprintf ( D_FULLDEBUG , ""No requirements; setting to %s\\n"" , expr_str . c_str ( ) )"		3504104	0					
ANR	3504364	Callee	dprintf		3504104	0					
ANR	3504365	Identifier	dprintf		3504104	0					
ANR	3504366	ArgumentList	D_FULLDEBUG		3504104	1					
ANR	3504367	Argument	D_FULLDEBUG		3504104	0					
ANR	3504368	Identifier	D_FULLDEBUG		3504104	0					
ANR	3504369	Argument	"""No requirements; setting to %s\\n"""		3504104	1					
ANR	3504370	PrimaryExpression	"""No requirements; setting to %s\\n"""		3504104	0					
ANR	3504371	Argument	expr_str . c_str ( )		3504104	2					
ANR	3504372	CallExpression	expr_str . c_str ( )		3504104	0					
ANR	3504373	Callee	expr_str . c_str		3504104	0					
ANR	3504374	MemberAccess	expr_str . c_str		3504104	0					
ANR	3504375	Identifier	expr_str		3504104	0					
ANR	3504376	Identifier	c_str		3504104	1					
ANR	3504377	ArgumentList			3504104	1					
ANR	3504378	IdentifierDeclStatement	classad :: ClassAdParser parser ;	754:2:21384:21413	3504104	2	True				
ANR	3504379	IdentifierDecl	parser		3504104	0					
ANR	3504380	IdentifierDeclType	classad :: ClassAdParser		3504104	0					
ANR	3504381	Identifier	parser		3504104	1					
ANR	3504382	ExpressionStatement	"req_expr = parser . ParseExpression ( expr_str , true )"	755:2:21417:21468	3504104	3	True				
ANR	3504383	AssignmentExpression	"req_expr = parser . ParseExpression ( expr_str , true )"		3504104	0		=			
ANR	3504384	Identifier	req_expr		3504104	0					
ANR	3504385	CallExpression	"parser . ParseExpression ( expr_str , true )"		3504104	1					
ANR	3504386	Callee	parser . ParseExpression		3504104	0					
ANR	3504387	MemberAccess	parser . ParseExpression		3504104	0					
ANR	3504388	Identifier	parser		3504104	0					
ANR	3504389	Identifier	ParseExpression		3504104	1					
ANR	3504390	ArgumentList	expr_str		3504104	1					
ANR	3504391	Argument	expr_str		3504104	0					
ANR	3504392	Identifier	expr_str		3504104	0					
ANR	3504393	Argument	true		3504104	1					
ANR	3504394	Identifier	true		3504104	0					
ANR	3504395	IfStatement	if ( ! req_expr )		3504104	4					
ANR	3504396	Condition	! req_expr	756:7:21477:21485	3504104	0	True				
ANR	3504397	UnaryOperationExpression	! req_expr		3504104	0					
ANR	3504398	UnaryOperator	!		3504104	0					
ANR	3504399	Identifier	req_expr		3504104	1					
ANR	3504400	CompoundStatement		62:19:1959:1959	3504104	1					
ANR	3504401	ExpressionStatement	"dprintf ( D_ALWAYS , ""Parser of '%s' failed\\n"" , expr_str . c_str ( ) )"	757:3:21494:21558	3504104	0	True				
ANR	3504402	CallExpression	"dprintf ( D_ALWAYS , ""Parser of '%s' failed\\n"" , expr_str . c_str ( ) )"		3504104	0					
ANR	3504403	Callee	dprintf		3504104	0					
ANR	3504404	Identifier	dprintf		3504104	0					
ANR	3504405	ArgumentList	D_ALWAYS		3504104	1					
ANR	3504406	Argument	D_ALWAYS		3504104	0					
ANR	3504407	Identifier	D_ALWAYS		3504104	0					
ANR	3504408	Argument	"""Parser of '%s' failed\\n"""		3504104	1					
ANR	3504409	PrimaryExpression	"""Parser of '%s' failed\\n"""		3504104	0					
ANR	3504410	Argument	expr_str . c_str ( )		3504104	2					
ANR	3504411	CallExpression	expr_str . c_str ( )		3504104	0					
ANR	3504412	Callee	expr_str . c_str		3504104	0					
ANR	3504413	MemberAccess	expr_str . c_str		3504104	0					
ANR	3504414	Identifier	expr_str		3504104	0					
ANR	3504415	Identifier	c_str		3504104	1					
ANR	3504416	ArgumentList			3504104	1					
ANR	3504417	ElseStatement	else		3504104	0					
ANR	3504418	IfStatement	"if ( ! new_res_ad -> Insert ( ""Requirements"" , req_expr ) )"		3504104	0					
ANR	3504419	Condition	"! new_res_ad -> Insert ( ""Requirements"" , req_expr )"	758:14:21574:21620	3504104	0	True				
ANR	3504420	UnaryOperationExpression	"! new_res_ad -> Insert ( ""Requirements"" , req_expr )"		3504104	0					
ANR	3504421	UnaryOperator	!		3504104	0					
ANR	3504422	CallExpression	"new_res_ad -> Insert ( ""Requirements"" , req_expr )"		3504104	1					
ANR	3504423	Callee	new_res_ad -> Insert		3504104	0					
ANR	3504424	PtrMemberAccess	new_res_ad -> Insert		3504104	0					
ANR	3504425	Identifier	new_res_ad		3504104	0					
ANR	3504426	Identifier	Insert		3504104	1					
ANR	3504427	ArgumentList	"""Requirements"""		3504104	1					
ANR	3504428	Argument	"""Requirements"""		3504104	0					
ANR	3504429	PrimaryExpression	"""Requirements"""		3504104	0					
ANR	3504430	Argument	req_expr		3504104	1					
ANR	3504431	Identifier	req_expr		3504104	0					
ANR	3504432	CompoundStatement		64:64:2094:2094	3504104	1					
ANR	3504433	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to insert requirements\\n"" )"	759:3:21629:21683	3504104	0	True				
ANR	3504434	CallExpression	"dprintf ( D_ALWAYS , ""Failed to insert requirements\\n"" )"		3504104	0					
ANR	3504435	Callee	dprintf		3504104	0					
ANR	3504436	Identifier	dprintf		3504104	0					
ANR	3504437	ArgumentList	D_ALWAYS		3504104	1					
ANR	3504438	Argument	D_ALWAYS		3504104	0					
ANR	3504439	Identifier	D_ALWAYS		3504104	0					
ANR	3504440	Argument	"""Failed to insert requirements\\n"""		3504104	1					
ANR	3504441	PrimaryExpression	"""Failed to insert requirements\\n"""		3504104	0					
ANR	3504442	IdentifierDeclStatement	classad :: ClassAd * leases_ad = GetLeasesAd ( resource_name ) ;	764:1:21739:21798	3504104	10	True				
ANR	3504443	IdentifierDecl	* leases_ad = GetLeasesAd ( resource_name )		3504104	0					
ANR	3504444	IdentifierDeclType	classad :: ClassAd *		3504104	0					
ANR	3504445	Identifier	leases_ad		3504104	1					
ANR	3504446	AssignmentExpression	* leases_ad = GetLeasesAd ( resource_name )		3504104	2		=			
ANR	3504447	Identifier	leases_ad		3504104	0					
ANR	3504448	CallExpression	GetLeasesAd ( resource_name )		3504104	1					
ANR	3504449	Callee	GetLeasesAd		3504104	0					
ANR	3504450	Identifier	GetLeasesAd		3504104	0					
ANR	3504451	ArgumentList	resource_name		3504104	1					
ANR	3504452	Argument	resource_name		3504104	0					
ANR	3504453	Identifier	resource_name		3504104	0					
ANR	3504454	IfStatement	if ( ! leases_ad )		3504104	11					
ANR	3504455	Condition	! leases_ad	765:6:21806:21816	3504104	0	True				
ANR	3504456	UnaryOperationExpression	! leases_ad		3504104	0					
ANR	3504457	UnaryOperator	!		3504104	0					
ANR	3504458	Identifier	leases_ad		3504104	1					
ANR	3504459	CompoundStatement		71:20:2290:2290	3504104	1					
ANR	3504460	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""No lease ad for %s; creating one\\n"" , resource_name . c_str ( ) )"	766:2:21824:21912	3504104	0	True				
ANR	3504461	CallExpression	"dprintf ( D_FULLDEBUG , ""No lease ad for %s; creating one\\n"" , resource_name . c_str ( ) )"		3504104	0					
ANR	3504462	Callee	dprintf		3504104	0					
ANR	3504463	Identifier	dprintf		3504104	0					
ANR	3504464	ArgumentList	D_FULLDEBUG		3504104	1					
ANR	3504465	Argument	D_FULLDEBUG		3504104	0					
ANR	3504466	Identifier	D_FULLDEBUG		3504104	0					
ANR	3504467	Argument	"""No lease ad for %s; creating one\\n"""		3504104	1					
ANR	3504468	PrimaryExpression	"""No lease ad for %s; creating one\\n"""		3504104	0					
ANR	3504469	Argument	resource_name . c_str ( )		3504104	2					
ANR	3504470	CallExpression	resource_name . c_str ( )		3504104	0					
ANR	3504471	Callee	resource_name . c_str		3504104	0					
ANR	3504472	MemberAccess	resource_name . c_str		3504104	0					
ANR	3504473	Identifier	resource_name		3504104	0					
ANR	3504474	Identifier	c_str		3504104	1					
ANR	3504475	ArgumentList			3504104	1					
ANR	3504476	ExpressionStatement	leases_ad = new classad :: ClassAd ( )	768:2:21916:21951	3504104	1	True				
ANR	3504477	AssignmentExpression	leases_ad = new classad :: ClassAd ( )		3504104	0		=			
ANR	3504478	Identifier	leases_ad		3504104	0					
ANR	3504479	UnaryExpression	new classad :: ClassAd ( )		3504104	1					
ANR	3504480	ExpressionStatement	"leases_ad -> InsertAttr ( m_view_key , m_leases_view )"	769:2:21955:22005	3504104	2	True				
ANR	3504481	CallExpression	"leases_ad -> InsertAttr ( m_view_key , m_leases_view )"		3504104	0					
ANR	3504482	Callee	leases_ad -> InsertAttr		3504104	0					
ANR	3504483	PtrMemberAccess	leases_ad -> InsertAttr		3504104	0					
ANR	3504484	Identifier	leases_ad		3504104	0					
ANR	3504485	Identifier	InsertAttr		3504104	1					
ANR	3504486	ArgumentList	m_view_key		3504104	1					
ANR	3504487	Argument	m_view_key		3504104	0					
ANR	3504488	Identifier	m_view_key		3504104	0					
ANR	3504489	Argument	m_leases_view		3504104	1					
ANR	3504490	Identifier	m_leases_view		3504104	0					
ANR	3504491	IfStatement	"if ( ! InsertLeasesAd ( resource_name , leases_ad ) )"		3504104	3					
ANR	3504492	Condition	"! InsertLeasesAd ( resource_name , leases_ad )"	770:7:22014:22056	3504104	0	True				
ANR	3504493	UnaryOperationExpression	"! InsertLeasesAd ( resource_name , leases_ad )"		3504104	0					
ANR	3504494	UnaryOperator	!		3504104	0					
ANR	3504495	CallExpression	"InsertLeasesAd ( resource_name , leases_ad )"		3504104	1					
ANR	3504496	Callee	InsertLeasesAd		3504104	0					
ANR	3504497	Identifier	InsertLeasesAd		3504104	0					
ANR	3504498	ArgumentList	resource_name		3504104	1					
ANR	3504499	Argument	resource_name		3504104	0					
ANR	3504500	Identifier	resource_name		3504104	0					
ANR	3504501	Argument	leases_ad		3504104	1					
ANR	3504502	Identifier	leases_ad		3504104	0					
ANR	3504503	CompoundStatement		76:53:2530:2530	3504104	1					
ANR	3504504	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to leases ad for %s\\n"" , resource_name . c_str ( ) )"	771:3:22065:22151	3504104	0	True				
ANR	3504505	CallExpression	"dprintf ( D_ALWAYS , ""Failed to leases ad for %s\\n"" , resource_name . c_str ( ) )"		3504104	0					
ANR	3504506	Callee	dprintf		3504104	0					
ANR	3504507	Identifier	dprintf		3504104	0					
ANR	3504508	ArgumentList	D_ALWAYS		3504104	1					
ANR	3504509	Argument	D_ALWAYS		3504104	0					
ANR	3504510	Identifier	D_ALWAYS		3504104	0					
ANR	3504511	Argument	"""Failed to leases ad for %s\\n"""		3504104	1					
ANR	3504512	PrimaryExpression	"""Failed to leases ad for %s\\n"""		3504104	0					
ANR	3504513	Argument	resource_name . c_str ( )		3504104	2					
ANR	3504514	CallExpression	resource_name . c_str ( )		3504104	0					
ANR	3504515	Callee	resource_name . c_str		3504104	0					
ANR	3504516	MemberAccess	resource_name . c_str		3504104	0					
ANR	3504517	Identifier	resource_name		3504104	0					
ANR	3504518	Identifier	c_str		3504104	1					
ANR	3504519	ArgumentList			3504104	1					
ANR	3504520	IdentifierDeclStatement	int lease_count ;	778:1:22207:22224	3504104	12	True				
ANR	3504521	IdentifierDecl	lease_count		3504104	0					
ANR	3504522	IdentifierDeclType	int		3504104	0					
ANR	3504523	Identifier	lease_count		3504104	1					
ANR	3504524	IdentifierDeclStatement	classad :: ClassAd * updates = NULL ;	779:1:22227:22259	3504104	13	True				
ANR	3504525	IdentifierDecl	* updates = NULL		3504104	0					
ANR	3504526	IdentifierDeclType	classad :: ClassAd *		3504104	0					
ANR	3504527	Identifier	updates		3504104	1					
ANR	3504528	AssignmentExpression	* updates = NULL		3504104	2		=			
ANR	3504529	Identifier	NULL		3504104	0					
ANR	3504530	Identifier	NULL		3504104	1					
ANR	3504531	IfStatement	"if ( ! leases_ad -> EvaluateAttrInt ( ""LeaseCount"" , lease_count ) )"		3504104	14					
ANR	3504532	Condition	"! leases_ad -> EvaluateAttrInt ( ""LeaseCount"" , lease_count )"	780:6:22267:22322	3504104	0	True				
ANR	3504533	UnaryOperationExpression	"! leases_ad -> EvaluateAttrInt ( ""LeaseCount"" , lease_count )"		3504104	0					
ANR	3504534	UnaryOperator	!		3504104	0					
ANR	3504535	CallExpression	"leases_ad -> EvaluateAttrInt ( ""LeaseCount"" , lease_count )"		3504104	1					
ANR	3504536	Callee	leases_ad -> EvaluateAttrInt		3504104	0					
ANR	3504537	PtrMemberAccess	leases_ad -> EvaluateAttrInt		3504104	0					
ANR	3504538	Identifier	leases_ad		3504104	0					
ANR	3504539	Identifier	EvaluateAttrInt		3504104	1					
ANR	3504540	ArgumentList	"""LeaseCount"""		3504104	1					
ANR	3504541	Argument	"""LeaseCount"""		3504104	0					
ANR	3504542	PrimaryExpression	"""LeaseCount"""		3504104	0					
ANR	3504543	Argument	lease_count		3504104	1					
ANR	3504544	Identifier	lease_count		3504104	0					
ANR	3504545	CompoundStatement		86:65:2796:2796	3504104	1					
ANR	3504546	ExpressionStatement	lease_count = 0	781:2:22330:22345	3504104	0	True				
ANR	3504547	AssignmentExpression	lease_count = 0		3504104	0		=			
ANR	3504548	Identifier	lease_count		3504104	0					
ANR	3504549	PrimaryExpression	0		3504104	1					
ANR	3504550	IfStatement	if ( ! updates )		3504104	1					
ANR	3504551	Condition	! updates	782:7:22354:22362	3504104	0	True				
ANR	3504552	UnaryOperationExpression	! updates		3504104	0					
ANR	3504553	UnaryOperator	!		3504104	0					
ANR	3504554	Identifier	updates		3504104	1					
ANR	3504555	CompoundStatement		88:19:2836:2836	3504104	1					
ANR	3504556	Statement	updates	783:3:22371:22377	3504104	0	True				
ANR	3504557	Statement	=	783:11:22379:22379	3504104	1	True				
ANR	3504558	Statement	new	783:13:22381:22383	3504104	2	True				
ANR	3504559	ExpressionStatement	classad :: ClassAd	783:17:22385:22401	3504104	3	True				
ANR	3504560	Identifier	classad :: ClassAd		3504104	0					
ANR	3504561	ExpressionStatement	"updates -> InsertAttr ( ""LeaseCount"" , lease_count )"	785:2:22409:22457	3504104	2	True				
ANR	3504562	CallExpression	"updates -> InsertAttr ( ""LeaseCount"" , lease_count )"		3504104	0					
ANR	3504563	Callee	updates -> InsertAttr		3504104	0					
ANR	3504564	PtrMemberAccess	updates -> InsertAttr		3504104	0					
ANR	3504565	Identifier	updates		3504104	0					
ANR	3504566	Identifier	InsertAttr		3504104	1					
ANR	3504567	ArgumentList	"""LeaseCount"""		3504104	1					
ANR	3504568	Argument	"""LeaseCount"""		3504104	0					
ANR	3504569	PrimaryExpression	"""LeaseCount"""		3504104	0					
ANR	3504570	Argument	lease_count		3504104	1					
ANR	3504571	Identifier	lease_count		3504104	0					
ANR	3504572	IdentifierDeclStatement	int used_count ;	787:1:22463:22479	3504104	15	True				
ANR	3504573	IdentifierDecl	used_count		3504104	0					
ANR	3504574	IdentifierDeclType	int		3504104	0					
ANR	3504575	Identifier	used_count		3504104	1					
ANR	3504576	IfStatement	"if ( ! leases_ad -> EvaluateAttrInt ( ""UsedCount"" , used_count ) )"		3504104	16					
ANR	3504577	Condition	"! leases_ad -> EvaluateAttrInt ( ""UsedCount"" , used_count )"	788:6:22487:22540	3504104	0	True				
ANR	3504578	UnaryOperationExpression	"! leases_ad -> EvaluateAttrInt ( ""UsedCount"" , used_count )"		3504104	0					
ANR	3504579	UnaryOperator	!		3504104	0					
ANR	3504580	CallExpression	"leases_ad -> EvaluateAttrInt ( ""UsedCount"" , used_count )"		3504104	1					
ANR	3504581	Callee	leases_ad -> EvaluateAttrInt		3504104	0					
ANR	3504582	PtrMemberAccess	leases_ad -> EvaluateAttrInt		3504104	0					
ANR	3504583	Identifier	leases_ad		3504104	0					
ANR	3504584	Identifier	EvaluateAttrInt		3504104	1					
ANR	3504585	ArgumentList	"""UsedCount"""		3504104	1					
ANR	3504586	Argument	"""UsedCount"""		3504104	0					
ANR	3504587	PrimaryExpression	"""UsedCount"""		3504104	0					
ANR	3504588	Argument	used_count		3504104	1					
ANR	3504589	Identifier	used_count		3504104	0					
ANR	3504590	CompoundStatement		94:63:3014:3014	3504104	1					
ANR	3504591	ExpressionStatement	used_count = 0	789:2:22548:22562	3504104	0	True				
ANR	3504592	AssignmentExpression	used_count = 0		3504104	0		=			
ANR	3504593	Identifier	used_count		3504104	0					
ANR	3504594	PrimaryExpression	0		3504104	1					
ANR	3504595	IfStatement	if ( ! updates )		3504104	1					
ANR	3504596	Condition	! updates	790:7:22571:22579	3504104	0	True				
ANR	3504597	UnaryOperationExpression	! updates		3504104	0					
ANR	3504598	UnaryOperator	!		3504104	0					
ANR	3504599	Identifier	updates		3504104	1					
ANR	3504600	CompoundStatement		96:19:3053:3053	3504104	1					
ANR	3504601	Statement	updates	791:3:22588:22594	3504104	0	True				
ANR	3504602	Statement	=	791:11:22596:22596	3504104	1	True				
ANR	3504603	Statement	new	791:13:22598:22600	3504104	2	True				
ANR	3504604	ExpressionStatement	classad :: ClassAd	791:17:22602:22618	3504104	3	True				
ANR	3504605	Identifier	classad :: ClassAd		3504104	0					
ANR	3504606	ExpressionStatement	"updates -> InsertAttr ( ""UsedCount"" , used_count )"	793:2:22626:22672	3504104	2	True				
ANR	3504607	CallExpression	"updates -> InsertAttr ( ""UsedCount"" , used_count )"		3504104	0					
ANR	3504608	Callee	updates -> InsertAttr		3504104	0					
ANR	3504609	PtrMemberAccess	updates -> InsertAttr		3504104	0					
ANR	3504610	Identifier	updates		3504104	0					
ANR	3504611	Identifier	InsertAttr		3504104	1					
ANR	3504612	ArgumentList	"""UsedCount"""		3504104	1					
ANR	3504613	Argument	"""UsedCount"""		3504104	0					
ANR	3504614	PrimaryExpression	"""UsedCount"""		3504104	0					
ANR	3504615	Argument	used_count		3504104	1					
ANR	3504616	Identifier	used_count		3504104	0					
ANR	3504617	IfStatement	if ( updates )		3504104	17					
ANR	3504618	Condition	updates	795:5:22682:22688	3504104	0	True				
ANR	3504619	Identifier	updates		3504104	0					
ANR	3504620	CompoundStatement		101:15:3162:3162	3504104	1					
ANR	3504621	IfStatement	"if ( ! UpdateLeasesAd ( resource_name , updates ) )"		3504104	0					
ANR	3504622	Condition	"! UpdateLeasesAd ( resource_name , updates )"	796:7:22701:22741	3504104	0	True				
ANR	3504623	UnaryOperationExpression	"! UpdateLeasesAd ( resource_name , updates )"		3504104	0					
ANR	3504624	UnaryOperator	!		3504104	0					
ANR	3504625	CallExpression	"UpdateLeasesAd ( resource_name , updates )"		3504104	1					
ANR	3504626	Callee	UpdateLeasesAd		3504104	0					
ANR	3504627	Identifier	UpdateLeasesAd		3504104	0					
ANR	3504628	ArgumentList	resource_name		3504104	1					
ANR	3504629	Argument	resource_name		3504104	0					
ANR	3504630	Identifier	resource_name		3504104	0					
ANR	3504631	Argument	updates		3504104	1					
ANR	3504632	Identifier	updates		3504104	0					
ANR	3504633	CompoundStatement		102:51:3215:3215	3504104	1					
ANR	3504634	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to update leases ad\\n"" )"	797:3:22750:22801	3504104	0	True				
ANR	3504635	CallExpression	"dprintf ( D_ALWAYS , ""Failed to update leases ad\\n"" )"		3504104	0					
ANR	3504636	Callee	dprintf		3504104	0					
ANR	3504637	Identifier	dprintf		3504104	0					
ANR	3504638	ArgumentList	D_ALWAYS		3504104	1					
ANR	3504639	Argument	D_ALWAYS		3504104	0					
ANR	3504640	Identifier	D_ALWAYS		3504104	0					
ANR	3504641	Argument	"""Failed to update leases ad\\n"""		3504104	1					
ANR	3504642	PrimaryExpression	"""Failed to update leases ad\\n"""		3504104	0					
ANR	3504643	ExpressionStatement	"new_res_ad -> InsertAttr ( ""_LeasesUsed"" , used_count )"	800:1:22811:22862	3504104	18	True				
ANR	3504644	CallExpression	"new_res_ad -> InsertAttr ( ""_LeasesUsed"" , used_count )"		3504104	0					
ANR	3504645	Callee	new_res_ad -> InsertAttr		3504104	0					
ANR	3504646	PtrMemberAccess	new_res_ad -> InsertAttr		3504104	0					
ANR	3504647	Identifier	new_res_ad		3504104	0					
ANR	3504648	Identifier	InsertAttr		3504104	1					
ANR	3504649	ArgumentList	"""_LeasesUsed"""		3504104	1					
ANR	3504650	Argument	"""_LeasesUsed"""		3504104	0					
ANR	3504651	PrimaryExpression	"""_LeasesUsed"""		3504104	0					
ANR	3504652	Argument	used_count		3504104	1					
ANR	3504653	Identifier	used_count		3504104	0					
ANR	3504654	ExpressionStatement	"new_res_ad -> InsertAttr ( m_view_key , m_resources_view )"	801:1:22865:22919	3504104	19	True				
ANR	3504655	CallExpression	"new_res_ad -> InsertAttr ( m_view_key , m_resources_view )"		3504104	0					
ANR	3504656	Callee	new_res_ad -> InsertAttr		3504104	0					
ANR	3504657	PtrMemberAccess	new_res_ad -> InsertAttr		3504104	0					
ANR	3504658	Identifier	new_res_ad		3504104	0					
ANR	3504659	Identifier	InsertAttr		3504104	1					
ANR	3504660	ArgumentList	m_view_key		3504104	1					
ANR	3504661	Argument	m_view_key		3504104	0					
ANR	3504662	Identifier	m_view_key		3504104	0					
ANR	3504663	Argument	m_resources_view		3504104	1					
ANR	3504664	Identifier	m_resources_view		3504104	0					
ANR	3504665	ExpressionStatement	"new_res_ad -> InsertAttr ( ""_Expired"" , false )"	802:1:22922:22965	3504104	20	True				
ANR	3504666	CallExpression	"new_res_ad -> InsertAttr ( ""_Expired"" , false )"		3504104	0					
ANR	3504667	Callee	new_res_ad -> InsertAttr		3504104	0					
ANR	3504668	PtrMemberAccess	new_res_ad -> InsertAttr		3504104	0					
ANR	3504669	Identifier	new_res_ad		3504104	0					
ANR	3504670	Identifier	InsertAttr		3504104	1					
ANR	3504671	ArgumentList	"""_Expired"""		3504104	1					
ANR	3504672	Argument	"""_Expired"""		3504104	0					
ANR	3504673	PrimaryExpression	"""_Expired"""		3504104	0					
ANR	3504674	Argument	false		3504104	1					
ANR	3504675	Identifier	false		3504104	0					
ANR	3504676	IfStatement	if ( m_enable_ad_debug )		3504104	21					
ANR	3504677	Condition	m_enable_ad_debug	804:6:22974:22990	3504104	0	True				
ANR	3504678	Identifier	m_enable_ad_debug		3504104	0					
ANR	3504679	CompoundStatement		113:2:3495:3515	3504104	1					
ANR	3504680	IdentifierDeclStatement	classad :: PrettyPrint u ;	806:2:22999:23021	3504104	0	True				
ANR	3504681	IdentifierDecl	u		3504104	0					
ANR	3504682	IdentifierDeclType	classad :: PrettyPrint		3504104	0					
ANR	3504683	Identifier	u		3504104	1					
ANR	3504684	IdentifierDeclStatement	std :: string adbuffer ;	807:2:23025:23045	3504104	1	True				
ANR	3504685	IdentifierDecl	adbuffer		3504104	0					
ANR	3504686	IdentifierDeclType	std :: string		3504104	0					
ANR	3504687	Identifier	adbuffer		3504104	1					
ANR	3504688	ExpressionStatement	"u . Unparse ( adbuffer , new_res_ad )"	808:2:23049:23082	3504104	2	True				
ANR	3504689	CallExpression	"u . Unparse ( adbuffer , new_res_ad )"		3504104	0					
ANR	3504690	Callee	u . Unparse		3504104	0					
ANR	3504691	MemberAccess	u . Unparse		3504104	0					
ANR	3504692	Identifier	u		3504104	0					
ANR	3504693	Identifier	Unparse		3504104	1					
ANR	3504694	ArgumentList	adbuffer		3504104	1					
ANR	3504695	Argument	adbuffer		3504104	0					
ANR	3504696	Identifier	adbuffer		3504104	0					
ANR	3504697	Argument	new_res_ad		3504104	1					
ANR	3504698	Identifier	new_res_ad		3504104	0					
ANR	3504699	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""ResourceAd=%s\\n"" , adbuffer . c_str ( ) )"	809:2:23086:23145	3504104	3	True				
ANR	3504700	CallExpression	"dprintf ( D_FULLDEBUG , ""ResourceAd=%s\\n"" , adbuffer . c_str ( ) )"		3504104	0					
ANR	3504701	Callee	dprintf		3504104	0					
ANR	3504702	Identifier	dprintf		3504104	0					
ANR	3504703	ArgumentList	D_FULLDEBUG		3504104	1					
ANR	3504704	Argument	D_FULLDEBUG		3504104	0					
ANR	3504705	Identifier	D_FULLDEBUG		3504104	0					
ANR	3504706	Argument	"""ResourceAd=%s\\n"""		3504104	1					
ANR	3504707	PrimaryExpression	"""ResourceAd=%s\\n"""		3504104	0					
ANR	3504708	Argument	adbuffer . c_str ( )		3504104	2					
ANR	3504709	CallExpression	adbuffer . c_str ( )		3504104	0					
ANR	3504710	Callee	adbuffer . c_str		3504104	0					
ANR	3504711	MemberAccess	adbuffer . c_str		3504104	0					
ANR	3504712	Identifier	adbuffer		3504104	0					
ANR	3504713	Identifier	c_str		3504104	1					
ANR	3504714	ArgumentList			3504104	1					
ANR	3504715	IfStatement	"if ( ! InsertResourceAd ( resource_name , new_res_ad ) )"		3504104	22					
ANR	3504716	Condition	"! InsertResourceAd ( resource_name , new_res_ad )"	813:6:23230:23275	3504104	0	True				
ANR	3504717	UnaryOperationExpression	"! InsertResourceAd ( resource_name , new_res_ad )"		3504104	0					
ANR	3504718	UnaryOperator	!		3504104	0					
ANR	3504719	CallExpression	"InsertResourceAd ( resource_name , new_res_ad )"		3504104	1					
ANR	3504720	Callee	InsertResourceAd		3504104	0					
ANR	3504721	Identifier	InsertResourceAd		3504104	0					
ANR	3504722	ArgumentList	resource_name		3504104	1					
ANR	3504723	Argument	resource_name		3504104	0					
ANR	3504724	Identifier	resource_name		3504104	0					
ANR	3504725	Argument	new_res_ad		3504104	1					
ANR	3504726	Identifier	new_res_ad		3504104	0					
ANR	3504727	CompoundStatement		119:55:3749:3749	3504104	1					
ANR	3504728	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to insert resource ad for %s\\n"" , resource_name . c_str ( ) )"	814:2:23283:23376	3504104	0	True				
ANR	3504729	CallExpression	"dprintf ( D_ALWAYS , ""Failed to insert resource ad for %s\\n"" , resource_name . c_str ( ) )"		3504104	0					
ANR	3504730	Callee	dprintf		3504104	0					
ANR	3504731	Identifier	dprintf		3504104	0					
ANR	3504732	ArgumentList	D_ALWAYS		3504104	1					
ANR	3504733	Argument	D_ALWAYS		3504104	0					
ANR	3504734	Identifier	D_ALWAYS		3504104	0					
ANR	3504735	Argument	"""Failed to insert resource ad for %s\\n"""		3504104	1					
ANR	3504736	PrimaryExpression	"""Failed to insert resource ad for %s\\n"""		3504104	0					
ANR	3504737	Argument	resource_name . c_str ( )		3504104	2					
ANR	3504738	CallExpression	resource_name . c_str ( )		3504104	0					
ANR	3504739	Callee	resource_name . c_str		3504104	0					
ANR	3504740	MemberAccess	resource_name . c_str		3504104	0					
ANR	3504741	Identifier	resource_name		3504104	0					
ANR	3504742	Identifier	c_str		3504104	1					
ANR	3504743	ArgumentList			3504104	1					
ANR	3504744	ReturnStatement	"return SetLeaseStates ( resource_name , max_leases , * leases_ad , lease_count ) ;"	820:1:23410:23494	3504104	23	True				
ANR	3504745	CallExpression	"SetLeaseStates ( resource_name , max_leases , * leases_ad , lease_count )"		3504104	0					
ANR	3504746	Callee	SetLeaseStates		3504104	0					
ANR	3504747	Identifier	SetLeaseStates		3504104	0					
ANR	3504748	ArgumentList	resource_name		3504104	1					
ANR	3504749	Argument	resource_name		3504104	0					
ANR	3504750	Identifier	resource_name		3504104	0					
ANR	3504751	Argument	max_leases		3504104	1					
ANR	3504752	Identifier	max_leases		3504104	0					
ANR	3504753	Argument	* leases_ad		3504104	2					
ANR	3504754	UnaryOperationExpression	* leases_ad		3504104	0					
ANR	3504755	UnaryOperator	*		3504104	0					
ANR	3504756	Identifier	leases_ad		3504104	1					
ANR	3504757	Argument	lease_count		3504104	3					
ANR	3504758	Identifier	lease_count		3504104	0					
ANR	3504759	ReturnType	int		3504104	1					
ANR	3504760	Identifier	LeaseManagerResources :: AddResource		3504104	2					
ANR	3504761	ParameterList	classad :: ClassAd * new_res_ad		3504104	3					
ANR	3504762	Parameter	classad :: ClassAd * new_res_ad	694:36:19498:19525	3504104	0	True				
ANR	3504763	ParameterType	classad :: ClassAd *		3504104	0					
ANR	3504764	Identifier	new_res_ad		3504104	1					
ANR	3504765	CFGEntryNode	ENTRY		3504104		True				
ANR	3504766	CFGExitNode	EXIT		3504104		True				
ANR	3504767	Symbol	m_resources_view		3504104						
ANR	3504768	Symbol	InsertResourceAd		3504104						
ANR	3504769	Symbol	new_stime		3504104						
ANR	3504770	Symbol	old_seq		3504104						
ANR	3504771	Symbol	new_res_ad -> Insert		3504104						
ANR	3504772	Symbol	resource_name . c_str		3504104						
ANR	3504773	Symbol	GetResourceAd		3504104						
ANR	3504774	Symbol	GetLeasesAd		3504104						
ANR	3504775	Symbol	m_view_key		3504104						
ANR	3504776	Symbol	NULL		3504104						
ANR	3504777	Symbol	new_res_ad -> Lookup		3504104						
ANR	3504778	Symbol	ATTR_UPDATE_SEQUENCE_NUMBER		3504104						
ANR	3504779	Symbol	m_stats . m_num_resources		3504104						
ANR	3504780	Symbol	D_FULLDEBUG		3504104						
ANR	3504781	Symbol	max_leases		3504104						
ANR	3504782	Symbol	req_expr		3504104						
ANR	3504783	Symbol	old_res_ad -> EvaluateAttrInt		3504104						
ANR	3504784	Symbol	expr_str		3504104						
ANR	3504785	Symbol	parser		3504104						
ANR	3504786	Symbol	true		3504104						
ANR	3504787	Symbol	ATTR_DAEMON_START_TIME		3504104						
ANR	3504788	Symbol	adbuffer . c_str		3504104						
ANR	3504789	Symbol	m_leases_view		3504104						
ANR	3504790	Symbol	leases_ad		3504104						
ANR	3504791	Symbol	adbuffer		3504104						
ANR	3504792	Symbol	new_seq		3504104						
ANR	3504793	Symbol	m_enable_ad_debug		3504104						
ANR	3504794	Symbol	new_res_ad -> EvaluateAttrString		3504104						
ANR	3504795	Symbol	lease_count		3504104						
ANR	3504796	Symbol	updates		3504104						
ANR	3504797	Symbol	SetLeaseStates		3504104						
ANR	3504798	Symbol	leases_ad -> EvaluateAttrInt		3504104						
ANR	3504799	Symbol	old_res_ad		3504104						
ANR	3504800	Symbol	* old_res_ad		3504104						
ANR	3504801	Symbol	used_count		3504104						
ANR	3504802	Symbol	new_res_ad		3504104						
ANR	3504803	Symbol	InsertLeasesAd		3504104						
ANR	3504804	Symbol	expr_str . c_str		3504104						
ANR	3504805	Symbol	m_stats		3504104						
ANR	3504806	Symbol	* new_res_ad		3504104						
ANR	3504807	Symbol	parser . ParseExpression		3504104						
ANR	3504808	Symbol	UpdateLeasesAd		3504104						
ANR	3504809	Symbol	D_ALWAYS		3504104						
ANR	3504810	Symbol	false		3504104						
ANR	3504811	Symbol	old_stime		3504104						
ANR	3504812	Symbol	* leases_ad		3504104						
ANR	3504813	Symbol	u		3504104						
ANR	3504814	Symbol	new_res_ad -> EvaluateAttrInt		3504104						
ANR	3504815	Symbol	resource_name		3504104						
ANR	3504816	Function	LeaseManagerResources :: SetLeaseStates	825:0:23500:26951							
ANR	3504817	FunctionDef	"LeaseManagerResources :: SetLeaseStates (const string & resource_name , int max_resource_leases , classad :: ClassAd & leases_ad , int & lease_count)"		3504816	0					
ANR	3504818	CompoundStatement		831:0:23658:26951	3504816	0					
ANR	3504819	IfStatement	if ( lease_count == max_resource_leases )		3504816	0					
ANR	3504820	Condition	lease_count == max_resource_leases	834:6:23712:23745	3504816	0	True				
ANR	3504821	EqualityExpression	lease_count == max_resource_leases		3504816	0		==			
ANR	3504822	Identifier	lease_count		3504816	0					
ANR	3504823	Identifier	max_resource_leases		3504816	1					
ANR	3504824	CompoundStatement		4:43:90:90	3504816	1					
ANR	3504825	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""SetLeaseStates: Lease count unchanged\\n"" )"	835:2:23753:23818	3504816	0	True				
ANR	3504826	CallExpression	"dprintf ( D_FULLDEBUG , ""SetLeaseStates: Lease count unchanged\\n"" )"		3504816	0					
ANR	3504827	Callee	dprintf		3504816	0					
ANR	3504828	Identifier	dprintf		3504816	0					
ANR	3504829	ArgumentList	D_FULLDEBUG		3504816	1					
ANR	3504830	Argument	D_FULLDEBUG		3504816	0					
ANR	3504831	Identifier	D_FULLDEBUG		3504816	0					
ANR	3504832	Argument	"""SetLeaseStates: Lease count unchanged\\n"""		3504816	1					
ANR	3504833	PrimaryExpression	"""SetLeaseStates: Lease count unchanged\\n"""		3504816	0					
ANR	3504834	ReturnStatement	return 0 ;	836:2:23822:23830	3504816	1	True				
ANR	3504835	PrimaryExpression	0		3504816	0					
ANR	3504836	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""SetLeaseStates: Lease count changed; udating\\n"" )"	840:1:23886:23958	3504816	1	True				
ANR	3504837	CallExpression	"dprintf ( D_FULLDEBUG , ""SetLeaseStates: Lease count changed; udating\\n"" )"		3504816	0					
ANR	3504838	Callee	dprintf		3504816	0					
ANR	3504839	Identifier	dprintf		3504816	0					
ANR	3504840	ArgumentList	D_FULLDEBUG		3504816	1					
ANR	3504841	Argument	D_FULLDEBUG		3504816	0					
ANR	3504842	Identifier	D_FULLDEBUG		3504816	0					
ANR	3504843	Argument	"""SetLeaseStates: Lease count changed; udating\\n"""		3504816	1					
ANR	3504844	PrimaryExpression	"""SetLeaseStates: Lease count changed; udating\\n"""		3504816	0					
ANR	3504845	IdentifierDeclStatement	DebugTimerDprintf timer ;	841:1:23961:23984	3504816	2	True				
ANR	3504846	IdentifierDecl	timer		3504816	0					
ANR	3504847	IdentifierDeclType	DebugTimerDprintf		3504816	0					
ANR	3504848	Identifier	timer		3504816	1					
ANR	3504849	IdentifierDeclStatement	classad :: ExprList * lease_states ;	844:1:24013:24044	3504816	3	True				
ANR	3504850	IdentifierDecl	* lease_states		3504816	0					
ANR	3504851	IdentifierDeclType	classad :: ExprList *		3504816	0					
ANR	3504852	Identifier	lease_states		3504816	1					
ANR	3504853	IfStatement	"if ( ! leases_ad . EvaluateAttrList ( ""States"" , lease_states ) )"		3504816	4					
ANR	3504854	Condition	"! leases_ad . EvaluateAttrList ( ""States"" , lease_states )"	845:6:24052:24104	3504816	0	True				
ANR	3504855	UnaryOperationExpression	"! leases_ad . EvaluateAttrList ( ""States"" , lease_states )"		3504816	0					
ANR	3504856	UnaryOperator	!		3504816	0					
ANR	3504857	CallExpression	"leases_ad . EvaluateAttrList ( ""States"" , lease_states )"		3504816	1					
ANR	3504858	Callee	leases_ad . EvaluateAttrList		3504816	0					
ANR	3504859	MemberAccess	leases_ad . EvaluateAttrList		3504816	0					
ANR	3504860	Identifier	leases_ad		3504816	0					
ANR	3504861	Identifier	EvaluateAttrList		3504816	1					
ANR	3504862	ArgumentList	"""States"""		3504816	1					
ANR	3504863	Argument	"""States"""		3504816	0					
ANR	3504864	PrimaryExpression	"""States"""		3504816	0					
ANR	3504865	Argument	lease_states		3504816	1					
ANR	3504866	Identifier	lease_states		3504816	0					
ANR	3504867	CompoundStatement		15:62:449:449	3504816	1					
ANR	3504868	ExpressionStatement	lease_states = new classad :: ExprList ( )	846:2:24112:24151	3504816	0	True				
ANR	3504869	AssignmentExpression	lease_states = new classad :: ExprList ( )		3504816	0		=			
ANR	3504870	Identifier	lease_states		3504816	0					
ANR	3504871	UnaryExpression	new classad :: ExprList ( )		3504816	1					
ANR	3504872	ExpressionStatement	"leases_ad . Insert ( ""States"" , lease_states )"	847:2:24155:24197	3504816	1	True				
ANR	3504873	CallExpression	"leases_ad . Insert ( ""States"" , lease_states )"		3504816	0					
ANR	3504874	Callee	leases_ad . Insert		3504816	0					
ANR	3504875	MemberAccess	leases_ad . Insert		3504816	0					
ANR	3504876	Identifier	leases_ad		3504816	0					
ANR	3504877	Identifier	Insert		3504816	1					
ANR	3504878	ArgumentList	"""States"""		3504816	1					
ANR	3504879	Argument	"""States"""		3504816	0					
ANR	3504880	PrimaryExpression	"""States"""		3504816	0					
ANR	3504881	Argument	lease_states		3504816	1					
ANR	3504882	Identifier	lease_states		3504816	0					
ANR	3504883	IdentifierDeclStatement	int num_leases_added = 0 ;	851:1:24238:24263	3504816	5	True				
ANR	3504884	IdentifierDecl	num_leases_added = 0		3504816	0					
ANR	3504885	IdentifierDeclType	int		3504816	0					
ANR	3504886	Identifier	num_leases_added		3504816	1					
ANR	3504887	AssignmentExpression	num_leases_added = 0		3504816	2		=			
ANR	3504888	Identifier	num_leases_added		3504816	0					
ANR	3504889	PrimaryExpression	0		3504816	1					
ANR	3504890	WhileStatement	while ( lease_states -> size ( ) < max_resource_leases )		3504816	6					
ANR	3504891	Condition	lease_states -> size ( ) < max_resource_leases	852:8:24273:24314	3504816	0	True				
ANR	3504892	RelationalExpression	lease_states -> size ( ) < max_resource_leases		3504816	0		<			
ANR	3504893	CallExpression	lease_states -> size ( )		3504816	0					
ANR	3504894	Callee	lease_states -> size		3504816	0					
ANR	3504895	PtrMemberAccess	lease_states -> size		3504816	0					
ANR	3504896	Identifier	lease_states		3504816	0					
ANR	3504897	Identifier	size		3504816	1					
ANR	3504898	ArgumentList			3504816	1					
ANR	3504899	Identifier	max_resource_leases		3504816	1					
ANR	3504900	CompoundStatement		30:2:857:908	3504816	1					
ANR	3504901	IdentifierDeclStatement	int lease_number = lease_states -> size ( ) + 1 ;	853:2:24322:24367	3504816	0	True				
ANR	3504902	IdentifierDecl	lease_number = lease_states -> size ( ) + 1		3504816	0					
ANR	3504903	IdentifierDeclType	int		3504816	0					
ANR	3504904	Identifier	lease_number		3504816	1					
ANR	3504905	AssignmentExpression	lease_number = lease_states -> size ( ) + 1		3504816	2		=			
ANR	3504906	Identifier	lease_number		3504816	0					
ANR	3504907	AdditiveExpression	lease_states -> size ( ) + 1		3504816	1		+			
ANR	3504908	CallExpression	lease_states -> size ( )		3504816	0					
ANR	3504909	Callee	lease_states -> size		3504816	0					
ANR	3504910	PtrMemberAccess	lease_states -> size		3504816	0					
ANR	3504911	Identifier	lease_states		3504816	0					
ANR	3504912	Identifier	size		3504816	1					
ANR	3504913	ArgumentList			3504816	1					
ANR	3504914	PrimaryExpression	1		3504816	1					
ANR	3504915	IdentifierDeclStatement	classad :: ClassAd * lease_ad = new classad :: ClassAd ( ) ;	856:2:24399:24451	3504816	1	True				
ANR	3504916	IdentifierDecl	* lease_ad = new classad :: ClassAd ( )		3504816	0					
ANR	3504917	IdentifierDeclType	classad :: ClassAd *		3504816	0					
ANR	3504918	Identifier	lease_ad		3504816	1					
ANR	3504919	AssignmentExpression	* lease_ad = new classad :: ClassAd ( )		3504816	2		=			
ANR	3504920	Identifier	lease_ad		3504816	0					
ANR	3504921	UnaryExpression	new classad :: ClassAd ( )		3504816	1					
ANR	3504922	ExpressionStatement	lease_states -> push_back ( lease_ad )	857:2:24455:24490	3504816	2	True				
ANR	3504923	CallExpression	lease_states -> push_back ( lease_ad )		3504816	0					
ANR	3504924	Callee	lease_states -> push_back		3504816	0					
ANR	3504925	PtrMemberAccess	lease_states -> push_back		3504816	0					
ANR	3504926	Identifier	lease_states		3504816	0					
ANR	3504927	Identifier	push_back		3504816	1					
ANR	3504928	ArgumentList	lease_ad		3504816	1					
ANR	3504929	Argument	lease_ad		3504816	0					
ANR	3504930	Identifier	lease_ad		3504816	0					
ANR	3504931	IdentifierDeclStatement	classad :: ClassAd * updates = new classad :: ClassAd ( ) ;	860:2:24516:24567	3504816	3	True				
ANR	3504932	IdentifierDecl	* updates = new classad :: ClassAd ( )		3504816	0					
ANR	3504933	IdentifierDeclType	classad :: ClassAd *		3504816	0					
ANR	3504934	Identifier	updates		3504816	1					
ANR	3504935	AssignmentExpression	* updates = new classad :: ClassAd ( )		3504816	2		=			
ANR	3504936	Identifier	updates		3504816	0					
ANR	3504937	UnaryExpression	new classad :: ClassAd ( )		3504816	1					
ANR	3504938	IfStatement	"if ( ! updates -> InsertAttr ( ""LeaseNumber"" , lease_number ) || ! updates -> InsertAttr ( ""LeaseUsed"" , false ) || ! updates -> InsertAttr ( ""LeaseValid"" , true ) || ! updates -> InsertAttr ( ""ResourceName"" , resource_name ) )"		3504816	4					
ANR	3504939	Condition	"! updates -> InsertAttr ( ""LeaseNumber"" , lease_number ) || ! updates -> InsertAttr ( ""LeaseUsed"" , false ) || ! updates -> InsertAttr ( ""LeaseValid"" , true ) || ! updates -> InsertAttr ( ""ResourceName"" , resource_name )"	861:7:24576:24787	3504816	0	True				
ANR	3504940	OrExpression	"! updates -> InsertAttr ( ""LeaseNumber"" , lease_number ) || ! updates -> InsertAttr ( ""LeaseUsed"" , false ) || ! updates -> InsertAttr ( ""LeaseValid"" , true ) || ! updates -> InsertAttr ( ""ResourceName"" , resource_name )"		3504816	0		||			
ANR	3504941	UnaryOperationExpression	"! updates -> InsertAttr ( ""LeaseNumber"" , lease_number )"		3504816	0					
ANR	3504942	UnaryOperator	!		3504816	0					
ANR	3504943	CallExpression	"updates -> InsertAttr ( ""LeaseNumber"" , lease_number )"		3504816	1					
ANR	3504944	Callee	updates -> InsertAttr		3504816	0					
ANR	3504945	PtrMemberAccess	updates -> InsertAttr		3504816	0					
ANR	3504946	Identifier	updates		3504816	0					
ANR	3504947	Identifier	InsertAttr		3504816	1					
ANR	3504948	ArgumentList	"""LeaseNumber"""		3504816	1					
ANR	3504949	Argument	"""LeaseNumber"""		3504816	0					
ANR	3504950	PrimaryExpression	"""LeaseNumber"""		3504816	0					
ANR	3504951	Argument	lease_number		3504816	1					
ANR	3504952	Identifier	lease_number		3504816	0					
ANR	3504953	OrExpression	"! updates -> InsertAttr ( ""LeaseUsed"" , false ) || ! updates -> InsertAttr ( ""LeaseValid"" , true ) || ! updates -> InsertAttr ( ""ResourceName"" , resource_name )"		3504816	1		||			
ANR	3504954	UnaryOperationExpression	"! updates -> InsertAttr ( ""LeaseUsed"" , false )"		3504816	0					
ANR	3504955	UnaryOperator	!		3504816	0					
ANR	3504956	CallExpression	"updates -> InsertAttr ( ""LeaseUsed"" , false )"		3504816	1					
ANR	3504957	Callee	updates -> InsertAttr		3504816	0					
ANR	3504958	PtrMemberAccess	updates -> InsertAttr		3504816	0					
ANR	3504959	Identifier	updates		3504816	0					
ANR	3504960	Identifier	InsertAttr		3504816	1					
ANR	3504961	ArgumentList	"""LeaseUsed"""		3504816	1					
ANR	3504962	Argument	"""LeaseUsed"""		3504816	0					
ANR	3504963	PrimaryExpression	"""LeaseUsed"""		3504816	0					
ANR	3504964	Argument	false		3504816	1					
ANR	3504965	Identifier	false		3504816	0					
ANR	3504966	OrExpression	"! updates -> InsertAttr ( ""LeaseValid"" , true ) || ! updates -> InsertAttr ( ""ResourceName"" , resource_name )"		3504816	1		||			
ANR	3504967	UnaryOperationExpression	"! updates -> InsertAttr ( ""LeaseValid"" , true )"		3504816	0					
ANR	3504968	UnaryOperator	!		3504816	0					
ANR	3504969	CallExpression	"updates -> InsertAttr ( ""LeaseValid"" , true )"		3504816	1					
ANR	3504970	Callee	updates -> InsertAttr		3504816	0					
ANR	3504971	PtrMemberAccess	updates -> InsertAttr		3504816	0					
ANR	3504972	Identifier	updates		3504816	0					
ANR	3504973	Identifier	InsertAttr		3504816	1					
ANR	3504974	ArgumentList	"""LeaseValid"""		3504816	1					
ANR	3504975	Argument	"""LeaseValid"""		3504816	0					
ANR	3504976	PrimaryExpression	"""LeaseValid"""		3504816	0					
ANR	3504977	Argument	true		3504816	1					
ANR	3504978	Identifier	true		3504816	0					
ANR	3504979	UnaryOperationExpression	"! updates -> InsertAttr ( ""ResourceName"" , resource_name )"		3504816	1					
ANR	3504980	UnaryOperator	!		3504816	0					
ANR	3504981	CallExpression	"updates -> InsertAttr ( ""ResourceName"" , resource_name )"		3504816	1					
ANR	3504982	Callee	updates -> InsertAttr		3504816	0					
ANR	3504983	PtrMemberAccess	updates -> InsertAttr		3504816	0					
ANR	3504984	Identifier	updates		3504816	0					
ANR	3504985	Identifier	InsertAttr		3504816	1					
ANR	3504986	ArgumentList	"""ResourceName"""		3504816	1					
ANR	3504987	Argument	"""ResourceName"""		3504816	0					
ANR	3504988	PrimaryExpression	"""ResourceName"""		3504816	0					
ANR	3504989	Argument	resource_name		3504816	1					
ANR	3504990	Identifier	resource_name		3504816	0					
ANR	3504991	CompoundStatement		34:60:1132:1132	3504816	1					
ANR	3504992	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to insert attributes into lease ad %d for %s\\n"" , lease_number , resource_name . c_str ( ) )"	865:3:24796:24921	3504816	0	True				
ANR	3504993	CallExpression	"dprintf ( D_ALWAYS , ""Failed to insert attributes into lease ad %d for %s\\n"" , lease_number , resource_name . c_str ( ) )"		3504816	0					
ANR	3504994	Callee	dprintf		3504816	0					
ANR	3504995	Identifier	dprintf		3504816	0					
ANR	3504996	ArgumentList	D_ALWAYS		3504816	1					
ANR	3504997	Argument	D_ALWAYS		3504816	0					
ANR	3504998	Identifier	D_ALWAYS		3504816	0					
ANR	3504999	Argument	"""Failed to insert attributes into lease ad %d for %s\\n"""		3504816	1					
ANR	3505000	PrimaryExpression	"""Failed to insert attributes into lease ad %d for %s\\n"""		3504816	0					
ANR	3505001	Argument	lease_number		3504816	2					
ANR	3505002	Identifier	lease_number		3504816	0					
ANR	3505003	Argument	resource_name . c_str ( )		3504816	3					
ANR	3505004	CallExpression	resource_name . c_str ( )		3504816	0					
ANR	3505005	Callee	resource_name . c_str		3504816	0					
ANR	3505006	MemberAccess	resource_name . c_str		3504816	0					
ANR	3505007	Identifier	resource_name		3504816	0					
ANR	3505008	Identifier	c_str		3504816	1					
ANR	3505009	ArgumentList			3504816	1					
ANR	3505010	IfStatement	"if ( ! UpdateLeaseAd ( resource_name , lease_number , updates ) )"		3504816	5					
ANR	3505011	Condition	"! UpdateLeaseAd ( resource_name , lease_number , updates )"	869:7:24934:24987	3504816	0	True				
ANR	3505012	UnaryOperationExpression	"! UpdateLeaseAd ( resource_name , lease_number , updates )"		3504816	0					
ANR	3505013	UnaryOperator	!		3504816	0					
ANR	3505014	CallExpression	"UpdateLeaseAd ( resource_name , lease_number , updates )"		3504816	1					
ANR	3505015	Callee	UpdateLeaseAd		3504816	0					
ANR	3505016	Identifier	UpdateLeaseAd		3504816	0					
ANR	3505017	ArgumentList	resource_name		3504816	1					
ANR	3505018	Argument	resource_name		3504816	0					
ANR	3505019	Identifier	resource_name		3504816	0					
ANR	3505020	Argument	lease_number		3504816	1					
ANR	3505021	Identifier	lease_number		3504816	0					
ANR	3505022	Argument	updates		3504816	2					
ANR	3505023	Identifier	updates		3504816	0					
ANR	3505024	CompoundStatement		39:64:1332:1332	3504816	1					
ANR	3505025	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to update lease ad %d for %s\\n"" , lease_number , resource_name . c_str ( ) )"	870:3:24996:25105	3504816	0	True				
ANR	3505026	CallExpression	"dprintf ( D_ALWAYS , ""Failed to update lease ad %d for %s\\n"" , lease_number , resource_name . c_str ( ) )"		3504816	0					
ANR	3505027	Callee	dprintf		3504816	0					
ANR	3505028	Identifier	dprintf		3504816	0					
ANR	3505029	ArgumentList	D_ALWAYS		3504816	1					
ANR	3505030	Argument	D_ALWAYS		3504816	0					
ANR	3505031	Identifier	D_ALWAYS		3504816	0					
ANR	3505032	Argument	"""Failed to update lease ad %d for %s\\n"""		3504816	1					
ANR	3505033	PrimaryExpression	"""Failed to update lease ad %d for %s\\n"""		3504816	0					
ANR	3505034	Argument	lease_number		3504816	2					
ANR	3505035	Identifier	lease_number		3504816	0					
ANR	3505036	Argument	resource_name . c_str ( )		3504816	3					
ANR	3505037	CallExpression	resource_name . c_str ( )		3504816	0					
ANR	3505038	Callee	resource_name . c_str		3504816	0					
ANR	3505039	MemberAccess	resource_name . c_str		3504816	0					
ANR	3505040	Identifier	resource_name		3504816	0					
ANR	3505041	Identifier	c_str		3504816	1					
ANR	3505042	ArgumentList			3504816	1					
ANR	3505043	ExpressionStatement	num_leases_added ++	876:2:25138:25156	3504816	6	True				
ANR	3505044	PostIncDecOperationExpression	num_leases_added ++		3504816	0					
ANR	3505045	Identifier	num_leases_added		3504816	0					
ANR	3505046	IncDec	++		3504816	1					
ANR	3505047	IdentifierDeclStatement	vector < classad :: ExprTree * > :: iterator iter ;	880:1:25198:25240	3504816	7	True				
ANR	3505048	IdentifierDecl	iter		3504816	0					
ANR	3505049	IdentifierDeclType	vector < classad :: ExprTree * > :: iterator		3504816	0					
ANR	3505050	Identifier	iter		3504816	1					
ANR	3505051	ForStatement	for ( iter = lease_states -> begin ( ) ; iter != lease_states -> end ( ) ; iter ++ )		3504816	8					
ANR	3505052	ForInit	iter = lease_states -> begin ( ) ;	881:7:25249:25278	3504816	0	True				
ANR	3505053	AssignmentExpression	iter = lease_states -> begin ( )		3504816	0		=			
ANR	3505054	Identifier	iter		3504816	0					
ANR	3505055	CallExpression	lease_states -> begin ( )		3504816	1					
ANR	3505056	Callee	lease_states -> begin		3504816	0					
ANR	3505057	PtrMemberAccess	lease_states -> begin		3504816	0					
ANR	3505058	Identifier	lease_states		3504816	0					
ANR	3505059	Identifier	begin		3504816	1					
ANR	3505060	ArgumentList			3504816	1					
ANR	3505061	Condition	iter != lease_states -> end ( )	882:4:25284:25311	3504816	1	True				
ANR	3505062	EqualityExpression	iter != lease_states -> end ( )		3504816	0		!=			
ANR	3505063	Identifier	iter		3504816	0					
ANR	3505064	CallExpression	lease_states -> end ( )		3504816	1					
ANR	3505065	Callee	lease_states -> end		3504816	0					
ANR	3505066	PtrMemberAccess	lease_states -> end		3504816	0					
ANR	3505067	Identifier	lease_states		3504816	0					
ANR	3505068	Identifier	end		3504816	1					
ANR	3505069	ArgumentList			3504816	1					
ANR	3505070	PostIncDecOperationExpression	iter ++	883:4:25318:25323	3504816	2	True				
ANR	3505071	Identifier	iter		3504816	0					
ANR	3505072	IncDec	++		3504816	1					
ANR	3505073	CompoundStatement		69:2:2223:2275	3504816	3					
ANR	3505074	IdentifierDeclStatement	classad :: ExprTree * state_expr = * iter ;	884:2:25331:25368	3504816	0	True				
ANR	3505075	IdentifierDecl	* state_expr = * iter		3504816	0					
ANR	3505076	IdentifierDeclType	classad :: ExprTree *		3504816	0					
ANR	3505077	Identifier	state_expr		3504816	1					
ANR	3505078	AssignmentExpression	* state_expr = * iter		3504816	2		=			
ANR	3505079	Identifier	state_expr		3504816	0					
ANR	3505080	UnaryOperationExpression	* iter		3504816	1					
ANR	3505081	UnaryOperator	*		3504816	0					
ANR	3505082	Identifier	iter		3504816	1					
ANR	3505083	IfStatement	if ( state_expr -> GetKind ( ) != classad :: ExprTree :: CLASSAD_NODE )		3504816	1					
ANR	3505084	Condition	state_expr -> GetKind ( ) != classad :: ExprTree :: CLASSAD_NODE	885:7:25377:25432	3504816	0	True				
ANR	3505085	EqualityExpression	state_expr -> GetKind ( ) != classad :: ExprTree :: CLASSAD_NODE		3504816	0		!=			
ANR	3505086	CallExpression	state_expr -> GetKind ( )		3504816	0					
ANR	3505087	Callee	state_expr -> GetKind		3504816	0					
ANR	3505088	PtrMemberAccess	state_expr -> GetKind		3504816	0					
ANR	3505089	Identifier	state_expr		3504816	0					
ANR	3505090	Identifier	GetKind		3504816	1					
ANR	3505091	ArgumentList			3504816	1					
ANR	3505092	Identifier	classad :: ExprTree :: CLASSAD_NODE		3504816	1					
ANR	3505093	CompoundStatement		55:66:1777:1777	3504816	1					
ANR	3505094	ExpressionStatement	"dprintf ( D_ALWAYS , ""Leases states item isn't a ClassAd!\\n"" )"	886:3:25441:25501	3504816	0	True				
ANR	3505095	CallExpression	"dprintf ( D_ALWAYS , ""Leases states item isn't a ClassAd!\\n"" )"		3504816	0					
ANR	3505096	Callee	dprintf		3504816	0					
ANR	3505097	Identifier	dprintf		3504816	0					
ANR	3505098	ArgumentList	D_ALWAYS		3504816	1					
ANR	3505099	Argument	D_ALWAYS		3504816	0					
ANR	3505100	Identifier	D_ALWAYS		3504816	0					
ANR	3505101	Argument	"""Leases states item isn't a ClassAd!\\n"""		3504816	1					
ANR	3505102	PrimaryExpression	"""Leases states item isn't a ClassAd!\\n"""		3504816	0					
ANR	3505103	ContinueStatement	continue ;	887:3:25506:25514	3504816	1	True				
ANR	3505104	IdentifierDeclStatement	classad :: ClassAd * lease_ad = ( classad :: ClassAd * ) state_expr ;	889:2:25522:25582	3504816	2	True				
ANR	3505105	IdentifierDecl	* lease_ad = ( classad :: ClassAd * ) state_expr		3504816	0					
ANR	3505106	IdentifierDeclType	classad :: ClassAd *		3504816	0					
ANR	3505107	Identifier	lease_ad		3504816	1					
ANR	3505108	AssignmentExpression	* lease_ad = ( classad :: ClassAd * ) state_expr		3504816	2		=			
ANR	3505109	Identifier	lease_ad		3504816	0					
ANR	3505110	CastExpression	( classad :: ClassAd * ) state_expr		3504816	1					
ANR	3505111	CastTarget	classad :: ClassAd *		3504816	0					
ANR	3505112	Identifier	state_expr		3504816	1					
ANR	3505113	IdentifierDeclStatement	int lease_number ;	890:2:25586:25603	3504816	3	True				
ANR	3505114	IdentifierDecl	lease_number		3504816	0					
ANR	3505115	IdentifierDeclType	int		3504816	0					
ANR	3505116	Identifier	lease_number		3504816	1					
ANR	3505117	IdentifierDeclStatement	bool old_valid ;	891:2:25607:25621	3504816	4	True				
ANR	3505118	IdentifierDecl	old_valid		3504816	0					
ANR	3505119	IdentifierDeclType	bool		3504816	0					
ANR	3505120	Identifier	old_valid		3504816	1					
ANR	3505121	IfStatement	"if ( ! lease_ad -> EvaluateAttrInt ( ""LeaseNumber"" , lease_number ) || ! lease_ad -> EvaluateAttrBool ( ""LeaseValid"" , old_valid ) )"		3504816	5					
ANR	3505122	Condition	"! lease_ad -> EvaluateAttrInt ( ""LeaseNumber"" , lease_number ) || ! lease_ad -> EvaluateAttrBool ( ""LeaseValid"" , old_valid )"	892:7:25630:25749	3504816	0	True				
ANR	3505123	OrExpression	"! lease_ad -> EvaluateAttrInt ( ""LeaseNumber"" , lease_number ) || ! lease_ad -> EvaluateAttrBool ( ""LeaseValid"" , old_valid )"		3504816	0		||			
ANR	3505124	UnaryOperationExpression	"! lease_ad -> EvaluateAttrInt ( ""LeaseNumber"" , lease_number )"		3504816	0					
ANR	3505125	UnaryOperator	!		3504816	0					
ANR	3505126	CallExpression	"lease_ad -> EvaluateAttrInt ( ""LeaseNumber"" , lease_number )"		3504816	1					
ANR	3505127	Callee	lease_ad -> EvaluateAttrInt		3504816	0					
ANR	3505128	PtrMemberAccess	lease_ad -> EvaluateAttrInt		3504816	0					
ANR	3505129	Identifier	lease_ad		3504816	0					
ANR	3505130	Identifier	EvaluateAttrInt		3504816	1					
ANR	3505131	ArgumentList	"""LeaseNumber"""		3504816	1					
ANR	3505132	Argument	"""LeaseNumber"""		3504816	0					
ANR	3505133	PrimaryExpression	"""LeaseNumber"""		3504816	0					
ANR	3505134	Argument	lease_number		3504816	1					
ANR	3505135	Identifier	lease_number		3504816	0					
ANR	3505136	UnaryOperationExpression	"! lease_ad -> EvaluateAttrBool ( ""LeaseValid"" , old_valid )"		3504816	1					
ANR	3505137	UnaryOperator	!		3504816	0					
ANR	3505138	CallExpression	"lease_ad -> EvaluateAttrBool ( ""LeaseValid"" , old_valid )"		3504816	1					
ANR	3505139	Callee	lease_ad -> EvaluateAttrBool		3504816	0					
ANR	3505140	PtrMemberAccess	lease_ad -> EvaluateAttrBool		3504816	0					
ANR	3505141	Identifier	lease_ad		3504816	0					
ANR	3505142	Identifier	EvaluateAttrBool		3504816	1					
ANR	3505143	ArgumentList	"""LeaseValid"""		3504816	1					
ANR	3505144	Argument	"""LeaseValid"""		3504816	0					
ANR	3505145	PrimaryExpression	"""LeaseValid"""		3504816	0					
ANR	3505146	Argument	old_valid		3504816	1					
ANR	3505147	Identifier	old_valid		3504816	0					
ANR	3505148	CompoundStatement		63:61:2094:2094	3504816	1					
ANR	3505149	ExpressionStatement	"dprintf ( D_ALWAYS , ""No lease number / valid flag in LeaseAd %s\\n"" , resource_name . c_str ( ) )"	894:3:25758:25861	3504816	0	True				
ANR	3505150	CallExpression	"dprintf ( D_ALWAYS , ""No lease number / valid flag in LeaseAd %s\\n"" , resource_name . c_str ( ) )"		3504816	0					
ANR	3505151	Callee	dprintf		3504816	0					
ANR	3505152	Identifier	dprintf		3504816	0					
ANR	3505153	ArgumentList	D_ALWAYS		3504816	1					
ANR	3505154	Argument	D_ALWAYS		3504816	0					
ANR	3505155	Identifier	D_ALWAYS		3504816	0					
ANR	3505156	Argument	"""No lease number / valid flag in LeaseAd %s\\n"""		3504816	1					
ANR	3505157	PrimaryExpression	"""No lease number / valid flag in LeaseAd %s\\n"""		3504816	0					
ANR	3505158	Argument	resource_name . c_str ( )		3504816	2					
ANR	3505159	CallExpression	resource_name . c_str ( )		3504816	0					
ANR	3505160	Callee	resource_name . c_str		3504816	0					
ANR	3505161	MemberAccess	resource_name . c_str		3504816	0					
ANR	3505162	Identifier	resource_name		3504816	0					
ANR	3505163	Identifier	c_str		3504816	1					
ANR	3505164	ArgumentList			3504816	1					
ANR	3505165	ContinueStatement	continue ;	897:3:25866:25874	3504816	1	True				
ANR	3505166	IdentifierDeclStatement	bool valid = ( lease_number <= max_resource_leases ) ;	899:2:25882:25934	3504816	6	True				
ANR	3505167	IdentifierDecl	valid = ( lease_number <= max_resource_leases )		3504816	0					
ANR	3505168	IdentifierDeclType	bool		3504816	0					
ANR	3505169	Identifier	valid		3504816	1					
ANR	3505170	AssignmentExpression	valid = ( lease_number <= max_resource_leases )		3504816	2		=			
ANR	3505171	Identifier	valid		3504816	0					
ANR	3505172	RelationalExpression	lease_number <= max_resource_leases		3504816	1		<=			
ANR	3505173	Identifier	lease_number		3504816	0					
ANR	3505174	Identifier	max_resource_leases		3504816	1					
ANR	3505175	IfStatement	if ( old_valid != valid )		3504816	7					
ANR	3505176	Condition	old_valid != valid	902:7:25980:25997	3504816	0	True				
ANR	3505177	EqualityExpression	old_valid != valid		3504816	0		!=			
ANR	3505178	Identifier	old_valid		3504816	0					
ANR	3505179	Identifier	valid		3504816	1					
ANR	3505180	CompoundStatement		72:28:2342:2342	3504816	1					
ANR	3505181	Statement	classad	903:3:26006:26012	3504816	0	True				
ANR	3505182	Statement	::	903:10:26013:26014	3504816	1	True				
ANR	3505183	Statement	ClassAd	903:12:26015:26021	3504816	2	True				
ANR	3505184	Statement	*	903:20:26023:26023	3504816	3	True				
ANR	3505185	Statement	updates	903:21:26024:26030	3504816	4	True				
ANR	3505186	Statement	=	903:29:26032:26032	3504816	5	True				
ANR	3505187	Statement	new	903:31:26034:26036	3504816	6	True				
ANR	3505188	ExpressionStatement	classad :: ClassAd	903:35:26038:26054	3504816	7	True				
ANR	3505189	Identifier	classad :: ClassAd		3504816	0					
ANR	3505190	IfStatement	"if ( ! updates -> InsertAttr ( ""LeaseValid"" , valid ) )"		3504816	8					
ANR	3505191	Condition	"! updates -> InsertAttr ( ""LeaseValid"" , valid )"	904:8:26064:26106	3504816	0	True				
ANR	3505192	UnaryOperationExpression	"! updates -> InsertAttr ( ""LeaseValid"" , valid )"		3504816	0					
ANR	3505193	UnaryOperator	!		3504816	0					
ANR	3505194	CallExpression	"updates -> InsertAttr ( ""LeaseValid"" , valid )"		3504816	1					
ANR	3505195	Callee	updates -> InsertAttr		3504816	0					
ANR	3505196	PtrMemberAccess	updates -> InsertAttr		3504816	0					
ANR	3505197	Identifier	updates		3504816	0					
ANR	3505198	Identifier	InsertAttr		3504816	1					
ANR	3505199	ArgumentList	"""LeaseValid"""		3504816	1					
ANR	3505200	Argument	"""LeaseValid"""		3504816	0					
ANR	3505201	PrimaryExpression	"""LeaseValid"""		3504816	0					
ANR	3505202	Argument	valid		3504816	1					
ANR	3505203	Identifier	valid		3504816	0					
ANR	3505204	CompoundStatement		74:54:2451:2451	3504816	1					
ANR	3505205	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to insert 'valid' attribte into lease ad\\n"" )"	905:4:26116:26194	3504816	0	True				
ANR	3505206	CallExpression	"dprintf ( D_ALWAYS , ""Failed to insert 'valid' attribte into lease ad\\n"" )"		3504816	0					
ANR	3505207	Callee	dprintf		3504816	0					
ANR	3505208	Identifier	dprintf		3504816	0					
ANR	3505209	ArgumentList	D_ALWAYS		3504816	1					
ANR	3505210	Argument	D_ALWAYS		3504816	0					
ANR	3505211	Identifier	D_ALWAYS		3504816	0					
ANR	3505212	Argument	"""Failed to insert 'valid' attribte into lease ad\\n"""		3504816	1					
ANR	3505213	PrimaryExpression	"""Failed to insert 'valid' attribte into lease ad\\n"""		3504816	0					
ANR	3505214	IfStatement	"if ( ! UpdateLeaseAd ( resource_name , lease_number , updates ) )"		3504816	9					
ANR	3505215	Condition	"! UpdateLeaseAd ( resource_name , lease_number , updates )"	908:8:26209:26262	3504816	0	True				
ANR	3505216	UnaryOperationExpression	"! UpdateLeaseAd ( resource_name , lease_number , updates )"		3504816	0					
ANR	3505217	UnaryOperator	!		3504816	0					
ANR	3505218	CallExpression	"UpdateLeaseAd ( resource_name , lease_number , updates )"		3504816	1					
ANR	3505219	Callee	UpdateLeaseAd		3504816	0					
ANR	3505220	Identifier	UpdateLeaseAd		3504816	0					
ANR	3505221	ArgumentList	resource_name		3504816	1					
ANR	3505222	Argument	resource_name		3504816	0					
ANR	3505223	Identifier	resource_name		3504816	0					
ANR	3505224	Argument	lease_number		3504816	1					
ANR	3505225	Identifier	lease_number		3504816	0					
ANR	3505226	Argument	updates		3504816	2					
ANR	3505227	Identifier	updates		3504816	0					
ANR	3505228	CompoundStatement		78:65:2607:2607	3504816	1					
ANR	3505229	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to update lease ad\\n"" )"	909:4:26272:26328	3504816	0	True				
ANR	3505230	CallExpression	"dprintf ( D_ALWAYS , ""Failed to update lease ad\\n"" )"		3504816	0					
ANR	3505231	Callee	dprintf		3504816	0					
ANR	3505232	Identifier	dprintf		3504816	0					
ANR	3505233	ArgumentList	D_ALWAYS		3504816	1					
ANR	3505234	Argument	D_ALWAYS		3504816	0					
ANR	3505235	Identifier	D_ALWAYS		3504816	0					
ANR	3505236	Argument	"""Failed to update lease ad\\n"""		3504816	1					
ANR	3505237	PrimaryExpression	"""Failed to update lease ad\\n"""		3504816	0					
ANR	3505238	ExpressionStatement	m_stats . m_num_lease_records += num_leases_added	916:1:26366:26413	3504816	9	True				
ANR	3505239	AssignmentExpression	m_stats . m_num_lease_records += num_leases_added		3504816	0		+=			
ANR	3505240	MemberAccess	m_stats . m_num_lease_records		3504816	0					
ANR	3505241	Identifier	m_stats		3504816	0					
ANR	3505242	Identifier	m_num_lease_records		3504816	1					
ANR	3505243	Identifier	num_leases_added		3504816	1					
ANR	3505244	ExpressionStatement	m_stats . m_num_valid_leases += ( max_resource_leases - lease_count )	917:1:26416:26483	3504816	10	True				
ANR	3505245	AssignmentExpression	m_stats . m_num_valid_leases += ( max_resource_leases - lease_count )		3504816	0		+=			
ANR	3505246	MemberAccess	m_stats . m_num_valid_leases		3504816	0					
ANR	3505247	Identifier	m_stats		3504816	0					
ANR	3505248	Identifier	m_num_valid_leases		3504816	1					
ANR	3505249	AdditiveExpression	max_resource_leases - lease_count		3504816	1		-			
ANR	3505250	Identifier	max_resource_leases		3504816	0					
ANR	3505251	Identifier	lease_count		3504816	1					
ANR	3505252	ExpressionStatement	lease_count = max_resource_leases	920:1:26523:26556	3504816	11	True				
ANR	3505253	AssignmentExpression	lease_count = max_resource_leases		3504816	0		=			
ANR	3505254	Identifier	lease_count		3504816	0					
ANR	3505255	Identifier	max_resource_leases		3504816	1					
ANR	3505256	Statement	classad	921:1:26559:26565	3504816	12	True				
ANR	3505257	Statement	::	921:8:26566:26567	3504816	13	True				
ANR	3505258	Statement	ClassAd	921:10:26568:26574	3504816	14	True				
ANR	3505259	Statement	*	921:18:26576:26576	3504816	15	True				
ANR	3505260	Statement	updates	921:19:26577:26583	3504816	16	True				
ANR	3505261	Statement	=	921:27:26585:26585	3504816	17	True				
ANR	3505262	Statement	new	921:29:26587:26589	3504816	18	True				
ANR	3505263	ExpressionStatement	classad :: ClassAd	921:33:26591:26607	3504816	19	True				
ANR	3505264	Identifier	classad :: ClassAd		3504816	0					
ANR	3505265	ExpressionStatement	"updates -> InsertAttr ( ""LeaseCount"" , lease_count )"	922:1:26610:26658	3504816	20	True				
ANR	3505266	CallExpression	"updates -> InsertAttr ( ""LeaseCount"" , lease_count )"		3504816	0					
ANR	3505267	Callee	updates -> InsertAttr		3504816	0					
ANR	3505268	PtrMemberAccess	updates -> InsertAttr		3504816	0					
ANR	3505269	Identifier	updates		3504816	0					
ANR	3505270	Identifier	InsertAttr		3504816	1					
ANR	3505271	ArgumentList	"""LeaseCount"""		3504816	1					
ANR	3505272	Argument	"""LeaseCount"""		3504816	0					
ANR	3505273	PrimaryExpression	"""LeaseCount"""		3504816	0					
ANR	3505274	Argument	lease_count		3504816	1					
ANR	3505275	Identifier	lease_count		3504816	0					
ANR	3505276	IfStatement	"if ( ! UpdateLeasesAd ( resource_name , updates ) )"		3504816	21					
ANR	3505277	Condition	"! UpdateLeasesAd ( resource_name , updates )"	923:6:26666:26706	3504816	0	True				
ANR	3505278	UnaryOperationExpression	"! UpdateLeasesAd ( resource_name , updates )"		3504816	0					
ANR	3505279	UnaryOperator	!		3504816	0					
ANR	3505280	CallExpression	"UpdateLeasesAd ( resource_name , updates )"		3504816	1					
ANR	3505281	Callee	UpdateLeasesAd		3504816	0					
ANR	3505282	Identifier	UpdateLeasesAd		3504816	0					
ANR	3505283	ArgumentList	resource_name		3504816	1					
ANR	3505284	Argument	resource_name		3504816	0					
ANR	3505285	Identifier	resource_name		3504816	0					
ANR	3505286	Argument	updates		3504816	1					
ANR	3505287	Identifier	updates		3504816	0					
ANR	3505288	CompoundStatement		93:50:3051:3051	3504816	1					
ANR	3505289	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to updates leases for %s\\n"" , resource_name . c_str ( ) )"	924:2:26714:26798	3504816	0	True				
ANR	3505290	CallExpression	"dprintf ( D_ALWAYS , ""Failed to updates leases for %s\\n"" , resource_name . c_str ( ) )"		3504816	0					
ANR	3505291	Callee	dprintf		3504816	0					
ANR	3505292	Identifier	dprintf		3504816	0					
ANR	3505293	ArgumentList	D_ALWAYS		3504816	1					
ANR	3505294	Argument	D_ALWAYS		3504816	0					
ANR	3505295	Identifier	D_ALWAYS		3504816	0					
ANR	3505296	Argument	"""Failed to updates leases for %s\\n"""		3504816	1					
ANR	3505297	PrimaryExpression	"""Failed to updates leases for %s\\n"""		3504816	0					
ANR	3505298	Argument	resource_name . c_str ( )		3504816	2					
ANR	3505299	CallExpression	resource_name . c_str ( )		3504816	0					
ANR	3505300	Callee	resource_name . c_str		3504816	0					
ANR	3505301	MemberAccess	resource_name . c_str		3504816	0					
ANR	3505302	Identifier	resource_name		3504816	0					
ANR	3505303	Identifier	c_str		3504816	1					
ANR	3505304	ArgumentList			3504816	1					
ANR	3505305	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Lease count set to %d\\n"" , lease_count )"	927:1:26804:26866	3504816	22	True				
ANR	3505306	CallExpression	"dprintf ( D_FULLDEBUG , ""Lease count set to %d\\n"" , lease_count )"		3504816	0					
ANR	3505307	Callee	dprintf		3504816	0					
ANR	3505308	Identifier	dprintf		3504816	0					
ANR	3505309	ArgumentList	D_FULLDEBUG		3504816	1					
ANR	3505310	Argument	D_FULLDEBUG		3504816	0					
ANR	3505311	Identifier	D_FULLDEBUG		3504816	0					
ANR	3505312	Argument	"""Lease count set to %d\\n"""		3504816	1					
ANR	3505313	PrimaryExpression	"""Lease count set to %d\\n"""		3504816	0					
ANR	3505314	Argument	lease_count		3504816	2					
ANR	3505315	Identifier	lease_count		3504816	0					
ANR	3505316	ExpressionStatement	"timer . Log ( ""SetLeaseStates"" , lease_states -> size ( ) )"	928:1:26869:26920	3504816	23	True				
ANR	3505317	CallExpression	"timer . Log ( ""SetLeaseStates"" , lease_states -> size ( ) )"		3504816	0					
ANR	3505318	Callee	timer . Log		3504816	0					
ANR	3505319	MemberAccess	timer . Log		3504816	0					
ANR	3505320	Identifier	timer		3504816	0					
ANR	3505321	Identifier	Log		3504816	1					
ANR	3505322	ArgumentList	"""SetLeaseStates"""		3504816	1					
ANR	3505323	Argument	"""SetLeaseStates"""		3504816	0					
ANR	3505324	PrimaryExpression	"""SetLeaseStates"""		3504816	0					
ANR	3505325	Argument	lease_states -> size ( )		3504816	1					
ANR	3505326	CallExpression	lease_states -> size ( )		3504816	0					
ANR	3505327	Callee	lease_states -> size		3504816	0					
ANR	3505328	PtrMemberAccess	lease_states -> size		3504816	0					
ANR	3505329	Identifier	lease_states		3504816	0					
ANR	3505330	Identifier	size		3504816	1					
ANR	3505331	ArgumentList			3504816	1					
ANR	3505332	ReturnStatement	return 0 ;	931:1:26941:26949	3504816	24	True				
ANR	3505333	PrimaryExpression	0		3504816	0					
ANR	3505334	ReturnType	int		3504816	1					
ANR	3505335	Identifier	LeaseManagerResources :: SetLeaseStates		3504816	2					
ANR	3505336	ParameterList	"const string & resource_name , int max_resource_leases , classad :: ClassAd & leases_ad , int & lease_count"		3504816	3					
ANR	3505337	Parameter	const string & resource_name	827:1:23544:23571	3504816	0	True				
ANR	3505338	ParameterType	const string &		3504816	0					
ANR	3505339	Identifier	resource_name		3504816	1					
ANR	3505340	Parameter	int max_resource_leases	828:1:23575:23601	3504816	1	True				
ANR	3505341	ParameterType	int		3504816	0					
ANR	3505342	Identifier	max_resource_leases		3504816	1					
ANR	3505343	Parameter	classad :: ClassAd & leases_ad	829:1:23605:23631	3504816	2	True				
ANR	3505344	ParameterType	classad :: ClassAd &		3504816	0					
ANR	3505345	Identifier	leases_ad		3504816	1					
ANR	3505346	Parameter	int & lease_count	830:1:23635:23654	3504816	3	True				
ANR	3505347	ParameterType	int &		3504816	0					
ANR	3505348	Identifier	lease_count		3504816	1					
ANR	3505349	CFGEntryNode	ENTRY		3504816		True				
ANR	3505350	CFGExitNode	EXIT		3504816		True				
ANR	3505351	Symbol	old_valid		3504816						
ANR	3505352	Symbol	lease_count		3504816						
ANR	3505353	Symbol	lease_ad -> EvaluateAttrInt		3504816						
ANR	3505354	Symbol	resource_name . c_str		3504816						
ANR	3505355	Symbol	lease_states -> end		3504816						
ANR	3505356	Symbol	state_expr		3504816						
ANR	3505357	Symbol	updates		3504816						
ANR	3505358	Symbol	UpdateLeaseAd		3504816						
ANR	3505359	Symbol	valid		3504816						
ANR	3505360	Symbol	timer		3504816						
ANR	3505361	Symbol	* iter		3504816						
ANR	3505362	Symbol	lease_number		3504816						
ANR	3505363	Symbol	lease_states -> begin		3504816						
ANR	3505364	Symbol	leases_ad . EvaluateAttrList		3504816						
ANR	3505365	Symbol	lease_states		3504816						
ANR	3505366	Symbol	num_leases_added		3504816						
ANR	3505367	Symbol	m_stats . m_num_lease_records		3504816						
ANR	3505368	Symbol	state_expr -> GetKind		3504816						
ANR	3505369	Symbol	max_resource_leases		3504816						
ANR	3505370	Symbol	m_stats		3504816						
ANR	3505371	Symbol	* lease_ad		3504816						
ANR	3505372	Symbol	m_stats . m_num_valid_leases		3504816						
ANR	3505373	Symbol	UpdateLeasesAd		3504816						
ANR	3505374	Symbol	false		3504816						
ANR	3505375	Symbol	D_ALWAYS		3504816						
ANR	3505376	Symbol	iter		3504816						
ANR	3505377	Symbol	D_FULLDEBUG		3504816						
ANR	3505378	Symbol	* lease_states		3504816						
ANR	3505379	Symbol	classad :: ExprTree :: CLASSAD_NODE		3504816						
ANR	3505380	Symbol	lease_states -> size		3504816						
ANR	3505381	Symbol	* updates		3504816						
ANR	3505382	Symbol	lease_ad -> EvaluateAttrBool		3504816						
ANR	3505383	Symbol	lease_ad		3504816						
ANR	3505384	Symbol	true		3504816						
ANR	3505385	Symbol	resource_name		3504816						
ANR	3505386	Symbol	leases_ad		3504816						
ANR	3505387	Symbol	updates -> InsertAttr		3504816						
ANR	3505388	Symbol	* state_expr		3504816						
ANR	3505389	Function	LeaseManagerResources :: GetStats	935:0:26992:27296							
ANR	3505390	FunctionDef	LeaseManagerResources :: GetStats (LeaseManagerStats & stats)		3505389	0					
ANR	3505391	CompoundStatement		937:0:27057:27296	3505389	0					
ANR	3505392	ExpressionStatement	stats . m_num_resources = m_stats . m_num_resources	938:1:27060:27111	3505389	0	True				
ANR	3505393	AssignmentExpression	stats . m_num_resources = m_stats . m_num_resources		3505389	0		=			
ANR	3505394	MemberAccess	stats . m_num_resources		3505389	0					
ANR	3505395	Identifier	stats		3505389	0					
ANR	3505396	Identifier	m_num_resources		3505389	1					
ANR	3505397	MemberAccess	m_stats . m_num_resources		3505389	1					
ANR	3505398	Identifier	m_stats		3505389	0					
ANR	3505399	Identifier	m_num_resources		3505389	1					
ANR	3505400	ExpressionStatement	stats . m_num_lease_records = m_stats . m_num_lease_records	939:1:27114:27169	3505389	1	True				
ANR	3505401	AssignmentExpression	stats . m_num_lease_records = m_stats . m_num_lease_records		3505389	0		=			
ANR	3505402	MemberAccess	stats . m_num_lease_records		3505389	0					
ANR	3505403	Identifier	stats		3505389	0					
ANR	3505404	Identifier	m_num_lease_records		3505389	1					
ANR	3505405	MemberAccess	m_stats . m_num_lease_records		3505389	1					
ANR	3505406	Identifier	m_stats		3505389	0					
ANR	3505407	Identifier	m_num_lease_records		3505389	1					
ANR	3505408	ExpressionStatement	stats . m_num_valid_leases = m_stats . m_num_valid_leases	940:1:27172:27226	3505389	2	True				
ANR	3505409	AssignmentExpression	stats . m_num_valid_leases = m_stats . m_num_valid_leases		3505389	0		=			
ANR	3505410	MemberAccess	stats . m_num_valid_leases		3505389	0					
ANR	3505411	Identifier	stats		3505389	0					
ANR	3505412	Identifier	m_num_valid_leases		3505389	1					
ANR	3505413	MemberAccess	m_stats . m_num_valid_leases		3505389	1					
ANR	3505414	Identifier	m_stats		3505389	0					
ANR	3505415	Identifier	m_num_valid_leases		3505389	1					
ANR	3505416	ExpressionStatement	stats . m_num_busy_leases = m_stats . m_num_busy_leases	941:1:27229:27282	3505389	3	True				
ANR	3505417	AssignmentExpression	stats . m_num_busy_leases = m_stats . m_num_busy_leases		3505389	0		=			
ANR	3505418	MemberAccess	stats . m_num_busy_leases		3505389	0					
ANR	3505419	Identifier	stats		3505389	0					
ANR	3505420	Identifier	m_num_busy_leases		3505389	1					
ANR	3505421	MemberAccess	m_stats . m_num_busy_leases		3505389	1					
ANR	3505422	Identifier	m_stats		3505389	0					
ANR	3505423	Identifier	m_num_busy_leases		3505389	1					
ANR	3505424	ReturnStatement	return 0 ;	943:1:27286:27294	3505389	4	True				
ANR	3505425	PrimaryExpression	0		3505389	0					
ANR	3505426	ReturnType	int		3505389	1					
ANR	3505427	Identifier	LeaseManagerResources :: GetStats		3505389	2					
ANR	3505428	ParameterList	LeaseManagerStats & stats		3505389	3					
ANR	3505429	Parameter	LeaseManagerStats & stats	936:33:27029:27053	3505389	0	True				
ANR	3505430	ParameterType	LeaseManagerStats &		3505389	0					
ANR	3505431	Identifier	stats		3505389	1					
ANR	3505432	CFGEntryNode	ENTRY		3505389		True				
ANR	3505433	CFGExitNode	EXIT		3505389		True				
ANR	3505434	Symbol	stats . m_num_resources		3505389						
ANR	3505435	Symbol	m_stats		3505389						
ANR	3505436	Symbol	stats		3505389						
ANR	3505437	Symbol	m_stats . m_num_lease_records		3505389						
ANR	3505438	Symbol	m_stats . m_num_valid_leases		3505389						
ANR	3505439	Symbol	stats . m_num_busy_leases		3505389						
ANR	3505440	Symbol	m_stats . m_num_resources		3505389						
ANR	3505441	Symbol	stats . m_num_lease_records		3505389						
ANR	3505442	Symbol	m_stats . m_num_busy_leases		3505389						
ANR	3505443	Symbol	stats . m_num_valid_leases		3505389						
ANR	3505444	Function	LeaseManagerResources :: PruneResources	947:0:27348:27577							
ANR	3505445	FunctionDef	LeaseManagerResources :: PruneResources ()		3505444	0					
ANR	3505446	CompoundStatement		949:0:27398:27577	3505444	0					
ANR	3505447	IdentifierDeclStatement	int status = ExpireLeases ( ) ;	950:1:27401:27429	3505444	0	True				
ANR	3505448	IdentifierDecl	status = ExpireLeases ( )		3505444	0					
ANR	3505449	IdentifierDeclType	int		3505444	0					
ANR	3505450	Identifier	status		3505444	1					
ANR	3505451	AssignmentExpression	status = ExpireLeases ( )		3505444	2		=			
ANR	3505452	Identifier	status		3505444	0					
ANR	3505453	CallExpression	ExpireLeases ( )		3505444	1					
ANR	3505454	Callee	ExpireLeases		3505444	0					
ANR	3505455	Identifier	ExpireLeases		3505444	0					
ANR	3505456	ArgumentList			3505444	1					
ANR	3505457	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Truncating classad collection\\n"" )"	953:1:27462:27519	3505444	1	True				
ANR	3505458	CallExpression	"dprintf ( D_FULLDEBUG , ""Truncating classad collection\\n"" )"		3505444	0					
ANR	3505459	Callee	dprintf		3505444	0					
ANR	3505460	Identifier	dprintf		3505444	0					
ANR	3505461	ArgumentList	D_FULLDEBUG		3505444	1					
ANR	3505462	Argument	D_FULLDEBUG		3505444	0					
ANR	3505463	Identifier	D_FULLDEBUG		3505444	0					
ANR	3505464	Argument	"""Truncating classad collection\\n"""		3505444	1					
ANR	3505465	PrimaryExpression	"""Truncating classad collection\\n"""		3505444	0					
ANR	3505466	ExpressionStatement	m_collection . TruncateLog ( )	954:1:27522:27549	3505444	2	True				
ANR	3505467	CallExpression	m_collection . TruncateLog ( )		3505444	0					
ANR	3505468	Callee	m_collection . TruncateLog		3505444	0					
ANR	3505469	MemberAccess	m_collection . TruncateLog		3505444	0					
ANR	3505470	Identifier	m_collection		3505444	0					
ANR	3505471	Identifier	TruncateLog		3505444	1					
ANR	3505472	ArgumentList			3505444	1					
ANR	3505473	ReturnStatement	return status ;	957:1:27562:27575	3505444	3	True				
ANR	3505474	Identifier	status		3505444	0					
ANR	3505475	ReturnType	int		3505444	1					
ANR	3505476	Identifier	LeaseManagerResources :: PruneResources		3505444	2					
ANR	3505477	ParameterList			3505444	3					
ANR	3505478	CFGEntryNode	ENTRY		3505444		True				
ANR	3505479	CFGExitNode	EXIT		3505444		True				
ANR	3505480	Symbol	m_collection		3505444						
ANR	3505481	Symbol	ExpireLeases		3505444						
ANR	3505482	Symbol	D_FULLDEBUG		3505444						
ANR	3505483	Symbol	status		3505444						
ANR	3505484	Function	LeaseManagerResources :: StartExpire	961:0:27630:28300							
ANR	3505485	FunctionDef	LeaseManagerResources :: StartExpire ()		3505484	0					
ANR	3505486	CompoundStatement		963:0:27677:28300	3505484	0					
ANR	3505487	IdentifierDeclStatement	const classad :: View * view = m_collection . GetView ( m_resources_view ) ;	964:4:27683:27751	3505484	0	True				
ANR	3505488	IdentifierDecl	* view = m_collection . GetView ( m_resources_view )		3505484	0					
ANR	3505489	IdentifierDeclType	const classad :: View *		3505484	0					
ANR	3505490	Identifier	view		3505484	1					
ANR	3505491	AssignmentExpression	* view = m_collection . GetView ( m_resources_view )		3505484	2		=			
ANR	3505492	Identifier	view		3505484	0					
ANR	3505493	CallExpression	m_collection . GetView ( m_resources_view )		3505484	1					
ANR	3505494	Callee	m_collection . GetView		3505484	0					
ANR	3505495	MemberAccess	m_collection . GetView		3505484	0					
ANR	3505496	Identifier	m_collection		3505484	0					
ANR	3505497	Identifier	GetView		3505484	1					
ANR	3505498	ArgumentList	m_resources_view		3505484	1					
ANR	3505499	Argument	m_resources_view		3505484	0					
ANR	3505500	Identifier	m_resources_view		3505484	0					
ANR	3505501	IdentifierDeclStatement	int count = 0 ;	966:1:27755:27769	3505484	1	True				
ANR	3505502	IdentifierDecl	count = 0		3505484	0					
ANR	3505503	IdentifierDeclType	int		3505484	0					
ANR	3505504	Identifier	count		3505484	1					
ANR	3505505	AssignmentExpression	count = 0		3505484	2		=			
ANR	3505506	Identifier	count		3505484	0					
ANR	3505507	PrimaryExpression	0		3505484	1					
ANR	3505508	IdentifierDeclStatement	DebugTimerDprintf timer ;	967:1:27772:27795	3505484	2	True				
ANR	3505509	IdentifierDecl	timer		3505484	0					
ANR	3505510	IdentifierDeclType	DebugTimerDprintf		3505484	0					
ANR	3505511	Identifier	timer		3505484	1					
ANR	3505512	ForStatement	for ( classad :: View :: const_iterator iter = view -> begin ( ) ; iter != view -> end ( ) ; iter ++ )		3505484	3					
ANR	3505513	ForInit	classad :: View :: const_iterator iter = view -> begin ( ) ;	968:10:27807:27857	3505484	0	True				
ANR	3505514	IdentifierDeclStatement	classad :: View :: const_iterator iter = view -> begin ( ) ;		3505484	0					
ANR	3505515	IdentifierDecl	iter = view -> begin ( )		3505484	0					
ANR	3505516	IdentifierDeclType	classad :: View :: const_iterator		3505484	0					
ANR	3505517	Identifier	iter		3505484	1					
ANR	3505518	AssignmentExpression	iter = view -> begin ( )		3505484	2		=			
ANR	3505519	Identifier	iter		3505484	0					
ANR	3505520	CallExpression	view -> begin ( )		3505484	1					
ANR	3505521	Callee	view -> begin		3505484	0					
ANR	3505522	PtrMemberAccess	view -> begin		3505484	0					
ANR	3505523	Identifier	view		3505484	0					
ANR	3505524	Identifier	begin		3505484	1					
ANR	3505525	ArgumentList			3505484	1					
ANR	3505526	Condition	iter != view -> end ( )	969:4:27863:27881	3505484	1	True				
ANR	3505527	EqualityExpression	iter != view -> end ( )		3505484	0		!=			
ANR	3505528	Identifier	iter		3505484	0					
ANR	3505529	CallExpression	view -> end ( )		3505484	1					
ANR	3505530	Callee	view -> end		3505484	0					
ANR	3505531	PtrMemberAccess	view -> end		3505484	0					
ANR	3505532	Identifier	view		3505484	0					
ANR	3505533	Identifier	end		3505484	1					
ANR	3505534	ArgumentList			3505484	1					
ANR	3505535	PostIncDecOperationExpression	iter ++	970:4:27888:27893	3505484	2	True				
ANR	3505536	Identifier	iter		3505484	0					
ANR	3505537	IncDec	++		3505484	1					
ANR	3505538	CompoundStatement		11:2:272:325	3505484	3					
ANR	3505539	IdentifierDeclStatement	string key ;	971:8:27907:27917	3505484	0	True				
ANR	3505540	IdentifierDecl	key		3505484	0					
ANR	3505541	IdentifierDeclType	string		3505484	0					
ANR	3505542	Identifier	key		3505484	1					
ANR	3505543	ExpressionStatement	iter -> GetKey ( key )	972:8:27927:27946	3505484	1	True				
ANR	3505544	CallExpression	iter -> GetKey ( key )		3505484	0					
ANR	3505545	Callee	iter -> GetKey		3505484	0					
ANR	3505546	PtrMemberAccess	iter -> GetKey		3505484	0					
ANR	3505547	Identifier	iter		3505484	0					
ANR	3505548	Identifier	GetKey		3505484	1					
ANR	3505549	ArgumentList	key		3505484	1					
ANR	3505550	Argument	key		3505484	0					
ANR	3505551	Identifier	key		3505484	0					
ANR	3505552	IdentifierDeclStatement	classad :: ClassAd * ad = m_collection . GetClassAd ( key ) ;	973:2:27950:28003	3505484	2	True				
ANR	3505553	IdentifierDecl	* ad = m_collection . GetClassAd ( key )		3505484	0					
ANR	3505554	IdentifierDeclType	classad :: ClassAd *		3505484	0					
ANR	3505555	Identifier	ad		3505484	1					
ANR	3505556	AssignmentExpression	* ad = m_collection . GetClassAd ( key )		3505484	2		=			
ANR	3505557	Identifier	ad		3505484	0					
ANR	3505558	CallExpression	m_collection . GetClassAd ( key )		3505484	1					
ANR	3505559	Callee	m_collection . GetClassAd		3505484	0					
ANR	3505560	MemberAccess	m_collection . GetClassAd		3505484	0					
ANR	3505561	Identifier	m_collection		3505484	0					
ANR	3505562	Identifier	GetClassAd		3505484	1					
ANR	3505563	ArgumentList	key		3505484	1					
ANR	3505564	Argument	key		3505484	0					
ANR	3505565	Identifier	key		3505484	0					
ANR	3505566	IfStatement	if ( ! ad )		3505484	3					
ANR	3505567	Condition	! ad	974:7:28012:28014	3505484	0	True				
ANR	3505568	UnaryOperationExpression	! ad		3505484	0					
ANR	3505569	UnaryOperator	!		3505484	0					
ANR	3505570	Identifier	ad		3505484	1					
ANR	3505571	CompoundStatement		12:13:340:340	3505484	1					
ANR	3505572	ExpressionStatement	"dprintf ( D_ALWAYS , ""ExpiredStart: No ad for key '%s'\\n"" , key . c_str ( ) )"	975:3:28023:28099	3505484	0	True				
ANR	3505573	CallExpression	"dprintf ( D_ALWAYS , ""ExpiredStart: No ad for key '%s'\\n"" , key . c_str ( ) )"		3505484	0					
ANR	3505574	Callee	dprintf		3505484	0					
ANR	3505575	Identifier	dprintf		3505484	0					
ANR	3505576	ArgumentList	D_ALWAYS		3505484	1					
ANR	3505577	Argument	D_ALWAYS		3505484	0					
ANR	3505578	Identifier	D_ALWAYS		3505484	0					
ANR	3505579	Argument	"""ExpiredStart: No ad for key '%s'\\n"""		3505484	1					
ANR	3505580	PrimaryExpression	"""ExpiredStart: No ad for key '%s'\\n"""		3505484	0					
ANR	3505581	Argument	key . c_str ( )		3505484	2					
ANR	3505582	CallExpression	key . c_str ( )		3505484	0					
ANR	3505583	Callee	key . c_str		3505484	0					
ANR	3505584	MemberAccess	key . c_str		3505484	0					
ANR	3505585	Identifier	key		3505484	0					
ANR	3505586	Identifier	c_str		3505484	1					
ANR	3505587	ArgumentList			3505484	1					
ANR	3505588	ContinueStatement	continue ;	977:3:28104:28112	3505484	1	True				
ANR	3505589	ExpressionStatement	"ad -> InsertAttr ( ""_Expired"" , true )"	979:2:28120:28154	3505484	4	True				
ANR	3505590	CallExpression	"ad -> InsertAttr ( ""_Expired"" , true )"		3505484	0					
ANR	3505591	Callee	ad -> InsertAttr		3505484	0					
ANR	3505592	PtrMemberAccess	ad -> InsertAttr		3505484	0					
ANR	3505593	Identifier	ad		3505484	0					
ANR	3505594	Identifier	InsertAttr		3505484	1					
ANR	3505595	ArgumentList	"""_Expired"""		3505484	1					
ANR	3505596	Argument	"""_Expired"""		3505484	0					
ANR	3505597	PrimaryExpression	"""_Expired"""		3505484	0					
ANR	3505598	Argument	true		3505484	1					
ANR	3505599	Identifier	true		3505484	0					
ANR	3505600	ExpressionStatement	count ++	980:2:28158:28165	3505484	5	True				
ANR	3505601	PostIncDecOperationExpression	count ++		3505484	0					
ANR	3505602	Identifier	count		3505484	0					
ANR	3505603	IncDec	++		3505484	1					
ANR	3505604	ExpressionStatement	"timer . Log ( ""StartExpire"" , count )"	982:1:28174:28207	3505484	4	True				
ANR	3505605	CallExpression	"timer . Log ( ""StartExpire"" , count )"		3505484	0					
ANR	3505606	Callee	timer . Log		3505484	0					
ANR	3505607	MemberAccess	timer . Log		3505484	0					
ANR	3505608	Identifier	timer		3505484	0					
ANR	3505609	Identifier	Log		3505484	1					
ANR	3505610	ArgumentList	"""StartExpire"""		3505484	1					
ANR	3505611	Argument	"""StartExpire"""		3505484	0					
ANR	3505612	PrimaryExpression	"""StartExpire"""		3505484	0					
ANR	3505613	Argument	count		3505484	1					
ANR	3505614	Identifier	count		3505484	0					
ANR	3505615	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""ExpiredStart: Invalidated %d resources\\n"" , count )"	983:1:28210:28287	3505484	5	True				
ANR	3505616	CallExpression	"dprintf ( D_FULLDEBUG , ""ExpiredStart: Invalidated %d resources\\n"" , count )"		3505484	0					
ANR	3505617	Callee	dprintf		3505484	0					
ANR	3505618	Identifier	dprintf		3505484	0					
ANR	3505619	ArgumentList	D_FULLDEBUG		3505484	1					
ANR	3505620	Argument	D_FULLDEBUG		3505484	0					
ANR	3505621	Identifier	D_FULLDEBUG		3505484	0					
ANR	3505622	Argument	"""ExpiredStart: Invalidated %d resources\\n"""		3505484	1					
ANR	3505623	PrimaryExpression	"""ExpiredStart: Invalidated %d resources\\n"""		3505484	0					
ANR	3505624	Argument	count		3505484	2					
ANR	3505625	Identifier	count		3505484	0					
ANR	3505626	ReturnStatement	return 0 ;	985:1:28290:28298	3505484	6	True				
ANR	3505627	PrimaryExpression	0		3505484	0					
ANR	3505628	ReturnType	int		3505484	1					
ANR	3505629	Identifier	LeaseManagerResources :: StartExpire		3505484	2					
ANR	3505630	ParameterList			3505484	3					
ANR	3505631	CFGEntryNode	ENTRY		3505484		True				
ANR	3505632	CFGExitNode	EXIT		3505484		True				
ANR	3505633	Symbol	view -> begin		3505484						
ANR	3505634	Symbol	ad		3505484						
ANR	3505635	Symbol	m_resources_view		3505484						
ANR	3505636	Symbol	m_collection		3505484						
ANR	3505637	Symbol	view -> end		3505484						
ANR	3505638	Symbol	count		3505484						
ANR	3505639	Symbol	D_ALWAYS		3505484						
ANR	3505640	Symbol	iter		3505484						
ANR	3505641	Symbol	key . c_str		3505484						
ANR	3505642	Symbol	D_FULLDEBUG		3505484						
ANR	3505643	Symbol	timer		3505484						
ANR	3505644	Symbol	view		3505484						
ANR	3505645	Symbol	m_collection . GetView		3505484						
ANR	3505646	Symbol	m_collection . GetClassAd		3505484						
ANR	3505647	Symbol	true		3505484						
ANR	3505648	Symbol	* view		3505484						
ANR	3505649	Symbol	key		3505484						
ANR	3505650	Function	LeaseManagerResources :: ExpireLeases	989:0:28357:29216							
ANR	3505651	FunctionDef	LeaseManagerResources :: ExpireLeases ()		3505650	0					
ANR	3505652	CompoundStatement		991:0:28405:29216	3505650	0					
ANR	3505653	IdentifierDeclStatement	int num_expired = 0 ;	993:1:28409:28429	3505650	0	True				
ANR	3505654	IdentifierDecl	num_expired = 0		3505650	0					
ANR	3505655	IdentifierDeclType	int		3505650	0					
ANR	3505656	Identifier	num_expired		3505650	1					
ANR	3505657	AssignmentExpression	num_expired = 0		3505650	2		=			
ANR	3505658	Identifier	num_expired		3505650	0					
ANR	3505659	PrimaryExpression	0		3505650	1					
ANR	3505660	IdentifierDeclStatement	int num_examined = 0 ;	994:1:28432:28453	3505650	1	True				
ANR	3505661	IdentifierDecl	num_examined = 0		3505650	0					
ANR	3505662	IdentifierDeclType	int		3505650	0					
ANR	3505663	Identifier	num_examined		3505650	1					
ANR	3505664	AssignmentExpression	num_examined = 0		3505650	2		=			
ANR	3505665	Identifier	num_examined		3505650	0					
ANR	3505666	PrimaryExpression	0		3505650	1					
ANR	3505667	IdentifierDeclStatement	time_t now = time ( NULL ) ;	995:1:28456:28481	3505650	2	True				
ANR	3505668	IdentifierDecl	now = time ( NULL )		3505650	0					
ANR	3505669	IdentifierDeclType	time_t		3505650	0					
ANR	3505670	Identifier	now		3505650	1					
ANR	3505671	AssignmentExpression	now = time ( NULL )		3505650	2		=			
ANR	3505672	Identifier	now		3505650	0					
ANR	3505673	CallExpression	time ( NULL )		3505650	1					
ANR	3505674	Callee	time		3505650	0					
ANR	3505675	Identifier	time		3505650	0					
ANR	3505676	ArgumentList	NULL		3505650	1					
ANR	3505677	Argument	NULL		3505650	0					
ANR	3505678	Identifier	NULL		3505650	0					
ANR	3505679	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Expiring old leases @ %ld\\n"" , now )"	996:1:28484:28542	3505650	3	True				
ANR	3505680	CallExpression	"dprintf ( D_FULLDEBUG , ""Expiring old leases @ %ld\\n"" , now )"		3505650	0					
ANR	3505681	Callee	dprintf		3505650	0					
ANR	3505682	Identifier	dprintf		3505650	0					
ANR	3505683	ArgumentList	D_FULLDEBUG		3505650	1					
ANR	3505684	Argument	D_FULLDEBUG		3505650	0					
ANR	3505685	Identifier	D_FULLDEBUG		3505650	0					
ANR	3505686	Argument	"""Expiring old leases @ %ld\\n"""		3505650	1					
ANR	3505687	PrimaryExpression	"""Expiring old leases @ %ld\\n"""		3505650	0					
ANR	3505688	Argument	now		3505650	2					
ANR	3505689	Identifier	now		3505650	0					
ANR	3505690	IdentifierDeclStatement	DebugTimerDprintf timer ;	998:1:28546:28569	3505650	4	True				
ANR	3505691	IdentifierDecl	timer		3505650	0					
ANR	3505692	IdentifierDeclType	DebugTimerDprintf		3505650	0					
ANR	3505693	Identifier	timer		3505650	1					
ANR	3505694	IdentifierDeclStatement	"map < string , LeaseManagerLeaseEnt * , less < string > > :: iterator iter ;"	999:1:28572:28636	3505650	5	True				
ANR	3505695	IdentifierDecl	iter		3505650	0					
ANR	3505696	IdentifierDeclType	"map < string , LeaseManagerLeaseEnt * , less < string > > :: iterator"		3505650	0					
ANR	3505697	Identifier	iter		3505650	1					
ANR	3505698	ForStatement	for ( iter = m_used_leases . begin ( ) ; iter != m_used_leases . end ( ) ; iter ++ )		3505650	6					
ANR	3505699	ForInit	iter = m_used_leases . begin ( ) ;	1000:6:28644:28672	3505650	0	True				
ANR	3505700	AssignmentExpression	iter = m_used_leases . begin ( )		3505650	0		=			
ANR	3505701	Identifier	iter		3505650	0					
ANR	3505702	CallExpression	m_used_leases . begin ( )		3505650	1					
ANR	3505703	Callee	m_used_leases . begin		3505650	0					
ANR	3505704	MemberAccess	m_used_leases . begin		3505650	0					
ANR	3505705	Identifier	m_used_leases		3505650	0					
ANR	3505706	Identifier	begin		3505650	1					
ANR	3505707	ArgumentList			3505650	1					
ANR	3505708	Condition	iter != m_used_leases . end ( )	1000:36:28674:28700	3505650	1	True				
ANR	3505709	EqualityExpression	iter != m_used_leases . end ( )		3505650	0		!=			
ANR	3505710	Identifier	iter		3505650	0					
ANR	3505711	CallExpression	m_used_leases . end ( )		3505650	1					
ANR	3505712	Callee	m_used_leases . end		3505650	0					
ANR	3505713	MemberAccess	m_used_leases . end		3505650	0					
ANR	3505714	Identifier	m_used_leases		3505650	0					
ANR	3505715	Identifier	end		3505650	1					
ANR	3505716	ArgumentList			3505650	1					
ANR	3505717	PostIncDecOperationExpression	iter ++	1000:65:28703:28708	3505650	2	True				
ANR	3505718	Identifier	iter		3505650	0					
ANR	3505719	IncDec	++		3505650	1					
ANR	3505720	CompoundStatement		11:2:310:356	3505650	3					
ANR	3505721	IdentifierDeclStatement	LeaseManagerLeaseEnt * lease_ent = iter -> second ;	1001:2:28716:28762	3505650	0	True				
ANR	3505722	IdentifierDecl	* lease_ent = iter -> second		3505650	0					
ANR	3505723	IdentifierDeclType	LeaseManagerLeaseEnt *		3505650	0					
ANR	3505724	Identifier	lease_ent		3505650	1					
ANR	3505725	AssignmentExpression	* lease_ent = iter -> second		3505650	2		=			
ANR	3505726	Identifier	lease_ent		3505650	0					
ANR	3505727	PtrMemberAccess	iter -> second		3505650	1					
ANR	3505728	Identifier	iter		3505650	0					
ANR	3505729	Identifier	second		3505650	1					
ANR	3505730	ExpressionStatement	num_examined ++	1003:2:28767:28781	3505650	1	True				
ANR	3505731	PostIncDecOperationExpression	num_examined ++		3505650	0					
ANR	3505732	Identifier	num_examined		3505650	0					
ANR	3505733	IncDec	++		3505650	1					
ANR	3505734	IfStatement	if ( lease_ent -> m_expiration < now )		3505650	2					
ANR	3505735	Condition	lease_ent -> m_expiration < now	1004:7:28790:28818	3505650	0	True				
ANR	3505736	RelationalExpression	lease_ent -> m_expiration < now		3505650	0		<			
ANR	3505737	PtrMemberAccess	lease_ent -> m_expiration		3505650	0					
ANR	3505738	Identifier	lease_ent		3505650	0					
ANR	3505739	Identifier	m_expiration		3505650	1					
ANR	3505740	Identifier	now		3505650	1					
ANR	3505741	CompoundStatement		14:39:416:416	3505650	1					
ANR	3505742	IfStatement	if ( ! TerminateLease ( * lease_ent ) )		3505650	0					
ANR	3505743	Condition	! TerminateLease ( * lease_ent )	1005:8:28832:28860	3505650	0	True				
ANR	3505744	UnaryOperationExpression	! TerminateLease ( * lease_ent )		3505650	0					
ANR	3505745	UnaryOperator	!		3505650	0					
ANR	3505746	CallExpression	TerminateLease ( * lease_ent )		3505650	1					
ANR	3505747	Callee	TerminateLease		3505650	0					
ANR	3505748	Identifier	TerminateLease		3505650	0					
ANR	3505749	ArgumentList	* lease_ent		3505650	1					
ANR	3505750	Argument	* lease_ent		3505650	0					
ANR	3505751	UnaryOperationExpression	* lease_ent		3505650	0					
ANR	3505752	UnaryOperator	*		3505650	0					
ANR	3505753	Identifier	lease_ent		3505650	1					
ANR	3505754	CompoundStatement		15:40:458:458	3505650	1					
ANR	3505755	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error expiring lease!\\n"" )"	1006:4:28870:28916	3505650	0	True				
ANR	3505756	CallExpression	"dprintf ( D_ALWAYS , ""Error expiring lease!\\n"" )"		3505650	0					
ANR	3505757	Callee	dprintf		3505650	0					
ANR	3505758	Identifier	dprintf		3505650	0					
ANR	3505759	ArgumentList	D_ALWAYS		3505650	1					
ANR	3505760	Argument	D_ALWAYS		3505650	0					
ANR	3505761	Identifier	D_ALWAYS		3505650	0					
ANR	3505762	Argument	"""Error expiring lease!\\n"""		3505650	1					
ANR	3505763	PrimaryExpression	"""Error expiring lease!\\n"""		3505650	0					
ANR	3505764	ExpressionStatement	m_used_leases . erase ( iter -> first )	1008:3:28926:28960	3505650	1	True				
ANR	3505765	CallExpression	m_used_leases . erase ( iter -> first )		3505650	0					
ANR	3505766	Callee	m_used_leases . erase		3505650	0					
ANR	3505767	MemberAccess	m_used_leases . erase		3505650	0					
ANR	3505768	Identifier	m_used_leases		3505650	0					
ANR	3505769	Identifier	erase		3505650	1					
ANR	3505770	ArgumentList	iter -> first		3505650	1					
ANR	3505771	Argument	iter -> first		3505650	0					
ANR	3505772	PtrMemberAccess	iter -> first		3505650	0					
ANR	3505773	Identifier	iter		3505650	0					
ANR	3505774	Identifier	first		3505650	1					
ANR	3505775	Statement	delete	1009:3:28965:28970	3505650	2	True				
ANR	3505776	ExpressionStatement	lease_ent	1009:10:28972:28981	3505650	3	True				
ANR	3505777	Identifier	lease_ent		3505650	0					
ANR	3505778	ExpressionStatement	num_expired ++	1010:3:28986:28999	3505650	4	True				
ANR	3505779	PostIncDecOperationExpression	num_expired ++		3505650	0					
ANR	3505780	Identifier	num_expired		3505650	0					
ANR	3505781	IncDec	++		3505650	1					
ANR	3505782	ExpressionStatement	"timer . Log ( ""ExpireLeases:Examined"" , num_examined )"	1013:1:29009:29059	3505650	7	True				
ANR	3505783	CallExpression	"timer . Log ( ""ExpireLeases:Examined"" , num_examined )"		3505650	0					
ANR	3505784	Callee	timer . Log		3505650	0					
ANR	3505785	MemberAccess	timer . Log		3505650	0					
ANR	3505786	Identifier	timer		3505650	0					
ANR	3505787	Identifier	Log		3505650	1					
ANR	3505788	ArgumentList	"""ExpireLeases:Examined"""		3505650	1					
ANR	3505789	Argument	"""ExpireLeases:Examined"""		3505650	0					
ANR	3505790	PrimaryExpression	"""ExpireLeases:Examined"""		3505650	0					
ANR	3505791	Argument	num_examined		3505650	1					
ANR	3505792	Identifier	num_examined		3505650	0					
ANR	3505793	ExpressionStatement	"timer . Log ( ""ExpireLeases:Expired"" , num_expired )"	1014:1:29062:29110	3505650	8	True				
ANR	3505794	CallExpression	"timer . Log ( ""ExpireLeases:Expired"" , num_expired )"		3505650	0					
ANR	3505795	Callee	timer . Log		3505650	0					
ANR	3505796	MemberAccess	timer . Log		3505650	0					
ANR	3505797	Identifier	timer		3505650	0					
ANR	3505798	Identifier	Log		3505650	1					
ANR	3505799	ArgumentList	"""ExpireLeases:Expired"""		3505650	1					
ANR	3505800	Argument	"""ExpireLeases:Expired"""		3505650	0					
ANR	3505801	PrimaryExpression	"""ExpireLeases:Expired"""		3505650	0					
ANR	3505802	Argument	num_expired		3505650	1					
ANR	3505803	Identifier	num_expired		3505650	0					
ANR	3505804	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Examined %d leases; %d expired\\n"" , num_examined , num_expired )"	1015:1:29113:29202	3505650	9	True				
ANR	3505805	CallExpression	"dprintf ( D_FULLDEBUG , ""Examined %d leases; %d expired\\n"" , num_examined , num_expired )"		3505650	0					
ANR	3505806	Callee	dprintf		3505650	0					
ANR	3505807	Identifier	dprintf		3505650	0					
ANR	3505808	ArgumentList	D_FULLDEBUG		3505650	1					
ANR	3505809	Argument	D_FULLDEBUG		3505650	0					
ANR	3505810	Identifier	D_FULLDEBUG		3505650	0					
ANR	3505811	Argument	"""Examined %d leases; %d expired\\n"""		3505650	1					
ANR	3505812	PrimaryExpression	"""Examined %d leases; %d expired\\n"""		3505650	0					
ANR	3505813	Argument	num_examined		3505650	2					
ANR	3505814	Identifier	num_examined		3505650	0					
ANR	3505815	Argument	num_expired		3505650	3					
ANR	3505816	Identifier	num_expired		3505650	0					
ANR	3505817	ReturnStatement	return 0 ;	1018:1:29206:29214	3505650	10	True				
ANR	3505818	PrimaryExpression	0		3505650	0					
ANR	3505819	ReturnType	int		3505650	1					
ANR	3505820	Identifier	LeaseManagerResources :: ExpireLeases		3505650	2					
ANR	3505821	ParameterList			3505650	3					
ANR	3505822	CFGEntryNode	ENTRY		3505650		True				
ANR	3505823	CFGExitNode	EXIT		3505650		True				
ANR	3505824	Symbol	num_examined		3505650						
ANR	3505825	Symbol	NULL		3505650						
ANR	3505826	Symbol	D_ALWAYS		3505650						
ANR	3505827	Symbol	iter		3505650						
ANR	3505828	Symbol	lease_ent -> m_expiration		3505650						
ANR	3505829	Symbol	D_FULLDEBUG		3505650						
ANR	3505830	Symbol	m_used_leases . end		3505650						
ANR	3505831	Symbol	lease_ent		3505650						
ANR	3505832	Symbol	m_used_leases		3505650						
ANR	3505833	Symbol	* lease_ent		3505650						
ANR	3505834	Symbol	TerminateLease		3505650						
ANR	3505835	Symbol	timer		3505650						
ANR	3505836	Symbol	* iter		3505650						
ANR	3505837	Symbol	num_expired		3505650						
ANR	3505838	Symbol	iter -> first		3505650						
ANR	3505839	Symbol	now		3505650						
ANR	3505840	Symbol	time		3505650						
ANR	3505841	Symbol	m_used_leases . begin		3505650						
ANR	3505842	Symbol	iter -> second		3505650						
ANR	3505843	Function	LeaseManagerResources :: PruneExpired	1022:0:29258:31883							
ANR	3505844	FunctionDef	LeaseManagerResources :: PruneExpired ()		3505843	0					
ANR	3505845	CompoundStatement		1024:0:29306:31883	3505843	0					
ANR	3505846	IdentifierDeclStatement	int zeroed_count = 0 ;	1025:1:29309:29330	3505843	0	True				
ANR	3505847	IdentifierDecl	zeroed_count = 0		3505843	0					
ANR	3505848	IdentifierDeclType	int		3505843	0					
ANR	3505849	Identifier	zeroed_count		3505843	1					
ANR	3505850	AssignmentExpression	zeroed_count = 0		3505843	2		=			
ANR	3505851	Identifier	zeroed_count		3505843	0					
ANR	3505852	PrimaryExpression	0		3505843	1					
ANR	3505853	IdentifierDeclStatement	int pruned_count = 0 ;	1026:1:29333:29354	3505843	1	True				
ANR	3505854	IdentifierDecl	pruned_count = 0		3505843	0					
ANR	3505855	IdentifierDeclType	int		3505843	0					
ANR	3505856	Identifier	pruned_count		3505843	1					
ANR	3505857	AssignmentExpression	pruned_count = 0		3505843	2		=			
ANR	3505858	Identifier	pruned_count		3505843	0					
ANR	3505859	PrimaryExpression	0		3505843	1					
ANR	3505860	ExpressionStatement	ExpireLeases ( )	1029:1:29383:29398	3505843	2	True				
ANR	3505861	CallExpression	ExpireLeases ( )		3505843	0					
ANR	3505862	Callee	ExpireLeases		3505843	0					
ANR	3505863	Identifier	ExpireLeases		3505843	0					
ANR	3505864	ArgumentList			3505843	1					
ANR	3505865	IdentifierDeclStatement	classad :: LocalCollectionQuery query ;	1032:1:29435:29470	3505843	3	True				
ANR	3505866	IdentifierDecl	query		3505843	0					
ANR	3505867	IdentifierDeclType	classad :: LocalCollectionQuery		3505843	0					
ANR	3505868	Identifier	query		3505843	1					
ANR	3505869	IdentifierDeclStatement	string key ;	1033:1:29473:29489	3505843	4	True				
ANR	3505870	IdentifierDecl	key		3505843	0					
ANR	3505871	IdentifierDeclType	string		3505843	0					
ANR	3505872	Identifier	key		3505843	1					
ANR	3505873	IdentifierDeclStatement	DebugTimerDprintf timer ;	1036:1:29530:29553	3505843	5	True				
ANR	3505874	IdentifierDecl	timer		3505843	0					
ANR	3505875	IdentifierDeclType	DebugTimerDprintf		3505843	0					
ANR	3505876	Identifier	timer		3505843	1					
ANR	3505877	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Starting expired query\\n"" )"	1037:1:29556:29606	3505843	6	True				
ANR	3505878	CallExpression	"dprintf ( D_FULLDEBUG , ""Starting expired query\\n"" )"		3505843	0					
ANR	3505879	Callee	dprintf		3505843	0					
ANR	3505880	Identifier	dprintf		3505843	0					
ANR	3505881	ArgumentList	D_FULLDEBUG		3505843	1					
ANR	3505882	Argument	D_FULLDEBUG		3505843	0					
ANR	3505883	Identifier	D_FULLDEBUG		3505843	0					
ANR	3505884	Argument	"""Starting expired query\\n"""		3505843	1					
ANR	3505885	PrimaryExpression	"""Starting expired query\\n"""		3505843	0					
ANR	3505886	IdentifierDeclStatement	"string expr_str = ""( other._Expired == true )"" ;"	1038:1:29609:29655	3505843	7	True				
ANR	3505887	IdentifierDecl	"expr_str = ""( other._Expired == true )"""		3505843	0					
ANR	3505888	IdentifierDeclType	string		3505843	0					
ANR	3505889	Identifier	expr_str		3505843	1					
ANR	3505890	AssignmentExpression	"expr_str = ""( other._Expired == true )"""		3505843	2		=			
ANR	3505891	Identifier	expr_str		3505843	0					
ANR	3505892	PrimaryExpression	"""( other._Expired == true )"""		3505843	1					
ANR	3505893	IfStatement	"if ( ! QueryStart ( query , m_resources_view , expr_str ) )"		3505843	8					
ANR	3505894	Condition	"! QueryStart ( query , m_resources_view , expr_str )"	1039:6:29663:29710	3505843	0	True				
ANR	3505895	UnaryOperationExpression	"! QueryStart ( query , m_resources_view , expr_str )"		3505843	0					
ANR	3505896	UnaryOperator	!		3505843	0					
ANR	3505897	CallExpression	"QueryStart ( query , m_resources_view , expr_str )"		3505843	1					
ANR	3505898	Callee	QueryStart		3505843	0					
ANR	3505899	Identifier	QueryStart		3505843	0					
ANR	3505900	ArgumentList	query		3505843	1					
ANR	3505901	Argument	query		3505843	0					
ANR	3505902	Identifier	query		3505843	0					
ANR	3505903	Argument	m_resources_view		3505843	1					
ANR	3505904	Identifier	m_resources_view		3505843	0					
ANR	3505905	Argument	expr_str		3505843	2					
ANR	3505906	Identifier	expr_str		3505843	0					
ANR	3505907	CompoundStatement		16:57:407:407	3505843	1					
ANR	3505908	ExpressionStatement	"dprintf ( D_ALWAYS , ""ExpiredPrune: QueryStart failed\\n"" )"	1040:2:29718:29774	3505843	0	True				
ANR	3505909	CallExpression	"dprintf ( D_ALWAYS , ""ExpiredPrune: QueryStart failed\\n"" )"		3505843	0					
ANR	3505910	Callee	dprintf		3505843	0					
ANR	3505911	Identifier	dprintf		3505843	0					
ANR	3505912	ArgumentList	D_ALWAYS		3505843	1					
ANR	3505913	Argument	D_ALWAYS		3505843	0					
ANR	3505914	Identifier	D_ALWAYS		3505843	0					
ANR	3505915	Argument	"""ExpiredPrune: QueryStart failed\\n"""		3505843	1					
ANR	3505916	PrimaryExpression	"""ExpiredPrune: QueryStart failed\\n"""		3505843	0					
ANR	3505917	ReturnStatement	return - 1 ;	1041:2:29778:29787	3505843	1	True				
ANR	3505918	UnaryOperationExpression	- 1		3505843	0					
ANR	3505919	UnaryOperator	-		3505843	0					
ANR	3505920	PrimaryExpression	1		3505843	1					
ANR	3505921	DoStatement	do		3505843	9					
ANR	3505922	CompoundStatement		50:2:1203:1218	3505843	0					
ANR	3505923	IdentifierDeclStatement	"classad :: ClassAd * ad = QueryCurrent ( query , key ) ;"	1048:2:29890:29939	3505843	0	True				
ANR	3505924	IdentifierDecl	"* ad = QueryCurrent ( query , key )"		3505843	0					
ANR	3505925	IdentifierDeclType	classad :: ClassAd *		3505843	0					
ANR	3505926	Identifier	ad		3505843	1					
ANR	3505927	AssignmentExpression	"* ad = QueryCurrent ( query , key )"		3505843	2		=			
ANR	3505928	Identifier	ad		3505843	0					
ANR	3505929	CallExpression	"QueryCurrent ( query , key )"		3505843	1					
ANR	3505930	Callee	QueryCurrent		3505843	0					
ANR	3505931	Identifier	QueryCurrent		3505843	0					
ANR	3505932	ArgumentList	query		3505843	1					
ANR	3505933	Argument	query		3505843	0					
ANR	3505934	Identifier	query		3505843	0					
ANR	3505935	Argument	key		3505843	1					
ANR	3505936	Identifier	key		3505843	0					
ANR	3505937	IfStatement	if ( ! ad )		3505843	1					
ANR	3505938	Condition	! ad	1049:7:29948:29950	3505843	0	True				
ANR	3505939	UnaryOperationExpression	! ad		3505843	0					
ANR	3505940	UnaryOperator	!		3505843	0					
ANR	3505941	Identifier	ad		3505843	1					
ANR	3505942	CompoundStatement		26:13:647:647	3505843	1					
ANR	3505943	BreakStatement	break ;	1050:3:29959:29964	3505843	0	True				
ANR	3505944	IdentifierDeclStatement	string name ;	1054:2:30003:30017	3505843	2	True				
ANR	3505945	IdentifierDecl	name		3505843	0					
ANR	3505946	IdentifierDeclType	string		3505843	0					
ANR	3505947	Identifier	name		3505843	1					
ANR	3505948	IfStatement	"if ( ! ad -> EvaluateAttrString ( ""Name"" , name ) )"		3505843	3					
ANR	3505949	Condition	"! ad -> EvaluateAttrString ( ""Name"" , name )"	1055:7:30026:30064	3505843	0	True				
ANR	3505950	UnaryOperationExpression	"! ad -> EvaluateAttrString ( ""Name"" , name )"		3505843	0					
ANR	3505951	UnaryOperator	!		3505843	0					
ANR	3505952	CallExpression	"ad -> EvaluateAttrString ( ""Name"" , name )"		3505843	1					
ANR	3505953	Callee	ad -> EvaluateAttrString		3505843	0					
ANR	3505954	PtrMemberAccess	ad -> EvaluateAttrString		3505843	0					
ANR	3505955	Identifier	ad		3505843	0					
ANR	3505956	Identifier	EvaluateAttrString		3505843	1					
ANR	3505957	ArgumentList	"""Name"""		3505843	1					
ANR	3505958	Argument	"""Name"""		3505843	0					
ANR	3505959	PrimaryExpression	"""Name"""		3505843	0					
ANR	3505960	Argument	name		3505843	1					
ANR	3505961	Identifier	name		3505843	0					
ANR	3505962	CompoundStatement		32:49:761:761	3505843	1					
ANR	3505963	ExpressionStatement	"dprintf ( D_ALWAYS , ""PruneExpired: No name for ad %p\\n"" , ad )"	1056:3:30073:30139	3505843	0	True				
ANR	3505964	CallExpression	"dprintf ( D_ALWAYS , ""PruneExpired: No name for ad %p\\n"" , ad )"		3505843	0					
ANR	3505965	Callee	dprintf		3505843	0					
ANR	3505966	Identifier	dprintf		3505843	0					
ANR	3505967	ArgumentList	D_ALWAYS		3505843	1					
ANR	3505968	Argument	D_ALWAYS		3505843	0					
ANR	3505969	Identifier	D_ALWAYS		3505843	0					
ANR	3505970	Argument	"""PruneExpired: No name for ad %p\\n"""		3505843	1					
ANR	3505971	PrimaryExpression	"""PruneExpired: No name for ad %p\\n"""		3505843	0					
ANR	3505972	Argument	ad		3505843	2					
ANR	3505973	Identifier	ad		3505843	0					
ANR	3505974	ContinueStatement	continue ;	1058:3:30144:30152	3505843	1	True				
ANR	3505975	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Expiring ad for %s\\n"" , name . c_str ( ) )"	1060:2:30160:30220	3505843	4	True				
ANR	3505976	CallExpression	"dprintf ( D_FULLDEBUG , ""Expiring ad for %s\\n"" , name . c_str ( ) )"		3505843	0					
ANR	3505977	Callee	dprintf		3505843	0					
ANR	3505978	Identifier	dprintf		3505843	0					
ANR	3505979	ArgumentList	D_FULLDEBUG		3505843	1					
ANR	3505980	Argument	D_FULLDEBUG		3505843	0					
ANR	3505981	Identifier	D_FULLDEBUG		3505843	0					
ANR	3505982	Argument	"""Expiring ad for %s\\n"""		3505843	1					
ANR	3505983	PrimaryExpression	"""Expiring ad for %s\\n"""		3505843	0					
ANR	3505984	Argument	name . c_str ( )		3505843	2					
ANR	3505985	CallExpression	name . c_str ( )		3505843	0					
ANR	3505986	Callee	name . c_str		3505843	0					
ANR	3505987	MemberAccess	name . c_str		3505843	0					
ANR	3505988	Identifier	name		3505843	0					
ANR	3505989	Identifier	c_str		3505843	1					
ANR	3505990	ArgumentList			3505843	1					
ANR	3505991	IdentifierDeclStatement	classad :: ClassAd * leases_ad = GetLeasesAd ( name ) ;	1063:2:30266:30315	3505843	5	True				
ANR	3505992	IdentifierDecl	* leases_ad = GetLeasesAd ( name )		3505843	0					
ANR	3505993	IdentifierDeclType	classad :: ClassAd *		3505843	0					
ANR	3505994	Identifier	leases_ad		3505843	1					
ANR	3505995	AssignmentExpression	* leases_ad = GetLeasesAd ( name )		3505843	2		=			
ANR	3505996	Identifier	leases_ad		3505843	0					
ANR	3505997	CallExpression	GetLeasesAd ( name )		3505843	1					
ANR	3505998	Callee	GetLeasesAd		3505843	0					
ANR	3505999	Identifier	GetLeasesAd		3505843	0					
ANR	3506000	ArgumentList	name		3505843	1					
ANR	3506001	Argument	name		3505843	0					
ANR	3506002	Identifier	name		3505843	0					
ANR	3506003	IfStatement	if ( ! leases_ad )		3505843	6					
ANR	3506004	Condition	! leases_ad	1064:7:30324:30334	3505843	0	True				
ANR	3506005	UnaryOperationExpression	! leases_ad		3505843	0					
ANR	3506006	UnaryOperator	!		3505843	0					
ANR	3506007	Identifier	leases_ad		3505843	1					
ANR	3506008	CompoundStatement		41:21:1031:1031	3505843	1					
ANR	3506009	ExpressionStatement	"dprintf ( D_ALWAYS , ""PruneExpired: Can't find leases for %s\\n"" , name . c_str ( ) )"	1065:3:30343:30433	3505843	0	True				
ANR	3506010	CallExpression	"dprintf ( D_ALWAYS , ""PruneExpired: Can't find leases for %s\\n"" , name . c_str ( ) )"		3505843	0					
ANR	3506011	Callee	dprintf		3505843	0					
ANR	3506012	Identifier	dprintf		3505843	0					
ANR	3506013	ArgumentList	D_ALWAYS		3505843	1					
ANR	3506014	Argument	D_ALWAYS		3505843	0					
ANR	3506015	Identifier	D_ALWAYS		3505843	0					
ANR	3506016	Argument	"""PruneExpired: Can't find leases for %s\\n"""		3505843	1					
ANR	3506017	PrimaryExpression	"""PruneExpired: Can't find leases for %s\\n"""		3505843	0					
ANR	3506018	Argument	name . c_str ( )		3505843	2					
ANR	3506019	CallExpression	name . c_str ( )		3505843	0					
ANR	3506020	Callee	name . c_str		3505843	0					
ANR	3506021	MemberAccess	name . c_str		3505843	0					
ANR	3506022	Identifier	name		3505843	0					
ANR	3506023	Identifier	c_str		3505843	1					
ANR	3506024	ArgumentList			3505843	1					
ANR	3506025	ContinueStatement	continue ;	1068:3:30438:30446	3505843	1	True				
ANR	3506026	IdentifierDeclStatement	int lease_count ;	1072:2:30489:30506	3505843	7	True				
ANR	3506027	IdentifierDecl	lease_count		3505843	0					
ANR	3506028	IdentifierDeclType	int		3505843	0					
ANR	3506029	Identifier	lease_count		3505843	1					
ANR	3506030	IdentifierDeclStatement	int used_count ;	1073:2:30510:30525	3505843	8	True				
ANR	3506031	IdentifierDecl	used_count		3505843	0					
ANR	3506032	IdentifierDeclType	int		3505843	0					
ANR	3506033	Identifier	used_count		3505843	1					
ANR	3506034	IfStatement	"if ( ( ! leases_ad -> EvaluateAttrInt ( ""LeaseCount"" , lease_count ) ) || ( ! leases_ad -> EvaluateAttrInt ( ""UsedCount"" , used_count ) ) )"		3505843	9					
ANR	3506035	Condition	"( ! leases_ad -> EvaluateAttrInt ( ""LeaseCount"" , lease_count ) ) || ( ! leases_ad -> EvaluateAttrInt ( ""UsedCount"" , used_count ) )"	1074:7:30534:30661	3505843	0	True				
ANR	3506036	OrExpression	"( ! leases_ad -> EvaluateAttrInt ( ""LeaseCount"" , lease_count ) ) || ( ! leases_ad -> EvaluateAttrInt ( ""UsedCount"" , used_count ) )"		3505843	0		||			
ANR	3506037	UnaryOperationExpression	"! leases_ad -> EvaluateAttrInt ( ""LeaseCount"" , lease_count )"		3505843	0					
ANR	3506038	UnaryOperator	!		3505843	0					
ANR	3506039	CallExpression	"leases_ad -> EvaluateAttrInt ( ""LeaseCount"" , lease_count )"		3505843	1					
ANR	3506040	Callee	leases_ad -> EvaluateAttrInt		3505843	0					
ANR	3506041	PtrMemberAccess	leases_ad -> EvaluateAttrInt		3505843	0					
ANR	3506042	Identifier	leases_ad		3505843	0					
ANR	3506043	Identifier	EvaluateAttrInt		3505843	1					
ANR	3506044	ArgumentList	"""LeaseCount"""		3505843	1					
ANR	3506045	Argument	"""LeaseCount"""		3505843	0					
ANR	3506046	PrimaryExpression	"""LeaseCount"""		3505843	0					
ANR	3506047	Argument	lease_count		3505843	1					
ANR	3506048	Identifier	lease_count		3505843	0					
ANR	3506049	UnaryOperationExpression	"! leases_ad -> EvaluateAttrInt ( ""UsedCount"" , used_count )"		3505843	1					
ANR	3506050	UnaryOperator	!		3505843	0					
ANR	3506051	CallExpression	"leases_ad -> EvaluateAttrInt ( ""UsedCount"" , used_count )"		3505843	1					
ANR	3506052	Callee	leases_ad -> EvaluateAttrInt		3505843	0					
ANR	3506053	PtrMemberAccess	leases_ad -> EvaluateAttrInt		3505843	0					
ANR	3506054	Identifier	leases_ad		3505843	0					
ANR	3506055	Identifier	EvaluateAttrInt		3505843	1					
ANR	3506056	ArgumentList	"""UsedCount"""		3505843	1					
ANR	3506057	Argument	"""UsedCount"""		3505843	0					
ANR	3506058	PrimaryExpression	"""UsedCount"""		3505843	0					
ANR	3506059	Argument	used_count		3505843	1					
ANR	3506060	Identifier	used_count		3505843	0					
ANR	3506061	CompoundStatement		52:67:1358:1358	3505843	1					
ANR	3506062	ExpressionStatement	"dprintf ( D_ALWAYS , ""WARNING: PruneExpired: No lease count/used for %s\\n"" , name . c_str ( ) )"	1076:3:30670:30771	3505843	0	True				
ANR	3506063	CallExpression	"dprintf ( D_ALWAYS , ""WARNING: PruneExpired: No lease count/used for %s\\n"" , name . c_str ( ) )"		3505843	0					
ANR	3506064	Callee	dprintf		3505843	0					
ANR	3506065	Identifier	dprintf		3505843	0					
ANR	3506066	ArgumentList	D_ALWAYS		3505843	1					
ANR	3506067	Argument	D_ALWAYS		3505843	0					
ANR	3506068	Identifier	D_ALWAYS		3505843	0					
ANR	3506069	Argument	"""WARNING: PruneExpired: No lease count/used for %s\\n"""		3505843	1					
ANR	3506070	PrimaryExpression	"""WARNING: PruneExpired: No lease count/used for %s\\n"""		3505843	0					
ANR	3506071	Argument	name . c_str ( )		3505843	2					
ANR	3506072	CallExpression	name . c_str ( )		3505843	0					
ANR	3506073	Callee	name . c_str		3505843	0					
ANR	3506074	MemberAccess	name . c_str		3505843	0					
ANR	3506075	Identifier	name		3505843	0					
ANR	3506076	Identifier	c_str		3505843	1					
ANR	3506077	ArgumentList			3505843	1					
ANR	3506078	ContinueStatement	continue ;	1079:3:30776:30784	3505843	1	True				
ANR	3506079	IfStatement	if ( lease_count )		3505843	10					
ANR	3506080	Condition	lease_count	1083:7:30856:30866	3505843	0	True				
ANR	3506081	Identifier	lease_count		3505843	0					
ANR	3506082	CompoundStatement		60:21:1563:1563	3505843	1					
ANR	3506083	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""PruneExpired: Invalidating all leases for %s\\n"" , name . c_str ( ) )"	1084:3:30875:30973	3505843	0	True				
ANR	3506084	CallExpression	"dprintf ( D_FULLDEBUG , ""PruneExpired: Invalidating all leases for %s\\n"" , name . c_str ( ) )"		3505843	0					
ANR	3506085	Callee	dprintf		3505843	0					
ANR	3506086	Identifier	dprintf		3505843	0					
ANR	3506087	ArgumentList	D_FULLDEBUG		3505843	1					
ANR	3506088	Argument	D_FULLDEBUG		3505843	0					
ANR	3506089	Identifier	D_FULLDEBUG		3505843	0					
ANR	3506090	Argument	"""PruneExpired: Invalidating all leases for %s\\n"""		3505843	1					
ANR	3506091	PrimaryExpression	"""PruneExpired: Invalidating all leases for %s\\n"""		3505843	0					
ANR	3506092	Argument	name . c_str ( )		3505843	2					
ANR	3506093	CallExpression	name . c_str ( )		3505843	0					
ANR	3506094	Callee	name . c_str		3505843	0					
ANR	3506095	MemberAccess	name . c_str		3505843	0					
ANR	3506096	Identifier	name		3505843	0					
ANR	3506097	Identifier	c_str		3505843	1					
ANR	3506098	ArgumentList			3505843	1					
ANR	3506099	ExpressionStatement	"ad -> InsertAttr ( ""MaxLeases"" , 0 )"	1089:3:31013:31045	3505843	1	True				
ANR	3506100	CallExpression	"ad -> InsertAttr ( ""MaxLeases"" , 0 )"		3505843	0					
ANR	3506101	Callee	ad -> InsertAttr		3505843	0					
ANR	3506102	PtrMemberAccess	ad -> InsertAttr		3505843	0					
ANR	3506103	Identifier	ad		3505843	0					
ANR	3506104	Identifier	InsertAttr		3505843	1					
ANR	3506105	ArgumentList	"""MaxLeases"""		3505843	1					
ANR	3506106	Argument	"""MaxLeases"""		3505843	0					
ANR	3506107	PrimaryExpression	"""MaxLeases"""		3505843	0					
ANR	3506108	Argument	0		3505843	1					
ANR	3506109	PrimaryExpression	0		3505843	0					
ANR	3506110	IfStatement	"if ( SetLeaseStates ( name , 0 , * leases_ad , lease_count ) )"		3505843	2					
ANR	3506111	Condition	"SetLeaseStates ( name , 0 , * leases_ad , lease_count )"	1092:8:31083:31132	3505843	0	True				
ANR	3506112	CallExpression	"SetLeaseStates ( name , 0 , * leases_ad , lease_count )"		3505843	0					
ANR	3506113	Callee	SetLeaseStates		3505843	0					
ANR	3506114	Identifier	SetLeaseStates		3505843	0					
ANR	3506115	ArgumentList	name		3505843	1					
ANR	3506116	Argument	name		3505843	0					
ANR	3506117	Identifier	name		3505843	0					
ANR	3506118	Argument	0		3505843	1					
ANR	3506119	PrimaryExpression	0		3505843	0					
ANR	3506120	Argument	* leases_ad		3505843	2					
ANR	3506121	UnaryOperationExpression	* leases_ad		3505843	0					
ANR	3506122	UnaryOperator	*		3505843	0					
ANR	3506123	Identifier	leases_ad		3505843	1					
ANR	3506124	Argument	lease_count		3505843	3					
ANR	3506125	Identifier	lease_count		3505843	0					
ANR	3506126	CompoundStatement		69:61:1829:1829	3505843	1					
ANR	3506127	ExpressionStatement	"dprintf ( D_ALWAYS , ""PruneExpired: Failed to set lease states for %s\\n"" , name . c_str ( ) )"	1093:4:31142:31243	3505843	0	True				
ANR	3506128	CallExpression	"dprintf ( D_ALWAYS , ""PruneExpired: Failed to set lease states for %s\\n"" , name . c_str ( ) )"		3505843	0					
ANR	3506129	Callee	dprintf		3505843	0					
ANR	3506130	Identifier	dprintf		3505843	0					
ANR	3506131	ArgumentList	D_ALWAYS		3505843	1					
ANR	3506132	Argument	D_ALWAYS		3505843	0					
ANR	3506133	Identifier	D_ALWAYS		3505843	0					
ANR	3506134	Argument	"""PruneExpired: Failed to set lease states for %s\\n"""		3505843	1					
ANR	3506135	PrimaryExpression	"""PruneExpired: Failed to set lease states for %s\\n"""		3505843	0					
ANR	3506136	Argument	name . c_str ( )		3505843	2					
ANR	3506137	CallExpression	name . c_str ( )		3505843	0					
ANR	3506138	Callee	name . c_str		3505843	0					
ANR	3506139	MemberAccess	name . c_str		3505843	0					
ANR	3506140	Identifier	name		3505843	0					
ANR	3506141	Identifier	c_str		3505843	1					
ANR	3506142	ArgumentList			3505843	1					
ANR	3506143	ExpressionStatement	zeroed_count ++	1097:3:31253:31267	3505843	3	True				
ANR	3506144	PostIncDecOperationExpression	zeroed_count ++		3505843	0					
ANR	3506145	Identifier	zeroed_count		3505843	0					
ANR	3506146	IncDec	++		3505843	1					
ANR	3506147	IfStatement	if ( ! used_count )		3505843	11					
ANR	3506148	Condition	! used_count	1101:7:31330:31340	3505843	0	True				
ANR	3506149	UnaryOperationExpression	! used_count		3505843	0					
ANR	3506150	UnaryOperator	!		3505843	0					
ANR	3506151	Identifier	used_count		3505843	1					
ANR	3506152	CompoundStatement		78:21:2037:2037	3505843	1					
ANR	3506153	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""PruneExpired: Pruning expired ad for %s\\n"" , name . c_str ( ) )"	1102:3:31349:31442	3505843	0	True				
ANR	3506154	CallExpression	"dprintf ( D_FULLDEBUG , ""PruneExpired: Pruning expired ad for %s\\n"" , name . c_str ( ) )"		3505843	0					
ANR	3506155	Callee	dprintf		3505843	0					
ANR	3506156	Identifier	dprintf		3505843	0					
ANR	3506157	ArgumentList	D_FULLDEBUG		3505843	1					
ANR	3506158	Argument	D_FULLDEBUG		3505843	0					
ANR	3506159	Identifier	D_FULLDEBUG		3505843	0					
ANR	3506160	Argument	"""PruneExpired: Pruning expired ad for %s\\n"""		3505843	1					
ANR	3506161	PrimaryExpression	"""PruneExpired: Pruning expired ad for %s\\n"""		3505843	0					
ANR	3506162	Argument	name . c_str ( )		3505843	2					
ANR	3506163	CallExpression	name . c_str ( )		3505843	0					
ANR	3506164	Callee	name . c_str		3505843	0					
ANR	3506165	MemberAccess	name . c_str		3505843	0					
ANR	3506166	Identifier	name		3505843	0					
ANR	3506167	Identifier	c_str		3505843	1					
ANR	3506168	ArgumentList			3505843	1					
ANR	3506169	ExpressionStatement	RemoveResourceAd ( name )	1107:3:31476:31500	3505843	1	True				
ANR	3506170	CallExpression	RemoveResourceAd ( name )		3505843	0					
ANR	3506171	Callee	RemoveResourceAd		3505843	0					
ANR	3506172	Identifier	RemoveResourceAd		3505843	0					
ANR	3506173	ArgumentList	name		3505843	1					
ANR	3506174	Argument	name		3505843	0					
ANR	3506175	Identifier	name		3505843	0					
ANR	3506176	ExpressionStatement	RemoveLeasesAd ( name )	1108:3:31505:31527	3505843	2	True				
ANR	3506177	CallExpression	RemoveLeasesAd ( name )		3505843	0					
ANR	3506178	Callee	RemoveLeasesAd		3505843	0					
ANR	3506179	Identifier	RemoveLeasesAd		3505843	0					
ANR	3506180	ArgumentList	name		3505843	1					
ANR	3506181	Argument	name		3505843	0					
ANR	3506182	Identifier	name		3505843	0					
ANR	3506183	ExpressionStatement	m_stats . m_num_resources --	1109:3:31532:31557	3505843	3	True				
ANR	3506184	PostIncDecOperationExpression	m_stats . m_num_resources --		3505843	0					
ANR	3506185	MemberAccess	m_stats . m_num_resources		3505843	0					
ANR	3506186	Identifier	m_stats		3505843	0					
ANR	3506187	Identifier	m_num_resources		3505843	1					
ANR	3506188	IncDec	--		3505843	1					
ANR	3506189	ExpressionStatement	pruned_count ++	1110:3:31562:31576	3505843	4	True				
ANR	3506190	PostIncDecOperationExpression	pruned_count ++		3505843	0					
ANR	3506191	Identifier	pruned_count		3505843	0					
ANR	3506192	IncDec	++		3505843	1					
ANR	3506193	Condition	"QueryNext ( query , key )"	1113:10:31593:31615	3505843	1	True				
ANR	3506194	CallExpression	"QueryNext ( query , key )"		3505843	0					
ANR	3506195	Callee	QueryNext		3505843	0					
ANR	3506196	Identifier	QueryNext		3505843	0					
ANR	3506197	ArgumentList	query		3505843	1					
ANR	3506198	Argument	query		3505843	0					
ANR	3506199	Identifier	query		3505843	0					
ANR	3506200	Argument	key		3505843	1					
ANR	3506201	Identifier	key		3505843	0					
ANR	3506202	ExpressionStatement	"timer . Log ( ""PruneExpired:zeroed"" , zeroed_count )"	1114:1:31621:31669	3505843	10	True				
ANR	3506203	CallExpression	"timer . Log ( ""PruneExpired:zeroed"" , zeroed_count )"		3505843	0					
ANR	3506204	Callee	timer . Log		3505843	0					
ANR	3506205	MemberAccess	timer . Log		3505843	0					
ANR	3506206	Identifier	timer		3505843	0					
ANR	3506207	Identifier	Log		3505843	1					
ANR	3506208	ArgumentList	"""PruneExpired:zeroed"""		3505843	1					
ANR	3506209	Argument	"""PruneExpired:zeroed"""		3505843	0					
ANR	3506210	PrimaryExpression	"""PruneExpired:zeroed"""		3505843	0					
ANR	3506211	Argument	zeroed_count		3505843	1					
ANR	3506212	Identifier	zeroed_count		3505843	0					
ANR	3506213	ExpressionStatement	"timer . Log ( ""PruneExpired:pruned"" , pruned_count )"	1115:1:31672:31720	3505843	11	True				
ANR	3506214	CallExpression	"timer . Log ( ""PruneExpired:pruned"" , pruned_count )"		3505843	0					
ANR	3506215	Callee	timer . Log		3505843	0					
ANR	3506216	MemberAccess	timer . Log		3505843	0					
ANR	3506217	Identifier	timer		3505843	0					
ANR	3506218	Identifier	Log		3505843	1					
ANR	3506219	ArgumentList	"""PruneExpired:pruned"""		3505843	1					
ANR	3506220	Argument	"""PruneExpired:pruned"""		3505843	0					
ANR	3506221	PrimaryExpression	"""PruneExpired:pruned"""		3505843	0					
ANR	3506222	Argument	pruned_count		3505843	1					
ANR	3506223	Identifier	pruned_count		3505843	0					
ANR	3506224	IfStatement	if ( zeroed_count || pruned_count )		3505843	12					
ANR	3506225	Condition	zeroed_count || pruned_count	1117:6:31729:31756	3505843	0	True				
ANR	3506226	OrExpression	zeroed_count || pruned_count		3505843	0		||			
ANR	3506227	Identifier	zeroed_count		3505843	0					
ANR	3506228	Identifier	pruned_count		3505843	1					
ANR	3506229	CompoundStatement		94:37:2453:2453	3505843	1					
ANR	3506230	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Zeroed %d and pruned %d expired resources\\n"" , zeroed_count , pruned_count )"	1118:2:31764:31866	3505843	0	True				
ANR	3506231	CallExpression	"dprintf ( D_FULLDEBUG , ""Zeroed %d and pruned %d expired resources\\n"" , zeroed_count , pruned_count )"		3505843	0					
ANR	3506232	Callee	dprintf		3505843	0					
ANR	3506233	Identifier	dprintf		3505843	0					
ANR	3506234	ArgumentList	D_FULLDEBUG		3505843	1					
ANR	3506235	Argument	D_FULLDEBUG		3505843	0					
ANR	3506236	Identifier	D_FULLDEBUG		3505843	0					
ANR	3506237	Argument	"""Zeroed %d and pruned %d expired resources\\n"""		3505843	1					
ANR	3506238	PrimaryExpression	"""Zeroed %d and pruned %d expired resources\\n"""		3505843	0					
ANR	3506239	Argument	zeroed_count		3505843	2					
ANR	3506240	Identifier	zeroed_count		3505843	0					
ANR	3506241	Argument	pruned_count		3505843	3					
ANR	3506242	Identifier	pruned_count		3505843	0					
ANR	3506243	ReturnStatement	return 0 ;	1122:1:31873:31881	3505843	13	True				
ANR	3506244	PrimaryExpression	0		3505843	0					
ANR	3506245	ReturnType	int		3505843	1					
ANR	3506246	Identifier	LeaseManagerResources :: PruneExpired		3505843	2					
ANR	3506247	ParameterList			3505843	3					
ANR	3506248	CFGEntryNode	ENTRY		3505843		True				
ANR	3506249	CFGExitNode	EXIT		3505843		True				
ANR	3506250	Symbol	m_resources_view		3505843						
ANR	3506251	Symbol	QueryNext		3505843						
ANR	3506252	Symbol	lease_count		3505843						
ANR	3506253	Symbol	* ad		3505843						
ANR	3506254	Symbol	SetLeaseStates		3505843						
ANR	3506255	Symbol	name . c_str		3505843						
ANR	3506256	Symbol	GetLeasesAd		3505843						
ANR	3506257	Symbol	timer		3505843						
ANR	3506258	Symbol	leases_ad -> EvaluateAttrInt		3505843						
ANR	3506259	Symbol	used_count		3505843						
ANR	3506260	Symbol	zeroed_count		3505843						
ANR	3506261	Symbol	pruned_count		3505843						
ANR	3506262	Symbol	key		3505843						
ANR	3506263	Symbol	ad		3505843						
ANR	3506264	Symbol	m_stats		3505843						
ANR	3506265	Symbol	query		3505843						
ANR	3506266	Symbol	D_ALWAYS		3505843						
ANR	3506267	Symbol	m_stats . m_num_resources		3505843						
ANR	3506268	Symbol	D_FULLDEBUG		3505843						
ANR	3506269	Symbol	QueryCurrent		3505843						
ANR	3506270	Symbol	expr_str		3505843						
ANR	3506271	Symbol	* leases_ad		3505843						
ANR	3506272	Symbol	QueryStart		3505843						
ANR	3506273	Symbol	name		3505843						
ANR	3506274	Symbol	ad -> EvaluateAttrString		3505843						
ANR	3506275	Symbol	leases_ad		3505843						
ANR	3506276	Function	LeaseManagerResources :: TerminateLease	1126:0:31926:33719							
ANR	3506277	FunctionDef	LeaseManagerResources :: TerminateLease (LeaseManagerLeaseEnt & lease)		3506276	0					
ANR	3506278	CompoundStatement		1128:0:32000:33719	3506276	0					
ANR	3506279	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Terminating lease @ %p/%p/%p\\n"" , & lease , lease . m_lease_ad , lease . m_leases_ad )"	1129:1:32003:32108	3506276	0	True				
ANR	3506280	CallExpression	"dprintf ( D_FULLDEBUG , ""Terminating lease @ %p/%p/%p\\n"" , & lease , lease . m_lease_ad , lease . m_leases_ad )"		3506276	0					
ANR	3506281	Callee	dprintf		3506276	0					
ANR	3506282	Identifier	dprintf		3506276	0					
ANR	3506283	ArgumentList	D_FULLDEBUG		3506276	1					
ANR	3506284	Argument	D_FULLDEBUG		3506276	0					
ANR	3506285	Identifier	D_FULLDEBUG		3506276	0					
ANR	3506286	Argument	"""Terminating lease @ %p/%p/%p\\n"""		3506276	1					
ANR	3506287	PrimaryExpression	"""Terminating lease @ %p/%p/%p\\n"""		3506276	0					
ANR	3506288	Argument	& lease		3506276	2					
ANR	3506289	UnaryOperationExpression	& lease		3506276	0					
ANR	3506290	UnaryOperator	&		3506276	0					
ANR	3506291	Identifier	lease		3506276	1					
ANR	3506292	Argument	lease . m_lease_ad		3506276	3					
ANR	3506293	MemberAccess	lease . m_lease_ad		3506276	0					
ANR	3506294	Identifier	lease		3506276	0					
ANR	3506295	Identifier	m_lease_ad		3506276	1					
ANR	3506296	Argument	lease . m_leases_ad		3506276	4					
ANR	3506297	MemberAccess	lease . m_leases_ad		3506276	0					
ANR	3506298	Identifier	lease		3506276	0					
ANR	3506299	Identifier	m_leases_ad		3506276	1					
ANR	3506300	IdentifierDeclStatement	string id ;	1131:1:32111:32120	3506276	1	True				
ANR	3506301	IdentifierDecl	id		3506276	0					
ANR	3506302	IdentifierDeclType	string		3506276	0					
ANR	3506303	Identifier	id		3506276	1					
ANR	3506304	ExpressionStatement	"lease . m_lease_ad -> EvaluateAttrString ( ""LeaseId"" , id )"	1132:1:32123:32176	3506276	2	True				
ANR	3506305	CallExpression	"lease . m_lease_ad -> EvaluateAttrString ( ""LeaseId"" , id )"		3506276	0					
ANR	3506306	Callee	lease . m_lease_ad -> EvaluateAttrString		3506276	0					
ANR	3506307	PtrMemberAccess	lease . m_lease_ad -> EvaluateAttrString		3506276	0					
ANR	3506308	MemberAccess	lease . m_lease_ad		3506276	0					
ANR	3506309	Identifier	lease		3506276	0					
ANR	3506310	Identifier	m_lease_ad		3506276	1					
ANR	3506311	Identifier	EvaluateAttrString		3506276	1					
ANR	3506312	ArgumentList	"""LeaseId"""		3506276	1					
ANR	3506313	Argument	"""LeaseId"""		3506276	0					
ANR	3506314	PrimaryExpression	"""LeaseId"""		3506276	0					
ANR	3506315	Argument	id		3506276	1					
ANR	3506316	Identifier	id		3506276	0					
ANR	3506317	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Terminating lease %s\\n"" , id . c_str ( ) )"	1133:1:32179:32239	3506276	3	True				
ANR	3506318	CallExpression	"dprintf ( D_FULLDEBUG , ""Terminating lease %s\\n"" , id . c_str ( ) )"		3506276	0					
ANR	3506319	Callee	dprintf		3506276	0					
ANR	3506320	Identifier	dprintf		3506276	0					
ANR	3506321	ArgumentList	D_FULLDEBUG		3506276	1					
ANR	3506322	Argument	D_FULLDEBUG		3506276	0					
ANR	3506323	Identifier	D_FULLDEBUG		3506276	0					
ANR	3506324	Argument	"""Terminating lease %s\\n"""		3506276	1					
ANR	3506325	PrimaryExpression	"""Terminating lease %s\\n"""		3506276	0					
ANR	3506326	Argument	id . c_str ( )		3506276	2					
ANR	3506327	CallExpression	id . c_str ( )		3506276	0					
ANR	3506328	Callee	id . c_str		3506276	0					
ANR	3506329	MemberAccess	id . c_str		3506276	0					
ANR	3506330	Identifier	id		3506276	0					
ANR	3506331	Identifier	c_str		3506276	1					
ANR	3506332	ArgumentList			3506276	1					
ANR	3506333	Statement	classad	1135:1:32243:32249	3506276	4	True				
ANR	3506334	Statement	::	1135:8:32250:32251	3506276	5	True				
ANR	3506335	Statement	ClassAd	1135:10:32252:32258	3506276	6	True				
ANR	3506336	Statement	*	1135:18:32260:32260	3506276	7	True				
ANR	3506337	Statement	updates	1135:19:32261:32267	3506276	8	True				
ANR	3506338	Statement	=	1135:27:32269:32269	3506276	9	True				
ANR	3506339	Statement	new	1135:29:32271:32273	3506276	10	True				
ANR	3506340	ExpressionStatement	classad :: ClassAd	1135:33:32275:32291	3506276	11	True				
ANR	3506341	Identifier	classad :: ClassAd		3506276	0					
ANR	3506342	ExpressionStatement	"updates -> InsertAttr ( ""LeaseUsed"" , false )"	1136:1:32294:32335	3506276	12	True				
ANR	3506343	CallExpression	"updates -> InsertAttr ( ""LeaseUsed"" , false )"		3506276	0					
ANR	3506344	Callee	updates -> InsertAttr		3506276	0					
ANR	3506345	PtrMemberAccess	updates -> InsertAttr		3506276	0					
ANR	3506346	Identifier	updates		3506276	0					
ANR	3506347	Identifier	InsertAttr		3506276	1					
ANR	3506348	ArgumentList	"""LeaseUsed"""		3506276	1					
ANR	3506349	Argument	"""LeaseUsed"""		3506276	0					
ANR	3506350	PrimaryExpression	"""LeaseUsed"""		3506276	0					
ANR	3506351	Argument	false		3506276	1					
ANR	3506352	Identifier	false		3506276	0					
ANR	3506353	ExpressionStatement	"updates -> InsertAttr ( ""LeaseStartTime"" , 0 )"	1137:1:32338:32380	3506276	13	True				
ANR	3506354	CallExpression	"updates -> InsertAttr ( ""LeaseStartTime"" , 0 )"		3506276	0					
ANR	3506355	Callee	updates -> InsertAttr		3506276	0					
ANR	3506356	PtrMemberAccess	updates -> InsertAttr		3506276	0					
ANR	3506357	Identifier	updates		3506276	0					
ANR	3506358	Identifier	InsertAttr		3506276	1					
ANR	3506359	ArgumentList	"""LeaseStartTime"""		3506276	1					
ANR	3506360	Argument	"""LeaseStartTime"""		3506276	0					
ANR	3506361	PrimaryExpression	"""LeaseStartTime"""		3506276	0					
ANR	3506362	Argument	0		3506276	1					
ANR	3506363	PrimaryExpression	0		3506276	0					
ANR	3506364	ExpressionStatement	"updates -> InsertAttr ( ""Requestor"" , """" )"	1138:1:32383:32421	3506276	14	True				
ANR	3506365	CallExpression	"updates -> InsertAttr ( ""Requestor"" , """" )"		3506276	0					
ANR	3506366	Callee	updates -> InsertAttr		3506276	0					
ANR	3506367	PtrMemberAccess	updates -> InsertAttr		3506276	0					
ANR	3506368	Identifier	updates		3506276	0					
ANR	3506369	Identifier	InsertAttr		3506276	1					
ANR	3506370	ArgumentList	"""Requestor"""		3506276	1					
ANR	3506371	Argument	"""Requestor"""		3506276	0					
ANR	3506372	PrimaryExpression	"""Requestor"""		3506276	0					
ANR	3506373	Argument	""""""		3506276	1					
ANR	3506374	PrimaryExpression	""""""		3506276	0					
ANR	3506375	IfStatement	"if ( ! UpdateLeaseAd ( lease . m_resource_name , lease . m_lease_number , updates ) )"		3506276	15					
ANR	3506376	Condition	"! UpdateLeaseAd ( lease . m_resource_name , lease . m_lease_number , updates )"	1139:6:32429:32512	3506276	0	True				
ANR	3506377	UnaryOperationExpression	"! UpdateLeaseAd ( lease . m_resource_name , lease . m_lease_number , updates )"		3506276	0					
ANR	3506378	UnaryOperator	!		3506276	0					
ANR	3506379	CallExpression	"UpdateLeaseAd ( lease . m_resource_name , lease . m_lease_number , updates )"		3506276	1					
ANR	3506380	Callee	UpdateLeaseAd		3506276	0					
ANR	3506381	Identifier	UpdateLeaseAd		3506276	0					
ANR	3506382	ArgumentList	lease . m_resource_name		3506276	1					
ANR	3506383	Argument	lease . m_resource_name		3506276	0					
ANR	3506384	MemberAccess	lease . m_resource_name		3506276	0					
ANR	3506385	Identifier	lease		3506276	0					
ANR	3506386	Identifier	m_resource_name		3506276	1					
ANR	3506387	Argument	lease . m_lease_number		3506276	1					
ANR	3506388	MemberAccess	lease . m_lease_number		3506276	0					
ANR	3506389	Identifier	lease		3506276	0					
ANR	3506390	Identifier	m_lease_number		3506276	1					
ANR	3506391	Argument	updates		3506276	2					
ANR	3506392	Identifier	updates		3506276	0					
ANR	3506393	CompoundStatement		14:19:515:515	3506276	1					
ANR	3506394	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error updating lease %s\\n"" , id . c_str ( ) )"	1142:2:32520:32580	3506276	0	True				
ANR	3506395	CallExpression	"dprintf ( D_ALWAYS , ""Error updating lease %s\\n"" , id . c_str ( ) )"		3506276	0					
ANR	3506396	Callee	dprintf		3506276	0					
ANR	3506397	Identifier	dprintf		3506276	0					
ANR	3506398	ArgumentList	D_ALWAYS		3506276	1					
ANR	3506399	Argument	D_ALWAYS		3506276	0					
ANR	3506400	Identifier	D_ALWAYS		3506276	0					
ANR	3506401	Argument	"""Error updating lease %s\\n"""		3506276	1					
ANR	3506402	PrimaryExpression	"""Error updating lease %s\\n"""		3506276	0					
ANR	3506403	Argument	id . c_str ( )		3506276	2					
ANR	3506404	CallExpression	id . c_str ( )		3506276	0					
ANR	3506405	Callee	id . c_str		3506276	0					
ANR	3506406	MemberAccess	id . c_str		3506276	0					
ANR	3506407	Identifier	id		3506276	0					
ANR	3506408	Identifier	c_str		3506276	1					
ANR	3506409	ArgumentList			3506276	1					
ANR	3506410	IdentifierDeclStatement	int used_count ;	1145:1:32587:32602	3506276	16	True				
ANR	3506411	IdentifierDecl	used_count		3506276	0					
ANR	3506412	IdentifierDeclType	int		3506276	0					
ANR	3506413	Identifier	used_count		3506276	1					
ANR	3506414	IfStatement	"if ( ! lease . m_leases_ad -> EvaluateAttrInt ( ""UsedCount"" , used_count ) )"		3506276	17					
ANR	3506415	Condition	"! lease . m_leases_ad -> EvaluateAttrInt ( ""UsedCount"" , used_count )"	1146:6:32610:32671	3506276	0	True				
ANR	3506416	UnaryOperationExpression	"! lease . m_leases_ad -> EvaluateAttrInt ( ""UsedCount"" , used_count )"		3506276	0					
ANR	3506417	UnaryOperator	!		3506276	0					
ANR	3506418	CallExpression	"lease . m_leases_ad -> EvaluateAttrInt ( ""UsedCount"" , used_count )"		3506276	1					
ANR	3506419	Callee	lease . m_leases_ad -> EvaluateAttrInt		3506276	0					
ANR	3506420	PtrMemberAccess	lease . m_leases_ad -> EvaluateAttrInt		3506276	0					
ANR	3506421	MemberAccess	lease . m_leases_ad		3506276	0					
ANR	3506422	Identifier	lease		3506276	0					
ANR	3506423	Identifier	m_leases_ad		3506276	1					
ANR	3506424	Identifier	EvaluateAttrInt		3506276	1					
ANR	3506425	ArgumentList	"""UsedCount"""		3506276	1					
ANR	3506426	Argument	"""UsedCount"""		3506276	0					
ANR	3506427	PrimaryExpression	"""UsedCount"""		3506276	0					
ANR	3506428	Argument	used_count		3506276	1					
ANR	3506429	Identifier	used_count		3506276	0					
ANR	3506430	CompoundStatement		19:71:674:674	3506276	1					
ANR	3506431	ExpressionStatement	"dprintf ( D_ALWAYS , ""TerminateLease: No 'UsedCount' in leases ad"" )"	1147:2:32679:32745	3506276	0	True				
ANR	3506432	CallExpression	"dprintf ( D_ALWAYS , ""TerminateLease: No 'UsedCount' in leases ad"" )"		3506276	0					
ANR	3506433	Callee	dprintf		3506276	0					
ANR	3506434	Identifier	dprintf		3506276	0					
ANR	3506435	ArgumentList	D_ALWAYS		3506276	1					
ANR	3506436	Argument	D_ALWAYS		3506276	0					
ANR	3506437	Identifier	D_ALWAYS		3506276	0					
ANR	3506438	Argument	"""TerminateLease: No 'UsedCount' in leases ad"""		3506276	1					
ANR	3506439	PrimaryExpression	"""TerminateLease: No 'UsedCount' in leases ad"""		3506276	0					
ANR	3506440	ReturnStatement	return false ;	1148:2:32749:32761	3506276	1	True				
ANR	3506441	Identifier	false		3506276	0					
ANR	3506442	IdentifierDeclStatement	classad :: ClassAd * resource_ad = GetResourceAd ( lease . m_resource_name ) ;	1152:1:32792:32862	3506276	18	True				
ANR	3506443	IdentifierDecl	* resource_ad = GetResourceAd ( lease . m_resource_name )		3506276	0					
ANR	3506444	IdentifierDeclType	classad :: ClassAd *		3506276	0					
ANR	3506445	Identifier	resource_ad		3506276	1					
ANR	3506446	AssignmentExpression	* resource_ad = GetResourceAd ( lease . m_resource_name )		3506276	2		=			
ANR	3506447	Identifier	resource_ad		3506276	0					
ANR	3506448	CallExpression	GetResourceAd ( lease . m_resource_name )		3506276	1					
ANR	3506449	Callee	GetResourceAd		3506276	0					
ANR	3506450	Identifier	GetResourceAd		3506276	0					
ANR	3506451	ArgumentList	lease . m_resource_name		3506276	1					
ANR	3506452	Argument	lease . m_resource_name		3506276	0					
ANR	3506453	MemberAccess	lease . m_resource_name		3506276	0					
ANR	3506454	Identifier	lease		3506276	0					
ANR	3506455	Identifier	m_resource_name		3506276	1					
ANR	3506456	IfStatement	if ( ! resource_ad )		3506276	19					
ANR	3506457	Condition	! resource_ad	1153:6:32870:32881	3506276	0	True				
ANR	3506458	UnaryOperationExpression	! resource_ad		3506276	0					
ANR	3506459	UnaryOperator	!		3506276	0					
ANR	3506460	Identifier	resource_ad		3506276	1					
ANR	3506461	CompoundStatement		26:21:884:884	3506276	1					
ANR	3506462	ExpressionStatement	"dprintf ( D_ALWAYS , ""TerminateLease: Can't find resource '%s'\\n"" , lease . m_resource_name . c_str ( ) )"	1154:2:32889:32990	3506276	0	True				
ANR	3506463	CallExpression	"dprintf ( D_ALWAYS , ""TerminateLease: Can't find resource '%s'\\n"" , lease . m_resource_name . c_str ( ) )"		3506276	0					
ANR	3506464	Callee	dprintf		3506276	0					
ANR	3506465	Identifier	dprintf		3506276	0					
ANR	3506466	ArgumentList	D_ALWAYS		3506276	1					
ANR	3506467	Argument	D_ALWAYS		3506276	0					
ANR	3506468	Identifier	D_ALWAYS		3506276	0					
ANR	3506469	Argument	"""TerminateLease: Can't find resource '%s'\\n"""		3506276	1					
ANR	3506470	PrimaryExpression	"""TerminateLease: Can't find resource '%s'\\n"""		3506276	0					
ANR	3506471	Argument	lease . m_resource_name . c_str ( )		3506276	2					
ANR	3506472	CallExpression	lease . m_resource_name . c_str ( )		3506276	0					
ANR	3506473	Callee	lease . m_resource_name . c_str		3506276	0					
ANR	3506474	MemberAccess	lease . m_resource_name . c_str		3506276	0					
ANR	3506475	MemberAccess	lease . m_resource_name		3506276	0					
ANR	3506476	Identifier	lease		3506276	0					
ANR	3506477	Identifier	m_resource_name		3506276	1					
ANR	3506478	Identifier	c_str		3506276	1					
ANR	3506479	ArgumentList			3506276	1					
ANR	3506480	ReturnStatement	return false ;	1156:2:32994:33006	3506276	1	True				
ANR	3506481	Identifier	false		3506276	0					
ANR	3506482	ExpressionStatement	m_stats . m_num_busy_leases --	1160:1:33039:33066	3506276	20	True				
ANR	3506483	PostIncDecOperationExpression	m_stats . m_num_busy_leases --		3506276	0					
ANR	3506484	MemberAccess	m_stats . m_num_busy_leases		3506276	0					
ANR	3506485	Identifier	m_stats		3506276	0					
ANR	3506486	Identifier	m_num_busy_leases		3506276	1					
ANR	3506487	IncDec	--		3506276	1					
ANR	3506488	ExpressionStatement	used_count --	1161:1:33069:33081	3506276	21	True				
ANR	3506489	PostIncDecOperationExpression	used_count --		3506276	0					
ANR	3506490	Identifier	used_count		3506276	0					
ANR	3506491	IncDec	--		3506276	1					
ANR	3506492	Statement	updates	1164:1:33110:33116	3506276	22	True				
ANR	3506493	Statement	=	1164:9:33118:33118	3506276	23	True				
ANR	3506494	Statement	new	1164:11:33120:33122	3506276	24	True				
ANR	3506495	ExpressionStatement	classad :: ClassAd	1164:15:33124:33140	3506276	25	True				
ANR	3506496	Identifier	classad :: ClassAd		3506276	0					
ANR	3506497	ExpressionStatement	"updates -> InsertAttr ( ""UsedCount"" , used_count )"	1165:1:33143:33189	3506276	26	True				
ANR	3506498	CallExpression	"updates -> InsertAttr ( ""UsedCount"" , used_count )"		3506276	0					
ANR	3506499	Callee	updates -> InsertAttr		3506276	0					
ANR	3506500	PtrMemberAccess	updates -> InsertAttr		3506276	0					
ANR	3506501	Identifier	updates		3506276	0					
ANR	3506502	Identifier	InsertAttr		3506276	1					
ANR	3506503	ArgumentList	"""UsedCount"""		3506276	1					
ANR	3506504	Argument	"""UsedCount"""		3506276	0					
ANR	3506505	PrimaryExpression	"""UsedCount"""		3506276	0					
ANR	3506506	Argument	used_count		3506276	1					
ANR	3506507	Identifier	used_count		3506276	0					
ANR	3506508	IfStatement	"if ( ! UpdateLeasesAd ( lease . m_resource_name , updates ) )"		3506276	27					
ANR	3506509	Condition	"! UpdateLeasesAd ( lease . m_resource_name , updates )"	1166:6:33197:33245	3506276	0	True				
ANR	3506510	UnaryOperationExpression	"! UpdateLeasesAd ( lease . m_resource_name , updates )"		3506276	0					
ANR	3506511	UnaryOperator	!		3506276	0					
ANR	3506512	CallExpression	"UpdateLeasesAd ( lease . m_resource_name , updates )"		3506276	1					
ANR	3506513	Callee	UpdateLeasesAd		3506276	0					
ANR	3506514	Identifier	UpdateLeasesAd		3506276	0					
ANR	3506515	ArgumentList	lease . m_resource_name		3506276	1					
ANR	3506516	Argument	lease . m_resource_name		3506276	0					
ANR	3506517	MemberAccess	lease . m_resource_name		3506276	0					
ANR	3506518	Identifier	lease		3506276	0					
ANR	3506519	Identifier	m_resource_name		3506276	1					
ANR	3506520	Argument	updates		3506276	1					
ANR	3506521	Identifier	updates		3506276	0					
ANR	3506522	CompoundStatement		39:58:1248:1248	3506276	1					
ANR	3506523	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to update leases in collection for %s\\n"" , lease . m_resource_name . c_str ( ) )"	1167:2:33253:33358	3506276	0	True				
ANR	3506524	CallExpression	"dprintf ( D_ALWAYS , ""Failed to update leases in collection for %s\\n"" , lease . m_resource_name . c_str ( ) )"		3506276	0					
ANR	3506525	Callee	dprintf		3506276	0					
ANR	3506526	Identifier	dprintf		3506276	0					
ANR	3506527	ArgumentList	D_ALWAYS		3506276	1					
ANR	3506528	Argument	D_ALWAYS		3506276	0					
ANR	3506529	Identifier	D_ALWAYS		3506276	0					
ANR	3506530	Argument	"""Failed to update leases in collection for %s\\n"""		3506276	1					
ANR	3506531	PrimaryExpression	"""Failed to update leases in collection for %s\\n"""		3506276	0					
ANR	3506532	Argument	lease . m_resource_name . c_str ( )		3506276	2					
ANR	3506533	CallExpression	lease . m_resource_name . c_str ( )		3506276	0					
ANR	3506534	Callee	lease . m_resource_name . c_str		3506276	0					
ANR	3506535	MemberAccess	lease . m_resource_name . c_str		3506276	0					
ANR	3506536	MemberAccess	lease . m_resource_name		3506276	0					
ANR	3506537	Identifier	lease		3506276	0					
ANR	3506538	Identifier	m_resource_name		3506276	1					
ANR	3506539	Identifier	c_str		3506276	1					
ANR	3506540	ArgumentList			3506276	1					
ANR	3506541	Statement	updates	1173:1:33393:33399	3506276	28	True				
ANR	3506542	Statement	=	1173:9:33401:33401	3506276	29	True				
ANR	3506543	Statement	new	1173:11:33403:33405	3506276	30	True				
ANR	3506544	ExpressionStatement	classad :: ClassAd	1173:15:33407:33423	3506276	31	True				
ANR	3506545	Identifier	classad :: ClassAd		3506276	0					
ANR	3506546	ExpressionStatement	"updates -> InsertAttr ( ""_LeasesUsed"" , used_count )"	1174:1:33426:33474	3506276	32	True				
ANR	3506547	CallExpression	"updates -> InsertAttr ( ""_LeasesUsed"" , used_count )"		3506276	0					
ANR	3506548	Callee	updates -> InsertAttr		3506276	0					
ANR	3506549	PtrMemberAccess	updates -> InsertAttr		3506276	0					
ANR	3506550	Identifier	updates		3506276	0					
ANR	3506551	Identifier	InsertAttr		3506276	1					
ANR	3506552	ArgumentList	"""_LeasesUsed"""		3506276	1					
ANR	3506553	Argument	"""_LeasesUsed"""		3506276	0					
ANR	3506554	PrimaryExpression	"""_LeasesUsed"""		3506276	0					
ANR	3506555	Argument	used_count		3506276	1					
ANR	3506556	Identifier	used_count		3506276	0					
ANR	3506557	IfStatement	"if ( ! UpdateResourceAd ( lease . m_resource_name , updates ) )"		3506276	33					
ANR	3506558	Condition	"! UpdateResourceAd ( lease . m_resource_name , updates )"	1175:6:33482:33532	3506276	0	True				
ANR	3506559	UnaryOperationExpression	"! UpdateResourceAd ( lease . m_resource_name , updates )"		3506276	0					
ANR	3506560	UnaryOperator	!		3506276	0					
ANR	3506561	CallExpression	"UpdateResourceAd ( lease . m_resource_name , updates )"		3506276	1					
ANR	3506562	Callee	UpdateResourceAd		3506276	0					
ANR	3506563	Identifier	UpdateResourceAd		3506276	0					
ANR	3506564	ArgumentList	lease . m_resource_name		3506276	1					
ANR	3506565	Argument	lease . m_resource_name		3506276	0					
ANR	3506566	MemberAccess	lease . m_resource_name		3506276	0					
ANR	3506567	Identifier	lease		3506276	0					
ANR	3506568	Identifier	m_resource_name		3506276	1					
ANR	3506569	Argument	updates		3506276	1					
ANR	3506570	Identifier	updates		3506276	0					
ANR	3506571	CompoundStatement		48:60:1535:1535	3506276	1					
ANR	3506572	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to update resource in collection for %s\\n"" , lease . m_resource_name . c_str ( ) )"	1176:2:33540:33647	3506276	0	True				
ANR	3506573	CallExpression	"dprintf ( D_ALWAYS , ""Failed to update resource in collection for %s\\n"" , lease . m_resource_name . c_str ( ) )"		3506276	0					
ANR	3506574	Callee	dprintf		3506276	0					
ANR	3506575	Identifier	dprintf		3506276	0					
ANR	3506576	ArgumentList	D_ALWAYS		3506276	1					
ANR	3506577	Argument	D_ALWAYS		3506276	0					
ANR	3506578	Identifier	D_ALWAYS		3506276	0					
ANR	3506579	Argument	"""Failed to update resource in collection for %s\\n"""		3506276	1					
ANR	3506580	PrimaryExpression	"""Failed to update resource in collection for %s\\n"""		3506276	0					
ANR	3506581	Argument	lease . m_resource_name . c_str ( )		3506276	2					
ANR	3506582	CallExpression	lease . m_resource_name . c_str ( )		3506276	0					
ANR	3506583	Callee	lease . m_resource_name . c_str		3506276	0					
ANR	3506584	MemberAccess	lease . m_resource_name . c_str		3506276	0					
ANR	3506585	MemberAccess	lease . m_resource_name		3506276	0					
ANR	3506586	Identifier	lease		3506276	0					
ANR	3506587	Identifier	m_resource_name		3506276	1					
ANR	3506588	Identifier	c_str		3506276	1					
ANR	3506589	ArgumentList			3506276	1					
ANR	3506590	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Done terminating lease\\n"" )"	1179:1:33653:33703	3506276	34	True				
ANR	3506591	CallExpression	"dprintf ( D_FULLDEBUG , ""Done terminating lease\\n"" )"		3506276	0					
ANR	3506592	Callee	dprintf		3506276	0					
ANR	3506593	Identifier	dprintf		3506276	0					
ANR	3506594	ArgumentList	D_FULLDEBUG		3506276	1					
ANR	3506595	Argument	D_FULLDEBUG		3506276	0					
ANR	3506596	Identifier	D_FULLDEBUG		3506276	0					
ANR	3506597	Argument	"""Done terminating lease\\n"""		3506276	1					
ANR	3506598	PrimaryExpression	"""Done terminating lease\\n"""		3506276	0					
ANR	3506599	ReturnStatement	return true ;	1180:1:33706:33717	3506276	35	True				
ANR	3506600	Identifier	true		3506276	0					
ANR	3506601	ReturnType	bool		3506276	1					
ANR	3506602	Identifier	LeaseManagerResources :: TerminateLease		3506276	2					
ANR	3506603	ParameterList	LeaseManagerLeaseEnt & lease		3506276	3					
ANR	3506604	Parameter	LeaseManagerLeaseEnt & lease	1127:39:31970:31996	3506276	0	True				
ANR	3506605	ParameterType	LeaseManagerLeaseEnt &		3506276	0					
ANR	3506606	Identifier	lease		3506276	1					
ANR	3506607	CFGEntryNode	ENTRY		3506276		True				
ANR	3506608	CFGExitNode	EXIT		3506276		True				
ANR	3506609	Symbol	id . c_str		3506276						
ANR	3506610	Symbol	& lease		3506276						
ANR	3506611	Symbol	updates		3506276						
ANR	3506612	Symbol	* lease . m_leases_ad		3506276						
ANR	3506613	Symbol	lease . m_leases_ad		3506276						
ANR	3506614	Symbol	GetResourceAd		3506276						
ANR	3506615	Symbol	lease . m_resource_name . c_str		3506276						
ANR	3506616	Symbol	UpdateLeaseAd		3506276						
ANR	3506617	Symbol	UpdateResourceAd		3506276						
ANR	3506618	Symbol	used_count		3506276						
ANR	3506619	Symbol	id		3506276						
ANR	3506620	Symbol	m_stats . m_num_busy_leases		3506276						
ANR	3506621	Symbol	lease . m_lease_number		3506276						
ANR	3506622	Symbol	resource_ad		3506276						
ANR	3506623	Symbol	lease . m_lease_ad		3506276						
ANR	3506624	Symbol	m_stats		3506276						
ANR	3506625	Symbol	lease . m_leases_ad -> EvaluateAttrInt		3506276						
ANR	3506626	Symbol	* lease		3506276						
ANR	3506627	Symbol	UpdateLeasesAd		3506276						
ANR	3506628	Symbol	false		3506276						
ANR	3506629	Symbol	D_ALWAYS		3506276						
ANR	3506630	Symbol	D_FULLDEBUG		3506276						
ANR	3506631	Symbol	true		3506276						
ANR	3506632	Symbol	lease . m_resource_name		3506276						
ANR	3506633	Symbol	lease		3506276						
ANR	3506634	Function	LeaseManagerResources :: QueryStart	1184:0:33748:34402							
ANR	3506635	FunctionDef	"LeaseManagerResources :: QueryStart (classad :: LocalCollectionQuery & query , classad :: ViewName & view , const string & expr_str)"		3506634	0					
ANR	3506636	CompoundStatement		1189:0:33886:34402	3506634	0					
ANR	3506637	ExpressionStatement	query . Bind ( & m_collection )	1190:1:33889:33916	3506634	0	True				
ANR	3506638	CallExpression	query . Bind ( & m_collection )		3506634	0					
ANR	3506639	Callee	query . Bind		3506634	0					
ANR	3506640	MemberAccess	query . Bind		3506634	0					
ANR	3506641	Identifier	query		3506634	0					
ANR	3506642	Identifier	Bind		3506634	1					
ANR	3506643	ArgumentList	& m_collection		3506634	1					
ANR	3506644	Argument	& m_collection		3506634	0					
ANR	3506645	UnaryOperationExpression	& m_collection		3506634	0					
ANR	3506646	UnaryOperator	&		3506634	0					
ANR	3506647	Identifier	m_collection		3506634	1					
ANR	3506648	IdentifierDeclStatement	classad :: ClassAdParser parser ;	1193:1:33976:34005	3506634	1	True				
ANR	3506649	IdentifierDecl	parser		3506634	0					
ANR	3506650	IdentifierDeclType	classad :: ClassAdParser		3506634	0					
ANR	3506651	Identifier	parser		3506634	1					
ANR	3506652	IdentifierDeclStatement	"classad :: ExprTree * expr = parser . ParseExpression ( expr_str , true ) ;"	1194:1:34008:34074	3506634	2	True				
ANR	3506653	IdentifierDecl	"* expr = parser . ParseExpression ( expr_str , true )"		3506634	0					
ANR	3506654	IdentifierDeclType	classad :: ExprTree *		3506634	0					
ANR	3506655	Identifier	expr		3506634	1					
ANR	3506656	AssignmentExpression	"* expr = parser . ParseExpression ( expr_str , true )"		3506634	2		=			
ANR	3506657	Identifier	expr		3506634	0					
ANR	3506658	CallExpression	"parser . ParseExpression ( expr_str , true )"		3506634	1					
ANR	3506659	Callee	parser . ParseExpression		3506634	0					
ANR	3506660	MemberAccess	parser . ParseExpression		3506634	0					
ANR	3506661	Identifier	parser		3506634	0					
ANR	3506662	Identifier	ParseExpression		3506634	1					
ANR	3506663	ArgumentList	expr_str		3506634	1					
ANR	3506664	Argument	expr_str		3506634	0					
ANR	3506665	Identifier	expr_str		3506634	0					
ANR	3506666	Argument	true		3506634	1					
ANR	3506667	Identifier	true		3506634	0					
ANR	3506668	IfStatement	if ( ! expr )		3506634	3					
ANR	3506669	Condition	! expr	1195:6:34082:34086	3506634	0	True				
ANR	3506670	UnaryOperationExpression	! expr		3506634	0					
ANR	3506671	UnaryOperator	!		3506634	0					
ANR	3506672	Identifier	expr		3506634	1					
ANR	3506673	CompoundStatement		7:14:203:203	3506634	1					
ANR	3506674	ExpressionStatement	"dprintf ( D_ALWAYS , ""Can't find evaluate query expression '%s'\\n"" , expr_str . c_str ( ) )"	1196:2:34094:34183	3506634	0	True				
ANR	3506675	CallExpression	"dprintf ( D_ALWAYS , ""Can't find evaluate query expression '%s'\\n"" , expr_str . c_str ( ) )"		3506634	0					
ANR	3506676	Callee	dprintf		3506634	0					
ANR	3506677	Identifier	dprintf		3506634	0					
ANR	3506678	ArgumentList	D_ALWAYS		3506634	1					
ANR	3506679	Argument	D_ALWAYS		3506634	0					
ANR	3506680	Identifier	D_ALWAYS		3506634	0					
ANR	3506681	Argument	"""Can't find evaluate query expression '%s'\\n"""		3506634	1					
ANR	3506682	PrimaryExpression	"""Can't find evaluate query expression '%s'\\n"""		3506634	0					
ANR	3506683	Argument	expr_str . c_str ( )		3506634	2					
ANR	3506684	CallExpression	expr_str . c_str ( )		3506634	0					
ANR	3506685	Callee	expr_str . c_str		3506634	0					
ANR	3506686	MemberAccess	expr_str . c_str		3506634	0					
ANR	3506687	Identifier	expr_str		3506634	0					
ANR	3506688	Identifier	c_str		3506634	1					
ANR	3506689	ArgumentList			3506634	1					
ANR	3506690	ReturnStatement	return false ;	1198:2:34187:34199	3506634	1	True				
ANR	3506691	Identifier	false		3506634	0					
ANR	3506692	IfStatement	"if ( ! query . Query ( view , expr ) )"		3506634	4					
ANR	3506693	Condition	"! query . Query ( view , expr )"	1202:6:34238:34264	3506634	0	True				
ANR	3506694	UnaryOperationExpression	"! query . Query ( view , expr )"		3506634	0					
ANR	3506695	UnaryOperator	!		3506634	0					
ANR	3506696	CallExpression	"query . Query ( view , expr )"		3506634	1					
ANR	3506697	Callee	query . Query		3506634	0					
ANR	3506698	MemberAccess	query . Query		3506634	0					
ANR	3506699	Identifier	query		3506634	0					
ANR	3506700	Identifier	Query		3506634	1					
ANR	3506701	ArgumentList	view		3506634	1					
ANR	3506702	Argument	view		3506634	0					
ANR	3506703	Identifier	view		3506634	0					
ANR	3506704	Argument	expr		3506634	1					
ANR	3506705	Identifier	expr		3506634	0					
ANR	3506706	CompoundStatement		14:36:381:381	3506634	1					
ANR	3506707	ExpressionStatement	"dprintf ( D_ALWAYS , ""query::Query() failed\\n"" )"	1203:2:34272:34318	3506634	0	True				
ANR	3506708	CallExpression	"dprintf ( D_ALWAYS , ""query::Query() failed\\n"" )"		3506634	0					
ANR	3506709	Callee	dprintf		3506634	0					
ANR	3506710	Identifier	dprintf		3506634	0					
ANR	3506711	ArgumentList	D_ALWAYS		3506634	1					
ANR	3506712	Argument	D_ALWAYS		3506634	0					
ANR	3506713	Identifier	D_ALWAYS		3506634	0					
ANR	3506714	Argument	"""query::Query() failed\\n"""		3506634	1					
ANR	3506715	PrimaryExpression	"""query::Query() failed\\n"""		3506634	0					
ANR	3506716	Statement	delete	1204:2:34322:34327	3506634	1	True				
ANR	3506717	ExpressionStatement	expr	1204:9:34329:34333	3506634	2	True				
ANR	3506718	Identifier	expr		3506634	0					
ANR	3506719	ReturnStatement	return false ;	1205:2:34337:34349	3506634	3	True				
ANR	3506720	Identifier	false		3506634	0					
ANR	3506721	ExpressionStatement	query . ToFirst ( )	1207:1:34355:34371	3506634	5	True				
ANR	3506722	CallExpression	query . ToFirst ( )		3506634	0					
ANR	3506723	Callee	query . ToFirst		3506634	0					
ANR	3506724	MemberAccess	query . ToFirst		3506634	0					
ANR	3506725	Identifier	query		3506634	0					
ANR	3506726	Identifier	ToFirst		3506634	1					
ANR	3506727	ArgumentList			3506634	1					
ANR	3506728	Statement	delete	1209:1:34375:34380	3506634	6	True				
ANR	3506729	ExpressionStatement	expr	1209:8:34382:34386	3506634	7	True				
ANR	3506730	Identifier	expr		3506634	0					
ANR	3506731	ReturnStatement	return true ;	1210:1:34389:34400	3506634	8	True				
ANR	3506732	Identifier	true		3506634	0					
ANR	3506733	ReturnType	bool		3506634	1					
ANR	3506734	Identifier	LeaseManagerResources :: QueryStart		3506634	2					
ANR	3506735	ParameterList	"classad :: LocalCollectionQuery & query , classad :: ViewName & view , const string & expr_str"		3506634	3					
ANR	3506736	Parameter	classad :: LocalCollectionQuery & query	1186:1:33789:33824	3506634	0	True				
ANR	3506737	ParameterType	classad :: LocalCollectionQuery &		3506634	0					
ANR	3506738	Identifier	query		3506634	1					
ANR	3506739	Parameter	classad :: ViewName & view	1187:1:33828:33853	3506634	1	True				
ANR	3506740	ParameterType	classad :: ViewName &		3506634	0					
ANR	3506741	Identifier	view		3506634	1					
ANR	3506742	Parameter	const string & expr_str	1188:1:33857:33882	3506634	2	True				
ANR	3506743	ParameterType	const string &		3506634	0					
ANR	3506744	Identifier	expr_str		3506634	1					
ANR	3506745	CFGEntryNode	ENTRY		3506634		True				
ANR	3506746	CFGExitNode	EXIT		3506634		True				
ANR	3506747	Symbol	view		3506634						
ANR	3506748	Symbol	expr_str		3506634						
ANR	3506749	Symbol	parser		3506634						
ANR	3506750	Symbol	parser . ParseExpression		3506634						
ANR	3506751	Symbol	query		3506634						
ANR	3506752	Symbol	query . Query		3506634						
ANR	3506753	Symbol	true		3506634						
ANR	3506754	Symbol	D_ALWAYS		3506634						
ANR	3506755	Symbol	false		3506634						
ANR	3506756	Symbol	expr		3506634						
ANR	3506757	Symbol	expr_str . c_str		3506634						
ANR	3506758	Symbol	& m_collection		3506634						
ANR	3506759	Function	LeaseManagerResources :: QueryCurrent	1213:0:34405:34651							
ANR	3506760	FunctionDef	"LeaseManagerResources :: QueryCurrent (classad :: LocalCollectionQuery & query , string & key)"		3506759	0					
ANR	3506761	CompoundStatement		1216:0:34529:34651	3506759	0					
ANR	3506762	IfStatement	if ( ! query . Current ( key ) )		3506759	0					
ANR	3506763	Condition	! query . Current ( key )	1218:6:34567:34587	3506759	0	True				
ANR	3506764	UnaryOperationExpression	! query . Current ( key )		3506759	0					
ANR	3506765	UnaryOperator	!		3506759	0					
ANR	3506766	CallExpression	query . Current ( key )		3506759	1					
ANR	3506767	Callee	query . Current		3506759	0					
ANR	3506768	MemberAccess	query . Current		3506759	0					
ANR	3506769	Identifier	query		3506759	0					
ANR	3506770	Identifier	Current		3506759	1					
ANR	3506771	ArgumentList	key		3506759	1					
ANR	3506772	Argument	key		3506759	0					
ANR	3506773	Identifier	key		3506759	0					
ANR	3506774	CompoundStatement		3:30:61:61	3506759	1					
ANR	3506775	ReturnStatement	return NULL ;	1219:2:34595:34606	3506759	0	True				
ANR	3506776	Identifier	NULL		3506759	0					
ANR	3506777	ReturnStatement	return m_collection . GetClassAd ( key ) ;	1221:1:34612:34649	3506759	1	True				
ANR	3506778	CallExpression	m_collection . GetClassAd ( key )		3506759	0					
ANR	3506779	Callee	m_collection . GetClassAd		3506759	0					
ANR	3506780	MemberAccess	m_collection . GetClassAd		3506759	0					
ANR	3506781	Identifier	m_collection		3506759	0					
ANR	3506782	Identifier	GetClassAd		3506759	1					
ANR	3506783	ArgumentList	key		3506759	1					
ANR	3506784	Argument	key		3506759	0					
ANR	3506785	Identifier	key		3506759	0					
ANR	3506786	ReturnType	classad :: ClassAd *		3506759	1					
ANR	3506787	Identifier	LeaseManagerResources :: QueryCurrent		3506759	2					
ANR	3506788	ParameterList	"classad :: LocalCollectionQuery & query , string & key"		3506759	3					
ANR	3506789	Parameter	classad :: LocalCollectionQuery & query	1214:37:34461:34496	3506759	0	True				
ANR	3506790	ParameterType	classad :: LocalCollectionQuery &		3506759	0					
ANR	3506791	Identifier	query		3506759	1					
ANR	3506792	Parameter	string & key	1215:10:34509:34525	3506759	1	True				
ANR	3506793	ParameterType	string &		3506759	0					
ANR	3506794	Identifier	key		3506759	1					
ANR	3506795	CFGEntryNode	ENTRY		3506759		True				
ANR	3506796	CFGExitNode	EXIT		3506759		True				
ANR	3506797	Symbol	NULL		3506759						
ANR	3506798	Symbol	query		3506759						
ANR	3506799	Symbol	m_collection		3506759						
ANR	3506800	Symbol	m_collection . GetClassAd		3506759						
ANR	3506801	Symbol	key		3506759						
ANR	3506802	Symbol	query . Current		3506759						
ANR	3506803	Function	LeaseManagerResources :: QueryNext	1224:0:34654:34788							
ANR	3506804	FunctionDef	"LeaseManagerResources :: QueryNext (classad :: LocalCollectionQuery & query , string & key)"		3506803	0					
ANR	3506805	CompoundStatement		1227:0:34759:34788	3506803	0					
ANR	3506806	ReturnStatement	return query . Next ( key ) ;	1228:1:34762:34786	3506803	0	True				
ANR	3506807	CallExpression	query . Next ( key )		3506803	0					
ANR	3506808	Callee	query . Next		3506803	0					
ANR	3506809	MemberAccess	query . Next		3506803	0					
ANR	3506810	Identifier	query		3506803	0					
ANR	3506811	Identifier	Next		3506803	1					
ANR	3506812	ArgumentList	key		3506803	1					
ANR	3506813	Argument	key		3506803	0					
ANR	3506814	Identifier	key		3506803	0					
ANR	3506815	ReturnType	bool		3506803	1					
ANR	3506816	Identifier	LeaseManagerResources :: QueryNext		3506803	2					
ANR	3506817	ParameterList	"classad :: LocalCollectionQuery & query , string & key"		3506803	3					
ANR	3506818	Parameter	classad :: LocalCollectionQuery & query	1225:34:34693:34728	3506803	0	True				
ANR	3506819	ParameterType	classad :: LocalCollectionQuery &		3506803	0					
ANR	3506820	Identifier	query		3506803	1					
ANR	3506821	Parameter	string & key	1226:10:34741:34756	3506803	1	True				
ANR	3506822	ParameterType	string &		3506803	0					
ANR	3506823	Identifier	key		3506803	1					
ANR	3506824	CFGEntryNode	ENTRY		3506803		True				
ANR	3506825	CFGExitNode	EXIT		3506803		True				
ANR	3506826	Symbol	query . Next		3506803						
ANR	3506827	Symbol	query		3506803						
ANR	3506828	Symbol	key		3506803						
ANR	3506829	Function	LeaseManagerResources :: FindLease	1234:0:34919:35239							
ANR	3506830	FunctionDef	LeaseManagerResources :: FindLease (const LeaseManagerLease & in_lease)		3506829	0					
ANR	3506831	CompoundStatement		1236:0:35012:35239	3506829	0					
ANR	3506832	IdentifierDeclStatement	"map < string , LeaseManagerLeaseEnt * , less < string > > :: iterator iter ;"	1238:1:35016:35080	3506829	0	True				
ANR	3506833	IdentifierDecl	iter		3506829	0					
ANR	3506834	IdentifierDeclType	"map < string , LeaseManagerLeaseEnt * , less < string > > :: iterator"		3506829	0					
ANR	3506835	Identifier	iter		3506829	1					
ANR	3506836	ExpressionStatement	iter = m_used_leases . find ( in_lease . getLeaseId ( ) )	1239:1:35083:35133	3506829	1	True				
ANR	3506837	AssignmentExpression	iter = m_used_leases . find ( in_lease . getLeaseId ( ) )		3506829	0		=			
ANR	3506838	Identifier	iter		3506829	0					
ANR	3506839	CallExpression	m_used_leases . find ( in_lease . getLeaseId ( ) )		3506829	1					
ANR	3506840	Callee	m_used_leases . find		3506829	0					
ANR	3506841	MemberAccess	m_used_leases . find		3506829	0					
ANR	3506842	Identifier	m_used_leases		3506829	0					
ANR	3506843	Identifier	find		3506829	1					
ANR	3506844	ArgumentList	in_lease . getLeaseId ( )		3506829	1					
ANR	3506845	Argument	in_lease . getLeaseId ( )		3506829	0					
ANR	3506846	CallExpression	in_lease . getLeaseId ( )		3506829	0					
ANR	3506847	Callee	in_lease . getLeaseId		3506829	0					
ANR	3506848	MemberAccess	in_lease . getLeaseId		3506829	0					
ANR	3506849	Identifier	in_lease		3506829	0					
ANR	3506850	Identifier	getLeaseId		3506829	1					
ANR	3506851	ArgumentList			3506829	1					
ANR	3506852	IfStatement	if ( iter != m_used_leases . end ( ) )		3506829	2					
ANR	3506853	Condition	iter != m_used_leases . end ( )	1240:6:35141:35167	3506829	0	True				
ANR	3506854	EqualityExpression	iter != m_used_leases . end ( )		3506829	0		!=			
ANR	3506855	Identifier	iter		3506829	0					
ANR	3506856	CallExpression	m_used_leases . end ( )		3506829	1					
ANR	3506857	Callee	m_used_leases . end		3506829	0					
ANR	3506858	MemberAccess	m_used_leases . end		3506829	0					
ANR	3506859	Identifier	m_used_leases		3506829	0					
ANR	3506860	Identifier	end		3506829	1					
ANR	3506861	ArgumentList			3506829	1					
ANR	3506862	CompoundStatement		5:36:158:158	3506829	1					
ANR	3506863	ReturnStatement	return m_used_leases [ in_lease . getLeaseId ( ) ] ;	1241:2:35175:35220	3506829	0	True				
ANR	3506864	ArrayIndexing	m_used_leases [ in_lease . getLeaseId ( ) ]		3506829	0					
ANR	3506865	Identifier	m_used_leases		3506829	0					
ANR	3506866	CallExpression	in_lease . getLeaseId ( )		3506829	1					
ANR	3506867	Callee	in_lease . getLeaseId		3506829	0					
ANR	3506868	MemberAccess	in_lease . getLeaseId		3506829	0					
ANR	3506869	Identifier	in_lease		3506829	0					
ANR	3506870	Identifier	getLeaseId		3506829	1					
ANR	3506871	ArgumentList			3506829	1					
ANR	3506872	ReturnStatement	return NULL ;	1243:1:35226:35237	3506829	3	True				
ANR	3506873	Identifier	NULL		3506829	0					
ANR	3506874	ReturnType	LeaseManagerLeaseEnt *		3506829	1					
ANR	3506875	Identifier	LeaseManagerResources :: FindLease		3506829	2					
ANR	3506876	ParameterList	const LeaseManagerLease & in_lease		3506829	3					
ANR	3506877	Parameter	const LeaseManagerLease & in_lease	1235:34:34976:35008	3506829	0	True				
ANR	3506878	ParameterType	const LeaseManagerLease &		3506829	0					
ANR	3506879	Identifier	in_lease		3506829	1					
ANR	3506880	CFGEntryNode	ENTRY		3506829		True				
ANR	3506881	CFGExitNode	EXIT		3506829		True				
ANR	3506882	Symbol	m_used_leases . find		3506829						
ANR	3506883	Symbol	* in_lease . getLeaseId		3506829						
ANR	3506884	Symbol	* m_used_leases		3506829						
ANR	3506885	Symbol	NULL		3506829						
ANR	3506886	Symbol	in_lease		3506829						
ANR	3506887	Symbol	* in_lease		3506829						
ANR	3506888	Symbol	iter		3506829						
ANR	3506889	Symbol	m_used_leases . end		3506829						
ANR	3506890	Symbol	m_used_leases		3506829						
ANR	3506891	Symbol	in_lease . getLeaseId		3506829						
ANR	3506892	Function	LeaseManagerResources :: GetLeaseDuration	1246:0:35242:35483							
ANR	3506893	FunctionDef	"LeaseManagerResources :: GetLeaseDuration (const classad :: ClassAd & resource_ad , const LeaseManagerLease & request)"		3506892	0					
ANR	3506894	CompoundStatement		1249:0:35370:35483	3506892	0					
ANR	3506895	IdentifierDeclStatement	int requested_duration = request . getDuration ( ) ;	1250:1:35373:35420	3506892	0	True				
ANR	3506896	IdentifierDecl	requested_duration = request . getDuration ( )		3506892	0					
ANR	3506897	IdentifierDeclType	int		3506892	0					
ANR	3506898	Identifier	requested_duration		3506892	1					
ANR	3506899	AssignmentExpression	requested_duration = request . getDuration ( )		3506892	2		=			
ANR	3506900	Identifier	requested_duration		3506892	0					
ANR	3506901	CallExpression	request . getDuration ( )		3506892	1					
ANR	3506902	Callee	request . getDuration		3506892	0					
ANR	3506903	MemberAccess	request . getDuration		3506892	0					
ANR	3506904	Identifier	request		3506892	0					
ANR	3506905	Identifier	getDuration		3506892	1					
ANR	3506906	ArgumentList			3506892	1					
ANR	3506907	ReturnStatement	"return GetLeaseDuration ( resource_ad , requested_duration ) ;"	1251:1:35423:35481	3506892	1	True				
ANR	3506908	CallExpression	"GetLeaseDuration ( resource_ad , requested_duration )"		3506892	0					
ANR	3506909	Callee	GetLeaseDuration		3506892	0					
ANR	3506910	Identifier	GetLeaseDuration		3506892	0					
ANR	3506911	ArgumentList	resource_ad		3506892	1					
ANR	3506912	Argument	resource_ad		3506892	0					
ANR	3506913	Identifier	resource_ad		3506892	0					
ANR	3506914	Argument	requested_duration		3506892	1					
ANR	3506915	Identifier	requested_duration		3506892	0					
ANR	3506916	ReturnType	int		3506892	1					
ANR	3506917	Identifier	LeaseManagerResources :: GetLeaseDuration		3506892	2					
ANR	3506918	ParameterList	"const classad :: ClassAd & resource_ad , const LeaseManagerLease & request"		3506892	3					
ANR	3506919	Parameter	const classad :: ClassAd & resource_ad	1247:41:35287:35321	3506892	0	True				
ANR	3506920	ParameterType	const classad :: ClassAd &		3506892	0					
ANR	3506921	Identifier	resource_ad		3506892	1					
ANR	3506922	Parameter	const LeaseManagerLease & request	1248:11:35335:35366	3506892	1	True				
ANR	3506923	ParameterType	const LeaseManagerLease &		3506892	0					
ANR	3506924	Identifier	request		3506892	1					
ANR	3506925	CFGEntryNode	ENTRY		3506892		True				
ANR	3506926	CFGExitNode	EXIT		3506892		True				
ANR	3506927	Symbol	requested_duration		3506892						
ANR	3506928	Symbol	request . getDuration		3506892						
ANR	3506929	Symbol	resource_ad		3506892						
ANR	3506930	Symbol	request		3506892						
ANR	3506931	Symbol	GetLeaseDuration		3506892						
ANR	3506932	Function	LeaseManagerResources :: GetLeaseDuration	1254:0:35486:35778							
ANR	3506933	FunctionDef	"LeaseManagerResources :: GetLeaseDuration (const classad :: ClassAd & resource_ad , const classad :: ClassAd & request_ad)"		3506932	0					
ANR	3506934	CompoundStatement		1257:0:35616:35778	3506932	0					
ANR	3506935	IdentifierDeclStatement	int requested_duration = - 1 ;	1258:1:35619:35646	3506932	0	True				
ANR	3506936	IdentifierDecl	requested_duration = - 1		3506932	0					
ANR	3506937	IdentifierDeclType	int		3506932	0					
ANR	3506938	Identifier	requested_duration		3506932	1					
ANR	3506939	AssignmentExpression	requested_duration = - 1		3506932	2		=			
ANR	3506940	Identifier	requested_duration		3506932	0					
ANR	3506941	UnaryOperationExpression	- 1		3506932	1					
ANR	3506942	UnaryOperator	-		3506932	0					
ANR	3506943	PrimaryExpression	1		3506932	1					
ANR	3506944	ExpressionStatement	"request_ad . EvaluateAttrInt ( ""LeaseDuration"" , requested_duration )"	1259:1:35649:35714	3506932	1	True				
ANR	3506945	CallExpression	"request_ad . EvaluateAttrInt ( ""LeaseDuration"" , requested_duration )"		3506932	0					
ANR	3506946	Callee	request_ad . EvaluateAttrInt		3506932	0					
ANR	3506947	MemberAccess	request_ad . EvaluateAttrInt		3506932	0					
ANR	3506948	Identifier	request_ad		3506932	0					
ANR	3506949	Identifier	EvaluateAttrInt		3506932	1					
ANR	3506950	ArgumentList	"""LeaseDuration"""		3506932	1					
ANR	3506951	Argument	"""LeaseDuration"""		3506932	0					
ANR	3506952	PrimaryExpression	"""LeaseDuration"""		3506932	0					
ANR	3506953	Argument	requested_duration		3506932	1					
ANR	3506954	Identifier	requested_duration		3506932	0					
ANR	3506955	ReturnStatement	"return GetLeaseDuration ( resource_ad , requested_duration ) ;"	1261:1:35718:35776	3506932	2	True				
ANR	3506956	CallExpression	"GetLeaseDuration ( resource_ad , requested_duration )"		3506932	0					
ANR	3506957	Callee	GetLeaseDuration		3506932	0					
ANR	3506958	Identifier	GetLeaseDuration		3506932	0					
ANR	3506959	ArgumentList	resource_ad		3506932	1					
ANR	3506960	Argument	resource_ad		3506932	0					
ANR	3506961	Identifier	resource_ad		3506932	0					
ANR	3506962	Argument	requested_duration		3506932	1					
ANR	3506963	Identifier	requested_duration		3506932	0					
ANR	3506964	ReturnType	int		3506932	1					
ANR	3506965	Identifier	LeaseManagerResources :: GetLeaseDuration		3506932	2					
ANR	3506966	ParameterList	"const classad :: ClassAd & resource_ad , const classad :: ClassAd & request_ad"		3506932	3					
ANR	3506967	Parameter	const classad :: ClassAd & resource_ad	1255:41:35531:35565	3506932	0	True				
ANR	3506968	ParameterType	const classad :: ClassAd &		3506932	0					
ANR	3506969	Identifier	resource_ad		3506932	1					
ANR	3506970	Parameter	const classad :: ClassAd & request_ad	1256:11:35579:35612	3506932	1	True				
ANR	3506971	ParameterType	const classad :: ClassAd &		3506932	0					
ANR	3506972	Identifier	request_ad		3506932	1					
ANR	3506973	CFGEntryNode	ENTRY		3506932		True				
ANR	3506974	CFGExitNode	EXIT		3506932		True				
ANR	3506975	Symbol	requested_duration		3506932						
ANR	3506976	Symbol	resource_ad		3506932						
ANR	3506977	Symbol	request_ad		3506932						
ANR	3506978	Symbol	GetLeaseDuration		3506932						
ANR	3506979	Function	LeaseManagerResources :: GetLeaseDuration	1264:0:35781:36444							
ANR	3506980	FunctionDef	"LeaseManagerResources :: GetLeaseDuration (const classad :: ClassAd & resource_ad , int requested_duration)"		3506979	0					
ANR	3506981	CompoundStatement		1267:0:35899:36444	3506979	0					
ANR	3506982	IdentifierDeclStatement	int resource_max_duration = - 1 ;	1268:1:35902:35932	3506979	0	True				
ANR	3506983	IdentifierDecl	resource_max_duration = - 1		3506979	0					
ANR	3506984	IdentifierDeclType	int		3506979	0					
ANR	3506985	Identifier	resource_max_duration		3506979	1					
ANR	3506986	AssignmentExpression	resource_max_duration = - 1		3506979	2		=			
ANR	3506987	Identifier	resource_max_duration		3506979	0					
ANR	3506988	UnaryOperationExpression	- 1		3506979	1					
ANR	3506989	UnaryOperator	-		3506979	0					
ANR	3506990	PrimaryExpression	1		3506979	1					
ANR	3506991	ExpressionStatement	"resource_ad . EvaluateAttrInt ( ""MaxLeaseDuration"" , resource_max_duration )"	1269:1:35935:36007	3506979	1	True				
ANR	3506992	CallExpression	"resource_ad . EvaluateAttrInt ( ""MaxLeaseDuration"" , resource_max_duration )"		3506979	0					
ANR	3506993	Callee	resource_ad . EvaluateAttrInt		3506979	0					
ANR	3506994	MemberAccess	resource_ad . EvaluateAttrInt		3506979	0					
ANR	3506995	Identifier	resource_ad		3506979	0					
ANR	3506996	Identifier	EvaluateAttrInt		3506979	1					
ANR	3506997	ArgumentList	"""MaxLeaseDuration"""		3506979	1					
ANR	3506998	Argument	"""MaxLeaseDuration"""		3506979	0					
ANR	3506999	PrimaryExpression	"""MaxLeaseDuration"""		3506979	0					
ANR	3507000	Argument	resource_max_duration		3506979	1					
ANR	3507001	Identifier	resource_max_duration		3506979	0					
ANR	3507002	IdentifierDeclStatement	int max_duration ;	1271:1:36011:36027	3506979	2	True				
ANR	3507003	IdentifierDecl	max_duration		3506979	0					
ANR	3507004	IdentifierDeclType	int		3506979	0					
ANR	3507005	Identifier	max_duration		3506979	1					
ANR	3507006	IfStatement	if ( resource_max_duration > 0 )		3506979	3					
ANR	3507007	Condition	resource_max_duration > 0	1272:6:36035:36059	3506979	0	True				
ANR	3507008	RelationalExpression	resource_max_duration > 0		3506979	0		>			
ANR	3507009	Identifier	resource_max_duration		3506979	0					
ANR	3507010	PrimaryExpression	0		3506979	1					
ANR	3507011	CompoundStatement		6:34:163:163	3506979	1					
ANR	3507012	ExpressionStatement	max_duration = resource_max_duration	1273:2:36067:36103	3506979	0	True				
ANR	3507013	AssignmentExpression	max_duration = resource_max_duration		3506979	0		=			
ANR	3507014	Identifier	max_duration		3506979	0					
ANR	3507015	Identifier	resource_max_duration		3506979	1					
ANR	3507016	ElseStatement	else		3506979	0					
ANR	3507017	CompoundStatement		8:8:213:213	3506979	0					
ANR	3507018	ExpressionStatement	max_duration = m_default_max_lease_duration	1275:2:36117:36160	3506979	0	True				
ANR	3507019	AssignmentExpression	max_duration = m_default_max_lease_duration		3506979	0		=			
ANR	3507020	Identifier	max_duration		3506979	0					
ANR	3507021	Identifier	m_default_max_lease_duration		3506979	1					
ANR	3507022	IfStatement	if ( max_duration > m_max_lease_duration )		3506979	4					
ANR	3507023	Condition	max_duration > m_max_lease_duration	1277:6:36171:36205	3506979	0	True				
ANR	3507024	RelationalExpression	max_duration > m_max_lease_duration		3506979	0		>			
ANR	3507025	Identifier	max_duration		3506979	0					
ANR	3507026	Identifier	m_max_lease_duration		3506979	1					
ANR	3507027	CompoundStatement		11:44:309:309	3506979	1					
ANR	3507028	ExpressionStatement	max_duration = m_max_lease_duration	1278:2:36213:36248	3506979	0	True				
ANR	3507029	AssignmentExpression	max_duration = m_max_lease_duration		3506979	0		=			
ANR	3507030	Identifier	max_duration		3506979	0					
ANR	3507031	Identifier	m_max_lease_duration		3506979	1					
ANR	3507032	IdentifierDeclStatement	int duration ;	1281:1:36255:36267	3506979	5	True				
ANR	3507033	IdentifierDecl	duration		3506979	0					
ANR	3507034	IdentifierDeclType	int		3506979	0					
ANR	3507035	Identifier	duration		3506979	1					
ANR	3507036	IfStatement	if ( ( requested_duration > 0 ) && ( requested_duration < max_duration ) )		3506979	6					
ANR	3507037	Condition	( requested_duration > 0 ) && ( requested_duration < max_duration )	1282:7:36276:36346	3506979	0	True				
ANR	3507038	AndExpression	( requested_duration > 0 ) && ( requested_duration < max_duration )		3506979	0		&&			
ANR	3507039	RelationalExpression	requested_duration > 0		3506979	0		>			
ANR	3507040	Identifier	requested_duration		3506979	0					
ANR	3507041	PrimaryExpression	0		3506979	1					
ANR	3507042	RelationalExpression	requested_duration < max_duration		3506979	1		<			
ANR	3507043	Identifier	requested_duration		3506979	0					
ANR	3507044	Identifier	max_duration		3506979	1					
ANR	3507045	CompoundStatement		17:44:450:450	3506979	1					
ANR	3507046	ExpressionStatement	duration = requested_duration	1284:2:36354:36383	3506979	0	True				
ANR	3507047	AssignmentExpression	duration = requested_duration		3506979	0		=			
ANR	3507048	Identifier	duration		3506979	0					
ANR	3507049	Identifier	requested_duration		3506979	1					
ANR	3507050	ElseStatement	else		3506979	0					
ANR	3507051	CompoundStatement		19:8:493:493	3506979	0					
ANR	3507052	ExpressionStatement	duration = max_duration	1286:2:36397:36420	3506979	0	True				
ANR	3507053	AssignmentExpression	duration = max_duration		3506979	0		=			
ANR	3507054	Identifier	duration		3506979	0					
ANR	3507055	Identifier	max_duration		3506979	1					
ANR	3507056	ReturnStatement	return duration ;	1289:1:36427:36442	3506979	7	True				
ANR	3507057	Identifier	duration		3506979	0					
ANR	3507058	ReturnType	int		3506979	1					
ANR	3507059	Identifier	LeaseManagerResources :: GetLeaseDuration		3506979	2					
ANR	3507060	ParameterList	"const classad :: ClassAd & resource_ad , int requested_duration"		3506979	3					
ANR	3507061	Parameter	const classad :: ClassAd & resource_ad	1265:41:35826:35860	3506979	0	True				
ANR	3507062	ParameterType	const classad :: ClassAd &		3506979	0					
ANR	3507063	Identifier	resource_ad		3506979	1					
ANR	3507064	Parameter	int requested_duration	1266:11:35874:35895	3506979	1	True				
ANR	3507065	ParameterType	int		3506979	0					
ANR	3507066	Identifier	requested_duration		3506979	1					
ANR	3507067	CFGEntryNode	ENTRY		3506979		True				
ANR	3507068	CFGExitNode	EXIT		3506979		True				
ANR	3507069	Symbol	requested_duration		3506979						
ANR	3507070	Symbol	duration		3506979						
ANR	3507071	Symbol	resource_ad		3506979						
ANR	3507072	Symbol	resource_max_duration		3506979						
ANR	3507073	Symbol	m_default_max_lease_duration		3506979						
ANR	3507074	Symbol	m_max_lease_duration		3506979						
ANR	3507075	Symbol	max_duration		3506979						
ANR	3507076	Function	LeaseManagerResources :: GetResourceAd	1293:0:36448:36603							
ANR	3507077	FunctionDef	LeaseManagerResources :: GetResourceAd (const string & name)		3507076	0					
ANR	3507078	CompoundStatement		1295:0:36526:36603	3507076	0					
ANR	3507079	IdentifierDeclStatement	"string key = ""Resources/"" + name ;"	1296:1:36529:36561	3507076	0	True				
ANR	3507080	IdentifierDecl	"key = ""Resources/"" + name"		3507076	0					
ANR	3507081	IdentifierDeclType	string		3507076	0					
ANR	3507082	Identifier	key		3507076	1					
ANR	3507083	AssignmentExpression	"key = ""Resources/"" + name"		3507076	2		=			
ANR	3507084	Identifier	key		3507076	0					
ANR	3507085	AdditiveExpression	"""Resources/"" + name"		3507076	1		+			
ANR	3507086	PrimaryExpression	"""Resources/"""		3507076	0					
ANR	3507087	Identifier	name		3507076	1					
ANR	3507088	ReturnStatement	return m_collection . GetClassAd ( key ) ;	1297:1:36564:36601	3507076	1	True				
ANR	3507089	CallExpression	m_collection . GetClassAd ( key )		3507076	0					
ANR	3507090	Callee	m_collection . GetClassAd		3507076	0					
ANR	3507091	MemberAccess	m_collection . GetClassAd		3507076	0					
ANR	3507092	Identifier	m_collection		3507076	0					
ANR	3507093	Identifier	GetClassAd		3507076	1					
ANR	3507094	ArgumentList	key		3507076	1					
ANR	3507095	Argument	key		3507076	0					
ANR	3507096	Identifier	key		3507076	0					
ANR	3507097	ReturnType	classad :: ClassAd *		3507076	1					
ANR	3507098	Identifier	LeaseManagerResources :: GetResourceAd		3507076	2					
ANR	3507099	ParameterList	const string & name		3507076	3					
ANR	3507100	Parameter	const string & name	1294:38:36505:36522	3507076	0	True				
ANR	3507101	ParameterType	const string &		3507076	0					
ANR	3507102	Identifier	name		3507076	1					
ANR	3507103	CFGEntryNode	ENTRY		3507076		True				
ANR	3507104	CFGExitNode	EXIT		3507076		True				
ANR	3507105	Symbol	m_collection		3507076						
ANR	3507106	Symbol	name		3507076						
ANR	3507107	Symbol	m_collection . GetClassAd		3507076						
ANR	3507108	Symbol	key		3507076						
ANR	3507109	Function	LeaseManagerResources :: InsertResourceAd	1300:0:36606:36787							
ANR	3507110	FunctionDef	"LeaseManagerResources :: InsertResourceAd (const string & name , classad :: ClassAd * ad)"		3507109	0					
ANR	3507111	CompoundStatement		1303:0:36706:36787	3507109	0					
ANR	3507112	IdentifierDeclStatement	"string key = ""Resources/"" + name ;"	1304:1:36709:36741	3507109	0	True				
ANR	3507113	IdentifierDecl	"key = ""Resources/"" + name"		3507109	0					
ANR	3507114	IdentifierDeclType	string		3507109	0					
ANR	3507115	Identifier	key		3507109	1					
ANR	3507116	AssignmentExpression	"key = ""Resources/"" + name"		3507109	2		=			
ANR	3507117	Identifier	key		3507109	0					
ANR	3507118	AdditiveExpression	"""Resources/"" + name"		3507109	1		+			
ANR	3507119	PrimaryExpression	"""Resources/"""		3507109	0					
ANR	3507120	Identifier	name		3507109	1					
ANR	3507121	ReturnStatement	"return m_collection . AddClassAd ( key , ad ) ;"	1305:1:36744:36785	3507109	1	True				
ANR	3507122	CallExpression	"m_collection . AddClassAd ( key , ad )"		3507109	0					
ANR	3507123	Callee	m_collection . AddClassAd		3507109	0					
ANR	3507124	MemberAccess	m_collection . AddClassAd		3507109	0					
ANR	3507125	Identifier	m_collection		3507109	0					
ANR	3507126	Identifier	AddClassAd		3507109	1					
ANR	3507127	ArgumentList	key		3507109	1					
ANR	3507128	Argument	key		3507109	0					
ANR	3507129	Identifier	key		3507109	0					
ANR	3507130	Argument	ad		3507109	1					
ANR	3507131	Identifier	ad		3507109	0					
ANR	3507132	ReturnType	bool		3507109	1					
ANR	3507133	Identifier	LeaseManagerResources :: InsertResourceAd		3507109	2					
ANR	3507134	ParameterList	"const string & name , classad :: ClassAd * ad"		3507109	3					
ANR	3507135	Parameter	const string & name	1301:41:36652:36669	3507109	0	True				
ANR	3507136	ParameterType	const string &		3507109	0					
ANR	3507137	Identifier	name		3507109	1					
ANR	3507138	Parameter	classad :: ClassAd * ad	1302:11:36683:36702	3507109	1	True				
ANR	3507139	ParameterType	classad :: ClassAd *		3507109	0					
ANR	3507140	Identifier	ad		3507109	1					
ANR	3507141	CFGEntryNode	ENTRY		3507109		True				
ANR	3507142	CFGExitNode	EXIT		3507109		True				
ANR	3507143	Symbol	ad		3507109						
ANR	3507144	Symbol	m_collection . AddClassAd		3507109						
ANR	3507145	Symbol	m_collection		3507109						
ANR	3507146	Symbol	name		3507109						
ANR	3507147	Symbol	key		3507109						
ANR	3507148	Function	LeaseManagerResources :: RemoveResourceAd	1308:0:36790:36937							
ANR	3507149	FunctionDef	LeaseManagerResources :: RemoveResourceAd (const string & name)		3507148	0					
ANR	3507150	CompoundStatement		1310:0:36857:36937	3507148	0					
ANR	3507151	IdentifierDeclStatement	"string key = ""Resources/"" + name ;"	1311:1:36860:36892	3507148	0	True				
ANR	3507152	IdentifierDecl	"key = ""Resources/"" + name"		3507148	0					
ANR	3507153	IdentifierDeclType	string		3507148	0					
ANR	3507154	Identifier	key		3507148	1					
ANR	3507155	AssignmentExpression	"key = ""Resources/"" + name"		3507148	2		=			
ANR	3507156	Identifier	key		3507148	0					
ANR	3507157	AdditiveExpression	"""Resources/"" + name"		3507148	1		+			
ANR	3507158	PrimaryExpression	"""Resources/"""		3507148	0					
ANR	3507159	Identifier	name		3507148	1					
ANR	3507160	ReturnStatement	return m_collection . RemoveClassAd ( key ) ;	1312:1:36895:36935	3507148	1	True				
ANR	3507161	CallExpression	m_collection . RemoveClassAd ( key )		3507148	0					
ANR	3507162	Callee	m_collection . RemoveClassAd		3507148	0					
ANR	3507163	MemberAccess	m_collection . RemoveClassAd		3507148	0					
ANR	3507164	Identifier	m_collection		3507148	0					
ANR	3507165	Identifier	RemoveClassAd		3507148	1					
ANR	3507166	ArgumentList	key		3507148	1					
ANR	3507167	Argument	key		3507148	0					
ANR	3507168	Identifier	key		3507148	0					
ANR	3507169	ReturnType	bool		3507148	1					
ANR	3507170	Identifier	LeaseManagerResources :: RemoveResourceAd		3507148	2					
ANR	3507171	ParameterList	const string & name		3507148	3					
ANR	3507172	Parameter	const string & name	1309:41:36836:36853	3507148	0	True				
ANR	3507173	ParameterType	const string &		3507148	0					
ANR	3507174	Identifier	name		3507148	1					
ANR	3507175	CFGEntryNode	ENTRY		3507148		True				
ANR	3507176	CFGExitNode	EXIT		3507148		True				
ANR	3507177	Symbol	m_collection		3507148						
ANR	3507178	Symbol	name		3507148						
ANR	3507179	Symbol	key		3507148						
ANR	3507180	Symbol	m_collection . RemoveClassAd		3507148						
ANR	3507181	Function	LeaseManagerResources :: UpdateResourceAd	1315:0:36940:37202							
ANR	3507182	FunctionDef	"LeaseManagerResources :: UpdateResourceAd (const string & name , const classad :: ClassAd & delta)"		3507181	0					
ANR	3507183	CompoundStatement		1318:0:37050:37202	3507181	0					
ANR	3507184	IdentifierDeclStatement	classad :: ClassAd * copy = new classad :: ClassAd ( delta ) ;	1320:1:37106:37160	3507181	0	True				
ANR	3507185	IdentifierDecl	* copy = new classad :: ClassAd ( delta )		3507181	0					
ANR	3507186	IdentifierDeclType	classad :: ClassAd *		3507181	0					
ANR	3507187	Identifier	copy		3507181	1					
ANR	3507188	AssignmentExpression	* copy = new classad :: ClassAd ( delta )		3507181	2		=			
ANR	3507189	Identifier	delta		3507181	0					
ANR	3507190	Identifier	delta		3507181	1					
ANR	3507191	ReturnStatement	"return UpdateResourceAd ( name , copy ) ;"	1321:1:37163:37200	3507181	1	True				
ANR	3507192	CallExpression	"UpdateResourceAd ( name , copy )"		3507181	0					
ANR	3507193	Callee	UpdateResourceAd		3507181	0					
ANR	3507194	Identifier	UpdateResourceAd		3507181	0					
ANR	3507195	ArgumentList	name		3507181	1					
ANR	3507196	Argument	name		3507181	0					
ANR	3507197	Identifier	name		3507181	0					
ANR	3507198	Argument	copy		3507181	1					
ANR	3507199	Identifier	copy		3507181	0					
ANR	3507200	ReturnType	bool		3507181	1					
ANR	3507201	Identifier	LeaseManagerResources :: UpdateResourceAd		3507181	2					
ANR	3507202	ParameterList	"const string & name , const classad :: ClassAd & delta"		3507181	3					
ANR	3507203	Parameter	const string & name	1316:41:36986:37003	3507181	0	True				
ANR	3507204	ParameterType	const string &		3507181	0					
ANR	3507205	Identifier	name		3507181	1					
ANR	3507206	Parameter	const classad :: ClassAd & delta	1317:12:37018:37046	3507181	1	True				
ANR	3507207	ParameterType	const classad :: ClassAd &		3507181	0					
ANR	3507208	Identifier	delta		3507181	1					
ANR	3507209	CFGEntryNode	ENTRY		3507181		True				
ANR	3507210	CFGExitNode	EXIT		3507181		True				
ANR	3507211	Symbol	UpdateResourceAd		3507181						
ANR	3507212	Symbol	name		3507181						
ANR	3507213	Symbol	delta		3507181						
ANR	3507214	Symbol	copy		3507181						
ANR	3507215	Function	LeaseManagerResources :: UpdateResourceAd	1324:0:37205:37591							
ANR	3507216	FunctionDef	"LeaseManagerResources :: UpdateResourceAd (const string & name , classad :: ClassAd * delta)"		3507215	0					
ANR	3507217	CompoundStatement		1327:0:37308:37591	3507215	0					
ANR	3507218	IdentifierDeclStatement	"string key = ""Resources/"" + name ;"	1328:1:37311:37343	3507215	0	True				
ANR	3507219	IdentifierDecl	"key = ""Resources/"" + name"		3507215	0					
ANR	3507220	IdentifierDeclType	string		3507215	0					
ANR	3507221	Identifier	key		3507215	1					
ANR	3507222	AssignmentExpression	"key = ""Resources/"" + name"		3507215	2		=			
ANR	3507223	Identifier	key		3507215	0					
ANR	3507224	AdditiveExpression	"""Resources/"" + name"		3507215	1		+			
ANR	3507225	PrimaryExpression	"""Resources/"""		3507215	0					
ANR	3507226	Identifier	name		3507215	1					
ANR	3507227	IdentifierDeclStatement	classad :: ClassAd * updates = new classad :: ClassAd ( ) ;	1331:1:37400:37451	3507215	1	True				
ANR	3507228	IdentifierDecl	* updates = new classad :: ClassAd ( )		3507215	0					
ANR	3507229	IdentifierDeclType	classad :: ClassAd *		3507215	0					
ANR	3507230	Identifier	updates		3507215	1					
ANR	3507231	AssignmentExpression	* updates = new classad :: ClassAd ( )		3507215	2		=			
ANR	3507232	Identifier	updates		3507215	0					
ANR	3507233	UnaryExpression	new classad :: ClassAd ( )		3507215	1					
ANR	3507234	ExpressionStatement		1331:53:37452:37452	3507215	2	True				
ANR	3507235	ExpressionStatement	"updates -> Insert ( ""Updates"" , delta )"	1332:1:37455:37490	3507215	3	True				
ANR	3507236	CallExpression	"updates -> Insert ( ""Updates"" , delta )"		3507215	0					
ANR	3507237	Callee	updates -> Insert		3507215	0					
ANR	3507238	PtrMemberAccess	updates -> Insert		3507215	0					
ANR	3507239	Identifier	updates		3507215	0					
ANR	3507240	Identifier	Insert		3507215	1					
ANR	3507241	ArgumentList	"""Updates"""		3507215	1					
ANR	3507242	Argument	"""Updates"""		3507215	0					
ANR	3507243	PrimaryExpression	"""Updates"""		3507215	0					
ANR	3507244	Argument	delta		3507215	1					
ANR	3507245	Identifier	delta		3507215	0					
ANR	3507246	IfStatement	"if ( ! m_collection . ModifyClassAd ( key , updates ) )"		3507215	4					
ANR	3507247	Condition	"! m_collection . ModifyClassAd ( key , updates )"	1334:5:37498:37541	3507215	0	True				
ANR	3507248	UnaryOperationExpression	"! m_collection . ModifyClassAd ( key , updates )"		3507215	0					
ANR	3507249	UnaryOperator	!		3507215	0					
ANR	3507250	CallExpression	"m_collection . ModifyClassAd ( key , updates )"		3507215	1					
ANR	3507251	Callee	m_collection . ModifyClassAd		3507215	0					
ANR	3507252	MemberAccess	m_collection . ModifyClassAd		3507215	0					
ANR	3507253	Identifier	m_collection		3507215	0					
ANR	3507254	Identifier	ModifyClassAd		3507215	1					
ANR	3507255	ArgumentList	key		3507215	1					
ANR	3507256	Argument	key		3507215	0					
ANR	3507257	Identifier	key		3507215	0					
ANR	3507258	Argument	updates		3507215	1					
ANR	3507259	Identifier	updates		3507215	0					
ANR	3507260	CompoundStatement		8:52:236:236	3507215	1					
ANR	3507261	ReturnStatement	return false ;	1335:2:37549:37561	3507215	0	True				
ANR	3507262	Identifier	false		3507215	0					
ANR	3507263	ElseStatement	else		3507215	0					
ANR	3507264	CompoundStatement		10:8:262:262	3507215	0					
ANR	3507265	ReturnStatement	return true ;	1337:2:37575:37586	3507215	0	True				
ANR	3507266	Identifier	true		3507215	0					
ANR	3507267	ReturnType	bool		3507215	1					
ANR	3507268	Identifier	LeaseManagerResources :: UpdateResourceAd		3507215	2					
ANR	3507269	ParameterList	"const string & name , classad :: ClassAd * delta"		3507215	3					
ANR	3507270	Parameter	const string & name	1325:41:37251:37268	3507215	0	True				
ANR	3507271	ParameterType	const string &		3507215	0					
ANR	3507272	Identifier	name		3507215	1					
ANR	3507273	Parameter	classad :: ClassAd * delta	1326:11:37282:37304	3507215	1	True				
ANR	3507274	ParameterType	classad :: ClassAd *		3507215	0					
ANR	3507275	Identifier	delta		3507215	1					
ANR	3507276	CFGEntryNode	ENTRY		3507215		True				
ANR	3507277	CFGExitNode	EXIT		3507215		True				
ANR	3507278	Symbol	m_collection . ModifyClassAd		3507215						
ANR	3507279	Symbol	m_collection		3507215						
ANR	3507280	Symbol	name		3507215						
ANR	3507281	Symbol	delta		3507215						
ANR	3507282	Symbol	false		3507215						
ANR	3507283	Symbol	true		3507215						
ANR	3507284	Symbol	updates		3507215						
ANR	3507285	Symbol	key		3507215						
ANR	3507286	Function	LeaseManagerResources :: GetLeasesAd	1341:0:37594:37744							
ANR	3507287	FunctionDef	LeaseManagerResources :: GetLeasesAd (const string & name)		3507286	0					
ANR	3507288	CompoundStatement		1343:0:37670:37744	3507286	0					
ANR	3507289	IdentifierDeclStatement	"string key = ""Leases/"" + name ;"	1344:1:37673:37702	3507286	0	True				
ANR	3507290	IdentifierDecl	"key = ""Leases/"" + name"		3507286	0					
ANR	3507291	IdentifierDeclType	string		3507286	0					
ANR	3507292	Identifier	key		3507286	1					
ANR	3507293	AssignmentExpression	"key = ""Leases/"" + name"		3507286	2		=			
ANR	3507294	Identifier	key		3507286	0					
ANR	3507295	AdditiveExpression	"""Leases/"" + name"		3507286	1		+			
ANR	3507296	PrimaryExpression	"""Leases/"""		3507286	0					
ANR	3507297	Identifier	name		3507286	1					
ANR	3507298	ReturnStatement	return m_collection . GetClassAd ( key ) ;	1345:1:37705:37742	3507286	1	True				
ANR	3507299	CallExpression	m_collection . GetClassAd ( key )		3507286	0					
ANR	3507300	Callee	m_collection . GetClassAd		3507286	0					
ANR	3507301	MemberAccess	m_collection . GetClassAd		3507286	0					
ANR	3507302	Identifier	m_collection		3507286	0					
ANR	3507303	Identifier	GetClassAd		3507286	1					
ANR	3507304	ArgumentList	key		3507286	1					
ANR	3507305	Argument	key		3507286	0					
ANR	3507306	Identifier	key		3507286	0					
ANR	3507307	ReturnType	classad :: ClassAd *		3507286	1					
ANR	3507308	Identifier	LeaseManagerResources :: GetLeasesAd		3507286	2					
ANR	3507309	ParameterList	const string & name		3507286	3					
ANR	3507310	Parameter	const string & name	1342:36:37649:37666	3507286	0	True				
ANR	3507311	ParameterType	const string &		3507286	0					
ANR	3507312	Identifier	name		3507286	1					
ANR	3507313	CFGEntryNode	ENTRY		3507286		True				
ANR	3507314	CFGExitNode	EXIT		3507286		True				
ANR	3507315	Symbol	m_collection		3507286						
ANR	3507316	Symbol	name		3507286						
ANR	3507317	Symbol	m_collection . GetClassAd		3507286						
ANR	3507318	Symbol	key		3507286						
ANR	3507319	Function	LeaseManagerResources :: InsertLeasesAd	1348:0:37747:37934							
ANR	3507320	FunctionDef	"LeaseManagerResources :: InsertLeasesAd (const string & name , classad :: ClassAd * ad)"		3507319	0					
ANR	3507321	CompoundStatement		1352:0:37856:37934	3507319	0					
ANR	3507322	IdentifierDeclStatement	"string key = ""Leases/"" + name ;"	1353:1:37859:37888	3507319	0	True				
ANR	3507323	IdentifierDecl	"key = ""Leases/"" + name"		3507319	0					
ANR	3507324	IdentifierDeclType	string		3507319	0					
ANR	3507325	Identifier	key		3507319	1					
ANR	3507326	AssignmentExpression	"key = ""Leases/"" + name"		3507319	2		=			
ANR	3507327	Identifier	key		3507319	0					
ANR	3507328	AdditiveExpression	"""Leases/"" + name"		3507319	1		+			
ANR	3507329	PrimaryExpression	"""Leases/"""		3507319	0					
ANR	3507330	Identifier	name		3507319	1					
ANR	3507331	ReturnStatement	"return m_collection . AddClassAd ( key , ad ) ;"	1354:1:37891:37932	3507319	1	True				
ANR	3507332	CallExpression	"m_collection . AddClassAd ( key , ad )"		3507319	0					
ANR	3507333	Callee	m_collection . AddClassAd		3507319	0					
ANR	3507334	MemberAccess	m_collection . AddClassAd		3507319	0					
ANR	3507335	Identifier	m_collection		3507319	0					
ANR	3507336	Identifier	AddClassAd		3507319	1					
ANR	3507337	ArgumentList	key		3507319	1					
ANR	3507338	Argument	key		3507319	0					
ANR	3507339	Identifier	key		3507319	0					
ANR	3507340	Argument	ad		3507319	1					
ANR	3507341	Identifier	ad		3507319	0					
ANR	3507342	ReturnType	bool		3507319	1					
ANR	3507343	Identifier	LeaseManagerResources :: InsertLeasesAd		3507319	2					
ANR	3507344	ParameterList	"const string & name , classad :: ClassAd * ad"		3507319	3					
ANR	3507345	Parameter	const string & name	1349:39:37791:37808	3507319	0	True				
ANR	3507346	ParameterType	const string &		3507319	0					
ANR	3507347	Identifier	name		3507319	1					
ANR	3507348	Parameter	classad :: ClassAd * ad	1350:12:37823:37842	3507319	1	True				
ANR	3507349	ParameterType	classad :: ClassAd *		3507319	0					
ANR	3507350	Identifier	ad		3507319	1					
ANR	3507351	CFGEntryNode	ENTRY		3507319		True				
ANR	3507352	CFGExitNode	EXIT		3507319		True				
ANR	3507353	Symbol	ad		3507319						
ANR	3507354	Symbol	m_collection . AddClassAd		3507319						
ANR	3507355	Symbol	m_collection		3507319						
ANR	3507356	Symbol	name		3507319						
ANR	3507357	Symbol	key		3507319						
ANR	3507358	Function	LeaseManagerResources :: RemoveLeasesAd	1357:0:37937:38079							
ANR	3507359	FunctionDef	LeaseManagerResources :: RemoveLeasesAd (const string & name)		3507358	0					
ANR	3507360	CompoundStatement		1359:0:38002:38079	3507358	0					
ANR	3507361	IdentifierDeclStatement	"string key = ""Leases/"" + name ;"	1360:1:38005:38034	3507358	0	True				
ANR	3507362	IdentifierDecl	"key = ""Leases/"" + name"		3507358	0					
ANR	3507363	IdentifierDeclType	string		3507358	0					
ANR	3507364	Identifier	key		3507358	1					
ANR	3507365	AssignmentExpression	"key = ""Leases/"" + name"		3507358	2		=			
ANR	3507366	Identifier	key		3507358	0					
ANR	3507367	AdditiveExpression	"""Leases/"" + name"		3507358	1		+			
ANR	3507368	PrimaryExpression	"""Leases/"""		3507358	0					
ANR	3507369	Identifier	name		3507358	1					
ANR	3507370	ReturnStatement	return m_collection . RemoveClassAd ( key ) ;	1361:1:38037:38077	3507358	1	True				
ANR	3507371	CallExpression	m_collection . RemoveClassAd ( key )		3507358	0					
ANR	3507372	Callee	m_collection . RemoveClassAd		3507358	0					
ANR	3507373	MemberAccess	m_collection . RemoveClassAd		3507358	0					
ANR	3507374	Identifier	m_collection		3507358	0					
ANR	3507375	Identifier	RemoveClassAd		3507358	1					
ANR	3507376	ArgumentList	key		3507358	1					
ANR	3507377	Argument	key		3507358	0					
ANR	3507378	Identifier	key		3507358	0					
ANR	3507379	ReturnType	bool		3507358	1					
ANR	3507380	Identifier	LeaseManagerResources :: RemoveLeasesAd		3507358	2					
ANR	3507381	ParameterList	const string & name		3507358	3					
ANR	3507382	Parameter	const string & name	1358:39:37981:37998	3507358	0	True				
ANR	3507383	ParameterType	const string &		3507358	0					
ANR	3507384	Identifier	name		3507358	1					
ANR	3507385	CFGEntryNode	ENTRY		3507358		True				
ANR	3507386	CFGExitNode	EXIT		3507358		True				
ANR	3507387	Symbol	m_collection		3507358						
ANR	3507388	Symbol	name		3507358						
ANR	3507389	Symbol	key		3507358						
ANR	3507390	Symbol	m_collection . RemoveClassAd		3507358						
ANR	3507391	Function	LeaseManagerResources :: UpdateLeasesAd	1364:0:38082:38340							
ANR	3507392	FunctionDef	"LeaseManagerResources :: UpdateLeasesAd (const string & name , const classad :: ClassAd & delta)"		3507391	0					
ANR	3507393	CompoundStatement		1367:0:38190:38340	3507391	0					
ANR	3507394	IdentifierDeclStatement	classad :: ClassAd * copy = new classad :: ClassAd ( delta ) ;	1369:1:38246:38300	3507391	0	True				
ANR	3507395	IdentifierDecl	* copy = new classad :: ClassAd ( delta )		3507391	0					
ANR	3507396	IdentifierDeclType	classad :: ClassAd *		3507391	0					
ANR	3507397	Identifier	copy		3507391	1					
ANR	3507398	AssignmentExpression	* copy = new classad :: ClassAd ( delta )		3507391	2		=			
ANR	3507399	Identifier	delta		3507391	0					
ANR	3507400	Identifier	delta		3507391	1					
ANR	3507401	ReturnStatement	"return UpdateLeasesAd ( name , copy ) ;"	1370:1:38303:38338	3507391	1	True				
ANR	3507402	CallExpression	"UpdateLeasesAd ( name , copy )"		3507391	0					
ANR	3507403	Callee	UpdateLeasesAd		3507391	0					
ANR	3507404	Identifier	UpdateLeasesAd		3507391	0					
ANR	3507405	ArgumentList	name		3507391	1					
ANR	3507406	Argument	name		3507391	0					
ANR	3507407	Identifier	name		3507391	0					
ANR	3507408	Argument	copy		3507391	1					
ANR	3507409	Identifier	copy		3507391	0					
ANR	3507410	ReturnType	bool		3507391	1					
ANR	3507411	Identifier	LeaseManagerResources :: UpdateLeasesAd		3507391	2					
ANR	3507412	ParameterList	"const string & name , const classad :: ClassAd & delta"		3507391	3					
ANR	3507413	Parameter	const string & name	1365:39:38126:38143	3507391	0	True				
ANR	3507414	ParameterType	const string &		3507391	0					
ANR	3507415	Identifier	name		3507391	1					
ANR	3507416	Parameter	const classad :: ClassAd & delta	1366:12:38158:38186	3507391	1	True				
ANR	3507417	ParameterType	const classad :: ClassAd &		3507391	0					
ANR	3507418	Identifier	delta		3507391	1					
ANR	3507419	CFGEntryNode	ENTRY		3507391		True				
ANR	3507420	CFGExitNode	EXIT		3507391		True				
ANR	3507421	Symbol	UpdateLeasesAd		3507391						
ANR	3507422	Symbol	name		3507391						
ANR	3507423	Symbol	delta		3507391						
ANR	3507424	Symbol	copy		3507391						
ANR	3507425	Function	LeaseManagerResources :: UpdateLeasesAd	1373:0:38343:38724							
ANR	3507426	FunctionDef	"LeaseManagerResources :: UpdateLeasesAd (const string & name , classad :: ClassAd * delta)"		3507425	0					
ANR	3507427	CompoundStatement		1376:0:38445:38724	3507425	0					
ANR	3507428	IdentifierDeclStatement	"string key = ""Leases/"" + name ;"	1377:1:38448:38477	3507425	0	True				
ANR	3507429	IdentifierDecl	"key = ""Leases/"" + name"		3507425	0					
ANR	3507430	IdentifierDeclType	string		3507425	0					
ANR	3507431	Identifier	key		3507425	1					
ANR	3507432	AssignmentExpression	"key = ""Leases/"" + name"		3507425	2		=			
ANR	3507433	Identifier	key		3507425	0					
ANR	3507434	AdditiveExpression	"""Leases/"" + name"		3507425	1		+			
ANR	3507435	PrimaryExpression	"""Leases/"""		3507425	0					
ANR	3507436	Identifier	name		3507425	1					
ANR	3507437	IdentifierDeclStatement	classad :: ClassAd * updates = new classad :: ClassAd ( ) ;	1380:1:38534:38585	3507425	1	True				
ANR	3507438	IdentifierDecl	* updates = new classad :: ClassAd ( )		3507425	0					
ANR	3507439	IdentifierDeclType	classad :: ClassAd *		3507425	0					
ANR	3507440	Identifier	updates		3507425	1					
ANR	3507441	AssignmentExpression	* updates = new classad :: ClassAd ( )		3507425	2		=			
ANR	3507442	Identifier	updates		3507425	0					
ANR	3507443	UnaryExpression	new classad :: ClassAd ( )		3507425	1					
ANR	3507444	ExpressionStatement	"updates -> Insert ( ""Updates"" , delta )"	1381:1:38588:38623	3507425	2	True				
ANR	3507445	CallExpression	"updates -> Insert ( ""Updates"" , delta )"		3507425	0					
ANR	3507446	Callee	updates -> Insert		3507425	0					
ANR	3507447	PtrMemberAccess	updates -> Insert		3507425	0					
ANR	3507448	Identifier	updates		3507425	0					
ANR	3507449	Identifier	Insert		3507425	1					
ANR	3507450	ArgumentList	"""Updates"""		3507425	1					
ANR	3507451	Argument	"""Updates"""		3507425	0					
ANR	3507452	PrimaryExpression	"""Updates"""		3507425	0					
ANR	3507453	Argument	delta		3507425	1					
ANR	3507454	Identifier	delta		3507425	0					
ANR	3507455	IfStatement	"if ( ! m_collection . ModifyClassAd ( key , updates ) )"		3507425	3					
ANR	3507456	Condition	"! m_collection . ModifyClassAd ( key , updates )"	1383:5:38631:38674	3507425	0	True				
ANR	3507457	UnaryOperationExpression	"! m_collection . ModifyClassAd ( key , updates )"		3507425	0					
ANR	3507458	UnaryOperator	!		3507425	0					
ANR	3507459	CallExpression	"m_collection . ModifyClassAd ( key , updates )"		3507425	1					
ANR	3507460	Callee	m_collection . ModifyClassAd		3507425	0					
ANR	3507461	MemberAccess	m_collection . ModifyClassAd		3507425	0					
ANR	3507462	Identifier	m_collection		3507425	0					
ANR	3507463	Identifier	ModifyClassAd		3507425	1					
ANR	3507464	ArgumentList	key		3507425	1					
ANR	3507465	Argument	key		3507425	0					
ANR	3507466	Identifier	key		3507425	0					
ANR	3507467	Argument	updates		3507425	1					
ANR	3507468	Identifier	updates		3507425	0					
ANR	3507469	CompoundStatement		8:52:232:232	3507425	1					
ANR	3507470	ReturnStatement	return false ;	1384:2:38682:38694	3507425	0	True				
ANR	3507471	Identifier	false		3507425	0					
ANR	3507472	ElseStatement	else		3507425	0					
ANR	3507473	CompoundStatement		10:8:258:258	3507425	0					
ANR	3507474	ReturnStatement	return true ;	1386:2:38708:38719	3507425	0	True				
ANR	3507475	Identifier	true		3507425	0					
ANR	3507476	ReturnType	bool		3507425	1					
ANR	3507477	Identifier	LeaseManagerResources :: UpdateLeasesAd		3507425	2					
ANR	3507478	ParameterList	"const string & name , classad :: ClassAd * delta"		3507425	3					
ANR	3507479	Parameter	const string & name	1374:39:38387:38404	3507425	0	True				
ANR	3507480	ParameterType	const string &		3507425	0					
ANR	3507481	Identifier	name		3507425	1					
ANR	3507482	Parameter	classad :: ClassAd * delta	1375:12:38419:38441	3507425	1	True				
ANR	3507483	ParameterType	classad :: ClassAd *		3507425	0					
ANR	3507484	Identifier	delta		3507425	1					
ANR	3507485	CFGEntryNode	ENTRY		3507425		True				
ANR	3507486	CFGExitNode	EXIT		3507425		True				
ANR	3507487	Symbol	m_collection . ModifyClassAd		3507425						
ANR	3507488	Symbol	m_collection		3507425						
ANR	3507489	Symbol	name		3507425						
ANR	3507490	Symbol	delta		3507425						
ANR	3507491	Symbol	false		3507425						
ANR	3507492	Symbol	true		3507425						
ANR	3507493	Symbol	updates		3507425						
ANR	3507494	Symbol	key		3507425						
ANR	3507495	Function	LeaseManagerResources :: UpdateLeaseAd	1390:0:38727:39033							
ANR	3507496	FunctionDef	"LeaseManagerResources :: UpdateLeaseAd (const string & resource , int lease_number , const classad :: ClassAd & delta)"		3507495	0					
ANR	3507497	CompoundStatement		1394:0:38866:39033	3507495	0					
ANR	3507498	IdentifierDeclStatement	classad :: ClassAd * copy = new classad :: ClassAd ( delta ) ;	1396:1:38922:38976	3507495	0	True				
ANR	3507499	IdentifierDecl	* copy = new classad :: ClassAd ( delta )		3507495	0					
ANR	3507500	IdentifierDeclType	classad :: ClassAd *		3507495	0					
ANR	3507501	Identifier	copy		3507495	1					
ANR	3507502	AssignmentExpression	* copy = new classad :: ClassAd ( delta )		3507495	2		=			
ANR	3507503	Identifier	delta		3507495	0					
ANR	3507504	Identifier	delta		3507495	1					
ANR	3507505	ReturnStatement	"return UpdateLeaseAd ( resource , lease_number , copy ) ;"	1397:1:38979:39031	3507495	1	True				
ANR	3507506	CallExpression	"UpdateLeaseAd ( resource , lease_number , copy )"		3507495	0					
ANR	3507507	Callee	UpdateLeaseAd		3507495	0					
ANR	3507508	Identifier	UpdateLeaseAd		3507495	0					
ANR	3507509	ArgumentList	resource		3507495	1					
ANR	3507510	Argument	resource		3507495	0					
ANR	3507511	Identifier	resource		3507495	0					
ANR	3507512	Argument	lease_number		3507495	1					
ANR	3507513	Identifier	lease_number		3507495	0					
ANR	3507514	Argument	copy		3507495	2					
ANR	3507515	Identifier	copy		3507495	0					
ANR	3507516	ReturnType	bool		3507495	1					
ANR	3507517	Identifier	LeaseManagerResources :: UpdateLeaseAd		3507495	2					
ANR	3507518	ParameterList	"const string & resource , int lease_number , const classad :: ClassAd & delta"		3507495	3					
ANR	3507519	Parameter	const string & resource	1391:38:38770:38791	3507495	0	True				
ANR	3507520	ParameterType	const string &		3507495	0					
ANR	3507521	Identifier	resource		3507495	1					
ANR	3507522	Parameter	int lease_number	1392:11:38805:38820	3507495	1	True				
ANR	3507523	ParameterType	int		3507495	0					
ANR	3507524	Identifier	lease_number		3507495	1					
ANR	3507525	Parameter	const classad :: ClassAd & delta	1393:11:38834:38862	3507495	2	True				
ANR	3507526	ParameterType	const classad :: ClassAd &		3507495	0					
ANR	3507527	Identifier	delta		3507495	1					
ANR	3507528	CFGEntryNode	ENTRY		3507495		True				
ANR	3507529	CFGExitNode	EXIT		3507495		True				
ANR	3507530	Symbol	lease_number		3507495						
ANR	3507531	Symbol	resource		3507495						
ANR	3507532	Symbol	delta		3507495						
ANR	3507533	Symbol	copy		3507495						
ANR	3507534	Symbol	UpdateLeaseAd		3507495						
ANR	3507535	Function	LeaseManagerResources :: UpdateLeaseAd	1400:0:39036:39728							
ANR	3507536	FunctionDef	"LeaseManagerResources :: UpdateLeaseAd (const string & resource , int lease_number , classad :: ClassAd * delta)"		3507535	0					
ANR	3507537	CompoundStatement		1404:0:39169:39728	3507535	0					
ANR	3507538	IdentifierDeclStatement	"string key = ""Leases/"" + resource ;"	1405:1:39172:39205	3507535	0	True				
ANR	3507539	IdentifierDecl	"key = ""Leases/"" + resource"		3507535	0					
ANR	3507540	IdentifierDeclType	string		3507535	0					
ANR	3507541	Identifier	key		3507535	1					
ANR	3507542	AssignmentExpression	"key = ""Leases/"" + resource"		3507535	2		=			
ANR	3507543	Identifier	key		3507535	0					
ANR	3507544	AdditiveExpression	"""Leases/"" + resource"		3507535	1		+			
ANR	3507545	PrimaryExpression	"""Leases/"""		3507535	0					
ANR	3507546	Identifier	resource		3507535	1					
ANR	3507547	IdentifierDeclStatement	classad :: ClassAd * updates = new classad :: ClassAd ( ) ;	1408:1:39262:39313	3507535	1	True				
ANR	3507548	IdentifierDecl	* updates = new classad :: ClassAd ( )		3507535	0					
ANR	3507549	IdentifierDeclType	classad :: ClassAd *		3507535	0					
ANR	3507550	Identifier	updates		3507535	1					
ANR	3507551	AssignmentExpression	* updates = new classad :: ClassAd ( )		3507535	2		=			
ANR	3507552	Identifier	updates		3507535	0					
ANR	3507553	UnaryExpression	new classad :: ClassAd ( )		3507535	1					
ANR	3507554	ExpressionStatement	"updates -> Insert ( ""Updates"" , delta )"	1409:1:39316:39351	3507535	2	True				
ANR	3507555	CallExpression	"updates -> Insert ( ""Updates"" , delta )"		3507535	0					
ANR	3507556	Callee	updates -> Insert		3507535	0					
ANR	3507557	PtrMemberAccess	updates -> Insert		3507535	0					
ANR	3507558	Identifier	updates		3507535	0					
ANR	3507559	Identifier	Insert		3507535	1					
ANR	3507560	ArgumentList	"""Updates"""		3507535	1					
ANR	3507561	Argument	"""Updates"""		3507535	0					
ANR	3507562	PrimaryExpression	"""Updates"""		3507535	0					
ANR	3507563	Argument	delta		3507535	1					
ANR	3507564	Identifier	delta		3507535	0					
ANR	3507565	IdentifierDeclStatement	char tmp [ 32 ] ;	1412:1:39387:39400	3507535	3	True				
ANR	3507566	IdentifierDecl	tmp [ 32 ]		3507535	0					
ANR	3507567	IdentifierDeclType	char [ 32 ]		3507535	0					
ANR	3507568	Identifier	tmp		3507535	1					
ANR	3507569	PrimaryExpression	32		3507535	2					
ANR	3507570	ExpressionStatement	"snprintf ( tmp , sizeof ( tmp ) , ""States[%d]"" , lease_number - 1 )"	1413:1:39403:39463	3507535	4	True				
ANR	3507571	CallExpression	"snprintf ( tmp , sizeof ( tmp ) , ""States[%d]"" , lease_number - 1 )"		3507535	0					
ANR	3507572	Callee	snprintf		3507535	0					
ANR	3507573	Identifier	snprintf		3507535	0					
ANR	3507574	ArgumentList	tmp		3507535	1					
ANR	3507575	Argument	tmp		3507535	0					
ANR	3507576	Identifier	tmp		3507535	0					
ANR	3507577	Argument	sizeof ( tmp )		3507535	1					
ANR	3507578	SizeofExpression	sizeof ( tmp )		3507535	0					
ANR	3507579	Sizeof	sizeof		3507535	0					
ANR	3507580	SizeofOperand	tmp		3507535	1					
ANR	3507581	Argument	"""States[%d]"""		3507535	2					
ANR	3507582	PrimaryExpression	"""States[%d]"""		3507535	0					
ANR	3507583	Argument	lease_number - 1		3507535	3					
ANR	3507584	AdditiveExpression	lease_number - 1		3507535	0		-			
ANR	3507585	Identifier	lease_number		3507535	0					
ANR	3507586	PrimaryExpression	1		3507535	1					
ANR	3507587	IdentifierDeclStatement	string expr_str ( tmp ) ;	1414:1:39466:39489	3507535	5	True				
ANR	3507588	IdentifierDecl	expr_str ( tmp )		3507535	0					
ANR	3507589	IdentifierDeclType	string		3507535	0					
ANR	3507590	Identifier	expr_str		3507535	1					
ANR	3507591	Identifier	tmp		3507535	2					
ANR	3507592	IdentifierDeclStatement	classad :: ClassAdParser parser ;	1415:1:39492:39521	3507535	6	True				
ANR	3507593	IdentifierDecl	parser		3507535	0					
ANR	3507594	IdentifierDeclType	classad :: ClassAdParser		3507535	0					
ANR	3507595	Identifier	parser		3507535	1					
ANR	3507596	IdentifierDeclStatement	"classad :: ExprTree * expr = parser . ParseExpression ( expr_str , true ) ;"	1416:1:39524:39590	3507535	7	True				
ANR	3507597	IdentifierDecl	"* expr = parser . ParseExpression ( expr_str , true )"		3507535	0					
ANR	3507598	IdentifierDeclType	classad :: ExprTree *		3507535	0					
ANR	3507599	Identifier	expr		3507535	1					
ANR	3507600	AssignmentExpression	"* expr = parser . ParseExpression ( expr_str , true )"		3507535	2		=			
ANR	3507601	Identifier	expr		3507535	0					
ANR	3507602	CallExpression	"parser . ParseExpression ( expr_str , true )"		3507535	1					
ANR	3507603	Callee	parser . ParseExpression		3507535	0					
ANR	3507604	MemberAccess	parser . ParseExpression		3507535	0					
ANR	3507605	Identifier	parser		3507535	0					
ANR	3507606	Identifier	ParseExpression		3507535	1					
ANR	3507607	ArgumentList	expr_str		3507535	1					
ANR	3507608	Argument	expr_str		3507535	0					
ANR	3507609	Identifier	expr_str		3507535	0					
ANR	3507610	Argument	true		3507535	1					
ANR	3507611	Identifier	true		3507535	0					
ANR	3507612	ExpressionStatement	"updates -> Insert ( ""Context"" , expr )"	1417:1:39593:39627	3507535	8	True				
ANR	3507613	CallExpression	"updates -> Insert ( ""Context"" , expr )"		3507535	0					
ANR	3507614	Callee	updates -> Insert		3507535	0					
ANR	3507615	PtrMemberAccess	updates -> Insert		3507535	0					
ANR	3507616	Identifier	updates		3507535	0					
ANR	3507617	Identifier	Insert		3507535	1					
ANR	3507618	ArgumentList	"""Context"""		3507535	1					
ANR	3507619	Argument	"""Context"""		3507535	0					
ANR	3507620	PrimaryExpression	"""Context"""		3507535	0					
ANR	3507621	Argument	expr		3507535	1					
ANR	3507622	Identifier	expr		3507535	0					
ANR	3507623	IfStatement	"if ( ! m_collection . ModifyClassAd ( key , updates ) )"		3507535	9					
ANR	3507624	Condition	"! m_collection . ModifyClassAd ( key , updates )"	1419:5:39635:39678	3507535	0	True				
ANR	3507625	UnaryOperationExpression	"! m_collection . ModifyClassAd ( key , updates )"		3507535	0					
ANR	3507626	UnaryOperator	!		3507535	0					
ANR	3507627	CallExpression	"m_collection . ModifyClassAd ( key , updates )"		3507535	1					
ANR	3507628	Callee	m_collection . ModifyClassAd		3507535	0					
ANR	3507629	MemberAccess	m_collection . ModifyClassAd		3507535	0					
ANR	3507630	Identifier	m_collection		3507535	0					
ANR	3507631	Identifier	ModifyClassAd		3507535	1					
ANR	3507632	ArgumentList	key		3507535	1					
ANR	3507633	Argument	key		3507535	0					
ANR	3507634	Identifier	key		3507535	0					
ANR	3507635	Argument	updates		3507535	1					
ANR	3507636	Identifier	updates		3507535	0					
ANR	3507637	CompoundStatement		16:52:512:512	3507535	1					
ANR	3507638	ReturnStatement	return false ;	1420:2:39686:39698	3507535	0	True				
ANR	3507639	Identifier	false		3507535	0					
ANR	3507640	ElseStatement	else		3507535	0					
ANR	3507641	CompoundStatement		18:8:538:538	3507535	0					
ANR	3507642	ReturnStatement	return true ;	1422:2:39712:39723	3507535	0	True				
ANR	3507643	Identifier	true		3507535	0					
ANR	3507644	ReturnType	bool		3507535	1					
ANR	3507645	Identifier	LeaseManagerResources :: UpdateLeaseAd		3507535	2					
ANR	3507646	ParameterList	"const string & resource , int lease_number , classad :: ClassAd * delta"		3507535	3					
ANR	3507647	Parameter	const string & resource	1401:38:39079:39100	3507535	0	True				
ANR	3507648	ParameterType	const string &		3507535	0					
ANR	3507649	Identifier	resource		3507535	1					
ANR	3507650	Parameter	int lease_number	1402:11:39114:39129	3507535	1	True				
ANR	3507651	ParameterType	int		3507535	0					
ANR	3507652	Identifier	lease_number		3507535	1					
ANR	3507653	Parameter	classad :: ClassAd * delta	1403:11:39143:39165	3507535	2	True				
ANR	3507654	ParameterType	classad :: ClassAd *		3507535	0					
ANR	3507655	Identifier	delta		3507535	1					
ANR	3507656	CFGEntryNode	ENTRY		3507535		True				
ANR	3507657	CFGExitNode	EXIT		3507535		True				
ANR	3507658	Symbol	parser . ParseExpression		3507535						
ANR	3507659	Symbol	resource		3507535						
ANR	3507660	Symbol	m_collection . ModifyClassAd		3507535						
ANR	3507661	Symbol	m_collection		3507535						
ANR	3507662	Symbol	delta		3507535						
ANR	3507663	Symbol	false		3507535						
ANR	3507664	Symbol	updates		3507535						
ANR	3507665	Symbol	lease_number		3507535						
ANR	3507666	Symbol	expr_str		3507535						
ANR	3507667	Symbol	parser		3507535						
ANR	3507668	Symbol	tmp		3507535						
ANR	3507669	Symbol	true		3507535						
ANR	3507670	Symbol	expr		3507535						
ANR	3507671	Symbol	key		3507535						
