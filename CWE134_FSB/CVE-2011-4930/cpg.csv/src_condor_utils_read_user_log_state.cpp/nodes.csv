command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4865408	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_read_user_log_state.cpp								
ANR	4865409	DeclStmt									
ANR	4865410	Decl							const char	const char [ ]	FileStateSignature
ANR	4865411	Function	ReadUserLogFileState :: ReadUserLogFileState	40:0:1284:1377							
ANR	4865412	FunctionDef	ReadUserLogFileState :: ReadUserLogFileState ()		4865411	0					
ANR	4865413	CompoundStatement		41:0:1335:1377	4865411	0					
ANR	4865414	ExpressionStatement	m_rw_state = NULL	42:1:1338:1355	4865411	0	True				
ANR	4865415	AssignmentExpression	m_rw_state = NULL		4865411	0		=			
ANR	4865416	Identifier	m_rw_state		4865411	0					
ANR	4865417	Identifier	NULL		4865411	1					
ANR	4865418	ExpressionStatement	m_ro_state = NULL	43:1:1358:1375	4865411	1	True				
ANR	4865419	AssignmentExpression	m_ro_state = NULL		4865411	0		=			
ANR	4865420	Identifier	m_ro_state		4865411	0					
ANR	4865421	Identifier	NULL		4865411	1					
ANR	4865422	Identifier	ReadUserLogFileState :: ReadUserLogFileState		4865411	1					
ANR	4865423	ParameterList			4865411	2					
ANR	4865424	CFGEntryNode	ENTRY		4865411		True				
ANR	4865425	CFGExitNode	EXIT		4865411		True				
ANR	4865426	Symbol	NULL		4865411						
ANR	4865427	Symbol	m_rw_state		4865411						
ANR	4865428	Symbol	m_ro_state		4865411						
ANR	4865429	Function	ReadUserLogFileState :: ReadUserLogFileState	46:0:1380:1521							
ANR	4865430	FunctionDef	ReadUserLogFileState :: ReadUserLogFileState (ReadUserLog :: FileState & state)		4865429	0					
ANR	4865431	CompoundStatement		48:0:1457:1521	4865429	0					
ANR	4865432	ExpressionStatement	"convertState ( state , m_rw_state )"	49:1:1460:1493	4865429	0	True				
ANR	4865433	CallExpression	"convertState ( state , m_rw_state )"		4865429	0					
ANR	4865434	Callee	convertState		4865429	0					
ANR	4865435	Identifier	convertState		4865429	0					
ANR	4865436	ArgumentList	state		4865429	1					
ANR	4865437	Argument	state		4865429	0					
ANR	4865438	Identifier	state		4865429	0					
ANR	4865439	Argument	m_rw_state		4865429	1					
ANR	4865440	Identifier	m_rw_state		4865429	0					
ANR	4865441	ExpressionStatement	m_ro_state = m_rw_state	50:1:1496:1519	4865429	1	True				
ANR	4865442	AssignmentExpression	m_ro_state = m_rw_state		4865429	0		=			
ANR	4865443	Identifier	m_ro_state		4865429	0					
ANR	4865444	Identifier	m_rw_state		4865429	1					
ANR	4865445	Identifier	ReadUserLogFileState :: ReadUserLogFileState		4865429	1					
ANR	4865446	ParameterList	ReadUserLog :: FileState & state		4865429	2					
ANR	4865447	Parameter	ReadUserLog :: FileState & state	47:1:1425:1453	4865429	0	True				
ANR	4865448	ParameterType	ReadUserLog :: FileState &		4865429	0					
ANR	4865449	Identifier	state		4865429	1					
ANR	4865450	CFGEntryNode	ENTRY		4865429		True				
ANR	4865451	CFGExitNode	EXIT		4865429		True				
ANR	4865452	Symbol	m_rw_state		4865429						
ANR	4865453	Symbol	m_ro_state		4865429						
ANR	4865454	Symbol	state		4865429						
ANR	4865455	Function	ReadUserLogFileState :: ReadUserLogFileState	53:0:1524:1665							
ANR	4865456	FunctionDef	ReadUserLogFileState :: ReadUserLogFileState (const ReadUserLog :: FileState & state)		4865455	0					
ANR	4865457	CompoundStatement		55:0:1607:1665	4865455	0					
ANR	4865458	ExpressionStatement	m_rw_state = NULL	56:1:1610:1627	4865455	0	True				
ANR	4865459	AssignmentExpression	m_rw_state = NULL		4865455	0		=			
ANR	4865460	Identifier	m_rw_state		4865455	0					
ANR	4865461	Identifier	NULL		4865455	1					
ANR	4865462	ExpressionStatement	"convertState ( state , m_ro_state )"	57:1:1630:1663	4865455	1	True				
ANR	4865463	CallExpression	"convertState ( state , m_ro_state )"		4865455	0					
ANR	4865464	Callee	convertState		4865455	0					
ANR	4865465	Identifier	convertState		4865455	0					
ANR	4865466	ArgumentList	state		4865455	1					
ANR	4865467	Argument	state		4865455	0					
ANR	4865468	Identifier	state		4865455	0					
ANR	4865469	Argument	m_ro_state		4865455	1					
ANR	4865470	Identifier	m_ro_state		4865455	0					
ANR	4865471	Identifier	ReadUserLogFileState :: ReadUserLogFileState		4865455	1					
ANR	4865472	ParameterList	const ReadUserLog :: FileState & state		4865455	2					
ANR	4865473	Parameter	const ReadUserLog :: FileState & state	54:1:1569:1603	4865455	0	True				
ANR	4865474	ParameterType	const ReadUserLog :: FileState &		4865455	0					
ANR	4865475	Identifier	state		4865455	1					
ANR	4865476	CFGEntryNode	ENTRY		4865455		True				
ANR	4865477	CFGExitNode	EXIT		4865455		True				
ANR	4865478	Symbol	NULL		4865455						
ANR	4865479	Symbol	m_rw_state		4865455						
ANR	4865480	Symbol	m_ro_state		4865455						
ANR	4865481	Symbol	state		4865455						
ANR	4865482	Function	ReadUserLogFileState :: ~ReadUserLogFileState	60:0:1668:1722							
ANR	4865483	FunctionDef	ReadUserLogFileState :: ~ReadUserLogFileState ()		4865482	0					
ANR	4865484	CompoundStatement		61:0:1720:1722	4865482	0					
ANR	4865485	Identifier	ReadUserLogFileState :: ~ReadUserLogFileState		4865482	1					
ANR	4865486	ParameterList			4865482	2					
ANR	4865487	CFGEntryNode	ENTRY		4865482		True				
ANR	4865488	CFGExitNode	EXIT		4865482		True				
ANR	4865489	Function	ReadUserLogFileState :: isInitialized	65:0:1754:1965							
ANR	4865490	FunctionDef	ReadUserLogFileState :: isInitialized ()		4865489	0					
ANR	4865491	CompoundStatement		67:0:1809:1965	4865489	0					
ANR	4865492	IfStatement	if ( NULL == m_ro_state )		4865489	0					
ANR	4865493	Condition	NULL == m_ro_state	68:6:1817:1834	4865489	0	True				
ANR	4865494	EqualityExpression	NULL == m_ro_state		4865489	0		==			
ANR	4865495	Identifier	NULL		4865489	0					
ANR	4865496	Identifier	m_ro_state		4865489	1					
ANR	4865497	CompoundStatement		2:27:28:28	4865489	1					
ANR	4865498	ReturnStatement	return false ;	69:2:1842:1854	4865489	0	True				
ANR	4865499	Identifier	false		4865489	0					
ANR	4865500	IfStatement	"if ( strcmp ( m_ro_state -> internal . m_signature , FileStateSignature ) )"		4865489	1					
ANR	4865501	Condition	"strcmp ( m_ro_state -> internal . m_signature , FileStateSignature )"	71:6:1865:1926	4865489	0	True				
ANR	4865502	CallExpression	"strcmp ( m_ro_state -> internal . m_signature , FileStateSignature )"		4865489	0					
ANR	4865503	Callee	strcmp		4865489	0					
ANR	4865504	Identifier	strcmp		4865489	0					
ANR	4865505	ArgumentList	m_ro_state -> internal . m_signature		4865489	1					
ANR	4865506	Argument	m_ro_state -> internal . m_signature		4865489	0					
ANR	4865507	MemberAccess	m_ro_state -> internal . m_signature		4865489	0					
ANR	4865508	PtrMemberAccess	m_ro_state -> internal		4865489	0					
ANR	4865509	Identifier	m_ro_state		4865489	0					
ANR	4865510	Identifier	internal		4865489	1					
ANR	4865511	Identifier	m_signature		4865489	1					
ANR	4865512	Argument	FileStateSignature		4865489	1					
ANR	4865513	Identifier	FileStateSignature		4865489	0					
ANR	4865514	CompoundStatement		5:71:120:120	4865489	1					
ANR	4865515	ReturnStatement	return false ;	72:2:1934:1946	4865489	0	True				
ANR	4865516	Identifier	false		4865489	0					
ANR	4865517	ReturnStatement	return true ;	74:1:1952:1963	4865489	2	True				
ANR	4865518	Identifier	true		4865489	0					
ANR	4865519	ReturnType	bool		4865489	1					
ANR	4865520	Identifier	ReadUserLogFileState :: isInitialized		4865489	2					
ANR	4865521	ParameterList			4865489	3					
ANR	4865522	CFGEntryNode	ENTRY		4865489		True				
ANR	4865523	CFGExitNode	EXIT		4865489		True				
ANR	4865524	Symbol	strcmp		4865489						
ANR	4865525	Symbol	* m_ro_state		4865489						
ANR	4865526	Symbol	NULL		4865489						
ANR	4865527	Symbol	false		4865489						
ANR	4865528	Symbol	FileStateSignature		4865489						
ANR	4865529	Symbol	true		4865489						
ANR	4865530	Symbol	m_ro_state -> internal . m_signature		4865489						
ANR	4865531	Symbol	m_ro_state		4865489						
ANR	4865532	Symbol	m_ro_state -> internal		4865489						
ANR	4865533	Function	ReadUserLogFileState :: isValid	78:0:1999:2185							
ANR	4865534	FunctionDef	ReadUserLogFileState :: isValid ()		4865533	0					
ANR	4865535	CompoundStatement		80:0:2048:2185	4865533	0					
ANR	4865536	IfStatement	if ( ! isInitialized ( ) )		4865533	0					
ANR	4865537	Condition	! isInitialized ( )	81:6:2056:2071	4865533	0	True				
ANR	4865538	UnaryOperationExpression	! isInitialized ( )		4865533	0					
ANR	4865539	UnaryOperator	!		4865533	0					
ANR	4865540	CallExpression	isInitialized ( )		4865533	1					
ANR	4865541	Callee	isInitialized		4865533	0					
ANR	4865542	Identifier	isInitialized		4865533	0					
ANR	4865543	ArgumentList			4865533	1					
ANR	4865544	CompoundStatement		2:25:26:26	4865533	1					
ANR	4865545	ReturnStatement	return false ;	82:2:2079:2091	4865533	0	True				
ANR	4865546	Identifier	false		4865533	0					
ANR	4865547	IfStatement	if ( 0 == strlen ( m_ro_state -> internal . m_base_path ) )		4865533	1					
ANR	4865548	Condition	0 == strlen ( m_ro_state -> internal . m_base_path )	84:6:2102:2146	4865533	0	True				
ANR	4865549	EqualityExpression	0 == strlen ( m_ro_state -> internal . m_base_path )		4865533	0		==			
ANR	4865550	PrimaryExpression	0		4865533	0					
ANR	4865551	CallExpression	strlen ( m_ro_state -> internal . m_base_path )		4865533	1					
ANR	4865552	Callee	strlen		4865533	0					
ANR	4865553	Identifier	strlen		4865533	0					
ANR	4865554	ArgumentList	m_ro_state -> internal . m_base_path		4865533	1					
ANR	4865555	Argument	m_ro_state -> internal . m_base_path		4865533	0					
ANR	4865556	MemberAccess	m_ro_state -> internal . m_base_path		4865533	0					
ANR	4865557	PtrMemberAccess	m_ro_state -> internal		4865533	0					
ANR	4865558	Identifier	m_ro_state		4865533	0					
ANR	4865559	Identifier	internal		4865533	1					
ANR	4865560	Identifier	m_base_path		4865533	1					
ANR	4865561	CompoundStatement		5:54:101:101	4865533	1					
ANR	4865562	ReturnStatement	return false ;	85:2:2154:2166	4865533	0	True				
ANR	4865563	Identifier	false		4865533	0					
ANR	4865564	ReturnStatement	return true ;	87:1:2172:2183	4865533	2	True				
ANR	4865565	Identifier	true		4865533	0					
ANR	4865566	ReturnType	bool		4865533	1					
ANR	4865567	Identifier	ReadUserLogFileState :: isValid		4865533	2					
ANR	4865568	ParameterList			4865533	3					
ANR	4865569	CFGEntryNode	ENTRY		4865533		True				
ANR	4865570	CFGExitNode	EXIT		4865533		True				
ANR	4865571	Symbol	strlen		4865533						
ANR	4865572	Symbol	* m_ro_state		4865533						
ANR	4865573	Symbol	isInitialized		4865533						
ANR	4865574	Symbol	false		4865533						
ANR	4865575	Symbol	m_ro_state -> internal . m_base_path		4865533						
ANR	4865576	Symbol	true		4865533						
ANR	4865577	Symbol	m_ro_state		4865533						
ANR	4865578	Symbol	m_ro_state -> internal		4865533						
ANR	4865579	Function	ReadUserLogFileState :: getFileOffset	90:0:2188:2359							
ANR	4865580	FunctionDef	ReadUserLogFileState :: getFileOffset (int64_t & pos)		4865579	0					
ANR	4865581	CompoundStatement		92:0:2251:2359	4865579	0					
ANR	4865582	IfStatement	if ( NULL == m_ro_state )		4865579	0					
ANR	4865583	Condition	NULL == m_ro_state	93:6:2259:2276	4865579	0	True				
ANR	4865584	EqualityExpression	NULL == m_ro_state		4865579	0		==			
ANR	4865585	Identifier	NULL		4865579	0					
ANR	4865586	Identifier	m_ro_state		4865579	1					
ANR	4865587	CompoundStatement		2:27:28:28	4865579	1					
ANR	4865588	ReturnStatement	return false ;	94:2:2284:2296	4865579	0	True				
ANR	4865589	Identifier	false		4865579	0					
ANR	4865590	ExpressionStatement	pos = m_ro_state -> internal . m_offset . asint	96:1:2302:2343	4865579	1	True				
ANR	4865591	AssignmentExpression	pos = m_ro_state -> internal . m_offset . asint		4865579	0		=			
ANR	4865592	Identifier	pos		4865579	0					
ANR	4865593	MemberAccess	m_ro_state -> internal . m_offset . asint		4865579	1					
ANR	4865594	MemberAccess	m_ro_state -> internal . m_offset		4865579	0					
ANR	4865595	PtrMemberAccess	m_ro_state -> internal		4865579	0					
ANR	4865596	Identifier	m_ro_state		4865579	0					
ANR	4865597	Identifier	internal		4865579	1					
ANR	4865598	Identifier	m_offset		4865579	1					
ANR	4865599	Identifier	asint		4865579	1					
ANR	4865600	ReturnStatement	return true ;	97:1:2346:2357	4865579	2	True				
ANR	4865601	Identifier	true		4865579	0					
ANR	4865602	ReturnType	bool		4865579	1					
ANR	4865603	Identifier	ReadUserLogFileState :: getFileOffset		4865579	2					
ANR	4865604	ParameterList	int64_t & pos		4865579	3					
ANR	4865605	Parameter	int64_t & pos	91:37:2230:2241	4865579	0	True				
ANR	4865606	ParameterType	int64_t &		4865579	0					
ANR	4865607	Identifier	pos		4865579	1					
ANR	4865608	CFGEntryNode	ENTRY		4865579		True				
ANR	4865609	CFGExitNode	EXIT		4865579		True				
ANR	4865610	Symbol	* m_ro_state		4865579						
ANR	4865611	Symbol	NULL		4865579						
ANR	4865612	Symbol	pos		4865579						
ANR	4865613	Symbol	m_ro_state -> internal . m_offset . asint		4865579						
ANR	4865614	Symbol	false		4865579						
ANR	4865615	Symbol	true		4865579						
ANR	4865616	Symbol	m_ro_state -> internal . m_offset		4865579						
ANR	4865617	Symbol	m_ro_state		4865579						
ANR	4865618	Symbol	m_ro_state -> internal		4865579						
ANR	4865619	Function	ReadUserLogFileState :: getFileEventNum	100:0:2362:2538							
ANR	4865620	FunctionDef	ReadUserLogFileState :: getFileEventNum (int64_t & num)		4865619	0					
ANR	4865621	CompoundStatement		102:0:2427:2538	4865619	0					
ANR	4865622	IfStatement	if ( NULL == m_ro_state )		4865619	0					
ANR	4865623	Condition	NULL == m_ro_state	103:6:2435:2452	4865619	0	True				
ANR	4865624	EqualityExpression	NULL == m_ro_state		4865619	0		==			
ANR	4865625	Identifier	NULL		4865619	0					
ANR	4865626	Identifier	m_ro_state		4865619	1					
ANR	4865627	CompoundStatement		2:27:28:28	4865619	1					
ANR	4865628	ReturnStatement	return false ;	104:2:2460:2472	4865619	0	True				
ANR	4865629	Identifier	false		4865619	0					
ANR	4865630	ExpressionStatement	num = m_ro_state -> internal . m_event_num . asint	106:1:2478:2522	4865619	1	True				
ANR	4865631	AssignmentExpression	num = m_ro_state -> internal . m_event_num . asint		4865619	0		=			
ANR	4865632	Identifier	num		4865619	0					
ANR	4865633	MemberAccess	m_ro_state -> internal . m_event_num . asint		4865619	1					
ANR	4865634	MemberAccess	m_ro_state -> internal . m_event_num		4865619	0					
ANR	4865635	PtrMemberAccess	m_ro_state -> internal		4865619	0					
ANR	4865636	Identifier	m_ro_state		4865619	0					
ANR	4865637	Identifier	internal		4865619	1					
ANR	4865638	Identifier	m_event_num		4865619	1					
ANR	4865639	Identifier	asint		4865619	1					
ANR	4865640	ReturnStatement	return true ;	107:1:2525:2536	4865619	2	True				
ANR	4865641	Identifier	true		4865619	0					
ANR	4865642	ReturnType	bool		4865619	1					
ANR	4865643	Identifier	ReadUserLogFileState :: getFileEventNum		4865619	2					
ANR	4865644	ParameterList	int64_t & num		4865619	3					
ANR	4865645	Parameter	int64_t & num	101:39:2406:2417	4865619	0	True				
ANR	4865646	ParameterType	int64_t &		4865619	0					
ANR	4865647	Identifier	num		4865619	1					
ANR	4865648	CFGEntryNode	ENTRY		4865619		True				
ANR	4865649	CFGExitNode	EXIT		4865619		True				
ANR	4865650	Symbol	* m_ro_state		4865619						
ANR	4865651	Symbol	NULL		4865619						
ANR	4865652	Symbol	m_ro_state -> internal . m_event_num		4865619						
ANR	4865653	Symbol	num		4865619						
ANR	4865654	Symbol	false		4865619						
ANR	4865655	Symbol	m_ro_state -> internal . m_event_num . asint		4865619						
ANR	4865656	Symbol	true		4865619						
ANR	4865657	Symbol	m_ro_state		4865619						
ANR	4865658	Symbol	m_ro_state -> internal		4865619						
ANR	4865659	Function	ReadUserLogFileState :: getLogPosition	110:0:2541:2719							
ANR	4865660	FunctionDef	ReadUserLogFileState :: getLogPosition (int64_t & pos)		4865659	0					
ANR	4865661	CompoundStatement		112:0:2605:2719	4865659	0					
ANR	4865662	IfStatement	if ( NULL == m_ro_state )		4865659	0					
ANR	4865663	Condition	NULL == m_ro_state	113:6:2613:2630	4865659	0	True				
ANR	4865664	EqualityExpression	NULL == m_ro_state		4865659	0		==			
ANR	4865665	Identifier	NULL		4865659	0					
ANR	4865666	Identifier	m_ro_state		4865659	1					
ANR	4865667	CompoundStatement		2:27:28:28	4865659	1					
ANR	4865668	ReturnStatement	return false ;	114:2:2638:2650	4865659	0	True				
ANR	4865669	Identifier	false		4865659	0					
ANR	4865670	ExpressionStatement	pos = m_ro_state -> internal . m_log_position . asint	116:1:2656:2703	4865659	1	True				
ANR	4865671	AssignmentExpression	pos = m_ro_state -> internal . m_log_position . asint		4865659	0		=			
ANR	4865672	Identifier	pos		4865659	0					
ANR	4865673	MemberAccess	m_ro_state -> internal . m_log_position . asint		4865659	1					
ANR	4865674	MemberAccess	m_ro_state -> internal . m_log_position		4865659	0					
ANR	4865675	PtrMemberAccess	m_ro_state -> internal		4865659	0					
ANR	4865676	Identifier	m_ro_state		4865659	0					
ANR	4865677	Identifier	internal		4865659	1					
ANR	4865678	Identifier	m_log_position		4865659	1					
ANR	4865679	Identifier	asint		4865659	1					
ANR	4865680	ReturnStatement	return true ;	117:1:2706:2717	4865659	2	True				
ANR	4865681	Identifier	true		4865659	0					
ANR	4865682	ReturnType	bool		4865659	1					
ANR	4865683	Identifier	ReadUserLogFileState :: getLogPosition		4865659	2					
ANR	4865684	ParameterList	int64_t & pos		4865659	3					
ANR	4865685	Parameter	int64_t & pos	111:38:2584:2595	4865659	0	True				
ANR	4865686	ParameterType	int64_t &		4865659	0					
ANR	4865687	Identifier	pos		4865659	1					
ANR	4865688	CFGEntryNode	ENTRY		4865659		True				
ANR	4865689	CFGExitNode	EXIT		4865659		True				
ANR	4865690	Symbol	* m_ro_state		4865659						
ANR	4865691	Symbol	NULL		4865659						
ANR	4865692	Symbol	pos		4865659						
ANR	4865693	Symbol	m_ro_state -> internal . m_log_position		4865659						
ANR	4865694	Symbol	false		4865659						
ANR	4865695	Symbol	true		4865659						
ANR	4865696	Symbol	m_ro_state		4865659						
ANR	4865697	Symbol	m_ro_state -> internal . m_log_position . asint		4865659						
ANR	4865698	Symbol	m_ro_state -> internal		4865659						
ANR	4865699	Function	ReadUserLogFileState :: getLogRecordNo	120:0:2722:2902							
ANR	4865700	FunctionDef	ReadUserLogFileState :: getLogRecordNo (int64_t & recno)		4865699	0					
ANR	4865701	CompoundStatement		122:0:2788:2902	4865699	0					
ANR	4865702	IfStatement	if ( NULL == m_ro_state )		4865699	0					
ANR	4865703	Condition	NULL == m_ro_state	123:6:2796:2813	4865699	0	True				
ANR	4865704	EqualityExpression	NULL == m_ro_state		4865699	0		==			
ANR	4865705	Identifier	NULL		4865699	0					
ANR	4865706	Identifier	m_ro_state		4865699	1					
ANR	4865707	CompoundStatement		2:27:28:28	4865699	1					
ANR	4865708	ReturnStatement	return false ;	124:2:2821:2833	4865699	0	True				
ANR	4865709	Identifier	false		4865699	0					
ANR	4865710	ExpressionStatement	recno = m_ro_state -> internal . m_log_record . asint	126:1:2839:2886	4865699	1	True				
ANR	4865711	AssignmentExpression	recno = m_ro_state -> internal . m_log_record . asint		4865699	0		=			
ANR	4865712	Identifier	recno		4865699	0					
ANR	4865713	MemberAccess	m_ro_state -> internal . m_log_record . asint		4865699	1					
ANR	4865714	MemberAccess	m_ro_state -> internal . m_log_record		4865699	0					
ANR	4865715	PtrMemberAccess	m_ro_state -> internal		4865699	0					
ANR	4865716	Identifier	m_ro_state		4865699	0					
ANR	4865717	Identifier	internal		4865699	1					
ANR	4865718	Identifier	m_log_record		4865699	1					
ANR	4865719	Identifier	asint		4865699	1					
ANR	4865720	ReturnStatement	return true ;	127:1:2889:2900	4865699	2	True				
ANR	4865721	Identifier	true		4865699	0					
ANR	4865722	ReturnType	bool		4865699	1					
ANR	4865723	Identifier	ReadUserLogFileState :: getLogRecordNo		4865699	2					
ANR	4865724	ParameterList	int64_t & recno		4865699	3					
ANR	4865725	Parameter	int64_t & recno	121:38:2765:2778	4865699	0	True				
ANR	4865726	ParameterType	int64_t &		4865699	0					
ANR	4865727	Identifier	recno		4865699	1					
ANR	4865728	CFGEntryNode	ENTRY		4865699		True				
ANR	4865729	CFGExitNode	EXIT		4865699		True				
ANR	4865730	Symbol	* m_ro_state		4865699						
ANR	4865731	Symbol	NULL		4865699						
ANR	4865732	Symbol	recno		4865699						
ANR	4865733	Symbol	false		4865699						
ANR	4865734	Symbol	m_ro_state -> internal . m_log_record . asint		4865699						
ANR	4865735	Symbol	true		4865699						
ANR	4865736	Symbol	m_ro_state		4865699						
ANR	4865737	Symbol	m_ro_state -> internal		4865699						
ANR	4865738	Symbol	m_ro_state -> internal . m_log_record		4865699						
ANR	4865739	Function	ReadUserLogFileState :: getSequenceNo	130:0:2905:3072							
ANR	4865740	FunctionDef	ReadUserLogFileState :: getSequenceNo (int & seqno)		4865739	0					
ANR	4865741	CompoundStatement		132:0:2966:3072	4865739	0					
ANR	4865742	IfStatement	if ( NULL == m_ro_state )		4865739	0					
ANR	4865743	Condition	NULL == m_ro_state	133:6:2974:2991	4865739	0	True				
ANR	4865744	EqualityExpression	NULL == m_ro_state		4865739	0		==			
ANR	4865745	Identifier	NULL		4865739	0					
ANR	4865746	Identifier	m_ro_state		4865739	1					
ANR	4865747	CompoundStatement		2:27:28:28	4865739	1					
ANR	4865748	ReturnStatement	return false ;	134:2:2999:3011	4865739	0	True				
ANR	4865749	Identifier	false		4865739	0					
ANR	4865750	ExpressionStatement	seqno = m_ro_state -> internal . m_sequence	136:1:3017:3056	4865739	1	True				
ANR	4865751	AssignmentExpression	seqno = m_ro_state -> internal . m_sequence		4865739	0		=			
ANR	4865752	Identifier	seqno		4865739	0					
ANR	4865753	MemberAccess	m_ro_state -> internal . m_sequence		4865739	1					
ANR	4865754	PtrMemberAccess	m_ro_state -> internal		4865739	0					
ANR	4865755	Identifier	m_ro_state		4865739	0					
ANR	4865756	Identifier	internal		4865739	1					
ANR	4865757	Identifier	m_sequence		4865739	1					
ANR	4865758	ReturnStatement	return true ;	137:1:3059:3070	4865739	2	True				
ANR	4865759	Identifier	true		4865739	0					
ANR	4865760	ReturnType	bool		4865739	1					
ANR	4865761	Identifier	ReadUserLogFileState :: getSequenceNo		4865739	2					
ANR	4865762	ParameterList	int & seqno		4865739	3					
ANR	4865763	Parameter	int & seqno	131:37:2947:2956	4865739	0	True				
ANR	4865764	ParameterType	int &		4865739	0					
ANR	4865765	Identifier	seqno		4865739	1					
ANR	4865766	CFGEntryNode	ENTRY		4865739		True				
ANR	4865767	CFGExitNode	EXIT		4865739		True				
ANR	4865768	Symbol	* m_ro_state		4865739						
ANR	4865769	Symbol	NULL		4865739						
ANR	4865770	Symbol	seqno		4865739						
ANR	4865771	Symbol	m_ro_state -> internal . m_sequence		4865739						
ANR	4865772	Symbol	false		4865739						
ANR	4865773	Symbol	true		4865739						
ANR	4865774	Symbol	m_ro_state		4865739						
ANR	4865775	Symbol	m_ro_state -> internal		4865739						
ANR	4865776	Function	ReadUserLogFileState :: getUniqId	140:0:3075:3278							
ANR	4865777	FunctionDef	"ReadUserLogFileState :: getUniqId (char * buf , int len)"		4865776	0					
ANR	4865778	CompoundStatement		142:0:3140:3278	4865776	0					
ANR	4865779	IfStatement	if ( NULL == m_ro_state )		4865776	0					
ANR	4865780	Condition	NULL == m_ro_state	143:6:3148:3165	4865776	0	True				
ANR	4865781	EqualityExpression	NULL == m_ro_state		4865776	0		==			
ANR	4865782	Identifier	NULL		4865776	0					
ANR	4865783	Identifier	m_ro_state		4865776	1					
ANR	4865784	CompoundStatement		2:27:28:28	4865776	1					
ANR	4865785	ReturnStatement	return false ;	144:2:3173:3185	4865776	0	True				
ANR	4865786	Identifier	false		4865776	0					
ANR	4865787	ExpressionStatement	"strncpy ( buf , m_ro_state -> internal . m_uniq_id , len )"	146:1:3191:3242	4865776	1	True				
ANR	4865788	CallExpression	"strncpy ( buf , m_ro_state -> internal . m_uniq_id , len )"		4865776	0					
ANR	4865789	Callee	strncpy		4865776	0					
ANR	4865790	Identifier	strncpy		4865776	0					
ANR	4865791	ArgumentList	buf		4865776	1					
ANR	4865792	Argument	buf		4865776	0					
ANR	4865793	Identifier	buf		4865776	0					
ANR	4865794	Argument	m_ro_state -> internal . m_uniq_id		4865776	1					
ANR	4865795	MemberAccess	m_ro_state -> internal . m_uniq_id		4865776	0					
ANR	4865796	PtrMemberAccess	m_ro_state -> internal		4865776	0					
ANR	4865797	Identifier	m_ro_state		4865776	0					
ANR	4865798	Identifier	internal		4865776	1					
ANR	4865799	Identifier	m_uniq_id		4865776	1					
ANR	4865800	Argument	len		4865776	2					
ANR	4865801	Identifier	len		4865776	0					
ANR	4865802	ExpressionStatement	buf [ len - 1 ] = '\\0'	147:1:3245:3262	4865776	2	True				
ANR	4865803	AssignmentExpression	buf [ len - 1 ] = '\\0'		4865776	0		=			
ANR	4865804	ArrayIndexing	buf [ len - 1 ]		4865776	0					
ANR	4865805	Identifier	buf		4865776	0					
ANR	4865806	AdditiveExpression	len - 1		4865776	1		-			
ANR	4865807	Identifier	len		4865776	0					
ANR	4865808	PrimaryExpression	1		4865776	1					
ANR	4865809	PrimaryExpression	'\\0'		4865776	1					
ANR	4865810	ReturnStatement	return true ;	148:1:3265:3276	4865776	3	True				
ANR	4865811	Identifier	true		4865776	0					
ANR	4865812	ReturnType	bool		4865776	1					
ANR	4865813	Identifier	ReadUserLogFileState :: getUniqId		4865776	2					
ANR	4865814	ParameterList	"char * buf , int len"		4865776	3					
ANR	4865815	Parameter	char * buf	141:33:3113:3121	4865776	0	True				
ANR	4865816	ParameterType	char *		4865776	0					
ANR	4865817	Identifier	buf		4865776	1					
ANR	4865818	Parameter	int len	141:44:3124:3130	4865776	1	True				
ANR	4865819	ParameterType	int		4865776	0					
ANR	4865820	Identifier	len		4865776	1					
ANR	4865821	CFGEntryNode	ENTRY		4865776		True				
ANR	4865822	CFGExitNode	EXIT		4865776		True				
ANR	4865823	Symbol	* m_ro_state		4865776						
ANR	4865824	Symbol	buf		4865776						
ANR	4865825	Symbol	* buf		4865776						
ANR	4865826	Symbol	NULL		4865776						
ANR	4865827	Symbol	len		4865776						
ANR	4865828	Symbol	m_ro_state -> internal . m_uniq_id		4865776						
ANR	4865829	Symbol	false		4865776						
ANR	4865830	Symbol	true		4865776						
ANR	4865831	Symbol	m_ro_state		4865776						
ANR	4865832	Symbol	m_ro_state -> internal		4865776						
ANR	4865833	Symbol	* len		4865776						
ANR	4865834	Function	ReadUserLogFileState :: InitState	152:0:3291:3891							
ANR	4865835	FunctionDef	ReadUserLogFileState :: InitState (ReadUserLog :: FileState & state)		4865834	0					
ANR	4865836	CompoundStatement		154:0:3361:3891	4865834	0					
ANR	4865837	Statement	state	155:1:3364:3368	4865834	0	True				
ANR	4865838	Statement	.	155:6:3369:3369	4865834	1	True				
ANR	4865839	Statement	buf	155:7:3370:3372	4865834	2	True				
ANR	4865840	Statement	=	155:12:3375:3375	4865834	3	True				
ANR	4865841	Statement	(	155:14:3377:3377	4865834	4	True				
ANR	4865842	Statement	void	155:15:3378:3381	4865834	5	True				
ANR	4865843	Statement	*	155:20:3383:3383	4865834	6	True				
ANR	4865844	Statement	)	155:21:3384:3384	4865834	7	True				
ANR	4865845	Statement	new	155:23:3386:3388	4865834	8	True				
ANR	4865846	ExpressionStatement	ReadUserLogState :: FileStatePub	155:27:3390:3420	4865834	9	True				
ANR	4865847	Identifier	ReadUserLogState :: FileStatePub		4865834	0					
ANR	4865848	ExpressionStatement	state . size = sizeof ( ReadUserLogState :: FileStatePub )	156:1:3423:3476	4865834	10	True				
ANR	4865849	AssignmentExpression	state . size = sizeof ( ReadUserLogState :: FileStatePub )		4865834	0		=			
ANR	4865850	MemberAccess	state . size		4865834	0					
ANR	4865851	Identifier	state		4865834	0					
ANR	4865852	Identifier	size		4865834	1					
ANR	4865853	SizeofExpression	sizeof ( ReadUserLogState :: FileStatePub )		4865834	1					
ANR	4865854	Sizeof	sizeof		4865834	0					
ANR	4865855	SizeofOperand	ReadUserLogState :: FileStatePub		4865834	1					
ANR	4865856	IdentifierDeclStatement	ReadUserLogFileState :: FileState * istate ;	158:1:3480:3519	4865834	11	True				
ANR	4865857	IdentifierDecl	* istate		4865834	0					
ANR	4865858	IdentifierDeclType	ReadUserLogFileState :: FileState *		4865834	0					
ANR	4865859	Identifier	istate		4865834	1					
ANR	4865860	IfStatement	"if ( ! convertState ( state , istate ) )"		4865834	12					
ANR	4865861	Condition	"! convertState ( state , istate )"	159:6:3527:3554	4865834	0	True				
ANR	4865862	UnaryOperationExpression	"! convertState ( state , istate )"		4865834	0					
ANR	4865863	UnaryOperator	!		4865834	0					
ANR	4865864	CallExpression	"convertState ( state , istate )"		4865834	1					
ANR	4865865	Callee	convertState		4865834	0					
ANR	4865866	Identifier	convertState		4865834	0					
ANR	4865867	ArgumentList	state		4865834	1					
ANR	4865868	Argument	state		4865834	0					
ANR	4865869	Identifier	state		4865834	0					
ANR	4865870	Argument	istate		4865834	1					
ANR	4865871	Identifier	istate		4865834	0					
ANR	4865872	CompoundStatement		6:38:197:197	4865834	1					
ANR	4865873	ReturnStatement	return false ;	160:2:3563:3575	4865834	0	True				
ANR	4865874	Identifier	false		4865834	0					
ANR	4865875	ExpressionStatement	"memset ( istate , 0 , sizeof ( ReadUserLogState :: FileStatePub ) )"	163:1:3582:3641	4865834	13	True				
ANR	4865876	CallExpression	"memset ( istate , 0 , sizeof ( ReadUserLogState :: FileStatePub ) )"		4865834	0					
ANR	4865877	Callee	memset		4865834	0					
ANR	4865878	Identifier	memset		4865834	0					
ANR	4865879	ArgumentList	istate		4865834	1					
ANR	4865880	Argument	istate		4865834	0					
ANR	4865881	Identifier	istate		4865834	0					
ANR	4865882	Argument	0		4865834	1					
ANR	4865883	PrimaryExpression	0		4865834	0					
ANR	4865884	Argument	sizeof ( ReadUserLogState :: FileStatePub )		4865834	2					
ANR	4865885	SizeofExpression	sizeof ( ReadUserLogState :: FileStatePub )		4865834	0					
ANR	4865886	Sizeof	sizeof		4865834	0					
ANR	4865887	SizeofOperand	ReadUserLogState :: FileStatePub		4865834	1					
ANR	4865888	ExpressionStatement	istate -> m_log_type = LOG_TYPE_UNKNOWN	164:1:3644:3681	4865834	14	True				
ANR	4865889	AssignmentExpression	istate -> m_log_type = LOG_TYPE_UNKNOWN		4865834	0		=			
ANR	4865890	PtrMemberAccess	istate -> m_log_type		4865834	0					
ANR	4865891	Identifier	istate		4865834	0					
ANR	4865892	Identifier	m_log_type		4865834	1					
ANR	4865893	Identifier	LOG_TYPE_UNKNOWN		4865834	1					
ANR	4865894	ExpressionStatement	"strncpy ( istate -> m_signature , FileStateSignature , sizeof ( istate -> m_signature ) )"	166:1:3685:3772	4865834	15	True				
ANR	4865895	CallExpression	"strncpy ( istate -> m_signature , FileStateSignature , sizeof ( istate -> m_signature ) )"		4865834	0					
ANR	4865896	Callee	strncpy		4865834	0					
ANR	4865897	Identifier	strncpy		4865834	0					
ANR	4865898	ArgumentList	istate -> m_signature		4865834	1					
ANR	4865899	Argument	istate -> m_signature		4865834	0					
ANR	4865900	PtrMemberAccess	istate -> m_signature		4865834	0					
ANR	4865901	Identifier	istate		4865834	0					
ANR	4865902	Identifier	m_signature		4865834	1					
ANR	4865903	Argument	FileStateSignature		4865834	1					
ANR	4865904	Identifier	FileStateSignature		4865834	0					
ANR	4865905	Argument	sizeof ( istate -> m_signature )		4865834	2					
ANR	4865906	SizeofExpression	sizeof ( istate -> m_signature )		4865834	0					
ANR	4865907	Sizeof	sizeof		4865834	0					
ANR	4865908	PtrMemberAccess	istate -> m_signature		4865834	1					
ANR	4865909	Identifier	istate		4865834	0					
ANR	4865910	Identifier	m_signature		4865834	1					
ANR	4865911	ExpressionStatement	istate -> m_signature [ sizeof ( istate -> m_signature ) - 1 ] = '\\0'	169:1:3775:3834	4865834	16	True				
ANR	4865912	AssignmentExpression	istate -> m_signature [ sizeof ( istate -> m_signature ) - 1 ] = '\\0'		4865834	0		=			
ANR	4865913	ArrayIndexing	istate -> m_signature [ sizeof ( istate -> m_signature ) - 1 ]		4865834	0					
ANR	4865914	PtrMemberAccess	istate -> m_signature		4865834	0					
ANR	4865915	Identifier	istate		4865834	0					
ANR	4865916	Identifier	m_signature		4865834	1					
ANR	4865917	AdditiveExpression	sizeof ( istate -> m_signature ) - 1		4865834	1		-			
ANR	4865918	SizeofExpression	sizeof ( istate -> m_signature )		4865834	0					
ANR	4865919	Sizeof	sizeof		4865834	0					
ANR	4865920	PtrMemberAccess	istate -> m_signature		4865834	1					
ANR	4865921	Identifier	istate		4865834	0					
ANR	4865922	Identifier	m_signature		4865834	1					
ANR	4865923	PrimaryExpression	1		4865834	1					
ANR	4865924	PrimaryExpression	'\\0'		4865834	1					
ANR	4865925	ExpressionStatement	istate -> m_version = FILESTATE_VERSION	170:1:3837:3874	4865834	17	True				
ANR	4865926	AssignmentExpression	istate -> m_version = FILESTATE_VERSION		4865834	0		=			
ANR	4865927	PtrMemberAccess	istate -> m_version		4865834	0					
ANR	4865928	Identifier	istate		4865834	0					
ANR	4865929	Identifier	m_version		4865834	1					
ANR	4865930	Identifier	FILESTATE_VERSION		4865834	1					
ANR	4865931	ReturnStatement	return true ;	172:1:3878:3889	4865834	18	True				
ANR	4865932	Identifier	true		4865834	0					
ANR	4865933	ReturnType	bool		4865834	1					
ANR	4865934	Identifier	ReadUserLogFileState :: InitState		4865834	2					
ANR	4865935	ParameterList	ReadUserLog :: FileState & state		4865834	3					
ANR	4865936	Parameter	ReadUserLog :: FileState & state	153:33:3329:3357	4865834	0	True				
ANR	4865937	ParameterType	ReadUserLog :: FileState &		4865834	0					
ANR	4865938	Identifier	state		4865834	1					
ANR	4865939	CFGEntryNode	ENTRY		4865834		True				
ANR	4865940	CFGExitNode	EXIT		4865834		True				
ANR	4865941	Symbol	istate -> m_log_type		4865834						
ANR	4865942	Symbol	istate -> m_version		4865834						
ANR	4865943	Symbol	istate -> m_signature		4865834						
ANR	4865944	Symbol	false		4865834						
ANR	4865945	Symbol	FileStateSignature		4865834						
ANR	4865946	Symbol	FILESTATE_VERSION		4865834						
ANR	4865947	Symbol	* istate		4865834						
ANR	4865948	Symbol	convertState		4865834						
ANR	4865949	Symbol	state . size		4865834						
ANR	4865950	Symbol	LOG_TYPE_UNKNOWN		4865834						
ANR	4865951	Symbol	true		4865834						
ANR	4865952	Symbol	* istate -> m_signature		4865834						
ANR	4865953	Symbol	state		4865834						
ANR	4865954	Symbol	* * istate		4865834						
ANR	4865955	Symbol	istate		4865834						
ANR	4865956	Function	ReadUserLogFileState :: UninitState	176:0:3904:4137							
ANR	4865957	FunctionDef	ReadUserLogFileState :: UninitState (ReadUserLog :: FileState & state)		4865956	0					
ANR	4865958	CompoundStatement		178:0:3976:4137	4865956	0					
ANR	4865959	IdentifierDeclStatement	ReadUserLogState :: FileStatePub * istate = ( ReadUserLogState :: FileStatePub * ) state . buf ;	179:1:3979:4066	4865956	0	True				
ANR	4865960	IdentifierDecl	* istate = ( ReadUserLogState :: FileStatePub * ) state . buf		4865956	0					
ANR	4865961	IdentifierDeclType	ReadUserLogState :: FileStatePub *		4865956	0					
ANR	4865962	Identifier	istate		4865956	1					
ANR	4865963	AssignmentExpression	* istate = ( ReadUserLogState :: FileStatePub * ) state . buf		4865956	2		=			
ANR	4865964	Identifier	istate		4865956	0					
ANR	4865965	CastExpression	( ReadUserLogState :: FileStatePub * ) state . buf		4865956	1					
ANR	4865966	CastTarget	ReadUserLogState :: FileStatePub *		4865956	0					
ANR	4865967	MemberAccess	state . buf		4865956	1					
ANR	4865968	Identifier	state		4865956	0					
ANR	4865969	Identifier	buf		4865956	1					
ANR	4865970	Statement	delete	182:1:4071:4076	4865956	1	True				
ANR	4865971	ExpressionStatement	istate	182:8:4078:4084	4865956	2	True				
ANR	4865972	Identifier	istate		4865956	0					
ANR	4865973	ExpressionStatement	state . buf = NULL	183:1:4087:4103	4865956	3	True				
ANR	4865974	AssignmentExpression	state . buf = NULL		4865956	0		=			
ANR	4865975	MemberAccess	state . buf		4865956	0					
ANR	4865976	Identifier	state		4865956	0					
ANR	4865977	Identifier	buf		4865956	1					
ANR	4865978	Identifier	NULL		4865956	1					
ANR	4865979	ExpressionStatement	state . size = 0	184:1:4106:4120	4865956	4	True				
ANR	4865980	AssignmentExpression	state . size = 0		4865956	0		=			
ANR	4865981	MemberAccess	state . size		4865956	0					
ANR	4865982	Identifier	state		4865956	0					
ANR	4865983	Identifier	size		4865956	1					
ANR	4865984	PrimaryExpression	0		4865956	1					
ANR	4865985	ReturnStatement	return true ;	186:1:4124:4135	4865956	5	True				
ANR	4865986	Identifier	true		4865956	0					
ANR	4865987	ReturnType	bool		4865956	1					
ANR	4865988	Identifier	ReadUserLogFileState :: UninitState		4865956	2					
ANR	4865989	ParameterList	ReadUserLog :: FileState & state		4865956	3					
ANR	4865990	Parameter	ReadUserLog :: FileState & state	177:35:3944:3972	4865956	0	True				
ANR	4865991	ParameterType	ReadUserLog :: FileState &		4865956	0					
ANR	4865992	Identifier	state		4865956	1					
ANR	4865993	CFGEntryNode	ENTRY		4865956		True				
ANR	4865994	CFGExitNode	EXIT		4865956		True				
ANR	4865995	Symbol	state . buf		4865956						
ANR	4865996	Symbol	NULL		4865956						
ANR	4865997	Symbol	state . size		4865956						
ANR	4865998	Symbol	true		4865956						
ANR	4865999	Symbol	state		4865956						
ANR	4866000	Symbol	istate		4865956						
ANR	4866001	Function	ReadUserLogFileState :: convertState	190:0:4150:4361							
ANR	4866002	FunctionDef	"ReadUserLogFileState :: convertState (const ReadUserLog :: FileState & state , const ReadUserLogFileState :: FileStatePub * & pub)"		4866001	0					
ANR	4866003	CompoundStatement		194:0:4282:4361	4866001	0					
ANR	4866004	ExpressionStatement	pub = ( const ReadUserLogFileState :: FileStatePub * ) state . buf	195:1:4285:4345	4866001	0	True				
ANR	4866005	AssignmentExpression	pub = ( const ReadUserLogFileState :: FileStatePub * ) state . buf		4866001	0		=			
ANR	4866006	Identifier	pub		4866001	0					
ANR	4866007	CastExpression	( const ReadUserLogFileState :: FileStatePub * ) state . buf		4866001	1					
ANR	4866008	CastTarget	const ReadUserLogFileState :: FileStatePub *		4866001	0					
ANR	4866009	MemberAccess	state . buf		4866001	1					
ANR	4866010	Identifier	state		4866001	0					
ANR	4866011	Identifier	buf		4866001	1					
ANR	4866012	ReturnStatement	return true ;	196:1:4348:4359	4866001	1	True				
ANR	4866013	Identifier	true		4866001	0					
ANR	4866014	ReturnType	bool		4866001	1					
ANR	4866015	Identifier	ReadUserLogFileState :: convertState		4866001	2					
ANR	4866016	ParameterList	"const ReadUserLog :: FileState & state , const ReadUserLogFileState :: FileStatePub * & pub"		4866001	3					
ANR	4866017	Parameter	const ReadUserLog :: FileState & state	192:1:4192:4229	4866001	0	True				
ANR	4866018	ParameterType	const ReadUserLog :: FileState &		4866001	0					
ANR	4866019	Identifier	state		4866001	1					
ANR	4866020	Parameter	const ReadUserLogFileState :: FileStatePub * & pub	193:1:4233:4278	4866001	1	True				
ANR	4866021	ParameterType	const ReadUserLogFileState :: FileStatePub * &		4866001	0					
ANR	4866022	Identifier	pub		4866001	1					
ANR	4866023	CFGEntryNode	ENTRY		4866001		True				
ANR	4866024	CFGExitNode	EXIT		4866001		True				
ANR	4866025	Symbol	state . buf		4866001						
ANR	4866026	Symbol	true		4866001						
ANR	4866027	Symbol	state		4866001						
ANR	4866028	Symbol	pub		4866001						
ANR	4866029	Function	ReadUserLogFileState :: convertState	199:0:4373:4566							
ANR	4866030	FunctionDef	"ReadUserLogFileState :: convertState (ReadUserLog :: FileState & state , ReadUserLogFileState :: FileStatePub * & pub)"		4866029	0					
ANR	4866031	CompoundStatement		203:0:4493:4566	4866029	0					
ANR	4866032	ExpressionStatement	pub = ( ReadUserLogFileState :: FileStatePub * ) state . buf	204:1:4496:4550	4866029	0	True				
ANR	4866033	AssignmentExpression	pub = ( ReadUserLogFileState :: FileStatePub * ) state . buf		4866029	0		=			
ANR	4866034	Identifier	pub		4866029	0					
ANR	4866035	CastExpression	( ReadUserLogFileState :: FileStatePub * ) state . buf		4866029	1					
ANR	4866036	CastTarget	ReadUserLogFileState :: FileStatePub *		4866029	0					
ANR	4866037	MemberAccess	state . buf		4866029	1					
ANR	4866038	Identifier	state		4866029	0					
ANR	4866039	Identifier	buf		4866029	1					
ANR	4866040	ReturnStatement	return true ;	205:1:4553:4564	4866029	1	True				
ANR	4866041	Identifier	true		4866029	0					
ANR	4866042	ReturnType	bool		4866029	1					
ANR	4866043	Identifier	ReadUserLogFileState :: convertState		4866029	2					
ANR	4866044	ParameterList	"ReadUserLog :: FileState & state , ReadUserLogFileState :: FileStatePub * & pub"		4866029	3					
ANR	4866045	Parameter	ReadUserLog :: FileState & state	201:1:4415:4446	4866029	0	True				
ANR	4866046	ParameterType	ReadUserLog :: FileState &		4866029	0					
ANR	4866047	Identifier	state		4866029	1					
ANR	4866048	Parameter	ReadUserLogFileState :: FileStatePub * & pub	202:1:4450:4489	4866029	1	True				
ANR	4866049	ParameterType	ReadUserLogFileState :: FileStatePub * &		4866029	0					
ANR	4866050	Identifier	pub		4866029	1					
ANR	4866051	CFGEntryNode	ENTRY		4866029		True				
ANR	4866052	CFGExitNode	EXIT		4866029		True				
ANR	4866053	Symbol	state . buf		4866029						
ANR	4866054	Symbol	true		4866029						
ANR	4866055	Symbol	state		4866029						
ANR	4866056	Symbol	pub		4866029						
ANR	4866057	Function	ReadUserLogFileState :: convertState	208:0:4578:4832							
ANR	4866058	FunctionDef	"ReadUserLogFileState :: convertState (const ReadUserLog :: FileState & state , const ReadUserLogFileState :: FileState * & internal)"		4866057	0					
ANR	4866059	CompoundStatement		212:0:4711:4832	4866057	0					
ANR	4866060	IdentifierDeclStatement	const ReadUserLogFileState :: FileStatePub * pub ;	213:1:4714:4759	4866057	0	True				
ANR	4866061	IdentifierDecl	* pub		4866057	0					
ANR	4866062	IdentifierDeclType	const ReadUserLogFileState :: FileStatePub *		4866057	0					
ANR	4866063	Identifier	pub		4866057	1					
ANR	4866064	ExpressionStatement	"convertState ( state , pub )"	214:1:4762:4786	4866057	1	True				
ANR	4866065	CallExpression	"convertState ( state , pub )"		4866057	0					
ANR	4866066	Callee	convertState		4866057	0					
ANR	4866067	Identifier	convertState		4866057	0					
ANR	4866068	ArgumentList	state		4866057	1					
ANR	4866069	Argument	state		4866057	0					
ANR	4866070	Identifier	state		4866057	0					
ANR	4866071	Argument	pub		4866057	1					
ANR	4866072	Identifier	pub		4866057	0					
ANR	4866073	ExpressionStatement	internal = & ( pub -> internal )	215:1:4789:4816	4866057	2	True				
ANR	4866074	AssignmentExpression	internal = & ( pub -> internal )		4866057	0		=			
ANR	4866075	Identifier	internal		4866057	0					
ANR	4866076	UnaryOperationExpression	& ( pub -> internal )		4866057	1					
ANR	4866077	UnaryOperator	&		4866057	0					
ANR	4866078	PtrMemberAccess	pub -> internal		4866057	1					
ANR	4866079	Identifier	pub		4866057	0					
ANR	4866080	Identifier	internal		4866057	1					
ANR	4866081	ReturnStatement	return true ;	216:1:4819:4830	4866057	3	True				
ANR	4866082	Identifier	true		4866057	0					
ANR	4866083	ReturnType	bool		4866057	1					
ANR	4866084	Identifier	ReadUserLogFileState :: convertState		4866057	2					
ANR	4866085	ParameterList	"const ReadUserLog :: FileState & state , const ReadUserLogFileState :: FileState * & internal"		4866057	3					
ANR	4866086	Parameter	const ReadUserLog :: FileState & state	210:1:4620:4656	4866057	0	True				
ANR	4866087	ParameterType	const ReadUserLog :: FileState &		4866057	0					
ANR	4866088	Identifier	state		4866057	1					
ANR	4866089	Parameter	const ReadUserLogFileState :: FileState * & internal	211:1:4660:4707	4866057	1	True				
ANR	4866090	ParameterType	const ReadUserLogFileState :: FileState * &		4866057	0					
ANR	4866091	Identifier	internal		4866057	1					
ANR	4866092	CFGEntryNode	ENTRY		4866057		True				
ANR	4866093	CFGExitNode	EXIT		4866057		True				
ANR	4866094	Symbol	internal		4866057						
ANR	4866095	Symbol	true		4866057						
ANR	4866096	Symbol	& pub -> internal		4866057						
ANR	4866097	Symbol	state		4866057						
ANR	4866098	Symbol	pub		4866057						
ANR	4866099	Function	ReadUserLogFileState :: convertState	219:0:4844:5080							
ANR	4866100	FunctionDef	"ReadUserLogFileState :: convertState (ReadUserLog :: FileState & state , ReadUserLogFileState :: FileState * & internal)"		4866099	0					
ANR	4866101	CompoundStatement		223:0:4965:5080	4866099	0					
ANR	4866102	IdentifierDeclStatement	ReadUserLogFileState :: FileStatePub * pub ;	224:1:4968:5007	4866099	0	True				
ANR	4866103	IdentifierDecl	* pub		4866099	0					
ANR	4866104	IdentifierDeclType	ReadUserLogFileState :: FileStatePub *		4866099	0					
ANR	4866105	Identifier	pub		4866099	1					
ANR	4866106	ExpressionStatement	"convertState ( state , pub )"	225:1:5010:5034	4866099	1	True				
ANR	4866107	CallExpression	"convertState ( state , pub )"		4866099	0					
ANR	4866108	Callee	convertState		4866099	0					
ANR	4866109	Identifier	convertState		4866099	0					
ANR	4866110	ArgumentList	state		4866099	1					
ANR	4866111	Argument	state		4866099	0					
ANR	4866112	Identifier	state		4866099	0					
ANR	4866113	Argument	pub		4866099	1					
ANR	4866114	Identifier	pub		4866099	0					
ANR	4866115	ExpressionStatement	internal = & ( pub -> internal )	226:1:5037:5064	4866099	2	True				
ANR	4866116	AssignmentExpression	internal = & ( pub -> internal )		4866099	0		=			
ANR	4866117	Identifier	internal		4866099	0					
ANR	4866118	UnaryOperationExpression	& ( pub -> internal )		4866099	1					
ANR	4866119	UnaryOperator	&		4866099	0					
ANR	4866120	PtrMemberAccess	pub -> internal		4866099	1					
ANR	4866121	Identifier	pub		4866099	0					
ANR	4866122	Identifier	internal		4866099	1					
ANR	4866123	ReturnStatement	return true ;	227:1:5067:5078	4866099	3	True				
ANR	4866124	Identifier	true		4866099	0					
ANR	4866125	ReturnType	bool		4866099	1					
ANR	4866126	Identifier	ReadUserLogFileState :: convertState		4866099	2					
ANR	4866127	ParameterList	"ReadUserLog :: FileState & state , ReadUserLogFileState :: FileState * & internal"		4866099	3					
ANR	4866128	Parameter	ReadUserLog :: FileState & state	221:1:4886:4916	4866099	0	True				
ANR	4866129	ParameterType	ReadUserLog :: FileState &		4866099	0					
ANR	4866130	Identifier	state		4866099	1					
ANR	4866131	Parameter	ReadUserLogFileState :: FileState * & internal	222:1:4920:4961	4866099	1	True				
ANR	4866132	ParameterType	ReadUserLogFileState :: FileState * &		4866099	0					
ANR	4866133	Identifier	internal		4866099	1					
ANR	4866134	CFGEntryNode	ENTRY		4866099		True				
ANR	4866135	CFGExitNode	EXIT		4866099		True				
ANR	4866136	Symbol	internal		4866099						
ANR	4866137	Symbol	true		4866099						
ANR	4866138	Symbol	& pub -> internal		4866099						
ANR	4866139	Symbol	state		4866099						
ANR	4866140	Symbol	pub		4866099						
ANR	4866141	Function	ReadUserLogState :: ReadUserLogState	234:0:5180:5487							
ANR	4866142	FunctionDef	"ReadUserLogState :: ReadUserLogState (const char * path , int max_rotations , int recent_thresh)"		4866141	0					
ANR	4866143	CompoundStatement		239:0:5312:5487	4866141	0					
ANR	4866144	ExpressionStatement	Reset ( RESET_INIT )	240:1:5315:5334	4866141	0	True				
ANR	4866145	CallExpression	Reset ( RESET_INIT )		4866141	0					
ANR	4866146	Callee	Reset		4866141	0					
ANR	4866147	Identifier	Reset		4866141	0					
ANR	4866148	ArgumentList	RESET_INIT		4866141	1					
ANR	4866149	Argument	RESET_INIT		4866141	0					
ANR	4866150	Identifier	RESET_INIT		4866141	0					
ANR	4866151	ExpressionStatement	m_max_rotations = max_rotations	241:1:5337:5368	4866141	1	True				
ANR	4866152	AssignmentExpression	m_max_rotations = max_rotations		4866141	0		=			
ANR	4866153	Identifier	m_max_rotations		4866141	0					
ANR	4866154	Identifier	max_rotations		4866141	1					
ANR	4866155	ExpressionStatement	m_recent_thresh = recent_thresh	242:1:5371:5402	4866141	2	True				
ANR	4866156	AssignmentExpression	m_recent_thresh = recent_thresh		4866141	0		=			
ANR	4866157	Identifier	m_recent_thresh		4866141	0					
ANR	4866158	Identifier	recent_thresh		4866141	1					
ANR	4866159	IfStatement	if ( path )		4866141	3					
ANR	4866160	Condition	path	243:6:5410:5413	4866141	0	True				
ANR	4866161	Identifier	path		4866141	0					
ANR	4866162	CompoundStatement		5:13:104:104	4866141	1					
ANR	4866163	ExpressionStatement	m_base_path = path	244:2:5421:5439	4866141	0	True				
ANR	4866164	AssignmentExpression	m_base_path = path		4866141	0		=			
ANR	4866165	Identifier	m_base_path		4866141	0					
ANR	4866166	Identifier	path		4866141	1					
ANR	4866167	ExpressionStatement	m_initialized = true	246:1:5445:5465	4866141	4	True				
ANR	4866168	AssignmentExpression	m_initialized = true		4866141	0		=			
ANR	4866169	Identifier	m_initialized		4866141	0					
ANR	4866170	Identifier	true		4866141	1					
ANR	4866171	ExpressionStatement	m_update_time = 0	247:1:5468:5485	4866141	5	True				
ANR	4866172	AssignmentExpression	m_update_time = 0		4866141	0		=			
ANR	4866173	Identifier	m_update_time		4866141	0					
ANR	4866174	PrimaryExpression	0		4866141	1					
ANR	4866175	Identifier	ReadUserLogState :: ReadUserLogState		4866141	1					
ANR	4866176	ParameterList	"const char * path , int max_rotations , int recent_thresh"		4866141	2					
ANR	4866177	Parameter	const char * path	235:1:5217:5233	4866141	0	True				
ANR	4866178	ParameterType	const char *		4866141	0					
ANR	4866179	Identifier	path		4866141	1					
ANR	4866180	Parameter	int max_rotations	236:1:5237:5257	4866141	1	True				
ANR	4866181	ParameterType	int		4866141	0					
ANR	4866182	Identifier	max_rotations		4866141	1					
ANR	4866183	Parameter	int recent_thresh	237:1:5261:5281	4866141	2	True				
ANR	4866184	ParameterType	int		4866141	0					
ANR	4866185	Identifier	recent_thresh		4866141	1					
ANR	4866186	CFGEntryNode	ENTRY		4866141		True				
ANR	4866187	CFGExitNode	EXIT		4866141		True				
ANR	4866188	Symbol	path		4866141						
ANR	4866189	Symbol	m_initialized		4866141						
ANR	4866190	Symbol	true		4866141						
ANR	4866191	Symbol	m_max_rotations		4866141						
ANR	4866192	Symbol	m_update_time		4866141						
ANR	4866193	Symbol	recent_thresh		4866141						
ANR	4866194	Symbol	RESET_INIT		4866141						
ANR	4866195	Symbol	m_recent_thresh		4866141						
ANR	4866196	Symbol	m_base_path		4866141						
ANR	4866197	Symbol	max_rotations		4866141						
ANR	4866198	Function	ReadUserLogState :: ReadUserLogState	250:0:5490:5878							
ANR	4866199	FunctionDef	"ReadUserLogState :: ReadUserLogState (const ReadUserLog :: FileState & state , int recent_thresh)"		4866198	0					
ANR	4866200	CompoundStatement		254:0:5626:5878	4866198	0					
ANR	4866201	ExpressionStatement	Reset ( RESET_INIT )	255:1:5629:5648	4866198	0	True				
ANR	4866202	CallExpression	Reset ( RESET_INIT )		4866198	0					
ANR	4866203	Callee	Reset		4866198	0					
ANR	4866204	Identifier	Reset		4866198	0					
ANR	4866205	ArgumentList	RESET_INIT		4866198	1					
ANR	4866206	Argument	RESET_INIT		4866198	0					
ANR	4866207	Identifier	RESET_INIT		4866198	0					
ANR	4866208	ExpressionStatement	m_recent_thresh = recent_thresh	256:1:5651:5682	4866198	1	True				
ANR	4866209	AssignmentExpression	m_recent_thresh = recent_thresh		4866198	0		=			
ANR	4866210	Identifier	m_recent_thresh		4866198	0					
ANR	4866211	Identifier	recent_thresh		4866198	1					
ANR	4866212	IfStatement	if ( ! SetState ( state ) )		4866198	2					
ANR	4866213	Condition	! SetState ( state )	259:6:5746:5763	4866198	0	True				
ANR	4866214	UnaryOperationExpression	! SetState ( state )		4866198	0					
ANR	4866215	UnaryOperator	!		4866198	0					
ANR	4866216	CallExpression	SetState ( state )		4866198	1					
ANR	4866217	Callee	SetState		4866198	0					
ANR	4866218	Identifier	SetState		4866198	0					
ANR	4866219	ArgumentList	state		4866198	1					
ANR	4866220	Argument	state		4866198	0					
ANR	4866221	Identifier	state		4866198	0					
ANR	4866222	CompoundStatement		6:27:140:140	4866198	1					
ANR	4866223	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""::ReadUserLogState: failed to set state from buffer\\n"" )"	260:2:5771:5850	4866198	0	True				
ANR	4866224	CallExpression	"dprintf ( D_FULLDEBUG , ""::ReadUserLogState: failed to set state from buffer\\n"" )"		4866198	0					
ANR	4866225	Callee	dprintf		4866198	0					
ANR	4866226	Identifier	dprintf		4866198	0					
ANR	4866227	ArgumentList	D_FULLDEBUG		4866198	1					
ANR	4866228	Argument	D_FULLDEBUG		4866198	0					
ANR	4866229	Identifier	D_FULLDEBUG		4866198	0					
ANR	4866230	Argument	"""::ReadUserLogState: failed to set state from buffer\\n"""		4866198	1					
ANR	4866231	PrimaryExpression	"""::ReadUserLogState: failed to set state from buffer\\n"""		4866198	0					
ANR	4866232	ExpressionStatement	m_init_error = true	261:2:5854:5873	4866198	1	True				
ANR	4866233	AssignmentExpression	m_init_error = true		4866198	0		=			
ANR	4866234	Identifier	m_init_error		4866198	0					
ANR	4866235	Identifier	true		4866198	1					
ANR	4866236	Identifier	ReadUserLogState :: ReadUserLogState		4866198	1					
ANR	4866237	ParameterList	"const ReadUserLog :: FileState & state , int recent_thresh"		4866198	2					
ANR	4866238	Parameter	const ReadUserLog :: FileState & state	251:1:5527:5561	4866198	0	True				
ANR	4866239	ParameterType	const ReadUserLog :: FileState &		4866198	0					
ANR	4866240	Identifier	state		4866198	1					
ANR	4866241	Parameter	int recent_thresh	252:1:5565:5589	4866198	1	True				
ANR	4866242	ParameterType	int		4866198	0					
ANR	4866243	Identifier	recent_thresh		4866198	1					
ANR	4866244	CFGEntryNode	ENTRY		4866198		True				
ANR	4866245	CFGExitNode	EXIT		4866198		True				
ANR	4866246	Symbol	m_init_error		4866198						
ANR	4866247	Symbol	true		4866198						
ANR	4866248	Symbol	recent_thresh		4866198						
ANR	4866249	Symbol	D_FULLDEBUG		4866198						
ANR	4866250	Symbol	state		4866198						
ANR	4866251	Symbol	RESET_INIT		4866198						
ANR	4866252	Symbol	m_recent_thresh		4866198						
ANR	4866253	Symbol	SetState		4866198						
ANR	4866254	Function	ReadUserLogState :: ReadUserLogState	264:0:5880:5994							
ANR	4866255	FunctionDef	ReadUserLogState :: ReadUserLogState ()		4866254	0					
ANR	4866256	CompoundStatement		266:0:5950:5994	4866254	0					
ANR	4866257	ExpressionStatement	m_update_time = 0	267:1:5953:5970	4866254	0	True				
ANR	4866258	AssignmentExpression	m_update_time = 0		4866254	0		=			
ANR	4866259	Identifier	m_update_time		4866254	0					
ANR	4866260	PrimaryExpression	0		4866254	1					
ANR	4866261	ExpressionStatement	Reset ( RESET_INIT )	268:1:5973:5992	4866254	1	True				
ANR	4866262	CallExpression	Reset ( RESET_INIT )		4866254	0					
ANR	4866263	Callee	Reset		4866254	0					
ANR	4866264	Identifier	Reset		4866254	0					
ANR	4866265	ArgumentList	RESET_INIT		4866254	1					
ANR	4866266	Argument	RESET_INIT		4866254	0					
ANR	4866267	Identifier	RESET_INIT		4866254	0					
ANR	4866268	Identifier	ReadUserLogState :: ReadUserLogState		4866254	1					
ANR	4866269	ParameterList			4866254	2					
ANR	4866270	CFGEntryNode	ENTRY		4866254		True				
ANR	4866271	CFGExitNode	EXIT		4866254		True				
ANR	4866272	Symbol	m_update_time		4866254						
ANR	4866273	Symbol	RESET_INIT		4866254						
ANR	4866274	Function	ReadUserLogState :: ~ReadUserLogState	272:0:5998:6066							
ANR	4866275	FunctionDef	ReadUserLogState :: ~ReadUserLogState ()		4866274	0					
ANR	4866276	CompoundStatement		273:0:6042:6066	4866274	0					
ANR	4866277	ExpressionStatement	Reset ( RESET_FULL )	274:1:6045:6064	4866274	0	True				
ANR	4866278	CallExpression	Reset ( RESET_FULL )		4866274	0					
ANR	4866279	Callee	Reset		4866274	0					
ANR	4866280	Identifier	Reset		4866274	0					
ANR	4866281	ArgumentList	RESET_FULL		4866274	1					
ANR	4866282	Argument	RESET_FULL		4866274	0					
ANR	4866283	Identifier	RESET_FULL		4866274	0					
ANR	4866284	Identifier	ReadUserLogState :: ~ReadUserLogState		4866274	1					
ANR	4866285	ParameterList			4866274	2					
ANR	4866286	CFGEntryNode	ENTRY		4866274		True				
ANR	4866287	CFGExitNode	EXIT		4866274		True				
ANR	4866288	Symbol	RESET_FULL		4866274						
ANR	4866289	Function	ReadUserLogState :: Reset	277:0:6069:6854							
ANR	4866290	FunctionDef	ReadUserLogState :: Reset (ResetType type)		4866289	0					
ANR	4866291	CompoundStatement		279:0:6116:6854	4866289	0					
ANR	4866292	IfStatement	if ( RESET_INIT == type )		4866289	0					
ANR	4866293	Condition	RESET_INIT == type	281:6:6164:6181	4866289	0	True				
ANR	4866294	EqualityExpression	RESET_INIT == type		4866289	0		==			
ANR	4866295	Identifier	RESET_INIT		4866289	0					
ANR	4866296	Identifier	type		4866289	1					
ANR	4866297	CompoundStatement		3:27:68:68	4866289	1					
ANR	4866298	ExpressionStatement	m_initialized = false	282:2:6189:6210	4866289	0	True				
ANR	4866299	AssignmentExpression	m_initialized = false		4866289	0		=			
ANR	4866300	Identifier	m_initialized		4866289	0					
ANR	4866301	Identifier	false		4866289	1					
ANR	4866302	ExpressionStatement	m_init_error = false	283:2:6214:6234	4866289	1	True				
ANR	4866303	AssignmentExpression	m_init_error = false		4866289	0		=			
ANR	4866304	Identifier	m_init_error		4866289	0					
ANR	4866305	Identifier	false		4866289	1					
ANR	4866306	ExpressionStatement	"m_base_path = """""	284:2:6238:6254	4866289	2	True				
ANR	4866307	AssignmentExpression	"m_base_path = """""		4866289	0		=			
ANR	4866308	Identifier	m_base_path		4866289	0					
ANR	4866309	PrimaryExpression	""""""		4866289	1					
ANR	4866310	ExpressionStatement	m_max_rotations = 0	285:2:6258:6277	4866289	3	True				
ANR	4866311	AssignmentExpression	m_max_rotations = 0		4866289	0		=			
ANR	4866312	Identifier	m_max_rotations		4866289	0					
ANR	4866313	PrimaryExpression	0		4866289	1					
ANR	4866314	ExpressionStatement	m_recent_thresh = 0	287:2:6282:6301	4866289	4	True				
ANR	4866315	AssignmentExpression	m_recent_thresh = 0		4866289	0		=			
ANR	4866316	Identifier	m_recent_thresh		4866289	0					
ANR	4866317	PrimaryExpression	0		4866289	1					
ANR	4866318	ExpressionStatement	m_score_fact_ctime = 0	288:2:6305:6327	4866289	5	True				
ANR	4866319	AssignmentExpression	m_score_fact_ctime = 0		4866289	0		=			
ANR	4866320	Identifier	m_score_fact_ctime		4866289	0					
ANR	4866321	PrimaryExpression	0		4866289	1					
ANR	4866322	ExpressionStatement	m_score_fact_inode = 0	289:2:6331:6353	4866289	6	True				
ANR	4866323	AssignmentExpression	m_score_fact_inode = 0		4866289	0		=			
ANR	4866324	Identifier	m_score_fact_inode		4866289	0					
ANR	4866325	PrimaryExpression	0		4866289	1					
ANR	4866326	ExpressionStatement	m_score_fact_same_size = 0	290:2:6357:6383	4866289	7	True				
ANR	4866327	AssignmentExpression	m_score_fact_same_size = 0		4866289	0		=			
ANR	4866328	Identifier	m_score_fact_same_size		4866289	0					
ANR	4866329	PrimaryExpression	0		4866289	1					
ANR	4866330	ExpressionStatement	m_score_fact_grown = 0	291:2:6387:6409	4866289	8	True				
ANR	4866331	AssignmentExpression	m_score_fact_grown = 0		4866289	0		=			
ANR	4866332	Identifier	m_score_fact_grown		4866289	0					
ANR	4866333	PrimaryExpression	0		4866289	1					
ANR	4866334	ExpressionStatement	m_score_fact_shrunk = 0	292:2:6413:6436	4866289	9	True				
ANR	4866335	AssignmentExpression	m_score_fact_shrunk = 0		4866289	0		=			
ANR	4866336	Identifier	m_score_fact_shrunk		4866289	0					
ANR	4866337	PrimaryExpression	0		4866289	1					
ANR	4866338	ElseStatement	else		4866289	0					
ANR	4866339	IfStatement	if ( RESET_FULL == type )		4866289	0					
ANR	4866340	Condition	RESET_FULL == type	296:11:6484:6501	4866289	0	True				
ANR	4866341	EqualityExpression	RESET_FULL == type		4866289	0		==			
ANR	4866342	Identifier	RESET_FULL		4866289	0					
ANR	4866343	Identifier	type		4866289	1					
ANR	4866344	CompoundStatement		18:32:388:388	4866289	1					
ANR	4866345	ExpressionStatement	"m_base_path = """""	297:2:6509:6525	4866289	0	True				
ANR	4866346	AssignmentExpression	"m_base_path = """""		4866289	0		=			
ANR	4866347	Identifier	m_base_path		4866289	0					
ANR	4866348	PrimaryExpression	""""""		4866289	1					
ANR	4866349	ExpressionStatement	"m_cur_path = """""	301:1:6566:6581	4866289	1	True				
ANR	4866350	AssignmentExpression	"m_cur_path = """""		4866289	0		=			
ANR	4866351	Identifier	m_cur_path		4866289	0					
ANR	4866352	PrimaryExpression	""""""		4866289	1					
ANR	4866353	ExpressionStatement	m_cur_rot = - 1	302:1:6584:6598	4866289	2	True				
ANR	4866354	AssignmentExpression	m_cur_rot = - 1		4866289	0		=			
ANR	4866355	Identifier	m_cur_rot		4866289	0					
ANR	4866356	UnaryOperationExpression	- 1		4866289	1					
ANR	4866357	UnaryOperator	-		4866289	0					
ANR	4866358	PrimaryExpression	1		4866289	1					
ANR	4866359	ExpressionStatement	"m_uniq_id = """""	303:1:6601:6615	4866289	3	True				
ANR	4866360	AssignmentExpression	"m_uniq_id = """""		4866289	0		=			
ANR	4866361	Identifier	m_uniq_id		4866289	0					
ANR	4866362	PrimaryExpression	""""""		4866289	1					
ANR	4866363	ExpressionStatement	m_sequence = 0	304:1:6618:6632	4866289	4	True				
ANR	4866364	AssignmentExpression	m_sequence = 0		4866289	0		=			
ANR	4866365	Identifier	m_sequence		4866289	0					
ANR	4866366	PrimaryExpression	0		4866289	1					
ANR	4866367	ExpressionStatement	"memset ( & m_stat_buf , 0 , sizeof ( m_stat_buf ) )"	306:1:6636:6680	4866289	5	True				
ANR	4866368	CallExpression	"memset ( & m_stat_buf , 0 , sizeof ( m_stat_buf ) )"		4866289	0					
ANR	4866369	Callee	memset		4866289	0					
ANR	4866370	Identifier	memset		4866289	0					
ANR	4866371	ArgumentList	& m_stat_buf		4866289	1					
ANR	4866372	Argument	& m_stat_buf		4866289	0					
ANR	4866373	UnaryOperationExpression	& m_stat_buf		4866289	0					
ANR	4866374	UnaryOperator	&		4866289	0					
ANR	4866375	Identifier	m_stat_buf		4866289	1					
ANR	4866376	Argument	0		4866289	1					
ANR	4866377	PrimaryExpression	0		4866289	0					
ANR	4866378	Argument	sizeof ( m_stat_buf )		4866289	2					
ANR	4866379	SizeofExpression	sizeof ( m_stat_buf )		4866289	0					
ANR	4866380	Sizeof	sizeof		4866289	0					
ANR	4866381	SizeofOperand	m_stat_buf		4866289	1					
ANR	4866382	ExpressionStatement	m_status_size = - 1	307:1:6683:6701	4866289	6	True				
ANR	4866383	AssignmentExpression	m_status_size = - 1		4866289	0		=			
ANR	4866384	Identifier	m_status_size		4866289	0					
ANR	4866385	UnaryOperationExpression	- 1		4866289	1					
ANR	4866386	UnaryOperator	-		4866289	0					
ANR	4866387	PrimaryExpression	1		4866289	1					
ANR	4866388	ExpressionStatement	m_stat_valid = false	309:1:6705:6725	4866289	7	True				
ANR	4866389	AssignmentExpression	m_stat_valid = false		4866289	0		=			
ANR	4866390	Identifier	m_stat_valid		4866289	0					
ANR	4866391	Identifier	false		4866289	1					
ANR	4866392	ExpressionStatement	m_stat_time = 0	310:1:6728:6743	4866289	8	True				
ANR	4866393	AssignmentExpression	m_stat_time = 0		4866289	0		=			
ANR	4866394	Identifier	m_stat_time		4866289	0					
ANR	4866395	PrimaryExpression	0		4866289	1					
ANR	4866396	ExpressionStatement	m_log_position = 0	312:1:6747:6765	4866289	9	True				
ANR	4866397	AssignmentExpression	m_log_position = 0		4866289	0		=			
ANR	4866398	Identifier	m_log_position		4866289	0					
ANR	4866399	PrimaryExpression	0		4866289	1					
ANR	4866400	ExpressionStatement	m_log_record = 0	313:1:6768:6784	4866289	10	True				
ANR	4866401	AssignmentExpression	m_log_record = 0		4866289	0		=			
ANR	4866402	Identifier	m_log_record		4866289	0					
ANR	4866403	PrimaryExpression	0		4866289	1					
ANR	4866404	ExpressionStatement	m_offset = 0	315:1:6788:6800	4866289	11	True				
ANR	4866405	AssignmentExpression	m_offset = 0		4866289	0		=			
ANR	4866406	Identifier	m_offset		4866289	0					
ANR	4866407	PrimaryExpression	0		4866289	1					
ANR	4866408	ExpressionStatement	m_event_num = 0	316:1:6803:6818	4866289	12	True				
ANR	4866409	AssignmentExpression	m_event_num = 0		4866289	0		=			
ANR	4866410	Identifier	m_event_num		4866289	0					
ANR	4866411	PrimaryExpression	0		4866289	1					
ANR	4866412	ExpressionStatement	m_log_type = LOG_TYPE_UNKNOWN	318:1:6822:6851	4866289	13	True				
ANR	4866413	AssignmentExpression	m_log_type = LOG_TYPE_UNKNOWN		4866289	0		=			
ANR	4866414	Identifier	m_log_type		4866289	0					
ANR	4866415	Identifier	LOG_TYPE_UNKNOWN		4866289	1					
ANR	4866416	ReturnType	void		4866289	1					
ANR	4866417	Identifier	ReadUserLogState :: Reset		4866289	2					
ANR	4866418	ParameterList	ResetType type		4866289	3					
ANR	4866419	Parameter	ResetType type	278:25:6099:6112	4866289	0	True				
ANR	4866420	ParameterType	ResetType		4866289	0					
ANR	4866421	Identifier	type		4866289	1					
ANR	4866422	CFGEntryNode	ENTRY		4866289		True				
ANR	4866423	CFGExitNode	EXIT		4866289		True				
ANR	4866424	Symbol	m_stat_time		4866289						
ANR	4866425	Symbol	m_initialized		4866289						
ANR	4866426	Symbol	m_log_record		4866289						
ANR	4866427	Symbol	m_sequence		4866289						
ANR	4866428	Symbol	m_event_num		4866289						
ANR	4866429	Symbol	m_status_size		4866289						
ANR	4866430	Symbol	type		4866289						
ANR	4866431	Symbol	m_stat_valid		4866289						
ANR	4866432	Symbol	m_cur_rot		4866289						
ANR	4866433	Symbol	m_score_fact_grown		4866289						
ANR	4866434	Symbol	m_log_type		4866289						
ANR	4866435	Symbol	m_score_fact_inode		4866289						
ANR	4866436	Symbol	LOG_TYPE_UNKNOWN		4866289						
ANR	4866437	Symbol	m_max_rotations		4866289						
ANR	4866438	Symbol	m_uniq_id		4866289						
ANR	4866439	Symbol	RESET_INIT		4866289						
ANR	4866440	Symbol	m_base_path		4866289						
ANR	4866441	Symbol	m_recent_thresh		4866289						
ANR	4866442	Symbol	m_score_fact_ctime		4866289						
ANR	4866443	Symbol	m_offset		4866289						
ANR	4866444	Symbol	m_score_fact_same_size		4866289						
ANR	4866445	Symbol	RESET_FULL		4866289						
ANR	4866446	Symbol	false		4866289						
ANR	4866447	Symbol	m_score_fact_shrunk		4866289						
ANR	4866448	Symbol	m_init_error		4866289						
ANR	4866449	Symbol	m_cur_path		4866289						
ANR	4866450	Symbol	& m_stat_buf		4866289						
ANR	4866451	Symbol	m_log_position		4866289						
ANR	4866452	Function	ReadUserLogState :: Rotation	322:0:6857:7373							
ANR	4866453	FunctionDef	"ReadUserLogState :: Rotation (int rotation , bool store_stat , bool initializing)"		4866452	0					
ANR	4866454	CompoundStatement		324:0:6940:7373	4866452	0					
ANR	4866455	IfStatement	if ( ! initializing && ! m_initialized )		4866452	0					
ANR	4866456	Condition	! initializing && ! m_initialized	326:6:7024:7054	4866452	0	True				
ANR	4866457	AndExpression	! initializing && ! m_initialized		4866452	0		&&			
ANR	4866458	UnaryOperationExpression	! initializing		4866452	0					
ANR	4866459	UnaryOperator	!		4866452	0					
ANR	4866460	Identifier	initializing		4866452	1					
ANR	4866461	UnaryOperationExpression	! m_initialized		4866452	1					
ANR	4866462	UnaryOperator	!		4866452	0					
ANR	4866463	Identifier	m_initialized		4866452	1					
ANR	4866464	CompoundStatement		3:40:117:117	4866452	1					
ANR	4866465	ReturnStatement	return - 1 ;	327:2:7062:7071	4866452	0	True				
ANR	4866466	UnaryOperationExpression	- 1		4866452	0					
ANR	4866467	UnaryOperator	-		4866452	0					
ANR	4866468	PrimaryExpression	1		4866452	1					
ANR	4866469	IfStatement	if ( rotation > m_max_rotations )		4866452	1					
ANR	4866470	Condition	rotation > m_max_rotations	329:6:7082:7107	4866452	0	True				
ANR	4866471	RelationalExpression	rotation > m_max_rotations		4866452	0		>			
ANR	4866472	Identifier	rotation		4866452	0					
ANR	4866473	Identifier	m_max_rotations		4866452	1					
ANR	4866474	CompoundStatement		6:35:170:170	4866452	1					
ANR	4866475	ReturnStatement	return - 1 ;	330:2:7115:7124	4866452	0	True				
ANR	4866476	UnaryOperationExpression	- 1		4866452	0					
ANR	4866477	UnaryOperator	-		4866452	0					
ANR	4866478	PrimaryExpression	1		4866452	1					
ANR	4866479	IfStatement	if ( store_stat )		4866452	2					
ANR	4866480	Condition	store_stat	332:6:7135:7144	4866452	0	True				
ANR	4866481	Identifier	store_stat		4866452	0					
ANR	4866482	CompoundStatement		11:2:223:268	4866452	1					
ANR	4866483	ExpressionStatement	Reset ( )	333:2:7152:7160	4866452	0	True				
ANR	4866484	CallExpression	Reset ( )		4866452	0					
ANR	4866485	Callee	Reset		4866452	0					
ANR	4866486	Identifier	Reset		4866452	0					
ANR	4866487	ArgumentList			4866452	1					
ANR	4866488	IdentifierDeclStatement	"int status = Rotation ( rotation , m_stat_buf ) ;"	334:2:7164:7209	4866452	1	True				
ANR	4866489	IdentifierDecl	"status = Rotation ( rotation , m_stat_buf )"		4866452	0					
ANR	4866490	IdentifierDeclType	int		4866452	0					
ANR	4866491	Identifier	status		4866452	1					
ANR	4866492	AssignmentExpression	"status = Rotation ( rotation , m_stat_buf )"		4866452	2		=			
ANR	4866493	Identifier	status		4866452	0					
ANR	4866494	CallExpression	"Rotation ( rotation , m_stat_buf )"		4866452	1					
ANR	4866495	Callee	Rotation		4866452	0					
ANR	4866496	Identifier	Rotation		4866452	0					
ANR	4866497	ArgumentList	rotation		4866452	1					
ANR	4866498	Argument	rotation		4866452	0					
ANR	4866499	Identifier	rotation		4866452	0					
ANR	4866500	Argument	m_stat_buf		4866452	1					
ANR	4866501	Identifier	m_stat_buf		4866452	0					
ANR	4866502	IfStatement	if ( 0 == status )		4866452	2					
ANR	4866503	Condition	0 == status	335:7:7218:7228	4866452	0	True				
ANR	4866504	EqualityExpression	0 == status		4866452	0		==			
ANR	4866505	PrimaryExpression	0		4866452	0					
ANR	4866506	Identifier	status		4866452	1					
ANR	4866507	CompoundStatement		12:21:291:291	4866452	1					
ANR	4866508	ExpressionStatement	m_stat_valid = true	336:3:7237:7256	4866452	0	True				
ANR	4866509	AssignmentExpression	m_stat_valid = true		4866452	0		=			
ANR	4866510	Identifier	m_stat_valid		4866452	0					
ANR	4866511	Identifier	true		4866452	1					
ANR	4866512	ReturnStatement	return status ;	338:2:7264:7277	4866452	3	True				
ANR	4866513	Identifier	status		4866452	0					
ANR	4866514	ElseStatement	else		4866452	0					
ANR	4866515	CompoundStatement		18:2:351:373	4866452	0					
ANR	4866516	IdentifierDeclStatement	StatStructType statbuf ;	341:2:7292:7314	4866452	0	True				
ANR	4866517	IdentifierDecl	statbuf		4866452	0					
ANR	4866518	IdentifierDeclType	StatStructType		4866452	0					
ANR	4866519	Identifier	statbuf		4866452	1					
ANR	4866520	ReturnStatement	"return Rotation ( rotation , statbuf , initializing ) ;"	342:2:7318:7368	4866452	1	True				
ANR	4866521	CallExpression	"Rotation ( rotation , statbuf , initializing )"		4866452	0					
ANR	4866522	Callee	Rotation		4866452	0					
ANR	4866523	Identifier	Rotation		4866452	0					
ANR	4866524	ArgumentList	rotation		4866452	1					
ANR	4866525	Argument	rotation		4866452	0					
ANR	4866526	Identifier	rotation		4866452	0					
ANR	4866527	Argument	statbuf		4866452	1					
ANR	4866528	Identifier	statbuf		4866452	0					
ANR	4866529	Argument	initializing		4866452	2					
ANR	4866530	Identifier	initializing		4866452	0					
ANR	4866531	ReturnType	int		4866452	1					
ANR	4866532	Identifier	ReadUserLogState :: Rotation		4866452	2					
ANR	4866533	ParameterList	"int rotation , bool store_stat , bool initializing"		4866452	3					
ANR	4866534	Parameter	int rotation	323:28:6889:6900	4866452	0	True				
ANR	4866535	ParameterType	int		4866452	0					
ANR	4866536	Identifier	rotation		4866452	1					
ANR	4866537	Parameter	bool store_stat	323:42:6903:6917	4866452	1	True				
ANR	4866538	ParameterType	bool		4866452	0					
ANR	4866539	Identifier	store_stat		4866452	1					
ANR	4866540	Parameter	bool initializing	323:59:6920:6936	4866452	2	True				
ANR	4866541	ParameterType	bool		4866452	0					
ANR	4866542	Identifier	initializing		4866452	1					
ANR	4866543	CFGEntryNode	ENTRY		4866452		True				
ANR	4866544	CFGExitNode	EXIT		4866452		True				
ANR	4866545	Symbol	store_stat		4866452						
ANR	4866546	Symbol	m_initialized		4866452						
ANR	4866547	Symbol	m_stat_buf		4866452						
ANR	4866548	Symbol	statbuf		4866452						
ANR	4866549	Symbol	rotation		4866452						
ANR	4866550	Symbol	true		4866452						
ANR	4866551	Symbol	m_max_rotations		4866452						
ANR	4866552	Symbol	initializing		4866452						
ANR	4866553	Symbol	m_stat_valid		4866452						
ANR	4866554	Symbol	Rotation		4866452						
ANR	4866555	Symbol	status		4866452						
ANR	4866556	Function	ReadUserLogState :: Rotation	346:0:7376:7972							
ANR	4866557	FunctionDef	"ReadUserLogState :: Rotation (int rotation , StatStructType & statbuf , bool initializing)"		4866556	0					
ANR	4866558	CompoundStatement		350:0:7481:7972	4866556	0					
ANR	4866559	IfStatement	if ( ! initializing && ! m_initialized )		4866556	0					
ANR	4866560	Condition	! initializing && ! m_initialized	352:6:7565:7595	4866556	0	True				
ANR	4866561	AndExpression	! initializing && ! m_initialized		4866556	0		&&			
ANR	4866562	UnaryOperationExpression	! initializing		4866556	0					
ANR	4866563	UnaryOperator	!		4866556	0					
ANR	4866564	Identifier	initializing		4866556	1					
ANR	4866565	UnaryOperationExpression	! m_initialized		4866556	1					
ANR	4866566	UnaryOperator	!		4866556	0					
ANR	4866567	Identifier	m_initialized		4866556	1					
ANR	4866568	CompoundStatement		3:40:117:117	4866556	1					
ANR	4866569	ReturnStatement	return - 1 ;	353:2:7603:7612	4866556	0	True				
ANR	4866570	UnaryOperationExpression	- 1		4866556	0					
ANR	4866571	UnaryOperator	-		4866556	0					
ANR	4866572	PrimaryExpression	1		4866556	1					
ANR	4866573	IfStatement	if ( ( rotation < 0 ) || ( rotation > m_max_rotations ) )		4866556	1					
ANR	4866574	Condition	( rotation < 0 ) || ( rotation > m_max_rotations )	357:7:7658:7707	4866556	0	True				
ANR	4866575	OrExpression	( rotation < 0 ) || ( rotation > m_max_rotations )		4866556	0		||			
ANR	4866576	RelationalExpression	rotation < 0		4866556	0		<			
ANR	4866577	Identifier	rotation		4866556	0					
ANR	4866578	PrimaryExpression	0		4866556	1					
ANR	4866579	RelationalExpression	rotation > m_max_rotations		4866556	1		>			
ANR	4866580	Identifier	rotation		4866556	0					
ANR	4866581	Identifier	m_max_rotations		4866556	1					
ANR	4866582	CompoundStatement		8:61:230:230	4866556	1					
ANR	4866583	ReturnStatement	return - 1 ;	358:2:7716:7725	4866556	0	True				
ANR	4866584	UnaryOperationExpression	- 1		4866556	0					
ANR	4866585	UnaryOperator	-		4866556	0					
ANR	4866586	PrimaryExpression	1		4866556	1					
ANR	4866587	IfStatement	if ( m_cur_rot == rotation )		4866556	2					
ANR	4866588	Condition	m_cur_rot == rotation	362:6:7764:7784	4866556	0	True				
ANR	4866589	EqualityExpression	m_cur_rot == rotation		4866556	0		==			
ANR	4866590	Identifier	m_cur_rot		4866556	0					
ANR	4866591	Identifier	rotation		4866556	1					
ANR	4866592	CompoundStatement		13:30:306:306	4866556	1					
ANR	4866593	ReturnStatement	return 0 ;	363:2:7792:7800	4866556	0	True				
ANR	4866594	PrimaryExpression	0		4866556	0					
ANR	4866595	ExpressionStatement	"m_uniq_id = """""	366:1:7807:7821	4866556	3	True				
ANR	4866596	AssignmentExpression	"m_uniq_id = """""		4866556	0		=			
ANR	4866597	Identifier	m_uniq_id		4866556	0					
ANR	4866598	PrimaryExpression	""""""		4866556	1					
ANR	4866599	ExpressionStatement	"GeneratePath ( rotation , m_cur_path , initializing )"	367:1:7824:7874	4866556	4	True				
ANR	4866600	CallExpression	"GeneratePath ( rotation , m_cur_path , initializing )"		4866556	0					
ANR	4866601	Callee	GeneratePath		4866556	0					
ANR	4866602	Identifier	GeneratePath		4866556	0					
ANR	4866603	ArgumentList	rotation		4866556	1					
ANR	4866604	Argument	rotation		4866556	0					
ANR	4866605	Identifier	rotation		4866556	0					
ANR	4866606	Argument	m_cur_path		4866556	1					
ANR	4866607	Identifier	m_cur_path		4866556	0					
ANR	4866608	Argument	initializing		4866556	2					
ANR	4866609	Identifier	initializing		4866556	0					
ANR	4866610	ExpressionStatement	m_cur_rot = rotation	368:1:7877:7897	4866556	5	True				
ANR	4866611	AssignmentExpression	m_cur_rot = rotation		4866556	0		=			
ANR	4866612	Identifier	m_cur_rot		4866556	0					
ANR	4866613	Identifier	rotation		4866556	1					
ANR	4866614	ExpressionStatement	m_log_type = LOG_TYPE_UNKNOWN	369:1:7900:7929	4866556	6	True				
ANR	4866615	AssignmentExpression	m_log_type = LOG_TYPE_UNKNOWN		4866556	0		=			
ANR	4866616	Identifier	m_log_type		4866556	0					
ANR	4866617	Identifier	LOG_TYPE_UNKNOWN		4866556	1					
ANR	4866618	ExpressionStatement	Update ( )	370:1:7932:7940	4866556	7	True				
ANR	4866619	CallExpression	Update ( )		4866556	0					
ANR	4866620	Callee	Update		4866556	0					
ANR	4866621	Identifier	Update		4866556	0					
ANR	4866622	ArgumentList			4866556	1					
ANR	4866623	ReturnStatement	return StatFile ( statbuf ) ;	372:1:7944:7970	4866556	8	True				
ANR	4866624	CallExpression	StatFile ( statbuf )		4866556	0					
ANR	4866625	Callee	StatFile		4866556	0					
ANR	4866626	Identifier	StatFile		4866556	0					
ANR	4866627	ArgumentList	statbuf		4866556	1					
ANR	4866628	Argument	statbuf		4866556	0					
ANR	4866629	Identifier	statbuf		4866556	0					
ANR	4866630	ReturnType	int		4866556	1					
ANR	4866631	Identifier	ReadUserLogState :: Rotation		4866556	2					
ANR	4866632	ParameterList	"int rotation , StatStructType & statbuf , bool initializing"		4866556	3					
ANR	4866633	Parameter	int rotation	347:28:7408:7419	4866556	0	True				
ANR	4866634	ParameterType	int		4866556	0					
ANR	4866635	Identifier	rotation		4866556	1					
ANR	4866636	Parameter	StatStructType & statbuf	348:7:7429:7451	4866556	1	True				
ANR	4866637	ParameterType	StatStructType &		4866556	0					
ANR	4866638	Identifier	statbuf		4866556	1					
ANR	4866639	Parameter	bool initializing	349:7:7461:7477	4866556	2	True				
ANR	4866640	ParameterType	bool		4866556	0					
ANR	4866641	Identifier	initializing		4866556	1					
ANR	4866642	CFGEntryNode	ENTRY		4866556		True				
ANR	4866643	CFGExitNode	EXIT		4866556		True				
ANR	4866644	Symbol	m_cur_rot		4866556						
ANR	4866645	Symbol	m_initialized		4866556						
ANR	4866646	Symbol	statbuf		4866556						
ANR	4866647	Symbol	m_log_type		4866556						
ANR	4866648	Symbol	rotation		4866556						
ANR	4866649	Symbol	LOG_TYPE_UNKNOWN		4866556						
ANR	4866650	Symbol	m_max_rotations		4866556						
ANR	4866651	Symbol	m_cur_path		4866556						
ANR	4866652	Symbol	initializing		4866556						
ANR	4866653	Symbol	m_uniq_id		4866556						
ANR	4866654	Symbol	StatFile		4866556						
ANR	4866655	Function	ReadUserLogState :: GeneratePath	375:0:7975:8656							
ANR	4866656	FunctionDef	"ReadUserLogState :: GeneratePath (int rotation , MyString & path , bool initializing)"		4866655	0					
ANR	4866657	CompoundStatement		379:0:8084:8656	4866655	0					
ANR	4866658	IfStatement	if ( ! initializing && ! m_initialized )		4866655	0					
ANR	4866659	Condition	! initializing && ! m_initialized	381:6:8168:8198	4866655	0	True				
ANR	4866660	AndExpression	! initializing && ! m_initialized		4866655	0		&&			
ANR	4866661	UnaryOperationExpression	! initializing		4866655	0					
ANR	4866662	UnaryOperator	!		4866655	0					
ANR	4866663	Identifier	initializing		4866655	1					
ANR	4866664	UnaryOperationExpression	! m_initialized		4866655	1					
ANR	4866665	UnaryOperator	!		4866655	0					
ANR	4866666	Identifier	m_initialized		4866655	1					
ANR	4866667	CompoundStatement		3:40:117:117	4866655	1					
ANR	4866668	ReturnStatement	return false ;	382:2:8206:8218	4866655	0	True				
ANR	4866669	Identifier	false		4866655	0					
ANR	4866670	IfStatement	if ( ( rotation < 0 ) || ( rotation > m_max_rotations ) )		4866655	1					
ANR	4866671	Condition	( rotation < 0 ) || ( rotation > m_max_rotations )	386:7:8264:8313	4866655	0	True				
ANR	4866672	OrExpression	( rotation < 0 ) || ( rotation > m_max_rotations )		4866655	0		||			
ANR	4866673	RelationalExpression	rotation < 0		4866655	0		<			
ANR	4866674	Identifier	rotation		4866655	0					
ANR	4866675	PrimaryExpression	0		4866655	1					
ANR	4866676	RelationalExpression	rotation > m_max_rotations		4866655	1		>			
ANR	4866677	Identifier	rotation		4866655	0					
ANR	4866678	Identifier	m_max_rotations		4866655	1					
ANR	4866679	CompoundStatement		8:61:233:233	4866655	1					
ANR	4866680	ReturnStatement	return false ;	387:2:8322:8334	4866655	0	True				
ANR	4866681	Identifier	false		4866655	0					
ANR	4866682	IfStatement	if ( ! m_base_path . Length ( ) )		4866655	2					
ANR	4866683	Condition	! m_base_path . Length ( )	391:6:8395:8415	4866655	0	True				
ANR	4866684	UnaryOperationExpression	! m_base_path . Length ( )		4866655	0					
ANR	4866685	UnaryOperator	!		4866655	0					
ANR	4866686	CallExpression	m_base_path . Length ( )		4866655	1					
ANR	4866687	Callee	m_base_path . Length		4866655	0					
ANR	4866688	MemberAccess	m_base_path . Length		4866655	0					
ANR	4866689	Identifier	m_base_path		4866655	0					
ANR	4866690	Identifier	Length		4866655	1					
ANR	4866691	ArgumentList			4866655	1					
ANR	4866692	CompoundStatement		13:30:334:334	4866655	1					
ANR	4866693	ExpressionStatement	"path = """""	392:2:8423:8432	4866655	0	True				
ANR	4866694	AssignmentExpression	"path = """""		4866655	0		=			
ANR	4866695	Identifier	path		4866655	0					
ANR	4866696	PrimaryExpression	""""""		4866655	1					
ANR	4866697	ReturnStatement	return false ;	393:2:8436:8448	4866655	1	True				
ANR	4866698	Identifier	false		4866655	0					
ANR	4866699	ExpressionStatement	path = m_base_path	397:1:8492:8510	4866655	3	True				
ANR	4866700	AssignmentExpression	path = m_base_path		4866655	0		=			
ANR	4866701	Identifier	path		4866655	0					
ANR	4866702	Identifier	m_base_path		4866655	1					
ANR	4866703	IfStatement	if ( rotation )		4866655	4					
ANR	4866704	Condition	rotation	398:6:8518:8525	4866655	0	True				
ANR	4866705	Identifier	rotation		4866655	0					
ANR	4866706	CompoundStatement		20:17:444:444	4866655	1					
ANR	4866707	IfStatement	if ( m_max_rotations > 1 )		4866655	0					
ANR	4866708	Condition	m_max_rotations > 1	399:7:8538:8556	4866655	0	True				
ANR	4866709	RelationalExpression	m_max_rotations > 1		4866655	0		>			
ANR	4866710	Identifier	m_max_rotations		4866655	0					
ANR	4866711	PrimaryExpression	1		4866655	1					
ANR	4866712	CompoundStatement		21:29:475:475	4866655	1					
ANR	4866713	ExpressionStatement	"path . sprintf_cat ( "".%d"" , rotation )"	400:3:8565:8600	4866655	0	True				
ANR	4866714	CallExpression	"path . sprintf_cat ( "".%d"" , rotation )"		4866655	0					
ANR	4866715	Callee	path . sprintf_cat		4866655	0					
ANR	4866716	MemberAccess	path . sprintf_cat		4866655	0					
ANR	4866717	Identifier	path		4866655	0					
ANR	4866718	Identifier	sprintf_cat		4866655	1					
ANR	4866719	ArgumentList	""".%d"""		4866655	1					
ANR	4866720	Argument	""".%d"""		4866655	0					
ANR	4866721	PrimaryExpression	""".%d"""		4866655	0					
ANR	4866722	Argument	rotation		4866655	1					
ANR	4866723	Identifier	rotation		4866655	0					
ANR	4866724	ElseStatement	else		4866655	0					
ANR	4866725	CompoundStatement		24:7:528:528	4866655	0					
ANR	4866726	ExpressionStatement	"path += "".old"""	403:3:8618:8632	4866655	0	True				
ANR	4866727	AssignmentExpression	"path += "".old"""		4866655	0		+=			
ANR	4866728	Identifier	path		4866655	0					
ANR	4866729	PrimaryExpression	""".old"""		4866655	1					
ANR	4866730	ReturnStatement	return true ;	407:1:8643:8654	4866655	5	True				
ANR	4866731	Identifier	true		4866655	0					
ANR	4866732	ReturnType	bool		4866655	1					
ANR	4866733	Identifier	ReadUserLogState :: GeneratePath		4866655	2					
ANR	4866734	ParameterList	"int rotation , MyString & path , bool initializing"		4866655	3					
ANR	4866735	Parameter	int rotation	376:32:8012:8023	4866655	0	True				
ANR	4866736	ParameterType	int		4866655	0					
ANR	4866737	Identifier	rotation		4866655	1					
ANR	4866738	Parameter	MyString & path	377:8:8034:8047	4866655	1	True				
ANR	4866739	ParameterType	MyString &		4866655	0					
ANR	4866740	Identifier	path		4866655	1					
ANR	4866741	Parameter	bool initializing	378:8:8058:8074	4866655	2	True				
ANR	4866742	ParameterType	bool		4866655	0					
ANR	4866743	Identifier	initializing		4866655	1					
ANR	4866744	CFGEntryNode	ENTRY		4866655		True				
ANR	4866745	CFGExitNode	EXIT		4866655		True				
ANR	4866746	Symbol	path		4866655						
ANR	4866747	Symbol	m_initialized		4866655						
ANR	4866748	Symbol	m_base_path . Length		4866655						
ANR	4866749	Symbol	rotation		4866655						
ANR	4866750	Symbol	false		4866655						
ANR	4866751	Symbol	true		4866655						
ANR	4866752	Symbol	m_max_rotations		4866655						
ANR	4866753	Symbol	initializing		4866655						
ANR	4866754	Symbol	m_base_path		4866655						
ANR	4866755	Function	ReadUserLogState :: StatFile	410:0:8659:8855							
ANR	4866756	FunctionDef	ReadUserLogState :: StatFile ()		4866755	0					
ANR	4866757	CompoundStatement		412:0:8698:8855	4866755	0					
ANR	4866758	IdentifierDeclStatement	"int status = StatFile ( CurPath ( ) , m_stat_buf ) ;"	413:1:8701:8747	4866755	0	True				
ANR	4866759	IdentifierDecl	"status = StatFile ( CurPath ( ) , m_stat_buf )"		4866755	0					
ANR	4866760	IdentifierDeclType	int		4866755	0					
ANR	4866761	Identifier	status		4866755	1					
ANR	4866762	AssignmentExpression	"status = StatFile ( CurPath ( ) , m_stat_buf )"		4866755	2		=			
ANR	4866763	Identifier	status		4866755	0					
ANR	4866764	CallExpression	"StatFile ( CurPath ( ) , m_stat_buf )"		4866755	1					
ANR	4866765	Callee	StatFile		4866755	0					
ANR	4866766	Identifier	StatFile		4866755	0					
ANR	4866767	ArgumentList	CurPath ( )		4866755	1					
ANR	4866768	Argument	CurPath ( )		4866755	0					
ANR	4866769	CallExpression	CurPath ( )		4866755	0					
ANR	4866770	Callee	CurPath		4866755	0					
ANR	4866771	Identifier	CurPath		4866755	0					
ANR	4866772	ArgumentList			4866755	1					
ANR	4866773	Argument	m_stat_buf		4866755	1					
ANR	4866774	Identifier	m_stat_buf		4866755	0					
ANR	4866775	IfStatement	if ( 0 == status )		4866755	1					
ANR	4866776	Condition	0 == status	414:6:8755:8765	4866755	0	True				
ANR	4866777	EqualityExpression	0 == status		4866755	0		==			
ANR	4866778	PrimaryExpression	0		4866755	0					
ANR	4866779	Identifier	status		4866755	1					
ANR	4866780	CompoundStatement		3:20:70:70	4866755	1					
ANR	4866781	ExpressionStatement	m_stat_time = time ( NULL )	415:2:8773:8799	4866755	0	True				
ANR	4866782	AssignmentExpression	m_stat_time = time ( NULL )		4866755	0		=			
ANR	4866783	Identifier	m_stat_time		4866755	0					
ANR	4866784	CallExpression	time ( NULL )		4866755	1					
ANR	4866785	Callee	time		4866755	0					
ANR	4866786	Identifier	time		4866755	0					
ANR	4866787	ArgumentList	NULL		4866755	1					
ANR	4866788	Argument	NULL		4866755	0					
ANR	4866789	Identifier	NULL		4866755	0					
ANR	4866790	ExpressionStatement	m_stat_valid = true	416:2:8803:8822	4866755	1	True				
ANR	4866791	AssignmentExpression	m_stat_valid = true		4866755	0		=			
ANR	4866792	Identifier	m_stat_valid		4866755	0					
ANR	4866793	Identifier	true		4866755	1					
ANR	4866794	ExpressionStatement	Update ( )	417:2:8826:8834	4866755	2	True				
ANR	4866795	CallExpression	Update ( )		4866755	0					
ANR	4866796	Callee	Update		4866755	0					
ANR	4866797	Identifier	Update		4866755	0					
ANR	4866798	ArgumentList			4866755	1					
ANR	4866799	ReturnStatement	return status ;	419:1:8840:8853	4866755	2	True				
ANR	4866800	Identifier	status		4866755	0					
ANR	4866801	ReturnType	int		4866755	1					
ANR	4866802	Identifier	ReadUserLogState :: StatFile		4866755	2					
ANR	4866803	ParameterList			4866755	3					
ANR	4866804	CFGEntryNode	ENTRY		4866755		True				
ANR	4866805	CFGExitNode	EXIT		4866755		True				
ANR	4866806	Symbol	m_stat_time		4866755						
ANR	4866807	Symbol	CurPath		4866755						
ANR	4866808	Symbol	m_stat_buf		4866755						
ANR	4866809	Symbol	NULL		4866755						
ANR	4866810	Symbol	true		4866755						
ANR	4866811	Symbol	time		4866755						
ANR	4866812	Symbol	m_stat_valid		4866755						
ANR	4866813	Symbol	StatFile		4866755						
ANR	4866814	Symbol	status		4866755						
ANR	4866815	Function	ReadUserLogState :: StatFile	422:0:8858:8964							
ANR	4866816	FunctionDef	ReadUserLogState :: StatFile (StatStructType & statbuf)		4866815	0					
ANR	4866817	CompoundStatement		424:0:8922:8964	4866815	0					
ANR	4866818	ReturnStatement	"return StatFile ( CurPath ( ) , statbuf ) ;"	425:1:8925:8962	4866815	0	True				
ANR	4866819	CallExpression	"StatFile ( CurPath ( ) , statbuf )"		4866815	0					
ANR	4866820	Callee	StatFile		4866815	0					
ANR	4866821	Identifier	StatFile		4866815	0					
ANR	4866822	ArgumentList	CurPath ( )		4866815	1					
ANR	4866823	Argument	CurPath ( )		4866815	0					
ANR	4866824	CallExpression	CurPath ( )		4866815	0					
ANR	4866825	Callee	CurPath		4866815	0					
ANR	4866826	Identifier	CurPath		4866815	0					
ANR	4866827	ArgumentList			4866815	1					
ANR	4866828	Argument	statbuf		4866815	1					
ANR	4866829	Identifier	statbuf		4866815	0					
ANR	4866830	ReturnType	int		4866815	1					
ANR	4866831	Identifier	ReadUserLogState :: StatFile		4866815	2					
ANR	4866832	ParameterList	StatStructType & statbuf		4866815	3					
ANR	4866833	Parameter	StatStructType & statbuf	423:28:8890:8912	4866815	0	True				
ANR	4866834	ParameterType	StatStructType &		4866815	0					
ANR	4866835	Identifier	statbuf		4866815	1					
ANR	4866836	CFGEntryNode	ENTRY		4866815		True				
ANR	4866837	CFGExitNode	EXIT		4866815		True				
ANR	4866838	Symbol	CurPath		4866815						
ANR	4866839	Symbol	statbuf		4866815						
ANR	4866840	Symbol	StatFile		4866815						
ANR	4866841	Function	ReadUserLogState :: StatFile	428:0:8967:9205							
ANR	4866842	FunctionDef	"ReadUserLogState :: StatFile (const char * path , StatStructType & statbuf)"		4866841	0					
ANR	4866843	CompoundStatement		430:0:9049:9205	4866841	0					
ANR	4866844	IdentifierDeclStatement	StatWrapper statwrap ;	431:1:9052:9072	4866841	0	True				
ANR	4866845	IdentifierDecl	statwrap		4866841	0					
ANR	4866846	IdentifierDeclType	StatWrapper		4866841	0					
ANR	4866847	Identifier	statwrap		4866841	1					
ANR	4866848	IfStatement	"if ( statwrap . Stat ( path , StatWrapper :: STATOP_STAT ) )"		4866841	1					
ANR	4866849	Condition	"statwrap . Stat ( path , StatWrapper :: STATOP_STAT )"	432:6:9080:9126	4866841	0	True				
ANR	4866850	CallExpression	"statwrap . Stat ( path , StatWrapper :: STATOP_STAT )"		4866841	0					
ANR	4866851	Callee	statwrap . Stat		4866841	0					
ANR	4866852	MemberAccess	statwrap . Stat		4866841	0					
ANR	4866853	Identifier	statwrap		4866841	0					
ANR	4866854	Identifier	Stat		4866841	1					
ANR	4866855	ArgumentList	path		4866841	1					
ANR	4866856	Argument	path		4866841	0					
ANR	4866857	Identifier	path		4866841	0					
ANR	4866858	Argument	StatWrapper :: STATOP_STAT		4866841	1					
ANR	4866859	Identifier	StatWrapper :: STATOP_STAT		4866841	0					
ANR	4866860	CompoundStatement		3:56:80:80	4866841	1					
ANR	4866861	ReturnStatement	return statwrap . GetRc ( ) ;	433:2:9134:9158	4866841	0	True				
ANR	4866862	CallExpression	statwrap . GetRc ( )		4866841	0					
ANR	4866863	Callee	statwrap . GetRc		4866841	0					
ANR	4866864	MemberAccess	statwrap . GetRc		4866841	0					
ANR	4866865	Identifier	statwrap		4866841	0					
ANR	4866866	Identifier	GetRc		4866841	1					
ANR	4866867	ArgumentList			4866841	1					
ANR	4866868	ExpressionStatement	statwrap . GetBuf ( statbuf )	436:1:9165:9191	4866841	2	True				
ANR	4866869	CallExpression	statwrap . GetBuf ( statbuf )		4866841	0					
ANR	4866870	Callee	statwrap . GetBuf		4866841	0					
ANR	4866871	MemberAccess	statwrap . GetBuf		4866841	0					
ANR	4866872	Identifier	statwrap		4866841	0					
ANR	4866873	Identifier	GetBuf		4866841	1					
ANR	4866874	ArgumentList	statbuf		4866841	1					
ANR	4866875	Argument	statbuf		4866841	0					
ANR	4866876	Identifier	statbuf		4866841	0					
ANR	4866877	ReturnStatement	return 0 ;	438:1:9195:9203	4866841	3	True				
ANR	4866878	PrimaryExpression	0		4866841	0					
ANR	4866879	ReturnType	int		4866841	1					
ANR	4866880	Identifier	ReadUserLogState :: StatFile		4866841	2					
ANR	4866881	ParameterList	"const char * path , StatStructType & statbuf"		4866841	3					
ANR	4866882	Parameter	const char * path	429:28:8999:9014	4866841	0	True				
ANR	4866883	ParameterType	const char *		4866841	0					
ANR	4866884	Identifier	path		4866841	1					
ANR	4866885	Parameter	StatStructType & statbuf	429:46:9017:9039	4866841	1	True				
ANR	4866886	ParameterType	StatStructType &		4866841	0					
ANR	4866887	Identifier	statbuf		4866841	1					
ANR	4866888	CFGEntryNode	ENTRY		4866841		True				
ANR	4866889	CFGExitNode	EXIT		4866841		True				
ANR	4866890	Symbol	path		4866841						
ANR	4866891	Symbol	statwrap . GetRc		4866841						
ANR	4866892	Symbol	statwrap . Stat		4866841						
ANR	4866893	Symbol	statbuf		4866841						
ANR	4866894	Symbol	statwrap		4866841						
ANR	4866895	Symbol	StatWrapper :: STATOP_STAT		4866841						
ANR	4866896	Function	ReadUserLogState :: StatFile	443:0:9322:9630							
ANR	4866897	FunctionDef	ReadUserLogState :: StatFile (int fd)		4866896	0					
ANR	4866898	CompoundStatement		445:0:9363:9630	4866896	0					
ANR	4866899	IdentifierDeclStatement	StatWrapper statwrap ;	446:1:9366:9386	4866896	0	True				
ANR	4866900	IdentifierDecl	statwrap		4866896	0					
ANR	4866901	IdentifierDeclType	StatWrapper		4866896	0					
ANR	4866902	Identifier	statwrap		4866896	1					
ANR	4866903	IfStatement	if ( statwrap . Stat ( fd ) )		4866896	1					
ANR	4866904	Condition	statwrap . Stat ( fd )	447:6:9394:9412	4866896	0	True				
ANR	4866905	CallExpression	statwrap . Stat ( fd )		4866896	0					
ANR	4866906	Callee	statwrap . Stat		4866896	0					
ANR	4866907	MemberAccess	statwrap . Stat		4866896	0					
ANR	4866908	Identifier	statwrap		4866896	0					
ANR	4866909	Identifier	Stat		4866896	1					
ANR	4866910	ArgumentList	fd		4866896	1					
ANR	4866911	Argument	fd		4866896	0					
ANR	4866912	Identifier	fd		4866896	0					
ANR	4866913	CompoundStatement		3:29:53:53	4866896	1					
ANR	4866914	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""StatFile: errno = %d\\n"" , statwrap . GetErrno ( ) )"	448:2:9421:9490	4866896	0	True				
ANR	4866915	CallExpression	"dprintf ( D_FULLDEBUG , ""StatFile: errno = %d\\n"" , statwrap . GetErrno ( ) )"		4866896	0					
ANR	4866916	Callee	dprintf		4866896	0					
ANR	4866917	Identifier	dprintf		4866896	0					
ANR	4866918	ArgumentList	D_FULLDEBUG		4866896	1					
ANR	4866919	Argument	D_FULLDEBUG		4866896	0					
ANR	4866920	Identifier	D_FULLDEBUG		4866896	0					
ANR	4866921	Argument	"""StatFile: errno = %d\\n"""		4866896	1					
ANR	4866922	PrimaryExpression	"""StatFile: errno = %d\\n"""		4866896	0					
ANR	4866923	Argument	statwrap . GetErrno ( )		4866896	2					
ANR	4866924	CallExpression	statwrap . GetErrno ( )		4866896	0					
ANR	4866925	Callee	statwrap . GetErrno		4866896	0					
ANR	4866926	MemberAccess	statwrap . GetErrno		4866896	0					
ANR	4866927	Identifier	statwrap		4866896	0					
ANR	4866928	Identifier	GetErrno		4866896	1					
ANR	4866929	ArgumentList			4866896	1					
ANR	4866930	ReturnStatement	return statwrap . GetRc ( ) ;	449:2:9494:9518	4866896	1	True				
ANR	4866931	CallExpression	statwrap . GetRc ( )		4866896	0					
ANR	4866932	Callee	statwrap . GetRc		4866896	0					
ANR	4866933	MemberAccess	statwrap . GetRc		4866896	0					
ANR	4866934	Identifier	statwrap		4866896	0					
ANR	4866935	Identifier	GetRc		4866896	1					
ANR	4866936	ArgumentList			4866896	1					
ANR	4866937	ExpressionStatement	statwrap . GetBuf ( m_stat_buf )	452:1:9525:9554	4866896	2	True				
ANR	4866938	CallExpression	statwrap . GetBuf ( m_stat_buf )		4866896	0					
ANR	4866939	Callee	statwrap . GetBuf		4866896	0					
ANR	4866940	MemberAccess	statwrap . GetBuf		4866896	0					
ANR	4866941	Identifier	statwrap		4866896	0					
ANR	4866942	Identifier	GetBuf		4866896	1					
ANR	4866943	ArgumentList	m_stat_buf		4866896	1					
ANR	4866944	Argument	m_stat_buf		4866896	0					
ANR	4866945	Identifier	m_stat_buf		4866896	0					
ANR	4866946	ExpressionStatement	m_stat_time = time ( NULL )	453:1:9557:9583	4866896	3	True				
ANR	4866947	AssignmentExpression	m_stat_time = time ( NULL )		4866896	0		=			
ANR	4866948	Identifier	m_stat_time		4866896	0					
ANR	4866949	CallExpression	time ( NULL )		4866896	1					
ANR	4866950	Callee	time		4866896	0					
ANR	4866951	Identifier	time		4866896	0					
ANR	4866952	ArgumentList	NULL		4866896	1					
ANR	4866953	Argument	NULL		4866896	0					
ANR	4866954	Identifier	NULL		4866896	0					
ANR	4866955	ExpressionStatement	m_stat_valid = true	454:1:9586:9605	4866896	4	True				
ANR	4866956	AssignmentExpression	m_stat_valid = true		4866896	0		=			
ANR	4866957	Identifier	m_stat_valid		4866896	0					
ANR	4866958	Identifier	true		4866896	1					
ANR	4866959	ExpressionStatement	Update ( )	455:1:9608:9616	4866896	5	True				
ANR	4866960	CallExpression	Update ( )		4866896	0					
ANR	4866961	Callee	Update		4866896	0					
ANR	4866962	Identifier	Update		4866896	0					
ANR	4866963	ArgumentList			4866896	1					
ANR	4866964	ReturnStatement	return 0 ;	457:1:9620:9628	4866896	6	True				
ANR	4866965	PrimaryExpression	0		4866896	0					
ANR	4866966	ReturnType	int		4866896	1					
ANR	4866967	Identifier	ReadUserLogState :: StatFile		4866896	2					
ANR	4866968	ParameterList	int fd		4866896	3					
ANR	4866969	Parameter	int fd	444:28:9354:9359	4866896	0	True				
ANR	4866970	ParameterType	int		4866896	0					
ANR	4866971	Identifier	fd		4866896	1					
ANR	4866972	CFGEntryNode	ENTRY		4866896		True				
ANR	4866973	CFGExitNode	EXIT		4866896		True				
ANR	4866974	Symbol	m_stat_time		4866896						
ANR	4866975	Symbol	statwrap . GetRc		4866896						
ANR	4866976	Symbol	statwrap . Stat		4866896						
ANR	4866977	Symbol	m_stat_buf		4866896						
ANR	4866978	Symbol	NULL		4866896						
ANR	4866979	Symbol	statwrap		4866896						
ANR	4866980	Symbol	true		4866896						
ANR	4866981	Symbol	statwrap . GetErrno		4866896						
ANR	4866982	Symbol	D_FULLDEBUG		4866896						
ANR	4866983	Symbol	time		4866896						
ANR	4866984	Symbol	m_stat_valid		4866896						
ANR	4866985	Symbol	fd		4866896						
ANR	4866986	Function	ReadUserLogState :: SecondsSinceStat	460:0:9633:9751							
ANR	4866987	FunctionDef	ReadUserLogState :: SecondsSinceStat ()		4866986	0					
ANR	4866988	CompoundStatement		462:0:9686:9751	4866986	0					
ANR	4866989	IdentifierDeclStatement	time_t now = time ( NULL ) ;	463:1:9689:9714	4866986	0	True				
ANR	4866990	IdentifierDecl	now = time ( NULL )		4866986	0					
ANR	4866991	IdentifierDeclType	time_t		4866986	0					
ANR	4866992	Identifier	now		4866986	1					
ANR	4866993	AssignmentExpression	now = time ( NULL )		4866986	2		=			
ANR	4866994	Identifier	now		4866986	0					
ANR	4866995	CallExpression	time ( NULL )		4866986	1					
ANR	4866996	Callee	time		4866986	0					
ANR	4866997	Identifier	time		4866986	0					
ANR	4866998	ArgumentList	NULL		4866986	1					
ANR	4866999	Argument	NULL		4866986	0					
ANR	4867000	Identifier	NULL		4866986	0					
ANR	4867001	ReturnStatement	return ( int ) ( now - m_stat_time ) ;	464:1:9717:9749	4866986	1	True				
ANR	4867002	CastExpression	( int ) ( now - m_stat_time )		4866986	0					
ANR	4867003	CastTarget	int		4866986	0					
ANR	4867004	AdditiveExpression	now - m_stat_time		4866986	1		-			
ANR	4867005	Identifier	now		4866986	0					
ANR	4867006	Identifier	m_stat_time		4866986	1					
ANR	4867007	ReturnType	int		4866986	1					
ANR	4867008	Identifier	ReadUserLogState :: SecondsSinceStat		4866986	2					
ANR	4867009	ParameterList			4866986	3					
ANR	4867010	CFGEntryNode	ENTRY		4866986		True				
ANR	4867011	CFGExitNode	EXIT		4866986		True				
ANR	4867012	Symbol	m_stat_time		4866986						
ANR	4867013	Symbol	NULL		4866986						
ANR	4867014	Symbol	now		4866986						
ANR	4867015	Symbol	time		4866986						
ANR	4867016	Function	ReadUserLogState :: ScoreFile	468:0:9795:10049							
ANR	4867017	FunctionDef	ReadUserLogState :: ScoreFile (int rot)		4867016	0					
ANR	4867018	CompoundStatement		470:0:9844:10049	4867016	0					
ANR	4867019	IfStatement	if ( rot > m_max_rotations )		4867016	0					
ANR	4867020	Condition	rot > m_max_rotations	471:6:9852:9872	4867016	0	True				
ANR	4867021	RelationalExpression	rot > m_max_rotations		4867016	0		>			
ANR	4867022	Identifier	rot		4867016	0					
ANR	4867023	Identifier	m_max_rotations		4867016	1					
ANR	4867024	CompoundStatement		2:30:31:31	4867016	1					
ANR	4867025	ReturnStatement	return - 1 ;	472:2:9880:9889	4867016	0	True				
ANR	4867026	UnaryOperationExpression	- 1		4867016	0					
ANR	4867027	UnaryOperator	-		4867016	0					
ANR	4867028	PrimaryExpression	1		4867016	1					
ANR	4867029	ElseStatement	else		4867016	0					
ANR	4867030	IfStatement	if ( rot < 0 )		4867016	0					
ANR	4867031	Condition	rot < 0	474:11:9905:9911	4867016	0	True				
ANR	4867032	RelationalExpression	rot < 0		4867016	0		<			
ANR	4867033	Identifier	rot		4867016	0					
ANR	4867034	PrimaryExpression	0		4867016	1					
ANR	4867035	CompoundStatement		5:21:70:70	4867016	1					
ANR	4867036	ExpressionStatement	rot = m_cur_rot	475:2:9919:9934	4867016	0	True				
ANR	4867037	AssignmentExpression	rot = m_cur_rot		4867016	0		=			
ANR	4867038	Identifier	rot		4867016	0					
ANR	4867039	Identifier	m_cur_rot		4867016	1					
ANR	4867040	IdentifierDeclStatement	MyString path ;	478:1:9941:9954	4867016	1	True				
ANR	4867041	IdentifierDecl	path		4867016	0					
ANR	4867042	IdentifierDeclType	MyString		4867016	0					
ANR	4867043	Identifier	path		4867016	1					
ANR	4867044	IfStatement	"if ( ! GeneratePath ( rot , path ) )"		4867016	2					
ANR	4867045	Condition	"! GeneratePath ( rot , path )"	479:6:9962:9987	4867016	0	True				
ANR	4867046	UnaryOperationExpression	"! GeneratePath ( rot , path )"		4867016	0					
ANR	4867047	UnaryOperator	!		4867016	0					
ANR	4867048	CallExpression	"GeneratePath ( rot , path )"		4867016	1					
ANR	4867049	Callee	GeneratePath		4867016	0					
ANR	4867050	Identifier	GeneratePath		4867016	0					
ANR	4867051	ArgumentList	rot		4867016	1					
ANR	4867052	Argument	rot		4867016	0					
ANR	4867053	Identifier	rot		4867016	0					
ANR	4867054	Argument	path		4867016	1					
ANR	4867055	Identifier	path		4867016	0					
ANR	4867056	CompoundStatement		10:35:146:146	4867016	1					
ANR	4867057	ReturnStatement	return - 1 ;	480:2:9995:10004	4867016	0	True				
ANR	4867058	UnaryOperationExpression	- 1		4867016	0					
ANR	4867059	UnaryOperator	-		4867016	0					
ANR	4867060	PrimaryExpression	1		4867016	1					
ANR	4867061	ReturnStatement	"return ScoreFile ( path . Value ( ) , rot ) ;"	482:1:10010:10047	4867016	3	True				
ANR	4867062	CallExpression	"ScoreFile ( path . Value ( ) , rot )"		4867016	0					
ANR	4867063	Callee	ScoreFile		4867016	0					
ANR	4867064	Identifier	ScoreFile		4867016	0					
ANR	4867065	ArgumentList	path . Value ( )		4867016	1					
ANR	4867066	Argument	path . Value ( )		4867016	0					
ANR	4867067	CallExpression	path . Value ( )		4867016	0					
ANR	4867068	Callee	path . Value		4867016	0					
ANR	4867069	MemberAccess	path . Value		4867016	0					
ANR	4867070	Identifier	path		4867016	0					
ANR	4867071	Identifier	Value		4867016	1					
ANR	4867072	ArgumentList			4867016	1					
ANR	4867073	Argument	rot		4867016	1					
ANR	4867074	Identifier	rot		4867016	0					
ANR	4867075	ReturnType	int		4867016	1					
ANR	4867076	Identifier	ReadUserLogState :: ScoreFile		4867016	2					
ANR	4867077	ParameterList	int rot		4867016	3					
ANR	4867078	Parameter	int rot	469:29:9828:9834	4867016	0	True				
ANR	4867079	ParameterType	int		4867016	0					
ANR	4867080	Identifier	rot		4867016	1					
ANR	4867081	CFGEntryNode	ENTRY		4867016		True				
ANR	4867082	CFGExitNode	EXIT		4867016		True				
ANR	4867083	Symbol	m_cur_rot		4867016						
ANR	4867084	Symbol	path		4867016						
ANR	4867085	Symbol	rot		4867016						
ANR	4867086	Symbol	m_max_rotations		4867016						
ANR	4867087	Symbol	path . Value		4867016						
ANR	4867088	Symbol	GeneratePath		4867016						
ANR	4867089	Symbol	ScoreFile		4867016						
ANR	4867090	Function	ReadUserLogState :: ScoreFile	485:0:10052:10375							
ANR	4867091	FunctionDef	"ReadUserLogState :: ScoreFile (const char * path , int rot)"		4867090	0					
ANR	4867092	CompoundStatement		487:0:10119:10375	4867090	0					
ANR	4867093	IdentifierDeclStatement	StatStructType statbuf ;	488:1:10122:10144	4867090	0	True				
ANR	4867094	IdentifierDecl	statbuf		4867090	0					
ANR	4867095	IdentifierDeclType	StatStructType		4867090	0					
ANR	4867096	Identifier	statbuf		4867090	1					
ANR	4867097	IfStatement	if ( NULL == path )		4867090	1					
ANR	4867098	Condition	NULL == path	490:6:10153:10164	4867090	0	True				
ANR	4867099	EqualityExpression	NULL == path		4867090	0		==			
ANR	4867100	Identifier	NULL		4867090	0					
ANR	4867101	Identifier	path		4867090	1					
ANR	4867102	CompoundStatement		4:21:48:48	4867090	1					
ANR	4867103	ExpressionStatement	path = CurPath ( )	491:2:10172:10189	4867090	0	True				
ANR	4867104	AssignmentExpression	path = CurPath ( )		4867090	0		=			
ANR	4867105	Identifier	path		4867090	0					
ANR	4867106	CallExpression	CurPath ( )		4867090	1					
ANR	4867107	Callee	CurPath		4867090	0					
ANR	4867108	Identifier	CurPath		4867090	0					
ANR	4867109	ArgumentList			4867090	1					
ANR	4867110	IfStatement	if ( rot < 0 )		4867090	2					
ANR	4867111	Condition	rot < 0	493:6:10200:10206	4867090	0	True				
ANR	4867112	RelationalExpression	rot < 0		4867090	0		<			
ANR	4867113	Identifier	rot		4867090	0					
ANR	4867114	PrimaryExpression	0		4867090	1					
ANR	4867115	CompoundStatement		7:16:90:90	4867090	1					
ANR	4867116	ExpressionStatement	rot = m_cur_rot	494:2:10214:10229	4867090	0	True				
ANR	4867117	AssignmentExpression	rot = m_cur_rot		4867090	0		=			
ANR	4867118	Identifier	rot		4867090	0					
ANR	4867119	Identifier	m_cur_rot		4867090	1					
ANR	4867120	IfStatement	"if ( StatFile ( path , statbuf ) )"		4867090	3					
ANR	4867121	Condition	"StatFile ( path , statbuf )"	496:6:10240:10264	4867090	0	True				
ANR	4867122	CallExpression	"StatFile ( path , statbuf )"		4867090	0					
ANR	4867123	Callee	StatFile		4867090	0					
ANR	4867124	Identifier	StatFile		4867090	0					
ANR	4867125	ArgumentList	path		4867090	1					
ANR	4867126	Argument	path		4867090	0					
ANR	4867127	Identifier	path		4867090	0					
ANR	4867128	Argument	statbuf		4867090	1					
ANR	4867129	Identifier	statbuf		4867090	0					
ANR	4867130	CompoundStatement		10:34:148:148	4867090	1					
ANR	4867131	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""ScoreFile: stat Error\\n"" )"	497:2:10272:10321	4867090	0	True				
ANR	4867132	CallExpression	"dprintf ( D_FULLDEBUG , ""ScoreFile: stat Error\\n"" )"		4867090	0					
ANR	4867133	Callee	dprintf		4867090	0					
ANR	4867134	Identifier	dprintf		4867090	0					
ANR	4867135	ArgumentList	D_FULLDEBUG		4867090	1					
ANR	4867136	Argument	D_FULLDEBUG		4867090	0					
ANR	4867137	Identifier	D_FULLDEBUG		4867090	0					
ANR	4867138	Argument	"""ScoreFile: stat Error\\n"""		4867090	1					
ANR	4867139	PrimaryExpression	"""ScoreFile: stat Error\\n"""		4867090	0					
ANR	4867140	ReturnStatement	return - 1 ;	498:2:10325:10334	4867090	1	True				
ANR	4867141	UnaryOperationExpression	- 1		4867090	0					
ANR	4867142	UnaryOperator	-		4867090	0					
ANR	4867143	PrimaryExpression	1		4867090	1					
ANR	4867144	ReturnStatement	"return ScoreFile ( statbuf , rot ) ;"	501:1:10341:10373	4867090	4	True				
ANR	4867145	CallExpression	"ScoreFile ( statbuf , rot )"		4867090	0					
ANR	4867146	Callee	ScoreFile		4867090	0					
ANR	4867147	Identifier	ScoreFile		4867090	0					
ANR	4867148	ArgumentList	statbuf		4867090	1					
ANR	4867149	Argument	statbuf		4867090	0					
ANR	4867150	Identifier	statbuf		4867090	0					
ANR	4867151	Argument	rot		4867090	1					
ANR	4867152	Identifier	rot		4867090	0					
ANR	4867153	ReturnType	int		4867090	1					
ANR	4867154	Identifier	ReadUserLogState :: ScoreFile		4867090	2					
ANR	4867155	ParameterList	"const char * path , int rot"		4867090	3					
ANR	4867156	Parameter	const char * path	486:29:10085:10100	4867090	0	True				
ANR	4867157	ParameterType	const char *		4867090	0					
ANR	4867158	Identifier	path		4867090	1					
ANR	4867159	Parameter	int rot	486:47:10103:10109	4867090	1	True				
ANR	4867160	ParameterType	int		4867090	0					
ANR	4867161	Identifier	rot		4867090	1					
ANR	4867162	CFGEntryNode	ENTRY		4867090		True				
ANR	4867163	CFGExitNode	EXIT		4867090		True				
ANR	4867164	Symbol	m_cur_rot		4867090						
ANR	4867165	Symbol	path		4867090						
ANR	4867166	Symbol	CurPath		4867090						
ANR	4867167	Symbol	NULL		4867090						
ANR	4867168	Symbol	statbuf		4867090						
ANR	4867169	Symbol	rot		4867090						
ANR	4867170	Symbol	D_FULLDEBUG		4867090						
ANR	4867171	Symbol	StatFile		4867090						
ANR	4867172	Symbol	ScoreFile		4867090						
ANR	4867173	Function	ReadUserLogState :: ScoreFile	504:0:10378:11933							
ANR	4867174	FunctionDef	"ReadUserLogState :: ScoreFile (const StatStructType & statbuf , int rot)"		4867173	0					
ANR	4867175	CompoundStatement		506:0:10458:11933	4867173	0					
ANR	4867176	IdentifierDeclStatement	int score = 0 ;	507:1:10461:10475	4867173	0	True				
ANR	4867177	IdentifierDecl	score = 0		4867173	0					
ANR	4867178	IdentifierDeclType	int		4867173	0					
ANR	4867179	Identifier	score		4867173	1					
ANR	4867180	AssignmentExpression	score = 0		4867173	2		=			
ANR	4867181	Identifier	score		4867173	0					
ANR	4867182	PrimaryExpression	0		4867173	1					
ANR	4867183	IfStatement	if ( rot < 0 )		4867173	1					
ANR	4867184	Condition	rot < 0	509:6:10484:10490	4867173	0	True				
ANR	4867185	RelationalExpression	rot < 0		4867173	0		<			
ANR	4867186	Identifier	rot		4867173	0					
ANR	4867187	PrimaryExpression	0		4867173	1					
ANR	4867188	CompoundStatement		4:16:35:35	4867173	1					
ANR	4867189	ExpressionStatement	rot = m_cur_rot	510:2:10498:10513	4867173	0	True				
ANR	4867190	AssignmentExpression	rot = m_cur_rot		4867173	0		=			
ANR	4867191	Identifier	rot		4867173	0					
ANR	4867192	Identifier	m_cur_rot		4867173	1					
ANR	4867193	IdentifierDeclStatement	bool is_recent = ( time ( NULL ) < ( m_update_time + m_recent_thresh ) ) ;	513:1:10520:10587	4867173	2	True				
ANR	4867194	IdentifierDecl	is_recent = ( time ( NULL ) < ( m_update_time + m_recent_thresh ) )		4867173	0					
ANR	4867195	IdentifierDeclType	bool		4867173	0					
ANR	4867196	Identifier	is_recent		4867173	1					
ANR	4867197	AssignmentExpression	is_recent = ( time ( NULL ) < ( m_update_time + m_recent_thresh ) )		4867173	2		=			
ANR	4867198	Identifier	is_recent		4867173	0					
ANR	4867199	RelationalExpression	time ( NULL ) < ( m_update_time + m_recent_thresh )		4867173	1		<			
ANR	4867200	CallExpression	time ( NULL )		4867173	0					
ANR	4867201	Callee	time		4867173	0					
ANR	4867202	Identifier	time		4867173	0					
ANR	4867203	ArgumentList	NULL		4867173	1					
ANR	4867204	Argument	NULL		4867173	0					
ANR	4867205	Identifier	NULL		4867173	0					
ANR	4867206	AdditiveExpression	m_update_time + m_recent_thresh		4867173	1		+			
ANR	4867207	Identifier	m_update_time		4867173	0					
ANR	4867208	Identifier	m_recent_thresh		4867173	1					
ANR	4867209	IdentifierDeclStatement	bool is_current = ( rot == m_cur_rot ) ;	514:1:10590:10628	4867173	3	True				
ANR	4867210	IdentifierDecl	is_current = ( rot == m_cur_rot )		4867173	0					
ANR	4867211	IdentifierDeclType	bool		4867173	0					
ANR	4867212	Identifier	is_current		4867173	1					
ANR	4867213	AssignmentExpression	is_current = ( rot == m_cur_rot )		4867173	2		=			
ANR	4867214	Identifier	is_current		4867173	0					
ANR	4867215	EqualityExpression	rot == m_cur_rot		4867173	1		==			
ANR	4867216	Identifier	rot		4867173	0					
ANR	4867217	Identifier	m_cur_rot		4867173	1					
ANR	4867218	IdentifierDeclStatement	bool same_size = ( statbuf . st_size == m_stat_buf . st_size ) ;	515:1:10631:10689	4867173	4	True				
ANR	4867219	IdentifierDecl	same_size = ( statbuf . st_size == m_stat_buf . st_size )		4867173	0					
ANR	4867220	IdentifierDeclType	bool		4867173	0					
ANR	4867221	Identifier	same_size		4867173	1					
ANR	4867222	AssignmentExpression	same_size = ( statbuf . st_size == m_stat_buf . st_size )		4867173	2		=			
ANR	4867223	Identifier	same_size		4867173	0					
ANR	4867224	EqualityExpression	statbuf . st_size == m_stat_buf . st_size		4867173	1		==			
ANR	4867225	MemberAccess	statbuf . st_size		4867173	0					
ANR	4867226	Identifier	statbuf		4867173	0					
ANR	4867227	Identifier	st_size		4867173	1					
ANR	4867228	MemberAccess	m_stat_buf . st_size		4867173	1					
ANR	4867229	Identifier	m_stat_buf		4867173	0					
ANR	4867230	Identifier	st_size		4867173	1					
ANR	4867231	IdentifierDeclStatement	bool has_grown = ( statbuf . st_size > m_stat_buf . st_size ) ;	516:1:10692:10750	4867173	5	True				
ANR	4867232	IdentifierDecl	has_grown = ( statbuf . st_size > m_stat_buf . st_size )		4867173	0					
ANR	4867233	IdentifierDeclType	bool		4867173	0					
ANR	4867234	Identifier	has_grown		4867173	1					
ANR	4867235	AssignmentExpression	has_grown = ( statbuf . st_size > m_stat_buf . st_size )		4867173	2		=			
ANR	4867236	Identifier	has_grown		4867173	0					
ANR	4867237	RelationalExpression	statbuf . st_size > m_stat_buf . st_size		4867173	1		>			
ANR	4867238	MemberAccess	statbuf . st_size		4867173	0					
ANR	4867239	Identifier	statbuf		4867173	0					
ANR	4867240	Identifier	st_size		4867173	1					
ANR	4867241	MemberAccess	m_stat_buf . st_size		4867173	1					
ANR	4867242	Identifier	m_stat_buf		4867173	0					
ANR	4867243	Identifier	st_size		4867173	1					
ANR	4867244	IdentifierDeclStatement	"MyString MatchList = """" ;"	518:1:10754:10777	4867173	6	True				
ANR	4867245	IdentifierDecl	"MatchList = """""		4867173	0					
ANR	4867246	IdentifierDeclType	MyString		4867173	0					
ANR	4867247	Identifier	MatchList		4867173	1					
ANR	4867248	AssignmentExpression	"MatchList = """""		4867173	2		=			
ANR	4867249	Identifier	MatchList		4867173	0					
ANR	4867250	PrimaryExpression	""""""		4867173	1					
ANR	4867251	IfStatement	if ( m_stat_buf . st_ino == statbuf . st_ino )		4867173	7					
ANR	4867252	Condition	m_stat_buf . st_ino == statbuf . st_ino	521:6:10825:10859	4867173	0	True				
ANR	4867253	EqualityExpression	m_stat_buf . st_ino == statbuf . st_ino		4867173	0		==			
ANR	4867254	MemberAccess	m_stat_buf . st_ino		4867173	0					
ANR	4867255	Identifier	m_stat_buf		4867173	0					
ANR	4867256	Identifier	st_ino		4867173	1					
ANR	4867257	MemberAccess	statbuf . st_ino		4867173	1					
ANR	4867258	Identifier	statbuf		4867173	0					
ANR	4867259	Identifier	st_ino		4867173	1					
ANR	4867260	CompoundStatement		16:44:404:404	4867173	1					
ANR	4867261	ExpressionStatement	score += m_score_fact_inode	522:2:10867:10894	4867173	0	True				
ANR	4867262	AssignmentExpression	score += m_score_fact_inode		4867173	0		+=			
ANR	4867263	Identifier	score		4867173	0					
ANR	4867264	Identifier	m_score_fact_inode		4867173	1					
ANR	4867265	IfStatement	if ( DebugFlags & D_FULLDEBUG )		4867173	1					
ANR	4867266	Condition	DebugFlags & D_FULLDEBUG	523:7:10903:10926	4867173	0	True				
ANR	4867267	BitAndExpression	DebugFlags & D_FULLDEBUG		4867173	0		&			
ANR	4867268	Identifier	DebugFlags		4867173	0					
ANR	4867269	Identifier	D_FULLDEBUG		4867173	1					
ANR	4867270	ExpressionStatement	"MatchList += ""inode """	523:34:10930:10951	4867173	1	True				
ANR	4867271	AssignmentExpression	"MatchList += ""inode """		4867173	0		+=			
ANR	4867272	Identifier	MatchList		4867173	0					
ANR	4867273	PrimaryExpression	"""inode """		4867173	1					
ANR	4867274	IfStatement	if ( m_stat_buf . st_ctime == statbuf . st_ctime )		4867173	8					
ANR	4867275	Condition	m_stat_buf . st_ctime == statbuf . st_ctime	527:6:10985:11023	4867173	0	True				
ANR	4867276	EqualityExpression	m_stat_buf . st_ctime == statbuf . st_ctime		4867173	0		==			
ANR	4867277	MemberAccess	m_stat_buf . st_ctime		4867173	0					
ANR	4867278	Identifier	m_stat_buf		4867173	0					
ANR	4867279	Identifier	st_ctime		4867173	1					
ANR	4867280	MemberAccess	statbuf . st_ctime		4867173	1					
ANR	4867281	Identifier	statbuf		4867173	0					
ANR	4867282	Identifier	st_ctime		4867173	1					
ANR	4867283	CompoundStatement		22:48:568:568	4867173	1					
ANR	4867284	ExpressionStatement	score += m_score_fact_ctime	528:2:11031:11058	4867173	0	True				
ANR	4867285	AssignmentExpression	score += m_score_fact_ctime		4867173	0		+=			
ANR	4867286	Identifier	score		4867173	0					
ANR	4867287	Identifier	m_score_fact_ctime		4867173	1					
ANR	4867288	IfStatement	if ( DebugFlags & D_FULLDEBUG )		4867173	1					
ANR	4867289	Condition	DebugFlags & D_FULLDEBUG	529:7:11067:11090	4867173	0	True				
ANR	4867290	BitAndExpression	DebugFlags & D_FULLDEBUG		4867173	0		&			
ANR	4867291	Identifier	DebugFlags		4867173	0					
ANR	4867292	Identifier	D_FULLDEBUG		4867173	1					
ANR	4867293	ExpressionStatement	"MatchList += ""ctime """	529:34:11094:11115	4867173	1	True				
ANR	4867294	AssignmentExpression	"MatchList += ""ctime """		4867173	0		+=			
ANR	4867295	Identifier	MatchList		4867173	0					
ANR	4867296	PrimaryExpression	"""ctime """		4867173	1					
ANR	4867297	IfStatement	if ( same_size )		4867173	9					
ANR	4867298	Condition	same_size	533:6:11173:11181	4867173	0	True				
ANR	4867299	Identifier	same_size		4867173	0					
ANR	4867300	CompoundStatement		28:18:726:726	4867173	1					
ANR	4867301	ExpressionStatement	score += m_score_fact_same_size	534:2:11189:11220	4867173	0	True				
ANR	4867302	AssignmentExpression	score += m_score_fact_same_size		4867173	0		+=			
ANR	4867303	Identifier	score		4867173	0					
ANR	4867304	Identifier	m_score_fact_same_size		4867173	1					
ANR	4867305	IfStatement	if ( DebugFlags & D_FULLDEBUG )		4867173	1					
ANR	4867306	Condition	DebugFlags & D_FULLDEBUG	535:7:11229:11252	4867173	0	True				
ANR	4867307	BitAndExpression	DebugFlags & D_FULLDEBUG		4867173	0		&			
ANR	4867308	Identifier	DebugFlags		4867173	0					
ANR	4867309	Identifier	D_FULLDEBUG		4867173	1					
ANR	4867310	ExpressionStatement	"MatchList += ""same-size """	535:34:11256:11281	4867173	1	True				
ANR	4867311	AssignmentExpression	"MatchList += ""same-size """		4867173	0		+=			
ANR	4867312	Identifier	MatchList		4867173	0					
ANR	4867313	PrimaryExpression	"""same-size """		4867173	1					
ANR	4867314	ElseStatement	else		4867173	0					
ANR	4867315	IfStatement	if ( is_recent && is_current && has_grown )		4867173	0					
ANR	4867316	Condition	is_recent && is_current && has_grown	539:11:11391:11426	4867173	0	True				
ANR	4867317	AndExpression	is_recent && is_current && has_grown		4867173	0		&&			
ANR	4867318	Identifier	is_recent		4867173	0					
ANR	4867319	AndExpression	is_current && has_grown		4867173	1		&&			
ANR	4867320	Identifier	is_current		4867173	0					
ANR	4867321	Identifier	has_grown		4867173	1					
ANR	4867322	CompoundStatement		34:50:971:971	4867173	1					
ANR	4867323	ExpressionStatement	score += m_score_fact_grown	540:2:11434:11461	4867173	0	True				
ANR	4867324	AssignmentExpression	score += m_score_fact_grown		4867173	0		+=			
ANR	4867325	Identifier	score		4867173	0					
ANR	4867326	Identifier	m_score_fact_grown		4867173	1					
ANR	4867327	IfStatement	if ( DebugFlags & D_FULLDEBUG )		4867173	1					
ANR	4867328	Condition	DebugFlags & D_FULLDEBUG	541:7:11470:11493	4867173	0	True				
ANR	4867329	BitAndExpression	DebugFlags & D_FULLDEBUG		4867173	0		&			
ANR	4867330	Identifier	DebugFlags		4867173	0					
ANR	4867331	Identifier	D_FULLDEBUG		4867173	1					
ANR	4867332	ExpressionStatement	"MatchList += ""grown """	541:34:11497:11518	4867173	1	True				
ANR	4867333	AssignmentExpression	"MatchList += ""grown """		4867173	0		+=			
ANR	4867334	Identifier	MatchList		4867173	0					
ANR	4867335	PrimaryExpression	"""grown """		4867173	1					
ANR	4867336	IfStatement	if ( m_stat_buf . st_size > statbuf . st_size )		4867173	10					
ANR	4867337	Condition	m_stat_buf . st_size > statbuf . st_size	545:6:11604:11639	4867173	0	True				
ANR	4867338	RelationalExpression	m_stat_buf . st_size > statbuf . st_size		4867173	0		>			
ANR	4867339	MemberAccess	m_stat_buf . st_size		4867173	0					
ANR	4867340	Identifier	m_stat_buf		4867173	0					
ANR	4867341	Identifier	st_size		4867173	1					
ANR	4867342	MemberAccess	statbuf . st_size		4867173	1					
ANR	4867343	Identifier	statbuf		4867173	0					
ANR	4867344	Identifier	st_size		4867173	1					
ANR	4867345	CompoundStatement		40:45:1184:1184	4867173	1					
ANR	4867346	ExpressionStatement	score += m_score_fact_shrunk	546:2:11647:11675	4867173	0	True				
ANR	4867347	AssignmentExpression	score += m_score_fact_shrunk		4867173	0		+=			
ANR	4867348	Identifier	score		4867173	0					
ANR	4867349	Identifier	m_score_fact_shrunk		4867173	1					
ANR	4867350	IfStatement	if ( DebugFlags & D_FULLDEBUG )		4867173	1					
ANR	4867351	Condition	DebugFlags & D_FULLDEBUG	547:7:11684:11707	4867173	0	True				
ANR	4867352	BitAndExpression	DebugFlags & D_FULLDEBUG		4867173	0		&			
ANR	4867353	Identifier	DebugFlags		4867173	0					
ANR	4867354	Identifier	D_FULLDEBUG		4867173	1					
ANR	4867355	ExpressionStatement	"MatchList += ""shrunk """	547:34:11711:11733	4867173	1	True				
ANR	4867356	AssignmentExpression	"MatchList += ""shrunk """		4867173	0		+=			
ANR	4867357	Identifier	MatchList		4867173	0					
ANR	4867358	PrimaryExpression	"""shrunk """		4867173	1					
ANR	4867359	IfStatement	if ( DebugFlags & D_FULLDEBUG )		4867173	11					
ANR	4867360	Condition	DebugFlags & D_FULLDEBUG	550:6:11745:11768	4867173	0	True				
ANR	4867361	BitAndExpression	DebugFlags & D_FULLDEBUG		4867173	0		&			
ANR	4867362	Identifier	DebugFlags		4867173	0					
ANR	4867363	Identifier	D_FULLDEBUG		4867173	1					
ANR	4867364	CompoundStatement		45:33:1313:1313	4867173	1					
ANR	4867365	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""ScoreFile: match list: %s\\n"" , MatchList . Value ( ) )"	551:2:11776:11853	4867173	0	True				
ANR	4867366	CallExpression	"dprintf ( D_FULLDEBUG , ""ScoreFile: match list: %s\\n"" , MatchList . Value ( ) )"		4867173	0					
ANR	4867367	Callee	dprintf		4867173	0					
ANR	4867368	Identifier	dprintf		4867173	0					
ANR	4867369	ArgumentList	D_FULLDEBUG		4867173	1					
ANR	4867370	Argument	D_FULLDEBUG		4867173	0					
ANR	4867371	Identifier	D_FULLDEBUG		4867173	0					
ANR	4867372	Argument	"""ScoreFile: match list: %s\\n"""		4867173	1					
ANR	4867373	PrimaryExpression	"""ScoreFile: match list: %s\\n"""		4867173	0					
ANR	4867374	Argument	MatchList . Value ( )		4867173	2					
ANR	4867375	CallExpression	MatchList . Value ( )		4867173	0					
ANR	4867376	Callee	MatchList . Value		4867173	0					
ANR	4867377	MemberAccess	MatchList . Value		4867173	0					
ANR	4867378	Identifier	MatchList		4867173	0					
ANR	4867379	Identifier	Value		4867173	1					
ANR	4867380	ArgumentList			4867173	1					
ANR	4867381	IfStatement	if ( score < 0 )		4867173	12					
ANR	4867382	Condition	score < 0	556:6:11887:11895	4867173	0	True				
ANR	4867383	RelationalExpression	score < 0		4867173	0		<			
ANR	4867384	Identifier	score		4867173	0					
ANR	4867385	PrimaryExpression	0		4867173	1					
ANR	4867386	CompoundStatement		51:18:1440:1440	4867173	1					
ANR	4867387	ExpressionStatement	score = 0	557:2:11903:11912	4867173	0	True				
ANR	4867388	AssignmentExpression	score = 0		4867173	0		=			
ANR	4867389	Identifier	score		4867173	0					
ANR	4867390	PrimaryExpression	0		4867173	1					
ANR	4867391	ReturnStatement	return score ;	560:1:11919:11931	4867173	13	True				
ANR	4867392	Identifier	score		4867173	0					
ANR	4867393	ReturnType	int		4867173	1					
ANR	4867394	Identifier	ReadUserLogState :: ScoreFile		4867173	2					
ANR	4867395	ParameterList	"const StatStructType & statbuf , int rot"		4867173	3					
ANR	4867396	Parameter	const StatStructType & statbuf	505:29:10411:10439	4867173	0	True				
ANR	4867397	ParameterType	const StatStructType &		4867173	0					
ANR	4867398	Identifier	statbuf		4867173	1					
ANR	4867399	Parameter	int rot	505:60:10442:10448	4867173	1	True				
ANR	4867400	ParameterType	int		4867173	0					
ANR	4867401	Identifier	rot		4867173	1					
ANR	4867402	CFGEntryNode	ENTRY		4867173		True				
ANR	4867403	CFGExitNode	EXIT		4867173		True				
ANR	4867404	Symbol	m_cur_rot		4867173						
ANR	4867405	Symbol	score		4867173						
ANR	4867406	Symbol	m_score_fact_grown		4867173						
ANR	4867407	Symbol	rot		4867173						
ANR	4867408	Symbol	m_stat_buf . st_ctime		4867173						
ANR	4867409	Symbol	m_score_fact_inode		4867173						
ANR	4867410	Symbol	m_recent_thresh		4867173						
ANR	4867411	Symbol	same_size		4867173						
ANR	4867412	Symbol	statbuf . st_size		4867173						
ANR	4867413	Symbol	has_grown		4867173						
ANR	4867414	Symbol	m_score_fact_ctime		4867173						
ANR	4867415	Symbol	statbuf . st_ino		4867173						
ANR	4867416	Symbol	NULL		4867173						
ANR	4867417	Symbol	m_stat_buf		4867173						
ANR	4867418	Symbol	MatchList		4867173						
ANR	4867419	Symbol	m_score_fact_same_size		4867173						
ANR	4867420	Symbol	D_FULLDEBUG		4867173						
ANR	4867421	Symbol	DebugFlags		4867173						
ANR	4867422	Symbol	m_stat_buf . st_size		4867173						
ANR	4867423	Symbol	m_score_fact_shrunk		4867173						
ANR	4867424	Symbol	statbuf		4867173						
ANR	4867425	Symbol	m_update_time		4867173						
ANR	4867426	Symbol	time		4867173						
ANR	4867427	Symbol	is_current		4867173						
ANR	4867428	Symbol	statbuf . st_ctime		4867173						
ANR	4867429	Symbol	m_stat_buf . st_ino		4867173						
ANR	4867430	Symbol	is_recent		4867173						
ANR	4867431	Symbol	MatchList . Value		4867173						
ANR	4867432	Function	ReadUserLogState :: SetScoreFactor	563:0:11936:12386							
ANR	4867433	FunctionDef	"ReadUserLogState :: SetScoreFactor (enum ScoreFactors which , int factor)"		4867432	0					
ANR	4867434	CompoundStatement		565:0:12013:12386	4867432	0					
ANR	4867435	SwitchStatement	switch ( which )		4867432	0					
ANR	4867436	Condition	which	566:10:12025:12029	4867432	0	True				
ANR	4867437	Identifier	which		4867432	0					
ANR	4867438	CompoundStatement		3:1:20:20	4867432	1					
ANR	4867439	Label	case SCORE_CTIME :	568:1:12037:12053	4867432	0	True				
ANR	4867440	Identifier	SCORE_CTIME		4867432	0					
ANR	4867441	ExpressionStatement	m_score_fact_ctime = factor	569:2:12057:12084	4867432	1	True				
ANR	4867442	AssignmentExpression	m_score_fact_ctime = factor		4867432	0		=			
ANR	4867443	Identifier	m_score_fact_ctime		4867432	0					
ANR	4867444	Identifier	factor		4867432	1					
ANR	4867445	BreakStatement	break ;	570:2:12088:12093	4867432	2	True				
ANR	4867446	Label	case SCORE_INODE :	571:1:12096:12112	4867432	3	True				
ANR	4867447	Identifier	SCORE_INODE		4867432	0					
ANR	4867448	ExpressionStatement	m_score_fact_inode = factor	572:2:12116:12143	4867432	4	True				
ANR	4867449	AssignmentExpression	m_score_fact_inode = factor		4867432	0		=			
ANR	4867450	Identifier	m_score_fact_inode		4867432	0					
ANR	4867451	Identifier	factor		4867432	1					
ANR	4867452	BreakStatement	break ;	573:2:12147:12152	4867432	5	True				
ANR	4867453	Label	case SCORE_SAME_SIZE :	574:1:12155:12175	4867432	6	True				
ANR	4867454	Identifier	SCORE_SAME_SIZE		4867432	0					
ANR	4867455	ExpressionStatement	m_score_fact_same_size = factor	575:2:12179:12210	4867432	7	True				
ANR	4867456	AssignmentExpression	m_score_fact_same_size = factor		4867432	0		=			
ANR	4867457	Identifier	m_score_fact_same_size		4867432	0					
ANR	4867458	Identifier	factor		4867432	1					
ANR	4867459	BreakStatement	break ;	576:2:12214:12219	4867432	8	True				
ANR	4867460	Label	case SCORE_GROWN :	577:1:12222:12238	4867432	9	True				
ANR	4867461	Identifier	SCORE_GROWN		4867432	0					
ANR	4867462	ExpressionStatement	m_score_fact_grown = factor	578:2:12242:12269	4867432	10	True				
ANR	4867463	AssignmentExpression	m_score_fact_grown = factor		4867432	0		=			
ANR	4867464	Identifier	m_score_fact_grown		4867432	0					
ANR	4867465	Identifier	factor		4867432	1					
ANR	4867466	BreakStatement	break ;	579:2:12273:12278	4867432	11	True				
ANR	4867467	Label	case SCORE_SHRUNK :	580:1:12281:12298	4867432	12	True				
ANR	4867468	Identifier	SCORE_SHRUNK		4867432	0					
ANR	4867469	ExpressionStatement	m_score_fact_shrunk = factor	581:2:12302:12330	4867432	13	True				
ANR	4867470	AssignmentExpression	m_score_fact_shrunk = factor		4867432	0		=			
ANR	4867471	Identifier	m_score_fact_shrunk		4867432	0					
ANR	4867472	Identifier	factor		4867432	1					
ANR	4867473	BreakStatement	break ;	582:2:12334:12339	4867432	14	True				
ANR	4867474	Label	default :	583:1:12342:12349	4867432	15	True				
ANR	4867475	Identifier	default		4867432	0					
ANR	4867476	BreakStatement	break ;	585:2:12365:12370	4867432	16	True				
ANR	4867477	ExpressionStatement	Update ( )	587:1:12376:12384	4867432	1	True				
ANR	4867478	CallExpression	Update ( )		4867432	0					
ANR	4867479	Callee	Update		4867432	0					
ANR	4867480	Identifier	Update		4867432	0					
ANR	4867481	ArgumentList			4867432	1					
ANR	4867482	ReturnType	void		4867432	1					
ANR	4867483	Identifier	ReadUserLogState :: SetScoreFactor		4867432	2					
ANR	4867484	ParameterList	"enum ScoreFactors which , int factor"		4867432	3					
ANR	4867485	Parameter	enum ScoreFactors which	564:34:11975:11997	4867432	0	True				
ANR	4867486	ParameterType	enum ScoreFactors		4867432	0					
ANR	4867487	Identifier	which		4867432	1					
ANR	4867488	Parameter	int factor	564:59:12000:12009	4867432	1	True				
ANR	4867489	ParameterType	int		4867432	0					
ANR	4867490	Identifier	factor		4867432	1					
ANR	4867491	CFGEntryNode	ENTRY		4867432		True				
ANR	4867492	CFGExitNode	EXIT		4867432		True				
ANR	4867493	Symbol	which		4867432						
ANR	4867494	Symbol	m_score_fact_shrunk		4867432						
ANR	4867495	Symbol	m_score_fact_ctime		4867432						
ANR	4867496	Symbol	m_score_fact_grown		4867432						
ANR	4867497	Symbol	m_score_fact_same_size		4867432						
ANR	4867498	Symbol	m_score_fact_inode		4867432						
ANR	4867499	Symbol	factor		4867432						
ANR	4867500	Function	ReadUserLogState :: CheckFileStatus	590:0:12389:13297							
ANR	4867501	FunctionDef	"ReadUserLogState :: CheckFileStatus (int fd , bool & is_empty)"		4867500	0					
ANR	4867502	CompoundStatement		592:0:12473:13297	4867500	0					
ANR	4867503	IdentifierDeclStatement	StatWrapper sb ;	593:1:12476:12490	4867500	0	True				
ANR	4867504	IdentifierDecl	sb		4867500	0					
ANR	4867505	IdentifierDeclType	StatWrapper		4867500	0					
ANR	4867506	Identifier	sb		4867500	1					
ANR	4867507	IfStatement	if ( fd >= 0 )		4867500	1					
ANR	4867508	Condition	fd >= 0	595:6:12499:12505	4867500	0	True				
ANR	4867509	RelationalExpression	fd >= 0		4867500	0		>=			
ANR	4867510	Identifier	fd		4867500	0					
ANR	4867511	PrimaryExpression	0		4867500	1					
ANR	4867512	CompoundStatement		4:16:35:35	4867500	1					
ANR	4867513	ExpressionStatement	( void ) sb . Stat ( fd )	596:2:12513:12533	4867500	0	True				
ANR	4867514	CastExpression	( void ) sb . Stat ( fd )		4867500	0					
ANR	4867515	CastTarget	void		4867500	0					
ANR	4867516	CallExpression	sb . Stat ( fd )		4867500	1					
ANR	4867517	Callee	sb . Stat		4867500	0					
ANR	4867518	MemberAccess	sb . Stat		4867500	0					
ANR	4867519	Identifier	sb		4867500	0					
ANR	4867520	Identifier	Stat		4867500	1					
ANR	4867521	ArgumentList	fd		4867500	1					
ANR	4867522	Argument	fd		4867500	0					
ANR	4867523	Identifier	fd		4867500	0					
ANR	4867524	IfStatement	if ( m_cur_path . Length ( ) && ! sb . IsBufValid ( ) )		4867500	2					
ANR	4867525	Condition	m_cur_path . Length ( ) && ! sb . IsBufValid ( )	599:6:12545:12583	4867500	0	True				
ANR	4867526	AndExpression	m_cur_path . Length ( ) && ! sb . IsBufValid ( )		4867500	0		&&			
ANR	4867527	CallExpression	m_cur_path . Length ( )		4867500	0					
ANR	4867528	Callee	m_cur_path . Length		4867500	0					
ANR	4867529	MemberAccess	m_cur_path . Length		4867500	0					
ANR	4867530	Identifier	m_cur_path		4867500	0					
ANR	4867531	Identifier	Length		4867500	1					
ANR	4867532	ArgumentList			4867500	1					
ANR	4867533	UnaryOperationExpression	! sb . IsBufValid ( )		4867500	1					
ANR	4867534	UnaryOperator	!		4867500	0					
ANR	4867535	CallExpression	sb . IsBufValid ( )		4867500	1					
ANR	4867536	Callee	sb . IsBufValid		4867500	0					
ANR	4867537	MemberAccess	sb . IsBufValid		4867500	0					
ANR	4867538	Identifier	sb		4867500	0					
ANR	4867539	Identifier	IsBufValid		4867500	1					
ANR	4867540	ArgumentList			4867500	1					
ANR	4867541	CompoundStatement		8:48:113:113	4867500	1					
ANR	4867542	ExpressionStatement	( void ) sb . Stat ( m_cur_path . Value ( ) )	600:2:12591:12627	4867500	0	True				
ANR	4867543	CastExpression	( void ) sb . Stat ( m_cur_path . Value ( ) )		4867500	0					
ANR	4867544	CastTarget	void		4867500	0					
ANR	4867545	CallExpression	sb . Stat ( m_cur_path . Value ( ) )		4867500	1					
ANR	4867546	Callee	sb . Stat		4867500	0					
ANR	4867547	MemberAccess	sb . Stat		4867500	0					
ANR	4867548	Identifier	sb		4867500	0					
ANR	4867549	Identifier	Stat		4867500	1					
ANR	4867550	ArgumentList	m_cur_path . Value ( )		4867500	1					
ANR	4867551	Argument	m_cur_path . Value ( )		4867500	0					
ANR	4867552	CallExpression	m_cur_path . Value ( )		4867500	0					
ANR	4867553	Callee	m_cur_path . Value		4867500	0					
ANR	4867554	MemberAccess	m_cur_path . Value		4867500	0					
ANR	4867555	Identifier	m_cur_path		4867500	0					
ANR	4867556	Identifier	Value		4867500	1					
ANR	4867557	ArgumentList			4867500	1					
ANR	4867558	IfStatement	if ( sb . GetRc ( ) )		4867500	3					
ANR	4867559	Condition	sb . GetRc ( )	603:6:12639:12648	4867500	0	True				
ANR	4867560	CallExpression	sb . GetRc ( )		4867500	0					
ANR	4867561	Callee	sb . GetRc		4867500	0					
ANR	4867562	MemberAccess	sb . GetRc		4867500	0					
ANR	4867563	Identifier	sb		4867500	0					
ANR	4867564	Identifier	GetRc		4867500	1					
ANR	4867565	ArgumentList			4867500	1					
ANR	4867566	CompoundStatement		12:19:178:178	4867500	1					
ANR	4867567	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""StatFile: errno = %d\\n"" , sb . GetErrno ( ) )"	604:2:12656:12719	4867500	0	True				
ANR	4867568	CallExpression	"dprintf ( D_FULLDEBUG , ""StatFile: errno = %d\\n"" , sb . GetErrno ( ) )"		4867500	0					
ANR	4867569	Callee	dprintf		4867500	0					
ANR	4867570	Identifier	dprintf		4867500	0					
ANR	4867571	ArgumentList	D_FULLDEBUG		4867500	1					
ANR	4867572	Argument	D_FULLDEBUG		4867500	0					
ANR	4867573	Identifier	D_FULLDEBUG		4867500	0					
ANR	4867574	Argument	"""StatFile: errno = %d\\n"""		4867500	1					
ANR	4867575	PrimaryExpression	"""StatFile: errno = %d\\n"""		4867500	0					
ANR	4867576	Argument	sb . GetErrno ( )		4867500	2					
ANR	4867577	CallExpression	sb . GetErrno ( )		4867500	0					
ANR	4867578	Callee	sb . GetErrno		4867500	0					
ANR	4867579	MemberAccess	sb . GetErrno		4867500	0					
ANR	4867580	Identifier	sb		4867500	0					
ANR	4867581	Identifier	GetErrno		4867500	1					
ANR	4867582	ArgumentList			4867500	1					
ANR	4867583	ReturnStatement	return ReadUserLog :: LOG_STATUS_ERROR ;	605:2:12723:12759	4867500	1	True				
ANR	4867584	Identifier	ReadUserLog :: LOG_STATUS_ERROR		4867500	0					
ANR	4867585	IdentifierDeclStatement	filesize_t size = sb . GetBuf ( ) -> st_size ;	608:1:12766:12807	4867500	4	True				
ANR	4867586	IdentifierDecl	size = sb . GetBuf ( ) -> st_size		4867500	0					
ANR	4867587	IdentifierDeclType	filesize_t		4867500	0					
ANR	4867588	Identifier	size		4867500	1					
ANR	4867589	AssignmentExpression	size = sb . GetBuf ( ) -> st_size		4867500	2		=			
ANR	4867590	Identifier	size		4867500	0					
ANR	4867591	PtrMemberAccess	sb . GetBuf ( ) -> st_size		4867500	1					
ANR	4867592	CallExpression	sb . GetBuf ( )		4867500	0					
ANR	4867593	Callee	sb . GetBuf		4867500	0					
ANR	4867594	MemberAccess	sb . GetBuf		4867500	0					
ANR	4867595	Identifier	sb		4867500	0					
ANR	4867596	Identifier	GetBuf		4867500	1					
ANR	4867597	ArgumentList			4867500	1					
ANR	4867598	Identifier	st_size		4867500	1					
ANR	4867599	IdentifierDeclStatement	ReadUserLog :: FileStatus status ;	609:1:12810:12840	4867500	5	True				
ANR	4867600	IdentifierDecl	status		4867500	0					
ANR	4867601	IdentifierDeclType	ReadUserLog :: FileStatus		4867500	0					
ANR	4867602	Identifier	status		4867500	1					
ANR	4867603	IfStatement	if ( 0 == size )		4867500	6					
ANR	4867604	Condition	0 == size	612:6:12885:12893	4867500	0	True				
ANR	4867605	EqualityExpression	0 == size		4867500	0		==			
ANR	4867606	PrimaryExpression	0		4867500	0					
ANR	4867607	Identifier	size		4867500	1					
ANR	4867608	CompoundStatement		21:18:423:423	4867500	1					
ANR	4867609	ExpressionStatement	is_empty = true	613:2:12901:12916	4867500	0	True				
ANR	4867610	AssignmentExpression	is_empty = true		4867500	0		=			
ANR	4867611	Identifier	is_empty		4867500	0					
ANR	4867612	Identifier	true		4867500	1					
ANR	4867613	IfStatement	if ( m_status_size < 0 )		4867500	1					
ANR	4867614	Condition	m_status_size < 0	614:7:12925:12941	4867500	0	True				
ANR	4867615	RelationalExpression	m_status_size < 0		4867500	0		<			
ANR	4867616	Identifier	m_status_size		4867500	0					
ANR	4867617	PrimaryExpression	0		4867500	1					
ANR	4867618	CompoundStatement		23:27:471:471	4867500	1					
ANR	4867619	ExpressionStatement	m_status_size = 0	615:3:12950:12967	4867500	0	True				
ANR	4867620	AssignmentExpression	m_status_size = 0		4867500	0		=			
ANR	4867621	Identifier	m_status_size		4867500	0					
ANR	4867622	PrimaryExpression	0		4867500	1					
ANR	4867623	ElseStatement	else		4867500	0					
ANR	4867624	CompoundStatement		27:6:508:508	4867500	0					
ANR	4867625	ExpressionStatement	is_empty = false	619:2:12986:13002	4867500	0	True				
ANR	4867626	AssignmentExpression	is_empty = false		4867500	0		=			
ANR	4867627	Identifier	is_empty		4867500	0					
ANR	4867628	Identifier	false		4867500	1					
ANR	4867629	IfStatement	if ( ( m_status_size < 0 ) || ( size > m_status_size ) )		4867500	7					
ANR	4867630	Condition	( m_status_size < 0 ) || ( size > m_status_size )	621:6:13013:13057	4867500	0	True				
ANR	4867631	OrExpression	( m_status_size < 0 ) || ( size > m_status_size )		4867500	0		||			
ANR	4867632	RelationalExpression	m_status_size < 0		4867500	0		<			
ANR	4867633	Identifier	m_status_size		4867500	0					
ANR	4867634	PrimaryExpression	0		4867500	1					
ANR	4867635	RelationalExpression	size > m_status_size		4867500	1		>			
ANR	4867636	Identifier	size		4867500	0					
ANR	4867637	Identifier	m_status_size		4867500	1					
ANR	4867638	CompoundStatement		30:54:587:587	4867500	1					
ANR	4867639	ExpressionStatement	status = ReadUserLog :: LOG_STATUS_GROWN	622:2:13065:13103	4867500	0	True				
ANR	4867640	AssignmentExpression	status = ReadUserLog :: LOG_STATUS_GROWN		4867500	0		=			
ANR	4867641	Identifier	status		4867500	0					
ANR	4867642	Identifier	ReadUserLog :: LOG_STATUS_GROWN		4867500	1					
ANR	4867643	ElseStatement	else		4867500	0					
ANR	4867644	IfStatement	if ( size == m_status_size )		4867500	0					
ANR	4867645	Condition	size == m_status_size	624:11:13119:13139	4867500	0	True				
ANR	4867646	EqualityExpression	size == m_status_size		4867500	0		==			
ANR	4867647	Identifier	size		4867500	0					
ANR	4867648	Identifier	m_status_size		4867500	1					
ANR	4867649	CompoundStatement		33:35:669:669	4867500	1					
ANR	4867650	ExpressionStatement	status = ReadUserLog :: LOG_STATUS_NOCHANGE	625:2:13147:13188	4867500	0	True				
ANR	4867651	AssignmentExpression	status = ReadUserLog :: LOG_STATUS_NOCHANGE		4867500	0		=			
ANR	4867652	Identifier	status		4867500	0					
ANR	4867653	Identifier	ReadUserLog :: LOG_STATUS_NOCHANGE		4867500	1					
ANR	4867654	ElseStatement	else		4867500	0					
ANR	4867655	CompoundStatement		36:6:725:725	4867500	0					
ANR	4867656	ExpressionStatement	status = ReadUserLog :: LOG_STATUS_SHRUNK	628:2:13203:13242	4867500	0	True				
ANR	4867657	AssignmentExpression	status = ReadUserLog :: LOG_STATUS_SHRUNK		4867500	0		=			
ANR	4867658	Identifier	status		4867500	0					
ANR	4867659	Identifier	ReadUserLog :: LOG_STATUS_SHRUNK		4867500	1					
ANR	4867660	ExpressionStatement	m_status_size = size	630:1:13248:13268	4867500	8	True				
ANR	4867661	AssignmentExpression	m_status_size = size		4867500	0		=			
ANR	4867662	Identifier	m_status_size		4867500	0					
ANR	4867663	Identifier	size		4867500	1					
ANR	4867664	ExpressionStatement	Update ( )	631:1:13271:13279	4867500	9	True				
ANR	4867665	CallExpression	Update ( )		4867500	0					
ANR	4867666	Callee	Update		4867500	0					
ANR	4867667	Identifier	Update		4867500	0					
ANR	4867668	ArgumentList			4867500	1					
ANR	4867669	ReturnStatement	return status ;	632:1:13282:13295	4867500	10	True				
ANR	4867670	Identifier	status		4867500	0					
ANR	4867671	ReturnType	ReadUserLog :: FileStatus		4867500	1					
ANR	4867672	Identifier	ReadUserLogState :: CheckFileStatus		4867500	2					
ANR	4867673	ParameterList	"int fd , bool & is_empty"		4867500	3					
ANR	4867674	Parameter	int fd	591:35:12448:12453	4867500	0	True				
ANR	4867675	ParameterType	int		4867500	0					
ANR	4867676	Identifier	fd		4867500	1					
ANR	4867677	Parameter	bool & is_empty	591:43:12456:12469	4867500	1	True				
ANR	4867678	ParameterType	bool &		4867500	0					
ANR	4867679	Identifier	is_empty		4867500	1					
ANR	4867680	CFGEntryNode	ENTRY		4867500		True				
ANR	4867681	CFGExitNode	EXIT		4867500		True				
ANR	4867682	Symbol	m_cur_path . Value		4867500						
ANR	4867683	Symbol	sb . GetRc		4867500						
ANR	4867684	Symbol	sb . GetErrno		4867500						
ANR	4867685	Symbol	m_cur_path . Length		4867500						
ANR	4867686	Symbol	sb . GetBuf ( ) -> st_size		4867500						
ANR	4867687	Symbol	false		4867500						
ANR	4867688	Symbol	ReadUserLog :: LOG_STATUS_NOCHANGE		4867500						
ANR	4867689	Symbol	D_FULLDEBUG		4867500						
ANR	4867690	Symbol	m_status_size		4867500						
ANR	4867691	Symbol	sb		4867500						
ANR	4867692	Symbol	* sb . GetBuf		4867500						
ANR	4867693	Symbol	ReadUserLog :: LOG_STATUS_GROWN		4867500						
ANR	4867694	Symbol	sb . GetBuf		4867500						
ANR	4867695	Symbol	size		4867500						
ANR	4867696	Symbol	* sb		4867500						
ANR	4867697	Symbol	ReadUserLog :: LOG_STATUS_ERROR		4867500						
ANR	4867698	Symbol	true		4867500						
ANR	4867699	Symbol	m_cur_path		4867500						
ANR	4867700	Symbol	ReadUserLog :: LOG_STATUS_SHRUNK		4867500						
ANR	4867701	Symbol	fd		4867500						
ANR	4867702	Symbol	is_empty		4867500						
ANR	4867703	Symbol	sb . IsBufValid		4867500						
ANR	4867704	Symbol	status		4867500						
ANR	4867705	Function	ReadUserLogState :: CompareUniqId	635:0:13300:13497							
ANR	4867706	FunctionDef	ReadUserLogState :: CompareUniqId (const MyString & id)		4867705	0					
ANR	4867707	CompoundStatement		637:0:13364:13497	4867705	0					
ANR	4867708	IfStatement	"if ( ( m_uniq_id == """" ) || ( id == """" ) )"		4867705	0					
ANR	4867709	Condition	"( m_uniq_id == """" ) || ( id == """" )"	638:6:13372:13406	4867705	0	True				
ANR	4867710	OrExpression	"( m_uniq_id == """" ) || ( id == """" )"		4867705	0		||			
ANR	4867711	EqualityExpression	"m_uniq_id == """""		4867705	0		==			
ANR	4867712	Identifier	m_uniq_id		4867705	0					
ANR	4867713	PrimaryExpression	""""""		4867705	1					
ANR	4867714	EqualityExpression	"id == """""		4867705	1		==			
ANR	4867715	Identifier	id		4867705	0					
ANR	4867716	PrimaryExpression	""""""		4867705	1					
ANR	4867717	CompoundStatement		2:44:45:45	4867705	1					
ANR	4867718	ReturnStatement	return 0 ;	639:2:13414:13422	4867705	0	True				
ANR	4867719	PrimaryExpression	0		4867705	0					
ANR	4867720	ElseStatement	else		4867705	0					
ANR	4867721	IfStatement	if ( m_uniq_id == id )		4867705	0					
ANR	4867722	Condition	m_uniq_id == id	641:11:13438:13452	4867705	0	True				
ANR	4867723	EqualityExpression	m_uniq_id == id		4867705	0		==			
ANR	4867724	Identifier	m_uniq_id		4867705	0					
ANR	4867725	Identifier	id		4867705	1					
ANR	4867726	CompoundStatement		5:29:91:91	4867705	1					
ANR	4867727	ReturnStatement	return 1 ;	642:2:13460:13468	4867705	0	True				
ANR	4867728	PrimaryExpression	1		4867705	0					
ANR	4867729	ElseStatement	else		4867705	0					
ANR	4867730	CompoundStatement		8:6:114:114	4867705	0					
ANR	4867731	ReturnStatement	return - 1 ;	645:2:13483:13492	4867705	0	True				
ANR	4867732	UnaryOperationExpression	- 1		4867705	0					
ANR	4867733	UnaryOperator	-		4867705	0					
ANR	4867734	PrimaryExpression	1		4867705	1					
ANR	4867735	ReturnType	int		4867705	1					
ANR	4867736	Identifier	ReadUserLogState :: CompareUniqId		4867705	2					
ANR	4867737	ParameterList	const MyString & id		4867705	3					
ANR	4867738	Parameter	const MyString & id	636:33:13337:13354	4867705	0	True				
ANR	4867739	ParameterType	const MyString &		4867705	0					
ANR	4867740	Identifier	id		4867705	1					
ANR	4867741	CFGEntryNode	ENTRY		4867705		True				
ANR	4867742	CFGExitNode	EXIT		4867705		True				
ANR	4867743	Symbol	m_uniq_id		4867705						
ANR	4867744	Symbol	id		4867705						
ANR	4867745	Function	ReadUserLogState :: GetState	649:0:13500:15090							
ANR	4867746	FunctionDef	ReadUserLogState :: GetState (ReadUserLog :: FileState & state)		4867745	0					
ANR	4867747	CompoundStatement		651:0:13571:15090	4867745	0					
ANR	4867748	IdentifierDeclStatement	ReadUserLogFileState fstate ( state ) ;	652:1:13574:13613	4867745	0	True				
ANR	4867749	IdentifierDecl	fstate ( state )		4867745	0					
ANR	4867750	IdentifierDeclType	ReadUserLogFileState		4867745	0					
ANR	4867751	Identifier	fstate		4867745	1					
ANR	4867752	Identifier	state		4867745	2					
ANR	4867753	IdentifierDeclStatement	ReadUserLogFileState :: FileState * istate = fstate . getRwState ( ) ;	653:1:13616:13677	4867745	1	True				
ANR	4867754	IdentifierDecl	* istate = fstate . getRwState ( )		4867745	0					
ANR	4867755	IdentifierDeclType	ReadUserLogFileState :: FileState *		4867745	0					
ANR	4867756	Identifier	istate		4867745	1					
ANR	4867757	AssignmentExpression	* istate = fstate . getRwState ( )		4867745	2		=			
ANR	4867758	Identifier	istate		4867745	0					
ANR	4867759	CallExpression	fstate . getRwState ( )		4867745	1					
ANR	4867760	Callee	fstate . getRwState		4867745	0					
ANR	4867761	MemberAccess	fstate . getRwState		4867745	0					
ANR	4867762	Identifier	fstate		4867745	0					
ANR	4867763	Identifier	getRwState		4867745	1					
ANR	4867764	ArgumentList			4867745	1					
ANR	4867765	IfStatement	if ( ! istate )		4867745	2					
ANR	4867766	Condition	! istate	654:6:13685:13691	4867745	0	True				
ANR	4867767	UnaryOperationExpression	! istate		4867745	0					
ANR	4867768	UnaryOperator	!		4867745	0					
ANR	4867769	Identifier	istate		4867745	1					
ANR	4867770	CompoundStatement		4:16:123:123	4867745	1					
ANR	4867771	ReturnStatement	return false ;	655:2:13699:13711	4867745	0	True				
ANR	4867772	Identifier	false		4867745	0					
ANR	4867773	IfStatement	"if ( strcmp ( istate -> m_signature , FileStateSignature ) )"		4867745	3					
ANR	4867774	Condition	"strcmp ( istate -> m_signature , FileStateSignature )"	659:6:13773:13821	4867745	0	True				
ANR	4867775	CallExpression	"strcmp ( istate -> m_signature , FileStateSignature )"		4867745	0					
ANR	4867776	Callee	strcmp		4867745	0					
ANR	4867777	Identifier	strcmp		4867745	0					
ANR	4867778	ArgumentList	istate -> m_signature		4867745	1					
ANR	4867779	Argument	istate -> m_signature		4867745	0					
ANR	4867780	PtrMemberAccess	istate -> m_signature		4867745	0					
ANR	4867781	Identifier	istate		4867745	0					
ANR	4867782	Identifier	m_signature		4867745	1					
ANR	4867783	Argument	FileStateSignature		4867745	1					
ANR	4867784	Identifier	FileStateSignature		4867745	0					
ANR	4867785	CompoundStatement		9:58:253:253	4867745	1					
ANR	4867786	ReturnStatement	return false ;	660:2:13829:13841	4867745	0	True				
ANR	4867787	Identifier	false		4867745	0					
ANR	4867788	IfStatement	if ( istate -> m_version != FILESTATE_VERSION )		4867745	4					
ANR	4867789	Condition	istate -> m_version != FILESTATE_VERSION	662:6:13852:13889	4867745	0	True				
ANR	4867790	EqualityExpression	istate -> m_version != FILESTATE_VERSION		4867745	0		!=			
ANR	4867791	PtrMemberAccess	istate -> m_version		4867745	0					
ANR	4867792	Identifier	istate		4867745	0					
ANR	4867793	Identifier	m_version		4867745	1					
ANR	4867794	Identifier	FILESTATE_VERSION		4867745	1					
ANR	4867795	CompoundStatement		12:47:321:321	4867745	1					
ANR	4867796	ReturnStatement	return false ;	663:2:13897:13909	4867745	0	True				
ANR	4867797	Identifier	false		4867745	0					
ANR	4867798	IfStatement	if ( ! strlen ( istate -> m_base_path ) )		4867745	5					
ANR	4867799	Condition	! strlen ( istate -> m_base_path )	667:5:13984:14013	4867745	0	True				
ANR	4867800	UnaryOperationExpression	! strlen ( istate -> m_base_path )		4867745	0					
ANR	4867801	UnaryOperator	!		4867745	0					
ANR	4867802	CallExpression	strlen ( istate -> m_base_path )		4867745	1					
ANR	4867803	Callee	strlen		4867745	0					
ANR	4867804	Identifier	strlen		4867745	0					
ANR	4867805	ArgumentList	istate -> m_base_path		4867745	1					
ANR	4867806	Argument	istate -> m_base_path		4867745	0					
ANR	4867807	PtrMemberAccess	istate -> m_base_path		4867745	0					
ANR	4867808	Identifier	istate		4867745	0					
ANR	4867809	Identifier	m_base_path		4867745	1					
ANR	4867810	CompoundStatement		17:38:445:445	4867745	1					
ANR	4867811	ExpressionStatement	"memset ( istate -> m_base_path , 0 , sizeof ( istate -> m_base_path ) )"	668:2:14021:14082	4867745	0	True				
ANR	4867812	CallExpression	"memset ( istate -> m_base_path , 0 , sizeof ( istate -> m_base_path ) )"		4867745	0					
ANR	4867813	Callee	memset		4867745	0					
ANR	4867814	Identifier	memset		4867745	0					
ANR	4867815	ArgumentList	istate -> m_base_path		4867745	1					
ANR	4867816	Argument	istate -> m_base_path		4867745	0					
ANR	4867817	PtrMemberAccess	istate -> m_base_path		4867745	0					
ANR	4867818	Identifier	istate		4867745	0					
ANR	4867819	Identifier	m_base_path		4867745	1					
ANR	4867820	Argument	0		4867745	1					
ANR	4867821	PrimaryExpression	0		4867745	0					
ANR	4867822	Argument	sizeof ( istate -> m_base_path )		4867745	2					
ANR	4867823	SizeofExpression	sizeof ( istate -> m_base_path )		4867745	0					
ANR	4867824	Sizeof	sizeof		4867745	0					
ANR	4867825	PtrMemberAccess	istate -> m_base_path		4867745	1					
ANR	4867826	Identifier	istate		4867745	0					
ANR	4867827	Identifier	m_base_path		4867745	1					
ANR	4867828	IfStatement	if ( m_base_path . Value ( ) )		4867745	1					
ANR	4867829	Condition	m_base_path . Value ( )	669:7:14091:14109	4867745	0	True				
ANR	4867830	CallExpression	m_base_path . Value ( )		4867745	0					
ANR	4867831	Callee	m_base_path . Value		4867745	0					
ANR	4867832	MemberAccess	m_base_path . Value		4867745	0					
ANR	4867833	Identifier	m_base_path		4867745	0					
ANR	4867834	Identifier	Value		4867745	1					
ANR	4867835	ArgumentList			4867745	1					
ANR	4867836	CompoundStatement		19:29:541:541	4867745	1					
ANR	4867837	ExpressionStatement	"strncpy ( istate -> m_base_path , m_base_path . Value ( ) , sizeof ( istate -> m_base_path ) - 1 )"	670:3:14118:14214	4867745	0	True				
ANR	4867838	CallExpression	"strncpy ( istate -> m_base_path , m_base_path . Value ( ) , sizeof ( istate -> m_base_path ) - 1 )"		4867745	0					
ANR	4867839	Callee	strncpy		4867745	0					
ANR	4867840	Identifier	strncpy		4867745	0					
ANR	4867841	ArgumentList	istate -> m_base_path		4867745	1					
ANR	4867842	Argument	istate -> m_base_path		4867745	0					
ANR	4867843	PtrMemberAccess	istate -> m_base_path		4867745	0					
ANR	4867844	Identifier	istate		4867745	0					
ANR	4867845	Identifier	m_base_path		4867745	1					
ANR	4867846	Argument	m_base_path . Value ( )		4867745	1					
ANR	4867847	CallExpression	m_base_path . Value ( )		4867745	0					
ANR	4867848	Callee	m_base_path . Value		4867745	0					
ANR	4867849	MemberAccess	m_base_path . Value		4867745	0					
ANR	4867850	Identifier	m_base_path		4867745	0					
ANR	4867851	Identifier	Value		4867745	1					
ANR	4867852	ArgumentList			4867745	1					
ANR	4867853	Argument	sizeof ( istate -> m_base_path ) - 1		4867745	2					
ANR	4867854	AdditiveExpression	sizeof ( istate -> m_base_path ) - 1		4867745	0		-			
ANR	4867855	SizeofExpression	sizeof ( istate -> m_base_path )		4867745	0					
ANR	4867856	Sizeof	sizeof		4867745	0					
ANR	4867857	PtrMemberAccess	istate -> m_base_path		4867745	1					
ANR	4867858	Identifier	istate		4867745	0					
ANR	4867859	Identifier	m_base_path		4867745	1					
ANR	4867860	PrimaryExpression	1		4867745	1					
ANR	4867861	ExpressionStatement	istate -> m_rotation = m_cur_rot	679:1:14317:14347	4867745	6	True				
ANR	4867862	AssignmentExpression	istate -> m_rotation = m_cur_rot		4867745	0		=			
ANR	4867863	PtrMemberAccess	istate -> m_rotation		4867745	0					
ANR	4867864	Identifier	istate		4867745	0					
ANR	4867865	Identifier	m_rotation		4867745	1					
ANR	4867866	Identifier	m_cur_rot		4867745	1					
ANR	4867867	ExpressionStatement	istate -> m_log_type = m_log_type	681:1:14351:14382	4867745	7	True				
ANR	4867868	AssignmentExpression	istate -> m_log_type = m_log_type		4867745	0		=			
ANR	4867869	PtrMemberAccess	istate -> m_log_type		4867745	0					
ANR	4867870	Identifier	istate		4867745	0					
ANR	4867871	Identifier	m_log_type		4867745	1					
ANR	4867872	Identifier	m_log_type		4867745	1					
ANR	4867873	IfStatement	if ( m_uniq_id . Value ( ) )		4867745	8					
ANR	4867874	Condition	m_uniq_id . Value ( )	683:5:14390:14406	4867745	0	True				
ANR	4867875	CallExpression	m_uniq_id . Value ( )		4867745	0					
ANR	4867876	Callee	m_uniq_id . Value		4867745	0					
ANR	4867877	MemberAccess	m_uniq_id . Value		4867745	0					
ANR	4867878	Identifier	m_uniq_id		4867745	0					
ANR	4867879	Identifier	Value		4867745	1					
ANR	4867880	ArgumentList			4867745	1					
ANR	4867881	CompoundStatement		33:25:838:838	4867745	1					
ANR	4867882	ExpressionStatement	"strncpy ( istate -> m_uniq_id , m_uniq_id . Value ( ) , sizeof ( istate -> m_uniq_id ) )"	684:2:14414:14498	4867745	0	True				
ANR	4867883	CallExpression	"strncpy ( istate -> m_uniq_id , m_uniq_id . Value ( ) , sizeof ( istate -> m_uniq_id ) )"		4867745	0					
ANR	4867884	Callee	strncpy		4867745	0					
ANR	4867885	Identifier	strncpy		4867745	0					
ANR	4867886	ArgumentList	istate -> m_uniq_id		4867745	1					
ANR	4867887	Argument	istate -> m_uniq_id		4867745	0					
ANR	4867888	PtrMemberAccess	istate -> m_uniq_id		4867745	0					
ANR	4867889	Identifier	istate		4867745	0					
ANR	4867890	Identifier	m_uniq_id		4867745	1					
ANR	4867891	Argument	m_uniq_id . Value ( )		4867745	1					
ANR	4867892	CallExpression	m_uniq_id . Value ( )		4867745	0					
ANR	4867893	Callee	m_uniq_id . Value		4867745	0					
ANR	4867894	MemberAccess	m_uniq_id . Value		4867745	0					
ANR	4867895	Identifier	m_uniq_id		4867745	0					
ANR	4867896	Identifier	Value		4867745	1					
ANR	4867897	ArgumentList			4867745	1					
ANR	4867898	Argument	sizeof ( istate -> m_uniq_id )		4867745	2					
ANR	4867899	SizeofExpression	sizeof ( istate -> m_uniq_id )		4867745	0					
ANR	4867900	Sizeof	sizeof		4867745	0					
ANR	4867901	PtrMemberAccess	istate -> m_uniq_id		4867745	1					
ANR	4867902	Identifier	istate		4867745	0					
ANR	4867903	Identifier	m_uniq_id		4867745	1					
ANR	4867904	ExpressionStatement	istate -> m_uniq_id [ sizeof ( istate -> m_uniq_id ) - 1 ] = '\\0'	687:2:14502:14557	4867745	1	True				
ANR	4867905	AssignmentExpression	istate -> m_uniq_id [ sizeof ( istate -> m_uniq_id ) - 1 ] = '\\0'		4867745	0		=			
ANR	4867906	ArrayIndexing	istate -> m_uniq_id [ sizeof ( istate -> m_uniq_id ) - 1 ]		4867745	0					
ANR	4867907	PtrMemberAccess	istate -> m_uniq_id		4867745	0					
ANR	4867908	Identifier	istate		4867745	0					
ANR	4867909	Identifier	m_uniq_id		4867745	1					
ANR	4867910	AdditiveExpression	sizeof ( istate -> m_uniq_id ) - 1		4867745	1		-			
ANR	4867911	SizeofExpression	sizeof ( istate -> m_uniq_id )		4867745	0					
ANR	4867912	Sizeof	sizeof		4867745	0					
ANR	4867913	PtrMemberAccess	istate -> m_uniq_id		4867745	1					
ANR	4867914	Identifier	istate		4867745	0					
ANR	4867915	Identifier	m_uniq_id		4867745	1					
ANR	4867916	PrimaryExpression	1		4867745	1					
ANR	4867917	PrimaryExpression	'\\0'		4867745	1					
ANR	4867918	ElseStatement	else		4867745	0					
ANR	4867919	CompoundStatement		39:6:996:996	4867745	0					
ANR	4867920	ExpressionStatement	"memset ( istate -> m_uniq_id , 0 , sizeof ( istate -> m_uniq_id ) )"	690:2:14572:14629	4867745	0	True				
ANR	4867921	CallExpression	"memset ( istate -> m_uniq_id , 0 , sizeof ( istate -> m_uniq_id ) )"		4867745	0					
ANR	4867922	Callee	memset		4867745	0					
ANR	4867923	Identifier	memset		4867745	0					
ANR	4867924	ArgumentList	istate -> m_uniq_id		4867745	1					
ANR	4867925	Argument	istate -> m_uniq_id		4867745	0					
ANR	4867926	PtrMemberAccess	istate -> m_uniq_id		4867745	0					
ANR	4867927	Identifier	istate		4867745	0					
ANR	4867928	Identifier	m_uniq_id		4867745	1					
ANR	4867929	Argument	0		4867745	1					
ANR	4867930	PrimaryExpression	0		4867745	0					
ANR	4867931	Argument	sizeof ( istate -> m_uniq_id )		4867745	2					
ANR	4867932	SizeofExpression	sizeof ( istate -> m_uniq_id )		4867745	0					
ANR	4867933	Sizeof	sizeof		4867745	0					
ANR	4867934	PtrMemberAccess	istate -> m_uniq_id		4867745	1					
ANR	4867935	Identifier	istate		4867745	0					
ANR	4867936	Identifier	m_uniq_id		4867745	1					
ANR	4867937	ExpressionStatement	istate -> m_sequence = m_sequence	692:1:14635:14671	4867745	9	True				
ANR	4867938	AssignmentExpression	istate -> m_sequence = m_sequence		4867745	0		=			
ANR	4867939	PtrMemberAccess	istate -> m_sequence		4867745	0					
ANR	4867940	Identifier	istate		4867745	0					
ANR	4867941	Identifier	m_sequence		4867745	1					
ANR	4867942	Identifier	m_sequence		4867745	1					
ANR	4867943	ExpressionStatement	istate -> m_max_rotations = m_max_rotations	693:1:14674:14715	4867745	10	True				
ANR	4867944	AssignmentExpression	istate -> m_max_rotations = m_max_rotations		4867745	0		=			
ANR	4867945	PtrMemberAccess	istate -> m_max_rotations		4867745	0					
ANR	4867946	Identifier	istate		4867745	0					
ANR	4867947	Identifier	m_max_rotations		4867745	1					
ANR	4867948	Identifier	m_max_rotations		4867745	1					
ANR	4867949	ExpressionStatement	istate -> m_inode = m_stat_buf . st_ino	695:1:14719:14762	4867745	11	True				
ANR	4867950	AssignmentExpression	istate -> m_inode = m_stat_buf . st_ino		4867745	0		=			
ANR	4867951	PtrMemberAccess	istate -> m_inode		4867745	0					
ANR	4867952	Identifier	istate		4867745	0					
ANR	4867953	Identifier	m_inode		4867745	1					
ANR	4867954	MemberAccess	m_stat_buf . st_ino		4867745	1					
ANR	4867955	Identifier	m_stat_buf		4867745	0					
ANR	4867956	Identifier	st_ino		4867745	1					
ANR	4867957	ExpressionStatement	istate -> m_ctime = m_stat_buf . st_ctime	696:1:14765:14810	4867745	12	True				
ANR	4867958	AssignmentExpression	istate -> m_ctime = m_stat_buf . st_ctime		4867745	0		=			
ANR	4867959	PtrMemberAccess	istate -> m_ctime		4867745	0					
ANR	4867960	Identifier	istate		4867745	0					
ANR	4867961	Identifier	m_ctime		4867745	1					
ANR	4867962	MemberAccess	m_stat_buf . st_ctime		4867745	1					
ANR	4867963	Identifier	m_stat_buf		4867745	0					
ANR	4867964	Identifier	st_ctime		4867745	1					
ANR	4867965	ExpressionStatement	istate -> m_size . asint = m_stat_buf . st_size	697:1:14813:14857	4867745	13	True				
ANR	4867966	AssignmentExpression	istate -> m_size . asint = m_stat_buf . st_size		4867745	0		=			
ANR	4867967	MemberAccess	istate -> m_size . asint		4867745	0					
ANR	4867968	PtrMemberAccess	istate -> m_size		4867745	0					
ANR	4867969	Identifier	istate		4867745	0					
ANR	4867970	Identifier	m_size		4867745	1					
ANR	4867971	Identifier	asint		4867745	1					
ANR	4867972	MemberAccess	m_stat_buf . st_size		4867745	1					
ANR	4867973	Identifier	m_stat_buf		4867745	0					
ANR	4867974	Identifier	st_size		4867745	1					
ANR	4867975	ExpressionStatement	istate -> m_offset . asint = m_offset	699:1:14861:14895	4867745	14	True				
ANR	4867976	AssignmentExpression	istate -> m_offset . asint = m_offset		4867745	0		=			
ANR	4867977	MemberAccess	istate -> m_offset . asint		4867745	0					
ANR	4867978	PtrMemberAccess	istate -> m_offset		4867745	0					
ANR	4867979	Identifier	istate		4867745	0					
ANR	4867980	Identifier	m_offset		4867745	1					
ANR	4867981	Identifier	asint		4867745	1					
ANR	4867982	Identifier	m_offset		4867745	1					
ANR	4867983	ExpressionStatement	istate -> m_event_num . asint = m_event_num	700:1:14898:14937	4867745	15	True				
ANR	4867984	AssignmentExpression	istate -> m_event_num . asint = m_event_num		4867745	0		=			
ANR	4867985	MemberAccess	istate -> m_event_num . asint		4867745	0					
ANR	4867986	PtrMemberAccess	istate -> m_event_num		4867745	0					
ANR	4867987	Identifier	istate		4867745	0					
ANR	4867988	Identifier	m_event_num		4867745	1					
ANR	4867989	Identifier	asint		4867745	1					
ANR	4867990	Identifier	m_event_num		4867745	1					
ANR	4867991	ExpressionStatement	istate -> m_log_position . asint = m_log_position	702:1:14941:14986	4867745	16	True				
ANR	4867992	AssignmentExpression	istate -> m_log_position . asint = m_log_position		4867745	0		=			
ANR	4867993	MemberAccess	istate -> m_log_position . asint		4867745	0					
ANR	4867994	PtrMemberAccess	istate -> m_log_position		4867745	0					
ANR	4867995	Identifier	istate		4867745	0					
ANR	4867996	Identifier	m_log_position		4867745	1					
ANR	4867997	Identifier	asint		4867745	1					
ANR	4867998	Identifier	m_log_position		4867745	1					
ANR	4867999	ExpressionStatement	istate -> m_log_record . asint = m_log_record	703:1:14989:15032	4867745	17	True				
ANR	4868000	AssignmentExpression	istate -> m_log_record . asint = m_log_record		4867745	0		=			
ANR	4868001	MemberAccess	istate -> m_log_record . asint		4867745	0					
ANR	4868002	PtrMemberAccess	istate -> m_log_record		4867745	0					
ANR	4868003	Identifier	istate		4867745	0					
ANR	4868004	Identifier	m_log_record		4867745	1					
ANR	4868005	Identifier	asint		4867745	1					
ANR	4868006	Identifier	m_log_record		4867745	1					
ANR	4868007	ExpressionStatement	istate -> m_update_time = m_update_time	705:1:15036:15073	4867745	18	True				
ANR	4868008	AssignmentExpression	istate -> m_update_time = m_update_time		4867745	0		=			
ANR	4868009	PtrMemberAccess	istate -> m_update_time		4867745	0					
ANR	4868010	Identifier	istate		4867745	0					
ANR	4868011	Identifier	m_update_time		4867745	1					
ANR	4868012	Identifier	m_update_time		4867745	1					
ANR	4868013	ReturnStatement	return true ;	707:1:15077:15088	4867745	19	True				
ANR	4868014	Identifier	true		4867745	0					
ANR	4868015	ReturnType	bool		4867745	1					
ANR	4868016	Identifier	ReadUserLogState :: GetState		4867745	2					
ANR	4868017	ParameterList	ReadUserLog :: FileState & state		4867745	3					
ANR	4868018	Parameter	ReadUserLog :: FileState & state	650:28:13533:13561	4867745	0	True				
ANR	4868019	ParameterType	ReadUserLog :: FileState &		4867745	0					
ANR	4868020	Identifier	state		4867745	1					
ANR	4868021	CFGEntryNode	ENTRY		4867745		True				
ANR	4868022	CFGExitNode	EXIT		4867745		True				
ANR	4868023	Symbol	istate -> m_offset		4867745						
ANR	4868024	Symbol	istate -> m_log_record		4867745						
ANR	4868025	Symbol	m_event_num		4867745						
ANR	4868026	Symbol	* istate		4867745						
ANR	4868027	Symbol	strlen		4867745						
ANR	4868028	Symbol	istate -> m_event_num . asint		4867745						
ANR	4868029	Symbol	m_stat_buf . st_ctime		4867745						
ANR	4868030	Symbol	istate -> m_log_record . asint		4867745						
ANR	4868031	Symbol	m_max_rotations		4867745						
ANR	4868032	Symbol	state		4867745						
ANR	4868033	Symbol	strcmp		4867745						
ANR	4868034	Symbol	m_offset		4867745						
ANR	4868035	Symbol	m_stat_buf		4867745						
ANR	4868036	Symbol	istate -> m_signature		4867745						
ANR	4868037	Symbol	FileStateSignature		4867745						
ANR	4868038	Symbol	istate -> m_rotation		4867745						
ANR	4868039	Symbol	m_stat_buf . st_size		4867745						
ANR	4868040	Symbol	istate -> m_uniq_id		4867745						
ANR	4868041	Symbol	istate -> m_size		4867745						
ANR	4868042	Symbol	istate -> m_event_num		4867745						
ANR	4868043	Symbol	true		4867745						
ANR	4868044	Symbol	m_update_time		4867745						
ANR	4868045	Symbol	m_stat_buf . st_ino		4867745						
ANR	4868046	Symbol	* * istate		4867745						
ANR	4868047	Symbol	istate -> m_log_position		4867745						
ANR	4868048	Symbol	istate -> m_size . asint		4867745						
ANR	4868049	Symbol	istate -> m_max_rotations		4867745						
ANR	4868050	Symbol	istate -> m_log_type		4867745						
ANR	4868051	Symbol	istate -> m_version		4867745						
ANR	4868052	Symbol	m_log_record		4867745						
ANR	4868053	Symbol	FILESTATE_VERSION		4867745						
ANR	4868054	Symbol	m_sequence		4867745						
ANR	4868055	Symbol	istate -> m_update_time		4867745						
ANR	4868056	Symbol	* istate -> m_uniq_id		4867745						
ANR	4868057	Symbol	istate -> m_base_path		4867745						
ANR	4868058	Symbol	istate -> m_sequence		4867745						
ANR	4868059	Symbol	m_cur_rot		4867745						
ANR	4868060	Symbol	m_log_type		4867745						
ANR	4868061	Symbol	istate -> m_log_position . asint		4867745						
ANR	4868062	Symbol	m_uniq_id		4867745						
ANR	4868063	Symbol	m_base_path		4867745						
ANR	4868064	Symbol	istate -> m_offset . asint		4867745						
ANR	4868065	Symbol	istate -> m_ctime		4867745						
ANR	4868066	Symbol	false		4867745						
ANR	4868067	Symbol	m_base_path . Value		4867745						
ANR	4868068	Symbol	fstate		4867745						
ANR	4868069	Symbol	m_uniq_id . Value		4867745						
ANR	4868070	Symbol	istate -> m_inode		4867745						
ANR	4868071	Symbol	fstate . getRwState		4867745						
ANR	4868072	Symbol	m_log_position		4867745						
ANR	4868073	Symbol	istate		4867745						
ANR	4868074	Function	ReadUserLogState :: SetState	710:0:15093:16269							
ANR	4868075	FunctionDef	ReadUserLogState :: SetState (const ReadUserLog :: FileState & state)		4868074	0					
ANR	4868076	CompoundStatement		712:0:15164:16269	4868074	0					
ANR	4868077	IdentifierDeclStatement	const ReadUserLogFileState :: FileState * istate ;	713:1:15167:15212	4868074	0	True				
ANR	4868078	IdentifierDecl	* istate		4868074	0					
ANR	4868079	IdentifierDeclType	const ReadUserLogFileState :: FileState *		4868074	0					
ANR	4868080	Identifier	istate		4868074	1					
ANR	4868081	IfStatement	"if ( ! convertState ( state , istate ) )"		4868074	1					
ANR	4868082	Condition	"! convertState ( state , istate )"	714:6:15220:15247	4868074	0	True				
ANR	4868083	UnaryOperationExpression	"! convertState ( state , istate )"		4868074	0					
ANR	4868084	UnaryOperator	!		4868074	0					
ANR	4868085	CallExpression	"convertState ( state , istate )"		4868074	1					
ANR	4868086	Callee	convertState		4868074	0					
ANR	4868087	Identifier	convertState		4868074	0					
ANR	4868088	ArgumentList	state		4868074	1					
ANR	4868089	Argument	state		4868074	0					
ANR	4868090	Identifier	state		4868074	0					
ANR	4868091	Argument	istate		4868074	1					
ANR	4868092	Identifier	istate		4868074	0					
ANR	4868093	CompoundStatement		3:37:86:86	4868074	1					
ANR	4868094	ReturnStatement	return false ;	715:2:15255:15267	4868074	0	True				
ANR	4868095	Identifier	false		4868074	0					
ANR	4868096	IfStatement	"if ( strcmp ( istate -> m_signature , FileStateSignature ) )"		4868074	2					
ANR	4868097	Condition	"strcmp ( istate -> m_signature , FileStateSignature )"	719:6:15317:15365	4868074	0	True				
ANR	4868098	CallExpression	"strcmp ( istate -> m_signature , FileStateSignature )"		4868074	0					
ANR	4868099	Callee	strcmp		4868074	0					
ANR	4868100	Identifier	strcmp		4868074	0					
ANR	4868101	ArgumentList	istate -> m_signature		4868074	1					
ANR	4868102	Argument	istate -> m_signature		4868074	0					
ANR	4868103	PtrMemberAccess	istate -> m_signature		4868074	0					
ANR	4868104	Identifier	istate		4868074	0					
ANR	4868105	Identifier	m_signature		4868074	1					
ANR	4868106	Argument	FileStateSignature		4868074	1					
ANR	4868107	Identifier	FileStateSignature		4868074	0					
ANR	4868108	CompoundStatement		8:58:204:204	4868074	1					
ANR	4868109	ExpressionStatement	m_init_error = true	720:2:15373:15392	4868074	0	True				
ANR	4868110	AssignmentExpression	m_init_error = true		4868074	0		=			
ANR	4868111	Identifier	m_init_error		4868074	0					
ANR	4868112	Identifier	true		4868074	1					
ANR	4868113	ReturnStatement	return false ;	721:2:15396:15408	4868074	1	True				
ANR	4868114	Identifier	false		4868074	0					
ANR	4868115	IfStatement	if ( istate -> m_version != FILESTATE_VERSION )		4868074	3					
ANR	4868116	Condition	istate -> m_version != FILESTATE_VERSION	723:6:15419:15456	4868074	0	True				
ANR	4868117	EqualityExpression	istate -> m_version != FILESTATE_VERSION		4868074	0		!=			
ANR	4868118	PtrMemberAccess	istate -> m_version		4868074	0					
ANR	4868119	Identifier	istate		4868074	0					
ANR	4868120	Identifier	m_version		4868074	1					
ANR	4868121	Identifier	FILESTATE_VERSION		4868074	1					
ANR	4868122	CompoundStatement		12:47:295:295	4868074	1					
ANR	4868123	ExpressionStatement	m_init_error = true	724:2:15464:15483	4868074	0	True				
ANR	4868124	AssignmentExpression	m_init_error = true		4868074	0		=			
ANR	4868125	Identifier	m_init_error		4868074	0					
ANR	4868126	Identifier	true		4868074	1					
ANR	4868127	ReturnStatement	return false ;	725:2:15487:15499	4868074	1	True				
ANR	4868128	Identifier	false		4868074	0					
ANR	4868129	ExpressionStatement	m_base_path = istate -> m_base_path	728:1:15506:15539	4868074	4	True				
ANR	4868130	AssignmentExpression	m_base_path = istate -> m_base_path		4868074	0		=			
ANR	4868131	Identifier	m_base_path		4868074	0					
ANR	4868132	PtrMemberAccess	istate -> m_base_path		4868074	1					
ANR	4868133	Identifier	istate		4868074	0					
ANR	4868134	Identifier	m_base_path		4868074	1					
ANR	4868135	ExpressionStatement	m_max_rotations = istate -> m_max_rotations	731:1:15571:15612	4868074	5	True				
ANR	4868136	AssignmentExpression	m_max_rotations = istate -> m_max_rotations		4868074	0		=			
ANR	4868137	Identifier	m_max_rotations		4868074	0					
ANR	4868138	PtrMemberAccess	istate -> m_max_rotations		4868074	1					
ANR	4868139	Identifier	istate		4868074	0					
ANR	4868140	Identifier	m_max_rotations		4868074	1					
ANR	4868141	ExpressionStatement	"Rotation ( istate -> m_rotation , false , true )"	732:1:15615:15658	4868074	6	True				
ANR	4868142	CallExpression	"Rotation ( istate -> m_rotation , false , true )"		4868074	0					
ANR	4868143	Callee	Rotation		4868074	0					
ANR	4868144	Identifier	Rotation		4868074	0					
ANR	4868145	ArgumentList	istate -> m_rotation		4868074	1					
ANR	4868146	Argument	istate -> m_rotation		4868074	0					
ANR	4868147	PtrMemberAccess	istate -> m_rotation		4868074	0					
ANR	4868148	Identifier	istate		4868074	0					
ANR	4868149	Identifier	m_rotation		4868074	1					
ANR	4868150	Argument	false		4868074	1					
ANR	4868151	Identifier	false		4868074	0					
ANR	4868152	Argument	true		4868074	2					
ANR	4868153	Identifier	true		4868074	0					
ANR	4868154	ExpressionStatement	m_log_type = istate -> m_log_type	734:1:15662:15693	4868074	7	True				
ANR	4868155	AssignmentExpression	m_log_type = istate -> m_log_type		4868074	0		=			
ANR	4868156	Identifier	m_log_type		4868074	0					
ANR	4868157	PtrMemberAccess	istate -> m_log_type		4868074	1					
ANR	4868158	Identifier	istate		4868074	0					
ANR	4868159	Identifier	m_log_type		4868074	1					
ANR	4868160	ExpressionStatement	m_uniq_id = istate -> m_uniq_id	735:1:15696:15726	4868074	8	True				
ANR	4868161	AssignmentExpression	m_uniq_id = istate -> m_uniq_id		4868074	0		=			
ANR	4868162	Identifier	m_uniq_id		4868074	0					
ANR	4868163	PtrMemberAccess	istate -> m_uniq_id		4868074	1					
ANR	4868164	Identifier	istate		4868074	0					
ANR	4868165	Identifier	m_uniq_id		4868074	1					
ANR	4868166	ExpressionStatement	m_sequence = istate -> m_sequence	736:1:15729:15760	4868074	9	True				
ANR	4868167	AssignmentExpression	m_sequence = istate -> m_sequence		4868074	0		=			
ANR	4868168	Identifier	m_sequence		4868074	0					
ANR	4868169	PtrMemberAccess	istate -> m_sequence		4868074	1					
ANR	4868170	Identifier	istate		4868074	0					
ANR	4868171	Identifier	m_sequence		4868074	1					
ANR	4868172	ExpressionStatement	m_stat_buf . st_ino = istate -> m_inode	738:1:15764:15801	4868074	10	True				
ANR	4868173	AssignmentExpression	m_stat_buf . st_ino = istate -> m_inode		4868074	0		=			
ANR	4868174	MemberAccess	m_stat_buf . st_ino		4868074	0					
ANR	4868175	Identifier	m_stat_buf		4868074	0					
ANR	4868176	Identifier	st_ino		4868074	1					
ANR	4868177	PtrMemberAccess	istate -> m_inode		4868074	1					
ANR	4868178	Identifier	istate		4868074	0					
ANR	4868179	Identifier	m_inode		4868074	1					
ANR	4868180	ExpressionStatement	m_stat_buf . st_ctime = istate -> m_ctime	739:1:15804:15841	4868074	11	True				
ANR	4868181	AssignmentExpression	m_stat_buf . st_ctime = istate -> m_ctime		4868074	0		=			
ANR	4868182	MemberAccess	m_stat_buf . st_ctime		4868074	0					
ANR	4868183	Identifier	m_stat_buf		4868074	0					
ANR	4868184	Identifier	st_ctime		4868074	1					
ANR	4868185	PtrMemberAccess	istate -> m_ctime		4868074	1					
ANR	4868186	Identifier	istate		4868074	0					
ANR	4868187	Identifier	m_ctime		4868074	1					
ANR	4868188	ExpressionStatement	m_stat_buf . st_size = istate -> m_size . asint	740:1:15844:15886	4868074	12	True				
ANR	4868189	AssignmentExpression	m_stat_buf . st_size = istate -> m_size . asint		4868074	0		=			
ANR	4868190	MemberAccess	m_stat_buf . st_size		4868074	0					
ANR	4868191	Identifier	m_stat_buf		4868074	0					
ANR	4868192	Identifier	st_size		4868074	1					
ANR	4868193	MemberAccess	istate -> m_size . asint		4868074	1					
ANR	4868194	PtrMemberAccess	istate -> m_size		4868074	0					
ANR	4868195	Identifier	istate		4868074	0					
ANR	4868196	Identifier	m_size		4868074	1					
ANR	4868197	Identifier	asint		4868074	1					
ANR	4868198	ExpressionStatement	m_stat_valid = true	741:1:15889:15908	4868074	13	True				
ANR	4868199	AssignmentExpression	m_stat_valid = true		4868074	0		=			
ANR	4868200	Identifier	m_stat_valid		4868074	0					
ANR	4868201	Identifier	true		4868074	1					
ANR	4868202	ExpressionStatement	m_offset = istate -> m_offset . asint	743:1:15912:15945	4868074	14	True				
ANR	4868203	AssignmentExpression	m_offset = istate -> m_offset . asint		4868074	0		=			
ANR	4868204	Identifier	m_offset		4868074	0					
ANR	4868205	MemberAccess	istate -> m_offset . asint		4868074	1					
ANR	4868206	PtrMemberAccess	istate -> m_offset		4868074	0					
ANR	4868207	Identifier	istate		4868074	0					
ANR	4868208	Identifier	m_offset		4868074	1					
ANR	4868209	Identifier	asint		4868074	1					
ANR	4868210	ExpressionStatement	m_event_num = istate -> m_event_num . asint	744:1:15948:15987	4868074	15	True				
ANR	4868211	AssignmentExpression	m_event_num = istate -> m_event_num . asint		4868074	0		=			
ANR	4868212	Identifier	m_event_num		4868074	0					
ANR	4868213	MemberAccess	istate -> m_event_num . asint		4868074	1					
ANR	4868214	PtrMemberAccess	istate -> m_event_num		4868074	0					
ANR	4868215	Identifier	istate		4868074	0					
ANR	4868216	Identifier	m_event_num		4868074	1					
ANR	4868217	Identifier	asint		4868074	1					
ANR	4868218	ExpressionStatement	m_log_position = istate -> m_log_position . asint	746:1:15991:16036	4868074	16	True				
ANR	4868219	AssignmentExpression	m_log_position = istate -> m_log_position . asint		4868074	0		=			
ANR	4868220	Identifier	m_log_position		4868074	0					
ANR	4868221	MemberAccess	istate -> m_log_position . asint		4868074	1					
ANR	4868222	PtrMemberAccess	istate -> m_log_position		4868074	0					
ANR	4868223	Identifier	istate		4868074	0					
ANR	4868224	Identifier	m_log_position		4868074	1					
ANR	4868225	Identifier	asint		4868074	1					
ANR	4868226	ExpressionStatement	m_log_record = istate -> m_log_record . asint	747:1:16039:16082	4868074	17	True				
ANR	4868227	AssignmentExpression	m_log_record = istate -> m_log_record . asint		4868074	0		=			
ANR	4868228	Identifier	m_log_record		4868074	0					
ANR	4868229	MemberAccess	istate -> m_log_record . asint		4868074	1					
ANR	4868230	PtrMemberAccess	istate -> m_log_record		4868074	0					
ANR	4868231	Identifier	istate		4868074	0					
ANR	4868232	Identifier	m_log_record		4868074	1					
ANR	4868233	Identifier	asint		4868074	1					
ANR	4868234	ExpressionStatement	m_update_time = istate -> m_update_time	749:1:16086:16124	4868074	18	True				
ANR	4868235	AssignmentExpression	m_update_time = istate -> m_update_time		4868074	0		=			
ANR	4868236	Identifier	m_update_time		4868074	0					
ANR	4868237	PtrMemberAccess	istate -> m_update_time		4868074	1					
ANR	4868238	Identifier	istate		4868074	0					
ANR	4868239	Identifier	m_update_time		4868074	1					
ANR	4868240	ExpressionStatement	m_initialized = true	751:1:16128:16149	4868074	19	True				
ANR	4868241	AssignmentExpression	m_initialized = true		4868074	0		=			
ANR	4868242	Identifier	m_initialized		4868074	0					
ANR	4868243	Identifier	true		4868074	1					
ANR	4868244	IdentifierDeclStatement	MyString str ;	753:1:16153:16165	4868074	20	True				
ANR	4868245	IdentifierDecl	str		4868074	0					
ANR	4868246	IdentifierDeclType	MyString		4868074	0					
ANR	4868247	Identifier	str		4868074	1					
ANR	4868248	ExpressionStatement	"GetStateString ( str , ""Restored reader state"" )"	754:1:16168:16214	4868074	21	True				
ANR	4868249	CallExpression	"GetStateString ( str , ""Restored reader state"" )"		4868074	0					
ANR	4868250	Callee	GetStateString		4868074	0					
ANR	4868251	Identifier	GetStateString		4868074	0					
ANR	4868252	ArgumentList	str		4868074	1					
ANR	4868253	Argument	str		4868074	0					
ANR	4868254	Identifier	str		4868074	0					
ANR	4868255	Argument	"""Restored reader state"""		4868074	1					
ANR	4868256	PrimaryExpression	"""Restored reader state"""		4868074	0					
ANR	4868257	ExpressionStatement	"dprintf ( D_FULLDEBUG , str . Value ( ) )"	755:1:16217:16252	4868074	22	True				
ANR	4868258	CallExpression	"dprintf ( D_FULLDEBUG , str . Value ( ) )"		4868074	0					
ANR	4868259	Callee	dprintf		4868074	0					
ANR	4868260	Identifier	dprintf		4868074	0					
ANR	4868261	ArgumentList	D_FULLDEBUG		4868074	1					
ANR	4868262	Argument	D_FULLDEBUG		4868074	0					
ANR	4868263	Identifier	D_FULLDEBUG		4868074	0					
ANR	4868264	Argument	str . Value ( )		4868074	1					
ANR	4868265	CallExpression	str . Value ( )		4868074	0					
ANR	4868266	Callee	str . Value		4868074	0					
ANR	4868267	MemberAccess	str . Value		4868074	0					
ANR	4868268	Identifier	str		4868074	0					
ANR	4868269	Identifier	Value		4868074	1					
ANR	4868270	ArgumentList			4868074	1					
ANR	4868271	ReturnStatement	return true ;	757:1:16256:16267	4868074	23	True				
ANR	4868272	Identifier	true		4868074	0					
ANR	4868273	ReturnType	bool		4868074	1					
ANR	4868274	Identifier	ReadUserLogState :: SetState		4868074	2					
ANR	4868275	ParameterList	const ReadUserLog :: FileState & state		4868074	3					
ANR	4868276	Parameter	const ReadUserLog :: FileState & state	711:28:15126:15160	4868074	0	True				
ANR	4868277	ParameterType	const ReadUserLog :: FileState &		4868074	0					
ANR	4868278	Identifier	state		4868074	1					
ANR	4868279	CFGEntryNode	ENTRY		4868074		True				
ANR	4868280	CFGExitNode	EXIT		4868074		True				
ANR	4868281	Symbol	istate -> m_offset		4868074						
ANR	4868282	Symbol	istate -> m_log_record		4868074						
ANR	4868283	Symbol	m_event_num		4868074						
ANR	4868284	Symbol	m_stat_valid		4868074						
ANR	4868285	Symbol	* istate		4868074						
ANR	4868286	Symbol	convertState		4868074						
ANR	4868287	Symbol	istate -> m_event_num . asint		4868074						
ANR	4868288	Symbol	m_stat_buf . st_ctime		4868074						
ANR	4868289	Symbol	istate -> m_log_record . asint		4868074						
ANR	4868290	Symbol	m_max_rotations		4868074						
ANR	4868291	Symbol	state		4868074						
ANR	4868292	Symbol	strcmp		4868074						
ANR	4868293	Symbol	m_offset		4868074						
ANR	4868294	Symbol	m_stat_buf		4868074						
ANR	4868295	Symbol	istate -> m_signature		4868074						
ANR	4868296	Symbol	FileStateSignature		4868074						
ANR	4868297	Symbol	istate -> m_rotation		4868074						
ANR	4868298	Symbol	D_FULLDEBUG		4868074						
ANR	4868299	Symbol	m_stat_buf . st_size		4868074						
ANR	4868300	Symbol	istate -> m_uniq_id		4868074						
ANR	4868301	Symbol	str		4868074						
ANR	4868302	Symbol	m_init_error		4868074						
ANR	4868303	Symbol	istate -> m_size		4868074						
ANR	4868304	Symbol	istate -> m_event_num		4868074						
ANR	4868305	Symbol	true		4868074						
ANR	4868306	Symbol	m_update_time		4868074						
ANR	4868307	Symbol	m_stat_buf . st_ino		4868074						
ANR	4868308	Symbol	istate -> m_log_position		4868074						
ANR	4868309	Symbol	istate -> m_size . asint		4868074						
ANR	4868310	Symbol	m_initialized		4868074						
ANR	4868311	Symbol	istate -> m_max_rotations		4868074						
ANR	4868312	Symbol	istate -> m_log_type		4868074						
ANR	4868313	Symbol	istate -> m_version		4868074						
ANR	4868314	Symbol	m_log_record		4868074						
ANR	4868315	Symbol	FILESTATE_VERSION		4868074						
ANR	4868316	Symbol	m_sequence		4868074						
ANR	4868317	Symbol	istate -> m_update_time		4868074						
ANR	4868318	Symbol	istate -> m_base_path		4868074						
ANR	4868319	Symbol	istate -> m_sequence		4868074						
ANR	4868320	Symbol	m_log_type		4868074						
ANR	4868321	Symbol	istate -> m_log_position . asint		4868074						
ANR	4868322	Symbol	m_uniq_id		4868074						
ANR	4868323	Symbol	m_base_path		4868074						
ANR	4868324	Symbol	istate -> m_offset . asint		4868074						
ANR	4868325	Symbol	istate -> m_ctime		4868074						
ANR	4868326	Symbol	false		4868074						
ANR	4868327	Symbol	str . Value		4868074						
ANR	4868328	Symbol	istate -> m_inode		4868074						
ANR	4868329	Symbol	m_log_position		4868074						
ANR	4868330	Symbol	istate		4868074						
ANR	4868331	Function	ReadUserLogState :: GetStateString	760:0:16272:16875							
ANR	4868332	FunctionDef	"ReadUserLogState :: GetStateString (MyString & str , const char * label)"		4868331	0					
ANR	4868333	CompoundStatement		762:0:16352:16875	4868331	0					
ANR	4868334	ExpressionStatement	"str = """""	763:1:16355:16363	4868331	0	True				
ANR	4868335	AssignmentExpression	"str = """""		4868331	0		=			
ANR	4868336	Identifier	str		4868331	0					
ANR	4868337	PrimaryExpression	""""""		4868331	1					
ANR	4868338	IfStatement	if ( NULL != label )		4868331	1					
ANR	4868339	Condition	NULL != label	764:6:16371:16383	4868331	0	True				
ANR	4868340	EqualityExpression	NULL != label		4868331	0		!=			
ANR	4868341	Identifier	NULL		4868331	0					
ANR	4868342	Identifier	label		4868331	1					
ANR	4868343	CompoundStatement		3:22:34:34	4868331	1					
ANR	4868344	ExpressionStatement	"str . sprintf ( ""%s:\\n"" , label )"	765:2:16391:16420	4868331	0	True				
ANR	4868345	CallExpression	"str . sprintf ( ""%s:\\n"" , label )"		4868331	0					
ANR	4868346	Callee	str . sprintf		4868331	0					
ANR	4868347	MemberAccess	str . sprintf		4868331	0					
ANR	4868348	Identifier	str		4868331	0					
ANR	4868349	Identifier	sprintf		4868331	1					
ANR	4868350	ArgumentList	"""%s:\\n"""		4868331	1					
ANR	4868351	Argument	"""%s:\\n"""		4868331	0					
ANR	4868352	PrimaryExpression	"""%s:\\n"""		4868331	0					
ANR	4868353	Argument	label		4868331	1					
ANR	4868354	Identifier	label		4868331	0					
ANR	4868355	Statement	str	767:1:16426:16428	4868331	2	True				
ANR	4868356	Statement	.	767:4:16429:16429	4868331	3	True				
ANR	4868357	Statement	sprintf_cat	767:5:16430:16440	4868331	4	True				
ANR	4868358	Statement	(	767:17:16442:16442	4868331	5	True				
ANR	4868359	Statement	"""  BasePath = %s\\n"""	768:2:16446:16464	4868331	6	True				
ANR	4868360	Statement	"""  CurPath = %s\\n"""	769:2:16468:16485	4868331	7	True				
ANR	4868361	Statement	"""  UniqId = %s, seq = %d\\n"""	770:2:16489:16515	4868331	8	True				
ANR	4868362	Statement	"""  rotation = %d; max = %d; offset = %ld; event = %ld; type = %d\\n"""	771:2:16519:16585	4868331	9	True				
ANR	4868363	Statement	"""  inode = %u; ctime = %d; size = %ld\\n"""	772:2:16589:16628	4868331	10	True				
ANR	4868364	Statement	","	772:42:16629:16629	4868331	11	True				
ANR	4868365	Statement	m_base_path	773:2:16633:16643	4868331	12	True				
ANR	4868366	Statement	.	773:13:16644:16644	4868331	13	True				
ANR	4868367	Statement	Value	773:14:16645:16649	4868331	14	True				
ANR	4868368	Statement	(	773:19:16650:16650	4868331	15	True				
ANR	4868369	Statement	)	773:20:16651:16651	4868331	16	True				
ANR	4868370	Statement	","	773:21:16652:16652	4868331	17	True				
ANR	4868371	Statement	m_cur_path	773:23:16654:16663	4868331	18	True				
ANR	4868372	Statement	.	773:33:16664:16664	4868331	19	True				
ANR	4868373	Statement	Value	773:34:16665:16669	4868331	20	True				
ANR	4868374	Statement	(	773:39:16670:16670	4868331	21	True				
ANR	4868375	Statement	)	773:40:16671:16671	4868331	22	True				
ANR	4868376	Statement	","	773:41:16672:16672	4868331	23	True				
ANR	4868377	Statement	m_uniq_id	774:2:16676:16684	4868331	24	True				
ANR	4868378	Statement	.	774:11:16685:16685	4868331	25	True				
ANR	4868379	Statement	Value	774:12:16686:16690	4868331	26	True				
ANR	4868380	Statement	(	774:17:16691:16691	4868331	27	True				
ANR	4868381	Statement	)	774:18:16692:16692	4868331	28	True				
ANR	4868382	Statement	","	774:19:16693:16693	4868331	29	True				
ANR	4868383	Statement	m_sequence	774:21:16695:16704	4868331	30	True				
ANR	4868384	Statement	","	774:31:16705:16705	4868331	31	True				
ANR	4868385	Statement	m_cur_rot	775:2:16709:16717	4868331	32	True				
ANR	4868386	Statement	","	775:11:16718:16718	4868331	33	True				
ANR	4868387	Statement	m_max_rotations	775:13:16720:16734	4868331	34	True				
ANR	4868388	Statement	","	775:28:16735:16735	4868331	35	True				
ANR	4868389	Statement	(	775:30:16737:16737	4868331	36	True				
ANR	4868390	Statement	long	775:31:16738:16741	4868331	37	True				
ANR	4868391	Statement	)	775:35:16742:16742	4868331	38	True				
ANR	4868392	Statement	m_offset	775:37:16744:16751	4868331	39	True				
ANR	4868393	Statement	","	775:45:16752:16752	4868331	40	True				
ANR	4868394	Statement	(	776:2:16756:16756	4868331	41	True				
ANR	4868395	Statement	long	776:3:16757:16760	4868331	42	True				
ANR	4868396	Statement	)	776:7:16761:16761	4868331	43	True				
ANR	4868397	Statement	m_event_num	776:9:16763:16773	4868331	44	True				
ANR	4868398	Statement	","	776:20:16774:16774	4868331	45	True				
ANR	4868399	Statement	m_log_type	776:22:16776:16785	4868331	46	True				
ANR	4868400	Statement	","	776:32:16786:16786	4868331	47	True				
ANR	4868401	Statement	(	777:2:16790:16790	4868331	48	True				
ANR	4868402	Statement	unsigned	777:3:16791:16798	4868331	49	True				
ANR	4868403	Statement	)	777:11:16799:16799	4868331	50	True				
ANR	4868404	Statement	m_stat_buf	777:12:16800:16809	4868331	51	True				
ANR	4868405	Statement	.	777:22:16810:16810	4868331	52	True				
ANR	4868406	Statement	st_ino	777:23:16811:16816	4868331	53	True				
ANR	4868407	Statement	","	777:29:16817:16817	4868331	54	True				
ANR	4868408	Statement	(	777:31:16819:16819	4868331	55	True				
ANR	4868409	Statement	int	777:32:16820:16822	4868331	56	True				
ANR	4868410	Statement	)	777:35:16823:16823	4868331	57	True				
ANR	4868411	Statement	m_stat_buf	777:36:16824:16833	4868331	58	True				
ANR	4868412	Statement	.	777:46:16834:16834	4868331	59	True				
ANR	4868413	Statement	st_ctime	777:47:16835:16842	4868331	60	True				
ANR	4868414	Statement	","	777:55:16843:16843	4868331	61	True				
ANR	4868415	Statement	(	778:2:16847:16847	4868331	62	True				
ANR	4868416	Statement	long	778:3:16848:16851	4868331	63	True				
ANR	4868417	Statement	)	778:7:16852:16852	4868331	64	True				
ANR	4868418	Statement	m_stat_buf	778:8:16853:16862	4868331	65	True				
ANR	4868419	Statement	.	778:18:16863:16863	4868331	66	True				
ANR	4868420	Statement	st_size	778:19:16864:16870	4868331	67	True				
ANR	4868421	Statement	)	778:27:16872:16872	4868331	68	True				
ANR	4868422	ExpressionStatement		778:28:16873:16873	4868331	69	True				
ANR	4868423	ReturnType	void		4868331	1					
ANR	4868424	Identifier	ReadUserLogState :: GetStateString		4868331	2					
ANR	4868425	ParameterList	"MyString & str , const char * label"		4868331	3					
ANR	4868426	Parameter	MyString & str	761:34:16311:16323	4868331	0	True				
ANR	4868427	ParameterType	MyString &		4868331	0					
ANR	4868428	Identifier	str		4868331	1					
ANR	4868429	Parameter	const char * label	761:49:16326:16342	4868331	1	True				
ANR	4868430	ParameterType	const char *		4868331	0					
ANR	4868431	Identifier	label		4868331	1					
ANR	4868432	CFGEntryNode	ENTRY		4868331		True				
ANR	4868433	CFGExitNode	EXIT		4868331		True				
ANR	4868434	Symbol	str		4868331						
ANR	4868435	Symbol	NULL		4868331						
ANR	4868436	Symbol	label		4868331						
ANR	4868437	Function	ReadUserLogState :: GetStateString	781:0:16878:17976							
ANR	4868438	FunctionDef	"ReadUserLogState :: GetStateString (const ReadUserLog :: FileState & state , MyString & str , const char * label)"		4868437	0					
ANR	4868439	CompoundStatement		787:0:17010:17976	4868437	0					
ANR	4868440	IdentifierDeclStatement	const ReadUserLogFileState :: FileState * istate ;	788:1:17013:17058	4868437	0	True				
ANR	4868441	IdentifierDecl	* istate		4868437	0					
ANR	4868442	IdentifierDeclType	const ReadUserLogFileState :: FileState *		4868437	0					
ANR	4868443	Identifier	istate		4868437	1					
ANR	4868444	IfStatement	"if ( ( ! convertState ( state , istate ) ) || ( ! istate -> m_version ) )"		4868437	1					
ANR	4868445	Condition	"( ! convertState ( state , istate ) ) || ( ! istate -> m_version )"	789:6:17066:17123	4868437	0	True				
ANR	4868446	OrExpression	"( ! convertState ( state , istate ) ) || ( ! istate -> m_version )"		4868437	0		||			
ANR	4868447	UnaryOperationExpression	"! convertState ( state , istate )"		4868437	0					
ANR	4868448	UnaryOperator	!		4868437	0					
ANR	4868449	CallExpression	"convertState ( state , istate )"		4868437	1					
ANR	4868450	Callee	convertState		4868437	0					
ANR	4868451	Identifier	convertState		4868437	0					
ANR	4868452	ArgumentList	state		4868437	1					
ANR	4868453	Argument	state		4868437	0					
ANR	4868454	Identifier	state		4868437	0					
ANR	4868455	Argument	istate		4868437	1					
ANR	4868456	Identifier	istate		4868437	0					
ANR	4868457	UnaryOperationExpression	! istate -> m_version		4868437	1					
ANR	4868458	UnaryOperator	!		4868437	0					
ANR	4868459	PtrMemberAccess	istate -> m_version		4868437	1					
ANR	4868460	Identifier	istate		4868437	0					
ANR	4868461	Identifier	m_version		4868437	1					
ANR	4868462	CompoundStatement		3:67:116:116	4868437	1					
ANR	4868463	IfStatement	if ( label )		4868437	0					
ANR	4868464	Condition	label	790:7:17136:17140	4868437	0	True				
ANR	4868465	Identifier	label		4868437	0					
ANR	4868466	CompoundStatement		4:15:133:133	4868437	1					
ANR	4868467	ExpressionStatement	"str . sprintf ( ""%s: no state"" , label )"	791:3:17149:17185	4868437	0	True				
ANR	4868468	CallExpression	"str . sprintf ( ""%s: no state"" , label )"		4868437	0					
ANR	4868469	Callee	str . sprintf		4868437	0					
ANR	4868470	MemberAccess	str . sprintf		4868437	0					
ANR	4868471	Identifier	str		4868437	0					
ANR	4868472	Identifier	sprintf		4868437	1					
ANR	4868473	ArgumentList	"""%s: no state"""		4868437	1					
ANR	4868474	Argument	"""%s: no state"""		4868437	0					
ANR	4868475	PrimaryExpression	"""%s: no state"""		4868437	0					
ANR	4868476	Argument	label		4868437	1					
ANR	4868477	Identifier	label		4868437	0					
ANR	4868478	ElseStatement	else		4868437	0					
ANR	4868479	CompoundStatement		7:7:187:187	4868437	0					
ANR	4868480	ExpressionStatement	"str = ""no state\\n"""	794:3:17203:17221	4868437	0	True				
ANR	4868481	AssignmentExpression	"str = ""no state\\n"""		4868437	0		=			
ANR	4868482	Identifier	str		4868437	0					
ANR	4868483	PrimaryExpression	"""no state\\n"""		4868437	1					
ANR	4868484	ReturnStatement	return ;	796:2:17229:17235	4868437	1	True				
ANR	4868485	ExpressionStatement	"str = """""	799:1:17242:17250	4868437	2	True				
ANR	4868486	AssignmentExpression	"str = """""		4868437	0		=			
ANR	4868487	Identifier	str		4868437	0					
ANR	4868488	PrimaryExpression	""""""		4868437	1					
ANR	4868489	IfStatement	if ( NULL != label )		4868437	3					
ANR	4868490	Condition	NULL != label	800:6:17258:17270	4868437	0	True				
ANR	4868491	EqualityExpression	NULL != label		4868437	0		!=			
ANR	4868492	Identifier	NULL		4868437	0					
ANR	4868493	Identifier	label		4868437	1					
ANR	4868494	CompoundStatement		14:22:263:263	4868437	1					
ANR	4868495	ExpressionStatement	"str . sprintf ( ""%s:\\n"" , label )"	801:2:17278:17307	4868437	0	True				
ANR	4868496	CallExpression	"str . sprintf ( ""%s:\\n"" , label )"		4868437	0					
ANR	4868497	Callee	str . sprintf		4868437	0					
ANR	4868498	MemberAccess	str . sprintf		4868437	0					
ANR	4868499	Identifier	str		4868437	0					
ANR	4868500	Identifier	sprintf		4868437	1					
ANR	4868501	ArgumentList	"""%s:\\n"""		4868437	1					
ANR	4868502	Argument	"""%s:\\n"""		4868437	0					
ANR	4868503	PrimaryExpression	"""%s:\\n"""		4868437	0					
ANR	4868504	Argument	label		4868437	1					
ANR	4868505	Identifier	label		4868437	0					
ANR	4868506	Statement	str	803:1:17313:17315	4868437	4	True				
ANR	4868507	Statement	.	803:4:17316:17316	4868437	5	True				
ANR	4868508	Statement	sprintf_cat	803:5:17317:17327	4868437	6	True				
ANR	4868509	Statement	(	803:17:17329:17329	4868437	7	True				
ANR	4868510	Statement	"""  signature = '%s'; version = %d; update = %ld\\n"""	804:2:17333:17382	4868437	8	True				
ANR	4868511	Statement	"""  base path = '%s'\\n"""	805:2:17386:17407	4868437	9	True				
ANR	4868512	Statement	"""  cur path = '%s'\\n"""	806:2:17411:17431	4868437	10	True				
ANR	4868513	Statement	"""  UniqId = %s, seq = %d\\n"""	807:2:17435:17461	4868437	11	True				
ANR	4868514	Statement	"""  rotation = %d; max = %d; offset = """	808:2:17465:17502	4868437	12	True				
ANR	4868515	Statement	FILESIZE_T_FORMAT	808:40:17503:17519	4868437	13	True				
ANR	4868516	Statement	""";"""	808:57:17520:17522	4868437	14	True				
ANR	4868517	Statement	""" event num = """	809:2:17526:17540	4868437	15	True				
ANR	4868518	Statement	FILESIZE_T_FORMAT	809:17:17541:17557	4868437	16	True				
ANR	4868519	Statement	"""; type = %d\\n"""	809:34:17558:17572	4868437	17	True				
ANR	4868520	Statement	"""  inode = %u; ctime = %ld; size = """	810:2:17576:17611	4868437	18	True				
ANR	4868521	Statement	FILESIZE_T_FORMAT	810:38:17612:17628	4868437	19	True				
ANR	4868522	Statement	"""\\n"""	810:55:17629:17632	4868437	20	True				
ANR	4868523	Statement	","	810:59:17633:17633	4868437	21	True				
ANR	4868524	Statement	istate	811:2:17637:17642	4868437	22	True				
ANR	4868525	Statement	->	811:8:17643:17644	4868437	23	True				
ANR	4868526	Statement	m_signature	811:10:17645:17655	4868437	24	True				
ANR	4868527	Statement	","	811:21:17656:17656	4868437	25	True				
ANR	4868528	Statement	istate	811:23:17658:17663	4868437	26	True				
ANR	4868529	Statement	->	811:29:17664:17665	4868437	27	True				
ANR	4868530	Statement	m_version	811:31:17666:17674	4868437	28	True				
ANR	4868531	Statement	","	811:40:17675:17675	4868437	29	True				
ANR	4868532	Statement	istate	811:42:17677:17682	4868437	30	True				
ANR	4868533	Statement	->	811:48:17683:17684	4868437	31	True				
ANR	4868534	Statement	m_update_time	811:50:17685:17697	4868437	32	True				
ANR	4868535	Statement	","	811:63:17698:17698	4868437	33	True				
ANR	4868536	Statement	istate	812:2:17702:17707	4868437	34	True				
ANR	4868537	Statement	->	812:8:17708:17709	4868437	35	True				
ANR	4868538	Statement	m_base_path	812:10:17710:17720	4868437	36	True				
ANR	4868539	Statement	","	812:21:17721:17721	4868437	37	True				
ANR	4868540	Statement	CurPath	813:2:17725:17731	4868437	38	True				
ANR	4868541	Statement	(	813:9:17732:17732	4868437	39	True				
ANR	4868542	Statement	state	813:10:17733:17737	4868437	40	True				
ANR	4868543	Statement	)	813:15:17738:17738	4868437	41	True				
ANR	4868544	Statement	","	813:16:17739:17739	4868437	42	True				
ANR	4868545	Statement	istate	814:2:17743:17748	4868437	43	True				
ANR	4868546	Statement	->	814:8:17749:17750	4868437	44	True				
ANR	4868547	Statement	m_uniq_id	814:10:17751:17759	4868437	45	True				
ANR	4868548	Statement	","	814:19:17760:17760	4868437	46	True				
ANR	4868549	Statement	istate	814:21:17762:17767	4868437	47	True				
ANR	4868550	Statement	->	814:27:17768:17769	4868437	48	True				
ANR	4868551	Statement	m_sequence	814:29:17770:17779	4868437	49	True				
ANR	4868552	Statement	","	814:39:17780:17780	4868437	50	True				
ANR	4868553	Statement	istate	815:2:17784:17789	4868437	51	True				
ANR	4868554	Statement	->	815:8:17790:17791	4868437	52	True				
ANR	4868555	Statement	m_rotation	815:10:17792:17801	4868437	53	True				
ANR	4868556	Statement	","	815:20:17802:17802	4868437	54	True				
ANR	4868557	Statement	istate	815:22:17804:17809	4868437	55	True				
ANR	4868558	Statement	->	815:28:17810:17811	4868437	56	True				
ANR	4868559	Statement	m_max_rotations	815:30:17812:17826	4868437	57	True				
ANR	4868560	Statement	","	815:45:17827:17827	4868437	58	True				
ANR	4868561	Statement	istate	816:2:17831:17836	4868437	59	True				
ANR	4868562	Statement	->	816:8:17837:17838	4868437	60	True				
ANR	4868563	Statement	m_offset	816:10:17839:17846	4868437	61	True				
ANR	4868564	Statement	.	816:18:17847:17847	4868437	62	True				
ANR	4868565	Statement	asint	816:19:17848:17852	4868437	63	True				
ANR	4868566	Statement	","	816:24:17853:17853	4868437	64	True				
ANR	4868567	Statement	istate	817:2:17857:17862	4868437	65	True				
ANR	4868568	Statement	->	817:8:17863:17864	4868437	66	True				
ANR	4868569	Statement	m_event_num	817:10:17865:17875	4868437	67	True				
ANR	4868570	Statement	.	817:21:17876:17876	4868437	68	True				
ANR	4868571	Statement	asint	817:22:17877:17881	4868437	69	True				
ANR	4868572	Statement	","	817:27:17882:17882	4868437	70	True				
ANR	4868573	Statement	istate	818:2:17886:17891	4868437	71	True				
ANR	4868574	Statement	->	818:8:17892:17893	4868437	72	True				
ANR	4868575	Statement	m_log_type	818:10:17894:17903	4868437	73	True				
ANR	4868576	Statement	","	818:20:17904:17904	4868437	74	True				
ANR	4868577	Statement	(	819:2:17908:17908	4868437	75	True				
ANR	4868578	Statement	unsigned	819:3:17909:17916	4868437	76	True				
ANR	4868579	Statement	)	819:11:17917:17917	4868437	77	True				
ANR	4868580	Statement	istate	819:12:17918:17923	4868437	78	True				
ANR	4868581	Statement	->	819:18:17924:17925	4868437	79	True				
ANR	4868582	Statement	m_inode	819:20:17926:17932	4868437	80	True				
ANR	4868583	Statement	","	819:27:17933:17933	4868437	81	True				
ANR	4868584	Statement	istate	819:29:17935:17940	4868437	82	True				
ANR	4868585	Statement	->	819:35:17941:17942	4868437	83	True				
ANR	4868586	Statement	m_ctime	819:37:17943:17949	4868437	84	True				
ANR	4868587	Statement	","	819:44:17950:17950	4868437	85	True				
ANR	4868588	Statement	istate	819:46:17952:17957	4868437	86	True				
ANR	4868589	Statement	->	819:52:17958:17959	4868437	87	True				
ANR	4868590	Statement	m_size	819:54:17960:17965	4868437	88	True				
ANR	4868591	Statement	.	819:60:17966:17966	4868437	89	True				
ANR	4868592	Statement	asint	819:61:17967:17971	4868437	90	True				
ANR	4868593	Statement	)	819:67:17973:17973	4868437	91	True				
ANR	4868594	ExpressionStatement		819:68:17974:17974	4868437	92	True				
ANR	4868595	ReturnType	void		4868437	1					
ANR	4868596	Identifier	ReadUserLogState :: GetStateString		4868437	2					
ANR	4868597	ParameterList	"const ReadUserLog :: FileState & state , MyString & str , const char * label"		4868437	3					
ANR	4868598	Parameter	const ReadUserLog :: FileState & state	783:1:16918:16952	4868437	0	True				
ANR	4868599	ParameterType	const ReadUserLog :: FileState &		4868437	0					
ANR	4868600	Identifier	state		4868437	1					
ANR	4868601	Parameter	MyString & str	784:1:16956:16973	4868437	1	True				
ANR	4868602	ParameterType	MyString &		4868437	0					
ANR	4868603	Identifier	str		4868437	1					
ANR	4868604	Parameter	const char * label	785:1:16977:16998	4868437	2	True				
ANR	4868605	ParameterType	const char *		4868437	0					
ANR	4868606	Identifier	label		4868437	1					
ANR	4868607	CFGEntryNode	ENTRY		4868437		True				
ANR	4868608	CFGExitNode	EXIT		4868437		True				
ANR	4868609	Symbol	str		4868437						
ANR	4868610	Symbol	convertState		4868437						
ANR	4868611	Symbol	NULL		4868437						
ANR	4868612	Symbol	istate -> m_version		4868437						
ANR	4868613	Symbol	state		4868437						
ANR	4868614	Symbol	label		4868437						
ANR	4868615	Symbol	* istate		4868437						
ANR	4868616	Symbol	istate		4868437						
ANR	4868617	Function	ReadUserLogState :: BasePath	823:0:18039:18290							
ANR	4868618	FunctionDef	ReadUserLogState :: BasePath (const ReadUserLog :: FileState & state)		4868617	0					
ANR	4868619	CompoundStatement		825:0:18124:18290	4868617	0					
ANR	4868620	IdentifierDeclStatement	const ReadUserLogFileState :: FileState * istate ;	826:1:18127:18172	4868617	0	True				
ANR	4868621	IdentifierDecl	* istate		4868617	0					
ANR	4868622	IdentifierDeclType	const ReadUserLogFileState :: FileState *		4868617	0					
ANR	4868623	Identifier	istate		4868617	1					
ANR	4868624	IfStatement	"if ( ( ! convertState ( state , istate ) ) || ( ! istate -> m_version ) )"		4868617	1					
ANR	4868625	Condition	"( ! convertState ( state , istate ) ) || ( ! istate -> m_version )"	827:6:18180:18237	4868617	0	True				
ANR	4868626	OrExpression	"( ! convertState ( state , istate ) ) || ( ! istate -> m_version )"		4868617	0		||			
ANR	4868627	UnaryOperationExpression	"! convertState ( state , istate )"		4868617	0					
ANR	4868628	UnaryOperator	!		4868617	0					
ANR	4868629	CallExpression	"convertState ( state , istate )"		4868617	1					
ANR	4868630	Callee	convertState		4868617	0					
ANR	4868631	Identifier	convertState		4868617	0					
ANR	4868632	ArgumentList	state		4868617	1					
ANR	4868633	Argument	state		4868617	0					
ANR	4868634	Identifier	state		4868617	0					
ANR	4868635	Argument	istate		4868617	1					
ANR	4868636	Identifier	istate		4868617	0					
ANR	4868637	UnaryOperationExpression	! istate -> m_version		4868617	1					
ANR	4868638	UnaryOperator	!		4868617	0					
ANR	4868639	PtrMemberAccess	istate -> m_version		4868617	1					
ANR	4868640	Identifier	istate		4868617	0					
ANR	4868641	Identifier	m_version		4868617	1					
ANR	4868642	CompoundStatement		3:67:116:116	4868617	1					
ANR	4868643	ReturnStatement	return NULL ;	828:2:18245:18256	4868617	0	True				
ANR	4868644	Identifier	NULL		4868617	0					
ANR	4868645	ReturnStatement	return istate -> m_base_path ;	830:1:18262:18288	4868617	2	True				
ANR	4868646	PtrMemberAccess	istate -> m_base_path		4868617	0					
ANR	4868647	Identifier	istate		4868617	0					
ANR	4868648	Identifier	m_base_path		4868617	1					
ANR	4868649	ReturnType	const char *		4868617	1					
ANR	4868650	Identifier	ReadUserLogState :: BasePath		4868617	2					
ANR	4868651	ParameterList	const ReadUserLog :: FileState & state		4868617	3					
ANR	4868652	Parameter	const ReadUserLog :: FileState & state	824:28:18080:18114	4868617	0	True				
ANR	4868653	ParameterType	const ReadUserLog :: FileState &		4868617	0					
ANR	4868654	Identifier	state		4868617	1					
ANR	4868655	CFGEntryNode	ENTRY		4868617		True				
ANR	4868656	CFGExitNode	EXIT		4868617		True				
ANR	4868657	Symbol	convertState		4868617						
ANR	4868658	Symbol	NULL		4868617						
ANR	4868659	Symbol	istate -> m_version		4868617						
ANR	4868660	Symbol	state		4868617						
ANR	4868661	Symbol	* istate		4868617						
ANR	4868662	Symbol	istate -> m_base_path		4868617						
ANR	4868663	Symbol	istate		4868617						
ANR	4868664	Function	ReadUserLogState :: CurPath	833:0:18293:18636							
ANR	4868665	FunctionDef	ReadUserLogState :: CurPath (const ReadUserLog :: FileState & state)		4868664	0					
ANR	4868666	CompoundStatement		835:0:18377:18636	4868664	0					
ANR	4868667	IdentifierDeclStatement	const ReadUserLogFileState :: FileState * istate ;	836:1:18380:18425	4868664	0	True				
ANR	4868668	IdentifierDecl	* istate		4868664	0					
ANR	4868669	IdentifierDeclType	const ReadUserLogFileState :: FileState *		4868664	0					
ANR	4868670	Identifier	istate		4868664	1					
ANR	4868671	IfStatement	"if ( ( ! convertState ( state , istate ) ) || ( ! istate -> m_version ) )"		4868664	1					
ANR	4868672	Condition	"( ! convertState ( state , istate ) ) || ( ! istate -> m_version )"	837:6:18433:18490	4868664	0	True				
ANR	4868673	OrExpression	"( ! convertState ( state , istate ) ) || ( ! istate -> m_version )"		4868664	0		||			
ANR	4868674	UnaryOperationExpression	"! convertState ( state , istate )"		4868664	0					
ANR	4868675	UnaryOperator	!		4868664	0					
ANR	4868676	CallExpression	"convertState ( state , istate )"		4868664	1					
ANR	4868677	Callee	convertState		4868664	0					
ANR	4868678	Identifier	convertState		4868664	0					
ANR	4868679	ArgumentList	state		4868664	1					
ANR	4868680	Argument	state		4868664	0					
ANR	4868681	Identifier	state		4868664	0					
ANR	4868682	Argument	istate		4868664	1					
ANR	4868683	Identifier	istate		4868664	0					
ANR	4868684	UnaryOperationExpression	! istate -> m_version		4868664	1					
ANR	4868685	UnaryOperator	!		4868664	0					
ANR	4868686	PtrMemberAccess	istate -> m_version		4868664	1					
ANR	4868687	Identifier	istate		4868664	0					
ANR	4868688	Identifier	m_version		4868664	1					
ANR	4868689	CompoundStatement		3:67:116:116	4868664	1					
ANR	4868690	ReturnStatement	return NULL ;	838:2:18498:18509	4868664	0	True				
ANR	4868691	Identifier	NULL		4868664	0					
ANR	4868692	Statement	static	841:1:18516:18521	4868664	2	True				
ANR	4868693	IdentifierDeclStatement	MyString path ;	841:8:18523:18536	4868664	3	True				
ANR	4868694	IdentifierDecl	path		4868664	0					
ANR	4868695	IdentifierDeclType	MyString		4868664	0					
ANR	4868696	Identifier	path		4868664	1					
ANR	4868697	IfStatement	"if ( ! GeneratePath ( istate -> m_rotation , path , true ) )"		4868664	4					
ANR	4868698	Condition	"! GeneratePath ( istate -> m_rotation , path , true )"	842:6:18544:18590	4868664	0	True				
ANR	4868699	UnaryOperationExpression	"! GeneratePath ( istate -> m_rotation , path , true )"		4868664	0					
ANR	4868700	UnaryOperator	!		4868664	0					
ANR	4868701	CallExpression	"GeneratePath ( istate -> m_rotation , path , true )"		4868664	1					
ANR	4868702	Callee	GeneratePath		4868664	0					
ANR	4868703	Identifier	GeneratePath		4868664	0					
ANR	4868704	ArgumentList	istate -> m_rotation		4868664	1					
ANR	4868705	Argument	istate -> m_rotation		4868664	0					
ANR	4868706	PtrMemberAccess	istate -> m_rotation		4868664	0					
ANR	4868707	Identifier	istate		4868664	0					
ANR	4868708	Identifier	m_rotation		4868664	1					
ANR	4868709	Argument	path		4868664	1					
ANR	4868710	Identifier	path		4868664	0					
ANR	4868711	Argument	true		4868664	2					
ANR	4868712	Identifier	true		4868664	0					
ANR	4868713	CompoundStatement		8:56:216:216	4868664	1					
ANR	4868714	ReturnStatement	return NULL ;	843:2:18598:18609	4868664	0	True				
ANR	4868715	Identifier	NULL		4868664	0					
ANR	4868716	ReturnStatement	return path . Value ( ) ;	845:1:18615:18634	4868664	5	True				
ANR	4868717	CallExpression	path . Value ( )		4868664	0					
ANR	4868718	Callee	path . Value		4868664	0					
ANR	4868719	MemberAccess	path . Value		4868664	0					
ANR	4868720	Identifier	path		4868664	0					
ANR	4868721	Identifier	Value		4868664	1					
ANR	4868722	ArgumentList			4868664	1					
ANR	4868723	ReturnType	const char *		4868664	1					
ANR	4868724	Identifier	ReadUserLogState :: CurPath		4868664	2					
ANR	4868725	ParameterList	const ReadUserLog :: FileState & state		4868664	3					
ANR	4868726	Parameter	const ReadUserLog :: FileState & state	834:27:18333:18367	4868664	0	True				
ANR	4868727	ParameterType	const ReadUserLog :: FileState &		4868664	0					
ANR	4868728	Identifier	state		4868664	1					
ANR	4868729	CFGEntryNode	ENTRY		4868664		True				
ANR	4868730	CFGExitNode	EXIT		4868664		True				
ANR	4868731	Symbol	path		4868664						
ANR	4868732	Symbol	convertState		4868664						
ANR	4868733	Symbol	NULL		4868664						
ANR	4868734	Symbol	istate -> m_version		4868664						
ANR	4868735	Symbol	true		4868664						
ANR	4868736	Symbol	path . Value		4868664						
ANR	4868737	Symbol	istate -> m_rotation		4868664						
ANR	4868738	Symbol	state		4868664						
ANR	4868739	Symbol	GeneratePath		4868664						
ANR	4868740	Symbol	* istate		4868664						
ANR	4868741	Symbol	istate		4868664						
ANR	4868742	Function	ReadUserLogState :: Rotation	848:0:18639:18878							
ANR	4868743	FunctionDef	ReadUserLogState :: Rotation (const ReadUserLog :: FileState & state)		4868742	0					
ANR	4868744	CompoundStatement		850:0:18715:18878	4868742	0					
ANR	4868745	IdentifierDeclStatement	const ReadUserLogFileState :: FileState * istate ;	851:1:18718:18763	4868742	0	True				
ANR	4868746	IdentifierDecl	* istate		4868742	0					
ANR	4868747	IdentifierDeclType	const ReadUserLogFileState :: FileState *		4868742	0					
ANR	4868748	Identifier	istate		4868742	1					
ANR	4868749	IfStatement	"if ( ( ! convertState ( state , istate ) ) || ( ! istate -> m_version ) )"		4868742	1					
ANR	4868750	Condition	"( ! convertState ( state , istate ) ) || ( ! istate -> m_version )"	852:6:18771:18828	4868742	0	True				
ANR	4868751	OrExpression	"( ! convertState ( state , istate ) ) || ( ! istate -> m_version )"		4868742	0		||			
ANR	4868752	UnaryOperationExpression	"! convertState ( state , istate )"		4868742	0					
ANR	4868753	UnaryOperator	!		4868742	0					
ANR	4868754	CallExpression	"convertState ( state , istate )"		4868742	1					
ANR	4868755	Callee	convertState		4868742	0					
ANR	4868756	Identifier	convertState		4868742	0					
ANR	4868757	ArgumentList	state		4868742	1					
ANR	4868758	Argument	state		4868742	0					
ANR	4868759	Identifier	state		4868742	0					
ANR	4868760	Argument	istate		4868742	1					
ANR	4868761	Identifier	istate		4868742	0					
ANR	4868762	UnaryOperationExpression	! istate -> m_version		4868742	1					
ANR	4868763	UnaryOperator	!		4868742	0					
ANR	4868764	PtrMemberAccess	istate -> m_version		4868742	1					
ANR	4868765	Identifier	istate		4868742	0					
ANR	4868766	Identifier	m_version		4868742	1					
ANR	4868767	CompoundStatement		3:67:116:116	4868742	1					
ANR	4868768	ReturnStatement	return - 1 ;	853:2:18836:18845	4868742	0	True				
ANR	4868769	UnaryOperationExpression	- 1		4868742	0					
ANR	4868770	UnaryOperator	-		4868742	0					
ANR	4868771	PrimaryExpression	1		4868742	1					
ANR	4868772	ReturnStatement	return istate -> m_rotation ;	855:1:18851:18876	4868742	2	True				
ANR	4868773	PtrMemberAccess	istate -> m_rotation		4868742	0					
ANR	4868774	Identifier	istate		4868742	0					
ANR	4868775	Identifier	m_rotation		4868742	1					
ANR	4868776	ReturnType	int		4868742	1					
ANR	4868777	Identifier	ReadUserLogState :: Rotation		4868742	2					
ANR	4868778	ParameterList	const ReadUserLog :: FileState & state		4868742	3					
ANR	4868779	Parameter	const ReadUserLog :: FileState & state	849:28:18671:18705	4868742	0	True				
ANR	4868780	ParameterType	const ReadUserLog :: FileState &		4868742	0					
ANR	4868781	Identifier	state		4868742	1					
ANR	4868782	CFGEntryNode	ENTRY		4868742		True				
ANR	4868783	CFGExitNode	EXIT		4868742		True				
ANR	4868784	Symbol	convertState		4868742						
ANR	4868785	Symbol	istate -> m_version		4868742						
ANR	4868786	Symbol	istate -> m_rotation		4868742						
ANR	4868787	Symbol	state		4868742						
ANR	4868788	Symbol	* istate		4868742						
ANR	4868789	Symbol	istate		4868742						
ANR	4868790	Function	ReadUserLogState :: Offset	857:0:18880:19141							
ANR	4868791	FunctionDef	ReadUserLogState :: Offset (const ReadUserLog :: FileState & state)		4868790	0					
ANR	4868792	CompoundStatement		859:0:18961:19141	4868790	0					
ANR	4868793	IdentifierDeclStatement	const ReadUserLogFileState :: FileState * istate ;	860:1:18964:19009	4868790	0	True				
ANR	4868794	IdentifierDecl	* istate		4868790	0					
ANR	4868795	IdentifierDeclType	const ReadUserLogFileState :: FileState *		4868790	0					
ANR	4868796	Identifier	istate		4868790	1					
ANR	4868797	IfStatement	"if ( ( ! convertState ( state , istate ) ) || ( ! istate -> m_version ) )"		4868790	1					
ANR	4868798	Condition	"( ! convertState ( state , istate ) ) || ( ! istate -> m_version )"	861:6:19017:19074	4868790	0	True				
ANR	4868799	OrExpression	"( ! convertState ( state , istate ) ) || ( ! istate -> m_version )"		4868790	0		||			
ANR	4868800	UnaryOperationExpression	"! convertState ( state , istate )"		4868790	0					
ANR	4868801	UnaryOperator	!		4868790	0					
ANR	4868802	CallExpression	"convertState ( state , istate )"		4868790	1					
ANR	4868803	Callee	convertState		4868790	0					
ANR	4868804	Identifier	convertState		4868790	0					
ANR	4868805	ArgumentList	state		4868790	1					
ANR	4868806	Argument	state		4868790	0					
ANR	4868807	Identifier	state		4868790	0					
ANR	4868808	Argument	istate		4868790	1					
ANR	4868809	Identifier	istate		4868790	0					
ANR	4868810	UnaryOperationExpression	! istate -> m_version		4868790	1					
ANR	4868811	UnaryOperator	!		4868790	0					
ANR	4868812	PtrMemberAccess	istate -> m_version		4868790	1					
ANR	4868813	Identifier	istate		4868790	0					
ANR	4868814	Identifier	m_version		4868790	1					
ANR	4868815	CompoundStatement		3:67:116:116	4868790	1					
ANR	4868816	ReturnStatement	return - 1 ;	862:2:19082:19091	4868790	0	True				
ANR	4868817	UnaryOperationExpression	- 1		4868790	0					
ANR	4868818	UnaryOperator	-		4868790	0					
ANR	4868819	PrimaryExpression	1		4868790	1					
ANR	4868820	ReturnStatement	return ( filesize_t ) istate -> m_offset . asint ;	864:1:19097:19139	4868790	2	True				
ANR	4868821	CastExpression	( filesize_t ) istate -> m_offset . asint		4868790	0					
ANR	4868822	CastTarget	filesize_t		4868790	0					
ANR	4868823	MemberAccess	istate -> m_offset . asint		4868790	1					
ANR	4868824	PtrMemberAccess	istate -> m_offset		4868790	0					
ANR	4868825	Identifier	istate		4868790	0					
ANR	4868826	Identifier	m_offset		4868790	1					
ANR	4868827	Identifier	asint		4868790	1					
ANR	4868828	ReturnType	filesize_t		4868790	1					
ANR	4868829	Identifier	ReadUserLogState :: Offset		4868790	2					
ANR	4868830	ParameterList	const ReadUserLog :: FileState & state		4868790	3					
ANR	4868831	Parameter	const ReadUserLog :: FileState & state	858:26:18917:18951	4868790	0	True				
ANR	4868832	ParameterType	const ReadUserLog :: FileState &		4868790	0					
ANR	4868833	Identifier	state		4868790	1					
ANR	4868834	CFGEntryNode	ENTRY		4868790		True				
ANR	4868835	CFGExitNode	EXIT		4868790		True				
ANR	4868836	Symbol	convertState		4868790						
ANR	4868837	Symbol	istate -> m_offset		4868790						
ANR	4868838	Symbol	istate -> m_version		4868790						
ANR	4868839	Symbol	state		4868790						
ANR	4868840	Symbol	* istate		4868790						
ANR	4868841	Symbol	istate		4868790						
ANR	4868842	Symbol	istate -> m_offset . asint		4868790						
ANR	4868843	Function	ReadUserLogState :: EventNum	866:0:19143:19409							
ANR	4868844	FunctionDef	ReadUserLogState :: EventNum (const ReadUserLog :: FileState & state)		4868843	0					
ANR	4868845	CompoundStatement		868:0:19226:19409	4868843	0					
ANR	4868846	IdentifierDeclStatement	const ReadUserLogFileState :: FileState * istate ;	869:1:19229:19274	4868843	0	True				
ANR	4868847	IdentifierDecl	* istate		4868843	0					
ANR	4868848	IdentifierDeclType	const ReadUserLogFileState :: FileState *		4868843	0					
ANR	4868849	Identifier	istate		4868843	1					
ANR	4868850	IfStatement	"if ( ( ! convertState ( state , istate ) ) || ( ! istate -> m_version ) )"		4868843	1					
ANR	4868851	Condition	"( ! convertState ( state , istate ) ) || ( ! istate -> m_version )"	870:6:19282:19339	4868843	0	True				
ANR	4868852	OrExpression	"( ! convertState ( state , istate ) ) || ( ! istate -> m_version )"		4868843	0		||			
ANR	4868853	UnaryOperationExpression	"! convertState ( state , istate )"		4868843	0					
ANR	4868854	UnaryOperator	!		4868843	0					
ANR	4868855	CallExpression	"convertState ( state , istate )"		4868843	1					
ANR	4868856	Callee	convertState		4868843	0					
ANR	4868857	Identifier	convertState		4868843	0					
ANR	4868858	ArgumentList	state		4868843	1					
ANR	4868859	Argument	state		4868843	0					
ANR	4868860	Identifier	state		4868843	0					
ANR	4868861	Argument	istate		4868843	1					
ANR	4868862	Identifier	istate		4868843	0					
ANR	4868863	UnaryOperationExpression	! istate -> m_version		4868843	1					
ANR	4868864	UnaryOperator	!		4868843	0					
ANR	4868865	PtrMemberAccess	istate -> m_version		4868843	1					
ANR	4868866	Identifier	istate		4868843	0					
ANR	4868867	Identifier	m_version		4868843	1					
ANR	4868868	CompoundStatement		3:67:116:116	4868843	1					
ANR	4868869	ReturnStatement	return - 1 ;	871:2:19347:19356	4868843	0	True				
ANR	4868870	UnaryOperationExpression	- 1		4868843	0					
ANR	4868871	UnaryOperator	-		4868843	0					
ANR	4868872	PrimaryExpression	1		4868843	1					
ANR	4868873	ReturnStatement	return ( filesize_t ) istate -> m_event_num . asint ;	873:1:19362:19407	4868843	2	True				
ANR	4868874	CastExpression	( filesize_t ) istate -> m_event_num . asint		4868843	0					
ANR	4868875	CastTarget	filesize_t		4868843	0					
ANR	4868876	MemberAccess	istate -> m_event_num . asint		4868843	1					
ANR	4868877	PtrMemberAccess	istate -> m_event_num		4868843	0					
ANR	4868878	Identifier	istate		4868843	0					
ANR	4868879	Identifier	m_event_num		4868843	1					
ANR	4868880	Identifier	asint		4868843	1					
ANR	4868881	ReturnType	filesize_t		4868843	1					
ANR	4868882	Identifier	ReadUserLogState :: EventNum		4868843	2					
ANR	4868883	ParameterList	const ReadUserLog :: FileState & state		4868843	3					
ANR	4868884	Parameter	const ReadUserLog :: FileState & state	867:28:19182:19216	4868843	0	True				
ANR	4868885	ParameterType	const ReadUserLog :: FileState &		4868843	0					
ANR	4868886	Identifier	state		4868843	1					
ANR	4868887	CFGEntryNode	ENTRY		4868843		True				
ANR	4868888	CFGExitNode	EXIT		4868843		True				
ANR	4868889	Symbol	convertState		4868843						
ANR	4868890	Symbol	istate -> m_event_num . asint		4868843						
ANR	4868891	Symbol	istate -> m_version		4868843						
ANR	4868892	Symbol	istate -> m_event_num		4868843						
ANR	4868893	Symbol	state		4868843						
ANR	4868894	Symbol	* istate		4868843						
ANR	4868895	Symbol	istate		4868843						
ANR	4868896	Function	ReadUserLogState :: LogPosition	875:0:19411:19683							
ANR	4868897	FunctionDef	ReadUserLogState :: LogPosition (const ReadUserLog :: FileState & state)		4868896	0					
ANR	4868898	CompoundStatement		877:0:19497:19683	4868896	0					
ANR	4868899	IdentifierDeclStatement	const ReadUserLogFileState :: FileState * istate ;	878:1:19500:19545	4868896	0	True				
ANR	4868900	IdentifierDecl	* istate		4868896	0					
ANR	4868901	IdentifierDeclType	const ReadUserLogFileState :: FileState *		4868896	0					
ANR	4868902	Identifier	istate		4868896	1					
ANR	4868903	IfStatement	"if ( ( ! convertState ( state , istate ) ) || ( ! istate -> m_version ) )"		4868896	1					
ANR	4868904	Condition	"( ! convertState ( state , istate ) ) || ( ! istate -> m_version )"	879:6:19553:19610	4868896	0	True				
ANR	4868905	OrExpression	"( ! convertState ( state , istate ) ) || ( ! istate -> m_version )"		4868896	0		||			
ANR	4868906	UnaryOperationExpression	"! convertState ( state , istate )"		4868896	0					
ANR	4868907	UnaryOperator	!		4868896	0					
ANR	4868908	CallExpression	"convertState ( state , istate )"		4868896	1					
ANR	4868909	Callee	convertState		4868896	0					
ANR	4868910	Identifier	convertState		4868896	0					
ANR	4868911	ArgumentList	state		4868896	1					
ANR	4868912	Argument	state		4868896	0					
ANR	4868913	Identifier	state		4868896	0					
ANR	4868914	Argument	istate		4868896	1					
ANR	4868915	Identifier	istate		4868896	0					
ANR	4868916	UnaryOperationExpression	! istate -> m_version		4868896	1					
ANR	4868917	UnaryOperator	!		4868896	0					
ANR	4868918	PtrMemberAccess	istate -> m_version		4868896	1					
ANR	4868919	Identifier	istate		4868896	0					
ANR	4868920	Identifier	m_version		4868896	1					
ANR	4868921	CompoundStatement		3:67:116:116	4868896	1					
ANR	4868922	ReturnStatement	return - 1 ;	880:2:19618:19627	4868896	0	True				
ANR	4868923	UnaryOperationExpression	- 1		4868896	0					
ANR	4868924	UnaryOperator	-		4868896	0					
ANR	4868925	PrimaryExpression	1		4868896	1					
ANR	4868926	ReturnStatement	return ( filesize_t ) istate -> m_log_position . asint ;	882:1:19633:19681	4868896	2	True				
ANR	4868927	CastExpression	( filesize_t ) istate -> m_log_position . asint		4868896	0					
ANR	4868928	CastTarget	filesize_t		4868896	0					
ANR	4868929	MemberAccess	istate -> m_log_position . asint		4868896	1					
ANR	4868930	PtrMemberAccess	istate -> m_log_position		4868896	0					
ANR	4868931	Identifier	istate		4868896	0					
ANR	4868932	Identifier	m_log_position		4868896	1					
ANR	4868933	Identifier	asint		4868896	1					
ANR	4868934	ReturnType	filesize_t		4868896	1					
ANR	4868935	Identifier	ReadUserLogState :: LogPosition		4868896	2					
ANR	4868936	ParameterList	const ReadUserLog :: FileState & state		4868896	3					
ANR	4868937	Parameter	const ReadUserLog :: FileState & state	876:31:19453:19487	4868896	0	True				
ANR	4868938	ParameterType	const ReadUserLog :: FileState &		4868896	0					
ANR	4868939	Identifier	state		4868896	1					
ANR	4868940	CFGEntryNode	ENTRY		4868896		True				
ANR	4868941	CFGExitNode	EXIT		4868896		True				
ANR	4868942	Symbol	istate -> m_log_position		4868896						
ANR	4868943	Symbol	convertState		4868896						
ANR	4868944	Symbol	istate -> m_version		4868896						
ANR	4868945	Symbol	istate -> m_log_position . asint		4868896						
ANR	4868946	Symbol	state		4868896						
ANR	4868947	Symbol	* istate		4868896						
ANR	4868948	Symbol	istate		4868896						
ANR	4868949	Function	ReadUserLogState :: LogRecordNo	884:0:19685:19955							
ANR	4868950	FunctionDef	ReadUserLogState :: LogRecordNo (const ReadUserLog :: FileState & state)		4868949	0					
ANR	4868951	CompoundStatement		886:0:19771:19955	4868949	0					
ANR	4868952	IdentifierDeclStatement	const ReadUserLogFileState :: FileState * istate ;	887:1:19774:19819	4868949	0	True				
ANR	4868953	IdentifierDecl	* istate		4868949	0					
ANR	4868954	IdentifierDeclType	const ReadUserLogFileState :: FileState *		4868949	0					
ANR	4868955	Identifier	istate		4868949	1					
ANR	4868956	IfStatement	"if ( ( ! convertState ( state , istate ) ) || ( ! istate -> m_version ) )"		4868949	1					
ANR	4868957	Condition	"( ! convertState ( state , istate ) ) || ( ! istate -> m_version )"	888:6:19827:19884	4868949	0	True				
ANR	4868958	OrExpression	"( ! convertState ( state , istate ) ) || ( ! istate -> m_version )"		4868949	0		||			
ANR	4868959	UnaryOperationExpression	"! convertState ( state , istate )"		4868949	0					
ANR	4868960	UnaryOperator	!		4868949	0					
ANR	4868961	CallExpression	"convertState ( state , istate )"		4868949	1					
ANR	4868962	Callee	convertState		4868949	0					
ANR	4868963	Identifier	convertState		4868949	0					
ANR	4868964	ArgumentList	state		4868949	1					
ANR	4868965	Argument	state		4868949	0					
ANR	4868966	Identifier	state		4868949	0					
ANR	4868967	Argument	istate		4868949	1					
ANR	4868968	Identifier	istate		4868949	0					
ANR	4868969	UnaryOperationExpression	! istate -> m_version		4868949	1					
ANR	4868970	UnaryOperator	!		4868949	0					
ANR	4868971	PtrMemberAccess	istate -> m_version		4868949	1					
ANR	4868972	Identifier	istate		4868949	0					
ANR	4868973	Identifier	m_version		4868949	1					
ANR	4868974	CompoundStatement		3:67:116:116	4868949	1					
ANR	4868975	ReturnStatement	return - 1 ;	889:2:19892:19901	4868949	0	True				
ANR	4868976	UnaryOperationExpression	- 1		4868949	0					
ANR	4868977	UnaryOperator	-		4868949	0					
ANR	4868978	PrimaryExpression	1		4868949	1					
ANR	4868979	ReturnStatement	return ( filesize_t ) istate -> m_log_record . asint ;	891:1:19907:19953	4868949	2	True				
ANR	4868980	CastExpression	( filesize_t ) istate -> m_log_record . asint		4868949	0					
ANR	4868981	CastTarget	filesize_t		4868949	0					
ANR	4868982	MemberAccess	istate -> m_log_record . asint		4868949	1					
ANR	4868983	PtrMemberAccess	istate -> m_log_record		4868949	0					
ANR	4868984	Identifier	istate		4868949	0					
ANR	4868985	Identifier	m_log_record		4868949	1					
ANR	4868986	Identifier	asint		4868949	1					
ANR	4868987	ReturnType	filesize_t		4868949	1					
ANR	4868988	Identifier	ReadUserLogState :: LogRecordNo		4868949	2					
ANR	4868989	ParameterList	const ReadUserLog :: FileState & state		4868949	3					
ANR	4868990	Parameter	const ReadUserLog :: FileState & state	885:31:19727:19761	4868949	0	True				
ANR	4868991	ParameterType	const ReadUserLog :: FileState &		4868949	0					
ANR	4868992	Identifier	state		4868949	1					
ANR	4868993	CFGEntryNode	ENTRY		4868949		True				
ANR	4868994	CFGExitNode	EXIT		4868949		True				
ANR	4868995	Symbol	convertState		4868949						
ANR	4868996	Symbol	istate -> m_log_record		4868949						
ANR	4868997	Symbol	istate -> m_version		4868949						
ANR	4868998	Symbol	istate -> m_log_record . asint		4868949						
ANR	4868999	Symbol	state		4868949						
ANR	4869000	Symbol	* istate		4868949						
ANR	4869001	Symbol	istate		4868949						
ANR	4869002	Function	ReadUserLogStateAccess :: ReadUserLogStateAccess	900:0:20085:20217							
ANR	4869003	FunctionDef	ReadUserLogStateAccess :: ReadUserLogStateAccess (const ReadUserLog :: FileState & state)		4869002	0					
ANR	4869004	CompoundStatement		902:0:20171:20217	4869002	0					
ANR	4869005	ExpressionStatement	m_state = new ReadUserLogFileState ( state )	903:1:20174:20215	4869002	0	True				
ANR	4869006	AssignmentExpression	m_state = new ReadUserLogFileState ( state )		4869002	0		=			
ANR	4869007	Identifier	m_state		4869002	0					
ANR	4869008	Identifier	state		4869002	1					
ANR	4869009	Identifier	ReadUserLogStateAccess :: ReadUserLogStateAccess		4869002	1					
ANR	4869010	ParameterList	const ReadUserLog :: FileState & state		4869002	2					
ANR	4869011	Parameter	const ReadUserLog :: FileState & state	901:1:20134:20168	4869002	0	True				
ANR	4869012	ParameterType	const ReadUserLog :: FileState &		4869002	0					
ANR	4869013	Identifier	state		4869002	1					
ANR	4869014	CFGEntryNode	ENTRY		4869002		True				
ANR	4869015	CFGExitNode	EXIT		4869002		True				
ANR	4869016	Symbol	m_state		4869002						
ANR	4869017	Symbol	state		4869002						
ANR	4869018	Function	ReadUserLogStateAccess :: ~ReadUserLogStateAccess	906:0:20220:20293							
ANR	4869019	FunctionDef	ReadUserLogStateAccess :: ~ReadUserLogStateAccess ()		4869018	0					
ANR	4869020	CompoundStatement		907:0:20274:20293	4869018	0					
ANR	4869021	Statement	delete	908:1:20277:20282	4869018	0	True				
ANR	4869022	ExpressionStatement	m_state	908:8:20284:20291	4869018	1	True				
ANR	4869023	Identifier	m_state		4869018	0					
ANR	4869024	Identifier	ReadUserLogStateAccess :: ~ReadUserLogStateAccess		4869018	1					
ANR	4869025	ParameterList			4869018	2					
ANR	4869026	CFGEntryNode	ENTRY		4869018		True				
ANR	4869027	CFGExitNode	EXIT		4869018		True				
ANR	4869028	Function	ReadUserLogStateAccess :: isInitialized	912:0:20332:20426							
ANR	4869029	FunctionDef	ReadUserLogStateAccess :: isInitialized ()		4869028	0					
ANR	4869030	CompoundStatement		914:0:20389:20426	4869028	0					
ANR	4869031	ReturnStatement	return m_state -> isInitialized ( ) ;	915:1:20392:20424	4869028	0	True				
ANR	4869032	CallExpression	m_state -> isInitialized ( )		4869028	0					
ANR	4869033	Callee	m_state -> isInitialized		4869028	0					
ANR	4869034	PtrMemberAccess	m_state -> isInitialized		4869028	0					
ANR	4869035	Identifier	m_state		4869028	0					
ANR	4869036	Identifier	isInitialized		4869028	1					
ANR	4869037	ArgumentList			4869028	1					
ANR	4869038	ReturnType	bool		4869028	1					
ANR	4869039	Identifier	ReadUserLogStateAccess :: isInitialized		4869028	2					
ANR	4869040	ParameterList			4869028	3					
ANR	4869041	CFGEntryNode	ENTRY		4869028		True				
ANR	4869042	CFGExitNode	EXIT		4869028		True				
ANR	4869043	Symbol	m_state		4869028						
ANR	4869044	Symbol	* m_state		4869028						
ANR	4869045	Symbol	m_state -> isInitialized		4869028						
ANR	4869046	Function	ReadUserLogStateAccess :: isValid	919:0:20467:20549							
ANR	4869047	FunctionDef	ReadUserLogStateAccess :: isValid ()		4869046	0					
ANR	4869048	CompoundStatement		921:0:20518:20549	4869046	0					
ANR	4869049	ReturnStatement	return m_state -> isValid ( ) ;	922:1:20521:20547	4869046	0	True				
ANR	4869050	CallExpression	m_state -> isValid ( )		4869046	0					
ANR	4869051	Callee	m_state -> isValid		4869046	0					
ANR	4869052	PtrMemberAccess	m_state -> isValid		4869046	0					
ANR	4869053	Identifier	m_state		4869046	0					
ANR	4869054	Identifier	isValid		4869046	1					
ANR	4869055	ArgumentList			4869046	1					
ANR	4869056	ReturnType	bool		4869046	1					
ANR	4869057	Identifier	ReadUserLogStateAccess :: isValid		4869046	2					
ANR	4869058	ParameterList			4869046	3					
ANR	4869059	CFGEntryNode	ENTRY		4869046		True				
ANR	4869060	CFGExitNode	EXIT		4869046		True				
ANR	4869061	Symbol	m_state -> isValid		4869046						
ANR	4869062	Symbol	m_state		4869046						
ANR	4869063	Symbol	* m_state		4869046						
ANR	4869064	Function	ReadUserLogStateAccess :: getFileOffset	926:0:20579:20825							
ANR	4869065	FunctionDef	ReadUserLogStateAccess :: getFileOffset (unsigned long & pos)		4869064	0					
ANR	4869066	CompoundStatement		929:0:20652:20825	4869064	0					
ANR	4869067	IdentifierDeclStatement	int64_t my_pos ;	930:1:20655:20669	4869064	0	True				
ANR	4869068	IdentifierDecl	my_pos		4869064	0					
ANR	4869069	IdentifierDeclType	int64_t		4869064	0					
ANR	4869070	Identifier	my_pos		4869064	1					
ANR	4869071	IfStatement	if ( ! m_state -> getFileOffset ( my_pos ) )		4869064	1					
ANR	4869072	Condition	! m_state -> getFileOffset ( my_pos )	931:6:20677:20707	4869064	0	True				
ANR	4869073	UnaryOperationExpression	! m_state -> getFileOffset ( my_pos )		4869064	0					
ANR	4869074	UnaryOperator	!		4869064	0					
ANR	4869075	CallExpression	m_state -> getFileOffset ( my_pos )		4869064	1					
ANR	4869076	Callee	m_state -> getFileOffset		4869064	0					
ANR	4869077	PtrMemberAccess	m_state -> getFileOffset		4869064	0					
ANR	4869078	Identifier	m_state		4869064	0					
ANR	4869079	Identifier	getFileOffset		4869064	1					
ANR	4869080	ArgumentList	my_pos		4869064	1					
ANR	4869081	Argument	my_pos		4869064	0					
ANR	4869082	Identifier	my_pos		4869064	0					
ANR	4869083	CompoundStatement		3:40:58:58	4869064	1					
ANR	4869084	ReturnStatement	return false ;	932:2:20715:20727	4869064	0	True				
ANR	4869085	Identifier	false		4869064	0					
ANR	4869086	IfStatement	if ( my_pos > LONG_MAX )		4869064	2					
ANR	4869087	Condition	my_pos > LONG_MAX	935:6:20739:20755	4869064	0	True				
ANR	4869088	RelationalExpression	my_pos > LONG_MAX		4869064	0		>			
ANR	4869089	Identifier	my_pos		4869064	0					
ANR	4869090	Identifier	LONG_MAX		4869064	1					
ANR	4869091	CompoundStatement		7:26:106:106	4869064	1					
ANR	4869092	ReturnStatement	return false ;	936:2:20763:20775	4869064	0	True				
ANR	4869093	Identifier	false		4869064	0					
ANR	4869094	ExpressionStatement	pos = ( unsigned long ) my_pos	938:1:20781:20809	4869064	3	True				
ANR	4869095	AssignmentExpression	pos = ( unsigned long ) my_pos		4869064	0		=			
ANR	4869096	Identifier	pos		4869064	0					
ANR	4869097	CastExpression	( unsigned long ) my_pos		4869064	1					
ANR	4869098	CastTarget	unsigned long		4869064	0					
ANR	4869099	Identifier	my_pos		4869064	1					
ANR	4869100	ReturnStatement	return true ;	939:1:20812:20823	4869064	4	True				
ANR	4869101	Identifier	true		4869064	0					
ANR	4869102	ReturnType	bool		4869064	1					
ANR	4869103	Identifier	ReadUserLogStateAccess :: getFileOffset		4869064	2					
ANR	4869104	ParameterList	unsigned long & pos		4869064	3					
ANR	4869105	Parameter	unsigned long & pos	928:1:20624:20642	4869064	0	True				
ANR	4869106	ParameterType	unsigned long &		4869064	0					
ANR	4869107	Identifier	pos		4869064	1					
ANR	4869108	CFGEntryNode	ENTRY		4869064		True				
ANR	4869109	CFGExitNode	EXIT		4869064		True				
ANR	4869110	Symbol	m_state		4869064						
ANR	4869111	Symbol	pos		4869064						
ANR	4869112	Symbol	LONG_MAX		4869064						
ANR	4869113	Symbol	my_pos		4869064						
ANR	4869114	Symbol	* m_state		4869064						
ANR	4869115	Symbol	false		4869064						
ANR	4869116	Symbol	true		4869064						
ANR	4869117	Symbol	m_state -> getFileOffset		4869064						
ANR	4869118	Function	ReadUserLogStateAccess :: getFileEventNum	943:0:20855:21121							
ANR	4869119	FunctionDef	ReadUserLogStateAccess :: getFileEventNum (unsigned long & num)		4869118	0					
ANR	4869120	CompoundStatement		946:0:20930:21121	4869118	0					
ANR	4869121	IdentifierDeclStatement	int64_t my_num ;	947:1:20933:20947	4869118	0	True				
ANR	4869122	IdentifierDecl	my_num		4869118	0					
ANR	4869123	IdentifierDeclType	int64_t		4869118	0					
ANR	4869124	Identifier	my_num		4869118	1					
ANR	4869125	IfStatement	if ( ! m_state -> getFileEventNum ( my_num ) )		4869118	1					
ANR	4869126	Condition	! m_state -> getFileEventNum ( my_num )	948:6:20955:20987	4869118	0	True				
ANR	4869127	UnaryOperationExpression	! m_state -> getFileEventNum ( my_num )		4869118	0					
ANR	4869128	UnaryOperator	!		4869118	0					
ANR	4869129	CallExpression	m_state -> getFileEventNum ( my_num )		4869118	1					
ANR	4869130	Callee	m_state -> getFileEventNum		4869118	0					
ANR	4869131	PtrMemberAccess	m_state -> getFileEventNum		4869118	0					
ANR	4869132	Identifier	m_state		4869118	0					
ANR	4869133	Identifier	getFileEventNum		4869118	1					
ANR	4869134	ArgumentList	my_num		4869118	1					
ANR	4869135	Argument	my_num		4869118	0					
ANR	4869136	Identifier	my_num		4869118	0					
ANR	4869137	CompoundStatement		3:42:60:60	4869118	1					
ANR	4869138	ReturnStatement	return false ;	949:2:20995:21007	4869118	0	True				
ANR	4869139	Identifier	false		4869118	0					
ANR	4869140	IfStatement	if ( ( unsigned long ) my_num > ULONG_MAX )		4869118	2					
ANR	4869141	Condition	( unsigned long ) my_num > ULONG_MAX	952:6:21019:21051	4869118	0	True				
ANR	4869142	RelationalExpression	( unsigned long ) my_num > ULONG_MAX		4869118	0		>			
ANR	4869143	CastExpression	( unsigned long ) my_num		4869118	0					
ANR	4869144	CastTarget	unsigned long		4869118	0					
ANR	4869145	Identifier	my_num		4869118	1					
ANR	4869146	Identifier	ULONG_MAX		4869118	1					
ANR	4869147	CompoundStatement		7:42:124:124	4869118	1					
ANR	4869148	ReturnStatement	return false ;	953:2:21059:21071	4869118	0	True				
ANR	4869149	Identifier	false		4869118	0					
ANR	4869150	ExpressionStatement	num = ( unsigned long ) my_num	955:1:21077:21105	4869118	3	True				
ANR	4869151	AssignmentExpression	num = ( unsigned long ) my_num		4869118	0		=			
ANR	4869152	Identifier	num		4869118	0					
ANR	4869153	CastExpression	( unsigned long ) my_num		4869118	1					
ANR	4869154	CastTarget	unsigned long		4869118	0					
ANR	4869155	Identifier	my_num		4869118	1					
ANR	4869156	ReturnStatement	return true ;	956:1:21108:21119	4869118	4	True				
ANR	4869157	Identifier	true		4869118	0					
ANR	4869158	ReturnType	bool		4869118	1					
ANR	4869159	Identifier	ReadUserLogStateAccess :: getFileEventNum		4869118	2					
ANR	4869160	ParameterList	unsigned long & num		4869118	3					
ANR	4869161	Parameter	unsigned long & num	945:1:20902:20920	4869118	0	True				
ANR	4869162	ParameterType	unsigned long &		4869118	0					
ANR	4869163	Identifier	num		4869118	1					
ANR	4869164	CFGEntryNode	ENTRY		4869118		True				
ANR	4869165	CFGExitNode	EXIT		4869118		True				
ANR	4869166	Symbol	m_state		4869118						
ANR	4869167	Symbol	my_num		4869118						
ANR	4869168	Symbol	num		4869118						
ANR	4869169	Symbol	m_state -> getFileEventNum		4869118						
ANR	4869170	Symbol	* m_state		4869118						
ANR	4869171	Symbol	false		4869118						
ANR	4869172	Symbol	true		4869118						
ANR	4869173	Symbol	ULONG_MAX		4869118						
ANR	4869174	Function	ReadUserLogStateAccess :: getFileEventNumDiff	960:0:21164:21580							
ANR	4869175	FunctionDef	"ReadUserLogStateAccess :: getFileEventNumDiff (const ReadUserLogStateAccess & other , long & diff)"		4869174	0					
ANR	4869176	CompoundStatement		964:0:21278:21580	4869174	0					
ANR	4869177	IdentifierDeclStatement	const ReadUserLogFileState * ostate ;	965:1:21281:21315	4869174	0	True				
ANR	4869178	IdentifierDecl	* ostate		4869174	0					
ANR	4869179	IdentifierDeclType	const ReadUserLogFileState *		4869174	0					
ANR	4869180	Identifier	ostate		4869174	1					
ANR	4869181	IfStatement	if ( ! other . getState ( ostate ) )		4869174	1					
ANR	4869182	Condition	! other . getState ( ostate )	966:6:21323:21347	4869174	0	True				
ANR	4869183	UnaryOperationExpression	! other . getState ( ostate )		4869174	0					
ANR	4869184	UnaryOperator	!		4869174	0					
ANR	4869185	CallExpression	other . getState ( ostate )		4869174	1					
ANR	4869186	Callee	other . getState		4869174	0					
ANR	4869187	MemberAccess	other . getState		4869174	0					
ANR	4869188	Identifier	other		4869174	0					
ANR	4869189	Identifier	getState		4869174	1					
ANR	4869190	ArgumentList	ostate		4869174	1					
ANR	4869191	Argument	ostate		4869174	0					
ANR	4869192	Identifier	ostate		4869174	0					
ANR	4869193	CompoundStatement		3:34:72:72	4869174	1					
ANR	4869194	ReturnStatement	return false ;	967:2:21355:21367	4869174	0	True				
ANR	4869195	Identifier	false		4869174	0					
ANR	4869196	IdentifierDeclStatement	"int64_t my_num , other_num ;"	969:1:21373:21398	4869174	2	True				
ANR	4869197	IdentifierDecl	my_num		4869174	0					
ANR	4869198	IdentifierDeclType	int64_t		4869174	0					
ANR	4869199	Identifier	my_num		4869174	1					
ANR	4869200	IdentifierDecl	other_num		4869174	1					
ANR	4869201	IdentifierDeclType	int64_t		4869174	0					
ANR	4869202	Identifier	other_num		4869174	1					
ANR	4869203	IfStatement	if ( ! m_state -> getFileEventNum ( my_num ) || ! ostate -> getFileEventNum ( other_num ) )		4869174	3					
ANR	4869204	Condition	! m_state -> getFileEventNum ( my_num ) || ! ostate -> getFileEventNum ( other_num )	970:6:21406:21481	4869174	0	True				
ANR	4869205	OrExpression	! m_state -> getFileEventNum ( my_num ) || ! ostate -> getFileEventNum ( other_num )		4869174	0		||			
ANR	4869206	UnaryOperationExpression	! m_state -> getFileEventNum ( my_num )		4869174	0					
ANR	4869207	UnaryOperator	!		4869174	0					
ANR	4869208	CallExpression	m_state -> getFileEventNum ( my_num )		4869174	1					
ANR	4869209	Callee	m_state -> getFileEventNum		4869174	0					
ANR	4869210	PtrMemberAccess	m_state -> getFileEventNum		4869174	0					
ANR	4869211	Identifier	m_state		4869174	0					
ANR	4869212	Identifier	getFileEventNum		4869174	1					
ANR	4869213	ArgumentList	my_num		4869174	1					
ANR	4869214	Argument	my_num		4869174	0					
ANR	4869215	Identifier	my_num		4869174	0					
ANR	4869216	UnaryOperationExpression	! ostate -> getFileEventNum ( other_num )		4869174	1					
ANR	4869217	UnaryOperator	!		4869174	0					
ANR	4869218	CallExpression	ostate -> getFileEventNum ( other_num )		4869174	1					
ANR	4869219	Callee	ostate -> getFileEventNum		4869174	0					
ANR	4869220	PtrMemberAccess	ostate -> getFileEventNum		4869174	0					
ANR	4869221	Identifier	ostate		4869174	0					
ANR	4869222	Identifier	getFileEventNum		4869174	1					
ANR	4869223	ArgumentList	other_num		4869174	1					
ANR	4869224	Argument	other_num		4869174	0					
ANR	4869225	Identifier	other_num		4869174	0					
ANR	4869226	CompoundStatement		8:42:206:206	4869174	1					
ANR	4869227	ReturnStatement	return false ;	972:2:21489:21501	4869174	0	True				
ANR	4869228	Identifier	false		4869174	0					
ANR	4869229	IdentifierDeclStatement	int64_t idiff = my_num - other_num ;	975:1:21508:21542	4869174	4	True				
ANR	4869230	IdentifierDecl	idiff = my_num - other_num		4869174	0					
ANR	4869231	IdentifierDeclType	int64_t		4869174	0					
ANR	4869232	Identifier	idiff		4869174	1					
ANR	4869233	AssignmentExpression	idiff = my_num - other_num		4869174	2		=			
ANR	4869234	Identifier	idiff		4869174	0					
ANR	4869235	AdditiveExpression	my_num - other_num		4869174	1		-			
ANR	4869236	Identifier	my_num		4869174	0					
ANR	4869237	Identifier	other_num		4869174	1					
ANR	4869238	ExpressionStatement	diff = ( long ) idiff	976:1:21545:21564	4869174	5	True				
ANR	4869239	AssignmentExpression	diff = ( long ) idiff		4869174	0		=			
ANR	4869240	Identifier	diff		4869174	0					
ANR	4869241	CastExpression	( long ) idiff		4869174	1					
ANR	4869242	CastTarget	long		4869174	0					
ANR	4869243	Identifier	idiff		4869174	1					
ANR	4869244	ReturnStatement	return true ;	977:1:21567:21578	4869174	6	True				
ANR	4869245	Identifier	true		4869174	0					
ANR	4869246	ReturnType	bool		4869174	1					
ANR	4869247	Identifier	ReadUserLogStateAccess :: getFileEventNumDiff		4869174	2					
ANR	4869248	ParameterList	"const ReadUserLogStateAccess & other , long & diff"		4869174	3					
ANR	4869249	Parameter	const ReadUserLogStateAccess & other	962:1:21215:21249	4869174	0	True				
ANR	4869250	ParameterType	const ReadUserLogStateAccess &		4869174	0					
ANR	4869251	Identifier	other		4869174	1					
ANR	4869252	Parameter	long & diff	963:1:21253:21268	4869174	1	True				
ANR	4869253	ParameterType	long &		4869174	0					
ANR	4869254	Identifier	diff		4869174	1					
ANR	4869255	CFGEntryNode	ENTRY		4869174		True				
ANR	4869256	CFGExitNode	EXIT		4869174		True				
ANR	4869257	Symbol	other		4869174						
ANR	4869258	Symbol	my_num		4869174						
ANR	4869259	Symbol	m_state -> getFileEventNum		4869174						
ANR	4869260	Symbol	* m_state		4869174						
ANR	4869261	Symbol	false		4869174						
ANR	4869262	Symbol	diff		4869174						
ANR	4869263	Symbol	other . getState		4869174						
ANR	4869264	Symbol	m_state		4869174						
ANR	4869265	Symbol	* ostate		4869174						
ANR	4869266	Symbol	ostate		4869174						
ANR	4869267	Symbol	idiff		4869174						
ANR	4869268	Symbol	true		4869174						
ANR	4869269	Symbol	ostate -> getFileEventNum		4869174						
ANR	4869270	Symbol	other_num		4869174						
ANR	4869271	Function	ReadUserLogStateAccess :: getFileOffsetDiff	981:0:21626:22036							
ANR	4869272	FunctionDef	"ReadUserLogStateAccess :: getFileOffsetDiff (const ReadUserLogStateAccess & other , long & diff)"		4869271	0					
ANR	4869273	CompoundStatement		985:0:21738:22036	4869271	0					
ANR	4869274	IdentifierDeclStatement	const ReadUserLogFileState * ostate ;	986:1:21741:21775	4869271	0	True				
ANR	4869275	IdentifierDecl	* ostate		4869271	0					
ANR	4869276	IdentifierDeclType	const ReadUserLogFileState *		4869271	0					
ANR	4869277	Identifier	ostate		4869271	1					
ANR	4869278	IfStatement	if ( ! other . getState ( ostate ) )		4869271	1					
ANR	4869279	Condition	! other . getState ( ostate )	987:6:21783:21807	4869271	0	True				
ANR	4869280	UnaryOperationExpression	! other . getState ( ostate )		4869271	0					
ANR	4869281	UnaryOperator	!		4869271	0					
ANR	4869282	CallExpression	other . getState ( ostate )		4869271	1					
ANR	4869283	Callee	other . getState		4869271	0					
ANR	4869284	MemberAccess	other . getState		4869271	0					
ANR	4869285	Identifier	other		4869271	0					
ANR	4869286	Identifier	getState		4869271	1					
ANR	4869287	ArgumentList	ostate		4869271	1					
ANR	4869288	Argument	ostate		4869271	0					
ANR	4869289	Identifier	ostate		4869271	0					
ANR	4869290	CompoundStatement		3:34:72:72	4869271	1					
ANR	4869291	ReturnStatement	return false ;	988:2:21815:21827	4869271	0	True				
ANR	4869292	Identifier	false		4869271	0					
ANR	4869293	IdentifierDeclStatement	"int64_t my_pos , other_pos ;"	990:1:21833:21858	4869271	2	True				
ANR	4869294	IdentifierDecl	my_pos		4869271	0					
ANR	4869295	IdentifierDeclType	int64_t		4869271	0					
ANR	4869296	Identifier	my_pos		4869271	1					
ANR	4869297	IdentifierDecl	other_pos		4869271	1					
ANR	4869298	IdentifierDeclType	int64_t		4869271	0					
ANR	4869299	Identifier	other_pos		4869271	1					
ANR	4869300	IfStatement	if ( ! m_state -> getFileOffset ( my_pos ) || ! ostate -> getFileOffset ( other_pos ) )		4869271	3					
ANR	4869301	Condition	! m_state -> getFileOffset ( my_pos ) || ! ostate -> getFileOffset ( other_pos )	991:6:21866:21937	4869271	0	True				
ANR	4869302	OrExpression	! m_state -> getFileOffset ( my_pos ) || ! ostate -> getFileOffset ( other_pos )		4869271	0		||			
ANR	4869303	UnaryOperationExpression	! m_state -> getFileOffset ( my_pos )		4869271	0					
ANR	4869304	UnaryOperator	!		4869271	0					
ANR	4869305	CallExpression	m_state -> getFileOffset ( my_pos )		4869271	1					
ANR	4869306	Callee	m_state -> getFileOffset		4869271	0					
ANR	4869307	PtrMemberAccess	m_state -> getFileOffset		4869271	0					
ANR	4869308	Identifier	m_state		4869271	0					
ANR	4869309	Identifier	getFileOffset		4869271	1					
ANR	4869310	ArgumentList	my_pos		4869271	1					
ANR	4869311	Argument	my_pos		4869271	0					
ANR	4869312	Identifier	my_pos		4869271	0					
ANR	4869313	UnaryOperationExpression	! ostate -> getFileOffset ( other_pos )		4869271	1					
ANR	4869314	UnaryOperator	!		4869271	0					
ANR	4869315	CallExpression	ostate -> getFileOffset ( other_pos )		4869271	1					
ANR	4869316	Callee	ostate -> getFileOffset		4869271	0					
ANR	4869317	PtrMemberAccess	ostate -> getFileOffset		4869271	0					
ANR	4869318	Identifier	ostate		4869271	0					
ANR	4869319	Identifier	getFileOffset		4869271	1					
ANR	4869320	ArgumentList	other_pos		4869271	1					
ANR	4869321	Argument	other_pos		4869271	0					
ANR	4869322	Identifier	other_pos		4869271	0					
ANR	4869323	CompoundStatement		8:40:202:202	4869271	1					
ANR	4869324	ReturnStatement	return false ;	993:2:21945:21957	4869271	0	True				
ANR	4869325	Identifier	false		4869271	0					
ANR	4869326	IdentifierDeclStatement	int64_t idiff = my_pos - other_pos ;	996:1:21964:21998	4869271	4	True				
ANR	4869327	IdentifierDecl	idiff = my_pos - other_pos		4869271	0					
ANR	4869328	IdentifierDeclType	int64_t		4869271	0					
ANR	4869329	Identifier	idiff		4869271	1					
ANR	4869330	AssignmentExpression	idiff = my_pos - other_pos		4869271	2		=			
ANR	4869331	Identifier	idiff		4869271	0					
ANR	4869332	AdditiveExpression	my_pos - other_pos		4869271	1		-			
ANR	4869333	Identifier	my_pos		4869271	0					
ANR	4869334	Identifier	other_pos		4869271	1					
ANR	4869335	ExpressionStatement	diff = ( long ) idiff	997:1:22001:22020	4869271	5	True				
ANR	4869336	AssignmentExpression	diff = ( long ) idiff		4869271	0		=			
ANR	4869337	Identifier	diff		4869271	0					
ANR	4869338	CastExpression	( long ) idiff		4869271	1					
ANR	4869339	CastTarget	long		4869271	0					
ANR	4869340	Identifier	idiff		4869271	1					
ANR	4869341	ReturnStatement	return true ;	998:1:22023:22034	4869271	6	True				
ANR	4869342	Identifier	true		4869271	0					
ANR	4869343	ReturnType	bool		4869271	1					
ANR	4869344	Identifier	ReadUserLogStateAccess :: getFileOffsetDiff		4869271	2					
ANR	4869345	ParameterList	"const ReadUserLogStateAccess & other , long & diff"		4869271	3					
ANR	4869346	Parameter	const ReadUserLogStateAccess & other	983:1:21675:21709	4869271	0	True				
ANR	4869347	ParameterType	const ReadUserLogStateAccess &		4869271	0					
ANR	4869348	Identifier	other		4869271	1					
ANR	4869349	Parameter	long & diff	984:1:21713:21728	4869271	1	True				
ANR	4869350	ParameterType	long &		4869271	0					
ANR	4869351	Identifier	diff		4869271	1					
ANR	4869352	CFGEntryNode	ENTRY		4869271		True				
ANR	4869353	CFGExitNode	EXIT		4869271		True				
ANR	4869354	Symbol	other		4869271						
ANR	4869355	Symbol	* m_state		4869271						
ANR	4869356	Symbol	false		4869271						
ANR	4869357	Symbol	diff		4869271						
ANR	4869358	Symbol	other . getState		4869271						
ANR	4869359	Symbol	other_pos		4869271						
ANR	4869360	Symbol	ostate -> getFileOffset		4869271						
ANR	4869361	Symbol	m_state		4869271						
ANR	4869362	Symbol	* ostate		4869271						
ANR	4869363	Symbol	ostate		4869271						
ANR	4869364	Symbol	my_pos		4869271						
ANR	4869365	Symbol	idiff		4869271						
ANR	4869366	Symbol	true		4869271						
ANR	4869367	Symbol	m_state -> getFileOffset		4869271						
ANR	4869368	Function	ReadUserLogStateAccess :: getLogPosition	1002:0:22066:22330							
ANR	4869369	FunctionDef	ReadUserLogStateAccess :: getLogPosition (unsigned long & pos)		4869368	0					
ANR	4869370	CompoundStatement		1005:0:22140:22330	4869368	0					
ANR	4869371	IdentifierDeclStatement	int64_t my_pos ;	1006:1:22143:22157	4869368	0	True				
ANR	4869372	IdentifierDecl	my_pos		4869368	0					
ANR	4869373	IdentifierDeclType	int64_t		4869368	0					
ANR	4869374	Identifier	my_pos		4869368	1					
ANR	4869375	IfStatement	if ( ! m_state -> getLogPosition ( my_pos ) )		4869368	1					
ANR	4869376	Condition	! m_state -> getLogPosition ( my_pos )	1007:6:22165:22196	4869368	0	True				
ANR	4869377	UnaryOperationExpression	! m_state -> getLogPosition ( my_pos )		4869368	0					
ANR	4869378	UnaryOperator	!		4869368	0					
ANR	4869379	CallExpression	m_state -> getLogPosition ( my_pos )		4869368	1					
ANR	4869380	Callee	m_state -> getLogPosition		4869368	0					
ANR	4869381	PtrMemberAccess	m_state -> getLogPosition		4869368	0					
ANR	4869382	Identifier	m_state		4869368	0					
ANR	4869383	Identifier	getLogPosition		4869368	1					
ANR	4869384	ArgumentList	my_pos		4869368	1					
ANR	4869385	Argument	my_pos		4869368	0					
ANR	4869386	Identifier	my_pos		4869368	0					
ANR	4869387	CompoundStatement		3:41:59:59	4869368	1					
ANR	4869388	ReturnStatement	return false ;	1008:2:22204:22216	4869368	0	True				
ANR	4869389	Identifier	false		4869368	0					
ANR	4869390	IfStatement	if ( ( unsigned long ) my_pos > ULONG_MAX )		4869368	2					
ANR	4869391	Condition	( unsigned long ) my_pos > ULONG_MAX	1011:6:22228:22260	4869368	0	True				
ANR	4869392	RelationalExpression	( unsigned long ) my_pos > ULONG_MAX		4869368	0		>			
ANR	4869393	CastExpression	( unsigned long ) my_pos		4869368	0					
ANR	4869394	CastTarget	unsigned long		4869368	0					
ANR	4869395	Identifier	my_pos		4869368	1					
ANR	4869396	Identifier	ULONG_MAX		4869368	1					
ANR	4869397	CompoundStatement		7:42:123:123	4869368	1					
ANR	4869398	ReturnStatement	return false ;	1012:2:22268:22280	4869368	0	True				
ANR	4869399	Identifier	false		4869368	0					
ANR	4869400	ExpressionStatement	pos = ( unsigned long ) my_pos	1014:1:22286:22314	4869368	3	True				
ANR	4869401	AssignmentExpression	pos = ( unsigned long ) my_pos		4869368	0		=			
ANR	4869402	Identifier	pos		4869368	0					
ANR	4869403	CastExpression	( unsigned long ) my_pos		4869368	1					
ANR	4869404	CastTarget	unsigned long		4869368	0					
ANR	4869405	Identifier	my_pos		4869368	1					
ANR	4869406	ReturnStatement	return true ;	1015:1:22317:22328	4869368	4	True				
ANR	4869407	Identifier	true		4869368	0					
ANR	4869408	ReturnType	bool		4869368	1					
ANR	4869409	Identifier	ReadUserLogStateAccess :: getLogPosition		4869368	2					
ANR	4869410	ParameterList	unsigned long & pos		4869368	3					
ANR	4869411	Parameter	unsigned long & pos	1004:1:22112:22130	4869368	0	True				
ANR	4869412	ParameterType	unsigned long &		4869368	0					
ANR	4869413	Identifier	pos		4869368	1					
ANR	4869414	CFGEntryNode	ENTRY		4869368		True				
ANR	4869415	CFGExitNode	EXIT		4869368		True				
ANR	4869416	Symbol	m_state		4869368						
ANR	4869417	Symbol	pos		4869368						
ANR	4869418	Symbol	m_state -> getLogPosition		4869368						
ANR	4869419	Symbol	my_pos		4869368						
ANR	4869420	Symbol	* m_state		4869368						
ANR	4869421	Symbol	false		4869368						
ANR	4869422	Symbol	true		4869368						
ANR	4869423	Symbol	ULONG_MAX		4869368						
ANR	4869424	Function	ReadUserLogStateAccess :: getLogPositionDiff	1019:0:22376:22789							
ANR	4869425	FunctionDef	"ReadUserLogStateAccess :: getLogPositionDiff (const ReadUserLogStateAccess & other , long & diff)"		4869424	0					
ANR	4869426	CompoundStatement		1023:0:22489:22789	4869424	0					
ANR	4869427	IdentifierDeclStatement	const ReadUserLogFileState * ostate ;	1024:1:22492:22526	4869424	0	True				
ANR	4869428	IdentifierDecl	* ostate		4869424	0					
ANR	4869429	IdentifierDeclType	const ReadUserLogFileState *		4869424	0					
ANR	4869430	Identifier	ostate		4869424	1					
ANR	4869431	IfStatement	if ( ! other . getState ( ostate ) )		4869424	1					
ANR	4869432	Condition	! other . getState ( ostate )	1025:6:22534:22558	4869424	0	True				
ANR	4869433	UnaryOperationExpression	! other . getState ( ostate )		4869424	0					
ANR	4869434	UnaryOperator	!		4869424	0					
ANR	4869435	CallExpression	other . getState ( ostate )		4869424	1					
ANR	4869436	Callee	other . getState		4869424	0					
ANR	4869437	MemberAccess	other . getState		4869424	0					
ANR	4869438	Identifier	other		4869424	0					
ANR	4869439	Identifier	getState		4869424	1					
ANR	4869440	ArgumentList	ostate		4869424	1					
ANR	4869441	Argument	ostate		4869424	0					
ANR	4869442	Identifier	ostate		4869424	0					
ANR	4869443	CompoundStatement		3:34:72:72	4869424	1					
ANR	4869444	ReturnStatement	return false ;	1026:2:22566:22578	4869424	0	True				
ANR	4869445	Identifier	false		4869424	0					
ANR	4869446	IdentifierDeclStatement	"int64_t my_pos , other_pos ;"	1028:1:22584:22609	4869424	2	True				
ANR	4869447	IdentifierDecl	my_pos		4869424	0					
ANR	4869448	IdentifierDeclType	int64_t		4869424	0					
ANR	4869449	Identifier	my_pos		4869424	1					
ANR	4869450	IdentifierDecl	other_pos		4869424	1					
ANR	4869451	IdentifierDeclType	int64_t		4869424	0					
ANR	4869452	Identifier	other_pos		4869424	1					
ANR	4869453	IfStatement	if ( ! m_state -> getLogPosition ( my_pos ) || ! ostate -> getLogPosition ( other_pos ) )		4869424	3					
ANR	4869454	Condition	! m_state -> getLogPosition ( my_pos ) || ! ostate -> getLogPosition ( other_pos )	1029:6:22617:22690	4869424	0	True				
ANR	4869455	OrExpression	! m_state -> getLogPosition ( my_pos ) || ! ostate -> getLogPosition ( other_pos )		4869424	0		||			
ANR	4869456	UnaryOperationExpression	! m_state -> getLogPosition ( my_pos )		4869424	0					
ANR	4869457	UnaryOperator	!		4869424	0					
ANR	4869458	CallExpression	m_state -> getLogPosition ( my_pos )		4869424	1					
ANR	4869459	Callee	m_state -> getLogPosition		4869424	0					
ANR	4869460	PtrMemberAccess	m_state -> getLogPosition		4869424	0					
ANR	4869461	Identifier	m_state		4869424	0					
ANR	4869462	Identifier	getLogPosition		4869424	1					
ANR	4869463	ArgumentList	my_pos		4869424	1					
ANR	4869464	Argument	my_pos		4869424	0					
ANR	4869465	Identifier	my_pos		4869424	0					
ANR	4869466	UnaryOperationExpression	! ostate -> getLogPosition ( other_pos )		4869424	1					
ANR	4869467	UnaryOperator	!		4869424	0					
ANR	4869468	CallExpression	ostate -> getLogPosition ( other_pos )		4869424	1					
ANR	4869469	Callee	ostate -> getLogPosition		4869424	0					
ANR	4869470	PtrMemberAccess	ostate -> getLogPosition		4869424	0					
ANR	4869471	Identifier	ostate		4869424	0					
ANR	4869472	Identifier	getLogPosition		4869424	1					
ANR	4869473	ArgumentList	other_pos		4869424	1					
ANR	4869474	Argument	other_pos		4869424	0					
ANR	4869475	Identifier	other_pos		4869424	0					
ANR	4869476	CompoundStatement		8:41:204:204	4869424	1					
ANR	4869477	ReturnStatement	return false ;	1031:2:22698:22710	4869424	0	True				
ANR	4869478	Identifier	false		4869424	0					
ANR	4869479	IdentifierDeclStatement	int64_t idiff = my_pos - other_pos ;	1034:1:22717:22751	4869424	4	True				
ANR	4869480	IdentifierDecl	idiff = my_pos - other_pos		4869424	0					
ANR	4869481	IdentifierDeclType	int64_t		4869424	0					
ANR	4869482	Identifier	idiff		4869424	1					
ANR	4869483	AssignmentExpression	idiff = my_pos - other_pos		4869424	2		=			
ANR	4869484	Identifier	idiff		4869424	0					
ANR	4869485	AdditiveExpression	my_pos - other_pos		4869424	1		-			
ANR	4869486	Identifier	my_pos		4869424	0					
ANR	4869487	Identifier	other_pos		4869424	1					
ANR	4869488	ExpressionStatement	diff = ( long ) idiff	1035:1:22754:22773	4869424	5	True				
ANR	4869489	AssignmentExpression	diff = ( long ) idiff		4869424	0		=			
ANR	4869490	Identifier	diff		4869424	0					
ANR	4869491	CastExpression	( long ) idiff		4869424	1					
ANR	4869492	CastTarget	long		4869424	0					
ANR	4869493	Identifier	idiff		4869424	1					
ANR	4869494	ReturnStatement	return true ;	1036:1:22776:22787	4869424	6	True				
ANR	4869495	Identifier	true		4869424	0					
ANR	4869496	ReturnType	bool		4869424	1					
ANR	4869497	Identifier	ReadUserLogStateAccess :: getLogPositionDiff		4869424	2					
ANR	4869498	ParameterList	"const ReadUserLogStateAccess & other , long & diff"		4869424	3					
ANR	4869499	Parameter	const ReadUserLogStateAccess & other	1021:1:22426:22460	4869424	0	True				
ANR	4869500	ParameterType	const ReadUserLogStateAccess &		4869424	0					
ANR	4869501	Identifier	other		4869424	1					
ANR	4869502	Parameter	long & diff	1022:1:22464:22479	4869424	1	True				
ANR	4869503	ParameterType	long &		4869424	0					
ANR	4869504	Identifier	diff		4869424	1					
ANR	4869505	CFGEntryNode	ENTRY		4869424		True				
ANR	4869506	CFGExitNode	EXIT		4869424		True				
ANR	4869507	Symbol	ostate -> getLogPosition		4869424						
ANR	4869508	Symbol	other		4869424						
ANR	4869509	Symbol	m_state -> getLogPosition		4869424						
ANR	4869510	Symbol	* m_state		4869424						
ANR	4869511	Symbol	false		4869424						
ANR	4869512	Symbol	diff		4869424						
ANR	4869513	Symbol	other . getState		4869424						
ANR	4869514	Symbol	other_pos		4869424						
ANR	4869515	Symbol	m_state		4869424						
ANR	4869516	Symbol	* ostate		4869424						
ANR	4869517	Symbol	ostate		4869424						
ANR	4869518	Symbol	my_pos		4869424						
ANR	4869519	Symbol	idiff		4869424						
ANR	4869520	Symbol	true		4869424						
ANR	4869521	Function	ReadUserLogStateAccess :: getEventNumber	1040:0:22819:23113							
ANR	4869522	FunctionDef	ReadUserLogStateAccess :: getEventNumber (unsigned long & event_no)		4869521	0					
ANR	4869523	CompoundStatement		1043:0:22898:23113	4869521	0					
ANR	4869524	IdentifierDeclStatement	int64_t my_event_no ;	1044:1:22901:22920	4869521	0	True				
ANR	4869525	IdentifierDecl	my_event_no		4869521	0					
ANR	4869526	IdentifierDeclType	int64_t		4869521	0					
ANR	4869527	Identifier	my_event_no		4869521	1					
ANR	4869528	IfStatement	if ( ! m_state -> getLogRecordNo ( my_event_no ) )		4869521	1					
ANR	4869529	Condition	! m_state -> getLogRecordNo ( my_event_no )	1045:6:22928:22964	4869521	0	True				
ANR	4869530	UnaryOperationExpression	! m_state -> getLogRecordNo ( my_event_no )		4869521	0					
ANR	4869531	UnaryOperator	!		4869521	0					
ANR	4869532	CallExpression	m_state -> getLogRecordNo ( my_event_no )		4869521	1					
ANR	4869533	Callee	m_state -> getLogRecordNo		4869521	0					
ANR	4869534	PtrMemberAccess	m_state -> getLogRecordNo		4869521	0					
ANR	4869535	Identifier	m_state		4869521	0					
ANR	4869536	Identifier	getLogRecordNo		4869521	1					
ANR	4869537	ArgumentList	my_event_no		4869521	1					
ANR	4869538	Argument	my_event_no		4869521	0					
ANR	4869539	Identifier	my_event_no		4869521	0					
ANR	4869540	CompoundStatement		3:46:69:69	4869521	1					
ANR	4869541	ReturnStatement	return false ;	1046:2:22972:22984	4869521	0	True				
ANR	4869542	Identifier	false		4869521	0					
ANR	4869543	IfStatement	if ( ( unsigned long ) my_event_no > ULONG_MAX )		4869521	2					
ANR	4869544	Condition	( unsigned long ) my_event_no > ULONG_MAX	1049:6:22996:23033	4869521	0	True				
ANR	4869545	RelationalExpression	( unsigned long ) my_event_no > ULONG_MAX		4869521	0		>			
ANR	4869546	CastExpression	( unsigned long ) my_event_no		4869521	0					
ANR	4869547	CastTarget	unsigned long		4869521	0					
ANR	4869548	Identifier	my_event_no		4869521	1					
ANR	4869549	Identifier	ULONG_MAX		4869521	1					
ANR	4869550	CompoundStatement		7:47:138:138	4869521	1					
ANR	4869551	ReturnStatement	return false ;	1050:2:23041:23053	4869521	0	True				
ANR	4869552	Identifier	false		4869521	0					
ANR	4869553	ExpressionStatement	event_no = ( unsigned long ) my_event_no	1052:1:23059:23097	4869521	3	True				
ANR	4869554	AssignmentExpression	event_no = ( unsigned long ) my_event_no		4869521	0		=			
ANR	4869555	Identifier	event_no		4869521	0					
ANR	4869556	CastExpression	( unsigned long ) my_event_no		4869521	1					
ANR	4869557	CastTarget	unsigned long		4869521	0					
ANR	4869558	Identifier	my_event_no		4869521	1					
ANR	4869559	ReturnStatement	return true ;	1053:1:23100:23111	4869521	4	True				
ANR	4869560	Identifier	true		4869521	0					
ANR	4869561	ReturnType	bool		4869521	1					
ANR	4869562	Identifier	ReadUserLogStateAccess :: getEventNumber		4869521	2					
ANR	4869563	ParameterList	unsigned long & event_no		4869521	3					
ANR	4869564	Parameter	unsigned long & event_no	1042:1:22865:22888	4869521	0	True				
ANR	4869565	ParameterType	unsigned long &		4869521	0					
ANR	4869566	Identifier	event_no		4869521	1					
ANR	4869567	CFGEntryNode	ENTRY		4869521		True				
ANR	4869568	CFGExitNode	EXIT		4869521		True				
ANR	4869569	Symbol	m_state		4869521						
ANR	4869570	Symbol	m_state -> getLogRecordNo		4869521						
ANR	4869571	Symbol	event_no		4869521						
ANR	4869572	Symbol	my_event_no		4869521						
ANR	4869573	Symbol	* m_state		4869521						
ANR	4869574	Symbol	false		4869521						
ANR	4869575	Symbol	true		4869521						
ANR	4869576	Symbol	ULONG_MAX		4869521						
ANR	4869577	Function	ReadUserLogStateAccess :: getEventNumberDiff	1057:0:23149:23573							
ANR	4869578	FunctionDef	"ReadUserLogStateAccess :: getEventNumberDiff (const ReadUserLogStateAccess & other , long & diff)"		4869577	0					
ANR	4869579	CompoundStatement		1061:0:23261:23573	4869577	0					
ANR	4869580	IdentifierDeclStatement	const ReadUserLogFileState * ostate ;	1062:1:23264:23298	4869577	0	True				
ANR	4869581	IdentifierDecl	* ostate		4869577	0					
ANR	4869582	IdentifierDeclType	const ReadUserLogFileState *		4869577	0					
ANR	4869583	Identifier	ostate		4869577	1					
ANR	4869584	IfStatement	if ( ! other . getState ( ostate ) )		4869577	1					
ANR	4869585	Condition	! other . getState ( ostate )	1063:6:23306:23330	4869577	0	True				
ANR	4869586	UnaryOperationExpression	! other . getState ( ostate )		4869577	0					
ANR	4869587	UnaryOperator	!		4869577	0					
ANR	4869588	CallExpression	other . getState ( ostate )		4869577	1					
ANR	4869589	Callee	other . getState		4869577	0					
ANR	4869590	MemberAccess	other . getState		4869577	0					
ANR	4869591	Identifier	other		4869577	0					
ANR	4869592	Identifier	getState		4869577	1					
ANR	4869593	ArgumentList	ostate		4869577	1					
ANR	4869594	Argument	ostate		4869577	0					
ANR	4869595	Identifier	ostate		4869577	0					
ANR	4869596	CompoundStatement		3:34:72:72	4869577	1					
ANR	4869597	ReturnStatement	return false ;	1064:2:23338:23350	4869577	0	True				
ANR	4869598	Identifier	false		4869577	0					
ANR	4869599	IdentifierDeclStatement	"int64_t my_recno , other_recno ;"	1066:1:23356:23385	4869577	2	True				
ANR	4869600	IdentifierDecl	my_recno		4869577	0					
ANR	4869601	IdentifierDeclType	int64_t		4869577	0					
ANR	4869602	Identifier	my_recno		4869577	1					
ANR	4869603	IdentifierDecl	other_recno		4869577	1					
ANR	4869604	IdentifierDeclType	int64_t		4869577	0					
ANR	4869605	Identifier	other_recno		4869577	1					
ANR	4869606	IfStatement	if ( ! m_state -> getLogRecordNo ( my_recno ) || ! ostate -> getLogRecordNo ( other_recno ) )		4869577	3					
ANR	4869607	Condition	! m_state -> getLogRecordNo ( my_recno ) || ! ostate -> getLogRecordNo ( other_recno )	1067:6:23393:23470	4869577	0	True				
ANR	4869608	OrExpression	! m_state -> getLogRecordNo ( my_recno ) || ! ostate -> getLogRecordNo ( other_recno )		4869577	0		||			
ANR	4869609	UnaryOperationExpression	! m_state -> getLogRecordNo ( my_recno )		4869577	0					
ANR	4869610	UnaryOperator	!		4869577	0					
ANR	4869611	CallExpression	m_state -> getLogRecordNo ( my_recno )		4869577	1					
ANR	4869612	Callee	m_state -> getLogRecordNo		4869577	0					
ANR	4869613	PtrMemberAccess	m_state -> getLogRecordNo		4869577	0					
ANR	4869614	Identifier	m_state		4869577	0					
ANR	4869615	Identifier	getLogRecordNo		4869577	1					
ANR	4869616	ArgumentList	my_recno		4869577	1					
ANR	4869617	Argument	my_recno		4869577	0					
ANR	4869618	Identifier	my_recno		4869577	0					
ANR	4869619	UnaryOperationExpression	! ostate -> getLogRecordNo ( other_recno )		4869577	1					
ANR	4869620	UnaryOperator	!		4869577	0					
ANR	4869621	CallExpression	ostate -> getLogRecordNo ( other_recno )		4869577	1					
ANR	4869622	Callee	ostate -> getLogRecordNo		4869577	0					
ANR	4869623	PtrMemberAccess	ostate -> getLogRecordNo		4869577	0					
ANR	4869624	Identifier	ostate		4869577	0					
ANR	4869625	Identifier	getLogRecordNo		4869577	1					
ANR	4869626	ArgumentList	other_recno		4869577	1					
ANR	4869627	Argument	other_recno		4869577	0					
ANR	4869628	Identifier	other_recno		4869577	0					
ANR	4869629	CompoundStatement		8:43:212:212	4869577	1					
ANR	4869630	ReturnStatement	return false ;	1069:2:23478:23490	4869577	0	True				
ANR	4869631	Identifier	false		4869577	0					
ANR	4869632	IdentifierDeclStatement	int64_t idiff = my_recno - other_recno ;	1072:1:23497:23535	4869577	4	True				
ANR	4869633	IdentifierDecl	idiff = my_recno - other_recno		4869577	0					
ANR	4869634	IdentifierDeclType	int64_t		4869577	0					
ANR	4869635	Identifier	idiff		4869577	1					
ANR	4869636	AssignmentExpression	idiff = my_recno - other_recno		4869577	2		=			
ANR	4869637	Identifier	idiff		4869577	0					
ANR	4869638	AdditiveExpression	my_recno - other_recno		4869577	1		-			
ANR	4869639	Identifier	my_recno		4869577	0					
ANR	4869640	Identifier	other_recno		4869577	1					
ANR	4869641	ExpressionStatement	diff = ( long ) idiff	1073:1:23538:23557	4869577	5	True				
ANR	4869642	AssignmentExpression	diff = ( long ) idiff		4869577	0		=			
ANR	4869643	Identifier	diff		4869577	0					
ANR	4869644	CastExpression	( long ) idiff		4869577	1					
ANR	4869645	CastTarget	long		4869577	0					
ANR	4869646	Identifier	idiff		4869577	1					
ANR	4869647	ReturnStatement	return true ;	1074:1:23560:23571	4869577	6	True				
ANR	4869648	Identifier	true		4869577	0					
ANR	4869649	ReturnType	bool		4869577	1					
ANR	4869650	Identifier	ReadUserLogStateAccess :: getEventNumberDiff		4869577	2					
ANR	4869651	ParameterList	"const ReadUserLogStateAccess & other , long & diff"		4869577	3					
ANR	4869652	Parameter	const ReadUserLogStateAccess & other	1059:1:23199:23233	4869577	0	True				
ANR	4869653	ParameterType	const ReadUserLogStateAccess &		4869577	0					
ANR	4869654	Identifier	other		4869577	1					
ANR	4869655	Parameter	long & diff	1060:1:23237:23252	4869577	1	True				
ANR	4869656	ParameterType	long &		4869577	0					
ANR	4869657	Identifier	diff		4869577	1					
ANR	4869658	CFGEntryNode	ENTRY		4869577		True				
ANR	4869659	CFGExitNode	EXIT		4869577		True				
ANR	4869660	Symbol	other		4869577						
ANR	4869661	Symbol	ostate -> getLogRecordNo		4869577						
ANR	4869662	Symbol	m_state -> getLogRecordNo		4869577						
ANR	4869663	Symbol	* m_state		4869577						
ANR	4869664	Symbol	false		4869577						
ANR	4869665	Symbol	diff		4869577						
ANR	4869666	Symbol	other . getState		4869577						
ANR	4869667	Symbol	other_recno		4869577						
ANR	4869668	Symbol	m_state		4869577						
ANR	4869669	Symbol	* ostate		4869577						
ANR	4869670	Symbol	ostate		4869577						
ANR	4869671	Symbol	idiff		4869577						
ANR	4869672	Symbol	true		4869577						
ANR	4869673	Symbol	my_recno		4869577						
ANR	4869674	Function	ReadUserLogStateAccess :: getUniqId	1078:0:23641:23750							
ANR	4869675	FunctionDef	"ReadUserLogStateAccess :: getUniqId (char * buf , int len)"		4869674	0					
ANR	4869676	CompoundStatement		1080:0:23708:23750	4869674	0					
ANR	4869677	ReturnStatement	"return m_state -> getUniqId ( buf , len ) ;"	1081:1:23711:23748	4869674	0	True				
ANR	4869678	CallExpression	"m_state -> getUniqId ( buf , len )"		4869674	0					
ANR	4869679	Callee	m_state -> getUniqId		4869674	0					
ANR	4869680	PtrMemberAccess	m_state -> getUniqId		4869674	0					
ANR	4869681	Identifier	m_state		4869674	0					
ANR	4869682	Identifier	getUniqId		4869674	1					
ANR	4869683	ArgumentList	buf		4869674	1					
ANR	4869684	Argument	buf		4869674	0					
ANR	4869685	Identifier	buf		4869674	0					
ANR	4869686	Argument	len		4869674	1					
ANR	4869687	Identifier	len		4869674	0					
ANR	4869688	ReturnType	bool		4869674	1					
ANR	4869689	Identifier	ReadUserLogStateAccess :: getUniqId		4869674	2					
ANR	4869690	ParameterList	"char * buf , int len"		4869674	3					
ANR	4869691	Parameter	char * buf	1079:35:23681:23689	4869674	0	True				
ANR	4869692	ParameterType	char *		4869674	0					
ANR	4869693	Identifier	buf		4869674	1					
ANR	4869694	Parameter	int len	1079:46:23692:23698	4869674	1	True				
ANR	4869695	ParameterType	int		4869674	0					
ANR	4869696	Identifier	len		4869674	1					
ANR	4869697	CFGEntryNode	ENTRY		4869674		True				
ANR	4869698	CFGExitNode	EXIT		4869674		True				
ANR	4869699	Symbol	m_state		4869674						
ANR	4869700	Symbol	buf		4869674						
ANR	4869701	Symbol	len		4869674						
ANR	4869702	Symbol	* m_state		4869674						
ANR	4869703	Symbol	m_state -> getUniqId		4869674						
ANR	4869704	Function	ReadUserLogStateAccess :: getSequenceNumber	1084:0:23753:23863							
ANR	4869705	FunctionDef	ReadUserLogStateAccess :: getSequenceNumber (int & seqno)		4869704	0					
ANR	4869706	CompoundStatement		1086:0:23820:23863	4869704	0					
ANR	4869707	ReturnStatement	return m_state -> getSequenceNo ( seqno ) ;	1087:1:23823:23861	4869704	0	True				
ANR	4869708	CallExpression	m_state -> getSequenceNo ( seqno )		4869704	0					
ANR	4869709	Callee	m_state -> getSequenceNo		4869704	0					
ANR	4869710	PtrMemberAccess	m_state -> getSequenceNo		4869704	0					
ANR	4869711	Identifier	m_state		4869704	0					
ANR	4869712	Identifier	getSequenceNo		4869704	1					
ANR	4869713	ArgumentList	seqno		4869704	1					
ANR	4869714	Argument	seqno		4869704	0					
ANR	4869715	Identifier	seqno		4869704	0					
ANR	4869716	ReturnType	bool		4869704	1					
ANR	4869717	Identifier	ReadUserLogStateAccess :: getSequenceNumber		4869704	2					
ANR	4869718	ParameterList	int & seqno		4869704	3					
ANR	4869719	Parameter	int & seqno	1085:43:23801:23810	4869704	0	True				
ANR	4869720	ParameterType	int &		4869704	0					
ANR	4869721	Identifier	seqno		4869704	1					
ANR	4869722	CFGEntryNode	ENTRY		4869704		True				
ANR	4869723	CFGExitNode	EXIT		4869704		True				
ANR	4869724	Symbol	m_state		4869704						
ANR	4869725	Symbol	seqno		4869704						
ANR	4869726	Symbol	* m_state		4869704						
ANR	4869727	Symbol	m_state -> getSequenceNo		4869704						
ANR	4869728	Function	ReadUserLogStateAccess :: getState	1090:0:23866:23982							
ANR	4869729	FunctionDef	ReadUserLogStateAccess :: getState (const ReadUserLogFileState * & state)		4869728	0					
ANR	4869730	CompoundStatement		1092:0:23948:23982	4869728	0					
ANR	4869731	ExpressionStatement	state = m_state	1093:1:23951:23966	4869728	0	True				
ANR	4869732	AssignmentExpression	state = m_state		4869728	0		=			
ANR	4869733	Identifier	state		4869728	0					
ANR	4869734	Identifier	m_state		4869728	1					
ANR	4869735	ReturnStatement	return true ;	1094:1:23969:23980	4869728	1	True				
ANR	4869736	Identifier	true		4869728	0					
ANR	4869737	ReturnType	bool		4869728	1					
ANR	4869738	Identifier	ReadUserLogStateAccess :: getState		4869728	2					
ANR	4869739	ParameterList	const ReadUserLogFileState * & state		4869728	3					
ANR	4869740	Parameter	const ReadUserLogFileState * & state	1091:34:23905:23938	4869728	0	True				
ANR	4869741	ParameterType	const ReadUserLogFileState * &		4869728	0					
ANR	4869742	Identifier	state		4869728	1					
ANR	4869743	CFGEntryNode	ENTRY		4869728		True				
ANR	4869744	CFGExitNode	EXIT		4869728		True				
ANR	4869745	Symbol	m_state		4869728						
ANR	4869746	Symbol	true		4869728						
ANR	4869747	Symbol	state		4869728						
