command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5364963	File	data/converged/CVE-2011-4930_htcondor/test_classads.cpp								
ANR	5364964	ClassDef	Parameters	50:0:1702:1816							
ANR	5364965	DeclStmt									
ANR	5364966	Decl							bool	bool	debug
ANR	5364967	DeclStmt									
ANR	5364968	Decl							string	string	input_file
ANR	5364969	DeclStmt									
ANR	5364970	Decl							void	"void ( int argc , char * * argv )"	ParseCommandLine
ANR	5364971	ClassDef	ErrorCount	59:0:1820:2250							
ANR	5364972	DeclStmt									
ANR	5364973	Decl							int	int	number_of_errors
ANR	5364974	Function	ErrorCount	64:1:1881:1923							
ANR	5364975	FunctionDef	ErrorCount ()		5364974	1					
ANR	5364976	CompoundStatement		65:1:1896:1923	5364974	0					
ANR	5364977	ExpressionStatement	number_of_errors = 0	66:2:1900:1920	5364974	0	True				
ANR	5364978	AssignmentExpression	number_of_errors = 0		5364974	0		=			
ANR	5364979	Identifier	number_of_errors		5364974	0					
ANR	5364980	PrimaryExpression	0		5364974	1					
ANR	5364981	Identifier	ErrorCount		5364974	1					
ANR	5364982	ParameterList			5364974	2					
ANR	5364983	CFGEntryNode	ENTRY		5364974		True				
ANR	5364984	CFGExitNode	EXIT		5364974		True				
ANR	5364985	Symbol	number_of_errors		5364974						
ANR	5364986	Function	IncrementErrors	68:1:1926:1992							
ANR	5364987	FunctionDef	IncrementErrors ()		5364986	2					
ANR	5364988	CompoundStatement		69:1:1955:1992	5364986	0					
ANR	5364989	ExpressionStatement	number_of_errors ++	70:2:1960:1978	5364986	0	True				
ANR	5364990	PostIncDecOperationExpression	number_of_errors ++		5364986	0					
ANR	5364991	Identifier	number_of_errors		5364986	0					
ANR	5364992	IncDec	++		5364986	1					
ANR	5364993	ReturnStatement	return ;	71:2:1983:1989	5364986	1	True				
ANR	5364994	ReturnType	void		5364986	1					
ANR	5364995	Identifier	IncrementErrors		5364986	2					
ANR	5364996	ParameterList			5364986	3					
ANR	5364997	CFGEntryNode	ENTRY		5364986		True				
ANR	5364998	CFGExitNode	EXIT		5364986		True				
ANR	5364999	Symbol	number_of_errors		5364986						
ANR	5365000	Function	PrintErrors	73:1:1995:2248							
ANR	5365001	FunctionDef	PrintErrors ()		5365000	3					
ANR	5365002	CompoundStatement		74:1:2020:2248	5365000	0					
ANR	5365003	IfStatement	if ( number_of_errors == 0 )		5365000	0					
ANR	5365004	Condition	number_of_errors == 0	75:6:2028:2048	5365000	0	True				
ANR	5365005	EqualityExpression	number_of_errors == 0		5365000	0		==			
ANR	5365006	Identifier	number_of_errors		5365000	0					
ANR	5365007	PrimaryExpression	0		5365000	1					
ANR	5365008	CompoundStatement		2:29:30:30	5365000	1					
ANR	5365009	ExpressionStatement	"cout << ""No errors were found.\\n"""	76:3:2056:2089	5365000	0	True				
ANR	5365010	ShiftExpression	"cout << ""No errors were found.\\n"""		5365000	0		<<			
ANR	5365011	Identifier	cout		5365000	0					
ANR	5365012	PrimaryExpression	"""No errors were found.\\n"""		5365000	1					
ANR	5365013	ElseStatement	else		5365000	0					
ANR	5365014	IfStatement	if ( number_of_errors == 1 )		5365000	0					
ANR	5365015	Condition	number_of_errors == 1	77:13:2104:2124	5365000	0	True				
ANR	5365016	EqualityExpression	number_of_errors == 1		5365000	0		==			
ANR	5365017	Identifier	number_of_errors		5365000	0					
ANR	5365018	PrimaryExpression	1		5365000	1					
ANR	5365019	CompoundStatement		4:36:106:106	5365000	1					
ANR	5365020	ExpressionStatement	"cout << ""One error was found.\\n"""	78:3:2132:2164	5365000	0	True				
ANR	5365021	ShiftExpression	"cout << ""One error was found.\\n"""		5365000	0		<<			
ANR	5365022	Identifier	cout		5365000	0					
ANR	5365023	PrimaryExpression	"""One error was found.\\n"""		5365000	1					
ANR	5365024	ElseStatement	else		5365000	0					
ANR	5365025	CompoundStatement		6:9:154:154	5365000	0					
ANR	5365026	ExpressionStatement	"cout << number_of_errors << "" errors were found.\\n"""	80:3:2180:2231	5365000	0	True				
ANR	5365027	ShiftExpression	"cout << number_of_errors << "" errors were found.\\n"""		5365000	0		<<			
ANR	5365028	Identifier	cout		5365000	0					
ANR	5365029	ShiftExpression	"number_of_errors << "" errors were found.\\n"""		5365000	1		<<			
ANR	5365030	Identifier	number_of_errors		5365000	0					
ANR	5365031	PrimaryExpression	""" errors were found.\\n"""		5365000	1					
ANR	5365032	ReturnStatement	return ;	82:2:2239:2245	5365000	1	True				
ANR	5365033	ReturnType	void		5365000	1					
ANR	5365034	Identifier	PrintErrors		5365000	2					
ANR	5365035	ParameterList			5365000	3					
ANR	5365036	CFGEntryNode	ENTRY		5365000		True				
ANR	5365037	CFGExitNode	EXIT		5365000		True				
ANR	5365038	Symbol	number_of_errors		5365000						
ANR	5365039	DeclStmt									
ANR	5365040	Decl							"map < string , ClassAd * >"	"map < string , ClassAd * >"	ClassAdMap
ANR	5365041	DeclStmt									
ANR	5365042	Decl							"map < string , ClassAd * > :: iterator"	"map < string , ClassAd * > :: iterator"	ClassAdMapIterator
ANR	5365043	DeclStmt									
ANR	5365044	Decl							"map < string , ClassAdCollection * >"	"map < string , ClassAdCollection * >"	CollectionMap
ANR	5365045	DeclStmt									
ANR	5365046	Decl							"map < string , ClassAdCollection * > :: iterator"	"map < string , ClassAdCollection * > :: iterator"	CollectionMapIterator
ANR	5365047	DeclStmt									
ANR	5365048	Decl							void	void ( void )	cleanup
ANR	5365049	DeclStmt									
ANR	5365050	Decl							void	void ( string name )	mark_classad_in_collection
ANR	5365051	DeclStmt									
ANR	5365052	Decl							void	void ( string name )	unmark_classad_in_collection
ANR	5365053	DeclStmt									
ANR	5365054	Decl							bool	bool ( string name )	is_classad_in_collection
ANR	5365055	DeclStmt									
ANR	5365056	Decl							void	"void ( ifstream & input_file , const Parameters & parameters , ErrorCount * errors )"	process_file
ANR	5365057	DeclStmt									
ANR	5365058	Decl							void	"void ( ifstream & input_file , const string & line , int token_start , int * line_number , const Parameters & parameters , ErrorCount * errors )"	process_classad
ANR	5365059	DeclStmt									
ANR	5365060	Decl							void	"void ( const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors )"	process_print_classad
ANR	5365061	DeclStmt									
ANR	5365062	Decl							void	"void ( const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors )"	process_print_classad_xml
ANR	5365063	DeclStmt									
ANR	5365064	Decl							void	"void ( const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors )"	process_test_match
ANR	5365065	DeclStmt									
ANR	5365066	Decl							void	"void ( const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors )"	process_test_lexer_one_token
ANR	5365067	DeclStmt									
ANR	5365068	Decl							void	"void ( const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors )"	process_evaluate
ANR	5365069	DeclStmt									
ANR	5365070	Decl							void	"void ( const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors )"	process_make_collection
ANR	5365071	DeclStmt									
ANR	5365072	Decl							void	"void ( const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors )"	process_add_to_collection
ANR	5365073	DeclStmt									
ANR	5365074	Decl							void	"void ( const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors )"	process_truncate_log
ANR	5365075	DeclStmt									
ANR	5365076	Decl							void	"void ( const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors )"	process_create_subview
ANR	5365077	DeclStmt									
ANR	5365078	Decl							void	"void ( const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors )"	process_check_in_view
ANR	5365079	DeclStmt									
ANR	5365080	Decl							string	"string ( int * token_start , const string & line )"	extract_token
ANR	5365081	DeclStmt									
ANR	5365082	Decl							bool	bool ( const string & line )	empty_line
ANR	5365083	DeclStmt									
ANR	5365084	Decl							ClassAdMap	ClassAdMap	classads
ANR	5365085	DeclStmt									
ANR	5365086	Decl							CollectionMap	CollectionMap	collections
ANR	5365087	Function	main	154:0:5121:5598							
ANR	5365088	FunctionDef	"main (int argc , char * * argv)"		5365087	0					
ANR	5365089	CompoundStatement		156:0:5154:5598	5365087	0					
ANR	5365090	IdentifierDeclStatement	ErrorCount errors ;	157:1:5157:5175	5365087	0	True				
ANR	5365091	IdentifierDecl	errors		5365087	0					
ANR	5365092	IdentifierDeclType	ErrorCount		5365087	0					
ANR	5365093	Identifier	errors		5365087	1					
ANR	5365094	IdentifierDeclStatement	Parameters parameters ;	158:1:5178:5200	5365087	1	True				
ANR	5365095	IdentifierDecl	parameters		5365087	0					
ANR	5365096	IdentifierDeclType	Parameters		5365087	0					
ANR	5365097	Identifier	parameters		5365087	1					
ANR	5365098	ExpressionStatement	"parameters . ParseCommandLine ( argc , argv )"	160:1:5204:5243	5365087	2	True				
ANR	5365099	CallExpression	"parameters . ParseCommandLine ( argc , argv )"		5365087	0					
ANR	5365100	Callee	parameters . ParseCommandLine		5365087	0					
ANR	5365101	MemberAccess	parameters . ParseCommandLine		5365087	0					
ANR	5365102	Identifier	parameters		5365087	0					
ANR	5365103	Identifier	ParseCommandLine		5365087	1					
ANR	5365104	ArgumentList	argc		5365087	1					
ANR	5365105	Argument	argc		5365087	0					
ANR	5365106	Identifier	argc		5365087	0					
ANR	5365107	Argument	argv		5365087	1					
ANR	5365108	Identifier	argv		5365087	0					
ANR	5365109	IdentifierDeclStatement	ifstream input_file ( parameters . input_file . c_str ( ) ) ;	162:1:5247:5297	5365087	3	True				
ANR	5365110	IdentifierDecl	input_file ( parameters . input_file . c_str ( ) )		5365087	0					
ANR	5365111	IdentifierDeclType	ifstream		5365087	0					
ANR	5365112	Identifier	input_file		5365087	1					
ANR	5365113	CallExpression	parameters . input_file . c_str ( )		5365087	2					
ANR	5365114	Callee	parameters . input_file . c_str		5365087	0					
ANR	5365115	MemberAccess	parameters . input_file . c_str		5365087	0					
ANR	5365116	MemberAccess	parameters . input_file		5365087	0					
ANR	5365117	Identifier	parameters		5365087	0					
ANR	5365118	Identifier	input_file		5365087	1					
ANR	5365119	Identifier	c_str		5365087	1					
ANR	5365120	ArgumentList			5365087	1					
ANR	5365121	IfStatement	if ( ! input_file )		5365087	4					
ANR	5365122	Condition	! input_file	163:5:5304:5314	5365087	0	True				
ANR	5365123	UnaryOperationExpression	! input_file		5365087	0					
ANR	5365124	UnaryOperator	!		5365087	0					
ANR	5365125	Identifier	input_file		5365087	1					
ANR	5365126	CompoundStatement		8:18:162:162	5365087	1					
ANR	5365127	ExpressionStatement	"cout << ""Can't open file: \\"""" << parameters . input_file << ""\\""\\n"""	164:2:5321:5393	5365087	0	True				
ANR	5365128	ShiftExpression	"cout << ""Can't open file: \\"""" << parameters . input_file << ""\\""\\n"""		5365087	0		<<			
ANR	5365129	Identifier	cout		5365087	0					
ANR	5365130	ShiftExpression	"""Can't open file: \\"""" << parameters . input_file << ""\\""\\n"""		5365087	1		<<			
ANR	5365131	PrimaryExpression	"""Can't open file: \\"""""		5365087	0					
ANR	5365132	ShiftExpression	"parameters . input_file << ""\\""\\n"""		5365087	1		<<			
ANR	5365133	MemberAccess	parameters . input_file		5365087	0					
ANR	5365134	Identifier	parameters		5365087	0					
ANR	5365135	Identifier	input_file		5365087	1					
ANR	5365136	PrimaryExpression	"""\\""\\n"""		5365087	1					
ANR	5365137	ElseStatement	else		5365087	0					
ANR	5365138	CompoundStatement		13:6:249:249	5365087	0					
ANR	5365139	ExpressionStatement	input_file . flags ( 0 )	170:2:5425:5444	5365087	0	True				
ANR	5365140	CallExpression	input_file . flags ( 0 )		5365087	0					
ANR	5365141	Callee	input_file . flags		5365087	0					
ANR	5365142	MemberAccess	input_file . flags		5365087	0					
ANR	5365143	Identifier	input_file		5365087	0					
ANR	5365144	Identifier	flags		5365087	1					
ANR	5365145	ArgumentList	0		5365087	1					
ANR	5365146	Argument	0		5365087	0					
ANR	5365147	PrimaryExpression	0		5365087	0					
ANR	5365148	ExpressionStatement	"process_file ( input_file , parameters , & errors )"	174:2:5499:5544	5365087	1	True				
ANR	5365149	CallExpression	"process_file ( input_file , parameters , & errors )"		5365087	0					
ANR	5365150	Callee	process_file		5365087	0					
ANR	5365151	Identifier	process_file		5365087	0					
ANR	5365152	ArgumentList	input_file		5365087	1					
ANR	5365153	Argument	input_file		5365087	0					
ANR	5365154	Identifier	input_file		5365087	0					
ANR	5365155	Argument	parameters		5365087	1					
ANR	5365156	Identifier	parameters		5365087	0					
ANR	5365157	Argument	& errors		5365087	2					
ANR	5365158	UnaryOperationExpression	& errors		5365087	0					
ANR	5365159	UnaryOperator	&		5365087	0					
ANR	5365160	Identifier	errors		5365087	1					
ANR	5365161	ExpressionStatement	cleanup ( )	175:2:5548:5557	5365087	2	True				
ANR	5365162	CallExpression	cleanup ( )		5365087	0					
ANR	5365163	Callee	cleanup		5365087	0					
ANR	5365164	Identifier	cleanup		5365087	0					
ANR	5365165	ArgumentList			5365087	1					
ANR	5365166	ExpressionStatement	errors . PrintErrors ( )	176:2:5561:5581	5365087	3	True				
ANR	5365167	CallExpression	errors . PrintErrors ( )		5365087	0					
ANR	5365168	Callee	errors . PrintErrors		5365087	0					
ANR	5365169	MemberAccess	errors . PrintErrors		5365087	0					
ANR	5365170	Identifier	errors		5365087	0					
ANR	5365171	Identifier	PrintErrors		5365087	1					
ANR	5365172	ArgumentList			5365087	1					
ANR	5365173	ReturnStatement	return 0 ;	179:1:5588:5596	5365087	5	True				
ANR	5365174	PrimaryExpression	0		5365087	0					
ANR	5365175	ReturnType	int		5365087	1					
ANR	5365176	Identifier	main		5365087	2					
ANR	5365177	ParameterList	"int argc , char * * argv"		5365087	3					
ANR	5365178	Parameter	int argc	155:5:5131:5138	5365087	0	True				
ANR	5365179	ParameterType	int		5365087	0					
ANR	5365180	Identifier	argc		5365087	1					
ANR	5365181	Parameter	char * * argv	155:15:5141:5151	5365087	1	True				
ANR	5365182	ParameterType	char * *		5365087	0					
ANR	5365183	Identifier	argv		5365087	1					
ANR	5365184	CFGEntryNode	ENTRY		5365087		True				
ANR	5365185	CFGExitNode	EXIT		5365087		True				
ANR	5365186	Symbol	argc		5365087						
ANR	5365187	Symbol	input_file		5365087						
ANR	5365188	Symbol	& errors		5365087						
ANR	5365189	Symbol	argv		5365087						
ANR	5365190	Symbol	parameters		5365087						
ANR	5365191	Symbol	errors		5365087						
ANR	5365192	Symbol	parameters . input_file		5365087						
ANR	5365193	Function	cleanup	182:0:5601:6481							
ANR	5365194	FunctionDef	cleanup ()		5365193	0					
ANR	5365195	CompoundStatement		184:0:5627:6481	5365193	0					
ANR	5365196	IdentifierDeclStatement	CollectionMapIterator ci ;	187:1:5758:5782	5365193	0	True				
ANR	5365197	IdentifierDecl	ci		5365193	0					
ANR	5365198	IdentifierDeclType	CollectionMapIterator		5365193	0					
ANR	5365199	Identifier	ci		5365193	1					
ANR	5365200	ForStatement	for ( ci = collections . begin ( ) ; ci != collections . end ( ) ; ci ++ )		5365193	1					
ANR	5365201	ForInit	ci = collections . begin ( ) ;	189:6:5791:5815	5365193	0	True				
ANR	5365202	AssignmentExpression	ci = collections . begin ( )		5365193	0		=			
ANR	5365203	Identifier	ci		5365193	0					
ANR	5365204	CallExpression	collections . begin ( )		5365193	1					
ANR	5365205	Callee	collections . begin		5365193	0					
ANR	5365206	MemberAccess	collections . begin		5365193	0					
ANR	5365207	Identifier	collections		5365193	0					
ANR	5365208	Identifier	begin		5365193	1					
ANR	5365209	ArgumentList			5365193	1					
ANR	5365210	Condition	ci != collections . end ( )	189:32:5817:5839	5365193	1	True				
ANR	5365211	EqualityExpression	ci != collections . end ( )		5365193	0		!=			
ANR	5365212	Identifier	ci		5365193	0					
ANR	5365213	CallExpression	collections . end ( )		5365193	1					
ANR	5365214	Callee	collections . end		5365193	0					
ANR	5365215	MemberAccess	collections . end		5365193	0					
ANR	5365216	Identifier	collections		5365193	0					
ANR	5365217	Identifier	end		5365193	1					
ANR	5365218	ArgumentList			5365193	1					
ANR	5365219	PostIncDecOperationExpression	ci ++	189:57:5842:5845	5365193	2	True				
ANR	5365220	Identifier	ci		5365193	0					
ANR	5365221	IncDec	++		5365193	1					
ANR	5365222	CompoundStatement		16:2:387:405	5365193	3					
ANR	5365223	IdentifierDeclStatement	ClassAdCollection * collection ;	190:2:5853:5882	5365193	0	True				
ANR	5365224	IdentifierDecl	* collection		5365193	0					
ANR	5365225	IdentifierDeclType	ClassAdCollection *		5365193	0					
ANR	5365226	Identifier	collection		5365193	1					
ANR	5365227	ExpressionStatement	collection = ci -> second	192:2:5887:5910	5365193	1	True				
ANR	5365228	AssignmentExpression	collection = ci -> second		5365193	0		=			
ANR	5365229	Identifier	collection		5365193	0					
ANR	5365230	PtrMemberAccess	ci -> second		5365193	1					
ANR	5365231	Identifier	ci		5365193	0					
ANR	5365232	Identifier	second		5365193	1					
ANR	5365233	IdentifierDeclStatement	LocalCollectionQuery query ;	194:2:5915:5942	5365193	2	True				
ANR	5365234	IdentifierDecl	query		5365193	0					
ANR	5365235	IdentifierDeclType	LocalCollectionQuery		5365193	0					
ANR	5365236	Identifier	query		5365193	1					
ANR	5365237	ExpressionStatement	query . Bind ( collection )	196:2:5949:5971	5365193	3	True				
ANR	5365238	CallExpression	query . Bind ( collection )		5365193	0					
ANR	5365239	Callee	query . Bind		5365193	0					
ANR	5365240	MemberAccess	query . Bind		5365193	0					
ANR	5365241	Identifier	query		5365193	0					
ANR	5365242	Identifier	Bind		5365193	1					
ANR	5365243	ArgumentList	collection		5365193	1					
ANR	5365244	Argument	collection		5365193	0					
ANR	5365245	Identifier	collection		5365193	0					
ANR	5365246	ExpressionStatement	"assert ( query . Query ( ""root"" , NULL ) )"	197:2:5975:6008	5365193	4	True				
ANR	5365247	CallExpression	"assert ( query . Query ( ""root"" , NULL ) )"		5365193	0					
ANR	5365248	Callee	assert		5365193	0					
ANR	5365249	Identifier	assert		5365193	0					
ANR	5365250	ArgumentList	"query . Query ( ""root"" , NULL )"		5365193	1					
ANR	5365251	Argument	"query . Query ( ""root"" , NULL )"		5365193	0					
ANR	5365252	CallExpression	"query . Query ( ""root"" , NULL )"		5365193	0					
ANR	5365253	Callee	query . Query		5365193	0					
ANR	5365254	MemberAccess	query . Query		5365193	0					
ANR	5365255	Identifier	query		5365193	0					
ANR	5365256	Identifier	Query		5365193	1					
ANR	5365257	ArgumentList	"""root"""		5365193	1					
ANR	5365258	Argument	"""root"""		5365193	0					
ANR	5365259	PrimaryExpression	"""root"""		5365193	0					
ANR	5365260	Argument	NULL		5365193	1					
ANR	5365261	Identifier	NULL		5365193	0					
ANR	5365262	IdentifierDeclStatement	string classad_key ;	199:2:6015:6033	5365193	5	True				
ANR	5365263	IdentifierDecl	classad_key		5365193	0					
ANR	5365264	IdentifierDeclType	string		5365193	0					
ANR	5365265	Identifier	classad_key		5365193	1					
ANR	5365266	ForStatement	"for ( query . ToFirst ( ) , query . Current ( classad_key ) ; ! query . IsAfterLast ( ) ; query . Next ( classad_key ) )"		5365193	6					
ANR	5365267	ForInit	"query . ToFirst ( ) , query . Current ( classad_key ) ;"	201:7:6045:6088	5365193	0	True				
ANR	5365268	Expression	"query . ToFirst ( ) , query . Current ( classad_key )"		5365193	0					
ANR	5365269	CallExpression	query . ToFirst ( )		5365193	0					
ANR	5365270	Callee	query . ToFirst		5365193	0					
ANR	5365271	MemberAccess	query . ToFirst		5365193	0					
ANR	5365272	Identifier	query		5365193	0					
ANR	5365273	Identifier	ToFirst		5365193	1					
ANR	5365274	ArgumentList			5365193	1					
ANR	5365275	CallExpression	query . Current ( classad_key )		5365193	1					
ANR	5365276	Callee	query . Current		5365193	0					
ANR	5365277	MemberAccess	query . Current		5365193	0					
ANR	5365278	Identifier	query		5365193	0					
ANR	5365279	Identifier	Current		5365193	1					
ANR	5365280	ArgumentList	classad_key		5365193	1					
ANR	5365281	Argument	classad_key		5365193	0					
ANR	5365282	Identifier	classad_key		5365193	0					
ANR	5365283	Condition	! query . IsAfterLast ( )	202:4:6095:6114	5365193	1	True				
ANR	5365284	UnaryOperationExpression	! query . IsAfterLast ( )		5365193	0					
ANR	5365285	UnaryOperator	!		5365193	0					
ANR	5365286	CallExpression	query . IsAfterLast ( )		5365193	1					
ANR	5365287	Callee	query . IsAfterLast		5365193	0					
ANR	5365288	MemberAccess	query . IsAfterLast		5365193	0					
ANR	5365289	Identifier	query		5365193	0					
ANR	5365290	Identifier	IsAfterLast		5365193	1					
ANR	5365291	ArgumentList			5365193	1					
ANR	5365292	CallExpression	query . Next ( classad_key )	202:26:6117:6139	5365193	2	True				
ANR	5365293	Callee	query . Next		5365193	0					
ANR	5365294	MemberAccess	query . Next		5365193	0					
ANR	5365295	Identifier	query		5365193	0					
ANR	5365296	Identifier	Next		5365193	1					
ANR	5365297	ArgumentList	classad_key		5365193	1					
ANR	5365298	Argument	classad_key		5365193	0					
ANR	5365299	Identifier	classad_key		5365193	0					
ANR	5365300	CompoundStatement		19:51:514:514	5365193	3					
ANR	5365301	ExpressionStatement	collection -> RemoveClassAd ( classad_key )	203:3:6147:6185	5365193	0	True				
ANR	5365302	CallExpression	collection -> RemoveClassAd ( classad_key )		5365193	0					
ANR	5365303	Callee	collection -> RemoveClassAd		5365193	0					
ANR	5365304	PtrMemberAccess	collection -> RemoveClassAd		5365193	0					
ANR	5365305	Identifier	collection		5365193	0					
ANR	5365306	Identifier	RemoveClassAd		5365193	1					
ANR	5365307	ArgumentList	classad_key		5365193	1					
ANR	5365308	Argument	classad_key		5365193	0					
ANR	5365309	Identifier	classad_key		5365193	0					
ANR	5365310	BreakStatement	break ;	204:3:6190:6195	5365193	1	True				
ANR	5365311	ExpressionStatement	collections . erase ( ci )	206:2:6203:6224	5365193	7	True				
ANR	5365312	CallExpression	collections . erase ( ci )		5365193	0					
ANR	5365313	Callee	collections . erase		5365193	0					
ANR	5365314	MemberAccess	collections . erase		5365193	0					
ANR	5365315	Identifier	collections		5365193	0					
ANR	5365316	Identifier	erase		5365193	1					
ANR	5365317	ArgumentList	ci		5365193	1					
ANR	5365318	Argument	ci		5365193	0					
ANR	5365319	Identifier	ci		5365193	0					
ANR	5365320	Statement	delete	207:2:6228:6233	5365193	8	True				
ANR	5365321	ExpressionStatement	collection	207:9:6235:6245	5365193	9	True				
ANR	5365322	Identifier	collection		5365193	0					
ANR	5365323	IdentifierDeclStatement	ClassAdMapIterator i ;	210:1:6252:6272	5365193	2	True				
ANR	5365324	IdentifierDecl	i		5365193	0					
ANR	5365325	IdentifierDeclType	ClassAdMapIterator		5365193	0					
ANR	5365326	Identifier	i		5365193	1					
ANR	5365327	ForStatement	for ( i = classads . begin ( ) ; i != classads . end ( ) ; i ++ )		5365193	3					
ANR	5365328	ForInit	i = classads . begin ( ) ;	211:6:6280:6300	5365193	0	True				
ANR	5365329	AssignmentExpression	i = classads . begin ( )		5365193	0		=			
ANR	5365330	Identifier	i		5365193	0					
ANR	5365331	CallExpression	classads . begin ( )		5365193	1					
ANR	5365332	Callee	classads . begin		5365193	0					
ANR	5365333	MemberAccess	classads . begin		5365193	0					
ANR	5365334	Identifier	classads		5365193	0					
ANR	5365335	Identifier	begin		5365193	1					
ANR	5365336	ArgumentList			5365193	1					
ANR	5365337	Condition	i != classads . end ( )	211:28:6302:6320	5365193	1	True				
ANR	5365338	EqualityExpression	i != classads . end ( )		5365193	0		!=			
ANR	5365339	Identifier	i		5365193	0					
ANR	5365340	CallExpression	classads . end ( )		5365193	1					
ANR	5365341	Callee	classads . end		5365193	0					
ANR	5365342	MemberAccess	classads . end		5365193	0					
ANR	5365343	Identifier	classads		5365193	0					
ANR	5365344	Identifier	end		5365193	1					
ANR	5365345	ArgumentList			5365193	1					
ANR	5365346	PostIncDecOperationExpression	i ++	211:49:6323:6325	5365193	2	True				
ANR	5365347	Identifier	i		5365193	0					
ANR	5365348	IncDec	++		5365193	1					
ANR	5365349	CompoundStatement		29:2:704:720	5365193	3					
ANR	5365350	IdentifierDeclStatement	ClassAd * classad ;	212:2:6332:6348	5365193	0	True				
ANR	5365351	IdentifierDecl	* classad		5365193	0					
ANR	5365352	IdentifierDeclType	ClassAd *		5365193	0					
ANR	5365353	Identifier	classad		5365193	1					
ANR	5365354	ExpressionStatement	classad = i -> second	215:2:6356:6375	5365193	1	True				
ANR	5365355	AssignmentExpression	classad = i -> second		5365193	0		=			
ANR	5365356	Identifier	classad		5365193	0					
ANR	5365357	PtrMemberAccess	i -> second		5365193	1					
ANR	5365358	Identifier	i		5365193	0					
ANR	5365359	Identifier	second		5365193	1					
ANR	5365360	ExpressionStatement	classads . erase ( i )	216:2:6379:6396	5365193	2	True				
ANR	5365361	CallExpression	classads . erase ( i )		5365193	0					
ANR	5365362	Callee	classads . erase		5365193	0					
ANR	5365363	MemberAccess	classads . erase		5365193	0					
ANR	5365364	Identifier	classads		5365193	0					
ANR	5365365	Identifier	erase		5365193	1					
ANR	5365366	ArgumentList	i		5365193	1					
ANR	5365367	Argument	i		5365193	0					
ANR	5365368	Identifier	i		5365193	0					
ANR	5365369	IfStatement	if ( ! is_classad_in_collection ( i -> first ) )		5365193	3					
ANR	5365370	Condition	! is_classad_in_collection ( i -> first )	217:6:6404:6438	5365193	0	True				
ANR	5365371	UnaryOperationExpression	! is_classad_in_collection ( i -> first )		5365193	0					
ANR	5365372	UnaryOperator	!		5365193	0					
ANR	5365373	CallExpression	is_classad_in_collection ( i -> first )		5365193	1					
ANR	5365374	Callee	is_classad_in_collection		5365193	0					
ANR	5365375	Identifier	is_classad_in_collection		5365193	0					
ANR	5365376	ArgumentList	i -> first		5365193	1					
ANR	5365377	Argument	i -> first		5365193	0					
ANR	5365378	PtrMemberAccess	i -> first		5365193	0					
ANR	5365379	Identifier	i		5365193	0					
ANR	5365380	Identifier	first		5365193	1					
ANR	5365381	CompoundStatement		34:43:813:813	5365193	1					
ANR	5365382	Statement	delete	218:3:6446:6451	5365193	0	True				
ANR	5365383	ExpressionStatement	classad	218:10:6453:6460	5365193	1	True				
ANR	5365384	Identifier	classad		5365193	0					
ANR	5365385	ReturnStatement	return ;	221:1:6470:6476	5365193	4	True				
ANR	5365386	ReturnType	static void		5365193	1					
ANR	5365387	Identifier	cleanup		5365193	2					
ANR	5365388	ParameterList			5365193	3					
ANR	5365389	CFGEntryNode	ENTRY		5365193		True				
ANR	5365390	CFGExitNode	EXIT		5365193		True				
ANR	5365391	Symbol	i -> second		5365193						
ANR	5365392	Symbol	NULL		5365193						
ANR	5365393	Symbol	ci		5365193						
ANR	5365394	Symbol	query		5365193						
ANR	5365395	Symbol	query . Query		5365193						
ANR	5365396	Symbol	ci -> second		5365193						
ANR	5365397	Symbol	i		5365193						
ANR	5365398	Symbol	collection		5365193						
ANR	5365399	Symbol	* ci		5365193						
ANR	5365400	Symbol	is_classad_in_collection		5365193						
ANR	5365401	Symbol	query . IsAfterLast		5365193						
ANR	5365402	Symbol	* i		5365193						
ANR	5365403	Symbol	collections		5365193						
ANR	5365404	Symbol	i -> first		5365193						
ANR	5365405	Symbol	classads . end		5365193						
ANR	5365406	Symbol	classad_key		5365193						
ANR	5365407	Symbol	collections . end		5365193						
ANR	5365408	Symbol	classads . begin		5365193						
ANR	5365409	Symbol	classad		5365193						
ANR	5365410	Symbol	classads		5365193						
ANR	5365411	Symbol	collections . begin		5365193						
ANR	5365412	DeclStmt									
ANR	5365413	Decl							"map < string , bool >"	"map < string , bool >"	in_collection
ANR	5365414	Function	mark_classad_in_collection	228:0:6518:6610							
ANR	5365415	FunctionDef	mark_classad_in_collection (string name)		5365414	0					
ANR	5365416	CompoundStatement		229:0:6570:6610	5365414	0					
ANR	5365417	ExpressionStatement	in_collection [ name ] = true	230:1:6573:6599	5365414	0	True				
ANR	5365418	AssignmentExpression	in_collection [ name ] = true		5365414	0		=			
ANR	5365419	ArrayIndexing	in_collection [ name ]		5365414	0					
ANR	5365420	Identifier	in_collection		5365414	0					
ANR	5365421	Identifier	name		5365414	1					
ANR	5365422	Identifier	true		5365414	1					
ANR	5365423	ReturnStatement	return ;	231:1:6602:6608	5365414	1	True				
ANR	5365424	ReturnType	static void		5365414	1					
ANR	5365425	Identifier	mark_classad_in_collection		5365414	2					
ANR	5365426	ParameterList	string name		5365414	3					
ANR	5365427	Parameter	string name	228:39:6557:6567	5365414	0	True				
ANR	5365428	ParameterType	string		5365414	0					
ANR	5365429	Identifier	name		5365414	1					
ANR	5365430	CFGEntryNode	ENTRY		5365414		True				
ANR	5365431	CFGExitNode	EXIT		5365414		True				
ANR	5365432	Symbol	* name		5365414						
ANR	5365433	Symbol	name		5365414						
ANR	5365434	Symbol	true		5365414						
ANR	5365435	Symbol	* in_collection		5365414						
ANR	5365436	Symbol	in_collection		5365414						
ANR	5365437	Function	unmark_classad_in_collection	234:0:6613:6700							
ANR	5365438	FunctionDef	unmark_classad_in_collection (string name)		5365437	0					
ANR	5365439	CompoundStatement		235:0:6667:6700	5365437	0					
ANR	5365440	ExpressionStatement	in_collection [ name ] = false	236:1:6670:6697	5365437	0	True				
ANR	5365441	AssignmentExpression	in_collection [ name ] = false		5365437	0		=			
ANR	5365442	ArrayIndexing	in_collection [ name ]		5365437	0					
ANR	5365443	Identifier	in_collection		5365437	0					
ANR	5365444	Identifier	name		5365437	1					
ANR	5365445	Identifier	false		5365437	1					
ANR	5365446	ReturnType	static void		5365437	1					
ANR	5365447	Identifier	unmark_classad_in_collection		5365437	2					
ANR	5365448	ParameterList	string name		5365437	3					
ANR	5365449	Parameter	string name	234:41:6654:6664	5365437	0	True				
ANR	5365450	ParameterType	string		5365437	0					
ANR	5365451	Identifier	name		5365437	1					
ANR	5365452	CFGEntryNode	ENTRY		5365437		True				
ANR	5365453	CFGExitNode	EXIT		5365437		True				
ANR	5365454	Symbol	* name		5365437						
ANR	5365455	Symbol	name		5365437						
ANR	5365456	Symbol	false		5365437						
ANR	5365457	Symbol	* in_collection		5365437						
ANR	5365458	Symbol	in_collection		5365437						
ANR	5365459	Function	is_classad_in_collection	239:0:6703:6784							
ANR	5365460	FunctionDef	is_classad_in_collection (string name)		5365459	0					
ANR	5365461	CompoundStatement		240:0:6753:6784	5365459	0					
ANR	5365462	ReturnStatement	return in_collection [ name ] ;	241:1:6756:6782	5365459	0	True				
ANR	5365463	ArrayIndexing	in_collection [ name ]		5365459	0					
ANR	5365464	Identifier	in_collection		5365459	0					
ANR	5365465	Identifier	name		5365459	1					
ANR	5365466	ReturnType	static bool		5365459	1					
ANR	5365467	Identifier	is_classad_in_collection		5365459	2					
ANR	5365468	ParameterList	string name		5365459	3					
ANR	5365469	Parameter	string name	239:37:6740:6750	5365459	0	True				
ANR	5365470	ParameterType	string		5365459	0					
ANR	5365471	Identifier	name		5365459	1					
ANR	5365472	CFGEntryNode	ENTRY		5365459		True				
ANR	5365473	CFGExitNode	EXIT		5365459		True				
ANR	5365474	Symbol	* name		5365459						
ANR	5365475	Symbol	name		5365459						
ANR	5365476	Symbol	* in_collection		5365459						
ANR	5365477	Symbol	in_collection		5365459						
ANR	5365478	Function	process_file	252:0:7136:9362							
ANR	5365479	FunctionDef	"process_file (ifstream & input_file , const Parameters & parameters , ErrorCount * errors)"		5365478	0					
ANR	5365480	CompoundStatement		255:0:7237:9362	5365478	0					
ANR	5365481	IdentifierDeclStatement	int line_number ;	256:1:7240:7258	5365478	0	True				
ANR	5365482	IdentifierDecl	line_number		5365478	0					
ANR	5365483	IdentifierDeclType	int		5365478	0					
ANR	5365484	Identifier	line_number		5365478	1					
ANR	5365485	IdentifierDeclStatement	string line ;	257:1:7261:7272	5365478	1	True				
ANR	5365486	IdentifierDecl	line		5365478	0					
ANR	5365487	IdentifierDeclType	string		5365478	0					
ANR	5365488	Identifier	line		5365478	1					
ANR	5365489	ExpressionStatement	line_number = 0	259:1:7276:7291	5365478	2	True				
ANR	5365490	AssignmentExpression	line_number = 0		5365478	0		=			
ANR	5365491	Identifier	line_number		5365478	0					
ANR	5365492	PrimaryExpression	0		5365478	1					
ANR	5365493	WhileStatement	while ( 1 )		5365478	3					
ANR	5365494	Condition	1	260:8:7301:7301	5365478	0	True				
ANR	5365495	PrimaryExpression	1		5365478	0					
ANR	5365496	CompoundStatement		13:2:164:218	5365478	1					
ANR	5365497	IdentifierDeclStatement	int token_start ;	261:2:7308:7323	5365478	0	True				
ANR	5365498	IdentifierDecl	token_start		5365478	0					
ANR	5365499	IdentifierDeclType	int		5365478	0					
ANR	5365500	Identifier	token_start		5365478	1					
ANR	5365501	ExpressionStatement	"getline ( input_file , line , '\\n' )"	263:2:7328:7359	5365478	1	True				
ANR	5365502	CallExpression	"getline ( input_file , line , '\\n' )"		5365478	0					
ANR	5365503	Callee	getline		5365478	0					
ANR	5365504	Identifier	getline		5365478	0					
ANR	5365505	ArgumentList	input_file		5365478	1					
ANR	5365506	Argument	input_file		5365478	0					
ANR	5365507	Identifier	input_file		5365478	0					
ANR	5365508	Argument	line		5365478	1					
ANR	5365509	Identifier	line		5365478	0					
ANR	5365510	Argument	'\\n'		5365478	2					
ANR	5365511	PrimaryExpression	'\\n'		5365478	0					
ANR	5365512	ExpressionStatement	line_number ++	264:2:7363:7376	5365478	2	True				
ANR	5365513	PostIncDecOperationExpression	line_number ++		5365478	0					
ANR	5365514	Identifier	line_number		5365478	0					
ANR	5365515	IncDec	++		5365478	1					
ANR	5365516	ExpressionStatement	token_start = 0	266:2:7383:7398	5365478	3	True				
ANR	5365517	AssignmentExpression	token_start = 0		5365478	0		=			
ANR	5365518	Identifier	token_start		5365478	0					
ANR	5365519	PrimaryExpression	0		5365478	1					
ANR	5365520	IdentifierDeclStatement	"string first_token = extract_token ( & token_start , line ) ;"	267:2:7402:7456	5365478	4	True				
ANR	5365521	IdentifierDecl	"first_token = extract_token ( & token_start , line )"		5365478	0					
ANR	5365522	IdentifierDeclType	string		5365478	0					
ANR	5365523	Identifier	first_token		5365478	1					
ANR	5365524	AssignmentExpression	"first_token = extract_token ( & token_start , line )"		5365478	2		=			
ANR	5365525	Identifier	first_token		5365478	0					
ANR	5365526	CallExpression	"extract_token ( & token_start , line )"		5365478	1					
ANR	5365527	Callee	extract_token		5365478	0					
ANR	5365528	Identifier	extract_token		5365478	0					
ANR	5365529	ArgumentList	& token_start		5365478	1					
ANR	5365530	Argument	& token_start		5365478	0					
ANR	5365531	UnaryOperationExpression	& token_start		5365478	0					
ANR	5365532	UnaryOperator	&		5365478	0					
ANR	5365533	Identifier	token_start		5365478	1					
ANR	5365534	Argument	line		5365478	1					
ANR	5365535	Identifier	line		5365478	0					
ANR	5365536	IfStatement	if ( input_file . eof ( ) )		5365478	5					
ANR	5365537	Condition	input_file . eof ( )	269:6:7467:7482	5365478	0	True				
ANR	5365538	CallExpression	input_file . eof ( )		5365478	0					
ANR	5365539	Callee	input_file . eof		5365478	0					
ANR	5365540	MemberAccess	input_file . eof		5365478	0					
ANR	5365541	Identifier	input_file		5365478	0					
ANR	5365542	Identifier	eof		5365478	1					
ANR	5365543	ArgumentList			5365478	1					
ANR	5365544	CompoundStatement		15:24:247:247	5365478	1					
ANR	5365545	BreakStatement	break ;	270:3:7490:7495	5365478	0	True				
ANR	5365546	ElseStatement	else		5365478	0					
ANR	5365547	IfStatement	if ( first_token [ 0 ] == '#' )		5365478	0					
ANR	5365548	Condition	first_token [ 0 ] == '#'	271:13:7510:7530	5365478	0	True				
ANR	5365549	EqualityExpression	first_token [ 0 ] == '#'		5365478	0		==			
ANR	5365550	ArrayIndexing	first_token [ 0 ]		5365478	0					
ANR	5365551	Identifier	first_token		5365478	0					
ANR	5365552	PrimaryExpression	0		5365478	1					
ANR	5365553	PrimaryExpression	'#'		5365478	1					
ANR	5365554	CompoundStatement		17:36:295:295	5365478	1					
ANR	5365555	ContinueStatement	continue ;	273:3:7567:7575	5365478	0	True				
ANR	5365556	ElseStatement	else		5365478	0					
ANR	5365557	IfStatement	"if ( ! first_token . compare ( ""begin-classad"" ) )"		5365478	0					
ANR	5365558	Condition	"! first_token . compare ( ""begin-classad"" )"	274:13:7590:7626	5365478	0	True				
ANR	5365559	UnaryOperationExpression	"! first_token . compare ( ""begin-classad"" )"		5365478	0					
ANR	5365560	UnaryOperator	!		5365478	0					
ANR	5365561	CallExpression	"first_token . compare ( ""begin-classad"" )"		5365478	1					
ANR	5365562	Callee	first_token . compare		5365478	0					
ANR	5365563	MemberAccess	first_token . compare		5365478	0					
ANR	5365564	Identifier	first_token		5365478	0					
ANR	5365565	Identifier	compare		5365478	1					
ANR	5365566	ArgumentList	"""begin-classad"""		5365478	1					
ANR	5365567	Argument	"""begin-classad"""		5365478	0					
ANR	5365568	PrimaryExpression	"""begin-classad"""		5365478	0					
ANR	5365569	CompoundStatement		20:52:391:391	5365478	1					
ANR	5365570	ExpressionStatement	"process_classad ( input_file , line , token_start , & line_number , parameters , errors )"	275:3:7634:7722	5365478	0	True				
ANR	5365571	CallExpression	"process_classad ( input_file , line , token_start , & line_number , parameters , errors )"		5365478	0					
ANR	5365572	Callee	process_classad		5365478	0					
ANR	5365573	Identifier	process_classad		5365478	0					
ANR	5365574	ArgumentList	input_file		5365478	1					
ANR	5365575	Argument	input_file		5365478	0					
ANR	5365576	Identifier	input_file		5365478	0					
ANR	5365577	Argument	line		5365478	1					
ANR	5365578	Identifier	line		5365478	0					
ANR	5365579	Argument	token_start		5365478	2					
ANR	5365580	Identifier	token_start		5365478	0					
ANR	5365581	Argument	& line_number		5365478	3					
ANR	5365582	UnaryOperationExpression	& line_number		5365478	0					
ANR	5365583	UnaryOperator	&		5365478	0					
ANR	5365584	Identifier	line_number		5365478	1					
ANR	5365585	Argument	parameters		5365478	4					
ANR	5365586	Identifier	parameters		5365478	0					
ANR	5365587	Argument	errors		5365478	5					
ANR	5365588	Identifier	errors		5365478	0					
ANR	5365589	ElseStatement	else		5365478	0					
ANR	5365590	IfStatement	"if ( ! first_token . compare ( ""print-classad"" ) )"		5365478	0					
ANR	5365591	Condition	"! first_token . compare ( ""print-classad"" )"	277:13:7737:7773	5365478	0	True				
ANR	5365592	UnaryOperationExpression	"! first_token . compare ( ""print-classad"" )"		5365478	0					
ANR	5365593	UnaryOperator	!		5365478	0					
ANR	5365594	CallExpression	"first_token . compare ( ""print-classad"" )"		5365478	1					
ANR	5365595	Callee	first_token . compare		5365478	0					
ANR	5365596	MemberAccess	first_token . compare		5365478	0					
ANR	5365597	Identifier	first_token		5365478	0					
ANR	5365598	Identifier	compare		5365478	1					
ANR	5365599	ArgumentList	"""print-classad"""		5365478	1					
ANR	5365600	Argument	"""print-classad"""		5365478	0					
ANR	5365601	PrimaryExpression	"""print-classad"""		5365478	0					
ANR	5365602	CompoundStatement		23:52:538:538	5365478	1					
ANR	5365603	ExpressionStatement	"process_print_classad ( line , token_start , line_number , parameters , errors )"	278:3:7781:7864	5365478	0	True				
ANR	5365604	CallExpression	"process_print_classad ( line , token_start , line_number , parameters , errors )"		5365478	0					
ANR	5365605	Callee	process_print_classad		5365478	0					
ANR	5365606	Identifier	process_print_classad		5365478	0					
ANR	5365607	ArgumentList	line		5365478	1					
ANR	5365608	Argument	line		5365478	0					
ANR	5365609	Identifier	line		5365478	0					
ANR	5365610	Argument	token_start		5365478	1					
ANR	5365611	Identifier	token_start		5365478	0					
ANR	5365612	Argument	line_number		5365478	2					
ANR	5365613	Identifier	line_number		5365478	0					
ANR	5365614	Argument	parameters		5365478	3					
ANR	5365615	Identifier	parameters		5365478	0					
ANR	5365616	Argument	errors		5365478	4					
ANR	5365617	Identifier	errors		5365478	0					
ANR	5365618	ElseStatement	else		5365478	0					
ANR	5365619	IfStatement	"if ( ! first_token . compare ( ""print-classad-xml"" ) )"		5365478	0					
ANR	5365620	Condition	"! first_token . compare ( ""print-classad-xml"" )"	280:13:7879:7919	5365478	0	True				
ANR	5365621	UnaryOperationExpression	"! first_token . compare ( ""print-classad-xml"" )"		5365478	0					
ANR	5365622	UnaryOperator	!		5365478	0					
ANR	5365623	CallExpression	"first_token . compare ( ""print-classad-xml"" )"		5365478	1					
ANR	5365624	Callee	first_token . compare		5365478	0					
ANR	5365625	MemberAccess	first_token . compare		5365478	0					
ANR	5365626	Identifier	first_token		5365478	0					
ANR	5365627	Identifier	compare		5365478	1					
ANR	5365628	ArgumentList	"""print-classad-xml"""		5365478	1					
ANR	5365629	Argument	"""print-classad-xml"""		5365478	0					
ANR	5365630	PrimaryExpression	"""print-classad-xml"""		5365478	0					
ANR	5365631	CompoundStatement		26:56:684:684	5365478	1					
ANR	5365632	ExpressionStatement	"process_print_classad_xml ( line , token_start , line_number , parameters , errors )"	281:3:7927:8042	5365478	0	True				
ANR	5365633	CallExpression	"process_print_classad_xml ( line , token_start , line_number , parameters , errors )"		5365478	0					
ANR	5365634	Callee	process_print_classad_xml		5365478	0					
ANR	5365635	Identifier	process_print_classad_xml		5365478	0					
ANR	5365636	ArgumentList	line		5365478	1					
ANR	5365637	Argument	line		5365478	0					
ANR	5365638	Identifier	line		5365478	0					
ANR	5365639	Argument	token_start		5365478	1					
ANR	5365640	Identifier	token_start		5365478	0					
ANR	5365641	Argument	line_number		5365478	2					
ANR	5365642	Identifier	line_number		5365478	0					
ANR	5365643	Argument	parameters		5365478	3					
ANR	5365644	Identifier	parameters		5365478	0					
ANR	5365645	Argument	errors		5365478	4					
ANR	5365646	Identifier	errors		5365478	0					
ANR	5365647	ElseStatement	else		5365478	0					
ANR	5365648	IfStatement	"if ( ! first_token . compare ( ""test-match"" ) )"		5365478	0					
ANR	5365649	Condition	"! first_token . compare ( ""test-match"" )"	283:13:8057:8090	5365478	0	True				
ANR	5365650	UnaryOperationExpression	"! first_token . compare ( ""test-match"" )"		5365478	0					
ANR	5365651	UnaryOperator	!		5365478	0					
ANR	5365652	CallExpression	"first_token . compare ( ""test-match"" )"		5365478	1					
ANR	5365653	Callee	first_token . compare		5365478	0					
ANR	5365654	MemberAccess	first_token . compare		5365478	0					
ANR	5365655	Identifier	first_token		5365478	0					
ANR	5365656	Identifier	compare		5365478	1					
ANR	5365657	ArgumentList	"""test-match"""		5365478	1					
ANR	5365658	Argument	"""test-match"""		5365478	0					
ANR	5365659	PrimaryExpression	"""test-match"""		5365478	0					
ANR	5365660	CompoundStatement		29:49:855:855	5365478	1					
ANR	5365661	ExpressionStatement	"process_test_match ( line , token_start , line_number , parameters , errors )"	284:3:8098:8178	5365478	0	True				
ANR	5365662	CallExpression	"process_test_match ( line , token_start , line_number , parameters , errors )"		5365478	0					
ANR	5365663	Callee	process_test_match		5365478	0					
ANR	5365664	Identifier	process_test_match		5365478	0					
ANR	5365665	ArgumentList	line		5365478	1					
ANR	5365666	Argument	line		5365478	0					
ANR	5365667	Identifier	line		5365478	0					
ANR	5365668	Argument	token_start		5365478	1					
ANR	5365669	Identifier	token_start		5365478	0					
ANR	5365670	Argument	line_number		5365478	2					
ANR	5365671	Identifier	line_number		5365478	0					
ANR	5365672	Argument	parameters		5365478	3					
ANR	5365673	Identifier	parameters		5365478	0					
ANR	5365674	Argument	errors		5365478	4					
ANR	5365675	Identifier	errors		5365478	0					
ANR	5365676	ElseStatement	else		5365478	0					
ANR	5365677	IfStatement	"if ( ! first_token . compare ( ""test-lexer-one-token"" ) )"		5365478	0					
ANR	5365678	Condition	"! first_token . compare ( ""test-lexer-one-token"" )"	286:13:8193:8236	5365478	0	True				
ANR	5365679	UnaryOperationExpression	"! first_token . compare ( ""test-lexer-one-token"" )"		5365478	0					
ANR	5365680	UnaryOperator	!		5365478	0					
ANR	5365681	CallExpression	"first_token . compare ( ""test-lexer-one-token"" )"		5365478	1					
ANR	5365682	Callee	first_token . compare		5365478	0					
ANR	5365683	MemberAccess	first_token . compare		5365478	0					
ANR	5365684	Identifier	first_token		5365478	0					
ANR	5365685	Identifier	compare		5365478	1					
ANR	5365686	ArgumentList	"""test-lexer-one-token"""		5365478	1					
ANR	5365687	Argument	"""test-lexer-one-token"""		5365478	0					
ANR	5365688	PrimaryExpression	"""test-lexer-one-token"""		5365478	0					
ANR	5365689	CompoundStatement		32:59:1001:1001	5365478	1					
ANR	5365690	ExpressionStatement	"process_test_lexer_one_token ( line , token_start , line_number , parameters , errors )"	287:3:8244:8335	5365478	0	True				
ANR	5365691	CallExpression	"process_test_lexer_one_token ( line , token_start , line_number , parameters , errors )"		5365478	0					
ANR	5365692	Callee	process_test_lexer_one_token		5365478	0					
ANR	5365693	Identifier	process_test_lexer_one_token		5365478	0					
ANR	5365694	ArgumentList	line		5365478	1					
ANR	5365695	Argument	line		5365478	0					
ANR	5365696	Identifier	line		5365478	0					
ANR	5365697	Argument	token_start		5365478	1					
ANR	5365698	Identifier	token_start		5365478	0					
ANR	5365699	Argument	line_number		5365478	2					
ANR	5365700	Identifier	line_number		5365478	0					
ANR	5365701	Argument	parameters		5365478	3					
ANR	5365702	Identifier	parameters		5365478	0					
ANR	5365703	Argument	errors		5365478	4					
ANR	5365704	Identifier	errors		5365478	0					
ANR	5365705	ElseStatement	else		5365478	0					
ANR	5365706	IfStatement	"if ( ! first_token . compare ( ""evaluate"" ) )"		5365478	0					
ANR	5365707	Condition	"! first_token . compare ( ""evaluate"" )"	289:13:8350:8381	5365478	0	True				
ANR	5365708	UnaryOperationExpression	"! first_token . compare ( ""evaluate"" )"		5365478	0					
ANR	5365709	UnaryOperator	!		5365478	0					
ANR	5365710	CallExpression	"first_token . compare ( ""evaluate"" )"		5365478	1					
ANR	5365711	Callee	first_token . compare		5365478	0					
ANR	5365712	MemberAccess	first_token . compare		5365478	0					
ANR	5365713	Identifier	first_token		5365478	0					
ANR	5365714	Identifier	compare		5365478	1					
ANR	5365715	ArgumentList	"""evaluate"""		5365478	1					
ANR	5365716	Argument	"""evaluate"""		5365478	0					
ANR	5365717	PrimaryExpression	"""evaluate"""		5365478	0					
ANR	5365718	CompoundStatement		35:47:1146:1146	5365478	1					
ANR	5365719	ExpressionStatement	"process_evaluate ( line , token_start , line_number , parameters , errors )"	290:3:8389:8465	5365478	0	True				
ANR	5365720	CallExpression	"process_evaluate ( line , token_start , line_number , parameters , errors )"		5365478	0					
ANR	5365721	Callee	process_evaluate		5365478	0					
ANR	5365722	Identifier	process_evaluate		5365478	0					
ANR	5365723	ArgumentList	line		5365478	1					
ANR	5365724	Argument	line		5365478	0					
ANR	5365725	Identifier	line		5365478	0					
ANR	5365726	Argument	token_start		5365478	1					
ANR	5365727	Identifier	token_start		5365478	0					
ANR	5365728	Argument	line_number		5365478	2					
ANR	5365729	Identifier	line_number		5365478	0					
ANR	5365730	Argument	parameters		5365478	3					
ANR	5365731	Identifier	parameters		5365478	0					
ANR	5365732	Argument	errors		5365478	4					
ANR	5365733	Identifier	errors		5365478	0					
ANR	5365734	ElseStatement	else		5365478	0					
ANR	5365735	IfStatement	"if ( ! first_token . compare ( ""make-collection"" ) )"		5365478	0					
ANR	5365736	Condition	"! first_token . compare ( ""make-collection"" )"	292:13:8480:8518	5365478	0	True				
ANR	5365737	UnaryOperationExpression	"! first_token . compare ( ""make-collection"" )"		5365478	0					
ANR	5365738	UnaryOperator	!		5365478	0					
ANR	5365739	CallExpression	"first_token . compare ( ""make-collection"" )"		5365478	1					
ANR	5365740	Callee	first_token . compare		5365478	0					
ANR	5365741	MemberAccess	first_token . compare		5365478	0					
ANR	5365742	Identifier	first_token		5365478	0					
ANR	5365743	Identifier	compare		5365478	1					
ANR	5365744	ArgumentList	"""make-collection"""		5365478	1					
ANR	5365745	Argument	"""make-collection"""		5365478	0					
ANR	5365746	PrimaryExpression	"""make-collection"""		5365478	0					
ANR	5365747	CompoundStatement		38:54:1283:1283	5365478	1					
ANR	5365748	ExpressionStatement	"process_make_collection ( line , token_start , line_number , parameters , errors )"	293:3:8526:8609	5365478	0	True				
ANR	5365749	CallExpression	"process_make_collection ( line , token_start , line_number , parameters , errors )"		5365478	0					
ANR	5365750	Callee	process_make_collection		5365478	0					
ANR	5365751	Identifier	process_make_collection		5365478	0					
ANR	5365752	ArgumentList	line		5365478	1					
ANR	5365753	Argument	line		5365478	0					
ANR	5365754	Identifier	line		5365478	0					
ANR	5365755	Argument	token_start		5365478	1					
ANR	5365756	Identifier	token_start		5365478	0					
ANR	5365757	Argument	line_number		5365478	2					
ANR	5365758	Identifier	line_number		5365478	0					
ANR	5365759	Argument	parameters		5365478	3					
ANR	5365760	Identifier	parameters		5365478	0					
ANR	5365761	Argument	errors		5365478	4					
ANR	5365762	Identifier	errors		5365478	0					
ANR	5365763	ElseStatement	else		5365478	0					
ANR	5365764	IfStatement	"if ( ! first_token . compare ( ""add-to-collection"" ) )"		5365478	0					
ANR	5365765	Condition	"! first_token . compare ( ""add-to-collection"" )"	295:13:8624:8664	5365478	0	True				
ANR	5365766	UnaryOperationExpression	"! first_token . compare ( ""add-to-collection"" )"		5365478	0					
ANR	5365767	UnaryOperator	!		5365478	0					
ANR	5365768	CallExpression	"first_token . compare ( ""add-to-collection"" )"		5365478	1					
ANR	5365769	Callee	first_token . compare		5365478	0					
ANR	5365770	MemberAccess	first_token . compare		5365478	0					
ANR	5365771	Identifier	first_token		5365478	0					
ANR	5365772	Identifier	compare		5365478	1					
ANR	5365773	ArgumentList	"""add-to-collection"""		5365478	1					
ANR	5365774	Argument	"""add-to-collection"""		5365478	0					
ANR	5365775	PrimaryExpression	"""add-to-collection"""		5365478	0					
ANR	5365776	CompoundStatement		41:56:1429:1429	5365478	1					
ANR	5365777	ExpressionStatement	"process_add_to_collection ( line , token_start , line_number , parameters , errors )"	296:3:8672:8757	5365478	0	True				
ANR	5365778	CallExpression	"process_add_to_collection ( line , token_start , line_number , parameters , errors )"		5365478	0					
ANR	5365779	Callee	process_add_to_collection		5365478	0					
ANR	5365780	Identifier	process_add_to_collection		5365478	0					
ANR	5365781	ArgumentList	line		5365478	1					
ANR	5365782	Argument	line		5365478	0					
ANR	5365783	Identifier	line		5365478	0					
ANR	5365784	Argument	token_start		5365478	1					
ANR	5365785	Identifier	token_start		5365478	0					
ANR	5365786	Argument	line_number		5365478	2					
ANR	5365787	Identifier	line_number		5365478	0					
ANR	5365788	Argument	parameters		5365478	3					
ANR	5365789	Identifier	parameters		5365478	0					
ANR	5365790	Argument	errors		5365478	4					
ANR	5365791	Identifier	errors		5365478	0					
ANR	5365792	ElseStatement	else		5365478	0					
ANR	5365793	IfStatement	"if ( ! first_token . compare ( ""truncate-log"" ) )"		5365478	0					
ANR	5365794	Condition	"! first_token . compare ( ""truncate-log"" )"	298:13:8772:8807	5365478	0	True				
ANR	5365795	UnaryOperationExpression	"! first_token . compare ( ""truncate-log"" )"		5365478	0					
ANR	5365796	UnaryOperator	!		5365478	0					
ANR	5365797	CallExpression	"first_token . compare ( ""truncate-log"" )"		5365478	1					
ANR	5365798	Callee	first_token . compare		5365478	0					
ANR	5365799	MemberAccess	first_token . compare		5365478	0					
ANR	5365800	Identifier	first_token		5365478	0					
ANR	5365801	Identifier	compare		5365478	1					
ANR	5365802	ArgumentList	"""truncate-log"""		5365478	1					
ANR	5365803	Argument	"""truncate-log"""		5365478	0					
ANR	5365804	PrimaryExpression	"""truncate-log"""		5365478	0					
ANR	5365805	CompoundStatement		44:51:1572:1572	5365478	1					
ANR	5365806	ExpressionStatement	"process_truncate_log ( line , token_start , line_number , parameters , errors )"	299:3:8815:8896	5365478	0	True				
ANR	5365807	CallExpression	"process_truncate_log ( line , token_start , line_number , parameters , errors )"		5365478	0					
ANR	5365808	Callee	process_truncate_log		5365478	0					
ANR	5365809	Identifier	process_truncate_log		5365478	0					
ANR	5365810	ArgumentList	line		5365478	1					
ANR	5365811	Argument	line		5365478	0					
ANR	5365812	Identifier	line		5365478	0					
ANR	5365813	Argument	token_start		5365478	1					
ANR	5365814	Identifier	token_start		5365478	0					
ANR	5365815	Argument	line_number		5365478	2					
ANR	5365816	Identifier	line_number		5365478	0					
ANR	5365817	Argument	parameters		5365478	3					
ANR	5365818	Identifier	parameters		5365478	0					
ANR	5365819	Argument	errors		5365478	4					
ANR	5365820	Identifier	errors		5365478	0					
ANR	5365821	ElseStatement	else		5365478	0					
ANR	5365822	IfStatement	"if ( ! first_token . compare ( ""create-subview"" ) )"		5365478	0					
ANR	5365823	Condition	"! first_token . compare ( ""create-subview"" )"	301:13:8911:8948	5365478	0	True				
ANR	5365824	UnaryOperationExpression	"! first_token . compare ( ""create-subview"" )"		5365478	0					
ANR	5365825	UnaryOperator	!		5365478	0					
ANR	5365826	CallExpression	"first_token . compare ( ""create-subview"" )"		5365478	1					
ANR	5365827	Callee	first_token . compare		5365478	0					
ANR	5365828	MemberAccess	first_token . compare		5365478	0					
ANR	5365829	Identifier	first_token		5365478	0					
ANR	5365830	Identifier	compare		5365478	1					
ANR	5365831	ArgumentList	"""create-subview"""		5365478	1					
ANR	5365832	Argument	"""create-subview"""		5365478	0					
ANR	5365833	PrimaryExpression	"""create-subview"""		5365478	0					
ANR	5365834	CompoundStatement		47:53:1713:1713	5365478	1					
ANR	5365835	ExpressionStatement	"process_create_subview ( line , token_start , line_number , parameters , errors )"	302:3:8956:9038	5365478	0	True				
ANR	5365836	CallExpression	"process_create_subview ( line , token_start , line_number , parameters , errors )"		5365478	0					
ANR	5365837	Callee	process_create_subview		5365478	0					
ANR	5365838	Identifier	process_create_subview		5365478	0					
ANR	5365839	ArgumentList	line		5365478	1					
ANR	5365840	Argument	line		5365478	0					
ANR	5365841	Identifier	line		5365478	0					
ANR	5365842	Argument	token_start		5365478	1					
ANR	5365843	Identifier	token_start		5365478	0					
ANR	5365844	Argument	line_number		5365478	2					
ANR	5365845	Identifier	line_number		5365478	0					
ANR	5365846	Argument	parameters		5365478	3					
ANR	5365847	Identifier	parameters		5365478	0					
ANR	5365848	Argument	errors		5365478	4					
ANR	5365849	Identifier	errors		5365478	0					
ANR	5365850	ElseStatement	else		5365478	0					
ANR	5365851	IfStatement	"if ( ! first_token . compare ( ""check-in-view"" ) )"		5365478	0					
ANR	5365852	Condition	"! first_token . compare ( ""check-in-view"" )"	304:13:9053:9089	5365478	0	True				
ANR	5365853	UnaryOperationExpression	"! first_token . compare ( ""check-in-view"" )"		5365478	0					
ANR	5365854	UnaryOperator	!		5365478	0					
ANR	5365855	CallExpression	"first_token . compare ( ""check-in-view"" )"		5365478	1					
ANR	5365856	Callee	first_token . compare		5365478	0					
ANR	5365857	MemberAccess	first_token . compare		5365478	0					
ANR	5365858	Identifier	first_token		5365478	0					
ANR	5365859	Identifier	compare		5365478	1					
ANR	5365860	ArgumentList	"""check-in-view"""		5365478	1					
ANR	5365861	Argument	"""check-in-view"""		5365478	0					
ANR	5365862	PrimaryExpression	"""check-in-view"""		5365478	0					
ANR	5365863	CompoundStatement		50:52:1854:1854	5365478	1					
ANR	5365864	ExpressionStatement	"process_check_in_view ( line , token_start , line_number , parameters , errors )"	305:3:9097:9178	5365478	0	True				
ANR	5365865	CallExpression	"process_check_in_view ( line , token_start , line_number , parameters , errors )"		5365478	0					
ANR	5365866	Callee	process_check_in_view		5365478	0					
ANR	5365867	Identifier	process_check_in_view		5365478	0					
ANR	5365868	ArgumentList	line		5365478	1					
ANR	5365869	Argument	line		5365478	0					
ANR	5365870	Identifier	line		5365478	0					
ANR	5365871	Argument	token_start		5365478	1					
ANR	5365872	Identifier	token_start		5365478	0					
ANR	5365873	Argument	line_number		5365478	2					
ANR	5365874	Identifier	line_number		5365478	0					
ANR	5365875	Argument	parameters		5365478	3					
ANR	5365876	Identifier	parameters		5365478	0					
ANR	5365877	Argument	errors		5365478	4					
ANR	5365878	Identifier	errors		5365478	0					
ANR	5365879	ElseStatement	else		5365478	0					
ANR	5365880	IfStatement	if ( ! empty_line ( line ) )		5365478	0					
ANR	5365881	Condition	! empty_line ( line )	307:13:9193:9209	5365478	0	True				
ANR	5365882	UnaryOperationExpression	! empty_line ( line )		5365478	0					
ANR	5365883	UnaryOperator	!		5365478	0					
ANR	5365884	CallExpression	empty_line ( line )		5365478	1					
ANR	5365885	Callee	empty_line		5365478	0					
ANR	5365886	Identifier	empty_line		5365478	0					
ANR	5365887	ArgumentList	line		5365478	1					
ANR	5365888	Argument	line		5365478	0					
ANR	5365889	Identifier	line		5365478	0					
ANR	5365890	CompoundStatement		53:31:1973:1973	5365478	1					
ANR	5365891	ExpressionStatement	"cout << ""Error: Unknown input ("" << first_token << "") on line "" << line_number << ""."" << endl"	308:3:9216:9314	5365478	0	True				
ANR	5365892	ShiftExpression	"cout << ""Error: Unknown input ("" << first_token << "") on line "" << line_number << ""."" << endl"		5365478	0		<<			
ANR	5365893	Identifier	cout		5365478	0					
ANR	5365894	ShiftExpression	"""Error: Unknown input ("" << first_token << "") on line "" << line_number << ""."" << endl"		5365478	1		<<			
ANR	5365895	PrimaryExpression	"""Error: Unknown input ("""		5365478	0					
ANR	5365896	ShiftExpression	"first_token << "") on line "" << line_number << ""."" << endl"		5365478	1		<<			
ANR	5365897	Identifier	first_token		5365478	0					
ANR	5365898	ShiftExpression	""") on line "" << line_number << ""."" << endl"		5365478	1		<<			
ANR	5365899	PrimaryExpression	""") on line """		5365478	0					
ANR	5365900	ShiftExpression	"line_number << ""."" << endl"		5365478	1		<<			
ANR	5365901	Identifier	line_number		5365478	0					
ANR	5365902	ShiftExpression	"""."" << endl"		5365478	1		<<			
ANR	5365903	PrimaryExpression	"""."""		5365478	0					
ANR	5365904	Identifier	endl		5365478	1					
ANR	5365905	ExpressionStatement	errors -> IncrementErrors ( )	310:3:9319:9344	5365478	1	True				
ANR	5365906	CallExpression	errors -> IncrementErrors ( )		5365478	0					
ANR	5365907	Callee	errors -> IncrementErrors		5365478	0					
ANR	5365908	PtrMemberAccess	errors -> IncrementErrors		5365478	0					
ANR	5365909	Identifier	errors		5365478	0					
ANR	5365910	Identifier	IncrementErrors		5365478	1					
ANR	5365911	ArgumentList			5365478	1					
ANR	5365912	ReturnStatement	return ;	313:1:9354:9360	5365478	4	True				
ANR	5365913	ReturnType	static void		5365478	1					
ANR	5365914	Identifier	process_file		5365478	2					
ANR	5365915	ParameterList	"ifstream & input_file , const Parameters & parameters , ErrorCount * errors"		5365478	3					
ANR	5365916	Parameter	ifstream & input_file	253:13:7161:7180	5365478	0	True				
ANR	5365917	ParameterType	ifstream &		5365478	0					
ANR	5365918	Identifier	input_file		5365478	1					
ANR	5365919	Parameter	const Parameters & parameters	253:35:7183:7210	5365478	1	True				
ANR	5365920	ParameterType	const Parameters &		5365478	0					
ANR	5365921	Identifier	parameters		5365478	1					
ANR	5365922	Parameter	ErrorCount * errors	254:4:7217:7234	5365478	2	True				
ANR	5365923	ParameterType	ErrorCount *		5365478	0					
ANR	5365924	Identifier	errors		5365478	1					
ANR	5365925	CFGEntryNode	ENTRY		5365478		True				
ANR	5365926	CFGExitNode	EXIT		5365478		True				
ANR	5365927	Symbol	token_start		5365478						
ANR	5365928	Symbol	& token_start		5365478						
ANR	5365929	Symbol	input_file . eof		5365478						
ANR	5365930	Symbol	line		5365478						
ANR	5365931	Symbol	* first_token		5365478						
ANR	5365932	Symbol	first_token . compare		5365478						
ANR	5365933	Symbol	extract_token		5365478						
ANR	5365934	Symbol	first_token		5365478						
ANR	5365935	Symbol	input_file		5365478						
ANR	5365936	Symbol	& line_number		5365478						
ANR	5365937	Symbol	line_number		5365478						
ANR	5365938	Symbol	parameters		5365478						
ANR	5365939	Symbol	empty_line		5365478						
ANR	5365940	Symbol	errors		5365478						
ANR	5365941	Function	process_classad	325:0:9822:11550							
ANR	5365942	FunctionDef	"process_classad (ifstream & input_file , const string & line , int token_start , int * line_number , const Parameters & parameters , ErrorCount * errors)"		5365941	0					
ANR	5365943	CompoundStatement		329:0:9999:11550	5365941	0					
ANR	5365944	IdentifierDeclStatement	int starting_line_number ;	330:1:10002:10029	5365941	0	True				
ANR	5365945	IdentifierDecl	starting_line_number		5365941	0					
ANR	5365946	IdentifierDeclType	int		5365941	0					
ANR	5365947	Identifier	starting_line_number		5365941	1					
ANR	5365948	IdentifierDeclStatement	"string name , extra , classad_line , classad_string ;"	331:1:10032:10080	5365941	1	True				
ANR	5365949	IdentifierDecl	name		5365941	0					
ANR	5365950	IdentifierDeclType	string		5365941	0					
ANR	5365951	Identifier	name		5365941	1					
ANR	5365952	IdentifierDecl	extra		5365941	1					
ANR	5365953	IdentifierDeclType	string		5365941	0					
ANR	5365954	Identifier	extra		5365941	1					
ANR	5365955	IdentifierDecl	classad_line		5365941	2					
ANR	5365956	IdentifierDeclType	string		5365941	0					
ANR	5365957	Identifier	classad_line		5365941	1					
ANR	5365958	IdentifierDecl	classad_string		5365941	3					
ANR	5365959	IdentifierDeclType	string		5365941	0					
ANR	5365960	Identifier	classad_string		5365941	1					
ANR	5365961	ExpressionStatement	starting_line_number = * line_number	333:1:10084:10119	5365941	2	True				
ANR	5365962	AssignmentExpression	starting_line_number = * line_number		5365941	0		=			
ANR	5365963	Identifier	starting_line_number		5365941	0					
ANR	5365964	UnaryOperationExpression	* line_number		5365941	1					
ANR	5365965	UnaryOperator	*		5365941	0					
ANR	5365966	Identifier	line_number		5365941	1					
ANR	5365967	ExpressionStatement	"name = extract_token ( & token_start , line )"	335:1:10123:10163	5365941	3	True				
ANR	5365968	AssignmentExpression	"name = extract_token ( & token_start , line )"		5365941	0		=			
ANR	5365969	Identifier	name		5365941	0					
ANR	5365970	CallExpression	"extract_token ( & token_start , line )"		5365941	1					
ANR	5365971	Callee	extract_token		5365941	0					
ANR	5365972	Identifier	extract_token		5365941	0					
ANR	5365973	ArgumentList	& token_start		5365941	1					
ANR	5365974	Argument	& token_start		5365941	0					
ANR	5365975	UnaryOperationExpression	& token_start		5365941	0					
ANR	5365976	UnaryOperator	&		5365941	0					
ANR	5365977	Identifier	token_start		5365941	1					
ANR	5365978	Argument	line		5365941	1					
ANR	5365979	Identifier	line		5365941	0					
ANR	5365980	ExpressionStatement	"extra = extract_token ( & token_start , line )"	336:1:10166:10207	5365941	4	True				
ANR	5365981	AssignmentExpression	"extra = extract_token ( & token_start , line )"		5365941	0		=			
ANR	5365982	Identifier	extra		5365941	0					
ANR	5365983	CallExpression	"extract_token ( & token_start , line )"		5365941	1					
ANR	5365984	Callee	extract_token		5365941	0					
ANR	5365985	Identifier	extract_token		5365941	0					
ANR	5365986	ArgumentList	& token_start		5365941	1					
ANR	5365987	Argument	& token_start		5365941	0					
ANR	5365988	UnaryOperationExpression	& token_start		5365941	0					
ANR	5365989	UnaryOperator	&		5365941	0					
ANR	5365990	Identifier	token_start		5365941	1					
ANR	5365991	Argument	line		5365941	1					
ANR	5365992	Identifier	line		5365941	0					
ANR	5365993	IfStatement	"if ( extra . compare ( """" ) )"		5365941	5					
ANR	5365994	Condition	"extra . compare ( """" )"	337:5:10214:10230	5365941	0	True				
ANR	5365995	CallExpression	"extra . compare ( """" )"		5365941	0					
ANR	5365996	Callee	extra . compare		5365941	0					
ANR	5365997	MemberAccess	extra . compare		5365941	0					
ANR	5365998	Identifier	extra		5365941	0					
ANR	5365999	Identifier	compare		5365941	1					
ANR	5366000	ArgumentList	""""""		5365941	1					
ANR	5366001	Argument	""""""		5365941	0					
ANR	5366002	PrimaryExpression	""""""		5365941	0					
ANR	5366003	CompoundStatement		9:24:233:233	5365941	1					
ANR	5366004	ExpressionStatement	"cout << ""Ignored extra input ("" << extra << "") on line "" << * line_number << ""."" << endl"	338:2:10237:10328	5365941	0	True				
ANR	5366005	ShiftExpression	"cout << ""Ignored extra input ("" << extra << "") on line "" << * line_number << ""."" << endl"		5365941	0		<<			
ANR	5366006	Identifier	cout		5365941	0					
ANR	5366007	ShiftExpression	"""Ignored extra input ("" << extra << "") on line "" << * line_number << ""."" << endl"		5365941	1		<<			
ANR	5366008	PrimaryExpression	"""Ignored extra input ("""		5365941	0					
ANR	5366009	ShiftExpression	"extra << "") on line "" << * line_number << ""."" << endl"		5365941	1		<<			
ANR	5366010	Identifier	extra		5365941	0					
ANR	5366011	ShiftExpression	""") on line "" << * line_number << ""."" << endl"		5365941	1		<<			
ANR	5366012	PrimaryExpression	""") on line """		5365941	0					
ANR	5366013	ShiftExpression	"* line_number << ""."" << endl"		5365941	1		<<			
ANR	5366014	UnaryOperationExpression	* line_number		5365941	0					
ANR	5366015	UnaryOperator	*		5365941	0					
ANR	5366016	Identifier	line_number		5365941	1					
ANR	5366017	ShiftExpression	"""."" << endl"		5365941	1		<<			
ANR	5366018	PrimaryExpression	"""."""		5365941	0					
ANR	5366019	Identifier	endl		5365941	1					
ANR	5366020	IdentifierDeclStatement	bool classad_done = false ;	342:1:10335:10360	5365941	6	True				
ANR	5366021	IdentifierDecl	classad_done = false		5365941	0					
ANR	5366022	IdentifierDeclType	bool		5365941	0					
ANR	5366023	Identifier	classad_done		5365941	1					
ANR	5366024	AssignmentExpression	classad_done = false		5365941	2		=			
ANR	5366025	Identifier	false		5365941	0					
ANR	5366026	Identifier	false		5365941	1					
ANR	5366027	WhileStatement	while ( ! classad_done )		5365941	7					
ANR	5366028	Condition	! classad_done	344:8:10371:10383	5365941	0	True				
ANR	5366029	UnaryOperationExpression	! classad_done		5365941	0					
ANR	5366030	UnaryOperator	!		5365941	0					
ANR	5366031	Identifier	classad_done		5365941	1					
ANR	5366032	CompoundStatement		16:23:386:386	5365941	1					
ANR	5366033	ExpressionStatement	"getline ( input_file , classad_line , '\\n' )"	345:2:10390:10429	5365941	0	True				
ANR	5366034	CallExpression	"getline ( input_file , classad_line , '\\n' )"		5365941	0					
ANR	5366035	Callee	getline		5365941	0					
ANR	5366036	Identifier	getline		5365941	0					
ANR	5366037	ArgumentList	input_file		5365941	1					
ANR	5366038	Argument	input_file		5365941	0					
ANR	5366039	Identifier	input_file		5365941	0					
ANR	5366040	Argument	classad_line		5365941	1					
ANR	5366041	Identifier	classad_line		5365941	0					
ANR	5366042	Argument	'\\n'		5365941	2					
ANR	5366043	PrimaryExpression	'\\n'		5365941	0					
ANR	5366044	IfStatement	if ( input_file . eof ( ) )		5365941	1					
ANR	5366045	Condition	input_file . eof ( )	346:6:10437:10452	5365941	0	True				
ANR	5366046	CallExpression	input_file . eof ( )		5365941	0					
ANR	5366047	Callee	input_file . eof		5365941	0					
ANR	5366048	MemberAccess	input_file . eof		5365941	0					
ANR	5366049	Identifier	input_file		5365941	0					
ANR	5366050	Identifier	eof		5365941	1					
ANR	5366051	ArgumentList			5365941	1					
ANR	5366052	CompoundStatement		18:24:455:455	5365941	1					
ANR	5366053	ExpressionStatement	"cout << ""Error: Unfinished classad on line "" << * line_number << endl"	347:3:10460:10534	5365941	0	True				
ANR	5366054	ShiftExpression	"cout << ""Error: Unfinished classad on line "" << * line_number << endl"		5365941	0		<<			
ANR	5366055	Identifier	cout		5365941	0					
ANR	5366056	ShiftExpression	"""Error: Unfinished classad on line "" << * line_number << endl"		5365941	1		<<			
ANR	5366057	PrimaryExpression	"""Error: Unfinished classad on line """		5365941	0					
ANR	5366058	ShiftExpression	* line_number << endl		5365941	1		<<			
ANR	5366059	UnaryOperationExpression	* line_number		5365941	0					
ANR	5366060	UnaryOperator	*		5365941	0					
ANR	5366061	Identifier	line_number		5365941	1					
ANR	5366062	Identifier	endl		5365941	1					
ANR	5366063	ExpressionStatement	classad_done = true	349:3:10539:10558	5365941	1	True				
ANR	5366064	AssignmentExpression	classad_done = true		5365941	0		=			
ANR	5366065	Identifier	classad_done		5365941	0					
ANR	5366066	Identifier	true		5365941	1					
ANR	5366067	ExpressionStatement	errors -> IncrementErrors ( )	350:3:10563:10588	5365941	2	True				
ANR	5366068	CallExpression	errors -> IncrementErrors ( )		5365941	0					
ANR	5366069	Callee	errors -> IncrementErrors		5365941	0					
ANR	5366070	PtrMemberAccess	errors -> IncrementErrors		5365941	0					
ANR	5366071	Identifier	errors		5365941	0					
ANR	5366072	Identifier	IncrementErrors		5365941	1					
ANR	5366073	ArgumentList			5365941	1					
ANR	5366074	ElseStatement	else		5365941	0					
ANR	5366075	CompoundStatement		27:3:647:703	5365941	0					
ANR	5366076	ExpressionStatement	( * line_number ) ++	353:3:10606:10622	5365941	0	True				
ANR	5366077	PostIncDecOperationExpression	( * line_number ) ++		5365941	0					
ANR	5366078	UnaryOperationExpression	* line_number		5365941	0					
ANR	5366079	UnaryOperator	*		5365941	0					
ANR	5366080	Identifier	line_number		5365941	1					
ANR	5366081	IncDec	++		5365941	1					
ANR	5366082	ExpressionStatement	token_start = 0	354:3:10627:10642	5365941	1	True				
ANR	5366083	AssignmentExpression	token_start = 0		5365941	0		=			
ANR	5366084	Identifier	token_start		5365941	0					
ANR	5366085	PrimaryExpression	0		5365941	1					
ANR	5366086	IdentifierDeclStatement	"string token = extract_token ( & token_start , classad_line ) ;"	355:3:10647:10703	5365941	2	True				
ANR	5366087	IdentifierDecl	"token = extract_token ( & token_start , classad_line )"		5365941	0					
ANR	5366088	IdentifierDeclType	string		5365941	0					
ANR	5366089	Identifier	token		5365941	1					
ANR	5366090	AssignmentExpression	"token = extract_token ( & token_start , classad_line )"		5365941	2		=			
ANR	5366091	Identifier	token		5365941	0					
ANR	5366092	CallExpression	"extract_token ( & token_start , classad_line )"		5365941	1					
ANR	5366093	Callee	extract_token		5365941	0					
ANR	5366094	Identifier	extract_token		5365941	0					
ANR	5366095	ArgumentList	& token_start		5365941	1					
ANR	5366096	Argument	& token_start		5365941	0					
ANR	5366097	UnaryOperationExpression	& token_start		5365941	0					
ANR	5366098	UnaryOperator	&		5365941	0					
ANR	5366099	Identifier	token_start		5365941	1					
ANR	5366100	Argument	classad_line		5365941	1					
ANR	5366101	Identifier	classad_line		5365941	0					
ANR	5366102	IfStatement	"if ( token . compare ( ""end-classad"" ) )"		5365941	3					
ANR	5366103	Condition	"token . compare ( ""end-classad"" )"	356:7:10712:10739	5365941	0	True				
ANR	5366104	CallExpression	"token . compare ( ""end-classad"" )"		5365941	0					
ANR	5366105	Callee	token . compare		5365941	0					
ANR	5366106	MemberAccess	token . compare		5365941	0					
ANR	5366107	Identifier	token		5365941	0					
ANR	5366108	Identifier	compare		5365941	1					
ANR	5366109	ArgumentList	"""end-classad"""		5365941	1					
ANR	5366110	Argument	"""end-classad"""		5365941	0					
ANR	5366111	PrimaryExpression	"""end-classad"""		5365941	0					
ANR	5366112	CompoundStatement		28:37:742:742	5365941	1					
ANR	5366113	ExpressionStatement	classad_string += classad_line	357:4:10748:10778	5365941	0	True				
ANR	5366114	AssignmentExpression	classad_string += classad_line		5365941	0		+=			
ANR	5366115	Identifier	classad_string		5365941	0					
ANR	5366116	Identifier	classad_line		5365941	1					
ANR	5366117	ExpressionStatement	classad_string += '\\n'	360:16:10897:10919	5365941	1	True				
ANR	5366118	AssignmentExpression	classad_string += '\\n'		5365941	0		+=			
ANR	5366119	Identifier	classad_string		5365941	0					
ANR	5366120	PrimaryExpression	'\\n'		5365941	1					
ANR	5366121	ElseStatement	else		5365941	0					
ANR	5366122	CompoundStatement		34:8:935:935	5365941	0					
ANR	5366123	ExpressionStatement	classad_done = true	363:4:10941:10960	5365941	0	True				
ANR	5366124	AssignmentExpression	classad_done = true		5365941	0		=			
ANR	5366125	Identifier	classad_done		5365941	0					
ANR	5366126	Identifier	true		5365941	1					
ANR	5366127	IdentifierDeclStatement	ClassAdParser parser ;	370:1:11108:11128	5365941	8	True				
ANR	5366128	IdentifierDecl	parser		5365941	0					
ANR	5366129	IdentifierDeclType	ClassAdParser		5365941	0					
ANR	5366130	Identifier	parser		5365941	1					
ANR	5366131	IdentifierDeclStatement	ClassAd * classad ;	371:1:11131:11155	5365941	9	True				
ANR	5366132	IdentifierDecl	* classad		5365941	0					
ANR	5366133	IdentifierDeclType	ClassAd *		5365941	0					
ANR	5366134	Identifier	classad		5365941	1					
ANR	5366135	ExpressionStatement	"classad = parser . ParseClassAd ( classad_string , true )"	373:1:11159:11210	5365941	10	True				
ANR	5366136	AssignmentExpression	"classad = parser . ParseClassAd ( classad_string , true )"		5365941	0		=			
ANR	5366137	Identifier	classad		5365941	0					
ANR	5366138	CallExpression	"parser . ParseClassAd ( classad_string , true )"		5365941	1					
ANR	5366139	Callee	parser . ParseClassAd		5365941	0					
ANR	5366140	MemberAccess	parser . ParseClassAd		5365941	0					
ANR	5366141	Identifier	parser		5365941	0					
ANR	5366142	Identifier	ParseClassAd		5365941	1					
ANR	5366143	ArgumentList	classad_string		5365941	1					
ANR	5366144	Argument	classad_string		5365941	0					
ANR	5366145	Identifier	classad_string		5365941	0					
ANR	5366146	Argument	true		5365941	1					
ANR	5366147	Identifier	true		5365941	0					
ANR	5366148	IfStatement	if ( classad == NULL )		5365941	11					
ANR	5366149	Condition	classad == NULL	375:5:11218:11232	5365941	0	True				
ANR	5366150	EqualityExpression	classad == NULL		5365941	0		==			
ANR	5366151	Identifier	classad		5365941	0					
ANR	5366152	Identifier	NULL		5365941	1					
ANR	5366153	CompoundStatement		47:22:1235:1235	5365941	1					
ANR	5366154	ExpressionStatement	"cout << ""Error: Bad classad, lines "" << starting_line_number << "" to "" << * line_number << endl"	376:2:11239:11338	5365941	0	True				
ANR	5366155	ShiftExpression	"cout << ""Error: Bad classad, lines "" << starting_line_number << "" to "" << * line_number << endl"		5365941	0		<<			
ANR	5366156	Identifier	cout		5365941	0					
ANR	5366157	ShiftExpression	"""Error: Bad classad, lines "" << starting_line_number << "" to "" << * line_number << endl"		5365941	1		<<			
ANR	5366158	PrimaryExpression	"""Error: Bad classad, lines """		5365941	0					
ANR	5366159	ShiftExpression	"starting_line_number << "" to "" << * line_number << endl"		5365941	1		<<			
ANR	5366160	Identifier	starting_line_number		5365941	0					
ANR	5366161	ShiftExpression	""" to "" << * line_number << endl"		5365941	1		<<			
ANR	5366162	PrimaryExpression	""" to """		5365941	0					
ANR	5366163	ShiftExpression	* line_number << endl		5365941	1		<<			
ANR	5366164	UnaryOperationExpression	* line_number		5365941	0					
ANR	5366165	UnaryOperator	*		5365941	0					
ANR	5366166	Identifier	line_number		5365941	1					
ANR	5366167	Identifier	endl		5365941	1					
ANR	5366168	ExpressionStatement	errors -> IncrementErrors ( )	378:2:11342:11367	5365941	1	True				
ANR	5366169	CallExpression	errors -> IncrementErrors ( )		5365941	0					
ANR	5366170	Callee	errors -> IncrementErrors		5365941	0					
ANR	5366171	PtrMemberAccess	errors -> IncrementErrors		5365941	0					
ANR	5366172	Identifier	errors		5365941	0					
ANR	5366173	Identifier	IncrementErrors		5365941	1					
ANR	5366174	ArgumentList			5365941	1					
ANR	5366175	ElseStatement	else		5365941	0					
ANR	5366176	CompoundStatement		52:6:1378:1378	5365941	0					
ANR	5366177	ExpressionStatement	"cout << ""OK: Read Classad \\"""" << name << ""\\"", Line "" << starting_line_number << endl"	381:2:11382:11471	5365941	0	True				
ANR	5366178	ShiftExpression	"cout << ""OK: Read Classad \\"""" << name << ""\\"", Line "" << starting_line_number << endl"		5365941	0		<<			
ANR	5366179	Identifier	cout		5365941	0					
ANR	5366180	ShiftExpression	"""OK: Read Classad \\"""" << name << ""\\"", Line "" << starting_line_number << endl"		5365941	1		<<			
ANR	5366181	PrimaryExpression	"""OK: Read Classad \\"""""		5365941	0					
ANR	5366182	ShiftExpression	"name << ""\\"", Line "" << starting_line_number << endl"		5365941	1		<<			
ANR	5366183	Identifier	name		5365941	0					
ANR	5366184	ShiftExpression	"""\\"", Line "" << starting_line_number << endl"		5365941	1		<<			
ANR	5366185	PrimaryExpression	"""\\"", Line """		5365941	0					
ANR	5366186	ShiftExpression	starting_line_number << endl		5365941	1		<<			
ANR	5366187	Identifier	starting_line_number		5365941	0					
ANR	5366188	Identifier	endl		5365941	1					
ANR	5366189	ExpressionStatement	classads [ name ] = classad	384:1:11477:11501	5365941	12	True				
ANR	5366190	AssignmentExpression	classads [ name ] = classad		5365941	0		=			
ANR	5366191	ArrayIndexing	classads [ name ]		5365941	0					
ANR	5366192	Identifier	classads		5365941	0					
ANR	5366193	Identifier	name		5365941	1					
ANR	5366194	Identifier	classad		5365941	1					
ANR	5366195	ExpressionStatement	unmark_classad_in_collection ( name )	385:1:11504:11538	5365941	13	True				
ANR	5366196	CallExpression	unmark_classad_in_collection ( name )		5365941	0					
ANR	5366197	Callee	unmark_classad_in_collection		5365941	0					
ANR	5366198	Identifier	unmark_classad_in_collection		5365941	0					
ANR	5366199	ArgumentList	name		5365941	1					
ANR	5366200	Argument	name		5365941	0					
ANR	5366201	Identifier	name		5365941	0					
ANR	5366202	ReturnStatement	return ;	387:1:11542:11548	5365941	14	True				
ANR	5366203	ReturnType	static void		5365941	1					
ANR	5366204	Identifier	process_classad		5365941	2					
ANR	5366205	ParameterList	"ifstream & input_file , const string & line , int token_start , int * line_number , const Parameters & parameters , ErrorCount * errors"		5365941	3					
ANR	5366206	Parameter	ifstream & input_file	325:28:9850:9869	5365941	0	True				
ANR	5366207	ParameterType	ifstream &		5365941	0					
ANR	5366208	Identifier	input_file		5365941	1					
ANR	5366209	Parameter	const string & line	325:50:9872:9889	5365941	1	True				
ANR	5366210	ParameterType	const string &		5365941	0					
ANR	5366211	Identifier	line		5365941	1					
ANR	5366212	Parameter	int token_start	326:7:9899:9913	5365941	2	True				
ANR	5366213	ParameterType	int		5365941	0					
ANR	5366214	Identifier	token_start		5365941	1					
ANR	5366215	Parameter	int * line_number	326:24:9916:9931	5365941	3	True				
ANR	5366216	ParameterType	int *		5365941	0					
ANR	5366217	Identifier	line_number		5365941	1					
ANR	5366218	Parameter	const Parameters & parameters	327:7:9942:9969	5365941	4	True				
ANR	5366219	ParameterType	const Parameters &		5365941	0					
ANR	5366220	Identifier	parameters		5365941	1					
ANR	5366221	Parameter	ErrorCount * errors	328:7:9979:9996	5365941	5	True				
ANR	5366222	ParameterType	ErrorCount *		5365941	0					
ANR	5366223	Identifier	errors		5365941	1					
ANR	5366224	CFGEntryNode	ENTRY		5365941		True				
ANR	5366225	CFGExitNode	EXIT		5365941		True				
ANR	5366226	Symbol	& token_start		5365941						
ANR	5366227	Symbol	input_file . eof		5365941						
ANR	5366228	Symbol	line		5365941						
ANR	5366229	Symbol	starting_line_number		5365941						
ANR	5366230	Symbol	classad_string		5365941						
ANR	5366231	Symbol	* classads		5365941						
ANR	5366232	Symbol	extra . compare		5365941						
ANR	5366233	Symbol	classad_done		5365941						
ANR	5366234	Symbol	line_number		5365941						
ANR	5366235	Symbol	extra		5365941						
ANR	5366236	Symbol	* name		5365941						
ANR	5366237	Symbol	token_start		5365941						
ANR	5366238	Symbol	NULL		5365941						
ANR	5366239	Symbol	false		5365941						
ANR	5366240	Symbol	* line_number		5365941						
ANR	5366241	Symbol	classad_line		5365941						
ANR	5366242	Symbol	parser . ParseClassAd		5365941						
ANR	5366243	Symbol	extract_token		5365941						
ANR	5366244	Symbol	token		5365941						
ANR	5366245	Symbol	token . compare		5365941						
ANR	5366246	Symbol	input_file		5365941						
ANR	5366247	Symbol	parser		5365941						
ANR	5366248	Symbol	name		5365941						
ANR	5366249	Symbol	true		5365941						
ANR	5366250	Symbol	classad		5365941						
ANR	5366251	Symbol	parameters		5365941						
ANR	5366252	Symbol	classads		5365941						
ANR	5366253	Symbol	errors		5365941						
ANR	5366254	Function	process_print_classad	398:0:11851:12885							
ANR	5366255	FunctionDef	"process_print_classad (const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors)"		5366254	0					
ANR	5366256	CompoundStatement		402:0:12020:12885	5366254	0					
ANR	5366257	IdentifierDeclStatement	"string classad_name , extra ;"	403:1:12023:12049	5366254	0	True				
ANR	5366258	IdentifierDecl	classad_name		5366254	0					
ANR	5366259	IdentifierDeclType	string		5366254	0					
ANR	5366260	Identifier	classad_name		5366254	1					
ANR	5366261	IdentifierDecl	extra		5366254	1					
ANR	5366262	IdentifierDeclType	string		5366254	0					
ANR	5366263	Identifier	extra		5366254	1					
ANR	5366264	ExpressionStatement	"classad_name = extract_token ( & token_start , line )"	405:1:12053:12101	5366254	1	True				
ANR	5366265	AssignmentExpression	"classad_name = extract_token ( & token_start , line )"		5366254	0		=			
ANR	5366266	Identifier	classad_name		5366254	0					
ANR	5366267	CallExpression	"extract_token ( & token_start , line )"		5366254	1					
ANR	5366268	Callee	extract_token		5366254	0					
ANR	5366269	Identifier	extract_token		5366254	0					
ANR	5366270	ArgumentList	& token_start		5366254	1					
ANR	5366271	Argument	& token_start		5366254	0					
ANR	5366272	UnaryOperationExpression	& token_start		5366254	0					
ANR	5366273	UnaryOperator	&		5366254	0					
ANR	5366274	Identifier	token_start		5366254	1					
ANR	5366275	Argument	line		5366254	1					
ANR	5366276	Identifier	line		5366254	0					
ANR	5366277	ExpressionStatement	"extra = extract_token ( & token_start , line )"	406:1:12104:12145	5366254	2	True				
ANR	5366278	AssignmentExpression	"extra = extract_token ( & token_start , line )"		5366254	0		=			
ANR	5366279	Identifier	extra		5366254	0					
ANR	5366280	CallExpression	"extract_token ( & token_start , line )"		5366254	1					
ANR	5366281	Callee	extract_token		5366254	0					
ANR	5366282	Identifier	extract_token		5366254	0					
ANR	5366283	ArgumentList	& token_start		5366254	1					
ANR	5366284	Argument	& token_start		5366254	0					
ANR	5366285	UnaryOperationExpression	& token_start		5366254	0					
ANR	5366286	UnaryOperator	&		5366254	0					
ANR	5366287	Identifier	token_start		5366254	1					
ANR	5366288	Argument	line		5366254	1					
ANR	5366289	Identifier	line		5366254	0					
ANR	5366290	IfStatement	"if ( ! classad_name . compare ( """" ) )"		5366254	3					
ANR	5366291	Condition	"! classad_name . compare ( """" )"	407:5:12152:12176	5366254	0	True				
ANR	5366292	UnaryOperationExpression	"! classad_name . compare ( """" )"		5366254	0					
ANR	5366293	UnaryOperator	!		5366254	0					
ANR	5366294	CallExpression	"classad_name . compare ( """" )"		5366254	1					
ANR	5366295	Callee	classad_name . compare		5366254	0					
ANR	5366296	MemberAccess	classad_name . compare		5366254	0					
ANR	5366297	Identifier	classad_name		5366254	0					
ANR	5366298	Identifier	compare		5366254	1					
ANR	5366299	ArgumentList	""""""		5366254	1					
ANR	5366300	Argument	""""""		5366254	0					
ANR	5366301	PrimaryExpression	""""""		5366254	0					
ANR	5366302	CompoundStatement		6:32:158:158	5366254	1					
ANR	5366303	ExpressionStatement	"cout << ""Error: Missing ClassAd name on line "" << line_number << ""."" << endl"	408:2:12183:12264	5366254	0	True				
ANR	5366304	ShiftExpression	"cout << ""Error: Missing ClassAd name on line "" << line_number << ""."" << endl"		5366254	0		<<			
ANR	5366305	Identifier	cout		5366254	0					
ANR	5366306	ShiftExpression	"""Error: Missing ClassAd name on line "" << line_number << ""."" << endl"		5366254	1		<<			
ANR	5366307	PrimaryExpression	"""Error: Missing ClassAd name on line """		5366254	0					
ANR	5366308	ShiftExpression	"line_number << ""."" << endl"		5366254	1		<<			
ANR	5366309	Identifier	line_number		5366254	0					
ANR	5366310	ShiftExpression	"""."" << endl"		5366254	1		<<			
ANR	5366311	PrimaryExpression	"""."""		5366254	0					
ANR	5366312	Identifier	endl		5366254	1					
ANR	5366313	ExpressionStatement	"cout << ""       Format: print-classad <classad>"" << endl"	410:2:12268:12324	5366254	1	True				
ANR	5366314	ShiftExpression	"cout << ""       Format: print-classad <classad>"" << endl"		5366254	0		<<			
ANR	5366315	Identifier	cout		5366254	0					
ANR	5366316	ShiftExpression	"""       Format: print-classad <classad>"" << endl"		5366254	1		<<			
ANR	5366317	PrimaryExpression	"""       Format: print-classad <classad>"""		5366254	0					
ANR	5366318	Identifier	endl		5366254	1					
ANR	5366319	ExpressionStatement	errors -> IncrementErrors ( )	411:2:12328:12353	5366254	2	True				
ANR	5366320	CallExpression	errors -> IncrementErrors ( )		5366254	0					
ANR	5366321	Callee	errors -> IncrementErrors		5366254	0					
ANR	5366322	PtrMemberAccess	errors -> IncrementErrors		5366254	0					
ANR	5366323	Identifier	errors		5366254	0					
ANR	5366324	Identifier	IncrementErrors		5366254	1					
ANR	5366325	ArgumentList			5366254	1					
ANR	5366326	ElseStatement	else		5366254	0					
ANR	5366327	IfStatement	"if ( extra . compare ( """" ) )"		5366254	0					
ANR	5366328	Condition	"extra . compare ( """" )"	413:10:12368:12384	5366254	0	True				
ANR	5366329	CallExpression	"extra . compare ( """" )"		5366254	0					
ANR	5366330	Callee	extra . compare		5366254	0					
ANR	5366331	MemberAccess	extra . compare		5366254	0					
ANR	5366332	Identifier	extra		5366254	0					
ANR	5366333	Identifier	compare		5366254	1					
ANR	5366334	ArgumentList	""""""		5366254	1					
ANR	5366335	Argument	""""""		5366254	0					
ANR	5366336	PrimaryExpression	""""""		5366254	0					
ANR	5366337	CompoundStatement		12:29:366:366	5366254	1					
ANR	5366338	ExpressionStatement	"cout << ""Ignored extra input ("" << extra << "") on line "" << line_number << ""."" << endl"	414:2:12391:12481	5366254	0	True				
ANR	5366339	ShiftExpression	"cout << ""Ignored extra input ("" << extra << "") on line "" << line_number << ""."" << endl"		5366254	0		<<			
ANR	5366340	Identifier	cout		5366254	0					
ANR	5366341	ShiftExpression	"""Ignored extra input ("" << extra << "") on line "" << line_number << ""."" << endl"		5366254	1		<<			
ANR	5366342	PrimaryExpression	"""Ignored extra input ("""		5366254	0					
ANR	5366343	ShiftExpression	"extra << "") on line "" << line_number << ""."" << endl"		5366254	1		<<			
ANR	5366344	Identifier	extra		5366254	0					
ANR	5366345	ShiftExpression	""") on line "" << line_number << ""."" << endl"		5366254	1		<<			
ANR	5366346	PrimaryExpression	""") on line """		5366254	0					
ANR	5366347	ShiftExpression	"line_number << ""."" << endl"		5366254	1		<<			
ANR	5366348	Identifier	line_number		5366254	0					
ANR	5366349	ShiftExpression	"""."" << endl"		5366254	1		<<			
ANR	5366350	PrimaryExpression	"""."""		5366254	0					
ANR	5366351	Identifier	endl		5366254	1					
ANR	5366352	IdentifierDeclStatement	ClassAd * classad ;	418:1:12489:12505	5366254	4	True				
ANR	5366353	IdentifierDecl	* classad		5366254	0					
ANR	5366354	IdentifierDeclType	ClassAd *		5366254	0					
ANR	5366355	Identifier	classad		5366254	1					
ANR	5366356	ExpressionStatement	classad = classads [ classad_name ]	420:1:12509:12541	5366254	5	True				
ANR	5366357	AssignmentExpression	classad = classads [ classad_name ]		5366254	0		=			
ANR	5366358	Identifier	classad		5366254	0					
ANR	5366359	ArrayIndexing	classads [ classad_name ]		5366254	1					
ANR	5366360	Identifier	classads		5366254	0					
ANR	5366361	Identifier	classad_name		5366254	1					
ANR	5366362	IfStatement	if ( classad == NULL )		5366254	6					
ANR	5366363	Condition	classad == NULL	422:5:12549:12563	5366254	0	True				
ANR	5366364	EqualityExpression	classad == NULL		5366254	0		==			
ANR	5366365	Identifier	classad		5366254	0					
ANR	5366366	Identifier	NULL		5366254	1					
ANR	5366367	CompoundStatement		21:22:545:545	5366254	1					
ANR	5366368	ExpressionStatement	"cout << ""Error: Unknown ClassAd: \\"""" << classad_name << ""\\"" on line "" << line_number << ""."" << endl"	423:2:12570:12673	5366254	0	True				
ANR	5366369	ShiftExpression	"cout << ""Error: Unknown ClassAd: \\"""" << classad_name << ""\\"" on line "" << line_number << ""."" << endl"		5366254	0		<<			
ANR	5366370	Identifier	cout		5366254	0					
ANR	5366371	ShiftExpression	"""Error: Unknown ClassAd: \\"""" << classad_name << ""\\"" on line "" << line_number << ""."" << endl"		5366254	1		<<			
ANR	5366372	PrimaryExpression	"""Error: Unknown ClassAd: \\"""""		5366254	0					
ANR	5366373	ShiftExpression	"classad_name << ""\\"" on line "" << line_number << ""."" << endl"		5366254	1		<<			
ANR	5366374	Identifier	classad_name		5366254	0					
ANR	5366375	ShiftExpression	"""\\"" on line "" << line_number << ""."" << endl"		5366254	1		<<			
ANR	5366376	PrimaryExpression	"""\\"" on line """		5366254	0					
ANR	5366377	ShiftExpression	"line_number << ""."" << endl"		5366254	1		<<			
ANR	5366378	Identifier	line_number		5366254	0					
ANR	5366379	ShiftExpression	"""."" << endl"		5366254	1		<<			
ANR	5366380	PrimaryExpression	"""."""		5366254	0					
ANR	5366381	Identifier	endl		5366254	1					
ANR	5366382	ExpressionStatement	errors -> IncrementErrors ( )	425:2:12677:12702	5366254	1	True				
ANR	5366383	CallExpression	errors -> IncrementErrors ( )		5366254	0					
ANR	5366384	Callee	errors -> IncrementErrors		5366254	0					
ANR	5366385	PtrMemberAccess	errors -> IncrementErrors		5366254	0					
ANR	5366386	Identifier	errors		5366254	0					
ANR	5366387	Identifier	IncrementErrors		5366254	1					
ANR	5366388	ArgumentList			5366254	1					
ANR	5366389	ElseStatement	else		5366254	0					
ANR	5366390	CompoundStatement		27:2:719:736	5366254	0					
ANR	5366391	IdentifierDeclStatement	PrettyPrint printer ;	427:2:12716:12736	5366254	0	True				
ANR	5366392	IdentifierDecl	printer		5366254	0					
ANR	5366393	IdentifierDeclType	PrettyPrint		5366254	0					
ANR	5366394	Identifier	printer		5366254	1					
ANR	5366395	IdentifierDeclStatement	string text ;	428:2:12740:12757	5366254	1	True				
ANR	5366396	IdentifierDecl	text		5366254	0					
ANR	5366397	IdentifierDeclType	string		5366254	0					
ANR	5366398	Identifier	text		5366254	1					
ANR	5366399	ExpressionStatement	"printer . Unparse ( text , classad )"	430:2:12762:12792	5366254	2	True				
ANR	5366400	CallExpression	"printer . Unparse ( text , classad )"		5366254	0					
ANR	5366401	Callee	printer . Unparse		5366254	0					
ANR	5366402	MemberAccess	printer . Unparse		5366254	0					
ANR	5366403	Identifier	printer		5366254	0					
ANR	5366404	Identifier	Unparse		5366254	1					
ANR	5366405	ArgumentList	text		5366254	1					
ANR	5366406	Argument	text		5366254	0					
ANR	5366407	Identifier	text		5366254	0					
ANR	5366408	Argument	classad		5366254	1					
ANR	5366409	Identifier	classad		5366254	0					
ANR	5366410	ExpressionStatement	"cout << ""ClassAd "" << classad_name << "":\\n"""	431:2:12796:12839	5366254	3	True				
ANR	5366411	ShiftExpression	"cout << ""ClassAd "" << classad_name << "":\\n"""		5366254	0		<<			
ANR	5366412	Identifier	cout		5366254	0					
ANR	5366413	ShiftExpression	"""ClassAd "" << classad_name << "":\\n"""		5366254	1		<<			
ANR	5366414	PrimaryExpression	"""ClassAd """		5366254	0					
ANR	5366415	ShiftExpression	"classad_name << "":\\n"""		5366254	1		<<			
ANR	5366416	Identifier	classad_name		5366254	0					
ANR	5366417	PrimaryExpression	""":\\n"""		5366254	1					
ANR	5366418	ExpressionStatement	cout << text	432:2:12843:12855	5366254	4	True				
ANR	5366419	ShiftExpression	cout << text		5366254	0		<<			
ANR	5366420	Identifier	cout		5366254	0					
ANR	5366421	Identifier	text		5366254	1					
ANR	5366422	ExpressionStatement	cout << endl	433:2:12859:12871	5366254	5	True				
ANR	5366423	ShiftExpression	cout << endl		5366254	0		<<			
ANR	5366424	Identifier	cout		5366254	0					
ANR	5366425	Identifier	endl		5366254	1					
ANR	5366426	ReturnStatement	return ;	435:1:12877:12883	5366254	7	True				
ANR	5366427	ReturnType	static void		5366254	1					
ANR	5366428	Identifier	process_print_classad		5366254	2					
ANR	5366429	ParameterList	"const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors"		5366254	3					
ANR	5366430	Parameter	const string & line	398:34:11885:11902	5366254	0	True				
ANR	5366431	ParameterType	const string &		5366254	0					
ANR	5366432	Identifier	line		5366254	1					
ANR	5366433	Parameter	int token_start	399:10:11915:11929	5366254	1	True				
ANR	5366434	ParameterType	int		5366254	0					
ANR	5366435	Identifier	token_start		5366254	1					
ANR	5366436	Parameter	int line_number	399:27:11932:11946	5366254	2	True				
ANR	5366437	ParameterType	int		5366254	0					
ANR	5366438	Identifier	line_number		5366254	1					
ANR	5366439	Parameter	const Parameters & parameters	400:10:11960:11987	5366254	3	True				
ANR	5366440	ParameterType	const Parameters &		5366254	0					
ANR	5366441	Identifier	parameters		5366254	1					
ANR	5366442	Parameter	ErrorCount * errors	401:10:12000:12017	5366254	4	True				
ANR	5366443	ParameterType	ErrorCount *		5366254	0					
ANR	5366444	Identifier	errors		5366254	1					
ANR	5366445	CFGEntryNode	ENTRY		5366254		True				
ANR	5366446	CFGExitNode	EXIT		5366254		True				
ANR	5366447	Symbol	token_start		5366254						
ANR	5366448	Symbol	NULL		5366254						
ANR	5366449	Symbol	& token_start		5366254						
ANR	5366450	Symbol	line		5366254						
ANR	5366451	Symbol	printer		5366254						
ANR	5366452	Symbol	* classads		5366254						
ANR	5366453	Symbol	extract_token		5366254						
ANR	5366454	Symbol	extra . compare		5366254						
ANR	5366455	Symbol	line_number		5366254						
ANR	5366456	Symbol	extra		5366254						
ANR	5366457	Symbol	classad_name		5366254						
ANR	5366458	Symbol	classad		5366254						
ANR	5366459	Symbol	text		5366254						
ANR	5366460	Symbol	classad_name . compare		5366254						
ANR	5366461	Symbol	parameters		5366254						
ANR	5366462	Symbol	classads		5366254						
ANR	5366463	Symbol	errors		5366254						
ANR	5366464	Symbol	* classad_name		5366254						
ANR	5366465	Function	process_print_classad_xml	446:0:13201:14267							
ANR	5366466	FunctionDef	"process_print_classad_xml (const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors)"		5366465	0					
ANR	5366467	CompoundStatement		450:0:13388:14267	5366465	0					
ANR	5366468	IdentifierDeclStatement	"string classad_name , extra ;"	451:1:13391:13417	5366465	0	True				
ANR	5366469	IdentifierDecl	classad_name		5366465	0					
ANR	5366470	IdentifierDeclType	string		5366465	0					
ANR	5366471	Identifier	classad_name		5366465	1					
ANR	5366472	IdentifierDecl	extra		5366465	1					
ANR	5366473	IdentifierDeclType	string		5366465	0					
ANR	5366474	Identifier	extra		5366465	1					
ANR	5366475	ExpressionStatement	"classad_name = extract_token ( & token_start , line )"	453:1:13421:13469	5366465	1	True				
ANR	5366476	AssignmentExpression	"classad_name = extract_token ( & token_start , line )"		5366465	0		=			
ANR	5366477	Identifier	classad_name		5366465	0					
ANR	5366478	CallExpression	"extract_token ( & token_start , line )"		5366465	1					
ANR	5366479	Callee	extract_token		5366465	0					
ANR	5366480	Identifier	extract_token		5366465	0					
ANR	5366481	ArgumentList	& token_start		5366465	1					
ANR	5366482	Argument	& token_start		5366465	0					
ANR	5366483	UnaryOperationExpression	& token_start		5366465	0					
ANR	5366484	UnaryOperator	&		5366465	0					
ANR	5366485	Identifier	token_start		5366465	1					
ANR	5366486	Argument	line		5366465	1					
ANR	5366487	Identifier	line		5366465	0					
ANR	5366488	ExpressionStatement	"extra = extract_token ( & token_start , line )"	454:1:13472:13513	5366465	2	True				
ANR	5366489	AssignmentExpression	"extra = extract_token ( & token_start , line )"		5366465	0		=			
ANR	5366490	Identifier	extra		5366465	0					
ANR	5366491	CallExpression	"extract_token ( & token_start , line )"		5366465	1					
ANR	5366492	Callee	extract_token		5366465	0					
ANR	5366493	Identifier	extract_token		5366465	0					
ANR	5366494	ArgumentList	& token_start		5366465	1					
ANR	5366495	Argument	& token_start		5366465	0					
ANR	5366496	UnaryOperationExpression	& token_start		5366465	0					
ANR	5366497	UnaryOperator	&		5366465	0					
ANR	5366498	Identifier	token_start		5366465	1					
ANR	5366499	Argument	line		5366465	1					
ANR	5366500	Identifier	line		5366465	0					
ANR	5366501	IfStatement	"if ( ! classad_name . compare ( """" ) )"		5366465	3					
ANR	5366502	Condition	"! classad_name . compare ( """" )"	455:5:13520:13544	5366465	0	True				
ANR	5366503	UnaryOperationExpression	"! classad_name . compare ( """" )"		5366465	0					
ANR	5366504	UnaryOperator	!		5366465	0					
ANR	5366505	CallExpression	"classad_name . compare ( """" )"		5366465	1					
ANR	5366506	Callee	classad_name . compare		5366465	0					
ANR	5366507	MemberAccess	classad_name . compare		5366465	0					
ANR	5366508	Identifier	classad_name		5366465	0					
ANR	5366509	Identifier	compare		5366465	1					
ANR	5366510	ArgumentList	""""""		5366465	1					
ANR	5366511	Argument	""""""		5366465	0					
ANR	5366512	PrimaryExpression	""""""		5366465	0					
ANR	5366513	CompoundStatement		6:32:158:158	5366465	1					
ANR	5366514	ExpressionStatement	"cout << ""Error: Missing ClassAd name on line "" << line_number << ""."" << endl"	456:2:13551:13632	5366465	0	True				
ANR	5366515	ShiftExpression	"cout << ""Error: Missing ClassAd name on line "" << line_number << ""."" << endl"		5366465	0		<<			
ANR	5366516	Identifier	cout		5366465	0					
ANR	5366517	ShiftExpression	"""Error: Missing ClassAd name on line "" << line_number << ""."" << endl"		5366465	1		<<			
ANR	5366518	PrimaryExpression	"""Error: Missing ClassAd name on line """		5366465	0					
ANR	5366519	ShiftExpression	"line_number << ""."" << endl"		5366465	1		<<			
ANR	5366520	Identifier	line_number		5366465	0					
ANR	5366521	ShiftExpression	"""."" << endl"		5366465	1		<<			
ANR	5366522	PrimaryExpression	"""."""		5366465	0					
ANR	5366523	Identifier	endl		5366465	1					
ANR	5366524	ExpressionStatement	"cout << ""       Format: print-classad <classad>"" << endl"	458:2:13636:13692	5366465	1	True				
ANR	5366525	ShiftExpression	"cout << ""       Format: print-classad <classad>"" << endl"		5366465	0		<<			
ANR	5366526	Identifier	cout		5366465	0					
ANR	5366527	ShiftExpression	"""       Format: print-classad <classad>"" << endl"		5366465	1		<<			
ANR	5366528	PrimaryExpression	"""       Format: print-classad <classad>"""		5366465	0					
ANR	5366529	Identifier	endl		5366465	1					
ANR	5366530	ExpressionStatement	errors -> IncrementErrors ( )	459:2:13696:13721	5366465	2	True				
ANR	5366531	CallExpression	errors -> IncrementErrors ( )		5366465	0					
ANR	5366532	Callee	errors -> IncrementErrors		5366465	0					
ANR	5366533	PtrMemberAccess	errors -> IncrementErrors		5366465	0					
ANR	5366534	Identifier	errors		5366465	0					
ANR	5366535	Identifier	IncrementErrors		5366465	1					
ANR	5366536	ArgumentList			5366465	1					
ANR	5366537	ElseStatement	else		5366465	0					
ANR	5366538	IfStatement	"if ( extra . compare ( """" ) )"		5366465	0					
ANR	5366539	Condition	"extra . compare ( """" )"	461:10:13736:13752	5366465	0	True				
ANR	5366540	CallExpression	"extra . compare ( """" )"		5366465	0					
ANR	5366541	Callee	extra . compare		5366465	0					
ANR	5366542	MemberAccess	extra . compare		5366465	0					
ANR	5366543	Identifier	extra		5366465	0					
ANR	5366544	Identifier	compare		5366465	1					
ANR	5366545	ArgumentList	""""""		5366465	1					
ANR	5366546	Argument	""""""		5366465	0					
ANR	5366547	PrimaryExpression	""""""		5366465	0					
ANR	5366548	CompoundStatement		12:29:366:366	5366465	1					
ANR	5366549	ExpressionStatement	"cout << ""Ignored extra input ("" << extra << "") on line "" << line_number << ""."" << endl"	462:2:13759:13849	5366465	0	True				
ANR	5366550	ShiftExpression	"cout << ""Ignored extra input ("" << extra << "") on line "" << line_number << ""."" << endl"		5366465	0		<<			
ANR	5366551	Identifier	cout		5366465	0					
ANR	5366552	ShiftExpression	"""Ignored extra input ("" << extra << "") on line "" << line_number << ""."" << endl"		5366465	1		<<			
ANR	5366553	PrimaryExpression	"""Ignored extra input ("""		5366465	0					
ANR	5366554	ShiftExpression	"extra << "") on line "" << line_number << ""."" << endl"		5366465	1		<<			
ANR	5366555	Identifier	extra		5366465	0					
ANR	5366556	ShiftExpression	""") on line "" << line_number << ""."" << endl"		5366465	1		<<			
ANR	5366557	PrimaryExpression	""") on line """		5366465	0					
ANR	5366558	ShiftExpression	"line_number << ""."" << endl"		5366465	1		<<			
ANR	5366559	Identifier	line_number		5366465	0					
ANR	5366560	ShiftExpression	"""."" << endl"		5366465	1		<<			
ANR	5366561	PrimaryExpression	"""."""		5366465	0					
ANR	5366562	Identifier	endl		5366465	1					
ANR	5366563	IdentifierDeclStatement	ClassAd * classad ;	466:1:13857:13873	5366465	4	True				
ANR	5366564	IdentifierDecl	* classad		5366465	0					
ANR	5366565	IdentifierDeclType	ClassAd *		5366465	0					
ANR	5366566	Identifier	classad		5366465	1					
ANR	5366567	ExpressionStatement	classad = classads [ classad_name ]	468:1:13877:13909	5366465	5	True				
ANR	5366568	AssignmentExpression	classad = classads [ classad_name ]		5366465	0		=			
ANR	5366569	Identifier	classad		5366465	0					
ANR	5366570	ArrayIndexing	classads [ classad_name ]		5366465	1					
ANR	5366571	Identifier	classads		5366465	0					
ANR	5366572	Identifier	classad_name		5366465	1					
ANR	5366573	IfStatement	if ( classad == NULL )		5366465	6					
ANR	5366574	Condition	classad == NULL	470:5:13917:13931	5366465	0	True				
ANR	5366575	EqualityExpression	classad == NULL		5366465	0		==			
ANR	5366576	Identifier	classad		5366465	0					
ANR	5366577	Identifier	NULL		5366465	1					
ANR	5366578	CompoundStatement		21:22:545:545	5366465	1					
ANR	5366579	ExpressionStatement	"cout << ""Error: Unknown ClassAd: \\"""" << classad_name << ""\\"" on line "" << line_number << ""."" << endl"	471:2:13938:14041	5366465	0	True				
ANR	5366580	ShiftExpression	"cout << ""Error: Unknown ClassAd: \\"""" << classad_name << ""\\"" on line "" << line_number << ""."" << endl"		5366465	0		<<			
ANR	5366581	Identifier	cout		5366465	0					
ANR	5366582	ShiftExpression	"""Error: Unknown ClassAd: \\"""" << classad_name << ""\\"" on line "" << line_number << ""."" << endl"		5366465	1		<<			
ANR	5366583	PrimaryExpression	"""Error: Unknown ClassAd: \\"""""		5366465	0					
ANR	5366584	ShiftExpression	"classad_name << ""\\"" on line "" << line_number << ""."" << endl"		5366465	1		<<			
ANR	5366585	Identifier	classad_name		5366465	0					
ANR	5366586	ShiftExpression	"""\\"" on line "" << line_number << ""."" << endl"		5366465	1		<<			
ANR	5366587	PrimaryExpression	"""\\"" on line """		5366465	0					
ANR	5366588	ShiftExpression	"line_number << ""."" << endl"		5366465	1		<<			
ANR	5366589	Identifier	line_number		5366465	0					
ANR	5366590	ShiftExpression	"""."" << endl"		5366465	1		<<			
ANR	5366591	PrimaryExpression	"""."""		5366465	0					
ANR	5366592	Identifier	endl		5366465	1					
ANR	5366593	ExpressionStatement	errors -> IncrementErrors ( )	473:2:14045:14070	5366465	1	True				
ANR	5366594	CallExpression	errors -> IncrementErrors ( )		5366465	0					
ANR	5366595	Callee	errors -> IncrementErrors		5366465	0					
ANR	5366596	PtrMemberAccess	errors -> IncrementErrors		5366465	0					
ANR	5366597	Identifier	errors		5366465	0					
ANR	5366598	Identifier	IncrementErrors		5366465	1					
ANR	5366599	ArgumentList			5366465	1					
ANR	5366600	ElseStatement	else		5366465	0					
ANR	5366601	CompoundStatement		27:2:726:750	5366465	0					
ANR	5366602	IdentifierDeclStatement	ClassAdXMLUnParser printer ;	475:2:14084:14111	5366465	0	True				
ANR	5366603	IdentifierDecl	printer		5366465	0					
ANR	5366604	IdentifierDeclType	ClassAdXMLUnParser		5366465	0					
ANR	5366605	Identifier	printer		5366465	1					
ANR	5366606	IdentifierDeclStatement	string text ;	476:2:14115:14139	5366465	1	True				
ANR	5366607	IdentifierDecl	text		5366465	0					
ANR	5366608	IdentifierDeclType	string		5366465	0					
ANR	5366609	Identifier	text		5366465	1					
ANR	5366610	ExpressionStatement	"printer . Unparse ( text , classad )"	478:2:14144:14174	5366465	2	True				
ANR	5366611	CallExpression	"printer . Unparse ( text , classad )"		5366465	0					
ANR	5366612	Callee	printer . Unparse		5366465	0					
ANR	5366613	MemberAccess	printer . Unparse		5366465	0					
ANR	5366614	Identifier	printer		5366465	0					
ANR	5366615	Identifier	Unparse		5366465	1					
ANR	5366616	ArgumentList	text		5366465	1					
ANR	5366617	Argument	text		5366465	0					
ANR	5366618	Identifier	text		5366465	0					
ANR	5366619	Argument	classad		5366465	1					
ANR	5366620	Identifier	classad		5366465	0					
ANR	5366621	ExpressionStatement	"cout << ""ClassAd "" << classad_name << "":\\n"""	479:2:14178:14221	5366465	3	True				
ANR	5366622	ShiftExpression	"cout << ""ClassAd "" << classad_name << "":\\n"""		5366465	0		<<			
ANR	5366623	Identifier	cout		5366465	0					
ANR	5366624	ShiftExpression	"""ClassAd "" << classad_name << "":\\n"""		5366465	1		<<			
ANR	5366625	PrimaryExpression	"""ClassAd """		5366465	0					
ANR	5366626	ShiftExpression	"classad_name << "":\\n"""		5366465	1		<<			
ANR	5366627	Identifier	classad_name		5366465	0					
ANR	5366628	PrimaryExpression	""":\\n"""		5366465	1					
ANR	5366629	ExpressionStatement	cout << text	480:2:14225:14237	5366465	4	True				
ANR	5366630	ShiftExpression	cout << text		5366465	0		<<			
ANR	5366631	Identifier	cout		5366465	0					
ANR	5366632	Identifier	text		5366465	1					
ANR	5366633	ExpressionStatement	cout << endl	481:2:14241:14253	5366465	5	True				
ANR	5366634	ShiftExpression	cout << endl		5366465	0		<<			
ANR	5366635	Identifier	cout		5366465	0					
ANR	5366636	Identifier	endl		5366465	1					
ANR	5366637	ReturnStatement	return ;	483:1:14259:14265	5366465	7	True				
ANR	5366638	ReturnType	static void		5366465	1					
ANR	5366639	Identifier	process_print_classad_xml		5366465	2					
ANR	5366640	ParameterList	"const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors"		5366465	3					
ANR	5366641	Parameter	const string & line	446:38:13239:13256	5366465	0	True				
ANR	5366642	ParameterType	const string &		5366465	0					
ANR	5366643	Identifier	line		5366465	1					
ANR	5366644	Parameter	int token_start	447:16:13275:13289	5366465	1	True				
ANR	5366645	ParameterType	int		5366465	0					
ANR	5366646	Identifier	token_start		5366465	1					
ANR	5366647	Parameter	int line_number	447:33:13292:13306	5366465	2	True				
ANR	5366648	ParameterType	int		5366465	0					
ANR	5366649	Identifier	line_number		5366465	1					
ANR	5366650	Parameter	const Parameters & parameters	448:14:13324:13351	5366465	3	True				
ANR	5366651	ParameterType	const Parameters &		5366465	0					
ANR	5366652	Identifier	parameters		5366465	1					
ANR	5366653	Parameter	ErrorCount * errors	449:14:13368:13385	5366465	4	True				
ANR	5366654	ParameterType	ErrorCount *		5366465	0					
ANR	5366655	Identifier	errors		5366465	1					
ANR	5366656	CFGEntryNode	ENTRY		5366465		True				
ANR	5366657	CFGExitNode	EXIT		5366465		True				
ANR	5366658	Symbol	token_start		5366465						
ANR	5366659	Symbol	NULL		5366465						
ANR	5366660	Symbol	& token_start		5366465						
ANR	5366661	Symbol	line		5366465						
ANR	5366662	Symbol	printer		5366465						
ANR	5366663	Symbol	* classads		5366465						
ANR	5366664	Symbol	extract_token		5366465						
ANR	5366665	Symbol	extra . compare		5366465						
ANR	5366666	Symbol	line_number		5366465						
ANR	5366667	Symbol	extra		5366465						
ANR	5366668	Symbol	classad_name		5366465						
ANR	5366669	Symbol	classad		5366465						
ANR	5366670	Symbol	text		5366465						
ANR	5366671	Symbol	classad_name . compare		5366465						
ANR	5366672	Symbol	parameters		5366465						
ANR	5366673	Symbol	classads		5366465						
ANR	5366674	Symbol	errors		5366465						
ANR	5366675	Symbol	* classad_name		5366465						
ANR	5366676	Function	process_test_match	498:0:14864:17662							
ANR	5366677	FunctionDef	"process_test_match (const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors)"		5366676	0					
ANR	5366678	CompoundStatement		502:0:15030:17662	5366676	0					
ANR	5366679	IdentifierDeclStatement	"string match_type , left_classad_name , right_classad_name ;"	503:1:15033:15089	5366676	0	True				
ANR	5366680	IdentifierDecl	match_type		5366676	0					
ANR	5366681	IdentifierDeclType	string		5366676	0					
ANR	5366682	Identifier	match_type		5366676	1					
ANR	5366683	IdentifierDecl	left_classad_name		5366676	1					
ANR	5366684	IdentifierDeclType	string		5366676	0					
ANR	5366685	Identifier	left_classad_name		5366676	1					
ANR	5366686	IdentifierDecl	right_classad_name		5366676	2					
ANR	5366687	IdentifierDeclType	string		5366676	0					
ANR	5366688	Identifier	right_classad_name		5366676	1					
ANR	5366689	IdentifierDeclStatement	"string expect_match , extra ;"	504:1:15092:15118	5366676	1	True				
ANR	5366690	IdentifierDecl	expect_match		5366676	0					
ANR	5366691	IdentifierDeclType	string		5366676	0					
ANR	5366692	Identifier	expect_match		5366676	1					
ANR	5366693	IdentifierDecl	extra		5366676	1					
ANR	5366694	IdentifierDeclType	string		5366676	0					
ANR	5366695	Identifier	extra		5366676	1					
ANR	5366696	ExpressionStatement	"match_type = extract_token ( & token_start , line )"	506:1:15122:15168	5366676	2	True				
ANR	5366697	AssignmentExpression	"match_type = extract_token ( & token_start , line )"		5366676	0		=			
ANR	5366698	Identifier	match_type		5366676	0					
ANR	5366699	CallExpression	"extract_token ( & token_start , line )"		5366676	1					
ANR	5366700	Callee	extract_token		5366676	0					
ANR	5366701	Identifier	extract_token		5366676	0					
ANR	5366702	ArgumentList	& token_start		5366676	1					
ANR	5366703	Argument	& token_start		5366676	0					
ANR	5366704	UnaryOperationExpression	& token_start		5366676	0					
ANR	5366705	UnaryOperator	&		5366676	0					
ANR	5366706	Identifier	token_start		5366676	1					
ANR	5366707	Argument	line		5366676	1					
ANR	5366708	Identifier	line		5366676	0					
ANR	5366709	ExpressionStatement	"left_classad_name = extract_token ( & token_start , line )"	507:1:15171:15224	5366676	3	True				
ANR	5366710	AssignmentExpression	"left_classad_name = extract_token ( & token_start , line )"		5366676	0		=			
ANR	5366711	Identifier	left_classad_name		5366676	0					
ANR	5366712	CallExpression	"extract_token ( & token_start , line )"		5366676	1					
ANR	5366713	Callee	extract_token		5366676	0					
ANR	5366714	Identifier	extract_token		5366676	0					
ANR	5366715	ArgumentList	& token_start		5366676	1					
ANR	5366716	Argument	& token_start		5366676	0					
ANR	5366717	UnaryOperationExpression	& token_start		5366676	0					
ANR	5366718	UnaryOperator	&		5366676	0					
ANR	5366719	Identifier	token_start		5366676	1					
ANR	5366720	Argument	line		5366676	1					
ANR	5366721	Identifier	line		5366676	0					
ANR	5366722	ExpressionStatement	"right_classad_name = extract_token ( & token_start , line )"	508:1:15227:15281	5366676	4	True				
ANR	5366723	AssignmentExpression	"right_classad_name = extract_token ( & token_start , line )"		5366676	0		=			
ANR	5366724	Identifier	right_classad_name		5366676	0					
ANR	5366725	CallExpression	"extract_token ( & token_start , line )"		5366676	1					
ANR	5366726	Callee	extract_token		5366676	0					
ANR	5366727	Identifier	extract_token		5366676	0					
ANR	5366728	ArgumentList	& token_start		5366676	1					
ANR	5366729	Argument	& token_start		5366676	0					
ANR	5366730	UnaryOperationExpression	& token_start		5366676	0					
ANR	5366731	UnaryOperator	&		5366676	0					
ANR	5366732	Identifier	token_start		5366676	1					
ANR	5366733	Argument	line		5366676	1					
ANR	5366734	Identifier	line		5366676	0					
ANR	5366735	ExpressionStatement	"expect_match = extract_token ( & token_start , line )"	509:1:15284:15332	5366676	5	True				
ANR	5366736	AssignmentExpression	"expect_match = extract_token ( & token_start , line )"		5366676	0		=			
ANR	5366737	Identifier	expect_match		5366676	0					
ANR	5366738	CallExpression	"extract_token ( & token_start , line )"		5366676	1					
ANR	5366739	Callee	extract_token		5366676	0					
ANR	5366740	Identifier	extract_token		5366676	0					
ANR	5366741	ArgumentList	& token_start		5366676	1					
ANR	5366742	Argument	& token_start		5366676	0					
ANR	5366743	UnaryOperationExpression	& token_start		5366676	0					
ANR	5366744	UnaryOperator	&		5366676	0					
ANR	5366745	Identifier	token_start		5366676	1					
ANR	5366746	Argument	line		5366676	1					
ANR	5366747	Identifier	line		5366676	0					
ANR	5366748	ExpressionStatement	"extra = extract_token ( & token_start , line )"	510:1:15335:15376	5366676	6	True				
ANR	5366749	AssignmentExpression	"extra = extract_token ( & token_start , line )"		5366676	0		=			
ANR	5366750	Identifier	extra		5366676	0					
ANR	5366751	CallExpression	"extract_token ( & token_start , line )"		5366676	1					
ANR	5366752	Callee	extract_token		5366676	0					
ANR	5366753	Identifier	extract_token		5366676	0					
ANR	5366754	ArgumentList	& token_start		5366676	1					
ANR	5366755	Argument	& token_start		5366676	0					
ANR	5366756	UnaryOperationExpression	& token_start		5366676	0					
ANR	5366757	UnaryOperator	&		5366676	0					
ANR	5366758	Identifier	token_start		5366676	1					
ANR	5366759	Argument	line		5366676	1					
ANR	5366760	Identifier	line		5366676	0					
ANR	5366761	IfStatement	"if ( ! match_type . compare ( """" ) || ! left_classad_name . compare ( """" ) || ! right_classad_name . compare ( """" ) || ! expect_match . compare ( """" ) )"		5366676	7					
ANR	5366762	Condition	"! match_type . compare ( """" ) || ! left_classad_name . compare ( """" ) || ! right_classad_name . compare ( """" ) || ! expect_match . compare ( """" )"	511:5:15383:15505	5366676	0	True				
ANR	5366763	OrExpression	"! match_type . compare ( """" ) || ! left_classad_name . compare ( """" ) || ! right_classad_name . compare ( """" ) || ! expect_match . compare ( """" )"		5366676	0		||			
ANR	5366764	UnaryOperationExpression	"! match_type . compare ( """" )"		5366676	0					
ANR	5366765	UnaryOperator	!		5366676	0					
ANR	5366766	CallExpression	"match_type . compare ( """" )"		5366676	1					
ANR	5366767	Callee	match_type . compare		5366676	0					
ANR	5366768	MemberAccess	match_type . compare		5366676	0					
ANR	5366769	Identifier	match_type		5366676	0					
ANR	5366770	Identifier	compare		5366676	1					
ANR	5366771	ArgumentList	""""""		5366676	1					
ANR	5366772	Argument	""""""		5366676	0					
ANR	5366773	PrimaryExpression	""""""		5366676	0					
ANR	5366774	OrExpression	"! left_classad_name . compare ( """" ) || ! right_classad_name . compare ( """" ) || ! expect_match . compare ( """" )"		5366676	1		||			
ANR	5366775	UnaryOperationExpression	"! left_classad_name . compare ( """" )"		5366676	0					
ANR	5366776	UnaryOperator	!		5366676	0					
ANR	5366777	CallExpression	"left_classad_name . compare ( """" )"		5366676	1					
ANR	5366778	Callee	left_classad_name . compare		5366676	0					
ANR	5366779	MemberAccess	left_classad_name . compare		5366676	0					
ANR	5366780	Identifier	left_classad_name		5366676	0					
ANR	5366781	Identifier	compare		5366676	1					
ANR	5366782	ArgumentList	""""""		5366676	1					
ANR	5366783	Argument	""""""		5366676	0					
ANR	5366784	PrimaryExpression	""""""		5366676	0					
ANR	5366785	OrExpression	"! right_classad_name . compare ( """" ) || ! expect_match . compare ( """" )"		5366676	1		||			
ANR	5366786	UnaryOperationExpression	"! right_classad_name . compare ( """" )"		5366676	0					
ANR	5366787	UnaryOperator	!		5366676	0					
ANR	5366788	CallExpression	"right_classad_name . compare ( """" )"		5366676	1					
ANR	5366789	Callee	right_classad_name . compare		5366676	0					
ANR	5366790	MemberAccess	right_classad_name . compare		5366676	0					
ANR	5366791	Identifier	right_classad_name		5366676	0					
ANR	5366792	Identifier	compare		5366676	1					
ANR	5366793	ArgumentList	""""""		5366676	1					
ANR	5366794	Argument	""""""		5366676	0					
ANR	5366795	PrimaryExpression	""""""		5366676	0					
ANR	5366796	UnaryOperationExpression	"! expect_match . compare ( """" )"		5366676	1					
ANR	5366797	UnaryOperator	!		5366676	0					
ANR	5366798	CallExpression	"expect_match . compare ( """" )"		5366676	1					
ANR	5366799	Callee	expect_match . compare		5366676	0					
ANR	5366800	MemberAccess	expect_match . compare		5366676	0					
ANR	5366801	Identifier	expect_match		5366676	0					
ANR	5366802	Identifier	compare		5366676	1					
ANR	5366803	ArgumentList	""""""		5366676	1					
ANR	5366804	Argument	""""""		5366676	0					
ANR	5366805	PrimaryExpression	""""""		5366676	0					
ANR	5366806	CompoundStatement		11:67:477:477	5366676	1					
ANR	5366807	ExpressionStatement	"cout << ""Error: Missing match information on line "" << line_number << ""."" << endl"	513:2:15512:15598	5366676	0	True				
ANR	5366808	ShiftExpression	"cout << ""Error: Missing match information on line "" << line_number << ""."" << endl"		5366676	0		<<			
ANR	5366809	Identifier	cout		5366676	0					
ANR	5366810	ShiftExpression	"""Error: Missing match information on line "" << line_number << ""."" << endl"		5366676	1		<<			
ANR	5366811	PrimaryExpression	"""Error: Missing match information on line """		5366676	0					
ANR	5366812	ShiftExpression	"line_number << ""."" << endl"		5366676	1		<<			
ANR	5366813	Identifier	line_number		5366676	0					
ANR	5366814	ShiftExpression	"""."" << endl"		5366676	1		<<			
ANR	5366815	PrimaryExpression	"""."""		5366676	0					
ANR	5366816	Identifier	endl		5366676	1					
ANR	5366817	ExpressionStatement	"cout << ""       Format: test-match <type> <classad1> <classad2> "" << ""[ExpectMatch | ExpectDontMatch] "" << endl"	515:2:15602:15718	5366676	1	True				
ANR	5366818	ShiftExpression	"cout << ""       Format: test-match <type> <classad1> <classad2> "" << ""[ExpectMatch | ExpectDontMatch] "" << endl"		5366676	0		<<			
ANR	5366819	Identifier	cout		5366676	0					
ANR	5366820	ShiftExpression	"""       Format: test-match <type> <classad1> <classad2> "" << ""[ExpectMatch | ExpectDontMatch] "" << endl"		5366676	1		<<			
ANR	5366821	PrimaryExpression	"""       Format: test-match <type> <classad1> <classad2> """		5366676	0					
ANR	5366822	ShiftExpression	"""[ExpectMatch | ExpectDontMatch] "" << endl"		5366676	1		<<			
ANR	5366823	PrimaryExpression	"""[ExpectMatch | ExpectDontMatch] """		5366676	0					
ANR	5366824	Identifier	endl		5366676	1					
ANR	5366825	ExpressionStatement	errors -> IncrementErrors ( )	517:2:15722:15747	5366676	2	True				
ANR	5366826	CallExpression	errors -> IncrementErrors ( )		5366676	0					
ANR	5366827	Callee	errors -> IncrementErrors		5366676	0					
ANR	5366828	PtrMemberAccess	errors -> IncrementErrors		5366676	0					
ANR	5366829	Identifier	errors		5366676	0					
ANR	5366830	Identifier	IncrementErrors		5366676	1					
ANR	5366831	ArgumentList			5366676	1					
ANR	5366832	ElseStatement	else		5366676	0					
ANR	5366833	IfStatement	"if ( extra . compare ( """" ) )"		5366676	0					
ANR	5366834	Condition	"extra . compare ( """" )"	519:10:15762:15778	5366676	0	True				
ANR	5366835	CallExpression	"extra . compare ( """" )"		5366676	0					
ANR	5366836	Callee	extra . compare		5366676	0					
ANR	5366837	MemberAccess	extra . compare		5366676	0					
ANR	5366838	Identifier	extra		5366676	0					
ANR	5366839	Identifier	compare		5366676	1					
ANR	5366840	ArgumentList	""""""		5366676	1					
ANR	5366841	Argument	""""""		5366676	0					
ANR	5366842	PrimaryExpression	""""""		5366676	0					
ANR	5366843	CompoundStatement		18:29:750:750	5366676	1					
ANR	5366844	ExpressionStatement	"cout << ""Ignored extra input ("" << extra << "") on line "" << line_number << ""."" << endl"	520:2:15785:15875	5366676	0	True				
ANR	5366845	ShiftExpression	"cout << ""Ignored extra input ("" << extra << "") on line "" << line_number << ""."" << endl"		5366676	0		<<			
ANR	5366846	Identifier	cout		5366676	0					
ANR	5366847	ShiftExpression	"""Ignored extra input ("" << extra << "") on line "" << line_number << ""."" << endl"		5366676	1		<<			
ANR	5366848	PrimaryExpression	"""Ignored extra input ("""		5366676	0					
ANR	5366849	ShiftExpression	"extra << "") on line "" << line_number << ""."" << endl"		5366676	1		<<			
ANR	5366850	Identifier	extra		5366676	0					
ANR	5366851	ShiftExpression	""") on line "" << line_number << ""."" << endl"		5366676	1		<<			
ANR	5366852	PrimaryExpression	""") on line """		5366676	0					
ANR	5366853	ShiftExpression	"line_number << ""."" << endl"		5366676	1		<<			
ANR	5366854	Identifier	line_number		5366676	0					
ANR	5366855	ShiftExpression	"""."" << endl"		5366676	1		<<			
ANR	5366856	PrimaryExpression	"""."""		5366676	0					
ANR	5366857	Identifier	endl		5366676	1					
ANR	5366858	ElseStatement	else		5366676	0					
ANR	5366859	IfStatement	"if ( expect_match . compare ( ""ExpectMatch"" ) && expect_match . compare ( ""ExpectDontMatch"" ) )"		5366676	0					
ANR	5366860	Condition	"expect_match . compare ( ""ExpectMatch"" ) && expect_match . compare ( ""ExpectDontMatch"" )"	523:10:15890:15972	5366676	0	True				
ANR	5366861	AndExpression	"expect_match . compare ( ""ExpectMatch"" ) && expect_match . compare ( ""ExpectDontMatch"" )"		5366676	0		&&			
ANR	5366862	CallExpression	"expect_match . compare ( ""ExpectMatch"" )"		5366676	0					
ANR	5366863	Callee	expect_match . compare		5366676	0					
ANR	5366864	MemberAccess	expect_match . compare		5366676	0					
ANR	5366865	Identifier	expect_match		5366676	0					
ANR	5366866	Identifier	compare		5366676	1					
ANR	5366867	ArgumentList	"""ExpectMatch"""		5366676	1					
ANR	5366868	Argument	"""ExpectMatch"""		5366676	0					
ANR	5366869	PrimaryExpression	"""ExpectMatch"""		5366676	0					
ANR	5366870	CallExpression	"expect_match . compare ( ""ExpectDontMatch"" )"		5366676	1					
ANR	5366871	Callee	expect_match . compare		5366676	0					
ANR	5366872	MemberAccess	expect_match . compare		5366676	0					
ANR	5366873	Identifier	expect_match		5366676	0					
ANR	5366874	Identifier	compare		5366676	1					
ANR	5366875	ArgumentList	"""ExpectDontMatch"""		5366676	1					
ANR	5366876	Argument	"""ExpectDontMatch"""		5366676	0					
ANR	5366877	PrimaryExpression	"""ExpectDontMatch"""		5366676	0					
ANR	5366878	CompoundStatement		23:48:944:944	5366676	1					
ANR	5366879	ExpressionStatement	"cout << ""Error: Need to specify \\""ExpectMatch\\"" or "" << ""\\""ExpectDontMatch\\"" on line "" << line_number << "".\\n"""	525:2:15979:16097	5366676	0	True				
ANR	5366880	ShiftExpression	"cout << ""Error: Need to specify \\""ExpectMatch\\"" or "" << ""\\""ExpectDontMatch\\"" on line "" << line_number << "".\\n"""		5366676	0		<<			
ANR	5366881	Identifier	cout		5366676	0					
ANR	5366882	ShiftExpression	"""Error: Need to specify \\""ExpectMatch\\"" or "" << ""\\""ExpectDontMatch\\"" on line "" << line_number << "".\\n"""		5366676	1		<<			
ANR	5366883	PrimaryExpression	"""Error: Need to specify \\""ExpectMatch\\"" or """		5366676	0					
ANR	5366884	ShiftExpression	"""\\""ExpectDontMatch\\"" on line "" << line_number << "".\\n"""		5366676	1		<<			
ANR	5366885	PrimaryExpression	"""\\""ExpectDontMatch\\"" on line """		5366676	0					
ANR	5366886	ShiftExpression	"line_number << "".\\n"""		5366676	1		<<			
ANR	5366887	Identifier	line_number		5366676	0					
ANR	5366888	PrimaryExpression	""".\\n"""		5366676	1					
ANR	5366889	ExpressionStatement	errors -> IncrementErrors ( )	528:2:16101:16126	5366676	1	True				
ANR	5366890	CallExpression	errors -> IncrementErrors ( )		5366676	0					
ANR	5366891	Callee	errors -> IncrementErrors		5366676	0					
ANR	5366892	PtrMemberAccess	errors -> IncrementErrors		5366676	0					
ANR	5366893	Identifier	errors		5366676	0					
ANR	5366894	Identifier	IncrementErrors		5366676	1					
ANR	5366895	ArgumentList			5366676	1					
ANR	5366896	ExpressionStatement	"expect_match = ""ExpectMatch"""	529:2:16130:16158	5366676	2	True				
ANR	5366897	AssignmentExpression	"expect_match = ""ExpectMatch"""		5366676	0		=			
ANR	5366898	Identifier	expect_match		5366676	0					
ANR	5366899	PrimaryExpression	"""ExpectMatch"""		5366676	1					
ANR	5366900	IdentifierDeclStatement	"ClassAd * left_classad , * right_classad ;"	533:1:16167:16204	5366676	8	True				
ANR	5366901	IdentifierDecl	* left_classad		5366676	0					
ANR	5366902	IdentifierDeclType	ClassAd *		5366676	0					
ANR	5366903	Identifier	left_classad		5366676	1					
ANR	5366904	IdentifierDecl	* right_classad		5366676	1					
ANR	5366905	IdentifierDeclType	ClassAd *		5366676	0					
ANR	5366906	Identifier	right_classad		5366676	1					
ANR	5366907	ExpressionStatement	left_classad = classads [ left_classad_name ]	535:1:16208:16250	5366676	9	True				
ANR	5366908	AssignmentExpression	left_classad = classads [ left_classad_name ]		5366676	0		=			
ANR	5366909	Identifier	left_classad		5366676	0					
ANR	5366910	ArrayIndexing	classads [ left_classad_name ]		5366676	1					
ANR	5366911	Identifier	classads		5366676	0					
ANR	5366912	Identifier	left_classad_name		5366676	1					
ANR	5366913	ExpressionStatement	right_classad = classads [ right_classad_name ]	536:1:16253:16297	5366676	10	True				
ANR	5366914	AssignmentExpression	right_classad = classads [ right_classad_name ]		5366676	0		=			
ANR	5366915	Identifier	right_classad		5366676	0					
ANR	5366916	ArrayIndexing	classads [ right_classad_name ]		5366676	1					
ANR	5366917	Identifier	classads		5366676	0					
ANR	5366918	Identifier	right_classad_name		5366676	1					
ANR	5366919	IfStatement	if ( left_classad == NULL )		5366676	11					
ANR	5366920	Condition	left_classad == NULL	538:5:16305:16324	5366676	0	True				
ANR	5366921	EqualityExpression	left_classad == NULL		5366676	0		==			
ANR	5366922	Identifier	left_classad		5366676	0					
ANR	5366923	Identifier	NULL		5366676	1					
ANR	5366924	CompoundStatement		37:27:1296:1296	5366676	1					
ANR	5366925	ExpressionStatement	"cout << ""Error: Unknown ClassAd: \\"""" << left_classad_name << ""\\"" on line "" << line_number << ""."" << endl"	539:2:16331:16439	5366676	0	True				
ANR	5366926	ShiftExpression	"cout << ""Error: Unknown ClassAd: \\"""" << left_classad_name << ""\\"" on line "" << line_number << ""."" << endl"		5366676	0		<<			
ANR	5366927	Identifier	cout		5366676	0					
ANR	5366928	ShiftExpression	"""Error: Unknown ClassAd: \\"""" << left_classad_name << ""\\"" on line "" << line_number << ""."" << endl"		5366676	1		<<			
ANR	5366929	PrimaryExpression	"""Error: Unknown ClassAd: \\"""""		5366676	0					
ANR	5366930	ShiftExpression	"left_classad_name << ""\\"" on line "" << line_number << ""."" << endl"		5366676	1		<<			
ANR	5366931	Identifier	left_classad_name		5366676	0					
ANR	5366932	ShiftExpression	"""\\"" on line "" << line_number << ""."" << endl"		5366676	1		<<			
ANR	5366933	PrimaryExpression	"""\\"" on line """		5366676	0					
ANR	5366934	ShiftExpression	"line_number << ""."" << endl"		5366676	1		<<			
ANR	5366935	Identifier	line_number		5366676	0					
ANR	5366936	ShiftExpression	"""."" << endl"		5366676	1		<<			
ANR	5366937	PrimaryExpression	"""."""		5366676	0					
ANR	5366938	Identifier	endl		5366676	1					
ANR	5366939	ExpressionStatement	errors -> IncrementErrors ( )	541:2:16443:16468	5366676	1	True				
ANR	5366940	CallExpression	errors -> IncrementErrors ( )		5366676	0					
ANR	5366941	Callee	errors -> IncrementErrors		5366676	0					
ANR	5366942	PtrMemberAccess	errors -> IncrementErrors		5366676	0					
ANR	5366943	Identifier	errors		5366676	0					
ANR	5366944	Identifier	IncrementErrors		5366676	1					
ANR	5366945	ArgumentList			5366676	1					
ANR	5366946	IfStatement	if ( right_classad == NULL )		5366676	12					
ANR	5366947	Condition	right_classad == NULL	543:5:16478:16498	5366676	0	True				
ANR	5366948	EqualityExpression	right_classad == NULL		5366676	0		==			
ANR	5366949	Identifier	right_classad		5366676	0					
ANR	5366950	Identifier	NULL		5366676	1					
ANR	5366951	CompoundStatement		42:28:1470:1470	5366676	1					
ANR	5366952	ExpressionStatement	"cout << ""Error: Unknown ClassAd: \\"""" << right_classad_name << ""\\"" on line "" << line_number << ""."" << endl"	544:2:16505:16615	5366676	0	True				
ANR	5366953	ShiftExpression	"cout << ""Error: Unknown ClassAd: \\"""" << right_classad_name << ""\\"" on line "" << line_number << ""."" << endl"		5366676	0		<<			
ANR	5366954	Identifier	cout		5366676	0					
ANR	5366955	ShiftExpression	"""Error: Unknown ClassAd: \\"""" << right_classad_name << ""\\"" on line "" << line_number << ""."" << endl"		5366676	1		<<			
ANR	5366956	PrimaryExpression	"""Error: Unknown ClassAd: \\"""""		5366676	0					
ANR	5366957	ShiftExpression	"right_classad_name << ""\\"" on line "" << line_number << ""."" << endl"		5366676	1		<<			
ANR	5366958	Identifier	right_classad_name		5366676	0					
ANR	5366959	ShiftExpression	"""\\"" on line "" << line_number << ""."" << endl"		5366676	1		<<			
ANR	5366960	PrimaryExpression	"""\\"" on line """		5366676	0					
ANR	5366961	ShiftExpression	"line_number << ""."" << endl"		5366676	1		<<			
ANR	5366962	Identifier	line_number		5366676	0					
ANR	5366963	ShiftExpression	"""."" << endl"		5366676	1		<<			
ANR	5366964	PrimaryExpression	"""."""		5366676	0					
ANR	5366965	Identifier	endl		5366676	1					
ANR	5366966	ExpressionStatement	errors -> IncrementErrors ( )	546:2:16619:16644	5366676	1	True				
ANR	5366967	CallExpression	errors -> IncrementErrors ( )		5366676	0					
ANR	5366968	Callee	errors -> IncrementErrors		5366676	0					
ANR	5366969	PtrMemberAccess	errors -> IncrementErrors		5366676	0					
ANR	5366970	Identifier	errors		5366676	0					
ANR	5366971	Identifier	IncrementErrors		5366676	1					
ANR	5366972	ArgumentList			5366676	1					
ANR	5366973	IfStatement	if ( left_classad != NULL && right_classad != NULL )		5366676	13					
ANR	5366974	Condition	left_classad != NULL && right_classad != NULL	548:5:16654:16698	5366676	0	True				
ANR	5366975	AndExpression	left_classad != NULL && right_classad != NULL		5366676	0		&&			
ANR	5366976	EqualityExpression	left_classad != NULL		5366676	0		!=			
ANR	5366977	Identifier	left_classad		5366676	0					
ANR	5366978	Identifier	NULL		5366676	1					
ANR	5366979	EqualityExpression	right_classad != NULL		5366676	1		!=			
ANR	5366980	Identifier	right_classad		5366676	0					
ANR	5366981	Identifier	NULL		5366676	1					
ANR	5366982	CompoundStatement		51:2:1751:1774	5366676	1					
ANR	5366983	IdentifierDeclStatement	"MatchClassAd match_ad ( left_classad , right_classad ) ;"	549:2:16705:16758	5366676	0	True				
ANR	5366984	IdentifierDecl	"match_ad ( left_classad , right_classad )"		5366676	0					
ANR	5366985	IdentifierDeclType	MatchClassAd		5366676	0					
ANR	5366986	Identifier	match_ad		5366676	1					
ANR	5366987	Expression	"left_classad , right_classad"		5366676	2					
ANR	5366988	Identifier	left_classad		5366676	0					
ANR	5366989	Identifier	right_classad		5366676	1					
ANR	5366990	IdentifierDeclStatement	bool does_match ;	551:2:16763:16778	5366676	1	True				
ANR	5366991	IdentifierDecl	does_match		5366676	0					
ANR	5366992	IdentifierDeclType	bool		5366676	0					
ANR	5366993	Identifier	does_match		5366676	1					
ANR	5366994	IdentifierDeclStatement	bool evaluate_succeeded ;	552:2:16782:16805	5366676	2	True				
ANR	5366995	IdentifierDecl	evaluate_succeeded		5366676	0					
ANR	5366996	IdentifierDeclType	bool		5366676	0					
ANR	5366997	Identifier	evaluate_succeeded		5366676	1					
ANR	5366998	ExpressionStatement	"evaluate_succeeded = match_ad . EvaluateAttrBool ( match_type , does_match )"	553:2:16809:16879	5366676	3	True				
ANR	5366999	AssignmentExpression	"evaluate_succeeded = match_ad . EvaluateAttrBool ( match_type , does_match )"		5366676	0		=			
ANR	5367000	Identifier	evaluate_succeeded		5366676	0					
ANR	5367001	CallExpression	"match_ad . EvaluateAttrBool ( match_type , does_match )"		5366676	1					
ANR	5367002	Callee	match_ad . EvaluateAttrBool		5366676	0					
ANR	5367003	MemberAccess	match_ad . EvaluateAttrBool		5366676	0					
ANR	5367004	Identifier	match_ad		5366676	0					
ANR	5367005	Identifier	EvaluateAttrBool		5366676	1					
ANR	5367006	ArgumentList	match_type		5366676	1					
ANR	5367007	Argument	match_type		5366676	0					
ANR	5367008	Identifier	match_type		5366676	0					
ANR	5367009	Argument	does_match		5366676	1					
ANR	5367010	Identifier	does_match		5366676	0					
ANR	5367011	IfStatement	if ( ! evaluate_succeeded )		5366676	4					
ANR	5367012	Condition	! evaluate_succeeded	554:6:16887:16905	5366676	0	True				
ANR	5367013	UnaryOperationExpression	! evaluate_succeeded		5366676	0					
ANR	5367014	UnaryOperator	!		5366676	0					
ANR	5367015	Identifier	evaluate_succeeded		5366676	1					
ANR	5367016	CompoundStatement		53:28:1878:1878	5366676	1					
ANR	5367017	ExpressionStatement	"cout << ""Error: Couldn't match, bad requirements? Line "" << line_number << ""."" << endl"	555:3:16914:17005	5366676	0	True				
ANR	5367018	ShiftExpression	"cout << ""Error: Couldn't match, bad requirements? Line "" << line_number << ""."" << endl"		5366676	0		<<			
ANR	5367019	Identifier	cout		5366676	0					
ANR	5367020	ShiftExpression	"""Error: Couldn't match, bad requirements? Line "" << line_number << ""."" << endl"		5366676	1		<<			
ANR	5367021	PrimaryExpression	"""Error: Couldn't match, bad requirements? Line """		5366676	0					
ANR	5367022	ShiftExpression	"line_number << ""."" << endl"		5366676	1		<<			
ANR	5367023	Identifier	line_number		5366676	0					
ANR	5367024	ShiftExpression	"""."" << endl"		5366676	1		<<			
ANR	5367025	PrimaryExpression	"""."""		5366676	0					
ANR	5367026	Identifier	endl		5366676	1					
ANR	5367027	ExpressionStatement	errors -> IncrementErrors ( )	557:3:17010:17035	5366676	1	True				
ANR	5367028	CallExpression	errors -> IncrementErrors ( )		5366676	0					
ANR	5367029	Callee	errors -> IncrementErrors		5366676	0					
ANR	5367030	PtrMemberAccess	errors -> IncrementErrors		5366676	0					
ANR	5367031	Identifier	errors		5366676	0					
ANR	5367032	Identifier	IncrementErrors		5366676	1					
ANR	5367033	ArgumentList			5366676	1					
ANR	5367034	ElseStatement	else		5366676	0					
ANR	5367035	IfStatement	"if ( ! expect_match . compare ( ""ExpectMatch"" ) )"		5366676	0					
ANR	5367036	Condition	"! expect_match . compare ( ""ExpectMatch"" )"	558:13:17050:17085	5366676	0	True				
ANR	5367037	UnaryOperationExpression	"! expect_match . compare ( ""ExpectMatch"" )"		5366676	0					
ANR	5367038	UnaryOperator	!		5366676	0					
ANR	5367039	CallExpression	"expect_match . compare ( ""ExpectMatch"" )"		5366676	1					
ANR	5367040	Callee	expect_match . compare		5366676	0					
ANR	5367041	MemberAccess	expect_match . compare		5366676	0					
ANR	5367042	Identifier	expect_match		5366676	0					
ANR	5367043	Identifier	compare		5366676	1					
ANR	5367044	ArgumentList	"""ExpectMatch"""		5366676	1					
ANR	5367045	Argument	"""ExpectMatch"""		5366676	0					
ANR	5367046	PrimaryExpression	"""ExpectMatch"""		5366676	0					
ANR	5367047	CompoundStatement		57:51:2057:2057	5366676	1					
ANR	5367048	IfStatement	if ( ! does_match )		5366676	0					
ANR	5367049	Condition	! does_match	559:7:17097:17107	5366676	0	True				
ANR	5367050	UnaryOperationExpression	! does_match		5366676	0					
ANR	5367051	UnaryOperator	!		5366676	0					
ANR	5367052	Identifier	does_match		5366676	1					
ANR	5367053	CompoundStatement		58:19:2078:2078	5366676	1					
ANR	5367054	ExpressionStatement	"cout << ""Error: ClassAds don't match: "" << ""on line "" << line_number << ""."" << endl"	560:4:17115:17205	5366676	0	True				
ANR	5367055	ShiftExpression	"cout << ""Error: ClassAds don't match: "" << ""on line "" << line_number << ""."" << endl"		5366676	0		<<			
ANR	5367056	Identifier	cout		5366676	0					
ANR	5367057	ShiftExpression	"""Error: ClassAds don't match: "" << ""on line "" << line_number << ""."" << endl"		5366676	1		<<			
ANR	5367058	PrimaryExpression	"""Error: ClassAds don't match: """		5366676	0					
ANR	5367059	ShiftExpression	"""on line "" << line_number << ""."" << endl"		5366676	1		<<			
ANR	5367060	PrimaryExpression	"""on line """		5366676	0					
ANR	5367061	ShiftExpression	"line_number << ""."" << endl"		5366676	1		<<			
ANR	5367062	Identifier	line_number		5366676	0					
ANR	5367063	ShiftExpression	"""."" << endl"		5366676	1		<<			
ANR	5367064	PrimaryExpression	"""."""		5366676	0					
ANR	5367065	Identifier	endl		5366676	1					
ANR	5367066	ExpressionStatement	errors -> IncrementErrors ( )	562:4:17211:17236	5366676	1	True				
ANR	5367067	CallExpression	errors -> IncrementErrors ( )		5366676	0					
ANR	5367068	Callee	errors -> IncrementErrors		5366676	0					
ANR	5367069	PtrMemberAccess	errors -> IncrementErrors		5366676	0					
ANR	5367070	Identifier	errors		5366676	0					
ANR	5367071	Identifier	IncrementErrors		5366676	1					
ANR	5367072	ArgumentList			5366676	1					
ANR	5367073	ElseStatement	else		5366676	0					
ANR	5367074	CompoundStatement		62:10:2217:2217	5366676	0					
ANR	5367075	ExpressionStatement	"cout << ""OK: ClassAds match on line "" << line_number << ""."" << endl"	564:4:17254:17327	5366676	0	True				
ANR	5367076	ShiftExpression	"cout << ""OK: ClassAds match on line "" << line_number << ""."" << endl"		5366676	0		<<			
ANR	5367077	Identifier	cout		5366676	0					
ANR	5367078	ShiftExpression	"""OK: ClassAds match on line "" << line_number << ""."" << endl"		5366676	1		<<			
ANR	5367079	PrimaryExpression	"""OK: ClassAds match on line """		5366676	0					
ANR	5367080	ShiftExpression	"line_number << ""."" << endl"		5366676	1		<<			
ANR	5367081	Identifier	line_number		5366676	0					
ANR	5367082	ShiftExpression	"""."" << endl"		5366676	1		<<			
ANR	5367083	PrimaryExpression	"""."""		5366676	0					
ANR	5367084	Identifier	endl		5366676	1					
ANR	5367085	ElseStatement	else		5366676	0					
ANR	5367086	CompoundStatement		67:7:2314:2314	5366676	0					
ANR	5367087	IfStatement	if ( ! does_match )		5366676	0					
ANR	5367088	Condition	! does_match	569:7:17354:17364	5366676	0	True				
ANR	5367089	UnaryOperationExpression	! does_match		5366676	0					
ANR	5367090	UnaryOperator	!		5366676	0					
ANR	5367091	Identifier	does_match		5366676	1					
ANR	5367092	CompoundStatement		68:19:2335:2335	5366676	1					
ANR	5367093	ExpressionStatement	"cout << ""OK: ClassAds don't match on line "" << line_number << ""."" << endl"	570:4:17372:17451	5366676	0	True				
ANR	5367094	ShiftExpression	"cout << ""OK: ClassAds don't match on line "" << line_number << ""."" << endl"		5366676	0		<<			
ANR	5367095	Identifier	cout		5366676	0					
ANR	5367096	ShiftExpression	"""OK: ClassAds don't match on line "" << line_number << ""."" << endl"		5366676	1		<<			
ANR	5367097	PrimaryExpression	"""OK: ClassAds don't match on line """		5366676	0					
ANR	5367098	ShiftExpression	"line_number << ""."" << endl"		5366676	1		<<			
ANR	5367099	Identifier	line_number		5366676	0					
ANR	5367100	ShiftExpression	"""."" << endl"		5366676	1		<<			
ANR	5367101	PrimaryExpression	"""."""		5366676	0					
ANR	5367102	Identifier	endl		5366676	1					
ANR	5367103	ElseStatement	else		5366676	0					
ANR	5367104	CompoundStatement		71:10:2432:2432	5366676	0					
ANR	5367105	ExpressionStatement	"cout << ""Error: ClassAds match: "" << ""on line "" << line_number << ""."" << endl"	573:4:17469:17553	5366676	0	True				
ANR	5367106	ShiftExpression	"cout << ""Error: ClassAds match: "" << ""on line "" << line_number << ""."" << endl"		5366676	0		<<			
ANR	5367107	Identifier	cout		5366676	0					
ANR	5367108	ShiftExpression	"""Error: ClassAds match: "" << ""on line "" << line_number << ""."" << endl"		5366676	1		<<			
ANR	5367109	PrimaryExpression	"""Error: ClassAds match: """		5366676	0					
ANR	5367110	ShiftExpression	"""on line "" << line_number << ""."" << endl"		5366676	1		<<			
ANR	5367111	PrimaryExpression	"""on line """		5366676	0					
ANR	5367112	ShiftExpression	"line_number << ""."" << endl"		5366676	1		<<			
ANR	5367113	Identifier	line_number		5366676	0					
ANR	5367114	ShiftExpression	"""."" << endl"		5366676	1		<<			
ANR	5367115	PrimaryExpression	"""."""		5366676	0					
ANR	5367116	Identifier	endl		5366676	1					
ANR	5367117	ExpressionStatement	errors -> IncrementErrors ( )	575:4:17559:17584	5366676	1	True				
ANR	5367118	CallExpression	errors -> IncrementErrors ( )		5366676	0					
ANR	5367119	Callee	errors -> IncrementErrors		5366676	0					
ANR	5367120	PtrMemberAccess	errors -> IncrementErrors		5366676	0					
ANR	5367121	Identifier	errors		5366676	0					
ANR	5367122	Identifier	IncrementErrors		5366676	1					
ANR	5367123	ArgumentList			5366676	1					
ANR	5367124	ExpressionStatement	match_ad . RemoveRightAd ( )	578:2:17597:17621	5366676	5	True				
ANR	5367125	CallExpression	match_ad . RemoveRightAd ( )		5366676	0					
ANR	5367126	Callee	match_ad . RemoveRightAd		5366676	0					
ANR	5367127	MemberAccess	match_ad . RemoveRightAd		5366676	0					
ANR	5367128	Identifier	match_ad		5366676	0					
ANR	5367129	Identifier	RemoveRightAd		5366676	1					
ANR	5367130	ArgumentList			5366676	1					
ANR	5367131	ExpressionStatement	match_ad . RemoveLeftAd ( )	579:2:17625:17648	5366676	6	True				
ANR	5367132	CallExpression	match_ad . RemoveLeftAd ( )		5366676	0					
ANR	5367133	Callee	match_ad . RemoveLeftAd		5366676	0					
ANR	5367134	MemberAccess	match_ad . RemoveLeftAd		5366676	0					
ANR	5367135	Identifier	match_ad		5366676	0					
ANR	5367136	Identifier	RemoveLeftAd		5366676	1					
ANR	5367137	ArgumentList			5366676	1					
ANR	5367138	ReturnStatement	return ;	581:1:17654:17660	5366676	14	True				
ANR	5367139	ReturnType	static void		5366676	1					
ANR	5367140	Identifier	process_test_match		5366676	2					
ANR	5367141	ParameterList	"const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors"		5366676	3					
ANR	5367142	Parameter	const string & line	498:31:14895:14912	5366676	0	True				
ANR	5367143	ParameterType	const string &		5366676	0					
ANR	5367144	Identifier	line		5366676	1					
ANR	5367145	Parameter	int token_start	499:10:14925:14939	5366676	1	True				
ANR	5367146	ParameterType	int		5366676	0					
ANR	5367147	Identifier	token_start		5366676	1					
ANR	5367148	Parameter	int line_number	499:27:14942:14956	5366676	2	True				
ANR	5367149	ParameterType	int		5366676	0					
ANR	5367150	Identifier	line_number		5366676	1					
ANR	5367151	Parameter	const Parameters & parameters	500:10:14970:14997	5366676	3	True				
ANR	5367152	ParameterType	const Parameters &		5366676	0					
ANR	5367153	Identifier	parameters		5366676	1					
ANR	5367154	Parameter	ErrorCount * errors	501:10:15010:15027	5366676	4	True				
ANR	5367155	ParameterType	ErrorCount *		5366676	0					
ANR	5367156	Identifier	errors		5366676	1					
ANR	5367157	CFGEntryNode	ENTRY		5366676		True				
ANR	5367158	CFGExitNode	EXIT		5366676		True				
ANR	5367159	Symbol	left_classad		5366676						
ANR	5367160	Symbol	expect_match		5366676						
ANR	5367161	Symbol	& token_start		5366676						
ANR	5367162	Symbol	expect_match . compare		5366676						
ANR	5367163	Symbol	right_classad_name . compare		5366676						
ANR	5367164	Symbol	line		5366676						
ANR	5367165	Symbol	* right_classad_name		5366676						
ANR	5367166	Symbol	* classads		5366676						
ANR	5367167	Symbol	left_classad_name		5366676						
ANR	5367168	Symbol	extra . compare		5366676						
ANR	5367169	Symbol	line_number		5366676						
ANR	5367170	Symbol	does_match		5366676						
ANR	5367171	Symbol	extra		5366676						
ANR	5367172	Symbol	match_type		5366676						
ANR	5367173	Symbol	* left_classad_name		5366676						
ANR	5367174	Symbol	match_type . compare		5366676						
ANR	5367175	Symbol	token_start		5366676						
ANR	5367176	Symbol	NULL		5366676						
ANR	5367177	Symbol	extract_token		5366676						
ANR	5367178	Symbol	match_ad		5366676						
ANR	5367179	Symbol	match_ad . EvaluateAttrBool		5366676						
ANR	5367180	Symbol	left_classad_name . compare		5366676						
ANR	5367181	Symbol	evaluate_succeeded		5366676						
ANR	5367182	Symbol	right_classad_name		5366676						
ANR	5367183	Symbol	right_classad		5366676						
ANR	5367184	Symbol	parameters		5366676						
ANR	5367185	Symbol	classads		5366676						
ANR	5367186	Symbol	errors		5366676						
ANR	5367187	Function	process_test_lexer_one_token	590:0:17870:19614							
ANR	5367188	FunctionDef	"process_test_lexer_one_token (const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors)"		5367187	0					
ANR	5367189	CompoundStatement		594:0:18049:19614	5367187	0					
ANR	5367190	IdentifierDeclStatement	"string token_string , expected_token_type ;"	595:1:18052:18092	5367187	0	True				
ANR	5367191	IdentifierDecl	token_string		5367187	0					
ANR	5367192	IdentifierDeclType	string		5367187	0					
ANR	5367193	Identifier	token_string		5367187	1					
ANR	5367194	IdentifierDecl	expected_token_type		5367187	1					
ANR	5367195	IdentifierDeclType	string		5367187	0					
ANR	5367196	Identifier	expected_token_type		5367187	1					
ANR	5367197	IdentifierDeclStatement	string extra ;	596:1:18095:18107	5367187	1	True				
ANR	5367198	IdentifierDecl	extra		5367187	0					
ANR	5367199	IdentifierDeclType	string		5367187	0					
ANR	5367200	Identifier	extra		5367187	1					
ANR	5367201	ExpressionStatement	"token_string = extract_token ( & token_start , line )"	598:1:18111:18168	5367187	2	True				
ANR	5367202	AssignmentExpression	"token_string = extract_token ( & token_start , line )"		5367187	0		=			
ANR	5367203	Identifier	token_string		5367187	0					
ANR	5367204	CallExpression	"extract_token ( & token_start , line )"		5367187	1					
ANR	5367205	Callee	extract_token		5367187	0					
ANR	5367206	Identifier	extract_token		5367187	0					
ANR	5367207	ArgumentList	& token_start		5367187	1					
ANR	5367208	Argument	& token_start		5367187	0					
ANR	5367209	UnaryOperationExpression	& token_start		5367187	0					
ANR	5367210	UnaryOperator	&		5367187	0					
ANR	5367211	Identifier	token_start		5367187	1					
ANR	5367212	Argument	line		5367187	1					
ANR	5367213	Identifier	line		5367187	0					
ANR	5367214	ExpressionStatement	"expected_token_type = extract_token ( & token_start , line )"	599:1:18171:18228	5367187	3	True				
ANR	5367215	AssignmentExpression	"expected_token_type = extract_token ( & token_start , line )"		5367187	0		=			
ANR	5367216	Identifier	expected_token_type		5367187	0					
ANR	5367217	CallExpression	"extract_token ( & token_start , line )"		5367187	1					
ANR	5367218	Callee	extract_token		5367187	0					
ANR	5367219	Identifier	extract_token		5367187	0					
ANR	5367220	ArgumentList	& token_start		5367187	1					
ANR	5367221	Argument	& token_start		5367187	0					
ANR	5367222	UnaryOperationExpression	& token_start		5367187	0					
ANR	5367223	UnaryOperator	&		5367187	0					
ANR	5367224	Identifier	token_start		5367187	1					
ANR	5367225	Argument	line		5367187	1					
ANR	5367226	Identifier	line		5367187	0					
ANR	5367227	ExpressionStatement	"extra = extract_token ( & token_start , line )"	600:1:18231:18288	5367187	4	True				
ANR	5367228	AssignmentExpression	"extra = extract_token ( & token_start , line )"		5367187	0		=			
ANR	5367229	Identifier	extra		5367187	0					
ANR	5367230	CallExpression	"extract_token ( & token_start , line )"		5367187	1					
ANR	5367231	Callee	extract_token		5367187	0					
ANR	5367232	Identifier	extract_token		5367187	0					
ANR	5367233	ArgumentList	& token_start		5367187	1					
ANR	5367234	Argument	& token_start		5367187	0					
ANR	5367235	UnaryOperationExpression	& token_start		5367187	0					
ANR	5367236	UnaryOperator	&		5367187	0					
ANR	5367237	Identifier	token_start		5367187	1					
ANR	5367238	Argument	line		5367187	1					
ANR	5367239	Identifier	line		5367187	0					
ANR	5367240	IfStatement	"if ( ! token_string . compare ( """" ) || ! expected_token_type . compare ( """" ) )"		5367187	5					
ANR	5367241	Condition	"! token_string . compare ( """" ) || ! expected_token_type . compare ( """" )"	601:5:18295:18358	5367187	0	True				
ANR	5367242	OrExpression	"! token_string . compare ( """" ) || ! expected_token_type . compare ( """" )"		5367187	0		||			
ANR	5367243	UnaryOperationExpression	"! token_string . compare ( """" )"		5367187	0					
ANR	5367244	UnaryOperator	!		5367187	0					
ANR	5367245	CallExpression	"token_string . compare ( """" )"		5367187	1					
ANR	5367246	Callee	token_string . compare		5367187	0					
ANR	5367247	MemberAccess	token_string . compare		5367187	0					
ANR	5367248	Identifier	token_string		5367187	0					
ANR	5367249	Identifier	compare		5367187	1					
ANR	5367250	ArgumentList	""""""		5367187	1					
ANR	5367251	Argument	""""""		5367187	0					
ANR	5367252	PrimaryExpression	""""""		5367187	0					
ANR	5367253	UnaryOperationExpression	"! expected_token_type . compare ( """" )"		5367187	1					
ANR	5367254	UnaryOperator	!		5367187	0					
ANR	5367255	CallExpression	"expected_token_type . compare ( """" )"		5367187	1					
ANR	5367256	Callee	expected_token_type . compare		5367187	0					
ANR	5367257	MemberAccess	expected_token_type . compare		5367187	0					
ANR	5367258	Identifier	expected_token_type		5367187	0					
ANR	5367259	Identifier	compare		5367187	1					
ANR	5367260	ArgumentList	""""""		5367187	1					
ANR	5367261	Argument	""""""		5367187	0					
ANR	5367262	PrimaryExpression	""""""		5367187	0					
ANR	5367263	CompoundStatement		9:39:311:311	5367187	1					
ANR	5367264	ExpressionStatement	"cout << ""Error: Missing match information on line "" << line_number << ""."" << endl"	603:2:18365:18451	5367187	0	True				
ANR	5367265	ShiftExpression	"cout << ""Error: Missing match information on line "" << line_number << ""."" << endl"		5367187	0		<<			
ANR	5367266	Identifier	cout		5367187	0					
ANR	5367267	ShiftExpression	"""Error: Missing match information on line "" << line_number << ""."" << endl"		5367187	1		<<			
ANR	5367268	PrimaryExpression	"""Error: Missing match information on line """		5367187	0					
ANR	5367269	ShiftExpression	"line_number << ""."" << endl"		5367187	1		<<			
ANR	5367270	Identifier	line_number		5367187	0					
ANR	5367271	ShiftExpression	"""."" << endl"		5367187	1		<<			
ANR	5367272	PrimaryExpression	"""."""		5367187	0					
ANR	5367273	Identifier	endl		5367187	1					
ANR	5367274	ExpressionStatement	"cout << ""       Format: test-lexer-one-token <token> <token-type> "" << endl"	605:2:18455:18534	5367187	1	True				
ANR	5367275	ShiftExpression	"cout << ""       Format: test-lexer-one-token <token> <token-type> "" << endl"		5367187	0		<<			
ANR	5367276	Identifier	cout		5367187	0					
ANR	5367277	ShiftExpression	"""       Format: test-lexer-one-token <token> <token-type> "" << endl"		5367187	1		<<			
ANR	5367278	PrimaryExpression	"""       Format: test-lexer-one-token <token> <token-type> """		5367187	0					
ANR	5367279	Identifier	endl		5367187	1					
ANR	5367280	ExpressionStatement	errors -> IncrementErrors ( )	607:2:18538:18563	5367187	2	True				
ANR	5367281	CallExpression	errors -> IncrementErrors ( )		5367187	0					
ANR	5367282	Callee	errors -> IncrementErrors		5367187	0					
ANR	5367283	PtrMemberAccess	errors -> IncrementErrors		5367187	0					
ANR	5367284	Identifier	errors		5367187	0					
ANR	5367285	Identifier	IncrementErrors		5367187	1					
ANR	5367286	ArgumentList			5367187	1					
ANR	5367287	ElseStatement	else		5367187	0					
ANR	5367288	IfStatement	"if ( extra . compare ( """" ) )"		5367187	0					
ANR	5367289	Condition	"extra . compare ( """" )"	609:10:18578:18594	5367187	0	True				
ANR	5367290	CallExpression	"extra . compare ( """" )"		5367187	0					
ANR	5367291	Callee	extra . compare		5367187	0					
ANR	5367292	MemberAccess	extra . compare		5367187	0					
ANR	5367293	Identifier	extra		5367187	0					
ANR	5367294	Identifier	compare		5367187	1					
ANR	5367295	ArgumentList	""""""		5367187	1					
ANR	5367296	Argument	""""""		5367187	0					
ANR	5367297	PrimaryExpression	""""""		5367187	0					
ANR	5367298	CompoundStatement		16:29:547:547	5367187	1					
ANR	5367299	ExpressionStatement	"cout << ""Ignored extra input ("" << extra << "") on line "" << line_number << ""."" << endl"	610:2:18601:18691	5367187	0	True				
ANR	5367300	ShiftExpression	"cout << ""Ignored extra input ("" << extra << "") on line "" << line_number << ""."" << endl"		5367187	0		<<			
ANR	5367301	Identifier	cout		5367187	0					
ANR	5367302	ShiftExpression	"""Ignored extra input ("" << extra << "") on line "" << line_number << ""."" << endl"		5367187	1		<<			
ANR	5367303	PrimaryExpression	"""Ignored extra input ("""		5367187	0					
ANR	5367304	ShiftExpression	"extra << "") on line "" << line_number << ""."" << endl"		5367187	1		<<			
ANR	5367305	Identifier	extra		5367187	0					
ANR	5367306	ShiftExpression	""") on line "" << line_number << ""."" << endl"		5367187	1		<<			
ANR	5367307	PrimaryExpression	""") on line """		5367187	0					
ANR	5367308	ShiftExpression	"line_number << ""."" << endl"		5367187	1		<<			
ANR	5367309	Identifier	line_number		5367187	0					
ANR	5367310	ShiftExpression	"""."" << endl"		5367187	1		<<			
ANR	5367311	PrimaryExpression	"""."""		5367187	0					
ANR	5367312	Identifier	endl		5367187	1					
ANR	5367313	IdentifierDeclStatement	Lexer lexer ;	614:1:18698:18721	5367187	6	True				
ANR	5367314	IdentifierDecl	lexer		5367187	0					
ANR	5367315	IdentifierDeclType	Lexer		5367187	0					
ANR	5367316	Identifier	lexer		5367187	1					
ANR	5367317	IdentifierDeclStatement	Lexer :: TokenType token_type ;	615:1:18724:18752	5367187	7	True				
ANR	5367318	IdentifierDecl	token_type		5367187	0					
ANR	5367319	IdentifierDeclType	Lexer :: TokenType		5367187	0					
ANR	5367320	Identifier	token_type		5367187	1					
ANR	5367321	IdentifierDeclStatement	const char * token_name ;	616:1:18755:18784	5367187	8	True				
ANR	5367322	IdentifierDecl	* token_name		5367187	0					
ANR	5367323	IdentifierDeclType	const char *		5367187	0					
ANR	5367324	Identifier	token_name		5367187	1					
ANR	5367325	IdentifierDeclStatement	StringLexerSource * lexer_source ;	617:1:18787:18820	5367187	9	True				
ANR	5367326	IdentifierDecl	* lexer_source		5367187	0					
ANR	5367327	IdentifierDeclType	StringLexerSource *		5367187	0					
ANR	5367328	Identifier	lexer_source		5367187	1					
ANR	5367329	ExpressionStatement	lexer_source = new StringLexerSource ( & token_string )	619:1:18824:18875	5367187	10	True				
ANR	5367330	AssignmentExpression	lexer_source = new StringLexerSource ( & token_string )		5367187	0		=			
ANR	5367331	Identifier	lexer_source		5367187	0					
ANR	5367332	UnaryOperationExpression	& token_string		5367187	1					
ANR	5367333	UnaryOperator	&		5367187	0					
ANR	5367334	Identifier	token_string		5367187	1					
ANR	5367335	IfStatement	if ( lexer_source == NULL )		5367187	11					
ANR	5367336	Condition	lexer_source == NULL	620:5:18882:18901	5367187	0	True				
ANR	5367337	EqualityExpression	lexer_source == NULL		5367187	0		==			
ANR	5367338	Identifier	lexer_source		5367187	0					
ANR	5367339	Identifier	NULL		5367187	1					
ANR	5367340	CompoundStatement		27:27:854:854	5367187	1					
ANR	5367341	ExpressionStatement	"cout << ""Error: Couldn't allocate LexerSource! on line """	621:2:18908:18964	5367187	0	True				
ANR	5367342	ShiftExpression	"cout << ""Error: Couldn't allocate LexerSource! on line """		5367187	0		<<			
ANR	5367343	Identifier	cout		5367187	0					
ANR	5367344	PrimaryExpression	"""Error: Couldn't allocate LexerSource! on line """		5367187	1					
ANR	5367345	ExpressionStatement	"cout << line_number << ""."" << endl"	622:2:18968:19002	5367187	1	True				
ANR	5367346	ShiftExpression	"cout << line_number << ""."" << endl"		5367187	0		<<			
ANR	5367347	Identifier	cout		5367187	0					
ANR	5367348	ShiftExpression	"line_number << ""."" << endl"		5367187	1		<<			
ANR	5367349	Identifier	line_number		5367187	0					
ANR	5367350	ShiftExpression	"""."" << endl"		5367187	1		<<			
ANR	5367351	PrimaryExpression	"""."""		5367187	0					
ANR	5367352	Identifier	endl		5367187	1					
ANR	5367353	ElseStatement	else		5367187	0					
ANR	5367354	CompoundStatement		30:8:962:962	5367187	0					
ANR	5367355	ExpressionStatement	lexer . Initialize ( lexer_source )	624:2:19016:19046	5367187	0	True				
ANR	5367356	CallExpression	lexer . Initialize ( lexer_source )		5367187	0					
ANR	5367357	Callee	lexer . Initialize		5367187	0					
ANR	5367358	MemberAccess	lexer . Initialize		5367187	0					
ANR	5367359	Identifier	lexer		5367187	0					
ANR	5367360	Identifier	Initialize		5367187	1					
ANR	5367361	ArgumentList	lexer_source		5367187	1					
ANR	5367362	Argument	lexer_source		5367187	0					
ANR	5367363	Identifier	lexer_source		5367187	0					
ANR	5367364	ExpressionStatement	token_type = lexer . PeekToken ( NULL )	625:2:19050:19084	5367187	1	True				
ANR	5367365	AssignmentExpression	token_type = lexer . PeekToken ( NULL )		5367187	0		=			
ANR	5367366	Identifier	token_type		5367187	0					
ANR	5367367	CallExpression	lexer . PeekToken ( NULL )		5367187	1					
ANR	5367368	Callee	lexer . PeekToken		5367187	0					
ANR	5367369	MemberAccess	lexer . PeekToken		5367187	0					
ANR	5367370	Identifier	lexer		5367187	0					
ANR	5367371	Identifier	PeekToken		5367187	1					
ANR	5367372	ArgumentList	NULL		5367187	1					
ANR	5367373	Argument	NULL		5367187	0					
ANR	5367374	Identifier	NULL		5367187	0					
ANR	5367375	ExpressionStatement	token_name = lexer . strLexToken ( token_type )	626:2:19088:19130	5367187	2	True				
ANR	5367376	AssignmentExpression	token_name = lexer . strLexToken ( token_type )		5367187	0		=			
ANR	5367377	Identifier	token_name		5367187	0					
ANR	5367378	CallExpression	lexer . strLexToken ( token_type )		5367187	1					
ANR	5367379	Callee	lexer . strLexToken		5367187	0					
ANR	5367380	MemberAccess	lexer . strLexToken		5367187	0					
ANR	5367381	Identifier	lexer		5367187	0					
ANR	5367382	Identifier	strLexToken		5367187	1					
ANR	5367383	ArgumentList	token_type		5367187	1					
ANR	5367384	Argument	token_type		5367187	0					
ANR	5367385	Identifier	token_type		5367187	0					
ANR	5367386	ExpressionStatement	lexer . FinishedParse ( )	627:2:19134:19155	5367187	3	True				
ANR	5367387	CallExpression	lexer . FinishedParse ( )		5367187	0					
ANR	5367388	Callee	lexer . FinishedParse		5367187	0					
ANR	5367389	MemberAccess	lexer . FinishedParse		5367187	0					
ANR	5367390	Identifier	lexer		5367187	0					
ANR	5367391	Identifier	FinishedParse		5367187	1					
ANR	5367392	ArgumentList			5367187	1					
ANR	5367393	IfStatement	"if ( ! strcmp ( expected_token_type . c_str ( ) , token_name ) )"		5367187	4					
ANR	5367394	Condition	"! strcmp ( expected_token_type . c_str ( ) , token_name )"	628:6:19163:19210	5367187	0	True				
ANR	5367395	UnaryOperationExpression	"! strcmp ( expected_token_type . c_str ( ) , token_name )"		5367187	0					
ANR	5367396	UnaryOperator	!		5367187	0					
ANR	5367397	CallExpression	"strcmp ( expected_token_type . c_str ( ) , token_name )"		5367187	1					
ANR	5367398	Callee	strcmp		5367187	0					
ANR	5367399	Identifier	strcmp		5367187	0					
ANR	5367400	ArgumentList	expected_token_type . c_str ( )		5367187	1					
ANR	5367401	Argument	expected_token_type . c_str ( )		5367187	0					
ANR	5367402	CallExpression	expected_token_type . c_str ( )		5367187	0					
ANR	5367403	Callee	expected_token_type . c_str		5367187	0					
ANR	5367404	MemberAccess	expected_token_type . c_str		5367187	0					
ANR	5367405	Identifier	expected_token_type		5367187	0					
ANR	5367406	Identifier	c_str		5367187	1					
ANR	5367407	ArgumentList			5367187	1					
ANR	5367408	Argument	token_name		5367187	1					
ANR	5367409	Identifier	token_name		5367187	0					
ANR	5367410	CompoundStatement		35:56:1163:1163	5367187	1					
ANR	5367411	ExpressionStatement	"cout << ""OK: Token type for \\"""" << token_string << ""\\"" is "" << token_name << "" on line "" << line_number << ""."" << endl"	629:3:19218:19346	5367187	0	True				
ANR	5367412	ShiftExpression	"cout << ""OK: Token type for \\"""" << token_string << ""\\"" is "" << token_name << "" on line "" << line_number << ""."" << endl"		5367187	0		<<			
ANR	5367413	Identifier	cout		5367187	0					
ANR	5367414	ShiftExpression	"""OK: Token type for \\"""" << token_string << ""\\"" is "" << token_name << "" on line "" << line_number << ""."" << endl"		5367187	1		<<			
ANR	5367415	PrimaryExpression	"""OK: Token type for \\"""""		5367187	0					
ANR	5367416	ShiftExpression	"token_string << ""\\"" is "" << token_name << "" on line "" << line_number << ""."" << endl"		5367187	1		<<			
ANR	5367417	Identifier	token_string		5367187	0					
ANR	5367418	ShiftExpression	"""\\"" is "" << token_name << "" on line "" << line_number << ""."" << endl"		5367187	1		<<			
ANR	5367419	PrimaryExpression	"""\\"" is """		5367187	0					
ANR	5367420	ShiftExpression	"token_name << "" on line "" << line_number << ""."" << endl"		5367187	1		<<			
ANR	5367421	Identifier	token_name		5367187	0					
ANR	5367422	ShiftExpression	""" on line "" << line_number << ""."" << endl"		5367187	1		<<			
ANR	5367423	PrimaryExpression	""" on line """		5367187	0					
ANR	5367424	ShiftExpression	"line_number << ""."" << endl"		5367187	1		<<			
ANR	5367425	Identifier	line_number		5367187	0					
ANR	5367426	ShiftExpression	"""."" << endl"		5367187	1		<<			
ANR	5367427	PrimaryExpression	"""."""		5367187	0					
ANR	5367428	Identifier	endl		5367187	1					
ANR	5367429	ElseStatement	else		5367187	0					
ANR	5367430	CompoundStatement		40:7:1309:1309	5367187	0					
ANR	5367431	ExpressionStatement	"cout << ""Error: Token type for \\"""" << token_string << ""\\"" is not "" << expected_token_type << "" but is \\"""" << token_name << ""\\"" on line "" << line_number << ""."" << endl"	634:3:19364:19541	5367187	0	True				
ANR	5367432	ShiftExpression	"cout << ""Error: Token type for \\"""" << token_string << ""\\"" is not "" << expected_token_type << "" but is \\"""" << token_name << ""\\"" on line "" << line_number << ""."" << endl"		5367187	0		<<			
ANR	5367433	Identifier	cout		5367187	0					
ANR	5367434	ShiftExpression	"""Error: Token type for \\"""" << token_string << ""\\"" is not "" << expected_token_type << "" but is \\"""" << token_name << ""\\"" on line "" << line_number << ""."" << endl"		5367187	1		<<			
ANR	5367435	PrimaryExpression	"""Error: Token type for \\"""""		5367187	0					
ANR	5367436	ShiftExpression	"token_string << ""\\"" is not "" << expected_token_type << "" but is \\"""" << token_name << ""\\"" on line "" << line_number << ""."" << endl"		5367187	1		<<			
ANR	5367437	Identifier	token_string		5367187	0					
ANR	5367438	ShiftExpression	"""\\"" is not "" << expected_token_type << "" but is \\"""" << token_name << ""\\"" on line "" << line_number << ""."" << endl"		5367187	1		<<			
ANR	5367439	PrimaryExpression	"""\\"" is not """		5367187	0					
ANR	5367440	ShiftExpression	"expected_token_type << "" but is \\"""" << token_name << ""\\"" on line "" << line_number << ""."" << endl"		5367187	1		<<			
ANR	5367441	Identifier	expected_token_type		5367187	0					
ANR	5367442	ShiftExpression	""" but is \\"""" << token_name << ""\\"" on line "" << line_number << ""."" << endl"		5367187	1		<<			
ANR	5367443	PrimaryExpression	""" but is \\"""""		5367187	0					
ANR	5367444	ShiftExpression	"token_name << ""\\"" on line "" << line_number << ""."" << endl"		5367187	1		<<			
ANR	5367445	Identifier	token_name		5367187	0					
ANR	5367446	ShiftExpression	"""\\"" on line "" << line_number << ""."" << endl"		5367187	1		<<			
ANR	5367447	PrimaryExpression	"""\\"" on line """		5367187	0					
ANR	5367448	ShiftExpression	"line_number << ""."" << endl"		5367187	1		<<			
ANR	5367449	Identifier	line_number		5367187	0					
ANR	5367450	ShiftExpression	"""."" << endl"		5367187	1		<<			
ANR	5367451	PrimaryExpression	"""."""		5367187	0					
ANR	5367452	Identifier	endl		5367187	1					
ANR	5367453	ExpressionStatement	errors -> IncrementErrors ( )	637:3:19546:19571	5367187	1	True				
ANR	5367454	CallExpression	errors -> IncrementErrors ( )		5367187	0					
ANR	5367455	Callee	errors -> IncrementErrors		5367187	0					
ANR	5367456	PtrMemberAccess	errors -> IncrementErrors		5367187	0					
ANR	5367457	Identifier	errors		5367187	0					
ANR	5367458	Identifier	IncrementErrors		5367187	1					
ANR	5367459	ArgumentList			5367187	1					
ANR	5367460	Statement	delete	639:2:19579:19584	5367187	5	True				
ANR	5367461	ExpressionStatement	lexer_source	639:9:19586:19598	5367187	6	True				
ANR	5367462	Identifier	lexer_source		5367187	0					
ANR	5367463	ReturnStatement	return ;	642:1:19606:19612	5367187	12	True				
ANR	5367464	ReturnType	static void		5367187	1					
ANR	5367465	Identifier	process_test_lexer_one_token		5367187	2					
ANR	5367466	ParameterList	"const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors"		5367187	3					
ANR	5367467	Parameter	const string & line	590:41:17911:17928	5367187	0	True				
ANR	5367468	ParameterType	const string &		5367187	0					
ANR	5367469	Identifier	line		5367187	1					
ANR	5367470	Parameter	int token_start	591:11:17942:17956	5367187	1	True				
ANR	5367471	ParameterType	int		5367187	0					
ANR	5367472	Identifier	token_start		5367187	1					
ANR	5367473	Parameter	int line_number	591:28:17959:17973	5367187	2	True				
ANR	5367474	ParameterType	int		5367187	0					
ANR	5367475	Identifier	line_number		5367187	1					
ANR	5367476	Parameter	const Parameters & parameters	592:11:17988:18015	5367187	3	True				
ANR	5367477	ParameterType	const Parameters &		5367187	0					
ANR	5367478	Identifier	parameters		5367187	1					
ANR	5367479	Parameter	ErrorCount * errors	593:11:18029:18046	5367187	4	True				
ANR	5367480	ParameterType	ErrorCount *		5367187	0					
ANR	5367481	Identifier	errors		5367187	1					
ANR	5367482	CFGEntryNode	ENTRY		5367187		True				
ANR	5367483	CFGExitNode	EXIT		5367187		True				
ANR	5367484	Symbol	strcmp		5367187						
ANR	5367485	Symbol	token_start		5367187						
ANR	5367486	Symbol	NULL		5367187						
ANR	5367487	Symbol	& token_start		5367187						
ANR	5367488	Symbol	expected_token_type . compare		5367187						
ANR	5367489	Symbol	lexer . PeekToken		5367187						
ANR	5367490	Symbol	line		5367187						
ANR	5367491	Symbol	lexer . strLexToken		5367187						
ANR	5367492	Symbol	token_type		5367187						
ANR	5367493	Symbol	lexer		5367187						
ANR	5367494	Symbol	extract_token		5367187						
ANR	5367495	Symbol	lexer_source		5367187						
ANR	5367496	Symbol	extra . compare		5367187						
ANR	5367497	Symbol	expected_token_type . c_str		5367187						
ANR	5367498	Symbol	expected_token_type		5367187						
ANR	5367499	Symbol	line_number		5367187						
ANR	5367500	Symbol	token_string		5367187						
ANR	5367501	Symbol	extra		5367187						
ANR	5367502	Symbol	token_name		5367187						
ANR	5367503	Symbol	& token_string		5367187						
ANR	5367504	Symbol	parameters		5367187						
ANR	5367505	Symbol	errors		5367187						
ANR	5367506	Symbol	token_string . compare		5367187						
ANR	5367507	Function	process_evaluate	652:0:19919:21739							
ANR	5367508	FunctionDef	"process_evaluate (const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors)"		5367507	0					
ANR	5367509	CompoundStatement		656:0:20077:21739	5367507	0					
ANR	5367510	IdentifierDeclStatement	"string classad_name , expression_string ;"	657:1:20080:20118	5367507	0	True				
ANR	5367511	IdentifierDecl	classad_name		5367507	0					
ANR	5367512	IdentifierDeclType	string		5367507	0					
ANR	5367513	Identifier	classad_name		5367507	1					
ANR	5367514	IdentifierDecl	expression_string		5367507	1					
ANR	5367515	IdentifierDeclType	string		5367507	0					
ANR	5367516	Identifier	expression_string		5367507	1					
ANR	5367517	IdentifierDeclStatement	ExprTree * expr ;	658:1:20121:20141	5367507	1	True				
ANR	5367518	IdentifierDecl	* expr		5367507	0					
ANR	5367519	IdentifierDeclType	ExprTree *		5367507	0					
ANR	5367520	Identifier	expr		5367507	1					
ANR	5367521	IdentifierDeclStatement	ClassAdParser parser ;	659:1:20144:20165	5367507	2	True				
ANR	5367522	IdentifierDecl	parser		5367507	0					
ANR	5367523	IdentifierDeclType	ClassAdParser		5367507	0					
ANR	5367524	Identifier	parser		5367507	1					
ANR	5367525	ExpressionStatement	"classad_name = extract_token ( & token_start , line )"	661:1:20169:20217	5367507	3	True				
ANR	5367526	AssignmentExpression	"classad_name = extract_token ( & token_start , line )"		5367507	0		=			
ANR	5367527	Identifier	classad_name		5367507	0					
ANR	5367528	CallExpression	"extract_token ( & token_start , line )"		5367507	1					
ANR	5367529	Callee	extract_token		5367507	0					
ANR	5367530	Identifier	extract_token		5367507	0					
ANR	5367531	ArgumentList	& token_start		5367507	1					
ANR	5367532	Argument	& token_start		5367507	0					
ANR	5367533	UnaryOperationExpression	& token_start		5367507	0					
ANR	5367534	UnaryOperator	&		5367507	0					
ANR	5367535	Identifier	token_start		5367507	1					
ANR	5367536	Argument	line		5367507	1					
ANR	5367537	Identifier	line		5367507	0					
ANR	5367538	ExpressionStatement	expr = NULL	662:1:20220:20231	5367507	4	True				
ANR	5367539	AssignmentExpression	expr = NULL		5367507	0		=			
ANR	5367540	Identifier	expr		5367507	0					
ANR	5367541	Identifier	NULL		5367507	1					
ANR	5367542	IfStatement	if ( ( unsigned ) token_start < line . size ( ) )		5367507	5					
ANR	5367543	Condition	( unsigned ) token_start < line . size ( )	663:5:20238:20273	5367507	0	True				
ANR	5367544	RelationalExpression	( unsigned ) token_start < line . size ( )		5367507	0		<			
ANR	5367545	CastExpression	( unsigned ) token_start		5367507	0					
ANR	5367546	CastTarget	unsigned		5367507	0					
ANR	5367547	Identifier	token_start		5367507	1					
ANR	5367548	CallExpression	line . size ( )		5367507	1					
ANR	5367549	Callee	line . size		5367507	0					
ANR	5367550	MemberAccess	line . size		5367507	0					
ANR	5367551	Identifier	line		5367507	0					
ANR	5367552	Identifier	size		5367507	1					
ANR	5367553	ArgumentList			5367507	1					
ANR	5367554	CompoundStatement		8:43:198:198	5367507	1					
ANR	5367555	ExpressionStatement	"expression_string = line . substr ( token_start , line . size ( ) - token_start )"	664:2:20280:20351	5367507	0	True				
ANR	5367556	AssignmentExpression	"expression_string = line . substr ( token_start , line . size ( ) - token_start )"		5367507	0		=			
ANR	5367557	Identifier	expression_string		5367507	0					
ANR	5367558	CallExpression	"line . substr ( token_start , line . size ( ) - token_start )"		5367507	1					
ANR	5367559	Callee	line . substr		5367507	0					
ANR	5367560	MemberAccess	line . substr		5367507	0					
ANR	5367561	Identifier	line		5367507	0					
ANR	5367562	Identifier	substr		5367507	1					
ANR	5367563	ArgumentList	token_start		5367507	1					
ANR	5367564	Argument	token_start		5367507	0					
ANR	5367565	Identifier	token_start		5367507	0					
ANR	5367566	Argument	line . size ( ) - token_start		5367507	1					
ANR	5367567	AdditiveExpression	line . size ( ) - token_start		5367507	0		-			
ANR	5367568	CallExpression	line . size ( )		5367507	0					
ANR	5367569	Callee	line . size		5367507	0					
ANR	5367570	MemberAccess	line . size		5367507	0					
ANR	5367571	Identifier	line		5367507	0					
ANR	5367572	Identifier	size		5367507	1					
ANR	5367573	ArgumentList			5367507	1					
ANR	5367574	Identifier	token_start		5367507	1					
ANR	5367575	ElseStatement	else		5367507	0					
ANR	5367576	CompoundStatement		10:8:283:283	5367507	0					
ANR	5367577	ExpressionStatement	"expression_string = """""	666:2:20365:20387	5367507	0	True				
ANR	5367578	AssignmentExpression	"expression_string = """""		5367507	0		=			
ANR	5367579	Identifier	expression_string		5367507	0					
ANR	5367580	PrimaryExpression	""""""		5367507	1					
ANR	5367581	IfStatement	"if ( ! classad_name . compare ( """" ) || ! expression_string . compare ( """" ) )"		5367507	6					
ANR	5367582	Condition	"! classad_name . compare ( """" ) || ! expression_string . compare ( """" )"	668:5:20397:20458	5367507	0	True				
ANR	5367583	OrExpression	"! classad_name . compare ( """" ) || ! expression_string . compare ( """" )"		5367507	0		||			
ANR	5367584	UnaryOperationExpression	"! classad_name . compare ( """" )"		5367507	0					
ANR	5367585	UnaryOperator	!		5367507	0					
ANR	5367586	CallExpression	"classad_name . compare ( """" )"		5367507	1					
ANR	5367587	Callee	classad_name . compare		5367507	0					
ANR	5367588	MemberAccess	classad_name . compare		5367507	0					
ANR	5367589	Identifier	classad_name		5367507	0					
ANR	5367590	Identifier	compare		5367507	1					
ANR	5367591	ArgumentList	""""""		5367507	1					
ANR	5367592	Argument	""""""		5367507	0					
ANR	5367593	PrimaryExpression	""""""		5367507	0					
ANR	5367594	UnaryOperationExpression	"! expression_string . compare ( """" )"		5367507	1					
ANR	5367595	UnaryOperator	!		5367507	0					
ANR	5367596	CallExpression	"expression_string . compare ( """" )"		5367507	1					
ANR	5367597	Callee	expression_string . compare		5367507	0					
ANR	5367598	MemberAccess	expression_string . compare		5367507	0					
ANR	5367599	Identifier	expression_string		5367507	0					
ANR	5367600	Identifier	compare		5367507	1					
ANR	5367601	ArgumentList	""""""		5367507	1					
ANR	5367602	Argument	""""""		5367507	0					
ANR	5367603	PrimaryExpression	""""""		5367507	0					
ANR	5367604	CompoundStatement		14:37:383:383	5367507	1					
ANR	5367605	ExpressionStatement	"cout << ""Error: Missing evaluate information on line "" << line_number << ""."" << endl"	670:2:20465:20554	5367507	0	True				
ANR	5367606	ShiftExpression	"cout << ""Error: Missing evaluate information on line "" << line_number << ""."" << endl"		5367507	0		<<			
ANR	5367607	Identifier	cout		5367507	0					
ANR	5367608	ShiftExpression	"""Error: Missing evaluate information on line "" << line_number << ""."" << endl"		5367507	1		<<			
ANR	5367609	PrimaryExpression	"""Error: Missing evaluate information on line """		5367507	0					
ANR	5367610	ShiftExpression	"line_number << ""."" << endl"		5367507	1		<<			
ANR	5367611	Identifier	line_number		5367507	0					
ANR	5367612	ShiftExpression	"""."" << endl"		5367507	1		<<			
ANR	5367613	PrimaryExpression	"""."""		5367507	0					
ANR	5367614	Identifier	endl		5367507	1					
ANR	5367615	ExpressionStatement	"cout << ""       Format: evaluate <classad> <expression>"" << endl"	672:2:20558:20626	5367507	1	True				
ANR	5367616	ShiftExpression	"cout << ""       Format: evaluate <classad> <expression>"" << endl"		5367507	0		<<			
ANR	5367617	Identifier	cout		5367507	0					
ANR	5367618	ShiftExpression	"""       Format: evaluate <classad> <expression>"" << endl"		5367507	1		<<			
ANR	5367619	PrimaryExpression	"""       Format: evaluate <classad> <expression>"""		5367507	0					
ANR	5367620	Identifier	endl		5367507	1					
ANR	5367621	ExpressionStatement	errors -> IncrementErrors ( )	674:2:20630:20655	5367507	2	True				
ANR	5367622	CallExpression	errors -> IncrementErrors ( )		5367507	0					
ANR	5367623	Callee	errors -> IncrementErrors		5367507	0					
ANR	5367624	PtrMemberAccess	errors -> IncrementErrors		5367507	0					
ANR	5367625	Identifier	errors		5367507	0					
ANR	5367626	Identifier	IncrementErrors		5367507	1					
ANR	5367627	ArgumentList			5367507	1					
ANR	5367628	ElseStatement	else		5367507	0					
ANR	5367629	CompoundStatement		21:6:588:588	5367507	0					
ANR	5367630	IfStatement	"if ( ! parser . ParseExpression ( expression_string , expr ) )"		5367507	0					
ANR	5367631	Condition	"! parser . ParseExpression ( expression_string , expr )"	677:6:20674:20721	5367507	0	True				
ANR	5367632	UnaryOperationExpression	"! parser . ParseExpression ( expression_string , expr )"		5367507	0					
ANR	5367633	UnaryOperator	!		5367507	0					
ANR	5367634	CallExpression	"parser . ParseExpression ( expression_string , expr )"		5367507	1					
ANR	5367635	Callee	parser . ParseExpression		5367507	0					
ANR	5367636	MemberAccess	parser . ParseExpression		5367507	0					
ANR	5367637	Identifier	parser		5367507	0					
ANR	5367638	Identifier	ParseExpression		5367507	1					
ANR	5367639	ArgumentList	expression_string		5367507	1					
ANR	5367640	Argument	expression_string		5367507	0					
ANR	5367641	Identifier	expression_string		5367507	0					
ANR	5367642	Argument	expr		5367507	1					
ANR	5367643	Identifier	expr		5367507	0					
ANR	5367644	CompoundStatement		22:56:646:646	5367507	1					
ANR	5367645	ExpressionStatement	"cout << ""Error: Can't parse expression ("" << expression_string << "") on line "" << line_number << ""."" << endl"	678:3:20729:20843	5367507	0	True				
ANR	5367646	ShiftExpression	"cout << ""Error: Can't parse expression ("" << expression_string << "") on line "" << line_number << ""."" << endl"		5367507	0		<<			
ANR	5367647	Identifier	cout		5367507	0					
ANR	5367648	ShiftExpression	"""Error: Can't parse expression ("" << expression_string << "") on line "" << line_number << ""."" << endl"		5367507	1		<<			
ANR	5367649	PrimaryExpression	"""Error: Can't parse expression ("""		5367507	0					
ANR	5367650	ShiftExpression	"expression_string << "") on line "" << line_number << ""."" << endl"		5367507	1		<<			
ANR	5367651	Identifier	expression_string		5367507	0					
ANR	5367652	ShiftExpression	""") on line "" << line_number << ""."" << endl"		5367507	1		<<			
ANR	5367653	PrimaryExpression	""") on line """		5367507	0					
ANR	5367654	ShiftExpression	"line_number << ""."" << endl"		5367507	1		<<			
ANR	5367655	Identifier	line_number		5367507	0					
ANR	5367656	ShiftExpression	"""."" << endl"		5367507	1		<<			
ANR	5367657	PrimaryExpression	"""."""		5367507	0					
ANR	5367658	Identifier	endl		5367507	1					
ANR	5367659	ExpressionStatement	errors -> IncrementErrors ( )	680:3:20848:20873	5367507	1	True				
ANR	5367660	CallExpression	errors -> IncrementErrors ( )		5367507	0					
ANR	5367661	Callee	errors -> IncrementErrors		5367507	0					
ANR	5367662	PtrMemberAccess	errors -> IncrementErrors		5367507	0					
ANR	5367663	Identifier	errors		5367507	0					
ANR	5367664	Identifier	IncrementErrors		5367507	1					
ANR	5367665	ArgumentList			5367507	1					
ANR	5367666	ElseStatement	else		5367507	0					
ANR	5367667	CompoundStatement		28:3:813:854	5367507	0					
ANR	5367668	IdentifierDeclStatement	ClassAd * classad = classads [ classad_name ] ;	683:3:20891:20932	5367507	0	True				
ANR	5367669	IdentifierDecl	* classad = classads [ classad_name ]		5367507	0					
ANR	5367670	IdentifierDeclType	ClassAd *		5367507	0					
ANR	5367671	Identifier	classad		5367507	1					
ANR	5367672	AssignmentExpression	* classad = classads [ classad_name ]		5367507	2		=			
ANR	5367673	Identifier	classad		5367507	0					
ANR	5367674	ArrayIndexing	classads [ classad_name ]		5367507	1					
ANR	5367675	Identifier	classads		5367507	0					
ANR	5367676	Identifier	classad_name		5367507	1					
ANR	5367677	IfStatement	if ( classad == NULL )		5367507	1					
ANR	5367678	Condition	classad == NULL	685:7:20945:20959	5367507	0	True				
ANR	5367679	EqualityExpression	classad == NULL		5367507	0		==			
ANR	5367680	Identifier	classad		5367507	0					
ANR	5367681	Identifier	NULL		5367507	1					
ANR	5367682	CompoundStatement		30:24:884:884	5367507	1					
ANR	5367683	ExpressionStatement	"cout << ""Error: Unknown ClassAd: \\"""" << classad_name << ""\\"" on line "" << line_number << ""."" << endl"	686:4:20968:21074	5367507	0	True				
ANR	5367684	ShiftExpression	"cout << ""Error: Unknown ClassAd: \\"""" << classad_name << ""\\"" on line "" << line_number << ""."" << endl"		5367507	0		<<			
ANR	5367685	Identifier	cout		5367507	0					
ANR	5367686	ShiftExpression	"""Error: Unknown ClassAd: \\"""" << classad_name << ""\\"" on line "" << line_number << ""."" << endl"		5367507	1		<<			
ANR	5367687	PrimaryExpression	"""Error: Unknown ClassAd: \\"""""		5367507	0					
ANR	5367688	ShiftExpression	"classad_name << ""\\"" on line "" << line_number << ""."" << endl"		5367507	1		<<			
ANR	5367689	Identifier	classad_name		5367507	0					
ANR	5367690	ShiftExpression	"""\\"" on line "" << line_number << ""."" << endl"		5367507	1		<<			
ANR	5367691	PrimaryExpression	"""\\"" on line """		5367507	0					
ANR	5367692	ShiftExpression	"line_number << ""."" << endl"		5367507	1		<<			
ANR	5367693	Identifier	line_number		5367507	0					
ANR	5367694	ShiftExpression	"""."" << endl"		5367507	1		<<			
ANR	5367695	PrimaryExpression	"""."""		5367507	0					
ANR	5367696	Identifier	endl		5367507	1					
ANR	5367697	ExpressionStatement	errors -> IncrementErrors ( )	688:4:21080:21105	5367507	1	True				
ANR	5367698	CallExpression	errors -> IncrementErrors ( )		5367507	0					
ANR	5367699	Callee	errors -> IncrementErrors		5367507	0					
ANR	5367700	PtrMemberAccess	errors -> IncrementErrors		5367507	0					
ANR	5367701	Identifier	errors		5367507	0					
ANR	5367702	Identifier	IncrementErrors		5367507	1					
ANR	5367703	ArgumentList			5367507	1					
ANR	5367704	ElseStatement	else		5367507	0					
ANR	5367705	CompoundStatement		36:4:1048:1060	5367507	0					
ANR	5367706	IdentifierDeclStatement	Value value ;	691:4:21126:21138	5367507	0	True				
ANR	5367707	IdentifierDecl	value		5367507	0					
ANR	5367708	IdentifierDeclType	Value		5367507	0					
ANR	5367709	Identifier	value		5367507	1					
ANR	5367710	ExpressionStatement	expr -> SetParentScope ( classad )	692:4:21144:21173	5367507	1	True				
ANR	5367711	CallExpression	expr -> SetParentScope ( classad )		5367507	0					
ANR	5367712	Callee	expr -> SetParentScope		5367507	0					
ANR	5367713	PtrMemberAccess	expr -> SetParentScope		5367507	0					
ANR	5367714	Identifier	expr		5367507	0					
ANR	5367715	Identifier	SetParentScope		5367507	1					
ANR	5367716	ArgumentList	classad		5367507	1					
ANR	5367717	Argument	classad		5367507	0					
ANR	5367718	Identifier	classad		5367507	0					
ANR	5367719	IfStatement	"if ( ! classad -> EvaluateExpr ( expr , value ) )"		5367507	2					
ANR	5367720	Condition	"! classad -> EvaluateExpr ( expr , value )"	693:8:21183:21217	5367507	0	True				
ANR	5367721	UnaryOperationExpression	"! classad -> EvaluateExpr ( expr , value )"		5367507	0					
ANR	5367722	UnaryOperator	!		5367507	0					
ANR	5367723	CallExpression	"classad -> EvaluateExpr ( expr , value )"		5367507	1					
ANR	5367724	Callee	classad -> EvaluateExpr		5367507	0					
ANR	5367725	PtrMemberAccess	classad -> EvaluateExpr		5367507	0					
ANR	5367726	Identifier	classad		5367507	0					
ANR	5367727	Identifier	EvaluateExpr		5367507	1					
ANR	5367728	ArgumentList	expr		5367507	1					
ANR	5367729	Argument	expr		5367507	0					
ANR	5367730	Identifier	expr		5367507	0					
ANR	5367731	Argument	value		5367507	1					
ANR	5367732	Identifier	value		5367507	0					
ANR	5367733	CompoundStatement		38:45:1142:1142	5367507	1					
ANR	5367734	ExpressionStatement	"cout << ""Error: Can't evaluate expression ("" << expression_string << "") on line "" << line_number << ""."" << endl"	694:5:21227:21345	5367507	0	True				
ANR	5367735	ShiftExpression	"cout << ""Error: Can't evaluate expression ("" << expression_string << "") on line "" << line_number << ""."" << endl"		5367507	0		<<			
ANR	5367736	Identifier	cout		5367507	0					
ANR	5367737	ShiftExpression	"""Error: Can't evaluate expression ("" << expression_string << "") on line "" << line_number << ""."" << endl"		5367507	1		<<			
ANR	5367738	PrimaryExpression	"""Error: Can't evaluate expression ("""		5367507	0					
ANR	5367739	ShiftExpression	"expression_string << "") on line "" << line_number << ""."" << endl"		5367507	1		<<			
ANR	5367740	Identifier	expression_string		5367507	0					
ANR	5367741	ShiftExpression	""") on line "" << line_number << ""."" << endl"		5367507	1		<<			
ANR	5367742	PrimaryExpression	""") on line """		5367507	0					
ANR	5367743	ShiftExpression	"line_number << ""."" << endl"		5367507	1		<<			
ANR	5367744	Identifier	line_number		5367507	0					
ANR	5367745	ShiftExpression	"""."" << endl"		5367507	1		<<			
ANR	5367746	PrimaryExpression	"""."""		5367507	0					
ANR	5367747	Identifier	endl		5367507	1					
ANR	5367748	ExpressionStatement	errors -> IncrementErrors ( )	696:5:21352:21377	5367507	1	True				
ANR	5367749	CallExpression	errors -> IncrementErrors ( )		5367507	0					
ANR	5367750	Callee	errors -> IncrementErrors		5367507	0					
ANR	5367751	PtrMemberAccess	errors -> IncrementErrors		5367507	0					
ANR	5367752	Identifier	errors		5367507	0					
ANR	5367753	Identifier	IncrementErrors		5367507	1					
ANR	5367754	ArgumentList			5367507	1					
ANR	5367755	ElseStatement	else		5367507	0					
ANR	5367756	CompoundStatement		45:5:1350:1369	5367507	0					
ANR	5367757	IdentifierDeclStatement	PrettyPrint unparser ;	699:5:21401:21421	5367507	0	True				
ANR	5367758	IdentifierDecl	unparser		5367507	0					
ANR	5367759	IdentifierDeclType	PrettyPrint		5367507	0					
ANR	5367760	Identifier	unparser		5367507	1					
ANR	5367761	IdentifierDeclStatement	string value_string ;	700:5:21428:21447	5367507	1	True				
ANR	5367762	IdentifierDecl	value_string		5367507	0					
ANR	5367763	IdentifierDeclType	string		5367507	0					
ANR	5367764	Identifier	value_string		5367507	1					
ANR	5367765	ExpressionStatement	"unparser . Unparse ( value_string , value )"	702:5:21455:21492	5367507	2	True				
ANR	5367766	CallExpression	"unparser . Unparse ( value_string , value )"		5367507	0					
ANR	5367767	Callee	unparser . Unparse		5367507	0					
ANR	5367768	MemberAccess	unparser . Unparse		5367507	0					
ANR	5367769	Identifier	unparser		5367507	0					
ANR	5367770	Identifier	Unparse		5367507	1					
ANR	5367771	ArgumentList	value_string		5367507	1					
ANR	5367772	Argument	value_string		5367507	0					
ANR	5367773	Identifier	value_string		5367507	0					
ANR	5367774	Argument	value		5367507	1					
ANR	5367775	Identifier	value		5367507	0					
ANR	5367776	ExpressionStatement	"cout << ""OK: Evaluating \\"""" << expression_string << ""\\"" in "" << classad_name << "" evaluates to "" << value_string << "" on line "" << line_number << endl"	703:5:21499:21671	5367507	3	True				
ANR	5367777	ShiftExpression	"cout << ""OK: Evaluating \\"""" << expression_string << ""\\"" in "" << classad_name << "" evaluates to "" << value_string << "" on line "" << line_number << endl"		5367507	0		<<			
ANR	5367778	Identifier	cout		5367507	0					
ANR	5367779	ShiftExpression	"""OK: Evaluating \\"""" << expression_string << ""\\"" in "" << classad_name << "" evaluates to "" << value_string << "" on line "" << line_number << endl"		5367507	1		<<			
ANR	5367780	PrimaryExpression	"""OK: Evaluating \\"""""		5367507	0					
ANR	5367781	ShiftExpression	"expression_string << ""\\"" in "" << classad_name << "" evaluates to "" << value_string << "" on line "" << line_number << endl"		5367507	1		<<			
ANR	5367782	Identifier	expression_string		5367507	0					
ANR	5367783	ShiftExpression	"""\\"" in "" << classad_name << "" evaluates to "" << value_string << "" on line "" << line_number << endl"		5367507	1		<<			
ANR	5367784	PrimaryExpression	"""\\"" in """		5367507	0					
ANR	5367785	ShiftExpression	"classad_name << "" evaluates to "" << value_string << "" on line "" << line_number << endl"		5367507	1		<<			
ANR	5367786	Identifier	classad_name		5367507	0					
ANR	5367787	ShiftExpression	""" evaluates to "" << value_string << "" on line "" << line_number << endl"		5367507	1		<<			
ANR	5367788	PrimaryExpression	""" evaluates to """		5367507	0					
ANR	5367789	ShiftExpression	"value_string << "" on line "" << line_number << endl"		5367507	1		<<			
ANR	5367790	Identifier	value_string		5367507	0					
ANR	5367791	ShiftExpression	""" on line "" << line_number << endl"		5367507	1		<<			
ANR	5367792	PrimaryExpression	""" on line """		5367507	0					
ANR	5367793	ShiftExpression	line_number << endl		5367507	1		<<			
ANR	5367794	Identifier	line_number		5367507	0					
ANR	5367795	Identifier	endl		5367507	1					
ANR	5367796	IfStatement	if ( expr != NULL )		5367507	7					
ANR	5367797	Condition	expr != NULL	711:5:21696:21707	5367507	0	True				
ANR	5367798	EqualityExpression	expr != NULL		5367507	0		!=			
ANR	5367799	Identifier	expr		5367507	0					
ANR	5367800	Identifier	NULL		5367507	1					
ANR	5367801	CompoundStatement		56:19:1632:1632	5367507	1					
ANR	5367802	Statement	delete	712:2:21714:21719	5367507	0	True				
ANR	5367803	ExpressionStatement	expr	712:9:21721:21725	5367507	1	True				
ANR	5367804	Identifier	expr		5367507	0					
ANR	5367805	ReturnStatement	return ;	714:1:21731:21737	5367507	8	True				
ANR	5367806	ReturnType	static void		5367507	1					
ANR	5367807	Identifier	process_evaluate		5367507	2					
ANR	5367808	ParameterList	"const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors"		5367507	3					
ANR	5367809	Parameter	const string & line	652:29:19948:19965	5367507	0	True				
ANR	5367810	ParameterType	const string &		5367507	0					
ANR	5367811	Identifier	line		5367507	1					
ANR	5367812	Parameter	int token_start	653:8:19976:19990	5367507	1	True				
ANR	5367813	ParameterType	int		5367507	0					
ANR	5367814	Identifier	token_start		5367507	1					
ANR	5367815	Parameter	int line_number	653:25:19993:20007	5367507	2	True				
ANR	5367816	ParameterType	int		5367507	0					
ANR	5367817	Identifier	line_number		5367507	1					
ANR	5367818	Parameter	const Parameters & parameters	654:8:20019:20046	5367507	3	True				
ANR	5367819	ParameterType	const Parameters &		5367507	0					
ANR	5367820	Identifier	parameters		5367507	1					
ANR	5367821	Parameter	ErrorCount * errors	655:8:20057:20074	5367507	4	True				
ANR	5367822	ParameterType	ErrorCount *		5367507	0					
ANR	5367823	Identifier	errors		5367507	1					
ANR	5367824	CFGEntryNode	ENTRY		5367507		True				
ANR	5367825	CFGExitNode	EXIT		5367507		True				
ANR	5367826	Symbol	classad -> EvaluateExpr		5367507						
ANR	5367827	Symbol	& token_start		5367507						
ANR	5367828	Symbol	line		5367507						
ANR	5367829	Symbol	line . substr		5367507						
ANR	5367830	Symbol	line . size		5367507						
ANR	5367831	Symbol	* classads		5367507						
ANR	5367832	Symbol	line_number		5367507						
ANR	5367833	Symbol	classad_name		5367507						
ANR	5367834	Symbol	expr		5367507						
ANR	5367835	Symbol	value		5367507						
ANR	5367836	Symbol	* classad_name		5367507						
ANR	5367837	Symbol	token_start		5367507						
ANR	5367838	Symbol	NULL		5367507						
ANR	5367839	Symbol	parser . ParseExpression		5367507						
ANR	5367840	Symbol	* classad		5367507						
ANR	5367841	Symbol	expression_string		5367507						
ANR	5367842	Symbol	extract_token		5367507						
ANR	5367843	Symbol	parser		5367507						
ANR	5367844	Symbol	value_string		5367507						
ANR	5367845	Symbol	classad		5367507						
ANR	5367846	Symbol	unparser		5367507						
ANR	5367847	Symbol	classad_name . compare		5367507						
ANR	5367848	Symbol	parameters		5367507						
ANR	5367849	Symbol	expression_string . compare		5367507						
ANR	5367850	Symbol	classads		5367507						
ANR	5367851	Symbol	errors		5367507						
ANR	5367852	Function	process_make_collection	723:0:21942:23688							
ANR	5367853	FunctionDef	"process_make_collection (const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors)"		5367852	0					
ANR	5367854	CompoundStatement		727:0:22107:23688	5367852	0					
ANR	5367855	IdentifierDeclStatement	string collection_name ;	728:1:22110:22132	5367852	0	True				
ANR	5367856	IdentifierDecl	collection_name		5367852	0					
ANR	5367857	IdentifierDeclType	string		5367852	0					
ANR	5367858	Identifier	collection_name		5367852	1					
ANR	5367859	IdentifierDeclStatement	string log_name ;	729:1:22135:22150	5367852	1	True				
ANR	5367860	IdentifierDecl	log_name		5367852	0					
ANR	5367861	IdentifierDeclType	string		5367852	0					
ANR	5367862	Identifier	log_name		5367852	1					
ANR	5367863	IdentifierDeclStatement	string extra_text ;	730:1:22153:22170	5367852	2	True				
ANR	5367864	IdentifierDecl	extra_text		5367852	0					
ANR	5367865	IdentifierDeclType	string		5367852	0					
ANR	5367866	Identifier	extra_text		5367852	1					
ANR	5367867	ExpressionStatement	"collection_name = extract_token ( & token_start , line )"	732:1:22174:22225	5367852	3	True				
ANR	5367868	AssignmentExpression	"collection_name = extract_token ( & token_start , line )"		5367852	0		=			
ANR	5367869	Identifier	collection_name		5367852	0					
ANR	5367870	CallExpression	"extract_token ( & token_start , line )"		5367852	1					
ANR	5367871	Callee	extract_token		5367852	0					
ANR	5367872	Identifier	extract_token		5367852	0					
ANR	5367873	ArgumentList	& token_start		5367852	1					
ANR	5367874	Argument	& token_start		5367852	0					
ANR	5367875	UnaryOperationExpression	& token_start		5367852	0					
ANR	5367876	UnaryOperator	&		5367852	0					
ANR	5367877	Identifier	token_start		5367852	1					
ANR	5367878	Argument	line		5367852	1					
ANR	5367879	Identifier	line		5367852	0					
ANR	5367880	ExpressionStatement	"log_name = extract_token ( & token_start , line )"	733:1:22228:22272	5367852	4	True				
ANR	5367881	AssignmentExpression	"log_name = extract_token ( & token_start , line )"		5367852	0		=			
ANR	5367882	Identifier	log_name		5367852	0					
ANR	5367883	CallExpression	"extract_token ( & token_start , line )"		5367852	1					
ANR	5367884	Callee	extract_token		5367852	0					
ANR	5367885	Identifier	extract_token		5367852	0					
ANR	5367886	ArgumentList	& token_start		5367852	1					
ANR	5367887	Argument	& token_start		5367852	0					
ANR	5367888	UnaryOperationExpression	& token_start		5367852	0					
ANR	5367889	UnaryOperator	&		5367852	0					
ANR	5367890	Identifier	token_start		5367852	1					
ANR	5367891	Argument	line		5367852	1					
ANR	5367892	Identifier	line		5367852	0					
ANR	5367893	ExpressionStatement	"extra_text = extract_token ( & token_start , line )"	734:1:22275:22321	5367852	5	True				
ANR	5367894	AssignmentExpression	"extra_text = extract_token ( & token_start , line )"		5367852	0		=			
ANR	5367895	Identifier	extra_text		5367852	0					
ANR	5367896	CallExpression	"extract_token ( & token_start , line )"		5367852	1					
ANR	5367897	Callee	extract_token		5367852	0					
ANR	5367898	Identifier	extract_token		5367852	0					
ANR	5367899	ArgumentList	& token_start		5367852	1					
ANR	5367900	Argument	& token_start		5367852	0					
ANR	5367901	UnaryOperationExpression	& token_start		5367852	0					
ANR	5367902	UnaryOperator	&		5367852	0					
ANR	5367903	Identifier	token_start		5367852	1					
ANR	5367904	Argument	line		5367852	1					
ANR	5367905	Identifier	line		5367852	0					
ANR	5367906	IfStatement	"if ( ! collection_name . compare ( """" ) )"		5367852	6					
ANR	5367907	Condition	"! collection_name . compare ( """" )"	735:5:22328:22355	5367852	0	True				
ANR	5367908	UnaryOperationExpression	"! collection_name . compare ( """" )"		5367852	0					
ANR	5367909	UnaryOperator	!		5367852	0					
ANR	5367910	CallExpression	"collection_name . compare ( """" )"		5367852	1					
ANR	5367911	Callee	collection_name . compare		5367852	0					
ANR	5367912	MemberAccess	collection_name . compare		5367852	0					
ANR	5367913	Identifier	collection_name		5367852	0					
ANR	5367914	Identifier	compare		5367852	1					
ANR	5367915	ArgumentList	""""""		5367852	1					
ANR	5367916	Argument	""""""		5367852	0					
ANR	5367917	PrimaryExpression	""""""		5367852	0					
ANR	5367918	CompoundStatement		9:35:250:250	5367852	1					
ANR	5367919	ExpressionStatement	"cout << ""Error: Missing make-collection information on line "" << line_number << ""."" << endl"	736:2:22362:22458	5367852	0	True				
ANR	5367920	ShiftExpression	"cout << ""Error: Missing make-collection information on line "" << line_number << ""."" << endl"		5367852	0		<<			
ANR	5367921	Identifier	cout		5367852	0					
ANR	5367922	ShiftExpression	"""Error: Missing make-collection information on line "" << line_number << ""."" << endl"		5367852	1		<<			
ANR	5367923	PrimaryExpression	"""Error: Missing make-collection information on line """		5367852	0					
ANR	5367924	ShiftExpression	"line_number << ""."" << endl"		5367852	1		<<			
ANR	5367925	Identifier	line_number		5367852	0					
ANR	5367926	ShiftExpression	"""."" << endl"		5367852	1		<<			
ANR	5367927	PrimaryExpression	"""."""		5367852	0					
ANR	5367928	Identifier	endl		5367852	1					
ANR	5367929	ExpressionStatement	"cout << ""       Format: make-collection <collection-name> [log-name]"" << endl"	738:2:22462:22539	5367852	1	True				
ANR	5367930	ShiftExpression	"cout << ""       Format: make-collection <collection-name> [log-name]"" << endl"		5367852	0		<<			
ANR	5367931	Identifier	cout		5367852	0					
ANR	5367932	ShiftExpression	"""       Format: make-collection <collection-name> [log-name]"" << endl"		5367852	1		<<			
ANR	5367933	PrimaryExpression	"""       Format: make-collection <collection-name> [log-name]"""		5367852	0					
ANR	5367934	Identifier	endl		5367852	1					
ANR	5367935	ExpressionStatement	errors -> IncrementErrors ( )	739:2:22543:22568	5367852	2	True				
ANR	5367936	CallExpression	errors -> IncrementErrors ( )		5367852	0					
ANR	5367937	Callee	errors -> IncrementErrors		5367852	0					
ANR	5367938	PtrMemberAccess	errors -> IncrementErrors		5367852	0					
ANR	5367939	Identifier	errors		5367852	0					
ANR	5367940	Identifier	IncrementErrors		5367852	1					
ANR	5367941	ArgumentList			5367852	1					
ANR	5367942	ElseStatement	else		5367852	0					
ANR	5367943	IfStatement	"if ( extra_text . compare ( """" ) )"		5367852	0					
ANR	5367944	Condition	"extra_text . compare ( """" )"	740:12:22582:22603	5367852	0	True				
ANR	5367945	CallExpression	"extra_text . compare ( """" )"		5367852	0					
ANR	5367946	Callee	extra_text . compare		5367852	0					
ANR	5367947	MemberAccess	extra_text . compare		5367852	0					
ANR	5367948	Identifier	extra_text		5367852	0					
ANR	5367949	Identifier	compare		5367852	1					
ANR	5367950	ArgumentList	""""""		5367852	1					
ANR	5367951	Argument	""""""		5367852	0					
ANR	5367952	PrimaryExpression	""""""		5367852	0					
ANR	5367953	CompoundStatement		14:36:498:498	5367852	1					
ANR	5367954	ExpressionStatement	"cout << ""Error: Extra make-collection information on line "" << line_number << ""."" << endl"	741:2:22610:22704	5367852	0	True				
ANR	5367955	ShiftExpression	"cout << ""Error: Extra make-collection information on line "" << line_number << ""."" << endl"		5367852	0		<<			
ANR	5367956	Identifier	cout		5367852	0					
ANR	5367957	ShiftExpression	"""Error: Extra make-collection information on line "" << line_number << ""."" << endl"		5367852	1		<<			
ANR	5367958	PrimaryExpression	"""Error: Extra make-collection information on line """		5367852	0					
ANR	5367959	ShiftExpression	"line_number << ""."" << endl"		5367852	1		<<			
ANR	5367960	Identifier	line_number		5367852	0					
ANR	5367961	ShiftExpression	"""."" << endl"		5367852	1		<<			
ANR	5367962	PrimaryExpression	"""."""		5367852	0					
ANR	5367963	Identifier	endl		5367852	1					
ANR	5367964	ExpressionStatement	"cout << ""       Format: make-collection <collection-name> [log-name]"" << endl"	743:2:22708:22785	5367852	1	True				
ANR	5367965	ShiftExpression	"cout << ""       Format: make-collection <collection-name> [log-name]"" << endl"		5367852	0		<<			
ANR	5367966	Identifier	cout		5367852	0					
ANR	5367967	ShiftExpression	"""       Format: make-collection <collection-name> [log-name]"" << endl"		5367852	1		<<			
ANR	5367968	PrimaryExpression	"""       Format: make-collection <collection-name> [log-name]"""		5367852	0					
ANR	5367969	Identifier	endl		5367852	1					
ANR	5367970	ExpressionStatement	errors -> IncrementErrors ( )	744:2:22789:22814	5367852	2	True				
ANR	5367971	CallExpression	errors -> IncrementErrors ( )		5367852	0					
ANR	5367972	Callee	errors -> IncrementErrors		5367852	0					
ANR	5367973	PtrMemberAccess	errors -> IncrementErrors		5367852	0					
ANR	5367974	Identifier	errors		5367852	0					
ANR	5367975	Identifier	IncrementErrors		5367852	1					
ANR	5367976	ArgumentList			5367852	1					
ANR	5367977	ElseStatement	else		5367852	0					
ANR	5367978	CompoundStatement		20:2:720:749	5367852	0					
ANR	5367979	IdentifierDeclStatement	ClassAdCollection * collection ;	746:2:22828:22857	5367852	0	True				
ANR	5367980	IdentifierDecl	* collection		5367852	0					
ANR	5367981	IdentifierDeclType	ClassAdCollection *		5367852	0					
ANR	5367982	Identifier	collection		5367852	1					
ANR	5367983	ExpressionStatement	collection = new ClassAdCollection ( )	748:2:22862:22898	5367852	1	True				
ANR	5367984	AssignmentExpression	collection = new ClassAdCollection ( )		5367852	0		=			
ANR	5367985	Identifier	collection		5367852	0					
ANR	5367986	UnaryExpression	new ClassAdCollection ( )		5367852	1					
ANR	5367987	IfStatement	if ( collection == NULL )		5367852	2					
ANR	5367988	Condition	collection == NULL	749:6:22906:22923	5367852	0	True				
ANR	5367989	EqualityExpression	collection == NULL		5367852	0		==			
ANR	5367990	Identifier	collection		5367852	0					
ANR	5367991	Identifier	NULL		5367852	1					
ANR	5367992	CompoundStatement		23:27:819:819	5367852	1					
ANR	5367993	ExpressionStatement	"cout << ""Error: Failed to construct collection on line "" << line_number << ""."" << endl"	750:3:22932:23024	5367852	0	True				
ANR	5367994	ShiftExpression	"cout << ""Error: Failed to construct collection on line "" << line_number << ""."" << endl"		5367852	0		<<			
ANR	5367995	Identifier	cout		5367852	0					
ANR	5367996	ShiftExpression	"""Error: Failed to construct collection on line "" << line_number << ""."" << endl"		5367852	1		<<			
ANR	5367997	PrimaryExpression	"""Error: Failed to construct collection on line """		5367852	0					
ANR	5367998	ShiftExpression	"line_number << ""."" << endl"		5367852	1		<<			
ANR	5367999	Identifier	line_number		5367852	0					
ANR	5368000	ShiftExpression	"""."" << endl"		5367852	1		<<			
ANR	5368001	PrimaryExpression	"""."""		5367852	0					
ANR	5368002	Identifier	endl		5367852	1					
ANR	5368003	ExpressionStatement	errors -> IncrementErrors ( )	752:3:23029:23054	5367852	1	True				
ANR	5368004	CallExpression	errors -> IncrementErrors ( )		5367852	0					
ANR	5368005	Callee	errors -> IncrementErrors		5367852	0					
ANR	5368006	PtrMemberAccess	errors -> IncrementErrors		5367852	0					
ANR	5368007	Identifier	errors		5367852	0					
ANR	5368008	Identifier	IncrementErrors		5367852	1					
ANR	5368009	ArgumentList			5367852	1					
ANR	5368010	ElseStatement	else		5367852	0					
ANR	5368011	CompoundStatement		27:9:957:957	5367852	0					
ANR	5368012	ExpressionStatement	collections [ collection_name ] = collection	754:3:23070:23111	5367852	0	True				
ANR	5368013	AssignmentExpression	collections [ collection_name ] = collection		5367852	0		=			
ANR	5368014	ArrayIndexing	collections [ collection_name ]		5367852	0					
ANR	5368015	Identifier	collections		5367852	0					
ANR	5368016	Identifier	collection_name		5367852	1					
ANR	5368017	Identifier	collection		5367852	1					
ANR	5368018	ExpressionStatement	"cout << ""OK: Made collection named "" << collection_name << "" on line "" << line_number << "".\\n"""	755:3:23116:23216	5367852	1	True				
ANR	5368019	ShiftExpression	"cout << ""OK: Made collection named "" << collection_name << "" on line "" << line_number << "".\\n"""		5367852	0		<<			
ANR	5368020	Identifier	cout		5367852	0					
ANR	5368021	ShiftExpression	"""OK: Made collection named "" << collection_name << "" on line "" << line_number << "".\\n"""		5367852	1		<<			
ANR	5368022	PrimaryExpression	"""OK: Made collection named """		5367852	0					
ANR	5368023	ShiftExpression	"collection_name << "" on line "" << line_number << "".\\n"""		5367852	1		<<			
ANR	5368024	Identifier	collection_name		5367852	0					
ANR	5368025	ShiftExpression	""" on line "" << line_number << "".\\n"""		5367852	1		<<			
ANR	5368026	PrimaryExpression	""" on line """		5367852	0					
ANR	5368027	ShiftExpression	"line_number << "".\\n"""		5367852	1		<<			
ANR	5368028	Identifier	line_number		5367852	0					
ANR	5368029	PrimaryExpression	""".\\n"""		5367852	1					
ANR	5368030	IfStatement	"if ( log_name . compare ( """" ) )"		5367852	2					
ANR	5368031	Condition	"log_name . compare ( """" )"	757:7:23225:23244	5367852	0	True				
ANR	5368032	CallExpression	"log_name . compare ( """" )"		5367852	0					
ANR	5368033	Callee	log_name . compare		5367852	0					
ANR	5368034	MemberAccess	log_name . compare		5367852	0					
ANR	5368035	Identifier	log_name		5367852	0					
ANR	5368036	Identifier	compare		5367852	1					
ANR	5368037	ArgumentList	""""""		5367852	1					
ANR	5368038	Argument	""""""		5367852	0					
ANR	5368039	PrimaryExpression	""""""		5367852	0					
ANR	5368040	CompoundStatement		32:4:1145:1157	5367852	1					
ANR	5368041	IdentifierDeclStatement	bool success ;	758:4:23253:23265	5367852	0	True				
ANR	5368042	IdentifierDecl	success		5367852	0					
ANR	5368043	IdentifierDeclType	bool		5367852	0					
ANR	5368044	Identifier	success		5367852	1					
ANR	5368045	ExpressionStatement	"success = collection -> InitializeFromLog ( log_name , """" , """" )"	759:4:23271:23328	5367852	1	True				
ANR	5368046	AssignmentExpression	"success = collection -> InitializeFromLog ( log_name , """" , """" )"		5367852	0		=			
ANR	5368047	Identifier	success		5367852	0					
ANR	5368048	CallExpression	"collection -> InitializeFromLog ( log_name , """" , """" )"		5367852	1					
ANR	5368049	Callee	collection -> InitializeFromLog		5367852	0					
ANR	5368050	PtrMemberAccess	collection -> InitializeFromLog		5367852	0					
ANR	5368051	Identifier	collection		5367852	0					
ANR	5368052	Identifier	InitializeFromLog		5367852	1					
ANR	5368053	ArgumentList	log_name		5367852	1					
ANR	5368054	Argument	log_name		5367852	0					
ANR	5368055	Identifier	log_name		5367852	0					
ANR	5368056	Argument	""""""		5367852	1					
ANR	5368057	PrimaryExpression	""""""		5367852	0					
ANR	5368058	Argument	""""""		5367852	2					
ANR	5368059	PrimaryExpression	""""""		5367852	0					
ANR	5368060	IfStatement	if ( success )		5367852	2					
ANR	5368061	Condition	success	760:8:23338:23344	5367852	0	True				
ANR	5368062	Identifier	success		5367852	0					
ANR	5368063	CompoundStatement		34:17:1239:1239	5367852	1					
ANR	5368064	ExpressionStatement	"cout << ""OK: Initialized "" << collection_name << "" from "" << log_name << "" on line "" << line_number << "".\\n"""	761:5:23354:23470	5367852	0	True				
ANR	5368065	ShiftExpression	"cout << ""OK: Initialized "" << collection_name << "" from "" << log_name << "" on line "" << line_number << "".\\n"""		5367852	0		<<			
ANR	5368066	Identifier	cout		5367852	0					
ANR	5368067	ShiftExpression	"""OK: Initialized "" << collection_name << "" from "" << log_name << "" on line "" << line_number << "".\\n"""		5367852	1		<<			
ANR	5368068	PrimaryExpression	"""OK: Initialized """		5367852	0					
ANR	5368069	ShiftExpression	"collection_name << "" from "" << log_name << "" on line "" << line_number << "".\\n"""		5367852	1		<<			
ANR	5368070	Identifier	collection_name		5367852	0					
ANR	5368071	ShiftExpression	""" from "" << log_name << "" on line "" << line_number << "".\\n"""		5367852	1		<<			
ANR	5368072	PrimaryExpression	""" from """		5367852	0					
ANR	5368073	ShiftExpression	"log_name << "" on line "" << line_number << "".\\n"""		5367852	1		<<			
ANR	5368074	Identifier	log_name		5367852	0					
ANR	5368075	ShiftExpression	""" on line "" << line_number << "".\\n"""		5367852	1		<<			
ANR	5368076	PrimaryExpression	""" on line """		5367852	0					
ANR	5368077	ShiftExpression	"line_number << "".\\n"""		5367852	1		<<			
ANR	5368078	Identifier	line_number		5367852	0					
ANR	5368079	PrimaryExpression	""".\\n"""		5367852	1					
ANR	5368080	ElseStatement	else		5367852	0					
ANR	5368081	CompoundStatement		37:11:1375:1375	5367852	0					
ANR	5368082	ExpressionStatement	"cout << ""Error: Couldn't initialize "" << collection_name << "" from "" << log_name << "" on line "" << line_number << "".\\n"""	764:5:23490:23626	5367852	0	True				
ANR	5368083	ShiftExpression	"cout << ""Error: Couldn't initialize "" << collection_name << "" from "" << log_name << "" on line "" << line_number << "".\\n"""		5367852	0		<<			
ANR	5368084	Identifier	cout		5367852	0					
ANR	5368085	ShiftExpression	"""Error: Couldn't initialize "" << collection_name << "" from "" << log_name << "" on line "" << line_number << "".\\n"""		5367852	1		<<			
ANR	5368086	PrimaryExpression	"""Error: Couldn't initialize """		5367852	0					
ANR	5368087	ShiftExpression	"collection_name << "" from "" << log_name << "" on line "" << line_number << "".\\n"""		5367852	1		<<			
ANR	5368088	Identifier	collection_name		5367852	0					
ANR	5368089	ShiftExpression	""" from "" << log_name << "" on line "" << line_number << "".\\n"""		5367852	1		<<			
ANR	5368090	PrimaryExpression	""" from """		5367852	0					
ANR	5368091	ShiftExpression	"log_name << "" on line "" << line_number << "".\\n"""		5367852	1		<<			
ANR	5368092	Identifier	log_name		5367852	0					
ANR	5368093	ShiftExpression	""" on line "" << line_number << "".\\n"""		5367852	1		<<			
ANR	5368094	PrimaryExpression	""" on line """		5367852	0					
ANR	5368095	ShiftExpression	"line_number << "".\\n"""		5367852	1		<<			
ANR	5368096	Identifier	line_number		5367852	0					
ANR	5368097	PrimaryExpression	""".\\n"""		5367852	1					
ANR	5368098	ExpressionStatement	errors -> IncrementErrors ( )	767:5:23633:23658	5367852	1	True				
ANR	5368099	CallExpression	errors -> IncrementErrors ( )		5367852	0					
ANR	5368100	Callee	errors -> IncrementErrors		5367852	0					
ANR	5368101	PtrMemberAccess	errors -> IncrementErrors		5367852	0					
ANR	5368102	Identifier	errors		5367852	0					
ANR	5368103	Identifier	IncrementErrors		5367852	1					
ANR	5368104	ArgumentList			5367852	1					
ANR	5368105	ReturnStatement	return ;	773:1:23680:23686	5367852	7	True				
ANR	5368106	ReturnType	static void		5367852	1					
ANR	5368107	Identifier	process_make_collection		5367852	2					
ANR	5368108	ParameterList	"const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors"		5367852	3					
ANR	5368109	Parameter	const string & line	723:36:21978:21995	5367852	0	True				
ANR	5368110	ParameterType	const string &		5367852	0					
ANR	5368111	Identifier	line		5367852	1					
ANR	5368112	Parameter	int token_start	724:8:22006:22020	5367852	1	True				
ANR	5368113	ParameterType	int		5367852	0					
ANR	5368114	Identifier	token_start		5367852	1					
ANR	5368115	Parameter	int line_number	724:25:22023:22037	5367852	2	True				
ANR	5368116	ParameterType	int		5367852	0					
ANR	5368117	Identifier	line_number		5367852	1					
ANR	5368118	Parameter	const Parameters & parameters	725:8:22049:22076	5367852	3	True				
ANR	5368119	ParameterType	const Parameters &		5367852	0					
ANR	5368120	Identifier	parameters		5367852	1					
ANR	5368121	Parameter	ErrorCount * errors	726:8:22087:22104	5367852	4	True				
ANR	5368122	ParameterType	ErrorCount *		5367852	0					
ANR	5368123	Identifier	errors		5367852	1					
ANR	5368124	CFGEntryNode	ENTRY		5367852		True				
ANR	5368125	CFGExitNode	EXIT		5367852		True				
ANR	5368126	Symbol	token_start		5367852						
ANR	5368127	Symbol	NULL		5367852						
ANR	5368128	Symbol	& token_start		5367852						
ANR	5368129	Symbol	log_name		5367852						
ANR	5368130	Symbol	* collection		5367852						
ANR	5368131	Symbol	line		5367852						
ANR	5368132	Symbol	extra_text . compare		5367852						
ANR	5368133	Symbol	collection		5367852						
ANR	5368134	Symbol	* collections		5367852						
ANR	5368135	Symbol	extra_text		5367852						
ANR	5368136	Symbol	extract_token		5367852						
ANR	5368137	Symbol	collections		5367852						
ANR	5368138	Symbol	line_number		5367852						
ANR	5368139	Symbol	success		5367852						
ANR	5368140	Symbol	* collection_name		5367852						
ANR	5368141	Symbol	parameters		5367852						
ANR	5368142	Symbol	collection_name . compare		5367852						
ANR	5368143	Symbol	collection -> InitializeFromLog		5367852						
ANR	5368144	Symbol	errors		5367852						
ANR	5368145	Symbol	collection_name		5367852						
ANR	5368146	Symbol	log_name . compare		5367852						
ANR	5368147	Function	process_add_to_collection	782:0:23893:26116							
ANR	5368148	FunctionDef	"process_add_to_collection (const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors)"		5368147	0					
ANR	5368149	CompoundStatement		786:0:24060:26116	5368147	0					
ANR	5368150	IdentifierDeclStatement	"string collection_name , classad_name ;"	787:1:24063:24099	5368147	0	True				
ANR	5368151	IdentifierDecl	collection_name		5368147	0					
ANR	5368152	IdentifierDeclType	string		5368147	0					
ANR	5368153	Identifier	collection_name		5368147	1					
ANR	5368154	IdentifierDecl	classad_name		5368147	1					
ANR	5368155	IdentifierDeclType	string		5368147	0					
ANR	5368156	Identifier	classad_name		5368147	1					
ANR	5368157	IdentifierDeclStatement	string extra_text ;	788:1:24102:24119	5368147	1	True				
ANR	5368158	IdentifierDecl	extra_text		5368147	0					
ANR	5368159	IdentifierDeclType	string		5368147	0					
ANR	5368160	Identifier	extra_text		5368147	1					
ANR	5368161	ExpressionStatement	"collection_name = extract_token ( & token_start , line )"	790:1:24123:24174	5368147	2	True				
ANR	5368162	AssignmentExpression	"collection_name = extract_token ( & token_start , line )"		5368147	0		=			
ANR	5368163	Identifier	collection_name		5368147	0					
ANR	5368164	CallExpression	"extract_token ( & token_start , line )"		5368147	1					
ANR	5368165	Callee	extract_token		5368147	0					
ANR	5368166	Identifier	extract_token		5368147	0					
ANR	5368167	ArgumentList	& token_start		5368147	1					
ANR	5368168	Argument	& token_start		5368147	0					
ANR	5368169	UnaryOperationExpression	& token_start		5368147	0					
ANR	5368170	UnaryOperator	&		5368147	0					
ANR	5368171	Identifier	token_start		5368147	1					
ANR	5368172	Argument	line		5368147	1					
ANR	5368173	Identifier	line		5368147	0					
ANR	5368174	ExpressionStatement	"classad_name = extract_token ( & token_start , line )"	791:1:24177:24225	5368147	3	True				
ANR	5368175	AssignmentExpression	"classad_name = extract_token ( & token_start , line )"		5368147	0		=			
ANR	5368176	Identifier	classad_name		5368147	0					
ANR	5368177	CallExpression	"extract_token ( & token_start , line )"		5368147	1					
ANR	5368178	Callee	extract_token		5368147	0					
ANR	5368179	Identifier	extract_token		5368147	0					
ANR	5368180	ArgumentList	& token_start		5368147	1					
ANR	5368181	Argument	& token_start		5368147	0					
ANR	5368182	UnaryOperationExpression	& token_start		5368147	0					
ANR	5368183	UnaryOperator	&		5368147	0					
ANR	5368184	Identifier	token_start		5368147	1					
ANR	5368185	Argument	line		5368147	1					
ANR	5368186	Identifier	line		5368147	0					
ANR	5368187	ExpressionStatement	"extra_text = extract_token ( & token_start , line )"	792:1:24228:24274	5368147	4	True				
ANR	5368188	AssignmentExpression	"extra_text = extract_token ( & token_start , line )"		5368147	0		=			
ANR	5368189	Identifier	extra_text		5368147	0					
ANR	5368190	CallExpression	"extract_token ( & token_start , line )"		5368147	1					
ANR	5368191	Callee	extract_token		5368147	0					
ANR	5368192	Identifier	extract_token		5368147	0					
ANR	5368193	ArgumentList	& token_start		5368147	1					
ANR	5368194	Argument	& token_start		5368147	0					
ANR	5368195	UnaryOperationExpression	& token_start		5368147	0					
ANR	5368196	UnaryOperator	&		5368147	0					
ANR	5368197	Identifier	token_start		5368147	1					
ANR	5368198	Argument	line		5368147	1					
ANR	5368199	Identifier	line		5368147	0					
ANR	5368200	IfStatement	"if ( ! collection_name . compare ( """" ) || ! collection_name . compare ( """" ) )"		5368147	5					
ANR	5368201	Condition	"! collection_name . compare ( """" ) || ! collection_name . compare ( """" )"	793:5:24281:24340	5368147	0	True				
ANR	5368202	OrExpression	"! collection_name . compare ( """" ) || ! collection_name . compare ( """" )"		5368147	0		||			
ANR	5368203	UnaryOperationExpression	"! collection_name . compare ( """" )"		5368147	0					
ANR	5368204	UnaryOperator	!		5368147	0					
ANR	5368205	CallExpression	"collection_name . compare ( """" )"		5368147	1					
ANR	5368206	Callee	collection_name . compare		5368147	0					
ANR	5368207	MemberAccess	collection_name . compare		5368147	0					
ANR	5368208	Identifier	collection_name		5368147	0					
ANR	5368209	Identifier	compare		5368147	1					
ANR	5368210	ArgumentList	""""""		5368147	1					
ANR	5368211	Argument	""""""		5368147	0					
ANR	5368212	PrimaryExpression	""""""		5368147	0					
ANR	5368213	UnaryOperationExpression	"! collection_name . compare ( """" )"		5368147	1					
ANR	5368214	UnaryOperator	!		5368147	0					
ANR	5368215	CallExpression	"collection_name . compare ( """" )"		5368147	1					
ANR	5368216	Callee	collection_name . compare		5368147	0					
ANR	5368217	MemberAccess	collection_name . compare		5368147	0					
ANR	5368218	Identifier	collection_name		5368147	0					
ANR	5368219	Identifier	compare		5368147	1					
ANR	5368220	ArgumentList	""""""		5368147	1					
ANR	5368221	Argument	""""""		5368147	0					
ANR	5368222	PrimaryExpression	""""""		5368147	0					
ANR	5368223	CompoundStatement		8:67:282:282	5368147	1					
ANR	5368224	ExpressionStatement	"cout << ""Error: Missing add-to-collection information on line "" << line_number << ""."" << endl"	794:2:24347:24445	5368147	0	True				
ANR	5368225	ShiftExpression	"cout << ""Error: Missing add-to-collection information on line "" << line_number << ""."" << endl"		5368147	0		<<			
ANR	5368226	Identifier	cout		5368147	0					
ANR	5368227	ShiftExpression	"""Error: Missing add-to-collection information on line "" << line_number << ""."" << endl"		5368147	1		<<			
ANR	5368228	PrimaryExpression	"""Error: Missing add-to-collection information on line """		5368147	0					
ANR	5368229	ShiftExpression	"line_number << ""."" << endl"		5368147	1		<<			
ANR	5368230	Identifier	line_number		5368147	0					
ANR	5368231	ShiftExpression	"""."" << endl"		5368147	1		<<			
ANR	5368232	PrimaryExpression	"""."""		5368147	0					
ANR	5368233	Identifier	endl		5368147	1					
ANR	5368234	ExpressionStatement	"cout << ""       Format: add-to-collection <collection-name> <classad-name>"" << endl"	796:2:24449:24532	5368147	1	True				
ANR	5368235	ShiftExpression	"cout << ""       Format: add-to-collection <collection-name> <classad-name>"" << endl"		5368147	0		<<			
ANR	5368236	Identifier	cout		5368147	0					
ANR	5368237	ShiftExpression	"""       Format: add-to-collection <collection-name> <classad-name>"" << endl"		5368147	1		<<			
ANR	5368238	PrimaryExpression	"""       Format: add-to-collection <collection-name> <classad-name>"""		5368147	0					
ANR	5368239	Identifier	endl		5368147	1					
ANR	5368240	ExpressionStatement	errors -> IncrementErrors ( )	797:2:24536:24561	5368147	2	True				
ANR	5368241	CallExpression	errors -> IncrementErrors ( )		5368147	0					
ANR	5368242	Callee	errors -> IncrementErrors		5368147	0					
ANR	5368243	PtrMemberAccess	errors -> IncrementErrors		5368147	0					
ANR	5368244	Identifier	errors		5368147	0					
ANR	5368245	Identifier	IncrementErrors		5368147	1					
ANR	5368246	ArgumentList			5368147	1					
ANR	5368247	ElseStatement	else		5368147	0					
ANR	5368248	IfStatement	"if ( extra_text . compare ( """" ) )"		5368147	0					
ANR	5368249	Condition	"extra_text . compare ( """" )"	799:10:24576:24597	5368147	0	True				
ANR	5368250	CallExpression	"extra_text . compare ( """" )"		5368147	0					
ANR	5368251	Callee	extra_text . compare		5368147	0					
ANR	5368252	MemberAccess	extra_text . compare		5368147	0					
ANR	5368253	Identifier	extra_text		5368147	0					
ANR	5368254	Identifier	compare		5368147	1					
ANR	5368255	ArgumentList	""""""		5368147	1					
ANR	5368256	Argument	""""""		5368147	0					
ANR	5368257	PrimaryExpression	""""""		5368147	0					
ANR	5368258	CompoundStatement		14:34:539:539	5368147	1					
ANR	5368259	ExpressionStatement	"cout << ""Error: Extra make-collection information on line "" << line_number << ""."" << endl"	800:2:24604:24698	5368147	0	True				
ANR	5368260	ShiftExpression	"cout << ""Error: Extra make-collection information on line "" << line_number << ""."" << endl"		5368147	0		<<			
ANR	5368261	Identifier	cout		5368147	0					
ANR	5368262	ShiftExpression	"""Error: Extra make-collection information on line "" << line_number << ""."" << endl"		5368147	1		<<			
ANR	5368263	PrimaryExpression	"""Error: Extra make-collection information on line """		5368147	0					
ANR	5368264	ShiftExpression	"line_number << ""."" << endl"		5368147	1		<<			
ANR	5368265	Identifier	line_number		5368147	0					
ANR	5368266	ShiftExpression	"""."" << endl"		5368147	1		<<			
ANR	5368267	PrimaryExpression	"""."""		5368147	0					
ANR	5368268	Identifier	endl		5368147	1					
ANR	5368269	ExpressionStatement	"cout << ""       Format: add-to-collection <collection-name> <classad-name>"" << endl"	802:2:24702:24785	5368147	1	True				
ANR	5368270	ShiftExpression	"cout << ""       Format: add-to-collection <collection-name> <classad-name>"" << endl"		5368147	0		<<			
ANR	5368271	Identifier	cout		5368147	0					
ANR	5368272	ShiftExpression	"""       Format: add-to-collection <collection-name> <classad-name>"" << endl"		5368147	1		<<			
ANR	5368273	PrimaryExpression	"""       Format: add-to-collection <collection-name> <classad-name>"""		5368147	0					
ANR	5368274	Identifier	endl		5368147	1					
ANR	5368275	ExpressionStatement	errors -> IncrementErrors ( )	803:2:24789:24814	5368147	2	True				
ANR	5368276	CallExpression	errors -> IncrementErrors ( )		5368147	0					
ANR	5368277	Callee	errors -> IncrementErrors		5368147	0					
ANR	5368278	PtrMemberAccess	errors -> IncrementErrors		5368147	0					
ANR	5368279	Identifier	errors		5368147	0					
ANR	5368280	Identifier	IncrementErrors		5368147	1					
ANR	5368281	ArgumentList			5368147	1					
ANR	5368282	ElseStatement	else		5368147	0					
ANR	5368283	CompoundStatement		22:2:801:827	5368147	0					
ANR	5368284	IdentifierDeclStatement	ClassAdCollection * collection ;	806:2:24829:24858	5368147	0	True				
ANR	5368285	IdentifierDecl	* collection		5368147	0					
ANR	5368286	IdentifierDeclType	ClassAdCollection *		5368147	0					
ANR	5368287	Identifier	collection		5368147	1					
ANR	5368288	IdentifierDeclStatement	ClassAd * classad ;	807:2:24862:24888	5368147	1	True				
ANR	5368289	IdentifierDecl	* classad		5368147	0					
ANR	5368290	IdentifierDeclType	ClassAd *		5368147	0					
ANR	5368291	Identifier	classad		5368147	1					
ANR	5368292	ExpressionStatement	collection = collections [ collection_name ]	809:2:24893:24934	5368147	2	True				
ANR	5368293	AssignmentExpression	collection = collections [ collection_name ]		5368147	0		=			
ANR	5368294	Identifier	collection		5368147	0					
ANR	5368295	ArrayIndexing	collections [ collection_name ]		5368147	1					
ANR	5368296	Identifier	collections		5368147	0					
ANR	5368297	Identifier	collection_name		5368147	1					
ANR	5368298	ExpressionStatement	classad = classads [ classad_name ]	810:2:24938:24970	5368147	3	True				
ANR	5368299	AssignmentExpression	classad = classads [ classad_name ]		5368147	0		=			
ANR	5368300	Identifier	classad		5368147	0					
ANR	5368301	ArrayIndexing	classads [ classad_name ]		5368147	1					
ANR	5368302	Identifier	classads		5368147	0					
ANR	5368303	Identifier	classad_name		5368147	1					
ANR	5368304	IfStatement	if ( collection == NULL )		5368147	4					
ANR	5368305	Condition	collection == NULL	811:6:24978:24995	5368147	0	True				
ANR	5368306	EqualityExpression	collection == NULL		5368147	0		==			
ANR	5368307	Identifier	collection		5368147	0					
ANR	5368308	Identifier	NULL		5368147	1					
ANR	5368309	CompoundStatement		26:27:938:938	5368147	1					
ANR	5368310	ExpressionStatement	"cout << ""Error: Unknown collection ("" << collection_name << "") on line "" << line_number << ""."" << endl"	812:3:25004:25113	5368147	0	True				
ANR	5368311	ShiftExpression	"cout << ""Error: Unknown collection ("" << collection_name << "") on line "" << line_number << ""."" << endl"		5368147	0		<<			
ANR	5368312	Identifier	cout		5368147	0					
ANR	5368313	ShiftExpression	"""Error: Unknown collection ("" << collection_name << "") on line "" << line_number << ""."" << endl"		5368147	1		<<			
ANR	5368314	PrimaryExpression	"""Error: Unknown collection ("""		5368147	0					
ANR	5368315	ShiftExpression	"collection_name << "") on line "" << line_number << ""."" << endl"		5368147	1		<<			
ANR	5368316	Identifier	collection_name		5368147	0					
ANR	5368317	ShiftExpression	""") on line "" << line_number << ""."" << endl"		5368147	1		<<			
ANR	5368318	PrimaryExpression	""") on line """		5368147	0					
ANR	5368319	ShiftExpression	"line_number << ""."" << endl"		5368147	1		<<			
ANR	5368320	Identifier	line_number		5368147	0					
ANR	5368321	ShiftExpression	"""."" << endl"		5368147	1		<<			
ANR	5368322	PrimaryExpression	"""."""		5368147	0					
ANR	5368323	Identifier	endl		5368147	1					
ANR	5368324	ExpressionStatement	errors -> IncrementErrors ( )	814:3:25118:25143	5368147	1	True				
ANR	5368325	CallExpression	errors -> IncrementErrors ( )		5368147	0					
ANR	5368326	Callee	errors -> IncrementErrors		5368147	0					
ANR	5368327	PtrMemberAccess	errors -> IncrementErrors		5368147	0					
ANR	5368328	Identifier	errors		5368147	0					
ANR	5368329	Identifier	IncrementErrors		5368147	1					
ANR	5368330	ArgumentList			5368147	1					
ANR	5368331	ElseStatement	else		5368147	0					
ANR	5368332	IfStatement	if ( classad == NULL )		5368147	0					
ANR	5368333	Condition	classad == NULL	815:13:25158:25172	5368147	0	True				
ANR	5368334	EqualityExpression	classad == NULL		5368147	0		==			
ANR	5368335	Identifier	classad		5368147	0					
ANR	5368336	Identifier	NULL		5368147	1					
ANR	5368337	CompoundStatement		30:31:1115:1115	5368147	1					
ANR	5368338	ExpressionStatement	"cout << ""Error: Unknown classad ("" << classad_name << "") on line "" << line_number << ""."" << endl"	816:3:25181:25284	5368147	0	True				
ANR	5368339	ShiftExpression	"cout << ""Error: Unknown classad ("" << classad_name << "") on line "" << line_number << ""."" << endl"		5368147	0		<<			
ANR	5368340	Identifier	cout		5368147	0					
ANR	5368341	ShiftExpression	"""Error: Unknown classad ("" << classad_name << "") on line "" << line_number << ""."" << endl"		5368147	1		<<			
ANR	5368342	PrimaryExpression	"""Error: Unknown classad ("""		5368147	0					
ANR	5368343	ShiftExpression	"classad_name << "") on line "" << line_number << ""."" << endl"		5368147	1		<<			
ANR	5368344	Identifier	classad_name		5368147	0					
ANR	5368345	ShiftExpression	""") on line "" << line_number << ""."" << endl"		5368147	1		<<			
ANR	5368346	PrimaryExpression	""") on line """		5368147	0					
ANR	5368347	ShiftExpression	"line_number << ""."" << endl"		5368147	1		<<			
ANR	5368348	Identifier	line_number		5368147	0					
ANR	5368349	ShiftExpression	"""."" << endl"		5368147	1		<<			
ANR	5368350	PrimaryExpression	"""."""		5368147	0					
ANR	5368351	Identifier	endl		5368147	1					
ANR	5368352	ExpressionStatement	errors -> IncrementErrors ( )	818:3:25289:25314	5368147	1	True				
ANR	5368353	CallExpression	errors -> IncrementErrors ( )		5368147	0					
ANR	5368354	Callee	errors -> IncrementErrors		5368147	0					
ANR	5368355	PtrMemberAccess	errors -> IncrementErrors		5368147	0					
ANR	5368356	Identifier	errors		5368147	0					
ANR	5368357	Identifier	IncrementErrors		5368147	1					
ANR	5368358	ArgumentList			5368147	1					
ANR	5368359	ElseStatement	else		5368147	0					
ANR	5368360	CompoundStatement		36:3:1271:1283	5368147	0					
ANR	5368361	IdentifierDeclStatement	bool success ;	821:3:25332:25344	5368147	0	True				
ANR	5368362	IdentifierDecl	success		5368147	0					
ANR	5368363	IdentifierDeclType	bool		5368147	0					
ANR	5368364	Identifier	success		5368147	1					
ANR	5368365	ExpressionStatement	"success = collection -> AddClassAd ( classad_name , classad )"	822:3:25349:25404	5368147	1	True				
ANR	5368366	AssignmentExpression	"success = collection -> AddClassAd ( classad_name , classad )"		5368147	0		=			
ANR	5368367	Identifier	success		5368147	0					
ANR	5368368	CallExpression	"collection -> AddClassAd ( classad_name , classad )"		5368147	1					
ANR	5368369	Callee	collection -> AddClassAd		5368147	0					
ANR	5368370	PtrMemberAccess	collection -> AddClassAd		5368147	0					
ANR	5368371	Identifier	collection		5368147	0					
ANR	5368372	Identifier	AddClassAd		5368147	1					
ANR	5368373	ArgumentList	classad_name		5368147	1					
ANR	5368374	Argument	classad_name		5368147	0					
ANR	5368375	Identifier	classad_name		5368147	0					
ANR	5368376	Argument	classad		5368147	1					
ANR	5368377	Identifier	classad		5368147	0					
ANR	5368378	IfStatement	if ( ! success )		5368147	2					
ANR	5368379	Condition	! success	823:7:25413:25420	5368147	0	True				
ANR	5368380	UnaryOperationExpression	! success		5368147	0					
ANR	5368381	UnaryOperator	!		5368147	0					
ANR	5368382	Identifier	success		5368147	1					
ANR	5368383	CompoundStatement		38:17:1362:1362	5368147	1					
ANR	5368384	ExpressionStatement	"cout << ""Error: couldn't add "" << classad_name << "" to "" << collection_name << "" on line "" << line_number << "".\\n"""	824:4:25429:25549	5368147	0	True				
ANR	5368385	ShiftExpression	"cout << ""Error: couldn't add "" << classad_name << "" to "" << collection_name << "" on line "" << line_number << "".\\n"""		5368147	0		<<			
ANR	5368386	Identifier	cout		5368147	0					
ANR	5368387	ShiftExpression	"""Error: couldn't add "" << classad_name << "" to "" << collection_name << "" on line "" << line_number << "".\\n"""		5368147	1		<<			
ANR	5368388	PrimaryExpression	"""Error: couldn't add """		5368147	0					
ANR	5368389	ShiftExpression	"classad_name << "" to "" << collection_name << "" on line "" << line_number << "".\\n"""		5368147	1		<<			
ANR	5368390	Identifier	classad_name		5368147	0					
ANR	5368391	ShiftExpression	""" to "" << collection_name << "" on line "" << line_number << "".\\n"""		5368147	1		<<			
ANR	5368392	PrimaryExpression	""" to """		5368147	0					
ANR	5368393	ShiftExpression	"collection_name << "" on line "" << line_number << "".\\n"""		5368147	1		<<			
ANR	5368394	Identifier	collection_name		5368147	0					
ANR	5368395	ShiftExpression	""" on line "" << line_number << "".\\n"""		5368147	1		<<			
ANR	5368396	PrimaryExpression	""" on line """		5368147	0					
ANR	5368397	ShiftExpression	"line_number << "".\\n"""		5368147	1		<<			
ANR	5368398	Identifier	line_number		5368147	0					
ANR	5368399	PrimaryExpression	""".\\n"""		5368147	1					
ANR	5368400	ExpressionStatement	errors -> IncrementErrors ( )	826:4:25555:25580	5368147	1	True				
ANR	5368401	CallExpression	errors -> IncrementErrors ( )		5368147	0					
ANR	5368402	Callee	errors -> IncrementErrors		5368147	0					
ANR	5368403	PtrMemberAccess	errors -> IncrementErrors		5368147	0					
ANR	5368404	Identifier	errors		5368147	0					
ANR	5368405	Identifier	IncrementErrors		5368147	1					
ANR	5368406	ArgumentList			5368147	1					
ANR	5368407	ElseStatement	else		5368147	0					
ANR	5368408	CompoundStatement		44:4:1540:1561	5368147	0					
ANR	5368409	IdentifierDeclStatement	ClassAd * retrieved_ad ;	829:4:25601:25622	5368147	0	True				
ANR	5368410	IdentifierDecl	* retrieved_ad		5368147	0					
ANR	5368411	IdentifierDeclType	ClassAd *		5368147	0					
ANR	5368412	Identifier	retrieved_ad		5368147	1					
ANR	5368413	ExpressionStatement	retrieved_ad = collection -> GetClassAd ( classad_name )	830:4:25628:25679	5368147	1	True				
ANR	5368414	AssignmentExpression	retrieved_ad = collection -> GetClassAd ( classad_name )		5368147	0		=			
ANR	5368415	Identifier	retrieved_ad		5368147	0					
ANR	5368416	CallExpression	collection -> GetClassAd ( classad_name )		5368147	1					
ANR	5368417	Callee	collection -> GetClassAd		5368147	0					
ANR	5368418	PtrMemberAccess	collection -> GetClassAd		5368147	0					
ANR	5368419	Identifier	collection		5368147	0					
ANR	5368420	Identifier	GetClassAd		5368147	1					
ANR	5368421	ArgumentList	classad_name		5368147	1					
ANR	5368422	Argument	classad_name		5368147	0					
ANR	5368423	Identifier	classad_name		5368147	0					
ANR	5368424	IfStatement	if ( retrieved_ad != classad )		5368147	2					
ANR	5368425	Condition	retrieved_ad != classad	831:8:25689:25711	5368147	0	True				
ANR	5368426	EqualityExpression	retrieved_ad != classad		5368147	0		!=			
ANR	5368427	Identifier	retrieved_ad		5368147	0					
ANR	5368428	Identifier	classad		5368147	1					
ANR	5368429	CompoundStatement		46:33:1653:1653	5368147	1					
ANR	5368430	ExpressionStatement	"cout << ""Error: added "" << classad_name << "" to "" << collection_name << "" but it's not there, on line "" << line_number << "".\\n"""	832:5:25721:25863	5368147	0	True				
ANR	5368431	ShiftExpression	"cout << ""Error: added "" << classad_name << "" to "" << collection_name << "" but it's not there, on line "" << line_number << "".\\n"""		5368147	0		<<			
ANR	5368432	Identifier	cout		5368147	0					
ANR	5368433	ShiftExpression	"""Error: added "" << classad_name << "" to "" << collection_name << "" but it's not there, on line "" << line_number << "".\\n"""		5368147	1		<<			
ANR	5368434	PrimaryExpression	"""Error: added """		5368147	0					
ANR	5368435	ShiftExpression	"classad_name << "" to "" << collection_name << "" but it's not there, on line "" << line_number << "".\\n"""		5368147	1		<<			
ANR	5368436	Identifier	classad_name		5368147	0					
ANR	5368437	ShiftExpression	""" to "" << collection_name << "" but it's not there, on line "" << line_number << "".\\n"""		5368147	1		<<			
ANR	5368438	PrimaryExpression	""" to """		5368147	0					
ANR	5368439	ShiftExpression	"collection_name << "" but it's not there, on line "" << line_number << "".\\n"""		5368147	1		<<			
ANR	5368440	Identifier	collection_name		5368147	0					
ANR	5368441	ShiftExpression	""" but it's not there, on line "" << line_number << "".\\n"""		5368147	1		<<			
ANR	5368442	PrimaryExpression	""" but it's not there, on line """		5368147	0					
ANR	5368443	ShiftExpression	"line_number << "".\\n"""		5368147	1		<<			
ANR	5368444	Identifier	line_number		5368147	0					
ANR	5368445	PrimaryExpression	""".\\n"""		5368147	1					
ANR	5368446	ExpressionStatement	errors -> IncrementErrors ( )	835:5:25870:25895	5368147	1	True				
ANR	5368447	CallExpression	errors -> IncrementErrors ( )		5368147	0					
ANR	5368448	Callee	errors -> IncrementErrors		5368147	0					
ANR	5368449	PtrMemberAccess	errors -> IncrementErrors		5368147	0					
ANR	5368450	Identifier	errors		5368147	0					
ANR	5368451	Identifier	IncrementErrors		5368147	1					
ANR	5368452	ArgumentList			5368147	1					
ANR	5368453	ElseStatement	else		5368147	0					
ANR	5368454	CompoundStatement		52:9:1851:1851	5368147	0					
ANR	5368455	ExpressionStatement	"cout << ""OK: added "" << classad_name << "" to "" << collection_name << "", on line "" << line_number << "".\\n"""	838:5:25919:26039	5368147	0	True				
ANR	5368456	ShiftExpression	"cout << ""OK: added "" << classad_name << "" to "" << collection_name << "", on line "" << line_number << "".\\n"""		5368147	0		<<			
ANR	5368457	Identifier	cout		5368147	0					
ANR	5368458	ShiftExpression	"""OK: added "" << classad_name << "" to "" << collection_name << "", on line "" << line_number << "".\\n"""		5368147	1		<<			
ANR	5368459	PrimaryExpression	"""OK: added """		5368147	0					
ANR	5368460	ShiftExpression	"classad_name << "" to "" << collection_name << "", on line "" << line_number << "".\\n"""		5368147	1		<<			
ANR	5368461	Identifier	classad_name		5368147	0					
ANR	5368462	ShiftExpression	""" to "" << collection_name << "", on line "" << line_number << "".\\n"""		5368147	1		<<			
ANR	5368463	PrimaryExpression	""" to """		5368147	0					
ANR	5368464	ShiftExpression	"collection_name << "", on line "" << line_number << "".\\n"""		5368147	1		<<			
ANR	5368465	Identifier	collection_name		5368147	0					
ANR	5368466	ShiftExpression	""", on line "" << line_number << "".\\n"""		5368147	1		<<			
ANR	5368467	PrimaryExpression	""", on line """		5368147	0					
ANR	5368468	ShiftExpression	"line_number << "".\\n"""		5368147	1		<<			
ANR	5368469	Identifier	line_number		5368147	0					
ANR	5368470	PrimaryExpression	""".\\n"""		5368147	1					
ANR	5368471	ExpressionStatement	mark_classad_in_collection ( classad_name )	841:5:26046:26086	5368147	1	True				
ANR	5368472	CallExpression	mark_classad_in_collection ( classad_name )		5368147	0					
ANR	5368473	Callee	mark_classad_in_collection		5368147	0					
ANR	5368474	Identifier	mark_classad_in_collection		5368147	0					
ANR	5368475	ArgumentList	classad_name		5368147	1					
ANR	5368476	Argument	classad_name		5368147	0					
ANR	5368477	Identifier	classad_name		5368147	0					
ANR	5368478	ReturnStatement	return ;	847:1:26108:26114	5368147	6	True				
ANR	5368479	ReturnType	static void		5368147	1					
ANR	5368480	Identifier	process_add_to_collection		5368147	2					
ANR	5368481	ParameterList	"const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors"		5368147	3					
ANR	5368482	Parameter	const string & line	782:38:23931:23948	5368147	0	True				
ANR	5368483	ParameterType	const string &		5368147	0					
ANR	5368484	Identifier	line		5368147	1					
ANR	5368485	Parameter	int token_start	783:8:23959:23973	5368147	1	True				
ANR	5368486	ParameterType	int		5368147	0					
ANR	5368487	Identifier	token_start		5368147	1					
ANR	5368488	Parameter	int line_number	783:25:23976:23990	5368147	2	True				
ANR	5368489	ParameterType	int		5368147	0					
ANR	5368490	Identifier	line_number		5368147	1					
ANR	5368491	Parameter	const Parameters & parameters	784:8:24002:24029	5368147	3	True				
ANR	5368492	ParameterType	const Parameters &		5368147	0					
ANR	5368493	Identifier	parameters		5368147	1					
ANR	5368494	Parameter	ErrorCount * errors	785:8:24040:24057	5368147	4	True				
ANR	5368495	ParameterType	ErrorCount *		5368147	0					
ANR	5368496	Identifier	errors		5368147	1					
ANR	5368497	CFGEntryNode	ENTRY		5368147		True				
ANR	5368498	CFGExitNode	EXIT		5368147		True				
ANR	5368499	Symbol	& token_start		5368147						
ANR	5368500	Symbol	collection -> GetClassAd		5368147						
ANR	5368501	Symbol	line		5368147						
ANR	5368502	Symbol	extra_text . compare		5368147						
ANR	5368503	Symbol	* classads		5368147						
ANR	5368504	Symbol	collections		5368147						
ANR	5368505	Symbol	line_number		5368147						
ANR	5368506	Symbol	classad_name		5368147						
ANR	5368507	Symbol	* collection_name		5368147						
ANR	5368508	Symbol	collection_name . compare		5368147						
ANR	5368509	Symbol	* classad_name		5368147						
ANR	5368510	Symbol	collection -> AddClassAd		5368147						
ANR	5368511	Symbol	token_start		5368147						
ANR	5368512	Symbol	NULL		5368147						
ANR	5368513	Symbol	* collection		5368147						
ANR	5368514	Symbol	collection		5368147						
ANR	5368515	Symbol	* collections		5368147						
ANR	5368516	Symbol	extra_text		5368147						
ANR	5368517	Symbol	extract_token		5368147						
ANR	5368518	Symbol	success		5368147						
ANR	5368519	Symbol	classad		5368147						
ANR	5368520	Symbol	retrieved_ad		5368147						
ANR	5368521	Symbol	parameters		5368147						
ANR	5368522	Symbol	classads		5368147						
ANR	5368523	Symbol	errors		5368147						
ANR	5368524	Symbol	collection_name		5368147						
ANR	5368525	Function	process_truncate_log	856:0:26316:27515							
ANR	5368526	FunctionDef	"process_truncate_log (const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors)"		5368525	0					
ANR	5368527	CompoundStatement		861:0:26459:27515	5368525	0					
ANR	5368528	IdentifierDeclStatement	string collection_name ;	862:1:26462:26484	5368525	0	True				
ANR	5368529	IdentifierDecl	collection_name		5368525	0					
ANR	5368530	IdentifierDeclType	string		5368525	0					
ANR	5368531	Identifier	collection_name		5368525	1					
ANR	5368532	ExpressionStatement	"collection_name = extract_token ( & token_start , line )"	864:1:26488:26539	5368525	1	True				
ANR	5368533	AssignmentExpression	"collection_name = extract_token ( & token_start , line )"		5368525	0		=			
ANR	5368534	Identifier	collection_name		5368525	0					
ANR	5368535	CallExpression	"extract_token ( & token_start , line )"		5368525	1					
ANR	5368536	Callee	extract_token		5368525	0					
ANR	5368537	Identifier	extract_token		5368525	0					
ANR	5368538	ArgumentList	& token_start		5368525	1					
ANR	5368539	Argument	& token_start		5368525	0					
ANR	5368540	UnaryOperationExpression	& token_start		5368525	0					
ANR	5368541	UnaryOperator	&		5368525	0					
ANR	5368542	Identifier	token_start		5368525	1					
ANR	5368543	Argument	line		5368525	1					
ANR	5368544	Identifier	line		5368525	0					
ANR	5368545	IfStatement	"if ( ! collection_name . compare ( """" ) || ! collection_name . compare ( """" ) )"		5368525	2					
ANR	5368546	Condition	"! collection_name . compare ( """" ) || ! collection_name . compare ( """" )"	865:5:26546:26605	5368525	0	True				
ANR	5368547	OrExpression	"! collection_name . compare ( """" ) || ! collection_name . compare ( """" )"		5368525	0		||			
ANR	5368548	UnaryOperationExpression	"! collection_name . compare ( """" )"		5368525	0					
ANR	5368549	UnaryOperator	!		5368525	0					
ANR	5368550	CallExpression	"collection_name . compare ( """" )"		5368525	1					
ANR	5368551	Callee	collection_name . compare		5368525	0					
ANR	5368552	MemberAccess	collection_name . compare		5368525	0					
ANR	5368553	Identifier	collection_name		5368525	0					
ANR	5368554	Identifier	compare		5368525	1					
ANR	5368555	ArgumentList	""""""		5368525	1					
ANR	5368556	Argument	""""""		5368525	0					
ANR	5368557	PrimaryExpression	""""""		5368525	0					
ANR	5368558	UnaryOperationExpression	"! collection_name . compare ( """" )"		5368525	1					
ANR	5368559	UnaryOperator	!		5368525	0					
ANR	5368560	CallExpression	"collection_name . compare ( """" )"		5368525	1					
ANR	5368561	Callee	collection_name . compare		5368525	0					
ANR	5368562	MemberAccess	collection_name . compare		5368525	0					
ANR	5368563	Identifier	collection_name		5368525	0					
ANR	5368564	Identifier	compare		5368525	1					
ANR	5368565	ArgumentList	""""""		5368525	1					
ANR	5368566	Argument	""""""		5368525	0					
ANR	5368567	PrimaryExpression	""""""		5368525	0					
ANR	5368568	CompoundStatement		5:67:148:148	5368525	1					
ANR	5368569	ExpressionStatement	"cout << ""Error: Missing add-to-collection information on line "" << line_number << ""."" << endl"	866:2:26612:26710	5368525	0	True				
ANR	5368570	ShiftExpression	"cout << ""Error: Missing add-to-collection information on line "" << line_number << ""."" << endl"		5368525	0		<<			
ANR	5368571	Identifier	cout		5368525	0					
ANR	5368572	ShiftExpression	"""Error: Missing add-to-collection information on line "" << line_number << ""."" << endl"		5368525	1		<<			
ANR	5368573	PrimaryExpression	"""Error: Missing add-to-collection information on line """		5368525	0					
ANR	5368574	ShiftExpression	"line_number << ""."" << endl"		5368525	1		<<			
ANR	5368575	Identifier	line_number		5368525	0					
ANR	5368576	ShiftExpression	"""."" << endl"		5368525	1		<<			
ANR	5368577	PrimaryExpression	"""."""		5368525	0					
ANR	5368578	Identifier	endl		5368525	1					
ANR	5368579	ExpressionStatement	"cout << ""       Format: add-to-collection <collection-name> <classad-name>"" << endl"	868:2:26714:26797	5368525	1	True				
ANR	5368580	ShiftExpression	"cout << ""       Format: add-to-collection <collection-name> <classad-name>"" << endl"		5368525	0		<<			
ANR	5368581	Identifier	cout		5368525	0					
ANR	5368582	ShiftExpression	"""       Format: add-to-collection <collection-name> <classad-name>"" << endl"		5368525	1		<<			
ANR	5368583	PrimaryExpression	"""       Format: add-to-collection <collection-name> <classad-name>"""		5368525	0					
ANR	5368584	Identifier	endl		5368525	1					
ANR	5368585	ExpressionStatement	errors -> IncrementErrors ( )	869:2:26801:26826	5368525	2	True				
ANR	5368586	CallExpression	errors -> IncrementErrors ( )		5368525	0					
ANR	5368587	Callee	errors -> IncrementErrors		5368525	0					
ANR	5368588	PtrMemberAccess	errors -> IncrementErrors		5368525	0					
ANR	5368589	Identifier	errors		5368525	0					
ANR	5368590	Identifier	IncrementErrors		5368525	1					
ANR	5368591	ArgumentList			5368525	1					
ANR	5368592	ElseStatement	else		5368525	0					
ANR	5368593	CompoundStatement		12:2:381:410	5368525	0					
ANR	5368594	IdentifierDeclStatement	ClassAdCollection * collection ;	872:2:26841:26870	5368525	0	True				
ANR	5368595	IdentifierDecl	* collection		5368525	0					
ANR	5368596	IdentifierDeclType	ClassAdCollection *		5368525	0					
ANR	5368597	Identifier	collection		5368525	1					
ANR	5368598	ExpressionStatement	collection = collections [ collection_name ]	874:2:26875:26916	5368525	1	True				
ANR	5368599	AssignmentExpression	collection = collections [ collection_name ]		5368525	0		=			
ANR	5368600	Identifier	collection		5368525	0					
ANR	5368601	ArrayIndexing	collections [ collection_name ]		5368525	1					
ANR	5368602	Identifier	collections		5368525	0					
ANR	5368603	Identifier	collection_name		5368525	1					
ANR	5368604	IfStatement	if ( collection == NULL )		5368525	2					
ANR	5368605	Condition	collection == NULL	875:6:26924:26941	5368525	0	True				
ANR	5368606	EqualityExpression	collection == NULL		5368525	0		==			
ANR	5368607	Identifier	collection		5368525	0					
ANR	5368608	Identifier	NULL		5368525	1					
ANR	5368609	CompoundStatement		15:27:485:485	5368525	1					
ANR	5368610	ExpressionStatement	"cout << ""Error: Unknown collection ("" << collection_name << "") on line "" << line_number << ""."" << endl"	876:3:26950:27059	5368525	0	True				
ANR	5368611	ShiftExpression	"cout << ""Error: Unknown collection ("" << collection_name << "") on line "" << line_number << ""."" << endl"		5368525	0		<<			
ANR	5368612	Identifier	cout		5368525	0					
ANR	5368613	ShiftExpression	"""Error: Unknown collection ("" << collection_name << "") on line "" << line_number << ""."" << endl"		5368525	1		<<			
ANR	5368614	PrimaryExpression	"""Error: Unknown collection ("""		5368525	0					
ANR	5368615	ShiftExpression	"collection_name << "") on line "" << line_number << ""."" << endl"		5368525	1		<<			
ANR	5368616	Identifier	collection_name		5368525	0					
ANR	5368617	ShiftExpression	""") on line "" << line_number << ""."" << endl"		5368525	1		<<			
ANR	5368618	PrimaryExpression	""") on line """		5368525	0					
ANR	5368619	ShiftExpression	"line_number << ""."" << endl"		5368525	1		<<			
ANR	5368620	Identifier	line_number		5368525	0					
ANR	5368621	ShiftExpression	"""."" << endl"		5368525	1		<<			
ANR	5368622	PrimaryExpression	"""."""		5368525	0					
ANR	5368623	Identifier	endl		5368525	1					
ANR	5368624	ExpressionStatement	errors -> IncrementErrors ( )	878:3:27064:27089	5368525	1	True				
ANR	5368625	CallExpression	errors -> IncrementErrors ( )		5368525	0					
ANR	5368626	Callee	errors -> IncrementErrors		5368525	0					
ANR	5368627	PtrMemberAccess	errors -> IncrementErrors		5368525	0					
ANR	5368628	Identifier	errors		5368525	0					
ANR	5368629	Identifier	IncrementErrors		5368525	1					
ANR	5368630	ArgumentList			5368525	1					
ANR	5368631	ElseStatement	else		5368525	0					
ANR	5368632	CompoundStatement		21:3:647:659	5368525	0					
ANR	5368633	IdentifierDeclStatement	bool success ;	881:3:27107:27119	5368525	0	True				
ANR	5368634	IdentifierDecl	success		5368525	0					
ANR	5368635	IdentifierDeclType	bool		5368525	0					
ANR	5368636	Identifier	success		5368525	1					
ANR	5368637	ExpressionStatement	success = collection -> TruncateLog ( )	882:3:27124:27159	5368525	1	True				
ANR	5368638	AssignmentExpression	success = collection -> TruncateLog ( )		5368525	0		=			
ANR	5368639	Identifier	success		5368525	0					
ANR	5368640	CallExpression	collection -> TruncateLog ( )		5368525	1					
ANR	5368641	Callee	collection -> TruncateLog		5368525	0					
ANR	5368642	PtrMemberAccess	collection -> TruncateLog		5368525	0					
ANR	5368643	Identifier	collection		5368525	0					
ANR	5368644	Identifier	TruncateLog		5368525	1					
ANR	5368645	ArgumentList			5368525	1					
ANR	5368646	IfStatement	if ( ! success )		5368525	2					
ANR	5368647	Condition	! success	883:7:27168:27175	5368525	0	True				
ANR	5368648	UnaryOperationExpression	! success		5368525	0					
ANR	5368649	UnaryOperator	!		5368525	0					
ANR	5368650	Identifier	success		5368525	1					
ANR	5368651	CompoundStatement		23:17:718:718	5368525	1					
ANR	5368652	ExpressionStatement	"cout << ""Error: couldn't truncate log for "" << collection_name << "" on line "" << line_number << "".\\n"""	884:4:27184:27292	5368525	0	True				
ANR	5368653	ShiftExpression	"cout << ""Error: couldn't truncate log for "" << collection_name << "" on line "" << line_number << "".\\n"""		5368525	0		<<			
ANR	5368654	Identifier	cout		5368525	0					
ANR	5368655	ShiftExpression	"""Error: couldn't truncate log for "" << collection_name << "" on line "" << line_number << "".\\n"""		5368525	1		<<			
ANR	5368656	PrimaryExpression	"""Error: couldn't truncate log for """		5368525	0					
ANR	5368657	ShiftExpression	"collection_name << "" on line "" << line_number << "".\\n"""		5368525	1		<<			
ANR	5368658	Identifier	collection_name		5368525	0					
ANR	5368659	ShiftExpression	""" on line "" << line_number << "".\\n"""		5368525	1		<<			
ANR	5368660	PrimaryExpression	""" on line """		5368525	0					
ANR	5368661	ShiftExpression	"line_number << "".\\n"""		5368525	1		<<			
ANR	5368662	Identifier	line_number		5368525	0					
ANR	5368663	PrimaryExpression	""".\\n"""		5368525	1					
ANR	5368664	ExpressionStatement	"cout << ""  (Error is: "" << CondorErrMsg << "")\\n"""	886:4:27298:27346	5368525	1	True				
ANR	5368665	ShiftExpression	"cout << ""  (Error is: "" << CondorErrMsg << "")\\n"""		5368525	0		<<			
ANR	5368666	Identifier	cout		5368525	0					
ANR	5368667	ShiftExpression	"""  (Error is: "" << CondorErrMsg << "")\\n"""		5368525	1		<<			
ANR	5368668	PrimaryExpression	"""  (Error is: """		5368525	0					
ANR	5368669	ShiftExpression	"CondorErrMsg << "")\\n"""		5368525	1		<<			
ANR	5368670	Identifier	CondorErrMsg		5368525	0					
ANR	5368671	PrimaryExpression	""")\\n"""		5368525	1					
ANR	5368672	ExpressionStatement	errors -> IncrementErrors ( )	887:4:27352:27377	5368525	2	True				
ANR	5368673	CallExpression	errors -> IncrementErrors ( )		5368525	0					
ANR	5368674	Callee	errors -> IncrementErrors		5368525	0					
ANR	5368675	PtrMemberAccess	errors -> IncrementErrors		5368525	0					
ANR	5368676	Identifier	errors		5368525	0					
ANR	5368677	Identifier	IncrementErrors		5368525	1					
ANR	5368678	ArgumentList			5368525	1					
ANR	5368679	ElseStatement	else		5368525	0					
ANR	5368680	CompoundStatement		28:10:929:929	5368525	0					
ANR	5368681	ExpressionStatement	"cout << ""OK: Truncated log for "" << collection_name << "" on line "" << line_number << "".\\n"""	889:4:27395:27491	5368525	0	True				
ANR	5368682	ShiftExpression	"cout << ""OK: Truncated log for "" << collection_name << "" on line "" << line_number << "".\\n"""		5368525	0		<<			
ANR	5368683	Identifier	cout		5368525	0					
ANR	5368684	ShiftExpression	"""OK: Truncated log for "" << collection_name << "" on line "" << line_number << "".\\n"""		5368525	1		<<			
ANR	5368685	PrimaryExpression	"""OK: Truncated log for """		5368525	0					
ANR	5368686	ShiftExpression	"collection_name << "" on line "" << line_number << "".\\n"""		5368525	1		<<			
ANR	5368687	Identifier	collection_name		5368525	0					
ANR	5368688	ShiftExpression	""" on line "" << line_number << "".\\n"""		5368525	1		<<			
ANR	5368689	PrimaryExpression	""" on line """		5368525	0					
ANR	5368690	ShiftExpression	"line_number << "".\\n"""		5368525	1		<<			
ANR	5368691	Identifier	line_number		5368525	0					
ANR	5368692	PrimaryExpression	""".\\n"""		5368525	1					
ANR	5368693	ReturnStatement	return ;	895:1:27507:27513	5368525	3	True				
ANR	5368694	ReturnType	static void		5368525	1					
ANR	5368695	Identifier	process_truncate_log		5368525	2					
ANR	5368696	ParameterList	"const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors"		5368525	3					
ANR	5368697	Parameter	const string & line	857:1:26351:26368	5368525	0	True				
ANR	5368698	ParameterType	const string &		5368525	0					
ANR	5368699	Identifier	line		5368525	1					
ANR	5368700	Parameter	int token_start	858:1:26372:26386	5368525	1	True				
ANR	5368701	ParameterType	int		5368525	0					
ANR	5368702	Identifier	token_start		5368525	1					
ANR	5368703	Parameter	int line_number	858:18:26389:26403	5368525	2	True				
ANR	5368704	ParameterType	int		5368525	0					
ANR	5368705	Identifier	line_number		5368525	1					
ANR	5368706	Parameter	const Parameters & parameters	859:1:26408:26435	5368525	3	True				
ANR	5368707	ParameterType	const Parameters &		5368525	0					
ANR	5368708	Identifier	parameters		5368525	1					
ANR	5368709	Parameter	ErrorCount * errors	860:1:26439:26456	5368525	4	True				
ANR	5368710	ParameterType	ErrorCount *		5368525	0					
ANR	5368711	Identifier	errors		5368525	1					
ANR	5368712	CFGEntryNode	ENTRY		5368525		True				
ANR	5368713	CFGExitNode	EXIT		5368525		True				
ANR	5368714	Symbol	token_start		5368525						
ANR	5368715	Symbol	NULL		5368525						
ANR	5368716	Symbol	& token_start		5368525						
ANR	5368717	Symbol	* collection		5368525						
ANR	5368718	Symbol	line		5368525						
ANR	5368719	Symbol	collection		5368525						
ANR	5368720	Symbol	* collections		5368525						
ANR	5368721	Symbol	extract_token		5368525						
ANR	5368722	Symbol	collection -> TruncateLog		5368525						
ANR	5368723	Symbol	collections		5368525						
ANR	5368724	Symbol	line_number		5368525						
ANR	5368725	Symbol	success		5368525						
ANR	5368726	Symbol	* collection_name		5368525						
ANR	5368727	Symbol	parameters		5368525						
ANR	5368728	Symbol	collection_name . compare		5368525						
ANR	5368729	Symbol	errors		5368525						
ANR	5368730	Symbol	collection_name		5368525						
ANR	5368731	Function	process_create_subview	904:0:27717:29430							
ANR	5368732	FunctionDef	"process_create_subview (const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors)"		5368731	0					
ANR	5368733	CompoundStatement		908:0:27881:29430	5368731	0					
ANR	5368734	IdentifierDeclStatement	"string collection_name , parent_view_name , view_name , constraint ;"	909:1:27884:27947	5368731	0	True				
ANR	5368735	IdentifierDecl	collection_name		5368731	0					
ANR	5368736	IdentifierDeclType	string		5368731	0					
ANR	5368737	Identifier	collection_name		5368731	1					
ANR	5368738	IdentifierDecl	parent_view_name		5368731	1					
ANR	5368739	IdentifierDeclType	string		5368731	0					
ANR	5368740	Identifier	parent_view_name		5368731	1					
ANR	5368741	IdentifierDecl	view_name		5368731	2					
ANR	5368742	IdentifierDeclType	string		5368731	0					
ANR	5368743	Identifier	view_name		5368731	1					
ANR	5368744	IdentifierDecl	constraint		5368731	3					
ANR	5368745	IdentifierDeclType	string		5368731	0					
ANR	5368746	Identifier	constraint		5368731	1					
ANR	5368747	ExpressionStatement	"collection_name = extract_token ( & token_start , line )"	911:1:27951:28002	5368731	1	True				
ANR	5368748	AssignmentExpression	"collection_name = extract_token ( & token_start , line )"		5368731	0		=			
ANR	5368749	Identifier	collection_name		5368731	0					
ANR	5368750	CallExpression	"extract_token ( & token_start , line )"		5368731	1					
ANR	5368751	Callee	extract_token		5368731	0					
ANR	5368752	Identifier	extract_token		5368731	0					
ANR	5368753	ArgumentList	& token_start		5368731	1					
ANR	5368754	Argument	& token_start		5368731	0					
ANR	5368755	UnaryOperationExpression	& token_start		5368731	0					
ANR	5368756	UnaryOperator	&		5368731	0					
ANR	5368757	Identifier	token_start		5368731	1					
ANR	5368758	Argument	line		5368731	1					
ANR	5368759	Identifier	line		5368731	0					
ANR	5368760	ExpressionStatement	"parent_view_name = extract_token ( & token_start , line )"	912:1:28005:28057	5368731	2	True				
ANR	5368761	AssignmentExpression	"parent_view_name = extract_token ( & token_start , line )"		5368731	0		=			
ANR	5368762	Identifier	parent_view_name		5368731	0					
ANR	5368763	CallExpression	"extract_token ( & token_start , line )"		5368731	1					
ANR	5368764	Callee	extract_token		5368731	0					
ANR	5368765	Identifier	extract_token		5368731	0					
ANR	5368766	ArgumentList	& token_start		5368731	1					
ANR	5368767	Argument	& token_start		5368731	0					
ANR	5368768	UnaryOperationExpression	& token_start		5368731	0					
ANR	5368769	UnaryOperator	&		5368731	0					
ANR	5368770	Identifier	token_start		5368731	1					
ANR	5368771	Argument	line		5368731	1					
ANR	5368772	Identifier	line		5368731	0					
ANR	5368773	ExpressionStatement	"view_name = extract_token ( & token_start , line )"	913:1:28060:28105	5368731	3	True				
ANR	5368774	AssignmentExpression	"view_name = extract_token ( & token_start , line )"		5368731	0		=			
ANR	5368775	Identifier	view_name		5368731	0					
ANR	5368776	CallExpression	"extract_token ( & token_start , line )"		5368731	1					
ANR	5368777	Callee	extract_token		5368731	0					
ANR	5368778	Identifier	extract_token		5368731	0					
ANR	5368779	ArgumentList	& token_start		5368731	1					
ANR	5368780	Argument	& token_start		5368731	0					
ANR	5368781	UnaryOperationExpression	& token_start		5368731	0					
ANR	5368782	UnaryOperator	&		5368731	0					
ANR	5368783	Identifier	token_start		5368731	1					
ANR	5368784	Argument	line		5368731	1					
ANR	5368785	Identifier	line		5368731	0					
ANR	5368786	IfStatement	if ( ( unsigned ) token_start < line . size ( ) )		5368731	4					
ANR	5368787	Condition	( unsigned ) token_start < line . size ( )	914:5:28112:28147	5368731	0	True				
ANR	5368788	RelationalExpression	( unsigned ) token_start < line . size ( )		5368731	0		<			
ANR	5368789	CastExpression	( unsigned ) token_start		5368731	0					
ANR	5368790	CastTarget	unsigned		5368731	0					
ANR	5368791	Identifier	token_start		5368731	1					
ANR	5368792	CallExpression	line . size ( )		5368731	1					
ANR	5368793	Callee	line . size		5368731	0					
ANR	5368794	MemberAccess	line . size		5368731	0					
ANR	5368795	Identifier	line		5368731	0					
ANR	5368796	Identifier	size		5368731	1					
ANR	5368797	ArgumentList			5368731	1					
ANR	5368798	CompoundStatement		7:43:268:268	5368731	1					
ANR	5368799	ExpressionStatement	"constraint = line . substr ( token_start , line . size ( ) - token_start )"	915:2:28154:28218	5368731	0	True				
ANR	5368800	AssignmentExpression	"constraint = line . substr ( token_start , line . size ( ) - token_start )"		5368731	0		=			
ANR	5368801	Identifier	constraint		5368731	0					
ANR	5368802	CallExpression	"line . substr ( token_start , line . size ( ) - token_start )"		5368731	1					
ANR	5368803	Callee	line . substr		5368731	0					
ANR	5368804	MemberAccess	line . substr		5368731	0					
ANR	5368805	Identifier	line		5368731	0					
ANR	5368806	Identifier	substr		5368731	1					
ANR	5368807	ArgumentList	token_start		5368731	1					
ANR	5368808	Argument	token_start		5368731	0					
ANR	5368809	Identifier	token_start		5368731	0					
ANR	5368810	Argument	line . size ( ) - token_start		5368731	1					
ANR	5368811	AdditiveExpression	line . size ( ) - token_start		5368731	0		-			
ANR	5368812	CallExpression	line . size ( )		5368731	0					
ANR	5368813	Callee	line . size		5368731	0					
ANR	5368814	MemberAccess	line . size		5368731	0					
ANR	5368815	Identifier	line		5368731	0					
ANR	5368816	Identifier	size		5368731	1					
ANR	5368817	ArgumentList			5368731	1					
ANR	5368818	Identifier	token_start		5368731	1					
ANR	5368819	ElseStatement	else		5368731	0					
ANR	5368820	CompoundStatement		9:8:346:346	5368731	0					
ANR	5368821	ExpressionStatement	"constraint = """""	917:2:28232:28247	5368731	0	True				
ANR	5368822	AssignmentExpression	"constraint = """""		5368731	0		=			
ANR	5368823	Identifier	constraint		5368731	0					
ANR	5368824	PrimaryExpression	""""""		5368731	1					
ANR	5368825	IfStatement	"if ( ! collection_name . compare ( """" ) || ! parent_view_name . compare ( """" ) || ! view_name . compare ( """" ) || ! constraint . compare ( """" ) )"		5368731	5					
ANR	5368826	Condition	"! collection_name . compare ( """" ) || ! parent_view_name . compare ( """" ) || ! view_name . compare ( """" ) || ! constraint . compare ( """" )"	919:5:28257:28372	5368731	0	True				
ANR	5368827	OrExpression	"! collection_name . compare ( """" ) || ! parent_view_name . compare ( """" ) || ! view_name . compare ( """" ) || ! constraint . compare ( """" )"		5368731	0		||			
ANR	5368828	UnaryOperationExpression	"! collection_name . compare ( """" )"		5368731	0					
ANR	5368829	UnaryOperator	!		5368731	0					
ANR	5368830	CallExpression	"collection_name . compare ( """" )"		5368731	1					
ANR	5368831	Callee	collection_name . compare		5368731	0					
ANR	5368832	MemberAccess	collection_name . compare		5368731	0					
ANR	5368833	Identifier	collection_name		5368731	0					
ANR	5368834	Identifier	compare		5368731	1					
ANR	5368835	ArgumentList	""""""		5368731	1					
ANR	5368836	Argument	""""""		5368731	0					
ANR	5368837	PrimaryExpression	""""""		5368731	0					
ANR	5368838	OrExpression	"! parent_view_name . compare ( """" ) || ! view_name . compare ( """" ) || ! constraint . compare ( """" )"		5368731	1		||			
ANR	5368839	UnaryOperationExpression	"! parent_view_name . compare ( """" )"		5368731	0					
ANR	5368840	UnaryOperator	!		5368731	0					
ANR	5368841	CallExpression	"parent_view_name . compare ( """" )"		5368731	1					
ANR	5368842	Callee	parent_view_name . compare		5368731	0					
ANR	5368843	MemberAccess	parent_view_name . compare		5368731	0					
ANR	5368844	Identifier	parent_view_name		5368731	0					
ANR	5368845	Identifier	compare		5368731	1					
ANR	5368846	ArgumentList	""""""		5368731	1					
ANR	5368847	Argument	""""""		5368731	0					
ANR	5368848	PrimaryExpression	""""""		5368731	0					
ANR	5368849	OrExpression	"! view_name . compare ( """" ) || ! constraint . compare ( """" )"		5368731	1		||			
ANR	5368850	UnaryOperationExpression	"! view_name . compare ( """" )"		5368731	0					
ANR	5368851	UnaryOperator	!		5368731	0					
ANR	5368852	CallExpression	"view_name . compare ( """" )"		5368731	1					
ANR	5368853	Callee	view_name . compare		5368731	0					
ANR	5368854	MemberAccess	view_name . compare		5368731	0					
ANR	5368855	Identifier	view_name		5368731	0					
ANR	5368856	Identifier	compare		5368731	1					
ANR	5368857	ArgumentList	""""""		5368731	1					
ANR	5368858	Argument	""""""		5368731	0					
ANR	5368859	PrimaryExpression	""""""		5368731	0					
ANR	5368860	UnaryOperationExpression	"! constraint . compare ( """" )"		5368731	1					
ANR	5368861	UnaryOperator	!		5368731	0					
ANR	5368862	CallExpression	"constraint . compare ( """" )"		5368731	1					
ANR	5368863	Callee	constraint . compare		5368731	0					
ANR	5368864	MemberAccess	constraint . compare		5368731	0					
ANR	5368865	Identifier	constraint		5368731	0					
ANR	5368866	Identifier	compare		5368731	1					
ANR	5368867	ArgumentList	""""""		5368731	1					
ANR	5368868	Argument	""""""		5368731	0					
ANR	5368869	PrimaryExpression	""""""		5368731	0					
ANR	5368870	CompoundStatement		13:56:493:493	5368731	1					
ANR	5368871	ExpressionStatement	"cout << ""Error: Missing subview information on line "" << line_number << ""."" << endl"	921:2:28379:28467	5368731	0	True				
ANR	5368872	ShiftExpression	"cout << ""Error: Missing subview information on line "" << line_number << ""."" << endl"		5368731	0		<<			
ANR	5368873	Identifier	cout		5368731	0					
ANR	5368874	ShiftExpression	"""Error: Missing subview information on line "" << line_number << ""."" << endl"		5368731	1		<<			
ANR	5368875	PrimaryExpression	"""Error: Missing subview information on line """		5368731	0					
ANR	5368876	ShiftExpression	"line_number << ""."" << endl"		5368731	1		<<			
ANR	5368877	Identifier	line_number		5368731	0					
ANR	5368878	ShiftExpression	"""."" << endl"		5368731	1		<<			
ANR	5368879	PrimaryExpression	"""."""		5368731	0					
ANR	5368880	Identifier	endl		5368731	1					
ANR	5368881	ExpressionStatement	"cout << ""       Format: create-subview collection parent-view view constraint"" << endl"	923:2:28471:28561	5368731	1	True				
ANR	5368882	ShiftExpression	"cout << ""       Format: create-subview collection parent-view view constraint"" << endl"		5368731	0		<<			
ANR	5368883	Identifier	cout		5368731	0					
ANR	5368884	ShiftExpression	"""       Format: create-subview collection parent-view view constraint"" << endl"		5368731	1		<<			
ANR	5368885	PrimaryExpression	"""       Format: create-subview collection parent-view view constraint"""		5368731	0					
ANR	5368886	Identifier	endl		5368731	1					
ANR	5368887	ExpressionStatement	errors -> IncrementErrors ( )	925:2:28565:28590	5368731	2	True				
ANR	5368888	CallExpression	errors -> IncrementErrors ( )		5368731	0					
ANR	5368889	Callee	errors -> IncrementErrors		5368731	0					
ANR	5368890	PtrMemberAccess	errors -> IncrementErrors		5368731	0					
ANR	5368891	Identifier	errors		5368731	0					
ANR	5368892	Identifier	IncrementErrors		5368731	1					
ANR	5368893	ArgumentList			5368731	1					
ANR	5368894	ElseStatement	else		5368731	0					
ANR	5368895	CompoundStatement		21:2:723:753	5368731	0					
ANR	5368896	IdentifierDeclStatement	ClassAdCollection * collection ;	928:2:28605:28635	5368731	0	True				
ANR	5368897	IdentifierDecl	* collection		5368731	0					
ANR	5368898	IdentifierDeclType	ClassAdCollection *		5368731	0					
ANR	5368899	Identifier	collection		5368731	1					
ANR	5368900	ExpressionStatement	collection = collections [ collection_name ]	930:2:28640:28681	5368731	1	True				
ANR	5368901	AssignmentExpression	collection = collections [ collection_name ]		5368731	0		=			
ANR	5368902	Identifier	collection		5368731	0					
ANR	5368903	ArrayIndexing	collections [ collection_name ]		5368731	1					
ANR	5368904	Identifier	collections		5368731	0					
ANR	5368905	Identifier	collection_name		5368731	1					
ANR	5368906	IfStatement	if ( collection == NULL )		5368731	2					
ANR	5368907	Condition	collection == NULL	931:6:28689:28706	5368731	0	True				
ANR	5368908	EqualityExpression	collection == NULL		5368731	0		==			
ANR	5368909	Identifier	collection		5368731	0					
ANR	5368910	Identifier	NULL		5368731	1					
ANR	5368911	CompoundStatement		24:26:827:827	5368731	1					
ANR	5368912	ExpressionStatement	"cout << ""Error: Unknown collection ("" << collection_name << "") on line "" << line_number << "".\\n"""	932:3:28714:28816	5368731	0	True				
ANR	5368913	ShiftExpression	"cout << ""Error: Unknown collection ("" << collection_name << "") on line "" << line_number << "".\\n"""		5368731	0		<<			
ANR	5368914	Identifier	cout		5368731	0					
ANR	5368915	ShiftExpression	"""Error: Unknown collection ("" << collection_name << "") on line "" << line_number << "".\\n"""		5368731	1		<<			
ANR	5368916	PrimaryExpression	"""Error: Unknown collection ("""		5368731	0					
ANR	5368917	ShiftExpression	"collection_name << "") on line "" << line_number << "".\\n"""		5368731	1		<<			
ANR	5368918	Identifier	collection_name		5368731	0					
ANR	5368919	ShiftExpression	""") on line "" << line_number << "".\\n"""		5368731	1		<<			
ANR	5368920	PrimaryExpression	""") on line """		5368731	0					
ANR	5368921	ShiftExpression	"line_number << "".\\n"""		5368731	1		<<			
ANR	5368922	Identifier	line_number		5368731	0					
ANR	5368923	PrimaryExpression	""".\\n"""		5368731	1					
ANR	5368924	ExpressionStatement	errors -> IncrementErrors ( )	934:3:28821:28846	5368731	1	True				
ANR	5368925	CallExpression	errors -> IncrementErrors ( )		5368731	0					
ANR	5368926	Callee	errors -> IncrementErrors		5368731	0					
ANR	5368927	PtrMemberAccess	errors -> IncrementErrors		5368731	0					
ANR	5368928	Identifier	errors		5368731	0					
ANR	5368929	Identifier	IncrementErrors		5368731	1					
ANR	5368930	ArgumentList			5368731	1					
ANR	5368931	ElseStatement	else		5368731	0					
ANR	5368932	CompoundStatement		29:3:980:992	5368731	0					
ANR	5368933	IdentifierDeclStatement	bool success ;	936:3:28862:28874	5368731	0	True				
ANR	5368934	IdentifierDecl	success		5368731	0					
ANR	5368935	IdentifierDeclType	bool		5368731	0					
ANR	5368936	Identifier	success		5368731	1					
ANR	5368937	ExpressionStatement	"success = collection -> CreateSubView ( view_name , parent_view_name , constraint , """" , """" )"	938:3:28880:28976	5368731	1	True				
ANR	5368938	AssignmentExpression	"success = collection -> CreateSubView ( view_name , parent_view_name , constraint , """" , """" )"		5368731	0		=			
ANR	5368939	Identifier	success		5368731	0					
ANR	5368940	CallExpression	"collection -> CreateSubView ( view_name , parent_view_name , constraint , """" , """" )"		5368731	1					
ANR	5368941	Callee	collection -> CreateSubView		5368731	0					
ANR	5368942	PtrMemberAccess	collection -> CreateSubView		5368731	0					
ANR	5368943	Identifier	collection		5368731	0					
ANR	5368944	Identifier	CreateSubView		5368731	1					
ANR	5368945	ArgumentList	view_name		5368731	1					
ANR	5368946	Argument	view_name		5368731	0					
ANR	5368947	Identifier	view_name		5368731	0					
ANR	5368948	Argument	parent_view_name		5368731	1					
ANR	5368949	Identifier	parent_view_name		5368731	0					
ANR	5368950	Argument	constraint		5368731	2					
ANR	5368951	Identifier	constraint		5368731	0					
ANR	5368952	Argument	""""""		5368731	3					
ANR	5368953	PrimaryExpression	""""""		5368731	0					
ANR	5368954	Argument	""""""		5368731	4					
ANR	5368955	PrimaryExpression	""""""		5368731	0					
ANR	5368956	IfStatement	if ( success )		5368731	2					
ANR	5368957	Condition	success	940:7:28985:28991	5368731	0	True				
ANR	5368958	Identifier	success		5368731	0					
ANR	5368959	CompoundStatement		33:16:1112:1112	5368731	1					
ANR	5368960	ExpressionStatement	"cout << ""OK: Made subview "" << view_name << "" in "" << collection_name << "" with constraint = "" << constraint << "" on line "" << line_number << "".\\n"""	941:4:29000:29167	5368731	0	True				
ANR	5368961	ShiftExpression	"cout << ""OK: Made subview "" << view_name << "" in "" << collection_name << "" with constraint = "" << constraint << "" on line "" << line_number << "".\\n"""		5368731	0		<<			
ANR	5368962	Identifier	cout		5368731	0					
ANR	5368963	ShiftExpression	"""OK: Made subview "" << view_name << "" in "" << collection_name << "" with constraint = "" << constraint << "" on line "" << line_number << "".\\n"""		5368731	1		<<			
ANR	5368964	PrimaryExpression	"""OK: Made subview """		5368731	0					
ANR	5368965	ShiftExpression	"view_name << "" in "" << collection_name << "" with constraint = "" << constraint << "" on line "" << line_number << "".\\n"""		5368731	1		<<			
ANR	5368966	Identifier	view_name		5368731	0					
ANR	5368967	ShiftExpression	""" in "" << collection_name << "" with constraint = "" << constraint << "" on line "" << line_number << "".\\n"""		5368731	1		<<			
ANR	5368968	PrimaryExpression	""" in """		5368731	0					
ANR	5368969	ShiftExpression	"collection_name << "" with constraint = "" << constraint << "" on line "" << line_number << "".\\n"""		5368731	1		<<			
ANR	5368970	Identifier	collection_name		5368731	0					
ANR	5368971	ShiftExpression	""" with constraint = "" << constraint << "" on line "" << line_number << "".\\n"""		5368731	1		<<			
ANR	5368972	PrimaryExpression	""" with constraint = """		5368731	0					
ANR	5368973	ShiftExpression	"constraint << "" on line "" << line_number << "".\\n"""		5368731	1		<<			
ANR	5368974	Identifier	constraint		5368731	0					
ANR	5368975	ShiftExpression	""" on line "" << line_number << "".\\n"""		5368731	1		<<			
ANR	5368976	PrimaryExpression	""" on line """		5368731	0					
ANR	5368977	ShiftExpression	"line_number << "".\\n"""		5368731	1		<<			
ANR	5368978	Identifier	line_number		5368731	0					
ANR	5368979	PrimaryExpression	""".\\n"""		5368731	1					
ANR	5368980	ElseStatement	else		5368731	0					
ANR	5368981	CompoundStatement		39:8:1300:1300	5368731	0					
ANR	5368982	ExpressionStatement	"cout << ""Error: Failed to make subview "" << view_name << "" in "" << collection_name << "" on line "" << line_number << "".\\n"""	947:4:29188:29322	5368731	0	True				
ANR	5368983	ShiftExpression	"cout << ""Error: Failed to make subview "" << view_name << "" in "" << collection_name << "" on line "" << line_number << "".\\n"""		5368731	0		<<			
ANR	5368984	Identifier	cout		5368731	0					
ANR	5368985	ShiftExpression	"""Error: Failed to make subview "" << view_name << "" in "" << collection_name << "" on line "" << line_number << "".\\n"""		5368731	1		<<			
ANR	5368986	PrimaryExpression	"""Error: Failed to make subview """		5368731	0					
ANR	5368987	ShiftExpression	"view_name << "" in "" << collection_name << "" on line "" << line_number << "".\\n"""		5368731	1		<<			
ANR	5368988	Identifier	view_name		5368731	0					
ANR	5368989	ShiftExpression	""" in "" << collection_name << "" on line "" << line_number << "".\\n"""		5368731	1		<<			
ANR	5368990	PrimaryExpression	""" in """		5368731	0					
ANR	5368991	ShiftExpression	"collection_name << "" on line "" << line_number << "".\\n"""		5368731	1		<<			
ANR	5368992	Identifier	collection_name		5368731	0					
ANR	5368993	ShiftExpression	""" on line "" << line_number << "".\\n"""		5368731	1		<<			
ANR	5368994	PrimaryExpression	""" on line """		5368731	0					
ANR	5368995	ShiftExpression	"line_number << "".\\n"""		5368731	1		<<			
ANR	5368996	Identifier	line_number		5368731	0					
ANR	5368997	PrimaryExpression	""".\\n"""		5368731	1					
ANR	5368998	ExpressionStatement	errors -> IncrementErrors ( )	950:4:29328:29353	5368731	1	True				
ANR	5368999	CallExpression	errors -> IncrementErrors ( )		5368731	0					
ANR	5369000	Callee	errors -> IncrementErrors		5368731	0					
ANR	5369001	PtrMemberAccess	errors -> IncrementErrors		5368731	0					
ANR	5369002	Identifier	errors		5368731	0					
ANR	5369003	Identifier	IncrementErrors		5368731	1					
ANR	5369004	ArgumentList			5368731	1					
ANR	5369005	ExpressionStatement	"cout << ""CondorErrMsg: "" << CondorErrMsg << endl"	951:4:29359:29407	5368731	2	True				
ANR	5369006	ShiftExpression	"cout << ""CondorErrMsg: "" << CondorErrMsg << endl"		5368731	0		<<			
ANR	5369007	Identifier	cout		5368731	0					
ANR	5369008	ShiftExpression	"""CondorErrMsg: "" << CondorErrMsg << endl"		5368731	1		<<			
ANR	5369009	PrimaryExpression	"""CondorErrMsg: """		5368731	0					
ANR	5369010	ShiftExpression	CondorErrMsg << endl		5368731	1		<<			
ANR	5369011	Identifier	CondorErrMsg		5368731	0					
ANR	5369012	Identifier	endl		5368731	1					
ANR	5369013	ReturnStatement	return ;	955:1:29422:29428	5368731	6	True				
ANR	5369014	ReturnType	static void		5368731	1					
ANR	5369015	Identifier	process_create_subview		5368731	2					
ANR	5369016	ParameterList	"const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors"		5368731	3					
ANR	5369017	Parameter	const string & line	904:35:27752:27769	5368731	0	True				
ANR	5369018	ParameterType	const string &		5368731	0					
ANR	5369019	Identifier	line		5368731	1					
ANR	5369020	Parameter	int token_start	905:8:27780:27794	5368731	1	True				
ANR	5369021	ParameterType	int		5368731	0					
ANR	5369022	Identifier	token_start		5368731	1					
ANR	5369023	Parameter	int line_number	905:25:27797:27811	5368731	2	True				
ANR	5369024	ParameterType	int		5368731	0					
ANR	5369025	Identifier	line_number		5368731	1					
ANR	5369026	Parameter	const Parameters & parameters	906:8:27823:27850	5368731	3	True				
ANR	5369027	ParameterType	const Parameters &		5368731	0					
ANR	5369028	Identifier	parameters		5368731	1					
ANR	5369029	Parameter	ErrorCount * errors	907:8:27861:27878	5368731	4	True				
ANR	5369030	ParameterType	ErrorCount *		5368731	0					
ANR	5369031	Identifier	errors		5368731	1					
ANR	5369032	CFGEntryNode	ENTRY		5368731		True				
ANR	5369033	CFGExitNode	EXIT		5368731		True				
ANR	5369034	Symbol	& token_start		5368731						
ANR	5369035	Symbol	line		5368731						
ANR	5369036	Symbol	line . substr		5368731						
ANR	5369037	Symbol	line . size		5368731						
ANR	5369038	Symbol	parent_view_name		5368731						
ANR	5369039	Symbol	view_name . compare		5368731						
ANR	5369040	Symbol	parent_view_name . compare		5368731						
ANR	5369041	Symbol	collections		5368731						
ANR	5369042	Symbol	collection -> CreateSubView		5368731						
ANR	5369043	Symbol	line_number		5368731						
ANR	5369044	Symbol	* collection_name		5368731						
ANR	5369045	Symbol	collection_name . compare		5368731						
ANR	5369046	Symbol	view_name		5368731						
ANR	5369047	Symbol	token_start		5368731						
ANR	5369048	Symbol	NULL		5368731						
ANR	5369049	Symbol	* collection		5368731						
ANR	5369050	Symbol	collection		5368731						
ANR	5369051	Symbol	* collections		5368731						
ANR	5369052	Symbol	extract_token		5368731						
ANR	5369053	Symbol	constraint . compare		5368731						
ANR	5369054	Symbol	success		5368731						
ANR	5369055	Symbol	constraint		5368731						
ANR	5369056	Symbol	parameters		5368731						
ANR	5369057	Symbol	errors		5368731						
ANR	5369058	Symbol	collection_name		5368731						
ANR	5369059	Function	process_check_in_view	964:0:29631:32728							
ANR	5369060	FunctionDef	"process_check_in_view (const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors)"		5369059	0					
ANR	5369061	CompoundStatement		968:0:29794:32728	5369059	0					
ANR	5369062	IdentifierDeclStatement	"string collection_name , view_name , classad_name ;"	969:1:29797:29845	5369059	0	True				
ANR	5369063	IdentifierDecl	collection_name		5369059	0					
ANR	5369064	IdentifierDeclType	string		5369059	0					
ANR	5369065	Identifier	collection_name		5369059	1					
ANR	5369066	IdentifierDecl	view_name		5369059	1					
ANR	5369067	IdentifierDeclType	string		5369059	0					
ANR	5369068	Identifier	view_name		5369059	1					
ANR	5369069	IdentifierDecl	classad_name		5369059	2					
ANR	5369070	IdentifierDeclType	string		5369059	0					
ANR	5369071	Identifier	classad_name		5369059	1					
ANR	5369072	IdentifierDeclStatement	"string expect , extra ;"	970:1:29848:29869	5369059	1	True				
ANR	5369073	IdentifierDecl	expect		5369059	0					
ANR	5369074	IdentifierDeclType	string		5369059	0					
ANR	5369075	Identifier	expect		5369059	1					
ANR	5369076	IdentifierDecl	extra		5369059	1					
ANR	5369077	IdentifierDeclType	string		5369059	0					
ANR	5369078	Identifier	extra		5369059	1					
ANR	5369079	ExpressionStatement	"collection_name = extract_token ( & token_start , line )"	972:1:29873:29924	5369059	2	True				
ANR	5369080	AssignmentExpression	"collection_name = extract_token ( & token_start , line )"		5369059	0		=			
ANR	5369081	Identifier	collection_name		5369059	0					
ANR	5369082	CallExpression	"extract_token ( & token_start , line )"		5369059	1					
ANR	5369083	Callee	extract_token		5369059	0					
ANR	5369084	Identifier	extract_token		5369059	0					
ANR	5369085	ArgumentList	& token_start		5369059	1					
ANR	5369086	Argument	& token_start		5369059	0					
ANR	5369087	UnaryOperationExpression	& token_start		5369059	0					
ANR	5369088	UnaryOperator	&		5369059	0					
ANR	5369089	Identifier	token_start		5369059	1					
ANR	5369090	Argument	line		5369059	1					
ANR	5369091	Identifier	line		5369059	0					
ANR	5369092	ExpressionStatement	"view_name = extract_token ( & token_start , line )"	973:1:29927:29972	5369059	3	True				
ANR	5369093	AssignmentExpression	"view_name = extract_token ( & token_start , line )"		5369059	0		=			
ANR	5369094	Identifier	view_name		5369059	0					
ANR	5369095	CallExpression	"extract_token ( & token_start , line )"		5369059	1					
ANR	5369096	Callee	extract_token		5369059	0					
ANR	5369097	Identifier	extract_token		5369059	0					
ANR	5369098	ArgumentList	& token_start		5369059	1					
ANR	5369099	Argument	& token_start		5369059	0					
ANR	5369100	UnaryOperationExpression	& token_start		5369059	0					
ANR	5369101	UnaryOperator	&		5369059	0					
ANR	5369102	Identifier	token_start		5369059	1					
ANR	5369103	Argument	line		5369059	1					
ANR	5369104	Identifier	line		5369059	0					
ANR	5369105	ExpressionStatement	"classad_name = extract_token ( & token_start , line )"	974:1:29975:30023	5369059	4	True				
ANR	5369106	AssignmentExpression	"classad_name = extract_token ( & token_start , line )"		5369059	0		=			
ANR	5369107	Identifier	classad_name		5369059	0					
ANR	5369108	CallExpression	"extract_token ( & token_start , line )"		5369059	1					
ANR	5369109	Callee	extract_token		5369059	0					
ANR	5369110	Identifier	extract_token		5369059	0					
ANR	5369111	ArgumentList	& token_start		5369059	1					
ANR	5369112	Argument	& token_start		5369059	0					
ANR	5369113	UnaryOperationExpression	& token_start		5369059	0					
ANR	5369114	UnaryOperator	&		5369059	0					
ANR	5369115	Identifier	token_start		5369059	1					
ANR	5369116	Argument	line		5369059	1					
ANR	5369117	Identifier	line		5369059	0					
ANR	5369118	ExpressionStatement	"expect = extract_token ( & token_start , line )"	975:1:30026:30068	5369059	5	True				
ANR	5369119	AssignmentExpression	"expect = extract_token ( & token_start , line )"		5369059	0		=			
ANR	5369120	Identifier	expect		5369059	0					
ANR	5369121	CallExpression	"extract_token ( & token_start , line )"		5369059	1					
ANR	5369122	Callee	extract_token		5369059	0					
ANR	5369123	Identifier	extract_token		5369059	0					
ANR	5369124	ArgumentList	& token_start		5369059	1					
ANR	5369125	Argument	& token_start		5369059	0					
ANR	5369126	UnaryOperationExpression	& token_start		5369059	0					
ANR	5369127	UnaryOperator	&		5369059	0					
ANR	5369128	Identifier	token_start		5369059	1					
ANR	5369129	Argument	line		5369059	1					
ANR	5369130	Identifier	line		5369059	0					
ANR	5369131	ExpressionStatement	"extra = extract_token ( & token_start , line )"	976:1:30071:30112	5369059	6	True				
ANR	5369132	AssignmentExpression	"extra = extract_token ( & token_start , line )"		5369059	0		=			
ANR	5369133	Identifier	extra		5369059	0					
ANR	5369134	CallExpression	"extract_token ( & token_start , line )"		5369059	1					
ANR	5369135	Callee	extract_token		5369059	0					
ANR	5369136	Identifier	extract_token		5369059	0					
ANR	5369137	ArgumentList	& token_start		5369059	1					
ANR	5369138	Argument	& token_start		5369059	0					
ANR	5369139	UnaryOperationExpression	& token_start		5369059	0					
ANR	5369140	UnaryOperator	&		5369059	0					
ANR	5369141	Identifier	token_start		5369059	1					
ANR	5369142	Argument	line		5369059	1					
ANR	5369143	Identifier	line		5369059	0					
ANR	5369144	IfStatement	"if ( ! collection_name . compare ( """" ) || ! view_name . compare ( """" ) || ! classad_name . compare ( """" ) || ! expect . compare ( """" ) )"		5369059	7					
ANR	5369145	Condition	"! collection_name . compare ( """" ) || ! view_name . compare ( """" ) || ! classad_name . compare ( """" ) || ! expect . compare ( """" )"	977:5:30119:30226	5369059	0	True				
ANR	5369146	OrExpression	"! collection_name . compare ( """" ) || ! view_name . compare ( """" ) || ! classad_name . compare ( """" ) || ! expect . compare ( """" )"		5369059	0		||			
ANR	5369147	UnaryOperationExpression	"! collection_name . compare ( """" )"		5369059	0					
ANR	5369148	UnaryOperator	!		5369059	0					
ANR	5369149	CallExpression	"collection_name . compare ( """" )"		5369059	1					
ANR	5369150	Callee	collection_name . compare		5369059	0					
ANR	5369151	MemberAccess	collection_name . compare		5369059	0					
ANR	5369152	Identifier	collection_name		5369059	0					
ANR	5369153	Identifier	compare		5369059	1					
ANR	5369154	ArgumentList	""""""		5369059	1					
ANR	5369155	Argument	""""""		5369059	0					
ANR	5369156	PrimaryExpression	""""""		5369059	0					
ANR	5369157	OrExpression	"! view_name . compare ( """" ) || ! classad_name . compare ( """" ) || ! expect . compare ( """" )"		5369059	1		||			
ANR	5369158	UnaryOperationExpression	"! view_name . compare ( """" )"		5369059	0					
ANR	5369159	UnaryOperator	!		5369059	0					
ANR	5369160	CallExpression	"view_name . compare ( """" )"		5369059	1					
ANR	5369161	Callee	view_name . compare		5369059	0					
ANR	5369162	MemberAccess	view_name . compare		5369059	0					
ANR	5369163	Identifier	view_name		5369059	0					
ANR	5369164	Identifier	compare		5369059	1					
ANR	5369165	ArgumentList	""""""		5369059	1					
ANR	5369166	Argument	""""""		5369059	0					
ANR	5369167	PrimaryExpression	""""""		5369059	0					
ANR	5369168	OrExpression	"! classad_name . compare ( """" ) || ! expect . compare ( """" )"		5369059	1		||			
ANR	5369169	UnaryOperationExpression	"! classad_name . compare ( """" )"		5369059	0					
ANR	5369170	UnaryOperator	!		5369059	0					
ANR	5369171	CallExpression	"classad_name . compare ( """" )"		5369059	1					
ANR	5369172	Callee	classad_name . compare		5369059	0					
ANR	5369173	MemberAccess	classad_name . compare		5369059	0					
ANR	5369174	Identifier	classad_name		5369059	0					
ANR	5369175	Identifier	compare		5369059	1					
ANR	5369176	ArgumentList	""""""		5369059	1					
ANR	5369177	Argument	""""""		5369059	0					
ANR	5369178	PrimaryExpression	""""""		5369059	0					
ANR	5369179	UnaryOperationExpression	"! expect . compare ( """" )"		5369059	1					
ANR	5369180	UnaryOperator	!		5369059	0					
ANR	5369181	CallExpression	"expect . compare ( """" )"		5369059	1					
ANR	5369182	Callee	expect . compare		5369059	0					
ANR	5369183	MemberAccess	expect . compare		5369059	0					
ANR	5369184	Identifier	expect		5369059	0					
ANR	5369185	Identifier	compare		5369059	1					
ANR	5369186	ArgumentList	""""""		5369059	1					
ANR	5369187	Argument	""""""		5369059	0					
ANR	5369188	PrimaryExpression	""""""		5369059	0					
ANR	5369189	CompoundStatement		11:55:434:434	5369059	1					
ANR	5369190	ExpressionStatement	"cout << ""Error: Missing information on line "" << line_number << ""."" << endl"	979:2:30233:30313	5369059	0	True				
ANR	5369191	ShiftExpression	"cout << ""Error: Missing information on line "" << line_number << ""."" << endl"		5369059	0		<<			
ANR	5369192	Identifier	cout		5369059	0					
ANR	5369193	ShiftExpression	"""Error: Missing information on line "" << line_number << ""."" << endl"		5369059	1		<<			
ANR	5369194	PrimaryExpression	"""Error: Missing information on line """		5369059	0					
ANR	5369195	ShiftExpression	"line_number << ""."" << endl"		5369059	1		<<			
ANR	5369196	Identifier	line_number		5369059	0					
ANR	5369197	ShiftExpression	"""."" << endl"		5369059	1		<<			
ANR	5369198	PrimaryExpression	"""."""		5369059	0					
ANR	5369199	Identifier	endl		5369059	1					
ANR	5369200	ExpressionStatement	"cout << ""       Format: check-in-subview collection view classad "" << "" [ExpectIn | ExpectNotIn]\\n"""	981:2:30317:30420	5369059	1	True				
ANR	5369201	ShiftExpression	"cout << ""       Format: check-in-subview collection view classad "" << "" [ExpectIn | ExpectNotIn]\\n"""		5369059	0		<<			
ANR	5369202	Identifier	cout		5369059	0					
ANR	5369203	ShiftExpression	"""       Format: check-in-subview collection view classad "" << "" [ExpectIn | ExpectNotIn]\\n"""		5369059	1		<<			
ANR	5369204	PrimaryExpression	"""       Format: check-in-subview collection view classad """		5369059	0					
ANR	5369205	PrimaryExpression	""" [ExpectIn | ExpectNotIn]\\n"""		5369059	1					
ANR	5369206	ExpressionStatement	errors -> IncrementErrors ( )	983:2:30424:30449	5369059	2	True				
ANR	5369207	CallExpression	errors -> IncrementErrors ( )		5369059	0					
ANR	5369208	Callee	errors -> IncrementErrors		5369059	0					
ANR	5369209	PtrMemberAccess	errors -> IncrementErrors		5369059	0					
ANR	5369210	Identifier	errors		5369059	0					
ANR	5369211	Identifier	IncrementErrors		5369059	1					
ANR	5369212	ArgumentList			5369059	1					
ANR	5369213	ElseStatement	else		5369059	0					
ANR	5369214	IfStatement	"if ( expect . compare ( ""ExpectIn"" ) && expect . compare ( ""ExpectNotIn"" ) )"		5369059	0					
ANR	5369215	Condition	"expect . compare ( ""ExpectIn"" ) && expect . compare ( ""ExpectNotIn"" )"	984:12:30463:30521	5369059	0	True				
ANR	5369216	AndExpression	"expect . compare ( ""ExpectIn"" ) && expect . compare ( ""ExpectNotIn"" )"		5369059	0		&&			
ANR	5369217	CallExpression	"expect . compare ( ""ExpectIn"" )"		5369059	0					
ANR	5369218	Callee	expect . compare		5369059	0					
ANR	5369219	MemberAccess	expect . compare		5369059	0					
ANR	5369220	Identifier	expect		5369059	0					
ANR	5369221	Identifier	compare		5369059	1					
ANR	5369222	ArgumentList	"""ExpectIn"""		5369059	1					
ANR	5369223	Argument	"""ExpectIn"""		5369059	0					
ANR	5369224	PrimaryExpression	"""ExpectIn"""		5369059	0					
ANR	5369225	CallExpression	"expect . compare ( ""ExpectNotIn"" )"		5369059	1					
ANR	5369226	Callee	expect . compare		5369059	0					
ANR	5369227	MemberAccess	expect . compare		5369059	0					
ANR	5369228	Identifier	expect		5369059	0					
ANR	5369229	Identifier	compare		5369059	1					
ANR	5369230	ArgumentList	"""ExpectNotIn"""		5369059	1					
ANR	5369231	Argument	"""ExpectNotIn"""		5369059	0					
ANR	5369232	PrimaryExpression	"""ExpectNotIn"""		5369059	0					
ANR	5369233	CompoundStatement		17:73:729:729	5369059	1					
ANR	5369234	ExpressionStatement	"cout << ""Error: Need to specify \\""ExpectIn\\"" or "" << ""\\""ExpectInMatch\\"" on line "" << line_number << "".\\n"""	985:2:30528:30641	5369059	0	True				
ANR	5369235	ShiftExpression	"cout << ""Error: Need to specify \\""ExpectIn\\"" or "" << ""\\""ExpectInMatch\\"" on line "" << line_number << "".\\n"""		5369059	0		<<			
ANR	5369236	Identifier	cout		5369059	0					
ANR	5369237	ShiftExpression	"""Error: Need to specify \\""ExpectIn\\"" or "" << ""\\""ExpectInMatch\\"" on line "" << line_number << "".\\n"""		5369059	1		<<			
ANR	5369238	PrimaryExpression	"""Error: Need to specify \\""ExpectIn\\"" or """		5369059	0					
ANR	5369239	ShiftExpression	"""\\""ExpectInMatch\\"" on line "" << line_number << "".\\n"""		5369059	1		<<			
ANR	5369240	PrimaryExpression	"""\\""ExpectInMatch\\"" on line """		5369059	0					
ANR	5369241	ShiftExpression	"line_number << "".\\n"""		5369059	1		<<			
ANR	5369242	Identifier	line_number		5369059	0					
ANR	5369243	PrimaryExpression	""".\\n"""		5369059	1					
ANR	5369244	ExpressionStatement	errors -> IncrementErrors ( )	988:2:30645:30670	5369059	1	True				
ANR	5369245	CallExpression	errors -> IncrementErrors ( )		5369059	0					
ANR	5369246	Callee	errors -> IncrementErrors		5369059	0					
ANR	5369247	PtrMemberAccess	errors -> IncrementErrors		5369059	0					
ANR	5369248	Identifier	errors		5369059	0					
ANR	5369249	Identifier	IncrementErrors		5369059	1					
ANR	5369250	ArgumentList			5369059	1					
ANR	5369251	ExpressionStatement	"expect = ""ExpectIn"""	989:2:30674:30693	5369059	2	True				
ANR	5369252	AssignmentExpression	"expect = ""ExpectIn"""		5369059	0		=			
ANR	5369253	Identifier	expect		5369059	0					
ANR	5369254	PrimaryExpression	"""ExpectIn"""		5369059	1					
ANR	5369255	ElseStatement	else		5369059	0					
ANR	5369256	IfStatement	"if ( extra . compare ( """" ) )"		5369059	0					
ANR	5369257	Condition	"extra . compare ( """" )"	990:12:30707:30723	5369059	0	True				
ANR	5369258	CallExpression	"extra . compare ( """" )"		5369059	0					
ANR	5369259	Callee	extra . compare		5369059	0					
ANR	5369260	MemberAccess	extra . compare		5369059	0					
ANR	5369261	Identifier	extra		5369059	0					
ANR	5369262	Identifier	compare		5369059	1					
ANR	5369263	ArgumentList	""""""		5369059	1					
ANR	5369264	Argument	""""""		5369059	0					
ANR	5369265	PrimaryExpression	""""""		5369059	0					
ANR	5369266	CompoundStatement		23:31:931:931	5369059	1					
ANR	5369267	ExpressionStatement	"cout << ""Error: Extra information on line "" << line_number << ""."" << endl"	991:2:30730:30808	5369059	0	True				
ANR	5369268	ShiftExpression	"cout << ""Error: Extra information on line "" << line_number << ""."" << endl"		5369059	0		<<			
ANR	5369269	Identifier	cout		5369059	0					
ANR	5369270	ShiftExpression	"""Error: Extra information on line "" << line_number << ""."" << endl"		5369059	1		<<			
ANR	5369271	PrimaryExpression	"""Error: Extra information on line """		5369059	0					
ANR	5369272	ShiftExpression	"line_number << ""."" << endl"		5369059	1		<<			
ANR	5369273	Identifier	line_number		5369059	0					
ANR	5369274	ShiftExpression	"""."" << endl"		5369059	1		<<			
ANR	5369275	PrimaryExpression	"""."""		5369059	0					
ANR	5369276	Identifier	endl		5369059	1					
ANR	5369277	ExpressionStatement	"cout << ""       Format: check-in-subview collection view classad "" << "" [ExpectIn | ExpectNotIn]\\n"""	993:2:30812:30915	5369059	1	True				
ANR	5369278	ShiftExpression	"cout << ""       Format: check-in-subview collection view classad "" << "" [ExpectIn | ExpectNotIn]\\n"""		5369059	0		<<			
ANR	5369279	Identifier	cout		5369059	0					
ANR	5369280	ShiftExpression	"""       Format: check-in-subview collection view classad "" << "" [ExpectIn | ExpectNotIn]\\n"""		5369059	1		<<			
ANR	5369281	PrimaryExpression	"""       Format: check-in-subview collection view classad """		5369059	0					
ANR	5369282	PrimaryExpression	""" [ExpectIn | ExpectNotIn]\\n"""		5369059	1					
ANR	5369283	ExpressionStatement	errors -> IncrementErrors ( )	995:2:30919:30944	5369059	2	True				
ANR	5369284	CallExpression	errors -> IncrementErrors ( )		5369059	0					
ANR	5369285	Callee	errors -> IncrementErrors		5369059	0					
ANR	5369286	PtrMemberAccess	errors -> IncrementErrors		5369059	0					
ANR	5369287	Identifier	errors		5369059	0					
ANR	5369288	Identifier	IncrementErrors		5369059	1					
ANR	5369289	ArgumentList			5369059	1					
ANR	5369290	ElseStatement	else		5369059	0					
ANR	5369291	CompoundStatement		31:2:1197:1224	5369059	0					
ANR	5369292	IdentifierDeclStatement	ClassAdCollection * collection ;	997:2:30958:30988	5369059	0	True				
ANR	5369293	IdentifierDecl	* collection		5369059	0					
ANR	5369294	IdentifierDeclType	ClassAdCollection *		5369059	0					
ANR	5369295	Identifier	collection		5369059	1					
ANR	5369296	IdentifierDeclStatement	ClassAd * classad ;	998:2:30992:31019	5369059	1	True				
ANR	5369297	IdentifierDecl	* classad		5369059	0					
ANR	5369298	IdentifierDeclType	ClassAd *		5369059	0					
ANR	5369299	Identifier	classad		5369059	1					
ANR	5369300	ExpressionStatement	collection = collections [ collection_name ]	1000:2:31024:31065	5369059	2	True				
ANR	5369301	AssignmentExpression	collection = collections [ collection_name ]		5369059	0		=			
ANR	5369302	Identifier	collection		5369059	0					
ANR	5369303	ArrayIndexing	collections [ collection_name ]		5369059	1					
ANR	5369304	Identifier	collections		5369059	0					
ANR	5369305	Identifier	collection_name		5369059	1					
ANR	5369306	ExpressionStatement	classad = classads [ classad_name ]	1001:2:31069:31101	5369059	3	True				
ANR	5369307	AssignmentExpression	classad = classads [ classad_name ]		5369059	0		=			
ANR	5369308	Identifier	classad		5369059	0					
ANR	5369309	ArrayIndexing	classads [ classad_name ]		5369059	1					
ANR	5369310	Identifier	classads		5369059	0					
ANR	5369311	Identifier	classad_name		5369059	1					
ANR	5369312	IfStatement	if ( collection == NULL )		5369059	4					
ANR	5369313	Condition	collection == NULL	1002:6:31109:31126	5369059	0	True				
ANR	5369314	EqualityExpression	collection == NULL		5369059	0		==			
ANR	5369315	Identifier	collection		5369059	0					
ANR	5369316	Identifier	NULL		5369059	1					
ANR	5369317	CompoundStatement		35:26:1334:1334	5369059	1					
ANR	5369318	ExpressionStatement	"cout << ""Error: Unknown collection ("" << collection_name << "") on line "" << line_number << "".\\n"""	1003:3:31134:31236	5369059	0	True				
ANR	5369319	ShiftExpression	"cout << ""Error: Unknown collection ("" << collection_name << "") on line "" << line_number << "".\\n"""		5369059	0		<<			
ANR	5369320	Identifier	cout		5369059	0					
ANR	5369321	ShiftExpression	"""Error: Unknown collection ("" << collection_name << "") on line "" << line_number << "".\\n"""		5369059	1		<<			
ANR	5369322	PrimaryExpression	"""Error: Unknown collection ("""		5369059	0					
ANR	5369323	ShiftExpression	"collection_name << "") on line "" << line_number << "".\\n"""		5369059	1		<<			
ANR	5369324	Identifier	collection_name		5369059	0					
ANR	5369325	ShiftExpression	""") on line "" << line_number << "".\\n"""		5369059	1		<<			
ANR	5369326	PrimaryExpression	""") on line """		5369059	0					
ANR	5369327	ShiftExpression	"line_number << "".\\n"""		5369059	1		<<			
ANR	5369328	Identifier	line_number		5369059	0					
ANR	5369329	PrimaryExpression	""".\\n"""		5369059	1					
ANR	5369330	ExpressionStatement	errors -> IncrementErrors ( )	1005:3:31241:31266	5369059	1	True				
ANR	5369331	CallExpression	errors -> IncrementErrors ( )		5369059	0					
ANR	5369332	Callee	errors -> IncrementErrors		5369059	0					
ANR	5369333	PtrMemberAccess	errors -> IncrementErrors		5369059	0					
ANR	5369334	Identifier	errors		5369059	0					
ANR	5369335	Identifier	IncrementErrors		5369059	1					
ANR	5369336	ArgumentList			5369059	1					
ANR	5369337	ElseStatement	else		5369059	0					
ANR	5369338	IfStatement	if ( classad == NULL )		5369059	0					
ANR	5369339	Condition	classad == NULL	1006:13:31281:31295	5369059	0	True				
ANR	5369340	EqualityExpression	classad == NULL		5369059	0		==			
ANR	5369341	Identifier	classad		5369059	0					
ANR	5369342	Identifier	NULL		5369059	1					
ANR	5369343	CompoundStatement		39:30:1503:1503	5369059	1					
ANR	5369344	ExpressionStatement	"cout << ""Error: Unknown classad ("" << classad_name << "") on line "" << line_number << "".\\n"""	1007:3:31303:31399	5369059	0	True				
ANR	5369345	ShiftExpression	"cout << ""Error: Unknown classad ("" << classad_name << "") on line "" << line_number << "".\\n"""		5369059	0		<<			
ANR	5369346	Identifier	cout		5369059	0					
ANR	5369347	ShiftExpression	"""Error: Unknown classad ("" << classad_name << "") on line "" << line_number << "".\\n"""		5369059	1		<<			
ANR	5369348	PrimaryExpression	"""Error: Unknown classad ("""		5369059	0					
ANR	5369349	ShiftExpression	"classad_name << "") on line "" << line_number << "".\\n"""		5369059	1		<<			
ANR	5369350	Identifier	classad_name		5369059	0					
ANR	5369351	ShiftExpression	""") on line "" << line_number << "".\\n"""		5369059	1		<<			
ANR	5369352	PrimaryExpression	""") on line """		5369059	0					
ANR	5369353	ShiftExpression	"line_number << "".\\n"""		5369059	1		<<			
ANR	5369354	Identifier	line_number		5369059	0					
ANR	5369355	PrimaryExpression	""".\\n"""		5369059	1					
ANR	5369356	ExpressionStatement	errors -> IncrementErrors ( )	1009:3:31404:31429	5369059	1	True				
ANR	5369357	CallExpression	errors -> IncrementErrors ( )		5369059	0					
ANR	5369358	Callee	errors -> IncrementErrors		5369059	0					
ANR	5369359	PtrMemberAccess	errors -> IncrementErrors		5369059	0					
ANR	5369360	Identifier	errors		5369059	0					
ANR	5369361	Identifier	IncrementErrors		5369059	1					
ANR	5369362	ArgumentList			5369059	1					
ANR	5369363	ElseStatement	else		5369059	0					
ANR	5369364	CompoundStatement		45:3:1686:1713	5369059	0					
ANR	5369365	IdentifierDeclStatement	bool have_view ;	1011:3:31445:31476	5369059	0	True				
ANR	5369366	IdentifierDecl	have_view		5369059	0					
ANR	5369367	IdentifierDeclType	bool		5369059	0					
ANR	5369368	Identifier	have_view		5369059	1					
ANR	5369369	IdentifierDeclStatement	LocalCollectionQuery query ;	1012:3:31481:31508	5369059	1	True				
ANR	5369370	IdentifierDecl	query		5369059	0					
ANR	5369371	IdentifierDeclType	LocalCollectionQuery		5369059	0					
ANR	5369372	Identifier	query		5369059	1					
ANR	5369373	ExpressionStatement	query . Bind ( collection )	1014:3:31514:31536	5369059	2	True				
ANR	5369374	CallExpression	query . Bind ( collection )		5369059	0					
ANR	5369375	Callee	query . Bind		5369059	0					
ANR	5369376	MemberAccess	query . Bind		5369059	0					
ANR	5369377	Identifier	query		5369059	0					
ANR	5369378	Identifier	Bind		5369059	1					
ANR	5369379	ArgumentList	collection		5369059	1					
ANR	5369380	Argument	collection		5369059	0					
ANR	5369381	Identifier	collection		5369059	0					
ANR	5369382	ExpressionStatement	"have_view = query . Query ( view_name , NULL )"	1015:3:31541:31581	5369059	3	True				
ANR	5369383	AssignmentExpression	"have_view = query . Query ( view_name , NULL )"		5369059	0		=			
ANR	5369384	Identifier	have_view		5369059	0					
ANR	5369385	CallExpression	"query . Query ( view_name , NULL )"		5369059	1					
ANR	5369386	Callee	query . Query		5369059	0					
ANR	5369387	MemberAccess	query . Query		5369059	0					
ANR	5369388	Identifier	query		5369059	0					
ANR	5369389	Identifier	Query		5369059	1					
ANR	5369390	ArgumentList	view_name		5369059	1					
ANR	5369391	Argument	view_name		5369059	0					
ANR	5369392	Identifier	view_name		5369059	0					
ANR	5369393	Argument	NULL		5369059	1					
ANR	5369394	Identifier	NULL		5369059	0					
ANR	5369395	IfStatement	if ( ! have_view )		5369059	4					
ANR	5369396	Condition	! have_view	1016:7:31590:31599	5369059	0	True				
ANR	5369397	UnaryOperationExpression	! have_view		5369059	0					
ANR	5369398	UnaryOperator	!		5369059	0					
ANR	5369399	Identifier	have_view		5369059	1					
ANR	5369400	CompoundStatement		49:19:1807:1807	5369059	1					
ANR	5369401	ExpressionStatement	"cout << ""Error: Unknown view ("" << view_name << "") on line "" << line_number << "".\\n"""	1017:4:31608:31699	5369059	0	True				
ANR	5369402	ShiftExpression	"cout << ""Error: Unknown view ("" << view_name << "") on line "" << line_number << "".\\n"""		5369059	0		<<			
ANR	5369403	Identifier	cout		5369059	0					
ANR	5369404	ShiftExpression	"""Error: Unknown view ("" << view_name << "") on line "" << line_number << "".\\n"""		5369059	1		<<			
ANR	5369405	PrimaryExpression	"""Error: Unknown view ("""		5369059	0					
ANR	5369406	ShiftExpression	"view_name << "") on line "" << line_number << "".\\n"""		5369059	1		<<			
ANR	5369407	Identifier	view_name		5369059	0					
ANR	5369408	ShiftExpression	""") on line "" << line_number << "".\\n"""		5369059	1		<<			
ANR	5369409	PrimaryExpression	""") on line """		5369059	0					
ANR	5369410	ShiftExpression	"line_number << "".\\n"""		5369059	1		<<			
ANR	5369411	Identifier	line_number		5369059	0					
ANR	5369412	PrimaryExpression	""".\\n"""		5369059	1					
ANR	5369413	ExpressionStatement	errors -> IncrementErrors ( )	1019:4:31705:31730	5369059	1	True				
ANR	5369414	CallExpression	errors -> IncrementErrors ( )		5369059	0					
ANR	5369415	Callee	errors -> IncrementErrors		5369059	0					
ANR	5369416	PtrMemberAccess	errors -> IncrementErrors		5369059	0					
ANR	5369417	Identifier	errors		5369059	0					
ANR	5369418	Identifier	IncrementErrors		5369059	1					
ANR	5369419	ArgumentList			5369059	1					
ANR	5369420	ElseStatement	else		5369059	0					
ANR	5369421	CompoundStatement		56:4:1979:1997	5369059	0					
ANR	5369422	IdentifierDeclStatement	bool have_classad ;	1022:4:31751:31768	5369059	0	True				
ANR	5369423	IdentifierDecl	have_classad		5369059	0					
ANR	5369424	IdentifierDeclType	bool		5369059	0					
ANR	5369425	Identifier	have_classad		5369059	1					
ANR	5369426	IdentifierDeclStatement	string classad_key ;	1023:4:31774:31792	5369059	1	True				
ANR	5369427	IdentifierDecl	classad_key		5369059	0					
ANR	5369428	IdentifierDeclType	string		5369059	0					
ANR	5369429	Identifier	classad_key		5369059	1					
ANR	5369430	ExpressionStatement	have_classad = false	1025:4:31799:31819	5369059	2	True				
ANR	5369431	AssignmentExpression	have_classad = false		5369059	0		=			
ANR	5369432	Identifier	have_classad		5369059	0					
ANR	5369433	Identifier	false		5369059	1					
ANR	5369434	ForStatement	"for ( query . ToFirst ( ) , query . Current ( classad_key ) ; ! query . IsAfterLast ( ) ; query . Next ( classad_key ) )"		5369059	3					
ANR	5369435	ForInit	"query . ToFirst ( ) , query . Current ( classad_key ) ;"	1026:9:31830:31873	5369059	0	True				
ANR	5369436	Expression	"query . ToFirst ( ) , query . Current ( classad_key )"		5369059	0					
ANR	5369437	CallExpression	query . ToFirst ( )		5369059	0					
ANR	5369438	Callee	query . ToFirst		5369059	0					
ANR	5369439	MemberAccess	query . ToFirst		5369059	0					
ANR	5369440	Identifier	query		5369059	0					
ANR	5369441	Identifier	ToFirst		5369059	1					
ANR	5369442	ArgumentList			5369059	1					
ANR	5369443	CallExpression	query . Current ( classad_key )		5369059	1					
ANR	5369444	Callee	query . Current		5369059	0					
ANR	5369445	MemberAccess	query . Current		5369059	0					
ANR	5369446	Identifier	query		5369059	0					
ANR	5369447	Identifier	Current		5369059	1					
ANR	5369448	ArgumentList	classad_key		5369059	1					
ANR	5369449	Argument	classad_key		5369059	0					
ANR	5369450	Identifier	classad_key		5369059	0					
ANR	5369451	Condition	! query . IsAfterLast ( )	1027:6:31882:31901	5369059	1	True				
ANR	5369452	UnaryOperationExpression	! query . IsAfterLast ( )		5369059	0					
ANR	5369453	UnaryOperator	!		5369059	0					
ANR	5369454	CallExpression	query . IsAfterLast ( )		5369059	1					
ANR	5369455	Callee	query . IsAfterLast		5369059	0					
ANR	5369456	MemberAccess	query . IsAfterLast		5369059	0					
ANR	5369457	Identifier	query		5369059	0					
ANR	5369458	Identifier	IsAfterLast		5369059	1					
ANR	5369459	ArgumentList			5369059	1					
ANR	5369460	CallExpression	query . Next ( classad_key )	1027:28:31904:31926	5369059	2	True				
ANR	5369461	Callee	query . Next		5369059	0					
ANR	5369462	MemberAccess	query . Next		5369059	0					
ANR	5369463	Identifier	query		5369059	0					
ANR	5369464	Identifier	Next		5369059	1					
ANR	5369465	ArgumentList	classad_key		5369059	1					
ANR	5369466	Argument	classad_key		5369059	0					
ANR	5369467	Identifier	classad_key		5369059	0					
ANR	5369468	CompoundStatement		60:53:2134:2134	5369059	3					
ANR	5369469	IfStatement	if ( ! classad_key . compare ( classad_name ) )		5369059	0					
ANR	5369470	Condition	! classad_key . compare ( classad_name )	1028:9:31940:31973	5369059	0	True				
ANR	5369471	UnaryOperationExpression	! classad_key . compare ( classad_name )		5369059	0					
ANR	5369472	UnaryOperator	!		5369059	0					
ANR	5369473	CallExpression	classad_key . compare ( classad_name )		5369059	1					
ANR	5369474	Callee	classad_key . compare		5369059	0					
ANR	5369475	MemberAccess	classad_key . compare		5369059	0					
ANR	5369476	Identifier	classad_key		5369059	0					
ANR	5369477	Identifier	compare		5369059	1					
ANR	5369478	ArgumentList	classad_name		5369059	1					
ANR	5369479	Argument	classad_name		5369059	0					
ANR	5369480	Identifier	classad_name		5369059	0					
ANR	5369481	CompoundStatement		61:45:2181:2181	5369059	1					
ANR	5369482	ExpressionStatement	have_classad = true	1029:6:31984:32003	5369059	0	True				
ANR	5369483	AssignmentExpression	have_classad = true		5369059	0		=			
ANR	5369484	Identifier	have_classad		5369059	0					
ANR	5369485	Identifier	true		5369059	1					
ANR	5369486	BreakStatement	break ;	1030:6:32011:32016	5369059	1	True				
ANR	5369487	IfStatement	"if ( ! expect . compare ( ""ExpectIn"" ) )"		5369059	4					
ANR	5369488	Condition	"! expect . compare ( ""ExpectIn"" )"	1033:8:32039:32065	5369059	0	True				
ANR	5369489	UnaryOperationExpression	"! expect . compare ( ""ExpectIn"" )"		5369059	0					
ANR	5369490	UnaryOperator	!		5369059	0					
ANR	5369491	CallExpression	"expect . compare ( ""ExpectIn"" )"		5369059	1					
ANR	5369492	Callee	expect . compare		5369059	0					
ANR	5369493	MemberAccess	expect . compare		5369059	0					
ANR	5369494	Identifier	expect		5369059	0					
ANR	5369495	Identifier	compare		5369059	1					
ANR	5369496	ArgumentList	"""ExpectIn"""		5369059	1					
ANR	5369497	Argument	"""ExpectIn"""		5369059	0					
ANR	5369498	PrimaryExpression	"""ExpectIn"""		5369059	0					
ANR	5369499	CompoundStatement		66:37:2273:2273	5369059	1					
ANR	5369500	IfStatement	if ( have_classad )		5369059	0					
ANR	5369501	Condition	have_classad	1034:9:32079:32090	5369059	0	True				
ANR	5369502	Identifier	have_classad		5369059	0					
ANR	5369503	CompoundStatement		67:23:2298:2298	5369059	1					
ANR	5369504	ExpressionStatement	"cout << ""OK: "" << classad_name << "" in "" << view_name << "" on line "" << line_number << "".\\n"""	1035:6:32101:32202	5369059	0	True				
ANR	5369505	ShiftExpression	"cout << ""OK: "" << classad_name << "" in "" << view_name << "" on line "" << line_number << "".\\n"""		5369059	0		<<			
ANR	5369506	Identifier	cout		5369059	0					
ANR	5369507	ShiftExpression	"""OK: "" << classad_name << "" in "" << view_name << "" on line "" << line_number << "".\\n"""		5369059	1		<<			
ANR	5369508	PrimaryExpression	"""OK: """		5369059	0					
ANR	5369509	ShiftExpression	"classad_name << "" in "" << view_name << "" on line "" << line_number << "".\\n"""		5369059	1		<<			
ANR	5369510	Identifier	classad_name		5369059	0					
ANR	5369511	ShiftExpression	""" in "" << view_name << "" on line "" << line_number << "".\\n"""		5369059	1		<<			
ANR	5369512	PrimaryExpression	""" in """		5369059	0					
ANR	5369513	ShiftExpression	"view_name << "" on line "" << line_number << "".\\n"""		5369059	1		<<			
ANR	5369514	Identifier	view_name		5369059	0					
ANR	5369515	ShiftExpression	""" on line "" << line_number << "".\\n"""		5369059	1		<<			
ANR	5369516	PrimaryExpression	""" on line """		5369059	0					
ANR	5369517	ShiftExpression	"line_number << "".\\n"""		5369059	1		<<			
ANR	5369518	Identifier	line_number		5369059	0					
ANR	5369519	PrimaryExpression	""".\\n"""		5369059	1					
ANR	5369520	ElseStatement	else		5369059	0					
ANR	5369521	CompoundStatement		70:12:2421:2421	5369059	0					
ANR	5369522	ExpressionStatement	"cout << ""Error: "" << classad_name << "" is not in "" << view_name << "" on line "" << line_number << "".\\n"""	1038:6:32224:32335	5369059	0	True				
ANR	5369523	ShiftExpression	"cout << ""Error: "" << classad_name << "" is not in "" << view_name << "" on line "" << line_number << "".\\n"""		5369059	0		<<			
ANR	5369524	Identifier	cout		5369059	0					
ANR	5369525	ShiftExpression	"""Error: "" << classad_name << "" is not in "" << view_name << "" on line "" << line_number << "".\\n"""		5369059	1		<<			
ANR	5369526	PrimaryExpression	"""Error: """		5369059	0					
ANR	5369527	ShiftExpression	"classad_name << "" is not in "" << view_name << "" on line "" << line_number << "".\\n"""		5369059	1		<<			
ANR	5369528	Identifier	classad_name		5369059	0					
ANR	5369529	ShiftExpression	""" is not in "" << view_name << "" on line "" << line_number << "".\\n"""		5369059	1		<<			
ANR	5369530	PrimaryExpression	""" is not in """		5369059	0					
ANR	5369531	ShiftExpression	"view_name << "" on line "" << line_number << "".\\n"""		5369059	1		<<			
ANR	5369532	Identifier	view_name		5369059	0					
ANR	5369533	ShiftExpression	""" on line "" << line_number << "".\\n"""		5369059	1		<<			
ANR	5369534	PrimaryExpression	""" on line """		5369059	0					
ANR	5369535	ShiftExpression	"line_number << "".\\n"""		5369059	1		<<			
ANR	5369536	Identifier	line_number		5369059	0					
ANR	5369537	PrimaryExpression	""".\\n"""		5369059	1					
ANR	5369538	ExpressionStatement	errors -> IncrementErrors ( )	1040:6:32343:32368	5369059	1	True				
ANR	5369539	CallExpression	errors -> IncrementErrors ( )		5369059	0					
ANR	5369540	Callee	errors -> IncrementErrors		5369059	0					
ANR	5369541	PtrMemberAccess	errors -> IncrementErrors		5369059	0					
ANR	5369542	Identifier	errors		5369059	0					
ANR	5369543	Identifier	IncrementErrors		5369059	1					
ANR	5369544	ArgumentList			5369059	1					
ANR	5369545	ElseStatement	else		5369059	0					
ANR	5369546	CompoundStatement		76:9:2597:2597	5369059	0					
ANR	5369547	IfStatement	if ( have_classad )		5369059	0					
ANR	5369548	Condition	have_classad	1044:9:32403:32414	5369059	0	True				
ANR	5369549	Identifier	have_classad		5369059	0					
ANR	5369550	CompoundStatement		77:23:2622:2622	5369059	1					
ANR	5369551	ExpressionStatement	"cout << ""Error: "" << classad_name << "" in "" << view_name << "" on line "" << line_number << "".\\n"""	1045:6:32425:32529	5369059	0	True				
ANR	5369552	ShiftExpression	"cout << ""Error: "" << classad_name << "" in "" << view_name << "" on line "" << line_number << "".\\n"""		5369059	0		<<			
ANR	5369553	Identifier	cout		5369059	0					
ANR	5369554	ShiftExpression	"""Error: "" << classad_name << "" in "" << view_name << "" on line "" << line_number << "".\\n"""		5369059	1		<<			
ANR	5369555	PrimaryExpression	"""Error: """		5369059	0					
ANR	5369556	ShiftExpression	"classad_name << "" in "" << view_name << "" on line "" << line_number << "".\\n"""		5369059	1		<<			
ANR	5369557	Identifier	classad_name		5369059	0					
ANR	5369558	ShiftExpression	""" in "" << view_name << "" on line "" << line_number << "".\\n"""		5369059	1		<<			
ANR	5369559	PrimaryExpression	""" in """		5369059	0					
ANR	5369560	ShiftExpression	"view_name << "" on line "" << line_number << "".\\n"""		5369059	1		<<			
ANR	5369561	Identifier	view_name		5369059	0					
ANR	5369562	ShiftExpression	""" on line "" << line_number << "".\\n"""		5369059	1		<<			
ANR	5369563	PrimaryExpression	""" on line """		5369059	0					
ANR	5369564	ShiftExpression	"line_number << "".\\n"""		5369059	1		<<			
ANR	5369565	Identifier	line_number		5369059	0					
ANR	5369566	PrimaryExpression	""".\\n"""		5369059	1					
ANR	5369567	ExpressionStatement	errors -> IncrementErrors ( )	1047:6:32537:32562	5369059	1	True				
ANR	5369568	CallExpression	errors -> IncrementErrors ( )		5369059	0					
ANR	5369569	Callee	errors -> IncrementErrors		5369059	0					
ANR	5369570	PtrMemberAccess	errors -> IncrementErrors		5369059	0					
ANR	5369571	Identifier	errors		5369059	0					
ANR	5369572	Identifier	IncrementErrors		5369059	1					
ANR	5369573	ArgumentList			5369059	1					
ANR	5369574	ElseStatement	else		5369059	0					
ANR	5369575	CompoundStatement		81:12:2781:2781	5369059	0					
ANR	5369576	ExpressionStatement	"cout << ""OK: "" << classad_name << "" is not in "" << view_name << "" on line "" << line_number << "".\\n"""	1049:6:32584:32692	5369059	0	True				
ANR	5369577	ShiftExpression	"cout << ""OK: "" << classad_name << "" is not in "" << view_name << "" on line "" << line_number << "".\\n"""		5369059	0		<<			
ANR	5369578	Identifier	cout		5369059	0					
ANR	5369579	ShiftExpression	"""OK: "" << classad_name << "" is not in "" << view_name << "" on line "" << line_number << "".\\n"""		5369059	1		<<			
ANR	5369580	PrimaryExpression	"""OK: """		5369059	0					
ANR	5369581	ShiftExpression	"classad_name << "" is not in "" << view_name << "" on line "" << line_number << "".\\n"""		5369059	1		<<			
ANR	5369582	Identifier	classad_name		5369059	0					
ANR	5369583	ShiftExpression	""" is not in "" << view_name << "" on line "" << line_number << "".\\n"""		5369059	1		<<			
ANR	5369584	PrimaryExpression	""" is not in """		5369059	0					
ANR	5369585	ShiftExpression	"view_name << "" on line "" << line_number << "".\\n"""		5369059	1		<<			
ANR	5369586	Identifier	view_name		5369059	0					
ANR	5369587	ShiftExpression	""" on line "" << line_number << "".\\n"""		5369059	1		<<			
ANR	5369588	PrimaryExpression	""" on line """		5369059	0					
ANR	5369589	ShiftExpression	"line_number << "".\\n"""		5369059	1		<<			
ANR	5369590	Identifier	line_number		5369059	0					
ANR	5369591	PrimaryExpression	""".\\n"""		5369059	1					
ANR	5369592	ReturnStatement	return ;	1056:1:32720:32726	5369059	8	True				
ANR	5369593	ReturnType	static void		5369059	1					
ANR	5369594	Identifier	process_check_in_view		5369059	2					
ANR	5369595	ParameterList	"const string & line , int token_start , int line_number , const Parameters & parameters , ErrorCount * errors"		5369059	3					
ANR	5369596	Parameter	const string & line	964:34:29665:29682	5369059	0	True				
ANR	5369597	ParameterType	const string &		5369059	0					
ANR	5369598	Identifier	line		5369059	1					
ANR	5369599	Parameter	int token_start	965:8:29693:29707	5369059	1	True				
ANR	5369600	ParameterType	int		5369059	0					
ANR	5369601	Identifier	token_start		5369059	1					
ANR	5369602	Parameter	int line_number	965:25:29710:29724	5369059	2	True				
ANR	5369603	ParameterType	int		5369059	0					
ANR	5369604	Identifier	line_number		5369059	1					
ANR	5369605	Parameter	const Parameters & parameters	966:8:29736:29763	5369059	3	True				
ANR	5369606	ParameterType	const Parameters &		5369059	0					
ANR	5369607	Identifier	parameters		5369059	1					
ANR	5369608	Parameter	ErrorCount * errors	967:8:29774:29791	5369059	4	True				
ANR	5369609	ParameterType	ErrorCount *		5369059	0					
ANR	5369610	Identifier	errors		5369059	1					
ANR	5369611	CFGEntryNode	ENTRY		5369059		True				
ANR	5369612	CFGExitNode	EXIT		5369059		True				
ANR	5369613	Symbol	& token_start		5369059						
ANR	5369614	Symbol	line		5369059						
ANR	5369615	Symbol	query . Query		5369059						
ANR	5369616	Symbol	view_name . compare		5369059						
ANR	5369617	Symbol	* classads		5369059						
ANR	5369618	Symbol	extra . compare		5369059						
ANR	5369619	Symbol	collections		5369059						
ANR	5369620	Symbol	have_view		5369059						
ANR	5369621	Symbol	line_number		5369059						
ANR	5369622	Symbol	expect . compare		5369059						
ANR	5369623	Symbol	extra		5369059						
ANR	5369624	Symbol	classad_name		5369059						
ANR	5369625	Symbol	have_classad		5369059						
ANR	5369626	Symbol	classad_key		5369059						
ANR	5369627	Symbol	* collection_name		5369059						
ANR	5369628	Symbol	classad_key . compare		5369059						
ANR	5369629	Symbol	collection_name . compare		5369059						
ANR	5369630	Symbol	view_name		5369059						
ANR	5369631	Symbol	* classad_name		5369059						
ANR	5369632	Symbol	token_start		5369059						
ANR	5369633	Symbol	NULL		5369059						
ANR	5369634	Symbol	query		5369059						
ANR	5369635	Symbol	false		5369059						
ANR	5369636	Symbol	collection		5369059						
ANR	5369637	Symbol	* collections		5369059						
ANR	5369638	Symbol	extract_token		5369059						
ANR	5369639	Symbol	expect		5369059						
ANR	5369640	Symbol	query . IsAfterLast		5369059						
ANR	5369641	Symbol	true		5369059						
ANR	5369642	Symbol	classad		5369059						
ANR	5369643	Symbol	classad_name . compare		5369059						
ANR	5369644	Symbol	parameters		5369059						
ANR	5369645	Symbol	classads		5369059						
ANR	5369646	Symbol	errors		5369059						
ANR	5369647	Symbol	collection_name		5369059						
ANR	5369648	Function	extract_token	1069:0:33242:34262							
ANR	5369649	FunctionDef	"extract_token (int * token_start , const string & line)"		5369648	0					
ANR	5369650	CompoundStatement		1070:0:33308:34262	5369648	0					
ANR	5369651	IdentifierDeclStatement	int token_end ;	1071:1:33311:33324	5369648	0	True				
ANR	5369652	IdentifierDecl	token_end		5369648	0					
ANR	5369653	IdentifierDeclType	int		5369648	0					
ANR	5369654	Identifier	token_end		5369648	1					
ANR	5369655	IdentifierDeclStatement	bool in_quote ;	1072:1:33327:33340	5369648	1	True				
ANR	5369656	IdentifierDecl	in_quote		5369648	0					
ANR	5369657	IdentifierDeclType	bool		5369648	0					
ANR	5369658	Identifier	in_quote		5369648	1					
ANR	5369659	IdentifierDeclStatement	string token ;	1073:1:33343:33355	5369648	2	True				
ANR	5369660	IdentifierDecl	token		5369648	0					
ANR	5369661	IdentifierDeclType	string		5369648	0					
ANR	5369662	Identifier	token		5369648	1					
ANR	5369663	IfStatement	if ( ( unsigned int ) * token_start >= line . size ( ) )		5369648	3					
ANR	5369664	Condition	( unsigned int ) * token_start >= line . size ( )	1075:5:33363:33404	5369648	0	True				
ANR	5369665	RelationalExpression	( unsigned int ) * token_start >= line . size ( )		5369648	0		>=			
ANR	5369666	CastExpression	( unsigned int ) * token_start		5369648	0					
ANR	5369667	CastTarget	unsigned int		5369648	0					
ANR	5369668	UnaryOperationExpression	* token_start		5369648	1					
ANR	5369669	UnaryOperator	*		5369648	0					
ANR	5369670	Identifier	token_start		5369648	1					
ANR	5369671	CallExpression	line . size ( )		5369648	1					
ANR	5369672	Callee	line . size		5369648	0					
ANR	5369673	MemberAccess	line . size		5369648	0					
ANR	5369674	Identifier	line		5369648	0					
ANR	5369675	Identifier	size		5369648	1					
ANR	5369676	ArgumentList			5369648	1					
ANR	5369677	CompoundStatement		6:49:98:98	5369648	1					
ANR	5369678	ExpressionStatement	"token = """""	1076:2:33411:33421	5369648	0	True				
ANR	5369679	AssignmentExpression	"token = """""		5369648	0		=			
ANR	5369680	Identifier	token		5369648	0					
ANR	5369681	PrimaryExpression	""""""		5369648	1					
ANR	5369682	ElseStatement	else		5369648	0					
ANR	5369683	CompoundStatement		9:6:123:123	5369648	0					
ANR	5369684	WhileStatement	while ( isspace ( line [ * token_start ] ) )		5369648	0					
ANR	5369685	Condition	isspace ( line [ * token_start ] )	1080:9:33471:33497	5369648	0	True				
ANR	5369686	CallExpression	isspace ( line [ * token_start ] )		5369648	0					
ANR	5369687	Callee	isspace		5369648	0					
ANR	5369688	Identifier	isspace		5369648	0					
ANR	5369689	ArgumentList	line [ * token_start ]		5369648	1					
ANR	5369690	Argument	line [ * token_start ]		5369648	0					
ANR	5369691	ArrayIndexing	line [ * token_start ]		5369648	0					
ANR	5369692	Identifier	line		5369648	0					
ANR	5369693	UnaryOperationExpression	* token_start		5369648	1					
ANR	5369694	UnaryOperator	*		5369648	0					
ANR	5369695	Identifier	token_start		5369648	1					
ANR	5369696	CompoundStatement		11:38:191:191	5369648	1					
ANR	5369697	ExpressionStatement	( * token_start ) ++	1081:3:33505:33521	5369648	0	True				
ANR	5369698	PostIncDecOperationExpression	( * token_start ) ++		5369648	0					
ANR	5369699	UnaryOperationExpression	* token_start		5369648	0					
ANR	5369700	UnaryOperator	*		5369648	0					
ANR	5369701	Identifier	token_start		5369648	1					
ANR	5369702	IncDec	++		5369648	1					
ANR	5369703	ExpressionStatement	token_end = * token_start	1083:2:33529:33553	5369648	1	True				
ANR	5369704	AssignmentExpression	token_end = * token_start		5369648	0		=			
ANR	5369705	Identifier	token_end		5369648	0					
ANR	5369706	UnaryOperationExpression	* token_start		5369648	1					
ANR	5369707	UnaryOperator	*		5369648	0					
ANR	5369708	Identifier	token_start		5369648	1					
ANR	5369709	ExpressionStatement	in_quote = false	1084:2:33557:33573	5369648	2	True				
ANR	5369710	AssignmentExpression	in_quote = false		5369648	0		=			
ANR	5369711	Identifier	in_quote		5369648	0					
ANR	5369712	Identifier	false		5369648	1					
ANR	5369713	WhileStatement	while ( ( ! isspace ( line [ token_end ] ) || in_quote ) && line [ token_end ] != 0 )		5369648	3					
ANR	5369714	Condition	( ! isspace ( line [ token_end ] ) || in_quote ) && line [ token_end ] != 0	1085:9:33584:33646	5369648	0	True				
ANR	5369715	AndExpression	( ! isspace ( line [ token_end ] ) || in_quote ) && line [ token_end ] != 0		5369648	0		&&			
ANR	5369716	OrExpression	! isspace ( line [ token_end ] ) || in_quote		5369648	0		||			
ANR	5369717	UnaryOperationExpression	! isspace ( line [ token_end ] )		5369648	0					
ANR	5369718	UnaryOperator	!		5369648	0					
ANR	5369719	CallExpression	isspace ( line [ token_end ] )		5369648	1					
ANR	5369720	Callee	isspace		5369648	0					
ANR	5369721	Identifier	isspace		5369648	0					
ANR	5369722	ArgumentList	line [ token_end ]		5369648	1					
ANR	5369723	Argument	line [ token_end ]		5369648	0					
ANR	5369724	ArrayIndexing	line [ token_end ]		5369648	0					
ANR	5369725	Identifier	line		5369648	0					
ANR	5369726	Identifier	token_end		5369648	1					
ANR	5369727	Identifier	in_quote		5369648	1					
ANR	5369728	EqualityExpression	line [ token_end ] != 0		5369648	1		!=			
ANR	5369729	ArrayIndexing	line [ token_end ]		5369648	0					
ANR	5369730	Identifier	line		5369648	0					
ANR	5369731	Identifier	token_end		5369648	1					
ANR	5369732	PrimaryExpression	0		5369648	1					
ANR	5369733	CompoundStatement		16:74:340:340	5369648	1					
ANR	5369734	IfStatement	"if ( line [ token_end ] == '\\""' || line [ token_end ] == '\\'' )"		5369648	0					
ANR	5369735	Condition	"line [ token_end ] == '\\""' || line [ token_end ] == '\\''"	1086:7:33658:33707	5369648	0	True				
ANR	5369736	OrExpression	"line [ token_end ] == '\\""' || line [ token_end ] == '\\''"		5369648	0		||			
ANR	5369737	EqualityExpression	"line [ token_end ] == '\\""'"		5369648	0		==			
ANR	5369738	ArrayIndexing	line [ token_end ]		5369648	0					
ANR	5369739	Identifier	line		5369648	0					
ANR	5369740	Identifier	token_end		5369648	1					
ANR	5369741	PrimaryExpression	"'\\""'"		5369648	1					
ANR	5369742	EqualityExpression	line [ token_end ] == '\\''		5369648	1		==			
ANR	5369743	ArrayIndexing	line [ token_end ]		5369648	0					
ANR	5369744	Identifier	line		5369648	0					
ANR	5369745	Identifier	token_end		5369648	1					
ANR	5369746	PrimaryExpression	'\\''		5369648	1					
ANR	5369747	CompoundStatement		17:59:401:401	5369648	1					
ANR	5369748	IfStatement	if ( token_end == * token_start )		5369648	0					
ANR	5369749	Condition	token_end == * token_start	1087:8:33720:33744	5369648	0	True				
ANR	5369750	EqualityExpression	token_end == * token_start		5369648	0		==			
ANR	5369751	Identifier	token_end		5369648	0					
ANR	5369752	UnaryOperationExpression	* token_start		5369648	1					
ANR	5369753	UnaryOperator	*		5369648	0					
ANR	5369754	Identifier	token_start		5369648	1					
ANR	5369755	CompoundStatement		18:35:438:438	5369648	1					
ANR	5369756	ExpressionStatement	in_quote = true	1088:5:33754:33769	5369648	0	True				
ANR	5369757	AssignmentExpression	in_quote = true		5369648	0		=			
ANR	5369758	Identifier	in_quote		5369648	0					
ANR	5369759	Identifier	true		5369648	1					
ANR	5369760	ElseStatement	else		5369648	0					
ANR	5369761	CompoundStatement		21:9:477:477	5369648	0					
ANR	5369762	ExpressionStatement	in_quote = ! in_quote	1091:5:33793:33813	5369648	0	True				
ANR	5369763	AssignmentExpression	in_quote = ! in_quote		5369648	0		=			
ANR	5369764	Identifier	in_quote		5369648	0					
ANR	5369765	UnaryOperationExpression	! in_quote		5369648	1					
ANR	5369766	UnaryOperator	!		5369648	0					
ANR	5369767	Identifier	in_quote		5369648	1					
ANR	5369768	ExpressionStatement	token_end ++	1092:5:33820:33831	5369648	1	True				
ANR	5369769	PostIncDecOperationExpression	token_end ++		5369648	0					
ANR	5369770	Identifier	token_end		5369648	0					
ANR	5369771	IncDec	++		5369648	1					
ANR	5369772	BreakStatement	break ;	1093:5:33838:33843	5369648	2	True				
ANR	5369773	IfStatement	"if ( line [ token_end ] == '\\\\' && ( line [ token_end + 1 ] == '\\""' || line [ token_end + 1 ] == '\\'' ) )"		5369648	1					
ANR	5369774	Condition	"line [ token_end ] == '\\\\' && ( line [ token_end + 1 ] == '\\""' || line [ token_end + 1 ] == '\\'' )"	1097:7:33943:34030	5369648	0	True				
ANR	5369775	AndExpression	"line [ token_end ] == '\\\\' && ( line [ token_end + 1 ] == '\\""' || line [ token_end + 1 ] == '\\'' )"		5369648	0		&&			
ANR	5369776	EqualityExpression	line [ token_end ] == '\\\\'		5369648	0		==			
ANR	5369777	ArrayIndexing	line [ token_end ]		5369648	0					
ANR	5369778	Identifier	line		5369648	0					
ANR	5369779	Identifier	token_end		5369648	1					
ANR	5369780	PrimaryExpression	'\\\\'		5369648	1					
ANR	5369781	OrExpression	"line [ token_end + 1 ] == '\\""' || line [ token_end + 1 ] == '\\''"		5369648	1		||			
ANR	5369782	EqualityExpression	"line [ token_end + 1 ] == '\\""'"		5369648	0		==			
ANR	5369783	ArrayIndexing	line [ token_end + 1 ]		5369648	0					
ANR	5369784	Identifier	line		5369648	0					
ANR	5369785	AdditiveExpression	token_end + 1		5369648	1		+			
ANR	5369786	Identifier	token_end		5369648	0					
ANR	5369787	PrimaryExpression	1		5369648	1					
ANR	5369788	PrimaryExpression	"'\\""'"		5369648	1					
ANR	5369789	EqualityExpression	line [ token_end + 1 ] == '\\''		5369648	1		==			
ANR	5369790	ArrayIndexing	line [ token_end + 1 ]		5369648	0					
ANR	5369791	Identifier	line		5369648	0					
ANR	5369792	AdditiveExpression	token_end + 1		5369648	1		+			
ANR	5369793	Identifier	token_end		5369648	0					
ANR	5369794	PrimaryExpression	1		5369648	1					
ANR	5369795	PrimaryExpression	'\\''		5369648	1					
ANR	5369796	CompoundStatement		29:65:724:724	5369648	1					
ANR	5369797	ExpressionStatement	token_end ++	1099:4:34039:34050	5369648	0	True				
ANR	5369798	PostIncDecOperationExpression	token_end ++		5369648	0					
ANR	5369799	Identifier	token_end		5369648	0					
ANR	5369800	IncDec	++		5369648	1					
ANR	5369801	ExpressionStatement	token_end ++	1101:3:34060:34071	5369648	2	True				
ANR	5369802	PostIncDecOperationExpression	token_end ++		5369648	0					
ANR	5369803	Identifier	token_end		5369648	0					
ANR	5369804	IncDec	++		5369648	1					
ANR	5369805	IfStatement	if ( * token_start == token_end )		5369648	4					
ANR	5369806	Condition	* token_start == token_end	1104:6:34086:34110	5369648	0	True				
ANR	5369807	EqualityExpression	* token_start == token_end		5369648	0		==			
ANR	5369808	UnaryOperationExpression	* token_start		5369648	0					
ANR	5369809	UnaryOperator	*		5369648	0					
ANR	5369810	Identifier	token_start		5369648	1					
ANR	5369811	Identifier	token_end		5369648	1					
ANR	5369812	CompoundStatement		35:33:804:804	5369648	1					
ANR	5369813	ExpressionStatement	"token = """""	1105:3:34118:34128	5369648	0	True				
ANR	5369814	AssignmentExpression	"token = """""		5369648	0		=			
ANR	5369815	Identifier	token		5369648	0					
ANR	5369816	PrimaryExpression	""""""		5369648	1					
ANR	5369817	ElseStatement	else		5369648	0					
ANR	5369818	CompoundStatement		38:7:832:832	5369648	0					
ANR	5369819	ExpressionStatement	"token = line . substr ( * token_start , token_end - ( * token_start ) )"	1108:3:34146:34205	5369648	0	True				
ANR	5369820	AssignmentExpression	"token = line . substr ( * token_start , token_end - ( * token_start ) )"		5369648	0		=			
ANR	5369821	Identifier	token		5369648	0					
ANR	5369822	CallExpression	"line . substr ( * token_start , token_end - ( * token_start ) )"		5369648	1					
ANR	5369823	Callee	line . substr		5369648	0					
ANR	5369824	MemberAccess	line . substr		5369648	0					
ANR	5369825	Identifier	line		5369648	0					
ANR	5369826	Identifier	substr		5369648	1					
ANR	5369827	ArgumentList	* token_start		5369648	1					
ANR	5369828	Argument	* token_start		5369648	0					
ANR	5369829	UnaryOperationExpression	* token_start		5369648	0					
ANR	5369830	UnaryOperator	*		5369648	0					
ANR	5369831	Identifier	token_start		5369648	1					
ANR	5369832	Argument	token_end - ( * token_start )		5369648	1					
ANR	5369833	AdditiveExpression	token_end - ( * token_start )		5369648	0		-			
ANR	5369834	Identifier	token_end		5369648	0					
ANR	5369835	UnaryOperationExpression	* token_start		5369648	1					
ANR	5369836	UnaryOperator	*		5369648	0					
ANR	5369837	Identifier	token_start		5369648	1					
ANR	5369838	ExpressionStatement	* token_start = token_end + 1	1109:3:34210:34238	5369648	1	True				
ANR	5369839	AssignmentExpression	* token_start = token_end + 1		5369648	0		=			
ANR	5369840	UnaryOperationExpression	* token_start		5369648	0					
ANR	5369841	UnaryOperator	*		5369648	0					
ANR	5369842	Identifier	token_start		5369648	1					
ANR	5369843	AdditiveExpression	token_end + 1		5369648	1		+			
ANR	5369844	Identifier	token_end		5369648	0					
ANR	5369845	PrimaryExpression	1		5369648	1					
ANR	5369846	ReturnStatement	return token ;	1112:1:34248:34260	5369648	4	True				
ANR	5369847	Identifier	token		5369648	0					
ANR	5369848	ReturnType	static string		5369648	1					
ANR	5369849	Identifier	extract_token		5369648	2					
ANR	5369850	ParameterList	"int * token_start , const string & line"		5369648	3					
ANR	5369851	Parameter	int * token_start	1069:28:33270:33285	5369648	0	True				
ANR	5369852	ParameterType	int *		5369648	0					
ANR	5369853	Identifier	token_start		5369648	1					
ANR	5369854	Parameter	const string & line	1069:46:33288:33305	5369648	1	True				
ANR	5369855	ParameterType	const string &		5369648	0					
ANR	5369856	Identifier	line		5369648	1					
ANR	5369857	CFGEntryNode	ENTRY		5369648		True				
ANR	5369858	CFGExitNode	EXIT		5369648		True				
ANR	5369859	Symbol	token_start		5369648						
ANR	5369860	Symbol	line		5369648						
ANR	5369861	Symbol	token_end		5369648						
ANR	5369862	Symbol	line . substr		5369648						
ANR	5369863	Symbol	line . size		5369648						
ANR	5369864	Symbol	isspace		5369648						
ANR	5369865	Symbol	false		5369648						
ANR	5369866	Symbol	* line		5369648						
ANR	5369867	Symbol	token		5369648						
ANR	5369868	Symbol	* token_start		5369648						
ANR	5369869	Symbol	in_quote		5369648						
ANR	5369870	Symbol	* token_end		5369648						
ANR	5369871	Symbol	true		5369648						
ANR	5369872	Symbol	* * token_start		5369648						
ANR	5369873	Function	empty_line	1122:0:34559:34778							
ANR	5369874	FunctionDef	empty_line (const string & line)		5369873	0					
ANR	5369875	CompoundStatement		1123:0:34602:34778	5369873	0					
ANR	5369876	IdentifierDeclStatement	bool is_empty = true ;	1124:1:34605:34625	5369873	0	True				
ANR	5369877	IdentifierDecl	is_empty = true		5369873	0					
ANR	5369878	IdentifierDeclType	bool		5369873	0					
ANR	5369879	Identifier	is_empty		5369873	1					
ANR	5369880	AssignmentExpression	is_empty = true		5369873	2		=			
ANR	5369881	Identifier	true		5369873	0					
ANR	5369882	Identifier	true		5369873	1					
ANR	5369883	IdentifierDeclStatement	int index ;	1125:1:34628:34638	5369873	1	True				
ANR	5369884	IdentifierDecl	index		5369873	0					
ANR	5369885	IdentifierDeclType	int		5369873	0					
ANR	5369886	Identifier	index		5369873	1					
ANR	5369887	ForStatement	for ( index = 0 ; line [ index ] != 0 ; index ++ )		5369873	2					
ANR	5369888	ForInit	index = 0 ;	1127:6:34647:34656	5369873	0	True				
ANR	5369889	AssignmentExpression	index = 0		5369873	0		=			
ANR	5369890	Identifier	index		5369873	0					
ANR	5369891	PrimaryExpression	0		5369873	1					
ANR	5369892	Condition	line [ index ] != 0	1127:17:34658:34673	5369873	1	True				
ANR	5369893	EqualityExpression	line [ index ] != 0		5369873	0		!=			
ANR	5369894	ArrayIndexing	line [ index ]		5369873	0					
ANR	5369895	Identifier	line		5369873	0					
ANR	5369896	Identifier	index		5369873	1					
ANR	5369897	PrimaryExpression	0		5369873	1					
ANR	5369898	PostIncDecOperationExpression	index ++	1127:35:34676:34682	5369873	2	True				
ANR	5369899	Identifier	index		5369873	0					
ANR	5369900	IncDec	++		5369873	1					
ANR	5369901	CompoundStatement		5:44:82:82	5369873	3					
ANR	5369902	IfStatement	if ( ! isspace ( line [ index ] ) )		5369873	0					
ANR	5369903	Condition	! isspace ( line [ index ] )	1128:6:34693:34713	5369873	0	True				
ANR	5369904	UnaryOperationExpression	! isspace ( line [ index ] )		5369873	0					
ANR	5369905	UnaryOperator	!		5369873	0					
ANR	5369906	CallExpression	isspace ( line [ index ] )		5369873	1					
ANR	5369907	Callee	isspace		5369873	0					
ANR	5369908	Identifier	isspace		5369873	0					
ANR	5369909	ArgumentList	line [ index ]		5369873	1					
ANR	5369910	Argument	line [ index ]		5369873	0					
ANR	5369911	ArrayIndexing	line [ index ]		5369873	0					
ANR	5369912	Identifier	line		5369873	0					
ANR	5369913	Identifier	index		5369873	1					
ANR	5369914	CompoundStatement		6:29:113:113	5369873	1					
ANR	5369915	ExpressionStatement	is_empty = false	1129:3:34721:34737	5369873	0	True				
ANR	5369916	AssignmentExpression	is_empty = false		5369873	0		=			
ANR	5369917	Identifier	is_empty		5369873	0					
ANR	5369918	Identifier	false		5369873	1					
ANR	5369919	BreakStatement	break ;	1130:3:34742:34747	5369873	1	True				
ANR	5369920	ReturnStatement	return is_empty ;	1134:1:34761:34776	5369873	3	True				
ANR	5369921	Identifier	is_empty		5369873	0					
ANR	5369922	ReturnType	static bool		5369873	1					
ANR	5369923	Identifier	empty_line		5369873	2					
ANR	5369924	ParameterList	const string & line		5369873	3					
ANR	5369925	Parameter	const string & line	1122:23:34582:34599	5369873	0	True				
ANR	5369926	ParameterType	const string &		5369873	0					
ANR	5369927	Identifier	line		5369873	1					
ANR	5369928	CFGEntryNode	ENTRY		5369873		True				
ANR	5369929	CFGExitNode	EXIT		5369873		True				
ANR	5369930	Symbol	line		5369873						
ANR	5369931	Symbol	* index		5369873						
ANR	5369932	Symbol	true		5369873						
ANR	5369933	Symbol	isspace		5369873						
ANR	5369934	Symbol	false		5369873						
ANR	5369935	Symbol	index		5369873						
ANR	5369936	Symbol	* line		5369873						
ANR	5369937	Symbol	is_empty		5369873						
ANR	5369938	Function	Parameters :: ParseCommandLine	1145:0:35080:35680							
ANR	5369939	FunctionDef	"Parameters :: ParseCommandLine (int argc , char * * argv)"		5369938	0					
ANR	5369940	CompoundStatement		1146:0:35137:35680	5369938	0					
ANR	5369941	ExpressionStatement	debug = false	1148:1:35174:35192	5369938	0	True				
ANR	5369942	AssignmentExpression	debug = false		5369938	0		=			
ANR	5369943	Identifier	debug		5369938	0					
ANR	5369944	Identifier	false		5369938	1					
ANR	5369945	ExpressionStatement	"input_file = """""	1149:1:35195:35210	5369938	1	True				
ANR	5369946	AssignmentExpression	"input_file = """""		5369938	0		=			
ANR	5369947	Identifier	input_file		5369938	0					
ANR	5369948	PrimaryExpression	""""""		5369938	1					
ANR	5369949	ForStatement	for ( int arg_index = 1 ; arg_index < argc ; arg_index ++ )		5369938	2					
ANR	5369950	ForInit	int arg_index = 1 ;	1152:6:35266:35283	5369938	0	True				
ANR	5369951	IdentifierDeclStatement	int arg_index = 1 ;		5369938	0					
ANR	5369952	IdentifierDecl	arg_index = 1		5369938	0					
ANR	5369953	IdentifierDeclType	int		5369938	0					
ANR	5369954	Identifier	arg_index		5369938	1					
ANR	5369955	AssignmentExpression	arg_index = 1		5369938	2		=			
ANR	5369956	Identifier	arg_index		5369938	0					
ANR	5369957	PrimaryExpression	1		5369938	1					
ANR	5369958	Condition	arg_index < argc	1152:25:35285:35300	5369938	1	True				
ANR	5369959	RelationalExpression	arg_index < argc		5369938	0		<			
ANR	5369960	Identifier	arg_index		5369938	0					
ANR	5369961	Identifier	argc		5369938	1					
ANR	5369962	PostIncDecOperationExpression	arg_index ++	1152:43:35303:35313	5369938	2	True				
ANR	5369963	Identifier	arg_index		5369938	0					
ANR	5369964	IncDec	++		5369938	1					
ANR	5369965	CompoundStatement		7:56:178:178	5369938	3					
ANR	5369966	IfStatement	"if ( ! strcmp ( argv [ arg_index ] , ""-d"" ) || ! strcmp ( argv [ arg_index ] , ""-debug"" ) )"		5369938	0					
ANR	5369967	Condition	"! strcmp ( argv [ arg_index ] , ""-d"" ) || ! strcmp ( argv [ arg_index ] , ""-debug"" )"	1153:6:35324:35394	5369938	0	True				
ANR	5369968	OrExpression	"! strcmp ( argv [ arg_index ] , ""-d"" ) || ! strcmp ( argv [ arg_index ] , ""-debug"" )"		5369938	0		||			
ANR	5369969	UnaryOperationExpression	"! strcmp ( argv [ arg_index ] , ""-d"" )"		5369938	0					
ANR	5369970	UnaryOperator	!		5369938	0					
ANR	5369971	CallExpression	"strcmp ( argv [ arg_index ] , ""-d"" )"		5369938	1					
ANR	5369972	Callee	strcmp		5369938	0					
ANR	5369973	Identifier	strcmp		5369938	0					
ANR	5369974	ArgumentList	argv [ arg_index ]		5369938	1					
ANR	5369975	Argument	argv [ arg_index ]		5369938	0					
ANR	5369976	ArrayIndexing	argv [ arg_index ]		5369938	0					
ANR	5369977	Identifier	argv		5369938	0					
ANR	5369978	Identifier	arg_index		5369938	1					
ANR	5369979	Argument	"""-d"""		5369938	1					
ANR	5369980	PrimaryExpression	"""-d"""		5369938	0					
ANR	5369981	UnaryOperationExpression	"! strcmp ( argv [ arg_index ] , ""-debug"" )"		5369938	1					
ANR	5369982	UnaryOperator	!		5369938	0					
ANR	5369983	CallExpression	"strcmp ( argv [ arg_index ] , ""-debug"" )"		5369938	1					
ANR	5369984	Callee	strcmp		5369938	0					
ANR	5369985	Identifier	strcmp		5369938	0					
ANR	5369986	ArgumentList	argv [ arg_index ]		5369938	1					
ANR	5369987	Argument	argv [ arg_index ]		5369938	0					
ANR	5369988	ArrayIndexing	argv [ arg_index ]		5369938	0					
ANR	5369989	Identifier	argv		5369938	0					
ANR	5369990	Identifier	arg_index		5369938	1					
ANR	5369991	Argument	"""-debug"""		5369938	1					
ANR	5369992	PrimaryExpression	"""-debug"""		5369938	0					
ANR	5369993	CompoundStatement		9:42:259:259	5369938	1					
ANR	5369994	ExpressionStatement	debug = true	1155:3:35402:35414	5369938	0	True				
ANR	5369995	AssignmentExpression	debug = true		5369938	0		=			
ANR	5369996	Identifier	debug		5369938	0					
ANR	5369997	Identifier	true		5369938	1					
ANR	5369998	ElseStatement	else		5369938	0					
ANR	5369999	CompoundStatement		12:7:289:289	5369938	0					
ANR	5370000	IfStatement	"if ( ! input_file . compare ( """" ) )"		5369938	0					
ANR	5370001	Condition	"! input_file . compare ( """" )"	1158:7:35436:35458	5369938	0	True				
ANR	5370002	UnaryOperationExpression	"! input_file . compare ( """" )"		5369938	0					
ANR	5370003	UnaryOperator	!		5369938	0					
ANR	5370004	CallExpression	"input_file . compare ( """" )"		5369938	1					
ANR	5370005	Callee	input_file . compare		5369938	0					
ANR	5370006	MemberAccess	input_file . compare		5369938	0					
ANR	5370007	Identifier	input_file		5369938	0					
ANR	5370008	Identifier	compare		5369938	1					
ANR	5370009	ArgumentList	""""""		5369938	1					
ANR	5370010	Argument	""""""		5369938	0					
ANR	5370011	PrimaryExpression	""""""		5369938	0					
ANR	5370012	CompoundStatement		13:32:323:323	5369938	1					
ANR	5370013	ExpressionStatement	input_file = argv [ arg_index ]	1159:4:35467:35495	5369938	0	True				
ANR	5370014	AssignmentExpression	input_file = argv [ arg_index ]		5369938	0		=			
ANR	5370015	Identifier	input_file		5369938	0					
ANR	5370016	ArrayIndexing	argv [ arg_index ]		5369938	1					
ANR	5370017	Identifier	argv		5369938	0					
ANR	5370018	Identifier	arg_index		5369938	1					
ANR	5370019	IfStatement	"if ( ! input_file . compare ( """" ) )"		5369938	3					
ANR	5370020	Condition	"! input_file . compare ( """" )"	1164:5:35515:35537	5369938	0	True				
ANR	5370021	UnaryOperationExpression	"! input_file . compare ( """" )"		5369938	0					
ANR	5370022	UnaryOperator	!		5369938	0					
ANR	5370023	CallExpression	"input_file . compare ( """" )"		5369938	1					
ANR	5370024	Callee	input_file . compare		5369938	0					
ANR	5370025	MemberAccess	input_file . compare		5369938	0					
ANR	5370026	Identifier	input_file		5369938	0					
ANR	5370027	Identifier	compare		5369938	1					
ANR	5370028	ArgumentList	""""""		5369938	1					
ANR	5370029	Argument	""""""		5369938	0					
ANR	5370030	PrimaryExpression	""""""		5369938	0					
ANR	5370031	CompoundStatement		19:30:402:402	5369938	1					
ANR	5370032	ExpressionStatement	"cout << ""Error: you didn't specify an input file.\\n"""	1165:2:35544:35596	5369938	0	True				
ANR	5370033	ShiftExpression	"cout << ""Error: you didn't specify an input file.\\n"""		5369938	0		<<			
ANR	5370034	Identifier	cout		5369938	0					
ANR	5370035	PrimaryExpression	"""Error: you didn't specify an input file.\\n"""		5369938	1					
ANR	5370036	ExpressionStatement	"cout << ""Usage: test_classads [-debug] <input-file>\\n"""	1166:2:35600:35654	5369938	1	True				
ANR	5370037	ShiftExpression	"cout << ""Usage: test_classads [-debug] <input-file>\\n"""		5369938	0		<<			
ANR	5370038	Identifier	cout		5369938	0					
ANR	5370039	PrimaryExpression	"""Usage: test_classads [-debug] <input-file>\\n"""		5369938	1					
ANR	5370040	ExpressionStatement	exit ( 1 )	1167:2:35658:35665	5369938	2	True				
ANR	5370041	CallExpression	exit ( 1 )		5369938	0					
ANR	5370042	Callee	exit		5369938	0					
ANR	5370043	Identifier	exit		5369938	0					
ANR	5370044	ArgumentList	1		5369938	1					
ANR	5370045	Argument	1		5369938	0					
ANR	5370046	PrimaryExpression	1		5369938	0					
ANR	5370047	ReturnStatement	return ;	1170:1:35672:35678	5369938	4	True				
ANR	5370048	ReturnType	void		5369938	1					
ANR	5370049	Identifier	Parameters :: ParseCommandLine		5369938	2					
ANR	5370050	ParameterList	"int argc , char * * argv"		5369938	3					
ANR	5370051	Parameter	int argc	1145:34:35114:35121	5369938	0	True				
ANR	5370052	ParameterType	int		5369938	0					
ANR	5370053	Identifier	argc		5369938	1					
ANR	5370054	Parameter	char * * argv	1145:44:35124:35134	5369938	1	True				
ANR	5370055	ParameterType	char * *		5369938	0					
ANR	5370056	Identifier	argv		5369938	1					
ANR	5370057	CFGEntryNode	ENTRY		5369938		True				
ANR	5370058	CFGExitNode	EXIT		5369938		True				
ANR	5370059	Symbol	argc		5369938						
ANR	5370060	Symbol	strcmp		5369938						
ANR	5370061	Symbol	input_file		5369938						
ANR	5370062	Symbol	debug		5369938						
ANR	5370063	Symbol	* arg_index		5369938						
ANR	5370064	Symbol	arg_index		5369938						
ANR	5370065	Symbol	input_file . compare		5369938						
ANR	5370066	Symbol	false		5369938						
ANR	5370067	Symbol	true		5369938						
ANR	5370068	Symbol	* argv		5369938						
ANR	5370069	Symbol	argv		5369938						
