command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	649949	File	data/converged/CVE-2011-4930_htcondor/baseStarter.cpp								
ANR	649950	DeclStmt									
ANR	649951	Decl							int	int ( )	get_random_int
ANR	649952	DeclStmt									
ANR	649953	Decl							extern void	extern void ( )	main_shutdown_fast
ANR	649954	DeclStmt									
ANR	649955	Decl							const char	const char *	JOB_AD_FILENAME
ANR	649956	DeclStmt									
ANR	649957	Decl							const char	const char *	MACHINE_AD_FILENAME
ANR	649958	Function	CStarter :: CStarter	62:0:1873:2329							
ANR	649959	FunctionDef	CStarter :: CStarter ()		649958	0					
ANR	649960	CompoundStatement		63:0:1894:2329	649958	0					
ANR	649961	ExpressionStatement	Execute = NULL	64:1:1897:1911	649958	0	True				
ANR	649962	AssignmentExpression	Execute = NULL		649958	0		=			
ANR	649963	Identifier	Execute		649958	0					
ANR	649964	Identifier	NULL		649958	1					
ANR	649965	ExpressionStatement	orig_cwd = NULL	65:1:1914:1929	649958	1	True				
ANR	649966	AssignmentExpression	orig_cwd = NULL		649958	0		=			
ANR	649967	Identifier	orig_cwd		649958	0					
ANR	649968	Identifier	NULL		649958	1					
ANR	649969	ExpressionStatement	is_gridshell = false	66:1:1932:1952	649958	2	True				
ANR	649970	AssignmentExpression	is_gridshell = false		649958	0		=			
ANR	649971	Identifier	is_gridshell		649958	0					
ANR	649972	Identifier	false		649958	1					
ANR	649973	ExpressionStatement	ShuttingDown = FALSE	67:1:1955:1975	649958	3	True				
ANR	649974	AssignmentExpression	ShuttingDown = FALSE		649958	0		=			
ANR	649975	Identifier	ShuttingDown		649958	0					
ANR	649976	Identifier	FALSE		649958	1					
ANR	649977	ExpressionStatement	jic = NULL	68:1:1978:1988	649958	4	True				
ANR	649978	AssignmentExpression	jic = NULL		649958	0		=			
ANR	649979	Identifier	jic		649958	0					
ANR	649980	Identifier	NULL		649958	1					
ANR	649981	ExpressionStatement	jobUniverse = CONDOR_UNIVERSE_VANILLA	69:1:1991:2028	649958	5	True				
ANR	649982	AssignmentExpression	jobUniverse = CONDOR_UNIVERSE_VANILLA		649958	0		=			
ANR	649983	Identifier	jobUniverse		649958	0					
ANR	649984	Identifier	CONDOR_UNIVERSE_VANILLA		649958	1					
ANR	649985	ExpressionStatement	pre_script = NULL	70:1:2031:2048	649958	6	True				
ANR	649986	AssignmentExpression	pre_script = NULL		649958	0		=			
ANR	649987	Identifier	pre_script		649958	0					
ANR	649988	Identifier	NULL		649958	1					
ANR	649989	ExpressionStatement	post_script = NULL	71:1:2051:2069	649958	7	True				
ANR	649990	AssignmentExpression	post_script = NULL		649958	0		=			
ANR	649991	Identifier	post_script		649958	0					
ANR	649992	Identifier	NULL		649958	1					
ANR	649993	ExpressionStatement	starter_stdin_fd = - 1	72:1:2072:2093	649958	8	True				
ANR	649994	AssignmentExpression	starter_stdin_fd = - 1		649958	0		=			
ANR	649995	Identifier	starter_stdin_fd		649958	0					
ANR	649996	UnaryOperationExpression	- 1		649958	1					
ANR	649997	UnaryOperator	-		649958	0					
ANR	649998	PrimaryExpression	1		649958	1					
ANR	649999	ExpressionStatement	starter_stdout_fd = - 1	73:1:2096:2118	649958	9	True				
ANR	650000	AssignmentExpression	starter_stdout_fd = - 1		649958	0		=			
ANR	650001	Identifier	starter_stdout_fd		649958	0					
ANR	650002	UnaryOperationExpression	- 1		649958	1					
ANR	650003	UnaryOperator	-		649958	0					
ANR	650004	PrimaryExpression	1		649958	1					
ANR	650005	ExpressionStatement	starter_stderr_fd = - 1	74:1:2121:2143	649958	10	True				
ANR	650006	AssignmentExpression	starter_stderr_fd = - 1		649958	0		=			
ANR	650007	Identifier	starter_stderr_fd		649958	0					
ANR	650008	UnaryOperationExpression	- 1		649958	1					
ANR	650009	UnaryOperator	-		649958	0					
ANR	650010	PrimaryExpression	1		649958	1					
ANR	650011	ExpressionStatement	deferral_tid = - 1	75:1:2146:2163	649958	11	True				
ANR	650012	AssignmentExpression	deferral_tid = - 1		649958	0		=			
ANR	650013	Identifier	deferral_tid		649958	0					
ANR	650014	UnaryOperationExpression	- 1		649958	1					
ANR	650015	UnaryOperator	-		649958	0					
ANR	650016	PrimaryExpression	1		649958	1					
ANR	650017	ExpressionStatement	suspended = false	76:1:2166:2183	649958	12	True				
ANR	650018	AssignmentExpression	suspended = false		649958	0		=			
ANR	650019	Identifier	suspended		649958	0					
ANR	650020	Identifier	false		649958	1					
ANR	650021	ExpressionStatement	m_privsep_helper = NULL	77:1:2186:2209	649958	13	True				
ANR	650022	AssignmentExpression	m_privsep_helper = NULL		649958	0		=			
ANR	650023	Identifier	m_privsep_helper		649958	0					
ANR	650024	Identifier	NULL		649958	1					
ANR	650025	ExpressionStatement	m_configured = false	78:1:2212:2232	649958	14	True				
ANR	650026	AssignmentExpression	m_configured = false		649958	0		=			
ANR	650027	Identifier	m_configured		649958	0					
ANR	650028	Identifier	false		649958	1					
ANR	650029	ExpressionStatement	m_job_environment_is_ready = false	79:1:2235:2269	649958	15	True				
ANR	650030	AssignmentExpression	m_job_environment_is_ready = false		649958	0		=			
ANR	650031	Identifier	m_job_environment_is_ready		649958	0					
ANR	650032	Identifier	false		649958	1					
ANR	650033	ExpressionStatement	m_all_jobs_done = false	80:1:2272:2295	649958	16	True				
ANR	650034	AssignmentExpression	m_all_jobs_done = false		649958	0		=			
ANR	650035	Identifier	m_all_jobs_done		649958	0					
ANR	650036	Identifier	false		649958	1					
ANR	650037	ExpressionStatement	m_deferred_job_update = false	81:1:2298:2327	649958	17	True				
ANR	650038	AssignmentExpression	m_deferred_job_update = false		649958	0		=			
ANR	650039	Identifier	m_deferred_job_update		649958	0					
ANR	650040	Identifier	false		649958	1					
ANR	650041	Identifier	CStarter :: CStarter		649958	1					
ANR	650042	ParameterList			649958	2					
ANR	650043	CFGEntryNode	ENTRY		649958		True				
ANR	650044	CFGExitNode	EXIT		649958		True				
ANR	650045	Symbol	pre_script		649958						
ANR	650046	Symbol	starter_stdout_fd		649958						
ANR	650047	Symbol	NULL		649958						
ANR	650048	Symbol	Execute		649958						
ANR	650049	Symbol	CONDOR_UNIVERSE_VANILLA		649958						
ANR	650050	Symbol	starter_stdin_fd		649958						
ANR	650051	Symbol	jic		649958						
ANR	650052	Symbol	false		649958						
ANR	650053	Symbol	ShuttingDown		649958						
ANR	650054	Symbol	post_script		649958						
ANR	650055	Symbol	deferral_tid		649958						
ANR	650056	Symbol	jobUniverse		649958						
ANR	650057	Symbol	m_privsep_helper		649958						
ANR	650058	Symbol	starter_stderr_fd		649958						
ANR	650059	Symbol	suspended		649958						
ANR	650060	Symbol	m_configured		649958						
ANR	650061	Symbol	is_gridshell		649958						
ANR	650062	Symbol	m_job_environment_is_ready		649958						
ANR	650063	Symbol	m_all_jobs_done		649958						
ANR	650064	Symbol	m_deferred_job_update		649958						
ANR	650065	Symbol	FALSE		649958						
ANR	650066	Symbol	orig_cwd		649958						
ANR	650067	Function	CStarter :: ~CStarter	85:0:2333:2559							
ANR	650068	FunctionDef	CStarter :: ~CStarter ()		650067	0					
ANR	650069	CompoundStatement		86:0:2355:2559	650067	0					
ANR	650070	IfStatement	if ( Execute )		650067	0					
ANR	650071	Condition	Execute	87:5:2362:2368	650067	0	True				
ANR	650072	Identifier	Execute		650067	0					
ANR	650073	CompoundStatement		2:15:16:16	650067	1					
ANR	650074	ExpressionStatement	free ( Execute )	88:2:2376:2389	650067	0	True				
ANR	650075	CallExpression	free ( Execute )		650067	0					
ANR	650076	Callee	free		650067	0					
ANR	650077	Identifier	free		650067	0					
ANR	650078	ArgumentList	Execute		650067	1					
ANR	650079	Argument	Execute		650067	0					
ANR	650080	Identifier	Execute		650067	0					
ANR	650081	IfStatement	if ( orig_cwd )		650067	1					
ANR	650082	Condition	orig_cwd	90:5:2399:2406	650067	0	True				
ANR	650083	Identifier	orig_cwd		650067	0					
ANR	650084	CompoundStatement		5:16:54:54	650067	1					
ANR	650085	ExpressionStatement	free ( orig_cwd )	91:2:2414:2428	650067	0	True				
ANR	650086	CallExpression	free ( orig_cwd )		650067	0					
ANR	650087	Callee	free		650067	0					
ANR	650088	Identifier	free		650067	0					
ANR	650089	ArgumentList	orig_cwd		650067	1					
ANR	650090	Argument	orig_cwd		650067	0					
ANR	650091	Identifier	orig_cwd		650067	0					
ANR	650092	IfStatement	if ( jic )		650067	2					
ANR	650093	Condition	jic	93:5:2438:2440	650067	0	True				
ANR	650094	Identifier	jic		650067	0					
ANR	650095	CompoundStatement		8:11:88:88	650067	1					
ANR	650096	Statement	delete	94:2:2448:2453	650067	0	True				
ANR	650097	ExpressionStatement	jic	94:9:2455:2458	650067	1	True				
ANR	650098	Identifier	jic		650067	0					
ANR	650099	IfStatement	if ( pre_script )		650067	3					
ANR	650100	Condition	pre_script	96:5:2468:2477	650067	0	True				
ANR	650101	Identifier	pre_script		650067	0					
ANR	650102	CompoundStatement		11:18:125:125	650067	1					
ANR	650103	Statement	delete	97:2:2485:2490	650067	0	True				
ANR	650104	ExpressionStatement	pre_script	97:8:2491:2505	650067	1	True				
ANR	650105	Identifier	pre_script		650067	0					
ANR	650106	IfStatement	if ( post_script )		650067	4					
ANR	650107	Condition	post_script	99:5:2515:2525	650067	0	True				
ANR	650108	Identifier	post_script		650067	0					
ANR	650109	CompoundStatement		14:19:173:173	650067	1					
ANR	650110	Statement	delete	100:2:2533:2538	650067	0	True				
ANR	650111	ExpressionStatement	post_script	100:8:2539:2554	650067	1	True				
ANR	650112	Identifier	post_script		650067	0					
ANR	650113	Identifier	CStarter :: ~CStarter		650067	1					
ANR	650114	ParameterList			650067	2					
ANR	650115	CFGEntryNode	ENTRY		650067		True				
ANR	650116	CFGExitNode	EXIT		650067		True				
ANR	650117	Symbol	pre_script		650067						
ANR	650118	Symbol	Execute		650067						
ANR	650119	Symbol	jic		650067						
ANR	650120	Symbol	post_script		650067						
ANR	650121	Symbol	orig_cwd		650067						
ANR	650122	Function	CStarter :: Init	105:0:2563:7556							
ANR	650123	FunctionDef	"CStarter :: Init (JobInfoCommunicator * my_jic , const char * original_cwd , bool is_gsh , int stdin_fd , int stdout_fd , int stderr_fd)"		650122	0					
ANR	650124	CompoundStatement		109:0:2706:7556	650122	0					
ANR	650125	IfStatement	if ( ! my_jic )		650122	0					
ANR	650126	Condition	! my_jic	110:5:2713:2720	650122	0	True				
ANR	650127	UnaryOperationExpression	! my_jic		650122	0					
ANR	650128	UnaryOperator	!		650122	0					
ANR	650129	Identifier	my_jic		650122	1					
ANR	650130	CompoundStatement		2:16:17:17	650122	1					
ANR	650131	ExpressionStatement	"EXCEPT ( ""CStarter::Init() called with no JobInfoCommunicator!"" )"	111:2:2728:2792	650122	0	True				
ANR	650132	CallExpression	"EXCEPT ( ""CStarter::Init() called with no JobInfoCommunicator!"" )"		650122	0					
ANR	650133	Callee	EXCEPT		650122	0					
ANR	650134	Identifier	EXCEPT		650122	0					
ANR	650135	ArgumentList	"""CStarter::Init() called with no JobInfoCommunicator!"""		650122	1					
ANR	650136	Argument	"""CStarter::Init() called with no JobInfoCommunicator!"""		650122	0					
ANR	650137	PrimaryExpression	"""CStarter::Init() called with no JobInfoCommunicator!"""		650122	0					
ANR	650138	IfStatement	if ( jic )		650122	1					
ANR	650139	Condition	jic	113:5:2803:2805	650122	0	True				
ANR	650140	Identifier	jic		650122	0					
ANR	650141	CompoundStatement		5:11:102:102	650122	1					
ANR	650142	Statement	delete	114:2:2813:2818	650122	0	True				
ANR	650143	ExpressionStatement	jic	114:8:2819:2826	650122	1	True				
ANR	650144	Identifier	jic		650122	0					
ANR	650145	ExpressionStatement	jic = my_jic	116:1:2832:2844	650122	2	True				
ANR	650146	AssignmentExpression	jic = my_jic		650122	0		=			
ANR	650147	Identifier	jic		650122	0					
ANR	650148	Identifier	my_jic		650122	1					
ANR	650149	IfStatement	if ( original_cwd )		650122	3					
ANR	650150	Condition	original_cwd	118:5:2852:2863	650122	0	True				
ANR	650151	Identifier	original_cwd		650122	0					
ANR	650152	CompoundStatement		10:20:160:160	650122	1					
ANR	650153	ExpressionStatement	this -> orig_cwd = strdup ( original_cwd )	119:2:2871:2910	650122	0	True				
ANR	650154	AssignmentExpression	this -> orig_cwd = strdup ( original_cwd )		650122	0		=			
ANR	650155	PtrMemberAccess	this -> orig_cwd		650122	0					
ANR	650156	Identifier	this		650122	0					
ANR	650157	Identifier	orig_cwd		650122	1					
ANR	650158	CallExpression	strdup ( original_cwd )		650122	1					
ANR	650159	Callee	strdup		650122	0					
ANR	650160	Identifier	strdup		650122	0					
ANR	650161	ArgumentList	original_cwd		650122	1					
ANR	650162	Argument	original_cwd		650122	0					
ANR	650163	Identifier	original_cwd		650122	0					
ANR	650164	ExpressionStatement	this -> is_gridshell = is_gsh	121:1:2916:2943	650122	4	True				
ANR	650165	AssignmentExpression	this -> is_gridshell = is_gsh		650122	0		=			
ANR	650166	PtrMemberAccess	this -> is_gridshell		650122	0					
ANR	650167	Identifier	this		650122	0					
ANR	650168	Identifier	is_gridshell		650122	1					
ANR	650169	Identifier	is_gsh		650122	1					
ANR	650170	ExpressionStatement	starter_stdin_fd = stdin_fd	122:1:2946:2973	650122	5	True				
ANR	650171	AssignmentExpression	starter_stdin_fd = stdin_fd		650122	0		=			
ANR	650172	Identifier	starter_stdin_fd		650122	0					
ANR	650173	Identifier	stdin_fd		650122	1					
ANR	650174	ExpressionStatement	starter_stdout_fd = stdout_fd	123:1:2976:3005	650122	6	True				
ANR	650175	AssignmentExpression	starter_stdout_fd = stdout_fd		650122	0		=			
ANR	650176	Identifier	starter_stdout_fd		650122	0					
ANR	650177	Identifier	stdout_fd		650122	1					
ANR	650178	ExpressionStatement	starter_stderr_fd = stderr_fd	124:1:3008:3037	650122	7	True				
ANR	650179	AssignmentExpression	starter_stderr_fd = stderr_fd		650122	0		=			
ANR	650180	Identifier	starter_stderr_fd		650122	0					
ANR	650181	Identifier	stderr_fd		650122	1					
ANR	650182	ExpressionStatement	Config ( )	126:1:3041:3049	650122	8	True				
ANR	650183	CallExpression	Config ( )		650122	0					
ANR	650184	Callee	Config		650122	0					
ANR	650185	Identifier	Config		650122	0					
ANR	650186	ArgumentList			650122	1					
ANR	650187	IfStatement	if ( is_gridshell )		650122	9					
ANR	650188	Condition	is_gridshell	133:5:3267:3278	650122	0	True				
ANR	650189	Identifier	is_gridshell		650122	0					
ANR	650190	CompoundStatement		25:20:575:575	650122	1					
ANR	650191	ExpressionStatement	WorkingDir = Execute	137:2:3456:3476	650122	0	True				
ANR	650192	AssignmentExpression	WorkingDir = Execute		650122	0		=			
ANR	650193	Identifier	WorkingDir		650122	0					
ANR	650194	Identifier	Execute		650122	1					
ANR	650195	ElseStatement	else		650122	0					
ANR	650196	CompoundStatement		30:8:779:779	650122	0					
ANR	650197	ExpressionStatement	"WorkingDir . sprintf ( ""%s%cdir_%ld"" , Execute , DIR_DELIM_CHAR , ( long ) daemonCore -> getpid ( ) )"	139:2:3490:3584	650122	0	True				
ANR	650198	CallExpression	"WorkingDir . sprintf ( ""%s%cdir_%ld"" , Execute , DIR_DELIM_CHAR , ( long ) daemonCore -> getpid ( ) )"		650122	0					
ANR	650199	Callee	WorkingDir . sprintf		650122	0					
ANR	650200	MemberAccess	WorkingDir . sprintf		650122	0					
ANR	650201	Identifier	WorkingDir		650122	0					
ANR	650202	Identifier	sprintf		650122	1					
ANR	650203	ArgumentList	"""%s%cdir_%ld"""		650122	1					
ANR	650204	Argument	"""%s%cdir_%ld"""		650122	0					
ANR	650205	PrimaryExpression	"""%s%cdir_%ld"""		650122	0					
ANR	650206	Argument	Execute		650122	1					
ANR	650207	Identifier	Execute		650122	0					
ANR	650208	Argument	DIR_DELIM_CHAR		650122	2					
ANR	650209	Identifier	DIR_DELIM_CHAR		650122	0					
ANR	650210	Argument	( long ) daemonCore -> getpid ( )		650122	3					
ANR	650211	CastExpression	( long ) daemonCore -> getpid ( )		650122	0					
ANR	650212	CastTarget	long		650122	0					
ANR	650213	CallExpression	daemonCore -> getpid ( )		650122	1					
ANR	650214	Callee	daemonCore -> getpid		650122	0					
ANR	650215	PtrMemberAccess	daemonCore -> getpid		650122	0					
ANR	650216	Identifier	daemonCore		650122	0					
ANR	650217	Identifier	getpid		650122	1					
ANR	650218	ArgumentList			650122	1					
ANR	650219	ExpressionStatement	"daemonCore -> Register_Signal ( DC_SIGSUSPEND , ""DC_SIGSUSPEND"" , ( SignalHandlercpp ) & CStarter :: RemoteSuspend , ""RemoteSuspend"" , this )"	151:1:3951:4082	650122	10	True				
ANR	650220	CallExpression	"daemonCore -> Register_Signal ( DC_SIGSUSPEND , ""DC_SIGSUSPEND"" , ( SignalHandlercpp ) & CStarter :: RemoteSuspend , ""RemoteSuspend"" , this )"		650122	0					
ANR	650221	Callee	daemonCore -> Register_Signal		650122	0					
ANR	650222	PtrMemberAccess	daemonCore -> Register_Signal		650122	0					
ANR	650223	Identifier	daemonCore		650122	0					
ANR	650224	Identifier	Register_Signal		650122	1					
ANR	650225	ArgumentList	DC_SIGSUSPEND		650122	1					
ANR	650226	Argument	DC_SIGSUSPEND		650122	0					
ANR	650227	Identifier	DC_SIGSUSPEND		650122	0					
ANR	650228	Argument	"""DC_SIGSUSPEND"""		650122	1					
ANR	650229	PrimaryExpression	"""DC_SIGSUSPEND"""		650122	0					
ANR	650230	Argument	( SignalHandlercpp ) & CStarter :: RemoteSuspend		650122	2					
ANR	650231	CastExpression	( SignalHandlercpp ) & CStarter :: RemoteSuspend		650122	0					
ANR	650232	CastTarget	SignalHandlercpp		650122	0					
ANR	650233	UnaryOperationExpression	& CStarter :: RemoteSuspend		650122	1					
ANR	650234	UnaryOperator	&		650122	0					
ANR	650235	Identifier	CStarter :: RemoteSuspend		650122	1					
ANR	650236	Argument	"""RemoteSuspend"""		650122	3					
ANR	650237	PrimaryExpression	"""RemoteSuspend"""		650122	0					
ANR	650238	Argument	this		650122	4					
ANR	650239	Identifier	this		650122	0					
ANR	650240	ExpressionStatement	"daemonCore -> Register_Signal ( DC_SIGCONTINUE , ""DC_SIGCONTINUE"" , ( SignalHandlercpp ) & CStarter :: RemoteContinue , ""RemoteContinue"" , this )"	154:1:4085:4219	650122	11	True				
ANR	650241	CallExpression	"daemonCore -> Register_Signal ( DC_SIGCONTINUE , ""DC_SIGCONTINUE"" , ( SignalHandlercpp ) & CStarter :: RemoteContinue , ""RemoteContinue"" , this )"		650122	0					
ANR	650242	Callee	daemonCore -> Register_Signal		650122	0					
ANR	650243	PtrMemberAccess	daemonCore -> Register_Signal		650122	0					
ANR	650244	Identifier	daemonCore		650122	0					
ANR	650245	Identifier	Register_Signal		650122	1					
ANR	650246	ArgumentList	DC_SIGCONTINUE		650122	1					
ANR	650247	Argument	DC_SIGCONTINUE		650122	0					
ANR	650248	Identifier	DC_SIGCONTINUE		650122	0					
ANR	650249	Argument	"""DC_SIGCONTINUE"""		650122	1					
ANR	650250	PrimaryExpression	"""DC_SIGCONTINUE"""		650122	0					
ANR	650251	Argument	( SignalHandlercpp ) & CStarter :: RemoteContinue		650122	2					
ANR	650252	CastExpression	( SignalHandlercpp ) & CStarter :: RemoteContinue		650122	0					
ANR	650253	CastTarget	SignalHandlercpp		650122	0					
ANR	650254	UnaryOperationExpression	& CStarter :: RemoteContinue		650122	1					
ANR	650255	UnaryOperator	&		650122	0					
ANR	650256	Identifier	CStarter :: RemoteContinue		650122	1					
ANR	650257	Argument	"""RemoteContinue"""		650122	3					
ANR	650258	PrimaryExpression	"""RemoteContinue"""		650122	0					
ANR	650259	Argument	this		650122	4					
ANR	650260	Identifier	this		650122	0					
ANR	650261	ExpressionStatement	"daemonCore -> Register_Signal ( DC_SIGHARDKILL , ""DC_SIGHARDKILL"" , ( SignalHandlercpp ) & CStarter :: RemoteShutdownFast , ""RemoteShutdownFast"" , this )"	157:1:4222:4364	650122	12	True				
ANR	650262	CallExpression	"daemonCore -> Register_Signal ( DC_SIGHARDKILL , ""DC_SIGHARDKILL"" , ( SignalHandlercpp ) & CStarter :: RemoteShutdownFast , ""RemoteShutdownFast"" , this )"		650122	0					
ANR	650263	Callee	daemonCore -> Register_Signal		650122	0					
ANR	650264	PtrMemberAccess	daemonCore -> Register_Signal		650122	0					
ANR	650265	Identifier	daemonCore		650122	0					
ANR	650266	Identifier	Register_Signal		650122	1					
ANR	650267	ArgumentList	DC_SIGHARDKILL		650122	1					
ANR	650268	Argument	DC_SIGHARDKILL		650122	0					
ANR	650269	Identifier	DC_SIGHARDKILL		650122	0					
ANR	650270	Argument	"""DC_SIGHARDKILL"""		650122	1					
ANR	650271	PrimaryExpression	"""DC_SIGHARDKILL"""		650122	0					
ANR	650272	Argument	( SignalHandlercpp ) & CStarter :: RemoteShutdownFast		650122	2					
ANR	650273	CastExpression	( SignalHandlercpp ) & CStarter :: RemoteShutdownFast		650122	0					
ANR	650274	CastTarget	SignalHandlercpp		650122	0					
ANR	650275	UnaryOperationExpression	& CStarter :: RemoteShutdownFast		650122	1					
ANR	650276	UnaryOperator	&		650122	0					
ANR	650277	Identifier	CStarter :: RemoteShutdownFast		650122	1					
ANR	650278	Argument	"""RemoteShutdownFast"""		650122	3					
ANR	650279	PrimaryExpression	"""RemoteShutdownFast"""		650122	0					
ANR	650280	Argument	this		650122	4					
ANR	650281	Identifier	this		650122	0					
ANR	650282	ExpressionStatement	"daemonCore -> Register_Signal ( DC_SIGSOFTKILL , ""DC_SIGSOFTKILL"" , ( SignalHandlercpp ) & CStarter :: RemoteShutdownGraceful , ""RemoteShutdownGraceful"" , this )"	160:1:4367:4517	650122	13	True				
ANR	650283	CallExpression	"daemonCore -> Register_Signal ( DC_SIGSOFTKILL , ""DC_SIGSOFTKILL"" , ( SignalHandlercpp ) & CStarter :: RemoteShutdownGraceful , ""RemoteShutdownGraceful"" , this )"		650122	0					
ANR	650284	Callee	daemonCore -> Register_Signal		650122	0					
ANR	650285	PtrMemberAccess	daemonCore -> Register_Signal		650122	0					
ANR	650286	Identifier	daemonCore		650122	0					
ANR	650287	Identifier	Register_Signal		650122	1					
ANR	650288	ArgumentList	DC_SIGSOFTKILL		650122	1					
ANR	650289	Argument	DC_SIGSOFTKILL		650122	0					
ANR	650290	Identifier	DC_SIGSOFTKILL		650122	0					
ANR	650291	Argument	"""DC_SIGSOFTKILL"""		650122	1					
ANR	650292	PrimaryExpression	"""DC_SIGSOFTKILL"""		650122	0					
ANR	650293	Argument	( SignalHandlercpp ) & CStarter :: RemoteShutdownGraceful		650122	2					
ANR	650294	CastExpression	( SignalHandlercpp ) & CStarter :: RemoteShutdownGraceful		650122	0					
ANR	650295	CastTarget	SignalHandlercpp		650122	0					
ANR	650296	UnaryOperationExpression	& CStarter :: RemoteShutdownGraceful		650122	1					
ANR	650297	UnaryOperator	&		650122	0					
ANR	650298	Identifier	CStarter :: RemoteShutdownGraceful		650122	1					
ANR	650299	Argument	"""RemoteShutdownGraceful"""		650122	3					
ANR	650300	PrimaryExpression	"""RemoteShutdownGraceful"""		650122	0					
ANR	650301	Argument	this		650122	4					
ANR	650302	Identifier	this		650122	0					
ANR	650303	ExpressionStatement	"daemonCore -> Register_Signal ( DC_SIGPCKPT , ""DC_SIGPCKPT"" , ( SignalHandlercpp ) & CStarter :: RemotePeriodicCkpt , ""RemotePeriodicCkpt"" , this )"	163:1:4520:4656	650122	14	True				
ANR	650304	CallExpression	"daemonCore -> Register_Signal ( DC_SIGPCKPT , ""DC_SIGPCKPT"" , ( SignalHandlercpp ) & CStarter :: RemotePeriodicCkpt , ""RemotePeriodicCkpt"" , this )"		650122	0					
ANR	650305	Callee	daemonCore -> Register_Signal		650122	0					
ANR	650306	PtrMemberAccess	daemonCore -> Register_Signal		650122	0					
ANR	650307	Identifier	daemonCore		650122	0					
ANR	650308	Identifier	Register_Signal		650122	1					
ANR	650309	ArgumentList	DC_SIGPCKPT		650122	1					
ANR	650310	Argument	DC_SIGPCKPT		650122	0					
ANR	650311	Identifier	DC_SIGPCKPT		650122	0					
ANR	650312	Argument	"""DC_SIGPCKPT"""		650122	1					
ANR	650313	PrimaryExpression	"""DC_SIGPCKPT"""		650122	0					
ANR	650314	Argument	( SignalHandlercpp ) & CStarter :: RemotePeriodicCkpt		650122	2					
ANR	650315	CastExpression	( SignalHandlercpp ) & CStarter :: RemotePeriodicCkpt		650122	0					
ANR	650316	CastTarget	SignalHandlercpp		650122	0					
ANR	650317	UnaryOperationExpression	& CStarter :: RemotePeriodicCkpt		650122	1					
ANR	650318	UnaryOperator	&		650122	0					
ANR	650319	Identifier	CStarter :: RemotePeriodicCkpt		650122	1					
ANR	650320	Argument	"""RemotePeriodicCkpt"""		650122	3					
ANR	650321	PrimaryExpression	"""RemotePeriodicCkpt"""		650122	0					
ANR	650322	Argument	this		650122	4					
ANR	650323	Identifier	this		650122	0					
ANR	650324	ExpressionStatement	"daemonCore -> Register_Signal ( DC_SIGREMOVE , ""DC_SIGREMOVE"" , ( SignalHandlercpp ) & CStarter :: RemoteRemove , ""RemoteRemove"" , this )"	166:1:4659:4785	650122	15	True				
ANR	650325	CallExpression	"daemonCore -> Register_Signal ( DC_SIGREMOVE , ""DC_SIGREMOVE"" , ( SignalHandlercpp ) & CStarter :: RemoteRemove , ""RemoteRemove"" , this )"		650122	0					
ANR	650326	Callee	daemonCore -> Register_Signal		650122	0					
ANR	650327	PtrMemberAccess	daemonCore -> Register_Signal		650122	0					
ANR	650328	Identifier	daemonCore		650122	0					
ANR	650329	Identifier	Register_Signal		650122	1					
ANR	650330	ArgumentList	DC_SIGREMOVE		650122	1					
ANR	650331	Argument	DC_SIGREMOVE		650122	0					
ANR	650332	Identifier	DC_SIGREMOVE		650122	0					
ANR	650333	Argument	"""DC_SIGREMOVE"""		650122	1					
ANR	650334	PrimaryExpression	"""DC_SIGREMOVE"""		650122	0					
ANR	650335	Argument	( SignalHandlercpp ) & CStarter :: RemoteRemove		650122	2					
ANR	650336	CastExpression	( SignalHandlercpp ) & CStarter :: RemoteRemove		650122	0					
ANR	650337	CastTarget	SignalHandlercpp		650122	0					
ANR	650338	UnaryOperationExpression	& CStarter :: RemoteRemove		650122	1					
ANR	650339	UnaryOperator	&		650122	0					
ANR	650340	Identifier	CStarter :: RemoteRemove		650122	1					
ANR	650341	Argument	"""RemoteRemove"""		650122	3					
ANR	650342	PrimaryExpression	"""RemoteRemove"""		650122	0					
ANR	650343	Argument	this		650122	4					
ANR	650344	Identifier	this		650122	0					
ANR	650345	ExpressionStatement	"daemonCore -> Register_Signal ( SIGUSR1 , ""SIGUSR1"" , ( SignalHandlercpp ) & CStarter :: RemoteRemove , ""RemoteRemove"" , this )"	169:1:4788:4904	650122	16	True				
ANR	650346	CallExpression	"daemonCore -> Register_Signal ( SIGUSR1 , ""SIGUSR1"" , ( SignalHandlercpp ) & CStarter :: RemoteRemove , ""RemoteRemove"" , this )"		650122	0					
ANR	650347	Callee	daemonCore -> Register_Signal		650122	0					
ANR	650348	PtrMemberAccess	daemonCore -> Register_Signal		650122	0					
ANR	650349	Identifier	daemonCore		650122	0					
ANR	650350	Identifier	Register_Signal		650122	1					
ANR	650351	ArgumentList	SIGUSR1		650122	1					
ANR	650352	Argument	SIGUSR1		650122	0					
ANR	650353	Identifier	SIGUSR1		650122	0					
ANR	650354	Argument	"""SIGUSR1"""		650122	1					
ANR	650355	PrimaryExpression	"""SIGUSR1"""		650122	0					
ANR	650356	Argument	( SignalHandlercpp ) & CStarter :: RemoteRemove		650122	2					
ANR	650357	CastExpression	( SignalHandlercpp ) & CStarter :: RemoteRemove		650122	0					
ANR	650358	CastTarget	SignalHandlercpp		650122	0					
ANR	650359	UnaryOperationExpression	& CStarter :: RemoteRemove		650122	1					
ANR	650360	UnaryOperator	&		650122	0					
ANR	650361	Identifier	CStarter :: RemoteRemove		650122	1					
ANR	650362	Argument	"""RemoteRemove"""		650122	3					
ANR	650363	PrimaryExpression	"""RemoteRemove"""		650122	0					
ANR	650364	Argument	this		650122	4					
ANR	650365	Identifier	this		650122	0					
ANR	650366	ExpressionStatement	"daemonCore -> Register_Signal ( DC_SIGHOLD , ""DC_SIGHOLD"" , ( SignalHandlercpp ) & CStarter :: RemoteHold , ""RemoteHold"" , this )"	172:1:4907:5025	650122	17	True				
ANR	650367	CallExpression	"daemonCore -> Register_Signal ( DC_SIGHOLD , ""DC_SIGHOLD"" , ( SignalHandlercpp ) & CStarter :: RemoteHold , ""RemoteHold"" , this )"		650122	0					
ANR	650368	Callee	daemonCore -> Register_Signal		650122	0					
ANR	650369	PtrMemberAccess	daemonCore -> Register_Signal		650122	0					
ANR	650370	Identifier	daemonCore		650122	0					
ANR	650371	Identifier	Register_Signal		650122	1					
ANR	650372	ArgumentList	DC_SIGHOLD		650122	1					
ANR	650373	Argument	DC_SIGHOLD		650122	0					
ANR	650374	Identifier	DC_SIGHOLD		650122	0					
ANR	650375	Argument	"""DC_SIGHOLD"""		650122	1					
ANR	650376	PrimaryExpression	"""DC_SIGHOLD"""		650122	0					
ANR	650377	Argument	( SignalHandlercpp ) & CStarter :: RemoteHold		650122	2					
ANR	650378	CastExpression	( SignalHandlercpp ) & CStarter :: RemoteHold		650122	0					
ANR	650379	CastTarget	SignalHandlercpp		650122	0					
ANR	650380	UnaryOperationExpression	& CStarter :: RemoteHold		650122	1					
ANR	650381	UnaryOperator	&		650122	0					
ANR	650382	Identifier	CStarter :: RemoteHold		650122	1					
ANR	650383	Argument	"""RemoteHold"""		650122	3					
ANR	650384	PrimaryExpression	"""RemoteHold"""		650122	0					
ANR	650385	Argument	this		650122	4					
ANR	650386	Identifier	this		650122	0					
ANR	650387	ExpressionStatement	"daemonCore -> Register_Reaper ( ""Reaper"" , ( ReaperHandlercpp ) & CStarter :: Reaper , ""Reaper"" , this )"	175:1:5028:5120	650122	18	True				
ANR	650388	CallExpression	"daemonCore -> Register_Reaper ( ""Reaper"" , ( ReaperHandlercpp ) & CStarter :: Reaper , ""Reaper"" , this )"		650122	0					
ANR	650389	Callee	daemonCore -> Register_Reaper		650122	0					
ANR	650390	PtrMemberAccess	daemonCore -> Register_Reaper		650122	0					
ANR	650391	Identifier	daemonCore		650122	0					
ANR	650392	Identifier	Register_Reaper		650122	1					
ANR	650393	ArgumentList	"""Reaper"""		650122	1					
ANR	650394	Argument	"""Reaper"""		650122	0					
ANR	650395	PrimaryExpression	"""Reaper"""		650122	0					
ANR	650396	Argument	( ReaperHandlercpp ) & CStarter :: Reaper		650122	1					
ANR	650397	CastExpression	( ReaperHandlercpp ) & CStarter :: Reaper		650122	0					
ANR	650398	CastTarget	ReaperHandlercpp		650122	0					
ANR	650399	UnaryOperationExpression	& CStarter :: Reaper		650122	1					
ANR	650400	UnaryOperator	&		650122	0					
ANR	650401	Identifier	CStarter :: Reaper		650122	1					
ANR	650402	Argument	"""Reaper"""		650122	2					
ANR	650403	PrimaryExpression	"""Reaper"""		650122	0					
ANR	650404	Argument	this		650122	3					
ANR	650405	Identifier	this		650122	0					
ANR	650406	ExpressionStatement	"daemonCore -> Register_Command ( CA_CMD , ""CA_CMD"" , ( CommandHandlercpp ) & CStarter :: classadCommand , ""CStarter::classadCommand"" , this , WRITE )"	188:1:5717:5871	650122	19	True				
ANR	650407	CallExpression	"daemonCore -> Register_Command ( CA_CMD , ""CA_CMD"" , ( CommandHandlercpp ) & CStarter :: classadCommand , ""CStarter::classadCommand"" , this , WRITE )"		650122	0					
ANR	650408	Callee	daemonCore -> Register_Command		650122	0					
ANR	650409	PtrMemberAccess	daemonCore -> Register_Command		650122	0					
ANR	650410	Identifier	daemonCore		650122	0					
ANR	650411	Identifier	Register_Command		650122	1					
ANR	650412	ArgumentList	CA_CMD		650122	1					
ANR	650413	Argument	CA_CMD		650122	0					
ANR	650414	Identifier	CA_CMD		650122	0					
ANR	650415	Argument	"""CA_CMD"""		650122	1					
ANR	650416	PrimaryExpression	"""CA_CMD"""		650122	0					
ANR	650417	Argument	( CommandHandlercpp ) & CStarter :: classadCommand		650122	2					
ANR	650418	CastExpression	( CommandHandlercpp ) & CStarter :: classadCommand		650122	0					
ANR	650419	CastTarget	CommandHandlercpp		650122	0					
ANR	650420	UnaryOperationExpression	& CStarter :: classadCommand		650122	1					
ANR	650421	UnaryOperator	&		650122	0					
ANR	650422	Identifier	CStarter :: classadCommand		650122	1					
ANR	650423	Argument	"""CStarter::classadCommand"""		650122	3					
ANR	650424	PrimaryExpression	"""CStarter::classadCommand"""		650122	0					
ANR	650425	Argument	this		650122	4					
ANR	650426	Identifier	this		650122	0					
ANR	650427	Argument	WRITE		650122	5					
ANR	650428	Identifier	WRITE		650122	0					
ANR	650429	ExpressionStatement	"daemonCore -> Register_Command ( UPDATE_GSI_CRED , ""UPDATE_GSI_CRED"" , ( CommandHandlercpp ) & CStarter :: updateX509Proxy , ""CStarter::updateX509Proxy"" , this , WRITE )"	192:1:5874:6048	650122	20	True				
ANR	650430	CallExpression	"daemonCore -> Register_Command ( UPDATE_GSI_CRED , ""UPDATE_GSI_CRED"" , ( CommandHandlercpp ) & CStarter :: updateX509Proxy , ""CStarter::updateX509Proxy"" , this , WRITE )"		650122	0					
ANR	650431	Callee	daemonCore -> Register_Command		650122	0					
ANR	650432	PtrMemberAccess	daemonCore -> Register_Command		650122	0					
ANR	650433	Identifier	daemonCore		650122	0					
ANR	650434	Identifier	Register_Command		650122	1					
ANR	650435	ArgumentList	UPDATE_GSI_CRED		650122	1					
ANR	650436	Argument	UPDATE_GSI_CRED		650122	0					
ANR	650437	Identifier	UPDATE_GSI_CRED		650122	0					
ANR	650438	Argument	"""UPDATE_GSI_CRED"""		650122	1					
ANR	650439	PrimaryExpression	"""UPDATE_GSI_CRED"""		650122	0					
ANR	650440	Argument	( CommandHandlercpp ) & CStarter :: updateX509Proxy		650122	2					
ANR	650441	CastExpression	( CommandHandlercpp ) & CStarter :: updateX509Proxy		650122	0					
ANR	650442	CastTarget	CommandHandlercpp		650122	0					
ANR	650443	UnaryOperationExpression	& CStarter :: updateX509Proxy		650122	1					
ANR	650444	UnaryOperator	&		650122	0					
ANR	650445	Identifier	CStarter :: updateX509Proxy		650122	1					
ANR	650446	Argument	"""CStarter::updateX509Proxy"""		650122	3					
ANR	650447	PrimaryExpression	"""CStarter::updateX509Proxy"""		650122	0					
ANR	650448	Argument	this		650122	4					
ANR	650449	Identifier	this		650122	0					
ANR	650450	Argument	WRITE		650122	5					
ANR	650451	Identifier	WRITE		650122	0					
ANR	650452	ExpressionStatement	"daemonCore -> Register_Command ( DELEGATE_GSI_CRED_STARTER , ""DELEGATE_GSI_CRED_STARTER"" , ( CommandHandlercpp ) & CStarter :: updateX509Proxy , ""CStarter::updateX509Proxy"" , this , WRITE )"	196:1:6051:6253	650122	21	True				
ANR	650453	CallExpression	"daemonCore -> Register_Command ( DELEGATE_GSI_CRED_STARTER , ""DELEGATE_GSI_CRED_STARTER"" , ( CommandHandlercpp ) & CStarter :: updateX509Proxy , ""CStarter::updateX509Proxy"" , this , WRITE )"		650122	0					
ANR	650454	Callee	daemonCore -> Register_Command		650122	0					
ANR	650455	PtrMemberAccess	daemonCore -> Register_Command		650122	0					
ANR	650456	Identifier	daemonCore		650122	0					
ANR	650457	Identifier	Register_Command		650122	1					
ANR	650458	ArgumentList	DELEGATE_GSI_CRED_STARTER		650122	1					
ANR	650459	Argument	DELEGATE_GSI_CRED_STARTER		650122	0					
ANR	650460	Identifier	DELEGATE_GSI_CRED_STARTER		650122	0					
ANR	650461	Argument	"""DELEGATE_GSI_CRED_STARTER"""		650122	1					
ANR	650462	PrimaryExpression	"""DELEGATE_GSI_CRED_STARTER"""		650122	0					
ANR	650463	Argument	( CommandHandlercpp ) & CStarter :: updateX509Proxy		650122	2					
ANR	650464	CastExpression	( CommandHandlercpp ) & CStarter :: updateX509Proxy		650122	0					
ANR	650465	CastTarget	CommandHandlercpp		650122	0					
ANR	650466	UnaryOperationExpression	& CStarter :: updateX509Proxy		650122	1					
ANR	650467	UnaryOperator	&		650122	0					
ANR	650468	Identifier	CStarter :: updateX509Proxy		650122	1					
ANR	650469	Argument	"""CStarter::updateX509Proxy"""		650122	3					
ANR	650470	PrimaryExpression	"""CStarter::updateX509Proxy"""		650122	0					
ANR	650471	Argument	this		650122	4					
ANR	650472	Identifier	this		650122	0					
ANR	650473	Argument	WRITE		650122	5					
ANR	650474	Identifier	WRITE		650122	0					
ANR	650475	ExpressionStatement	"daemonCore -> Register_Command ( STARTER_HOLD_JOB , ""STARTER_HOLD_JOB"" , ( CommandHandlercpp ) & CStarter :: remoteHoldCommand , ""CStarter::remoteHoldCommand"" , this , DAEMON )"	201:1:6256:6445	650122	22	True				
ANR	650476	CallExpression	"daemonCore -> Register_Command ( STARTER_HOLD_JOB , ""STARTER_HOLD_JOB"" , ( CommandHandlercpp ) & CStarter :: remoteHoldCommand , ""CStarter::remoteHoldCommand"" , this , DAEMON )"		650122	0					
ANR	650477	Callee	daemonCore -> Register_Command		650122	0					
ANR	650478	PtrMemberAccess	daemonCore -> Register_Command		650122	0					
ANR	650479	Identifier	daemonCore		650122	0					
ANR	650480	Identifier	Register_Command		650122	1					
ANR	650481	ArgumentList	STARTER_HOLD_JOB		650122	1					
ANR	650482	Argument	STARTER_HOLD_JOB		650122	0					
ANR	650483	Identifier	STARTER_HOLD_JOB		650122	0					
ANR	650484	Argument	"""STARTER_HOLD_JOB"""		650122	1					
ANR	650485	PrimaryExpression	"""STARTER_HOLD_JOB"""		650122	0					
ANR	650486	Argument	( CommandHandlercpp ) & CStarter :: remoteHoldCommand		650122	2					
ANR	650487	CastExpression	( CommandHandlercpp ) & CStarter :: remoteHoldCommand		650122	0					
ANR	650488	CastTarget	CommandHandlercpp		650122	0					
ANR	650489	UnaryOperationExpression	& CStarter :: remoteHoldCommand		650122	1					
ANR	650490	UnaryOperator	&		650122	0					
ANR	650491	Identifier	CStarter :: remoteHoldCommand		650122	1					
ANR	650492	Argument	"""CStarter::remoteHoldCommand"""		650122	3					
ANR	650493	PrimaryExpression	"""CStarter::remoteHoldCommand"""		650122	0					
ANR	650494	Argument	this		650122	4					
ANR	650495	Identifier	this		650122	0					
ANR	650496	Argument	DAEMON		650122	5					
ANR	650497	Identifier	DAEMON		650122	0					
ANR	650498	ExpressionStatement	"daemonCore -> Register_Command ( CREATE_JOB_OWNER_SEC_SESSION , ""CREATE_JOB_OWNER_SEC_SESSION"" , ( CommandHandlercpp ) & CStarter :: createJobOwnerSecSession , ""CStarter::createJobOwnerSecSession"" , this , DAEMON )"	206:1:6448:6675	650122	23	True				
ANR	650499	CallExpression	"daemonCore -> Register_Command ( CREATE_JOB_OWNER_SEC_SESSION , ""CREATE_JOB_OWNER_SEC_SESSION"" , ( CommandHandlercpp ) & CStarter :: createJobOwnerSecSession , ""CStarter::createJobOwnerSecSession"" , this , DAEMON )"		650122	0					
ANR	650500	Callee	daemonCore -> Register_Command		650122	0					
ANR	650501	PtrMemberAccess	daemonCore -> Register_Command		650122	0					
ANR	650502	Identifier	daemonCore		650122	0					
ANR	650503	Identifier	Register_Command		650122	1					
ANR	650504	ArgumentList	CREATE_JOB_OWNER_SEC_SESSION		650122	1					
ANR	650505	Argument	CREATE_JOB_OWNER_SEC_SESSION		650122	0					
ANR	650506	Identifier	CREATE_JOB_OWNER_SEC_SESSION		650122	0					
ANR	650507	Argument	"""CREATE_JOB_OWNER_SEC_SESSION"""		650122	1					
ANR	650508	PrimaryExpression	"""CREATE_JOB_OWNER_SEC_SESSION"""		650122	0					
ANR	650509	Argument	( CommandHandlercpp ) & CStarter :: createJobOwnerSecSession		650122	2					
ANR	650510	CastExpression	( CommandHandlercpp ) & CStarter :: createJobOwnerSecSession		650122	0					
ANR	650511	CastTarget	CommandHandlercpp		650122	0					
ANR	650512	UnaryOperationExpression	& CStarter :: createJobOwnerSecSession		650122	1					
ANR	650513	UnaryOperator	&		650122	0					
ANR	650514	Identifier	CStarter :: createJobOwnerSecSession		650122	1					
ANR	650515	Argument	"""CStarter::createJobOwnerSecSession"""		650122	3					
ANR	650516	PrimaryExpression	"""CStarter::createJobOwnerSecSession"""		650122	0					
ANR	650517	Argument	this		650122	4					
ANR	650518	Identifier	this		650122	0					
ANR	650519	Argument	DAEMON		650122	5					
ANR	650520	Identifier	DAEMON		650122	0					
ANR	650521	ExpressionStatement	"daemonCore -> Register_Command ( START_SSHD , ""START_SSHD"" , ( CommandHandlercpp ) & CStarter :: startSSHD , ""CStarter::startSSHD"" , this , READ )"	214:1:6809:6968	650122	24	True				
ANR	650522	CallExpression	"daemonCore -> Register_Command ( START_SSHD , ""START_SSHD"" , ( CommandHandlercpp ) & CStarter :: startSSHD , ""CStarter::startSSHD"" , this , READ )"		650122	0					
ANR	650523	Callee	daemonCore -> Register_Command		650122	0					
ANR	650524	PtrMemberAccess	daemonCore -> Register_Command		650122	0					
ANR	650525	Identifier	daemonCore		650122	0					
ANR	650526	Identifier	Register_Command		650122	1					
ANR	650527	ArgumentList	START_SSHD		650122	1					
ANR	650528	Argument	START_SSHD		650122	0					
ANR	650529	Identifier	START_SSHD		650122	0					
ANR	650530	Argument	"""START_SSHD"""		650122	1					
ANR	650531	PrimaryExpression	"""START_SSHD"""		650122	0					
ANR	650532	Argument	( CommandHandlercpp ) & CStarter :: startSSHD		650122	2					
ANR	650533	CastExpression	( CommandHandlercpp ) & CStarter :: startSSHD		650122	0					
ANR	650534	CastTarget	CommandHandlercpp		650122	0					
ANR	650535	UnaryOperationExpression	& CStarter :: startSSHD		650122	1					
ANR	650536	UnaryOperator	&		650122	0					
ANR	650537	Identifier	CStarter :: startSSHD		650122	1					
ANR	650538	Argument	"""CStarter::startSSHD"""		650122	3					
ANR	650539	PrimaryExpression	"""CStarter::startSSHD"""		650122	0					
ANR	650540	Argument	this		650122	4					
ANR	650541	Identifier	this		650122	0					
ANR	650542	Argument	READ		650122	5					
ANR	650543	Identifier	READ		650122	0					
ANR	650544	IfStatement	if ( ! jic -> init ( ) )		650122	25					
ANR	650545	Condition	! jic -> init ( )	220:5:7015:7027	650122	0	True				
ANR	650546	UnaryOperationExpression	! jic -> init ( )		650122	0					
ANR	650547	UnaryOperator	!		650122	0					
ANR	650548	CallExpression	jic -> init ( )		650122	1					
ANR	650549	Callee	jic -> init		650122	0					
ANR	650550	PtrMemberAccess	jic -> init		650122	0					
ANR	650551	Identifier	jic		650122	0					
ANR	650552	Identifier	init		650122	1					
ANR	650553	ArgumentList			650122	1					
ANR	650554	CompoundStatement		112:21:4324:4324	650122	1					
ANR	650555	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to initialize JobInfoCommunicator, aborting\\n"" )"	221:2:7035:7116	650122	0	True				
ANR	650556	CallExpression	"dprintf ( D_ALWAYS , ""Failed to initialize JobInfoCommunicator, aborting\\n"" )"		650122	0					
ANR	650557	Callee	dprintf		650122	0					
ANR	650558	Identifier	dprintf		650122	0					
ANR	650559	ArgumentList	D_ALWAYS		650122	1					
ANR	650560	Argument	D_ALWAYS		650122	0					
ANR	650561	Identifier	D_ALWAYS		650122	0					
ANR	650562	Argument	"""Failed to initialize JobInfoCommunicator, aborting\\n"""		650122	1					
ANR	650563	PrimaryExpression	"""Failed to initialize JobInfoCommunicator, aborting\\n"""		650122	0					
ANR	650564	ReturnStatement	return false ;	223:2:7120:7132	650122	1	True				
ANR	650565	Identifier	false		650122	0					
ANR	650566	ExpressionStatement	sysapi_set_resource_limits ( jic -> getStackSize ( ) )	226:1:7182:7229	650122	26	True				
ANR	650567	CallExpression	sysapi_set_resource_limits ( jic -> getStackSize ( ) )		650122	0					
ANR	650568	Callee	sysapi_set_resource_limits		650122	0					
ANR	650569	Identifier	sysapi_set_resource_limits		650122	0					
ANR	650570	ArgumentList	jic -> getStackSize ( )		650122	1					
ANR	650571	Argument	jic -> getStackSize ( )		650122	0					
ANR	650572	CallExpression	jic -> getStackSize ( )		650122	0					
ANR	650573	Callee	jic -> getStackSize		650122	0					
ANR	650574	PtrMemberAccess	jic -> getStackSize		650122	0					
ANR	650575	Identifier	jic		650122	0					
ANR	650576	Identifier	getStackSize		650122	1					
ANR	650577	ArgumentList			650122	1					
ANR	650578	ExpressionStatement	jic -> setupJobEnvironment ( )	233:1:7514:7540	650122	27	True				
ANR	650579	CallExpression	jic -> setupJobEnvironment ( )		650122	0					
ANR	650580	Callee	jic -> setupJobEnvironment		650122	0					
ANR	650581	PtrMemberAccess	jic -> setupJobEnvironment		650122	0					
ANR	650582	Identifier	jic		650122	0					
ANR	650583	Identifier	setupJobEnvironment		650122	1					
ANR	650584	ArgumentList			650122	1					
ANR	650585	ReturnStatement	return true ;	234:1:7543:7554	650122	28	True				
ANR	650586	Identifier	true		650122	0					
ANR	650587	ReturnType	bool		650122	1					
ANR	650588	Identifier	CStarter :: Init		650122	2					
ANR	650589	ParameterList	"JobInfoCommunicator * my_jic , const char * original_cwd , bool is_gsh , int stdin_fd , int stdout_fd , int stderr_fd"		650122	3					
ANR	650590	Parameter	JobInfoCommunicator * my_jic	106:16:2584:2610	650122	0	True				
ANR	650591	ParameterType	JobInfoCommunicator *		650122	0					
ANR	650592	Identifier	my_jic		650122	1					
ANR	650593	Parameter	const char * original_cwd	106:45:2613:2636	650122	1	True				
ANR	650594	ParameterType	const char *		650122	0					
ANR	650595	Identifier	original_cwd		650122	1					
ANR	650596	Parameter	bool is_gsh	107:4:2643:2653	650122	2	True				
ANR	650597	ParameterType	bool		650122	0					
ANR	650598	Identifier	is_gsh		650122	1					
ANR	650599	Parameter	int stdin_fd	107:17:2656:2667	650122	3	True				
ANR	650600	ParameterType	int		650122	0					
ANR	650601	Identifier	stdin_fd		650122	1					
ANR	650602	Parameter	int stdout_fd	107:31:2670:2682	650122	4	True				
ANR	650603	ParameterType	int		650122	0					
ANR	650604	Identifier	stdout_fd		650122	1					
ANR	650605	Parameter	int stderr_fd	108:4:2690:2702	650122	5	True				
ANR	650606	ParameterType	int		650122	0					
ANR	650607	Identifier	stderr_fd		650122	1					
ANR	650608	CFGEntryNode	ENTRY		650122		True				
ANR	650609	CFGExitNode	EXIT		650122		True				
ANR	650610	Symbol	this -> orig_cwd		650122						
ANR	650611	Symbol	jic		650122						
ANR	650612	Symbol	jic -> getStackSize		650122						
ANR	650613	Symbol	STARTER_HOLD_JOB		650122						
ANR	650614	Symbol	DC_SIGHOLD		650122						
ANR	650615	Symbol	DC_SIGSOFTKILL		650122						
ANR	650616	Symbol	DC_SIGCONTINUE		650122						
ANR	650617	Symbol	is_gridshell		650122						
ANR	650618	Symbol	& CStarter :: remoteHoldCommand		650122						
ANR	650619	Symbol	& CStarter :: RemoteShutdownGraceful		650122						
ANR	650620	Symbol	starter_stdout_fd		650122						
ANR	650621	Symbol	jic -> init		650122						
ANR	650622	Symbol	& CStarter :: RemoteContinue		650122						
ANR	650623	Symbol	my_jic		650122						
ANR	650624	Symbol	& CStarter :: classadCommand		650122						
ANR	650625	Symbol	this		650122						
ANR	650626	Symbol	SIGUSR1		650122						
ANR	650627	Symbol	CA_CMD		650122						
ANR	650628	Symbol	READ		650122						
ANR	650629	Symbol	stderr_fd		650122						
ANR	650630	Symbol	WorkingDir		650122						
ANR	650631	Symbol	& CStarter :: Reaper		650122						
ANR	650632	Symbol	this -> is_gridshell		650122						
ANR	650633	Symbol	* daemonCore		650122						
ANR	650634	Symbol	true		650122						
ANR	650635	Symbol	DAEMON		650122						
ANR	650636	Symbol	& CStarter :: RemoteSuspend		650122						
ANR	650637	Symbol	& CStarter :: RemoteHold		650122						
ANR	650638	Symbol	starter_stdin_fd		650122						
ANR	650639	Symbol	Execute		650122						
ANR	650640	Symbol	& CStarter :: createJobOwnerSecSession		650122						
ANR	650641	Symbol	daemonCore -> getpid		650122						
ANR	650642	Symbol	is_gsh		650122						
ANR	650643	Symbol	stdin_fd		650122						
ANR	650644	Symbol	WRITE		650122						
ANR	650645	Symbol	CREATE_JOB_OWNER_SEC_SESSION		650122						
ANR	650646	Symbol	& CStarter :: updateX509Proxy		650122						
ANR	650647	Symbol	START_SSHD		650122						
ANR	650648	Symbol	DC_SIGSUSPEND		650122						
ANR	650649	Symbol	& CStarter :: RemoteRemove		650122						
ANR	650650	Symbol	& CStarter :: RemoteShutdownFast		650122						
ANR	650651	Symbol	daemonCore		650122						
ANR	650652	Symbol	DELEGATE_GSI_CRED_STARTER		650122						
ANR	650653	Symbol	DC_SIGREMOVE		650122						
ANR	650654	Symbol	DC_SIGPCKPT		650122						
ANR	650655	Symbol	DIR_DELIM_CHAR		650122						
ANR	650656	Symbol	D_ALWAYS		650122						
ANR	650657	Symbol	false		650122						
ANR	650658	Symbol	starter_stderr_fd		650122						
ANR	650659	Symbol	& CStarter :: startSSHD		650122						
ANR	650660	Symbol	* jic		650122						
ANR	650661	Symbol	* this		650122						
ANR	650662	Symbol	original_cwd		650122						
ANR	650663	Symbol	DC_SIGHARDKILL		650122						
ANR	650664	Symbol	& CStarter :: RemotePeriodicCkpt		650122						
ANR	650665	Symbol	stdout_fd		650122						
ANR	650666	Symbol	UPDATE_GSI_CRED		650122						
ANR	650667	Symbol	strdup		650122						
ANR	650668	Function	CStarter :: StarterExit	238:0:7560:7750							
ANR	650669	FunctionDef	CStarter :: StarterExit (int code)		650668	0					
ANR	650670	CompoundStatement		240:0:7599:7750	650668	0					
ANR	650671	ExpressionStatement	FinalCleanup ( )	241:1:7602:7616	650668	0	True				
ANR	650672	CallExpression	FinalCleanup ( )		650668	0					
ANR	650673	Callee	FinalCleanup		650668	0					
ANR	650674	Identifier	FinalCleanup		650668	0					
ANR	650675	ArgumentList			650668	1					
ANR	650676	IfStatement	"if ( GetEnv ( ""CONDOR_GLEXEC_STARTER_CLEANUP_FLAG"" ) )"		650668	1					
ANR	650677	Condition	"GetEnv ( ""CONDOR_GLEXEC_STARTER_CLEANUP_FLAG"" )"	243:6:7644:7689	650668	0	True				
ANR	650678	CallExpression	"GetEnv ( ""CONDOR_GLEXEC_STARTER_CLEANUP_FLAG"" )"		650668	0					
ANR	650679	Callee	GetEnv		650668	0					
ANR	650680	Identifier	GetEnv		650668	0					
ANR	650681	ArgumentList	"""CONDOR_GLEXEC_STARTER_CLEANUP_FLAG"""		650668	1					
ANR	650682	Argument	"""CONDOR_GLEXEC_STARTER_CLEANUP_FLAG"""		650668	0					
ANR	650683	PrimaryExpression	"""CONDOR_GLEXEC_STARTER_CLEANUP_FLAG"""		650668	0					
ANR	650684	CompoundStatement		4:55:93:93	650668	1					
ANR	650685	ExpressionStatement	exitAfterGlexec ( code )	244:2:7697:7720	650668	0	True				
ANR	650686	CallExpression	exitAfterGlexec ( code )		650668	0					
ANR	650687	Callee	exitAfterGlexec		650668	0					
ANR	650688	Identifier	exitAfterGlexec		650668	0					
ANR	650689	ArgumentList	code		650668	1					
ANR	650690	Argument	code		650668	0					
ANR	650691	Identifier	code		650668	0					
ANR	650692	ExpressionStatement	DC_Exit ( code )	247:1:7733:7748	650668	2	True				
ANR	650693	CallExpression	DC_Exit ( code )		650668	0					
ANR	650694	Callee	DC_Exit		650668	0					
ANR	650695	Identifier	DC_Exit		650668	0					
ANR	650696	ArgumentList	code		650668	1					
ANR	650697	Argument	code		650668	0					
ANR	650698	Identifier	code		650668	0					
ANR	650699	ReturnType	void		650668	1					
ANR	650700	Identifier	CStarter :: StarterExit		650668	2					
ANR	650701	ParameterList	int code		650668	3					
ANR	650702	Parameter	int code	239:23:7588:7595	650668	0	True				
ANR	650703	ParameterType	int		650668	0					
ANR	650704	Identifier	code		650668	1					
ANR	650705	CFGEntryNode	ENTRY		650668		True				
ANR	650706	CFGExitNode	EXIT		650668		True				
ANR	650707	Symbol	code		650668						
ANR	650708	Symbol	GetEnv		650668						
ANR	650709	Function	CStarter :: FinalCleanup	250:0:7753:7833							
ANR	650710	FunctionDef	CStarter :: FinalCleanup ()		650709	0					
ANR	650711	CompoundStatement		251:0:7783:7833	650709	0					
ANR	650712	ExpressionStatement	RemoveRecoveryFile ( )	252:1:7786:7806	650709	0	True				
ANR	650713	CallExpression	RemoveRecoveryFile ( )		650709	0					
ANR	650714	Callee	RemoveRecoveryFile		650709	0					
ANR	650715	Identifier	RemoveRecoveryFile		650709	0					
ANR	650716	ArgumentList			650709	1					
ANR	650717	ExpressionStatement	removeTempExecuteDir ( )	253:1:7809:7831	650709	1	True				
ANR	650718	CallExpression	removeTempExecuteDir ( )		650709	0					
ANR	650719	Callee	removeTempExecuteDir		650709	0					
ANR	650720	Identifier	removeTempExecuteDir		650709	0					
ANR	650721	ArgumentList			650709	1					
ANR	650722	ReturnType	void		650709	1					
ANR	650723	Identifier	CStarter :: FinalCleanup		650709	2					
ANR	650724	ParameterList			650709	3					
ANR	650725	CFGEntryNode	ENTRY		650709		True				
ANR	650726	CFGExitNode	EXIT		650709		True				
ANR	650727	Function	CStarter :: Config	257:0:7837:8934							
ANR	650728	FunctionDef	CStarter :: Config ()		650727	0					
ANR	650729	CompoundStatement		259:0:7861:8934	650727	0					
ANR	650730	IfStatement	if ( Execute )		650727	0					
ANR	650731	Condition	Execute	260:5:7868:7874	650727	0	True				
ANR	650732	Identifier	Execute		650727	0					
ANR	650733	CompoundStatement		2:15:16:16	650727	1					
ANR	650734	ExpressionStatement	free ( Execute )	261:2:7882:7897	650727	0	True				
ANR	650735	CallExpression	free ( Execute )		650727	0					
ANR	650736	Callee	free		650727	0					
ANR	650737	Identifier	free		650727	0					
ANR	650738	ArgumentList	Execute		650727	1					
ANR	650739	Argument	Execute		650727	0					
ANR	650740	Identifier	Execute		650727	0					
ANR	650741	IfStatement	"if ( ( Execute = param ( ""EXECUTE"" ) ) == NULL )"		650727	1					
ANR	650742	Condition	"( Execute = param ( ""EXECUTE"" ) ) == NULL"	266:5:8081:8116	650727	0	True				
ANR	650743	EqualityExpression	"( Execute = param ( ""EXECUTE"" ) ) == NULL"		650727	0		==			
ANR	650744	AssignmentExpression	"Execute = param ( ""EXECUTE"" )"		650727	0		=			
ANR	650745	Identifier	Execute		650727	0					
ANR	650746	CallExpression	"param ( ""EXECUTE"" )"		650727	1					
ANR	650747	Callee	param		650727	0					
ANR	650748	Identifier	param		650727	0					
ANR	650749	ArgumentList	"""EXECUTE"""		650727	1					
ANR	650750	Argument	"""EXECUTE"""		650727	0					
ANR	650751	PrimaryExpression	"""EXECUTE"""		650727	0					
ANR	650752	Identifier	NULL		650727	1					
ANR	650753	CompoundStatement		8:44:258:258	650727	1					
ANR	650754	IfStatement	if ( is_gridshell )		650727	0					
ANR	650755	Condition	is_gridshell	267:6:8128:8139	650727	0	True				
ANR	650756	Identifier	is_gridshell		650727	0					
ANR	650757	CompoundStatement		9:21:281:281	650727	1					
ANR	650758	ExpressionStatement	Execute = strdup ( orig_cwd )	268:3:8148:8176	650727	0	True				
ANR	650759	AssignmentExpression	Execute = strdup ( orig_cwd )		650727	0		=			
ANR	650760	Identifier	Execute		650727	0					
ANR	650761	CallExpression	strdup ( orig_cwd )		650727	1					
ANR	650762	Callee	strdup		650727	0					
ANR	650763	Identifier	strdup		650727	0					
ANR	650764	ArgumentList	orig_cwd		650727	1					
ANR	650765	Argument	orig_cwd		650727	0					
ANR	650766	Identifier	orig_cwd		650727	0					
ANR	650767	ElseStatement	else		650727	0					
ANR	650768	CompoundStatement		11:9:325:325	650727	0					
ANR	650769	ExpressionStatement	"EXCEPT ( ""Execute directory not specified in config file."" )"	270:3:8192:8249	650727	0	True				
ANR	650770	CallExpression	"EXCEPT ( ""Execute directory not specified in config file."" )"		650727	0					
ANR	650771	Callee	EXCEPT		650727	0					
ANR	650772	Identifier	EXCEPT		650727	0					
ANR	650773	ArgumentList	"""Execute directory not specified in config file."""		650727	1					
ANR	650774	Argument	"""Execute directory not specified in config file."""		650727	0					
ANR	650775	PrimaryExpression	"""Execute directory not specified in config file."""		650727	0					
ANR	650776	IfStatement	if ( ! m_configured )		650727	2					
ANR	650777	Condition	! m_configured	273:5:8263:8275	650727	0	True				
ANR	650778	UnaryOperationExpression	! m_configured		650727	0					
ANR	650779	UnaryOperator	!		650727	0					
ANR	650780	Identifier	m_configured		650727	1					
ANR	650781	CompoundStatement		17:2:451:495	650727	1					
ANR	650782	IdentifierDeclStatement	bool ps = privsep_enabled ( ) ;	274:2:8282:8309	650727	0	True				
ANR	650783	IdentifierDecl	ps = privsep_enabled ( )		650727	0					
ANR	650784	IdentifierDeclType	bool		650727	0					
ANR	650785	Identifier	ps		650727	1					
ANR	650786	AssignmentExpression	ps = privsep_enabled ( )		650727	2		=			
ANR	650787	Identifier	ps		650727	0					
ANR	650788	CallExpression	privsep_enabled ( )		650727	1					
ANR	650789	Callee	privsep_enabled		650727	0					
ANR	650790	Identifier	privsep_enabled		650727	0					
ANR	650791	ArgumentList			650727	1					
ANR	650792	IdentifierDeclStatement	"bool gl = param_boolean ( ""GLEXEC_JOB"" , false ) ;"	275:2:8313:8357	650727	1	True				
ANR	650793	IdentifierDecl	"gl = param_boolean ( ""GLEXEC_JOB"" , false )"		650727	0					
ANR	650794	IdentifierDeclType	bool		650727	0					
ANR	650795	Identifier	gl		650727	1					
ANR	650796	AssignmentExpression	"gl = param_boolean ( ""GLEXEC_JOB"" , false )"		650727	2		=			
ANR	650797	Identifier	gl		650727	0					
ANR	650798	CallExpression	"param_boolean ( ""GLEXEC_JOB"" , false )"		650727	1					
ANR	650799	Callee	param_boolean		650727	0					
ANR	650800	Identifier	param_boolean		650727	0					
ANR	650801	ArgumentList	"""GLEXEC_JOB"""		650727	1					
ANR	650802	Argument	"""GLEXEC_JOB"""		650727	0					
ANR	650803	PrimaryExpression	"""GLEXEC_JOB"""		650727	0					
ANR	650804	Argument	false		650727	1					
ANR	650805	Identifier	false		650727	0					
ANR	650806	Statement	dprintf	277:2:8381:8387	650727	2	True				
ANR	650807	Statement	(	277:9:8388:8388	650727	3	True				
ANR	650808	Statement	D_ALWAYS	277:10:8389:8396	650727	4	True				
ANR	650809	Statement	","	277:18:8397:8397	650727	5	True				
ANR	650810	Statement	"""GLEXEC_JOB not supported on this platform; """	278:10:8409:8453	650727	6	True				
ANR	650811	Statement	"""ignoring\\n"""	279:14:8469:8480	650727	7	True				
ANR	650812	Statement	)	279:26:8481:8481	650727	8	True				
ANR	650813	ExpressionStatement		279:27:8482:8482	650727	9	True				
ANR	650814	ExpressionStatement	gl = false	280:2:8486:8496	650727	10	True				
ANR	650815	AssignmentExpression	gl = false		650727	0		=			
ANR	650816	Identifier	gl		650727	0					
ANR	650817	Identifier	false		650727	1					
ANR	650818	IfStatement	if ( ps && gl )		650727	11					
ANR	650819	Condition	ps && gl	282:6:8511:8518	650727	0	True				
ANR	650820	AndExpression	ps && gl		650727	0		&&			
ANR	650821	Identifier	ps		650727	0					
ANR	650822	Identifier	gl		650727	1					
ANR	650823	CompoundStatement		24:16:659:659	650727	1					
ANR	650824	Statement	EXCEPT	283:3:8526:8531	650727	0	True				
ANR	650825	Statement	(	283:9:8532:8532	650727	1	True				
ANR	650826	Statement	"""can't support both """	283:10:8533:8553	650727	2	True				
ANR	650827	Statement	"""PRIVSEP_ENABLED and GLEXEC_JOB"""	284:14:8569:8600	650727	3	True				
ANR	650828	Statement	)	284:46:8601:8601	650727	4	True				
ANR	650829	ExpressionStatement		284:47:8602:8602	650727	5	True				
ANR	650830	IfStatement	if ( ps )		650727	12					
ANR	650831	Condition	ps	286:6:8614:8615	650727	0	True				
ANR	650832	Identifier	ps		650727	0					
ANR	650833	CompoundStatement		28:10:756:756	650727	1					
ANR	650834	Statement	m_privsep_helper	287:3:8623:8638	650727	0	True				
ANR	650835	Statement	=	287:20:8640:8640	650727	1	True				
ANR	650836	Statement	new	287:22:8642:8644	650727	2	True				
ANR	650837	ExpressionStatement	CondorPrivSepHelper	287:26:8646:8665	650727	3	True				
ANR	650838	Identifier	CondorPrivSepHelper		650727	0					
ANR	650839	ExpressionStatement	ASSERT ( m_privsep_helper != NULL )	288:3:8670:8702	650727	4	True				
ANR	650840	CallExpression	ASSERT ( m_privsep_helper != NULL )		650727	0					
ANR	650841	Callee	ASSERT		650727	0					
ANR	650842	Identifier	ASSERT		650727	0					
ANR	650843	ArgumentList	m_privsep_helper != NULL		650727	1					
ANR	650844	Argument	m_privsep_helper != NULL		650727	0					
ANR	650845	EqualityExpression	m_privsep_helper != NULL		650727	0		!=			
ANR	650846	Identifier	m_privsep_helper		650727	0					
ANR	650847	Identifier	NULL		650727	1					
ANR	650848	ElseStatement	else		650727	0					
ANR	650849	IfStatement	if ( gl )		650727	0					
ANR	650850	Condition	gl	290:11:8719:8720	650727	0	True				
ANR	650851	Identifier	gl		650727	0					
ANR	650852	CompoundStatement		32:15:861:861	650727	1					
ANR	650853	Statement	m_privsep_helper	292:3:8747:8762	650727	0	True				
ANR	650854	Statement	=	292:20:8764:8764	650727	1	True				
ANR	650855	Statement	new	292:22:8766:8768	650727	2	True				
ANR	650856	ExpressionStatement	GLExecPrivSepHelper	292:26:8770:8789	650727	3	True				
ANR	650857	Identifier	GLExecPrivSepHelper		650727	0					
ANR	650858	ExpressionStatement	ASSERT ( m_privsep_helper != NULL )	293:3:8794:8826	650727	4	True				
ANR	650859	CallExpression	ASSERT ( m_privsep_helper != NULL )		650727	0					
ANR	650860	Callee	ASSERT		650727	0					
ANR	650861	Identifier	ASSERT		650727	0					
ANR	650862	ArgumentList	m_privsep_helper != NULL		650727	1					
ANR	650863	Argument	m_privsep_helper != NULL		650727	0					
ANR	650864	EqualityExpression	m_privsep_helper != NULL		650727	0		!=			
ANR	650865	Identifier	m_privsep_helper		650727	0					
ANR	650866	Identifier	NULL		650727	1					
ANR	650867	ExpressionStatement	jic -> config ( )	299:1:8896:8909	650727	3	True				
ANR	650868	CallExpression	jic -> config ( )		650727	0					
ANR	650869	Callee	jic -> config		650727	0					
ANR	650870	PtrMemberAccess	jic -> config		650727	0					
ANR	650871	Identifier	jic		650727	0					
ANR	650872	Identifier	config		650727	1					
ANR	650873	ArgumentList			650727	1					
ANR	650874	ExpressionStatement	m_configured = true	301:1:8913:8932	650727	4	True				
ANR	650875	AssignmentExpression	m_configured = true		650727	0		=			
ANR	650876	Identifier	m_configured		650727	0					
ANR	650877	Identifier	true		650727	1					
ANR	650878	ReturnType	void		650727	1					
ANR	650879	Identifier	CStarter :: Config		650727	2					
ANR	650880	ParameterList			650727	3					
ANR	650881	CFGEntryNode	ENTRY		650727		True				
ANR	650882	CFGExitNode	EXIT		650727		True				
ANR	650883	Symbol	NULL		650727						
ANR	650884	Symbol	ps		650727						
ANR	650885	Symbol	Execute		650727						
ANR	650886	Symbol	gl		650727						
ANR	650887	Symbol	jic		650727						
ANR	650888	Symbol	false		650727						
ANR	650889	Symbol	param_boolean		650727						
ANR	650890	Symbol	m_privsep_helper		650727						
ANR	650891	Symbol	m_configured		650727						
ANR	650892	Symbol	is_gridshell		650727						
ANR	650893	Symbol	param		650727						
ANR	650894	Symbol	privsep_enabled		650727						
ANR	650895	Symbol	true		650727						
ANR	650896	Symbol	strdup		650727						
ANR	650897	Symbol	orig_cwd		650727						
ANR	650898	DeclStmt									
ANR	650899	Decl							bool	bool	graceful_in_progress
ANR	650900	Function	CStarter :: ShutdownGraceful	339:0:9894:10683							
ANR	650901	FunctionDef	CStarter :: ShutdownGraceful ()		650900	0					
ANR	650902	CompoundStatement		341:0:9934:10683	650900	0					
ANR	650903	IdentifierDeclStatement	bool jobRunning = false ;	342:1:9937:9960	650900	0	True				
ANR	650904	IdentifierDecl	jobRunning = false		650900	0					
ANR	650905	IdentifierDeclType	bool		650900	0					
ANR	650906	Identifier	jobRunning		650900	1					
ANR	650907	AssignmentExpression	jobRunning = false		650900	2		=			
ANR	650908	Identifier	false		650900	0					
ANR	650909	Identifier	false		650900	1					
ANR	650910	IdentifierDeclStatement	UserProc * job ;	343:1:9963:9976	650900	1	True				
ANR	650911	IdentifierDecl	* job		650900	0					
ANR	650912	IdentifierDeclType	UserProc *		650900	0					
ANR	650913	Identifier	job		650900	1					
ANR	650914	ExpressionStatement	"dprintf ( D_ALWAYS , ""ShutdownGraceful all jobs.\\n"" )"	345:1:9980:10029	650900	2	True				
ANR	650915	CallExpression	"dprintf ( D_ALWAYS , ""ShutdownGraceful all jobs.\\n"" )"		650900	0					
ANR	650916	Callee	dprintf		650900	0					
ANR	650917	Identifier	dprintf		650900	0					
ANR	650918	ArgumentList	D_ALWAYS		650900	1					
ANR	650919	Argument	D_ALWAYS		650900	0					
ANR	650920	Identifier	D_ALWAYS		650900	0					
ANR	650921	Argument	"""ShutdownGraceful all jobs.\\n"""		650900	1					
ANR	650922	PrimaryExpression	"""ShutdownGraceful all jobs.\\n"""		650900	0					
ANR	650923	IfStatement	if ( this -> deferral_tid != - 1 )		650900	3					
ANR	650924	Condition	this -> deferral_tid != - 1	351:6:10163:10186	650900	0	True				
ANR	650925	EqualityExpression	this -> deferral_tid != - 1		650900	0		!=			
ANR	650926	PtrMemberAccess	this -> deferral_tid		650900	0					
ANR	650927	Identifier	this		650900	0					
ANR	650928	Identifier	deferral_tid		650900	1					
ANR	650929	UnaryOperationExpression	- 1		650900	1					
ANR	650930	UnaryOperator	-		650900	0					
ANR	650931	PrimaryExpression	1		650900	1					
ANR	650932	CompoundStatement		11:33:255:255	650900	1					
ANR	650933	ExpressionStatement	this -> removeDeferredJobs ( )	352:2:10194:10220	650900	0	True				
ANR	650934	CallExpression	this -> removeDeferredJobs ( )		650900	0					
ANR	650935	Callee	this -> removeDeferredJobs		650900	0					
ANR	650936	PtrMemberAccess	this -> removeDeferredJobs		650900	0					
ANR	650937	Identifier	this		650900	0					
ANR	650938	Identifier	removeDeferredJobs		650900	1					
ANR	650939	ArgumentList			650900	1					
ANR	650940	ExpressionStatement	m_job_list . Rewind ( )	355:1:10227:10246	650900	4	True				
ANR	650941	CallExpression	m_job_list . Rewind ( )		650900	0					
ANR	650942	Callee	m_job_list . Rewind		650900	0					
ANR	650943	MemberAccess	m_job_list . Rewind		650900	0					
ANR	650944	Identifier	m_job_list		650900	0					
ANR	650945	Identifier	Rewind		650900	1					
ANR	650946	ArgumentList			650900	1					
ANR	650947	WhileStatement	while ( ( job = m_job_list . Next ( ) ) != NULL )		650900	5					
ANR	650948	Condition	( job = m_job_list . Next ( ) ) != NULL	356:8:10256:10288	650900	0	True				
ANR	650949	EqualityExpression	( job = m_job_list . Next ( ) ) != NULL		650900	0		!=			
ANR	650950	AssignmentExpression	job = m_job_list . Next ( )		650900	0		=			
ANR	650951	Identifier	job		650900	0					
ANR	650952	CallExpression	m_job_list . Next ( )		650900	1					
ANR	650953	Callee	m_job_list . Next		650900	0					
ANR	650954	MemberAccess	m_job_list . Next		650900	0					
ANR	650955	Identifier	m_job_list		650900	0					
ANR	650956	Identifier	Next		650900	1					
ANR	650957	ArgumentList			650900	1					
ANR	650958	Identifier	NULL		650900	1					
ANR	650959	CompoundStatement		16:43:356:356	650900	1					
ANR	650960	IfStatement	if ( job -> ShutdownGraceful ( ) )		650900	0					
ANR	650961	Condition	job -> ShutdownGraceful ( )	357:7:10300:10322	650900	0	True				
ANR	650962	CallExpression	job -> ShutdownGraceful ( )		650900	0					
ANR	650963	Callee	job -> ShutdownGraceful		650900	0					
ANR	650964	PtrMemberAccess	job -> ShutdownGraceful		650900	0					
ANR	650965	Identifier	job		650900	0					
ANR	650966	Identifier	ShutdownGraceful		650900	1					
ANR	650967	ArgumentList			650900	1					
ANR	650968	CompoundStatement		17:33:391:391	650900	1					
ANR	650969	ExpressionStatement	m_job_list . DeleteCurrent ( )	359:3:10379:10405	650900	0	True				
ANR	650970	CallExpression	m_job_list . DeleteCurrent ( )		650900	0					
ANR	650971	Callee	m_job_list . DeleteCurrent		650900	0					
ANR	650972	MemberAccess	m_job_list . DeleteCurrent		650900	0					
ANR	650973	Identifier	m_job_list		650900	0					
ANR	650974	Identifier	DeleteCurrent		650900	1					
ANR	650975	ArgumentList			650900	1					
ANR	650976	Statement	delete	360:3:10410:10415	650900	1	True				
ANR	650977	ExpressionStatement	job	360:10:10417:10420	650900	2	True				
ANR	650978	Identifier	job		650900	0					
ANR	650979	ElseStatement	else		650900	0					
ANR	650980	CompoundStatement		21:9:496:496	650900	0					
ANR	650981	ExpressionStatement	jobRunning = true	363:3:10488:10505	650900	0	True				
ANR	650982	AssignmentExpression	jobRunning = true		650900	0		=			
ANR	650983	Identifier	jobRunning		650900	0					
ANR	650984	Identifier	true		650900	1					
ANR	650985	ExpressionStatement	ShuttingDown = TRUE	366:1:10515:10534	650900	6	True				
ANR	650986	AssignmentExpression	ShuttingDown = TRUE		650900	0		=			
ANR	650987	Identifier	ShuttingDown		650900	0					
ANR	650988	Identifier	TRUE		650900	1					
ANR	650989	IfStatement	if ( ! jobRunning )		650900	7					
ANR	650990	Condition	! jobRunning	367:5:10541:10551	650900	0	True				
ANR	650991	UnaryOperationExpression	! jobRunning		650900	0					
ANR	650992	UnaryOperator	!		650900	0					
ANR	650993	Identifier	jobRunning		650900	1					
ANR	650994	CompoundStatement		27:18:619:619	650900	1					
ANR	650995	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Got ShutdownGraceful when no jobs running.\\n"" )"	368:2:10558:10631	650900	0	True				
ANR	650996	CallExpression	"dprintf ( D_FULLDEBUG , ""Got ShutdownGraceful when no jobs running.\\n"" )"		650900	0					
ANR	650997	Callee	dprintf		650900	0					
ANR	650998	Identifier	dprintf		650900	0					
ANR	650999	ArgumentList	D_FULLDEBUG		650900	1					
ANR	651000	Argument	D_FULLDEBUG		650900	0					
ANR	651001	Identifier	D_FULLDEBUG		650900	0					
ANR	651002	Argument	"""Got ShutdownGraceful when no jobs running.\\n"""		650900	1					
ANR	651003	PrimaryExpression	"""Got ShutdownGraceful when no jobs running.\\n"""		650900	0					
ANR	651004	ExpressionStatement	this -> allJobsDone ( )	370:2:10635:10654	650900	1	True				
ANR	651005	CallExpression	this -> allJobsDone ( )		650900	0					
ANR	651006	Callee	this -> allJobsDone		650900	0					
ANR	651007	PtrMemberAccess	this -> allJobsDone		650900	0					
ANR	651008	Identifier	this		650900	0					
ANR	651009	Identifier	allJobsDone		650900	1					
ANR	651010	ArgumentList			650900	1					
ANR	651011	ReturnStatement	return 1 ;	371:2:10658:10666	650900	2	True				
ANR	651012	PrimaryExpression	1		650900	0					
ANR	651013	ReturnStatement	return 0 ;	373:1:10673:10681	650900	8	True				
ANR	651014	PrimaryExpression	0		650900	0					
ANR	651015	ReturnType	bool		650900	1					
ANR	651016	Identifier	CStarter :: ShutdownGraceful		650900	2					
ANR	651017	ParameterList			650900	3					
ANR	651018	CFGEntryNode	ENTRY		650900		True				
ANR	651019	CFGExitNode	EXIT		650900		True				
ANR	651020	Symbol	this -> deferral_tid		650900						
ANR	651021	Symbol	NULL		650900						
ANR	651022	Symbol	* job		650900						
ANR	651023	Symbol	false		650900						
ANR	651024	Symbol	D_ALWAYS		650900						
ANR	651025	Symbol	this		650900						
ANR	651026	Symbol	ShuttingDown		650900						
ANR	651027	Symbol	TRUE		650900						
ANR	651028	Symbol	D_FULLDEBUG		650900						
ANR	651029	Symbol	jobRunning		650900						
ANR	651030	Symbol	m_job_list . Next		650900						
ANR	651031	Symbol	* this		650900						
ANR	651032	Symbol	m_job_list		650900						
ANR	651033	Symbol	job -> ShutdownGraceful		650900						
ANR	651034	Symbol	true		650900						
ANR	651035	Symbol	job		650900						
ANR	651036	DeclStmt									
ANR	651037	Decl							bool	bool	fast_in_progress
ANR	651038	Function	CStarter :: ShutdownFast	412:0:11667:12448							
ANR	651039	FunctionDef	CStarter :: ShutdownFast ()		651038	0					
ANR	651040	CompoundStatement		414:0:11703:12448	651038	0					
ANR	651041	IdentifierDeclStatement	bool jobRunning = false ;	415:1:11706:11729	651038	0	True				
ANR	651042	IdentifierDecl	jobRunning = false		651038	0					
ANR	651043	IdentifierDeclType	bool		651038	0					
ANR	651044	Identifier	jobRunning		651038	1					
ANR	651045	AssignmentExpression	jobRunning = false		651038	2		=			
ANR	651046	Identifier	false		651038	0					
ANR	651047	Identifier	false		651038	1					
ANR	651048	IdentifierDeclStatement	UserProc * job ;	416:1:11732:11745	651038	1	True				
ANR	651049	IdentifierDecl	* job		651038	0					
ANR	651050	IdentifierDeclType	UserProc *		651038	0					
ANR	651051	Identifier	job		651038	1					
ANR	651052	ExpressionStatement	"dprintf ( D_ALWAYS , ""ShutdownFast all jobs.\\n"" )"	418:1:11749:11794	651038	2	True				
ANR	651053	CallExpression	"dprintf ( D_ALWAYS , ""ShutdownFast all jobs.\\n"" )"		651038	0					
ANR	651054	Callee	dprintf		651038	0					
ANR	651055	Identifier	dprintf		651038	0					
ANR	651056	ArgumentList	D_ALWAYS		651038	1					
ANR	651057	Argument	D_ALWAYS		651038	0					
ANR	651058	Identifier	D_ALWAYS		651038	0					
ANR	651059	Argument	"""ShutdownFast all jobs.\\n"""		651038	1					
ANR	651060	PrimaryExpression	"""ShutdownFast all jobs.\\n"""		651038	0					
ANR	651061	IfStatement	if ( this -> deferral_tid != - 1 )		651038	3					
ANR	651062	Condition	this -> deferral_tid != - 1	424:6:11929:11952	651038	0	True				
ANR	651063	EqualityExpression	this -> deferral_tid != - 1		651038	0		!=			
ANR	651064	PtrMemberAccess	this -> deferral_tid		651038	0					
ANR	651065	Identifier	this		651038	0					
ANR	651066	Identifier	deferral_tid		651038	1					
ANR	651067	UnaryOperationExpression	- 1		651038	1					
ANR	651068	UnaryOperator	-		651038	0					
ANR	651069	PrimaryExpression	1		651038	1					
ANR	651070	CompoundStatement		11:33:252:252	651038	1					
ANR	651071	ExpressionStatement	this -> removeDeferredJobs ( )	425:2:11960:11986	651038	0	True				
ANR	651072	CallExpression	this -> removeDeferredJobs ( )		651038	0					
ANR	651073	Callee	this -> removeDeferredJobs		651038	0					
ANR	651074	PtrMemberAccess	this -> removeDeferredJobs		651038	0					
ANR	651075	Identifier	this		651038	0					
ANR	651076	Identifier	removeDeferredJobs		651038	1					
ANR	651077	ArgumentList			651038	1					
ANR	651078	ExpressionStatement	m_job_list . Rewind ( )	428:1:11993:12012	651038	4	True				
ANR	651079	CallExpression	m_job_list . Rewind ( )		651038	0					
ANR	651080	Callee	m_job_list . Rewind		651038	0					
ANR	651081	MemberAccess	m_job_list . Rewind		651038	0					
ANR	651082	Identifier	m_job_list		651038	0					
ANR	651083	Identifier	Rewind		651038	1					
ANR	651084	ArgumentList			651038	1					
ANR	651085	WhileStatement	while ( ( job = m_job_list . Next ( ) ) != NULL )		651038	5					
ANR	651086	Condition	( job = m_job_list . Next ( ) ) != NULL	429:8:12022:12054	651038	0	True				
ANR	651087	EqualityExpression	( job = m_job_list . Next ( ) ) != NULL		651038	0		!=			
ANR	651088	AssignmentExpression	job = m_job_list . Next ( )		651038	0		=			
ANR	651089	Identifier	job		651038	0					
ANR	651090	CallExpression	m_job_list . Next ( )		651038	1					
ANR	651091	Callee	m_job_list . Next		651038	0					
ANR	651092	MemberAccess	m_job_list . Next		651038	0					
ANR	651093	Identifier	m_job_list		651038	0					
ANR	651094	Identifier	Next		651038	1					
ANR	651095	ArgumentList			651038	1					
ANR	651096	Identifier	NULL		651038	1					
ANR	651097	CompoundStatement		16:43:353:353	651038	1					
ANR	651098	IfStatement	if ( job -> ShutdownFast ( ) )		651038	0					
ANR	651099	Condition	job -> ShutdownFast ( )	430:7:12066:12084	651038	0	True				
ANR	651100	CallExpression	job -> ShutdownFast ( )		651038	0					
ANR	651101	Callee	job -> ShutdownFast		651038	0					
ANR	651102	PtrMemberAccess	job -> ShutdownFast		651038	0					
ANR	651103	Identifier	job		651038	0					
ANR	651104	Identifier	ShutdownFast		651038	1					
ANR	651105	ArgumentList			651038	1					
ANR	651106	CompoundStatement		17:29:384:384	651038	1					
ANR	651107	ExpressionStatement	m_job_list . DeleteCurrent ( )	432:3:12141:12167	651038	0	True				
ANR	651108	CallExpression	m_job_list . DeleteCurrent ( )		651038	0					
ANR	651109	Callee	m_job_list . DeleteCurrent		651038	0					
ANR	651110	MemberAccess	m_job_list . DeleteCurrent		651038	0					
ANR	651111	Identifier	m_job_list		651038	0					
ANR	651112	Identifier	DeleteCurrent		651038	1					
ANR	651113	ArgumentList			651038	1					
ANR	651114	Statement	delete	433:3:12172:12177	651038	1	True				
ANR	651115	ExpressionStatement	job	433:10:12179:12182	651038	2	True				
ANR	651116	Identifier	job		651038	0					
ANR	651117	ElseStatement	else		651038	0					
ANR	651118	CompoundStatement		21:9:489:489	651038	0					
ANR	651119	ExpressionStatement	jobRunning = true	436:3:12250:12267	651038	0	True				
ANR	651120	AssignmentExpression	jobRunning = true		651038	0		=			
ANR	651121	Identifier	jobRunning		651038	0					
ANR	651122	Identifier	true		651038	1					
ANR	651123	ExpressionStatement	ShuttingDown = TRUE	439:1:12277:12296	651038	6	True				
ANR	651124	AssignmentExpression	ShuttingDown = TRUE		651038	0		=			
ANR	651125	Identifier	ShuttingDown		651038	0					
ANR	651126	Identifier	TRUE		651038	1					
ANR	651127	IfStatement	if ( ! jobRunning )		651038	7					
ANR	651128	Condition	! jobRunning	440:5:12303:12313	651038	0	True				
ANR	651129	UnaryOperationExpression	! jobRunning		651038	0					
ANR	651130	UnaryOperator	!		651038	0					
ANR	651131	Identifier	jobRunning		651038	1					
ANR	651132	CompoundStatement		27:18:612:612	651038	1					
ANR	651133	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Got ShutdownFast when no jobs running.\\n"" )"	441:2:12320:12389	651038	0	True				
ANR	651134	CallExpression	"dprintf ( D_FULLDEBUG , ""Got ShutdownFast when no jobs running.\\n"" )"		651038	0					
ANR	651135	Callee	dprintf		651038	0					
ANR	651136	Identifier	dprintf		651038	0					
ANR	651137	ArgumentList	D_FULLDEBUG		651038	1					
ANR	651138	Argument	D_FULLDEBUG		651038	0					
ANR	651139	Identifier	D_FULLDEBUG		651038	0					
ANR	651140	Argument	"""Got ShutdownFast when no jobs running.\\n"""		651038	1					
ANR	651141	PrimaryExpression	"""Got ShutdownFast when no jobs running.\\n"""		651038	0					
ANR	651142	ReturnStatement	return ( this -> allJobsDone ( ) ) ;	443:2:12393:12423	651038	1	True				
ANR	651143	CallExpression	this -> allJobsDone ( )		651038	0					
ANR	651144	Callee	this -> allJobsDone		651038	0					
ANR	651145	PtrMemberAccess	this -> allJobsDone		651038	0					
ANR	651146	Identifier	this		651038	0					
ANR	651147	Identifier	allJobsDone		651038	1					
ANR	651148	ArgumentList			651038	1					
ANR	651149	ReturnStatement	return ( false ) ;	445:1:12430:12446	651038	8	True				
ANR	651150	Identifier	false		651038	0					
ANR	651151	ReturnType	bool		651038	1					
ANR	651152	Identifier	CStarter :: ShutdownFast		651038	2					
ANR	651153	ParameterList			651038	3					
ANR	651154	CFGEntryNode	ENTRY		651038		True				
ANR	651155	CFGExitNode	EXIT		651038		True				
ANR	651156	Symbol	this -> deferral_tid		651038						
ANR	651157	Symbol	NULL		651038						
ANR	651158	Symbol	* job		651038						
ANR	651159	Symbol	false		651038						
ANR	651160	Symbol	D_ALWAYS		651038						
ANR	651161	Symbol	this		651038						
ANR	651162	Symbol	ShuttingDown		651038						
ANR	651163	Symbol	job -> ShutdownFast		651038						
ANR	651164	Symbol	TRUE		651038						
ANR	651165	Symbol	D_FULLDEBUG		651038						
ANR	651166	Symbol	jobRunning		651038						
ANR	651167	Symbol	this -> allJobsDone		651038						
ANR	651168	Symbol	m_job_list . Next		651038						
ANR	651169	Symbol	* this		651038						
ANR	651170	Symbol	m_job_list		651038						
ANR	651171	Symbol	true		651038						
ANR	651172	Symbol	job		651038						
ANR	651173	Function	CStarter :: Remove	486:0:13516:14150							
ANR	651174	FunctionDef	CStarter :: Remove ()		651173	0					
ANR	651175	CompoundStatement		487:20:13541:14150	651173	0					
ANR	651176	IdentifierDeclStatement	bool jobRunning = false ;	488:1:13544:13567	651173	0	True				
ANR	651177	IdentifierDecl	jobRunning = false		651173	0					
ANR	651178	IdentifierDeclType	bool		651173	0					
ANR	651179	Identifier	jobRunning		651173	1					
ANR	651180	AssignmentExpression	jobRunning = false		651173	2		=			
ANR	651181	Identifier	false		651173	0					
ANR	651182	Identifier	false		651173	1					
ANR	651183	IdentifierDeclStatement	UserProc * job ;	489:1:13570:13583	651173	1	True				
ANR	651184	IdentifierDecl	* job		651173	0					
ANR	651185	IdentifierDeclType	UserProc *		651173	0					
ANR	651186	Identifier	job		651173	1					
ANR	651187	ExpressionStatement	"dprintf ( D_ALWAYS , ""Remove all jobs\\n"" )"	491:1:13587:13627	651173	2	True				
ANR	651188	CallExpression	"dprintf ( D_ALWAYS , ""Remove all jobs\\n"" )"		651173	0					
ANR	651189	Callee	dprintf		651173	0					
ANR	651190	Identifier	dprintf		651173	0					
ANR	651191	ArgumentList	D_ALWAYS		651173	1					
ANR	651192	Argument	D_ALWAYS		651173	0					
ANR	651193	Identifier	D_ALWAYS		651173	0					
ANR	651194	Argument	"""Remove all jobs\\n"""		651173	1					
ANR	651195	PrimaryExpression	"""Remove all jobs\\n"""		651173	0					
ANR	651196	IfStatement	if ( this -> deferral_tid != - 1 )		651173	3					
ANR	651197	Condition	this -> deferral_tid != - 1	497:6:13761:13784	651173	0	True				
ANR	651198	EqualityExpression	this -> deferral_tid != - 1		651173	0		!=			
ANR	651199	PtrMemberAccess	this -> deferral_tid		651173	0					
ANR	651200	Identifier	this		651173	0					
ANR	651201	Identifier	deferral_tid		651173	1					
ANR	651202	UnaryOperationExpression	- 1		651173	1					
ANR	651203	UnaryOperator	-		651173	0					
ANR	651204	PrimaryExpression	1		651173	1					
ANR	651205	CompoundStatement		11:33:246:246	651173	1					
ANR	651206	ExpressionStatement	this -> removeDeferredJobs ( )	498:2:13792:13818	651173	0	True				
ANR	651207	CallExpression	this -> removeDeferredJobs ( )		651173	0					
ANR	651208	Callee	this -> removeDeferredJobs		651173	0					
ANR	651209	PtrMemberAccess	this -> removeDeferredJobs		651173	0					
ANR	651210	Identifier	this		651173	0					
ANR	651211	Identifier	removeDeferredJobs		651173	1					
ANR	651212	ArgumentList			651173	1					
ANR	651213	ExpressionStatement	m_job_list . Rewind ( )	501:1:13825:13844	651173	4	True				
ANR	651214	CallExpression	m_job_list . Rewind ( )		651173	0					
ANR	651215	Callee	m_job_list . Rewind		651173	0					
ANR	651216	MemberAccess	m_job_list . Rewind		651173	0					
ANR	651217	Identifier	m_job_list		651173	0					
ANR	651218	Identifier	Rewind		651173	1					
ANR	651219	ArgumentList			651173	1					
ANR	651220	WhileStatement	while ( ( job = m_job_list . Next ( ) ) != NULL )		651173	5					
ANR	651221	Condition	( job = m_job_list . Next ( ) ) != NULL	502:8:13854:13886	651173	0	True				
ANR	651222	EqualityExpression	( job = m_job_list . Next ( ) ) != NULL		651173	0		!=			
ANR	651223	AssignmentExpression	job = m_job_list . Next ( )		651173	0		=			
ANR	651224	Identifier	job		651173	0					
ANR	651225	CallExpression	m_job_list . Next ( )		651173	1					
ANR	651226	Callee	m_job_list . Next		651173	0					
ANR	651227	MemberAccess	m_job_list . Next		651173	0					
ANR	651228	Identifier	m_job_list		651173	0					
ANR	651229	Identifier	Next		651173	1					
ANR	651230	ArgumentList			651173	1					
ANR	651231	Identifier	NULL		651173	1					
ANR	651232	CompoundStatement		16:44:348:348	651173	1					
ANR	651233	IfStatement	if ( job -> Remove ( ) )		651173	0					
ANR	651234	Condition	job -> Remove ( )	503:6:13898:13910	651173	0	True				
ANR	651235	CallExpression	job -> Remove ( )		651173	0					
ANR	651236	Callee	job -> Remove		651173	0					
ANR	651237	PtrMemberAccess	job -> Remove		651173	0					
ANR	651238	Identifier	job		651173	0					
ANR	651239	Identifier	Remove		651173	1					
ANR	651240	ArgumentList			651173	1					
ANR	651241	CompoundStatement		17:22:372:372	651173	1					
ANR	651242	ExpressionStatement	m_job_list . DeleteCurrent ( )	505:3:13967:13993	651173	0	True				
ANR	651243	CallExpression	m_job_list . DeleteCurrent ( )		651173	0					
ANR	651244	Callee	m_job_list . DeleteCurrent		651173	0					
ANR	651245	MemberAccess	m_job_list . DeleteCurrent		651173	0					
ANR	651246	Identifier	m_job_list		651173	0					
ANR	651247	Identifier	DeleteCurrent		651173	1					
ANR	651248	ArgumentList			651173	1					
ANR	651249	Statement	delete	506:3:13998:14003	651173	1	True				
ANR	651250	ExpressionStatement	job	506:10:14005:14008	651173	2	True				
ANR	651251	Identifier	job		651173	0					
ANR	651252	ElseStatement	else		651173	0					
ANR	651253	CompoundStatement		21:9:477:477	651173	0					
ANR	651254	ExpressionStatement	jobRunning = true	509:3:14076:14093	651173	0	True				
ANR	651255	AssignmentExpression	jobRunning = true		651173	0		=			
ANR	651256	Identifier	jobRunning		651173	0					
ANR	651257	Identifier	true		651173	1					
ANR	651258	ExpressionStatement	ShuttingDown = TRUE	512:1:14103:14122	651173	6	True				
ANR	651259	AssignmentExpression	ShuttingDown = TRUE		651173	0		=			
ANR	651260	Identifier	ShuttingDown		651173	0					
ANR	651261	Identifier	TRUE		651173	1					
ANR	651262	ReturnStatement	return ( ! jobRunning ) ;	514:1:14126:14148	651173	7	True				
ANR	651263	UnaryOperationExpression	! jobRunning		651173	0					
ANR	651264	UnaryOperator	!		651173	0					
ANR	651265	Identifier	jobRunning		651173	1					
ANR	651266	ReturnType	bool		651173	1					
ANR	651267	Identifier	CStarter :: Remove		651173	2					
ANR	651268	ParameterList			651173	3					
ANR	651269	CFGEntryNode	ENTRY		651173		True				
ANR	651270	CFGExitNode	EXIT		651173		True				
ANR	651271	Symbol	this -> deferral_tid		651173						
ANR	651272	Symbol	NULL		651173						
ANR	651273	Symbol	* job		651173						
ANR	651274	Symbol	false		651173						
ANR	651275	Symbol	D_ALWAYS		651173						
ANR	651276	Symbol	this		651173						
ANR	651277	Symbol	ShuttingDown		651173						
ANR	651278	Symbol	TRUE		651173						
ANR	651279	Symbol	jobRunning		651173						
ANR	651280	Symbol	m_job_list . Next		651173						
ANR	651281	Symbol	* this		651173						
ANR	651282	Symbol	m_job_list		651173						
ANR	651283	Symbol	true		651173						
ANR	651284	Symbol	job -> Remove		651173						
ANR	651285	Symbol	job		651173						
ANR	651286	DeclStmt									
ANR	651287	Decl							MyString	MyString	fqu
ANR	651288	DeclStmt									
ANR	651289	Decl							MyString	MyString	error_msg
ANR	651290	DeclStmt									
ANR	651291	Decl							ClassAd	ClassAd	input
ANR	651292	DeclStmt									
ANR	651293	Decl							MyString	MyString	job_claim_id
ANR	651294	DeclStmt									
ANR	651295	Decl							MyString	MyString	input_claim_id
ANR	651296	DeclStmt									
ANR	651297	Decl							char	char *	session_id
ANR	651298	DeclStmt									
ANR	651299	Decl							char	char *	session_key
ANR	651300	DeclStmt									
ANR	651301	Decl							MyString	MyString	session_info
ANR	651302	DeclStmt									
ANR	651303	Decl							IpVerify	IpVerify *	ipv
ANR	651304	DeclStmt									
ANR	651305	Decl							bool	bool	rc
ANR	651306	DeclStmt									
ANR	651307	Decl							ClassAd	ClassAd	response
ANR	651308	DeclStmt									
ANR	651309	Decl							ClaimIdParser	ClaimIdParser	claimid
ANR	651310	Function	CStarter :: vSSHDFailed	667:0:18825:19480							
ANR	651311	FunctionDef	"CStarter :: vSSHDFailed (Stream * s , bool retry , char const * fmt , va_list args)"		651310	0					
ANR	651312	CompoundStatement		669:0:18902:19480	651310	0					
ANR	651313	IdentifierDeclStatement	MyString error_msg ;	670:1:18905:18923	651310	0	True				
ANR	651314	IdentifierDecl	error_msg		651310	0					
ANR	651315	IdentifierDeclType	MyString		651310	0					
ANR	651316	Identifier	error_msg		651310	1					
ANR	651317	ExpressionStatement	"error_msg . vsprintf ( fmt , args )"	671:1:18926:18957	651310	1	True				
ANR	651318	CallExpression	"error_msg . vsprintf ( fmt , args )"		651310	0					
ANR	651319	Callee	error_msg . vsprintf		651310	0					
ANR	651320	MemberAccess	error_msg . vsprintf		651310	0					
ANR	651321	Identifier	error_msg		651310	0					
ANR	651322	Identifier	vsprintf		651310	1					
ANR	651323	ArgumentList	fmt		651310	1					
ANR	651324	Argument	fmt		651310	0					
ANR	651325	Identifier	fmt		651310	0					
ANR	651326	Argument	args		651310	1					
ANR	651327	Identifier	args		651310	0					
ANR	651328	ExpressionStatement	error_msg . trim ( )	675:1:19089:19105	651310	2	True				
ANR	651329	CallExpression	error_msg . trim ( )		651310	0					
ANR	651330	Callee	error_msg . trim		651310	0					
ANR	651331	MemberAccess	error_msg . trim		651310	0					
ANR	651332	Identifier	error_msg		651310	0					
ANR	651333	Identifier	trim		651310	1					
ANR	651334	ArgumentList			651310	1					
ANR	651335	ExpressionStatement	"dprintf ( D_ALWAYS , ""START_SSHD failed: %s\\n"" , error_msg . Value ( ) )"	677:1:19109:19170	651310	3	True				
ANR	651336	CallExpression	"dprintf ( D_ALWAYS , ""START_SSHD failed: %s\\n"" , error_msg . Value ( ) )"		651310	0					
ANR	651337	Callee	dprintf		651310	0					
ANR	651338	Identifier	dprintf		651310	0					
ANR	651339	ArgumentList	D_ALWAYS		651310	1					
ANR	651340	Argument	D_ALWAYS		651310	0					
ANR	651341	Identifier	D_ALWAYS		651310	0					
ANR	651342	Argument	"""START_SSHD failed: %s\\n"""		651310	1					
ANR	651343	PrimaryExpression	"""START_SSHD failed: %s\\n"""		651310	0					
ANR	651344	Argument	error_msg . Value ( )		651310	2					
ANR	651345	CallExpression	error_msg . Value ( )		651310	0					
ANR	651346	Callee	error_msg . Value		651310	0					
ANR	651347	MemberAccess	error_msg . Value		651310	0					
ANR	651348	Identifier	error_msg		651310	0					
ANR	651349	Identifier	Value		651310	1					
ANR	651350	ArgumentList			651310	1					
ANR	651351	IdentifierDeclStatement	ClassAd response ;	679:1:19174:19190	651310	4	True				
ANR	651352	IdentifierDecl	response		651310	0					
ANR	651353	IdentifierDeclType	ClassAd		651310	0					
ANR	651354	Identifier	response		651310	1					
ANR	651355	ExpressionStatement	"response . Assign ( ATTR_RESULT , false )"	680:1:19193:19227	651310	5	True				
ANR	651356	CallExpression	"response . Assign ( ATTR_RESULT , false )"		651310	0					
ANR	651357	Callee	response . Assign		651310	0					
ANR	651358	MemberAccess	response . Assign		651310	0					
ANR	651359	Identifier	response		651310	0					
ANR	651360	Identifier	Assign		651310	1					
ANR	651361	ArgumentList	ATTR_RESULT		651310	1					
ANR	651362	Argument	ATTR_RESULT		651310	0					
ANR	651363	Identifier	ATTR_RESULT		651310	0					
ANR	651364	Argument	false		651310	1					
ANR	651365	Identifier	false		651310	0					
ANR	651366	ExpressionStatement	"response . Assign ( ATTR_ERROR_STRING , error_msg )"	681:1:19230:19274	651310	6	True				
ANR	651367	CallExpression	"response . Assign ( ATTR_ERROR_STRING , error_msg )"		651310	0					
ANR	651368	Callee	response . Assign		651310	0					
ANR	651369	MemberAccess	response . Assign		651310	0					
ANR	651370	Identifier	response		651310	0					
ANR	651371	Identifier	Assign		651310	1					
ANR	651372	ArgumentList	ATTR_ERROR_STRING		651310	1					
ANR	651373	Argument	ATTR_ERROR_STRING		651310	0					
ANR	651374	Identifier	ATTR_ERROR_STRING		651310	0					
ANR	651375	Argument	error_msg		651310	1					
ANR	651376	Identifier	error_msg		651310	0					
ANR	651377	IfStatement	if ( retry )		651310	7					
ANR	651378	Condition	retry	682:5:19281:19285	651310	0	True				
ANR	651379	Identifier	retry		651310	0					
ANR	651380	CompoundStatement		14:13:386:386	651310	1					
ANR	651381	ExpressionStatement	"response . Assign ( ATTR_RETRY , retry )"	683:2:19293:19326	651310	0	True				
ANR	651382	CallExpression	"response . Assign ( ATTR_RETRY , retry )"		651310	0					
ANR	651383	Callee	response . Assign		651310	0					
ANR	651384	MemberAccess	response . Assign		651310	0					
ANR	651385	Identifier	response		651310	0					
ANR	651386	Identifier	Assign		651310	1					
ANR	651387	ArgumentList	ATTR_RETRY		651310	1					
ANR	651388	Argument	ATTR_RETRY		651310	0					
ANR	651389	Identifier	ATTR_RETRY		651310	0					
ANR	651390	Argument	retry		651310	1					
ANR	651391	Identifier	retry		651310	0					
ANR	651392	ExpressionStatement	s -> encode ( )	686:1:19333:19344	651310	8	True				
ANR	651393	CallExpression	s -> encode ( )		651310	0					
ANR	651394	Callee	s -> encode		651310	0					
ANR	651395	PtrMemberAccess	s -> encode		651310	0					
ANR	651396	Identifier	s		651310	0					
ANR	651397	Identifier	encode		651310	1					
ANR	651398	ArgumentList			651310	1					
ANR	651399	IfStatement	if ( ! response . put ( * s ) || ! s -> end_of_message ( ) )		651310	9					
ANR	651400	Condition	! response . put ( * s ) || ! s -> end_of_message ( )	687:5:19351:19391	651310	0	True				
ANR	651401	OrExpression	! response . put ( * s ) || ! s -> end_of_message ( )		651310	0		||			
ANR	651402	UnaryOperationExpression	! response . put ( * s )		651310	0					
ANR	651403	UnaryOperator	!		651310	0					
ANR	651404	CallExpression	response . put ( * s )		651310	1					
ANR	651405	Callee	response . put		651310	0					
ANR	651406	MemberAccess	response . put		651310	0					
ANR	651407	Identifier	response		651310	0					
ANR	651408	Identifier	put		651310	1					
ANR	651409	ArgumentList	* s		651310	1					
ANR	651410	Argument	* s		651310	0					
ANR	651411	UnaryOperationExpression	* s		651310	0					
ANR	651412	UnaryOperator	*		651310	0					
ANR	651413	Identifier	s		651310	1					
ANR	651414	UnaryOperationExpression	! s -> end_of_message ( )		651310	1					
ANR	651415	UnaryOperator	!		651310	0					
ANR	651416	CallExpression	s -> end_of_message ( )		651310	1					
ANR	651417	Callee	s -> end_of_message		651310	0					
ANR	651418	PtrMemberAccess	s -> end_of_message		651310	0					
ANR	651419	Identifier	s		651310	0					
ANR	651420	Identifier	end_of_message		651310	1					
ANR	651421	ArgumentList			651310	1					
ANR	651422	CompoundStatement		19:49:492:492	651310	1					
ANR	651423	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to send response to START_SSHD.\\n"" )"	688:2:19399:19459	651310	0	True				
ANR	651424	CallExpression	"dprintf ( D_ALWAYS , ""Failed to send response to START_SSHD.\\n"" )"		651310	0					
ANR	651425	Callee	dprintf		651310	0					
ANR	651426	Identifier	dprintf		651310	0					
ANR	651427	ArgumentList	D_ALWAYS		651310	1					
ANR	651428	Argument	D_ALWAYS		651310	0					
ANR	651429	Identifier	D_ALWAYS		651310	0					
ANR	651430	Argument	"""Failed to send response to START_SSHD.\\n"""		651310	1					
ANR	651431	PrimaryExpression	"""Failed to send response to START_SSHD.\\n"""		651310	0					
ANR	651432	ReturnStatement	return FALSE ;	691:1:19466:19478	651310	10	True				
ANR	651433	Identifier	FALSE		651310	0					
ANR	651434	ReturnType	int		651310	1					
ANR	651435	Identifier	CStarter :: vSSHDFailed		651310	2					
ANR	651436	ParameterList	"Stream * s , bool retry , char const * fmt , va_list args"		651310	3					
ANR	651437	Parameter	Stream * s	668:22:18851:18859	651310	0	True				
ANR	651438	ParameterType	Stream *		651310	0					
ANR	651439	Identifier	s		651310	1					
ANR	651440	Parameter	bool retry	668:32:18861:18870	651310	1	True				
ANR	651441	ParameterType	bool		651310	0					
ANR	651442	Identifier	retry		651310	1					
ANR	651443	Parameter	char const * fmt	668:43:18872:18886	651310	2	True				
ANR	651444	ParameterType	char const *		651310	0					
ANR	651445	Identifier	fmt		651310	1					
ANR	651446	Parameter	va_list args	668:59:18888:18899	651310	3	True				
ANR	651447	ParameterType	va_list		651310	0					
ANR	651448	Identifier	args		651310	1					
ANR	651449	CFGEntryNode	ENTRY		651310		True				
ANR	651450	CFGExitNode	EXIT		651310		True				
ANR	651451	Symbol	error_msg		651310						
ANR	651452	Symbol	error_msg . Value		651310						
ANR	651453	Symbol	ATTR_RETRY		651310						
ANR	651454	Symbol	D_ALWAYS		651310						
ANR	651455	Symbol	false		651310						
ANR	651456	Symbol	fmt		651310						
ANR	651457	Symbol	s -> end_of_message		651310						
ANR	651458	Symbol	args		651310						
ANR	651459	Symbol	ATTR_ERROR_STRING		651310						
ANR	651460	Symbol	s		651310						
ANR	651461	Symbol	response		651310						
ANR	651462	Symbol	FALSE		651310						
ANR	651463	Symbol	ATTR_RESULT		651310						
ANR	651464	Symbol	* s		651310						
ANR	651465	Symbol	retry		651310						
ANR	651466	Symbol	response . put		651310						
ANR	651467	Function	CStarter :: SSHDRetry	694:0:19483:19643							
ANR	651468	FunctionDef	"CStarter :: SSHDRetry (Stream * s , char const * fmt)"		651467	0					
ANR	651469	CompoundStatement		696:0:19538:19643	651467	0					
ANR	651470	IdentifierDeclStatement	va_list args ;	697:1:19541:19553	651467	0	True				
ANR	651471	IdentifierDecl	args		651467	0					
ANR	651472	IdentifierDeclType	va_list		651467	0					
ANR	651473	Identifier	args		651467	1					
ANR	651474	ExpressionStatement	"va_start ( args , fmt )"	698:1:19556:19577	651467	1	True				
ANR	651475	CallExpression	"va_start ( args , fmt )"		651467	0					
ANR	651476	Callee	va_start		651467	0					
ANR	651477	Identifier	va_start		651467	0					
ANR	651478	ArgumentList	args		651467	1					
ANR	651479	Argument	args		651467	0					
ANR	651480	Identifier	args		651467	0					
ANR	651481	Argument	fmt		651467	1					
ANR	651482	Identifier	fmt		651467	0					
ANR	651483	ExpressionStatement	"vSSHDFailed ( s , true , fmt , args )"	699:1:19580:19608	651467	2	True				
ANR	651484	CallExpression	"vSSHDFailed ( s , true , fmt , args )"		651467	0					
ANR	651485	Callee	vSSHDFailed		651467	0					
ANR	651486	Identifier	vSSHDFailed		651467	0					
ANR	651487	ArgumentList	s		651467	1					
ANR	651488	Argument	s		651467	0					
ANR	651489	Identifier	s		651467	0					
ANR	651490	Argument	true		651467	1					
ANR	651491	Identifier	true		651467	0					
ANR	651492	Argument	fmt		651467	2					
ANR	651493	Identifier	fmt		651467	0					
ANR	651494	Argument	args		651467	3					
ANR	651495	Identifier	args		651467	0					
ANR	651496	ExpressionStatement	va_end ( args )	700:1:19611:19625	651467	3	True				
ANR	651497	CallExpression	va_end ( args )		651467	0					
ANR	651498	Callee	va_end		651467	0					
ANR	651499	Identifier	va_end		651467	0					
ANR	651500	ArgumentList	args		651467	1					
ANR	651501	Argument	args		651467	0					
ANR	651502	Identifier	args		651467	0					
ANR	651503	ReturnStatement	return FALSE ;	702:1:19629:19641	651467	4	True				
ANR	651504	Identifier	FALSE		651467	0					
ANR	651505	ReturnType	int		651467	1					
ANR	651506	Identifier	CStarter :: SSHDRetry		651467	2					
ANR	651507	ParameterList	"Stream * s , char const * fmt"		651467	3					
ANR	651508	Parameter	Stream * s	695:20:19507:19515	651467	0	True				
ANR	651509	ParameterType	Stream *		651467	0					
ANR	651510	Identifier	s		651467	1					
ANR	651511	Parameter	char const * fmt	695:30:19517:19531	651467	1	True				
ANR	651512	ParameterType	char const *		651467	0					
ANR	651513	Identifier	fmt		651467	1					
ANR	651514	CFGEntryNode	ENTRY		651467		True				
ANR	651515	CFGExitNode	EXIT		651467		True				
ANR	651516	Symbol	args		651467						
ANR	651517	Symbol	s		651467						
ANR	651518	Symbol	true		651467						
ANR	651519	Symbol	FALSE		651467						
ANR	651520	Symbol	fmt		651467						
ANR	651521	Function	CStarter :: SSHDFailed	704:0:19645:19807							
ANR	651522	FunctionDef	"CStarter :: SSHDFailed (Stream * s , char const * fmt)"		651521	0					
ANR	651523	CompoundStatement		706:0:19701:19807	651521	0					
ANR	651524	IdentifierDeclStatement	va_list args ;	707:1:19704:19716	651521	0	True				
ANR	651525	IdentifierDecl	args		651521	0					
ANR	651526	IdentifierDeclType	va_list		651521	0					
ANR	651527	Identifier	args		651521	1					
ANR	651528	ExpressionStatement	"va_start ( args , fmt )"	708:1:19719:19740	651521	1	True				
ANR	651529	CallExpression	"va_start ( args , fmt )"		651521	0					
ANR	651530	Callee	va_start		651521	0					
ANR	651531	Identifier	va_start		651521	0					
ANR	651532	ArgumentList	args		651521	1					
ANR	651533	Argument	args		651521	0					
ANR	651534	Identifier	args		651521	0					
ANR	651535	Argument	fmt		651521	1					
ANR	651536	Identifier	fmt		651521	0					
ANR	651537	ExpressionStatement	"vSSHDFailed ( s , false , fmt , args )"	709:1:19743:19772	651521	2	True				
ANR	651538	CallExpression	"vSSHDFailed ( s , false , fmt , args )"		651521	0					
ANR	651539	Callee	vSSHDFailed		651521	0					
ANR	651540	Identifier	vSSHDFailed		651521	0					
ANR	651541	ArgumentList	s		651521	1					
ANR	651542	Argument	s		651521	0					
ANR	651543	Identifier	s		651521	0					
ANR	651544	Argument	false		651521	1					
ANR	651545	Identifier	false		651521	0					
ANR	651546	Argument	fmt		651521	2					
ANR	651547	Identifier	fmt		651521	0					
ANR	651548	Argument	args		651521	3					
ANR	651549	Identifier	args		651521	0					
ANR	651550	ExpressionStatement	va_end ( args )	710:1:19775:19789	651521	3	True				
ANR	651551	CallExpression	va_end ( args )		651521	0					
ANR	651552	Callee	va_end		651521	0					
ANR	651553	Identifier	va_end		651521	0					
ANR	651554	ArgumentList	args		651521	1					
ANR	651555	Argument	args		651521	0					
ANR	651556	Identifier	args		651521	0					
ANR	651557	ReturnStatement	return FALSE ;	712:1:19793:19805	651521	4	True				
ANR	651558	Identifier	FALSE		651521	0					
ANR	651559	ReturnType	int		651521	1					
ANR	651560	Identifier	CStarter :: SSHDFailed		651521	2					
ANR	651561	ParameterList	"Stream * s , char const * fmt"		651521	3					
ANR	651562	Parameter	Stream * s	705:21:19670:19678	651521	0	True				
ANR	651563	ParameterType	Stream *		651521	0					
ANR	651564	Identifier	s		651521	1					
ANR	651565	Parameter	char const * fmt	705:31:19680:19694	651521	1	True				
ANR	651566	ParameterType	char const *		651521	0					
ANR	651567	Identifier	fmt		651521	1					
ANR	651568	CFGEntryNode	ENTRY		651521		True				
ANR	651569	CFGExitNode	EXIT		651521		True				
ANR	651570	Symbol	args		651521						
ANR	651571	Symbol	s		651521						
ANR	651572	Symbol	false		651521						
ANR	651573	Symbol	FALSE		651521						
ANR	651574	Symbol	fmt		651521						
ANR	651575	Function	find_str_in_buffer	720:0:19959:20203							
ANR	651576	FunctionDef	"find_str_in_buffer (char const * buffer , int buffer_len , char const * str)"		651575	0					
ANR	651577	CompoundStatement		724:0:20046:20203	651575	0					
ANR	651578	IdentifierDeclStatement	int str_len = strlen ( str ) ;	725:1:20049:20074	651575	0	True				
ANR	651579	IdentifierDecl	str_len = strlen ( str )		651575	0					
ANR	651580	IdentifierDeclType	int		651575	0					
ANR	651581	Identifier	str_len		651575	1					
ANR	651582	AssignmentExpression	str_len = strlen ( str )		651575	2		=			
ANR	651583	Identifier	str_len		651575	0					
ANR	651584	CallExpression	strlen ( str )		651575	1					
ANR	651585	Callee	strlen		651575	0					
ANR	651586	Identifier	strlen		651575	0					
ANR	651587	ArgumentList	str		651575	1					
ANR	651588	Argument	str		651575	0					
ANR	651589	Identifier	str		651575	0					
ANR	651590	IdentifierDeclStatement	int i ;	726:4:20080:20085	651575	1	True				
ANR	651591	IdentifierDecl	i		651575	0					
ANR	651592	IdentifierDeclType	int		651575	0					
ANR	651593	Identifier	i		651575	1					
ANR	651594	ForStatement	for ( i = 0 ; i + str_len <= buffer_len ; i ++ )		651575	2					
ANR	651595	ForInit	i = 0 ;	727:5:20092:20095	651575	0	True				
ANR	651596	AssignmentExpression	i = 0		651575	0		=			
ANR	651597	Identifier	i		651575	0					
ANR	651598	PrimaryExpression	0		651575	1					
ANR	651599	Condition	i + str_len <= buffer_len	727:10:20097:20119	651575	1	True				
ANR	651600	RelationalExpression	i + str_len <= buffer_len		651575	0		<=			
ANR	651601	AdditiveExpression	i + str_len		651575	0		+			
ANR	651602	Identifier	i		651575	0					
ANR	651603	Identifier	str_len		651575	1					
ANR	651604	Identifier	buffer_len		651575	1					
ANR	651605	PostIncDecOperationExpression	i ++	727:35:20122:20124	651575	2	True				
ANR	651606	Identifier	i		651575	0					
ANR	651607	IncDec	++		651575	1					
ANR	651608	CompoundStatement		4:40:80:80	651575	3					
ANR	651609	IfStatement	"if ( memcmp ( buffer + i , str , str_len ) == 0 )"		651575	0					
ANR	651610	Condition	"memcmp ( buffer + i , str , str_len ) == 0"	728:6:20135:20165	651575	0	True				
ANR	651611	EqualityExpression	"memcmp ( buffer + i , str , str_len ) == 0"		651575	0		==			
ANR	651612	CallExpression	"memcmp ( buffer + i , str , str_len )"		651575	0					
ANR	651613	Callee	memcmp		651575	0					
ANR	651614	Identifier	memcmp		651575	0					
ANR	651615	ArgumentList	buffer + i		651575	1					
ANR	651616	Argument	buffer + i		651575	0					
ANR	651617	AdditiveExpression	buffer + i		651575	0		+			
ANR	651618	Identifier	buffer		651575	0					
ANR	651619	Identifier	i		651575	1					
ANR	651620	Argument	str		651575	1					
ANR	651621	Identifier	str		651575	0					
ANR	651622	Argument	str_len		651575	2					
ANR	651623	Identifier	str_len		651575	0					
ANR	651624	PrimaryExpression	0		651575	1					
ANR	651625	CompoundStatement		5:40:122:122	651575	1					
ANR	651626	ReturnStatement	return i ;	729:3:20174:20182	651575	0	True				
ANR	651627	Identifier	i		651575	0					
ANR	651628	ReturnStatement	return - 1 ;	732:1:20192:20201	651575	3	True				
ANR	651629	UnaryOperationExpression	- 1		651575	0					
ANR	651630	UnaryOperator	-		651575	0					
ANR	651631	PrimaryExpression	1		651575	1					
ANR	651632	ReturnType	static int		651575	1					
ANR	651633	Identifier	find_str_in_buffer		651575	2					
ANR	651634	ParameterList	"char const * buffer , int buffer_len , char const * str"		651575	3					
ANR	651635	Parameter	char const * buffer	721:1:19991:20008	651575	0	True				
ANR	651636	ParameterType	char const *		651575	0					
ANR	651637	Identifier	buffer		651575	1					
ANR	651638	Parameter	int buffer_len	722:1:20012:20025	651575	1	True				
ANR	651639	ParameterType	int		651575	0					
ANR	651640	Identifier	buffer_len		651575	1					
ANR	651641	Parameter	char const * str	723:1:20029:20043	651575	2	True				
ANR	651642	ParameterType	char const *		651575	0					
ANR	651643	Identifier	str		651575	1					
ANR	651644	CFGEntryNode	ENTRY		651575		True				
ANR	651645	CFGExitNode	EXIT		651575		True				
ANR	651646	Symbol	str		651575						
ANR	651647	Symbol	strlen		651575						
ANR	651648	Symbol	buffer_len		651575						
ANR	651649	Symbol	memcmp		651575						
ANR	651650	Symbol	str_len		651575						
ANR	651651	Symbol	i		651575						
ANR	651652	Symbol	buffer		651575						
ANR	651653	Function	extract_delimited_data_as_base64	735:0:20206:21064							
ANR	651654	FunctionDef	"extract_delimited_data_as_base64 (char const * input_buffer , int input_len , char const * begin_marker , char const * end_marker , MyString & output_buffer , MyString * error_msg)"		651653	0					
ANR	651655	CompoundStatement		742:0:20395:21064	651653	0					
ANR	651656	IdentifierDeclStatement	"int start = find_str_in_buffer ( input_buffer , input_len , begin_marker ) ;"	743:1:20398:20465	651653	0	True				
ANR	651657	IdentifierDecl	"start = find_str_in_buffer ( input_buffer , input_len , begin_marker )"		651653	0					
ANR	651658	IdentifierDeclType	int		651653	0					
ANR	651659	Identifier	start		651653	1					
ANR	651660	AssignmentExpression	"start = find_str_in_buffer ( input_buffer , input_len , begin_marker )"		651653	2		=			
ANR	651661	Identifier	start		651653	0					
ANR	651662	CallExpression	"find_str_in_buffer ( input_buffer , input_len , begin_marker )"		651653	1					
ANR	651663	Callee	find_str_in_buffer		651653	0					
ANR	651664	Identifier	find_str_in_buffer		651653	0					
ANR	651665	ArgumentList	input_buffer		651653	1					
ANR	651666	Argument	input_buffer		651653	0					
ANR	651667	Identifier	input_buffer		651653	0					
ANR	651668	Argument	input_len		651653	1					
ANR	651669	Identifier	input_len		651653	0					
ANR	651670	Argument	begin_marker		651653	2					
ANR	651671	Identifier	begin_marker		651653	0					
ANR	651672	IdentifierDeclStatement	"int end = find_str_in_buffer ( input_buffer , input_len , end_marker ) ;"	744:1:20468:20531	651653	1	True				
ANR	651673	IdentifierDecl	"end = find_str_in_buffer ( input_buffer , input_len , end_marker )"		651653	0					
ANR	651674	IdentifierDeclType	int		651653	0					
ANR	651675	Identifier	end		651653	1					
ANR	651676	AssignmentExpression	"end = find_str_in_buffer ( input_buffer , input_len , end_marker )"		651653	2		=			
ANR	651677	Identifier	end		651653	0					
ANR	651678	CallExpression	"find_str_in_buffer ( input_buffer , input_len , end_marker )"		651653	1					
ANR	651679	Callee	find_str_in_buffer		651653	0					
ANR	651680	Identifier	find_str_in_buffer		651653	0					
ANR	651681	ArgumentList	input_buffer		651653	1					
ANR	651682	Argument	input_buffer		651653	0					
ANR	651683	Identifier	input_buffer		651653	0					
ANR	651684	Argument	input_len		651653	1					
ANR	651685	Identifier	input_len		651653	0					
ANR	651686	Argument	end_marker		651653	2					
ANR	651687	Identifier	end_marker		651653	0					
ANR	651688	IfStatement	if ( start < 0 )		651653	2					
ANR	651689	Condition	start < 0	745:5:20538:20546	651653	0	True				
ANR	651690	RelationalExpression	start < 0		651653	0		<			
ANR	651691	Identifier	start		651653	0					
ANR	651692	PrimaryExpression	0		651653	1					
ANR	651693	CompoundStatement		4:17:154:154	651653	1					
ANR	651694	IfStatement	if ( error_msg )		651653	0					
ANR	651695	Condition	error_msg	746:6:20558:20566	651653	0	True				
ANR	651696	Identifier	error_msg		651653	0					
ANR	651697	CompoundStatement		5:18:174:174	651653	1					
ANR	651698	ExpressionStatement	"error_msg -> sprintf ( ""Failed to find '%s' in input: %.*s"" , begin_marker , input_len , input_buffer )"	747:3:20575:20678	651653	0	True				
ANR	651699	CallExpression	"error_msg -> sprintf ( ""Failed to find '%s' in input: %.*s"" , begin_marker , input_len , input_buffer )"		651653	0					
ANR	651700	Callee	error_msg -> sprintf		651653	0					
ANR	651701	PtrMemberAccess	error_msg -> sprintf		651653	0					
ANR	651702	Identifier	error_msg		651653	0					
ANR	651703	Identifier	sprintf		651653	1					
ANR	651704	ArgumentList	"""Failed to find '%s' in input: %.*s"""		651653	1					
ANR	651705	Argument	"""Failed to find '%s' in input: %.*s"""		651653	0					
ANR	651706	PrimaryExpression	"""Failed to find '%s' in input: %.*s"""		651653	0					
ANR	651707	Argument	begin_marker		651653	1					
ANR	651708	Identifier	begin_marker		651653	0					
ANR	651709	Argument	input_len		651653	2					
ANR	651710	Identifier	input_len		651653	0					
ANR	651711	Argument	input_buffer		651653	3					
ANR	651712	Identifier	input_buffer		651653	0					
ANR	651713	ReturnStatement	return false ;	750:2:20686:20698	651653	1	True				
ANR	651714	Identifier	false		651653	0					
ANR	651715	ExpressionStatement	start += strlen ( begin_marker )	752:1:20704:20733	651653	3	True				
ANR	651716	AssignmentExpression	start += strlen ( begin_marker )		651653	0		+=			
ANR	651717	Identifier	start		651653	0					
ANR	651718	CallExpression	strlen ( begin_marker )		651653	1					
ANR	651719	Callee	strlen		651653	0					
ANR	651720	Identifier	strlen		651653	0					
ANR	651721	ArgumentList	begin_marker		651653	1					
ANR	651722	Argument	begin_marker		651653	0					
ANR	651723	Identifier	begin_marker		651653	0					
ANR	651724	IfStatement	if ( end < 0 || end < start )		651653	4					
ANR	651725	Condition	end < 0 || end < start	753:5:20740:20761	651653	0	True				
ANR	651726	OrExpression	end < 0 || end < start		651653	0		||			
ANR	651727	RelationalExpression	end < 0		651653	0		<			
ANR	651728	Identifier	end		651653	0					
ANR	651729	PrimaryExpression	0		651653	1					
ANR	651730	RelationalExpression	end < start		651653	1		<			
ANR	651731	Identifier	end		651653	0					
ANR	651732	Identifier	start		651653	1					
ANR	651733	CompoundStatement		12:30:369:369	651653	1					
ANR	651734	IfStatement	if ( error_msg )		651653	0					
ANR	651735	Condition	error_msg	754:6:20773:20781	651653	0	True				
ANR	651736	Identifier	error_msg		651653	0					
ANR	651737	CompoundStatement		13:18:389:389	651653	1					
ANR	651738	ExpressionStatement	"error_msg -> sprintf ( ""Failed to find '%s' in input: %.*s"" , end_marker , input_len , input_buffer )"	755:3:20790:20891	651653	0	True				
ANR	651739	CallExpression	"error_msg -> sprintf ( ""Failed to find '%s' in input: %.*s"" , end_marker , input_len , input_buffer )"		651653	0					
ANR	651740	Callee	error_msg -> sprintf		651653	0					
ANR	651741	PtrMemberAccess	error_msg -> sprintf		651653	0					
ANR	651742	Identifier	error_msg		651653	0					
ANR	651743	Identifier	sprintf		651653	1					
ANR	651744	ArgumentList	"""Failed to find '%s' in input: %.*s"""		651653	1					
ANR	651745	Argument	"""Failed to find '%s' in input: %.*s"""		651653	0					
ANR	651746	PrimaryExpression	"""Failed to find '%s' in input: %.*s"""		651653	0					
ANR	651747	Argument	end_marker		651653	1					
ANR	651748	Identifier	end_marker		651653	0					
ANR	651749	Argument	input_len		651653	2					
ANR	651750	Identifier	input_len		651653	0					
ANR	651751	Argument	input_buffer		651653	3					
ANR	651752	Identifier	input_buffer		651653	0					
ANR	651753	ReturnStatement	return false ;	758:2:20899:20911	651653	1	True				
ANR	651754	Identifier	false		651653	0					
ANR	651755	IdentifierDeclStatement	"char * encoded = condor_base64_encode ( ( unsigned char const * ) input_buffer + start , end - start ) ;"	760:1:20917:21006	651653	5	True				
ANR	651756	IdentifierDecl	"* encoded = condor_base64_encode ( ( unsigned char const * ) input_buffer + start , end - start )"		651653	0					
ANR	651757	IdentifierDeclType	char *		651653	0					
ANR	651758	Identifier	encoded		651653	1					
ANR	651759	AssignmentExpression	"* encoded = condor_base64_encode ( ( unsigned char const * ) input_buffer + start , end - start )"		651653	2		=			
ANR	651760	Identifier	encoded		651653	0					
ANR	651761	CallExpression	"condor_base64_encode ( ( unsigned char const * ) input_buffer + start , end - start )"		651653	1					
ANR	651762	Callee	condor_base64_encode		651653	0					
ANR	651763	Identifier	condor_base64_encode		651653	0					
ANR	651764	ArgumentList	( unsigned char const * ) input_buffer + start		651653	1					
ANR	651765	Argument	( unsigned char const * ) input_buffer + start		651653	0					
ANR	651766	AdditiveExpression	( unsigned char const * ) input_buffer + start		651653	0		+			
ANR	651767	CastExpression	( unsigned char const * ) input_buffer		651653	0					
ANR	651768	CastTarget	unsigned char const *		651653	0					
ANR	651769	Identifier	input_buffer		651653	1					
ANR	651770	Identifier	start		651653	1					
ANR	651771	Argument	end - start		651653	1					
ANR	651772	AdditiveExpression	end - start		651653	0		-			
ANR	651773	Identifier	end		651653	0					
ANR	651774	Identifier	start		651653	1					
ANR	651775	ExpressionStatement	output_buffer = encoded	761:1:21009:21032	651653	6	True				
ANR	651776	AssignmentExpression	output_buffer = encoded		651653	0		=			
ANR	651777	Identifier	output_buffer		651653	0					
ANR	651778	Identifier	encoded		651653	1					
ANR	651779	ExpressionStatement	free ( encoded )	762:1:21035:21048	651653	7	True				
ANR	651780	CallExpression	free ( encoded )		651653	0					
ANR	651781	Callee	free		651653	0					
ANR	651782	Identifier	free		651653	0					
ANR	651783	ArgumentList	encoded		651653	1					
ANR	651784	Argument	encoded		651653	0					
ANR	651785	Identifier	encoded		651653	0					
ANR	651786	ReturnStatement	return true ;	763:1:21051:21062	651653	8	True				
ANR	651787	Identifier	true		651653	0					
ANR	651788	ReturnType	static bool		651653	1					
ANR	651789	Identifier	extract_delimited_data_as_base64		651653	2					
ANR	651790	ParameterList	"char const * input_buffer , int input_len , char const * begin_marker , char const * end_marker , MyString & output_buffer , MyString * error_msg"		651653	3					
ANR	651791	Parameter	char const * input_buffer	736:1:20253:20276	651653	0	True				
ANR	651792	ParameterType	char const *		651653	0					
ANR	651793	Identifier	input_buffer		651653	1					
ANR	651794	Parameter	int input_len	737:1:20280:20292	651653	1	True				
ANR	651795	ParameterType	int		651653	0					
ANR	651796	Identifier	input_len		651653	1					
ANR	651797	Parameter	char const * begin_marker	738:1:20296:20319	651653	2	True				
ANR	651798	ParameterType	char const *		651653	0					
ANR	651799	Identifier	begin_marker		651653	1					
ANR	651800	Parameter	char const * end_marker	739:1:20323:20344	651653	3	True				
ANR	651801	ParameterType	char const *		651653	0					
ANR	651802	Identifier	end_marker		651653	1					
ANR	651803	Parameter	MyString & output_buffer	740:1:20348:20370	651653	4	True				
ANR	651804	ParameterType	MyString &		651653	0					
ANR	651805	Identifier	output_buffer		651653	1					
ANR	651806	Parameter	MyString * error_msg	741:1:20374:20392	651653	5	True				
ANR	651807	ParameterType	MyString *		651653	0					
ANR	651808	Identifier	error_msg		651653	1					
ANR	651809	CFGEntryNode	ENTRY		651653		True				
ANR	651810	CFGExitNode	EXIT		651653		True				
ANR	651811	Symbol	input_len		651653						
ANR	651812	Symbol	output_buffer		651653						
ANR	651813	Symbol	error_msg		651653						
ANR	651814	Symbol	begin_marker		651653						
ANR	651815	Symbol	input_buffer		651653						
ANR	651816	Symbol	start		651653						
ANR	651817	Symbol	find_str_in_buffer		651653						
ANR	651818	Symbol	false		651653						
ANR	651819	Symbol	end_marker		651653						
ANR	651820	Symbol	condor_base64_encode		651653						
ANR	651821	Symbol	strlen		651653						
ANR	651822	Symbol	true		651653						
ANR	651823	Symbol	end		651653						
ANR	651824	Symbol	encoded		651653						
ANR	651825	Function	extract_delimited_data	767:0:21068:21843							
ANR	651826	FunctionDef	"extract_delimited_data (char const * input_buffer , int input_len , char const * begin_marker , char const * end_marker , MyString & output_buffer , MyString * error_msg)"		651825	0					
ANR	651827	CompoundStatement		774:0:21247:21843	651825	0					
ANR	651828	IdentifierDeclStatement	"int start = find_str_in_buffer ( input_buffer , input_len , begin_marker ) ;"	775:1:21250:21317	651825	0	True				
ANR	651829	IdentifierDecl	"start = find_str_in_buffer ( input_buffer , input_len , begin_marker )"		651825	0					
ANR	651830	IdentifierDeclType	int		651825	0					
ANR	651831	Identifier	start		651825	1					
ANR	651832	AssignmentExpression	"start = find_str_in_buffer ( input_buffer , input_len , begin_marker )"		651825	2		=			
ANR	651833	Identifier	start		651825	0					
ANR	651834	CallExpression	"find_str_in_buffer ( input_buffer , input_len , begin_marker )"		651825	1					
ANR	651835	Callee	find_str_in_buffer		651825	0					
ANR	651836	Identifier	find_str_in_buffer		651825	0					
ANR	651837	ArgumentList	input_buffer		651825	1					
ANR	651838	Argument	input_buffer		651825	0					
ANR	651839	Identifier	input_buffer		651825	0					
ANR	651840	Argument	input_len		651825	1					
ANR	651841	Identifier	input_len		651825	0					
ANR	651842	Argument	begin_marker		651825	2					
ANR	651843	Identifier	begin_marker		651825	0					
ANR	651844	IdentifierDeclStatement	"int end = find_str_in_buffer ( input_buffer , input_len , end_marker ) ;"	776:1:21320:21383	651825	1	True				
ANR	651845	IdentifierDecl	"end = find_str_in_buffer ( input_buffer , input_len , end_marker )"		651825	0					
ANR	651846	IdentifierDeclType	int		651825	0					
ANR	651847	Identifier	end		651825	1					
ANR	651848	AssignmentExpression	"end = find_str_in_buffer ( input_buffer , input_len , end_marker )"		651825	2		=			
ANR	651849	Identifier	end		651825	0					
ANR	651850	CallExpression	"find_str_in_buffer ( input_buffer , input_len , end_marker )"		651825	1					
ANR	651851	Callee	find_str_in_buffer		651825	0					
ANR	651852	Identifier	find_str_in_buffer		651825	0					
ANR	651853	ArgumentList	input_buffer		651825	1					
ANR	651854	Argument	input_buffer		651825	0					
ANR	651855	Identifier	input_buffer		651825	0					
ANR	651856	Argument	input_len		651825	1					
ANR	651857	Identifier	input_len		651825	0					
ANR	651858	Argument	end_marker		651825	2					
ANR	651859	Identifier	end_marker		651825	0					
ANR	651860	IfStatement	if ( start < 0 )		651825	2					
ANR	651861	Condition	start < 0	777:5:21390:21398	651825	0	True				
ANR	651862	RelationalExpression	start < 0		651825	0		<			
ANR	651863	Identifier	start		651825	0					
ANR	651864	PrimaryExpression	0		651825	1					
ANR	651865	CompoundStatement		4:17:154:154	651825	1					
ANR	651866	IfStatement	if ( error_msg )		651825	0					
ANR	651867	Condition	error_msg	778:6:21410:21418	651825	0	True				
ANR	651868	Identifier	error_msg		651825	0					
ANR	651869	CompoundStatement		5:18:174:174	651825	1					
ANR	651870	ExpressionStatement	"error_msg -> sprintf ( ""Failed to find '%s' in input: %.*s"" , begin_marker , input_len , input_buffer )"	779:3:21427:21530	651825	0	True				
ANR	651871	CallExpression	"error_msg -> sprintf ( ""Failed to find '%s' in input: %.*s"" , begin_marker , input_len , input_buffer )"		651825	0					
ANR	651872	Callee	error_msg -> sprintf		651825	0					
ANR	651873	PtrMemberAccess	error_msg -> sprintf		651825	0					
ANR	651874	Identifier	error_msg		651825	0					
ANR	651875	Identifier	sprintf		651825	1					
ANR	651876	ArgumentList	"""Failed to find '%s' in input: %.*s"""		651825	1					
ANR	651877	Argument	"""Failed to find '%s' in input: %.*s"""		651825	0					
ANR	651878	PrimaryExpression	"""Failed to find '%s' in input: %.*s"""		651825	0					
ANR	651879	Argument	begin_marker		651825	1					
ANR	651880	Identifier	begin_marker		651825	0					
ANR	651881	Argument	input_len		651825	2					
ANR	651882	Identifier	input_len		651825	0					
ANR	651883	Argument	input_buffer		651825	3					
ANR	651884	Identifier	input_buffer		651825	0					
ANR	651885	ReturnStatement	return false ;	782:2:21538:21550	651825	1	True				
ANR	651886	Identifier	false		651825	0					
ANR	651887	ExpressionStatement	start += strlen ( begin_marker )	784:1:21556:21585	651825	3	True				
ANR	651888	AssignmentExpression	start += strlen ( begin_marker )		651825	0		+=			
ANR	651889	Identifier	start		651825	0					
ANR	651890	CallExpression	strlen ( begin_marker )		651825	1					
ANR	651891	Callee	strlen		651825	0					
ANR	651892	Identifier	strlen		651825	0					
ANR	651893	ArgumentList	begin_marker		651825	1					
ANR	651894	Argument	begin_marker		651825	0					
ANR	651895	Identifier	begin_marker		651825	0					
ANR	651896	IfStatement	if ( end < 0 || end < start )		651825	4					
ANR	651897	Condition	end < 0 || end < start	785:5:21592:21613	651825	0	True				
ANR	651898	OrExpression	end < 0 || end < start		651825	0		||			
ANR	651899	RelationalExpression	end < 0		651825	0		<			
ANR	651900	Identifier	end		651825	0					
ANR	651901	PrimaryExpression	0		651825	1					
ANR	651902	RelationalExpression	end < start		651825	1		<			
ANR	651903	Identifier	end		651825	0					
ANR	651904	Identifier	start		651825	1					
ANR	651905	CompoundStatement		12:30:369:369	651825	1					
ANR	651906	IfStatement	if ( error_msg )		651825	0					
ANR	651907	Condition	error_msg	786:6:21625:21633	651825	0	True				
ANR	651908	Identifier	error_msg		651825	0					
ANR	651909	CompoundStatement		13:18:389:389	651825	1					
ANR	651910	ExpressionStatement	"error_msg -> sprintf ( ""Failed to find '%s' in input: %.*s"" , end_marker , input_len , input_buffer )"	787:3:21642:21743	651825	0	True				
ANR	651911	CallExpression	"error_msg -> sprintf ( ""Failed to find '%s' in input: %.*s"" , end_marker , input_len , input_buffer )"		651825	0					
ANR	651912	Callee	error_msg -> sprintf		651825	0					
ANR	651913	PtrMemberAccess	error_msg -> sprintf		651825	0					
ANR	651914	Identifier	error_msg		651825	0					
ANR	651915	Identifier	sprintf		651825	1					
ANR	651916	ArgumentList	"""Failed to find '%s' in input: %.*s"""		651825	1					
ANR	651917	Argument	"""Failed to find '%s' in input: %.*s"""		651825	0					
ANR	651918	PrimaryExpression	"""Failed to find '%s' in input: %.*s"""		651825	0					
ANR	651919	Argument	end_marker		651825	1					
ANR	651920	Identifier	end_marker		651825	0					
ANR	651921	Argument	input_len		651825	2					
ANR	651922	Identifier	input_len		651825	0					
ANR	651923	Argument	input_buffer		651825	3					
ANR	651924	Identifier	input_buffer		651825	0					
ANR	651925	ReturnStatement	return false ;	790:2:21751:21763	651825	1	True				
ANR	651926	Identifier	false		651825	0					
ANR	651927	ExpressionStatement	"output_buffer . sprintf ( ""%.*s"" , end - start , input_buffer + start )"	792:1:21769:21827	651825	5	True				
ANR	651928	CallExpression	"output_buffer . sprintf ( ""%.*s"" , end - start , input_buffer + start )"		651825	0					
ANR	651929	Callee	output_buffer . sprintf		651825	0					
ANR	651930	MemberAccess	output_buffer . sprintf		651825	0					
ANR	651931	Identifier	output_buffer		651825	0					
ANR	651932	Identifier	sprintf		651825	1					
ANR	651933	ArgumentList	"""%.*s"""		651825	1					
ANR	651934	Argument	"""%.*s"""		651825	0					
ANR	651935	PrimaryExpression	"""%.*s"""		651825	0					
ANR	651936	Argument	end - start		651825	1					
ANR	651937	AdditiveExpression	end - start		651825	0		-			
ANR	651938	Identifier	end		651825	0					
ANR	651939	Identifier	start		651825	1					
ANR	651940	Argument	input_buffer + start		651825	2					
ANR	651941	AdditiveExpression	input_buffer + start		651825	0		+			
ANR	651942	Identifier	input_buffer		651825	0					
ANR	651943	Identifier	start		651825	1					
ANR	651944	ReturnStatement	return true ;	793:1:21830:21841	651825	6	True				
ANR	651945	Identifier	true		651825	0					
ANR	651946	ReturnType	static bool		651825	1					
ANR	651947	Identifier	extract_delimited_data		651825	2					
ANR	651948	ParameterList	"char const * input_buffer , int input_len , char const * begin_marker , char const * end_marker , MyString & output_buffer , MyString * error_msg"		651825	3					
ANR	651949	Parameter	char const * input_buffer	768:1:21105:21128	651825	0	True				
ANR	651950	ParameterType	char const *		651825	0					
ANR	651951	Identifier	input_buffer		651825	1					
ANR	651952	Parameter	int input_len	769:1:21132:21144	651825	1	True				
ANR	651953	ParameterType	int		651825	0					
ANR	651954	Identifier	input_len		651825	1					
ANR	651955	Parameter	char const * begin_marker	770:1:21148:21171	651825	2	True				
ANR	651956	ParameterType	char const *		651825	0					
ANR	651957	Identifier	begin_marker		651825	1					
ANR	651958	Parameter	char const * end_marker	771:1:21175:21196	651825	3	True				
ANR	651959	ParameterType	char const *		651825	0					
ANR	651960	Identifier	end_marker		651825	1					
ANR	651961	Parameter	MyString & output_buffer	772:1:21200:21222	651825	4	True				
ANR	651962	ParameterType	MyString &		651825	0					
ANR	651963	Identifier	output_buffer		651825	1					
ANR	651964	Parameter	MyString * error_msg	773:1:21226:21244	651825	5	True				
ANR	651965	ParameterType	MyString *		651825	0					
ANR	651966	Identifier	error_msg		651825	1					
ANR	651967	CFGEntryNode	ENTRY		651825		True				
ANR	651968	CFGExitNode	EXIT		651825		True				
ANR	651969	Symbol	strlen		651825						
ANR	651970	Symbol	input_len		651825						
ANR	651971	Symbol	output_buffer		651825						
ANR	651972	Symbol	error_msg		651825						
ANR	651973	Symbol	begin_marker		651825						
ANR	651974	Symbol	input_buffer		651825						
ANR	651975	Symbol	find_str_in_buffer		651825						
ANR	651976	Symbol	start		651825						
ANR	651977	Symbol	false		651825						
ANR	651978	Symbol	true		651825						
ANR	651979	Symbol	end		651825						
ANR	651980	Symbol	end_marker		651825						
ANR	651981	DeclStmt									
ANR	651982	Decl							MyString	MyString	error_msg
ANR	651983	DeclStmt									
ANR	651984	Decl							Sock	Sock *	sock
ANR	651985	DeclStmt									
ANR	651986	Decl							char const	char const *	fqu
ANR	651987	DeclStmt									
ANR	651988	Decl							MyString	MyString	job_owner
ANR	651989	DeclStmt									
ANR	651990	Decl							ClassAd	ClassAd	input
ANR	651991	DeclStmt									
ANR	651992	Decl							ClassAd	ClassAd *	jobad
ANR	651993	DeclStmt									
ANR	651994	Decl							ClassAd	ClassAd *	machinead
ANR	651995	DeclStmt									
ANR	651996	Decl							bool	bool	enabled
ANR	651997	DeclStmt									
ANR	651998	Decl							MyString	MyString	preferred_shells
ANR	651999	DeclStmt									
ANR	652000	Decl							MyString	MyString	slot_name
ANR	652001	DeclStmt									
ANR	652002	Decl							MyString	MyString	libexec
ANR	652003	DeclStmt									
ANR	652004	Decl							MyString	MyString	ssh_to_job_sshd_setup
ANR	652005	DeclStmt									
ANR	652006	Decl							MyString	MyString	ssh_to_job_shell_setup
ANR	652007	DeclStmt									
ANR	652008	Decl							MyString	MyString	sshd_config_template
ANR	652009	DeclStmt									
ANR	652010	Decl							MyString	MyString	ssh_keygen
ANR	652011	DeclStmt									
ANR	652012	Decl							MyString	MyString	ssh_keygen_args
ANR	652013	DeclStmt									
ANR	652014	Decl							ArgList	ArgList	ssh_keygen_arglist
ANR	652015	DeclStmt									
ANR	652016	Decl							MyString	MyString	client_keygen_args
ANR	652017	DeclStmt									
ANR	652018	Decl							MyString	MyString	ssh_keygen_cmd
ANR	652019	DeclStmt									
ANR	652020	Decl							int	int [ 2 ]	setup_pipe_fds
ANR	652021	DeclStmt									
ANR	652022	Decl							int	int [ 3 ]	setup_std_fds
ANR	652023	DeclStmt									
ANR	652024	Decl							Env	Env	setup_env
ANR	652025	DeclStmt									
ANR	652026	Decl							int	int	setup_opt_mask
ANR	652027	DeclStmt									
ANR	652028	Decl							StringList	StringList	shells
ANR	652029	DeclStmt									
ANR	652030	Decl							char	char *	shell
ANR	652031	DeclStmt									
ANR	652032	Decl							ArgList	ArgList	setup_args
ANR	652033	DeclStmt									
ANR	652034	Decl							int	int	setup_reaper
ANR	652035	DeclStmt									
ANR	652036	Decl							int	int	setup_pid
ANR	652037	DeclStmt									
ANR	652038	Decl							char	char *	setup_output
ANR	652039	DeclStmt									
ANR	652040	Decl							int	int	setup_output_len
ANR	652041	DeclStmt									
ANR	652042	Decl							char	char [ 1024 ]	pipe_buf
ANR	652043	DeclStmt									
ANR	652044	Decl							int	int	n
ANR	652045	DeclStmt									
ANR	652046	Decl							char	char *	old_setup_output
ANR	652047	DeclStmt									
ANR	652048	Decl							bool	bool	rc
ANR	652049	DeclStmt									
ANR	652050	Decl							MyString	MyString	session_dir
ANR	652051	DeclStmt									
ANR	652052	Decl							MyString	MyString	sshd_user
ANR	652053	DeclStmt									
ANR	652054	Decl							MyString	MyString	public_host_key
ANR	652055	DeclStmt									
ANR	652056	Decl							MyString	MyString	private_client_key
ANR	652057	DeclStmt									
ANR	652058	Decl							MyString	MyString	msg
ANR	652059	DeclStmt									
ANR	652060	Decl							MyString	MyString	sshd_config_file
ANR	652061	DeclStmt									
ANR	652062	Decl							MyString	MyString	sshd
ANR	652063	DeclStmt									
ANR	652064	Decl							ArgList	ArgList	sshd_arglist
ANR	652065	DeclStmt									
ANR	652066	Decl							MyString	MyString	sshd_arg_string
ANR	652067	DeclStmt									
ANR	652068	Decl							char	char * *	argarray
ANR	652069	DeclStmt									
ANR	652070	Decl							int	int	i
ANR	652071	DeclStmt									
ANR	652072	Decl							char const	char const *	ptr
ANR	652073	DeclStmt									
ANR	652074	Decl							MyString	MyString	new_arg
ANR	652075	DeclStmt									
ANR	652076	Decl							ClassAd	ClassAd	sshd_ad
ANR	652077	DeclStmt									
ANR	652078	Decl							CondorVersionInfo	CondorVersionInfo	ver_info
ANR	652079	DeclStmt									
ANR	652080	Decl							ClassAd	ClassAd	response
ANR	652081	DeclStmt									
ANR	652082	Decl							MyString	MyString	sshd_log_fname
ANR	652083	DeclStmt									
ANR	652084	Decl							int	int [ 3 ]	std
ANR	652085	DeclStmt									
ANR	652086	Decl							char const	char const * [ 3 ]	std_fname
ANR	652087	DeclStmt									
ANR	652088	Decl							SSHDProc	SSHDProc *	proc
ANR	652089	DeclStmt									
ANR	652090	Decl							MyString	MyString	hold_reason
ANR	652091	DeclStmt									
ANR	652092	Decl							int	int	hold_code
ANR	652093	DeclStmt									
ANR	652094	Decl							int	int	hold_subcode
ANR	652095	DeclStmt									
ANR	652096	Decl							int	int	reply
ANR	652097	Function	CStarter :: Hold	1294:0:36434:37067							
ANR	652098	FunctionDef	CStarter :: Hold ()		652097	0					
ANR	652099	CompoundStatement		1296:0:36462:37067	652097	0					
ANR	652100	IdentifierDeclStatement	bool jobRunning = false ;	1297:1:36466:36489	652097	0	True				
ANR	652101	IdentifierDecl	jobRunning = false		652097	0					
ANR	652102	IdentifierDeclType	bool		652097	0					
ANR	652103	Identifier	jobRunning		652097	1					
ANR	652104	AssignmentExpression	jobRunning = false		652097	2		=			
ANR	652105	Identifier	false		652097	0					
ANR	652106	Identifier	false		652097	1					
ANR	652107	IdentifierDeclStatement	UserProc * job ;	1298:1:36492:36505	652097	1	True				
ANR	652108	IdentifierDecl	* job		652097	0					
ANR	652109	IdentifierDeclType	UserProc *		652097	0					
ANR	652110	Identifier	job		652097	1					
ANR	652111	ExpressionStatement	"dprintf ( D_ALWAYS , ""Hold all jobs\\n"" )"	1300:1:36509:36547	652097	2	True				
ANR	652112	CallExpression	"dprintf ( D_ALWAYS , ""Hold all jobs\\n"" )"		652097	0					
ANR	652113	Callee	dprintf		652097	0					
ANR	652114	Identifier	dprintf		652097	0					
ANR	652115	ArgumentList	D_ALWAYS		652097	1					
ANR	652116	Argument	D_ALWAYS		652097	0					
ANR	652117	Identifier	D_ALWAYS		652097	0					
ANR	652118	Argument	"""Hold all jobs\\n"""		652097	1					
ANR	652119	PrimaryExpression	"""Hold all jobs\\n"""		652097	0					
ANR	652120	IfStatement	if ( this -> deferral_tid != - 1 )		652097	3					
ANR	652121	Condition	this -> deferral_tid != - 1	1306:6:36681:36704	652097	0	True				
ANR	652122	EqualityExpression	this -> deferral_tid != - 1		652097	0		!=			
ANR	652123	PtrMemberAccess	this -> deferral_tid		652097	0					
ANR	652124	Identifier	this		652097	0					
ANR	652125	Identifier	deferral_tid		652097	1					
ANR	652126	UnaryOperationExpression	- 1		652097	1					
ANR	652127	UnaryOperator	-		652097	0					
ANR	652128	PrimaryExpression	1		652097	1					
ANR	652129	CompoundStatement		11:33:245:245	652097	1					
ANR	652130	ExpressionStatement	this -> removeDeferredJobs ( )	1307:2:36712:36738	652097	0	True				
ANR	652131	CallExpression	this -> removeDeferredJobs ( )		652097	0					
ANR	652132	Callee	this -> removeDeferredJobs		652097	0					
ANR	652133	PtrMemberAccess	this -> removeDeferredJobs		652097	0					
ANR	652134	Identifier	this		652097	0					
ANR	652135	Identifier	removeDeferredJobs		652097	1					
ANR	652136	ArgumentList			652097	1					
ANR	652137	ExpressionStatement	m_job_list . Rewind ( )	1310:1:36745:36764	652097	4	True				
ANR	652138	CallExpression	m_job_list . Rewind ( )		652097	0					
ANR	652139	Callee	m_job_list . Rewind		652097	0					
ANR	652140	MemberAccess	m_job_list . Rewind		652097	0					
ANR	652141	Identifier	m_job_list		652097	0					
ANR	652142	Identifier	Rewind		652097	1					
ANR	652143	ArgumentList			652097	1					
ANR	652144	WhileStatement	while ( ( job = m_job_list . Next ( ) ) != NULL )		652097	5					
ANR	652145	Condition	( job = m_job_list . Next ( ) ) != NULL	1311:8:36774:36806	652097	0	True				
ANR	652146	EqualityExpression	( job = m_job_list . Next ( ) ) != NULL		652097	0		!=			
ANR	652147	AssignmentExpression	job = m_job_list . Next ( )		652097	0		=			
ANR	652148	Identifier	job		652097	0					
ANR	652149	CallExpression	m_job_list . Next ( )		652097	1					
ANR	652150	Callee	m_job_list . Next		652097	0					
ANR	652151	MemberAccess	m_job_list . Next		652097	0					
ANR	652152	Identifier	m_job_list		652097	0					
ANR	652153	Identifier	Next		652097	1					
ANR	652154	ArgumentList			652097	1					
ANR	652155	Identifier	NULL		652097	1					
ANR	652156	CompoundStatement		16:44:347:347	652097	1					
ANR	652157	IfStatement	if ( job -> Hold ( ) )		652097	0					
ANR	652158	Condition	job -> Hold ( )	1312:6:36818:36828	652097	0	True				
ANR	652159	CallExpression	job -> Hold ( )		652097	0					
ANR	652160	Callee	job -> Hold		652097	0					
ANR	652161	PtrMemberAccess	job -> Hold		652097	0					
ANR	652162	Identifier	job		652097	0					
ANR	652163	Identifier	Hold		652097	1					
ANR	652164	ArgumentList			652097	1					
ANR	652165	CompoundStatement		17:20:369:369	652097	1					
ANR	652166	ExpressionStatement	m_job_list . DeleteCurrent ( )	1314:3:36885:36911	652097	0	True				
ANR	652167	CallExpression	m_job_list . DeleteCurrent ( )		652097	0					
ANR	652168	Callee	m_job_list . DeleteCurrent		652097	0					
ANR	652169	MemberAccess	m_job_list . DeleteCurrent		652097	0					
ANR	652170	Identifier	m_job_list		652097	0					
ANR	652171	Identifier	DeleteCurrent		652097	1					
ANR	652172	ArgumentList			652097	1					
ANR	652173	Statement	delete	1315:3:36916:36921	652097	1	True				
ANR	652174	ExpressionStatement	job	1315:10:36923:36926	652097	2	True				
ANR	652175	Identifier	job		652097	0					
ANR	652176	ElseStatement	else		652097	0					
ANR	652177	CompoundStatement		21:9:474:474	652097	0					
ANR	652178	ExpressionStatement	jobRunning = true	1318:3:36994:37011	652097	0	True				
ANR	652179	AssignmentExpression	jobRunning = true		652097	0		=			
ANR	652180	Identifier	jobRunning		652097	0					
ANR	652181	Identifier	true		652097	1					
ANR	652182	ExpressionStatement	ShuttingDown = TRUE	1321:1:37021:37040	652097	6	True				
ANR	652183	AssignmentExpression	ShuttingDown = TRUE		652097	0		=			
ANR	652184	Identifier	ShuttingDown		652097	0					
ANR	652185	Identifier	TRUE		652097	1					
ANR	652186	ReturnStatement	return ( ! jobRunning ) ;	1322:1:37043:37065	652097	7	True				
ANR	652187	UnaryOperationExpression	! jobRunning		652097	0					
ANR	652188	UnaryOperator	!		652097	0					
ANR	652189	Identifier	jobRunning		652097	1					
ANR	652190	ReturnType	bool		652097	1					
ANR	652191	Identifier	CStarter :: Hold		652097	2					
ANR	652192	ParameterList			652097	3					
ANR	652193	CFGEntryNode	ENTRY		652097		True				
ANR	652194	CFGExitNode	EXIT		652097		True				
ANR	652195	Symbol	this -> deferral_tid		652097						
ANR	652196	Symbol	NULL		652097						
ANR	652197	Symbol	* job		652097						
ANR	652198	Symbol	job -> Hold		652097						
ANR	652199	Symbol	false		652097						
ANR	652200	Symbol	D_ALWAYS		652097						
ANR	652201	Symbol	this		652097						
ANR	652202	Symbol	ShuttingDown		652097						
ANR	652203	Symbol	TRUE		652097						
ANR	652204	Symbol	jobRunning		652097						
ANR	652205	Symbol	m_job_list . Next		652097						
ANR	652206	Symbol	* this		652097						
ANR	652207	Symbol	m_job_list		652097						
ANR	652208	Symbol	true		652097						
ANR	652209	Symbol	job		652097						
ANR	652210	Function	CStarter :: createTempExecuteDir	1326:0:37071:41620							
ANR	652211	FunctionDef	CStarter :: createTempExecuteDir ()		652210	0					
ANR	652212	CompoundStatement		1328:0:37115:41620	652210	0					
ANR	652213	IfStatement	if ( is_gridshell )		652210	0					
ANR	652214	Condition	is_gridshell	1336:5:37446:37457	652210	0	True				
ANR	652215	Identifier	is_gridshell		652210	0					
ANR	652216	CompoundStatement		9:20:345:345	652210	1					
ANR	652217	ExpressionStatement	"dprintf ( D_ALWAYS , ""gridshell running in: \\""%s\\""\\n"" , WorkingDir . Value ( ) )"	1337:2:37466:37539	652210	0	True				
ANR	652218	CallExpression	"dprintf ( D_ALWAYS , ""gridshell running in: \\""%s\\""\\n"" , WorkingDir . Value ( ) )"		652210	0					
ANR	652219	Callee	dprintf		652210	0					
ANR	652220	Identifier	dprintf		652210	0					
ANR	652221	ArgumentList	D_ALWAYS		652210	1					
ANR	652222	Argument	D_ALWAYS		652210	0					
ANR	652223	Identifier	D_ALWAYS		652210	0					
ANR	652224	Argument	"""gridshell running in: \\""%s\\""\\n"""		652210	1					
ANR	652225	PrimaryExpression	"""gridshell running in: \\""%s\\""\\n"""		652210	0					
ANR	652226	Argument	WorkingDir . Value ( )		652210	2					
ANR	652227	CallExpression	WorkingDir . Value ( )		652210	0					
ANR	652228	Callee	WorkingDir . Value		652210	0					
ANR	652229	MemberAccess	WorkingDir . Value		652210	0					
ANR	652230	Identifier	WorkingDir		652210	0					
ANR	652231	Identifier	Value		652210	1					
ANR	652232	ArgumentList			652210	1					
ANR	652233	ReturnStatement	return true ;	1338:2:37544:37555	652210	1	True				
ANR	652234	Identifier	true		652210	0					
ANR	652235	IdentifierDeclStatement	bool use_chown = false ;	1350:1:37964:37986	652210	1	True				
ANR	652236	IdentifierDecl	use_chown = false		652210	0					
ANR	652237	IdentifierDeclType	bool		652210	0					
ANR	652238	Identifier	use_chown		652210	1					
ANR	652239	AssignmentExpression	use_chown = false		652210	2		=			
ANR	652240	Identifier	false		652210	0					
ANR	652241	Identifier	false		652210	1					
ANR	652242	IfStatement	if ( can_switch_ids ( ) )		652210	2					
ANR	652243	Condition	can_switch_ids ( )	1351:5:37993:38008	652210	0	True				
ANR	652244	CallExpression	can_switch_ids ( )		652210	0					
ANR	652245	Callee	can_switch_ids		652210	0					
ANR	652246	Identifier	can_switch_ids		652210	0					
ANR	652247	ArgumentList			652210	1					
ANR	652248	CompoundStatement		25:2:899:913	652210	1					
ANR	652249	IdentifierDeclStatement	struct stat st ;	1352:2:38015:38029	652210	0	True				
ANR	652250	IdentifierDecl	st		652210	0					
ANR	652251	IdentifierDeclType	struct stat		652210	0					
ANR	652252	Identifier	st		652210	1					
ANR	652253	IfStatement	"if ( stat ( Execute , & st ) == - 1 )"		652210	1					
ANR	652254	Condition	"stat ( Execute , & st ) == - 1"	1353:6:38037:38060	652210	0	True				
ANR	652255	EqualityExpression	"stat ( Execute , & st ) == - 1"		652210	0		==			
ANR	652256	CallExpression	"stat ( Execute , & st )"		652210	0					
ANR	652257	Callee	stat		652210	0					
ANR	652258	Identifier	stat		652210	0					
ANR	652259	ArgumentList	Execute		652210	1					
ANR	652260	Argument	Execute		652210	0					
ANR	652261	Identifier	Execute		652210	0					
ANR	652262	Argument	& st		652210	1					
ANR	652263	UnaryOperationExpression	& st		652210	0					
ANR	652264	UnaryOperator	&		652210	0					
ANR	652265	Identifier	st		652210	1					
ANR	652266	UnaryOperationExpression	- 1		652210	1					
ANR	652267	UnaryOperator	-		652210	0					
ANR	652268	PrimaryExpression	1		652210	1					
ANR	652269	CompoundStatement		26:32:947:947	652210	1					
ANR	652270	ExpressionStatement	"EXCEPT ( ""stat failed on %s: %s"" , Execute , strerror ( errno ) )"	1354:3:38068:38145	652210	0	True				
ANR	652271	CallExpression	"EXCEPT ( ""stat failed on %s: %s"" , Execute , strerror ( errno ) )"		652210	0					
ANR	652272	Callee	EXCEPT		652210	0					
ANR	652273	Identifier	EXCEPT		652210	0					
ANR	652274	ArgumentList	"""stat failed on %s: %s"""		652210	1					
ANR	652275	Argument	"""stat failed on %s: %s"""		652210	0					
ANR	652276	PrimaryExpression	"""stat failed on %s: %s"""		652210	0					
ANR	652277	Argument	Execute		652210	1					
ANR	652278	Identifier	Execute		652210	0					
ANR	652279	Argument	strerror ( errno )		652210	2					
ANR	652280	CallExpression	strerror ( errno )		652210	0					
ANR	652281	Callee	strerror		652210	0					
ANR	652282	Identifier	strerror		652210	0					
ANR	652283	ArgumentList	errno		652210	1					
ANR	652284	Argument	errno		652210	0					
ANR	652285	Identifier	errno		652210	0					
ANR	652286	IfStatement	if ( ! ( st . st_mode & S_IWOTH ) )		652210	2					
ANR	652287	Condition	! ( st . st_mode & S_IWOTH )	1358:6:38157:38179	652210	0	True				
ANR	652288	UnaryOperationExpression	! ( st . st_mode & S_IWOTH )		652210	0					
ANR	652289	UnaryOperator	!		652210	0					
ANR	652290	BitAndExpression	st . st_mode & S_IWOTH		652210	1		&			
ANR	652291	MemberAccess	st . st_mode		652210	0					
ANR	652292	Identifier	st		652210	0					
ANR	652293	Identifier	st_mode		652210	1					
ANR	652294	Identifier	S_IWOTH		652210	1					
ANR	652295	CompoundStatement		31:31:1066:1066	652210	1					
ANR	652296	ExpressionStatement	use_chown = true	1359:3:38187:38203	652210	0	True				
ANR	652297	AssignmentExpression	use_chown = true		652210	0		=			
ANR	652298	Identifier	use_chown		652210	0					
ANR	652299	Identifier	true		652210	1					
ANR	652300	IdentifierDeclStatement	priv_state priv ;	1362:1:38213:38228	652210	3	True				
ANR	652301	IdentifierDecl	priv		652210	0					
ANR	652302	IdentifierDeclType	priv_state		652210	0					
ANR	652303	Identifier	priv		652210	1					
ANR	652304	IfStatement	if ( use_chown )		652210	4					
ANR	652305	Condition	use_chown	1363:5:38235:38243	652210	0	True				
ANR	652306	Identifier	use_chown		652210	0					
ANR	652307	CompoundStatement		36:16:1130:1130	652210	1					
ANR	652308	ExpressionStatement	priv = set_condor_priv ( )	1364:2:38250:38274	652210	0	True				
ANR	652309	AssignmentExpression	priv = set_condor_priv ( )		652210	0		=			
ANR	652310	Identifier	priv		652210	0					
ANR	652311	CallExpression	set_condor_priv ( )		652210	1					
ANR	652312	Callee	set_condor_priv		652210	0					
ANR	652313	Identifier	set_condor_priv		652210	0					
ANR	652314	ArgumentList			652210	1					
ANR	652315	ElseStatement	else		652210	0					
ANR	652316	CompoundStatement		39:6:1169:1169	652210	0					
ANR	652317	ExpressionStatement	priv = set_user_priv ( )	1367:2:38289:38311	652210	0	True				
ANR	652318	AssignmentExpression	priv = set_user_priv ( )		652210	0		=			
ANR	652319	Identifier	priv		652210	0					
ANR	652320	CallExpression	set_user_priv ( )		652210	1					
ANR	652321	Callee	set_user_priv		652210	0					
ANR	652322	Identifier	set_user_priv		652210	0					
ANR	652323	ArgumentList			652210	1					
ANR	652324	IdentifierDeclStatement	CondorPrivSepHelper * cpsh = condorPrivSepHelper ( ) ;	1374:1:38380:38429	652210	5	True				
ANR	652325	IdentifierDecl	* cpsh = condorPrivSepHelper ( )		652210	0					
ANR	652326	IdentifierDeclType	CondorPrivSepHelper *		652210	0					
ANR	652327	Identifier	cpsh		652210	1					
ANR	652328	AssignmentExpression	* cpsh = condorPrivSepHelper ( )		652210	2		=			
ANR	652329	Identifier	cpsh		652210	0					
ANR	652330	CallExpression	condorPrivSepHelper ( )		652210	1					
ANR	652331	Callee	condorPrivSepHelper		652210	0					
ANR	652332	Identifier	condorPrivSepHelper		652210	0					
ANR	652333	ArgumentList			652210	1					
ANR	652334	IfStatement	if ( cpsh != NULL )		652210	6					
ANR	652335	Condition	cpsh != NULL	1375:5:38436:38447	652210	0	True				
ANR	652336	EqualityExpression	cpsh != NULL		652210	0		!=			
ANR	652337	Identifier	cpsh		652210	0					
ANR	652338	Identifier	NULL		652210	1					
ANR	652339	CompoundStatement		48:19:1334:1334	652210	1					
ANR	652340	ExpressionStatement	cpsh -> initialize_sandbox ( WorkingDir . Value ( ) )	1376:2:38454:38498	652210	0	True				
ANR	652341	CallExpression	cpsh -> initialize_sandbox ( WorkingDir . Value ( ) )		652210	0					
ANR	652342	Callee	cpsh -> initialize_sandbox		652210	0					
ANR	652343	PtrMemberAccess	cpsh -> initialize_sandbox		652210	0					
ANR	652344	Identifier	cpsh		652210	0					
ANR	652345	Identifier	initialize_sandbox		652210	1					
ANR	652346	ArgumentList	WorkingDir . Value ( )		652210	1					
ANR	652347	Argument	WorkingDir . Value ( )		652210	0					
ANR	652348	CallExpression	WorkingDir . Value ( )		652210	0					
ANR	652349	Callee	WorkingDir . Value		652210	0					
ANR	652350	MemberAccess	WorkingDir . Value		652210	0					
ANR	652351	Identifier	WorkingDir		652210	0					
ANR	652352	Identifier	Value		652210	1					
ANR	652353	ArgumentList			652210	1					
ANR	652354	ExpressionStatement	WriteAdFiles ( )	1377:2:38502:38516	652210	1	True				
ANR	652355	CallExpression	WriteAdFiles ( )		652210	0					
ANR	652356	Callee	WriteAdFiles		652210	0					
ANR	652357	Identifier	WriteAdFiles		652210	0					
ANR	652358	ArgumentList			652210	1					
ANR	652359	ElseStatement	else		652210	0					
ANR	652360	CompoundStatement		51:8:1410:1410	652210	0					
ANR	652361	IfStatement	"if ( mkdir ( WorkingDir . Value ( ) , 0777 ) < 0 )"		652210	0					
ANR	652362	Condition	"mkdir ( WorkingDir . Value ( ) , 0777 ) < 0"	1379:6:38534:38568	652210	0	True				
ANR	652363	RelationalExpression	"mkdir ( WorkingDir . Value ( ) , 0777 ) < 0"		652210	0		<			
ANR	652364	CallExpression	"mkdir ( WorkingDir . Value ( ) , 0777 )"		652210	0					
ANR	652365	Callee	mkdir		652210	0					
ANR	652366	Identifier	mkdir		652210	0					
ANR	652367	ArgumentList	WorkingDir . Value ( )		652210	1					
ANR	652368	Argument	WorkingDir . Value ( )		652210	0					
ANR	652369	CallExpression	WorkingDir . Value ( )		652210	0					
ANR	652370	Callee	WorkingDir . Value		652210	0					
ANR	652371	MemberAccess	WorkingDir . Value		652210	0					
ANR	652372	Identifier	WorkingDir		652210	0					
ANR	652373	Identifier	Value		652210	1					
ANR	652374	ArgumentList			652210	1					
ANR	652375	Argument	0777		652210	1					
ANR	652376	PrimaryExpression	0777		652210	0					
ANR	652377	PrimaryExpression	0		652210	1					
ANR	652378	CompoundStatement		52:44:1456:1456	652210	1					
ANR	652379	ExpressionStatement	"dprintf ( D_FAILURE | D_ALWAYS , ""couldn't create dir %s: %s\\n"" , WorkingDir . Value ( ) , strerror ( errno ) )"	1380:3:38577:38711	652210	0	True				
ANR	652380	CallExpression	"dprintf ( D_FAILURE | D_ALWAYS , ""couldn't create dir %s: %s\\n"" , WorkingDir . Value ( ) , strerror ( errno ) )"		652210	0					
ANR	652381	Callee	dprintf		652210	0					
ANR	652382	Identifier	dprintf		652210	0					
ANR	652383	ArgumentList	D_FAILURE | D_ALWAYS		652210	1					
ANR	652384	Argument	D_FAILURE | D_ALWAYS		652210	0					
ANR	652385	InclusiveOrExpression	D_FAILURE | D_ALWAYS		652210	0		|			
ANR	652386	Identifier	D_FAILURE		652210	0					
ANR	652387	Identifier	D_ALWAYS		652210	1					
ANR	652388	Argument	"""couldn't create dir %s: %s\\n"""		652210	1					
ANR	652389	PrimaryExpression	"""couldn't create dir %s: %s\\n"""		652210	0					
ANR	652390	Argument	WorkingDir . Value ( )		652210	2					
ANR	652391	CallExpression	WorkingDir . Value ( )		652210	0					
ANR	652392	Callee	WorkingDir . Value		652210	0					
ANR	652393	MemberAccess	WorkingDir . Value		652210	0					
ANR	652394	Identifier	WorkingDir		652210	0					
ANR	652395	Identifier	Value		652210	1					
ANR	652396	ArgumentList			652210	1					
ANR	652397	Argument	strerror ( errno )		652210	3					
ANR	652398	CallExpression	strerror ( errno )		652210	0					
ANR	652399	Callee	strerror		652210	0					
ANR	652400	Identifier	strerror		652210	0					
ANR	652401	ArgumentList	errno		652210	1					
ANR	652402	Argument	errno		652210	0					
ANR	652403	Identifier	errno		652210	0					
ANR	652404	ExpressionStatement	set_priv ( priv )	1384:3:38716:38732	652210	1	True				
ANR	652405	CallExpression	set_priv ( priv )		652210	0					
ANR	652406	Callee	set_priv		652210	0					
ANR	652407	Identifier	set_priv		652210	0					
ANR	652408	ArgumentList	priv		652210	1					
ANR	652409	Argument	priv		652210	0					
ANR	652410	Identifier	priv		652210	0					
ANR	652411	ReturnStatement	return false ;	1385:3:38737:38749	652210	2	True				
ANR	652412	Identifier	false		652210	0					
ANR	652413	ExpressionStatement	WriteAdFiles ( )	1387:2:38757:38771	652210	1	True				
ANR	652414	CallExpression	WriteAdFiles ( )		652210	0					
ANR	652415	Callee	WriteAdFiles		652210	0					
ANR	652416	Identifier	WriteAdFiles		652210	0					
ANR	652417	ArgumentList			652210	1					
ANR	652418	IfStatement	if ( use_chown )		652210	2					
ANR	652419	Condition	use_chown	1389:6:38799:38807	652210	0	True				
ANR	652420	Identifier	use_chown		652210	0					
ANR	652421	CompoundStatement		63:3:1699:1729	652210	1					
ANR	652422	IdentifierDeclStatement	priv_state p = set_root_priv ( ) ;	1390:3:38815:38845	652210	0	True				
ANR	652423	IdentifierDecl	p = set_root_priv ( )		652210	0					
ANR	652424	IdentifierDeclType	priv_state		652210	0					
ANR	652425	Identifier	p		652210	1					
ANR	652426	AssignmentExpression	p = set_root_priv ( )		652210	2		=			
ANR	652427	Identifier	p		652210	0					
ANR	652428	CallExpression	set_root_priv ( )		652210	1					
ANR	652429	Callee	set_root_priv		652210	0					
ANR	652430	Identifier	set_root_priv		652210	0					
ANR	652431	ArgumentList			652210	1					
ANR	652432	IfStatement	"if ( chown ( WorkingDir . Value ( ) , get_user_uid ( ) , get_user_gid ( ) ) == - 1 )"		652210	1					
ANR	652433	Condition	"chown ( WorkingDir . Value ( ) , get_user_uid ( ) , get_user_gid ( ) ) == - 1"	1391:7:38854:38942	652210	0	True				
ANR	652434	EqualityExpression	"chown ( WorkingDir . Value ( ) , get_user_uid ( ) , get_user_gid ( ) ) == - 1"		652210	0		==			
ANR	652435	CallExpression	"chown ( WorkingDir . Value ( ) , get_user_uid ( ) , get_user_gid ( ) )"		652210	0					
ANR	652436	Callee	chown		652210	0					
ANR	652437	Identifier	chown		652210	0					
ANR	652438	ArgumentList	WorkingDir . Value ( )		652210	1					
ANR	652439	Argument	WorkingDir . Value ( )		652210	0					
ANR	652440	CallExpression	WorkingDir . Value ( )		652210	0					
ANR	652441	Callee	WorkingDir . Value		652210	0					
ANR	652442	MemberAccess	WorkingDir . Value		652210	0					
ANR	652443	Identifier	WorkingDir		652210	0					
ANR	652444	Identifier	Value		652210	1					
ANR	652445	ArgumentList			652210	1					
ANR	652446	Argument	get_user_uid ( )		652210	1					
ANR	652447	CallExpression	get_user_uid ( )		652210	0					
ANR	652448	Callee	get_user_uid		652210	0					
ANR	652449	Identifier	get_user_uid		652210	0					
ANR	652450	ArgumentList			652210	1					
ANR	652451	Argument	get_user_gid ( )		652210	2					
ANR	652452	CallExpression	get_user_gid ( )		652210	0					
ANR	652453	Callee	get_user_gid		652210	0					
ANR	652454	Identifier	get_user_gid		652210	0					
ANR	652455	ArgumentList			652210	1					
ANR	652456	UnaryOperationExpression	- 1		652210	1					
ANR	652457	UnaryOperator	-		652210	0					
ANR	652458	PrimaryExpression	1		652210	1					
ANR	652459	CompoundStatement		67:3:1832:1832	652210	1					
ANR	652460	ExpressionStatement	"EXCEPT ( ""chown error on %s: %s"" , WorkingDir . Value ( ) , strerror ( errno ) )"	1395:4:38954:39044	652210	0	True				
ANR	652461	CallExpression	"EXCEPT ( ""chown error on %s: %s"" , WorkingDir . Value ( ) , strerror ( errno ) )"		652210	0					
ANR	652462	Callee	EXCEPT		652210	0					
ANR	652463	Identifier	EXCEPT		652210	0					
ANR	652464	ArgumentList	"""chown error on %s: %s"""		652210	1					
ANR	652465	Argument	"""chown error on %s: %s"""		652210	0					
ANR	652466	PrimaryExpression	"""chown error on %s: %s"""		652210	0					
ANR	652467	Argument	WorkingDir . Value ( )		652210	1					
ANR	652468	CallExpression	WorkingDir . Value ( )		652210	0					
ANR	652469	Callee	WorkingDir . Value		652210	0					
ANR	652470	MemberAccess	WorkingDir . Value		652210	0					
ANR	652471	Identifier	WorkingDir		652210	0					
ANR	652472	Identifier	Value		652210	1					
ANR	652473	ArgumentList			652210	1					
ANR	652474	Argument	strerror ( errno )		652210	2					
ANR	652475	CallExpression	strerror ( errno )		652210	0					
ANR	652476	Callee	strerror		652210	0					
ANR	652477	Identifier	strerror		652210	0					
ANR	652478	ArgumentList	errno		652210	1					
ANR	652479	Argument	errno		652210	0					
ANR	652480	Identifier	errno		652210	0					
ANR	652481	ExpressionStatement	set_priv ( p )	1399:3:39054:39065	652210	2	True				
ANR	652482	CallExpression	set_priv ( p )		652210	0					
ANR	652483	Callee	set_priv		652210	0					
ANR	652484	Identifier	set_priv		652210	0					
ANR	652485	ArgumentList	p		652210	1					
ANR	652486	Argument	p		652210	0					
ANR	652487	Identifier	p		652210	0					
ANR	652488	CompoundStatement		89:2:2304:2357	652210	7					
ANR	652489	ExpressionStatement	canonicalize_dir_delimiters ( WorkingDir )	1410:2:39254:39293	652210	0	True				
ANR	652490	CallExpression	canonicalize_dir_delimiters ( WorkingDir )		652210	0					
ANR	652491	Callee	canonicalize_dir_delimiters		652210	0					
ANR	652492	Identifier	canonicalize_dir_delimiters		652210	0					
ANR	652493	ArgumentList	WorkingDir		652210	1					
ANR	652494	Argument	WorkingDir		652210	0					
ANR	652495	Identifier	WorkingDir		652210	0					
ANR	652496	IdentifierDeclStatement	perm dirperm ;	1412:2:39298:39310	652210	1	True				
ANR	652497	IdentifierDecl	dirperm		652210	0					
ANR	652498	IdentifierDeclType	perm		652210	0					
ANR	652499	Identifier	dirperm		652210	1					
ANR	652500	IdentifierDeclStatement	const char * nobody_login = get_user_loginname ( ) ;	1413:2:39314:39362	652210	2	True				
ANR	652501	IdentifierDecl	* nobody_login = get_user_loginname ( )		652210	0					
ANR	652502	IdentifierDeclType	const char *		652210	0					
ANR	652503	Identifier	nobody_login		652210	1					
ANR	652504	AssignmentExpression	* nobody_login = get_user_loginname ( )		652210	2		=			
ANR	652505	Identifier	nobody_login		652210	0					
ANR	652506	CallExpression	get_user_loginname ( )		652210	1					
ANR	652507	Callee	get_user_loginname		652210	0					
ANR	652508	Identifier	get_user_loginname		652210	0					
ANR	652509	ArgumentList			652210	1					
ANR	652510	ExpressionStatement	ASSERT ( nobody_login )	1414:2:39366:39386	652210	3	True				
ANR	652511	CallExpression	ASSERT ( nobody_login )		652210	0					
ANR	652512	Callee	ASSERT		652210	0					
ANR	652513	Identifier	ASSERT		652210	0					
ANR	652514	ArgumentList	nobody_login		652210	1					
ANR	652515	Argument	nobody_login		652210	0					
ANR	652516	Identifier	nobody_login		652210	0					
ANR	652517	ExpressionStatement	dirperm . init ( nobody_login )	1415:2:39390:39416	652210	4	True				
ANR	652518	CallExpression	dirperm . init ( nobody_login )		652210	0					
ANR	652519	Callee	dirperm . init		652210	0					
ANR	652520	MemberAccess	dirperm . init		652210	0					
ANR	652521	Identifier	dirperm		652210	0					
ANR	652522	Identifier	init		652210	1					
ANR	652523	ArgumentList	nobody_login		652210	1					
ANR	652524	Argument	nobody_login		652210	0					
ANR	652525	Identifier	nobody_login		652210	0					
ANR	652526	IdentifierDeclStatement	bool ret_val = dirperm . set_acls ( WorkingDir . Value ( ) ) ;	1416:2:39420:39473	652210	5	True				
ANR	652527	IdentifierDecl	ret_val = dirperm . set_acls ( WorkingDir . Value ( ) )		652210	0					
ANR	652528	IdentifierDeclType	bool		652210	0					
ANR	652529	Identifier	ret_val		652210	1					
ANR	652530	AssignmentExpression	ret_val = dirperm . set_acls ( WorkingDir . Value ( ) )		652210	2		=			
ANR	652531	Identifier	ret_val		652210	0					
ANR	652532	CallExpression	dirperm . set_acls ( WorkingDir . Value ( ) )		652210	1					
ANR	652533	Callee	dirperm . set_acls		652210	0					
ANR	652534	MemberAccess	dirperm . set_acls		652210	0					
ANR	652535	Identifier	dirperm		652210	0					
ANR	652536	Identifier	set_acls		652210	1					
ANR	652537	ArgumentList	WorkingDir . Value ( )		652210	1					
ANR	652538	Argument	WorkingDir . Value ( )		652210	0					
ANR	652539	CallExpression	WorkingDir . Value ( )		652210	0					
ANR	652540	Callee	WorkingDir . Value		652210	0					
ANR	652541	MemberAccess	WorkingDir . Value		652210	0					
ANR	652542	Identifier	WorkingDir		652210	0					
ANR	652543	Identifier	Value		652210	1					
ANR	652544	ArgumentList			652210	1					
ANR	652545	IfStatement	if ( ! ret_val )		652210	6					
ANR	652546	Condition	! ret_val	1417:7:39482:39489	652210	0	True				
ANR	652547	UnaryOperationExpression	! ret_val		652210	0					
ANR	652548	UnaryOperator	!		652210	0					
ANR	652549	Identifier	ret_val		652210	1					
ANR	652550	CompoundStatement		90:18:2377:2377	652210	1					
ANR	652551	ExpressionStatement	"dprintf ( D_ALWAYS , ""UNABLE TO SET PERMISSIONS ON EXECUTE DIRECTORY\\n"" )"	1418:3:39498:39566	652210	0	True				
ANR	652552	CallExpression	"dprintf ( D_ALWAYS , ""UNABLE TO SET PERMISSIONS ON EXECUTE DIRECTORY\\n"" )"		652210	0					
ANR	652553	Callee	dprintf		652210	0					
ANR	652554	Identifier	dprintf		652210	0					
ANR	652555	ArgumentList	D_ALWAYS		652210	1					
ANR	652556	Argument	D_ALWAYS		652210	0					
ANR	652557	Identifier	D_ALWAYS		652210	0					
ANR	652558	Argument	"""UNABLE TO SET PERMISSIONS ON EXECUTE DIRECTORY\\n"""		652210	1					
ANR	652559	PrimaryExpression	"""UNABLE TO SET PERMISSIONS ON EXECUTE DIRECTORY\\n"""		652210	0					
ANR	652560	ExpressionStatement	set_priv ( priv )	1419:3:39571:39587	652210	1	True				
ANR	652561	CallExpression	set_priv ( priv )		652210	0					
ANR	652562	Callee	set_priv		652210	0					
ANR	652563	Identifier	set_priv		652210	0					
ANR	652564	ArgumentList	priv		652210	1					
ANR	652565	Argument	priv		652210	0					
ANR	652566	Identifier	priv		652210	0					
ANR	652567	ReturnStatement	return false ;	1420:3:39592:39604	652210	2	True				
ANR	652568	Identifier	false		652210	0					
ANR	652569	IfStatement	"if ( param_boolean_crufty ( ""ENCRYPT_EXECUTE_DIRECTORY"" , false ) )"		652210	8					
ANR	652570	Condition	"param_boolean_crufty ( ""ENCRYPT_EXECUTE_DIRECTORY"" , false )"	1427:6:39716:39771	652210	0	True				
ANR	652571	CallExpression	"param_boolean_crufty ( ""ENCRYPT_EXECUTE_DIRECTORY"" , false )"		652210	0					
ANR	652572	Callee	param_boolean_crufty		652210	0					
ANR	652573	Identifier	param_boolean_crufty		652210	0					
ANR	652574	ArgumentList	"""ENCRYPT_EXECUTE_DIRECTORY"""		652210	1					
ANR	652575	Argument	"""ENCRYPT_EXECUTE_DIRECTORY"""		652210	0					
ANR	652576	PrimaryExpression	"""ENCRYPT_EXECUTE_DIRECTORY"""		652210	0					
ANR	652577	Argument	false		652210	1					
ANR	652578	Identifier	false		652210	0					
ANR	652579	CompoundStatement		120:3:3310:3398	652210	1					
ANR	652580	Statement	typedef	1432:3:39880:39886	652210	0	True				
ANR	652581	ExpressionStatement	"BOOL ( WINAPI * FPEncryptionDisable ) ( LPCWSTR , BOOL )"	1432:11:39888:39936	652210	1	True				
ANR	652582	CallExpression	"BOOL ( WINAPI * FPEncryptionDisable ) ( LPCWSTR , BOOL )"		652210	0					
ANR	652583	Callee	BOOL ( WINAPI * FPEncryptionDisable )		652210	0					
ANR	652584	CallExpression	BOOL ( WINAPI * FPEncryptionDisable )		652210	0					
ANR	652585	Callee	BOOL		652210	0					
ANR	652586	Identifier	BOOL		652210	0					
ANR	652587	ArgumentList	WINAPI * FPEncryptionDisable		652210	1					
ANR	652588	Argument	WINAPI * FPEncryptionDisable		652210	0					
ANR	652589	MultiplicativeExpression	WINAPI * FPEncryptionDisable		652210	0		*			
ANR	652590	Identifier	WINAPI		652210	0					
ANR	652591	Identifier	FPEncryptionDisable		652210	1					
ANR	652592	ArgumentList	LPCWSTR		652210	1					
ANR	652593	Argument	LPCWSTR		652210	0					
ANR	652594	Identifier	LPCWSTR		652210	0					
ANR	652595	Argument	BOOL		652210	1					
ANR	652596	Identifier	BOOL		652210	0					
ANR	652597	Statement	typedef	1433:3:39941:39947	652210	2	True				
ANR	652598	ExpressionStatement	BOOL ( WINAPI * FPEncryptFileA ) ( LPCSTR )	1433:11:39949:39986	652210	3	True				
ANR	652599	CallExpression	BOOL ( WINAPI * FPEncryptFileA ) ( LPCSTR )		652210	0					
ANR	652600	Callee	BOOL ( WINAPI * FPEncryptFileA )		652210	0					
ANR	652601	CallExpression	BOOL ( WINAPI * FPEncryptFileA )		652210	0					
ANR	652602	Callee	BOOL		652210	0					
ANR	652603	Identifier	BOOL		652210	0					
ANR	652604	ArgumentList	WINAPI * FPEncryptFileA		652210	1					
ANR	652605	Argument	WINAPI * FPEncryptFileA		652210	0					
ANR	652606	MultiplicativeExpression	WINAPI * FPEncryptFileA		652210	0		*			
ANR	652607	Identifier	WINAPI		652210	0					
ANR	652608	Identifier	FPEncryptFileA		652210	1					
ANR	652609	ArgumentList	LPCSTR		652210	1					
ANR	652610	Argument	LPCSTR		652210	0					
ANR	652611	Identifier	LPCSTR		652210	0					
ANR	652612	IdentifierDeclStatement	bool efs_support = true ;	1434:3:39991:40014	652210	4	True				
ANR	652613	IdentifierDecl	efs_support = true		652210	0					
ANR	652614	IdentifierDeclType	bool		652210	0					
ANR	652615	Identifier	efs_support		652210	1					
ANR	652616	AssignmentExpression	efs_support = true		652210	2		=			
ANR	652617	Identifier	true		652210	0					
ANR	652618	Identifier	true		652210	1					
ANR	652619	IdentifierDeclStatement	"HINSTANCE advapi = LoadLibrary ( ""ADVAPI32.dll"" ) ;"	1436:3:40023:40069	652210	5	True				
ANR	652620	IdentifierDecl	"advapi = LoadLibrary ( ""ADVAPI32.dll"" )"		652210	0					
ANR	652621	IdentifierDeclType	HINSTANCE		652210	0					
ANR	652622	Identifier	advapi		652210	1					
ANR	652623	AssignmentExpression	"advapi = LoadLibrary ( ""ADVAPI32.dll"" )"		652210	2		=			
ANR	652624	Identifier	advapi		652210	0					
ANR	652625	CallExpression	"LoadLibrary ( ""ADVAPI32.dll"" )"		652210	1					
ANR	652626	Callee	LoadLibrary		652210	0					
ANR	652627	Identifier	LoadLibrary		652210	0					
ANR	652628	ArgumentList	"""ADVAPI32.dll"""		652210	1					
ANR	652629	Argument	"""ADVAPI32.dll"""		652210	0					
ANR	652630	PrimaryExpression	"""ADVAPI32.dll"""		652210	0					
ANR	652631	IfStatement	if ( ! advapi )		652210	6					
ANR	652632	Condition	! advapi	1437:8:40079:40085	652210	0	True				
ANR	652633	UnaryOperationExpression	! advapi		652210	0					
ANR	652634	UnaryOperator	!		652210	0					
ANR	652635	Identifier	advapi		652210	1					
ANR	652636	CompoundStatement		110:18:2973:2973	652210	1					
ANR	652637	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Can't load advapi32.dll\\n"" )"	1438:4:40095:40144	652210	0	True				
ANR	652638	CallExpression	"dprintf ( D_FULLDEBUG , ""Can't load advapi32.dll\\n"" )"		652210	0					
ANR	652639	Callee	dprintf		652210	0					
ANR	652640	Identifier	dprintf		652210	0					
ANR	652641	ArgumentList	D_FULLDEBUG		652210	1					
ANR	652642	Argument	D_FULLDEBUG		652210	0					
ANR	652643	Identifier	D_FULLDEBUG		652210	0					
ANR	652644	Argument	"""Can't load advapi32.dll\\n"""		652210	1					
ANR	652645	PrimaryExpression	"""Can't load advapi32.dll\\n"""		652210	0					
ANR	652646	ExpressionStatement	efs_support = false	1439:4:40150:40169	652210	1	True				
ANR	652647	AssignmentExpression	efs_support = false		652210	0		=			
ANR	652648	Identifier	efs_support		652210	0					
ANR	652649	Identifier	false		652210	1					
ANR	652650	IdentifierDeclStatement	"FPEncryptionDisable EncryptionDisable = ( FPEncryptionDisable ) GetProcAddress ( advapi , ""EncryptionDisable"" ) ;"	1441:3:40179:40288	652210	7	True				
ANR	652651	IdentifierDecl	"EncryptionDisable = ( FPEncryptionDisable ) GetProcAddress ( advapi , ""EncryptionDisable"" )"		652210	0					
ANR	652652	IdentifierDeclType	FPEncryptionDisable		652210	0					
ANR	652653	Identifier	EncryptionDisable		652210	1					
ANR	652654	AssignmentExpression	"EncryptionDisable = ( FPEncryptionDisable ) GetProcAddress ( advapi , ""EncryptionDisable"" )"		652210	2		=			
ANR	652655	Identifier	EncryptionDisable		652210	0					
ANR	652656	CastExpression	"( FPEncryptionDisable ) GetProcAddress ( advapi , ""EncryptionDisable"" )"		652210	1					
ANR	652657	CastTarget	FPEncryptionDisable		652210	0					
ANR	652658	CallExpression	"GetProcAddress ( advapi , ""EncryptionDisable"" )"		652210	1					
ANR	652659	Callee	GetProcAddress		652210	0					
ANR	652660	Identifier	GetProcAddress		652210	0					
ANR	652661	ArgumentList	advapi		652210	1					
ANR	652662	Argument	advapi		652210	0					
ANR	652663	Identifier	advapi		652210	0					
ANR	652664	Argument	"""EncryptionDisable"""		652210	1					
ANR	652665	PrimaryExpression	"""EncryptionDisable"""		652210	0					
ANR	652666	IfStatement	if ( ! EncryptionDisable )		652210	8					
ANR	652667	Condition	! EncryptionDisable	1443:8:40298:40315	652210	0	True				
ANR	652668	UnaryOperationExpression	! EncryptionDisable		652210	0					
ANR	652669	UnaryOperator	!		652210	0					
ANR	652670	Identifier	EncryptionDisable		652210	1					
ANR	652671	CompoundStatement		116:29:3203:3203	652210	1					
ANR	652672	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""cannot get address for EncryptionDisable()"" )"	1444:4:40325:40391	652210	0	True				
ANR	652673	CallExpression	"dprintf ( D_FULLDEBUG , ""cannot get address for EncryptionDisable()"" )"		652210	0					
ANR	652674	Callee	dprintf		652210	0					
ANR	652675	Identifier	dprintf		652210	0					
ANR	652676	ArgumentList	D_FULLDEBUG		652210	1					
ANR	652677	Argument	D_FULLDEBUG		652210	0					
ANR	652678	Identifier	D_FULLDEBUG		652210	0					
ANR	652679	Argument	"""cannot get address for EncryptionDisable()"""		652210	1					
ANR	652680	PrimaryExpression	"""cannot get address for EncryptionDisable()"""		652210	0					
ANR	652681	ExpressionStatement	efs_support = false	1445:4:40397:40416	652210	1	True				
ANR	652682	AssignmentExpression	efs_support = false		652210	0		=			
ANR	652683	Identifier	efs_support		652210	0					
ANR	652684	Identifier	false		652210	1					
ANR	652685	IdentifierDeclStatement	"FPEncryptFileA EncryptFile = ( FPEncryptFileA ) GetProcAddress ( advapi , ""EncryptFileA"" ) ;"	1447:3:40426:40514	652210	9	True				
ANR	652686	IdentifierDecl	"EncryptFile = ( FPEncryptFileA ) GetProcAddress ( advapi , ""EncryptFileA"" )"		652210	0					
ANR	652687	IdentifierDeclType	FPEncryptFileA		652210	0					
ANR	652688	Identifier	EncryptFile		652210	1					
ANR	652689	AssignmentExpression	"EncryptFile = ( FPEncryptFileA ) GetProcAddress ( advapi , ""EncryptFileA"" )"		652210	2		=			
ANR	652690	Identifier	EncryptFile		652210	0					
ANR	652691	CastExpression	"( FPEncryptFileA ) GetProcAddress ( advapi , ""EncryptFileA"" )"		652210	1					
ANR	652692	CastTarget	FPEncryptFileA		652210	0					
ANR	652693	CallExpression	"GetProcAddress ( advapi , ""EncryptFileA"" )"		652210	1					
ANR	652694	Callee	GetProcAddress		652210	0					
ANR	652695	Identifier	GetProcAddress		652210	0					
ANR	652696	ArgumentList	advapi		652210	1					
ANR	652697	Argument	advapi		652210	0					
ANR	652698	Identifier	advapi		652210	0					
ANR	652699	Argument	"""EncryptFileA"""		652210	1					
ANR	652700	PrimaryExpression	"""EncryptFileA"""		652210	0					
ANR	652701	IfStatement	if ( ! EncryptFile )		652210	10					
ANR	652702	Condition	! EncryptFile	1449:8:40524:40535	652210	0	True				
ANR	652703	UnaryOperationExpression	! EncryptFile		652210	0					
ANR	652704	UnaryOperator	!		652210	0					
ANR	652705	Identifier	EncryptFile		652210	1					
ANR	652706	CompoundStatement		122:23:3423:3423	652210	1					
ANR	652707	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""cannot get address for EncryptFile()"" )"	1450:4:40545:40605	652210	0	True				
ANR	652708	CallExpression	"dprintf ( D_FULLDEBUG , ""cannot get address for EncryptFile()"" )"		652210	0					
ANR	652709	Callee	dprintf		652210	0					
ANR	652710	Identifier	dprintf		652210	0					
ANR	652711	ArgumentList	D_FULLDEBUG		652210	1					
ANR	652712	Argument	D_FULLDEBUG		652210	0					
ANR	652713	Identifier	D_FULLDEBUG		652210	0					
ANR	652714	Argument	"""cannot get address for EncryptFile()"""		652210	1					
ANR	652715	PrimaryExpression	"""cannot get address for EncryptFile()"""		652210	0					
ANR	652716	ExpressionStatement	efs_support = false	1451:4:40611:40630	652210	1	True				
ANR	652717	AssignmentExpression	efs_support = false		652210	0		=			
ANR	652718	Identifier	efs_support		652210	0					
ANR	652719	Identifier	false		652210	1					
ANR	652720	IfStatement	if ( efs_support )		652210	11					
ANR	652721	Condition	efs_support	1454:8:40646:40656	652210	0	True				
ANR	652722	Identifier	efs_support		652210	0					
ANR	652723	CompoundStatement		128:4:3550:3608	652210	1					
ANR	652724	IdentifierDeclStatement	wchar_t * WorkingDir_w = new wchar_t [ WorkingDir . Length ( ) + 1 ] ;	1455:4:40666:40724	652210	0	True				
ANR	652725	IdentifierDecl	* WorkingDir_w = new wchar_t [ WorkingDir . Length ( ) + 1 ]		652210	0					
ANR	652726	IdentifierDeclType	wchar_t *		652210	0					
ANR	652727	Identifier	WorkingDir_w		652210	1					
ANR	652728	AssignmentExpression	* WorkingDir_w = new wchar_t [ WorkingDir . Length ( ) + 1 ]		652210	2		=			
ANR	652729	Identifier	WorkingDir_w		652210	0					
ANR	652730	AdditiveExpression	WorkingDir . Length ( ) + 1		652210	1		+			
ANR	652731	CallExpression	WorkingDir . Length ( )		652210	0					
ANR	652732	Callee	WorkingDir . Length		652210	0					
ANR	652733	MemberAccess	WorkingDir . Length		652210	0					
ANR	652734	Identifier	WorkingDir		652210	0					
ANR	652735	Identifier	Length		652210	1					
ANR	652736	ArgumentList			652210	1					
ANR	652737	PrimaryExpression	1		652210	1					
ANR	652738	Statement	swprintf	1456:4:40730:40737	652210	1	True				
ANR	652739	Statement	(	1456:12:40738:40738	652210	2	True				
ANR	652740	Statement	WorkingDir_w	1456:13:40739:40750	652210	3	True				
ANR	652741	Statement	","	1456:25:40751:40751	652210	4	True				
ANR	652742	Statement	L	1456:27:40753:40753	652210	5	True				
ANR	652743	Statement	"""%S"""	1456:28:40754:40757	652210	6	True				
ANR	652744	Statement	","	1456:32:40758:40758	652210	7	True				
ANR	652745	Statement	WorkingDir	1456:34:40760:40769	652210	8	True				
ANR	652746	Statement	.	1456:44:40770:40770	652210	9	True				
ANR	652747	Statement	Value	1456:45:40771:40775	652210	10	True				
ANR	652748	Statement	(	1456:50:40776:40776	652210	11	True				
ANR	652749	Statement	)	1456:51:40777:40777	652210	12	True				
ANR	652750	Statement	)	1456:52:40778:40778	652210	13	True				
ANR	652751	ExpressionStatement		1456:53:40779:40779	652210	14	True				
ANR	652752	ExpressionStatement	"EncryptionDisable ( WorkingDir_w , FALSE )"	1457:4:40785:40823	652210	15	True				
ANR	652753	CallExpression	"EncryptionDisable ( WorkingDir_w , FALSE )"		652210	0					
ANR	652754	Callee	EncryptionDisable		652210	0					
ANR	652755	Identifier	EncryptionDisable		652210	0					
ANR	652756	ArgumentList	WorkingDir_w		652210	1					
ANR	652757	Argument	WorkingDir_w		652210	0					
ANR	652758	Identifier	WorkingDir_w		652210	0					
ANR	652759	Argument	FALSE		652210	1					
ANR	652760	Identifier	FALSE		652210	0					
ANR	652761	Statement	delete	1458:4:40829:40834	652210	16	True				
ANR	652762	Statement	[	1458:10:40835:40835	652210	17	True				
ANR	652763	Statement	]	1458:11:40836:40836	652210	18	True				
ANR	652764	ExpressionStatement	WorkingDir_w	1458:13:40838:40850	652210	19	True				
ANR	652765	Identifier	WorkingDir_w		652210	0					
ANR	652766	IfStatement	if ( EncryptFile ( WorkingDir . Value ( ) ) == 0 )		652210	20					
ANR	652767	Condition	EncryptFile ( WorkingDir . Value ( ) ) == 0	1460:9:40866:40901	652210	0	True				
ANR	652768	EqualityExpression	EncryptFile ( WorkingDir . Value ( ) ) == 0		652210	0		==			
ANR	652769	CallExpression	EncryptFile ( WorkingDir . Value ( ) )		652210	0					
ANR	652770	Callee	EncryptFile		652210	0					
ANR	652771	Identifier	EncryptFile		652210	0					
ANR	652772	ArgumentList	WorkingDir . Value ( )		652210	1					
ANR	652773	Argument	WorkingDir . Value ( )		652210	0					
ANR	652774	CallExpression	WorkingDir . Value ( )		652210	0					
ANR	652775	Callee	WorkingDir . Value		652210	0					
ANR	652776	MemberAccess	WorkingDir . Value		652210	0					
ANR	652777	Identifier	WorkingDir		652210	0					
ANR	652778	Identifier	Value		652210	1					
ANR	652779	ArgumentList			652210	1					
ANR	652780	PrimaryExpression	0		652210	1					
ANR	652781	CompoundStatement		133:48:3789:3789	652210	1					
ANR	652782	Statement	dprintf	1461:5:40912:40918	652210	0	True				
ANR	652783	Statement	(	1461:12:40919:40919	652210	1	True				
ANR	652784	Statement	D_ALWAYS	1461:13:40920:40927	652210	2	True				
ANR	652785	Statement	","	1461:21:40928:40928	652210	3	True				
ANR	652786	Statement	"""Could not encrypt execute directory """	1461:23:40930:40967	652210	4	True				
ANR	652787	Statement	"""(err=%li)\\n"""	1462:7:40976:40988	652210	5	True				
ANR	652788	Statement	","	1462:20:40989:40989	652210	6	True				
ANR	652789	Statement	GetLastError	1462:22:40991:41002	652210	7	True				
ANR	652790	Statement	(	1462:34:41003:41003	652210	8	True				
ANR	652791	Statement	)	1462:35:41004:41004	652210	9	True				
ANR	652792	Statement	)	1462:36:41005:41005	652210	10	True				
ANR	652793	ExpressionStatement		1462:37:41006:41006	652210	11	True				
ANR	652794	ExpressionStatement	FreeLibrary ( advapi )	1465:4:41019:41038	652210	21	True				
ANR	652795	CallExpression	FreeLibrary ( advapi )		652210	0					
ANR	652796	Callee	FreeLibrary		652210	0					
ANR	652797	Identifier	FreeLibrary		652210	0					
ANR	652798	ArgumentList	advapi		652210	1					
ANR	652799	Argument	advapi		652210	0					
ANR	652800	Identifier	advapi		652210	0					
ANR	652801	ElseStatement	else		652210	0					
ANR	652802	CompoundStatement		140:10:3972:3972	652210	0					
ANR	652803	Statement	dprintf	1469:4:41134:41140	652210	0	True				
ANR	652804	Statement	(	1469:11:41141:41141	652210	1	True				
ANR	652805	Statement	D_ALWAYS	1469:12:41142:41149	652210	2	True				
ANR	652806	Statement	","	1469:20:41150:41150	652210	3	True				
ANR	652807	Statement	"""ENCRYPT_EXECUTE_DIRECTORY set to True, """	1469:22:41152:41192	652210	4	True				
ANR	652808	Statement	"""but the Encryption"""	1470:6:41200:41219	652210	5	True				
ANR	652809	Statement	""" functions are unavailable!"""	1470:27:41221:41249	652210	6	True				
ANR	652810	Statement	)	1470:56:41250:41250	652210	7	True				
ANR	652811	ExpressionStatement		1470:57:41251:41251	652210	8	True				
ANR	652812	IfStatement	if ( chdir ( WorkingDir . Value ( ) ) < 0 )		652210	9					
ANR	652813	Condition	chdir ( WorkingDir . Value ( ) ) < 0	1478:5:41327:41355	652210	0	True				
ANR	652814	RelationalExpression	chdir ( WorkingDir . Value ( ) ) < 0		652210	0		<			
ANR	652815	CallExpression	chdir ( WorkingDir . Value ( ) )		652210	0					
ANR	652816	Callee	chdir		652210	0					
ANR	652817	Identifier	chdir		652210	0					
ANR	652818	ArgumentList	WorkingDir . Value ( )		652210	1					
ANR	652819	Argument	WorkingDir . Value ( )		652210	0					
ANR	652820	CallExpression	WorkingDir . Value ( )		652210	0					
ANR	652821	Callee	WorkingDir . Value		652210	0					
ANR	652822	MemberAccess	WorkingDir . Value		652210	0					
ANR	652823	Identifier	WorkingDir		652210	0					
ANR	652824	Identifier	Value		652210	1					
ANR	652825	ArgumentList			652210	1					
ANR	652826	PrimaryExpression	0		652210	1					
ANR	652827	CompoundStatement		151:37:4243:4243	652210	1					
ANR	652828	ExpressionStatement	"dprintf ( D_FAILURE | D_ALWAYS , ""couldn't move to %s: %s\\n"" , WorkingDir . Value ( ) , strerror ( errno ) )"	1479:2:41363:41463	652210	0	True				
ANR	652829	CallExpression	"dprintf ( D_FAILURE | D_ALWAYS , ""couldn't move to %s: %s\\n"" , WorkingDir . Value ( ) , strerror ( errno ) )"		652210	0					
ANR	652830	Callee	dprintf		652210	0					
ANR	652831	Identifier	dprintf		652210	0					
ANR	652832	ArgumentList	D_FAILURE | D_ALWAYS		652210	1					
ANR	652833	Argument	D_FAILURE | D_ALWAYS		652210	0					
ANR	652834	InclusiveOrExpression	D_FAILURE | D_ALWAYS		652210	0		|			
ANR	652835	Identifier	D_FAILURE		652210	0					
ANR	652836	Identifier	D_ALWAYS		652210	1					
ANR	652837	Argument	"""couldn't move to %s: %s\\n"""		652210	1					
ANR	652838	PrimaryExpression	"""couldn't move to %s: %s\\n"""		652210	0					
ANR	652839	Argument	WorkingDir . Value ( )		652210	2					
ANR	652840	CallExpression	WorkingDir . Value ( )		652210	0					
ANR	652841	Callee	WorkingDir . Value		652210	0					
ANR	652842	MemberAccess	WorkingDir . Value		652210	0					
ANR	652843	Identifier	WorkingDir		652210	0					
ANR	652844	Identifier	Value		652210	1					
ANR	652845	ArgumentList			652210	1					
ANR	652846	Argument	strerror ( errno )		652210	3					
ANR	652847	CallExpression	strerror ( errno )		652210	0					
ANR	652848	Callee	strerror		652210	0					
ANR	652849	Identifier	strerror		652210	0					
ANR	652850	ArgumentList	errno		652210	1					
ANR	652851	Argument	errno		652210	0					
ANR	652852	Identifier	errno		652210	0					
ANR	652853	ExpressionStatement	set_priv ( priv )	1481:2:41468:41484	652210	1	True				
ANR	652854	CallExpression	set_priv ( priv )		652210	0					
ANR	652855	Callee	set_priv		652210	0					
ANR	652856	Identifier	set_priv		652210	0					
ANR	652857	ArgumentList	priv		652210	1					
ANR	652858	Argument	priv		652210	0					
ANR	652859	Identifier	priv		652210	0					
ANR	652860	ReturnStatement	return false ;	1482:2:41488:41500	652210	2	True				
ANR	652861	Identifier	false		652210	0					
ANR	652862	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Done moving to directory \\""%s\\""\\n"" , WorkingDir . Value ( ) )"	1484:1:41506:41585	652210	10	True				
ANR	652863	CallExpression	"dprintf ( D_FULLDEBUG , ""Done moving to directory \\""%s\\""\\n"" , WorkingDir . Value ( ) )"		652210	0					
ANR	652864	Callee	dprintf		652210	0					
ANR	652865	Identifier	dprintf		652210	0					
ANR	652866	ArgumentList	D_FULLDEBUG		652210	1					
ANR	652867	Argument	D_FULLDEBUG		652210	0					
ANR	652868	Identifier	D_FULLDEBUG		652210	0					
ANR	652869	Argument	"""Done moving to directory \\""%s\\""\\n"""		652210	1					
ANR	652870	PrimaryExpression	"""Done moving to directory \\""%s\\""\\n"""		652210	0					
ANR	652871	Argument	WorkingDir . Value ( )		652210	2					
ANR	652872	CallExpression	WorkingDir . Value ( )		652210	0					
ANR	652873	Callee	WorkingDir . Value		652210	0					
ANR	652874	MemberAccess	WorkingDir . Value		652210	0					
ANR	652875	Identifier	WorkingDir		652210	0					
ANR	652876	Identifier	Value		652210	1					
ANR	652877	ArgumentList			652210	1					
ANR	652878	ExpressionStatement	set_priv ( priv )	1485:1:41588:41604	652210	11	True				
ANR	652879	CallExpression	set_priv ( priv )		652210	0					
ANR	652880	Callee	set_priv		652210	0					
ANR	652881	Identifier	set_priv		652210	0					
ANR	652882	ArgumentList	priv		652210	1					
ANR	652883	Argument	priv		652210	0					
ANR	652884	Identifier	priv		652210	0					
ANR	652885	ReturnStatement	return true ;	1486:1:41607:41618	652210	12	True				
ANR	652886	Identifier	true		652210	0					
ANR	652887	ReturnType	bool		652210	1					
ANR	652888	Identifier	CStarter :: createTempExecuteDir		652210	2					
ANR	652889	ParameterList			652210	3					
ANR	652890	CFGEntryNode	ENTRY		652210		True				
ANR	652891	CFGExitNode	EXIT		652210		True				
ANR	652892	Symbol	set_condor_priv		652210						
ANR	652893	Symbol	EncryptFile		652210						
ANR	652894	Symbol	set_user_priv		652210						
ANR	652895	Symbol	FPEncryptFileA		652210						
ANR	652896	Symbol	& st		652210						
ANR	652897	Symbol	st . st_mode		652210						
ANR	652898	Symbol	can_switch_ids		652210						
ANR	652899	Symbol	is_gridshell		652210						
ANR	652900	Symbol	get_user_gid		652210						
ANR	652901	Symbol	LoadLibrary		652210						
ANR	652902	Symbol	priv		652210						
ANR	652903	Symbol	mkdir		652210						
ANR	652904	Symbol	condorPrivSepHelper		652210						
ANR	652905	Symbol	WINAPI		652210						
ANR	652906	Symbol	errno		652210						
ANR	652907	Symbol	NULL		652210						
ANR	652908	Symbol	chown		652210						
ANR	652909	Symbol	get_user_uid		652210						
ANR	652910	Symbol	D_FULLDEBUG		652210						
ANR	652911	Symbol	D_FAILURE		652210						
ANR	652912	Symbol	WorkingDir . Length		652210						
ANR	652913	Symbol	chdir		652210						
ANR	652914	Symbol	cpsh		652210						
ANR	652915	Symbol	LPCWSTR		652210						
ANR	652916	Symbol	strerror		652210						
ANR	652917	Symbol	WorkingDir		652210						
ANR	652918	Symbol	true		652210						
ANR	652919	Symbol	advapi		652210						
ANR	652920	Symbol	get_user_loginname		652210						
ANR	652921	Symbol	efs_support		652210						
ANR	652922	Symbol	Execute		652210						
ANR	652923	Symbol	LPCSTR		652210						
ANR	652924	Symbol	S_IWOTH		652210						
ANR	652925	Symbol	use_chown		652210						
ANR	652926	Symbol	FPEncryptionDisable		652210						
ANR	652927	Symbol	GetProcAddress		652210						
ANR	652928	Symbol	param_boolean_crufty		652210						
ANR	652929	Symbol	nobody_login		652210						
ANR	652930	Symbol	dirperm . set_acls		652210						
ANR	652931	Symbol	st		652210						
ANR	652932	Symbol	stat		652210						
ANR	652933	Symbol	WorkingDir_w		652210						
ANR	652934	Symbol	D_ALWAYS		652210						
ANR	652935	Symbol	false		652210						
ANR	652936	Symbol	set_root_priv		652210						
ANR	652937	Symbol	dirperm		652210						
ANR	652938	Symbol	ret_val		652210						
ANR	652939	Symbol	p		652210						
ANR	652940	Symbol	BOOL		652210						
ANR	652941	Symbol	EncryptionDisable		652210						
ANR	652942	Symbol	FALSE		652210						
ANR	652943	Symbol	WorkingDir . Value		652210						
ANR	652944	Function	CStarter :: jobEnvironmentReady	1496:0:41804:43498							
ANR	652945	FunctionDef	CStarter :: jobEnvironmentReady ()		652944	0					
ANR	652946	CompoundStatement		1498:0:41846:43498	652944	0					
ANR	652947	IdentifierDeclStatement	GLExecPrivSepHelper * gpsh = glexecPrivSepHelper ( ) ;	1504:1:41968:42017	652944	0	True				
ANR	652948	IdentifierDecl	* gpsh = glexecPrivSepHelper ( )		652944	0					
ANR	652949	IdentifierDeclType	GLExecPrivSepHelper *		652944	0					
ANR	652950	Identifier	gpsh		652944	1					
ANR	652951	AssignmentExpression	* gpsh = glexecPrivSepHelper ( )		652944	2		=			
ANR	652952	Identifier	gpsh		652944	0					
ANR	652953	CallExpression	glexecPrivSepHelper ( )		652944	1					
ANR	652954	Callee	glexecPrivSepHelper		652944	0					
ANR	652955	Identifier	glexecPrivSepHelper		652944	0					
ANR	652956	ArgumentList			652944	1					
ANR	652957	IfStatement	if ( gpsh != NULL )		652944	1					
ANR	652958	Condition	gpsh != NULL	1505:5:42024:42035	652944	0	True				
ANR	652959	EqualityExpression	gpsh != NULL		652944	0		!=			
ANR	652960	Identifier	gpsh		652944	0					
ANR	652961	Identifier	NULL		652944	1					
ANR	652962	CompoundStatement		16:2:430:490	652944	1					
ANR	652963	IdentifierDeclStatement	MyString proxy_path ;	1506:2:42042:42061	652944	0	True				
ANR	652964	IdentifierDecl	proxy_path		652944	0					
ANR	652965	IdentifierDeclType	MyString		652944	0					
ANR	652966	Identifier	proxy_path		652944	1					
ANR	652967	IfStatement	"if ( ! jic -> jobClassAd ( ) -> LookupString ( ATTR_X509_USER_PROXY , proxy_path ) )"		652944	1					
ANR	652968	Condition	"! jic -> jobClassAd ( ) -> LookupString ( ATTR_X509_USER_PROXY , proxy_path )"	1507:6:42069:42173	652944	0	True				
ANR	652969	UnaryOperationExpression	"! jic -> jobClassAd ( ) -> LookupString ( ATTR_X509_USER_PROXY , proxy_path )"		652944	0					
ANR	652970	UnaryOperator	!		652944	0					
ANR	652971	CallExpression	"jic -> jobClassAd ( ) -> LookupString ( ATTR_X509_USER_PROXY , proxy_path )"		652944	1					
ANR	652972	Callee	jic -> jobClassAd ( ) -> LookupString		652944	0					
ANR	652973	PtrMemberAccess	jic -> jobClassAd ( ) -> LookupString		652944	0					
ANR	652974	CallExpression	jic -> jobClassAd ( )		652944	0					
ANR	652975	Callee	jic -> jobClassAd		652944	0					
ANR	652976	PtrMemberAccess	jic -> jobClassAd		652944	0					
ANR	652977	Identifier	jic		652944	0					
ANR	652978	Identifier	jobClassAd		652944	1					
ANR	652979	ArgumentList			652944	1					
ANR	652980	Identifier	LookupString		652944	1					
ANR	652981	ArgumentList	ATTR_X509_USER_PROXY		652944	1					
ANR	652982	Argument	ATTR_X509_USER_PROXY		652944	0					
ANR	652983	Identifier	ATTR_X509_USER_PROXY		652944	0					
ANR	652984	Argument	proxy_path		652944	1					
ANR	652985	Identifier	proxy_path		652944	0					
ANR	652986	CompoundStatement		12:2:331:331	652944	1					
ANR	652987	Statement	EXCEPT	1510:3:42183:42188	652944	0	True				
ANR	652988	Statement	(	1510:9:42189:42189	652944	1	True				
ANR	652989	Statement	"""configuration specifies use of glexec, """	1510:10:42190:42230	652944	2	True				
ANR	652990	Statement	"""but job has no proxy"""	1511:14:42246:42267	652944	3	True				
ANR	652991	Statement	)	1511:36:42268:42268	652944	4	True				
ANR	652992	ExpressionStatement		1511:37:42269:42269	652944	5	True				
ANR	652993	IdentifierDeclStatement	const char * proxy_name = condor_basename ( proxy_path . Value ( ) ) ;	1513:2:42277:42337	652944	2	True				
ANR	652994	IdentifierDecl	* proxy_name = condor_basename ( proxy_path . Value ( ) )		652944	0					
ANR	652995	IdentifierDeclType	const char *		652944	0					
ANR	652996	Identifier	proxy_name		652944	1					
ANR	652997	AssignmentExpression	* proxy_name = condor_basename ( proxy_path . Value ( ) )		652944	2		=			
ANR	652998	Identifier	proxy_name		652944	0					
ANR	652999	CallExpression	condor_basename ( proxy_path . Value ( ) )		652944	1					
ANR	653000	Callee	condor_basename		652944	0					
ANR	653001	Identifier	condor_basename		652944	0					
ANR	653002	ArgumentList	proxy_path . Value ( )		652944	1					
ANR	653003	Argument	proxy_path . Value ( )		652944	0					
ANR	653004	CallExpression	proxy_path . Value ( )		652944	0					
ANR	653005	Callee	proxy_path . Value		652944	0					
ANR	653006	MemberAccess	proxy_path . Value		652944	0					
ANR	653007	Identifier	proxy_path		652944	0					
ANR	653008	Identifier	Value		652944	1					
ANR	653009	ArgumentList			652944	1					
ANR	653010	ExpressionStatement	"gpsh -> initialize ( proxy_name , WorkingDir . Value ( ) )"	1514:2:42341:42389	652944	3	True				
ANR	653011	CallExpression	"gpsh -> initialize ( proxy_name , WorkingDir . Value ( ) )"		652944	0					
ANR	653012	Callee	gpsh -> initialize		652944	0					
ANR	653013	PtrMemberAccess	gpsh -> initialize		652944	0					
ANR	653014	Identifier	gpsh		652944	0					
ANR	653015	Identifier	initialize		652944	1					
ANR	653016	ArgumentList	proxy_name		652944	1					
ANR	653017	Argument	proxy_name		652944	0					
ANR	653018	Identifier	proxy_name		652944	0					
ANR	653019	Argument	WorkingDir . Value ( )		652944	1					
ANR	653020	CallExpression	WorkingDir . Value ( )		652944	0					
ANR	653021	Callee	WorkingDir . Value		652944	0					
ANR	653022	MemberAccess	WorkingDir . Value		652944	0					
ANR	653023	Identifier	WorkingDir		652944	0					
ANR	653024	Identifier	Value		652944	1					
ANR	653025	ArgumentList			652944	1					
ANR	653026	IfStatement	if ( m_privsep_helper != NULL )		652944	2					
ANR	653027	Condition	m_privsep_helper != NULL	1526:5:42730:42753	652944	0	True				
ANR	653028	EqualityExpression	m_privsep_helper != NULL		652944	0		!=			
ANR	653029	Identifier	m_privsep_helper		652944	0					
ANR	653030	Identifier	NULL		652944	1					
ANR	653031	CompoundStatement		30:2:913:926	652944	1					
ANR	653032	IdentifierDeclStatement	int univ = - 1 ;	1527:2:42760:42773	652944	0	True				
ANR	653033	IdentifierDecl	univ = - 1		652944	0					
ANR	653034	IdentifierDeclType	int		652944	0					
ANR	653035	Identifier	univ		652944	1					
ANR	653036	AssignmentExpression	univ = - 1		652944	2		=			
ANR	653037	Identifier	univ		652944	0					
ANR	653038	UnaryOperationExpression	- 1		652944	1					
ANR	653039	UnaryOperator	-		652944	0					
ANR	653040	PrimaryExpression	1		652944	1					
ANR	653041	IfStatement	"if ( ! jic -> jobClassAd ( ) -> LookupInteger ( ATTR_JOB_UNIVERSE , univ ) || ( univ != CONDOR_UNIVERSE_VM ) )"		652944	1					
ANR	653042	Condition	"! jic -> jobClassAd ( ) -> LookupInteger ( ATTR_JOB_UNIVERSE , univ ) || ( univ != CONDOR_UNIVERSE_VM )"	1528:6:42781:42876	652944	0	True				
ANR	653043	OrExpression	"! jic -> jobClassAd ( ) -> LookupInteger ( ATTR_JOB_UNIVERSE , univ ) || ( univ != CONDOR_UNIVERSE_VM )"		652944	0		||			
ANR	653044	UnaryOperationExpression	"! jic -> jobClassAd ( ) -> LookupInteger ( ATTR_JOB_UNIVERSE , univ )"		652944	0					
ANR	653045	UnaryOperator	!		652944	0					
ANR	653046	CallExpression	"jic -> jobClassAd ( ) -> LookupInteger ( ATTR_JOB_UNIVERSE , univ )"		652944	1					
ANR	653047	Callee	jic -> jobClassAd ( ) -> LookupInteger		652944	0					
ANR	653048	PtrMemberAccess	jic -> jobClassAd ( ) -> LookupInteger		652944	0					
ANR	653049	CallExpression	jic -> jobClassAd ( )		652944	0					
ANR	653050	Callee	jic -> jobClassAd		652944	0					
ANR	653051	PtrMemberAccess	jic -> jobClassAd		652944	0					
ANR	653052	Identifier	jic		652944	0					
ANR	653053	Identifier	jobClassAd		652944	1					
ANR	653054	ArgumentList			652944	1					
ANR	653055	Identifier	LookupInteger		652944	1					
ANR	653056	ArgumentList	ATTR_JOB_UNIVERSE		652944	1					
ANR	653057	Argument	ATTR_JOB_UNIVERSE		652944	0					
ANR	653058	Identifier	ATTR_JOB_UNIVERSE		652944	0					
ANR	653059	Argument	univ		652944	1					
ANR	653060	Identifier	univ		652944	0					
ANR	653061	EqualityExpression	univ != CONDOR_UNIVERSE_VM		652944	1		!=			
ANR	653062	Identifier	univ		652944	0					
ANR	653063	Identifier	CONDOR_UNIVERSE_VM		652944	1					
ANR	653064	CompoundStatement		34:3:1039:1055	652944	1					
ANR	653065	IdentifierDeclStatement	PrivSepError err ;	1531:3:42886:42902	652944	0	True				
ANR	653066	IdentifierDecl	err		652944	0					
ANR	653067	IdentifierDeclType	PrivSepError		652944	0					
ANR	653068	Identifier	err		652944	1					
ANR	653069	IfStatement	if ( ! m_privsep_helper -> chown_sandbox_to_user ( err ) )		652944	1					
ANR	653070	Condition	! m_privsep_helper -> chown_sandbox_to_user ( err )	1532:7:42911:42955	652944	0	True				
ANR	653071	UnaryOperationExpression	! m_privsep_helper -> chown_sandbox_to_user ( err )		652944	0					
ANR	653072	UnaryOperator	!		652944	0					
ANR	653073	CallExpression	m_privsep_helper -> chown_sandbox_to_user ( err )		652944	1					
ANR	653074	Callee	m_privsep_helper -> chown_sandbox_to_user		652944	0					
ANR	653075	PtrMemberAccess	m_privsep_helper -> chown_sandbox_to_user		652944	0					
ANR	653076	Identifier	m_privsep_helper		652944	0					
ANR	653077	Identifier	chown_sandbox_to_user		652944	1					
ANR	653078	ArgumentList	err		652944	1					
ANR	653079	Argument	err		652944	0					
ANR	653080	Identifier	err		652944	0					
ANR	653081	CompoundStatement		35:55:1112:1112	652944	1					
ANR	653082	ExpressionStatement	"jic -> notifyStarterError ( err . holdReason ( ) , true , err . holdCode ( ) , err . holdSubCode ( ) )"	1533:4:42965:43068	652944	0	True				
ANR	653083	CallExpression	"jic -> notifyStarterError ( err . holdReason ( ) , true , err . holdCode ( ) , err . holdSubCode ( ) )"		652944	0					
ANR	653084	Callee	jic -> notifyStarterError		652944	0					
ANR	653085	PtrMemberAccess	jic -> notifyStarterError		652944	0					
ANR	653086	Identifier	jic		652944	0					
ANR	653087	Identifier	notifyStarterError		652944	1					
ANR	653088	ArgumentList	err . holdReason ( )		652944	1					
ANR	653089	Argument	err . holdReason ( )		652944	0					
ANR	653090	CallExpression	err . holdReason ( )		652944	0					
ANR	653091	Callee	err . holdReason		652944	0					
ANR	653092	MemberAccess	err . holdReason		652944	0					
ANR	653093	Identifier	err		652944	0					
ANR	653094	Identifier	holdReason		652944	1					
ANR	653095	ArgumentList			652944	1					
ANR	653096	Argument	true		652944	1					
ANR	653097	Identifier	true		652944	0					
ANR	653098	Argument	err . holdCode ( )		652944	2					
ANR	653099	CallExpression	err . holdCode ( )		652944	0					
ANR	653100	Callee	err . holdCode		652944	0					
ANR	653101	MemberAccess	err . holdCode		652944	0					
ANR	653102	Identifier	err		652944	0					
ANR	653103	Identifier	holdCode		652944	1					
ANR	653104	ArgumentList			652944	1					
ANR	653105	Argument	err . holdSubCode ( )		652944	3					
ANR	653106	CallExpression	err . holdSubCode ( )		652944	0					
ANR	653107	Callee	err . holdSubCode		652944	0					
ANR	653108	MemberAccess	err . holdSubCode		652944	0					
ANR	653109	Identifier	err		652944	0					
ANR	653110	Identifier	holdSubCode		652944	1					
ANR	653111	ArgumentList			652944	1					
ANR	653112	ExpressionStatement	"EXCEPT ( ""failed to chown sandbox to user"" )"	1538:4:43074:43115	652944	1	True				
ANR	653113	CallExpression	"EXCEPT ( ""failed to chown sandbox to user"" )"		652944	0					
ANR	653114	Callee	EXCEPT		652944	0					
ANR	653115	Identifier	EXCEPT		652944	0					
ANR	653116	ArgumentList	"""failed to chown sandbox to user"""		652944	1					
ANR	653117	Argument	"""failed to chown sandbox to user"""		652944	0					
ANR	653118	PrimaryExpression	"""failed to chown sandbox to user"""		652944	0					
ANR	653119	ElseStatement	else		652944	0					
ANR	653120	IfStatement	if ( univ == CONDOR_UNIVERSE_VM )		652944	0					
ANR	653121	Condition	univ == CONDOR_UNIVERSE_VM	1541:11:43137:43162	652944	0	True				
ANR	653122	EqualityExpression	univ == CONDOR_UNIVERSE_VM		652944	0		==			
ANR	653123	Identifier	univ		652944	0					
ANR	653124	Identifier	CONDOR_UNIVERSE_VM		652944	1					
ANR	653125	CompoundStatement		44:40:1319:1319	652944	1					
ANR	653126	ExpressionStatement	m_privsep_helper -> set_sandbox_owned_by_user ( )	1543:3:43224:43269	652944	0	True				
ANR	653127	CallExpression	m_privsep_helper -> set_sandbox_owned_by_user ( )		652944	0					
ANR	653128	Callee	m_privsep_helper -> set_sandbox_owned_by_user		652944	0					
ANR	653129	PtrMemberAccess	m_privsep_helper -> set_sandbox_owned_by_user		652944	0					
ANR	653130	Identifier	m_privsep_helper		652944	0					
ANR	653131	Identifier	set_sandbox_owned_by_user		652944	1					
ANR	653132	ArgumentList			652944	1					
ANR	653133	ExpressionStatement	m_job_environment_is_ready = true	1547:1:43280:43313	652944	3	True				
ANR	653134	AssignmentExpression	m_job_environment_is_ready = true		652944	0		=			
ANR	653135	Identifier	m_job_environment_is_ready		652944	0					
ANR	653136	Identifier	true		652944	1					
ANR	653137	ExpressionStatement	this -> jobWaitUntilExecuteTime ( )	1554:1:43446:43478	652944	4	True				
ANR	653138	CallExpression	this -> jobWaitUntilExecuteTime ( )		652944	0					
ANR	653139	Callee	this -> jobWaitUntilExecuteTime		652944	0					
ANR	653140	PtrMemberAccess	this -> jobWaitUntilExecuteTime		652944	0					
ANR	653141	Identifier	this		652944	0					
ANR	653142	Identifier	jobWaitUntilExecuteTime		652944	1					
ANR	653143	ArgumentList			652944	1					
ANR	653144	ReturnStatement	return ( true ) ;	1555:1:43481:43496	652944	5	True				
ANR	653145	Identifier	true		652944	0					
ANR	653146	ReturnType	int		652944	1					
ANR	653147	Identifier	CStarter :: jobEnvironmentReady		652944	2					
ANR	653148	ParameterList			652944	3					
ANR	653149	CFGEntryNode	ENTRY		652944		True				
ANR	653150	CFGExitNode	EXIT		652944		True				
ANR	653151	Symbol	glexecPrivSepHelper		652944						
ANR	653152	Symbol	proxy_path		652944						
ANR	653153	Symbol	jic		652944						
ANR	653154	Symbol	gpsh		652944						
ANR	653155	Symbol	* jic -> jobClassAd		652944						
ANR	653156	Symbol	m_privsep_helper -> chown_sandbox_to_user		652944						
ANR	653157	Symbol	proxy_path . Value		652944						
ANR	653158	Symbol	m_job_environment_is_ready		652944						
ANR	653159	Symbol	* * jic		652944						
ANR	653160	Symbol	err . holdCode		652944						
ANR	653161	Symbol	jic -> jobClassAd ( ) -> LookupString		652944						
ANR	653162	Symbol	jic -> jobClassAd ( ) -> LookupInteger		652944						
ANR	653163	Symbol	* m_privsep_helper		652944						
ANR	653164	Symbol	NULL		652944						
ANR	653165	Symbol	err		652944						
ANR	653166	Symbol	this		652944						
ANR	653167	Symbol	m_privsep_helper		652944						
ANR	653168	Symbol	ATTR_X509_USER_PROXY		652944						
ANR	653169	Symbol	proxy_name		652944						
ANR	653170	Symbol	* jic		652944						
ANR	653171	Symbol	err . holdSubCode		652944						
ANR	653172	Symbol	univ		652944						
ANR	653173	Symbol	WorkingDir		652944						
ANR	653174	Symbol	jic -> jobClassAd		652944						
ANR	653175	Symbol	err . holdReason		652944						
ANR	653176	Symbol	ATTR_JOB_UNIVERSE		652944						
ANR	653177	Symbol	CONDOR_UNIVERSE_VM		652944						
ANR	653178	Symbol	true		652944						
ANR	653179	Symbol	condor_basename		652944						
ANR	653180	Symbol	WorkingDir . Value		652944						
ANR	653181	Function	CStarter :: jobWaitUntilExecuteTime	1582:0:44450:49989							
ANR	653182	FunctionDef	CStarter :: jobWaitUntilExecuteTime ()		653181	0					
ANR	653183	CompoundStatement		1584:0:44497:49989	653181	0					
ANR	653184	IdentifierDeclStatement	bool ret = true ;	1588:1:44528:44543	653181	0	True				
ANR	653185	IdentifierDecl	ret = true		653181	0					
ANR	653186	IdentifierDeclType	bool		653181	0					
ANR	653187	Identifier	ret		653181	1					
ANR	653188	AssignmentExpression	ret = true		653181	2		=			
ANR	653189	Identifier	true		653181	0					
ANR	653190	Identifier	true		653181	1					
ANR	653191	IdentifierDeclStatement	bool abort = false ;	1592:1:44618:44636	653181	1	True				
ANR	653192	IdentifierDecl	abort = false		653181	0					
ANR	653193	IdentifierDeclType	bool		653181	0					
ANR	653194	Identifier	abort		653181	1					
ANR	653195	AssignmentExpression	abort = false		653181	2		=			
ANR	653196	Identifier	false		653181	0					
ANR	653197	Identifier	false		653181	1					
ANR	653198	IdentifierDeclStatement	MyString error ;	1593:1:44639:44653	653181	2	True				
ANR	653199	IdentifierDecl	error		653181	0					
ANR	653200	IdentifierDeclType	MyString		653181	0					
ANR	653201	Identifier	error		653181	1					
ANR	653202	IdentifierDeclStatement	ClassAd * jobAd = this -> jic -> jobClassAd ( ) ;	1600:1:44787:44827	653181	3	True				
ANR	653203	IdentifierDecl	* jobAd = this -> jic -> jobClassAd ( )		653181	0					
ANR	653204	IdentifierDeclType	ClassAd *		653181	0					
ANR	653205	Identifier	jobAd		653181	1					
ANR	653206	AssignmentExpression	* jobAd = this -> jic -> jobClassAd ( )		653181	2		=			
ANR	653207	Identifier	jobAd		653181	0					
ANR	653208	CallExpression	this -> jic -> jobClassAd ( )		653181	1					
ANR	653209	Callee	this -> jic -> jobClassAd		653181	0					
ANR	653210	PtrMemberAccess	this -> jic -> jobClassAd		653181	0					
ANR	653211	PtrMemberAccess	this -> jic		653181	0					
ANR	653212	Identifier	this		653181	0					
ANR	653213	Identifier	jic		653181	1					
ANR	653214	Identifier	jobClassAd		653181	1					
ANR	653215	ArgumentList			653181	1					
ANR	653216	IdentifierDeclStatement	int deferralTime = 0 ;	1601:1:44830:44850	653181	4	True				
ANR	653217	IdentifierDecl	deferralTime = 0		653181	0					
ANR	653218	IdentifierDeclType	int		653181	0					
ANR	653219	Identifier	deferralTime		653181	1					
ANR	653220	AssignmentExpression	deferralTime = 0		653181	2		=			
ANR	653221	Identifier	deferralTime		653181	0					
ANR	653222	PrimaryExpression	0		653181	1					
ANR	653223	IdentifierDeclStatement	int deferralOffset = 0 ;	1602:1:44853:44875	653181	5	True				
ANR	653224	IdentifierDecl	deferralOffset = 0		653181	0					
ANR	653225	IdentifierDeclType	int		653181	0					
ANR	653226	Identifier	deferralOffset		653181	1					
ANR	653227	AssignmentExpression	deferralOffset = 0		653181	2		=			
ANR	653228	Identifier	deferralOffset		653181	0					
ANR	653229	PrimaryExpression	0		653181	1					
ANR	653230	IdentifierDeclStatement	int deltaT = 0 ;	1603:1:44878:44892	653181	6	True				
ANR	653231	IdentifierDecl	deltaT = 0		653181	0					
ANR	653232	IdentifierDeclType	int		653181	0					
ANR	653233	Identifier	deltaT		653181	1					
ANR	653234	AssignmentExpression	deltaT = 0		653181	2		=			
ANR	653235	Identifier	deltaT		653181	0					
ANR	653236	PrimaryExpression	0		653181	1					
ANR	653237	IdentifierDeclStatement	int deferralWindow = 0 ;	1604:1:44895:44917	653181	7	True				
ANR	653238	IdentifierDecl	deferralWindow = 0		653181	0					
ANR	653239	IdentifierDeclType	int		653181	0					
ANR	653240	Identifier	deferralWindow		653181	1					
ANR	653241	AssignmentExpression	deferralWindow = 0		653181	2		=			
ANR	653242	Identifier	deferralWindow		653181	0					
ANR	653243	PrimaryExpression	0		653181	1					
ANR	653244	IfStatement	if ( jobAd -> LookupExpr ( ATTR_DEFERRAL_TIME ) != NULL )		653181	8					
ANR	653245	Condition	jobAd -> LookupExpr ( ATTR_DEFERRAL_TIME ) != NULL	1605:6:44925:44971	653181	0	True				
ANR	653246	EqualityExpression	jobAd -> LookupExpr ( ATTR_DEFERRAL_TIME ) != NULL		653181	0		!=			
ANR	653247	CallExpression	jobAd -> LookupExpr ( ATTR_DEFERRAL_TIME )		653181	0					
ANR	653248	Callee	jobAd -> LookupExpr		653181	0					
ANR	653249	PtrMemberAccess	jobAd -> LookupExpr		653181	0					
ANR	653250	Identifier	jobAd		653181	0					
ANR	653251	Identifier	LookupExpr		653181	1					
ANR	653252	ArgumentList	ATTR_DEFERRAL_TIME		653181	1					
ANR	653253	Argument	ATTR_DEFERRAL_TIME		653181	0					
ANR	653254	Identifier	ATTR_DEFERRAL_TIME		653181	0					
ANR	653255	Identifier	NULL		653181	1					
ANR	653256	CompoundStatement		22:56:477:477	653181	1					
ANR	653257	IfStatement	"if ( ! jobAd -> EvalInteger ( ATTR_DEFERRAL_TIME , NULL , deferralTime ) )"		653181	0					
ANR	653258	Condition	"! jobAd -> EvalInteger ( ATTR_DEFERRAL_TIME , NULL , deferralTime )"	1610:7:45116:45177	653181	0	True				
ANR	653259	UnaryOperationExpression	"! jobAd -> EvalInteger ( ATTR_DEFERRAL_TIME , NULL , deferralTime )"		653181	0					
ANR	653260	UnaryOperator	!		653181	0					
ANR	653261	CallExpression	"jobAd -> EvalInteger ( ATTR_DEFERRAL_TIME , NULL , deferralTime )"		653181	1					
ANR	653262	Callee	jobAd -> EvalInteger		653181	0					
ANR	653263	PtrMemberAccess	jobAd -> EvalInteger		653181	0					
ANR	653264	Identifier	jobAd		653181	0					
ANR	653265	Identifier	EvalInteger		653181	1					
ANR	653266	ArgumentList	ATTR_DEFERRAL_TIME		653181	1					
ANR	653267	Argument	ATTR_DEFERRAL_TIME		653181	0					
ANR	653268	Identifier	ATTR_DEFERRAL_TIME		653181	0					
ANR	653269	Argument	NULL		653181	1					
ANR	653270	Identifier	NULL		653181	0					
ANR	653271	Argument	deferralTime		653181	2					
ANR	653272	Identifier	deferralTime		653181	0					
ANR	653273	CompoundStatement		27:72:683:683	653181	1					
ANR	653274	ExpressionStatement	"error . sprintf ( ""Invalid deferred execution time for Job %d.%d."" , this -> jic -> jobCluster ( ) , this -> jic -> jobProc ( ) )"	1611:3:45186:45312	653181	0	True				
ANR	653275	CallExpression	"error . sprintf ( ""Invalid deferred execution time for Job %d.%d."" , this -> jic -> jobCluster ( ) , this -> jic -> jobProc ( ) )"		653181	0					
ANR	653276	Callee	error . sprintf		653181	0					
ANR	653277	MemberAccess	error . sprintf		653181	0					
ANR	653278	Identifier	error		653181	0					
ANR	653279	Identifier	sprintf		653181	1					
ANR	653280	ArgumentList	"""Invalid deferred execution time for Job %d.%d."""		653181	1					
ANR	653281	Argument	"""Invalid deferred execution time for Job %d.%d."""		653181	0					
ANR	653282	PrimaryExpression	"""Invalid deferred execution time for Job %d.%d."""		653181	0					
ANR	653283	Argument	this -> jic -> jobCluster ( )		653181	1					
ANR	653284	CallExpression	this -> jic -> jobCluster ( )		653181	0					
ANR	653285	Callee	this -> jic -> jobCluster		653181	0					
ANR	653286	PtrMemberAccess	this -> jic -> jobCluster		653181	0					
ANR	653287	PtrMemberAccess	this -> jic		653181	0					
ANR	653288	Identifier	this		653181	0					
ANR	653289	Identifier	jic		653181	1					
ANR	653290	Identifier	jobCluster		653181	1					
ANR	653291	ArgumentList			653181	1					
ANR	653292	Argument	this -> jic -> jobProc ( )		653181	2					
ANR	653293	CallExpression	this -> jic -> jobProc ( )		653181	0					
ANR	653294	Callee	this -> jic -> jobProc		653181	0					
ANR	653295	PtrMemberAccess	this -> jic -> jobProc		653181	0					
ANR	653296	PtrMemberAccess	this -> jic		653181	0					
ANR	653297	Identifier	this		653181	0					
ANR	653298	Identifier	jic		653181	1					
ANR	653299	Identifier	jobProc		653181	1					
ANR	653300	ArgumentList			653181	1					
ANR	653301	ExpressionStatement	abort = true	1614:3:45317:45329	653181	1	True				
ANR	653302	AssignmentExpression	abort = true		653181	0		=			
ANR	653303	Identifier	abort		653181	0					
ANR	653304	Identifier	true		653181	1					
ANR	653305	ElseStatement	else		653181	0					
ANR	653306	IfStatement	if ( deferralTime <= 0 )		653181	0					
ANR	653307	Condition	deferralTime <= 0	1615:14:45345:45361	653181	0	True				
ANR	653308	RelationalExpression	deferralTime <= 0		653181	0		<=			
ANR	653309	Identifier	deferralTime		653181	0					
ANR	653310	PrimaryExpression	0		653181	1					
ANR	653311	CompoundStatement		32:34:867:867	653181	1					
ANR	653312	ExpressionStatement	"error . sprintf ( ""Invalid execution time '%d' for Job %d.%d."" , deferralTime , this -> jic -> jobCluster ( ) , this -> jic -> jobProc ( ) )"	1616:3:45370:45513	653181	0	True				
ANR	653313	CallExpression	"error . sprintf ( ""Invalid execution time '%d' for Job %d.%d."" , deferralTime , this -> jic -> jobCluster ( ) , this -> jic -> jobProc ( ) )"		653181	0					
ANR	653314	Callee	error . sprintf		653181	0					
ANR	653315	MemberAccess	error . sprintf		653181	0					
ANR	653316	Identifier	error		653181	0					
ANR	653317	Identifier	sprintf		653181	1					
ANR	653318	ArgumentList	"""Invalid execution time '%d' for Job %d.%d."""		653181	1					
ANR	653319	Argument	"""Invalid execution time '%d' for Job %d.%d."""		653181	0					
ANR	653320	PrimaryExpression	"""Invalid execution time '%d' for Job %d.%d."""		653181	0					
ANR	653321	Argument	deferralTime		653181	1					
ANR	653322	Identifier	deferralTime		653181	0					
ANR	653323	Argument	this -> jic -> jobCluster ( )		653181	2					
ANR	653324	CallExpression	this -> jic -> jobCluster ( )		653181	0					
ANR	653325	Callee	this -> jic -> jobCluster		653181	0					
ANR	653326	PtrMemberAccess	this -> jic -> jobCluster		653181	0					
ANR	653327	PtrMemberAccess	this -> jic		653181	0					
ANR	653328	Identifier	this		653181	0					
ANR	653329	Identifier	jic		653181	1					
ANR	653330	Identifier	jobCluster		653181	1					
ANR	653331	ArgumentList			653181	1					
ANR	653332	Argument	this -> jic -> jobProc ( )		653181	3					
ANR	653333	CallExpression	this -> jic -> jobProc ( )		653181	0					
ANR	653334	Callee	this -> jic -> jobProc		653181	0					
ANR	653335	PtrMemberAccess	this -> jic -> jobProc		653181	0					
ANR	653336	PtrMemberAccess	this -> jic		653181	0					
ANR	653337	Identifier	this		653181	0					
ANR	653338	Identifier	jic		653181	1					
ANR	653339	Identifier	jobProc		653181	1					
ANR	653340	ArgumentList			653181	1					
ANR	653341	ExpressionStatement	abort = true	1620:3:45518:45530	653181	1	True				
ANR	653342	AssignmentExpression	abort = true		653181	0		=			
ANR	653343	Identifier	abort		653181	0					
ANR	653344	Identifier	true		653181	1					
ANR	653345	ElseStatement	else		653181	0					
ANR	653346	CompoundStatement		50:3:1522:1545	653181	0					
ANR	653347	IdentifierDeclStatement	time_t now = time ( NULL ) ;	1633:3:46020:46043	653181	0	True				
ANR	653348	IdentifierDecl	now = time ( NULL )		653181	0					
ANR	653349	IdentifierDeclType	time_t		653181	0					
ANR	653350	Identifier	now		653181	1					
ANR	653351	AssignmentExpression	now = time ( NULL )		653181	2		=			
ANR	653352	Identifier	now		653181	0					
ANR	653353	CallExpression	time ( NULL )		653181	1					
ANR	653354	Callee	time		653181	0					
ANR	653355	Identifier	time		653181	0					
ANR	653356	ArgumentList	NULL		653181	1					
ANR	653357	Argument	NULL		653181	0					
ANR	653358	Identifier	NULL		653181	0					
ANR	653359	IfStatement	"if ( jobAd -> LookupInteger ( ATTR_DEFERRAL_OFFSET , deferralOffset ) )"		653181	1					
ANR	653360	Condition	"jobAd -> LookupInteger ( ATTR_DEFERRAL_OFFSET , deferralOffset )"	1641:8:46305:46364	653181	0	True				
ANR	653361	CallExpression	"jobAd -> LookupInteger ( ATTR_DEFERRAL_OFFSET , deferralOffset )"		653181	0					
ANR	653362	Callee	jobAd -> LookupInteger		653181	0					
ANR	653363	PtrMemberAccess	jobAd -> LookupInteger		653181	0					
ANR	653364	Identifier	jobAd		653181	0					
ANR	653365	Identifier	LookupInteger		653181	1					
ANR	653366	ArgumentList	ATTR_DEFERRAL_OFFSET		653181	1					
ANR	653367	Argument	ATTR_DEFERRAL_OFFSET		653181	0					
ANR	653368	Identifier	ATTR_DEFERRAL_OFFSET		653181	0					
ANR	653369	Argument	deferralOffset		653181	1					
ANR	653370	Identifier	deferralOffset		653181	0					
ANR	653371	CompoundStatement		58:71:1870:1870	653181	1					
ANR	653372	Statement	dprintf	1642:4:46374:46380	653181	0	True				
ANR	653373	Statement	(	1642:11:46381:46381	653181	1	True				
ANR	653374	Statement	D_FULLDEBUG	1642:13:46383:46393	653181	2	True				
ANR	653375	Statement	","	1642:24:46394:46394	653181	3	True				
ANR	653376	Statement	"""Job %d.%d deferral time offset by """	1642:26:46396:46431	653181	4	True				
ANR	653377	Statement	"""%d seconds\\n"""	1643:26:46459:46472	653181	5	True				
ANR	653378	Statement	","	1643:40:46473:46473	653181	6	True				
ANR	653379	Statement	this	1644:7:46483:46486	653181	7	True				
ANR	653380	Statement	->	1644:11:46487:46488	653181	8	True				
ANR	653381	Statement	jic	1644:13:46489:46491	653181	9	True				
ANR	653382	Statement	->	1644:16:46492:46493	653181	10	True				
ANR	653383	Statement	jobCluster	1644:18:46494:46503	653181	11	True				
ANR	653384	Statement	(	1644:28:46504:46504	653181	12	True				
ANR	653385	Statement	)	1644:29:46505:46505	653181	13	True				
ANR	653386	Statement	","	1644:30:46506:46506	653181	14	True				
ANR	653387	Statement	this	1645:7:46515:46518	653181	15	True				
ANR	653388	Statement	->	1645:11:46519:46520	653181	16	True				
ANR	653389	Statement	jic	1645:13:46521:46523	653181	17	True				
ANR	653390	Statement	->	1645:16:46524:46525	653181	18	True				
ANR	653391	Statement	jobProc	1645:18:46526:46532	653181	19	True				
ANR	653392	Statement	(	1645:25:46533:46533	653181	20	True				
ANR	653393	Statement	)	1645:26:46534:46534	653181	21	True				
ANR	653394	Statement	","	1645:27:46535:46535	653181	22	True				
ANR	653395	Statement	deferralOffset	1646:7:46544:46557	653181	23	True				
ANR	653396	Statement	)	1646:22:46559:46559	653181	24	True				
ANR	653397	ExpressionStatement		1646:23:46560:46560	653181	25	True				
ANR	653398	ExpressionStatement	now -= deferralOffset	1647:4:46566:46587	653181	26	True				
ANR	653399	AssignmentExpression	now -= deferralOffset		653181	0		-=			
ANR	653400	Identifier	now		653181	0					
ANR	653401	Identifier	deferralOffset		653181	1					
ANR	653402	IfStatement	"if ( jobAd -> LookupExpr ( ATTR_DEFERRAL_WINDOW ) != NULL && jobAd -> EvalInteger ( ATTR_DEFERRAL_WINDOW , NULL , deferralWindow ) )"		653181	2					
ANR	653403	Condition	"jobAd -> LookupExpr ( ATTR_DEFERRAL_WINDOW ) != NULL && jobAd -> EvalInteger ( ATTR_DEFERRAL_WINDOW , NULL , deferralWindow )"	1655:8:46852:46973	653181	0	True				
ANR	653404	AndExpression	"jobAd -> LookupExpr ( ATTR_DEFERRAL_WINDOW ) != NULL && jobAd -> EvalInteger ( ATTR_DEFERRAL_WINDOW , NULL , deferralWindow )"		653181	0		&&			
ANR	653405	EqualityExpression	jobAd -> LookupExpr ( ATTR_DEFERRAL_WINDOW ) != NULL		653181	0		!=			
ANR	653406	CallExpression	jobAd -> LookupExpr ( ATTR_DEFERRAL_WINDOW )		653181	0					
ANR	653407	Callee	jobAd -> LookupExpr		653181	0					
ANR	653408	PtrMemberAccess	jobAd -> LookupExpr		653181	0					
ANR	653409	Identifier	jobAd		653181	0					
ANR	653410	Identifier	LookupExpr		653181	1					
ANR	653411	ArgumentList	ATTR_DEFERRAL_WINDOW		653181	1					
ANR	653412	Argument	ATTR_DEFERRAL_WINDOW		653181	0					
ANR	653413	Identifier	ATTR_DEFERRAL_WINDOW		653181	0					
ANR	653414	Identifier	NULL		653181	1					
ANR	653415	CallExpression	"jobAd -> EvalInteger ( ATTR_DEFERRAL_WINDOW , NULL , deferralWindow )"		653181	1					
ANR	653416	Callee	jobAd -> EvalInteger		653181	0					
ANR	653417	PtrMemberAccess	jobAd -> EvalInteger		653181	0					
ANR	653418	Identifier	jobAd		653181	0					
ANR	653419	Identifier	EvalInteger		653181	1					
ANR	653420	ArgumentList	ATTR_DEFERRAL_WINDOW		653181	1					
ANR	653421	Argument	ATTR_DEFERRAL_WINDOW		653181	0					
ANR	653422	Identifier	ATTR_DEFERRAL_WINDOW		653181	0					
ANR	653423	Argument	NULL		653181	1					
ANR	653424	Identifier	NULL		653181	0					
ANR	653425	Argument	deferralWindow		653181	2					
ANR	653426	Identifier	deferralWindow		653181	0					
ANR	653427	CompoundStatement		73:72:2479:2479	653181	1					
ANR	653428	Statement	dprintf	1657:4:46983:46989	653181	0	True				
ANR	653429	Statement	(	1657:11:46990:46990	653181	1	True				
ANR	653430	Statement	D_FULLDEBUG	1657:13:46992:47002	653181	2	True				
ANR	653431	Statement	","	1657:24:47003:47003	653181	3	True				
ANR	653432	Statement	"""Job %d.%d has a deferral window of """	1657:26:47005:47041	653181	4	True				
ANR	653433	Statement	"""%d seconds\\n"""	1658:26:47069:47082	653181	5	True				
ANR	653434	Statement	","	1658:40:47083:47083	653181	6	True				
ANR	653435	Statement	this	1659:7:47093:47096	653181	7	True				
ANR	653436	Statement	->	1659:11:47097:47098	653181	8	True				
ANR	653437	Statement	jic	1659:13:47099:47101	653181	9	True				
ANR	653438	Statement	->	1659:16:47102:47103	653181	10	True				
ANR	653439	Statement	jobCluster	1659:18:47104:47113	653181	11	True				
ANR	653440	Statement	(	1659:28:47114:47114	653181	12	True				
ANR	653441	Statement	)	1659:29:47115:47115	653181	13	True				
ANR	653442	Statement	","	1659:30:47116:47116	653181	14	True				
ANR	653443	Statement	this	1660:7:47125:47128	653181	15	True				
ANR	653444	Statement	->	1660:11:47129:47130	653181	16	True				
ANR	653445	Statement	jic	1660:13:47131:47133	653181	17	True				
ANR	653446	Statement	->	1660:16:47134:47135	653181	18	True				
ANR	653447	Statement	jobProc	1660:18:47136:47142	653181	19	True				
ANR	653448	Statement	(	1660:25:47143:47143	653181	20	True				
ANR	653449	Statement	)	1660:26:47144:47144	653181	21	True				
ANR	653450	Statement	","	1660:27:47145:47145	653181	22	True				
ANR	653451	Statement	deferralWindow	1661:7:47154:47167	653181	23	True				
ANR	653452	Statement	)	1661:22:47169:47169	653181	24	True				
ANR	653453	ExpressionStatement		1661:23:47170:47170	653181	25	True				
ANR	653454	ExpressionStatement	deltaT = deferralTime - now	1663:3:47180:47207	653181	3	True				
ANR	653455	AssignmentExpression	deltaT = deferralTime - now		653181	0		=			
ANR	653456	Identifier	deltaT		653181	0					
ANR	653457	AdditiveExpression	deferralTime - now		653181	1		-			
ANR	653458	Identifier	deferralTime		653181	0					
ANR	653459	Identifier	now		653181	1					
ANR	653460	IfStatement	if ( deltaT < 0 )		653181	4					
ANR	653461	Condition	deltaT < 0	1668:8:47330:47339	653181	0	True				
ANR	653462	RelationalExpression	deltaT < 0		653181	0		<			
ANR	653463	Identifier	deltaT		653181	0					
ANR	653464	PrimaryExpression	0		653181	1					
ANR	653465	CompoundStatement		85:21:2845:2845	653181	1					
ANR	653466	IfStatement	if ( abs ( deltaT ) > deferralWindow )		653181	0					
ANR	653467	Condition	abs ( deltaT ) > deferralWindow	1669:9:47354:47383	653181	0	True				
ANR	653468	RelationalExpression	abs ( deltaT ) > deferralWindow		653181	0		>			
ANR	653469	CallExpression	abs ( deltaT )		653181	0					
ANR	653470	Callee	abs		653181	0					
ANR	653471	Identifier	abs		653181	0					
ANR	653472	ArgumentList	deltaT		653181	1					
ANR	653473	Argument	deltaT		653181	0					
ANR	653474	Identifier	deltaT		653181	0					
ANR	653475	Identifier	deferralWindow		653181	1					
ANR	653476	CompoundStatement		86:42:2889:2889	653181	1					
ANR	653477	ExpressionStatement	"error . sprintf ( ""Job %d.%d missed its execution time."" , this -> jic -> jobCluster ( ) , this -> jic -> jobProc ( ) )"	1670:5:47394:47512	653181	0	True				
ANR	653478	CallExpression	"error . sprintf ( ""Job %d.%d missed its execution time."" , this -> jic -> jobCluster ( ) , this -> jic -> jobProc ( ) )"		653181	0					
ANR	653479	Callee	error . sprintf		653181	0					
ANR	653480	MemberAccess	error . sprintf		653181	0					
ANR	653481	Identifier	error		653181	0					
ANR	653482	Identifier	sprintf		653181	1					
ANR	653483	ArgumentList	"""Job %d.%d missed its execution time."""		653181	1					
ANR	653484	Argument	"""Job %d.%d missed its execution time."""		653181	0					
ANR	653485	PrimaryExpression	"""Job %d.%d missed its execution time."""		653181	0					
ANR	653486	Argument	this -> jic -> jobCluster ( )		653181	1					
ANR	653487	CallExpression	this -> jic -> jobCluster ( )		653181	0					
ANR	653488	Callee	this -> jic -> jobCluster		653181	0					
ANR	653489	PtrMemberAccess	this -> jic -> jobCluster		653181	0					
ANR	653490	PtrMemberAccess	this -> jic		653181	0					
ANR	653491	Identifier	this		653181	0					
ANR	653492	Identifier	jic		653181	1					
ANR	653493	Identifier	jobCluster		653181	1					
ANR	653494	ArgumentList			653181	1					
ANR	653495	Argument	this -> jic -> jobProc ( )		653181	2					
ANR	653496	CallExpression	this -> jic -> jobProc ( )		653181	0					
ANR	653497	Callee	this -> jic -> jobProc		653181	0					
ANR	653498	PtrMemberAccess	this -> jic -> jobProc		653181	0					
ANR	653499	PtrMemberAccess	this -> jic		653181	0					
ANR	653500	Identifier	this		653181	0					
ANR	653501	Identifier	jic		653181	1					
ANR	653502	Identifier	jobProc		653181	1					
ANR	653503	ArgumentList			653181	1					
ANR	653504	ExpressionStatement	abort = true	1673:5:47519:47531	653181	1	True				
ANR	653505	AssignmentExpression	abort = true		653181	0		=			
ANR	653506	Identifier	abort		653181	0					
ANR	653507	Identifier	true		653181	1					
ANR	653508	ElseStatement	else		653181	0					
ANR	653509	CompoundStatement		92:11:3047:3047	653181	0					
ANR	653510	Statement	dprintf	1680:5:47655:47661	653181	0	True				
ANR	653511	Statement	(	1680:12:47662:47662	653181	1	True				
ANR	653512	Statement	D_ALWAYS	1680:14:47664:47671	653181	2	True				
ANR	653513	Statement	","	1680:22:47672:47672	653181	3	True				
ANR	653514	Statement	"""Job %d.%d missed its execution time but """	1680:24:47674:47715	653181	4	True				
ANR	653515	Statement	"""is within the %d seconds window\\n"""	1681:10:47727:47761	653181	5	True				
ANR	653516	Statement	","	1681:45:47762:47762	653181	6	True				
ANR	653517	Statement	this	1682:8:47772:47775	653181	7	True				
ANR	653518	Statement	->	1682:12:47776:47777	653181	8	True				
ANR	653519	Statement	jic	1682:14:47778:47780	653181	9	True				
ANR	653520	Statement	->	1682:17:47781:47782	653181	10	True				
ANR	653521	Statement	jobCluster	1682:19:47783:47792	653181	11	True				
ANR	653522	Statement	(	1682:29:47793:47793	653181	12	True				
ANR	653523	Statement	)	1682:30:47794:47794	653181	13	True				
ANR	653524	Statement	","	1682:31:47795:47795	653181	14	True				
ANR	653525	Statement	this	1683:8:47805:47808	653181	15	True				
ANR	653526	Statement	->	1683:12:47809:47810	653181	16	True				
ANR	653527	Statement	jic	1683:14:47811:47813	653181	17	True				
ANR	653528	Statement	->	1683:17:47814:47815	653181	18	True				
ANR	653529	Statement	jobProc	1683:19:47816:47822	653181	19	True				
ANR	653530	Statement	(	1683:26:47823:47823	653181	20	True				
ANR	653531	Statement	)	1683:27:47824:47824	653181	21	True				
ANR	653532	Statement	","	1683:28:47825:47825	653181	22	True				
ANR	653533	Statement	deferralWindow	1684:8:47835:47848	653181	23	True				
ANR	653534	Statement	)	1684:23:47850:47850	653181	24	True				
ANR	653535	ExpressionStatement		1684:24:47851:47851	653181	25	True				
ANR	653536	ExpressionStatement	deltaT = 0	1685:5:47858:47868	653181	26	True				
ANR	653537	AssignmentExpression	deltaT = 0		653181	0		=			
ANR	653538	Identifier	deltaT		653181	0					
ANR	653539	PrimaryExpression	0		653181	1					
ANR	653540	IfStatement	if ( ! abort )		653181	9					
ANR	653541	Condition	! abort	1694:6:47949:47955	653181	0	True				
ANR	653542	UnaryOperationExpression	! abort		653181	0					
ANR	653543	UnaryOperator	!		653181	0					
ANR	653544	Identifier	abort		653181	1					
ANR	653545	CompoundStatement		111:16:3461:3461	653181	1					
ANR	653546	ExpressionStatement	ASSERT ( this -> deferral_tid == - 1 )	1699:2:48055:48089	653181	0	True				
ANR	653547	CallExpression	ASSERT ( this -> deferral_tid == - 1 )		653181	0					
ANR	653548	Callee	ASSERT		653181	0					
ANR	653549	Identifier	ASSERT		653181	0					
ANR	653550	ArgumentList	this -> deferral_tid == - 1		653181	1					
ANR	653551	Argument	this -> deferral_tid == - 1		653181	0					
ANR	653552	EqualityExpression	this -> deferral_tid == - 1		653181	0		==			
ANR	653553	PtrMemberAccess	this -> deferral_tid		653181	0					
ANR	653554	Identifier	this		653181	0					
ANR	653555	Identifier	deferral_tid		653181	1					
ANR	653556	UnaryOperationExpression	- 1		653181	1					
ANR	653557	UnaryOperator	-		653181	0					
ANR	653558	PrimaryExpression	1		653181	1					
ANR	653559	ExpressionStatement	"this -> deferral_tid = daemonCore -> Register_Timer ( deltaT , ( TimerHandlercpp ) & CStarter :: SpawnPreScript , ""deferred job start"" , this )"	1709:2:48401:48570	653181	1	True				
ANR	653560	AssignmentExpression	"this -> deferral_tid = daemonCore -> Register_Timer ( deltaT , ( TimerHandlercpp ) & CStarter :: SpawnPreScript , ""deferred job start"" , this )"		653181	0		=			
ANR	653561	PtrMemberAccess	this -> deferral_tid		653181	0					
ANR	653562	Identifier	this		653181	0					
ANR	653563	Identifier	deferral_tid		653181	1					
ANR	653564	CallExpression	"daemonCore -> Register_Timer ( deltaT , ( TimerHandlercpp ) & CStarter :: SpawnPreScript , ""deferred job start"" , this )"		653181	1					
ANR	653565	Callee	daemonCore -> Register_Timer		653181	0					
ANR	653566	PtrMemberAccess	daemonCore -> Register_Timer		653181	0					
ANR	653567	Identifier	daemonCore		653181	0					
ANR	653568	Identifier	Register_Timer		653181	1					
ANR	653569	ArgumentList	deltaT		653181	1					
ANR	653570	Argument	deltaT		653181	0					
ANR	653571	Identifier	deltaT		653181	0					
ANR	653572	Argument	( TimerHandlercpp ) & CStarter :: SpawnPreScript		653181	1					
ANR	653573	CastExpression	( TimerHandlercpp ) & CStarter :: SpawnPreScript		653181	0					
ANR	653574	CastTarget	TimerHandlercpp		653181	0					
ANR	653575	UnaryOperationExpression	& CStarter :: SpawnPreScript		653181	1					
ANR	653576	UnaryOperator	&		653181	0					
ANR	653577	Identifier	CStarter :: SpawnPreScript		653181	1					
ANR	653578	Argument	"""deferred job start"""		653181	2					
ANR	653579	PrimaryExpression	"""deferred job start"""		653181	0					
ANR	653580	Argument	this		653181	3					
ANR	653581	Identifier	this		653181	0					
ANR	653582	IfStatement	if ( this -> deferral_tid < 0 )		653181	2					
ANR	653583	Condition	this -> deferral_tid < 0	1717:6:48645:48666	653181	0	True				
ANR	653584	RelationalExpression	this -> deferral_tid < 0		653181	0		<			
ANR	653585	PtrMemberAccess	this -> deferral_tid		653181	0					
ANR	653586	Identifier	this		653181	0					
ANR	653587	Identifier	deferral_tid		653181	1					
ANR	653588	PrimaryExpression	0		653181	1					
ANR	653589	CompoundStatement		134:31:4172:4172	653181	1					
ANR	653590	ExpressionStatement	"EXCEPT ( ""Can't register Deferred Execution DaemonCore timer"" )"	1718:3:48675:48737	653181	0	True				
ANR	653591	CallExpression	"EXCEPT ( ""Can't register Deferred Execution DaemonCore timer"" )"		653181	0					
ANR	653592	Callee	EXCEPT		653181	0					
ANR	653593	Identifier	EXCEPT		653181	0					
ANR	653594	ArgumentList	"""Can't register Deferred Execution DaemonCore timer"""		653181	1					
ANR	653595	Argument	"""Can't register Deferred Execution DaemonCore timer"""		653181	0					
ANR	653596	PrimaryExpression	"""Can't register Deferred Execution DaemonCore timer"""		653181	0					
ANR	653597	IfStatement	if ( deltaT > 0 )		653181	3					
ANR	653598	Condition	deltaT > 0	1723:7:48801:48810	653181	0	True				
ANR	653599	RelationalExpression	deltaT > 0		653181	0		>			
ANR	653600	Identifier	deltaT		653181	0					
ANR	653601	PrimaryExpression	0		653181	1					
ANR	653602	CompoundStatement		140:20:4316:4316	653181	1					
ANR	653603	ExpressionStatement	"dprintf ( D_ALWAYS , ""Job %d.%d deferred for %d seconds\\n"" , this -> jic -> jobCluster ( ) , this -> jic -> jobProc ( ) , deltaT )"	1724:3:48820:48952	653181	0	True				
ANR	653604	CallExpression	"dprintf ( D_ALWAYS , ""Job %d.%d deferred for %d seconds\\n"" , this -> jic -> jobCluster ( ) , this -> jic -> jobProc ( ) , deltaT )"		653181	0					
ANR	653605	Callee	dprintf		653181	0					
ANR	653606	Identifier	dprintf		653181	0					
ANR	653607	ArgumentList	D_ALWAYS		653181	1					
ANR	653608	Argument	D_ALWAYS		653181	0					
ANR	653609	Identifier	D_ALWAYS		653181	0					
ANR	653610	Argument	"""Job %d.%d deferred for %d seconds\\n"""		653181	1					
ANR	653611	PrimaryExpression	"""Job %d.%d deferred for %d seconds\\n"""		653181	0					
ANR	653612	Argument	this -> jic -> jobCluster ( )		653181	2					
ANR	653613	CallExpression	this -> jic -> jobCluster ( )		653181	0					
ANR	653614	Callee	this -> jic -> jobCluster		653181	0					
ANR	653615	PtrMemberAccess	this -> jic -> jobCluster		653181	0					
ANR	653616	PtrMemberAccess	this -> jic		653181	0					
ANR	653617	Identifier	this		653181	0					
ANR	653618	Identifier	jic		653181	1					
ANR	653619	Identifier	jobCluster		653181	1					
ANR	653620	ArgumentList			653181	1					
ANR	653621	Argument	this -> jic -> jobProc ( )		653181	3					
ANR	653622	CallExpression	this -> jic -> jobProc ( )		653181	0					
ANR	653623	Callee	this -> jic -> jobProc		653181	0					
ANR	653624	PtrMemberAccess	this -> jic -> jobProc		653181	0					
ANR	653625	PtrMemberAccess	this -> jic		653181	0					
ANR	653626	Identifier	this		653181	0					
ANR	653627	Identifier	jic		653181	1					
ANR	653628	Identifier	jobProc		653181	1					
ANR	653629	ArgumentList			653181	1					
ANR	653630	Argument	deltaT		653181	4					
ANR	653631	Identifier	deltaT		653181	0					
ANR	653632	ElseStatement	else		653181	0					
ANR	653633	CompoundStatement		148:9:4514:4514	653181	0					
ANR	653634	ExpressionStatement	"dprintf ( D_ALWAYS , ""Job %d.%d set to execute immediately\\n"" , this -> jic -> jobCluster ( ) , this -> jic -> jobProc ( ) )"	1732:3:49017:49137	653181	0	True				
ANR	653635	CallExpression	"dprintf ( D_ALWAYS , ""Job %d.%d set to execute immediately\\n"" , this -> jic -> jobCluster ( ) , this -> jic -> jobProc ( ) )"		653181	0					
ANR	653636	Callee	dprintf		653181	0					
ANR	653637	Identifier	dprintf		653181	0					
ANR	653638	ArgumentList	D_ALWAYS		653181	1					
ANR	653639	Argument	D_ALWAYS		653181	0					
ANR	653640	Identifier	D_ALWAYS		653181	0					
ANR	653641	Argument	"""Job %d.%d set to execute immediately\\n"""		653181	1					
ANR	653642	PrimaryExpression	"""Job %d.%d set to execute immediately\\n"""		653181	0					
ANR	653643	Argument	this -> jic -> jobCluster ( )		653181	2					
ANR	653644	CallExpression	this -> jic -> jobCluster ( )		653181	0					
ANR	653645	Callee	this -> jic -> jobCluster		653181	0					
ANR	653646	PtrMemberAccess	this -> jic -> jobCluster		653181	0					
ANR	653647	PtrMemberAccess	this -> jic		653181	0					
ANR	653648	Identifier	this		653181	0					
ANR	653649	Identifier	jic		653181	1					
ANR	653650	Identifier	jobCluster		653181	1					
ANR	653651	ArgumentList			653181	1					
ANR	653652	Argument	this -> jic -> jobProc ( )		653181	3					
ANR	653653	CallExpression	this -> jic -> jobProc ( )		653181	0					
ANR	653654	Callee	this -> jic -> jobProc		653181	0					
ANR	653655	PtrMemberAccess	this -> jic -> jobProc		653181	0					
ANR	653656	PtrMemberAccess	this -> jic		653181	0					
ANR	653657	Identifier	this		653181	0					
ANR	653658	Identifier	jic		653181	1					
ANR	653659	Identifier	jobProc		653181	1					
ANR	653660	ArgumentList			653181	1					
ANR	653661	ElseStatement	else		653181	0					
ANR	653662	CompoundStatement		172:2:5292:5312	653181	0					
ANR	653663	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s Aborting.\\n"" , error . Value ( ) )"	1754:2:49734:49786	653181	0	True				
ANR	653664	CallExpression	"dprintf ( D_ALWAYS , ""%s Aborting.\\n"" , error . Value ( ) )"		653181	0					
ANR	653665	Callee	dprintf		653181	0					
ANR	653666	Identifier	dprintf		653181	0					
ANR	653667	ArgumentList	D_ALWAYS		653181	1					
ANR	653668	Argument	D_ALWAYS		653181	0					
ANR	653669	Identifier	D_ALWAYS		653181	0					
ANR	653670	Argument	"""%s Aborting.\\n"""		653181	1					
ANR	653671	PrimaryExpression	"""%s Aborting.\\n"""		653181	0					
ANR	653672	Argument	error . Value ( )		653181	2					
ANR	653673	CallExpression	error . Value ( )		653181	0					
ANR	653674	Callee	error . Value		653181	0					
ANR	653675	MemberAccess	error . Value		653181	0					
ANR	653676	Identifier	error		653181	0					
ANR	653677	Identifier	Value		653181	1					
ANR	653678	ArgumentList			653181	1					
ANR	653679	IdentifierDeclStatement	OsProc proc ( jobAd ) ;	1755:2:49790:49810	653181	1	True				
ANR	653680	IdentifierDecl	proc ( jobAd )		653181	0					
ANR	653681	IdentifierDeclType	OsProc		653181	0					
ANR	653682	Identifier	proc		653181	1					
ANR	653683	Identifier	jobAd		653181	2					
ANR	653684	ExpressionStatement	"proc . JobReaper ( - 1 , JOB_MISSED_DEFERRAL_TIME )"	1756:2:49814:49860	653181	2	True				
ANR	653685	CallExpression	"proc . JobReaper ( - 1 , JOB_MISSED_DEFERRAL_TIME )"		653181	0					
ANR	653686	Callee	proc . JobReaper		653181	0					
ANR	653687	MemberAccess	proc . JobReaper		653181	0					
ANR	653688	Identifier	proc		653181	0					
ANR	653689	Identifier	JobReaper		653181	1					
ANR	653690	ArgumentList	- 1		653181	1					
ANR	653691	Argument	- 1		653181	0					
ANR	653692	UnaryOperationExpression	- 1		653181	0					
ANR	653693	UnaryOperator	-		653181	0					
ANR	653694	PrimaryExpression	1		653181	1					
ANR	653695	Argument	JOB_MISSED_DEFERRAL_TIME		653181	1					
ANR	653696	Identifier	JOB_MISSED_DEFERRAL_TIME		653181	0					
ANR	653697	ExpressionStatement	"this -> jic -> notifyJobExit ( - 1 , JOB_MISSED_DEFERRAL_TIME , & proc )"	1757:2:49864:49927	653181	3	True				
ANR	653698	CallExpression	"this -> jic -> notifyJobExit ( - 1 , JOB_MISSED_DEFERRAL_TIME , & proc )"		653181	0					
ANR	653699	Callee	this -> jic -> notifyJobExit		653181	0					
ANR	653700	PtrMemberAccess	this -> jic -> notifyJobExit		653181	0					
ANR	653701	PtrMemberAccess	this -> jic		653181	0					
ANR	653702	Identifier	this		653181	0					
ANR	653703	Identifier	jic		653181	1					
ANR	653704	Identifier	notifyJobExit		653181	1					
ANR	653705	ArgumentList	- 1		653181	1					
ANR	653706	Argument	- 1		653181	0					
ANR	653707	UnaryOperationExpression	- 1		653181	0					
ANR	653708	UnaryOperator	-		653181	0					
ANR	653709	PrimaryExpression	1		653181	1					
ANR	653710	Argument	JOB_MISSED_DEFERRAL_TIME		653181	1					
ANR	653711	Identifier	JOB_MISSED_DEFERRAL_TIME		653181	0					
ANR	653712	Argument	& proc		653181	2					
ANR	653713	UnaryOperationExpression	& proc		653181	0					
ANR	653714	UnaryOperator	&		653181	0					
ANR	653715	Identifier	proc		653181	1					
ANR	653716	ExpressionStatement	this -> allJobsDone ( )	1758:2:49931:49950	653181	4	True				
ANR	653717	CallExpression	this -> allJobsDone ( )		653181	0					
ANR	653718	Callee	this -> allJobsDone		653181	0					
ANR	653719	PtrMemberAccess	this -> allJobsDone		653181	0					
ANR	653720	Identifier	this		653181	0					
ANR	653721	Identifier	allJobsDone		653181	1					
ANR	653722	ArgumentList			653181	1					
ANR	653723	ExpressionStatement	ret = false	1759:2:49954:49965	653181	5	True				
ANR	653724	AssignmentExpression	ret = false		653181	0		=			
ANR	653725	Identifier	ret		653181	0					
ANR	653726	Identifier	false		653181	1					
ANR	653727	ReturnStatement	return ( ret ) ;	1762:1:49973:49987	653181	10	True				
ANR	653728	Identifier	ret		653181	0					
ANR	653729	ReturnType	bool		653181	1					
ANR	653730	Identifier	CStarter :: jobWaitUntilExecuteTime		653181	2					
ANR	653731	ParameterList			653181	3					
ANR	653732	CFGEntryNode	ENTRY		653181		True				
ANR	653733	CFGExitNode	EXIT		653181		True				
ANR	653734	Symbol	this -> jic -> jobClassAd		653181						
ANR	653735	Symbol	JOB_MISSED_DEFERRAL_TIME		653181						
ANR	653736	Symbol	ATTR_DEFERRAL_TIME		653181						
ANR	653737	Symbol	jobAd		653181						
ANR	653738	Symbol	ATTR_DEFERRAL_WINDOW		653181						
ANR	653739	Symbol	error		653181						
ANR	653740	Symbol	deferralOffset		653181						
ANR	653741	Symbol	* this -> jic		653181						
ANR	653742	Symbol	& CStarter :: SpawnPreScript		653181						
ANR	653743	Symbol	deferralWindow		653181						
ANR	653744	Symbol	deferralTime		653181						
ANR	653745	Symbol	* * this		653181						
ANR	653746	Symbol	now		653181						
ANR	653747	Symbol	jobAd -> LookupInteger		653181						
ANR	653748	Symbol	daemonCore		653181						
ANR	653749	Symbol	jobAd -> EvalInteger		653181						
ANR	653750	Symbol	this -> jic -> jobCluster		653181						
ANR	653751	Symbol	& proc		653181						
ANR	653752	Symbol	ret		653181						
ANR	653753	Symbol	* jobAd		653181						
ANR	653754	Symbol	this -> deferral_tid		653181						
ANR	653755	Symbol	proc		653181						
ANR	653756	Symbol	NULL		653181						
ANR	653757	Symbol	jobAd -> LookupExpr		653181						
ANR	653758	Symbol	false		653181						
ANR	653759	Symbol	this		653181						
ANR	653760	Symbol	D_ALWAYS		653181						
ANR	653761	Symbol	this -> jic -> jobProc		653181						
ANR	653762	Symbol	this -> jic		653181						
ANR	653763	Symbol	* this		653181						
ANR	653764	Symbol	ATTR_DEFERRAL_OFFSET		653181						
ANR	653765	Symbol	abs		653181						
ANR	653766	Symbol	abort		653181						
ANR	653767	Symbol	* daemonCore		653181						
ANR	653768	Symbol	daemonCore -> Register_Timer		653181						
ANR	653769	Symbol	true		653181						
ANR	653770	Symbol	error . Value		653181						
ANR	653771	Symbol	deltaT		653181						
ANR	653772	Symbol	time		653181						
ANR	653773	Function	CStarter :: removeDeferredJobs	1774:0:50347:51132							
ANR	653774	FunctionDef	CStarter :: removeDeferredJobs ()		653773	0					
ANR	653775	CompoundStatement		1775:31:50383:51132	653773	0					
ANR	653776	IdentifierDeclStatement	bool ret = true ;	1776:1:50386:50401	653773	0	True				
ANR	653777	IdentifierDecl	ret = true		653773	0					
ANR	653778	IdentifierDeclType	bool		653773	0					
ANR	653779	Identifier	ret		653773	1					
ANR	653780	AssignmentExpression	ret = true		653773	2		=			
ANR	653781	Identifier	true		653773	0					
ANR	653782	Identifier	true		653773	1					
ANR	653783	IfStatement	if ( this -> deferral_tid == - 1 )		653773	1					
ANR	653784	Condition	this -> deferral_tid == - 1	1778:6:50411:50434	653773	0	True				
ANR	653785	EqualityExpression	this -> deferral_tid == - 1		653773	0		==			
ANR	653786	PtrMemberAccess	this -> deferral_tid		653773	0					
ANR	653787	Identifier	this		653773	0					
ANR	653788	Identifier	deferral_tid		653773	1					
ANR	653789	UnaryOperationExpression	- 1		653773	1					
ANR	653790	UnaryOperator	-		653773	0					
ANR	653791	PrimaryExpression	1		653773	1					
ANR	653792	CompoundStatement		4:33:54:54	653773	1					
ANR	653793	ReturnStatement	return ( ret ) ;	1779:2:50442:50456	653773	0	True				
ANR	653794	Identifier	ret		653773	0					
ANR	653795	ExpressionStatement	m_deferred_job_update = true	1782:1:50464:50492	653773	2	True				
ANR	653796	AssignmentExpression	m_deferred_job_update = true		653773	0		=			
ANR	653797	Identifier	m_deferred_job_update		653773	0					
ANR	653798	Identifier	true		653773	1					
ANR	653799	IfStatement	if ( daemonCore -> Cancel_Timer ( this -> deferral_tid ) >= 0 )		653773	3					
ANR	653800	Condition	daemonCore -> Cancel_Timer ( this -> deferral_tid ) >= 0	1787:6:50549:50599	653773	0	True				
ANR	653801	RelationalExpression	daemonCore -> Cancel_Timer ( this -> deferral_tid ) >= 0		653773	0		>=			
ANR	653802	CallExpression	daemonCore -> Cancel_Timer ( this -> deferral_tid )		653773	0					
ANR	653803	Callee	daemonCore -> Cancel_Timer		653773	0					
ANR	653804	PtrMemberAccess	daemonCore -> Cancel_Timer		653773	0					
ANR	653805	Identifier	daemonCore		653773	0					
ANR	653806	Identifier	Cancel_Timer		653773	1					
ANR	653807	ArgumentList	this -> deferral_tid		653773	1					
ANR	653808	Argument	this -> deferral_tid		653773	0					
ANR	653809	PtrMemberAccess	this -> deferral_tid		653773	0					
ANR	653810	Identifier	this		653773	0					
ANR	653811	Identifier	deferral_tid		653773	1					
ANR	653812	PrimaryExpression	0		653773	1					
ANR	653813	CompoundStatement		13:60:219:219	653773	1					
ANR	653814	Statement	dprintf	1788:2:50607:50613	653773	0	True				
ANR	653815	Statement	(	1788:9:50614:50614	653773	1	True				
ANR	653816	Statement	D_FULLDEBUG	1788:11:50616:50626	653773	2	True				
ANR	653817	Statement	","	1788:22:50627:50627	653773	3	True				
ANR	653818	Statement	"""Cancelled time deferred execution for """	1788:24:50629:50668	653773	4	True				
ANR	653819	Statement	"""Job %d.%d\\n"""	1789:9:50679:50691	653773	5	True				
ANR	653820	Statement	","	1789:22:50692:50692	653773	6	True				
ANR	653821	Statement	this	1790:5:50700:50703	653773	7	True				
ANR	653822	Statement	->	1790:9:50704:50705	653773	8	True				
ANR	653823	Statement	jic	1790:11:50706:50708	653773	9	True				
ANR	653824	Statement	->	1790:14:50709:50710	653773	10	True				
ANR	653825	Statement	jobCluster	1790:16:50711:50720	653773	11	True				
ANR	653826	Statement	(	1790:26:50721:50721	653773	12	True				
ANR	653827	Statement	)	1790:27:50722:50722	653773	13	True				
ANR	653828	Statement	","	1790:28:50723:50723	653773	14	True				
ANR	653829	Statement	this	1791:5:50730:50733	653773	15	True				
ANR	653830	Statement	->	1791:9:50734:50735	653773	16	True				
ANR	653831	Statement	jic	1791:11:50736:50738	653773	17	True				
ANR	653832	Statement	->	1791:14:50739:50740	653773	18	True				
ANR	653833	Statement	jobProc	1791:16:50741:50747	653773	19	True				
ANR	653834	Statement	(	1791:23:50748:50748	653773	20	True				
ANR	653835	Statement	)	1791:24:50749:50749	653773	21	True				
ANR	653836	Statement	)	1791:26:50751:50751	653773	22	True				
ANR	653837	ExpressionStatement		1791:27:50752:50752	653773	23	True				
ANR	653838	ExpressionStatement	this -> deferral_tid = - 1	1792:2:50756:50779	653773	24	True				
ANR	653839	AssignmentExpression	this -> deferral_tid = - 1		653773	0		=			
ANR	653840	PtrMemberAccess	this -> deferral_tid		653773	0					
ANR	653841	Identifier	this		653773	0					
ANR	653842	Identifier	deferral_tid		653773	1					
ANR	653843	UnaryOperationExpression	- 1		653773	1					
ANR	653844	UnaryOperator	-		653773	0					
ANR	653845	PrimaryExpression	1		653773	1					
ANR	653846	ElseStatement	else		653773	0					
ANR	653847	CompoundStatement		25:2:530:599	653773	0					
ANR	653848	IdentifierDeclStatement	"MyString error = ""Failed to cancel deferred execution timer for Job "" ;"	1799:2:50914:50983	653773	0	True				
ANR	653849	IdentifierDecl	"error = ""Failed to cancel deferred execution timer for Job """		653773	0					
ANR	653850	IdentifierDeclType	MyString		653773	0					
ANR	653851	Identifier	error		653773	1					
ANR	653852	AssignmentExpression	"error = ""Failed to cancel deferred execution timer for Job """		653773	2		=			
ANR	653853	Identifier	error		653773	0					
ANR	653854	PrimaryExpression	"""Failed to cancel deferred execution timer for Job """		653773	1					
ANR	653855	ExpressionStatement	error += this -> jic -> jobCluster ( )	1800:2:50987:51019	653773	1	True				
ANR	653856	AssignmentExpression	error += this -> jic -> jobCluster ( )		653773	0		+=			
ANR	653857	Identifier	error		653773	0					
ANR	653858	CallExpression	this -> jic -> jobCluster ( )		653773	1					
ANR	653859	Callee	this -> jic -> jobCluster		653773	0					
ANR	653860	PtrMemberAccess	this -> jic -> jobCluster		653773	0					
ANR	653861	PtrMemberAccess	this -> jic		653773	0					
ANR	653862	Identifier	this		653773	0					
ANR	653863	Identifier	jic		653773	1					
ANR	653864	Identifier	jobCluster		653773	1					
ANR	653865	ArgumentList			653773	1					
ANR	653866	ExpressionStatement	"error += ""."""	1801:2:51023:51035	653773	2	True				
ANR	653867	AssignmentExpression	"error += ""."""		653773	0		+=			
ANR	653868	Identifier	error		653773	0					
ANR	653869	PrimaryExpression	"""."""		653773	1					
ANR	653870	ExpressionStatement	error += this -> jic -> jobProc ( )	1802:2:51039:51068	653773	3	True				
ANR	653871	AssignmentExpression	error += this -> jic -> jobProc ( )		653773	0		+=			
ANR	653872	Identifier	error		653773	0					
ANR	653873	CallExpression	this -> jic -> jobProc ( )		653773	1					
ANR	653874	Callee	this -> jic -> jobProc		653773	0					
ANR	653875	PtrMemberAccess	this -> jic -> jobProc		653773	0					
ANR	653876	PtrMemberAccess	this -> jic		653773	0					
ANR	653877	Identifier	this		653773	0					
ANR	653878	Identifier	jic		653773	1					
ANR	653879	Identifier	jobProc		653773	1					
ANR	653880	ArgumentList			653773	1					
ANR	653881	ExpressionStatement	EXCEPT ( error . Value ( ) )	1803:2:51072:51095	653773	4	True				
ANR	653882	CallExpression	EXCEPT ( error . Value ( ) )		653773	0					
ANR	653883	Callee	EXCEPT		653773	0					
ANR	653884	Identifier	EXCEPT		653773	0					
ANR	653885	ArgumentList	error . Value ( )		653773	1					
ANR	653886	Argument	error . Value ( )		653773	0					
ANR	653887	CallExpression	error . Value ( )		653773	0					
ANR	653888	Callee	error . Value		653773	0					
ANR	653889	MemberAccess	error . Value		653773	0					
ANR	653890	Identifier	error		653773	0					
ANR	653891	Identifier	Value		653773	1					
ANR	653892	ArgumentList			653773	1					
ANR	653893	ExpressionStatement	ret = false	1804:2:51099:51110	653773	5	True				
ANR	653894	AssignmentExpression	ret = false		653773	0		=			
ANR	653895	Identifier	ret		653773	0					
ANR	653896	Identifier	false		653773	1					
ANR	653897	ReturnStatement	return ( ret ) ;	1806:1:51116:51130	653773	4	True				
ANR	653898	Identifier	ret		653773	0					
ANR	653899	ReturnType	bool		653773	1					
ANR	653900	Identifier	CStarter :: removeDeferredJobs		653773	2					
ANR	653901	ParameterList			653773	3					
ANR	653902	CFGEntryNode	ENTRY		653773		True				
ANR	653903	CFGExitNode	EXIT		653773		True				
ANR	653904	Symbol	ret		653773						
ANR	653905	Symbol	this -> deferral_tid		653773						
ANR	653906	Symbol	this		653773						
ANR	653907	Symbol	false		653773						
ANR	653908	Symbol	this -> jic -> jobProc		653773						
ANR	653909	Symbol	error		653773						
ANR	653910	Symbol	this -> jic		653773						
ANR	653911	Symbol	* this -> jic		653773						
ANR	653912	Symbol	* this		653773						
ANR	653913	Symbol	m_deferred_job_update		653773						
ANR	653914	Symbol	* daemonCore		653773						
ANR	653915	Symbol	daemonCore		653773						
ANR	653916	Symbol	* * this		653773						
ANR	653917	Symbol	true		653773						
ANR	653918	Symbol	error . Value		653773						
ANR	653919	Symbol	daemonCore -> Cancel_Timer		653773						
ANR	653920	Symbol	this -> jic -> jobCluster		653773						
ANR	653921	Function	CStarter :: SpawnPreScript	1815:0:51289:52619							
ANR	653922	FunctionDef	CStarter :: SpawnPreScript ()		653921	0					
ANR	653923	CompoundStatement		1817:0:51327:52619	653921	0					
ANR	653924	IfStatement	if ( this -> deferral_tid != - 1 )		653921	0					
ANR	653925	Condition	this -> deferral_tid != - 1	1822:6:51433:51456	653921	0	True				
ANR	653926	EqualityExpression	this -> deferral_tid != - 1		653921	0		!=			
ANR	653927	PtrMemberAccess	this -> deferral_tid		653921	0					
ANR	653928	Identifier	this		653921	0					
ANR	653929	Identifier	deferral_tid		653921	1					
ANR	653930	UnaryOperationExpression	- 1		653921	1					
ANR	653931	UnaryOperator	-		653921	0					
ANR	653932	PrimaryExpression	1		653921	1					
ANR	653933	CompoundStatement		6:33:132:132	653921	1					
ANR	653934	ExpressionStatement	this -> deferral_tid = - 1	1823:2:51464:51487	653921	0	True				
ANR	653935	AssignmentExpression	this -> deferral_tid = - 1		653921	0		=			
ANR	653936	PtrMemberAccess	this -> deferral_tid		653921	0					
ANR	653937	Identifier	this		653921	0					
ANR	653938	Identifier	deferral_tid		653921	1					
ANR	653939	UnaryOperationExpression	- 1		653921	1					
ANR	653940	UnaryOperator	-		653921	0					
ANR	653941	PrimaryExpression	1		653921	1					
ANR	653942	IdentifierDeclStatement	ClassAd * jobAd = jic -> jobClassAd ( ) ;	1827:1:51559:51593	653921	1	True				
ANR	653943	IdentifierDecl	* jobAd = jic -> jobClassAd ( )		653921	0					
ANR	653944	IdentifierDeclType	ClassAd *		653921	0					
ANR	653945	Identifier	jobAd		653921	1					
ANR	653946	AssignmentExpression	* jobAd = jic -> jobClassAd ( )		653921	2		=			
ANR	653947	Identifier	jobAd		653921	0					
ANR	653948	CallExpression	jic -> jobClassAd ( )		653921	1					
ANR	653949	Callee	jic -> jobClassAd		653921	0					
ANR	653950	PtrMemberAccess	jic -> jobClassAd		653921	0					
ANR	653951	Identifier	jic		653921	0					
ANR	653952	Identifier	jobClassAd		653921	1					
ANR	653953	ArgumentList			653921	1					
ANR	653954	IdentifierDeclStatement	char * tmp = NULL ;	1828:1:51596:51612	653921	2	True				
ANR	653955	IdentifierDecl	* tmp = NULL		653921	0					
ANR	653956	IdentifierDeclType	char *		653921	0					
ANR	653957	Identifier	tmp		653921	1					
ANR	653958	AssignmentExpression	* tmp = NULL		653921	2		=			
ANR	653959	Identifier	NULL		653921	0					
ANR	653960	Identifier	NULL		653921	1					
ANR	653961	IdentifierDeclStatement	MyString attr ;	1829:1:51615:51628	653921	3	True				
ANR	653962	IdentifierDecl	attr		653921	0					
ANR	653963	IdentifierDeclType	MyString		653921	0					
ANR	653964	Identifier	attr		653921	1					
ANR	653965	ExpressionStatement	"attr = ""Pre"""	1831:1:51632:51644	653921	4	True				
ANR	653966	AssignmentExpression	"attr = ""Pre"""		653921	0		=			
ANR	653967	Identifier	attr		653921	0					
ANR	653968	PrimaryExpression	"""Pre"""		653921	1					
ANR	653969	ExpressionStatement	attr += ATTR_JOB_CMD	1832:1:51647:51667	653921	5	True				
ANR	653970	AssignmentExpression	attr += ATTR_JOB_CMD		653921	0		+=			
ANR	653971	Identifier	attr		653921	0					
ANR	653972	Identifier	ATTR_JOB_CMD		653921	1					
ANR	653973	IfStatement	"if ( jobAd -> LookupString ( attr . Value ( ) , & tmp ) )"		653921	6					
ANR	653974	Condition	"jobAd -> LookupString ( attr . Value ( ) , & tmp )"	1833:5:51674:51712	653921	0	True				
ANR	653975	CallExpression	"jobAd -> LookupString ( attr . Value ( ) , & tmp )"		653921	0					
ANR	653976	Callee	jobAd -> LookupString		653921	0					
ANR	653977	PtrMemberAccess	jobAd -> LookupString		653921	0					
ANR	653978	Identifier	jobAd		653921	0					
ANR	653979	Identifier	LookupString		653921	1					
ANR	653980	ArgumentList	attr . Value ( )		653921	1					
ANR	653981	Argument	attr . Value ( )		653921	0					
ANR	653982	CallExpression	attr . Value ( )		653921	0					
ANR	653983	Callee	attr . Value		653921	0					
ANR	653984	MemberAccess	attr . Value		653921	0					
ANR	653985	Identifier	attr		653921	0					
ANR	653986	Identifier	Value		653921	1					
ANR	653987	ArgumentList			653921	1					
ANR	653988	Argument	& tmp		653921	1					
ANR	653989	UnaryOperationExpression	& tmp		653921	0					
ANR	653990	UnaryOperator	&		653921	0					
ANR	653991	Identifier	tmp		653921	1					
ANR	653992	CompoundStatement		17:47:388:388	653921	1					
ANR	653993	ExpressionStatement	free ( tmp )	1834:2:51720:51731	653921	0	True				
ANR	653994	CallExpression	free ( tmp )		653921	0					
ANR	653995	Callee	free		653921	0					
ANR	653996	Identifier	free		653921	0					
ANR	653997	ArgumentList	tmp		653921	1					
ANR	653998	Argument	tmp		653921	0					
ANR	653999	Identifier	tmp		653921	0					
ANR	654000	ExpressionStatement	tmp = NULL	1835:2:51735:51745	653921	1	True				
ANR	654001	AssignmentExpression	tmp = NULL		653921	0		=			
ANR	654002	Identifier	tmp		653921	0					
ANR	654003	Identifier	NULL		653921	1					
ANR	654004	ExpressionStatement	"pre_script = new ScriptProc ( jobAd , ""Pre"" )"	1836:2:51749:51792	653921	2	True				
ANR	654005	AssignmentExpression	"pre_script = new ScriptProc ( jobAd , ""Pre"" )"		653921	0		=			
ANR	654006	Identifier	pre_script		653921	0					
ANR	654007	Expression	"jobAd , ""Pre"""		653921	1					
ANR	654008	Identifier	jobAd		653921	0					
ANR	654009	PrimaryExpression	"""Pre"""		653921	1					
ANR	654010	ExpressionStatement	"attr = ""Post"""	1839:1:51799:51812	653921	7	True				
ANR	654011	AssignmentExpression	"attr = ""Post"""		653921	0		=			
ANR	654012	Identifier	attr		653921	0					
ANR	654013	PrimaryExpression	"""Post"""		653921	1					
ANR	654014	ExpressionStatement	attr += ATTR_JOB_CMD	1840:1:51815:51835	653921	8	True				
ANR	654015	AssignmentExpression	attr += ATTR_JOB_CMD		653921	0		+=			
ANR	654016	Identifier	attr		653921	0					
ANR	654017	Identifier	ATTR_JOB_CMD		653921	1					
ANR	654018	IfStatement	"if ( jobAd -> LookupString ( attr . Value ( ) , & tmp ) )"		653921	9					
ANR	654019	Condition	"jobAd -> LookupString ( attr . Value ( ) , & tmp )"	1841:5:51842:51880	653921	0	True				
ANR	654020	CallExpression	"jobAd -> LookupString ( attr . Value ( ) , & tmp )"		653921	0					
ANR	654021	Callee	jobAd -> LookupString		653921	0					
ANR	654022	PtrMemberAccess	jobAd -> LookupString		653921	0					
ANR	654023	Identifier	jobAd		653921	0					
ANR	654024	Identifier	LookupString		653921	1					
ANR	654025	ArgumentList	attr . Value ( )		653921	1					
ANR	654026	Argument	attr . Value ( )		653921	0					
ANR	654027	CallExpression	attr . Value ( )		653921	0					
ANR	654028	Callee	attr . Value		653921	0					
ANR	654029	MemberAccess	attr . Value		653921	0					
ANR	654030	Identifier	attr		653921	0					
ANR	654031	Identifier	Value		653921	1					
ANR	654032	ArgumentList			653921	1					
ANR	654033	Argument	& tmp		653921	1					
ANR	654034	UnaryOperationExpression	& tmp		653921	0					
ANR	654035	UnaryOperator	&		653921	0					
ANR	654036	Identifier	tmp		653921	1					
ANR	654037	CompoundStatement		25:47:556:556	653921	1					
ANR	654038	ExpressionStatement	free ( tmp )	1842:2:51888:51899	653921	0	True				
ANR	654039	CallExpression	free ( tmp )		653921	0					
ANR	654040	Callee	free		653921	0					
ANR	654041	Identifier	free		653921	0					
ANR	654042	ArgumentList	tmp		653921	1					
ANR	654043	Argument	tmp		653921	0					
ANR	654044	Identifier	tmp		653921	0					
ANR	654045	ExpressionStatement	tmp = NULL	1843:2:51903:51913	653921	1	True				
ANR	654046	AssignmentExpression	tmp = NULL		653921	0		=			
ANR	654047	Identifier	tmp		653921	0					
ANR	654048	Identifier	NULL		653921	1					
ANR	654049	ExpressionStatement	"post_script = new ScriptProc ( jobAd , ""Post"" )"	1844:2:51917:51962	653921	2	True				
ANR	654050	AssignmentExpression	"post_script = new ScriptProc ( jobAd , ""Post"" )"		653921	0		=			
ANR	654051	Identifier	post_script		653921	0					
ANR	654052	Expression	"jobAd , ""Post"""		653921	1					
ANR	654053	Identifier	jobAd		653921	0					
ANR	654054	PrimaryExpression	"""Post"""		653921	1					
ANR	654055	IfStatement	if ( pre_script )		653921	10					
ANR	654056	Condition	pre_script	1847:5:51973:51982	653921	0	True				
ANR	654057	Identifier	pre_script		653921	0					
ANR	654058	CompoundStatement		31:18:658:658	653921	1					
ANR	654059	IfStatement	if ( pre_script -> StartJob ( ) )		653921	0					
ANR	654060	Condition	pre_script -> StartJob ( )	1850:6:52044:52065	653921	0	True				
ANR	654061	CallExpression	pre_script -> StartJob ( )		653921	0					
ANR	654062	Callee	pre_script -> StartJob		653921	0					
ANR	654063	PtrMemberAccess	pre_script -> StartJob		653921	0					
ANR	654064	Identifier	pre_script		653921	0					
ANR	654065	Identifier	StartJob		653921	1					
ANR	654066	ArgumentList			653921	1					
ANR	654067	CompoundStatement		34:31:741:741	653921	1					
ANR	654068	ReturnStatement	return ;	1854:3:52220:52226	653921	0	True				
ANR	654069	ElseStatement	else		653921	0					
ANR	654070	CompoundStatement		39:9:909:909	653921	0					
ANR	654071	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to start prescript, exiting\\n"" )"	1856:3:52242:52301	653921	0	True				
ANR	654072	CallExpression	"dprintf ( D_ALWAYS , ""Failed to start prescript, exiting\\n"" )"		653921	0					
ANR	654073	Callee	dprintf		653921	0					
ANR	654074	Identifier	dprintf		653921	0					
ANR	654075	ArgumentList	D_ALWAYS		653921	1					
ANR	654076	Argument	D_ALWAYS		653921	0					
ANR	654077	Identifier	D_ALWAYS		653921	0					
ANR	654078	Argument	"""Failed to start prescript, exiting\\n"""		653921	1					
ANR	654079	PrimaryExpression	"""Failed to start prescript, exiting\\n"""		653921	0					
ANR	654080	ExpressionStatement	main_shutdown_fast ( )	1858:3:52342:52362	653921	1	True				
ANR	654081	CallExpression	main_shutdown_fast ( )		653921	0					
ANR	654082	Callee	main_shutdown_fast		653921	0					
ANR	654083	Identifier	main_shutdown_fast		653921	0					
ANR	654084	ArgumentList			653921	1					
ANR	654085	ReturnStatement	return ;	1859:3:52367:52373	653921	2	True				
ANR	654086	IfStatement	if ( ! SpawnJob ( ) )		653921	11					
ANR	654087	Condition	! SpawnJob ( )	1865:5:52512:52523	653921	0	True				
ANR	654088	UnaryOperationExpression	! SpawnJob ( )		653921	0					
ANR	654089	UnaryOperator	!		653921	0					
ANR	654090	CallExpression	SpawnJob ( )		653921	1					
ANR	654091	Callee	SpawnJob		653921	0					
ANR	654092	Identifier	SpawnJob		653921	0					
ANR	654093	ArgumentList			653921	1					
ANR	654094	CompoundStatement		49:20:1199:1199	653921	1					
ANR	654095	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to start main job, exiting.\\n"" )"	1866:2:52531:52590	653921	0	True				
ANR	654096	CallExpression	"dprintf ( D_ALWAYS , ""Failed to start main job, exiting.\\n"" )"		653921	0					
ANR	654097	Callee	dprintf		653921	0					
ANR	654098	Identifier	dprintf		653921	0					
ANR	654099	ArgumentList	D_ALWAYS		653921	1					
ANR	654100	Argument	D_ALWAYS		653921	0					
ANR	654101	Identifier	D_ALWAYS		653921	0					
ANR	654102	Argument	"""Failed to start main job, exiting.\\n"""		653921	1					
ANR	654103	PrimaryExpression	"""Failed to start main job, exiting.\\n"""		653921	0					
ANR	654104	ExpressionStatement	main_shutdown_fast ( )	1867:2:52594:52614	653921	1	True				
ANR	654105	CallExpression	main_shutdown_fast ( )		653921	0					
ANR	654106	Callee	main_shutdown_fast		653921	0					
ANR	654107	Identifier	main_shutdown_fast		653921	0					
ANR	654108	ArgumentList			653921	1					
ANR	654109	ReturnType	void		653921	1					
ANR	654110	Identifier	CStarter :: SpawnPreScript		653921	2					
ANR	654111	ParameterList			653921	3					
ANR	654112	CFGEntryNode	ENTRY		653921		True				
ANR	654113	CFGExitNode	EXIT		653921		True				
ANR	654114	Symbol	* jobAd		653921						
ANR	654115	Symbol	pre_script		653921						
ANR	654116	Symbol	this -> deferral_tid		653921						
ANR	654117	Symbol	jobAd -> LookupString		653921						
ANR	654118	Symbol	NULL		653921						
ANR	654119	Symbol	SpawnJob		653921						
ANR	654120	Symbol	jic		653921						
ANR	654121	Symbol	this		653921						
ANR	654122	Symbol	post_script		653921						
ANR	654123	Symbol	D_ALWAYS		653921						
ANR	654124	Symbol	jobAd		653921						
ANR	654125	Symbol	attr . Value		653921						
ANR	654126	Symbol	pre_script -> StartJob		653921						
ANR	654127	Symbol	* jic		653921						
ANR	654128	Symbol	ATTR_JOB_CMD		653921						
ANR	654129	Symbol	* this		653921						
ANR	654130	Symbol	jic -> jobClassAd		653921						
ANR	654131	Symbol	tmp		653921						
ANR	654132	Symbol	& tmp		653921						
ANR	654133	Symbol	attr		653921						
ANR	654134	Symbol	* pre_script		653921						
ANR	654135	Function	CStarter :: getJobOwnerFQUOrDummy	1871:0:52622:52855							
ANR	654136	FunctionDef	CStarter :: getJobOwnerFQUOrDummy (MyString & result)		654135	0					
ANR	654137	CompoundStatement		1872:0:52677:52855	654135	0					
ANR	654138	IdentifierDeclStatement	ClassAd * jobAd = jic ? jic -> jobClassAd ( ) : NULL ;	1873:1:52680:52727	654135	0	True				
ANR	654139	IdentifierDecl	* jobAd = jic ? jic -> jobClassAd ( ) : NULL		654135	0					
ANR	654140	IdentifierDeclType	ClassAd *		654135	0					
ANR	654141	Identifier	jobAd		654135	1					
ANR	654142	AssignmentExpression	* jobAd = jic ? jic -> jobClassAd ( ) : NULL		654135	2		=			
ANR	654143	Identifier	jobAd		654135	0					
ANR	654144	ConditionalExpression	jic ? jic -> jobClassAd ( ) : NULL		654135	1					
ANR	654145	Condition	jic		654135	0					
ANR	654146	Identifier	jic		654135	0					
ANR	654147	CallExpression	jic -> jobClassAd ( )		654135	1					
ANR	654148	Callee	jic -> jobClassAd		654135	0					
ANR	654149	PtrMemberAccess	jic -> jobClassAd		654135	0					
ANR	654150	Identifier	jic		654135	0					
ANR	654151	Identifier	jobClassAd		654135	1					
ANR	654152	ArgumentList			654135	1					
ANR	654153	Identifier	NULL		654135	2					
ANR	654154	IfStatement	if ( jobAd )		654135	1					
ANR	654155	Condition	jobAd	1874:5:52734:52738	654135	0	True				
ANR	654156	Identifier	jobAd		654135	0					
ANR	654157	CompoundStatement		3:13:64:64	654135	1					
ANR	654158	ExpressionStatement	"jobAd -> LookupString ( ATTR_USER , result )"	1875:2:52746:52783	654135	0	True				
ANR	654159	CallExpression	"jobAd -> LookupString ( ATTR_USER , result )"		654135	0					
ANR	654160	Callee	jobAd -> LookupString		654135	0					
ANR	654161	PtrMemberAccess	jobAd -> LookupString		654135	0					
ANR	654162	Identifier	jobAd		654135	0					
ANR	654163	Identifier	LookupString		654135	1					
ANR	654164	ArgumentList	ATTR_USER		654135	1					
ANR	654165	Argument	ATTR_USER		654135	0					
ANR	654166	Identifier	ATTR_USER		654135	0					
ANR	654167	Argument	result		654135	1					
ANR	654168	Identifier	result		654135	0					
ANR	654169	IfStatement	if ( result . IsEmpty ( ) )		654135	2					
ANR	654170	Condition	result . IsEmpty ( )	1877:5:52793:52808	654135	0	True				
ANR	654171	CallExpression	result . IsEmpty ( )		654135	0					
ANR	654172	Callee	result . IsEmpty		654135	0					
ANR	654173	MemberAccess	result . IsEmpty		654135	0					
ANR	654174	Identifier	result		654135	0					
ANR	654175	Identifier	IsEmpty		654135	1					
ANR	654176	ArgumentList			654135	1					
ANR	654177	CompoundStatement		6:24:134:134	654135	1					
ANR	654178	ExpressionStatement	"result = ""job-owner@submit-domain"""	1878:2:52816:52850	654135	0	True				
ANR	654179	AssignmentExpression	"result = ""job-owner@submit-domain"""		654135	0		=			
ANR	654180	Identifier	result		654135	0					
ANR	654181	PrimaryExpression	"""job-owner@submit-domain"""		654135	1					
ANR	654182	ReturnType	void		654135	1					
ANR	654183	Identifier	CStarter :: getJobOwnerFQUOrDummy		654135	2					
ANR	654184	ParameterList	MyString & result		654135	3					
ANR	654185	Parameter	MyString & result	1871:37:52659:52674	654135	0	True				
ANR	654186	ParameterType	MyString &		654135	0					
ANR	654187	Identifier	result		654135	1					
ANR	654188	CFGEntryNode	ENTRY		654135		True				
ANR	654189	CFGExitNode	EXIT		654135		True				
ANR	654190	Symbol	result		654135						
ANR	654191	Symbol	result . IsEmpty		654135						
ANR	654192	Symbol	jic -> jobClassAd		654135						
ANR	654193	Symbol	NULL		654135						
ANR	654194	Symbol	jic		654135						
ANR	654195	Symbol	ATTR_USER		654135						
ANR	654196	Symbol	jobAd		654135						
ANR	654197	Symbol	* jic		654135						
ANR	654198	Function	CStarter :: getJobClaimId	1882:0:52858:53042							
ANR	654199	FunctionDef	CStarter :: getJobClaimId (MyString & result)		654198	0					
ANR	654200	CompoundStatement		1883:0:52905:53042	654198	0					
ANR	654201	IdentifierDeclStatement	ClassAd * jobAd = jic ? jic -> jobClassAd ( ) : NULL ;	1884:1:52908:52955	654198	0	True				
ANR	654202	IdentifierDecl	* jobAd = jic ? jic -> jobClassAd ( ) : NULL		654198	0					
ANR	654203	IdentifierDeclType	ClassAd *		654198	0					
ANR	654204	Identifier	jobAd		654198	1					
ANR	654205	AssignmentExpression	* jobAd = jic ? jic -> jobClassAd ( ) : NULL		654198	2		=			
ANR	654206	Identifier	jobAd		654198	0					
ANR	654207	ConditionalExpression	jic ? jic -> jobClassAd ( ) : NULL		654198	1					
ANR	654208	Condition	jic		654198	0					
ANR	654209	Identifier	jic		654198	0					
ANR	654210	CallExpression	jic -> jobClassAd ( )		654198	1					
ANR	654211	Callee	jic -> jobClassAd		654198	0					
ANR	654212	PtrMemberAccess	jic -> jobClassAd		654198	0					
ANR	654213	Identifier	jic		654198	0					
ANR	654214	Identifier	jobClassAd		654198	1					
ANR	654215	ArgumentList			654198	1					
ANR	654216	Identifier	NULL		654198	2					
ANR	654217	IfStatement	if ( jobAd )		654198	1					
ANR	654218	Condition	jobAd	1885:5:52962:52966	654198	0	True				
ANR	654219	Identifier	jobAd		654198	0					
ANR	654220	CompoundStatement		3:13:64:64	654198	1					
ANR	654221	ReturnStatement	"return jobAd -> LookupString ( ATTR_CLAIM_ID , result ) ;"	1886:2:52974:53022	654198	0	True				
ANR	654222	CallExpression	"jobAd -> LookupString ( ATTR_CLAIM_ID , result )"		654198	0					
ANR	654223	Callee	jobAd -> LookupString		654198	0					
ANR	654224	PtrMemberAccess	jobAd -> LookupString		654198	0					
ANR	654225	Identifier	jobAd		654198	0					
ANR	654226	Identifier	LookupString		654198	1					
ANR	654227	ArgumentList	ATTR_CLAIM_ID		654198	1					
ANR	654228	Argument	ATTR_CLAIM_ID		654198	0					
ANR	654229	Identifier	ATTR_CLAIM_ID		654198	0					
ANR	654230	Argument	result		654198	1					
ANR	654231	Identifier	result		654198	0					
ANR	654232	ReturnStatement	return false ;	1888:1:53028:53040	654198	2	True				
ANR	654233	Identifier	false		654198	0					
ANR	654234	ReturnType	bool		654198	1					
ANR	654235	Identifier	CStarter :: getJobClaimId		654198	2					
ANR	654236	ParameterList	MyString & result		654198	3					
ANR	654237	Parameter	MyString & result	1882:29:52887:52902	654198	0	True				
ANR	654238	ParameterType	MyString &		654198	0					
ANR	654239	Identifier	result		654198	1					
ANR	654240	CFGEntryNode	ENTRY		654198		True				
ANR	654241	CFGExitNode	EXIT		654198		True				
ANR	654242	Symbol	result		654198						
ANR	654243	Symbol	* jobAd		654198						
ANR	654244	Symbol	jobAd -> LookupString		654198						
ANR	654245	Symbol	jic -> jobClassAd		654198						
ANR	654246	Symbol	NULL		654198						
ANR	654247	Symbol	jic		654198						
ANR	654248	Symbol	false		654198						
ANR	654249	Symbol	jobAd		654198						
ANR	654250	Symbol	ATTR_CLAIM_ID		654198						
ANR	654251	Symbol	* jic		654198						
ANR	654252	Function	CStarter :: SpawnJob	1896:0:53066:56523							
ANR	654253	FunctionDef	CStarter :: SpawnJob ()		654252	0					
ANR	654254	CompoundStatement		1898:0:53097:56523	654252	0					
ANR	654255	IdentifierDeclStatement	ClassAd * jobAd = jic -> jobClassAd ( ) ;	1902:1:53275:53309	654252	0	True				
ANR	654256	IdentifierDecl	* jobAd = jic -> jobClassAd ( )		654252	0					
ANR	654257	IdentifierDeclType	ClassAd *		654252	0					
ANR	654258	Identifier	jobAd		654252	1					
ANR	654259	AssignmentExpression	* jobAd = jic -> jobClassAd ( )		654252	2		=			
ANR	654260	Identifier	jobAd		654252	0					
ANR	654261	CallExpression	jic -> jobClassAd ( )		654252	1					
ANR	654262	Callee	jic -> jobClassAd		654252	0					
ANR	654263	PtrMemberAccess	jic -> jobClassAd		654252	0					
ANR	654264	Identifier	jic		654252	0					
ANR	654265	Identifier	jobClassAd		654252	1					
ANR	654266	ArgumentList			654252	1					
ANR	654267	IfStatement	"if ( jobAd -> LookupInteger ( ATTR_JOB_UNIVERSE , jobUniverse ) < 1 )"		654252	1					
ANR	654268	Condition	"jobAd -> LookupInteger ( ATTR_JOB_UNIVERSE , jobUniverse ) < 1"	1903:6:53317:53374	654252	0	True				
ANR	654269	RelationalExpression	"jobAd -> LookupInteger ( ATTR_JOB_UNIVERSE , jobUniverse ) < 1"		654252	0		<			
ANR	654270	CallExpression	"jobAd -> LookupInteger ( ATTR_JOB_UNIVERSE , jobUniverse )"		654252	0					
ANR	654271	Callee	jobAd -> LookupInteger		654252	0					
ANR	654272	PtrMemberAccess	jobAd -> LookupInteger		654252	0					
ANR	654273	Identifier	jobAd		654252	0					
ANR	654274	Identifier	LookupInteger		654252	1					
ANR	654275	ArgumentList	ATTR_JOB_UNIVERSE		654252	1					
ANR	654276	Argument	ATTR_JOB_UNIVERSE		654252	0					
ANR	654277	Identifier	ATTR_JOB_UNIVERSE		654252	0					
ANR	654278	Argument	jobUniverse		654252	1					
ANR	654279	Identifier	jobUniverse		654252	0					
ANR	654280	PrimaryExpression	1		654252	1					
ANR	654281	CompoundStatement		6:67:280:280	654252	1					
ANR	654282	ExpressionStatement	"dprintf ( D_ALWAYS , ""Job doesn't specify universe, assuming VANILLA\\n"" )"	1904:2:53382:53459	654252	0	True				
ANR	654283	CallExpression	"dprintf ( D_ALWAYS , ""Job doesn't specify universe, assuming VANILLA\\n"" )"		654252	0					
ANR	654284	Callee	dprintf		654252	0					
ANR	654285	Identifier	dprintf		654252	0					
ANR	654286	ArgumentList	D_ALWAYS		654252	1					
ANR	654287	Argument	D_ALWAYS		654252	0					
ANR	654288	Identifier	D_ALWAYS		654252	0					
ANR	654289	Argument	"""Job doesn't specify universe, assuming VANILLA\\n"""		654252	1					
ANR	654290	PrimaryExpression	"""Job doesn't specify universe, assuming VANILLA\\n"""		654252	0					
ANR	654291	ExpressionStatement	"dprintf ( D_ALWAYS , ""Starting a %s universe job with ID: %d.%d\\n"" , CondorUniverseName ( jobUniverse ) , jic -> jobCluster ( ) , jic -> jobProc ( ) )"	1907:1:53466:53608	654252	2	True				
ANR	654292	CallExpression	"dprintf ( D_ALWAYS , ""Starting a %s universe job with ID: %d.%d\\n"" , CondorUniverseName ( jobUniverse ) , jic -> jobCluster ( ) , jic -> jobProc ( ) )"		654252	0					
ANR	654293	Callee	dprintf		654252	0					
ANR	654294	Identifier	dprintf		654252	0					
ANR	654295	ArgumentList	D_ALWAYS		654252	1					
ANR	654296	Argument	D_ALWAYS		654252	0					
ANR	654297	Identifier	D_ALWAYS		654252	0					
ANR	654298	Argument	"""Starting a %s universe job with ID: %d.%d\\n"""		654252	1					
ANR	654299	PrimaryExpression	"""Starting a %s universe job with ID: %d.%d\\n"""		654252	0					
ANR	654300	Argument	CondorUniverseName ( jobUniverse )		654252	2					
ANR	654301	CallExpression	CondorUniverseName ( jobUniverse )		654252	0					
ANR	654302	Callee	CondorUniverseName		654252	0					
ANR	654303	Identifier	CondorUniverseName		654252	0					
ANR	654304	ArgumentList	jobUniverse		654252	1					
ANR	654305	Argument	jobUniverse		654252	0					
ANR	654306	Identifier	jobUniverse		654252	0					
ANR	654307	Argument	jic -> jobCluster ( )		654252	3					
ANR	654308	CallExpression	jic -> jobCluster ( )		654252	0					
ANR	654309	Callee	jic -> jobCluster		654252	0					
ANR	654310	PtrMemberAccess	jic -> jobCluster		654252	0					
ANR	654311	Identifier	jic		654252	0					
ANR	654312	Identifier	jobCluster		654252	1					
ANR	654313	ArgumentList			654252	1					
ANR	654314	Argument	jic -> jobProc ( )		654252	4					
ANR	654315	CallExpression	jic -> jobProc ( )		654252	0					
ANR	654316	Callee	jic -> jobProc		654252	0					
ANR	654317	PtrMemberAccess	jic -> jobProc		654252	0					
ANR	654318	Identifier	jic		654252	0					
ANR	654319	Identifier	jobProc		654252	1					
ANR	654320	ArgumentList			654252	1					
ANR	654321	IdentifierDeclStatement	UserProc * job ;	1911:1:53612:53625	654252	3	True				
ANR	654322	IdentifierDecl	* job		654252	0					
ANR	654323	IdentifierDeclType	UserProc *		654252	0					
ANR	654324	Identifier	job		654252	1					
ANR	654325	SwitchStatement	switch ( jobUniverse )		654252	4					
ANR	654326	Condition	jobUniverse	1912:10:53637:53647	654252	0	True				
ANR	654327	Identifier	jobUniverse		654252	0					
ANR	654328	CompoundStatement		16:1:556:556	654252	1					
ANR	654329	Label	case CONDOR_UNIVERSE_LOCAL :	1914:2:53658:53684	654252	0	True				
ANR	654330	Identifier	CONDOR_UNIVERSE_LOCAL		654252	0					
ANR	654331	Label	case CONDOR_UNIVERSE_VANILLA :	1915:2:53688:53716	654252	1	True				
ANR	654332	Identifier	CONDOR_UNIVERSE_VANILLA		654252	0					
ANR	654333	ExpressionStatement	job = new VanillaProc ( jobAd )	1916:3:53721:53751	654252	2	True				
ANR	654334	AssignmentExpression	job = new VanillaProc ( jobAd )		654252	0		=			
ANR	654335	Identifier	job		654252	0					
ANR	654336	Identifier	jobAd		654252	1					
ANR	654337	BreakStatement	break ;	1917:3:53756:53761	654252	3	True				
ANR	654338	Label	case CONDOR_UNIVERSE_JAVA :	1918:2:53765:53790	654252	4	True				
ANR	654339	Identifier	CONDOR_UNIVERSE_JAVA		654252	0					
ANR	654340	ExpressionStatement	"job = new JavaProc ( jobAd , WorkingDir . Value ( ) )"	1919:3:53795:53842	654252	5	True				
ANR	654341	AssignmentExpression	"job = new JavaProc ( jobAd , WorkingDir . Value ( ) )"		654252	0		=			
ANR	654342	Identifier	job		654252	0					
ANR	654343	Expression	"jobAd , WorkingDir . Value ( )"		654252	1					
ANR	654344	Identifier	jobAd		654252	0					
ANR	654345	CallExpression	WorkingDir . Value ( )		654252	1					
ANR	654346	Callee	WorkingDir . Value		654252	0					
ANR	654347	MemberAccess	WorkingDir . Value		654252	0					
ANR	654348	Identifier	WorkingDir		654252	0					
ANR	654349	Identifier	Value		654252	1					
ANR	654350	ArgumentList			654252	1					
ANR	654351	BreakStatement	break ;	1920:3:53847:53852	654252	6	True				
ANR	654352	Label	case CONDOR_UNIVERSE_PARALLEL :	1921:5:53859:53888	654252	7	True				
ANR	654353	Identifier	CONDOR_UNIVERSE_PARALLEL		654252	0					
ANR	654354	ExpressionStatement	job = new ParallelProc ( jobAd )	1922:3:53893:53924	654252	8	True				
ANR	654355	AssignmentExpression	job = new ParallelProc ( jobAd )		654252	0		=			
ANR	654356	Identifier	job		654252	0					
ANR	654357	Identifier	jobAd		654252	1					
ANR	654358	BreakStatement	break ;	1923:3:53929:53934	654252	9	True				
ANR	654359	Label	case CONDOR_UNIVERSE_MPI :	1924:2:53938:53962	654252	10	True				
ANR	654360	Identifier	CONDOR_UNIVERSE_MPI		654252	0					
ANR	654361	CompoundStatement		28:3:871:892	654252	11					
ANR	654362	IdentifierDeclStatement	int is_master = FALSE ;	1925:3:53969:53990	654252	0	True				
ANR	654363	IdentifierDecl	is_master = FALSE		654252	0					
ANR	654364	IdentifierDeclType	int		654252	0					
ANR	654365	Identifier	is_master		654252	1					
ANR	654366	AssignmentExpression	is_master = FALSE		654252	2		=			
ANR	654367	Identifier	FALSE		654252	0					
ANR	654368	Identifier	FALSE		654252	1					
ANR	654369	IfStatement	"if ( jobAd -> LookupBool ( ATTR_MPI_IS_MASTER , is_master ) < 1 )"		654252	1					
ANR	654370	Condition	"jobAd -> LookupBool ( ATTR_MPI_IS_MASTER , is_master ) < 1"	1926:8:54000:54053	654252	0	True				
ANR	654371	RelationalExpression	"jobAd -> LookupBool ( ATTR_MPI_IS_MASTER , is_master ) < 1"		654252	0		<			
ANR	654372	CallExpression	"jobAd -> LookupBool ( ATTR_MPI_IS_MASTER , is_master )"		654252	0					
ANR	654373	Callee	jobAd -> LookupBool		654252	0					
ANR	654374	PtrMemberAccess	jobAd -> LookupBool		654252	0					
ANR	654375	Identifier	jobAd		654252	0					
ANR	654376	Identifier	LookupBool		654252	1					
ANR	654377	ArgumentList	ATTR_MPI_IS_MASTER		654252	1					
ANR	654378	Argument	ATTR_MPI_IS_MASTER		654252	0					
ANR	654379	Identifier	ATTR_MPI_IS_MASTER		654252	0					
ANR	654380	Argument	is_master		654252	1					
ANR	654381	Identifier	is_master		654252	0					
ANR	654382	PrimaryExpression	1		654252	1					
ANR	654383	CompoundStatement		29:65:959:959	654252	1					
ANR	654384	ExpressionStatement	is_master = FALSE	1927:4:54063:54080	654252	0	True				
ANR	654385	AssignmentExpression	is_master = FALSE		654252	0		=			
ANR	654386	Identifier	is_master		654252	0					
ANR	654387	Identifier	FALSE		654252	1					
ANR	654388	IfStatement	if ( is_master )		654252	2					
ANR	654389	Condition	is_master	1929:8:54095:54103	654252	0	True				
ANR	654390	Identifier	is_master		654252	0					
ANR	654391	CompoundStatement		32:20:1009:1009	654252	1					
ANR	654392	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Starting a MPIMasterProc\\n"" )"	1930:4:54113:54166	654252	0	True				
ANR	654393	CallExpression	"dprintf ( D_FULLDEBUG , ""Starting a MPIMasterProc\\n"" )"		654252	0					
ANR	654394	Callee	dprintf		654252	0					
ANR	654395	Identifier	dprintf		654252	0					
ANR	654396	ArgumentList	D_FULLDEBUG		654252	1					
ANR	654397	Argument	D_FULLDEBUG		654252	0					
ANR	654398	Identifier	D_FULLDEBUG		654252	0					
ANR	654399	Argument	"""Starting a MPIMasterProc\\n"""		654252	1					
ANR	654400	PrimaryExpression	"""Starting a MPIMasterProc\\n"""		654252	0					
ANR	654401	ExpressionStatement	job = new MPIMasterProc ( jobAd )	1931:4:54172:54204	654252	1	True				
ANR	654402	AssignmentExpression	job = new MPIMasterProc ( jobAd )		654252	0		=			
ANR	654403	Identifier	job		654252	0					
ANR	654404	Identifier	jobAd		654252	1					
ANR	654405	ElseStatement	else		654252	0					
ANR	654406	CompoundStatement		35:10:1118:1118	654252	0					
ANR	654407	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Starting a MPIComradeProc\\n"" )"	1933:4:54222:54276	654252	0	True				
ANR	654408	CallExpression	"dprintf ( D_FULLDEBUG , ""Starting a MPIComradeProc\\n"" )"		654252	0					
ANR	654409	Callee	dprintf		654252	0					
ANR	654410	Identifier	dprintf		654252	0					
ANR	654411	ArgumentList	D_FULLDEBUG		654252	1					
ANR	654412	Argument	D_FULLDEBUG		654252	0					
ANR	654413	Identifier	D_FULLDEBUG		654252	0					
ANR	654414	Argument	"""Starting a MPIComradeProc\\n"""		654252	1					
ANR	654415	PrimaryExpression	"""Starting a MPIComradeProc\\n"""		654252	0					
ANR	654416	ExpressionStatement	job = new MPIComradeProc ( jobAd )	1934:4:54282:54315	654252	1	True				
ANR	654417	AssignmentExpression	job = new MPIComradeProc ( jobAd )		654252	0		=			
ANR	654418	Identifier	job		654252	0					
ANR	654419	Identifier	jobAd		654252	1					
ANR	654420	BreakStatement	break ;	1936:3:54325:54330	654252	3	True				
ANR	654421	Label	case CONDOR_UNIVERSE_VM :	1938:2:54338:54361	654252	12	True				
ANR	654422	Identifier	CONDOR_UNIVERSE_VM		654252	0					
ANR	654423	ExpressionStatement	job = new VMProc ( jobAd )	1939:3:54366:54391	654252	13	True				
ANR	654424	AssignmentExpression	job = new VMProc ( jobAd )		654252	0		=			
ANR	654425	Identifier	job		654252	0					
ANR	654426	Identifier	jobAd		654252	1					
ANR	654427	ExpressionStatement	ASSERT ( job )	1940:3:54396:54407	654252	14	True				
ANR	654428	CallExpression	ASSERT ( job )		654252	0					
ANR	654429	Callee	ASSERT		654252	0					
ANR	654430	Identifier	ASSERT		654252	0					
ANR	654431	ArgumentList	job		654252	1					
ANR	654432	Argument	job		654252	0					
ANR	654433	Identifier	job		654252	0					
ANR	654434	BreakStatement	break ;	1941:3:54412:54417	654252	15	True				
ANR	654435	Label	default :	1942:2:54421:54428	654252	16	True				
ANR	654436	Identifier	default		654252	0					
ANR	654437	ExpressionStatement	"dprintf ( D_ALWAYS , ""Starter doesn't support universe %d (%s)\\n"" , jobUniverse , CondorUniverseName ( jobUniverse ) )"	1943:3:54433:54550	654252	17	True				
ANR	654438	CallExpression	"dprintf ( D_ALWAYS , ""Starter doesn't support universe %d (%s)\\n"" , jobUniverse , CondorUniverseName ( jobUniverse ) )"		654252	0					
ANR	654439	Callee	dprintf		654252	0					
ANR	654440	Identifier	dprintf		654252	0					
ANR	654441	ArgumentList	D_ALWAYS		654252	1					
ANR	654442	Argument	D_ALWAYS		654252	0					
ANR	654443	Identifier	D_ALWAYS		654252	0					
ANR	654444	Argument	"""Starter doesn't support universe %d (%s)\\n"""		654252	1					
ANR	654445	PrimaryExpression	"""Starter doesn't support universe %d (%s)\\n"""		654252	0					
ANR	654446	Argument	jobUniverse		654252	2					
ANR	654447	Identifier	jobUniverse		654252	0					
ANR	654448	Argument	CondorUniverseName ( jobUniverse )		654252	3					
ANR	654449	CallExpression	CondorUniverseName ( jobUniverse )		654252	0					
ANR	654450	Callee	CondorUniverseName		654252	0					
ANR	654451	Identifier	CondorUniverseName		654252	0					
ANR	654452	ArgumentList	jobUniverse		654252	1					
ANR	654453	Argument	jobUniverse		654252	0					
ANR	654454	Identifier	jobUniverse		654252	0					
ANR	654455	ReturnStatement	return FALSE ;	1945:3:54556:54568	654252	18	True				
ANR	654456	Identifier	FALSE		654252	0					
ANR	654457	IfStatement	if ( job -> StartJob ( ) )		654252	5					
ANR	654458	Condition	job -> StartJob ( )	1948:5:54592:54606	654252	0	True				
ANR	654459	CallExpression	job -> StartJob ( )		654252	0					
ANR	654460	Callee	job -> StartJob		654252	0					
ANR	654461	PtrMemberAccess	job -> StartJob		654252	0					
ANR	654462	Identifier	job		654252	0					
ANR	654463	Identifier	StartJob		654252	1					
ANR	654464	ArgumentList			654252	1					
ANR	654465	CompoundStatement		71:2:2074:2103	654252	1					
ANR	654466	ExpressionStatement	m_job_list . Append ( job )	1949:2:54613:54635	654252	0	True				
ANR	654467	CallExpression	m_job_list . Append ( job )		654252	0					
ANR	654468	Callee	m_job_list . Append		654252	0					
ANR	654469	MemberAccess	m_job_list . Append		654252	0					
ANR	654470	Identifier	m_job_list		654252	0					
ANR	654471	Identifier	Append		654252	1					
ANR	654472	ArgumentList	job		654252	1					
ANR	654473	Argument	job		654252	0					
ANR	654474	Identifier	job		654252	0					
ANR	654475	IfStatement	if ( this -> suspended )		654252	1					
ANR	654476	Condition	this -> suspended	1962:7:55050:55064	654252	0	True				
ANR	654477	PtrMemberAccess	this -> suspended		654252	0					
ANR	654478	Identifier	this		654252	0					
ANR	654479	Identifier	suspended		654252	1					
ANR	654480	CompoundStatement		65:25:1970:1970	654252	1					
ANR	654481	ExpressionStatement	this -> Suspend ( )	1963:3:55073:55089	654252	0	True				
ANR	654482	CallExpression	this -> Suspend ( )		654252	0					
ANR	654483	Callee	this -> Suspend		654252	0					
ANR	654484	PtrMemberAccess	this -> Suspend		654252	0					
ANR	654485	Identifier	this		654252	0					
ANR	654486	Identifier	Suspend		654252	1					
ANR	654487	ArgumentList			654252	1					
ANR	654488	IdentifierDeclStatement	char * tool_daemon_name = NULL ;	1968:2:55172:55201	654252	2	True				
ANR	654489	IdentifierDecl	* tool_daemon_name = NULL		654252	0					
ANR	654490	IdentifierDeclType	char *		654252	0					
ANR	654491	Identifier	tool_daemon_name		654252	1					
ANR	654492	AssignmentExpression	* tool_daemon_name = NULL		654252	2		=			
ANR	654493	Identifier	NULL		654252	0					
ANR	654494	Identifier	NULL		654252	1					
ANR	654495	ExpressionStatement	"jobAd -> LookupString ( ATTR_TOOL_DAEMON_CMD , & tool_daemon_name )"	1969:2:55205:55275	654252	3	True				
ANR	654496	CallExpression	"jobAd -> LookupString ( ATTR_TOOL_DAEMON_CMD , & tool_daemon_name )"		654252	0					
ANR	654497	Callee	jobAd -> LookupString		654252	0					
ANR	654498	PtrMemberAccess	jobAd -> LookupString		654252	0					
ANR	654499	Identifier	jobAd		654252	0					
ANR	654500	Identifier	LookupString		654252	1					
ANR	654501	ArgumentList	ATTR_TOOL_DAEMON_CMD		654252	1					
ANR	654502	Argument	ATTR_TOOL_DAEMON_CMD		654252	0					
ANR	654503	Identifier	ATTR_TOOL_DAEMON_CMD		654252	0					
ANR	654504	Argument	& tool_daemon_name		654252	1					
ANR	654505	UnaryOperationExpression	& tool_daemon_name		654252	0					
ANR	654506	UnaryOperator	&		654252	0					
ANR	654507	Identifier	tool_daemon_name		654252	1					
ANR	654508	IfStatement	if ( tool_daemon_name )		654252	4					
ANR	654509	Condition	tool_daemon_name	1971:6:55283:55298	654252	0	True				
ANR	654510	Identifier	tool_daemon_name		654252	0					
ANR	654511	CompoundStatement		76:3:2260:2292	654252	1					
ANR	654512	IdentifierDeclStatement	ToolDaemonProc * tool_daemon_proc ;	1973:3:55358:55390	654252	0	True				
ANR	654513	IdentifierDecl	* tool_daemon_proc		654252	0					
ANR	654514	IdentifierDeclType	ToolDaemonProc *		654252	0					
ANR	654515	Identifier	tool_daemon_proc		654252	1					
ANR	654516	ExpressionStatement	"tool_daemon_proc = new ToolDaemonProc ( jobAd , job -> GetJobPid ( ) )"	1974:3:55395:55459	654252	1	True				
ANR	654517	AssignmentExpression	"tool_daemon_proc = new ToolDaemonProc ( jobAd , job -> GetJobPid ( ) )"		654252	0		=			
ANR	654518	Identifier	tool_daemon_proc		654252	0					
ANR	654519	Expression	"jobAd , job -> GetJobPid ( )"		654252	1					
ANR	654520	Identifier	jobAd		654252	0					
ANR	654521	CallExpression	job -> GetJobPid ( )		654252	1					
ANR	654522	Callee	job -> GetJobPid		654252	0					
ANR	654523	PtrMemberAccess	job -> GetJobPid		654252	0					
ANR	654524	Identifier	job		654252	0					
ANR	654525	Identifier	GetJobPid		654252	1					
ANR	654526	ArgumentList			654252	1					
ANR	654527	IfStatement	if ( tool_daemon_proc -> StartJob ( ) )		654252	2					
ANR	654528	Condition	tool_daemon_proc -> StartJob ( )	1976:7:55469:55496	654252	0	True				
ANR	654529	CallExpression	tool_daemon_proc -> StartJob ( )		654252	0					
ANR	654530	Callee	tool_daemon_proc -> StartJob		654252	0					
ANR	654531	PtrMemberAccess	tool_daemon_proc -> StartJob		654252	0					
ANR	654532	Identifier	tool_daemon_proc		654252	0					
ANR	654533	Identifier	StartJob		654252	1					
ANR	654534	ArgumentList			654252	1					
ANR	654535	CompoundStatement		79:38:2402:2402	654252	1					
ANR	654536	ExpressionStatement	m_job_list . Append ( tool_daemon_proc )	1977:4:55506:55543	654252	0	True				
ANR	654537	CallExpression	m_job_list . Append ( tool_daemon_proc )		654252	0					
ANR	654538	Callee	m_job_list . Append		654252	0					
ANR	654539	MemberAccess	m_job_list . Append		654252	0					
ANR	654540	Identifier	m_job_list		654252	0					
ANR	654541	Identifier	Append		654252	1					
ANR	654542	ArgumentList	tool_daemon_proc		654252	1					
ANR	654543	Argument	tool_daemon_proc		654252	0					
ANR	654544	Identifier	tool_daemon_proc		654252	0					
ANR	654545	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""ToolDaemonProc added to m_job_list\\n"" )"	1978:4:55549:55610	654252	1	True				
ANR	654546	CallExpression	"dprintf ( D_FULLDEBUG , ""ToolDaemonProc added to m_job_list\\n"" )"		654252	0					
ANR	654547	Callee	dprintf		654252	0					
ANR	654548	Identifier	dprintf		654252	0					
ANR	654549	ArgumentList	D_FULLDEBUG		654252	1					
ANR	654550	Argument	D_FULLDEBUG		654252	0					
ANR	654551	Identifier	D_FULLDEBUG		654252	0					
ANR	654552	Argument	"""ToolDaemonProc added to m_job_list\\n"""		654252	1					
ANR	654553	PrimaryExpression	"""ToolDaemonProc added to m_job_list\\n"""		654252	0					
ANR	654554	IfStatement	if ( this -> suspended )		654252	2					
ANR	654555	Condition	this -> suspended	1989:9:55997:56011	654252	0	True				
ANR	654556	PtrMemberAccess	this -> suspended		654252	0					
ANR	654557	Identifier	this		654252	0					
ANR	654558	Identifier	suspended		654252	1					
ANR	654559	CompoundStatement		92:27:2917:2917	654252	1					
ANR	654560	ExpressionStatement	this -> Suspend ( )	1990:5:56022:56038	654252	0	True				
ANR	654561	CallExpression	this -> Suspend ( )		654252	0					
ANR	654562	Callee	this -> Suspend		654252	0					
ANR	654563	PtrMemberAccess	this -> Suspend		654252	0					
ANR	654564	Identifier	this		654252	0					
ANR	654565	Identifier	Suspend		654252	1					
ANR	654566	ArgumentList			654252	1					
ANR	654567	ElseStatement	else		654252	0					
ANR	654568	CompoundStatement		95:10:2958:2958	654252	0					
ANR	654569	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to start ToolDaemonProc!\\n"" )"	1993:4:56062:56117	654252	0	True				
ANR	654570	CallExpression	"dprintf ( D_ALWAYS , ""Failed to start ToolDaemonProc!\\n"" )"		654252	0					
ANR	654571	Callee	dprintf		654252	0					
ANR	654572	Identifier	dprintf		654252	0					
ANR	654573	ArgumentList	D_ALWAYS		654252	1					
ANR	654574	Argument	D_ALWAYS		654252	0					
ANR	654575	Identifier	D_ALWAYS		654252	0					
ANR	654576	Argument	"""Failed to start ToolDaemonProc!\\n"""		654252	1					
ANR	654577	PrimaryExpression	"""Failed to start ToolDaemonProc!\\n"""		654252	0					
ANR	654578	Statement	delete	1994:4:56123:56128	654252	1	True				
ANR	654579	ExpressionStatement	tool_daemon_proc	1994:11:56130:56146	654252	2	True				
ANR	654580	Identifier	tool_daemon_proc		654252	0					
ANR	654581	ExpressionStatement	free ( tool_daemon_name )	1996:3:56156:56180	654252	3	True				
ANR	654582	CallExpression	free ( tool_daemon_name )		654252	0					
ANR	654583	Callee	free		654252	0					
ANR	654584	Identifier	free		654252	0					
ANR	654585	ArgumentList	tool_daemon_name		654252	1					
ANR	654586	Argument	tool_daemon_name		654252	0					
ANR	654587	Identifier	tool_daemon_name		654252	0					
ANR	654588	ExpressionStatement	jic -> allJobsSpawned ( )	2000:2:56249:56270	654252	5	True				
ANR	654589	CallExpression	jic -> allJobsSpawned ( )		654252	0					
ANR	654590	Callee	jic -> allJobsSpawned		654252	0					
ANR	654591	PtrMemberAccess	jic -> allJobsSpawned		654252	0					
ANR	654592	Identifier	jic		654252	0					
ANR	654593	Identifier	allJobsSpawned		654252	1					
ANR	654594	ArgumentList			654252	1					
ANR	654595	ReturnStatement	return TRUE ;	2001:2:56274:56285	654252	6	True				
ANR	654596	Identifier	TRUE		654252	0					
ANR	654597	ElseStatement	else		654252	0					
ANR	654598	CompoundStatement		105:8:3197:3197	654252	0					
ANR	654599	Statement	delete	2003:2:56299:56304	654252	0	True				
ANR	654600	ExpressionStatement	job	2003:9:56306:56309	654252	1	True				
ANR	654601	Identifier	job		654252	0					
ANR	654602	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to start job, exiting\\n"" )"	2006:2:56425:56478	654252	2	True				
ANR	654603	CallExpression	"dprintf ( D_ALWAYS , ""Failed to start job, exiting\\n"" )"		654252	0					
ANR	654604	Callee	dprintf		654252	0					
ANR	654605	Identifier	dprintf		654252	0					
ANR	654606	ArgumentList	D_ALWAYS		654252	1					
ANR	654607	Argument	D_ALWAYS		654252	0					
ANR	654608	Identifier	D_ALWAYS		654252	0					
ANR	654609	Argument	"""Failed to start job, exiting\\n"""		654252	1					
ANR	654610	PrimaryExpression	"""Failed to start job, exiting\\n"""		654252	0					
ANR	654611	ExpressionStatement	main_shutdown_fast ( )	2007:2:56482:56502	654252	3	True				
ANR	654612	CallExpression	main_shutdown_fast ( )		654252	0					
ANR	654613	Callee	main_shutdown_fast		654252	0					
ANR	654614	Identifier	main_shutdown_fast		654252	0					
ANR	654615	ArgumentList			654252	1					
ANR	654616	ReturnStatement	return FALSE ;	2008:2:56506:56518	654252	4	True				
ANR	654617	Identifier	FALSE		654252	0					
ANR	654618	ReturnType	int		654252	1					
ANR	654619	Identifier	CStarter :: SpawnJob		654252	2					
ANR	654620	ParameterList			654252	3					
ANR	654621	CFGEntryNode	ENTRY		654252		True				
ANR	654622	CFGExitNode	EXIT		654252		True				
ANR	654623	Symbol	CondorUniverseName		654252						
ANR	654624	Symbol	job -> StartJob		654252						
ANR	654625	Symbol	& tool_daemon_name		654252						
ANR	654626	Symbol	jic		654252						
ANR	654627	Symbol	* tool_daemon_proc		654252						
ANR	654628	Symbol	jobAd		654252						
ANR	654629	Symbol	m_job_list		654252						
ANR	654630	Symbol	tool_daemon_proc		654252						
ANR	654631	Symbol	this -> suspended		654252						
ANR	654632	Symbol	jobAd -> LookupInteger		654252						
ANR	654633	Symbol	* jobAd		654252						
ANR	654634	Symbol	is_master		654252						
ANR	654635	Symbol	ATTR_MPI_IS_MASTER		654252						
ANR	654636	Symbol	NULL		654252						
ANR	654637	Symbol	ATTR_TOOL_DAEMON_CMD		654252						
ANR	654638	Symbol	tool_daemon_name		654252						
ANR	654639	Symbol	jic -> jobProc		654252						
ANR	654640	Symbol	* job		654252						
ANR	654641	Symbol	D_ALWAYS		654252						
ANR	654642	Symbol	this		654252						
ANR	654643	Symbol	job -> GetJobPid		654252						
ANR	654644	Symbol	TRUE		654252						
ANR	654645	Symbol	D_FULLDEBUG		654252						
ANR	654646	Symbol	jobUniverse		654252						
ANR	654647	Symbol	jobAd -> LookupBool		654252						
ANR	654648	Symbol	jic -> jobCluster		654252						
ANR	654649	Symbol	* jic		654252						
ANR	654650	Symbol	* this		654252						
ANR	654651	Symbol	WorkingDir		654252						
ANR	654652	Symbol	tool_daemon_proc -> StartJob		654252						
ANR	654653	Symbol	jic -> jobClassAd		654252						
ANR	654654	Symbol	ATTR_JOB_UNIVERSE		654252						
ANR	654655	Symbol	FALSE		654252						
ANR	654656	Symbol	job		654252						
ANR	654657	Symbol	WorkingDir . Value		654252						
ANR	654658	Function	CStarter :: WriteRecoveryFile	2012:0:56526:57495							
ANR	654659	FunctionDef	CStarter :: WriteRecoveryFile (ClassAd * recovery_ad)		654658	0					
ANR	654660	CompoundStatement		2014:0:56583:57495	654658	0					
ANR	654661	IdentifierDeclStatement	MyString tmp_file ;	2015:1:56586:56603	654658	0	True				
ANR	654662	IdentifierDecl	tmp_file		654658	0					
ANR	654663	IdentifierDeclType	MyString		654658	0					
ANR	654664	Identifier	tmp_file		654658	1					
ANR	654665	IdentifierDeclStatement	FILE * tmp_fp ;	2016:1:56606:56618	654658	1	True				
ANR	654666	IdentifierDecl	* tmp_fp		654658	0					
ANR	654667	IdentifierDeclType	FILE *		654658	0					
ANR	654668	Identifier	tmp_fp		654658	1					
ANR	654669	IfStatement	if ( recovery_ad == NULL )		654658	2					
ANR	654670	Condition	recovery_ad == NULL	2018:6:56627:56645	654658	0	True				
ANR	654671	EqualityExpression	recovery_ad == NULL		654658	0		==			
ANR	654672	Identifier	recovery_ad		654658	0					
ANR	654673	Identifier	NULL		654658	1					
ANR	654674	CompoundStatement		5:28:65:65	654658	1					
ANR	654675	ReturnStatement	return ;	2019:2:56653:56659	654658	0	True				
ANR	654676	IfStatement	if ( m_recoveryFile . Length ( ) == 0 )		654658	3					
ANR	654677	Condition	m_recoveryFile . Length ( ) == 0	2022:6:56671:56698	654658	0	True				
ANR	654678	EqualityExpression	m_recoveryFile . Length ( ) == 0		654658	0		==			
ANR	654679	CallExpression	m_recoveryFile . Length ( )		654658	0					
ANR	654680	Callee	m_recoveryFile . Length		654658	0					
ANR	654681	MemberAccess	m_recoveryFile . Length		654658	0					
ANR	654682	Identifier	m_recoveryFile		654658	0					
ANR	654683	Identifier	Length		654658	1					
ANR	654684	ArgumentList			654658	1					
ANR	654685	PrimaryExpression	0		654658	1					
ANR	654686	CompoundStatement		9:37:118:118	654658	1					
ANR	654687	ExpressionStatement	"m_recoveryFile . sprintf ( ""%s%cdir_%ld.recover"" , Execute , DIR_DELIM_CHAR , ( long ) daemonCore -> getpid ( ) )"	2023:2:56706:56814	654658	0	True				
ANR	654688	CallExpression	"m_recoveryFile . sprintf ( ""%s%cdir_%ld.recover"" , Execute , DIR_DELIM_CHAR , ( long ) daemonCore -> getpid ( ) )"		654658	0					
ANR	654689	Callee	m_recoveryFile . sprintf		654658	0					
ANR	654690	MemberAccess	m_recoveryFile . sprintf		654658	0					
ANR	654691	Identifier	m_recoveryFile		654658	0					
ANR	654692	Identifier	sprintf		654658	1					
ANR	654693	ArgumentList	"""%s%cdir_%ld.recover"""		654658	1					
ANR	654694	Argument	"""%s%cdir_%ld.recover"""		654658	0					
ANR	654695	PrimaryExpression	"""%s%cdir_%ld.recover"""		654658	0					
ANR	654696	Argument	Execute		654658	1					
ANR	654697	Identifier	Execute		654658	0					
ANR	654698	Argument	DIR_DELIM_CHAR		654658	2					
ANR	654699	Identifier	DIR_DELIM_CHAR		654658	0					
ANR	654700	Argument	( long ) daemonCore -> getpid ( )		654658	3					
ANR	654701	CastExpression	( long ) daemonCore -> getpid ( )		654658	0					
ANR	654702	CastTarget	long		654658	0					
ANR	654703	CallExpression	daemonCore -> getpid ( )		654658	1					
ANR	654704	Callee	daemonCore -> getpid		654658	0					
ANR	654705	PtrMemberAccess	daemonCore -> getpid		654658	0					
ANR	654706	Identifier	daemonCore		654658	0					
ANR	654707	Identifier	getpid		654658	1					
ANR	654708	ArgumentList			654658	1					
ANR	654709	ExpressionStatement	"tmp_file . sprintf ( ""%s.tmp"" , m_recoveryFile . Value ( ) )"	2027:1:56821:56873	654658	4	True				
ANR	654710	CallExpression	"tmp_file . sprintf ( ""%s.tmp"" , m_recoveryFile . Value ( ) )"		654658	0					
ANR	654711	Callee	tmp_file . sprintf		654658	0					
ANR	654712	MemberAccess	tmp_file . sprintf		654658	0					
ANR	654713	Identifier	tmp_file		654658	0					
ANR	654714	Identifier	sprintf		654658	1					
ANR	654715	ArgumentList	"""%s.tmp"""		654658	1					
ANR	654716	Argument	"""%s.tmp"""		654658	0					
ANR	654717	PrimaryExpression	"""%s.tmp"""		654658	0					
ANR	654718	Argument	m_recoveryFile . Value ( )		654658	1					
ANR	654719	CallExpression	m_recoveryFile . Value ( )		654658	0					
ANR	654720	Callee	m_recoveryFile . Value		654658	0					
ANR	654721	MemberAccess	m_recoveryFile . Value		654658	0					
ANR	654722	Identifier	m_recoveryFile		654658	0					
ANR	654723	Identifier	Value		654658	1					
ANR	654724	ArgumentList			654658	1					
ANR	654725	ExpressionStatement	"tmp_fp = safe_fcreate_replace_if_exists ( tmp_file . Value ( ) , ""w"" )"	2029:1:56877:56941	654658	5	True				
ANR	654726	AssignmentExpression	"tmp_fp = safe_fcreate_replace_if_exists ( tmp_file . Value ( ) , ""w"" )"		654658	0		=			
ANR	654727	Identifier	tmp_fp		654658	0					
ANR	654728	CallExpression	"safe_fcreate_replace_if_exists ( tmp_file . Value ( ) , ""w"" )"		654658	1					
ANR	654729	Callee	safe_fcreate_replace_if_exists		654658	0					
ANR	654730	Identifier	safe_fcreate_replace_if_exists		654658	0					
ANR	654731	ArgumentList	tmp_file . Value ( )		654658	1					
ANR	654732	Argument	tmp_file . Value ( )		654658	0					
ANR	654733	CallExpression	tmp_file . Value ( )		654658	0					
ANR	654734	Callee	tmp_file . Value		654658	0					
ANR	654735	MemberAccess	tmp_file . Value		654658	0					
ANR	654736	Identifier	tmp_file		654658	0					
ANR	654737	Identifier	Value		654658	1					
ANR	654738	ArgumentList			654658	1					
ANR	654739	Argument	"""w"""		654658	1					
ANR	654740	PrimaryExpression	"""w"""		654658	0					
ANR	654741	IfStatement	if ( tmp_fp == NULL )		654658	6					
ANR	654742	Condition	tmp_fp == NULL	2030:6:56949:56962	654658	0	True				
ANR	654743	EqualityExpression	tmp_fp == NULL		654658	0		==			
ANR	654744	Identifier	tmp_fp		654658	0					
ANR	654745	Identifier	NULL		654658	1					
ANR	654746	CompoundStatement		17:23:382:382	654658	1					
ANR	654747	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to open recovery file %s\\n"" , tmp_file . Value ( ) )"	2031:2:56970:57044	654658	0	True				
ANR	654748	CallExpression	"dprintf ( D_ALWAYS , ""Failed to open recovery file %s\\n"" , tmp_file . Value ( ) )"		654658	0					
ANR	654749	Callee	dprintf		654658	0					
ANR	654750	Identifier	dprintf		654658	0					
ANR	654751	ArgumentList	D_ALWAYS		654658	1					
ANR	654752	Argument	D_ALWAYS		654658	0					
ANR	654753	Identifier	D_ALWAYS		654658	0					
ANR	654754	Argument	"""Failed to open recovery file %s\\n"""		654658	1					
ANR	654755	PrimaryExpression	"""Failed to open recovery file %s\\n"""		654658	0					
ANR	654756	Argument	tmp_file . Value ( )		654658	2					
ANR	654757	CallExpression	tmp_file . Value ( )		654658	0					
ANR	654758	Callee	tmp_file . Value		654658	0					
ANR	654759	MemberAccess	tmp_file . Value		654658	0					
ANR	654760	Identifier	tmp_file		654658	0					
ANR	654761	Identifier	Value		654658	1					
ANR	654762	ArgumentList			654658	1					
ANR	654763	ReturnStatement	return ;	2032:2:57048:57054	654658	1	True				
ANR	654764	IfStatement	if ( recovery_ad -> fPrint ( tmp_fp ) == FALSE )		654658	7					
ANR	654765	Condition	recovery_ad -> fPrint ( tmp_fp ) == FALSE	2035:6:57066:57103	654658	0	True				
ANR	654766	EqualityExpression	recovery_ad -> fPrint ( tmp_fp ) == FALSE		654658	0		==			
ANR	654767	CallExpression	recovery_ad -> fPrint ( tmp_fp )		654658	0					
ANR	654768	Callee	recovery_ad -> fPrint		654658	0					
ANR	654769	PtrMemberAccess	recovery_ad -> fPrint		654658	0					
ANR	654770	Identifier	recovery_ad		654658	0					
ANR	654771	Identifier	fPrint		654658	1					
ANR	654772	ArgumentList	tmp_fp		654658	1					
ANR	654773	Argument	tmp_fp		654658	0					
ANR	654774	Identifier	tmp_fp		654658	0					
ANR	654775	Identifier	FALSE		654658	1					
ANR	654776	CompoundStatement		22:47:523:523	654658	1					
ANR	654777	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to write recovery file\\n"" )"	2036:2:57111:57165	654658	0	True				
ANR	654778	CallExpression	"dprintf ( D_ALWAYS , ""Failed to write recovery file\\n"" )"		654658	0					
ANR	654779	Callee	dprintf		654658	0					
ANR	654780	Identifier	dprintf		654658	0					
ANR	654781	ArgumentList	D_ALWAYS		654658	1					
ANR	654782	Argument	D_ALWAYS		654658	0					
ANR	654783	Identifier	D_ALWAYS		654658	0					
ANR	654784	Argument	"""Failed to write recovery file\\n"""		654658	1					
ANR	654785	PrimaryExpression	"""Failed to write recovery file\\n"""		654658	0					
ANR	654786	ExpressionStatement	fclose ( tmp_fp )	2037:2:57169:57185	654658	1	True				
ANR	654787	CallExpression	fclose ( tmp_fp )		654658	0					
ANR	654788	Callee	fclose		654658	0					
ANR	654789	Identifier	fclose		654658	0					
ANR	654790	ArgumentList	tmp_fp		654658	1					
ANR	654791	Argument	tmp_fp		654658	0					
ANR	654792	Identifier	tmp_fp		654658	0					
ANR	654793	ReturnStatement	return ;	2038:2:57189:57195	654658	2	True				
ANR	654794	IfStatement	if ( fclose ( tmp_fp ) != 0 )		654658	8					
ANR	654795	Condition	fclose ( tmp_fp ) != 0	2041:6:57207:57227	654658	0	True				
ANR	654796	EqualityExpression	fclose ( tmp_fp ) != 0		654658	0		!=			
ANR	654797	CallExpression	fclose ( tmp_fp )		654658	0					
ANR	654798	Callee	fclose		654658	0					
ANR	654799	Identifier	fclose		654658	0					
ANR	654800	ArgumentList	tmp_fp		654658	1					
ANR	654801	Argument	tmp_fp		654658	0					
ANR	654802	Identifier	tmp_fp		654658	0					
ANR	654803	PrimaryExpression	0		654658	1					
ANR	654804	CompoundStatement		28:30:647:647	654658	1					
ANR	654805	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed close recovery file\\n"" )"	2042:2:57235:57286	654658	0	True				
ANR	654806	CallExpression	"dprintf ( D_ALWAYS , ""Failed close recovery file\\n"" )"		654658	0					
ANR	654807	Callee	dprintf		654658	0					
ANR	654808	Identifier	dprintf		654658	0					
ANR	654809	ArgumentList	D_ALWAYS		654658	1					
ANR	654810	Argument	D_ALWAYS		654658	0					
ANR	654811	Identifier	D_ALWAYS		654658	0					
ANR	654812	Argument	"""Failed close recovery file\\n"""		654658	1					
ANR	654813	PrimaryExpression	"""Failed close recovery file\\n"""		654658	0					
ANR	654814	ExpressionStatement	unlink ( tmp_file . Value ( ) )	2043:2:57290:57316	654658	1	True				
ANR	654815	CallExpression	unlink ( tmp_file . Value ( ) )		654658	0					
ANR	654816	Callee	unlink		654658	0					
ANR	654817	Identifier	unlink		654658	0					
ANR	654818	ArgumentList	tmp_file . Value ( )		654658	1					
ANR	654819	Argument	tmp_file . Value ( )		654658	0					
ANR	654820	CallExpression	tmp_file . Value ( )		654658	0					
ANR	654821	Callee	tmp_file . Value		654658	0					
ANR	654822	MemberAccess	tmp_file . Value		654658	0					
ANR	654823	Identifier	tmp_file		654658	0					
ANR	654824	Identifier	Value		654658	1					
ANR	654825	ArgumentList			654658	1					
ANR	654826	ReturnStatement	return ;	2044:2:57320:57326	654658	2	True				
ANR	654827	IfStatement	"if ( rotate_file ( tmp_file . Value ( ) , m_recoveryFile . Value ( ) ) != 0 )"		654658	9					
ANR	654828	Condition	"rotate_file ( tmp_file . Value ( ) , m_recoveryFile . Value ( ) ) != 0"	2047:6:57338:57397	654658	0	True				
ANR	654829	EqualityExpression	"rotate_file ( tmp_file . Value ( ) , m_recoveryFile . Value ( ) ) != 0"		654658	0		!=			
ANR	654830	CallExpression	"rotate_file ( tmp_file . Value ( ) , m_recoveryFile . Value ( ) )"		654658	0					
ANR	654831	Callee	rotate_file		654658	0					
ANR	654832	Identifier	rotate_file		654658	0					
ANR	654833	ArgumentList	tmp_file . Value ( )		654658	1					
ANR	654834	Argument	tmp_file . Value ( )		654658	0					
ANR	654835	CallExpression	tmp_file . Value ( )		654658	0					
ANR	654836	Callee	tmp_file . Value		654658	0					
ANR	654837	MemberAccess	tmp_file . Value		654658	0					
ANR	654838	Identifier	tmp_file		654658	0					
ANR	654839	Identifier	Value		654658	1					
ANR	654840	ArgumentList			654658	1					
ANR	654841	Argument	m_recoveryFile . Value ( )		654658	1					
ANR	654842	CallExpression	m_recoveryFile . Value ( )		654658	0					
ANR	654843	Callee	m_recoveryFile . Value		654658	0					
ANR	654844	MemberAccess	m_recoveryFile . Value		654658	0					
ANR	654845	Identifier	m_recoveryFile		654658	0					
ANR	654846	Identifier	Value		654658	1					
ANR	654847	ArgumentList			654658	1					
ANR	654848	PrimaryExpression	0		654658	1					
ANR	654849	CompoundStatement		34:69:817:817	654658	1					
ANR	654850	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to rename recovery file\\n"" )"	2048:2:57405:57460	654658	0	True				
ANR	654851	CallExpression	"dprintf ( D_ALWAYS , ""Failed to rename recovery file\\n"" )"		654658	0					
ANR	654852	Callee	dprintf		654658	0					
ANR	654853	Identifier	dprintf		654658	0					
ANR	654854	ArgumentList	D_ALWAYS		654658	1					
ANR	654855	Argument	D_ALWAYS		654658	0					
ANR	654856	Identifier	D_ALWAYS		654658	0					
ANR	654857	Argument	"""Failed to rename recovery file\\n"""		654658	1					
ANR	654858	PrimaryExpression	"""Failed to rename recovery file\\n"""		654658	0					
ANR	654859	ExpressionStatement	unlink ( tmp_file . Value ( ) )	2049:2:57464:57490	654658	1	True				
ANR	654860	CallExpression	unlink ( tmp_file . Value ( ) )		654658	0					
ANR	654861	Callee	unlink		654658	0					
ANR	654862	Identifier	unlink		654658	0					
ANR	654863	ArgumentList	tmp_file . Value ( )		654658	1					
ANR	654864	Argument	tmp_file . Value ( )		654658	0					
ANR	654865	CallExpression	tmp_file . Value ( )		654658	0					
ANR	654866	Callee	tmp_file . Value		654658	0					
ANR	654867	MemberAccess	tmp_file . Value		654658	0					
ANR	654868	Identifier	tmp_file		654658	0					
ANR	654869	Identifier	Value		654658	1					
ANR	654870	ArgumentList			654658	1					
ANR	654871	ReturnType	void		654658	1					
ANR	654872	Identifier	CStarter :: WriteRecoveryFile		654658	2					
ANR	654873	ParameterList	ClassAd * recovery_ad		654658	3					
ANR	654874	Parameter	ClassAd * recovery_ad	2013:29:56560:56579	654658	0	True				
ANR	654875	ParameterType	ClassAd *		654658	0					
ANR	654876	Identifier	recovery_ad		654658	1					
ANR	654877	CFGEntryNode	ENTRY		654658		True				
ANR	654878	CFGExitNode	EXIT		654658		True				
ANR	654879	Symbol	* recovery_ad		654658						
ANR	654880	Symbol	NULL		654658						
ANR	654881	Symbol	Execute		654658						
ANR	654882	Symbol	tmp_file . Value		654658						
ANR	654883	Symbol	fclose		654658						
ANR	654884	Symbol	DIR_DELIM_CHAR		654658						
ANR	654885	Symbol	daemonCore -> getpid		654658						
ANR	654886	Symbol	safe_fcreate_replace_if_exists		654658						
ANR	654887	Symbol	D_ALWAYS		654658						
ANR	654888	Symbol	m_recoveryFile		654658						
ANR	654889	Symbol	recovery_ad		654658						
ANR	654890	Symbol	m_recoveryFile . Value		654658						
ANR	654891	Symbol	tmp_fp		654658						
ANR	654892	Symbol	m_recoveryFile . Length		654658						
ANR	654893	Symbol	* daemonCore		654658						
ANR	654894	Symbol	daemonCore		654658						
ANR	654895	Symbol	recovery_ad -> fPrint		654658						
ANR	654896	Symbol	FALSE		654658						
ANR	654897	Symbol	rotate_file		654658						
ANR	654898	Symbol	tmp_file		654658						
ANR	654899	Function	CStarter :: RemoveRecoveryFile	2053:0:57498:57636							
ANR	654900	FunctionDef	CStarter :: RemoveRecoveryFile ()		654899	0					
ANR	654901	CompoundStatement		2055:0:57534:57636	654899	0					
ANR	654902	IfStatement	if ( m_recoveryFile . Length ( ) > 0 )		654899	0					
ANR	654903	Condition	m_recoveryFile . Length ( ) > 0	2056:6:57542:57568	654899	0	True				
ANR	654904	RelationalExpression	m_recoveryFile . Length ( ) > 0		654899	0		>			
ANR	654905	CallExpression	m_recoveryFile . Length ( )		654899	0					
ANR	654906	Callee	m_recoveryFile . Length		654899	0					
ANR	654907	MemberAccess	m_recoveryFile . Length		654899	0					
ANR	654908	Identifier	m_recoveryFile		654899	0					
ANR	654909	Identifier	Length		654899	1					
ANR	654910	ArgumentList			654899	1					
ANR	654911	PrimaryExpression	0		654899	1					
ANR	654912	CompoundStatement		2:36:37:37	654899	1					
ANR	654913	ExpressionStatement	unlink ( m_recoveryFile . Value ( ) )	2057:2:57576:57608	654899	0	True				
ANR	654914	CallExpression	unlink ( m_recoveryFile . Value ( ) )		654899	0					
ANR	654915	Callee	unlink		654899	0					
ANR	654916	Identifier	unlink		654899	0					
ANR	654917	ArgumentList	m_recoveryFile . Value ( )		654899	1					
ANR	654918	Argument	m_recoveryFile . Value ( )		654899	0					
ANR	654919	CallExpression	m_recoveryFile . Value ( )		654899	0					
ANR	654920	Callee	m_recoveryFile . Value		654899	0					
ANR	654921	MemberAccess	m_recoveryFile . Value		654899	0					
ANR	654922	Identifier	m_recoveryFile		654899	0					
ANR	654923	Identifier	Value		654899	1					
ANR	654924	ArgumentList			654899	1					
ANR	654925	ExpressionStatement	"m_recoveryFile = """""	2058:2:57612:57631	654899	1	True				
ANR	654926	AssignmentExpression	"m_recoveryFile = """""		654899	0		=			
ANR	654927	Identifier	m_recoveryFile		654899	0					
ANR	654928	PrimaryExpression	""""""		654899	1					
ANR	654929	ReturnType	void		654899	1					
ANR	654930	Identifier	CStarter :: RemoveRecoveryFile		654899	2					
ANR	654931	ParameterList			654899	3					
ANR	654932	CFGEntryNode	ENTRY		654899		True				
ANR	654933	CFGExitNode	EXIT		654899		True				
ANR	654934	Symbol	m_recoveryFile . Value		654899						
ANR	654935	Symbol	m_recoveryFile . Length		654899						
ANR	654936	Symbol	m_recoveryFile		654899						
ANR	654937	DeclStmt									
ANR	654938	Decl							int	int	retval
ANR	654939	Function	CStarter :: Suspend	2096:0:58777:59335							
ANR	654940	FunctionDef	CStarter :: Suspend ()		654939	0					
ANR	654941	CompoundStatement		2097:26:58808:59335	654939	0					
ANR	654942	ExpressionStatement	"dprintf ( D_ALWAYS , ""Suspending all jobs.\\n"" )"	2098:1:58811:58854	654939	0	True				
ANR	654943	CallExpression	"dprintf ( D_ALWAYS , ""Suspending all jobs.\\n"" )"		654939	0					
ANR	654944	Callee	dprintf		654939	0					
ANR	654945	Identifier	dprintf		654939	0					
ANR	654946	ArgumentList	D_ALWAYS		654939	1					
ANR	654947	Argument	D_ALWAYS		654939	0					
ANR	654948	Identifier	D_ALWAYS		654939	0					
ANR	654949	Argument	"""Suspending all jobs.\\n"""		654939	1					
ANR	654950	PrimaryExpression	"""Suspending all jobs.\\n"""		654939	0					
ANR	654951	IdentifierDeclStatement	UserProc * job ;	2100:1:58858:58871	654939	1	True				
ANR	654952	IdentifierDecl	* job		654939	0					
ANR	654953	IdentifierDeclType	UserProc *		654939	0					
ANR	654954	Identifier	job		654939	1					
ANR	654955	ExpressionStatement	m_job_list . Rewind ( )	2101:1:58874:58893	654939	2	True				
ANR	654956	CallExpression	m_job_list . Rewind ( )		654939	0					
ANR	654957	Callee	m_job_list . Rewind		654939	0					
ANR	654958	MemberAccess	m_job_list . Rewind		654939	0					
ANR	654959	Identifier	m_job_list		654939	0					
ANR	654960	Identifier	Rewind		654939	1					
ANR	654961	ArgumentList			654939	1					
ANR	654962	WhileStatement	while ( ( job = m_job_list . Next ( ) ) != NULL )		654939	3					
ANR	654963	Condition	( job = m_job_list . Next ( ) ) != NULL	2102:8:58903:58935	654939	0	True				
ANR	654964	EqualityExpression	( job = m_job_list . Next ( ) ) != NULL		654939	0		!=			
ANR	654965	AssignmentExpression	job = m_job_list . Next ( )		654939	0		=			
ANR	654966	Identifier	job		654939	0					
ANR	654967	CallExpression	m_job_list . Next ( )		654939	1					
ANR	654968	Callee	m_job_list . Next		654939	0					
ANR	654969	MemberAccess	m_job_list . Next		654939	0					
ANR	654970	Identifier	m_job_list		654939	0					
ANR	654971	Identifier	Next		654939	1					
ANR	654972	ArgumentList			654939	1					
ANR	654973	Identifier	NULL		654939	1					
ANR	654974	CompoundStatement		6:43:129:129	654939	1					
ANR	654975	ExpressionStatement	job -> Suspend ( )	2103:2:58942:58956	654939	0	True				
ANR	654976	CallExpression	job -> Suspend ( )		654939	0					
ANR	654977	Callee	job -> Suspend		654939	0					
ANR	654978	PtrMemberAccess	job -> Suspend		654939	0					
ANR	654979	Identifier	job		654939	0					
ANR	654980	Identifier	Suspend		654939	1					
ANR	654981	ArgumentList			654939	1					
ANR	654982	ExpressionStatement	this -> suspended = true	2114:1:59292:59314	654939	4	True				
ANR	654983	AssignmentExpression	this -> suspended = true		654939	0		=			
ANR	654984	PtrMemberAccess	this -> suspended		654939	0					
ANR	654985	Identifier	this		654939	0					
ANR	654986	Identifier	suspended		654939	1					
ANR	654987	Identifier	true		654939	1					
ANR	654988	ReturnStatement	return ( true ) ;	2116:1:59318:59333	654939	5	True				
ANR	654989	Identifier	true		654939	0					
ANR	654990	ReturnType	bool		654939	1					
ANR	654991	Identifier	CStarter :: Suspend		654939	2					
ANR	654992	ParameterList			654939	3					
ANR	654993	CFGEntryNode	ENTRY		654939		True				
ANR	654994	CFGExitNode	EXIT		654939		True				
ANR	654995	Symbol	m_job_list		654939						
ANR	654996	Symbol	* this		654939						
ANR	654997	Symbol	this -> suspended		654939						
ANR	654998	Symbol	NULL		654939						
ANR	654999	Symbol	D_ALWAYS		654939						
ANR	655000	Symbol	true		654939						
ANR	655001	Symbol	this		654939						
ANR	655002	Symbol	job		654939						
ANR	655003	Symbol	m_job_list . Next		654939						
ANR	655004	DeclStmt									
ANR	655005	Decl							int	int	retval
ANR	655006	Function	CStarter :: Continue	2153:0:60463:60892							
ANR	655007	FunctionDef	CStarter :: Continue ()		655006	0					
ANR	655008	CompoundStatement		2155:0:60495:60892	655006	0					
ANR	655009	ExpressionStatement	"dprintf ( D_ALWAYS , ""Continuing all jobs.\\n"" )"	2156:1:60498:60541	655006	0	True				
ANR	655010	CallExpression	"dprintf ( D_ALWAYS , ""Continuing all jobs.\\n"" )"		655006	0					
ANR	655011	Callee	dprintf		655006	0					
ANR	655012	Identifier	dprintf		655006	0					
ANR	655013	ArgumentList	D_ALWAYS		655006	1					
ANR	655014	Argument	D_ALWAYS		655006	0					
ANR	655015	Identifier	D_ALWAYS		655006	0					
ANR	655016	Argument	"""Continuing all jobs.\\n"""		655006	1					
ANR	655017	PrimaryExpression	"""Continuing all jobs.\\n"""		655006	0					
ANR	655018	IdentifierDeclStatement	UserProc * job ;	2158:1:60545:60558	655006	1	True				
ANR	655019	IdentifierDecl	* job		655006	0					
ANR	655020	IdentifierDeclType	UserProc *		655006	0					
ANR	655021	Identifier	job		655006	1					
ANR	655022	ExpressionStatement	m_job_list . Rewind ( )	2159:1:60561:60580	655006	2	True				
ANR	655023	CallExpression	m_job_list . Rewind ( )		655006	0					
ANR	655024	Callee	m_job_list . Rewind		655006	0					
ANR	655025	MemberAccess	m_job_list . Rewind		655006	0					
ANR	655026	Identifier	m_job_list		655006	0					
ANR	655027	Identifier	Rewind		655006	1					
ANR	655028	ArgumentList			655006	1					
ANR	655029	WhileStatement	while ( ( job = m_job_list . Next ( ) ) != NULL )		655006	3					
ANR	655030	Condition	( job = m_job_list . Next ( ) ) != NULL	2160:8:60590:60622	655006	0	True				
ANR	655031	EqualityExpression	( job = m_job_list . Next ( ) ) != NULL		655006	0		!=			
ANR	655032	AssignmentExpression	job = m_job_list . Next ( )		655006	0		=			
ANR	655033	Identifier	job		655006	0					
ANR	655034	CallExpression	m_job_list . Next ( )		655006	1					
ANR	655035	Callee	m_job_list . Next		655006	0					
ANR	655036	MemberAccess	m_job_list . Next		655006	0					
ANR	655037	Identifier	m_job_list		655006	0					
ANR	655038	Identifier	Next		655006	1					
ANR	655039	ArgumentList			655006	1					
ANR	655040	Identifier	NULL		655006	1					
ANR	655041	CompoundStatement		6:43:129:129	655006	1					
ANR	655042	ExpressionStatement	job -> Continue ( )	2161:2:60629:60644	655006	0	True				
ANR	655043	CallExpression	job -> Continue ( )		655006	0					
ANR	655044	Callee	job -> Continue		655006	0					
ANR	655045	PtrMemberAccess	job -> Continue		655006	0					
ANR	655046	Identifier	job		655006	0					
ANR	655047	Identifier	Continue		655006	1					
ANR	655048	ArgumentList			655006	1					
ANR	655049	ExpressionStatement	this -> suspended = false	2170:1:60848:60871	655006	4	True				
ANR	655050	AssignmentExpression	this -> suspended = false		655006	0		=			
ANR	655051	PtrMemberAccess	this -> suspended		655006	0					
ANR	655052	Identifier	this		655006	0					
ANR	655053	Identifier	suspended		655006	1					
ANR	655054	Identifier	false		655006	1					
ANR	655055	ReturnStatement	return ( true ) ;	2172:1:60875:60890	655006	5	True				
ANR	655056	Identifier	true		655006	0					
ANR	655057	ReturnType	bool		655006	1					
ANR	655058	Identifier	CStarter :: Continue		655006	2					
ANR	655059	ParameterList			655006	3					
ANR	655060	CFGEntryNode	ENTRY		655006		True				
ANR	655061	CFGExitNode	EXIT		655006		True				
ANR	655062	Symbol	m_job_list		655006						
ANR	655063	Symbol	* this		655006						
ANR	655064	Symbol	this -> suspended		655006						
ANR	655065	Symbol	NULL		655006						
ANR	655066	Symbol	D_ALWAYS		655006						
ANR	655067	Symbol	false		655006						
ANR	655068	Symbol	this		655006						
ANR	655069	Symbol	true		655006						
ANR	655070	Symbol	job		655006						
ANR	655071	Symbol	m_job_list . Next		655006						
ANR	655072	Function	CStarter :: PeriodicCkpt	2194:0:61309:62924							
ANR	655073	FunctionDef	CStarter :: PeriodicCkpt ()		655072	0					
ANR	655074	CompoundStatement		2196:0:61345:62924	655072	0					
ANR	655075	ExpressionStatement	"dprintf ( D_ALWAYS , ""Periodic Checkpointing all jobs.\\n"" )"	2197:1:61348:61403	655072	0	True				
ANR	655076	CallExpression	"dprintf ( D_ALWAYS , ""Periodic Checkpointing all jobs.\\n"" )"		655072	0					
ANR	655077	Callee	dprintf		655072	0					
ANR	655078	Identifier	dprintf		655072	0					
ANR	655079	ArgumentList	D_ALWAYS		655072	1					
ANR	655080	Argument	D_ALWAYS		655072	0					
ANR	655081	Identifier	D_ALWAYS		655072	0					
ANR	655082	Argument	"""Periodic Checkpointing all jobs.\\n"""		655072	1					
ANR	655083	PrimaryExpression	"""Periodic Checkpointing all jobs.\\n"""		655072	0					
ANR	655084	IfStatement	if ( jobUniverse != CONDOR_UNIVERSE_VM )		655072	1					
ANR	655085	Condition	jobUniverse != CONDOR_UNIVERSE_VM	2199:5:61411:61443	655072	0	True				
ANR	655086	EqualityExpression	jobUniverse != CONDOR_UNIVERSE_VM		655072	0		!=			
ANR	655087	Identifier	jobUniverse		655072	0					
ANR	655088	Identifier	CONDOR_UNIVERSE_VM		655072	1					
ANR	655089	CompoundStatement		4:41:101:101	655072	1					
ANR	655090	ReturnStatement	return false ;	2200:2:61451:61463	655072	0	True				
ANR	655091	Identifier	false		655072	0					
ANR	655092	IdentifierDeclStatement	UserProc * job ;	2203:1:61470:61483	655072	2	True				
ANR	655093	IdentifierDecl	* job		655072	0					
ANR	655094	IdentifierDeclType	UserProc *		655072	0					
ANR	655095	Identifier	job		655072	1					
ANR	655096	ExpressionStatement	m_job_list . Rewind ( )	2204:1:61486:61505	655072	3	True				
ANR	655097	CallExpression	m_job_list . Rewind ( )		655072	0					
ANR	655098	Callee	m_job_list . Rewind		655072	0					
ANR	655099	MemberAccess	m_job_list . Rewind		655072	0					
ANR	655100	Identifier	m_job_list		655072	0					
ANR	655101	Identifier	Rewind		655072	1					
ANR	655102	ArgumentList			655072	1					
ANR	655103	WhileStatement	while ( ( job = m_job_list . Next ( ) ) != NULL )		655072	4					
ANR	655104	Condition	( job = m_job_list . Next ( ) ) != NULL	2205:8:61515:61547	655072	0	True				
ANR	655105	EqualityExpression	( job = m_job_list . Next ( ) ) != NULL		655072	0		!=			
ANR	655106	AssignmentExpression	job = m_job_list . Next ( )		655072	0		=			
ANR	655107	Identifier	job		655072	0					
ANR	655108	CallExpression	m_job_list . Next ( )		655072	1					
ANR	655109	Callee	m_job_list . Next		655072	0					
ANR	655110	MemberAccess	m_job_list . Next		655072	0					
ANR	655111	Identifier	m_job_list		655072	0					
ANR	655112	Identifier	Next		655072	1					
ANR	655113	ArgumentList			655072	1					
ANR	655114	Identifier	NULL		655072	1					
ANR	655115	CompoundStatement		10:43:204:204	655072	1					
ANR	655116	IfStatement	if ( job -> Ckpt ( ) )		655072	0					
ANR	655117	Condition	job -> Ckpt ( )	2206:6:61558:61568	655072	0	True				
ANR	655118	CallExpression	job -> Ckpt ( )		655072	0					
ANR	655119	Callee	job -> Ckpt		655072	0					
ANR	655120	PtrMemberAccess	job -> Ckpt		655072	0					
ANR	655121	Identifier	job		655072	0					
ANR	655122	Identifier	Ckpt		655072	1					
ANR	655123	ArgumentList			655072	1					
ANR	655124	CompoundStatement		27:3:614:658	655072	1					
ANR	655125	IdentifierDeclStatement	CondorPrivSepHelper * cpsh = condorPrivSepHelper ( ) ;	2208:3:61578:61627	655072	0	True				
ANR	655126	IdentifierDecl	* cpsh = condorPrivSepHelper ( )		655072	0					
ANR	655127	IdentifierDeclType	CondorPrivSepHelper *		655072	0					
ANR	655128	Identifier	cpsh		655072	1					
ANR	655129	AssignmentExpression	* cpsh = condorPrivSepHelper ( )		655072	2		=			
ANR	655130	Identifier	cpsh		655072	0					
ANR	655131	CallExpression	condorPrivSepHelper ( )		655072	1					
ANR	655132	Callee	condorPrivSepHelper		655072	0					
ANR	655133	Identifier	condorPrivSepHelper		655072	0					
ANR	655134	ArgumentList			655072	1					
ANR	655135	IfStatement	if ( cpsh != NULL )		655072	1					
ANR	655136	Condition	cpsh != NULL	2209:7:61636:61647	655072	0	True				
ANR	655137	EqualityExpression	cpsh != NULL		655072	0		!=			
ANR	655138	Identifier	cpsh		655072	0					
ANR	655139	Identifier	NULL		655072	1					
ANR	655140	CompoundStatement		15:4:310:326	655072	1					
ANR	655141	IdentifierDeclStatement	PrivSepError err ;	2210:4:61656:61672	655072	0	True				
ANR	655142	IdentifierDecl	err		655072	0					
ANR	655143	IdentifierDeclType	PrivSepError		655072	0					
ANR	655144	Identifier	err		655072	1					
ANR	655145	IfStatement	if ( ! cpsh -> chown_sandbox_to_condor ( err ) )		655072	1					
ANR	655146	Condition	! cpsh -> chown_sandbox_to_condor ( err )	2211:8:61682:61716	655072	0	True				
ANR	655147	UnaryOperationExpression	! cpsh -> chown_sandbox_to_condor ( err )		655072	0					
ANR	655148	UnaryOperator	!		655072	0					
ANR	655149	CallExpression	cpsh -> chown_sandbox_to_condor ( err )		655072	1					
ANR	655150	Callee	cpsh -> chown_sandbox_to_condor		655072	0					
ANR	655151	PtrMemberAccess	cpsh -> chown_sandbox_to_condor		655072	0					
ANR	655152	Identifier	cpsh		655072	0					
ANR	655153	Identifier	chown_sandbox_to_condor		655072	1					
ANR	655154	ArgumentList	err		655072	1					
ANR	655155	Argument	err		655072	0					
ANR	655156	Identifier	err		655072	0					
ANR	655157	CompoundStatement		16:46:374:374	655072	1					
ANR	655158	ExpressionStatement	"jic -> notifyStarterError ( err . holdReason ( ) , false , err . holdCode ( ) , err . holdSubCode ( ) )"	2212:5:61727:61835	655072	0	True				
ANR	655159	CallExpression	"jic -> notifyStarterError ( err . holdReason ( ) , false , err . holdCode ( ) , err . holdSubCode ( ) )"		655072	0					
ANR	655160	Callee	jic -> notifyStarterError		655072	0					
ANR	655161	PtrMemberAccess	jic -> notifyStarterError		655072	0					
ANR	655162	Identifier	jic		655072	0					
ANR	655163	Identifier	notifyStarterError		655072	1					
ANR	655164	ArgumentList	err . holdReason ( )		655072	1					
ANR	655165	Argument	err . holdReason ( )		655072	0					
ANR	655166	CallExpression	err . holdReason ( )		655072	0					
ANR	655167	Callee	err . holdReason		655072	0					
ANR	655168	MemberAccess	err . holdReason		655072	0					
ANR	655169	Identifier	err		655072	0					
ANR	655170	Identifier	holdReason		655072	1					
ANR	655171	ArgumentList			655072	1					
ANR	655172	Argument	false		655072	1					
ANR	655173	Identifier	false		655072	0					
ANR	655174	Argument	err . holdCode ( )		655072	2					
ANR	655175	CallExpression	err . holdCode ( )		655072	0					
ANR	655176	Callee	err . holdCode		655072	0					
ANR	655177	MemberAccess	err . holdCode		655072	0					
ANR	655178	Identifier	err		655072	0					
ANR	655179	Identifier	holdCode		655072	1					
ANR	655180	ArgumentList			655072	1					
ANR	655181	Argument	err . holdSubCode ( )		655072	3					
ANR	655182	CallExpression	err . holdSubCode ( )		655072	0					
ANR	655183	Callee	err . holdSubCode		655072	0					
ANR	655184	MemberAccess	err . holdSubCode		655072	0					
ANR	655185	Identifier	err		655072	0					
ANR	655186	Identifier	holdSubCode		655072	1					
ANR	655187	ArgumentList			655072	1					
ANR	655188	ExpressionStatement	"dprintf ( D_ALWAYS , ""failed to change sandbox to condor ownership before checkpoint"" )"	2217:5:61842:61924	655072	1	True				
ANR	655189	CallExpression	"dprintf ( D_ALWAYS , ""failed to change sandbox to condor ownership before checkpoint"" )"		655072	0					
ANR	655190	Callee	dprintf		655072	0					
ANR	655191	Identifier	dprintf		655072	0					
ANR	655192	ArgumentList	D_ALWAYS		655072	1					
ANR	655193	Argument	D_ALWAYS		655072	0					
ANR	655194	Identifier	D_ALWAYS		655072	0					
ANR	655195	Argument	"""failed to change sandbox to condor ownership before checkpoint"""		655072	1					
ANR	655196	PrimaryExpression	"""failed to change sandbox to condor ownership before checkpoint"""		655072	0					
ANR	655197	ReturnStatement	return false ;	2218:5:61931:61943	655072	2	True				
ANR	655198	Identifier	false		655072	0					
ANR	655199	IdentifierDeclStatement	bool transfer_ok = jic -> uploadWorkingFiles ( ) ;	2222:3:61960:62004	655072	2	True				
ANR	655200	IdentifierDecl	transfer_ok = jic -> uploadWorkingFiles ( )		655072	0					
ANR	655201	IdentifierDeclType	bool		655072	0					
ANR	655202	Identifier	transfer_ok		655072	1					
ANR	655203	AssignmentExpression	transfer_ok = jic -> uploadWorkingFiles ( )		655072	2		=			
ANR	655204	Identifier	transfer_ok		655072	0					
ANR	655205	CallExpression	jic -> uploadWorkingFiles ( )		655072	1					
ANR	655206	Callee	jic -> uploadWorkingFiles		655072	0					
ANR	655207	PtrMemberAccess	jic -> uploadWorkingFiles		655072	0					
ANR	655208	Identifier	jic		655072	0					
ANR	655209	Identifier	uploadWorkingFiles		655072	1					
ANR	655210	ArgumentList			655072	1					
ANR	655211	IfStatement	if ( cpsh != NULL )		655072	3					
ANR	655212	Condition	cpsh != NULL	2224:7:62014:62025	655072	0	True				
ANR	655213	EqualityExpression	cpsh != NULL		655072	0		!=			
ANR	655214	Identifier	cpsh		655072	0					
ANR	655215	Identifier	NULL		655072	1					
ANR	655216	CompoundStatement		30:4:688:704	655072	1					
ANR	655217	IdentifierDeclStatement	PrivSepError err ;	2225:4:62034:62050	655072	0	True				
ANR	655218	IdentifierDecl	err		655072	0					
ANR	655219	IdentifierDeclType	PrivSepError		655072	0					
ANR	655220	Identifier	err		655072	1					
ANR	655221	IfStatement	if ( ! cpsh -> chown_sandbox_to_user ( err ) )		655072	1					
ANR	655222	Condition	! cpsh -> chown_sandbox_to_user ( err )	2226:8:62060:62092	655072	0	True				
ANR	655223	UnaryOperationExpression	! cpsh -> chown_sandbox_to_user ( err )		655072	0					
ANR	655224	UnaryOperator	!		655072	0					
ANR	655225	CallExpression	cpsh -> chown_sandbox_to_user ( err )		655072	1					
ANR	655226	Callee	cpsh -> chown_sandbox_to_user		655072	0					
ANR	655227	PtrMemberAccess	cpsh -> chown_sandbox_to_user		655072	0					
ANR	655228	Identifier	cpsh		655072	0					
ANR	655229	Identifier	chown_sandbox_to_user		655072	1					
ANR	655230	ArgumentList	err		655072	1					
ANR	655231	Argument	err		655072	0					
ANR	655232	Identifier	err		655072	0					
ANR	655233	CompoundStatement		31:44:750:750	655072	1					
ANR	655234	ExpressionStatement	"jic -> notifyStarterError ( err . holdReason ( ) , true , err . holdCode ( ) , err . holdSubCode ( ) )"	2227:5:62103:62210	655072	0	True				
ANR	655235	CallExpression	"jic -> notifyStarterError ( err . holdReason ( ) , true , err . holdCode ( ) , err . holdSubCode ( ) )"		655072	0					
ANR	655236	Callee	jic -> notifyStarterError		655072	0					
ANR	655237	PtrMemberAccess	jic -> notifyStarterError		655072	0					
ANR	655238	Identifier	jic		655072	0					
ANR	655239	Identifier	notifyStarterError		655072	1					
ANR	655240	ArgumentList	err . holdReason ( )		655072	1					
ANR	655241	Argument	err . holdReason ( )		655072	0					
ANR	655242	CallExpression	err . holdReason ( )		655072	0					
ANR	655243	Callee	err . holdReason		655072	0					
ANR	655244	MemberAccess	err . holdReason		655072	0					
ANR	655245	Identifier	err		655072	0					
ANR	655246	Identifier	holdReason		655072	1					
ANR	655247	ArgumentList			655072	1					
ANR	655248	Argument	true		655072	1					
ANR	655249	Identifier	true		655072	0					
ANR	655250	Argument	err . holdCode ( )		655072	2					
ANR	655251	CallExpression	err . holdCode ( )		655072	0					
ANR	655252	Callee	err . holdCode		655072	0					
ANR	655253	MemberAccess	err . holdCode		655072	0					
ANR	655254	Identifier	err		655072	0					
ANR	655255	Identifier	holdCode		655072	1					
ANR	655256	ArgumentList			655072	1					
ANR	655257	Argument	err . holdSubCode ( )		655072	3					
ANR	655258	CallExpression	err . holdSubCode ( )		655072	0					
ANR	655259	Callee	err . holdSubCode		655072	0					
ANR	655260	MemberAccess	err . holdSubCode		655072	0					
ANR	655261	Identifier	err		655072	0					
ANR	655262	Identifier	holdSubCode		655072	1					
ANR	655263	ArgumentList			655072	1					
ANR	655264	ExpressionStatement	"EXCEPT ( ""failed to restore sandbox to user ownership after checkpoint"" )"	2232:5:62217:62287	655072	1	True				
ANR	655265	CallExpression	"EXCEPT ( ""failed to restore sandbox to user ownership after checkpoint"" )"		655072	0					
ANR	655266	Callee	EXCEPT		655072	0					
ANR	655267	Identifier	EXCEPT		655072	0					
ANR	655268	ArgumentList	"""failed to restore sandbox to user ownership after checkpoint"""		655072	1					
ANR	655269	Argument	"""failed to restore sandbox to user ownership after checkpoint"""		655072	0					
ANR	655270	PrimaryExpression	"""failed to restore sandbox to user ownership after checkpoint"""		655072	0					
ANR	655271	ReturnStatement	return false ;	2233:5:62294:62306	655072	2	True				
ANR	655272	Identifier	false		655072	0					
ANR	655273	IfStatement	if ( transfer_ok == false )		655072	4					
ANR	655274	Condition	transfer_ok == false	2239:7:62444:62463	655072	0	True				
ANR	655275	EqualityExpression	transfer_ok == false		655072	0		==			
ANR	655276	Identifier	transfer_ok		655072	0					
ANR	655277	Identifier	false		655072	1					
ANR	655278	CompoundStatement		44:30:1121:1121	655072	1					
ANR	655279	ExpressionStatement	"dprintf ( D_ALWAYS , ""Periodic Checkpointing failed.\\n"" )"	2243:4:62564:62617	655072	0	True				
ANR	655280	CallExpression	"dprintf ( D_ALWAYS , ""Periodic Checkpointing failed.\\n"" )"		655072	0					
ANR	655281	Callee	dprintf		655072	0					
ANR	655282	Identifier	dprintf		655072	0					
ANR	655283	ArgumentList	D_ALWAYS		655072	1					
ANR	655284	Argument	D_ALWAYS		655072	0					
ANR	655285	Identifier	D_ALWAYS		655072	0					
ANR	655286	Argument	"""Periodic Checkpointing failed.\\n"""		655072	1					
ANR	655287	PrimaryExpression	"""Periodic Checkpointing failed.\\n"""		655072	0					
ANR	655288	ExpressionStatement	job -> CkptDone ( false )	2246:4:62650:62670	655072	1	True				
ANR	655289	CallExpression	job -> CkptDone ( false )		655072	0					
ANR	655290	Callee	job -> CkptDone		655072	0					
ANR	655291	PtrMemberAccess	job -> CkptDone		655072	0					
ANR	655292	Identifier	job		655072	0					
ANR	655293	Identifier	CkptDone		655072	1					
ANR	655294	ArgumentList	false		655072	1					
ANR	655295	Argument	false		655072	0					
ANR	655296	Identifier	false		655072	0					
ANR	655297	ElseStatement	else		655072	0					
ANR	655298	CompoundStatement		52:9:1335:1335	655072	0					
ANR	655299	ExpressionStatement	"dprintf ( D_ALWAYS , ""Periodic Checkpointing is done.\\n"" )"	2249:4:62729:62783	655072	0	True				
ANR	655300	CallExpression	"dprintf ( D_ALWAYS , ""Periodic Checkpointing is done.\\n"" )"		655072	0					
ANR	655301	Callee	dprintf		655072	0					
ANR	655302	Identifier	dprintf		655072	0					
ANR	655303	ArgumentList	D_ALWAYS		655072	1					
ANR	655304	Argument	D_ALWAYS		655072	0					
ANR	655305	Identifier	D_ALWAYS		655072	0					
ANR	655306	Argument	"""Periodic Checkpointing is done.\\n"""		655072	1					
ANR	655307	PrimaryExpression	"""Periodic Checkpointing is done.\\n"""		655072	0					
ANR	655308	ExpressionStatement	jic -> updateCkptInfo ( )	2252:4:62816:62837	655072	1	True				
ANR	655309	CallExpression	jic -> updateCkptInfo ( )		655072	0					
ANR	655310	Callee	jic -> updateCkptInfo		655072	0					
ANR	655311	PtrMemberAccess	jic -> updateCkptInfo		655072	0					
ANR	655312	Identifier	jic		655072	0					
ANR	655313	Identifier	updateCkptInfo		655072	1					
ANR	655314	ArgumentList			655072	1					
ANR	655315	ExpressionStatement	job -> CkptDone ( true )	2255:4:62875:62894	655072	2	True				
ANR	655316	CallExpression	job -> CkptDone ( true )		655072	0					
ANR	655317	Callee	job -> CkptDone		655072	0					
ANR	655318	PtrMemberAccess	job -> CkptDone		655072	0					
ANR	655319	Identifier	job		655072	0					
ANR	655320	Identifier	CkptDone		655072	1					
ANR	655321	ArgumentList	true		655072	1					
ANR	655322	Argument	true		655072	0					
ANR	655323	Identifier	true		655072	0					
ANR	655324	ReturnStatement	return true ;	2261:1:62911:62922	655072	5	True				
ANR	655325	Identifier	true		655072	0					
ANR	655326	ReturnType	bool		655072	1					
ANR	655327	Identifier	CStarter :: PeriodicCkpt		655072	2					
ANR	655328	ParameterList			655072	3					
ANR	655329	CFGEntryNode	ENTRY		655072		True				
ANR	655330	CFGExitNode	EXIT		655072		True				
ANR	655331	Symbol	condorPrivSepHelper		655072						
ANR	655332	Symbol	jic -> uploadWorkingFiles		655072						
ANR	655333	Symbol	NULL		655072						
ANR	655334	Symbol	err		655072						
ANR	655335	Symbol	* cpsh		655072						
ANR	655336	Symbol	jic		655072						
ANR	655337	Symbol	cpsh -> chown_sandbox_to_user		655072						
ANR	655338	Symbol	* job		655072						
ANR	655339	Symbol	D_ALWAYS		655072						
ANR	655340	Symbol	false		655072						
ANR	655341	Symbol	jobUniverse		655072						
ANR	655342	Symbol	cpsh		655072						
ANR	655343	Symbol	m_job_list . Next		655072						
ANR	655344	Symbol	* jic		655072						
ANR	655345	Symbol	err . holdSubCode		655072						
ANR	655346	Symbol	m_job_list		655072						
ANR	655347	Symbol	job -> Ckpt		655072						
ANR	655348	Symbol	err . holdReason		655072						
ANR	655349	Symbol	transfer_ok		655072						
ANR	655350	Symbol	cpsh -> chown_sandbox_to_condor		655072						
ANR	655351	Symbol	CONDOR_UNIVERSE_VM		655072						
ANR	655352	Symbol	true		655072						
ANR	655353	Symbol	job		655072						
ANR	655354	Symbol	err . holdCode		655072						
ANR	655355	Function	CStarter :: Reaper	2265:0:62928:65220							
ANR	655356	FunctionDef	"CStarter :: Reaper (int pid , int exit_status)"		655355	0					
ANR	655357	CompoundStatement		2267:0:62975:65220	655355	0					
ANR	655358	IdentifierDeclStatement	int handled_jobs = 0 ;	2268:1:62978:62998	655355	0	True				
ANR	655359	IdentifierDecl	handled_jobs = 0		655355	0					
ANR	655360	IdentifierDeclType	int		655355	0					
ANR	655361	Identifier	handled_jobs		655355	1					
ANR	655362	AssignmentExpression	handled_jobs = 0		655355	2		=			
ANR	655363	Identifier	handled_jobs		655355	0					
ANR	655364	PrimaryExpression	0		655355	1					
ANR	655365	IdentifierDeclStatement	int all_jobs = 0 ;	2269:1:63001:63017	655355	1	True				
ANR	655366	IdentifierDecl	all_jobs = 0		655355	0					
ANR	655367	IdentifierDeclType	int		655355	0					
ANR	655368	Identifier	all_jobs		655355	1					
ANR	655369	AssignmentExpression	all_jobs = 0		655355	2		=			
ANR	655370	Identifier	all_jobs		655355	0					
ANR	655371	PrimaryExpression	0		655355	1					
ANR	655372	IdentifierDeclStatement	UserProc * job ;	2270:1:63020:63033	655355	2	True				
ANR	655373	IdentifierDecl	* job		655355	0					
ANR	655374	IdentifierDeclType	UserProc *		655355	0					
ANR	655375	Identifier	job		655355	1					
ANR	655376	IfStatement	if ( WIFSIGNALED ( exit_status ) )		655355	3					
ANR	655377	Condition	WIFSIGNALED ( exit_status )	2272:5:63041:63064	655355	0	True				
ANR	655378	CallExpression	WIFSIGNALED ( exit_status )		655355	0					
ANR	655379	Callee	WIFSIGNALED		655355	0					
ANR	655380	Identifier	WIFSIGNALED		655355	0					
ANR	655381	ArgumentList	exit_status		655355	1					
ANR	655382	Argument	exit_status		655355	0					
ANR	655383	Identifier	exit_status		655355	0					
ANR	655384	CompoundStatement		6:32:92:92	655355	1					
ANR	655385	ExpressionStatement	"dprintf ( D_ALWAYS , ""Process exited, pid=%d, signal=%d\\n"" , pid , WTERMSIG ( exit_status ) )"	2273:2:63072:63163	655355	0	True				
ANR	655386	CallExpression	"dprintf ( D_ALWAYS , ""Process exited, pid=%d, signal=%d\\n"" , pid , WTERMSIG ( exit_status ) )"		655355	0					
ANR	655387	Callee	dprintf		655355	0					
ANR	655388	Identifier	dprintf		655355	0					
ANR	655389	ArgumentList	D_ALWAYS		655355	1					
ANR	655390	Argument	D_ALWAYS		655355	0					
ANR	655391	Identifier	D_ALWAYS		655355	0					
ANR	655392	Argument	"""Process exited, pid=%d, signal=%d\\n"""		655355	1					
ANR	655393	PrimaryExpression	"""Process exited, pid=%d, signal=%d\\n"""		655355	0					
ANR	655394	Argument	pid		655355	2					
ANR	655395	Identifier	pid		655355	0					
ANR	655396	Argument	WTERMSIG ( exit_status )		655355	3					
ANR	655397	CallExpression	WTERMSIG ( exit_status )		655355	0					
ANR	655398	Callee	WTERMSIG		655355	0					
ANR	655399	Identifier	WTERMSIG		655355	0					
ANR	655400	ArgumentList	exit_status		655355	1					
ANR	655401	Argument	exit_status		655355	0					
ANR	655402	Identifier	exit_status		655355	0					
ANR	655403	ElseStatement	else		655355	0					
ANR	655404	CompoundStatement		9:8:197:197	655355	0					
ANR	655405	ExpressionStatement	"dprintf ( D_ALWAYS , ""Process exited, pid=%d, status=%d\\n"" , pid , WEXITSTATUS ( exit_status ) )"	2276:2:63177:63271	655355	0	True				
ANR	655406	CallExpression	"dprintf ( D_ALWAYS , ""Process exited, pid=%d, status=%d\\n"" , pid , WEXITSTATUS ( exit_status ) )"		655355	0					
ANR	655407	Callee	dprintf		655355	0					
ANR	655408	Identifier	dprintf		655355	0					
ANR	655409	ArgumentList	D_ALWAYS		655355	1					
ANR	655410	Argument	D_ALWAYS		655355	0					
ANR	655411	Identifier	D_ALWAYS		655355	0					
ANR	655412	Argument	"""Process exited, pid=%d, status=%d\\n"""		655355	1					
ANR	655413	PrimaryExpression	"""Process exited, pid=%d, status=%d\\n"""		655355	0					
ANR	655414	Argument	pid		655355	2					
ANR	655415	Identifier	pid		655355	0					
ANR	655416	Argument	WEXITSTATUS ( exit_status )		655355	3					
ANR	655417	CallExpression	WEXITSTATUS ( exit_status )		655355	0					
ANR	655418	Callee	WEXITSTATUS		655355	0					
ANR	655419	Identifier	WEXITSTATUS		655355	0					
ANR	655420	ArgumentList	exit_status		655355	1					
ANR	655421	Argument	exit_status		655355	0					
ANR	655422	Identifier	exit_status		655355	0					
ANR	655423	IfStatement	"if ( pre_script && pre_script -> JobReaper ( pid , exit_status ) )"		655355	4					
ANR	655424	Condition	"pre_script && pre_script -> JobReaper ( pid , exit_status )"	2280:5:63282:63334	655355	0	True				
ANR	655425	AndExpression	"pre_script && pre_script -> JobReaper ( pid , exit_status )"		655355	0		&&			
ANR	655426	Identifier	pre_script		655355	0					
ANR	655427	CallExpression	"pre_script -> JobReaper ( pid , exit_status )"		655355	1					
ANR	655428	Callee	pre_script -> JobReaper		655355	0					
ANR	655429	PtrMemberAccess	pre_script -> JobReaper		655355	0					
ANR	655430	Identifier	pre_script		655355	0					
ANR	655431	Identifier	JobReaper		655355	1					
ANR	655432	ArgumentList	pid		655355	1					
ANR	655433	Argument	pid		655355	0					
ANR	655434	Identifier	pid		655355	0					
ANR	655435	Argument	exit_status		655355	1					
ANR	655436	Identifier	exit_status		655355	0					
ANR	655437	CompoundStatement		14:61:362:362	655355	1					
ANR	655438	IfStatement	if ( ! SpawnJob ( ) )		655355	0					
ANR	655439	Condition	! SpawnJob ( )	2287:6:63609:63620	655355	0	True				
ANR	655440	UnaryOperationExpression	! SpawnJob ( )		655355	0					
ANR	655441	UnaryOperator	!		655355	0					
ANR	655442	CallExpression	SpawnJob ( )		655355	1					
ANR	655443	Callee	SpawnJob		655355	0					
ANR	655444	Identifier	SpawnJob		655355	0					
ANR	655445	ArgumentList			655355	1					
ANR	655446	CompoundStatement		21:21:648:648	655355	1					
ANR	655447	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to start main job, exiting\\n"" )"	2288:3:63629:63687	655355	0	True				
ANR	655448	CallExpression	"dprintf ( D_ALWAYS , ""Failed to start main job, exiting\\n"" )"		655355	0					
ANR	655449	Callee	dprintf		655355	0					
ANR	655450	Identifier	dprintf		655355	0					
ANR	655451	ArgumentList	D_ALWAYS		655355	1					
ANR	655452	Argument	D_ALWAYS		655355	0					
ANR	655453	Identifier	D_ALWAYS		655355	0					
ANR	655454	Argument	"""Failed to start main job, exiting\\n"""		655355	1					
ANR	655455	PrimaryExpression	"""Failed to start main job, exiting\\n"""		655355	0					
ANR	655456	ExpressionStatement	main_shutdown_fast ( )	2289:3:63692:63712	655355	1	True				
ANR	655457	CallExpression	main_shutdown_fast ( )		655355	0					
ANR	655458	Callee	main_shutdown_fast		655355	0					
ANR	655459	Identifier	main_shutdown_fast		655355	0					
ANR	655460	ArgumentList			655355	1					
ANR	655461	ReturnStatement	return FALSE ;	2290:3:63717:63729	655355	2	True				
ANR	655462	Identifier	FALSE		655355	0					
ANR	655463	ReturnStatement	return TRUE ;	2292:2:63737:63748	655355	1	True				
ANR	655464	Identifier	TRUE		655355	0					
ANR	655465	IfStatement	"if ( post_script && post_script -> JobReaper ( pid , exit_status ) )"		655355	5					
ANR	655466	Condition	"post_script && post_script -> JobReaper ( pid , exit_status )"	2295:5:63759:63813	655355	0	True				
ANR	655467	AndExpression	"post_script && post_script -> JobReaper ( pid , exit_status )"		655355	0		&&			
ANR	655468	Identifier	post_script		655355	0					
ANR	655469	CallExpression	"post_script -> JobReaper ( pid , exit_status )"		655355	1					
ANR	655470	Callee	post_script -> JobReaper		655355	0					
ANR	655471	PtrMemberAccess	post_script -> JobReaper		655355	0					
ANR	655472	Identifier	post_script		655355	0					
ANR	655473	Identifier	JobReaper		655355	1					
ANR	655474	ArgumentList	pid		655355	1					
ANR	655475	Argument	pid		655355	0					
ANR	655476	Identifier	pid		655355	0					
ANR	655477	Argument	exit_status		655355	1					
ANR	655478	Identifier	exit_status		655355	0					
ANR	655479	CompoundStatement		29:63:841:841	655355	1					
ANR	655480	ExpressionStatement	allJobsDone ( )	2300:2:64053:64066	655355	0	True				
ANR	655481	CallExpression	allJobsDone ( )		655355	0					
ANR	655482	Callee	allJobsDone		655355	0					
ANR	655483	Identifier	allJobsDone		655355	0					
ANR	655484	ArgumentList			655355	1					
ANR	655485	ReturnStatement	return TRUE ;	2301:2:64070:64081	655355	1	True				
ANR	655486	Identifier	TRUE		655355	0					
ANR	655487	ExpressionStatement	m_job_list . Rewind ( )	2305:1:64089:64108	655355	6	True				
ANR	655488	CallExpression	m_job_list . Rewind ( )		655355	0					
ANR	655489	Callee	m_job_list . Rewind		655355	0					
ANR	655490	MemberAccess	m_job_list . Rewind		655355	0					
ANR	655491	Identifier	m_job_list		655355	0					
ANR	655492	Identifier	Rewind		655355	1					
ANR	655493	ArgumentList			655355	1					
ANR	655494	WhileStatement	while ( ( job = m_job_list . Next ( ) ) != NULL )		655355	7					
ANR	655495	Condition	( job = m_job_list . Next ( ) ) != NULL	2306:8:64118:64150	655355	0	True				
ANR	655496	EqualityExpression	( job = m_job_list . Next ( ) ) != NULL		655355	0		!=			
ANR	655497	AssignmentExpression	job = m_job_list . Next ( )		655355	0		=			
ANR	655498	Identifier	job		655355	0					
ANR	655499	CallExpression	m_job_list . Next ( )		655355	1					
ANR	655500	Callee	m_job_list . Next		655355	0					
ANR	655501	MemberAccess	m_job_list . Next		655355	0					
ANR	655502	Identifier	m_job_list		655355	0					
ANR	655503	Identifier	Next		655355	1					
ANR	655504	ArgumentList			655355	1					
ANR	655505	Identifier	NULL		655355	1					
ANR	655506	CompoundStatement		40:43:1177:1177	655355	1					
ANR	655507	ExpressionStatement	all_jobs ++	2307:2:64157:64167	655355	0	True				
ANR	655508	PostIncDecOperationExpression	all_jobs ++		655355	0					
ANR	655509	Identifier	all_jobs		655355	0					
ANR	655510	IncDec	++		655355	1					
ANR	655511	IfStatement	"if ( job -> GetJobPid ( ) == pid && job -> JobReaper ( pid , exit_status ) )"		655355	1					
ANR	655512	Condition	"job -> GetJobPid ( ) == pid && job -> JobReaper ( pid , exit_status )"	2308:6:64175:64231	655355	0	True				
ANR	655513	AndExpression	"job -> GetJobPid ( ) == pid && job -> JobReaper ( pid , exit_status )"		655355	0		&&			
ANR	655514	EqualityExpression	job -> GetJobPid ( ) == pid		655355	0		==			
ANR	655515	CallExpression	job -> GetJobPid ( )		655355	0					
ANR	655516	Callee	job -> GetJobPid		655355	0					
ANR	655517	PtrMemberAccess	job -> GetJobPid		655355	0					
ANR	655518	Identifier	job		655355	0					
ANR	655519	Identifier	GetJobPid		655355	1					
ANR	655520	ArgumentList			655355	1					
ANR	655521	Identifier	pid		655355	1					
ANR	655522	CallExpression	"job -> JobReaper ( pid , exit_status )"		655355	1					
ANR	655523	Callee	job -> JobReaper		655355	0					
ANR	655524	PtrMemberAccess	job -> JobReaper		655355	0					
ANR	655525	Identifier	job		655355	0					
ANR	655526	Identifier	JobReaper		655355	1					
ANR	655527	ArgumentList	pid		655355	1					
ANR	655528	Argument	pid		655355	0					
ANR	655529	Identifier	pid		655355	0					
ANR	655530	Argument	exit_status		655355	1					
ANR	655531	Identifier	exit_status		655355	0					
ANR	655532	CompoundStatement		42:66:1259:1259	655355	1					
ANR	655533	ExpressionStatement	handled_jobs ++	2309:3:64240:64254	655355	0	True				
ANR	655534	PostIncDecOperationExpression	handled_jobs ++		655355	0					
ANR	655535	Identifier	handled_jobs		655355	0					
ANR	655536	IncDec	++		655355	1					
ANR	655537	ExpressionStatement	m_job_list . DeleteCurrent ( )	2310:3:64259:64285	655355	1	True				
ANR	655538	CallExpression	m_job_list . DeleteCurrent ( )		655355	0					
ANR	655539	Callee	m_job_list . DeleteCurrent		655355	0					
ANR	655540	MemberAccess	m_job_list . DeleteCurrent		655355	0					
ANR	655541	Identifier	m_job_list		655355	0					
ANR	655542	Identifier	DeleteCurrent		655355	1					
ANR	655543	ArgumentList			655355	1					
ANR	655544	ExpressionStatement	m_reaped_job_list . Append ( job )	2311:3:64290:64319	655355	2	True				
ANR	655545	CallExpression	m_reaped_job_list . Append ( job )		655355	0					
ANR	655546	Callee	m_reaped_job_list . Append		655355	0					
ANR	655547	MemberAccess	m_reaped_job_list . Append		655355	0					
ANR	655548	Identifier	m_reaped_job_list		655355	0					
ANR	655549	Identifier	Append		655355	1					
ANR	655550	ArgumentList	job		655355	1					
ANR	655551	Argument	job		655355	0					
ANR	655552	Identifier	job		655355	0					
ANR	655553	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Reaper: all=%d handled=%d ShuttingDown=%d\\n"" , all_jobs , handled_jobs , ShuttingDown )"	2315:1:64330:64441	655355	8	True				
ANR	655554	CallExpression	"dprintf ( D_FULLDEBUG , ""Reaper: all=%d handled=%d ShuttingDown=%d\\n"" , all_jobs , handled_jobs , ShuttingDown )"		655355	0					
ANR	655555	Callee	dprintf		655355	0					
ANR	655556	Identifier	dprintf		655355	0					
ANR	655557	ArgumentList	D_FULLDEBUG		655355	1					
ANR	655558	Argument	D_FULLDEBUG		655355	0					
ANR	655559	Identifier	D_FULLDEBUG		655355	0					
ANR	655560	Argument	"""Reaper: all=%d handled=%d ShuttingDown=%d\\n"""		655355	1					
ANR	655561	PrimaryExpression	"""Reaper: all=%d handled=%d ShuttingDown=%d\\n"""		655355	0					
ANR	655562	Argument	all_jobs		655355	2					
ANR	655563	Identifier	all_jobs		655355	0					
ANR	655564	Argument	handled_jobs		655355	3					
ANR	655565	Identifier	handled_jobs		655355	0					
ANR	655566	Argument	ShuttingDown		655355	4					
ANR	655567	Identifier	ShuttingDown		655355	0					
ANR	655568	IfStatement	if ( handled_jobs == 0 )		655355	9					
ANR	655569	Condition	handled_jobs == 0	2318:5:64449:64465	655355	0	True				
ANR	655570	EqualityExpression	handled_jobs == 0		655355	0		==			
ANR	655571	Identifier	handled_jobs		655355	0					
ANR	655572	PrimaryExpression	0		655355	1					
ANR	655573	CompoundStatement		52:25:1493:1493	655355	1					
ANR	655574	ExpressionStatement	"dprintf ( D_ALWAYS , ""unhandled job exit: pid=%d, status=%d\\n"" , pid , exit_status )"	2319:2:64473:64558	655355	0	True				
ANR	655575	CallExpression	"dprintf ( D_ALWAYS , ""unhandled job exit: pid=%d, status=%d\\n"" , pid , exit_status )"		655355	0					
ANR	655576	Callee	dprintf		655355	0					
ANR	655577	Identifier	dprintf		655355	0					
ANR	655578	ArgumentList	D_ALWAYS		655355	1					
ANR	655579	Argument	D_ALWAYS		655355	0					
ANR	655580	Identifier	D_ALWAYS		655355	0					
ANR	655581	Argument	"""unhandled job exit: pid=%d, status=%d\\n"""		655355	1					
ANR	655582	PrimaryExpression	"""unhandled job exit: pid=%d, status=%d\\n"""		655355	0					
ANR	655583	Argument	pid		655355	2					
ANR	655584	Identifier	pid		655355	0					
ANR	655585	Argument	exit_status		655355	3					
ANR	655586	Identifier	exit_status		655355	0					
ANR	655587	IfStatement	if ( all_jobs - handled_jobs == 0 )		655355	10					
ANR	655588	Condition	all_jobs - handled_jobs == 0	2322:5:64568:64595	655355	0	True				
ANR	655589	EqualityExpression	all_jobs - handled_jobs == 0		655355	0		==			
ANR	655590	AdditiveExpression	all_jobs - handled_jobs		655355	0		-			
ANR	655591	Identifier	all_jobs		655355	0					
ANR	655592	Identifier	handled_jobs		655355	1					
ANR	655593	PrimaryExpression	0		655355	1					
ANR	655594	CompoundStatement		56:36:1623:1623	655355	1					
ANR	655595	IfStatement	if ( post_script )		655355	0					
ANR	655596	Condition	post_script	2323:6:64607:64617	655355	0	True				
ANR	655597	Identifier	post_script		655355	0					
ANR	655598	CompoundStatement		57:20:1645:1645	655355	1					
ANR	655599	ExpressionStatement	post_script -> StartJob ( )	2327:3:64761:64784	655355	0	True				
ANR	655600	CallExpression	post_script -> StartJob ( )		655355	0					
ANR	655601	Callee	post_script -> StartJob		655355	0					
ANR	655602	PtrMemberAccess	post_script -> StartJob		655355	0					
ANR	655603	Identifier	post_script		655355	0					
ANR	655604	Identifier	StartJob		655355	1					
ANR	655605	ArgumentList			655355	1					
ANR	655606	ReturnStatement	return TRUE ;	2328:3:64789:64800	655355	1	True				
ANR	655607	Identifier	TRUE		655355	0					
ANR	655608	ElseStatement	else		655355	0					
ANR	655609	CompoundStatement		63:9:1835:1835	655355	0					
ANR	655610	IfStatement	if ( ! allJobsDone ( ) )		655355	0					
ANR	655611	Condition	! allJobsDone ( )	2333:7:64950:64963	655355	0	True				
ANR	655612	UnaryOperationExpression	! allJobsDone ( )		655355	0					
ANR	655613	UnaryOperator	!		655355	0					
ANR	655614	CallExpression	allJobsDone ( )		655355	1					
ANR	655615	Callee	allJobsDone		655355	0					
ANR	655616	Identifier	allJobsDone		655355	0					
ANR	655617	ArgumentList			655355	1					
ANR	655618	CompoundStatement		67:24:1991:1991	655355	1					
ANR	655619	ExpressionStatement	"dprintf ( D_ALWAYS , ""Returning from CStarter::JobReaper()\\n"" )"	2334:4:64973:65032	655355	0	True				
ANR	655620	CallExpression	"dprintf ( D_ALWAYS , ""Returning from CStarter::JobReaper()\\n"" )"		655355	0					
ANR	655621	Callee	dprintf		655355	0					
ANR	655622	Identifier	dprintf		655355	0					
ANR	655623	ArgumentList	D_ALWAYS		655355	1					
ANR	655624	Argument	D_ALWAYS		655355	0					
ANR	655625	Identifier	D_ALWAYS		655355	0					
ANR	655626	Argument	"""Returning from CStarter::JobReaper()\\n"""		655355	1					
ANR	655627	PrimaryExpression	"""Returning from CStarter::JobReaper()\\n"""		655355	0					
ANR	655628	ReturnStatement	return 0 ;	2335:4:65038:65046	655355	1	True				
ANR	655629	PrimaryExpression	0		655355	0					
ANR	655630	IfStatement	if ( ShuttingDown && ( all_jobs - handled_jobs == 0 ) )		655355	11					
ANR	655631	Condition	ShuttingDown && ( all_jobs - handled_jobs == 0 )	2340:6:65067:65112	655355	0	True				
ANR	655632	AndExpression	ShuttingDown && ( all_jobs - handled_jobs == 0 )		655355	0		&&			
ANR	655633	Identifier	ShuttingDown		655355	0					
ANR	655634	EqualityExpression	all_jobs - handled_jobs == 0		655355	1		==			
ANR	655635	AdditiveExpression	all_jobs - handled_jobs		655355	0		-			
ANR	655636	Identifier	all_jobs		655355	0					
ANR	655637	Identifier	handled_jobs		655355	1					
ANR	655638	PrimaryExpression	0		655355	1					
ANR	655639	CompoundStatement		74:55:2140:2140	655355	1					
ANR	655640	ExpressionStatement	"dprintf ( D_ALWAYS , ""Last process exited, now Starter is exiting\\n"" )"	2341:2:65120:65185	655355	0	True				
ANR	655641	CallExpression	"dprintf ( D_ALWAYS , ""Last process exited, now Starter is exiting\\n"" )"		655355	0					
ANR	655642	Callee	dprintf		655355	0					
ANR	655643	Identifier	dprintf		655355	0					
ANR	655644	ArgumentList	D_ALWAYS		655355	1					
ANR	655645	Argument	D_ALWAYS		655355	0					
ANR	655646	Identifier	D_ALWAYS		655355	0					
ANR	655647	Argument	"""Last process exited, now Starter is exiting\\n"""		655355	1					
ANR	655648	PrimaryExpression	"""Last process exited, now Starter is exiting\\n"""		655355	0					
ANR	655649	ExpressionStatement	StarterExit ( 0 )	2342:2:65189:65203	655355	1	True				
ANR	655650	CallExpression	StarterExit ( 0 )		655355	0					
ANR	655651	Callee	StarterExit		655355	0					
ANR	655652	Identifier	StarterExit		655355	0					
ANR	655653	ArgumentList	0		655355	1					
ANR	655654	Argument	0		655355	0					
ANR	655655	PrimaryExpression	0		655355	0					
ANR	655656	ReturnStatement	return 0 ;	2345:1:65210:65218	655355	12	True				
ANR	655657	PrimaryExpression	0		655355	0					
ANR	655658	ReturnType	int		655355	1					
ANR	655659	Identifier	CStarter :: Reaper		655355	2					
ANR	655660	ParameterList	"int pid , int exit_status"		655355	3					
ANR	655661	Parameter	int pid	2266:17:62949:62955	655355	0	True				
ANR	655662	ParameterType	int		655355	0					
ANR	655663	Identifier	pid		655355	1					
ANR	655664	Parameter	int exit_status	2266:26:62958:62972	655355	1	True				
ANR	655665	ParameterType	int		655355	0					
ANR	655666	Identifier	exit_status		655355	1					
ANR	655667	CFGEntryNode	ENTRY		655355		True				
ANR	655668	CFGExitNode	EXIT		655355		True				
ANR	655669	Symbol	pre_script -> JobReaper		655355						
ANR	655670	Symbol	post_script		655355						
ANR	655671	Symbol	ShuttingDown		655355						
ANR	655672	Symbol	pid		655355						
ANR	655673	Symbol	WEXITSTATUS		655355						
ANR	655674	Symbol	exit_status		655355						
ANR	655675	Symbol	m_job_list		655355						
ANR	655676	Symbol	post_script -> JobReaper		655355						
ANR	655677	Symbol	m_reaped_job_list		655355						
ANR	655678	Symbol	all_jobs		655355						
ANR	655679	Symbol	* pre_script		655355						
ANR	655680	Symbol	pre_script		655355						
ANR	655681	Symbol	WIFSIGNALED		655355						
ANR	655682	Symbol	* post_script		655355						
ANR	655683	Symbol	SpawnJob		655355						
ANR	655684	Symbol	NULL		655355						
ANR	655685	Symbol	allJobsDone		655355						
ANR	655686	Symbol	* job		655355						
ANR	655687	Symbol	D_ALWAYS		655355						
ANR	655688	Symbol	TRUE		655355						
ANR	655689	Symbol	job -> GetJobPid		655355						
ANR	655690	Symbol	D_FULLDEBUG		655355						
ANR	655691	Symbol	m_job_list . Next		655355						
ANR	655692	Symbol	job -> JobReaper		655355						
ANR	655693	Symbol	WTERMSIG		655355						
ANR	655694	Symbol	FALSE		655355						
ANR	655695	Symbol	handled_jobs		655355						
ANR	655696	Symbol	job		655355						
ANR	655697	Function	CStarter :: allJobsDone	2349:0:65224:66311							
ANR	655698	FunctionDef	CStarter :: allJobsDone ()		655697	0					
ANR	655699	CompoundStatement		2351:0:65259:66311	655697	0					
ANR	655700	ExpressionStatement	m_all_jobs_done = true	2352:1:65262:65284	655697	0	True				
ANR	655701	AssignmentExpression	m_all_jobs_done = true		655697	0		=			
ANR	655702	Identifier	m_all_jobs_done		655697	0					
ANR	655703	Identifier	true		655697	1					
ANR	655704	IdentifierDeclStatement	bool bRet = false ;	2353:1:65287:65302	655697	1	True				
ANR	655705	IdentifierDecl	bRet = false		655697	0					
ANR	655706	IdentifierDeclType	bool		655697	0					
ANR	655707	Identifier	bRet		655697	1					
ANR	655708	AssignmentExpression	bRet = false		655697	2		=			
ANR	655709	Identifier	false		655697	0					
ANR	655710	Identifier	false		655697	1					
ANR	655711	IfStatement	if ( m_privsep_helper != NULL )		655697	2					
ANR	655712	Condition	m_privsep_helper != NULL	2360:5:65576:65599	655697	0	True				
ANR	655713	EqualityExpression	m_privsep_helper != NULL		655697	0		!=			
ANR	655714	Identifier	m_privsep_helper		655697	0					
ANR	655715	Identifier	NULL		655697	1					
ANR	655716	CompoundStatement		10:31:342:342	655697	1					
ANR	655717	IfStatement	if ( jobUniverse != CONDOR_UNIVERSE_VM )		655697	0					
ANR	655718	Condition	jobUniverse != CONDOR_UNIVERSE_VM	2361:6:65610:65642	655697	0	True				
ANR	655719	EqualityExpression	jobUniverse != CONDOR_UNIVERSE_VM		655697	0		!=			
ANR	655720	Identifier	jobUniverse		655697	0					
ANR	655721	Identifier	CONDOR_UNIVERSE_VM		655697	1					
ANR	655722	CompoundStatement		12:3:390:406	655697	1					
ANR	655723	IdentifierDeclStatement	PrivSepError err ;	2362:3:65650:65666	655697	0	True				
ANR	655724	IdentifierDecl	err		655697	0					
ANR	655725	IdentifierDeclType	PrivSepError		655697	0					
ANR	655726	Identifier	err		655697	1					
ANR	655727	IfStatement	if ( ! m_privsep_helper -> chown_sandbox_to_condor ( err ) )		655697	1					
ANR	655728	Condition	! m_privsep_helper -> chown_sandbox_to_condor ( err )	2363:7:65675:65721	655697	0	True				
ANR	655729	UnaryOperationExpression	! m_privsep_helper -> chown_sandbox_to_condor ( err )		655697	0					
ANR	655730	UnaryOperator	!		655697	0					
ANR	655731	CallExpression	m_privsep_helper -> chown_sandbox_to_condor ( err )		655697	1					
ANR	655732	Callee	m_privsep_helper -> chown_sandbox_to_condor		655697	0					
ANR	655733	PtrMemberAccess	m_privsep_helper -> chown_sandbox_to_condor		655697	0					
ANR	655734	Identifier	m_privsep_helper		655697	0					
ANR	655735	Identifier	chown_sandbox_to_condor		655697	1					
ANR	655736	ArgumentList	err		655697	1					
ANR	655737	Argument	err		655697	0					
ANR	655738	Identifier	err		655697	0					
ANR	655739	CompoundStatement		13:57:465:465	655697	1					
ANR	655740	ExpressionStatement	"jic -> notifyStarterError ( err . holdReason ( ) , false , err . holdCode ( ) , err . holdSubCode ( ) )"	2364:4:65731:65835	655697	0	True				
ANR	655741	CallExpression	"jic -> notifyStarterError ( err . holdReason ( ) , false , err . holdCode ( ) , err . holdSubCode ( ) )"		655697	0					
ANR	655742	Callee	jic -> notifyStarterError		655697	0					
ANR	655743	PtrMemberAccess	jic -> notifyStarterError		655697	0					
ANR	655744	Identifier	jic		655697	0					
ANR	655745	Identifier	notifyStarterError		655697	1					
ANR	655746	ArgumentList	err . holdReason ( )		655697	1					
ANR	655747	Argument	err . holdReason ( )		655697	0					
ANR	655748	CallExpression	err . holdReason ( )		655697	0					
ANR	655749	Callee	err . holdReason		655697	0					
ANR	655750	MemberAccess	err . holdReason		655697	0					
ANR	655751	Identifier	err		655697	0					
ANR	655752	Identifier	holdReason		655697	1					
ANR	655753	ArgumentList			655697	1					
ANR	655754	Argument	false		655697	1					
ANR	655755	Identifier	false		655697	0					
ANR	655756	Argument	err . holdCode ( )		655697	2					
ANR	655757	CallExpression	err . holdCode ( )		655697	0					
ANR	655758	Callee	err . holdCode		655697	0					
ANR	655759	MemberAccess	err . holdCode		655697	0					
ANR	655760	Identifier	err		655697	0					
ANR	655761	Identifier	holdCode		655697	1					
ANR	655762	ArgumentList			655697	1					
ANR	655763	Argument	err . holdSubCode ( )		655697	3					
ANR	655764	CallExpression	err . holdSubCode ( )		655697	0					
ANR	655765	Callee	err . holdSubCode		655697	0					
ANR	655766	MemberAccess	err . holdSubCode		655697	0					
ANR	655767	Identifier	err		655697	0					
ANR	655768	Identifier	holdSubCode		655697	1					
ANR	655769	ArgumentList			655697	1					
ANR	655770	ExpressionStatement	"EXCEPT ( ""failed to chown sandbox to condor after job completed"" )"	2369:4:65841:65904	655697	1	True				
ANR	655771	CallExpression	"EXCEPT ( ""failed to chown sandbox to condor after job completed"" )"		655697	0					
ANR	655772	Callee	EXCEPT		655697	0					
ANR	655773	Identifier	EXCEPT		655697	0					
ANR	655774	ArgumentList	"""failed to chown sandbox to condor after job completed"""		655697	1					
ANR	655775	Argument	"""failed to chown sandbox to condor after job completed"""		655697	0					
ANR	655776	PrimaryExpression	"""failed to chown sandbox to condor after job completed"""		655697	0					
ANR	655777	IfStatement	if ( jic -> allJobsDone ( ) )		655697	3					
ANR	655778	Condition	jic -> allJobsDone ( )	2375:5:65975:65992	655697	0	True				
ANR	655779	CallExpression	jic -> allJobsDone ( )		655697	0					
ANR	655780	Callee	jic -> allJobsDone		655697	0					
ANR	655781	PtrMemberAccess	jic -> allJobsDone		655697	0					
ANR	655782	Identifier	jic		655697	0					
ANR	655783	Identifier	allJobsDone		655697	1					
ANR	655784	ArgumentList			655697	1					
ANR	655785	CompoundStatement		25:25:735:735	655697	1					
ANR	655786	ExpressionStatement	bRet = transferOutput ( )	2377:2:66061:66082	655697	0	True				
ANR	655787	AssignmentExpression	bRet = transferOutput ( )		655697	0		=			
ANR	655788	Identifier	bRet		655697	0					
ANR	655789	CallExpression	transferOutput ( )		655697	1					
ANR	655790	Callee	transferOutput		655697	0					
ANR	655791	Identifier	transferOutput		655697	0					
ANR	655792	ArgumentList			655697	1					
ANR	655793	IfStatement	if ( m_deferred_job_update )		655697	4					
ANR	655794	Condition	m_deferred_job_update	2380:5:66094:66114	655697	0	True				
ANR	655795	Identifier	m_deferred_job_update		655697	0					
ANR	655796	CompoundStatement		30:27:856:856	655697	1					
ANR	655797	ExpressionStatement	"jic -> notifyJobExit ( - 1 , JOB_SHOULD_REQUEUE , 0 )"	2381:2:66120:66167	655697	0	True				
ANR	655798	CallExpression	"jic -> notifyJobExit ( - 1 , JOB_SHOULD_REQUEUE , 0 )"		655697	0					
ANR	655799	Callee	jic -> notifyJobExit		655697	0					
ANR	655800	PtrMemberAccess	jic -> notifyJobExit		655697	0					
ANR	655801	Identifier	jic		655697	0					
ANR	655802	Identifier	notifyJobExit		655697	1					
ANR	655803	ArgumentList	- 1		655697	1					
ANR	655804	Argument	- 1		655697	0					
ANR	655805	UnaryOperationExpression	- 1		655697	0					
ANR	655806	UnaryOperator	-		655697	0					
ANR	655807	PrimaryExpression	1		655697	1					
ANR	655808	Argument	JOB_SHOULD_REQUEUE		655697	1					
ANR	655809	Identifier	JOB_SHOULD_REQUEUE		655697	0					
ANR	655810	Argument	0		655697	2					
ANR	655811	PrimaryExpression	0		655697	0					
ANR	655812	ReturnStatement	return bRet ;	2385:1:66298:66309	655697	5	True				
ANR	655813	Identifier	bRet		655697	0					
ANR	655814	ReturnType	bool		655697	1					
ANR	655815	Identifier	CStarter :: allJobsDone		655697	2					
ANR	655816	ParameterList			655697	3					
ANR	655817	CFGEntryNode	ENTRY		655697		True				
ANR	655818	CFGExitNode	EXIT		655697		True				
ANR	655819	Symbol	* m_privsep_helper		655697						
ANR	655820	Symbol	NULL		655697						
ANR	655821	Symbol	err		655697						
ANR	655822	Symbol	jic		655697						
ANR	655823	Symbol	false		655697						
ANR	655824	Symbol	m_privsep_helper		655697						
ANR	655825	Symbol	jobUniverse		655697						
ANR	655826	Symbol	m_privsep_helper -> chown_sandbox_to_condor		655697						
ANR	655827	Symbol	transferOutput		655697						
ANR	655828	Symbol	* jic		655697						
ANR	655829	Symbol	err . holdSubCode		655697						
ANR	655830	Symbol	bRet		655697						
ANR	655831	Symbol	err . holdReason		655697						
ANR	655832	Symbol	JOB_SHOULD_REQUEUE		655697						
ANR	655833	Symbol	m_all_jobs_done		655697						
ANR	655834	Symbol	jic -> allJobsDone		655697						
ANR	655835	Symbol	m_deferred_job_update		655697						
ANR	655836	Symbol	true		655697						
ANR	655837	Symbol	CONDOR_UNIVERSE_VM		655697						
ANR	655838	Symbol	err . holdCode		655697						
ANR	655839	Function	CStarter :: transferOutput	2389:0:66315:68057							
ANR	655840	FunctionDef	CStarter :: transferOutput ()		655839	0					
ANR	655841	CompoundStatement		2391:0:66353:68057	655839	0					
ANR	655842	IdentifierDeclStatement	UserProc * job ;	2392:1:66356:66369	655839	0	True				
ANR	655843	IdentifierDecl	* job		655839	0					
ANR	655844	IdentifierDeclType	UserProc *		655839	0					
ANR	655845	Identifier	job		655839	1					
ANR	655846	IdentifierDeclStatement	bool transient_failure = false ;	2393:1:66372:66402	655839	1	True				
ANR	655847	IdentifierDecl	transient_failure = false		655839	0					
ANR	655848	IdentifierDeclType	bool		655839	0					
ANR	655849	Identifier	transient_failure		655839	1					
ANR	655850	AssignmentExpression	transient_failure = false		655839	2		=			
ANR	655851	Identifier	false		655839	0					
ANR	655852	Identifier	false		655839	1					
ANR	655853	IfStatement	if ( jic -> transferOutput ( transient_failure ) == false )		655839	2					
ANR	655854	Condition	jic -> transferOutput ( transient_failure ) == false	2395:5:66410:66456	655839	0	True				
ANR	655855	EqualityExpression	jic -> transferOutput ( transient_failure ) == false		655839	0		==			
ANR	655856	CallExpression	jic -> transferOutput ( transient_failure )		655839	0					
ANR	655857	Callee	jic -> transferOutput		655839	0					
ANR	655858	PtrMemberAccess	jic -> transferOutput		655839	0					
ANR	655859	Identifier	jic		655839	0					
ANR	655860	Identifier	transferOutput		655839	1					
ANR	655861	ArgumentList	transient_failure		655839	1					
ANR	655862	Argument	transient_failure		655839	0					
ANR	655863	Identifier	transient_failure		655839	0					
ANR	655864	Identifier	false		655839	1					
ANR	655865	CompoundStatement		5:54:105:105	655839	1					
ANR	655866	IfStatement	if ( transient_failure )		655839	0					
ANR	655867	Condition	transient_failure	2397:6:66468:66484	655839	0	True				
ANR	655868	Identifier	transient_failure		655839	0					
ANR	655869	CompoundStatement		7:26:134:134	655839	1					
ANR	655870	ReturnStatement	return false ;	2399:3:66559:66571	655839	0	True				
ANR	655871	Identifier	false		655839	0					
ANR	655872	ExpressionStatement	m_reaped_job_list . Rewind ( )	2412:2:67105:67131	655839	1	True				
ANR	655873	CallExpression	m_reaped_job_list . Rewind ( )		655839	0					
ANR	655874	Callee	m_reaped_job_list . Rewind		655839	0					
ANR	655875	MemberAccess	m_reaped_job_list . Rewind		655839	0					
ANR	655876	Identifier	m_reaped_job_list		655839	0					
ANR	655877	Identifier	Rewind		655839	1					
ANR	655878	ArgumentList			655839	1					
ANR	655879	WhileStatement	while ( ( job = m_reaped_job_list . Next ( ) ) != NULL )		655839	2					
ANR	655880	Condition	( job = m_reaped_job_list . Next ( ) ) != NULL	2413:9:67142:67181	655839	0	True				
ANR	655881	EqualityExpression	( job = m_reaped_job_list . Next ( ) ) != NULL		655839	0		!=			
ANR	655882	AssignmentExpression	job = m_reaped_job_list . Next ( )		655839	0		=			
ANR	655883	Identifier	job		655839	0					
ANR	655884	CallExpression	m_reaped_job_list . Next ( )		655839	1					
ANR	655885	Callee	m_reaped_job_list . Next		655839	0					
ANR	655886	MemberAccess	m_reaped_job_list . Next		655839	0					
ANR	655887	Identifier	m_reaped_job_list		655839	0					
ANR	655888	Identifier	Next		655839	1					
ANR	655889	ArgumentList			655839	1					
ANR	655890	Identifier	NULL		655839	1					
ANR	655891	CompoundStatement		25:3:850:857	655839	1					
ANR	655892	IdentifierDeclStatement	ClassAd ad ;	2414:3:67189:67199	655839	0	True				
ANR	655893	IdentifierDecl	ad		655839	0					
ANR	655894	IdentifierDeclType	ClassAd		655839	0					
ANR	655895	Identifier	ad		655839	1					
ANR	655896	IdentifierDeclStatement	int pid ;	2415:3:67204:67211	655839	1	True				
ANR	655897	IdentifierDecl	pid		655839	0					
ANR	655898	IdentifierDeclType	int		655839	0					
ANR	655899	Identifier	pid		655839	1					
ANR	655900	ExpressionStatement	job -> PublishUpdateAd ( & ad )	2416:3:67216:67241	655839	2	True				
ANR	655901	CallExpression	job -> PublishUpdateAd ( & ad )		655839	0					
ANR	655902	Callee	job -> PublishUpdateAd		655839	0					
ANR	655903	PtrMemberAccess	job -> PublishUpdateAd		655839	0					
ANR	655904	Identifier	job		655839	0					
ANR	655905	Identifier	PublishUpdateAd		655839	1					
ANR	655906	ArgumentList	& ad		655839	1					
ANR	655907	Argument	& ad		655839	0					
ANR	655908	UnaryOperationExpression	& ad		655839	0					
ANR	655909	UnaryOperator	&		655839	0					
ANR	655910	Identifier	ad		655839	1					
ANR	655911	IfStatement	"if ( ad . LookupInteger ( ATTR_JOB_PID , pid ) )"		655839	3					
ANR	655912	Condition	"ad . LookupInteger ( ATTR_JOB_PID , pid )"	2417:7:67250:67284	655839	0	True				
ANR	655913	CallExpression	"ad . LookupInteger ( ATTR_JOB_PID , pid )"		655839	0					
ANR	655914	Callee	ad . LookupInteger		655839	0					
ANR	655915	MemberAccess	ad . LookupInteger		655839	0					
ANR	655916	Identifier	ad		655839	0					
ANR	655917	Identifier	LookupInteger		655839	1					
ANR	655918	ArgumentList	ATTR_JOB_PID		655839	1					
ANR	655919	Argument	ATTR_JOB_PID		655839	0					
ANR	655920	Identifier	ATTR_JOB_PID		655839	0					
ANR	655921	Argument	pid		655839	1					
ANR	655922	Identifier	pid		655839	0					
ANR	655923	CompoundStatement		27:44:933:933	655839	1					
ANR	655924	ExpressionStatement	jic -> notifyJobTermination ( job )	2418:4:67293:67323	655839	0	True				
ANR	655925	CallExpression	jic -> notifyJobTermination ( job )		655839	0					
ANR	655926	Callee	jic -> notifyJobTermination		655839	0					
ANR	655927	PtrMemberAccess	jic -> notifyJobTermination		655839	0					
ANR	655928	Identifier	jic		655839	0					
ANR	655929	Identifier	notifyJobTermination		655839	1					
ANR	655930	ArgumentList	job		655839	1					
ANR	655931	Argument	job		655839	0					
ANR	655932	Identifier	job		655839	0					
ANR	655933	BreakStatement	break ;	2419:4:67329:67334	655839	1	True				
ANR	655934	ExpressionStatement	jic -> transferOutputMopUp ( )	2423:2:67348:67374	655839	3	True				
ANR	655935	CallExpression	jic -> transferOutputMopUp ( )		655839	0					
ANR	655936	Callee	jic -> transferOutputMopUp		655839	0					
ANR	655937	PtrMemberAccess	jic -> transferOutputMopUp		655839	0					
ANR	655938	Identifier	jic		655839	0					
ANR	655939	Identifier	transferOutputMopUp		655839	1					
ANR	655940	ArgumentList			655839	1					
ANR	655941	Statement	dprintf	2433:2:67746:67752	655839	4	True				
ANR	655942	Statement	(	2433:9:67753:67753	655839	5	True				
ANR	655943	Statement	D_ALWAYS	2433:11:67755:67762	655839	6	True				
ANR	655944	Statement	","	2433:19:67763:67763	655839	7	True				
ANR	655945	Statement	"""JIC::transferOutput() failed, waiting for job """	2433:21:67765:67812	655839	8	True				
ANR	655946	Statement	"""lease to expire or for a reconnect attempt\\n"""	2434:5:67819:67864	655839	9	True				
ANR	655947	Statement	)	2434:52:67866:67866	655839	10	True				
ANR	655948	ExpressionStatement		2434:53:67867:67867	655839	11	True				
ANR	655949	ReturnStatement	return false ;	2435:2:67871:67883	655839	12	True				
ANR	655950	Identifier	false		655839	0					
ANR	655951	ExpressionStatement	jic -> transferOutputMopUp ( )	2438:1:67890:67916	655839	3	True				
ANR	655952	CallExpression	jic -> transferOutputMopUp ( )		655839	0					
ANR	655953	Callee	jic -> transferOutputMopUp		655839	0					
ANR	655954	PtrMemberAccess	jic -> transferOutputMopUp		655839	0					
ANR	655955	Identifier	jic		655839	0					
ANR	655956	Identifier	transferOutputMopUp		655839	1					
ANR	655957	ArgumentList			655839	1					
ANR	655958	ReturnStatement	return cleanupJobs ( ) ;	2442:1:68035:68055	655839	4	True				
ANR	655959	CallExpression	cleanupJobs ( )		655839	0					
ANR	655960	Callee	cleanupJobs		655839	0					
ANR	655961	Identifier	cleanupJobs		655839	0					
ANR	655962	ArgumentList			655839	1					
ANR	655963	ReturnType	bool		655839	1					
ANR	655964	Identifier	CStarter :: transferOutput		655839	2					
ANR	655965	ParameterList			655839	3					
ANR	655966	CFGEntryNode	ENTRY		655839		True				
ANR	655967	CFGExitNode	EXIT		655839		True				
ANR	655968	Symbol	NULL		655839						
ANR	655969	Symbol	ad		655839						
ANR	655970	Symbol	jic		655839						
ANR	655971	Symbol	false		655839						
ANR	655972	Symbol	jic -> transferOutput		655839						
ANR	655973	Symbol	pid		655839						
ANR	655974	Symbol	& ad		655839						
ANR	655975	Symbol	* jic		655839						
ANR	655976	Symbol	ad . LookupInteger		655839						
ANR	655977	Symbol	transient_failure		655839						
ANR	655978	Symbol	cleanupJobs		655839						
ANR	655979	Symbol	job		655839						
ANR	655980	Symbol	m_reaped_job_list		655839						
ANR	655981	Symbol	m_reaped_job_list . Next		655839						
ANR	655982	Symbol	ATTR_JOB_PID		655839						
ANR	655983	Function	CStarter :: cleanupJobs	2446:0:68061:68950							
ANR	655984	FunctionDef	CStarter :: cleanupJobs ()		655983	0					
ANR	655985	CompoundStatement		2448:0:68096:68950	655983	0					
ANR	655986	IdentifierDeclStatement	UserProc * job ;	2452:1:68270:68283	655983	0	True				
ANR	655987	IdentifierDecl	* job		655983	0					
ANR	655988	IdentifierDeclType	UserProc *		655983	0					
ANR	655989	Identifier	job		655983	1					
ANR	655990	ExpressionStatement	m_reaped_job_list . Rewind ( )	2453:1:68286:68312	655983	1	True				
ANR	655991	CallExpression	m_reaped_job_list . Rewind ( )		655983	0					
ANR	655992	Callee	m_reaped_job_list . Rewind		655983	0					
ANR	655993	MemberAccess	m_reaped_job_list . Rewind		655983	0					
ANR	655994	Identifier	m_reaped_job_list		655983	0					
ANR	655995	Identifier	Rewind		655983	1					
ANR	655996	ArgumentList			655983	1					
ANR	655997	WhileStatement	while ( ( job = m_reaped_job_list . Next ( ) ) != NULL )		655983	2					
ANR	655998	Condition	( job = m_reaped_job_list . Next ( ) ) != NULL	2454:8:68322:68361	655983	0	True				
ANR	655999	EqualityExpression	( job = m_reaped_job_list . Next ( ) ) != NULL		655983	0		!=			
ANR	656000	AssignmentExpression	job = m_reaped_job_list . Next ( )		655983	0		=			
ANR	656001	Identifier	job		655983	0					
ANR	656002	CallExpression	m_reaped_job_list . Next ( )		655983	1					
ANR	656003	Callee	m_reaped_job_list . Next		655983	0					
ANR	656004	MemberAccess	m_reaped_job_list . Next		655983	0					
ANR	656005	Identifier	m_reaped_job_list		655983	0					
ANR	656006	Identifier	Next		655983	1					
ANR	656007	ArgumentList			655983	1					
ANR	656008	Identifier	NULL		655983	1					
ANR	656009	CompoundStatement		7:50:267:267	655983	1					
ANR	656010	IfStatement	if ( job -> JobExit ( ) )		655983	0					
ANR	656011	Condition	job -> JobExit ( )	2455:6:68372:68385	655983	0	True				
ANR	656012	CallExpression	job -> JobExit ( )		655983	0					
ANR	656013	Callee	job -> JobExit		655983	0					
ANR	656014	PtrMemberAccess	job -> JobExit		655983	0					
ANR	656015	Identifier	job		655983	0					
ANR	656016	Identifier	JobExit		655983	1					
ANR	656017	ArgumentList			655983	1					
ANR	656018	CompoundStatement		8:23:292:292	655983	1					
ANR	656019	ExpressionStatement	m_reaped_job_list . DeleteCurrent ( )	2456:3:68394:68427	655983	0	True				
ANR	656020	CallExpression	m_reaped_job_list . DeleteCurrent ( )		655983	0					
ANR	656021	Callee	m_reaped_job_list . DeleteCurrent		655983	0					
ANR	656022	MemberAccess	m_reaped_job_list . DeleteCurrent		655983	0					
ANR	656023	Identifier	m_reaped_job_list		655983	0					
ANR	656024	Identifier	DeleteCurrent		655983	1					
ANR	656025	ArgumentList			655983	1					
ANR	656026	Statement	delete	2457:3:68432:68437	655983	1	True				
ANR	656027	ExpressionStatement	job	2457:10:68439:68442	655983	2	True				
ANR	656028	Identifier	job		655983	0					
ANR	656029	ElseStatement	else		655983	0					
ANR	656030	CompoundStatement		11:9:356:356	655983	0					
ANR	656031	Statement	dprintf	2464:3:68727:68733	655983	0	True				
ANR	656032	Statement	(	2464:10:68734:68734	655983	1	True				
ANR	656033	Statement	D_ALWAYS	2464:12:68736:68743	655983	2	True				
ANR	656034	Statement	","	2464:20:68744:68744	655983	3	True				
ANR	656035	Statement	"""JobExit() failed, waiting for job """	2464:22:68746:68781	655983	4	True				
ANR	656036	Statement	"""lease to expire or for a reconnect attempt\\n"""	2465:6:68789:68834	655983	5	True				
ANR	656037	Statement	)	2465:53:68836:68836	655983	6	True				
ANR	656038	ExpressionStatement		2465:54:68837:68837	655983	7	True				
ANR	656039	ReturnStatement	return false ;	2466:3:68842:68854	655983	8	True				
ANR	656040	Identifier	false		655983	0					
ANR	656041	ExpressionStatement	jic -> allJobsGone ( )	2470:1:68916:68934	655983	3	True				
ANR	656042	CallExpression	jic -> allJobsGone ( )		655983	0					
ANR	656043	Callee	jic -> allJobsGone		655983	0					
ANR	656044	PtrMemberAccess	jic -> allJobsGone		655983	0					
ANR	656045	Identifier	jic		655983	0					
ANR	656046	Identifier	allJobsGone		655983	1					
ANR	656047	ArgumentList			655983	1					
ANR	656048	ReturnStatement	return true ;	2471:1:68937:68948	655983	4	True				
ANR	656049	Identifier	true		655983	0					
ANR	656050	ReturnType	bool		655983	1					
ANR	656051	Identifier	CStarter :: cleanupJobs		655983	2					
ANR	656052	ParameterList			655983	3					
ANR	656053	CFGEntryNode	ENTRY		655983		True				
ANR	656054	CFGExitNode	EXIT		655983		True				
ANR	656055	Symbol	NULL		655983						
ANR	656056	Symbol	job -> JobExit		655983						
ANR	656057	Symbol	jic		655983						
ANR	656058	Symbol	* job		655983						
ANR	656059	Symbol	false		655983						
ANR	656060	Symbol	true		655983						
ANR	656061	Symbol	job		655983						
ANR	656062	Symbol	m_reaped_job_list		655983						
ANR	656063	Symbol	m_reaped_job_list . Next		655983						
ANR	656064	Function	CStarter :: publishUpdateAd	2475:0:68954:69045							
ANR	656065	FunctionDef	CStarter :: publishUpdateAd (ClassAd * ad)		656064	0					
ANR	656066	CompoundStatement		2477:0:69000:69045	656064	0					
ANR	656067	ReturnStatement	"return publishJobInfoAd ( & m_job_list , ad ) ;"	2478:1:69003:69043	656064	0	True				
ANR	656068	CallExpression	"publishJobInfoAd ( & m_job_list , ad )"		656064	0					
ANR	656069	Callee	publishJobInfoAd		656064	0					
ANR	656070	Identifier	publishJobInfoAd		656064	0					
ANR	656071	ArgumentList	& m_job_list		656064	1					
ANR	656072	Argument	& m_job_list		656064	0					
ANR	656073	UnaryOperationExpression	& m_job_list		656064	0					
ANR	656074	UnaryOperator	&		656064	0					
ANR	656075	Identifier	m_job_list		656064	1					
ANR	656076	Argument	ad		656064	1					
ANR	656077	Identifier	ad		656064	0					
ANR	656078	ReturnType	bool		656064	1					
ANR	656079	Identifier	CStarter :: publishUpdateAd		656064	2					
ANR	656080	ParameterList	ClassAd * ad		656064	3					
ANR	656081	Parameter	ClassAd * ad	2476:27:68986:68996	656064	0	True				
ANR	656082	ParameterType	ClassAd *		656064	0					
ANR	656083	Identifier	ad		656064	1					
ANR	656084	CFGEntryNode	ENTRY		656064		True				
ANR	656085	CFGExitNode	EXIT		656064		True				
ANR	656086	Symbol	ad		656064						
ANR	656087	Symbol	& m_job_list		656064						
ANR	656088	Symbol	publishJobInfoAd		656064						
ANR	656089	Function	CStarter :: publishJobExitAd	2482:0:69049:69148							
ANR	656090	FunctionDef	CStarter :: publishJobExitAd (ClassAd * ad)		656089	0					
ANR	656091	CompoundStatement		2484:0:69096:69148	656089	0					
ANR	656092	ReturnStatement	"return publishJobInfoAd ( & m_reaped_job_list , ad ) ;"	2485:1:69099:69146	656089	0	True				
ANR	656093	CallExpression	"publishJobInfoAd ( & m_reaped_job_list , ad )"		656089	0					
ANR	656094	Callee	publishJobInfoAd		656089	0					
ANR	656095	Identifier	publishJobInfoAd		656089	0					
ANR	656096	ArgumentList	& m_reaped_job_list		656089	1					
ANR	656097	Argument	& m_reaped_job_list		656089	0					
ANR	656098	UnaryOperationExpression	& m_reaped_job_list		656089	0					
ANR	656099	UnaryOperator	&		656089	0					
ANR	656100	Identifier	m_reaped_job_list		656089	1					
ANR	656101	Argument	ad		656089	1					
ANR	656102	Identifier	ad		656089	0					
ANR	656103	ReturnType	bool		656089	1					
ANR	656104	Identifier	CStarter :: publishJobExitAd		656089	2					
ANR	656105	ParameterList	ClassAd * ad		656089	3					
ANR	656106	Parameter	ClassAd * ad	2483:28:69082:69092	656089	0	True				
ANR	656107	ParameterType	ClassAd *		656089	0					
ANR	656108	Identifier	ad		656089	1					
ANR	656109	CFGEntryNode	ENTRY		656089		True				
ANR	656110	CFGExitNode	EXIT		656089		True				
ANR	656111	Symbol	ad		656089						
ANR	656112	Symbol	& m_reaped_job_list		656089						
ANR	656113	Symbol	publishJobInfoAd		656089						
ANR	656114	Function	CStarter :: publishJobInfoAd	2489:0:69152:69949							
ANR	656115	FunctionDef	"CStarter :: publishJobInfoAd (List < UserProc > * proc_list , ClassAd * ad)"		656114	0					
ANR	656116	CompoundStatement		2491:0:69224:69949	656114	0					
ANR	656117	IdentifierDeclStatement	bool found_one = false ;	2496:1:69476:69498	656114	0	True				
ANR	656118	IdentifierDecl	found_one = false		656114	0					
ANR	656119	IdentifierDeclType	bool		656114	0					
ANR	656120	Identifier	found_one		656114	1					
ANR	656121	AssignmentExpression	found_one = false		656114	2		=			
ANR	656122	Identifier	false		656114	0					
ANR	656123	Identifier	false		656114	1					
ANR	656124	IfStatement	if ( pre_script && pre_script -> PublishUpdateAd ( ad ) )		656114	1					
ANR	656125	Condition	pre_script && pre_script -> PublishUpdateAd ( ad )	2497:5:69505:69549	656114	0	True				
ANR	656126	AndExpression	pre_script && pre_script -> PublishUpdateAd ( ad )		656114	0		&&			
ANR	656127	Identifier	pre_script		656114	0					
ANR	656128	CallExpression	pre_script -> PublishUpdateAd ( ad )		656114	1					
ANR	656129	Callee	pre_script -> PublishUpdateAd		656114	0					
ANR	656130	PtrMemberAccess	pre_script -> PublishUpdateAd		656114	0					
ANR	656131	Identifier	pre_script		656114	0					
ANR	656132	Identifier	PublishUpdateAd		656114	1					
ANR	656133	ArgumentList	ad		656114	1					
ANR	656134	Argument	ad		656114	0					
ANR	656135	Identifier	ad		656114	0					
ANR	656136	CompoundStatement		7:53:328:328	656114	1					
ANR	656137	ExpressionStatement	found_one = true	2498:2:69557:69573	656114	0	True				
ANR	656138	AssignmentExpression	found_one = true		656114	0		=			
ANR	656139	Identifier	found_one		656114	0					
ANR	656140	Identifier	true		656114	1					
ANR	656141	IfStatement	if ( m_deferred_job_update )		656114	2					
ANR	656142	Condition	m_deferred_job_update	2502:5:69607:69627	656114	0	True				
ANR	656143	Identifier	m_deferred_job_update		656114	0					
ANR	656144	CompoundStatement		14:2:410:422	656114	1					
ANR	656145	IdentifierDeclStatement	MyString buf ;	2504:2:69635:69647	656114	0	True				
ANR	656146	IdentifierDecl	buf		656114	0					
ANR	656147	IdentifierDeclType	MyString		656114	0					
ANR	656148	Identifier	buf		656114	1					
ANR	656149	ExpressionStatement	"buf . sprintf ( ""%s=\\""Exited\\"""" , ATTR_JOB_STATE )"	2505:2:69651:69697	656114	1	True				
ANR	656150	CallExpression	"buf . sprintf ( ""%s=\\""Exited\\"""" , ATTR_JOB_STATE )"		656114	0					
ANR	656151	Callee	buf . sprintf		656114	0					
ANR	656152	MemberAccess	buf . sprintf		656114	0					
ANR	656153	Identifier	buf		656114	0					
ANR	656154	Identifier	sprintf		656114	1					
ANR	656155	ArgumentList	"""%s=\\""Exited\\"""""		656114	1					
ANR	656156	Argument	"""%s=\\""Exited\\"""""		656114	0					
ANR	656157	PrimaryExpression	"""%s=\\""Exited\\"""""		656114	0					
ANR	656158	Argument	ATTR_JOB_STATE		656114	1					
ANR	656159	Identifier	ATTR_JOB_STATE		656114	0					
ANR	656160	IdentifierDeclStatement	UserProc * job ;	2508:1:69705:69718	656114	3	True				
ANR	656161	IdentifierDecl	* job		656114	0					
ANR	656162	IdentifierDeclType	UserProc *		656114	0					
ANR	656163	Identifier	job		656114	1					
ANR	656164	ExpressionStatement	proc_list -> Rewind ( )	2509:1:69721:69740	656114	4	True				
ANR	656165	CallExpression	proc_list -> Rewind ( )		656114	0					
ANR	656166	Callee	proc_list -> Rewind		656114	0					
ANR	656167	PtrMemberAccess	proc_list -> Rewind		656114	0					
ANR	656168	Identifier	proc_list		656114	0					
ANR	656169	Identifier	Rewind		656114	1					
ANR	656170	ArgumentList			656114	1					
ANR	656171	WhileStatement	while ( ( job = proc_list -> Next ( ) ) != NULL )		656114	5					
ANR	656172	Condition	( job = proc_list -> Next ( ) ) != NULL	2510:8:69750:69782	656114	0	True				
ANR	656173	EqualityExpression	( job = proc_list -> Next ( ) ) != NULL		656114	0		!=			
ANR	656174	AssignmentExpression	job = proc_list -> Next ( )		656114	0		=			
ANR	656175	Identifier	job		656114	0					
ANR	656176	CallExpression	proc_list -> Next ( )		656114	1					
ANR	656177	Callee	proc_list -> Next		656114	0					
ANR	656178	PtrMemberAccess	proc_list -> Next		656114	0					
ANR	656179	Identifier	proc_list		656114	0					
ANR	656180	Identifier	Next		656114	1					
ANR	656181	ArgumentList			656114	1					
ANR	656182	Identifier	NULL		656114	1					
ANR	656183	CompoundStatement		20:43:560:560	656114	1					
ANR	656184	IfStatement	if ( job -> PublishUpdateAd ( ad ) )		656114	0					
ANR	656185	Condition	job -> PublishUpdateAd ( ad )	2511:6:69793:69816	656114	0	True				
ANR	656186	CallExpression	job -> PublishUpdateAd ( ad )		656114	0					
ANR	656187	Callee	job -> PublishUpdateAd		656114	0					
ANR	656188	PtrMemberAccess	job -> PublishUpdateAd		656114	0					
ANR	656189	Identifier	job		656114	0					
ANR	656190	Identifier	PublishUpdateAd		656114	1					
ANR	656191	ArgumentList	ad		656114	1					
ANR	656192	Argument	ad		656114	0					
ANR	656193	Identifier	ad		656114	0					
ANR	656194	CompoundStatement		21:33:595:595	656114	1					
ANR	656195	ExpressionStatement	found_one = true	2512:3:69825:69841	656114	0	True				
ANR	656196	AssignmentExpression	found_one = true		656114	0		=			
ANR	656197	Identifier	found_one		656114	0					
ANR	656198	Identifier	true		656114	1					
ANR	656199	IfStatement	if ( post_script && post_script -> PublishUpdateAd ( ad ) )		656114	6					
ANR	656200	Condition	post_script && post_script -> PublishUpdateAd ( ad )	2515:5:69855:69901	656114	0	True				
ANR	656201	AndExpression	post_script && post_script -> PublishUpdateAd ( ad )		656114	0		&&			
ANR	656202	Identifier	post_script		656114	0					
ANR	656203	CallExpression	post_script -> PublishUpdateAd ( ad )		656114	1					
ANR	656204	Callee	post_script -> PublishUpdateAd		656114	0					
ANR	656205	PtrMemberAccess	post_script -> PublishUpdateAd		656114	0					
ANR	656206	Identifier	post_script		656114	0					
ANR	656207	Identifier	PublishUpdateAd		656114	1					
ANR	656208	ArgumentList	ad		656114	1					
ANR	656209	Argument	ad		656114	0					
ANR	656210	Identifier	ad		656114	0					
ANR	656211	CompoundStatement		25:55:680:680	656114	1					
ANR	656212	ExpressionStatement	found_one = true	2516:2:69909:69925	656114	0	True				
ANR	656213	AssignmentExpression	found_one = true		656114	0		=			
ANR	656214	Identifier	found_one		656114	0					
ANR	656215	Identifier	true		656114	1					
ANR	656216	ReturnStatement	return found_one ;	2518:1:69931:69947	656114	7	True				
ANR	656217	Identifier	found_one		656114	0					
ANR	656218	ReturnType	bool		656114	1					
ANR	656219	Identifier	CStarter :: publishJobInfoAd		656114	2					
ANR	656220	ParameterList	"List < UserProc > * proc_list , ClassAd * ad"		656114	3					
ANR	656221	Parameter	List < UserProc > * proc_list	2490:27:69184:69208	656114	0	True				
ANR	656222	ParameterType	List < UserProc > *		656114	0					
ANR	656223	Identifier	proc_list		656114	1					
ANR	656224	Parameter	ClassAd * ad	2490:54:69211:69221	656114	1	True				
ANR	656225	ParameterType	ClassAd *		656114	0					
ANR	656226	Identifier	ad		656114	1					
ANR	656227	CFGEntryNode	ENTRY		656114		True				
ANR	656228	CFGExitNode	EXIT		656114		True				
ANR	656229	Symbol	proc_list		656114						
ANR	656230	Symbol	pre_script		656114						
ANR	656231	Symbol	* post_script		656114						
ANR	656232	Symbol	ad		656114						
ANR	656233	Symbol	NULL		656114						
ANR	656234	Symbol	* job		656114						
ANR	656235	Symbol	false		656114						
ANR	656236	Symbol	post_script		656114						
ANR	656237	Symbol	job -> PublishUpdateAd		656114						
ANR	656238	Symbol	found_one		656114						
ANR	656239	Symbol	* proc_list		656114						
ANR	656240	Symbol	pre_script -> PublishUpdateAd		656114						
ANR	656241	Symbol	ATTR_JOB_STATE		656114						
ANR	656242	Symbol	buf		656114						
ANR	656243	Symbol	m_deferred_job_update		656114						
ANR	656244	Symbol	proc_list -> Next		656114						
ANR	656245	Symbol	post_script -> PublishUpdateAd		656114						
ANR	656246	Symbol	true		656114						
ANR	656247	Symbol	job		656114						
ANR	656248	Symbol	* pre_script		656114						
ANR	656249	Function	CStarter :: publishPreScriptUpdateAd	2522:0:69953:70098							
ANR	656250	FunctionDef	CStarter :: publishPreScriptUpdateAd (ClassAd * ad)		656249	0					
ANR	656251	CompoundStatement		2524:0:70008:70098	656249	0					
ANR	656252	IfStatement	if ( pre_script && pre_script -> PublishUpdateAd ( ad ) )		656249	0					
ANR	656253	Condition	pre_script && pre_script -> PublishUpdateAd ( ad )	2525:5:70015:70059	656249	0	True				
ANR	656254	AndExpression	pre_script && pre_script -> PublishUpdateAd ( ad )		656249	0		&&			
ANR	656255	Identifier	pre_script		656249	0					
ANR	656256	CallExpression	pre_script -> PublishUpdateAd ( ad )		656249	1					
ANR	656257	Callee	pre_script -> PublishUpdateAd		656249	0					
ANR	656258	PtrMemberAccess	pre_script -> PublishUpdateAd		656249	0					
ANR	656259	Identifier	pre_script		656249	0					
ANR	656260	Identifier	PublishUpdateAd		656249	1					
ANR	656261	ArgumentList	ad		656249	1					
ANR	656262	Argument	ad		656249	0					
ANR	656263	Identifier	ad		656249	0					
ANR	656264	CompoundStatement		2:53:54:54	656249	1					
ANR	656265	ReturnStatement	return true ;	2526:2:70067:70078	656249	0	True				
ANR	656266	Identifier	true		656249	0					
ANR	656267	ReturnStatement	return false ;	2528:1:70084:70096	656249	1	True				
ANR	656268	Identifier	false		656249	0					
ANR	656269	ReturnType	bool		656249	1					
ANR	656270	Identifier	CStarter :: publishPreScriptUpdateAd		656249	2					
ANR	656271	ParameterList	ClassAd * ad		656249	3					
ANR	656272	Parameter	ClassAd * ad	2523:36:69994:70004	656249	0	True				
ANR	656273	ParameterType	ClassAd *		656249	0					
ANR	656274	Identifier	ad		656249	1					
ANR	656275	CFGEntryNode	ENTRY		656249		True				
ANR	656276	CFGExitNode	EXIT		656249		True				
ANR	656277	Symbol	pre_script		656249						
ANR	656278	Symbol	ad		656249						
ANR	656279	Symbol	true		656249						
ANR	656280	Symbol	false		656249						
ANR	656281	Symbol	pre_script -> PublishUpdateAd		656249						
ANR	656282	Symbol	* pre_script		656249						
ANR	656283	Function	CStarter :: publishPostScriptUpdateAd	2532:0:70102:70250							
ANR	656284	FunctionDef	CStarter :: publishPostScriptUpdateAd (ClassAd * ad)		656283	0					
ANR	656285	CompoundStatement		2534:0:70158:70250	656283	0					
ANR	656286	IfStatement	if ( post_script && post_script -> PublishUpdateAd ( ad ) )		656283	0					
ANR	656287	Condition	post_script && post_script -> PublishUpdateAd ( ad )	2535:5:70165:70211	656283	0	True				
ANR	656288	AndExpression	post_script && post_script -> PublishUpdateAd ( ad )		656283	0		&&			
ANR	656289	Identifier	post_script		656283	0					
ANR	656290	CallExpression	post_script -> PublishUpdateAd ( ad )		656283	1					
ANR	656291	Callee	post_script -> PublishUpdateAd		656283	0					
ANR	656292	PtrMemberAccess	post_script -> PublishUpdateAd		656283	0					
ANR	656293	Identifier	post_script		656283	0					
ANR	656294	Identifier	PublishUpdateAd		656283	1					
ANR	656295	ArgumentList	ad		656283	1					
ANR	656296	Argument	ad		656283	0					
ANR	656297	Identifier	ad		656283	0					
ANR	656298	CompoundStatement		2:55:56:56	656283	1					
ANR	656299	ReturnStatement	return true ;	2536:2:70219:70230	656283	0	True				
ANR	656300	Identifier	true		656283	0					
ANR	656301	ReturnStatement	return false ;	2538:1:70236:70248	656283	1	True				
ANR	656302	Identifier	false		656283	0					
ANR	656303	ReturnType	bool		656283	1					
ANR	656304	Identifier	CStarter :: publishPostScriptUpdateAd		656283	2					
ANR	656305	ParameterList	ClassAd * ad		656283	3					
ANR	656306	Parameter	ClassAd * ad	2533:37:70144:70154	656283	0	True				
ANR	656307	ParameterType	ClassAd *		656283	0					
ANR	656308	Identifier	ad		656283	1					
ANR	656309	CFGEntryNode	ENTRY		656283		True				
ANR	656310	CFGExitNode	EXIT		656283		True				
ANR	656311	Symbol	* post_script		656283						
ANR	656312	Symbol	ad		656283						
ANR	656313	Symbol	post_script -> PublishUpdateAd		656283						
ANR	656314	Symbol	post_script		656283						
ANR	656315	Symbol	true		656283						
ANR	656316	Symbol	false		656283						
ANR	656317	Function	CStarter :: GetJobEnv	2541:0:70253:70991							
ANR	656318	FunctionDef	"CStarter :: GetJobEnv (ClassAd * jobad , Env * job_env , MyString * env_errors)"		656317	0					
ANR	656319	CompoundStatement		2543:0:70332:70991	656317	0					
ANR	656320	IdentifierDeclStatement	"char * env_str = param ( ""STARTER_JOB_ENVIRONMENT"" ) ;"	2544:1:70335:70385	656317	0	True				
ANR	656321	IdentifierDecl	"* env_str = param ( ""STARTER_JOB_ENVIRONMENT"" )"		656317	0					
ANR	656322	IdentifierDeclType	char *		656317	0					
ANR	656323	Identifier	env_str		656317	1					
ANR	656324	AssignmentExpression	"* env_str = param ( ""STARTER_JOB_ENVIRONMENT"" )"		656317	2		=			
ANR	656325	Identifier	env_str		656317	0					
ANR	656326	CallExpression	"param ( ""STARTER_JOB_ENVIRONMENT"" )"		656317	1					
ANR	656327	Callee	param		656317	0					
ANR	656328	Identifier	param		656317	0					
ANR	656329	ArgumentList	"""STARTER_JOB_ENVIRONMENT"""		656317	1					
ANR	656330	Argument	"""STARTER_JOB_ENVIRONMENT"""		656317	0					
ANR	656331	PrimaryExpression	"""STARTER_JOB_ENVIRONMENT"""		656317	0					
ANR	656332	ExpressionStatement	ASSERT ( jobad )	2546:1:70389:70404	656317	1	True				
ANR	656333	CallExpression	ASSERT ( jobad )		656317	0					
ANR	656334	Callee	ASSERT		656317	0					
ANR	656335	Identifier	ASSERT		656317	0					
ANR	656336	ArgumentList	jobad		656317	1					
ANR	656337	Argument	jobad		656317	0					
ANR	656338	Identifier	jobad		656317	0					
ANR	656339	ExpressionStatement	ASSERT ( job_env )	2547:1:70407:70424	656317	2	True				
ANR	656340	CallExpression	ASSERT ( job_env )		656317	0					
ANR	656341	Callee	ASSERT		656317	0					
ANR	656342	Identifier	ASSERT		656317	0					
ANR	656343	ArgumentList	job_env		656317	1					
ANR	656344	Argument	job_env		656317	0					
ANR	656345	Identifier	job_env		656317	0					
ANR	656346	IfStatement	"if ( ! job_env -> MergeFromV1RawOrV2Quoted ( env_str , env_errors ) )"		656317	3					
ANR	656347	Condition	"! job_env -> MergeFromV1RawOrV2Quoted ( env_str , env_errors )"	2548:5:70431:70484	656317	0	True				
ANR	656348	UnaryOperationExpression	"! job_env -> MergeFromV1RawOrV2Quoted ( env_str , env_errors )"		656317	0					
ANR	656349	UnaryOperator	!		656317	0					
ANR	656350	CallExpression	"job_env -> MergeFromV1RawOrV2Quoted ( env_str , env_errors )"		656317	1					
ANR	656351	Callee	job_env -> MergeFromV1RawOrV2Quoted		656317	0					
ANR	656352	PtrMemberAccess	job_env -> MergeFromV1RawOrV2Quoted		656317	0					
ANR	656353	Identifier	job_env		656317	0					
ANR	656354	Identifier	MergeFromV1RawOrV2Quoted		656317	1					
ANR	656355	ArgumentList	env_str		656317	1					
ANR	656356	Argument	env_str		656317	0					
ANR	656357	Identifier	env_str		656317	0					
ANR	656358	Argument	env_errors		656317	1					
ANR	656359	Identifier	env_errors		656317	0					
ANR	656360	CompoundStatement		6:62:155:155	656317	1					
ANR	656361	IfStatement	if ( env_errors )		656317	0					
ANR	656362	Condition	env_errors	2549:6:70496:70505	656317	0	True				
ANR	656363	Identifier	env_errors		656317	0					
ANR	656364	CompoundStatement		7:19:176:176	656317	1					
ANR	656365	ExpressionStatement	"env_errors -> sprintf_cat ( "" The full value for STARTER_JOB_ENVIRONMENT: %s\\n"" , env_str )"	2550:3:70514:70603	656317	0	True				
ANR	656366	CallExpression	"env_errors -> sprintf_cat ( "" The full value for STARTER_JOB_ENVIRONMENT: %s\\n"" , env_str )"		656317	0					
ANR	656367	Callee	env_errors -> sprintf_cat		656317	0					
ANR	656368	PtrMemberAccess	env_errors -> sprintf_cat		656317	0					
ANR	656369	Identifier	env_errors		656317	0					
ANR	656370	Identifier	sprintf_cat		656317	1					
ANR	656371	ArgumentList	""" The full value for STARTER_JOB_ENVIRONMENT: %s\\n"""		656317	1					
ANR	656372	Argument	""" The full value for STARTER_JOB_ENVIRONMENT: %s\\n"""		656317	0					
ANR	656373	PrimaryExpression	""" The full value for STARTER_JOB_ENVIRONMENT: %s\\n"""		656317	0					
ANR	656374	Argument	env_str		656317	1					
ANR	656375	Identifier	env_str		656317	0					
ANR	656376	ExpressionStatement	free ( env_str )	2553:2:70611:70624	656317	1	True				
ANR	656377	CallExpression	free ( env_str )		656317	0					
ANR	656378	Callee	free		656317	0					
ANR	656379	Identifier	free		656317	0					
ANR	656380	ArgumentList	env_str		656317	1					
ANR	656381	Argument	env_str		656317	0					
ANR	656382	Identifier	env_str		656317	0					
ANR	656383	ReturnStatement	return false ;	2554:2:70628:70640	656317	2	True				
ANR	656384	Identifier	false		656317	0					
ANR	656385	ExpressionStatement	free ( env_str )	2556:1:70646:70659	656317	4	True				
ANR	656386	CallExpression	free ( env_str )		656317	0					
ANR	656387	Callee	free		656317	0					
ANR	656388	Identifier	free		656317	0					
ANR	656389	ArgumentList	env_str		656317	1					
ANR	656390	Argument	env_str		656317	0					
ANR	656391	Identifier	env_str		656317	0					
ANR	656392	IfStatement	"if ( ! job_env -> MergeFrom ( jobad , env_errors ) )"		656317	5					
ANR	656393	Condition	"! job_env -> MergeFrom ( jobad , env_errors )"	2558:4:70666:70702	656317	0	True				
ANR	656394	UnaryOperationExpression	"! job_env -> MergeFrom ( jobad , env_errors )"		656317	0					
ANR	656395	UnaryOperator	!		656317	0					
ANR	656396	CallExpression	"job_env -> MergeFrom ( jobad , env_errors )"		656317	1					
ANR	656397	Callee	job_env -> MergeFrom		656317	0					
ANR	656398	PtrMemberAccess	job_env -> MergeFrom		656317	0					
ANR	656399	Identifier	job_env		656317	0					
ANR	656400	Identifier	MergeFrom		656317	1					
ANR	656401	ArgumentList	jobad		656317	1					
ANR	656402	Argument	jobad		656317	0					
ANR	656403	Identifier	jobad		656317	0					
ANR	656404	Argument	env_errors		656317	1					
ANR	656405	Identifier	env_errors		656317	0					
ANR	656406	CompoundStatement		16:43:372:372	656317	1					
ANR	656407	IfStatement	if ( env_errors )		656317	0					
ANR	656408	Condition	env_errors	2559:6:70713:70722	656317	0	True				
ANR	656409	Identifier	env_errors		656317	0					
ANR	656410	CompoundStatement		17:19:393:393	656317	1					
ANR	656411	Statement	env_errors	2560:3:70731:70740	656317	0	True				
ANR	656412	Statement	->	2560:13:70741:70742	656317	1	True				
ANR	656413	Statement	sprintf_cat	2560:15:70743:70753	656317	2	True				
ANR	656414	Statement	(	2560:26:70754:70754	656317	3	True				
ANR	656415	Statement	""" (This error was from the environment string in the job """	2561:4:70760:70817	656317	4	True				
ANR	656416	Statement	"""ClassAd.)"""	2562:4:70823:70833	656317	5	True				
ANR	656417	Statement	)	2562:15:70834:70834	656317	6	True				
ANR	656418	ExpressionStatement		2562:16:70835:70835	656317	7	True				
ANR	656419	ReturnStatement	return false ;	2564:2:70843:70855	656317	1	True				
ANR	656420	Identifier	false		656317	0					
ANR	656421	ExpressionStatement	PublishToEnv ( job_env )	2569:1:70952:70975	656317	6	True				
ANR	656422	CallExpression	PublishToEnv ( job_env )		656317	0					
ANR	656423	Callee	PublishToEnv		656317	0					
ANR	656424	Identifier	PublishToEnv		656317	0					
ANR	656425	ArgumentList	job_env		656317	1					
ANR	656426	Argument	job_env		656317	0					
ANR	656427	Identifier	job_env		656317	0					
ANR	656428	ReturnStatement	return true ;	2570:1:70978:70989	656317	7	True				
ANR	656429	Identifier	true		656317	0					
ANR	656430	ReturnType	bool		656317	1					
ANR	656431	Identifier	CStarter :: GetJobEnv		656317	2					
ANR	656432	ParameterList	"ClassAd * jobad , Env * job_env , MyString * env_errors"		656317	3					
ANR	656433	Parameter	ClassAd * jobad	2542:21:70279:70292	656317	0	True				
ANR	656434	ParameterType	ClassAd *		656317	0					
ANR	656435	Identifier	jobad		656317	1					
ANR	656436	Parameter	Env * job_env	2542:37:70295:70306	656317	1	True				
ANR	656437	ParameterType	Env *		656317	0					
ANR	656438	Identifier	job_env		656317	1					
ANR	656439	Parameter	MyString * env_errors	2542:51:70309:70328	656317	2	True				
ANR	656440	ParameterType	MyString *		656317	0					
ANR	656441	Identifier	env_errors		656317	1					
ANR	656442	CFGEntryNode	ENTRY		656317		True				
ANR	656443	CFGExitNode	EXIT		656317		True				
ANR	656444	Symbol	param		656317						
ANR	656445	Symbol	job_env -> MergeFromV1RawOrV2Quoted		656317						
ANR	656446	Symbol	false		656317						
ANR	656447	Symbol	true		656317						
ANR	656448	Symbol	jobad		656317						
ANR	656449	Symbol	env_str		656317						
ANR	656450	Symbol	* job_env		656317						
ANR	656451	Symbol	job_env		656317						
ANR	656452	Symbol	env_errors		656317						
ANR	656453	Symbol	job_env -> MergeFrom		656317						
ANR	656454	Function	CStarter :: PublishToEnv	2573:0:70995:73946							
ANR	656455	FunctionDef	CStarter :: PublishToEnv (Env * proc_env)		656454	0					
ANR	656456	CompoundStatement		2575:0:71040:73946	656454	0					
ANR	656457	ExpressionStatement	ASSERT ( proc_env )	2576:1:71043:71059	656454	0	True				
ANR	656458	CallExpression	ASSERT ( proc_env )		656454	0					
ANR	656459	Callee	ASSERT		656454	0					
ANR	656460	Identifier	ASSERT		656454	0					
ANR	656461	ArgumentList	proc_env		656454	1					
ANR	656462	Argument	proc_env		656454	0					
ANR	656463	Identifier	proc_env		656454	0					
ANR	656464	IfStatement	if ( pre_script )		656454	1					
ANR	656465	Condition	pre_script	2577:5:71066:71075	656454	0	True				
ANR	656466	Identifier	pre_script		656454	0					
ANR	656467	CompoundStatement		3:18:38:38	656454	1					
ANR	656468	ExpressionStatement	pre_script -> PublishToEnv ( proc_env )	2578:2:71083:71119	656454	0	True				
ANR	656469	CallExpression	pre_script -> PublishToEnv ( proc_env )		656454	0					
ANR	656470	Callee	pre_script -> PublishToEnv		656454	0					
ANR	656471	PtrMemberAccess	pre_script -> PublishToEnv		656454	0					
ANR	656472	Identifier	pre_script		656454	0					
ANR	656473	Identifier	PublishToEnv		656454	1					
ANR	656474	ArgumentList	proc_env		656454	1					
ANR	656475	Argument	proc_env		656454	0					
ANR	656476	Identifier	proc_env		656454	0					
ANR	656477	ExpressionStatement	"proc_env -> SetEnv ( ""_CONDOR_JOB_IWD"" , jic -> jobRemoteIWD ( ) )"	2585:1:71367:71422	656454	2	True				
ANR	656478	CallExpression	"proc_env -> SetEnv ( ""_CONDOR_JOB_IWD"" , jic -> jobRemoteIWD ( ) )"		656454	0					
ANR	656479	Callee	proc_env -> SetEnv		656454	0					
ANR	656480	PtrMemberAccess	proc_env -> SetEnv		656454	0					
ANR	656481	Identifier	proc_env		656454	0					
ANR	656482	Identifier	SetEnv		656454	1					
ANR	656483	ArgumentList	"""_CONDOR_JOB_IWD"""		656454	1					
ANR	656484	Argument	"""_CONDOR_JOB_IWD"""		656454	0					
ANR	656485	PrimaryExpression	"""_CONDOR_JOB_IWD"""		656454	0					
ANR	656486	Argument	jic -> jobRemoteIWD ( )		656454	1					
ANR	656487	CallExpression	jic -> jobRemoteIWD ( )		656454	0					
ANR	656488	Callee	jic -> jobRemoteIWD		656454	0					
ANR	656489	PtrMemberAccess	jic -> jobRemoteIWD		656454	0					
ANR	656490	Identifier	jic		656454	0					
ANR	656491	Identifier	jobRemoteIWD		656454	1					
ANR	656492	ArgumentList			656454	1					
ANR	656493	IdentifierDeclStatement	MyString job_pids ;	2587:1:71426:71443	656454	3	True				
ANR	656494	IdentifierDecl	job_pids		656454	0					
ANR	656495	IdentifierDeclType	MyString		656454	0					
ANR	656496	Identifier	job_pids		656454	1					
ANR	656497	IdentifierDeclStatement	UserProc * uproc ;	2588:1:71446:71461	656454	4	True				
ANR	656498	IdentifierDecl	* uproc		656454	0					
ANR	656499	IdentifierDeclType	UserProc *		656454	0					
ANR	656500	Identifier	uproc		656454	1					
ANR	656501	ExpressionStatement	m_job_list . Rewind ( )	2589:1:71464:71483	656454	5	True				
ANR	656502	CallExpression	m_job_list . Rewind ( )		656454	0					
ANR	656503	Callee	m_job_list . Rewind		656454	0					
ANR	656504	MemberAccess	m_job_list . Rewind		656454	0					
ANR	656505	Identifier	m_job_list		656454	0					
ANR	656506	Identifier	Rewind		656454	1					
ANR	656507	ArgumentList			656454	1					
ANR	656508	WhileStatement	while ( ( uproc = m_job_list . Next ( ) ) != NULL )		656454	6					
ANR	656509	Condition	( uproc = m_job_list . Next ( ) ) != NULL	2590:8:71493:71527	656454	0	True				
ANR	656510	EqualityExpression	( uproc = m_job_list . Next ( ) ) != NULL		656454	0		!=			
ANR	656511	AssignmentExpression	uproc = m_job_list . Next ( )		656454	0		=			
ANR	656512	Identifier	uproc		656454	0					
ANR	656513	CallExpression	m_job_list . Next ( )		656454	1					
ANR	656514	Callee	m_job_list . Next		656454	0					
ANR	656515	MemberAccess	m_job_list . Next		656454	0					
ANR	656516	Identifier	m_job_list		656454	0					
ANR	656517	Identifier	Next		656454	1					
ANR	656518	ArgumentList			656454	1					
ANR	656519	Identifier	NULL		656454	1					
ANR	656520	CompoundStatement		16:45:489:489	656454	1					
ANR	656521	ExpressionStatement	uproc -> PublishToEnv ( proc_env )	2591:2:71534:71565	656454	0	True				
ANR	656522	CallExpression	uproc -> PublishToEnv ( proc_env )		656454	0					
ANR	656523	Callee	uproc -> PublishToEnv		656454	0					
ANR	656524	PtrMemberAccess	uproc -> PublishToEnv		656454	0					
ANR	656525	Identifier	uproc		656454	0					
ANR	656526	Identifier	PublishToEnv		656454	1					
ANR	656527	ArgumentList	proc_env		656454	1					
ANR	656528	Argument	proc_env		656454	0					
ANR	656529	Identifier	proc_env		656454	0					
ANR	656530	IfStatement	if ( ! job_pids . IsEmpty ( ) )		656454	1					
ANR	656531	Condition	! job_pids . IsEmpty ( )	2593:6:71574:71593	656454	0	True				
ANR	656532	UnaryOperationExpression	! job_pids . IsEmpty ( )		656454	0					
ANR	656533	UnaryOperator	!		656454	0					
ANR	656534	CallExpression	job_pids . IsEmpty ( )		656454	1					
ANR	656535	Callee	job_pids . IsEmpty		656454	0					
ANR	656536	MemberAccess	job_pids . IsEmpty		656454	0					
ANR	656537	Identifier	job_pids		656454	0					
ANR	656538	Identifier	IsEmpty		656454	1					
ANR	656539	ArgumentList			656454	1					
ANR	656540	CompoundStatement		19:29:556:556	656454	1					
ANR	656541	ExpressionStatement	"job_pids += "" """	2594:3:71602:71617	656454	0	True				
ANR	656542	AssignmentExpression	"job_pids += "" """		656454	0		+=			
ANR	656543	Identifier	job_pids		656454	0					
ANR	656544	PrimaryExpression	""" """		656454	1					
ANR	656545	ExpressionStatement	"job_pids . sprintf_cat ( ""%d"" , uproc -> GetJobPid ( ) )"	2596:2:71625:71670	656454	2	True				
ANR	656546	CallExpression	"job_pids . sprintf_cat ( ""%d"" , uproc -> GetJobPid ( ) )"		656454	0					
ANR	656547	Callee	job_pids . sprintf_cat		656454	0					
ANR	656548	MemberAccess	job_pids . sprintf_cat		656454	0					
ANR	656549	Identifier	job_pids		656454	0					
ANR	656550	Identifier	sprintf_cat		656454	1					
ANR	656551	ArgumentList	"""%d"""		656454	1					
ANR	656552	Argument	"""%d"""		656454	0					
ANR	656553	PrimaryExpression	"""%d"""		656454	0					
ANR	656554	Argument	uproc -> GetJobPid ( )		656454	1					
ANR	656555	CallExpression	uproc -> GetJobPid ( )		656454	0					
ANR	656556	Callee	uproc -> GetJobPid		656454	0					
ANR	656557	PtrMemberAccess	uproc -> GetJobPid		656454	0					
ANR	656558	Identifier	uproc		656454	0					
ANR	656559	Identifier	GetJobPid		656454	1					
ANR	656560	ArgumentList			656454	1					
ANR	656561	ExpressionStatement	"proc_env -> SetEnv ( ""_CONDOR_JOB_PIDS"" , job_pids )"	2599:1:71749:71794	656454	7	True				
ANR	656562	CallExpression	"proc_env -> SetEnv ( ""_CONDOR_JOB_PIDS"" , job_pids )"		656454	0					
ANR	656563	Callee	proc_env -> SetEnv		656454	0					
ANR	656564	PtrMemberAccess	proc_env -> SetEnv		656454	0					
ANR	656565	Identifier	proc_env		656454	0					
ANR	656566	Identifier	SetEnv		656454	1					
ANR	656567	ArgumentList	"""_CONDOR_JOB_PIDS"""		656454	1					
ANR	656568	Argument	"""_CONDOR_JOB_PIDS"""		656454	0					
ANR	656569	PrimaryExpression	"""_CONDOR_JOB_PIDS"""		656454	0					
ANR	656570	Argument	job_pids		656454	1					
ANR	656571	Identifier	job_pids		656454	0					
ANR	656572	ExpressionStatement	m_reaped_job_list . Rewind ( )	2601:1:71798:71824	656454	8	True				
ANR	656573	CallExpression	m_reaped_job_list . Rewind ( )		656454	0					
ANR	656574	Callee	m_reaped_job_list . Rewind		656454	0					
ANR	656575	MemberAccess	m_reaped_job_list . Rewind		656454	0					
ANR	656576	Identifier	m_reaped_job_list		656454	0					
ANR	656577	Identifier	Rewind		656454	1					
ANR	656578	ArgumentList			656454	1					
ANR	656579	WhileStatement	while ( ( uproc = m_reaped_job_list . Next ( ) ) != NULL )		656454	9					
ANR	656580	Condition	( uproc = m_reaped_job_list . Next ( ) ) != NULL	2602:8:71834:71875	656454	0	True				
ANR	656581	EqualityExpression	( uproc = m_reaped_job_list . Next ( ) ) != NULL		656454	0		!=			
ANR	656582	AssignmentExpression	uproc = m_reaped_job_list . Next ( )		656454	0		=			
ANR	656583	Identifier	uproc		656454	0					
ANR	656584	CallExpression	m_reaped_job_list . Next ( )		656454	1					
ANR	656585	Callee	m_reaped_job_list . Next		656454	0					
ANR	656586	MemberAccess	m_reaped_job_list . Next		656454	0					
ANR	656587	Identifier	m_reaped_job_list		656454	0					
ANR	656588	Identifier	Next		656454	1					
ANR	656589	ArgumentList			656454	1					
ANR	656590	Identifier	NULL		656454	1					
ANR	656591	CompoundStatement		28:52:837:837	656454	1					
ANR	656592	ExpressionStatement	uproc -> PublishToEnv ( proc_env )	2603:2:71882:71913	656454	0	True				
ANR	656593	CallExpression	uproc -> PublishToEnv ( proc_env )		656454	0					
ANR	656594	Callee	uproc -> PublishToEnv		656454	0					
ANR	656595	PtrMemberAccess	uproc -> PublishToEnv		656454	0					
ANR	656596	Identifier	uproc		656454	0					
ANR	656597	Identifier	PublishToEnv		656454	1					
ANR	656598	ArgumentList	proc_env		656454	1					
ANR	656599	Argument	proc_env		656454	0					
ANR	656600	Identifier	proc_env		656454	0					
ANR	656601	ExpressionStatement	ASSERT ( jic )	2606:1:71920:71931	656454	10	True				
ANR	656602	CallExpression	ASSERT ( jic )		656454	0					
ANR	656603	Callee	ASSERT		656454	0					
ANR	656604	Identifier	ASSERT		656454	0					
ANR	656605	ArgumentList	jic		656454	1					
ANR	656606	Argument	jic		656454	0					
ANR	656607	Identifier	jic		656454	0					
ANR	656608	IdentifierDeclStatement	ClassAd * jobAd = jic -> jobClassAd ( ) ;	2607:1:71934:71968	656454	11	True				
ANR	656609	IdentifierDecl	* jobAd = jic -> jobClassAd ( )		656454	0					
ANR	656610	IdentifierDeclType	ClassAd *		656454	0					
ANR	656611	Identifier	jobAd		656454	1					
ANR	656612	AssignmentExpression	* jobAd = jic -> jobClassAd ( )		656454	2		=			
ANR	656613	Identifier	jobAd		656454	0					
ANR	656614	CallExpression	jic -> jobClassAd ( )		656454	1					
ANR	656615	Callee	jic -> jobClassAd		656454	0					
ANR	656616	PtrMemberAccess	jic -> jobClassAd		656454	0					
ANR	656617	Identifier	jic		656454	0					
ANR	656618	Identifier	jobClassAd		656454	1					
ANR	656619	ArgumentList			656454	1					
ANR	656620	IfStatement	if ( jobAd )		656454	12					
ANR	656621	Condition	jobAd	2608:5:71975:71979	656454	0	True				
ANR	656622	Identifier	jobAd		656454	0					
ANR	656623	CompoundStatement		37:2:1056:1107	656454	1					
ANR	656624	IdentifierDeclStatement	bool using_file_transfer = jic -> usingFileTransfer ( ) ;	2611:2:72097:72148	656454	0	True				
ANR	656625	IdentifierDecl	using_file_transfer = jic -> usingFileTransfer ( )		656454	0					
ANR	656626	IdentifierDeclType	bool		656454	0					
ANR	656627	Identifier	using_file_transfer		656454	1					
ANR	656628	AssignmentExpression	using_file_transfer = jic -> usingFileTransfer ( )		656454	2		=			
ANR	656629	Identifier	using_file_transfer		656454	0					
ANR	656630	CallExpression	jic -> usingFileTransfer ( )		656454	1					
ANR	656631	Callee	jic -> usingFileTransfer		656454	0					
ANR	656632	PtrMemberAccess	jic -> usingFileTransfer		656454	0					
ANR	656633	Identifier	jic		656454	0					
ANR	656634	Identifier	usingFileTransfer		656454	1					
ANR	656635	ArgumentList			656454	1					
ANR	656636	ExpressionStatement	"build_job_env ( * proc_env , * jobAd , using_file_transfer )"	2612:2:72152:72207	656454	1	True				
ANR	656637	CallExpression	"build_job_env ( * proc_env , * jobAd , using_file_transfer )"		656454	0					
ANR	656638	Callee	build_job_env		656454	0					
ANR	656639	Identifier	build_job_env		656454	0					
ANR	656640	ArgumentList	* proc_env		656454	1					
ANR	656641	Argument	* proc_env		656454	0					
ANR	656642	UnaryOperationExpression	* proc_env		656454	0					
ANR	656643	UnaryOperator	*		656454	0					
ANR	656644	Identifier	proc_env		656454	1					
ANR	656645	Argument	* jobAd		656454	1					
ANR	656646	UnaryOperationExpression	* jobAd		656454	0					
ANR	656647	UnaryOperator	*		656454	0					
ANR	656648	Identifier	jobAd		656454	1					
ANR	656649	Argument	using_file_transfer		656454	2					
ANR	656650	Identifier	using_file_transfer		656454	0					
ANR	656651	ElseStatement	else		656454	0					
ANR	656652	CompoundStatement		39:8:1176:1176	656454	0					
ANR	656653	ExpressionStatement	"dprintf ( D_ALWAYS , ""Unable to find job ad for job.  Environment may be incorrect\\n"" )"	2614:2:72221:72304	656454	0	True				
ANR	656654	CallExpression	"dprintf ( D_ALWAYS , ""Unable to find job ad for job.  Environment may be incorrect\\n"" )"		656454	0					
ANR	656655	Callee	dprintf		656454	0					
ANR	656656	Identifier	dprintf		656454	0					
ANR	656657	ArgumentList	D_ALWAYS		656454	1					
ANR	656658	Argument	D_ALWAYS		656454	0					
ANR	656659	Identifier	D_ALWAYS		656454	0					
ANR	656660	Argument	"""Unable to find job ad for job.  Environment may be incorrect\\n"""		656454	1					
ANR	656661	PrimaryExpression	"""Unable to find job ad for job.  Environment may be incorrect\\n"""		656454	0					
ANR	656662	IdentifierDeclStatement	MyString base ;	2619:1:72403:72416	656454	13	True				
ANR	656663	IdentifierDecl	base		656454	0					
ANR	656664	IdentifierDeclType	MyString		656454	0					
ANR	656665	Identifier	base		656454	1					
ANR	656666	ExpressionStatement	"base = ""_"""	2620:1:72419:72429	656454	14	True				
ANR	656667	AssignmentExpression	"base = ""_"""		656454	0		=			
ANR	656668	Identifier	base		656454	0					
ANR	656669	PrimaryExpression	"""_"""		656454	1					
ANR	656670	ExpressionStatement	base += myDistro -> GetUc ( )	2621:1:72432:72457	656454	15	True				
ANR	656671	AssignmentExpression	base += myDistro -> GetUc ( )		656454	0		+=			
ANR	656672	Identifier	base		656454	0					
ANR	656673	CallExpression	myDistro -> GetUc ( )		656454	1					
ANR	656674	Callee	myDistro -> GetUc		656454	0					
ANR	656675	PtrMemberAccess	myDistro -> GetUc		656454	0					
ANR	656676	Identifier	myDistro		656454	0					
ANR	656677	Identifier	GetUc		656454	1					
ANR	656678	ArgumentList			656454	1					
ANR	656679	ExpressionStatement	base += '_'	2622:1:72460:72471	656454	16	True				
ANR	656680	AssignmentExpression	base += '_'		656454	0		+=			
ANR	656681	Identifier	base		656454	0					
ANR	656682	PrimaryExpression	'_'		656454	1					
ANR	656683	IdentifierDeclStatement	MyString env_name ;	2624:1:72476:72493	656454	17	True				
ANR	656684	IdentifierDecl	env_name		656454	0					
ANR	656685	IdentifierDeclType	MyString		656454	0					
ANR	656686	Identifier	env_name		656454	1					
ANR	656687	IdentifierDeclStatement	const char * output_ad = jic -> getOutputAdFile ( ) ;	2627:1:72532:72578	656454	18	True				
ANR	656688	IdentifierDecl	* output_ad = jic -> getOutputAdFile ( )		656454	0					
ANR	656689	IdentifierDeclType	const char *		656454	0					
ANR	656690	Identifier	output_ad		656454	1					
ANR	656691	AssignmentExpression	* output_ad = jic -> getOutputAdFile ( )		656454	2		=			
ANR	656692	Identifier	output_ad		656454	0					
ANR	656693	CallExpression	jic -> getOutputAdFile ( )		656454	1					
ANR	656694	Callee	jic -> getOutputAdFile		656454	0					
ANR	656695	PtrMemberAccess	jic -> getOutputAdFile		656454	0					
ANR	656696	Identifier	jic		656454	0					
ANR	656697	Identifier	getOutputAdFile		656454	1					
ANR	656698	ArgumentList			656454	1					
ANR	656699	IfStatement	if ( output_ad && ! ( output_ad [ 0 ] == '-' && output_ad [ 1 ] == '\\0' ) )		656454	19					
ANR	656700	Condition	output_ad && ! ( output_ad [ 0 ] == '-' && output_ad [ 1 ] == '\\0' )	2628:5:72585:72643	656454	0	True				
ANR	656701	AndExpression	output_ad && ! ( output_ad [ 0 ] == '-' && output_ad [ 1 ] == '\\0' )		656454	0		&&			
ANR	656702	Identifier	output_ad		656454	0					
ANR	656703	UnaryOperationExpression	! ( output_ad [ 0 ] == '-' && output_ad [ 1 ] == '\\0' )		656454	1					
ANR	656704	UnaryOperator	!		656454	0					
ANR	656705	AndExpression	output_ad [ 0 ] == '-' && output_ad [ 1 ] == '\\0'		656454	1		&&			
ANR	656706	EqualityExpression	output_ad [ 0 ] == '-'		656454	0		==			
ANR	656707	ArrayIndexing	output_ad [ 0 ]		656454	0					
ANR	656708	Identifier	output_ad		656454	0					
ANR	656709	PrimaryExpression	0		656454	1					
ANR	656710	PrimaryExpression	'-'		656454	1					
ANR	656711	EqualityExpression	output_ad [ 1 ] == '\\0'		656454	1		==			
ANR	656712	ArrayIndexing	output_ad [ 1 ]		656454	0					
ANR	656713	Identifier	output_ad		656454	0					
ANR	656714	PrimaryExpression	1		656454	1					
ANR	656715	PrimaryExpression	'\\0'		656454	1					
ANR	656716	CompoundStatement		54:67:1606:1606	656454	1					
ANR	656717	ExpressionStatement	env_name = base . Value ( )	2629:2:72651:72674	656454	0	True				
ANR	656718	AssignmentExpression	env_name = base . Value ( )		656454	0		=			
ANR	656719	Identifier	env_name		656454	0					
ANR	656720	CallExpression	base . Value ( )		656454	1					
ANR	656721	Callee	base . Value		656454	0					
ANR	656722	MemberAccess	base . Value		656454	0					
ANR	656723	Identifier	base		656454	0					
ANR	656724	Identifier	Value		656454	1					
ANR	656725	ArgumentList			656454	1					
ANR	656726	ExpressionStatement	"env_name += ""OUTPUT_CLASSAD"""	2630:2:72678:72706	656454	1	True				
ANR	656727	AssignmentExpression	"env_name += ""OUTPUT_CLASSAD"""		656454	0		+=			
ANR	656728	Identifier	env_name		656454	0					
ANR	656729	PrimaryExpression	"""OUTPUT_CLASSAD"""		656454	1					
ANR	656730	ExpressionStatement	"proc_env -> SetEnv ( env_name . Value ( ) , output_ad )"	2631:2:72710:72757	656454	2	True				
ANR	656731	CallExpression	"proc_env -> SetEnv ( env_name . Value ( ) , output_ad )"		656454	0					
ANR	656732	Callee	proc_env -> SetEnv		656454	0					
ANR	656733	PtrMemberAccess	proc_env -> SetEnv		656454	0					
ANR	656734	Identifier	proc_env		656454	0					
ANR	656735	Identifier	SetEnv		656454	1					
ANR	656736	ArgumentList	env_name . Value ( )		656454	1					
ANR	656737	Argument	env_name . Value ( )		656454	0					
ANR	656738	CallExpression	env_name . Value ( )		656454	0					
ANR	656739	Callee	env_name . Value		656454	0					
ANR	656740	MemberAccess	env_name . Value		656454	0					
ANR	656741	Identifier	env_name		656454	0					
ANR	656742	Identifier	Value		656454	1					
ANR	656743	ArgumentList			656454	1					
ANR	656744	Argument	output_ad		656454	1					
ANR	656745	Identifier	output_ad		656454	0					
ANR	656746	ExpressionStatement	env_name = base . Value ( )	2635:1:72788:72811	656454	20	True				
ANR	656747	AssignmentExpression	env_name = base . Value ( )		656454	0		=			
ANR	656748	Identifier	env_name		656454	0					
ANR	656749	CallExpression	base . Value ( )		656454	1					
ANR	656750	Callee	base . Value		656454	0					
ANR	656751	MemberAccess	base . Value		656454	0					
ANR	656752	Identifier	base		656454	0					
ANR	656753	Identifier	Value		656454	1					
ANR	656754	ArgumentList			656454	1					
ANR	656755	ExpressionStatement	"env_name += ""SCRATCH_DIR"""	2636:1:72814:72839	656454	21	True				
ANR	656756	AssignmentExpression	"env_name += ""SCRATCH_DIR"""		656454	0		+=			
ANR	656757	Identifier	env_name		656454	0					
ANR	656758	PrimaryExpression	"""SCRATCH_DIR"""		656454	1					
ANR	656759	ExpressionStatement	"proc_env -> SetEnv ( env_name . Value ( ) , GetWorkingDir ( ) )"	2637:1:72842:72895	656454	22	True				
ANR	656760	CallExpression	"proc_env -> SetEnv ( env_name . Value ( ) , GetWorkingDir ( ) )"		656454	0					
ANR	656761	Callee	proc_env -> SetEnv		656454	0					
ANR	656762	PtrMemberAccess	proc_env -> SetEnv		656454	0					
ANR	656763	Identifier	proc_env		656454	0					
ANR	656764	Identifier	SetEnv		656454	1					
ANR	656765	ArgumentList	env_name . Value ( )		656454	1					
ANR	656766	Argument	env_name . Value ( )		656454	0					
ANR	656767	CallExpression	env_name . Value ( )		656454	0					
ANR	656768	Callee	env_name . Value		656454	0					
ANR	656769	MemberAccess	env_name . Value		656454	0					
ANR	656770	Identifier	env_name		656454	0					
ANR	656771	Identifier	Value		656454	1					
ANR	656772	ArgumentList			656454	1					
ANR	656773	Argument	GetWorkingDir ( )		656454	1					
ANR	656774	CallExpression	GetWorkingDir ( )		656454	0					
ANR	656775	Callee	GetWorkingDir		656454	0					
ANR	656776	Identifier	GetWorkingDir		656454	0					
ANR	656777	ArgumentList			656454	1					
ANR	656778	ExpressionStatement	env_name = base . Value ( )	2640:1:72920:72943	656454	23	True				
ANR	656779	AssignmentExpression	env_name = base . Value ( )		656454	0		=			
ANR	656780	Identifier	env_name		656454	0					
ANR	656781	CallExpression	base . Value ( )		656454	1					
ANR	656782	Callee	base . Value		656454	0					
ANR	656783	MemberAccess	base . Value		656454	0					
ANR	656784	Identifier	base		656454	0					
ANR	656785	Identifier	Value		656454	1					
ANR	656786	ArgumentList			656454	1					
ANR	656787	ExpressionStatement	"env_name += ""SLOT"""	2641:1:72946:72964	656454	24	True				
ANR	656788	AssignmentExpression	"env_name += ""SLOT"""		656454	0		+=			
ANR	656789	Identifier	env_name		656454	0					
ANR	656790	PrimaryExpression	"""SLOT"""		656454	1					
ANR	656791	IdentifierDeclStatement	int slot = getMySlotNumber ( ) ;	2642:1:72967:72995	656454	25	True				
ANR	656792	IdentifierDecl	slot = getMySlotNumber ( )		656454	0					
ANR	656793	IdentifierDeclType	int		656454	0					
ANR	656794	Identifier	slot		656454	1					
ANR	656795	AssignmentExpression	slot = getMySlotNumber ( )		656454	2		=			
ANR	656796	Identifier	slot		656454	0					
ANR	656797	CallExpression	getMySlotNumber ( )		656454	1					
ANR	656798	Callee	getMySlotNumber		656454	0					
ANR	656799	Identifier	getMySlotNumber		656454	0					
ANR	656800	ArgumentList			656454	1					
ANR	656801	IfStatement	if ( ! slot )		656454	26					
ANR	656802	Condition	! slot	2643:5:73002:73006	656454	0	True				
ANR	656803	UnaryOperationExpression	! slot		656454	0					
ANR	656804	UnaryOperator	!		656454	0					
ANR	656805	Identifier	slot		656454	1					
ANR	656806	CompoundStatement		69:12:1968:1968	656454	1					
ANR	656807	ExpressionStatement	slot = 1	2644:2:73013:73021	656454	0	True				
ANR	656808	AssignmentExpression	slot = 1		656454	0		=			
ANR	656809	Identifier	slot		656454	0					
ANR	656810	PrimaryExpression	1		656454	1					
ANR	656811	ExpressionStatement	"proc_env -> SetEnv ( env_name . Value ( ) , slot )"	2646:1:73027:73067	656454	27	True				
ANR	656812	CallExpression	"proc_env -> SetEnv ( env_name . Value ( ) , slot )"		656454	0					
ANR	656813	Callee	proc_env -> SetEnv		656454	0					
ANR	656814	PtrMemberAccess	proc_env -> SetEnv		656454	0					
ANR	656815	Identifier	proc_env		656454	0					
ANR	656816	Identifier	SetEnv		656454	1					
ANR	656817	ArgumentList	env_name . Value ( )		656454	1					
ANR	656818	Argument	env_name . Value ( )		656454	0					
ANR	656819	CallExpression	env_name . Value ( )		656454	0					
ANR	656820	Callee	env_name . Value		656454	0					
ANR	656821	MemberAccess	env_name . Value		656454	0					
ANR	656822	Identifier	env_name		656454	0					
ANR	656823	Identifier	Value		656454	1					
ANR	656824	ArgumentList			656454	1					
ANR	656825	Argument	slot		656454	1					
ANR	656826	Identifier	slot		656454	0					
ANR	656827	IdentifierDeclStatement	"int low , high ;"	2652:1:73227:73240	656454	28	True				
ANR	656828	IdentifierDecl	low		656454	0					
ANR	656829	IdentifierDeclType	int		656454	0					
ANR	656830	Identifier	low		656454	1					
ANR	656831	IdentifierDecl	high		656454	1					
ANR	656832	IdentifierDeclType	int		656454	0					
ANR	656833	Identifier	high		656454	1					
ANR	656834	IfStatement	"if ( get_port_range ( TRUE , & low , & high ) == TRUE )"		656454	29					
ANR	656835	Condition	"get_port_range ( TRUE , & low , & high ) == TRUE"	2653:5:73247:73288	656454	0	True				
ANR	656836	EqualityExpression	"get_port_range ( TRUE , & low , & high ) == TRUE"		656454	0		==			
ANR	656837	CallExpression	"get_port_range ( TRUE , & low , & high )"		656454	0					
ANR	656838	Callee	get_port_range		656454	0					
ANR	656839	Identifier	get_port_range		656454	0					
ANR	656840	ArgumentList	TRUE		656454	1					
ANR	656841	Argument	TRUE		656454	0					
ANR	656842	Identifier	TRUE		656454	0					
ANR	656843	Argument	& low		656454	1					
ANR	656844	UnaryOperationExpression	& low		656454	0					
ANR	656845	UnaryOperator	&		656454	0					
ANR	656846	Identifier	low		656454	1					
ANR	656847	Argument	& high		656454	2					
ANR	656848	UnaryOperationExpression	& high		656454	0					
ANR	656849	UnaryOperator	&		656454	0					
ANR	656850	Identifier	high		656454	1					
ANR	656851	Identifier	TRUE		656454	1					
ANR	656852	CompoundStatement		80:2:2254:2278	656454	1					
ANR	656853	IdentifierDeclStatement	MyString tmp_port_number ;	2654:2:73295:73319	656454	0	True				
ANR	656854	IdentifierDecl	tmp_port_number		656454	0					
ANR	656855	IdentifierDeclType	MyString		656454	0					
ANR	656856	Identifier	tmp_port_number		656454	1					
ANR	656857	ExpressionStatement	tmp_port_number = high	2656:2:73324:73346	656454	1	True				
ANR	656858	AssignmentExpression	tmp_port_number = high		656454	0		=			
ANR	656859	Identifier	tmp_port_number		656454	0					
ANR	656860	Identifier	high		656454	1					
ANR	656861	ExpressionStatement	env_name = base . Value ( )	2657:2:73350:73373	656454	2	True				
ANR	656862	AssignmentExpression	env_name = base . Value ( )		656454	0		=			
ANR	656863	Identifier	env_name		656454	0					
ANR	656864	CallExpression	base . Value ( )		656454	1					
ANR	656865	Callee	base . Value		656454	0					
ANR	656866	MemberAccess	base . Value		656454	0					
ANR	656867	Identifier	base		656454	0					
ANR	656868	Identifier	Value		656454	1					
ANR	656869	ArgumentList			656454	1					
ANR	656870	ExpressionStatement	"env_name += ""HIGHPORT"""	2658:2:73377:73399	656454	3	True				
ANR	656871	AssignmentExpression	"env_name += ""HIGHPORT"""		656454	0		+=			
ANR	656872	Identifier	env_name		656454	0					
ANR	656873	PrimaryExpression	"""HIGHPORT"""		656454	1					
ANR	656874	ExpressionStatement	"proc_env -> SetEnv ( env_name . Value ( ) , tmp_port_number . Value ( ) )"	2659:2:73403:73464	656454	4	True				
ANR	656875	CallExpression	"proc_env -> SetEnv ( env_name . Value ( ) , tmp_port_number . Value ( ) )"		656454	0					
ANR	656876	Callee	proc_env -> SetEnv		656454	0					
ANR	656877	PtrMemberAccess	proc_env -> SetEnv		656454	0					
ANR	656878	Identifier	proc_env		656454	0					
ANR	656879	Identifier	SetEnv		656454	1					
ANR	656880	ArgumentList	env_name . Value ( )		656454	1					
ANR	656881	Argument	env_name . Value ( )		656454	0					
ANR	656882	CallExpression	env_name . Value ( )		656454	0					
ANR	656883	Callee	env_name . Value		656454	0					
ANR	656884	MemberAccess	env_name . Value		656454	0					
ANR	656885	Identifier	env_name		656454	0					
ANR	656886	Identifier	Value		656454	1					
ANR	656887	ArgumentList			656454	1					
ANR	656888	Argument	tmp_port_number . Value ( )		656454	1					
ANR	656889	CallExpression	tmp_port_number . Value ( )		656454	0					
ANR	656890	Callee	tmp_port_number . Value		656454	0					
ANR	656891	MemberAccess	tmp_port_number . Value		656454	0					
ANR	656892	Identifier	tmp_port_number		656454	0					
ANR	656893	Identifier	Value		656454	1					
ANR	656894	ArgumentList			656454	1					
ANR	656895	ExpressionStatement	tmp_port_number = low	2661:2:73469:73490	656454	5	True				
ANR	656896	AssignmentExpression	tmp_port_number = low		656454	0		=			
ANR	656897	Identifier	tmp_port_number		656454	0					
ANR	656898	Identifier	low		656454	1					
ANR	656899	ExpressionStatement	env_name = base . Value ( )	2662:2:73494:73517	656454	6	True				
ANR	656900	AssignmentExpression	env_name = base . Value ( )		656454	0		=			
ANR	656901	Identifier	env_name		656454	0					
ANR	656902	CallExpression	base . Value ( )		656454	1					
ANR	656903	Callee	base . Value		656454	0					
ANR	656904	MemberAccess	base . Value		656454	0					
ANR	656905	Identifier	base		656454	0					
ANR	656906	Identifier	Value		656454	1					
ANR	656907	ArgumentList			656454	1					
ANR	656908	ExpressionStatement	"env_name += ""LOWPORT"""	2663:2:73521:73542	656454	7	True				
ANR	656909	AssignmentExpression	"env_name += ""LOWPORT"""		656454	0		+=			
ANR	656910	Identifier	env_name		656454	0					
ANR	656911	PrimaryExpression	"""LOWPORT"""		656454	1					
ANR	656912	ExpressionStatement	"proc_env -> SetEnv ( env_name . Value ( ) , tmp_port_number . Value ( ) )"	2664:2:73546:73607	656454	8	True				
ANR	656913	CallExpression	"proc_env -> SetEnv ( env_name . Value ( ) , tmp_port_number . Value ( ) )"		656454	0					
ANR	656914	Callee	proc_env -> SetEnv		656454	0					
ANR	656915	PtrMemberAccess	proc_env -> SetEnv		656454	0					
ANR	656916	Identifier	proc_env		656454	0					
ANR	656917	Identifier	SetEnv		656454	1					
ANR	656918	ArgumentList	env_name . Value ( )		656454	1					
ANR	656919	Argument	env_name . Value ( )		656454	0					
ANR	656920	CallExpression	env_name . Value ( )		656454	0					
ANR	656921	Callee	env_name . Value		656454	0					
ANR	656922	MemberAccess	env_name . Value		656454	0					
ANR	656923	Identifier	env_name		656454	0					
ANR	656924	Identifier	Value		656454	1					
ANR	656925	ArgumentList			656454	1					
ANR	656926	Argument	tmp_port_number . Value ( )		656454	1					
ANR	656927	CallExpression	tmp_port_number . Value ( )		656454	0					
ANR	656928	Callee	tmp_port_number . Value		656454	0					
ANR	656929	MemberAccess	tmp_port_number . Value		656454	0					
ANR	656930	Identifier	tmp_port_number		656454	0					
ANR	656931	Identifier	Value		656454	1					
ANR	656932	ArgumentList			656454	1					
ANR	656933	ExpressionStatement	"proc_env -> SetEnv ( ""TMPDIR"" , GetWorkingDir ( ) )"	2671:1:73792:73835	656454	30	True				
ANR	656934	CallExpression	"proc_env -> SetEnv ( ""TMPDIR"" , GetWorkingDir ( ) )"		656454	0					
ANR	656935	Callee	proc_env -> SetEnv		656454	0					
ANR	656936	PtrMemberAccess	proc_env -> SetEnv		656454	0					
ANR	656937	Identifier	proc_env		656454	0					
ANR	656938	Identifier	SetEnv		656454	1					
ANR	656939	ArgumentList	"""TMPDIR"""		656454	1					
ANR	656940	Argument	"""TMPDIR"""		656454	0					
ANR	656941	PrimaryExpression	"""TMPDIR"""		656454	0					
ANR	656942	Argument	GetWorkingDir ( )		656454	1					
ANR	656943	CallExpression	GetWorkingDir ( )		656454	0					
ANR	656944	Callee	GetWorkingDir		656454	0					
ANR	656945	Identifier	GetWorkingDir		656454	0					
ANR	656946	ArgumentList			656454	1					
ANR	656947	ExpressionStatement	"proc_env -> SetEnv ( ""TEMP"" , GetWorkingDir ( ) )"	2672:1:73838:73879	656454	31	True				
ANR	656948	CallExpression	"proc_env -> SetEnv ( ""TEMP"" , GetWorkingDir ( ) )"		656454	0					
ANR	656949	Callee	proc_env -> SetEnv		656454	0					
ANR	656950	PtrMemberAccess	proc_env -> SetEnv		656454	0					
ANR	656951	Identifier	proc_env		656454	0					
ANR	656952	Identifier	SetEnv		656454	1					
ANR	656953	ArgumentList	"""TEMP"""		656454	1					
ANR	656954	Argument	"""TEMP"""		656454	0					
ANR	656955	PrimaryExpression	"""TEMP"""		656454	0					
ANR	656956	Argument	GetWorkingDir ( )		656454	1					
ANR	656957	CallExpression	GetWorkingDir ( )		656454	0					
ANR	656958	Callee	GetWorkingDir		656454	0					
ANR	656959	Identifier	GetWorkingDir		656454	0					
ANR	656960	ArgumentList			656454	1					
ANR	656961	ExpressionStatement	"proc_env -> SetEnv ( ""TMP"" , GetWorkingDir ( ) )"	2673:1:73893:73933	656454	32	True				
ANR	656962	CallExpression	"proc_env -> SetEnv ( ""TMP"" , GetWorkingDir ( ) )"		656454	0					
ANR	656963	Callee	proc_env -> SetEnv		656454	0					
ANR	656964	PtrMemberAccess	proc_env -> SetEnv		656454	0					
ANR	656965	Identifier	proc_env		656454	0					
ANR	656966	Identifier	SetEnv		656454	1					
ANR	656967	ArgumentList	"""TMP"""		656454	1					
ANR	656968	Argument	"""TMP"""		656454	0					
ANR	656969	PrimaryExpression	"""TMP"""		656454	0					
ANR	656970	Argument	GetWorkingDir ( )		656454	1					
ANR	656971	CallExpression	GetWorkingDir ( )		656454	0					
ANR	656972	Callee	GetWorkingDir		656454	0					
ANR	656973	Identifier	GetWorkingDir		656454	0					
ANR	656974	ArgumentList			656454	1					
ANR	656975	ReturnType	void		656454	1					
ANR	656976	Identifier	CStarter :: PublishToEnv		656454	2					
ANR	656977	ParameterList	Env * proc_env		656454	3					
ANR	656978	Parameter	Env * proc_env	2574:24:71024:71036	656454	0	True				
ANR	656979	ParameterType	Env *		656454	0					
ANR	656980	Identifier	proc_env		656454	1					
ANR	656981	CFGEntryNode	ENTRY		656454		True				
ANR	656982	CFGExitNode	EXIT		656454		True				
ANR	656983	Symbol	jic -> getOutputAdFile		656454						
ANR	656984	Symbol	jic		656454						
ANR	656985	Symbol	jobAd		656454						
ANR	656986	Symbol	using_file_transfer		656454						
ANR	656987	Symbol	* output_ad		656454						
ANR	656988	Symbol	get_port_range		656454						
ANR	656989	Symbol	slot		656454						
ANR	656990	Symbol	output_ad		656454						
ANR	656991	Symbol	m_job_list		656454						
ANR	656992	Symbol	uproc -> GetJobPid		656454						
ANR	656993	Symbol	high		656454						
ANR	656994	Symbol	* uproc		656454						
ANR	656995	Symbol	env_name		656454						
ANR	656996	Symbol	jic -> jobRemoteIWD		656454						
ANR	656997	Symbol	* proc_env		656454						
ANR	656998	Symbol	tmp_port_number		656454						
ANR	656999	Symbol	low		656454						
ANR	657000	Symbol	myDistro		656454						
ANR	657001	Symbol	proc_env		656454						
ANR	657002	Symbol	& high		656454						
ANR	657003	Symbol	jic -> usingFileTransfer		656454						
ANR	657004	Symbol	m_reaped_job_list		656454						
ANR	657005	Symbol	m_reaped_job_list . Next		656454						
ANR	657006	Symbol	pre_script		656454						
ANR	657007	Symbol	* jobAd		656454						
ANR	657008	Symbol	NULL		656454						
ANR	657009	Symbol	env_name . Value		656454						
ANR	657010	Symbol	job_pids . IsEmpty		656454						
ANR	657011	Symbol	D_ALWAYS		656454						
ANR	657012	Symbol	GetWorkingDir		656454						
ANR	657013	Symbol	TRUE		656454						
ANR	657014	Symbol	tmp_port_number . Value		656454						
ANR	657015	Symbol	* jic		656454						
ANR	657016	Symbol	uproc		656454						
ANR	657017	Symbol	m_job_list . Next		656454						
ANR	657018	Symbol	myDistro -> GetUc		656454						
ANR	657019	Symbol	job_pids		656454						
ANR	657020	Symbol	jic -> jobClassAd		656454						
ANR	657021	Symbol	* myDistro		656454						
ANR	657022	Symbol	getMySlotNumber		656454						
ANR	657023	Symbol	& low		656454						
ANR	657024	Symbol	base		656454						
ANR	657025	Symbol	base . Value		656454						
ANR	657026	Function	CStarter :: getMySlotNumber	2677:0:73950:74834							
ANR	657027	FunctionDef	CStarter :: getMySlotNumber ()		657026	0					
ANR	657028	CompoundStatement		2679:0:73988:74834	657026	0					
ANR	657029	IdentifierDeclStatement	"char * logappend = param ( ""STARTER_LOG"" ) ;"	2681:1:73993:74031	657026	0	True				
ANR	657030	IdentifierDecl	"* logappend = param ( ""STARTER_LOG"" )"		657026	0					
ANR	657031	IdentifierDeclType	char *		657026	0					
ANR	657032	Identifier	logappend		657026	1					
ANR	657033	AssignmentExpression	"* logappend = param ( ""STARTER_LOG"" )"		657026	2		=			
ANR	657034	Identifier	logappend		657026	0					
ANR	657035	CallExpression	"param ( ""STARTER_LOG"" )"		657026	1					
ANR	657036	Callee	param		657026	0					
ANR	657037	Identifier	param		657026	0					
ANR	657038	ArgumentList	"""STARTER_LOG"""		657026	1					
ANR	657039	Argument	"""STARTER_LOG"""		657026	0					
ANR	657040	PrimaryExpression	"""STARTER_LOG"""		657026	0					
ANR	657041	IdentifierDeclStatement	char const * tmp = NULL ;	2682:1:74036:74058	657026	1	True				
ANR	657042	IdentifierDecl	* tmp = NULL		657026	0					
ANR	657043	IdentifierDeclType	char const *		657026	0					
ANR	657044	Identifier	tmp		657026	1					
ANR	657045	AssignmentExpression	* tmp = NULL		657026	2		=			
ANR	657046	Identifier	NULL		657026	0					
ANR	657047	Identifier	NULL		657026	1					
ANR	657048	IdentifierDeclStatement	int slot_number = 0 ;	2684:1:74064:74083	657026	2	True				
ANR	657049	IdentifierDecl	slot_number = 0		657026	0					
ANR	657050	IdentifierDeclType	int		657026	0					
ANR	657051	Identifier	slot_number		657026	1					
ANR	657052	AssignmentExpression	slot_number = 0		657026	2		=			
ANR	657053	Identifier	slot_number		657026	0					
ANR	657054	PrimaryExpression	0		657026	1					
ANR	657055	IfStatement	if ( logappend )		657026	3					
ANR	657056	Condition	logappend	2687:6:74170:74178	657026	0	True				
ANR	657057	Identifier	logappend		657026	0					
ANR	657058	CompoundStatement		15:2:388:443	657026	1					
ANR	657059	IdentifierDeclStatement	char const * log_basename = condor_basename ( logappend ) ;	2690:2:74300:74353	657026	0	True				
ANR	657060	IdentifierDecl	* log_basename = condor_basename ( logappend )		657026	0					
ANR	657061	IdentifierDeclType	char const *		657026	0					
ANR	657062	Identifier	log_basename		657026	1					
ANR	657063	AssignmentExpression	* log_basename = condor_basename ( logappend )		657026	2		=			
ANR	657064	Identifier	log_basename		657026	0					
ANR	657065	CallExpression	condor_basename ( logappend )		657026	1					
ANR	657066	Callee	condor_basename		657026	0					
ANR	657067	Identifier	condor_basename		657026	0					
ANR	657068	ArgumentList	logappend		657026	1					
ANR	657069	Argument	logappend		657026	0					
ANR	657070	Identifier	logappend		657026	0					
ANR	657071	IdentifierDeclStatement	MyString prefix ;	2691:2:74357:74372	657026	1	True				
ANR	657072	IdentifierDecl	prefix		657026	0					
ANR	657073	IdentifierDeclType	MyString		657026	0					
ANR	657074	Identifier	prefix		657026	1					
ANR	657075	IdentifierDeclStatement	"char * resource_prefix = param ( ""STARTD_RESOURCE_PREFIX"" ) ;"	2693:2:74377:74432	657026	2	True				
ANR	657076	IdentifierDecl	"* resource_prefix = param ( ""STARTD_RESOURCE_PREFIX"" )"		657026	0					
ANR	657077	IdentifierDeclType	char *		657026	0					
ANR	657078	Identifier	resource_prefix		657026	1					
ANR	657079	AssignmentExpression	"* resource_prefix = param ( ""STARTD_RESOURCE_PREFIX"" )"		657026	2		=			
ANR	657080	Identifier	resource_prefix		657026	0					
ANR	657081	CallExpression	"param ( ""STARTD_RESOURCE_PREFIX"" )"		657026	1					
ANR	657082	Callee	param		657026	0					
ANR	657083	Identifier	param		657026	0					
ANR	657084	ArgumentList	"""STARTD_RESOURCE_PREFIX"""		657026	1					
ANR	657085	Argument	"""STARTD_RESOURCE_PREFIX"""		657026	0					
ANR	657086	PrimaryExpression	"""STARTD_RESOURCE_PREFIX"""		657026	0					
ANR	657087	IfStatement	if ( resource_prefix )		657026	3					
ANR	657088	Condition	resource_prefix	2694:6:74440:74454	657026	0	True				
ANR	657089	Identifier	resource_prefix		657026	0					
ANR	657090	CompoundStatement		16:24:469:469	657026	1					
ANR	657091	ExpressionStatement	"prefix . sprintf ( "".%s"" , resource_prefix )"	2695:3:74463:74500	657026	0	True				
ANR	657092	CallExpression	"prefix . sprintf ( "".%s"" , resource_prefix )"		657026	0					
ANR	657093	Callee	prefix . sprintf		657026	0					
ANR	657094	MemberAccess	prefix . sprintf		657026	0					
ANR	657095	Identifier	prefix		657026	0					
ANR	657096	Identifier	sprintf		657026	1					
ANR	657097	ArgumentList	""".%s"""		657026	1					
ANR	657098	Argument	""".%s"""		657026	0					
ANR	657099	PrimaryExpression	""".%s"""		657026	0					
ANR	657100	Argument	resource_prefix		657026	1					
ANR	657101	Identifier	resource_prefix		657026	0					
ANR	657102	ExpressionStatement	free ( resource_prefix )	2696:3:74505:74528	657026	1	True				
ANR	657103	CallExpression	free ( resource_prefix )		657026	0					
ANR	657104	Callee	free		657026	0					
ANR	657105	Identifier	free		657026	0					
ANR	657106	ArgumentList	resource_prefix		657026	1					
ANR	657107	Argument	resource_prefix		657026	0					
ANR	657108	Identifier	resource_prefix		657026	0					
ANR	657109	ElseStatement	else		657026	0					
ANR	657110	CompoundStatement		20:7:552:552	657026	0					
ANR	657111	ExpressionStatement	"prefix = "".slot"""	2699:3:74546:74562	657026	0	True				
ANR	657112	AssignmentExpression	"prefix = "".slot"""		657026	0		=			
ANR	657113	Identifier	prefix		657026	0					
ANR	657114	PrimaryExpression	""".slot"""		657026	1					
ANR	657115	ExpressionStatement	"tmp = strstr ( log_basename , prefix . Value ( ) )"	2702:2:74571:74613	657026	4	True				
ANR	657116	AssignmentExpression	"tmp = strstr ( log_basename , prefix . Value ( ) )"		657026	0		=			
ANR	657117	Identifier	tmp		657026	0					
ANR	657118	CallExpression	"strstr ( log_basename , prefix . Value ( ) )"		657026	1					
ANR	657119	Callee	strstr		657026	0					
ANR	657120	Identifier	strstr		657026	0					
ANR	657121	ArgumentList	log_basename		657026	1					
ANR	657122	Argument	log_basename		657026	0					
ANR	657123	Identifier	log_basename		657026	0					
ANR	657124	Argument	prefix . Value ( )		657026	1					
ANR	657125	CallExpression	prefix . Value ( )		657026	0					
ANR	657126	Callee	prefix . Value		657026	0					
ANR	657127	MemberAccess	prefix . Value		657026	0					
ANR	657128	Identifier	prefix		657026	0					
ANR	657129	Identifier	Value		657026	1					
ANR	657130	ArgumentList			657026	1					
ANR	657131	IfStatement	if ( tmp )		657026	5					
ANR	657132	Condition	tmp	2703:7:74622:74624	657026	0	True				
ANR	657133	Identifier	tmp		657026	0					
ANR	657134	CompoundStatement		25:13:639:639	657026	1					
ANR	657135	ExpressionStatement	"prefix += ""%d"""	2704:3:74637:74651	657026	0	True				
ANR	657136	AssignmentExpression	"prefix += ""%d"""		657026	0		+=			
ANR	657137	Identifier	prefix		657026	0					
ANR	657138	PrimaryExpression	"""%d"""		657026	1					
ANR	657139	IfStatement	"if ( sscanf ( tmp , prefix . Value ( ) , & slot_number ) < 1 )"		657026	1					
ANR	657140	Condition	"sscanf ( tmp , prefix . Value ( ) , & slot_number ) < 1"	2705:8:74661:74705	657026	0	True				
ANR	657141	RelationalExpression	"sscanf ( tmp , prefix . Value ( ) , & slot_number ) < 1"		657026	0		<			
ANR	657142	CallExpression	"sscanf ( tmp , prefix . Value ( ) , & slot_number )"		657026	0					
ANR	657143	Callee	sscanf		657026	0					
ANR	657144	Identifier	sscanf		657026	0					
ANR	657145	ArgumentList	tmp		657026	1					
ANR	657146	Argument	tmp		657026	0					
ANR	657147	Identifier	tmp		657026	0					
ANR	657148	Argument	prefix . Value ( )		657026	1					
ANR	657149	CallExpression	prefix . Value ( )		657026	0					
ANR	657150	Callee	prefix . Value		657026	0					
ANR	657151	MemberAccess	prefix . Value		657026	0					
ANR	657152	Identifier	prefix		657026	0					
ANR	657153	Identifier	Value		657026	1					
ANR	657154	ArgumentList			657026	1					
ANR	657155	Argument	& slot_number		657026	2					
ANR	657156	UnaryOperationExpression	& slot_number		657026	0					
ANR	657157	UnaryOperator	&		657026	0					
ANR	657158	Identifier	slot_number		657026	1					
ANR	657159	PrimaryExpression	1		657026	1					
ANR	657160	CompoundStatement		27:56:720:720	657026	1					
ANR	657161	ExpressionStatement	slot_number = 0	2707:4:74762:74777	657026	0	True				
ANR	657162	AssignmentExpression	slot_number = 0		657026	0		=			
ANR	657163	Identifier	slot_number		657026	0					
ANR	657164	PrimaryExpression	0		657026	1					
ANR	657165	ExpressionStatement	free ( logappend )	2711:2:74792:74807	657026	6	True				
ANR	657166	CallExpression	free ( logappend )		657026	0					
ANR	657167	Callee	free		657026	0					
ANR	657168	Identifier	free		657026	0					
ANR	657169	ArgumentList	logappend		657026	1					
ANR	657170	Argument	logappend		657026	0					
ANR	657171	Identifier	logappend		657026	0					
ANR	657172	ReturnStatement	return slot_number ;	2714:1:74814:74832	657026	4	True				
ANR	657173	Identifier	slot_number		657026	0					
ANR	657174	ReturnType	int		657026	1					
ANR	657175	Identifier	CStarter :: getMySlotNumber		657026	2					
ANR	657176	ParameterList			657026	3					
ANR	657177	CFGEntryNode	ENTRY		657026		True				
ANR	657178	CFGExitNode	EXIT		657026		True				
ANR	657179	Symbol	NULL		657026						
ANR	657180	Symbol	prefix . Value		657026						
ANR	657181	Symbol	prefix		657026						
ANR	657182	Symbol	resource_prefix		657026						
ANR	657183	Symbol	log_basename		657026						
ANR	657184	Symbol	& slot_number		657026						
ANR	657185	Symbol	param		657026						
ANR	657186	Symbol	strstr		657026						
ANR	657187	Symbol	tmp		657026						
ANR	657188	Symbol	sscanf		657026						
ANR	657189	Symbol	logappend		657026						
ANR	657190	Symbol	condor_basename		657026						
ANR	657191	Symbol	slot_number		657026						
ANR	657192	Function	CStarter :: closeSavedStdin	2718:0:74838:74967							
ANR	657193	FunctionDef	CStarter :: closeSavedStdin ()		657192	0					
ANR	657194	CompoundStatement		2720:0:74877:74967	657192	0					
ANR	657195	IfStatement	if ( starter_stdin_fd > - 1 )		657192	0					
ANR	657196	Condition	starter_stdin_fd > - 1	2721:5:74884:74904	657192	0	True				
ANR	657197	RelationalExpression	starter_stdin_fd > - 1		657192	0		>			
ANR	657198	Identifier	starter_stdin_fd		657192	0					
ANR	657199	UnaryOperationExpression	- 1		657192	1					
ANR	657200	UnaryOperator	-		657192	0					
ANR	657201	PrimaryExpression	1		657192	1					
ANR	657202	CompoundStatement		2:29:30:30	657192	1					
ANR	657203	ExpressionStatement	close ( starter_stdin_fd )	2722:2:74912:74937	657192	0	True				
ANR	657204	CallExpression	close ( starter_stdin_fd )		657192	0					
ANR	657205	Callee	close		657192	0					
ANR	657206	Identifier	close		657192	0					
ANR	657207	ArgumentList	starter_stdin_fd		657192	1					
ANR	657208	Argument	starter_stdin_fd		657192	0					
ANR	657209	Identifier	starter_stdin_fd		657192	0					
ANR	657210	ExpressionStatement	starter_stdin_fd = - 1	2723:2:74941:74962	657192	1	True				
ANR	657211	AssignmentExpression	starter_stdin_fd = - 1		657192	0		=			
ANR	657212	Identifier	starter_stdin_fd		657192	0					
ANR	657213	UnaryOperationExpression	- 1		657192	1					
ANR	657214	UnaryOperator	-		657192	0					
ANR	657215	PrimaryExpression	1		657192	1					
ANR	657216	ReturnType	void		657192	1					
ANR	657217	Identifier	CStarter :: closeSavedStdin		657192	2					
ANR	657218	ParameterList			657192	3					
ANR	657219	CFGEntryNode	ENTRY		657192		True				
ANR	657220	CFGExitNode	EXIT		657192		True				
ANR	657221	Symbol	starter_stdin_fd		657192						
ANR	657222	Function	CStarter :: closeSavedStdout	2728:0:74971:75104							
ANR	657223	FunctionDef	CStarter :: closeSavedStdout ()		657222	0					
ANR	657224	CompoundStatement		2730:0:75011:75104	657222	0					
ANR	657225	IfStatement	if ( starter_stdout_fd > - 1 )		657222	0					
ANR	657226	Condition	starter_stdout_fd > - 1	2731:5:75018:75039	657222	0	True				
ANR	657227	RelationalExpression	starter_stdout_fd > - 1		657222	0		>			
ANR	657228	Identifier	starter_stdout_fd		657222	0					
ANR	657229	UnaryOperationExpression	- 1		657222	1					
ANR	657230	UnaryOperator	-		657222	0					
ANR	657231	PrimaryExpression	1		657222	1					
ANR	657232	CompoundStatement		2:30:31:31	657222	1					
ANR	657233	ExpressionStatement	close ( starter_stdout_fd )	2732:2:75047:75073	657222	0	True				
ANR	657234	CallExpression	close ( starter_stdout_fd )		657222	0					
ANR	657235	Callee	close		657222	0					
ANR	657236	Identifier	close		657222	0					
ANR	657237	ArgumentList	starter_stdout_fd		657222	1					
ANR	657238	Argument	starter_stdout_fd		657222	0					
ANR	657239	Identifier	starter_stdout_fd		657222	0					
ANR	657240	ExpressionStatement	starter_stdout_fd = - 1	2733:2:75077:75099	657222	1	True				
ANR	657241	AssignmentExpression	starter_stdout_fd = - 1		657222	0		=			
ANR	657242	Identifier	starter_stdout_fd		657222	0					
ANR	657243	UnaryOperationExpression	- 1		657222	1					
ANR	657244	UnaryOperator	-		657222	0					
ANR	657245	PrimaryExpression	1		657222	1					
ANR	657246	ReturnType	void		657222	1					
ANR	657247	Identifier	CStarter :: closeSavedStdout		657222	2					
ANR	657248	ParameterList			657222	3					
ANR	657249	CFGEntryNode	ENTRY		657222		True				
ANR	657250	CFGExitNode	EXIT		657222		True				
ANR	657251	Symbol	starter_stdout_fd		657222						
ANR	657252	Function	CStarter :: closeSavedStderr	2738:0:75108:75241							
ANR	657253	FunctionDef	CStarter :: closeSavedStderr ()		657252	0					
ANR	657254	CompoundStatement		2740:0:75148:75241	657252	0					
ANR	657255	IfStatement	if ( starter_stderr_fd > - 1 )		657252	0					
ANR	657256	Condition	starter_stderr_fd > - 1	2741:5:75155:75176	657252	0	True				
ANR	657257	RelationalExpression	starter_stderr_fd > - 1		657252	0		>			
ANR	657258	Identifier	starter_stderr_fd		657252	0					
ANR	657259	UnaryOperationExpression	- 1		657252	1					
ANR	657260	UnaryOperator	-		657252	0					
ANR	657261	PrimaryExpression	1		657252	1					
ANR	657262	CompoundStatement		2:30:31:31	657252	1					
ANR	657263	ExpressionStatement	close ( starter_stderr_fd )	2742:2:75184:75210	657252	0	True				
ANR	657264	CallExpression	close ( starter_stderr_fd )		657252	0					
ANR	657265	Callee	close		657252	0					
ANR	657266	Identifier	close		657252	0					
ANR	657267	ArgumentList	starter_stderr_fd		657252	1					
ANR	657268	Argument	starter_stderr_fd		657252	0					
ANR	657269	Identifier	starter_stderr_fd		657252	0					
ANR	657270	ExpressionStatement	starter_stderr_fd = - 1	2743:2:75214:75236	657252	1	True				
ANR	657271	AssignmentExpression	starter_stderr_fd = - 1		657252	0		=			
ANR	657272	Identifier	starter_stderr_fd		657252	0					
ANR	657273	UnaryOperationExpression	- 1		657252	1					
ANR	657274	UnaryOperator	-		657252	0					
ANR	657275	PrimaryExpression	1		657252	1					
ANR	657276	ReturnType	void		657252	1					
ANR	657277	Identifier	CStarter :: closeSavedStderr		657252	2					
ANR	657278	ParameterList			657252	3					
ANR	657279	CFGEntryNode	ENTRY		657252		True				
ANR	657280	CFGExitNode	EXIT		657252		True				
ANR	657281	Symbol	starter_stderr_fd		657252						
ANR	657282	DeclStmt									
ANR	657283	Decl							ClassAd	ClassAd	ad
ANR	657284	DeclStmt									
ANR	657285	Decl							ReliSock	ReliSock *	rsock
ANR	657286	DeclStmt									
ANR	657287	Decl							int	int	cmd
ANR	657288	DeclStmt									
ANR	657289	Decl							const char	const char *	tmp
ANR	657290	DeclStmt									
ANR	657291	Decl							MyString	MyString	err_msg
ANR	657292	Function	CStarter :: updateX509Proxy	2781:0:75952:76122							
ANR	657293	FunctionDef	"CStarter :: updateX509Proxy (int cmd , Stream * s)"		657292	0					
ANR	657294	CompoundStatement		2783:0:76005:76122	657292	0					
ANR	657295	ExpressionStatement	ASSERT ( s )	2784:1:76008:76017	657292	0	True				
ANR	657296	CallExpression	ASSERT ( s )		657292	0					
ANR	657297	Callee	ASSERT		657292	0					
ANR	657298	Identifier	ASSERT		657292	0					
ANR	657299	ArgumentList	s		657292	1					
ANR	657300	Argument	s		657292	0					
ANR	657301	Identifier	s		657292	0					
ANR	657302	IdentifierDeclStatement	ReliSock * rsock = ( ReliSock * ) s ;	2785:1:76020:76050	657292	1	True				
ANR	657303	IdentifierDecl	* rsock = ( ReliSock * ) s		657292	0					
ANR	657304	IdentifierDeclType	ReliSock *		657292	0					
ANR	657305	Identifier	rsock		657292	1					
ANR	657306	AssignmentExpression	* rsock = ( ReliSock * ) s		657292	2		=			
ANR	657307	Identifier	rsock		657292	0					
ANR	657308	CastExpression	( ReliSock * ) s		657292	1					
ANR	657309	CastTarget	ReliSock *		657292	0					
ANR	657310	Identifier	s		657292	1					
ANR	657311	ExpressionStatement	ASSERT ( jic )	2786:1:76053:76064	657292	2	True				
ANR	657312	CallExpression	ASSERT ( jic )		657292	0					
ANR	657313	Callee	ASSERT		657292	0					
ANR	657314	Identifier	ASSERT		657292	0					
ANR	657315	ArgumentList	jic		657292	1					
ANR	657316	Argument	jic		657292	0					
ANR	657317	Identifier	jic		657292	0					
ANR	657318	ReturnStatement	"return jic -> updateX509Proxy ( cmd , rsock ) ? TRUE : FALSE ;"	2787:1:76067:76120	657292	3	True				
ANR	657319	ConditionalExpression	"jic -> updateX509Proxy ( cmd , rsock ) ? TRUE : FALSE"		657292	0					
ANR	657320	Condition	"jic -> updateX509Proxy ( cmd , rsock )"		657292	0					
ANR	657321	CallExpression	"jic -> updateX509Proxy ( cmd , rsock )"		657292	0					
ANR	657322	Callee	jic -> updateX509Proxy		657292	0					
ANR	657323	PtrMemberAccess	jic -> updateX509Proxy		657292	0					
ANR	657324	Identifier	jic		657292	0					
ANR	657325	Identifier	updateX509Proxy		657292	1					
ANR	657326	ArgumentList	cmd		657292	1					
ANR	657327	Argument	cmd		657292	0					
ANR	657328	Identifier	cmd		657292	0					
ANR	657329	Argument	rsock		657292	1					
ANR	657330	Identifier	rsock		657292	0					
ANR	657331	Identifier	TRUE		657292	1					
ANR	657332	Identifier	FALSE		657292	2					
ANR	657333	ReturnType	int		657292	1					
ANR	657334	Identifier	CStarter :: updateX509Proxy		657292	2					
ANR	657335	ParameterList	"int cmd , Stream * s"		657292	3					
ANR	657336	Parameter	int cmd	2782:27:75984:75990	657292	0	True				
ANR	657337	ParameterType	int		657292	0					
ANR	657338	Identifier	cmd		657292	1					
ANR	657339	Parameter	Stream * s	2782:36:75993:76001	657292	1	True				
ANR	657340	ParameterType	Stream *		657292	0					
ANR	657341	Identifier	s		657292	1					
ANR	657342	CFGEntryNode	ENTRY		657292		True				
ANR	657343	CFGExitNode	EXIT		657292		True				
ANR	657344	Symbol	s		657292						
ANR	657345	Symbol	jic		657292						
ANR	657346	Symbol	jic -> updateX509Proxy		657292						
ANR	657347	Symbol	TRUE		657292						
ANR	657348	Symbol	rsock		657292						
ANR	657349	Symbol	FALSE		657292						
ANR	657350	Symbol	cmd		657292						
ANR	657351	Symbol	* jic		657292						
ANR	657352	Function	CStarter :: removeTempExecuteDir	2791:0:76126:77138							
ANR	657353	FunctionDef	CStarter :: removeTempExecuteDir ()		657352	0					
ANR	657354	CompoundStatement		2793:0:76170:77138	657352	0					
ANR	657355	IfStatement	if ( is_gridshell )		657352	0					
ANR	657356	Condition	is_gridshell	2794:5:76177:76188	657352	0	True				
ANR	657357	Identifier	is_gridshell		657352	0					
ANR	657358	CompoundStatement		2:20:21:21	657352	1					
ANR	657359	ReturnStatement	return true ;	2796:2:76255:76266	657352	0	True				
ANR	657360	Identifier	true		657352	0					
ANR	657361	IdentifierDeclStatement	"MyString dir_name = ""dir_"" ;"	2799:1:76273:76299	657352	1	True				
ANR	657362	IdentifierDecl	"dir_name = ""dir_"""		657352	0					
ANR	657363	IdentifierDeclType	MyString		657352	0					
ANR	657364	Identifier	dir_name		657352	1					
ANR	657365	AssignmentExpression	"dir_name = ""dir_"""		657352	2		=			
ANR	657366	Identifier	dir_name		657352	0					
ANR	657367	PrimaryExpression	"""dir_"""		657352	1					
ANR	657368	ExpressionStatement	dir_name += ( int ) daemonCore -> getpid ( )	2800:1:76302:76339	657352	2	True				
ANR	657369	AssignmentExpression	dir_name += ( int ) daemonCore -> getpid ( )		657352	0		+=			
ANR	657370	Identifier	dir_name		657352	0					
ANR	657371	CastExpression	( int ) daemonCore -> getpid ( )		657352	1					
ANR	657372	CastTarget	int		657352	0					
ANR	657373	CallExpression	daemonCore -> getpid ( )		657352	1					
ANR	657374	Callee	daemonCore -> getpid		657352	0					
ANR	657375	PtrMemberAccess	daemonCore -> getpid		657352	0					
ANR	657376	Identifier	daemonCore		657352	0					
ANR	657377	Identifier	getpid		657352	1					
ANR	657378	ArgumentList			657352	1					
ANR	657379	IfStatement	if ( condorPrivSepHelper ( ) != NULL )		657352	3					
ANR	657380	Condition	condorPrivSepHelper ( ) != NULL	2803:5:76367:76395	657352	0	True				
ANR	657381	EqualityExpression	condorPrivSepHelper ( ) != NULL		657352	0		!=			
ANR	657382	CallExpression	condorPrivSepHelper ( )		657352	0					
ANR	657383	Callee	condorPrivSepHelper		657352	0					
ANR	657384	Identifier	condorPrivSepHelper		657352	0					
ANR	657385	ArgumentList			657352	1					
ANR	657386	Identifier	NULL		657352	1					
ANR	657387	CompoundStatement		12:2:231:249	657352	1					
ANR	657388	IdentifierDeclStatement	MyString path_name ;	2804:2:76402:76420	657352	0	True				
ANR	657389	IdentifierDecl	path_name		657352	0					
ANR	657390	IdentifierDeclType	MyString		657352	0					
ANR	657391	Identifier	path_name		657352	1					
ANR	657392	ExpressionStatement	"path_name . sprintf ( ""%s/%s"" , Execute , dir_name . Value ( ) )"	2805:2:76424:76477	657352	1	True				
ANR	657393	CallExpression	"path_name . sprintf ( ""%s/%s"" , Execute , dir_name . Value ( ) )"		657352	0					
ANR	657394	Callee	path_name . sprintf		657352	0					
ANR	657395	MemberAccess	path_name . sprintf		657352	0					
ANR	657396	Identifier	path_name		657352	0					
ANR	657397	Identifier	sprintf		657352	1					
ANR	657398	ArgumentList	"""%s/%s"""		657352	1					
ANR	657399	Argument	"""%s/%s"""		657352	0					
ANR	657400	PrimaryExpression	"""%s/%s"""		657352	0					
ANR	657401	Argument	Execute		657352	1					
ANR	657402	Identifier	Execute		657352	0					
ANR	657403	Argument	dir_name . Value ( )		657352	2					
ANR	657404	CallExpression	dir_name . Value ( )		657352	0					
ANR	657405	Callee	dir_name . Value		657352	0					
ANR	657406	MemberAccess	dir_name . Value		657352	0					
ANR	657407	Identifier	dir_name		657352	0					
ANR	657408	Identifier	Value		657352	1					
ANR	657409	ArgumentList			657352	1					
ANR	657410	IfStatement	if ( ! privsep_remove_dir ( path_name . Value ( ) ) )		657352	2					
ANR	657411	Condition	! privsep_remove_dir ( path_name . Value ( ) )	2806:6:76485:76522	657352	0	True				
ANR	657412	UnaryOperationExpression	! privsep_remove_dir ( path_name . Value ( ) )		657352	0					
ANR	657413	UnaryOperator	!		657352	0					
ANR	657414	CallExpression	privsep_remove_dir ( path_name . Value ( ) )		657352	1					
ANR	657415	Callee	privsep_remove_dir		657352	0					
ANR	657416	Identifier	privsep_remove_dir		657352	0					
ANR	657417	ArgumentList	path_name . Value ( )		657352	1					
ANR	657418	Argument	path_name . Value ( )		657352	0					
ANR	657419	CallExpression	path_name . Value ( )		657352	0					
ANR	657420	Callee	path_name . Value		657352	0					
ANR	657421	MemberAccess	path_name . Value		657352	0					
ANR	657422	Identifier	path_name		657352	0					
ANR	657423	Identifier	Value		657352	1					
ANR	657424	ArgumentList			657352	1					
ANR	657425	CompoundStatement		14:46:354:354	657352	1					
ANR	657426	ExpressionStatement	"dprintf ( D_ALWAYS , ""privsep_remove_dir failed for %s\\n"" , path_name . Value ( ) )"	2807:3:76530:76626	657352	0	True				
ANR	657427	CallExpression	"dprintf ( D_ALWAYS , ""privsep_remove_dir failed for %s\\n"" , path_name . Value ( ) )"		657352	0					
ANR	657428	Callee	dprintf		657352	0					
ANR	657429	Identifier	dprintf		657352	0					
ANR	657430	ArgumentList	D_ALWAYS		657352	1					
ANR	657431	Argument	D_ALWAYS		657352	0					
ANR	657432	Identifier	D_ALWAYS		657352	0					
ANR	657433	Argument	"""privsep_remove_dir failed for %s\\n"""		657352	1					
ANR	657434	PrimaryExpression	"""privsep_remove_dir failed for %s\\n"""		657352	0					
ANR	657435	Argument	path_name . Value ( )		657352	2					
ANR	657436	CallExpression	path_name . Value ( )		657352	0					
ANR	657437	Callee	path_name . Value		657352	0					
ANR	657438	MemberAccess	path_name . Value		657352	0					
ANR	657439	Identifier	path_name		657352	0					
ANR	657440	Identifier	Value		657352	1					
ANR	657441	ArgumentList			657352	1					
ANR	657442	ReturnStatement	return false ;	2810:3:76631:76643	657352	1	True				
ANR	657443	Identifier	false		657352	0					
ANR	657444	ReturnStatement	return true ;	2812:2:76651:76662	657352	3	True				
ANR	657445	Identifier	true		657352	0					
ANR	657446	IdentifierDeclStatement	"Directory execute_dir ( Execute , PRIV_ROOT ) ;"	2816:1:76676:76719	657352	4	True				
ANR	657447	IdentifierDecl	"execute_dir ( Execute , PRIV_ROOT )"		657352	0					
ANR	657448	IdentifierDeclType	Directory		657352	0					
ANR	657449	Identifier	execute_dir		657352	1					
ANR	657450	Expression	"Execute , PRIV_ROOT"		657352	2					
ANR	657451	Identifier	Execute		657352	0					
ANR	657452	Identifier	PRIV_ROOT		657352	1					
ANR	657453	IfStatement	if ( execute_dir . Find_Named_Entry ( dir_name . Value ( ) ) )		657352	5					
ANR	657454	Condition	execute_dir . Find_Named_Entry ( dir_name . Value ( ) )	2817:6:76727:76774	657352	0	True				
ANR	657455	CallExpression	execute_dir . Find_Named_Entry ( dir_name . Value ( ) )		657352	0					
ANR	657456	Callee	execute_dir . Find_Named_Entry		657352	0					
ANR	657457	MemberAccess	execute_dir . Find_Named_Entry		657352	0					
ANR	657458	Identifier	execute_dir		657352	0					
ANR	657459	Identifier	Find_Named_Entry		657352	1					
ANR	657460	ArgumentList	dir_name . Value ( )		657352	1					
ANR	657461	Argument	dir_name . Value ( )		657352	0					
ANR	657462	CallExpression	dir_name . Value ( )		657352	0					
ANR	657463	Callee	dir_name . Value		657352	0					
ANR	657464	MemberAccess	dir_name . Value		657352	0					
ANR	657465	Identifier	dir_name		657352	0					
ANR	657466	Identifier	Value		657352	1					
ANR	657467	ArgumentList			657352	1					
ANR	657468	CompoundStatement		25:57:607:607	657352	1					
ANR	657469	ExpressionStatement	chdir ( Execute )	2822:2:76965:76979	657352	0	True				
ANR	657470	CallExpression	chdir ( Execute )		657352	0					
ANR	657471	Callee	chdir		657352	0					
ANR	657472	Identifier	chdir		657352	0					
ANR	657473	ArgumentList	Execute		657352	1					
ANR	657474	Argument	Execute		657352	0					
ANR	657475	Identifier	Execute		657352	0					
ANR	657476	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Removing %s%c%s\\n"" , Execute , DIR_DELIM_CHAR , dir_name . Value ( ) )"	2824:2:76984:77075	657352	1	True				
ANR	657477	CallExpression	"dprintf ( D_FULLDEBUG , ""Removing %s%c%s\\n"" , Execute , DIR_DELIM_CHAR , dir_name . Value ( ) )"		657352	0					
ANR	657478	Callee	dprintf		657352	0					
ANR	657479	Identifier	dprintf		657352	0					
ANR	657480	ArgumentList	D_FULLDEBUG		657352	1					
ANR	657481	Argument	D_FULLDEBUG		657352	0					
ANR	657482	Identifier	D_FULLDEBUG		657352	0					
ANR	657483	Argument	"""Removing %s%c%s\\n"""		657352	1					
ANR	657484	PrimaryExpression	"""Removing %s%c%s\\n"""		657352	0					
ANR	657485	Argument	Execute		657352	2					
ANR	657486	Identifier	Execute		657352	0					
ANR	657487	Argument	DIR_DELIM_CHAR		657352	3					
ANR	657488	Identifier	DIR_DELIM_CHAR		657352	0					
ANR	657489	Argument	dir_name . Value ( )		657352	4					
ANR	657490	CallExpression	dir_name . Value ( )		657352	0					
ANR	657491	Callee	dir_name . Value		657352	0					
ANR	657492	MemberAccess	dir_name . Value		657352	0					
ANR	657493	Identifier	dir_name		657352	0					
ANR	657494	Identifier	Value		657352	1					
ANR	657495	ArgumentList			657352	1					
ANR	657496	ReturnStatement	return execute_dir . Remove_Current_File ( ) ;	2826:2:77079:77119	657352	2	True				
ANR	657497	CallExpression	execute_dir . Remove_Current_File ( )		657352	0					
ANR	657498	Callee	execute_dir . Remove_Current_File		657352	0					
ANR	657499	MemberAccess	execute_dir . Remove_Current_File		657352	0					
ANR	657500	Identifier	execute_dir		657352	0					
ANR	657501	Identifier	Remove_Current_File		657352	1					
ANR	657502	ArgumentList			657352	1					
ANR	657503	ReturnStatement	return true ;	2828:1:77125:77136	657352	6	True				
ANR	657504	Identifier	true		657352	0					
ANR	657505	ReturnType	bool		657352	1					
ANR	657506	Identifier	CStarter :: removeTempExecuteDir		657352	2					
ANR	657507	ParameterList			657352	3					
ANR	657508	CFGEntryNode	ENTRY		657352		True				
ANR	657509	CFGExitNode	EXIT		657352		True				
ANR	657510	Symbol	condorPrivSepHelper		657352						
ANR	657511	Symbol	execute_dir		657352						
ANR	657512	Symbol	path_name . Value		657352						
ANR	657513	Symbol	NULL		657352						
ANR	657514	Symbol	Execute		657352						
ANR	657515	Symbol	dir_name		657352						
ANR	657516	Symbol	DIR_DELIM_CHAR		657352						
ANR	657517	Symbol	daemonCore -> getpid		657352						
ANR	657518	Symbol	D_ALWAYS		657352						
ANR	657519	Symbol	false		657352						
ANR	657520	Symbol	D_FULLDEBUG		657352						
ANR	657521	Symbol	execute_dir . Find_Named_Entry		657352						
ANR	657522	Symbol	is_gridshell		657352						
ANR	657523	Symbol	* daemonCore		657352						
ANR	657524	Symbol	daemonCore		657352						
ANR	657525	Symbol	true		657352						
ANR	657526	Symbol	execute_dir . Remove_Current_File		657352						
ANR	657527	Symbol	privsep_remove_dir		657352						
ANR	657528	Symbol	dir_name . Value		657352						
ANR	657529	Symbol	path_name		657352						
ANR	657530	Function	CStarter :: exitAfterGlexec	2832:0:77161:77896							
ANR	657531	FunctionDef	CStarter :: exitAfterGlexec (int code)		657530	0					
ANR	657532	CompoundStatement		2834:0:77204:77896	657530	0					
ANR	657533	ExpressionStatement	daemonCore -> Proc_Family_Cleanup ( )	2838:1:77361:77394	657530	0	True				
ANR	657534	CallExpression	daemonCore -> Proc_Family_Cleanup ( )		657530	0					
ANR	657535	Callee	daemonCore -> Proc_Family_Cleanup		657530	0					
ANR	657536	PtrMemberAccess	daemonCore -> Proc_Family_Cleanup		657530	0					
ANR	657537	Identifier	daemonCore		657530	0					
ANR	657538	Identifier	Proc_Family_Cleanup		657530	1					
ANR	657539	ArgumentList			657530	1					
ANR	657540	ExpressionStatement	"chdir ( ""/"" )"	2844:1:77639:77651	657530	1	True				
ANR	657541	CallExpression	"chdir ( ""/"" )"		657530	0					
ANR	657542	Callee	chdir		657530	0					
ANR	657543	Identifier	chdir		657530	0					
ANR	657544	ArgumentList	"""/"""		657530	1					
ANR	657545	Argument	"""/"""		657530	0					
ANR	657546	PrimaryExpression	"""/"""		657530	0					
ANR	657547	IdentifierDeclStatement	char * glexec_dir_path = condor_dirname ( Execute ) ;	2845:1:77654:77703	657530	2	True				
ANR	657548	IdentifierDecl	* glexec_dir_path = condor_dirname ( Execute )		657530	0					
ANR	657549	IdentifierDeclType	char *		657530	0					
ANR	657550	Identifier	glexec_dir_path		657530	1					
ANR	657551	AssignmentExpression	* glexec_dir_path = condor_dirname ( Execute )		657530	2		=			
ANR	657552	Identifier	glexec_dir_path		657530	0					
ANR	657553	CallExpression	condor_dirname ( Execute )		657530	1					
ANR	657554	Callee	condor_dirname		657530	0					
ANR	657555	Identifier	condor_dirname		657530	0					
ANR	657556	ArgumentList	Execute		657530	1					
ANR	657557	Argument	Execute		657530	0					
ANR	657558	Identifier	Execute		657530	0					
ANR	657559	ExpressionStatement	ASSERT ( glexec_dir_path )	2846:1:77706:77731	657530	3	True				
ANR	657560	CallExpression	ASSERT ( glexec_dir_path )		657530	0					
ANR	657561	Callee	ASSERT		657530	0					
ANR	657562	Identifier	ASSERT		657530	0					
ANR	657563	ArgumentList	glexec_dir_path		657530	1					
ANR	657564	Argument	glexec_dir_path		657530	0					
ANR	657565	Identifier	glexec_dir_path		657530	0					
ANR	657566	IdentifierDeclStatement	Directory glexec_dir ( glexec_dir_path ) ;	2847:1:77734:77773	657530	4	True				
ANR	657567	IdentifierDecl	glexec_dir ( glexec_dir_path )		657530	0					
ANR	657568	IdentifierDeclType	Directory		657530	0					
ANR	657569	Identifier	glexec_dir		657530	1					
ANR	657570	Identifier	glexec_dir_path		657530	2					
ANR	657571	ExpressionStatement	glexec_dir . Remove_Entire_Directory ( )	2848:1:77776:77812	657530	5	True				
ANR	657572	CallExpression	glexec_dir . Remove_Entire_Directory ( )		657530	0					
ANR	657573	Callee	glexec_dir . Remove_Entire_Directory		657530	0					
ANR	657574	MemberAccess	glexec_dir . Remove_Entire_Directory		657530	0					
ANR	657575	Identifier	glexec_dir		657530	0					
ANR	657576	Identifier	Remove_Entire_Directory		657530	1					
ANR	657577	ArgumentList			657530	1					
ANR	657578	ExpressionStatement	rmdir ( glexec_dir_path )	2849:1:77815:77839	657530	6	True				
ANR	657579	CallExpression	rmdir ( glexec_dir_path )		657530	0					
ANR	657580	Callee	rmdir		657530	0					
ANR	657581	Identifier	rmdir		657530	0					
ANR	657582	ArgumentList	glexec_dir_path		657530	1					
ANR	657583	Argument	glexec_dir_path		657530	0					
ANR	657584	Identifier	glexec_dir_path		657530	0					
ANR	657585	ExpressionStatement	free ( glexec_dir_path )	2850:1:77842:77865	657530	7	True				
ANR	657586	CallExpression	free ( glexec_dir_path )		657530	0					
ANR	657587	Callee	free		657530	0					
ANR	657588	Identifier	free		657530	0					
ANR	657589	ArgumentList	glexec_dir_path		657530	1					
ANR	657590	Argument	glexec_dir_path		657530	0					
ANR	657591	Identifier	glexec_dir_path		657530	0					
ANR	657592	ExpressionStatement	exit ( code )	2853:1:77882:77894	657530	8	True				
ANR	657593	CallExpression	exit ( code )		657530	0					
ANR	657594	Callee	exit		657530	0					
ANR	657595	Identifier	exit		657530	0					
ANR	657596	ArgumentList	code		657530	1					
ANR	657597	Argument	code		657530	0					
ANR	657598	Identifier	code		657530	0					
ANR	657599	ReturnType	void		657530	1					
ANR	657600	Identifier	CStarter :: exitAfterGlexec		657530	2					
ANR	657601	ParameterList	int code		657530	3					
ANR	657602	Parameter	int code	2833:27:77193:77200	657530	0	True				
ANR	657603	ParameterType	int		657530	0					
ANR	657604	Identifier	code		657530	1					
ANR	657605	CFGEntryNode	ENTRY		657530		True				
ANR	657606	CFGExitNode	EXIT		657530		True				
ANR	657607	Symbol	glexec_dir_path		657530						
ANR	657608	Symbol	code		657530						
ANR	657609	Symbol	glexec_dir		657530						
ANR	657610	Symbol	Execute		657530						
ANR	657611	Symbol	daemonCore		657530						
ANR	657612	Symbol	condor_dirname		657530						
ANR	657613	Function	CStarter :: WriteAdFiles	2857:0:77906:79207							
ANR	657614	FunctionDef	CStarter :: WriteAdFiles ()		657613	0					
ANR	657615	CompoundStatement		2859:0:77936:79207	657613	0					
ANR	657616	IdentifierDeclStatement	ClassAd * ad ;	2861:1:77940:77951	657613	0	True				
ANR	657617	IdentifierDecl	* ad		657613	0					
ANR	657618	IdentifierDeclType	ClassAd *		657613	0					
ANR	657619	Identifier	ad		657613	1					
ANR	657620	IdentifierDeclStatement	const char * dir = this -> GetWorkingDir ( ) ;	2862:1:77954:77993	657613	1	True				
ANR	657621	IdentifierDecl	* dir = this -> GetWorkingDir ( )		657613	0					
ANR	657622	IdentifierDeclType	const char *		657613	0					
ANR	657623	Identifier	dir		657613	1					
ANR	657624	AssignmentExpression	* dir = this -> GetWorkingDir ( )		657613	2		=			
ANR	657625	Identifier	dir		657613	0					
ANR	657626	CallExpression	this -> GetWorkingDir ( )		657613	1					
ANR	657627	Callee	this -> GetWorkingDir		657613	0					
ANR	657628	PtrMemberAccess	this -> GetWorkingDir		657613	0					
ANR	657629	Identifier	this		657613	0					
ANR	657630	Identifier	GetWorkingDir		657613	1					
ANR	657631	ArgumentList			657613	1					
ANR	657632	IdentifierDeclStatement	"MyString ad_str , filename ;"	2863:1:77996:78021	657613	2	True				
ANR	657633	IdentifierDecl	ad_str		657613	0					
ANR	657634	IdentifierDeclType	MyString		657613	0					
ANR	657635	Identifier	ad_str		657613	1					
ANR	657636	IdentifierDecl	filename		657613	1					
ANR	657637	IdentifierDeclType	MyString		657613	0					
ANR	657638	Identifier	filename		657613	1					
ANR	657639	IdentifierDeclStatement	FILE * fp ;	2864:1:78024:78032	657613	3	True				
ANR	657640	IdentifierDecl	* fp		657613	0					
ANR	657641	IdentifierDeclType	FILE *		657613	0					
ANR	657642	Identifier	fp		657613	1					
ANR	657643	IdentifierDeclStatement	bool ret_val = true ;	2865:1:78035:78054	657613	4	True				
ANR	657644	IdentifierDecl	ret_val = true		657613	0					
ANR	657645	IdentifierDeclType	bool		657613	0					
ANR	657646	Identifier	ret_val		657613	1					
ANR	657647	AssignmentExpression	ret_val = true		657613	2		=			
ANR	657648	Identifier	true		657613	0					
ANR	657649	Identifier	true		657613	1					
ANR	657650	ExpressionStatement	ad = this -> jic -> jobClassAd ( )	2868:1:78085:78113	657613	5	True				
ANR	657651	AssignmentExpression	ad = this -> jic -> jobClassAd ( )		657613	0		=			
ANR	657652	Identifier	ad		657613	0					
ANR	657653	CallExpression	this -> jic -> jobClassAd ( )		657613	1					
ANR	657654	Callee	this -> jic -> jobClassAd		657613	0					
ANR	657655	PtrMemberAccess	this -> jic -> jobClassAd		657613	0					
ANR	657656	PtrMemberAccess	this -> jic		657613	0					
ANR	657657	Identifier	this		657613	0					
ANR	657658	Identifier	jic		657613	1					
ANR	657659	Identifier	jobClassAd		657613	1					
ANR	657660	ArgumentList			657613	1					
ANR	657661	IfStatement	if ( ad != NULL )		657613	6					
ANR	657662	Condition	ad != NULL	2869:5:78120:78129	657613	0	True				
ANR	657663	EqualityExpression	ad != NULL		657613	0		!=			
ANR	657664	Identifier	ad		657613	0					
ANR	657665	Identifier	NULL		657613	1					
ANR	657666	CompoundStatement		12:1:196:196	657613	1					
ANR	657667	ExpressionStatement	"filename . sprintf ( ""%s%c%s"" , dir , DIR_DELIM_CHAR , JOB_AD_FILENAME )"	2871:2:78137:78201	657613	0	True				
ANR	657668	CallExpression	"filename . sprintf ( ""%s%c%s"" , dir , DIR_DELIM_CHAR , JOB_AD_FILENAME )"		657613	0					
ANR	657669	Callee	filename . sprintf		657613	0					
ANR	657670	MemberAccess	filename . sprintf		657613	0					
ANR	657671	Identifier	filename		657613	0					
ANR	657672	Identifier	sprintf		657613	1					
ANR	657673	ArgumentList	"""%s%c%s"""		657613	1					
ANR	657674	Argument	"""%s%c%s"""		657613	0					
ANR	657675	PrimaryExpression	"""%s%c%s"""		657613	0					
ANR	657676	Argument	dir		657613	1					
ANR	657677	Identifier	dir		657613	0					
ANR	657678	Argument	DIR_DELIM_CHAR		657613	2					
ANR	657679	Identifier	DIR_DELIM_CHAR		657613	0					
ANR	657680	Argument	JOB_AD_FILENAME		657613	3					
ANR	657681	Identifier	JOB_AD_FILENAME		657613	0					
ANR	657682	ExpressionStatement	"fp = safe_fopen_wrapper_follow ( filename . Value ( ) , ""w"" )"	2872:2:78205:78258	657613	1	True				
ANR	657683	AssignmentExpression	"fp = safe_fopen_wrapper_follow ( filename . Value ( ) , ""w"" )"		657613	0		=			
ANR	657684	Identifier	fp		657613	0					
ANR	657685	CallExpression	"safe_fopen_wrapper_follow ( filename . Value ( ) , ""w"" )"		657613	1					
ANR	657686	Callee	safe_fopen_wrapper_follow		657613	0					
ANR	657687	Identifier	safe_fopen_wrapper_follow		657613	0					
ANR	657688	ArgumentList	filename . Value ( )		657613	1					
ANR	657689	Argument	filename . Value ( )		657613	0					
ANR	657690	CallExpression	filename . Value ( )		657613	0					
ANR	657691	Callee	filename . Value		657613	0					
ANR	657692	MemberAccess	filename . Value		657613	0					
ANR	657693	Identifier	filename		657613	0					
ANR	657694	Identifier	Value		657613	1					
ANR	657695	ArgumentList			657613	1					
ANR	657696	Argument	"""w"""		657613	1					
ANR	657697	PrimaryExpression	"""w"""		657613	0					
ANR	657698	IfStatement	if ( ! fp )		657613	2					
ANR	657699	Condition	! fp	2873:6:78266:78268	657613	0	True				
ANR	657700	UnaryOperationExpression	! fp		657613	0					
ANR	657701	UnaryOperator	!		657613	0					
ANR	657702	Identifier	fp		657613	1					
ANR	657703	CompoundStatement		16:2:336:336	657613	1					
ANR	657704	Statement	dprintf	2875:3:78278:78284	657613	0	True				
ANR	657705	Statement	(	2875:10:78285:78285	657613	1	True				
ANR	657706	Statement	D_ALWAYS	2875:11:78286:78293	657613	2	True				
ANR	657707	Statement	","	2875:19:78294:78294	657613	3	True				
ANR	657708	Statement	"""Failed to open \\""%s\\"" for to write job ad: """	2875:21:78296:78340	657613	4	True				
ANR	657709	Statement	"""%s (errno %d)\\n"""	2876:6:78348:78364	657613	5	True				
ANR	657710	Statement	","	2876:23:78365:78365	657613	6	True				
ANR	657711	Statement	filename	2876:25:78367:78374	657613	7	True				
ANR	657712	Statement	.	2876:33:78375:78375	657613	8	True				
ANR	657713	Statement	Value	2876:34:78376:78380	657613	9	True				
ANR	657714	Statement	(	2876:39:78381:78381	657613	10	True				
ANR	657715	Statement	)	2876:40:78382:78382	657613	11	True				
ANR	657716	Statement	","	2876:41:78383:78383	657613	12	True				
ANR	657717	Statement	strerror	2877:6:78391:78398	657613	13	True				
ANR	657718	Statement	(	2877:14:78399:78399	657613	14	True				
ANR	657719	Statement	errno	2877:15:78400:78404	657613	15	True				
ANR	657720	Statement	)	2877:20:78405:78405	657613	16	True				
ANR	657721	Statement	","	2877:21:78406:78406	657613	17	True				
ANR	657722	Statement	errno	2877:23:78408:78412	657613	18	True				
ANR	657723	Statement	)	2877:28:78413:78413	657613	19	True				
ANR	657724	ExpressionStatement		2877:29:78414:78414	657613	20	True				
ANR	657725	ExpressionStatement	ret_val = false	2878:3:78419:78434	657613	21	True				
ANR	657726	AssignmentExpression	ret_val = false		657613	0		=			
ANR	657727	Identifier	ret_val		657613	0					
ANR	657728	Identifier	false		657613	1					
ANR	657729	ElseStatement	else		657613	0					
ANR	657730	CompoundStatement		23:2:512:512	657613	0					
ANR	657731	ExpressionStatement	ad -> SetPrivateAttributesInvisible ( true )	2882:3:78454:78493	657613	0	True				
ANR	657732	CallExpression	ad -> SetPrivateAttributesInvisible ( true )		657613	0					
ANR	657733	Callee	ad -> SetPrivateAttributesInvisible		657613	0					
ANR	657734	PtrMemberAccess	ad -> SetPrivateAttributesInvisible		657613	0					
ANR	657735	Identifier	ad		657613	0					
ANR	657736	Identifier	SetPrivateAttributesInvisible		657613	1					
ANR	657737	ArgumentList	true		657613	1					
ANR	657738	Argument	true		657613	0					
ANR	657739	Identifier	true		657613	0					
ANR	657740	ExpressionStatement	ad -> fPrint ( fp )	2883:3:78498:78512	657613	1	True				
ANR	657741	CallExpression	ad -> fPrint ( fp )		657613	0					
ANR	657742	Callee	ad -> fPrint		657613	0					
ANR	657743	PtrMemberAccess	ad -> fPrint		657613	0					
ANR	657744	Identifier	ad		657613	0					
ANR	657745	Identifier	fPrint		657613	1					
ANR	657746	ArgumentList	fp		657613	1					
ANR	657747	Argument	fp		657613	0					
ANR	657748	Identifier	fp		657613	0					
ANR	657749	ExpressionStatement	ad -> SetPrivateAttributesInvisible ( false )	2884:3:78517:78557	657613	2	True				
ANR	657750	CallExpression	ad -> SetPrivateAttributesInvisible ( false )		657613	0					
ANR	657751	Callee	ad -> SetPrivateAttributesInvisible		657613	0					
ANR	657752	PtrMemberAccess	ad -> SetPrivateAttributesInvisible		657613	0					
ANR	657753	Identifier	ad		657613	0					
ANR	657754	Identifier	SetPrivateAttributesInvisible		657613	1					
ANR	657755	ArgumentList	false		657613	1					
ANR	657756	Argument	false		657613	0					
ANR	657757	Identifier	false		657613	0					
ANR	657758	ExpressionStatement	fclose ( fp )	2885:3:78562:78572	657613	3	True				
ANR	657759	CallExpression	fclose ( fp )		657613	0					
ANR	657760	Callee	fclose		657613	0					
ANR	657761	Identifier	fclose		657613	0					
ANR	657762	ArgumentList	fp		657613	1					
ANR	657763	Argument	fp		657613	0					
ANR	657764	Identifier	fp		657613	0					
ANR	657765	ElseStatement	else		657613	0					
ANR	657766	CompoundStatement		31:1:651:651	657613	0					
ANR	657767	ExpressionStatement	ret_val = false	2891:2:78638:78653	657613	0	True				
ANR	657768	AssignmentExpression	ret_val = false		657613	0		=			
ANR	657769	Identifier	ret_val		657613	0					
ANR	657770	Identifier	false		657613	1					
ANR	657771	ExpressionStatement	ad = this -> jic -> machClassAd ( )	2895:1:78685:78714	657613	7	True				
ANR	657772	AssignmentExpression	ad = this -> jic -> machClassAd ( )		657613	0		=			
ANR	657773	Identifier	ad		657613	0					
ANR	657774	CallExpression	this -> jic -> machClassAd ( )		657613	1					
ANR	657775	Callee	this -> jic -> machClassAd		657613	0					
ANR	657776	PtrMemberAccess	this -> jic -> machClassAd		657613	0					
ANR	657777	PtrMemberAccess	this -> jic		657613	0					
ANR	657778	Identifier	this		657613	0					
ANR	657779	Identifier	jic		657613	1					
ANR	657780	Identifier	machClassAd		657613	1					
ANR	657781	ArgumentList			657613	1					
ANR	657782	IfStatement	if ( ad != NULL )		657613	8					
ANR	657783	Condition	ad != NULL	2896:5:78721:78730	657613	0	True				
ANR	657784	EqualityExpression	ad != NULL		657613	0		!=			
ANR	657785	Identifier	ad		657613	0					
ANR	657786	Identifier	NULL		657613	1					
ANR	657787	CompoundStatement		39:1:797:797	657613	1					
ANR	657788	ExpressionStatement	"filename . sprintf ( ""%s%c%s"" , dir , DIR_DELIM_CHAR , MACHINE_AD_FILENAME )"	2898:2:78738:78806	657613	0	True				
ANR	657789	CallExpression	"filename . sprintf ( ""%s%c%s"" , dir , DIR_DELIM_CHAR , MACHINE_AD_FILENAME )"		657613	0					
ANR	657790	Callee	filename . sprintf		657613	0					
ANR	657791	MemberAccess	filename . sprintf		657613	0					
ANR	657792	Identifier	filename		657613	0					
ANR	657793	Identifier	sprintf		657613	1					
ANR	657794	ArgumentList	"""%s%c%s"""		657613	1					
ANR	657795	Argument	"""%s%c%s"""		657613	0					
ANR	657796	PrimaryExpression	"""%s%c%s"""		657613	0					
ANR	657797	Argument	dir		657613	1					
ANR	657798	Identifier	dir		657613	0					
ANR	657799	Argument	DIR_DELIM_CHAR		657613	2					
ANR	657800	Identifier	DIR_DELIM_CHAR		657613	0					
ANR	657801	Argument	MACHINE_AD_FILENAME		657613	3					
ANR	657802	Identifier	MACHINE_AD_FILENAME		657613	0					
ANR	657803	ExpressionStatement	"fp = safe_fopen_wrapper_follow ( filename . Value ( ) , ""w"" )"	2899:2:78810:78863	657613	1	True				
ANR	657804	AssignmentExpression	"fp = safe_fopen_wrapper_follow ( filename . Value ( ) , ""w"" )"		657613	0		=			
ANR	657805	Identifier	fp		657613	0					
ANR	657806	CallExpression	"safe_fopen_wrapper_follow ( filename . Value ( ) , ""w"" )"		657613	1					
ANR	657807	Callee	safe_fopen_wrapper_follow		657613	0					
ANR	657808	Identifier	safe_fopen_wrapper_follow		657613	0					
ANR	657809	ArgumentList	filename . Value ( )		657613	1					
ANR	657810	Argument	filename . Value ( )		657613	0					
ANR	657811	CallExpression	filename . Value ( )		657613	0					
ANR	657812	Callee	filename . Value		657613	0					
ANR	657813	MemberAccess	filename . Value		657613	0					
ANR	657814	Identifier	filename		657613	0					
ANR	657815	Identifier	Value		657613	1					
ANR	657816	ArgumentList			657613	1					
ANR	657817	Argument	"""w"""		657613	1					
ANR	657818	PrimaryExpression	"""w"""		657613	0					
ANR	657819	IfStatement	if ( ! fp )		657613	2					
ANR	657820	Condition	! fp	2900:6:78871:78873	657613	0	True				
ANR	657821	UnaryOperationExpression	! fp		657613	0					
ANR	657822	UnaryOperator	!		657613	0					
ANR	657823	Identifier	fp		657613	1					
ANR	657824	CompoundStatement		43:2:941:941	657613	1					
ANR	657825	Statement	dprintf	2902:3:78883:78889	657613	0	True				
ANR	657826	Statement	(	2902:10:78890:78890	657613	1	True				
ANR	657827	Statement	D_ALWAYS	2902:11:78891:78898	657613	2	True				
ANR	657828	Statement	","	2902:19:78899:78899	657613	3	True				
ANR	657829	Statement	"""Failed to open \\""%s\\"" for to write machine """	2902:21:78901:78945	657613	4	True				
ANR	657830	Statement	"""ad: %s (errno %d)\\n"""	2903:6:78953:78973	657613	5	True				
ANR	657831	Statement	","	2903:27:78974:78974	657613	6	True				
ANR	657832	Statement	filename	2903:29:78976:78983	657613	7	True				
ANR	657833	Statement	.	2903:37:78984:78984	657613	8	True				
ANR	657834	Statement	Value	2903:38:78985:78989	657613	9	True				
ANR	657835	Statement	(	2903:43:78990:78990	657613	10	True				
ANR	657836	Statement	)	2903:44:78991:78991	657613	11	True				
ANR	657837	Statement	","	2903:45:78992:78992	657613	12	True				
ANR	657838	Statement	strerror	2904:5:78999:79006	657613	13	True				
ANR	657839	Statement	(	2904:13:79007:79007	657613	14	True				
ANR	657840	Statement	errno	2904:14:79008:79012	657613	15	True				
ANR	657841	Statement	)	2904:19:79013:79013	657613	16	True				
ANR	657842	Statement	","	2904:20:79014:79014	657613	17	True				
ANR	657843	Statement	errno	2904:22:79016:79020	657613	18	True				
ANR	657844	Statement	)	2904:27:79021:79021	657613	19	True				
ANR	657845	ExpressionStatement		2904:28:79022:79022	657613	20	True				
ANR	657846	ExpressionStatement	ret_val = false	2905:3:79027:79042	657613	21	True				
ANR	657847	AssignmentExpression	ret_val = false		657613	0		=			
ANR	657848	Identifier	ret_val		657613	0					
ANR	657849	Identifier	false		657613	1					
ANR	657850	ElseStatement	else		657613	0					
ANR	657851	CompoundStatement		50:2:1120:1120	657613	0					
ANR	657852	ExpressionStatement	ad -> SetPrivateAttributesInvisible ( true )	2909:3:79062:79101	657613	0	True				
ANR	657853	CallExpression	ad -> SetPrivateAttributesInvisible ( true )		657613	0					
ANR	657854	Callee	ad -> SetPrivateAttributesInvisible		657613	0					
ANR	657855	PtrMemberAccess	ad -> SetPrivateAttributesInvisible		657613	0					
ANR	657856	Identifier	ad		657613	0					
ANR	657857	Identifier	SetPrivateAttributesInvisible		657613	1					
ANR	657858	ArgumentList	true		657613	1					
ANR	657859	Argument	true		657613	0					
ANR	657860	Identifier	true		657613	0					
ANR	657861	ExpressionStatement	ad -> fPrint ( fp )	2910:3:79106:79120	657613	1	True				
ANR	657862	CallExpression	ad -> fPrint ( fp )		657613	0					
ANR	657863	Callee	ad -> fPrint		657613	0					
ANR	657864	PtrMemberAccess	ad -> fPrint		657613	0					
ANR	657865	Identifier	ad		657613	0					
ANR	657866	Identifier	fPrint		657613	1					
ANR	657867	ArgumentList	fp		657613	1					
ANR	657868	Argument	fp		657613	0					
ANR	657869	Identifier	fp		657613	0					
ANR	657870	ExpressionStatement	ad -> SetPrivateAttributesInvisible ( false )	2911:3:79125:79165	657613	2	True				
ANR	657871	CallExpression	ad -> SetPrivateAttributesInvisible ( false )		657613	0					
ANR	657872	Callee	ad -> SetPrivateAttributesInvisible		657613	0					
ANR	657873	PtrMemberAccess	ad -> SetPrivateAttributesInvisible		657613	0					
ANR	657874	Identifier	ad		657613	0					
ANR	657875	Identifier	SetPrivateAttributesInvisible		657613	1					
ANR	657876	ArgumentList	false		657613	1					
ANR	657877	Argument	false		657613	0					
ANR	657878	Identifier	false		657613	0					
ANR	657879	ExpressionStatement	fclose ( fp )	2912:3:79170:79180	657613	3	True				
ANR	657880	CallExpression	fclose ( fp )		657613	0					
ANR	657881	Callee	fclose		657613	0					
ANR	657882	Identifier	fclose		657613	0					
ANR	657883	ArgumentList	fp		657613	1					
ANR	657884	Argument	fp		657613	0					
ANR	657885	Identifier	fp		657613	0					
ANR	657886	ReturnStatement	return ret_val ;	2916:1:79191:79205	657613	9	True				
ANR	657887	Identifier	ret_val		657613	0					
ANR	657888	ReturnType	bool		657613	1					
ANR	657889	Identifier	CStarter :: WriteAdFiles		657613	2					
ANR	657890	ParameterList			657613	3					
ANR	657891	CFGEntryNode	ENTRY		657613		True				
ANR	657892	CFGExitNode	EXIT		657613		True				
ANR	657893	Symbol	this -> jic -> jobClassAd		657613						
ANR	657894	Symbol	ad_str		657613						
ANR	657895	Symbol	ad		657613						
ANR	657896	Symbol	NULL		657613						
ANR	657897	Symbol	JOB_AD_FILENAME		657613						
ANR	657898	Symbol	DIR_DELIM_CHAR		657613						
ANR	657899	Symbol	this		657613						
ANR	657900	Symbol	false		657613						
ANR	657901	Symbol	fp		657613						
ANR	657902	Symbol	dir		657613						
ANR	657903	Symbol	ret_val		657613						
ANR	657904	Symbol	filename . Value		657613						
ANR	657905	Symbol	this -> jic		657613						
ANR	657906	Symbol	this -> jic -> machClassAd		657613						
ANR	657907	Symbol	* this -> jic		657613						
ANR	657908	Symbol	* this		657613						
ANR	657909	Symbol	MACHINE_AD_FILENAME		657613						
ANR	657910	Symbol	filename		657613						
ANR	657911	Symbol	this -> GetWorkingDir		657613						
ANR	657912	Symbol	* * this		657613						
ANR	657913	Symbol	true		657613						
ANR	657914	Symbol	safe_fopen_wrapper_follow		657613						
