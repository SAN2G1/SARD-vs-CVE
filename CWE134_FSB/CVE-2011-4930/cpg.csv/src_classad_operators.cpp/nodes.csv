command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2558561	File	data/converged/CVE-2011-4930_htcondor/src_classad_operators.cpp								
ANR	2558562	Function	Operation :: Operation	29:0:965:1094							
ANR	2558563	FunctionDef	Operation :: Operation ()		2558562	0					
ANR	2558564	CompoundStatement		31:0:990:1094	2558562	0					
ANR	2558565	ExpressionStatement	nodeKind = OP_NODE	32:1:993:1011	2558562	0	True				
ANR	2558566	AssignmentExpression	nodeKind = OP_NODE		2558562	0		=			
ANR	2558567	Identifier	nodeKind		2558562	0					
ANR	2558568	Identifier	OP_NODE		2558562	1					
ANR	2558569	ExpressionStatement	operation = __NO_OP__	33:1:1014:1035	2558562	1	True				
ANR	2558570	AssignmentExpression	operation = __NO_OP__		2558562	0		=			
ANR	2558571	Identifier	operation		2558562	0					
ANR	2558572	Identifier	__NO_OP__		2558562	1					
ANR	2558573	ExpressionStatement	child1 = NULL	34:1:1038:1054	2558562	2	True				
ANR	2558574	AssignmentExpression	child1 = NULL		2558562	0		=			
ANR	2558575	Identifier	child1		2558562	0					
ANR	2558576	Identifier	NULL		2558562	1					
ANR	2558577	ExpressionStatement	child2 = NULL	35:1:1057:1073	2558562	3	True				
ANR	2558578	AssignmentExpression	child2 = NULL		2558562	0		=			
ANR	2558579	Identifier	child2		2558562	0					
ANR	2558580	Identifier	NULL		2558562	1					
ANR	2558581	ExpressionStatement	child3 = NULL	36:1:1076:1092	2558562	4	True				
ANR	2558582	AssignmentExpression	child3 = NULL		2558562	0		=			
ANR	2558583	Identifier	child3		2558562	0					
ANR	2558584	Identifier	NULL		2558562	1					
ANR	2558585	Identifier	Operation :: Operation		2558562	1					
ANR	2558586	ParameterList			2558562	2					
ANR	2558587	CFGEntryNode	ENTRY		2558562		True				
ANR	2558588	CFGExitNode	EXIT		2558562		True				
ANR	2558589	Symbol	NULL		2558562						
ANR	2558590	Symbol	__NO_OP__		2558562						
ANR	2558591	Symbol	nodeKind		2558562						
ANR	2558592	Symbol	child2		2558562						
ANR	2558593	Symbol	operation		2558562						
ANR	2558594	Symbol	child3		2558562						
ANR	2558595	Symbol	OP_NODE		2558562						
ANR	2558596	Symbol	child1		2558562						
ANR	2558597	Function	Operation :: Operation	39:0:1097:1172							
ANR	2558598	FunctionDef	Operation :: Operation (const Operation & op)		2558597	0					
ANR	2558599	CompoundStatement		41:0:1140:1172	2558597	0					
ANR	2558600	ExpressionStatement	CopyFrom ( op )	42:4:1146:1158	2558597	0	True				
ANR	2558601	CallExpression	CopyFrom ( op )		2558597	0					
ANR	2558602	Callee	CopyFrom		2558597	0					
ANR	2558603	Identifier	CopyFrom		2558597	0					
ANR	2558604	ArgumentList	op		2558597	1					
ANR	2558605	Argument	op		2558597	0					
ANR	2558606	Identifier	op		2558597	0					
ANR	2558607	ReturnStatement	return ;	43:4:1164:1170	2558597	1	True				
ANR	2558608	Identifier	Operation :: Operation		2558597	1					
ANR	2558609	ParameterList	const Operation & op		2558597	2					
ANR	2558610	Parameter	const Operation & op	40:10:1119:1137	2558597	0	True				
ANR	2558611	ParameterType	const Operation &		2558597	0					
ANR	2558612	Identifier	op		2558597	1					
ANR	2558613	CFGEntryNode	ENTRY		2558597		True				
ANR	2558614	CFGExitNode	EXIT		2558597		True				
ANR	2558615	Symbol	op		2558597						
ANR	2558616	Function	Operation :: ~Operation	46:0:1175:1290							
ANR	2558617	FunctionDef	Operation :: ~Operation ()		2558616	0					
ANR	2558618	CompoundStatement		48:0:1201:1290	2558616	0					
ANR	2558619	IfStatement	if ( child1 )		2558616	0					
ANR	2558620	Condition	child1	49:5:1208:1213	2558616	0	True				
ANR	2558621	Identifier	child1		2558616	0					
ANR	2558622	Statement	delete	49:14:1217:1222	2558616	1	True				
ANR	2558623	ExpressionStatement	child1	49:21:1224:1230	2558616	1	True				
ANR	2558624	Identifier	child1		2558616	0					
ANR	2558625	IfStatement	if ( child2 )		2558616	2					
ANR	2558626	Condition	child2	50:5:1237:1242	2558616	0	True				
ANR	2558627	Identifier	child2		2558616	0					
ANR	2558628	Statement	delete	50:14:1246:1251	2558616	1	True				
ANR	2558629	ExpressionStatement	child2	50:21:1253:1259	2558616	3	True				
ANR	2558630	Identifier	child2		2558616	0					
ANR	2558631	IfStatement	if ( child3 )		2558616	4					
ANR	2558632	Condition	child3	51:5:1266:1271	2558616	0	True				
ANR	2558633	Identifier	child3		2558616	0					
ANR	2558634	Statement	delete	51:14:1275:1280	2558616	1	True				
ANR	2558635	ExpressionStatement	child3	51:21:1282:1288	2558616	5	True				
ANR	2558636	Identifier	child3		2558616	0					
ANR	2558637	Identifier	Operation :: ~Operation		2558616	1					
ANR	2558638	ParameterList			2558616	2					
ANR	2558639	CFGEntryNode	ENTRY		2558616		True				
ANR	2558640	CFGExitNode	EXIT		2558616		True				
ANR	2558641	Symbol	child2		2558616						
ANR	2558642	Symbol	child3		2558616						
ANR	2558643	Symbol	child1		2558616						
ANR	2558644	Function	operator =	55:0:1316:1418							
ANR	2558645	FunctionDef	operator = (const Operation & op)		2558644	0					
ANR	2558646	CompoundStatement		56:0:1347:1418	2558644	0					
ANR	2558647	IfStatement	if ( this != & op )		2558644	0					
ANR	2558648	Condition	this != & op	57:8:1357:1367	2558644	0	True				
ANR	2558649	EqualityExpression	this != & op		2558644	0		!=			
ANR	2558650	Identifier	this		2558644	0					
ANR	2558651	UnaryOperationExpression	& op		2558644	1					
ANR	2558652	UnaryOperator	&		2558644	0					
ANR	2558653	Identifier	op		2558644	1					
ANR	2558654	CompoundStatement		2:21:22:22	2558644	1					
ANR	2558655	ExpressionStatement	CopyFrom ( op )	58:8:1380:1392	2558644	0	True				
ANR	2558656	CallExpression	CopyFrom ( op )		2558644	0					
ANR	2558657	Callee	CopyFrom		2558644	0					
ANR	2558658	Identifier	CopyFrom		2558644	0					
ANR	2558659	ArgumentList	op		2558644	1					
ANR	2558660	Argument	op		2558644	0					
ANR	2558661	Identifier	op		2558644	0					
ANR	2558662	ReturnStatement	return * this ;	60:4:1404:1416	2558644	1	True				
ANR	2558663	UnaryOperationExpression	* this		2558644	0					
ANR	2558664	UnaryOperator	*		2558644	0					
ANR	2558665	Identifier	this		2558644	1					
ANR	2558666	Identifier	operator =		2558644	1					
ANR	2558667	ParameterList	const Operation & op		2558644	2					
ANR	2558668	Parameter	const Operation & op	55:10:1326:1344	2558644	0	True				
ANR	2558669	ParameterType	const Operation &		2558644	0					
ANR	2558670	Identifier	op		2558644	1					
ANR	2558671	CFGEntryNode	ENTRY		2558644		True				
ANR	2558672	CFGExitNode	EXIT		2558644		True				
ANR	2558673	Symbol	* this		2558644						
ANR	2558674	Symbol	op		2558644						
ANR	2558675	Symbol	this		2558644						
ANR	2558676	Symbol	& op		2558644						
ANR	2558677	Function	Operation :: Copy	63:0:1421:1654							
ANR	2558678	FunctionDef	Operation :: Copy ()		2558677	0					
ANR	2558679	CompoundStatement		65:0:1457:1654	2558677	0					
ANR	2558680	IdentifierDeclStatement	Operation * newTree = new Operation ( ) ;	66:1:1460:1497	2558677	0	True				
ANR	2558681	IdentifierDecl	* newTree = new Operation ( )		2558677	0					
ANR	2558682	IdentifierDeclType	Operation *		2558677	0					
ANR	2558683	Identifier	newTree		2558677	1					
ANR	2558684	AssignmentExpression	* newTree = new Operation ( )		2558677	2		=			
ANR	2558685	Identifier	newTree		2558677	0					
ANR	2558686	UnaryExpression	new Operation ( )		2558677	1					
ANR	2558687	IfStatement	if ( newTree != NULL )		2558677	1					
ANR	2558688	Condition	newTree != NULL	67:5:1504:1518	2558677	0	True				
ANR	2558689	EqualityExpression	newTree != NULL		2558677	0		!=			
ANR	2558690	Identifier	newTree		2558677	0					
ANR	2558691	Identifier	NULL		2558677	1					
ANR	2558692	CompoundStatement		3:22:63:63	2558677	1					
ANR	2558693	IfStatement	if ( ! newTree -> CopyFrom ( * this ) )		2558677	0					
ANR	2558694	Condition	! newTree -> CopyFrom ( * this )	68:12:1535:1559	2558677	0	True				
ANR	2558695	UnaryOperationExpression	! newTree -> CopyFrom ( * this )		2558677	0					
ANR	2558696	UnaryOperator	!		2558677	0					
ANR	2558697	CallExpression	newTree -> CopyFrom ( * this )		2558677	1					
ANR	2558698	Callee	newTree -> CopyFrom		2558677	0					
ANR	2558699	PtrMemberAccess	newTree -> CopyFrom		2558677	0					
ANR	2558700	Identifier	newTree		2558677	0					
ANR	2558701	Identifier	CopyFrom		2558677	1					
ANR	2558702	ArgumentList	* this		2558677	1					
ANR	2558703	Argument	* this		2558677	0					
ANR	2558704	UnaryOperationExpression	* this		2558677	0					
ANR	2558705	UnaryOperator	*		2558677	0					
ANR	2558706	Identifier	this		2558677	1					
ANR	2558707	CompoundStatement		4:39:104:104	2558677	1					
ANR	2558708	Statement	delete	69:12:1576:1581	2558677	0	True				
ANR	2558709	ExpressionStatement	newTree	69:19:1583:1590	2558677	1	True				
ANR	2558710	Identifier	newTree		2558677	0					
ANR	2558711	ExpressionStatement	newTree = NULL	70:12:1604:1618	2558677	2	True				
ANR	2558712	AssignmentExpression	newTree = NULL		2558677	0		=			
ANR	2558713	Identifier	newTree		2558677	0					
ANR	2558714	Identifier	NULL		2558677	1					
ANR	2558715	ReturnStatement	return newTree ;	74:1:1638:1652	2558677	2	True				
ANR	2558716	Identifier	newTree		2558677	0					
ANR	2558717	ReturnType	ExprTree *		2558677	1					
ANR	2558718	Identifier	Operation :: Copy		2558677	2					
ANR	2558719	ParameterList			2558677	3					
ANR	2558720	CFGEntryNode	ENTRY		2558677		True				
ANR	2558721	CFGExitNode	EXIT		2558677		True				
ANR	2558722	Symbol	* this		2558677						
ANR	2558723	Symbol	NULL		2558677						
ANR	2558724	Symbol	* newTree		2558677						
ANR	2558725	Symbol	newTree		2558677						
ANR	2558726	Symbol	newTree -> CopyFrom		2558677						
ANR	2558727	Symbol	this		2558677						
ANR	2558728	Function	Operation :: CopyFrom	77:0:1657:2219							
ANR	2558729	FunctionDef	Operation :: CopyFrom (const Operation & op)		2558728	0					
ANR	2558730	CompoundStatement		79:0:1704:2219	2558728	0					
ANR	2558731	IdentifierDeclStatement	bool success ;	80:4:1710:1722	2558728	0	True				
ANR	2558732	IdentifierDecl	success		2558728	0					
ANR	2558733	IdentifierDeclType	bool		2558728	0					
ANR	2558734	Identifier	success		2558728	1					
ANR	2558735	ExpressionStatement	success = true	82:4:1729:1743	2558728	1	True				
ANR	2558736	AssignmentExpression	success = true		2558728	0		=			
ANR	2558737	Identifier	success		2558728	0					
ANR	2558738	Identifier	true		2558728	1					
ANR	2558739	IfStatement	if ( op . child1 && ( child1 = op . child1 -> Copy ( ) ) == NULL )		2558728	2					
ANR	2558740	Condition	op . child1 && ( child1 = op . child1 -> Copy ( ) ) == NULL	84:5:1751:1799	2558728	0	True				
ANR	2558741	AndExpression	op . child1 && ( child1 = op . child1 -> Copy ( ) ) == NULL		2558728	0		&&			
ANR	2558742	MemberAccess	op . child1		2558728	0					
ANR	2558743	Identifier	op		2558728	0					
ANR	2558744	Identifier	child1		2558728	1					
ANR	2558745	EqualityExpression	( child1 = op . child1 -> Copy ( ) ) == NULL		2558728	1		==			
ANR	2558746	AssignmentExpression	child1 = op . child1 -> Copy ( )		2558728	0		=			
ANR	2558747	Identifier	child1		2558728	0					
ANR	2558748	CallExpression	op . child1 -> Copy ( )		2558728	1					
ANR	2558749	Callee	op . child1 -> Copy		2558728	0					
ANR	2558750	PtrMemberAccess	op . child1 -> Copy		2558728	0					
ANR	2558751	MemberAccess	op . child1		2558728	0					
ANR	2558752	Identifier	op		2558728	0					
ANR	2558753	Identifier	child1		2558728	1					
ANR	2558754	Identifier	Copy		2558728	1					
ANR	2558755	ArgumentList			2558728	1					
ANR	2558756	Identifier	NULL		2558728	1					
ANR	2558757	CompoundStatement		6:55:96:96	2558728	1					
ANR	2558758	ExpressionStatement	success = false	85:8:1811:1826	2558728	0	True				
ANR	2558759	AssignmentExpression	success = false		2558728	0		=			
ANR	2558760	Identifier	success		2558728	0					
ANR	2558761	Identifier	false		2558728	1					
ANR	2558762	ElseStatement	else		2558728	0					
ANR	2558763	IfStatement	if ( op . child2 && ( child2 = op . child2 -> Copy ( ) ) == NULL )		2558728	0					
ANR	2558764	Condition	op . child2 && ( child2 = op . child2 -> Copy ( ) ) == NULL	86:15:1843:1891	2558728	0	True				
ANR	2558765	AndExpression	op . child2 && ( child2 = op . child2 -> Copy ( ) ) == NULL		2558728	0		&&			
ANR	2558766	MemberAccess	op . child2		2558728	0					
ANR	2558767	Identifier	op		2558728	0					
ANR	2558768	Identifier	child2		2558728	1					
ANR	2558769	EqualityExpression	( child2 = op . child2 -> Copy ( ) ) == NULL		2558728	1		==			
ANR	2558770	AssignmentExpression	child2 = op . child2 -> Copy ( )		2558728	0		=			
ANR	2558771	Identifier	child2		2558728	0					
ANR	2558772	CallExpression	op . child2 -> Copy ( )		2558728	1					
ANR	2558773	Callee	op . child2 -> Copy		2558728	0					
ANR	2558774	PtrMemberAccess	op . child2 -> Copy		2558728	0					
ANR	2558775	MemberAccess	op . child2		2558728	0					
ANR	2558776	Identifier	op		2558728	0					
ANR	2558777	Identifier	child2		2558728	1					
ANR	2558778	Identifier	Copy		2558728	1					
ANR	2558779	ArgumentList			2558728	1					
ANR	2558780	Identifier	NULL		2558728	1					
ANR	2558781	CompoundStatement		8:66:189:189	2558728	1					
ANR	2558782	ExpressionStatement	success = false	87:8:1904:1919	2558728	0	True				
ANR	2558783	AssignmentExpression	success = false		2558728	0		=			
ANR	2558784	Identifier	success		2558728	0					
ANR	2558785	Identifier	false		2558728	1					
ANR	2558786	ElseStatement	else		2558728	0					
ANR	2558787	IfStatement	if ( op . child3 && ( child3 = op . child3 -> Copy ( ) ) == NULL )		2558728	0					
ANR	2558788	Condition	op . child3 && ( child3 = op . child3 -> Copy ( ) ) == NULL	88:15:1936:1984	2558728	0	True				
ANR	2558789	AndExpression	op . child3 && ( child3 = op . child3 -> Copy ( ) ) == NULL		2558728	0		&&			
ANR	2558790	MemberAccess	op . child3		2558728	0					
ANR	2558791	Identifier	op		2558728	0					
ANR	2558792	Identifier	child3		2558728	1					
ANR	2558793	EqualityExpression	( child3 = op . child3 -> Copy ( ) ) == NULL		2558728	1		==			
ANR	2558794	AssignmentExpression	child3 = op . child3 -> Copy ( )		2558728	0		=			
ANR	2558795	Identifier	child3		2558728	0					
ANR	2558796	CallExpression	op . child3 -> Copy ( )		2558728	1					
ANR	2558797	Callee	op . child3 -> Copy		2558728	0					
ANR	2558798	PtrMemberAccess	op . child3 -> Copy		2558728	0					
ANR	2558799	MemberAccess	op . child3		2558728	0					
ANR	2558800	Identifier	op		2558728	0					
ANR	2558801	Identifier	child3		2558728	1					
ANR	2558802	Identifier	Copy		2558728	1					
ANR	2558803	ArgumentList			2558728	1					
ANR	2558804	Identifier	NULL		2558728	1					
ANR	2558805	CompoundStatement		10:66:282:282	2558728	1					
ANR	2558806	ExpressionStatement	success = false	89:8:1997:2012	2558728	0	True				
ANR	2558807	AssignmentExpression	success = false		2558728	0		=			
ANR	2558808	Identifier	success		2558728	0					
ANR	2558809	Identifier	false		2558728	1					
ANR	2558810	ElseStatement	else		2558728	0					
ANR	2558811	CompoundStatement		12:8:317:317	2558728	0					
ANR	2558812	ExpressionStatement	operation = op . operation	91:8:2032:2058	2558728	0	True				
ANR	2558813	AssignmentExpression	operation = op . operation		2558728	0		=			
ANR	2558814	Identifier	operation		2558728	0					
ANR	2558815	MemberAccess	op . operation		2558728	1					
ANR	2558816	Identifier	op		2558728	0					
ANR	2558817	Identifier	operation		2558728	1					
ANR	2558818	ExpressionStatement	ExprTree :: CopyFrom ( op )	92:8:2068:2090	2558728	1	True				
ANR	2558819	CallExpression	ExprTree :: CopyFrom ( op )		2558728	0					
ANR	2558820	Callee	ExprTree :: CopyFrom		2558728	0					
ANR	2558821	Identifier	ExprTree :: CopyFrom		2558728	0					
ANR	2558822	ArgumentList	op		2558728	1					
ANR	2558823	Argument	op		2558728	0					
ANR	2558824	Identifier	op		2558728	0					
ANR	2558825	IfStatement	if ( success == false )		2558728	3					
ANR	2558826	Condition	success == false	95:8:2107:2122	2558728	0	True				
ANR	2558827	EqualityExpression	success == false		2558728	0		==			
ANR	2558828	Identifier	success		2558728	0					
ANR	2558829	Identifier	false		2558728	1					
ANR	2558830	CompoundStatement		17:26:420:420	2558728	1					
ANR	2558831	ExpressionStatement	CondorErrno = ERR_MEM_ALLOC_FAILED	96:8:2135:2169	2558728	0	True				
ANR	2558832	AssignmentExpression	CondorErrno = ERR_MEM_ALLOC_FAILED		2558728	0		=			
ANR	2558833	Identifier	CondorErrno		2558728	0					
ANR	2558834	Identifier	ERR_MEM_ALLOC_FAILED		2558728	1					
ANR	2558835	ExpressionStatement	"CondorErrMsg = """""	97:2:2173:2190	2558728	1	True				
ANR	2558836	AssignmentExpression	"CondorErrMsg = """""		2558728	0		=			
ANR	2558837	Identifier	CondorErrMsg		2558728	0					
ANR	2558838	PrimaryExpression	""""""		2558728	1					
ANR	2558839	ReturnStatement	return success ;	100:4:2203:2217	2558728	4	True				
ANR	2558840	Identifier	success		2558728	0					
ANR	2558841	ReturnType	bool		2558728	1					
ANR	2558842	Identifier	Operation :: CopyFrom		2558728	2					
ANR	2558843	ParameterList	const Operation & op		2558728	3					
ANR	2558844	Parameter	const Operation & op	78:9:1683:1701	2558728	0	True				
ANR	2558845	ParameterType	const Operation &		2558728	0					
ANR	2558846	Identifier	op		2558728	1					
ANR	2558847	CFGEntryNode	ENTRY		2558728		True				
ANR	2558848	CFGExitNode	EXIT		2558728		True				
ANR	2558849	Symbol	op		2558728						
ANR	2558850	Symbol	NULL		2558728						
ANR	2558851	Symbol	* op		2558728						
ANR	2558852	Symbol	op . child3 -> Copy		2558728						
ANR	2558853	Symbol	op . operation		2558728						
ANR	2558854	Symbol	false		2558728						
ANR	2558855	Symbol	ERR_MEM_ALLOC_FAILED		2558728						
ANR	2558856	Symbol	op . child1 -> Copy		2558728						
ANR	2558857	Symbol	child2		2558728						
ANR	2558858	Symbol	child3		2558728						
ANR	2558859	Symbol	op . child2 -> Copy		2558728						
ANR	2558860	Symbol	child1		2558728						
ANR	2558861	Symbol	CondorErrno		2558728						
ANR	2558862	Symbol	* op . child1		2558728						
ANR	2558863	Symbol	* op . child2		2558728						
ANR	2558864	Symbol	CondorErrMsg		2558728						
ANR	2558865	Symbol	success		2558728						
ANR	2558866	Symbol	op . child2		2558728						
ANR	2558867	Symbol	* op . child3		2558728						
ANR	2558868	Symbol	op . child1		2558728						
ANR	2558869	Symbol	true		2558728						
ANR	2558870	Symbol	op . child3		2558728						
ANR	2558871	Symbol	operation		2558728						
ANR	2558872	Function	Operation :: SameAs	103:0:2222:2771							
ANR	2558873	FunctionDef	Operation :: SameAs (const ExprTree * tree)		2558872	0					
ANR	2558874	CompoundStatement		105:0:2274:2771	2558872	0					
ANR	2558875	IdentifierDeclStatement	bool is_same ;	106:4:2280:2292	2558872	0	True				
ANR	2558876	IdentifierDecl	is_same		2558872	0					
ANR	2558877	IdentifierDeclType	bool		2558872	0					
ANR	2558878	Identifier	is_same		2558872	1					
ANR	2558879	IdentifierDeclStatement	const Operation * other_op ;	107:4:2298:2323	2558872	1	True				
ANR	2558880	IdentifierDecl	* other_op		2558872	0					
ANR	2558881	IdentifierDeclType	const Operation *		2558872	0					
ANR	2558882	Identifier	other_op		2558872	1					
ANR	2558883	IfStatement	if ( tree -> GetKind ( ) != OP_NODE )		2558872	2					
ANR	2558884	Condition	tree -> GetKind ( ) != OP_NODE	109:8:2334:2359	2558872	0	True				
ANR	2558885	EqualityExpression	tree -> GetKind ( ) != OP_NODE		2558872	0		!=			
ANR	2558886	CallExpression	tree -> GetKind ( )		2558872	0					
ANR	2558887	Callee	tree -> GetKind		2558872	0					
ANR	2558888	PtrMemberAccess	tree -> GetKind		2558872	0					
ANR	2558889	Identifier	tree		2558872	0					
ANR	2558890	Identifier	GetKind		2558872	1					
ANR	2558891	ArgumentList			2558872	1					
ANR	2558892	Identifier	OP_NODE		2558872	1					
ANR	2558893	CompoundStatement		5:36:87:87	2558872	1					
ANR	2558894	ExpressionStatement	is_same = false	110:8:2372:2387	2558872	0	True				
ANR	2558895	AssignmentExpression	is_same = false		2558872	0		=			
ANR	2558896	Identifier	is_same		2558872	0					
ANR	2558897	Identifier	false		2558872	1					
ANR	2558898	ElseStatement	else		2558872	0					
ANR	2558899	CompoundStatement		7:11:125:125	2558872	0					
ANR	2558900	ExpressionStatement	other_op = ( const Operation * ) tree	112:8:2410:2445	2558872	0	True				
ANR	2558901	AssignmentExpression	other_op = ( const Operation * ) tree		2558872	0		=			
ANR	2558902	Identifier	other_op		2558872	0					
ANR	2558903	CastExpression	( const Operation * ) tree		2558872	1					
ANR	2558904	CastTarget	const Operation *		2558872	0					
ANR	2558905	Identifier	tree		2558872	1					
ANR	2558906	IfStatement	"if ( operation == other_op -> operation && SameChild ( child1 , other_op -> child1 ) && SameChild ( child2 , other_op -> child2 ) && SameChild ( child3 , other_op -> child3 ) )"		2558872	1					
ANR	2558907	Condition	"operation == other_op -> operation && SameChild ( child1 , other_op -> child1 ) && SameChild ( child2 , other_op -> child2 ) && SameChild ( child3 , other_op -> child3 )"	114:15:2471:2655	2558872	0	True				
ANR	2558908	AndExpression	"operation == other_op -> operation && SameChild ( child1 , other_op -> child1 ) && SameChild ( child2 , other_op -> child2 ) && SameChild ( child3 , other_op -> child3 )"		2558872	0		&&			
ANR	2558909	EqualityExpression	operation == other_op -> operation		2558872	0		==			
ANR	2558910	Identifier	operation		2558872	0					
ANR	2558911	PtrMemberAccess	other_op -> operation		2558872	1					
ANR	2558912	Identifier	other_op		2558872	0					
ANR	2558913	Identifier	operation		2558872	1					
ANR	2558914	AndExpression	"SameChild ( child1 , other_op -> child1 ) && SameChild ( child2 , other_op -> child2 ) && SameChild ( child3 , other_op -> child3 )"		2558872	1		&&			
ANR	2558915	CallExpression	"SameChild ( child1 , other_op -> child1 )"		2558872	0					
ANR	2558916	Callee	SameChild		2558872	0					
ANR	2558917	Identifier	SameChild		2558872	0					
ANR	2558918	ArgumentList	child1		2558872	1					
ANR	2558919	Argument	child1		2558872	0					
ANR	2558920	Identifier	child1		2558872	0					
ANR	2558921	Argument	other_op -> child1		2558872	1					
ANR	2558922	PtrMemberAccess	other_op -> child1		2558872	0					
ANR	2558923	Identifier	other_op		2558872	0					
ANR	2558924	Identifier	child1		2558872	1					
ANR	2558925	AndExpression	"SameChild ( child2 , other_op -> child2 ) && SameChild ( child3 , other_op -> child3 )"		2558872	1		&&			
ANR	2558926	CallExpression	"SameChild ( child2 , other_op -> child2 )"		2558872	0					
ANR	2558927	Callee	SameChild		2558872	0					
ANR	2558928	Identifier	SameChild		2558872	0					
ANR	2558929	ArgumentList	child2		2558872	1					
ANR	2558930	Argument	child2		2558872	0					
ANR	2558931	Identifier	child2		2558872	0					
ANR	2558932	Argument	other_op -> child2		2558872	1					
ANR	2558933	PtrMemberAccess	other_op -> child2		2558872	0					
ANR	2558934	Identifier	other_op		2558872	0					
ANR	2558935	Identifier	child2		2558872	1					
ANR	2558936	CallExpression	"SameChild ( child3 , other_op -> child3 )"		2558872	1					
ANR	2558937	Callee	SameChild		2558872	0					
ANR	2558938	Identifier	SameChild		2558872	0					
ANR	2558939	ArgumentList	child3		2558872	1					
ANR	2558940	Argument	child3		2558872	0					
ANR	2558941	Identifier	child3		2558872	0					
ANR	2558942	Argument	other_op -> child3		2558872	1					
ANR	2558943	PtrMemberAccess	other_op -> child3		2558872	0					
ANR	2558944	Identifier	other_op		2558872	0					
ANR	2558945	Identifier	child3		2558872	1					
ANR	2558946	CompoundStatement		13:52:383:383	2558872	1					
ANR	2558947	ExpressionStatement	is_same = true	118:12:2672:2686	2558872	0	True				
ANR	2558948	AssignmentExpression	is_same = true		2558872	0		=			
ANR	2558949	Identifier	is_same		2558872	0					
ANR	2558950	Identifier	true		2558872	1					
ANR	2558951	ElseStatement	else		2558872	0					
ANR	2558952	CompoundStatement		15:15:428:428	2558872	0					
ANR	2558953	ExpressionStatement	is_same = false	120:12:2717:2732	2558872	0	True				
ANR	2558954	AssignmentExpression	is_same = false		2558872	0		=			
ANR	2558955	Identifier	is_same		2558872	0					
ANR	2558956	Identifier	false		2558872	1					
ANR	2558957	ReturnStatement	return is_same ;	124:4:2755:2769	2558872	3	True				
ANR	2558958	Identifier	is_same		2558872	0					
ANR	2558959	ReturnType	bool		2558872	1					
ANR	2558960	Identifier	Operation :: SameAs		2558872	2					
ANR	2558961	ParameterList	const ExprTree * tree		2558872	3					
ANR	2558962	Parameter	const ExprTree * tree	104:7:2246:2265	2558872	0	True				
ANR	2558963	ParameterType	const ExprTree *		2558872	0					
ANR	2558964	Identifier	tree		2558872	1					
ANR	2558965	CFGEntryNode	ENTRY		2558872		True				
ANR	2558966	CFGExitNode	EXIT		2558872		True				
ANR	2558967	Symbol	other_op		2558872						
ANR	2558968	Symbol	is_same		2558872						
ANR	2558969	Symbol	tree		2558872						
ANR	2558970	Symbol	false		2558872						
ANR	2558971	Symbol	* other_op		2558872						
ANR	2558972	Symbol	child2		2558872						
ANR	2558973	Symbol	child3		2558872						
ANR	2558974	Symbol	other_op -> operation		2558872						
ANR	2558975	Symbol	OP_NODE		2558872						
ANR	2558976	Symbol	child1		2558872						
ANR	2558977	Symbol	* tree		2558872						
ANR	2558978	Symbol	other_op -> child2		2558872						
ANR	2558979	Symbol	other_op -> child1		2558872						
ANR	2558980	Symbol	other_op -> child3		2558872						
ANR	2558981	Symbol	tree -> GetKind		2558872						
ANR	2558982	Symbol	SameChild		2558872						
ANR	2558983	Symbol	true		2558872						
ANR	2558984	Symbol	operation		2558872						
ANR	2558985	Function	operator ==	127:0:2774:2865							
ANR	2558986	FunctionDef	"operator == (const Operation & op1 , const Operation & op2)"		2558985	0					
ANR	2558987	CompoundStatement		128:0:2834:2865	2558985	0					
ANR	2558988	ReturnStatement	return op1 . SameAs ( & op2 ) ;	129:4:2840:2863	2558985	0	True				
ANR	2558989	CallExpression	op1 . SameAs ( & op2 )		2558985	0					
ANR	2558990	Callee	op1 . SameAs		2558985	0					
ANR	2558991	MemberAccess	op1 . SameAs		2558985	0					
ANR	2558992	Identifier	op1		2558985	0					
ANR	2558993	Identifier	SameAs		2558985	1					
ANR	2558994	ArgumentList	& op2		2558985	1					
ANR	2558995	Argument	& op2		2558985	0					
ANR	2558996	UnaryOperationExpression	& op2		2558985	0					
ANR	2558997	UnaryOperator	&		2558985	0					
ANR	2558998	Identifier	op2		2558985	1					
ANR	2558999	ReturnType	bool		2558985	1					
ANR	2559000	Identifier	operator ==		2558985	2					
ANR	2559001	ParameterList	"const Operation & op1 , const Operation & op2"		2558985	3					
ANR	2559002	Parameter	const Operation & op1	127:16:2790:2809	2558985	0	True				
ANR	2559003	ParameterType	const Operation &		2558985	0					
ANR	2559004	Identifier	op1		2558985	1					
ANR	2559005	Parameter	const Operation & op2	127:38:2812:2831	2558985	1	True				
ANR	2559006	ParameterType	const Operation &		2558985	0					
ANR	2559007	Identifier	op2		2558985	1					
ANR	2559008	CFGEntryNode	ENTRY		2558985		True				
ANR	2559009	CFGExitNode	EXIT		2558985		True				
ANR	2559010	Symbol	op2		2558985						
ANR	2559011	Symbol	& op2		2558985						
ANR	2559012	Symbol	op1		2558985						
ANR	2559013	Symbol	op1 . SameAs		2558985						
ANR	2559014	Function	Operation :: SameChild	132:0:2868:3217							
ANR	2559015	FunctionDef	"Operation :: SameChild (const ExprTree * tree1 , const ExprTree * tree2)"		2559014	0					
ANR	2559016	CompoundStatement		134:0:2947:3217	2559014	0					
ANR	2559017	IdentifierDeclStatement	bool is_same ;	135:4:2953:2965	2559014	0	True				
ANR	2559018	IdentifierDecl	is_same		2559014	0					
ANR	2559019	IdentifierDeclType	bool		2559014	0					
ANR	2559020	Identifier	is_same		2559014	1					
ANR	2559021	IfStatement	if ( tree1 == NULL )		2559014	1					
ANR	2559022	Condition	tree1 == NULL	137:8:2977:2989	2559014	0	True				
ANR	2559023	EqualityExpression	tree1 == NULL		2559014	0		==			
ANR	2559024	Identifier	tree1		2559014	0					
ANR	2559025	Identifier	NULL		2559014	1					
ANR	2559026	CompoundStatement		4:23:44:44	2559014	1					
ANR	2559027	IfStatement	if ( tree2 == NULL )		2559014	0					
ANR	2559028	Condition	tree2 == NULL	138:12:3006:3018	2559014	0	True				
ANR	2559029	EqualityExpression	tree2 == NULL		2559014	0		==			
ANR	2559030	Identifier	tree2		2559014	0					
ANR	2559031	Identifier	NULL		2559014	1					
ANR	2559032	ExpressionStatement	is_same = true	138:27:3021:3035	2559014	1	True				
ANR	2559033	AssignmentExpression	is_same = true		2559014	0		=			
ANR	2559034	Identifier	is_same		2559014	0					
ANR	2559035	Identifier	true		2559014	1					
ANR	2559036	ElseStatement	else		2559014	0					
ANR	2559037	ExpressionStatement	is_same = false	139:27:3064:3079	2559014	0	True				
ANR	2559038	AssignmentExpression	is_same = false		2559014	0		=			
ANR	2559039	Identifier	is_same		2559014	0					
ANR	2559040	Identifier	false		2559014	1					
ANR	2559041	ElseStatement	else		2559014	0					
ANR	2559042	IfStatement	if ( tree2 == NULL )		2559014	0					
ANR	2559043	Condition	tree2 == NULL	140:15:3096:3108	2559014	0	True				
ANR	2559044	EqualityExpression	tree2 == NULL		2559014	0		==			
ANR	2559045	Identifier	tree2		2559014	0					
ANR	2559046	Identifier	NULL		2559014	1					
ANR	2559047	CompoundStatement		7:30:163:163	2559014	1					
ANR	2559048	ExpressionStatement	is_same = false	141:8:3121:3136	2559014	0	True				
ANR	2559049	AssignmentExpression	is_same = false		2559014	0		=			
ANR	2559050	Identifier	is_same		2559014	0					
ANR	2559051	Identifier	false		2559014	1					
ANR	2559052	ElseStatement	else		2559014	0					
ANR	2559053	CompoundStatement		9:11:201:201	2559014	0					
ANR	2559054	ExpressionStatement	is_same = tree1 -> SameAs ( tree2 )	143:8:3159:3189	2559014	0	True				
ANR	2559055	AssignmentExpression	is_same = tree1 -> SameAs ( tree2 )		2559014	0		=			
ANR	2559056	Identifier	is_same		2559014	0					
ANR	2559057	CallExpression	tree1 -> SameAs ( tree2 )		2559014	1					
ANR	2559058	Callee	tree1 -> SameAs		2559014	0					
ANR	2559059	PtrMemberAccess	tree1 -> SameAs		2559014	0					
ANR	2559060	Identifier	tree1		2559014	0					
ANR	2559061	Identifier	SameAs		2559014	1					
ANR	2559062	ArgumentList	tree2		2559014	1					
ANR	2559063	Argument	tree2		2559014	0					
ANR	2559064	Identifier	tree2		2559014	0					
ANR	2559065	ReturnStatement	return is_same ;	145:4:3201:3215	2559014	2	True				
ANR	2559066	Identifier	is_same		2559014	0					
ANR	2559067	ReturnType	bool		2559014	1					
ANR	2559068	Identifier	Operation :: SameChild		2559014	2					
ANR	2559069	ParameterList	"const ExprTree * tree1 , const ExprTree * tree2"		2559014	3					
ANR	2559070	Parameter	const ExprTree * tree1	133:10:2895:2915	2559014	0	True				
ANR	2559071	ParameterType	const ExprTree *		2559014	0					
ANR	2559072	Identifier	tree1		2559014	1					
ANR	2559073	Parameter	const ExprTree * tree2	133:33:2918:2938	2559014	1	True				
ANR	2559074	ParameterType	const ExprTree *		2559014	0					
ANR	2559075	Identifier	tree2		2559014	1					
ANR	2559076	CFGEntryNode	ENTRY		2559014		True				
ANR	2559077	CFGExitNode	EXIT		2559014		True				
ANR	2559078	Symbol	NULL		2559014						
ANR	2559079	Symbol	* tree1		2559014						
ANR	2559080	Symbol	is_same		2559014						
ANR	2559081	Symbol	true		2559014						
ANR	2559082	Symbol	false		2559014						
ANR	2559083	Symbol	tree1 -> SameAs		2559014						
ANR	2559084	Symbol	tree1		2559014						
ANR	2559085	Symbol	tree2		2559014						
ANR	2559086	Function	Operation :: _SetParentScope	148:0:3220:3425							
ANR	2559087	FunctionDef	Operation :: _SetParentScope (const ClassAd * parent)		2559086	0					
ANR	2559088	CompoundStatement		150:0:3279:3425	2559086	0					
ANR	2559089	IfStatement	if ( child1 )		2559086	0					
ANR	2559090	Condition	child1	151:5:3286:3291	2559086	0	True				
ANR	2559091	Identifier	child1		2559086	0					
ANR	2559092	ExpressionStatement	child1 -> SetParentScope ( parent )	151:14:3295:3327	2559086	1	True				
ANR	2559093	CallExpression	child1 -> SetParentScope ( parent )		2559086	0					
ANR	2559094	Callee	child1 -> SetParentScope		2559086	0					
ANR	2559095	PtrMemberAccess	child1 -> SetParentScope		2559086	0					
ANR	2559096	Identifier	child1		2559086	0					
ANR	2559097	Identifier	SetParentScope		2559086	1					
ANR	2559098	ArgumentList	parent		2559086	1					
ANR	2559099	Argument	parent		2559086	0					
ANR	2559100	Identifier	parent		2559086	0					
ANR	2559101	IfStatement	if ( child2 )		2559086	1					
ANR	2559102	Condition	child2	152:5:3334:3339	2559086	0	True				
ANR	2559103	Identifier	child2		2559086	0					
ANR	2559104	ExpressionStatement	child2 -> SetParentScope ( parent )	152:14:3343:3375	2559086	1	True				
ANR	2559105	CallExpression	child2 -> SetParentScope ( parent )		2559086	0					
ANR	2559106	Callee	child2 -> SetParentScope		2559086	0					
ANR	2559107	PtrMemberAccess	child2 -> SetParentScope		2559086	0					
ANR	2559108	Identifier	child2		2559086	0					
ANR	2559109	Identifier	SetParentScope		2559086	1					
ANR	2559110	ArgumentList	parent		2559086	1					
ANR	2559111	Argument	parent		2559086	0					
ANR	2559112	Identifier	parent		2559086	0					
ANR	2559113	IfStatement	if ( child3 )		2559086	2					
ANR	2559114	Condition	child3	153:5:3382:3387	2559086	0	True				
ANR	2559115	Identifier	child3		2559086	0					
ANR	2559116	ExpressionStatement	child3 -> SetParentScope ( parent )	153:14:3391:3423	2559086	1	True				
ANR	2559117	CallExpression	child3 -> SetParentScope ( parent )		2559086	0					
ANR	2559118	Callee	child3 -> SetParentScope		2559086	0					
ANR	2559119	PtrMemberAccess	child3 -> SetParentScope		2559086	0					
ANR	2559120	Identifier	child3		2559086	0					
ANR	2559121	Identifier	SetParentScope		2559086	1					
ANR	2559122	ArgumentList	parent		2559086	1					
ANR	2559123	Argument	parent		2559086	0					
ANR	2559124	Identifier	parent		2559086	0					
ANR	2559125	ReturnType	void		2559086	1					
ANR	2559126	Identifier	Operation :: _SetParentScope		2559086	2					
ANR	2559127	ParameterList	const ClassAd * parent		2559086	3					
ANR	2559128	Parameter	const ClassAd * parent	149:17:3254:3274	2559086	0	True				
ANR	2559129	ParameterType	const ClassAd *		2559086	0					
ANR	2559130	Identifier	parent		2559086	1					
ANR	2559131	CFGEntryNode	ENTRY		2559086		True				
ANR	2559132	CFGExitNode	EXIT		2559086		True				
ANR	2559133	Symbol	parent		2559086						
ANR	2559134	Symbol	child2		2559086						
ANR	2559135	Symbol	child3		2559086						
ANR	2559136	Symbol	child1		2559086						
ANR	2559137	Function	Operation :: Operate	157:0:3429:3584							
ANR	2559138	FunctionDef	"Operation :: Operate (OpKind op , Value & op1 , Value & op2 , Value & result)"		2559137	0					
ANR	2559139	CompoundStatement		159:0:3505:3584	2559137	0					
ANR	2559140	IdentifierDeclStatement	Value dummy ;	160:1:3508:3519	2559137	0	True				
ANR	2559141	IdentifierDecl	dummy		2559137	0					
ANR	2559142	IdentifierDeclType	Value		2559137	0					
ANR	2559143	Identifier	dummy		2559137	1					
ANR	2559144	ExpressionStatement	"_doOperation ( op , op1 , op2 , dummy , true , true , false , result )"	161:1:3522:3582	2559137	1	True				
ANR	2559145	CallExpression	"_doOperation ( op , op1 , op2 , dummy , true , true , false , result )"		2559137	0					
ANR	2559146	Callee	_doOperation		2559137	0					
ANR	2559147	Identifier	_doOperation		2559137	0					
ANR	2559148	ArgumentList	op		2559137	1					
ANR	2559149	Argument	op		2559137	0					
ANR	2559150	Identifier	op		2559137	0					
ANR	2559151	Argument	op1		2559137	1					
ANR	2559152	Identifier	op1		2559137	0					
ANR	2559153	Argument	op2		2559137	2					
ANR	2559154	Identifier	op2		2559137	0					
ANR	2559155	Argument	dummy		2559137	3					
ANR	2559156	Identifier	dummy		2559137	0					
ANR	2559157	Argument	true		2559137	4					
ANR	2559158	Identifier	true		2559137	0					
ANR	2559159	Argument	true		2559137	5					
ANR	2559160	Identifier	true		2559137	0					
ANR	2559161	Argument	false		2559137	6					
ANR	2559162	Identifier	false		2559137	0					
ANR	2559163	Argument	result		2559137	7					
ANR	2559164	Identifier	result		2559137	0					
ANR	2559165	ReturnType	void		2559137	1					
ANR	2559166	Identifier	Operation :: Operate		2559137	2					
ANR	2559167	ParameterList	"OpKind op , Value & op1 , Value & op2 , Value & result"		2559137	3					
ANR	2559168	Parameter	OpKind op	158:9:3455:3463	2559137	0	True				
ANR	2559169	ParameterType	OpKind		2559137	0					
ANR	2559170	Identifier	op		2559137	1					
ANR	2559171	Parameter	Value & op1	158:20:3466:3475	2559137	1	True				
ANR	2559172	ParameterType	Value &		2559137	0					
ANR	2559173	Identifier	op1		2559137	1					
ANR	2559174	Parameter	Value & op2	158:32:3478:3487	2559137	2	True				
ANR	2559175	ParameterType	Value &		2559137	0					
ANR	2559176	Identifier	op2		2559137	1					
ANR	2559177	Parameter	Value & result	158:44:3490:3502	2559137	3	True				
ANR	2559178	ParameterType	Value &		2559137	0					
ANR	2559179	Identifier	result		2559137	1					
ANR	2559180	CFGEntryNode	ENTRY		2559137		True				
ANR	2559181	CFGExitNode	EXIT		2559137		True				
ANR	2559182	Symbol	op2		2559137						
ANR	2559183	Symbol	result		2559137						
ANR	2559184	Symbol	dummy		2559137						
ANR	2559185	Symbol	op		2559137						
ANR	2559186	Symbol	op1		2559137						
ANR	2559187	Symbol	true		2559137						
ANR	2559188	Symbol	false		2559137						
ANR	2559189	Function	Operation :: Operate	165:0:3588:3738							
ANR	2559190	FunctionDef	"Operation :: Operate (OpKind op , Value & op1 , Value & op2 , Value & op3 , Value & result)"		2559189	0					
ANR	2559191	CompoundStatement		167:0:3676:3738	2559189	0					
ANR	2559192	ExpressionStatement	"_doOperation ( op , op1 , op2 , op3 , true , true , true , result )"	168:1:3679:3736	2559189	0	True				
ANR	2559193	CallExpression	"_doOperation ( op , op1 , op2 , op3 , true , true , true , result )"		2559189	0					
ANR	2559194	Callee	_doOperation		2559189	0					
ANR	2559195	Identifier	_doOperation		2559189	0					
ANR	2559196	ArgumentList	op		2559189	1					
ANR	2559197	Argument	op		2559189	0					
ANR	2559198	Identifier	op		2559189	0					
ANR	2559199	Argument	op1		2559189	1					
ANR	2559200	Identifier	op1		2559189	0					
ANR	2559201	Argument	op2		2559189	2					
ANR	2559202	Identifier	op2		2559189	0					
ANR	2559203	Argument	op3		2559189	3					
ANR	2559204	Identifier	op3		2559189	0					
ANR	2559205	Argument	true		2559189	4					
ANR	2559206	Identifier	true		2559189	0					
ANR	2559207	Argument	true		2559189	5					
ANR	2559208	Identifier	true		2559189	0					
ANR	2559209	Argument	true		2559189	6					
ANR	2559210	Identifier	true		2559189	0					
ANR	2559211	Argument	result		2559189	7					
ANR	2559212	Identifier	result		2559189	0					
ANR	2559213	ReturnType	void		2559189	1					
ANR	2559214	Identifier	Operation :: Operate		2559189	2					
ANR	2559215	ParameterList	"OpKind op , Value & op1 , Value & op2 , Value & op3 , Value & result"		2559189	3					
ANR	2559216	Parameter	OpKind op	166:9:3614:3622	2559189	0	True				
ANR	2559217	ParameterType	OpKind		2559189	0					
ANR	2559218	Identifier	op		2559189	1					
ANR	2559219	Parameter	Value & op1	166:20:3625:3634	2559189	1	True				
ANR	2559220	ParameterType	Value &		2559189	0					
ANR	2559221	Identifier	op1		2559189	1					
ANR	2559222	Parameter	Value & op2	166:32:3637:3646	2559189	2	True				
ANR	2559223	ParameterType	Value &		2559189	0					
ANR	2559224	Identifier	op2		2559189	1					
ANR	2559225	Parameter	Value & op3	166:44:3649:3658	2559189	3	True				
ANR	2559226	ParameterType	Value &		2559189	0					
ANR	2559227	Identifier	op3		2559189	1					
ANR	2559228	Parameter	Value & result	166:56:3661:3673	2559189	4	True				
ANR	2559229	ParameterType	Value &		2559189	0					
ANR	2559230	Identifier	result		2559189	1					
ANR	2559231	CFGEntryNode	ENTRY		2559189		True				
ANR	2559232	CFGExitNode	EXIT		2559189		True				
ANR	2559233	Symbol	op2		2559189						
ANR	2559234	Symbol	result		2559189						
ANR	2559235	Symbol	op		2559189						
ANR	2559236	Symbol	op1		2559189						
ANR	2559237	Symbol	op3		2559189						
ANR	2559238	Symbol	true		2559189						
ANR	2559239	Function	Operation :: _doOperation	172:0:3742:7589							
ANR	2559240	FunctionDef	"Operation :: _doOperation (OpKind op , Value & val1 , Value & val2 , Value & val3 , bool valid1 , bool valid2 , bool valid3 , Value & result , EvalState * es)"		2559239	0					
ANR	2559241	CompoundStatement		175:0:3894:7589	2559239	0					
ANR	2559242	IdentifierDeclStatement	"Value :: ValueType vt1 , vt2 , vt3 ;"	176:1:3897:3929	2559239	0	True				
ANR	2559243	IdentifierDecl	vt1		2559239	0					
ANR	2559244	IdentifierDeclType	Value :: ValueType		2559239	0					
ANR	2559245	Identifier	vt1		2559239	1					
ANR	2559246	IdentifierDecl	vt2		2559239	1					
ANR	2559247	IdentifierDeclType	Value :: ValueType		2559239	0					
ANR	2559248	Identifier	vt2		2559239	1					
ANR	2559249	IdentifierDecl	vt3		2559239	2					
ANR	2559250	IdentifierDeclType	Value :: ValueType		2559239	0					
ANR	2559251	Identifier	vt3		2559239	1					
ANR	2559252	ExpressionStatement	vt1 = val1 . GetType ( )	179:1:3965:3986	2559239	1	True				
ANR	2559253	AssignmentExpression	vt1 = val1 . GetType ( )		2559239	0		=			
ANR	2559254	Identifier	vt1		2559239	0					
ANR	2559255	CallExpression	val1 . GetType ( )		2559239	1					
ANR	2559256	Callee	val1 . GetType		2559239	0					
ANR	2559257	MemberAccess	val1 . GetType		2559239	0					
ANR	2559258	Identifier	val1		2559239	0					
ANR	2559259	Identifier	GetType		2559239	1					
ANR	2559260	ArgumentList			2559239	1					
ANR	2559261	ExpressionStatement	vt2 = val2 . GetType ( )	180:1:3989:4010	2559239	2	True				
ANR	2559262	AssignmentExpression	vt2 = val2 . GetType ( )		2559239	0		=			
ANR	2559263	Identifier	vt2		2559239	0					
ANR	2559264	CallExpression	val2 . GetType ( )		2559239	1					
ANR	2559265	Callee	val2 . GetType		2559239	0					
ANR	2559266	MemberAccess	val2 . GetType		2559239	0					
ANR	2559267	Identifier	val2		2559239	0					
ANR	2559268	Identifier	GetType		2559239	1					
ANR	2559269	ArgumentList			2559239	1					
ANR	2559270	ExpressionStatement	vt3 = val3 . GetType ( )	181:1:4013:4034	2559239	3	True				
ANR	2559271	AssignmentExpression	vt3 = val3 . GetType ( )		2559239	0		=			
ANR	2559272	Identifier	vt3		2559239	0					
ANR	2559273	CallExpression	val3 . GetType ( )		2559239	1					
ANR	2559274	Callee	val3 . GetType		2559239	0					
ANR	2559275	MemberAccess	val3 . GetType		2559239	0					
ANR	2559276	Identifier	val3		2559239	0					
ANR	2559277	Identifier	GetType		2559239	1					
ANR	2559278	ArgumentList			2559239	1					
ANR	2559279	IfStatement	if ( op == __NO_OP__ || op == PARENTHESES_OP )		2559239	4					
ANR	2559280	Condition	op == __NO_OP__ || op == PARENTHESES_OP	184:5:4074:4112	2559239	0	True				
ANR	2559281	OrExpression	op == __NO_OP__ || op == PARENTHESES_OP		2559239	0		||			
ANR	2559282	EqualityExpression	op == __NO_OP__		2559239	0		==			
ANR	2559283	Identifier	op		2559239	0					
ANR	2559284	Identifier	__NO_OP__		2559239	1					
ANR	2559285	EqualityExpression	op == PARENTHESES_OP		2559239	1		==			
ANR	2559286	Identifier	op		2559239	0					
ANR	2559287	Identifier	PARENTHESES_OP		2559239	1					
ANR	2559288	CompoundStatement		10:46:220:220	2559239	1					
ANR	2559289	ExpressionStatement	result . CopyFrom ( val1 )	185:2:4119:4142	2559239	0	True				
ANR	2559290	CallExpression	result . CopyFrom ( val1 )		2559239	0					
ANR	2559291	Callee	result . CopyFrom		2559239	0					
ANR	2559292	MemberAccess	result . CopyFrom		2559239	0					
ANR	2559293	Identifier	result		2559239	0					
ANR	2559294	Identifier	CopyFrom		2559239	1					
ANR	2559295	ArgumentList	val1		2559239	1					
ANR	2559296	Argument	val1		2559239	0					
ANR	2559297	Identifier	val1		2559239	0					
ANR	2559298	ReturnStatement	return SIG_CHLD1 ;	186:2:4146:4162	2559239	1	True				
ANR	2559299	Identifier	SIG_CHLD1		2559239	0					
ANR	2559300	ElseStatement	else		2559239	0					
ANR	2559301	IfStatement	if ( op == UNARY_PLUS_OP )		2559239	0					
ANR	2559302	Condition	op == UNARY_PLUS_OP	187:12:4176:4194	2559239	0	True				
ANR	2559303	EqualityExpression	op == UNARY_PLUS_OP		2559239	0		==			
ANR	2559304	Identifier	op		2559239	0					
ANR	2559305	Identifier	UNARY_PLUS_OP		2559239	1					
ANR	2559306	CompoundStatement		13:33:302:302	2559239	1					
ANR	2559307	IfStatement	if ( vt1 == Value :: BOOLEAN_VALUE || vt1 == Value :: STRING_VALUE || vt1 == Value :: LIST_VALUE || vt1 == Value :: CLASSAD_VALUE || vt1 == Value :: ABSOLUTE_TIME_VALUE )		2559239	0					
ANR	2559308	Condition	vt1 == Value :: BOOLEAN_VALUE || vt1 == Value :: STRING_VALUE || vt1 == Value :: LIST_VALUE || vt1 == Value :: CLASSAD_VALUE || vt1 == Value :: ABSOLUTE_TIME_VALUE	188:6:4205:4365	2559239	0	True				
ANR	2559309	OrExpression	vt1 == Value :: BOOLEAN_VALUE || vt1 == Value :: STRING_VALUE || vt1 == Value :: LIST_VALUE || vt1 == Value :: CLASSAD_VALUE || vt1 == Value :: ABSOLUTE_TIME_VALUE		2559239	0		||			
ANR	2559310	EqualityExpression	vt1 == Value :: BOOLEAN_VALUE		2559239	0		==			
ANR	2559311	Identifier	vt1		2559239	0					
ANR	2559312	Identifier	Value :: BOOLEAN_VALUE		2559239	1					
ANR	2559313	OrExpression	vt1 == Value :: STRING_VALUE || vt1 == Value :: LIST_VALUE || vt1 == Value :: CLASSAD_VALUE || vt1 == Value :: ABSOLUTE_TIME_VALUE		2559239	1		||			
ANR	2559314	EqualityExpression	vt1 == Value :: STRING_VALUE		2559239	0		==			
ANR	2559315	Identifier	vt1		2559239	0					
ANR	2559316	Identifier	Value :: STRING_VALUE		2559239	1					
ANR	2559317	OrExpression	vt1 == Value :: LIST_VALUE || vt1 == Value :: CLASSAD_VALUE || vt1 == Value :: ABSOLUTE_TIME_VALUE		2559239	1		||			
ANR	2559318	EqualityExpression	vt1 == Value :: LIST_VALUE		2559239	0		==			
ANR	2559319	Identifier	vt1		2559239	0					
ANR	2559320	Identifier	Value :: LIST_VALUE		2559239	1					
ANR	2559321	OrExpression	vt1 == Value :: CLASSAD_VALUE || vt1 == Value :: ABSOLUTE_TIME_VALUE		2559239	1		||			
ANR	2559322	EqualityExpression	vt1 == Value :: CLASSAD_VALUE		2559239	0		==			
ANR	2559323	Identifier	vt1		2559239	0					
ANR	2559324	Identifier	Value :: CLASSAD_VALUE		2559239	1					
ANR	2559325	EqualityExpression	vt1 == Value :: ABSOLUTE_TIME_VALUE		2559239	1		==			
ANR	2559326	Identifier	vt1		2559239	0					
ANR	2559327	Identifier	Value :: ABSOLUTE_TIME_VALUE		2559239	1					
ANR	2559328	CompoundStatement		16:38:473:473	2559239	1					
ANR	2559329	ExpressionStatement	result . SetErrorValue ( )	191:3:4373:4395	2559239	0	True				
ANR	2559330	CallExpression	result . SetErrorValue ( )		2559239	0					
ANR	2559331	Callee	result . SetErrorValue		2559239	0					
ANR	2559332	MemberAccess	result . SetErrorValue		2559239	0					
ANR	2559333	Identifier	result		2559239	0					
ANR	2559334	Identifier	SetErrorValue		2559239	1					
ANR	2559335	ArgumentList			2559239	1					
ANR	2559336	ElseStatement	else		2559239	0					
ANR	2559337	CompoundStatement		18:9:511:511	2559239	0					
ANR	2559338	ExpressionStatement	result . CopyFrom ( val1 )	194:3:4458:4481	2559239	0	True				
ANR	2559339	CallExpression	result . CopyFrom ( val1 )		2559239	0					
ANR	2559340	Callee	result . CopyFrom		2559239	0					
ANR	2559341	MemberAccess	result . CopyFrom		2559239	0					
ANR	2559342	Identifier	result		2559239	0					
ANR	2559343	Identifier	CopyFrom		2559239	1					
ANR	2559344	ArgumentList	val1		2559239	1					
ANR	2559345	Argument	val1		2559239	0					
ANR	2559346	Identifier	val1		2559239	0					
ANR	2559347	ReturnStatement	return SIG_CHLD1 ;	196:2:4489:4505	2559239	1	True				
ANR	2559348	Identifier	SIG_CHLD1		2559239	0					
ANR	2559349	IfStatement	if ( IsStrictOperator ( op ) )		2559239	5					
ANR	2559350	Condition	IsStrictOperator ( op )	200:5:4561:4582	2559239	0	True				
ANR	2559351	CallExpression	IsStrictOperator ( op )		2559239	0					
ANR	2559352	Callee	IsStrictOperator		2559239	0					
ANR	2559353	Identifier	IsStrictOperator		2559239	0					
ANR	2559354	ArgumentList	op		2559239	1					
ANR	2559355	Argument	op		2559239	0					
ANR	2559356	Identifier	op		2559239	0					
ANR	2559357	CompoundStatement		26:30:691:691	2559239	1					
ANR	2559358	IfStatement	if ( vt1 == Value :: ERROR_VALUE )		2559239	0					
ANR	2559359	Condition	vt1 == Value :: ERROR_VALUE	202:6:4622:4644	2559239	0	True				
ANR	2559360	EqualityExpression	vt1 == Value :: ERROR_VALUE		2559239	0		==			
ANR	2559361	Identifier	vt1		2559239	0					
ANR	2559362	Identifier	Value :: ERROR_VALUE		2559239	1					
ANR	2559363	CompoundStatement		28:32:753:753	2559239	1					
ANR	2559364	ExpressionStatement	result . SetErrorValue ( )	203:3:4653:4676	2559239	0	True				
ANR	2559365	CallExpression	result . SetErrorValue ( )		2559239	0					
ANR	2559366	Callee	result . SetErrorValue		2559239	0					
ANR	2559367	MemberAccess	result . SetErrorValue		2559239	0					
ANR	2559368	Identifier	result		2559239	0					
ANR	2559369	Identifier	SetErrorValue		2559239	1					
ANR	2559370	ArgumentList			2559239	1					
ANR	2559371	ReturnStatement	return SIG_CHLD1 ;	204:3:4681:4697	2559239	1	True				
ANR	2559372	Identifier	SIG_CHLD1		2559239	0					
ANR	2559373	IfStatement	if ( valid2 && vt2 == Value :: ERROR_VALUE )		2559239	1					
ANR	2559374	Condition	valid2 && vt2 == Value :: ERROR_VALUE	206:6:4709:4741	2559239	0	True				
ANR	2559375	AndExpression	valid2 && vt2 == Value :: ERROR_VALUE		2559239	0		&&			
ANR	2559376	Identifier	valid2		2559239	0					
ANR	2559377	EqualityExpression	vt2 == Value :: ERROR_VALUE		2559239	1		==			
ANR	2559378	Identifier	vt2		2559239	0					
ANR	2559379	Identifier	Value :: ERROR_VALUE		2559239	1					
ANR	2559380	CompoundStatement		32:42:850:850	2559239	1					
ANR	2559381	ExpressionStatement	result . SetErrorValue ( )	207:3:4750:4773	2559239	0	True				
ANR	2559382	CallExpression	result . SetErrorValue ( )		2559239	0					
ANR	2559383	Callee	result . SetErrorValue		2559239	0					
ANR	2559384	MemberAccess	result . SetErrorValue		2559239	0					
ANR	2559385	Identifier	result		2559239	0					
ANR	2559386	Identifier	SetErrorValue		2559239	1					
ANR	2559387	ArgumentList			2559239	1					
ANR	2559388	ReturnStatement	return SIG_CHLD2 ;	208:3:4778:4794	2559239	1	True				
ANR	2559389	Identifier	SIG_CHLD2		2559239	0					
ANR	2559390	IfStatement	if ( valid3 && vt3 == Value :: ERROR_VALUE )		2559239	2					
ANR	2559391	Condition	valid3 && vt3 == Value :: ERROR_VALUE	210:6:4806:4838	2559239	0	True				
ANR	2559392	AndExpression	valid3 && vt3 == Value :: ERROR_VALUE		2559239	0		&&			
ANR	2559393	Identifier	valid3		2559239	0					
ANR	2559394	EqualityExpression	vt3 == Value :: ERROR_VALUE		2559239	1		==			
ANR	2559395	Identifier	vt3		2559239	0					
ANR	2559396	Identifier	Value :: ERROR_VALUE		2559239	1					
ANR	2559397	CompoundStatement		36:42:947:947	2559239	1					
ANR	2559398	ExpressionStatement	result . SetErrorValue ( )	211:3:4847:4870	2559239	0	True				
ANR	2559399	CallExpression	result . SetErrorValue ( )		2559239	0					
ANR	2559400	Callee	result . SetErrorValue		2559239	0					
ANR	2559401	MemberAccess	result . SetErrorValue		2559239	0					
ANR	2559402	Identifier	result		2559239	0					
ANR	2559403	Identifier	SetErrorValue		2559239	1					
ANR	2559404	ArgumentList			2559239	1					
ANR	2559405	ReturnStatement	return SIG_CHLD3 ;	212:3:4875:4891	2559239	1	True				
ANR	2559406	Identifier	SIG_CHLD3		2559239	0					
ANR	2559407	IfStatement	if ( valid1 && vt1 == Value :: UNDEFINED_VALUE )		2559239	3					
ANR	2559408	Condition	valid1 && vt1 == Value :: UNDEFINED_VALUE	217:6:5048:5084	2559239	0	True				
ANR	2559409	AndExpression	valid1 && vt1 == Value :: UNDEFINED_VALUE		2559239	0		&&			
ANR	2559410	Identifier	valid1		2559239	0					
ANR	2559411	EqualityExpression	vt1 == Value :: UNDEFINED_VALUE		2559239	1		==			
ANR	2559412	Identifier	vt1		2559239	0					
ANR	2559413	Identifier	Value :: UNDEFINED_VALUE		2559239	1					
ANR	2559414	CompoundStatement		43:46:1193:1193	2559239	1					
ANR	2559415	ExpressionStatement	result . SetUndefinedValue ( )	218:3:5093:5119	2559239	0	True				
ANR	2559416	CallExpression	result . SetUndefinedValue ( )		2559239	0					
ANR	2559417	Callee	result . SetUndefinedValue		2559239	0					
ANR	2559418	MemberAccess	result . SetUndefinedValue		2559239	0					
ANR	2559419	Identifier	result		2559239	0					
ANR	2559420	Identifier	SetUndefinedValue		2559239	1					
ANR	2559421	ArgumentList			2559239	1					
ANR	2559422	ReturnStatement	return SIG_CHLD1 ;	219:3:5124:5140	2559239	1	True				
ANR	2559423	Identifier	SIG_CHLD1		2559239	0					
ANR	2559424	IfStatement	if ( valid2 && vt2 == Value :: UNDEFINED_VALUE )		2559239	4					
ANR	2559425	Condition	valid2 && vt2 == Value :: UNDEFINED_VALUE	221:6:5152:5188	2559239	0	True				
ANR	2559426	AndExpression	valid2 && vt2 == Value :: UNDEFINED_VALUE		2559239	0		&&			
ANR	2559427	Identifier	valid2		2559239	0					
ANR	2559428	EqualityExpression	vt2 == Value :: UNDEFINED_VALUE		2559239	1		==			
ANR	2559429	Identifier	vt2		2559239	0					
ANR	2559430	Identifier	Value :: UNDEFINED_VALUE		2559239	1					
ANR	2559431	CompoundStatement		47:46:1297:1297	2559239	1					
ANR	2559432	ExpressionStatement	result . SetUndefinedValue ( )	222:3:5197:5223	2559239	0	True				
ANR	2559433	CallExpression	result . SetUndefinedValue ( )		2559239	0					
ANR	2559434	Callee	result . SetUndefinedValue		2559239	0					
ANR	2559435	MemberAccess	result . SetUndefinedValue		2559239	0					
ANR	2559436	Identifier	result		2559239	0					
ANR	2559437	Identifier	SetUndefinedValue		2559239	1					
ANR	2559438	ArgumentList			2559239	1					
ANR	2559439	ReturnStatement	return SIG_CHLD2 ;	223:3:5228:5244	2559239	1	True				
ANR	2559440	Identifier	SIG_CHLD2		2559239	0					
ANR	2559441	IfStatement	if ( valid3 && vt3 == Value :: UNDEFINED_VALUE )		2559239	5					
ANR	2559442	Condition	valid3 && vt3 == Value :: UNDEFINED_VALUE	225:6:5256:5292	2559239	0	True				
ANR	2559443	AndExpression	valid3 && vt3 == Value :: UNDEFINED_VALUE		2559239	0		&&			
ANR	2559444	Identifier	valid3		2559239	0					
ANR	2559445	EqualityExpression	vt3 == Value :: UNDEFINED_VALUE		2559239	1		==			
ANR	2559446	Identifier	vt3		2559239	0					
ANR	2559447	Identifier	Value :: UNDEFINED_VALUE		2559239	1					
ANR	2559448	CompoundStatement		51:46:1401:1401	2559239	1					
ANR	2559449	ExpressionStatement	result . SetUndefinedValue ( )	226:3:5301:5327	2559239	0	True				
ANR	2559450	CallExpression	result . SetUndefinedValue ( )		2559239	0					
ANR	2559451	Callee	result . SetUndefinedValue		2559239	0					
ANR	2559452	MemberAccess	result . SetUndefinedValue		2559239	0					
ANR	2559453	Identifier	result		2559239	0					
ANR	2559454	Identifier	SetUndefinedValue		2559239	1					
ANR	2559455	ArgumentList			2559239	1					
ANR	2559456	ReturnStatement	return SIG_CHLD3 ;	227:3:5332:5348	2559239	1	True				
ANR	2559457	Identifier	SIG_CHLD3		2559239	0					
ANR	2559458	IfStatement	if ( op >= __COMPARISON_START__ && op <= __COMPARISON_END__ )		2559239	6					
ANR	2559459	Condition	op >= __COMPARISON_START__ && op <= __COMPARISON_END__	232:5:5409:5462	2559239	0	True				
ANR	2559460	AndExpression	op >= __COMPARISON_START__ && op <= __COMPARISON_END__		2559239	0		&&			
ANR	2559461	RelationalExpression	op >= __COMPARISON_START__		2559239	0		>=			
ANR	2559462	Identifier	op		2559239	0					
ANR	2559463	Identifier	__COMPARISON_START__		2559239	1					
ANR	2559464	RelationalExpression	op <= __COMPARISON_END__		2559239	1		<=			
ANR	2559465	Identifier	op		2559239	0					
ANR	2559466	Identifier	__COMPARISON_END__		2559239	1					
ANR	2559467	CompoundStatement		58:61:1570:1570	2559239	1					
ANR	2559468	ReturnStatement	"return ( doComparison ( op , val1 , val2 , result ) ) ;"	233:2:5469:5517	2559239	0	True				
ANR	2559469	CallExpression	"doComparison ( op , val1 , val2 , result )"		2559239	0					
ANR	2559470	Callee	doComparison		2559239	0					
ANR	2559471	Identifier	doComparison		2559239	0					
ANR	2559472	ArgumentList	op		2559239	1					
ANR	2559473	Argument	op		2559239	0					
ANR	2559474	Identifier	op		2559239	0					
ANR	2559475	Argument	val1		2559239	1					
ANR	2559476	Identifier	val1		2559239	0					
ANR	2559477	Argument	val2		2559239	2					
ANR	2559478	Identifier	val2		2559239	0					
ANR	2559479	Argument	result		2559239	3					
ANR	2559480	Identifier	result		2559239	0					
ANR	2559481	IfStatement	if ( op >= __ARITHMETIC_START__ && op <= __ARITHMETIC_END__ )		2559239	7					
ANR	2559482	Condition	op >= __ARITHMETIC_START__ && op <= __ARITHMETIC_END__	237:5:5563:5616	2559239	0	True				
ANR	2559483	AndExpression	op >= __ARITHMETIC_START__ && op <= __ARITHMETIC_END__		2559239	0		&&			
ANR	2559484	RelationalExpression	op >= __ARITHMETIC_START__		2559239	0		>=			
ANR	2559485	Identifier	op		2559239	0					
ANR	2559486	Identifier	__ARITHMETIC_START__		2559239	1					
ANR	2559487	RelationalExpression	op <= __ARITHMETIC_END__		2559239	1		<=			
ANR	2559488	Identifier	op		2559239	0					
ANR	2559489	Identifier	__ARITHMETIC_END__		2559239	1					
ANR	2559490	CompoundStatement		63:61:1724:1724	2559239	1					
ANR	2559491	ReturnStatement	"return ( doArithmetic ( op , val1 , val2 , result ) ) ;"	238:2:5623:5670	2559239	0	True				
ANR	2559492	CallExpression	"doArithmetic ( op , val1 , val2 , result )"		2559239	0					
ANR	2559493	Callee	doArithmetic		2559239	0					
ANR	2559494	Identifier	doArithmetic		2559239	0					
ANR	2559495	ArgumentList	op		2559239	1					
ANR	2559496	Argument	op		2559239	0					
ANR	2559497	Identifier	op		2559239	0					
ANR	2559498	Argument	val1		2559239	1					
ANR	2559499	Identifier	val1		2559239	0					
ANR	2559500	Argument	val2		2559239	2					
ANR	2559501	Identifier	val2		2559239	0					
ANR	2559502	Argument	result		2559239	3					
ANR	2559503	Identifier	result		2559239	0					
ANR	2559504	IfStatement	if ( op >= __LOGIC_START__ && op <= __LOGIC_END__ )		2559239	8					
ANR	2559505	Condition	op >= __LOGIC_START__ && op <= __LOGIC_END__	242:5:5723:5766	2559239	0	True				
ANR	2559506	AndExpression	op >= __LOGIC_START__ && op <= __LOGIC_END__		2559239	0		&&			
ANR	2559507	RelationalExpression	op >= __LOGIC_START__		2559239	0		>=			
ANR	2559508	Identifier	op		2559239	0					
ANR	2559509	Identifier	__LOGIC_START__		2559239	1					
ANR	2559510	RelationalExpression	op <= __LOGIC_END__		2559239	1		<=			
ANR	2559511	Identifier	op		2559239	0					
ANR	2559512	Identifier	__LOGIC_END__		2559239	1					
ANR	2559513	CompoundStatement		68:51:1874:1874	2559239	1					
ANR	2559514	ReturnStatement	"return ( doLogical ( op , val1 , val2 , result ) ) ;"	243:2:5773:5817	2559239	0	True				
ANR	2559515	CallExpression	"doLogical ( op , val1 , val2 , result )"		2559239	0					
ANR	2559516	Callee	doLogical		2559239	0					
ANR	2559517	Identifier	doLogical		2559239	0					
ANR	2559518	ArgumentList	op		2559239	1					
ANR	2559519	Argument	op		2559239	0					
ANR	2559520	Identifier	op		2559239	0					
ANR	2559521	Argument	val1		2559239	1					
ANR	2559522	Identifier	val1		2559239	0					
ANR	2559523	Argument	val2		2559239	2					
ANR	2559524	Identifier	val2		2559239	0					
ANR	2559525	Argument	result		2559239	3					
ANR	2559526	Identifier	result		2559239	0					
ANR	2559527	IfStatement	if ( op >= __BITWISE_START__ && op <= __BITWISE_END__ )		2559239	9					
ANR	2559528	Condition	op >= __BITWISE_START__ && op <= __BITWISE_END__	247:5:5870:5917	2559239	0	True				
ANR	2559529	AndExpression	op >= __BITWISE_START__ && op <= __BITWISE_END__		2559239	0		&&			
ANR	2559530	RelationalExpression	op >= __BITWISE_START__		2559239	0		>=			
ANR	2559531	Identifier	op		2559239	0					
ANR	2559532	Identifier	__BITWISE_START__		2559239	1					
ANR	2559533	RelationalExpression	op <= __BITWISE_END__		2559239	1		<=			
ANR	2559534	Identifier	op		2559239	0					
ANR	2559535	Identifier	__BITWISE_END__		2559239	1					
ANR	2559536	CompoundStatement		73:55:2025:2025	2559239	1					
ANR	2559537	ReturnStatement	"return ( doBitwise ( op , val1 , val2 , result ) ) ;"	248:2:5924:5968	2559239	0	True				
ANR	2559538	CallExpression	"doBitwise ( op , val1 , val2 , result )"		2559239	0					
ANR	2559539	Callee	doBitwise		2559239	0					
ANR	2559540	Identifier	doBitwise		2559239	0					
ANR	2559541	ArgumentList	op		2559239	1					
ANR	2559542	Argument	op		2559239	0					
ANR	2559543	Identifier	op		2559239	0					
ANR	2559544	Argument	val1		2559239	1					
ANR	2559545	Identifier	val1		2559239	0					
ANR	2559546	Argument	val2		2559239	2					
ANR	2559547	Identifier	val2		2559239	0					
ANR	2559548	Argument	result		2559239	3					
ANR	2559549	Identifier	result		2559239	0					
ANR	2559550	IfStatement	if ( op == TERNARY_OP )		2559239	10					
ANR	2559551	Condition	op == TERNARY_OP	252:5:5990:6005	2559239	0	True				
ANR	2559552	EqualityExpression	op == TERNARY_OP		2559239	0		==			
ANR	2559553	Identifier	op		2559239	0					
ANR	2559554	Identifier	TERNARY_OP		2559239	1					
ANR	2559555	CompoundStatement		80:2:2144:2150	2559239	1					
ANR	2559556	IdentifierDeclStatement	bool b ;	254:2:6039:6045	2559239	0	True				
ANR	2559557	IdentifierDecl	b		2559239	0					
ANR	2559558	IdentifierDeclType	bool		2559239	0					
ANR	2559559	Identifier	b		2559239	1					
ANR	2559560	IfStatement	if ( vt1 == Value :: UNDEFINED_VALUE )		2559239	1					
ANR	2559561	Condition	vt1 == Value :: UNDEFINED_VALUE	257:6:6113:6139	2559239	0	True				
ANR	2559562	EqualityExpression	vt1 == Value :: UNDEFINED_VALUE		2559239	0		==			
ANR	2559563	Identifier	vt1		2559239	0					
ANR	2559564	Identifier	Value :: UNDEFINED_VALUE		2559239	1					
ANR	2559565	CompoundStatement		83:35:2247:2247	2559239	1					
ANR	2559566	ExpressionStatement	result . SetUndefinedValue ( )	258:3:6147:6173	2559239	0	True				
ANR	2559567	CallExpression	result . SetUndefinedValue ( )		2559239	0					
ANR	2559568	Callee	result . SetUndefinedValue		2559239	0					
ANR	2559569	MemberAccess	result . SetUndefinedValue		2559239	0					
ANR	2559570	Identifier	result		2559239	0					
ANR	2559571	Identifier	SetUndefinedValue		2559239	1					
ANR	2559572	ArgumentList			2559239	1					
ANR	2559573	ReturnStatement	return SIG_CHLD1 ;	259:3:6178:6194	2559239	1	True				
ANR	2559574	Identifier	SIG_CHLD1		2559239	0					
ANR	2559575	IfStatement	if ( ! val1 . IsBooleanValueEquiv ( b ) )		2559239	2					
ANR	2559576	Condition	! val1 . IsBooleanValueEquiv ( b )	262:6:6207:6234	2559239	0	True				
ANR	2559577	UnaryOperationExpression	! val1 . IsBooleanValueEquiv ( b )		2559239	0					
ANR	2559578	UnaryOperator	!		2559239	0					
ANR	2559579	CallExpression	val1 . IsBooleanValueEquiv ( b )		2559239	1					
ANR	2559580	Callee	val1 . IsBooleanValueEquiv		2559239	0					
ANR	2559581	MemberAccess	val1 . IsBooleanValueEquiv		2559239	0					
ANR	2559582	Identifier	val1		2559239	0					
ANR	2559583	Identifier	IsBooleanValueEquiv		2559239	1					
ANR	2559584	ArgumentList	b		2559239	1					
ANR	2559585	Argument	b		2559239	0					
ANR	2559586	Identifier	b		2559239	0					
ANR	2559587	CompoundStatement		88:37:2343:2343	2559239	1					
ANR	2559588	ExpressionStatement	result . SetErrorValue ( )	263:3:6243:6265	2559239	0	True				
ANR	2559589	CallExpression	result . SetErrorValue ( )		2559239	0					
ANR	2559590	Callee	result . SetErrorValue		2559239	0					
ANR	2559591	MemberAccess	result . SetErrorValue		2559239	0					
ANR	2559592	Identifier	result		2559239	0					
ANR	2559593	Identifier	SetErrorValue		2559239	1					
ANR	2559594	ArgumentList			2559239	1					
ANR	2559595	ReturnStatement	return SIG_CHLD1 ;	264:3:6271:6287	2559239	1	True				
ANR	2559596	Identifier	SIG_CHLD1		2559239	0					
ANR	2559597	ElseStatement	else		2559239	0					
ANR	2559598	IfStatement	if ( b )		2559239	0					
ANR	2559599	Condition	b	265:13:6302:6302	2559239	0	True				
ANR	2559600	Identifier	b		2559239	0					
ANR	2559601	CompoundStatement		91:17:2411:2411	2559239	1					
ANR	2559602	ExpressionStatement	result . CopyFrom ( val2 )	266:3:6311:6334	2559239	0	True				
ANR	2559603	CallExpression	result . CopyFrom ( val2 )		2559239	0					
ANR	2559604	Callee	result . CopyFrom		2559239	0					
ANR	2559605	MemberAccess	result . CopyFrom		2559239	0					
ANR	2559606	Identifier	result		2559239	0					
ANR	2559607	Identifier	CopyFrom		2559239	1					
ANR	2559608	ArgumentList	val2		2559239	1					
ANR	2559609	Argument	val2		2559239	0					
ANR	2559610	Identifier	val2		2559239	0					
ANR	2559611	ReturnStatement	return ( SIG_CHLD2 ) ;	267:3:6339:6358	2559239	1	True				
ANR	2559612	Identifier	SIG_CHLD2		2559239	0					
ANR	2559613	ElseStatement	else		2559239	0					
ANR	2559614	CompoundStatement		94:9:2474:2474	2559239	0					
ANR	2559615	ExpressionStatement	result . CopyFrom ( val3 )	269:3:6374:6397	2559239	0	True				
ANR	2559616	CallExpression	result . CopyFrom ( val3 )		2559239	0					
ANR	2559617	Callee	result . CopyFrom		2559239	0					
ANR	2559618	MemberAccess	result . CopyFrom		2559239	0					
ANR	2559619	Identifier	result		2559239	0					
ANR	2559620	Identifier	CopyFrom		2559239	1					
ANR	2559621	ArgumentList	val3		2559239	1					
ANR	2559622	Argument	val3		2559239	0					
ANR	2559623	Identifier	val3		2559239	0					
ANR	2559624	ReturnStatement	return ( SIG_CHLD3 ) ;	270:3:6402:6421	2559239	1	True				
ANR	2559625	Identifier	SIG_CHLD3		2559239	0					
ANR	2559626	ElseStatement	else		2559239	0					
ANR	2559627	IfStatement	if ( op == SUBSCRIPT_OP )		2559239	0					
ANR	2559628	Condition	op == SUBSCRIPT_OP	272:12:6439:6456	2559239	0	True				
ANR	2559629	EqualityExpression	op == SUBSCRIPT_OP		2559239	0		==			
ANR	2559630	Identifier	op		2559239	0					
ANR	2559631	Identifier	SUBSCRIPT_OP		2559239	1					
ANR	2559632	CompoundStatement		98:33:2565:2565	2559239	1					
ANR	2559633	IfStatement	if ( vt1 == Value :: CLASSAD_VALUE && vt2 == Value :: STRING_VALUE )		2559239	0					
ANR	2559634	Condition	vt1 == Value :: CLASSAD_VALUE && vt2 == Value :: STRING_VALUE	275:6:6508:6564	2559239	0	True				
ANR	2559635	AndExpression	vt1 == Value :: CLASSAD_VALUE && vt2 == Value :: STRING_VALUE		2559239	0		&&			
ANR	2559636	EqualityExpression	vt1 == Value :: CLASSAD_VALUE		2559239	0		==			
ANR	2559637	Identifier	vt1		2559239	0					
ANR	2559638	Identifier	Value :: CLASSAD_VALUE		2559239	1					
ANR	2559639	EqualityExpression	vt2 == Value :: STRING_VALUE		2559239	1		==			
ANR	2559640	Identifier	vt2		2559239	0					
ANR	2559641	Identifier	Value :: STRING_VALUE		2559239	1					
ANR	2559642	CompoundStatement		103:3:2706:2720	2559239	1					
ANR	2559643	IdentifierDeclStatement	ClassAd * classad = NULL ;	276:3:6572:6596	2559239	0	True				
ANR	2559644	IdentifierDecl	* classad = NULL		2559239	0					
ANR	2559645	IdentifierDeclType	ClassAd *		2559239	0					
ANR	2559646	Identifier	classad		2559239	1					
ANR	2559647	AssignmentExpression	* classad = NULL		2559239	2		=			
ANR	2559648	Identifier	NULL		2559239	0					
ANR	2559649	Identifier	NULL		2559239	1					
ANR	2559650	IdentifierDeclStatement	string index ;	277:3:6601:6615	2559239	1	True				
ANR	2559651	IdentifierDecl	index		2559239	0					
ANR	2559652	IdentifierDeclType	string		2559239	0					
ANR	2559653	Identifier	index		2559239	1					
ANR	2559654	ExpressionStatement	val1 . IsClassAdValue ( classad )	279:3:6624:6652	2559239	2	True				
ANR	2559655	CallExpression	val1 . IsClassAdValue ( classad )		2559239	0					
ANR	2559656	Callee	val1 . IsClassAdValue		2559239	0					
ANR	2559657	MemberAccess	val1 . IsClassAdValue		2559239	0					
ANR	2559658	Identifier	val1		2559239	0					
ANR	2559659	Identifier	IsClassAdValue		2559239	1					
ANR	2559660	ArgumentList	classad		2559239	1					
ANR	2559661	Argument	classad		2559239	0					
ANR	2559662	Identifier	classad		2559239	0					
ANR	2559663	ExpressionStatement	val2 . IsStringValue ( index )	280:3:6657:6682	2559239	3	True				
ANR	2559664	CallExpression	val2 . IsStringValue ( index )		2559239	0					
ANR	2559665	Callee	val2 . IsStringValue		2559239	0					
ANR	2559666	MemberAccess	val2 . IsStringValue		2559239	0					
ANR	2559667	Identifier	val2		2559239	0					
ANR	2559668	Identifier	IsStringValue		2559239	1					
ANR	2559669	ArgumentList	index		2559239	1					
ANR	2559670	Argument	index		2559239	0					
ANR	2559671	Identifier	index		2559239	0					
ANR	2559672	IfStatement	if ( ! classad -> Lookup ( index ) )		2559239	4					
ANR	2559673	Condition	! classad -> Lookup ( index )	282:16:6704:6726	2559239	0	True				
ANR	2559674	UnaryOperationExpression	! classad -> Lookup ( index )		2559239	0					
ANR	2559675	UnaryOperator	!		2559239	0					
ANR	2559676	CallExpression	classad -> Lookup ( index )		2559239	1					
ANR	2559677	Callee	classad -> Lookup		2559239	0					
ANR	2559678	PtrMemberAccess	classad -> Lookup		2559239	0					
ANR	2559679	Identifier	classad		2559239	0					
ANR	2559680	Identifier	Lookup		2559239	1					
ANR	2559681	ArgumentList	index		2559239	1					
ANR	2559682	Argument	index		2559239	0					
ANR	2559683	Identifier	index		2559239	0					
ANR	2559684	CompoundStatement		108:41:2834:2834	2559239	1					
ANR	2559685	ExpressionStatement	result . SetErrorValue ( )	283:4:6735:6757	2559239	0	True				
ANR	2559686	CallExpression	result . SetErrorValue ( )		2559239	0					
ANR	2559687	Callee	result . SetErrorValue		2559239	0					
ANR	2559688	MemberAccess	result . SetErrorValue		2559239	0					
ANR	2559689	Identifier	result		2559239	0					
ANR	2559690	Identifier	SetErrorValue		2559239	1					
ANR	2559691	ArgumentList			2559239	1					
ANR	2559692	ReturnStatement	return SIG_CHLD2 ;	284:4:6763:6779	2559239	1	True				
ANR	2559693	Identifier	SIG_CHLD2		2559239	0					
ANR	2559694	IfStatement	"if ( ! classad -> EvaluateAttr ( index , result ) )"		2559239	5					
ANR	2559695	Condition	"! classad -> EvaluateAttr ( index , result )"	286:7:6802:6838	2559239	0	True				
ANR	2559696	UnaryOperationExpression	"! classad -> EvaluateAttr ( index , result )"		2559239	0					
ANR	2559697	UnaryOperator	!		2559239	0					
ANR	2559698	CallExpression	"classad -> EvaluateAttr ( index , result )"		2559239	1					
ANR	2559699	Callee	classad -> EvaluateAttr		2559239	0					
ANR	2559700	PtrMemberAccess	classad -> EvaluateAttr		2559239	0					
ANR	2559701	Identifier	classad		2559239	0					
ANR	2559702	Identifier	EvaluateAttr		2559239	1					
ANR	2559703	ArgumentList	index		2559239	1					
ANR	2559704	Argument	index		2559239	0					
ANR	2559705	Identifier	index		2559239	0					
ANR	2559706	Argument	result		2559239	1					
ANR	2559707	Identifier	result		2559239	0					
ANR	2559708	CompoundStatement		112:46:2946:2946	2559239	1					
ANR	2559709	ExpressionStatement	result . SetErrorValue ( )	287:4:6847:6869	2559239	0	True				
ANR	2559710	CallExpression	result . SetErrorValue ( )		2559239	0					
ANR	2559711	Callee	result . SetErrorValue		2559239	0					
ANR	2559712	MemberAccess	result . SetErrorValue		2559239	0					
ANR	2559713	Identifier	result		2559239	0					
ANR	2559714	Identifier	SetErrorValue		2559239	1					
ANR	2559715	ArgumentList			2559239	1					
ANR	2559716	ReturnStatement	return SIG_CHLD2 ;	288:4:6875:6891	2559239	1	True				
ANR	2559717	Identifier	SIG_CHLD2		2559239	0					
ANR	2559718	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	291:3:6902:6933	2559239	6	True				
ANR	2559719	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2559239	0		|			
ANR	2559720	Identifier	SIG_CHLD1		2559239	0					
ANR	2559721	Identifier	SIG_CHLD2		2559239	1					
ANR	2559722	ElseStatement	else		2559239	0					
ANR	2559723	IfStatement	if ( vt1 == Value :: LIST_VALUE && vt2 == Value :: INTEGER_VALUE )		2559239	0					
ANR	2559724	Condition	vt1 == Value :: LIST_VALUE && vt2 == Value :: INTEGER_VALUE	292:13:6948:7002	2559239	0	True				
ANR	2559725	AndExpression	vt1 == Value :: LIST_VALUE && vt2 == Value :: INTEGER_VALUE		2559239	0		&&			
ANR	2559726	EqualityExpression	vt1 == Value :: LIST_VALUE		2559239	0		==			
ANR	2559727	Identifier	vt1		2559239	0					
ANR	2559728	Identifier	Value :: LIST_VALUE		2559239	1					
ANR	2559729	EqualityExpression	vt2 == Value :: INTEGER_VALUE		2559239	1		==			
ANR	2559730	Identifier	vt2		2559239	0					
ANR	2559731	Identifier	Value :: INTEGER_VALUE		2559239	1					
ANR	2559732	CompoundStatement		126:3:3262:3291	2559239	1					
ANR	2559733	IdentifierDeclStatement	int index ;	293:3:7010:7030	2559239	0	True				
ANR	2559734	IdentifierDecl	index		2559239	0					
ANR	2559735	IdentifierDeclType	int		2559239	0					
ANR	2559736	Identifier	index		2559239	1					
ANR	2559737	IdentifierDeclStatement	const ExprList * elist = NULL ;	294:3:7035:7063	2559239	1	True				
ANR	2559738	IdentifierDecl	* elist = NULL		2559239	0					
ANR	2559739	IdentifierDeclType	const ExprList *		2559239	0					
ANR	2559740	Identifier	elist		2559239	1					
ANR	2559741	AssignmentExpression	* elist = NULL		2559239	2		=			
ANR	2559742	Identifier	NULL		2559239	0					
ANR	2559743	Identifier	NULL		2559239	1					
ANR	2559744	ExpressionStatement	val1 . IsListValue ( elist )	296:3:7069:7094	2559239	2	True				
ANR	2559745	CallExpression	val1 . IsListValue ( elist )		2559239	0					
ANR	2559746	Callee	val1 . IsListValue		2559239	0					
ANR	2559747	MemberAccess	val1 . IsListValue		2559239	0					
ANR	2559748	Identifier	val1		2559239	0					
ANR	2559749	Identifier	IsListValue		2559239	1					
ANR	2559750	ArgumentList	elist		2559239	1					
ANR	2559751	Argument	elist		2559239	0					
ANR	2559752	Identifier	elist		2559239	0					
ANR	2559753	ExpressionStatement	val2 . IsIntegerValue ( index )	297:3:7101:7129	2559239	3	True				
ANR	2559754	CallExpression	val2 . IsIntegerValue ( index )		2559239	0					
ANR	2559755	Callee	val2 . IsIntegerValue		2559239	0					
ANR	2559756	MemberAccess	val2 . IsIntegerValue		2559239	0					
ANR	2559757	Identifier	val2		2559239	0					
ANR	2559758	Identifier	IsIntegerValue		2559239	1					
ANR	2559759	ArgumentList	index		2559239	1					
ANR	2559760	Argument	index		2559239	0					
ANR	2559761	Identifier	index		2559239	0					
ANR	2559762	IdentifierDeclStatement	ExprListIterator itr ( elist ) ;	300:3:7157:7186	2559239	4	True				
ANR	2559763	IdentifierDecl	itr ( elist )		2559239	0					
ANR	2559764	IdentifierDeclType	ExprListIterator		2559239	0					
ANR	2559765	Identifier	itr		2559239	1					
ANR	2559766	Identifier	elist		2559239	2					
ANR	2559767	IfStatement	if ( index < 0 || ! itr . ToNth ( index ) )		2559239	5					
ANR	2559768	Condition	index < 0 || ! itr . ToNth ( index )	301:7:7195:7226	2559239	0	True				
ANR	2559769	OrExpression	index < 0 || ! itr . ToNth ( index )		2559239	0		||			
ANR	2559770	RelationalExpression	index < 0		2559239	0		<			
ANR	2559771	Identifier	index		2559239	0					
ANR	2559772	PrimaryExpression	0		2559239	1					
ANR	2559773	UnaryOperationExpression	! itr . ToNth ( index )		2559239	1					
ANR	2559774	UnaryOperator	!		2559239	0					
ANR	2559775	CallExpression	itr . ToNth ( index )		2559239	1					
ANR	2559776	Callee	itr . ToNth		2559239	0					
ANR	2559777	MemberAccess	itr . ToNth		2559239	0					
ANR	2559778	Identifier	itr		2559239	0					
ANR	2559779	Identifier	ToNth		2559239	1					
ANR	2559780	ArgumentList	index		2559239	1					
ANR	2559781	Argument	index		2559239	0					
ANR	2559782	Identifier	index		2559239	0					
ANR	2559783	CompoundStatement		127:42:3335:3335	2559239	1					
ANR	2559784	ExpressionStatement	result . SetErrorValue ( )	302:4:7236:7258	2559239	0	True				
ANR	2559785	CallExpression	result . SetErrorValue ( )		2559239	0					
ANR	2559786	Callee	result . SetErrorValue		2559239	0					
ANR	2559787	MemberAccess	result . SetErrorValue		2559239	0					
ANR	2559788	Identifier	result		2559239	0					
ANR	2559789	Identifier	SetErrorValue		2559239	1					
ANR	2559790	ArgumentList			2559239	1					
ANR	2559791	ReturnStatement	return SIG_CHLD2 ;	303:4:7264:7280	2559239	1	True				
ANR	2559792	Identifier	SIG_CHLD2		2559239	0					
ANR	2559793	IfStatement	"if ( ! itr . CurrentValue ( result , es ) )"		2559239	6					
ANR	2559794	Condition	"! itr . CurrentValue ( result , es )"	307:7:7314:7344	2559239	0	True				
ANR	2559795	UnaryOperationExpression	"! itr . CurrentValue ( result , es )"		2559239	0					
ANR	2559796	UnaryOperator	!		2559239	0					
ANR	2559797	CallExpression	"itr . CurrentValue ( result , es )"		2559239	1					
ANR	2559798	Callee	itr . CurrentValue		2559239	0					
ANR	2559799	MemberAccess	itr . CurrentValue		2559239	0					
ANR	2559800	Identifier	itr		2559239	0					
ANR	2559801	Identifier	CurrentValue		2559239	1					
ANR	2559802	ArgumentList	result		2559239	1					
ANR	2559803	Argument	result		2559239	0					
ANR	2559804	Identifier	result		2559239	0					
ANR	2559805	Argument	es		2559239	1					
ANR	2559806	Identifier	es		2559239	0					
ANR	2559807	CompoundStatement		133:41:3453:3453	2559239	1					
ANR	2559808	ExpressionStatement	result . SetErrorValue ( )	308:4:7354:7377	2559239	0	True				
ANR	2559809	CallExpression	result . SetErrorValue ( )		2559239	0					
ANR	2559810	Callee	result . SetErrorValue		2559239	0					
ANR	2559811	MemberAccess	result . SetErrorValue		2559239	0					
ANR	2559812	Identifier	result		2559239	0					
ANR	2559813	Identifier	SetErrorValue		2559239	1					
ANR	2559814	ArgumentList			2559239	1					
ANR	2559815	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	310:3:7387:7418	2559239	7	True				
ANR	2559816	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2559239	0		|			
ANR	2559817	Identifier	SIG_CHLD1		2559239	0					
ANR	2559818	Identifier	SIG_CHLD2		2559239	1					
ANR	2559819	ElseStatement	else		2559239	0					
ANR	2559820	CompoundStatement		137:9:3534:3534	2559239	0					
ANR	2559821	ExpressionStatement	result . SetErrorValue ( )	312:3:7434:7456	2559239	0	True				
ANR	2559822	CallExpression	result . SetErrorValue ( )		2559239	0					
ANR	2559823	Callee	result . SetErrorValue		2559239	0					
ANR	2559824	MemberAccess	result . SetErrorValue		2559239	0					
ANR	2559825	Identifier	result		2559239	0					
ANR	2559826	Identifier	SetErrorValue		2559239	1					
ANR	2559827	ArgumentList			2559239	1					
ANR	2559828	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	313:3:7461:7492	2559239	1	True				
ANR	2559829	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2559239	0		|			
ANR	2559830	Identifier	SIG_CHLD1		2559239	0					
ANR	2559831	Identifier	SIG_CHLD2		2559239	1					
ANR	2559832	ExpressionStatement	"CLASSAD_EXCEPT ( ""Should not get here"" )"	318:1:7531:7569	2559239	11	True				
ANR	2559833	CallExpression	"CLASSAD_EXCEPT ( ""Should not get here"" )"		2559239	0					
ANR	2559834	Callee	CLASSAD_EXCEPT		2559239	0					
ANR	2559835	Identifier	CLASSAD_EXCEPT		2559239	0					
ANR	2559836	ArgumentList	"""Should not get here"""		2559239	1					
ANR	2559837	Argument	"""Should not get here"""		2559239	0					
ANR	2559838	PrimaryExpression	"""Should not get here"""		2559239	0					
ANR	2559839	ReturnStatement	return SIG_NONE ;	319:1:7572:7587	2559239	12	True				
ANR	2559840	Identifier	SIG_NONE		2559239	0					
ANR	2559841	ReturnType	int		2559239	1					
ANR	2559842	Identifier	Operation :: _doOperation		2559239	2					
ANR	2559843	ParameterList	"OpKind op , Value & val1 , Value & val2 , Value & val3 , bool valid1 , bool valid2 , bool valid3 , Value & result , EvalState * es"		2559239	3					
ANR	2559844	Parameter	OpKind op	173:14:3772:3780	2559239	0	True				
ANR	2559845	ParameterType	OpKind		2559239	0					
ANR	2559846	Identifier	op		2559239	1					
ANR	2559847	Parameter	Value & val1	173:25:3783:3793	2559239	1	True				
ANR	2559848	ParameterType	Value &		2559239	0					
ANR	2559849	Identifier	val1		2559239	1					
ANR	2559850	Parameter	Value & val2	173:38:3796:3806	2559239	2	True				
ANR	2559851	ParameterType	Value &		2559239	0					
ANR	2559852	Identifier	val2		2559239	1					
ANR	2559853	Parameter	Value & val3	173:51:3809:3819	2559239	3	True				
ANR	2559854	ParameterType	Value &		2559239	0					
ANR	2559855	Identifier	val3		2559239	1					
ANR	2559856	Parameter	bool valid1	174:3:3826:3836	2559239	4	True				
ANR	2559857	ParameterType	bool		2559239	0					
ANR	2559858	Identifier	valid1		2559239	1					
ANR	2559859	Parameter	bool valid2	174:16:3839:3849	2559239	5	True				
ANR	2559860	ParameterType	bool		2559239	0					
ANR	2559861	Identifier	valid2		2559239	1					
ANR	2559862	Parameter	bool valid3	174:29:3852:3862	2559239	6	True				
ANR	2559863	ParameterType	bool		2559239	0					
ANR	2559864	Identifier	valid3		2559239	1					
ANR	2559865	Parameter	Value & result	174:42:3865:3877	2559239	7	True				
ANR	2559866	ParameterType	Value &		2559239	0					
ANR	2559867	Identifier	result		2559239	1					
ANR	2559868	Parameter	EvalState * es	174:57:3880:3891	2559239	8	True				
ANR	2559869	ParameterType	EvalState *		2559239	0					
ANR	2559870	Identifier	es		2559239	1					
ANR	2559871	CFGEntryNode	ENTRY		2559239		True				
ANR	2559872	CFGExitNode	EXIT		2559239		True				
ANR	2559873	Symbol	doLogical		2559239						
ANR	2559874	Symbol	__BITWISE_START__		2559239						
ANR	2559875	Symbol	val3		2559239						
ANR	2559876	Symbol	val2		2559239						
ANR	2559877	Symbol	SIG_CHLD3		2559239						
ANR	2559878	Symbol	val1		2559239						
ANR	2559879	Symbol	__BITWISE_END__		2559239						
ANR	2559880	Symbol	SIG_CHLD1		2559239						
ANR	2559881	Symbol	Value :: ERROR_VALUE		2559239						
ANR	2559882	Symbol	SIG_CHLD2		2559239						
ANR	2559883	Symbol	TERNARY_OP		2559239						
ANR	2559884	Symbol	__NO_OP__		2559239						
ANR	2559885	Symbol	doArithmetic		2559239						
ANR	2559886	Symbol	Value :: UNDEFINED_VALUE		2559239						
ANR	2559887	Symbol	__LOGIC_END__		2559239						
ANR	2559888	Symbol	NULL		2559239						
ANR	2559889	Symbol	classad -> Lookup		2559239						
ANR	2559890	Symbol	doBitwise		2559239						
ANR	2559891	Symbol	itr		2559239						
ANR	2559892	Symbol	index		2559239						
ANR	2559893	Symbol	SIG_NONE		2559239						
ANR	2559894	Symbol	Value :: CLASSAD_VALUE		2559239						
ANR	2559895	Symbol	es		2559239						
ANR	2559896	Symbol	IsStrictOperator		2559239						
ANR	2559897	Symbol	vt1		2559239						
ANR	2559898	Symbol	vt3		2559239						
ANR	2559899	Symbol	val2 . GetType		2559239						
ANR	2559900	Symbol	vt2		2559239						
ANR	2559901	Symbol	Value :: LIST_VALUE		2559239						
ANR	2559902	Symbol	SUBSCRIPT_OP		2559239						
ANR	2559903	Symbol	__LOGIC_START__		2559239						
ANR	2559904	Symbol	elist		2559239						
ANR	2559905	Symbol	classad -> EvaluateAttr		2559239						
ANR	2559906	Symbol	Value :: STRING_VALUE		2559239						
ANR	2559907	Symbol	__ARITHMETIC_START__		2559239						
ANR	2559908	Symbol	valid1		2559239						
ANR	2559909	Symbol	result		2559239						
ANR	2559910	Symbol	valid3		2559239						
ANR	2559911	Symbol	valid2		2559239						
ANR	2559912	Symbol	val1 . GetType		2559239						
ANR	2559913	Symbol	__ARITHMETIC_END__		2559239						
ANR	2559914	Symbol	itr . ToNth		2559239						
ANR	2559915	Symbol	itr . CurrentValue		2559239						
ANR	2559916	Symbol	val1 . IsBooleanValueEquiv		2559239						
ANR	2559917	Symbol	op		2559239						
ANR	2559918	Symbol	__COMPARISON_END__		2559239						
ANR	2559919	Symbol	b		2559239						
ANR	2559920	Symbol	* classad		2559239						
ANR	2559921	Symbol	PARENTHESES_OP		2559239						
ANR	2559922	Symbol	Value :: BOOLEAN_VALUE		2559239						
ANR	2559923	Symbol	val3 . GetType		2559239						
ANR	2559924	Symbol	__COMPARISON_START__		2559239						
ANR	2559925	Symbol	classad		2559239						
ANR	2559926	Symbol	UNARY_PLUS_OP		2559239						
ANR	2559927	Symbol	Value :: ABSOLUTE_TIME_VALUE		2559239						
ANR	2559928	Symbol	doComparison		2559239						
ANR	2559929	Symbol	Value :: INTEGER_VALUE		2559239						
ANR	2559930	Function	Operation :: _Evaluate	322:0:7592:8397							
ANR	2559931	FunctionDef	"Operation :: _Evaluate (EvalState & state , Value & result)"		2559930	0					
ANR	2559932	CompoundStatement		324:0:7659:8397	2559930	0					
ANR	2559933	IdentifierDeclStatement	"Value val1 , val2 , val3 ;"	325:1:7662:7684	2559930	0	True				
ANR	2559934	IdentifierDecl	val1		2559930	0					
ANR	2559935	IdentifierDeclType	Value		2559930	0					
ANR	2559936	Identifier	val1		2559930	1					
ANR	2559937	IdentifierDecl	val2		2559930	1					
ANR	2559938	IdentifierDeclType	Value		2559930	0					
ANR	2559939	Identifier	val2		2559930	1					
ANR	2559940	IdentifierDecl	val3		2559930	2					
ANR	2559941	IdentifierDeclType	Value		2559930	0					
ANR	2559942	Identifier	val3		2559930	1					
ANR	2559943	IdentifierDeclStatement	"bool valid1 , valid2 , valid3 ;"	326:1:7687:7714	2559930	1	True				
ANR	2559944	IdentifierDecl	valid1		2559930	0					
ANR	2559945	IdentifierDeclType	bool		2559930	0					
ANR	2559946	Identifier	valid1		2559930	1					
ANR	2559947	IdentifierDecl	valid2		2559930	1					
ANR	2559948	IdentifierDeclType	bool		2559930	0					
ANR	2559949	Identifier	valid2		2559930	1					
ANR	2559950	IdentifierDecl	valid3		2559930	2					
ANR	2559951	IdentifierDeclType	bool		2559930	0					
ANR	2559952	Identifier	valid3		2559930	1					
ANR	2559953	IdentifierDeclStatement	int rval ;	327:1:7717:7726	2559930	2	True				
ANR	2559954	IdentifierDecl	rval		2559930	0					
ANR	2559955	IdentifierDeclType	int		2559930	0					
ANR	2559956	Identifier	rval		2559930	1					
ANR	2559957	ExpressionStatement	valid1 = false	329:1:7730:7744	2559930	3	True				
ANR	2559958	AssignmentExpression	valid1 = false		2559930	0		=			
ANR	2559959	Identifier	valid1		2559930	0					
ANR	2559960	Identifier	false		2559930	1					
ANR	2559961	ExpressionStatement	valid2 = false	330:1:7747:7761	2559930	4	True				
ANR	2559962	AssignmentExpression	valid2 = false		2559930	0		=			
ANR	2559963	Identifier	valid2		2559930	0					
ANR	2559964	Identifier	false		2559930	1					
ANR	2559965	ExpressionStatement	valid3 = false	331:1:7764:7778	2559930	5	True				
ANR	2559966	AssignmentExpression	valid3 = false		2559930	0		=			
ANR	2559967	Identifier	valid3		2559930	0					
ANR	2559968	Identifier	false		2559930	1					
ANR	2559969	IfStatement	if ( child1 )		2559930	6					
ANR	2559970	Condition	child1	334:5:7818:7823	2559930	0	True				
ANR	2559971	Identifier	child1		2559930	0					
ANR	2559972	CompoundStatement		11:13:166:166	2559930	1					
ANR	2559973	IfStatement	"if ( ! child1 -> Evaluate ( state , val1 ) )"		2559930	0					
ANR	2559974	Condition	"! child1 -> Evaluate ( state , val1 )"	335:6:7835:7865	2559930	0	True				
ANR	2559975	UnaryOperationExpression	"! child1 -> Evaluate ( state , val1 )"		2559930	0					
ANR	2559976	UnaryOperator	!		2559930	0					
ANR	2559977	CallExpression	"child1 -> Evaluate ( state , val1 )"		2559930	1					
ANR	2559978	Callee	child1 -> Evaluate		2559930	0					
ANR	2559979	PtrMemberAccess	child1 -> Evaluate		2559930	0					
ANR	2559980	Identifier	child1		2559930	0					
ANR	2559981	Identifier	Evaluate		2559930	1					
ANR	2559982	ArgumentList	state		2559930	1					
ANR	2559983	Argument	state		2559930	0					
ANR	2559984	Identifier	state		2559930	0					
ANR	2559985	Argument	val1		2559930	1					
ANR	2559986	Identifier	val1		2559930	0					
ANR	2559987	CompoundStatement		12:40:209:209	2559930	1					
ANR	2559988	ExpressionStatement	result . SetErrorValue ( )	336:3:7874:7897	2559930	0	True				
ANR	2559989	CallExpression	result . SetErrorValue ( )		2559930	0					
ANR	2559990	Callee	result . SetErrorValue		2559930	0					
ANR	2559991	MemberAccess	result . SetErrorValue		2559930	0					
ANR	2559992	Identifier	result		2559930	0					
ANR	2559993	Identifier	SetErrorValue		2559930	1					
ANR	2559994	ArgumentList			2559930	1					
ANR	2559995	ReturnStatement	return ( false ) ;	337:3:7902:7917	2559930	1	True				
ANR	2559996	Identifier	false		2559930	0					
ANR	2559997	ExpressionStatement	valid1 = true	339:2:7925:7938	2559930	1	True				
ANR	2559998	AssignmentExpression	valid1 = true		2559930	0		=			
ANR	2559999	Identifier	valid1		2559930	0					
ANR	2560000	Identifier	true		2559930	1					
ANR	2560001	IfStatement	"if ( shortCircuit ( state , val1 , result ) )"		2559930	2					
ANR	2560002	Condition	"shortCircuit ( state , val1 , result )"	341:6:7947:7981	2559930	0	True				
ANR	2560003	CallExpression	"shortCircuit ( state , val1 , result )"		2559930	0					
ANR	2560004	Callee	shortCircuit		2559930	0					
ANR	2560005	Identifier	shortCircuit		2559930	0					
ANR	2560006	ArgumentList	state		2559930	1					
ANR	2560007	Argument	state		2559930	0					
ANR	2560008	Identifier	state		2559930	0					
ANR	2560009	Argument	val1		2559930	1					
ANR	2560010	Identifier	val1		2559930	0					
ANR	2560011	Argument	result		2559930	2					
ANR	2560012	Identifier	result		2559930	0					
ANR	2560013	CompoundStatement		18:44:325:325	2559930	1					
ANR	2560014	ReturnStatement	return true ;	342:3:7990:8001	2559930	0	True				
ANR	2560015	Identifier	true		2559930	0					
ANR	2560016	IfStatement	if ( child2 )		2559930	7					
ANR	2560017	Condition	child2	346:5:8016:8021	2559930	0	True				
ANR	2560018	Identifier	child2		2559930	0					
ANR	2560019	CompoundStatement		23:13:364:364	2559930	1					
ANR	2560020	IfStatement	"if ( ! child2 -> Evaluate ( state , val2 ) )"		2559930	0					
ANR	2560021	Condition	"! child2 -> Evaluate ( state , val2 )"	347:6:8032:8062	2559930	0	True				
ANR	2560022	UnaryOperationExpression	"! child2 -> Evaluate ( state , val2 )"		2559930	0					
ANR	2560023	UnaryOperator	!		2559930	0					
ANR	2560024	CallExpression	"child2 -> Evaluate ( state , val2 )"		2559930	1					
ANR	2560025	Callee	child2 -> Evaluate		2559930	0					
ANR	2560026	PtrMemberAccess	child2 -> Evaluate		2559930	0					
ANR	2560027	Identifier	child2		2559930	0					
ANR	2560028	Identifier	Evaluate		2559930	1					
ANR	2560029	ArgumentList	state		2559930	1					
ANR	2560030	Argument	state		2559930	0					
ANR	2560031	Identifier	state		2559930	0					
ANR	2560032	Argument	val2		2559930	1					
ANR	2560033	Identifier	val2		2559930	0					
ANR	2560034	CompoundStatement		24:40:406:406	2559930	1					
ANR	2560035	ExpressionStatement	result . SetErrorValue ( )	348:3:8071:8094	2559930	0	True				
ANR	2560036	CallExpression	result . SetErrorValue ( )		2559930	0					
ANR	2560037	Callee	result . SetErrorValue		2559930	0					
ANR	2560038	MemberAccess	result . SetErrorValue		2559930	0					
ANR	2560039	Identifier	result		2559930	0					
ANR	2560040	Identifier	SetErrorValue		2559930	1					
ANR	2560041	ArgumentList			2559930	1					
ANR	2560042	ReturnStatement	return ( false ) ;	349:3:8099:8114	2559930	1	True				
ANR	2560043	Identifier	false		2559930	0					
ANR	2560044	ExpressionStatement	valid2 = true	351:2:8122:8135	2559930	1	True				
ANR	2560045	AssignmentExpression	valid2 = true		2559930	0		=			
ANR	2560046	Identifier	valid2		2559930	0					
ANR	2560047	Identifier	true		2559930	1					
ANR	2560048	IfStatement	if ( child3 )		2559930	8					
ANR	2560049	Condition	child3	353:5:8145:8150	2559930	0	True				
ANR	2560050	Identifier	child3		2559930	0					
ANR	2560051	CompoundStatement		30:13:493:493	2559930	1					
ANR	2560052	IfStatement	"if ( ! child3 -> Evaluate ( state , val3 ) )"		2559930	0					
ANR	2560053	Condition	"! child3 -> Evaluate ( state , val3 )"	354:6:8161:8191	2559930	0	True				
ANR	2560054	UnaryOperationExpression	"! child3 -> Evaluate ( state , val3 )"		2559930	0					
ANR	2560055	UnaryOperator	!		2559930	0					
ANR	2560056	CallExpression	"child3 -> Evaluate ( state , val3 )"		2559930	1					
ANR	2560057	Callee	child3 -> Evaluate		2559930	0					
ANR	2560058	PtrMemberAccess	child3 -> Evaluate		2559930	0					
ANR	2560059	Identifier	child3		2559930	0					
ANR	2560060	Identifier	Evaluate		2559930	1					
ANR	2560061	ArgumentList	state		2559930	1					
ANR	2560062	Argument	state		2559930	0					
ANR	2560063	Identifier	state		2559930	0					
ANR	2560064	Argument	val3		2559930	1					
ANR	2560065	Identifier	val3		2559930	0					
ANR	2560066	CompoundStatement		31:40:535:535	2559930	1					
ANR	2560067	ExpressionStatement	result . SetErrorValue ( )	355:3:8200:8223	2559930	0	True				
ANR	2560068	CallExpression	result . SetErrorValue ( )		2559930	0					
ANR	2560069	Callee	result . SetErrorValue		2559930	0					
ANR	2560070	MemberAccess	result . SetErrorValue		2559930	0					
ANR	2560071	Identifier	result		2559930	0					
ANR	2560072	Identifier	SetErrorValue		2559930	1					
ANR	2560073	ArgumentList			2559930	1					
ANR	2560074	ReturnStatement	return ( false ) ;	356:3:8228:8243	2559930	1	True				
ANR	2560075	Identifier	false		2559930	0					
ANR	2560076	ExpressionStatement	valid3 = true	358:2:8251:8264	2559930	1	True				
ANR	2560077	AssignmentExpression	valid3 = true		2559930	0		=			
ANR	2560078	Identifier	valid3		2559930	0					
ANR	2560079	Identifier	true		2559930	1					
ANR	2560080	ExpressionStatement	"rval = _doOperation ( operation , val1 , val2 , val3 , valid1 , valid2 , valid3 , result , & state )"	361:1:8271:8365	2559930	9	True				
ANR	2560081	AssignmentExpression	"rval = _doOperation ( operation , val1 , val2 , val3 , valid1 , valid2 , valid3 , result , & state )"		2559930	0		=			
ANR	2560082	Identifier	rval		2559930	0					
ANR	2560083	CallExpression	"_doOperation ( operation , val1 , val2 , val3 , valid1 , valid2 , valid3 , result , & state )"		2559930	1					
ANR	2560084	Callee	_doOperation		2559930	0					
ANR	2560085	Identifier	_doOperation		2559930	0					
ANR	2560086	ArgumentList	operation		2559930	1					
ANR	2560087	Argument	operation		2559930	0					
ANR	2560088	Identifier	operation		2559930	0					
ANR	2560089	Argument	val1		2559930	1					
ANR	2560090	Identifier	val1		2559930	0					
ANR	2560091	Argument	val2		2559930	2					
ANR	2560092	Identifier	val2		2559930	0					
ANR	2560093	Argument	val3		2559930	3					
ANR	2560094	Identifier	val3		2559930	0					
ANR	2560095	Argument	valid1		2559930	4					
ANR	2560096	Identifier	valid1		2559930	0					
ANR	2560097	Argument	valid2		2559930	5					
ANR	2560098	Identifier	valid2		2559930	0					
ANR	2560099	Argument	valid3		2559930	6					
ANR	2560100	Identifier	valid3		2559930	0					
ANR	2560101	Argument	result		2559930	7					
ANR	2560102	Identifier	result		2559930	0					
ANR	2560103	Argument	& state		2559930	8					
ANR	2560104	UnaryOperationExpression	& state		2559930	0					
ANR	2560105	UnaryOperator	&		2559930	0					
ANR	2560106	Identifier	state		2559930	1					
ANR	2560107	ReturnStatement	return ( rval != SIG_NONE ) ;	364:1:8369:8395	2559930	10	True				
ANR	2560108	EqualityExpression	rval != SIG_NONE		2559930	0		!=			
ANR	2560109	Identifier	rval		2559930	0					
ANR	2560110	Identifier	SIG_NONE		2559930	1					
ANR	2560111	ReturnType	bool		2559930	1					
ANR	2560112	Identifier	Operation :: _Evaluate		2559930	2					
ANR	2560113	ParameterList	"EvalState & state , Value & result"		2559930	3					
ANR	2560114	Parameter	EvalState & state	323:11:7620:7635	2559930	0	True				
ANR	2560115	ParameterType	EvalState &		2559930	0					
ANR	2560116	Identifier	state		2559930	1					
ANR	2560117	Parameter	Value & result	323:29:7638:7650	2559930	1	True				
ANR	2560118	ParameterType	Value &		2559930	0					
ANR	2560119	Identifier	result		2559930	1					
ANR	2560120	CFGEntryNode	ENTRY		2559930		True				
ANR	2560121	CFGExitNode	EXIT		2559930		True				
ANR	2560122	Symbol	val3		2559930						
ANR	2560123	Symbol	& state		2559930						
ANR	2560124	Symbol	val2		2559930						
ANR	2560125	Symbol	val1		2559930						
ANR	2560126	Symbol	child2		2559930						
ANR	2560127	Symbol	child3		2559930						
ANR	2560128	Symbol	child1		2559930						
ANR	2560129	Symbol	result		2559930						
ANR	2560130	Symbol	valid1		2559930						
ANR	2560131	Symbol	valid3		2559930						
ANR	2560132	Symbol	valid2		2559930						
ANR	2560133	Symbol	* child1		2559930						
ANR	2560134	Symbol	rval		2559930						
ANR	2560135	Symbol	state		2559930						
ANR	2560136	Symbol	* child3		2559930						
ANR	2560137	Symbol	* child2		2559930						
ANR	2560138	Symbol	false		2559930						
ANR	2560139	Symbol	SIG_NONE		2559930						
ANR	2560140	Symbol	child3 -> Evaluate		2559930						
ANR	2560141	Symbol	child2 -> Evaluate		2559930						
ANR	2560142	Symbol	true		2559930						
ANR	2560143	Symbol	_doOperation		2559930						
ANR	2560144	Symbol	child1 -> Evaluate		2559930						
ANR	2560145	Symbol	operation		2559930						
ANR	2560146	Symbol	shortCircuit		2559930						
ANR	2560147	Function	Operation :: shortCircuit	367:0:8400:9128							
ANR	2560148	FunctionDef	"Operation :: shortCircuit (EvalState & state , Value const & arg1 , Value & result)"		2560147	0					
ANR	2560149	CompoundStatement		369:0:8490:9128	2560147	0					
ANR	2560150	IdentifierDeclStatement	bool arg1_bool ;	370:1:8493:8507	2560147	0	True				
ANR	2560151	IdentifierDecl	arg1_bool		2560147	0					
ANR	2560152	IdentifierDeclType	bool		2560147	0					
ANR	2560153	Identifier	arg1_bool		2560147	1					
ANR	2560154	SwitchStatement	switch ( operation )		2560147	1					
ANR	2560155	Condition	operation	372:9:8519:8527	2560147	0	True				
ANR	2560156	Identifier	operation		2560147	0					
ANR	2560157	CompoundStatement		4:21:40:40	2560147	1					
ANR	2560158	Label	case LOGICAL_OR_OP :	373:1:8534:8552	2560147	0	True				
ANR	2560159	Identifier	LOGICAL_OR_OP		2560147	0					
ANR	2560160	IfStatement	if ( arg1 . IsBooleanValueEquiv ( arg1_bool ) && arg1_bool )		2560147	1					
ANR	2560161	Condition	arg1 . IsBooleanValueEquiv ( arg1_bool ) && arg1_bool	374:6:8560:8607	2560147	0	True				
ANR	2560162	AndExpression	arg1 . IsBooleanValueEquiv ( arg1_bool ) && arg1_bool		2560147	0		&&			
ANR	2560163	CallExpression	arg1 . IsBooleanValueEquiv ( arg1_bool )		2560147	0					
ANR	2560164	Callee	arg1 . IsBooleanValueEquiv		2560147	0					
ANR	2560165	MemberAccess	arg1 . IsBooleanValueEquiv		2560147	0					
ANR	2560166	Identifier	arg1		2560147	0					
ANR	2560167	Identifier	IsBooleanValueEquiv		2560147	1					
ANR	2560168	ArgumentList	arg1_bool		2560147	1					
ANR	2560169	Argument	arg1_bool		2560147	0					
ANR	2560170	Identifier	arg1_bool		2560147	0					
ANR	2560171	Identifier	arg1_bool		2560147	1					
ANR	2560172	CompoundStatement		6:57:120:120	2560147	1					
ANR	2560173	ExpressionStatement	result . SetBooleanValue ( true )	375:3:8616:8646	2560147	0	True				
ANR	2560174	CallExpression	result . SetBooleanValue ( true )		2560147	0					
ANR	2560175	Callee	result . SetBooleanValue		2560147	0					
ANR	2560176	MemberAccess	result . SetBooleanValue		2560147	0					
ANR	2560177	Identifier	result		2560147	0					
ANR	2560178	Identifier	SetBooleanValue		2560147	1					
ANR	2560179	ArgumentList	true		2560147	1					
ANR	2560180	Argument	true		2560147	0					
ANR	2560181	Identifier	true		2560147	0					
ANR	2560182	ReturnStatement	return true ;	376:3:8651:8662	2560147	1	True				
ANR	2560183	Identifier	true		2560147	0					
ANR	2560184	BreakStatement	break ;	378:2:8670:8675	2560147	2	True				
ANR	2560185	Label	case LOGICAL_AND_OP :	379:1:8678:8697	2560147	3	True				
ANR	2560186	Identifier	LOGICAL_AND_OP		2560147	0					
ANR	2560187	IfStatement	if ( arg1 . IsBooleanValueEquiv ( arg1_bool ) && ! arg1_bool )		2560147	4					
ANR	2560188	Condition	arg1 . IsBooleanValueEquiv ( arg1_bool ) && ! arg1_bool	380:6:8705:8753	2560147	0	True				
ANR	2560189	AndExpression	arg1 . IsBooleanValueEquiv ( arg1_bool ) && ! arg1_bool		2560147	0		&&			
ANR	2560190	CallExpression	arg1 . IsBooleanValueEquiv ( arg1_bool )		2560147	0					
ANR	2560191	Callee	arg1 . IsBooleanValueEquiv		2560147	0					
ANR	2560192	MemberAccess	arg1 . IsBooleanValueEquiv		2560147	0					
ANR	2560193	Identifier	arg1		2560147	0					
ANR	2560194	Identifier	IsBooleanValueEquiv		2560147	1					
ANR	2560195	ArgumentList	arg1_bool		2560147	1					
ANR	2560196	Argument	arg1_bool		2560147	0					
ANR	2560197	Identifier	arg1_bool		2560147	0					
ANR	2560198	UnaryOperationExpression	! arg1_bool		2560147	1					
ANR	2560199	UnaryOperator	!		2560147	0					
ANR	2560200	Identifier	arg1_bool		2560147	1					
ANR	2560201	CompoundStatement		12:58:266:266	2560147	1					
ANR	2560202	ExpressionStatement	result . SetBooleanValue ( false )	381:3:8762:8793	2560147	0	True				
ANR	2560203	CallExpression	result . SetBooleanValue ( false )		2560147	0					
ANR	2560204	Callee	result . SetBooleanValue		2560147	0					
ANR	2560205	MemberAccess	result . SetBooleanValue		2560147	0					
ANR	2560206	Identifier	result		2560147	0					
ANR	2560207	Identifier	SetBooleanValue		2560147	1					
ANR	2560208	ArgumentList	false		2560147	1					
ANR	2560209	Argument	false		2560147	0					
ANR	2560210	Identifier	false		2560147	0					
ANR	2560211	ReturnStatement	return true ;	382:3:8798:8809	2560147	1	True				
ANR	2560212	Identifier	true		2560147	0					
ANR	2560213	BreakStatement	break ;	384:2:8817:8822	2560147	5	True				
ANR	2560214	Label	case TERNARY_OP :	385:1:8825:8840	2560147	6	True				
ANR	2560215	Identifier	TERNARY_OP		2560147	0					
ANR	2560216	IfStatement	if ( arg1 . IsBooleanValueEquiv ( arg1_bool ) )		2560147	7					
ANR	2560217	Condition	arg1 . IsBooleanValueEquiv ( arg1_bool )	386:6:8848:8882	2560147	0	True				
ANR	2560218	CallExpression	arg1 . IsBooleanValueEquiv ( arg1_bool )		2560147	0					
ANR	2560219	Callee	arg1 . IsBooleanValueEquiv		2560147	0					
ANR	2560220	MemberAccess	arg1 . IsBooleanValueEquiv		2560147	0					
ANR	2560221	Identifier	arg1		2560147	0					
ANR	2560222	Identifier	IsBooleanValueEquiv		2560147	1					
ANR	2560223	ArgumentList	arg1_bool		2560147	1					
ANR	2560224	Argument	arg1_bool		2560147	0					
ANR	2560225	Identifier	arg1_bool		2560147	0					
ANR	2560226	CompoundStatement		18:44:395:395	2560147	1					
ANR	2560227	IfStatement	if ( arg1_bool )		2560147	0					
ANR	2560228	Condition	arg1_bool	387:7:8895:8903	2560147	0	True				
ANR	2560229	Identifier	arg1_bool		2560147	0					
ANR	2560230	CompoundStatement		19:19:416:416	2560147	1					
ANR	2560231	IfStatement	if ( child2 )		2560147	0					
ANR	2560232	Condition	child2	388:8:8917:8922	2560147	0	True				
ANR	2560233	Identifier	child2		2560147	0					
ANR	2560234	CompoundStatement		20:17:435:435	2560147	1					
ANR	2560235	ReturnStatement	"return child2 -> Evaluate ( state , result ) ;"	389:5:8933:8970	2560147	0	True				
ANR	2560236	CallExpression	"child2 -> Evaluate ( state , result )"		2560147	0					
ANR	2560237	Callee	child2 -> Evaluate		2560147	0					
ANR	2560238	PtrMemberAccess	child2 -> Evaluate		2560147	0					
ANR	2560239	Identifier	child2		2560147	0					
ANR	2560240	Identifier	Evaluate		2560147	1					
ANR	2560241	ArgumentList	state		2560147	1					
ANR	2560242	Argument	state		2560147	0					
ANR	2560243	Identifier	state		2560147	0					
ANR	2560244	Argument	result		2560147	1					
ANR	2560245	Identifier	result		2560147	0					
ANR	2560246	ElseStatement	else		2560147	0					
ANR	2560247	CompoundStatement		24:8:500:500	2560147	0					
ANR	2560248	IfStatement	if ( child3 )		2560147	0					
ANR	2560249	Condition	child3	393:8:9001:9006	2560147	0	True				
ANR	2560250	Identifier	child3		2560147	0					
ANR	2560251	CompoundStatement		25:17:519:519	2560147	1					
ANR	2560252	ReturnStatement	"return child3 -> Evaluate ( state , result ) ;"	394:5:9017:9054	2560147	0	True				
ANR	2560253	CallExpression	"child3 -> Evaluate ( state , result )"		2560147	0					
ANR	2560254	Callee	child3 -> Evaluate		2560147	0					
ANR	2560255	PtrMemberAccess	child3 -> Evaluate		2560147	0					
ANR	2560256	Identifier	child3		2560147	0					
ANR	2560257	Identifier	Evaluate		2560147	1					
ANR	2560258	ArgumentList	state		2560147	1					
ANR	2560259	Argument	state		2560147	0					
ANR	2560260	Identifier	state		2560147	0					
ANR	2560261	Argument	result		2560147	1					
ANR	2560262	Identifier	result		2560147	0					
ANR	2560263	BreakStatement	break ;	398:2:9073:9078	2560147	8	True				
ANR	2560264	Label	default :	399:1:9081:9088	2560147	9	True				
ANR	2560265	Identifier	default		2560147	0					
ANR	2560266	BreakStatement	break ;	401:2:9103:9108	2560147	10	True				
ANR	2560267	ReturnStatement	return false ;	403:1:9114:9126	2560147	2	True				
ANR	2560268	Identifier	false		2560147	0					
ANR	2560269	ReturnType	bool		2560147	1					
ANR	2560270	Identifier	Operation :: shortCircuit		2560147	2					
ANR	2560271	ParameterList	"EvalState & state , Value const & arg1 , Value & result"		2560147	3					
ANR	2560272	Parameter	EvalState & state	368:14:8431:8446	2560147	0	True				
ANR	2560273	ParameterType	EvalState &		2560147	0					
ANR	2560274	Identifier	state		2560147	1					
ANR	2560275	Parameter	Value const & arg1	368:32:8449:8465	2560147	1	True				
ANR	2560276	ParameterType	Value const &		2560147	0					
ANR	2560277	Identifier	arg1		2560147	1					
ANR	2560278	Parameter	Value & result	368:51:8468:8480	2560147	2	True				
ANR	2560279	ParameterType	Value &		2560147	0					
ANR	2560280	Identifier	result		2560147	1					
ANR	2560281	CFGEntryNode	ENTRY		2560147		True				
ANR	2560282	CFGExitNode	EXIT		2560147		True				
ANR	2560283	Symbol	false		2560147						
ANR	2560284	Symbol	child2		2560147						
ANR	2560285	Symbol	child3		2560147						
ANR	2560286	Symbol	result		2560147						
ANR	2560287	Symbol	arg1_bool		2560147						
ANR	2560288	Symbol	child3 -> Evaluate		2560147						
ANR	2560289	Symbol	arg1		2560147						
ANR	2560290	Symbol	child2 -> Evaluate		2560147						
ANR	2560291	Symbol	true		2560147						
ANR	2560292	Symbol	state		2560147						
ANR	2560293	Symbol	arg1 . IsBooleanValueEquiv		2560147						
ANR	2560294	Symbol	operation		2560147						
ANR	2560295	Symbol	* child3		2560147						
ANR	2560296	Symbol	* child2		2560147						
ANR	2560297	Function	Operation :: _Evaluate	406:0:9131:12701							
ANR	2560298	FunctionDef	"Operation :: _Evaluate (EvalState & state , Value & result , ExprTree * & tree)"		2560297	0					
ANR	2560299	CompoundStatement		408:0:9217:12701	2560297	0					
ANR	2560300	IdentifierDeclStatement	int sig ;	409:1:9220:9229	2560297	0	True				
ANR	2560301	IdentifierDecl	sig		2560297	0					
ANR	2560302	IdentifierDeclType	int		2560297	0					
ANR	2560303	Identifier	sig		2560297	1					
ANR	2560304	IdentifierDeclStatement	"Value val1 , val2 , val3 ;"	410:1:9232:9255	2560297	1	True				
ANR	2560305	IdentifierDecl	val1		2560297	0					
ANR	2560306	IdentifierDeclType	Value		2560297	0					
ANR	2560307	Identifier	val1		2560297	1					
ANR	2560308	IdentifierDecl	val2		2560297	1					
ANR	2560309	IdentifierDeclType	Value		2560297	0					
ANR	2560310	Identifier	val2		2560297	1					
ANR	2560311	IdentifierDecl	val3		2560297	2					
ANR	2560312	IdentifierDeclType	Value		2560297	0					
ANR	2560313	Identifier	val3		2560297	1					
ANR	2560314	IdentifierDeclStatement	"ExprTree * t1 = NULL , * t2 = NULL , * t3 = NULL ;"	411:1:9258:9296	2560297	2	True				
ANR	2560315	IdentifierDecl	* t1 = NULL		2560297	0					
ANR	2560316	IdentifierDeclType	ExprTree *		2560297	0					
ANR	2560317	Identifier	t1		2560297	1					
ANR	2560318	AssignmentExpression	* t1 = NULL		2560297	2		=			
ANR	2560319	Identifier	NULL		2560297	0					
ANR	2560320	Identifier	NULL		2560297	1					
ANR	2560321	IdentifierDecl	* t2 = NULL		2560297	1					
ANR	2560322	IdentifierDeclType	ExprTree *		2560297	0					
ANR	2560323	Identifier	t2		2560297	1					
ANR	2560324	AssignmentExpression	* t2 = NULL		2560297	2		=			
ANR	2560325	Identifier	NULL		2560297	0					
ANR	2560326	Identifier	NULL		2560297	1					
ANR	2560327	IdentifierDecl	* t3 = NULL		2560297	2					
ANR	2560328	IdentifierDeclType	ExprTree *		2560297	0					
ANR	2560329	Identifier	t3		2560297	1					
ANR	2560330	AssignmentExpression	* t3 = NULL		2560297	2		=			
ANR	2560331	Identifier	NULL		2560297	0					
ANR	2560332	Identifier	NULL		2560297	1					
ANR	2560333	IdentifierDeclStatement	"bool valid1 = false , valid2 = false , valid3 = false ;"	412:1:9299:9345	2560297	3	True				
ANR	2560334	IdentifierDecl	valid1 = false		2560297	0					
ANR	2560335	IdentifierDeclType	bool		2560297	0					
ANR	2560336	Identifier	valid1		2560297	1					
ANR	2560337	AssignmentExpression	valid1 = false		2560297	2		=			
ANR	2560338	Identifier	false		2560297	0					
ANR	2560339	Identifier	false		2560297	1					
ANR	2560340	IdentifierDecl	valid2 = false		2560297	1					
ANR	2560341	IdentifierDeclType	bool		2560297	0					
ANR	2560342	Identifier	valid2		2560297	1					
ANR	2560343	AssignmentExpression	valid2 = false		2560297	2		=			
ANR	2560344	Identifier	false		2560297	0					
ANR	2560345	Identifier	false		2560297	1					
ANR	2560346	IdentifierDecl	valid3 = false		2560297	2					
ANR	2560347	IdentifierDeclType	bool		2560297	0					
ANR	2560348	Identifier	valid3		2560297	1					
ANR	2560349	AssignmentExpression	valid3 = false		2560297	2		=			
ANR	2560350	Identifier	false		2560297	0					
ANR	2560351	Identifier	false		2560297	1					
ANR	2560352	ExpressionStatement	tree = NULL	415:1:9381:9392	2560297	4	True				
ANR	2560353	AssignmentExpression	tree = NULL		2560297	0		=			
ANR	2560354	Identifier	tree		2560297	0					
ANR	2560355	Identifier	NULL		2560297	1					
ANR	2560356	IfStatement	if ( child1 )		2560297	5					
ANR	2560357	Condition	child1	416:5:9399:9404	2560297	0	True				
ANR	2560358	Identifier	child1		2560297	0					
ANR	2560359	CompoundStatement		9:13:189:189	2560297	1					
ANR	2560360	IfStatement	"if ( ! child1 -> Evaluate ( state , val1 , t1 ) )"		2560297	0					
ANR	2560361	Condition	"! child1 -> Evaluate ( state , val1 , t1 )"	417:6:9416:9450	2560297	0	True				
ANR	2560362	UnaryOperationExpression	"! child1 -> Evaluate ( state , val1 , t1 )"		2560297	0					
ANR	2560363	UnaryOperator	!		2560297	0					
ANR	2560364	CallExpression	"child1 -> Evaluate ( state , val1 , t1 )"		2560297	1					
ANR	2560365	Callee	child1 -> Evaluate		2560297	0					
ANR	2560366	PtrMemberAccess	child1 -> Evaluate		2560297	0					
ANR	2560367	Identifier	child1		2560297	0					
ANR	2560368	Identifier	Evaluate		2560297	1					
ANR	2560369	ArgumentList	state		2560297	1					
ANR	2560370	Argument	state		2560297	0					
ANR	2560371	Identifier	state		2560297	0					
ANR	2560372	Argument	val1		2560297	1					
ANR	2560373	Identifier	val1		2560297	0					
ANR	2560374	Argument	t1		2560297	2					
ANR	2560375	Identifier	t1		2560297	0					
ANR	2560376	CompoundStatement		10:44:236:236	2560297	1					
ANR	2560377	ExpressionStatement	result . SetErrorValue ( )	418:3:9459:9482	2560297	0	True				
ANR	2560378	CallExpression	result . SetErrorValue ( )		2560297	0					
ANR	2560379	Callee	result . SetErrorValue		2560297	0					
ANR	2560380	MemberAccess	result . SetErrorValue		2560297	0					
ANR	2560381	Identifier	result		2560297	0					
ANR	2560382	Identifier	SetErrorValue		2560297	1					
ANR	2560383	ArgumentList			2560297	1					
ANR	2560384	ReturnStatement	return ( false ) ;	419:3:9487:9502	2560297	1	True				
ANR	2560385	Identifier	false		2560297	0					
ANR	2560386	ExpressionStatement	valid1 = true	421:2:9510:9523	2560297	1	True				
ANR	2560387	AssignmentExpression	valid1 = true		2560297	0		=			
ANR	2560388	Identifier	valid1		2560297	0					
ANR	2560389	Identifier	true		2560297	1					
ANR	2560390	IfStatement	if ( child2 )		2560297	6					
ANR	2560391	Condition	child2	424:5:9534:9539	2560297	0	True				
ANR	2560392	Identifier	child2		2560297	0					
ANR	2560393	CompoundStatement		17:13:324:324	2560297	1					
ANR	2560394	IfStatement	"if ( ! child2 -> Evaluate ( state , val2 , t2 ) )"		2560297	0					
ANR	2560395	Condition	"! child2 -> Evaluate ( state , val2 , t2 )"	425:6:9550:9584	2560297	0	True				
ANR	2560396	UnaryOperationExpression	"! child2 -> Evaluate ( state , val2 , t2 )"		2560297	0					
ANR	2560397	UnaryOperator	!		2560297	0					
ANR	2560398	CallExpression	"child2 -> Evaluate ( state , val2 , t2 )"		2560297	1					
ANR	2560399	Callee	child2 -> Evaluate		2560297	0					
ANR	2560400	PtrMemberAccess	child2 -> Evaluate		2560297	0					
ANR	2560401	Identifier	child2		2560297	0					
ANR	2560402	Identifier	Evaluate		2560297	1					
ANR	2560403	ArgumentList	state		2560297	1					
ANR	2560404	Argument	state		2560297	0					
ANR	2560405	Identifier	state		2560297	0					
ANR	2560406	Argument	val2		2560297	1					
ANR	2560407	Identifier	val2		2560297	0					
ANR	2560408	Argument	t2		2560297	2					
ANR	2560409	Identifier	t2		2560297	0					
ANR	2560410	CompoundStatement		18:44:370:370	2560297	1					
ANR	2560411	ExpressionStatement	result . SetErrorValue ( )	426:3:9593:9616	2560297	0	True				
ANR	2560412	CallExpression	result . SetErrorValue ( )		2560297	0					
ANR	2560413	Callee	result . SetErrorValue		2560297	0					
ANR	2560414	MemberAccess	result . SetErrorValue		2560297	0					
ANR	2560415	Identifier	result		2560297	0					
ANR	2560416	Identifier	SetErrorValue		2560297	1					
ANR	2560417	ArgumentList			2560297	1					
ANR	2560418	ReturnStatement	return ( false ) ;	427:3:9621:9636	2560297	1	True				
ANR	2560419	Identifier	false		2560297	0					
ANR	2560420	ExpressionStatement	valid2 = true	429:2:9644:9657	2560297	1	True				
ANR	2560421	AssignmentExpression	valid2 = true		2560297	0		=			
ANR	2560422	Identifier	valid2		2560297	0					
ANR	2560423	Identifier	true		2560297	1					
ANR	2560424	IfStatement	if ( child3 )		2560297	7					
ANR	2560425	Condition	child3	431:5:9667:9672	2560297	0	True				
ANR	2560426	Identifier	child3		2560297	0					
ANR	2560427	CompoundStatement		24:13:457:457	2560297	1					
ANR	2560428	IfStatement	"if ( ! child3 -> Evaluate ( state , val3 , t3 ) )"		2560297	0					
ANR	2560429	Condition	"! child3 -> Evaluate ( state , val3 , t3 )"	432:6:9683:9717	2560297	0	True				
ANR	2560430	UnaryOperationExpression	"! child3 -> Evaluate ( state , val3 , t3 )"		2560297	0					
ANR	2560431	UnaryOperator	!		2560297	0					
ANR	2560432	CallExpression	"child3 -> Evaluate ( state , val3 , t3 )"		2560297	1					
ANR	2560433	Callee	child3 -> Evaluate		2560297	0					
ANR	2560434	PtrMemberAccess	child3 -> Evaluate		2560297	0					
ANR	2560435	Identifier	child3		2560297	0					
ANR	2560436	Identifier	Evaluate		2560297	1					
ANR	2560437	ArgumentList	state		2560297	1					
ANR	2560438	Argument	state		2560297	0					
ANR	2560439	Identifier	state		2560297	0					
ANR	2560440	Argument	val3		2560297	1					
ANR	2560441	Identifier	val3		2560297	0					
ANR	2560442	Argument	t3		2560297	2					
ANR	2560443	Identifier	t3		2560297	0					
ANR	2560444	CompoundStatement		25:44:503:503	2560297	1					
ANR	2560445	ExpressionStatement	result . SetErrorValue ( )	433:3:9726:9749	2560297	0	True				
ANR	2560446	CallExpression	result . SetErrorValue ( )		2560297	0					
ANR	2560447	Callee	result . SetErrorValue		2560297	0					
ANR	2560448	MemberAccess	result . SetErrorValue		2560297	0					
ANR	2560449	Identifier	result		2560297	0					
ANR	2560450	Identifier	SetErrorValue		2560297	1					
ANR	2560451	ArgumentList			2560297	1					
ANR	2560452	ReturnStatement	return ( false ) ;	434:3:9754:9769	2560297	1	True				
ANR	2560453	Identifier	false		2560297	0					
ANR	2560454	ExpressionStatement	valid3 = true	436:2:9777:9790	2560297	1	True				
ANR	2560455	AssignmentExpression	valid3 = true		2560297	0		=			
ANR	2560456	Identifier	valid3		2560297	0					
ANR	2560457	Identifier	true		2560297	1					
ANR	2560458	ExpressionStatement	"sig = _doOperation ( operation , val1 , val2 , val3 , valid1 , valid2 , valid3 , result , & state )"	440:1:9815:9900	2560297	8	True				
ANR	2560459	AssignmentExpression	"sig = _doOperation ( operation , val1 , val2 , val3 , valid1 , valid2 , valid3 , result , & state )"		2560297	0		=			
ANR	2560460	Identifier	sig		2560297	0					
ANR	2560461	CallExpression	"_doOperation ( operation , val1 , val2 , val3 , valid1 , valid2 , valid3 , result , & state )"		2560297	1					
ANR	2560462	Callee	_doOperation		2560297	0					
ANR	2560463	Identifier	_doOperation		2560297	0					
ANR	2560464	ArgumentList	operation		2560297	1					
ANR	2560465	Argument	operation		2560297	0					
ANR	2560466	Identifier	operation		2560297	0					
ANR	2560467	Argument	val1		2560297	1					
ANR	2560468	Identifier	val1		2560297	0					
ANR	2560469	Argument	val2		2560297	2					
ANR	2560470	Identifier	val2		2560297	0					
ANR	2560471	Argument	val3		2560297	3					
ANR	2560472	Identifier	val3		2560297	0					
ANR	2560473	Argument	valid1		2560297	4					
ANR	2560474	Identifier	valid1		2560297	0					
ANR	2560475	Argument	valid2		2560297	5					
ANR	2560476	Identifier	valid2		2560297	0					
ANR	2560477	Argument	valid3		2560297	6					
ANR	2560478	Identifier	valid3		2560297	0					
ANR	2560479	Argument	result		2560297	7					
ANR	2560480	Identifier	result		2560297	0					
ANR	2560481	Argument	& state		2560297	8					
ANR	2560482	UnaryOperationExpression	& state		2560297	0					
ANR	2560483	UnaryOperator	&		2560297	0					
ANR	2560484	Identifier	state		2560297	1					
ANR	2560485	IfStatement	if ( valid1 && ! ( sig & SIG_CHLD1 ) )		2560297	9					
ANR	2560486	Condition	valid1 && ! ( sig & SIG_CHLD1 )	444:5:9952:9981	2560297	0	True				
ANR	2560487	AndExpression	valid1 && ! ( sig & SIG_CHLD1 )		2560297	0		&&			
ANR	2560488	Identifier	valid1		2560297	0					
ANR	2560489	UnaryOperationExpression	! ( sig & SIG_CHLD1 )		2560297	1					
ANR	2560490	UnaryOperator	!		2560297	0					
ANR	2560491	BitAndExpression	sig & SIG_CHLD1		2560297	1		&			
ANR	2560492	Identifier	sig		2560297	0					
ANR	2560493	Identifier	SIG_CHLD1		2560297	1					
ANR	2560494	CompoundStatement		37:37:766:766	2560297	1					
ANR	2560495	Statement	delete	444:39:9986:9991	2560297	0	True				
ANR	2560496	ExpressionStatement	t1	444:46:9993:9995	2560297	1	True				
ANR	2560497	Identifier	t1		2560297	0					
ANR	2560498	ExpressionStatement	t1 = NULL	444:50:9997:10006	2560297	2	True				
ANR	2560499	AssignmentExpression	t1 = NULL		2560297	0		=			
ANR	2560500	Identifier	t1		2560297	0					
ANR	2560501	Identifier	NULL		2560297	1					
ANR	2560502	IfStatement	if ( valid2 && ! ( sig & SIG_CHLD2 ) )		2560297	10					
ANR	2560503	Condition	valid2 && ! ( sig & SIG_CHLD2 )	445:5:10015:10044	2560297	0	True				
ANR	2560504	AndExpression	valid2 && ! ( sig & SIG_CHLD2 )		2560297	0		&&			
ANR	2560505	Identifier	valid2		2560297	0					
ANR	2560506	UnaryOperationExpression	! ( sig & SIG_CHLD2 )		2560297	1					
ANR	2560507	UnaryOperator	!		2560297	0					
ANR	2560508	BitAndExpression	sig & SIG_CHLD2		2560297	1		&			
ANR	2560509	Identifier	sig		2560297	0					
ANR	2560510	Identifier	SIG_CHLD2		2560297	1					
ANR	2560511	CompoundStatement		38:37:829:829	2560297	1					
ANR	2560512	Statement	delete	445:39:10049:10054	2560297	0	True				
ANR	2560513	ExpressionStatement	t2	445:46:10056:10058	2560297	1	True				
ANR	2560514	Identifier	t2		2560297	0					
ANR	2560515	ExpressionStatement	t2 = NULL	445:50:10060:10069	2560297	2	True				
ANR	2560516	AssignmentExpression	t2 = NULL		2560297	0		=			
ANR	2560517	Identifier	t2		2560297	0					
ANR	2560518	Identifier	NULL		2560297	1					
ANR	2560519	IfStatement	if ( valid3 && ! ( sig & SIG_CHLD3 ) )		2560297	11					
ANR	2560520	Condition	valid3 && ! ( sig & SIG_CHLD3 )	446:5:10078:10107	2560297	0	True				
ANR	2560521	AndExpression	valid3 && ! ( sig & SIG_CHLD3 )		2560297	0		&&			
ANR	2560522	Identifier	valid3		2560297	0					
ANR	2560523	UnaryOperationExpression	! ( sig & SIG_CHLD3 )		2560297	1					
ANR	2560524	UnaryOperator	!		2560297	0					
ANR	2560525	BitAndExpression	sig & SIG_CHLD3		2560297	1		&			
ANR	2560526	Identifier	sig		2560297	0					
ANR	2560527	Identifier	SIG_CHLD3		2560297	1					
ANR	2560528	CompoundStatement		39:37:892:892	2560297	1					
ANR	2560529	Statement	delete	446:39:10112:10117	2560297	0	True				
ANR	2560530	ExpressionStatement	t3	446:46:10119:10121	2560297	1	True				
ANR	2560531	Identifier	t3		2560297	0					
ANR	2560532	ExpressionStatement	t3 = NULL	446:50:10123:10132	2560297	2	True				
ANR	2560533	AssignmentExpression	t3 = NULL		2560297	0		=			
ANR	2560534	Identifier	t3		2560297	0					
ANR	2560535	Identifier	NULL		2560297	1					
ANR	2560536	IfStatement	if ( sig == SIG_NONE )		2560297	12					
ANR	2560537	Condition	sig == SIG_NONE	448:5:10142:10156	2560297	0	True				
ANR	2560538	EqualityExpression	sig == SIG_NONE		2560297	0		==			
ANR	2560539	Identifier	sig		2560297	0					
ANR	2560540	Identifier	SIG_NONE		2560297	1					
ANR	2560541	CompoundStatement		41:23:942:942	2560297	1					
ANR	2560542	ExpressionStatement	result . SetErrorValue ( )	449:2:10164:10187	2560297	0	True				
ANR	2560543	CallExpression	result . SetErrorValue ( )		2560297	0					
ANR	2560544	Callee	result . SetErrorValue		2560297	0					
ANR	2560545	MemberAccess	result . SetErrorValue		2560297	0					
ANR	2560546	Identifier	result		2560297	0					
ANR	2560547	Identifier	SetErrorValue		2560297	1					
ANR	2560548	ArgumentList			2560297	1					
ANR	2560549	ExpressionStatement	tree = NULL	450:2:10191:10202	2560297	1	True				
ANR	2560550	AssignmentExpression	tree = NULL		2560297	0		=			
ANR	2560551	Identifier	tree		2560297	0					
ANR	2560552	Identifier	NULL		2560297	1					
ANR	2560553	ReturnStatement	return ( false ) ;	451:2:10206:10221	2560297	2	True				
ANR	2560554	Identifier	false		2560297	0					
ANR	2560555	IfStatement	if ( IsStrictOperator ( operation ) )		2560297	13					
ANR	2560556	Condition	IsStrictOperator ( operation )	456:5:10379:10407	2560297	0	True				
ANR	2560557	CallExpression	IsStrictOperator ( operation )		2560297	0					
ANR	2560558	Callee	IsStrictOperator		2560297	0					
ANR	2560559	Identifier	IsStrictOperator		2560297	0					
ANR	2560560	ArgumentList	operation		2560297	1					
ANR	2560561	Argument	operation		2560297	0					
ANR	2560562	Identifier	operation		2560297	0					
ANR	2560563	CompoundStatement		49:37:1193:1193	2560297	1					
ANR	2560564	IfStatement	if ( operation == UNARY_MINUS_OP || operation == UNARY_PLUS_OP || operation == LOGICAL_NOT_OP || operation == BITWISE_NOT_OP || operation == PARENTHESES_OP )		2560297	0					
ANR	2560565	Condition	operation == UNARY_MINUS_OP || operation == UNARY_PLUS_OP || operation == LOGICAL_NOT_OP || operation == BITWISE_NOT_OP || operation == PARENTHESES_OP	458:6:10476:10633	2560297	0	True				
ANR	2560566	OrExpression	operation == UNARY_MINUS_OP || operation == UNARY_PLUS_OP || operation == LOGICAL_NOT_OP || operation == BITWISE_NOT_OP || operation == PARENTHESES_OP		2560297	0		||			
ANR	2560567	EqualityExpression	operation == UNARY_MINUS_OP		2560297	0		==			
ANR	2560568	Identifier	operation		2560297	0					
ANR	2560569	Identifier	UNARY_MINUS_OP		2560297	1					
ANR	2560570	OrExpression	operation == UNARY_PLUS_OP || operation == LOGICAL_NOT_OP || operation == BITWISE_NOT_OP || operation == PARENTHESES_OP		2560297	1		||			
ANR	2560571	EqualityExpression	operation == UNARY_PLUS_OP		2560297	0		==			
ANR	2560572	Identifier	operation		2560297	0					
ANR	2560573	Identifier	UNARY_PLUS_OP		2560297	1					
ANR	2560574	OrExpression	operation == LOGICAL_NOT_OP || operation == BITWISE_NOT_OP || operation == PARENTHESES_OP		2560297	1		||			
ANR	2560575	EqualityExpression	operation == LOGICAL_NOT_OP		2560297	0		==			
ANR	2560576	Identifier	operation		2560297	0					
ANR	2560577	Identifier	LOGICAL_NOT_OP		2560297	1					
ANR	2560578	OrExpression	operation == BITWISE_NOT_OP || operation == PARENTHESES_OP		2560297	1		||			
ANR	2560579	EqualityExpression	operation == BITWISE_NOT_OP		2560297	0		==			
ANR	2560580	Identifier	operation		2560297	0					
ANR	2560581	Identifier	BITWISE_NOT_OP		2560297	1					
ANR	2560582	EqualityExpression	operation == PARENTHESES_OP		2560297	1		==			
ANR	2560583	Identifier	operation		2560297	0					
ANR	2560584	Identifier	PARENTHESES_OP		2560297	1					
ANR	2560585	CompoundStatement		53:33:1419:1419	2560297	1					
ANR	2560586	IfStatement	if ( val1 . IsExceptional ( ) )		2560297	0					
ANR	2560587	Condition	val1 . IsExceptional ( )	461:7:10646:10665	2560297	0	True				
ANR	2560588	CallExpression	val1 . IsExceptional ( )		2560297	0					
ANR	2560589	Callee	val1 . IsExceptional		2560297	0					
ANR	2560590	MemberAccess	val1 . IsExceptional		2560297	0					
ANR	2560591	Identifier	val1		2560297	0					
ANR	2560592	Identifier	IsExceptional		2560297	1					
ANR	2560593	ArgumentList			2560297	1					
ANR	2560594	CompoundStatement		54:30:1451:1451	2560297	1					
ANR	2560595	ExpressionStatement	tree = t1	464:4:10772:10781	2560297	0	True				
ANR	2560596	AssignmentExpression	tree = t1		2560297	0		=			
ANR	2560597	Identifier	tree		2560297	0					
ANR	2560598	Identifier	t1		2560297	1					
ANR	2560599	ElseStatement	else		2560297	0					
ANR	2560600	CompoundStatement		58:10:1575:1575	2560297	0					
ANR	2560601	ExpressionStatement	"tree = MakeOperation ( operation , t1 )"	468:4:10878:10915	2560297	0	True				
ANR	2560602	AssignmentExpression	"tree = MakeOperation ( operation , t1 )"		2560297	0		=			
ANR	2560603	Identifier	tree		2560297	0					
ANR	2560604	CallExpression	"MakeOperation ( operation , t1 )"		2560297	1					
ANR	2560605	Callee	MakeOperation		2560297	0					
ANR	2560606	Identifier	MakeOperation		2560297	0					
ANR	2560607	ArgumentList	operation		2560297	1					
ANR	2560608	Argument	operation		2560297	0					
ANR	2560609	Identifier	operation		2560297	0					
ANR	2560610	Argument	t1		2560297	1					
ANR	2560611	Identifier	t1		2560297	0					
ANR	2560612	ReturnStatement	return ( true ) ;	470:3:10925:10939	2560297	1	True				
ANR	2560613	Identifier	true		2560297	0					
ANR	2560614	ElseStatement	else		2560297	0					
ANR	2560615	CompoundStatement		64:9:1733:1733	2560297	0					
ANR	2560616	IfStatement	if ( val1 . IsExceptional ( ) || val2 . IsExceptional ( ) )		2560297	0					
ANR	2560617	Condition	val1 . IsExceptional ( ) || val2 . IsExceptional ( )	473:7:10990:11033	2560297	0	True				
ANR	2560618	OrExpression	val1 . IsExceptional ( ) || val2 . IsExceptional ( )		2560297	0		||			
ANR	2560619	CallExpression	val1 . IsExceptional ( )		2560297	0					
ANR	2560620	Callee	val1 . IsExceptional		2560297	0					
ANR	2560621	MemberAccess	val1 . IsExceptional		2560297	0					
ANR	2560622	Identifier	val1		2560297	0					
ANR	2560623	Identifier	IsExceptional		2560297	1					
ANR	2560624	ArgumentList			2560297	1					
ANR	2560625	CallExpression	val2 . IsExceptional ( )		2560297	1					
ANR	2560626	Callee	val2 . IsExceptional		2560297	0					
ANR	2560627	MemberAccess	val2 . IsExceptional		2560297	0					
ANR	2560628	Identifier	val2		2560297	0					
ANR	2560629	Identifier	IsExceptional		2560297	1					
ANR	2560630	ArgumentList			2560297	1					
ANR	2560631	CompoundStatement		66:54:1819:1819	2560297	1					
ANR	2560632	IfStatement	if ( sig & SIG_CHLD1 )		2560297	0					
ANR	2560633	Condition	sig & SIG_CHLD1	475:8:11099:11113	2560297	0	True				
ANR	2560634	BitAndExpression	sig & SIG_CHLD1		2560297	0		&			
ANR	2560635	Identifier	sig		2560297	0					
ANR	2560636	Identifier	SIG_CHLD1		2560297	1					
ANR	2560637	CompoundStatement		68:26:1899:1899	2560297	1					
ANR	2560638	ExpressionStatement	tree = t1	476:5:11124:11133	2560297	0	True				
ANR	2560639	AssignmentExpression	tree = t1		2560297	0		=			
ANR	2560640	Identifier	tree		2560297	0					
ANR	2560641	Identifier	t1		2560297	1					
ANR	2560642	ReturnStatement	return ( true ) ;	477:5:11140:11154	2560297	1	True				
ANR	2560643	Identifier	true		2560297	0					
ANR	2560644	ElseStatement	else		2560297	0					
ANR	2560645	IfStatement	if ( sig & SIG_CHLD2 )		2560297	0					
ANR	2560646	Condition	sig & SIG_CHLD2	478:15:11171:11185	2560297	0	True				
ANR	2560647	BitAndExpression	sig & SIG_CHLD2		2560297	0		&			
ANR	2560648	Identifier	sig		2560297	0					
ANR	2560649	Identifier	SIG_CHLD2		2560297	1					
ANR	2560650	CompoundStatement		71:33:1971:1971	2560297	1					
ANR	2560651	ExpressionStatement	tree = t2	479:5:11196:11205	2560297	0	True				
ANR	2560652	AssignmentExpression	tree = t2		2560297	0		=			
ANR	2560653	Identifier	tree		2560297	0					
ANR	2560654	Identifier	t2		2560297	1					
ANR	2560655	ReturnStatement	return ( true ) ;	480:5:11212:11226	2560297	1	True				
ANR	2560656	Identifier	true		2560297	0					
ANR	2560657	ExpressionStatement	"CLASSAD_EXCEPT ( ""Should not reach here"" )"	482:4:11239:11280	2560297	1	True				
ANR	2560658	CallExpression	"CLASSAD_EXCEPT ( ""Should not reach here"" )"		2560297	0					
ANR	2560659	Callee	CLASSAD_EXCEPT		2560297	0					
ANR	2560660	Identifier	CLASSAD_EXCEPT		2560297	0					
ANR	2560661	ArgumentList	"""Should not reach here"""		2560297	1					
ANR	2560662	Argument	"""Should not reach here"""		2560297	0					
ANR	2560663	PrimaryExpression	"""Should not reach here"""		2560297	0					
ANR	2560664	ElseStatement	else		2560297	0					
ANR	2560665	CompoundStatement		76:10:2074:2074	2560297	0					
ANR	2560666	ExpressionStatement	"tree = MakeOperation ( operation , t1 , t2 )"	485:4:11334:11375	2560297	0	True				
ANR	2560667	AssignmentExpression	"tree = MakeOperation ( operation , t1 , t2 )"		2560297	0		=			
ANR	2560668	Identifier	tree		2560297	0					
ANR	2560669	CallExpression	"MakeOperation ( operation , t1 , t2 )"		2560297	1					
ANR	2560670	Callee	MakeOperation		2560297	0					
ANR	2560671	Identifier	MakeOperation		2560297	0					
ANR	2560672	ArgumentList	operation		2560297	1					
ANR	2560673	Argument	operation		2560297	0					
ANR	2560674	Identifier	operation		2560297	0					
ANR	2560675	Argument	t1		2560297	1					
ANR	2560676	Identifier	t1		2560297	0					
ANR	2560677	Argument	t2		2560297	2					
ANR	2560678	Identifier	t2		2560297	0					
ANR	2560679	ReturnStatement	return ( true ) ;	486:4:11381:11395	2560297	1	True				
ANR	2560680	Identifier	true		2560297	0					
ANR	2560681	ElseStatement	else		2560297	0					
ANR	2560682	CompoundStatement		82:8:2196:2196	2560297	0					
ANR	2560683	IfStatement	if ( operation == IS_OP || operation == ISNT_OP )		2560297	0					
ANR	2560684	Condition	operation == IS_OP || operation == ISNT_OP	491:6:11448:11489	2560297	0	True				
ANR	2560685	OrExpression	operation == IS_OP || operation == ISNT_OP		2560297	0		||			
ANR	2560686	EqualityExpression	operation == IS_OP		2560297	0		==			
ANR	2560687	Identifier	operation		2560297	0					
ANR	2560688	Identifier	IS_OP		2560297	1					
ANR	2560689	EqualityExpression	operation == ISNT_OP		2560297	1		==			
ANR	2560690	Identifier	operation		2560297	0					
ANR	2560691	Identifier	ISNT_OP		2560297	1					
ANR	2560692	CompoundStatement		84:51:2275:2275	2560297	1					
ANR	2560693	ExpressionStatement	"tree = MakeOperation ( operation , t1 , t2 )"	493:3:11558:11599	2560297	0	True				
ANR	2560694	AssignmentExpression	"tree = MakeOperation ( operation , t1 , t2 )"		2560297	0		=			
ANR	2560695	Identifier	tree		2560297	0					
ANR	2560696	CallExpression	"MakeOperation ( operation , t1 , t2 )"		2560297	1					
ANR	2560697	Callee	MakeOperation		2560297	0					
ANR	2560698	Identifier	MakeOperation		2560297	0					
ANR	2560699	ArgumentList	operation		2560297	1					
ANR	2560700	Argument	operation		2560297	0					
ANR	2560701	Identifier	operation		2560297	0					
ANR	2560702	Argument	t1		2560297	1					
ANR	2560703	Identifier	t1		2560297	0					
ANR	2560704	Argument	t2		2560297	2					
ANR	2560705	Identifier	t2		2560297	0					
ANR	2560706	ReturnStatement	return ( true ) ;	494:3:11604:11618	2560297	1	True				
ANR	2560707	Identifier	true		2560297	0					
ANR	2560708	IfStatement	if ( operation == LOGICAL_AND_OP || operation == LOGICAL_OR_OP )		2560297	1					
ANR	2560709	Condition	operation == LOGICAL_AND_OP || operation == LOGICAL_OR_OP	497:6:11669:11725	2560297	0	True				
ANR	2560710	OrExpression	operation == LOGICAL_AND_OP || operation == LOGICAL_OR_OP		2560297	0		||			
ANR	2560711	EqualityExpression	operation == LOGICAL_AND_OP		2560297	0		==			
ANR	2560712	Identifier	operation		2560297	0					
ANR	2560713	Identifier	LOGICAL_AND_OP		2560297	1					
ANR	2560714	EqualityExpression	operation == LOGICAL_OR_OP		2560297	1		==			
ANR	2560715	Identifier	operation		2560297	0					
ANR	2560716	Identifier	LOGICAL_OR_OP		2560297	1					
ANR	2560717	CompoundStatement		90:66:2511:2511	2560297	1					
ANR	2560718	IfStatement	if ( ( sig & SIG_CHLD1 ) && ( sig & SIG_CHLD2 ) )		2560297	0					
ANR	2560719	Condition	( sig & SIG_CHLD1 ) && ( sig & SIG_CHLD2 )	498:7:11738:11779	2560297	0	True				
ANR	2560720	AndExpression	( sig & SIG_CHLD1 ) && ( sig & SIG_CHLD2 )		2560297	0		&&			
ANR	2560721	BitAndExpression	sig & SIG_CHLD1		2560297	0		&			
ANR	2560722	Identifier	sig		2560297	0					
ANR	2560723	Identifier	SIG_CHLD1		2560297	1					
ANR	2560724	BitAndExpression	sig & SIG_CHLD2		2560297	1		&			
ANR	2560725	Identifier	sig		2560297	0					
ANR	2560726	Identifier	SIG_CHLD2		2560297	1					
ANR	2560727	CompoundStatement		91:52:2565:2565	2560297	1					
ANR	2560728	ExpressionStatement	"tree = MakeOperation ( operation , t1 , t2 )"	499:4:11789:11830	2560297	0	True				
ANR	2560729	AssignmentExpression	"tree = MakeOperation ( operation , t1 , t2 )"		2560297	0		=			
ANR	2560730	Identifier	tree		2560297	0					
ANR	2560731	CallExpression	"MakeOperation ( operation , t1 , t2 )"		2560297	1					
ANR	2560732	Callee	MakeOperation		2560297	0					
ANR	2560733	Identifier	MakeOperation		2560297	0					
ANR	2560734	ArgumentList	operation		2560297	1					
ANR	2560735	Argument	operation		2560297	0					
ANR	2560736	Identifier	operation		2560297	0					
ANR	2560737	Argument	t1		2560297	1					
ANR	2560738	Identifier	t1		2560297	0					
ANR	2560739	Argument	t2		2560297	2					
ANR	2560740	Identifier	t2		2560297	0					
ANR	2560741	ReturnStatement	return ( true ) ;	500:4:11836:11850	2560297	1	True				
ANR	2560742	Identifier	true		2560297	0					
ANR	2560743	ElseStatement	else		2560297	0					
ANR	2560744	IfStatement	if ( sig & SIG_CHLD1 )		2560297	0					
ANR	2560745	Condition	sig & SIG_CHLD1	501:14:11866:11880	2560297	0	True				
ANR	2560746	BitAndExpression	sig & SIG_CHLD1		2560297	0		&			
ANR	2560747	Identifier	sig		2560297	0					
ANR	2560748	Identifier	SIG_CHLD1		2560297	1					
ANR	2560749	CompoundStatement		94:32:2666:2666	2560297	1					
ANR	2560750	ExpressionStatement	tree = t1	502:4:11890:11899	2560297	0	True				
ANR	2560751	AssignmentExpression	tree = t1		2560297	0		=			
ANR	2560752	Identifier	tree		2560297	0					
ANR	2560753	Identifier	t1		2560297	1					
ANR	2560754	ReturnStatement	return ( true ) ;	503:4:11905:11919	2560297	1	True				
ANR	2560755	Identifier	true		2560297	0					
ANR	2560756	ElseStatement	else		2560297	0					
ANR	2560757	IfStatement	if ( sig & SIG_CHLD2 )		2560297	0					
ANR	2560758	Condition	sig & SIG_CHLD2	504:14:11935:11949	2560297	0	True				
ANR	2560759	BitAndExpression	sig & SIG_CHLD2		2560297	0		&			
ANR	2560760	Identifier	sig		2560297	0					
ANR	2560761	Identifier	SIG_CHLD2		2560297	1					
ANR	2560762	CompoundStatement		97:32:2735:2735	2560297	1					
ANR	2560763	ExpressionStatement	tree = t2	505:4:11959:11968	2560297	0	True				
ANR	2560764	AssignmentExpression	tree = t2		2560297	0		=			
ANR	2560765	Identifier	tree		2560297	0					
ANR	2560766	Identifier	t2		2560297	1					
ANR	2560767	ReturnStatement	return ( true ) ;	506:4:11974:11988	2560297	1	True				
ANR	2560768	Identifier	true		2560297	0					
ANR	2560769	ElseStatement	else		2560297	0					
ANR	2560770	CompoundStatement		100:10:2782:2782	2560297	0					
ANR	2560771	ExpressionStatement	"CLASSAD_EXCEPT ( ""Shouldn't reach here"" )"	508:4:12006:12046	2560297	0	True				
ANR	2560772	CallExpression	"CLASSAD_EXCEPT ( ""Shouldn't reach here"" )"		2560297	0					
ANR	2560773	Callee	CLASSAD_EXCEPT		2560297	0					
ANR	2560774	Identifier	CLASSAD_EXCEPT		2560297	0					
ANR	2560775	ArgumentList	"""Shouldn't reach here"""		2560297	1					
ANR	2560776	Argument	"""Shouldn't reach here"""		2560297	0					
ANR	2560777	PrimaryExpression	"""Shouldn't reach here"""		2560297	0					
ANR	2560778	IfStatement	if ( operation == TERNARY_OP )		2560297	2					
ANR	2560779	Condition	operation == TERNARY_OP	513:6:12171:12193	2560297	0	True				
ANR	2560780	EqualityExpression	operation == TERNARY_OP		2560297	0		==			
ANR	2560781	Identifier	operation		2560297	0					
ANR	2560782	Identifier	TERNARY_OP		2560297	1					
ANR	2560783	CompoundStatement		107:3:2984:2996	2560297	1					
ANR	2560784	IdentifierDeclStatement	Value tmpVal ;	514:3:12202:12214	2560297	0	True				
ANR	2560785	IdentifierDecl	tmpVal		2560297	0					
ANR	2560786	IdentifierDeclType	Value		2560297	0					
ANR	2560787	Identifier	tmpVal		2560297	1					
ANR	2560788	ExpressionStatement	tmpVal . SetUndefinedValue ( )	515:3:12219:12246	2560297	1	True				
ANR	2560789	CallExpression	tmpVal . SetUndefinedValue ( )		2560297	0					
ANR	2560790	Callee	tmpVal . SetUndefinedValue		2560297	0					
ANR	2560791	MemberAccess	tmpVal . SetUndefinedValue		2560297	0					
ANR	2560792	Identifier	tmpVal		2560297	0					
ANR	2560793	Identifier	SetUndefinedValue		2560297	1					
ANR	2560794	ArgumentList			2560297	1					
ANR	2560795	ExpressionStatement	tree = Literal :: MakeLiteral ( tmpVal )	516:3:12251:12288	2560297	2	True				
ANR	2560796	AssignmentExpression	tree = Literal :: MakeLiteral ( tmpVal )		2560297	0		=			
ANR	2560797	Identifier	tree		2560297	0					
ANR	2560798	CallExpression	Literal :: MakeLiteral ( tmpVal )		2560297	1					
ANR	2560799	Callee	Literal :: MakeLiteral		2560297	0					
ANR	2560800	Identifier	Literal :: MakeLiteral		2560297	0					
ANR	2560801	ArgumentList	tmpVal		2560297	1					
ANR	2560802	Argument	tmpVal		2560297	0					
ANR	2560803	Identifier	tmpVal		2560297	0					
ANR	2560804	IfStatement	if ( sig & SIG_CHLD2 )		2560297	3					
ANR	2560805	Condition	sig & SIG_CHLD2	519:7:12328:12342	2560297	0	True				
ANR	2560806	BitAndExpression	sig & SIG_CHLD2		2560297	0		&			
ANR	2560807	Identifier	sig		2560297	0					
ANR	2560808	Identifier	SIG_CHLD2		2560297	1					
ANR	2560809	CompoundStatement		112:25:3128:3128	2560297	1					
ANR	2560810	ExpressionStatement	tree = t2	520:4:12352:12361	2560297	0	True				
ANR	2560811	AssignmentExpression	tree = t2		2560297	0		=			
ANR	2560812	Identifier	tree		2560297	0					
ANR	2560813	Identifier	t2		2560297	1					
ANR	2560814	Statement	delete	521:4:12367:12372	2560297	1	True				
ANR	2560815	ExpressionStatement	t1	521:11:12374:12376	2560297	2	True				
ANR	2560816	Identifier	t1		2560297	0					
ANR	2560817	Statement	delete	522:4:12382:12387	2560297	3	True				
ANR	2560818	ExpressionStatement	t3	522:11:12389:12391	2560297	4	True				
ANR	2560819	Identifier	t3		2560297	0					
ANR	2560820	ReturnStatement	return ( true ) ;	523:4:12397:12411	2560297	5	True				
ANR	2560821	Identifier	true		2560297	0					
ANR	2560822	ElseStatement	else		2560297	0					
ANR	2560823	IfStatement	if ( sig & SIG_CHLD3 )		2560297	0					
ANR	2560824	Condition	sig & SIG_CHLD3	524:14:12427:12441	2560297	0	True				
ANR	2560825	BitAndExpression	sig & SIG_CHLD3		2560297	0		&			
ANR	2560826	Identifier	sig		2560297	0					
ANR	2560827	Identifier	SIG_CHLD3		2560297	1					
ANR	2560828	CompoundStatement		117:32:3227:3227	2560297	1					
ANR	2560829	ExpressionStatement	tree = t3	525:4:12451:12460	2560297	0	True				
ANR	2560830	AssignmentExpression	tree = t3		2560297	0		=			
ANR	2560831	Identifier	tree		2560297	0					
ANR	2560832	Identifier	t3		2560297	1					
ANR	2560833	Statement	delete	526:4:12466:12471	2560297	1	True				
ANR	2560834	ExpressionStatement	t1	526:11:12473:12475	2560297	2	True				
ANR	2560835	Identifier	t1		2560297	0					
ANR	2560836	Statement	delete	527:4:12481:12486	2560297	3	True				
ANR	2560837	ExpressionStatement	t2	527:11:12488:12490	2560297	4	True				
ANR	2560838	Identifier	t2		2560297	0					
ANR	2560839	ReturnStatement	return ( true ) ;	528:4:12496:12510	2560297	5	True				
ANR	2560840	Identifier	true		2560297	0					
ANR	2560841	ExpressionStatement	tree = t1	531:3:12585:12594	2560297	4	True				
ANR	2560842	AssignmentExpression	tree = t1		2560297	0		=			
ANR	2560843	Identifier	tree		2560297	0					
ANR	2560844	Identifier	t1		2560297	1					
ANR	2560845	Statement	delete	532:3:12599:12604	2560297	5	True				
ANR	2560846	ExpressionStatement	tree	532:10:12606:12610	2560297	6	True				
ANR	2560847	Identifier	tree		2560297	0					
ANR	2560848	ReturnStatement	return ( true ) ;	533:3:12615:12629	2560297	7	True				
ANR	2560849	Identifier	true		2560297	0					
ANR	2560850	ExpressionStatement	"CLASSAD_EXCEPT ( ""Should not reach here"" )"	537:1:12640:12681	2560297	14	True				
ANR	2560851	CallExpression	"CLASSAD_EXCEPT ( ""Should not reach here"" )"		2560297	0					
ANR	2560852	Callee	CLASSAD_EXCEPT		2560297	0					
ANR	2560853	Identifier	CLASSAD_EXCEPT		2560297	0					
ANR	2560854	ArgumentList	"""Should not reach here"""		2560297	1					
ANR	2560855	Argument	"""Should not reach here"""		2560297	0					
ANR	2560856	PrimaryExpression	"""Should not reach here"""		2560297	0					
ANR	2560857	ReturnStatement	return ( false ) ;	538:1:12684:12699	2560297	15	True				
ANR	2560858	Identifier	false		2560297	0					
ANR	2560859	ReturnType	bool		2560297	1					
ANR	2560860	Identifier	Operation :: _Evaluate		2560297	2					
ANR	2560861	ParameterList	"EvalState & state , Value & result , ExprTree * & tree"		2560297	3					
ANR	2560862	Parameter	EvalState & state	407:11:9159:9174	2560297	0	True				
ANR	2560863	ParameterType	EvalState &		2560297	0					
ANR	2560864	Identifier	state		2560297	1					
ANR	2560865	Parameter	Value & result	407:29:9177:9189	2560297	1	True				
ANR	2560866	ParameterType	Value &		2560297	0					
ANR	2560867	Identifier	result		2560297	1					
ANR	2560868	Parameter	ExprTree * & tree	407:44:9192:9207	2560297	2	True				
ANR	2560869	ParameterType	ExprTree * &		2560297	0					
ANR	2560870	Identifier	tree		2560297	1					
ANR	2560871	CFGEntryNode	ENTRY		2560297		True				
ANR	2560872	CFGExitNode	EXIT		2560297		True				
ANR	2560873	Symbol	Literal :: MakeLiteral		2560297						
ANR	2560874	Symbol	LOGICAL_AND_OP		2560297						
ANR	2560875	Symbol	val3		2560297						
ANR	2560876	Symbol	& state		2560297						
ANR	2560877	Symbol	LOGICAL_OR_OP		2560297						
ANR	2560878	Symbol	val2		2560297						
ANR	2560879	Symbol	SIG_CHLD3		2560297						
ANR	2560880	Symbol	val1		2560297						
ANR	2560881	Symbol	SIG_CHLD1		2560297						
ANR	2560882	Symbol	SIG_CHLD2		2560297						
ANR	2560883	Symbol	UNARY_MINUS_OP		2560297						
ANR	2560884	Symbol	child2		2560297						
ANR	2560885	Symbol	TERNARY_OP		2560297						
ANR	2560886	Symbol	child3		2560297						
ANR	2560887	Symbol	child1		2560297						
ANR	2560888	Symbol	result		2560297						
ANR	2560889	Symbol	sig		2560297						
ANR	2560890	Symbol	valid1		2560297						
ANR	2560891	Symbol	valid3		2560297						
ANR	2560892	Symbol	valid2		2560297						
ANR	2560893	Symbol	* child1		2560297						
ANR	2560894	Symbol	state		2560297						
ANR	2560895	Symbol	val2 . IsExceptional		2560297						
ANR	2560896	Symbol	* child3		2560297						
ANR	2560897	Symbol	* child2		2560297						
ANR	2560898	Symbol	NULL		2560297						
ANR	2560899	Symbol	val1 . IsExceptional		2560297						
ANR	2560900	Symbol	tree		2560297						
ANR	2560901	Symbol	false		2560297						
ANR	2560902	Symbol	SIG_NONE		2560297						
ANR	2560903	Symbol	PARENTHESES_OP		2560297						
ANR	2560904	Symbol	ISNT_OP		2560297						
ANR	2560905	Symbol	MakeOperation		2560297						
ANR	2560906	Symbol	tmpVal		2560297						
ANR	2560907	Symbol	BITWISE_NOT_OP		2560297						
ANR	2560908	Symbol	IsStrictOperator		2560297						
ANR	2560909	Symbol	child3 -> Evaluate		2560297						
ANR	2560910	Symbol	child2 -> Evaluate		2560297						
ANR	2560911	Symbol	true		2560297						
ANR	2560912	Symbol	_doOperation		2560297						
ANR	2560913	Symbol	child1 -> Evaluate		2560297						
ANR	2560914	Symbol	LOGICAL_NOT_OP		2560297						
ANR	2560915	Symbol	t1		2560297						
ANR	2560916	Symbol	operation		2560297						
ANR	2560917	Symbol	UNARY_PLUS_OP		2560297						
ANR	2560918	Symbol	IS_OP		2560297						
ANR	2560919	Symbol	t2		2560297						
ANR	2560920	Symbol	t3		2560297						
ANR	2560921	Function	Operation :: _Flatten	542:0:12705:15152							
ANR	2560922	FunctionDef	"Operation :: _Flatten (EvalState & state , Value & val , ExprTree * & tree , int * opPtr)"		2560921	0					
ANR	2560923	CompoundStatement		544:0:12798:15152	2560921	0					
ANR	2560924	IdentifierDeclStatement	"int childOp1 = __NO_OP__ , childOp2 = __NO_OP__ ;"	545:1:12801:12844	2560921	0	True				
ANR	2560925	IdentifierDecl	childOp1 = __NO_OP__		2560921	0					
ANR	2560926	IdentifierDeclType	int		2560921	0					
ANR	2560927	Identifier	childOp1		2560921	1					
ANR	2560928	AssignmentExpression	childOp1 = __NO_OP__		2560921	2		=			
ANR	2560929	Identifier	__NO_OP__		2560921	0					
ANR	2560930	Identifier	__NO_OP__		2560921	1					
ANR	2560931	IdentifierDecl	childOp2 = __NO_OP__		2560921	1					
ANR	2560932	IdentifierDeclType	int		2560921	0					
ANR	2560933	Identifier	childOp2		2560921	1					
ANR	2560934	AssignmentExpression	childOp2 = __NO_OP__		2560921	2		=			
ANR	2560935	Identifier	__NO_OP__		2560921	0					
ANR	2560936	Identifier	__NO_OP__		2560921	1					
ANR	2560937	IdentifierDeclStatement	"ExprTree * fChild1 = NULL , * fChild2 = NULL ;"	546:1:12847:12884	2560921	1	True				
ANR	2560938	IdentifierDecl	* fChild1 = NULL		2560921	0					
ANR	2560939	IdentifierDeclType	ExprTree *		2560921	0					
ANR	2560940	Identifier	fChild1		2560921	1					
ANR	2560941	AssignmentExpression	* fChild1 = NULL		2560921	2		=			
ANR	2560942	Identifier	NULL		2560921	0					
ANR	2560943	Identifier	NULL		2560921	1					
ANR	2560944	IdentifierDecl	* fChild2 = NULL		2560921	1					
ANR	2560945	IdentifierDeclType	ExprTree *		2560921	0					
ANR	2560946	Identifier	fChild2		2560921	1					
ANR	2560947	AssignmentExpression	* fChild2 = NULL		2560921	2		=			
ANR	2560948	Identifier	NULL		2560921	0					
ANR	2560949	Identifier	NULL		2560921	1					
ANR	2560950	IdentifierDeclStatement	"Value val1 , val2 , val3 ;"	547:1:12887:12910	2560921	2	True				
ANR	2560951	IdentifierDecl	val1		2560921	0					
ANR	2560952	IdentifierDeclType	Value		2560921	0					
ANR	2560953	Identifier	val1		2560921	1					
ANR	2560954	IdentifierDecl	val2		2560921	1					
ANR	2560955	IdentifierDeclType	Value		2560921	0					
ANR	2560956	Identifier	val2		2560921	1					
ANR	2560957	IdentifierDecl	val3		2560921	2					
ANR	2560958	IdentifierDeclType	Value		2560921	0					
ANR	2560959	Identifier	val3		2560921	1					
ANR	2560960	IdentifierDeclStatement	"OpKind newOp = operation , op = operation ;"	548:1:12913:12954	2560921	3	True				
ANR	2560961	IdentifierDecl	newOp = operation		2560921	0					
ANR	2560962	IdentifierDeclType	OpKind		2560921	0					
ANR	2560963	Identifier	newOp		2560921	1					
ANR	2560964	AssignmentExpression	newOp = operation		2560921	2		=			
ANR	2560965	Identifier	operation		2560921	0					
ANR	2560966	Identifier	operation		2560921	1					
ANR	2560967	IdentifierDecl	op = operation		2560921	1					
ANR	2560968	IdentifierDeclType	OpKind		2560921	0					
ANR	2560969	Identifier	op		2560921	1					
ANR	2560970	AssignmentExpression	op = operation		2560921	2		=			
ANR	2560971	Identifier	operation		2560921	0					
ANR	2560972	Identifier	operation		2560921	1					
ANR	2560973	ExpressionStatement	tree = NULL	550:1:12958:12969	2560921	4	True				
ANR	2560974	AssignmentExpression	tree = NULL		2560921	0		=			
ANR	2560975	Identifier	tree		2560921	0					
ANR	2560976	Identifier	NULL		2560921	1					
ANR	2560977	IfStatement	if ( ( op >= __COMPARISON_START__ && op <= __COMPARISON_END__ ) || op == SUBTRACTION_OP || op == DIVISION_OP || op == MODULUS_OP || op == LEFT_SHIFT_OP || op == RIGHT_SHIFT_OP || op == URIGHT_SHIFT_OP )		2560921	5					
ANR	2560978	Condition	( op >= __COMPARISON_START__ && op <= __COMPARISON_END__ ) || op == SUBTRACTION_OP || op == DIVISION_OP || op == MODULUS_OP || op == LEFT_SHIFT_OP || op == RIGHT_SHIFT_OP || op == URIGHT_SHIFT_OP	553:5:13097:13296	2560921	0	True				
ANR	2560979	OrExpression	( op >= __COMPARISON_START__ && op <= __COMPARISON_END__ ) || op == SUBTRACTION_OP || op == DIVISION_OP || op == MODULUS_OP || op == LEFT_SHIFT_OP || op == RIGHT_SHIFT_OP || op == URIGHT_SHIFT_OP		2560921	0		||			
ANR	2560980	AndExpression	op >= __COMPARISON_START__ && op <= __COMPARISON_END__		2560921	0		&&			
ANR	2560981	RelationalExpression	op >= __COMPARISON_START__		2560921	0		>=			
ANR	2560982	Identifier	op		2560921	0					
ANR	2560983	Identifier	__COMPARISON_START__		2560921	1					
ANR	2560984	RelationalExpression	op <= __COMPARISON_END__		2560921	1		<=			
ANR	2560985	Identifier	op		2560921	0					
ANR	2560986	Identifier	__COMPARISON_END__		2560921	1					
ANR	2560987	OrExpression	op == SUBTRACTION_OP || op == DIVISION_OP || op == MODULUS_OP || op == LEFT_SHIFT_OP || op == RIGHT_SHIFT_OP || op == URIGHT_SHIFT_OP		2560921	1		||			
ANR	2560988	EqualityExpression	op == SUBTRACTION_OP		2560921	0		==			
ANR	2560989	Identifier	op		2560921	0					
ANR	2560990	Identifier	SUBTRACTION_OP		2560921	1					
ANR	2560991	OrExpression	op == DIVISION_OP || op == MODULUS_OP || op == LEFT_SHIFT_OP || op == RIGHT_SHIFT_OP || op == URIGHT_SHIFT_OP		2560921	1		||			
ANR	2560992	EqualityExpression	op == DIVISION_OP		2560921	0		==			
ANR	2560993	Identifier	op		2560921	0					
ANR	2560994	Identifier	DIVISION_OP		2560921	1					
ANR	2560995	OrExpression	op == MODULUS_OP || op == LEFT_SHIFT_OP || op == RIGHT_SHIFT_OP || op == URIGHT_SHIFT_OP		2560921	1		||			
ANR	2560996	EqualityExpression	op == MODULUS_OP		2560921	0		==			
ANR	2560997	Identifier	op		2560921	0					
ANR	2560998	Identifier	MODULUS_OP		2560921	1					
ANR	2560999	OrExpression	op == LEFT_SHIFT_OP || op == RIGHT_SHIFT_OP || op == URIGHT_SHIFT_OP		2560921	1		||			
ANR	2561000	EqualityExpression	op == LEFT_SHIFT_OP		2560921	0		==			
ANR	2561001	Identifier	op		2560921	0					
ANR	2561002	Identifier	LEFT_SHIFT_OP		2560921	1					
ANR	2561003	OrExpression	op == RIGHT_SHIFT_OP || op == URIGHT_SHIFT_OP		2560921	1		||			
ANR	2561004	EqualityExpression	op == RIGHT_SHIFT_OP		2560921	0		==			
ANR	2561005	Identifier	op		2560921	0					
ANR	2561006	Identifier	RIGHT_SHIFT_OP		2560921	1					
ANR	2561007	EqualityExpression	op == URIGHT_SHIFT_OP		2560921	1		==			
ANR	2561008	Identifier	op		2560921	0					
ANR	2561009	Identifier	URIGHT_SHIFT_OP		2560921	1					
ANR	2561010	CompoundStatement		13:1:502:502	2560921	1					
ANR	2561011	IfStatement	if ( opPtr )		2560921	0					
ANR	2561012	Condition	opPtr	557:6:13309:13313	2560921	0	True				
ANR	2561013	Identifier	opPtr		2560921	0					
ANR	2561014	ExpressionStatement	* opPtr = __NO_OP__	557:14:13317:13335	2560921	1	True				
ANR	2561015	AssignmentExpression	* opPtr = __NO_OP__		2560921	0		=			
ANR	2561016	UnaryOperationExpression	* opPtr		2560921	0					
ANR	2561017	UnaryOperator	*		2560921	0					
ANR	2561018	Identifier	opPtr		2560921	1					
ANR	2561019	Identifier	__NO_OP__		2560921	1					
ANR	2561020	IfStatement	"if ( child1 -> Flatten ( state , val1 , fChild1 ) && child2 -> Flatten ( state , val2 , fChild2 ) )"		2560921	1					
ANR	2561021	Condition	"child1 -> Flatten ( state , val1 , fChild1 ) && child2 -> Flatten ( state , val2 , fChild2 )"	558:6:13343:13427	2560921	0	True				
ANR	2561022	AndExpression	"child1 -> Flatten ( state , val1 , fChild1 ) && child2 -> Flatten ( state , val2 , fChild2 )"		2560921	0		&&			
ANR	2561023	CallExpression	"child1 -> Flatten ( state , val1 , fChild1 )"		2560921	0					
ANR	2561024	Callee	child1 -> Flatten		2560921	0					
ANR	2561025	PtrMemberAccess	child1 -> Flatten		2560921	0					
ANR	2561026	Identifier	child1		2560921	0					
ANR	2561027	Identifier	Flatten		2560921	1					
ANR	2561028	ArgumentList	state		2560921	1					
ANR	2561029	Argument	state		2560921	0					
ANR	2561030	Identifier	state		2560921	0					
ANR	2561031	Argument	val1		2560921	1					
ANR	2561032	Identifier	val1		2560921	0					
ANR	2561033	Argument	fChild1		2560921	2					
ANR	2561034	Identifier	fChild1		2560921	0					
ANR	2561035	CallExpression	"child2 -> Flatten ( state , val2 , fChild2 )"		2560921	1					
ANR	2561036	Callee	child2 -> Flatten		2560921	0					
ANR	2561037	PtrMemberAccess	child2 -> Flatten		2560921	0					
ANR	2561038	Identifier	child2		2560921	0					
ANR	2561039	Identifier	Flatten		2560921	1					
ANR	2561040	ArgumentList	state		2560921	1					
ANR	2561041	Argument	state		2560921	0					
ANR	2561042	Identifier	state		2560921	0					
ANR	2561043	Argument	val2		2560921	1					
ANR	2561044	Identifier	val2		2560921	0					
ANR	2561045	Argument	fChild2		2560921	2					
ANR	2561046	Identifier	fChild2		2560921	0					
ANR	2561047	CompoundStatement		16:45:632:632	2560921	1					
ANR	2561048	IfStatement	if ( ! fChild1 && ! fChild2 )		2560921	0					
ANR	2561049	Condition	! fChild1 && ! fChild2	560:7:13440:13459	2560921	0	True				
ANR	2561050	AndExpression	! fChild1 && ! fChild2		2560921	0		&&			
ANR	2561051	UnaryOperationExpression	! fChild1		2560921	0					
ANR	2561052	UnaryOperator	!		2560921	0					
ANR	2561053	Identifier	fChild1		2560921	1					
ANR	2561054	UnaryOperationExpression	! fChild2		2560921	1					
ANR	2561055	UnaryOperator	!		2560921	0					
ANR	2561056	Identifier	fChild2		2560921	1					
ANR	2561057	CompoundStatement		17:30:664:664	2560921	1					
ANR	2561058	ExpressionStatement	"_doOperation ( op , val1 , val2 , val3 , true , true , false , val )"	561:4:13469:13527	2560921	0	True				
ANR	2561059	CallExpression	"_doOperation ( op , val1 , val2 , val3 , true , true , false , val )"		2560921	0					
ANR	2561060	Callee	_doOperation		2560921	0					
ANR	2561061	Identifier	_doOperation		2560921	0					
ANR	2561062	ArgumentList	op		2560921	1					
ANR	2561063	Argument	op		2560921	0					
ANR	2561064	Identifier	op		2560921	0					
ANR	2561065	Argument	val1		2560921	1					
ANR	2561066	Identifier	val1		2560921	0					
ANR	2561067	Argument	val2		2560921	2					
ANR	2561068	Identifier	val2		2560921	0					
ANR	2561069	Argument	val3		2560921	3					
ANR	2561070	Identifier	val3		2560921	0					
ANR	2561071	Argument	true		2560921	4					
ANR	2561072	Identifier	true		2560921	0					
ANR	2561073	Argument	true		2560921	5					
ANR	2561074	Identifier	true		2560921	0					
ANR	2561075	Argument	false		2560921	6					
ANR	2561076	Identifier	false		2560921	0					
ANR	2561077	Argument	val		2560921	7					
ANR	2561078	Identifier	val		2560921	0					
ANR	2561079	ExpressionStatement	tree = NULL	562:4:13534:13545	2560921	1	True				
ANR	2561080	AssignmentExpression	tree = NULL		2560921	0		=			
ANR	2561081	Identifier	tree		2560921	0					
ANR	2561082	Identifier	NULL		2560921	1					
ANR	2561083	ReturnStatement	return true ;	563:4:13551:13562	2560921	2	True				
ANR	2561084	Identifier	true		2560921	0					
ANR	2561085	ElseStatement	else		2560921	0					
ANR	2561086	IfStatement	if ( fChild1 && fChild2 )		2560921	0					
ANR	2561087	Condition	fChild1 && fChild2	564:14:13578:13595	2560921	0	True				
ANR	2561088	AndExpression	fChild1 && fChild2		2560921	0		&&			
ANR	2561089	Identifier	fChild1		2560921	0					
ANR	2561090	Identifier	fChild2		2560921	1					
ANR	2561091	CompoundStatement		21:35:800:800	2560921	1					
ANR	2561092	ExpressionStatement	"tree = Operation :: MakeOperation ( op , fChild1 , fChild2 )"	565:4:13605:13660	2560921	0	True				
ANR	2561093	AssignmentExpression	"tree = Operation :: MakeOperation ( op , fChild1 , fChild2 )"		2560921	0		=			
ANR	2561094	Identifier	tree		2560921	0					
ANR	2561095	CallExpression	"Operation :: MakeOperation ( op , fChild1 , fChild2 )"		2560921	1					
ANR	2561096	Callee	Operation :: MakeOperation		2560921	0					
ANR	2561097	Identifier	Operation :: MakeOperation		2560921	0					
ANR	2561098	ArgumentList	op		2560921	1					
ANR	2561099	Argument	op		2560921	0					
ANR	2561100	Identifier	op		2560921	0					
ANR	2561101	Argument	fChild1		2560921	1					
ANR	2561102	Identifier	fChild1		2560921	0					
ANR	2561103	Argument	fChild2		2560921	2					
ANR	2561104	Identifier	fChild2		2560921	0					
ANR	2561105	ReturnStatement	return true ;	566:4:13666:13677	2560921	1	True				
ANR	2561106	Identifier	true		2560921	0					
ANR	2561107	ElseStatement	else		2560921	0					
ANR	2561108	IfStatement	if ( fChild1 )		2560921	0					
ANR	2561109	Condition	fChild1	567:14:13693:13699	2560921	0	True				
ANR	2561110	Identifier	fChild1		2560921	0					
ANR	2561111	CompoundStatement		24:24:904:904	2560921	1					
ANR	2561112	ExpressionStatement	"tree = Operation :: MakeOperation ( op , fChild1 , val2 )"	568:4:13709:13761	2560921	0	True				
ANR	2561113	AssignmentExpression	"tree = Operation :: MakeOperation ( op , fChild1 , val2 )"		2560921	0		=			
ANR	2561114	Identifier	tree		2560921	0					
ANR	2561115	CallExpression	"Operation :: MakeOperation ( op , fChild1 , val2 )"		2560921	1					
ANR	2561116	Callee	Operation :: MakeOperation		2560921	0					
ANR	2561117	Identifier	Operation :: MakeOperation		2560921	0					
ANR	2561118	ArgumentList	op		2560921	1					
ANR	2561119	Argument	op		2560921	0					
ANR	2561120	Identifier	op		2560921	0					
ANR	2561121	Argument	fChild1		2560921	1					
ANR	2561122	Identifier	fChild1		2560921	0					
ANR	2561123	Argument	val2		2560921	2					
ANR	2561124	Identifier	val2		2560921	0					
ANR	2561125	ReturnStatement	return true ;	569:4:13767:13778	2560921	1	True				
ANR	2561126	Identifier	true		2560921	0					
ANR	2561127	ElseStatement	else		2560921	0					
ANR	2561128	IfStatement	if ( fChild2 )		2560921	0					
ANR	2561129	Condition	fChild2	570:14:13794:13800	2560921	0	True				
ANR	2561130	Identifier	fChild2		2560921	0					
ANR	2561131	CompoundStatement		27:24:1005:1005	2560921	1					
ANR	2561132	ExpressionStatement	"tree = Operation :: MakeOperation ( op , val1 , fChild2 )"	571:4:13810:13862	2560921	0	True				
ANR	2561133	AssignmentExpression	"tree = Operation :: MakeOperation ( op , val1 , fChild2 )"		2560921	0		=			
ANR	2561134	Identifier	tree		2560921	0					
ANR	2561135	CallExpression	"Operation :: MakeOperation ( op , val1 , fChild2 )"		2560921	1					
ANR	2561136	Callee	Operation :: MakeOperation		2560921	0					
ANR	2561137	Identifier	Operation :: MakeOperation		2560921	0					
ANR	2561138	ArgumentList	op		2560921	1					
ANR	2561139	Argument	op		2560921	0					
ANR	2561140	Identifier	op		2560921	0					
ANR	2561141	Argument	val1		2560921	1					
ANR	2561142	Identifier	val1		2560921	0					
ANR	2561143	Argument	fChild2		2560921	2					
ANR	2561144	Identifier	fChild2		2560921	0					
ANR	2561145	ReturnStatement	return true ;	572:4:13868:13879	2560921	1	True				
ANR	2561146	Identifier	true		2560921	0					
ANR	2561147	ElseStatement	else		2560921	0					
ANR	2561148	CompoundStatement		31:9:1096:1096	2560921	0					
ANR	2561149	IfStatement	if ( fChild1 )		2560921	0					
ANR	2561150	Condition	fChild1	575:7:13904:13910	2560921	0	True				
ANR	2561151	Identifier	fChild1		2560921	0					
ANR	2561152	Statement	delete	575:17:13914:13919	2560921	1	True				
ANR	2561153	ExpressionStatement	fChild1	575:24:13921:13928	2560921	1	True				
ANR	2561154	Identifier	fChild1		2560921	0					
ANR	2561155	IfStatement	if ( fChild2 )		2560921	2					
ANR	2561156	Condition	fChild2	576:7:13937:13943	2560921	0	True				
ANR	2561157	Identifier	fChild2		2560921	0					
ANR	2561158	Statement	delete	576:17:13947:13952	2560921	1	True				
ANR	2561159	ExpressionStatement	fChild2	576:24:13954:13961	2560921	3	True				
ANR	2561160	Identifier	fChild2		2560921	0					
ANR	2561161	ExpressionStatement	tree = NULL	577:3:13966:13977	2560921	4	True				
ANR	2561162	AssignmentExpression	tree = NULL		2560921	0		=			
ANR	2561163	Identifier	tree		2560921	0					
ANR	2561164	Identifier	NULL		2560921	1					
ANR	2561165	ReturnStatement	return false ;	578:3:13982:13994	2560921	5	True				
ANR	2561166	Identifier	false		2560921	0					
ANR	2561167	ElseStatement	else		2560921	0					
ANR	2561168	IfStatement	if ( op == TERNARY_OP || op == SUBSCRIPT_OP || op == UNARY_PLUS_OP || op == UNARY_MINUS_OP || op == PARENTHESES_OP || op == LOGICAL_NOT_OP || op == BITWISE_NOT_OP )		2560921	0					
ANR	2561169	Condition	op == TERNARY_OP || op == SUBSCRIPT_OP || op == UNARY_PLUS_OP || op == UNARY_MINUS_OP || op == PARENTHESES_OP || op == LOGICAL_NOT_OP || op == BITWISE_NOT_OP	582:5:14054:14220	2560921	0	True				
ANR	2561170	OrExpression	op == TERNARY_OP || op == SUBSCRIPT_OP || op == UNARY_PLUS_OP || op == UNARY_MINUS_OP || op == PARENTHESES_OP || op == LOGICAL_NOT_OP || op == BITWISE_NOT_OP		2560921	0		||			
ANR	2561171	EqualityExpression	op == TERNARY_OP		2560921	0		==			
ANR	2561172	Identifier	op		2560921	0					
ANR	2561173	Identifier	TERNARY_OP		2560921	1					
ANR	2561174	OrExpression	op == SUBSCRIPT_OP || op == UNARY_PLUS_OP || op == UNARY_MINUS_OP || op == PARENTHESES_OP || op == LOGICAL_NOT_OP || op == BITWISE_NOT_OP		2560921	1		||			
ANR	2561175	EqualityExpression	op == SUBSCRIPT_OP		2560921	0		==			
ANR	2561176	Identifier	op		2560921	0					
ANR	2561177	Identifier	SUBSCRIPT_OP		2560921	1					
ANR	2561178	OrExpression	op == UNARY_PLUS_OP || op == UNARY_MINUS_OP || op == PARENTHESES_OP || op == LOGICAL_NOT_OP || op == BITWISE_NOT_OP		2560921	1		||			
ANR	2561179	EqualityExpression	op == UNARY_PLUS_OP		2560921	0		==			
ANR	2561180	Identifier	op		2560921	0					
ANR	2561181	Identifier	UNARY_PLUS_OP		2560921	1					
ANR	2561182	OrExpression	op == UNARY_MINUS_OP || op == PARENTHESES_OP || op == LOGICAL_NOT_OP || op == BITWISE_NOT_OP		2560921	1		||			
ANR	2561183	EqualityExpression	op == UNARY_MINUS_OP		2560921	0		==			
ANR	2561184	Identifier	op		2560921	0					
ANR	2561185	Identifier	UNARY_MINUS_OP		2560921	1					
ANR	2561186	OrExpression	op == PARENTHESES_OP || op == LOGICAL_NOT_OP || op == BITWISE_NOT_OP		2560921	1		||			
ANR	2561187	EqualityExpression	op == PARENTHESES_OP		2560921	0		==			
ANR	2561188	Identifier	op		2560921	0					
ANR	2561189	Identifier	PARENTHESES_OP		2560921	1					
ANR	2561190	OrExpression	op == LOGICAL_NOT_OP || op == BITWISE_NOT_OP		2560921	1		||			
ANR	2561191	EqualityExpression	op == LOGICAL_NOT_OP		2560921	0		==			
ANR	2561192	Identifier	op		2560921	0					
ANR	2561193	Identifier	LOGICAL_NOT_OP		2560921	1					
ANR	2561194	EqualityExpression	op == BITWISE_NOT_OP		2560921	1		==			
ANR	2561195	Identifier	op		2560921	0					
ANR	2561196	Identifier	BITWISE_NOT_OP		2560921	1					
ANR	2561197	CompoundStatement		41:51:1425:1425	2560921	1					
ANR	2561198	ReturnStatement	"return flattenSpecials ( state , val , tree ) ;"	585:2:14228:14270	2560921	0	True				
ANR	2561199	CallExpression	"flattenSpecials ( state , val , tree )"		2560921	0					
ANR	2561200	Callee	flattenSpecials		2560921	0					
ANR	2561201	Identifier	flattenSpecials		2560921	0					
ANR	2561202	ArgumentList	state		2560921	1					
ANR	2561203	Argument	state		2560921	0					
ANR	2561204	Identifier	state		2560921	0					
ANR	2561205	Argument	val		2560921	1					
ANR	2561206	Identifier	val		2560921	0					
ANR	2561207	Argument	tree		2560921	2					
ANR	2561208	Identifier	tree		2560921	0					
ANR	2561209	IfStatement	"if ( child1 && ! child1 -> Flatten ( state , val1 , fChild1 , & childOp1 ) || child2 && ! child2 -> Flatten ( state , val2 , fChild2 , & childOp2 ) )"		2560921	6					
ANR	2561210	Condition	"child1 && ! child1 -> Flatten ( state , val1 , fChild1 , & childOp1 ) || child2 && ! child2 -> Flatten ( state , val2 , fChild2 , & childOp2 )"	590:5:14388:14515	2560921	0	True				
ANR	2561211	OrExpression	"child1 && ! child1 -> Flatten ( state , val1 , fChild1 , & childOp1 ) || child2 && ! child2 -> Flatten ( state , val2 , fChild2 , & childOp2 )"		2560921	0		||			
ANR	2561212	AndExpression	"child1 && ! child1 -> Flatten ( state , val1 , fChild1 , & childOp1 )"		2560921	0		&&			
ANR	2561213	Identifier	child1		2560921	0					
ANR	2561214	UnaryOperationExpression	"! child1 -> Flatten ( state , val1 , fChild1 , & childOp1 )"		2560921	1					
ANR	2561215	UnaryOperator	!		2560921	0					
ANR	2561216	CallExpression	"child1 -> Flatten ( state , val1 , fChild1 , & childOp1 )"		2560921	1					
ANR	2561217	Callee	child1 -> Flatten		2560921	0					
ANR	2561218	PtrMemberAccess	child1 -> Flatten		2560921	0					
ANR	2561219	Identifier	child1		2560921	0					
ANR	2561220	Identifier	Flatten		2560921	1					
ANR	2561221	ArgumentList	state		2560921	1					
ANR	2561222	Argument	state		2560921	0					
ANR	2561223	Identifier	state		2560921	0					
ANR	2561224	Argument	val1		2560921	1					
ANR	2561225	Identifier	val1		2560921	0					
ANR	2561226	Argument	fChild1		2560921	2					
ANR	2561227	Identifier	fChild1		2560921	0					
ANR	2561228	Argument	& childOp1		2560921	3					
ANR	2561229	UnaryOperationExpression	& childOp1		2560921	0					
ANR	2561230	UnaryOperator	&		2560921	0					
ANR	2561231	Identifier	childOp1		2560921	1					
ANR	2561232	AndExpression	"child2 && ! child2 -> Flatten ( state , val2 , fChild2 , & childOp2 )"		2560921	1		&&			
ANR	2561233	Identifier	child2		2560921	0					
ANR	2561234	UnaryOperationExpression	"! child2 -> Flatten ( state , val2 , fChild2 , & childOp2 )"		2560921	1					
ANR	2561235	UnaryOperator	!		2560921	0					
ANR	2561236	CallExpression	"child2 -> Flatten ( state , val2 , fChild2 , & childOp2 )"		2560921	1					
ANR	2561237	Callee	child2 -> Flatten		2560921	0					
ANR	2561238	PtrMemberAccess	child2 -> Flatten		2560921	0					
ANR	2561239	Identifier	child2		2560921	0					
ANR	2561240	Identifier	Flatten		2560921	1					
ANR	2561241	ArgumentList	state		2560921	1					
ANR	2561242	Argument	state		2560921	0					
ANR	2561243	Identifier	state		2560921	0					
ANR	2561244	Argument	val2		2560921	1					
ANR	2561245	Identifier	val2		2560921	0					
ANR	2561246	Argument	fChild2		2560921	2					
ANR	2561247	Identifier	fChild2		2560921	0					
ANR	2561248	Argument	& childOp2		2560921	3					
ANR	2561249	UnaryOperationExpression	& childOp2		2560921	0					
ANR	2561250	UnaryOperator	&		2560921	0					
ANR	2561251	Identifier	childOp2		2560921	1					
ANR	2561252	CompoundStatement		48:66:1720:1720	2560921	1					
ANR	2561253	Statement	delete	592:2:14523:14528	2560921	0	True				
ANR	2561254	ExpressionStatement	fChild1	592:9:14530:14537	2560921	1	True				
ANR	2561255	Identifier	fChild1		2560921	0					
ANR	2561256	Statement	delete	593:2:14541:14546	2560921	2	True				
ANR	2561257	ExpressionStatement	fChild2	593:9:14548:14555	2560921	3	True				
ANR	2561258	Identifier	fChild2		2560921	0					
ANR	2561259	ExpressionStatement	tree = NULL	594:2:14559:14570	2560921	4	True				
ANR	2561260	AssignmentExpression	tree = NULL		2560921	0		=			
ANR	2561261	Identifier	tree		2560921	0					
ANR	2561262	Identifier	NULL		2560921	1					
ANR	2561263	ReturnStatement	return false ;	595:2:14574:14586	2560921	5	True				
ANR	2561264	Identifier	false		2560921	0					
ANR	2561265	IfStatement	"if ( ! combine ( newOp , val , tree , childOp1 , val1 , fChild1 , childOp2 , val2 , fChild2 ) )"		2560921	7					
ANR	2561266	Condition	"! combine ( newOp , val , tree , childOp1 , val1 , fChild1 , childOp2 , val2 , fChild2 )"	600:5:14687:14771	2560921	0	True				
ANR	2561267	UnaryOperationExpression	"! combine ( newOp , val , tree , childOp1 , val1 , fChild1 , childOp2 , val2 , fChild2 )"		2560921	0					
ANR	2561268	UnaryOperator	!		2560921	0					
ANR	2561269	CallExpression	"combine ( newOp , val , tree , childOp1 , val1 , fChild1 , childOp2 , val2 , fChild2 )"		2560921	1					
ANR	2561270	Callee	combine		2560921	0					
ANR	2561271	Identifier	combine		2560921	0					
ANR	2561272	ArgumentList	newOp		2560921	1					
ANR	2561273	Argument	newOp		2560921	0					
ANR	2561274	Identifier	newOp		2560921	0					
ANR	2561275	Argument	val		2560921	1					
ANR	2561276	Identifier	val		2560921	0					
ANR	2561277	Argument	tree		2560921	2					
ANR	2561278	Identifier	tree		2560921	0					
ANR	2561279	Argument	childOp1		2560921	3					
ANR	2561280	Identifier	childOp1		2560921	0					
ANR	2561281	Argument	val1		2560921	4					
ANR	2561282	Identifier	val1		2560921	0					
ANR	2561283	Argument	fChild1		2560921	5					
ANR	2561284	Identifier	fChild1		2560921	0					
ANR	2561285	Argument	childOp2		2560921	6					
ANR	2561286	Identifier	childOp2		2560921	0					
ANR	2561287	Argument	val2		2560921	7					
ANR	2561288	Identifier	val2		2560921	0					
ANR	2561289	Argument	fChild2		2560921	8					
ANR	2561290	Identifier	fChild2		2560921	0					
ANR	2561291	CompoundStatement		58:34:1976:1976	2560921	1					
ANR	2561292	ExpressionStatement	tree = NULL	602:2:14779:14790	2560921	0	True				
ANR	2561293	AssignmentExpression	tree = NULL		2560921	0		=			
ANR	2561294	Identifier	tree		2560921	0					
ANR	2561295	Identifier	NULL		2560921	1					
ANR	2561296	IfStatement	if ( opPtr )		2560921	1					
ANR	2561297	Condition	opPtr	603:6:14798:14802	2560921	0	True				
ANR	2561298	Identifier	opPtr		2560921	0					
ANR	2561299	ExpressionStatement	* opPtr = __NO_OP__	603:14:14806:14824	2560921	1	True				
ANR	2561300	AssignmentExpression	* opPtr = __NO_OP__		2560921	0		=			
ANR	2561301	UnaryOperationExpression	* opPtr		2560921	0					
ANR	2561302	UnaryOperator	*		2560921	0					
ANR	2561303	Identifier	opPtr		2560921	1					
ANR	2561304	Identifier	__NO_OP__		2560921	1					
ANR	2561305	ReturnStatement	return false ;	604:2:14828:14840	2560921	2	True				
ANR	2561306	Identifier	false		2560921	0					
ANR	2561307	IfStatement	if ( ! opPtr && newOp != __NO_OP__ )		2560921	8					
ANR	2561308	Condition	! opPtr && newOp != __NO_OP__	608:5:14919:14946	2560921	0	True				
ANR	2561309	AndExpression	! opPtr && newOp != __NO_OP__		2560921	0		&&			
ANR	2561310	UnaryOperationExpression	! opPtr		2560921	0					
ANR	2561311	UnaryOperator	!		2560921	0					
ANR	2561312	Identifier	opPtr		2560921	1					
ANR	2561313	EqualityExpression	newOp != __NO_OP__		2560921	1		!=			
ANR	2561314	Identifier	newOp		2560921	0					
ANR	2561315	Identifier	__NO_OP__		2560921	1					
ANR	2561316	CompoundStatement		65:36:2151:2151	2560921	1					
ANR	2561317	ExpressionStatement	"tree = Operation :: MakeOperation ( newOp , val , tree )"	609:2:14954:15005	2560921	0	True				
ANR	2561318	AssignmentExpression	"tree = Operation :: MakeOperation ( newOp , val , tree )"		2560921	0		=			
ANR	2561319	Identifier	tree		2560921	0					
ANR	2561320	CallExpression	"Operation :: MakeOperation ( newOp , val , tree )"		2560921	1					
ANR	2561321	Callee	Operation :: MakeOperation		2560921	0					
ANR	2561322	Identifier	Operation :: MakeOperation		2560921	0					
ANR	2561323	ArgumentList	newOp		2560921	1					
ANR	2561324	Argument	newOp		2560921	0					
ANR	2561325	Identifier	newOp		2560921	0					
ANR	2561326	Argument	val		2560921	1					
ANR	2561327	Identifier	val		2560921	0					
ANR	2561328	Argument	tree		2560921	2					
ANR	2561329	Identifier	tree		2560921	0					
ANR	2561330	IfStatement	if ( ! tree )		2560921	1					
ANR	2561331	Condition	! tree	610:6:15013:15017	2560921	0	True				
ANR	2561332	UnaryOperationExpression	! tree		2560921	0					
ANR	2561333	UnaryOperator	!		2560921	0					
ANR	2561334	Identifier	tree		2560921	1					
ANR	2561335	CompoundStatement		67:14:2222:2222	2560921	1					
ANR	2561336	IfStatement	if ( opPtr )		2560921	0					
ANR	2561337	Condition	opPtr	611:7:15030:15034	2560921	0	True				
ANR	2561338	Identifier	opPtr		2560921	0					
ANR	2561339	ExpressionStatement	* opPtr = __NO_OP__	611:15:15038:15056	2560921	1	True				
ANR	2561340	AssignmentExpression	* opPtr = __NO_OP__		2560921	0		=			
ANR	2561341	UnaryOperationExpression	* opPtr		2560921	0					
ANR	2561342	UnaryOperator	*		2560921	0					
ANR	2561343	Identifier	opPtr		2560921	1					
ANR	2561344	Identifier	__NO_OP__		2560921	1					
ANR	2561345	ReturnStatement	return false ;	612:3:15061:15073	2560921	1	True				
ANR	2561346	Identifier	false		2560921	0					
ANR	2561347	ReturnStatement	return true ;	614:2:15081:15092	2560921	2	True				
ANR	2561348	Identifier	true		2560921	0					
ANR	2561349	ElseStatement	else		2560921	0					
ANR	2561350	IfStatement	if ( opPtr )		2560921	0					
ANR	2561351	Condition	opPtr	615:12:15106:15110	2560921	0	True				
ANR	2561352	Identifier	opPtr		2560921	0					
ANR	2561353	CompoundStatement		72:20:2315:2315	2560921	1					
ANR	2561354	ExpressionStatement	* opPtr = newOp	616:2:15118:15132	2560921	0	True				
ANR	2561355	AssignmentExpression	* opPtr = newOp		2560921	0		=			
ANR	2561356	UnaryOperationExpression	* opPtr		2560921	0					
ANR	2561357	UnaryOperator	*		2560921	0					
ANR	2561358	Identifier	opPtr		2560921	1					
ANR	2561359	Identifier	newOp		2560921	1					
ANR	2561360	ReturnStatement	return true ;	619:1:15139:15150	2560921	9	True				
ANR	2561361	Identifier	true		2560921	0					
ANR	2561362	ReturnType	bool		2560921	1					
ANR	2561363	Identifier	Operation :: _Flatten		2560921	2					
ANR	2561364	ParameterList	"EvalState & state , Value & val , ExprTree * & tree , int * opPtr"		2560921	3					
ANR	2561365	Parameter	EvalState & state	543:10:12732:12747	2560921	0	True				
ANR	2561366	ParameterType	EvalState &		2560921	0					
ANR	2561367	Identifier	state		2560921	1					
ANR	2561368	Parameter	Value & val	543:28:12750:12759	2560921	1	True				
ANR	2561369	ParameterType	Value &		2560921	0					
ANR	2561370	Identifier	val		2560921	1					
ANR	2561371	Parameter	ExprTree * & tree	543:40:12762:12776	2560921	2	True				
ANR	2561372	ParameterType	ExprTree * &		2560921	0					
ANR	2561373	Identifier	tree		2560921	1					
ANR	2561374	Parameter	int * opPtr	543:57:12779:12788	2560921	3	True				
ANR	2561375	ParameterType	int *		2560921	0					
ANR	2561376	Identifier	opPtr		2560921	1					
ANR	2561377	CFGEntryNode	ENTRY		2560921		True				
ANR	2561378	CFGExitNode	EXIT		2560921		True				
ANR	2561379	Symbol	SUBSCRIPT_OP		2560921						
ANR	2561380	Symbol	val3		2560921						
ANR	2561381	Symbol	val2		2560921						
ANR	2561382	Symbol	val1		2560921						
ANR	2561383	Symbol	UNARY_MINUS_OP		2560921						
ANR	2561384	Symbol	child2		2560921						
ANR	2561385	Symbol	Operation :: MakeOperation		2560921						
ANR	2561386	Symbol	TERNARY_OP		2560921						
ANR	2561387	Symbol	child1		2560921						
ANR	2561388	Symbol	RIGHT_SHIFT_OP		2560921						
ANR	2561389	Symbol	__NO_OP__		2560921						
ANR	2561390	Symbol	child1 -> Flatten		2560921						
ANR	2561391	Symbol	child2 -> Flatten		2560921						
ANR	2561392	Symbol	* child1		2560921						
ANR	2561393	Symbol	state		2560921						
ANR	2561394	Symbol	childOp2		2560921						
ANR	2561395	Symbol	newOp		2560921						
ANR	2561396	Symbol	opPtr		2560921						
ANR	2561397	Symbol	childOp1		2560921						
ANR	2561398	Symbol	SUBTRACTION_OP		2560921						
ANR	2561399	Symbol	* child2		2560921						
ANR	2561400	Symbol	combine		2560921						
ANR	2561401	Symbol	val		2560921						
ANR	2561402	Symbol	fChild1		2560921						
ANR	2561403	Symbol	op		2560921						
ANR	2561404	Symbol	__COMPARISON_END__		2560921						
ANR	2561405	Symbol	NULL		2560921						
ANR	2561406	Symbol	flattenSpecials		2560921						
ANR	2561407	Symbol	* opPtr		2560921						
ANR	2561408	Symbol	fChild2		2560921						
ANR	2561409	Symbol	tree		2560921						
ANR	2561410	Symbol	false		2560921						
ANR	2561411	Symbol	PARENTHESES_OP		2560921						
ANR	2561412	Symbol	DIVISION_OP		2560921						
ANR	2561413	Symbol	BITWISE_NOT_OP		2560921						
ANR	2561414	Symbol	& childOp1		2560921						
ANR	2561415	Symbol	& childOp2		2560921						
ANR	2561416	Symbol	LEFT_SHIFT_OP		2560921						
ANR	2561417	Symbol	MODULUS_OP		2560921						
ANR	2561418	Symbol	__COMPARISON_START__		2560921						
ANR	2561419	Symbol	true		2560921						
ANR	2561420	Symbol	URIGHT_SHIFT_OP		2560921						
ANR	2561421	Symbol	LOGICAL_NOT_OP		2560921						
ANR	2561422	Symbol	operation		2560921						
ANR	2561423	Symbol	UNARY_PLUS_OP		2560921						
ANR	2561424	Function	Operation :: combine	623:0:15156:19082							
ANR	2561425	FunctionDef	"Operation :: combine (OpKind & op , Value & val , ExprTree * & tree , int op1 , Value & val1 , ExprTree * tree1 , int op2 , Value & val2 , ExprTree * tree2)"		2561424	0					
ANR	2561426	CompoundStatement		627:0:15314:19082	2561424	0					
ANR	2561427	IdentifierDeclStatement	Operation * newOp ;	628:1:15317:15334	2561424	0	True				
ANR	2561428	IdentifierDecl	* newOp		2561424	0					
ANR	2561429	IdentifierDeclType	Operation *		2561424	0					
ANR	2561430	Identifier	newOp		2561424	1					
ANR	2561431	IdentifierDeclStatement	Value dummy ;	629:1:15337:15349	2561424	1	True				
ANR	2561432	IdentifierDecl	dummy		2561424	0					
ANR	2561433	IdentifierDeclType	Value		2561424	0					
ANR	2561434	Identifier	dummy		2561424	1					
ANR	2561435	IfStatement	if ( ( ! tree1 || ! tree2 ) && ( tree1 || tree2 ) && ( op == LOGICAL_OR_OP || op == LOGICAL_AND_OP ) )		2561424	2					
ANR	2561436	Condition	( ! tree1 || ! tree2 ) && ( tree1 || tree2 ) && ( op == LOGICAL_OR_OP || op == LOGICAL_AND_OP )	632:5:15445:15532	2561424	0	True				
ANR	2561437	AndExpression	( ! tree1 || ! tree2 ) && ( tree1 || tree2 ) && ( op == LOGICAL_OR_OP || op == LOGICAL_AND_OP )		2561424	0		&&			
ANR	2561438	OrExpression	! tree1 || ! tree2		2561424	0		||			
ANR	2561439	UnaryOperationExpression	! tree1		2561424	0					
ANR	2561440	UnaryOperator	!		2561424	0					
ANR	2561441	Identifier	tree1		2561424	1					
ANR	2561442	UnaryOperationExpression	! tree2		2561424	1					
ANR	2561443	UnaryOperator	!		2561424	0					
ANR	2561444	Identifier	tree2		2561424	1					
ANR	2561445	AndExpression	( tree1 || tree2 ) && ( op == LOGICAL_OR_OP || op == LOGICAL_AND_OP )		2561424	1		&&			
ANR	2561446	OrExpression	tree1 || tree2		2561424	0		||			
ANR	2561447	Identifier	tree1		2561424	0					
ANR	2561448	Identifier	tree2		2561424	1					
ANR	2561449	OrExpression	op == LOGICAL_OR_OP || op == LOGICAL_AND_OP		2561424	1		||			
ANR	2561450	EqualityExpression	op == LOGICAL_OR_OP		2561424	0		==			
ANR	2561451	Identifier	op		2561424	0					
ANR	2561452	Identifier	LOGICAL_OR_OP		2561424	1					
ANR	2561453	EqualityExpression	op == LOGICAL_AND_OP		2561424	1		==			
ANR	2561454	Identifier	op		2561424	0					
ANR	2561455	Identifier	LOGICAL_AND_OP		2561424	1					
ANR	2561456	CompoundStatement		7:48:221:221	2561424	1					
ANR	2561457	ExpressionStatement	"_doOperation ( op , ! tree1 ? val1 : dummy , ! tree2 ? val2 : dummy , dummy , true , true , false , val )"	634:2:15540:15637	2561424	0	True				
ANR	2561458	CallExpression	"_doOperation ( op , ! tree1 ? val1 : dummy , ! tree2 ? val2 : dummy , dummy , true , true , false , val )"		2561424	0					
ANR	2561459	Callee	_doOperation		2561424	0					
ANR	2561460	Identifier	_doOperation		2561424	0					
ANR	2561461	ArgumentList	op		2561424	1					
ANR	2561462	Argument	op		2561424	0					
ANR	2561463	Identifier	op		2561424	0					
ANR	2561464	Argument	! tree1 ? val1 : dummy		2561424	1					
ANR	2561465	ConditionalExpression	! tree1 ? val1 : dummy		2561424	0					
ANR	2561466	Condition	! tree1		2561424	0					
ANR	2561467	UnaryOperationExpression	! tree1		2561424	0					
ANR	2561468	UnaryOperator	!		2561424	0					
ANR	2561469	Identifier	tree1		2561424	1					
ANR	2561470	Identifier	val1		2561424	1					
ANR	2561471	Identifier	dummy		2561424	2					
ANR	2561472	Argument	! tree2 ? val2 : dummy		2561424	2					
ANR	2561473	ConditionalExpression	! tree2 ? val2 : dummy		2561424	0					
ANR	2561474	Condition	! tree2		2561424	0					
ANR	2561475	UnaryOperationExpression	! tree2		2561424	0					
ANR	2561476	UnaryOperator	!		2561424	0					
ANR	2561477	Identifier	tree2		2561424	1					
ANR	2561478	Identifier	val2		2561424	1					
ANR	2561479	Identifier	dummy		2561424	2					
ANR	2561480	Argument	dummy		2561424	3					
ANR	2561481	Identifier	dummy		2561424	0					
ANR	2561482	Argument	true		2561424	4					
ANR	2561483	Identifier	true		2561424	0					
ANR	2561484	Argument	true		2561424	5					
ANR	2561485	Identifier	true		2561424	0					
ANR	2561486	Argument	false		2561424	6					
ANR	2561487	Identifier	false		2561424	0					
ANR	2561488	Argument	val		2561424	7					
ANR	2561489	Identifier	val		2561424	0					
ANR	2561490	IfStatement	if ( val . IsBooleanValue ( ) )		2561424	1					
ANR	2561491	Condition	val . IsBooleanValue ( )	636:6:15645:15664	2561424	0	True				
ANR	2561492	CallExpression	val . IsBooleanValue ( )		2561424	0					
ANR	2561493	Callee	val . IsBooleanValue		2561424	0					
ANR	2561494	MemberAccess	val . IsBooleanValue		2561424	0					
ANR	2561495	Identifier	val		2561424	0					
ANR	2561496	Identifier	IsBooleanValue		2561424	1					
ANR	2561497	ArgumentList			2561424	1					
ANR	2561498	CompoundStatement		10:29:353:353	2561424	1					
ANR	2561499	ExpressionStatement	tree = NULL	637:3:15673:15684	2561424	0	True				
ANR	2561500	AssignmentExpression	tree = NULL		2561424	0		=			
ANR	2561501	Identifier	tree		2561424	0					
ANR	2561502	Identifier	NULL		2561424	1					
ANR	2561503	Statement	delete	638:3:15689:15694	2561424	1	True				
ANR	2561504	ExpressionStatement	tree1	638:10:15696:15701	2561424	2	True				
ANR	2561505	Identifier	tree1		2561424	0					
ANR	2561506	Statement	delete	639:3:15706:15711	2561424	3	True				
ANR	2561507	ExpressionStatement	tree2	639:10:15713:15718	2561424	4	True				
ANR	2561508	Identifier	tree2		2561424	0					
ANR	2561509	ExpressionStatement	op = __NO_OP__	640:3:15723:15737	2561424	5	True				
ANR	2561510	AssignmentExpression	op = __NO_OP__		2561424	0		=			
ANR	2561511	Identifier	op		2561424	0					
ANR	2561512	Identifier	__NO_OP__		2561424	1					
ANR	2561513	ReturnStatement	return true ;	641:3:15742:15753	2561424	6	True				
ANR	2561514	Identifier	true		2561424	0					
ANR	2561515	IfStatement	if ( ! tree1 && ! tree2 )		2561424	3					
ANR	2561516	Condition	! tree1 && ! tree2	645:5:15770:15785	2561424	0	True				
ANR	2561517	AndExpression	! tree1 && ! tree2		2561424	0		&&			
ANR	2561518	UnaryOperationExpression	! tree1		2561424	0					
ANR	2561519	UnaryOperator	!		2561424	0					
ANR	2561520	Identifier	tree1		2561424	1					
ANR	2561521	UnaryOperationExpression	! tree2		2561424	1					
ANR	2561522	UnaryOperator	!		2561424	0					
ANR	2561523	Identifier	tree2		2561424	1					
ANR	2561524	CompoundStatement		19:24:474:474	2561424	1					
ANR	2561525	ExpressionStatement	"_doOperation ( op , val1 , val2 , dummy , true , true , false , val )"	647:2:15833:15894	2561424	0	True				
ANR	2561526	CallExpression	"_doOperation ( op , val1 , val2 , dummy , true , true , false , val )"		2561424	0					
ANR	2561527	Callee	_doOperation		2561424	0					
ANR	2561528	Identifier	_doOperation		2561424	0					
ANR	2561529	ArgumentList	op		2561424	1					
ANR	2561530	Argument	op		2561424	0					
ANR	2561531	Identifier	op		2561424	0					
ANR	2561532	Argument	val1		2561424	1					
ANR	2561533	Identifier	val1		2561424	0					
ANR	2561534	Argument	val2		2561424	2					
ANR	2561535	Identifier	val2		2561424	0					
ANR	2561536	Argument	dummy		2561424	3					
ANR	2561537	Identifier	dummy		2561424	0					
ANR	2561538	Argument	true		2561424	4					
ANR	2561539	Identifier	true		2561424	0					
ANR	2561540	Argument	true		2561424	5					
ANR	2561541	Identifier	true		2561424	0					
ANR	2561542	Argument	false		2561424	6					
ANR	2561543	Identifier	false		2561424	0					
ANR	2561544	Argument	val		2561424	7					
ANR	2561545	Identifier	val		2561424	0					
ANR	2561546	ExpressionStatement	tree = NULL	648:2:15898:15909	2561424	1	True				
ANR	2561547	AssignmentExpression	tree = NULL		2561424	0		=			
ANR	2561548	Identifier	tree		2561424	0					
ANR	2561549	Identifier	NULL		2561424	1					
ANR	2561550	ExpressionStatement	op = __NO_OP__	649:2:15913:15927	2561424	2	True				
ANR	2561551	AssignmentExpression	op = __NO_OP__		2561424	0		=			
ANR	2561552	Identifier	op		2561424	0					
ANR	2561553	Identifier	__NO_OP__		2561424	1					
ANR	2561554	ReturnStatement	return true ;	650:2:15931:15942	2561424	3	True				
ANR	2561555	Identifier	true		2561424	0					
ANR	2561556	ElseStatement	else		2561424	0					
ANR	2561557	IfStatement	if ( ! tree1 && ( tree2 && op2 == __NO_OP__ ) )		2561424	0					
ANR	2561558	Condition	! tree1 && ( tree2 && op2 == __NO_OP__ )	651:12:15956:15993	2561424	0	True				
ANR	2561559	AndExpression	! tree1 && ( tree2 && op2 == __NO_OP__ )		2561424	0		&&			
ANR	2561560	UnaryOperationExpression	! tree1		2561424	0					
ANR	2561561	UnaryOperator	!		2561424	0					
ANR	2561562	Identifier	tree1		2561424	1					
ANR	2561563	AndExpression	tree2 && op2 == __NO_OP__		2561424	1		&&			
ANR	2561564	Identifier	tree2		2561424	0					
ANR	2561565	EqualityExpression	op2 == __NO_OP__		2561424	1		==			
ANR	2561566	Identifier	op2		2561424	0					
ANR	2561567	Identifier	__NO_OP__		2561424	1					
ANR	2561568	CompoundStatement		25:53:682:682	2561424	1					
ANR	2561569	ExpressionStatement	tree = tree2	653:2:16045:16057	2561424	0	True				
ANR	2561570	AssignmentExpression	tree = tree2		2561424	0		=			
ANR	2561571	Identifier	tree		2561424	0					
ANR	2561572	Identifier	tree2		2561424	1					
ANR	2561573	ExpressionStatement	val . CopyFrom ( val1 )	654:2:16061:16081	2561424	1	True				
ANR	2561574	CallExpression	val . CopyFrom ( val1 )		2561424	0					
ANR	2561575	Callee	val . CopyFrom		2561424	0					
ANR	2561576	MemberAccess	val . CopyFrom		2561424	0					
ANR	2561577	Identifier	val		2561424	0					
ANR	2561578	Identifier	CopyFrom		2561424	1					
ANR	2561579	ArgumentList	val1		2561424	1					
ANR	2561580	Argument	val1		2561424	0					
ANR	2561581	Identifier	val1		2561424	0					
ANR	2561582	ReturnStatement	return true ;	655:2:16085:16096	2561424	2	True				
ANR	2561583	Identifier	true		2561424	0					
ANR	2561584	ElseStatement	else		2561424	0					
ANR	2561585	IfStatement	if ( ! tree2 && ( tree1 && op1 == __NO_OP__ ) )		2561424	0					
ANR	2561586	Condition	! tree2 && ( tree1 && op1 == __NO_OP__ )	656:12:16110:16147	2561424	0	True				
ANR	2561587	AndExpression	! tree2 && ( tree1 && op1 == __NO_OP__ )		2561424	0		&&			
ANR	2561588	UnaryOperationExpression	! tree2		2561424	0					
ANR	2561589	UnaryOperator	!		2561424	0					
ANR	2561590	Identifier	tree2		2561424	1					
ANR	2561591	AndExpression	tree1 && op1 == __NO_OP__		2561424	1		&&			
ANR	2561592	Identifier	tree1		2561424	0					
ANR	2561593	EqualityExpression	op1 == __NO_OP__		2561424	1		==			
ANR	2561594	Identifier	op1		2561424	0					
ANR	2561595	Identifier	__NO_OP__		2561424	1					
ANR	2561596	CompoundStatement		30:53:836:836	2561424	1					
ANR	2561597	ExpressionStatement	tree = tree1	658:2:16199:16211	2561424	0	True				
ANR	2561598	AssignmentExpression	tree = tree1		2561424	0		=			
ANR	2561599	Identifier	tree		2561424	0					
ANR	2561600	Identifier	tree1		2561424	1					
ANR	2561601	ExpressionStatement	val . CopyFrom ( val2 )	659:2:16215:16235	2561424	1	True				
ANR	2561602	CallExpression	val . CopyFrom ( val2 )		2561424	0					
ANR	2561603	Callee	val . CopyFrom		2561424	0					
ANR	2561604	MemberAccess	val . CopyFrom		2561424	0					
ANR	2561605	Identifier	val		2561424	0					
ANR	2561606	Identifier	CopyFrom		2561424	1					
ANR	2561607	ArgumentList	val2		2561424	1					
ANR	2561608	Argument	val2		2561424	0					
ANR	2561609	Identifier	val2		2561424	0					
ANR	2561610	ReturnStatement	return true ;	660:2:16239:16250	2561424	2	True				
ANR	2561611	Identifier	true		2561424	0					
ANR	2561612	ElseStatement	else		2561424	0					
ANR	2561613	IfStatement	if ( ( tree1 && op1 == __NO_OP__ ) && ( tree2 && op2 == __NO_OP__ ) )		2561424	0					
ANR	2561614	Condition	( tree1 && op1 == __NO_OP__ ) && ( tree2 && op2 == __NO_OP__ )	661:12:16264:16325	2561424	0	True				
ANR	2561615	AndExpression	( tree1 && op1 == __NO_OP__ ) && ( tree2 && op2 == __NO_OP__ )		2561424	0		&&			
ANR	2561616	AndExpression	tree1 && op1 == __NO_OP__		2561424	0		&&			
ANR	2561617	Identifier	tree1		2561424	0					
ANR	2561618	EqualityExpression	op1 == __NO_OP__		2561424	1		==			
ANR	2561619	Identifier	op1		2561424	0					
ANR	2561620	Identifier	__NO_OP__		2561424	1					
ANR	2561621	AndExpression	tree2 && op2 == __NO_OP__		2561424	1		&&			
ANR	2561622	Identifier	tree2		2561424	0					
ANR	2561623	EqualityExpression	op2 == __NO_OP__		2561424	1		==			
ANR	2561624	Identifier	op2		2561424	0					
ANR	2561625	Identifier	__NO_OP__		2561424	1					
ANR	2561626	CompoundStatement		35:76:1013:1013	2561424	1					
ANR	2561627	IfStatement	"if ( ! ( newOp = MakeOperation ( op , tree1 , tree2 ) ) )"		2561424	0					
ANR	2561628	Condition	"! ( newOp = MakeOperation ( op , tree1 , tree2 ) )"	663:6:16375:16419	2561424	0	True				
ANR	2561629	UnaryOperationExpression	"! ( newOp = MakeOperation ( op , tree1 , tree2 ) )"		2561424	0					
ANR	2561630	UnaryOperator	!		2561424	0					
ANR	2561631	AssignmentExpression	"newOp = MakeOperation ( op , tree1 , tree2 )"		2561424	1		=			
ANR	2561632	Identifier	newOp		2561424	0					
ANR	2561633	CallExpression	"MakeOperation ( op , tree1 , tree2 )"		2561424	1					
ANR	2561634	Callee	MakeOperation		2561424	0					
ANR	2561635	Identifier	MakeOperation		2561424	0					
ANR	2561636	ArgumentList	op		2561424	1					
ANR	2561637	Argument	op		2561424	0					
ANR	2561638	Identifier	op		2561424	0					
ANR	2561639	Argument	tree1		2561424	1					
ANR	2561640	Identifier	tree1		2561424	0					
ANR	2561641	Argument	tree2		2561424	2					
ANR	2561642	Identifier	tree2		2561424	0					
ANR	2561643	CompoundStatement		37:54:1108:1108	2561424	1					
ANR	2561644	Statement	delete	664:3:16428:16433	2561424	0	True				
ANR	2561645	ExpressionStatement	tree1	664:10:16435:16440	2561424	1	True				
ANR	2561646	Identifier	tree1		2561424	0					
ANR	2561647	Statement	delete	665:3:16445:16450	2561424	2	True				
ANR	2561648	ExpressionStatement	tree2	665:10:16452:16457	2561424	3	True				
ANR	2561649	Identifier	tree2		2561424	0					
ANR	2561650	ReturnStatement	return false ;	666:3:16462:16474	2561424	4	True				
ANR	2561651	Identifier	false		2561424	0					
ANR	2561652	ExpressionStatement	tree = newOp	668:2:16482:16494	2561424	1	True				
ANR	2561653	AssignmentExpression	tree = newOp		2561424	0		=			
ANR	2561654	Identifier	tree		2561424	0					
ANR	2561655	Identifier	newOp		2561424	1					
ANR	2561656	ExpressionStatement	op = __NO_OP__	669:2:16498:16514	2561424	2	True				
ANR	2561657	AssignmentExpression	op = __NO_OP__		2561424	0		=			
ANR	2561658	Identifier	op		2561424	0					
ANR	2561659	Identifier	__NO_OP__		2561424	1					
ANR	2561660	ReturnStatement	return true ;	670:2:16518:16529	2561424	3	True				
ANR	2561661	Identifier	true		2561424	0					
ANR	2561662	IfStatement	if ( ( op1 != __NO_OP__ || op2 != __NO_OP__ ) && op != op1 && op != op2 )		2561424	4					
ANR	2561663	Condition	( op1 != __NO_OP__ || op2 != __NO_OP__ ) && op != op1 && op != op2	674:5:16589:16654	2561424	0	True				
ANR	2561664	AndExpression	( op1 != __NO_OP__ || op2 != __NO_OP__ ) && op != op1 && op != op2		2561424	0		&&			
ANR	2561665	OrExpression	op1 != __NO_OP__ || op2 != __NO_OP__		2561424	0		||			
ANR	2561666	EqualityExpression	op1 != __NO_OP__		2561424	0		!=			
ANR	2561667	Identifier	op1		2561424	0					
ANR	2561668	Identifier	__NO_OP__		2561424	1					
ANR	2561669	EqualityExpression	op2 != __NO_OP__		2561424	1		!=			
ANR	2561670	Identifier	op2		2561424	0					
ANR	2561671	Identifier	__NO_OP__		2561424	1					
ANR	2561672	AndExpression	op != op1 && op != op2		2561424	1		&&			
ANR	2561673	EqualityExpression	op != op1		2561424	0		!=			
ANR	2561674	Identifier	op		2561424	0					
ANR	2561675	Identifier	op1		2561424	1					
ANR	2561676	EqualityExpression	op != op2		2561424	1		!=			
ANR	2561677	Identifier	op		2561424	0					
ANR	2561678	Identifier	op2		2561424	1					
ANR	2561679	CompoundStatement		51:2:1470:1509	2561424	1					
ANR	2561680	IdentifierDeclStatement	"ExprTree * newOp1 = NULL , * newOp2 = NULL ;"	677:2:16785:16824	2561424	0	True				
ANR	2561681	IdentifierDecl	* newOp1 = NULL		2561424	0					
ANR	2561682	IdentifierDeclType	ExprTree *		2561424	0					
ANR	2561683	Identifier	newOp1		2561424	1					
ANR	2561684	AssignmentExpression	* newOp1 = NULL		2561424	2		=			
ANR	2561685	Identifier	NULL		2561424	0					
ANR	2561686	Identifier	NULL		2561424	1					
ANR	2561687	IdentifierDecl	* newOp2 = NULL		2561424	1					
ANR	2561688	IdentifierDeclType	ExprTree *		2561424	0					
ANR	2561689	Identifier	newOp2		2561424	1					
ANR	2561690	AssignmentExpression	* newOp2 = NULL		2561424	2		=			
ANR	2561691	Identifier	NULL		2561424	0					
ANR	2561692	Identifier	NULL		2561424	1					
ANR	2561693	IfStatement	if ( op1 != __NO_OP__ )		2561424	1					
ANR	2561694	Condition	op1 != __NO_OP__	679:6:16833:16848	2561424	0	True				
ANR	2561695	EqualityExpression	op1 != __NO_OP__		2561424	0		!=			
ANR	2561696	Identifier	op1		2561424	0					
ANR	2561697	Identifier	__NO_OP__		2561424	1					
ANR	2561698	CompoundStatement		53:25:1537:1537	2561424	1					
ANR	2561699	ExpressionStatement	"newOp1 = Operation :: MakeOperation ( ( OpKind ) op1 , val1 , tree1 )"	680:3:16857:16918	2561424	0	True				
ANR	2561700	AssignmentExpression	"newOp1 = Operation :: MakeOperation ( ( OpKind ) op1 , val1 , tree1 )"		2561424	0		=			
ANR	2561701	Identifier	newOp1		2561424	0					
ANR	2561702	CallExpression	"Operation :: MakeOperation ( ( OpKind ) op1 , val1 , tree1 )"		2561424	1					
ANR	2561703	Callee	Operation :: MakeOperation		2561424	0					
ANR	2561704	Identifier	Operation :: MakeOperation		2561424	0					
ANR	2561705	ArgumentList	( OpKind ) op1		2561424	1					
ANR	2561706	Argument	( OpKind ) op1		2561424	0					
ANR	2561707	CastExpression	( OpKind ) op1		2561424	0					
ANR	2561708	CastTarget	OpKind		2561424	0					
ANR	2561709	Identifier	op1		2561424	1					
ANR	2561710	Argument	val1		2561424	1					
ANR	2561711	Identifier	val1		2561424	0					
ANR	2561712	Argument	tree1		2561424	2					
ANR	2561713	Identifier	tree1		2561424	0					
ANR	2561714	ElseStatement	else		2561424	0					
ANR	2561715	IfStatement	if ( tree1 )		2561424	0					
ANR	2561716	Condition	tree1	681:13:16933:16937	2561424	0	True				
ANR	2561717	Identifier	tree1		2561424	0					
ANR	2561718	CompoundStatement		55:21:1626:1626	2561424	1					
ANR	2561719	ExpressionStatement	newOp1 = tree1	682:3:16946:16960	2561424	0	True				
ANR	2561720	AssignmentExpression	newOp1 = tree1		2561424	0		=			
ANR	2561721	Identifier	newOp1		2561424	0					
ANR	2561722	Identifier	tree1		2561424	1					
ANR	2561723	ElseStatement	else		2561424	0					
ANR	2561724	CompoundStatement		57:9:1656:1656	2561424	0					
ANR	2561725	ExpressionStatement	newOp1 = Literal :: MakeLiteral ( val1 )	684:3:16976:17013	2561424	0	True				
ANR	2561726	AssignmentExpression	newOp1 = Literal :: MakeLiteral ( val1 )		2561424	0		=			
ANR	2561727	Identifier	newOp1		2561424	0					
ANR	2561728	CallExpression	Literal :: MakeLiteral ( val1 )		2561424	1					
ANR	2561729	Callee	Literal :: MakeLiteral		2561424	0					
ANR	2561730	Identifier	Literal :: MakeLiteral		2561424	0					
ANR	2561731	ArgumentList	val1		2561424	1					
ANR	2561732	Argument	val1		2561424	0					
ANR	2561733	Identifier	val1		2561424	0					
ANR	2561734	IfStatement	if ( op2 != __NO_OP__ )		2561424	2					
ANR	2561735	Condition	op2 != __NO_OP__	687:6:17028:17043	2561424	0	True				
ANR	2561736	EqualityExpression	op2 != __NO_OP__		2561424	0		!=			
ANR	2561737	Identifier	op2		2561424	0					
ANR	2561738	Identifier	__NO_OP__		2561424	1					
ANR	2561739	CompoundStatement		61:25:1732:1732	2561424	1					
ANR	2561740	ExpressionStatement	"newOp2 = Operation :: MakeOperation ( ( OpKind ) op2 , val2 , tree2 )"	688:3:17052:17113	2561424	0	True				
ANR	2561741	AssignmentExpression	"newOp2 = Operation :: MakeOperation ( ( OpKind ) op2 , val2 , tree2 )"		2561424	0		=			
ANR	2561742	Identifier	newOp2		2561424	0					
ANR	2561743	CallExpression	"Operation :: MakeOperation ( ( OpKind ) op2 , val2 , tree2 )"		2561424	1					
ANR	2561744	Callee	Operation :: MakeOperation		2561424	0					
ANR	2561745	Identifier	Operation :: MakeOperation		2561424	0					
ANR	2561746	ArgumentList	( OpKind ) op2		2561424	1					
ANR	2561747	Argument	( OpKind ) op2		2561424	0					
ANR	2561748	CastExpression	( OpKind ) op2		2561424	0					
ANR	2561749	CastTarget	OpKind		2561424	0					
ANR	2561750	Identifier	op2		2561424	1					
ANR	2561751	Argument	val2		2561424	1					
ANR	2561752	Identifier	val2		2561424	0					
ANR	2561753	Argument	tree2		2561424	2					
ANR	2561754	Identifier	tree2		2561424	0					
ANR	2561755	ElseStatement	else		2561424	0					
ANR	2561756	IfStatement	if ( tree2 )		2561424	0					
ANR	2561757	Condition	tree2	689:13:17128:17132	2561424	0	True				
ANR	2561758	Identifier	tree2		2561424	0					
ANR	2561759	CompoundStatement		63:21:1821:1821	2561424	1					
ANR	2561760	ExpressionStatement	newOp2 = tree2	690:3:17141:17155	2561424	0	True				
ANR	2561761	AssignmentExpression	newOp2 = tree2		2561424	0		=			
ANR	2561762	Identifier	newOp2		2561424	0					
ANR	2561763	Identifier	tree2		2561424	1					
ANR	2561764	ElseStatement	else		2561424	0					
ANR	2561765	CompoundStatement		65:9:1851:1851	2561424	0					
ANR	2561766	ExpressionStatement	newOp2 = Literal :: MakeLiteral ( val2 )	692:3:17171:17208	2561424	0	True				
ANR	2561767	AssignmentExpression	newOp2 = Literal :: MakeLiteral ( val2 )		2561424	0		=			
ANR	2561768	Identifier	newOp2		2561424	0					
ANR	2561769	CallExpression	Literal :: MakeLiteral ( val2 )		2561424	1					
ANR	2561770	Callee	Literal :: MakeLiteral		2561424	0					
ANR	2561771	Identifier	Literal :: MakeLiteral		2561424	0					
ANR	2561772	ArgumentList	val2		2561424	1					
ANR	2561773	Argument	val2		2561424	0					
ANR	2561774	Identifier	val2		2561424	0					
ANR	2561775	IfStatement	if ( ! newOp1 || ! newOp2 )		2561424	3					
ANR	2561776	Condition	! newOp1 || ! newOp2	695:6:17221:17238	2561424	0	True				
ANR	2561777	OrExpression	! newOp1 || ! newOp2		2561424	0		||			
ANR	2561778	UnaryOperationExpression	! newOp1		2561424	0					
ANR	2561779	UnaryOperator	!		2561424	0					
ANR	2561780	Identifier	newOp1		2561424	1					
ANR	2561781	UnaryOperationExpression	! newOp2		2561424	1					
ANR	2561782	UnaryOperator	!		2561424	0					
ANR	2561783	Identifier	newOp2		2561424	1					
ANR	2561784	CompoundStatement		69:27:1927:1927	2561424	1					
ANR	2561785	IfStatement	if ( newOp1 )		2561424	0					
ANR	2561786	Condition	newOp1	696:7:17251:17256	2561424	0	True				
ANR	2561787	Identifier	newOp1		2561424	0					
ANR	2561788	Statement	delete	696:16:17260:17265	2561424	1	True				
ANR	2561789	ExpressionStatement	newOp1	696:23:17267:17273	2561424	1	True				
ANR	2561790	Identifier	newOp1		2561424	0					
ANR	2561791	IfStatement	if ( newOp2 )		2561424	2					
ANR	2561792	Condition	newOp2	697:7:17282:17287	2561424	0	True				
ANR	2561793	Identifier	newOp2		2561424	0					
ANR	2561794	Statement	delete	697:16:17291:17296	2561424	1	True				
ANR	2561795	ExpressionStatement	newOp2	697:23:17298:17304	2561424	3	True				
ANR	2561796	Identifier	newOp2		2561424	0					
ANR	2561797	ExpressionStatement	tree = NULL	698:3:17309:17320	2561424	4	True				
ANR	2561798	AssignmentExpression	tree = NULL		2561424	0		=			
ANR	2561799	Identifier	tree		2561424	0					
ANR	2561800	Identifier	NULL		2561424	1					
ANR	2561801	ExpressionStatement	op = __NO_OP__	698:16:17322:17336	2561424	5	True				
ANR	2561802	AssignmentExpression	op = __NO_OP__		2561424	0		=			
ANR	2561803	Identifier	op		2561424	0					
ANR	2561804	Identifier	__NO_OP__		2561424	1					
ANR	2561805	ReturnStatement	return false ;	699:3:17341:17353	2561424	6	True				
ANR	2561806	Identifier	false		2561424	0					
ANR	2561807	IfStatement	"if ( ! ( newOp = MakeOperation ( op , newOp1 , newOp2 ) ) )"		2561424	4					
ANR	2561808	Condition	"! ( newOp = MakeOperation ( op , newOp1 , newOp2 ) )"	702:6:17366:17413	2561424	0	True				
ANR	2561809	UnaryOperationExpression	"! ( newOp = MakeOperation ( op , newOp1 , newOp2 ) )"		2561424	0					
ANR	2561810	UnaryOperator	!		2561424	0					
ANR	2561811	AssignmentExpression	"newOp = MakeOperation ( op , newOp1 , newOp2 )"		2561424	1		=			
ANR	2561812	Identifier	newOp		2561424	0					
ANR	2561813	CallExpression	"MakeOperation ( op , newOp1 , newOp2 )"		2561424	1					
ANR	2561814	Callee	MakeOperation		2561424	0					
ANR	2561815	Identifier	MakeOperation		2561424	0					
ANR	2561816	ArgumentList	op		2561424	1					
ANR	2561817	Argument	op		2561424	0					
ANR	2561818	Identifier	op		2561424	0					
ANR	2561819	Argument	newOp1		2561424	1					
ANR	2561820	Identifier	newOp1		2561424	0					
ANR	2561821	Argument	newOp2		2561424	2					
ANR	2561822	Identifier	newOp2		2561424	0					
ANR	2561823	CompoundStatement		76:57:2102:2102	2561424	1					
ANR	2561824	Statement	delete	703:3:17422:17427	2561424	0	True				
ANR	2561825	ExpressionStatement	newOp1	703:10:17429:17435	2561424	1	True				
ANR	2561826	Identifier	newOp1		2561424	0					
ANR	2561827	Statement	delete	703:18:17437:17442	2561424	2	True				
ANR	2561828	ExpressionStatement	newOp2	703:25:17444:17450	2561424	3	True				
ANR	2561829	Identifier	newOp2		2561424	0					
ANR	2561830	ExpressionStatement	tree = NULL	704:3:17455:17466	2561424	4	True				
ANR	2561831	AssignmentExpression	tree = NULL		2561424	0		=			
ANR	2561832	Identifier	tree		2561424	0					
ANR	2561833	Identifier	NULL		2561424	1					
ANR	2561834	ExpressionStatement	op = __NO_OP__	704:16:17468:17482	2561424	5	True				
ANR	2561835	AssignmentExpression	op = __NO_OP__		2561424	0		=			
ANR	2561836	Identifier	op		2561424	0					
ANR	2561837	Identifier	__NO_OP__		2561424	1					
ANR	2561838	ReturnStatement	return false ;	705:3:17487:17499	2561424	6	True				
ANR	2561839	Identifier	false		2561424	0					
ANR	2561840	ExpressionStatement	op = __NO_OP__	707:2:17507:17521	2561424	5	True				
ANR	2561841	AssignmentExpression	op = __NO_OP__		2561424	0		=			
ANR	2561842	Identifier	op		2561424	0					
ANR	2561843	Identifier	__NO_OP__		2561424	1					
ANR	2561844	ExpressionStatement	tree = newOp	708:2:17525:17537	2561424	6	True				
ANR	2561845	AssignmentExpression	tree = newOp		2561424	0		=			
ANR	2561846	Identifier	tree		2561424	0					
ANR	2561847	Identifier	newOp		2561424	1					
ANR	2561848	ReturnStatement	return true ;	709:2:17541:17552	2561424	7	True				
ANR	2561849	Identifier	true		2561424	0					
ANR	2561850	IfStatement	if ( op == op1 && op == op2 )		2561424	5					
ANR	2561851	Condition	op == op1 && op == op2	712:5:17563:17584	2561424	0	True				
ANR	2561852	AndExpression	op == op1 && op == op2		2561424	0		&&			
ANR	2561853	EqualityExpression	op == op1		2561424	0		==			
ANR	2561854	Identifier	op		2561424	0					
ANR	2561855	Identifier	op1		2561424	1					
ANR	2561856	EqualityExpression	op == op2		2561424	1		==			
ANR	2561857	Identifier	op		2561424	0					
ANR	2561858	Identifier	op2		2561424	1					
ANR	2561859	CompoundStatement		86:30:2273:2273	2561424	1					
ANR	2561860	IfStatement	"if ( ! ( newOp = MakeOperation ( op , tree1 , tree2 ) ) )"		2561424	0					
ANR	2561861	Condition	"! ( newOp = MakeOperation ( op , tree1 , tree2 ) )"	715:6:17728:17773	2561424	0	True				
ANR	2561862	UnaryOperationExpression	"! ( newOp = MakeOperation ( op , tree1 , tree2 ) )"		2561424	0					
ANR	2561863	UnaryOperator	!		2561424	0					
ANR	2561864	AssignmentExpression	"newOp = MakeOperation ( op , tree1 , tree2 )"		2561424	1		=			
ANR	2561865	Identifier	newOp		2561424	0					
ANR	2561866	CallExpression	"MakeOperation ( op , tree1 , tree2 )"		2561424	1					
ANR	2561867	Callee	MakeOperation		2561424	0					
ANR	2561868	Identifier	MakeOperation		2561424	0					
ANR	2561869	ArgumentList	op		2561424	1					
ANR	2561870	Argument	op		2561424	0					
ANR	2561871	Identifier	op		2561424	0					
ANR	2561872	Argument	tree1		2561424	1					
ANR	2561873	Identifier	tree1		2561424	0					
ANR	2561874	Argument	tree2		2561424	2					
ANR	2561875	Identifier	tree2		2561424	0					
ANR	2561876	CompoundStatement		89:55:2462:2462	2561424	1					
ANR	2561877	Statement	delete	716:3:17782:17787	2561424	0	True				
ANR	2561878	ExpressionStatement	tree1	716:10:17789:17794	2561424	1	True				
ANR	2561879	Identifier	tree1		2561424	0					
ANR	2561880	Statement	delete	717:3:17799:17804	2561424	2	True				
ANR	2561881	ExpressionStatement	tree2	717:10:17806:17811	2561424	3	True				
ANR	2561882	Identifier	tree2		2561424	0					
ANR	2561883	ReturnStatement	return false ;	718:3:17816:17828	2561424	4	True				
ANR	2561884	Identifier	false		2561424	0					
ANR	2561885	ExpressionStatement	"_doOperation ( op , val1 , val2 , dummy , true , true , false , val )"	720:2:17836:17897	2561424	1	True				
ANR	2561886	CallExpression	"_doOperation ( op , val1 , val2 , dummy , true , true , false , val )"		2561424	0					
ANR	2561887	Callee	_doOperation		2561424	0					
ANR	2561888	Identifier	_doOperation		2561424	0					
ANR	2561889	ArgumentList	op		2561424	1					
ANR	2561890	Argument	op		2561424	0					
ANR	2561891	Identifier	op		2561424	0					
ANR	2561892	Argument	val1		2561424	1					
ANR	2561893	Identifier	val1		2561424	0					
ANR	2561894	Argument	val2		2561424	2					
ANR	2561895	Identifier	val2		2561424	0					
ANR	2561896	Argument	dummy		2561424	3					
ANR	2561897	Identifier	dummy		2561424	0					
ANR	2561898	Argument	true		2561424	4					
ANR	2561899	Identifier	true		2561424	0					
ANR	2561900	Argument	true		2561424	5					
ANR	2561901	Identifier	true		2561424	0					
ANR	2561902	Argument	false		2561424	6					
ANR	2561903	Identifier	false		2561424	0					
ANR	2561904	Argument	val		2561424	7					
ANR	2561905	Identifier	val		2561424	0					
ANR	2561906	ExpressionStatement	tree = newOp	721:2:17901:17913	2561424	2	True				
ANR	2561907	AssignmentExpression	tree = newOp		2561424	0		=			
ANR	2561908	Identifier	tree		2561424	0					
ANR	2561909	Identifier	newOp		2561424	1					
ANR	2561910	ReturnStatement	return true ;	722:2:17917:17928	2561424	3	True				
ANR	2561911	Identifier	true		2561424	0					
ANR	2561912	ElseStatement	else		2561424	0					
ANR	2561913	IfStatement	if ( op == op1 )		2561424	0					
ANR	2561914	Condition	op == op1	723:12:17942:17950	2561424	0	True				
ANR	2561915	EqualityExpression	op == op1		2561424	0		==			
ANR	2561916	Identifier	op		2561424	0					
ANR	2561917	Identifier	op1		2561424	1					
ANR	2561918	CompoundStatement		97:24:2639:2639	2561424	1					
ANR	2561919	IfStatement	if ( ! tree2 )		2561424	0					
ANR	2561920	Condition	! tree2	725:6:18007:18012	2561424	0	True				
ANR	2561921	UnaryOperationExpression	! tree2		2561424	0					
ANR	2561922	UnaryOperator	!		2561424	0					
ANR	2561923	Identifier	tree2		2561424	1					
ANR	2561924	CompoundStatement		99:15:2701:2701	2561424	1					
ANR	2561925	ExpressionStatement	"_doOperation ( op , val1 , val2 , dummy , true , true , false , val )"	727:3:18063:18124	2561424	0	True				
ANR	2561926	CallExpression	"_doOperation ( op , val1 , val2 , dummy , true , true , false , val )"		2561424	0					
ANR	2561927	Callee	_doOperation		2561424	0					
ANR	2561928	Identifier	_doOperation		2561424	0					
ANR	2561929	ArgumentList	op		2561424	1					
ANR	2561930	Argument	op		2561424	0					
ANR	2561931	Identifier	op		2561424	0					
ANR	2561932	Argument	val1		2561424	1					
ANR	2561933	Identifier	val1		2561424	0					
ANR	2561934	Argument	val2		2561424	2					
ANR	2561935	Identifier	val2		2561424	0					
ANR	2561936	Argument	dummy		2561424	3					
ANR	2561937	Identifier	dummy		2561424	0					
ANR	2561938	Argument	true		2561424	4					
ANR	2561939	Identifier	true		2561424	0					
ANR	2561940	Argument	true		2561424	5					
ANR	2561941	Identifier	true		2561424	0					
ANR	2561942	Argument	false		2561424	6					
ANR	2561943	Identifier	false		2561424	0					
ANR	2561944	Argument	val		2561424	7					
ANR	2561945	Identifier	val		2561424	0					
ANR	2561946	ExpressionStatement	tree = tree1	728:3:18129:18141	2561424	1	True				
ANR	2561947	AssignmentExpression	tree = tree1		2561424	0		=			
ANR	2561948	Identifier	tree		2561424	0					
ANR	2561949	Identifier	tree1		2561424	1					
ANR	2561950	ReturnStatement	return true ;	729:3:18146:18157	2561424	2	True				
ANR	2561951	Identifier	true		2561424	0					
ANR	2561952	ElseStatement	else		2561424	0					
ANR	2561953	CompoundStatement		106:3:2899:2957	2561424	0					
ANR	2561954	IdentifierDeclStatement	"Operation * local_newOp = MakeOperation ( op , tree1 , tree2 ) ;"	732:3:18214:18272	2561424	0	True				
ANR	2561955	IdentifierDecl	"* local_newOp = MakeOperation ( op , tree1 , tree2 )"		2561424	0					
ANR	2561956	IdentifierDeclType	Operation *		2561424	0					
ANR	2561957	Identifier	local_newOp		2561424	1					
ANR	2561958	AssignmentExpression	"* local_newOp = MakeOperation ( op , tree1 , tree2 )"		2561424	2		=			
ANR	2561959	Identifier	local_newOp		2561424	0					
ANR	2561960	CallExpression	"MakeOperation ( op , tree1 , tree2 )"		2561424	1					
ANR	2561961	Callee	MakeOperation		2561424	0					
ANR	2561962	Identifier	MakeOperation		2561424	0					
ANR	2561963	ArgumentList	op		2561424	1					
ANR	2561964	Argument	op		2561424	0					
ANR	2561965	Identifier	op		2561424	0					
ANR	2561966	Argument	tree1		2561424	1					
ANR	2561967	Identifier	tree1		2561424	0					
ANR	2561968	Argument	tree2		2561424	2					
ANR	2561969	Identifier	tree2		2561424	0					
ANR	2561970	IfStatement	if ( ! local_newOp )		2561424	1					
ANR	2561971	Condition	! local_newOp	733:7:18281:18292	2561424	0	True				
ANR	2561972	UnaryOperationExpression	! local_newOp		2561424	0					
ANR	2561973	UnaryOperator	!		2561424	0					
ANR	2561974	Identifier	local_newOp		2561424	1					
ANR	2561975	CompoundStatement		107:22:2981:2981	2561424	1					
ANR	2561976	Statement	delete	734:4:18302:18307	2561424	0	True				
ANR	2561977	ExpressionStatement	tree1	734:11:18309:18314	2561424	1	True				
ANR	2561978	Identifier	tree1		2561424	0					
ANR	2561979	Statement	delete	735:4:18320:18325	2561424	2	True				
ANR	2561980	ExpressionStatement	tree2	735:11:18327:18332	2561424	3	True				
ANR	2561981	Identifier	tree2		2561424	0					
ANR	2561982	ExpressionStatement	tree = NULL	736:4:18338:18349	2561424	4	True				
ANR	2561983	AssignmentExpression	tree = NULL		2561424	0		=			
ANR	2561984	Identifier	tree		2561424	0					
ANR	2561985	Identifier	NULL		2561424	1					
ANR	2561986	ExpressionStatement	op = __NO_OP__	736:17:18351:18365	2561424	5	True				
ANR	2561987	AssignmentExpression	op = __NO_OP__		2561424	0		=			
ANR	2561988	Identifier	op		2561424	0					
ANR	2561989	Identifier	__NO_OP__		2561424	1					
ANR	2561990	ReturnStatement	return false ;	737:4:18372:18384	2561424	6	True				
ANR	2561991	Identifier	false		2561424	0					
ANR	2561992	ExpressionStatement	val . CopyFrom ( val1 )	739:3:18394:18414	2561424	2	True				
ANR	2561993	CallExpression	val . CopyFrom ( val1 )		2561424	0					
ANR	2561994	Callee	val . CopyFrom		2561424	0					
ANR	2561995	MemberAccess	val . CopyFrom		2561424	0					
ANR	2561996	Identifier	val		2561424	0					
ANR	2561997	Identifier	CopyFrom		2561424	1					
ANR	2561998	ArgumentList	val1		2561424	1					
ANR	2561999	Argument	val1		2561424	0					
ANR	2562000	Identifier	val1		2561424	0					
ANR	2562001	ExpressionStatement	tree = local_newOp	740:3:18419:18437	2561424	3	True				
ANR	2562002	AssignmentExpression	tree = local_newOp		2561424	0		=			
ANR	2562003	Identifier	tree		2561424	0					
ANR	2562004	Identifier	local_newOp		2561424	1					
ANR	2562005	ReturnStatement	return true ;	741:3:18459:18470	2561424	4	True				
ANR	2562006	Identifier	true		2561424	0					
ANR	2562007	ElseStatement	else		2561424	0					
ANR	2562008	IfStatement	if ( op == op2 )		2561424	0					
ANR	2562009	Condition	op == op2	743:12:18488:18496	2561424	0	True				
ANR	2562010	EqualityExpression	op == op2		2561424	0		==			
ANR	2562011	Identifier	op		2561424	0					
ANR	2562012	Identifier	op2		2561424	1					
ANR	2562013	CompoundStatement		117:24:3185:3185	2561424	1					
ANR	2562014	IfStatement	if ( ! tree1 )		2561424	0					
ANR	2562015	Condition	! tree1	745:6:18554:18559	2561424	0	True				
ANR	2562016	UnaryOperationExpression	! tree1		2561424	0					
ANR	2562017	UnaryOperator	!		2561424	0					
ANR	2562018	Identifier	tree1		2561424	1					
ANR	2562019	CompoundStatement		119:15:3248:3248	2561424	1					
ANR	2562020	ExpressionStatement	"_doOperation ( op , val1 , val2 , dummy , true , true , false , val )"	747:3:18609:18670	2561424	0	True				
ANR	2562021	CallExpression	"_doOperation ( op , val1 , val2 , dummy , true , true , false , val )"		2561424	0					
ANR	2562022	Callee	_doOperation		2561424	0					
ANR	2562023	Identifier	_doOperation		2561424	0					
ANR	2562024	ArgumentList	op		2561424	1					
ANR	2562025	Argument	op		2561424	0					
ANR	2562026	Identifier	op		2561424	0					
ANR	2562027	Argument	val1		2561424	1					
ANR	2562028	Identifier	val1		2561424	0					
ANR	2562029	Argument	val2		2561424	2					
ANR	2562030	Identifier	val2		2561424	0					
ANR	2562031	Argument	dummy		2561424	3					
ANR	2562032	Identifier	dummy		2561424	0					
ANR	2562033	Argument	true		2561424	4					
ANR	2562034	Identifier	true		2561424	0					
ANR	2562035	Argument	true		2561424	5					
ANR	2562036	Identifier	true		2561424	0					
ANR	2562037	Argument	false		2561424	6					
ANR	2562038	Identifier	false		2561424	0					
ANR	2562039	Argument	val		2561424	7					
ANR	2562040	Identifier	val		2561424	0					
ANR	2562041	ExpressionStatement	tree = tree2	748:3:18675:18687	2561424	1	True				
ANR	2562042	AssignmentExpression	tree = tree2		2561424	0		=			
ANR	2562043	Identifier	tree		2561424	0					
ANR	2562044	Identifier	tree2		2561424	1					
ANR	2562045	ReturnStatement	return true ;	749:3:18692:18703	2561424	2	True				
ANR	2562046	Identifier	true		2561424	0					
ANR	2562047	ElseStatement	else		2561424	0					
ANR	2562048	CompoundStatement		126:3:3444:3502	2561424	0					
ANR	2562049	IdentifierDeclStatement	"Operation * local_newOp = MakeOperation ( op , tree1 , tree2 ) ;"	752:3:18759:18817	2561424	0	True				
ANR	2562050	IdentifierDecl	"* local_newOp = MakeOperation ( op , tree1 , tree2 )"		2561424	0					
ANR	2562051	IdentifierDeclType	Operation *		2561424	0					
ANR	2562052	Identifier	local_newOp		2561424	1					
ANR	2562053	AssignmentExpression	"* local_newOp = MakeOperation ( op , tree1 , tree2 )"		2561424	2		=			
ANR	2562054	Identifier	local_newOp		2561424	0					
ANR	2562055	CallExpression	"MakeOperation ( op , tree1 , tree2 )"		2561424	1					
ANR	2562056	Callee	MakeOperation		2561424	0					
ANR	2562057	Identifier	MakeOperation		2561424	0					
ANR	2562058	ArgumentList	op		2561424	1					
ANR	2562059	Argument	op		2561424	0					
ANR	2562060	Identifier	op		2561424	0					
ANR	2562061	Argument	tree1		2561424	1					
ANR	2562062	Identifier	tree1		2561424	0					
ANR	2562063	Argument	tree2		2561424	2					
ANR	2562064	Identifier	tree2		2561424	0					
ANR	2562065	IfStatement	if ( ! local_newOp )		2561424	1					
ANR	2562066	Condition	! local_newOp	753:7:18826:18837	2561424	0	True				
ANR	2562067	UnaryOperationExpression	! local_newOp		2561424	0					
ANR	2562068	UnaryOperator	!		2561424	0					
ANR	2562069	Identifier	local_newOp		2561424	1					
ANR	2562070	CompoundStatement		127:22:3526:3526	2561424	1					
ANR	2562071	Statement	delete	754:4:18847:18852	2561424	0	True				
ANR	2562072	ExpressionStatement	tree1	754:11:18854:18859	2561424	1	True				
ANR	2562073	Identifier	tree1		2561424	0					
ANR	2562074	Statement	delete	755:4:18865:18870	2561424	2	True				
ANR	2562075	ExpressionStatement	tree2	755:11:18872:18877	2561424	3	True				
ANR	2562076	Identifier	tree2		2561424	0					
ANR	2562077	ExpressionStatement	tree = NULL	756:4:18883:18894	2561424	4	True				
ANR	2562078	AssignmentExpression	tree = NULL		2561424	0		=			
ANR	2562079	Identifier	tree		2561424	0					
ANR	2562080	Identifier	NULL		2561424	1					
ANR	2562081	ExpressionStatement	op = __NO_OP__	756:17:18896:18910	2561424	5	True				
ANR	2562082	AssignmentExpression	op = __NO_OP__		2561424	0		=			
ANR	2562083	Identifier	op		2561424	0					
ANR	2562084	Identifier	__NO_OP__		2561424	1					
ANR	2562085	ReturnStatement	return false ;	757:4:18917:18929	2561424	6	True				
ANR	2562086	Identifier	false		2561424	0					
ANR	2562087	ExpressionStatement	tree = local_newOp	759:3:18939:18957	2561424	2	True				
ANR	2562088	AssignmentExpression	tree = local_newOp		2561424	0		=			
ANR	2562089	Identifier	tree		2561424	0					
ANR	2562090	Identifier	local_newOp		2561424	1					
ANR	2562091	ExpressionStatement	val . CopyFrom ( val2 )	760:3:18977:18997	2561424	3	True				
ANR	2562092	CallExpression	val . CopyFrom ( val2 )		2561424	0					
ANR	2562093	Callee	val . CopyFrom		2561424	0					
ANR	2562094	MemberAccess	val . CopyFrom		2561424	0					
ANR	2562095	Identifier	val		2561424	0					
ANR	2562096	Identifier	CopyFrom		2561424	1					
ANR	2562097	ArgumentList	val2		2561424	1					
ANR	2562098	Argument	val2		2561424	0					
ANR	2562099	Identifier	val2		2561424	0					
ANR	2562100	ReturnStatement	return true ;	761:3:19002:19013	2561424	4	True				
ANR	2562101	Identifier	true		2561424	0					
ANR	2562102	ExpressionStatement	"CLASSAD_EXCEPT ( ""Should not reach here"" )"	765:1:19024:19065	2561424	6	True				
ANR	2562103	CallExpression	"CLASSAD_EXCEPT ( ""Should not reach here"" )"		2561424	0					
ANR	2562104	Callee	CLASSAD_EXCEPT		2561424	0					
ANR	2562105	Identifier	CLASSAD_EXCEPT		2561424	0					
ANR	2562106	ArgumentList	"""Should not reach here"""		2561424	1					
ANR	2562107	Argument	"""Should not reach here"""		2561424	0					
ANR	2562108	PrimaryExpression	"""Should not reach here"""		2561424	0					
ANR	2562109	ReturnStatement	return false ;	766:1:19068:19080	2561424	7	True				
ANR	2562110	Identifier	false		2561424	0					
ANR	2562111	ReturnType	bool		2561424	1					
ANR	2562112	Identifier	Operation :: combine		2561424	2					
ANR	2562113	ParameterList	"OpKind & op , Value & val , ExprTree * & tree , int op1 , Value & val1 , ExprTree * tree1 , int op2 , Value & val2 , ExprTree * tree2"		2561424	3					
ANR	2562114	Parameter	OpKind & op	624:9:15182:15191	2561424	0	True				
ANR	2562115	ParameterType	OpKind &		2561424	0					
ANR	2562116	Identifier	op		2561424	1					
ANR	2562117	Parameter	Value & val	624:21:15194:15203	2561424	1	True				
ANR	2562118	ParameterType	Value &		2561424	0					
ANR	2562119	Identifier	val		2561424	1					
ANR	2562120	Parameter	ExprTree * & tree	624:33:15206:15220	2561424	2	True				
ANR	2562121	ParameterType	ExprTree * &		2561424	0					
ANR	2562122	Identifier	tree		2561424	1					
ANR	2562123	Parameter	int op1	625:3:15226:15232	2561424	3	True				
ANR	2562124	ParameterType	int		2561424	0					
ANR	2562125	Identifier	op1		2561424	1					
ANR	2562126	Parameter	Value & val1	625:12:15235:15245	2561424	4	True				
ANR	2562127	ParameterType	Value &		2561424	0					
ANR	2562128	Identifier	val1		2561424	1					
ANR	2562129	Parameter	ExprTree * tree1	625:25:15248:15262	2561424	5	True				
ANR	2562130	ParameterType	ExprTree *		2561424	0					
ANR	2562131	Identifier	tree1		2561424	1					
ANR	2562132	Parameter	int op2	626:3:15268:15274	2561424	6	True				
ANR	2562133	ParameterType	int		2561424	0					
ANR	2562134	Identifier	op2		2561424	1					
ANR	2562135	Parameter	Value & val2	626:12:15277:15287	2561424	7	True				
ANR	2562136	ParameterType	Value &		2561424	0					
ANR	2562137	Identifier	val2		2561424	1					
ANR	2562138	Parameter	ExprTree * tree2	626:25:15290:15304	2561424	8	True				
ANR	2562139	ParameterType	ExprTree *		2561424	0					
ANR	2562140	Identifier	tree2		2561424	1					
ANR	2562141	CFGEntryNode	ENTRY		2561424		True				
ANR	2562142	CFGExitNode	EXIT		2561424		True				
ANR	2562143	Symbol	val		2561424						
ANR	2562144	Symbol	op		2561424						
ANR	2562145	Symbol	Literal :: MakeLiteral		2561424						
ANR	2562146	Symbol	NULL		2561424						
ANR	2562147	Symbol	LOGICAL_AND_OP		2561424						
ANR	2562148	Symbol	LOGICAL_OR_OP		2561424						
ANR	2562149	Symbol	val2		2561424						
ANR	2562150	Symbol	val1		2561424						
ANR	2562151	Symbol	tree		2561424						
ANR	2562152	Symbol	false		2561424						
ANR	2562153	Symbol	newOp2		2561424						
ANR	2562154	Symbol	tree1		2561424						
ANR	2562155	Symbol	newOp1		2561424						
ANR	2562156	Symbol	tree2		2561424						
ANR	2562157	Symbol	MakeOperation		2561424						
ANR	2562158	Symbol	Operation :: MakeOperation		2561424						
ANR	2562159	Symbol	val . IsBooleanValue		2561424						
ANR	2562160	Symbol	op2		2561424						
ANR	2562161	Symbol	dummy		2561424						
ANR	2562162	Symbol	op1		2561424						
ANR	2562163	Symbol	__NO_OP__		2561424						
ANR	2562164	Symbol	true		2561424						
ANR	2562165	Symbol	local_newOp		2561424						
ANR	2562166	Symbol	newOp		2561424						
ANR	2562167	Function	Operation :: doComparison	771:0:19089:22032							
ANR	2562168	FunctionDef	"Operation :: doComparison (OpKind op , Value & v1 , Value & v2 , Value & result)"		2562167	0					
ANR	2562169	CompoundStatement		773:0:19167:22032	2562167	0					
ANR	2562170	IdentifierDeclStatement	"Value :: ValueType vt1 , vt2 , coerceResult ;"	774:1:19170:19210	2562167	0	True				
ANR	2562171	IdentifierDecl	vt1		2562167	0					
ANR	2562172	IdentifierDeclType	Value :: ValueType		2562167	0					
ANR	2562173	Identifier	vt1		2562167	1					
ANR	2562174	IdentifierDecl	vt2		2562167	1					
ANR	2562175	IdentifierDeclType	Value :: ValueType		2562167	0					
ANR	2562176	Identifier	vt2		2562167	1					
ANR	2562177	IdentifierDecl	coerceResult		2562167	2					
ANR	2562178	IdentifierDeclType	Value :: ValueType		2562167	0					
ANR	2562179	Identifier	coerceResult		2562167	1					
ANR	2562180	IdentifierDeclStatement	bool exact = false ;	775:1:19213:19232	2562167	1	True				
ANR	2562181	IdentifierDecl	exact = false		2562167	0					
ANR	2562182	IdentifierDeclType	bool		2562167	0					
ANR	2562183	Identifier	exact		2562167	1					
ANR	2562184	AssignmentExpression	exact = false		2562167	2		=			
ANR	2562185	Identifier	false		2562167	0					
ANR	2562186	Identifier	false		2562167	1					
ANR	2562187	ExpressionStatement	"coerceResult = coerceToNumber ( v1 , v2 )"	778:1:19307:19344	2562167	2	True				
ANR	2562188	AssignmentExpression	"coerceResult = coerceToNumber ( v1 , v2 )"		2562167	0		=			
ANR	2562189	Identifier	coerceResult		2562167	0					
ANR	2562190	CallExpression	"coerceToNumber ( v1 , v2 )"		2562167	1					
ANR	2562191	Callee	coerceToNumber		2562167	0					
ANR	2562192	Identifier	coerceToNumber		2562167	0					
ANR	2562193	ArgumentList	v1		2562167	1					
ANR	2562194	Argument	v1		2562167	0					
ANR	2562195	Identifier	v1		2562167	0					
ANR	2562196	Argument	v2		2562167	1					
ANR	2562197	Identifier	v2		2562167	0					
ANR	2562198	ExpressionStatement	vt1 = v1 . GetType ( )	779:1:19347:19365	2562167	3	True				
ANR	2562199	AssignmentExpression	vt1 = v1 . GetType ( )		2562167	0		=			
ANR	2562200	Identifier	vt1		2562167	0					
ANR	2562201	CallExpression	v1 . GetType ( )		2562167	1					
ANR	2562202	Callee	v1 . GetType		2562167	0					
ANR	2562203	MemberAccess	v1 . GetType		2562167	0					
ANR	2562204	Identifier	v1		2562167	0					
ANR	2562205	Identifier	GetType		2562167	1					
ANR	2562206	ArgumentList			2562167	1					
ANR	2562207	ExpressionStatement	vt2 = v2 . GetType ( )	780:1:19368:19386	2562167	4	True				
ANR	2562208	AssignmentExpression	vt2 = v2 . GetType ( )		2562167	0		=			
ANR	2562209	Identifier	vt2		2562167	0					
ANR	2562210	CallExpression	v2 . GetType ( )		2562167	1					
ANR	2562211	Callee	v2 . GetType		2562167	0					
ANR	2562212	MemberAccess	v2 . GetType		2562167	0					
ANR	2562213	Identifier	v2		2562167	0					
ANR	2562214	Identifier	GetType		2562167	1					
ANR	2562215	ArgumentList			2562167	1					
ANR	2562216	IfStatement	if ( op == META_EQUAL_OP )		2562167	5					
ANR	2562217	Condition	op == META_EQUAL_OP	783:5:19463:19481	2562167	0	True				
ANR	2562218	EqualityExpression	op == META_EQUAL_OP		2562167	0		==			
ANR	2562219	Identifier	op		2562167	0					
ANR	2562220	Identifier	META_EQUAL_OP		2562167	1					
ANR	2562221	CompoundStatement		11:26:316:316	2562167	1					
ANR	2562222	IfStatement	if ( vt1 != vt2 )		2562167	0					
ANR	2562223	Condition	vt1 != vt2	784:6:19492:19501	2562167	0	True				
ANR	2562224	EqualityExpression	vt1 != vt2		2562167	0		!=			
ANR	2562225	Identifier	vt1		2562167	0					
ANR	2562226	Identifier	vt2		2562167	1					
ANR	2562227	CompoundStatement		12:18:336:336	2562167	1					
ANR	2562228	ExpressionStatement	result . SetBooleanValue ( false )	785:3:19509:19540	2562167	0	True				
ANR	2562229	CallExpression	result . SetBooleanValue ( false )		2562167	0					
ANR	2562230	Callee	result . SetBooleanValue		2562167	0					
ANR	2562231	MemberAccess	result . SetBooleanValue		2562167	0					
ANR	2562232	Identifier	result		2562167	0					
ANR	2562233	Identifier	SetBooleanValue		2562167	1					
ANR	2562234	ArgumentList	false		2562167	1					
ANR	2562235	Argument	false		2562167	0					
ANR	2562236	Identifier	false		2562167	0					
ANR	2562237	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	786:3:19545:19576	2562167	1	True				
ANR	2562238	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2562167	0		|			
ANR	2562239	Identifier	SIG_CHLD1		2562167	0					
ANR	2562240	Identifier	SIG_CHLD2		2562167	1					
ANR	2562241	IfStatement	if ( vt1 == Value :: UNDEFINED_VALUE || vt1 == Value :: ERROR_VALUE )		2562167	1					
ANR	2562242	Condition	vt1 == Value :: UNDEFINED_VALUE || vt1 == Value :: ERROR_VALUE	790:6:19615:19672	2562167	0	True				
ANR	2562243	OrExpression	vt1 == Value :: UNDEFINED_VALUE || vt1 == Value :: ERROR_VALUE		2562167	0		||			
ANR	2562244	EqualityExpression	vt1 == Value :: UNDEFINED_VALUE		2562167	0		==			
ANR	2562245	Identifier	vt1		2562167	0					
ANR	2562246	Identifier	Value :: UNDEFINED_VALUE		2562167	1					
ANR	2562247	EqualityExpression	vt1 == Value :: ERROR_VALUE		2562167	1		==			
ANR	2562248	Identifier	vt1		2562167	0					
ANR	2562249	Identifier	Value :: ERROR_VALUE		2562167	1					
ANR	2562250	CompoundStatement		18:66:507:507	2562167	1					
ANR	2562251	ExpressionStatement	result . SetBooleanValue ( true )	791:3:19680:19710	2562167	0	True				
ANR	2562252	CallExpression	result . SetBooleanValue ( true )		2562167	0					
ANR	2562253	Callee	result . SetBooleanValue		2562167	0					
ANR	2562254	MemberAccess	result . SetBooleanValue		2562167	0					
ANR	2562255	Identifier	result		2562167	0					
ANR	2562256	Identifier	SetBooleanValue		2562167	1					
ANR	2562257	ArgumentList	true		2562167	1					
ANR	2562258	Argument	true		2562167	0					
ANR	2562259	Identifier	true		2562167	0					
ANR	2562260	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	792:3:19715:19746	2562167	1	True				
ANR	2562261	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2562167	0		|			
ANR	2562262	Identifier	SIG_CHLD1		2562167	0					
ANR	2562263	Identifier	SIG_CHLD2		2562167	1					
ANR	2562264	ExpressionStatement	exact = true	796:2:19818:19830	2562167	2	True				
ANR	2562265	AssignmentExpression	exact = true		2562167	0		=			
ANR	2562266	Identifier	exact		2562167	0					
ANR	2562267	Identifier	true		2562167	1					
ANR	2562268	ExpressionStatement	op = EQUAL_OP	797:2:19834:19847	2562167	3	True				
ANR	2562269	AssignmentExpression	op = EQUAL_OP		2562167	0		=			
ANR	2562270	Identifier	op		2562167	0					
ANR	2562271	Identifier	EQUAL_OP		2562167	1					
ANR	2562272	IfStatement	if ( op == META_NOT_EQUAL_OP )		2562167	6					
ANR	2562273	Condition	op == META_NOT_EQUAL_OP	800:5:19906:19928	2562167	0	True				
ANR	2562274	EqualityExpression	op == META_NOT_EQUAL_OP		2562167	0		==			
ANR	2562275	Identifier	op		2562167	0					
ANR	2562276	Identifier	META_NOT_EQUAL_OP		2562167	1					
ANR	2562277	CompoundStatement		28:30:763:763	2562167	1					
ANR	2562278	IfStatement	if ( vt1 != vt2 )		2562167	0					
ANR	2562279	Condition	vt1 != vt2	801:6:19939:19948	2562167	0	True				
ANR	2562280	EqualityExpression	vt1 != vt2		2562167	0		!=			
ANR	2562281	Identifier	vt1		2562167	0					
ANR	2562282	Identifier	vt2		2562167	1					
ANR	2562283	CompoundStatement		29:18:783:783	2562167	1					
ANR	2562284	ExpressionStatement	result . SetBooleanValue ( true )	802:3:19956:19986	2562167	0	True				
ANR	2562285	CallExpression	result . SetBooleanValue ( true )		2562167	0					
ANR	2562286	Callee	result . SetBooleanValue		2562167	0					
ANR	2562287	MemberAccess	result . SetBooleanValue		2562167	0					
ANR	2562288	Identifier	result		2562167	0					
ANR	2562289	Identifier	SetBooleanValue		2562167	1					
ANR	2562290	ArgumentList	true		2562167	1					
ANR	2562291	Argument	true		2562167	0					
ANR	2562292	Identifier	true		2562167	0					
ANR	2562293	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	803:3:19991:20022	2562167	1	True				
ANR	2562294	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2562167	0		|			
ANR	2562295	Identifier	SIG_CHLD1		2562167	0					
ANR	2562296	Identifier	SIG_CHLD2		2562167	1					
ANR	2562297	IfStatement	if ( vt1 == Value :: UNDEFINED_VALUE || vt1 == Value :: ERROR_VALUE || vt2 == Value :: UNDEFINED_VALUE || vt2 == Value :: ERROR_VALUE )		2562167	1					
ANR	2562298	Condition	vt1 == Value :: UNDEFINED_VALUE || vt1 == Value :: ERROR_VALUE || vt2 == Value :: UNDEFINED_VALUE || vt2 == Value :: ERROR_VALUE	807:6:20059:20181	2562167	0	True				
ANR	2562299	OrExpression	vt1 == Value :: UNDEFINED_VALUE || vt1 == Value :: ERROR_VALUE || vt2 == Value :: UNDEFINED_VALUE || vt2 == Value :: ERROR_VALUE		2562167	0		||			
ANR	2562300	EqualityExpression	vt1 == Value :: UNDEFINED_VALUE		2562167	0		==			
ANR	2562301	Identifier	vt1		2562167	0					
ANR	2562302	Identifier	Value :: UNDEFINED_VALUE		2562167	1					
ANR	2562303	OrExpression	vt1 == Value :: ERROR_VALUE || vt2 == Value :: UNDEFINED_VALUE || vt2 == Value :: ERROR_VALUE		2562167	1		||			
ANR	2562304	EqualityExpression	vt1 == Value :: ERROR_VALUE		2562167	0		==			
ANR	2562305	Identifier	vt1		2562167	0					
ANR	2562306	Identifier	Value :: ERROR_VALUE		2562167	1					
ANR	2562307	OrExpression	vt2 == Value :: UNDEFINED_VALUE || vt2 == Value :: ERROR_VALUE		2562167	1		||			
ANR	2562308	EqualityExpression	vt2 == Value :: UNDEFINED_VALUE		2562167	0		==			
ANR	2562309	Identifier	vt2		2562167	0					
ANR	2562310	Identifier	Value :: UNDEFINED_VALUE		2562167	1					
ANR	2562311	EqualityExpression	vt2 == Value :: ERROR_VALUE		2562167	1		==			
ANR	2562312	Identifier	vt2		2562167	0					
ANR	2562313	Identifier	Value :: ERROR_VALUE		2562167	1					
ANR	2562314	CompoundStatement		36:63:1016:1016	2562167	1					
ANR	2562315	ExpressionStatement	result . SetBooleanValue ( false )	809:3:20189:20220	2562167	0	True				
ANR	2562316	CallExpression	result . SetBooleanValue ( false )		2562167	0					
ANR	2562317	Callee	result . SetBooleanValue		2562167	0					
ANR	2562318	MemberAccess	result . SetBooleanValue		2562167	0					
ANR	2562319	Identifier	result		2562167	0					
ANR	2562320	Identifier	SetBooleanValue		2562167	1					
ANR	2562321	ArgumentList	false		2562167	1					
ANR	2562322	Argument	false		2562167	0					
ANR	2562323	Identifier	false		2562167	0					
ANR	2562324	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	810:3:20225:20256	2562167	1	True				
ANR	2562325	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2562167	0		|			
ANR	2562326	Identifier	SIG_CHLD1		2562167	0					
ANR	2562327	Identifier	SIG_CHLD2		2562167	1					
ANR	2562328	ExpressionStatement	exact = true	814:2:20332:20344	2562167	2	True				
ANR	2562329	AssignmentExpression	exact = true		2562167	0		=			
ANR	2562330	Identifier	exact		2562167	0					
ANR	2562331	Identifier	true		2562167	1					
ANR	2562332	ExpressionStatement	op = NOT_EQUAL_OP	815:2:20348:20365	2562167	3	True				
ANR	2562333	AssignmentExpression	op = NOT_EQUAL_OP		2562167	0		=			
ANR	2562334	Identifier	op		2562167	0					
ANR	2562335	Identifier	NOT_EQUAL_OP		2562167	1					
ANR	2562336	SwitchStatement	switch ( coerceResult )		2562167	7					
ANR	2562337	Condition	coerceResult	818:9:20380:20391	2562167	0	True				
ANR	2562338	Identifier	coerceResult		2562167	0					
ANR	2562339	CompoundStatement		46:23:1226:1226	2562167	1					
ANR	2562340	Label	case Value :: STRING_VALUE :	820:2:20438:20462	2562167	0	True				
ANR	2562341	Identifier	Value :: STRING_VALUE		2562167	0					
ANR	2562342	IfStatement	if ( vt1 != Value :: STRING_VALUE || vt2 != Value :: STRING_VALUE )		2562167	1					
ANR	2562343	Condition	vt1 != Value :: STRING_VALUE || vt2 != Value :: STRING_VALUE	822:7:20503:20558	2562167	0	True				
ANR	2562344	OrExpression	vt1 != Value :: STRING_VALUE || vt2 != Value :: STRING_VALUE		2562167	0		||			
ANR	2562345	EqualityExpression	vt1 != Value :: STRING_VALUE		2562167	0		!=			
ANR	2562346	Identifier	vt1		2562167	0					
ANR	2562347	Identifier	Value :: STRING_VALUE		2562167	1					
ANR	2562348	EqualityExpression	vt2 != Value :: STRING_VALUE		2562167	1		!=			
ANR	2562349	Identifier	vt2		2562167	0					
ANR	2562350	Identifier	Value :: STRING_VALUE		2562167	1					
ANR	2562351	CompoundStatement		50:65:1393:1393	2562167	1					
ANR	2562352	ExpressionStatement	result . SetErrorValue ( )	825:4:20656:20678	2562167	0	True				
ANR	2562353	CallExpression	result . SetErrorValue ( )		2562167	0					
ANR	2562354	Callee	result . SetErrorValue		2562167	0					
ANR	2562355	MemberAccess	result . SetErrorValue		2562167	0					
ANR	2562356	Identifier	result		2562167	0					
ANR	2562357	Identifier	SetErrorValue		2562167	1					
ANR	2562358	ArgumentList			2562167	1					
ANR	2562359	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	826:4:20684:20715	2562167	1	True				
ANR	2562360	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2562167	0		|			
ANR	2562361	Identifier	SIG_CHLD1		2562167	0					
ANR	2562362	Identifier	SIG_CHLD2		2562167	1					
ANR	2562363	ExpressionStatement	"compareStrings ( op , v1 , v2 , result , exact )"	828:3:20725:20767	2562167	2	True				
ANR	2562364	CallExpression	"compareStrings ( op , v1 , v2 , result , exact )"		2562167	0					
ANR	2562365	Callee	compareStrings		2562167	0					
ANR	2562366	Identifier	compareStrings		2562167	0					
ANR	2562367	ArgumentList	op		2562167	1					
ANR	2562368	Argument	op		2562167	0					
ANR	2562369	Identifier	op		2562167	0					
ANR	2562370	Argument	v1		2562167	1					
ANR	2562371	Identifier	v1		2562167	0					
ANR	2562372	Argument	v2		2562167	2					
ANR	2562373	Identifier	v2		2562167	0					
ANR	2562374	Argument	result		2562167	3					
ANR	2562375	Identifier	result		2562167	0					
ANR	2562376	Argument	exact		2562167	4					
ANR	2562377	Identifier	exact		2562167	0					
ANR	2562378	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	829:3:20772:20803	2562167	3	True				
ANR	2562379	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2562167	0		|			
ANR	2562380	Identifier	SIG_CHLD1		2562167	0					
ANR	2562381	Identifier	SIG_CHLD2		2562167	1					
ANR	2562382	Label	case Value :: INTEGER_VALUE :	831:2:20808:20833	2562167	4	True				
ANR	2562383	Identifier	Value :: INTEGER_VALUE		2562167	0					
ANR	2562384	ExpressionStatement	"compareIntegers ( op , v1 , v2 , result )"	832:3:20838:20874	2562167	5	True				
ANR	2562385	CallExpression	"compareIntegers ( op , v1 , v2 , result )"		2562167	0					
ANR	2562386	Callee	compareIntegers		2562167	0					
ANR	2562387	Identifier	compareIntegers		2562167	0					
ANR	2562388	ArgumentList	op		2562167	1					
ANR	2562389	Argument	op		2562167	0					
ANR	2562390	Identifier	op		2562167	0					
ANR	2562391	Argument	v1		2562167	1					
ANR	2562392	Identifier	v1		2562167	0					
ANR	2562393	Argument	v2		2562167	2					
ANR	2562394	Identifier	v2		2562167	0					
ANR	2562395	Argument	result		2562167	3					
ANR	2562396	Identifier	result		2562167	0					
ANR	2562397	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	833:3:20879:20910	2562167	6	True				
ANR	2562398	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2562167	0		|			
ANR	2562399	Identifier	SIG_CHLD1		2562167	0					
ANR	2562400	Identifier	SIG_CHLD2		2562167	1					
ANR	2562401	Label	case Value :: REAL_VALUE :	835:2:20915:20937	2562167	7	True				
ANR	2562402	Identifier	Value :: REAL_VALUE		2562167	0					
ANR	2562403	ExpressionStatement	"compareReals ( op , v1 , v2 , result )"	836:3:20942:20975	2562167	8	True				
ANR	2562404	CallExpression	"compareReals ( op , v1 , v2 , result )"		2562167	0					
ANR	2562405	Callee	compareReals		2562167	0					
ANR	2562406	Identifier	compareReals		2562167	0					
ANR	2562407	ArgumentList	op		2562167	1					
ANR	2562408	Argument	op		2562167	0					
ANR	2562409	Identifier	op		2562167	0					
ANR	2562410	Argument	v1		2562167	1					
ANR	2562411	Identifier	v1		2562167	0					
ANR	2562412	Argument	v2		2562167	2					
ANR	2562413	Identifier	v2		2562167	0					
ANR	2562414	Argument	result		2562167	3					
ANR	2562415	Identifier	result		2562167	0					
ANR	2562416	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	837:3:20980:21011	2562167	9	True				
ANR	2562417	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2562167	0		|			
ANR	2562418	Identifier	SIG_CHLD1		2562167	0					
ANR	2562419	Identifier	SIG_CHLD2		2562167	1					
ANR	2562420	Label	case Value :: BOOLEAN_VALUE :	839:2:21017:21042	2562167	10	True				
ANR	2562421	Identifier	Value :: BOOLEAN_VALUE		2562167	0					
ANR	2562422	IfStatement	if ( ! v1 . IsBooleanValue ( ) || ! v2 . IsBooleanValue ( ) )		2562167	11					
ANR	2562423	Condition	! v1 . IsBooleanValue ( ) || ! v2 . IsBooleanValue ( )	841:7:21081:21126	2562167	0	True				
ANR	2562424	OrExpression	! v1 . IsBooleanValue ( ) || ! v2 . IsBooleanValue ( )		2562167	0		||			
ANR	2562425	UnaryOperationExpression	! v1 . IsBooleanValue ( )		2562167	0					
ANR	2562426	UnaryOperator	!		2562167	0					
ANR	2562427	CallExpression	v1 . IsBooleanValue ( )		2562167	1					
ANR	2562428	Callee	v1 . IsBooleanValue		2562167	0					
ANR	2562429	MemberAccess	v1 . IsBooleanValue		2562167	0					
ANR	2562430	Identifier	v1		2562167	0					
ANR	2562431	Identifier	IsBooleanValue		2562167	1					
ANR	2562432	ArgumentList			2562167	1					
ANR	2562433	UnaryOperationExpression	! v2 . IsBooleanValue ( )		2562167	1					
ANR	2562434	UnaryOperator	!		2562167	0					
ANR	2562435	CallExpression	v2 . IsBooleanValue ( )		2562167	1					
ANR	2562436	Callee	v2 . IsBooleanValue		2562167	0					
ANR	2562437	MemberAccess	v2 . IsBooleanValue		2562167	0					
ANR	2562438	Identifier	v2		2562167	0					
ANR	2562439	Identifier	IsBooleanValue		2562167	1					
ANR	2562440	ArgumentList			2562167	1					
ANR	2562441	CompoundStatement		69:56:1962:1962	2562167	1					
ANR	2562442	ExpressionStatement	result . SetErrorValue ( )	842:4:21136:21158	2562167	0	True				
ANR	2562443	CallExpression	result . SetErrorValue ( )		2562167	0					
ANR	2562444	Callee	result . SetErrorValue		2562167	0					
ANR	2562445	MemberAccess	result . SetErrorValue		2562167	0					
ANR	2562446	Identifier	result		2562167	0					
ANR	2562447	Identifier	SetErrorValue		2562167	1					
ANR	2562448	ArgumentList			2562167	1					
ANR	2562449	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	843:4:21164:21195	2562167	1	True				
ANR	2562450	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2562167	0		|			
ANR	2562451	Identifier	SIG_CHLD1		2562167	0					
ANR	2562452	Identifier	SIG_CHLD2		2562167	1					
ANR	2562453	ExpressionStatement	"compareBools ( op , v1 , v2 , result )"	845:3:21205:21239	2562167	12	True				
ANR	2562454	CallExpression	"compareBools ( op , v1 , v2 , result )"		2562167	0					
ANR	2562455	Callee	compareBools		2562167	0					
ANR	2562456	Identifier	compareBools		2562167	0					
ANR	2562457	ArgumentList	op		2562167	1					
ANR	2562458	Argument	op		2562167	0					
ANR	2562459	Identifier	op		2562167	0					
ANR	2562460	Argument	v1		2562167	1					
ANR	2562461	Identifier	v1		2562167	0					
ANR	2562462	Argument	v2		2562167	2					
ANR	2562463	Identifier	v2		2562167	0					
ANR	2562464	Argument	result		2562167	3					
ANR	2562465	Identifier	result		2562167	0					
ANR	2562466	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	846:3:21244:21275	2562167	13	True				
ANR	2562467	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2562167	0		|			
ANR	2562468	Identifier	SIG_CHLD1		2562167	0					
ANR	2562469	Identifier	SIG_CHLD2		2562167	1					
ANR	2562470	Label	case Value :: LIST_VALUE :	848:2:21280:21302	2562167	14	True				
ANR	2562471	Identifier	Value :: LIST_VALUE		2562167	0					
ANR	2562472	Label	case Value :: CLASSAD_VALUE :	849:2:21306:21331	2562167	15	True				
ANR	2562473	Identifier	Value :: CLASSAD_VALUE		2562167	0					
ANR	2562474	ExpressionStatement	result . SetErrorValue ( )	850:3:21336:21358	2562167	16	True				
ANR	2562475	CallExpression	result . SetErrorValue ( )		2562167	0					
ANR	2562476	Callee	result . SetErrorValue		2562167	0					
ANR	2562477	MemberAccess	result . SetErrorValue		2562167	0					
ANR	2562478	Identifier	result		2562167	0					
ANR	2562479	Identifier	SetErrorValue		2562167	1					
ANR	2562480	ArgumentList			2562167	1					
ANR	2562481	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	851:3:21363:21394	2562167	17	True				
ANR	2562482	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2562167	0		|			
ANR	2562483	Identifier	SIG_CHLD1		2562167	0					
ANR	2562484	Identifier	SIG_CHLD2		2562167	1					
ANR	2562485	Label	case Value :: ABSOLUTE_TIME_VALUE :	853:2:21399:21430	2562167	18	True				
ANR	2562486	Identifier	Value :: ABSOLUTE_TIME_VALUE		2562167	0					
ANR	2562487	IfStatement	if ( ! v1 . IsAbsoluteTimeValue ( ) || ! v2 . IsAbsoluteTimeValue ( ) )		2562167	19					
ANR	2562488	Condition	! v1 . IsAbsoluteTimeValue ( ) || ! v2 . IsAbsoluteTimeValue ( )	854:7:21439:21494	2562167	0	True				
ANR	2562489	OrExpression	! v1 . IsAbsoluteTimeValue ( ) || ! v2 . IsAbsoluteTimeValue ( )		2562167	0		||			
ANR	2562490	UnaryOperationExpression	! v1 . IsAbsoluteTimeValue ( )		2562167	0					
ANR	2562491	UnaryOperator	!		2562167	0					
ANR	2562492	CallExpression	v1 . IsAbsoluteTimeValue ( )		2562167	1					
ANR	2562493	Callee	v1 . IsAbsoluteTimeValue		2562167	0					
ANR	2562494	MemberAccess	v1 . IsAbsoluteTimeValue		2562167	0					
ANR	2562495	Identifier	v1		2562167	0					
ANR	2562496	Identifier	IsAbsoluteTimeValue		2562167	1					
ANR	2562497	ArgumentList			2562167	1					
ANR	2562498	UnaryOperationExpression	! v2 . IsAbsoluteTimeValue ( )		2562167	1					
ANR	2562499	UnaryOperator	!		2562167	0					
ANR	2562500	CallExpression	v2 . IsAbsoluteTimeValue ( )		2562167	1					
ANR	2562501	Callee	v2 . IsAbsoluteTimeValue		2562167	0					
ANR	2562502	MemberAccess	v2 . IsAbsoluteTimeValue		2562167	0					
ANR	2562503	Identifier	v2		2562167	0					
ANR	2562504	Identifier	IsAbsoluteTimeValue		2562167	1					
ANR	2562505	ArgumentList			2562167	1					
ANR	2562506	CompoundStatement		82:66:2330:2330	2562167	1					
ANR	2562507	ExpressionStatement	result . SetErrorValue ( )	855:4:21504:21527	2562167	0	True				
ANR	2562508	CallExpression	result . SetErrorValue ( )		2562167	0					
ANR	2562509	Callee	result . SetErrorValue		2562167	0					
ANR	2562510	MemberAccess	result . SetErrorValue		2562167	0					
ANR	2562511	Identifier	result		2562167	0					
ANR	2562512	Identifier	SetErrorValue		2562167	1					
ANR	2562513	ArgumentList			2562167	1					
ANR	2562514	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	856:4:21533:21564	2562167	1	True				
ANR	2562515	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2562167	0		|			
ANR	2562516	Identifier	SIG_CHLD1		2562167	0					
ANR	2562517	Identifier	SIG_CHLD2		2562167	1					
ANR	2562518	ExpressionStatement	"compareAbsoluteTimes ( op , v1 , v2 , result )"	858:3:21574:21616	2562167	20	True				
ANR	2562519	CallExpression	"compareAbsoluteTimes ( op , v1 , v2 , result )"		2562167	0					
ANR	2562520	Callee	compareAbsoluteTimes		2562167	0					
ANR	2562521	Identifier	compareAbsoluteTimes		2562167	0					
ANR	2562522	ArgumentList	op		2562167	1					
ANR	2562523	Argument	op		2562167	0					
ANR	2562524	Identifier	op		2562167	0					
ANR	2562525	Argument	v1		2562167	1					
ANR	2562526	Identifier	v1		2562167	0					
ANR	2562527	Argument	v2		2562167	2					
ANR	2562528	Identifier	v2		2562167	0					
ANR	2562529	Argument	result		2562167	3					
ANR	2562530	Identifier	result		2562167	0					
ANR	2562531	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	859:3:21621:21652	2562167	21	True				
ANR	2562532	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2562167	0		|			
ANR	2562533	Identifier	SIG_CHLD1		2562167	0					
ANR	2562534	Identifier	SIG_CHLD2		2562167	1					
ANR	2562535	Label	case Value :: RELATIVE_TIME_VALUE :	861:2:21657:21688	2562167	22	True				
ANR	2562536	Identifier	Value :: RELATIVE_TIME_VALUE		2562167	0					
ANR	2562537	IfStatement	if ( ! v1 . IsRelativeTimeValue ( ) || ! v2 . IsRelativeTimeValue ( ) )		2562167	23					
ANR	2562538	Condition	! v1 . IsRelativeTimeValue ( ) || ! v2 . IsRelativeTimeValue ( )	862:7:21697:21752	2562167	0	True				
ANR	2562539	OrExpression	! v1 . IsRelativeTimeValue ( ) || ! v2 . IsRelativeTimeValue ( )		2562167	0		||			
ANR	2562540	UnaryOperationExpression	! v1 . IsRelativeTimeValue ( )		2562167	0					
ANR	2562541	UnaryOperator	!		2562167	0					
ANR	2562542	CallExpression	v1 . IsRelativeTimeValue ( )		2562167	1					
ANR	2562543	Callee	v1 . IsRelativeTimeValue		2562167	0					
ANR	2562544	MemberAccess	v1 . IsRelativeTimeValue		2562167	0					
ANR	2562545	Identifier	v1		2562167	0					
ANR	2562546	Identifier	IsRelativeTimeValue		2562167	1					
ANR	2562547	ArgumentList			2562167	1					
ANR	2562548	UnaryOperationExpression	! v2 . IsRelativeTimeValue ( )		2562167	1					
ANR	2562549	UnaryOperator	!		2562167	0					
ANR	2562550	CallExpression	v2 . IsRelativeTimeValue ( )		2562167	1					
ANR	2562551	Callee	v2 . IsRelativeTimeValue		2562167	0					
ANR	2562552	MemberAccess	v2 . IsRelativeTimeValue		2562167	0					
ANR	2562553	Identifier	v2		2562167	0					
ANR	2562554	Identifier	IsRelativeTimeValue		2562167	1					
ANR	2562555	ArgumentList			2562167	1					
ANR	2562556	CompoundStatement		90:66:2588:2588	2562167	1					
ANR	2562557	ExpressionStatement	result . SetErrorValue ( )	863:4:21762:21785	2562167	0	True				
ANR	2562558	CallExpression	result . SetErrorValue ( )		2562167	0					
ANR	2562559	Callee	result . SetErrorValue		2562167	0					
ANR	2562560	MemberAccess	result . SetErrorValue		2562167	0					
ANR	2562561	Identifier	result		2562167	0					
ANR	2562562	Identifier	SetErrorValue		2562167	1					
ANR	2562563	ArgumentList			2562167	1					
ANR	2562564	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	864:4:21791:21822	2562167	1	True				
ANR	2562565	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2562167	0		|			
ANR	2562566	Identifier	SIG_CHLD1		2562167	0					
ANR	2562567	Identifier	SIG_CHLD2		2562167	1					
ANR	2562568	ExpressionStatement	"compareRelativeTimes ( op , v1 , v2 , result )"	866:3:21832:21874	2562167	24	True				
ANR	2562569	CallExpression	"compareRelativeTimes ( op , v1 , v2 , result )"		2562167	0					
ANR	2562570	Callee	compareRelativeTimes		2562167	0					
ANR	2562571	Identifier	compareRelativeTimes		2562167	0					
ANR	2562572	ArgumentList	op		2562167	1					
ANR	2562573	Argument	op		2562167	0					
ANR	2562574	Identifier	op		2562167	0					
ANR	2562575	Argument	v1		2562167	1					
ANR	2562576	Identifier	v1		2562167	0					
ANR	2562577	Argument	v2		2562167	2					
ANR	2562578	Identifier	v2		2562167	0					
ANR	2562579	Argument	result		2562167	3					
ANR	2562580	Identifier	result		2562167	0					
ANR	2562581	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	867:3:21879:21910	2562167	25	True				
ANR	2562582	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2562167	0		|			
ANR	2562583	Identifier	SIG_CHLD1		2562167	0					
ANR	2562584	Identifier	SIG_CHLD2		2562167	1					
ANR	2562585	Label	default :	869:2:21915:21922	2562167	26	True				
ANR	2562586	Identifier	default		2562167	0					
ANR	2562587	ExpressionStatement	"CLASSAD_EXCEPT ( ""Should not get here"" )"	871:3:21953:21991	2562167	27	True				
ANR	2562588	CallExpression	"CLASSAD_EXCEPT ( ""Should not get here"" )"		2562167	0					
ANR	2562589	Callee	CLASSAD_EXCEPT		2562167	0					
ANR	2562590	Identifier	CLASSAD_EXCEPT		2562167	0					
ANR	2562591	ArgumentList	"""Should not get here"""		2562167	1					
ANR	2562592	Argument	"""Should not get here"""		2562167	0					
ANR	2562593	PrimaryExpression	"""Should not get here"""		2562167	0					
ANR	2562594	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	872:3:21996:22027	2562167	28	True				
ANR	2562595	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2562167	0		|			
ANR	2562596	Identifier	SIG_CHLD1		2562167	0					
ANR	2562597	Identifier	SIG_CHLD2		2562167	1					
ANR	2562598	ReturnType	int		2562167	1					
ANR	2562599	Identifier	Operation :: doComparison		2562167	2					
ANR	2562600	ParameterList	"OpKind op , Value & v1 , Value & v2 , Value & result"		2562167	3					
ANR	2562601	Parameter	OpKind op	772:14:19119:19127	2562167	0	True				
ANR	2562602	ParameterType	OpKind		2562167	0					
ANR	2562603	Identifier	op		2562167	1					
ANR	2562604	Parameter	Value & v1	772:25:19130:19138	2562167	1	True				
ANR	2562605	ParameterType	Value &		2562167	0					
ANR	2562606	Identifier	v1		2562167	1					
ANR	2562607	Parameter	Value & v2	772:36:19141:19149	2562167	2	True				
ANR	2562608	ParameterType	Value &		2562167	0					
ANR	2562609	Identifier	v2		2562167	1					
ANR	2562610	Parameter	Value & result	772:47:19152:19164	2562167	3	True				
ANR	2562611	ParameterType	Value &		2562167	0					
ANR	2562612	Identifier	result		2562167	1					
ANR	2562613	CFGEntryNode	ENTRY		2562167		True				
ANR	2562614	CFGExitNode	EXIT		2562167		True				
ANR	2562615	Symbol	v2 . IsRelativeTimeValue		2562167						
ANR	2562616	Symbol	NOT_EQUAL_OP		2562167						
ANR	2562617	Symbol	Value :: STRING_VALUE		2562167						
ANR	2562618	Symbol	v1 . IsBooleanValue		2562167						
ANR	2562619	Symbol	SIG_CHLD1		2562167						
ANR	2562620	Symbol	Value :: ERROR_VALUE		2562167						
ANR	2562621	Symbol	SIG_CHLD2		2562167						
ANR	2562622	Symbol	META_EQUAL_OP		2562167						
ANR	2562623	Symbol	v1 . IsAbsoluteTimeValue		2562167						
ANR	2562624	Symbol	result		2562167						
ANR	2562625	Symbol	v2 . GetType		2562167						
ANR	2562626	Symbol	coerceResult		2562167						
ANR	2562627	Symbol	Value :: UNDEFINED_VALUE		2562167						
ANR	2562628	Symbol	op		2562167						
ANR	2562629	Symbol	EQUAL_OP		2562167						
ANR	2562630	Symbol	coerceToNumber		2562167						
ANR	2562631	Symbol	META_NOT_EQUAL_OP		2562167						
ANR	2562632	Symbol	false		2562167						
ANR	2562633	Symbol	vt1		2562167						
ANR	2562634	Symbol	vt2		2562167						
ANR	2562635	Symbol	v2 . IsBooleanValue		2562167						
ANR	2562636	Symbol	exact		2562167						
ANR	2562637	Symbol	true		2562167						
ANR	2562638	Symbol	v2 . IsAbsoluteTimeValue		2562167						
ANR	2562639	Symbol	v1		2562167						
ANR	2562640	Symbol	v1 . IsRelativeTimeValue		2562167						
ANR	2562641	Symbol	v2		2562167						
ANR	2562642	Symbol	v1 . GetType		2562167						
ANR	2562643	Function	Operation :: doArithmetic	877:0:22036:24583							
ANR	2562644	FunctionDef	"Operation :: doArithmetic (OpKind op , Value & v1 , Value & v2 , Value & result)"		2562643	0					
ANR	2562645	CompoundStatement		879:0:22114:24583	2562643	0					
ANR	2562646	IdentifierDeclStatement	"int i1 , i2 ;"	880:1:22117:22128	2562643	0	True				
ANR	2562647	IdentifierDecl	i1		2562643	0					
ANR	2562648	IdentifierDeclType	int		2562643	0					
ANR	2562649	Identifier	i1		2562643	1					
ANR	2562650	IdentifierDecl	i2		2562643	1					
ANR	2562651	IdentifierDeclType	int		2562643	0					
ANR	2562652	Identifier	i2		2562643	1					
ANR	2562653	IdentifierDeclStatement	double t1 ;	881:1:22131:22140	2562643	1	True				
ANR	2562654	IdentifierDecl	t1		2562643	0					
ANR	2562655	IdentifierDeclType	double		2562643	0					
ANR	2562656	Identifier	t1		2562643	1					
ANR	2562657	IdentifierDeclStatement	double r1 ;	882:1:22143:22153	2562643	2	True				
ANR	2562658	IdentifierDecl	r1		2562643	0					
ANR	2562659	IdentifierDeclType	double		2562643	0					
ANR	2562660	Identifier	r1		2562643	1					
ANR	2562661	IdentifierDeclStatement	bool b1 ;	883:4:22159:22169	2562643	3	True				
ANR	2562662	IdentifierDecl	b1		2562643	0					
ANR	2562663	IdentifierDeclType	bool		2562643	0					
ANR	2562664	Identifier	b1		2562643	1					
ANR	2562665	IfStatement	if ( ( ! v1 . IsIntegerValue ( ) && ! v1 . IsRealValue ( ) && ! v1 . IsAbsoluteTimeValue ( ) && ! v1 . IsRelativeTimeValue ( ) && ! v1 . IsBooleanValue ( ) ) || ( op != UNARY_MINUS_OP && ! v2 . IsBooleanValue ( ) && ! v2 . IsIntegerValue ( ) && ! v2 . IsRealValue ( ) && ! v2 . IsAbsoluteTimeValue ( ) && ! v2 . IsRelativeTimeValue ( ) ) )		2562643	4					
ANR	2562666	Condition	( ! v1 . IsIntegerValue ( ) && ! v1 . IsRealValue ( ) && ! v1 . IsAbsoluteTimeValue ( ) && ! v1 . IsRelativeTimeValue ( ) && ! v1 . IsBooleanValue ( ) ) || ( op != UNARY_MINUS_OP && ! v2 . IsBooleanValue ( ) && ! v2 . IsIntegerValue ( ) && ! v2 . IsRealValue ( ) && ! v2 . IsAbsoluteTimeValue ( ) && ! v2 . IsRelativeTimeValue ( ) )	886:5:22223:22529	2562643	0	True				
ANR	2562667	OrExpression	( ! v1 . IsIntegerValue ( ) && ! v1 . IsRealValue ( ) && ! v1 . IsAbsoluteTimeValue ( ) && ! v1 . IsRelativeTimeValue ( ) && ! v1 . IsBooleanValue ( ) ) || ( op != UNARY_MINUS_OP && ! v2 . IsBooleanValue ( ) && ! v2 . IsIntegerValue ( ) && ! v2 . IsRealValue ( ) && ! v2 . IsAbsoluteTimeValue ( ) && ! v2 . IsRelativeTimeValue ( ) )		2562643	0		||			
ANR	2562668	AndExpression	! v1 . IsIntegerValue ( ) && ! v1 . IsRealValue ( ) && ! v1 . IsAbsoluteTimeValue ( ) && ! v1 . IsRelativeTimeValue ( ) && ! v1 . IsBooleanValue ( )		2562643	0		&&			
ANR	2562669	UnaryOperationExpression	! v1 . IsIntegerValue ( )		2562643	0					
ANR	2562670	UnaryOperator	!		2562643	0					
ANR	2562671	CallExpression	v1 . IsIntegerValue ( )		2562643	1					
ANR	2562672	Callee	v1 . IsIntegerValue		2562643	0					
ANR	2562673	MemberAccess	v1 . IsIntegerValue		2562643	0					
ANR	2562674	Identifier	v1		2562643	0					
ANR	2562675	Identifier	IsIntegerValue		2562643	1					
ANR	2562676	ArgumentList			2562643	1					
ANR	2562677	AndExpression	! v1 . IsRealValue ( ) && ! v1 . IsAbsoluteTimeValue ( ) && ! v1 . IsRelativeTimeValue ( ) && ! v1 . IsBooleanValue ( )		2562643	1		&&			
ANR	2562678	UnaryOperationExpression	! v1 . IsRealValue ( )		2562643	0					
ANR	2562679	UnaryOperator	!		2562643	0					
ANR	2562680	CallExpression	v1 . IsRealValue ( )		2562643	1					
ANR	2562681	Callee	v1 . IsRealValue		2562643	0					
ANR	2562682	MemberAccess	v1 . IsRealValue		2562643	0					
ANR	2562683	Identifier	v1		2562643	0					
ANR	2562684	Identifier	IsRealValue		2562643	1					
ANR	2562685	ArgumentList			2562643	1					
ANR	2562686	AndExpression	! v1 . IsAbsoluteTimeValue ( ) && ! v1 . IsRelativeTimeValue ( ) && ! v1 . IsBooleanValue ( )		2562643	1		&&			
ANR	2562687	UnaryOperationExpression	! v1 . IsAbsoluteTimeValue ( )		2562643	0					
ANR	2562688	UnaryOperator	!		2562643	0					
ANR	2562689	CallExpression	v1 . IsAbsoluteTimeValue ( )		2562643	1					
ANR	2562690	Callee	v1 . IsAbsoluteTimeValue		2562643	0					
ANR	2562691	MemberAccess	v1 . IsAbsoluteTimeValue		2562643	0					
ANR	2562692	Identifier	v1		2562643	0					
ANR	2562693	Identifier	IsAbsoluteTimeValue		2562643	1					
ANR	2562694	ArgumentList			2562643	1					
ANR	2562695	AndExpression	! v1 . IsRelativeTimeValue ( ) && ! v1 . IsBooleanValue ( )		2562643	1		&&			
ANR	2562696	UnaryOperationExpression	! v1 . IsRelativeTimeValue ( )		2562643	0					
ANR	2562697	UnaryOperator	!		2562643	0					
ANR	2562698	CallExpression	v1 . IsRelativeTimeValue ( )		2562643	1					
ANR	2562699	Callee	v1 . IsRelativeTimeValue		2562643	0					
ANR	2562700	MemberAccess	v1 . IsRelativeTimeValue		2562643	0					
ANR	2562701	Identifier	v1		2562643	0					
ANR	2562702	Identifier	IsRelativeTimeValue		2562643	1					
ANR	2562703	ArgumentList			2562643	1					
ANR	2562704	UnaryOperationExpression	! v1 . IsBooleanValue ( )		2562643	1					
ANR	2562705	UnaryOperator	!		2562643	0					
ANR	2562706	CallExpression	v1 . IsBooleanValue ( )		2562643	1					
ANR	2562707	Callee	v1 . IsBooleanValue		2562643	0					
ANR	2562708	MemberAccess	v1 . IsBooleanValue		2562643	0					
ANR	2562709	Identifier	v1		2562643	0					
ANR	2562710	Identifier	IsBooleanValue		2562643	1					
ANR	2562711	ArgumentList			2562643	1					
ANR	2562712	AndExpression	op != UNARY_MINUS_OP && ! v2 . IsBooleanValue ( ) && ! v2 . IsIntegerValue ( ) && ! v2 . IsRealValue ( ) && ! v2 . IsAbsoluteTimeValue ( ) && ! v2 . IsRelativeTimeValue ( )		2562643	1		&&			
ANR	2562713	EqualityExpression	op != UNARY_MINUS_OP		2562643	0		!=			
ANR	2562714	Identifier	op		2562643	0					
ANR	2562715	Identifier	UNARY_MINUS_OP		2562643	1					
ANR	2562716	AndExpression	! v2 . IsBooleanValue ( ) && ! v2 . IsIntegerValue ( ) && ! v2 . IsRealValue ( ) && ! v2 . IsAbsoluteTimeValue ( ) && ! v2 . IsRelativeTimeValue ( )		2562643	1		&&			
ANR	2562717	UnaryOperationExpression	! v2 . IsBooleanValue ( )		2562643	0					
ANR	2562718	UnaryOperator	!		2562643	0					
ANR	2562719	CallExpression	v2 . IsBooleanValue ( )		2562643	1					
ANR	2562720	Callee	v2 . IsBooleanValue		2562643	0					
ANR	2562721	MemberAccess	v2 . IsBooleanValue		2562643	0					
ANR	2562722	Identifier	v2		2562643	0					
ANR	2562723	Identifier	IsBooleanValue		2562643	1					
ANR	2562724	ArgumentList			2562643	1					
ANR	2562725	AndExpression	! v2 . IsIntegerValue ( ) && ! v2 . IsRealValue ( ) && ! v2 . IsAbsoluteTimeValue ( ) && ! v2 . IsRelativeTimeValue ( )		2562643	1		&&			
ANR	2562726	UnaryOperationExpression	! v2 . IsIntegerValue ( )		2562643	0					
ANR	2562727	UnaryOperator	!		2562643	0					
ANR	2562728	CallExpression	v2 . IsIntegerValue ( )		2562643	1					
ANR	2562729	Callee	v2 . IsIntegerValue		2562643	0					
ANR	2562730	MemberAccess	v2 . IsIntegerValue		2562643	0					
ANR	2562731	Identifier	v2		2562643	0					
ANR	2562732	Identifier	IsIntegerValue		2562643	1					
ANR	2562733	ArgumentList			2562643	1					
ANR	2562734	AndExpression	! v2 . IsRealValue ( ) && ! v2 . IsAbsoluteTimeValue ( ) && ! v2 . IsRelativeTimeValue ( )		2562643	1		&&			
ANR	2562735	UnaryOperationExpression	! v2 . IsRealValue ( )		2562643	0					
ANR	2562736	UnaryOperator	!		2562643	0					
ANR	2562737	CallExpression	v2 . IsRealValue ( )		2562643	1					
ANR	2562738	Callee	v2 . IsRealValue		2562643	0					
ANR	2562739	MemberAccess	v2 . IsRealValue		2562643	0					
ANR	2562740	Identifier	v2		2562643	0					
ANR	2562741	Identifier	IsRealValue		2562643	1					
ANR	2562742	ArgumentList			2562643	1					
ANR	2562743	AndExpression	! v2 . IsAbsoluteTimeValue ( ) && ! v2 . IsRelativeTimeValue ( )		2562643	1		&&			
ANR	2562744	UnaryOperationExpression	! v2 . IsAbsoluteTimeValue ( )		2562643	0					
ANR	2562745	UnaryOperator	!		2562643	0					
ANR	2562746	CallExpression	v2 . IsAbsoluteTimeValue ( )		2562643	1					
ANR	2562747	Callee	v2 . IsAbsoluteTimeValue		2562643	0					
ANR	2562748	MemberAccess	v2 . IsAbsoluteTimeValue		2562643	0					
ANR	2562749	Identifier	v2		2562643	0					
ANR	2562750	Identifier	IsAbsoluteTimeValue		2562643	1					
ANR	2562751	ArgumentList			2562643	1					
ANR	2562752	UnaryOperationExpression	! v2 . IsRelativeTimeValue ( )		2562643	1					
ANR	2562753	UnaryOperator	!		2562643	0					
ANR	2562754	CallExpression	v2 . IsRelativeTimeValue ( )		2562643	1					
ANR	2562755	Callee	v2 . IsRelativeTimeValue		2562643	0					
ANR	2562756	MemberAccess	v2 . IsRelativeTimeValue		2562643	0					
ANR	2562757	Identifier	v2		2562643	0					
ANR	2562758	Identifier	IsRelativeTimeValue		2562643	1					
ANR	2562759	ArgumentList			2562643	1					
ANR	2562760	CompoundStatement		12:65:418:418	2562643	1					
ANR	2562761	ExpressionStatement	result . SetErrorValue ( )	891:2:22537:22560	2562643	0	True				
ANR	2562762	CallExpression	result . SetErrorValue ( )		2562643	0					
ANR	2562763	Callee	result . SetErrorValue		2562643	0					
ANR	2562764	MemberAccess	result . SetErrorValue		2562643	0					
ANR	2562765	Identifier	result		2562643	0					
ANR	2562766	Identifier	SetErrorValue		2562643	1					
ANR	2562767	ArgumentList			2562643	1					
ANR	2562768	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	892:2:22564:22595	2562643	1	True				
ANR	2562769	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2562643	0		|			
ANR	2562770	Identifier	SIG_CHLD1		2562643	0					
ANR	2562771	Identifier	SIG_CHLD2		2562643	1					
ANR	2562772	IfStatement	if ( op == UNARY_MINUS_OP )		2562643	5					
ANR	2562773	Condition	op == UNARY_MINUS_OP	896:5:22654:22673	2562643	0	True				
ANR	2562774	EqualityExpression	op == UNARY_MINUS_OP		2562643	0		==			
ANR	2562775	Identifier	op		2562643	0					
ANR	2562776	Identifier	UNARY_MINUS_OP		2562643	1					
ANR	2562777	CompoundStatement		18:27:561:561	2562643	1					
ANR	2562778	IfStatement	if ( v1 . IsIntegerValue ( i1 ) )		2562643	0					
ANR	2562779	Condition	v1 . IsIntegerValue ( i1 )	897:6:22684:22705	2562643	0	True				
ANR	2562780	CallExpression	v1 . IsIntegerValue ( i1 )		2562643	0					
ANR	2562781	Callee	v1 . IsIntegerValue		2562643	0					
ANR	2562782	MemberAccess	v1 . IsIntegerValue		2562643	0					
ANR	2562783	Identifier	v1		2562643	0					
ANR	2562784	Identifier	IsIntegerValue		2562643	1					
ANR	2562785	ArgumentList	i1		2562643	1					
ANR	2562786	Argument	i1		2562643	0					
ANR	2562787	Identifier	i1		2562643	0					
ANR	2562788	CompoundStatement		19:30:593:593	2562643	1					
ANR	2562789	ExpressionStatement	result . SetIntegerValue ( - i1 )	898:3:22713:22741	2562643	0	True				
ANR	2562790	CallExpression	result . SetIntegerValue ( - i1 )		2562643	0					
ANR	2562791	Callee	result . SetIntegerValue		2562643	0					
ANR	2562792	MemberAccess	result . SetIntegerValue		2562643	0					
ANR	2562793	Identifier	result		2562643	0					
ANR	2562794	Identifier	SetIntegerValue		2562643	1					
ANR	2562795	ArgumentList	- i1		2562643	1					
ANR	2562796	Argument	- i1		2562643	0					
ANR	2562797	UnaryOperationExpression	- i1		2562643	0					
ANR	2562798	UnaryOperator	-		2562643	0					
ANR	2562799	Identifier	i1		2562643	1					
ANR	2562800	ReturnStatement	return SIG_CHLD1 ;	899:3:22746:22762	2562643	1	True				
ANR	2562801	Identifier	SIG_CHLD1		2562643	0					
ANR	2562802	ElseStatement	else		2562643	0					
ANR	2562803	IfStatement	if ( v1 . IsRealValue ( r1 ) )		2562643	0					
ANR	2562804	Condition	v1 . IsRealValue ( r1 )	900:13:22777:22795	2562643	0	True				
ANR	2562805	CallExpression	v1 . IsRealValue ( r1 )		2562643	0					
ANR	2562806	Callee	v1 . IsRealValue		2562643	0					
ANR	2562807	MemberAccess	v1 . IsRealValue		2562643	0					
ANR	2562808	Identifier	v1		2562643	0					
ANR	2562809	Identifier	IsRealValue		2562643	1					
ANR	2562810	ArgumentList	r1		2562643	1					
ANR	2562811	Argument	r1		2562643	0					
ANR	2562812	Identifier	r1		2562643	0					
ANR	2562813	CompoundStatement		22:34:683:683	2562643	1					
ANR	2562814	ExpressionStatement	result . SetRealValue ( - r1 )	901:3:22803:22828	2562643	0	True				
ANR	2562815	CallExpression	result . SetRealValue ( - r1 )		2562643	0					
ANR	2562816	Callee	result . SetRealValue		2562643	0					
ANR	2562817	MemberAccess	result . SetRealValue		2562643	0					
ANR	2562818	Identifier	result		2562643	0					
ANR	2562819	Identifier	SetRealValue		2562643	1					
ANR	2562820	ArgumentList	- r1		2562643	1					
ANR	2562821	Argument	- r1		2562643	0					
ANR	2562822	UnaryOperationExpression	- r1		2562643	0					
ANR	2562823	UnaryOperator	-		2562643	0					
ANR	2562824	Identifier	r1		2562643	1					
ANR	2562825	ReturnStatement	return SIG_CHLD1 ;	902:3:22833:22849	2562643	1	True				
ANR	2562826	Identifier	SIG_CHLD1		2562643	0					
ANR	2562827	ElseStatement	else		2562643	0					
ANR	2562828	IfStatement	if ( v1 . IsRelativeTimeValue ( t1 ) )		2562643	0					
ANR	2562829	Condition	v1 . IsRelativeTimeValue ( t1 )	903:13:22864:22891	2562643	0	True				
ANR	2562830	CallExpression	v1 . IsRelativeTimeValue ( t1 )		2562643	0					
ANR	2562831	Callee	v1 . IsRelativeTimeValue		2562643	0					
ANR	2562832	MemberAccess	v1 . IsRelativeTimeValue		2562643	0					
ANR	2562833	Identifier	v1		2562643	0					
ANR	2562834	Identifier	IsRelativeTimeValue		2562643	1					
ANR	2562835	ArgumentList	t1		2562643	1					
ANR	2562836	Argument	t1		2562643	0					
ANR	2562837	Identifier	t1		2562643	0					
ANR	2562838	CompoundStatement		25:44:780:780	2562643	1					
ANR	2562839	ExpressionStatement	result . SetRelativeTimeValue ( - t1 )	904:3:22900:22934	2562643	0	True				
ANR	2562840	CallExpression	result . SetRelativeTimeValue ( - t1 )		2562643	0					
ANR	2562841	Callee	result . SetRelativeTimeValue		2562643	0					
ANR	2562842	MemberAccess	result . SetRelativeTimeValue		2562643	0					
ANR	2562843	Identifier	result		2562643	0					
ANR	2562844	Identifier	SetRelativeTimeValue		2562643	1					
ANR	2562845	ArgumentList	- t1		2562643	1					
ANR	2562846	Argument	- t1		2562643	0					
ANR	2562847	UnaryOperationExpression	- t1		2562643	0					
ANR	2562848	UnaryOperator	-		2562643	0					
ANR	2562849	Identifier	t1		2562643	1					
ANR	2562850	ReturnStatement	return ( SIG_CHLD1 ) ;	905:3:22939:22958	2562643	1	True				
ANR	2562851	Identifier	SIG_CHLD1		2562643	0					
ANR	2562852	ElseStatement	else		2562643	0					
ANR	2562853	IfStatement	if ( v1 . IsBooleanValue ( b1 ) )		2562643	0					
ANR	2562854	Condition	v1 . IsBooleanValue ( b1 )	906:19:22979:23001	2562643	0	True				
ANR	2562855	CallExpression	v1 . IsBooleanValue ( b1 )		2562643	0					
ANR	2562856	Callee	v1 . IsBooleanValue		2562643	0					
ANR	2562857	MemberAccess	v1 . IsBooleanValue		2562643	0					
ANR	2562858	Identifier	v1		2562643	0					
ANR	2562859	Identifier	IsBooleanValue		2562643	1					
ANR	2562860	ArgumentList	b1		2562643	1					
ANR	2562861	Argument	b1		2562643	0					
ANR	2562862	Identifier	b1		2562643	0					
ANR	2562863	CompoundStatement		28:45:890:890	2562643	1					
ANR	2562864	ExpressionStatement	result . SetBooleanValue ( ! b1 )	907:12:23019:23048	2562643	0	True				
ANR	2562865	CallExpression	result . SetBooleanValue ( ! b1 )		2562643	0					
ANR	2562866	Callee	result . SetBooleanValue		2562643	0					
ANR	2562867	MemberAccess	result . SetBooleanValue		2562643	0					
ANR	2562868	Identifier	result		2562643	0					
ANR	2562869	Identifier	SetBooleanValue		2562643	1					
ANR	2562870	ArgumentList	! b1		2562643	1					
ANR	2562871	Argument	! b1		2562643	0					
ANR	2562872	UnaryOperationExpression	! b1		2562643	0					
ANR	2562873	UnaryOperator	!		2562643	0					
ANR	2562874	Identifier	b1		2562643	1					
ANR	2562875	ElseStatement	else		2562643	0					
ANR	2562876	IfStatement	if ( v1 . IsExceptional ( ) )		2562643	0					
ANR	2562877	Condition	v1 . IsExceptional ( )	908:13:23063:23080	2562643	0	True				
ANR	2562878	CallExpression	v1 . IsExceptional ( )		2562643	0					
ANR	2562879	Callee	v1 . IsExceptional		2562643	0					
ANR	2562880	MemberAccess	v1 . IsExceptional		2562643	0					
ANR	2562881	Identifier	v1		2562643	0					
ANR	2562882	Identifier	IsExceptional		2562643	1					
ANR	2562883	ArgumentList			2562643	1					
ANR	2562884	CompoundStatement		30:34:969:969	2562643	1					
ANR	2562885	ExpressionStatement	result . CopyFrom ( v1 )	910:3:23134:23155	2562643	0	True				
ANR	2562886	CallExpression	result . CopyFrom ( v1 )		2562643	0					
ANR	2562887	Callee	result . CopyFrom		2562643	0					
ANR	2562888	MemberAccess	result . CopyFrom		2562643	0					
ANR	2562889	Identifier	result		2562643	0					
ANR	2562890	Identifier	CopyFrom		2562643	1					
ANR	2562891	ArgumentList	v1		2562643	1					
ANR	2562892	Argument	v1		2562643	0					
ANR	2562893	Identifier	v1		2562643	0					
ANR	2562894	ReturnStatement	return SIG_CHLD1 ;	911:3:23160:23176	2562643	1	True				
ANR	2562895	Identifier	SIG_CHLD1		2562643	0					
ANR	2562896	ExpressionStatement	result . SetErrorValue ( )	914:2:23239:23262	2562643	1	True				
ANR	2562897	CallExpression	result . SetErrorValue ( )		2562643	0					
ANR	2562898	Callee	result . SetErrorValue		2562643	0					
ANR	2562899	MemberAccess	result . SetErrorValue		2562643	0					
ANR	2562900	Identifier	result		2562643	0					
ANR	2562901	Identifier	SetErrorValue		2562643	1					
ANR	2562902	ArgumentList			2562643	1					
ANR	2562903	ReturnStatement	return ( SIG_CHLD1 ) ;	915:2:23266:23285	2562643	2	True				
ANR	2562904	Identifier	SIG_CHLD1		2562643	0					
ANR	2562905	SwitchStatement	"switch ( coerceToNumber ( v1 , v2 ) )"		2562643	6					
ANR	2562906	Condition	"coerceToNumber ( v1 , v2 )"	919:9:23356:23378	2562643	0	True				
ANR	2562907	CallExpression	"coerceToNumber ( v1 , v2 )"		2562643	0					
ANR	2562908	Callee	coerceToNumber		2562643	0					
ANR	2562909	Identifier	coerceToNumber		2562643	0					
ANR	2562910	ArgumentList	v1		2562643	1					
ANR	2562911	Argument	v1		2562643	0					
ANR	2562912	Identifier	v1		2562643	0					
ANR	2562913	Argument	v2		2562643	1					
ANR	2562914	Identifier	v2		2562643	0					
ANR	2562915	CompoundStatement		41:34:1266:1266	2562643	1					
ANR	2562916	Label	case Value :: INTEGER_VALUE :	920:2:23385:23410	2562643	0	True				
ANR	2562917	Identifier	Value :: INTEGER_VALUE		2562643	0					
ANR	2562918	ExpressionStatement	v1 . IsIntegerValue ( i1 )	921:3:23415:23437	2562643	1	True				
ANR	2562919	CallExpression	v1 . IsIntegerValue ( i1 )		2562643	0					
ANR	2562920	Callee	v1 . IsIntegerValue		2562643	0					
ANR	2562921	MemberAccess	v1 . IsIntegerValue		2562643	0					
ANR	2562922	Identifier	v1		2562643	0					
ANR	2562923	Identifier	IsIntegerValue		2562643	1					
ANR	2562924	ArgumentList	i1		2562643	1					
ANR	2562925	Argument	i1		2562643	0					
ANR	2562926	Identifier	i1		2562643	0					
ANR	2562927	ExpressionStatement	v2 . IsIntegerValue ( i2 )	922:3:23442:23464	2562643	2	True				
ANR	2562928	CallExpression	v2 . IsIntegerValue ( i2 )		2562643	0					
ANR	2562929	Callee	v2 . IsIntegerValue		2562643	0					
ANR	2562930	MemberAccess	v2 . IsIntegerValue		2562643	0					
ANR	2562931	Identifier	v2		2562643	0					
ANR	2562932	Identifier	IsIntegerValue		2562643	1					
ANR	2562933	ArgumentList	i2		2562643	1					
ANR	2562934	Argument	i2		2562643	0					
ANR	2562935	Identifier	i2		2562643	0					
ANR	2562936	SwitchStatement	switch ( op )		2562643	3					
ANR	2562937	Condition	op	923:11:23477:23478	2562643	0	True				
ANR	2562938	Identifier	op		2562643	0					
ANR	2562939	CompoundStatement		45:15:1366:1366	2562643	1					
ANR	2562940	Label	case ADDITION_OP :	924:4:23487:23503	2562643	0	True				
ANR	2562941	Identifier	ADDITION_OP		2562643	0					
ANR	2562942	ExpressionStatement	result . SetIntegerValue ( i1 + i2 )	925:5:23512:23541	2562643	1	True				
ANR	2562943	CallExpression	result . SetIntegerValue ( i1 + i2 )		2562643	0					
ANR	2562944	Callee	result . SetIntegerValue		2562643	0					
ANR	2562945	MemberAccess	result . SetIntegerValue		2562643	0					
ANR	2562946	Identifier	result		2562643	0					
ANR	2562947	Identifier	SetIntegerValue		2562643	1					
ANR	2562948	ArgumentList	i1 + i2		2562643	1					
ANR	2562949	Argument	i1 + i2		2562643	0					
ANR	2562950	AdditiveExpression	i1 + i2		2562643	0		+			
ANR	2562951	Identifier	i1		2562643	0					
ANR	2562952	Identifier	i2		2562643	1					
ANR	2562953	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	926:5:23549:23580	2562643	2	True				
ANR	2562954	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2562643	0		|			
ANR	2562955	Identifier	SIG_CHLD1		2562643	0					
ANR	2562956	Identifier	SIG_CHLD2		2562643	1					
ANR	2562957	Label	case SUBTRACTION_OP :	928:4:23587:23606	2562643	3	True				
ANR	2562958	Identifier	SUBTRACTION_OP		2562643	0					
ANR	2562959	ExpressionStatement	result . SetIntegerValue ( i1 - i2 )	929:5:23614:23643	2562643	4	True				
ANR	2562960	CallExpression	result . SetIntegerValue ( i1 - i2 )		2562643	0					
ANR	2562961	Callee	result . SetIntegerValue		2562643	0					
ANR	2562962	MemberAccess	result . SetIntegerValue		2562643	0					
ANR	2562963	Identifier	result		2562643	0					
ANR	2562964	Identifier	SetIntegerValue		2562643	1					
ANR	2562965	ArgumentList	i1 - i2		2562643	1					
ANR	2562966	Argument	i1 - i2		2562643	0					
ANR	2562967	AdditiveExpression	i1 - i2		2562643	0		-			
ANR	2562968	Identifier	i1		2562643	0					
ANR	2562969	Identifier	i2		2562643	1					
ANR	2562970	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	930:5:23651:23682	2562643	5	True				
ANR	2562971	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2562643	0		|			
ANR	2562972	Identifier	SIG_CHLD1		2562643	0					
ANR	2562973	Identifier	SIG_CHLD2		2562643	1					
ANR	2562974	Label	case MULTIPLICATION_OP :	932:4:23689:23711	2562643	6	True				
ANR	2562975	Identifier	MULTIPLICATION_OP		2562643	0					
ANR	2562976	ExpressionStatement	result . SetIntegerValue ( i1 * i2 )	933:5:23719:23748	2562643	7	True				
ANR	2562977	CallExpression	result . SetIntegerValue ( i1 * i2 )		2562643	0					
ANR	2562978	Callee	result . SetIntegerValue		2562643	0					
ANR	2562979	MemberAccess	result . SetIntegerValue		2562643	0					
ANR	2562980	Identifier	result		2562643	0					
ANR	2562981	Identifier	SetIntegerValue		2562643	1					
ANR	2562982	ArgumentList	i1 * i2		2562643	1					
ANR	2562983	Argument	i1 * i2		2562643	0					
ANR	2562984	MultiplicativeExpression	i1 * i2		2562643	0		*			
ANR	2562985	Identifier	i1		2562643	0					
ANR	2562986	Identifier	i2		2562643	1					
ANR	2562987	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	934:5:23756:23787	2562643	8	True				
ANR	2562988	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2562643	0		|			
ANR	2562989	Identifier	SIG_CHLD1		2562643	0					
ANR	2562990	Identifier	SIG_CHLD2		2562643	1					
ANR	2562991	Label	case DIVISION_OP :	936:4:23794:23810	2562643	9	True				
ANR	2562992	Identifier	DIVISION_OP		2562643	0					
ANR	2562993	IfStatement	if ( i2 != 0 )		2562643	10					
ANR	2562994	Condition	i2 != 0	937:9:23823:23829	2562643	0	True				
ANR	2562995	EqualityExpression	i2 != 0		2562643	0		!=			
ANR	2562996	Identifier	i2		2562643	0					
ANR	2562997	PrimaryExpression	0		2562643	1					
ANR	2562998	CompoundStatement		59:18:1717:1717	2562643	1					
ANR	2562999	ExpressionStatement	result . SetIntegerValue ( i1 / i2 )	938:6:23840:23869	2562643	0	True				
ANR	2563000	CallExpression	result . SetIntegerValue ( i1 / i2 )		2562643	0					
ANR	2563001	Callee	result . SetIntegerValue		2562643	0					
ANR	2563002	MemberAccess	result . SetIntegerValue		2562643	0					
ANR	2563003	Identifier	result		2562643	0					
ANR	2563004	Identifier	SetIntegerValue		2562643	1					
ANR	2563005	ArgumentList	i1 / i2		2562643	1					
ANR	2563006	Argument	i1 / i2		2562643	0					
ANR	2563007	MultiplicativeExpression	i1 / i2		2562643	0		/			
ANR	2563008	Identifier	i1		2562643	0					
ANR	2563009	Identifier	i2		2562643	1					
ANR	2563010	ElseStatement	else		2562643	0					
ANR	2563011	CompoundStatement		61:12:1768:1768	2562643	0					
ANR	2563012	ExpressionStatement	result . SetErrorValue ( )	940:6:23891:23914	2562643	0	True				
ANR	2563013	CallExpression	result . SetErrorValue ( )		2562643	0					
ANR	2563014	Callee	result . SetErrorValue		2562643	0					
ANR	2563015	MemberAccess	result . SetErrorValue		2562643	0					
ANR	2563016	Identifier	result		2562643	0					
ANR	2563017	Identifier	SetErrorValue		2562643	1					
ANR	2563018	ArgumentList			2562643	1					
ANR	2563019	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	942:5:23928:23959	2562643	11	True				
ANR	2563020	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2562643	0		|			
ANR	2563021	Identifier	SIG_CHLD1		2562643	0					
ANR	2563022	Identifier	SIG_CHLD2		2562643	1					
ANR	2563023	Label	case MODULUS_OP :	944:4:23971:23986	2562643	12	True				
ANR	2563024	Identifier	MODULUS_OP		2562643	0					
ANR	2563025	IfStatement	if ( i2 != 0 )		2562643	13					
ANR	2563026	Condition	i2 != 0	945:9:23997:24003	2562643	0	True				
ANR	2563027	EqualityExpression	i2 != 0		2562643	0		!=			
ANR	2563028	Identifier	i2		2562643	0					
ANR	2563029	PrimaryExpression	0		2562643	1					
ANR	2563030	CompoundStatement		67:18:1891:1891	2562643	1					
ANR	2563031	ExpressionStatement	result . SetIntegerValue ( i1 % i2 )	946:6:24014:24043	2562643	0	True				
ANR	2563032	CallExpression	result . SetIntegerValue ( i1 % i2 )		2562643	0					
ANR	2563033	Callee	result . SetIntegerValue		2562643	0					
ANR	2563034	MemberAccess	result . SetIntegerValue		2562643	0					
ANR	2563035	Identifier	result		2562643	0					
ANR	2563036	Identifier	SetIntegerValue		2562643	1					
ANR	2563037	ArgumentList	i1 % i2		2562643	1					
ANR	2563038	Argument	i1 % i2		2562643	0					
ANR	2563039	MultiplicativeExpression	i1 % i2		2562643	0		%			
ANR	2563040	Identifier	i1		2562643	0					
ANR	2563041	Identifier	i2		2562643	1					
ANR	2563042	ElseStatement	else		2562643	0					
ANR	2563043	CompoundStatement		69:12:1942:1942	2562643	0					
ANR	2563044	ExpressionStatement	result . SetErrorValue ( )	948:6:24065:24088	2562643	0	True				
ANR	2563045	CallExpression	result . SetErrorValue ( )		2562643	0					
ANR	2563046	Callee	result . SetErrorValue		2562643	0					
ANR	2563047	MemberAccess	result . SetErrorValue		2562643	0					
ANR	2563048	Identifier	result		2562643	0					
ANR	2563049	Identifier	SetErrorValue		2562643	1					
ANR	2563050	ArgumentList			2562643	1					
ANR	2563051	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	950:5:24102:24133	2562643	14	True				
ANR	2563052	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2562643	0		|			
ANR	2563053	Identifier	SIG_CHLD1		2562643	0					
ANR	2563054	Identifier	SIG_CHLD2		2562643	1					
ANR	2563055	Label	default :	952:4:24147:24154	2562643	15	True				
ANR	2563056	Identifier	default		2562643	0					
ANR	2563057	ExpressionStatement	"CLASSAD_EXCEPT ( ""Should not get here"" )"	954:5:24191:24229	2562643	16	True				
ANR	2563058	CallExpression	"CLASSAD_EXCEPT ( ""Should not get here"" )"		2562643	0					
ANR	2563059	Callee	CLASSAD_EXCEPT		2562643	0					
ANR	2563060	Identifier	CLASSAD_EXCEPT		2562643	0					
ANR	2563061	ArgumentList	"""Should not get here"""		2562643	1					
ANR	2563062	Argument	"""Should not get here"""		2562643	0					
ANR	2563063	PrimaryExpression	"""Should not get here"""		2562643	0					
ANR	2563064	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	955:5:24236:24267	2562643	17	True				
ANR	2563065	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2562643	0		|			
ANR	2563066	Identifier	SIG_CHLD1		2562643	0					
ANR	2563067	Identifier	SIG_CHLD2		2562643	1					
ANR	2563068	Label	case Value :: REAL_VALUE :	958:2:24277:24299	2562643	4	True				
ANR	2563069	Identifier	Value :: REAL_VALUE		2562643	0					
ANR	2563070	ReturnStatement	"return ( doRealArithmetic ( op , v1 , v2 , result ) ) ;"	959:3:24304:24351	2562643	5	True				
ANR	2563071	CallExpression	"doRealArithmetic ( op , v1 , v2 , result )"		2562643	0					
ANR	2563072	Callee	doRealArithmetic		2562643	0					
ANR	2563073	Identifier	doRealArithmetic		2562643	0					
ANR	2563074	ArgumentList	op		2562643	1					
ANR	2563075	Argument	op		2562643	0					
ANR	2563076	Identifier	op		2562643	0					
ANR	2563077	Argument	v1		2562643	1					
ANR	2563078	Identifier	v1		2562643	0					
ANR	2563079	Argument	v2		2562643	2					
ANR	2563080	Identifier	v2		2562643	0					
ANR	2563081	Argument	result		2562643	3					
ANR	2563082	Identifier	result		2562643	0					
ANR	2563083	Label	case Value :: ABSOLUTE_TIME_VALUE :	961:2:24356:24387	2562643	6	True				
ANR	2563084	Identifier	Value :: ABSOLUTE_TIME_VALUE		2562643	0					
ANR	2563085	Label	case Value :: RELATIVE_TIME_VALUE :	962:2:24391:24422	2562643	7	True				
ANR	2563086	Identifier	Value :: RELATIVE_TIME_VALUE		2562643	0					
ANR	2563087	ReturnStatement	"return ( doTimeArithmetic ( op , v1 , v2 , result ) ) ;"	963:3:24427:24475	2562643	8	True				
ANR	2563088	CallExpression	"doTimeArithmetic ( op , v1 , v2 , result )"		2562643	0					
ANR	2563089	Callee	doTimeArithmetic		2562643	0					
ANR	2563090	Identifier	doTimeArithmetic		2562643	0					
ANR	2563091	ArgumentList	op		2562643	1					
ANR	2563092	Argument	op		2562643	0					
ANR	2563093	Identifier	op		2562643	0					
ANR	2563094	Argument	v1		2562643	1					
ANR	2563095	Identifier	v1		2562643	0					
ANR	2563096	Argument	v2		2562643	2					
ANR	2563097	Identifier	v2		2562643	0					
ANR	2563098	Argument	result		2562643	3					
ANR	2563099	Identifier	result		2562643	0					
ANR	2563100	Label	default :	965:2:24480:24487	2562643	9	True				
ANR	2563101	Identifier	default		2562643	0					
ANR	2563102	ExpressionStatement	"CLASSAD_EXCEPT ( ""Should not get here"" )"	967:3:24518:24556	2562643	10	True				
ANR	2563103	CallExpression	"CLASSAD_EXCEPT ( ""Should not get here"" )"		2562643	0					
ANR	2563104	Callee	CLASSAD_EXCEPT		2562643	0					
ANR	2563105	Identifier	CLASSAD_EXCEPT		2562643	0					
ANR	2563106	ArgumentList	"""Should not get here"""		2562643	1					
ANR	2563107	Argument	"""Should not get here"""		2562643	0					
ANR	2563108	PrimaryExpression	"""Should not get here"""		2562643	0					
ANR	2563109	ReturnStatement	return ( SIG_NONE ) ;	970:1:24563:24581	2562643	7	True				
ANR	2563110	Identifier	SIG_NONE		2562643	0					
ANR	2563111	ReturnType	int		2562643	1					
ANR	2563112	Identifier	Operation :: doArithmetic		2562643	2					
ANR	2563113	ParameterList	"OpKind op , Value & v1 , Value & v2 , Value & result"		2562643	3					
ANR	2563114	Parameter	OpKind op	878:14:22066:22074	2562643	0	True				
ANR	2563115	ParameterType	OpKind		2562643	0					
ANR	2563116	Identifier	op		2562643	1					
ANR	2563117	Parameter	Value & v1	878:25:22077:22085	2562643	1	True				
ANR	2563118	ParameterType	Value &		2562643	0					
ANR	2563119	Identifier	v1		2562643	1					
ANR	2563120	Parameter	Value & v2	878:36:22088:22096	2562643	2	True				
ANR	2563121	ParameterType	Value &		2562643	0					
ANR	2563122	Identifier	v2		2562643	1					
ANR	2563123	Parameter	Value & result	878:47:22099:22111	2562643	3	True				
ANR	2563124	ParameterType	Value &		2562643	0					
ANR	2563125	Identifier	result		2562643	1					
ANR	2563126	CFGEntryNode	ENTRY		2562643		True				
ANR	2563127	CFGExitNode	EXIT		2562643		True				
ANR	2563128	Symbol	v2 . IsIntegerValue		2562643						
ANR	2563129	Symbol	v2 . IsRelativeTimeValue		2562643						
ANR	2563130	Symbol	v1 . IsBooleanValue		2562643						
ANR	2563131	Symbol	SIG_CHLD1		2562643						
ANR	2563132	Symbol	SIG_CHLD2		2562643						
ANR	2563133	Symbol	doRealArithmetic		2562643						
ANR	2563134	Symbol	UNARY_MINUS_OP		2562643						
ANR	2563135	Symbol	v2 . IsRealValue		2562643						
ANR	2563136	Symbol	v1 . IsAbsoluteTimeValue		2562643						
ANR	2563137	Symbol	b1		2562643						
ANR	2563138	Symbol	result		2562643						
ANR	2563139	Symbol	op		2562643						
ANR	2563140	Symbol	coerceToNumber		2562643						
ANR	2563141	Symbol	i1		2562643						
ANR	2563142	Symbol	i2		2562643						
ANR	2563143	Symbol	SIG_NONE		2562643						
ANR	2563144	Symbol	v1 . IsExceptional		2562643						
ANR	2563145	Symbol	v1 . IsRealValue		2562643						
ANR	2563146	Symbol	v2 . IsBooleanValue		2562643						
ANR	2563147	Symbol	doTimeArithmetic		2562643						
ANR	2563148	Symbol	v1 . IsIntegerValue		2562643						
ANR	2563149	Symbol	v2 . IsAbsoluteTimeValue		2562643						
ANR	2563150	Symbol	v1		2562643						
ANR	2563151	Symbol	v1 . IsRelativeTimeValue		2562643						
ANR	2563152	Symbol	v2		2562643						
ANR	2563153	Symbol	t1		2562643						
ANR	2563154	Symbol	r1		2562643						
ANR	2563155	Function	Operation :: doLogical	974:0:24587:26616							
ANR	2563156	FunctionDef	"Operation :: doLogical (OpKind op , Value & v1 , Value & v2 , Value & result)"		2563155	0					
ANR	2563157	CompoundStatement		976:0:24662:26616	2563155	0					
ANR	2563158	IdentifierDeclStatement	"bool b1 , b2 ;"	977:1:24665:24677	2563155	0	True				
ANR	2563159	IdentifierDecl	b1		2563155	0					
ANR	2563160	IdentifierDeclType	bool		2563155	0					
ANR	2563161	Identifier	b1		2563155	1					
ANR	2563162	IdentifierDecl	b2		2563155	1					
ANR	2563163	IdentifierDeclType	bool		2563155	0					
ANR	2563164	Identifier	b2		2563155	1					
ANR	2563165	IfStatement	if ( ! v1 . IsBooleanValue ( b1 ) && v1 . IsBooleanValueEquiv ( b1 ) )		2563155	1					
ANR	2563166	Condition	! v1 . IsBooleanValue ( b1 ) && v1 . IsBooleanValueEquiv ( b1 )	980:5:24756:24811	2563155	0	True				
ANR	2563167	AndExpression	! v1 . IsBooleanValue ( b1 ) && v1 . IsBooleanValueEquiv ( b1 )		2563155	0		&&			
ANR	2563168	UnaryOperationExpression	! v1 . IsBooleanValue ( b1 )		2563155	0					
ANR	2563169	UnaryOperator	!		2563155	0					
ANR	2563170	CallExpression	v1 . IsBooleanValue ( b1 )		2563155	1					
ANR	2563171	Callee	v1 . IsBooleanValue		2563155	0					
ANR	2563172	MemberAccess	v1 . IsBooleanValue		2563155	0					
ANR	2563173	Identifier	v1		2563155	0					
ANR	2563174	Identifier	IsBooleanValue		2563155	1					
ANR	2563175	ArgumentList	b1		2563155	1					
ANR	2563176	Argument	b1		2563155	0					
ANR	2563177	Identifier	b1		2563155	0					
ANR	2563178	CallExpression	v1 . IsBooleanValueEquiv ( b1 )		2563155	1					
ANR	2563179	Callee	v1 . IsBooleanValueEquiv		2563155	0					
ANR	2563180	MemberAccess	v1 . IsBooleanValueEquiv		2563155	0					
ANR	2563181	Identifier	v1		2563155	0					
ANR	2563182	Identifier	IsBooleanValueEquiv		2563155	1					
ANR	2563183	ArgumentList	b1		2563155	1					
ANR	2563184	Argument	b1		2563155	0					
ANR	2563185	Identifier	b1		2563155	0					
ANR	2563186	CompoundStatement		5:64:152:152	2563155	1					
ANR	2563187	ExpressionStatement	v1 . SetBooleanValue ( b1 )	981:2:24819:24843	2563155	0	True				
ANR	2563188	CallExpression	v1 . SetBooleanValue ( b1 )		2563155	0					
ANR	2563189	Callee	v1 . SetBooleanValue		2563155	0					
ANR	2563190	MemberAccess	v1 . SetBooleanValue		2563155	0					
ANR	2563191	Identifier	v1		2563155	0					
ANR	2563192	Identifier	SetBooleanValue		2563155	1					
ANR	2563193	ArgumentList	b1		2563155	1					
ANR	2563194	Argument	b1		2563155	0					
ANR	2563195	Identifier	b1		2563155	0					
ANR	2563196	IfStatement	if ( ! v2 . IsBooleanValue ( b2 ) && v2 . IsBooleanValueEquiv ( b2 ) )		2563155	2					
ANR	2563197	Condition	! v2 . IsBooleanValue ( b2 ) && v2 . IsBooleanValueEquiv ( b2 )	983:5:24853:24908	2563155	0	True				
ANR	2563198	AndExpression	! v2 . IsBooleanValue ( b2 ) && v2 . IsBooleanValueEquiv ( b2 )		2563155	0		&&			
ANR	2563199	UnaryOperationExpression	! v2 . IsBooleanValue ( b2 )		2563155	0					
ANR	2563200	UnaryOperator	!		2563155	0					
ANR	2563201	CallExpression	v2 . IsBooleanValue ( b2 )		2563155	1					
ANR	2563202	Callee	v2 . IsBooleanValue		2563155	0					
ANR	2563203	MemberAccess	v2 . IsBooleanValue		2563155	0					
ANR	2563204	Identifier	v2		2563155	0					
ANR	2563205	Identifier	IsBooleanValue		2563155	1					
ANR	2563206	ArgumentList	b2		2563155	1					
ANR	2563207	Argument	b2		2563155	0					
ANR	2563208	Identifier	b2		2563155	0					
ANR	2563209	CallExpression	v2 . IsBooleanValueEquiv ( b2 )		2563155	1					
ANR	2563210	Callee	v2 . IsBooleanValueEquiv		2563155	0					
ANR	2563211	MemberAccess	v2 . IsBooleanValueEquiv		2563155	0					
ANR	2563212	Identifier	v2		2563155	0					
ANR	2563213	Identifier	IsBooleanValueEquiv		2563155	1					
ANR	2563214	ArgumentList	b2		2563155	1					
ANR	2563215	Argument	b2		2563155	0					
ANR	2563216	Identifier	b2		2563155	0					
ANR	2563217	CompoundStatement		8:64:249:249	2563155	1					
ANR	2563218	ExpressionStatement	v2 . SetBooleanValue ( b2 )	984:2:24916:24940	2563155	0	True				
ANR	2563219	CallExpression	v2 . SetBooleanValue ( b2 )		2563155	0					
ANR	2563220	Callee	v2 . SetBooleanValue		2563155	0					
ANR	2563221	MemberAccess	v2 . SetBooleanValue		2563155	0					
ANR	2563222	Identifier	v2		2563155	0					
ANR	2563223	Identifier	SetBooleanValue		2563155	1					
ANR	2563224	ArgumentList	b2		2563155	1					
ANR	2563225	Argument	b2		2563155	0					
ANR	2563226	Identifier	b2		2563155	0					
ANR	2563227	IdentifierDeclStatement	Value :: ValueType vt1 = v1 . GetType ( ) ;	987:1:24947:24982	2563155	3	True				
ANR	2563228	IdentifierDecl	vt1 = v1 . GetType ( )		2563155	0					
ANR	2563229	IdentifierDeclType	Value :: ValueType		2563155	0					
ANR	2563230	Identifier	vt1		2563155	1					
ANR	2563231	AssignmentExpression	vt1 = v1 . GetType ( )		2563155	2		=			
ANR	2563232	Identifier	vt1		2563155	0					
ANR	2563233	CallExpression	v1 . GetType ( )		2563155	1					
ANR	2563234	Callee	v1 . GetType		2563155	0					
ANR	2563235	MemberAccess	v1 . GetType		2563155	0					
ANR	2563236	Identifier	v1		2563155	0					
ANR	2563237	Identifier	GetType		2563155	1					
ANR	2563238	ArgumentList			2563155	1					
ANR	2563239	IdentifierDeclStatement	Value :: ValueType vt2 = v2 . GetType ( ) ;	988:1:24985:25020	2563155	4	True				
ANR	2563240	IdentifierDecl	vt2 = v2 . GetType ( )		2563155	0					
ANR	2563241	IdentifierDeclType	Value :: ValueType		2563155	0					
ANR	2563242	Identifier	vt2		2563155	1					
ANR	2563243	AssignmentExpression	vt2 = v2 . GetType ( )		2563155	2		=			
ANR	2563244	Identifier	vt2		2563155	0					
ANR	2563245	CallExpression	v2 . GetType ( )		2563155	1					
ANR	2563246	Callee	v2 . GetType		2563155	0					
ANR	2563247	MemberAccess	v2 . GetType		2563155	0					
ANR	2563248	Identifier	v2		2563155	0					
ANR	2563249	Identifier	GetType		2563155	1					
ANR	2563250	ArgumentList			2563155	1					
ANR	2563251	IfStatement	if ( vt1 != Value :: UNDEFINED_VALUE && vt1 != Value :: ERROR_VALUE && vt1 != Value :: BOOLEAN_VALUE )		2563155	5					
ANR	2563252	Condition	vt1 != Value :: UNDEFINED_VALUE && vt1 != Value :: ERROR_VALUE && vt1 != Value :: BOOLEAN_VALUE	990:5:25028:25114	2563155	0	True				
ANR	2563253	AndExpression	vt1 != Value :: UNDEFINED_VALUE && vt1 != Value :: ERROR_VALUE && vt1 != Value :: BOOLEAN_VALUE		2563155	0		&&			
ANR	2563254	EqualityExpression	vt1 != Value :: UNDEFINED_VALUE		2563155	0		!=			
ANR	2563255	Identifier	vt1		2563155	0					
ANR	2563256	Identifier	Value :: UNDEFINED_VALUE		2563155	1					
ANR	2563257	AndExpression	vt1 != Value :: ERROR_VALUE && vt1 != Value :: BOOLEAN_VALUE		2563155	1		&&			
ANR	2563258	EqualityExpression	vt1 != Value :: ERROR_VALUE		2563155	0		!=			
ANR	2563259	Identifier	vt1		2563155	0					
ANR	2563260	Identifier	Value :: ERROR_VALUE		2563155	1					
ANR	2563261	EqualityExpression	vt1 != Value :: BOOLEAN_VALUE		2563155	1		!=			
ANR	2563262	Identifier	vt1		2563155	0					
ANR	2563263	Identifier	Value :: BOOLEAN_VALUE		2563155	1					
ANR	2563264	CompoundStatement		16:31:455:455	2563155	1					
ANR	2563265	ExpressionStatement	result . SetErrorValue ( )	992:2:25122:25144	2563155	0	True				
ANR	2563266	CallExpression	result . SetErrorValue ( )		2563155	0					
ANR	2563267	Callee	result . SetErrorValue		2563155	0					
ANR	2563268	MemberAccess	result . SetErrorValue		2563155	0					
ANR	2563269	Identifier	result		2563155	0					
ANR	2563270	Identifier	SetErrorValue		2563155	1					
ANR	2563271	ArgumentList			2563155	1					
ANR	2563272	ReturnStatement	return SIG_CHLD1 ;	993:2:25148:25164	2563155	1	True				
ANR	2563273	Identifier	SIG_CHLD1		2563155	0					
ANR	2563274	IfStatement	if ( vt2 != Value :: UNDEFINED_VALUE && vt2 != Value :: ERROR_VALUE && vt2 != Value :: BOOLEAN_VALUE )		2563155	6					
ANR	2563275	Condition	vt2 != Value :: UNDEFINED_VALUE && vt2 != Value :: ERROR_VALUE && vt2 != Value :: BOOLEAN_VALUE	995:5:25174:25260	2563155	0	True				
ANR	2563276	AndExpression	vt2 != Value :: UNDEFINED_VALUE && vt2 != Value :: ERROR_VALUE && vt2 != Value :: BOOLEAN_VALUE		2563155	0		&&			
ANR	2563277	EqualityExpression	vt2 != Value :: UNDEFINED_VALUE		2563155	0		!=			
ANR	2563278	Identifier	vt2		2563155	0					
ANR	2563279	Identifier	Value :: UNDEFINED_VALUE		2563155	1					
ANR	2563280	AndExpression	vt2 != Value :: ERROR_VALUE && vt2 != Value :: BOOLEAN_VALUE		2563155	1		&&			
ANR	2563281	EqualityExpression	vt2 != Value :: ERROR_VALUE		2563155	0		!=			
ANR	2563282	Identifier	vt2		2563155	0					
ANR	2563283	Identifier	Value :: ERROR_VALUE		2563155	1					
ANR	2563284	EqualityExpression	vt2 != Value :: BOOLEAN_VALUE		2563155	1		!=			
ANR	2563285	Identifier	vt2		2563155	0					
ANR	2563286	Identifier	Value :: BOOLEAN_VALUE		2563155	1					
ANR	2563287	CompoundStatement		21:31:601:601	2563155	1					
ANR	2563288	ExpressionStatement	result . SetErrorValue ( )	997:2:25269:25291	2563155	0	True				
ANR	2563289	CallExpression	result . SetErrorValue ( )		2563155	0					
ANR	2563290	Callee	result . SetErrorValue		2563155	0					
ANR	2563291	MemberAccess	result . SetErrorValue		2563155	0					
ANR	2563292	Identifier	result		2563155	0					
ANR	2563293	Identifier	SetErrorValue		2563155	1					
ANR	2563294	ArgumentList			2563155	1					
ANR	2563295	ReturnStatement	return SIG_CHLD2 ;	998:2:25295:25311	2563155	1	True				
ANR	2563296	Identifier	SIG_CHLD2		2563155	0					
ANR	2563297	IfStatement	if ( op == LOGICAL_NOT_OP )		2563155	7					
ANR	2563298	Condition	op == LOGICAL_NOT_OP	1002:5:25349:25368	2563155	0	True				
ANR	2563299	EqualityExpression	op == LOGICAL_NOT_OP		2563155	0		==			
ANR	2563300	Identifier	op		2563155	0					
ANR	2563301	Identifier	LOGICAL_NOT_OP		2563155	1					
ANR	2563302	CompoundStatement		27:27:708:708	2563155	1					
ANR	2563303	IfStatement	if ( vt1 == Value :: BOOLEAN_VALUE )		2563155	0					
ANR	2563304	Condition	vt1 == Value :: BOOLEAN_VALUE	1003:6:25379:25405	2563155	0	True				
ANR	2563305	EqualityExpression	vt1 == Value :: BOOLEAN_VALUE		2563155	0		==			
ANR	2563306	Identifier	vt1		2563155	0					
ANR	2563307	Identifier	Value :: BOOLEAN_VALUE		2563155	1					
ANR	2563308	CompoundStatement		28:36:746:746	2563155	1					
ANR	2563309	ExpressionStatement	result . SetBooleanValue ( ! b1 )	1004:3:25414:25443	2563155	0	True				
ANR	2563310	CallExpression	result . SetBooleanValue ( ! b1 )		2563155	0					
ANR	2563311	Callee	result . SetBooleanValue		2563155	0					
ANR	2563312	MemberAccess	result . SetBooleanValue		2563155	0					
ANR	2563313	Identifier	result		2563155	0					
ANR	2563314	Identifier	SetBooleanValue		2563155	1					
ANR	2563315	ArgumentList	! b1		2563155	1					
ANR	2563316	Argument	! b1		2563155	0					
ANR	2563317	UnaryOperationExpression	! b1		2563155	0					
ANR	2563318	UnaryOperator	!		2563155	0					
ANR	2563319	Identifier	b1		2563155	1					
ANR	2563320	ElseStatement	else		2563155	0					
ANR	2563321	CompoundStatement		30:9:791:791	2563155	0					
ANR	2563322	ExpressionStatement	result . CopyFrom ( v1 )	1006:3:25459:25480	2563155	0	True				
ANR	2563323	CallExpression	result . CopyFrom ( v1 )		2563155	0					
ANR	2563324	Callee	result . CopyFrom		2563155	0					
ANR	2563325	MemberAccess	result . CopyFrom		2563155	0					
ANR	2563326	Identifier	result		2563155	0					
ANR	2563327	Identifier	CopyFrom		2563155	1					
ANR	2563328	ArgumentList	v1		2563155	1					
ANR	2563329	Argument	v1		2563155	0					
ANR	2563330	Identifier	v1		2563155	0					
ANR	2563331	ReturnStatement	return SIG_CHLD1 ;	1008:2:25488:25504	2563155	1	True				
ANR	2563332	Identifier	SIG_CHLD1		2563155	0					
ANR	2563333	IfStatement	if ( op == LOGICAL_OR_OP )		2563155	8					
ANR	2563334	Condition	op == LOGICAL_OR_OP	1011:5:25515:25533	2563155	0	True				
ANR	2563335	EqualityExpression	op == LOGICAL_OR_OP		2563155	0		==			
ANR	2563336	Identifier	op		2563155	0					
ANR	2563337	Identifier	LOGICAL_OR_OP		2563155	1					
ANR	2563338	CompoundStatement		36:26:873:873	2563155	1					
ANR	2563339	IfStatement	if ( vt1 == Value :: BOOLEAN_VALUE && b1 )		2563155	0					
ANR	2563340	Condition	vt1 == Value :: BOOLEAN_VALUE && b1	1012:6:25544:25576	2563155	0	True				
ANR	2563341	AndExpression	vt1 == Value :: BOOLEAN_VALUE && b1		2563155	0		&&			
ANR	2563342	EqualityExpression	vt1 == Value :: BOOLEAN_VALUE		2563155	0		==			
ANR	2563343	Identifier	vt1		2563155	0					
ANR	2563344	Identifier	Value :: BOOLEAN_VALUE		2563155	1					
ANR	2563345	Identifier	b1		2563155	1					
ANR	2563346	CompoundStatement		37:42:917:917	2563155	1					
ANR	2563347	ExpressionStatement	result . SetBooleanValue ( true )	1013:3:25585:25615	2563155	0	True				
ANR	2563348	CallExpression	result . SetBooleanValue ( true )		2563155	0					
ANR	2563349	Callee	result . SetBooleanValue		2563155	0					
ANR	2563350	MemberAccess	result . SetBooleanValue		2563155	0					
ANR	2563351	Identifier	result		2563155	0					
ANR	2563352	Identifier	SetBooleanValue		2563155	1					
ANR	2563353	ArgumentList	true		2563155	1					
ANR	2563354	Argument	true		2563155	0					
ANR	2563355	Identifier	true		2563155	0					
ANR	2563356	ReturnStatement	return SIG_CHLD1 ;	1014:3:25620:25636	2563155	1	True				
ANR	2563357	Identifier	SIG_CHLD1		2563155	0					
ANR	2563358	ElseStatement	else		2563155	0					
ANR	2563359	IfStatement	if ( vt1 == Value :: ERROR_VALUE )		2563155	0					
ANR	2563360	Condition	vt1 == Value :: ERROR_VALUE	1015:13:25651:25675	2563155	0	True				
ANR	2563361	EqualityExpression	vt1 == Value :: ERROR_VALUE		2563155	0		==			
ANR	2563362	Identifier	vt1		2563155	0					
ANR	2563363	Identifier	Value :: ERROR_VALUE		2563155	1					
ANR	2563364	CompoundStatement		40:41:1016:1016	2563155	1					
ANR	2563365	ExpressionStatement	result . SetErrorValue ( )	1016:3:25684:25707	2563155	0	True				
ANR	2563366	CallExpression	result . SetErrorValue ( )		2563155	0					
ANR	2563367	Callee	result . SetErrorValue		2563155	0					
ANR	2563368	MemberAccess	result . SetErrorValue		2563155	0					
ANR	2563369	Identifier	result		2563155	0					
ANR	2563370	Identifier	SetErrorValue		2563155	1					
ANR	2563371	ArgumentList			2563155	1					
ANR	2563372	ReturnStatement	return SIG_CHLD1 ;	1017:3:25712:25728	2563155	1	True				
ANR	2563373	Identifier	SIG_CHLD1		2563155	0					
ANR	2563374	ElseStatement	else		2563155	0					
ANR	2563375	IfStatement	if ( vt1 == Value :: BOOLEAN_VALUE && ! b1 )		2563155	0					
ANR	2563376	Condition	vt1 == Value :: BOOLEAN_VALUE && ! b1	1018:13:25743:25776	2563155	0	True				
ANR	2563377	AndExpression	vt1 == Value :: BOOLEAN_VALUE && ! b1		2563155	0		&&			
ANR	2563378	EqualityExpression	vt1 == Value :: BOOLEAN_VALUE		2563155	0		==			
ANR	2563379	Identifier	vt1		2563155	0					
ANR	2563380	Identifier	Value :: BOOLEAN_VALUE		2563155	1					
ANR	2563381	UnaryOperationExpression	! b1		2563155	1					
ANR	2563382	UnaryOperator	!		2563155	0					
ANR	2563383	Identifier	b1		2563155	1					
ANR	2563384	CompoundStatement		43:50:1117:1117	2563155	1					
ANR	2563385	ExpressionStatement	result . CopyFrom ( v2 )	1019:3:25785:25806	2563155	0	True				
ANR	2563386	CallExpression	result . CopyFrom ( v2 )		2563155	0					
ANR	2563387	Callee	result . CopyFrom		2563155	0					
ANR	2563388	MemberAccess	result . CopyFrom		2563155	0					
ANR	2563389	Identifier	result		2563155	0					
ANR	2563390	Identifier	CopyFrom		2563155	1					
ANR	2563391	ArgumentList	v2		2563155	1					
ANR	2563392	Argument	v2		2563155	0					
ANR	2563393	Identifier	v2		2563155	0					
ANR	2563394	ElseStatement	else		2563155	0					
ANR	2563395	IfStatement	if ( vt2 != Value :: BOOLEAN_VALUE )		2563155	0					
ANR	2563396	Condition	vt2 != Value :: BOOLEAN_VALUE	1020:13:25821:25847	2563155	0	True				
ANR	2563397	EqualityExpression	vt2 != Value :: BOOLEAN_VALUE		2563155	0		!=			
ANR	2563398	Identifier	vt2		2563155	0					
ANR	2563399	Identifier	Value :: BOOLEAN_VALUE		2563155	1					
ANR	2563400	CompoundStatement		45:43:1188:1188	2563155	1					
ANR	2563401	ExpressionStatement	result . CopyFrom ( v2 )	1021:3:25856:25877	2563155	0	True				
ANR	2563402	CallExpression	result . CopyFrom ( v2 )		2563155	0					
ANR	2563403	Callee	result . CopyFrom		2563155	0					
ANR	2563404	MemberAccess	result . CopyFrom		2563155	0					
ANR	2563405	Identifier	result		2563155	0					
ANR	2563406	Identifier	CopyFrom		2563155	1					
ANR	2563407	ArgumentList	v2		2563155	1					
ANR	2563408	Argument	v2		2563155	0					
ANR	2563409	Identifier	v2		2563155	0					
ANR	2563410	ElseStatement	else		2563155	0					
ANR	2563411	IfStatement	if ( b2 )		2563155	0					
ANR	2563412	Condition	b2	1022:13:25892:25893	2563155	0	True				
ANR	2563413	Identifier	b2		2563155	0					
ANR	2563414	CompoundStatement		47:18:1234:1234	2563155	1					
ANR	2563415	ExpressionStatement	result . SetBooleanValue ( true )	1023:3:25902:25932	2563155	0	True				
ANR	2563416	CallExpression	result . SetBooleanValue ( true )		2563155	0					
ANR	2563417	Callee	result . SetBooleanValue		2563155	0					
ANR	2563418	MemberAccess	result . SetBooleanValue		2563155	0					
ANR	2563419	Identifier	result		2563155	0					
ANR	2563420	Identifier	SetBooleanValue		2563155	1					
ANR	2563421	ArgumentList	true		2563155	1					
ANR	2563422	Argument	true		2563155	0					
ANR	2563423	Identifier	true		2563155	0					
ANR	2563424	ElseStatement	else		2563155	0					
ANR	2563425	CompoundStatement		49:9:1280:1280	2563155	0					
ANR	2563426	ExpressionStatement	result . SetUndefinedValue ( )	1025:3:25948:25975	2563155	0	True				
ANR	2563427	CallExpression	result . SetUndefinedValue ( )		2563155	0					
ANR	2563428	Callee	result . SetUndefinedValue		2563155	0					
ANR	2563429	MemberAccess	result . SetUndefinedValue		2563155	0					
ANR	2563430	Identifier	result		2563155	0					
ANR	2563431	Identifier	SetUndefinedValue		2563155	1					
ANR	2563432	ArgumentList			2563155	1					
ANR	2563433	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	1027:2:25983:26014	2563155	1	True				
ANR	2563434	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2563155	0		|			
ANR	2563435	Identifier	SIG_CHLD1		2563155	0					
ANR	2563436	Identifier	SIG_CHLD2		2563155	1					
ANR	2563437	ElseStatement	else		2563155	0					
ANR	2563438	IfStatement	if ( op == LOGICAL_AND_OP )		2563155	0					
ANR	2563439	Condition	op == LOGICAL_AND_OP	1028:12:26028:26047	2563155	0	True				
ANR	2563440	EqualityExpression	op == LOGICAL_AND_OP		2563155	0		==			
ANR	2563441	Identifier	op		2563155	0					
ANR	2563442	Identifier	LOGICAL_AND_OP		2563155	1					
ANR	2563443	CompoundStatement		53:34:1387:1387	2563155	1					
ANR	2563444	IfStatement	if ( vt1 == Value :: BOOLEAN_VALUE && ! b1 )		2563155	0					
ANR	2563445	Condition	vt1 == Value :: BOOLEAN_VALUE && ! b1	1029:12:26064:26097	2563155	0	True				
ANR	2563446	AndExpression	vt1 == Value :: BOOLEAN_VALUE && ! b1		2563155	0		&&			
ANR	2563447	EqualityExpression	vt1 == Value :: BOOLEAN_VALUE		2563155	0		==			
ANR	2563448	Identifier	vt1		2563155	0					
ANR	2563449	Identifier	Value :: BOOLEAN_VALUE		2563155	1					
ANR	2563450	UnaryOperationExpression	! b1		2563155	1					
ANR	2563451	UnaryOperator	!		2563155	0					
ANR	2563452	Identifier	b1		2563155	1					
ANR	2563453	CompoundStatement		54:49:1438:1438	2563155	1					
ANR	2563454	ExpressionStatement	result . SetBooleanValue ( false )	1030:12:26115:26146	2563155	0	True				
ANR	2563455	CallExpression	result . SetBooleanValue ( false )		2563155	0					
ANR	2563456	Callee	result . SetBooleanValue		2563155	0					
ANR	2563457	MemberAccess	result . SetBooleanValue		2563155	0					
ANR	2563458	Identifier	result		2563155	0					
ANR	2563459	Identifier	SetBooleanValue		2563155	1					
ANR	2563460	ArgumentList	false		2563155	1					
ANR	2563461	Argument	false		2563155	0					
ANR	2563462	Identifier	false		2563155	0					
ANR	2563463	ReturnStatement	return SIG_CHLD1 ;	1031:3:26151:26167	2563155	1	True				
ANR	2563464	Identifier	SIG_CHLD1		2563155	0					
ANR	2563465	ElseStatement	else		2563155	0					
ANR	2563466	IfStatement	if ( vt1 == Value :: ERROR_VALUE )		2563155	0					
ANR	2563467	Condition	vt1 == Value :: ERROR_VALUE	1032:13:26182:26206	2563155	0	True				
ANR	2563468	EqualityExpression	vt1 == Value :: ERROR_VALUE		2563155	0		==			
ANR	2563469	Identifier	vt1		2563155	0					
ANR	2563470	Identifier	Value :: ERROR_VALUE		2563155	1					
ANR	2563471	CompoundStatement		57:41:1547:1547	2563155	1					
ANR	2563472	ExpressionStatement	result . SetErrorValue ( )	1033:3:26215:26238	2563155	0	True				
ANR	2563473	CallExpression	result . SetErrorValue ( )		2563155	0					
ANR	2563474	Callee	result . SetErrorValue		2563155	0					
ANR	2563475	MemberAccess	result . SetErrorValue		2563155	0					
ANR	2563476	Identifier	result		2563155	0					
ANR	2563477	Identifier	SetErrorValue		2563155	1					
ANR	2563478	ArgumentList			2563155	1					
ANR	2563479	ReturnStatement	return SIG_CHLD1 ;	1034:3:26243:26259	2563155	1	True				
ANR	2563480	Identifier	SIG_CHLD1		2563155	0					
ANR	2563481	ElseStatement	else		2563155	0					
ANR	2563482	IfStatement	if ( vt1 == Value :: BOOLEAN_VALUE && b1 )		2563155	0					
ANR	2563483	Condition	vt1 == Value :: BOOLEAN_VALUE && b1	1035:13:26274:26306	2563155	0	True				
ANR	2563484	AndExpression	vt1 == Value :: BOOLEAN_VALUE && b1		2563155	0		&&			
ANR	2563485	EqualityExpression	vt1 == Value :: BOOLEAN_VALUE		2563155	0		==			
ANR	2563486	Identifier	vt1		2563155	0					
ANR	2563487	Identifier	Value :: BOOLEAN_VALUE		2563155	1					
ANR	2563488	Identifier	b1		2563155	1					
ANR	2563489	CompoundStatement		60:49:1647:1647	2563155	1					
ANR	2563490	ExpressionStatement	result . CopyFrom ( v2 )	1036:3:26315:26336	2563155	0	True				
ANR	2563491	CallExpression	result . CopyFrom ( v2 )		2563155	0					
ANR	2563492	Callee	result . CopyFrom		2563155	0					
ANR	2563493	MemberAccess	result . CopyFrom		2563155	0					
ANR	2563494	Identifier	result		2563155	0					
ANR	2563495	Identifier	CopyFrom		2563155	1					
ANR	2563496	ArgumentList	v2		2563155	1					
ANR	2563497	Argument	v2		2563155	0					
ANR	2563498	Identifier	v2		2563155	0					
ANR	2563499	ElseStatement	else		2563155	0					
ANR	2563500	IfStatement	if ( vt2 != Value :: BOOLEAN_VALUE )		2563155	0					
ANR	2563501	Condition	vt2 != Value :: BOOLEAN_VALUE	1037:13:26351:26377	2563155	0	True				
ANR	2563502	EqualityExpression	vt2 != Value :: BOOLEAN_VALUE		2563155	0		!=			
ANR	2563503	Identifier	vt2		2563155	0					
ANR	2563504	Identifier	Value :: BOOLEAN_VALUE		2563155	1					
ANR	2563505	CompoundStatement		62:43:1718:1718	2563155	1					
ANR	2563506	ExpressionStatement	result . CopyFrom ( v2 )	1038:3:26386:26407	2563155	0	True				
ANR	2563507	CallExpression	result . CopyFrom ( v2 )		2563155	0					
ANR	2563508	Callee	result . CopyFrom		2563155	0					
ANR	2563509	MemberAccess	result . CopyFrom		2563155	0					
ANR	2563510	Identifier	result		2563155	0					
ANR	2563511	Identifier	CopyFrom		2563155	1					
ANR	2563512	ArgumentList	v2		2563155	1					
ANR	2563513	Argument	v2		2563155	0					
ANR	2563514	Identifier	v2		2563155	0					
ANR	2563515	ElseStatement	else		2563155	0					
ANR	2563516	IfStatement	if ( ! b2 )		2563155	0					
ANR	2563517	Condition	! b2	1039:13:26422:26424	2563155	0	True				
ANR	2563518	UnaryOperationExpression	! b2		2563155	0					
ANR	2563519	UnaryOperator	!		2563155	0					
ANR	2563520	Identifier	b2		2563155	1					
ANR	2563521	CompoundStatement		64:19:1765:1765	2563155	1					
ANR	2563522	ExpressionStatement	result . SetBooleanValue ( false )	1040:3:26433:26464	2563155	0	True				
ANR	2563523	CallExpression	result . SetBooleanValue ( false )		2563155	0					
ANR	2563524	Callee	result . SetBooleanValue		2563155	0					
ANR	2563525	MemberAccess	result . SetBooleanValue		2563155	0					
ANR	2563526	Identifier	result		2563155	0					
ANR	2563527	Identifier	SetBooleanValue		2563155	1					
ANR	2563528	ArgumentList	false		2563155	1					
ANR	2563529	Argument	false		2563155	0					
ANR	2563530	Identifier	false		2563155	0					
ANR	2563531	ElseStatement	else		2563155	0					
ANR	2563532	CompoundStatement		66:9:1812:1812	2563155	0					
ANR	2563533	ExpressionStatement	result . SetUndefinedValue ( )	1042:3:26480:26507	2563155	0	True				
ANR	2563534	CallExpression	result . SetUndefinedValue ( )		2563155	0					
ANR	2563535	Callee	result . SetUndefinedValue		2563155	0					
ANR	2563536	MemberAccess	result . SetUndefinedValue		2563155	0					
ANR	2563537	Identifier	result		2563155	0					
ANR	2563538	Identifier	SetUndefinedValue		2563155	1					
ANR	2563539	ArgumentList			2563155	1					
ANR	2563540	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	1044:2:26515:26546	2563155	1	True				
ANR	2563541	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2563155	0		|			
ANR	2563542	Identifier	SIG_CHLD1		2563155	0					
ANR	2563543	Identifier	SIG_CHLD2		2563155	1					
ANR	2563544	ExpressionStatement	"CLASSAD_EXCEPT ( ""Shouldn't reach here"" )"	1047:1:26553:26593	2563155	9	True				
ANR	2563545	CallExpression	"CLASSAD_EXCEPT ( ""Shouldn't reach here"" )"		2563155	0					
ANR	2563546	Callee	CLASSAD_EXCEPT		2563155	0					
ANR	2563547	Identifier	CLASSAD_EXCEPT		2563155	0					
ANR	2563548	ArgumentList	"""Shouldn't reach here"""		2563155	1					
ANR	2563549	Argument	"""Shouldn't reach here"""		2563155	0					
ANR	2563550	PrimaryExpression	"""Shouldn't reach here"""		2563155	0					
ANR	2563551	ReturnStatement	return ( SIG_NONE ) ;	1048:1:26596:26614	2563155	10	True				
ANR	2563552	Identifier	SIG_NONE		2563155	0					
ANR	2563553	ReturnType	int		2563155	1					
ANR	2563554	Identifier	Operation :: doLogical		2563155	2					
ANR	2563555	ParameterList	"OpKind op , Value & v1 , Value & v2 , Value & result"		2563155	3					
ANR	2563556	Parameter	OpKind op	975:11:24614:24622	2563155	0	True				
ANR	2563557	ParameterType	OpKind		2563155	0					
ANR	2563558	Identifier	op		2563155	1					
ANR	2563559	Parameter	Value & v1	975:22:24625:24633	2563155	1	True				
ANR	2563560	ParameterType	Value &		2563155	0					
ANR	2563561	Identifier	v1		2563155	1					
ANR	2563562	Parameter	Value & v2	975:33:24636:24644	2563155	2	True				
ANR	2563563	ParameterType	Value &		2563155	0					
ANR	2563564	Identifier	v2		2563155	1					
ANR	2563565	Parameter	Value & result	975:44:24647:24659	2563155	3	True				
ANR	2563566	ParameterType	Value &		2563155	0					
ANR	2563567	Identifier	result		2563155	1					
ANR	2563568	CFGEntryNode	ENTRY		2563155		True				
ANR	2563569	CFGExitNode	EXIT		2563155		True				
ANR	2563570	Symbol	LOGICAL_AND_OP		2563155						
ANR	2563571	Symbol	LOGICAL_OR_OP		2563155						
ANR	2563572	Symbol	v1 . IsBooleanValue		2563155						
ANR	2563573	Symbol	Value :: ERROR_VALUE		2563155						
ANR	2563574	Symbol	SIG_CHLD1		2563155						
ANR	2563575	Symbol	SIG_CHLD2		2563155						
ANR	2563576	Symbol	b1		2563155						
ANR	2563577	Symbol	result		2563155						
ANR	2563578	Symbol	b2		2563155						
ANR	2563579	Symbol	v2 . GetType		2563155						
ANR	2563580	Symbol	Value :: UNDEFINED_VALUE		2563155						
ANR	2563581	Symbol	op		2563155						
ANR	2563582	Symbol	false		2563155						
ANR	2563583	Symbol	SIG_NONE		2563155						
ANR	2563584	Symbol	v2 . IsBooleanValueEquiv		2563155						
ANR	2563585	Symbol	Value :: BOOLEAN_VALUE		2563155						
ANR	2563586	Symbol	vt1		2563155						
ANR	2563587	Symbol	vt2		2563155						
ANR	2563588	Symbol	v2 . IsBooleanValue		2563155						
ANR	2563589	Symbol	v1 . IsBooleanValueEquiv		2563155						
ANR	2563590	Symbol	true		2563155						
ANR	2563591	Symbol	v1		2563155						
ANR	2563592	Symbol	v2		2563155						
ANR	2563593	Symbol	LOGICAL_NOT_OP		2563155						
ANR	2563594	Symbol	v1 . GetType		2563155						
ANR	2563595	Function	Operation :: doBitwise	1053:0:26621:28403							
ANR	2563596	FunctionDef	"Operation :: doBitwise (OpKind op , Value & v1 , Value & v2 , Value & result)"		2563595	0					
ANR	2563597	CompoundStatement		1055:0:26696:28403	2563595	0					
ANR	2563598	IdentifierDeclStatement	"int i1 , i2 ;"	1056:1:26699:26709	2563595	0	True				
ANR	2563599	IdentifierDecl	i1		2563595	0					
ANR	2563600	IdentifierDeclType	int		2563595	0					
ANR	2563601	Identifier	i1		2563595	1					
ANR	2563602	IdentifierDecl	i2		2563595	1					
ANR	2563603	IdentifierDeclType	int		2563595	0					
ANR	2563604	Identifier	i2		2563595	1					
ANR	2563605	IdentifierDeclStatement	int signMask = ~INT_MAX ;	1057:1:26712:26735	2563595	1	True				
ANR	2563606	IdentifierDecl	signMask = ~INT_MAX		2563595	0					
ANR	2563607	IdentifierDeclType	int		2563595	0					
ANR	2563608	Identifier	signMask		2563595	1					
ANR	2563609	AssignmentExpression	signMask = ~INT_MAX		2563595	2		=			
ANR	2563610	Identifier	~INT_MAX		2563595	0					
ANR	2563611	Identifier	~INT_MAX		2563595	1					
ANR	2563612	IdentifierDeclStatement	int val ;	1058:1:26777:26784	2563595	2	True				
ANR	2563613	IdentifierDecl	val		2563595	0					
ANR	2563614	IdentifierDeclType	int		2563595	0					
ANR	2563615	Identifier	val		2563595	1					
ANR	2563616	IfStatement	if ( op == BITWISE_NOT_OP )		2563595	3					
ANR	2563617	Condition	op == BITWISE_NOT_OP	1061:5:26844:26863	2563595	0	True				
ANR	2563618	EqualityExpression	op == BITWISE_NOT_OP		2563595	0		==			
ANR	2563619	Identifier	op		2563595	0					
ANR	2563620	Identifier	BITWISE_NOT_OP		2563595	1					
ANR	2563621	CompoundStatement		7:27:169:169	2563595	1					
ANR	2563622	IfStatement	if ( ! v1 . IsIntegerValue ( i1 ) )		2563595	0					
ANR	2563623	Condition	! v1 . IsIntegerValue ( i1 )	1062:6:26874:26895	2563595	0	True				
ANR	2563624	UnaryOperationExpression	! v1 . IsIntegerValue ( i1 )		2563595	0					
ANR	2563625	UnaryOperator	!		2563595	0					
ANR	2563626	CallExpression	v1 . IsIntegerValue ( i1 )		2563595	1					
ANR	2563627	Callee	v1 . IsIntegerValue		2563595	0					
ANR	2563628	MemberAccess	v1 . IsIntegerValue		2563595	0					
ANR	2563629	Identifier	v1		2563595	0					
ANR	2563630	Identifier	IsIntegerValue		2563595	1					
ANR	2563631	ArgumentList	i1		2563595	1					
ANR	2563632	Argument	i1		2563595	0					
ANR	2563633	Identifier	i1		2563595	0					
ANR	2563634	CompoundStatement		8:30:201:201	2563595	1					
ANR	2563635	ExpressionStatement	result . SetErrorValue ( )	1063:3:26903:26925	2563595	0	True				
ANR	2563636	CallExpression	result . SetErrorValue ( )		2563595	0					
ANR	2563637	Callee	result . SetErrorValue		2563595	0					
ANR	2563638	MemberAccess	result . SetErrorValue		2563595	0					
ANR	2563639	Identifier	result		2563595	0					
ANR	2563640	Identifier	SetErrorValue		2563595	1					
ANR	2563641	ArgumentList			2563595	1					
ANR	2563642	ReturnStatement	return SIG_CHLD1 ;	1064:3:26930:26946	2563595	1	True				
ANR	2563643	Identifier	SIG_CHLD1		2563595	0					
ANR	2563644	ElseStatement	else		2563595	0					
ANR	2563645	IfStatement	if ( ! v1 . IsIntegerValue ( i1 ) || ! v2 . IsIntegerValue ( i2 ) )		2563595	0					
ANR	2563646	Condition	! v1 . IsIntegerValue ( i1 ) || ! v2 . IsIntegerValue ( i2 )	1066:12:26964:27011	2563595	0	True				
ANR	2563647	OrExpression	! v1 . IsIntegerValue ( i1 ) || ! v2 . IsIntegerValue ( i2 )		2563595	0		||			
ANR	2563648	UnaryOperationExpression	! v1 . IsIntegerValue ( i1 )		2563595	0					
ANR	2563649	UnaryOperator	!		2563595	0					
ANR	2563650	CallExpression	v1 . IsIntegerValue ( i1 )		2563595	1					
ANR	2563651	Callee	v1 . IsIntegerValue		2563595	0					
ANR	2563652	MemberAccess	v1 . IsIntegerValue		2563595	0					
ANR	2563653	Identifier	v1		2563595	0					
ANR	2563654	Identifier	IsIntegerValue		2563595	1					
ANR	2563655	ArgumentList	i1		2563595	1					
ANR	2563656	Argument	i1		2563595	0					
ANR	2563657	Identifier	i1		2563595	0					
ANR	2563658	UnaryOperationExpression	! v2 . IsIntegerValue ( i2 )		2563595	1					
ANR	2563659	UnaryOperator	!		2563595	0					
ANR	2563660	CallExpression	v2 . IsIntegerValue ( i2 )		2563595	1					
ANR	2563661	Callee	v2 . IsIntegerValue		2563595	0					
ANR	2563662	MemberAccess	v2 . IsIntegerValue		2563595	0					
ANR	2563663	Identifier	v2		2563595	0					
ANR	2563664	Identifier	IsIntegerValue		2563595	1					
ANR	2563665	ArgumentList	i2		2563595	1					
ANR	2563666	Argument	i2		2563595	0					
ANR	2563667	Identifier	i2		2563595	0					
ANR	2563668	CompoundStatement		12:62:317:317	2563595	1					
ANR	2563669	ExpressionStatement	result . SetErrorValue ( )	1067:2:27018:27040	2563595	0	True				
ANR	2563670	CallExpression	result . SetErrorValue ( )		2563595	0					
ANR	2563671	Callee	result . SetErrorValue		2563595	0					
ANR	2563672	MemberAccess	result . SetErrorValue		2563595	0					
ANR	2563673	Identifier	result		2563595	0					
ANR	2563674	Identifier	SetErrorValue		2563595	1					
ANR	2563675	ArgumentList			2563595	1					
ANR	2563676	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	1068:2:27044:27075	2563595	1	True				
ANR	2563677	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2563595	0		|			
ANR	2563678	Identifier	SIG_CHLD1		2563595	0					
ANR	2563679	Identifier	SIG_CHLD2		2563595	1					
ANR	2563680	SwitchStatement	switch ( op )		2563595	4					
ANR	2563681	Condition	op	1071:9:27090:27091	2563595	0	True				
ANR	2563682	Identifier	op		2563595	0					
ANR	2563683	CompoundStatement		17:13:397:397	2563595	1					
ANR	2563684	Label	case BITWISE_NOT_OP :	1072:2:27098:27117	2563595	0	True				
ANR	2563685	Identifier	BITWISE_NOT_OP		2563595	0					
ANR	2563686	ExpressionStatement	result . SetIntegerValue ( ~i1 )	1072:23:27119:27146	2563595	1	True				
ANR	2563687	CallExpression	result . SetIntegerValue ( ~i1 )		2563595	0					
ANR	2563688	Callee	result . SetIntegerValue		2563595	0					
ANR	2563689	MemberAccess	result . SetIntegerValue		2563595	0					
ANR	2563690	Identifier	result		2563595	0					
ANR	2563691	Identifier	SetIntegerValue		2563595	1					
ANR	2563692	ArgumentList	~i1		2563595	1					
ANR	2563693	Argument	~i1		2563595	0					
ANR	2563694	Identifier	~i1		2563595	0					
ANR	2563695	BreakStatement	break ;	1072:52:27148:27153	2563595	2	True				
ANR	2563696	Label	case BITWISE_OR_OP :	1073:2:27157:27175	2563595	3	True				
ANR	2563697	Identifier	BITWISE_OR_OP		2563595	0					
ANR	2563698	ExpressionStatement	result . SetIntegerValue ( i1 | i2 )	1073:23:27178:27207	2563595	4	True				
ANR	2563699	CallExpression	result . SetIntegerValue ( i1 | i2 )		2563595	0					
ANR	2563700	Callee	result . SetIntegerValue		2563595	0					
ANR	2563701	MemberAccess	result . SetIntegerValue		2563595	0					
ANR	2563702	Identifier	result		2563595	0					
ANR	2563703	Identifier	SetIntegerValue		2563595	1					
ANR	2563704	ArgumentList	i1 | i2		2563595	1					
ANR	2563705	Argument	i1 | i2		2563595	0					
ANR	2563706	InclusiveOrExpression	i1 | i2		2563595	0		|			
ANR	2563707	Identifier	i1		2563595	0					
ANR	2563708	Identifier	i2		2563595	1					
ANR	2563709	BreakStatement	break ;	1073:54:27209:27214	2563595	5	True				
ANR	2563710	Label	case BITWISE_AND_OP :	1074:2:27218:27237	2563595	6	True				
ANR	2563711	Identifier	BITWISE_AND_OP		2563595	0					
ANR	2563712	ExpressionStatement	result . SetIntegerValue ( i1 & i2 )	1074:23:27239:27268	2563595	7	True				
ANR	2563713	CallExpression	result . SetIntegerValue ( i1 & i2 )		2563595	0					
ANR	2563714	Callee	result . SetIntegerValue		2563595	0					
ANR	2563715	MemberAccess	result . SetIntegerValue		2563595	0					
ANR	2563716	Identifier	result		2563595	0					
ANR	2563717	Identifier	SetIntegerValue		2563595	1					
ANR	2563718	ArgumentList	i1 & i2		2563595	1					
ANR	2563719	Argument	i1 & i2		2563595	0					
ANR	2563720	BitAndExpression	i1 & i2		2563595	0		&			
ANR	2563721	Identifier	i1		2563595	0					
ANR	2563722	Identifier	i2		2563595	1					
ANR	2563723	BreakStatement	break ;	1074:54:27270:27275	2563595	8	True				
ANR	2563724	Label	case BITWISE_XOR_OP :	1075:2:27279:27298	2563595	9	True				
ANR	2563725	Identifier	BITWISE_XOR_OP		2563595	0					
ANR	2563726	ExpressionStatement	result . SetIntegerValue ( i1 ^ i2 )	1075:23:27300:27329	2563595	10	True				
ANR	2563727	CallExpression	result . SetIntegerValue ( i1 ^ i2 )		2563595	0					
ANR	2563728	Callee	result . SetIntegerValue		2563595	0					
ANR	2563729	MemberAccess	result . SetIntegerValue		2563595	0					
ANR	2563730	Identifier	result		2563595	0					
ANR	2563731	Identifier	SetIntegerValue		2563595	1					
ANR	2563732	ArgumentList	i1 ^ i2		2563595	1					
ANR	2563733	Argument	i1 ^ i2		2563595	0					
ANR	2563734	ExclusiveOrExpression	i1 ^ i2		2563595	0		^			
ANR	2563735	Identifier	i1		2563595	0					
ANR	2563736	Identifier	i2		2563595	1					
ANR	2563737	BreakStatement	break ;	1075:54:27331:27336	2563595	11	True				
ANR	2563738	Label	case LEFT_SHIFT_OP :	1076:2:27340:27358	2563595	12	True				
ANR	2563739	Identifier	LEFT_SHIFT_OP		2563595	0					
ANR	2563740	ExpressionStatement	result . SetIntegerValue ( i1 << i2 )	1076:23:27361:27391	2563595	13	True				
ANR	2563741	CallExpression	result . SetIntegerValue ( i1 << i2 )		2563595	0					
ANR	2563742	Callee	result . SetIntegerValue		2563595	0					
ANR	2563743	MemberAccess	result . SetIntegerValue		2563595	0					
ANR	2563744	Identifier	result		2563595	0					
ANR	2563745	Identifier	SetIntegerValue		2563595	1					
ANR	2563746	ArgumentList	i1 << i2		2563595	1					
ANR	2563747	Argument	i1 << i2		2563595	0					
ANR	2563748	ShiftExpression	i1 << i2		2563595	0		<<			
ANR	2563749	Identifier	i1		2563595	0					
ANR	2563750	Identifier	i2		2563595	1					
ANR	2563751	BreakStatement	break ;	1076:55:27393:27398	2563595	14	True				
ANR	2563752	Label	case URIGHT_SHIFT_OP :	1078:2:27403:27423	2563595	15	True				
ANR	2563753	Identifier	URIGHT_SHIFT_OP		2563595	0					
ANR	2563754	IfStatement	if ( i1 >= 0 )		2563595	16					
ANR	2563755	Condition	i1 >= 0	1079:7:27432:27438	2563595	0	True				
ANR	2563756	RelationalExpression	i1 >= 0		2563595	0		>=			
ANR	2563757	Identifier	i1		2563595	0					
ANR	2563758	PrimaryExpression	0		2563595	1					
ANR	2563759	CompoundStatement		25:16:744:744	2563595	1					
ANR	2563760	ExpressionStatement	result . SetIntegerValue ( i1 >> i2 )	1081:4:27493:27526	2563595	0	True				
ANR	2563761	CallExpression	result . SetIntegerValue ( i1 >> i2 )		2563595	0					
ANR	2563762	Callee	result . SetIntegerValue		2563595	0					
ANR	2563763	MemberAccess	result . SetIntegerValue		2563595	0					
ANR	2563764	Identifier	result		2563595	0					
ANR	2563765	Identifier	SetIntegerValue		2563595	1					
ANR	2563766	ArgumentList	i1 >> i2		2563595	1					
ANR	2563767	Argument	i1 >> i2		2563595	0					
ANR	2563768	ShiftExpression	i1 >> i2		2563595	0		>>			
ANR	2563769	Identifier	i1		2563595	0					
ANR	2563770	Identifier	i2		2563595	1					
ANR	2563771	BreakStatement	break ;	1082:4:27532:27537	2563595	1	True				
ANR	2563772	ElseStatement	else		2563595	0					
ANR	2563773	CompoundStatement		29:10:852:852	2563595	0					
ANR	2563774	ExpressionStatement	val = i1 >> 1	1085:4:27577:27590	2563595	0	True				
ANR	2563775	AssignmentExpression	val = i1 >> 1		2563595	0		=			
ANR	2563776	Identifier	val		2563595	0					
ANR	2563777	ShiftExpression	i1 >> 1		2563595	1		>>			
ANR	2563778	Identifier	i1		2563595	0					
ANR	2563779	PrimaryExpression	1		2563595	1					
ANR	2563780	ExpressionStatement	val &= ( ~signMask )	1086:4:27643:27661	2563595	1	True				
ANR	2563781	AssignmentExpression	val &= ( ~signMask )		2563595	0		&=			
ANR	2563782	Identifier	val		2563595	0					
ANR	2563783	Identifier	~signMask		2563595	1					
ANR	2563784	ExpressionStatement	val >>= ( i2 - 1 )	1087:4:27698:27714	2563595	2	True				
ANR	2563785	AssignmentExpression	val >>= ( i2 - 1 )		2563595	0		>>=			
ANR	2563786	Identifier	val		2563595	0					
ANR	2563787	AdditiveExpression	i2 - 1		2563595	1		-			
ANR	2563788	Identifier	i2		2563595	0					
ANR	2563789	PrimaryExpression	1		2563595	1					
ANR	2563790	ExpressionStatement	result . SetIntegerValue ( val )	1088:4:27759:27787	2563595	3	True				
ANR	2563791	CallExpression	result . SetIntegerValue ( val )		2563595	0					
ANR	2563792	Callee	result . SetIntegerValue		2563595	0					
ANR	2563793	MemberAccess	result . SetIntegerValue		2563595	0					
ANR	2563794	Identifier	result		2563595	0					
ANR	2563795	Identifier	SetIntegerValue		2563595	1					
ANR	2563796	ArgumentList	val		2563595	1					
ANR	2563797	Argument	val		2563595	0					
ANR	2563798	Identifier	val		2563595	0					
ANR	2563799	BreakStatement	break ;	1089:4:27793:27798	2563595	4	True				
ANR	2563800	BreakStatement	break ;	1092:3:27834:27839	2563595	17	True				
ANR	2563801	Label	case RIGHT_SHIFT_OP :	1094:2:27844:27863	2563595	18	True				
ANR	2563802	Identifier	RIGHT_SHIFT_OP		2563595	0					
ANR	2563803	IfStatement	if ( i1 >= 0 )		2563595	19					
ANR	2563804	Condition	i1 >= 0	1095:7:27872:27878	2563595	0	True				
ANR	2563805	RelationalExpression	i1 >= 0		2563595	0		>=			
ANR	2563806	Identifier	i1		2563595	0					
ANR	2563807	PrimaryExpression	0		2563595	1					
ANR	2563808	CompoundStatement		41:16:1184:1184	2563595	1					
ANR	2563809	ExpressionStatement	result . SetIntegerValue ( i1 >> i2 )	1097:4:27930:27963	2563595	0	True				
ANR	2563810	CallExpression	result . SetIntegerValue ( i1 >> i2 )		2563595	0					
ANR	2563811	Callee	result . SetIntegerValue		2563595	0					
ANR	2563812	MemberAccess	result . SetIntegerValue		2563595	0					
ANR	2563813	Identifier	result		2563595	0					
ANR	2563814	Identifier	SetIntegerValue		2563595	1					
ANR	2563815	ArgumentList	i1 >> i2		2563595	1					
ANR	2563816	Argument	i1 >> i2		2563595	0					
ANR	2563817	ShiftExpression	i1 >> i2		2563595	0		>>			
ANR	2563818	Identifier	i1		2563595	0					
ANR	2563819	Identifier	i2		2563595	1					
ANR	2563820	BreakStatement	break ;	1098:4:27969:27974	2563595	1	True				
ANR	2563821	ElseStatement	else		2563595	0					
ANR	2563822	CompoundStatement		45:10:1289:1289	2563595	0					
ANR	2563823	ExpressionStatement	val = i1	1101:4:28041:28049	2563595	0	True				
ANR	2563824	AssignmentExpression	val = i1		2563595	0		=			
ANR	2563825	Identifier	val		2563595	0					
ANR	2563826	Identifier	i1		2563595	1					
ANR	2563827	ForStatement	for ( int i = 0 ; i < i2 ; i ++ )		2563595	1					
ANR	2563828	ForInit	int i = 0 ;	1102:9:28060:28069	2563595	0	True				
ANR	2563829	IdentifierDeclStatement	int i = 0 ;		2563595	0					
ANR	2563830	IdentifierDecl	i = 0		2563595	0					
ANR	2563831	IdentifierDeclType	int		2563595	0					
ANR	2563832	Identifier	i		2563595	1					
ANR	2563833	AssignmentExpression	i = 0		2563595	2		=			
ANR	2563834	Identifier	i		2563595	0					
ANR	2563835	PrimaryExpression	0		2563595	1					
ANR	2563836	Condition	i < i2	1102:20:28071:28076	2563595	1	True				
ANR	2563837	RelationalExpression	i < i2		2563595	0		<			
ANR	2563838	Identifier	i		2563595	0					
ANR	2563839	Identifier	i2		2563595	1					
ANR	2563840	PostIncDecOperationExpression	i ++	1102:28:28079:28081	2563595	2	True				
ANR	2563841	Identifier	i		2563595	0					
ANR	2563842	IncDec	++		2563595	1					
ANR	2563843	ExpressionStatement	val = ( val >> 1 ) | signMask	1103:5:28089:28116	2563595	3	True				
ANR	2563844	AssignmentExpression	val = ( val >> 1 ) | signMask		2563595	0		=			
ANR	2563845	Identifier	val		2563595	0					
ANR	2563846	InclusiveOrExpression	( val >> 1 ) | signMask		2563595	1		|			
ANR	2563847	ShiftExpression	val >> 1		2563595	0		>>			
ANR	2563848	Identifier	val		2563595	0					
ANR	2563849	PrimaryExpression	1		2563595	1					
ANR	2563850	Identifier	signMask		2563595	1					
ANR	2563851	ExpressionStatement	result . SetIntegerValue ( val )	1104:4:28148:28176	2563595	2	True				
ANR	2563852	CallExpression	result . SetIntegerValue ( val )		2563595	0					
ANR	2563853	Callee	result . SetIntegerValue		2563595	0					
ANR	2563854	MemberAccess	result . SetIntegerValue		2563595	0					
ANR	2563855	Identifier	result		2563595	0					
ANR	2563856	Identifier	SetIntegerValue		2563595	1					
ANR	2563857	ArgumentList	val		2563595	1					
ANR	2563858	Argument	val		2563595	0					
ANR	2563859	Identifier	val		2563595	0					
ANR	2563860	BreakStatement	break ;	1105:4:28182:28187	2563595	3	True				
ANR	2563861	BreakStatement	break ;	1108:3:28223:28228	2563595	20	True				
ANR	2563862	Label	default :	1110:2:28233:28240	2563595	21	True				
ANR	2563863	Identifier	default		2563595	0					
ANR	2563864	ExpressionStatement	"CLASSAD_EXCEPT ( ""Should not get here"" )"	1112:3:28271:28309	2563595	22	True				
ANR	2563865	CallExpression	"CLASSAD_EXCEPT ( ""Should not get here"" )"		2563595	0					
ANR	2563866	Callee	CLASSAD_EXCEPT		2563595	0					
ANR	2563867	Identifier	CLASSAD_EXCEPT		2563595	0					
ANR	2563868	ArgumentList	"""Should not get here"""		2563595	1					
ANR	2563869	Argument	"""Should not get here"""		2563595	0					
ANR	2563870	PrimaryExpression	"""Should not get here"""		2563595	0					
ANR	2563871	IfStatement	if ( op == BITWISE_NOT_OP )		2563595	5					
ANR	2563872	Condition	op == BITWISE_NOT_OP	1115:5:28320:28339	2563595	0	True				
ANR	2563873	EqualityExpression	op == BITWISE_NOT_OP		2563595	0		==			
ANR	2563874	Identifier	op		2563595	0					
ANR	2563875	Identifier	BITWISE_NOT_OP		2563595	1					
ANR	2563876	CompoundStatement		61:28:1646:1646	2563595	1					
ANR	2563877	ReturnStatement	return SIG_CHLD1 ;	1116:2:28347:28363	2563595	0	True				
ANR	2563878	Identifier	SIG_CHLD1		2563595	0					
ANR	2563879	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	1119:1:28370:28401	2563595	6	True				
ANR	2563880	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2563595	0		|			
ANR	2563881	Identifier	SIG_CHLD1		2563595	0					
ANR	2563882	Identifier	SIG_CHLD2		2563595	1					
ANR	2563883	ReturnType	int		2563595	1					
ANR	2563884	Identifier	Operation :: doBitwise		2563595	2					
ANR	2563885	ParameterList	"OpKind op , Value & v1 , Value & v2 , Value & result"		2563595	3					
ANR	2563886	Parameter	OpKind op	1054:11:26648:26656	2563595	0	True				
ANR	2563887	ParameterType	OpKind		2563595	0					
ANR	2563888	Identifier	op		2563595	1					
ANR	2563889	Parameter	Value & v1	1054:22:26659:26667	2563595	1	True				
ANR	2563890	ParameterType	Value &		2563595	0					
ANR	2563891	Identifier	v1		2563595	1					
ANR	2563892	Parameter	Value & v2	1054:33:26670:26678	2563595	2	True				
ANR	2563893	ParameterType	Value &		2563595	0					
ANR	2563894	Identifier	v2		2563595	1					
ANR	2563895	Parameter	Value & result	1054:44:26681:26693	2563595	3	True				
ANR	2563896	ParameterType	Value &		2563595	0					
ANR	2563897	Identifier	result		2563595	1					
ANR	2563898	CFGEntryNode	ENTRY		2563595		True				
ANR	2563899	CFGExitNode	EXIT		2563595		True				
ANR	2563900	Symbol	val		2563595						
ANR	2563901	Symbol	op		2563595						
ANR	2563902	Symbol	signMask		2563595						
ANR	2563903	Symbol	v2 . IsIntegerValue		2563595						
ANR	2563904	Symbol	~i1		2563595						
ANR	2563905	Symbol	i1		2563595						
ANR	2563906	Symbol	SIG_CHLD1		2563595						
ANR	2563907	Symbol	i2		2563595						
ANR	2563908	Symbol	SIG_CHLD2		2563595						
ANR	2563909	Symbol	i		2563595						
ANR	2563910	Symbol	result		2563595						
ANR	2563911	Symbol	BITWISE_NOT_OP		2563595						
ANR	2563912	Symbol	~INT_MAX		2563595						
ANR	2563913	Symbol	v1 . IsIntegerValue		2563595						
ANR	2563914	Symbol	v1		2563595						
ANR	2563915	Symbol	v2		2563595						
ANR	2563916	Symbol	~signMask		2563595						
ANR	2563917	DeclStmt									
ANR	2563918	Decl							volatile bool	volatile bool	ClassAdExprFPE
ANR	2563919	Function	Operation :: doRealArithmetic	1128:0:28535:30033							
ANR	2563920	FunctionDef	"Operation :: doRealArithmetic (OpKind op , Value & v1 , Value & v2 , Value & result)"		2563919	0					
ANR	2563921	CompoundStatement		1130:0:28617:30033	2563919	0					
ANR	2563922	IdentifierDeclStatement	"double r1 , r2 ;"	1131:1:28620:28633	2563919	0	True				
ANR	2563923	IdentifierDecl	r1		2563919	0					
ANR	2563924	IdentifierDeclType	double		2563919	0					
ANR	2563925	Identifier	r1		2563919	1					
ANR	2563926	IdentifierDecl	r2		2563919	1					
ANR	2563927	IdentifierDeclType	double		2563919	0					
ANR	2563928	Identifier	r2		2563919	1					
ANR	2563929	IdentifierDeclStatement	double comp = 0 ;	1132:1:28637:28650	2563919	1	True				
ANR	2563930	IdentifierDecl	comp = 0		2563919	0					
ANR	2563931	IdentifierDeclType	double		2563919	0					
ANR	2563932	Identifier	comp		2563919	1					
ANR	2563933	AssignmentExpression	comp = 0		2563919	2		=			
ANR	2563934	Identifier	comp		2563919	0					
ANR	2563935	PrimaryExpression	0		2563919	1					
ANR	2563936	ExpressionStatement	v1 . IsRealValue ( r1 )	1138:1:28876:28895	2563919	2	True				
ANR	2563937	CallExpression	v1 . IsRealValue ( r1 )		2563919	0					
ANR	2563938	Callee	v1 . IsRealValue		2563919	0					
ANR	2563939	MemberAccess	v1 . IsRealValue		2563919	0					
ANR	2563940	Identifier	v1		2563919	0					
ANR	2563941	Identifier	IsRealValue		2563919	1					
ANR	2563942	ArgumentList	r1		2563919	1					
ANR	2563943	Argument	r1		2563919	0					
ANR	2563944	Identifier	r1		2563919	0					
ANR	2563945	ExpressionStatement	v2 . IsRealValue ( r2 )	1139:1:28898:28917	2563919	3	True				
ANR	2563946	CallExpression	v2 . IsRealValue ( r2 )		2563919	0					
ANR	2563947	Callee	v2 . IsRealValue		2563919	0					
ANR	2563948	MemberAccess	v2 . IsRealValue		2563919	0					
ANR	2563949	Identifier	v2		2563919	0					
ANR	2563950	Identifier	IsRealValue		2563919	1					
ANR	2563951	ArgumentList	r2		2563919	1					
ANR	2563952	Argument	r2		2563919	0					
ANR	2563953	Identifier	r2		2563919	0					
ANR	2563954	IdentifierDeclStatement	"struct sigaction sa1 , sa2 ;"	1143:4:28944:28969	2563919	4	True				
ANR	2563955	IdentifierDecl	sa1		2563919	0					
ANR	2563956	IdentifierDeclType	struct sigaction		2563919	0					
ANR	2563957	Identifier	sa1		2563919	1					
ANR	2563958	IdentifierDecl	sa2		2563919	1					
ANR	2563959	IdentifierDeclType	struct sigaction		2563919	0					
ANR	2563960	Identifier	sa2		2563919	1					
ANR	2563961	ExpressionStatement	sa1 . sa_handler = ClassAd_SIGFPE_handler	1144:4:28975:29014	2563919	5	True				
ANR	2563962	AssignmentExpression	sa1 . sa_handler = ClassAd_SIGFPE_handler		2563919	0		=			
ANR	2563963	MemberAccess	sa1 . sa_handler		2563919	0					
ANR	2563964	Identifier	sa1		2563919	0					
ANR	2563965	Identifier	sa_handler		2563919	1					
ANR	2563966	Identifier	ClassAd_SIGFPE_handler		2563919	1					
ANR	2563967	ExpressionStatement	sigemptyset ( & ( sa1 . sa_mask ) )	1145:4:29020:29048	2563919	6	True				
ANR	2563968	CallExpression	sigemptyset ( & ( sa1 . sa_mask ) )		2563919	0					
ANR	2563969	Callee	sigemptyset		2563919	0					
ANR	2563970	Identifier	sigemptyset		2563919	0					
ANR	2563971	ArgumentList	& ( sa1 . sa_mask )		2563919	1					
ANR	2563972	Argument	& ( sa1 . sa_mask )		2563919	0					
ANR	2563973	UnaryOperationExpression	& ( sa1 . sa_mask )		2563919	0					
ANR	2563974	UnaryOperator	&		2563919	0					
ANR	2563975	MemberAccess	sa1 . sa_mask		2563919	1					
ANR	2563976	Identifier	sa1		2563919	0					
ANR	2563977	Identifier	sa_mask		2563919	1					
ANR	2563978	ExpressionStatement	sa1 . sa_flags = 0	1146:4:29054:29070	2563919	7	True				
ANR	2563979	AssignmentExpression	sa1 . sa_flags = 0		2563919	0		=			
ANR	2563980	MemberAccess	sa1 . sa_flags		2563919	0					
ANR	2563981	Identifier	sa1		2563919	0					
ANR	2563982	Identifier	sa_flags		2563919	1					
ANR	2563983	PrimaryExpression	0		2563919	1					
ANR	2563984	IfStatement	"if ( sigaction ( SIGFPE , & sa1 , & sa2 ) )"		2563919	8					
ANR	2563985	Condition	"sigaction ( SIGFPE , & sa1 , & sa2 )"	1147:8:29080:29109	2563919	0	True				
ANR	2563986	CallExpression	"sigaction ( SIGFPE , & sa1 , & sa2 )"		2563919	0					
ANR	2563987	Callee	sigaction		2563919	0					
ANR	2563988	Identifier	sigaction		2563919	0					
ANR	2563989	ArgumentList	SIGFPE		2563919	1					
ANR	2563990	Argument	SIGFPE		2563919	0					
ANR	2563991	Identifier	SIGFPE		2563919	0					
ANR	2563992	Argument	& sa1		2563919	1					
ANR	2563993	UnaryOperationExpression	& sa1		2563919	0					
ANR	2563994	UnaryOperator	&		2563919	0					
ANR	2563995	Identifier	sa1		2563919	1					
ANR	2563996	Argument	& sa2		2563919	2					
ANR	2563997	UnaryOperationExpression	& sa2		2563919	0					
ANR	2563998	UnaryOperator	&		2563919	0					
ANR	2563999	Identifier	sa2		2563919	1					
ANR	2564000	CompoundStatement		18:40:494:494	2563919	1					
ANR	2564001	ExpressionStatement	"CLASSAD_EXCEPT ( ""Warning! ClassAd: Failed sigaction for SIGFPE (errno=%d)\\n"" , errno )"	1148:7:29121:29207	2563919	0	True				
ANR	2564002	CallExpression	"CLASSAD_EXCEPT ( ""Warning! ClassAd: Failed sigaction for SIGFPE (errno=%d)\\n"" , errno )"		2563919	0					
ANR	2564003	Callee	CLASSAD_EXCEPT		2563919	0					
ANR	2564004	Identifier	CLASSAD_EXCEPT		2563919	0					
ANR	2564005	ArgumentList	"""Warning! ClassAd: Failed sigaction for SIGFPE (errno=%d)\\n"""		2563919	1					
ANR	2564006	Argument	"""Warning! ClassAd: Failed sigaction for SIGFPE (errno=%d)\\n"""		2563919	0					
ANR	2564007	PrimaryExpression	"""Warning! ClassAd: Failed sigaction for SIGFPE (errno=%d)\\n"""		2563919	0					
ANR	2564008	Argument	errno		2563919	1					
ANR	2564009	Identifier	errno		2563919	0					
ANR	2564010	ExpressionStatement	ClassAdExprFPE = false	1154:1:29231:29253	2563919	9	True				
ANR	2564011	AssignmentExpression	ClassAdExprFPE = false		2563919	0		=			
ANR	2564012	Identifier	ClassAdExprFPE		2563919	0					
ANR	2564013	Identifier	false		2563919	1					
ANR	2564014	ExpressionStatement	errno = 0	1155:1:29256:29265	2563919	10	True				
ANR	2564015	AssignmentExpression	errno = 0		2563919	0		=			
ANR	2564016	Identifier	errno		2563919	0					
ANR	2564017	PrimaryExpression	0		2563919	1					
ANR	2564018	SwitchStatement	switch ( op )		2563919	11					
ANR	2564019	Condition	op	1156:9:29276:29277	2563919	0	True				
ANR	2564020	Identifier	op		2563919	0					
ANR	2564021	CompoundStatement		27:13:662:662	2563919	1					
ANR	2564022	Label	case ADDITION_OP :	1157:2:29284:29300	2563919	0	True				
ANR	2564023	Identifier	ADDITION_OP		2563919	0					
ANR	2564024	ExpressionStatement	comp = r1 + r2	1157:26:29308:29320	2563919	1	True				
ANR	2564025	AssignmentExpression	comp = r1 + r2		2563919	0		=			
ANR	2564026	Identifier	comp		2563919	0					
ANR	2564027	AdditiveExpression	r1 + r2		2563919	1		+			
ANR	2564028	Identifier	r1		2563919	0					
ANR	2564029	Identifier	r2		2563919	1					
ANR	2564030	BreakStatement	break ;	1157:41:29323:29328	2563919	2	True				
ANR	2564031	Label	case SUBTRACTION_OP :	1158:2:29332:29351	2563919	3	True				
ANR	2564032	Identifier	SUBTRACTION_OP		2563919	0					
ANR	2564033	ExpressionStatement	comp = r1 - r2	1158:26:29356:29368	2563919	4	True				
ANR	2564034	AssignmentExpression	comp = r1 - r2		2563919	0		=			
ANR	2564035	Identifier	comp		2563919	0					
ANR	2564036	AdditiveExpression	r1 - r2		2563919	1		-			
ANR	2564037	Identifier	r1		2563919	0					
ANR	2564038	Identifier	r2		2563919	1					
ANR	2564039	BreakStatement	break ;	1158:41:29371:29376	2563919	5	True				
ANR	2564040	Label	case MULTIPLICATION_OP :	1159:2:29380:29402	2563919	6	True				
ANR	2564041	Identifier	MULTIPLICATION_OP		2563919	0					
ANR	2564042	ExpressionStatement	comp = r1 * r2	1159:26:29404:29416	2563919	7	True				
ANR	2564043	AssignmentExpression	comp = r1 * r2		2563919	0		=			
ANR	2564044	Identifier	comp		2563919	0					
ANR	2564045	MultiplicativeExpression	r1 * r2		2563919	1		*			
ANR	2564046	Identifier	r1		2563919	0					
ANR	2564047	Identifier	r2		2563919	1					
ANR	2564048	BreakStatement	break ;	1159:41:29419:29424	2563919	8	True				
ANR	2564049	Label	case DIVISION_OP :	1160:2:29428:29444	2563919	9	True				
ANR	2564050	Identifier	DIVISION_OP		2563919	0					
ANR	2564051	ExpressionStatement	comp = r1 / r2	1160:21:29447:29459	2563919	10	True				
ANR	2564052	AssignmentExpression	comp = r1 / r2		2563919	0		=			
ANR	2564053	Identifier	comp		2563919	0					
ANR	2564054	MultiplicativeExpression	r1 / r2		2563919	1		/			
ANR	2564055	Identifier	r1		2563919	0					
ANR	2564056	Identifier	r2		2563919	1					
ANR	2564057	BreakStatement	break ;	1160:36:29462:29467	2563919	11	True				
ANR	2564058	Label	case MODULUS_OP :	1161:2:29471:29486	2563919	12	True				
ANR	2564059	Identifier	MODULUS_OP		2563919	0					
ANR	2564060	ExpressionStatement	errno = EDOM	1161:20:29489:29501	2563919	13	True				
ANR	2564061	AssignmentExpression	errno = EDOM		2563919	0		=			
ANR	2564062	Identifier	errno		2563919	0					
ANR	2564063	Identifier	EDOM		2563919	1					
ANR	2564064	BreakStatement	break ;	1161:35:29504:29509	2563919	14	True				
ANR	2564065	Label	default :	1163:2:29514:29521	2563919	15	True				
ANR	2564066	Identifier	default		2563919	0					
ANR	2564067	ExpressionStatement	"CLASSAD_EXCEPT ( ""Should not get here"" )"	1165:3:29554:29592	2563919	16	True				
ANR	2564068	CallExpression	"CLASSAD_EXCEPT ( ""Should not get here"" )"		2563919	0					
ANR	2564069	Callee	CLASSAD_EXCEPT		2563919	0					
ANR	2564070	Identifier	CLASSAD_EXCEPT		2563919	0					
ANR	2564071	ArgumentList	"""Should not get here"""		2563919	1					
ANR	2564072	Argument	"""Should not get here"""		2563919	0					
ANR	2564073	PrimaryExpression	"""Should not get here"""		2563919	0					
ANR	2564074	ReturnStatement	return ( SIG_NONE ) ;	1166:3:29597:29615	2563919	17	True				
ANR	2564075	Identifier	SIG_NONE		2563919	0					
ANR	2564076	IfStatement	if ( ClassAdExprFPE == true || errno == EDOM || errno == ERANGE || comp == HUGE_VAL )		2563919	12					
ANR	2564077	Condition	ClassAdExprFPE == true || errno == EDOM || errno == ERANGE || comp == HUGE_VAL	1170:5:29661:29730	2563919	0	True				
ANR	2564078	OrExpression	ClassAdExprFPE == true || errno == EDOM || errno == ERANGE || comp == HUGE_VAL		2563919	0		||			
ANR	2564079	EqualityExpression	ClassAdExprFPE == true		2563919	0		==			
ANR	2564080	Identifier	ClassAdExprFPE		2563919	0					
ANR	2564081	Identifier	true		2563919	1					
ANR	2564082	OrExpression	errno == EDOM || errno == ERANGE || comp == HUGE_VAL		2563919	1		||			
ANR	2564083	EqualityExpression	errno == EDOM		2563919	0		==			
ANR	2564084	Identifier	errno		2563919	0					
ANR	2564085	Identifier	EDOM		2563919	1					
ANR	2564086	OrExpression	errno == ERANGE || comp == HUGE_VAL		2563919	1		||			
ANR	2564087	EqualityExpression	errno == ERANGE		2563919	0		==			
ANR	2564088	Identifier	errno		2563919	0					
ANR	2564089	Identifier	ERANGE		2563919	1					
ANR	2564090	EqualityExpression	comp == HUGE_VAL		2563919	1		==			
ANR	2564091	Identifier	comp		2563919	0					
ANR	2564092	Identifier	HUGE_VAL		2563919	1					
ANR	2564093	ExpressionStatement	result . SetErrorValue ( )	1171:2:29735:29758	2563919	1	True				
ANR	2564094	CallExpression	result . SetErrorValue ( )		2563919	0					
ANR	2564095	Callee	result . SetErrorValue		2563919	0					
ANR	2564096	MemberAccess	result . SetErrorValue		2563919	0					
ANR	2564097	Identifier	result		2563919	0					
ANR	2564098	Identifier	SetErrorValue		2563919	1					
ANR	2564099	ArgumentList			2563919	1					
ANR	2564100	ElseStatement	else		2563919	0					
ANR	2564101	ExpressionStatement	result . SetRealValue ( comp )	1173:2:29768:29794	2563919	0	True				
ANR	2564102	CallExpression	result . SetRealValue ( comp )		2563919	0					
ANR	2564103	Callee	result . SetRealValue		2563919	0					
ANR	2564104	MemberAccess	result . SetRealValue		2563919	0					
ANR	2564105	Identifier	result		2563919	0					
ANR	2564106	Identifier	SetRealValue		2563919	1					
ANR	2564107	ArgumentList	comp		2563919	1					
ANR	2564108	Argument	comp		2563919	0					
ANR	2564109	Identifier	comp		2563919	0					
ANR	2564110	IfStatement	"if ( sigaction ( SIGFPE , & sa2 , & sa1 ) )"		2563919	13					
ANR	2564111	Condition	"sigaction ( SIGFPE , & sa2 , & sa1 )"	1178:8:29848:29877	2563919	0	True				
ANR	2564112	CallExpression	"sigaction ( SIGFPE , & sa2 , & sa1 )"		2563919	0					
ANR	2564113	Callee	sigaction		2563919	0					
ANR	2564114	Identifier	sigaction		2563919	0					
ANR	2564115	ArgumentList	SIGFPE		2563919	1					
ANR	2564116	Argument	SIGFPE		2563919	0					
ANR	2564117	Identifier	SIGFPE		2563919	0					
ANR	2564118	Argument	& sa2		2563919	1					
ANR	2564119	UnaryOperationExpression	& sa2		2563919	0					
ANR	2564120	UnaryOperator	&		2563919	0					
ANR	2564121	Identifier	sa2		2563919	1					
ANR	2564122	Argument	& sa1		2563919	2					
ANR	2564123	UnaryOperationExpression	& sa1		2563919	0					
ANR	2564124	UnaryOperator	&		2563919	0					
ANR	2564125	Identifier	sa1		2563919	1					
ANR	2564126	CompoundStatement		49:40:1262:1262	2563919	1					
ANR	2564127	ExpressionStatement	"CLASSAD_EXCEPT ( ""Warning! ClassAd: Failed sigaction for SIGFPE (errno=%d)\\n"" , errno )"	1179:8:29890:29977	2563919	0	True				
ANR	2564128	CallExpression	"CLASSAD_EXCEPT ( ""Warning! ClassAd: Failed sigaction for SIGFPE (errno=%d)\\n"" , errno )"		2563919	0					
ANR	2564129	Callee	CLASSAD_EXCEPT		2563919	0					
ANR	2564130	Identifier	CLASSAD_EXCEPT		2563919	0					
ANR	2564131	ArgumentList	"""Warning! ClassAd: Failed sigaction for SIGFPE (errno=%d)\\n"""		2563919	1					
ANR	2564132	Argument	"""Warning! ClassAd: Failed sigaction for SIGFPE (errno=%d)\\n"""		2563919	0					
ANR	2564133	PrimaryExpression	"""Warning! ClassAd: Failed sigaction for SIGFPE (errno=%d)\\n"""		2563919	0					
ANR	2564134	Argument	errno		2563919	1					
ANR	2564135	Identifier	errno		2563919	0					
ANR	2564136	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	1184:1:30000:30031	2563919	14	True				
ANR	2564137	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2563919	0		|			
ANR	2564138	Identifier	SIG_CHLD1		2563919	0					
ANR	2564139	Identifier	SIG_CHLD2		2563919	1					
ANR	2564140	ReturnType	int		2563919	1					
ANR	2564141	Identifier	Operation :: doRealArithmetic		2563919	2					
ANR	2564142	ParameterList	"OpKind op , Value & v1 , Value & v2 , Value & result"		2563919	3					
ANR	2564143	Parameter	OpKind op	1129:18:28569:28577	2563919	0	True				
ANR	2564144	ParameterType	OpKind		2563919	0					
ANR	2564145	Identifier	op		2563919	1					
ANR	2564146	Parameter	Value & v1	1129:29:28580:28588	2563919	1	True				
ANR	2564147	ParameterType	Value &		2563919	0					
ANR	2564148	Identifier	v1		2563919	1					
ANR	2564149	Parameter	Value & v2	1129:40:28591:28599	2563919	2	True				
ANR	2564150	ParameterType	Value &		2563919	0					
ANR	2564151	Identifier	v2		2563919	1					
ANR	2564152	Parameter	Value & result	1129:51:28602:28614	2563919	3	True				
ANR	2564153	ParameterType	Value &		2563919	0					
ANR	2564154	Identifier	result		2563919	1					
ANR	2564155	CFGEntryNode	ENTRY		2563919		True				
ANR	2564156	CFGExitNode	EXIT		2563919		True				
ANR	2564157	Symbol	r2		2563919						
ANR	2564158	Symbol	SIG_CHLD1		2563919						
ANR	2564159	Symbol	SIG_CHLD2		2563919						
ANR	2564160	Symbol	HUGE_VAL		2563919						
ANR	2564161	Symbol	sa1 . sa_flags		2563919						
ANR	2564162	Symbol	& sa2		2563919						
ANR	2564163	Symbol	& sa1		2563919						
ANR	2564164	Symbol	result		2563919						
ANR	2564165	Symbol	ERANGE		2563919						
ANR	2564166	Symbol	EDOM		2563919						
ANR	2564167	Symbol	ClassAd_SIGFPE_handler		2563919						
ANR	2564168	Symbol	op		2563919						
ANR	2564169	Symbol	comp		2563919						
ANR	2564170	Symbol	sa1		2563919						
ANR	2564171	Symbol	SIGFPE		2563919						
ANR	2564172	Symbol	errno		2563919						
ANR	2564173	Symbol	sa2		2563919						
ANR	2564174	Symbol	& sa1 . sa_mask		2563919						
ANR	2564175	Symbol	false		2563919						
ANR	2564176	Symbol	SIG_NONE		2563919						
ANR	2564177	Symbol	sigaction		2563919						
ANR	2564178	Symbol	sa1 . sa_handler		2563919						
ANR	2564179	Symbol	ClassAdExprFPE		2563919						
ANR	2564180	Symbol	true		2563919						
ANR	2564181	Symbol	v1		2563919						
ANR	2564182	Symbol	v2		2563919						
ANR	2564183	Symbol	r1		2563919						
ANR	2564184	Function	Operation :: doTimeArithmetic	1188:0:30037:33387							
ANR	2564185	FunctionDef	"Operation :: doTimeArithmetic (OpKind op , Value & v1 , Value & v2 , Value & result)"		2564184	0					
ANR	2564186	CompoundStatement		1190:0:30120:33387	2564184	0					
ANR	2564187	IdentifierDeclStatement	"abstime_t asecs1 , asecs2 ;"	1191:2:30124:30147	2564184	0	True				
ANR	2564188	IdentifierDecl	asecs1		2564184	0					
ANR	2564189	IdentifierDeclType	abstime_t		2564184	0					
ANR	2564190	Identifier	asecs1		2564184	1					
ANR	2564191	IdentifierDecl	asecs2		2564184	1					
ANR	2564192	IdentifierDeclType	abstime_t		2564184	0					
ANR	2564193	Identifier	asecs2		2564184	1					
ANR	2564194	ExpressionStatement	asecs1 . secs = 0	1192:2:30151:30166	2564184	1	True				
ANR	2564195	AssignmentExpression	asecs1 . secs = 0		2564184	0		=			
ANR	2564196	MemberAccess	asecs1 . secs		2564184	0					
ANR	2564197	Identifier	asecs1		2564184	0					
ANR	2564198	Identifier	secs		2564184	1					
ANR	2564199	PrimaryExpression	0		2564184	1					
ANR	2564200	ExpressionStatement	asecs1 . offset = 0	1193:2:30170:30186	2564184	2	True				
ANR	2564201	AssignmentExpression	asecs1 . offset = 0		2564184	0		=			
ANR	2564202	MemberAccess	asecs1 . offset		2564184	0					
ANR	2564203	Identifier	asecs1		2564184	0					
ANR	2564204	Identifier	offset		2564184	1					
ANR	2564205	PrimaryExpression	0		2564184	1					
ANR	2564206	ExpressionStatement	asecs2 . secs = 0	1194:0:30188:30203	2564184	3	True				
ANR	2564207	AssignmentExpression	asecs2 . secs = 0		2564184	0		=			
ANR	2564208	MemberAccess	asecs2 . secs		2564184	0					
ANR	2564209	Identifier	asecs2		2564184	0					
ANR	2564210	Identifier	secs		2564184	1					
ANR	2564211	PrimaryExpression	0		2564184	1					
ANR	2564212	ExpressionStatement	asecs2 . offset = 0	1195:2:30207:30223	2564184	4	True				
ANR	2564213	AssignmentExpression	asecs2 . offset = 0		2564184	0		=			
ANR	2564214	MemberAccess	asecs2 . offset		2564184	0					
ANR	2564215	Identifier	asecs2		2564184	0					
ANR	2564216	Identifier	offset		2564184	1					
ANR	2564217	PrimaryExpression	0		2564184	1					
ANR	2564218	IdentifierDeclStatement	double rsecs1 = 0 ;	1196:1:30226:30241	2564184	5	True				
ANR	2564219	IdentifierDecl	rsecs1 = 0		2564184	0					
ANR	2564220	IdentifierDeclType	double		2564184	0					
ANR	2564221	Identifier	rsecs1		2564184	1					
ANR	2564222	AssignmentExpression	rsecs1 = 0		2564184	2		=			
ANR	2564223	Identifier	rsecs1		2564184	0					
ANR	2564224	PrimaryExpression	0		2564184	1					
ANR	2564225	IdentifierDeclStatement	double rsecs2 = 0 ;	1197:1:30244:30259	2564184	6	True				
ANR	2564226	IdentifierDecl	rsecs2 = 0		2564184	0					
ANR	2564227	IdentifierDeclType	double		2564184	0					
ANR	2564228	Identifier	rsecs2		2564184	1					
ANR	2564229	AssignmentExpression	rsecs2 = 0		2564184	2		=			
ANR	2564230	Identifier	rsecs2		2564184	0					
ANR	2564231	PrimaryExpression	0		2564184	1					
ANR	2564232	IdentifierDeclStatement	"Value :: ValueType vt1 = v1 . GetType ( ) , vt2 = v2 . GetType ( ) ;"	1198:1:30262:30315	2564184	7	True				
ANR	2564233	IdentifierDecl	vt1 = v1 . GetType ( )		2564184	0					
ANR	2564234	IdentifierDeclType	Value :: ValueType		2564184	0					
ANR	2564235	Identifier	vt1		2564184	1					
ANR	2564236	AssignmentExpression	vt1 = v1 . GetType ( )		2564184	2		=			
ANR	2564237	Identifier	vt1		2564184	0					
ANR	2564238	CallExpression	v1 . GetType ( )		2564184	1					
ANR	2564239	Callee	v1 . GetType		2564184	0					
ANR	2564240	MemberAccess	v1 . GetType		2564184	0					
ANR	2564241	Identifier	v1		2564184	0					
ANR	2564242	Identifier	GetType		2564184	1					
ANR	2564243	ArgumentList			2564184	1					
ANR	2564244	IdentifierDecl	vt2 = v2 . GetType ( )		2564184	1					
ANR	2564245	IdentifierDeclType	Value :: ValueType		2564184	0					
ANR	2564246	Identifier	vt2		2564184	1					
ANR	2564247	AssignmentExpression	vt2 = v2 . GetType ( )		2564184	2		=			
ANR	2564248	Identifier	vt2		2564184	0					
ANR	2564249	CallExpression	v2 . GetType ( )		2564184	1					
ANR	2564250	Callee	v2 . GetType		2564184	0					
ANR	2564251	MemberAccess	v2 . GetType		2564184	0					
ANR	2564252	Identifier	v2		2564184	0					
ANR	2564253	Identifier	GetType		2564184	1					
ANR	2564254	ArgumentList			2564184	1					
ANR	2564255	IfStatement	if ( op == ADDITION_OP )		2564184	8					
ANR	2564256	Condition	op == ADDITION_OP	1201:5:30337:30351	2564184	0	True				
ANR	2564257	EqualityExpression	op == ADDITION_OP		2564184	0		==			
ANR	2564258	Identifier	op		2564184	0					
ANR	2564259	Identifier	ADDITION_OP		2564184	1					
ANR	2564260	CompoundStatement		12:23:234:234	2564184	1					
ANR	2564261	IfStatement	if ( vt1 == Value :: ABSOLUTE_TIME_VALUE && vt2 == Value :: RELATIVE_TIME_VALUE )		2564184	0					
ANR	2564262	Condition	vt1 == Value :: ABSOLUTE_TIME_VALUE && vt2 == Value :: RELATIVE_TIME_VALUE	1202:6:30363:30433	2564184	0	True				
ANR	2564263	AndExpression	vt1 == Value :: ABSOLUTE_TIME_VALUE && vt2 == Value :: RELATIVE_TIME_VALUE		2564184	0		&&			
ANR	2564264	EqualityExpression	vt1 == Value :: ABSOLUTE_TIME_VALUE		2564184	0		==			
ANR	2564265	Identifier	vt1		2564184	0					
ANR	2564266	Identifier	Value :: ABSOLUTE_TIME_VALUE		2564184	1					
ANR	2564267	EqualityExpression	vt2 == Value :: RELATIVE_TIME_VALUE		2564184	1		==			
ANR	2564268	Identifier	vt2		2564184	0					
ANR	2564269	Identifier	Value :: RELATIVE_TIME_VALUE		2564184	1					
ANR	2564270	CompoundStatement		14:38:316:316	2564184	1					
ANR	2564271	ExpressionStatement	v1 . IsAbsoluteTimeValue ( asecs1 )	1204:3:30442:30474	2564184	0	True				
ANR	2564272	CallExpression	v1 . IsAbsoluteTimeValue ( asecs1 )		2564184	0					
ANR	2564273	Callee	v1 . IsAbsoluteTimeValue		2564184	0					
ANR	2564274	MemberAccess	v1 . IsAbsoluteTimeValue		2564184	0					
ANR	2564275	Identifier	v1		2564184	0					
ANR	2564276	Identifier	IsAbsoluteTimeValue		2564184	1					
ANR	2564277	ArgumentList	asecs1		2564184	1					
ANR	2564278	Argument	asecs1		2564184	0					
ANR	2564279	Identifier	asecs1		2564184	0					
ANR	2564280	ExpressionStatement	v2 . IsRelativeTimeValue ( rsecs2 )	1205:3:30479:30511	2564184	1	True				
ANR	2564281	CallExpression	v2 . IsRelativeTimeValue ( rsecs2 )		2564184	0					
ANR	2564282	Callee	v2 . IsRelativeTimeValue		2564184	0					
ANR	2564283	MemberAccess	v2 . IsRelativeTimeValue		2564184	0					
ANR	2564284	Identifier	v2		2564184	0					
ANR	2564285	Identifier	IsRelativeTimeValue		2564184	1					
ANR	2564286	ArgumentList	rsecs2		2564184	1					
ANR	2564287	Argument	rsecs2		2564184	0					
ANR	2564288	Identifier	rsecs2		2564184	0					
ANR	2564289	ExpressionStatement	asecs1 . secs += ( int ) rsecs2	1206:3:30516:30543	2564184	2	True				
ANR	2564290	AssignmentExpression	asecs1 . secs += ( int ) rsecs2		2564184	0		+=			
ANR	2564291	MemberAccess	asecs1 . secs		2564184	0					
ANR	2564292	Identifier	asecs1		2564184	0					
ANR	2564293	Identifier	secs		2564184	1					
ANR	2564294	CastExpression	( int ) rsecs2		2564184	1					
ANR	2564295	CastTarget	int		2564184	0					
ANR	2564296	Identifier	rsecs2		2564184	1					
ANR	2564297	ExpressionStatement	result . SetAbsoluteTimeValue ( asecs1 )	1207:3:30548:30585	2564184	3	True				
ANR	2564298	CallExpression	result . SetAbsoluteTimeValue ( asecs1 )		2564184	0					
ANR	2564299	Callee	result . SetAbsoluteTimeValue		2564184	0					
ANR	2564300	MemberAccess	result . SetAbsoluteTimeValue		2564184	0					
ANR	2564301	Identifier	result		2564184	0					
ANR	2564302	Identifier	SetAbsoluteTimeValue		2564184	1					
ANR	2564303	ArgumentList	asecs1		2564184	1					
ANR	2564304	Argument	asecs1		2564184	0					
ANR	2564305	Identifier	asecs1		2564184	0					
ANR	2564306	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	1208:3:30590:30621	2564184	4	True				
ANR	2564307	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2564184	0		|			
ANR	2564308	Identifier	SIG_CHLD1		2564184	0					
ANR	2564309	Identifier	SIG_CHLD2		2564184	1					
ANR	2564310	IfStatement	if ( vt1 == Value :: RELATIVE_TIME_VALUE && vt2 == Value :: ABSOLUTE_TIME_VALUE )		2564184	1					
ANR	2564311	Condition	vt1 == Value :: RELATIVE_TIME_VALUE && vt2 == Value :: ABSOLUTE_TIME_VALUE	1211:6:30634:30704	2564184	0	True				
ANR	2564312	AndExpression	vt1 == Value :: RELATIVE_TIME_VALUE && vt2 == Value :: ABSOLUTE_TIME_VALUE		2564184	0		&&			
ANR	2564313	EqualityExpression	vt1 == Value :: RELATIVE_TIME_VALUE		2564184	0		==			
ANR	2564314	Identifier	vt1		2564184	0					
ANR	2564315	Identifier	Value :: RELATIVE_TIME_VALUE		2564184	1					
ANR	2564316	EqualityExpression	vt2 == Value :: ABSOLUTE_TIME_VALUE		2564184	1		==			
ANR	2564317	Identifier	vt2		2564184	0					
ANR	2564318	Identifier	Value :: ABSOLUTE_TIME_VALUE		2564184	1					
ANR	2564319	CompoundStatement		23:38:587:587	2564184	1					
ANR	2564320	ExpressionStatement	v1 . IsRelativeTimeValue ( rsecs1 )	1213:3:30713:30745	2564184	0	True				
ANR	2564321	CallExpression	v1 . IsRelativeTimeValue ( rsecs1 )		2564184	0					
ANR	2564322	Callee	v1 . IsRelativeTimeValue		2564184	0					
ANR	2564323	MemberAccess	v1 . IsRelativeTimeValue		2564184	0					
ANR	2564324	Identifier	v1		2564184	0					
ANR	2564325	Identifier	IsRelativeTimeValue		2564184	1					
ANR	2564326	ArgumentList	rsecs1		2564184	1					
ANR	2564327	Argument	rsecs1		2564184	0					
ANR	2564328	Identifier	rsecs1		2564184	0					
ANR	2564329	ExpressionStatement	v2 . IsAbsoluteTimeValue ( asecs2 )	1214:3:30750:30782	2564184	1	True				
ANR	2564330	CallExpression	v2 . IsAbsoluteTimeValue ( asecs2 )		2564184	0					
ANR	2564331	Callee	v2 . IsAbsoluteTimeValue		2564184	0					
ANR	2564332	MemberAccess	v2 . IsAbsoluteTimeValue		2564184	0					
ANR	2564333	Identifier	v2		2564184	0					
ANR	2564334	Identifier	IsAbsoluteTimeValue		2564184	1					
ANR	2564335	ArgumentList	asecs2		2564184	1					
ANR	2564336	Argument	asecs2		2564184	0					
ANR	2564337	Identifier	asecs2		2564184	0					
ANR	2564338	ExpressionStatement	asecs2 . secs += ( int ) rsecs1	1215:3:30787:30814	2564184	2	True				
ANR	2564339	AssignmentExpression	asecs2 . secs += ( int ) rsecs1		2564184	0		+=			
ANR	2564340	MemberAccess	asecs2 . secs		2564184	0					
ANR	2564341	Identifier	asecs2		2564184	0					
ANR	2564342	Identifier	secs		2564184	1					
ANR	2564343	CastExpression	( int ) rsecs1		2564184	1					
ANR	2564344	CastTarget	int		2564184	0					
ANR	2564345	Identifier	rsecs1		2564184	1					
ANR	2564346	ExpressionStatement	result . SetAbsoluteTimeValue ( asecs2 )	1216:3:30819:30856	2564184	3	True				
ANR	2564347	CallExpression	result . SetAbsoluteTimeValue ( asecs2 )		2564184	0					
ANR	2564348	Callee	result . SetAbsoluteTimeValue		2564184	0					
ANR	2564349	MemberAccess	result . SetAbsoluteTimeValue		2564184	0					
ANR	2564350	Identifier	result		2564184	0					
ANR	2564351	Identifier	SetAbsoluteTimeValue		2564184	1					
ANR	2564352	ArgumentList	asecs2		2564184	1					
ANR	2564353	Argument	asecs2		2564184	0					
ANR	2564354	Identifier	asecs2		2564184	0					
ANR	2564355	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	1217:3:30861:30892	2564184	4	True				
ANR	2564356	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2564184	0		|			
ANR	2564357	Identifier	SIG_CHLD1		2564184	0					
ANR	2564358	Identifier	SIG_CHLD2		2564184	1					
ANR	2564359	IfStatement	if ( vt1 == Value :: RELATIVE_TIME_VALUE && vt2 == Value :: RELATIVE_TIME_VALUE )		2564184	2					
ANR	2564360	Condition	vt1 == Value :: RELATIVE_TIME_VALUE && vt2 == Value :: RELATIVE_TIME_VALUE	1220:6:30905:30975	2564184	0	True				
ANR	2564361	AndExpression	vt1 == Value :: RELATIVE_TIME_VALUE && vt2 == Value :: RELATIVE_TIME_VALUE		2564184	0		&&			
ANR	2564362	EqualityExpression	vt1 == Value :: RELATIVE_TIME_VALUE		2564184	0		==			
ANR	2564363	Identifier	vt1		2564184	0					
ANR	2564364	Identifier	Value :: RELATIVE_TIME_VALUE		2564184	1					
ANR	2564365	EqualityExpression	vt2 == Value :: RELATIVE_TIME_VALUE		2564184	1		==			
ANR	2564366	Identifier	vt2		2564184	0					
ANR	2564367	Identifier	Value :: RELATIVE_TIME_VALUE		2564184	1					
ANR	2564368	CompoundStatement		32:38:858:858	2564184	1					
ANR	2564369	ExpressionStatement	v1 . IsRelativeTimeValue ( rsecs1 )	1222:3:30984:31016	2564184	0	True				
ANR	2564370	CallExpression	v1 . IsRelativeTimeValue ( rsecs1 )		2564184	0					
ANR	2564371	Callee	v1 . IsRelativeTimeValue		2564184	0					
ANR	2564372	MemberAccess	v1 . IsRelativeTimeValue		2564184	0					
ANR	2564373	Identifier	v1		2564184	0					
ANR	2564374	Identifier	IsRelativeTimeValue		2564184	1					
ANR	2564375	ArgumentList	rsecs1		2564184	1					
ANR	2564376	Argument	rsecs1		2564184	0					
ANR	2564377	Identifier	rsecs1		2564184	0					
ANR	2564378	ExpressionStatement	v2 . IsRelativeTimeValue ( rsecs2 )	1223:3:31021:31053	2564184	1	True				
ANR	2564379	CallExpression	v2 . IsRelativeTimeValue ( rsecs2 )		2564184	0					
ANR	2564380	Callee	v2 . IsRelativeTimeValue		2564184	0					
ANR	2564381	MemberAccess	v2 . IsRelativeTimeValue		2564184	0					
ANR	2564382	Identifier	v2		2564184	0					
ANR	2564383	Identifier	IsRelativeTimeValue		2564184	1					
ANR	2564384	ArgumentList	rsecs2		2564184	1					
ANR	2564385	Argument	rsecs2		2564184	0					
ANR	2564386	Identifier	rsecs2		2564184	0					
ANR	2564387	ExpressionStatement	result . SetRelativeTimeValue ( rsecs1 + rsecs2 )	1224:3:31058:31104	2564184	2	True				
ANR	2564388	CallExpression	result . SetRelativeTimeValue ( rsecs1 + rsecs2 )		2564184	0					
ANR	2564389	Callee	result . SetRelativeTimeValue		2564184	0					
ANR	2564390	MemberAccess	result . SetRelativeTimeValue		2564184	0					
ANR	2564391	Identifier	result		2564184	0					
ANR	2564392	Identifier	SetRelativeTimeValue		2564184	1					
ANR	2564393	ArgumentList	rsecs1 + rsecs2		2564184	1					
ANR	2564394	Argument	rsecs1 + rsecs2		2564184	0					
ANR	2564395	AdditiveExpression	rsecs1 + rsecs2		2564184	0		+			
ANR	2564396	Identifier	rsecs1		2564184	0					
ANR	2564397	Identifier	rsecs2		2564184	1					
ANR	2564398	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	1225:3:31109:31140	2564184	3	True				
ANR	2564399	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2564184	0		|			
ANR	2564400	Identifier	SIG_CHLD1		2564184	0					
ANR	2564401	Identifier	SIG_CHLD2		2564184	1					
ANR	2564402	IfStatement	if ( op == SUBTRACTION_OP )		2564184	9					
ANR	2564403	Condition	op == SUBTRACTION_OP	1229:5:31155:31174	2564184	0	True				
ANR	2564404	EqualityExpression	op == SUBTRACTION_OP		2564184	0		==			
ANR	2564405	Identifier	op		2564184	0					
ANR	2564406	Identifier	SUBTRACTION_OP		2564184	1					
ANR	2564407	CompoundStatement		40:28:1057:1057	2564184	1					
ANR	2564408	IfStatement	if ( vt1 == Value :: ABSOLUTE_TIME_VALUE && vt2 == Value :: ABSOLUTE_TIME_VALUE )		2564184	0					
ANR	2564409	Condition	vt1 == Value :: ABSOLUTE_TIME_VALUE && vt2 == Value :: ABSOLUTE_TIME_VALUE	1230:6:31186:31256	2564184	0	True				
ANR	2564410	AndExpression	vt1 == Value :: ABSOLUTE_TIME_VALUE && vt2 == Value :: ABSOLUTE_TIME_VALUE		2564184	0		&&			
ANR	2564411	EqualityExpression	vt1 == Value :: ABSOLUTE_TIME_VALUE		2564184	0		==			
ANR	2564412	Identifier	vt1		2564184	0					
ANR	2564413	Identifier	Value :: ABSOLUTE_TIME_VALUE		2564184	1					
ANR	2564414	EqualityExpression	vt2 == Value :: ABSOLUTE_TIME_VALUE		2564184	1		==			
ANR	2564415	Identifier	vt2		2564184	0					
ANR	2564416	Identifier	Value :: ABSOLUTE_TIME_VALUE		2564184	1					
ANR	2564417	CompoundStatement		42:38:1139:1139	2564184	1					
ANR	2564418	ExpressionStatement	v1 . IsAbsoluteTimeValue ( asecs1 )	1232:3:31265:31297	2564184	0	True				
ANR	2564419	CallExpression	v1 . IsAbsoluteTimeValue ( asecs1 )		2564184	0					
ANR	2564420	Callee	v1 . IsAbsoluteTimeValue		2564184	0					
ANR	2564421	MemberAccess	v1 . IsAbsoluteTimeValue		2564184	0					
ANR	2564422	Identifier	v1		2564184	0					
ANR	2564423	Identifier	IsAbsoluteTimeValue		2564184	1					
ANR	2564424	ArgumentList	asecs1		2564184	1					
ANR	2564425	Argument	asecs1		2564184	0					
ANR	2564426	Identifier	asecs1		2564184	0					
ANR	2564427	ExpressionStatement	v2 . IsAbsoluteTimeValue ( asecs2 )	1233:3:31302:31334	2564184	1	True				
ANR	2564428	CallExpression	v2 . IsAbsoluteTimeValue ( asecs2 )		2564184	0					
ANR	2564429	Callee	v2 . IsAbsoluteTimeValue		2564184	0					
ANR	2564430	MemberAccess	v2 . IsAbsoluteTimeValue		2564184	0					
ANR	2564431	Identifier	v2		2564184	0					
ANR	2564432	Identifier	IsAbsoluteTimeValue		2564184	1					
ANR	2564433	ArgumentList	asecs2		2564184	1					
ANR	2564434	Argument	asecs2		2564184	0					
ANR	2564435	Identifier	asecs2		2564184	0					
ANR	2564436	ExpressionStatement	result . SetRelativeTimeValue ( asecs1 . secs - asecs2 . secs )	1234:3:31339:31395	2564184	2	True				
ANR	2564437	CallExpression	result . SetRelativeTimeValue ( asecs1 . secs - asecs2 . secs )		2564184	0					
ANR	2564438	Callee	result . SetRelativeTimeValue		2564184	0					
ANR	2564439	MemberAccess	result . SetRelativeTimeValue		2564184	0					
ANR	2564440	Identifier	result		2564184	0					
ANR	2564441	Identifier	SetRelativeTimeValue		2564184	1					
ANR	2564442	ArgumentList	asecs1 . secs - asecs2 . secs		2564184	1					
ANR	2564443	Argument	asecs1 . secs - asecs2 . secs		2564184	0					
ANR	2564444	AdditiveExpression	asecs1 . secs - asecs2 . secs		2564184	0		-			
ANR	2564445	MemberAccess	asecs1 . secs		2564184	0					
ANR	2564446	Identifier	asecs1		2564184	0					
ANR	2564447	Identifier	secs		2564184	1					
ANR	2564448	MemberAccess	asecs2 . secs		2564184	1					
ANR	2564449	Identifier	asecs2		2564184	0					
ANR	2564450	Identifier	secs		2564184	1					
ANR	2564451	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	1235:3:31400:31431	2564184	3	True				
ANR	2564452	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2564184	0		|			
ANR	2564453	Identifier	SIG_CHLD1		2564184	0					
ANR	2564454	Identifier	SIG_CHLD2		2564184	1					
ANR	2564455	IfStatement	if ( vt1 == Value :: ABSOLUTE_TIME_VALUE && vt2 == Value :: RELATIVE_TIME_VALUE )		2564184	1					
ANR	2564456	Condition	vt1 == Value :: ABSOLUTE_TIME_VALUE && vt2 == Value :: RELATIVE_TIME_VALUE	1238:6:31444:31514	2564184	0	True				
ANR	2564457	AndExpression	vt1 == Value :: ABSOLUTE_TIME_VALUE && vt2 == Value :: RELATIVE_TIME_VALUE		2564184	0		&&			
ANR	2564458	EqualityExpression	vt1 == Value :: ABSOLUTE_TIME_VALUE		2564184	0		==			
ANR	2564459	Identifier	vt1		2564184	0					
ANR	2564460	Identifier	Value :: ABSOLUTE_TIME_VALUE		2564184	1					
ANR	2564461	EqualityExpression	vt2 == Value :: RELATIVE_TIME_VALUE		2564184	1		==			
ANR	2564462	Identifier	vt2		2564184	0					
ANR	2564463	Identifier	Value :: RELATIVE_TIME_VALUE		2564184	1					
ANR	2564464	CompoundStatement		50:38:1397:1397	2564184	1					
ANR	2564465	ExpressionStatement	v1 . IsAbsoluteTimeValue ( asecs1 )	1240:3:31523:31555	2564184	0	True				
ANR	2564466	CallExpression	v1 . IsAbsoluteTimeValue ( asecs1 )		2564184	0					
ANR	2564467	Callee	v1 . IsAbsoluteTimeValue		2564184	0					
ANR	2564468	MemberAccess	v1 . IsAbsoluteTimeValue		2564184	0					
ANR	2564469	Identifier	v1		2564184	0					
ANR	2564470	Identifier	IsAbsoluteTimeValue		2564184	1					
ANR	2564471	ArgumentList	asecs1		2564184	1					
ANR	2564472	Argument	asecs1		2564184	0					
ANR	2564473	Identifier	asecs1		2564184	0					
ANR	2564474	ExpressionStatement	v2 . IsRelativeTimeValue ( rsecs2 )	1241:3:31560:31592	2564184	1	True				
ANR	2564475	CallExpression	v2 . IsRelativeTimeValue ( rsecs2 )		2564184	0					
ANR	2564476	Callee	v2 . IsRelativeTimeValue		2564184	0					
ANR	2564477	MemberAccess	v2 . IsRelativeTimeValue		2564184	0					
ANR	2564478	Identifier	v2		2564184	0					
ANR	2564479	Identifier	IsRelativeTimeValue		2564184	1					
ANR	2564480	ArgumentList	rsecs2		2564184	1					
ANR	2564481	Argument	rsecs2		2564184	0					
ANR	2564482	Identifier	rsecs2		2564184	0					
ANR	2564483	ExpressionStatement	asecs1 . secs = asecs1 . secs - ( int ) rsecs2	1242:3:31597:31637	2564184	2	True				
ANR	2564484	AssignmentExpression	asecs1 . secs = asecs1 . secs - ( int ) rsecs2		2564184	0		=			
ANR	2564485	MemberAccess	asecs1 . secs		2564184	0					
ANR	2564486	Identifier	asecs1		2564184	0					
ANR	2564487	Identifier	secs		2564184	1					
ANR	2564488	AdditiveExpression	asecs1 . secs - ( int ) rsecs2		2564184	1		-			
ANR	2564489	MemberAccess	asecs1 . secs		2564184	0					
ANR	2564490	Identifier	asecs1		2564184	0					
ANR	2564491	Identifier	secs		2564184	1					
ANR	2564492	CastExpression	( int ) rsecs2		2564184	1					
ANR	2564493	CastTarget	int		2564184	0					
ANR	2564494	Identifier	rsecs2		2564184	1					
ANR	2564495	ExpressionStatement	result . SetAbsoluteTimeValue ( asecs1 )	1243:3:31642:31679	2564184	3	True				
ANR	2564496	CallExpression	result . SetAbsoluteTimeValue ( asecs1 )		2564184	0					
ANR	2564497	Callee	result . SetAbsoluteTimeValue		2564184	0					
ANR	2564498	MemberAccess	result . SetAbsoluteTimeValue		2564184	0					
ANR	2564499	Identifier	result		2564184	0					
ANR	2564500	Identifier	SetAbsoluteTimeValue		2564184	1					
ANR	2564501	ArgumentList	asecs1		2564184	1					
ANR	2564502	Argument	asecs1		2564184	0					
ANR	2564503	Identifier	asecs1		2564184	0					
ANR	2564504	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	1244:3:31684:31715	2564184	4	True				
ANR	2564505	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2564184	0		|			
ANR	2564506	Identifier	SIG_CHLD1		2564184	0					
ANR	2564507	Identifier	SIG_CHLD2		2564184	1					
ANR	2564508	IfStatement	if ( vt1 == Value :: RELATIVE_TIME_VALUE && vt2 == Value :: RELATIVE_TIME_VALUE )		2564184	2					
ANR	2564509	Condition	vt1 == Value :: RELATIVE_TIME_VALUE && vt2 == Value :: RELATIVE_TIME_VALUE	1247:6:31728:31798	2564184	0	True				
ANR	2564510	AndExpression	vt1 == Value :: RELATIVE_TIME_VALUE && vt2 == Value :: RELATIVE_TIME_VALUE		2564184	0		&&			
ANR	2564511	EqualityExpression	vt1 == Value :: RELATIVE_TIME_VALUE		2564184	0		==			
ANR	2564512	Identifier	vt1		2564184	0					
ANR	2564513	Identifier	Value :: RELATIVE_TIME_VALUE		2564184	1					
ANR	2564514	EqualityExpression	vt2 == Value :: RELATIVE_TIME_VALUE		2564184	1		==			
ANR	2564515	Identifier	vt2		2564184	0					
ANR	2564516	Identifier	Value :: RELATIVE_TIME_VALUE		2564184	1					
ANR	2564517	CompoundStatement		59:38:1681:1681	2564184	1					
ANR	2564518	ExpressionStatement	v1 . IsRelativeTimeValue ( rsecs1 )	1249:3:31807:31839	2564184	0	True				
ANR	2564519	CallExpression	v1 . IsRelativeTimeValue ( rsecs1 )		2564184	0					
ANR	2564520	Callee	v1 . IsRelativeTimeValue		2564184	0					
ANR	2564521	MemberAccess	v1 . IsRelativeTimeValue		2564184	0					
ANR	2564522	Identifier	v1		2564184	0					
ANR	2564523	Identifier	IsRelativeTimeValue		2564184	1					
ANR	2564524	ArgumentList	rsecs1		2564184	1					
ANR	2564525	Argument	rsecs1		2564184	0					
ANR	2564526	Identifier	rsecs1		2564184	0					
ANR	2564527	ExpressionStatement	v2 . IsRelativeTimeValue ( rsecs2 )	1250:3:31844:31876	2564184	1	True				
ANR	2564528	CallExpression	v2 . IsRelativeTimeValue ( rsecs2 )		2564184	0					
ANR	2564529	Callee	v2 . IsRelativeTimeValue		2564184	0					
ANR	2564530	MemberAccess	v2 . IsRelativeTimeValue		2564184	0					
ANR	2564531	Identifier	v2		2564184	0					
ANR	2564532	Identifier	IsRelativeTimeValue		2564184	1					
ANR	2564533	ArgumentList	rsecs2		2564184	1					
ANR	2564534	Argument	rsecs2		2564184	0					
ANR	2564535	Identifier	rsecs2		2564184	0					
ANR	2564536	ExpressionStatement	result . SetRelativeTimeValue ( rsecs1 - rsecs2 )	1251:3:31881:31927	2564184	2	True				
ANR	2564537	CallExpression	result . SetRelativeTimeValue ( rsecs1 - rsecs2 )		2564184	0					
ANR	2564538	Callee	result . SetRelativeTimeValue		2564184	0					
ANR	2564539	MemberAccess	result . SetRelativeTimeValue		2564184	0					
ANR	2564540	Identifier	result		2564184	0					
ANR	2564541	Identifier	SetRelativeTimeValue		2564184	1					
ANR	2564542	ArgumentList	rsecs1 - rsecs2		2564184	1					
ANR	2564543	Argument	rsecs1 - rsecs2		2564184	0					
ANR	2564544	AdditiveExpression	rsecs1 - rsecs2		2564184	0		-			
ANR	2564545	Identifier	rsecs1		2564184	0					
ANR	2564546	Identifier	rsecs2		2564184	1					
ANR	2564547	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	1252:3:31932:31963	2564184	3	True				
ANR	2564548	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2564184	0		|			
ANR	2564549	Identifier	SIG_CHLD1		2564184	0					
ANR	2564550	Identifier	SIG_CHLD2		2564184	1					
ANR	2564551	IfStatement	if ( op == MULTIPLICATION_OP || op == DIVISION_OP )		2564184	10					
ANR	2564552	Condition	op == MULTIPLICATION_OP || op == DIVISION_OP	1256:5:31978:32021	2564184	0	True				
ANR	2564553	OrExpression	op == MULTIPLICATION_OP || op == DIVISION_OP		2564184	0		||			
ANR	2564554	EqualityExpression	op == MULTIPLICATION_OP		2564184	0		==			
ANR	2564555	Identifier	op		2564184	0					
ANR	2564556	Identifier	MULTIPLICATION_OP		2564184	1					
ANR	2564557	EqualityExpression	op == DIVISION_OP		2564184	1		==			
ANR	2564558	Identifier	op		2564184	0					
ANR	2564559	Identifier	DIVISION_OP		2564184	1					
ANR	2564560	CompoundStatement		67:52:1904:1904	2564184	1					
ANR	2564561	IfStatement	if ( vt1 == Value :: RELATIVE_TIME_VALUE && vt2 == Value :: INTEGER_VALUE )		2564184	0					
ANR	2564562	Condition	vt1 == Value :: RELATIVE_TIME_VALUE && vt2 == Value :: INTEGER_VALUE	1257:6:32033:32092	2564184	0	True				
ANR	2564563	AndExpression	vt1 == Value :: RELATIVE_TIME_VALUE && vt2 == Value :: INTEGER_VALUE		2564184	0		&&			
ANR	2564564	EqualityExpression	vt1 == Value :: RELATIVE_TIME_VALUE		2564184	0		==			
ANR	2564565	Identifier	vt1		2564184	0					
ANR	2564566	Identifier	Value :: RELATIVE_TIME_VALUE		2564184	1					
ANR	2564567	EqualityExpression	vt2 == Value :: INTEGER_VALUE		2564184	1		==			
ANR	2564568	Identifier	vt2		2564184	0					
ANR	2564569	Identifier	Value :: INTEGER_VALUE		2564184	1					
ANR	2564570	CompoundStatement		70:12:2005:2018	2564184	1					
ANR	2564571	IdentifierDeclStatement	int num ;	1258:3:32101:32112	2564184	0	True				
ANR	2564572	IdentifierDecl	num		2564184	0					
ANR	2564573	IdentifierDeclType	int		2564184	0					
ANR	2564574	Identifier	num		2564184	1					
ANR	2564575	IdentifierDeclStatement	double msecs ;	1259:12:32126:32139	2564184	1	True				
ANR	2564576	IdentifierDecl	msecs		2564184	0					
ANR	2564577	IdentifierDeclType	double		2564184	0					
ANR	2564578	Identifier	msecs		2564184	1					
ANR	2564579	ExpressionStatement	v1 . IsRelativeTimeValue ( rsecs1 )	1260:3:32144:32176	2564184	2	True				
ANR	2564580	CallExpression	v1 . IsRelativeTimeValue ( rsecs1 )		2564184	0					
ANR	2564581	Callee	v1 . IsRelativeTimeValue		2564184	0					
ANR	2564582	MemberAccess	v1 . IsRelativeTimeValue		2564184	0					
ANR	2564583	Identifier	v1		2564184	0					
ANR	2564584	Identifier	IsRelativeTimeValue		2564184	1					
ANR	2564585	ArgumentList	rsecs1		2564184	1					
ANR	2564586	Argument	rsecs1		2564184	0					
ANR	2564587	Identifier	rsecs1		2564184	0					
ANR	2564588	ExpressionStatement	v2 . IsIntegerValue ( num )	1261:3:32181:32205	2564184	3	True				
ANR	2564589	CallExpression	v2 . IsIntegerValue ( num )		2564184	0					
ANR	2564590	Callee	v2 . IsIntegerValue		2564184	0					
ANR	2564591	MemberAccess	v2 . IsIntegerValue		2564184	0					
ANR	2564592	Identifier	v2		2564184	0					
ANR	2564593	Identifier	IsIntegerValue		2564184	1					
ANR	2564594	ArgumentList	num		2564184	1					
ANR	2564595	Argument	num		2564184	0					
ANR	2564596	Identifier	num		2564184	0					
ANR	2564597	IfStatement	if ( op == MULTIPLICATION_OP )		2564184	4					
ANR	2564598	Condition	op == MULTIPLICATION_OP	1262:7:32214:32236	2564184	0	True				
ANR	2564599	EqualityExpression	op == MULTIPLICATION_OP		2564184	0		==			
ANR	2564600	Identifier	op		2564184	0					
ANR	2564601	Identifier	MULTIPLICATION_OP		2564184	1					
ANR	2564602	CompoundStatement		73:33:2119:2119	2564184	1					
ANR	2564603	ExpressionStatement	msecs = rsecs1 * num	1263:4:32246:32266	2564184	0	True				
ANR	2564604	AssignmentExpression	msecs = rsecs1 * num		2564184	0		=			
ANR	2564605	Identifier	msecs		2564184	0					
ANR	2564606	MultiplicativeExpression	rsecs1 * num		2564184	1		*			
ANR	2564607	Identifier	rsecs1		2564184	0					
ANR	2564608	Identifier	num		2564184	1					
ANR	2564609	ElseStatement	else		2564184	0					
ANR	2564610	CompoundStatement		75:10:2157:2157	2564184	0					
ANR	2564611	ExpressionStatement	msecs = rsecs1 / num	1265:4:32284:32304	2564184	0	True				
ANR	2564612	AssignmentExpression	msecs = rsecs1 / num		2564184	0		=			
ANR	2564613	Identifier	msecs		2564184	0					
ANR	2564614	MultiplicativeExpression	rsecs1 / num		2564184	1		/			
ANR	2564615	Identifier	rsecs1		2564184	0					
ANR	2564616	Identifier	num		2564184	1					
ANR	2564617	ExpressionStatement	result . SetRelativeTimeValue ( msecs )	1267:3:32314:32350	2564184	5	True				
ANR	2564618	CallExpression	result . SetRelativeTimeValue ( msecs )		2564184	0					
ANR	2564619	Callee	result . SetRelativeTimeValue		2564184	0					
ANR	2564620	MemberAccess	result . SetRelativeTimeValue		2564184	0					
ANR	2564621	Identifier	result		2564184	0					
ANR	2564622	Identifier	SetRelativeTimeValue		2564184	1					
ANR	2564623	ArgumentList	msecs		2564184	1					
ANR	2564624	Argument	msecs		2564184	0					
ANR	2564625	Identifier	msecs		2564184	0					
ANR	2564626	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	1268:3:32355:32386	2564184	6	True				
ANR	2564627	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2564184	0		|			
ANR	2564628	Identifier	SIG_CHLD1		2564184	0					
ANR	2564629	Identifier	SIG_CHLD2		2564184	1					
ANR	2564630	IfStatement	if ( vt1 == Value :: RELATIVE_TIME_VALUE && vt2 == Value :: REAL_VALUE )		2564184	1					
ANR	2564631	Condition	vt1 == Value :: RELATIVE_TIME_VALUE && vt2 == Value :: REAL_VALUE	1271:6:32399:32456	2564184	0	True				
ANR	2564632	AndExpression	vt1 == Value :: RELATIVE_TIME_VALUE && vt2 == Value :: REAL_VALUE		2564184	0		&&			
ANR	2564633	EqualityExpression	vt1 == Value :: RELATIVE_TIME_VALUE		2564184	0		==			
ANR	2564634	Identifier	vt1		2564184	0					
ANR	2564635	Identifier	Value :: RELATIVE_TIME_VALUE		2564184	1					
ANR	2564636	EqualityExpression	vt2 == Value :: REAL_VALUE		2564184	1		==			
ANR	2564637	Identifier	vt2		2564184	0					
ANR	2564638	Identifier	Value :: REAL_VALUE		2564184	1					
ANR	2564639	CompoundStatement		84:3:2360:2373	2564184	1					
ANR	2564640	IdentifierDeclStatement	double num ;	1272:3:32465:32476	2564184	0	True				
ANR	2564641	IdentifierDecl	num		2564184	0					
ANR	2564642	IdentifierDeclType	double		2564184	0					
ANR	2564643	Identifier	num		2564184	1					
ANR	2564644	IdentifierDeclStatement	double msecs ;	1273:3:32481:32494	2564184	1	True				
ANR	2564645	IdentifierDecl	msecs		2564184	0					
ANR	2564646	IdentifierDeclType	double		2564184	0					
ANR	2564647	Identifier	msecs		2564184	1					
ANR	2564648	ExpressionStatement	v1 . IsRelativeTimeValue ( rsecs1 )	1274:3:32499:32531	2564184	2	True				
ANR	2564649	CallExpression	v1 . IsRelativeTimeValue ( rsecs1 )		2564184	0					
ANR	2564650	Callee	v1 . IsRelativeTimeValue		2564184	0					
ANR	2564651	MemberAccess	v1 . IsRelativeTimeValue		2564184	0					
ANR	2564652	Identifier	v1		2564184	0					
ANR	2564653	Identifier	IsRelativeTimeValue		2564184	1					
ANR	2564654	ArgumentList	rsecs1		2564184	1					
ANR	2564655	Argument	rsecs1		2564184	0					
ANR	2564656	Identifier	rsecs1		2564184	0					
ANR	2564657	ExpressionStatement	v2 . IsRealValue ( num )	1275:3:32536:32557	2564184	3	True				
ANR	2564658	CallExpression	v2 . IsRealValue ( num )		2564184	0					
ANR	2564659	Callee	v2 . IsRealValue		2564184	0					
ANR	2564660	MemberAccess	v2 . IsRealValue		2564184	0					
ANR	2564661	Identifier	v2		2564184	0					
ANR	2564662	Identifier	IsRealValue		2564184	1					
ANR	2564663	ArgumentList	num		2564184	1					
ANR	2564664	Argument	num		2564184	0					
ANR	2564665	Identifier	num		2564184	0					
ANR	2564666	IfStatement	if ( op == MULTIPLICATION_OP )		2564184	4					
ANR	2564667	Condition	op == MULTIPLICATION_OP	1276:7:32566:32588	2564184	0	True				
ANR	2564668	EqualityExpression	op == MULTIPLICATION_OP		2564184	0		==			
ANR	2564669	Identifier	op		2564184	0					
ANR	2564670	Identifier	MULTIPLICATION_OP		2564184	1					
ANR	2564671	CompoundStatement		87:33:2471:2471	2564184	1					
ANR	2564672	ExpressionStatement	msecs = rsecs1 * num	1277:4:32598:32618	2564184	0	True				
ANR	2564673	AssignmentExpression	msecs = rsecs1 * num		2564184	0		=			
ANR	2564674	Identifier	msecs		2564184	0					
ANR	2564675	MultiplicativeExpression	rsecs1 * num		2564184	1		*			
ANR	2564676	Identifier	rsecs1		2564184	0					
ANR	2564677	Identifier	num		2564184	1					
ANR	2564678	ElseStatement	else		2564184	0					
ANR	2564679	CompoundStatement		89:10:2509:2509	2564184	0					
ANR	2564680	ExpressionStatement	msecs = rsecs1 / num	1279:4:32636:32656	2564184	0	True				
ANR	2564681	AssignmentExpression	msecs = rsecs1 / num		2564184	0		=			
ANR	2564682	Identifier	msecs		2564184	0					
ANR	2564683	MultiplicativeExpression	rsecs1 / num		2564184	1		/			
ANR	2564684	Identifier	rsecs1		2564184	0					
ANR	2564685	Identifier	num		2564184	1					
ANR	2564686	ExpressionStatement	result . SetRelativeTimeValue ( msecs )	1281:3:32666:32702	2564184	5	True				
ANR	2564687	CallExpression	result . SetRelativeTimeValue ( msecs )		2564184	0					
ANR	2564688	Callee	result . SetRelativeTimeValue		2564184	0					
ANR	2564689	MemberAccess	result . SetRelativeTimeValue		2564184	0					
ANR	2564690	Identifier	result		2564184	0					
ANR	2564691	Identifier	SetRelativeTimeValue		2564184	1					
ANR	2564692	ArgumentList	msecs		2564184	1					
ANR	2564693	Argument	msecs		2564184	0					
ANR	2564694	Identifier	msecs		2564184	0					
ANR	2564695	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	1282:3:32707:32738	2564184	6	True				
ANR	2564696	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2564184	0		|			
ANR	2564697	Identifier	SIG_CHLD1		2564184	0					
ANR	2564698	Identifier	SIG_CHLD2		2564184	1					
ANR	2564699	IfStatement	if ( vt1 == Value :: INTEGER_VALUE && vt2 == Value :: RELATIVE_TIME_VALUE && op == MULTIPLICATION_OP )		2564184	2					
ANR	2564700	Condition	vt1 == Value :: INTEGER_VALUE && vt2 == Value :: RELATIVE_TIME_VALUE && op == MULTIPLICATION_OP	1285:6:32751:32840	2564184	0	True				
ANR	2564701	AndExpression	vt1 == Value :: INTEGER_VALUE && vt2 == Value :: RELATIVE_TIME_VALUE && op == MULTIPLICATION_OP		2564184	0		&&			
ANR	2564702	EqualityExpression	vt1 == Value :: INTEGER_VALUE		2564184	0		==			
ANR	2564703	Identifier	vt1		2564184	0					
ANR	2564704	Identifier	Value :: INTEGER_VALUE		2564184	1					
ANR	2564705	AndExpression	vt2 == Value :: RELATIVE_TIME_VALUE && op == MULTIPLICATION_OP		2564184	1		&&			
ANR	2564706	EqualityExpression	vt2 == Value :: RELATIVE_TIME_VALUE		2564184	0		==			
ANR	2564707	Identifier	vt2		2564184	0					
ANR	2564708	Identifier	Value :: RELATIVE_TIME_VALUE		2564184	1					
ANR	2564709	EqualityExpression	op == MULTIPLICATION_OP		2564184	1		==			
ANR	2564710	Identifier	op		2564184	0					
ANR	2564711	Identifier	MULTIPLICATION_OP		2564184	1					
ANR	2564712	CompoundStatement		98:3:2728:2735	2564184	1					
ANR	2564713	IdentifierDeclStatement	int num ;	1287:3:32849:32856	2564184	0	True				
ANR	2564714	IdentifierDecl	num		2564184	0					
ANR	2564715	IdentifierDeclType	int		2564184	0					
ANR	2564716	Identifier	num		2564184	1					
ANR	2564717	ExpressionStatement	v1 . IsIntegerValue ( num )	1288:3:32861:32885	2564184	1	True				
ANR	2564718	CallExpression	v1 . IsIntegerValue ( num )		2564184	0					
ANR	2564719	Callee	v1 . IsIntegerValue		2564184	0					
ANR	2564720	MemberAccess	v1 . IsIntegerValue		2564184	0					
ANR	2564721	Identifier	v1		2564184	0					
ANR	2564722	Identifier	IsIntegerValue		2564184	1					
ANR	2564723	ArgumentList	num		2564184	1					
ANR	2564724	Argument	num		2564184	0					
ANR	2564725	Identifier	num		2564184	0					
ANR	2564726	ExpressionStatement	v2 . IsRelativeTimeValue ( rsecs1 )	1289:3:32890:32922	2564184	2	True				
ANR	2564727	CallExpression	v2 . IsRelativeTimeValue ( rsecs1 )		2564184	0					
ANR	2564728	Callee	v2 . IsRelativeTimeValue		2564184	0					
ANR	2564729	MemberAccess	v2 . IsRelativeTimeValue		2564184	0					
ANR	2564730	Identifier	v2		2564184	0					
ANR	2564731	Identifier	IsRelativeTimeValue		2564184	1					
ANR	2564732	ArgumentList	rsecs1		2564184	1					
ANR	2564733	Argument	rsecs1		2564184	0					
ANR	2564734	Identifier	rsecs1		2564184	0					
ANR	2564735	ExpressionStatement	result . SetRelativeTimeValue ( num * rsecs1 )	1290:3:32927:32970	2564184	3	True				
ANR	2564736	CallExpression	result . SetRelativeTimeValue ( num * rsecs1 )		2564184	0					
ANR	2564737	Callee	result . SetRelativeTimeValue		2564184	0					
ANR	2564738	MemberAccess	result . SetRelativeTimeValue		2564184	0					
ANR	2564739	Identifier	result		2564184	0					
ANR	2564740	Identifier	SetRelativeTimeValue		2564184	1					
ANR	2564741	ArgumentList	num * rsecs1		2564184	1					
ANR	2564742	Argument	num * rsecs1		2564184	0					
ANR	2564743	MultiplicativeExpression	num * rsecs1		2564184	0		*			
ANR	2564744	Identifier	num		2564184	0					
ANR	2564745	Identifier	rsecs1		2564184	1					
ANR	2564746	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	1291:3:32975:33006	2564184	4	True				
ANR	2564747	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2564184	0		|			
ANR	2564748	Identifier	SIG_CHLD1		2564184	0					
ANR	2564749	Identifier	SIG_CHLD2		2564184	1					
ANR	2564750	IfStatement	if ( vt2 == Value :: RELATIVE_TIME_VALUE && vt1 == Value :: REAL_VALUE && op == MULTIPLICATION_OP )		2564184	3					
ANR	2564751	Condition	vt2 == Value :: RELATIVE_TIME_VALUE && vt1 == Value :: REAL_VALUE && op == MULTIPLICATION_OP	1294:6:33019:33105	2564184	0	True				
ANR	2564752	AndExpression	vt2 == Value :: RELATIVE_TIME_VALUE && vt1 == Value :: REAL_VALUE && op == MULTIPLICATION_OP		2564184	0		&&			
ANR	2564753	EqualityExpression	vt2 == Value :: RELATIVE_TIME_VALUE		2564184	0		==			
ANR	2564754	Identifier	vt2		2564184	0					
ANR	2564755	Identifier	Value :: RELATIVE_TIME_VALUE		2564184	1					
ANR	2564756	AndExpression	vt1 == Value :: REAL_VALUE && op == MULTIPLICATION_OP		2564184	1		&&			
ANR	2564757	EqualityExpression	vt1 == Value :: REAL_VALUE		2564184	0		==			
ANR	2564758	Identifier	vt1		2564184	0					
ANR	2564759	Identifier	Value :: REAL_VALUE		2564184	1					
ANR	2564760	EqualityExpression	op == MULTIPLICATION_OP		2564184	1		==			
ANR	2564761	Identifier	op		2564184	0					
ANR	2564762	Identifier	MULTIPLICATION_OP		2564184	1					
ANR	2564763	CompoundStatement		107:3:2993:3004	2564184	1					
ANR	2564764	IdentifierDeclStatement	double num ;	1296:3:33114:33125	2564184	0	True				
ANR	2564765	IdentifierDecl	num		2564184	0					
ANR	2564766	IdentifierDeclType	double		2564184	0					
ANR	2564767	Identifier	num		2564184	1					
ANR	2564768	ExpressionStatement	v1 . IsRelativeTimeValue ( rsecs1 )	1297:3:33130:33162	2564184	1	True				
ANR	2564769	CallExpression	v1 . IsRelativeTimeValue ( rsecs1 )		2564184	0					
ANR	2564770	Callee	v1 . IsRelativeTimeValue		2564184	0					
ANR	2564771	MemberAccess	v1 . IsRelativeTimeValue		2564184	0					
ANR	2564772	Identifier	v1		2564184	0					
ANR	2564773	Identifier	IsRelativeTimeValue		2564184	1					
ANR	2564774	ArgumentList	rsecs1		2564184	1					
ANR	2564775	Argument	rsecs1		2564184	0					
ANR	2564776	Identifier	rsecs1		2564184	0					
ANR	2564777	ExpressionStatement	v2 . IsRealValue ( num )	1298:3:33167:33188	2564184	2	True				
ANR	2564778	CallExpression	v2 . IsRealValue ( num )		2564184	0					
ANR	2564779	Callee	v2 . IsRealValue		2564184	0					
ANR	2564780	MemberAccess	v2 . IsRealValue		2564184	0					
ANR	2564781	Identifier	v2		2564184	0					
ANR	2564782	Identifier	IsRealValue		2564184	1					
ANR	2564783	ArgumentList	num		2564184	1					
ANR	2564784	Argument	num		2564184	0					
ANR	2564785	Identifier	num		2564184	0					
ANR	2564786	ExpressionStatement	result . SetRelativeTimeValue ( rsecs1 * num )	1299:3:33193:33234	2564184	3	True				
ANR	2564787	CallExpression	result . SetRelativeTimeValue ( rsecs1 * num )		2564184	0					
ANR	2564788	Callee	result . SetRelativeTimeValue		2564184	0					
ANR	2564789	MemberAccess	result . SetRelativeTimeValue		2564184	0					
ANR	2564790	Identifier	result		2564184	0					
ANR	2564791	Identifier	SetRelativeTimeValue		2564184	1					
ANR	2564792	ArgumentList	rsecs1 * num		2564184	1					
ANR	2564793	Argument	rsecs1 * num		2564184	0					
ANR	2564794	MultiplicativeExpression	rsecs1 * num		2564184	0		*			
ANR	2564795	Identifier	rsecs1		2564184	0					
ANR	2564796	Identifier	num		2564184	1					
ANR	2564797	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	1300:3:33239:33270	2564184	4	True				
ANR	2564798	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2564184	0		|			
ANR	2564799	Identifier	SIG_CHLD1		2564184	0					
ANR	2564800	Identifier	SIG_CHLD2		2564184	1					
ANR	2564801	ExpressionStatement	result . SetErrorValue ( )	1305:1:33328:33351	2564184	11	True				
ANR	2564802	CallExpression	result . SetErrorValue ( )		2564184	0					
ANR	2564803	Callee	result . SetErrorValue		2564184	0					
ANR	2564804	MemberAccess	result . SetErrorValue		2564184	0					
ANR	2564805	Identifier	result		2564184	0					
ANR	2564806	Identifier	SetErrorValue		2564184	1					
ANR	2564807	ArgumentList			2564184	1					
ANR	2564808	ReturnStatement	return ( SIG_CHLD1 | SIG_CHLD2 ) ;	1306:1:33354:33385	2564184	12	True				
ANR	2564809	InclusiveOrExpression	SIG_CHLD1 | SIG_CHLD2		2564184	0		|			
ANR	2564810	Identifier	SIG_CHLD1		2564184	0					
ANR	2564811	Identifier	SIG_CHLD2		2564184	1					
ANR	2564812	ReturnType	int		2564184	1					
ANR	2564813	Identifier	Operation :: doTimeArithmetic		2564184	2					
ANR	2564814	ParameterList	"OpKind op , Value & v1 , Value & v2 , Value & result"		2564184	3					
ANR	2564815	Parameter	OpKind op	1189:18:30071:30079	2564184	0	True				
ANR	2564816	ParameterType	OpKind		2564184	0					
ANR	2564817	Identifier	op		2564184	1					
ANR	2564818	Parameter	Value & v1	1189:29:30082:30090	2564184	1	True				
ANR	2564819	ParameterType	Value &		2564184	0					
ANR	2564820	Identifier	v1		2564184	1					
ANR	2564821	Parameter	Value & v2	1189:40:30093:30101	2564184	2	True				
ANR	2564822	ParameterType	Value &		2564184	0					
ANR	2564823	Identifier	v2		2564184	1					
ANR	2564824	Parameter	Value & result	1189:51:30104:30116	2564184	3	True				
ANR	2564825	ParameterType	Value &		2564184	0					
ANR	2564826	Identifier	result		2564184	1					
ANR	2564827	CFGEntryNode	ENTRY		2564184		True				
ANR	2564828	CFGExitNode	EXIT		2564184		True				
ANR	2564829	Symbol	asecs1 . offset		2564184						
ANR	2564830	Symbol	num		2564184						
ANR	2564831	Symbol	SIG_CHLD1		2564184						
ANR	2564832	Symbol	SIG_CHLD2		2564184						
ANR	2564833	Symbol	asecs1 . secs		2564184						
ANR	2564834	Symbol	asecs2 . secs		2564184						
ANR	2564835	Symbol	result		2564184						
ANR	2564836	Symbol	v2 . GetType		2564184						
ANR	2564837	Symbol	asecs2 . offset		2564184						
ANR	2564838	Symbol	ADDITION_OP		2564184						
ANR	2564839	Symbol	msecs		2564184						
ANR	2564840	Symbol	SUBTRACTION_OP		2564184						
ANR	2564841	Symbol	Value :: REAL_VALUE		2564184						
ANR	2564842	Symbol	op		2564184						
ANR	2564843	Symbol	asecs1		2564184						
ANR	2564844	Symbol	asecs2		2564184						
ANR	2564845	Symbol	Value :: RELATIVE_TIME_VALUE		2564184						
ANR	2564846	Symbol	DIVISION_OP		2564184						
ANR	2564847	Symbol	MULTIPLICATION_OP		2564184						
ANR	2564848	Symbol	rsecs1		2564184						
ANR	2564849	Symbol	rsecs2		2564184						
ANR	2564850	Symbol	vt1		2564184						
ANR	2564851	Symbol	vt2		2564184						
ANR	2564852	Symbol	v1		2564184						
ANR	2564853	Symbol	v2		2564184						
ANR	2564854	Symbol	Value :: ABSOLUTE_TIME_VALUE		2564184						
ANR	2564855	Symbol	Value :: INTEGER_VALUE		2564184						
ANR	2564856	Symbol	v1 . GetType		2564184						
ANR	2564857	Function	Operation :: compareStrings	1310:0:33391:34176							
ANR	2564858	FunctionDef	"Operation :: compareStrings (OpKind op , Value & v1 , Value & v2 , Value & result , bool exact)"		2564857	0					
ANR	2564859	CompoundStatement		1312:0:33484:34176	2564857	0					
ANR	2564860	IdentifierDeclStatement	"const char * s1 = NULL , * s2 = NULL ;"	1313:1:33487:33520	2564857	0	True				
ANR	2564861	IdentifierDecl	* s1 = NULL		2564857	0					
ANR	2564862	IdentifierDeclType	const char *		2564857	0					
ANR	2564863	Identifier	s1		2564857	1					
ANR	2564864	AssignmentExpression	* s1 = NULL		2564857	2		=			
ANR	2564865	Identifier	NULL		2564857	0					
ANR	2564866	Identifier	NULL		2564857	1					
ANR	2564867	IdentifierDecl	* s2 = NULL		2564857	1					
ANR	2564868	IdentifierDeclType	const char *		2564857	0					
ANR	2564869	Identifier	s2		2564857	1					
ANR	2564870	AssignmentExpression	* s2 = NULL		2564857	2		=			
ANR	2564871	Identifier	NULL		2564857	0					
ANR	2564872	Identifier	NULL		2564857	1					
ANR	2564873	IdentifierDeclStatement	int cmp ;	1314:1:33523:33531	2564857	1	True				
ANR	2564874	IdentifierDecl	cmp		2564857	0					
ANR	2564875	IdentifierDeclType	int		2564857	0					
ANR	2564876	Identifier	cmp		2564857	1					
ANR	2564877	ExpressionStatement	v1 . IsStringValue ( s1 )	1316:1:33536:33557	2564857	2	True				
ANR	2564878	CallExpression	v1 . IsStringValue ( s1 )		2564857	0					
ANR	2564879	Callee	v1 . IsStringValue		2564857	0					
ANR	2564880	MemberAccess	v1 . IsStringValue		2564857	0					
ANR	2564881	Identifier	v1		2564857	0					
ANR	2564882	Identifier	IsStringValue		2564857	1					
ANR	2564883	ArgumentList	s1		2564857	1					
ANR	2564884	Argument	s1		2564857	0					
ANR	2564885	Identifier	s1		2564857	0					
ANR	2564886	ExpressionStatement	v2 . IsStringValue ( s2 )	1317:1:33560:33581	2564857	3	True				
ANR	2564887	CallExpression	v2 . IsStringValue ( s2 )		2564857	0					
ANR	2564888	Callee	v2 . IsStringValue		2564857	0					
ANR	2564889	MemberAccess	v2 . IsStringValue		2564857	0					
ANR	2564890	Identifier	v2		2564857	0					
ANR	2564891	Identifier	IsStringValue		2564857	1					
ANR	2564892	ArgumentList	s2		2564857	1					
ANR	2564893	Argument	s2		2564857	0					
ANR	2564894	Identifier	s2		2564857	0					
ANR	2564895	ExpressionStatement	result . SetBooleanValue ( false )	1319:1:33585:33616	2564857	4	True				
ANR	2564896	CallExpression	result . SetBooleanValue ( false )		2564857	0					
ANR	2564897	Callee	result . SetBooleanValue		2564857	0					
ANR	2564898	MemberAccess	result . SetBooleanValue		2564857	0					
ANR	2564899	Identifier	result		2564857	0					
ANR	2564900	Identifier	SetBooleanValue		2564857	1					
ANR	2564901	ArgumentList	false		2564857	1					
ANR	2564902	Argument	false		2564857	0					
ANR	2564903	Identifier	false		2564857	0					
ANR	2564904	IfStatement	if ( exact )		2564857	5					
ANR	2564905	Condition	exact	1320:5:33623:33627	2564857	0	True				
ANR	2564906	Identifier	exact		2564857	0					
ANR	2564907	CompoundStatement		9:13:146:146	2564857	1					
ANR	2564908	ExpressionStatement	"cmp = strcmp ( s1 , s2 )"	1321:2:33635:33657	2564857	0	True				
ANR	2564909	AssignmentExpression	"cmp = strcmp ( s1 , s2 )"		2564857	0		=			
ANR	2564910	Identifier	cmp		2564857	0					
ANR	2564911	CallExpression	"strcmp ( s1 , s2 )"		2564857	1					
ANR	2564912	Callee	strcmp		2564857	0					
ANR	2564913	Identifier	strcmp		2564857	0					
ANR	2564914	ArgumentList	s1		2564857	1					
ANR	2564915	Argument	s1		2564857	0					
ANR	2564916	Identifier	s1		2564857	0					
ANR	2564917	Argument	s2		2564857	1					
ANR	2564918	Identifier	s2		2564857	0					
ANR	2564919	ElseStatement	else		2564857	0					
ANR	2564920	CompoundStatement		11:8:182:182	2564857	0					
ANR	2564921	ExpressionStatement	"cmp = strcasecmp ( s1 , s2 )"	1323:2:33671:33697	2564857	0	True				
ANR	2564922	AssignmentExpression	"cmp = strcasecmp ( s1 , s2 )"		2564857	0		=			
ANR	2564923	Identifier	cmp		2564857	0					
ANR	2564924	CallExpression	"strcasecmp ( s1 , s2 )"		2564857	1					
ANR	2564925	Callee	strcasecmp		2564857	0					
ANR	2564926	Identifier	strcasecmp		2564857	0					
ANR	2564927	ArgumentList	s1		2564857	1					
ANR	2564928	Argument	s1		2564857	0					
ANR	2564929	Identifier	s1		2564857	0					
ANR	2564930	Argument	s2		2564857	1					
ANR	2564931	Identifier	s2		2564857	0					
ANR	2564932	IfStatement	if ( cmp < 0 )		2564857	6					
ANR	2564933	Condition	cmp < 0	1325:5:33707:33713	2564857	0	True				
ANR	2564934	RelationalExpression	cmp < 0		2564857	0		<			
ANR	2564935	Identifier	cmp		2564857	0					
ANR	2564936	PrimaryExpression	0		2564857	1					
ANR	2564937	CompoundStatement		14:14:231:231	2564857	1					
ANR	2564938	IfStatement	if ( op == LESS_THAN_OP || op == LESS_OR_EQUAL_OP || op == NOT_EQUAL_OP )		2564857	0					
ANR	2564939	Condition	op == LESS_THAN_OP || op == LESS_OR_EQUAL_OP || op == NOT_EQUAL_OP	1327:6:33737:33813	2564857	0	True				
ANR	2564940	OrExpression	op == LESS_THAN_OP || op == LESS_OR_EQUAL_OP || op == NOT_EQUAL_OP		2564857	0		||			
ANR	2564941	EqualityExpression	op == LESS_THAN_OP		2564857	0		==			
ANR	2564942	Identifier	op		2564857	0					
ANR	2564943	Identifier	LESS_THAN_OP		2564857	1					
ANR	2564944	OrExpression	op == LESS_OR_EQUAL_OP || op == NOT_EQUAL_OP		2564857	1		||			
ANR	2564945	EqualityExpression	op == LESS_OR_EQUAL_OP		2564857	0		==			
ANR	2564946	Identifier	op		2564857	0					
ANR	2564947	Identifier	LESS_OR_EQUAL_OP		2564857	1					
ANR	2564948	EqualityExpression	op == NOT_EQUAL_OP		2564857	1		==			
ANR	2564949	Identifier	op		2564857	0					
ANR	2564950	Identifier	NOT_EQUAL_OP		2564857	1					
ANR	2564951	CompoundStatement		18:23:331:331	2564857	1					
ANR	2564952	ExpressionStatement	result . SetBooleanValue ( true )	1330:3:33821:33851	2564857	0	True				
ANR	2564953	CallExpression	result . SetBooleanValue ( true )		2564857	0					
ANR	2564954	Callee	result . SetBooleanValue		2564857	0					
ANR	2564955	MemberAccess	result . SetBooleanValue		2564857	0					
ANR	2564956	Identifier	result		2564857	0					
ANR	2564957	Identifier	SetBooleanValue		2564857	1					
ANR	2564958	ArgumentList	true		2564857	1					
ANR	2564959	Argument	true		2564857	0					
ANR	2564960	Identifier	true		2564857	0					
ANR	2564961	ElseStatement	else		2564857	0					
ANR	2564962	IfStatement	if ( cmp == 0 )		2564857	0					
ANR	2564963	Condition	cmp == 0	1332:12:33869:33876	2564857	0	True				
ANR	2564964	EqualityExpression	cmp == 0		2564857	0		==			
ANR	2564965	Identifier	cmp		2564857	0					
ANR	2564966	PrimaryExpression	0		2564857	1					
ANR	2564967	CompoundStatement		21:22:394:394	2564857	1					
ANR	2564968	IfStatement	if ( op == LESS_OR_EQUAL_OP || op == EQUAL_OP || op == GREATER_OR_EQUAL_OP )		2564857	0					
ANR	2564969	Condition	op == LESS_OR_EQUAL_OP || op == EQUAL_OP || op == GREATER_OR_EQUAL_OP	1334:6:33901:33979	2564857	0	True				
ANR	2564970	OrExpression	op == LESS_OR_EQUAL_OP || op == EQUAL_OP || op == GREATER_OR_EQUAL_OP		2564857	0		||			
ANR	2564971	EqualityExpression	op == LESS_OR_EQUAL_OP		2564857	0		==			
ANR	2564972	Identifier	op		2564857	0					
ANR	2564973	Identifier	LESS_OR_EQUAL_OP		2564857	1					
ANR	2564974	OrExpression	op == EQUAL_OP || op == GREATER_OR_EQUAL_OP		2564857	1		||			
ANR	2564975	EqualityExpression	op == EQUAL_OP		2564857	0		==			
ANR	2564976	Identifier	op		2564857	0					
ANR	2564977	Identifier	EQUAL_OP		2564857	1					
ANR	2564978	EqualityExpression	op == GREATER_OR_EQUAL_OP		2564857	1		==			
ANR	2564979	Identifier	op		2564857	0					
ANR	2564980	Identifier	GREATER_OR_EQUAL_OP		2564857	1					
ANR	2564981	CompoundStatement		25:30:497:497	2564857	1					
ANR	2564982	ExpressionStatement	result . SetBooleanValue ( true )	1337:3:33987:34017	2564857	0	True				
ANR	2564983	CallExpression	result . SetBooleanValue ( true )		2564857	0					
ANR	2564984	Callee	result . SetBooleanValue		2564857	0					
ANR	2564985	MemberAccess	result . SetBooleanValue		2564857	0					
ANR	2564986	Identifier	result		2564857	0					
ANR	2564987	Identifier	SetBooleanValue		2564857	1					
ANR	2564988	ArgumentList	true		2564857	1					
ANR	2564989	Argument	true		2564857	0					
ANR	2564990	Identifier	true		2564857	0					
ANR	2564991	ElseStatement	else		2564857	0					
ANR	2564992	CompoundStatement		28:8:546:546	2564857	0					
ANR	2564993	IfStatement	if ( op == GREATER_THAN_OP || op == GREATER_OR_EQUAL_OP || op == NOT_EQUAL_OP )		2564857	0					
ANR	2564994	Condition	op == GREATER_THAN_OP || op == GREATER_OR_EQUAL_OP || op == NOT_EQUAL_OP	1341:6:34052:34129	2564857	0	True				
ANR	2564995	OrExpression	op == GREATER_THAN_OP || op == GREATER_OR_EQUAL_OP || op == NOT_EQUAL_OP		2564857	0		||			
ANR	2564996	EqualityExpression	op == GREATER_THAN_OP		2564857	0		==			
ANR	2564997	Identifier	op		2564857	0					
ANR	2564998	Identifier	GREATER_THAN_OP		2564857	1					
ANR	2564999	OrExpression	op == GREATER_OR_EQUAL_OP || op == NOT_EQUAL_OP		2564857	1		||			
ANR	2565000	EqualityExpression	op == GREATER_OR_EQUAL_OP		2564857	0		==			
ANR	2565001	Identifier	op		2564857	0					
ANR	2565002	Identifier	GREATER_OR_EQUAL_OP		2564857	1					
ANR	2565003	EqualityExpression	op == NOT_EQUAL_OP		2564857	1		==			
ANR	2565004	Identifier	op		2564857	0					
ANR	2565005	Identifier	NOT_EQUAL_OP		2564857	1					
ANR	2565006	CompoundStatement		32:23:647:647	2564857	1					
ANR	2565007	ExpressionStatement	result . SetBooleanValue ( true )	1344:3:34137:34167	2564857	0	True				
ANR	2565008	CallExpression	result . SetBooleanValue ( true )		2564857	0					
ANR	2565009	Callee	result . SetBooleanValue		2564857	0					
ANR	2565010	MemberAccess	result . SetBooleanValue		2564857	0					
ANR	2565011	Identifier	result		2564857	0					
ANR	2565012	Identifier	SetBooleanValue		2564857	1					
ANR	2565013	ArgumentList	true		2564857	1					
ANR	2565014	Argument	true		2564857	0					
ANR	2565015	Identifier	true		2564857	0					
ANR	2565016	ReturnType	void		2564857	1					
ANR	2565017	Identifier	Operation :: compareStrings		2564857	2					
ANR	2565018	ParameterList	"OpKind op , Value & v1 , Value & v2 , Value & result , bool exact"		2564857	3					
ANR	2565019	Parameter	OpKind op	1311:16:33424:33432	2564857	0	True				
ANR	2565020	ParameterType	OpKind		2564857	0					
ANR	2565021	Identifier	op		2564857	1					
ANR	2565022	Parameter	Value & v1	1311:27:33435:33443	2564857	1	True				
ANR	2565023	ParameterType	Value &		2564857	0					
ANR	2565024	Identifier	v1		2564857	1					
ANR	2565025	Parameter	Value & v2	1311:38:33446:33454	2564857	2	True				
ANR	2565026	ParameterType	Value &		2564857	0					
ANR	2565027	Identifier	v2		2564857	1					
ANR	2565028	Parameter	Value & result	1311:49:33457:33469	2564857	3	True				
ANR	2565029	ParameterType	Value &		2564857	0					
ANR	2565030	Identifier	result		2564857	1					
ANR	2565031	Parameter	bool exact	1311:64:33472:33481	2564857	4	True				
ANR	2565032	ParameterType	bool		2564857	0					
ANR	2565033	Identifier	exact		2564857	1					
ANR	2565034	CFGEntryNode	ENTRY		2564857		True				
ANR	2565035	CFGExitNode	EXIT		2564857		True				
ANR	2565036	Symbol	strcmp		2564857						
ANR	2565037	Symbol	op		2564857						
ANR	2565038	Symbol	EQUAL_OP		2564857						
ANR	2565039	Symbol	NULL		2564857						
ANR	2565040	Symbol	cmp		2564857						
ANR	2565041	Symbol	NOT_EQUAL_OP		2564857						
ANR	2565042	Symbol	GREATER_OR_EQUAL_OP		2564857						
ANR	2565043	Symbol	false		2564857						
ANR	2565044	Symbol	LESS_THAN_OP		2564857						
ANR	2565045	Symbol	LESS_OR_EQUAL_OP		2564857						
ANR	2565046	Symbol	result		2564857						
ANR	2565047	Symbol	exact		2564857						
ANR	2565048	Symbol	true		2564857						
ANR	2565049	Symbol	GREATER_THAN_OP		2564857						
ANR	2565050	Symbol	v1		2564857						
ANR	2565051	Symbol	v2		2564857						
ANR	2565052	Symbol	strcasecmp		2564857						
ANR	2565053	Symbol	s1		2564857						
ANR	2565054	Symbol	s2		2564857						
ANR	2565055	Function	Operation :: compareAbsoluteTimes	1350:0:34180:34992							
ANR	2565056	FunctionDef	"Operation :: compareAbsoluteTimes (OpKind op , Value & v1 , Value & v2 , Value & result)"		2565055	0					
ANR	2565057	CompoundStatement		1352:0:34268:34992	2565055	0					
ANR	2565058	IdentifierDeclStatement	"abstime_t asecs1 , asecs2 ;"	1353:1:34271:34295	2565055	0	True				
ANR	2565059	IdentifierDecl	asecs1		2565055	0					
ANR	2565060	IdentifierDeclType	abstime_t		2565055	0					
ANR	2565061	Identifier	asecs1		2565055	1					
ANR	2565062	IdentifierDecl	asecs2		2565055	1					
ANR	2565063	IdentifierDeclType	abstime_t		2565055	0					
ANR	2565064	Identifier	asecs2		2565055	1					
ANR	2565065	IdentifierDeclStatement	bool compResult ;	1354:1:34298:34313	2565055	1	True				
ANR	2565066	IdentifierDecl	compResult		2565055	0					
ANR	2565067	IdentifierDeclType	bool		2565055	0					
ANR	2565068	Identifier	compResult		2565055	1					
ANR	2565069	ExpressionStatement	v1 . IsAbsoluteTimeValue ( asecs1 )	1356:1:34317:34349	2565055	2	True				
ANR	2565070	CallExpression	v1 . IsAbsoluteTimeValue ( asecs1 )		2565055	0					
ANR	2565071	Callee	v1 . IsAbsoluteTimeValue		2565055	0					
ANR	2565072	MemberAccess	v1 . IsAbsoluteTimeValue		2565055	0					
ANR	2565073	Identifier	v1		2565055	0					
ANR	2565074	Identifier	IsAbsoluteTimeValue		2565055	1					
ANR	2565075	ArgumentList	asecs1		2565055	1					
ANR	2565076	Argument	asecs1		2565055	0					
ANR	2565077	Identifier	asecs1		2565055	0					
ANR	2565078	ExpressionStatement	v2 . IsAbsoluteTimeValue ( asecs2 )	1357:1:34352:34384	2565055	3	True				
ANR	2565079	CallExpression	v2 . IsAbsoluteTimeValue ( asecs2 )		2565055	0					
ANR	2565080	Callee	v2 . IsAbsoluteTimeValue		2565055	0					
ANR	2565081	MemberAccess	v2 . IsAbsoluteTimeValue		2565055	0					
ANR	2565082	Identifier	v2		2565055	0					
ANR	2565083	Identifier	IsAbsoluteTimeValue		2565055	1					
ANR	2565084	ArgumentList	asecs2		2565055	1					
ANR	2565085	Argument	asecs2		2565055	0					
ANR	2565086	Identifier	asecs2		2565055	0					
ANR	2565087	SwitchStatement	switch ( op )		2565055	4					
ANR	2565088	Condition	op	1359:9:34396:34397	2565055	0	True				
ANR	2565089	Identifier	op		2565055	0					
ANR	2565090	CompoundStatement		8:14:132:132	2565055	1					
ANR	2565091	Label	case LESS_THAN_OP :	1360:2:34405:34422	2565055	0	True				
ANR	2565092	Identifier	LESS_THAN_OP		2565055	0					
ANR	2565093	ExpressionStatement	compResult = ( asecs1 . secs < asecs2 . secs )	1360:24:34427:34467	2565055	1	True				
ANR	2565094	AssignmentExpression	compResult = ( asecs1 . secs < asecs2 . secs )		2565055	0		=			
ANR	2565095	Identifier	compResult		2565055	0					
ANR	2565096	RelationalExpression	asecs1 . secs < asecs2 . secs		2565055	1		<			
ANR	2565097	MemberAccess	asecs1 . secs		2565055	0					
ANR	2565098	Identifier	asecs1		2565055	0					
ANR	2565099	Identifier	secs		2565055	1					
ANR	2565100	MemberAccess	asecs2 . secs		2565055	1					
ANR	2565101	Identifier	asecs2		2565055	0					
ANR	2565102	Identifier	secs		2565055	1					
ANR	2565103	BreakStatement	break ;	1360:67:34470:34475	2565055	2	True				
ANR	2565104	Label	case LESS_OR_EQUAL_OP :	1361:2:34479:34500	2565055	3	True				
ANR	2565105	Identifier	LESS_OR_EQUAL_OP		2565055	0					
ANR	2565106	ExpressionStatement	compResult = ( asecs1 . secs <= asecs2 . secs )	1361:27:34504:34545	2565055	4	True				
ANR	2565107	AssignmentExpression	compResult = ( asecs1 . secs <= asecs2 . secs )		2565055	0		=			
ANR	2565108	Identifier	compResult		2565055	0					
ANR	2565109	RelationalExpression	asecs1 . secs <= asecs2 . secs		2565055	1		<=			
ANR	2565110	MemberAccess	asecs1 . secs		2565055	0					
ANR	2565111	Identifier	asecs1		2565055	0					
ANR	2565112	Identifier	secs		2565055	1					
ANR	2565113	MemberAccess	asecs2 . secs		2565055	1					
ANR	2565114	Identifier	asecs2		2565055	0					
ANR	2565115	Identifier	secs		2565055	1					
ANR	2565116	BreakStatement	break ;	1361:71:34548:34553	2565055	5	True				
ANR	2565117	Label	case EQUAL_OP :	1362:2:34557:34570	2565055	6	True				
ANR	2565118	Identifier	EQUAL_OP		2565055	0					
ANR	2565119	ExpressionStatement	compResult = ( asecs1 . secs == asecs2 . secs )	1362:21:34576:34617	2565055	7	True				
ANR	2565120	AssignmentExpression	compResult = ( asecs1 . secs == asecs2 . secs )		2565055	0		=			
ANR	2565121	Identifier	compResult		2565055	0					
ANR	2565122	EqualityExpression	asecs1 . secs == asecs2 . secs		2565055	1		==			
ANR	2565123	MemberAccess	asecs1 . secs		2565055	0					
ANR	2565124	Identifier	asecs1		2565055	0					
ANR	2565125	Identifier	secs		2565055	1					
ANR	2565126	MemberAccess	asecs2 . secs		2565055	1					
ANR	2565127	Identifier	asecs2		2565055	0					
ANR	2565128	Identifier	secs		2565055	1					
ANR	2565129	BreakStatement	break ;	1362:65:34620:34625	2565055	8	True				
ANR	2565130	Label	case NOT_EQUAL_OP :	1363:2:34629:34646	2565055	9	True				
ANR	2565131	Identifier	NOT_EQUAL_OP		2565055	0					
ANR	2565132	ExpressionStatement	compResult = ( asecs1 . secs != asecs2 . secs )	1363:24:34651:34692	2565055	10	True				
ANR	2565133	AssignmentExpression	compResult = ( asecs1 . secs != asecs2 . secs )		2565055	0		=			
ANR	2565134	Identifier	compResult		2565055	0					
ANR	2565135	EqualityExpression	asecs1 . secs != asecs2 . secs		2565055	1		!=			
ANR	2565136	MemberAccess	asecs1 . secs		2565055	0					
ANR	2565137	Identifier	asecs1		2565055	0					
ANR	2565138	Identifier	secs		2565055	1					
ANR	2565139	MemberAccess	asecs2 . secs		2565055	1					
ANR	2565140	Identifier	asecs2		2565055	0					
ANR	2565141	Identifier	secs		2565055	1					
ANR	2565142	BreakStatement	break ;	1363:68:34695:34700	2565055	11	True				
ANR	2565143	Label	case GREATER_THAN_OP :	1364:2:34704:34724	2565055	12	True				
ANR	2565144	Identifier	GREATER_THAN_OP		2565055	0					
ANR	2565145	ExpressionStatement	compResult = ( asecs1 . secs > asecs2 . secs )	1364:26:34728:34768	2565055	13	True				
ANR	2565146	AssignmentExpression	compResult = ( asecs1 . secs > asecs2 . secs )		2565055	0		=			
ANR	2565147	Identifier	compResult		2565055	0					
ANR	2565148	RelationalExpression	asecs1 . secs > asecs2 . secs		2565055	1		>			
ANR	2565149	MemberAccess	asecs1 . secs		2565055	0					
ANR	2565150	Identifier	asecs1		2565055	0					
ANR	2565151	Identifier	secs		2565055	1					
ANR	2565152	MemberAccess	asecs2 . secs		2565055	1					
ANR	2565153	Identifier	asecs2		2565055	0					
ANR	2565154	Identifier	secs		2565055	1					
ANR	2565155	BreakStatement	break ;	1364:69:34771:34776	2565055	14	True				
ANR	2565156	Label	case GREATER_OR_EQUAL_OP :	1365:2:34780:34804	2565055	15	True				
ANR	2565157	Identifier	GREATER_OR_EQUAL_OP		2565055	0					
ANR	2565158	ExpressionStatement	compResult = ( asecs1 . secs >= asecs2 . secs )	1365:29:34807:34848	2565055	16	True				
ANR	2565159	AssignmentExpression	compResult = ( asecs1 . secs >= asecs2 . secs )		2565055	0		=			
ANR	2565160	Identifier	compResult		2565055	0					
ANR	2565161	RelationalExpression	asecs1 . secs >= asecs2 . secs		2565055	1		>=			
ANR	2565162	MemberAccess	asecs1 . secs		2565055	0					
ANR	2565163	Identifier	asecs1		2565055	0					
ANR	2565164	Identifier	secs		2565055	1					
ANR	2565165	MemberAccess	asecs2 . secs		2565055	1					
ANR	2565166	Identifier	asecs2		2565055	0					
ANR	2565167	Identifier	secs		2565055	1					
ANR	2565168	BreakStatement	break ;	1365:73:34851:34856	2565055	17	True				
ANR	2565169	Label	default :	1366:2:34860:34867	2565055	18	True				
ANR	2565170	Identifier	default		2565055	0					
ANR	2565171	ExpressionStatement	"CLASSAD_EXCEPT ( ""Should not get here"" )"	1368:3:34898:34936	2565055	19	True				
ANR	2565172	CallExpression	"CLASSAD_EXCEPT ( ""Should not get here"" )"		2565055	0					
ANR	2565173	Callee	CLASSAD_EXCEPT		2565055	0					
ANR	2565174	Identifier	CLASSAD_EXCEPT		2565055	0					
ANR	2565175	ArgumentList	"""Should not get here"""		2565055	1					
ANR	2565176	Argument	"""Should not get here"""		2565055	0					
ANR	2565177	PrimaryExpression	"""Should not get here"""		2565055	0					
ANR	2565178	ReturnStatement	return ;	1369:3:34941:34947	2565055	20	True				
ANR	2565179	ExpressionStatement	result . SetBooleanValue ( compResult )	1372:1:34954:34990	2565055	5	True				
ANR	2565180	CallExpression	result . SetBooleanValue ( compResult )		2565055	0					
ANR	2565181	Callee	result . SetBooleanValue		2565055	0					
ANR	2565182	MemberAccess	result . SetBooleanValue		2565055	0					
ANR	2565183	Identifier	result		2565055	0					
ANR	2565184	Identifier	SetBooleanValue		2565055	1					
ANR	2565185	ArgumentList	compResult		2565055	1					
ANR	2565186	Argument	compResult		2565055	0					
ANR	2565187	Identifier	compResult		2565055	0					
ANR	2565188	ReturnType	void		2565055	1					
ANR	2565189	Identifier	Operation :: compareAbsoluteTimes		2565055	2					
ANR	2565190	ParameterList	"OpKind op , Value & v1 , Value & v2 , Value & result"		2565055	3					
ANR	2565191	Parameter	OpKind op	1351:22:34219:34227	2565055	0	True				
ANR	2565192	ParameterType	OpKind		2565055	0					
ANR	2565193	Identifier	op		2565055	1					
ANR	2565194	Parameter	Value & v1	1351:33:34230:34238	2565055	1	True				
ANR	2565195	ParameterType	Value &		2565055	0					
ANR	2565196	Identifier	v1		2565055	1					
ANR	2565197	Parameter	Value & v2	1351:44:34241:34249	2565055	2	True				
ANR	2565198	ParameterType	Value &		2565055	0					
ANR	2565199	Identifier	v2		2565055	1					
ANR	2565200	Parameter	Value & result	1351:55:34252:34264	2565055	3	True				
ANR	2565201	ParameterType	Value &		2565055	0					
ANR	2565202	Identifier	result		2565055	1					
ANR	2565203	CFGEntryNode	ENTRY		2565055		True				
ANR	2565204	CFGExitNode	EXIT		2565055		True				
ANR	2565205	Symbol	result		2565055						
ANR	2565206	Symbol	op		2565055						
ANR	2565207	Symbol	compResult		2565055						
ANR	2565208	Symbol	asecs1		2565055						
ANR	2565209	Symbol	asecs2		2565055						
ANR	2565210	Symbol	v1		2565055						
ANR	2565211	Symbol	v2		2565055						
ANR	2565212	Symbol	asecs1 . secs		2565055						
ANR	2565213	Symbol	asecs2 . secs		2565055						
ANR	2565214	Function	Operation :: compareRelativeTimes	1375:0:34995:35781							
ANR	2565215	FunctionDef	"Operation :: compareRelativeTimes (OpKind op , Value & v1 , Value & v2 , Value & result)"		2565214	0					
ANR	2565216	CompoundStatement		1377:0:35083:35781	2565214	0					
ANR	2565217	IdentifierDeclStatement	"double rsecs1 , rsecs2 ;"	1378:1:35086:35107	2565214	0	True				
ANR	2565218	IdentifierDecl	rsecs1		2565214	0					
ANR	2565219	IdentifierDeclType	double		2565214	0					
ANR	2565220	Identifier	rsecs1		2565214	1					
ANR	2565221	IdentifierDecl	rsecs2		2565214	1					
ANR	2565222	IdentifierDeclType	double		2565214	0					
ANR	2565223	Identifier	rsecs2		2565214	1					
ANR	2565224	IdentifierDeclStatement	bool compResult ;	1379:1:35110:35125	2565214	1	True				
ANR	2565225	IdentifierDecl	compResult		2565214	0					
ANR	2565226	IdentifierDeclType	bool		2565214	0					
ANR	2565227	Identifier	compResult		2565214	1					
ANR	2565228	ExpressionStatement	v1 . IsRelativeTimeValue ( rsecs1 )	1381:1:35129:35161	2565214	2	True				
ANR	2565229	CallExpression	v1 . IsRelativeTimeValue ( rsecs1 )		2565214	0					
ANR	2565230	Callee	v1 . IsRelativeTimeValue		2565214	0					
ANR	2565231	MemberAccess	v1 . IsRelativeTimeValue		2565214	0					
ANR	2565232	Identifier	v1		2565214	0					
ANR	2565233	Identifier	IsRelativeTimeValue		2565214	1					
ANR	2565234	ArgumentList	rsecs1		2565214	1					
ANR	2565235	Argument	rsecs1		2565214	0					
ANR	2565236	Identifier	rsecs1		2565214	0					
ANR	2565237	ExpressionStatement	v2 . IsRelativeTimeValue ( rsecs2 )	1382:1:35164:35196	2565214	3	True				
ANR	2565238	CallExpression	v2 . IsRelativeTimeValue ( rsecs2 )		2565214	0					
ANR	2565239	Callee	v2 . IsRelativeTimeValue		2565214	0					
ANR	2565240	MemberAccess	v2 . IsRelativeTimeValue		2565214	0					
ANR	2565241	Identifier	v2		2565214	0					
ANR	2565242	Identifier	IsRelativeTimeValue		2565214	1					
ANR	2565243	ArgumentList	rsecs2		2565214	1					
ANR	2565244	Argument	rsecs2		2565214	0					
ANR	2565245	Identifier	rsecs2		2565214	0					
ANR	2565246	SwitchStatement	switch ( op )		2565214	4					
ANR	2565247	Condition	op	1384:9:35208:35209	2565214	0	True				
ANR	2565248	Identifier	op		2565214	0					
ANR	2565249	CompoundStatement		8:14:129:129	2565214	1					
ANR	2565250	Label	case LESS_THAN_OP :	1385:2:35217:35234	2565214	0	True				
ANR	2565251	Identifier	LESS_THAN_OP		2565214	0					
ANR	2565252	ExpressionStatement	compResult = ( rsecs1 < rsecs2 )	1386:3:35243:35275	2565214	1	True				
ANR	2565253	AssignmentExpression	compResult = ( rsecs1 < rsecs2 )		2565214	0		=			
ANR	2565254	Identifier	compResult		2565214	0					
ANR	2565255	RelationalExpression	rsecs1 < rsecs2		2565214	1		<			
ANR	2565256	Identifier	rsecs1		2565214	0					
ANR	2565257	Identifier	rsecs2		2565214	1					
ANR	2565258	BreakStatement	break ;	1387:3:35280:35285	2565214	2	True				
ANR	2565259	Label	case LESS_OR_EQUAL_OP :	1389:2:35290:35311	2565214	3	True				
ANR	2565260	Identifier	LESS_OR_EQUAL_OP		2565214	0					
ANR	2565261	ExpressionStatement	compResult = ( rsecs1 <= rsecs2 )	1390:3:35316:35349	2565214	4	True				
ANR	2565262	AssignmentExpression	compResult = ( rsecs1 <= rsecs2 )		2565214	0		=			
ANR	2565263	Identifier	compResult		2565214	0					
ANR	2565264	RelationalExpression	rsecs1 <= rsecs2		2565214	1		<=			
ANR	2565265	Identifier	rsecs1		2565214	0					
ANR	2565266	Identifier	rsecs2		2565214	1					
ANR	2565267	BreakStatement	break ;	1391:3:35354:35359	2565214	5	True				
ANR	2565268	Label	case EQUAL_OP :	1393:2:35364:35377	2565214	6	True				
ANR	2565269	Identifier	EQUAL_OP		2565214	0					
ANR	2565270	ExpressionStatement	compResult = ( rsecs1 == rsecs2 )	1394:3:35382:35415	2565214	7	True				
ANR	2565271	AssignmentExpression	compResult = ( rsecs1 == rsecs2 )		2565214	0		=			
ANR	2565272	Identifier	compResult		2565214	0					
ANR	2565273	EqualityExpression	rsecs1 == rsecs2		2565214	1		==			
ANR	2565274	Identifier	rsecs1		2565214	0					
ANR	2565275	Identifier	rsecs2		2565214	1					
ANR	2565276	BreakStatement	break ;	1395:3:35420:35425	2565214	8	True				
ANR	2565277	Label	case NOT_EQUAL_OP :	1397:2:35430:35447	2565214	9	True				
ANR	2565278	Identifier	NOT_EQUAL_OP		2565214	0					
ANR	2565279	ExpressionStatement	compResult = ( rsecs1 != rsecs2 )	1398:3:35452:35485	2565214	10	True				
ANR	2565280	AssignmentExpression	compResult = ( rsecs1 != rsecs2 )		2565214	0		=			
ANR	2565281	Identifier	compResult		2565214	0					
ANR	2565282	EqualityExpression	rsecs1 != rsecs2		2565214	1		!=			
ANR	2565283	Identifier	rsecs1		2565214	0					
ANR	2565284	Identifier	rsecs2		2565214	1					
ANR	2565285	BreakStatement	break ;	1399:3:35490:35495	2565214	11	True				
ANR	2565286	Label	case GREATER_THAN_OP :	1401:2:35500:35520	2565214	12	True				
ANR	2565287	Identifier	GREATER_THAN_OP		2565214	0					
ANR	2565288	ExpressionStatement	compResult = ( rsecs1 > rsecs2 )	1402:3:35525:35557	2565214	13	True				
ANR	2565289	AssignmentExpression	compResult = ( rsecs1 > rsecs2 )		2565214	0		=			
ANR	2565290	Identifier	compResult		2565214	0					
ANR	2565291	RelationalExpression	rsecs1 > rsecs2		2565214	1		>			
ANR	2565292	Identifier	rsecs1		2565214	0					
ANR	2565293	Identifier	rsecs2		2565214	1					
ANR	2565294	BreakStatement	break ;	1403:3:35562:35567	2565214	14	True				
ANR	2565295	Label	case GREATER_OR_EQUAL_OP :	1405:2:35572:35596	2565214	15	True				
ANR	2565296	Identifier	GREATER_OR_EQUAL_OP		2565214	0					
ANR	2565297	ExpressionStatement	compResult = ( rsecs1 >= rsecs2 )	1406:3:35601:35634	2565214	16	True				
ANR	2565298	AssignmentExpression	compResult = ( rsecs1 >= rsecs2 )		2565214	0		=			
ANR	2565299	Identifier	compResult		2565214	0					
ANR	2565300	RelationalExpression	rsecs1 >= rsecs2		2565214	1		>=			
ANR	2565301	Identifier	rsecs1		2565214	0					
ANR	2565302	Identifier	rsecs2		2565214	1					
ANR	2565303	BreakStatement	break ;	1407:3:35639:35644	2565214	17	True				
ANR	2565304	Label	default :	1409:2:35649:35656	2565214	18	True				
ANR	2565305	Identifier	default		2565214	0					
ANR	2565306	ExpressionStatement	"CLASSAD_EXCEPT ( ""Should not get here"" )"	1411:3:35687:35725	2565214	19	True				
ANR	2565307	CallExpression	"CLASSAD_EXCEPT ( ""Should not get here"" )"		2565214	0					
ANR	2565308	Callee	CLASSAD_EXCEPT		2565214	0					
ANR	2565309	Identifier	CLASSAD_EXCEPT		2565214	0					
ANR	2565310	ArgumentList	"""Should not get here"""		2565214	1					
ANR	2565311	Argument	"""Should not get here"""		2565214	0					
ANR	2565312	PrimaryExpression	"""Should not get here"""		2565214	0					
ANR	2565313	ReturnStatement	return ;	1412:3:35730:35736	2565214	20	True				
ANR	2565314	ExpressionStatement	result . SetBooleanValue ( compResult )	1415:1:35743:35779	2565214	5	True				
ANR	2565315	CallExpression	result . SetBooleanValue ( compResult )		2565214	0					
ANR	2565316	Callee	result . SetBooleanValue		2565214	0					
ANR	2565317	MemberAccess	result . SetBooleanValue		2565214	0					
ANR	2565318	Identifier	result		2565214	0					
ANR	2565319	Identifier	SetBooleanValue		2565214	1					
ANR	2565320	ArgumentList	compResult		2565214	1					
ANR	2565321	Argument	compResult		2565214	0					
ANR	2565322	Identifier	compResult		2565214	0					
ANR	2565323	ReturnType	void		2565214	1					
ANR	2565324	Identifier	Operation :: compareRelativeTimes		2565214	2					
ANR	2565325	ParameterList	"OpKind op , Value & v1 , Value & v2 , Value & result"		2565214	3					
ANR	2565326	Parameter	OpKind op	1376:22:35034:35042	2565214	0	True				
ANR	2565327	ParameterType	OpKind		2565214	0					
ANR	2565328	Identifier	op		2565214	1					
ANR	2565329	Parameter	Value & v1	1376:33:35045:35053	2565214	1	True				
ANR	2565330	ParameterType	Value &		2565214	0					
ANR	2565331	Identifier	v1		2565214	1					
ANR	2565332	Parameter	Value & v2	1376:44:35056:35064	2565214	2	True				
ANR	2565333	ParameterType	Value &		2565214	0					
ANR	2565334	Identifier	v2		2565214	1					
ANR	2565335	Parameter	Value & result	1376:55:35067:35079	2565214	3	True				
ANR	2565336	ParameterType	Value &		2565214	0					
ANR	2565337	Identifier	result		2565214	1					
ANR	2565338	CFGEntryNode	ENTRY		2565214		True				
ANR	2565339	CFGExitNode	EXIT		2565214		True				
ANR	2565340	Symbol	result		2565214						
ANR	2565341	Symbol	op		2565214						
ANR	2565342	Symbol	rsecs1		2565214						
ANR	2565343	Symbol	rsecs2		2565214						
ANR	2565344	Symbol	compResult		2565214						
ANR	2565345	Symbol	v1		2565214						
ANR	2565346	Symbol	v2		2565214						
ANR	2565347	Function	Operation :: compareBools	1419:0:35785:36444							
ANR	2565348	FunctionDef	"Operation :: compareBools (OpKind op , Value & v1 , Value & v2 , Value & result)"		2565347	0					
ANR	2565349	CompoundStatement		1421:0:35865:36444	2565347	0					
ANR	2565350	IdentifierDeclStatement	"bool b1 , b2 , compResult ;"	1422:1:35868:35891	2565347	0	True				
ANR	2565351	IdentifierDecl	b1		2565347	0					
ANR	2565352	IdentifierDeclType	bool		2565347	0					
ANR	2565353	Identifier	b1		2565347	1					
ANR	2565354	IdentifierDecl	b2		2565347	1					
ANR	2565355	IdentifierDeclType	bool		2565347	0					
ANR	2565356	Identifier	b2		2565347	1					
ANR	2565357	IdentifierDecl	compResult		2565347	2					
ANR	2565358	IdentifierDeclType	bool		2565347	0					
ANR	2565359	Identifier	compResult		2565347	1					
ANR	2565360	ExpressionStatement	v1 . IsBooleanValue ( b1 )	1424:1:35895:35918	2565347	1	True				
ANR	2565361	CallExpression	v1 . IsBooleanValue ( b1 )		2565347	0					
ANR	2565362	Callee	v1 . IsBooleanValue		2565347	0					
ANR	2565363	MemberAccess	v1 . IsBooleanValue		2565347	0					
ANR	2565364	Identifier	v1		2565347	0					
ANR	2565365	Identifier	IsBooleanValue		2565347	1					
ANR	2565366	ArgumentList	b1		2565347	1					
ANR	2565367	Argument	b1		2565347	0					
ANR	2565368	Identifier	b1		2565347	0					
ANR	2565369	ExpressionStatement	v2 . IsBooleanValue ( b2 )	1425:1:35921:35944	2565347	2	True				
ANR	2565370	CallExpression	v2 . IsBooleanValue ( b2 )		2565347	0					
ANR	2565371	Callee	v2 . IsBooleanValue		2565347	0					
ANR	2565372	MemberAccess	v2 . IsBooleanValue		2565347	0					
ANR	2565373	Identifier	v2		2565347	0					
ANR	2565374	Identifier	IsBooleanValue		2565347	1					
ANR	2565375	ArgumentList	b2		2565347	1					
ANR	2565376	Argument	b2		2565347	0					
ANR	2565377	Identifier	b2		2565347	0					
ANR	2565378	SwitchStatement	switch ( op )		2565347	3					
ANR	2565379	Condition	op	1427:9:35956:35957	2565347	0	True				
ANR	2565380	Identifier	op		2565347	0					
ANR	2565381	CompoundStatement		7:14:95:95	2565347	1					
ANR	2565382	Label	case LESS_THAN_OP :	1428:2:35965:35982	2565347	0	True				
ANR	2565383	Identifier	LESS_THAN_OP		2565347	0					
ANR	2565384	ExpressionStatement	compResult = ( b1 < b2 )	1428:24:35987:36009	2565347	1	True				
ANR	2565385	AssignmentExpression	compResult = ( b1 < b2 )		2565347	0		=			
ANR	2565386	Identifier	compResult		2565347	0					
ANR	2565387	RelationalExpression	b1 < b2		2565347	1		<			
ANR	2565388	Identifier	b1		2565347	0					
ANR	2565389	Identifier	b2		2565347	1					
ANR	2565390	BreakStatement	break ;	1428:49:36012:36017	2565347	2	True				
ANR	2565391	Label	case LESS_OR_EQUAL_OP :	1429:2:36021:36042	2565347	3	True				
ANR	2565392	Identifier	LESS_OR_EQUAL_OP		2565347	0					
ANR	2565393	ExpressionStatement	compResult = ( b1 <= b2 )	1429:27:36046:36069	2565347	4	True				
ANR	2565394	AssignmentExpression	compResult = ( b1 <= b2 )		2565347	0		=			
ANR	2565395	Identifier	compResult		2565347	0					
ANR	2565396	RelationalExpression	b1 <= b2		2565347	1		<=			
ANR	2565397	Identifier	b1		2565347	0					
ANR	2565398	Identifier	b2		2565347	1					
ANR	2565399	BreakStatement	break ;	1429:53:36072:36077	2565347	5	True				
ANR	2565400	Label	case EQUAL_OP :	1430:2:36081:36094	2565347	6	True				
ANR	2565401	Identifier	EQUAL_OP		2565347	0					
ANR	2565402	ExpressionStatement	compResult = ( b1 == b2 )	1430:21:36100:36123	2565347	7	True				
ANR	2565403	AssignmentExpression	compResult = ( b1 == b2 )		2565347	0		=			
ANR	2565404	Identifier	compResult		2565347	0					
ANR	2565405	EqualityExpression	b1 == b2		2565347	1		==			
ANR	2565406	Identifier	b1		2565347	0					
ANR	2565407	Identifier	b2		2565347	1					
ANR	2565408	BreakStatement	break ;	1430:47:36126:36131	2565347	8	True				
ANR	2565409	Label	case NOT_EQUAL_OP :	1431:2:36135:36152	2565347	9	True				
ANR	2565410	Identifier	NOT_EQUAL_OP		2565347	0					
ANR	2565411	ExpressionStatement	compResult = ( b1 != b2 )	1431:24:36157:36180	2565347	10	True				
ANR	2565412	AssignmentExpression	compResult = ( b1 != b2 )		2565347	0		=			
ANR	2565413	Identifier	compResult		2565347	0					
ANR	2565414	EqualityExpression	b1 != b2		2565347	1		!=			
ANR	2565415	Identifier	b1		2565347	0					
ANR	2565416	Identifier	b2		2565347	1					
ANR	2565417	BreakStatement	break ;	1431:50:36183:36188	2565347	11	True				
ANR	2565418	Label	case GREATER_THAN_OP :	1432:2:36192:36212	2565347	12	True				
ANR	2565419	Identifier	GREATER_THAN_OP		2565347	0					
ANR	2565420	ExpressionStatement	compResult = ( b1 > b2 )	1432:26:36216:36238	2565347	13	True				
ANR	2565421	AssignmentExpression	compResult = ( b1 > b2 )		2565347	0		=			
ANR	2565422	Identifier	compResult		2565347	0					
ANR	2565423	RelationalExpression	b1 > b2		2565347	1		>			
ANR	2565424	Identifier	b1		2565347	0					
ANR	2565425	Identifier	b2		2565347	1					
ANR	2565426	BreakStatement	break ;	1432:51:36241:36246	2565347	14	True				
ANR	2565427	Label	case GREATER_OR_EQUAL_OP :	1433:2:36250:36274	2565347	15	True				
ANR	2565428	Identifier	GREATER_OR_EQUAL_OP		2565347	0					
ANR	2565429	ExpressionStatement	compResult = ( b1 >= b2 )	1433:29:36277:36300	2565347	16	True				
ANR	2565430	AssignmentExpression	compResult = ( b1 >= b2 )		2565347	0		=			
ANR	2565431	Identifier	compResult		2565347	0					
ANR	2565432	RelationalExpression	b1 >= b2		2565347	1		>=			
ANR	2565433	Identifier	b1		2565347	0					
ANR	2565434	Identifier	b2		2565347	1					
ANR	2565435	BreakStatement	break ;	1433:55:36303:36308	2565347	17	True				
ANR	2565436	Label	default :	1434:2:36312:36319	2565347	18	True				
ANR	2565437	Identifier	default		2565347	0					
ANR	2565438	ExpressionStatement	"CLASSAD_EXCEPT ( ""Should not get here"" )"	1436:3:36350:36388	2565347	19	True				
ANR	2565439	CallExpression	"CLASSAD_EXCEPT ( ""Should not get here"" )"		2565347	0					
ANR	2565440	Callee	CLASSAD_EXCEPT		2565347	0					
ANR	2565441	Identifier	CLASSAD_EXCEPT		2565347	0					
ANR	2565442	ArgumentList	"""Should not get here"""		2565347	1					
ANR	2565443	Argument	"""Should not get here"""		2565347	0					
ANR	2565444	PrimaryExpression	"""Should not get here"""		2565347	0					
ANR	2565445	ReturnStatement	return ;	1437:3:36393:36399	2565347	20	True				
ANR	2565446	ExpressionStatement	result . SetBooleanValue ( compResult )	1440:1:36406:36442	2565347	4	True				
ANR	2565447	CallExpression	result . SetBooleanValue ( compResult )		2565347	0					
ANR	2565448	Callee	result . SetBooleanValue		2565347	0					
ANR	2565449	MemberAccess	result . SetBooleanValue		2565347	0					
ANR	2565450	Identifier	result		2565347	0					
ANR	2565451	Identifier	SetBooleanValue		2565347	1					
ANR	2565452	ArgumentList	compResult		2565347	1					
ANR	2565453	Argument	compResult		2565347	0					
ANR	2565454	Identifier	compResult		2565347	0					
ANR	2565455	ReturnType	void		2565347	1					
ANR	2565456	Identifier	Operation :: compareBools		2565347	2					
ANR	2565457	ParameterList	"OpKind op , Value & v1 , Value & v2 , Value & result"		2565347	3					
ANR	2565458	Parameter	OpKind op	1420:14:35816:35824	2565347	0	True				
ANR	2565459	ParameterType	OpKind		2565347	0					
ANR	2565460	Identifier	op		2565347	1					
ANR	2565461	Parameter	Value & v1	1420:25:35827:35835	2565347	1	True				
ANR	2565462	ParameterType	Value &		2565347	0					
ANR	2565463	Identifier	v1		2565347	1					
ANR	2565464	Parameter	Value & v2	1420:36:35838:35846	2565347	2	True				
ANR	2565465	ParameterType	Value &		2565347	0					
ANR	2565466	Identifier	v2		2565347	1					
ANR	2565467	Parameter	Value & result	1420:47:35849:35861	2565347	3	True				
ANR	2565468	ParameterType	Value &		2565347	0					
ANR	2565469	Identifier	result		2565347	1					
ANR	2565470	CFGEntryNode	ENTRY		2565347		True				
ANR	2565471	CFGExitNode	EXIT		2565347		True				
ANR	2565472	Symbol	result		2565347						
ANR	2565473	Symbol	b2		2565347						
ANR	2565474	Symbol	op		2565347						
ANR	2565475	Symbol	compResult		2565347						
ANR	2565476	Symbol	v1		2565347						
ANR	2565477	Symbol	v2		2565347						
ANR	2565478	Symbol	b1		2565347						
ANR	2565479	Function	Operation :: compareIntegers	1444:0:36448:37114							
ANR	2565480	FunctionDef	"Operation :: compareIntegers (OpKind op , Value & v1 , Value & v2 , Value & result)"		2565479	0					
ANR	2565481	CompoundStatement		1446:0:36530:37114	2565479	0					
ANR	2565482	IdentifierDeclStatement	"int i1 , i2 ;"	1447:1:36533:36544	2565479	0	True				
ANR	2565483	IdentifierDecl	i1		2565479	0					
ANR	2565484	IdentifierDeclType	int		2565479	0					
ANR	2565485	Identifier	i1		2565479	1					
ANR	2565486	IdentifierDecl	i2		2565479	1					
ANR	2565487	IdentifierDeclType	int		2565479	0					
ANR	2565488	Identifier	i2		2565479	1					
ANR	2565489	IdentifierDeclStatement	bool compResult ;	1448:1:36548:36563	2565479	1	True				
ANR	2565490	IdentifierDecl	compResult		2565479	0					
ANR	2565491	IdentifierDeclType	bool		2565479	0					
ANR	2565492	Identifier	compResult		2565479	1					
ANR	2565493	ExpressionStatement	v1 . IsIntegerValue ( i1 )	1450:1:36567:36589	2565479	2	True				
ANR	2565494	CallExpression	v1 . IsIntegerValue ( i1 )		2565479	0					
ANR	2565495	Callee	v1 . IsIntegerValue		2565479	0					
ANR	2565496	MemberAccess	v1 . IsIntegerValue		2565479	0					
ANR	2565497	Identifier	v1		2565479	0					
ANR	2565498	Identifier	IsIntegerValue		2565479	1					
ANR	2565499	ArgumentList	i1		2565479	1					
ANR	2565500	Argument	i1		2565479	0					
ANR	2565501	Identifier	i1		2565479	0					
ANR	2565502	ExpressionStatement	v2 . IsIntegerValue ( i2 )	1451:1:36593:36615	2565479	3	True				
ANR	2565503	CallExpression	v2 . IsIntegerValue ( i2 )		2565479	0					
ANR	2565504	Callee	v2 . IsIntegerValue		2565479	0					
ANR	2565505	MemberAccess	v2 . IsIntegerValue		2565479	0					
ANR	2565506	Identifier	v2		2565479	0					
ANR	2565507	Identifier	IsIntegerValue		2565479	1					
ANR	2565508	ArgumentList	i2		2565479	1					
ANR	2565509	Argument	i2		2565479	0					
ANR	2565510	Identifier	i2		2565479	0					
ANR	2565511	SwitchStatement	switch ( op )		2565479	4					
ANR	2565512	Condition	op	1453:9:36627:36628	2565479	0	True				
ANR	2565513	Identifier	op		2565479	0					
ANR	2565514	CompoundStatement		8:13:100:100	2565479	1					
ANR	2565515	Label	case LESS_THAN_OP :	1454:2:36635:36652	2565479	0	True				
ANR	2565516	Identifier	LESS_THAN_OP		2565479	0					
ANR	2565517	ExpressionStatement	compResult = ( i1 < i2 )	1454:24:36657:36679	2565479	1	True				
ANR	2565518	AssignmentExpression	compResult = ( i1 < i2 )		2565479	0		=			
ANR	2565519	Identifier	compResult		2565479	0					
ANR	2565520	RelationalExpression	i1 < i2		2565479	1		<			
ANR	2565521	Identifier	i1		2565479	0					
ANR	2565522	Identifier	i2		2565479	1					
ANR	2565523	BreakStatement	break ;	1454:49:36682:36687	2565479	2	True				
ANR	2565524	Label	case LESS_OR_EQUAL_OP :	1455:2:36691:36712	2565479	3	True				
ANR	2565525	Identifier	LESS_OR_EQUAL_OP		2565479	0					
ANR	2565526	ExpressionStatement	compResult = ( i1 <= i2 )	1455:27:36716:36739	2565479	4	True				
ANR	2565527	AssignmentExpression	compResult = ( i1 <= i2 )		2565479	0		=			
ANR	2565528	Identifier	compResult		2565479	0					
ANR	2565529	RelationalExpression	i1 <= i2		2565479	1		<=			
ANR	2565530	Identifier	i1		2565479	0					
ANR	2565531	Identifier	i2		2565479	1					
ANR	2565532	BreakStatement	break ;	1455:53:36742:36747	2565479	5	True				
ANR	2565533	Label	case EQUAL_OP :	1456:2:36751:36764	2565479	6	True				
ANR	2565534	Identifier	EQUAL_OP		2565479	0					
ANR	2565535	ExpressionStatement	compResult = ( i1 == i2 )	1456:21:36770:36793	2565479	7	True				
ANR	2565536	AssignmentExpression	compResult = ( i1 == i2 )		2565479	0		=			
ANR	2565537	Identifier	compResult		2565479	0					
ANR	2565538	EqualityExpression	i1 == i2		2565479	1		==			
ANR	2565539	Identifier	i1		2565479	0					
ANR	2565540	Identifier	i2		2565479	1					
ANR	2565541	BreakStatement	break ;	1456:47:36796:36801	2565479	8	True				
ANR	2565542	Label	case NOT_EQUAL_OP :	1457:2:36805:36822	2565479	9	True				
ANR	2565543	Identifier	NOT_EQUAL_OP		2565479	0					
ANR	2565544	ExpressionStatement	compResult = ( i1 != i2 )	1457:24:36827:36850	2565479	10	True				
ANR	2565545	AssignmentExpression	compResult = ( i1 != i2 )		2565479	0		=			
ANR	2565546	Identifier	compResult		2565479	0					
ANR	2565547	EqualityExpression	i1 != i2		2565479	1		!=			
ANR	2565548	Identifier	i1		2565479	0					
ANR	2565549	Identifier	i2		2565479	1					
ANR	2565550	BreakStatement	break ;	1457:50:36853:36858	2565479	11	True				
ANR	2565551	Label	case GREATER_THAN_OP :	1458:2:36862:36882	2565479	12	True				
ANR	2565552	Identifier	GREATER_THAN_OP		2565479	0					
ANR	2565553	ExpressionStatement	compResult = ( i1 > i2 )	1458:26:36886:36908	2565479	13	True				
ANR	2565554	AssignmentExpression	compResult = ( i1 > i2 )		2565479	0		=			
ANR	2565555	Identifier	compResult		2565479	0					
ANR	2565556	RelationalExpression	i1 > i2		2565479	1		>			
ANR	2565557	Identifier	i1		2565479	0					
ANR	2565558	Identifier	i2		2565479	1					
ANR	2565559	BreakStatement	break ;	1458:51:36911:36916	2565479	14	True				
ANR	2565560	Label	case GREATER_OR_EQUAL_OP :	1459:2:36920:36944	2565479	15	True				
ANR	2565561	Identifier	GREATER_OR_EQUAL_OP		2565479	0					
ANR	2565562	ExpressionStatement	compResult = ( i1 >= i2 )	1459:29:36947:36970	2565479	16	True				
ANR	2565563	AssignmentExpression	compResult = ( i1 >= i2 )		2565479	0		=			
ANR	2565564	Identifier	compResult		2565479	0					
ANR	2565565	RelationalExpression	i1 >= i2		2565479	1		>=			
ANR	2565566	Identifier	i1		2565479	0					
ANR	2565567	Identifier	i2		2565479	1					
ANR	2565568	BreakStatement	break ;	1459:55:36973:36978	2565479	17	True				
ANR	2565569	Label	default :	1460:2:36982:36989	2565479	18	True				
ANR	2565570	Identifier	default		2565479	0					
ANR	2565571	ExpressionStatement	"CLASSAD_EXCEPT ( ""Should not get here"" )"	1462:3:37020:37058	2565479	19	True				
ANR	2565572	CallExpression	"CLASSAD_EXCEPT ( ""Should not get here"" )"		2565479	0					
ANR	2565573	Callee	CLASSAD_EXCEPT		2565479	0					
ANR	2565574	Identifier	CLASSAD_EXCEPT		2565479	0					
ANR	2565575	ArgumentList	"""Should not get here"""		2565479	1					
ANR	2565576	Argument	"""Should not get here"""		2565479	0					
ANR	2565577	PrimaryExpression	"""Should not get here"""		2565479	0					
ANR	2565578	ReturnStatement	return ;	1463:3:37063:37069	2565479	20	True				
ANR	2565579	ExpressionStatement	result . SetBooleanValue ( compResult )	1466:1:37076:37112	2565479	5	True				
ANR	2565580	CallExpression	result . SetBooleanValue ( compResult )		2565479	0					
ANR	2565581	Callee	result . SetBooleanValue		2565479	0					
ANR	2565582	MemberAccess	result . SetBooleanValue		2565479	0					
ANR	2565583	Identifier	result		2565479	0					
ANR	2565584	Identifier	SetBooleanValue		2565479	1					
ANR	2565585	ArgumentList	compResult		2565479	1					
ANR	2565586	Argument	compResult		2565479	0					
ANR	2565587	Identifier	compResult		2565479	0					
ANR	2565588	ReturnType	void		2565479	1					
ANR	2565589	Identifier	Operation :: compareIntegers		2565479	2					
ANR	2565590	ParameterList	"OpKind op , Value & v1 , Value & v2 , Value & result"		2565479	3					
ANR	2565591	Parameter	OpKind op	1445:17:36482:36490	2565479	0	True				
ANR	2565592	ParameterType	OpKind		2565479	0					
ANR	2565593	Identifier	op		2565479	1					
ANR	2565594	Parameter	Value & v1	1445:28:36493:36501	2565479	1	True				
ANR	2565595	ParameterType	Value &		2565479	0					
ANR	2565596	Identifier	v1		2565479	1					
ANR	2565597	Parameter	Value & v2	1445:39:36504:36512	2565479	2	True				
ANR	2565598	ParameterType	Value &		2565479	0					
ANR	2565599	Identifier	v2		2565479	1					
ANR	2565600	Parameter	Value & result	1445:50:36515:36527	2565479	3	True				
ANR	2565601	ParameterType	Value &		2565479	0					
ANR	2565602	Identifier	result		2565479	1					
ANR	2565603	CFGEntryNode	ENTRY		2565479		True				
ANR	2565604	CFGExitNode	EXIT		2565479		True				
ANR	2565605	Symbol	result		2565479						
ANR	2565606	Symbol	op		2565479						
ANR	2565607	Symbol	compResult		2565479						
ANR	2565608	Symbol	i1		2565479						
ANR	2565609	Symbol	i2		2565479						
ANR	2565610	Symbol	v1		2565479						
ANR	2565611	Symbol	v2		2565479						
ANR	2565612	Function	Operation :: compareReals	1470:0:37118:37819							
ANR	2565613	FunctionDef	"Operation :: compareReals (OpKind op , Value & v1 , Value & v2 , Value & result)"		2565612	0					
ANR	2565614	CompoundStatement		1472:0:37197:37819	2565612	0					
ANR	2565615	IdentifierDeclStatement	"double r1 , r2 ;"	1473:1:37200:37214	2565612	0	True				
ANR	2565616	IdentifierDecl	r1		2565612	0					
ANR	2565617	IdentifierDeclType	double		2565612	0					
ANR	2565618	Identifier	r1		2565612	1					
ANR	2565619	IdentifierDecl	r2		2565612	1					
ANR	2565620	IdentifierDeclType	double		2565612	0					
ANR	2565621	Identifier	r2		2565612	1					
ANR	2565622	IdentifierDeclStatement	bool compResult ;	1474:1:37217:37232	2565612	1	True				
ANR	2565623	IdentifierDecl	compResult		2565612	0					
ANR	2565624	IdentifierDeclType	bool		2565612	0					
ANR	2565625	Identifier	compResult		2565612	1					
ANR	2565626	ExpressionStatement	v1 . IsRealValue ( r1 )	1476:1:37236:37255	2565612	2	True				
ANR	2565627	CallExpression	v1 . IsRealValue ( r1 )		2565612	0					
ANR	2565628	Callee	v1 . IsRealValue		2565612	0					
ANR	2565629	MemberAccess	v1 . IsRealValue		2565612	0					
ANR	2565630	Identifier	v1		2565612	0					
ANR	2565631	Identifier	IsRealValue		2565612	1					
ANR	2565632	ArgumentList	r1		2565612	1					
ANR	2565633	Argument	r1		2565612	0					
ANR	2565634	Identifier	r1		2565612	0					
ANR	2565635	ExpressionStatement	v2 . IsRealValue ( r2 )	1477:1:37258:37277	2565612	3	True				
ANR	2565636	CallExpression	v2 . IsRealValue ( r2 )		2565612	0					
ANR	2565637	Callee	v2 . IsRealValue		2565612	0					
ANR	2565638	MemberAccess	v2 . IsRealValue		2565612	0					
ANR	2565639	Identifier	v2		2565612	0					
ANR	2565640	Identifier	IsRealValue		2565612	1					
ANR	2565641	ArgumentList	r2		2565612	1					
ANR	2565642	Argument	r2		2565612	0					
ANR	2565643	Identifier	r2		2565612	0					
ANR	2565644	SwitchStatement	switch ( op )		2565612	4					
ANR	2565645	Condition	op	1479:9:37289:37290	2565612	0	True				
ANR	2565646	Identifier	op		2565612	0					
ANR	2565647	CompoundStatement		8:13:95:95	2565612	1					
ANR	2565648	Label	case LESS_THAN_OP :	1480:2:37297:37314	2565612	0	True				
ANR	2565649	Identifier	LESS_THAN_OP		2565612	0					
ANR	2565650	ExpressionStatement	compResult = ( r1 < r2 )	1480:30:37325:37347	2565612	1	True				
ANR	2565651	AssignmentExpression	compResult = ( r1 < r2 )		2565612	0		=			
ANR	2565652	Identifier	compResult		2565612	0					
ANR	2565653	RelationalExpression	r1 < r2		2565612	1		<			
ANR	2565654	Identifier	r1		2565612	0					
ANR	2565655	Identifier	r2		2565612	1					
ANR	2565656	BreakStatement	break ;	1480:58:37353:37358	2565612	2	True				
ANR	2565657	Label	case LESS_OR_EQUAL_OP :	1481:2:37362:37383	2565612	3	True				
ANR	2565658	Identifier	LESS_OR_EQUAL_OP		2565612	0					
ANR	2565659	ExpressionStatement	compResult = ( r1 <= r2 )	1481:30:37390:37413	2565612	4	True				
ANR	2565660	AssignmentExpression	compResult = ( r1 <= r2 )		2565612	0		=			
ANR	2565661	Identifier	compResult		2565612	0					
ANR	2565662	RelationalExpression	r1 <= r2		2565612	1		<=			
ANR	2565663	Identifier	r1		2565612	0					
ANR	2565664	Identifier	r2		2565612	1					
ANR	2565665	BreakStatement	break ;	1481:58:37418:37423	2565612	5	True				
ANR	2565666	Label	case EQUAL_OP :	1482:2:37427:37440	2565612	6	True				
ANR	2565667	Identifier	EQUAL_OP		2565612	0					
ANR	2565668	ExpressionStatement	compResult = ( r1 == r2 )	1482:30:37455:37478	2565612	7	True				
ANR	2565669	AssignmentExpression	compResult = ( r1 == r2 )		2565612	0		=			
ANR	2565670	Identifier	compResult		2565612	0					
ANR	2565671	EqualityExpression	r1 == r2		2565612	1		==			
ANR	2565672	Identifier	r1		2565612	0					
ANR	2565673	Identifier	r2		2565612	1					
ANR	2565674	BreakStatement	break ;	1482:58:37483:37488	2565612	8	True				
ANR	2565675	Label	case NOT_EQUAL_OP :	1483:2:37492:37509	2565612	9	True				
ANR	2565676	Identifier	NOT_EQUAL_OP		2565612	0					
ANR	2565677	ExpressionStatement	compResult = ( r1 != r2 )	1483:30:37520:37543	2565612	10	True				
ANR	2565678	AssignmentExpression	compResult = ( r1 != r2 )		2565612	0		=			
ANR	2565679	Identifier	compResult		2565612	0					
ANR	2565680	EqualityExpression	r1 != r2		2565612	1		!=			
ANR	2565681	Identifier	r1		2565612	0					
ANR	2565682	Identifier	r2		2565612	1					
ANR	2565683	BreakStatement	break ;	1483:58:37548:37553	2565612	11	True				
ANR	2565684	Label	case GREATER_THAN_OP :	1484:2:37557:37577	2565612	12	True				
ANR	2565685	Identifier	GREATER_THAN_OP		2565612	0					
ANR	2565686	ExpressionStatement	compResult = ( r1 > r2 )	1484:30:37585:37607	2565612	13	True				
ANR	2565687	AssignmentExpression	compResult = ( r1 > r2 )		2565612	0		=			
ANR	2565688	Identifier	compResult		2565612	0					
ANR	2565689	RelationalExpression	r1 > r2		2565612	1		>			
ANR	2565690	Identifier	r1		2565612	0					
ANR	2565691	Identifier	r2		2565612	1					
ANR	2565692	BreakStatement	break ;	1484:58:37613:37618	2565612	14	True				
ANR	2565693	Label	case GREATER_OR_EQUAL_OP :	1485:2:37622:37646	2565612	15	True				
ANR	2565694	Identifier	GREATER_OR_EQUAL_OP		2565612	0					
ANR	2565695	ExpressionStatement	compResult = ( r1 >= r2 )	1485:30:37650:37673	2565612	16	True				
ANR	2565696	AssignmentExpression	compResult = ( r1 >= r2 )		2565612	0		=			
ANR	2565697	Identifier	compResult		2565612	0					
ANR	2565698	RelationalExpression	r1 >= r2		2565612	1		>=			
ANR	2565699	Identifier	r1		2565612	0					
ANR	2565700	Identifier	r2		2565612	1					
ANR	2565701	BreakStatement	break ;	1485:58:37678:37683	2565612	17	True				
ANR	2565702	Label	default :	1486:2:37687:37694	2565612	18	True				
ANR	2565703	Identifier	default		2565612	0					
ANR	2565704	ExpressionStatement	"CLASSAD_EXCEPT ( ""Should not get here"" )"	1488:3:37725:37763	2565612	19	True				
ANR	2565705	CallExpression	"CLASSAD_EXCEPT ( ""Should not get here"" )"		2565612	0					
ANR	2565706	Callee	CLASSAD_EXCEPT		2565612	0					
ANR	2565707	Identifier	CLASSAD_EXCEPT		2565612	0					
ANR	2565708	ArgumentList	"""Should not get here"""		2565612	1					
ANR	2565709	Argument	"""Should not get here"""		2565612	0					
ANR	2565710	PrimaryExpression	"""Should not get here"""		2565612	0					
ANR	2565711	ReturnStatement	return ;	1489:3:37768:37774	2565612	20	True				
ANR	2565712	ExpressionStatement	result . SetBooleanValue ( compResult )	1492:1:37781:37817	2565612	5	True				
ANR	2565713	CallExpression	result . SetBooleanValue ( compResult )		2565612	0					
ANR	2565714	Callee	result . SetBooleanValue		2565612	0					
ANR	2565715	MemberAccess	result . SetBooleanValue		2565612	0					
ANR	2565716	Identifier	result		2565612	0					
ANR	2565717	Identifier	SetBooleanValue		2565612	1					
ANR	2565718	ArgumentList	compResult		2565612	1					
ANR	2565719	Argument	compResult		2565612	0					
ANR	2565720	Identifier	compResult		2565612	0					
ANR	2565721	ReturnType	void		2565612	1					
ANR	2565722	Identifier	Operation :: compareReals		2565612	2					
ANR	2565723	ParameterList	"OpKind op , Value & v1 , Value & v2 , Value & result"		2565612	3					
ANR	2565724	Parameter	OpKind op	1471:14:37149:37157	2565612	0	True				
ANR	2565725	ParameterType	OpKind		2565612	0					
ANR	2565726	Identifier	op		2565612	1					
ANR	2565727	Parameter	Value & v1	1471:25:37160:37168	2565612	1	True				
ANR	2565728	ParameterType	Value &		2565612	0					
ANR	2565729	Identifier	v1		2565612	1					
ANR	2565730	Parameter	Value & v2	1471:36:37171:37179	2565612	2	True				
ANR	2565731	ParameterType	Value &		2565612	0					
ANR	2565732	Identifier	v2		2565612	1					
ANR	2565733	Parameter	Value & result	1471:47:37182:37194	2565612	3	True				
ANR	2565734	ParameterType	Value &		2565612	0					
ANR	2565735	Identifier	result		2565612	1					
ANR	2565736	CFGEntryNode	ENTRY		2565612		True				
ANR	2565737	CFGExitNode	EXIT		2565612		True				
ANR	2565738	Symbol	result		2565612						
ANR	2565739	Symbol	r2		2565612						
ANR	2565740	Symbol	op		2565612						
ANR	2565741	Symbol	compResult		2565612						
ANR	2565742	Symbol	v1		2565612						
ANR	2565743	Symbol	v2		2565612						
ANR	2565744	Symbol	r1		2565612						
ANR	2565745	Function	Operation :: coerceToNumber	1501:0:38188:39696							
ANR	2565746	FunctionDef	"Operation :: coerceToNumber (Value & v1 , Value & v2)"		2565745	0					
ANR	2565747	CompoundStatement		1503:0:38255:39696	2565745	0					
ANR	2565748	IdentifierDeclStatement	int i ;	1504:1:38258:38265	2565745	0	True				
ANR	2565749	IdentifierDecl	i		2565745	0					
ANR	2565750	IdentifierDeclType	int		2565745	0					
ANR	2565751	Identifier	i		2565745	1					
ANR	2565752	IdentifierDeclStatement	double r ;	1505:1:38268:38277	2565745	1	True				
ANR	2565753	IdentifierDecl	r		2565745	0					
ANR	2565754	IdentifierDeclType	double		2565745	0					
ANR	2565755	Identifier	r		2565745	1					
ANR	2565756	IdentifierDeclStatement	bool b ;	1506:4:38283:38292	2565745	2	True				
ANR	2565757	IdentifierDecl	b		2565745	0					
ANR	2565758	IdentifierDeclType	bool		2565745	0					
ANR	2565759	Identifier	b		2565745	1					
ANR	2565760	IfStatement	if ( v1 . IsClassAdValue ( ) || v2 . IsClassAdValue ( ) )		2565745	3					
ANR	2565761	Condition	v1 . IsClassAdValue ( ) || v2 . IsClassAdValue ( )	1509:5:38336:38379	2565745	0	True				
ANR	2565762	OrExpression	v1 . IsClassAdValue ( ) || v2 . IsClassAdValue ( )		2565745	0		||			
ANR	2565763	CallExpression	v1 . IsClassAdValue ( )		2565745	0					
ANR	2565764	Callee	v1 . IsClassAdValue		2565745	0					
ANR	2565765	MemberAccess	v1 . IsClassAdValue		2565745	0					
ANR	2565766	Identifier	v1		2565745	0					
ANR	2565767	Identifier	IsClassAdValue		2565745	1					
ANR	2565768	ArgumentList			2565745	1					
ANR	2565769	CallExpression	v2 . IsClassAdValue ( )		2565745	1					
ANR	2565770	Callee	v2 . IsClassAdValue		2565745	0					
ANR	2565771	MemberAccess	v2 . IsClassAdValue		2565745	0					
ANR	2565772	Identifier	v2		2565745	0					
ANR	2565773	Identifier	IsClassAdValue		2565745	1					
ANR	2565774	ArgumentList			2565745	1					
ANR	2565775	ReturnStatement	return Value :: CLASSAD_VALUE ;	1510:2:38387:38414	2565745	1	True				
ANR	2565776	Identifier	Value :: CLASSAD_VALUE		2565745	0					
ANR	2565777	IfStatement	if ( v1 . IsListValue ( ) || v2 . IsListValue ( ) )		2565745	4					
ANR	2565778	Condition	v1 . IsListValue ( ) || v2 . IsListValue ( )	1511:5:38421:38461	2565745	0	True				
ANR	2565779	OrExpression	v1 . IsListValue ( ) || v2 . IsListValue ( )		2565745	0		||			
ANR	2565780	CallExpression	v1 . IsListValue ( )		2565745	0					
ANR	2565781	Callee	v1 . IsListValue		2565745	0					
ANR	2565782	MemberAccess	v1 . IsListValue		2565745	0					
ANR	2565783	Identifier	v1		2565745	0					
ANR	2565784	Identifier	IsListValue		2565745	1					
ANR	2565785	ArgumentList			2565745	1					
ANR	2565786	CallExpression	v2 . IsListValue ( )		2565745	1					
ANR	2565787	Callee	v2 . IsListValue		2565745	0					
ANR	2565788	MemberAccess	v2 . IsListValue		2565745	0					
ANR	2565789	Identifier	v2		2565745	0					
ANR	2565790	Identifier	IsListValue		2565745	1					
ANR	2565791	ArgumentList			2565745	1					
ANR	2565792	ReturnStatement	return Value :: LIST_VALUE ;	1512:2:38470:38494	2565745	1	True				
ANR	2565793	Identifier	Value :: LIST_VALUE		2565745	0					
ANR	2565794	IfStatement	if ( v1 . IsStringValue ( ) || v2 . IsStringValue ( ) )		2565745	5					
ANR	2565795	Condition	v1 . IsStringValue ( ) || v2 . IsStringValue ( )	1513:5:38501:38544	2565745	0	True				
ANR	2565796	OrExpression	v1 . IsStringValue ( ) || v2 . IsStringValue ( )		2565745	0		||			
ANR	2565797	CallExpression	v1 . IsStringValue ( )		2565745	0					
ANR	2565798	Callee	v1 . IsStringValue		2565745	0					
ANR	2565799	MemberAccess	v1 . IsStringValue		2565745	0					
ANR	2565800	Identifier	v1		2565745	0					
ANR	2565801	Identifier	IsStringValue		2565745	1					
ANR	2565802	ArgumentList			2565745	1					
ANR	2565803	CallExpression	v2 . IsStringValue ( )		2565745	1					
ANR	2565804	Callee	v2 . IsStringValue		2565745	0					
ANR	2565805	MemberAccess	v2 . IsStringValue		2565745	0					
ANR	2565806	Identifier	v2		2565745	0					
ANR	2565807	Identifier	IsStringValue		2565745	1					
ANR	2565808	ArgumentList			2565745	1					
ANR	2565809	ReturnStatement	return Value :: STRING_VALUE ;	1514:2:38551:38577	2565745	1	True				
ANR	2565810	Identifier	Value :: STRING_VALUE		2565745	0					
ANR	2565811	IfStatement	if ( v1 . IsUndefinedValue ( ) || v2 . IsUndefinedValue ( ) )		2565745	6					
ANR	2565812	Condition	v1 . IsUndefinedValue ( ) || v2 . IsUndefinedValue ( )	1515:5:38584:38629	2565745	0	True				
ANR	2565813	OrExpression	v1 . IsUndefinedValue ( ) || v2 . IsUndefinedValue ( )		2565745	0		||			
ANR	2565814	CallExpression	v1 . IsUndefinedValue ( )		2565745	0					
ANR	2565815	Callee	v1 . IsUndefinedValue		2565745	0					
ANR	2565816	MemberAccess	v1 . IsUndefinedValue		2565745	0					
ANR	2565817	Identifier	v1		2565745	0					
ANR	2565818	Identifier	IsUndefinedValue		2565745	1					
ANR	2565819	ArgumentList			2565745	1					
ANR	2565820	CallExpression	v2 . IsUndefinedValue ( )		2565745	1					
ANR	2565821	Callee	v2 . IsUndefinedValue		2565745	0					
ANR	2565822	MemberAccess	v2 . IsUndefinedValue		2565745	0					
ANR	2565823	Identifier	v2		2565745	0					
ANR	2565824	Identifier	IsUndefinedValue		2565745	1					
ANR	2565825	ArgumentList			2565745	1					
ANR	2565826	ReturnStatement	return Value :: UNDEFINED_VALUE ;	1516:2:38635:38664	2565745	1	True				
ANR	2565827	Identifier	Value :: UNDEFINED_VALUE		2565745	0					
ANR	2565828	IfStatement	if ( v1 . IsErrorValue ( ) || v2 . IsErrorValue ( ) )		2565745	7					
ANR	2565829	Condition	v1 . IsErrorValue ( ) || v2 . IsErrorValue ( )	1517:5:38671:38713	2565745	0	True				
ANR	2565830	OrExpression	v1 . IsErrorValue ( ) || v2 . IsErrorValue ( )		2565745	0		||			
ANR	2565831	CallExpression	v1 . IsErrorValue ( )		2565745	0					
ANR	2565832	Callee	v1 . IsErrorValue		2565745	0					
ANR	2565833	MemberAccess	v1 . IsErrorValue		2565745	0					
ANR	2565834	Identifier	v1		2565745	0					
ANR	2565835	Identifier	IsErrorValue		2565745	1					
ANR	2565836	ArgumentList			2565745	1					
ANR	2565837	CallExpression	v2 . IsErrorValue ( )		2565745	1					
ANR	2565838	Callee	v2 . IsErrorValue		2565745	0					
ANR	2565839	MemberAccess	v2 . IsErrorValue		2565745	0					
ANR	2565840	Identifier	v2		2565745	0					
ANR	2565841	Identifier	IsErrorValue		2565745	1					
ANR	2565842	ArgumentList			2565745	1					
ANR	2565843	ReturnStatement	return Value :: ERROR_VALUE ;	1518:2:38722:38747	2565745	1	True				
ANR	2565844	Identifier	Value :: ERROR_VALUE		2565745	0					
ANR	2565845	IfStatement	if ( v1 . IsAbsoluteTimeValue ( ) || v2 . IsAbsoluteTimeValue ( ) )		2565745	8					
ANR	2565846	Condition	v1 . IsAbsoluteTimeValue ( ) || v2 . IsAbsoluteTimeValue ( )	1519:5:38754:38803	2565745	0	True				
ANR	2565847	OrExpression	v1 . IsAbsoluteTimeValue ( ) || v2 . IsAbsoluteTimeValue ( )		2565745	0		||			
ANR	2565848	CallExpression	v1 . IsAbsoluteTimeValue ( )		2565745	0					
ANR	2565849	Callee	v1 . IsAbsoluteTimeValue		2565745	0					
ANR	2565850	MemberAccess	v1 . IsAbsoluteTimeValue		2565745	0					
ANR	2565851	Identifier	v1		2565745	0					
ANR	2565852	Identifier	IsAbsoluteTimeValue		2565745	1					
ANR	2565853	ArgumentList			2565745	1					
ANR	2565854	CallExpression	v2 . IsAbsoluteTimeValue ( )		2565745	1					
ANR	2565855	Callee	v2 . IsAbsoluteTimeValue		2565745	0					
ANR	2565856	MemberAccess	v2 . IsAbsoluteTimeValue		2565745	0					
ANR	2565857	Identifier	v2		2565745	0					
ANR	2565858	Identifier	IsAbsoluteTimeValue		2565745	1					
ANR	2565859	ArgumentList			2565745	1					
ANR	2565860	ReturnStatement	return Value :: ABSOLUTE_TIME_VALUE ;	1520:2:38809:38842	2565745	1	True				
ANR	2565861	Identifier	Value :: ABSOLUTE_TIME_VALUE		2565745	0					
ANR	2565862	IfStatement	if ( v1 . IsRelativeTimeValue ( ) || v2 . IsRelativeTimeValue ( ) )		2565745	9					
ANR	2565863	Condition	v1 . IsRelativeTimeValue ( ) || v2 . IsRelativeTimeValue ( )	1521:5:38849:38900	2565745	0	True				
ANR	2565864	OrExpression	v1 . IsRelativeTimeValue ( ) || v2 . IsRelativeTimeValue ( )		2565745	0		||			
ANR	2565865	CallExpression	v1 . IsRelativeTimeValue ( )		2565745	0					
ANR	2565866	Callee	v1 . IsRelativeTimeValue		2565745	0					
ANR	2565867	MemberAccess	v1 . IsRelativeTimeValue		2565745	0					
ANR	2565868	Identifier	v1		2565745	0					
ANR	2565869	Identifier	IsRelativeTimeValue		2565745	1					
ANR	2565870	ArgumentList			2565745	1					
ANR	2565871	CallExpression	v2 . IsRelativeTimeValue ( )		2565745	1					
ANR	2565872	Callee	v2 . IsRelativeTimeValue		2565745	0					
ANR	2565873	MemberAccess	v2 . IsRelativeTimeValue		2565745	0					
ANR	2565874	Identifier	v2		2565745	0					
ANR	2565875	Identifier	IsRelativeTimeValue		2565745	1					
ANR	2565876	ArgumentList			2565745	1					
ANR	2565877	ReturnStatement	return Value :: RELATIVE_TIME_VALUE ;	1522:2:38906:38939	2565745	1	True				
ANR	2565878	Identifier	Value :: RELATIVE_TIME_VALUE		2565745	0					
ANR	2565879	IfStatement	if ( v1 . IsBooleanValue ( b ) )		2565745	10					
ANR	2565880	Condition	v1 . IsBooleanValue ( b )	1525:8:38986:39005	2565745	0	True				
ANR	2565881	CallExpression	v1 . IsBooleanValue ( b )		2565745	0					
ANR	2565882	Callee	v1 . IsBooleanValue		2565745	0					
ANR	2565883	MemberAccess	v1 . IsBooleanValue		2565745	0					
ANR	2565884	Identifier	v1		2565745	0					
ANR	2565885	Identifier	IsBooleanValue		2565745	1					
ANR	2565886	ArgumentList	b		2565745	1					
ANR	2565887	Argument	b		2565745	0					
ANR	2565888	Identifier	b		2565745	0					
ANR	2565889	CompoundStatement		23:30:752:752	2565745	1					
ANR	2565890	IfStatement	if ( b )		2565745	0					
ANR	2565891	Condition	b	1526:12:39022:39022	2565745	0	True				
ANR	2565892	Identifier	b		2565745	0					
ANR	2565893	CompoundStatement		24:15:769:769	2565745	1					
ANR	2565894	ExpressionStatement	v1 . SetIntegerValue ( 1 )	1527:12:39039:39060	2565745	0	True				
ANR	2565895	CallExpression	v1 . SetIntegerValue ( 1 )		2565745	0					
ANR	2565896	Callee	v1 . SetIntegerValue		2565745	0					
ANR	2565897	MemberAccess	v1 . SetIntegerValue		2565745	0					
ANR	2565898	Identifier	v1		2565745	0					
ANR	2565899	Identifier	SetIntegerValue		2565745	1					
ANR	2565900	ArgumentList	1		2565745	1					
ANR	2565901	Argument	1		2565745	0					
ANR	2565902	PrimaryExpression	1		2565745	0					
ANR	2565903	ElseStatement	else		2565745	0					
ANR	2565904	CompoundStatement		26:15:821:821	2565745	0					
ANR	2565905	ExpressionStatement	v1 . SetIntegerValue ( 0 )	1529:12:39091:39112	2565745	0	True				
ANR	2565906	CallExpression	v1 . SetIntegerValue ( 0 )		2565745	0					
ANR	2565907	Callee	v1 . SetIntegerValue		2565745	0					
ANR	2565908	MemberAccess	v1 . SetIntegerValue		2565745	0					
ANR	2565909	Identifier	v1		2565745	0					
ANR	2565910	Identifier	SetIntegerValue		2565745	1					
ANR	2565911	ArgumentList	0		2565745	1					
ANR	2565912	Argument	0		2565745	0					
ANR	2565913	PrimaryExpression	0		2565745	0					
ANR	2565914	IfStatement	if ( v2 . IsBooleanValue ( b ) )		2565745	11					
ANR	2565915	Condition	v2 . IsBooleanValue ( b )	1533:8:39139:39158	2565745	0	True				
ANR	2565916	CallExpression	v2 . IsBooleanValue ( b )		2565745	0					
ANR	2565917	Callee	v2 . IsBooleanValue		2565745	0					
ANR	2565918	MemberAccess	v2 . IsBooleanValue		2565745	0					
ANR	2565919	Identifier	v2		2565745	0					
ANR	2565920	Identifier	IsBooleanValue		2565745	1					
ANR	2565921	ArgumentList	b		2565745	1					
ANR	2565922	Argument	b		2565745	0					
ANR	2565923	Identifier	b		2565745	0					
ANR	2565924	CompoundStatement		31:30:905:905	2565745	1					
ANR	2565925	IfStatement	if ( b )		2565745	0					
ANR	2565926	Condition	b	1534:12:39175:39175	2565745	0	True				
ANR	2565927	Identifier	b		2565745	0					
ANR	2565928	CompoundStatement		32:15:922:922	2565745	1					
ANR	2565929	ExpressionStatement	v2 . SetIntegerValue ( 1 )	1535:12:39192:39213	2565745	0	True				
ANR	2565930	CallExpression	v2 . SetIntegerValue ( 1 )		2565745	0					
ANR	2565931	Callee	v2 . SetIntegerValue		2565745	0					
ANR	2565932	MemberAccess	v2 . SetIntegerValue		2565745	0					
ANR	2565933	Identifier	v2		2565745	0					
ANR	2565934	Identifier	SetIntegerValue		2565745	1					
ANR	2565935	ArgumentList	1		2565745	1					
ANR	2565936	Argument	1		2565745	0					
ANR	2565937	PrimaryExpression	1		2565745	0					
ANR	2565938	ElseStatement	else		2565745	0					
ANR	2565939	CompoundStatement		34:15:974:974	2565745	0					
ANR	2565940	ExpressionStatement	v2 . SetIntegerValue ( 0 )	1537:12:39244:39265	2565745	0	True				
ANR	2565941	CallExpression	v2 . SetIntegerValue ( 0 )		2565745	0					
ANR	2565942	Callee	v2 . SetIntegerValue		2565745	0					
ANR	2565943	MemberAccess	v2 . SetIntegerValue		2565745	0					
ANR	2565944	Identifier	v2		2565745	0					
ANR	2565945	Identifier	SetIntegerValue		2565745	1					
ANR	2565946	ArgumentList	0		2565745	1					
ANR	2565947	Argument	0		2565745	0					
ANR	2565948	PrimaryExpression	0		2565745	0					
ANR	2565949	IfStatement	if ( v1 . IsIntegerValue ( i ) && v2 . IsIntegerValue ( i ) )		2565745	12					
ANR	2565950	Condition	v1 . IsIntegerValue ( i ) && v2 . IsIntegerValue ( i )	1542:4:39330:39373	2565745	0	True				
ANR	2565951	AndExpression	v1 . IsIntegerValue ( i ) && v2 . IsIntegerValue ( i )		2565745	0		&&			
ANR	2565952	CallExpression	v1 . IsIntegerValue ( i )		2565745	0					
ANR	2565953	Callee	v1 . IsIntegerValue		2565745	0					
ANR	2565954	MemberAccess	v1 . IsIntegerValue		2565745	0					
ANR	2565955	Identifier	v1		2565745	0					
ANR	2565956	Identifier	IsIntegerValue		2565745	1					
ANR	2565957	ArgumentList	i		2565745	1					
ANR	2565958	Argument	i		2565745	0					
ANR	2565959	Identifier	i		2565745	0					
ANR	2565960	CallExpression	v2 . IsIntegerValue ( i )		2565745	1					
ANR	2565961	Callee	v2 . IsIntegerValue		2565745	0					
ANR	2565962	MemberAccess	v2 . IsIntegerValue		2565745	0					
ANR	2565963	Identifier	v2		2565745	0					
ANR	2565964	Identifier	IsIntegerValue		2565745	1					
ANR	2565965	ArgumentList	i		2565745	1					
ANR	2565966	Argument	i		2565745	0					
ANR	2565967	Identifier	i		2565745	0					
ANR	2565968	ReturnStatement	return Value :: INTEGER_VALUE ;	1542:49:39375:39402	2565745	1	True				
ANR	2565969	Identifier	Value :: INTEGER_VALUE		2565745	0					
ANR	2565970	IfStatement	if ( v1 . IsRealValue ( r ) && v2 . IsRealValue ( r ) )		2565745	13					
ANR	2565971	Condition	v1 . IsRealValue ( r ) && v2 . IsRealValue ( r )	1543:4:39408:39445	2565745	0	True				
ANR	2565972	AndExpression	v1 . IsRealValue ( r ) && v2 . IsRealValue ( r )		2565745	0		&&			
ANR	2565973	CallExpression	v1 . IsRealValue ( r )		2565745	0					
ANR	2565974	Callee	v1 . IsRealValue		2565745	0					
ANR	2565975	MemberAccess	v1 . IsRealValue		2565745	0					
ANR	2565976	Identifier	v1		2565745	0					
ANR	2565977	Identifier	IsRealValue		2565745	1					
ANR	2565978	ArgumentList	r		2565745	1					
ANR	2565979	Argument	r		2565745	0					
ANR	2565980	Identifier	r		2565745	0					
ANR	2565981	CallExpression	v2 . IsRealValue ( r )		2565745	1					
ANR	2565982	Callee	v2 . IsRealValue		2565745	0					
ANR	2565983	MemberAccess	v2 . IsRealValue		2565745	0					
ANR	2565984	Identifier	v2		2565745	0					
ANR	2565985	Identifier	IsRealValue		2565745	1					
ANR	2565986	ArgumentList	r		2565745	1					
ANR	2565987	Argument	r		2565745	0					
ANR	2565988	Identifier	r		2565745	0					
ANR	2565989	ReturnStatement	return Value :: REAL_VALUE ;	1543:44:39448:39472	2565745	1	True				
ANR	2565990	Identifier	Value :: REAL_VALUE		2565745	0					
ANR	2565991	IfStatement	if ( v1 . IsIntegerValue ( i ) && v2 . IsRealValue ( r ) )		2565745	14					
ANR	2565992	Condition	v1 . IsIntegerValue ( i ) && v2 . IsRealValue ( r )	1546:5:39509:39549	2565745	0	True				
ANR	2565993	AndExpression	v1 . IsIntegerValue ( i ) && v2 . IsRealValue ( r )		2565745	0		&&			
ANR	2565994	CallExpression	v1 . IsIntegerValue ( i )		2565745	0					
ANR	2565995	Callee	v1 . IsIntegerValue		2565745	0					
ANR	2565996	MemberAccess	v1 . IsIntegerValue		2565745	0					
ANR	2565997	Identifier	v1		2565745	0					
ANR	2565998	Identifier	IsIntegerValue		2565745	1					
ANR	2565999	ArgumentList	i		2565745	1					
ANR	2566000	Argument	i		2565745	0					
ANR	2566001	Identifier	i		2565745	0					
ANR	2566002	CallExpression	v2 . IsRealValue ( r )		2565745	1					
ANR	2566003	Callee	v2 . IsRealValue		2565745	0					
ANR	2566004	MemberAccess	v2 . IsRealValue		2565745	0					
ANR	2566005	Identifier	v2		2565745	0					
ANR	2566006	Identifier	IsRealValue		2565745	1					
ANR	2566007	ArgumentList	r		2565745	1					
ANR	2566008	Argument	r		2565745	0					
ANR	2566009	Identifier	r		2565745	0					
ANR	2566010	ExpressionStatement	v1 . SetRealValue ( ( double ) i )	1547:2:39554:39581	2565745	1	True				
ANR	2566011	CallExpression	v1 . SetRealValue ( ( double ) i )		2565745	0					
ANR	2566012	Callee	v1 . SetRealValue		2565745	0					
ANR	2566013	MemberAccess	v1 . SetRealValue		2565745	0					
ANR	2566014	Identifier	v1		2565745	0					
ANR	2566015	Identifier	SetRealValue		2565745	1					
ANR	2566016	ArgumentList	( double ) i		2565745	1					
ANR	2566017	Argument	( double ) i		2565745	0					
ANR	2566018	CastExpression	( double ) i		2565745	0					
ANR	2566019	CastTarget	double		2565745	0					
ANR	2566020	Identifier	i		2565745	1					
ANR	2566021	ElseStatement	else		2565745	0					
ANR	2566022	IfStatement	if ( v1 . IsRealValue ( r ) && v2 . IsIntegerValue ( i ) )		2565745	0					
ANR	2566023	Condition	v1 . IsRealValue ( r ) && v2 . IsIntegerValue ( i )	1549:5:39594:39634	2565745	0	True				
ANR	2566024	AndExpression	v1 . IsRealValue ( r ) && v2 . IsIntegerValue ( i )		2565745	0		&&			
ANR	2566025	CallExpression	v1 . IsRealValue ( r )		2565745	0					
ANR	2566026	Callee	v1 . IsRealValue		2565745	0					
ANR	2566027	MemberAccess	v1 . IsRealValue		2565745	0					
ANR	2566028	Identifier	v1		2565745	0					
ANR	2566029	Identifier	IsRealValue		2565745	1					
ANR	2566030	ArgumentList	r		2565745	1					
ANR	2566031	Argument	r		2565745	0					
ANR	2566032	Identifier	r		2565745	0					
ANR	2566033	CallExpression	v2 . IsIntegerValue ( i )		2565745	1					
ANR	2566034	Callee	v2 . IsIntegerValue		2565745	0					
ANR	2566035	MemberAccess	v2 . IsIntegerValue		2565745	0					
ANR	2566036	Identifier	v2		2565745	0					
ANR	2566037	Identifier	IsIntegerValue		2565745	1					
ANR	2566038	ArgumentList	i		2565745	1					
ANR	2566039	Argument	i		2565745	0					
ANR	2566040	Identifier	i		2565745	0					
ANR	2566041	ExpressionStatement	v2 . SetRealValue ( ( double ) i )	1550:2:39639:39666	2565745	1	True				
ANR	2566042	CallExpression	v2 . SetRealValue ( ( double ) i )		2565745	0					
ANR	2566043	Callee	v2 . SetRealValue		2565745	0					
ANR	2566044	MemberAccess	v2 . SetRealValue		2565745	0					
ANR	2566045	Identifier	v2		2565745	0					
ANR	2566046	Identifier	SetRealValue		2565745	1					
ANR	2566047	ArgumentList	( double ) i		2565745	1					
ANR	2566048	Argument	( double ) i		2565745	0					
ANR	2566049	CastExpression	( double ) i		2565745	0					
ANR	2566050	CastTarget	double		2565745	0					
ANR	2566051	Identifier	i		2565745	1					
ANR	2566052	ReturnStatement	return Value :: REAL_VALUE ;	1552:1:39670:39694	2565745	15	True				
ANR	2566053	Identifier	Value :: REAL_VALUE		2565745	0					
ANR	2566054	ReturnType	Value :: ValueType		2565745	1					
ANR	2566055	Identifier	Operation :: coerceToNumber		2565745	2					
ANR	2566056	ParameterList	"Value & v1 , Value & v2"		2565745	3					
ANR	2566057	Parameter	Value & v1	1502:16:38233:38241	2565745	0	True				
ANR	2566058	ParameterType	Value &		2565745	0					
ANR	2566059	Identifier	v1		2565745	1					
ANR	2566060	Parameter	Value & v2	1502:27:38244:38252	2565745	1	True				
ANR	2566061	ParameterType	Value &		2565745	0					
ANR	2566062	Identifier	v2		2565745	1					
ANR	2566063	CFGEntryNode	ENTRY		2565745		True				
ANR	2566064	CFGExitNode	EXIT		2565745		True				
ANR	2566065	Symbol	v2 . IsClassAdValue		2565745						
ANR	2566066	Symbol	v2 . IsRelativeTimeValue		2565745						
ANR	2566067	Symbol	v2 . IsIntegerValue		2565745						
ANR	2566068	Symbol	Value :: STRING_VALUE		2565745						
ANR	2566069	Symbol	v1 . IsBooleanValue		2565745						
ANR	2566070	Symbol	Value :: ERROR_VALUE		2565745						
ANR	2566071	Symbol	v2 . IsListValue		2565745						
ANR	2566072	Symbol	v2 . IsRealValue		2565745						
ANR	2566073	Symbol	v2 . IsUndefinedValue		2565745						
ANR	2566074	Symbol	v1 . IsUndefinedValue		2565745						
ANR	2566075	Symbol	v1 . IsAbsoluteTimeValue		2565745						
ANR	2566076	Symbol	Value :: REAL_VALUE		2565745						
ANR	2566077	Symbol	Value :: UNDEFINED_VALUE		2565745						
ANR	2566078	Symbol	b		2565745						
ANR	2566079	Symbol	i		2565745						
ANR	2566080	Symbol	Value :: RELATIVE_TIME_VALUE		2565745						
ANR	2566081	Symbol	Value :: CLASSAD_VALUE		2565745						
ANR	2566082	Symbol	v1 . IsListValue		2565745						
ANR	2566083	Symbol	v2 . IsErrorValue		2565745						
ANR	2566084	Symbol	v1 . IsRealValue		2565745						
ANR	2566085	Symbol	r		2565745						
ANR	2566086	Symbol	v1 . IsClassAdValue		2565745						
ANR	2566087	Symbol	v2 . IsStringValue		2565745						
ANR	2566088	Symbol	v1 . IsStringValue		2565745						
ANR	2566089	Symbol	v2 . IsBooleanValue		2565745						
ANR	2566090	Symbol	v1 . IsIntegerValue		2565745						
ANR	2566091	Symbol	v2 . IsAbsoluteTimeValue		2565745						
ANR	2566092	Symbol	v1		2565745						
ANR	2566093	Symbol	v1 . IsRelativeTimeValue		2565745						
ANR	2566094	Symbol	v2		2565745						
ANR	2566095	Symbol	Value :: LIST_VALUE		2565745						
ANR	2566096	Symbol	Value :: ABSOLUTE_TIME_VALUE		2565745						
ANR	2566097	Symbol	Value :: INTEGER_VALUE		2565745						
ANR	2566098	Symbol	v1 . IsErrorValue		2565745						
ANR	2566099	Function	Operation :: MakeOperation	1556:0:39701:40046							
ANR	2566100	FunctionDef	"Operation :: MakeOperation (OpKind op , ExprTree * e1 , ExprTree * e2 , ExprTree * e3)"		2566099	0					
ANR	2566101	CompoundStatement		1558:0:39792:40046	2566099	0					
ANR	2566102	Statement	Operation	1559:1:39795:39803	2566099	0	True				
ANR	2566103	Statement	*	1559:11:39805:39805	2566099	1	True				
ANR	2566104	Statement	opnode	1559:12:39806:39811	2566099	2	True				
ANR	2566105	Statement	=	1559:19:39813:39813	2566099	3	True				
ANR	2566106	Statement	new	1559:21:39815:39817	2566099	4	True				
ANR	2566107	ExpressionStatement	Operation	1559:25:39819:39828	2566099	5	True				
ANR	2566108	Identifier	Operation		2566099	0					
ANR	2566109	IfStatement	if ( ! opnode )		2566099	6					
ANR	2566110	Condition	! opnode	1560:5:39835:39841	2566099	0	True				
ANR	2566111	UnaryOperationExpression	! opnode		2566099	0					
ANR	2566112	UnaryOperator	!		2566099	0					
ANR	2566113	Identifier	opnode		2566099	1					
ANR	2566114	CompoundStatement		3:15:52:52	2566099	1					
ANR	2566115	ExpressionStatement	CondorErrno = ERR_MEM_ALLOC_FAILED	1561:2:39849:39883	2566099	0	True				
ANR	2566116	AssignmentExpression	CondorErrno = ERR_MEM_ALLOC_FAILED		2566099	0		=			
ANR	2566117	Identifier	CondorErrno		2566099	0					
ANR	2566118	Identifier	ERR_MEM_ALLOC_FAILED		2566099	1					
ANR	2566119	ExpressionStatement	"CondorErrMsg = """""	1562:2:39887:39904	2566099	1	True				
ANR	2566120	AssignmentExpression	"CondorErrMsg = """""		2566099	0		=			
ANR	2566121	Identifier	CondorErrMsg		2566099	0					
ANR	2566122	PrimaryExpression	""""""		2566099	1					
ANR	2566123	ReturnStatement	return ( NULL ) ;	1563:2:39908:39922	2566099	2	True				
ANR	2566124	Identifier	NULL		2566099	0					
ANR	2566125	ExpressionStatement	opnode -> operation = op	1565:1:39928:39950	2566099	7	True				
ANR	2566126	AssignmentExpression	opnode -> operation = op		2566099	0		=			
ANR	2566127	PtrMemberAccess	opnode -> operation		2566099	0					
ANR	2566128	Identifier	opnode		2566099	0					
ANR	2566129	Identifier	operation		2566099	1					
ANR	2566130	Identifier	op		2566099	1					
ANR	2566131	ExpressionStatement	opnode -> child1 = e1	1566:1:39953:39975	2566099	8	True				
ANR	2566132	AssignmentExpression	opnode -> child1 = e1		2566099	0		=			
ANR	2566133	PtrMemberAccess	opnode -> child1		2566099	0					
ANR	2566134	Identifier	opnode		2566099	0					
ANR	2566135	Identifier	child1		2566099	1					
ANR	2566136	Identifier	e1		2566099	1					
ANR	2566137	ExpressionStatement	opnode -> child2 = e2	1567:1:39978:40000	2566099	9	True				
ANR	2566138	AssignmentExpression	opnode -> child2 = e2		2566099	0		=			
ANR	2566139	PtrMemberAccess	opnode -> child2		2566099	0					
ANR	2566140	Identifier	opnode		2566099	0					
ANR	2566141	Identifier	child2		2566099	1					
ANR	2566142	Identifier	e2		2566099	1					
ANR	2566143	ExpressionStatement	opnode -> child3 = e3	1568:1:40003:40025	2566099	10	True				
ANR	2566144	AssignmentExpression	opnode -> child3 = e3		2566099	0		=			
ANR	2566145	PtrMemberAccess	opnode -> child3		2566099	0					
ANR	2566146	Identifier	opnode		2566099	0					
ANR	2566147	Identifier	child3		2566099	1					
ANR	2566148	Identifier	e3		2566099	1					
ANR	2566149	ReturnStatement	return ( opnode ) ;	1569:1:40028:40044	2566099	11	True				
ANR	2566150	Identifier	opnode		2566099	0					
ANR	2566151	ReturnType	Operation *		2566099	1					
ANR	2566152	Identifier	Operation :: MakeOperation		2566099	2					
ANR	2566153	ParameterList	"OpKind op , ExprTree * e1 , ExprTree * e2 , ExprTree * e3"		2566099	3					
ANR	2566154	Parameter	OpKind op	1557:15:39739:39747	2566099	0	True				
ANR	2566155	ParameterType	OpKind		2566099	0					
ANR	2566156	Identifier	op		2566099	1					
ANR	2566157	Parameter	ExprTree * e1	1557:26:39750:39761	2566099	1	True				
ANR	2566158	ParameterType	ExprTree *		2566099	0					
ANR	2566159	Identifier	e1		2566099	1					
ANR	2566160	Parameter	ExprTree * e2	1557:40:39764:39775	2566099	2	True				
ANR	2566161	ParameterType	ExprTree *		2566099	0					
ANR	2566162	Identifier	e2		2566099	1					
ANR	2566163	Parameter	ExprTree * e3	1557:54:39778:39789	2566099	3	True				
ANR	2566164	ParameterType	ExprTree *		2566099	0					
ANR	2566165	Identifier	e3		2566099	1					
ANR	2566166	CFGEntryNode	ENTRY		2566099		True				
ANR	2566167	CFGExitNode	EXIT		2566099		True				
ANR	2566168	Symbol	op		2566099						
ANR	2566169	Symbol	NULL		2566099						
ANR	2566170	Symbol	opnode		2566099						
ANR	2566171	Symbol	ERR_MEM_ALLOC_FAILED		2566099						
ANR	2566172	Symbol	e1		2566099						
ANR	2566173	Symbol	e2		2566099						
ANR	2566174	Symbol	e3		2566099						
ANR	2566175	Symbol	CondorErrno		2566099						
ANR	2566176	Symbol	opnode -> child3		2566099						
ANR	2566177	Symbol	opnode -> child2		2566099						
ANR	2566178	Symbol	CondorErrMsg		2566099						
ANR	2566179	Symbol	opnode -> operation		2566099						
ANR	2566180	Symbol	* opnode		2566099						
ANR	2566181	Symbol	opnode -> child1		2566099						
ANR	2566182	Function	Operation :: GetComponents	1573:0:40050:40207							
ANR	2566183	FunctionDef	"Operation :: GetComponents (OpKind & op , ExprTree * & e1 , ExprTree * & e2 , ExprTree * & e3)"		2566182	0					
ANR	2566184	CompoundStatement		1575:0:40146:40207	2566182	0					
ANR	2566185	ExpressionStatement	op = operation	1576:1:40149:40163	2566182	0	True				
ANR	2566186	AssignmentExpression	op = operation		2566182	0		=			
ANR	2566187	Identifier	op		2566182	0					
ANR	2566188	Identifier	operation		2566182	1					
ANR	2566189	ExpressionStatement	e1 = child1	1577:1:40166:40177	2566182	1	True				
ANR	2566190	AssignmentExpression	e1 = child1		2566182	0		=			
ANR	2566191	Identifier	e1		2566182	0					
ANR	2566192	Identifier	child1		2566182	1					
ANR	2566193	ExpressionStatement	e2 = child2	1578:1:40180:40191	2566182	2	True				
ANR	2566194	AssignmentExpression	e2 = child2		2566182	0		=			
ANR	2566195	Identifier	e2		2566182	0					
ANR	2566196	Identifier	child2		2566182	1					
ANR	2566197	ExpressionStatement	e3 = child3	1579:1:40194:40205	2566182	3	True				
ANR	2566198	AssignmentExpression	e3 = child3		2566182	0		=			
ANR	2566199	Identifier	e3		2566182	0					
ANR	2566200	Identifier	child3		2566182	1					
ANR	2566201	ReturnType	void		2566182	1					
ANR	2566202	Identifier	Operation :: GetComponents		2566182	2					
ANR	2566203	ParameterList	"OpKind & op , ExprTree * & e1 , ExprTree * & e2 , ExprTree * & e3"		2566182	3					
ANR	2566204	Parameter	OpKind & op	1574:15:40082:40091	2566182	0	True				
ANR	2566205	ParameterType	OpKind &		2566182	0					
ANR	2566206	Identifier	op		2566182	1					
ANR	2566207	Parameter	ExprTree * & e1	1574:27:40094:40106	2566182	1	True				
ANR	2566208	ParameterType	ExprTree * &		2566182	0					
ANR	2566209	Identifier	e1		2566182	1					
ANR	2566210	Parameter	ExprTree * & e2	1574:42:40109:40121	2566182	2	True				
ANR	2566211	ParameterType	ExprTree * &		2566182	0					
ANR	2566212	Identifier	e2		2566182	1					
ANR	2566213	Parameter	ExprTree * & e3	1574:57:40124:40136	2566182	3	True				
ANR	2566214	ParameterType	ExprTree * &		2566182	0					
ANR	2566215	Identifier	e3		2566182	1					
ANR	2566216	CFGEntryNode	ENTRY		2566182		True				
ANR	2566217	CFGExitNode	EXIT		2566182		True				
ANR	2566218	Symbol	op		2566182						
ANR	2566219	Symbol	e1		2566182						
ANR	2566220	Symbol	child2		2566182						
ANR	2566221	Symbol	e2		2566182						
ANR	2566222	Symbol	operation		2566182						
ANR	2566223	Symbol	child3		2566182						
ANR	2566224	Symbol	e3		2566182						
ANR	2566225	Symbol	child1		2566182						
ANR	2566226	Function	Operation :: MakeOperation	1583:0:40211:40527							
ANR	2566227	FunctionDef	"Operation :: MakeOperation (OpKind op , Value & val , ExprTree * tree)"		2566226	0					
ANR	2566228	CompoundStatement		1585:0:40290:40527	2566226	0					
ANR	2566229	IdentifierDeclStatement	Operation * newOp ;	1586:1:40293:40311	2566226	0	True				
ANR	2566230	IdentifierDecl	* newOp		2566226	0					
ANR	2566231	IdentifierDeclType	Operation *		2566226	0					
ANR	2566232	Identifier	newOp		2566226	1					
ANR	2566233	IdentifierDeclStatement	Literal * lit ;	1587:1:40314:40327	2566226	1	True				
ANR	2566234	IdentifierDecl	* lit		2566226	0					
ANR	2566235	IdentifierDeclType	Literal *		2566226	0					
ANR	2566236	Identifier	lit		2566226	1					
ANR	2566237	IfStatement	if ( ! tree )		2566226	2					
ANR	2566238	Condition	! tree	1589:5:40336:40340	2566226	0	True				
ANR	2566239	UnaryOperationExpression	! tree		2566226	0					
ANR	2566240	UnaryOperator	!		2566226	0					
ANR	2566241	Identifier	tree		2566226	1					
ANR	2566242	ReturnStatement	return NULL ;	1589:13:40344:40355	2566226	1	True				
ANR	2566243	Identifier	NULL		2566226	0					
ANR	2566244	IfStatement	if ( ! ( lit = Literal :: MakeLiteral ( val ) ) )		2566226	3					
ANR	2566245	Condition	! ( lit = Literal :: MakeLiteral ( val ) )	1591:5:40363:40400	2566226	0	True				
ANR	2566246	UnaryOperationExpression	! ( lit = Literal :: MakeLiteral ( val ) )		2566226	0					
ANR	2566247	UnaryOperator	!		2566226	0					
ANR	2566248	AssignmentExpression	lit = Literal :: MakeLiteral ( val )		2566226	1		=			
ANR	2566249	Identifier	lit		2566226	0					
ANR	2566250	CallExpression	Literal :: MakeLiteral ( val )		2566226	1					
ANR	2566251	Callee	Literal :: MakeLiteral		2566226	0					
ANR	2566252	Identifier	Literal :: MakeLiteral		2566226	0					
ANR	2566253	ArgumentList	val		2566226	1					
ANR	2566254	Argument	val		2566226	0					
ANR	2566255	Identifier	val		2566226	0					
ANR	2566256	CompoundStatement		7:46:113:113	2566226	1					
ANR	2566257	ReturnStatement	return NULL ;	1592:2:40408:40419	2566226	0	True				
ANR	2566258	Identifier	NULL		2566226	0					
ANR	2566259	IfStatement	"if ( ! ( newOp = MakeOperation ( op , lit , tree ) ) )"		2566226	4					
ANR	2566260	Condition	"! ( newOp = MakeOperation ( op , lit , tree ) )"	1594:5:40429:40471	2566226	0	True				
ANR	2566261	UnaryOperationExpression	"! ( newOp = MakeOperation ( op , lit , tree ) )"		2566226	0					
ANR	2566262	UnaryOperator	!		2566226	0					
ANR	2566263	AssignmentExpression	"newOp = MakeOperation ( op , lit , tree )"		2566226	1		=			
ANR	2566264	Identifier	newOp		2566226	0					
ANR	2566265	CallExpression	"MakeOperation ( op , lit , tree )"		2566226	1					
ANR	2566266	Callee	MakeOperation		2566226	0					
ANR	2566267	Identifier	MakeOperation		2566226	0					
ANR	2566268	ArgumentList	op		2566226	1					
ANR	2566269	Argument	op		2566226	0					
ANR	2566270	Identifier	op		2566226	0					
ANR	2566271	Argument	lit		2566226	1					
ANR	2566272	Identifier	lit		2566226	0					
ANR	2566273	Argument	tree		2566226	2					
ANR	2566274	Identifier	tree		2566226	0					
ANR	2566275	CompoundStatement		10:51:184:184	2566226	1					
ANR	2566276	Statement	delete	1595:2:40479:40484	2566226	0	True				
ANR	2566277	ExpressionStatement	lit	1595:9:40486:40489	2566226	1	True				
ANR	2566278	Identifier	lit		2566226	0					
ANR	2566279	ReturnStatement	return ( NULL ) ;	1596:2:40493:40507	2566226	2	True				
ANR	2566280	Identifier	NULL		2566226	0					
ANR	2566281	ReturnStatement	return newOp ;	1598:1:40513:40525	2566226	5	True				
ANR	2566282	Identifier	newOp		2566226	0					
ANR	2566283	ReturnType	Operation *		2566226	1					
ANR	2566284	Identifier	Operation :: MakeOperation		2566226	2					
ANR	2566285	ParameterList	"OpKind op , Value & val , ExprTree * tree"		2566226	3					
ANR	2566286	Parameter	OpKind op	1584:15:40249:40257	2566226	0	True				
ANR	2566287	ParameterType	OpKind		2566226	0					
ANR	2566288	Identifier	op		2566226	1					
ANR	2566289	Parameter	Value & val	1584:26:40260:40269	2566226	1	True				
ANR	2566290	ParameterType	Value &		2566226	0					
ANR	2566291	Identifier	val		2566226	1					
ANR	2566292	Parameter	ExprTree * tree	1584:38:40272:40285	2566226	2	True				
ANR	2566293	ParameterType	ExprTree *		2566226	0					
ANR	2566294	Identifier	tree		2566226	1					
ANR	2566295	CFGEntryNode	ENTRY		2566226		True				
ANR	2566296	CFGExitNode	EXIT		2566226		True				
ANR	2566297	Symbol	val		2566226						
ANR	2566298	Symbol	op		2566226						
ANR	2566299	Symbol	Literal :: MakeLiteral		2566226						
ANR	2566300	Symbol	NULL		2566226						
ANR	2566301	Symbol	lit		2566226						
ANR	2566302	Symbol	tree		2566226						
ANR	2566303	Symbol	newOp		2566226						
ANR	2566304	Symbol	MakeOperation		2566226						
ANR	2566305	Function	Operation :: MakeOperation	1602:0:40533:40855							
ANR	2566306	FunctionDef	"Operation :: MakeOperation (OpKind op , ExprTree * tree , Value & val)"		2566305	0					
ANR	2566307	CompoundStatement		1604:0:40612:40855	2566305	0					
ANR	2566308	IdentifierDeclStatement	Operation * newOp ;	1605:1:40615:40633	2566305	0	True				
ANR	2566309	IdentifierDecl	* newOp		2566305	0					
ANR	2566310	IdentifierDeclType	Operation *		2566305	0					
ANR	2566311	Identifier	newOp		2566305	1					
ANR	2566312	IdentifierDeclStatement	Literal * lit ;	1606:1:40636:40649	2566305	1	True				
ANR	2566313	IdentifierDecl	* lit		2566305	0					
ANR	2566314	IdentifierDeclType	Literal *		2566305	0					
ANR	2566315	Identifier	lit		2566305	1					
ANR	2566316	IfStatement	if ( tree == NULL )		2566305	2					
ANR	2566317	Condition	tree == NULL	1608:5:40657:40668	2566305	0	True				
ANR	2566318	EqualityExpression	tree == NULL		2566305	0		==			
ANR	2566319	Identifier	tree		2566305	0					
ANR	2566320	Identifier	NULL		2566305	1					
ANR	2566321	ReturnStatement	return NULL ;	1608:20:40672:40683	2566305	1	True				
ANR	2566322	Identifier	NULL		2566305	0					
ANR	2566323	IfStatement	if ( ! ( lit = Literal :: MakeLiteral ( val ) ) )		2566305	3					
ANR	2566324	Condition	! ( lit = Literal :: MakeLiteral ( val ) )	1610:5:40691:40728	2566305	0	True				
ANR	2566325	UnaryOperationExpression	! ( lit = Literal :: MakeLiteral ( val ) )		2566305	0					
ANR	2566326	UnaryOperator	!		2566305	0					
ANR	2566327	AssignmentExpression	lit = Literal :: MakeLiteral ( val )		2566305	1		=			
ANR	2566328	Identifier	lit		2566305	0					
ANR	2566329	CallExpression	Literal :: MakeLiteral ( val )		2566305	1					
ANR	2566330	Callee	Literal :: MakeLiteral		2566305	0					
ANR	2566331	Identifier	Literal :: MakeLiteral		2566305	0					
ANR	2566332	ArgumentList	val		2566305	1					
ANR	2566333	Argument	val		2566305	0					
ANR	2566334	Identifier	val		2566305	0					
ANR	2566335	CompoundStatement		7:46:119:119	2566305	1					
ANR	2566336	ReturnStatement	return NULL ;	1611:2:40736:40747	2566305	0	True				
ANR	2566337	Identifier	NULL		2566305	0					
ANR	2566338	IfStatement	"if ( ! ( newOp = MakeOperation ( op , tree , lit ) ) )"		2566305	4					
ANR	2566339	Condition	"! ( newOp = MakeOperation ( op , tree , lit ) )"	1613:5:40757:40799	2566305	0	True				
ANR	2566340	UnaryOperationExpression	"! ( newOp = MakeOperation ( op , tree , lit ) )"		2566305	0					
ANR	2566341	UnaryOperator	!		2566305	0					
ANR	2566342	AssignmentExpression	"newOp = MakeOperation ( op , tree , lit )"		2566305	1		=			
ANR	2566343	Identifier	newOp		2566305	0					
ANR	2566344	CallExpression	"MakeOperation ( op , tree , lit )"		2566305	1					
ANR	2566345	Callee	MakeOperation		2566305	0					
ANR	2566346	Identifier	MakeOperation		2566305	0					
ANR	2566347	ArgumentList	op		2566305	1					
ANR	2566348	Argument	op		2566305	0					
ANR	2566349	Identifier	op		2566305	0					
ANR	2566350	Argument	tree		2566305	1					
ANR	2566351	Identifier	tree		2566305	0					
ANR	2566352	Argument	lit		2566305	2					
ANR	2566353	Identifier	lit		2566305	0					
ANR	2566354	CompoundStatement		10:51:190:190	2566305	1					
ANR	2566355	Statement	delete	1614:2:40807:40812	2566305	0	True				
ANR	2566356	ExpressionStatement	lit	1614:9:40814:40817	2566305	1	True				
ANR	2566357	Identifier	lit		2566305	0					
ANR	2566358	ReturnStatement	return ( NULL ) ;	1615:2:40821:40835	2566305	2	True				
ANR	2566359	Identifier	NULL		2566305	0					
ANR	2566360	ReturnStatement	return newOp ;	1617:1:40841:40853	2566305	5	True				
ANR	2566361	Identifier	newOp		2566305	0					
ANR	2566362	ReturnType	Operation *		2566305	1					
ANR	2566363	Identifier	Operation :: MakeOperation		2566305	2					
ANR	2566364	ParameterList	"OpKind op , ExprTree * tree , Value & val"		2566305	3					
ANR	2566365	Parameter	OpKind op	1603:15:40571:40579	2566305	0	True				
ANR	2566366	ParameterType	OpKind		2566305	0					
ANR	2566367	Identifier	op		2566305	1					
ANR	2566368	Parameter	ExprTree * tree	1603:26:40582:40595	2566305	1	True				
ANR	2566369	ParameterType	ExprTree *		2566305	0					
ANR	2566370	Identifier	tree		2566305	1					
ANR	2566371	Parameter	Value & val	1603:42:40598:40607	2566305	2	True				
ANR	2566372	ParameterType	Value &		2566305	0					
ANR	2566373	Identifier	val		2566305	1					
ANR	2566374	CFGEntryNode	ENTRY		2566305		True				
ANR	2566375	CFGExitNode	EXIT		2566305		True				
ANR	2566376	Symbol	val		2566305						
ANR	2566377	Symbol	op		2566305						
ANR	2566378	Symbol	Literal :: MakeLiteral		2566305						
ANR	2566379	Symbol	NULL		2566305						
ANR	2566380	Symbol	lit		2566305						
ANR	2566381	Symbol	tree		2566305						
ANR	2566382	Symbol	newOp		2566305						
ANR	2566383	Symbol	MakeOperation		2566305						
ANR	2566384	Function	Operation :: flattenSpecials	1621:0:40859:44498							
ANR	2566385	FunctionDef	"Operation :: flattenSpecials (EvalState & state , Value & val , ExprTree * & tree)"		2566384	0					
ANR	2566386	CompoundStatement		1623:0:40947:44498	2566384	0					
ANR	2566387	IdentifierDeclStatement	"ExprTree * fChild1 = NULL , * fChild2 = NULL , * fChild3 = NULL ;"	1624:1:40950:41009	2566384	0	True				
ANR	2566388	IdentifierDecl	* fChild1 = NULL		2566384	0					
ANR	2566389	IdentifierDeclType	ExprTree *		2566384	0					
ANR	2566390	Identifier	fChild1		2566384	1					
ANR	2566391	AssignmentExpression	* fChild1 = NULL		2566384	2		=			
ANR	2566392	Identifier	NULL		2566384	0					
ANR	2566393	Identifier	NULL		2566384	1					
ANR	2566394	IdentifierDecl	* fChild2 = NULL		2566384	1					
ANR	2566395	IdentifierDeclType	ExprTree *		2566384	0					
ANR	2566396	Identifier	fChild2		2566384	1					
ANR	2566397	AssignmentExpression	* fChild2 = NULL		2566384	2		=			
ANR	2566398	Identifier	NULL		2566384	0					
ANR	2566399	Identifier	NULL		2566384	1					
ANR	2566400	IdentifierDecl	* fChild3 = NULL		2566384	2					
ANR	2566401	IdentifierDeclType	ExprTree *		2566384	0					
ANR	2566402	Identifier	fChild3		2566384	1					
ANR	2566403	AssignmentExpression	* fChild3 = NULL		2566384	2		=			
ANR	2566404	Identifier	NULL		2566384	0					
ANR	2566405	Identifier	NULL		2566384	1					
ANR	2566406	IdentifierDeclStatement	"Value eval1 , eval2 , eval3 , dummy ;"	1625:1:41012:41045	2566384	1	True				
ANR	2566407	IdentifierDecl	eval1		2566384	0					
ANR	2566408	IdentifierDeclType	Value		2566384	0					
ANR	2566409	Identifier	eval1		2566384	1					
ANR	2566410	IdentifierDecl	eval2		2566384	1					
ANR	2566411	IdentifierDeclType	Value		2566384	0					
ANR	2566412	Identifier	eval2		2566384	1					
ANR	2566413	IdentifierDecl	eval3		2566384	2					
ANR	2566414	IdentifierDeclType	Value		2566384	0					
ANR	2566415	Identifier	eval3		2566384	1					
ANR	2566416	IdentifierDecl	dummy		2566384	3					
ANR	2566417	IdentifierDeclType	Value		2566384	0					
ANR	2566418	Identifier	dummy		2566384	1					
ANR	2566419	SwitchStatement	switch ( operation )		2566384	2					
ANR	2566420	Condition	operation	1627:9:41057:41065	2566384	0	True				
ANR	2566421	Identifier	operation		2566384	0					
ANR	2566422	CompoundStatement		5:21:121:121	2566384	1					
ANR	2566423	Label	case UNARY_PLUS_OP :	1628:2:41073:41091	2566384	0	True				
ANR	2566424	Identifier	UNARY_PLUS_OP		2566384	0					
ANR	2566425	Label	case UNARY_MINUS_OP :	1629:2:41095:41114	2566384	1	True				
ANR	2566426	Identifier	UNARY_MINUS_OP		2566384	0					
ANR	2566427	Label	case PARENTHESES_OP :	1630:2:41118:41137	2566384	2	True				
ANR	2566428	Identifier	PARENTHESES_OP		2566384	0					
ANR	2566429	Label	case LOGICAL_NOT_OP :	1631:2:41141:41160	2566384	3	True				
ANR	2566430	Identifier	LOGICAL_NOT_OP		2566384	0					
ANR	2566431	Label	case BITWISE_NOT_OP :	1632:2:41164:41183	2566384	4	True				
ANR	2566432	Identifier	BITWISE_NOT_OP		2566384	0					
ANR	2566433	IfStatement	"if ( ! child1 -> Flatten ( state , eval1 , fChild1 ) )"		2566384	5					
ANR	2566434	Condition	"! child1 -> Flatten ( state , eval1 , fChild1 )"	1633:7:41192:41232	2566384	0	True				
ANR	2566435	UnaryOperationExpression	"! child1 -> Flatten ( state , eval1 , fChild1 )"		2566384	0					
ANR	2566436	UnaryOperator	!		2566384	0					
ANR	2566437	CallExpression	"child1 -> Flatten ( state , eval1 , fChild1 )"		2566384	1					
ANR	2566438	Callee	child1 -> Flatten		2566384	0					
ANR	2566439	PtrMemberAccess	child1 -> Flatten		2566384	0					
ANR	2566440	Identifier	child1		2566384	0					
ANR	2566441	Identifier	Flatten		2566384	1					
ANR	2566442	ArgumentList	state		2566384	1					
ANR	2566443	Argument	state		2566384	0					
ANR	2566444	Identifier	state		2566384	0					
ANR	2566445	Argument	eval1		2566384	1					
ANR	2566446	Identifier	eval1		2566384	0					
ANR	2566447	Argument	fChild1		2566384	2					
ANR	2566448	Identifier	fChild1		2566384	0					
ANR	2566449	CompoundStatement		11:51:288:288	2566384	1					
ANR	2566450	ExpressionStatement	tree = NULL	1634:4:41242:41253	2566384	0	True				
ANR	2566451	AssignmentExpression	tree = NULL		2566384	0		=			
ANR	2566452	Identifier	tree		2566384	0					
ANR	2566453	Identifier	NULL		2566384	1					
ANR	2566454	ReturnStatement	return false ;	1635:4:41259:41271	2566384	1	True				
ANR	2566455	Identifier	false		2566384	0					
ANR	2566456	IfStatement	if ( fChild1 )		2566384	6					
ANR	2566457	Condition	fChild1	1637:7:41286:41292	2566384	0	True				
ANR	2566458	Identifier	fChild1		2566384	0					
ANR	2566459	CompoundStatement		15:17:348:348	2566384	1					
ANR	2566460	ExpressionStatement	"tree = Operation :: MakeOperation ( operation , fChild1 )"	1638:4:41302:41355	2566384	0	True				
ANR	2566461	AssignmentExpression	"tree = Operation :: MakeOperation ( operation , fChild1 )"		2566384	0		=			
ANR	2566462	Identifier	tree		2566384	0					
ANR	2566463	CallExpression	"Operation :: MakeOperation ( operation , fChild1 )"		2566384	1					
ANR	2566464	Callee	Operation :: MakeOperation		2566384	0					
ANR	2566465	Identifier	Operation :: MakeOperation		2566384	0					
ANR	2566466	ArgumentList	operation		2566384	1					
ANR	2566467	Argument	operation		2566384	0					
ANR	2566468	Identifier	operation		2566384	0					
ANR	2566469	Argument	fChild1		2566384	1					
ANR	2566470	Identifier	fChild1		2566384	0					
ANR	2566471	ReturnStatement	return ( tree != NULL ) ;	1639:4:41361:41383	2566384	1	True				
ANR	2566472	EqualityExpression	tree != NULL		2566384	0		!=			
ANR	2566473	Identifier	tree		2566384	0					
ANR	2566474	Identifier	NULL		2566384	1					
ANR	2566475	ElseStatement	else		2566384	0					
ANR	2566476	CompoundStatement		18:10:447:447	2566384	0					
ANR	2566477	ExpressionStatement	"_doOperation ( operation , eval1 , dummy , dummy , true , false , false , val )"	1641:4:41401:41478	2566384	0	True				
ANR	2566478	CallExpression	"_doOperation ( operation , eval1 , dummy , dummy , true , false , false , val )"		2566384	0					
ANR	2566479	Callee	_doOperation		2566384	0					
ANR	2566480	Identifier	_doOperation		2566384	0					
ANR	2566481	ArgumentList	operation		2566384	1					
ANR	2566482	Argument	operation		2566384	0					
ANR	2566483	Identifier	operation		2566384	0					
ANR	2566484	Argument	eval1		2566384	1					
ANR	2566485	Identifier	eval1		2566384	0					
ANR	2566486	Argument	dummy		2566384	2					
ANR	2566487	Identifier	dummy		2566384	0					
ANR	2566488	Argument	dummy		2566384	3					
ANR	2566489	Identifier	dummy		2566384	0					
ANR	2566490	Argument	true		2566384	4					
ANR	2566491	Identifier	true		2566384	0					
ANR	2566492	Argument	false		2566384	5					
ANR	2566493	Identifier	false		2566384	0					
ANR	2566494	Argument	false		2566384	6					
ANR	2566495	Identifier	false		2566384	0					
ANR	2566496	Argument	val		2566384	7					
ANR	2566497	Identifier	val		2566384	0					
ANR	2566498	ExpressionStatement	tree = NULL	1643:4:41484:41495	2566384	1	True				
ANR	2566499	AssignmentExpression	tree = NULL		2566384	0		=			
ANR	2566500	Identifier	tree		2566384	0					
ANR	2566501	Identifier	NULL		2566384	1					
ANR	2566502	ExpressionStatement	eval1 . Clear ( )	1644:4:41501:41514	2566384	2	True				
ANR	2566503	CallExpression	eval1 . Clear ( )		2566384	0					
ANR	2566504	Callee	eval1 . Clear		2566384	0					
ANR	2566505	MemberAccess	eval1 . Clear		2566384	0					
ANR	2566506	Identifier	eval1		2566384	0					
ANR	2566507	Identifier	Clear		2566384	1					
ANR	2566508	ArgumentList			2566384	1					
ANR	2566509	ReturnStatement	return true ;	1645:4:41520:41531	2566384	3	True				
ANR	2566510	Identifier	true		2566384	0					
ANR	2566511	BreakStatement	break ;	1647:3:41541:41546	2566384	7	True				
ANR	2566512	Label	case TERNARY_OP :	1650:2:41552:41567	2566384	8	True				
ANR	2566513	Identifier	TERNARY_OP		2566384	0					
ANR	2566514	IfStatement	"if ( ! child1 -> Flatten ( state , eval1 , fChild1 ) )"		2566384	9					
ANR	2566515	Condition	"! child1 -> Flatten ( state , eval1 , fChild1 )"	1652:7:41614:41654	2566384	0	True				
ANR	2566516	UnaryOperationExpression	"! child1 -> Flatten ( state , eval1 , fChild1 )"		2566384	0					
ANR	2566517	UnaryOperator	!		2566384	0					
ANR	2566518	CallExpression	"child1 -> Flatten ( state , eval1 , fChild1 )"		2566384	1					
ANR	2566519	Callee	child1 -> Flatten		2566384	0					
ANR	2566520	PtrMemberAccess	child1 -> Flatten		2566384	0					
ANR	2566521	Identifier	child1		2566384	0					
ANR	2566522	Identifier	Flatten		2566384	1					
ANR	2566523	ArgumentList	state		2566384	1					
ANR	2566524	Argument	state		2566384	0					
ANR	2566525	Identifier	state		2566384	0					
ANR	2566526	Argument	eval1		2566384	1					
ANR	2566527	Identifier	eval1		2566384	0					
ANR	2566528	Argument	fChild1		2566384	2					
ANR	2566529	Identifier	fChild1		2566384	0					
ANR	2566530	CompoundStatement		30:51:710:710	2566384	1					
ANR	2566531	ExpressionStatement	tree = NULL	1653:4:41664:41675	2566384	0	True				
ANR	2566532	AssignmentExpression	tree = NULL		2566384	0		=			
ANR	2566533	Identifier	tree		2566384	0					
ANR	2566534	Identifier	NULL		2566384	1					
ANR	2566535	ReturnStatement	return false ;	1654:4:41681:41693	2566384	1	True				
ANR	2566536	Identifier	false		2566384	0					
ANR	2566537	IfStatement	if ( ! fChild1 && ! eval1 . IsUndefinedValue ( ) )		2566384	10					
ANR	2566538	Condition	! fChild1 && ! eval1 . IsUndefinedValue ( )	1658:7:41778:41814	2566384	0	True				
ANR	2566539	AndExpression	! fChild1 && ! eval1 . IsUndefinedValue ( )		2566384	0		&&			
ANR	2566540	UnaryOperationExpression	! fChild1		2566384	0					
ANR	2566541	UnaryOperator	!		2566384	0					
ANR	2566542	Identifier	fChild1		2566384	1					
ANR	2566543	UnaryOperationExpression	! eval1 . IsUndefinedValue ( )		2566384	1					
ANR	2566544	UnaryOperator	!		2566384	0					
ANR	2566545	CallExpression	eval1 . IsUndefinedValue ( )		2566384	1					
ANR	2566546	Callee	eval1 . IsUndefinedValue		2566384	0					
ANR	2566547	MemberAccess	eval1 . IsUndefinedValue		2566384	0					
ANR	2566548	Identifier	eval1		2566384	0					
ANR	2566549	Identifier	IsUndefinedValue		2566384	1					
ANR	2566550	ArgumentList			2566384	1					
ANR	2566551	CompoundStatement		38:4:893:930	2566384	1					
ANR	2566552	IdentifierDeclStatement	bool b ;	1659:4:41824:41834	2566384	0	True				
ANR	2566553	IdentifierDecl	b		2566384	0					
ANR	2566554	IdentifierDeclType	bool		2566384	0					
ANR	2566555	Identifier	b		2566384	1					
ANR	2566556	IdentifierDeclStatement	Value :: ValueType vt = eval1 . GetType ( ) ;	1660:4:41841:41878	2566384	1	True				
ANR	2566557	IdentifierDecl	vt = eval1 . GetType ( )		2566384	0					
ANR	2566558	IdentifierDeclType	Value :: ValueType		2566384	0					
ANR	2566559	Identifier	vt		2566384	1					
ANR	2566560	AssignmentExpression	vt = eval1 . GetType ( )		2566384	2		=			
ANR	2566561	Identifier	vt		2566384	0					
ANR	2566562	CallExpression	eval1 . GetType ( )		2566384	1					
ANR	2566563	Callee	eval1 . GetType		2566384	0					
ANR	2566564	MemberAccess	eval1 . GetType		2566384	0					
ANR	2566565	Identifier	eval1		2566384	0					
ANR	2566566	Identifier	GetType		2566384	1					
ANR	2566567	ArgumentList			2566384	1					
ANR	2566568	IfStatement	if ( vt != Value :: BOOLEAN_VALUE )		2566384	2					
ANR	2566569	Condition	vt != Value :: BOOLEAN_VALUE	1663:8:41944:41967	2566384	0	True				
ANR	2566570	EqualityExpression	vt != Value :: BOOLEAN_VALUE		2566384	0		!=			
ANR	2566571	Identifier	vt		2566384	0					
ANR	2566572	Identifier	Value :: BOOLEAN_VALUE		2566384	1					
ANR	2566573	CompoundStatement		41:35:1023:1023	2566384	1					
ANR	2566574	ExpressionStatement	val . SetErrorValue ( )	1664:5:41978:41997	2566384	0	True				
ANR	2566575	CallExpression	val . SetErrorValue ( )		2566384	0					
ANR	2566576	Callee	val . SetErrorValue		2566384	0					
ANR	2566577	MemberAccess	val . SetErrorValue		2566384	0					
ANR	2566578	Identifier	val		2566384	0					
ANR	2566579	Identifier	SetErrorValue		2566384	1					
ANR	2566580	ArgumentList			2566384	1					
ANR	2566581	ExpressionStatement	eval1 . Clear ( )	1665:5:42005:42018	2566384	1	True				
ANR	2566582	CallExpression	eval1 . Clear ( )		2566384	0					
ANR	2566583	Callee	eval1 . Clear		2566384	0					
ANR	2566584	MemberAccess	eval1 . Clear		2566384	0					
ANR	2566585	Identifier	eval1		2566384	0					
ANR	2566586	Identifier	Clear		2566384	1					
ANR	2566587	ArgumentList			2566384	1					
ANR	2566588	ExpressionStatement	tree = NULL	1666:5:42025:42036	2566384	2	True				
ANR	2566589	AssignmentExpression	tree = NULL		2566384	0		=			
ANR	2566590	Identifier	tree		2566384	0					
ANR	2566591	Identifier	NULL		2566384	1					
ANR	2566592	ReturnStatement	return true ;	1667:5:42043:42054	2566384	3	True				
ANR	2566593	Identifier	true		2566384	0					
ANR	2566594	IfStatement	if ( eval1 . IsBooleanValue ( b ) && b != 0 )		2566384	3					
ANR	2566595	Condition	eval1 . IsBooleanValue ( b ) && b != 0	1671:8:42115:42145	2566384	0	True				
ANR	2566596	AndExpression	eval1 . IsBooleanValue ( b ) && b != 0		2566384	0		&&			
ANR	2566597	CallExpression	eval1 . IsBooleanValue ( b )		2566384	0					
ANR	2566598	Callee	eval1 . IsBooleanValue		2566384	0					
ANR	2566599	MemberAccess	eval1 . IsBooleanValue		2566384	0					
ANR	2566600	Identifier	eval1		2566384	0					
ANR	2566601	Identifier	IsBooleanValue		2566384	1					
ANR	2566602	ArgumentList	b		2566384	1					
ANR	2566603	Argument	b		2566384	0					
ANR	2566604	Identifier	b		2566384	0					
ANR	2566605	EqualityExpression	b != 0		2566384	1		!=			
ANR	2566606	Identifier	b		2566384	0					
ANR	2566607	PrimaryExpression	0		2566384	1					
ANR	2566608	CompoundStatement		49:42:1201:1201	2566384	1					
ANR	2566609	ReturnStatement	"return child2 -> Flatten ( state , val , tree ) ;"	1672:5:42156:42198	2566384	0	True				
ANR	2566610	CallExpression	"child2 -> Flatten ( state , val , tree )"		2566384	0					
ANR	2566611	Callee	child2 -> Flatten		2566384	0					
ANR	2566612	PtrMemberAccess	child2 -> Flatten		2566384	0					
ANR	2566613	Identifier	child2		2566384	0					
ANR	2566614	Identifier	Flatten		2566384	1					
ANR	2566615	ArgumentList	state		2566384	1					
ANR	2566616	Argument	state		2566384	0					
ANR	2566617	Identifier	state		2566384	0					
ANR	2566618	Argument	val		2566384	1					
ANR	2566619	Identifier	val		2566384	0					
ANR	2566620	Argument	tree		2566384	2					
ANR	2566621	Identifier	tree		2566384	0					
ANR	2566622	ElseStatement	else		2566384	0					
ANR	2566623	CompoundStatement		51:11:1264:1264	2566384	0					
ANR	2566624	ReturnStatement	"return child3 -> Flatten ( state , val , tree ) ;"	1674:5:42219:42261	2566384	0	True				
ANR	2566625	CallExpression	"child3 -> Flatten ( state , val , tree )"		2566384	0					
ANR	2566626	Callee	child3 -> Flatten		2566384	0					
ANR	2566627	PtrMemberAccess	child3 -> Flatten		2566384	0					
ANR	2566628	Identifier	child3		2566384	0					
ANR	2566629	Identifier	Flatten		2566384	1					
ANR	2566630	ArgumentList	state		2566384	1					
ANR	2566631	Argument	state		2566384	0					
ANR	2566632	Identifier	state		2566384	0					
ANR	2566633	Argument	val		2566384	1					
ANR	2566634	Identifier	val		2566384	0					
ANR	2566635	Argument	tree		2566384	2					
ANR	2566636	Identifier	tree		2566384	0					
ANR	2566637	ElseStatement	else		2566384	0					
ANR	2566638	CompoundStatement		54:10:1332:1332	2566384	0					
ANR	2566639	IfStatement	"if ( ! child2 -> Flatten ( state , eval2 , fChild2 ) || ! child3 -> Flatten ( state , eval3 , fChild3 ) )"		2566384	0					
ANR	2566640	Condition	"! child2 -> Flatten ( state , eval2 , fChild2 ) || ! child3 -> Flatten ( state , eval3 , fChild3 )"	1678:8:42331:42421	2566384	0	True				
ANR	2566641	OrExpression	"! child2 -> Flatten ( state , eval2 , fChild2 ) || ! child3 -> Flatten ( state , eval3 , fChild3 )"		2566384	0		||			
ANR	2566642	UnaryOperationExpression	"! child2 -> Flatten ( state , eval2 , fChild2 )"		2566384	0					
ANR	2566643	UnaryOperator	!		2566384	0					
ANR	2566644	CallExpression	"child2 -> Flatten ( state , eval2 , fChild2 )"		2566384	1					
ANR	2566645	Callee	child2 -> Flatten		2566384	0					
ANR	2566646	PtrMemberAccess	child2 -> Flatten		2566384	0					
ANR	2566647	Identifier	child2		2566384	0					
ANR	2566648	Identifier	Flatten		2566384	1					
ANR	2566649	ArgumentList	state		2566384	1					
ANR	2566650	Argument	state		2566384	0					
ANR	2566651	Identifier	state		2566384	0					
ANR	2566652	Argument	eval2		2566384	1					
ANR	2566653	Identifier	eval2		2566384	0					
ANR	2566654	Argument	fChild2		2566384	2					
ANR	2566655	Identifier	fChild2		2566384	0					
ANR	2566656	UnaryOperationExpression	"! child3 -> Flatten ( state , eval3 , fChild3 )"		2566384	1					
ANR	2566657	UnaryOperator	!		2566384	0					
ANR	2566658	CallExpression	"child3 -> Flatten ( state , eval3 , fChild3 )"		2566384	1					
ANR	2566659	Callee	child3 -> Flatten		2566384	0					
ANR	2566660	PtrMemberAccess	child3 -> Flatten		2566384	0					
ANR	2566661	Identifier	child3		2566384	0					
ANR	2566662	Identifier	Flatten		2566384	1					
ANR	2566663	ArgumentList	state		2566384	1					
ANR	2566664	Argument	state		2566384	0					
ANR	2566665	Identifier	state		2566384	0					
ANR	2566666	Argument	eval3		2566384	1					
ANR	2566667	Identifier	eval3		2566384	0					
ANR	2566668	Argument	fChild3		2566384	2					
ANR	2566669	Identifier	fChild3		2566384	0					
ANR	2566670	CompoundStatement		57:49:1477:1477	2566384	1					
ANR	2566671	IfStatement	if ( fChild1 )		2566384	0					
ANR	2566672	Condition	fChild1	1681:9:42453:42459	2566384	0	True				
ANR	2566673	Identifier	fChild1		2566384	0					
ANR	2566674	Statement	delete	1681:19:42463:42468	2566384	1	True				
ANR	2566675	ExpressionStatement	fChild1	1681:26:42470:42477	2566384	1	True				
ANR	2566676	Identifier	fChild1		2566384	0					
ANR	2566677	IfStatement	if ( fChild2 )		2566384	2					
ANR	2566678	Condition	fChild2	1682:9:42488:42494	2566384	0	True				
ANR	2566679	Identifier	fChild2		2566384	0					
ANR	2566680	Statement	delete	1682:19:42498:42503	2566384	1	True				
ANR	2566681	ExpressionStatement	fChild2	1682:26:42505:42512	2566384	3	True				
ANR	2566682	Identifier	fChild2		2566384	0					
ANR	2566683	IfStatement	if ( fChild3 )		2566384	4					
ANR	2566684	Condition	fChild3	1683:9:42523:42529	2566384	0	True				
ANR	2566685	Identifier	fChild3		2566384	0					
ANR	2566686	Statement	delete	1683:19:42533:42538	2566384	1	True				
ANR	2566687	ExpressionStatement	fChild3	1683:26:42540:42547	2566384	5	True				
ANR	2566688	Identifier	fChild3		2566384	0					
ANR	2566689	ExpressionStatement	tree = NULL	1684:5:42554:42565	2566384	6	True				
ANR	2566690	AssignmentExpression	tree = NULL		2566384	0		=			
ANR	2566691	Identifier	tree		2566384	0					
ANR	2566692	Identifier	NULL		2566384	1					
ANR	2566693	ReturnStatement	return false ;	1685:5:42572:42584	2566384	7	True				
ANR	2566694	Identifier	false		2566384	0					
ANR	2566695	IfStatement	if ( ! fChild2 )		2566384	1					
ANR	2566696	Condition	! fChild2	1689:8:42661:42668	2566384	0	True				
ANR	2566697	UnaryOperationExpression	! fChild2		2566384	0					
ANR	2566698	UnaryOperator	!		2566384	0					
ANR	2566699	Identifier	fChild2		2566384	1					
ANR	2566700	ExpressionStatement	fChild2 = Literal :: MakeLiteral ( eval2 )	1689:19:42672:42711	2566384	1	True				
ANR	2566701	AssignmentExpression	fChild2 = Literal :: MakeLiteral ( eval2 )		2566384	0		=			
ANR	2566702	Identifier	fChild2		2566384	0					
ANR	2566703	CallExpression	Literal :: MakeLiteral ( eval2 )		2566384	1					
ANR	2566704	Callee	Literal :: MakeLiteral		2566384	0					
ANR	2566705	Identifier	Literal :: MakeLiteral		2566384	0					
ANR	2566706	ArgumentList	eval2		2566384	1					
ANR	2566707	Argument	eval2		2566384	0					
ANR	2566708	Identifier	eval2		2566384	0					
ANR	2566709	IfStatement	if ( ! fChild3 )		2566384	2					
ANR	2566710	Condition	! fChild3	1690:8:42721:42728	2566384	0	True				
ANR	2566711	UnaryOperationExpression	! fChild3		2566384	0					
ANR	2566712	UnaryOperator	!		2566384	0					
ANR	2566713	Identifier	fChild3		2566384	1					
ANR	2566714	ExpressionStatement	fChild3 = Literal :: MakeLiteral ( eval3 )	1690:19:42732:42771	2566384	1	True				
ANR	2566715	AssignmentExpression	fChild3 = Literal :: MakeLiteral ( eval3 )		2566384	0		=			
ANR	2566716	Identifier	fChild3		2566384	0					
ANR	2566717	CallExpression	Literal :: MakeLiteral ( eval3 )		2566384	1					
ANR	2566718	Callee	Literal :: MakeLiteral		2566384	0					
ANR	2566719	Identifier	Literal :: MakeLiteral		2566384	0					
ANR	2566720	ArgumentList	eval3		2566384	1					
ANR	2566721	Argument	eval3		2566384	0					
ANR	2566722	Identifier	eval3		2566384	0					
ANR	2566723	IfStatement	if ( ! fChild2 || ! fChild3 )		2566384	3					
ANR	2566724	Condition	! fChild2 || ! fChild3	1691:8:42781:42800	2566384	0	True				
ANR	2566725	OrExpression	! fChild2 || ! fChild3		2566384	0		||			
ANR	2566726	UnaryOperationExpression	! fChild2		2566384	0					
ANR	2566727	UnaryOperator	!		2566384	0					
ANR	2566728	Identifier	fChild2		2566384	1					
ANR	2566729	UnaryOperationExpression	! fChild3		2566384	1					
ANR	2566730	UnaryOperator	!		2566384	0					
ANR	2566731	Identifier	fChild3		2566384	1					
ANR	2566732	CompoundStatement		69:31:1856:1856	2566384	1					
ANR	2566733	IfStatement	if ( fChild1 )		2566384	0					
ANR	2566734	Condition	fChild1	1693:9:42832:42838	2566384	0	True				
ANR	2566735	Identifier	fChild1		2566384	0					
ANR	2566736	Statement	delete	1693:19:42842:42847	2566384	1	True				
ANR	2566737	ExpressionStatement	fChild1	1693:26:42849:42856	2566384	1	True				
ANR	2566738	Identifier	fChild1		2566384	0					
ANR	2566739	IfStatement	if ( fChild2 )		2566384	2					
ANR	2566740	Condition	fChild2	1694:9:42867:42873	2566384	0	True				
ANR	2566741	Identifier	fChild2		2566384	0					
ANR	2566742	Statement	delete	1694:19:42877:42882	2566384	1	True				
ANR	2566743	ExpressionStatement	fChild2	1694:26:42884:42891	2566384	3	True				
ANR	2566744	Identifier	fChild2		2566384	0					
ANR	2566745	IfStatement	if ( fChild3 )		2566384	4					
ANR	2566746	Condition	fChild3	1695:9:42902:42908	2566384	0	True				
ANR	2566747	Identifier	fChild3		2566384	0					
ANR	2566748	Statement	delete	1695:19:42912:42917	2566384	1	True				
ANR	2566749	ExpressionStatement	fChild3	1695:26:42919:42926	2566384	5	True				
ANR	2566750	Identifier	fChild3		2566384	0					
ANR	2566751	ExpressionStatement	tree = NULL	1696:5:42933:42944	2566384	6	True				
ANR	2566752	AssignmentExpression	tree = NULL		2566384	0		=			
ANR	2566753	Identifier	tree		2566384	0					
ANR	2566754	Identifier	NULL		2566384	1					
ANR	2566755	ReturnStatement	return false ;	1697:5:42951:42963	2566384	7	True				
ANR	2566756	Identifier	false		2566384	0					
ANR	2566757	IfStatement	if ( ! fChild1 )		2566384	4					
ANR	2566758	Condition	! fChild1	1701:8:43041:43048	2566384	0	True				
ANR	2566759	UnaryOperationExpression	! fChild1		2566384	0					
ANR	2566760	UnaryOperator	!		2566384	0					
ANR	2566761	Identifier	fChild1		2566384	1					
ANR	2566762	CompoundStatement		79:19:2104:2104	2566384	1					
ANR	2566763	ExpressionStatement	fChild1 = child1 -> Copy ( )	1702:5:43059:43083	2566384	0	True				
ANR	2566764	AssignmentExpression	fChild1 = child1 -> Copy ( )		2566384	0		=			
ANR	2566765	Identifier	fChild1		2566384	0					
ANR	2566766	CallExpression	child1 -> Copy ( )		2566384	1					
ANR	2566767	Callee	child1 -> Copy		2566384	0					
ANR	2566768	PtrMemberAccess	child1 -> Copy		2566384	0					
ANR	2566769	Identifier	child1		2566384	0					
ANR	2566770	Identifier	Copy		2566384	1					
ANR	2566771	ArgumentList			2566384	1					
ANR	2566772	ExpressionStatement	"tree = Operation :: MakeOperation ( operation , fChild1 , fChild2 , fChild3 )"	1705:4:43096:43174	2566384	5	True				
ANR	2566773	AssignmentExpression	"tree = Operation :: MakeOperation ( operation , fChild1 , fChild2 , fChild3 )"		2566384	0		=			
ANR	2566774	Identifier	tree		2566384	0					
ANR	2566775	CallExpression	"Operation :: MakeOperation ( operation , fChild1 , fChild2 , fChild3 )"		2566384	1					
ANR	2566776	Callee	Operation :: MakeOperation		2566384	0					
ANR	2566777	Identifier	Operation :: MakeOperation		2566384	0					
ANR	2566778	ArgumentList	operation		2566384	1					
ANR	2566779	Argument	operation		2566384	0					
ANR	2566780	Identifier	operation		2566384	0					
ANR	2566781	Argument	fChild1		2566384	1					
ANR	2566782	Identifier	fChild1		2566384	0					
ANR	2566783	Argument	fChild2		2566384	2					
ANR	2566784	Identifier	fChild2		2566384	0					
ANR	2566785	Argument	fChild3		2566384	3					
ANR	2566786	Identifier	fChild3		2566384	0					
ANR	2566787	IfStatement	if ( ! tree )		2566384	6					
ANR	2566788	Condition	! tree	1707:8:43184:43188	2566384	0	True				
ANR	2566789	UnaryOperationExpression	! tree		2566384	0					
ANR	2566790	UnaryOperator	!		2566384	0					
ANR	2566791	Identifier	tree		2566384	1					
ANR	2566792	CompoundStatement		85:16:2244:2244	2566384	1					
ANR	2566793	IfStatement	if ( fChild1 )		2566384	0					
ANR	2566794	Condition	fChild1	1709:9:43220:43226	2566384	0	True				
ANR	2566795	Identifier	fChild1		2566384	0					
ANR	2566796	Statement	delete	1709:19:43230:43235	2566384	1	True				
ANR	2566797	ExpressionStatement	fChild1	1709:26:43237:43244	2566384	1	True				
ANR	2566798	Identifier	fChild1		2566384	0					
ANR	2566799	IfStatement	if ( fChild2 )		2566384	2					
ANR	2566800	Condition	fChild2	1710:9:43255:43261	2566384	0	True				
ANR	2566801	Identifier	fChild2		2566384	0					
ANR	2566802	Statement	delete	1710:19:43265:43270	2566384	1	True				
ANR	2566803	ExpressionStatement	fChild2	1710:26:43272:43279	2566384	3	True				
ANR	2566804	Identifier	fChild2		2566384	0					
ANR	2566805	IfStatement	if ( fChild3 )		2566384	4					
ANR	2566806	Condition	fChild3	1711:9:43290:43296	2566384	0	True				
ANR	2566807	Identifier	fChild3		2566384	0					
ANR	2566808	Statement	delete	1711:19:43300:43305	2566384	1	True				
ANR	2566809	ExpressionStatement	fChild3	1711:26:43307:43314	2566384	5	True				
ANR	2566810	Identifier	fChild3		2566384	0					
ANR	2566811	ExpressionStatement	tree = NULL	1712:5:43321:43332	2566384	6	True				
ANR	2566812	AssignmentExpression	tree = NULL		2566384	0		=			
ANR	2566813	Identifier	tree		2566384	0					
ANR	2566814	Identifier	NULL		2566384	1					
ANR	2566815	ReturnStatement	return false ;	1713:5:43339:43351	2566384	7	True				
ANR	2566816	Identifier	false		2566384	0					
ANR	2566817	ReturnStatement	return true ;	1715:4:43363:43374	2566384	7	True				
ANR	2566818	Identifier	true		2566384	0					
ANR	2566819	ReturnStatement	return false ;	1718:3:43409:43421	2566384	11	True				
ANR	2566820	Identifier	false		2566384	0					
ANR	2566821	Label	case SUBSCRIPT_OP :	1720:2:43426:43443	2566384	12	True				
ANR	2566822	Identifier	SUBSCRIPT_OP		2566384	0					
ANR	2566823	IfStatement	"if ( ! child1 -> Flatten ( state , eval1 , fChild1 ) || ! child2 -> Flatten ( state , eval2 , fChild2 ) )"		2566384	13					
ANR	2566824	Condition	"! child1 -> Flatten ( state , eval1 , fChild1 ) || ! child2 -> Flatten ( state , eval2 , fChild2 )"	1722:7:43481:43570	2566384	0	True				
ANR	2566825	OrExpression	"! child1 -> Flatten ( state , eval1 , fChild1 ) || ! child2 -> Flatten ( state , eval2 , fChild2 )"		2566384	0		||			
ANR	2566826	UnaryOperationExpression	"! child1 -> Flatten ( state , eval1 , fChild1 )"		2566384	0					
ANR	2566827	UnaryOperator	!		2566384	0					
ANR	2566828	CallExpression	"child1 -> Flatten ( state , eval1 , fChild1 )"		2566384	1					
ANR	2566829	Callee	child1 -> Flatten		2566384	0					
ANR	2566830	PtrMemberAccess	child1 -> Flatten		2566384	0					
ANR	2566831	Identifier	child1		2566384	0					
ANR	2566832	Identifier	Flatten		2566384	1					
ANR	2566833	ArgumentList	state		2566384	1					
ANR	2566834	Argument	state		2566384	0					
ANR	2566835	Identifier	state		2566384	0					
ANR	2566836	Argument	eval1		2566384	1					
ANR	2566837	Identifier	eval1		2566384	0					
ANR	2566838	Argument	fChild1		2566384	2					
ANR	2566839	Identifier	fChild1		2566384	0					
ANR	2566840	UnaryOperationExpression	"! child2 -> Flatten ( state , eval2 , fChild2 )"		2566384	1					
ANR	2566841	UnaryOperator	!		2566384	0					
ANR	2566842	CallExpression	"child2 -> Flatten ( state , eval2 , fChild2 )"		2566384	1					
ANR	2566843	Callee	child2 -> Flatten		2566384	0					
ANR	2566844	PtrMemberAccess	child2 -> Flatten		2566384	0					
ANR	2566845	Identifier	child2		2566384	0					
ANR	2566846	Identifier	Flatten		2566384	1					
ANR	2566847	ArgumentList	state		2566384	1					
ANR	2566848	Argument	state		2566384	0					
ANR	2566849	Identifier	state		2566384	0					
ANR	2566850	Argument	eval2		2566384	1					
ANR	2566851	Identifier	eval2		2566384	0					
ANR	2566852	Argument	fChild2		2566384	2					
ANR	2566853	Identifier	fChild2		2566384	0					
ANR	2566854	CompoundStatement		101:48:2626:2626	2566384	1					
ANR	2566855	IfStatement	if ( fChild1 )		2566384	0					
ANR	2566856	Condition	fChild1	1724:8:43584:43590	2566384	0	True				
ANR	2566857	Identifier	fChild1		2566384	0					
ANR	2566858	Statement	delete	1724:18:43594:43599	2566384	1	True				
ANR	2566859	ExpressionStatement	fChild1	1724:25:43601:43608	2566384	1	True				
ANR	2566860	Identifier	fChild1		2566384	0					
ANR	2566861	IfStatement	if ( fChild2 )		2566384	2					
ANR	2566862	Condition	fChild2	1725:8:43618:43624	2566384	0	True				
ANR	2566863	Identifier	fChild2		2566384	0					
ANR	2566864	Statement	delete	1725:18:43628:43633	2566384	1	True				
ANR	2566865	ExpressionStatement	fChild2	1725:25:43635:43642	2566384	3	True				
ANR	2566866	Identifier	fChild2		2566384	0					
ANR	2566867	ExpressionStatement	tree = NULL	1726:4:43648:43659	2566384	4	True				
ANR	2566868	AssignmentExpression	tree = NULL		2566384	0		=			
ANR	2566869	Identifier	tree		2566384	0					
ANR	2566870	Identifier	NULL		2566384	1					
ANR	2566871	ReturnStatement	return false ;	1727:4:43665:43677	2566384	5	True				
ANR	2566872	Identifier	false		2566384	0					
ANR	2566873	IfStatement	if ( ! fChild1 && ! fChild2 )		2566384	14					
ANR	2566874	Condition	! fChild1 && ! fChild2	1731:7:43750:43769	2566384	0	True				
ANR	2566875	AndExpression	! fChild1 && ! fChild2		2566384	0		&&			
ANR	2566876	UnaryOperationExpression	! fChild1		2566384	0					
ANR	2566877	UnaryOperator	!		2566384	0					
ANR	2566878	Identifier	fChild1		2566384	1					
ANR	2566879	UnaryOperationExpression	! fChild2		2566384	1					
ANR	2566880	UnaryOperator	!		2566384	0					
ANR	2566881	Identifier	fChild2		2566384	1					
ANR	2566882	CompoundStatement		109:30:2825:2825	2566384	1					
ANR	2566883	ExpressionStatement	"_doOperation ( operation , eval1 , eval2 , dummy , true , true , false , val )"	1732:4:43779:43855	2566384	0	True				
ANR	2566884	CallExpression	"_doOperation ( operation , eval1 , eval2 , dummy , true , true , false , val )"		2566384	0					
ANR	2566885	Callee	_doOperation		2566384	0					
ANR	2566886	Identifier	_doOperation		2566384	0					
ANR	2566887	ArgumentList	operation		2566384	1					
ANR	2566888	Argument	operation		2566384	0					
ANR	2566889	Identifier	operation		2566384	0					
ANR	2566890	Argument	eval1		2566384	1					
ANR	2566891	Identifier	eval1		2566384	0					
ANR	2566892	Argument	eval2		2566384	2					
ANR	2566893	Identifier	eval2		2566384	0					
ANR	2566894	Argument	dummy		2566384	3					
ANR	2566895	Identifier	dummy		2566384	0					
ANR	2566896	Argument	true		2566384	4					
ANR	2566897	Identifier	true		2566384	0					
ANR	2566898	Argument	true		2566384	5					
ANR	2566899	Identifier	true		2566384	0					
ANR	2566900	Argument	false		2566384	6					
ANR	2566901	Identifier	false		2566384	0					
ANR	2566902	Argument	val		2566384	7					
ANR	2566903	Identifier	val		2566384	0					
ANR	2566904	ExpressionStatement	tree = NULL	1734:4:43861:43872	2566384	1	True				
ANR	2566905	AssignmentExpression	tree = NULL		2566384	0		=			
ANR	2566906	Identifier	tree		2566384	0					
ANR	2566907	Identifier	NULL		2566384	1					
ANR	2566908	ReturnStatement	return true ;	1735:4:43878:43889	2566384	2	True				
ANR	2566909	Identifier	true		2566384	0					
ANR	2566910	IfStatement	if ( ! fChild1 )		2566384	15					
ANR	2566911	Condition	! fChild1	1739:7:43960:43967	2566384	0	True				
ANR	2566912	UnaryOperationExpression	! fChild1		2566384	0					
ANR	2566913	UnaryOperator	!		2566384	0					
ANR	2566914	Identifier	fChild1		2566384	1					
ANR	2566915	ExpressionStatement	fChild1 = Literal :: MakeLiteral ( eval1 )	1739:18:43971:44010	2566384	1	True				
ANR	2566916	AssignmentExpression	fChild1 = Literal :: MakeLiteral ( eval1 )		2566384	0		=			
ANR	2566917	Identifier	fChild1		2566384	0					
ANR	2566918	CallExpression	Literal :: MakeLiteral ( eval1 )		2566384	1					
ANR	2566919	Callee	Literal :: MakeLiteral		2566384	0					
ANR	2566920	Identifier	Literal :: MakeLiteral		2566384	0					
ANR	2566921	ArgumentList	eval1		2566384	1					
ANR	2566922	Argument	eval1		2566384	0					
ANR	2566923	Identifier	eval1		2566384	0					
ANR	2566924	IfStatement	if ( ! fChild2 )		2566384	16					
ANR	2566925	Condition	! fChild2	1740:7:44019:44026	2566384	0	True				
ANR	2566926	UnaryOperationExpression	! fChild2		2566384	0					
ANR	2566927	UnaryOperator	!		2566384	0					
ANR	2566928	Identifier	fChild2		2566384	1					
ANR	2566929	ExpressionStatement	fChild2 = Literal :: MakeLiteral ( eval2 )	1740:18:44030:44069	2566384	1	True				
ANR	2566930	AssignmentExpression	fChild2 = Literal :: MakeLiteral ( eval2 )		2566384	0		=			
ANR	2566931	Identifier	fChild2		2566384	0					
ANR	2566932	CallExpression	Literal :: MakeLiteral ( eval2 )		2566384	1					
ANR	2566933	Callee	Literal :: MakeLiteral		2566384	0					
ANR	2566934	Identifier	Literal :: MakeLiteral		2566384	0					
ANR	2566935	ArgumentList	eval2		2566384	1					
ANR	2566936	Argument	eval2		2566384	0					
ANR	2566937	Identifier	eval2		2566384	0					
ANR	2566938	IfStatement	if ( ! fChild1 || ! fChild2 )		2566384	17					
ANR	2566939	Condition	! fChild1 || ! fChild2	1741:7:44078:44097	2566384	0	True				
ANR	2566940	OrExpression	! fChild1 || ! fChild2		2566384	0		||			
ANR	2566941	UnaryOperationExpression	! fChild1		2566384	0					
ANR	2566942	UnaryOperator	!		2566384	0					
ANR	2566943	Identifier	fChild1		2566384	1					
ANR	2566944	UnaryOperationExpression	! fChild2		2566384	1					
ANR	2566945	UnaryOperator	!		2566384	0					
ANR	2566946	Identifier	fChild2		2566384	1					
ANR	2566947	CompoundStatement		119:30:3153:3153	2566384	1					
ANR	2566948	IfStatement	if ( fChild1 )		2566384	0					
ANR	2566949	Condition	fChild1	1742:8:44111:44117	2566384	0	True				
ANR	2566950	Identifier	fChild1		2566384	0					
ANR	2566951	Statement	delete	1742:18:44121:44126	2566384	1	True				
ANR	2566952	ExpressionStatement	fChild1	1742:25:44128:44135	2566384	1	True				
ANR	2566953	Identifier	fChild1		2566384	0					
ANR	2566954	IfStatement	if ( fChild2 )		2566384	2					
ANR	2566955	Condition	fChild2	1743:8:44145:44151	2566384	0	True				
ANR	2566956	Identifier	fChild2		2566384	0					
ANR	2566957	Statement	delete	1743:18:44155:44160	2566384	1	True				
ANR	2566958	ExpressionStatement	fChild2	1743:25:44162:44169	2566384	3	True				
ANR	2566959	Identifier	fChild2		2566384	0					
ANR	2566960	ExpressionStatement	tree = NULL	1744:4:44175:44186	2566384	4	True				
ANR	2566961	AssignmentExpression	tree = NULL		2566384	0		=			
ANR	2566962	Identifier	tree		2566384	0					
ANR	2566963	Identifier	NULL		2566384	1					
ANR	2566964	ReturnStatement	return false ;	1745:4:44192:44204	2566384	5	True				
ANR	2566965	Identifier	false		2566384	0					
ANR	2566966	ExpressionStatement	"tree = Operation :: MakeOperation ( operation , fChild1 , fChild2 )"	1748:3:44219:44281	2566384	18	True				
ANR	2566967	AssignmentExpression	"tree = Operation :: MakeOperation ( operation , fChild1 , fChild2 )"		2566384	0		=			
ANR	2566968	Identifier	tree		2566384	0					
ANR	2566969	CallExpression	"Operation :: MakeOperation ( operation , fChild1 , fChild2 )"		2566384	1					
ANR	2566970	Callee	Operation :: MakeOperation		2566384	0					
ANR	2566971	Identifier	Operation :: MakeOperation		2566384	0					
ANR	2566972	ArgumentList	operation		2566384	1					
ANR	2566973	Argument	operation		2566384	0					
ANR	2566974	Identifier	operation		2566384	0					
ANR	2566975	Argument	fChild1		2566384	1					
ANR	2566976	Identifier	fChild1		2566384	0					
ANR	2566977	Argument	fChild2		2566384	2					
ANR	2566978	Identifier	fChild2		2566384	0					
ANR	2566979	IfStatement	if ( ! tree )		2566384	19					
ANR	2566980	Condition	! tree	1749:7:44290:44294	2566384	0	True				
ANR	2566981	UnaryOperationExpression	! tree		2566384	0					
ANR	2566982	UnaryOperator	!		2566384	0					
ANR	2566983	Identifier	tree		2566384	1					
ANR	2566984	CompoundStatement		127:15:3350:3350	2566384	1					
ANR	2566985	IfStatement	if ( fChild1 )		2566384	0					
ANR	2566986	Condition	fChild1	1750:8:44308:44314	2566384	0	True				
ANR	2566987	Identifier	fChild1		2566384	0					
ANR	2566988	Statement	delete	1750:18:44318:44323	2566384	1	True				
ANR	2566989	ExpressionStatement	fChild1	1750:25:44325:44332	2566384	1	True				
ANR	2566990	Identifier	fChild1		2566384	0					
ANR	2566991	IfStatement	if ( fChild2 )		2566384	2					
ANR	2566992	Condition	fChild2	1751:8:44342:44348	2566384	0	True				
ANR	2566993	Identifier	fChild2		2566384	0					
ANR	2566994	Statement	delete	1751:18:44352:44357	2566384	1	True				
ANR	2566995	ExpressionStatement	fChild2	1751:25:44359:44366	2566384	3	True				
ANR	2566996	Identifier	fChild2		2566384	0					
ANR	2566997	ExpressionStatement	tree = NULL	1752:4:44372:44383	2566384	4	True				
ANR	2566998	AssignmentExpression	tree = NULL		2566384	0		=			
ANR	2566999	Identifier	tree		2566384	0					
ANR	2567000	Identifier	NULL		2566384	1					
ANR	2567001	ReturnStatement	return false ;	1753:4:44389:44401	2566384	5	True				
ANR	2567002	Identifier	false		2566384	0					
ANR	2567003	ReturnStatement	return true ;	1755:3:44411:44422	2566384	20	True				
ANR	2567004	Identifier	true		2566384	0					
ANR	2567005	Label	default :	1757:2:44427:44434	2566384	21	True				
ANR	2567006	Identifier	default		2566384	0					
ANR	2567007	ExpressionStatement	"CLASSAD_EXCEPT ( ""Should not get here"" )"	1758:3:44439:44478	2566384	22	True				
ANR	2567008	CallExpression	"CLASSAD_EXCEPT ( ""Should not get here"" )"		2566384	0					
ANR	2567009	Callee	CLASSAD_EXCEPT		2566384	0					
ANR	2567010	Identifier	CLASSAD_EXCEPT		2566384	0					
ANR	2567011	ArgumentList	"""Should not get here"""		2566384	1					
ANR	2567012	Argument	"""Should not get here"""		2566384	0					
ANR	2567013	PrimaryExpression	"""Should not get here"""		2566384	0					
ANR	2567014	ReturnStatement	return true ;	1761:1:44485:44496	2566384	3	True				
ANR	2567015	Identifier	true		2566384	0					
ANR	2567016	ReturnType	bool		2566384	1					
ANR	2567017	Identifier	Operation :: flattenSpecials		2566384	2					
ANR	2567018	ParameterList	"EvalState & state , Value & val , ExprTree * & tree"		2566384	3					
ANR	2567019	Parameter	EvalState & state	1622:17:40893:40908	2566384	0	True				
ANR	2567020	ParameterType	EvalState &		2566384	0					
ANR	2567021	Identifier	state		2566384	1					
ANR	2567022	Parameter	Value & val	1622:35:40911:40920	2566384	1	True				
ANR	2567023	ParameterType	Value &		2566384	0					
ANR	2567024	Identifier	val		2566384	1					
ANR	2567025	Parameter	ExprTree * & tree	1622:47:40923:40937	2566384	2	True				
ANR	2567026	ParameterType	ExprTree * &		2566384	0					
ANR	2567027	Identifier	tree		2566384	1					
ANR	2567028	CFGEntryNode	ENTRY		2566384		True				
ANR	2567029	CFGExitNode	EXIT		2566384		True				
ANR	2567030	Symbol	Literal :: MakeLiteral		2566384						
ANR	2567031	Symbol	child3 -> Flatten		2566384						
ANR	2567032	Symbol	eval1 . IsBooleanValue		2566384						
ANR	2567033	Symbol	Operation :: MakeOperation		2566384						
ANR	2567034	Symbol	child2		2566384						
ANR	2567035	Symbol	child3		2566384						
ANR	2567036	Symbol	child1		2566384						
ANR	2567037	Symbol	dummy		2566384						
ANR	2567038	Symbol	eval2		2566384						
ANR	2567039	Symbol	eval1 . IsUndefinedValue		2566384						
ANR	2567040	Symbol	eval3		2566384						
ANR	2567041	Symbol	eval1		2566384						
ANR	2567042	Symbol	eval1 . GetType		2566384						
ANR	2567043	Symbol	child1 -> Flatten		2566384						
ANR	2567044	Symbol	child2 -> Flatten		2566384						
ANR	2567045	Symbol	* child1		2566384						
ANR	2567046	Symbol	state		2566384						
ANR	2567047	Symbol	* child3		2566384						
ANR	2567048	Symbol	* child2		2566384						
ANR	2567049	Symbol	val		2566384						
ANR	2567050	Symbol	fChild1		2566384						
ANR	2567051	Symbol	b		2566384						
ANR	2567052	Symbol	NULL		2566384						
ANR	2567053	Symbol	fChild3		2566384						
ANR	2567054	Symbol	fChild2		2566384						
ANR	2567055	Symbol	tree		2566384						
ANR	2567056	Symbol	false		2566384						
ANR	2567057	Symbol	Value :: BOOLEAN_VALUE		2566384						
ANR	2567058	Symbol	child1 -> Copy		2566384						
ANR	2567059	Symbol	true		2566384						
ANR	2567060	Symbol	operation		2566384						
ANR	2567061	Symbol	vt		2566384						
ANR	2567062	Function	Operation :: IsStrictOperator	1764:0:44501:44741							
ANR	2567063	FunctionDef	Operation :: IsStrictOperator (OpKind op)		2567062	0					
ANR	2567064	CompoundStatement		1766:0:44549:44741	2567062	0					
ANR	2567065	SwitchStatement	switch ( op )		2567062	0					
ANR	2567066	Condition	op	1767:9:44560:44561	2567062	0	True				
ANR	2567067	Identifier	op		2567062	0					
ANR	2567068	CompoundStatement		2:14:15:15	2567062	1					
ANR	2567069	Label	case META_EQUAL_OP :	1768:2:44569:44587	2567062	0	True				
ANR	2567070	Identifier	META_EQUAL_OP		2567062	0					
ANR	2567071	Label	case META_NOT_EQUAL_OP :	1769:2:44591:44613	2567062	1	True				
ANR	2567072	Identifier	META_NOT_EQUAL_OP		2567062	0					
ANR	2567073	Label	case LOGICAL_AND_OP :	1770:2:44617:44636	2567062	2	True				
ANR	2567074	Identifier	LOGICAL_AND_OP		2567062	0					
ANR	2567075	Label	case LOGICAL_OR_OP :	1771:2:44640:44658	2567062	3	True				
ANR	2567076	Identifier	LOGICAL_OR_OP		2567062	0					
ANR	2567077	Label	case TERNARY_OP :	1772:2:44662:44677	2567062	4	True				
ANR	2567078	Identifier	TERNARY_OP		2567062	0					
ANR	2567079	ReturnStatement	return false ;	1773:3:44682:44694	2567062	5	True				
ANR	2567080	Identifier	false		2567062	0					
ANR	2567081	Label	default :	1775:2:44699:44706	2567062	6	True				
ANR	2567082	Identifier	default		2567062	0					
ANR	2567083	ReturnStatement	return true ;	1776:3:44711:44722	2567062	7	True				
ANR	2567084	Identifier	true		2567062	0					
ANR	2567085	ReturnStatement	return true ;	1778:1:44728:44739	2567062	1	True				
ANR	2567086	Identifier	true		2567062	0					
ANR	2567087	ReturnType	bool		2567062	1					
ANR	2567088	Identifier	Operation :: IsStrictOperator		2567062	2					
ANR	2567089	ParameterList	OpKind op		2567062	3					
ANR	2567090	Parameter	OpKind op	1765:18:44536:44544	2567062	0	True				
ANR	2567091	ParameterType	OpKind		2567062	0					
ANR	2567092	Identifier	op		2567062	1					
ANR	2567093	CFGEntryNode	ENTRY		2567062		True				
ANR	2567094	CFGExitNode	EXIT		2567062		True				
ANR	2567095	Symbol	op		2567062						
ANR	2567096	Symbol	false		2567062						
ANR	2567097	Symbol	true		2567062						
ANR	2567098	Function	Operation :: PrecedenceLevel	1783:0:44801:45686							
ANR	2567099	FunctionDef	Operation :: PrecedenceLevel (OpKind op)		2567098	0					
ANR	2567100	CompoundStatement		1785:0:44846:45686	2567098	0					
ANR	2567101	SwitchStatement	switch ( op )		2567098	0					
ANR	2567102	Condition	op	1786:9:44857:44858	2567098	0	True				
ANR	2567103	Identifier	op		2567098	0					
ANR	2567104	CompoundStatement		2:14:15:15	2567098	1					
ANR	2567105	Label	case SUBSCRIPT_OP :	1787:2:44866:44883	2567098	0	True				
ANR	2567106	Identifier	SUBSCRIPT_OP		2567098	0					
ANR	2567107	ReturnStatement	return ( 12 ) ;	1788:3:44889:44901	2567098	1	True				
ANR	2567108	PrimaryExpression	12		2567098	0					
ANR	2567109	Label	case LOGICAL_NOT_OP :	1790:2:44906:44925	2567098	2	True				
ANR	2567110	Identifier	LOGICAL_NOT_OP		2567098	0					
ANR	2567111	Label	case BITWISE_NOT_OP :	1790:23:44927:44946	2567098	3	True				
ANR	2567112	Identifier	BITWISE_NOT_OP		2567098	0					
ANR	2567113	Label	case UNARY_PLUS_OP :	1790:44:44948:44966	2567098	4	True				
ANR	2567114	Identifier	UNARY_PLUS_OP		2567098	0					
ANR	2567115	Label	case UNARY_MINUS_OP :	1791:2:44971:44990	2567098	5	True				
ANR	2567116	Identifier	UNARY_MINUS_OP		2567098	0					
ANR	2567117	ReturnStatement	return ( 11 ) ;	1792:3:44996:45008	2567098	6	True				
ANR	2567118	PrimaryExpression	11		2567098	0					
ANR	2567119	Label	case MULTIPLICATION_OP :	1794:2:45013:45035	2567098	7	True				
ANR	2567120	Identifier	MULTIPLICATION_OP		2567098	0					
ANR	2567121	Label	case DIVISION_OP :	1794:26:45037:45053	2567098	8	True				
ANR	2567122	Identifier	DIVISION_OP		2567098	0					
ANR	2567123	Label	case MODULUS_OP :	1794:44:45055:45070	2567098	9	True				
ANR	2567124	Identifier	MODULUS_OP		2567098	0					
ANR	2567125	ReturnStatement	return ( 10 ) ;	1795:3:45075:45087	2567098	10	True				
ANR	2567126	PrimaryExpression	10		2567098	0					
ANR	2567127	Label	case ADDITION_OP :	1797:2:45092:45108	2567098	11	True				
ANR	2567128	Identifier	ADDITION_OP		2567098	0					
ANR	2567129	Label	case SUBTRACTION_OP :	1797:20:45110:45129	2567098	12	True				
ANR	2567130	Identifier	SUBTRACTION_OP		2567098	0					
ANR	2567131	ReturnStatement	return ( 9 ) ;	1798:3:45134:45145	2567098	13	True				
ANR	2567132	PrimaryExpression	9		2567098	0					
ANR	2567133	Label	case LEFT_SHIFT_OP :	1800:2:45150:45168	2567098	14	True				
ANR	2567134	Identifier	LEFT_SHIFT_OP		2567098	0					
ANR	2567135	Label	case RIGHT_SHIFT_OP :	1800:22:45170:45189	2567098	15	True				
ANR	2567136	Identifier	RIGHT_SHIFT_OP		2567098	0					
ANR	2567137	Label	case URIGHT_SHIFT_OP :	1800:43:45191:45211	2567098	16	True				
ANR	2567138	Identifier	URIGHT_SHIFT_OP		2567098	0					
ANR	2567139	ReturnStatement	return ( 8 ) ;	1801:3:45216:45227	2567098	17	True				
ANR	2567140	PrimaryExpression	8		2567098	0					
ANR	2567141	Label	case LESS_THAN_OP :	1803:2:45232:45249	2567098	18	True				
ANR	2567142	Identifier	LESS_THAN_OP		2567098	0					
ANR	2567143	Label	case LESS_OR_EQUAL_OP :	1803:21:45251:45272	2567098	19	True				
ANR	2567144	Identifier	LESS_OR_EQUAL_OP		2567098	0					
ANR	2567145	Label	case GREATER_OR_EQUAL_OP :	1803:44:45274:45298	2567098	20	True				
ANR	2567146	Identifier	GREATER_OR_EQUAL_OP		2567098	0					
ANR	2567147	Label	case GREATER_THAN_OP :	1804:2:45302:45322	2567098	21	True				
ANR	2567148	Identifier	GREATER_THAN_OP		2567098	0					
ANR	2567149	ReturnStatement	return ( 7 ) ;	1805:3:45327:45338	2567098	22	True				
ANR	2567150	PrimaryExpression	7		2567098	0					
ANR	2567151	Label	case NOT_EQUAL_OP :	1807:2:45343:45360	2567098	23	True				
ANR	2567152	Identifier	NOT_EQUAL_OP		2567098	0					
ANR	2567153	Label	case EQUAL_OP :	1807:21:45362:45375	2567098	24	True				
ANR	2567154	Identifier	EQUAL_OP		2567098	0					
ANR	2567155	Label	case IS_OP :	1807:36:45377:45387	2567098	25	True				
ANR	2567156	Identifier	IS_OP		2567098	0					
ANR	2567157	Label	case ISNT_OP :	1807:48:45389:45401	2567098	26	True				
ANR	2567158	Identifier	ISNT_OP		2567098	0					
ANR	2567159	ReturnStatement	return ( 6 ) ;	1808:3:45407:45418	2567098	27	True				
ANR	2567160	PrimaryExpression	6		2567098	0					
ANR	2567161	Label	case BITWISE_AND_OP :	1810:2:45423:45442	2567098	28	True				
ANR	2567162	Identifier	BITWISE_AND_OP		2567098	0					
ANR	2567163	ReturnStatement	return ( 5 ) ;	1811:3:45447:45458	2567098	29	True				
ANR	2567164	PrimaryExpression	5		2567098	0					
ANR	2567165	Label	case BITWISE_XOR_OP :	1813:2:45463:45482	2567098	30	True				
ANR	2567166	Identifier	BITWISE_XOR_OP		2567098	0					
ANR	2567167	ReturnStatement	return ( 4 ) ;	1814:3:45487:45498	2567098	31	True				
ANR	2567168	PrimaryExpression	4		2567098	0					
ANR	2567169	Label	case BITWISE_OR_OP :	1816:2:45503:45521	2567098	32	True				
ANR	2567170	Identifier	BITWISE_OR_OP		2567098	0					
ANR	2567171	ReturnStatement	return ( 3 ) ;	1817:3:45526:45537	2567098	33	True				
ANR	2567172	PrimaryExpression	3		2567098	0					
ANR	2567173	Label	case LOGICAL_AND_OP :	1819:2:45542:45561	2567098	34	True				
ANR	2567174	Identifier	LOGICAL_AND_OP		2567098	0					
ANR	2567175	ReturnStatement	return ( 2 ) ;	1820:3:45566:45577	2567098	35	True				
ANR	2567176	PrimaryExpression	2		2567098	0					
ANR	2567177	Label	case LOGICAL_OR_OP :	1822:2:45582:45600	2567098	36	True				
ANR	2567178	Identifier	LOGICAL_OR_OP		2567098	0					
ANR	2567179	ReturnStatement	return ( 1 ) ;	1823:3:45605:45616	2567098	37	True				
ANR	2567180	PrimaryExpression	1		2567098	0					
ANR	2567181	Label	case TERNARY_OP :	1825:2:45621:45636	2567098	38	True				
ANR	2567182	Identifier	TERNARY_OP		2567098	0					
ANR	2567183	ReturnStatement	return ( 0 ) ;	1826:3:45641:45652	2567098	39	True				
ANR	2567184	PrimaryExpression	0		2567098	0					
ANR	2567185	Label	default :	1828:2:45657:45664	2567098	40	True				
ANR	2567186	Identifier	default		2567098	0					
ANR	2567187	ReturnStatement	return ( - 1 ) ;	1829:3:45669:45681	2567098	41	True				
ANR	2567188	UnaryOperationExpression	- 1		2567098	0					
ANR	2567189	UnaryOperator	-		2567098	0					
ANR	2567190	PrimaryExpression	1		2567098	1					
ANR	2567191	ReturnType	int		2567098	1					
ANR	2567192	Identifier	Operation :: PrecedenceLevel		2567098	2					
ANR	2567193	ParameterList	OpKind op		2567098	3					
ANR	2567194	Parameter	OpKind op	1784:17:44834:44842	2567098	0	True				
ANR	2567195	ParameterType	OpKind		2567098	0					
ANR	2567196	Identifier	op		2567098	1					
ANR	2567197	CFGEntryNode	ENTRY		2567098		True				
ANR	2567198	CFGExitNode	EXIT		2567098		True				
ANR	2567199	Symbol	op		2567098						
