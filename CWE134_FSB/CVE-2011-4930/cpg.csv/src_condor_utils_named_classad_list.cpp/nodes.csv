command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4823649	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_named_classad_list.cpp								
ANR	4823650	Function	NamedClassAdList :: NamedClassAdList	30:0:1035:1080							
ANR	4823651	FunctionDef	NamedClassAdList :: NamedClassAdList ()		4823650	0					
ANR	4823652	CompoundStatement		31:0:1078:1080	4823650	0					
ANR	4823653	Identifier	NamedClassAdList :: NamedClassAdList		4823650	1					
ANR	4823654	ParameterList			4823650	2					
ANR	4823655	CFGEntryNode	ENTRY		4823650		True				
ANR	4823656	CFGExitNode	EXIT		4823650		True				
ANR	4823657	Function	NamedClassAdList :: ~NamedClassAdList	34:0:1083:1262							
ANR	4823658	FunctionDef	NamedClassAdList :: ~NamedClassAdList ()		4823657	0					
ANR	4823659	CompoundStatement		35:0:1127:1262	4823657	0					
ANR	4823660	IdentifierDeclStatement	list < NamedClassAd * > :: iterator iter ;	36:1:1130:1165	4823657	0	True				
ANR	4823661	IdentifierDecl	iter		4823657	0					
ANR	4823662	IdentifierDeclType	list < NamedClassAd * > :: iterator		4823657	0					
ANR	4823663	Identifier	iter		4823657	1					
ANR	4823664	ForStatement	for ( iter = m_ads . begin ( ) ; iter != m_ads . end ( ) ; iter ++ )		4823657	1					
ANR	4823665	ForInit	iter = m_ads . begin ( ) ;	37:6:1173:1193	4823657	0	True				
ANR	4823666	AssignmentExpression	iter = m_ads . begin ( )		4823657	0		=			
ANR	4823667	Identifier	iter		4823657	0					
ANR	4823668	CallExpression	m_ads . begin ( )		4823657	1					
ANR	4823669	Callee	m_ads . begin		4823657	0					
ANR	4823670	MemberAccess	m_ads . begin		4823657	0					
ANR	4823671	Identifier	m_ads		4823657	0					
ANR	4823672	Identifier	begin		4823657	1					
ANR	4823673	ArgumentList			4823657	1					
ANR	4823674	Condition	iter != m_ads . end ( )	37:28:1195:1213	4823657	1	True				
ANR	4823675	EqualityExpression	iter != m_ads . end ( )		4823657	0		!=			
ANR	4823676	Identifier	iter		4823657	0					
ANR	4823677	CallExpression	m_ads . end ( )		4823657	1					
ANR	4823678	Callee	m_ads . end		4823657	0					
ANR	4823679	MemberAccess	m_ads . end		4823657	0					
ANR	4823680	Identifier	m_ads		4823657	0					
ANR	4823681	Identifier	end		4823657	1					
ANR	4823682	ArgumentList			4823657	1					
ANR	4823683	PostIncDecOperationExpression	iter ++	37:49:1216:1221	4823657	2	True				
ANR	4823684	Identifier	iter		4823657	0					
ANR	4823685	IncDec	++		4823657	1					
ANR	4823686	CompoundStatement		3:58:97:97	4823657	3					
ANR	4823687	Statement	delete	38:2:1229:1234	4823657	0	True				
ANR	4823688	ExpressionStatement	* iter	38:9:1236:1241	4823657	1	True				
ANR	4823689	UnaryOperationExpression	* iter		4823657	0					
ANR	4823690	UnaryOperator	*		4823657	0					
ANR	4823691	Identifier	iter		4823657	1					
ANR	4823692	ExpressionStatement	m_ads . clear ( )	40:1:1247:1260	4823657	2	True				
ANR	4823693	CallExpression	m_ads . clear ( )		4823657	0					
ANR	4823694	Callee	m_ads . clear		4823657	0					
ANR	4823695	MemberAccess	m_ads . clear		4823657	0					
ANR	4823696	Identifier	m_ads		4823657	0					
ANR	4823697	Identifier	clear		4823657	1					
ANR	4823698	ArgumentList			4823657	1					
ANR	4823699	Identifier	NamedClassAdList :: ~NamedClassAdList		4823657	1					
ANR	4823700	ParameterList			4823657	2					
ANR	4823701	CFGEntryNode	ENTRY		4823657		True				
ANR	4823702	CFGExitNode	EXIT		4823657		True				
ANR	4823703	Symbol	m_ads		4823657						
ANR	4823704	Symbol	m_ads . end		4823657						
ANR	4823705	Symbol	iter		4823657						
ANR	4823706	Symbol	m_ads . begin		4823657						
ANR	4823707	Function	NamedClassAdList :: Find	43:0:1265:1533							
ANR	4823708	FunctionDef	NamedClassAdList :: Find (const char * name)		4823707	0					
ANR	4823709	CompoundStatement		45:0:1323:1533	4823707	0					
ANR	4823710	IdentifierDeclStatement	list < NamedClassAd * > :: iterator iter ;	46:1:1326:1361	4823707	0	True				
ANR	4823711	IdentifierDecl	iter		4823707	0					
ANR	4823712	IdentifierDeclType	list < NamedClassAd * > :: iterator		4823707	0					
ANR	4823713	Identifier	iter		4823707	1					
ANR	4823714	ForStatement	for ( iter = m_ads . begin ( ) ; iter != m_ads . end ( ) ; iter ++ )		4823707	1					
ANR	4823715	ForInit	iter = m_ads . begin ( ) ;	47:6:1369:1389	4823707	0	True				
ANR	4823716	AssignmentExpression	iter = m_ads . begin ( )		4823707	0		=			
ANR	4823717	Identifier	iter		4823707	0					
ANR	4823718	CallExpression	m_ads . begin ( )		4823707	1					
ANR	4823719	Callee	m_ads . begin		4823707	0					
ANR	4823720	MemberAccess	m_ads . begin		4823707	0					
ANR	4823721	Identifier	m_ads		4823707	0					
ANR	4823722	Identifier	begin		4823707	1					
ANR	4823723	ArgumentList			4823707	1					
ANR	4823724	Condition	iter != m_ads . end ( )	47:28:1391:1409	4823707	1	True				
ANR	4823725	EqualityExpression	iter != m_ads . end ( )		4823707	0		!=			
ANR	4823726	Identifier	iter		4823707	0					
ANR	4823727	CallExpression	m_ads . end ( )		4823707	1					
ANR	4823728	Callee	m_ads . end		4823707	0					
ANR	4823729	MemberAccess	m_ads . end		4823707	0					
ANR	4823730	Identifier	m_ads		4823707	0					
ANR	4823731	Identifier	end		4823707	1					
ANR	4823732	ArgumentList			4823707	1					
ANR	4823733	PostIncDecOperationExpression	iter ++	47:49:1412:1417	4823707	2	True				
ANR	4823734	Identifier	iter		4823707	0					
ANR	4823735	IncDec	++		4823707	1					
ANR	4823736	CompoundStatement		4:2:101:126	4823707	3					
ANR	4823737	IdentifierDeclStatement	NamedClassAd * nad = * iter ;	48:2:1425:1450	4823707	0	True				
ANR	4823738	IdentifierDecl	* nad = * iter		4823707	0					
ANR	4823739	IdentifierDeclType	NamedClassAd *		4823707	0					
ANR	4823740	Identifier	nad		4823707	1					
ANR	4823741	AssignmentExpression	* nad = * iter		4823707	2		=			
ANR	4823742	Identifier	nad		4823707	0					
ANR	4823743	UnaryOperationExpression	* iter		4823707	1					
ANR	4823744	UnaryOperator	*		4823707	0					
ANR	4823745	Identifier	iter		4823707	1					
ANR	4823746	IfStatement	"if ( ! strcmp ( nad -> GetName ( ) , name ) )"		4823707	1					
ANR	4823747	Condition	"! strcmp ( nad -> GetName ( ) , name )"	49:7:1459:1491	4823707	0	True				
ANR	4823748	UnaryOperationExpression	"! strcmp ( nad -> GetName ( ) , name )"		4823707	0					
ANR	4823749	UnaryOperator	!		4823707	0					
ANR	4823750	CallExpression	"strcmp ( nad -> GetName ( ) , name )"		4823707	1					
ANR	4823751	Callee	strcmp		4823707	0					
ANR	4823752	Identifier	strcmp		4823707	0					
ANR	4823753	ArgumentList	nad -> GetName ( )		4823707	1					
ANR	4823754	Argument	nad -> GetName ( )		4823707	0					
ANR	4823755	CallExpression	nad -> GetName ( )		4823707	0					
ANR	4823756	Callee	nad -> GetName		4823707	0					
ANR	4823757	PtrMemberAccess	nad -> GetName		4823707	0					
ANR	4823758	Identifier	nad		4823707	0					
ANR	4823759	Identifier	GetName		4823707	1					
ANR	4823760	ArgumentList			4823707	1					
ANR	4823761	Argument	name		4823707	1					
ANR	4823762	Identifier	name		4823707	0					
ANR	4823763	CompoundStatement		5:43:171:171	4823707	1					
ANR	4823764	ReturnStatement	return nad ;	50:3:1500:1510	4823707	0	True				
ANR	4823765	Identifier	nad		4823707	0					
ANR	4823766	ReturnStatement	return NULL ;	53:1:1520:1531	4823707	2	True				
ANR	4823767	Identifier	NULL		4823707	0					
ANR	4823768	ReturnType	NamedClassAd *		4823707	1					
ANR	4823769	Identifier	NamedClassAdList :: Find		4823707	2					
ANR	4823770	ParameterList	const char * name		4823707	3					
ANR	4823771	Parameter	const char * name	44:24:1304:1319	4823707	0	True				
ANR	4823772	ParameterType	const char *		4823707	0					
ANR	4823773	Identifier	name		4823707	1					
ANR	4823774	CFGEntryNode	ENTRY		4823707		True				
ANR	4823775	CFGExitNode	EXIT		4823707		True				
ANR	4823776	Symbol	nad		4823707						
ANR	4823777	Symbol	strcmp		4823707						
ANR	4823778	Symbol	* iter		4823707						
ANR	4823779	Symbol	m_ads		4823707						
ANR	4823780	Symbol	m_ads . end		4823707						
ANR	4823781	Symbol	NULL		4823707						
ANR	4823782	Symbol	name		4823707						
ANR	4823783	Symbol	nad -> GetName		4823707						
ANR	4823784	Symbol	iter		4823707						
ANR	4823785	Symbol	m_ads . begin		4823707						
ANR	4823786	Symbol	* nad		4823707						
ANR	4823787	Function	NamedClassAdList :: Register	56:0:1536:1847							
ANR	4823788	FunctionDef	NamedClassAdList :: Register (const char * name)		4823787	0					
ANR	4823789	CompoundStatement		58:0:1588:1847	4823787	0					
ANR	4823790	IfStatement	if ( Find ( name ) != NULL )		4823787	0					
ANR	4823791	Condition	Find ( name ) != NULL	60:6:1621:1638	4823787	0	True				
ANR	4823792	EqualityExpression	Find ( name ) != NULL		4823787	0		!=			
ANR	4823793	CallExpression	Find ( name )		4823787	0					
ANR	4823794	Callee	Find		4823787	0					
ANR	4823795	Identifier	Find		4823787	0					
ANR	4823796	ArgumentList	name		4823787	1					
ANR	4823797	Argument	name		4823787	0					
ANR	4823798	Identifier	name		4823787	0					
ANR	4823799	Identifier	NULL		4823787	1					
ANR	4823800	CompoundStatement		3:27:53:53	4823787	1					
ANR	4823801	ReturnStatement	return false ;	61:2:1646:1658	4823787	0	True				
ANR	4823802	Identifier	false		4823787	0					
ANR	4823803	ExpressionStatement	"dprintf ( D_JOB , ""Adding '%s' to the Supplimental ClassAd list\\n"" , name )"	65:1:1709:1781	4823787	1	True				
ANR	4823804	CallExpression	"dprintf ( D_JOB , ""Adding '%s' to the Supplimental ClassAd list\\n"" , name )"		4823787	0					
ANR	4823805	Callee	dprintf		4823787	0					
ANR	4823806	Identifier	dprintf		4823787	0					
ANR	4823807	ArgumentList	D_JOB		4823787	1					
ANR	4823808	Argument	D_JOB		4823787	0					
ANR	4823809	Identifier	D_JOB		4823787	0					
ANR	4823810	Argument	"""Adding '%s' to the Supplimental ClassAd list\\n"""		4823787	1					
ANR	4823811	PrimaryExpression	"""Adding '%s' to the Supplimental ClassAd list\\n"""		4823787	0					
ANR	4823812	Argument	name		4823787	2					
ANR	4823813	Identifier	name		4823787	0					
ANR	4823814	ExpressionStatement	"m_ads . push_back ( new NamedClassAd ( name , NULL ) )"	66:1:1784:1831	4823787	2	True				
ANR	4823815	CallExpression	"m_ads . push_back ( new NamedClassAd ( name , NULL ) )"		4823787	0					
ANR	4823816	Callee	m_ads . push_back		4823787	0					
ANR	4823817	MemberAccess	m_ads . push_back		4823787	0					
ANR	4823818	Identifier	m_ads		4823787	0					
ANR	4823819	Identifier	push_back		4823787	1					
ANR	4823820	ArgumentList	"name , NULL"		4823787	1					
ANR	4823821	Argument	"name , NULL"		4823787	0					
ANR	4823822	Expression	"name , NULL"		4823787	0					
ANR	4823823	Identifier	name		4823787	0					
ANR	4823824	Identifier	NULL		4823787	1					
ANR	4823825	ReturnStatement	return true ;	67:1:1834:1845	4823787	3	True				
ANR	4823826	Identifier	true		4823787	0					
ANR	4823827	ReturnType	bool		4823787	1					
ANR	4823828	Identifier	NamedClassAdList :: Register		4823787	2					
ANR	4823829	ParameterList	const char * name		4823787	3					
ANR	4823830	Parameter	const char * name	57:28:1569:1584	4823787	0	True				
ANR	4823831	ParameterType	const char *		4823787	0					
ANR	4823832	Identifier	name		4823787	1					
ANR	4823833	CFGEntryNode	ENTRY		4823787		True				
ANR	4823834	CFGExitNode	EXIT		4823787		True				
ANR	4823835	Symbol	m_ads		4823787						
ANR	4823836	Symbol	NULL		4823787						
ANR	4823837	Symbol	name		4823787						
ANR	4823838	Symbol	Find		4823787						
ANR	4823839	Symbol	false		4823787						
ANR	4823840	Symbol	D_JOB		4823787						
ANR	4823841	Symbol	true		4823787						
ANR	4823842	Function	NamedClassAdList :: Register	70:0:1850:2122							
ANR	4823843	FunctionDef	NamedClassAdList :: Register (NamedClassAd * ad)		4823842	0					
ANR	4823844	CompoundStatement		72:0:1902:2122	4823842	0					
ANR	4823845	IfStatement	if ( Find ( * ad ) != NULL )		4823842	0					
ANR	4823846	Condition	Find ( * ad ) != NULL	73:6:1910:1926	4823842	0	True				
ANR	4823847	EqualityExpression	Find ( * ad ) != NULL		4823842	0		!=			
ANR	4823848	CallExpression	Find ( * ad )		4823842	0					
ANR	4823849	Callee	Find		4823842	0					
ANR	4823850	Identifier	Find		4823842	0					
ANR	4823851	ArgumentList	* ad		4823842	1					
ANR	4823852	Argument	* ad		4823842	0					
ANR	4823853	UnaryOperationExpression	* ad		4823842	0					
ANR	4823854	UnaryOperator	*		4823842	0					
ANR	4823855	Identifier	ad		4823842	1					
ANR	4823856	Identifier	NULL		4823842	1					
ANR	4823857	CompoundStatement		2:26:27:27	4823842	1					
ANR	4823858	ReturnStatement	return false ;	74:2:1934:1946	4823842	0	True				
ANR	4823859	Identifier	false		4823842	0					
ANR	4823860	ExpressionStatement	"dprintf ( D_JOB , ""Adding '%s' to the Supplimental ClassAd list\\n"" , ad -> GetName ( ) )"	78:1:1997:2082	4823842	1	True				
ANR	4823861	CallExpression	"dprintf ( D_JOB , ""Adding '%s' to the Supplimental ClassAd list\\n"" , ad -> GetName ( ) )"		4823842	0					
ANR	4823862	Callee	dprintf		4823842	0					
ANR	4823863	Identifier	dprintf		4823842	0					
ANR	4823864	ArgumentList	D_JOB		4823842	1					
ANR	4823865	Argument	D_JOB		4823842	0					
ANR	4823866	Identifier	D_JOB		4823842	0					
ANR	4823867	Argument	"""Adding '%s' to the Supplimental ClassAd list\\n"""		4823842	1					
ANR	4823868	PrimaryExpression	"""Adding '%s' to the Supplimental ClassAd list\\n"""		4823842	0					
ANR	4823869	Argument	ad -> GetName ( )		4823842	2					
ANR	4823870	CallExpression	ad -> GetName ( )		4823842	0					
ANR	4823871	Callee	ad -> GetName		4823842	0					
ANR	4823872	PtrMemberAccess	ad -> GetName		4823842	0					
ANR	4823873	Identifier	ad		4823842	0					
ANR	4823874	Identifier	GetName		4823842	1					
ANR	4823875	ArgumentList			4823842	1					
ANR	4823876	ExpressionStatement	m_ads . push_back ( ad )	80:1:2085:2106	4823842	2	True				
ANR	4823877	CallExpression	m_ads . push_back ( ad )		4823842	0					
ANR	4823878	Callee	m_ads . push_back		4823842	0					
ANR	4823879	MemberAccess	m_ads . push_back		4823842	0					
ANR	4823880	Identifier	m_ads		4823842	0					
ANR	4823881	Identifier	push_back		4823842	1					
ANR	4823882	ArgumentList	ad		4823842	1					
ANR	4823883	Argument	ad		4823842	0					
ANR	4823884	Identifier	ad		4823842	0					
ANR	4823885	ReturnStatement	return true ;	81:1:2109:2120	4823842	3	True				
ANR	4823886	Identifier	true		4823842	0					
ANR	4823887	ReturnType	bool		4823842	1					
ANR	4823888	Identifier	NamedClassAdList :: Register		4823842	2					
ANR	4823889	ParameterList	NamedClassAd * ad		4823842	3					
ANR	4823890	Parameter	NamedClassAd * ad	71:28:1883:1898	4823842	0	True				
ANR	4823891	ParameterType	NamedClassAd *		4823842	0					
ANR	4823892	Identifier	ad		4823842	1					
ANR	4823893	CFGEntryNode	ENTRY		4823842		True				
ANR	4823894	CFGExitNode	EXIT		4823842		True				
ANR	4823895	Symbol	ad -> GetName		4823842						
ANR	4823896	Symbol	m_ads		4823842						
ANR	4823897	Symbol	ad		4823842						
ANR	4823898	Symbol	NULL		4823842						
ANR	4823899	Symbol	Find		4823842						
ANR	4823900	Symbol	false		4823842						
ANR	4823901	Symbol	D_JOB		4823842						
ANR	4823902	Symbol	true		4823842						
ANR	4823903	Symbol	* ad		4823842						
ANR	4823904	Function	NamedClassAdList :: Replace	84:0:2125:3319							
ANR	4823905	FunctionDef	"NamedClassAdList :: Replace (const char * name , ClassAd * newAd , bool report_diff , StringList * ignore_attrs)"		4823904	0					
ANR	4823906	CompoundStatement		87:0:2245:3319	4823904	0					
ANR	4823907	IdentifierDeclStatement	NamedClassAd * named_ad = Find ( name ) ;	88:1:2248:2285	4823904	0	True				
ANR	4823908	IdentifierDecl	* named_ad = Find ( name )		4823904	0					
ANR	4823909	IdentifierDeclType	NamedClassAd *		4823904	0					
ANR	4823910	Identifier	named_ad		4823904	1					
ANR	4823911	AssignmentExpression	* named_ad = Find ( name )		4823904	2		=			
ANR	4823912	Identifier	named_ad		4823904	0					
ANR	4823913	CallExpression	Find ( name )		4823904	1					
ANR	4823914	Callee	Find		4823904	0					
ANR	4823915	Identifier	Find		4823904	0					
ANR	4823916	ArgumentList	name		4823904	1					
ANR	4823917	Argument	name		4823904	0					
ANR	4823918	Identifier	name		4823904	0					
ANR	4823919	IfStatement	if ( NULL == named_ad )		4823904	1					
ANR	4823920	Condition	NULL == named_ad	89:6:2293:2308	4823904	0	True				
ANR	4823921	EqualityExpression	NULL == named_ad		4823904	0		==			
ANR	4823922	Identifier	NULL		4823904	0					
ANR	4823923	Identifier	named_ad		4823904	1					
ANR	4823924	CompoundStatement		3:25:66:66	4823904	1					
ANR	4823925	ExpressionStatement	"named_ad = new NamedClassAd ( name , newAd )"	90:2:2316:2358	4823904	0	True				
ANR	4823926	AssignmentExpression	"named_ad = new NamedClassAd ( name , newAd )"		4823904	0		=			
ANR	4823927	Identifier	named_ad		4823904	0					
ANR	4823928	Expression	"name , newAd"		4823904	1					
ANR	4823929	Identifier	name		4823904	0					
ANR	4823930	Identifier	newAd		4823904	1					
ANR	4823931	IfStatement	if ( NULL == named_ad )		4823904	1					
ANR	4823932	Condition	NULL == named_ad	91:7:2367:2382	4823904	0	True				
ANR	4823933	EqualityExpression	NULL == named_ad		4823904	0		==			
ANR	4823934	Identifier	NULL		4823904	0					
ANR	4823935	Identifier	named_ad		4823904	1					
ANR	4823936	CompoundStatement		5:26:140:140	4823904	1					
ANR	4823937	ReturnStatement	return - 1 ;	92:3:2391:2400	4823904	0	True				
ANR	4823938	UnaryOperationExpression	- 1		4823904	0					
ANR	4823939	UnaryOperator	-		4823904	0					
ANR	4823940	PrimaryExpression	1		4823904	1					
ANR	4823941	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Adding '%s' to the 'extra' ClassAd list\\n"" , name )"	94:2:2408:2486	4823904	2	True				
ANR	4823942	CallExpression	"dprintf ( D_FULLDEBUG , ""Adding '%s' to the 'extra' ClassAd list\\n"" , name )"		4823904	0					
ANR	4823943	Callee	dprintf		4823904	0					
ANR	4823944	Identifier	dprintf		4823904	0					
ANR	4823945	ArgumentList	D_FULLDEBUG		4823904	1					
ANR	4823946	Argument	D_FULLDEBUG		4823904	0					
ANR	4823947	Identifier	D_FULLDEBUG		4823904	0					
ANR	4823948	Argument	"""Adding '%s' to the 'extra' ClassAd list\\n"""		4823904	1					
ANR	4823949	PrimaryExpression	"""Adding '%s' to the 'extra' ClassAd list\\n"""		4823904	0					
ANR	4823950	Argument	name		4823904	2					
ANR	4823951	Identifier	name		4823904	0					
ANR	4823952	ExpressionStatement	m_ads . push_back ( named_ad )	96:2:2490:2517	4823904	3	True				
ANR	4823953	CallExpression	m_ads . push_back ( named_ad )		4823904	0					
ANR	4823954	Callee	m_ads . push_back		4823904	0					
ANR	4823955	MemberAccess	m_ads . push_back		4823904	0					
ANR	4823956	Identifier	m_ads		4823904	0					
ANR	4823957	Identifier	push_back		4823904	1					
ANR	4823958	ArgumentList	named_ad		4823904	1					
ANR	4823959	Argument	named_ad		4823904	0					
ANR	4823960	Identifier	named_ad		4823904	0					
ANR	4823961	ReturnStatement	return 0 ;	97:2:2521:2529	4823904	4	True				
ANR	4823962	PrimaryExpression	0		4823904	0					
ANR	4823963	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Replacing ClassAd for '%s'\\n"" , name )"	101:1:2561:2621	4823904	2	True				
ANR	4823964	CallExpression	"dprintf ( D_FULLDEBUG , ""Replacing ClassAd for '%s'\\n"" , name )"		4823904	0					
ANR	4823965	Callee	dprintf		4823904	0					
ANR	4823966	Identifier	dprintf		4823904	0					
ANR	4823967	ArgumentList	D_FULLDEBUG		4823904	1					
ANR	4823968	Argument	D_FULLDEBUG		4823904	0					
ANR	4823969	Identifier	D_FULLDEBUG		4823904	0					
ANR	4823970	Argument	"""Replacing ClassAd for '%s'\\n"""		4823904	1					
ANR	4823971	PrimaryExpression	"""Replacing ClassAd for '%s'\\n"""		4823904	0					
ANR	4823972	Argument	name		4823904	2					
ANR	4823973	Identifier	name		4823904	0					
ANR	4823974	IdentifierDeclStatement	bool found_diff = false ;	102:1:2624:2647	4823904	3	True				
ANR	4823975	IdentifierDecl	found_diff = false		4823904	0					
ANR	4823976	IdentifierDeclType	bool		4823904	0					
ANR	4823977	Identifier	found_diff		4823904	1					
ANR	4823978	AssignmentExpression	found_diff = false		4823904	2		=			
ANR	4823979	Identifier	false		4823904	0					
ANR	4823980	Identifier	false		4823904	1					
ANR	4823981	IfStatement	if ( report_diff )		4823904	4					
ANR	4823982	Condition	report_diff	103:5:2654:2664	4823904	0	True				
ANR	4823983	Identifier	report_diff		4823904	0					
ANR	4823984	CompoundStatement		26:2:740:774	4823904	1					
ANR	4823985	IdentifierDeclStatement	ClassAd * oldAd = named_ad -> GetAd ( ) ;	112:2:2986:3020	4823904	0	True				
ANR	4823986	IdentifierDecl	* oldAd = named_ad -> GetAd ( )		4823904	0					
ANR	4823987	IdentifierDeclType	ClassAd *		4823904	0					
ANR	4823988	Identifier	oldAd		4823904	1					
ANR	4823989	AssignmentExpression	* oldAd = named_ad -> GetAd ( )		4823904	2		=			
ANR	4823990	Identifier	oldAd		4823904	0					
ANR	4823991	CallExpression	named_ad -> GetAd ( )		4823904	1					
ANR	4823992	Callee	named_ad -> GetAd		4823904	0					
ANR	4823993	PtrMemberAccess	named_ad -> GetAd		4823904	0					
ANR	4823994	Identifier	named_ad		4823904	0					
ANR	4823995	Identifier	GetAd		4823904	1					
ANR	4823996	ArgumentList			4823904	1					
ANR	4823997	IfStatement	if ( ! oldAd )		4823904	1					
ANR	4823998	Condition	! oldAd	113:6:3028:3034	4823904	0	True				
ANR	4823999	UnaryOperationExpression	! oldAd		4823904	0					
ANR	4824000	UnaryOperator	!		4823904	0					
ANR	4824001	Identifier	oldAd		4823904	1					
ANR	4824002	CompoundStatement		27:16:792:792	4823904	1					
ANR	4824003	ExpressionStatement	found_diff = true	115:3:3095:3112	4823904	0	True				
ANR	4824004	AssignmentExpression	found_diff = true		4823904	0		=			
ANR	4824005	Identifier	found_diff		4823904	0					
ANR	4824006	Identifier	true		4823904	1					
ANR	4824007	ElseStatement	else		4823904	0					
ANR	4824008	CompoundStatement		30:9:877:877	4823904	0					
ANR	4824009	ExpressionStatement	"found_diff = ! ClassAdsAreSame ( newAd , oldAd , ignore_attrs )"	118:3:3182:3240	4823904	0	True				
ANR	4824010	AssignmentExpression	"found_diff = ! ClassAdsAreSame ( newAd , oldAd , ignore_attrs )"		4823904	0		=			
ANR	4824011	Identifier	found_diff		4823904	0					
ANR	4824012	UnaryOperationExpression	"! ClassAdsAreSame ( newAd , oldAd , ignore_attrs )"		4823904	1					
ANR	4824013	UnaryOperator	!		4823904	0					
ANR	4824014	CallExpression	"ClassAdsAreSame ( newAd , oldAd , ignore_attrs )"		4823904	1					
ANR	4824015	Callee	ClassAdsAreSame		4823904	0					
ANR	4824016	Identifier	ClassAdsAreSame		4823904	0					
ANR	4824017	ArgumentList	newAd		4823904	1					
ANR	4824018	Argument	newAd		4823904	0					
ANR	4824019	Identifier	newAd		4823904	0					
ANR	4824020	Argument	oldAd		4823904	1					
ANR	4824021	Identifier	oldAd		4823904	0					
ANR	4824022	Argument	ignore_attrs		4823904	2					
ANR	4824023	Identifier	ignore_attrs		4823904	0					
ANR	4824024	ExpressionStatement	named_ad -> ReplaceAd ( newAd )	121:1:3250:3278	4823904	5	True				
ANR	4824025	CallExpression	named_ad -> ReplaceAd ( newAd )		4823904	0					
ANR	4824026	Callee	named_ad -> ReplaceAd		4823904	0					
ANR	4824027	PtrMemberAccess	named_ad -> ReplaceAd		4823904	0					
ANR	4824028	Identifier	named_ad		4823904	0					
ANR	4824029	Identifier	ReplaceAd		4823904	1					
ANR	4824030	ArgumentList	newAd		4823904	1					
ANR	4824031	Argument	newAd		4823904	0					
ANR	4824032	Identifier	newAd		4823904	0					
ANR	4824033	ReturnStatement	return ( report_diff && found_diff ) ;	122:1:3281:3317	4823904	6	True				
ANR	4824034	AndExpression	report_diff && found_diff		4823904	0		&&			
ANR	4824035	Identifier	report_diff		4823904	0					
ANR	4824036	Identifier	found_diff		4823904	1					
ANR	4824037	ReturnType	int		4823904	1					
ANR	4824038	Identifier	NamedClassAdList :: Replace		4823904	2					
ANR	4824039	ParameterList	"const char * name , ClassAd * newAd , bool report_diff , StringList * ignore_attrs"		4823904	3					
ANR	4824040	Parameter	const char * name	85:27:2156:2171	4823904	0	True				
ANR	4824041	ParameterType	const char *		4823904	0					
ANR	4824042	Identifier	name		4823904	1					
ANR	4824043	Parameter	ClassAd * newAd	85:45:2174:2187	4823904	1	True				
ANR	4824044	ParameterType	ClassAd *		4823904	0					
ANR	4824045	Identifier	newAd		4823904	1					
ANR	4824046	Parameter	bool report_diff	86:9:2200:2215	4823904	2	True				
ANR	4824047	ParameterType	bool		4823904	0					
ANR	4824048	Identifier	report_diff		4823904	1					
ANR	4824049	Parameter	StringList * ignore_attrs	86:27:2218:2241	4823904	3	True				
ANR	4824050	ParameterType	StringList *		4823904	0					
ANR	4824051	Identifier	ignore_attrs		4823904	1					
ANR	4824052	CFGEntryNode	ENTRY		4823904		True				
ANR	4824053	CFGExitNode	EXIT		4823904		True				
ANR	4824054	Symbol	NULL		4823904						
ANR	4824055	Symbol	oldAd		4823904						
ANR	4824056	Symbol	false		4823904						
ANR	4824057	Symbol	* named_ad		4823904						
ANR	4824058	Symbol	D_FULLDEBUG		4823904						
ANR	4824059	Symbol	ClassAdsAreSame		4823904						
ANR	4824060	Symbol	m_ads		4823904						
ANR	4824061	Symbol	ignore_attrs		4823904						
ANR	4824062	Symbol	named_ad		4823904						
ANR	4824063	Symbol	report_diff		4823904						
ANR	4824064	Symbol	found_diff		4823904						
ANR	4824065	Symbol	name		4823904						
ANR	4824066	Symbol	Find		4823904						
ANR	4824067	Symbol	true		4823904						
ANR	4824068	Symbol	named_ad -> GetAd		4823904						
ANR	4824069	Symbol	newAd		4823904						
ANR	4824070	Function	NamedClassAdList :: Delete	125:0:3322:3638							
ANR	4824071	FunctionDef	NamedClassAdList :: Delete (const char * name)		4824070	0					
ANR	4824072	CompoundStatement		127:0:3371:3638	4824070	0					
ANR	4824073	IdentifierDeclStatement	list < NamedClassAd * > :: iterator iter ;	128:1:3374:3409	4824070	0	True				
ANR	4824074	IdentifierDecl	iter		4824070	0					
ANR	4824075	IdentifierDeclType	list < NamedClassAd * > :: iterator		4824070	0					
ANR	4824076	Identifier	iter		4824070	1					
ANR	4824077	ForStatement	for ( iter = m_ads . begin ( ) ; iter != m_ads . end ( ) ; iter ++ )		4824070	1					
ANR	4824078	ForInit	iter = m_ads . begin ( ) ;	129:6:3417:3437	4824070	0	True				
ANR	4824079	AssignmentExpression	iter = m_ads . begin ( )		4824070	0		=			
ANR	4824080	Identifier	iter		4824070	0					
ANR	4824081	CallExpression	m_ads . begin ( )		4824070	1					
ANR	4824082	Callee	m_ads . begin		4824070	0					
ANR	4824083	MemberAccess	m_ads . begin		4824070	0					
ANR	4824084	Identifier	m_ads		4824070	0					
ANR	4824085	Identifier	begin		4824070	1					
ANR	4824086	ArgumentList			4824070	1					
ANR	4824087	Condition	iter != m_ads . end ( )	129:28:3439:3457	4824070	1	True				
ANR	4824088	EqualityExpression	iter != m_ads . end ( )		4824070	0		!=			
ANR	4824089	Identifier	iter		4824070	0					
ANR	4824090	CallExpression	m_ads . end ( )		4824070	1					
ANR	4824091	Callee	m_ads . end		4824070	0					
ANR	4824092	MemberAccess	m_ads . end		4824070	0					
ANR	4824093	Identifier	m_ads		4824070	0					
ANR	4824094	Identifier	end		4824070	1					
ANR	4824095	ArgumentList			4824070	1					
ANR	4824096	PostIncDecOperationExpression	iter ++	129:49:3460:3465	4824070	2	True				
ANR	4824097	Identifier	iter		4824070	0					
ANR	4824098	IncDec	++		4824070	1					
ANR	4824099	CompoundStatement		4:2:101:125	4824070	3					
ANR	4824100	IdentifierDeclStatement	NamedClassAd * ad = * iter ;	130:2:3473:3497	4824070	0	True				
ANR	4824101	IdentifierDecl	* ad = * iter		4824070	0					
ANR	4824102	IdentifierDeclType	NamedClassAd *		4824070	0					
ANR	4824103	Identifier	ad		4824070	1					
ANR	4824104	AssignmentExpression	* ad = * iter		4824070	2		=			
ANR	4824105	Identifier	ad		4824070	0					
ANR	4824106	UnaryOperationExpression	* iter		4824070	1					
ANR	4824107	UnaryOperator	*		4824070	0					
ANR	4824108	Identifier	iter		4824070	1					
ANR	4824109	IfStatement	"if ( ! strcmp ( ad -> GetName ( ) , name ) )"		4824070	1					
ANR	4824110	Condition	"! strcmp ( ad -> GetName ( ) , name )"	131:7:3506:3537	4824070	0	True				
ANR	4824111	UnaryOperationExpression	"! strcmp ( ad -> GetName ( ) , name )"		4824070	0					
ANR	4824112	UnaryOperator	!		4824070	0					
ANR	4824113	CallExpression	"strcmp ( ad -> GetName ( ) , name )"		4824070	1					
ANR	4824114	Callee	strcmp		4824070	0					
ANR	4824115	Identifier	strcmp		4824070	0					
ANR	4824116	ArgumentList	ad -> GetName ( )		4824070	1					
ANR	4824117	Argument	ad -> GetName ( )		4824070	0					
ANR	4824118	CallExpression	ad -> GetName ( )		4824070	0					
ANR	4824119	Callee	ad -> GetName		4824070	0					
ANR	4824120	PtrMemberAccess	ad -> GetName		4824070	0					
ANR	4824121	Identifier	ad		4824070	0					
ANR	4824122	Identifier	GetName		4824070	1					
ANR	4824123	ArgumentList			4824070	1					
ANR	4824124	Argument	name		4824070	1					
ANR	4824125	Identifier	name		4824070	0					
ANR	4824126	CompoundStatement		5:42:169:169	4824070	1					
ANR	4824127	ExpressionStatement	m_ads . erase ( iter )	132:3:3546:3565	4824070	0	True				
ANR	4824128	CallExpression	m_ads . erase ( iter )		4824070	0					
ANR	4824129	Callee	m_ads . erase		4824070	0					
ANR	4824130	MemberAccess	m_ads . erase		4824070	0					
ANR	4824131	Identifier	m_ads		4824070	0					
ANR	4824132	Identifier	erase		4824070	1					
ANR	4824133	ArgumentList	iter		4824070	1					
ANR	4824134	Argument	iter		4824070	0					
ANR	4824135	Identifier	iter		4824070	0					
ANR	4824136	Statement	delete	133:3:3570:3575	4824070	1	True				
ANR	4824137	ExpressionStatement	ad	133:10:3577:3579	4824070	2	True				
ANR	4824138	Identifier	ad		4824070	0					
ANR	4824139	ReturnStatement	return 0 ;	134:3:3584:3592	4824070	3	True				
ANR	4824140	PrimaryExpression	0		4824070	0					
ANR	4824141	ReturnStatement	return 1 ;	139:1:3628:3636	4824070	2	True				
ANR	4824142	PrimaryExpression	1		4824070	0					
ANR	4824143	ReturnType	int		4824070	1					
ANR	4824144	Identifier	NamedClassAdList :: Delete		4824070	2					
ANR	4824145	ParameterList	const char * name		4824070	3					
ANR	4824146	Parameter	const char * name	126:26:3352:3367	4824070	0	True				
ANR	4824147	ParameterType	const char *		4824070	0					
ANR	4824148	Identifier	name		4824070	1					
ANR	4824149	CFGEntryNode	ENTRY		4824070		True				
ANR	4824150	CFGExitNode	EXIT		4824070		True				
ANR	4824151	Symbol	strcmp		4824070						
ANR	4824152	Symbol	* iter		4824070						
ANR	4824153	Symbol	m_ads		4824070						
ANR	4824154	Symbol	ad -> GetName		4824070						
ANR	4824155	Symbol	m_ads . end		4824070						
ANR	4824156	Symbol	ad		4824070						
ANR	4824157	Symbol	name		4824070						
ANR	4824158	Symbol	iter		4824070						
ANR	4824159	Symbol	m_ads . begin		4824070						
ANR	4824160	Symbol	* ad		4824070						
ANR	4824161	Function	NamedClassAdList :: Publish	142:0:3641:4028							
ANR	4824162	FunctionDef	NamedClassAdList :: Publish (ClassAd * merged_ad)		4824161	0					
ANR	4824163	CompoundStatement		144:0:3693:4028	4824161	0					
ANR	4824164	IdentifierDeclStatement	list < NamedClassAd * > :: iterator iter ;	145:1:3696:3731	4824161	0	True				
ANR	4824165	IdentifierDecl	iter		4824161	0					
ANR	4824166	IdentifierDeclType	list < NamedClassAd * > :: iterator		4824161	0					
ANR	4824167	Identifier	iter		4824161	1					
ANR	4824168	ForStatement	for ( iter = m_ads . begin ( ) ; iter != m_ads . end ( ) ; iter ++ )		4824161	1					
ANR	4824169	ForInit	iter = m_ads . begin ( ) ;	146:6:3739:3759	4824161	0	True				
ANR	4824170	AssignmentExpression	iter = m_ads . begin ( )		4824161	0		=			
ANR	4824171	Identifier	iter		4824161	0					
ANR	4824172	CallExpression	m_ads . begin ( )		4824161	1					
ANR	4824173	Callee	m_ads . begin		4824161	0					
ANR	4824174	MemberAccess	m_ads . begin		4824161	0					
ANR	4824175	Identifier	m_ads		4824161	0					
ANR	4824176	Identifier	begin		4824161	1					
ANR	4824177	ArgumentList			4824161	1					
ANR	4824178	Condition	iter != m_ads . end ( )	146:28:3761:3779	4824161	1	True				
ANR	4824179	EqualityExpression	iter != m_ads . end ( )		4824161	0		!=			
ANR	4824180	Identifier	iter		4824161	0					
ANR	4824181	CallExpression	m_ads . end ( )		4824161	1					
ANR	4824182	Callee	m_ads . end		4824161	0					
ANR	4824183	MemberAccess	m_ads . end		4824161	0					
ANR	4824184	Identifier	m_ads		4824161	0					
ANR	4824185	Identifier	end		4824161	1					
ANR	4824186	ArgumentList			4824161	1					
ANR	4824187	PostIncDecOperationExpression	iter ++	146:49:3782:3787	4824161	2	True				
ANR	4824188	Identifier	iter		4824161	0					
ANR	4824189	IncDec	++		4824161	1					
ANR	4824190	CompoundStatement		5:2:130:159	4824161	3					
ANR	4824191	IdentifierDeclStatement	NamedClassAd * nad = * iter ;	147:2:3795:3820	4824161	0	True				
ANR	4824192	IdentifierDecl	* nad = * iter		4824161	0					
ANR	4824193	IdentifierDeclType	NamedClassAd *		4824161	0					
ANR	4824194	Identifier	nad		4824161	1					
ANR	4824195	AssignmentExpression	* nad = * iter		4824161	2		=			
ANR	4824196	Identifier	nad		4824161	0					
ANR	4824197	UnaryOperationExpression	* iter		4824161	1					
ANR	4824198	UnaryOperator	*		4824161	0					
ANR	4824199	Identifier	iter		4824161	1					
ANR	4824200	IdentifierDeclStatement	ClassAd * ad = nad -> GetAd ( ) ;	148:2:3824:3853	4824161	1	True				
ANR	4824201	IdentifierDecl	* ad = nad -> GetAd ( )		4824161	0					
ANR	4824202	IdentifierDeclType	ClassAd *		4824161	0					
ANR	4824203	Identifier	ad		4824161	1					
ANR	4824204	AssignmentExpression	* ad = nad -> GetAd ( )		4824161	2		=			
ANR	4824205	Identifier	ad		4824161	0					
ANR	4824206	CallExpression	nad -> GetAd ( )		4824161	1					
ANR	4824207	Callee	nad -> GetAd		4824161	0					
ANR	4824208	PtrMemberAccess	nad -> GetAd		4824161	0					
ANR	4824209	Identifier	nad		4824161	0					
ANR	4824210	Identifier	GetAd		4824161	1					
ANR	4824211	ArgumentList			4824161	1					
ANR	4824212	IfStatement	if ( NULL != ad )		4824161	2					
ANR	4824213	Condition	NULL != ad	149:7:3862:3871	4824161	0	True				
ANR	4824214	EqualityExpression	NULL != ad		4824161	0		!=			
ANR	4824215	Identifier	NULL		4824161	0					
ANR	4824216	Identifier	ad		4824161	1					
ANR	4824217	CompoundStatement		6:20:181:181	4824161	1					
ANR	4824218	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Publishing ClassAd for '%s'\\n"" , nad -> GetName ( ) )"	150:3:3880:3957	4824161	0	True				
ANR	4824219	CallExpression	"dprintf ( D_FULLDEBUG , ""Publishing ClassAd for '%s'\\n"" , nad -> GetName ( ) )"		4824161	0					
ANR	4824220	Callee	dprintf		4824161	0					
ANR	4824221	Identifier	dprintf		4824161	0					
ANR	4824222	ArgumentList	D_FULLDEBUG		4824161	1					
ANR	4824223	Argument	D_FULLDEBUG		4824161	0					
ANR	4824224	Identifier	D_FULLDEBUG		4824161	0					
ANR	4824225	Argument	"""Publishing ClassAd for '%s'\\n"""		4824161	1					
ANR	4824226	PrimaryExpression	"""Publishing ClassAd for '%s'\\n"""		4824161	0					
ANR	4824227	Argument	nad -> GetName ( )		4824161	2					
ANR	4824228	CallExpression	nad -> GetName ( )		4824161	0					
ANR	4824229	Callee	nad -> GetName		4824161	0					
ANR	4824230	PtrMemberAccess	nad -> GetName		4824161	0					
ANR	4824231	Identifier	nad		4824161	0					
ANR	4824232	Identifier	GetName		4824161	1					
ANR	4824233	ArgumentList			4824161	1					
ANR	4824234	ExpressionStatement	"MergeClassAds ( merged_ad , ad , true )"	152:3:3962:3998	4824161	1	True				
ANR	4824235	CallExpression	"MergeClassAds ( merged_ad , ad , true )"		4824161	0					
ANR	4824236	Callee	MergeClassAds		4824161	0					
ANR	4824237	Identifier	MergeClassAds		4824161	0					
ANR	4824238	ArgumentList	merged_ad		4824161	1					
ANR	4824239	Argument	merged_ad		4824161	0					
ANR	4824240	Identifier	merged_ad		4824161	0					
ANR	4824241	Argument	ad		4824161	1					
ANR	4824242	Identifier	ad		4824161	0					
ANR	4824243	Argument	true		4824161	2					
ANR	4824244	Identifier	true		4824161	0					
ANR	4824245	ReturnStatement	return 0 ;	157:1:4018:4026	4824161	2	True				
ANR	4824246	PrimaryExpression	0		4824161	0					
ANR	4824247	ReturnType	int		4824161	1					
ANR	4824248	Identifier	NamedClassAdList :: Publish		4824161	2					
ANR	4824249	ParameterList	ClassAd * merged_ad		4824161	3					
ANR	4824250	Parameter	ClassAd * merged_ad	143:27:3672:3689	4824161	0	True				
ANR	4824251	ParameterType	ClassAd *		4824161	0					
ANR	4824252	Identifier	merged_ad		4824161	1					
ANR	4824253	CFGEntryNode	ENTRY		4824161		True				
ANR	4824254	CFGExitNode	EXIT		4824161		True				
ANR	4824255	Symbol	m_ads . end		4824161						
ANR	4824256	Symbol	ad		4824161						
ANR	4824257	Symbol	NULL		4824161						
ANR	4824258	Symbol	nad -> GetName		4824161						
ANR	4824259	Symbol	iter		4824161						
ANR	4824260	Symbol	m_ads . begin		4824161						
ANR	4824261	Symbol	D_FULLDEBUG		4824161						
ANR	4824262	Symbol	nad		4824161						
ANR	4824263	Symbol	* iter		4824161						
ANR	4824264	Symbol	m_ads		4824161						
ANR	4824265	Symbol	merged_ad		4824161						
ANR	4824266	Symbol	true		4824161						
ANR	4824267	Symbol	* nad		4824161						
ANR	4824268	Symbol	nad -> GetAd		4824161						
