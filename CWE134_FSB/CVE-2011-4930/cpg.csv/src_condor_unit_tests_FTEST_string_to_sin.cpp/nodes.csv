command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4296604	File	data/converged/CVE-2011-4930_htcondor/src_condor_unit_tests_FTEST_string_to_sin.cpp								
ANR	4296605	DeclStmt									
ANR	4296606	Decl							bool	bool ( void )	test_normal_case
ANR	4296607	DeclStmt									
ANR	4296608	Decl							bool	bool ( void )	test_alpha_input
ANR	4296609	Function	FTEST_string_to_sin	41:0:1340:2007							
ANR	4296610	FunctionDef	FTEST_string_to_sin ()		4296609	0					
ANR	4296611	CompoundStatement		41:31:1371:2007	4296609	0					
ANR	4296612	ExpressionStatement	"emit_function ( ""string_to_sin(const char*, struct sockaddr_in*)"" )"	43:1:1419:1483	4296609	0	True				
ANR	4296613	CallExpression	"emit_function ( ""string_to_sin(const char*, struct sockaddr_in*)"" )"		4296609	0					
ANR	4296614	Callee	emit_function		4296609	0					
ANR	4296615	Identifier	emit_function		4296609	0					
ANR	4296616	ArgumentList	"""string_to_sin(const char*, struct sockaddr_in*)"""		4296609	1					
ANR	4296617	Argument	"""string_to_sin(const char*, struct sockaddr_in*)"""		4296609	0					
ANR	4296618	PrimaryExpression	"""string_to_sin(const char*, struct sockaddr_in*)"""		4296609	0					
ANR	4296619	ExpressionStatement	"emit_comment ( ""Converts a sinful string to a sockaddr_in."" )"	44:1:1486:1544	4296609	1	True				
ANR	4296620	CallExpression	"emit_comment ( ""Converts a sinful string to a sockaddr_in."" )"		4296609	0					
ANR	4296621	Callee	emit_comment		4296609	0					
ANR	4296622	Identifier	emit_comment		4296609	0					
ANR	4296623	ArgumentList	"""Converts a sinful string to a sockaddr_in."""		4296609	1					
ANR	4296624	Argument	"""Converts a sinful string to a sockaddr_in."""		4296609	0					
ANR	4296625	PrimaryExpression	"""Converts a sinful string to a sockaddr_in."""		4296609	0					
ANR	4296626	ExpressionStatement	"emit_problem ( ""Port numbers must be passed through htons as expected, but IP addresses should not be passed through htonl."" )"	45:1:1547:1670	4296609	2	True				
ANR	4296627	CallExpression	"emit_problem ( ""Port numbers must be passed through htons as expected, but IP addresses should not be passed through htonl."" )"		4296609	0					
ANR	4296628	Callee	emit_problem		4296609	0					
ANR	4296629	Identifier	emit_problem		4296609	0					
ANR	4296630	ArgumentList	"""Port numbers must be passed through htons as expected, but IP addresses should not be passed through htonl."""		4296609	1					
ANR	4296631	Argument	"""Port numbers must be passed through htons as expected, but IP addresses should not be passed through htonl."""		4296609	0					
ANR	4296632	PrimaryExpression	"""Port numbers must be passed through htons as expected, but IP addresses should not be passed through htonl."""		4296609	0					
ANR	4296633	ExpressionStatement	"emit_problem ( ""Function assumes a well-formatted string if it sees a : anywhere."" )"	46:1:1673:1754	4296609	3	True				
ANR	4296634	CallExpression	"emit_problem ( ""Function assumes a well-formatted string if it sees a : anywhere."" )"		4296609	0					
ANR	4296635	Callee	emit_problem		4296609	0					
ANR	4296636	Identifier	emit_problem		4296609	0					
ANR	4296637	ArgumentList	"""Function assumes a well-formatted string if it sees a : anywhere."""		4296609	1					
ANR	4296638	Argument	"""Function assumes a well-formatted string if it sees a : anywhere."""		4296609	0					
ANR	4296639	PrimaryExpression	"""Function assumes a well-formatted string if it sees a : anywhere."""		4296609	0					
ANR	4296640	IdentifierDeclStatement	FunctionDriver driver ;	49:1:1811:1832	4296609	4	True				
ANR	4296641	IdentifierDecl	driver		4296609	0					
ANR	4296642	IdentifierDeclType	FunctionDriver		4296609	0					
ANR	4296643	Identifier	driver		4296609	1					
ANR	4296644	ExpressionStatement	driver . register_function ( test_normal_case )	51:1:1855:1897	4296609	5	True				
ANR	4296645	CallExpression	driver . register_function ( test_normal_case )		4296609	0					
ANR	4296646	Callee	driver . register_function		4296609	0					
ANR	4296647	MemberAccess	driver . register_function		4296609	0					
ANR	4296648	Identifier	driver		4296609	0					
ANR	4296649	Identifier	register_function		4296609	1					
ANR	4296650	ArgumentList	test_normal_case		4296609	1					
ANR	4296651	Argument	test_normal_case		4296609	0					
ANR	4296652	Identifier	test_normal_case		4296609	0					
ANR	4296653	ExpressionStatement	driver . register_function ( test_alpha_input )	52:1:1900:1942	4296609	6	True				
ANR	4296654	CallExpression	driver . register_function ( test_alpha_input )		4296609	0					
ANR	4296655	Callee	driver . register_function		4296609	0					
ANR	4296656	MemberAccess	driver . register_function		4296609	0					
ANR	4296657	Identifier	driver		4296609	0					
ANR	4296658	Identifier	register_function		4296609	1					
ANR	4296659	ArgumentList	test_alpha_input		4296609	1					
ANR	4296660	Argument	test_alpha_input		4296609	0					
ANR	4296661	Identifier	test_alpha_input		4296609	0					
ANR	4296662	ReturnStatement	return driver . do_all_functions ( ) ;	56:1:1973:2005	4296609	7	True				
ANR	4296663	CallExpression	driver . do_all_functions ( )		4296609	0					
ANR	4296664	Callee	driver . do_all_functions		4296609	0					
ANR	4296665	MemberAccess	driver . do_all_functions		4296609	0					
ANR	4296666	Identifier	driver		4296609	0					
ANR	4296667	Identifier	do_all_functions		4296609	1					
ANR	4296668	ArgumentList			4296609	1					
ANR	4296669	ReturnType	bool		4296609	1					
ANR	4296670	Identifier	FTEST_string_to_sin		4296609	2					
ANR	4296671	ParameterList			4296609	3					
ANR	4296672	CFGEntryNode	ENTRY		4296609		True				
ANR	4296673	CFGExitNode	EXIT		4296609		True				
ANR	4296674	Symbol	driver . do_all_functions		4296609						
ANR	4296675	Symbol	driver		4296609						
ANR	4296676	Symbol	test_alpha_input		4296609						
ANR	4296677	Symbol	test_normal_case		4296609						
ANR	4296678	Function	test_normal_case	60:0:2030:2882							
ANR	4296679	FunctionDef	test_normal_case ()		4296678	0					
ANR	4296680	CompoundStatement		60:31:2061:2882	4296678	0					
ANR	4296681	ExpressionStatement	"emit_test ( ""Is normal input converted correctly?"" )"	61:1:2064:2113	4296678	0	True				
ANR	4296682	CallExpression	"emit_test ( ""Is normal input converted correctly?"" )"		4296678	0					
ANR	4296683	Callee	emit_test		4296678	0					
ANR	4296684	Identifier	emit_test		4296678	0					
ANR	4296685	ArgumentList	"""Is normal input converted correctly?"""		4296678	1					
ANR	4296686	Argument	"""Is normal input converted correctly?"""		4296678	0					
ANR	4296687	PrimaryExpression	"""Is normal input converted correctly?"""		4296678	0					
ANR	4296688	IdentifierDeclStatement	struct sockaddr_in sa_in ;	62:1:2116:2140	4296678	1	True				
ANR	4296689	IdentifierDecl	sa_in		4296678	0					
ANR	4296690	IdentifierDeclType	struct sockaddr_in		4296678	0					
ANR	4296691	Identifier	sa_in		4296678	1					
ANR	4296692	IdentifierDeclStatement	"char * input = strdup ( ""<192.168.0.2:80?param1=value1&param2=value2>"" ) ;"	63:1:2143:2211	4296678	2	True				
ANR	4296693	IdentifierDecl	"* input = strdup ( ""<192.168.0.2:80?param1=value1&param2=value2>"" )"		4296678	0					
ANR	4296694	IdentifierDeclType	char *		4296678	0					
ANR	4296695	Identifier	input		4296678	1					
ANR	4296696	AssignmentExpression	"* input = strdup ( ""<192.168.0.2:80?param1=value1&param2=value2>"" )"		4296678	2		=			
ANR	4296697	Identifier	input		4296678	0					
ANR	4296698	CallExpression	"strdup ( ""<192.168.0.2:80?param1=value1&param2=value2>"" )"		4296678	1					
ANR	4296699	Callee	strdup		4296678	0					
ANR	4296700	Identifier	strdup		4296678	0					
ANR	4296701	ArgumentList	"""<192.168.0.2:80?param1=value1&param2=value2>"""		4296678	1					
ANR	4296702	Argument	"""<192.168.0.2:80?param1=value1&param2=value2>"""		4296678	0					
ANR	4296703	PrimaryExpression	"""<192.168.0.2:80?param1=value1&param2=value2>"""		4296678	0					
ANR	4296704	IdentifierDeclStatement	"int result = string_to_sin ( input , & sa_in ) ;"	64:1:2214:2255	4296678	3	True				
ANR	4296705	IdentifierDecl	"result = string_to_sin ( input , & sa_in )"		4296678	0					
ANR	4296706	IdentifierDeclType	int		4296678	0					
ANR	4296707	Identifier	result		4296678	1					
ANR	4296708	AssignmentExpression	"result = string_to_sin ( input , & sa_in )"		4296678	2		=			
ANR	4296709	Identifier	result		4296678	0					
ANR	4296710	CallExpression	"string_to_sin ( input , & sa_in )"		4296678	1					
ANR	4296711	Callee	string_to_sin		4296678	0					
ANR	4296712	Identifier	string_to_sin		4296678	0					
ANR	4296713	ArgumentList	input		4296678	1					
ANR	4296714	Argument	input		4296678	0					
ANR	4296715	Identifier	input		4296678	0					
ANR	4296716	Argument	& sa_in		4296678	1					
ANR	4296717	UnaryOperationExpression	& sa_in		4296678	0					
ANR	4296718	UnaryOperator	&		4296678	0					
ANR	4296719	Identifier	sa_in		4296678	1					
ANR	4296720	ExpressionStatement	emit_input_header ( )	65:1:2258:2277	4296678	4	True				
ANR	4296721	CallExpression	emit_input_header ( )		4296678	0					
ANR	4296722	Callee	emit_input_header		4296678	0					
ANR	4296723	Identifier	emit_input_header		4296678	0					
ANR	4296724	ArgumentList			4296678	1					
ANR	4296725	ExpressionStatement	"emit_param ( ""STRING"" , input )"	66:1:2280:2307	4296678	5	True				
ANR	4296726	CallExpression	"emit_param ( ""STRING"" , input )"		4296678	0					
ANR	4296727	Callee	emit_param		4296678	0					
ANR	4296728	Identifier	emit_param		4296678	0					
ANR	4296729	ArgumentList	"""STRING"""		4296678	1					
ANR	4296730	Argument	"""STRING"""		4296678	0					
ANR	4296731	PrimaryExpression	"""STRING"""		4296678	0					
ANR	4296732	Argument	input		4296678	1					
ANR	4296733	Identifier	input		4296678	0					
ANR	4296734	ExpressionStatement	free ( input )	67:1:2310:2321	4296678	6	True				
ANR	4296735	CallExpression	free ( input )		4296678	0					
ANR	4296736	Callee	free		4296678	0					
ANR	4296737	Identifier	free		4296678	0					
ANR	4296738	ArgumentList	input		4296678	1					
ANR	4296739	Argument	input		4296678	0					
ANR	4296740	Identifier	input		4296678	0					
ANR	4296741	ExpressionStatement	emit_output_expected_header ( )	68:1:2324:2353	4296678	7	True				
ANR	4296742	CallExpression	emit_output_expected_header ( )		4296678	0					
ANR	4296743	Callee	emit_output_expected_header		4296678	0					
ANR	4296744	Identifier	emit_output_expected_header		4296678	0					
ANR	4296745	ArgumentList			4296678	1					
ANR	4296746	ExpressionStatement	"emit_retval ( ""%s"" , tfstr ( TRUE ) )"	69:1:2356:2386	4296678	8	True				
ANR	4296747	CallExpression	"emit_retval ( ""%s"" , tfstr ( TRUE ) )"		4296678	0					
ANR	4296748	Callee	emit_retval		4296678	0					
ANR	4296749	Identifier	emit_retval		4296678	0					
ANR	4296750	ArgumentList	"""%s"""		4296678	1					
ANR	4296751	Argument	"""%s"""		4296678	0					
ANR	4296752	PrimaryExpression	"""%s"""		4296678	0					
ANR	4296753	Argument	tfstr ( TRUE )		4296678	1					
ANR	4296754	CallExpression	tfstr ( TRUE )		4296678	0					
ANR	4296755	Callee	tfstr		4296678	0					
ANR	4296756	Identifier	tfstr		4296678	0					
ANR	4296757	ArgumentList	TRUE		4296678	1					
ANR	4296758	Argument	TRUE		4296678	0					
ANR	4296759	Identifier	TRUE		4296678	0					
ANR	4296760	ExpressionStatement	"emit_param ( ""sockaddr_in.in_addr"" , ""192.168.0.2"" )"	70:1:2389:2437	4296678	9	True				
ANR	4296761	CallExpression	"emit_param ( ""sockaddr_in.in_addr"" , ""192.168.0.2"" )"		4296678	0					
ANR	4296762	Callee	emit_param		4296678	0					
ANR	4296763	Identifier	emit_param		4296678	0					
ANR	4296764	ArgumentList	"""sockaddr_in.in_addr"""		4296678	1					
ANR	4296765	Argument	"""sockaddr_in.in_addr"""		4296678	0					
ANR	4296766	PrimaryExpression	"""sockaddr_in.in_addr"""		4296678	0					
ANR	4296767	Argument	"""192.168.0.2"""		4296678	1					
ANR	4296768	PrimaryExpression	"""192.168.0.2"""		4296678	0					
ANR	4296769	ExpressionStatement	"emit_param ( ""sockaddr_in.port"" , ""80"" )"	71:1:2440:2476	4296678	10	True				
ANR	4296770	CallExpression	"emit_param ( ""sockaddr_in.port"" , ""80"" )"		4296678	0					
ANR	4296771	Callee	emit_param		4296678	0					
ANR	4296772	Identifier	emit_param		4296678	0					
ANR	4296773	ArgumentList	"""sockaddr_in.port"""		4296678	1					
ANR	4296774	Argument	"""sockaddr_in.port"""		4296678	0					
ANR	4296775	PrimaryExpression	"""sockaddr_in.port"""		4296678	0					
ANR	4296776	Argument	"""80"""		4296678	1					
ANR	4296777	PrimaryExpression	"""80"""		4296678	0					
ANR	4296778	ExpressionStatement	emit_output_actual_header ( )	72:1:2479:2506	4296678	11	True				
ANR	4296779	CallExpression	emit_output_actual_header ( )		4296678	0					
ANR	4296780	Callee	emit_output_actual_header		4296678	0					
ANR	4296781	Identifier	emit_output_actual_header		4296678	0					
ANR	4296782	ArgumentList			4296678	1					
ANR	4296783	ExpressionStatement	"emit_retval ( ""%s"" , tfstr ( result ) )"	73:1:2509:2541	4296678	12	True				
ANR	4296784	CallExpression	"emit_retval ( ""%s"" , tfstr ( result ) )"		4296678	0					
ANR	4296785	Callee	emit_retval		4296678	0					
ANR	4296786	Identifier	emit_retval		4296678	0					
ANR	4296787	ArgumentList	"""%s"""		4296678	1					
ANR	4296788	Argument	"""%s"""		4296678	0					
ANR	4296789	PrimaryExpression	"""%s"""		4296678	0					
ANR	4296790	Argument	tfstr ( result )		4296678	1					
ANR	4296791	CallExpression	tfstr ( result )		4296678	0					
ANR	4296792	Callee	tfstr		4296678	0					
ANR	4296793	Identifier	tfstr		4296678	0					
ANR	4296794	ArgumentList	result		4296678	1					
ANR	4296795	Argument	result		4296678	0					
ANR	4296796	Identifier	result		4296678	0					
ANR	4296797	IdentifierDeclStatement	unsigned char * byte = ( unsigned char * ) & sa_in . sin_addr ;	74:1:2544:2598	4296678	13	True				
ANR	4296798	IdentifierDecl	* byte = ( unsigned char * ) & sa_in . sin_addr		4296678	0					
ANR	4296799	IdentifierDeclType	unsigned char *		4296678	0					
ANR	4296800	Identifier	byte		4296678	1					
ANR	4296801	AssignmentExpression	* byte = ( unsigned char * ) & sa_in . sin_addr		4296678	2		=			
ANR	4296802	Identifier	byte		4296678	0					
ANR	4296803	CastExpression	( unsigned char * ) & sa_in . sin_addr		4296678	1					
ANR	4296804	CastTarget	unsigned char *		4296678	0					
ANR	4296805	UnaryOperationExpression	& sa_in . sin_addr		4296678	1					
ANR	4296806	UnaryOperator	&		4296678	0					
ANR	4296807	MemberAccess	sa_in . sin_addr		4296678	1					
ANR	4296808	Identifier	sa_in		4296678	0					
ANR	4296809	Identifier	sin_addr		4296678	1					
ANR	4296810	IdentifierDeclStatement	int port = ntohs ( sa_in . sin_port ) ;	75:1:2601:2633	4296678	14	True				
ANR	4296811	IdentifierDecl	port = ntohs ( sa_in . sin_port )		4296678	0					
ANR	4296812	IdentifierDeclType	int		4296678	0					
ANR	4296813	Identifier	port		4296678	1					
ANR	4296814	AssignmentExpression	port = ntohs ( sa_in . sin_port )		4296678	2		=			
ANR	4296815	Identifier	port		4296678	0					
ANR	4296816	CallExpression	ntohs ( sa_in . sin_port )		4296678	1					
ANR	4296817	Callee	ntohs		4296678	0					
ANR	4296818	Identifier	ntohs		4296678	0					
ANR	4296819	ArgumentList	sa_in . sin_port		4296678	1					
ANR	4296820	Argument	sa_in . sin_port		4296678	0					
ANR	4296821	MemberAccess	sa_in . sin_port		4296678	0					
ANR	4296822	Identifier	sa_in		4296678	0					
ANR	4296823	Identifier	sin_port		4296678	1					
ANR	4296824	ExpressionStatement	"emit_param ( ""sockaddr_in.in_addr"" , ""%d.%d.%d.%d"" , * byte , * ( byte + 1 ) , * ( byte + 2 ) , * ( byte + 3 ) )"	76:1:2636:2724	4296678	15	True				
ANR	4296825	CallExpression	"emit_param ( ""sockaddr_in.in_addr"" , ""%d.%d.%d.%d"" , * byte , * ( byte + 1 ) , * ( byte + 2 ) , * ( byte + 3 ) )"		4296678	0					
ANR	4296826	Callee	emit_param		4296678	0					
ANR	4296827	Identifier	emit_param		4296678	0					
ANR	4296828	ArgumentList	"""sockaddr_in.in_addr"""		4296678	1					
ANR	4296829	Argument	"""sockaddr_in.in_addr"""		4296678	0					
ANR	4296830	PrimaryExpression	"""sockaddr_in.in_addr"""		4296678	0					
ANR	4296831	Argument	"""%d.%d.%d.%d"""		4296678	1					
ANR	4296832	PrimaryExpression	"""%d.%d.%d.%d"""		4296678	0					
ANR	4296833	Argument	* byte		4296678	2					
ANR	4296834	UnaryOperationExpression	* byte		4296678	0					
ANR	4296835	UnaryOperator	*		4296678	0					
ANR	4296836	Identifier	byte		4296678	1					
ANR	4296837	Argument	* ( byte + 1 )		4296678	3					
ANR	4296838	UnaryOperationExpression	* ( byte + 1 )		4296678	0					
ANR	4296839	UnaryOperator	*		4296678	0					
ANR	4296840	AdditiveExpression	byte + 1		4296678	1		+			
ANR	4296841	Identifier	byte		4296678	0					
ANR	4296842	PrimaryExpression	1		4296678	1					
ANR	4296843	Argument	* ( byte + 2 )		4296678	4					
ANR	4296844	UnaryOperationExpression	* ( byte + 2 )		4296678	0					
ANR	4296845	UnaryOperator	*		4296678	0					
ANR	4296846	AdditiveExpression	byte + 2		4296678	1		+			
ANR	4296847	Identifier	byte		4296678	0					
ANR	4296848	PrimaryExpression	2		4296678	1					
ANR	4296849	Argument	* ( byte + 3 )		4296678	5					
ANR	4296850	UnaryOperationExpression	* ( byte + 3 )		4296678	0					
ANR	4296851	UnaryOperator	*		4296678	0					
ANR	4296852	AdditiveExpression	byte + 3		4296678	1		+			
ANR	4296853	Identifier	byte		4296678	0					
ANR	4296854	PrimaryExpression	3		4296678	1					
ANR	4296855	ExpressionStatement	"emit_param ( ""sockaddr_in.port"" , ""%d"" , port )"	77:1:2727:2769	4296678	16	True				
ANR	4296856	CallExpression	"emit_param ( ""sockaddr_in.port"" , ""%d"" , port )"		4296678	0					
ANR	4296857	Callee	emit_param		4296678	0					
ANR	4296858	Identifier	emit_param		4296678	0					
ANR	4296859	ArgumentList	"""sockaddr_in.port"""		4296678	1					
ANR	4296860	Argument	"""sockaddr_in.port"""		4296678	0					
ANR	4296861	PrimaryExpression	"""sockaddr_in.port"""		4296678	0					
ANR	4296862	Argument	"""%d"""		4296678	1					
ANR	4296863	PrimaryExpression	"""%d"""		4296678	0					
ANR	4296864	Argument	port		4296678	2					
ANR	4296865	Identifier	port		4296678	0					
ANR	4296866	IfStatement	"if ( result != 1 || port != 80 || ! utest_sock_eq_octet ( & ( sa_in . sin_addr ) , 192 , 168 , 0 , 2 ) )"		4296678	17					
ANR	4296867	Condition	"result != 1 || port != 80 || ! utest_sock_eq_octet ( & ( sa_in . sin_addr ) , 192 , 168 , 0 , 2 )"	78:4:2775:2858	4296678	0	True				
ANR	4296868	OrExpression	"result != 1 || port != 80 || ! utest_sock_eq_octet ( & ( sa_in . sin_addr ) , 192 , 168 , 0 , 2 )"		4296678	0		||			
ANR	4296869	EqualityExpression	result != 1		4296678	0		!=			
ANR	4296870	Identifier	result		4296678	0					
ANR	4296871	PrimaryExpression	1		4296678	1					
ANR	4296872	OrExpression	"port != 80 || ! utest_sock_eq_octet ( & ( sa_in . sin_addr ) , 192 , 168 , 0 , 2 )"		4296678	1		||			
ANR	4296873	EqualityExpression	port != 80		4296678	0		!=			
ANR	4296874	Identifier	port		4296678	0					
ANR	4296875	PrimaryExpression	80		4296678	1					
ANR	4296876	UnaryOperationExpression	"! utest_sock_eq_octet ( & ( sa_in . sin_addr ) , 192 , 168 , 0 , 2 )"		4296678	1					
ANR	4296877	UnaryOperator	!		4296678	0					
ANR	4296878	CallExpression	"utest_sock_eq_octet ( & ( sa_in . sin_addr ) , 192 , 168 , 0 , 2 )"		4296678	1					
ANR	4296879	Callee	utest_sock_eq_octet		4296678	0					
ANR	4296880	Identifier	utest_sock_eq_octet		4296678	0					
ANR	4296881	ArgumentList	& ( sa_in . sin_addr )		4296678	1					
ANR	4296882	Argument	& ( sa_in . sin_addr )		4296678	0					
ANR	4296883	UnaryOperationExpression	& ( sa_in . sin_addr )		4296678	0					
ANR	4296884	UnaryOperator	&		4296678	0					
ANR	4296885	MemberAccess	sa_in . sin_addr		4296678	1					
ANR	4296886	Identifier	sa_in		4296678	0					
ANR	4296887	Identifier	sin_addr		4296678	1					
ANR	4296888	Argument	192		4296678	1					
ANR	4296889	PrimaryExpression	192		4296678	0					
ANR	4296890	Argument	168		4296678	2					
ANR	4296891	PrimaryExpression	168		4296678	0					
ANR	4296892	Argument	0		4296678	3					
ANR	4296893	PrimaryExpression	0		4296678	0					
ANR	4296894	Argument	2		4296678	4					
ANR	4296895	PrimaryExpression	2		4296678	0					
ANR	4296896	CompoundStatement		19:91:800:800	4296678	1					
ANR	4296897	ExpressionStatement	FAIL	79:2:2866:2870	4296678	0	True				
ANR	4296898	Identifier	FAIL		4296678	0					
ANR	4296899	ExpressionStatement	PASS	81:1:2876:2880	4296678	18	True				
ANR	4296900	Identifier	PASS		4296678	0					
ANR	4296901	ReturnType	static bool		4296678	1					
ANR	4296902	Identifier	test_normal_case		4296678	2					
ANR	4296903	ParameterList			4296678	3					
ANR	4296904	CFGEntryNode	ENTRY		4296678		True				
ANR	4296905	CFGExitNode	EXIT		4296678		True				
ANR	4296906	Symbol	* byte		4296678						
ANR	4296907	Symbol	byte		4296678						
ANR	4296908	Symbol	TRUE		4296678						
ANR	4296909	Symbol	* ( byte + 3 )		4296678						
ANR	4296910	Symbol	* ( byte + 2 )		4296678						
ANR	4296911	Symbol	* ( byte + 1 )		4296678						
ANR	4296912	Symbol	tfstr		4296678						
ANR	4296913	Symbol	result		4296678						
ANR	4296914	Symbol	ntohs		4296678						
ANR	4296915	Symbol	input		4296678						
ANR	4296916	Symbol	sa_in		4296678						
ANR	4296917	Symbol	& sa_in		4296678						
ANR	4296918	Symbol	port		4296678						
ANR	4296919	Symbol	utest_sock_eq_octet		4296678						
ANR	4296920	Symbol	& sa_in . sin_addr		4296678						
ANR	4296921	Symbol	strdup		4296678						
ANR	4296922	Symbol	sa_in . sin_port		4296678						
ANR	4296923	Symbol	string_to_sin		4296678						
ANR	4296924	Function	test_alpha_input	84:0:2885:3314							
ANR	4296925	FunctionDef	test_alpha_input ()		4296924	0					
ANR	4296926	CompoundStatement		84:31:2916:3314	4296924	0					
ANR	4296927	ExpressionStatement	"emit_test ( ""Does an error occur on alpha-only input?"" )"	85:1:2919:2972	4296924	0	True				
ANR	4296928	CallExpression	"emit_test ( ""Does an error occur on alpha-only input?"" )"		4296924	0					
ANR	4296929	Callee	emit_test		4296924	0					
ANR	4296930	Identifier	emit_test		4296924	0					
ANR	4296931	ArgumentList	"""Does an error occur on alpha-only input?"""		4296924	1					
ANR	4296932	Argument	"""Does an error occur on alpha-only input?"""		4296924	0					
ANR	4296933	PrimaryExpression	"""Does an error occur on alpha-only input?"""		4296924	0					
ANR	4296934	IdentifierDeclStatement	struct sockaddr_in sa_in ;	86:1:2975:2999	4296924	1	True				
ANR	4296935	IdentifierDecl	sa_in		4296924	0					
ANR	4296936	IdentifierDeclType	struct sockaddr_in		4296924	0					
ANR	4296937	Identifier	sa_in		4296924	1					
ANR	4296938	IdentifierDeclStatement	"char * input = strdup ( ""Iamafish"" ) ;"	87:1:3002:3034	4296924	2	True				
ANR	4296939	IdentifierDecl	"* input = strdup ( ""Iamafish"" )"		4296924	0					
ANR	4296940	IdentifierDeclType	char *		4296924	0					
ANR	4296941	Identifier	input		4296924	1					
ANR	4296942	AssignmentExpression	"* input = strdup ( ""Iamafish"" )"		4296924	2		=			
ANR	4296943	Identifier	input		4296924	0					
ANR	4296944	CallExpression	"strdup ( ""Iamafish"" )"		4296924	1					
ANR	4296945	Callee	strdup		4296924	0					
ANR	4296946	Identifier	strdup		4296924	0					
ANR	4296947	ArgumentList	"""Iamafish"""		4296924	1					
ANR	4296948	Argument	"""Iamafish"""		4296924	0					
ANR	4296949	PrimaryExpression	"""Iamafish"""		4296924	0					
ANR	4296950	IdentifierDeclStatement	"int result = string_to_sin ( input , & sa_in ) ;"	88:1:3037:3078	4296924	3	True				
ANR	4296951	IdentifierDecl	"result = string_to_sin ( input , & sa_in )"		4296924	0					
ANR	4296952	IdentifierDeclType	int		4296924	0					
ANR	4296953	Identifier	result		4296924	1					
ANR	4296954	AssignmentExpression	"result = string_to_sin ( input , & sa_in )"		4296924	2		=			
ANR	4296955	Identifier	result		4296924	0					
ANR	4296956	CallExpression	"string_to_sin ( input , & sa_in )"		4296924	1					
ANR	4296957	Callee	string_to_sin		4296924	0					
ANR	4296958	Identifier	string_to_sin		4296924	0					
ANR	4296959	ArgumentList	input		4296924	1					
ANR	4296960	Argument	input		4296924	0					
ANR	4296961	Identifier	input		4296924	0					
ANR	4296962	Argument	& sa_in		4296924	1					
ANR	4296963	UnaryOperationExpression	& sa_in		4296924	0					
ANR	4296964	UnaryOperator	&		4296924	0					
ANR	4296965	Identifier	sa_in		4296924	1					
ANR	4296966	ExpressionStatement	emit_input_header ( )	89:1:3081:3100	4296924	4	True				
ANR	4296967	CallExpression	emit_input_header ( )		4296924	0					
ANR	4296968	Callee	emit_input_header		4296924	0					
ANR	4296969	Identifier	emit_input_header		4296924	0					
ANR	4296970	ArgumentList			4296924	1					
ANR	4296971	ExpressionStatement	"emit_param ( ""STRING"" , input )"	90:1:3103:3130	4296924	5	True				
ANR	4296972	CallExpression	"emit_param ( ""STRING"" , input )"		4296924	0					
ANR	4296973	Callee	emit_param		4296924	0					
ANR	4296974	Identifier	emit_param		4296924	0					
ANR	4296975	ArgumentList	"""STRING"""		4296924	1					
ANR	4296976	Argument	"""STRING"""		4296924	0					
ANR	4296977	PrimaryExpression	"""STRING"""		4296924	0					
ANR	4296978	Argument	input		4296924	1					
ANR	4296979	Identifier	input		4296924	0					
ANR	4296980	ExpressionStatement	free ( input )	91:1:3133:3144	4296924	6	True				
ANR	4296981	CallExpression	free ( input )		4296924	0					
ANR	4296982	Callee	free		4296924	0					
ANR	4296983	Identifier	free		4296924	0					
ANR	4296984	ArgumentList	input		4296924	1					
ANR	4296985	Argument	input		4296924	0					
ANR	4296986	Identifier	input		4296924	0					
ANR	4296987	ExpressionStatement	emit_output_expected_header ( )	92:1:3147:3176	4296924	7	True				
ANR	4296988	CallExpression	emit_output_expected_header ( )		4296924	0					
ANR	4296989	Callee	emit_output_expected_header		4296924	0					
ANR	4296990	Identifier	emit_output_expected_header		4296924	0					
ANR	4296991	ArgumentList			4296924	1					
ANR	4296992	ExpressionStatement	"emit_retval ( ""%s"" , tfstr ( FALSE ) )"	93:1:3179:3210	4296924	8	True				
ANR	4296993	CallExpression	"emit_retval ( ""%s"" , tfstr ( FALSE ) )"		4296924	0					
ANR	4296994	Callee	emit_retval		4296924	0					
ANR	4296995	Identifier	emit_retval		4296924	0					
ANR	4296996	ArgumentList	"""%s"""		4296924	1					
ANR	4296997	Argument	"""%s"""		4296924	0					
ANR	4296998	PrimaryExpression	"""%s"""		4296924	0					
ANR	4296999	Argument	tfstr ( FALSE )		4296924	1					
ANR	4297000	CallExpression	tfstr ( FALSE )		4296924	0					
ANR	4297001	Callee	tfstr		4296924	0					
ANR	4297002	Identifier	tfstr		4296924	0					
ANR	4297003	ArgumentList	FALSE		4296924	1					
ANR	4297004	Argument	FALSE		4296924	0					
ANR	4297005	Identifier	FALSE		4296924	0					
ANR	4297006	ExpressionStatement	emit_output_actual_header ( )	94:1:3213:3240	4296924	9	True				
ANR	4297007	CallExpression	emit_output_actual_header ( )		4296924	0					
ANR	4297008	Callee	emit_output_actual_header		4296924	0					
ANR	4297009	Identifier	emit_output_actual_header		4296924	0					
ANR	4297010	ArgumentList			4296924	1					
ANR	4297011	ExpressionStatement	"emit_retval ( ""%s"" , tfstr ( result ) )"	95:1:3243:3275	4296924	10	True				
ANR	4297012	CallExpression	"emit_retval ( ""%s"" , tfstr ( result ) )"		4296924	0					
ANR	4297013	Callee	emit_retval		4296924	0					
ANR	4297014	Identifier	emit_retval		4296924	0					
ANR	4297015	ArgumentList	"""%s"""		4296924	1					
ANR	4297016	Argument	"""%s"""		4296924	0					
ANR	4297017	PrimaryExpression	"""%s"""		4296924	0					
ANR	4297018	Argument	tfstr ( result )		4296924	1					
ANR	4297019	CallExpression	tfstr ( result )		4296924	0					
ANR	4297020	Callee	tfstr		4296924	0					
ANR	4297021	Identifier	tfstr		4296924	0					
ANR	4297022	ArgumentList	result		4296924	1					
ANR	4297023	Argument	result		4296924	0					
ANR	4297024	Identifier	result		4296924	0					
ANR	4297025	IfStatement	if ( result != 0 )		4296924	11					
ANR	4297026	Condition	result != 0	96:4:3281:3291	4296924	0	True				
ANR	4297027	EqualityExpression	result != 0		4296924	0		!=			
ANR	4297028	Identifier	result		4296924	0					
ANR	4297029	PrimaryExpression	0		4296924	1					
ANR	4297030	CompoundStatement		13:17:377:377	4296924	1					
ANR	4297031	ExpressionStatement	FAIL	97:2:3298:3302	4296924	0	True				
ANR	4297032	Identifier	FAIL		4296924	0					
ANR	4297033	ExpressionStatement	PASS	99:1:3308:3312	4296924	12	True				
ANR	4297034	Identifier	PASS		4296924	0					
ANR	4297035	ReturnType	static bool		4296924	1					
ANR	4297036	Identifier	test_alpha_input		4296924	2					
ANR	4297037	ParameterList			4296924	3					
ANR	4297038	CFGEntryNode	ENTRY		4296924		True				
ANR	4297039	CFGExitNode	EXIT		4296924		True				
ANR	4297040	Symbol	result		4296924						
ANR	4297041	Symbol	input		4296924						
ANR	4297042	Symbol	sa_in		4296924						
ANR	4297043	Symbol	& sa_in		4296924						
ANR	4297044	Symbol	FALSE		4296924						
ANR	4297045	Symbol	strdup		4296924						
ANR	4297046	Symbol	tfstr		4296924						
ANR	4297047	Symbol	string_to_sin		4296924						
