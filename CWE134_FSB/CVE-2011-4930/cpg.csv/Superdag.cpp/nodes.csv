command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	574327	File	data/converged/CVE-2011-4930_htcondor/Superdag.cpp								
ANR	574328	Function	Superdag :: Superdag	48:0:1514:11556							
ANR	574329	FunctionDef	Superdag :: Superdag (const Dag & g)		574328	0					
ANR	574330	CompoundStatement		49:0:1547:11556	574328	0					
ANR	574331	IdentifierDeclStatement	"int i , j , color ;"	50:1:1550:1563	574328	0	True				
ANR	574332	IdentifierDecl	i		574328	0					
ANR	574333	IdentifierDeclType	int		574328	0					
ANR	574334	Identifier	i		574328	1					
ANR	574335	IdentifierDecl	j		574328	1					
ANR	574336	IdentifierDeclType	int		574328	0					
ANR	574337	Identifier	j		574328	1					
ANR	574338	IdentifierDecl	color		574328	2					
ANR	574339	IdentifierDeclType	int		574328	0					
ANR	574340	Identifier	color		574328	1					
ANR	574341	IdentifierDeclStatement	Dag skeleton ;	53:1:1591:1603	574328	1	True				
ANR	574342	IdentifierDecl	skeleton		574328	0					
ANR	574343	IdentifierDeclType	Dag		574328	0					
ANR	574344	Identifier	skeleton		574328	1					
ANR	574345	ExpressionStatement	skeleton . initializeWith ( g )	54:1:1606:1632	574328	2	True				
ANR	574346	CallExpression	skeleton . initializeWith ( g )		574328	0					
ANR	574347	Callee	skeleton . initializeWith		574328	0					
ANR	574348	MemberAccess	skeleton . initializeWith		574328	0					
ANR	574349	Identifier	skeleton		574328	0					
ANR	574350	Identifier	initializeWith		574328	1					
ANR	574351	ArgumentList	g		574328	1					
ANR	574352	Argument	g		574328	0					
ANR	574353	Identifier	g		574328	0					
ANR	574354	ExpressionStatement	skeleton . skeletonize ( )	55:1:1635:1657	574328	3	True				
ANR	574355	CallExpression	skeleton . skeletonize ( )		574328	0					
ANR	574356	Callee	skeleton . skeletonize		574328	0					
ANR	574357	MemberAccess	skeleton . skeletonize		574328	0					
ANR	574358	Identifier	skeleton		574328	0					
ANR	574359	Identifier	skeletonize		574328	1					
ANR	574360	ArgumentList			574328	1					
ANR	574361	IdentifierDeclStatement	int * numberOfParents ;	61:1:1905:1925	574328	4	True				
ANR	574362	IdentifierDecl	* numberOfParents		574328	0					
ANR	574363	IdentifierDeclType	int *		574328	0					
ANR	574364	Identifier	numberOfParents		574328	1					
ANR	574365	ExpressionStatement	numberOfParents = skeleton . getParentCountVector ( )	62:1:1928:1977	574328	5	True				
ANR	574366	AssignmentExpression	numberOfParents = skeleton . getParentCountVector ( )		574328	0		=			
ANR	574367	Identifier	numberOfParents		574328	0					
ANR	574368	CallExpression	skeleton . getParentCountVector ( )		574328	1					
ANR	574369	Callee	skeleton . getParentCountVector		574328	0					
ANR	574370	MemberAccess	skeleton . getParentCountVector		574328	0					
ANR	574371	Identifier	skeleton		574328	0					
ANR	574372	Identifier	getParentCountVector		574328	1					
ANR	574373	ArgumentList			574328	1					
ANR	574374	IdentifierDeclStatement	Dag reversed ;	65:1:2052:2064	574328	6	True				
ANR	574375	IdentifierDecl	reversed		574328	0					
ANR	574376	IdentifierDeclType	Dag		574328	0					
ANR	574377	Identifier	reversed		574328	1					
ANR	574378	ExpressionStatement	reversed . initializeWith ( skeleton )	66:1:2067:2100	574328	7	True				
ANR	574379	CallExpression	reversed . initializeWith ( skeleton )		574328	0					
ANR	574380	Callee	reversed . initializeWith		574328	0					
ANR	574381	MemberAccess	reversed . initializeWith		574328	0					
ANR	574382	Identifier	reversed		574328	0					
ANR	574383	Identifier	initializeWith		574328	1					
ANR	574384	ArgumentList	skeleton		574328	1					
ANR	574385	Argument	skeleton		574328	0					
ANR	574386	Identifier	skeleton		574328	0					
ANR	574387	ExpressionStatement	reversed . reverseArcs ( )	67:1:2103:2125	574328	8	True				
ANR	574388	CallExpression	reversed . reverseArcs ( )		574328	0					
ANR	574389	Callee	reversed . reverseArcs		574328	0					
ANR	574390	MemberAccess	reversed . reverseArcs		574328	0					
ANR	574391	Identifier	reversed		574328	0					
ANR	574392	Identifier	reverseArcs		574328	1					
ANR	574393	ArgumentList			574328	1					
ANR	574394	IdentifierDeclStatement	int numNodes = skeleton . getNumNodes ( ) ;	70:1:2159:2196	574328	9	True				
ANR	574395	IdentifierDecl	numNodes = skeleton . getNumNodes ( )		574328	0					
ANR	574396	IdentifierDeclType	int		574328	0					
ANR	574397	Identifier	numNodes		574328	1					
ANR	574398	AssignmentExpression	numNodes = skeleton . getNumNodes ( )		574328	2		=			
ANR	574399	Identifier	numNodes		574328	0					
ANR	574400	CallExpression	skeleton . getNumNodes ( )		574328	1					
ANR	574401	Callee	skeleton . getNumNodes		574328	0					
ANR	574402	MemberAccess	skeleton . getNumNodes		574328	0					
ANR	574403	Identifier	skeleton		574328	0					
ANR	574404	Identifier	getNumNodes		574328	1					
ANR	574405	ArgumentList			574328	1					
ANR	574406	ForStatement	for ( i = 0 ; i < numNodes ; i ++ )		574328	10					
ANR	574407	ForInit	i = 0 ;	71:6:2204:2207	574328	0	True				
ANR	574408	AssignmentExpression	i = 0		574328	0		=			
ANR	574409	Identifier	i		574328	0					
ANR	574410	PrimaryExpression	0		574328	1					
ANR	574411	Condition	i < numNodes	71:11:2209:2218	574328	1	True				
ANR	574412	RelationalExpression	i < numNodes		574328	0		<			
ANR	574413	Identifier	i		574328	0					
ANR	574414	Identifier	numNodes		574328	1					
ANR	574415	PostIncDecOperationExpression	i ++	71:23:2221:2223	574328	2	True				
ANR	574416	Identifier	i		574328	0					
ANR	574417	IncDec	++		574328	1					
ANR	574418	CompoundStatement		23:29:679:679	574328	3					
ANR	574419	IfStatement	if ( 0 == skeleton . getNumArcs ( i ) && 0 == reversed . getNumArcs ( i ) )		574328	0					
ANR	574420	Condition	0 == skeleton . getNumArcs ( i ) && 0 == reversed . getNumArcs ( i )	72:6:2235:2288	574328	0	True				
ANR	574421	AndExpression	0 == skeleton . getNumArcs ( i ) && 0 == reversed . getNumArcs ( i )		574328	0		&&			
ANR	574422	EqualityExpression	0 == skeleton . getNumArcs ( i )		574328	0		==			
ANR	574423	PrimaryExpression	0		574328	0					
ANR	574424	CallExpression	skeleton . getNumArcs ( i )		574328	1					
ANR	574425	Callee	skeleton . getNumArcs		574328	0					
ANR	574426	MemberAccess	skeleton . getNumArcs		574328	0					
ANR	574427	Identifier	skeleton		574328	0					
ANR	574428	Identifier	getNumArcs		574328	1					
ANR	574429	ArgumentList	i		574328	1					
ANR	574430	Argument	i		574328	0					
ANR	574431	Identifier	i		574328	0					
ANR	574432	EqualityExpression	0 == reversed . getNumArcs ( i )		574328	1		==			
ANR	574433	PrimaryExpression	0		574328	0					
ANR	574434	CallExpression	reversed . getNumArcs ( i )		574328	1					
ANR	574435	Callee	reversed . getNumArcs		574328	0					
ANR	574436	MemberAccess	reversed . getNumArcs		574328	0					
ANR	574437	Identifier	reversed		574328	0					
ANR	574438	Identifier	getNumArcs		574328	1					
ANR	574439	ArgumentList	i		574328	1					
ANR	574440	Argument	i		574328	0					
ANR	574441	Identifier	i		574328	0					
ANR	574442	CompoundStatement		24:63:744:744	574328	1					
ANR	574443	ExpressionStatement	numberOfParents [ i ] = - 1	77:3:2440:2463	574328	0	True				
ANR	574444	AssignmentExpression	numberOfParents [ i ] = - 1		574328	0		=			
ANR	574445	ArrayIndexing	numberOfParents [ i ]		574328	0					
ANR	574446	Identifier	numberOfParents		574328	0					
ANR	574447	Identifier	i		574328	1					
ANR	574448	UnaryOperationExpression	- 1		574328	1					
ANR	574449	UnaryOperator	-		574328	0					
ANR	574450	PrimaryExpression	1		574328	1					
ANR	574451	ExpressionStatement		78:3:2468:2468	574328	1	True				
ANR	574452	ExpressionStatement		79:2:2472:2472	574328	11	True				
ANR	574453	IdentifierDeclStatement	int * sink = new int [ numNodes ] ;	86:1:2682:2711	574328	12	True				
ANR	574454	IdentifierDecl	* sink = new int [ numNodes ]		574328	0					
ANR	574455	IdentifierDeclType	int *		574328	0					
ANR	574456	Identifier	sink		574328	1					
ANR	574457	AssignmentExpression	* sink = new int [ numNodes ]		574328	2		=			
ANR	574458	Identifier	numNodes		574328	0					
ANR	574459	Identifier	numNodes		574328	1					
ANR	574460	IdentifierDeclStatement	int * colorS = new int [ numNodes ] ;	87:1:2714:2745	574328	13	True				
ANR	574461	IdentifierDecl	* colorS = new int [ numNodes ]		574328	0					
ANR	574462	IdentifierDeclType	int *		574328	0					
ANR	574463	Identifier	colorS		574328	1					
ANR	574464	AssignmentExpression	* colorS = new int [ numNodes ]		574328	2		=			
ANR	574465	Identifier	numNodes		574328	0					
ANR	574466	Identifier	numNodes		574328	1					
ANR	574467	IdentifierDeclStatement	int * ancestor = new int [ numNodes ] ;	88:1:2748:2781	574328	14	True				
ANR	574468	IdentifierDecl	* ancestor = new int [ numNodes ]		574328	0					
ANR	574469	IdentifierDeclType	int *		574328	0					
ANR	574470	Identifier	ancestor		574328	1					
ANR	574471	AssignmentExpression	* ancestor = new int [ numNodes ]		574328	2		=			
ANR	574472	Identifier	numNodes		574328	0					
ANR	574473	Identifier	numNodes		574328	1					
ANR	574474	IdentifierDeclStatement	int * colorA = new int [ numNodes ] ;	89:1:2784:2815	574328	15	True				
ANR	574475	IdentifierDecl	* colorA = new int [ numNodes ]		574328	0					
ANR	574476	IdentifierDeclType	int *		574328	0					
ANR	574477	Identifier	colorA		574328	1					
ANR	574478	AssignmentExpression	* colorA = new int [ numNodes ]		574328	2		=			
ANR	574479	Identifier	numNodes		574328	0					
ANR	574480	Identifier	numNodes		574328	1					
ANR	574481	IfStatement	if ( NULL == sink || NULL == ancestor || NULL == colorS || NULL == colorA )		574328	16					
ANR	574482	Condition	NULL == sink || NULL == ancestor || NULL == colorS || NULL == colorA	90:5:2822:2881	574328	0	True				
ANR	574483	OrExpression	NULL == sink || NULL == ancestor || NULL == colorS || NULL == colorA		574328	0		||			
ANR	574484	EqualityExpression	NULL == sink		574328	0		==			
ANR	574485	Identifier	NULL		574328	0					
ANR	574486	Identifier	sink		574328	1					
ANR	574487	OrExpression	NULL == ancestor || NULL == colorS || NULL == colorA		574328	1		||			
ANR	574488	EqualityExpression	NULL == ancestor		574328	0		==			
ANR	574489	Identifier	NULL		574328	0					
ANR	574490	Identifier	ancestor		574328	1					
ANR	574491	OrExpression	NULL == colorS || NULL == colorA		574328	1		||			
ANR	574492	EqualityExpression	NULL == colorS		574328	0		==			
ANR	574493	Identifier	NULL		574328	0					
ANR	574494	Identifier	colorS		574328	1					
ANR	574495	EqualityExpression	NULL == colorA		574328	1		==			
ANR	574496	Identifier	NULL		574328	0					
ANR	574497	Identifier	colorA		574328	1					
ANR	574498	ThrowStatement	"throw ""Superdag::Superdag, scratch memory allocation"" ;"	91:2:2887:2940	574328	1	True				
ANR	574499	PrimaryExpression	"""Superdag::Superdag, scratch memory allocation"""		574328	0					
ANR	574500	IdentifierDeclStatement	"int lastA , lastS ;"	92:1:2943:2959	574328	17	True				
ANR	574501	IdentifierDecl	lastA		574328	0					
ANR	574502	IdentifierDeclType	int		574328	0					
ANR	574503	Identifier	lastA		574328	1					
ANR	574504	IdentifierDecl	lastS		574328	1					
ANR	574505	IdentifierDeclType	int		574328	0					
ANR	574506	Identifier	lastS		574328	1					
ANR	574507	IdentifierDeclStatement	ResizableArray < int > * constituentSink ;	95:1:3027:3063	574328	18	True				
ANR	574508	IdentifierDecl	* constituentSink		574328	0					
ANR	574509	IdentifierDeclType	ResizableArray < int > *		574328	0					
ANR	574510	Identifier	constituentSink		574328	1					
ANR	574511	IdentifierDeclStatement	ResizableArray < int > * constituentAncestor ;	96:1:3066:3106	574328	19	True				
ANR	574512	IdentifierDecl	* constituentAncestor		574328	0					
ANR	574513	IdentifierDeclType	ResizableArray < int > *		574328	0					
ANR	574514	Identifier	constituentAncestor		574328	1					
ANR	574515	ExpressionStatement	constituentSink = new ResizableArray < int > [ numNodes ]	97:1:3109:3160	574328	20	True				
ANR	574516	AssignmentExpression	constituentSink = new ResizableArray < int > [ numNodes ]		574328	0		=			
ANR	574517	Identifier	constituentSink		574328	0					
ANR	574518	Identifier	numNodes		574328	1					
ANR	574519	ExpressionStatement	constituentAncestor = new ResizableArray < int > [ numNodes ]	98:1:3163:3218	574328	21	True				
ANR	574520	AssignmentExpression	constituentAncestor = new ResizableArray < int > [ numNodes ]		574328	0		=			
ANR	574521	Identifier	constituentAncestor		574328	0					
ANR	574522	Identifier	numNodes		574328	1					
ANR	574523	IfStatement	if ( NULL == constituentSink || NULL == constituentAncestor )		574328	22					
ANR	574524	Condition	NULL == constituentSink || NULL == constituentAncestor	99:5:3225:3274	574328	0	True				
ANR	574525	OrExpression	NULL == constituentSink || NULL == constituentAncestor		574328	0		||			
ANR	574526	EqualityExpression	NULL == constituentSink		574328	0		==			
ANR	574527	Identifier	NULL		574328	0					
ANR	574528	Identifier	constituentSink		574328	1					
ANR	574529	EqualityExpression	NULL == constituentAncestor		574328	1		==			
ANR	574530	Identifier	NULL		574328	0					
ANR	574531	Identifier	constituentAncestor		574328	1					
ANR	574532	ThrowStatement	"throw ""Superdag::Superdag, resizable allocation"" ;"	100:2:3280:3328	574328	1	True				
ANR	574533	PrimaryExpression	"""Superdag::Superdag, resizable allocation"""		574328	0					
ANR	574534	IdentifierDeclStatement	int * colorIncl = new int [ numNodes ] ;	103:1:3416:3450	574328	23	True				
ANR	574535	IdentifierDecl	* colorIncl = new int [ numNodes ]		574328	0					
ANR	574536	IdentifierDeclType	int *		574328	0					
ANR	574537	Identifier	colorIncl		574328	1					
ANR	574538	AssignmentExpression	* colorIncl = new int [ numNodes ]		574328	2		=			
ANR	574539	Identifier	numNodes		574328	0					
ANR	574540	Identifier	numNodes		574328	1					
ANR	574541	IdentifierDeclStatement	bool * minimalConstituent = new bool [ numNodes ] ;	104:1:3453:3498	574328	24	True				
ANR	574542	IdentifierDecl	* minimalConstituent = new bool [ numNodes ]		574328	0					
ANR	574543	IdentifierDeclType	bool *		574328	0					
ANR	574544	Identifier	minimalConstituent		574328	1					
ANR	574545	AssignmentExpression	* minimalConstituent = new bool [ numNodes ]		574328	2		=			
ANR	574546	Identifier	numNodes		574328	0					
ANR	574547	Identifier	numNodes		574328	1					
ANR	574548	IfStatement	if ( NULL == colorIncl || NULL == minimalConstituent )		574328	25					
ANR	574549	Condition	NULL == colorIncl || NULL == minimalConstituent	105:5:3505:3547	574328	0	True				
ANR	574550	OrExpression	NULL == colorIncl || NULL == minimalConstituent		574328	0		||			
ANR	574551	EqualityExpression	NULL == colorIncl		574328	0		==			
ANR	574552	Identifier	NULL		574328	0					
ANR	574553	Identifier	colorIncl		574328	1					
ANR	574554	EqualityExpression	NULL == minimalConstituent		574328	1		==			
ANR	574555	Identifier	NULL		574328	0					
ANR	574556	Identifier	minimalConstituent		574328	1					
ANR	574557	ThrowStatement	"throw ""Superdag::Superdag, inclusion allocation"" ;"	106:2:3553:3601	574328	1	True				
ANR	574558	PrimaryExpression	"""Superdag::Superdag, inclusion allocation"""		574328	0					
ANR	574559	IdentifierDeclStatement	int * constituentIDtoAnchor ;	110:1:3716:3742	574328	26	True				
ANR	574560	IdentifierDecl	* constituentIDtoAnchor		574328	0					
ANR	574561	IdentifierDeclType	int *		574328	0					
ANR	574562	Identifier	constituentIDtoAnchor		574328	1					
ANR	574563	ExpressionStatement	constituentIDtoAnchor = new int [ numNodes ]	111:1:3745:3786	574328	27	True				
ANR	574564	AssignmentExpression	constituentIDtoAnchor = new int [ numNodes ]		574328	0		=			
ANR	574565	Identifier	constituentIDtoAnchor		574328	0					
ANR	574566	Identifier	numNodes		574328	1					
ANR	574567	IfStatement	if ( NULL == constituentIDtoAnchor )		574328	28					
ANR	574568	Condition	NULL == constituentIDtoAnchor	112:5:3793:3819	574328	0	True				
ANR	574569	EqualityExpression	NULL == constituentIDtoAnchor		574328	0		==			
ANR	574570	Identifier	NULL		574328	0					
ANR	574571	Identifier	constituentIDtoAnchor		574328	1					
ANR	574572	ThrowStatement	"throw ""Superdag::Superdag, constituentIDtoAnchor allocation"" ;"	113:2:3825:3885	574328	1	True				
ANR	574573	PrimaryExpression	"""Superdag::Superdag, constituentIDtoAnchor allocation"""		574328	0					
ANR	574574	IdentifierDeclStatement	int * sinkToConstituentID ;	119:1:4151:4175	574328	29	True				
ANR	574575	IdentifierDecl	* sinkToConstituentID		574328	0					
ANR	574576	IdentifierDeclType	int *		574328	0					
ANR	574577	Identifier	sinkToConstituentID		574328	1					
ANR	574578	ExpressionStatement	sinkToConstituentID = new int [ numNodes ]	120:1:4178:4217	574328	30	True				
ANR	574579	AssignmentExpression	sinkToConstituentID = new int [ numNodes ]		574328	0		=			
ANR	574580	Identifier	sinkToConstituentID		574328	0					
ANR	574581	Identifier	numNodes		574328	1					
ANR	574582	IfStatement	if ( NULL == sinkToConstituentID )		574328	31					
ANR	574583	Condition	NULL == sinkToConstituentID	121:5:4224:4248	574328	0	True				
ANR	574584	EqualityExpression	NULL == sinkToConstituentID		574328	0		==			
ANR	574585	Identifier	NULL		574328	0					
ANR	574586	Identifier	sinkToConstituentID		574328	1					
ANR	574587	ThrowStatement	"throw ""Superdag::Superdag, sinkToConstituentID allocation"" ;"	122:2:4254:4312	574328	1	True				
ANR	574588	PrimaryExpression	"""Superdag::Superdag, sinkToConstituentID allocation"""		574328	0					
ANR	574589	ForStatement	for ( i = 0 ; i < numNodes ; i ++ )		574328	32					
ANR	574590	ForInit	i = 0 ;	123:6:4320:4323	574328	0	True				
ANR	574591	AssignmentExpression	i = 0		574328	0		=			
ANR	574592	Identifier	i		574328	0					
ANR	574593	PrimaryExpression	0		574328	1					
ANR	574594	Condition	i < numNodes	123:11:4325:4334	574328	1	True				
ANR	574595	RelationalExpression	i < numNodes		574328	0		<			
ANR	574596	Identifier	i		574328	0					
ANR	574597	Identifier	numNodes		574328	1					
ANR	574598	PostIncDecOperationExpression	i ++	123:23:4337:4339	574328	2	True				
ANR	574599	Identifier	i		574328	0					
ANR	574600	IncDec	++		574328	1					
ANR	574601	ExpressionStatement	sinkToConstituentID [ i ] = - 1	124:2:4345:4372	574328	3	True				
ANR	574602	AssignmentExpression	sinkToConstituentID [ i ] = - 1		574328	0		=			
ANR	574603	ArrayIndexing	sinkToConstituentID [ i ]		574328	0					
ANR	574604	Identifier	sinkToConstituentID		574328	0					
ANR	574605	Identifier	i		574328	1					
ANR	574606	UnaryOperationExpression	- 1		574328	1					
ANR	574607	UnaryOperator	-		574328	0					
ANR	574608	PrimaryExpression	1		574328	1					
ANR	574609	ExpressionStatement	color = 0	128:1:4413:4422	574328	33	True				
ANR	574610	AssignmentExpression	color = 0		574328	0		=			
ANR	574611	Identifier	color		574328	0					
ANR	574612	PrimaryExpression	0		574328	1					
ANR	574613	ForStatement	for ( i = 0 ; i < numNodes ; i ++ )		574328	34					
ANR	574614	ForInit	i = 0 ;	129:6:4514:4517	574328	0	True				
ANR	574615	AssignmentExpression	i = 0		574328	0		=			
ANR	574616	Identifier	i		574328	0					
ANR	574617	PrimaryExpression	0		574328	1					
ANR	574618	Condition	i < numNodes	129:11:4519:4528	574328	1	True				
ANR	574619	RelationalExpression	i < numNodes		574328	0		<			
ANR	574620	Identifier	i		574328	0					
ANR	574621	Identifier	numNodes		574328	1					
ANR	574622	PostIncDecOperationExpression	i ++	129:23:4531:4533	574328	2	True				
ANR	574623	Identifier	i		574328	0					
ANR	574624	IncDec	++		574328	1					
ANR	574625	ExpressionStatement	colorS [ i ] = colorA [ i ] = 0	130:2:4539:4564	574328	3	True				
ANR	574626	AssignmentExpression	colorS [ i ] = colorA [ i ] = 0		574328	0		=			
ANR	574627	ArrayIndexing	colorS [ i ]		574328	0					
ANR	574628	Identifier	colorS		574328	0					
ANR	574629	Identifier	i		574328	1					
ANR	574630	AssignmentExpression	colorA [ i ] = 0		574328	1		=			
ANR	574631	ArrayIndexing	colorA [ i ]		574328	0					
ANR	574632	Identifier	colorA		574328	0					
ANR	574633	Identifier	i		574328	1					
ANR	574634	PrimaryExpression	0		574328	1					
ANR	574635	IdentifierDeclStatement	float done = - 1 ;	132:1:4568:4583	574328	35	True				
ANR	574636	IdentifierDecl	done = - 1		574328	0					
ANR	574637	IdentifierDeclType	float		574328	0					
ANR	574638	Identifier	done		574328	1					
ANR	574639	AssignmentExpression	done = - 1		574328	2		=			
ANR	574640	Identifier	done		574328	0					
ANR	574641	UnaryOperationExpression	- 1		574328	1					
ANR	574642	UnaryOperator	-		574328	0					
ANR	574643	PrimaryExpression	1		574328	1					
ANR	574644	IdentifierDeclStatement	float last = - 1 ;	133:1:4612:4627	574328	36	True				
ANR	574645	IdentifierDecl	last = - 1		574328	0					
ANR	574646	IdentifierDeclType	float		574328	0					
ANR	574647	Identifier	last		574328	1					
ANR	574648	AssignmentExpression	last = - 1		574328	2		=			
ANR	574649	Identifier	last		574328	0					
ANR	574650	UnaryOperationExpression	- 1		574328	1					
ANR	574651	UnaryOperator	-		574328	0					
ANR	574652	PrimaryExpression	1		574328	1					
ANR	574653	WhileStatement	while ( true )		574328	37					
ANR	574654	Condition	true	134:7:4662:4665	574328	0	True				
ANR	574655	Identifier	true		574328	0					
ANR	574656	CompoundStatement		217:2:7073:7085	574328	1					
ANR	574657	ExpressionStatement	done ++	137:2:4694:4700	574328	0	True				
ANR	574658	PostIncDecOperationExpression	done ++		574328	0					
ANR	574659	Identifier	done		574328	0					
ANR	574660	IncDec	++		574328	1					
ANR	574661	IfStatement	if ( done / numNodes > last + 0.01 )		574328	1					
ANR	574662	Condition	done / numNodes > last + 0.01	138:6:4708:4732	574328	0	True				
ANR	574663	RelationalExpression	done / numNodes > last + 0.01		574328	0		>			
ANR	574664	MultiplicativeExpression	done / numNodes		574328	0		/			
ANR	574665	Identifier	done		574328	0					
ANR	574666	Identifier	numNodes		574328	1					
ANR	574667	AdditiveExpression	last + 0.01		574328	1		+			
ANR	574668	Identifier	last		574328	0					
ANR	574669	PrimaryExpression	0.01		574328	1					
ANR	574670	CompoundStatement		90:34:3188:3188	574328	1					
ANR	574671	ExpressionStatement	last = done / numNodes	139:3:4758:4778	574328	0	True				
ANR	574672	AssignmentExpression	last = done / numNodes		574328	0		=			
ANR	574673	Identifier	last		574328	0					
ANR	574674	MultiplicativeExpression	done / numNodes		574328	1		/			
ANR	574675	Identifier	done		574328	0					
ANR	574676	Identifier	numNodes		574328	1					
ANR	574677	ExpressionStatement	"printf ( ""    about %d percent done\\n"" , ( int ) ( last * 100 ) )"	141:1:4795:4850	574328	1	True				
ANR	574678	CallExpression	"printf ( ""    about %d percent done\\n"" , ( int ) ( last * 100 ) )"		574328	0					
ANR	574679	Callee	printf		574328	0					
ANR	574680	Identifier	printf		574328	0					
ANR	574681	ArgumentList	"""    about %d percent done\\n"""		574328	1					
ANR	574682	Argument	"""    about %d percent done\\n"""		574328	0					
ANR	574683	PrimaryExpression	"""    about %d percent done\\n"""		574328	0					
ANR	574684	Argument	( int ) ( last * 100 )		574328	1					
ANR	574685	CastExpression	( int ) ( last * 100 )		574328	0					
ANR	574686	CastTarget	int		574328	0					
ANR	574687	MultiplicativeExpression	last * 100		574328	1		*			
ANR	574688	Identifier	last		574328	0					
ANR	574689	PrimaryExpression	100		574328	1					
ANR	574690	ExpressionStatement		143:3:4862:4862	574328	2	True				
ANR	574691	IdentifierDeclStatement	bool sourceExists = false ;	147:2:4947:4972	574328	3	True				
ANR	574692	IdentifierDecl	sourceExists = false		574328	0					
ANR	574693	IdentifierDeclType	bool		574328	0					
ANR	574694	Identifier	sourceExists		574328	1					
ANR	574695	AssignmentExpression	sourceExists = false		574328	2		=			
ANR	574696	Identifier	false		574328	0					
ANR	574697	Identifier	false		574328	1					
ANR	574698	ForStatement	for ( i = 0 ; i < numNodes ; i ++ )		574328	4					
ANR	574699	ForInit	i = 0 ;	148:7:4981:4984	574328	0	True				
ANR	574700	AssignmentExpression	i = 0		574328	0		=			
ANR	574701	Identifier	i		574328	0					
ANR	574702	PrimaryExpression	0		574328	1					
ANR	574703	Condition	i < numNodes	148:12:4986:4995	574328	1	True				
ANR	574704	RelationalExpression	i < numNodes		574328	0		<			
ANR	574705	Identifier	i		574328	0					
ANR	574706	Identifier	numNodes		574328	1					
ANR	574707	PostIncDecOperationExpression	i ++	148:24:4998:5000	574328	2	True				
ANR	574708	Identifier	i		574328	0					
ANR	574709	IncDec	++		574328	1					
ANR	574710	CompoundStatement		100:30:3456:3456	574328	3					
ANR	574711	IfStatement	if ( 0 == numberOfParents [ i ] )		574328	0					
ANR	574712	Condition	0 == numberOfParents [ i ]	149:7:5013:5033	574328	0	True				
ANR	574713	EqualityExpression	0 == numberOfParents [ i ]		574328	0		==			
ANR	574714	PrimaryExpression	0		574328	0					
ANR	574715	ArrayIndexing	numberOfParents [ i ]		574328	1					
ANR	574716	Identifier	numberOfParents		574328	0					
ANR	574717	Identifier	i		574328	1					
ANR	574718	CompoundStatement		101:31:3489:3489	574328	1					
ANR	574719	ExpressionStatement	sourceExists = true	150:4:5043:5062	574328	0	True				
ANR	574720	AssignmentExpression	sourceExists = true		574328	0		=			
ANR	574721	Identifier	sourceExists		574328	0					
ANR	574722	Identifier	true		574328	1					
ANR	574723	BreakStatement	break ;	151:4:5068:5073	574328	1	True				
ANR	574724	ExpressionStatement		152:4:5079:5079	574328	1	True				
ANR	574725	ExpressionStatement		153:3:5084:5084	574328	5	True				
ANR	574726	IfStatement	if ( ! sourceExists )		574328	6					
ANR	574727	Condition	! sourceExists	154:6:5092:5104	574328	0	True				
ANR	574728	UnaryOperationExpression	! sourceExists		574328	0					
ANR	574729	UnaryOperator	!		574328	0					
ANR	574730	Identifier	sourceExists		574328	1					
ANR	574731	BreakStatement	break ;	155:3:5111:5116	574328	1	True				
ANR	574732	IfStatement	if ( color >= INT_MAX / 10 )		574328	7					
ANR	574733	Condition	color >= INT_MAX / 10	158:6:5196:5214	574328	0	True				
ANR	574734	RelationalExpression	color >= INT_MAX / 10		574328	0		>=			
ANR	574735	Identifier	color		574328	0					
ANR	574736	MultiplicativeExpression	INT_MAX / 10		574328	1		/			
ANR	574737	Identifier	INT_MAX		574328	0					
ANR	574738	PrimaryExpression	10		574328	1					
ANR	574739	CompoundStatement		110:28:3670:3670	574328	1					
ANR	574740	ExpressionStatement	color = 0	159:3:5223:5232	574328	0	True				
ANR	574741	AssignmentExpression	color = 0		574328	0		=			
ANR	574742	Identifier	color		574328	0					
ANR	574743	PrimaryExpression	0		574328	1					
ANR	574744	ForStatement	for ( i = 0 ; i < numNodes ; i ++ )		574328	1					
ANR	574745	ForInit	i = 0 ;	160:8:5242:5245	574328	0	True				
ANR	574746	AssignmentExpression	i = 0		574328	0		=			
ANR	574747	Identifier	i		574328	0					
ANR	574748	PrimaryExpression	0		574328	1					
ANR	574749	Condition	i < numNodes	160:13:5247:5256	574328	1	True				
ANR	574750	RelationalExpression	i < numNodes		574328	0		<			
ANR	574751	Identifier	i		574328	0					
ANR	574752	Identifier	numNodes		574328	1					
ANR	574753	PostIncDecOperationExpression	i ++	160:25:5259:5261	574328	2	True				
ANR	574754	Identifier	i		574328	0					
ANR	574755	IncDec	++		574328	1					
ANR	574756	ExpressionStatement	colorS [ i ] = colorA [ i ] = 0	161:4:5269:5294	574328	3	True				
ANR	574757	AssignmentExpression	colorS [ i ] = colorA [ i ] = 0		574328	0		=			
ANR	574758	ArrayIndexing	colorS [ i ]		574328	0					
ANR	574759	Identifier	colorS		574328	0					
ANR	574760	Identifier	i		574328	1					
ANR	574761	AssignmentExpression	colorA [ i ] = 0		574328	1		=			
ANR	574762	ArrayIndexing	colorA [ i ]		574328	0					
ANR	574763	Identifier	colorA		574328	0					
ANR	574764	Identifier	i		574328	1					
ANR	574765	PrimaryExpression	0		574328	1					
ANR	574766	ExpressionStatement		162:3:5299:5299	574328	8	True				
ANR	574767	ExpressionStatement	color ++	170:2:5478:5485	574328	9	True				
ANR	574768	PostIncDecOperationExpression	color ++		574328	0					
ANR	574769	Identifier	color		574328	0					
ANR	574770	IncDec	++		574328	1					
ANR	574771	IdentifierDeclStatement	bool found = false ;	172:2:5601:5617	574328	10	True				
ANR	574772	IdentifierDecl	found = false		574328	0					
ANR	574773	IdentifierDeclType	bool		574328	0					
ANR	574774	Identifier	found		574328	1					
ANR	574775	AssignmentExpression	found = false		574328	2		=			
ANR	574776	Identifier	false		574328	0					
ANR	574777	Identifier	false		574328	1					
ANR	574778	ForStatement	for ( i = 0 ; i < numNodes ; i ++ )		574328	11					
ANR	574779	ForInit	i = 0 ;	173:7:5626:5629	574328	0	True				
ANR	574780	AssignmentExpression	i = 0		574328	0		=			
ANR	574781	Identifier	i		574328	0					
ANR	574782	PrimaryExpression	0		574328	1					
ANR	574783	Condition	i < numNodes	173:12:5631:5640	574328	1	True				
ANR	574784	RelationalExpression	i < numNodes		574328	0		<			
ANR	574785	Identifier	i		574328	0					
ANR	574786	Identifier	numNodes		574328	1					
ANR	574787	PostIncDecOperationExpression	i ++	173:24:5643:5645	574328	2	True				
ANR	574788	Identifier	i		574328	0					
ANR	574789	IncDec	++		574328	1					
ANR	574790	CompoundStatement		125:30:4101:4101	574328	3					
ANR	574791	IfStatement	if ( 0 == numberOfParents [ i ] && colorA [ i ] != color )		574328	0					
ANR	574792	Condition	0 == numberOfParents [ i ] && colorA [ i ] != color	174:7:5658:5698	574328	0	True				
ANR	574793	AndExpression	0 == numberOfParents [ i ] && colorA [ i ] != color		574328	0		&&			
ANR	574794	EqualityExpression	0 == numberOfParents [ i ]		574328	0		==			
ANR	574795	PrimaryExpression	0		574328	0					
ANR	574796	ArrayIndexing	numberOfParents [ i ]		574328	1					
ANR	574797	Identifier	numberOfParents		574328	0					
ANR	574798	Identifier	i		574328	1					
ANR	574799	EqualityExpression	colorA [ i ] != color		574328	1		!=			
ANR	574800	ArrayIndexing	colorA [ i ]		574328	0					
ANR	574801	Identifier	colorA		574328	0					
ANR	574802	Identifier	i		574328	1					
ANR	574803	Identifier	color		574328	1					
ANR	574804	CompoundStatement		126:51:4154:4154	574328	1					
ANR	574805	ExpressionStatement	"found = computeBipartiteConstituent ( skeleton , reversed , numberOfParents , i , ancestor , lastA , sink , lastS , color , colorA , colorS )"	179:4:6004:6179	574328	0	True				
ANR	574806	AssignmentExpression	"found = computeBipartiteConstituent ( skeleton , reversed , numberOfParents , i , ancestor , lastA , sink , lastS , color , colorA , colorS )"		574328	0		=			
ANR	574807	Identifier	found		574328	0					
ANR	574808	CallExpression	"computeBipartiteConstituent ( skeleton , reversed , numberOfParents , i , ancestor , lastA , sink , lastS , color , colorA , colorS )"		574328	1					
ANR	574809	Callee	computeBipartiteConstituent		574328	0					
ANR	574810	Identifier	computeBipartiteConstituent		574328	0					
ANR	574811	ArgumentList	skeleton		574328	1					
ANR	574812	Argument	skeleton		574328	0					
ANR	574813	Identifier	skeleton		574328	0					
ANR	574814	Argument	reversed		574328	1					
ANR	574815	Identifier	reversed		574328	0					
ANR	574816	Argument	numberOfParents		574328	2					
ANR	574817	Identifier	numberOfParents		574328	0					
ANR	574818	Argument	i		574328	3					
ANR	574819	Identifier	i		574328	0					
ANR	574820	Argument	ancestor		574328	4					
ANR	574821	Identifier	ancestor		574328	0					
ANR	574822	Argument	lastA		574328	5					
ANR	574823	Identifier	lastA		574328	0					
ANR	574824	Argument	sink		574328	6					
ANR	574825	Identifier	sink		574328	0					
ANR	574826	Argument	lastS		574328	7					
ANR	574827	Identifier	lastS		574328	0					
ANR	574828	Argument	color		574328	8					
ANR	574829	Identifier	color		574328	0					
ANR	574830	Argument	colorA		574328	9					
ANR	574831	Identifier	colorA		574328	0					
ANR	574832	Argument	colorS		574328	10					
ANR	574833	Identifier	colorS		574328	0					
ANR	574834	IfStatement	if ( found )		574328	1					
ANR	574835	Condition	found	183:8:6189:6193	574328	0	True				
ANR	574836	Identifier	found		574328	0					
ANR	574837	BreakStatement	break ;	184:5:6202:6207	574328	1	True				
ANR	574838	ExpressionStatement		185:4:6213:6213	574328	1	True				
ANR	574839	ExpressionStatement		186:3:6218:6218	574328	12	True				
ANR	574840	IfStatement	if ( found )		574328	13					
ANR	574841	Condition	found	188:6:6227:6231	574328	0	True				
ANR	574842	Identifier	found		574328	0					
ANR	574843	CompoundStatement		140:14:4687:4687	574328	1					
ANR	574844	ExpressionStatement	constituentSink [ i ] . reset ( )	190:3:6298:6324	574328	0	True				
ANR	574845	CallExpression	constituentSink [ i ] . reset ( )		574328	0					
ANR	574846	Callee	constituentSink [ i ] . reset		574328	0					
ANR	574847	MemberAccess	constituentSink [ i ] . reset		574328	0					
ANR	574848	ArrayIndexing	constituentSink [ i ]		574328	0					
ANR	574849	Identifier	constituentSink		574328	0					
ANR	574850	Identifier	i		574328	1					
ANR	574851	Identifier	reset		574328	1					
ANR	574852	ArgumentList			574328	1					
ANR	574853	ForStatement	for ( j = 0 ; j <= lastS ; j ++ )		574328	1					
ANR	574854	ForInit	j = 0 ;	191:8:6334:6337	574328	0	True				
ANR	574855	AssignmentExpression	j = 0		574328	0		=			
ANR	574856	Identifier	j		574328	0					
ANR	574857	PrimaryExpression	0		574328	1					
ANR	574858	Condition	j <= lastS	191:13:6339:6346	574328	1	True				
ANR	574859	RelationalExpression	j <= lastS		574328	0		<=			
ANR	574860	Identifier	j		574328	0					
ANR	574861	Identifier	lastS		574328	1					
ANR	574862	PostIncDecOperationExpression	j ++	191:23:6349:6351	574328	2	True				
ANR	574863	Identifier	j		574328	0					
ANR	574864	IncDec	++		574328	1					
ANR	574865	ExpressionStatement	constituentSink [ i ] . append ( sink [ j ] )	192:4:6359:6395	574328	3	True				
ANR	574866	CallExpression	constituentSink [ i ] . append ( sink [ j ] )		574328	0					
ANR	574867	Callee	constituentSink [ i ] . append		574328	0					
ANR	574868	MemberAccess	constituentSink [ i ] . append		574328	0					
ANR	574869	ArrayIndexing	constituentSink [ i ]		574328	0					
ANR	574870	Identifier	constituentSink		574328	0					
ANR	574871	Identifier	i		574328	1					
ANR	574872	Identifier	append		574328	1					
ANR	574873	ArgumentList	sink [ j ]		574328	1					
ANR	574874	Argument	sink [ j ]		574328	0					
ANR	574875	ArrayIndexing	sink [ j ]		574328	0					
ANR	574876	Identifier	sink		574328	0					
ANR	574877	Identifier	j		574328	1					
ANR	574878	ExpressionStatement	constituentAncestor [ i ] . reset ( )	193:3:6400:6430	574328	2	True				
ANR	574879	CallExpression	constituentAncestor [ i ] . reset ( )		574328	0					
ANR	574880	Callee	constituentAncestor [ i ] . reset		574328	0					
ANR	574881	MemberAccess	constituentAncestor [ i ] . reset		574328	0					
ANR	574882	ArrayIndexing	constituentAncestor [ i ]		574328	0					
ANR	574883	Identifier	constituentAncestor		574328	0					
ANR	574884	Identifier	i		574328	1					
ANR	574885	Identifier	reset		574328	1					
ANR	574886	ArgumentList			574328	1					
ANR	574887	ForStatement	for ( j = 0 ; j <= lastA ; j ++ )		574328	3					
ANR	574888	ForInit	j = 0 ;	194:8:6440:6443	574328	0	True				
ANR	574889	AssignmentExpression	j = 0		574328	0		=			
ANR	574890	Identifier	j		574328	0					
ANR	574891	PrimaryExpression	0		574328	1					
ANR	574892	Condition	j <= lastA	194:13:6445:6452	574328	1	True				
ANR	574893	RelationalExpression	j <= lastA		574328	0		<=			
ANR	574894	Identifier	j		574328	0					
ANR	574895	Identifier	lastA		574328	1					
ANR	574896	PostIncDecOperationExpression	j ++	194:23:6455:6457	574328	2	True				
ANR	574897	Identifier	j		574328	0					
ANR	574898	IncDec	++		574328	1					
ANR	574899	ExpressionStatement	constituentAncestor [ i ] . append ( ancestor [ j ] )	195:4:6465:6509	574328	3	True				
ANR	574900	CallExpression	constituentAncestor [ i ] . append ( ancestor [ j ] )		574328	0					
ANR	574901	Callee	constituentAncestor [ i ] . append		574328	0					
ANR	574902	MemberAccess	constituentAncestor [ i ] . append		574328	0					
ANR	574903	ArrayIndexing	constituentAncestor [ i ]		574328	0					
ANR	574904	Identifier	constituentAncestor		574328	0					
ANR	574905	Identifier	i		574328	1					
ANR	574906	Identifier	append		574328	1					
ANR	574907	ArgumentList	ancestor [ j ]		574328	1					
ANR	574908	Argument	ancestor [ j ]		574328	0					
ANR	574909	ArrayIndexing	ancestor [ j ]		574328	0					
ANR	574910	Identifier	ancestor		574328	0					
ANR	574911	Identifier	j		574328	1					
ANR	574912	ExpressionStatement	"printf ( ""---constituent anchored at %d\\n"" , i )"	198:0:6527:6570	574328	4	True				
ANR	574913	CallExpression	"printf ( ""---constituent anchored at %d\\n"" , i )"		574328	0					
ANR	574914	Callee	printf		574328	0					
ANR	574915	Identifier	printf		574328	0					
ANR	574916	ArgumentList	"""---constituent anchored at %d\\n"""		574328	1					
ANR	574917	Argument	"""---constituent anchored at %d\\n"""		574328	0					
ANR	574918	PrimaryExpression	"""---constituent anchored at %d\\n"""		574328	0					
ANR	574919	Argument	i		574328	1					
ANR	574920	Identifier	i		574328	0					
ANR	574921	ExpressionStatement	"printf ( ""      ancestors: "" )"	199:0:6572:6599	574328	5	True				
ANR	574922	CallExpression	"printf ( ""      ancestors: "" )"		574328	0					
ANR	574923	Callee	printf		574328	0					
ANR	574924	Identifier	printf		574328	0					
ANR	574925	ArgumentList	"""      ancestors: """		574328	1					
ANR	574926	Argument	"""      ancestors: """		574328	0					
ANR	574927	PrimaryExpression	"""      ancestors: """		574328	0					
ANR	574928	ForStatement	for ( int k = 0 ; k < constituentAncestor [ i ] . getNumElem ( ) ; k ++ )		574328	6					
ANR	574929	ForInit	int k = 0 ;	200:5:6606:6613	574328	0	True				
ANR	574930	IdentifierDeclStatement	int k = 0 ;		574328	0					
ANR	574931	IdentifierDecl	k = 0		574328	0					
ANR	574932	IdentifierDeclType	int		574328	0					
ANR	574933	Identifier	k		574328	1					
ANR	574934	AssignmentExpression	k = 0		574328	2		=			
ANR	574935	Identifier	k		574328	0					
ANR	574936	PrimaryExpression	0		574328	1					
ANR	574937	Condition	k < constituentAncestor [ i ] . getNumElem ( )	200:14:6615:6651	574328	1	True				
ANR	574938	RelationalExpression	k < constituentAncestor [ i ] . getNumElem ( )		574328	0		<			
ANR	574939	Identifier	k		574328	0					
ANR	574940	CallExpression	constituentAncestor [ i ] . getNumElem ( )		574328	1					
ANR	574941	Callee	constituentAncestor [ i ] . getNumElem		574328	0					
ANR	574942	MemberAccess	constituentAncestor [ i ] . getNumElem		574328	0					
ANR	574943	ArrayIndexing	constituentAncestor [ i ]		574328	0					
ANR	574944	Identifier	constituentAncestor		574328	0					
ANR	574945	Identifier	i		574328	1					
ANR	574946	Identifier	getNumElem		574328	1					
ANR	574947	ArgumentList			574328	1					
ANR	574948	PostIncDecOperationExpression	k ++	200:53:6654:6656	574328	2	True				
ANR	574949	Identifier	k		574328	0					
ANR	574950	IncDec	++		574328	1					
ANR	574951	ExpressionStatement	"printf ( ""%d "" , constituentAncestor [ i ] . getElem ( k ) )"	201:1:6661:6710	574328	3	True				
ANR	574952	CallExpression	"printf ( ""%d "" , constituentAncestor [ i ] . getElem ( k ) )"		574328	0					
ANR	574953	Callee	printf		574328	0					
ANR	574954	Identifier	printf		574328	0					
ANR	574955	ArgumentList	"""%d """		574328	1					
ANR	574956	Argument	"""%d """		574328	0					
ANR	574957	PrimaryExpression	"""%d """		574328	0					
ANR	574958	Argument	constituentAncestor [ i ] . getElem ( k )		574328	1					
ANR	574959	CallExpression	constituentAncestor [ i ] . getElem ( k )		574328	0					
ANR	574960	Callee	constituentAncestor [ i ] . getElem		574328	0					
ANR	574961	MemberAccess	constituentAncestor [ i ] . getElem		574328	0					
ANR	574962	ArrayIndexing	constituentAncestor [ i ]		574328	0					
ANR	574963	Identifier	constituentAncestor		574328	0					
ANR	574964	Identifier	i		574328	1					
ANR	574965	Identifier	getElem		574328	1					
ANR	574966	ArgumentList	k		574328	1					
ANR	574967	Argument	k		574328	0					
ANR	574968	Identifier	k		574328	0					
ANR	574969	ExpressionStatement	"printf ( ""\\n"" )"	202:0:6712:6724	574328	7	True				
ANR	574970	CallExpression	"printf ( ""\\n"" )"		574328	0					
ANR	574971	Callee	printf		574328	0					
ANR	574972	Identifier	printf		574328	0					
ANR	574973	ArgumentList	"""\\n"""		574328	1					
ANR	574974	Argument	"""\\n"""		574328	0					
ANR	574975	PrimaryExpression	"""\\n"""		574328	0					
ANR	574976	ExpressionStatement	"printf ( ""      sinks: "" )"	203:0:6726:6749	574328	8	True				
ANR	574977	CallExpression	"printf ( ""      sinks: "" )"		574328	0					
ANR	574978	Callee	printf		574328	0					
ANR	574979	Identifier	printf		574328	0					
ANR	574980	ArgumentList	"""      sinks: """		574328	1					
ANR	574981	Argument	"""      sinks: """		574328	0					
ANR	574982	PrimaryExpression	"""      sinks: """		574328	0					
ANR	574983	ForStatement	for ( int k = 0 ; k < constituentSink [ i ] . getNumElem ( ) ; k ++ )		574328	9					
ANR	574984	ForInit	int k = 0 ;	204:5:6756:6763	574328	0	True				
ANR	574985	IdentifierDeclStatement	int k = 0 ;		574328	0					
ANR	574986	IdentifierDecl	k = 0		574328	0					
ANR	574987	IdentifierDeclType	int		574328	0					
ANR	574988	Identifier	k		574328	1					
ANR	574989	AssignmentExpression	k = 0		574328	2		=			
ANR	574990	Identifier	k		574328	0					
ANR	574991	PrimaryExpression	0		574328	1					
ANR	574992	Condition	k < constituentSink [ i ] . getNumElem ( )	204:14:6765:6797	574328	1	True				
ANR	574993	RelationalExpression	k < constituentSink [ i ] . getNumElem ( )		574328	0		<			
ANR	574994	Identifier	k		574328	0					
ANR	574995	CallExpression	constituentSink [ i ] . getNumElem ( )		574328	1					
ANR	574996	Callee	constituentSink [ i ] . getNumElem		574328	0					
ANR	574997	MemberAccess	constituentSink [ i ] . getNumElem		574328	0					
ANR	574998	ArrayIndexing	constituentSink [ i ]		574328	0					
ANR	574999	Identifier	constituentSink		574328	0					
ANR	575000	Identifier	i		574328	1					
ANR	575001	Identifier	getNumElem		574328	1					
ANR	575002	ArgumentList			574328	1					
ANR	575003	PostIncDecOperationExpression	k ++	204:49:6800:6802	574328	2	True				
ANR	575004	Identifier	k		574328	0					
ANR	575005	IncDec	++		574328	1					
ANR	575006	ExpressionStatement	"printf ( ""%d "" , constituentSink [ i ] . getElem ( k ) )"	205:1:6807:6852	574328	3	True				
ANR	575007	CallExpression	"printf ( ""%d "" , constituentSink [ i ] . getElem ( k ) )"		574328	0					
ANR	575008	Callee	printf		574328	0					
ANR	575009	Identifier	printf		574328	0					
ANR	575010	ArgumentList	"""%d """		574328	1					
ANR	575011	Argument	"""%d """		574328	0					
ANR	575012	PrimaryExpression	"""%d """		574328	0					
ANR	575013	Argument	constituentSink [ i ] . getElem ( k )		574328	1					
ANR	575014	CallExpression	constituentSink [ i ] . getElem ( k )		574328	0					
ANR	575015	Callee	constituentSink [ i ] . getElem		574328	0					
ANR	575016	MemberAccess	constituentSink [ i ] . getElem		574328	0					
ANR	575017	ArrayIndexing	constituentSink [ i ]		574328	0					
ANR	575018	Identifier	constituentSink		574328	0					
ANR	575019	Identifier	i		574328	1					
ANR	575020	Identifier	getElem		574328	1					
ANR	575021	ArgumentList	k		574328	1					
ANR	575022	Argument	k		574328	0					
ANR	575023	Identifier	k		574328	0					
ANR	575024	ExpressionStatement	"printf ( ""\\n"" )"	206:0:6854:6866	574328	10	True				
ANR	575025	CallExpression	"printf ( ""\\n"" )"		574328	0					
ANR	575026	Callee	printf		574328	0					
ANR	575027	Identifier	printf		574328	0					
ANR	575028	ArgumentList	"""\\n"""		574328	1					
ANR	575029	Argument	"""\\n"""		574328	0					
ANR	575030	PrimaryExpression	"""\\n"""		574328	0					
ANR	575031	ExpressionStatement	"detachConstituent ( skeleton , i , constituentIDtoAnchor , sinkToConstituentID , numberOfParents , constituentAncestor [ i ] , constituentSink [ i ] )"	211:3:6945:7090	574328	11	True				
ANR	575032	CallExpression	"detachConstituent ( skeleton , i , constituentIDtoAnchor , sinkToConstituentID , numberOfParents , constituentAncestor [ i ] , constituentSink [ i ] )"		574328	0					
ANR	575033	Callee	detachConstituent		574328	0					
ANR	575034	Identifier	detachConstituent		574328	0					
ANR	575035	ArgumentList	skeleton		574328	1					
ANR	575036	Argument	skeleton		574328	0					
ANR	575037	Identifier	skeleton		574328	0					
ANR	575038	Argument	i		574328	1					
ANR	575039	Identifier	i		574328	0					
ANR	575040	Argument	constituentIDtoAnchor		574328	2					
ANR	575041	Identifier	constituentIDtoAnchor		574328	0					
ANR	575042	Argument	sinkToConstituentID		574328	3					
ANR	575043	Identifier	sinkToConstituentID		574328	0					
ANR	575044	Argument	numberOfParents		574328	4					
ANR	575045	Identifier	numberOfParents		574328	0					
ANR	575046	Argument	constituentAncestor [ i ]		574328	5					
ANR	575047	ArrayIndexing	constituentAncestor [ i ]		574328	0					
ANR	575048	Identifier	constituentAncestor		574328	0					
ANR	575049	Identifier	i		574328	1					
ANR	575050	Argument	constituentSink [ i ]		574328	6					
ANR	575051	ArrayIndexing	constituentSink [ i ]		574328	0					
ANR	575052	Identifier	constituentSink		574328	0					
ANR	575053	Identifier	i		574328	1					
ANR	575054	ExpressionStatement	type . append ( BIPARTITE )	215:3:7123:7145	574328	12	True				
ANR	575055	CallExpression	type . append ( BIPARTITE )		574328	0					
ANR	575056	Callee	type . append		574328	0					
ANR	575057	MemberAccess	type . append		574328	0					
ANR	575058	Identifier	type		574328	0					
ANR	575059	Identifier	append		574328	1					
ANR	575060	ArgumentList	BIPARTITE		574328	1					
ANR	575061	Argument	BIPARTITE		574328	0					
ANR	575062	Identifier	BIPARTITE		574328	0					
ANR	575063	ContinueStatement	continue ;	218:3:7199:7207	574328	13	True				
ANR	575064	ExpressionStatement		219:3:7212:7212	574328	14	True				
ANR	575065	ForStatement	for ( i = 0 ; i < numNodes ; i ++ )		574328	15					
ANR	575066	ForInit	i = 0 ;	226:7:7362:7365	574328	0	True				
ANR	575067	AssignmentExpression	i = 0		574328	0		=			
ANR	575068	Identifier	i		574328	0					
ANR	575069	PrimaryExpression	0		574328	1					
ANR	575070	Condition	i < numNodes	226:12:7367:7376	574328	1	True				
ANR	575071	RelationalExpression	i < numNodes		574328	0		<			
ANR	575072	Identifier	i		574328	0					
ANR	575073	Identifier	numNodes		574328	1					
ANR	575074	PostIncDecOperationExpression	i ++	226:24:7379:7381	574328	2	True				
ANR	575075	Identifier	i		574328	0					
ANR	575076	IncDec	++		574328	1					
ANR	575077	CompoundStatement		178:30:5837:5837	574328	3					
ANR	575078	IfStatement	if ( 0 == numberOfParents [ i ] )		574328	0					
ANR	575079	Condition	0 == numberOfParents [ i ]	227:7:7394:7414	574328	0	True				
ANR	575080	EqualityExpression	0 == numberOfParents [ i ]		574328	0		==			
ANR	575081	PrimaryExpression	0		574328	0					
ANR	575082	ArrayIndexing	numberOfParents [ i ]		574328	1					
ANR	575083	Identifier	numberOfParents		574328	0					
ANR	575084	Identifier	i		574328	1					
ANR	575085	CompoundStatement		179:31:5870:5870	574328	1					
ANR	575086	ExpressionStatement	color ++	230:4:7478:7485	574328	0	True				
ANR	575087	PostIncDecOperationExpression	color ++		574328	0					
ANR	575088	Identifier	color		574328	0					
ANR	575089	IncDec	++		574328	1					
ANR	575090	ExpressionStatement	"computeConstituent ( skeleton , reversed , numberOfParents , i , ancestor , lastA , sink , lastS , color , colorA , colorS )"	233:4:7651:7784	574328	1	True				
ANR	575091	CallExpression	"computeConstituent ( skeleton , reversed , numberOfParents , i , ancestor , lastA , sink , lastS , color , colorA , colorS )"		574328	0					
ANR	575092	Callee	computeConstituent		574328	0					
ANR	575093	Identifier	computeConstituent		574328	0					
ANR	575094	ArgumentList	skeleton		574328	1					
ANR	575095	Argument	skeleton		574328	0					
ANR	575096	Identifier	skeleton		574328	0					
ANR	575097	Argument	reversed		574328	1					
ANR	575098	Identifier	reversed		574328	0					
ANR	575099	Argument	numberOfParents		574328	2					
ANR	575100	Identifier	numberOfParents		574328	0					
ANR	575101	Argument	i		574328	3					
ANR	575102	Identifier	i		574328	0					
ANR	575103	Argument	ancestor		574328	4					
ANR	575104	Identifier	ancestor		574328	0					
ANR	575105	Argument	lastA		574328	5					
ANR	575106	Identifier	lastA		574328	0					
ANR	575107	Argument	sink		574328	6					
ANR	575108	Identifier	sink		574328	0					
ANR	575109	Argument	lastS		574328	7					
ANR	575110	Identifier	lastS		574328	0					
ANR	575111	Argument	color		574328	8					
ANR	575112	Identifier	color		574328	0					
ANR	575113	Argument	colorA		574328	9					
ANR	575114	Identifier	colorA		574328	0					
ANR	575115	Argument	colorS		574328	10					
ANR	575116	Identifier	colorS		574328	0					
ANR	575117	ExpressionStatement	constituentAncestor [ i ] . reset ( )	238:4:7819:7849	574328	2	True				
ANR	575118	CallExpression	constituentAncestor [ i ] . reset ( )		574328	0					
ANR	575119	Callee	constituentAncestor [ i ] . reset		574328	0					
ANR	575120	MemberAccess	constituentAncestor [ i ] . reset		574328	0					
ANR	575121	ArrayIndexing	constituentAncestor [ i ]		574328	0					
ANR	575122	Identifier	constituentAncestor		574328	0					
ANR	575123	Identifier	i		574328	1					
ANR	575124	Identifier	reset		574328	1					
ANR	575125	ArgumentList			574328	1					
ANR	575126	ExpressionStatement	constituentSink [ i ] . reset ( )	239:4:7855:7881	574328	3	True				
ANR	575127	CallExpression	constituentSink [ i ] . reset ( )		574328	0					
ANR	575128	Callee	constituentSink [ i ] . reset		574328	0					
ANR	575129	MemberAccess	constituentSink [ i ] . reset		574328	0					
ANR	575130	ArrayIndexing	constituentSink [ i ]		574328	0					
ANR	575131	Identifier	constituentSink		574328	0					
ANR	575132	Identifier	i		574328	1					
ANR	575133	Identifier	reset		574328	1					
ANR	575134	ArgumentList			574328	1					
ANR	575135	ForStatement	for ( j = 0 ; j <= lastA ; j ++ )		574328	4					
ANR	575136	ForInit	j = 0 ;	240:9:7892:7895	574328	0	True				
ANR	575137	AssignmentExpression	j = 0		574328	0		=			
ANR	575138	Identifier	j		574328	0					
ANR	575139	PrimaryExpression	0		574328	1					
ANR	575140	Condition	j <= lastA	240:14:7897:7904	574328	1	True				
ANR	575141	RelationalExpression	j <= lastA		574328	0		<=			
ANR	575142	Identifier	j		574328	0					
ANR	575143	Identifier	lastA		574328	1					
ANR	575144	PostIncDecOperationExpression	j ++	240:24:7907:7909	574328	2	True				
ANR	575145	Identifier	j		574328	0					
ANR	575146	IncDec	++		574328	1					
ANR	575147	ExpressionStatement	constituentAncestor [ i ] . append ( ancestor [ j ] )	241:5:7918:7962	574328	3	True				
ANR	575148	CallExpression	constituentAncestor [ i ] . append ( ancestor [ j ] )		574328	0					
ANR	575149	Callee	constituentAncestor [ i ] . append		574328	0					
ANR	575150	MemberAccess	constituentAncestor [ i ] . append		574328	0					
ANR	575151	ArrayIndexing	constituentAncestor [ i ]		574328	0					
ANR	575152	Identifier	constituentAncestor		574328	0					
ANR	575153	Identifier	i		574328	1					
ANR	575154	Identifier	append		574328	1					
ANR	575155	ArgumentList	ancestor [ j ]		574328	1					
ANR	575156	Argument	ancestor [ j ]		574328	0					
ANR	575157	ArrayIndexing	ancestor [ j ]		574328	0					
ANR	575158	Identifier	ancestor		574328	0					
ANR	575159	Identifier	j		574328	1					
ANR	575160	ForStatement	for ( j = 0 ; j <= lastS ; j ++ )		574328	5					
ANR	575161	ForInit	j = 0 ;	242:9:7973:7976	574328	0	True				
ANR	575162	AssignmentExpression	j = 0		574328	0		=			
ANR	575163	Identifier	j		574328	0					
ANR	575164	PrimaryExpression	0		574328	1					
ANR	575165	Condition	j <= lastS	242:14:7978:7985	574328	1	True				
ANR	575166	RelationalExpression	j <= lastS		574328	0		<=			
ANR	575167	Identifier	j		574328	0					
ANR	575168	Identifier	lastS		574328	1					
ANR	575169	PostIncDecOperationExpression	j ++	242:24:7988:7990	574328	2	True				
ANR	575170	Identifier	j		574328	0					
ANR	575171	IncDec	++		574328	1					
ANR	575172	ExpressionStatement	constituentSink [ i ] . append ( sink [ j ] )	243:5:7999:8035	574328	3	True				
ANR	575173	CallExpression	constituentSink [ i ] . append ( sink [ j ] )		574328	0					
ANR	575174	Callee	constituentSink [ i ] . append		574328	0					
ANR	575175	MemberAccess	constituentSink [ i ] . append		574328	0					
ANR	575176	ArrayIndexing	constituentSink [ i ]		574328	0					
ANR	575177	Identifier	constituentSink		574328	0					
ANR	575178	Identifier	i		574328	1					
ANR	575179	Identifier	append		574328	1					
ANR	575180	ArgumentList	sink [ j ]		574328	1					
ANR	575181	Argument	sink [ j ]		574328	0					
ANR	575182	ArrayIndexing	sink [ j ]		574328	0					
ANR	575183	Identifier	sink		574328	0					
ANR	575184	Identifier	j		574328	1					
ANR	575185	ExpressionStatement	"printf ( ""---constituent anchored at %d\\n"" , i )"	246:0:8053:8096	574328	6	True				
ANR	575186	CallExpression	"printf ( ""---constituent anchored at %d\\n"" , i )"		574328	0					
ANR	575187	Callee	printf		574328	0					
ANR	575188	Identifier	printf		574328	0					
ANR	575189	ArgumentList	"""---constituent anchored at %d\\n"""		574328	1					
ANR	575190	Argument	"""---constituent anchored at %d\\n"""		574328	0					
ANR	575191	PrimaryExpression	"""---constituent anchored at %d\\n"""		574328	0					
ANR	575192	Argument	i		574328	1					
ANR	575193	Identifier	i		574328	0					
ANR	575194	ExpressionStatement	"printf ( ""      ancestors: "" )"	247:0:8098:8125	574328	7	True				
ANR	575195	CallExpression	"printf ( ""      ancestors: "" )"		574328	0					
ANR	575196	Callee	printf		574328	0					
ANR	575197	Identifier	printf		574328	0					
ANR	575198	ArgumentList	"""      ancestors: """		574328	1					
ANR	575199	Argument	"""      ancestors: """		574328	0					
ANR	575200	PrimaryExpression	"""      ancestors: """		574328	0					
ANR	575201	ForStatement	for ( int k = 0 ; k < constituentAncestor [ i ] . getNumElem ( ) ; k ++ )		574328	8					
ANR	575202	ForInit	int k = 0 ;	248:5:8132:8139	574328	0	True				
ANR	575203	IdentifierDeclStatement	int k = 0 ;		574328	0					
ANR	575204	IdentifierDecl	k = 0		574328	0					
ANR	575205	IdentifierDeclType	int		574328	0					
ANR	575206	Identifier	k		574328	1					
ANR	575207	AssignmentExpression	k = 0		574328	2		=			
ANR	575208	Identifier	k		574328	0					
ANR	575209	PrimaryExpression	0		574328	1					
ANR	575210	Condition	k < constituentAncestor [ i ] . getNumElem ( )	248:14:8141:8177	574328	1	True				
ANR	575211	RelationalExpression	k < constituentAncestor [ i ] . getNumElem ( )		574328	0		<			
ANR	575212	Identifier	k		574328	0					
ANR	575213	CallExpression	constituentAncestor [ i ] . getNumElem ( )		574328	1					
ANR	575214	Callee	constituentAncestor [ i ] . getNumElem		574328	0					
ANR	575215	MemberAccess	constituentAncestor [ i ] . getNumElem		574328	0					
ANR	575216	ArrayIndexing	constituentAncestor [ i ]		574328	0					
ANR	575217	Identifier	constituentAncestor		574328	0					
ANR	575218	Identifier	i		574328	1					
ANR	575219	Identifier	getNumElem		574328	1					
ANR	575220	ArgumentList			574328	1					
ANR	575221	PostIncDecOperationExpression	k ++	248:53:8180:8182	574328	2	True				
ANR	575222	Identifier	k		574328	0					
ANR	575223	IncDec	++		574328	1					
ANR	575224	ExpressionStatement	"printf ( ""%d "" , constituentAncestor [ i ] . getElem ( k ) )"	249:1:8187:8236	574328	3	True				
ANR	575225	CallExpression	"printf ( ""%d "" , constituentAncestor [ i ] . getElem ( k ) )"		574328	0					
ANR	575226	Callee	printf		574328	0					
ANR	575227	Identifier	printf		574328	0					
ANR	575228	ArgumentList	"""%d """		574328	1					
ANR	575229	Argument	"""%d """		574328	0					
ANR	575230	PrimaryExpression	"""%d """		574328	0					
ANR	575231	Argument	constituentAncestor [ i ] . getElem ( k )		574328	1					
ANR	575232	CallExpression	constituentAncestor [ i ] . getElem ( k )		574328	0					
ANR	575233	Callee	constituentAncestor [ i ] . getElem		574328	0					
ANR	575234	MemberAccess	constituentAncestor [ i ] . getElem		574328	0					
ANR	575235	ArrayIndexing	constituentAncestor [ i ]		574328	0					
ANR	575236	Identifier	constituentAncestor		574328	0					
ANR	575237	Identifier	i		574328	1					
ANR	575238	Identifier	getElem		574328	1					
ANR	575239	ArgumentList	k		574328	1					
ANR	575240	Argument	k		574328	0					
ANR	575241	Identifier	k		574328	0					
ANR	575242	ExpressionStatement	"printf ( ""\\n"" )"	250:0:8238:8250	574328	9	True				
ANR	575243	CallExpression	"printf ( ""\\n"" )"		574328	0					
ANR	575244	Callee	printf		574328	0					
ANR	575245	Identifier	printf		574328	0					
ANR	575246	ArgumentList	"""\\n"""		574328	1					
ANR	575247	Argument	"""\\n"""		574328	0					
ANR	575248	PrimaryExpression	"""\\n"""		574328	0					
ANR	575249	ExpressionStatement	"printf ( ""      sinks: "" )"	251:0:8252:8275	574328	10	True				
ANR	575250	CallExpression	"printf ( ""      sinks: "" )"		574328	0					
ANR	575251	Callee	printf		574328	0					
ANR	575252	Identifier	printf		574328	0					
ANR	575253	ArgumentList	"""      sinks: """		574328	1					
ANR	575254	Argument	"""      sinks: """		574328	0					
ANR	575255	PrimaryExpression	"""      sinks: """		574328	0					
ANR	575256	ForStatement	for ( int k = 0 ; k < constituentSink [ i ] . getNumElem ( ) ; k ++ )		574328	11					
ANR	575257	ForInit	int k = 0 ;	252:5:8282:8289	574328	0	True				
ANR	575258	IdentifierDeclStatement	int k = 0 ;		574328	0					
ANR	575259	IdentifierDecl	k = 0		574328	0					
ANR	575260	IdentifierDeclType	int		574328	0					
ANR	575261	Identifier	k		574328	1					
ANR	575262	AssignmentExpression	k = 0		574328	2		=			
ANR	575263	Identifier	k		574328	0					
ANR	575264	PrimaryExpression	0		574328	1					
ANR	575265	Condition	k < constituentSink [ i ] . getNumElem ( )	252:14:8291:8323	574328	1	True				
ANR	575266	RelationalExpression	k < constituentSink [ i ] . getNumElem ( )		574328	0		<			
ANR	575267	Identifier	k		574328	0					
ANR	575268	CallExpression	constituentSink [ i ] . getNumElem ( )		574328	1					
ANR	575269	Callee	constituentSink [ i ] . getNumElem		574328	0					
ANR	575270	MemberAccess	constituentSink [ i ] . getNumElem		574328	0					
ANR	575271	ArrayIndexing	constituentSink [ i ]		574328	0					
ANR	575272	Identifier	constituentSink		574328	0					
ANR	575273	Identifier	i		574328	1					
ANR	575274	Identifier	getNumElem		574328	1					
ANR	575275	ArgumentList			574328	1					
ANR	575276	PostIncDecOperationExpression	k ++	252:49:8326:8328	574328	2	True				
ANR	575277	Identifier	k		574328	0					
ANR	575278	IncDec	++		574328	1					
ANR	575279	ExpressionStatement	"printf ( ""%d "" , constituentSink [ i ] . getElem ( k ) )"	253:1:8333:8378	574328	3	True				
ANR	575280	CallExpression	"printf ( ""%d "" , constituentSink [ i ] . getElem ( k ) )"		574328	0					
ANR	575281	Callee	printf		574328	0					
ANR	575282	Identifier	printf		574328	0					
ANR	575283	ArgumentList	"""%d """		574328	1					
ANR	575284	Argument	"""%d """		574328	0					
ANR	575285	PrimaryExpression	"""%d """		574328	0					
ANR	575286	Argument	constituentSink [ i ] . getElem ( k )		574328	1					
ANR	575287	CallExpression	constituentSink [ i ] . getElem ( k )		574328	0					
ANR	575288	Callee	constituentSink [ i ] . getElem		574328	0					
ANR	575289	MemberAccess	constituentSink [ i ] . getElem		574328	0					
ANR	575290	ArrayIndexing	constituentSink [ i ]		574328	0					
ANR	575291	Identifier	constituentSink		574328	0					
ANR	575292	Identifier	i		574328	1					
ANR	575293	Identifier	getElem		574328	1					
ANR	575294	ArgumentList	k		574328	1					
ANR	575295	Argument	k		574328	0					
ANR	575296	Identifier	k		574328	0					
ANR	575297	ExpressionStatement	"printf ( ""\\n"" )"	254:0:8380:8392	574328	12	True				
ANR	575298	CallExpression	"printf ( ""\\n"" )"		574328	0					
ANR	575299	Callee	printf		574328	0					
ANR	575300	Identifier	printf		574328	0					
ANR	575301	ArgumentList	"""\\n"""		574328	1					
ANR	575302	Argument	"""\\n"""		574328	0					
ANR	575303	PrimaryExpression	"""\\n"""		574328	0					
ANR	575304	ExpressionStatement		256:4:8405:8405	574328	1	True				
ANR	575305	ExpressionStatement		257:3:8410:8410	574328	16	True				
ANR	575306	ForStatement	for ( i = 0 ; i < numNodes ; i ++ )		574328	17					
ANR	575307	ForInit	i = 0 ;	261:7:8536:8539	574328	0	True				
ANR	575308	AssignmentExpression	i = 0		574328	0		=			
ANR	575309	Identifier	i		574328	0					
ANR	575310	PrimaryExpression	0		574328	1					
ANR	575311	Condition	i < numNodes	261:12:8541:8550	574328	1	True				
ANR	575312	RelationalExpression	i < numNodes		574328	0		<			
ANR	575313	Identifier	i		574328	0					
ANR	575314	Identifier	numNodes		574328	1					
ANR	575315	PostIncDecOperationExpression	i ++	261:24:8553:8555	574328	2	True				
ANR	575316	Identifier	i		574328	0					
ANR	575317	IncDec	++		574328	1					
ANR	575318	CompoundStatement		213:30:7011:7011	574328	3					
ANR	575319	ExpressionStatement	minimalConstituent [ i ] = false	262:3:8564:8593	574328	0	True				
ANR	575320	AssignmentExpression	minimalConstituent [ i ] = false		574328	0		=			
ANR	575321	ArrayIndexing	minimalConstituent [ i ]		574328	0					
ANR	575322	Identifier	minimalConstituent		574328	0					
ANR	575323	Identifier	i		574328	1					
ANR	575324	Identifier	false		574328	1					
ANR	575325	ExpressionStatement	colorIncl [ i ] = 0	263:3:8598:8612	574328	1	True				
ANR	575326	AssignmentExpression	colorIncl [ i ] = 0		574328	0		=			
ANR	575327	ArrayIndexing	colorIncl [ i ]		574328	0					
ANR	575328	Identifier	colorIncl		574328	0					
ANR	575329	Identifier	i		574328	1					
ANR	575330	PrimaryExpression	0		574328	1					
ANR	575331	ExpressionStatement		264:3:8617:8617	574328	18	True				
ANR	575332	IdentifierDeclStatement	int color2 = 0 ;	265:2:8621:8633	574328	19	True				
ANR	575333	IdentifierDecl	color2 = 0		574328	0					
ANR	575334	IdentifierDeclType	int		574328	0					
ANR	575335	Identifier	color2		574328	1					
ANR	575336	AssignmentExpression	color2 = 0		574328	2		=			
ANR	575337	Identifier	color2		574328	0					
ANR	575338	PrimaryExpression	0		574328	1					
ANR	575339	ForStatement	for ( i = 0 ; i < numNodes ; i ++ )		574328	20					
ANR	575340	ForInit	i = 0 ;	266:7:8642:8645	574328	0	True				
ANR	575341	AssignmentExpression	i = 0		574328	0		=			
ANR	575342	Identifier	i		574328	0					
ANR	575343	PrimaryExpression	0		574328	1					
ANR	575344	Condition	i < numNodes	266:12:8647:8656	574328	1	True				
ANR	575345	RelationalExpression	i < numNodes		574328	0		<			
ANR	575346	Identifier	i		574328	0					
ANR	575347	Identifier	numNodes		574328	1					
ANR	575348	PostIncDecOperationExpression	i ++	266:24:8659:8661	574328	2	True				
ANR	575349	Identifier	i		574328	0					
ANR	575350	IncDec	++		574328	1					
ANR	575351	CompoundStatement		218:30:7117:7117	574328	3					
ANR	575352	IfStatement	if ( 0 == numberOfParents [ i ] )		574328	0					
ANR	575353	Condition	0 == numberOfParents [ i ]	268:7:8675:8695	574328	0	True				
ANR	575354	EqualityExpression	0 == numberOfParents [ i ]		574328	0		==			
ANR	575355	PrimaryExpression	0		574328	0					
ANR	575356	ArrayIndexing	numberOfParents [ i ]		574328	1					
ANR	575357	Identifier	numberOfParents		574328	0					
ANR	575358	Identifier	i		574328	1					
ANR	575359	CompoundStatement		223:4:7185:7202	574328	1					
ANR	575360	IdentifierDeclStatement	bool minimal = true ;	271:4:8733:8750	574328	0	True				
ANR	575361	IdentifierDecl	minimal = true		574328	0					
ANR	575362	IdentifierDeclType	bool		574328	0					
ANR	575363	Identifier	minimal		574328	1					
ANR	575364	AssignmentExpression	minimal = true		574328	2		=			
ANR	575365	Identifier	true		574328	0					
ANR	575366	Identifier	true		574328	1					
ANR	575367	ForStatement	for ( j = 0 ; j < numNodes ; j ++ )		574328	1					
ANR	575368	ForInit	j = 0 ;	274:9:8797:8800	574328	0	True				
ANR	575369	AssignmentExpression	j = 0		574328	0		=			
ANR	575370	Identifier	j		574328	0					
ANR	575371	PrimaryExpression	0		574328	1					
ANR	575372	Condition	j < numNodes	274:14:8802:8811	574328	1	True				
ANR	575373	RelationalExpression	j < numNodes		574328	0		<			
ANR	575374	Identifier	j		574328	0					
ANR	575375	Identifier	numNodes		574328	1					
ANR	575376	PostIncDecOperationExpression	j ++	274:26:8814:8816	574328	2	True				
ANR	575377	Identifier	j		574328	0					
ANR	575378	IncDec	++		574328	1					
ANR	575379	CompoundStatement		226:32:7272:7272	574328	3					
ANR	575380	IfStatement	if ( 0 == numberOfParents [ j ] && i != j )		574328	0					
ANR	575381	Condition	0 == numberOfParents [ j ] && i != j	275:9:8831:8859	574328	0	True				
ANR	575382	AndExpression	0 == numberOfParents [ j ] && i != j		574328	0		&&			
ANR	575383	EqualityExpression	0 == numberOfParents [ j ]		574328	0		==			
ANR	575384	PrimaryExpression	0		574328	0					
ANR	575385	ArrayIndexing	numberOfParents [ j ]		574328	1					
ANR	575386	Identifier	numberOfParents		574328	0					
ANR	575387	Identifier	j		574328	1					
ANR	575388	EqualityExpression	i != j		574328	1		!=			
ANR	575389	Identifier	i		574328	0					
ANR	575390	Identifier	j		574328	1					
ANR	575391	CompoundStatement		234:6:7713:7745	574328	1					
ANR	575392	ExpressionStatement	color2 ++	278:6:8943:8951	574328	0	True				
ANR	575393	PostIncDecOperationExpression	color2 ++		574328	0					
ANR	575394	Identifier	color2		574328	0					
ANR	575395	IncDec	++		574328	1					
ANR	575396	IdentifierDeclStatement	"bool iINj = testAincludedInB ( constituentSink [ i ] , constituentAncestor [ i ] , constituentSink [ j ] , constituentAncestor [ j ] , colorIncl , color2 ) ;"	279:6:8959:9094	574328	1	True				
ANR	575397	IdentifierDecl	"iINj = testAincludedInB ( constituentSink [ i ] , constituentAncestor [ i ] , constituentSink [ j ] , constituentAncestor [ j ] , colorIncl , color2 )"		574328	0					
ANR	575398	IdentifierDeclType	bool		574328	0					
ANR	575399	Identifier	iINj		574328	1					
ANR	575400	AssignmentExpression	"iINj = testAincludedInB ( constituentSink [ i ] , constituentAncestor [ i ] , constituentSink [ j ] , constituentAncestor [ j ] , colorIncl , color2 )"		574328	2		=			
ANR	575401	Identifier	iINj		574328	0					
ANR	575402	CallExpression	"testAincludedInB ( constituentSink [ i ] , constituentAncestor [ i ] , constituentSink [ j ] , constituentAncestor [ j ] , colorIncl , color2 )"		574328	1					
ANR	575403	Callee	testAincludedInB		574328	0					
ANR	575404	Identifier	testAincludedInB		574328	0					
ANR	575405	ArgumentList	constituentSink [ i ]		574328	1					
ANR	575406	Argument	constituentSink [ i ]		574328	0					
ANR	575407	ArrayIndexing	constituentSink [ i ]		574328	0					
ANR	575408	Identifier	constituentSink		574328	0					
ANR	575409	Identifier	i		574328	1					
ANR	575410	Argument	constituentAncestor [ i ]		574328	1					
ANR	575411	ArrayIndexing	constituentAncestor [ i ]		574328	0					
ANR	575412	Identifier	constituentAncestor		574328	0					
ANR	575413	Identifier	i		574328	1					
ANR	575414	Argument	constituentSink [ j ]		574328	2					
ANR	575415	ArrayIndexing	constituentSink [ j ]		574328	0					
ANR	575416	Identifier	constituentSink		574328	0					
ANR	575417	Identifier	j		574328	1					
ANR	575418	Argument	constituentAncestor [ j ]		574328	3					
ANR	575419	ArrayIndexing	constituentAncestor [ j ]		574328	0					
ANR	575420	Identifier	constituentAncestor		574328	0					
ANR	575421	Identifier	j		574328	1					
ANR	575422	Argument	colorIncl		574328	4					
ANR	575423	Identifier	colorIncl		574328	0					
ANR	575424	Argument	color2		574328	5					
ANR	575425	Identifier	color2		574328	0					
ANR	575426	ExpressionStatement	color2 ++	280:6:9102:9110	574328	2	True				
ANR	575427	PostIncDecOperationExpression	color2 ++		574328	0					
ANR	575428	Identifier	color2		574328	0					
ANR	575429	IncDec	++		574328	1					
ANR	575430	IdentifierDeclStatement	"bool jINi = testAincludedInB ( constituentSink [ j ] , constituentAncestor [ j ] , constituentSink [ i ] , constituentAncestor [ i ] , colorIncl , color2 ) ;"	281:6:9118:9253	574328	3	True				
ANR	575431	IdentifierDecl	"jINi = testAincludedInB ( constituentSink [ j ] , constituentAncestor [ j ] , constituentSink [ i ] , constituentAncestor [ i ] , colorIncl , color2 )"		574328	0					
ANR	575432	IdentifierDeclType	bool		574328	0					
ANR	575433	Identifier	jINi		574328	1					
ANR	575434	AssignmentExpression	"jINi = testAincludedInB ( constituentSink [ j ] , constituentAncestor [ j ] , constituentSink [ i ] , constituentAncestor [ i ] , colorIncl , color2 )"		574328	2		=			
ANR	575435	Identifier	jINi		574328	0					
ANR	575436	CallExpression	"testAincludedInB ( constituentSink [ j ] , constituentAncestor [ j ] , constituentSink [ i ] , constituentAncestor [ i ] , colorIncl , color2 )"		574328	1					
ANR	575437	Callee	testAincludedInB		574328	0					
ANR	575438	Identifier	testAincludedInB		574328	0					
ANR	575439	ArgumentList	constituentSink [ j ]		574328	1					
ANR	575440	Argument	constituentSink [ j ]		574328	0					
ANR	575441	ArrayIndexing	constituentSink [ j ]		574328	0					
ANR	575442	Identifier	constituentSink		574328	0					
ANR	575443	Identifier	j		574328	1					
ANR	575444	Argument	constituentAncestor [ j ]		574328	1					
ANR	575445	ArrayIndexing	constituentAncestor [ j ]		574328	0					
ANR	575446	Identifier	constituentAncestor		574328	0					
ANR	575447	Identifier	j		574328	1					
ANR	575448	Argument	constituentSink [ i ]		574328	2					
ANR	575449	ArrayIndexing	constituentSink [ i ]		574328	0					
ANR	575450	Identifier	constituentSink		574328	0					
ANR	575451	Identifier	i		574328	1					
ANR	575452	Argument	constituentAncestor [ i ]		574328	3					
ANR	575453	ArrayIndexing	constituentAncestor [ i ]		574328	0					
ANR	575454	Identifier	constituentAncestor		574328	0					
ANR	575455	Identifier	i		574328	1					
ANR	575456	Argument	colorIncl		574328	4					
ANR	575457	Identifier	colorIncl		574328	0					
ANR	575458	Argument	color2		574328	5					
ANR	575459	Identifier	color2		574328	0					
ANR	575460	IdentifierDeclStatement	bool strict = ( jINi && ! ( iINj ) ) ;	282:6:9261:9293	574328	4	True				
ANR	575461	IdentifierDecl	strict = ( jINi && ! ( iINj ) )		574328	0					
ANR	575462	IdentifierDeclType	bool		574328	0					
ANR	575463	Identifier	strict		574328	1					
ANR	575464	AssignmentExpression	strict = ( jINi && ! ( iINj ) )		574328	2		=			
ANR	575465	Identifier	strict		574328	0					
ANR	575466	AndExpression	jINi && ! ( iINj )		574328	1		&&			
ANR	575467	Identifier	jINi		574328	0					
ANR	575468	UnaryOperationExpression	! ( iINj )		574328	1					
ANR	575469	UnaryOperator	!		574328	0					
ANR	575470	Identifier	iINj		574328	1					
ANR	575471	IfStatement	if ( strict )		574328	5					
ANR	575472	Condition	strict	285:10:9363:9368	574328	0	True				
ANR	575473	Identifier	strict		574328	0					
ANR	575474	CompoundStatement		237:19:7824:7824	574328	1					
ANR	575475	ExpressionStatement	minimal = false	286:7:9381:9396	574328	0	True				
ANR	575476	AssignmentExpression	minimal = false		574328	0		=			
ANR	575477	Identifier	minimal		574328	0					
ANR	575478	Identifier	false		574328	1					
ANR	575479	BreakStatement	break ;	287:7:9405:9410	574328	1	True				
ANR	575480	ExpressionStatement		288:7:9419:9419	574328	6	True				
ANR	575481	ExpressionStatement		289:6:9427:9427	574328	1	True				
ANR	575482	ExpressionStatement		290:5:9434:9434	574328	2	True				
ANR	575483	ExpressionStatement	minimalConstituent [ i ] = minimal	293:4:9471:9502	574328	3	True				
ANR	575484	AssignmentExpression	minimalConstituent [ i ] = minimal		574328	0		=			
ANR	575485	ArrayIndexing	minimalConstituent [ i ]		574328	0					
ANR	575486	Identifier	minimalConstituent		574328	0					
ANR	575487	Identifier	i		574328	1					
ANR	575488	Identifier	minimal		574328	1					
ANR	575489	ExpressionStatement		295:4:9509:9509	574328	1	True				
ANR	575490	ExpressionStatement		296:3:9514:9514	574328	21	True				
ANR	575491	ForStatement	for ( i = 0 ; i < numNodes ; i ++ )		574328	22					
ANR	575492	ForInit	i = 0 ;	303:7:9785:9788	574328	0	True				
ANR	575493	AssignmentExpression	i = 0		574328	0		=			
ANR	575494	Identifier	i		574328	0					
ANR	575495	PrimaryExpression	0		574328	1					
ANR	575496	Condition	i < numNodes	303:12:9790:9799	574328	1	True				
ANR	575497	RelationalExpression	i < numNodes		574328	0		<			
ANR	575498	Identifier	i		574328	0					
ANR	575499	Identifier	numNodes		574328	1					
ANR	575500	PostIncDecOperationExpression	i ++	303:24:9802:9804	574328	2	True				
ANR	575501	Identifier	i		574328	0					
ANR	575502	IncDec	++		574328	1					
ANR	575503	CompoundStatement		255:30:8260:8260	574328	3					
ANR	575504	IfStatement	if ( minimalConstituent [ i ] && ( - 1 != numberOfParents [ constituentAncestor [ i ] . getElem ( 0 ) ] ) )		574328	0					
ANR	575505	Condition	minimalConstituent [ i ] && ( - 1 != numberOfParents [ constituentAncestor [ i ] . getElem ( 0 ) ] )	308:7:9995:10079	574328	0	True				
ANR	575506	AndExpression	minimalConstituent [ i ] && ( - 1 != numberOfParents [ constituentAncestor [ i ] . getElem ( 0 ) ] )		574328	0		&&			
ANR	575507	ArrayIndexing	minimalConstituent [ i ]		574328	0					
ANR	575508	Identifier	minimalConstituent		574328	0					
ANR	575509	Identifier	i		574328	1					
ANR	575510	EqualityExpression	- 1 != numberOfParents [ constituentAncestor [ i ] . getElem ( 0 ) ]		574328	1		!=			
ANR	575511	UnaryOperationExpression	- 1		574328	0					
ANR	575512	UnaryOperator	-		574328	0					
ANR	575513	PrimaryExpression	1		574328	1					
ANR	575514	ArrayIndexing	numberOfParents [ constituentAncestor [ i ] . getElem ( 0 ) ]		574328	1					
ANR	575515	Identifier	numberOfParents		574328	0					
ANR	575516	CallExpression	constituentAncestor [ i ] . getElem ( 0 )		574328	1					
ANR	575517	Callee	constituentAncestor [ i ] . getElem		574328	0					
ANR	575518	MemberAccess	constituentAncestor [ i ] . getElem		574328	0					
ANR	575519	ArrayIndexing	constituentAncestor [ i ]		574328	0					
ANR	575520	Identifier	constituentAncestor		574328	0					
ANR	575521	Identifier	i		574328	1					
ANR	575522	Identifier	getElem		574328	1					
ANR	575523	ArgumentList	0		574328	1					
ANR	575524	Argument	0		574328	0					
ANR	575525	PrimaryExpression	0		574328	0					
ANR	575526	CompoundStatement		260:95:8535:8535	574328	1					
ANR	575527	ExpressionStatement	"detachConstituent ( skeleton , i , constituentIDtoAnchor , sinkToConstituentID , numberOfParents , constituentAncestor [ i ] , constituentSink [ i ] )"	311:4:10174:10320	574328	0	True				
ANR	575528	CallExpression	"detachConstituent ( skeleton , i , constituentIDtoAnchor , sinkToConstituentID , numberOfParents , constituentAncestor [ i ] , constituentSink [ i ] )"		574328	0					
ANR	575529	Callee	detachConstituent		574328	0					
ANR	575530	Identifier	detachConstituent		574328	0					
ANR	575531	ArgumentList	skeleton		574328	1					
ANR	575532	Argument	skeleton		574328	0					
ANR	575533	Identifier	skeleton		574328	0					
ANR	575534	Argument	i		574328	1					
ANR	575535	Identifier	i		574328	0					
ANR	575536	Argument	constituentIDtoAnchor		574328	2					
ANR	575537	Identifier	constituentIDtoAnchor		574328	0					
ANR	575538	Argument	sinkToConstituentID		574328	3					
ANR	575539	Identifier	sinkToConstituentID		574328	0					
ANR	575540	Argument	numberOfParents		574328	4					
ANR	575541	Identifier	numberOfParents		574328	0					
ANR	575542	Argument	constituentAncestor [ i ]		574328	5					
ANR	575543	ArrayIndexing	constituentAncestor [ i ]		574328	0					
ANR	575544	Identifier	constituentAncestor		574328	0					
ANR	575545	Identifier	i		574328	1					
ANR	575546	Argument	constituentSink [ i ]		574328	6					
ANR	575547	ArrayIndexing	constituentSink [ i ]		574328	0					
ANR	575548	Identifier	constituentSink		574328	0					
ANR	575549	Identifier	i		574328	1					
ANR	575550	ExpressionStatement	type . append ( COMPLEX )	315:4:10359:10379	574328	1	True				
ANR	575551	CallExpression	type . append ( COMPLEX )		574328	0					
ANR	575552	Callee	type . append		574328	0					
ANR	575553	MemberAccess	type . append		574328	0					
ANR	575554	Identifier	type		574328	0					
ANR	575555	Identifier	append		574328	1					
ANR	575556	ArgumentList	COMPLEX		574328	1					
ANR	575557	Argument	COMPLEX		574328	0					
ANR	575558	Identifier	COMPLEX		574328	0					
ANR	575559	ExpressionStatement		316:4:10385:10385	574328	1	True				
ANR	575560	ExpressionStatement		317:3:10390:10390	574328	23	True				
ANR	575561	ExpressionStatement	"printf ( ""\\n"" )"	320:0:10408:10420	574328	24	True				
ANR	575562	CallExpression	"printf ( ""\\n"" )"		574328	0					
ANR	575563	Callee	printf		574328	0					
ANR	575564	Identifier	printf		574328	0					
ANR	575565	ArgumentList	"""\\n"""		574328	1					
ANR	575566	Argument	"""\\n"""		574328	0					
ANR	575567	PrimaryExpression	"""\\n"""		574328	0					
ANR	575568	ExpressionStatement		323:2:10432:10432	574328	38	True				
ANR	575569	IdentifierDeclStatement	int numIsolated = 0 ;	328:1:10503:10520	574328	39	True				
ANR	575570	IdentifierDecl	numIsolated = 0		574328	0					
ANR	575571	IdentifierDeclType	int		574328	0					
ANR	575572	Identifier	numIsolated		574328	1					
ANR	575573	AssignmentExpression	numIsolated = 0		574328	2		=			
ANR	575574	Identifier	numIsolated		574328	0					
ANR	575575	PrimaryExpression	0		574328	1					
ANR	575576	ForStatement	for ( i = 0 ; i < numNodes ; i ++ )		574328	40					
ANR	575577	ForInit	i = 0 ;	329:6:10528:10531	574328	0	True				
ANR	575578	AssignmentExpression	i = 0		574328	0		=			
ANR	575579	Identifier	i		574328	0					
ANR	575580	PrimaryExpression	0		574328	1					
ANR	575581	Condition	i < numNodes	329:11:10533:10542	574328	1	True				
ANR	575582	RelationalExpression	i < numNodes		574328	0		<			
ANR	575583	Identifier	i		574328	0					
ANR	575584	Identifier	numNodes		574328	1					
ANR	575585	PostIncDecOperationExpression	i ++	329:23:10545:10547	574328	2	True				
ANR	575586	Identifier	i		574328	0					
ANR	575587	IncDec	++		574328	1					
ANR	575588	CompoundStatement		281:29:9003:9003	574328	3					
ANR	575589	IfStatement	if ( 0 == skeleton . getNumArcs ( i ) && 0 == reversed . getNumArcs ( i ) )		574328	0					
ANR	575590	Condition	0 == skeleton . getNumArcs ( i ) && 0 == reversed . getNumArcs ( i )	330:6:10559:10612	574328	0	True				
ANR	575591	AndExpression	0 == skeleton . getNumArcs ( i ) && 0 == reversed . getNumArcs ( i )		574328	0		&&			
ANR	575592	EqualityExpression	0 == skeleton . getNumArcs ( i )		574328	0		==			
ANR	575593	PrimaryExpression	0		574328	0					
ANR	575594	CallExpression	skeleton . getNumArcs ( i )		574328	1					
ANR	575595	Callee	skeleton . getNumArcs		574328	0					
ANR	575596	MemberAccess	skeleton . getNumArcs		574328	0					
ANR	575597	Identifier	skeleton		574328	0					
ANR	575598	Identifier	getNumArcs		574328	1					
ANR	575599	ArgumentList	i		574328	1					
ANR	575600	Argument	i		574328	0					
ANR	575601	Identifier	i		574328	0					
ANR	575602	EqualityExpression	0 == reversed . getNumArcs ( i )		574328	1		==			
ANR	575603	PrimaryExpression	0		574328	0					
ANR	575604	CallExpression	reversed . getNumArcs ( i )		574328	1					
ANR	575605	Callee	reversed . getNumArcs		574328	0					
ANR	575606	MemberAccess	reversed . getNumArcs		574328	0					
ANR	575607	Identifier	reversed		574328	0					
ANR	575608	Identifier	getNumArcs		574328	1					
ANR	575609	ArgumentList	i		574328	1					
ANR	575610	Argument	i		574328	0					
ANR	575611	Identifier	i		574328	0					
ANR	575612	ExpressionStatement	numIsolated ++	331:3:10619:10632	574328	1	True				
ANR	575613	PostIncDecOperationExpression	numIsolated ++		574328	0					
ANR	575614	Identifier	numIsolated		574328	0					
ANR	575615	IncDec	++		574328	1					
ANR	575616	ExpressionStatement		332:2:10636:10636	574328	41	True				
ANR	575617	ForStatement	for ( i = 0 ; i < getNumNodes ( ) ; i ++ )		574328	42					
ANR	575618	ForInit	i = 0 ;	335:6:10697:10700	574328	0	True				
ANR	575619	AssignmentExpression	i = 0		574328	0		=			
ANR	575620	Identifier	i		574328	0					
ANR	575621	PrimaryExpression	0		574328	1					
ANR	575622	Condition	i < getNumNodes ( )	335:11:10702:10716	574328	1	True				
ANR	575623	RelationalExpression	i < getNumNodes ( )		574328	0		<			
ANR	575624	Identifier	i		574328	0					
ANR	575625	CallExpression	getNumNodes ( )		574328	1					
ANR	575626	Callee	getNumNodes		574328	0					
ANR	575627	Identifier	getNumNodes		574328	0					
ANR	575628	ArgumentList			574328	1					
ANR	575629	PostIncDecOperationExpression	i ++	335:28:10719:10721	574328	2	True				
ANR	575630	Identifier	i		574328	0					
ANR	575631	IncDec	++		574328	1					
ANR	575632	CompoundStatement		288:2:9181:9187	574328	3					
ANR	575633	IdentifierDeclStatement	Dag * p ;	336:2:10729:10735	574328	0	True				
ANR	575634	IdentifierDecl	* p		574328	0					
ANR	575635	IdentifierDeclType	Dag *		574328	0					
ANR	575636	Identifier	p		574328	1					
ANR	575637	ExpressionStatement	"p = constituentToDag ( skeleton , colorA , constituentAncestor [ constituentIDtoAnchor [ i ] ] , constituentSink [ constituentIDtoAnchor [ i ] ] )"	337:2:10739:10887	574328	1	True				
ANR	575638	AssignmentExpression	"p = constituentToDag ( skeleton , colorA , constituentAncestor [ constituentIDtoAnchor [ i ] ] , constituentSink [ constituentIDtoAnchor [ i ] ] )"		574328	0		=			
ANR	575639	Identifier	p		574328	0					
ANR	575640	CallExpression	"constituentToDag ( skeleton , colorA , constituentAncestor [ constituentIDtoAnchor [ i ] ] , constituentSink [ constituentIDtoAnchor [ i ] ] )"		574328	1					
ANR	575641	Callee	constituentToDag		574328	0					
ANR	575642	Identifier	constituentToDag		574328	0					
ANR	575643	ArgumentList	skeleton		574328	1					
ANR	575644	Argument	skeleton		574328	0					
ANR	575645	Identifier	skeleton		574328	0					
ANR	575646	Argument	colorA		574328	1					
ANR	575647	Identifier	colorA		574328	0					
ANR	575648	Argument	constituentAncestor [ constituentIDtoAnchor [ i ] ]		574328	2					
ANR	575649	ArrayIndexing	constituentAncestor [ constituentIDtoAnchor [ i ] ]		574328	0					
ANR	575650	Identifier	constituentAncestor		574328	0					
ANR	575651	ArrayIndexing	constituentIDtoAnchor [ i ]		574328	1					
ANR	575652	Identifier	constituentIDtoAnchor		574328	0					
ANR	575653	Identifier	i		574328	1					
ANR	575654	Argument	constituentSink [ constituentIDtoAnchor [ i ] ]		574328	3					
ANR	575655	ArrayIndexing	constituentSink [ constituentIDtoAnchor [ i ] ]		574328	0					
ANR	575656	Identifier	constituentSink		574328	0					
ANR	575657	ArrayIndexing	constituentIDtoAnchor [ i ]		574328	1					
ANR	575658	Identifier	constituentIDtoAnchor		574328	0					
ANR	575659	Identifier	i		574328	1					
ANR	575660	ExpressionStatement	constituent . append ( p )	340:2:10891:10912	574328	2	True				
ANR	575661	CallExpression	constituent . append ( p )		574328	0					
ANR	575662	Callee	constituent . append		574328	0					
ANR	575663	MemberAccess	constituent . append		574328	0					
ANR	575664	Identifier	constituent		574328	0					
ANR	575665	Identifier	append		574328	1					
ANR	575666	ArgumentList	p		574328	1					
ANR	575667	Argument	p		574328	0					
ANR	575668	Identifier	p		574328	0					
ANR	575669	ExpressionStatement		341:2:10916:10916	574328	43	True				
ANR	575670	ForStatement	for ( i = 0 ; i < numNodes ; i ++ )		574328	44					
ANR	575671	ForInit	i = 0 ;	344:6:10966:10969	574328	0	True				
ANR	575672	AssignmentExpression	i = 0		574328	0		=			
ANR	575673	Identifier	i		574328	0					
ANR	575674	PrimaryExpression	0		574328	1					
ANR	575675	Condition	i < numNodes	344:11:10971:10980	574328	1	True				
ANR	575676	RelationalExpression	i < numNodes		574328	0		<			
ANR	575677	Identifier	i		574328	0					
ANR	575678	Identifier	numNodes		574328	1					
ANR	575679	PostIncDecOperationExpression	i ++	344:23:10983:10985	574328	2	True				
ANR	575680	Identifier	i		574328	0					
ANR	575681	IncDec	++		574328	1					
ANR	575682	CompoundStatement		296:29:9441:9441	574328	3					
ANR	575683	IfStatement	if ( 0 == skeleton . getNumArcs ( i ) && 0 == reversed . getNumArcs ( i ) )		574328	0					
ANR	575684	Condition	0 == skeleton . getNumArcs ( i ) && 0 == reversed . getNumArcs ( i )	345:6:10997:11050	574328	0	True				
ANR	575685	AndExpression	0 == skeleton . getNumArcs ( i ) && 0 == reversed . getNumArcs ( i )		574328	0		&&			
ANR	575686	EqualityExpression	0 == skeleton . getNumArcs ( i )		574328	0		==			
ANR	575687	PrimaryExpression	0		574328	0					
ANR	575688	CallExpression	skeleton . getNumArcs ( i )		574328	1					
ANR	575689	Callee	skeleton . getNumArcs		574328	0					
ANR	575690	MemberAccess	skeleton . getNumArcs		574328	0					
ANR	575691	Identifier	skeleton		574328	0					
ANR	575692	Identifier	getNumArcs		574328	1					
ANR	575693	ArgumentList	i		574328	1					
ANR	575694	Argument	i		574328	0					
ANR	575695	Identifier	i		574328	0					
ANR	575696	EqualityExpression	0 == reversed . getNumArcs ( i )		574328	1		==			
ANR	575697	PrimaryExpression	0		574328	0					
ANR	575698	CallExpression	reversed . getNumArcs ( i )		574328	1					
ANR	575699	Callee	reversed . getNumArcs		574328	0					
ANR	575700	MemberAccess	reversed . getNumArcs		574328	0					
ANR	575701	Identifier	reversed		574328	0					
ANR	575702	Identifier	getNumArcs		574328	1					
ANR	575703	ArgumentList	i		574328	1					
ANR	575704	Argument	i		574328	0					
ANR	575705	Identifier	i		574328	0					
ANR	575706	CompoundStatement		298:3:9511:9531	574328	1					
ANR	575707	IdentifierDeclStatement	int node = addNode ( ) ;	346:3:11059:11079	574328	0	True				
ANR	575708	IdentifierDecl	node = addNode ( )		574328	0					
ANR	575709	IdentifierDeclType	int		574328	0					
ANR	575710	Identifier	node		574328	1					
ANR	575711	AssignmentExpression	node = addNode ( )		574328	2		=			
ANR	575712	Identifier	node		574328	0					
ANR	575713	CallExpression	addNode ( )		574328	1					
ANR	575714	Callee	addNode		574328	0					
ANR	575715	Identifier	addNode		574328	0					
ANR	575716	ArgumentList			574328	1					
ANR	575717	Statement	Dag	349:3:11122:11124	574328	1	True				
ANR	575718	Statement	*	349:7:11126:11126	574328	2	True				
ANR	575719	Statement	p	349:8:11127:11127	574328	3	True				
ANR	575720	Statement	=	349:10:11129:11129	574328	4	True				
ANR	575721	Statement	new	349:12:11131:11133	574328	5	True				
ANR	575722	ExpressionStatement	Dag	349:16:11135:11138	574328	6	True				
ANR	575723	Identifier	Dag		574328	0					
ANR	575724	ExpressionStatement	p -> addNode ( )	350:3:11143:11155	574328	7	True				
ANR	575725	CallExpression	p -> addNode ( )		574328	0					
ANR	575726	Callee	p -> addNode		574328	0					
ANR	575727	PtrMemberAccess	p -> addNode		574328	0					
ANR	575728	Identifier	p		574328	0					
ANR	575729	Identifier	addNode		574328	1					
ANR	575730	ArgumentList			574328	1					
ANR	575731	ExpressionStatement	"p -> setLabelInt ( 0 , i )"	351:3:11160:11179	574328	8	True				
ANR	575732	CallExpression	"p -> setLabelInt ( 0 , i )"		574328	0					
ANR	575733	Callee	p -> setLabelInt		574328	0					
ANR	575734	PtrMemberAccess	p -> setLabelInt		574328	0					
ANR	575735	Identifier	p		574328	0					
ANR	575736	Identifier	setLabelInt		574328	1					
ANR	575737	ArgumentList	0		574328	1					
ANR	575738	Argument	0		574328	0					
ANR	575739	PrimaryExpression	0		574328	0					
ANR	575740	Argument	i		574328	1					
ANR	575741	Identifier	i		574328	0					
ANR	575742	ExpressionStatement	constituent . append ( p )	354:3:11201:11222	574328	9	True				
ANR	575743	CallExpression	constituent . append ( p )		574328	0					
ANR	575744	Callee	constituent . append		574328	0					
ANR	575745	MemberAccess	constituent . append		574328	0					
ANR	575746	Identifier	constituent		574328	0					
ANR	575747	Identifier	append		574328	1					
ANR	575748	ArgumentList	p		574328	1					
ANR	575749	Argument	p		574328	0					
ANR	575750	Identifier	p		574328	0					
ANR	575751	ExpressionStatement	type . append ( SINGLETON )	355:3:11227:11249	574328	10	True				
ANR	575752	CallExpression	type . append ( SINGLETON )		574328	0					
ANR	575753	Callee	type . append		574328	0					
ANR	575754	MemberAccess	type . append		574328	0					
ANR	575755	Identifier	type		574328	0					
ANR	575756	Identifier	append		574328	1					
ANR	575757	ArgumentList	SINGLETON		574328	1					
ANR	575758	Argument	SINGLETON		574328	0					
ANR	575759	Identifier	SINGLETON		574328	0					
ANR	575760	ExpressionStatement		356:3:11254:11254	574328	1	True				
ANR	575761	ExpressionStatement		357:2:11258:11258	574328	45	True				
ANR	575762	Statement	delete	361:1:11285:11290	574328	46	True				
ANR	575763	Statement	[	361:7:11291:11291	574328	47	True				
ANR	575764	Statement	]	361:8:11292:11292	574328	48	True				
ANR	575765	ExpressionStatement	numberOfParents	361:10:11294:11309	574328	49	True				
ANR	575766	Identifier	numberOfParents		574328	0					
ANR	575767	Statement	delete	362:1:11312:11317	574328	50	True				
ANR	575768	Statement	[	362:7:11318:11318	574328	51	True				
ANR	575769	Statement	]	362:8:11319:11319	574328	52	True				
ANR	575770	ExpressionStatement	sink	362:10:11321:11325	574328	53	True				
ANR	575771	Identifier	sink		574328	0					
ANR	575772	Statement	delete	363:1:11328:11333	574328	54	True				
ANR	575773	Statement	[	363:7:11334:11334	574328	55	True				
ANR	575774	Statement	]	363:8:11335:11335	574328	56	True				
ANR	575775	ExpressionStatement	colorS	363:10:11337:11343	574328	57	True				
ANR	575776	Identifier	colorS		574328	0					
ANR	575777	Statement	delete	364:1:11346:11351	574328	58	True				
ANR	575778	Statement	[	364:7:11352:11352	574328	59	True				
ANR	575779	Statement	]	364:8:11353:11353	574328	60	True				
ANR	575780	ExpressionStatement	ancestor	364:10:11355:11363	574328	61	True				
ANR	575781	Identifier	ancestor		574328	0					
ANR	575782	Statement	delete	365:1:11366:11371	574328	62	True				
ANR	575783	Statement	[	365:7:11372:11372	574328	63	True				
ANR	575784	Statement	]	365:8:11373:11373	574328	64	True				
ANR	575785	ExpressionStatement	colorA	365:10:11375:11381	574328	65	True				
ANR	575786	Identifier	colorA		574328	0					
ANR	575787	Statement	delete	366:1:11384:11389	574328	66	True				
ANR	575788	Statement	[	366:7:11390:11390	574328	67	True				
ANR	575789	Statement	]	366:8:11391:11391	574328	68	True				
ANR	575790	ExpressionStatement	constituentSink	366:10:11393:11408	574328	69	True				
ANR	575791	Identifier	constituentSink		574328	0					
ANR	575792	Statement	delete	367:1:11411:11416	574328	70	True				
ANR	575793	Statement	[	367:7:11417:11417	574328	71	True				
ANR	575794	Statement	]	367:8:11418:11418	574328	72	True				
ANR	575795	ExpressionStatement	constituentAncestor	367:10:11420:11439	574328	73	True				
ANR	575796	Identifier	constituentAncestor		574328	0					
ANR	575797	Statement	delete	368:1:11442:11447	574328	74	True				
ANR	575798	Statement	[	368:7:11448:11448	574328	75	True				
ANR	575799	Statement	]	368:8:11449:11449	574328	76	True				
ANR	575800	ExpressionStatement	colorIncl	368:10:11451:11460	574328	77	True				
ANR	575801	Identifier	colorIncl		574328	0					
ANR	575802	Statement	delete	369:1:11463:11468	574328	78	True				
ANR	575803	Statement	[	369:7:11469:11469	574328	79	True				
ANR	575804	Statement	]	369:8:11470:11470	574328	80	True				
ANR	575805	ExpressionStatement	minimalConstituent	369:10:11472:11490	574328	81	True				
ANR	575806	Identifier	minimalConstituent		574328	0					
ANR	575807	Statement	delete	370:1:11493:11498	574328	82	True				
ANR	575808	Statement	[	370:7:11499:11499	574328	83	True				
ANR	575809	Statement	]	370:8:11500:11500	574328	84	True				
ANR	575810	ExpressionStatement	constituentIDtoAnchor	370:10:11502:11523	574328	85	True				
ANR	575811	Identifier	constituentIDtoAnchor		574328	0					
ANR	575812	Statement	delete	371:1:11526:11531	574328	86	True				
ANR	575813	Statement	[	371:7:11532:11532	574328	87	True				
ANR	575814	Statement	]	371:8:11533:11533	574328	88	True				
ANR	575815	ExpressionStatement	sinkToConstituentID	371:10:11535:11554	574328	89	True				
ANR	575816	Identifier	sinkToConstituentID		574328	0					
ANR	575817	Identifier	Superdag :: Superdag		574328	1					
ANR	575818	ParameterList	const Dag & g		574328	2					
ANR	575819	Parameter	const Dag & g	48:19:1533:1544	574328	0	True				
ANR	575820	ParameterType	const Dag &		574328	0					
ANR	575821	Identifier	g		574328	1					
ANR	575822	CFGEntryNode	ENTRY		574328		True				
ANR	575823	CFGExitNode	EXIT		574328		True				
ANR	575824	CFGExceptionNode	EXCEPTION		574328		True				
ANR	575825	CFGExceptionNode	EXCEPTION		574328		True				
ANR	575826	CFGExceptionNode	EXCEPTION		574328		True				
ANR	575827	CFGExceptionNode	EXCEPTION		574328		True				
ANR	575828	CFGExceptionNode	EXCEPTION		574328		True				
ANR	575829	CFGExceptionNode	EXCEPTION		574328		True				
ANR	575830	CFGExceptionNode	EXCEPTION		574328		True				
ANR	575831	CFGExceptionNode	EXCEPTION		574328		True				
ANR	575832	CFGExceptionNode	EXCEPTION		574328		True				
ANR	575833	Symbol	colorA		574328						
ANR	575834	Symbol	* colorA		574328						
ANR	575835	Symbol	* sinkToConstituentID		574328						
ANR	575836	Symbol	* ancestor		574328						
ANR	575837	Symbol	constituentSink		574328						
ANR	575838	Symbol	* constituentAncestor [ i ] . getElem		574328						
ANR	575839	Symbol	* * constituentIDtoAnchor		574328						
ANR	575840	Symbol	jINi		574328						
ANR	575841	Symbol	type		574328						
ANR	575842	Symbol	skeleton		574328						
ANR	575843	Symbol	color2		574328						
ANR	575844	Symbol	getNumNodes		574328						
ANR	575845	Symbol	* constituentIDtoAnchor		574328						
ANR	575846	Symbol	minimalConstituent		574328						
ANR	575847	Symbol	* constituentSink		574328						
ANR	575848	Symbol	* colorIncl		574328						
ANR	575849	Symbol	constituentSink [ i ] . getElem		574328						
ANR	575850	Symbol	numIsolated		574328						
ANR	575851	Symbol	strict		574328						
ANR	575852	Symbol	testAincludedInB		574328						
ANR	575853	Symbol	constituentAncestor		574328						
ANR	575854	Symbol	sourceExists		574328						
ANR	575855	Symbol	* * i		574328						
ANR	575856	Symbol	NULL		574328						
ANR	575857	Symbol	last		574328						
ANR	575858	Symbol	sink		574328						
ANR	575859	Symbol	constituentAncestor [ i ] . getElem		574328						
ANR	575860	Symbol	ancestor		574328						
ANR	575861	Symbol	* constituentAncestor		574328						
ANR	575862	Symbol	skeleton . getNumNodes		574328						
ANR	575863	Symbol	done		574328						
ANR	575864	Symbol	node		574328						
ANR	575865	Symbol	numNodes		574328						
ANR	575866	Symbol	true		574328						
ANR	575867	Symbol	constituentSink [ i ] . getNumElem		574328						
ANR	575868	Symbol	constituentIDtoAnchor		574328						
ANR	575869	Symbol	color		574328						
ANR	575870	Symbol	addNode		574328						
ANR	575871	Symbol	numberOfParents		574328						
ANR	575872	Symbol	* numberOfParents		574328						
ANR	575873	Symbol	* * constituentAncestor		574328						
ANR	575874	Symbol	minimal		574328						
ANR	575875	Symbol	found		574328						
ANR	575876	Symbol	constituentToDag		574328						
ANR	575877	Symbol	constituent		574328						
ANR	575878	Symbol	constituentAncestor [ i ] . getNumElem		574328						
ANR	575879	Symbol	* minimalConstituent		574328						
ANR	575880	Symbol	INT_MAX		574328						
ANR	575881	Symbol	colorIncl		574328						
ANR	575882	Symbol	sinkToConstituentID		574328						
ANR	575883	Symbol	computeBipartiteConstituent		574328						
ANR	575884	Symbol	skeleton . getParentCountVector		574328						
ANR	575885	Symbol	lastS		574328						
ANR	575886	Symbol	BIPARTITE		574328						
ANR	575887	Symbol	COMPLEX		574328						
ANR	575888	Symbol	g		574328						
ANR	575889	Symbol	false		574328						
ANR	575890	Symbol	SINGLETON		574328						
ANR	575891	Symbol	i		574328						
ANR	575892	Symbol	j		574328						
ANR	575893	Symbol	k		574328						
ANR	575894	Symbol	iINj		574328						
ANR	575895	Symbol	* sink		574328						
ANR	575896	Symbol	colorS		574328						
ANR	575897	Symbol	reversed . getNumArcs		574328						
ANR	575898	Symbol	p		574328						
ANR	575899	Symbol	* colorS		574328						
ANR	575900	Symbol	* i		574328						
ANR	575901	Symbol	lastA		574328						
ANR	575902	Symbol	* j		574328						
ANR	575903	Symbol	skeleton . getNumArcs		574328						
ANR	575904	Symbol	reversed		574328						
ANR	575905	Function	Superdag :: ~Superdag	388:0:11739:11915							
ANR	575906	FunctionDef	Superdag :: ~Superdag ()		575905	0					
ANR	575907	CompoundStatement		389:0:11765:11915	575905	0					
ANR	575908	ForStatement	for ( int i = 0 ; i < constituent . getNumElem ( ) ; i ++ )		575905	0					
ANR	575909	ForInit	int i = 0 ;	390:6:11773:11780	575905	0	True				
ANR	575910	IdentifierDeclStatement	int i = 0 ;		575905	0					
ANR	575911	IdentifierDecl	i = 0		575905	0					
ANR	575912	IdentifierDeclType	int		575905	0					
ANR	575913	Identifier	i		575905	1					
ANR	575914	AssignmentExpression	i = 0		575905	2		=			
ANR	575915	Identifier	i		575905	0					
ANR	575916	PrimaryExpression	0		575905	1					
ANR	575917	Condition	i < constituent . getNumElem ( )	390:15:11782:11807	575905	1	True				
ANR	575918	RelationalExpression	i < constituent . getNumElem ( )		575905	0		<			
ANR	575919	Identifier	i		575905	0					
ANR	575920	CallExpression	constituent . getNumElem ( )		575905	1					
ANR	575921	Callee	constituent . getNumElem		575905	0					
ANR	575922	MemberAccess	constituent . getNumElem		575905	0					
ANR	575923	Identifier	constituent		575905	0					
ANR	575924	Identifier	getNumElem		575905	1					
ANR	575925	ArgumentList			575905	1					
ANR	575926	PostIncDecOperationExpression	i ++	390:43:11810:11812	575905	2	True				
ANR	575927	Identifier	i		575905	0					
ANR	575928	IncDec	++		575905	1					
ANR	575929	CompoundStatement		2:49:50:50	575905	3					
ANR	575930	IfStatement	if ( NULL != constituent . getElem ( i ) )		575905	0					
ANR	575931	Condition	NULL != constituent . getElem ( i )	391:6:11824:11853	575905	0	True				
ANR	575932	EqualityExpression	NULL != constituent . getElem ( i )		575905	0		!=			
ANR	575933	Identifier	NULL		575905	0					
ANR	575934	CallExpression	constituent . getElem ( i )		575905	1					
ANR	575935	Callee	constituent . getElem		575905	0					
ANR	575936	MemberAccess	constituent . getElem		575905	0					
ANR	575937	Identifier	constituent		575905	0					
ANR	575938	Identifier	getElem		575905	1					
ANR	575939	ArgumentList	i		575905	1					
ANR	575940	Argument	i		575905	0					
ANR	575941	Identifier	i		575905	0					
ANR	575942	Statement	delete	392:2:11860:11865	575905	1	True				
ANR	575943	ExpressionStatement	constituent . getElem ( i )	392:9:11867:11889	575905	1	True				
ANR	575944	CallExpression	constituent . getElem ( i )		575905	0					
ANR	575945	Callee	constituent . getElem		575905	0					
ANR	575946	MemberAccess	constituent . getElem		575905	0					
ANR	575947	Identifier	constituent		575905	0					
ANR	575948	Identifier	getElem		575905	1					
ANR	575949	ArgumentList	i		575905	1					
ANR	575950	Argument	i		575905	0					
ANR	575951	Identifier	i		575905	0					
ANR	575952	ExpressionStatement		393:2:11913:11913	575905	1	True				
ANR	575953	Identifier	Superdag :: ~Superdag		575905	1					
ANR	575954	ParameterList			575905	2					
ANR	575955	CFGEntryNode	ENTRY		575905		True				
ANR	575956	CFGExitNode	EXIT		575905		True				
ANR	575957	Symbol	NULL		575905						
ANR	575958	Symbol	constituent		575905						
ANR	575959	Symbol	constituent . getNumElem		575905						
ANR	575960	Symbol	i		575905						
ANR	575961	Symbol	constituent . getElem		575905						
ANR	575962	Function	Superdag :: getNumConstituent	411:0:12159:12239							
ANR	575963	FunctionDef	Superdag :: getNumConstituent ()		575962	0					
ANR	575964	CompoundStatement		412:0:12203:12239	575962	0					
ANR	575965	ReturnStatement	return constituent . getNumElem ( ) ;	413:1:12206:12237	575962	0	True				
ANR	575966	CallExpression	constituent . getNumElem ( )		575962	0					
ANR	575967	Callee	constituent . getNumElem		575962	0					
ANR	575968	MemberAccess	constituent . getNumElem		575962	0					
ANR	575969	Identifier	constituent		575962	0					
ANR	575970	Identifier	getNumElem		575962	1					
ANR	575971	ArgumentList			575962	1					
ANR	575972	ReturnType	int		575962	1					
ANR	575973	Identifier	Superdag :: getNumConstituent		575962	2					
ANR	575974	ParameterList			575962	3					
ANR	575975	CFGEntryNode	ENTRY		575962		True				
ANR	575976	CFGExitNode	EXIT		575962		True				
ANR	575977	Symbol	constituent		575962						
ANR	575978	Symbol	constituent . getNumElem		575962						
ANR	575979	Function	Superdag :: getConstituent	430:0:12452:12531							
ANR	575980	FunctionDef	Superdag :: getConstituent (int id)		575979	0					
ANR	575981	CompoundStatement		431:0:12496:12531	575979	0					
ANR	575982	ReturnStatement	return constituent . getElem ( id ) ;	432:1:12499:12529	575979	0	True				
ANR	575983	CallExpression	constituent . getElem ( id )		575979	0					
ANR	575984	Callee	constituent . getElem		575979	0					
ANR	575985	MemberAccess	constituent . getElem		575979	0					
ANR	575986	Identifier	constituent		575979	0					
ANR	575987	Identifier	getElem		575979	1					
ANR	575988	ArgumentList	id		575979	1					
ANR	575989	Argument	id		575979	0					
ANR	575990	Identifier	id		575979	0					
ANR	575991	ReturnType	Dag *		575979	1					
ANR	575992	Identifier	Superdag :: getConstituent		575979	2					
ANR	575993	ParameterList	int id		575979	3					
ANR	575994	Parameter	int id	430:30:12482:12487	575979	0	True				
ANR	575995	ParameterType	int		575979	0					
ANR	575996	Identifier	id		575979	1					
ANR	575997	CFGEntryNode	ENTRY		575979		True				
ANR	575998	CFGExitNode	EXIT		575979		True				
ANR	575999	Symbol	constituent		575979						
ANR	576000	Symbol	constituent . getElem		575979						
ANR	576001	Symbol	id		575979						
ANR	576002	Function	Superdag :: getType	450:0:12745:12809							
ANR	576003	FunctionDef	Superdag :: getType (int id)		576002	0					
ANR	576004	CompoundStatement		451:0:12781:12809	576002	0					
ANR	576005	ReturnStatement	return type . getElem ( id ) ;	452:1:12784:12807	576002	0	True				
ANR	576006	CallExpression	type . getElem ( id )		576002	0					
ANR	576007	Callee	type . getElem		576002	0					
ANR	576008	MemberAccess	type . getElem		576002	0					
ANR	576009	Identifier	type		576002	0					
ANR	576010	Identifier	getElem		576002	1					
ANR	576011	ArgumentList	id		576002	1					
ANR	576012	Argument	id		576002	0					
ANR	576013	Identifier	id		576002	0					
ANR	576014	ReturnType	int		576002	1					
ANR	576015	Identifier	Superdag :: getType		576002	2					
ANR	576016	ParameterList	int id		576002	3					
ANR	576017	Parameter	int id	450:22:12767:12772	576002	0	True				
ANR	576018	ParameterType	int		576002	0					
ANR	576019	Identifier	id		576002	1					
ANR	576020	CFGEntryNode	ENTRY		576002		True				
ANR	576021	CFGExitNode	EXIT		576002		True				
ANR	576022	Symbol	type . getElem		576002						
ANR	576023	Symbol	id		576002						
ANR	576024	Symbol	type		576002						
ANR	576025	Function	Superdag :: computeConstituent	481:0:13922:16495							
ANR	576026	FunctionDef	"Superdag :: computeConstituent (const Dag & skeleton , const Dag & reversed , const int * numberOfParents , int anchor , int * ancestor , int & lastA , int * sink , int & lastS , int color , int * colorA , int * colorS)"		576025	0					
ANR	576027	CompoundStatement		485:0:14157:16495	576025	0					
ANR	576028	IdentifierDeclStatement	"int k , j , u , v , first ;"	486:1:14160:14177	576025	0	True				
ANR	576029	IdentifierDecl	k		576025	0					
ANR	576030	IdentifierDeclType	int		576025	0					
ANR	576031	Identifier	k		576025	1					
ANR	576032	IdentifierDecl	j		576025	1					
ANR	576033	IdentifierDeclType	int		576025	0					
ANR	576034	Identifier	j		576025	1					
ANR	576035	IdentifierDecl	u		576025	2					
ANR	576036	IdentifierDeclType	int		576025	0					
ANR	576037	Identifier	u		576025	1					
ANR	576038	IdentifierDecl	v		576025	3					
ANR	576039	IdentifierDeclType	int		576025	0					
ANR	576040	Identifier	v		576025	1					
ANR	576041	IdentifierDecl	first		576025	4					
ANR	576042	IdentifierDeclType	int		576025	0					
ANR	576043	Identifier	first		576025	1					
ANR	576044	ExpressionStatement	ancestor [ 0 ] = anchor	489:1:14232:14252	576025	1	True				
ANR	576045	AssignmentExpression	ancestor [ 0 ] = anchor		576025	0		=			
ANR	576046	ArrayIndexing	ancestor [ 0 ]		576025	0					
ANR	576047	Identifier	ancestor		576025	0					
ANR	576048	PrimaryExpression	0		576025	1					
ANR	576049	Identifier	anchor		576025	1					
ANR	576050	ExpressionStatement	colorA [ anchor ] = color	490:1:14255:14277	576025	2	True				
ANR	576051	AssignmentExpression	colorA [ anchor ] = color		576025	0		=			
ANR	576052	ArrayIndexing	colorA [ anchor ]		576025	0					
ANR	576053	Identifier	colorA		576025	0					
ANR	576054	Identifier	anchor		576025	1					
ANR	576055	Identifier	color		576025	1					
ANR	576056	ExpressionStatement	lastA = 0	491:1:14280:14289	576025	3	True				
ANR	576057	AssignmentExpression	lastA = 0		576025	0		=			
ANR	576058	Identifier	lastA		576025	0					
ANR	576059	PrimaryExpression	0		576025	1					
ANR	576060	IdentifierDeclStatement	int processedA = - 1 ;	492:1:14292:14311	576025	4	True				
ANR	576061	IdentifierDecl	processedA = - 1		576025	0					
ANR	576062	IdentifierDeclType	int		576025	0					
ANR	576063	Identifier	processedA		576025	1					
ANR	576064	AssignmentExpression	processedA = - 1		576025	2		=			
ANR	576065	Identifier	processedA		576025	0					
ANR	576066	UnaryOperationExpression	- 1		576025	1					
ANR	576067	UnaryOperator	-		576025	0					
ANR	576068	PrimaryExpression	1		576025	1					
ANR	576069	ExpressionStatement	lastS = - 1	495:1:14354:14364	576025	5	True				
ANR	576070	AssignmentExpression	lastS = - 1		576025	0		=			
ANR	576071	Identifier	lastS		576025	0					
ANR	576072	UnaryOperationExpression	- 1		576025	1					
ANR	576073	UnaryOperator	-		576025	0					
ANR	576074	PrimaryExpression	1		576025	1					
ANR	576075	IdentifierDeclStatement	int processedS = - 1 ;	496:1:14367:14386	576025	6	True				
ANR	576076	IdentifierDecl	processedS = - 1		576025	0					
ANR	576077	IdentifierDeclType	int		576025	0					
ANR	576078	Identifier	processedS		576025	1					
ANR	576079	AssignmentExpression	processedS = - 1		576025	2		=			
ANR	576080	Identifier	processedS		576025	0					
ANR	576081	UnaryOperationExpression	- 1		576025	1					
ANR	576082	UnaryOperator	-		576025	0					
ANR	576083	PrimaryExpression	1		576025	1					
ANR	576084	WhileStatement	while ( processedA < lastA || processedS < lastS )		576025	7					
ANR	576085	Condition	processedA < lastA || processedS < lastS	498:8:14397:14432	576025	0	True				
ANR	576086	OrExpression	processedA < lastA || processedS < lastS		576025	0		||			
ANR	576087	RelationalExpression	processedA < lastA		576025	0		<			
ANR	576088	Identifier	processedA		576025	0					
ANR	576089	Identifier	lastA		576025	1					
ANR	576090	RelationalExpression	processedS < lastS		576025	1		<			
ANR	576091	Identifier	processedS		576025	0					
ANR	576092	Identifier	lastS		576025	1					
ANR	576093	CompoundStatement		14:47:278:278	576025	1					
ANR	576094	ForStatement	for ( j = processedA + 1 ; j <= lastA ; j ++ )		576025	0					
ANR	576095	ForInit	j = processedA + 1 ;	501:7:14469:14483	576025	0	True				
ANR	576096	AssignmentExpression	j = processedA + 1		576025	0		=			
ANR	576097	Identifier	j		576025	0					
ANR	576098	AdditiveExpression	processedA + 1		576025	1		+			
ANR	576099	Identifier	processedA		576025	0					
ANR	576100	PrimaryExpression	1		576025	1					
ANR	576101	Condition	j <= lastA	501:23:14485:14492	576025	1	True				
ANR	576102	RelationalExpression	j <= lastA		576025	0		<=			
ANR	576103	Identifier	j		576025	0					
ANR	576104	Identifier	lastA		576025	1					
ANR	576105	PostIncDecOperationExpression	j ++	501:33:14495:14497	576025	2	True				
ANR	576106	Identifier	j		576025	0					
ANR	576107	IncDec	++		576025	1					
ANR	576108	CompoundStatement		19:3:390:436	576025	3					
ANR	576109	IdentifierDeclStatement	int numArcs = skeleton . getNumArcs ( ancestor [ j ] ) ;	503:3:14548:14594	576025	0	True				
ANR	576110	IdentifierDecl	numArcs = skeleton . getNumArcs ( ancestor [ j ] )		576025	0					
ANR	576111	IdentifierDeclType	int		576025	0					
ANR	576112	Identifier	numArcs		576025	1					
ANR	576113	AssignmentExpression	numArcs = skeleton . getNumArcs ( ancestor [ j ] )		576025	2		=			
ANR	576114	Identifier	numArcs		576025	0					
ANR	576115	CallExpression	skeleton . getNumArcs ( ancestor [ j ] )		576025	1					
ANR	576116	Callee	skeleton . getNumArcs		576025	0					
ANR	576117	MemberAccess	skeleton . getNumArcs		576025	0					
ANR	576118	Identifier	skeleton		576025	0					
ANR	576119	Identifier	getNumArcs		576025	1					
ANR	576120	ArgumentList	ancestor [ j ]		576025	1					
ANR	576121	Argument	ancestor [ j ]		576025	0					
ANR	576122	ArrayIndexing	ancestor [ j ]		576025	0					
ANR	576123	Identifier	ancestor		576025	0					
ANR	576124	Identifier	j		576025	1					
ANR	576125	ForStatement	for ( k = 0 ; k < numArcs ; k ++ )		576025	1					
ANR	576126	ForInit	k = 0 ;	504:8:14604:14607	576025	0	True				
ANR	576127	AssignmentExpression	k = 0		576025	0		=			
ANR	576128	Identifier	k		576025	0					
ANR	576129	PrimaryExpression	0		576025	1					
ANR	576130	Condition	k < numArcs	504:13:14609:14617	576025	1	True				
ANR	576131	RelationalExpression	k < numArcs		576025	0		<			
ANR	576132	Identifier	k		576025	0					
ANR	576133	Identifier	numArcs		576025	1					
ANR	576134	PostIncDecOperationExpression	k ++	504:24:14620:14622	576025	2	True				
ANR	576135	Identifier	k		576025	0					
ANR	576136	IncDec	++		576025	1					
ANR	576137	CompoundStatement		20:30:468:468	576025	3					
ANR	576138	ExpressionStatement	"v = skeleton . getArc ( ancestor [ j ] , k )"	505:4:14632:14666	576025	0	True				
ANR	576139	AssignmentExpression	"v = skeleton . getArc ( ancestor [ j ] , k )"		576025	0		=			
ANR	576140	Identifier	v		576025	0					
ANR	576141	CallExpression	"skeleton . getArc ( ancestor [ j ] , k )"		576025	1					
ANR	576142	Callee	skeleton . getArc		576025	0					
ANR	576143	MemberAccess	skeleton . getArc		576025	0					
ANR	576144	Identifier	skeleton		576025	0					
ANR	576145	Identifier	getArc		576025	1					
ANR	576146	ArgumentList	ancestor [ j ]		576025	1					
ANR	576147	Argument	ancestor [ j ]		576025	0					
ANR	576148	ArrayIndexing	ancestor [ j ]		576025	0					
ANR	576149	Identifier	ancestor		576025	0					
ANR	576150	Identifier	j		576025	1					
ANR	576151	Argument	k		576025	1					
ANR	576152	Identifier	k		576025	0					
ANR	576153	IfStatement	if ( colorS [ v ] != color )		576025	1					
ANR	576154	Condition	colorS [ v ] != color	506:8:14676:14693	576025	0	True				
ANR	576155	EqualityExpression	colorS [ v ] != color		576025	0		!=			
ANR	576156	ArrayIndexing	colorS [ v ]		576025	0					
ANR	576157	Identifier	colorS		576025	0					
ANR	576158	Identifier	v		576025	1					
ANR	576159	Identifier	color		576025	1					
ANR	576160	CompoundStatement		22:29:539:539	576025	1					
ANR	576161	ExpressionStatement	lastS ++	507:5:14704:14711	576025	0	True				
ANR	576162	PostIncDecOperationExpression	lastS ++		576025	0					
ANR	576163	Identifier	lastS		576025	0					
ANR	576164	IncDec	++		576025	1					
ANR	576165	ExpressionStatement	sink [ lastS ] = v	508:5:14718:14733	576025	1	True				
ANR	576166	AssignmentExpression	sink [ lastS ] = v		576025	0		=			
ANR	576167	ArrayIndexing	sink [ lastS ]		576025	0					
ANR	576168	Identifier	sink		576025	0					
ANR	576169	Identifier	lastS		576025	1					
ANR	576170	Identifier	v		576025	1					
ANR	576171	ExpressionStatement	colorS [ v ] = color	509:5:14740:14757	576025	2	True				
ANR	576172	AssignmentExpression	colorS [ v ] = color		576025	0		=			
ANR	576173	ArrayIndexing	colorS [ v ]		576025	0					
ANR	576174	Identifier	colorS		576025	0					
ANR	576175	Identifier	v		576025	1					
ANR	576176	Identifier	color		576025	1					
ANR	576177	ExpressionStatement		510:5:14764:14764	576025	2	True				
ANR	576178	ExpressionStatement		511:4:14770:14770	576025	2	True				
ANR	576179	ExpressionStatement	processedA ++	512:3:14775:14787	576025	3	True				
ANR	576180	PostIncDecOperationExpression	processedA ++		576025	0					
ANR	576181	Identifier	processedA		576025	0					
ANR	576182	IncDec	++		576025	1					
ANR	576183	ExpressionStatement		513:3:14792:14792	576025	1	True				
ANR	576184	ForStatement	for ( j = processedS + 1 ; j <= lastS ; j ++ )		576025	2					
ANR	576185	ForInit	j = processedS + 1 ;	519:7:14930:14944	576025	0	True				
ANR	576186	AssignmentExpression	j = processedS + 1		576025	0		=			
ANR	576187	Identifier	j		576025	0					
ANR	576188	AdditiveExpression	processedS + 1		576025	1		+			
ANR	576189	Identifier	processedS		576025	0					
ANR	576190	PrimaryExpression	1		576025	1					
ANR	576191	Condition	j <= lastS	519:23:14946:14953	576025	1	True				
ANR	576192	RelationalExpression	j <= lastS		576025	0		<=			
ANR	576193	Identifier	j		576025	0					
ANR	576194	Identifier	lastS		576025	1					
ANR	576195	PostIncDecOperationExpression	j ++	519:33:14956:14958	576025	2	True				
ANR	576196	Identifier	j		576025	0					
ANR	576197	IncDec	++		576025	1					
ANR	576198	CompoundStatement		40:3:997:1039	576025	3					
ANR	576199	IdentifierDeclStatement	int numArcs = reversed . getNumArcs ( sink [ j ] ) ;	524:3:15155:15197	576025	0	True				
ANR	576200	IdentifierDecl	numArcs = reversed . getNumArcs ( sink [ j ] )		576025	0					
ANR	576201	IdentifierDeclType	int		576025	0					
ANR	576202	Identifier	numArcs		576025	1					
ANR	576203	AssignmentExpression	numArcs = reversed . getNumArcs ( sink [ j ] )		576025	2		=			
ANR	576204	Identifier	numArcs		576025	0					
ANR	576205	CallExpression	reversed . getNumArcs ( sink [ j ] )		576025	1					
ANR	576206	Callee	reversed . getNumArcs		576025	0					
ANR	576207	MemberAccess	reversed . getNumArcs		576025	0					
ANR	576208	Identifier	reversed		576025	0					
ANR	576209	Identifier	getNumArcs		576025	1					
ANR	576210	ArgumentList	sink [ j ]		576025	1					
ANR	576211	Argument	sink [ j ]		576025	0					
ANR	576212	ArrayIndexing	sink [ j ]		576025	0					
ANR	576213	Identifier	sink		576025	0					
ANR	576214	Identifier	j		576025	1					
ANR	576215	ForStatement	for ( k = 0 ; k < numArcs ; k ++ )		576025	1					
ANR	576216	ForInit	k = 0 ;	525:8:15207:15210	576025	0	True				
ANR	576217	AssignmentExpression	k = 0		576025	0		=			
ANR	576218	Identifier	k		576025	0					
ANR	576219	PrimaryExpression	0		576025	1					
ANR	576220	Condition	k < numArcs	525:13:15212:15220	576025	1	True				
ANR	576221	RelationalExpression	k < numArcs		576025	0		<			
ANR	576222	Identifier	k		576025	0					
ANR	576223	Identifier	numArcs		576025	1					
ANR	576224	PostIncDecOperationExpression	k ++	525:24:15223:15225	576025	2	True				
ANR	576225	Identifier	k		576025	0					
ANR	576226	IncDec	++		576025	1					
ANR	576227	CompoundStatement		41:30:1071:1071	576025	3					
ANR	576228	ExpressionStatement	"u = reversed . getArc ( sink [ j ] , k )"	526:4:15235:15265	576025	0	True				
ANR	576229	AssignmentExpression	"u = reversed . getArc ( sink [ j ] , k )"		576025	0		=			
ANR	576230	Identifier	u		576025	0					
ANR	576231	CallExpression	"reversed . getArc ( sink [ j ] , k )"		576025	1					
ANR	576232	Callee	reversed . getArc		576025	0					
ANR	576233	MemberAccess	reversed . getArc		576025	0					
ANR	576234	Identifier	reversed		576025	0					
ANR	576235	Identifier	getArc		576025	1					
ANR	576236	ArgumentList	sink [ j ]		576025	1					
ANR	576237	Argument	sink [ j ]		576025	0					
ANR	576238	ArrayIndexing	sink [ j ]		576025	0					
ANR	576239	Identifier	sink		576025	0					
ANR	576240	Identifier	j		576025	1					
ANR	576241	Argument	k		576025	1					
ANR	576242	Identifier	k		576025	0					
ANR	576243	IfStatement	if ( colorA [ u ] != color && - 1 != numberOfParents [ u ] )		576025	1					
ANR	576244	Condition	colorA [ u ] != color && - 1 != numberOfParents [ u ]	527:9:15276:15322	576025	0	True				
ANR	576245	AndExpression	colorA [ u ] != color && - 1 != numberOfParents [ u ]		576025	0		&&			
ANR	576246	EqualityExpression	colorA [ u ] != color		576025	0		!=			
ANR	576247	ArrayIndexing	colorA [ u ]		576025	0					
ANR	576248	Identifier	colorA		576025	0					
ANR	576249	Identifier	u		576025	1					
ANR	576250	Identifier	color		576025	1					
ANR	576251	EqualityExpression	- 1 != numberOfParents [ u ]		576025	1		!=			
ANR	576252	UnaryOperationExpression	- 1		576025	0					
ANR	576253	UnaryOperator	-		576025	0					
ANR	576254	PrimaryExpression	1		576025	1					
ANR	576255	ArrayIndexing	numberOfParents [ u ]		576025	1					
ANR	576256	Identifier	numberOfParents		576025	0					
ANR	576257	Identifier	u		576025	1					
ANR	576258	CompoundStatement		43:60:1169:1169	576025	1					
ANR	576259	ExpressionStatement	lastA ++	529:5:15412:15419	576025	0	True				
ANR	576260	PostIncDecOperationExpression	lastA ++		576025	0					
ANR	576261	Identifier	lastA		576025	0					
ANR	576262	IncDec	++		576025	1					
ANR	576263	ExpressionStatement	ancestor [ lastA ] = u	530:5:15426:15445	576025	1	True				
ANR	576264	AssignmentExpression	ancestor [ lastA ] = u		576025	0		=			
ANR	576265	ArrayIndexing	ancestor [ lastA ]		576025	0					
ANR	576266	Identifier	ancestor		576025	0					
ANR	576267	Identifier	lastA		576025	1					
ANR	576268	Identifier	u		576025	1					
ANR	576269	ExpressionStatement	colorA [ u ] = color	531:5:15452:15469	576025	2	True				
ANR	576270	AssignmentExpression	colorA [ u ] = color		576025	0		=			
ANR	576271	ArrayIndexing	colorA [ u ]		576025	0					
ANR	576272	Identifier	colorA		576025	0					
ANR	576273	Identifier	u		576025	1					
ANR	576274	Identifier	color		576025	1					
ANR	576275	ExpressionStatement		532:5:15476:15476	576025	2	True				
ANR	576276	ExpressionStatement		533:4:15482:15482	576025	2	True				
ANR	576277	IfStatement	if ( processedA < lastA )		576025	3					
ANR	576278	Condition	processedA < lastA	535:7:15538:15555	576025	0	True				
ANR	576279	RelationalExpression	processedA < lastA		576025	0		<			
ANR	576280	Identifier	processedA		576025	0					
ANR	576281	Identifier	lastA		576025	1					
ANR	576282	CompoundStatement		51:28:1401:1401	576025	1					
ANR	576283	ExpressionStatement	first = processedA + 1	538:4:15644:15664	576025	0	True				
ANR	576284	AssignmentExpression	first = processedA + 1		576025	0		=			
ANR	576285	Identifier	first		576025	0					
ANR	576286	AdditiveExpression	processedA + 1		576025	1		+			
ANR	576287	Identifier	processedA		576025	0					
ANR	576288	PrimaryExpression	1		576025	1					
ANR	576289	WhileStatement	while ( first <= lastA )		576025	1					
ANR	576290	Condition	first <= lastA	539:11:15677:15690	576025	0	True				
ANR	576291	RelationalExpression	first <= lastA		576025	0		<=			
ANR	576292	Identifier	first		576025	0					
ANR	576293	Identifier	lastA		576025	1					
ANR	576294	CompoundStatement		59:5:1680:1730	576025	1					
ANR	576295	IdentifierDeclStatement	int numArcs = reversed . getNumArcs ( ancestor [ first ] ) ;	543:5:15838:15888	576025	0	True				
ANR	576296	IdentifierDecl	numArcs = reversed . getNumArcs ( ancestor [ first ] )		576025	0					
ANR	576297	IdentifierDeclType	int		576025	0					
ANR	576298	Identifier	numArcs		576025	1					
ANR	576299	AssignmentExpression	numArcs = reversed . getNumArcs ( ancestor [ first ] )		576025	2		=			
ANR	576300	Identifier	numArcs		576025	0					
ANR	576301	CallExpression	reversed . getNumArcs ( ancestor [ first ] )		576025	1					
ANR	576302	Callee	reversed . getNumArcs		576025	0					
ANR	576303	MemberAccess	reversed . getNumArcs		576025	0					
ANR	576304	Identifier	reversed		576025	0					
ANR	576305	Identifier	getNumArcs		576025	1					
ANR	576306	ArgumentList	ancestor [ first ]		576025	1					
ANR	576307	Argument	ancestor [ first ]		576025	0					
ANR	576308	ArrayIndexing	ancestor [ first ]		576025	0					
ANR	576309	Identifier	ancestor		576025	0					
ANR	576310	Identifier	first		576025	1					
ANR	576311	ForStatement	for ( k = 0 ; k < numArcs ; k ++ )		576025	1					
ANR	576312	ForInit	k = 0 ;	544:10:15900:15903	576025	0	True				
ANR	576313	AssignmentExpression	k = 0		576025	0		=			
ANR	576314	Identifier	k		576025	0					
ANR	576315	PrimaryExpression	0		576025	1					
ANR	576316	Condition	k < numArcs	544:15:15905:15913	576025	1	True				
ANR	576317	RelationalExpression	k < numArcs		576025	0		<			
ANR	576318	Identifier	k		576025	0					
ANR	576319	Identifier	numArcs		576025	1					
ANR	576320	PostIncDecOperationExpression	k ++	544:26:15916:15918	576025	2	True				
ANR	576321	Identifier	k		576025	0					
ANR	576322	IncDec	++		576025	1					
ANR	576323	CompoundStatement		60:32:1764:1764	576025	3					
ANR	576324	ExpressionStatement	"u = reversed . getArc ( ancestor [ first ] , k )"	545:6:15930:15968	576025	0	True				
ANR	576325	AssignmentExpression	"u = reversed . getArc ( ancestor [ first ] , k )"		576025	0		=			
ANR	576326	Identifier	u		576025	0					
ANR	576327	CallExpression	"reversed . getArc ( ancestor [ first ] , k )"		576025	1					
ANR	576328	Callee	reversed . getArc		576025	0					
ANR	576329	MemberAccess	reversed . getArc		576025	0					
ANR	576330	Identifier	reversed		576025	0					
ANR	576331	Identifier	getArc		576025	1					
ANR	576332	ArgumentList	ancestor [ first ]		576025	1					
ANR	576333	Argument	ancestor [ first ]		576025	0					
ANR	576334	ArrayIndexing	ancestor [ first ]		576025	0					
ANR	576335	Identifier	ancestor		576025	0					
ANR	576336	Identifier	first		576025	1					
ANR	576337	Argument	k		576025	1					
ANR	576338	Identifier	k		576025	0					
ANR	576339	IfStatement	if ( colorA [ u ] != color && - 1 != numberOfParents [ u ] )		576025	1					
ANR	576340	Condition	colorA [ u ] != color && - 1 != numberOfParents [ u ]	546:10:15980:16026	576025	0	True				
ANR	576341	AndExpression	colorA [ u ] != color && - 1 != numberOfParents [ u ]		576025	0		&&			
ANR	576342	EqualityExpression	colorA [ u ] != color		576025	0		!=			
ANR	576343	ArrayIndexing	colorA [ u ]		576025	0					
ANR	576344	Identifier	colorA		576025	0					
ANR	576345	Identifier	u		576025	1					
ANR	576346	Identifier	color		576025	1					
ANR	576347	EqualityExpression	- 1 != numberOfParents [ u ]		576025	1		!=			
ANR	576348	UnaryOperationExpression	- 1		576025	0					
ANR	576349	UnaryOperator	-		576025	0					
ANR	576350	PrimaryExpression	1		576025	1					
ANR	576351	ArrayIndexing	numberOfParents [ u ]		576025	1					
ANR	576352	Identifier	numberOfParents		576025	0					
ANR	576353	Identifier	u		576025	1					
ANR	576354	CompoundStatement		62:60:1872:1872	576025	1					
ANR	576355	ExpressionStatement	lastA ++	547:7:16039:16046	576025	0	True				
ANR	576356	PostIncDecOperationExpression	lastA ++		576025	0					
ANR	576357	Identifier	lastA		576025	0					
ANR	576358	IncDec	++		576025	1					
ANR	576359	ExpressionStatement	ancestor [ lastA ] = u	548:7:16055:16074	576025	1	True				
ANR	576360	AssignmentExpression	ancestor [ lastA ] = u		576025	0		=			
ANR	576361	ArrayIndexing	ancestor [ lastA ]		576025	0					
ANR	576362	Identifier	ancestor		576025	0					
ANR	576363	Identifier	lastA		576025	1					
ANR	576364	Identifier	u		576025	1					
ANR	576365	ExpressionStatement	colorA [ u ] = color	549:7:16083:16100	576025	2	True				
ANR	576366	AssignmentExpression	colorA [ u ] = color		576025	0		=			
ANR	576367	ArrayIndexing	colorA [ u ]		576025	0					
ANR	576368	Identifier	colorA		576025	0					
ANR	576369	Identifier	u		576025	1					
ANR	576370	Identifier	color		576025	1					
ANR	576371	ExpressionStatement		550:7:16109:16109	576025	2	True				
ANR	576372	ExpressionStatement		551:6:16117:16117	576025	2	True				
ANR	576373	ExpressionStatement	first ++	554:5:16147:16154	576025	3	True				
ANR	576374	PostIncDecOperationExpression	first ++		576025	0					
ANR	576375	Identifier	first		576025	0					
ANR	576376	IncDec	++		576025	1					
ANR	576377	ExpressionStatement		556:5:16162:16162	576025	2	True				
ANR	576378	ExpressionStatement		557:4:16168:16168	576025	4	True				
ANR	576379	ExpressionStatement	processedS ++	559:3:16174:16186	576025	5	True				
ANR	576380	PostIncDecOperationExpression	processedS ++		576025	0					
ANR	576381	Identifier	processedS		576025	0					
ANR	576382	IncDec	++		576025	1					
ANR	576383	ExpressionStatement		560:3:16191:16191	576025	3	True				
ANR	576384	ExpressionStatement		561:2:16195:16195	576025	8	True				
ANR	576385	IdentifierDeclStatement	int current = 0 ;	564:1:16247:16260	576025	9	True				
ANR	576386	IdentifierDecl	current = 0		576025	0					
ANR	576387	IdentifierDeclType	int		576025	0					
ANR	576388	Identifier	current		576025	1					
ANR	576389	AssignmentExpression	current = 0		576025	2		=			
ANR	576390	Identifier	current		576025	0					
ANR	576391	PrimaryExpression	0		576025	1					
ANR	576392	IdentifierDeclStatement	int lastOK = - 1 ;	565:1:16263:16276	576025	10	True				
ANR	576393	IdentifierDecl	lastOK = - 1		576025	0					
ANR	576394	IdentifierDeclType	int		576025	0					
ANR	576395	Identifier	lastOK		576025	1					
ANR	576396	AssignmentExpression	lastOK = - 1		576025	2		=			
ANR	576397	Identifier	lastOK		576025	0					
ANR	576398	UnaryOperationExpression	- 1		576025	1					
ANR	576399	UnaryOperator	-		576025	0					
ANR	576400	PrimaryExpression	1		576025	1					
ANR	576401	WhileStatement	while ( current <= lastS )		576025	11					
ANR	576402	Condition	current <= lastS	566:8:16286:16299	576025	0	True				
ANR	576403	RelationalExpression	current <= lastS		576025	0		<=			
ANR	576404	Identifier	current		576025	0					
ANR	576405	Identifier	lastS		576025	1					
ANR	576406	CompoundStatement		82:25:2145:2145	576025	1					
ANR	576407	IfStatement	if ( colorA [ sink [ current ] ] != color )		576025	0					
ANR	576408	Condition	colorA [ sink [ current ] ] != color	569:6:16370:16401	576025	0	True				
ANR	576409	EqualityExpression	colorA [ sink [ current ] ] != color		576025	0		!=			
ANR	576410	ArrayIndexing	colorA [ sink [ current ] ]		576025	0					
ANR	576411	Identifier	colorA		576025	0					
ANR	576412	ArrayIndexing	sink [ current ]		576025	1					
ANR	576413	Identifier	sink		576025	0					
ANR	576414	Identifier	current		576025	1					
ANR	576415	Identifier	color		576025	1					
ANR	576416	CompoundStatement		85:41:2247:2247	576025	1					
ANR	576417	ExpressionStatement	lastOK ++	570:3:16410:16418	576025	0	True				
ANR	576418	PostIncDecOperationExpression	lastOK ++		576025	0					
ANR	576419	Identifier	lastOK		576025	0					
ANR	576420	IncDec	++		576025	1					
ANR	576421	ExpressionStatement	sink [ lastOK ] = sink [ current ]	571:3:16423:16451	576025	1	True				
ANR	576422	AssignmentExpression	sink [ lastOK ] = sink [ current ]		576025	0		=			
ANR	576423	ArrayIndexing	sink [ lastOK ]		576025	0					
ANR	576424	Identifier	sink		576025	0					
ANR	576425	Identifier	lastOK		576025	1					
ANR	576426	ArrayIndexing	sink [ current ]		576025	1					
ANR	576427	Identifier	sink		576025	0					
ANR	576428	Identifier	current		576025	1					
ANR	576429	ExpressionStatement		572:3:16456:16456	576025	1	True				
ANR	576430	ExpressionStatement	current ++	574:2:16463:16472	576025	2	True				
ANR	576431	PostIncDecOperationExpression	current ++		576025	0					
ANR	576432	Identifier	current		576025	0					
ANR	576433	IncDec	++		576025	1					
ANR	576434	ExpressionStatement		575:2:16476:16476	576025	12	True				
ANR	576435	ExpressionStatement	lastS = lastOK	576:1:16479:16493	576025	13	True				
ANR	576436	AssignmentExpression	lastS = lastOK		576025	0		=			
ANR	576437	Identifier	lastS		576025	0					
ANR	576438	Identifier	lastOK		576025	1					
ANR	576439	ReturnType	void		576025	1					
ANR	576440	Identifier	Superdag :: computeConstituent		576025	2					
ANR	576441	ParameterList	"const Dag & skeleton , const Dag & reversed , const int * numberOfParents , int anchor , int * ancestor , int & lastA , int * sink , int & lastS , int color , int * colorA , int * colorS"		576025	3					
ANR	576442	Parameter	const Dag & skeleton	481:35:13957:13975	576025	0	True				
ANR	576443	ParameterType	const Dag &		576025	0					
ANR	576444	Identifier	skeleton		576025	1					
ANR	576445	Parameter	const Dag & reversed	481:56:13978:13996	576025	1	True				
ANR	576446	ParameterType	const Dag &		576025	0					
ANR	576447	Identifier	reversed		576025	1					
ANR	576448	Parameter	const int * numberOfParents	482:9:14009:14034	576025	2	True				
ANR	576449	ParameterType	const int *		576025	0					
ANR	576450	Identifier	numberOfParents		576025	1					
ANR	576451	Parameter	int anchor	482:37:14037:14046	576025	3	True				
ANR	576452	ParameterType	int		576025	0					
ANR	576453	Identifier	anchor		576025	1					
ANR	576454	Parameter	int * ancestor	483:9:14059:14071	576025	4	True				
ANR	576455	ParameterType	int *		576025	0					
ANR	576456	Identifier	ancestor		576025	1					
ANR	576457	Parameter	int & lastA	483:24:14074:14083	576025	5	True				
ANR	576458	ParameterType	int &		576025	0					
ANR	576459	Identifier	lastA		576025	1					
ANR	576460	Parameter	int * sink	483:36:14086:14094	576025	6	True				
ANR	576461	ParameterType	int *		576025	0					
ANR	576462	Identifier	sink		576025	1					
ANR	576463	Parameter	int & lastS	483:47:14097:14106	576025	7	True				
ANR	576464	ParameterType	int &		576025	0					
ANR	576465	Identifier	lastS		576025	1					
ANR	576466	Parameter	int color	484:9:14119:14127	576025	8	True				
ANR	576467	ParameterType	int		576025	0					
ANR	576468	Identifier	color		576025	1					
ANR	576469	Parameter	int * colorA	484:20:14130:14140	576025	9	True				
ANR	576470	ParameterType	int *		576025	0					
ANR	576471	Identifier	colorA		576025	1					
ANR	576472	Parameter	int * colorS	484:33:14143:14153	576025	10	True				
ANR	576473	ParameterType	int *		576025	0					
ANR	576474	Identifier	colorS		576025	1					
ANR	576475	CFGEntryNode	ENTRY		576025		True				
ANR	576476	CFGExitNode	EXIT		576025		True				
ANR	576477	Symbol	colorA		576025						
ANR	576478	Symbol	* v		576025						
ANR	576479	Symbol	* colorA		576025						
ANR	576480	Symbol	color		576025						
ANR	576481	Symbol	* ancestor		576025						
ANR	576482	Symbol	* lastS		576025						
ANR	576483	Symbol	* current		576025						
ANR	576484	Symbol	numberOfParents		576025						
ANR	576485	Symbol	* numberOfParents		576025						
ANR	576486	Symbol	* anchor		576025						
ANR	576487	Symbol	skeleton		576025						
ANR	576488	Symbol	current		576025						
ANR	576489	Symbol	reversed . getArc		576025						
ANR	576490	Symbol	* first		576025						
ANR	576491	Symbol	processedA		576025						
ANR	576492	Symbol	lastS		576025						
ANR	576493	Symbol	* * sink		576025						
ANR	576494	Symbol	skeleton . getArc		576025						
ANR	576495	Symbol	sink		576025						
ANR	576496	Symbol	ancestor		576025						
ANR	576497	Symbol	j		576025						
ANR	576498	Symbol	lastOK		576025						
ANR	576499	Symbol	k		576025						
ANR	576500	Symbol	* sink		576025						
ANR	576501	Symbol	colorS		576025						
ANR	576502	Symbol	processedS		576025						
ANR	576503	Symbol	reversed . getNumArcs		576025						
ANR	576504	Symbol	* colorS		576025						
ANR	576505	Symbol	* * current		576025						
ANR	576506	Symbol	lastA		576025						
ANR	576507	Symbol	numArcs		576025						
ANR	576508	Symbol	* j		576025						
ANR	576509	Symbol	u		576025						
ANR	576510	Symbol	* lastA		576025						
ANR	576511	Symbol	v		576025						
ANR	576512	Symbol	anchor		576025						
ANR	576513	Symbol	skeleton . getNumArcs		576025						
ANR	576514	Symbol	* lastOK		576025						
ANR	576515	Symbol	reversed		576025						
ANR	576516	Symbol	first		576025						
ANR	576517	Symbol	* u		576025						
ANR	576518	Function	Superdag :: computeBipartiteConstituent	597:0:17081:19342							
ANR	576519	FunctionDef	"Superdag :: computeBipartiteConstituent (const Dag & skeleton , const Dag & reversed , const int * numberOfParents , int anchor , int * ancestor , int & lastA , int * sink , int & lastS , int color , int * colorA , int * colorS)"		576518	0					
ANR	576520	CompoundStatement		600:0:17318:19342	576518	0					
ANR	576521	IdentifierDeclStatement	"int k , j , u , v , first ;"	601:1:17321:17338	576518	0	True				
ANR	576522	IdentifierDecl	k		576518	0					
ANR	576523	IdentifierDeclType	int		576518	0					
ANR	576524	Identifier	k		576518	1					
ANR	576525	IdentifierDecl	j		576518	1					
ANR	576526	IdentifierDeclType	int		576518	0					
ANR	576527	Identifier	j		576518	1					
ANR	576528	IdentifierDecl	u		576518	2					
ANR	576529	IdentifierDeclType	int		576518	0					
ANR	576530	Identifier	u		576518	1					
ANR	576531	IdentifierDecl	v		576518	3					
ANR	576532	IdentifierDeclType	int		576518	0					
ANR	576533	Identifier	v		576518	1					
ANR	576534	IdentifierDecl	first		576518	4					
ANR	576535	IdentifierDeclType	int		576518	0					
ANR	576536	Identifier	first		576518	1					
ANR	576537	IdentifierDeclStatement	bool bipartite = true ;	603:1:17342:17363	576518	1	True				
ANR	576538	IdentifierDecl	bipartite = true		576518	0					
ANR	576539	IdentifierDeclType	bool		576518	0					
ANR	576540	Identifier	bipartite		576518	1					
ANR	576541	AssignmentExpression	bipartite = true		576518	2		=			
ANR	576542	Identifier	true		576518	0					
ANR	576543	Identifier	true		576518	1					
ANR	576544	ExpressionStatement	ancestor [ 0 ] = anchor	606:1:17418:17438	576518	2	True				
ANR	576545	AssignmentExpression	ancestor [ 0 ] = anchor		576518	0		=			
ANR	576546	ArrayIndexing	ancestor [ 0 ]		576518	0					
ANR	576547	Identifier	ancestor		576518	0					
ANR	576548	PrimaryExpression	0		576518	1					
ANR	576549	Identifier	anchor		576518	1					
ANR	576550	ExpressionStatement	colorA [ anchor ] = color	607:1:17441:17463	576518	3	True				
ANR	576551	AssignmentExpression	colorA [ anchor ] = color		576518	0		=			
ANR	576552	ArrayIndexing	colorA [ anchor ]		576518	0					
ANR	576553	Identifier	colorA		576518	0					
ANR	576554	Identifier	anchor		576518	1					
ANR	576555	Identifier	color		576518	1					
ANR	576556	ExpressionStatement	lastA = 0	608:1:17466:17475	576518	4	True				
ANR	576557	AssignmentExpression	lastA = 0		576518	0		=			
ANR	576558	Identifier	lastA		576518	0					
ANR	576559	PrimaryExpression	0		576518	1					
ANR	576560	IdentifierDeclStatement	int processedA = - 1 ;	609:1:17478:17497	576518	5	True				
ANR	576561	IdentifierDecl	processedA = - 1		576518	0					
ANR	576562	IdentifierDeclType	int		576518	0					
ANR	576563	Identifier	processedA		576518	1					
ANR	576564	AssignmentExpression	processedA = - 1		576518	2		=			
ANR	576565	Identifier	processedA		576518	0					
ANR	576566	UnaryOperationExpression	- 1		576518	1					
ANR	576567	UnaryOperator	-		576518	0					
ANR	576568	PrimaryExpression	1		576518	1					
ANR	576569	ExpressionStatement	lastS = - 1	612:1:17540:17550	576518	6	True				
ANR	576570	AssignmentExpression	lastS = - 1		576518	0		=			
ANR	576571	Identifier	lastS		576518	0					
ANR	576572	UnaryOperationExpression	- 1		576518	1					
ANR	576573	UnaryOperator	-		576518	0					
ANR	576574	PrimaryExpression	1		576518	1					
ANR	576575	IdentifierDeclStatement	int processedS = - 1 ;	613:1:17553:17572	576518	7	True				
ANR	576576	IdentifierDecl	processedS = - 1		576518	0					
ANR	576577	IdentifierDeclType	int		576518	0					
ANR	576578	Identifier	processedS		576518	1					
ANR	576579	AssignmentExpression	processedS = - 1		576518	2		=			
ANR	576580	Identifier	processedS		576518	0					
ANR	576581	UnaryOperationExpression	- 1		576518	1					
ANR	576582	UnaryOperator	-		576518	0					
ANR	576583	PrimaryExpression	1		576518	1					
ANR	576584	WhileStatement	while ( processedA < lastA || processedS < lastS )		576518	8					
ANR	576585	Condition	processedA < lastA || processedS < lastS	615:8:17583:17618	576518	0	True				
ANR	576586	OrExpression	processedA < lastA || processedS < lastS		576518	0		||			
ANR	576587	RelationalExpression	processedA < lastA		576518	0		<			
ANR	576588	Identifier	processedA		576518	0					
ANR	576589	Identifier	lastA		576518	1					
ANR	576590	RelationalExpression	processedS < lastS		576518	1		<			
ANR	576591	Identifier	processedS		576518	0					
ANR	576592	Identifier	lastS		576518	1					
ANR	576593	CompoundStatement		16:47:303:303	576518	1					
ANR	576594	ForStatement	for ( j = processedA + 1 ; j <= lastA ; j ++ )		576518	0					
ANR	576595	ForInit	j = processedA + 1 ;	618:7:17655:17669	576518	0	True				
ANR	576596	AssignmentExpression	j = processedA + 1		576518	0		=			
ANR	576597	Identifier	j		576518	0					
ANR	576598	AdditiveExpression	processedA + 1		576518	1		+			
ANR	576599	Identifier	processedA		576518	0					
ANR	576600	PrimaryExpression	1		576518	1					
ANR	576601	Condition	j <= lastA	618:23:17671:17678	576518	1	True				
ANR	576602	RelationalExpression	j <= lastA		576518	0		<=			
ANR	576603	Identifier	j		576518	0					
ANR	576604	Identifier	lastA		576518	1					
ANR	576605	PostIncDecOperationExpression	j ++	618:33:17681:17683	576518	2	True				
ANR	576606	Identifier	j		576518	0					
ANR	576607	IncDec	++		576518	1					
ANR	576608	CompoundStatement		21:3:415:461	576518	3					
ANR	576609	IdentifierDeclStatement	int numArcs = skeleton . getNumArcs ( ancestor [ j ] ) ;	620:3:17734:17780	576518	0	True				
ANR	576610	IdentifierDecl	numArcs = skeleton . getNumArcs ( ancestor [ j ] )		576518	0					
ANR	576611	IdentifierDeclType	int		576518	0					
ANR	576612	Identifier	numArcs		576518	1					
ANR	576613	AssignmentExpression	numArcs = skeleton . getNumArcs ( ancestor [ j ] )		576518	2		=			
ANR	576614	Identifier	numArcs		576518	0					
ANR	576615	CallExpression	skeleton . getNumArcs ( ancestor [ j ] )		576518	1					
ANR	576616	Callee	skeleton . getNumArcs		576518	0					
ANR	576617	MemberAccess	skeleton . getNumArcs		576518	0					
ANR	576618	Identifier	skeleton		576518	0					
ANR	576619	Identifier	getNumArcs		576518	1					
ANR	576620	ArgumentList	ancestor [ j ]		576518	1					
ANR	576621	Argument	ancestor [ j ]		576518	0					
ANR	576622	ArrayIndexing	ancestor [ j ]		576518	0					
ANR	576623	Identifier	ancestor		576518	0					
ANR	576624	Identifier	j		576518	1					
ANR	576625	ForStatement	for ( k = 0 ; k < numArcs ; k ++ )		576518	1					
ANR	576626	ForInit	k = 0 ;	621:8:17790:17793	576518	0	True				
ANR	576627	AssignmentExpression	k = 0		576518	0		=			
ANR	576628	Identifier	k		576518	0					
ANR	576629	PrimaryExpression	0		576518	1					
ANR	576630	Condition	k < numArcs	621:13:17795:17803	576518	1	True				
ANR	576631	RelationalExpression	k < numArcs		576518	0		<			
ANR	576632	Identifier	k		576518	0					
ANR	576633	Identifier	numArcs		576518	1					
ANR	576634	PostIncDecOperationExpression	k ++	621:24:17806:17808	576518	2	True				
ANR	576635	Identifier	k		576518	0					
ANR	576636	IncDec	++		576518	1					
ANR	576637	CompoundStatement		22:30:493:493	576518	3					
ANR	576638	ExpressionStatement	"v = skeleton . getArc ( ancestor [ j ] , k )"	622:4:17818:17852	576518	0	True				
ANR	576639	AssignmentExpression	"v = skeleton . getArc ( ancestor [ j ] , k )"		576518	0		=			
ANR	576640	Identifier	v		576518	0					
ANR	576641	CallExpression	"skeleton . getArc ( ancestor [ j ] , k )"		576518	1					
ANR	576642	Callee	skeleton . getArc		576518	0					
ANR	576643	MemberAccess	skeleton . getArc		576518	0					
ANR	576644	Identifier	skeleton		576518	0					
ANR	576645	Identifier	getArc		576518	1					
ANR	576646	ArgumentList	ancestor [ j ]		576518	1					
ANR	576647	Argument	ancestor [ j ]		576518	0					
ANR	576648	ArrayIndexing	ancestor [ j ]		576518	0					
ANR	576649	Identifier	ancestor		576518	0					
ANR	576650	Identifier	j		576518	1					
ANR	576651	Argument	k		576518	1					
ANR	576652	Identifier	k		576518	0					
ANR	576653	IfStatement	if ( colorS [ v ] != color )		576518	1					
ANR	576654	Condition	colorS [ v ] != color	623:8:17862:17879	576518	0	True				
ANR	576655	EqualityExpression	colorS [ v ] != color		576518	0		!=			
ANR	576656	ArrayIndexing	colorS [ v ]		576518	0					
ANR	576657	Identifier	colorS		576518	0					
ANR	576658	Identifier	v		576518	1					
ANR	576659	Identifier	color		576518	1					
ANR	576660	CompoundStatement		24:29:564:564	576518	1					
ANR	576661	ExpressionStatement	lastS ++	624:5:17890:17897	576518	0	True				
ANR	576662	PostIncDecOperationExpression	lastS ++		576518	0					
ANR	576663	Identifier	lastS		576518	0					
ANR	576664	IncDec	++		576518	1					
ANR	576665	ExpressionStatement	sink [ lastS ] = v	625:5:17904:17919	576518	1	True				
ANR	576666	AssignmentExpression	sink [ lastS ] = v		576518	0		=			
ANR	576667	ArrayIndexing	sink [ lastS ]		576518	0					
ANR	576668	Identifier	sink		576518	0					
ANR	576669	Identifier	lastS		576518	1					
ANR	576670	Identifier	v		576518	1					
ANR	576671	ExpressionStatement	colorS [ v ] = color	626:5:17926:17943	576518	2	True				
ANR	576672	AssignmentExpression	colorS [ v ] = color		576518	0		=			
ANR	576673	ArrayIndexing	colorS [ v ]		576518	0					
ANR	576674	Identifier	colorS		576518	0					
ANR	576675	Identifier	v		576518	1					
ANR	576676	Identifier	color		576518	1					
ANR	576677	ExpressionStatement		627:5:17950:17950	576518	2	True				
ANR	576678	ExpressionStatement		628:4:17956:17956	576518	2	True				
ANR	576679	ExpressionStatement	processedA ++	629:3:17961:17973	576518	3	True				
ANR	576680	PostIncDecOperationExpression	processedA ++		576518	0					
ANR	576681	Identifier	processedA		576518	0					
ANR	576682	IncDec	++		576518	1					
ANR	576683	ExpressionStatement		630:3:17978:17978	576518	1	True				
ANR	576684	ForStatement	for ( j = processedS + 1 ; j <= lastS ; j ++ )		576518	2					
ANR	576685	ForInit	j = processedS + 1 ;	633:7:18012:18026	576518	0	True				
ANR	576686	AssignmentExpression	j = processedS + 1		576518	0		=			
ANR	576687	Identifier	j		576518	0					
ANR	576688	AdditiveExpression	processedS + 1		576518	1		+			
ANR	576689	Identifier	processedS		576518	0					
ANR	576690	PrimaryExpression	1		576518	1					
ANR	576691	Condition	j <= lastS	633:23:18028:18035	576518	1	True				
ANR	576692	RelationalExpression	j <= lastS		576518	0		<=			
ANR	576693	Identifier	j		576518	0					
ANR	576694	Identifier	lastS		576518	1					
ANR	576695	PostIncDecOperationExpression	j ++	633:33:18038:18040	576518	2	True				
ANR	576696	Identifier	j		576518	0					
ANR	576697	IncDec	++		576518	1					
ANR	576698	CompoundStatement		39:3:908:950	576518	3					
ANR	576699	IdentifierDeclStatement	int numArcs = reversed . getNumArcs ( sink [ j ] ) ;	638:3:18227:18269	576518	0	True				
ANR	576700	IdentifierDecl	numArcs = reversed . getNumArcs ( sink [ j ] )		576518	0					
ANR	576701	IdentifierDeclType	int		576518	0					
ANR	576702	Identifier	numArcs		576518	1					
ANR	576703	AssignmentExpression	numArcs = reversed . getNumArcs ( sink [ j ] )		576518	2		=			
ANR	576704	Identifier	numArcs		576518	0					
ANR	576705	CallExpression	reversed . getNumArcs ( sink [ j ] )		576518	1					
ANR	576706	Callee	reversed . getNumArcs		576518	0					
ANR	576707	MemberAccess	reversed . getNumArcs		576518	0					
ANR	576708	Identifier	reversed		576518	0					
ANR	576709	Identifier	getNumArcs		576518	1					
ANR	576710	ArgumentList	sink [ j ]		576518	1					
ANR	576711	Argument	sink [ j ]		576518	0					
ANR	576712	ArrayIndexing	sink [ j ]		576518	0					
ANR	576713	Identifier	sink		576518	0					
ANR	576714	Identifier	j		576518	1					
ANR	576715	ForStatement	for ( k = 0 ; k < numArcs ; k ++ )		576518	1					
ANR	576716	ForInit	k = 0 ;	639:8:18279:18282	576518	0	True				
ANR	576717	AssignmentExpression	k = 0		576518	0		=			
ANR	576718	Identifier	k		576518	0					
ANR	576719	PrimaryExpression	0		576518	1					
ANR	576720	Condition	k < numArcs	639:13:18284:18292	576518	1	True				
ANR	576721	RelationalExpression	k < numArcs		576518	0		<			
ANR	576722	Identifier	k		576518	0					
ANR	576723	Identifier	numArcs		576518	1					
ANR	576724	PostIncDecOperationExpression	k ++	639:24:18295:18297	576518	2	True				
ANR	576725	Identifier	k		576518	0					
ANR	576726	IncDec	++		576518	1					
ANR	576727	CompoundStatement		40:30:982:982	576518	3					
ANR	576728	ExpressionStatement	"u = reversed . getArc ( sink [ j ] , k )"	640:4:18307:18337	576518	0	True				
ANR	576729	AssignmentExpression	"u = reversed . getArc ( sink [ j ] , k )"		576518	0		=			
ANR	576730	Identifier	u		576518	0					
ANR	576731	CallExpression	"reversed . getArc ( sink [ j ] , k )"		576518	1					
ANR	576732	Callee	reversed . getArc		576518	0					
ANR	576733	MemberAccess	reversed . getArc		576518	0					
ANR	576734	Identifier	reversed		576518	0					
ANR	576735	Identifier	getArc		576518	1					
ANR	576736	ArgumentList	sink [ j ]		576518	1					
ANR	576737	Argument	sink [ j ]		576518	0					
ANR	576738	ArrayIndexing	sink [ j ]		576518	0					
ANR	576739	Identifier	sink		576518	0					
ANR	576740	Identifier	j		576518	1					
ANR	576741	Argument	k		576518	1					
ANR	576742	Identifier	k		576518	0					
ANR	576743	IfStatement	if ( colorA [ u ] != color && - 1 != numberOfParents [ u ] )		576518	1					
ANR	576744	Condition	colorA [ u ] != color && - 1 != numberOfParents [ u ]	641:9:18348:18394	576518	0	True				
ANR	576745	AndExpression	colorA [ u ] != color && - 1 != numberOfParents [ u ]		576518	0		&&			
ANR	576746	EqualityExpression	colorA [ u ] != color		576518	0		!=			
ANR	576747	ArrayIndexing	colorA [ u ]		576518	0					
ANR	576748	Identifier	colorA		576518	0					
ANR	576749	Identifier	u		576518	1					
ANR	576750	Identifier	color		576518	1					
ANR	576751	EqualityExpression	- 1 != numberOfParents [ u ]		576518	1		!=			
ANR	576752	UnaryOperationExpression	- 1		576518	0					
ANR	576753	UnaryOperator	-		576518	0					
ANR	576754	PrimaryExpression	1		576518	1					
ANR	576755	ArrayIndexing	numberOfParents [ u ]		576518	1					
ANR	576756	Identifier	numberOfParents		576518	0					
ANR	576757	Identifier	u		576518	1					
ANR	576758	CompoundStatement		42:60:1080:1080	576518	1					
ANR	576759	ExpressionStatement	lastA ++	642:5:18406:18413	576518	0	True				
ANR	576760	PostIncDecOperationExpression	lastA ++		576518	0					
ANR	576761	Identifier	lastA		576518	0					
ANR	576762	IncDec	++		576518	1					
ANR	576763	ExpressionStatement	ancestor [ lastA ] = u	643:5:18420:18439	576518	1	True				
ANR	576764	AssignmentExpression	ancestor [ lastA ] = u		576518	0		=			
ANR	576765	ArrayIndexing	ancestor [ lastA ]		576518	0					
ANR	576766	Identifier	ancestor		576518	0					
ANR	576767	Identifier	lastA		576518	1					
ANR	576768	Identifier	u		576518	1					
ANR	576769	ExpressionStatement	colorA [ u ] = color	644:5:18446:18463	576518	2	True				
ANR	576770	AssignmentExpression	colorA [ u ] = color		576518	0		=			
ANR	576771	ArrayIndexing	colorA [ u ]		576518	0					
ANR	576772	Identifier	colorA		576518	0					
ANR	576773	Identifier	u		576518	1					
ANR	576774	Identifier	color		576518	1					
ANR	576775	ExpressionStatement		645:5:18470:18470	576518	2	True				
ANR	576776	ExpressionStatement		646:4:18476:18476	576518	2	True				
ANR	576777	IfStatement	if ( processedA < lastA )		576518	3					
ANR	576778	Condition	processedA < lastA	648:7:18532:18549	576518	0	True				
ANR	576779	RelationalExpression	processedA < lastA		576518	0		<			
ANR	576780	Identifier	processedA		576518	0					
ANR	576781	Identifier	lastA		576518	1					
ANR	576782	CompoundStatement		49:28:1234:1234	576518	1					
ANR	576783	ExpressionStatement	first = processedA + 1	653:4:18746:18766	576518	0	True				
ANR	576784	AssignmentExpression	first = processedA + 1		576518	0		=			
ANR	576785	Identifier	first		576518	0					
ANR	576786	AdditiveExpression	processedA + 1		576518	1		+			
ANR	576787	Identifier	processedA		576518	0					
ANR	576788	PrimaryExpression	1		576518	1					
ANR	576789	WhileStatement	while ( first <= lastA )		576518	1					
ANR	576790	Condition	first <= lastA	654:11:18779:18792	576518	0	True				
ANR	576791	RelationalExpression	first <= lastA		576518	0		<=			
ANR	576792	Identifier	first		576518	0					
ANR	576793	Identifier	lastA		576518	1					
ANR	576794	CompoundStatement		60:5:1654:1704	576518	1					
ANR	576795	IdentifierDeclStatement	int numArcs = reversed . getNumArcs ( ancestor [ first ] ) ;	659:5:18973:19023	576518	0	True				
ANR	576796	IdentifierDecl	numArcs = reversed . getNumArcs ( ancestor [ first ] )		576518	0					
ANR	576797	IdentifierDeclType	int		576518	0					
ANR	576798	Identifier	numArcs		576518	1					
ANR	576799	AssignmentExpression	numArcs = reversed . getNumArcs ( ancestor [ first ] )		576518	2		=			
ANR	576800	Identifier	numArcs		576518	0					
ANR	576801	CallExpression	reversed . getNumArcs ( ancestor [ first ] )		576518	1					
ANR	576802	Callee	reversed . getNumArcs		576518	0					
ANR	576803	MemberAccess	reversed . getNumArcs		576518	0					
ANR	576804	Identifier	reversed		576518	0					
ANR	576805	Identifier	getNumArcs		576518	1					
ANR	576806	ArgumentList	ancestor [ first ]		576518	1					
ANR	576807	Argument	ancestor [ first ]		576518	0					
ANR	576808	ArrayIndexing	ancestor [ first ]		576518	0					
ANR	576809	Identifier	ancestor		576518	0					
ANR	576810	Identifier	first		576518	1					
ANR	576811	ForStatement	for ( k = 0 ; k < numArcs ; k ++ )		576518	1					
ANR	576812	ForInit	k = 0 ;	660:10:19035:19038	576518	0	True				
ANR	576813	AssignmentExpression	k = 0		576518	0		=			
ANR	576814	Identifier	k		576518	0					
ANR	576815	PrimaryExpression	0		576518	1					
ANR	576816	Condition	k < numArcs	660:15:19040:19048	576518	1	True				
ANR	576817	RelationalExpression	k < numArcs		576518	0		<			
ANR	576818	Identifier	k		576518	0					
ANR	576819	Identifier	numArcs		576518	1					
ANR	576820	PostIncDecOperationExpression	k ++	660:26:19051:19053	576518	2	True				
ANR	576821	Identifier	k		576518	0					
ANR	576822	IncDec	++		576518	1					
ANR	576823	CompoundStatement		61:32:1738:1738	576518	3					
ANR	576824	ExpressionStatement	"u = reversed . getArc ( ancestor [ first ] , k )"	661:6:19065:19103	576518	0	True				
ANR	576825	AssignmentExpression	"u = reversed . getArc ( ancestor [ first ] , k )"		576518	0		=			
ANR	576826	Identifier	u		576518	0					
ANR	576827	CallExpression	"reversed . getArc ( ancestor [ first ] , k )"		576518	1					
ANR	576828	Callee	reversed . getArc		576518	0					
ANR	576829	MemberAccess	reversed . getArc		576518	0					
ANR	576830	Identifier	reversed		576518	0					
ANR	576831	Identifier	getArc		576518	1					
ANR	576832	ArgumentList	ancestor [ first ]		576518	1					
ANR	576833	Argument	ancestor [ first ]		576518	0					
ANR	576834	ArrayIndexing	ancestor [ first ]		576518	0					
ANR	576835	Identifier	ancestor		576518	0					
ANR	576836	Identifier	first		576518	1					
ANR	576837	Argument	k		576518	1					
ANR	576838	Identifier	k		576518	0					
ANR	576839	IfStatement	if ( - 1 != numberOfParents [ u ] )		576518	1					
ANR	576840	Condition	- 1 != numberOfParents [ u ]	662:10:19115:19138	576518	0	True				
ANR	576841	EqualityExpression	- 1 != numberOfParents [ u ]		576518	0		!=			
ANR	576842	UnaryOperationExpression	- 1		576518	0					
ANR	576843	UnaryOperator	-		576518	0					
ANR	576844	PrimaryExpression	1		576518	1					
ANR	576845	ArrayIndexing	numberOfParents [ u ]		576518	1					
ANR	576846	Identifier	numberOfParents		576518	0					
ANR	576847	Identifier	u		576518	1					
ANR	576848	CompoundStatement		63:37:1823:1823	576518	1					
ANR	576849	ExpressionStatement	bipartite = false	664:7:19194:19211	576518	0	True				
ANR	576850	AssignmentExpression	bipartite = false		576518	0		=			
ANR	576851	Identifier	bipartite		576518	0					
ANR	576852	Identifier	false		576518	1					
ANR	576853	BreakStatement	break ;	665:7:19220:19225	576518	1	True				
ANR	576854	ExpressionStatement		666:7:19234:19234	576518	2	True				
ANR	576855	ExpressionStatement		667:6:19242:19242	576518	2	True				
ANR	576856	ExpressionStatement	first ++	670:5:19272:19279	576518	3	True				
ANR	576857	PostIncDecOperationExpression	first ++		576518	0					
ANR	576858	Identifier	first		576518	0					
ANR	576859	IncDec	++		576518	1					
ANR	576860	ExpressionStatement		672:5:19287:19287	576518	2	True				
ANR	576861	ExpressionStatement		673:4:19293:19293	576518	4	True				
ANR	576862	ExpressionStatement	processedS ++	675:3:19299:19311	576518	5	True				
ANR	576863	PostIncDecOperationExpression	processedS ++		576518	0					
ANR	576864	Identifier	processedS		576518	0					
ANR	576865	IncDec	++		576518	1					
ANR	576866	ExpressionStatement		676:3:19316:19316	576518	3	True				
ANR	576867	ExpressionStatement		677:2:19320:19320	576518	9	True				
ANR	576868	ReturnStatement	return bipartite ;	679:1:19324:19340	576518	10	True				
ANR	576869	Identifier	bipartite		576518	0					
ANR	576870	ReturnType	bool		576518	1					
ANR	576871	Identifier	Superdag :: computeBipartiteConstituent		576518	2					
ANR	576872	ParameterList	"const Dag & skeleton , const Dag & reversed , const int * numberOfParents , int anchor , int * ancestor , int & lastA , int * sink , int & lastS , int color , int * colorA , int * colorS"		576518	3					
ANR	576873	Parameter	const Dag & skeleton	597:44:17125:17143	576518	0	True				
ANR	576874	ParameterType	const Dag &		576518	0					
ANR	576875	Identifier	skeleton		576518	1					
ANR	576876	Parameter	const Dag & reversed	597:65:17146:17164	576518	1	True				
ANR	576877	ParameterType	const Dag &		576518	0					
ANR	576878	Identifier	reversed		576518	1					
ANR	576879	Parameter	const int * numberOfParents	597:86:17167:17192	576518	2	True				
ANR	576880	ParameterType	const int *		576518	0					
ANR	576881	Identifier	numberOfParents		576518	1					
ANR	576882	Parameter	int anchor	598:11:17207:17216	576518	3	True				
ANR	576883	ParameterType	int		576518	0					
ANR	576884	Identifier	anchor		576518	1					
ANR	576885	Parameter	int * ancestor	598:23:17219:17231	576518	4	True				
ANR	576886	ParameterType	int *		576518	0					
ANR	576887	Identifier	ancestor		576518	1					
ANR	576888	Parameter	int & lastA	598:38:17234:17243	576518	5	True				
ANR	576889	ParameterType	int &		576518	0					
ANR	576890	Identifier	lastA		576518	1					
ANR	576891	Parameter	int * sink	598:50:17246:17254	576518	6	True				
ANR	576892	ParameterType	int *		576518	0					
ANR	576893	Identifier	sink		576518	1					
ANR	576894	Parameter	int & lastS	598:61:17257:17266	576518	7	True				
ANR	576895	ParameterType	int &		576518	0					
ANR	576896	Identifier	lastS		576518	1					
ANR	576897	Parameter	int color	599:11:17280:17288	576518	8	True				
ANR	576898	ParameterType	int		576518	0					
ANR	576899	Identifier	color		576518	1					
ANR	576900	Parameter	int * colorA	599:22:17291:17301	576518	9	True				
ANR	576901	ParameterType	int *		576518	0					
ANR	576902	Identifier	colorA		576518	1					
ANR	576903	Parameter	int * colorS	599:35:17304:17314	576518	10	True				
ANR	576904	ParameterType	int *		576518	0					
ANR	576905	Identifier	colorS		576518	1					
ANR	576906	CFGEntryNode	ENTRY		576518		True				
ANR	576907	CFGExitNode	EXIT		576518		True				
ANR	576908	Symbol	colorA		576518						
ANR	576909	Symbol	* v		576518						
ANR	576910	Symbol	* colorA		576518						
ANR	576911	Symbol	color		576518						
ANR	576912	Symbol	* ancestor		576518						
ANR	576913	Symbol	* lastS		576518						
ANR	576914	Symbol	numberOfParents		576518						
ANR	576915	Symbol	* numberOfParents		576518						
ANR	576916	Symbol	* anchor		576518						
ANR	576917	Symbol	skeleton		576518						
ANR	576918	Symbol	reversed . getArc		576518						
ANR	576919	Symbol	* first		576518						
ANR	576920	Symbol	processedA		576518						
ANR	576921	Symbol	lastS		576518						
ANR	576922	Symbol	skeleton . getArc		576518						
ANR	576923	Symbol	sink		576518						
ANR	576924	Symbol	ancestor		576518						
ANR	576925	Symbol	false		576518						
ANR	576926	Symbol	j		576518						
ANR	576927	Symbol	bipartite		576518						
ANR	576928	Symbol	k		576518						
ANR	576929	Symbol	* sink		576518						
ANR	576930	Symbol	colorS		576518						
ANR	576931	Symbol	processedS		576518						
ANR	576932	Symbol	reversed . getNumArcs		576518						
ANR	576933	Symbol	* colorS		576518						
ANR	576934	Symbol	lastA		576518						
ANR	576935	Symbol	numArcs		576518						
ANR	576936	Symbol	* j		576518						
ANR	576937	Symbol	u		576518						
ANR	576938	Symbol	* lastA		576518						
ANR	576939	Symbol	v		576518						
ANR	576940	Symbol	anchor		576518						
ANR	576941	Symbol	true		576518						
ANR	576942	Symbol	skeleton . getNumArcs		576518						
ANR	576943	Symbol	reversed		576518						
ANR	576944	Symbol	first		576518						
ANR	576945	Symbol	* u		576518						
ANR	576946	Function	Superdag :: detachConstituent	705:0:20157:22638							
ANR	576947	FunctionDef	"Superdag :: detachConstituent (const Dag & skeleton , int anchorNode , int * constituentIDtoAnchor , int * sinkToConstituentID , int * numberOfParents , ResizableArray < int > & constituentAncestor , ResizableArray < int > & constituentSink)"		576946	0					
ANR	576948	CompoundStatement		710:0:20424:22638	576946	0					
ANR	576949	IdentifierDeclStatement	int k ;	711:1:20427:20432	576946	0	True				
ANR	576950	IdentifierDecl	k		576946	0					
ANR	576951	IdentifierDeclType	int		576946	0					
ANR	576952	Identifier	k		576946	1					
ANR	576953	IdentifierDeclStatement	int constituentID ;	714:1:20513:20530	576946	1	True				
ANR	576954	IdentifierDecl	constituentID		576946	0					
ANR	576955	IdentifierDeclType	int		576946	0					
ANR	576956	Identifier	constituentID		576946	1					
ANR	576957	ExpressionStatement	constituentID = addNode ( )	715:1:20533:20558	576946	2	True				
ANR	576958	AssignmentExpression	constituentID = addNode ( )		576946	0		=			
ANR	576959	Identifier	constituentID		576946	0					
ANR	576960	CallExpression	addNode ( )		576946	1					
ANR	576961	Callee	addNode		576946	0					
ANR	576962	Identifier	addNode		576946	0					
ANR	576963	ArgumentList			576946	1					
ANR	576964	ExpressionStatement	constituentIDtoAnchor [ constituentID ] = anchorNode	718:1:20649:20698	576946	3	True				
ANR	576965	AssignmentExpression	constituentIDtoAnchor [ constituentID ] = anchorNode		576946	0		=			
ANR	576966	ArrayIndexing	constituentIDtoAnchor [ constituentID ]		576946	0					
ANR	576967	Identifier	constituentIDtoAnchor		576946	0					
ANR	576968	Identifier	constituentID		576946	1					
ANR	576969	Identifier	anchorNode		576946	1					
ANR	576970	ExpressionStatement	"printf ( ""---detaching constituent anchored at %d\\n"" , anchorNode )"	722:1:20760:20822	576946	4	True				
ANR	576971	CallExpression	"printf ( ""---detaching constituent anchored at %d\\n"" , anchorNode )"		576946	0					
ANR	576972	Callee	printf		576946	0					
ANR	576973	Identifier	printf		576946	0					
ANR	576974	ArgumentList	"""---detaching constituent anchored at %d\\n"""		576946	1					
ANR	576975	Argument	"""---detaching constituent anchored at %d\\n"""		576946	0					
ANR	576976	PrimaryExpression	"""---detaching constituent anchored at %d\\n"""		576946	0					
ANR	576977	Argument	anchorNode		576946	1					
ANR	576978	Identifier	anchorNode		576946	0					
ANR	576979	ExpressionStatement	"printf ( ""      ancestors: "" )"	723:1:20825:20852	576946	5	True				
ANR	576980	CallExpression	"printf ( ""      ancestors: "" )"		576946	0					
ANR	576981	Callee	printf		576946	0					
ANR	576982	Identifier	printf		576946	0					
ANR	576983	ArgumentList	"""      ancestors: """		576946	1					
ANR	576984	Argument	"""      ancestors: """		576946	0					
ANR	576985	PrimaryExpression	"""      ancestors: """		576946	0					
ANR	576986	ForStatement	for ( k = 0 ; k < constituentAncestor . getNumElem ( ) ; k ++ )		576946	6					
ANR	576987	ForInit	k = 0 ;	724:6:20860:20863	576946	0	True				
ANR	576988	AssignmentExpression	k = 0		576946	0		=			
ANR	576989	Identifier	k		576946	0					
ANR	576990	PrimaryExpression	0		576946	1					
ANR	576991	Condition	k < constituentAncestor . getNumElem ( )	724:11:20865:20898	576946	1	True				
ANR	576992	RelationalExpression	k < constituentAncestor . getNumElem ( )		576946	0		<			
ANR	576993	Identifier	k		576946	0					
ANR	576994	CallExpression	constituentAncestor . getNumElem ( )		576946	1					
ANR	576995	Callee	constituentAncestor . getNumElem		576946	0					
ANR	576996	MemberAccess	constituentAncestor . getNumElem		576946	0					
ANR	576997	Identifier	constituentAncestor		576946	0					
ANR	576998	Identifier	getNumElem		576946	1					
ANR	576999	ArgumentList			576946	1					
ANR	577000	PostIncDecOperationExpression	k ++	724:47:20901:20903	576946	2	True				
ANR	577001	Identifier	k		576946	0					
ANR	577002	IncDec	++		576946	1					
ANR	577003	ExpressionStatement	"printf ( ""%d "" , constituentAncestor . getElem ( k ) )"	725:2:20909:20955	576946	3	True				
ANR	577004	CallExpression	"printf ( ""%d "" , constituentAncestor . getElem ( k ) )"		576946	0					
ANR	577005	Callee	printf		576946	0					
ANR	577006	Identifier	printf		576946	0					
ANR	577007	ArgumentList	"""%d """		576946	1					
ANR	577008	Argument	"""%d """		576946	0					
ANR	577009	PrimaryExpression	"""%d """		576946	0					
ANR	577010	Argument	constituentAncestor . getElem ( k )		576946	1					
ANR	577011	CallExpression	constituentAncestor . getElem ( k )		576946	0					
ANR	577012	Callee	constituentAncestor . getElem		576946	0					
ANR	577013	MemberAccess	constituentAncestor . getElem		576946	0					
ANR	577014	Identifier	constituentAncestor		576946	0					
ANR	577015	Identifier	getElem		576946	1					
ANR	577016	ArgumentList	k		576946	1					
ANR	577017	Argument	k		576946	0					
ANR	577018	Identifier	k		576946	0					
ANR	577019	ExpressionStatement	"printf ( ""\\n"" )"	726:1:20958:20970	576946	7	True				
ANR	577020	CallExpression	"printf ( ""\\n"" )"		576946	0					
ANR	577021	Callee	printf		576946	0					
ANR	577022	Identifier	printf		576946	0					
ANR	577023	ArgumentList	"""\\n"""		576946	1					
ANR	577024	Argument	"""\\n"""		576946	0					
ANR	577025	PrimaryExpression	"""\\n"""		576946	0					
ANR	577026	ExpressionStatement	"printf ( ""      sinks: "" )"	727:1:20973:20996	576946	8	True				
ANR	577027	CallExpression	"printf ( ""      sinks: "" )"		576946	0					
ANR	577028	Callee	printf		576946	0					
ANR	577029	Identifier	printf		576946	0					
ANR	577030	ArgumentList	"""      sinks: """		576946	1					
ANR	577031	Argument	"""      sinks: """		576946	0					
ANR	577032	PrimaryExpression	"""      sinks: """		576946	0					
ANR	577033	ForStatement	for ( k = 0 ; k < constituentSink . getNumElem ( ) ; k ++ )		576946	9					
ANR	577034	ForInit	k = 0 ;	728:6:21004:21007	576946	0	True				
ANR	577035	AssignmentExpression	k = 0		576946	0		=			
ANR	577036	Identifier	k		576946	0					
ANR	577037	PrimaryExpression	0		576946	1					
ANR	577038	Condition	k < constituentSink . getNumElem ( )	728:11:21009:21038	576946	1	True				
ANR	577039	RelationalExpression	k < constituentSink . getNumElem ( )		576946	0		<			
ANR	577040	Identifier	k		576946	0					
ANR	577041	CallExpression	constituentSink . getNumElem ( )		576946	1					
ANR	577042	Callee	constituentSink . getNumElem		576946	0					
ANR	577043	MemberAccess	constituentSink . getNumElem		576946	0					
ANR	577044	Identifier	constituentSink		576946	0					
ANR	577045	Identifier	getNumElem		576946	1					
ANR	577046	ArgumentList			576946	1					
ANR	577047	PostIncDecOperationExpression	k ++	728:43:21041:21043	576946	2	True				
ANR	577048	Identifier	k		576946	0					
ANR	577049	IncDec	++		576946	1					
ANR	577050	ExpressionStatement	"printf ( ""%d "" , constituentSink . getElem ( k ) )"	729:2:21049:21091	576946	3	True				
ANR	577051	CallExpression	"printf ( ""%d "" , constituentSink . getElem ( k ) )"		576946	0					
ANR	577052	Callee	printf		576946	0					
ANR	577053	Identifier	printf		576946	0					
ANR	577054	ArgumentList	"""%d """		576946	1					
ANR	577055	Argument	"""%d """		576946	0					
ANR	577056	PrimaryExpression	"""%d """		576946	0					
ANR	577057	Argument	constituentSink . getElem ( k )		576946	1					
ANR	577058	CallExpression	constituentSink . getElem ( k )		576946	0					
ANR	577059	Callee	constituentSink . getElem		576946	0					
ANR	577060	MemberAccess	constituentSink . getElem		576946	0					
ANR	577061	Identifier	constituentSink		576946	0					
ANR	577062	Identifier	getElem		576946	1					
ANR	577063	ArgumentList	k		576946	1					
ANR	577064	Argument	k		576946	0					
ANR	577065	Identifier	k		576946	0					
ANR	577066	ExpressionStatement	"printf ( ""\\n"" )"	730:1:21094:21106	576946	10	True				
ANR	577067	CallExpression	"printf ( ""\\n"" )"		576946	0					
ANR	577068	Callee	printf		576946	0					
ANR	577069	Identifier	printf		576946	0					
ANR	577070	ArgumentList	"""\\n"""		576946	1					
ANR	577071	Argument	"""\\n"""		576946	0					
ANR	577072	PrimaryExpression	"""\\n"""		576946	0					
ANR	577073	ForStatement	for ( k = 0 ; k < constituentAncestor . getNumElem ( ) ; k ++ )		576946	11					
ANR	577074	ForInit	k = 0 ;	734:6:21170:21173	576946	0	True				
ANR	577075	AssignmentExpression	k = 0		576946	0		=			
ANR	577076	Identifier	k		576946	0					
ANR	577077	PrimaryExpression	0		576946	1					
ANR	577078	Condition	k < constituentAncestor . getNumElem ( )	734:11:21175:21208	576946	1	True				
ANR	577079	RelationalExpression	k < constituentAncestor . getNumElem ( )		576946	0		<			
ANR	577080	Identifier	k		576946	0					
ANR	577081	CallExpression	constituentAncestor . getNumElem ( )		576946	1					
ANR	577082	Callee	constituentAncestor . getNumElem		576946	0					
ANR	577083	MemberAccess	constituentAncestor . getNumElem		576946	0					
ANR	577084	Identifier	constituentAncestor		576946	0					
ANR	577085	Identifier	getNumElem		576946	1					
ANR	577086	ArgumentList			576946	1					
ANR	577087	PostIncDecOperationExpression	k ++	734:47:21211:21213	576946	2	True				
ANR	577088	Identifier	k		576946	0					
ANR	577089	IncDec	++		576946	1					
ANR	577090	CompoundStatement		28:2:862:929	576946	3					
ANR	577091	IdentifierDeclStatement	int arcFrom = sinkToConstituentID [ constituentAncestor . getElem ( k ) ] ;	737:2:21287:21354	576946	0	True				
ANR	577092	IdentifierDecl	arcFrom = sinkToConstituentID [ constituentAncestor . getElem ( k ) ]		576946	0					
ANR	577093	IdentifierDeclType	int		576946	0					
ANR	577094	Identifier	arcFrom		576946	1					
ANR	577095	AssignmentExpression	arcFrom = sinkToConstituentID [ constituentAncestor . getElem ( k ) ]		576946	2		=			
ANR	577096	Identifier	arcFrom		576946	0					
ANR	577097	ArrayIndexing	sinkToConstituentID [ constituentAncestor . getElem ( k ) ]		576946	1					
ANR	577098	Identifier	sinkToConstituentID		576946	0					
ANR	577099	CallExpression	constituentAncestor . getElem ( k )		576946	1					
ANR	577100	Callee	constituentAncestor . getElem		576946	0					
ANR	577101	MemberAccess	constituentAncestor . getElem		576946	0					
ANR	577102	Identifier	constituentAncestor		576946	0					
ANR	577103	Identifier	getElem		576946	1					
ANR	577104	ArgumentList	k		576946	1					
ANR	577105	Argument	k		576946	0					
ANR	577106	Identifier	k		576946	0					
ANR	577107	IfStatement	if ( - 1 != arcFrom )		576946	1					
ANR	577108	Condition	- 1 != arcFrom	738:6:21363:21375	576946	0	True				
ANR	577109	EqualityExpression	- 1 != arcFrom		576946	0		!=			
ANR	577110	UnaryOperationExpression	- 1		576946	0					
ANR	577111	UnaryOperator	-		576946	0					
ANR	577112	PrimaryExpression	1		576946	1					
ANR	577113	Identifier	arcFrom		576946	1					
ANR	577114	CompoundStatement		29:22:954:954	576946	1					
ANR	577115	IfStatement	"if ( addArcNoDuplicates ( arcFrom , constituentID ) )"		576946	0					
ANR	577116	Condition	"addArcNoDuplicates ( arcFrom , constituentID )"	743:7:21517:21557	576946	0	True				
ANR	577117	CallExpression	"addArcNoDuplicates ( arcFrom , constituentID )"		576946	0					
ANR	577118	Callee	addArcNoDuplicates		576946	0					
ANR	577119	Identifier	addArcNoDuplicates		576946	0					
ANR	577120	ArgumentList	arcFrom		576946	1					
ANR	577121	Argument	arcFrom		576946	0					
ANR	577122	Identifier	arcFrom		576946	0					
ANR	577123	Argument	constituentID		576946	1					
ANR	577124	Identifier	constituentID		576946	0					
ANR	577125	CompoundStatement		34:51:1136:1136	576946	1					
ANR	577126	ExpressionStatement	"printf ( "">>>>>>>>>>>>>> %d --> %d\\n"" , arcFrom , constituentID )"	746:4:21583:21644	576946	0	True				
ANR	577127	CallExpression	"printf ( "">>>>>>>>>>>>>> %d --> %d\\n"" , arcFrom , constituentID )"		576946	0					
ANR	577128	Callee	printf		576946	0					
ANR	577129	Identifier	printf		576946	0					
ANR	577130	ArgumentList	""">>>>>>>>>>>>>> %d --> %d\\n"""		576946	1					
ANR	577131	Argument	""">>>>>>>>>>>>>> %d --> %d\\n"""		576946	0					
ANR	577132	PrimaryExpression	""">>>>>>>>>>>>>> %d --> %d\\n"""		576946	0					
ANR	577133	Argument	arcFrom		576946	1					
ANR	577134	Identifier	arcFrom		576946	0					
ANR	577135	Argument	constituentID		576946	2					
ANR	577136	Identifier	constituentID		576946	0					
ANR	577137	ExpressionStatement		749:4:21658:21658	576946	1	True				
ANR	577138	ExpressionStatement		750:3:21663:21663	576946	2	True				
ANR	577139	ExpressionStatement		751:2:21667:21667	576946	12	True				
ANR	577140	ForStatement	for ( k = 0 ; k < constituentSink . getNumElem ( ) ; k ++ )		576946	13					
ANR	577141	ForInit	k = 0 ;	756:6:21796:21799	576946	0	True				
ANR	577142	AssignmentExpression	k = 0		576946	0		=			
ANR	577143	Identifier	k		576946	0					
ANR	577144	PrimaryExpression	0		576946	1					
ANR	577145	Condition	k < constituentSink . getNumElem ( )	756:11:21801:21830	576946	1	True				
ANR	577146	RelationalExpression	k < constituentSink . getNumElem ( )		576946	0		<			
ANR	577147	Identifier	k		576946	0					
ANR	577148	CallExpression	constituentSink . getNumElem ( )		576946	1					
ANR	577149	Callee	constituentSink . getNumElem		576946	0					
ANR	577150	MemberAccess	constituentSink . getNumElem		576946	0					
ANR	577151	Identifier	constituentSink		576946	0					
ANR	577152	Identifier	getNumElem		576946	1					
ANR	577153	ArgumentList			576946	1					
ANR	577154	PostIncDecOperationExpression	k ++	756:43:21833:21835	576946	2	True				
ANR	577155	Identifier	k		576946	0					
ANR	577156	IncDec	++		576946	1					
ANR	577157	ExpressionStatement	sinkToConstituentID [ constituentSink . getElem ( k ) ] = constituentID	757:2:21841:21906	576946	3	True				
ANR	577158	AssignmentExpression	sinkToConstituentID [ constituentSink . getElem ( k ) ] = constituentID		576946	0		=			
ANR	577159	ArrayIndexing	sinkToConstituentID [ constituentSink . getElem ( k ) ]		576946	0					
ANR	577160	Identifier	sinkToConstituentID		576946	0					
ANR	577161	CallExpression	constituentSink . getElem ( k )		576946	1					
ANR	577162	Callee	constituentSink . getElem		576946	0					
ANR	577163	MemberAccess	constituentSink . getElem		576946	0					
ANR	577164	Identifier	constituentSink		576946	0					
ANR	577165	Identifier	getElem		576946	1					
ANR	577166	ArgumentList	k		576946	1					
ANR	577167	Argument	k		576946	0					
ANR	577168	Identifier	k		576946	0					
ANR	577169	Identifier	constituentID		576946	1					
ANR	577170	ForStatement	for ( k = 0 ; k < constituentAncestor . getNumElem ( ) ; k ++ )		576946	14					
ANR	577171	ForInit	k = 0 ;	760:6:22010:22013	576946	0	True				
ANR	577172	AssignmentExpression	k = 0		576946	0		=			
ANR	577173	Identifier	k		576946	0					
ANR	577174	PrimaryExpression	0		576946	1					
ANR	577175	Condition	k < constituentAncestor . getNumElem ( )	760:11:22015:22048	576946	1	True				
ANR	577176	RelationalExpression	k < constituentAncestor . getNumElem ( )		576946	0		<			
ANR	577177	Identifier	k		576946	0					
ANR	577178	CallExpression	constituentAncestor . getNumElem ( )		576946	1					
ANR	577179	Callee	constituentAncestor . getNumElem		576946	0					
ANR	577180	MemberAccess	constituentAncestor . getNumElem		576946	0					
ANR	577181	Identifier	constituentAncestor		576946	0					
ANR	577182	Identifier	getNumElem		576946	1					
ANR	577183	ArgumentList			576946	1					
ANR	577184	PostIncDecOperationExpression	k ++	760:47:22051:22053	576946	2	True				
ANR	577185	Identifier	k		576946	0					
ANR	577186	IncDec	++		576946	1					
ANR	577187	ExpressionStatement	numberOfParents [ constituentAncestor . getElem ( k ) ] = - 1	761:2:22059:22113	576946	3	True				
ANR	577188	AssignmentExpression	numberOfParents [ constituentAncestor . getElem ( k ) ] = - 1		576946	0		=			
ANR	577189	ArrayIndexing	numberOfParents [ constituentAncestor . getElem ( k ) ]		576946	0					
ANR	577190	Identifier	numberOfParents		576946	0					
ANR	577191	CallExpression	constituentAncestor . getElem ( k )		576946	1					
ANR	577192	Callee	constituentAncestor . getElem		576946	0					
ANR	577193	MemberAccess	constituentAncestor . getElem		576946	0					
ANR	577194	Identifier	constituentAncestor		576946	0					
ANR	577195	Identifier	getElem		576946	1					
ANR	577196	ArgumentList	k		576946	1					
ANR	577197	Argument	k		576946	0					
ANR	577198	Identifier	k		576946	0					
ANR	577199	UnaryOperationExpression	- 1		576946	1					
ANR	577200	UnaryOperator	-		576946	0					
ANR	577201	PrimaryExpression	1		576946	1					
ANR	577202	ForStatement	for ( k = 0 ; k < constituentSink . getNumElem ( ) ; k ++ )		576946	15					
ANR	577203	ForInit	k = 0 ;	766:6:22360:22363	576946	0	True				
ANR	577204	AssignmentExpression	k = 0		576946	0		=			
ANR	577205	Identifier	k		576946	0					
ANR	577206	PrimaryExpression	0		576946	1					
ANR	577207	Condition	k < constituentSink . getNumElem ( )	766:11:22365:22394	576946	1	True				
ANR	577208	RelationalExpression	k < constituentSink . getNumElem ( )		576946	0		<			
ANR	577209	Identifier	k		576946	0					
ANR	577210	CallExpression	constituentSink . getNumElem ( )		576946	1					
ANR	577211	Callee	constituentSink . getNumElem		576946	0					
ANR	577212	MemberAccess	constituentSink . getNumElem		576946	0					
ANR	577213	Identifier	constituentSink		576946	0					
ANR	577214	Identifier	getNumElem		576946	1					
ANR	577215	ArgumentList			576946	1					
ANR	577216	PostIncDecOperationExpression	k ++	766:43:22397:22399	576946	2	True				
ANR	577217	Identifier	k		576946	0					
ANR	577218	IncDec	++		576946	1					
ANR	577219	CompoundStatement		58:2:1982:2049	576946	3					
ANR	577220	IdentifierDeclStatement	int numChildren = skeleton . getNumArcs ( constituentSink . getElem ( k ) ) ;	767:2:22407:22474	576946	0	True				
ANR	577221	IdentifierDecl	numChildren = skeleton . getNumArcs ( constituentSink . getElem ( k ) )		576946	0					
ANR	577222	IdentifierDeclType	int		576946	0					
ANR	577223	Identifier	numChildren		576946	1					
ANR	577224	AssignmentExpression	numChildren = skeleton . getNumArcs ( constituentSink . getElem ( k ) )		576946	2		=			
ANR	577225	Identifier	numChildren		576946	0					
ANR	577226	CallExpression	skeleton . getNumArcs ( constituentSink . getElem ( k ) )		576946	1					
ANR	577227	Callee	skeleton . getNumArcs		576946	0					
ANR	577228	MemberAccess	skeleton . getNumArcs		576946	0					
ANR	577229	Identifier	skeleton		576946	0					
ANR	577230	Identifier	getNumArcs		576946	1					
ANR	577231	ArgumentList	constituentSink . getElem ( k )		576946	1					
ANR	577232	Argument	constituentSink . getElem ( k )		576946	0					
ANR	577233	CallExpression	constituentSink . getElem ( k )		576946	0					
ANR	577234	Callee	constituentSink . getElem		576946	0					
ANR	577235	MemberAccess	constituentSink . getElem		576946	0					
ANR	577236	Identifier	constituentSink		576946	0					
ANR	577237	Identifier	getElem		576946	1					
ANR	577238	ArgumentList	k		576946	1					
ANR	577239	Argument	k		576946	0					
ANR	577240	Identifier	k		576946	0					
ANR	577241	IfStatement	if ( 0 == numChildren )		576946	1					
ANR	577242	Condition	0 == numChildren	768:6:22482:22497	576946	0	True				
ANR	577243	EqualityExpression	0 == numChildren		576946	0		==			
ANR	577244	PrimaryExpression	0		576946	0					
ANR	577245	Identifier	numChildren		576946	1					
ANR	577246	ExpressionStatement	numberOfParents [ constituentSink . getElem ( k ) ] = - 1	769:3:22504:22554	576946	1	True				
ANR	577247	AssignmentExpression	numberOfParents [ constituentSink . getElem ( k ) ] = - 1		576946	0		=			
ANR	577248	ArrayIndexing	numberOfParents [ constituentSink . getElem ( k ) ]		576946	0					
ANR	577249	Identifier	numberOfParents		576946	0					
ANR	577250	CallExpression	constituentSink . getElem ( k )		576946	1					
ANR	577251	Callee	constituentSink . getElem		576946	0					
ANR	577252	MemberAccess	constituentSink . getElem		576946	0					
ANR	577253	Identifier	constituentSink		576946	0					
ANR	577254	Identifier	getElem		576946	1					
ANR	577255	ArgumentList	k		576946	1					
ANR	577256	Argument	k		576946	0					
ANR	577257	Identifier	k		576946	0					
ANR	577258	UnaryOperationExpression	- 1		576946	1					
ANR	577259	UnaryOperator	-		576946	0					
ANR	577260	PrimaryExpression	1		576946	1					
ANR	577261	IfStatement	if ( 0 < numChildren )		576946	2					
ANR	577262	Condition	0 < numChildren	770:6:22562:22576	576946	0	True				
ANR	577263	RelationalExpression	0 < numChildren		576946	0		<			
ANR	577264	PrimaryExpression	0		576946	0					
ANR	577265	Identifier	numChildren		576946	1					
ANR	577266	ExpressionStatement	numberOfParents [ constituentSink . getElem ( k ) ] = 0	771:3:22583:22632	576946	1	True				
ANR	577267	AssignmentExpression	numberOfParents [ constituentSink . getElem ( k ) ] = 0		576946	0		=			
ANR	577268	ArrayIndexing	numberOfParents [ constituentSink . getElem ( k ) ]		576946	0					
ANR	577269	Identifier	numberOfParents		576946	0					
ANR	577270	CallExpression	constituentSink . getElem ( k )		576946	1					
ANR	577271	Callee	constituentSink . getElem		576946	0					
ANR	577272	MemberAccess	constituentSink . getElem		576946	0					
ANR	577273	Identifier	constituentSink		576946	0					
ANR	577274	Identifier	getElem		576946	1					
ANR	577275	ArgumentList	k		576946	1					
ANR	577276	Argument	k		576946	0					
ANR	577277	Identifier	k		576946	0					
ANR	577278	PrimaryExpression	0		576946	1					
ANR	577279	ExpressionStatement		772:2:22636:22636	576946	16	True				
ANR	577280	ReturnType	void		576946	1					
ANR	577281	Identifier	Superdag :: detachConstituent		576946	2					
ANR	577282	ParameterList	"const Dag & skeleton , int anchorNode , int * constituentIDtoAnchor , int * sinkToConstituentID , int * numberOfParents , ResizableArray < int > & constituentAncestor , ResizableArray < int > & constituentSink"		576946	3					
ANR	577283	Parameter	const Dag & skeleton	705:34:20191:20209	576946	0	True				
ANR	577284	ParameterType	const Dag &		576946	0					
ANR	577285	Identifier	skeleton		576946	1					
ANR	577286	Parameter	int anchorNode	705:55:20212:20225	576946	1	True				
ANR	577287	ParameterType	int		576946	0					
ANR	577288	Identifier	anchorNode		576946	1					
ANR	577289	Parameter	int * constituentIDtoAnchor	706:9:20238:20263	576946	2	True				
ANR	577290	ParameterType	int *		576946	0					
ANR	577291	Identifier	constituentIDtoAnchor		576946	1					
ANR	577292	Parameter	int * sinkToConstituentID	706:37:20266:20289	576946	3	True				
ANR	577293	ParameterType	int *		576946	0					
ANR	577294	Identifier	sinkToConstituentID		576946	1					
ANR	577295	Parameter	int * numberOfParents	707:9:20302:20321	576946	4	True				
ANR	577296	ParameterType	int *		576946	0					
ANR	577297	Identifier	numberOfParents		576946	1					
ANR	577298	Parameter	ResizableArray < int > & constituentAncestor	708:9:20333:20372	576946	5	True				
ANR	577299	ParameterType	ResizableArray < int > &		576946	0					
ANR	577300	Identifier	constituentAncestor		576946	1					
ANR	577301	Parameter	ResizableArray < int > & constituentSink	709:9:20385:20420	576946	6	True				
ANR	577302	ParameterType	ResizableArray < int > &		576946	0					
ANR	577303	Identifier	constituentSink		576946	1					
ANR	577304	CFGEntryNode	ENTRY		576946		True				
ANR	577305	CFGExitNode	EXIT		576946		True				
ANR	577306	Symbol	* constituentID		576946						
ANR	577307	Symbol	addNode		576946						
ANR	577308	Symbol	* sinkToConstituentID		576946						
ANR	577309	Symbol	arcFrom		576946						
ANR	577310	Symbol	* constituentSink . getElem		576946						
ANR	577311	Symbol	constituentSink		576946						
ANR	577312	Symbol	numberOfParents		576946						
ANR	577313	Symbol	* numberOfParents		576946						
ANR	577314	Symbol	skeleton		576946						
ANR	577315	Symbol	* constituentIDtoAnchor		576946						
ANR	577316	Symbol	constituentSink . getNumElem		576946						
ANR	577317	Symbol	constituentSink . getElem		576946						
ANR	577318	Symbol	* constituentSink		576946						
ANR	577319	Symbol	numChildren		576946						
ANR	577320	Symbol	sinkToConstituentID		576946						
ANR	577321	Symbol	constituentAncestor		576946						
ANR	577322	Symbol	* constituentAncestor . getElem		576946						
ANR	577323	Symbol	constituentAncestor . getNumElem		576946						
ANR	577324	Symbol	* constituentAncestor		576946						
ANR	577325	Symbol	k		576946						
ANR	577326	Symbol	constituentID		576946						
ANR	577327	Symbol	skeleton . getNumArcs		576946						
ANR	577328	Symbol	anchorNode		576946						
ANR	577329	Symbol	constituentAncestor . getElem		576946						
ANR	577330	Symbol	addArcNoDuplicates		576946						
ANR	577331	Symbol	constituentIDtoAnchor		576946						
ANR	577332	Function	Superdag :: testAincludedInB	792:0:23077:23827							
ANR	577333	FunctionDef	"Superdag :: testAincludedInB (const ResizableArray < int > & setA_1 , const ResizableArray < int > & setA_2 , const ResizableArray < int > & setB_1 , const ResizableArray < int > & setB_2 , int * colorMem , int color)"		577332	0					
ANR	577334	CompoundStatement		795:0:23296:23827	577332	0					
ANR	577335	IdentifierDeclStatement	int k ;	796:1:23299:23304	577332	0	True				
ANR	577336	IdentifierDecl	k		577332	0					
ANR	577337	IdentifierDeclType	int		577332	0					
ANR	577338	Identifier	k		577332	1					
ANR	577339	ForStatement	for ( k = 0 ; k < setB_1 . getNumElem ( ) ; k ++ )		577332	1					
ANR	577340	ForInit	k = 0 ;	799:6:23344:23347	577332	0	True				
ANR	577341	AssignmentExpression	k = 0		577332	0		=			
ANR	577342	Identifier	k		577332	0					
ANR	577343	PrimaryExpression	0		577332	1					
ANR	577344	Condition	k < setB_1 . getNumElem ( )	799:11:23349:23369	577332	1	True				
ANR	577345	RelationalExpression	k < setB_1 . getNumElem ( )		577332	0		<			
ANR	577346	Identifier	k		577332	0					
ANR	577347	CallExpression	setB_1 . getNumElem ( )		577332	1					
ANR	577348	Callee	setB_1 . getNumElem		577332	0					
ANR	577349	MemberAccess	setB_1 . getNumElem		577332	0					
ANR	577350	Identifier	setB_1		577332	0					
ANR	577351	Identifier	getNumElem		577332	1					
ANR	577352	ArgumentList			577332	1					
ANR	577353	PostIncDecOperationExpression	k ++	799:34:23372:23374	577332	2	True				
ANR	577354	Identifier	k		577332	0					
ANR	577355	IncDec	++		577332	1					
ANR	577356	ExpressionStatement	colorMem [ setB_1 . getElem ( k ) ] = color	800:8:23386:23423	577332	3	True				
ANR	577357	AssignmentExpression	colorMem [ setB_1 . getElem ( k ) ] = color		577332	0		=			
ANR	577358	ArrayIndexing	colorMem [ setB_1 . getElem ( k ) ]		577332	0					
ANR	577359	Identifier	colorMem		577332	0					
ANR	577360	CallExpression	setB_1 . getElem ( k )		577332	1					
ANR	577361	Callee	setB_1 . getElem		577332	0					
ANR	577362	MemberAccess	setB_1 . getElem		577332	0					
ANR	577363	Identifier	setB_1		577332	0					
ANR	577364	Identifier	getElem		577332	1					
ANR	577365	ArgumentList	k		577332	1					
ANR	577366	Argument	k		577332	0					
ANR	577367	Identifier	k		577332	0					
ANR	577368	Identifier	color		577332	1					
ANR	577369	ForStatement	for ( k = 0 ; k < setB_2 . getNumElem ( ) ; k ++ )		577332	2					
ANR	577370	ForInit	k = 0 ;	801:6:23431:23434	577332	0	True				
ANR	577371	AssignmentExpression	k = 0		577332	0		=			
ANR	577372	Identifier	k		577332	0					
ANR	577373	PrimaryExpression	0		577332	1					
ANR	577374	Condition	k < setB_2 . getNumElem ( )	801:11:23436:23456	577332	1	True				
ANR	577375	RelationalExpression	k < setB_2 . getNumElem ( )		577332	0		<			
ANR	577376	Identifier	k		577332	0					
ANR	577377	CallExpression	setB_2 . getNumElem ( )		577332	1					
ANR	577378	Callee	setB_2 . getNumElem		577332	0					
ANR	577379	MemberAccess	setB_2 . getNumElem		577332	0					
ANR	577380	Identifier	setB_2		577332	0					
ANR	577381	Identifier	getNumElem		577332	1					
ANR	577382	ArgumentList			577332	1					
ANR	577383	PostIncDecOperationExpression	k ++	801:34:23459:23461	577332	2	True				
ANR	577384	Identifier	k		577332	0					
ANR	577385	IncDec	++		577332	1					
ANR	577386	ExpressionStatement	colorMem [ setB_2 . getElem ( k ) ] = color	802:2:23467:23504	577332	3	True				
ANR	577387	AssignmentExpression	colorMem [ setB_2 . getElem ( k ) ] = color		577332	0		=			
ANR	577388	ArrayIndexing	colorMem [ setB_2 . getElem ( k ) ]		577332	0					
ANR	577389	Identifier	colorMem		577332	0					
ANR	577390	CallExpression	setB_2 . getElem ( k )		577332	1					
ANR	577391	Callee	setB_2 . getElem		577332	0					
ANR	577392	MemberAccess	setB_2 . getElem		577332	0					
ANR	577393	Identifier	setB_2		577332	0					
ANR	577394	Identifier	getElem		577332	1					
ANR	577395	ArgumentList	k		577332	1					
ANR	577396	Argument	k		577332	0					
ANR	577397	Identifier	k		577332	0					
ANR	577398	Identifier	color		577332	1					
ANR	577399	IdentifierDeclStatement	bool A_NotIn_B = false ;	805:1:23551:23571	577332	3	True				
ANR	577400	IdentifierDecl	A_NotIn_B = false		577332	0					
ANR	577401	IdentifierDeclType	bool		577332	0					
ANR	577402	Identifier	A_NotIn_B		577332	1					
ANR	577403	AssignmentExpression	A_NotIn_B = false		577332	2		=			
ANR	577404	Identifier	false		577332	0					
ANR	577405	Identifier	false		577332	1					
ANR	577406	ForStatement	for ( k = 0 ; k < setA_1 . getNumElem ( ) ; k ++ )		577332	4					
ANR	577407	ForInit	k = 0 ;	806:6:23579:23582	577332	0	True				
ANR	577408	AssignmentExpression	k = 0		577332	0		=			
ANR	577409	Identifier	k		577332	0					
ANR	577410	PrimaryExpression	0		577332	1					
ANR	577411	Condition	k < setA_1 . getNumElem ( )	806:11:23584:23604	577332	1	True				
ANR	577412	RelationalExpression	k < setA_1 . getNumElem ( )		577332	0		<			
ANR	577413	Identifier	k		577332	0					
ANR	577414	CallExpression	setA_1 . getNumElem ( )		577332	1					
ANR	577415	Callee	setA_1 . getNumElem		577332	0					
ANR	577416	MemberAccess	setA_1 . getNumElem		577332	0					
ANR	577417	Identifier	setA_1		577332	0					
ANR	577418	Identifier	getNumElem		577332	1					
ANR	577419	ArgumentList			577332	1					
ANR	577420	PostIncDecOperationExpression	k ++	806:34:23607:23609	577332	2	True				
ANR	577421	Identifier	k		577332	0					
ANR	577422	IncDec	++		577332	1					
ANR	577423	CompoundStatement		12:40:316:316	577332	3					
ANR	577424	IfStatement	if ( colorMem [ setA_1 . getElem ( k ) ] != color )		577332	0					
ANR	577425	Condition	colorMem [ setA_1 . getElem ( k ) ] != color	807:6:23621:23658	577332	0	True				
ANR	577426	EqualityExpression	colorMem [ setA_1 . getElem ( k ) ] != color		577332	0		!=			
ANR	577427	ArrayIndexing	colorMem [ setA_1 . getElem ( k ) ]		577332	0					
ANR	577428	Identifier	colorMem		577332	0					
ANR	577429	CallExpression	setA_1 . getElem ( k )		577332	1					
ANR	577430	Callee	setA_1 . getElem		577332	0					
ANR	577431	MemberAccess	setA_1 . getElem		577332	0					
ANR	577432	Identifier	setA_1		577332	0					
ANR	577433	Identifier	getElem		577332	1					
ANR	577434	ArgumentList	k		577332	1					
ANR	577435	Argument	k		577332	0					
ANR	577436	Identifier	k		577332	0					
ANR	577437	Identifier	color		577332	1					
ANR	577438	ExpressionStatement	A_NotIn_B = true	808:2:23664:23680	577332	1	True				
ANR	577439	AssignmentExpression	A_NotIn_B = true		577332	0		=			
ANR	577440	Identifier	A_NotIn_B		577332	0					
ANR	577441	Identifier	true		577332	1					
ANR	577442	ExpressionStatement		809:2:23684:23684	577332	5	True				
ANR	577443	ForStatement	for ( k = 0 ; k < setA_2 . getNumElem ( ) ; k ++ )		577332	6					
ANR	577444	ForInit	k = 0 ;	810:6:23692:23695	577332	0	True				
ANR	577445	AssignmentExpression	k = 0		577332	0		=			
ANR	577446	Identifier	k		577332	0					
ANR	577447	PrimaryExpression	0		577332	1					
ANR	577448	Condition	k < setA_2 . getNumElem ( )	810:11:23697:23717	577332	1	True				
ANR	577449	RelationalExpression	k < setA_2 . getNumElem ( )		577332	0		<			
ANR	577450	Identifier	k		577332	0					
ANR	577451	CallExpression	setA_2 . getNumElem ( )		577332	1					
ANR	577452	Callee	setA_2 . getNumElem		577332	0					
ANR	577453	MemberAccess	setA_2 . getNumElem		577332	0					
ANR	577454	Identifier	setA_2		577332	0					
ANR	577455	Identifier	getNumElem		577332	1					
ANR	577456	ArgumentList			577332	1					
ANR	577457	PostIncDecOperationExpression	k ++	810:34:23720:23722	577332	2	True				
ANR	577458	Identifier	k		577332	0					
ANR	577459	IncDec	++		577332	1					
ANR	577460	CompoundStatement		16:40:429:429	577332	3					
ANR	577461	IfStatement	if ( colorMem [ setA_2 . getElem ( k ) ] != color )		577332	0					
ANR	577462	Condition	colorMem [ setA_2 . getElem ( k ) ] != color	811:6:23734:23771	577332	0	True				
ANR	577463	EqualityExpression	colorMem [ setA_2 . getElem ( k ) ] != color		577332	0		!=			
ANR	577464	ArrayIndexing	colorMem [ setA_2 . getElem ( k ) ]		577332	0					
ANR	577465	Identifier	colorMem		577332	0					
ANR	577466	CallExpression	setA_2 . getElem ( k )		577332	1					
ANR	577467	Callee	setA_2 . getElem		577332	0					
ANR	577468	MemberAccess	setA_2 . getElem		577332	0					
ANR	577469	Identifier	setA_2		577332	0					
ANR	577470	Identifier	getElem		577332	1					
ANR	577471	ArgumentList	k		577332	1					
ANR	577472	Argument	k		577332	0					
ANR	577473	Identifier	k		577332	0					
ANR	577474	Identifier	color		577332	1					
ANR	577475	ExpressionStatement	A_NotIn_B = true	812:2:23777:23793	577332	1	True				
ANR	577476	AssignmentExpression	A_NotIn_B = true		577332	0		=			
ANR	577477	Identifier	A_NotIn_B		577332	0					
ANR	577478	Identifier	true		577332	1					
ANR	577479	ExpressionStatement		813:2:23804:23804	577332	7	True				
ANR	577480	ReturnStatement	return ! A_NotIn_B ;	814:1:23807:23825	577332	8	True				
ANR	577481	UnaryOperationExpression	! A_NotIn_B		577332	0					
ANR	577482	UnaryOperator	!		577332	0					
ANR	577483	Identifier	A_NotIn_B		577332	1					
ANR	577484	ReturnType	bool		577332	1					
ANR	577485	Identifier	Superdag :: testAincludedInB		577332	2					
ANR	577486	ParameterList	"const ResizableArray < int > & setA_1 , const ResizableArray < int > & setA_2 , const ResizableArray < int > & setB_1 , const ResizableArray < int > & setB_2 , int * colorMem , int color"		577332	3					
ANR	577487	Parameter	const ResizableArray < int > & setA_1	792:33:23110:23142	577332	0	True				
ANR	577488	ParameterType	const ResizableArray < int > &		577332	0					
ANR	577489	Identifier	setA_1		577332	1					
ANR	577490	Parameter	const ResizableArray < int > & setA_2	792:68:23145:23177	577332	1	True				
ANR	577491	ParameterType	const ResizableArray < int > &		577332	0					
ANR	577492	Identifier	setA_2		577332	1					
ANR	577493	Parameter	const ResizableArray < int > & setB_1	793:9:23190:23222	577332	2	True				
ANR	577494	ParameterType	const ResizableArray < int > &		577332	0					
ANR	577495	Identifier	setB_1		577332	1					
ANR	577496	Parameter	const ResizableArray < int > & setB_2	793:44:23225:23257	577332	3	True				
ANR	577497	ParameterType	const ResizableArray < int > &		577332	0					
ANR	577498	Identifier	setB_2		577332	1					
ANR	577499	Parameter	int * colorMem	794:9:23270:23282	577332	4	True				
ANR	577500	ParameterType	int *		577332	0					
ANR	577501	Identifier	colorMem		577332	1					
ANR	577502	Parameter	int color	794:24:23285:23293	577332	5	True				
ANR	577503	ParameterType	int		577332	0					
ANR	577504	Identifier	color		577332	1					
ANR	577505	CFGEntryNode	ENTRY		577332		True				
ANR	577506	CFGExitNode	EXIT		577332		True				
ANR	577507	Symbol	setA_2 . getNumElem		577332						
ANR	577508	Symbol	* setB_2 . getElem		577332						
ANR	577509	Symbol	color		577332						
ANR	577510	Symbol	* setA_2 . getElem		577332						
ANR	577511	Symbol	setB_1 . getNumElem		577332						
ANR	577512	Symbol	setA_2		577332						
ANR	577513	Symbol	setB_1		577332						
ANR	577514	Symbol	setB_2		577332						
ANR	577515	Symbol	setB_2 . getNumElem		577332						
ANR	577516	Symbol	setB_2 . getElem		577332						
ANR	577517	Symbol	setA_1		577332						
ANR	577518	Symbol	setA_2 . getElem		577332						
ANR	577519	Symbol	* setB_1 . getElem		577332						
ANR	577520	Symbol	false		577332						
ANR	577521	Symbol	setA_1 . getElem		577332						
ANR	577522	Symbol	setB_1 . getElem		577332						
ANR	577523	Symbol	k		577332						
ANR	577524	Symbol	* setA_1 . getElem		577332						
ANR	577525	Symbol	* setB_2		577332						
ANR	577526	Symbol	* setB_1		577332						
ANR	577527	Symbol	* setA_2		577332						
ANR	577528	Symbol	colorMem		577332						
ANR	577529	Symbol	* colorMem		577332						
ANR	577530	Symbol	A_NotIn_B		577332						
ANR	577531	Symbol	true		577332						
ANR	577532	Symbol	* setA_1		577332						
ANR	577533	Symbol	setA_1 . getNumElem		577332						
ANR	577534	Function	Superdag :: constituentToDag	835:0:24309:25593							
ANR	577535	FunctionDef	"Superdag :: constituentToDag (const Dag & skeleton , int * nodeSkelToNodeG , const ResizableArray < int > & constituentAncestor , const ResizableArray < int > & constituentSink)"		577534	0					
ANR	577536	CompoundStatement		838:0:24497:25593	577534	0					
ANR	577537	IdentifierDeclStatement	"int i , j ;"	839:1:24500:24507	577534	0	True				
ANR	577538	IdentifierDecl	i		577534	0					
ANR	577539	IdentifierDeclType	int		577534	0					
ANR	577540	Identifier	i		577534	1					
ANR	577541	IdentifierDecl	j		577534	1					
ANR	577542	IdentifierDeclType	int		577534	0					
ANR	577543	Identifier	j		577534	1					
ANR	577544	IdentifierDeclStatement	Dag * g = new Dag ( ) ;	842:1:24538:24556	577534	1	True				
ANR	577545	IdentifierDecl	* g = new Dag ( )		577534	0					
ANR	577546	IdentifierDeclType	Dag *		577534	0					
ANR	577547	Identifier	g		577534	1					
ANR	577548	AssignmentExpression	* g = new Dag ( )		577534	2		=			
ANR	577549	Identifier	g		577534	0					
ANR	577550	UnaryExpression	new Dag ( )		577534	1					
ANR	577551	IfStatement	if ( NULL == g )		577534	2					
ANR	577552	Condition	NULL == g	843:5:24563:24569	577534	0	True				
ANR	577553	EqualityExpression	NULL == g		577534	0		==			
ANR	577554	Identifier	NULL		577534	0					
ANR	577555	Identifier	g		577534	1					
ANR	577556	ThrowStatement	"throw ""Superdag::constituentToDag, g is NULL"" ;"	844:2:24575:24620	577534	1	True				
ANR	577557	PrimaryExpression	"""Superdag::constituentToDag, g is NULL"""		577534	0					
ANR	577558	IdentifierDeclStatement	int numNodes = constituentAncestor . getNumElem ( ) + constituentSink . getNumElem ( ) ;	847:1:24659:24737	577534	3	True				
ANR	577559	IdentifierDecl	numNodes = constituentAncestor . getNumElem ( ) + constituentSink . getNumElem ( )		577534	0					
ANR	577560	IdentifierDeclType	int		577534	0					
ANR	577561	Identifier	numNodes		577534	1					
ANR	577562	AssignmentExpression	numNodes = constituentAncestor . getNumElem ( ) + constituentSink . getNumElem ( )		577534	2		=			
ANR	577563	Identifier	numNodes		577534	0					
ANR	577564	AdditiveExpression	constituentAncestor . getNumElem ( ) + constituentSink . getNumElem ( )		577534	1		+			
ANR	577565	CallExpression	constituentAncestor . getNumElem ( )		577534	0					
ANR	577566	Callee	constituentAncestor . getNumElem		577534	0					
ANR	577567	MemberAccess	constituentAncestor . getNumElem		577534	0					
ANR	577568	Identifier	constituentAncestor		577534	0					
ANR	577569	Identifier	getNumElem		577534	1					
ANR	577570	ArgumentList			577534	1					
ANR	577571	CallExpression	constituentSink . getNumElem ( )		577534	1					
ANR	577572	Callee	constituentSink . getNumElem		577534	0					
ANR	577573	MemberAccess	constituentSink . getNumElem		577534	0					
ANR	577574	Identifier	constituentSink		577534	0					
ANR	577575	Identifier	getNumElem		577534	1					
ANR	577576	ArgumentList			577534	1					
ANR	577577	ForStatement	for ( i = 0 ; i < numNodes ; i ++ )		577534	4					
ANR	577578	ForInit	i = 0 ;	848:6:24745:24748	577534	0	True				
ANR	577579	AssignmentExpression	i = 0		577534	0		=			
ANR	577580	Identifier	i		577534	0					
ANR	577581	PrimaryExpression	0		577534	1					
ANR	577582	Condition	i < numNodes	848:11:24750:24759	577534	1	True				
ANR	577583	RelationalExpression	i < numNodes		577534	0		<			
ANR	577584	Identifier	i		577534	0					
ANR	577585	Identifier	numNodes		577534	1					
ANR	577586	PostIncDecOperationExpression	i ++	848:23:24762:24764	577534	2	True				
ANR	577587	Identifier	i		577534	0					
ANR	577588	IncDec	++		577534	1					
ANR	577589	ExpressionStatement	g -> addNode ( )	849:2:24770:24782	577534	3	True				
ANR	577590	CallExpression	g -> addNode ( )		577534	0					
ANR	577591	Callee	g -> addNode		577534	0					
ANR	577592	PtrMemberAccess	g -> addNode		577534	0					
ANR	577593	Identifier	g		577534	0					
ANR	577594	Identifier	addNode		577534	1					
ANR	577595	ArgumentList			577534	1					
ANR	577596	IdentifierDeclStatement	int sequence = 0 ;	853:1:24866:24880	577534	5	True				
ANR	577597	IdentifierDecl	sequence = 0		577534	0					
ANR	577598	IdentifierDeclType	int		577534	0					
ANR	577599	Identifier	sequence		577534	1					
ANR	577600	AssignmentExpression	sequence = 0		577534	2		=			
ANR	577601	Identifier	sequence		577534	0					
ANR	577602	PrimaryExpression	0		577534	1					
ANR	577603	ForStatement	for ( i = 0 ; i < constituentAncestor . getNumElem ( ) ; i ++ )		577534	6					
ANR	577604	ForInit	i = 0 ;	854:6:24888:24891	577534	0	True				
ANR	577605	AssignmentExpression	i = 0		577534	0		=			
ANR	577606	Identifier	i		577534	0					
ANR	577607	PrimaryExpression	0		577534	1					
ANR	577608	Condition	i < constituentAncestor . getNumElem ( )	854:11:24893:24926	577534	1	True				
ANR	577609	RelationalExpression	i < constituentAncestor . getNumElem ( )		577534	0		<			
ANR	577610	Identifier	i		577534	0					
ANR	577611	CallExpression	constituentAncestor . getNumElem ( )		577534	1					
ANR	577612	Callee	constituentAncestor . getNumElem		577534	0					
ANR	577613	MemberAccess	constituentAncestor . getNumElem		577534	0					
ANR	577614	Identifier	constituentAncestor		577534	0					
ANR	577615	Identifier	getNumElem		577534	1					
ANR	577616	ArgumentList			577534	1					
ANR	577617	PostIncDecOperationExpression	i ++	854:47:24929:24931	577534	2	True				
ANR	577618	Identifier	i		577534	0					
ANR	577619	IncDec	++		577534	1					
ANR	577620	CompoundStatement		18:2:441:479	577534	3					
ANR	577621	IdentifierDeclStatement	int u = constituentAncestor . getElem ( i ) ;	855:2:24939:24977	577534	0	True				
ANR	577622	IdentifierDecl	u = constituentAncestor . getElem ( i )		577534	0					
ANR	577623	IdentifierDeclType	int		577534	0					
ANR	577624	Identifier	u		577534	1					
ANR	577625	AssignmentExpression	u = constituentAncestor . getElem ( i )		577534	2		=			
ANR	577626	Identifier	u		577534	0					
ANR	577627	CallExpression	constituentAncestor . getElem ( i )		577534	1					
ANR	577628	Callee	constituentAncestor . getElem		577534	0					
ANR	577629	MemberAccess	constituentAncestor . getElem		577534	0					
ANR	577630	Identifier	constituentAncestor		577534	0					
ANR	577631	Identifier	getElem		577534	1					
ANR	577632	ArgumentList	i		577534	1					
ANR	577633	Argument	i		577534	0					
ANR	577634	Identifier	i		577534	0					
ANR	577635	ExpressionStatement	nodeSkelToNodeG [ u ] = sequence	856:2:24981:25010	577534	1	True				
ANR	577636	AssignmentExpression	nodeSkelToNodeG [ u ] = sequence		577534	0		=			
ANR	577637	ArrayIndexing	nodeSkelToNodeG [ u ]		577534	0					
ANR	577638	Identifier	nodeSkelToNodeG		577534	0					
ANR	577639	Identifier	u		577534	1					
ANR	577640	Identifier	sequence		577534	1					
ANR	577641	ExpressionStatement	"g -> setLabelInt ( sequence , u )"	857:2:25014:25040	577534	2	True				
ANR	577642	CallExpression	"g -> setLabelInt ( sequence , u )"		577534	0					
ANR	577643	Callee	g -> setLabelInt		577534	0					
ANR	577644	PtrMemberAccess	g -> setLabelInt		577534	0					
ANR	577645	Identifier	g		577534	0					
ANR	577646	Identifier	setLabelInt		577534	1					
ANR	577647	ArgumentList	sequence		577534	1					
ANR	577648	Argument	sequence		577534	0					
ANR	577649	Identifier	sequence		577534	0					
ANR	577650	Argument	u		577534	1					
ANR	577651	Identifier	u		577534	0					
ANR	577652	ExpressionStatement	sequence ++	858:2:25044:25054	577534	3	True				
ANR	577653	PostIncDecOperationExpression	sequence ++		577534	0					
ANR	577654	Identifier	sequence		577534	0					
ANR	577655	IncDec	++		577534	1					
ANR	577656	ExpressionStatement		859:2:25058:25058	577534	7	True				
ANR	577657	ForStatement	for ( i = 0 ; i < constituentSink . getNumElem ( ) ; i ++ )		577534	8					
ANR	577658	ForInit	i = 0 ;	860:6:25066:25069	577534	0	True				
ANR	577659	AssignmentExpression	i = 0		577534	0		=			
ANR	577660	Identifier	i		577534	0					
ANR	577661	PrimaryExpression	0		577534	1					
ANR	577662	Condition	i < constituentSink . getNumElem ( )	860:11:25071:25100	577534	1	True				
ANR	577663	RelationalExpression	i < constituentSink . getNumElem ( )		577534	0		<			
ANR	577664	Identifier	i		577534	0					
ANR	577665	CallExpression	constituentSink . getNumElem ( )		577534	1					
ANR	577666	Callee	constituentSink . getNumElem		577534	0					
ANR	577667	MemberAccess	constituentSink . getNumElem		577534	0					
ANR	577668	Identifier	constituentSink		577534	0					
ANR	577669	Identifier	getNumElem		577534	1					
ANR	577670	ArgumentList			577534	1					
ANR	577671	PostIncDecOperationExpression	i ++	860:43:25103:25105	577534	2	True				
ANR	577672	Identifier	i		577534	0					
ANR	577673	IncDec	++		577534	1					
ANR	577674	CompoundStatement		24:2:615:649	577534	3					
ANR	577675	IdentifierDeclStatement	int u = constituentSink . getElem ( i ) ;	861:2:25113:25147	577534	0	True				
ANR	577676	IdentifierDecl	u = constituentSink . getElem ( i )		577534	0					
ANR	577677	IdentifierDeclType	int		577534	0					
ANR	577678	Identifier	u		577534	1					
ANR	577679	AssignmentExpression	u = constituentSink . getElem ( i )		577534	2		=			
ANR	577680	Identifier	u		577534	0					
ANR	577681	CallExpression	constituentSink . getElem ( i )		577534	1					
ANR	577682	Callee	constituentSink . getElem		577534	0					
ANR	577683	MemberAccess	constituentSink . getElem		577534	0					
ANR	577684	Identifier	constituentSink		577534	0					
ANR	577685	Identifier	getElem		577534	1					
ANR	577686	ArgumentList	i		577534	1					
ANR	577687	Argument	i		577534	0					
ANR	577688	Identifier	i		577534	0					
ANR	577689	ExpressionStatement	nodeSkelToNodeG [ u ] = sequence	863:2:25201:25230	577534	1	True				
ANR	577690	AssignmentExpression	nodeSkelToNodeG [ u ] = sequence		577534	0		=			
ANR	577691	ArrayIndexing	nodeSkelToNodeG [ u ]		577534	0					
ANR	577692	Identifier	nodeSkelToNodeG		577534	0					
ANR	577693	Identifier	u		577534	1					
ANR	577694	Identifier	sequence		577534	1					
ANR	577695	ExpressionStatement	"g -> setLabelInt ( sequence , u )"	864:2:25234:25260	577534	2	True				
ANR	577696	CallExpression	"g -> setLabelInt ( sequence , u )"		577534	0					
ANR	577697	Callee	g -> setLabelInt		577534	0					
ANR	577698	PtrMemberAccess	g -> setLabelInt		577534	0					
ANR	577699	Identifier	g		577534	0					
ANR	577700	Identifier	setLabelInt		577534	1					
ANR	577701	ArgumentList	sequence		577534	1					
ANR	577702	Argument	sequence		577534	0					
ANR	577703	Identifier	sequence		577534	0					
ANR	577704	Argument	u		577534	1					
ANR	577705	Identifier	u		577534	0					
ANR	577706	ExpressionStatement	sequence ++	865:2:25264:25274	577534	3	True				
ANR	577707	PostIncDecOperationExpression	sequence ++		577534	0					
ANR	577708	Identifier	sequence		577534	0					
ANR	577709	IncDec	++		577534	1					
ANR	577710	ExpressionStatement		866:2:25278:25278	577534	9	True				
ANR	577711	ForStatement	for ( i = 0 ; i < constituentAncestor . getNumElem ( ) ; i ++ )		577534	10					
ANR	577712	ForInit	i = 0 ;	869:6:25305:25308	577534	0	True				
ANR	577713	AssignmentExpression	i = 0		577534	0		=			
ANR	577714	Identifier	i		577534	0					
ANR	577715	PrimaryExpression	0		577534	1					
ANR	577716	Condition	i < constituentAncestor . getNumElem ( )	869:11:25310:25343	577534	1	True				
ANR	577717	RelationalExpression	i < constituentAncestor . getNumElem ( )		577534	0		<			
ANR	577718	Identifier	i		577534	0					
ANR	577719	CallExpression	constituentAncestor . getNumElem ( )		577534	1					
ANR	577720	Callee	constituentAncestor . getNumElem		577534	0					
ANR	577721	MemberAccess	constituentAncestor . getNumElem		577534	0					
ANR	577722	Identifier	constituentAncestor		577534	0					
ANR	577723	Identifier	getNumElem		577534	1					
ANR	577724	ArgumentList			577534	1					
ANR	577725	PostIncDecOperationExpression	i ++	869:48:25347:25349	577534	2	True				
ANR	577726	Identifier	i		577534	0					
ANR	577727	IncDec	++		577534	1					
ANR	577728	CompoundStatement		33:2:859:897	577534	3					
ANR	577729	IdentifierDeclStatement	int u = constituentAncestor . getElem ( i ) ;	870:2:25357:25395	577534	0	True				
ANR	577730	IdentifierDecl	u = constituentAncestor . getElem ( i )		577534	0					
ANR	577731	IdentifierDeclType	int		577534	0					
ANR	577732	Identifier	u		577534	1					
ANR	577733	AssignmentExpression	u = constituentAncestor . getElem ( i )		577534	2		=			
ANR	577734	Identifier	u		577534	0					
ANR	577735	CallExpression	constituentAncestor . getElem ( i )		577534	1					
ANR	577736	Callee	constituentAncestor . getElem		577534	0					
ANR	577737	MemberAccess	constituentAncestor . getElem		577534	0					
ANR	577738	Identifier	constituentAncestor		577534	0					
ANR	577739	Identifier	getElem		577534	1					
ANR	577740	ArgumentList	i		577534	1					
ANR	577741	Argument	i		577534	0					
ANR	577742	Identifier	i		577534	0					
ANR	577743	ForStatement	for ( j = 0 ; j < skeleton . getNumArcs ( u ) ; j ++ )		577534	1					
ANR	577744	ForInit	j = 0 ;	872:7:25444:25447	577534	0	True				
ANR	577745	AssignmentExpression	j = 0		577534	0		=			
ANR	577746	Identifier	j		577534	0					
ANR	577747	PrimaryExpression	0		577534	1					
ANR	577748	Condition	j < skeleton . getNumArcs ( u )	872:12:25449:25472	577534	1	True				
ANR	577749	RelationalExpression	j < skeleton . getNumArcs ( u )		577534	0		<			
ANR	577750	Identifier	j		577534	0					
ANR	577751	CallExpression	skeleton . getNumArcs ( u )		577534	1					
ANR	577752	Callee	skeleton . getNumArcs		577534	0					
ANR	577753	MemberAccess	skeleton . getNumArcs		577534	0					
ANR	577754	Identifier	skeleton		577534	0					
ANR	577755	Identifier	getNumArcs		577534	1					
ANR	577756	ArgumentList	u		577534	1					
ANR	577757	Argument	u		577534	0					
ANR	577758	Identifier	u		577534	0					
ANR	577759	PostIncDecOperationExpression	j ++	872:38:25475:25477	577534	2	True				
ANR	577760	Identifier	j		577534	0					
ANR	577761	IncDec	++		577534	1					
ANR	577762	CompoundStatement		36:3:988:1016	577534	3					
ANR	577763	IdentifierDeclStatement	"int v = skeleton . getArc ( u , j ) ;"	873:3:25486:25514	577534	0	True				
ANR	577764	IdentifierDecl	"v = skeleton . getArc ( u , j )"		577534	0					
ANR	577765	IdentifierDeclType	int		577534	0					
ANR	577766	Identifier	v		577534	1					
ANR	577767	AssignmentExpression	"v = skeleton . getArc ( u , j )"		577534	2		=			
ANR	577768	Identifier	v		577534	0					
ANR	577769	CallExpression	"skeleton . getArc ( u , j )"		577534	1					
ANR	577770	Callee	skeleton . getArc		577534	0					
ANR	577771	MemberAccess	skeleton . getArc		577534	0					
ANR	577772	Identifier	skeleton		577534	0					
ANR	577773	Identifier	getArc		577534	1					
ANR	577774	ArgumentList	u		577534	1					
ANR	577775	Argument	u		577534	0					
ANR	577776	Identifier	u		577534	0					
ANR	577777	Argument	j		577534	1					
ANR	577778	Identifier	j		577534	0					
ANR	577779	ExpressionStatement	"g -> addArc ( nodeSkelToNodeG [ u ] , nodeSkelToNodeG [ v ] )"	874:3:25519:25570	577534	1	True				
ANR	577780	CallExpression	"g -> addArc ( nodeSkelToNodeG [ u ] , nodeSkelToNodeG [ v ] )"		577534	0					
ANR	577781	Callee	g -> addArc		577534	0					
ANR	577782	PtrMemberAccess	g -> addArc		577534	0					
ANR	577783	Identifier	g		577534	0					
ANR	577784	Identifier	addArc		577534	1					
ANR	577785	ArgumentList	nodeSkelToNodeG [ u ]		577534	1					
ANR	577786	Argument	nodeSkelToNodeG [ u ]		577534	0					
ANR	577787	ArrayIndexing	nodeSkelToNodeG [ u ]		577534	0					
ANR	577788	Identifier	nodeSkelToNodeG		577534	0					
ANR	577789	Identifier	u		577534	1					
ANR	577790	Argument	nodeSkelToNodeG [ v ]		577534	1					
ANR	577791	ArrayIndexing	nodeSkelToNodeG [ v ]		577534	0					
ANR	577792	Identifier	nodeSkelToNodeG		577534	0					
ANR	577793	Identifier	v		577534	1					
ANR	577794	ExpressionStatement		875:3:25575:25575	577534	2	True				
ANR	577795	ExpressionStatement		876:2:25579:25579	577534	11	True				
ANR	577796	ReturnStatement	return g ;	878:1:25583:25591	577534	12	True				
ANR	577797	Identifier	g		577534	0					
ANR	577798	ReturnType	Dag *		577534	1					
ANR	577799	Identifier	Superdag :: constituentToDag		577534	2					
ANR	577800	ParameterList	"const Dag & skeleton , int * nodeSkelToNodeG , const ResizableArray < int > & constituentAncestor , const ResizableArray < int > & constituentSink"		577534	3					
ANR	577801	Parameter	const Dag & skeleton	835:33:24342:24360	577534	0	True				
ANR	577802	ParameterType	const Dag &		577534	0					
ANR	577803	Identifier	skeleton		577534	1					
ANR	577804	Parameter	int * nodeSkelToNodeG	835:54:24363:24382	577534	1	True				
ANR	577805	ParameterType	int *		577534	0					
ANR	577806	Identifier	nodeSkelToNodeG		577534	1					
ANR	577807	Parameter	const ResizableArray < int > & constituentAncestor	836:9:24394:24439	577534	2	True				
ANR	577808	ParameterType	const ResizableArray < int > &		577534	0					
ANR	577809	Identifier	constituentAncestor		577534	1					
ANR	577810	Parameter	const ResizableArray < int > & constituentSink	837:9:24452:24493	577534	3	True				
ANR	577811	ParameterType	const ResizableArray < int > &		577534	0					
ANR	577812	Identifier	constituentSink		577534	1					
ANR	577813	CFGEntryNode	ENTRY		577534		True				
ANR	577814	CFGExitNode	EXIT		577534		True				
ANR	577815	CFGExceptionNode	EXCEPTION		577534		True				
ANR	577816	Symbol	* v		577534						
ANR	577817	Symbol	constituentAncestor		577534						
ANR	577818	Symbol	NULL		577534						
ANR	577819	Symbol	skeleton . getArc		577534						
ANR	577820	Symbol	constituentAncestor . getNumElem		577534						
ANR	577821	Symbol	g		577534						
ANR	577822	Symbol	constituentSink		577534						
ANR	577823	Symbol	i		577534						
ANR	577824	Symbol	j		577534						
ANR	577825	Symbol	nodeSkelToNodeG		577534						
ANR	577826	Symbol	* nodeSkelToNodeG		577534						
ANR	577827	Symbol	skeleton		577534						
ANR	577828	Symbol	sequence		577534						
ANR	577829	Symbol	numNodes		577534						
ANR	577830	Symbol	constituentSink . getNumElem		577534						
ANR	577831	Symbol	u		577534						
ANR	577832	Symbol	constituentSink . getElem		577534						
ANR	577833	Symbol	v		577534						
ANR	577834	Symbol	skeleton . getNumArcs		577534						
ANR	577835	Symbol	constituentAncestor . getElem		577534						
ANR	577836	Symbol	* u		577534						
ANR	577837	Function	Superdag :: saveSuperdagAsDot	895:0:25818:26117							
ANR	577838	FunctionDef	Superdag :: saveSuperdagAsDot (const char * fileName)		577837	0					
ANR	577839	CompoundStatement		896:0:25881:26117	577837	0					
ANR	577840	IfStatement	if ( NULL == fileName )		577837	0					
ANR	577841	Condition	NULL == fileName	897:5:25888:25901	577837	0	True				
ANR	577842	EqualityExpression	NULL == fileName		577837	0		==			
ANR	577843	Identifier	NULL		577837	0					
ANR	577844	Identifier	fileName		577837	1					
ANR	577845	ThrowStatement	"throw ""Superdag::saveSuperdagAsDot, fileName is NULL"" ;"	898:2:25907:25960	577837	1	True				
ANR	577846	PrimaryExpression	"""Superdag::saveSuperdagAsDot, fileName is NULL"""		577837	0					
ANR	577847	IdentifierDeclStatement	FILE * stream ;	900:1:25964:25976	577837	1	True				
ANR	577848	IdentifierDecl	* stream		577837	0					
ANR	577849	IdentifierDeclType	FILE *		577837	0					
ANR	577850	Identifier	stream		577837	1					
ANR	577851	ExpressionStatement	"stream = fopen ( fileName , ""wt"" )"	901:1:25979:26008	577837	2	True				
ANR	577852	AssignmentExpression	"stream = fopen ( fileName , ""wt"" )"		577837	0		=			
ANR	577853	Identifier	stream		577837	0					
ANR	577854	CallExpression	"fopen ( fileName , ""wt"" )"		577837	1					
ANR	577855	Callee	fopen		577837	0					
ANR	577856	Identifier	fopen		577837	0					
ANR	577857	ArgumentList	fileName		577837	1					
ANR	577858	Argument	fileName		577837	0					
ANR	577859	Identifier	fileName		577837	0					
ANR	577860	Argument	"""wt"""		577837	1					
ANR	577861	PrimaryExpression	"""wt"""		577837	0					
ANR	577862	IfStatement	if ( NULL == stream )		577837	3					
ANR	577863	Condition	NULL == stream	902:5:26015:26026	577837	0	True				
ANR	577864	EqualityExpression	NULL == stream		577837	0		==			
ANR	577865	Identifier	NULL		577837	0					
ANR	577866	Identifier	stream		577837	1					
ANR	577867	ThrowStatement	"throw ""Superdag::saveSuperdagAsDot, stream is NULL, 1"" ;"	903:2:26032:26086	577837	1	True				
ANR	577868	PrimaryExpression	"""Superdag::saveSuperdagAsDot, stream is NULL, 1"""		577837	0					
ANR	577869	ExpressionStatement	saveSuperdagAsDot ( stream )	905:1:26090:26115	577837	4	True				
ANR	577870	CallExpression	saveSuperdagAsDot ( stream )		577837	0					
ANR	577871	Callee	saveSuperdagAsDot		577837	0					
ANR	577872	Identifier	saveSuperdagAsDot		577837	0					
ANR	577873	ArgumentList	stream		577837	1					
ANR	577874	Argument	stream		577837	0					
ANR	577875	Identifier	stream		577837	0					
ANR	577876	ReturnType	void		577837	1					
ANR	577877	Identifier	Superdag :: saveSuperdagAsDot		577837	2					
ANR	577878	ParameterList	const char * fileName		577837	3					
ANR	577879	Parameter	const char * fileName	895:34:25852:25871	577837	0	True				
ANR	577880	ParameterType	const char *		577837	0					
ANR	577881	Identifier	fileName		577837	1					
ANR	577882	CFGEntryNode	ENTRY		577837		True				
ANR	577883	CFGExitNode	EXIT		577837		True				
ANR	577884	CFGExceptionNode	EXCEPTION		577837		True				
ANR	577885	CFGExceptionNode	EXCEPTION		577837		True				
ANR	577886	CFGExceptionNode	EXCEPTION		577837		True				
ANR	577887	Symbol	fopen		577837						
ANR	577888	Symbol	fileName		577837						
ANR	577889	Symbol	NULL		577837						
ANR	577890	Symbol	stream		577837						
ANR	577891	Function	Superdag :: saveSuperdagAsDot	925:0:26486:27164							
ANR	577892	FunctionDef	Superdag :: saveSuperdagAsDot (FILE * stream)		577891	0					
ANR	577893	CompoundStatement		926:0:26541:27164	577891	0					
ANR	577894	IfStatement	if ( NULL == stream )		577891	0					
ANR	577895	Condition	NULL == stream	927:5:26548:26559	577891	0	True				
ANR	577896	EqualityExpression	NULL == stream		577891	0		==			
ANR	577897	Identifier	NULL		577891	0					
ANR	577898	Identifier	stream		577891	1					
ANR	577899	ThrowStatement	"throw ""Superdag::saveSuperdagAsDot, stream is NULL, 2"" ;"	928:2:26565:26619	577891	1	True				
ANR	577900	PrimaryExpression	"""Superdag::saveSuperdagAsDot, stream is NULL, 2"""		577891	0					
ANR	577901	ExpressionStatement	"fprintf ( stream , ""digraph SuperDag {\\n"" )"	930:1:26623:26663	577891	1	True				
ANR	577902	CallExpression	"fprintf ( stream , ""digraph SuperDag {\\n"" )"		577891	0					
ANR	577903	Callee	fprintf		577891	0					
ANR	577904	Identifier	fprintf		577891	0					
ANR	577905	ArgumentList	stream		577891	1					
ANR	577906	Argument	stream		577891	0					
ANR	577907	Identifier	stream		577891	0					
ANR	577908	Argument	"""digraph SuperDag {\\n"""		577891	1					
ANR	577909	PrimaryExpression	"""digraph SuperDag {\\n"""		577891	0					
ANR	577910	ExpressionStatement	"fprintf ( stream , ""rankdir=BT;\\n"" )"	931:1:26666:26699	577891	2	True				
ANR	577911	CallExpression	"fprintf ( stream , ""rankdir=BT;\\n"" )"		577891	0					
ANR	577912	Callee	fprintf		577891	0					
ANR	577913	Identifier	fprintf		577891	0					
ANR	577914	ArgumentList	stream		577891	1					
ANR	577915	Argument	stream		577891	0					
ANR	577916	Identifier	stream		577891	0					
ANR	577917	Argument	"""rankdir=BT;\\n"""		577891	1					
ANR	577918	PrimaryExpression	"""rankdir=BT;\\n"""		577891	0					
ANR	577919	ExpressionStatement	"fprintf ( stream , ""size=\\""7.5,10\\"";\\n"" )"	932:1:26702:26740	577891	3	True				
ANR	577920	CallExpression	"fprintf ( stream , ""size=\\""7.5,10\\"";\\n"" )"		577891	0					
ANR	577921	Callee	fprintf		577891	0					
ANR	577922	Identifier	fprintf		577891	0					
ANR	577923	ArgumentList	stream		577891	1					
ANR	577924	Argument	stream		577891	0					
ANR	577925	Identifier	stream		577891	0					
ANR	577926	Argument	"""size=\\""7.5,10\\"";\\n"""		577891	1					
ANR	577927	PrimaryExpression	"""size=\\""7.5,10\\"";\\n"""		577891	0					
ANR	577928	ExpressionStatement	"fprintf ( stream , ""compound=true;\\n"" )"	933:1:26743:26779	577891	4	True				
ANR	577929	CallExpression	"fprintf ( stream , ""compound=true;\\n"" )"		577891	0					
ANR	577930	Callee	fprintf		577891	0					
ANR	577931	Identifier	fprintf		577891	0					
ANR	577932	ArgumentList	stream		577891	1					
ANR	577933	Argument	stream		577891	0					
ANR	577934	Identifier	stream		577891	0					
ANR	577935	Argument	"""compound=true;\\n"""		577891	1					
ANR	577936	PrimaryExpression	"""compound=true;\\n"""		577891	0					
ANR	577937	ExpressionStatement	"fprintf ( stream , ""\\n\\n"" )"	934:1:26782:26807	577891	5	True				
ANR	577938	CallExpression	"fprintf ( stream , ""\\n\\n"" )"		577891	0					
ANR	577939	Callee	fprintf		577891	0					
ANR	577940	Identifier	fprintf		577891	0					
ANR	577941	ArgumentList	stream		577891	1					
ANR	577942	Argument	stream		577891	0					
ANR	577943	Identifier	stream		577891	0					
ANR	577944	Argument	"""\\n\\n"""		577891	1					
ANR	577945	PrimaryExpression	"""\\n\\n"""		577891	0					
ANR	577946	ForStatement	for ( int i = 0 ; i < getNumNodes ( ) ; i ++ )		577891	6					
ANR	577947	ForInit	int i = 0 ;	937:6:26839:26846	577891	0	True				
ANR	577948	IdentifierDeclStatement	int i = 0 ;		577891	0					
ANR	577949	IdentifierDecl	i = 0		577891	0					
ANR	577950	IdentifierDeclType	int		577891	0					
ANR	577951	Identifier	i		577891	1					
ANR	577952	AssignmentExpression	i = 0		577891	2		=			
ANR	577953	Identifier	i		577891	0					
ANR	577954	PrimaryExpression	0		577891	1					
ANR	577955	Condition	i < getNumNodes ( )	937:15:26848:26862	577891	1	True				
ANR	577956	RelationalExpression	i < getNumNodes ( )		577891	0		<			
ANR	577957	Identifier	i		577891	0					
ANR	577958	CallExpression	getNumNodes ( )		577891	1					
ANR	577959	Callee	getNumNodes		577891	0					
ANR	577960	Identifier	getNumNodes		577891	0					
ANR	577961	ArgumentList			577891	1					
ANR	577962	PostIncDecOperationExpression	i ++	937:32:26865:26867	577891	2	True				
ANR	577963	Identifier	i		577891	0					
ANR	577964	IncDec	++		577891	1					
ANR	577965	ExpressionStatement	"saveConstituent ( stream , i )"	938:2:26874:26899	577891	3	True				
ANR	577966	CallExpression	"saveConstituent ( stream , i )"		577891	0					
ANR	577967	Callee	saveConstituent		577891	0					
ANR	577968	Identifier	saveConstituent		577891	0					
ANR	577969	ArgumentList	stream		577891	1					
ANR	577970	Argument	stream		577891	0					
ANR	577971	Identifier	stream		577891	0					
ANR	577972	Argument	i		577891	1					
ANR	577973	Identifier	i		577891	0					
ANR	577974	ForStatement	for ( int i = 0 ; i < getNumNodes ( ) ; i ++ )		577891	7					
ANR	577975	ForInit	int i = 0 ;	941:6:26943:26950	577891	0	True				
ANR	577976	IdentifierDeclStatement	int i = 0 ;		577891	0					
ANR	577977	IdentifierDecl	i = 0		577891	0					
ANR	577978	IdentifierDeclType	int		577891	0					
ANR	577979	Identifier	i		577891	1					
ANR	577980	AssignmentExpression	i = 0		577891	2		=			
ANR	577981	Identifier	i		577891	0					
ANR	577982	PrimaryExpression	0		577891	1					
ANR	577983	Condition	i < getNumNodes ( )	941:15:26952:26966	577891	1	True				
ANR	577984	RelationalExpression	i < getNumNodes ( )		577891	0		<			
ANR	577985	Identifier	i		577891	0					
ANR	577986	CallExpression	getNumNodes ( )		577891	1					
ANR	577987	Callee	getNumNodes		577891	0					
ANR	577988	Identifier	getNumNodes		577891	0					
ANR	577989	ArgumentList			577891	1					
ANR	577990	PostIncDecOperationExpression	i ++	941:32:26969:26971	577891	2	True				
ANR	577991	Identifier	i		577891	0					
ANR	577992	IncDec	++		577891	1					
ANR	577993	CompoundStatement		17:2:437:464	577891	3					
ANR	577994	IdentifierDeclStatement	int numArcs = getNumArcs ( i ) ;	942:2:26979:27006	577891	0	True				
ANR	577995	IdentifierDecl	numArcs = getNumArcs ( i )		577891	0					
ANR	577996	IdentifierDeclType	int		577891	0					
ANR	577997	Identifier	numArcs		577891	1					
ANR	577998	AssignmentExpression	numArcs = getNumArcs ( i )		577891	2		=			
ANR	577999	Identifier	numArcs		577891	0					
ANR	578000	CallExpression	getNumArcs ( i )		577891	1					
ANR	578001	Callee	getNumArcs		577891	0					
ANR	578002	Identifier	getNumArcs		577891	0					
ANR	578003	ArgumentList	i		577891	1					
ANR	578004	Argument	i		577891	0					
ANR	578005	Identifier	i		577891	0					
ANR	578006	ForStatement	for ( int j = 0 ; j < numArcs ; j ++ )		577891	1					
ANR	578007	ForInit	int j = 0 ;	943:7:27015:27022	577891	0	True				
ANR	578008	IdentifierDeclStatement	int j = 0 ;		577891	0					
ANR	578009	IdentifierDecl	j = 0		577891	0					
ANR	578010	IdentifierDeclType	int		577891	0					
ANR	578011	Identifier	j		577891	1					
ANR	578012	AssignmentExpression	j = 0		577891	2		=			
ANR	578013	Identifier	j		577891	0					
ANR	578014	PrimaryExpression	0		577891	1					
ANR	578015	Condition	j < numArcs	943:16:27024:27032	577891	1	True				
ANR	578016	RelationalExpression	j < numArcs		577891	0		<			
ANR	578017	Identifier	j		577891	0					
ANR	578018	Identifier	numArcs		577891	1					
ANR	578019	PostIncDecOperationExpression	j ++	943:27:27035:27037	577891	2	True				
ANR	578020	Identifier	j		577891	0					
ANR	578021	IncDec	++		577891	1					
ANR	578022	ExpressionStatement	"saveArcs ( stream , i , getArc ( i , j ) )"	944:12:27053:27084	577891	3	True				
ANR	578023	CallExpression	"saveArcs ( stream , i , getArc ( i , j ) )"		577891	0					
ANR	578024	Callee	saveArcs		577891	0					
ANR	578025	Identifier	saveArcs		577891	0					
ANR	578026	ArgumentList	stream		577891	1					
ANR	578027	Argument	stream		577891	0					
ANR	578028	Identifier	stream		577891	0					
ANR	578029	Argument	i		577891	1					
ANR	578030	Identifier	i		577891	0					
ANR	578031	Argument	"getArc ( i , j )"		577891	2					
ANR	578032	CallExpression	"getArc ( i , j )"		577891	0					
ANR	578033	Callee	getArc		577891	0					
ANR	578034	Identifier	getArc		577891	0					
ANR	578035	ArgumentList	i		577891	1					
ANR	578036	Argument	i		577891	0					
ANR	578037	Identifier	i		577891	0					
ANR	578038	Argument	j		577891	1					
ANR	578039	Identifier	j		577891	0					
ANR	578040	ExpressionStatement	"fprintf ( stream , ""\\n\\n"" )"	945:2:27088:27112	577891	2	True				
ANR	578041	CallExpression	"fprintf ( stream , ""\\n\\n"" )"		577891	0					
ANR	578042	Callee	fprintf		577891	0					
ANR	578043	Identifier	fprintf		577891	0					
ANR	578044	ArgumentList	stream		577891	1					
ANR	578045	Argument	stream		577891	0					
ANR	578046	Identifier	stream		577891	0					
ANR	578047	Argument	"""\\n\\n"""		577891	1					
ANR	578048	PrimaryExpression	"""\\n\\n"""		577891	0					
ANR	578049	ExpressionStatement		946:2:27116:27116	577891	8	True				
ANR	578050	ExpressionStatement	"fprintf ( stream , ""}\\n"" )"	948:1:27120:27143	577891	9	True				
ANR	578051	CallExpression	"fprintf ( stream , ""}\\n"" )"		577891	0					
ANR	578052	Callee	fprintf		577891	0					
ANR	578053	Identifier	fprintf		577891	0					
ANR	578054	ArgumentList	stream		577891	1					
ANR	578055	Argument	stream		577891	0					
ANR	578056	Identifier	stream		577891	0					
ANR	578057	Argument	"""}\\n"""		577891	1					
ANR	578058	PrimaryExpression	"""}\\n"""		577891	0					
ANR	578059	ExpressionStatement	fclose ( stream )	949:1:27146:27162	577891	10	True				
ANR	578060	CallExpression	fclose ( stream )		577891	0					
ANR	578061	Callee	fclose		577891	0					
ANR	578062	Identifier	fclose		577891	0					
ANR	578063	ArgumentList	stream		577891	1					
ANR	578064	Argument	stream		577891	0					
ANR	578065	Identifier	stream		577891	0					
ANR	578066	ReturnType	void		577891	1					
ANR	578067	Identifier	Superdag :: saveSuperdagAsDot		577891	2					
ANR	578068	ParameterList	FILE * stream		577891	3					
ANR	578069	Parameter	FILE * stream	925:34:26520:26531	577891	0	True				
ANR	578070	ParameterType	FILE *		577891	0					
ANR	578071	Identifier	stream		577891	1					
ANR	578072	CFGEntryNode	ENTRY		577891		True				
ANR	578073	CFGExitNode	EXIT		577891		True				
ANR	578074	CFGExceptionNode	EXCEPTION		577891		True				
ANR	578075	Symbol	getNumArcs		577891						
ANR	578076	Symbol	getNumNodes		577891						
ANR	578077	Symbol	NULL		577891						
ANR	578078	Symbol	numArcs		577891						
ANR	578079	Symbol	getArc		577891						
ANR	578080	Symbol	stream		577891						
ANR	578081	Symbol	i		577891						
ANR	578082	Symbol	j		577891						
ANR	578083	Function	Superdag :: saveConstituent	966:0:27369:28605							
ANR	578084	FunctionDef	"Superdag :: saveConstituent (FILE * stream , int id)"		578083	0					
ANR	578085	CompoundStatement		967:0:27430:28605	578083	0					
ANR	578086	IfStatement	if ( NULL == stream )		578083	0					
ANR	578087	Condition	NULL == stream	968:5:27437:27448	578083	0	True				
ANR	578088	EqualityExpression	NULL == stream		578083	0		==			
ANR	578089	Identifier	NULL		578083	0					
ANR	578090	Identifier	stream		578083	1					
ANR	578091	ThrowStatement	"throw ""Superdag::saveArcs, stream is NULL"" ;"	969:2:27454:27496	578083	1	True				
ANR	578092	PrimaryExpression	"""Superdag::saveArcs, stream is NULL"""		578083	0					
ANR	578093	IdentifierDeclStatement	Dag * g = getConstituent ( id ) ;	972:1:27528:27555	578083	1	True				
ANR	578094	IdentifierDecl	* g = getConstituent ( id )		578083	0					
ANR	578095	IdentifierDeclType	Dag *		578083	0					
ANR	578096	Identifier	g		578083	1					
ANR	578097	AssignmentExpression	* g = getConstituent ( id )		578083	2		=			
ANR	578098	Identifier	g		578083	0					
ANR	578099	CallExpression	getConstituent ( id )		578083	1					
ANR	578100	Callee	getConstituent		578083	0					
ANR	578101	Identifier	getConstituent		578083	0					
ANR	578102	ArgumentList	id		578083	1					
ANR	578103	Argument	id		578083	0					
ANR	578104	Identifier	id		578083	0					
ANR	578105	IfStatement	if ( NULL == g )		578083	2					
ANR	578106	Condition	NULL == g	973:5:27562:27568	578083	0	True				
ANR	578107	EqualityExpression	NULL == g		578083	0		==			
ANR	578108	Identifier	NULL		578083	0					
ANR	578109	Identifier	g		578083	1					
ANR	578110	ThrowStatement	"throw ""Superdag::saveConstituent, g is NULL"" ;"	974:2:27574:27618	578083	1	True				
ANR	578111	PrimaryExpression	"""Superdag::saveConstituent, g is NULL"""		578083	0					
ANR	578112	ExpressionStatement	"fprintf ( stream , ""subgraph cluster%d {\\n"" , id )"	976:1:27622:27667	578083	3	True				
ANR	578113	CallExpression	"fprintf ( stream , ""subgraph cluster%d {\\n"" , id )"		578083	0					
ANR	578114	Callee	fprintf		578083	0					
ANR	578115	Identifier	fprintf		578083	0					
ANR	578116	ArgumentList	stream		578083	1					
ANR	578117	Argument	stream		578083	0					
ANR	578118	Identifier	stream		578083	0					
ANR	578119	Argument	"""subgraph cluster%d {\\n"""		578083	1					
ANR	578120	PrimaryExpression	"""subgraph cluster%d {\\n"""		578083	0					
ANR	578121	Argument	id		578083	2					
ANR	578122	Identifier	id		578083	0					
ANR	578123	ExpressionStatement	"fprintf ( stream , ""style=filled;\\n"" )"	977:1:27670:27705	578083	4	True				
ANR	578124	CallExpression	"fprintf ( stream , ""style=filled;\\n"" )"		578083	0					
ANR	578125	Callee	fprintf		578083	0					
ANR	578126	Identifier	fprintf		578083	0					
ANR	578127	ArgumentList	stream		578083	1					
ANR	578128	Argument	stream		578083	0					
ANR	578129	Identifier	stream		578083	0					
ANR	578130	Argument	"""style=filled;\\n"""		578083	1					
ANR	578131	PrimaryExpression	"""style=filled;\\n"""		578083	0					
ANR	578132	SwitchStatement	switch ( getType ( id ) )		578083	5					
ANR	578133	Condition	getType ( id )	980:9:27767:27777	578083	0	True				
ANR	578134	CallExpression	getType ( id )		578083	0					
ANR	578135	Callee	getType		578083	0					
ANR	578136	Identifier	getType		578083	0					
ANR	578137	ArgumentList	id		578083	1					
ANR	578138	Argument	id		578083	0					
ANR	578139	Identifier	id		578083	0					
ANR	578140	CompoundStatement		14:23:350:350	578083	1					
ANR	578141	Label	case BIPARTITE :	981:2:27785:27799	578083	0	True				
ANR	578142	Identifier	BIPARTITE		578083	0					
ANR	578143	ExpressionStatement	"fprintf ( stream , ""color=lightgrey;\\n"" )"	982:3:27804:27842	578083	1	True				
ANR	578144	CallExpression	"fprintf ( stream , ""color=lightgrey;\\n"" )"		578083	0					
ANR	578145	Callee	fprintf		578083	0					
ANR	578146	Identifier	fprintf		578083	0					
ANR	578147	ArgumentList	stream		578083	1					
ANR	578148	Argument	stream		578083	0					
ANR	578149	Identifier	stream		578083	0					
ANR	578150	Argument	"""color=lightgrey;\\n"""		578083	1					
ANR	578151	PrimaryExpression	"""color=lightgrey;\\n"""		578083	0					
ANR	578152	BreakStatement	break ;	983:3:27847:27852	578083	2	True				
ANR	578153	Label	case SINGLETON :	984:2:27856:27870	578083	3	True				
ANR	578154	Identifier	SINGLETON		578083	0					
ANR	578155	ExpressionStatement	"fprintf ( stream , ""color=yellow;\\n"" )"	985:3:27875:27910	578083	4	True				
ANR	578156	CallExpression	"fprintf ( stream , ""color=yellow;\\n"" )"		578083	0					
ANR	578157	Callee	fprintf		578083	0					
ANR	578158	Identifier	fprintf		578083	0					
ANR	578159	ArgumentList	stream		578083	1					
ANR	578160	Argument	stream		578083	0					
ANR	578161	Identifier	stream		578083	0					
ANR	578162	Argument	"""color=yellow;\\n"""		578083	1					
ANR	578163	PrimaryExpression	"""color=yellow;\\n"""		578083	0					
ANR	578164	BreakStatement	break ;	986:3:27915:27920	578083	5	True				
ANR	578165	Label	case COMPLEX :	987:2:27924:27936	578083	6	True				
ANR	578166	Identifier	COMPLEX		578083	0					
ANR	578167	ExpressionStatement	"fprintf ( stream , ""color=crimson;\\n"" )"	988:3:27941:27977	578083	7	True				
ANR	578168	CallExpression	"fprintf ( stream , ""color=crimson;\\n"" )"		578083	0					
ANR	578169	Callee	fprintf		578083	0					
ANR	578170	Identifier	fprintf		578083	0					
ANR	578171	ArgumentList	stream		578083	1					
ANR	578172	Argument	stream		578083	0					
ANR	578173	Identifier	stream		578083	0					
ANR	578174	Argument	"""color=crimson;\\n"""		578083	1					
ANR	578175	PrimaryExpression	"""color=crimson;\\n"""		578083	0					
ANR	578176	BreakStatement	break ;	989:3:27982:27987	578083	8	True				
ANR	578177	ExpressionStatement		990:2:27991:27991	578083	6	True				
ANR	578178	ExpressionStatement	"fprintf ( stream , ""label=\\""%d\\"";\\n"" , id )"	993:1:28020:28058	578083	7	True				
ANR	578179	CallExpression	"fprintf ( stream , ""label=\\""%d\\"";\\n"" , id )"		578083	0					
ANR	578180	Callee	fprintf		578083	0					
ANR	578181	Identifier	fprintf		578083	0					
ANR	578182	ArgumentList	stream		578083	1					
ANR	578183	Argument	stream		578083	0					
ANR	578184	Identifier	stream		578083	0					
ANR	578185	Argument	"""label=\\""%d\\"";\\n"""		578083	1					
ANR	578186	PrimaryExpression	"""label=\\""%d\\"";\\n"""		578083	0					
ANR	578187	Argument	id		578083	2					
ANR	578188	Identifier	id		578083	0					
ANR	578189	IdentifierDeclStatement	int numNodes = g -> getNumNodes ( ) ;	996:1:28106:28137	578083	8	True				
ANR	578190	IdentifierDecl	numNodes = g -> getNumNodes ( )		578083	0					
ANR	578191	IdentifierDeclType	int		578083	0					
ANR	578192	Identifier	numNodes		578083	1					
ANR	578193	AssignmentExpression	numNodes = g -> getNumNodes ( )		578083	2		=			
ANR	578194	Identifier	numNodes		578083	0					
ANR	578195	CallExpression	g -> getNumNodes ( )		578083	1					
ANR	578196	Callee	g -> getNumNodes		578083	0					
ANR	578197	PtrMemberAccess	g -> getNumNodes		578083	0					
ANR	578198	Identifier	g		578083	0					
ANR	578199	Identifier	getNumNodes		578083	1					
ANR	578200	ArgumentList			578083	1					
ANR	578201	ForStatement	for ( int j = 0 ; j < numNodes ; j ++ )		578083	9					
ANR	578202	ForInit	int j = 0 ;	997:6:28145:28152	578083	0	True				
ANR	578203	IdentifierDeclStatement	int j = 0 ;		578083	0					
ANR	578204	IdentifierDecl	j = 0		578083	0					
ANR	578205	IdentifierDeclType	int		578083	0					
ANR	578206	Identifier	j		578083	1					
ANR	578207	AssignmentExpression	j = 0		578083	2		=			
ANR	578208	Identifier	j		578083	0					
ANR	578209	PrimaryExpression	0		578083	1					
ANR	578210	Condition	j < numNodes	997:15:28154:28163	578083	1	True				
ANR	578211	RelationalExpression	j < numNodes		578083	0		<			
ANR	578212	Identifier	j		578083	0					
ANR	578213	Identifier	numNodes		578083	1					
ANR	578214	PostIncDecOperationExpression	j ++	997:28:28167:28169	578083	2	True				
ANR	578215	Identifier	j		578083	0					
ANR	578216	IncDec	++		578083	1					
ANR	578217	CompoundStatement		32:2:746:776	578083	3					
ANR	578218	IdentifierDeclStatement	int numArcs = g -> getNumArcs ( j ) ;	998:2:28177:28207	578083	0	True				
ANR	578219	IdentifierDecl	numArcs = g -> getNumArcs ( j )		578083	0					
ANR	578220	IdentifierDeclType	int		578083	0					
ANR	578221	Identifier	numArcs		578083	1					
ANR	578222	AssignmentExpression	numArcs = g -> getNumArcs ( j )		578083	2		=			
ANR	578223	Identifier	numArcs		578083	0					
ANR	578224	CallExpression	g -> getNumArcs ( j )		578083	1					
ANR	578225	Callee	g -> getNumArcs		578083	0					
ANR	578226	PtrMemberAccess	g -> getNumArcs		578083	0					
ANR	578227	Identifier	g		578083	0					
ANR	578228	Identifier	getNumArcs		578083	1					
ANR	578229	ArgumentList	j		578083	1					
ANR	578230	Argument	j		578083	0					
ANR	578231	Identifier	j		578083	0					
ANR	578232	ExpressionStatement	"fprintf ( stream , ""%d.%d -> { "" , j , id )"	999:2:28211:28247	578083	1	True				
ANR	578233	CallExpression	"fprintf ( stream , ""%d.%d -> { "" , j , id )"		578083	0					
ANR	578234	Callee	fprintf		578083	0					
ANR	578235	Identifier	fprintf		578083	0					
ANR	578236	ArgumentList	stream		578083	1					
ANR	578237	Argument	stream		578083	0					
ANR	578238	Identifier	stream		578083	0					
ANR	578239	Argument	"""%d.%d -> { """		578083	1					
ANR	578240	PrimaryExpression	"""%d.%d -> { """		578083	0					
ANR	578241	Argument	j		578083	2					
ANR	578242	Identifier	j		578083	0					
ANR	578243	Argument	id		578083	3					
ANR	578244	Identifier	id		578083	0					
ANR	578245	ForStatement	for ( int k = 0 ; k < numArcs ; k ++ )		578083	2					
ANR	578246	ForInit	int k = 0 ;	1000:7:28256:28263	578083	0	True				
ANR	578247	IdentifierDeclStatement	int k = 0 ;		578083	0					
ANR	578248	IdentifierDecl	k = 0		578083	0					
ANR	578249	IdentifierDeclType	int		578083	0					
ANR	578250	Identifier	k		578083	1					
ANR	578251	AssignmentExpression	k = 0		578083	2		=			
ANR	578252	Identifier	k		578083	0					
ANR	578253	PrimaryExpression	0		578083	1					
ANR	578254	Condition	k < numArcs	1000:16:28265:28273	578083	1	True				
ANR	578255	RelationalExpression	k < numArcs		578083	0		<			
ANR	578256	Identifier	k		578083	0					
ANR	578257	Identifier	numArcs		578083	1					
ANR	578258	PostIncDecOperationExpression	k ++	1000:27:28276:28278	578083	2	True				
ANR	578259	Identifier	k		578083	0					
ANR	578260	IncDec	++		578083	1					
ANR	578261	CompoundStatement		35:3:856:882	578083	3					
ANR	578262	IdentifierDeclStatement	"int child = g -> getArc ( j , k ) ;"	1001:3:28287:28313	578083	0	True				
ANR	578263	IdentifierDecl	"child = g -> getArc ( j , k )"		578083	0					
ANR	578264	IdentifierDeclType	int		578083	0					
ANR	578265	Identifier	child		578083	1					
ANR	578266	AssignmentExpression	"child = g -> getArc ( j , k )"		578083	2		=			
ANR	578267	Identifier	child		578083	0					
ANR	578268	CallExpression	"g -> getArc ( j , k )"		578083	1					
ANR	578269	Callee	g -> getArc		578083	0					
ANR	578270	PtrMemberAccess	g -> getArc		578083	0					
ANR	578271	Identifier	g		578083	0					
ANR	578272	Identifier	getArc		578083	1					
ANR	578273	ArgumentList	j		578083	1					
ANR	578274	Argument	j		578083	0					
ANR	578275	Identifier	j		578083	0					
ANR	578276	Argument	k		578083	1					
ANR	578277	Identifier	k		578083	0					
ANR	578278	ExpressionStatement	"fprintf ( stream , ""%d.%d ; "" , child , id )"	1002:3:28318:28357	578083	1	True				
ANR	578279	CallExpression	"fprintf ( stream , ""%d.%d ; "" , child , id )"		578083	0					
ANR	578280	Callee	fprintf		578083	0					
ANR	578281	Identifier	fprintf		578083	0					
ANR	578282	ArgumentList	stream		578083	1					
ANR	578283	Argument	stream		578083	0					
ANR	578284	Identifier	stream		578083	0					
ANR	578285	Argument	"""%d.%d ; """		578083	1					
ANR	578286	PrimaryExpression	"""%d.%d ; """		578083	0					
ANR	578287	Argument	child		578083	2					
ANR	578288	Identifier	child		578083	0					
ANR	578289	Argument	id		578083	3					
ANR	578290	Identifier	id		578083	0					
ANR	578291	ExpressionStatement		1003:3:28362:28362	578083	3	True				
ANR	578292	ExpressionStatement	"fprintf ( stream , ""}; \\n"" )"	1004:2:28366:28392	578083	4	True				
ANR	578293	CallExpression	"fprintf ( stream , ""}; \\n"" )"		578083	0					
ANR	578294	Callee	fprintf		578083	0					
ANR	578295	Identifier	fprintf		578083	0					
ANR	578296	ArgumentList	stream		578083	1					
ANR	578297	Argument	stream		578083	0					
ANR	578298	Identifier	stream		578083	0					
ANR	578299	Argument	"""}; \\n"""		578083	1					
ANR	578300	PrimaryExpression	"""}; \\n"""		578083	0					
ANR	578301	ExpressionStatement		1005:2:28396:28396	578083	10	True				
ANR	578302	ExpressionStatement	"fprintf ( stream , ""}; \\n\\n"" )"	1006:1:28399:28427	578083	11	True				
ANR	578303	CallExpression	"fprintf ( stream , ""}; \\n\\n"" )"		578083	0					
ANR	578304	Callee	fprintf		578083	0					
ANR	578305	Identifier	fprintf		578083	0					
ANR	578306	ArgumentList	stream		578083	1					
ANR	578307	Argument	stream		578083	0					
ANR	578308	Identifier	stream		578083	0					
ANR	578309	Argument	"""}; \\n\\n"""		578083	1					
ANR	578310	PrimaryExpression	"""}; \\n\\n"""		578083	0					
ANR	578311	ForStatement	for ( int j = 0 ; j < numNodes ; j ++ )		578083	12					
ANR	578312	ForInit	int j = 0 ;	1009:6:28453:28460	578083	0	True				
ANR	578313	IdentifierDeclStatement	int j = 0 ;		578083	0					
ANR	578314	IdentifierDecl	j = 0		578083	0					
ANR	578315	IdentifierDeclType	int		578083	0					
ANR	578316	Identifier	j		578083	1					
ANR	578317	AssignmentExpression	j = 0		578083	2		=			
ANR	578318	Identifier	j		578083	0					
ANR	578319	PrimaryExpression	0		578083	1					
ANR	578320	Condition	j < numNodes	1009:15:28462:28471	578083	1	True				
ANR	578321	RelationalExpression	j < numNodes		578083	0		<			
ANR	578322	Identifier	j		578083	0					
ANR	578323	Identifier	numNodes		578083	1					
ANR	578324	PostIncDecOperationExpression	j ++	1009:28:28475:28477	578083	2	True				
ANR	578325	Identifier	j		578083	0					
ANR	578326	IncDec	++		578083	1					
ANR	578327	CompoundStatement		44:2:1054:1083	578083	3					
ANR	578328	IdentifierDeclStatement	int label = g -> getLabelInt ( j ) ;	1010:2:28485:28514	578083	0	True				
ANR	578329	IdentifierDecl	label = g -> getLabelInt ( j )		578083	0					
ANR	578330	IdentifierDeclType	int		578083	0					
ANR	578331	Identifier	label		578083	1					
ANR	578332	AssignmentExpression	label = g -> getLabelInt ( j )		578083	2		=			
ANR	578333	Identifier	label		578083	0					
ANR	578334	CallExpression	g -> getLabelInt ( j )		578083	1					
ANR	578335	Callee	g -> getLabelInt		578083	0					
ANR	578336	PtrMemberAccess	g -> getLabelInt		578083	0					
ANR	578337	Identifier	g		578083	0					
ANR	578338	Identifier	getLabelInt		578083	1					
ANR	578339	ArgumentList	j		578083	1					
ANR	578340	Argument	j		578083	0					
ANR	578341	Identifier	j		578083	0					
ANR	578342	ExpressionStatement	"fprintf ( stream , ""%d.%d [label=\\""%d\\""];\\n"" , j , id , label )"	1011:2:28518:28572	578083	1	True				
ANR	578343	CallExpression	"fprintf ( stream , ""%d.%d [label=\\""%d\\""];\\n"" , j , id , label )"		578083	0					
ANR	578344	Callee	fprintf		578083	0					
ANR	578345	Identifier	fprintf		578083	0					
ANR	578346	ArgumentList	stream		578083	1					
ANR	578347	Argument	stream		578083	0					
ANR	578348	Identifier	stream		578083	0					
ANR	578349	Argument	"""%d.%d [label=\\""%d\\""];\\n"""		578083	1					
ANR	578350	PrimaryExpression	"""%d.%d [label=\\""%d\\""];\\n"""		578083	0					
ANR	578351	Argument	j		578083	2					
ANR	578352	Identifier	j		578083	0					
ANR	578353	Argument	id		578083	3					
ANR	578354	Identifier	id		578083	0					
ANR	578355	Argument	label		578083	4					
ANR	578356	Identifier	label		578083	0					
ANR	578357	ExpressionStatement		1012:2:28576:28576	578083	13	True				
ANR	578358	ExpressionStatement	"fprintf ( stream , ""\\n"" )"	1014:1:28580:28603	578083	14	True				
ANR	578359	CallExpression	"fprintf ( stream , ""\\n"" )"		578083	0					
ANR	578360	Callee	fprintf		578083	0					
ANR	578361	Identifier	fprintf		578083	0					
ANR	578362	ArgumentList	stream		578083	1					
ANR	578363	Argument	stream		578083	0					
ANR	578364	Identifier	stream		578083	0					
ANR	578365	Argument	"""\\n"""		578083	1					
ANR	578366	PrimaryExpression	"""\\n"""		578083	0					
ANR	578367	ReturnType	void		578083	1					
ANR	578368	Identifier	Superdag :: saveConstituent		578083	2					
ANR	578369	ParameterList	"FILE * stream , int id"		578083	3					
ANR	578370	Parameter	FILE * stream	966:32:27401:27412	578083	0	True				
ANR	578371	ParameterType	FILE *		578083	0					
ANR	578372	Identifier	stream		578083	1					
ANR	578373	Parameter	int id	966:46:27415:27420	578083	1	True				
ANR	578374	ParameterType	int		578083	0					
ANR	578375	Identifier	id		578083	1					
ANR	578376	CFGEntryNode	ENTRY		578083		True				
ANR	578377	CFGExitNode	EXIT		578083		True				
ANR	578378	CFGExceptionNode	EXCEPTION		578083		True				
ANR	578379	CFGExceptionNode	EXCEPTION		578083		True				
ANR	578380	CFGExceptionNode	EXCEPTION		578083		True				
ANR	578381	Symbol	g -> getArc		578083						
ANR	578382	Symbol	g -> getNumArcs		578083						
ANR	578383	Symbol	NULL		578083						
ANR	578384	Symbol	g		578083						
ANR	578385	Symbol	g -> getLabelInt		578083						
ANR	578386	Symbol	getConstituent		578083						
ANR	578387	Symbol	j		578083						
ANR	578388	Symbol	k		578083						
ANR	578389	Symbol	label		578083						
ANR	578390	Symbol	* g		578083						
ANR	578391	Symbol	numNodes		578083						
ANR	578392	Symbol	numArcs		578083						
ANR	578393	Symbol	stream		578083						
ANR	578394	Symbol	getType		578083						
ANR	578395	Symbol	g -> getNumNodes		578083						
ANR	578396	Symbol	id		578083						
ANR	578397	Symbol	child		578083						
ANR	578398	Function	Superdag :: saveArcs	1032:0:28867:29590							
ANR	578399	FunctionDef	"Superdag :: saveArcs (FILE * stream , int srcId , int dstId)"		578398	0					
ANR	578400	CompoundStatement		1033:0:28935:29590	578398	0					
ANR	578401	IdentifierDeclStatement	"int i , j ;"	1034:1:28938:28945	578398	0	True				
ANR	578402	IdentifierDecl	i		578398	0					
ANR	578403	IdentifierDeclType	int		578398	0					
ANR	578404	Identifier	i		578398	1					
ANR	578405	IdentifierDecl	j		578398	1					
ANR	578406	IdentifierDeclType	int		578398	0					
ANR	578407	Identifier	j		578398	1					
ANR	578408	IfStatement	if ( NULL == stream )		578398	1					
ANR	578409	Condition	NULL == stream	1036:5:28953:28964	578398	0	True				
ANR	578410	EqualityExpression	NULL == stream		578398	0		==			
ANR	578411	Identifier	NULL		578398	0					
ANR	578412	Identifier	stream		578398	1					
ANR	578413	ThrowStatement	"throw ""Superdag::saveArcs, stream is NULL"" ;"	1037:2:28970:29012	578398	1	True				
ANR	578414	PrimaryExpression	"""Superdag::saveArcs, stream is NULL"""		578398	0					
ANR	578415	IdentifierDeclStatement	Dag * src = getConstituent ( srcId ) ;	1040:1:29040:29072	578398	2	True				
ANR	578416	IdentifierDecl	* src = getConstituent ( srcId )		578398	0					
ANR	578417	IdentifierDeclType	Dag *		578398	0					
ANR	578418	Identifier	src		578398	1					
ANR	578419	AssignmentExpression	* src = getConstituent ( srcId )		578398	2		=			
ANR	578420	Identifier	src		578398	0					
ANR	578421	CallExpression	getConstituent ( srcId )		578398	1					
ANR	578422	Callee	getConstituent		578398	0					
ANR	578423	Identifier	getConstituent		578398	0					
ANR	578424	ArgumentList	srcId		578398	1					
ANR	578425	Argument	srcId		578398	0					
ANR	578426	Identifier	srcId		578398	0					
ANR	578427	IdentifierDeclStatement	Dag * dst = getConstituent ( dstId ) ;	1041:1:29075:29107	578398	3	True				
ANR	578428	IdentifierDecl	* dst = getConstituent ( dstId )		578398	0					
ANR	578429	IdentifierDeclType	Dag *		578398	0					
ANR	578430	Identifier	dst		578398	1					
ANR	578431	AssignmentExpression	* dst = getConstituent ( dstId )		578398	2		=			
ANR	578432	Identifier	dst		578398	0					
ANR	578433	CallExpression	getConstituent ( dstId )		578398	1					
ANR	578434	Callee	getConstituent		578398	0					
ANR	578435	Identifier	getConstituent		578398	0					
ANR	578436	ArgumentList	dstId		578398	1					
ANR	578437	Argument	dstId		578398	0					
ANR	578438	Identifier	dstId		578398	0					
ANR	578439	IfStatement	if ( NULL == src || NULL == dst )		578398	4					
ANR	578440	Condition	NULL == src || NULL == dst	1042:5:29114:29135	578398	0	True				
ANR	578441	OrExpression	NULL == src || NULL == dst		578398	0		||			
ANR	578442	EqualityExpression	NULL == src		578398	0		==			
ANR	578443	Identifier	NULL		578398	0					
ANR	578444	Identifier	src		578398	1					
ANR	578445	EqualityExpression	NULL == dst		578398	1		==			
ANR	578446	Identifier	NULL		578398	0					
ANR	578447	Identifier	dst		578398	1					
ANR	578448	ThrowStatement	"throw ""Superdag::saveArcs, src or dst is NULL"" ;"	1043:2:29141:29187	578398	1	True				
ANR	578449	PrimaryExpression	"""Superdag::saveArcs, src or dst is NULL"""		578398	0					
ANR	578450	ForStatement	for ( i = 0 ; i < src -> getNumNodes ( ) ; i ++ )		578398	5					
ANR	578451	ForInit	i = 0 ;	1046:6:29227:29230	578398	0	True				
ANR	578452	AssignmentExpression	i = 0		578398	0		=			
ANR	578453	Identifier	i		578398	0					
ANR	578454	PrimaryExpression	0		578398	1					
ANR	578455	Condition	i < src -> getNumNodes ( )	1046:11:29232:29251	578398	1	True				
ANR	578456	RelationalExpression	i < src -> getNumNodes ( )		578398	0		<			
ANR	578457	Identifier	i		578398	0					
ANR	578458	CallExpression	src -> getNumNodes ( )		578398	1					
ANR	578459	Callee	src -> getNumNodes		578398	0					
ANR	578460	PtrMemberAccess	src -> getNumNodes		578398	0					
ANR	578461	Identifier	src		578398	0					
ANR	578462	Identifier	getNumNodes		578398	1					
ANR	578463	ArgumentList			578398	1					
ANR	578464	PostIncDecOperationExpression	i ++	1046:33:29254:29256	578398	2	True				
ANR	578465	Identifier	i		578398	0					
ANR	578466	IncDec	++		578398	1					
ANR	578467	CompoundStatement		14:39:324:324	578398	3					
ANR	578468	ForStatement	for ( j = 0 ; j < dst -> getNumNodes ( ) ; j ++ )		578398	0					
ANR	578469	ForInit	j = 0 ;	1047:7:29269:29272	578398	0	True				
ANR	578470	AssignmentExpression	j = 0		578398	0		=			
ANR	578471	Identifier	j		578398	0					
ANR	578472	PrimaryExpression	0		578398	1					
ANR	578473	Condition	j < dst -> getNumNodes ( )	1047:12:29274:29293	578398	1	True				
ANR	578474	RelationalExpression	j < dst -> getNumNodes ( )		578398	0		<			
ANR	578475	Identifier	j		578398	0					
ANR	578476	CallExpression	dst -> getNumNodes ( )		578398	1					
ANR	578477	Callee	dst -> getNumNodes		578398	0					
ANR	578478	PtrMemberAccess	dst -> getNumNodes		578398	0					
ANR	578479	Identifier	dst		578398	0					
ANR	578480	Identifier	getNumNodes		578398	1					
ANR	578481	ArgumentList			578398	1					
ANR	578482	PostIncDecOperationExpression	j ++	1047:34:29296:29298	578398	2	True				
ANR	578483	Identifier	j		578398	0					
ANR	578484	IncDec	++		578398	1					
ANR	578485	CompoundStatement		15:40:366:366	578398	3					
ANR	578486	IfStatement	if ( src -> getLabelInt ( i ) == dst -> getLabelInt ( j ) )		578398	0					
ANR	578487	Condition	src -> getLabelInt ( i ) == dst -> getLabelInt ( j )	1049:7:29350:29391	578398	0	True				
ANR	578488	EqualityExpression	src -> getLabelInt ( i ) == dst -> getLabelInt ( j )		578398	0		==			
ANR	578489	CallExpression	src -> getLabelInt ( i )		578398	0					
ANR	578490	Callee	src -> getLabelInt		578398	0					
ANR	578491	PtrMemberAccess	src -> getLabelInt		578398	0					
ANR	578492	Identifier	src		578398	0					
ANR	578493	Identifier	getLabelInt		578398	1					
ANR	578494	ArgumentList	i		578398	1					
ANR	578495	Argument	i		578398	0					
ANR	578496	Identifier	i		578398	0					
ANR	578497	CallExpression	dst -> getLabelInt ( j )		578398	1					
ANR	578498	Callee	dst -> getLabelInt		578398	0					
ANR	578499	PtrMemberAccess	dst -> getLabelInt		578398	0					
ANR	578500	Identifier	dst		578398	0					
ANR	578501	Identifier	getLabelInt		578398	1					
ANR	578502	ArgumentList	j		578398	1					
ANR	578503	Argument	j		578398	0					
ANR	578504	Identifier	j		578398	0					
ANR	578505	CompoundStatement		17:52:459:459	578398	1					
ANR	578506	ExpressionStatement	"fprintf ( stream , ""%d.%d -> %d.%d "" , i , srcId , j , dstId )"	1050:4:29401:29457	578398	0	True				
ANR	578507	CallExpression	"fprintf ( stream , ""%d.%d -> %d.%d "" , i , srcId , j , dstId )"		578398	0					
ANR	578508	Callee	fprintf		578398	0					
ANR	578509	Identifier	fprintf		578398	0					
ANR	578510	ArgumentList	stream		578398	1					
ANR	578511	Argument	stream		578398	0					
ANR	578512	Identifier	stream		578398	0					
ANR	578513	Argument	"""%d.%d -> %d.%d """		578398	1					
ANR	578514	PrimaryExpression	"""%d.%d -> %d.%d """		578398	0					
ANR	578515	Argument	i		578398	2					
ANR	578516	Identifier	i		578398	0					
ANR	578517	Argument	srcId		578398	3					
ANR	578518	Identifier	srcId		578398	0					
ANR	578519	Argument	j		578398	4					
ANR	578520	Identifier	j		578398	0					
ANR	578521	Argument	dstId		578398	5					
ANR	578522	Identifier	dstId		578398	0					
ANR	578523	ExpressionStatement	"fprintf ( stream , "" [ltail=cluster%d, lhead=cluster%d"" , srcId , dstId )"	1051:4:29463:29533	578398	1	True				
ANR	578524	CallExpression	"fprintf ( stream , "" [ltail=cluster%d, lhead=cluster%d"" , srcId , dstId )"		578398	0					
ANR	578525	Callee	fprintf		578398	0					
ANR	578526	Identifier	fprintf		578398	0					
ANR	578527	ArgumentList	stream		578398	1					
ANR	578528	Argument	stream		578398	0					
ANR	578529	Identifier	stream		578398	0					
ANR	578530	Argument	""" [ltail=cluster%d, lhead=cluster%d"""		578398	1					
ANR	578531	PrimaryExpression	""" [ltail=cluster%d, lhead=cluster%d"""		578398	0					
ANR	578532	Argument	srcId		578398	2					
ANR	578533	Identifier	srcId		578398	0					
ANR	578534	Argument	dstId		578398	3					
ANR	578535	Identifier	dstId		578398	0					
ANR	578536	ExpressionStatement	"fprintf ( stream , "", minlen=3];\\n"" )"	1052:4:29539:29573	578398	2	True				
ANR	578537	CallExpression	"fprintf ( stream , "", minlen=3];\\n"" )"		578398	0					
ANR	578538	Callee	fprintf		578398	0					
ANR	578539	Identifier	fprintf		578398	0					
ANR	578540	ArgumentList	stream		578398	1					
ANR	578541	Argument	stream		578398	0					
ANR	578542	Identifier	stream		578398	0					
ANR	578543	Argument	""", minlen=3];\\n"""		578398	1					
ANR	578544	PrimaryExpression	""", minlen=3];\\n"""		578398	0					
ANR	578545	ExpressionStatement		1053:4:29579:29579	578398	1	True				
ANR	578546	ExpressionStatement		1054:3:29584:29584	578398	1	True				
ANR	578547	ExpressionStatement		1055:2:29588:29588	578398	6	True				
ANR	578548	ReturnType	void		578398	1					
ANR	578549	Identifier	Superdag :: saveArcs		578398	2					
ANR	578550	ParameterList	"FILE * stream , int srcId , int dstId"		578398	3					
ANR	578551	Parameter	FILE * stream	1032:25:28892:28903	578398	0	True				
ANR	578552	ParameterType	FILE *		578398	0					
ANR	578553	Identifier	stream		578398	1					
ANR	578554	Parameter	int srcId	1032:39:28906:28914	578398	1	True				
ANR	578555	ParameterType	int		578398	0					
ANR	578556	Identifier	srcId		578398	1					
ANR	578557	Parameter	int dstId	1032:50:28917:28925	578398	2	True				
ANR	578558	ParameterType	int		578398	0					
ANR	578559	Identifier	dstId		578398	1					
ANR	578560	CFGEntryNode	ENTRY		578398		True				
ANR	578561	CFGExitNode	EXIT		578398		True				
ANR	578562	CFGExceptionNode	EXCEPTION		578398		True				
ANR	578563	CFGExceptionNode	EXCEPTION		578398		True				
ANR	578564	CFGExceptionNode	EXCEPTION		578398		True				
ANR	578565	Symbol	NULL		578398						
ANR	578566	Symbol	dst		578398						
ANR	578567	Symbol	src		578398						
ANR	578568	Symbol	i		578398						
ANR	578569	Symbol	getConstituent		578398						
ANR	578570	Symbol	j		578398						
ANR	578571	Symbol	src -> getNumNodes		578398						
ANR	578572	Symbol	* src		578398						
ANR	578573	Symbol	* dst		578398						
ANR	578574	Symbol	dst -> getLabelInt		578398						
ANR	578575	Symbol	stream		578398						
ANR	578576	Symbol	srcId		578398						
ANR	578577	Symbol	dstId		578398						
ANR	578578	Symbol	dst -> getNumNodes		578398						
ANR	578579	Symbol	src -> getLabelInt		578398						
ANR	578580	Function	Superdag_test	1072:0:29742:31337							
ANR	578581	FunctionDef	Superdag_test ()		578580	0					
ANR	578582	CompoundStatement		1073:0:29767:31337	578580	0					
ANR	578583	CompoundStatement		13:2:154:168	578580	0					
ANR	578584	IdentifierDeclStatement	Dag g ;	1077:2:29802:29807	578580	0	True				
ANR	578585	IdentifierDecl	g		578580	0					
ANR	578586	IdentifierDeclType	Dag		578580	0					
ANR	578587	Identifier	g		578580	1					
ANR	578588	ExpressionStatement	g . addNode ( )	1078:2:29811:29822	578580	1	True				
ANR	578589	CallExpression	g . addNode ( )		578580	0					
ANR	578590	Callee	g . addNode		578580	0					
ANR	578591	MemberAccess	g . addNode		578580	0					
ANR	578592	Identifier	g		578580	0					
ANR	578593	Identifier	addNode		578580	1					
ANR	578594	ArgumentList			578580	1					
ANR	578595	ExpressionStatement	g . addNode ( )	1079:2:29826:29837	578580	2	True				
ANR	578596	CallExpression	g . addNode ( )		578580	0					
ANR	578597	Callee	g . addNode		578580	0					
ANR	578598	MemberAccess	g . addNode		578580	0					
ANR	578599	Identifier	g		578580	0					
ANR	578600	Identifier	addNode		578580	1					
ANR	578601	ArgumentList			578580	1					
ANR	578602	ExpressionStatement	g . addNode ( )	1080:2:29841:29852	578580	3	True				
ANR	578603	CallExpression	g . addNode ( )		578580	0					
ANR	578604	Callee	g . addNode		578580	0					
ANR	578605	MemberAccess	g . addNode		578580	0					
ANR	578606	Identifier	g		578580	0					
ANR	578607	Identifier	addNode		578580	1					
ANR	578608	ArgumentList			578580	1					
ANR	578609	ExpressionStatement	g . addNode ( )	1081:2:29856:29867	578580	4	True				
ANR	578610	CallExpression	g . addNode ( )		578580	0					
ANR	578611	Callee	g . addNode		578580	0					
ANR	578612	MemberAccess	g . addNode		578580	0					
ANR	578613	Identifier	g		578580	0					
ANR	578614	Identifier	addNode		578580	1					
ANR	578615	ArgumentList			578580	1					
ANR	578616	ExpressionStatement	"g . addArc ( 0 , 1 )"	1082:2:29871:29884	578580	5	True				
ANR	578617	CallExpression	"g . addArc ( 0 , 1 )"		578580	0					
ANR	578618	Callee	g . addArc		578580	0					
ANR	578619	MemberAccess	g . addArc		578580	0					
ANR	578620	Identifier	g		578580	0					
ANR	578621	Identifier	addArc		578580	1					
ANR	578622	ArgumentList	0		578580	1					
ANR	578623	Argument	0		578580	0					
ANR	578624	PrimaryExpression	0		578580	0					
ANR	578625	Argument	1		578580	1					
ANR	578626	PrimaryExpression	1		578580	0					
ANR	578627	ExpressionStatement	"g . addArc ( 1 , 2 )"	1083:2:29888:29901	578580	6	True				
ANR	578628	CallExpression	"g . addArc ( 1 , 2 )"		578580	0					
ANR	578629	Callee	g . addArc		578580	0					
ANR	578630	MemberAccess	g . addArc		578580	0					
ANR	578631	Identifier	g		578580	0					
ANR	578632	Identifier	addArc		578580	1					
ANR	578633	ArgumentList	1		578580	1					
ANR	578634	Argument	1		578580	0					
ANR	578635	PrimaryExpression	1		578580	0					
ANR	578636	Argument	2		578580	1					
ANR	578637	PrimaryExpression	2		578580	0					
ANR	578638	ExpressionStatement	"g . addArc ( 0 , 2 )"	1084:2:29905:29918	578580	7	True				
ANR	578639	CallExpression	"g . addArc ( 0 , 2 )"		578580	0					
ANR	578640	Callee	g . addArc		578580	0					
ANR	578641	MemberAccess	g . addArc		578580	0					
ANR	578642	Identifier	g		578580	0					
ANR	578643	Identifier	addArc		578580	1					
ANR	578644	ArgumentList	0		578580	1					
ANR	578645	Argument	0		578580	0					
ANR	578646	PrimaryExpression	0		578580	0					
ANR	578647	Argument	2		578580	1					
ANR	578648	PrimaryExpression	2		578580	0					
ANR	578649	IdentifierDeclStatement	Superdag sd ( g ) ;	1085:2:29922:29936	578580	8	True				
ANR	578650	IdentifierDecl	sd ( g )		578580	0					
ANR	578651	IdentifierDeclType	Superdag		578580	0					
ANR	578652	Identifier	sd		578580	1					
ANR	578653	Identifier	g		578580	2					
ANR	578654	ExpressionStatement	"printf ( ""num constituents %d\\n"" , sd . getNumConstituent ( ) )"	1086:2:29940:29996	578580	9	True				
ANR	578655	CallExpression	"printf ( ""num constituents %d\\n"" , sd . getNumConstituent ( ) )"		578580	0					
ANR	578656	Callee	printf		578580	0					
ANR	578657	Identifier	printf		578580	0					
ANR	578658	ArgumentList	"""num constituents %d\\n"""		578580	1					
ANR	578659	Argument	"""num constituents %d\\n"""		578580	0					
ANR	578660	PrimaryExpression	"""num constituents %d\\n"""		578580	0					
ANR	578661	Argument	sd . getNumConstituent ( )		578580	1					
ANR	578662	CallExpression	sd . getNumConstituent ( )		578580	0					
ANR	578663	Callee	sd . getNumConstituent		578580	0					
ANR	578664	MemberAccess	sd . getNumConstituent		578580	0					
ANR	578665	Identifier	sd		578580	0					
ANR	578666	Identifier	getNumConstituent		578580	1					
ANR	578667	ArgumentList			578580	1					
ANR	578668	ForStatement	for ( int i = 0 ; i < sd . getNumConstituent ( ) ; i ++ )		578580	10					
ANR	578669	ForInit	int i = 0 ;	1087:7:30005:30012	578580	0	True				
ANR	578670	IdentifierDeclStatement	int i = 0 ;		578580	0					
ANR	578671	IdentifierDecl	i = 0		578580	0					
ANR	578672	IdentifierDeclType	int		578580	0					
ANR	578673	Identifier	i		578580	1					
ANR	578674	AssignmentExpression	i = 0		578580	2		=			
ANR	578675	Identifier	i		578580	0					
ANR	578676	PrimaryExpression	0		578580	1					
ANR	578677	Condition	i < sd . getNumConstituent ( )	1087:16:30014:30037	578580	1	True				
ANR	578678	RelationalExpression	i < sd . getNumConstituent ( )		578580	0		<			
ANR	578679	Identifier	i		578580	0					
ANR	578680	CallExpression	sd . getNumConstituent ( )		578580	1					
ANR	578681	Callee	sd . getNumConstituent		578580	0					
ANR	578682	MemberAccess	sd . getNumConstituent		578580	0					
ANR	578683	Identifier	sd		578580	0					
ANR	578684	Identifier	getNumConstituent		578580	1					
ANR	578685	ArgumentList			578580	1					
ANR	578686	PostIncDecOperationExpression	i ++	1087:42:30040:30042	578580	2	True				
ANR	578687	Identifier	i		578580	0					
ANR	578688	IncDec	++		578580	1					
ANR	578689	CompoundStatement		15:48:278:278	578580	3					
ANR	578690	ExpressionStatement	"printf ( ""-- %d type %d\\n"" , i , sd . getType ( i ) )"	1088:3:30051:30093	578580	0	True				
ANR	578691	CallExpression	"printf ( ""-- %d type %d\\n"" , i , sd . getType ( i ) )"		578580	0					
ANR	578692	Callee	printf		578580	0					
ANR	578693	Identifier	printf		578580	0					
ANR	578694	ArgumentList	"""-- %d type %d\\n"""		578580	1					
ANR	578695	Argument	"""-- %d type %d\\n"""		578580	0					
ANR	578696	PrimaryExpression	"""-- %d type %d\\n"""		578580	0					
ANR	578697	Argument	i		578580	1					
ANR	578698	Identifier	i		578580	0					
ANR	578699	Argument	sd . getType ( i )		578580	2					
ANR	578700	CallExpression	sd . getType ( i )		578580	0					
ANR	578701	Callee	sd . getType		578580	0					
ANR	578702	MemberAccess	sd . getType		578580	0					
ANR	578703	Identifier	sd		578580	0					
ANR	578704	Identifier	getType		578580	1					
ANR	578705	ArgumentList	i		578580	1					
ANR	578706	Argument	i		578580	0					
ANR	578707	Identifier	i		578580	0					
ANR	578708	ExpressionStatement	( sd . getConstituent ( i ) ) -> printAsText ( )	1089:3:30098:30135	578580	1	True				
ANR	578709	CallExpression	( sd . getConstituent ( i ) ) -> printAsText ( )		578580	0					
ANR	578710	Callee	( sd . getConstituent ( i ) ) -> printAsText		578580	0					
ANR	578711	PtrMemberAccess	( sd . getConstituent ( i ) ) -> printAsText		578580	0					
ANR	578712	CallExpression	sd . getConstituent ( i )		578580	0					
ANR	578713	Callee	sd . getConstituent		578580	0					
ANR	578714	MemberAccess	sd . getConstituent		578580	0					
ANR	578715	Identifier	sd		578580	0					
ANR	578716	Identifier	getConstituent		578580	1					
ANR	578717	ArgumentList	i		578580	1					
ANR	578718	Argument	i		578580	0					
ANR	578719	Identifier	i		578580	0					
ANR	578720	Identifier	printAsText		578580	1					
ANR	578721	ArgumentList			578580	1					
ANR	578722	ExpressionStatement		1090:3:30140:30140	578580	11	True				
ANR	578723	ExpressionStatement		1091:2:30144:30144	578580	1	True				
ANR	578724	CompoundStatement		34:2:583:597	578580	2					
ANR	578725	IdentifierDeclStatement	Dag h ;	1095:2:30182:30187	578580	0	True				
ANR	578726	IdentifierDecl	h		578580	0					
ANR	578727	IdentifierDeclType	Dag		578580	0					
ANR	578728	Identifier	h		578580	1					
ANR	578729	ExpressionStatement	h . addNode ( )	1096:2:30191:30202	578580	1	True				
ANR	578730	CallExpression	h . addNode ( )		578580	0					
ANR	578731	Callee	h . addNode		578580	0					
ANR	578732	MemberAccess	h . addNode		578580	0					
ANR	578733	Identifier	h		578580	0					
ANR	578734	Identifier	addNode		578580	1					
ANR	578735	ArgumentList			578580	1					
ANR	578736	ExpressionStatement	h . addNode ( )	1097:2:30206:30217	578580	2	True				
ANR	578737	CallExpression	h . addNode ( )		578580	0					
ANR	578738	Callee	h . addNode		578580	0					
ANR	578739	MemberAccess	h . addNode		578580	0					
ANR	578740	Identifier	h		578580	0					
ANR	578741	Identifier	addNode		578580	1					
ANR	578742	ArgumentList			578580	1					
ANR	578743	ExpressionStatement	h . addNode ( )	1098:2:30221:30232	578580	3	True				
ANR	578744	CallExpression	h . addNode ( )		578580	0					
ANR	578745	Callee	h . addNode		578580	0					
ANR	578746	MemberAccess	h . addNode		578580	0					
ANR	578747	Identifier	h		578580	0					
ANR	578748	Identifier	addNode		578580	1					
ANR	578749	ArgumentList			578580	1					
ANR	578750	ExpressionStatement	h . addNode ( )	1099:2:30236:30247	578580	4	True				
ANR	578751	CallExpression	h . addNode ( )		578580	0					
ANR	578752	Callee	h . addNode		578580	0					
ANR	578753	MemberAccess	h . addNode		578580	0					
ANR	578754	Identifier	h		578580	0					
ANR	578755	Identifier	addNode		578580	1					
ANR	578756	ArgumentList			578580	1					
ANR	578757	ExpressionStatement	h . addNode ( )	1100:2:30251:30262	578580	5	True				
ANR	578758	CallExpression	h . addNode ( )		578580	0					
ANR	578759	Callee	h . addNode		578580	0					
ANR	578760	MemberAccess	h . addNode		578580	0					
ANR	578761	Identifier	h		578580	0					
ANR	578762	Identifier	addNode		578580	1					
ANR	578763	ArgumentList			578580	1					
ANR	578764	ExpressionStatement	"h . addArc ( 0 , 1 )"	1101:2:30266:30279	578580	6	True				
ANR	578765	CallExpression	"h . addArc ( 0 , 1 )"		578580	0					
ANR	578766	Callee	h . addArc		578580	0					
ANR	578767	MemberAccess	h . addArc		578580	0					
ANR	578768	Identifier	h		578580	0					
ANR	578769	Identifier	addArc		578580	1					
ANR	578770	ArgumentList	0		578580	1					
ANR	578771	Argument	0		578580	0					
ANR	578772	PrimaryExpression	0		578580	0					
ANR	578773	Argument	1		578580	1					
ANR	578774	PrimaryExpression	1		578580	0					
ANR	578775	ExpressionStatement	"h . addArc ( 1 , 2 )"	1102:2:30283:30296	578580	7	True				
ANR	578776	CallExpression	"h . addArc ( 1 , 2 )"		578580	0					
ANR	578777	Callee	h . addArc		578580	0					
ANR	578778	MemberAccess	h . addArc		578580	0					
ANR	578779	Identifier	h		578580	0					
ANR	578780	Identifier	addArc		578580	1					
ANR	578781	ArgumentList	1		578580	1					
ANR	578782	Argument	1		578580	0					
ANR	578783	PrimaryExpression	1		578580	0					
ANR	578784	Argument	2		578580	1					
ANR	578785	PrimaryExpression	2		578580	0					
ANR	578786	ExpressionStatement	"h . addArc ( 0 , 4 )"	1103:2:30300:30313	578580	8	True				
ANR	578787	CallExpression	"h . addArc ( 0 , 4 )"		578580	0					
ANR	578788	Callee	h . addArc		578580	0					
ANR	578789	MemberAccess	h . addArc		578580	0					
ANR	578790	Identifier	h		578580	0					
ANR	578791	Identifier	addArc		578580	1					
ANR	578792	ArgumentList	0		578580	1					
ANR	578793	Argument	0		578580	0					
ANR	578794	PrimaryExpression	0		578580	0					
ANR	578795	Argument	4		578580	1					
ANR	578796	PrimaryExpression	4		578580	0					
ANR	578797	ExpressionStatement	"h . addArc ( 3 , 2 )"	1104:2:30317:30330	578580	9	True				
ANR	578798	CallExpression	"h . addArc ( 3 , 2 )"		578580	0					
ANR	578799	Callee	h . addArc		578580	0					
ANR	578800	MemberAccess	h . addArc		578580	0					
ANR	578801	Identifier	h		578580	0					
ANR	578802	Identifier	addArc		578580	1					
ANR	578803	ArgumentList	3		578580	1					
ANR	578804	Argument	3		578580	0					
ANR	578805	PrimaryExpression	3		578580	0					
ANR	578806	Argument	2		578580	1					
ANR	578807	PrimaryExpression	2		578580	0					
ANR	578808	ExpressionStatement	"h . addArc ( 3 , 4 )"	1105:2:30334:30347	578580	10	True				
ANR	578809	CallExpression	"h . addArc ( 3 , 4 )"		578580	0					
ANR	578810	Callee	h . addArc		578580	0					
ANR	578811	MemberAccess	h . addArc		578580	0					
ANR	578812	Identifier	h		578580	0					
ANR	578813	Identifier	addArc		578580	1					
ANR	578814	ArgumentList	3		578580	1					
ANR	578815	Argument	3		578580	0					
ANR	578816	PrimaryExpression	3		578580	0					
ANR	578817	Argument	4		578580	1					
ANR	578818	PrimaryExpression	4		578580	0					
ANR	578819	IdentifierDeclStatement	Superdag sd ( h ) ;	1106:2:30351:30365	578580	11	True				
ANR	578820	IdentifierDecl	sd ( h )		578580	0					
ANR	578821	IdentifierDeclType	Superdag		578580	0					
ANR	578822	Identifier	sd		578580	1					
ANR	578823	Identifier	h		578580	2					
ANR	578824	ExpressionStatement	"printf ( ""num constituents %d\\n"" , sd . getNumConstituent ( ) )"	1107:2:30369:30425	578580	12	True				
ANR	578825	CallExpression	"printf ( ""num constituents %d\\n"" , sd . getNumConstituent ( ) )"		578580	0					
ANR	578826	Callee	printf		578580	0					
ANR	578827	Identifier	printf		578580	0					
ANR	578828	ArgumentList	"""num constituents %d\\n"""		578580	1					
ANR	578829	Argument	"""num constituents %d\\n"""		578580	0					
ANR	578830	PrimaryExpression	"""num constituents %d\\n"""		578580	0					
ANR	578831	Argument	sd . getNumConstituent ( )		578580	1					
ANR	578832	CallExpression	sd . getNumConstituent ( )		578580	0					
ANR	578833	Callee	sd . getNumConstituent		578580	0					
ANR	578834	MemberAccess	sd . getNumConstituent		578580	0					
ANR	578835	Identifier	sd		578580	0					
ANR	578836	Identifier	getNumConstituent		578580	1					
ANR	578837	ArgumentList			578580	1					
ANR	578838	ForStatement	for ( int i = 0 ; i < sd . getNumConstituent ( ) ; i ++ )		578580	13					
ANR	578839	ForInit	int i = 0 ;	1108:7:30434:30441	578580	0	True				
ANR	578840	IdentifierDeclStatement	int i = 0 ;		578580	0					
ANR	578841	IdentifierDecl	i = 0		578580	0					
ANR	578842	IdentifierDeclType	int		578580	0					
ANR	578843	Identifier	i		578580	1					
ANR	578844	AssignmentExpression	i = 0		578580	2		=			
ANR	578845	Identifier	i		578580	0					
ANR	578846	PrimaryExpression	0		578580	1					
ANR	578847	Condition	i < sd . getNumConstituent ( )	1108:16:30443:30466	578580	1	True				
ANR	578848	RelationalExpression	i < sd . getNumConstituent ( )		578580	0		<			
ANR	578849	Identifier	i		578580	0					
ANR	578850	CallExpression	sd . getNumConstituent ( )		578580	1					
ANR	578851	Callee	sd . getNumConstituent		578580	0					
ANR	578852	MemberAccess	sd . getNumConstituent		578580	0					
ANR	578853	Identifier	sd		578580	0					
ANR	578854	Identifier	getNumConstituent		578580	1					
ANR	578855	ArgumentList			578580	1					
ANR	578856	PostIncDecOperationExpression	i ++	1108:42:30469:30471	578580	2	True				
ANR	578857	Identifier	i		578580	0					
ANR	578858	IncDec	++		578580	1					
ANR	578859	CompoundStatement		36:48:707:707	578580	3					
ANR	578860	ExpressionStatement	"printf ( ""-- %d type %d\\n"" , i , sd . getType ( i ) )"	1109:3:30480:30522	578580	0	True				
ANR	578861	CallExpression	"printf ( ""-- %d type %d\\n"" , i , sd . getType ( i ) )"		578580	0					
ANR	578862	Callee	printf		578580	0					
ANR	578863	Identifier	printf		578580	0					
ANR	578864	ArgumentList	"""-- %d type %d\\n"""		578580	1					
ANR	578865	Argument	"""-- %d type %d\\n"""		578580	0					
ANR	578866	PrimaryExpression	"""-- %d type %d\\n"""		578580	0					
ANR	578867	Argument	i		578580	1					
ANR	578868	Identifier	i		578580	0					
ANR	578869	Argument	sd . getType ( i )		578580	2					
ANR	578870	CallExpression	sd . getType ( i )		578580	0					
ANR	578871	Callee	sd . getType		578580	0					
ANR	578872	MemberAccess	sd . getType		578580	0					
ANR	578873	Identifier	sd		578580	0					
ANR	578874	Identifier	getType		578580	1					
ANR	578875	ArgumentList	i		578580	1					
ANR	578876	Argument	i		578580	0					
ANR	578877	Identifier	i		578580	0					
ANR	578878	ExpressionStatement	( sd . getConstituent ( i ) ) -> printAsText ( )	1110:3:30527:30564	578580	1	True				
ANR	578879	CallExpression	( sd . getConstituent ( i ) ) -> printAsText ( )		578580	0					
ANR	578880	Callee	( sd . getConstituent ( i ) ) -> printAsText		578580	0					
ANR	578881	PtrMemberAccess	( sd . getConstituent ( i ) ) -> printAsText		578580	0					
ANR	578882	CallExpression	sd . getConstituent ( i )		578580	0					
ANR	578883	Callee	sd . getConstituent		578580	0					
ANR	578884	MemberAccess	sd . getConstituent		578580	0					
ANR	578885	Identifier	sd		578580	0					
ANR	578886	Identifier	getConstituent		578580	1					
ANR	578887	ArgumentList	i		578580	1					
ANR	578888	Argument	i		578580	0					
ANR	578889	Identifier	i		578580	0					
ANR	578890	Identifier	printAsText		578580	1					
ANR	578891	ArgumentList			578580	1					
ANR	578892	ExpressionStatement		1111:3:30569:30569	578580	14	True				
ANR	578893	ExpressionStatement		1112:2:30573:30573	578580	3	True				
ANR	578894	CompoundStatement		60:2:1105:1119	578580	4					
ANR	578895	IdentifierDeclStatement	Dag h ;	1116:2:30615:30620	578580	0	True				
ANR	578896	IdentifierDecl	h		578580	0					
ANR	578897	IdentifierDeclType	Dag		578580	0					
ANR	578898	Identifier	h		578580	1					
ANR	578899	ExpressionStatement	h . addNode ( )	1117:2:30624:30635	578580	1	True				
ANR	578900	CallExpression	h . addNode ( )		578580	0					
ANR	578901	Callee	h . addNode		578580	0					
ANR	578902	MemberAccess	h . addNode		578580	0					
ANR	578903	Identifier	h		578580	0					
ANR	578904	Identifier	addNode		578580	1					
ANR	578905	ArgumentList			578580	1					
ANR	578906	ExpressionStatement	h . addNode ( )	1118:2:30639:30650	578580	2	True				
ANR	578907	CallExpression	h . addNode ( )		578580	0					
ANR	578908	Callee	h . addNode		578580	0					
ANR	578909	MemberAccess	h . addNode		578580	0					
ANR	578910	Identifier	h		578580	0					
ANR	578911	Identifier	addNode		578580	1					
ANR	578912	ArgumentList			578580	1					
ANR	578913	ExpressionStatement	h . addNode ( )	1119:2:30654:30665	578580	3	True				
ANR	578914	CallExpression	h . addNode ( )		578580	0					
ANR	578915	Callee	h . addNode		578580	0					
ANR	578916	MemberAccess	h . addNode		578580	0					
ANR	578917	Identifier	h		578580	0					
ANR	578918	Identifier	addNode		578580	1					
ANR	578919	ArgumentList			578580	1					
ANR	578920	ExpressionStatement	h . addNode ( )	1120:2:30669:30680	578580	4	True				
ANR	578921	CallExpression	h . addNode ( )		578580	0					
ANR	578922	Callee	h . addNode		578580	0					
ANR	578923	MemberAccess	h . addNode		578580	0					
ANR	578924	Identifier	h		578580	0					
ANR	578925	Identifier	addNode		578580	1					
ANR	578926	ArgumentList			578580	1					
ANR	578927	ExpressionStatement	h . addNode ( )	1121:2:30684:30695	578580	5	True				
ANR	578928	CallExpression	h . addNode ( )		578580	0					
ANR	578929	Callee	h . addNode		578580	0					
ANR	578930	MemberAccess	h . addNode		578580	0					
ANR	578931	Identifier	h		578580	0					
ANR	578932	Identifier	addNode		578580	1					
ANR	578933	ArgumentList			578580	1					
ANR	578934	ExpressionStatement	h . addNode ( )	1122:2:30699:30710	578580	6	True				
ANR	578935	CallExpression	h . addNode ( )		578580	0					
ANR	578936	Callee	h . addNode		578580	0					
ANR	578937	MemberAccess	h . addNode		578580	0					
ANR	578938	Identifier	h		578580	0					
ANR	578939	Identifier	addNode		578580	1					
ANR	578940	ArgumentList			578580	1					
ANR	578941	ExpressionStatement	h . addNode ( )	1123:2:30714:30725	578580	7	True				
ANR	578942	CallExpression	h . addNode ( )		578580	0					
ANR	578943	Callee	h . addNode		578580	0					
ANR	578944	MemberAccess	h . addNode		578580	0					
ANR	578945	Identifier	h		578580	0					
ANR	578946	Identifier	addNode		578580	1					
ANR	578947	ArgumentList			578580	1					
ANR	578948	ExpressionStatement	"h . addArc ( 0 , 1 )"	1124:2:30729:30742	578580	8	True				
ANR	578949	CallExpression	"h . addArc ( 0 , 1 )"		578580	0					
ANR	578950	Callee	h . addArc		578580	0					
ANR	578951	MemberAccess	h . addArc		578580	0					
ANR	578952	Identifier	h		578580	0					
ANR	578953	Identifier	addArc		578580	1					
ANR	578954	ArgumentList	0		578580	1					
ANR	578955	Argument	0		578580	0					
ANR	578956	PrimaryExpression	0		578580	0					
ANR	578957	Argument	1		578580	1					
ANR	578958	PrimaryExpression	1		578580	0					
ANR	578959	ExpressionStatement	"h . addArc ( 1 , 2 )"	1125:2:30746:30759	578580	9	True				
ANR	578960	CallExpression	"h . addArc ( 1 , 2 )"		578580	0					
ANR	578961	Callee	h . addArc		578580	0					
ANR	578962	MemberAccess	h . addArc		578580	0					
ANR	578963	Identifier	h		578580	0					
ANR	578964	Identifier	addArc		578580	1					
ANR	578965	ArgumentList	1		578580	1					
ANR	578966	Argument	1		578580	0					
ANR	578967	PrimaryExpression	1		578580	0					
ANR	578968	Argument	2		578580	1					
ANR	578969	PrimaryExpression	2		578580	0					
ANR	578970	ExpressionStatement	"h . addArc ( 0 , 4 )"	1126:2:30763:30776	578580	10	True				
ANR	578971	CallExpression	"h . addArc ( 0 , 4 )"		578580	0					
ANR	578972	Callee	h . addArc		578580	0					
ANR	578973	MemberAccess	h . addArc		578580	0					
ANR	578974	Identifier	h		578580	0					
ANR	578975	Identifier	addArc		578580	1					
ANR	578976	ArgumentList	0		578580	1					
ANR	578977	Argument	0		578580	0					
ANR	578978	PrimaryExpression	0		578580	0					
ANR	578979	Argument	4		578580	1					
ANR	578980	PrimaryExpression	4		578580	0					
ANR	578981	ExpressionStatement	"h . addArc ( 3 , 2 )"	1127:2:30780:30793	578580	11	True				
ANR	578982	CallExpression	"h . addArc ( 3 , 2 )"		578580	0					
ANR	578983	Callee	h . addArc		578580	0					
ANR	578984	MemberAccess	h . addArc		578580	0					
ANR	578985	Identifier	h		578580	0					
ANR	578986	Identifier	addArc		578580	1					
ANR	578987	ArgumentList	3		578580	1					
ANR	578988	Argument	3		578580	0					
ANR	578989	PrimaryExpression	3		578580	0					
ANR	578990	Argument	2		578580	1					
ANR	578991	PrimaryExpression	2		578580	0					
ANR	578992	ExpressionStatement	"h . addArc ( 3 , 4 )"	1128:2:30797:30810	578580	12	True				
ANR	578993	CallExpression	"h . addArc ( 3 , 4 )"		578580	0					
ANR	578994	Callee	h . addArc		578580	0					
ANR	578995	MemberAccess	h . addArc		578580	0					
ANR	578996	Identifier	h		578580	0					
ANR	578997	Identifier	addArc		578580	1					
ANR	578998	ArgumentList	3		578580	1					
ANR	578999	Argument	3		578580	0					
ANR	579000	PrimaryExpression	3		578580	0					
ANR	579001	Argument	4		578580	1					
ANR	579002	PrimaryExpression	4		578580	0					
ANR	579003	ExpressionStatement	"h . addArc ( 5 , 6 )"	1129:2:30814:30827	578580	13	True				
ANR	579004	CallExpression	"h . addArc ( 5 , 6 )"		578580	0					
ANR	579005	Callee	h . addArc		578580	0					
ANR	579006	MemberAccess	h . addArc		578580	0					
ANR	579007	Identifier	h		578580	0					
ANR	579008	Identifier	addArc		578580	1					
ANR	579009	ArgumentList	5		578580	1					
ANR	579010	Argument	5		578580	0					
ANR	579011	PrimaryExpression	5		578580	0					
ANR	579012	Argument	6		578580	1					
ANR	579013	PrimaryExpression	6		578580	0					
ANR	579014	ExpressionStatement	"h . addArc ( 4 , 6 )"	1130:2:30831:30844	578580	14	True				
ANR	579015	CallExpression	"h . addArc ( 4 , 6 )"		578580	0					
ANR	579016	Callee	h . addArc		578580	0					
ANR	579017	MemberAccess	h . addArc		578580	0					
ANR	579018	Identifier	h		578580	0					
ANR	579019	Identifier	addArc		578580	1					
ANR	579020	ArgumentList	4		578580	1					
ANR	579021	Argument	4		578580	0					
ANR	579022	PrimaryExpression	4		578580	0					
ANR	579023	Argument	6		578580	1					
ANR	579024	PrimaryExpression	6		578580	0					
ANR	579025	ExpressionStatement	"h . saveAsDot ( ""h2.dot"" )"	1131:2:30848:30869	578580	15	True				
ANR	579026	CallExpression	"h . saveAsDot ( ""h2.dot"" )"		578580	0					
ANR	579027	Callee	h . saveAsDot		578580	0					
ANR	579028	MemberAccess	h . saveAsDot		578580	0					
ANR	579029	Identifier	h		578580	0					
ANR	579030	Identifier	saveAsDot		578580	1					
ANR	579031	ArgumentList	"""h2.dot"""		578580	1					
ANR	579032	Argument	"""h2.dot"""		578580	0					
ANR	579033	PrimaryExpression	"""h2.dot"""		578580	0					
ANR	579034	IdentifierDeclStatement	Superdag sd ( h ) ;	1132:2:30873:30887	578580	16	True				
ANR	579035	IdentifierDecl	sd ( h )		578580	0					
ANR	579036	IdentifierDeclType	Superdag		578580	0					
ANR	579037	Identifier	sd		578580	1					
ANR	579038	Identifier	h		578580	2					
ANR	579039	ExpressionStatement	"printf ( ""num constituents %d\\n"" , sd . getNumConstituent ( ) )"	1133:2:30891:30947	578580	17	True				
ANR	579040	CallExpression	"printf ( ""num constituents %d\\n"" , sd . getNumConstituent ( ) )"		578580	0					
ANR	579041	Callee	printf		578580	0					
ANR	579042	Identifier	printf		578580	0					
ANR	579043	ArgumentList	"""num constituents %d\\n"""		578580	1					
ANR	579044	Argument	"""num constituents %d\\n"""		578580	0					
ANR	579045	PrimaryExpression	"""num constituents %d\\n"""		578580	0					
ANR	579046	Argument	sd . getNumConstituent ( )		578580	1					
ANR	579047	CallExpression	sd . getNumConstituent ( )		578580	0					
ANR	579048	Callee	sd . getNumConstituent		578580	0					
ANR	579049	MemberAccess	sd . getNumConstituent		578580	0					
ANR	579050	Identifier	sd		578580	0					
ANR	579051	Identifier	getNumConstituent		578580	1					
ANR	579052	ArgumentList			578580	1					
ANR	579053	ForStatement	for ( int i = 0 ; i < sd . getNumConstituent ( ) ; i ++ )		578580	18					
ANR	579054	ForInit	int i = 0 ;	1134:7:30956:30963	578580	0	True				
ANR	579055	IdentifierDeclStatement	int i = 0 ;		578580	0					
ANR	579056	IdentifierDecl	i = 0		578580	0					
ANR	579057	IdentifierDeclType	int		578580	0					
ANR	579058	Identifier	i		578580	1					
ANR	579059	AssignmentExpression	i = 0		578580	2		=			
ANR	579060	Identifier	i		578580	0					
ANR	579061	PrimaryExpression	0		578580	1					
ANR	579062	Condition	i < sd . getNumConstituent ( )	1134:16:30965:30988	578580	1	True				
ANR	579063	RelationalExpression	i < sd . getNumConstituent ( )		578580	0		<			
ANR	579064	Identifier	i		578580	0					
ANR	579065	CallExpression	sd . getNumConstituent ( )		578580	1					
ANR	579066	Callee	sd . getNumConstituent		578580	0					
ANR	579067	MemberAccess	sd . getNumConstituent		578580	0					
ANR	579068	Identifier	sd		578580	0					
ANR	579069	Identifier	getNumConstituent		578580	1					
ANR	579070	ArgumentList			578580	1					
ANR	579071	PostIncDecOperationExpression	i ++	1134:42:30991:30993	578580	2	True				
ANR	579072	Identifier	i		578580	0					
ANR	579073	IncDec	++		578580	1					
ANR	579074	CompoundStatement		62:48:1229:1229	578580	3					
ANR	579075	ExpressionStatement	"printf ( ""-- %d type %d\\n"" , i , sd . getType ( i ) )"	1135:3:31002:31044	578580	0	True				
ANR	579076	CallExpression	"printf ( ""-- %d type %d\\n"" , i , sd . getType ( i ) )"		578580	0					
ANR	579077	Callee	printf		578580	0					
ANR	579078	Identifier	printf		578580	0					
ANR	579079	ArgumentList	"""-- %d type %d\\n"""		578580	1					
ANR	579080	Argument	"""-- %d type %d\\n"""		578580	0					
ANR	579081	PrimaryExpression	"""-- %d type %d\\n"""		578580	0					
ANR	579082	Argument	i		578580	1					
ANR	579083	Identifier	i		578580	0					
ANR	579084	Argument	sd . getType ( i )		578580	2					
ANR	579085	CallExpression	sd . getType ( i )		578580	0					
ANR	579086	Callee	sd . getType		578580	0					
ANR	579087	MemberAccess	sd . getType		578580	0					
ANR	579088	Identifier	sd		578580	0					
ANR	579089	Identifier	getType		578580	1					
ANR	579090	ArgumentList	i		578580	1					
ANR	579091	Argument	i		578580	0					
ANR	579092	Identifier	i		578580	0					
ANR	579093	ExpressionStatement	( sd . getConstituent ( i ) ) -> printAsText ( )	1136:3:31049:31086	578580	1	True				
ANR	579094	CallExpression	( sd . getConstituent ( i ) ) -> printAsText ( )		578580	0					
ANR	579095	Callee	( sd . getConstituent ( i ) ) -> printAsText		578580	0					
ANR	579096	PtrMemberAccess	( sd . getConstituent ( i ) ) -> printAsText		578580	0					
ANR	579097	CallExpression	sd . getConstituent ( i )		578580	0					
ANR	579098	Callee	sd . getConstituent		578580	0					
ANR	579099	MemberAccess	sd . getConstituent		578580	0					
ANR	579100	Identifier	sd		578580	0					
ANR	579101	Identifier	getConstituent		578580	1					
ANR	579102	ArgumentList	i		578580	1					
ANR	579103	Argument	i		578580	0					
ANR	579104	Identifier	i		578580	0					
ANR	579105	Identifier	printAsText		578580	1					
ANR	579106	ArgumentList			578580	1					
ANR	579107	ExpressionStatement		1137:3:31091:31091	578580	19	True				
ANR	579108	ExpressionStatement	"sd . saveSuperdagAsDot ( ""h2s.dot"" )"	1139:2:31096:31127	578580	20	True				
ANR	579109	CallExpression	"sd . saveSuperdagAsDot ( ""h2s.dot"" )"		578580	0					
ANR	579110	Callee	sd . saveSuperdagAsDot		578580	0					
ANR	579111	MemberAccess	sd . saveSuperdagAsDot		578580	0					
ANR	579112	Identifier	sd		578580	0					
ANR	579113	Identifier	saveSuperdagAsDot		578580	1					
ANR	579114	ArgumentList	"""h2s.dot"""		578580	1					
ANR	579115	Argument	"""h2s.dot"""		578580	0					
ANR	579116	PrimaryExpression	"""h2s.dot"""		578580	0					
ANR	579117	ExpressionStatement		1140:2:31131:31131	578580	5	True				
ANR	579118	CompoundStatement		75:2:1504:1518	578580	6					
ANR	579119	IdentifierDeclStatement	"DagmanDag h ( ""rundg_test-0.dag"" ) ;"	1144:2:31187:31218	578580	0	True				
ANR	579120	IdentifierDecl	"h ( ""rundg_test-0.dag"" )"		578580	0					
ANR	579121	IdentifierDeclType	DagmanDag		578580	0					
ANR	579122	Identifier	h		578580	1					
ANR	579123	PrimaryExpression	"""rundg_test-0.dag"""		578580	2					
ANR	579124	ExpressionStatement	h . addNode ( )	1145:2:31222:31233	578580	1	True				
ANR	579125	CallExpression	h . addNode ( )		578580	0					
ANR	579126	Callee	h . addNode		578580	0					
ANR	579127	MemberAccess	h . addNode		578580	0					
ANR	579128	Identifier	h		578580	0					
ANR	579129	Identifier	addNode		578580	1					
ANR	579130	ArgumentList			578580	1					
ANR	579131	ExpressionStatement	"h . saveAsDot ( ""rundg_test-0.dot"" )"	1146:2:31237:31268	578580	2	True				
ANR	579132	CallExpression	"h . saveAsDot ( ""rundg_test-0.dot"" )"		578580	0					
ANR	579133	Callee	h . saveAsDot		578580	0					
ANR	579134	MemberAccess	h . saveAsDot		578580	0					
ANR	579135	Identifier	h		578580	0					
ANR	579136	Identifier	saveAsDot		578580	1					
ANR	579137	ArgumentList	"""rundg_test-0.dot"""		578580	1					
ANR	579138	Argument	"""rundg_test-0.dot"""		578580	0					
ANR	579139	PrimaryExpression	"""rundg_test-0.dot"""		578580	0					
ANR	579140	IdentifierDeclStatement	Superdag sd ( h ) ;	1147:2:31272:31286	578580	3	True				
ANR	579141	IdentifierDecl	sd ( h )		578580	0					
ANR	579142	IdentifierDeclType	Superdag		578580	0					
ANR	579143	Identifier	sd		578580	1					
ANR	579144	Identifier	h		578580	2					
ANR	579145	ExpressionStatement	"sd . saveSuperdagAsDot ( ""rundg_test-0S.dot"" )"	1148:2:31290:31331	578580	4	True				
ANR	579146	CallExpression	"sd . saveSuperdagAsDot ( ""rundg_test-0S.dot"" )"		578580	0					
ANR	579147	Callee	sd . saveSuperdagAsDot		578580	0					
ANR	579148	MemberAccess	sd . saveSuperdagAsDot		578580	0					
ANR	579149	Identifier	sd		578580	0					
ANR	579150	Identifier	saveSuperdagAsDot		578580	1					
ANR	579151	ArgumentList	"""rundg_test-0S.dot"""		578580	1					
ANR	579152	Argument	"""rundg_test-0S.dot"""		578580	0					
ANR	579153	PrimaryExpression	"""rundg_test-0S.dot"""		578580	0					
ANR	579154	ExpressionStatement		1149:2:31335:31335	578580	7	True				
ANR	579155	ReturnType	void		578580	1					
ANR	579156	Identifier	Superdag_test		578580	2					
ANR	579157	ParameterList			578580	3					
ANR	579158	CFGEntryNode	ENTRY		578580		True				
ANR	579159	CFGExitNode	EXIT		578580		True				
ANR	579160	Symbol	sd		578580						
ANR	579161	Symbol	sd . getConstituent		578580						
ANR	579162	Symbol	g		578580						
ANR	579163	Symbol	sd . getType		578580						
ANR	579164	Symbol	sd . getNumConstituent		578580						
ANR	579165	Symbol	h		578580						
ANR	579166	Symbol	i		578580						
