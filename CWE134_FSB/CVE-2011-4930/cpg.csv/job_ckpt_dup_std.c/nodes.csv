command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1703989	File	data/converged/CVE-2011-4930_htcondor/job_ckpt_dup_std.c								
ANR	1703990	DeclStmt									
ANR	1703991	Decl							void	void ( void )	abort_me
ANR	1703992	DeclStmt									
ANR	1703993	Decl							void	"void ( int a , int b )"	check
ANR	1703994	Function	usage	40:0:1066:1161							
ANR	1703995	FunctionDef	usage (char * my_name)		1703994	0					
ANR	1703996	CompoundStatement		41:0:1094:1161	1703994	0					
ANR	1703997	ExpressionStatement	"fprintf ( stderr , ""Usage: %s filename\\n"" , my_name )"	42:1:1097:1147	1703994	0	True				
ANR	1703998	CallExpression	"fprintf ( stderr , ""Usage: %s filename\\n"" , my_name )"		1703994	0					
ANR	1703999	Callee	fprintf		1703994	0					
ANR	1704000	Identifier	fprintf		1703994	0					
ANR	1704001	ArgumentList	stderr		1703994	1					
ANR	1704002	Argument	stderr		1703994	0					
ANR	1704003	Identifier	stderr		1703994	0					
ANR	1704004	Argument	"""Usage: %s filename\\n"""		1703994	1					
ANR	1704005	PrimaryExpression	"""Usage: %s filename\\n"""		1703994	0					
ANR	1704006	Argument	my_name		1703994	2					
ANR	1704007	Identifier	my_name		1703994	0					
ANR	1704008	ExpressionStatement	exit ( 1 )	43:1:1150:1159	1703994	1	True				
ANR	1704009	CallExpression	exit ( 1 )		1703994	0					
ANR	1704010	Callee	exit		1703994	0					
ANR	1704011	Identifier	exit		1703994	0					
ANR	1704012	ArgumentList	1		1703994	1					
ANR	1704013	Argument	1		1703994	0					
ANR	1704014	PrimaryExpression	1		1703994	0					
ANR	1704015	ReturnType	void		1703994	1					
ANR	1704016	Identifier	usage		1703994	2					
ANR	1704017	ParameterList	char * my_name		1703994	3					
ANR	1704018	Parameter	char * my_name	40:12:1078:1090	1703994	0	True				
ANR	1704019	ParameterType	char *		1703994	0					
ANR	1704020	Identifier	my_name		1703994	1					
ANR	1704021	CFGEntryNode	ENTRY		1703994		True				
ANR	1704022	CFGExitNode	EXIT		1703994		True				
ANR	1704023	Symbol	my_name		1703994						
ANR	1704024	Symbol	stderr		1703994						
ANR	1704025	Function	main	46:0:1164:2897							
ANR	1704026	FunctionDef	"main (int argc , char * * argv)"		1704025	0					
ANR	1704027	CompoundStatement		48:0:1198:2897	1704025	0					
ANR	1704028	IdentifierDeclStatement	"int a , b , c , x , d ;"	49:1:1201:1219	1704025	0	True				
ANR	1704029	IdentifierDecl	a		1704025	0					
ANR	1704030	IdentifierDeclType	int		1704025	0					
ANR	1704031	Identifier	a		1704025	1					
ANR	1704032	IdentifierDecl	b		1704025	1					
ANR	1704033	IdentifierDeclType	int		1704025	0					
ANR	1704034	Identifier	b		1704025	1					
ANR	1704035	IdentifierDecl	c		1704025	2					
ANR	1704036	IdentifierDeclType	int		1704025	0					
ANR	1704037	Identifier	c		1704025	1					
ANR	1704038	IdentifierDecl	x		1704025	3					
ANR	1704039	IdentifierDeclType	int		1704025	0					
ANR	1704040	Identifier	x		1704025	1					
ANR	1704041	IdentifierDecl	d		1704025	4					
ANR	1704042	IdentifierDeclType	int		1704025	0					
ANR	1704043	Identifier	d		1704025	1					
ANR	1704044	Statement	undef	51:1:1223:1227	1704025	1	True				
ANR	1704045	Statement	WAIT_FOR_DEBUGGER	51:7:1229:1245	1704025	2	True				
ANR	1704046	IdentifierDeclStatement	int wait_up = 1 ;	53:1:1279:1295	1704025	3	True				
ANR	1704047	IdentifierDecl	wait_up = 1		1704025	0					
ANR	1704048	IdentifierDeclType	int		1704025	0					
ANR	1704049	Identifier	wait_up		1704025	1					
ANR	1704050	AssignmentExpression	wait_up = 1		1704025	2		=			
ANR	1704051	Identifier	wait_up		1704025	0					
ANR	1704052	PrimaryExpression	1		1704025	1					
ANR	1704053	WhileStatement	while ( wait_up )		1704025	4					
ANR	1704054	Condition	wait_up	54:8:1305:1311	1704025	0	True				
ANR	1704055	Identifier	wait_up		1704025	0					
ANR	1704056	ExpressionStatement		55:2:1317:1317	1704025	1	True				
ANR	1704057	IfStatement	if ( argc != 2 )		1704025	5					
ANR	1704058	Condition	argc != 2	58:5:1332:1340	1704025	0	True				
ANR	1704059	EqualityExpression	argc != 2		1704025	0		!=			
ANR	1704060	Identifier	argc		1704025	0					
ANR	1704061	PrimaryExpression	2		1704025	1					
ANR	1704062	CompoundStatement		11:17:145:145	1704025	1					
ANR	1704063	ExpressionStatement	usage ( argv [ 0 ] )	59:2:1348:1364	1704025	0	True				
ANR	1704064	CallExpression	usage ( argv [ 0 ] )		1704025	0					
ANR	1704065	Callee	usage		1704025	0					
ANR	1704066	Identifier	usage		1704025	0					
ANR	1704067	ArgumentList	argv [ 0 ]		1704025	1					
ANR	1704068	Argument	argv [ 0 ]		1704025	0					
ANR	1704069	ArrayIndexing	argv [ 0 ]		1704025	0					
ANR	1704070	Identifier	argv		1704025	0					
ANR	1704071	PrimaryExpression	0		1704025	1					
ANR	1704072	ExpressionStatement	"x = open ( argv [ 1 ] , O_RDONLY , 0 )"	65:1:1483:1515	1704025	6	True				
ANR	1704073	AssignmentExpression	"x = open ( argv [ 1 ] , O_RDONLY , 0 )"		1704025	0		=			
ANR	1704074	Identifier	x		1704025	0					
ANR	1704075	CallExpression	"open ( argv [ 1 ] , O_RDONLY , 0 )"		1704025	1					
ANR	1704076	Callee	open		1704025	0					
ANR	1704077	Identifier	open		1704025	0					
ANR	1704078	ArgumentList	argv [ 1 ]		1704025	1					
ANR	1704079	Argument	argv [ 1 ]		1704025	0					
ANR	1704080	ArrayIndexing	argv [ 1 ]		1704025	0					
ANR	1704081	Identifier	argv		1704025	0					
ANR	1704082	PrimaryExpression	1		1704025	1					
ANR	1704083	Argument	O_RDONLY		1704025	1					
ANR	1704084	Identifier	O_RDONLY		1704025	0					
ANR	1704085	Argument	0		1704025	2					
ANR	1704086	PrimaryExpression	0		1704025	0					
ANR	1704087	ExpressionStatement	"a = open ( argv [ 1 ] , O_RDONLY , 0 )"	66:1:1538:1570	1704025	7	True				
ANR	1704088	AssignmentExpression	"a = open ( argv [ 1 ] , O_RDONLY , 0 )"		1704025	0		=			
ANR	1704089	Identifier	a		1704025	0					
ANR	1704090	CallExpression	"open ( argv [ 1 ] , O_RDONLY , 0 )"		1704025	1					
ANR	1704091	Callee	open		1704025	0					
ANR	1704092	Identifier	open		1704025	0					
ANR	1704093	ArgumentList	argv [ 1 ]		1704025	1					
ANR	1704094	Argument	argv [ 1 ]		1704025	0					
ANR	1704095	ArrayIndexing	argv [ 1 ]		1704025	0					
ANR	1704096	Identifier	argv		1704025	0					
ANR	1704097	PrimaryExpression	1		1704025	1					
ANR	1704098	Argument	O_RDONLY		1704025	1					
ANR	1704099	Identifier	O_RDONLY		1704025	0					
ANR	1704100	Argument	0		1704025	2					
ANR	1704101	PrimaryExpression	0		1704025	0					
ANR	1704102	ExpressionStatement	"b = open ( argv [ 1 ] , O_RDONLY , 0 )"	67:1:1593:1625	1704025	8	True				
ANR	1704103	AssignmentExpression	"b = open ( argv [ 1 ] , O_RDONLY , 0 )"		1704025	0		=			
ANR	1704104	Identifier	b		1704025	0					
ANR	1704105	CallExpression	"open ( argv [ 1 ] , O_RDONLY , 0 )"		1704025	1					
ANR	1704106	Callee	open		1704025	0					
ANR	1704107	Identifier	open		1704025	0					
ANR	1704108	ArgumentList	argv [ 1 ]		1704025	1					
ANR	1704109	Argument	argv [ 1 ]		1704025	0					
ANR	1704110	ArrayIndexing	argv [ 1 ]		1704025	0					
ANR	1704111	Identifier	argv		1704025	0					
ANR	1704112	PrimaryExpression	1		1704025	1					
ANR	1704113	Argument	O_RDONLY		1704025	1					
ANR	1704114	Identifier	O_RDONLY		1704025	0					
ANR	1704115	Argument	0		1704025	2					
ANR	1704116	PrimaryExpression	0		1704025	0					
ANR	1704117	ExpressionStatement	c = dup ( b )	68:1:1648:1660	1704025	9	True				
ANR	1704118	AssignmentExpression	c = dup ( b )		1704025	0		=			
ANR	1704119	Identifier	c		1704025	0					
ANR	1704120	CallExpression	dup ( b )		1704025	1					
ANR	1704121	Callee	dup		1704025	0					
ANR	1704122	Identifier	dup		1704025	0					
ANR	1704123	ArgumentList	b		1704025	1					
ANR	1704124	Argument	b		1704025	0					
ANR	1704125	Identifier	b		1704025	0					
ANR	1704126	ExpressionStatement	close ( a )	69:1:1694:1704	1704025	10	True				
ANR	1704127	CallExpression	close ( a )		1704025	0					
ANR	1704128	Callee	close		1704025	0					
ANR	1704129	Identifier	close		1704025	0					
ANR	1704130	ArgumentList	a		1704025	1					
ANR	1704131	Argument	a		1704025	0					
ANR	1704132	Identifier	a		1704025	0					
ANR	1704133	ExpressionStatement	a = dup ( b )	70:1:1733:1745	1704025	11	True				
ANR	1704134	AssignmentExpression	a = dup ( b )		1704025	0		=			
ANR	1704135	Identifier	a		1704025	0					
ANR	1704136	CallExpression	dup ( b )		1704025	1					
ANR	1704137	Callee	dup		1704025	0					
ANR	1704138	Identifier	dup		1704025	0					
ANR	1704139	ArgumentList	b		1704025	1					
ANR	1704140	Argument	b		1704025	0					
ANR	1704141	Identifier	b		1704025	0					
ANR	1704142	ExpressionStatement	close ( b )	71:1:1779:1789	1704025	12	True				
ANR	1704143	CallExpression	close ( b )		1704025	0					
ANR	1704144	Callee	close		1704025	0					
ANR	1704145	Identifier	close		1704025	0					
ANR	1704146	ArgumentList	b		1704025	1					
ANR	1704147	Argument	b		1704025	0					
ANR	1704148	Identifier	b		1704025	0					
ANR	1704149	ExpressionStatement	close ( x )	72:1:1818:1828	1704025	13	True				
ANR	1704150	CallExpression	close ( x )		1704025	0					
ANR	1704151	Callee	close		1704025	0					
ANR	1704152	Identifier	close		1704025	0					
ANR	1704153	ArgumentList	x		1704025	1					
ANR	1704154	Argument	x		1704025	0					
ANR	1704155	Identifier	x		1704025	0					
ANR	1704156	ExpressionStatement	"d = dup2 ( c , 15 )"	73:4:1860:1874	1704025	14	True				
ANR	1704157	AssignmentExpression	"d = dup2 ( c , 15 )"		1704025	0		=			
ANR	1704158	Identifier	d		1704025	0					
ANR	1704159	CallExpression	"dup2 ( c , 15 )"		1704025	1					
ANR	1704160	Callee	dup2		1704025	0					
ANR	1704161	Identifier	dup2		1704025	0					
ANR	1704162	ArgumentList	c		1704025	1					
ANR	1704163	Argument	c		1704025	0					
ANR	1704164	Identifier	c		1704025	0					
ANR	1704165	Argument	15		1704025	1					
ANR	1704166	PrimaryExpression	15		1704025	0					
ANR	1704167	IfStatement	if ( a == c )		1704025	15					
ANR	1704168	Condition	a == c	94:5:2354:2359	1704025	0	True				
ANR	1704169	EqualityExpression	a == c		1704025	0		==			
ANR	1704170	Identifier	a		1704025	0					
ANR	1704171	Identifier	c		1704025	1					
ANR	1704172	CompoundStatement		47:14:1164:1164	1704025	1					
ANR	1704173	ExpressionStatement	"printf ( ""Error: a and c are the same: %d\\n"" , a )"	95:2:2367:2415	1704025	0	True				
ANR	1704174	CallExpression	"printf ( ""Error: a and c are the same: %d\\n"" , a )"		1704025	0					
ANR	1704175	Callee	printf		1704025	0					
ANR	1704176	Identifier	printf		1704025	0					
ANR	1704177	ArgumentList	"""Error: a and c are the same: %d\\n"""		1704025	1					
ANR	1704178	Argument	"""Error: a and c are the same: %d\\n"""		1704025	0					
ANR	1704179	PrimaryExpression	"""Error: a and c are the same: %d\\n"""		1704025	0					
ANR	1704180	Argument	a		1704025	1					
ANR	1704181	Identifier	a		1704025	0					
ANR	1704182	ExpressionStatement	abort_me ( )	96:2:2419:2429	1704025	1	True				
ANR	1704183	CallExpression	abort_me ( )		1704025	0					
ANR	1704184	Callee	abort_me		1704025	0					
ANR	1704185	Identifier	abort_me		1704025	0					
ANR	1704186	ArgumentList			1704025	1					
ANR	1704187	ExpressionStatement	exit ( 1 )	97:2:2433:2442	1704025	2	True				
ANR	1704188	CallExpression	exit ( 1 )		1704025	0					
ANR	1704189	Callee	exit		1704025	0					
ANR	1704190	Identifier	exit		1704025	0					
ANR	1704191	ArgumentList	1		1704025	1					
ANR	1704192	Argument	1		1704025	0					
ANR	1704193	PrimaryExpression	1		1704025	0					
ANR	1704194	IfStatement	if ( d != 15 )		1704025	16					
ANR	1704195	Condition	d != 15	101:5:2490:2496	1704025	0	True				
ANR	1704196	EqualityExpression	d != 15		1704025	0		!=			
ANR	1704197	Identifier	d		1704025	0					
ANR	1704198	PrimaryExpression	15		1704025	1					
ANR	1704199	CompoundStatement		54:15:1301:1301	1704025	1					
ANR	1704200	ExpressionStatement	"printf ( ""Error: d's not 15, it's %d\\n"" , d )"	102:2:2504:2547	1704025	0	True				
ANR	1704201	CallExpression	"printf ( ""Error: d's not 15, it's %d\\n"" , d )"		1704025	0					
ANR	1704202	Callee	printf		1704025	0					
ANR	1704203	Identifier	printf		1704025	0					
ANR	1704204	ArgumentList	"""Error: d's not 15, it's %d\\n"""		1704025	1					
ANR	1704205	Argument	"""Error: d's not 15, it's %d\\n"""		1704025	0					
ANR	1704206	PrimaryExpression	"""Error: d's not 15, it's %d\\n"""		1704025	0					
ANR	1704207	Argument	d		1704025	1					
ANR	1704208	Identifier	d		1704025	0					
ANR	1704209	ExpressionStatement	abort_me ( )	103:2:2551:2561	1704025	1	True				
ANR	1704210	CallExpression	abort_me ( )		1704025	0					
ANR	1704211	Callee	abort_me		1704025	0					
ANR	1704212	Identifier	abort_me		1704025	0					
ANR	1704213	ArgumentList			1704025	1					
ANR	1704214	ExpressionStatement	exit ( 1 )	104:2:2565:2574	1704025	2	True				
ANR	1704215	CallExpression	exit ( 1 )		1704025	0					
ANR	1704216	Callee	exit		1704025	0					
ANR	1704217	Identifier	exit		1704025	0					
ANR	1704218	ArgumentList	1		1704025	1					
ANR	1704219	Argument	1		1704025	0					
ANR	1704220	PrimaryExpression	1		1704025	0					
ANR	1704221	ExpressionStatement	"printf ( ""OK\\n"" )"	107:1:2582:2598	1704025	17	True				
ANR	1704222	CallExpression	"printf ( ""OK\\n"" )"		1704025	0					
ANR	1704223	Callee	printf		1704025	0					
ANR	1704224	Identifier	printf		1704025	0					
ANR	1704225	ArgumentList	"""OK\\n"""		1704025	1					
ANR	1704226	Argument	"""OK\\n"""		1704025	0					
ANR	1704227	PrimaryExpression	"""OK\\n"""		1704025	0					
ANR	1704228	ExpressionStatement	"check ( a , c )"	108:1:2601:2614	1704025	18	True				
ANR	1704229	CallExpression	"check ( a , c )"		1704025	0					
ANR	1704230	Callee	check		1704025	0					
ANR	1704231	Identifier	check		1704025	0					
ANR	1704232	ArgumentList	a		1704025	1					
ANR	1704233	Argument	a		1704025	0					
ANR	1704234	Identifier	a		1704025	0					
ANR	1704235	Argument	c		1704025	1					
ANR	1704236	Identifier	c		1704025	0					
ANR	1704237	ExpressionStatement	"check ( c , d )"	109:1:2617:2630	1704025	19	True				
ANR	1704238	CallExpression	"check ( c , d )"		1704025	0					
ANR	1704239	Callee	check		1704025	0					
ANR	1704240	Identifier	check		1704025	0					
ANR	1704241	ArgumentList	c		1704025	1					
ANR	1704242	Argument	c		1704025	0					
ANR	1704243	Identifier	c		1704025	0					
ANR	1704244	Argument	d		1704025	1					
ANR	1704245	Identifier	d		1704025	0					
ANR	1704246	ExpressionStatement	ckpt_and_exit ( )	111:1:2634:2649	1704025	20	True				
ANR	1704247	CallExpression	ckpt_and_exit ( )		1704025	0					
ANR	1704248	Callee	ckpt_and_exit		1704025	0					
ANR	1704249	Identifier	ckpt_and_exit		1704025	0					
ANR	1704250	ArgumentList			1704025	1					
ANR	1704251	Statement	undef	112:1:2652:2656	1704025	21	True				
ANR	1704252	Statement	WAIT_FOR_DEBUGGER	112:7:2658:2674	1704025	22	True				
ANR	1704253	CompoundStatement		68:1:1515:1531	1704025	23					
ANR	1704254	IdentifierDeclStatement	int wait_up = 1 ;	115:1:2714:2730	1704025	0	True				
ANR	1704255	IdentifierDecl	wait_up = 1		1704025	0					
ANR	1704256	IdentifierDeclType	int		1704025	0					
ANR	1704257	Identifier	wait_up		1704025	1					
ANR	1704258	AssignmentExpression	wait_up = 1		1704025	2		=			
ANR	1704259	Identifier	wait_up		1704025	0					
ANR	1704260	PrimaryExpression	1		1704025	1					
ANR	1704261	WhileStatement	while ( wait_up )		1704025	1					
ANR	1704262	Condition	wait_up	116:8:2740:2746	1704025	0	True				
ANR	1704263	Identifier	wait_up		1704025	0					
ANR	1704264	ExpressionStatement		117:2:2752:2752	1704025	1	True				
ANR	1704265	ExpressionStatement	"check ( a , c )"	120:1:2768:2781	1704025	24	True				
ANR	1704266	CallExpression	"check ( a , c )"		1704025	0					
ANR	1704267	Callee	check		1704025	0					
ANR	1704268	Identifier	check		1704025	0					
ANR	1704269	ArgumentList	a		1704025	1					
ANR	1704270	Argument	a		1704025	0					
ANR	1704271	Identifier	a		1704025	0					
ANR	1704272	Argument	c		1704025	1					
ANR	1704273	Identifier	c		1704025	0					
ANR	1704274	ExpressionStatement	"check ( c , d )"	121:1:2784:2797	1704025	25	True				
ANR	1704275	CallExpression	"check ( c , d )"		1704025	0					
ANR	1704276	Callee	check		1704025	0					
ANR	1704277	Identifier	check		1704025	0					
ANR	1704278	ArgumentList	c		1704025	1					
ANR	1704279	Argument	c		1704025	0					
ANR	1704280	Identifier	c		1704025	0					
ANR	1704281	Argument	d		1704025	1					
ANR	1704282	Identifier	d		1704025	0					
ANR	1704283	ExpressionStatement	ckpt_and_exit ( )	123:1:2801:2816	1704025	26	True				
ANR	1704284	CallExpression	ckpt_and_exit ( )		1704025	0					
ANR	1704285	Callee	ckpt_and_exit		1704025	0					
ANR	1704286	Identifier	ckpt_and_exit		1704025	0					
ANR	1704287	ArgumentList			1704025	1					
ANR	1704288	ExpressionStatement	"check ( a , c )"	124:1:2819:2832	1704025	27	True				
ANR	1704289	CallExpression	"check ( a , c )"		1704025	0					
ANR	1704290	Callee	check		1704025	0					
ANR	1704291	Identifier	check		1704025	0					
ANR	1704292	ArgumentList	a		1704025	1					
ANR	1704293	Argument	a		1704025	0					
ANR	1704294	Identifier	a		1704025	0					
ANR	1704295	Argument	c		1704025	1					
ANR	1704296	Identifier	c		1704025	0					
ANR	1704297	ExpressionStatement	"check ( c , d )"	125:1:2835:2848	1704025	28	True				
ANR	1704298	CallExpression	"check ( c , d )"		1704025	0					
ANR	1704299	Callee	check		1704025	0					
ANR	1704300	Identifier	check		1704025	0					
ANR	1704301	ArgumentList	c		1704025	1					
ANR	1704302	Argument	c		1704025	0					
ANR	1704303	Identifier	c		1704025	0					
ANR	1704304	Argument	d		1704025	1					
ANR	1704305	Identifier	d		1704025	0					
ANR	1704306	ExpressionStatement	"printf ( ""Normal End of Job\\n"" )"	127:1:2852:2883	1704025	29	True				
ANR	1704307	CallExpression	"printf ( ""Normal End of Job\\n"" )"		1704025	0					
ANR	1704308	Callee	printf		1704025	0					
ANR	1704309	Identifier	printf		1704025	0					
ANR	1704310	ArgumentList	"""Normal End of Job\\n"""		1704025	1					
ANR	1704311	Argument	"""Normal End of Job\\n"""		1704025	0					
ANR	1704312	PrimaryExpression	"""Normal End of Job\\n"""		1704025	0					
ANR	1704313	ExpressionStatement	exit ( 0 )	128:1:2886:2895	1704025	30	True				
ANR	1704314	CallExpression	exit ( 0 )		1704025	0					
ANR	1704315	Callee	exit		1704025	0					
ANR	1704316	Identifier	exit		1704025	0					
ANR	1704317	ArgumentList	0		1704025	1					
ANR	1704318	Argument	0		1704025	0					
ANR	1704319	PrimaryExpression	0		1704025	0					
ANR	1704320	ReturnType	int		1704025	1					
ANR	1704321	Identifier	main		1704025	2					
ANR	1704322	ParameterList	"int argc , char * * argv"		1704025	3					
ANR	1704323	Parameter	int argc	47:6:1174:1181	1704025	0	True				
ANR	1704324	ParameterType	int		1704025	0					
ANR	1704325	Identifier	argc		1704025	1					
ANR	1704326	Parameter	char * * argv	47:16:1184:1194	1704025	1	True				
ANR	1704327	ParameterType	char * *		1704025	0					
ANR	1704328	Identifier	argv		1704025	1					
ANR	1704329	CFGEntryNode	ENTRY		1704025		True				
ANR	1704330	CFGExitNode	EXIT		1704025		True				
ANR	1704331	Symbol	argc		1704025						
ANR	1704332	Symbol	a		1704025						
ANR	1704333	Symbol	b		1704025						
ANR	1704334	Symbol	c		1704025						
ANR	1704335	Symbol	d		1704025						
ANR	1704336	Symbol	* argv		1704025						
ANR	1704337	Symbol	wait_up		1704025						
ANR	1704338	Symbol	argv		1704025						
ANR	1704339	Symbol	O_RDONLY		1704025						
ANR	1704340	Symbol	x		1704025						
ANR	1704341	Symbol	dup2		1704025						
ANR	1704342	Symbol	open		1704025						
ANR	1704343	Symbol	dup		1704025						
ANR	1704344	Function	check	137:0:3183:3544							
ANR	1704345	FunctionDef	"check (int a , int b)"		1704344	0					
ANR	1704346	CompoundStatement		138:0:3210:3544	1704344	0					
ANR	1704347	IdentifierDeclStatement	"int end , result ;"	139:1:3213:3228	1704344	0	True				
ANR	1704348	IdentifierDecl	end		1704344	0					
ANR	1704349	IdentifierDeclType	int		1704344	0					
ANR	1704350	Identifier	end		1704344	1					
ANR	1704351	IdentifierDecl	result		1704344	1					
ANR	1704352	IdentifierDeclType	int		1704344	0					
ANR	1704353	Identifier	result		1704344	1					
ANR	1704354	ExpressionStatement	"end = lseek ( a , 0 , 2 )"	141:1:3232:3254	1704344	1	True				
ANR	1704355	AssignmentExpression	"end = lseek ( a , 0 , 2 )"		1704344	0		=			
ANR	1704356	Identifier	end		1704344	0					
ANR	1704357	CallExpression	"lseek ( a , 0 , 2 )"		1704344	1					
ANR	1704358	Callee	lseek		1704344	0					
ANR	1704359	Identifier	lseek		1704344	0					
ANR	1704360	ArgumentList	a		1704344	1					
ANR	1704361	Argument	a		1704344	0					
ANR	1704362	Identifier	a		1704344	0					
ANR	1704363	Argument	0		1704344	1					
ANR	1704364	PrimaryExpression	0		1704344	0					
ANR	1704365	Argument	2		1704344	2					
ANR	1704366	PrimaryExpression	2		1704344	0					
ANR	1704367	IfStatement	"if ( lseek ( b , 0 , 1 ) != end )"		1704344	2					
ANR	1704368	Condition	"lseek ( b , 0 , 1 ) != end"	142:5:3261:3279	1704344	0	True				
ANR	1704369	EqualityExpression	"lseek ( b , 0 , 1 ) != end"		1704344	0		!=			
ANR	1704370	CallExpression	"lseek ( b , 0 , 1 )"		1704344	0					
ANR	1704371	Callee	lseek		1704344	0					
ANR	1704372	Identifier	lseek		1704344	0					
ANR	1704373	ArgumentList	b		1704344	1					
ANR	1704374	Argument	b		1704344	0					
ANR	1704375	Identifier	b		1704344	0					
ANR	1704376	Argument	0		1704344	1					
ANR	1704377	PrimaryExpression	0		1704344	0					
ANR	1704378	Argument	1		1704344	2					
ANR	1704379	PrimaryExpression	1		1704344	0					
ANR	1704380	Identifier	end		1704344	1					
ANR	1704381	CompoundStatement		5:27:72:72	1704344	1					
ANR	1704382	ExpressionStatement	"printf ( ""Error: file %d is not a dup of file %d\\n"" , a , b )"	143:2:3287:3345	1704344	0	True				
ANR	1704383	CallExpression	"printf ( ""Error: file %d is not a dup of file %d\\n"" , a , b )"		1704344	0					
ANR	1704384	Callee	printf		1704344	0					
ANR	1704385	Identifier	printf		1704344	0					
ANR	1704386	ArgumentList	"""Error: file %d is not a dup of file %d\\n"""		1704344	1					
ANR	1704387	Argument	"""Error: file %d is not a dup of file %d\\n"""		1704344	0					
ANR	1704388	PrimaryExpression	"""Error: file %d is not a dup of file %d\\n"""		1704344	0					
ANR	1704389	Argument	a		1704344	1					
ANR	1704390	Identifier	a		1704344	0					
ANR	1704391	Argument	b		1704344	2					
ANR	1704392	Identifier	b		1704344	0					
ANR	1704393	ExpressionStatement	abort_me ( )	144:2:3349:3359	1704344	1	True				
ANR	1704394	CallExpression	abort_me ( )		1704344	0					
ANR	1704395	Callee	abort_me		1704344	0					
ANR	1704396	Identifier	abort_me		1704344	0					
ANR	1704397	ArgumentList			1704344	1					
ANR	1704398	ExpressionStatement	exit ( 1 )	145:2:3363:3372	1704344	2	True				
ANR	1704399	CallExpression	exit ( 1 )		1704344	0					
ANR	1704400	Callee	exit		1704344	0					
ANR	1704401	Identifier	exit		1704344	0					
ANR	1704402	ArgumentList	1		1704344	1					
ANR	1704403	Argument	1		1704344	0					
ANR	1704404	PrimaryExpression	1		1704344	0					
ANR	1704405	ExpressionStatement	"result = lseek ( b , 0 , 0 )"	148:1:3379:3404	1704344	3	True				
ANR	1704406	AssignmentExpression	"result = lseek ( b , 0 , 0 )"		1704344	0		=			
ANR	1704407	Identifier	result		1704344	0					
ANR	1704408	CallExpression	"lseek ( b , 0 , 0 )"		1704344	1					
ANR	1704409	Callee	lseek		1704344	0					
ANR	1704410	Identifier	lseek		1704344	0					
ANR	1704411	ArgumentList	b		1704344	1					
ANR	1704412	Argument	b		1704344	0					
ANR	1704413	Identifier	b		1704344	0					
ANR	1704414	Argument	0		1704344	1					
ANR	1704415	PrimaryExpression	0		1704344	0					
ANR	1704416	Argument	0		1704344	2					
ANR	1704417	PrimaryExpression	0		1704344	0					
ANR	1704418	IfStatement	"if ( lseek ( a , 0 , 1 ) != 0 )"		1704344	4					
ANR	1704419	Condition	"lseek ( a , 0 , 1 ) != 0"	149:5:3411:3427	1704344	0	True				
ANR	1704420	EqualityExpression	"lseek ( a , 0 , 1 ) != 0"		1704344	0		!=			
ANR	1704421	CallExpression	"lseek ( a , 0 , 1 )"		1704344	0					
ANR	1704422	Callee	lseek		1704344	0					
ANR	1704423	Identifier	lseek		1704344	0					
ANR	1704424	ArgumentList	a		1704344	1					
ANR	1704425	Argument	a		1704344	0					
ANR	1704426	Identifier	a		1704344	0					
ANR	1704427	Argument	0		1704344	1					
ANR	1704428	PrimaryExpression	0		1704344	0					
ANR	1704429	Argument	1		1704344	2					
ANR	1704430	PrimaryExpression	1		1704344	0					
ANR	1704431	PrimaryExpression	0		1704344	1					
ANR	1704432	CompoundStatement		12:25:220:220	1704344	1					
ANR	1704433	ExpressionStatement	"printf ( ""Error: file %d is not a dup of file %d\\n"" , a , b )"	150:2:3435:3493	1704344	0	True				
ANR	1704434	CallExpression	"printf ( ""Error: file %d is not a dup of file %d\\n"" , a , b )"		1704344	0					
ANR	1704435	Callee	printf		1704344	0					
ANR	1704436	Identifier	printf		1704344	0					
ANR	1704437	ArgumentList	"""Error: file %d is not a dup of file %d\\n"""		1704344	1					
ANR	1704438	Argument	"""Error: file %d is not a dup of file %d\\n"""		1704344	0					
ANR	1704439	PrimaryExpression	"""Error: file %d is not a dup of file %d\\n"""		1704344	0					
ANR	1704440	Argument	a		1704344	1					
ANR	1704441	Identifier	a		1704344	0					
ANR	1704442	Argument	b		1704344	2					
ANR	1704443	Identifier	b		1704344	0					
ANR	1704444	ExpressionStatement	abort_me ( )	151:2:3497:3507	1704344	1	True				
ANR	1704445	CallExpression	abort_me ( )		1704344	0					
ANR	1704446	Callee	abort_me		1704344	0					
ANR	1704447	Identifier	abort_me		1704344	0					
ANR	1704448	ArgumentList			1704344	1					
ANR	1704449	ExpressionStatement	exit ( 1 )	152:2:3511:3520	1704344	2	True				
ANR	1704450	CallExpression	exit ( 1 )		1704344	0					
ANR	1704451	Callee	exit		1704344	0					
ANR	1704452	Identifier	exit		1704344	0					
ANR	1704453	ArgumentList	1		1704344	1					
ANR	1704454	Argument	1		1704344	0					
ANR	1704455	PrimaryExpression	1		1704344	0					
ANR	1704456	ExpressionStatement	"printf ( ""OK\\n"" )"	154:1:3526:3542	1704344	5	True				
ANR	1704457	CallExpression	"printf ( ""OK\\n"" )"		1704344	0					
ANR	1704458	Callee	printf		1704344	0					
ANR	1704459	Identifier	printf		1704344	0					
ANR	1704460	ArgumentList	"""OK\\n"""		1704344	1					
ANR	1704461	Argument	"""OK\\n"""		1704344	0					
ANR	1704462	PrimaryExpression	"""OK\\n"""		1704344	0					
ANR	1704463	ReturnType	void		1704344	1					
ANR	1704464	Identifier	check		1704344	2					
ANR	1704465	ParameterList	"int a , int b"		1704344	3					
ANR	1704466	Parameter	int a	137:12:3195:3199	1704344	0	True				
ANR	1704467	ParameterType	int		1704344	0					
ANR	1704468	Identifier	a		1704344	1					
ANR	1704469	Parameter	int b	137:19:3202:3206	1704344	1	True				
ANR	1704470	ParameterType	int		1704344	0					
ANR	1704471	Identifier	b		1704344	1					
ANR	1704472	CFGEntryNode	ENTRY		1704344		True				
ANR	1704473	CFGExitNode	EXIT		1704344		True				
ANR	1704474	Symbol	result		1704344						
ANR	1704475	Symbol	a		1704344						
ANR	1704476	Symbol	b		1704344						
ANR	1704477	Symbol	lseek		1704344						
ANR	1704478	Symbol	end		1704344						
ANR	1704479	Function	abort_me	157:0:3547:3694							
ANR	1704480	FunctionDef	abort_me ()		1704479	0					
ANR	1704481	CompoundStatement		158:0:3567:3694	1704479	0					
ANR	1704482	IdentifierDeclStatement	int i ;	159:1:3570:3575	1704479	0	True				
ANR	1704483	IdentifierDecl	i		1704479	0					
ANR	1704484	IdentifierDeclType	int		1704479	0					
ANR	1704485	Identifier	i		1704479	1					
ANR	1704486	IdentifierDeclStatement	int j ;	160:1:3578:3583	1704479	1	True				
ANR	1704487	IdentifierDecl	j		1704479	0					
ANR	1704488	IdentifierDeclType	int		1704479	0					
ANR	1704489	Identifier	j		1704479	1					
ANR	1704490	IdentifierDeclStatement	char * foo = ( char * ) 0 ;	161:1:3586:3607	1704479	2	True				
ANR	1704491	IdentifierDecl	* foo = ( char * ) 0		1704479	0					
ANR	1704492	IdentifierDeclType	char *		1704479	0					
ANR	1704493	Identifier	foo		1704479	1					
ANR	1704494	AssignmentExpression	* foo = ( char * ) 0		1704479	2		=			
ANR	1704495	Identifier	foo		1704479	0					
ANR	1704496	CastExpression	( char * ) 0		1704479	1					
ANR	1704497	CastTarget	char *		1704479	0					
ANR	1704498	PrimaryExpression	0		1704479	1					
ANR	1704499	ExpressionStatement	fflush ( stdout )	163:1:3611:3627	1704479	3	True				
ANR	1704500	CallExpression	fflush ( stdout )		1704479	0					
ANR	1704501	Callee	fflush		1704479	0					
ANR	1704502	Identifier	fflush		1704479	0					
ANR	1704503	ArgumentList	stdout		1704479	1					
ANR	1704504	Argument	stdout		1704479	0					
ANR	1704505	Identifier	stdout		1704479	0					
ANR	1704506	ExpressionStatement	fflush ( stderr )	164:1:3630:3646	1704479	4	True				
ANR	1704507	CallExpression	fflush ( stderr )		1704479	0					
ANR	1704508	Callee	fflush		1704479	0					
ANR	1704509	Identifier	fflush		1704479	0					
ANR	1704510	ArgumentList	stderr		1704479	1					
ANR	1704511	Argument	stderr		1704479	0					
ANR	1704512	Identifier	stderr		1704479	0					
ANR	1704513	ExpressionStatement	j = 0	165:1:3649:3654	1704479	5	True				
ANR	1704514	AssignmentExpression	j = 0		1704479	0		=			
ANR	1704515	Identifier	j		1704479	0					
ANR	1704516	PrimaryExpression	0		1704479	1					
ANR	1704517	ExpressionStatement	i = 1 / j	166:1:3657:3666	1704479	6	True				
ANR	1704518	AssignmentExpression	i = 1 / j		1704479	0		=			
ANR	1704519	Identifier	i		1704479	0					
ANR	1704520	MultiplicativeExpression	1 / j		1704479	1		/			
ANR	1704521	PrimaryExpression	1		1704479	0					
ANR	1704522	Identifier	j		1704479	1					
ANR	1704523	ExpressionStatement	* foo = 'a'	167:1:3669:3679	1704479	7	True				
ANR	1704524	AssignmentExpression	* foo = 'a'		1704479	0		=			
ANR	1704525	UnaryOperationExpression	* foo		1704479	0					
ANR	1704526	UnaryOperator	*		1704479	0					
ANR	1704527	Identifier	foo		1704479	1					
ANR	1704528	PrimaryExpression	'a'		1704479	1					
ANR	1704529	ExpressionStatement	exit ( 13 )	168:1:3682:3692	1704479	8	True				
ANR	1704530	CallExpression	exit ( 13 )		1704479	0					
ANR	1704531	Callee	exit		1704479	0					
ANR	1704532	Identifier	exit		1704479	0					
ANR	1704533	ArgumentList	13		1704479	1					
ANR	1704534	Argument	13		1704479	0					
ANR	1704535	PrimaryExpression	13		1704479	0					
ANR	1704536	ReturnType	void		1704479	1					
ANR	1704537	Identifier	abort_me		1704479	2					
ANR	1704538	ParameterList			1704479	3					
ANR	1704539	CFGEntryNode	ENTRY		1704479		True				
ANR	1704540	CFGExitNode	EXIT		1704479		True				
ANR	1704541	Symbol	stdout		1704479						
ANR	1704542	Symbol	foo		1704479						
ANR	1704543	Symbol	i		1704479						
ANR	1704544	Symbol	j		1704479						
ANR	1704545	Symbol	stderr		1704479						
ANR	1704546	Symbol	* foo		1704479						
