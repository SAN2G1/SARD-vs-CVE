command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4274888	File	data/converged/CVE-2011-4930_htcondor/src_condor_unit_tests_FTEST_dirname.cpp								
ANR	4274889	DeclStmt									
ANR	4274890	Decl							bool	bool ( void )	test_null
ANR	4274891	DeclStmt									
ANR	4274892	Decl							bool	bool ( void )	test_empty_string
ANR	4274893	DeclStmt									
ANR	4274894	Decl							bool	bool ( void )	test_current_directory
ANR	4274895	DeclStmt									
ANR	4274896	Decl							bool	bool ( void )	test_simple_path_1
ANR	4274897	DeclStmt									
ANR	4274898	Decl							bool	bool ( void )	test_simple_path_2
ANR	4274899	DeclStmt									
ANR	4274900	Decl							bool	bool ( void )	test_simple_directory_1
ANR	4274901	DeclStmt									
ANR	4274902	Decl							bool	bool ( void )	test_simple_directory_2
ANR	4274903	DeclStmt									
ANR	4274904	Decl							bool	bool ( void )	test_directory_and_file_1
ANR	4274905	DeclStmt									
ANR	4274906	Decl							bool	bool ( void )	test_directory_and_file_2
ANR	4274907	DeclStmt									
ANR	4274908	Decl							bool	bool ( void )	test_root_directory
ANR	4274909	DeclStmt									
ANR	4274910	Decl							bool	bool ( void )	test_directory_and_directory
ANR	4274911	DeclStmt									
ANR	4274912	Decl							bool	bool ( void )	test_directory_and_directory_in_root
ANR	4274913	DeclStmt									
ANR	4274914	Decl							bool	bool ( void )	test_forward_slash
ANR	4274915	DeclStmt									
ANR	4274916	Decl							bool	bool ( void )	test_backslash
ANR	4274917	DeclStmt									
ANR	4274918	Decl							bool	bool ( void )	test_period_and_forward_slash_1
ANR	4274919	DeclStmt									
ANR	4274920	Decl							bool	bool ( void )	test_period_and_backslash_1
ANR	4274921	DeclStmt									
ANR	4274922	Decl							bool	bool ( void )	test_period_and_forward_slash_2
ANR	4274923	DeclStmt									
ANR	4274924	Decl							bool	bool ( void )	test_period_and_backslash_2
ANR	4274925	DeclStmt									
ANR	4274926	Decl							bool	bool ( void )	test_backslash_and_period
ANR	4274927	DeclStmt									
ANR	4274928	Decl							bool	bool ( void )	test_forward_slash_and_file_extension
ANR	4274929	DeclStmt									
ANR	4274930	Decl							bool	bool ( void )	test_backslash_and_file_extension
ANR	4274931	DeclStmt									
ANR	4274932	Decl							bool	bool ( void )	test_period_and_forward_slash
ANR	4274933	DeclStmt									
ANR	4274934	Decl							bool	bool ( void )	test_period_and_backslash
ANR	4274935	DeclStmt									
ANR	4274936	Decl							bool	bool ( void )	test_period_and_forward_slash_with_special_file
ANR	4274937	DeclStmt									
ANR	4274938	Decl							bool	bool ( void )	test_period_and_backslash_with_special_file
ANR	4274939	DeclStmt									
ANR	4274940	Decl							bool	bool ( void )	test_double_forward_slash
ANR	4274941	DeclStmt									
ANR	4274942	Decl							bool	bool ( void )	test_double_backslash
ANR	4274943	Function	FTEST_dirname	56:0:2250:4259							
ANR	4274944	FunctionDef	FTEST_dirname ()		4274943	0					
ANR	4274945	CompoundStatement		56:25:2275:4259	4274943	0					
ANR	4274946	ExpressionStatement	"emit_function ( ""function:  condor_dirname(const char *path)"" )"	57:1:2278:2338	4274943	0	True				
ANR	4274947	CallExpression	"emit_function ( ""function:  condor_dirname(const char *path)"" )"		4274943	0					
ANR	4274948	Callee	emit_function		4274943	0					
ANR	4274949	Identifier	emit_function		4274943	0					
ANR	4274950	ArgumentList	"""function:  condor_dirname(const char *path)"""		4274943	1					
ANR	4274951	Argument	"""function:  condor_dirname(const char *path)"""		4274943	0					
ANR	4274952	PrimaryExpression	"""function:  condor_dirname(const char *path)"""		4274943	0					
ANR	4274953	ExpressionStatement	"emit_comment ( ""comment: A dirname() function that is happy on both Unix and NT. This allocates space for a new string that holds the path of the parent directory of the path it was given.  If the given path has no directory delimiters, or is NULL, we just return '.'.  In all cases, the string we return is new space, and must be deallocated with free().   Derek Wright 9/23/99"" )"	58:1:2341:2719	4274943	1	True				
ANR	4274954	CallExpression	"emit_comment ( ""comment: A dirname() function that is happy on both Unix and NT. This allocates space for a new string that holds the path of the parent directory of the path it was given.  If the given path has no directory delimiters, or is NULL, we just return '.'.  In all cases, the string we return is new space, and must be deallocated with free().   Derek Wright 9/23/99"" )"		4274943	0					
ANR	4274955	Callee	emit_comment		4274943	0					
ANR	4274956	Identifier	emit_comment		4274943	0					
ANR	4274957	ArgumentList	"""comment: A dirname() function that is happy on both Unix and NT. This allocates space for a new string that holds the path of the parent directory of the path it was given.  If the given path has no directory delimiters, or is NULL, we just return '.'.  In all cases, the string we return is new space, and must be deallocated with free().   Derek Wright 9/23/99"""		4274943	1					
ANR	4274958	Argument	"""comment: A dirname() function that is happy on both Unix and NT. This allocates space for a new string that holds the path of the parent directory of the path it was given.  If the given path has no directory delimiters, or is NULL, we just return '.'.  In all cases, the string we return is new space, and must be deallocated with free().   Derek Wright 9/23/99"""		4274943	0					
ANR	4274959	PrimaryExpression	"""comment: A dirname() function that is happy on both Unix and NT. This allocates space for a new string that holds the path of the parent directory of the path it was given.  If the given path has no directory delimiters, or is NULL, we just return '.'.  In all cases, the string we return is new space, and must be deallocated with free().   Derek Wright 9/23/99"""		4274943	0					
ANR	4274960	IdentifierDeclStatement	FunctionDriver driver ;	59:1:2722:2743	4274943	2	True				
ANR	4274961	IdentifierDecl	driver		4274943	0					
ANR	4274962	IdentifierDeclType	FunctionDriver		4274943	0					
ANR	4274963	Identifier	driver		4274943	1					
ANR	4274964	ExpressionStatement	driver . register_function ( test_null )	60:1:2746:2781	4274943	3	True				
ANR	4274965	CallExpression	driver . register_function ( test_null )		4274943	0					
ANR	4274966	Callee	driver . register_function		4274943	0					
ANR	4274967	MemberAccess	driver . register_function		4274943	0					
ANR	4274968	Identifier	driver		4274943	0					
ANR	4274969	Identifier	register_function		4274943	1					
ANR	4274970	ArgumentList	test_null		4274943	1					
ANR	4274971	Argument	test_null		4274943	0					
ANR	4274972	Identifier	test_null		4274943	0					
ANR	4274973	ExpressionStatement	driver . register_function ( test_empty_string )	61:1:2784:2827	4274943	4	True				
ANR	4274974	CallExpression	driver . register_function ( test_empty_string )		4274943	0					
ANR	4274975	Callee	driver . register_function		4274943	0					
ANR	4274976	MemberAccess	driver . register_function		4274943	0					
ANR	4274977	Identifier	driver		4274943	0					
ANR	4274978	Identifier	register_function		4274943	1					
ANR	4274979	ArgumentList	test_empty_string		4274943	1					
ANR	4274980	Argument	test_empty_string		4274943	0					
ANR	4274981	Identifier	test_empty_string		4274943	0					
ANR	4274982	ExpressionStatement	driver . register_function ( test_current_directory )	62:1:2830:2878	4274943	5	True				
ANR	4274983	CallExpression	driver . register_function ( test_current_directory )		4274943	0					
ANR	4274984	Callee	driver . register_function		4274943	0					
ANR	4274985	MemberAccess	driver . register_function		4274943	0					
ANR	4274986	Identifier	driver		4274943	0					
ANR	4274987	Identifier	register_function		4274943	1					
ANR	4274988	ArgumentList	test_current_directory		4274943	1					
ANR	4274989	Argument	test_current_directory		4274943	0					
ANR	4274990	Identifier	test_current_directory		4274943	0					
ANR	4274991	ExpressionStatement	driver . register_function ( test_simple_path_1 )	63:1:2881:2925	4274943	6	True				
ANR	4274992	CallExpression	driver . register_function ( test_simple_path_1 )		4274943	0					
ANR	4274993	Callee	driver . register_function		4274943	0					
ANR	4274994	MemberAccess	driver . register_function		4274943	0					
ANR	4274995	Identifier	driver		4274943	0					
ANR	4274996	Identifier	register_function		4274943	1					
ANR	4274997	ArgumentList	test_simple_path_1		4274943	1					
ANR	4274998	Argument	test_simple_path_1		4274943	0					
ANR	4274999	Identifier	test_simple_path_1		4274943	0					
ANR	4275000	ExpressionStatement	driver . register_function ( test_simple_path_2 )	64:1:2928:2972	4274943	7	True				
ANR	4275001	CallExpression	driver . register_function ( test_simple_path_2 )		4274943	0					
ANR	4275002	Callee	driver . register_function		4274943	0					
ANR	4275003	MemberAccess	driver . register_function		4274943	0					
ANR	4275004	Identifier	driver		4274943	0					
ANR	4275005	Identifier	register_function		4274943	1					
ANR	4275006	ArgumentList	test_simple_path_2		4274943	1					
ANR	4275007	Argument	test_simple_path_2		4274943	0					
ANR	4275008	Identifier	test_simple_path_2		4274943	0					
ANR	4275009	ExpressionStatement	driver . register_function ( test_simple_directory_1 )	65:1:2975:3024	4274943	8	True				
ANR	4275010	CallExpression	driver . register_function ( test_simple_directory_1 )		4274943	0					
ANR	4275011	Callee	driver . register_function		4274943	0					
ANR	4275012	MemberAccess	driver . register_function		4274943	0					
ANR	4275013	Identifier	driver		4274943	0					
ANR	4275014	Identifier	register_function		4274943	1					
ANR	4275015	ArgumentList	test_simple_directory_1		4274943	1					
ANR	4275016	Argument	test_simple_directory_1		4274943	0					
ANR	4275017	Identifier	test_simple_directory_1		4274943	0					
ANR	4275018	ExpressionStatement	driver . register_function ( test_simple_directory_2 )	66:1:3027:3076	4274943	9	True				
ANR	4275019	CallExpression	driver . register_function ( test_simple_directory_2 )		4274943	0					
ANR	4275020	Callee	driver . register_function		4274943	0					
ANR	4275021	MemberAccess	driver . register_function		4274943	0					
ANR	4275022	Identifier	driver		4274943	0					
ANR	4275023	Identifier	register_function		4274943	1					
ANR	4275024	ArgumentList	test_simple_directory_2		4274943	1					
ANR	4275025	Argument	test_simple_directory_2		4274943	0					
ANR	4275026	Identifier	test_simple_directory_2		4274943	0					
ANR	4275027	ExpressionStatement	driver . register_function ( test_directory_and_file_1 )	67:1:3079:3130	4274943	10	True				
ANR	4275028	CallExpression	driver . register_function ( test_directory_and_file_1 )		4274943	0					
ANR	4275029	Callee	driver . register_function		4274943	0					
ANR	4275030	MemberAccess	driver . register_function		4274943	0					
ANR	4275031	Identifier	driver		4274943	0					
ANR	4275032	Identifier	register_function		4274943	1					
ANR	4275033	ArgumentList	test_directory_and_file_1		4274943	1					
ANR	4275034	Argument	test_directory_and_file_1		4274943	0					
ANR	4275035	Identifier	test_directory_and_file_1		4274943	0					
ANR	4275036	ExpressionStatement	driver . register_function ( test_directory_and_file_2 )	68:1:3133:3184	4274943	11	True				
ANR	4275037	CallExpression	driver . register_function ( test_directory_and_file_2 )		4274943	0					
ANR	4275038	Callee	driver . register_function		4274943	0					
ANR	4275039	MemberAccess	driver . register_function		4274943	0					
ANR	4275040	Identifier	driver		4274943	0					
ANR	4275041	Identifier	register_function		4274943	1					
ANR	4275042	ArgumentList	test_directory_and_file_2		4274943	1					
ANR	4275043	Argument	test_directory_and_file_2		4274943	0					
ANR	4275044	Identifier	test_directory_and_file_2		4274943	0					
ANR	4275045	ExpressionStatement	driver . register_function ( test_root_directory )	69:1:3187:3232	4274943	12	True				
ANR	4275046	CallExpression	driver . register_function ( test_root_directory )		4274943	0					
ANR	4275047	Callee	driver . register_function		4274943	0					
ANR	4275048	MemberAccess	driver . register_function		4274943	0					
ANR	4275049	Identifier	driver		4274943	0					
ANR	4275050	Identifier	register_function		4274943	1					
ANR	4275051	ArgumentList	test_root_directory		4274943	1					
ANR	4275052	Argument	test_root_directory		4274943	0					
ANR	4275053	Identifier	test_root_directory		4274943	0					
ANR	4275054	ExpressionStatement	driver . register_function ( test_directory_and_directory )	70:1:3235:3289	4274943	13	True				
ANR	4275055	CallExpression	driver . register_function ( test_directory_and_directory )		4274943	0					
ANR	4275056	Callee	driver . register_function		4274943	0					
ANR	4275057	MemberAccess	driver . register_function		4274943	0					
ANR	4275058	Identifier	driver		4274943	0					
ANR	4275059	Identifier	register_function		4274943	1					
ANR	4275060	ArgumentList	test_directory_and_directory		4274943	1					
ANR	4275061	Argument	test_directory_and_directory		4274943	0					
ANR	4275062	Identifier	test_directory_and_directory		4274943	0					
ANR	4275063	ExpressionStatement	driver . register_function ( test_directory_and_directory_in_root )	71:1:3292:3354	4274943	14	True				
ANR	4275064	CallExpression	driver . register_function ( test_directory_and_directory_in_root )		4274943	0					
ANR	4275065	Callee	driver . register_function		4274943	0					
ANR	4275066	MemberAccess	driver . register_function		4274943	0					
ANR	4275067	Identifier	driver		4274943	0					
ANR	4275068	Identifier	register_function		4274943	1					
ANR	4275069	ArgumentList	test_directory_and_directory_in_root		4274943	1					
ANR	4275070	Argument	test_directory_and_directory_in_root		4274943	0					
ANR	4275071	Identifier	test_directory_and_directory_in_root		4274943	0					
ANR	4275072	ExpressionStatement	driver . register_function ( test_forward_slash )	72:1:3357:3401	4274943	15	True				
ANR	4275073	CallExpression	driver . register_function ( test_forward_slash )		4274943	0					
ANR	4275074	Callee	driver . register_function		4274943	0					
ANR	4275075	MemberAccess	driver . register_function		4274943	0					
ANR	4275076	Identifier	driver		4274943	0					
ANR	4275077	Identifier	register_function		4274943	1					
ANR	4275078	ArgumentList	test_forward_slash		4274943	1					
ANR	4275079	Argument	test_forward_slash		4274943	0					
ANR	4275080	Identifier	test_forward_slash		4274943	0					
ANR	4275081	ExpressionStatement	driver . register_function ( test_backslash )	73:1:3404:3444	4274943	16	True				
ANR	4275082	CallExpression	driver . register_function ( test_backslash )		4274943	0					
ANR	4275083	Callee	driver . register_function		4274943	0					
ANR	4275084	MemberAccess	driver . register_function		4274943	0					
ANR	4275085	Identifier	driver		4274943	0					
ANR	4275086	Identifier	register_function		4274943	1					
ANR	4275087	ArgumentList	test_backslash		4274943	1					
ANR	4275088	Argument	test_backslash		4274943	0					
ANR	4275089	Identifier	test_backslash		4274943	0					
ANR	4275090	ExpressionStatement	driver . register_function ( test_period_and_forward_slash_1 )	74:1:3447:3504	4274943	17	True				
ANR	4275091	CallExpression	driver . register_function ( test_period_and_forward_slash_1 )		4274943	0					
ANR	4275092	Callee	driver . register_function		4274943	0					
ANR	4275093	MemberAccess	driver . register_function		4274943	0					
ANR	4275094	Identifier	driver		4274943	0					
ANR	4275095	Identifier	register_function		4274943	1					
ANR	4275096	ArgumentList	test_period_and_forward_slash_1		4274943	1					
ANR	4275097	Argument	test_period_and_forward_slash_1		4274943	0					
ANR	4275098	Identifier	test_period_and_forward_slash_1		4274943	0					
ANR	4275099	ExpressionStatement	driver . register_function ( test_period_and_backslash_1 )	75:1:3507:3560	4274943	18	True				
ANR	4275100	CallExpression	driver . register_function ( test_period_and_backslash_1 )		4274943	0					
ANR	4275101	Callee	driver . register_function		4274943	0					
ANR	4275102	MemberAccess	driver . register_function		4274943	0					
ANR	4275103	Identifier	driver		4274943	0					
ANR	4275104	Identifier	register_function		4274943	1					
ANR	4275105	ArgumentList	test_period_and_backslash_1		4274943	1					
ANR	4275106	Argument	test_period_and_backslash_1		4274943	0					
ANR	4275107	Identifier	test_period_and_backslash_1		4274943	0					
ANR	4275108	ExpressionStatement	driver . register_function ( test_period_and_forward_slash_2 )	76:1:3563:3620	4274943	19	True				
ANR	4275109	CallExpression	driver . register_function ( test_period_and_forward_slash_2 )		4274943	0					
ANR	4275110	Callee	driver . register_function		4274943	0					
ANR	4275111	MemberAccess	driver . register_function		4274943	0					
ANR	4275112	Identifier	driver		4274943	0					
ANR	4275113	Identifier	register_function		4274943	1					
ANR	4275114	ArgumentList	test_period_and_forward_slash_2		4274943	1					
ANR	4275115	Argument	test_period_and_forward_slash_2		4274943	0					
ANR	4275116	Identifier	test_period_and_forward_slash_2		4274943	0					
ANR	4275117	ExpressionStatement	driver . register_function ( test_period_and_backslash_2 )	77:1:3623:3676	4274943	20	True				
ANR	4275118	CallExpression	driver . register_function ( test_period_and_backslash_2 )		4274943	0					
ANR	4275119	Callee	driver . register_function		4274943	0					
ANR	4275120	MemberAccess	driver . register_function		4274943	0					
ANR	4275121	Identifier	driver		4274943	0					
ANR	4275122	Identifier	register_function		4274943	1					
ANR	4275123	ArgumentList	test_period_and_backslash_2		4274943	1					
ANR	4275124	Argument	test_period_and_backslash_2		4274943	0					
ANR	4275125	Identifier	test_period_and_backslash_2		4274943	0					
ANR	4275126	ExpressionStatement	driver . register_function ( test_backslash_and_period )	78:1:3679:3730	4274943	21	True				
ANR	4275127	CallExpression	driver . register_function ( test_backslash_and_period )		4274943	0					
ANR	4275128	Callee	driver . register_function		4274943	0					
ANR	4275129	MemberAccess	driver . register_function		4274943	0					
ANR	4275130	Identifier	driver		4274943	0					
ANR	4275131	Identifier	register_function		4274943	1					
ANR	4275132	ArgumentList	test_backslash_and_period		4274943	1					
ANR	4275133	Argument	test_backslash_and_period		4274943	0					
ANR	4275134	Identifier	test_backslash_and_period		4274943	0					
ANR	4275135	ExpressionStatement	driver . register_function ( test_forward_slash_and_file_extension )	79:1:3733:3796	4274943	22	True				
ANR	4275136	CallExpression	driver . register_function ( test_forward_slash_and_file_extension )		4274943	0					
ANR	4275137	Callee	driver . register_function		4274943	0					
ANR	4275138	MemberAccess	driver . register_function		4274943	0					
ANR	4275139	Identifier	driver		4274943	0					
ANR	4275140	Identifier	register_function		4274943	1					
ANR	4275141	ArgumentList	test_forward_slash_and_file_extension		4274943	1					
ANR	4275142	Argument	test_forward_slash_and_file_extension		4274943	0					
ANR	4275143	Identifier	test_forward_slash_and_file_extension		4274943	0					
ANR	4275144	ExpressionStatement	driver . register_function ( test_backslash_and_file_extension )	80:1:3799:3858	4274943	23	True				
ANR	4275145	CallExpression	driver . register_function ( test_backslash_and_file_extension )		4274943	0					
ANR	4275146	Callee	driver . register_function		4274943	0					
ANR	4275147	MemberAccess	driver . register_function		4274943	0					
ANR	4275148	Identifier	driver		4274943	0					
ANR	4275149	Identifier	register_function		4274943	1					
ANR	4275150	ArgumentList	test_backslash_and_file_extension		4274943	1					
ANR	4275151	Argument	test_backslash_and_file_extension		4274943	0					
ANR	4275152	Identifier	test_backslash_and_file_extension		4274943	0					
ANR	4275153	ExpressionStatement	driver . register_function ( test_period_and_forward_slash )	81:1:3861:3916	4274943	24	True				
ANR	4275154	CallExpression	driver . register_function ( test_period_and_forward_slash )		4274943	0					
ANR	4275155	Callee	driver . register_function		4274943	0					
ANR	4275156	MemberAccess	driver . register_function		4274943	0					
ANR	4275157	Identifier	driver		4274943	0					
ANR	4275158	Identifier	register_function		4274943	1					
ANR	4275159	ArgumentList	test_period_and_forward_slash		4274943	1					
ANR	4275160	Argument	test_period_and_forward_slash		4274943	0					
ANR	4275161	Identifier	test_period_and_forward_slash		4274943	0					
ANR	4275162	ExpressionStatement	driver . register_function ( test_period_and_backslash )	82:1:3919:3970	4274943	25	True				
ANR	4275163	CallExpression	driver . register_function ( test_period_and_backslash )		4274943	0					
ANR	4275164	Callee	driver . register_function		4274943	0					
ANR	4275165	MemberAccess	driver . register_function		4274943	0					
ANR	4275166	Identifier	driver		4274943	0					
ANR	4275167	Identifier	register_function		4274943	1					
ANR	4275168	ArgumentList	test_period_and_backslash		4274943	1					
ANR	4275169	Argument	test_period_and_backslash		4274943	0					
ANR	4275170	Identifier	test_period_and_backslash		4274943	0					
ANR	4275171	ExpressionStatement	driver . register_function ( test_period_and_forward_slash_with_special_file )	83:1:3973:4046	4274943	26	True				
ANR	4275172	CallExpression	driver . register_function ( test_period_and_forward_slash_with_special_file )		4274943	0					
ANR	4275173	Callee	driver . register_function		4274943	0					
ANR	4275174	MemberAccess	driver . register_function		4274943	0					
ANR	4275175	Identifier	driver		4274943	0					
ANR	4275176	Identifier	register_function		4274943	1					
ANR	4275177	ArgumentList	test_period_and_forward_slash_with_special_file		4274943	1					
ANR	4275178	Argument	test_period_and_forward_slash_with_special_file		4274943	0					
ANR	4275179	Identifier	test_period_and_forward_slash_with_special_file		4274943	0					
ANR	4275180	ExpressionStatement	driver . register_function ( test_period_and_backslash_with_special_file )	84:1:4049:4118	4274943	27	True				
ANR	4275181	CallExpression	driver . register_function ( test_period_and_backslash_with_special_file )		4274943	0					
ANR	4275182	Callee	driver . register_function		4274943	0					
ANR	4275183	MemberAccess	driver . register_function		4274943	0					
ANR	4275184	Identifier	driver		4274943	0					
ANR	4275185	Identifier	register_function		4274943	1					
ANR	4275186	ArgumentList	test_period_and_backslash_with_special_file		4274943	1					
ANR	4275187	Argument	test_period_and_backslash_with_special_file		4274943	0					
ANR	4275188	Identifier	test_period_and_backslash_with_special_file		4274943	0					
ANR	4275189	ExpressionStatement	driver . register_function ( test_double_forward_slash )	85:1:4121:4172	4274943	28	True				
ANR	4275190	CallExpression	driver . register_function ( test_double_forward_slash )		4274943	0					
ANR	4275191	Callee	driver . register_function		4274943	0					
ANR	4275192	MemberAccess	driver . register_function		4274943	0					
ANR	4275193	Identifier	driver		4274943	0					
ANR	4275194	Identifier	register_function		4274943	1					
ANR	4275195	ArgumentList	test_double_forward_slash		4274943	1					
ANR	4275196	Argument	test_double_forward_slash		4274943	0					
ANR	4275197	Identifier	test_double_forward_slash		4274943	0					
ANR	4275198	ExpressionStatement	driver . register_function ( test_double_backslash )	86:1:4175:4222	4274943	29	True				
ANR	4275199	CallExpression	driver . register_function ( test_double_backslash )		4274943	0					
ANR	4275200	Callee	driver . register_function		4274943	0					
ANR	4275201	MemberAccess	driver . register_function		4274943	0					
ANR	4275202	Identifier	driver		4274943	0					
ANR	4275203	Identifier	register_function		4274943	1					
ANR	4275204	ArgumentList	test_double_backslash		4274943	1					
ANR	4275205	Argument	test_double_backslash		4274943	0					
ANR	4275206	Identifier	test_double_backslash		4274943	0					
ANR	4275207	ReturnStatement	return driver . do_all_functions ( ) ;	87:1:4225:4257	4274943	30	True				
ANR	4275208	CallExpression	driver . do_all_functions ( )		4274943	0					
ANR	4275209	Callee	driver . do_all_functions		4274943	0					
ANR	4275210	MemberAccess	driver . do_all_functions		4274943	0					
ANR	4275211	Identifier	driver		4274943	0					
ANR	4275212	Identifier	do_all_functions		4274943	1					
ANR	4275213	ArgumentList			4274943	1					
ANR	4275214	ReturnType	bool		4274943	1					
ANR	4275215	Identifier	FTEST_dirname		4274943	2					
ANR	4275216	ParameterList			4274943	3					
ANR	4275217	CFGEntryNode	ENTRY		4274943		True				
ANR	4275218	CFGExitNode	EXIT		4274943		True				
ANR	4275219	Symbol	test_backslash		4274943						
ANR	4275220	Symbol	test_backslash_and_period		4274943						
ANR	4275221	Symbol	test_directory_and_directory_in_root		4274943						
ANR	4275222	Symbol	test_period_and_forward_slash		4274943						
ANR	4275223	Symbol	test_double_backslash		4274943						
ANR	4275224	Symbol	test_period_and_backslash_2		4274943						
ANR	4275225	Symbol	test_period_and_backslash_with_special_file		4274943						
ANR	4275226	Symbol	test_forward_slash		4274943						
ANR	4275227	Symbol	test_simple_directory_1		4274943						
ANR	4275228	Symbol	test_directory_and_directory		4274943						
ANR	4275229	Symbol	test_empty_string		4274943						
ANR	4275230	Symbol	test_period_and_backslash		4274943						
ANR	4275231	Symbol	test_period_and_backslash_1		4274943						
ANR	4275232	Symbol	driver . do_all_functions		4274943						
ANR	4275233	Symbol	test_current_directory		4274943						
ANR	4275234	Symbol	test_forward_slash_and_file_extension		4274943						
ANR	4275235	Symbol	test_directory_and_file_1		4274943						
ANR	4275236	Symbol	test_directory_and_file_2		4274943						
ANR	4275237	Symbol	test_period_and_forward_slash_with_special_file		4274943						
ANR	4275238	Symbol	test_root_directory		4274943						
ANR	4275239	Symbol	test_simple_directory_2		4274943						
ANR	4275240	Symbol	test_null		4274943						
ANR	4275241	Symbol	test_simple_path_2		4274943						
ANR	4275242	Symbol	driver		4274943						
ANR	4275243	Symbol	test_period_and_forward_slash_1		4274943						
ANR	4275244	Symbol	test_double_forward_slash		4274943						
ANR	4275245	Symbol	test_period_and_forward_slash_2		4274943						
ANR	4275246	Symbol	test_simple_path_1		4274943						
ANR	4275247	Symbol	test_backslash_and_file_extension		4274943						
ANR	4275248	Function	test_null	90:0:4262:4680							
ANR	4275249	FunctionDef	test_null ()		4275248	0					
ANR	4275250	CompoundStatement		90:24:4286:4680	4275248	0					
ANR	4275251	ExpressionStatement	"emit_test ( ""Does a NULL path return a period?"" )"	91:1:4289:4335	4275248	0	True				
ANR	4275252	CallExpression	"emit_test ( ""Does a NULL path return a period?"" )"		4275248	0					
ANR	4275253	Callee	emit_test		4275248	0					
ANR	4275254	Identifier	emit_test		4275248	0					
ANR	4275255	ArgumentList	"""Does a NULL path return a period?"""		4275248	1					
ANR	4275256	Argument	"""Does a NULL path return a period?"""		4275248	0					
ANR	4275257	PrimaryExpression	"""Does a NULL path return a period?"""		4275248	0					
ANR	4275258	IdentifierDeclStatement	"const char * param = ""NULL"" ;"	92:1:4338:4364	4275248	1	True				
ANR	4275259	IdentifierDecl	"* param = ""NULL"""		4275248	0					
ANR	4275260	IdentifierDeclType	const char *		4275248	0					
ANR	4275261	Identifier	param		4275248	1					
ANR	4275262	AssignmentExpression	"* param = ""NULL"""		4275248	2		=			
ANR	4275263	Identifier	param		4275248	0					
ANR	4275264	PrimaryExpression	"""NULL"""		4275248	1					
ANR	4275265	IdentifierDeclStatement	"const char * expect = ""."" ;"	93:1:4367:4391	4275248	2	True				
ANR	4275266	IdentifierDecl	"* expect = ""."""		4275248	0					
ANR	4275267	IdentifierDeclType	const char *		4275248	0					
ANR	4275268	Identifier	expect		4275248	1					
ANR	4275269	AssignmentExpression	"* expect = ""."""		4275248	2		=			
ANR	4275270	Identifier	expect		4275248	0					
ANR	4275271	PrimaryExpression	"""."""		4275248	1					
ANR	4275272	ExpressionStatement	emit_input_header ( )	94:1:4394:4413	4275248	3	True				
ANR	4275273	CallExpression	emit_input_header ( )		4275248	0					
ANR	4275274	Callee	emit_input_header		4275248	0					
ANR	4275275	Identifier	emit_input_header		4275248	0					
ANR	4275276	ArgumentList			4275248	1					
ANR	4275277	ExpressionStatement	"emit_param ( ""STRING"" , param )"	95:1:4416:4443	4275248	4	True				
ANR	4275278	CallExpression	"emit_param ( ""STRING"" , param )"		4275248	0					
ANR	4275279	Callee	emit_param		4275248	0					
ANR	4275280	Identifier	emit_param		4275248	0					
ANR	4275281	ArgumentList	"""STRING"""		4275248	1					
ANR	4275282	Argument	"""STRING"""		4275248	0					
ANR	4275283	PrimaryExpression	"""STRING"""		4275248	0					
ANR	4275284	Argument	param		4275248	1					
ANR	4275285	Identifier	param		4275248	0					
ANR	4275286	ExpressionStatement	emit_output_expected_header ( )	96:1:4446:4475	4275248	5	True				
ANR	4275287	CallExpression	emit_output_expected_header ( )		4275248	0					
ANR	4275288	Callee	emit_output_expected_header		4275248	0					
ANR	4275289	Identifier	emit_output_expected_header		4275248	0					
ANR	4275290	ArgumentList			4275248	1					
ANR	4275291	ExpressionStatement	"emit_retval ( ""%s"" , expect )"	97:1:4478:4503	4275248	6	True				
ANR	4275292	CallExpression	"emit_retval ( ""%s"" , expect )"		4275248	0					
ANR	4275293	Callee	emit_retval		4275248	0					
ANR	4275294	Identifier	emit_retval		4275248	0					
ANR	4275295	ArgumentList	"""%s"""		4275248	1					
ANR	4275296	Argument	"""%s"""		4275248	0					
ANR	4275297	PrimaryExpression	"""%s"""		4275248	0					
ANR	4275298	Argument	expect		4275248	1					
ANR	4275299	Identifier	expect		4275248	0					
ANR	4275300	IdentifierDeclStatement	char * path = condor_dirname ( param ) ;	98:1:4506:4540	4275248	7	True				
ANR	4275301	IdentifierDecl	* path = condor_dirname ( param )		4275248	0					
ANR	4275302	IdentifierDeclType	char *		4275248	0					
ANR	4275303	Identifier	path		4275248	1					
ANR	4275304	AssignmentExpression	* path = condor_dirname ( param )		4275248	2		=			
ANR	4275305	Identifier	path		4275248	0					
ANR	4275306	CallExpression	condor_dirname ( param )		4275248	1					
ANR	4275307	Callee	condor_dirname		4275248	0					
ANR	4275308	Identifier	condor_dirname		4275248	0					
ANR	4275309	ArgumentList	param		4275248	1					
ANR	4275310	Argument	param		4275248	0					
ANR	4275311	Identifier	param		4275248	0					
ANR	4275312	ExpressionStatement	emit_output_actual_header ( )	99:1:4543:4570	4275248	8	True				
ANR	4275313	CallExpression	emit_output_actual_header ( )		4275248	0					
ANR	4275314	Callee	emit_output_actual_header		4275248	0					
ANR	4275315	Identifier	emit_output_actual_header		4275248	0					
ANR	4275316	ArgumentList			4275248	1					
ANR	4275317	ExpressionStatement	"emit_retval ( ""%s"" , path )"	100:1:4573:4596	4275248	9	True				
ANR	4275318	CallExpression	"emit_retval ( ""%s"" , path )"		4275248	0					
ANR	4275319	Callee	emit_retval		4275248	0					
ANR	4275320	Identifier	emit_retval		4275248	0					
ANR	4275321	ArgumentList	"""%s"""		4275248	1					
ANR	4275322	Argument	"""%s"""		4275248	0					
ANR	4275323	PrimaryExpression	"""%s"""		4275248	0					
ANR	4275324	Argument	path		4275248	1					
ANR	4275325	Identifier	path		4275248	0					
ANR	4275326	IfStatement	"if ( strcmp ( path , expect ) != MATCH )"		4275248	10					
ANR	4275327	Condition	"strcmp ( path , expect ) != MATCH"	101:4:4602:4630	4275248	0	True				
ANR	4275328	EqualityExpression	"strcmp ( path , expect ) != MATCH"		4275248	0		!=			
ANR	4275329	CallExpression	"strcmp ( path , expect )"		4275248	0					
ANR	4275330	Callee	strcmp		4275248	0					
ANR	4275331	Identifier	strcmp		4275248	0					
ANR	4275332	ArgumentList	path		4275248	1					
ANR	4275333	Argument	path		4275248	0					
ANR	4275334	Identifier	path		4275248	0					
ANR	4275335	Argument	expect		4275248	1					
ANR	4275336	Identifier	expect		4275248	0					
ANR	4275337	Identifier	MATCH		4275248	1					
ANR	4275338	CompoundStatement		12:35:346:346	4275248	1					
ANR	4275339	ExpressionStatement	free ( path )	102:2:4637:4647	4275248	0	True				
ANR	4275340	CallExpression	free ( path )		4275248	0					
ANR	4275341	Callee	free		4275248	0					
ANR	4275342	Identifier	free		4275248	0					
ANR	4275343	ArgumentList	path		4275248	1					
ANR	4275344	Argument	path		4275248	0					
ANR	4275345	Identifier	path		4275248	0					
ANR	4275346	ExpressionStatement	FAIL	103:2:4651:4655	4275248	1	True				
ANR	4275347	Identifier	FAIL		4275248	0					
ANR	4275348	ExpressionStatement	free ( path )	105:1:4661:4671	4275248	11	True				
ANR	4275349	CallExpression	free ( path )		4275248	0					
ANR	4275350	Callee	free		4275248	0					
ANR	4275351	Identifier	free		4275248	0					
ANR	4275352	ArgumentList	path		4275248	1					
ANR	4275353	Argument	path		4275248	0					
ANR	4275354	Identifier	path		4275248	0					
ANR	4275355	ExpressionStatement	PASS	106:1:4674:4678	4275248	12	True				
ANR	4275356	Identifier	PASS		4275248	0					
ANR	4275357	ReturnType	static bool		4275248	1					
ANR	4275358	Identifier	test_null		4275248	2					
ANR	4275359	ParameterList			4275248	3					
ANR	4275360	CFGEntryNode	ENTRY		4275248		True				
ANR	4275361	CFGExitNode	EXIT		4275248		True				
ANR	4275362	Symbol	strcmp		4275248						
ANR	4275363	Symbol	expect		4275248						
ANR	4275364	Symbol	path		4275248						
ANR	4275365	Symbol	param		4275248						
ANR	4275366	Symbol	condor_dirname		4275248						
ANR	4275367	Symbol	MATCH		4275248						
ANR	4275368	Function	test_empty_string	109:0:4683:5107							
ANR	4275369	FunctionDef	test_empty_string ()		4275368	0					
ANR	4275370	CompoundStatement		109:32:4715:5107	4275368	0					
ANR	4275371	ExpressionStatement	"emit_test ( ""Does an empty path return a period?"" )"	110:1:4718:4766	4275368	0	True				
ANR	4275372	CallExpression	"emit_test ( ""Does an empty path return a period?"" )"		4275368	0					
ANR	4275373	Callee	emit_test		4275368	0					
ANR	4275374	Identifier	emit_test		4275368	0					
ANR	4275375	ArgumentList	"""Does an empty path return a period?"""		4275368	1					
ANR	4275376	Argument	"""Does an empty path return a period?"""		4275368	0					
ANR	4275377	PrimaryExpression	"""Does an empty path return a period?"""		4275368	0					
ANR	4275378	IdentifierDeclStatement	"const char * param = """" ;"	111:1:4769:4791	4275368	1	True				
ANR	4275379	IdentifierDecl	"* param = """""		4275368	0					
ANR	4275380	IdentifierDeclType	const char *		4275368	0					
ANR	4275381	Identifier	param		4275368	1					
ANR	4275382	AssignmentExpression	"* param = """""		4275368	2		=			
ANR	4275383	Identifier	param		4275368	0					
ANR	4275384	PrimaryExpression	""""""		4275368	1					
ANR	4275385	IdentifierDeclStatement	"const char * expect = ""."" ;"	112:1:4794:4818	4275368	2	True				
ANR	4275386	IdentifierDecl	"* expect = ""."""		4275368	0					
ANR	4275387	IdentifierDeclType	const char *		4275368	0					
ANR	4275388	Identifier	expect		4275368	1					
ANR	4275389	AssignmentExpression	"* expect = ""."""		4275368	2		=			
ANR	4275390	Identifier	expect		4275368	0					
ANR	4275391	PrimaryExpression	"""."""		4275368	1					
ANR	4275392	ExpressionStatement	emit_input_header ( )	113:1:4821:4840	4275368	3	True				
ANR	4275393	CallExpression	emit_input_header ( )		4275368	0					
ANR	4275394	Callee	emit_input_header		4275368	0					
ANR	4275395	Identifier	emit_input_header		4275368	0					
ANR	4275396	ArgumentList			4275368	1					
ANR	4275397	ExpressionStatement	"emit_param ( ""STRING"" , param )"	114:1:4843:4870	4275368	4	True				
ANR	4275398	CallExpression	"emit_param ( ""STRING"" , param )"		4275368	0					
ANR	4275399	Callee	emit_param		4275368	0					
ANR	4275400	Identifier	emit_param		4275368	0					
ANR	4275401	ArgumentList	"""STRING"""		4275368	1					
ANR	4275402	Argument	"""STRING"""		4275368	0					
ANR	4275403	PrimaryExpression	"""STRING"""		4275368	0					
ANR	4275404	Argument	param		4275368	1					
ANR	4275405	Identifier	param		4275368	0					
ANR	4275406	ExpressionStatement	emit_output_expected_header ( )	115:1:4873:4902	4275368	5	True				
ANR	4275407	CallExpression	emit_output_expected_header ( )		4275368	0					
ANR	4275408	Callee	emit_output_expected_header		4275368	0					
ANR	4275409	Identifier	emit_output_expected_header		4275368	0					
ANR	4275410	ArgumentList			4275368	1					
ANR	4275411	ExpressionStatement	"emit_retval ( ""%s"" , expect )"	116:1:4905:4930	4275368	6	True				
ANR	4275412	CallExpression	"emit_retval ( ""%s"" , expect )"		4275368	0					
ANR	4275413	Callee	emit_retval		4275368	0					
ANR	4275414	Identifier	emit_retval		4275368	0					
ANR	4275415	ArgumentList	"""%s"""		4275368	1					
ANR	4275416	Argument	"""%s"""		4275368	0					
ANR	4275417	PrimaryExpression	"""%s"""		4275368	0					
ANR	4275418	Argument	expect		4275368	1					
ANR	4275419	Identifier	expect		4275368	0					
ANR	4275420	IdentifierDeclStatement	char * path = condor_dirname ( param ) ;	117:1:4933:4967	4275368	7	True				
ANR	4275421	IdentifierDecl	* path = condor_dirname ( param )		4275368	0					
ANR	4275422	IdentifierDeclType	char *		4275368	0					
ANR	4275423	Identifier	path		4275368	1					
ANR	4275424	AssignmentExpression	* path = condor_dirname ( param )		4275368	2		=			
ANR	4275425	Identifier	path		4275368	0					
ANR	4275426	CallExpression	condor_dirname ( param )		4275368	1					
ANR	4275427	Callee	condor_dirname		4275368	0					
ANR	4275428	Identifier	condor_dirname		4275368	0					
ANR	4275429	ArgumentList	param		4275368	1					
ANR	4275430	Argument	param		4275368	0					
ANR	4275431	Identifier	param		4275368	0					
ANR	4275432	ExpressionStatement	emit_output_actual_header ( )	118:1:4970:4997	4275368	8	True				
ANR	4275433	CallExpression	emit_output_actual_header ( )		4275368	0					
ANR	4275434	Callee	emit_output_actual_header		4275368	0					
ANR	4275435	Identifier	emit_output_actual_header		4275368	0					
ANR	4275436	ArgumentList			4275368	1					
ANR	4275437	ExpressionStatement	"emit_retval ( ""%s"" , path )"	119:1:5000:5023	4275368	9	True				
ANR	4275438	CallExpression	"emit_retval ( ""%s"" , path )"		4275368	0					
ANR	4275439	Callee	emit_retval		4275368	0					
ANR	4275440	Identifier	emit_retval		4275368	0					
ANR	4275441	ArgumentList	"""%s"""		4275368	1					
ANR	4275442	Argument	"""%s"""		4275368	0					
ANR	4275443	PrimaryExpression	"""%s"""		4275368	0					
ANR	4275444	Argument	path		4275368	1					
ANR	4275445	Identifier	path		4275368	0					
ANR	4275446	IfStatement	"if ( strcmp ( path , expect ) != MATCH )"		4275368	10					
ANR	4275447	Condition	"strcmp ( path , expect ) != MATCH"	120:4:5029:5057	4275368	0	True				
ANR	4275448	EqualityExpression	"strcmp ( path , expect ) != MATCH"		4275368	0		!=			
ANR	4275449	CallExpression	"strcmp ( path , expect )"		4275368	0					
ANR	4275450	Callee	strcmp		4275368	0					
ANR	4275451	Identifier	strcmp		4275368	0					
ANR	4275452	ArgumentList	path		4275368	1					
ANR	4275453	Argument	path		4275368	0					
ANR	4275454	Identifier	path		4275368	0					
ANR	4275455	Argument	expect		4275368	1					
ANR	4275456	Identifier	expect		4275368	0					
ANR	4275457	Identifier	MATCH		4275368	1					
ANR	4275458	CompoundStatement		12:35:344:344	4275368	1					
ANR	4275459	ExpressionStatement	free ( path )	121:2:5064:5074	4275368	0	True				
ANR	4275460	CallExpression	free ( path )		4275368	0					
ANR	4275461	Callee	free		4275368	0					
ANR	4275462	Identifier	free		4275368	0					
ANR	4275463	ArgumentList	path		4275368	1					
ANR	4275464	Argument	path		4275368	0					
ANR	4275465	Identifier	path		4275368	0					
ANR	4275466	ExpressionStatement	FAIL	122:2:5078:5082	4275368	1	True				
ANR	4275467	Identifier	FAIL		4275368	0					
ANR	4275468	ExpressionStatement	free ( path )	124:1:5088:5098	4275368	11	True				
ANR	4275469	CallExpression	free ( path )		4275368	0					
ANR	4275470	Callee	free		4275368	0					
ANR	4275471	Identifier	free		4275368	0					
ANR	4275472	ArgumentList	path		4275368	1					
ANR	4275473	Argument	path		4275368	0					
ANR	4275474	Identifier	path		4275368	0					
ANR	4275475	ExpressionStatement	PASS	125:1:5101:5105	4275368	12	True				
ANR	4275476	Identifier	PASS		4275368	0					
ANR	4275477	ReturnType	static bool		4275368	1					
ANR	4275478	Identifier	test_empty_string		4275368	2					
ANR	4275479	ParameterList			4275368	3					
ANR	4275480	CFGEntryNode	ENTRY		4275368		True				
ANR	4275481	CFGExitNode	EXIT		4275368		True				
ANR	4275482	Symbol	strcmp		4275368						
ANR	4275483	Symbol	expect		4275368						
ANR	4275484	Symbol	path		4275368						
ANR	4275485	Symbol	param		4275368						
ANR	4275486	Symbol	condor_dirname		4275368						
ANR	4275487	Symbol	MATCH		4275368						
ANR	4275488	Function	test_current_directory	128:0:5110:5561							
ANR	4275489	FunctionDef	test_current_directory ()		4275488	0					
ANR	4275490	CompoundStatement		128:37:5147:5561	4275488	0					
ANR	4275491	ExpressionStatement	"emit_test ( ""Does the current directory return the current directory?"" )"	129:1:5150:5219	4275488	0	True				
ANR	4275492	CallExpression	"emit_test ( ""Does the current directory return the current directory?"" )"		4275488	0					
ANR	4275493	Callee	emit_test		4275488	0					
ANR	4275494	Identifier	emit_test		4275488	0					
ANR	4275495	ArgumentList	"""Does the current directory return the current directory?"""		4275488	1					
ANR	4275496	Argument	"""Does the current directory return the current directory?"""		4275488	0					
ANR	4275497	PrimaryExpression	"""Does the current directory return the current directory?"""		4275488	0					
ANR	4275498	IdentifierDeclStatement	"const char * param = ""."" ;"	130:1:5222:5245	4275488	1	True				
ANR	4275499	IdentifierDecl	"* param = ""."""		4275488	0					
ANR	4275500	IdentifierDeclType	const char *		4275488	0					
ANR	4275501	Identifier	param		4275488	1					
ANR	4275502	AssignmentExpression	"* param = ""."""		4275488	2		=			
ANR	4275503	Identifier	param		4275488	0					
ANR	4275504	PrimaryExpression	"""."""		4275488	1					
ANR	4275505	IdentifierDeclStatement	"const char * expect = ""."" ;"	131:1:5248:5272	4275488	2	True				
ANR	4275506	IdentifierDecl	"* expect = ""."""		4275488	0					
ANR	4275507	IdentifierDeclType	const char *		4275488	0					
ANR	4275508	Identifier	expect		4275488	1					
ANR	4275509	AssignmentExpression	"* expect = ""."""		4275488	2		=			
ANR	4275510	Identifier	expect		4275488	0					
ANR	4275511	PrimaryExpression	"""."""		4275488	1					
ANR	4275512	ExpressionStatement	emit_input_header ( )	132:1:5275:5294	4275488	3	True				
ANR	4275513	CallExpression	emit_input_header ( )		4275488	0					
ANR	4275514	Callee	emit_input_header		4275488	0					
ANR	4275515	Identifier	emit_input_header		4275488	0					
ANR	4275516	ArgumentList			4275488	1					
ANR	4275517	ExpressionStatement	"emit_param ( ""STRING"" , param )"	133:1:5297:5324	4275488	4	True				
ANR	4275518	CallExpression	"emit_param ( ""STRING"" , param )"		4275488	0					
ANR	4275519	Callee	emit_param		4275488	0					
ANR	4275520	Identifier	emit_param		4275488	0					
ANR	4275521	ArgumentList	"""STRING"""		4275488	1					
ANR	4275522	Argument	"""STRING"""		4275488	0					
ANR	4275523	PrimaryExpression	"""STRING"""		4275488	0					
ANR	4275524	Argument	param		4275488	1					
ANR	4275525	Identifier	param		4275488	0					
ANR	4275526	ExpressionStatement	emit_output_expected_header ( )	134:1:5327:5356	4275488	5	True				
ANR	4275527	CallExpression	emit_output_expected_header ( )		4275488	0					
ANR	4275528	Callee	emit_output_expected_header		4275488	0					
ANR	4275529	Identifier	emit_output_expected_header		4275488	0					
ANR	4275530	ArgumentList			4275488	1					
ANR	4275531	ExpressionStatement	"emit_retval ( ""%s"" , expect )"	135:1:5359:5384	4275488	6	True				
ANR	4275532	CallExpression	"emit_retval ( ""%s"" , expect )"		4275488	0					
ANR	4275533	Callee	emit_retval		4275488	0					
ANR	4275534	Identifier	emit_retval		4275488	0					
ANR	4275535	ArgumentList	"""%s"""		4275488	1					
ANR	4275536	Argument	"""%s"""		4275488	0					
ANR	4275537	PrimaryExpression	"""%s"""		4275488	0					
ANR	4275538	Argument	expect		4275488	1					
ANR	4275539	Identifier	expect		4275488	0					
ANR	4275540	IdentifierDeclStatement	char * path = condor_dirname ( param ) ;	136:1:5387:5421	4275488	7	True				
ANR	4275541	IdentifierDecl	* path = condor_dirname ( param )		4275488	0					
ANR	4275542	IdentifierDeclType	char *		4275488	0					
ANR	4275543	Identifier	path		4275488	1					
ANR	4275544	AssignmentExpression	* path = condor_dirname ( param )		4275488	2		=			
ANR	4275545	Identifier	path		4275488	0					
ANR	4275546	CallExpression	condor_dirname ( param )		4275488	1					
ANR	4275547	Callee	condor_dirname		4275488	0					
ANR	4275548	Identifier	condor_dirname		4275488	0					
ANR	4275549	ArgumentList	param		4275488	1					
ANR	4275550	Argument	param		4275488	0					
ANR	4275551	Identifier	param		4275488	0					
ANR	4275552	ExpressionStatement	emit_output_actual_header ( )	137:1:5424:5451	4275488	8	True				
ANR	4275553	CallExpression	emit_output_actual_header ( )		4275488	0					
ANR	4275554	Callee	emit_output_actual_header		4275488	0					
ANR	4275555	Identifier	emit_output_actual_header		4275488	0					
ANR	4275556	ArgumentList			4275488	1					
ANR	4275557	ExpressionStatement	"emit_retval ( ""%s"" , path )"	138:1:5454:5477	4275488	9	True				
ANR	4275558	CallExpression	"emit_retval ( ""%s"" , path )"		4275488	0					
ANR	4275559	Callee	emit_retval		4275488	0					
ANR	4275560	Identifier	emit_retval		4275488	0					
ANR	4275561	ArgumentList	"""%s"""		4275488	1					
ANR	4275562	Argument	"""%s"""		4275488	0					
ANR	4275563	PrimaryExpression	"""%s"""		4275488	0					
ANR	4275564	Argument	path		4275488	1					
ANR	4275565	Identifier	path		4275488	0					
ANR	4275566	IfStatement	"if ( strcmp ( path , expect ) != MATCH )"		4275488	10					
ANR	4275567	Condition	"strcmp ( path , expect ) != MATCH"	139:4:5483:5511	4275488	0	True				
ANR	4275568	EqualityExpression	"strcmp ( path , expect ) != MATCH"		4275488	0		!=			
ANR	4275569	CallExpression	"strcmp ( path , expect )"		4275488	0					
ANR	4275570	Callee	strcmp		4275488	0					
ANR	4275571	Identifier	strcmp		4275488	0					
ANR	4275572	ArgumentList	path		4275488	1					
ANR	4275573	Argument	path		4275488	0					
ANR	4275574	Identifier	path		4275488	0					
ANR	4275575	Argument	expect		4275488	1					
ANR	4275576	Identifier	expect		4275488	0					
ANR	4275577	Identifier	MATCH		4275488	1					
ANR	4275578	CompoundStatement		12:35:366:366	4275488	1					
ANR	4275579	ExpressionStatement	free ( path )	140:2:5518:5528	4275488	0	True				
ANR	4275580	CallExpression	free ( path )		4275488	0					
ANR	4275581	Callee	free		4275488	0					
ANR	4275582	Identifier	free		4275488	0					
ANR	4275583	ArgumentList	path		4275488	1					
ANR	4275584	Argument	path		4275488	0					
ANR	4275585	Identifier	path		4275488	0					
ANR	4275586	ExpressionStatement	FAIL	141:2:5532:5536	4275488	1	True				
ANR	4275587	Identifier	FAIL		4275488	0					
ANR	4275588	ExpressionStatement	free ( path )	143:1:5542:5552	4275488	11	True				
ANR	4275589	CallExpression	free ( path )		4275488	0					
ANR	4275590	Callee	free		4275488	0					
ANR	4275591	Identifier	free		4275488	0					
ANR	4275592	ArgumentList	path		4275488	1					
ANR	4275593	Argument	path		4275488	0					
ANR	4275594	Identifier	path		4275488	0					
ANR	4275595	ExpressionStatement	PASS	144:1:5555:5559	4275488	12	True				
ANR	4275596	Identifier	PASS		4275488	0					
ANR	4275597	ReturnType	static bool		4275488	1					
ANR	4275598	Identifier	test_current_directory		4275488	2					
ANR	4275599	ParameterList			4275488	3					
ANR	4275600	CFGEntryNode	ENTRY		4275488		True				
ANR	4275601	CFGExitNode	EXIT		4275488		True				
ANR	4275602	Symbol	strcmp		4275488						
ANR	4275603	Symbol	expect		4275488						
ANR	4275604	Symbol	path		4275488						
ANR	4275605	Symbol	param		4275488						
ANR	4275606	Symbol	condor_dirname		4275488						
ANR	4275607	Symbol	MATCH		4275488						
ANR	4275608	Function	test_simple_path_1	147:0:5564:6013							
ANR	4275609	FunctionDef	test_simple_path_1 ()		4275608	0					
ANR	4275610	CompoundStatement		147:33:5597:6013	4275608	0					
ANR	4275611	ExpressionStatement	"emit_test ( ""Does a single character path return the current directory?"" )"	148:1:5600:5671	4275608	0	True				
ANR	4275612	CallExpression	"emit_test ( ""Does a single character path return the current directory?"" )"		4275608	0					
ANR	4275613	Callee	emit_test		4275608	0					
ANR	4275614	Identifier	emit_test		4275608	0					
ANR	4275615	ArgumentList	"""Does a single character path return the current directory?"""		4275608	1					
ANR	4275616	Argument	"""Does a single character path return the current directory?"""		4275608	0					
ANR	4275617	PrimaryExpression	"""Does a single character path return the current directory?"""		4275608	0					
ANR	4275618	IdentifierDeclStatement	"const char * param = ""f"" ;"	149:1:5674:5697	4275608	1	True				
ANR	4275619	IdentifierDecl	"* param = ""f"""		4275608	0					
ANR	4275620	IdentifierDeclType	const char *		4275608	0					
ANR	4275621	Identifier	param		4275608	1					
ANR	4275622	AssignmentExpression	"* param = ""f"""		4275608	2		=			
ANR	4275623	Identifier	param		4275608	0					
ANR	4275624	PrimaryExpression	"""f"""		4275608	1					
ANR	4275625	IdentifierDeclStatement	"const char * expect = ""."" ;"	150:1:5700:5724	4275608	2	True				
ANR	4275626	IdentifierDecl	"* expect = ""."""		4275608	0					
ANR	4275627	IdentifierDeclType	const char *		4275608	0					
ANR	4275628	Identifier	expect		4275608	1					
ANR	4275629	AssignmentExpression	"* expect = ""."""		4275608	2		=			
ANR	4275630	Identifier	expect		4275608	0					
ANR	4275631	PrimaryExpression	"""."""		4275608	1					
ANR	4275632	ExpressionStatement	emit_input_header ( )	151:1:5727:5746	4275608	3	True				
ANR	4275633	CallExpression	emit_input_header ( )		4275608	0					
ANR	4275634	Callee	emit_input_header		4275608	0					
ANR	4275635	Identifier	emit_input_header		4275608	0					
ANR	4275636	ArgumentList			4275608	1					
ANR	4275637	ExpressionStatement	"emit_param ( ""STRING"" , param )"	152:1:5749:5776	4275608	4	True				
ANR	4275638	CallExpression	"emit_param ( ""STRING"" , param )"		4275608	0					
ANR	4275639	Callee	emit_param		4275608	0					
ANR	4275640	Identifier	emit_param		4275608	0					
ANR	4275641	ArgumentList	"""STRING"""		4275608	1					
ANR	4275642	Argument	"""STRING"""		4275608	0					
ANR	4275643	PrimaryExpression	"""STRING"""		4275608	0					
ANR	4275644	Argument	param		4275608	1					
ANR	4275645	Identifier	param		4275608	0					
ANR	4275646	ExpressionStatement	emit_output_expected_header ( )	153:1:5779:5808	4275608	5	True				
ANR	4275647	CallExpression	emit_output_expected_header ( )		4275608	0					
ANR	4275648	Callee	emit_output_expected_header		4275608	0					
ANR	4275649	Identifier	emit_output_expected_header		4275608	0					
ANR	4275650	ArgumentList			4275608	1					
ANR	4275651	ExpressionStatement	"emit_retval ( ""%s"" , expect )"	154:1:5811:5836	4275608	6	True				
ANR	4275652	CallExpression	"emit_retval ( ""%s"" , expect )"		4275608	0					
ANR	4275653	Callee	emit_retval		4275608	0					
ANR	4275654	Identifier	emit_retval		4275608	0					
ANR	4275655	ArgumentList	"""%s"""		4275608	1					
ANR	4275656	Argument	"""%s"""		4275608	0					
ANR	4275657	PrimaryExpression	"""%s"""		4275608	0					
ANR	4275658	Argument	expect		4275608	1					
ANR	4275659	Identifier	expect		4275608	0					
ANR	4275660	IdentifierDeclStatement	char * path = condor_dirname ( param ) ;	155:1:5839:5873	4275608	7	True				
ANR	4275661	IdentifierDecl	* path = condor_dirname ( param )		4275608	0					
ANR	4275662	IdentifierDeclType	char *		4275608	0					
ANR	4275663	Identifier	path		4275608	1					
ANR	4275664	AssignmentExpression	* path = condor_dirname ( param )		4275608	2		=			
ANR	4275665	Identifier	path		4275608	0					
ANR	4275666	CallExpression	condor_dirname ( param )		4275608	1					
ANR	4275667	Callee	condor_dirname		4275608	0					
ANR	4275668	Identifier	condor_dirname		4275608	0					
ANR	4275669	ArgumentList	param		4275608	1					
ANR	4275670	Argument	param		4275608	0					
ANR	4275671	Identifier	param		4275608	0					
ANR	4275672	ExpressionStatement	emit_output_actual_header ( )	156:1:5876:5903	4275608	8	True				
ANR	4275673	CallExpression	emit_output_actual_header ( )		4275608	0					
ANR	4275674	Callee	emit_output_actual_header		4275608	0					
ANR	4275675	Identifier	emit_output_actual_header		4275608	0					
ANR	4275676	ArgumentList			4275608	1					
ANR	4275677	ExpressionStatement	"emit_retval ( ""%s"" , path )"	157:1:5906:5929	4275608	9	True				
ANR	4275678	CallExpression	"emit_retval ( ""%s"" , path )"		4275608	0					
ANR	4275679	Callee	emit_retval		4275608	0					
ANR	4275680	Identifier	emit_retval		4275608	0					
ANR	4275681	ArgumentList	"""%s"""		4275608	1					
ANR	4275682	Argument	"""%s"""		4275608	0					
ANR	4275683	PrimaryExpression	"""%s"""		4275608	0					
ANR	4275684	Argument	path		4275608	1					
ANR	4275685	Identifier	path		4275608	0					
ANR	4275686	IfStatement	"if ( strcmp ( path , expect ) != MATCH )"		4275608	10					
ANR	4275687	Condition	"strcmp ( path , expect ) != MATCH"	158:4:5935:5963	4275608	0	True				
ANR	4275688	EqualityExpression	"strcmp ( path , expect ) != MATCH"		4275608	0		!=			
ANR	4275689	CallExpression	"strcmp ( path , expect )"		4275608	0					
ANR	4275690	Callee	strcmp		4275608	0					
ANR	4275691	Identifier	strcmp		4275608	0					
ANR	4275692	ArgumentList	path		4275608	1					
ANR	4275693	Argument	path		4275608	0					
ANR	4275694	Identifier	path		4275608	0					
ANR	4275695	Argument	expect		4275608	1					
ANR	4275696	Identifier	expect		4275608	0					
ANR	4275697	Identifier	MATCH		4275608	1					
ANR	4275698	CompoundStatement		12:35:368:368	4275608	1					
ANR	4275699	ExpressionStatement	free ( path )	159:2:5970:5980	4275608	0	True				
ANR	4275700	CallExpression	free ( path )		4275608	0					
ANR	4275701	Callee	free		4275608	0					
ANR	4275702	Identifier	free		4275608	0					
ANR	4275703	ArgumentList	path		4275608	1					
ANR	4275704	Argument	path		4275608	0					
ANR	4275705	Identifier	path		4275608	0					
ANR	4275706	ExpressionStatement	FAIL	160:2:5984:5988	4275608	1	True				
ANR	4275707	Identifier	FAIL		4275608	0					
ANR	4275708	ExpressionStatement	free ( path )	162:1:5994:6004	4275608	11	True				
ANR	4275709	CallExpression	free ( path )		4275608	0					
ANR	4275710	Callee	free		4275608	0					
ANR	4275711	Identifier	free		4275608	0					
ANR	4275712	ArgumentList	path		4275608	1					
ANR	4275713	Argument	path		4275608	0					
ANR	4275714	Identifier	path		4275608	0					
ANR	4275715	ExpressionStatement	PASS	163:1:6007:6011	4275608	12	True				
ANR	4275716	Identifier	PASS		4275608	0					
ANR	4275717	ReturnType	static bool		4275608	1					
ANR	4275718	Identifier	test_simple_path_1		4275608	2					
ANR	4275719	ParameterList			4275608	3					
ANR	4275720	CFGEntryNode	ENTRY		4275608		True				
ANR	4275721	CFGExitNode	EXIT		4275608		True				
ANR	4275722	Symbol	strcmp		4275608						
ANR	4275723	Symbol	expect		4275608						
ANR	4275724	Symbol	path		4275608						
ANR	4275725	Symbol	param		4275608						
ANR	4275726	Symbol	condor_dirname		4275608						
ANR	4275727	Symbol	MATCH		4275608						
ANR	4275728	Function	test_simple_path_2	166:0:6016:6469							
ANR	4275729	FunctionDef	test_simple_path_2 ()		4275728	0					
ANR	4275730	CompoundStatement		166:33:6049:6469	4275728	0					
ANR	4275731	ExpressionStatement	"emit_test ( ""Does a multiple character path return the currect directory?"" )"	167:1:6052:6125	4275728	0	True				
ANR	4275732	CallExpression	"emit_test ( ""Does a multiple character path return the currect directory?"" )"		4275728	0					
ANR	4275733	Callee	emit_test		4275728	0					
ANR	4275734	Identifier	emit_test		4275728	0					
ANR	4275735	ArgumentList	"""Does a multiple character path return the currect directory?"""		4275728	1					
ANR	4275736	Argument	"""Does a multiple character path return the currect directory?"""		4275728	0					
ANR	4275737	PrimaryExpression	"""Does a multiple character path return the currect directory?"""		4275728	0					
ANR	4275738	IdentifierDeclStatement	"const char * param = ""foo"" ;"	168:1:6128:6153	4275728	1	True				
ANR	4275739	IdentifierDecl	"* param = ""foo"""		4275728	0					
ANR	4275740	IdentifierDeclType	const char *		4275728	0					
ANR	4275741	Identifier	param		4275728	1					
ANR	4275742	AssignmentExpression	"* param = ""foo"""		4275728	2		=			
ANR	4275743	Identifier	param		4275728	0					
ANR	4275744	PrimaryExpression	"""foo"""		4275728	1					
ANR	4275745	IdentifierDeclStatement	"const char * expect = ""."" ;"	169:1:6156:6180	4275728	2	True				
ANR	4275746	IdentifierDecl	"* expect = ""."""		4275728	0					
ANR	4275747	IdentifierDeclType	const char *		4275728	0					
ANR	4275748	Identifier	expect		4275728	1					
ANR	4275749	AssignmentExpression	"* expect = ""."""		4275728	2		=			
ANR	4275750	Identifier	expect		4275728	0					
ANR	4275751	PrimaryExpression	"""."""		4275728	1					
ANR	4275752	ExpressionStatement	emit_input_header ( )	170:1:6183:6202	4275728	3	True				
ANR	4275753	CallExpression	emit_input_header ( )		4275728	0					
ANR	4275754	Callee	emit_input_header		4275728	0					
ANR	4275755	Identifier	emit_input_header		4275728	0					
ANR	4275756	ArgumentList			4275728	1					
ANR	4275757	ExpressionStatement	"emit_param ( ""STRING"" , param )"	171:1:6205:6232	4275728	4	True				
ANR	4275758	CallExpression	"emit_param ( ""STRING"" , param )"		4275728	0					
ANR	4275759	Callee	emit_param		4275728	0					
ANR	4275760	Identifier	emit_param		4275728	0					
ANR	4275761	ArgumentList	"""STRING"""		4275728	1					
ANR	4275762	Argument	"""STRING"""		4275728	0					
ANR	4275763	PrimaryExpression	"""STRING"""		4275728	0					
ANR	4275764	Argument	param		4275728	1					
ANR	4275765	Identifier	param		4275728	0					
ANR	4275766	ExpressionStatement	emit_output_expected_header ( )	172:1:6235:6264	4275728	5	True				
ANR	4275767	CallExpression	emit_output_expected_header ( )		4275728	0					
ANR	4275768	Callee	emit_output_expected_header		4275728	0					
ANR	4275769	Identifier	emit_output_expected_header		4275728	0					
ANR	4275770	ArgumentList			4275728	1					
ANR	4275771	ExpressionStatement	"emit_retval ( ""%s"" , expect )"	173:1:6267:6292	4275728	6	True				
ANR	4275772	CallExpression	"emit_retval ( ""%s"" , expect )"		4275728	0					
ANR	4275773	Callee	emit_retval		4275728	0					
ANR	4275774	Identifier	emit_retval		4275728	0					
ANR	4275775	ArgumentList	"""%s"""		4275728	1					
ANR	4275776	Argument	"""%s"""		4275728	0					
ANR	4275777	PrimaryExpression	"""%s"""		4275728	0					
ANR	4275778	Argument	expect		4275728	1					
ANR	4275779	Identifier	expect		4275728	0					
ANR	4275780	IdentifierDeclStatement	char * path = condor_dirname ( param ) ;	174:1:6295:6329	4275728	7	True				
ANR	4275781	IdentifierDecl	* path = condor_dirname ( param )		4275728	0					
ANR	4275782	IdentifierDeclType	char *		4275728	0					
ANR	4275783	Identifier	path		4275728	1					
ANR	4275784	AssignmentExpression	* path = condor_dirname ( param )		4275728	2		=			
ANR	4275785	Identifier	path		4275728	0					
ANR	4275786	CallExpression	condor_dirname ( param )		4275728	1					
ANR	4275787	Callee	condor_dirname		4275728	0					
ANR	4275788	Identifier	condor_dirname		4275728	0					
ANR	4275789	ArgumentList	param		4275728	1					
ANR	4275790	Argument	param		4275728	0					
ANR	4275791	Identifier	param		4275728	0					
ANR	4275792	ExpressionStatement	emit_output_actual_header ( )	175:1:6332:6359	4275728	8	True				
ANR	4275793	CallExpression	emit_output_actual_header ( )		4275728	0					
ANR	4275794	Callee	emit_output_actual_header		4275728	0					
ANR	4275795	Identifier	emit_output_actual_header		4275728	0					
ANR	4275796	ArgumentList			4275728	1					
ANR	4275797	ExpressionStatement	"emit_retval ( ""%s"" , path )"	176:1:6362:6385	4275728	9	True				
ANR	4275798	CallExpression	"emit_retval ( ""%s"" , path )"		4275728	0					
ANR	4275799	Callee	emit_retval		4275728	0					
ANR	4275800	Identifier	emit_retval		4275728	0					
ANR	4275801	ArgumentList	"""%s"""		4275728	1					
ANR	4275802	Argument	"""%s"""		4275728	0					
ANR	4275803	PrimaryExpression	"""%s"""		4275728	0					
ANR	4275804	Argument	path		4275728	1					
ANR	4275805	Identifier	path		4275728	0					
ANR	4275806	IfStatement	"if ( strcmp ( path , expect ) != MATCH )"		4275728	10					
ANR	4275807	Condition	"strcmp ( path , expect ) != MATCH"	177:4:6391:6419	4275728	0	True				
ANR	4275808	EqualityExpression	"strcmp ( path , expect ) != MATCH"		4275728	0		!=			
ANR	4275809	CallExpression	"strcmp ( path , expect )"		4275728	0					
ANR	4275810	Callee	strcmp		4275728	0					
ANR	4275811	Identifier	strcmp		4275728	0					
ANR	4275812	ArgumentList	path		4275728	1					
ANR	4275813	Argument	path		4275728	0					
ANR	4275814	Identifier	path		4275728	0					
ANR	4275815	Argument	expect		4275728	1					
ANR	4275816	Identifier	expect		4275728	0					
ANR	4275817	Identifier	MATCH		4275728	1					
ANR	4275818	CompoundStatement		12:35:372:372	4275728	1					
ANR	4275819	ExpressionStatement	free ( path )	178:2:6426:6436	4275728	0	True				
ANR	4275820	CallExpression	free ( path )		4275728	0					
ANR	4275821	Callee	free		4275728	0					
ANR	4275822	Identifier	free		4275728	0					
ANR	4275823	ArgumentList	path		4275728	1					
ANR	4275824	Argument	path		4275728	0					
ANR	4275825	Identifier	path		4275728	0					
ANR	4275826	ExpressionStatement	FAIL	179:2:6440:6444	4275728	1	True				
ANR	4275827	Identifier	FAIL		4275728	0					
ANR	4275828	ExpressionStatement	free ( path )	181:1:6450:6460	4275728	11	True				
ANR	4275829	CallExpression	free ( path )		4275728	0					
ANR	4275830	Callee	free		4275728	0					
ANR	4275831	Identifier	free		4275728	0					
ANR	4275832	ArgumentList	path		4275728	1					
ANR	4275833	Argument	path		4275728	0					
ANR	4275834	Identifier	path		4275728	0					
ANR	4275835	ExpressionStatement	PASS	182:1:6463:6467	4275728	12	True				
ANR	4275836	Identifier	PASS		4275728	0					
ANR	4275837	ReturnType	static bool		4275728	1					
ANR	4275838	Identifier	test_simple_path_2		4275728	2					
ANR	4275839	ParameterList			4275728	3					
ANR	4275840	CFGEntryNode	ENTRY		4275728		True				
ANR	4275841	CFGExitNode	EXIT		4275728		True				
ANR	4275842	Symbol	strcmp		4275728						
ANR	4275843	Symbol	expect		4275728						
ANR	4275844	Symbol	path		4275728						
ANR	4275845	Symbol	param		4275728						
ANR	4275846	Symbol	condor_dirname		4275728						
ANR	4275847	Symbol	MATCH		4275728						
ANR	4275848	Function	test_simple_directory_1	185:0:6472:6941							
ANR	4275849	FunctionDef	test_simple_directory_1 ()		4275848	0					
ANR	4275850	CompoundStatement		185:38:6510:6941	4275848	0					
ANR	4275851	ExpressionStatement	"emit_test ( ""Does a path with starting with a forward slash return a forward slash?"" )"	186:1:6513:6596	4275848	0	True				
ANR	4275852	CallExpression	"emit_test ( ""Does a path with starting with a forward slash return a forward slash?"" )"		4275848	0					
ANR	4275853	Callee	emit_test		4275848	0					
ANR	4275854	Identifier	emit_test		4275848	0					
ANR	4275855	ArgumentList	"""Does a path with starting with a forward slash return a forward slash?"""		4275848	1					
ANR	4275856	Argument	"""Does a path with starting with a forward slash return a forward slash?"""		4275848	0					
ANR	4275857	PrimaryExpression	"""Does a path with starting with a forward slash return a forward slash?"""		4275848	0					
ANR	4275858	IdentifierDeclStatement	"const char * param = ""/foo"" ;"	187:1:6599:6625	4275848	1	True				
ANR	4275859	IdentifierDecl	"* param = ""/foo"""		4275848	0					
ANR	4275860	IdentifierDeclType	const char *		4275848	0					
ANR	4275861	Identifier	param		4275848	1					
ANR	4275862	AssignmentExpression	"* param = ""/foo"""		4275848	2		=			
ANR	4275863	Identifier	param		4275848	0					
ANR	4275864	PrimaryExpression	"""/foo"""		4275848	1					
ANR	4275865	IdentifierDeclStatement	"const char * expect = ""/"" ;"	188:1:6628:6652	4275848	2	True				
ANR	4275866	IdentifierDecl	"* expect = ""/"""		4275848	0					
ANR	4275867	IdentifierDeclType	const char *		4275848	0					
ANR	4275868	Identifier	expect		4275848	1					
ANR	4275869	AssignmentExpression	"* expect = ""/"""		4275848	2		=			
ANR	4275870	Identifier	expect		4275848	0					
ANR	4275871	PrimaryExpression	"""/"""		4275848	1					
ANR	4275872	ExpressionStatement	emit_input_header ( )	189:1:6655:6674	4275848	3	True				
ANR	4275873	CallExpression	emit_input_header ( )		4275848	0					
ANR	4275874	Callee	emit_input_header		4275848	0					
ANR	4275875	Identifier	emit_input_header		4275848	0					
ANR	4275876	ArgumentList			4275848	1					
ANR	4275877	ExpressionStatement	"emit_param ( ""STRING"" , param )"	190:1:6677:6704	4275848	4	True				
ANR	4275878	CallExpression	"emit_param ( ""STRING"" , param )"		4275848	0					
ANR	4275879	Callee	emit_param		4275848	0					
ANR	4275880	Identifier	emit_param		4275848	0					
ANR	4275881	ArgumentList	"""STRING"""		4275848	1					
ANR	4275882	Argument	"""STRING"""		4275848	0					
ANR	4275883	PrimaryExpression	"""STRING"""		4275848	0					
ANR	4275884	Argument	param		4275848	1					
ANR	4275885	Identifier	param		4275848	0					
ANR	4275886	ExpressionStatement	emit_output_expected_header ( )	191:1:6707:6736	4275848	5	True				
ANR	4275887	CallExpression	emit_output_expected_header ( )		4275848	0					
ANR	4275888	Callee	emit_output_expected_header		4275848	0					
ANR	4275889	Identifier	emit_output_expected_header		4275848	0					
ANR	4275890	ArgumentList			4275848	1					
ANR	4275891	ExpressionStatement	"emit_retval ( ""%s"" , expect )"	192:1:6739:6764	4275848	6	True				
ANR	4275892	CallExpression	"emit_retval ( ""%s"" , expect )"		4275848	0					
ANR	4275893	Callee	emit_retval		4275848	0					
ANR	4275894	Identifier	emit_retval		4275848	0					
ANR	4275895	ArgumentList	"""%s"""		4275848	1					
ANR	4275896	Argument	"""%s"""		4275848	0					
ANR	4275897	PrimaryExpression	"""%s"""		4275848	0					
ANR	4275898	Argument	expect		4275848	1					
ANR	4275899	Identifier	expect		4275848	0					
ANR	4275900	IdentifierDeclStatement	char * path = condor_dirname ( param ) ;	193:1:6767:6801	4275848	7	True				
ANR	4275901	IdentifierDecl	* path = condor_dirname ( param )		4275848	0					
ANR	4275902	IdentifierDeclType	char *		4275848	0					
ANR	4275903	Identifier	path		4275848	1					
ANR	4275904	AssignmentExpression	* path = condor_dirname ( param )		4275848	2		=			
ANR	4275905	Identifier	path		4275848	0					
ANR	4275906	CallExpression	condor_dirname ( param )		4275848	1					
ANR	4275907	Callee	condor_dirname		4275848	0					
ANR	4275908	Identifier	condor_dirname		4275848	0					
ANR	4275909	ArgumentList	param		4275848	1					
ANR	4275910	Argument	param		4275848	0					
ANR	4275911	Identifier	param		4275848	0					
ANR	4275912	ExpressionStatement	emit_output_actual_header ( )	194:1:6804:6831	4275848	8	True				
ANR	4275913	CallExpression	emit_output_actual_header ( )		4275848	0					
ANR	4275914	Callee	emit_output_actual_header		4275848	0					
ANR	4275915	Identifier	emit_output_actual_header		4275848	0					
ANR	4275916	ArgumentList			4275848	1					
ANR	4275917	ExpressionStatement	"emit_retval ( ""%s"" , path )"	195:1:6834:6857	4275848	9	True				
ANR	4275918	CallExpression	"emit_retval ( ""%s"" , path )"		4275848	0					
ANR	4275919	Callee	emit_retval		4275848	0					
ANR	4275920	Identifier	emit_retval		4275848	0					
ANR	4275921	ArgumentList	"""%s"""		4275848	1					
ANR	4275922	Argument	"""%s"""		4275848	0					
ANR	4275923	PrimaryExpression	"""%s"""		4275848	0					
ANR	4275924	Argument	path		4275848	1					
ANR	4275925	Identifier	path		4275848	0					
ANR	4275926	IfStatement	"if ( strcmp ( path , expect ) != MATCH )"		4275848	10					
ANR	4275927	Condition	"strcmp ( path , expect ) != MATCH"	196:4:6863:6891	4275848	0	True				
ANR	4275928	EqualityExpression	"strcmp ( path , expect ) != MATCH"		4275848	0		!=			
ANR	4275929	CallExpression	"strcmp ( path , expect )"		4275848	0					
ANR	4275930	Callee	strcmp		4275848	0					
ANR	4275931	Identifier	strcmp		4275848	0					
ANR	4275932	ArgumentList	path		4275848	1					
ANR	4275933	Argument	path		4275848	0					
ANR	4275934	Identifier	path		4275848	0					
ANR	4275935	Argument	expect		4275848	1					
ANR	4275936	Identifier	expect		4275848	0					
ANR	4275937	Identifier	MATCH		4275848	1					
ANR	4275938	CompoundStatement		12:35:383:383	4275848	1					
ANR	4275939	ExpressionStatement	free ( path )	197:2:6898:6908	4275848	0	True				
ANR	4275940	CallExpression	free ( path )		4275848	0					
ANR	4275941	Callee	free		4275848	0					
ANR	4275942	Identifier	free		4275848	0					
ANR	4275943	ArgumentList	path		4275848	1					
ANR	4275944	Argument	path		4275848	0					
ANR	4275945	Identifier	path		4275848	0					
ANR	4275946	ExpressionStatement	FAIL	198:2:6912:6916	4275848	1	True				
ANR	4275947	Identifier	FAIL		4275848	0					
ANR	4275948	ExpressionStatement	free ( path )	200:1:6922:6932	4275848	11	True				
ANR	4275949	CallExpression	free ( path )		4275848	0					
ANR	4275950	Callee	free		4275848	0					
ANR	4275951	Identifier	free		4275848	0					
ANR	4275952	ArgumentList	path		4275848	1					
ANR	4275953	Argument	path		4275848	0					
ANR	4275954	Identifier	path		4275848	0					
ANR	4275955	ExpressionStatement	PASS	201:1:6935:6939	4275848	12	True				
ANR	4275956	Identifier	PASS		4275848	0					
ANR	4275957	ReturnType	static bool		4275848	1					
ANR	4275958	Identifier	test_simple_directory_1		4275848	2					
ANR	4275959	ParameterList			4275848	3					
ANR	4275960	CFGEntryNode	ENTRY		4275848		True				
ANR	4275961	CFGExitNode	EXIT		4275848		True				
ANR	4275962	Symbol	strcmp		4275848						
ANR	4275963	Symbol	expect		4275848						
ANR	4275964	Symbol	path		4275848						
ANR	4275965	Symbol	param		4275848						
ANR	4275966	Symbol	condor_dirname		4275848						
ANR	4275967	Symbol	MATCH		4275848						
ANR	4275968	Function	test_simple_directory_2	204:0:6944:7402							
ANR	4275969	FunctionDef	test_simple_directory_2 ()		4275968	0					
ANR	4275970	CompoundStatement		204:38:6982:7402	4275968	0					
ANR	4275971	ExpressionStatement	"emit_test ( ""Does a path starting with a backslash return a backslash?"" )"	205:1:6985:7055	4275968	0	True				
ANR	4275972	CallExpression	"emit_test ( ""Does a path starting with a backslash return a backslash?"" )"		4275968	0					
ANR	4275973	Callee	emit_test		4275968	0					
ANR	4275974	Identifier	emit_test		4275968	0					
ANR	4275975	ArgumentList	"""Does a path starting with a backslash return a backslash?"""		4275968	1					
ANR	4275976	Argument	"""Does a path starting with a backslash return a backslash?"""		4275968	0					
ANR	4275977	PrimaryExpression	"""Does a path starting with a backslash return a backslash?"""		4275968	0					
ANR	4275978	IdentifierDeclStatement	"const char * param = ""\\\\foo"" ;"	206:1:7058:7085	4275968	1	True				
ANR	4275979	IdentifierDecl	"* param = ""\\\\foo"""		4275968	0					
ANR	4275980	IdentifierDeclType	const char *		4275968	0					
ANR	4275981	Identifier	param		4275968	1					
ANR	4275982	AssignmentExpression	"* param = ""\\\\foo"""		4275968	2		=			
ANR	4275983	Identifier	param		4275968	0					
ANR	4275984	PrimaryExpression	"""\\\\foo"""		4275968	1					
ANR	4275985	IdentifierDeclStatement	"const char * expect = ""\\\\"" ;"	207:1:7088:7113	4275968	2	True				
ANR	4275986	IdentifierDecl	"* expect = ""\\\\"""		4275968	0					
ANR	4275987	IdentifierDeclType	const char *		4275968	0					
ANR	4275988	Identifier	expect		4275968	1					
ANR	4275989	AssignmentExpression	"* expect = ""\\\\"""		4275968	2		=			
ANR	4275990	Identifier	expect		4275968	0					
ANR	4275991	PrimaryExpression	"""\\\\"""		4275968	1					
ANR	4275992	ExpressionStatement	emit_input_header ( )	208:1:7116:7135	4275968	3	True				
ANR	4275993	CallExpression	emit_input_header ( )		4275968	0					
ANR	4275994	Callee	emit_input_header		4275968	0					
ANR	4275995	Identifier	emit_input_header		4275968	0					
ANR	4275996	ArgumentList			4275968	1					
ANR	4275997	ExpressionStatement	"emit_param ( ""STRING"" , param )"	209:1:7138:7165	4275968	4	True				
ANR	4275998	CallExpression	"emit_param ( ""STRING"" , param )"		4275968	0					
ANR	4275999	Callee	emit_param		4275968	0					
ANR	4276000	Identifier	emit_param		4275968	0					
ANR	4276001	ArgumentList	"""STRING"""		4275968	1					
ANR	4276002	Argument	"""STRING"""		4275968	0					
ANR	4276003	PrimaryExpression	"""STRING"""		4275968	0					
ANR	4276004	Argument	param		4275968	1					
ANR	4276005	Identifier	param		4275968	0					
ANR	4276006	ExpressionStatement	emit_output_expected_header ( )	210:1:7168:7197	4275968	5	True				
ANR	4276007	CallExpression	emit_output_expected_header ( )		4275968	0					
ANR	4276008	Callee	emit_output_expected_header		4275968	0					
ANR	4276009	Identifier	emit_output_expected_header		4275968	0					
ANR	4276010	ArgumentList			4275968	1					
ANR	4276011	ExpressionStatement	"emit_retval ( ""%s"" , expect )"	211:1:7200:7225	4275968	6	True				
ANR	4276012	CallExpression	"emit_retval ( ""%s"" , expect )"		4275968	0					
ANR	4276013	Callee	emit_retval		4275968	0					
ANR	4276014	Identifier	emit_retval		4275968	0					
ANR	4276015	ArgumentList	"""%s"""		4275968	1					
ANR	4276016	Argument	"""%s"""		4275968	0					
ANR	4276017	PrimaryExpression	"""%s"""		4275968	0					
ANR	4276018	Argument	expect		4275968	1					
ANR	4276019	Identifier	expect		4275968	0					
ANR	4276020	IdentifierDeclStatement	char * path = condor_dirname ( param ) ;	212:1:7228:7262	4275968	7	True				
ANR	4276021	IdentifierDecl	* path = condor_dirname ( param )		4275968	0					
ANR	4276022	IdentifierDeclType	char *		4275968	0					
ANR	4276023	Identifier	path		4275968	1					
ANR	4276024	AssignmentExpression	* path = condor_dirname ( param )		4275968	2		=			
ANR	4276025	Identifier	path		4275968	0					
ANR	4276026	CallExpression	condor_dirname ( param )		4275968	1					
ANR	4276027	Callee	condor_dirname		4275968	0					
ANR	4276028	Identifier	condor_dirname		4275968	0					
ANR	4276029	ArgumentList	param		4275968	1					
ANR	4276030	Argument	param		4275968	0					
ANR	4276031	Identifier	param		4275968	0					
ANR	4276032	ExpressionStatement	emit_output_actual_header ( )	213:1:7265:7292	4275968	8	True				
ANR	4276033	CallExpression	emit_output_actual_header ( )		4275968	0					
ANR	4276034	Callee	emit_output_actual_header		4275968	0					
ANR	4276035	Identifier	emit_output_actual_header		4275968	0					
ANR	4276036	ArgumentList			4275968	1					
ANR	4276037	ExpressionStatement	"emit_retval ( ""%s"" , path )"	214:1:7295:7318	4275968	9	True				
ANR	4276038	CallExpression	"emit_retval ( ""%s"" , path )"		4275968	0					
ANR	4276039	Callee	emit_retval		4275968	0					
ANR	4276040	Identifier	emit_retval		4275968	0					
ANR	4276041	ArgumentList	"""%s"""		4275968	1					
ANR	4276042	Argument	"""%s"""		4275968	0					
ANR	4276043	PrimaryExpression	"""%s"""		4275968	0					
ANR	4276044	Argument	path		4275968	1					
ANR	4276045	Identifier	path		4275968	0					
ANR	4276046	IfStatement	"if ( strcmp ( path , expect ) != MATCH )"		4275968	10					
ANR	4276047	Condition	"strcmp ( path , expect ) != MATCH"	215:4:7324:7352	4275968	0	True				
ANR	4276048	EqualityExpression	"strcmp ( path , expect ) != MATCH"		4275968	0		!=			
ANR	4276049	CallExpression	"strcmp ( path , expect )"		4275968	0					
ANR	4276050	Callee	strcmp		4275968	0					
ANR	4276051	Identifier	strcmp		4275968	0					
ANR	4276052	ArgumentList	path		4275968	1					
ANR	4276053	Argument	path		4275968	0					
ANR	4276054	Identifier	path		4275968	0					
ANR	4276055	Argument	expect		4275968	1					
ANR	4276056	Identifier	expect		4275968	0					
ANR	4276057	Identifier	MATCH		4275968	1					
ANR	4276058	CompoundStatement		12:35:372:372	4275968	1					
ANR	4276059	ExpressionStatement	free ( path )	216:2:7359:7369	4275968	0	True				
ANR	4276060	CallExpression	free ( path )		4275968	0					
ANR	4276061	Callee	free		4275968	0					
ANR	4276062	Identifier	free		4275968	0					
ANR	4276063	ArgumentList	path		4275968	1					
ANR	4276064	Argument	path		4275968	0					
ANR	4276065	Identifier	path		4275968	0					
ANR	4276066	ExpressionStatement	FAIL	217:2:7373:7377	4275968	1	True				
ANR	4276067	Identifier	FAIL		4275968	0					
ANR	4276068	ExpressionStatement	free ( path )	219:1:7383:7393	4275968	11	True				
ANR	4276069	CallExpression	free ( path )		4275968	0					
ANR	4276070	Callee	free		4275968	0					
ANR	4276071	Identifier	free		4275968	0					
ANR	4276072	ArgumentList	path		4275968	1					
ANR	4276073	Argument	path		4275968	0					
ANR	4276074	Identifier	path		4275968	0					
ANR	4276075	ExpressionStatement	PASS	220:1:7396:7400	4275968	12	True				
ANR	4276076	Identifier	PASS		4275968	0					
ANR	4276077	ReturnType	static bool		4275968	1					
ANR	4276078	Identifier	test_simple_directory_2		4275968	2					
ANR	4276079	ParameterList			4275968	3					
ANR	4276080	CFGEntryNode	ENTRY		4275968		True				
ANR	4276081	CFGExitNode	EXIT		4275968		True				
ANR	4276082	Symbol	strcmp		4275968						
ANR	4276083	Symbol	expect		4275968						
ANR	4276084	Symbol	path		4275968						
ANR	4276085	Symbol	param		4275968						
ANR	4276086	Symbol	condor_dirname		4275968						
ANR	4276087	Symbol	MATCH		4275968						
ANR	4276088	Function	test_directory_and_file_1	223:0:7405:7882							
ANR	4276089	FunctionDef	test_directory_and_file_1 ()		4276088	0					
ANR	4276090	CompoundStatement		223:40:7445:7882	4276088	0					
ANR	4276091	ExpressionStatement	"emit_test ( ""Does a path with both a directory and file return the parent directory?"" )"	224:1:7448:7532	4276088	0	True				
ANR	4276092	CallExpression	"emit_test ( ""Does a path with both a directory and file return the parent directory?"" )"		4276088	0					
ANR	4276093	Callee	emit_test		4276088	0					
ANR	4276094	Identifier	emit_test		4276088	0					
ANR	4276095	ArgumentList	"""Does a path with both a directory and file return the parent directory?"""		4276088	1					
ANR	4276096	Argument	"""Does a path with both a directory and file return the parent directory?"""		4276088	0					
ANR	4276097	PrimaryExpression	"""Does a path with both a directory and file return the parent directory?"""		4276088	0					
ANR	4276098	IdentifierDeclStatement	"const char * param = ""foo/bar"" ;"	225:1:7535:7564	4276088	1	True				
ANR	4276099	IdentifierDecl	"* param = ""foo/bar"""		4276088	0					
ANR	4276100	IdentifierDeclType	const char *		4276088	0					
ANR	4276101	Identifier	param		4276088	1					
ANR	4276102	AssignmentExpression	"* param = ""foo/bar"""		4276088	2		=			
ANR	4276103	Identifier	param		4276088	0					
ANR	4276104	PrimaryExpression	"""foo/bar"""		4276088	1					
ANR	4276105	IdentifierDeclStatement	"const char * expect = ""foo"" ;"	226:1:7567:7593	4276088	2	True				
ANR	4276106	IdentifierDecl	"* expect = ""foo"""		4276088	0					
ANR	4276107	IdentifierDeclType	const char *		4276088	0					
ANR	4276108	Identifier	expect		4276088	1					
ANR	4276109	AssignmentExpression	"* expect = ""foo"""		4276088	2		=			
ANR	4276110	Identifier	expect		4276088	0					
ANR	4276111	PrimaryExpression	"""foo"""		4276088	1					
ANR	4276112	ExpressionStatement	emit_input_header ( )	227:1:7596:7615	4276088	3	True				
ANR	4276113	CallExpression	emit_input_header ( )		4276088	0					
ANR	4276114	Callee	emit_input_header		4276088	0					
ANR	4276115	Identifier	emit_input_header		4276088	0					
ANR	4276116	ArgumentList			4276088	1					
ANR	4276117	ExpressionStatement	"emit_param ( ""STRING"" , param )"	228:1:7618:7645	4276088	4	True				
ANR	4276118	CallExpression	"emit_param ( ""STRING"" , param )"		4276088	0					
ANR	4276119	Callee	emit_param		4276088	0					
ANR	4276120	Identifier	emit_param		4276088	0					
ANR	4276121	ArgumentList	"""STRING"""		4276088	1					
ANR	4276122	Argument	"""STRING"""		4276088	0					
ANR	4276123	PrimaryExpression	"""STRING"""		4276088	0					
ANR	4276124	Argument	param		4276088	1					
ANR	4276125	Identifier	param		4276088	0					
ANR	4276126	ExpressionStatement	emit_output_expected_header ( )	229:1:7648:7677	4276088	5	True				
ANR	4276127	CallExpression	emit_output_expected_header ( )		4276088	0					
ANR	4276128	Callee	emit_output_expected_header		4276088	0					
ANR	4276129	Identifier	emit_output_expected_header		4276088	0					
ANR	4276130	ArgumentList			4276088	1					
ANR	4276131	ExpressionStatement	"emit_retval ( ""%s"" , expect )"	230:1:7680:7705	4276088	6	True				
ANR	4276132	CallExpression	"emit_retval ( ""%s"" , expect )"		4276088	0					
ANR	4276133	Callee	emit_retval		4276088	0					
ANR	4276134	Identifier	emit_retval		4276088	0					
ANR	4276135	ArgumentList	"""%s"""		4276088	1					
ANR	4276136	Argument	"""%s"""		4276088	0					
ANR	4276137	PrimaryExpression	"""%s"""		4276088	0					
ANR	4276138	Argument	expect		4276088	1					
ANR	4276139	Identifier	expect		4276088	0					
ANR	4276140	IdentifierDeclStatement	char * path = condor_dirname ( param ) ;	231:1:7708:7742	4276088	7	True				
ANR	4276141	IdentifierDecl	* path = condor_dirname ( param )		4276088	0					
ANR	4276142	IdentifierDeclType	char *		4276088	0					
ANR	4276143	Identifier	path		4276088	1					
ANR	4276144	AssignmentExpression	* path = condor_dirname ( param )		4276088	2		=			
ANR	4276145	Identifier	path		4276088	0					
ANR	4276146	CallExpression	condor_dirname ( param )		4276088	1					
ANR	4276147	Callee	condor_dirname		4276088	0					
ANR	4276148	Identifier	condor_dirname		4276088	0					
ANR	4276149	ArgumentList	param		4276088	1					
ANR	4276150	Argument	param		4276088	0					
ANR	4276151	Identifier	param		4276088	0					
ANR	4276152	ExpressionStatement	emit_output_actual_header ( )	232:1:7745:7772	4276088	8	True				
ANR	4276153	CallExpression	emit_output_actual_header ( )		4276088	0					
ANR	4276154	Callee	emit_output_actual_header		4276088	0					
ANR	4276155	Identifier	emit_output_actual_header		4276088	0					
ANR	4276156	ArgumentList			4276088	1					
ANR	4276157	ExpressionStatement	"emit_retval ( ""%s"" , path )"	233:1:7775:7798	4276088	9	True				
ANR	4276158	CallExpression	"emit_retval ( ""%s"" , path )"		4276088	0					
ANR	4276159	Callee	emit_retval		4276088	0					
ANR	4276160	Identifier	emit_retval		4276088	0					
ANR	4276161	ArgumentList	"""%s"""		4276088	1					
ANR	4276162	Argument	"""%s"""		4276088	0					
ANR	4276163	PrimaryExpression	"""%s"""		4276088	0					
ANR	4276164	Argument	path		4276088	1					
ANR	4276165	Identifier	path		4276088	0					
ANR	4276166	IfStatement	"if ( strcmp ( path , expect ) != MATCH )"		4276088	10					
ANR	4276167	Condition	"strcmp ( path , expect ) != MATCH"	234:4:7804:7832	4276088	0	True				
ANR	4276168	EqualityExpression	"strcmp ( path , expect ) != MATCH"		4276088	0		!=			
ANR	4276169	CallExpression	"strcmp ( path , expect )"		4276088	0					
ANR	4276170	Callee	strcmp		4276088	0					
ANR	4276171	Identifier	strcmp		4276088	0					
ANR	4276172	ArgumentList	path		4276088	1					
ANR	4276173	Argument	path		4276088	0					
ANR	4276174	Identifier	path		4276088	0					
ANR	4276175	Argument	expect		4276088	1					
ANR	4276176	Identifier	expect		4276088	0					
ANR	4276177	Identifier	MATCH		4276088	1					
ANR	4276178	CompoundStatement		12:35:389:389	4276088	1					
ANR	4276179	ExpressionStatement	free ( path )	235:2:7839:7849	4276088	0	True				
ANR	4276180	CallExpression	free ( path )		4276088	0					
ANR	4276181	Callee	free		4276088	0					
ANR	4276182	Identifier	free		4276088	0					
ANR	4276183	ArgumentList	path		4276088	1					
ANR	4276184	Argument	path		4276088	0					
ANR	4276185	Identifier	path		4276088	0					
ANR	4276186	ExpressionStatement	FAIL	236:2:7853:7857	4276088	1	True				
ANR	4276187	Identifier	FAIL		4276088	0					
ANR	4276188	ExpressionStatement	free ( path )	238:1:7863:7873	4276088	11	True				
ANR	4276189	CallExpression	free ( path )		4276088	0					
ANR	4276190	Callee	free		4276088	0					
ANR	4276191	Identifier	free		4276088	0					
ANR	4276192	ArgumentList	path		4276088	1					
ANR	4276193	Argument	path		4276088	0					
ANR	4276194	Identifier	path		4276088	0					
ANR	4276195	ExpressionStatement	PASS	239:1:7876:7880	4276088	12	True				
ANR	4276196	Identifier	PASS		4276088	0					
ANR	4276197	ReturnType	static bool		4276088	1					
ANR	4276198	Identifier	test_directory_and_file_1		4276088	2					
ANR	4276199	ParameterList			4276088	3					
ANR	4276200	CFGEntryNode	ENTRY		4276088		True				
ANR	4276201	CFGExitNode	EXIT		4276088		True				
ANR	4276202	Symbol	strcmp		4276088						
ANR	4276203	Symbol	expect		4276088						
ANR	4276204	Symbol	path		4276088						
ANR	4276205	Symbol	param		4276088						
ANR	4276206	Symbol	condor_dirname		4276088						
ANR	4276207	Symbol	MATCH		4276088						
ANR	4276208	Function	test_directory_and_file_2	242:0:7885:8386							
ANR	4276209	FunctionDef	test_directory_and_file_2 ()		4276208	0					
ANR	4276210	CompoundStatement		242:40:7925:8386	4276208	0					
ANR	4276211	ExpressionStatement	"emit_test ( ""Does a path with both a directory and file in the root directory return the parent directory?"" )"	243:1:7928:8034	4276208	0	True				
ANR	4276212	CallExpression	"emit_test ( ""Does a path with both a directory and file in the root directory return the parent directory?"" )"		4276208	0					
ANR	4276213	Callee	emit_test		4276208	0					
ANR	4276214	Identifier	emit_test		4276208	0					
ANR	4276215	ArgumentList	"""Does a path with both a directory and file in the root directory return the parent directory?"""		4276208	1					
ANR	4276216	Argument	"""Does a path with both a directory and file in the root directory return the parent directory?"""		4276208	0					
ANR	4276217	PrimaryExpression	"""Does a path with both a directory and file in the root directory return the parent directory?"""		4276208	0					
ANR	4276218	IdentifierDeclStatement	"const char * param = ""/foo/bar"" ;"	244:1:8037:8067	4276208	1	True				
ANR	4276219	IdentifierDecl	"* param = ""/foo/bar"""		4276208	0					
ANR	4276220	IdentifierDeclType	const char *		4276208	0					
ANR	4276221	Identifier	param		4276208	1					
ANR	4276222	AssignmentExpression	"* param = ""/foo/bar"""		4276208	2		=			
ANR	4276223	Identifier	param		4276208	0					
ANR	4276224	PrimaryExpression	"""/foo/bar"""		4276208	1					
ANR	4276225	IdentifierDeclStatement	"const char * expect = ""/foo"" ;"	245:1:8070:8097	4276208	2	True				
ANR	4276226	IdentifierDecl	"* expect = ""/foo"""		4276208	0					
ANR	4276227	IdentifierDeclType	const char *		4276208	0					
ANR	4276228	Identifier	expect		4276208	1					
ANR	4276229	AssignmentExpression	"* expect = ""/foo"""		4276208	2		=			
ANR	4276230	Identifier	expect		4276208	0					
ANR	4276231	PrimaryExpression	"""/foo"""		4276208	1					
ANR	4276232	ExpressionStatement	emit_input_header ( )	246:1:8100:8119	4276208	3	True				
ANR	4276233	CallExpression	emit_input_header ( )		4276208	0					
ANR	4276234	Callee	emit_input_header		4276208	0					
ANR	4276235	Identifier	emit_input_header		4276208	0					
ANR	4276236	ArgumentList			4276208	1					
ANR	4276237	ExpressionStatement	"emit_param ( ""STRING"" , param )"	247:1:8122:8149	4276208	4	True				
ANR	4276238	CallExpression	"emit_param ( ""STRING"" , param )"		4276208	0					
ANR	4276239	Callee	emit_param		4276208	0					
ANR	4276240	Identifier	emit_param		4276208	0					
ANR	4276241	ArgumentList	"""STRING"""		4276208	1					
ANR	4276242	Argument	"""STRING"""		4276208	0					
ANR	4276243	PrimaryExpression	"""STRING"""		4276208	0					
ANR	4276244	Argument	param		4276208	1					
ANR	4276245	Identifier	param		4276208	0					
ANR	4276246	ExpressionStatement	emit_output_expected_header ( )	248:1:8152:8181	4276208	5	True				
ANR	4276247	CallExpression	emit_output_expected_header ( )		4276208	0					
ANR	4276248	Callee	emit_output_expected_header		4276208	0					
ANR	4276249	Identifier	emit_output_expected_header		4276208	0					
ANR	4276250	ArgumentList			4276208	1					
ANR	4276251	ExpressionStatement	"emit_retval ( ""%s"" , expect )"	249:1:8184:8209	4276208	6	True				
ANR	4276252	CallExpression	"emit_retval ( ""%s"" , expect )"		4276208	0					
ANR	4276253	Callee	emit_retval		4276208	0					
ANR	4276254	Identifier	emit_retval		4276208	0					
ANR	4276255	ArgumentList	"""%s"""		4276208	1					
ANR	4276256	Argument	"""%s"""		4276208	0					
ANR	4276257	PrimaryExpression	"""%s"""		4276208	0					
ANR	4276258	Argument	expect		4276208	1					
ANR	4276259	Identifier	expect		4276208	0					
ANR	4276260	IdentifierDeclStatement	char * path = condor_dirname ( param ) ;	250:1:8212:8246	4276208	7	True				
ANR	4276261	IdentifierDecl	* path = condor_dirname ( param )		4276208	0					
ANR	4276262	IdentifierDeclType	char *		4276208	0					
ANR	4276263	Identifier	path		4276208	1					
ANR	4276264	AssignmentExpression	* path = condor_dirname ( param )		4276208	2		=			
ANR	4276265	Identifier	path		4276208	0					
ANR	4276266	CallExpression	condor_dirname ( param )		4276208	1					
ANR	4276267	Callee	condor_dirname		4276208	0					
ANR	4276268	Identifier	condor_dirname		4276208	0					
ANR	4276269	ArgumentList	param		4276208	1					
ANR	4276270	Argument	param		4276208	0					
ANR	4276271	Identifier	param		4276208	0					
ANR	4276272	ExpressionStatement	emit_output_actual_header ( )	251:1:8249:8276	4276208	8	True				
ANR	4276273	CallExpression	emit_output_actual_header ( )		4276208	0					
ANR	4276274	Callee	emit_output_actual_header		4276208	0					
ANR	4276275	Identifier	emit_output_actual_header		4276208	0					
ANR	4276276	ArgumentList			4276208	1					
ANR	4276277	ExpressionStatement	"emit_retval ( ""%s"" , path )"	252:1:8279:8302	4276208	9	True				
ANR	4276278	CallExpression	"emit_retval ( ""%s"" , path )"		4276208	0					
ANR	4276279	Callee	emit_retval		4276208	0					
ANR	4276280	Identifier	emit_retval		4276208	0					
ANR	4276281	ArgumentList	"""%s"""		4276208	1					
ANR	4276282	Argument	"""%s"""		4276208	0					
ANR	4276283	PrimaryExpression	"""%s"""		4276208	0					
ANR	4276284	Argument	path		4276208	1					
ANR	4276285	Identifier	path		4276208	0					
ANR	4276286	IfStatement	"if ( strcmp ( path , expect ) != MATCH )"		4276208	10					
ANR	4276287	Condition	"strcmp ( path , expect ) != MATCH"	253:4:8308:8336	4276208	0	True				
ANR	4276288	EqualityExpression	"strcmp ( path , expect ) != MATCH"		4276208	0		!=			
ANR	4276289	CallExpression	"strcmp ( path , expect )"		4276208	0					
ANR	4276290	Callee	strcmp		4276208	0					
ANR	4276291	Identifier	strcmp		4276208	0					
ANR	4276292	ArgumentList	path		4276208	1					
ANR	4276293	Argument	path		4276208	0					
ANR	4276294	Identifier	path		4276208	0					
ANR	4276295	Argument	expect		4276208	1					
ANR	4276296	Identifier	expect		4276208	0					
ANR	4276297	Identifier	MATCH		4276208	1					
ANR	4276298	CompoundStatement		12:35:413:413	4276208	1					
ANR	4276299	ExpressionStatement	free ( path )	254:2:8343:8353	4276208	0	True				
ANR	4276300	CallExpression	free ( path )		4276208	0					
ANR	4276301	Callee	free		4276208	0					
ANR	4276302	Identifier	free		4276208	0					
ANR	4276303	ArgumentList	path		4276208	1					
ANR	4276304	Argument	path		4276208	0					
ANR	4276305	Identifier	path		4276208	0					
ANR	4276306	ExpressionStatement	FAIL	255:2:8357:8361	4276208	1	True				
ANR	4276307	Identifier	FAIL		4276208	0					
ANR	4276308	ExpressionStatement	free ( path )	257:1:8367:8377	4276208	11	True				
ANR	4276309	CallExpression	free ( path )		4276208	0					
ANR	4276310	Callee	free		4276208	0					
ANR	4276311	Identifier	free		4276208	0					
ANR	4276312	ArgumentList	path		4276208	1					
ANR	4276313	Argument	path		4276208	0					
ANR	4276314	Identifier	path		4276208	0					
ANR	4276315	ExpressionStatement	PASS	258:1:8380:8384	4276208	12	True				
ANR	4276316	Identifier	PASS		4276208	0					
ANR	4276317	ReturnType	static bool		4276208	1					
ANR	4276318	Identifier	test_directory_and_file_2		4276208	2					
ANR	4276319	ParameterList			4276208	3					
ANR	4276320	CFGEntryNode	ENTRY		4276208		True				
ANR	4276321	CFGExitNode	EXIT		4276208		True				
ANR	4276322	Symbol	strcmp		4276208						
ANR	4276323	Symbol	expect		4276208						
ANR	4276324	Symbol	path		4276208						
ANR	4276325	Symbol	param		4276208						
ANR	4276326	Symbol	condor_dirname		4276208						
ANR	4276327	Symbol	MATCH		4276208						
ANR	4276328	Function	test_root_directory	261:0:8389:8873							
ANR	4276329	FunctionDef	test_root_directory ()		4276328	0					
ANR	4276330	CompoundStatement		261:34:8423:8873	4276328	0					
ANR	4276331	ExpressionStatement	"emit_test ( ""Does a path with a backslash in the root directory return the parent directory?"" )"	262:1:8426:8518	4276328	0	True				
ANR	4276332	CallExpression	"emit_test ( ""Does a path with a backslash in the root directory return the parent directory?"" )"		4276328	0					
ANR	4276333	Callee	emit_test		4276328	0					
ANR	4276334	Identifier	emit_test		4276328	0					
ANR	4276335	ArgumentList	"""Does a path with a backslash in the root directory return the parent directory?"""		4276328	1					
ANR	4276336	Argument	"""Does a path with a backslash in the root directory return the parent directory?"""		4276328	0					
ANR	4276337	PrimaryExpression	"""Does a path with a backslash in the root directory return the parent directory?"""		4276328	0					
ANR	4276338	IdentifierDeclStatement	"const char * param = ""\\\\foo\\\\bar"" ;"	263:1:8521:8553	4276328	1	True				
ANR	4276339	IdentifierDecl	"* param = ""\\\\foo\\\\bar"""		4276328	0					
ANR	4276340	IdentifierDeclType	const char *		4276328	0					
ANR	4276341	Identifier	param		4276328	1					
ANR	4276342	AssignmentExpression	"* param = ""\\\\foo\\\\bar"""		4276328	2		=			
ANR	4276343	Identifier	param		4276328	0					
ANR	4276344	PrimaryExpression	"""\\\\foo\\\\bar"""		4276328	1					
ANR	4276345	IdentifierDeclStatement	"const char * expect = ""\\\\foo"" ;"	264:1:8556:8584	4276328	2	True				
ANR	4276346	IdentifierDecl	"* expect = ""\\\\foo"""		4276328	0					
ANR	4276347	IdentifierDeclType	const char *		4276328	0					
ANR	4276348	Identifier	expect		4276328	1					
ANR	4276349	AssignmentExpression	"* expect = ""\\\\foo"""		4276328	2		=			
ANR	4276350	Identifier	expect		4276328	0					
ANR	4276351	PrimaryExpression	"""\\\\foo"""		4276328	1					
ANR	4276352	ExpressionStatement	emit_input_header ( )	265:1:8587:8606	4276328	3	True				
ANR	4276353	CallExpression	emit_input_header ( )		4276328	0					
ANR	4276354	Callee	emit_input_header		4276328	0					
ANR	4276355	Identifier	emit_input_header		4276328	0					
ANR	4276356	ArgumentList			4276328	1					
ANR	4276357	ExpressionStatement	"emit_param ( ""STRING"" , param )"	266:1:8609:8636	4276328	4	True				
ANR	4276358	CallExpression	"emit_param ( ""STRING"" , param )"		4276328	0					
ANR	4276359	Callee	emit_param		4276328	0					
ANR	4276360	Identifier	emit_param		4276328	0					
ANR	4276361	ArgumentList	"""STRING"""		4276328	1					
ANR	4276362	Argument	"""STRING"""		4276328	0					
ANR	4276363	PrimaryExpression	"""STRING"""		4276328	0					
ANR	4276364	Argument	param		4276328	1					
ANR	4276365	Identifier	param		4276328	0					
ANR	4276366	ExpressionStatement	emit_output_expected_header ( )	267:1:8639:8668	4276328	5	True				
ANR	4276367	CallExpression	emit_output_expected_header ( )		4276328	0					
ANR	4276368	Callee	emit_output_expected_header		4276328	0					
ANR	4276369	Identifier	emit_output_expected_header		4276328	0					
ANR	4276370	ArgumentList			4276328	1					
ANR	4276371	ExpressionStatement	"emit_retval ( ""%s"" , expect )"	268:1:8671:8696	4276328	6	True				
ANR	4276372	CallExpression	"emit_retval ( ""%s"" , expect )"		4276328	0					
ANR	4276373	Callee	emit_retval		4276328	0					
ANR	4276374	Identifier	emit_retval		4276328	0					
ANR	4276375	ArgumentList	"""%s"""		4276328	1					
ANR	4276376	Argument	"""%s"""		4276328	0					
ANR	4276377	PrimaryExpression	"""%s"""		4276328	0					
ANR	4276378	Argument	expect		4276328	1					
ANR	4276379	Identifier	expect		4276328	0					
ANR	4276380	IdentifierDeclStatement	char * path = condor_dirname ( param ) ;	269:1:8699:8733	4276328	7	True				
ANR	4276381	IdentifierDecl	* path = condor_dirname ( param )		4276328	0					
ANR	4276382	IdentifierDeclType	char *		4276328	0					
ANR	4276383	Identifier	path		4276328	1					
ANR	4276384	AssignmentExpression	* path = condor_dirname ( param )		4276328	2		=			
ANR	4276385	Identifier	path		4276328	0					
ANR	4276386	CallExpression	condor_dirname ( param )		4276328	1					
ANR	4276387	Callee	condor_dirname		4276328	0					
ANR	4276388	Identifier	condor_dirname		4276328	0					
ANR	4276389	ArgumentList	param		4276328	1					
ANR	4276390	Argument	param		4276328	0					
ANR	4276391	Identifier	param		4276328	0					
ANR	4276392	ExpressionStatement	emit_output_actual_header ( )	270:1:8736:8763	4276328	8	True				
ANR	4276393	CallExpression	emit_output_actual_header ( )		4276328	0					
ANR	4276394	Callee	emit_output_actual_header		4276328	0					
ANR	4276395	Identifier	emit_output_actual_header		4276328	0					
ANR	4276396	ArgumentList			4276328	1					
ANR	4276397	ExpressionStatement	"emit_retval ( ""%s"" , path )"	271:1:8766:8789	4276328	9	True				
ANR	4276398	CallExpression	"emit_retval ( ""%s"" , path )"		4276328	0					
ANR	4276399	Callee	emit_retval		4276328	0					
ANR	4276400	Identifier	emit_retval		4276328	0					
ANR	4276401	ArgumentList	"""%s"""		4276328	1					
ANR	4276402	Argument	"""%s"""		4276328	0					
ANR	4276403	PrimaryExpression	"""%s"""		4276328	0					
ANR	4276404	Argument	path		4276328	1					
ANR	4276405	Identifier	path		4276328	0					
ANR	4276406	IfStatement	"if ( strcmp ( path , expect ) != MATCH )"		4276328	10					
ANR	4276407	Condition	"strcmp ( path , expect ) != MATCH"	272:4:8795:8823	4276328	0	True				
ANR	4276408	EqualityExpression	"strcmp ( path , expect ) != MATCH"		4276328	0		!=			
ANR	4276409	CallExpression	"strcmp ( path , expect )"		4276328	0					
ANR	4276410	Callee	strcmp		4276328	0					
ANR	4276411	Identifier	strcmp		4276328	0					
ANR	4276412	ArgumentList	path		4276328	1					
ANR	4276413	Argument	path		4276328	0					
ANR	4276414	Identifier	path		4276328	0					
ANR	4276415	Argument	expect		4276328	1					
ANR	4276416	Identifier	expect		4276328	0					
ANR	4276417	Identifier	MATCH		4276328	1					
ANR	4276418	CompoundStatement		12:35:402:402	4276328	1					
ANR	4276419	ExpressionStatement	free ( path )	273:2:8830:8840	4276328	0	True				
ANR	4276420	CallExpression	free ( path )		4276328	0					
ANR	4276421	Callee	free		4276328	0					
ANR	4276422	Identifier	free		4276328	0					
ANR	4276423	ArgumentList	path		4276328	1					
ANR	4276424	Argument	path		4276328	0					
ANR	4276425	Identifier	path		4276328	0					
ANR	4276426	ExpressionStatement	FAIL	274:2:8844:8848	4276328	1	True				
ANR	4276427	Identifier	FAIL		4276328	0					
ANR	4276428	ExpressionStatement	free ( path )	276:1:8854:8864	4276328	11	True				
ANR	4276429	CallExpression	free ( path )		4276328	0					
ANR	4276430	Callee	free		4276328	0					
ANR	4276431	Identifier	free		4276328	0					
ANR	4276432	ArgumentList	path		4276328	1					
ANR	4276433	Argument	path		4276328	0					
ANR	4276434	Identifier	path		4276328	0					
ANR	4276435	ExpressionStatement	PASS	277:1:8867:8871	4276328	12	True				
ANR	4276436	Identifier	PASS		4276328	0					
ANR	4276437	ReturnType	static bool		4276328	1					
ANR	4276438	Identifier	test_root_directory		4276328	2					
ANR	4276439	ParameterList			4276328	3					
ANR	4276440	CFGEntryNode	ENTRY		4276328		True				
ANR	4276441	CFGExitNode	EXIT		4276328		True				
ANR	4276442	Symbol	strcmp		4276328						
ANR	4276443	Symbol	expect		4276328						
ANR	4276444	Symbol	path		4276328						
ANR	4276445	Symbol	param		4276328						
ANR	4276446	Symbol	condor_dirname		4276328						
ANR	4276447	Symbol	MATCH		4276328						
ANR	4276448	Function	test_directory_and_directory	280:0:8876:9356							
ANR	4276449	FunctionDef	test_directory_and_directory ()		4276448	0					
ANR	4276450	CompoundStatement		280:43:8919:9356	4276448	0					
ANR	4276451	ExpressionStatement	"emit_test ( ""Does a path with two directories return the full parent directory?"" )"	281:1:8922:9001	4276448	0	True				
ANR	4276452	CallExpression	"emit_test ( ""Does a path with two directories return the full parent directory?"" )"		4276448	0					
ANR	4276453	Callee	emit_test		4276448	0					
ANR	4276454	Identifier	emit_test		4276448	0					
ANR	4276455	ArgumentList	"""Does a path with two directories return the full parent directory?"""		4276448	1					
ANR	4276456	Argument	"""Does a path with two directories return the full parent directory?"""		4276448	0					
ANR	4276457	PrimaryExpression	"""Does a path with two directories return the full parent directory?"""		4276448	0					
ANR	4276458	IdentifierDeclStatement	"const char * param = ""foo/bar/"" ;"	282:1:9004:9034	4276448	1	True				
ANR	4276459	IdentifierDecl	"* param = ""foo/bar/"""		4276448	0					
ANR	4276460	IdentifierDeclType	const char *		4276448	0					
ANR	4276461	Identifier	param		4276448	1					
ANR	4276462	AssignmentExpression	"* param = ""foo/bar/"""		4276448	2		=			
ANR	4276463	Identifier	param		4276448	0					
ANR	4276464	PrimaryExpression	"""foo/bar/"""		4276448	1					
ANR	4276465	IdentifierDeclStatement	"const char * expect = ""foo/bar"" ;"	283:1:9037:9067	4276448	2	True				
ANR	4276466	IdentifierDecl	"* expect = ""foo/bar"""		4276448	0					
ANR	4276467	IdentifierDeclType	const char *		4276448	0					
ANR	4276468	Identifier	expect		4276448	1					
ANR	4276469	AssignmentExpression	"* expect = ""foo/bar"""		4276448	2		=			
ANR	4276470	Identifier	expect		4276448	0					
ANR	4276471	PrimaryExpression	"""foo/bar"""		4276448	1					
ANR	4276472	ExpressionStatement	emit_input_header ( )	284:1:9070:9089	4276448	3	True				
ANR	4276473	CallExpression	emit_input_header ( )		4276448	0					
ANR	4276474	Callee	emit_input_header		4276448	0					
ANR	4276475	Identifier	emit_input_header		4276448	0					
ANR	4276476	ArgumentList			4276448	1					
ANR	4276477	ExpressionStatement	"emit_param ( ""STRING"" , param )"	285:1:9092:9119	4276448	4	True				
ANR	4276478	CallExpression	"emit_param ( ""STRING"" , param )"		4276448	0					
ANR	4276479	Callee	emit_param		4276448	0					
ANR	4276480	Identifier	emit_param		4276448	0					
ANR	4276481	ArgumentList	"""STRING"""		4276448	1					
ANR	4276482	Argument	"""STRING"""		4276448	0					
ANR	4276483	PrimaryExpression	"""STRING"""		4276448	0					
ANR	4276484	Argument	param		4276448	1					
ANR	4276485	Identifier	param		4276448	0					
ANR	4276486	ExpressionStatement	emit_output_expected_header ( )	286:1:9122:9151	4276448	5	True				
ANR	4276487	CallExpression	emit_output_expected_header ( )		4276448	0					
ANR	4276488	Callee	emit_output_expected_header		4276448	0					
ANR	4276489	Identifier	emit_output_expected_header		4276448	0					
ANR	4276490	ArgumentList			4276448	1					
ANR	4276491	ExpressionStatement	"emit_retval ( ""%s"" , expect )"	287:1:9154:9179	4276448	6	True				
ANR	4276492	CallExpression	"emit_retval ( ""%s"" , expect )"		4276448	0					
ANR	4276493	Callee	emit_retval		4276448	0					
ANR	4276494	Identifier	emit_retval		4276448	0					
ANR	4276495	ArgumentList	"""%s"""		4276448	1					
ANR	4276496	Argument	"""%s"""		4276448	0					
ANR	4276497	PrimaryExpression	"""%s"""		4276448	0					
ANR	4276498	Argument	expect		4276448	1					
ANR	4276499	Identifier	expect		4276448	0					
ANR	4276500	IdentifierDeclStatement	char * path = condor_dirname ( param ) ;	288:1:9182:9216	4276448	7	True				
ANR	4276501	IdentifierDecl	* path = condor_dirname ( param )		4276448	0					
ANR	4276502	IdentifierDeclType	char *		4276448	0					
ANR	4276503	Identifier	path		4276448	1					
ANR	4276504	AssignmentExpression	* path = condor_dirname ( param )		4276448	2		=			
ANR	4276505	Identifier	path		4276448	0					
ANR	4276506	CallExpression	condor_dirname ( param )		4276448	1					
ANR	4276507	Callee	condor_dirname		4276448	0					
ANR	4276508	Identifier	condor_dirname		4276448	0					
ANR	4276509	ArgumentList	param		4276448	1					
ANR	4276510	Argument	param		4276448	0					
ANR	4276511	Identifier	param		4276448	0					
ANR	4276512	ExpressionStatement	emit_output_actual_header ( )	289:1:9219:9246	4276448	8	True				
ANR	4276513	CallExpression	emit_output_actual_header ( )		4276448	0					
ANR	4276514	Callee	emit_output_actual_header		4276448	0					
ANR	4276515	Identifier	emit_output_actual_header		4276448	0					
ANR	4276516	ArgumentList			4276448	1					
ANR	4276517	ExpressionStatement	"emit_retval ( ""%s"" , path )"	290:1:9249:9272	4276448	9	True				
ANR	4276518	CallExpression	"emit_retval ( ""%s"" , path )"		4276448	0					
ANR	4276519	Callee	emit_retval		4276448	0					
ANR	4276520	Identifier	emit_retval		4276448	0					
ANR	4276521	ArgumentList	"""%s"""		4276448	1					
ANR	4276522	Argument	"""%s"""		4276448	0					
ANR	4276523	PrimaryExpression	"""%s"""		4276448	0					
ANR	4276524	Argument	path		4276448	1					
ANR	4276525	Identifier	path		4276448	0					
ANR	4276526	IfStatement	"if ( strcmp ( path , expect ) != MATCH )"		4276448	10					
ANR	4276527	Condition	"strcmp ( path , expect ) != MATCH"	291:4:9278:9306	4276448	0	True				
ANR	4276528	EqualityExpression	"strcmp ( path , expect ) != MATCH"		4276448	0		!=			
ANR	4276529	CallExpression	"strcmp ( path , expect )"		4276448	0					
ANR	4276530	Callee	strcmp		4276448	0					
ANR	4276531	Identifier	strcmp		4276448	0					
ANR	4276532	ArgumentList	path		4276448	1					
ANR	4276533	Argument	path		4276448	0					
ANR	4276534	Identifier	path		4276448	0					
ANR	4276535	Argument	expect		4276448	1					
ANR	4276536	Identifier	expect		4276448	0					
ANR	4276537	Identifier	MATCH		4276448	1					
ANR	4276538	CompoundStatement		12:35:389:389	4276448	1					
ANR	4276539	ExpressionStatement	free ( path )	292:2:9313:9323	4276448	0	True				
ANR	4276540	CallExpression	free ( path )		4276448	0					
ANR	4276541	Callee	free		4276448	0					
ANR	4276542	Identifier	free		4276448	0					
ANR	4276543	ArgumentList	path		4276448	1					
ANR	4276544	Argument	path		4276448	0					
ANR	4276545	Identifier	path		4276448	0					
ANR	4276546	ExpressionStatement	FAIL	293:2:9327:9331	4276448	1	True				
ANR	4276547	Identifier	FAIL		4276448	0					
ANR	4276548	ExpressionStatement	free ( path )	295:1:9337:9347	4276448	11	True				
ANR	4276549	CallExpression	free ( path )		4276448	0					
ANR	4276550	Callee	free		4276448	0					
ANR	4276551	Identifier	free		4276448	0					
ANR	4276552	ArgumentList	path		4276448	1					
ANR	4276553	Argument	path		4276448	0					
ANR	4276554	Identifier	path		4276448	0					
ANR	4276555	ExpressionStatement	PASS	296:1:9350:9354	4276448	12	True				
ANR	4276556	Identifier	PASS		4276448	0					
ANR	4276557	ReturnType	static bool		4276448	1					
ANR	4276558	Identifier	test_directory_and_directory		4276448	2					
ANR	4276559	ParameterList			4276448	3					
ANR	4276560	CFGEntryNode	ENTRY		4276448		True				
ANR	4276561	CFGExitNode	EXIT		4276448		True				
ANR	4276562	Symbol	strcmp		4276448						
ANR	4276563	Symbol	expect		4276448						
ANR	4276564	Symbol	path		4276448						
ANR	4276565	Symbol	param		4276448						
ANR	4276566	Symbol	condor_dirname		4276448						
ANR	4276567	Symbol	MATCH		4276448						
ANR	4276568	Function	test_directory_and_directory_in_root	299:0:9359:9871							
ANR	4276569	FunctionDef	test_directory_and_directory_in_root ()		4276568	0					
ANR	4276570	CompoundStatement		299:51:9410:9871	4276568	0					
ANR	4276571	ExpressionStatement	"emit_test ( ""Does a path with two directories in the root directory return the full parent directory?"" )"	300:1:9413:9514	4276568	0	True				
ANR	4276572	CallExpression	"emit_test ( ""Does a path with two directories in the root directory return the full parent directory?"" )"		4276568	0					
ANR	4276573	Callee	emit_test		4276568	0					
ANR	4276574	Identifier	emit_test		4276568	0					
ANR	4276575	ArgumentList	"""Does a path with two directories in the root directory return the full parent directory?"""		4276568	1					
ANR	4276576	Argument	"""Does a path with two directories in the root directory return the full parent directory?"""		4276568	0					
ANR	4276577	PrimaryExpression	"""Does a path with two directories in the root directory return the full parent directory?"""		4276568	0					
ANR	4276578	IdentifierDeclStatement	"const char * param = ""/foo/bar/"" ;"	301:1:9517:9548	4276568	1	True				
ANR	4276579	IdentifierDecl	"* param = ""/foo/bar/"""		4276568	0					
ANR	4276580	IdentifierDeclType	const char *		4276568	0					
ANR	4276581	Identifier	param		4276568	1					
ANR	4276582	AssignmentExpression	"* param = ""/foo/bar/"""		4276568	2		=			
ANR	4276583	Identifier	param		4276568	0					
ANR	4276584	PrimaryExpression	"""/foo/bar/"""		4276568	1					
ANR	4276585	IdentifierDeclStatement	"const char * expect = ""/foo/bar"" ;"	302:1:9551:9582	4276568	2	True				
ANR	4276586	IdentifierDecl	"* expect = ""/foo/bar"""		4276568	0					
ANR	4276587	IdentifierDeclType	const char *		4276568	0					
ANR	4276588	Identifier	expect		4276568	1					
ANR	4276589	AssignmentExpression	"* expect = ""/foo/bar"""		4276568	2		=			
ANR	4276590	Identifier	expect		4276568	0					
ANR	4276591	PrimaryExpression	"""/foo/bar"""		4276568	1					
ANR	4276592	ExpressionStatement	emit_input_header ( )	303:1:9585:9604	4276568	3	True				
ANR	4276593	CallExpression	emit_input_header ( )		4276568	0					
ANR	4276594	Callee	emit_input_header		4276568	0					
ANR	4276595	Identifier	emit_input_header		4276568	0					
ANR	4276596	ArgumentList			4276568	1					
ANR	4276597	ExpressionStatement	"emit_param ( ""STRING"" , param )"	304:1:9607:9634	4276568	4	True				
ANR	4276598	CallExpression	"emit_param ( ""STRING"" , param )"		4276568	0					
ANR	4276599	Callee	emit_param		4276568	0					
ANR	4276600	Identifier	emit_param		4276568	0					
ANR	4276601	ArgumentList	"""STRING"""		4276568	1					
ANR	4276602	Argument	"""STRING"""		4276568	0					
ANR	4276603	PrimaryExpression	"""STRING"""		4276568	0					
ANR	4276604	Argument	param		4276568	1					
ANR	4276605	Identifier	param		4276568	0					
ANR	4276606	ExpressionStatement	emit_output_expected_header ( )	305:1:9637:9666	4276568	5	True				
ANR	4276607	CallExpression	emit_output_expected_header ( )		4276568	0					
ANR	4276608	Callee	emit_output_expected_header		4276568	0					
ANR	4276609	Identifier	emit_output_expected_header		4276568	0					
ANR	4276610	ArgumentList			4276568	1					
ANR	4276611	ExpressionStatement	"emit_retval ( ""%s"" , expect )"	306:1:9669:9694	4276568	6	True				
ANR	4276612	CallExpression	"emit_retval ( ""%s"" , expect )"		4276568	0					
ANR	4276613	Callee	emit_retval		4276568	0					
ANR	4276614	Identifier	emit_retval		4276568	0					
ANR	4276615	ArgumentList	"""%s"""		4276568	1					
ANR	4276616	Argument	"""%s"""		4276568	0					
ANR	4276617	PrimaryExpression	"""%s"""		4276568	0					
ANR	4276618	Argument	expect		4276568	1					
ANR	4276619	Identifier	expect		4276568	0					
ANR	4276620	IdentifierDeclStatement	char * path = condor_dirname ( param ) ;	307:1:9697:9731	4276568	7	True				
ANR	4276621	IdentifierDecl	* path = condor_dirname ( param )		4276568	0					
ANR	4276622	IdentifierDeclType	char *		4276568	0					
ANR	4276623	Identifier	path		4276568	1					
ANR	4276624	AssignmentExpression	* path = condor_dirname ( param )		4276568	2		=			
ANR	4276625	Identifier	path		4276568	0					
ANR	4276626	CallExpression	condor_dirname ( param )		4276568	1					
ANR	4276627	Callee	condor_dirname		4276568	0					
ANR	4276628	Identifier	condor_dirname		4276568	0					
ANR	4276629	ArgumentList	param		4276568	1					
ANR	4276630	Argument	param		4276568	0					
ANR	4276631	Identifier	param		4276568	0					
ANR	4276632	ExpressionStatement	emit_output_actual_header ( )	308:1:9734:9761	4276568	8	True				
ANR	4276633	CallExpression	emit_output_actual_header ( )		4276568	0					
ANR	4276634	Callee	emit_output_actual_header		4276568	0					
ANR	4276635	Identifier	emit_output_actual_header		4276568	0					
ANR	4276636	ArgumentList			4276568	1					
ANR	4276637	ExpressionStatement	"emit_retval ( ""%s"" , path )"	309:1:9764:9787	4276568	9	True				
ANR	4276638	CallExpression	"emit_retval ( ""%s"" , path )"		4276568	0					
ANR	4276639	Callee	emit_retval		4276568	0					
ANR	4276640	Identifier	emit_retval		4276568	0					
ANR	4276641	ArgumentList	"""%s"""		4276568	1					
ANR	4276642	Argument	"""%s"""		4276568	0					
ANR	4276643	PrimaryExpression	"""%s"""		4276568	0					
ANR	4276644	Argument	path		4276568	1					
ANR	4276645	Identifier	path		4276568	0					
ANR	4276646	IfStatement	"if ( strcmp ( path , expect ) != MATCH )"		4276568	10					
ANR	4276647	Condition	"strcmp ( path , expect ) != MATCH"	310:4:9793:9821	4276568	0	True				
ANR	4276648	EqualityExpression	"strcmp ( path , expect ) != MATCH"		4276568	0		!=			
ANR	4276649	CallExpression	"strcmp ( path , expect )"		4276568	0					
ANR	4276650	Callee	strcmp		4276568	0					
ANR	4276651	Identifier	strcmp		4276568	0					
ANR	4276652	ArgumentList	path		4276568	1					
ANR	4276653	Argument	path		4276568	0					
ANR	4276654	Identifier	path		4276568	0					
ANR	4276655	Argument	expect		4276568	1					
ANR	4276656	Identifier	expect		4276568	0					
ANR	4276657	Identifier	MATCH		4276568	1					
ANR	4276658	CompoundStatement		12:35:413:413	4276568	1					
ANR	4276659	ExpressionStatement	free ( path )	311:2:9828:9838	4276568	0	True				
ANR	4276660	CallExpression	free ( path )		4276568	0					
ANR	4276661	Callee	free		4276568	0					
ANR	4276662	Identifier	free		4276568	0					
ANR	4276663	ArgumentList	path		4276568	1					
ANR	4276664	Argument	path		4276568	0					
ANR	4276665	Identifier	path		4276568	0					
ANR	4276666	ExpressionStatement	FAIL	312:2:9842:9846	4276568	1	True				
ANR	4276667	Identifier	FAIL		4276568	0					
ANR	4276668	ExpressionStatement	free ( path )	314:1:9852:9862	4276568	11	True				
ANR	4276669	CallExpression	free ( path )		4276568	0					
ANR	4276670	Callee	free		4276568	0					
ANR	4276671	Identifier	free		4276568	0					
ANR	4276672	ArgumentList	path		4276568	1					
ANR	4276673	Argument	path		4276568	0					
ANR	4276674	Identifier	path		4276568	0					
ANR	4276675	ExpressionStatement	PASS	315:1:9865:9869	4276568	12	True				
ANR	4276676	Identifier	PASS		4276568	0					
ANR	4276677	ReturnType	static bool		4276568	1					
ANR	4276678	Identifier	test_directory_and_directory_in_root		4276568	2					
ANR	4276679	ParameterList			4276568	3					
ANR	4276680	CFGEntryNode	ENTRY		4276568		True				
ANR	4276681	CFGExitNode	EXIT		4276568		True				
ANR	4276682	Symbol	strcmp		4276568						
ANR	4276683	Symbol	expect		4276568						
ANR	4276684	Symbol	path		4276568						
ANR	4276685	Symbol	param		4276568						
ANR	4276686	Symbol	condor_dirname		4276568						
ANR	4276687	Symbol	MATCH		4276568						
ANR	4276688	Function	test_forward_slash	318:0:9874:10326							
ANR	4276689	FunctionDef	test_forward_slash ()		4276688	0					
ANR	4276690	CompoundStatement		318:33:9907:10326	4276688	0					
ANR	4276691	ExpressionStatement	"emit_test ( ""Does a path with only a forward slash return a forward slash?"" )"	319:1:9910:9984	4276688	0	True				
ANR	4276692	CallExpression	"emit_test ( ""Does a path with only a forward slash return a forward slash?"" )"		4276688	0					
ANR	4276693	Callee	emit_test		4276688	0					
ANR	4276694	Identifier	emit_test		4276688	0					
ANR	4276695	ArgumentList	"""Does a path with only a forward slash return a forward slash?"""		4276688	1					
ANR	4276696	Argument	"""Does a path with only a forward slash return a forward slash?"""		4276688	0					
ANR	4276697	PrimaryExpression	"""Does a path with only a forward slash return a forward slash?"""		4276688	0					
ANR	4276698	IdentifierDeclStatement	"const char * param = ""/"" ;"	320:1:9987:10010	4276688	1	True				
ANR	4276699	IdentifierDecl	"* param = ""/"""		4276688	0					
ANR	4276700	IdentifierDeclType	const char *		4276688	0					
ANR	4276701	Identifier	param		4276688	1					
ANR	4276702	AssignmentExpression	"* param = ""/"""		4276688	2		=			
ANR	4276703	Identifier	param		4276688	0					
ANR	4276704	PrimaryExpression	"""/"""		4276688	1					
ANR	4276705	IdentifierDeclStatement	"const char * expect = ""/"" ;"	321:1:10013:10037	4276688	2	True				
ANR	4276706	IdentifierDecl	"* expect = ""/"""		4276688	0					
ANR	4276707	IdentifierDeclType	const char *		4276688	0					
ANR	4276708	Identifier	expect		4276688	1					
ANR	4276709	AssignmentExpression	"* expect = ""/"""		4276688	2		=			
ANR	4276710	Identifier	expect		4276688	0					
ANR	4276711	PrimaryExpression	"""/"""		4276688	1					
ANR	4276712	ExpressionStatement	emit_input_header ( )	322:1:10040:10059	4276688	3	True				
ANR	4276713	CallExpression	emit_input_header ( )		4276688	0					
ANR	4276714	Callee	emit_input_header		4276688	0					
ANR	4276715	Identifier	emit_input_header		4276688	0					
ANR	4276716	ArgumentList			4276688	1					
ANR	4276717	ExpressionStatement	"emit_param ( ""STRING"" , param )"	323:1:10062:10089	4276688	4	True				
ANR	4276718	CallExpression	"emit_param ( ""STRING"" , param )"		4276688	0					
ANR	4276719	Callee	emit_param		4276688	0					
ANR	4276720	Identifier	emit_param		4276688	0					
ANR	4276721	ArgumentList	"""STRING"""		4276688	1					
ANR	4276722	Argument	"""STRING"""		4276688	0					
ANR	4276723	PrimaryExpression	"""STRING"""		4276688	0					
ANR	4276724	Argument	param		4276688	1					
ANR	4276725	Identifier	param		4276688	0					
ANR	4276726	ExpressionStatement	emit_output_expected_header ( )	324:1:10092:10121	4276688	5	True				
ANR	4276727	CallExpression	emit_output_expected_header ( )		4276688	0					
ANR	4276728	Callee	emit_output_expected_header		4276688	0					
ANR	4276729	Identifier	emit_output_expected_header		4276688	0					
ANR	4276730	ArgumentList			4276688	1					
ANR	4276731	ExpressionStatement	"emit_retval ( ""%s"" , expect )"	325:1:10124:10149	4276688	6	True				
ANR	4276732	CallExpression	"emit_retval ( ""%s"" , expect )"		4276688	0					
ANR	4276733	Callee	emit_retval		4276688	0					
ANR	4276734	Identifier	emit_retval		4276688	0					
ANR	4276735	ArgumentList	"""%s"""		4276688	1					
ANR	4276736	Argument	"""%s"""		4276688	0					
ANR	4276737	PrimaryExpression	"""%s"""		4276688	0					
ANR	4276738	Argument	expect		4276688	1					
ANR	4276739	Identifier	expect		4276688	0					
ANR	4276740	IdentifierDeclStatement	char * path = condor_dirname ( param ) ;	326:1:10152:10186	4276688	7	True				
ANR	4276741	IdentifierDecl	* path = condor_dirname ( param )		4276688	0					
ANR	4276742	IdentifierDeclType	char *		4276688	0					
ANR	4276743	Identifier	path		4276688	1					
ANR	4276744	AssignmentExpression	* path = condor_dirname ( param )		4276688	2		=			
ANR	4276745	Identifier	path		4276688	0					
ANR	4276746	CallExpression	condor_dirname ( param )		4276688	1					
ANR	4276747	Callee	condor_dirname		4276688	0					
ANR	4276748	Identifier	condor_dirname		4276688	0					
ANR	4276749	ArgumentList	param		4276688	1					
ANR	4276750	Argument	param		4276688	0					
ANR	4276751	Identifier	param		4276688	0					
ANR	4276752	ExpressionStatement	emit_output_actual_header ( )	327:1:10189:10216	4276688	8	True				
ANR	4276753	CallExpression	emit_output_actual_header ( )		4276688	0					
ANR	4276754	Callee	emit_output_actual_header		4276688	0					
ANR	4276755	Identifier	emit_output_actual_header		4276688	0					
ANR	4276756	ArgumentList			4276688	1					
ANR	4276757	ExpressionStatement	"emit_retval ( ""%s"" , path )"	328:1:10219:10242	4276688	9	True				
ANR	4276758	CallExpression	"emit_retval ( ""%s"" , path )"		4276688	0					
ANR	4276759	Callee	emit_retval		4276688	0					
ANR	4276760	Identifier	emit_retval		4276688	0					
ANR	4276761	ArgumentList	"""%s"""		4276688	1					
ANR	4276762	Argument	"""%s"""		4276688	0					
ANR	4276763	PrimaryExpression	"""%s"""		4276688	0					
ANR	4276764	Argument	path		4276688	1					
ANR	4276765	Identifier	path		4276688	0					
ANR	4276766	IfStatement	"if ( strcmp ( path , expect ) != MATCH )"		4276688	10					
ANR	4276767	Condition	"strcmp ( path , expect ) != MATCH"	329:4:10248:10276	4276688	0	True				
ANR	4276768	EqualityExpression	"strcmp ( path , expect ) != MATCH"		4276688	0		!=			
ANR	4276769	CallExpression	"strcmp ( path , expect )"		4276688	0					
ANR	4276770	Callee	strcmp		4276688	0					
ANR	4276771	Identifier	strcmp		4276688	0					
ANR	4276772	ArgumentList	path		4276688	1					
ANR	4276773	Argument	path		4276688	0					
ANR	4276774	Identifier	path		4276688	0					
ANR	4276775	Argument	expect		4276688	1					
ANR	4276776	Identifier	expect		4276688	0					
ANR	4276777	Identifier	MATCH		4276688	1					
ANR	4276778	CompoundStatement		12:35:371:371	4276688	1					
ANR	4276779	ExpressionStatement	free ( path )	330:2:10283:10293	4276688	0	True				
ANR	4276780	CallExpression	free ( path )		4276688	0					
ANR	4276781	Callee	free		4276688	0					
ANR	4276782	Identifier	free		4276688	0					
ANR	4276783	ArgumentList	path		4276688	1					
ANR	4276784	Argument	path		4276688	0					
ANR	4276785	Identifier	path		4276688	0					
ANR	4276786	ExpressionStatement	FAIL	331:2:10297:10301	4276688	1	True				
ANR	4276787	Identifier	FAIL		4276688	0					
ANR	4276788	ExpressionStatement	free ( path )	333:1:10307:10317	4276688	11	True				
ANR	4276789	CallExpression	free ( path )		4276688	0					
ANR	4276790	Callee	free		4276688	0					
ANR	4276791	Identifier	free		4276688	0					
ANR	4276792	ArgumentList	path		4276688	1					
ANR	4276793	Argument	path		4276688	0					
ANR	4276794	Identifier	path		4276688	0					
ANR	4276795	ExpressionStatement	PASS	334:1:10320:10324	4276688	12	True				
ANR	4276796	Identifier	PASS		4276688	0					
ANR	4276797	ReturnType	static bool		4276688	1					
ANR	4276798	Identifier	test_forward_slash		4276688	2					
ANR	4276799	ParameterList			4276688	3					
ANR	4276800	CFGEntryNode	ENTRY		4276688		True				
ANR	4276801	CFGExitNode	EXIT		4276688		True				
ANR	4276802	Symbol	strcmp		4276688						
ANR	4276803	Symbol	expect		4276688						
ANR	4276804	Symbol	path		4276688						
ANR	4276805	Symbol	param		4276688						
ANR	4276806	Symbol	condor_dirname		4276688						
ANR	4276807	Symbol	MATCH		4276688						
ANR	4276808	Function	test_backslash	337:0:10329:10771							
ANR	4276809	FunctionDef	test_backslash ()		4276808	0					
ANR	4276810	CompoundStatement		337:29:10358:10771	4276808	0					
ANR	4276811	ExpressionStatement	"emit_test ( ""Does a path with only a backslash return a backslash?"" )"	338:1:10361:10427	4276808	0	True				
ANR	4276812	CallExpression	"emit_test ( ""Does a path with only a backslash return a backslash?"" )"		4276808	0					
ANR	4276813	Callee	emit_test		4276808	0					
ANR	4276814	Identifier	emit_test		4276808	0					
ANR	4276815	ArgumentList	"""Does a path with only a backslash return a backslash?"""		4276808	1					
ANR	4276816	Argument	"""Does a path with only a backslash return a backslash?"""		4276808	0					
ANR	4276817	PrimaryExpression	"""Does a path with only a backslash return a backslash?"""		4276808	0					
ANR	4276818	IdentifierDeclStatement	"const char * param = ""\\\\"" ;"	339:1:10430:10454	4276808	1	True				
ANR	4276819	IdentifierDecl	"* param = ""\\\\"""		4276808	0					
ANR	4276820	IdentifierDeclType	const char *		4276808	0					
ANR	4276821	Identifier	param		4276808	1					
ANR	4276822	AssignmentExpression	"* param = ""\\\\"""		4276808	2		=			
ANR	4276823	Identifier	param		4276808	0					
ANR	4276824	PrimaryExpression	"""\\\\"""		4276808	1					
ANR	4276825	IdentifierDeclStatement	"const char * expect = ""\\\\"" ;"	340:1:10457:10482	4276808	2	True				
ANR	4276826	IdentifierDecl	"* expect = ""\\\\"""		4276808	0					
ANR	4276827	IdentifierDeclType	const char *		4276808	0					
ANR	4276828	Identifier	expect		4276808	1					
ANR	4276829	AssignmentExpression	"* expect = ""\\\\"""		4276808	2		=			
ANR	4276830	Identifier	expect		4276808	0					
ANR	4276831	PrimaryExpression	"""\\\\"""		4276808	1					
ANR	4276832	ExpressionStatement	emit_input_header ( )	341:1:10485:10504	4276808	3	True				
ANR	4276833	CallExpression	emit_input_header ( )		4276808	0					
ANR	4276834	Callee	emit_input_header		4276808	0					
ANR	4276835	Identifier	emit_input_header		4276808	0					
ANR	4276836	ArgumentList			4276808	1					
ANR	4276837	ExpressionStatement	"emit_param ( ""STRING"" , param )"	342:1:10507:10534	4276808	4	True				
ANR	4276838	CallExpression	"emit_param ( ""STRING"" , param )"		4276808	0					
ANR	4276839	Callee	emit_param		4276808	0					
ANR	4276840	Identifier	emit_param		4276808	0					
ANR	4276841	ArgumentList	"""STRING"""		4276808	1					
ANR	4276842	Argument	"""STRING"""		4276808	0					
ANR	4276843	PrimaryExpression	"""STRING"""		4276808	0					
ANR	4276844	Argument	param		4276808	1					
ANR	4276845	Identifier	param		4276808	0					
ANR	4276846	ExpressionStatement	emit_output_expected_header ( )	343:1:10537:10566	4276808	5	True				
ANR	4276847	CallExpression	emit_output_expected_header ( )		4276808	0					
ANR	4276848	Callee	emit_output_expected_header		4276808	0					
ANR	4276849	Identifier	emit_output_expected_header		4276808	0					
ANR	4276850	ArgumentList			4276808	1					
ANR	4276851	ExpressionStatement	"emit_retval ( ""%s"" , expect )"	344:1:10569:10594	4276808	6	True				
ANR	4276852	CallExpression	"emit_retval ( ""%s"" , expect )"		4276808	0					
ANR	4276853	Callee	emit_retval		4276808	0					
ANR	4276854	Identifier	emit_retval		4276808	0					
ANR	4276855	ArgumentList	"""%s"""		4276808	1					
ANR	4276856	Argument	"""%s"""		4276808	0					
ANR	4276857	PrimaryExpression	"""%s"""		4276808	0					
ANR	4276858	Argument	expect		4276808	1					
ANR	4276859	Identifier	expect		4276808	0					
ANR	4276860	IdentifierDeclStatement	char * path = condor_dirname ( param ) ;	345:1:10597:10631	4276808	7	True				
ANR	4276861	IdentifierDecl	* path = condor_dirname ( param )		4276808	0					
ANR	4276862	IdentifierDeclType	char *		4276808	0					
ANR	4276863	Identifier	path		4276808	1					
ANR	4276864	AssignmentExpression	* path = condor_dirname ( param )		4276808	2		=			
ANR	4276865	Identifier	path		4276808	0					
ANR	4276866	CallExpression	condor_dirname ( param )		4276808	1					
ANR	4276867	Callee	condor_dirname		4276808	0					
ANR	4276868	Identifier	condor_dirname		4276808	0					
ANR	4276869	ArgumentList	param		4276808	1					
ANR	4276870	Argument	param		4276808	0					
ANR	4276871	Identifier	param		4276808	0					
ANR	4276872	ExpressionStatement	emit_output_actual_header ( )	346:1:10634:10661	4276808	8	True				
ANR	4276873	CallExpression	emit_output_actual_header ( )		4276808	0					
ANR	4276874	Callee	emit_output_actual_header		4276808	0					
ANR	4276875	Identifier	emit_output_actual_header		4276808	0					
ANR	4276876	ArgumentList			4276808	1					
ANR	4276877	ExpressionStatement	"emit_retval ( ""%s"" , path )"	347:1:10664:10687	4276808	9	True				
ANR	4276878	CallExpression	"emit_retval ( ""%s"" , path )"		4276808	0					
ANR	4276879	Callee	emit_retval		4276808	0					
ANR	4276880	Identifier	emit_retval		4276808	0					
ANR	4276881	ArgumentList	"""%s"""		4276808	1					
ANR	4276882	Argument	"""%s"""		4276808	0					
ANR	4276883	PrimaryExpression	"""%s"""		4276808	0					
ANR	4276884	Argument	path		4276808	1					
ANR	4276885	Identifier	path		4276808	0					
ANR	4276886	IfStatement	"if ( strcmp ( path , expect ) != MATCH )"		4276808	10					
ANR	4276887	Condition	"strcmp ( path , expect ) != MATCH"	348:4:10693:10721	4276808	0	True				
ANR	4276888	EqualityExpression	"strcmp ( path , expect ) != MATCH"		4276808	0		!=			
ANR	4276889	CallExpression	"strcmp ( path , expect )"		4276808	0					
ANR	4276890	Callee	strcmp		4276808	0					
ANR	4276891	Identifier	strcmp		4276808	0					
ANR	4276892	ArgumentList	path		4276808	1					
ANR	4276893	Argument	path		4276808	0					
ANR	4276894	Identifier	path		4276808	0					
ANR	4276895	Argument	expect		4276808	1					
ANR	4276896	Identifier	expect		4276808	0					
ANR	4276897	Identifier	MATCH		4276808	1					
ANR	4276898	CompoundStatement		12:35:365:365	4276808	1					
ANR	4276899	ExpressionStatement	free ( path )	349:2:10728:10738	4276808	0	True				
ANR	4276900	CallExpression	free ( path )		4276808	0					
ANR	4276901	Callee	free		4276808	0					
ANR	4276902	Identifier	free		4276808	0					
ANR	4276903	ArgumentList	path		4276808	1					
ANR	4276904	Argument	path		4276808	0					
ANR	4276905	Identifier	path		4276808	0					
ANR	4276906	ExpressionStatement	FAIL	350:2:10742:10746	4276808	1	True				
ANR	4276907	Identifier	FAIL		4276808	0					
ANR	4276908	ExpressionStatement	free ( path )	352:1:10752:10762	4276808	11	True				
ANR	4276909	CallExpression	free ( path )		4276808	0					
ANR	4276910	Callee	free		4276808	0					
ANR	4276911	Identifier	free		4276808	0					
ANR	4276912	ArgumentList	path		4276808	1					
ANR	4276913	Argument	path		4276808	0					
ANR	4276914	Identifier	path		4276808	0					
ANR	4276915	ExpressionStatement	PASS	353:1:10765:10769	4276808	12	True				
ANR	4276916	Identifier	PASS		4276808	0					
ANR	4276917	ReturnType	static bool		4276808	1					
ANR	4276918	Identifier	test_backslash		4276808	2					
ANR	4276919	ParameterList			4276808	3					
ANR	4276920	CFGEntryNode	ENTRY		4276808		True				
ANR	4276921	CFGExitNode	EXIT		4276808		True				
ANR	4276922	Symbol	strcmp		4276808						
ANR	4276923	Symbol	expect		4276808						
ANR	4276924	Symbol	path		4276808						
ANR	4276925	Symbol	param		4276808						
ANR	4276926	Symbol	condor_dirname		4276808						
ANR	4276927	Symbol	MATCH		4276808						
ANR	4276928	Function	test_period_and_forward_slash_1	356:0:10774:11238							
ANR	4276929	FunctionDef	test_period_and_forward_slash_1 ()		4276928	0					
ANR	4276930	CompoundStatement		356:46:10820:11238	4276928	0					
ANR	4276931	ExpressionStatement	"emit_test ( ""Does a path with a period and backslash return a period?"" )"	357:1:10823:10892	4276928	0	True				
ANR	4276932	CallExpression	"emit_test ( ""Does a path with a period and backslash return a period?"" )"		4276928	0					
ANR	4276933	Callee	emit_test		4276928	0					
ANR	4276934	Identifier	emit_test		4276928	0					
ANR	4276935	ArgumentList	"""Does a path with a period and backslash return a period?"""		4276928	1					
ANR	4276936	Argument	"""Does a path with a period and backslash return a period?"""		4276928	0					
ANR	4276937	PrimaryExpression	"""Does a path with a period and backslash return a period?"""		4276928	0					
ANR	4276938	IdentifierDeclStatement	"const char * param = ""./bar"" ;"	358:1:10895:10922	4276928	1	True				
ANR	4276939	IdentifierDecl	"* param = ""./bar"""		4276928	0					
ANR	4276940	IdentifierDeclType	const char *		4276928	0					
ANR	4276941	Identifier	param		4276928	1					
ANR	4276942	AssignmentExpression	"* param = ""./bar"""		4276928	2		=			
ANR	4276943	Identifier	param		4276928	0					
ANR	4276944	PrimaryExpression	"""./bar"""		4276928	1					
ANR	4276945	IdentifierDeclStatement	"const char * expect = ""."" ;"	359:1:10925:10949	4276928	2	True				
ANR	4276946	IdentifierDecl	"* expect = ""."""		4276928	0					
ANR	4276947	IdentifierDeclType	const char *		4276928	0					
ANR	4276948	Identifier	expect		4276928	1					
ANR	4276949	AssignmentExpression	"* expect = ""."""		4276928	2		=			
ANR	4276950	Identifier	expect		4276928	0					
ANR	4276951	PrimaryExpression	"""."""		4276928	1					
ANR	4276952	ExpressionStatement	emit_input_header ( )	360:1:10952:10971	4276928	3	True				
ANR	4276953	CallExpression	emit_input_header ( )		4276928	0					
ANR	4276954	Callee	emit_input_header		4276928	0					
ANR	4276955	Identifier	emit_input_header		4276928	0					
ANR	4276956	ArgumentList			4276928	1					
ANR	4276957	ExpressionStatement	"emit_param ( ""STRING"" , param )"	361:1:10974:11001	4276928	4	True				
ANR	4276958	CallExpression	"emit_param ( ""STRING"" , param )"		4276928	0					
ANR	4276959	Callee	emit_param		4276928	0					
ANR	4276960	Identifier	emit_param		4276928	0					
ANR	4276961	ArgumentList	"""STRING"""		4276928	1					
ANR	4276962	Argument	"""STRING"""		4276928	0					
ANR	4276963	PrimaryExpression	"""STRING"""		4276928	0					
ANR	4276964	Argument	param		4276928	1					
ANR	4276965	Identifier	param		4276928	0					
ANR	4276966	ExpressionStatement	emit_output_expected_header ( )	362:1:11004:11033	4276928	5	True				
ANR	4276967	CallExpression	emit_output_expected_header ( )		4276928	0					
ANR	4276968	Callee	emit_output_expected_header		4276928	0					
ANR	4276969	Identifier	emit_output_expected_header		4276928	0					
ANR	4276970	ArgumentList			4276928	1					
ANR	4276971	ExpressionStatement	"emit_retval ( ""%s"" , expect )"	363:1:11036:11061	4276928	6	True				
ANR	4276972	CallExpression	"emit_retval ( ""%s"" , expect )"		4276928	0					
ANR	4276973	Callee	emit_retval		4276928	0					
ANR	4276974	Identifier	emit_retval		4276928	0					
ANR	4276975	ArgumentList	"""%s"""		4276928	1					
ANR	4276976	Argument	"""%s"""		4276928	0					
ANR	4276977	PrimaryExpression	"""%s"""		4276928	0					
ANR	4276978	Argument	expect		4276928	1					
ANR	4276979	Identifier	expect		4276928	0					
ANR	4276980	IdentifierDeclStatement	char * path = condor_dirname ( param ) ;	364:1:11064:11098	4276928	7	True				
ANR	4276981	IdentifierDecl	* path = condor_dirname ( param )		4276928	0					
ANR	4276982	IdentifierDeclType	char *		4276928	0					
ANR	4276983	Identifier	path		4276928	1					
ANR	4276984	AssignmentExpression	* path = condor_dirname ( param )		4276928	2		=			
ANR	4276985	Identifier	path		4276928	0					
ANR	4276986	CallExpression	condor_dirname ( param )		4276928	1					
ANR	4276987	Callee	condor_dirname		4276928	0					
ANR	4276988	Identifier	condor_dirname		4276928	0					
ANR	4276989	ArgumentList	param		4276928	1					
ANR	4276990	Argument	param		4276928	0					
ANR	4276991	Identifier	param		4276928	0					
ANR	4276992	ExpressionStatement	emit_output_actual_header ( )	365:1:11101:11128	4276928	8	True				
ANR	4276993	CallExpression	emit_output_actual_header ( )		4276928	0					
ANR	4276994	Callee	emit_output_actual_header		4276928	0					
ANR	4276995	Identifier	emit_output_actual_header		4276928	0					
ANR	4276996	ArgumentList			4276928	1					
ANR	4276997	ExpressionStatement	"emit_retval ( ""%s"" , path )"	366:1:11131:11154	4276928	9	True				
ANR	4276998	CallExpression	"emit_retval ( ""%s"" , path )"		4276928	0					
ANR	4276999	Callee	emit_retval		4276928	0					
ANR	4277000	Identifier	emit_retval		4276928	0					
ANR	4277001	ArgumentList	"""%s"""		4276928	1					
ANR	4277002	Argument	"""%s"""		4276928	0					
ANR	4277003	PrimaryExpression	"""%s"""		4276928	0					
ANR	4277004	Argument	path		4276928	1					
ANR	4277005	Identifier	path		4276928	0					
ANR	4277006	IfStatement	"if ( strcmp ( path , expect ) != MATCH )"		4276928	10					
ANR	4277007	Condition	"strcmp ( path , expect ) != MATCH"	367:4:11160:11188	4276928	0	True				
ANR	4277008	EqualityExpression	"strcmp ( path , expect ) != MATCH"		4276928	0		!=			
ANR	4277009	CallExpression	"strcmp ( path , expect )"		4276928	0					
ANR	4277010	Callee	strcmp		4276928	0					
ANR	4277011	Identifier	strcmp		4276928	0					
ANR	4277012	ArgumentList	path		4276928	1					
ANR	4277013	Argument	path		4276928	0					
ANR	4277014	Identifier	path		4276928	0					
ANR	4277015	Argument	expect		4276928	1					
ANR	4277016	Identifier	expect		4276928	0					
ANR	4277017	Identifier	MATCH		4276928	1					
ANR	4277018	CompoundStatement		12:35:370:370	4276928	1					
ANR	4277019	ExpressionStatement	free ( path )	368:2:11195:11205	4276928	0	True				
ANR	4277020	CallExpression	free ( path )		4276928	0					
ANR	4277021	Callee	free		4276928	0					
ANR	4277022	Identifier	free		4276928	0					
ANR	4277023	ArgumentList	path		4276928	1					
ANR	4277024	Argument	path		4276928	0					
ANR	4277025	Identifier	path		4276928	0					
ANR	4277026	ExpressionStatement	FAIL	369:2:11209:11213	4276928	1	True				
ANR	4277027	Identifier	FAIL		4276928	0					
ANR	4277028	ExpressionStatement	free ( path )	371:1:11219:11229	4276928	11	True				
ANR	4277029	CallExpression	free ( path )		4276928	0					
ANR	4277030	Callee	free		4276928	0					
ANR	4277031	Identifier	free		4276928	0					
ANR	4277032	ArgumentList	path		4276928	1					
ANR	4277033	Argument	path		4276928	0					
ANR	4277034	Identifier	path		4276928	0					
ANR	4277035	ExpressionStatement	PASS	372:1:11232:11236	4276928	12	True				
ANR	4277036	Identifier	PASS		4276928	0					
ANR	4277037	ReturnType	static bool		4276928	1					
ANR	4277038	Identifier	test_period_and_forward_slash_1		4276928	2					
ANR	4277039	ParameterList			4276928	3					
ANR	4277040	CFGEntryNode	ENTRY		4276928		True				
ANR	4277041	CFGExitNode	EXIT		4276928		True				
ANR	4277042	Symbol	strcmp		4276928						
ANR	4277043	Symbol	expect		4276928						
ANR	4277044	Symbol	path		4276928						
ANR	4277045	Symbol	param		4276928						
ANR	4277046	Symbol	condor_dirname		4276928						
ANR	4277047	Symbol	MATCH		4276928						
ANR	4277048	Function	test_period_and_backslash_1	375:0:11241:11705							
ANR	4277049	FunctionDef	test_period_and_backslash_1 ()		4277048	0					
ANR	4277050	CompoundStatement		375:42:11283:11705	4277048	0					
ANR	4277051	ExpressionStatement	"emit_test ( ""Does a path with a period and forwardslash return a period?"" )"	376:1:11286:11358	4277048	0	True				
ANR	4277052	CallExpression	"emit_test ( ""Does a path with a period and forwardslash return a period?"" )"		4277048	0					
ANR	4277053	Callee	emit_test		4277048	0					
ANR	4277054	Identifier	emit_test		4277048	0					
ANR	4277055	ArgumentList	"""Does a path with a period and forwardslash return a period?"""		4277048	1					
ANR	4277056	Argument	"""Does a path with a period and forwardslash return a period?"""		4277048	0					
ANR	4277057	PrimaryExpression	"""Does a path with a period and forwardslash return a period?"""		4277048	0					
ANR	4277058	IdentifierDeclStatement	"const char * param = "".\\\\bar"" ;"	377:1:11361:11389	4277048	1	True				
ANR	4277059	IdentifierDecl	"* param = "".\\\\bar"""		4277048	0					
ANR	4277060	IdentifierDeclType	const char *		4277048	0					
ANR	4277061	Identifier	param		4277048	1					
ANR	4277062	AssignmentExpression	"* param = "".\\\\bar"""		4277048	2		=			
ANR	4277063	Identifier	param		4277048	0					
ANR	4277064	PrimaryExpression	""".\\\\bar"""		4277048	1					
ANR	4277065	IdentifierDeclStatement	"const char * expect = ""."" ;"	378:1:11392:11416	4277048	2	True				
ANR	4277066	IdentifierDecl	"* expect = ""."""		4277048	0					
ANR	4277067	IdentifierDeclType	const char *		4277048	0					
ANR	4277068	Identifier	expect		4277048	1					
ANR	4277069	AssignmentExpression	"* expect = ""."""		4277048	2		=			
ANR	4277070	Identifier	expect		4277048	0					
ANR	4277071	PrimaryExpression	"""."""		4277048	1					
ANR	4277072	ExpressionStatement	emit_input_header ( )	379:1:11419:11438	4277048	3	True				
ANR	4277073	CallExpression	emit_input_header ( )		4277048	0					
ANR	4277074	Callee	emit_input_header		4277048	0					
ANR	4277075	Identifier	emit_input_header		4277048	0					
ANR	4277076	ArgumentList			4277048	1					
ANR	4277077	ExpressionStatement	"emit_param ( ""STRING"" , param )"	380:1:11441:11468	4277048	4	True				
ANR	4277078	CallExpression	"emit_param ( ""STRING"" , param )"		4277048	0					
ANR	4277079	Callee	emit_param		4277048	0					
ANR	4277080	Identifier	emit_param		4277048	0					
ANR	4277081	ArgumentList	"""STRING"""		4277048	1					
ANR	4277082	Argument	"""STRING"""		4277048	0					
ANR	4277083	PrimaryExpression	"""STRING"""		4277048	0					
ANR	4277084	Argument	param		4277048	1					
ANR	4277085	Identifier	param		4277048	0					
ANR	4277086	ExpressionStatement	emit_output_expected_header ( )	381:1:11471:11500	4277048	5	True				
ANR	4277087	CallExpression	emit_output_expected_header ( )		4277048	0					
ANR	4277088	Callee	emit_output_expected_header		4277048	0					
ANR	4277089	Identifier	emit_output_expected_header		4277048	0					
ANR	4277090	ArgumentList			4277048	1					
ANR	4277091	ExpressionStatement	"emit_retval ( ""%s"" , expect )"	382:1:11503:11528	4277048	6	True				
ANR	4277092	CallExpression	"emit_retval ( ""%s"" , expect )"		4277048	0					
ANR	4277093	Callee	emit_retval		4277048	0					
ANR	4277094	Identifier	emit_retval		4277048	0					
ANR	4277095	ArgumentList	"""%s"""		4277048	1					
ANR	4277096	Argument	"""%s"""		4277048	0					
ANR	4277097	PrimaryExpression	"""%s"""		4277048	0					
ANR	4277098	Argument	expect		4277048	1					
ANR	4277099	Identifier	expect		4277048	0					
ANR	4277100	IdentifierDeclStatement	char * path = condor_dirname ( param ) ;	383:1:11531:11565	4277048	7	True				
ANR	4277101	IdentifierDecl	* path = condor_dirname ( param )		4277048	0					
ANR	4277102	IdentifierDeclType	char *		4277048	0					
ANR	4277103	Identifier	path		4277048	1					
ANR	4277104	AssignmentExpression	* path = condor_dirname ( param )		4277048	2		=			
ANR	4277105	Identifier	path		4277048	0					
ANR	4277106	CallExpression	condor_dirname ( param )		4277048	1					
ANR	4277107	Callee	condor_dirname		4277048	0					
ANR	4277108	Identifier	condor_dirname		4277048	0					
ANR	4277109	ArgumentList	param		4277048	1					
ANR	4277110	Argument	param		4277048	0					
ANR	4277111	Identifier	param		4277048	0					
ANR	4277112	ExpressionStatement	emit_output_actual_header ( )	384:1:11568:11595	4277048	8	True				
ANR	4277113	CallExpression	emit_output_actual_header ( )		4277048	0					
ANR	4277114	Callee	emit_output_actual_header		4277048	0					
ANR	4277115	Identifier	emit_output_actual_header		4277048	0					
ANR	4277116	ArgumentList			4277048	1					
ANR	4277117	ExpressionStatement	"emit_retval ( ""%s"" , path )"	385:1:11598:11621	4277048	9	True				
ANR	4277118	CallExpression	"emit_retval ( ""%s"" , path )"		4277048	0					
ANR	4277119	Callee	emit_retval		4277048	0					
ANR	4277120	Identifier	emit_retval		4277048	0					
ANR	4277121	ArgumentList	"""%s"""		4277048	1					
ANR	4277122	Argument	"""%s"""		4277048	0					
ANR	4277123	PrimaryExpression	"""%s"""		4277048	0					
ANR	4277124	Argument	path		4277048	1					
ANR	4277125	Identifier	path		4277048	0					
ANR	4277126	IfStatement	"if ( strcmp ( path , expect ) != MATCH )"		4277048	10					
ANR	4277127	Condition	"strcmp ( path , expect ) != MATCH"	386:4:11627:11655	4277048	0	True				
ANR	4277128	EqualityExpression	"strcmp ( path , expect ) != MATCH"		4277048	0		!=			
ANR	4277129	CallExpression	"strcmp ( path , expect )"		4277048	0					
ANR	4277130	Callee	strcmp		4277048	0					
ANR	4277131	Identifier	strcmp		4277048	0					
ANR	4277132	ArgumentList	path		4277048	1					
ANR	4277133	Argument	path		4277048	0					
ANR	4277134	Identifier	path		4277048	0					
ANR	4277135	Argument	expect		4277048	1					
ANR	4277136	Identifier	expect		4277048	0					
ANR	4277137	Identifier	MATCH		4277048	1					
ANR	4277138	CompoundStatement		12:35:374:374	4277048	1					
ANR	4277139	ExpressionStatement	free ( path )	387:2:11662:11672	4277048	0	True				
ANR	4277140	CallExpression	free ( path )		4277048	0					
ANR	4277141	Callee	free		4277048	0					
ANR	4277142	Identifier	free		4277048	0					
ANR	4277143	ArgumentList	path		4277048	1					
ANR	4277144	Argument	path		4277048	0					
ANR	4277145	Identifier	path		4277048	0					
ANR	4277146	ExpressionStatement	FAIL	388:2:11676:11680	4277048	1	True				
ANR	4277147	Identifier	FAIL		4277048	0					
ANR	4277148	ExpressionStatement	free ( path )	390:1:11686:11696	4277048	11	True				
ANR	4277149	CallExpression	free ( path )		4277048	0					
ANR	4277150	Callee	free		4277048	0					
ANR	4277151	Identifier	free		4277048	0					
ANR	4277152	ArgumentList	path		4277048	1					
ANR	4277153	Argument	path		4277048	0					
ANR	4277154	Identifier	path		4277048	0					
ANR	4277155	ExpressionStatement	PASS	391:1:11699:11703	4277048	12	True				
ANR	4277156	Identifier	PASS		4277048	0					
ANR	4277157	ReturnType	static bool		4277048	1					
ANR	4277158	Identifier	test_period_and_backslash_1		4277048	2					
ANR	4277159	ParameterList			4277048	3					
ANR	4277160	CFGEntryNode	ENTRY		4277048		True				
ANR	4277161	CFGExitNode	EXIT		4277048		True				
ANR	4277162	Symbol	strcmp		4277048						
ANR	4277163	Symbol	expect		4277048						
ANR	4277164	Symbol	path		4277048						
ANR	4277165	Symbol	param		4277048						
ANR	4277166	Symbol	condor_dirname		4277048						
ANR	4277167	Symbol	MATCH		4277048						
ANR	4277168	Function	test_period_and_forward_slash_2	394:0:11708:12178							
ANR	4277169	FunctionDef	test_period_and_forward_slash_2 ()		4277168	0					
ANR	4277170	CompoundStatement		394:46:11754:12178	4277168	0					
ANR	4277171	ExpressionStatement	"emit_test ( ""Does a path with only a period then forwardslash return a period?"" )"	395:1:11757:11835	4277168	0	True				
ANR	4277172	CallExpression	"emit_test ( ""Does a path with only a period then forwardslash return a period?"" )"		4277168	0					
ANR	4277173	Callee	emit_test		4277168	0					
ANR	4277174	Identifier	emit_test		4277168	0					
ANR	4277175	ArgumentList	"""Does a path with only a period then forwardslash return a period?"""		4277168	1					
ANR	4277176	Argument	"""Does a path with only a period then forwardslash return a period?"""		4277168	0					
ANR	4277177	PrimaryExpression	"""Does a path with only a period then forwardslash return a period?"""		4277168	0					
ANR	4277178	IdentifierDeclStatement	"const char * param = ""./"" ;"	396:1:11838:11862	4277168	1	True				
ANR	4277179	IdentifierDecl	"* param = ""./"""		4277168	0					
ANR	4277180	IdentifierDeclType	const char *		4277168	0					
ANR	4277181	Identifier	param		4277168	1					
ANR	4277182	AssignmentExpression	"* param = ""./"""		4277168	2		=			
ANR	4277183	Identifier	param		4277168	0					
ANR	4277184	PrimaryExpression	"""./"""		4277168	1					
ANR	4277185	IdentifierDeclStatement	"const char * expect = ""."" ;"	397:1:11865:11889	4277168	2	True				
ANR	4277186	IdentifierDecl	"* expect = ""."""		4277168	0					
ANR	4277187	IdentifierDeclType	const char *		4277168	0					
ANR	4277188	Identifier	expect		4277168	1					
ANR	4277189	AssignmentExpression	"* expect = ""."""		4277168	2		=			
ANR	4277190	Identifier	expect		4277168	0					
ANR	4277191	PrimaryExpression	"""."""		4277168	1					
ANR	4277192	ExpressionStatement	emit_input_header ( )	398:1:11892:11911	4277168	3	True				
ANR	4277193	CallExpression	emit_input_header ( )		4277168	0					
ANR	4277194	Callee	emit_input_header		4277168	0					
ANR	4277195	Identifier	emit_input_header		4277168	0					
ANR	4277196	ArgumentList			4277168	1					
ANR	4277197	ExpressionStatement	"emit_param ( ""STRING"" , param )"	399:1:11914:11941	4277168	4	True				
ANR	4277198	CallExpression	"emit_param ( ""STRING"" , param )"		4277168	0					
ANR	4277199	Callee	emit_param		4277168	0					
ANR	4277200	Identifier	emit_param		4277168	0					
ANR	4277201	ArgumentList	"""STRING"""		4277168	1					
ANR	4277202	Argument	"""STRING"""		4277168	0					
ANR	4277203	PrimaryExpression	"""STRING"""		4277168	0					
ANR	4277204	Argument	param		4277168	1					
ANR	4277205	Identifier	param		4277168	0					
ANR	4277206	ExpressionStatement	emit_output_expected_header ( )	400:1:11944:11973	4277168	5	True				
ANR	4277207	CallExpression	emit_output_expected_header ( )		4277168	0					
ANR	4277208	Callee	emit_output_expected_header		4277168	0					
ANR	4277209	Identifier	emit_output_expected_header		4277168	0					
ANR	4277210	ArgumentList			4277168	1					
ANR	4277211	ExpressionStatement	"emit_retval ( ""%s"" , expect )"	401:1:11976:12001	4277168	6	True				
ANR	4277212	CallExpression	"emit_retval ( ""%s"" , expect )"		4277168	0					
ANR	4277213	Callee	emit_retval		4277168	0					
ANR	4277214	Identifier	emit_retval		4277168	0					
ANR	4277215	ArgumentList	"""%s"""		4277168	1					
ANR	4277216	Argument	"""%s"""		4277168	0					
ANR	4277217	PrimaryExpression	"""%s"""		4277168	0					
ANR	4277218	Argument	expect		4277168	1					
ANR	4277219	Identifier	expect		4277168	0					
ANR	4277220	IdentifierDeclStatement	char * path = condor_dirname ( param ) ;	402:1:12004:12038	4277168	7	True				
ANR	4277221	IdentifierDecl	* path = condor_dirname ( param )		4277168	0					
ANR	4277222	IdentifierDeclType	char *		4277168	0					
ANR	4277223	Identifier	path		4277168	1					
ANR	4277224	AssignmentExpression	* path = condor_dirname ( param )		4277168	2		=			
ANR	4277225	Identifier	path		4277168	0					
ANR	4277226	CallExpression	condor_dirname ( param )		4277168	1					
ANR	4277227	Callee	condor_dirname		4277168	0					
ANR	4277228	Identifier	condor_dirname		4277168	0					
ANR	4277229	ArgumentList	param		4277168	1					
ANR	4277230	Argument	param		4277168	0					
ANR	4277231	Identifier	param		4277168	0					
ANR	4277232	ExpressionStatement	emit_output_actual_header ( )	403:1:12041:12068	4277168	8	True				
ANR	4277233	CallExpression	emit_output_actual_header ( )		4277168	0					
ANR	4277234	Callee	emit_output_actual_header		4277168	0					
ANR	4277235	Identifier	emit_output_actual_header		4277168	0					
ANR	4277236	ArgumentList			4277168	1					
ANR	4277237	ExpressionStatement	"emit_retval ( ""%s"" , path )"	404:1:12071:12094	4277168	9	True				
ANR	4277238	CallExpression	"emit_retval ( ""%s"" , path )"		4277168	0					
ANR	4277239	Callee	emit_retval		4277168	0					
ANR	4277240	Identifier	emit_retval		4277168	0					
ANR	4277241	ArgumentList	"""%s"""		4277168	1					
ANR	4277242	Argument	"""%s"""		4277168	0					
ANR	4277243	PrimaryExpression	"""%s"""		4277168	0					
ANR	4277244	Argument	path		4277168	1					
ANR	4277245	Identifier	path		4277168	0					
ANR	4277246	IfStatement	"if ( strcmp ( path , expect ) != MATCH )"		4277168	10					
ANR	4277247	Condition	"strcmp ( path , expect ) != MATCH"	405:4:12100:12128	4277168	0	True				
ANR	4277248	EqualityExpression	"strcmp ( path , expect ) != MATCH"		4277168	0		!=			
ANR	4277249	CallExpression	"strcmp ( path , expect )"		4277168	0					
ANR	4277250	Callee	strcmp		4277168	0					
ANR	4277251	Identifier	strcmp		4277168	0					
ANR	4277252	ArgumentList	path		4277168	1					
ANR	4277253	Argument	path		4277168	0					
ANR	4277254	Identifier	path		4277168	0					
ANR	4277255	Argument	expect		4277168	1					
ANR	4277256	Identifier	expect		4277168	0					
ANR	4277257	Identifier	MATCH		4277168	1					
ANR	4277258	CompoundStatement		12:35:376:376	4277168	1					
ANR	4277259	ExpressionStatement	free ( path )	406:2:12135:12145	4277168	0	True				
ANR	4277260	CallExpression	free ( path )		4277168	0					
ANR	4277261	Callee	free		4277168	0					
ANR	4277262	Identifier	free		4277168	0					
ANR	4277263	ArgumentList	path		4277168	1					
ANR	4277264	Argument	path		4277168	0					
ANR	4277265	Identifier	path		4277168	0					
ANR	4277266	ExpressionStatement	FAIL	407:2:12149:12153	4277168	1	True				
ANR	4277267	Identifier	FAIL		4277168	0					
ANR	4277268	ExpressionStatement	free ( path )	409:1:12159:12169	4277168	11	True				
ANR	4277269	CallExpression	free ( path )		4277168	0					
ANR	4277270	Callee	free		4277168	0					
ANR	4277271	Identifier	free		4277168	0					
ANR	4277272	ArgumentList	path		4277168	1					
ANR	4277273	Argument	path		4277168	0					
ANR	4277274	Identifier	path		4277168	0					
ANR	4277275	ExpressionStatement	PASS	410:1:12172:12176	4277168	12	True				
ANR	4277276	Identifier	PASS		4277168	0					
ANR	4277277	ReturnType	static bool		4277168	1					
ANR	4277278	Identifier	test_period_and_forward_slash_2		4277168	2					
ANR	4277279	ParameterList			4277168	3					
ANR	4277280	CFGEntryNode	ENTRY		4277168		True				
ANR	4277281	CFGExitNode	EXIT		4277168		True				
ANR	4277282	Symbol	strcmp		4277168						
ANR	4277283	Symbol	expect		4277168						
ANR	4277284	Symbol	path		4277168						
ANR	4277285	Symbol	param		4277168						
ANR	4277286	Symbol	condor_dirname		4277168						
ANR	4277287	Symbol	MATCH		4277168						
ANR	4277288	Function	test_period_and_backslash_2	413:0:12181:12645							
ANR	4277289	FunctionDef	test_period_and_backslash_2 ()		4277288	0					
ANR	4277290	CompoundStatement		413:42:12223:12645	4277288	0					
ANR	4277291	ExpressionStatement	"emit_test ( ""Does a path with only a period then backslash return a period?"" )"	414:1:12226:12301	4277288	0	True				
ANR	4277292	CallExpression	"emit_test ( ""Does a path with only a period then backslash return a period?"" )"		4277288	0					
ANR	4277293	Callee	emit_test		4277288	0					
ANR	4277294	Identifier	emit_test		4277288	0					
ANR	4277295	ArgumentList	"""Does a path with only a period then backslash return a period?"""		4277288	1					
ANR	4277296	Argument	"""Does a path with only a period then backslash return a period?"""		4277288	0					
ANR	4277297	PrimaryExpression	"""Does a path with only a period then backslash return a period?"""		4277288	0					
ANR	4277298	IdentifierDeclStatement	"const char * param = "".\\\\"" ;"	415:1:12304:12329	4277288	1	True				
ANR	4277299	IdentifierDecl	"* param = "".\\\\"""		4277288	0					
ANR	4277300	IdentifierDeclType	const char *		4277288	0					
ANR	4277301	Identifier	param		4277288	1					
ANR	4277302	AssignmentExpression	"* param = "".\\\\"""		4277288	2		=			
ANR	4277303	Identifier	param		4277288	0					
ANR	4277304	PrimaryExpression	""".\\\\"""		4277288	1					
ANR	4277305	IdentifierDeclStatement	"const char * expect = ""."" ;"	416:1:12332:12356	4277288	2	True				
ANR	4277306	IdentifierDecl	"* expect = ""."""		4277288	0					
ANR	4277307	IdentifierDeclType	const char *		4277288	0					
ANR	4277308	Identifier	expect		4277288	1					
ANR	4277309	AssignmentExpression	"* expect = ""."""		4277288	2		=			
ANR	4277310	Identifier	expect		4277288	0					
ANR	4277311	PrimaryExpression	"""."""		4277288	1					
ANR	4277312	ExpressionStatement	emit_input_header ( )	417:1:12359:12378	4277288	3	True				
ANR	4277313	CallExpression	emit_input_header ( )		4277288	0					
ANR	4277314	Callee	emit_input_header		4277288	0					
ANR	4277315	Identifier	emit_input_header		4277288	0					
ANR	4277316	ArgumentList			4277288	1					
ANR	4277317	ExpressionStatement	"emit_param ( ""STRING"" , param )"	418:1:12381:12408	4277288	4	True				
ANR	4277318	CallExpression	"emit_param ( ""STRING"" , param )"		4277288	0					
ANR	4277319	Callee	emit_param		4277288	0					
ANR	4277320	Identifier	emit_param		4277288	0					
ANR	4277321	ArgumentList	"""STRING"""		4277288	1					
ANR	4277322	Argument	"""STRING"""		4277288	0					
ANR	4277323	PrimaryExpression	"""STRING"""		4277288	0					
ANR	4277324	Argument	param		4277288	1					
ANR	4277325	Identifier	param		4277288	0					
ANR	4277326	ExpressionStatement	emit_output_expected_header ( )	419:1:12411:12440	4277288	5	True				
ANR	4277327	CallExpression	emit_output_expected_header ( )		4277288	0					
ANR	4277328	Callee	emit_output_expected_header		4277288	0					
ANR	4277329	Identifier	emit_output_expected_header		4277288	0					
ANR	4277330	ArgumentList			4277288	1					
ANR	4277331	ExpressionStatement	"emit_retval ( ""%s"" , expect )"	420:1:12443:12468	4277288	6	True				
ANR	4277332	CallExpression	"emit_retval ( ""%s"" , expect )"		4277288	0					
ANR	4277333	Callee	emit_retval		4277288	0					
ANR	4277334	Identifier	emit_retval		4277288	0					
ANR	4277335	ArgumentList	"""%s"""		4277288	1					
ANR	4277336	Argument	"""%s"""		4277288	0					
ANR	4277337	PrimaryExpression	"""%s"""		4277288	0					
ANR	4277338	Argument	expect		4277288	1					
ANR	4277339	Identifier	expect		4277288	0					
ANR	4277340	IdentifierDeclStatement	char * path = condor_dirname ( param ) ;	421:1:12471:12505	4277288	7	True				
ANR	4277341	IdentifierDecl	* path = condor_dirname ( param )		4277288	0					
ANR	4277342	IdentifierDeclType	char *		4277288	0					
ANR	4277343	Identifier	path		4277288	1					
ANR	4277344	AssignmentExpression	* path = condor_dirname ( param )		4277288	2		=			
ANR	4277345	Identifier	path		4277288	0					
ANR	4277346	CallExpression	condor_dirname ( param )		4277288	1					
ANR	4277347	Callee	condor_dirname		4277288	0					
ANR	4277348	Identifier	condor_dirname		4277288	0					
ANR	4277349	ArgumentList	param		4277288	1					
ANR	4277350	Argument	param		4277288	0					
ANR	4277351	Identifier	param		4277288	0					
ANR	4277352	ExpressionStatement	emit_output_actual_header ( )	422:1:12508:12535	4277288	8	True				
ANR	4277353	CallExpression	emit_output_actual_header ( )		4277288	0					
ANR	4277354	Callee	emit_output_actual_header		4277288	0					
ANR	4277355	Identifier	emit_output_actual_header		4277288	0					
ANR	4277356	ArgumentList			4277288	1					
ANR	4277357	ExpressionStatement	"emit_retval ( ""%s"" , path )"	423:1:12538:12561	4277288	9	True				
ANR	4277358	CallExpression	"emit_retval ( ""%s"" , path )"		4277288	0					
ANR	4277359	Callee	emit_retval		4277288	0					
ANR	4277360	Identifier	emit_retval		4277288	0					
ANR	4277361	ArgumentList	"""%s"""		4277288	1					
ANR	4277362	Argument	"""%s"""		4277288	0					
ANR	4277363	PrimaryExpression	"""%s"""		4277288	0					
ANR	4277364	Argument	path		4277288	1					
ANR	4277365	Identifier	path		4277288	0					
ANR	4277366	IfStatement	"if ( strcmp ( path , expect ) != MATCH )"		4277288	10					
ANR	4277367	Condition	"strcmp ( path , expect ) != MATCH"	424:4:12567:12595	4277288	0	True				
ANR	4277368	EqualityExpression	"strcmp ( path , expect ) != MATCH"		4277288	0		!=			
ANR	4277369	CallExpression	"strcmp ( path , expect )"		4277288	0					
ANR	4277370	Callee	strcmp		4277288	0					
ANR	4277371	Identifier	strcmp		4277288	0					
ANR	4277372	ArgumentList	path		4277288	1					
ANR	4277373	Argument	path		4277288	0					
ANR	4277374	Identifier	path		4277288	0					
ANR	4277375	Argument	expect		4277288	1					
ANR	4277376	Identifier	expect		4277288	0					
ANR	4277377	Identifier	MATCH		4277288	1					
ANR	4277378	CompoundStatement		12:35:374:374	4277288	1					
ANR	4277379	ExpressionStatement	free ( path )	425:2:12602:12612	4277288	0	True				
ANR	4277380	CallExpression	free ( path )		4277288	0					
ANR	4277381	Callee	free		4277288	0					
ANR	4277382	Identifier	free		4277288	0					
ANR	4277383	ArgumentList	path		4277288	1					
ANR	4277384	Argument	path		4277288	0					
ANR	4277385	Identifier	path		4277288	0					
ANR	4277386	ExpressionStatement	FAIL	426:2:12616:12620	4277288	1	True				
ANR	4277387	Identifier	FAIL		4277288	0					
ANR	4277388	ExpressionStatement	free ( path )	428:1:12626:12636	4277288	11	True				
ANR	4277389	CallExpression	free ( path )		4277288	0					
ANR	4277390	Callee	free		4277288	0					
ANR	4277391	Identifier	free		4277288	0					
ANR	4277392	ArgumentList	path		4277288	1					
ANR	4277393	Argument	path		4277288	0					
ANR	4277394	Identifier	path		4277288	0					
ANR	4277395	ExpressionStatement	PASS	429:1:12639:12643	4277288	12	True				
ANR	4277396	Identifier	PASS		4277288	0					
ANR	4277397	ReturnType	static bool		4277288	1					
ANR	4277398	Identifier	test_period_and_backslash_2		4277288	2					
ANR	4277399	ParameterList			4277288	3					
ANR	4277400	CFGEntryNode	ENTRY		4277288		True				
ANR	4277401	CFGExitNode	EXIT		4277288		True				
ANR	4277402	Symbol	strcmp		4277288						
ANR	4277403	Symbol	expect		4277288						
ANR	4277404	Symbol	path		4277288						
ANR	4277405	Symbol	param		4277288						
ANR	4277406	Symbol	condor_dirname		4277288						
ANR	4277407	Symbol	MATCH		4277288						
ANR	4277408	Function	test_backslash_and_period	432:0:12648:13116							
ANR	4277409	FunctionDef	test_backslash_and_period ()		4277408	0					
ANR	4277410	CompoundStatement		432:40:12688:13116	4277408	0					
ANR	4277411	ExpressionStatement	"emit_test ( ""Does a path with only a backslash then a period return a backslash?"" )"	433:1:12691:12771	4277408	0	True				
ANR	4277412	CallExpression	"emit_test ( ""Does a path with only a backslash then a period return a backslash?"" )"		4277408	0					
ANR	4277413	Callee	emit_test		4277408	0					
ANR	4277414	Identifier	emit_test		4277408	0					
ANR	4277415	ArgumentList	"""Does a path with only a backslash then a period return a backslash?"""		4277408	1					
ANR	4277416	Argument	"""Does a path with only a backslash then a period return a backslash?"""		4277408	0					
ANR	4277417	PrimaryExpression	"""Does a path with only a backslash then a period return a backslash?"""		4277408	0					
ANR	4277418	IdentifierDeclStatement	"const char * param = ""\\\\."" ;"	434:1:12774:12799	4277408	1	True				
ANR	4277419	IdentifierDecl	"* param = ""\\\\."""		4277408	0					
ANR	4277420	IdentifierDeclType	const char *		4277408	0					
ANR	4277421	Identifier	param		4277408	1					
ANR	4277422	AssignmentExpression	"* param = ""\\\\."""		4277408	2		=			
ANR	4277423	Identifier	param		4277408	0					
ANR	4277424	PrimaryExpression	"""\\\\."""		4277408	1					
ANR	4277425	IdentifierDeclStatement	"const char * expect = ""\\\\"" ;"	435:1:12802:12827	4277408	2	True				
ANR	4277426	IdentifierDecl	"* expect = ""\\\\"""		4277408	0					
ANR	4277427	IdentifierDeclType	const char *		4277408	0					
ANR	4277428	Identifier	expect		4277408	1					
ANR	4277429	AssignmentExpression	"* expect = ""\\\\"""		4277408	2		=			
ANR	4277430	Identifier	expect		4277408	0					
ANR	4277431	PrimaryExpression	"""\\\\"""		4277408	1					
ANR	4277432	ExpressionStatement	emit_input_header ( )	436:1:12830:12849	4277408	3	True				
ANR	4277433	CallExpression	emit_input_header ( )		4277408	0					
ANR	4277434	Callee	emit_input_header		4277408	0					
ANR	4277435	Identifier	emit_input_header		4277408	0					
ANR	4277436	ArgumentList			4277408	1					
ANR	4277437	ExpressionStatement	"emit_param ( ""STRING"" , param )"	437:1:12852:12879	4277408	4	True				
ANR	4277438	CallExpression	"emit_param ( ""STRING"" , param )"		4277408	0					
ANR	4277439	Callee	emit_param		4277408	0					
ANR	4277440	Identifier	emit_param		4277408	0					
ANR	4277441	ArgumentList	"""STRING"""		4277408	1					
ANR	4277442	Argument	"""STRING"""		4277408	0					
ANR	4277443	PrimaryExpression	"""STRING"""		4277408	0					
ANR	4277444	Argument	param		4277408	1					
ANR	4277445	Identifier	param		4277408	0					
ANR	4277446	ExpressionStatement	emit_output_expected_header ( )	438:1:12882:12911	4277408	5	True				
ANR	4277447	CallExpression	emit_output_expected_header ( )		4277408	0					
ANR	4277448	Callee	emit_output_expected_header		4277408	0					
ANR	4277449	Identifier	emit_output_expected_header		4277408	0					
ANR	4277450	ArgumentList			4277408	1					
ANR	4277451	ExpressionStatement	"emit_retval ( ""%s"" , expect )"	439:1:12914:12939	4277408	6	True				
ANR	4277452	CallExpression	"emit_retval ( ""%s"" , expect )"		4277408	0					
ANR	4277453	Callee	emit_retval		4277408	0					
ANR	4277454	Identifier	emit_retval		4277408	0					
ANR	4277455	ArgumentList	"""%s"""		4277408	1					
ANR	4277456	Argument	"""%s"""		4277408	0					
ANR	4277457	PrimaryExpression	"""%s"""		4277408	0					
ANR	4277458	Argument	expect		4277408	1					
ANR	4277459	Identifier	expect		4277408	0					
ANR	4277460	IdentifierDeclStatement	char * path = condor_dirname ( param ) ;	440:1:12942:12976	4277408	7	True				
ANR	4277461	IdentifierDecl	* path = condor_dirname ( param )		4277408	0					
ANR	4277462	IdentifierDeclType	char *		4277408	0					
ANR	4277463	Identifier	path		4277408	1					
ANR	4277464	AssignmentExpression	* path = condor_dirname ( param )		4277408	2		=			
ANR	4277465	Identifier	path		4277408	0					
ANR	4277466	CallExpression	condor_dirname ( param )		4277408	1					
ANR	4277467	Callee	condor_dirname		4277408	0					
ANR	4277468	Identifier	condor_dirname		4277408	0					
ANR	4277469	ArgumentList	param		4277408	1					
ANR	4277470	Argument	param		4277408	0					
ANR	4277471	Identifier	param		4277408	0					
ANR	4277472	ExpressionStatement	emit_output_actual_header ( )	441:1:12979:13006	4277408	8	True				
ANR	4277473	CallExpression	emit_output_actual_header ( )		4277408	0					
ANR	4277474	Callee	emit_output_actual_header		4277408	0					
ANR	4277475	Identifier	emit_output_actual_header		4277408	0					
ANR	4277476	ArgumentList			4277408	1					
ANR	4277477	ExpressionStatement	"emit_retval ( ""%s"" , path )"	442:1:13009:13032	4277408	9	True				
ANR	4277478	CallExpression	"emit_retval ( ""%s"" , path )"		4277408	0					
ANR	4277479	Callee	emit_retval		4277408	0					
ANR	4277480	Identifier	emit_retval		4277408	0					
ANR	4277481	ArgumentList	"""%s"""		4277408	1					
ANR	4277482	Argument	"""%s"""		4277408	0					
ANR	4277483	PrimaryExpression	"""%s"""		4277408	0					
ANR	4277484	Argument	path		4277408	1					
ANR	4277485	Identifier	path		4277408	0					
ANR	4277486	IfStatement	"if ( strcmp ( path , expect ) != MATCH )"		4277408	10					
ANR	4277487	Condition	"strcmp ( path , expect ) != MATCH"	443:4:13038:13066	4277408	0	True				
ANR	4277488	EqualityExpression	"strcmp ( path , expect ) != MATCH"		4277408	0		!=			
ANR	4277489	CallExpression	"strcmp ( path , expect )"		4277408	0					
ANR	4277490	Callee	strcmp		4277408	0					
ANR	4277491	Identifier	strcmp		4277408	0					
ANR	4277492	ArgumentList	path		4277408	1					
ANR	4277493	Argument	path		4277408	0					
ANR	4277494	Identifier	path		4277408	0					
ANR	4277495	Argument	expect		4277408	1					
ANR	4277496	Identifier	expect		4277408	0					
ANR	4277497	Identifier	MATCH		4277408	1					
ANR	4277498	CompoundStatement		12:35:380:380	4277408	1					
ANR	4277499	ExpressionStatement	free ( path )	444:2:13073:13083	4277408	0	True				
ANR	4277500	CallExpression	free ( path )		4277408	0					
ANR	4277501	Callee	free		4277408	0					
ANR	4277502	Identifier	free		4277408	0					
ANR	4277503	ArgumentList	path		4277408	1					
ANR	4277504	Argument	path		4277408	0					
ANR	4277505	Identifier	path		4277408	0					
ANR	4277506	ExpressionStatement	FAIL	445:2:13087:13091	4277408	1	True				
ANR	4277507	Identifier	FAIL		4277408	0					
ANR	4277508	ExpressionStatement	free ( path )	447:1:13097:13107	4277408	11	True				
ANR	4277509	CallExpression	free ( path )		4277408	0					
ANR	4277510	Callee	free		4277408	0					
ANR	4277511	Identifier	free		4277408	0					
ANR	4277512	ArgumentList	path		4277408	1					
ANR	4277513	Argument	path		4277408	0					
ANR	4277514	Identifier	path		4277408	0					
ANR	4277515	ExpressionStatement	PASS	448:1:13110:13114	4277408	12	True				
ANR	4277516	Identifier	PASS		4277408	0					
ANR	4277517	ReturnType	static bool		4277408	1					
ANR	4277518	Identifier	test_backslash_and_period		4277408	2					
ANR	4277519	ParameterList			4277408	3					
ANR	4277520	CFGEntryNode	ENTRY		4277408		True				
ANR	4277521	CFGExitNode	EXIT		4277408		True				
ANR	4277522	Symbol	strcmp		4277408						
ANR	4277523	Symbol	expect		4277408						
ANR	4277524	Symbol	path		4277408						
ANR	4277525	Symbol	param		4277408						
ANR	4277526	Symbol	condor_dirname		4277408						
ANR	4277527	Symbol	MATCH		4277408						
ANR	4277528	Function	test_forward_slash_and_file_extension	451:0:13119:13640							
ANR	4277529	FunctionDef	test_forward_slash_and_file_extension ()		4277528	0					
ANR	4277530	CompoundStatement		451:52:13171:13640	4277528	0					
ANR	4277531	ExpressionStatement	"emit_test ( ""Does a path with two directories and a file extension return the the full parent directory?"" )"	452:1:13174:13278	4277528	0	True				
ANR	4277532	CallExpression	"emit_test ( ""Does a path with two directories and a file extension return the the full parent directory?"" )"		4277528	0					
ANR	4277533	Callee	emit_test		4277528	0					
ANR	4277534	Identifier	emit_test		4277528	0					
ANR	4277535	ArgumentList	"""Does a path with two directories and a file extension return the the full parent directory?"""		4277528	1					
ANR	4277536	Argument	"""Does a path with two directories and a file extension return the the full parent directory?"""		4277528	0					
ANR	4277537	PrimaryExpression	"""Does a path with two directories and a file extension return the the full parent directory?"""		4277528	0					
ANR	4277538	IdentifierDeclStatement	"const char * param = ""foo/bar/zap.txt"" ;"	453:1:13281:13318	4277528	1	True				
ANR	4277539	IdentifierDecl	"* param = ""foo/bar/zap.txt"""		4277528	0					
ANR	4277540	IdentifierDeclType	const char *		4277528	0					
ANR	4277541	Identifier	param		4277528	1					
ANR	4277542	AssignmentExpression	"* param = ""foo/bar/zap.txt"""		4277528	2		=			
ANR	4277543	Identifier	param		4277528	0					
ANR	4277544	PrimaryExpression	"""foo/bar/zap.txt"""		4277528	1					
ANR	4277545	IdentifierDeclStatement	"const char * expect = ""foo/bar"" ;"	454:1:13321:13351	4277528	2	True				
ANR	4277546	IdentifierDecl	"* expect = ""foo/bar"""		4277528	0					
ANR	4277547	IdentifierDeclType	const char *		4277528	0					
ANR	4277548	Identifier	expect		4277528	1					
ANR	4277549	AssignmentExpression	"* expect = ""foo/bar"""		4277528	2		=			
ANR	4277550	Identifier	expect		4277528	0					
ANR	4277551	PrimaryExpression	"""foo/bar"""		4277528	1					
ANR	4277552	ExpressionStatement	emit_input_header ( )	455:1:13354:13373	4277528	3	True				
ANR	4277553	CallExpression	emit_input_header ( )		4277528	0					
ANR	4277554	Callee	emit_input_header		4277528	0					
ANR	4277555	Identifier	emit_input_header		4277528	0					
ANR	4277556	ArgumentList			4277528	1					
ANR	4277557	ExpressionStatement	"emit_param ( ""STRING"" , param )"	456:1:13376:13403	4277528	4	True				
ANR	4277558	CallExpression	"emit_param ( ""STRING"" , param )"		4277528	0					
ANR	4277559	Callee	emit_param		4277528	0					
ANR	4277560	Identifier	emit_param		4277528	0					
ANR	4277561	ArgumentList	"""STRING"""		4277528	1					
ANR	4277562	Argument	"""STRING"""		4277528	0					
ANR	4277563	PrimaryExpression	"""STRING"""		4277528	0					
ANR	4277564	Argument	param		4277528	1					
ANR	4277565	Identifier	param		4277528	0					
ANR	4277566	ExpressionStatement	emit_output_expected_header ( )	457:1:13406:13435	4277528	5	True				
ANR	4277567	CallExpression	emit_output_expected_header ( )		4277528	0					
ANR	4277568	Callee	emit_output_expected_header		4277528	0					
ANR	4277569	Identifier	emit_output_expected_header		4277528	0					
ANR	4277570	ArgumentList			4277528	1					
ANR	4277571	ExpressionStatement	"emit_retval ( ""%s"" , expect )"	458:1:13438:13463	4277528	6	True				
ANR	4277572	CallExpression	"emit_retval ( ""%s"" , expect )"		4277528	0					
ANR	4277573	Callee	emit_retval		4277528	0					
ANR	4277574	Identifier	emit_retval		4277528	0					
ANR	4277575	ArgumentList	"""%s"""		4277528	1					
ANR	4277576	Argument	"""%s"""		4277528	0					
ANR	4277577	PrimaryExpression	"""%s"""		4277528	0					
ANR	4277578	Argument	expect		4277528	1					
ANR	4277579	Identifier	expect		4277528	0					
ANR	4277580	IdentifierDeclStatement	char * path = condor_dirname ( param ) ;	459:1:13466:13500	4277528	7	True				
ANR	4277581	IdentifierDecl	* path = condor_dirname ( param )		4277528	0					
ANR	4277582	IdentifierDeclType	char *		4277528	0					
ANR	4277583	Identifier	path		4277528	1					
ANR	4277584	AssignmentExpression	* path = condor_dirname ( param )		4277528	2		=			
ANR	4277585	Identifier	path		4277528	0					
ANR	4277586	CallExpression	condor_dirname ( param )		4277528	1					
ANR	4277587	Callee	condor_dirname		4277528	0					
ANR	4277588	Identifier	condor_dirname		4277528	0					
ANR	4277589	ArgumentList	param		4277528	1					
ANR	4277590	Argument	param		4277528	0					
ANR	4277591	Identifier	param		4277528	0					
ANR	4277592	ExpressionStatement	emit_output_actual_header ( )	460:1:13503:13530	4277528	8	True				
ANR	4277593	CallExpression	emit_output_actual_header ( )		4277528	0					
ANR	4277594	Callee	emit_output_actual_header		4277528	0					
ANR	4277595	Identifier	emit_output_actual_header		4277528	0					
ANR	4277596	ArgumentList			4277528	1					
ANR	4277597	ExpressionStatement	"emit_retval ( ""%s"" , path )"	461:1:13533:13556	4277528	9	True				
ANR	4277598	CallExpression	"emit_retval ( ""%s"" , path )"		4277528	0					
ANR	4277599	Callee	emit_retval		4277528	0					
ANR	4277600	Identifier	emit_retval		4277528	0					
ANR	4277601	ArgumentList	"""%s"""		4277528	1					
ANR	4277602	Argument	"""%s"""		4277528	0					
ANR	4277603	PrimaryExpression	"""%s"""		4277528	0					
ANR	4277604	Argument	path		4277528	1					
ANR	4277605	Identifier	path		4277528	0					
ANR	4277606	IfStatement	"if ( strcmp ( path , expect ) != MATCH )"		4277528	10					
ANR	4277607	Condition	"strcmp ( path , expect ) != MATCH"	462:4:13562:13590	4277528	0	True				
ANR	4277608	EqualityExpression	"strcmp ( path , expect ) != MATCH"		4277528	0		!=			
ANR	4277609	CallExpression	"strcmp ( path , expect )"		4277528	0					
ANR	4277610	Callee	strcmp		4277528	0					
ANR	4277611	Identifier	strcmp		4277528	0					
ANR	4277612	ArgumentList	path		4277528	1					
ANR	4277613	Argument	path		4277528	0					
ANR	4277614	Identifier	path		4277528	0					
ANR	4277615	Argument	expect		4277528	1					
ANR	4277616	Identifier	expect		4277528	0					
ANR	4277617	Identifier	MATCH		4277528	1					
ANR	4277618	CompoundStatement		12:35:421:421	4277528	1					
ANR	4277619	ExpressionStatement	free ( path )	463:2:13597:13607	4277528	0	True				
ANR	4277620	CallExpression	free ( path )		4277528	0					
ANR	4277621	Callee	free		4277528	0					
ANR	4277622	Identifier	free		4277528	0					
ANR	4277623	ArgumentList	path		4277528	1					
ANR	4277624	Argument	path		4277528	0					
ANR	4277625	Identifier	path		4277528	0					
ANR	4277626	ExpressionStatement	FAIL	464:2:13611:13615	4277528	1	True				
ANR	4277627	Identifier	FAIL		4277528	0					
ANR	4277628	ExpressionStatement	free ( path )	466:1:13621:13631	4277528	11	True				
ANR	4277629	CallExpression	free ( path )		4277528	0					
ANR	4277630	Callee	free		4277528	0					
ANR	4277631	Identifier	free		4277528	0					
ANR	4277632	ArgumentList	path		4277528	1					
ANR	4277633	Argument	path		4277528	0					
ANR	4277634	Identifier	path		4277528	0					
ANR	4277635	ExpressionStatement	PASS	467:1:13634:13638	4277528	12	True				
ANR	4277636	Identifier	PASS		4277528	0					
ANR	4277637	ReturnType	static bool		4277528	1					
ANR	4277638	Identifier	test_forward_slash_and_file_extension		4277528	2					
ANR	4277639	ParameterList			4277528	3					
ANR	4277640	CFGEntryNode	ENTRY		4277528		True				
ANR	4277641	CFGExitNode	EXIT		4277528		True				
ANR	4277642	Symbol	strcmp		4277528						
ANR	4277643	Symbol	expect		4277528						
ANR	4277644	Symbol	path		4277528						
ANR	4277645	Symbol	param		4277528						
ANR	4277646	Symbol	condor_dirname		4277528						
ANR	4277647	Symbol	MATCH		4277528						
ANR	4277648	Function	test_backslash_and_file_extension	470:0:13643:14177							
ANR	4277649	FunctionDef	test_backslash_and_file_extension ()		4277648	0					
ANR	4277650	CompoundStatement		470:48:13691:14177	4277648	0					
ANR	4277651	ExpressionStatement	"emit_test ( ""Does a path with two directories and a file extension using backslashes return the full parent directory?"" )"	471:1:13694:13812	4277648	0	True				
ANR	4277652	CallExpression	"emit_test ( ""Does a path with two directories and a file extension using backslashes return the full parent directory?"" )"		4277648	0					
ANR	4277653	Callee	emit_test		4277648	0					
ANR	4277654	Identifier	emit_test		4277648	0					
ANR	4277655	ArgumentList	"""Does a path with two directories and a file extension using backslashes return the full parent directory?"""		4277648	1					
ANR	4277656	Argument	"""Does a path with two directories and a file extension using backslashes return the full parent directory?"""		4277648	0					
ANR	4277657	PrimaryExpression	"""Does a path with two directories and a file extension using backslashes return the full parent directory?"""		4277648	0					
ANR	4277658	IdentifierDeclStatement	"const char * param = ""foo\\\\bar\\\\zap.txt"" ;"	472:1:13815:13854	4277648	1	True				
ANR	4277659	IdentifierDecl	"* param = ""foo\\\\bar\\\\zap.txt"""		4277648	0					
ANR	4277660	IdentifierDeclType	const char *		4277648	0					
ANR	4277661	Identifier	param		4277648	1					
ANR	4277662	AssignmentExpression	"* param = ""foo\\\\bar\\\\zap.txt"""		4277648	2		=			
ANR	4277663	Identifier	param		4277648	0					
ANR	4277664	PrimaryExpression	"""foo\\\\bar\\\\zap.txt"""		4277648	1					
ANR	4277665	IdentifierDeclStatement	"const char * expect = ""foo\\\\bar"" ;"	473:1:13857:13888	4277648	2	True				
ANR	4277666	IdentifierDecl	"* expect = ""foo\\\\bar"""		4277648	0					
ANR	4277667	IdentifierDeclType	const char *		4277648	0					
ANR	4277668	Identifier	expect		4277648	1					
ANR	4277669	AssignmentExpression	"* expect = ""foo\\\\bar"""		4277648	2		=			
ANR	4277670	Identifier	expect		4277648	0					
ANR	4277671	PrimaryExpression	"""foo\\\\bar"""		4277648	1					
ANR	4277672	ExpressionStatement	emit_input_header ( )	474:1:13891:13910	4277648	3	True				
ANR	4277673	CallExpression	emit_input_header ( )		4277648	0					
ANR	4277674	Callee	emit_input_header		4277648	0					
ANR	4277675	Identifier	emit_input_header		4277648	0					
ANR	4277676	ArgumentList			4277648	1					
ANR	4277677	ExpressionStatement	"emit_param ( ""STRING"" , param )"	475:1:13913:13940	4277648	4	True				
ANR	4277678	CallExpression	"emit_param ( ""STRING"" , param )"		4277648	0					
ANR	4277679	Callee	emit_param		4277648	0					
ANR	4277680	Identifier	emit_param		4277648	0					
ANR	4277681	ArgumentList	"""STRING"""		4277648	1					
ANR	4277682	Argument	"""STRING"""		4277648	0					
ANR	4277683	PrimaryExpression	"""STRING"""		4277648	0					
ANR	4277684	Argument	param		4277648	1					
ANR	4277685	Identifier	param		4277648	0					
ANR	4277686	ExpressionStatement	emit_output_expected_header ( )	476:1:13943:13972	4277648	5	True				
ANR	4277687	CallExpression	emit_output_expected_header ( )		4277648	0					
ANR	4277688	Callee	emit_output_expected_header		4277648	0					
ANR	4277689	Identifier	emit_output_expected_header		4277648	0					
ANR	4277690	ArgumentList			4277648	1					
ANR	4277691	ExpressionStatement	"emit_retval ( ""%s"" , expect )"	477:1:13975:14000	4277648	6	True				
ANR	4277692	CallExpression	"emit_retval ( ""%s"" , expect )"		4277648	0					
ANR	4277693	Callee	emit_retval		4277648	0					
ANR	4277694	Identifier	emit_retval		4277648	0					
ANR	4277695	ArgumentList	"""%s"""		4277648	1					
ANR	4277696	Argument	"""%s"""		4277648	0					
ANR	4277697	PrimaryExpression	"""%s"""		4277648	0					
ANR	4277698	Argument	expect		4277648	1					
ANR	4277699	Identifier	expect		4277648	0					
ANR	4277700	IdentifierDeclStatement	char * path = condor_dirname ( param ) ;	478:1:14003:14037	4277648	7	True				
ANR	4277701	IdentifierDecl	* path = condor_dirname ( param )		4277648	0					
ANR	4277702	IdentifierDeclType	char *		4277648	0					
ANR	4277703	Identifier	path		4277648	1					
ANR	4277704	AssignmentExpression	* path = condor_dirname ( param )		4277648	2		=			
ANR	4277705	Identifier	path		4277648	0					
ANR	4277706	CallExpression	condor_dirname ( param )		4277648	1					
ANR	4277707	Callee	condor_dirname		4277648	0					
ANR	4277708	Identifier	condor_dirname		4277648	0					
ANR	4277709	ArgumentList	param		4277648	1					
ANR	4277710	Argument	param		4277648	0					
ANR	4277711	Identifier	param		4277648	0					
ANR	4277712	ExpressionStatement	emit_output_actual_header ( )	479:1:14040:14067	4277648	8	True				
ANR	4277713	CallExpression	emit_output_actual_header ( )		4277648	0					
ANR	4277714	Callee	emit_output_actual_header		4277648	0					
ANR	4277715	Identifier	emit_output_actual_header		4277648	0					
ANR	4277716	ArgumentList			4277648	1					
ANR	4277717	ExpressionStatement	"emit_retval ( ""%s"" , path )"	480:1:14070:14093	4277648	9	True				
ANR	4277718	CallExpression	"emit_retval ( ""%s"" , path )"		4277648	0					
ANR	4277719	Callee	emit_retval		4277648	0					
ANR	4277720	Identifier	emit_retval		4277648	0					
ANR	4277721	ArgumentList	"""%s"""		4277648	1					
ANR	4277722	Argument	"""%s"""		4277648	0					
ANR	4277723	PrimaryExpression	"""%s"""		4277648	0					
ANR	4277724	Argument	path		4277648	1					
ANR	4277725	Identifier	path		4277648	0					
ANR	4277726	IfStatement	"if ( strcmp ( path , expect ) != MATCH )"		4277648	10					
ANR	4277727	Condition	"strcmp ( path , expect ) != MATCH"	481:4:14099:14127	4277648	0	True				
ANR	4277728	EqualityExpression	"strcmp ( path , expect ) != MATCH"		4277648	0		!=			
ANR	4277729	CallExpression	"strcmp ( path , expect )"		4277648	0					
ANR	4277730	Callee	strcmp		4277648	0					
ANR	4277731	Identifier	strcmp		4277648	0					
ANR	4277732	ArgumentList	path		4277648	1					
ANR	4277733	Argument	path		4277648	0					
ANR	4277734	Identifier	path		4277648	0					
ANR	4277735	Argument	expect		4277648	1					
ANR	4277736	Identifier	expect		4277648	0					
ANR	4277737	Identifier	MATCH		4277648	1					
ANR	4277738	CompoundStatement		12:35:438:438	4277648	1					
ANR	4277739	ExpressionStatement	free ( path )	482:2:14134:14144	4277648	0	True				
ANR	4277740	CallExpression	free ( path )		4277648	0					
ANR	4277741	Callee	free		4277648	0					
ANR	4277742	Identifier	free		4277648	0					
ANR	4277743	ArgumentList	path		4277648	1					
ANR	4277744	Argument	path		4277648	0					
ANR	4277745	Identifier	path		4277648	0					
ANR	4277746	ExpressionStatement	FAIL	483:2:14148:14152	4277648	1	True				
ANR	4277747	Identifier	FAIL		4277648	0					
ANR	4277748	ExpressionStatement	free ( path )	485:1:14158:14168	4277648	11	True				
ANR	4277749	CallExpression	free ( path )		4277648	0					
ANR	4277750	Callee	free		4277648	0					
ANR	4277751	Identifier	free		4277648	0					
ANR	4277752	ArgumentList	path		4277648	1					
ANR	4277753	Argument	path		4277648	0					
ANR	4277754	Identifier	path		4277648	0					
ANR	4277755	ExpressionStatement	PASS	486:1:14171:14175	4277648	12	True				
ANR	4277756	Identifier	PASS		4277648	0					
ANR	4277757	ReturnType	static bool		4277648	1					
ANR	4277758	Identifier	test_backslash_and_file_extension		4277648	2					
ANR	4277759	ParameterList			4277648	3					
ANR	4277760	CFGEntryNode	ENTRY		4277648		True				
ANR	4277761	CFGExitNode	EXIT		4277648		True				
ANR	4277762	Symbol	strcmp		4277648						
ANR	4277763	Symbol	expect		4277648						
ANR	4277764	Symbol	path		4277648						
ANR	4277765	Symbol	param		4277648						
ANR	4277766	Symbol	condor_dirname		4277648						
ANR	4277767	Symbol	MATCH		4277648						
ANR	4277768	Function	test_period_and_forward_slash	489:0:14180:14671							
ANR	4277769	FunctionDef	test_period_and_forward_slash ()		4277768	0					
ANR	4277770	CompoundStatement		489:44:14224:14671	4277768	0					
ANR	4277771	ExpressionStatement	"emit_test ( ""Does a path using both a period and a forward slash return the parent directory"" )"	490:1:14227:14319	4277768	0	True				
ANR	4277772	CallExpression	"emit_test ( ""Does a path using both a period and a forward slash return the parent directory"" )"		4277768	0					
ANR	4277773	Callee	emit_test		4277768	0					
ANR	4277774	Identifier	emit_test		4277768	0					
ANR	4277775	ArgumentList	"""Does a path using both a period and a forward slash return the parent directory"""		4277768	1					
ANR	4277776	Argument	"""Does a path using both a period and a forward slash return the parent directory"""		4277768	0					
ANR	4277777	PrimaryExpression	"""Does a path using both a period and a forward slash return the parent directory"""		4277768	0					
ANR	4277778	IdentifierDeclStatement	"const char * param = "".foo/bar"" ;"	491:1:14322:14352	4277768	1	True				
ANR	4277779	IdentifierDecl	"* param = "".foo/bar"""		4277768	0					
ANR	4277780	IdentifierDeclType	const char *		4277768	0					
ANR	4277781	Identifier	param		4277768	1					
ANR	4277782	AssignmentExpression	"* param = "".foo/bar"""		4277768	2		=			
ANR	4277783	Identifier	param		4277768	0					
ANR	4277784	PrimaryExpression	""".foo/bar"""		4277768	1					
ANR	4277785	IdentifierDeclStatement	"const char * expect = "".foo"" ;"	492:1:14355:14382	4277768	2	True				
ANR	4277786	IdentifierDecl	"* expect = "".foo"""		4277768	0					
ANR	4277787	IdentifierDeclType	const char *		4277768	0					
ANR	4277788	Identifier	expect		4277768	1					
ANR	4277789	AssignmentExpression	"* expect = "".foo"""		4277768	2		=			
ANR	4277790	Identifier	expect		4277768	0					
ANR	4277791	PrimaryExpression	""".foo"""		4277768	1					
ANR	4277792	ExpressionStatement	emit_input_header ( )	493:1:14385:14404	4277768	3	True				
ANR	4277793	CallExpression	emit_input_header ( )		4277768	0					
ANR	4277794	Callee	emit_input_header		4277768	0					
ANR	4277795	Identifier	emit_input_header		4277768	0					
ANR	4277796	ArgumentList			4277768	1					
ANR	4277797	ExpressionStatement	"emit_param ( ""STRING"" , param )"	494:1:14407:14434	4277768	4	True				
ANR	4277798	CallExpression	"emit_param ( ""STRING"" , param )"		4277768	0					
ANR	4277799	Callee	emit_param		4277768	0					
ANR	4277800	Identifier	emit_param		4277768	0					
ANR	4277801	ArgumentList	"""STRING"""		4277768	1					
ANR	4277802	Argument	"""STRING"""		4277768	0					
ANR	4277803	PrimaryExpression	"""STRING"""		4277768	0					
ANR	4277804	Argument	param		4277768	1					
ANR	4277805	Identifier	param		4277768	0					
ANR	4277806	ExpressionStatement	emit_output_expected_header ( )	495:1:14437:14466	4277768	5	True				
ANR	4277807	CallExpression	emit_output_expected_header ( )		4277768	0					
ANR	4277808	Callee	emit_output_expected_header		4277768	0					
ANR	4277809	Identifier	emit_output_expected_header		4277768	0					
ANR	4277810	ArgumentList			4277768	1					
ANR	4277811	ExpressionStatement	"emit_retval ( ""%s"" , expect )"	496:1:14469:14494	4277768	6	True				
ANR	4277812	CallExpression	"emit_retval ( ""%s"" , expect )"		4277768	0					
ANR	4277813	Callee	emit_retval		4277768	0					
ANR	4277814	Identifier	emit_retval		4277768	0					
ANR	4277815	ArgumentList	"""%s"""		4277768	1					
ANR	4277816	Argument	"""%s"""		4277768	0					
ANR	4277817	PrimaryExpression	"""%s"""		4277768	0					
ANR	4277818	Argument	expect		4277768	1					
ANR	4277819	Identifier	expect		4277768	0					
ANR	4277820	IdentifierDeclStatement	char * path = condor_dirname ( param ) ;	497:1:14497:14531	4277768	7	True				
ANR	4277821	IdentifierDecl	* path = condor_dirname ( param )		4277768	0					
ANR	4277822	IdentifierDeclType	char *		4277768	0					
ANR	4277823	Identifier	path		4277768	1					
ANR	4277824	AssignmentExpression	* path = condor_dirname ( param )		4277768	2		=			
ANR	4277825	Identifier	path		4277768	0					
ANR	4277826	CallExpression	condor_dirname ( param )		4277768	1					
ANR	4277827	Callee	condor_dirname		4277768	0					
ANR	4277828	Identifier	condor_dirname		4277768	0					
ANR	4277829	ArgumentList	param		4277768	1					
ANR	4277830	Argument	param		4277768	0					
ANR	4277831	Identifier	param		4277768	0					
ANR	4277832	ExpressionStatement	emit_output_actual_header ( )	498:1:14534:14561	4277768	8	True				
ANR	4277833	CallExpression	emit_output_actual_header ( )		4277768	0					
ANR	4277834	Callee	emit_output_actual_header		4277768	0					
ANR	4277835	Identifier	emit_output_actual_header		4277768	0					
ANR	4277836	ArgumentList			4277768	1					
ANR	4277837	ExpressionStatement	"emit_retval ( ""%s"" , path )"	499:1:14564:14587	4277768	9	True				
ANR	4277838	CallExpression	"emit_retval ( ""%s"" , path )"		4277768	0					
ANR	4277839	Callee	emit_retval		4277768	0					
ANR	4277840	Identifier	emit_retval		4277768	0					
ANR	4277841	ArgumentList	"""%s"""		4277768	1					
ANR	4277842	Argument	"""%s"""		4277768	0					
ANR	4277843	PrimaryExpression	"""%s"""		4277768	0					
ANR	4277844	Argument	path		4277768	1					
ANR	4277845	Identifier	path		4277768	0					
ANR	4277846	IfStatement	"if ( strcmp ( path , expect ) != MATCH )"		4277768	10					
ANR	4277847	Condition	"strcmp ( path , expect ) != MATCH"	500:4:14593:14621	4277768	0	True				
ANR	4277848	EqualityExpression	"strcmp ( path , expect ) != MATCH"		4277768	0		!=			
ANR	4277849	CallExpression	"strcmp ( path , expect )"		4277768	0					
ANR	4277850	Callee	strcmp		4277768	0					
ANR	4277851	Identifier	strcmp		4277768	0					
ANR	4277852	ArgumentList	path		4277768	1					
ANR	4277853	Argument	path		4277768	0					
ANR	4277854	Identifier	path		4277768	0					
ANR	4277855	Argument	expect		4277768	1					
ANR	4277856	Identifier	expect		4277768	0					
ANR	4277857	Identifier	MATCH		4277768	1					
ANR	4277858	CompoundStatement		12:35:399:399	4277768	1					
ANR	4277859	ExpressionStatement	free ( path )	501:2:14628:14638	4277768	0	True				
ANR	4277860	CallExpression	free ( path )		4277768	0					
ANR	4277861	Callee	free		4277768	0					
ANR	4277862	Identifier	free		4277768	0					
ANR	4277863	ArgumentList	path		4277768	1					
ANR	4277864	Argument	path		4277768	0					
ANR	4277865	Identifier	path		4277768	0					
ANR	4277866	ExpressionStatement	FAIL	502:2:14642:14646	4277768	1	True				
ANR	4277867	Identifier	FAIL		4277768	0					
ANR	4277868	ExpressionStatement	free ( path )	504:1:14652:14662	4277768	11	True				
ANR	4277869	CallExpression	free ( path )		4277768	0					
ANR	4277870	Callee	free		4277768	0					
ANR	4277871	Identifier	free		4277768	0					
ANR	4277872	ArgumentList	path		4277768	1					
ANR	4277873	Argument	path		4277768	0					
ANR	4277874	Identifier	path		4277768	0					
ANR	4277875	ExpressionStatement	PASS	505:1:14665:14669	4277768	12	True				
ANR	4277876	Identifier	PASS		4277768	0					
ANR	4277877	ReturnType	static bool		4277768	1					
ANR	4277878	Identifier	test_period_and_forward_slash		4277768	2					
ANR	4277879	ParameterList			4277768	3					
ANR	4277880	CFGEntryNode	ENTRY		4277768		True				
ANR	4277881	CFGExitNode	EXIT		4277768		True				
ANR	4277882	Symbol	strcmp		4277768						
ANR	4277883	Symbol	expect		4277768						
ANR	4277884	Symbol	path		4277768						
ANR	4277885	Symbol	param		4277768						
ANR	4277886	Symbol	condor_dirname		4277768						
ANR	4277887	Symbol	MATCH		4277768						
ANR	4277888	Function	test_period_and_backslash	508:0:14674:15159							
ANR	4277889	FunctionDef	test_period_and_backslash ()		4277888	0					
ANR	4277890	CompoundStatement		508:40:14714:15159	4277888	0					
ANR	4277891	ExpressionStatement	"emit_test ( ""Does a path using both a period and a backslash return the parent directory?"" )"	509:1:14717:14806	4277888	0	True				
ANR	4277892	CallExpression	"emit_test ( ""Does a path using both a period and a backslash return the parent directory?"" )"		4277888	0					
ANR	4277893	Callee	emit_test		4277888	0					
ANR	4277894	Identifier	emit_test		4277888	0					
ANR	4277895	ArgumentList	"""Does a path using both a period and a backslash return the parent directory?"""		4277888	1					
ANR	4277896	Argument	"""Does a path using both a period and a backslash return the parent directory?"""		4277888	0					
ANR	4277897	PrimaryExpression	"""Does a path using both a period and a backslash return the parent directory?"""		4277888	0					
ANR	4277898	IdentifierDeclStatement	"const char * param = "".foo\\\\bar"" ;"	510:1:14809:14840	4277888	1	True				
ANR	4277899	IdentifierDecl	"* param = "".foo\\\\bar"""		4277888	0					
ANR	4277900	IdentifierDeclType	const char *		4277888	0					
ANR	4277901	Identifier	param		4277888	1					
ANR	4277902	AssignmentExpression	"* param = "".foo\\\\bar"""		4277888	2		=			
ANR	4277903	Identifier	param		4277888	0					
ANR	4277904	PrimaryExpression	""".foo\\\\bar"""		4277888	1					
ANR	4277905	IdentifierDeclStatement	"const char * expect = "".foo"" ;"	511:1:14843:14870	4277888	2	True				
ANR	4277906	IdentifierDecl	"* expect = "".foo"""		4277888	0					
ANR	4277907	IdentifierDeclType	const char *		4277888	0					
ANR	4277908	Identifier	expect		4277888	1					
ANR	4277909	AssignmentExpression	"* expect = "".foo"""		4277888	2		=			
ANR	4277910	Identifier	expect		4277888	0					
ANR	4277911	PrimaryExpression	""".foo"""		4277888	1					
ANR	4277912	ExpressionStatement	emit_input_header ( )	512:1:14873:14892	4277888	3	True				
ANR	4277913	CallExpression	emit_input_header ( )		4277888	0					
ANR	4277914	Callee	emit_input_header		4277888	0					
ANR	4277915	Identifier	emit_input_header		4277888	0					
ANR	4277916	ArgumentList			4277888	1					
ANR	4277917	ExpressionStatement	"emit_param ( ""STRING"" , param )"	513:1:14895:14922	4277888	4	True				
ANR	4277918	CallExpression	"emit_param ( ""STRING"" , param )"		4277888	0					
ANR	4277919	Callee	emit_param		4277888	0					
ANR	4277920	Identifier	emit_param		4277888	0					
ANR	4277921	ArgumentList	"""STRING"""		4277888	1					
ANR	4277922	Argument	"""STRING"""		4277888	0					
ANR	4277923	PrimaryExpression	"""STRING"""		4277888	0					
ANR	4277924	Argument	param		4277888	1					
ANR	4277925	Identifier	param		4277888	0					
ANR	4277926	ExpressionStatement	emit_output_expected_header ( )	514:1:14925:14954	4277888	5	True				
ANR	4277927	CallExpression	emit_output_expected_header ( )		4277888	0					
ANR	4277928	Callee	emit_output_expected_header		4277888	0					
ANR	4277929	Identifier	emit_output_expected_header		4277888	0					
ANR	4277930	ArgumentList			4277888	1					
ANR	4277931	ExpressionStatement	"emit_retval ( ""%s"" , expect )"	515:1:14957:14982	4277888	6	True				
ANR	4277932	CallExpression	"emit_retval ( ""%s"" , expect )"		4277888	0					
ANR	4277933	Callee	emit_retval		4277888	0					
ANR	4277934	Identifier	emit_retval		4277888	0					
ANR	4277935	ArgumentList	"""%s"""		4277888	1					
ANR	4277936	Argument	"""%s"""		4277888	0					
ANR	4277937	PrimaryExpression	"""%s"""		4277888	0					
ANR	4277938	Argument	expect		4277888	1					
ANR	4277939	Identifier	expect		4277888	0					
ANR	4277940	IdentifierDeclStatement	char * path = condor_dirname ( param ) ;	516:1:14985:15019	4277888	7	True				
ANR	4277941	IdentifierDecl	* path = condor_dirname ( param )		4277888	0					
ANR	4277942	IdentifierDeclType	char *		4277888	0					
ANR	4277943	Identifier	path		4277888	1					
ANR	4277944	AssignmentExpression	* path = condor_dirname ( param )		4277888	2		=			
ANR	4277945	Identifier	path		4277888	0					
ANR	4277946	CallExpression	condor_dirname ( param )		4277888	1					
ANR	4277947	Callee	condor_dirname		4277888	0					
ANR	4277948	Identifier	condor_dirname		4277888	0					
ANR	4277949	ArgumentList	param		4277888	1					
ANR	4277950	Argument	param		4277888	0					
ANR	4277951	Identifier	param		4277888	0					
ANR	4277952	ExpressionStatement	emit_output_actual_header ( )	517:1:15022:15049	4277888	8	True				
ANR	4277953	CallExpression	emit_output_actual_header ( )		4277888	0					
ANR	4277954	Callee	emit_output_actual_header		4277888	0					
ANR	4277955	Identifier	emit_output_actual_header		4277888	0					
ANR	4277956	ArgumentList			4277888	1					
ANR	4277957	ExpressionStatement	"emit_retval ( ""%s"" , path )"	518:1:15052:15075	4277888	9	True				
ANR	4277958	CallExpression	"emit_retval ( ""%s"" , path )"		4277888	0					
ANR	4277959	Callee	emit_retval		4277888	0					
ANR	4277960	Identifier	emit_retval		4277888	0					
ANR	4277961	ArgumentList	"""%s"""		4277888	1					
ANR	4277962	Argument	"""%s"""		4277888	0					
ANR	4277963	PrimaryExpression	"""%s"""		4277888	0					
ANR	4277964	Argument	path		4277888	1					
ANR	4277965	Identifier	path		4277888	0					
ANR	4277966	IfStatement	"if ( strcmp ( path , expect ) != MATCH )"		4277888	10					
ANR	4277967	Condition	"strcmp ( path , expect ) != MATCH"	519:4:15081:15109	4277888	0	True				
ANR	4277968	EqualityExpression	"strcmp ( path , expect ) != MATCH"		4277888	0		!=			
ANR	4277969	CallExpression	"strcmp ( path , expect )"		4277888	0					
ANR	4277970	Callee	strcmp		4277888	0					
ANR	4277971	Identifier	strcmp		4277888	0					
ANR	4277972	ArgumentList	path		4277888	1					
ANR	4277973	Argument	path		4277888	0					
ANR	4277974	Identifier	path		4277888	0					
ANR	4277975	Argument	expect		4277888	1					
ANR	4277976	Identifier	expect		4277888	0					
ANR	4277977	Identifier	MATCH		4277888	1					
ANR	4277978	CompoundStatement		12:35:397:397	4277888	1					
ANR	4277979	ExpressionStatement	free ( path )	520:2:15116:15126	4277888	0	True				
ANR	4277980	CallExpression	free ( path )		4277888	0					
ANR	4277981	Callee	free		4277888	0					
ANR	4277982	Identifier	free		4277888	0					
ANR	4277983	ArgumentList	path		4277888	1					
ANR	4277984	Argument	path		4277888	0					
ANR	4277985	Identifier	path		4277888	0					
ANR	4277986	ExpressionStatement	FAIL	521:2:15130:15134	4277888	1	True				
ANR	4277987	Identifier	FAIL		4277888	0					
ANR	4277988	ExpressionStatement	free ( path )	523:1:15140:15150	4277888	11	True				
ANR	4277989	CallExpression	free ( path )		4277888	0					
ANR	4277990	Callee	free		4277888	0					
ANR	4277991	Identifier	free		4277888	0					
ANR	4277992	ArgumentList	path		4277888	1					
ANR	4277993	Argument	path		4277888	0					
ANR	4277994	Identifier	path		4277888	0					
ANR	4277995	ExpressionStatement	PASS	524:1:15153:15157	4277888	12	True				
ANR	4277996	Identifier	PASS		4277888	0					
ANR	4277997	ReturnType	static bool		4277888	1					
ANR	4277998	Identifier	test_period_and_backslash		4277888	2					
ANR	4277999	ParameterList			4277888	3					
ANR	4278000	CFGEntryNode	ENTRY		4277888		True				
ANR	4278001	CFGExitNode	EXIT		4277888		True				
ANR	4278002	Symbol	strcmp		4277888						
ANR	4278003	Symbol	expect		4277888						
ANR	4278004	Symbol	path		4277888						
ANR	4278005	Symbol	param		4277888						
ANR	4278006	Symbol	condor_dirname		4277888						
ANR	4278007	Symbol	MATCH		4277888						
ANR	4278008	Function	test_period_and_forward_slash_with_special_file	527:0:15162:15677							
ANR	4278009	FunctionDef	test_period_and_forward_slash_with_special_file ()		4278008	0					
ANR	4278010	CompoundStatement		527:62:15224:15677	4278008	0					
ANR	4278011	ExpressionStatement	"emit_test ( ""Does a path using both a period and a forward slash return the parent directory?"" )"	528:1:15227:15320	4278008	0	True				
ANR	4278012	CallExpression	"emit_test ( ""Does a path using both a period and a forward slash return the parent directory?"" )"		4278008	0					
ANR	4278013	Callee	emit_test		4278008	0					
ANR	4278014	Identifier	emit_test		4278008	0					
ANR	4278015	ArgumentList	"""Does a path using both a period and a forward slash return the parent directory?"""		4278008	1					
ANR	4278016	Argument	"""Does a path using both a period and a forward slash return the parent directory?"""		4278008	0					
ANR	4278017	PrimaryExpression	"""Does a path using both a period and a forward slash return the parent directory?"""		4278008	0					
ANR	4278018	IdentifierDeclStatement	"const char * param = "".foo/.bar.txt"" ;"	529:1:15323:15358	4278008	1	True				
ANR	4278019	IdentifierDecl	"* param = "".foo/.bar.txt"""		4278008	0					
ANR	4278020	IdentifierDeclType	const char *		4278008	0					
ANR	4278021	Identifier	param		4278008	1					
ANR	4278022	AssignmentExpression	"* param = "".foo/.bar.txt"""		4278008	2		=			
ANR	4278023	Identifier	param		4278008	0					
ANR	4278024	PrimaryExpression	""".foo/.bar.txt"""		4278008	1					
ANR	4278025	IdentifierDeclStatement	"const char * expect = "".foo"" ;"	530:1:15361:15388	4278008	2	True				
ANR	4278026	IdentifierDecl	"* expect = "".foo"""		4278008	0					
ANR	4278027	IdentifierDeclType	const char *		4278008	0					
ANR	4278028	Identifier	expect		4278008	1					
ANR	4278029	AssignmentExpression	"* expect = "".foo"""		4278008	2		=			
ANR	4278030	Identifier	expect		4278008	0					
ANR	4278031	PrimaryExpression	""".foo"""		4278008	1					
ANR	4278032	ExpressionStatement	emit_input_header ( )	531:1:15391:15410	4278008	3	True				
ANR	4278033	CallExpression	emit_input_header ( )		4278008	0					
ANR	4278034	Callee	emit_input_header		4278008	0					
ANR	4278035	Identifier	emit_input_header		4278008	0					
ANR	4278036	ArgumentList			4278008	1					
ANR	4278037	ExpressionStatement	"emit_param ( ""STRING"" , param )"	532:1:15413:15440	4278008	4	True				
ANR	4278038	CallExpression	"emit_param ( ""STRING"" , param )"		4278008	0					
ANR	4278039	Callee	emit_param		4278008	0					
ANR	4278040	Identifier	emit_param		4278008	0					
ANR	4278041	ArgumentList	"""STRING"""		4278008	1					
ANR	4278042	Argument	"""STRING"""		4278008	0					
ANR	4278043	PrimaryExpression	"""STRING"""		4278008	0					
ANR	4278044	Argument	param		4278008	1					
ANR	4278045	Identifier	param		4278008	0					
ANR	4278046	ExpressionStatement	emit_output_expected_header ( )	533:1:15443:15472	4278008	5	True				
ANR	4278047	CallExpression	emit_output_expected_header ( )		4278008	0					
ANR	4278048	Callee	emit_output_expected_header		4278008	0					
ANR	4278049	Identifier	emit_output_expected_header		4278008	0					
ANR	4278050	ArgumentList			4278008	1					
ANR	4278051	ExpressionStatement	"emit_retval ( ""%s"" , expect )"	534:1:15475:15500	4278008	6	True				
ANR	4278052	CallExpression	"emit_retval ( ""%s"" , expect )"		4278008	0					
ANR	4278053	Callee	emit_retval		4278008	0					
ANR	4278054	Identifier	emit_retval		4278008	0					
ANR	4278055	ArgumentList	"""%s"""		4278008	1					
ANR	4278056	Argument	"""%s"""		4278008	0					
ANR	4278057	PrimaryExpression	"""%s"""		4278008	0					
ANR	4278058	Argument	expect		4278008	1					
ANR	4278059	Identifier	expect		4278008	0					
ANR	4278060	IdentifierDeclStatement	char * path = condor_dirname ( param ) ;	535:1:15503:15537	4278008	7	True				
ANR	4278061	IdentifierDecl	* path = condor_dirname ( param )		4278008	0					
ANR	4278062	IdentifierDeclType	char *		4278008	0					
ANR	4278063	Identifier	path		4278008	1					
ANR	4278064	AssignmentExpression	* path = condor_dirname ( param )		4278008	2		=			
ANR	4278065	Identifier	path		4278008	0					
ANR	4278066	CallExpression	condor_dirname ( param )		4278008	1					
ANR	4278067	Callee	condor_dirname		4278008	0					
ANR	4278068	Identifier	condor_dirname		4278008	0					
ANR	4278069	ArgumentList	param		4278008	1					
ANR	4278070	Argument	param		4278008	0					
ANR	4278071	Identifier	param		4278008	0					
ANR	4278072	ExpressionStatement	emit_output_actual_header ( )	536:1:15540:15567	4278008	8	True				
ANR	4278073	CallExpression	emit_output_actual_header ( )		4278008	0					
ANR	4278074	Callee	emit_output_actual_header		4278008	0					
ANR	4278075	Identifier	emit_output_actual_header		4278008	0					
ANR	4278076	ArgumentList			4278008	1					
ANR	4278077	ExpressionStatement	"emit_retval ( ""%s"" , path )"	537:1:15570:15593	4278008	9	True				
ANR	4278078	CallExpression	"emit_retval ( ""%s"" , path )"		4278008	0					
ANR	4278079	Callee	emit_retval		4278008	0					
ANR	4278080	Identifier	emit_retval		4278008	0					
ANR	4278081	ArgumentList	"""%s"""		4278008	1					
ANR	4278082	Argument	"""%s"""		4278008	0					
ANR	4278083	PrimaryExpression	"""%s"""		4278008	0					
ANR	4278084	Argument	path		4278008	1					
ANR	4278085	Identifier	path		4278008	0					
ANR	4278086	IfStatement	"if ( strcmp ( path , expect ) != MATCH )"		4278008	10					
ANR	4278087	Condition	"strcmp ( path , expect ) != MATCH"	538:4:15599:15627	4278008	0	True				
ANR	4278088	EqualityExpression	"strcmp ( path , expect ) != MATCH"		4278008	0		!=			
ANR	4278089	CallExpression	"strcmp ( path , expect )"		4278008	0					
ANR	4278090	Callee	strcmp		4278008	0					
ANR	4278091	Identifier	strcmp		4278008	0					
ANR	4278092	ArgumentList	path		4278008	1					
ANR	4278093	Argument	path		4278008	0					
ANR	4278094	Identifier	path		4278008	0					
ANR	4278095	Argument	expect		4278008	1					
ANR	4278096	Identifier	expect		4278008	0					
ANR	4278097	Identifier	MATCH		4278008	1					
ANR	4278098	CompoundStatement		12:35:405:405	4278008	1					
ANR	4278099	ExpressionStatement	free ( path )	539:2:15634:15644	4278008	0	True				
ANR	4278100	CallExpression	free ( path )		4278008	0					
ANR	4278101	Callee	free		4278008	0					
ANR	4278102	Identifier	free		4278008	0					
ANR	4278103	ArgumentList	path		4278008	1					
ANR	4278104	Argument	path		4278008	0					
ANR	4278105	Identifier	path		4278008	0					
ANR	4278106	ExpressionStatement	FAIL	540:2:15648:15652	4278008	1	True				
ANR	4278107	Identifier	FAIL		4278008	0					
ANR	4278108	ExpressionStatement	free ( path )	542:1:15658:15668	4278008	11	True				
ANR	4278109	CallExpression	free ( path )		4278008	0					
ANR	4278110	Callee	free		4278008	0					
ANR	4278111	Identifier	free		4278008	0					
ANR	4278112	ArgumentList	path		4278008	1					
ANR	4278113	Argument	path		4278008	0					
ANR	4278114	Identifier	path		4278008	0					
ANR	4278115	ExpressionStatement	PASS	543:1:15671:15675	4278008	12	True				
ANR	4278116	Identifier	PASS		4278008	0					
ANR	4278117	ReturnType	static bool		4278008	1					
ANR	4278118	Identifier	test_period_and_forward_slash_with_special_file		4278008	2					
ANR	4278119	ParameterList			4278008	3					
ANR	4278120	CFGEntryNode	ENTRY		4278008		True				
ANR	4278121	CFGExitNode	EXIT		4278008		True				
ANR	4278122	Symbol	strcmp		4278008						
ANR	4278123	Symbol	expect		4278008						
ANR	4278124	Symbol	path		4278008						
ANR	4278125	Symbol	param		4278008						
ANR	4278126	Symbol	condor_dirname		4278008						
ANR	4278127	Symbol	MATCH		4278008						
ANR	4278128	Function	test_period_and_backslash_with_special_file	546:0:15680:16183							
ANR	4278129	FunctionDef	test_period_and_backslash_with_special_file ()		4278128	0					
ANR	4278130	CompoundStatement		546:58:15738:16183	4278128	0					
ANR	4278131	ExpressionStatement	"emit_test ( ""Does a path using a period and a backslash return the parent directory?"" )"	547:1:15741:15825	4278128	0	True				
ANR	4278132	CallExpression	"emit_test ( ""Does a path using a period and a backslash return the parent directory?"" )"		4278128	0					
ANR	4278133	Callee	emit_test		4278128	0					
ANR	4278134	Identifier	emit_test		4278128	0					
ANR	4278135	ArgumentList	"""Does a path using a period and a backslash return the parent directory?"""		4278128	1					
ANR	4278136	Argument	"""Does a path using a period and a backslash return the parent directory?"""		4278128	0					
ANR	4278137	PrimaryExpression	"""Does a path using a period and a backslash return the parent directory?"""		4278128	0					
ANR	4278138	IdentifierDeclStatement	"const char * param = "".foo\\\\.bar.txt"" ;"	548:1:15828:15864	4278128	1	True				
ANR	4278139	IdentifierDecl	"* param = "".foo\\\\.bar.txt"""		4278128	0					
ANR	4278140	IdentifierDeclType	const char *		4278128	0					
ANR	4278141	Identifier	param		4278128	1					
ANR	4278142	AssignmentExpression	"* param = "".foo\\\\.bar.txt"""		4278128	2		=			
ANR	4278143	Identifier	param		4278128	0					
ANR	4278144	PrimaryExpression	""".foo\\\\.bar.txt"""		4278128	1					
ANR	4278145	IdentifierDeclStatement	"const char * expect = "".foo"" ;"	549:1:15867:15894	4278128	2	True				
ANR	4278146	IdentifierDecl	"* expect = "".foo"""		4278128	0					
ANR	4278147	IdentifierDeclType	const char *		4278128	0					
ANR	4278148	Identifier	expect		4278128	1					
ANR	4278149	AssignmentExpression	"* expect = "".foo"""		4278128	2		=			
ANR	4278150	Identifier	expect		4278128	0					
ANR	4278151	PrimaryExpression	""".foo"""		4278128	1					
ANR	4278152	ExpressionStatement	emit_input_header ( )	550:1:15897:15916	4278128	3	True				
ANR	4278153	CallExpression	emit_input_header ( )		4278128	0					
ANR	4278154	Callee	emit_input_header		4278128	0					
ANR	4278155	Identifier	emit_input_header		4278128	0					
ANR	4278156	ArgumentList			4278128	1					
ANR	4278157	ExpressionStatement	"emit_param ( ""STRING"" , param )"	551:1:15919:15946	4278128	4	True				
ANR	4278158	CallExpression	"emit_param ( ""STRING"" , param )"		4278128	0					
ANR	4278159	Callee	emit_param		4278128	0					
ANR	4278160	Identifier	emit_param		4278128	0					
ANR	4278161	ArgumentList	"""STRING"""		4278128	1					
ANR	4278162	Argument	"""STRING"""		4278128	0					
ANR	4278163	PrimaryExpression	"""STRING"""		4278128	0					
ANR	4278164	Argument	param		4278128	1					
ANR	4278165	Identifier	param		4278128	0					
ANR	4278166	ExpressionStatement	emit_output_expected_header ( )	552:1:15949:15978	4278128	5	True				
ANR	4278167	CallExpression	emit_output_expected_header ( )		4278128	0					
ANR	4278168	Callee	emit_output_expected_header		4278128	0					
ANR	4278169	Identifier	emit_output_expected_header		4278128	0					
ANR	4278170	ArgumentList			4278128	1					
ANR	4278171	ExpressionStatement	"emit_retval ( ""%s"" , expect )"	553:1:15981:16006	4278128	6	True				
ANR	4278172	CallExpression	"emit_retval ( ""%s"" , expect )"		4278128	0					
ANR	4278173	Callee	emit_retval		4278128	0					
ANR	4278174	Identifier	emit_retval		4278128	0					
ANR	4278175	ArgumentList	"""%s"""		4278128	1					
ANR	4278176	Argument	"""%s"""		4278128	0					
ANR	4278177	PrimaryExpression	"""%s"""		4278128	0					
ANR	4278178	Argument	expect		4278128	1					
ANR	4278179	Identifier	expect		4278128	0					
ANR	4278180	IdentifierDeclStatement	char * path = condor_dirname ( param ) ;	554:1:16009:16043	4278128	7	True				
ANR	4278181	IdentifierDecl	* path = condor_dirname ( param )		4278128	0					
ANR	4278182	IdentifierDeclType	char *		4278128	0					
ANR	4278183	Identifier	path		4278128	1					
ANR	4278184	AssignmentExpression	* path = condor_dirname ( param )		4278128	2		=			
ANR	4278185	Identifier	path		4278128	0					
ANR	4278186	CallExpression	condor_dirname ( param )		4278128	1					
ANR	4278187	Callee	condor_dirname		4278128	0					
ANR	4278188	Identifier	condor_dirname		4278128	0					
ANR	4278189	ArgumentList	param		4278128	1					
ANR	4278190	Argument	param		4278128	0					
ANR	4278191	Identifier	param		4278128	0					
ANR	4278192	ExpressionStatement	emit_output_actual_header ( )	555:1:16046:16073	4278128	8	True				
ANR	4278193	CallExpression	emit_output_actual_header ( )		4278128	0					
ANR	4278194	Callee	emit_output_actual_header		4278128	0					
ANR	4278195	Identifier	emit_output_actual_header		4278128	0					
ANR	4278196	ArgumentList			4278128	1					
ANR	4278197	ExpressionStatement	"emit_retval ( ""%s"" , path )"	556:1:16076:16099	4278128	9	True				
ANR	4278198	CallExpression	"emit_retval ( ""%s"" , path )"		4278128	0					
ANR	4278199	Callee	emit_retval		4278128	0					
ANR	4278200	Identifier	emit_retval		4278128	0					
ANR	4278201	ArgumentList	"""%s"""		4278128	1					
ANR	4278202	Argument	"""%s"""		4278128	0					
ANR	4278203	PrimaryExpression	"""%s"""		4278128	0					
ANR	4278204	Argument	path		4278128	1					
ANR	4278205	Identifier	path		4278128	0					
ANR	4278206	IfStatement	"if ( strcmp ( path , expect ) != MATCH )"		4278128	10					
ANR	4278207	Condition	"strcmp ( path , expect ) != MATCH"	557:4:16105:16133	4278128	0	True				
ANR	4278208	EqualityExpression	"strcmp ( path , expect ) != MATCH"		4278128	0		!=			
ANR	4278209	CallExpression	"strcmp ( path , expect )"		4278128	0					
ANR	4278210	Callee	strcmp		4278128	0					
ANR	4278211	Identifier	strcmp		4278128	0					
ANR	4278212	ArgumentList	path		4278128	1					
ANR	4278213	Argument	path		4278128	0					
ANR	4278214	Identifier	path		4278128	0					
ANR	4278215	Argument	expect		4278128	1					
ANR	4278216	Identifier	expect		4278128	0					
ANR	4278217	Identifier	MATCH		4278128	1					
ANR	4278218	CompoundStatement		12:35:397:397	4278128	1					
ANR	4278219	ExpressionStatement	free ( path )	558:2:16140:16150	4278128	0	True				
ANR	4278220	CallExpression	free ( path )		4278128	0					
ANR	4278221	Callee	free		4278128	0					
ANR	4278222	Identifier	free		4278128	0					
ANR	4278223	ArgumentList	path		4278128	1					
ANR	4278224	Argument	path		4278128	0					
ANR	4278225	Identifier	path		4278128	0					
ANR	4278226	ExpressionStatement	FAIL	559:2:16154:16158	4278128	1	True				
ANR	4278227	Identifier	FAIL		4278128	0					
ANR	4278228	ExpressionStatement	free ( path )	561:1:16164:16174	4278128	11	True				
ANR	4278229	CallExpression	free ( path )		4278128	0					
ANR	4278230	Callee	free		4278128	0					
ANR	4278231	Identifier	free		4278128	0					
ANR	4278232	ArgumentList	path		4278128	1					
ANR	4278233	Argument	path		4278128	0					
ANR	4278234	Identifier	path		4278128	0					
ANR	4278235	ExpressionStatement	PASS	562:1:16177:16181	4278128	12	True				
ANR	4278236	Identifier	PASS		4278128	0					
ANR	4278237	ReturnType	static bool		4278128	1					
ANR	4278238	Identifier	test_period_and_backslash_with_special_file		4278128	2					
ANR	4278239	ParameterList			4278128	3					
ANR	4278240	CFGEntryNode	ENTRY		4278128		True				
ANR	4278241	CFGExitNode	EXIT		4278128		True				
ANR	4278242	Symbol	strcmp		4278128						
ANR	4278243	Symbol	expect		4278128						
ANR	4278244	Symbol	path		4278128						
ANR	4278245	Symbol	param		4278128						
ANR	4278246	Symbol	condor_dirname		4278128						
ANR	4278247	Symbol	MATCH		4278128						
ANR	4278248	Function	test_double_forward_slash	565:0:16186:16745							
ANR	4278249	FunctionDef	test_double_forward_slash ()		4278248	0					
ANR	4278250	CompoundStatement		565:40:16226:16745	4278248	0					
ANR	4278251	ExpressionStatement	"emit_test ( ""Does a path with one directory using a double forward slash and the other using a single forward slashe return the full parent directory?"" )"	566:1:16229:16379	4278248	0	True				
ANR	4278252	CallExpression	"emit_test ( ""Does a path with one directory using a double forward slash and the other using a single forward slashe return the full parent directory?"" )"		4278248	0					
ANR	4278253	Callee	emit_test		4278248	0					
ANR	4278254	Identifier	emit_test		4278248	0					
ANR	4278255	ArgumentList	"""Does a path with one directory using a double forward slash and the other using a single forward slashe return the full parent directory?"""		4278248	1					
ANR	4278256	Argument	"""Does a path with one directory using a double forward slash and the other using a single forward slashe return the full parent directory?"""		4278248	0					
ANR	4278257	PrimaryExpression	"""Does a path with one directory using a double forward slash and the other using a single forward slashe return the full parent directory?"""		4278248	0					
ANR	4278258	IdentifierDeclStatement	"const char * param = ""//foo/bar/zap.txt"" ;"	567:1:16382:16421	4278248	1	True				
ANR	4278259	IdentifierDecl	"* param = ""//foo/bar/zap.txt"""		4278248	0					
ANR	4278260	IdentifierDeclType	const char *		4278248	0					
ANR	4278261	Identifier	param		4278248	1					
ANR	4278262	AssignmentExpression	"* param = ""//foo/bar/zap.txt"""		4278248	2		=			
ANR	4278263	Identifier	param		4278248	0					
ANR	4278264	PrimaryExpression	"""//foo/bar/zap.txt"""		4278248	1					
ANR	4278265	IdentifierDeclStatement	"const char * expect = ""//foo/bar"" ;"	568:1:16424:16456	4278248	2	True				
ANR	4278266	IdentifierDecl	"* expect = ""//foo/bar"""		4278248	0					
ANR	4278267	IdentifierDeclType	const char *		4278248	0					
ANR	4278268	Identifier	expect		4278248	1					
ANR	4278269	AssignmentExpression	"* expect = ""//foo/bar"""		4278248	2		=			
ANR	4278270	Identifier	expect		4278248	0					
ANR	4278271	PrimaryExpression	"""//foo/bar"""		4278248	1					
ANR	4278272	ExpressionStatement	emit_input_header ( )	569:1:16459:16478	4278248	3	True				
ANR	4278273	CallExpression	emit_input_header ( )		4278248	0					
ANR	4278274	Callee	emit_input_header		4278248	0					
ANR	4278275	Identifier	emit_input_header		4278248	0					
ANR	4278276	ArgumentList			4278248	1					
ANR	4278277	ExpressionStatement	"emit_param ( ""STRING"" , param )"	570:1:16481:16508	4278248	4	True				
ANR	4278278	CallExpression	"emit_param ( ""STRING"" , param )"		4278248	0					
ANR	4278279	Callee	emit_param		4278248	0					
ANR	4278280	Identifier	emit_param		4278248	0					
ANR	4278281	ArgumentList	"""STRING"""		4278248	1					
ANR	4278282	Argument	"""STRING"""		4278248	0					
ANR	4278283	PrimaryExpression	"""STRING"""		4278248	0					
ANR	4278284	Argument	param		4278248	1					
ANR	4278285	Identifier	param		4278248	0					
ANR	4278286	ExpressionStatement	emit_output_expected_header ( )	571:1:16511:16540	4278248	5	True				
ANR	4278287	CallExpression	emit_output_expected_header ( )		4278248	0					
ANR	4278288	Callee	emit_output_expected_header		4278248	0					
ANR	4278289	Identifier	emit_output_expected_header		4278248	0					
ANR	4278290	ArgumentList			4278248	1					
ANR	4278291	ExpressionStatement	"emit_retval ( ""%s"" , expect )"	572:1:16543:16568	4278248	6	True				
ANR	4278292	CallExpression	"emit_retval ( ""%s"" , expect )"		4278248	0					
ANR	4278293	Callee	emit_retval		4278248	0					
ANR	4278294	Identifier	emit_retval		4278248	0					
ANR	4278295	ArgumentList	"""%s"""		4278248	1					
ANR	4278296	Argument	"""%s"""		4278248	0					
ANR	4278297	PrimaryExpression	"""%s"""		4278248	0					
ANR	4278298	Argument	expect		4278248	1					
ANR	4278299	Identifier	expect		4278248	0					
ANR	4278300	IdentifierDeclStatement	char * path = condor_dirname ( param ) ;	573:1:16571:16605	4278248	7	True				
ANR	4278301	IdentifierDecl	* path = condor_dirname ( param )		4278248	0					
ANR	4278302	IdentifierDeclType	char *		4278248	0					
ANR	4278303	Identifier	path		4278248	1					
ANR	4278304	AssignmentExpression	* path = condor_dirname ( param )		4278248	2		=			
ANR	4278305	Identifier	path		4278248	0					
ANR	4278306	CallExpression	condor_dirname ( param )		4278248	1					
ANR	4278307	Callee	condor_dirname		4278248	0					
ANR	4278308	Identifier	condor_dirname		4278248	0					
ANR	4278309	ArgumentList	param		4278248	1					
ANR	4278310	Argument	param		4278248	0					
ANR	4278311	Identifier	param		4278248	0					
ANR	4278312	ExpressionStatement	emit_output_actual_header ( )	574:1:16608:16635	4278248	8	True				
ANR	4278313	CallExpression	emit_output_actual_header ( )		4278248	0					
ANR	4278314	Callee	emit_output_actual_header		4278248	0					
ANR	4278315	Identifier	emit_output_actual_header		4278248	0					
ANR	4278316	ArgumentList			4278248	1					
ANR	4278317	ExpressionStatement	"emit_retval ( ""%s"" , path )"	575:1:16638:16661	4278248	9	True				
ANR	4278318	CallExpression	"emit_retval ( ""%s"" , path )"		4278248	0					
ANR	4278319	Callee	emit_retval		4278248	0					
ANR	4278320	Identifier	emit_retval		4278248	0					
ANR	4278321	ArgumentList	"""%s"""		4278248	1					
ANR	4278322	Argument	"""%s"""		4278248	0					
ANR	4278323	PrimaryExpression	"""%s"""		4278248	0					
ANR	4278324	Argument	path		4278248	1					
ANR	4278325	Identifier	path		4278248	0					
ANR	4278326	IfStatement	"if ( strcmp ( path , expect ) != MATCH )"		4278248	10					
ANR	4278327	Condition	"strcmp ( path , expect ) != MATCH"	576:4:16667:16695	4278248	0	True				
ANR	4278328	EqualityExpression	"strcmp ( path , expect ) != MATCH"		4278248	0		!=			
ANR	4278329	CallExpression	"strcmp ( path , expect )"		4278248	0					
ANR	4278330	Callee	strcmp		4278248	0					
ANR	4278331	Identifier	strcmp		4278248	0					
ANR	4278332	ArgumentList	path		4278248	1					
ANR	4278333	Argument	path		4278248	0					
ANR	4278334	Identifier	path		4278248	0					
ANR	4278335	Argument	expect		4278248	1					
ANR	4278336	Identifier	expect		4278248	0					
ANR	4278337	Identifier	MATCH		4278248	1					
ANR	4278338	CompoundStatement		12:35:471:471	4278248	1					
ANR	4278339	ExpressionStatement	free ( path )	577:2:16702:16712	4278248	0	True				
ANR	4278340	CallExpression	free ( path )		4278248	0					
ANR	4278341	Callee	free		4278248	0					
ANR	4278342	Identifier	free		4278248	0					
ANR	4278343	ArgumentList	path		4278248	1					
ANR	4278344	Argument	path		4278248	0					
ANR	4278345	Identifier	path		4278248	0					
ANR	4278346	ExpressionStatement	FAIL	578:2:16716:16720	4278248	1	True				
ANR	4278347	Identifier	FAIL		4278248	0					
ANR	4278348	ExpressionStatement	free ( path )	580:1:16726:16736	4278248	11	True				
ANR	4278349	CallExpression	free ( path )		4278248	0					
ANR	4278350	Callee	free		4278248	0					
ANR	4278351	Identifier	free		4278248	0					
ANR	4278352	ArgumentList	path		4278248	1					
ANR	4278353	Argument	path		4278248	0					
ANR	4278354	Identifier	path		4278248	0					
ANR	4278355	ExpressionStatement	PASS	581:1:16739:16743	4278248	12	True				
ANR	4278356	Identifier	PASS		4278248	0					
ANR	4278357	ReturnType	static bool		4278248	1					
ANR	4278358	Identifier	test_double_forward_slash		4278248	2					
ANR	4278359	ParameterList			4278248	3					
ANR	4278360	CFGEntryNode	ENTRY		4278248		True				
ANR	4278361	CFGExitNode	EXIT		4278248		True				
ANR	4278362	Symbol	strcmp		4278248						
ANR	4278363	Symbol	expect		4278248						
ANR	4278364	Symbol	path		4278248						
ANR	4278365	Symbol	param		4278248						
ANR	4278366	Symbol	condor_dirname		4278248						
ANR	4278367	Symbol	MATCH		4278248						
ANR	4278368	Function	test_double_backslash	584:0:16748:17301							
ANR	4278369	FunctionDef	test_double_backslash ()		4278368	0					
ANR	4278370	CompoundStatement		584:36:16784:17301	4278368	0					
ANR	4278371	ExpressionStatement	"emit_test ( ""Does a path with one directory using a double backslash and the other using a single backslash return the full parent directory?"" )"	585:1:16787:16928	4278368	0	True				
ANR	4278372	CallExpression	"emit_test ( ""Does a path with one directory using a double backslash and the other using a single backslash return the full parent directory?"" )"		4278368	0					
ANR	4278373	Callee	emit_test		4278368	0					
ANR	4278374	Identifier	emit_test		4278368	0					
ANR	4278375	ArgumentList	"""Does a path with one directory using a double backslash and the other using a single backslash return the full parent directory?"""		4278368	1					
ANR	4278376	Argument	"""Does a path with one directory using a double backslash and the other using a single backslash return the full parent directory?"""		4278368	0					
ANR	4278377	PrimaryExpression	"""Does a path with one directory using a double backslash and the other using a single backslash return the full parent directory?"""		4278368	0					
ANR	4278378	IdentifierDeclStatement	"const char * param = ""\\\\\\\\foo\\\\bar\\\\zap.txt"" ;"	586:1:16931:16974	4278368	1	True				
ANR	4278379	IdentifierDecl	"* param = ""\\\\\\\\foo\\\\bar\\\\zap.txt"""		4278368	0					
ANR	4278380	IdentifierDeclType	const char *		4278368	0					
ANR	4278381	Identifier	param		4278368	1					
ANR	4278382	AssignmentExpression	"* param = ""\\\\\\\\foo\\\\bar\\\\zap.txt"""		4278368	2		=			
ANR	4278383	Identifier	param		4278368	0					
ANR	4278384	PrimaryExpression	"""\\\\\\\\foo\\\\bar\\\\zap.txt"""		4278368	1					
ANR	4278385	IdentifierDeclStatement	"const char * expect = ""\\\\\\\\foo\\\\bar"" ;"	587:1:16977:17012	4278368	2	True				
ANR	4278386	IdentifierDecl	"* expect = ""\\\\\\\\foo\\\\bar"""		4278368	0					
ANR	4278387	IdentifierDeclType	const char *		4278368	0					
ANR	4278388	Identifier	expect		4278368	1					
ANR	4278389	AssignmentExpression	"* expect = ""\\\\\\\\foo\\\\bar"""		4278368	2		=			
ANR	4278390	Identifier	expect		4278368	0					
ANR	4278391	PrimaryExpression	"""\\\\\\\\foo\\\\bar"""		4278368	1					
ANR	4278392	ExpressionStatement	emit_input_header ( )	588:1:17015:17034	4278368	3	True				
ANR	4278393	CallExpression	emit_input_header ( )		4278368	0					
ANR	4278394	Callee	emit_input_header		4278368	0					
ANR	4278395	Identifier	emit_input_header		4278368	0					
ANR	4278396	ArgumentList			4278368	1					
ANR	4278397	ExpressionStatement	"emit_param ( ""STRING"" , param )"	589:1:17037:17064	4278368	4	True				
ANR	4278398	CallExpression	"emit_param ( ""STRING"" , param )"		4278368	0					
ANR	4278399	Callee	emit_param		4278368	0					
ANR	4278400	Identifier	emit_param		4278368	0					
ANR	4278401	ArgumentList	"""STRING"""		4278368	1					
ANR	4278402	Argument	"""STRING"""		4278368	0					
ANR	4278403	PrimaryExpression	"""STRING"""		4278368	0					
ANR	4278404	Argument	param		4278368	1					
ANR	4278405	Identifier	param		4278368	0					
ANR	4278406	ExpressionStatement	emit_output_expected_header ( )	590:1:17067:17096	4278368	5	True				
ANR	4278407	CallExpression	emit_output_expected_header ( )		4278368	0					
ANR	4278408	Callee	emit_output_expected_header		4278368	0					
ANR	4278409	Identifier	emit_output_expected_header		4278368	0					
ANR	4278410	ArgumentList			4278368	1					
ANR	4278411	ExpressionStatement	"emit_retval ( ""%s"" , expect )"	591:1:17099:17124	4278368	6	True				
ANR	4278412	CallExpression	"emit_retval ( ""%s"" , expect )"		4278368	0					
ANR	4278413	Callee	emit_retval		4278368	0					
ANR	4278414	Identifier	emit_retval		4278368	0					
ANR	4278415	ArgumentList	"""%s"""		4278368	1					
ANR	4278416	Argument	"""%s"""		4278368	0					
ANR	4278417	PrimaryExpression	"""%s"""		4278368	0					
ANR	4278418	Argument	expect		4278368	1					
ANR	4278419	Identifier	expect		4278368	0					
ANR	4278420	IdentifierDeclStatement	char * path = condor_dirname ( param ) ;	592:1:17127:17161	4278368	7	True				
ANR	4278421	IdentifierDecl	* path = condor_dirname ( param )		4278368	0					
ANR	4278422	IdentifierDeclType	char *		4278368	0					
ANR	4278423	Identifier	path		4278368	1					
ANR	4278424	AssignmentExpression	* path = condor_dirname ( param )		4278368	2		=			
ANR	4278425	Identifier	path		4278368	0					
ANR	4278426	CallExpression	condor_dirname ( param )		4278368	1					
ANR	4278427	Callee	condor_dirname		4278368	0					
ANR	4278428	Identifier	condor_dirname		4278368	0					
ANR	4278429	ArgumentList	param		4278368	1					
ANR	4278430	Argument	param		4278368	0					
ANR	4278431	Identifier	param		4278368	0					
ANR	4278432	ExpressionStatement	emit_output_actual_header ( )	593:1:17164:17191	4278368	8	True				
ANR	4278433	CallExpression	emit_output_actual_header ( )		4278368	0					
ANR	4278434	Callee	emit_output_actual_header		4278368	0					
ANR	4278435	Identifier	emit_output_actual_header		4278368	0					
ANR	4278436	ArgumentList			4278368	1					
ANR	4278437	ExpressionStatement	"emit_retval ( ""%s"" , path )"	594:1:17194:17217	4278368	9	True				
ANR	4278438	CallExpression	"emit_retval ( ""%s"" , path )"		4278368	0					
ANR	4278439	Callee	emit_retval		4278368	0					
ANR	4278440	Identifier	emit_retval		4278368	0					
ANR	4278441	ArgumentList	"""%s"""		4278368	1					
ANR	4278442	Argument	"""%s"""		4278368	0					
ANR	4278443	PrimaryExpression	"""%s"""		4278368	0					
ANR	4278444	Argument	path		4278368	1					
ANR	4278445	Identifier	path		4278368	0					
ANR	4278446	IfStatement	"if ( strcmp ( path , expect ) != MATCH )"		4278368	10					
ANR	4278447	Condition	"strcmp ( path , expect ) != MATCH"	595:4:17223:17251	4278368	0	True				
ANR	4278448	EqualityExpression	"strcmp ( path , expect ) != MATCH"		4278368	0		!=			
ANR	4278449	CallExpression	"strcmp ( path , expect )"		4278368	0					
ANR	4278450	Callee	strcmp		4278368	0					
ANR	4278451	Identifier	strcmp		4278368	0					
ANR	4278452	ArgumentList	path		4278368	1					
ANR	4278453	Argument	path		4278368	0					
ANR	4278454	Identifier	path		4278368	0					
ANR	4278455	Argument	expect		4278368	1					
ANR	4278456	Identifier	expect		4278368	0					
ANR	4278457	Identifier	MATCH		4278368	1					
ANR	4278458	CompoundStatement		12:35:469:469	4278368	1					
ANR	4278459	ExpressionStatement	free ( path )	596:2:17258:17268	4278368	0	True				
ANR	4278460	CallExpression	free ( path )		4278368	0					
ANR	4278461	Callee	free		4278368	0					
ANR	4278462	Identifier	free		4278368	0					
ANR	4278463	ArgumentList	path		4278368	1					
ANR	4278464	Argument	path		4278368	0					
ANR	4278465	Identifier	path		4278368	0					
ANR	4278466	ExpressionStatement	FAIL	597:2:17272:17276	4278368	1	True				
ANR	4278467	Identifier	FAIL		4278368	0					
ANR	4278468	ExpressionStatement	free ( path )	599:1:17282:17292	4278368	11	True				
ANR	4278469	CallExpression	free ( path )		4278368	0					
ANR	4278470	Callee	free		4278368	0					
ANR	4278471	Identifier	free		4278368	0					
ANR	4278472	ArgumentList	path		4278368	1					
ANR	4278473	Argument	path		4278368	0					
ANR	4278474	Identifier	path		4278368	0					
ANR	4278475	ExpressionStatement	PASS	600:1:17295:17299	4278368	12	True				
ANR	4278476	Identifier	PASS		4278368	0					
ANR	4278477	ReturnType	static bool		4278368	1					
ANR	4278478	Identifier	test_double_backslash		4278368	2					
ANR	4278479	ParameterList			4278368	3					
ANR	4278480	CFGEntryNode	ENTRY		4278368		True				
ANR	4278481	CFGExitNode	EXIT		4278368		True				
ANR	4278482	Symbol	strcmp		4278368						
ANR	4278483	Symbol	expect		4278368						
ANR	4278484	Symbol	path		4278368						
ANR	4278485	Symbol	param		4278368						
ANR	4278486	Symbol	condor_dirname		4278368						
ANR	4278487	Symbol	MATCH		4278368						
