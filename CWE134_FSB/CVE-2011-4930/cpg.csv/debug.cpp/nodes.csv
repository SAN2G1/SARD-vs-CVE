command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1227418	File	data/converged/CVE-2011-4930_htcondor/debug.cpp								
ANR	1227419	DeclStmt									
ANR	1227420	Decl							debug_level_t	debug_level_t	debug_level
ANR	1227421	DeclStmt									
ANR	1227422	Decl							const char	const char *	debug_progname
ANR	1227423	DeclStmt									
ANR	1227424	Decl							bool	bool	cache_enabled
ANR	1227425	DeclStmt									
ANR	1227426	Decl							bool	bool	cache_is_caching
ANR	1227427	DeclStmt									
ANR	1227428	Decl							MyString	MyString	cache
ANR	1227429	DeclStmt									
ANR	1227430	Decl							int	int	cache_size
ANR	1227431	DeclStmt									
ANR	1227432	Decl							extern int	extern int	DebugFlags
ANR	1227433	DeclStmt									
ANR	1227434	Decl							extern int	extern int	DebugUseTimestamps
ANR	1227435	DeclStmt									
ANR	1227436	Decl							void	"void ( int flags , const char * fmt , va_list args )"	debug_cache_insert
ANR	1227437	Function	debug_printf	54:0:1828:2319							
ANR	1227438	FunctionDef	"debug_printf (debug_level_t level , const char * fmt)"		1227437	0					
ANR	1227439	CompoundStatement		55:58:1891:2319	1227437	0					
ANR	1227440	IfStatement	if ( DEBUG_LEVEL ( level ) )		1227437	0					
ANR	1227441	Condition	DEBUG_LEVEL ( level )	56:5:1898:1917	1227437	0	True				
ANR	1227442	CallExpression	DEBUG_LEVEL ( level )		1227437	0					
ANR	1227443	Callee	DEBUG_LEVEL		1227437	0					
ANR	1227444	Identifier	DEBUG_LEVEL		1227437	0					
ANR	1227445	ArgumentList	level		1227437	1					
ANR	1227446	Argument	level		1227437	0					
ANR	1227447	Identifier	level		1227437	0					
ANR	1227448	CompoundStatement		2:28:29:29	1227437	1					
ANR	1227449	IfStatement	if ( cache_enabled == false || ( cache_enabled == true && cache_is_caching == false ) )		1227437	0					
ANR	1227450	Condition	cache_enabled == false || ( cache_enabled == true && cache_is_caching == false )	57:6:1929:2009	1227437	0	True				
ANR	1227451	OrExpression	cache_enabled == false || ( cache_enabled == true && cache_is_caching == false )		1227437	0		||			
ANR	1227452	EqualityExpression	cache_enabled == false		1227437	0		==			
ANR	1227453	Identifier	cache_enabled		1227437	0					
ANR	1227454	Identifier	false		1227437	1					
ANR	1227455	AndExpression	cache_enabled == true && cache_is_caching == false		1227437	1		&&			
ANR	1227456	EqualityExpression	cache_enabled == true		1227437	0		==			
ANR	1227457	Identifier	cache_enabled		1227437	0					
ANR	1227458	Identifier	true		1227437	1					
ANR	1227459	EqualityExpression	cache_is_caching == false		1227437	1		==			
ANR	1227460	Identifier	cache_is_caching		1227437	0					
ANR	1227461	Identifier	false		1227437	1					
ANR	1227462	CompoundStatement		7:3:162:174	1227437	1					
ANR	1227463	IdentifierDeclStatement	va_list args ;	61:3:2054:2066	1227437	0	True				
ANR	1227464	IdentifierDecl	args		1227437	0					
ANR	1227465	IdentifierDeclType	va_list		1227437	0					
ANR	1227466	Identifier	args		1227437	1					
ANR	1227467	ExpressionStatement	"va_start ( args , fmt )"	62:3:2071:2092	1227437	1	True				
ANR	1227468	CallExpression	"va_start ( args , fmt )"		1227437	0					
ANR	1227469	Callee	va_start		1227437	0					
ANR	1227470	Identifier	va_start		1227437	0					
ANR	1227471	ArgumentList	args		1227437	1					
ANR	1227472	Argument	args		1227437	0					
ANR	1227473	Identifier	args		1227437	0					
ANR	1227474	Argument	fmt		1227437	1					
ANR	1227475	Identifier	fmt		1227437	0					
ANR	1227476	ExpressionStatement	"_condor_dprintf_va ( D_ALWAYS , fmt , args )"	63:3:2097:2138	1227437	2	True				
ANR	1227477	CallExpression	"_condor_dprintf_va ( D_ALWAYS , fmt , args )"		1227437	0					
ANR	1227478	Callee	_condor_dprintf_va		1227437	0					
ANR	1227479	Identifier	_condor_dprintf_va		1227437	0					
ANR	1227480	ArgumentList	D_ALWAYS		1227437	1					
ANR	1227481	Argument	D_ALWAYS		1227437	0					
ANR	1227482	Identifier	D_ALWAYS		1227437	0					
ANR	1227483	Argument	fmt		1227437	1					
ANR	1227484	Identifier	fmt		1227437	0					
ANR	1227485	Argument	args		1227437	2					
ANR	1227486	Identifier	args		1227437	0					
ANR	1227487	ExpressionStatement	va_end ( args )	64:3:2143:2157	1227437	3	True				
ANR	1227488	CallExpression	va_end ( args )		1227437	0					
ANR	1227489	Callee	va_end		1227437	0					
ANR	1227490	Identifier	va_end		1227437	0					
ANR	1227491	ArgumentList	args		1227437	1					
ANR	1227492	Argument	args		1227437	0					
ANR	1227493	Identifier	args		1227437	0					
ANR	1227494	ElseStatement	else		1227437	0					
ANR	1227495	CompoundStatement		13:3:315:327	1227437	0					
ANR	1227496	IdentifierDeclStatement	va_list args ;	67:3:2207:2219	1227437	0	True				
ANR	1227497	IdentifierDecl	args		1227437	0					
ANR	1227498	IdentifierDeclType	va_list		1227437	0					
ANR	1227499	Identifier	args		1227437	1					
ANR	1227500	ExpressionStatement	"va_start ( args , fmt )"	68:3:2224:2245	1227437	1	True				
ANR	1227501	CallExpression	"va_start ( args , fmt )"		1227437	0					
ANR	1227502	Callee	va_start		1227437	0					
ANR	1227503	Identifier	va_start		1227437	0					
ANR	1227504	ArgumentList	args		1227437	1					
ANR	1227505	Argument	args		1227437	0					
ANR	1227506	Identifier	args		1227437	0					
ANR	1227507	Argument	fmt		1227437	1					
ANR	1227508	Identifier	fmt		1227437	0					
ANR	1227509	ExpressionStatement	"debug_cache_insert ( D_ALWAYS , fmt , args )"	69:3:2250:2291	1227437	2	True				
ANR	1227510	CallExpression	"debug_cache_insert ( D_ALWAYS , fmt , args )"		1227437	0					
ANR	1227511	Callee	debug_cache_insert		1227437	0					
ANR	1227512	Identifier	debug_cache_insert		1227437	0					
ANR	1227513	ArgumentList	D_ALWAYS		1227437	1					
ANR	1227514	Argument	D_ALWAYS		1227437	0					
ANR	1227515	Identifier	D_ALWAYS		1227437	0					
ANR	1227516	Argument	fmt		1227437	1					
ANR	1227517	Identifier	fmt		1227437	0					
ANR	1227518	Argument	args		1227437	2					
ANR	1227519	Identifier	args		1227437	0					
ANR	1227520	ExpressionStatement	va_end ( args )	70:3:2296:2310	1227437	3	True				
ANR	1227521	CallExpression	va_end ( args )		1227437	0					
ANR	1227522	Callee	va_end		1227437	0					
ANR	1227523	Identifier	va_end		1227437	0					
ANR	1227524	ArgumentList	args		1227437	1					
ANR	1227525	Argument	args		1227437	0					
ANR	1227526	Identifier	args		1227437	0					
ANR	1227527	ReturnType	void		1227437	1					
ANR	1227528	Identifier	debug_printf		1227437	2					
ANR	1227529	ParameterList	"debug_level_t level , const char * fmt"		1227437	3					
ANR	1227530	Parameter	debug_level_t level	55:14:1847:1865	1227437	0	True				
ANR	1227531	ParameterType	debug_level_t		1227437	0					
ANR	1227532	Identifier	level		1227437	1					
ANR	1227533	Parameter	const char * fmt	55:35:1868:1882	1227437	1	True				
ANR	1227534	ParameterType	const char *		1227437	0					
ANR	1227535	Identifier	fmt		1227437	1					
ANR	1227536	CFGEntryNode	ENTRY		1227437		True				
ANR	1227537	CFGExitNode	EXIT		1227437		True				
ANR	1227538	Symbol	args		1227437						
ANR	1227539	Symbol	DEBUG_LEVEL		1227437						
ANR	1227540	Symbol	level		1227437						
ANR	1227541	Symbol	cache_enabled		1227437						
ANR	1227542	Symbol	cache_is_caching		1227437						
ANR	1227543	Symbol	true		1227437						
ANR	1227544	Symbol	false		1227437						
ANR	1227545	Symbol	D_ALWAYS		1227437						
ANR	1227546	Symbol	fmt		1227437						
ANR	1227547	Function	debug_dprintf	76:0:2401:3343							
ANR	1227548	FunctionDef	"debug_dprintf (int flags , debug_level_t level , const char * fmt)"		1227547	0					
ANR	1227549	CompoundStatement		77:70:2476:3343	1227547	0					
ANR	1227550	IfStatement	if ( DEBUG_LEVEL ( level ) )		1227547	0					
ANR	1227551	Condition	DEBUG_LEVEL ( level )	79:5:2484:2503	1227547	0	True				
ANR	1227552	CallExpression	DEBUG_LEVEL ( level )		1227547	0					
ANR	1227553	Callee	DEBUG_LEVEL		1227547	0					
ANR	1227554	Identifier	DEBUG_LEVEL		1227547	0					
ANR	1227555	ArgumentList	level		1227547	1					
ANR	1227556	Argument	level		1227547	0					
ANR	1227557	Identifier	level		1227547	0					
ANR	1227558	CompoundStatement		22:2:760:772	1227547	1					
ANR	1227559	IfStatement	if ( cache_enabled == true && cache_is_caching == true )		1227547	0					
ANR	1227560	Condition	cache_enabled == true && cache_is_caching == true	81:6:2516:2564	1227547	0	True				
ANR	1227561	AndExpression	cache_enabled == true && cache_is_caching == true		1227547	0		&&			
ANR	1227562	EqualityExpression	cache_enabled == true		1227547	0		==			
ANR	1227563	Identifier	cache_enabled		1227547	0					
ANR	1227564	Identifier	true		1227547	1					
ANR	1227565	EqualityExpression	cache_is_caching == true		1227547	1		==			
ANR	1227566	Identifier	cache_is_caching		1227547	0					
ANR	1227567	Identifier	true		1227547	1					
ANR	1227568	CompoundStatement		5:57:90:90	1227547	1					
ANR	1227569	ExpressionStatement	"dprintf ( D_ALWAYS , ""Uncachable dprintf forcing log line flush.\\n"" )"	94:3:3139:3204	1227547	0	True				
ANR	1227570	CallExpression	"dprintf ( D_ALWAYS , ""Uncachable dprintf forcing log line flush.\\n"" )"		1227547	0					
ANR	1227571	Callee	dprintf		1227547	0					
ANR	1227572	Identifier	dprintf		1227547	0					
ANR	1227573	ArgumentList	D_ALWAYS		1227547	1					
ANR	1227574	Argument	D_ALWAYS		1227547	0					
ANR	1227575	Identifier	D_ALWAYS		1227547	0					
ANR	1227576	Argument	"""Uncachable dprintf forcing log line flush.\\n"""		1227547	1					
ANR	1227577	PrimaryExpression	"""Uncachable dprintf forcing log line flush.\\n"""		1227547	0					
ANR	1227578	ExpressionStatement	debug_cache_flush ( )	95:3:3209:3228	1227547	1	True				
ANR	1227579	CallExpression	debug_cache_flush ( )		1227547	0					
ANR	1227580	Callee	debug_cache_flush		1227547	0					
ANR	1227581	Identifier	debug_cache_flush		1227547	0					
ANR	1227582	ArgumentList			1227547	1					
ANR	1227583	IdentifierDeclStatement	va_list args ;	98:2:3237:3249	1227547	1	True				
ANR	1227584	IdentifierDecl	args		1227547	0					
ANR	1227585	IdentifierDeclType	va_list		1227547	0					
ANR	1227586	Identifier	args		1227547	1					
ANR	1227587	ExpressionStatement	"va_start ( args , fmt )"	99:2:3253:3274	1227547	2	True				
ANR	1227588	CallExpression	"va_start ( args , fmt )"		1227547	0					
ANR	1227589	Callee	va_start		1227547	0					
ANR	1227590	Identifier	va_start		1227547	0					
ANR	1227591	ArgumentList	args		1227547	1					
ANR	1227592	Argument	args		1227547	0					
ANR	1227593	Identifier	args		1227547	0					
ANR	1227594	Argument	fmt		1227547	1					
ANR	1227595	Identifier	fmt		1227547	0					
ANR	1227596	ExpressionStatement	"_condor_dprintf_va ( flags , fmt , args )"	100:2:3278:3316	1227547	3	True				
ANR	1227597	CallExpression	"_condor_dprintf_va ( flags , fmt , args )"		1227547	0					
ANR	1227598	Callee	_condor_dprintf_va		1227547	0					
ANR	1227599	Identifier	_condor_dprintf_va		1227547	0					
ANR	1227600	ArgumentList	flags		1227547	1					
ANR	1227601	Argument	flags		1227547	0					
ANR	1227602	Identifier	flags		1227547	0					
ANR	1227603	Argument	fmt		1227547	1					
ANR	1227604	Identifier	fmt		1227547	0					
ANR	1227605	Argument	args		1227547	2					
ANR	1227606	Identifier	args		1227547	0					
ANR	1227607	ExpressionStatement	va_end ( args )	101:2:3320:3334	1227547	4	True				
ANR	1227608	CallExpression	va_end ( args )		1227547	0					
ANR	1227609	Callee	va_end		1227547	0					
ANR	1227610	Identifier	va_end		1227547	0					
ANR	1227611	ArgumentList	args		1227547	1					
ANR	1227612	Argument	args		1227547	0					
ANR	1227613	Identifier	args		1227547	0					
ANR	1227614	ReturnType	void		1227547	1					
ANR	1227615	Identifier	debug_dprintf		1227547	2					
ANR	1227616	ParameterList	"int flags , debug_level_t level , const char * fmt"		1227547	3					
ANR	1227617	Parameter	int flags	77:15:2421:2429	1227547	0	True				
ANR	1227618	ParameterType	int		1227547	0					
ANR	1227619	Identifier	flags		1227547	1					
ANR	1227620	Parameter	debug_level_t level	77:26:2432:2450	1227547	1	True				
ANR	1227621	ParameterType	debug_level_t		1227547	0					
ANR	1227622	Identifier	level		1227547	1					
ANR	1227623	Parameter	const char * fmt	77:47:2453:2467	1227547	2	True				
ANR	1227624	ParameterType	const char *		1227547	0					
ANR	1227625	Identifier	fmt		1227547	1					
ANR	1227626	CFGEntryNode	ENTRY		1227547		True				
ANR	1227627	CFGExitNode	EXIT		1227547		True				
ANR	1227628	Symbol	args		1227547						
ANR	1227629	Symbol	DEBUG_LEVEL		1227547						
ANR	1227630	Symbol	level		1227547						
ANR	1227631	Symbol	cache_enabled		1227547						
ANR	1227632	Symbol	cache_is_caching		1227547						
ANR	1227633	Symbol	flags		1227547						
ANR	1227634	Symbol	true		1227547						
ANR	1227635	Symbol	D_ALWAYS		1227547						
ANR	1227636	Symbol	fmt		1227547						
ANR	1227637	Function	debug_error	107:0:3425:3818							
ANR	1227638	FunctionDef	"debug_error (int error , debug_level_t level , const char * fmt)"		1227637	0					
ANR	1227639	CompoundStatement		108:68:3498:3818	1227637	0					
ANR	1227640	ExpressionStatement	debug_cache_flush ( )	111:1:3557:3576	1227637	0	True				
ANR	1227641	CallExpression	debug_cache_flush ( )		1227637	0					
ANR	1227642	Callee	debug_cache_flush		1227637	0					
ANR	1227643	Identifier	debug_cache_flush		1227637	0					
ANR	1227644	ArgumentList			1227637	1					
ANR	1227645	ExpressionStatement	debug_cache_stop_caching ( )	112:1:3579:3605	1227637	1	True				
ANR	1227646	CallExpression	debug_cache_stop_caching ( )		1227637	0					
ANR	1227647	Callee	debug_cache_stop_caching		1227637	0					
ANR	1227648	Identifier	debug_cache_stop_caching		1227637	0					
ANR	1227649	ArgumentList			1227637	1					
ANR	1227650	ExpressionStatement	debug_cache_disable ( )	113:1:3608:3629	1227637	2	True				
ANR	1227651	CallExpression	debug_cache_disable ( )		1227637	0					
ANR	1227652	Callee	debug_cache_disable		1227637	0					
ANR	1227653	Identifier	debug_cache_disable		1227637	0					
ANR	1227654	ArgumentList			1227637	1					
ANR	1227655	IfStatement	if ( DEBUG_LEVEL ( level ) )		1227637	3					
ANR	1227656	Condition	DEBUG_LEVEL ( level )	115:8:3640:3659	1227637	0	True				
ANR	1227657	CallExpression	DEBUG_LEVEL ( level )		1227637	0					
ANR	1227658	Callee	DEBUG_LEVEL		1227637	0					
ANR	1227659	Identifier	DEBUG_LEVEL		1227637	0					
ANR	1227660	ArgumentList	level		1227637	1					
ANR	1227661	Argument	level		1227637	0					
ANR	1227662	Identifier	level		1227637	0					
ANR	1227663	CompoundStatement		9:8:174:186	1227637	1					
ANR	1227664	IdentifierDeclStatement	va_list args ;	116:8:3673:3685	1227637	0	True				
ANR	1227665	IdentifierDecl	args		1227637	0					
ANR	1227666	IdentifierDeclType	va_list		1227637	0					
ANR	1227667	Identifier	args		1227637	1					
ANR	1227668	ExpressionStatement	"va_start ( args , fmt )"	117:8:3695:3716	1227637	1	True				
ANR	1227669	CallExpression	"va_start ( args , fmt )"		1227637	0					
ANR	1227670	Callee	va_start		1227637	0					
ANR	1227671	Identifier	va_start		1227637	0					
ANR	1227672	ArgumentList	args		1227637	1					
ANR	1227673	Argument	args		1227637	0					
ANR	1227674	Identifier	args		1227637	0					
ANR	1227675	Argument	fmt		1227637	1					
ANR	1227676	Identifier	fmt		1227637	0					
ANR	1227677	ExpressionStatement	"_condor_dprintf_va ( D_ALWAYS , fmt , args )"	118:8:3726:3767	1227637	2	True				
ANR	1227678	CallExpression	"_condor_dprintf_va ( D_ALWAYS , fmt , args )"		1227637	0					
ANR	1227679	Callee	_condor_dprintf_va		1227637	0					
ANR	1227680	Identifier	_condor_dprintf_va		1227637	0					
ANR	1227681	ArgumentList	D_ALWAYS		1227637	1					
ANR	1227682	Argument	D_ALWAYS		1227637	0					
ANR	1227683	Identifier	D_ALWAYS		1227637	0					
ANR	1227684	Argument	fmt		1227637	1					
ANR	1227685	Identifier	fmt		1227637	0					
ANR	1227686	Argument	args		1227637	2					
ANR	1227687	Identifier	args		1227637	0					
ANR	1227688	ExpressionStatement	va_end ( args )	119:8:3777:3791	1227637	3	True				
ANR	1227689	CallExpression	va_end ( args )		1227637	0					
ANR	1227690	Callee	va_end		1227637	0					
ANR	1227691	Identifier	va_end		1227637	0					
ANR	1227692	ArgumentList	args		1227637	1					
ANR	1227693	Argument	args		1227637	0					
ANR	1227694	Identifier	args		1227637	0					
ANR	1227695	ExpressionStatement	DC_Exit ( error )	121:1:3800:3816	1227637	4	True				
ANR	1227696	CallExpression	DC_Exit ( error )		1227637	0					
ANR	1227697	Callee	DC_Exit		1227637	0					
ANR	1227698	Identifier	DC_Exit		1227637	0					
ANR	1227699	ArgumentList	error		1227637	1					
ANR	1227700	Argument	error		1227637	0					
ANR	1227701	Identifier	error		1227637	0					
ANR	1227702	ReturnType	void		1227637	1					
ANR	1227703	Identifier	debug_error		1227637	2					
ANR	1227704	ParameterList	"int error , debug_level_t level , const char * fmt"		1227637	3					
ANR	1227705	Parameter	int error	108:13:3443:3451	1227637	0	True				
ANR	1227706	ParameterType	int		1227637	0					
ANR	1227707	Identifier	error		1227637	1					
ANR	1227708	Parameter	debug_level_t level	108:24:3454:3472	1227637	1	True				
ANR	1227709	ParameterType	debug_level_t		1227637	0					
ANR	1227710	Identifier	level		1227637	1					
ANR	1227711	Parameter	const char * fmt	108:45:3475:3489	1227637	2	True				
ANR	1227712	ParameterType	const char *		1227637	0					
ANR	1227713	Identifier	fmt		1227637	1					
ANR	1227714	CFGEntryNode	ENTRY		1227637		True				
ANR	1227715	CFGExitNode	EXIT		1227637		True				
ANR	1227716	Symbol	args		1227637						
ANR	1227717	Symbol	DEBUG_LEVEL		1227637						
ANR	1227718	Symbol	level		1227637						
ANR	1227719	Symbol	D_ALWAYS		1227637						
ANR	1227720	Symbol	error		1227637						
ANR	1227721	Symbol	fmt		1227637						
ANR	1227722	Function	debug_cache_enable	125:0:3900:4038							
ANR	1227723	FunctionDef	debug_cache_enable ()		1227722	0					
ANR	1227724	CompoundStatement		127:0:3930:4038	1227722	0					
ANR	1227725	ExpressionStatement	cache_enabled = true	128:1:3933:3953	1227722	0	True				
ANR	1227726	AssignmentExpression	cache_enabled = true		1227722	0		=			
ANR	1227727	Identifier	cache_enabled		1227722	0					
ANR	1227728	Identifier	true		1227722	1					
ANR	1227729	ExpressionStatement	"dprintf ( D_ALWAYS , ""Enabling log line cache for increased NFS performance.\\n"" )"	129:1:3956:4036	1227722	1	True				
ANR	1227730	CallExpression	"dprintf ( D_ALWAYS , ""Enabling log line cache for increased NFS performance.\\n"" )"		1227722	0					
ANR	1227731	Callee	dprintf		1227722	0					
ANR	1227732	Identifier	dprintf		1227722	0					
ANR	1227733	ArgumentList	D_ALWAYS		1227722	1					
ANR	1227734	Argument	D_ALWAYS		1227722	0					
ANR	1227735	Identifier	D_ALWAYS		1227722	0					
ANR	1227736	Argument	"""Enabling log line cache for increased NFS performance.\\n"""		1227722	1					
ANR	1227737	PrimaryExpression	"""Enabling log line cache for increased NFS performance.\\n"""		1227722	0					
ANR	1227738	ReturnType	void		1227722	1					
ANR	1227739	Identifier	debug_cache_enable		1227722	2					
ANR	1227740	ParameterList			1227722	3					
ANR	1227741	CFGEntryNode	ENTRY		1227722		True				
ANR	1227742	CFGExitNode	EXIT		1227722		True				
ANR	1227743	Symbol	cache_enabled		1227722						
ANR	1227744	Symbol	true		1227722						
ANR	1227745	Symbol	D_ALWAYS		1227722						
ANR	1227746	Function	debug_cache_disable	134:0:4120:4250							
ANR	1227747	FunctionDef	debug_cache_disable ()		1227746	0					
ANR	1227748	CompoundStatement		136:0:4151:4250	1227746	0					
ANR	1227749	ExpressionStatement	debug_cache_flush ( )	137:1:4154:4173	1227746	0	True				
ANR	1227750	CallExpression	debug_cache_flush ( )		1227746	0					
ANR	1227751	Callee	debug_cache_flush		1227746	0					
ANR	1227752	Identifier	debug_cache_flush		1227746	0					
ANR	1227753	ArgumentList			1227746	1					
ANR	1227754	ExpressionStatement	cache_enabled = false	138:1:4176:4197	1227746	1	True				
ANR	1227755	AssignmentExpression	cache_enabled = false		1227746	0		=			
ANR	1227756	Identifier	cache_enabled		1227746	0					
ANR	1227757	Identifier	false		1227746	1					
ANR	1227758	ExpressionStatement	"dprintf ( D_ALWAYS , ""Disabling log line cache.\\n"" )"	139:1:4200:4248	1227746	2	True				
ANR	1227759	CallExpression	"dprintf ( D_ALWAYS , ""Disabling log line cache.\\n"" )"		1227746	0					
ANR	1227760	Callee	dprintf		1227746	0					
ANR	1227761	Identifier	dprintf		1227746	0					
ANR	1227762	ArgumentList	D_ALWAYS		1227746	1					
ANR	1227763	Argument	D_ALWAYS		1227746	0					
ANR	1227764	Identifier	D_ALWAYS		1227746	0					
ANR	1227765	Argument	"""Disabling log line cache.\\n"""		1227746	1					
ANR	1227766	PrimaryExpression	"""Disabling log line cache.\\n"""		1227746	0					
ANR	1227767	ReturnType	void		1227746	1					
ANR	1227768	Identifier	debug_cache_disable		1227746	2					
ANR	1227769	ParameterList			1227746	3					
ANR	1227770	CFGEntryNode	ENTRY		1227746		True				
ANR	1227771	CFGExitNode	EXIT		1227746		True				
ANR	1227772	Symbol	cache_enabled		1227746						
ANR	1227773	Symbol	false		1227746						
ANR	1227774	Symbol	D_ALWAYS		1227746						
ANR	1227775	Function	debug_cache_start_caching	143:0:4332:4478							
ANR	1227776	FunctionDef	debug_cache_start_caching ()		1227775	0					
ANR	1227777	CompoundStatement		145:0:4369:4478	1227775	0					
ANR	1227778	IfStatement	if ( cache_enabled )		1227775	0					
ANR	1227779	Condition	cache_enabled	146:5:4376:4388	1227775	0	True				
ANR	1227780	Identifier	cache_enabled		1227775	0					
ANR	1227781	CompoundStatement		2:20:21:21	1227775	1					
ANR	1227782	ExpressionStatement	cache_is_caching = true	147:2:4395:4418	1227775	0	True				
ANR	1227783	AssignmentExpression	cache_is_caching = true		1227775	0		=			
ANR	1227784	Identifier	cache_is_caching		1227775	0					
ANR	1227785	Identifier	true		1227775	1					
ANR	1227786	ExpressionStatement	"dprintf ( D_ALWAYS , ""Starting to cache log lines.\\n"" )"	148:2:4422:4473	1227775	1	True				
ANR	1227787	CallExpression	"dprintf ( D_ALWAYS , ""Starting to cache log lines.\\n"" )"		1227775	0					
ANR	1227788	Callee	dprintf		1227775	0					
ANR	1227789	Identifier	dprintf		1227775	0					
ANR	1227790	ArgumentList	D_ALWAYS		1227775	1					
ANR	1227791	Argument	D_ALWAYS		1227775	0					
ANR	1227792	Identifier	D_ALWAYS		1227775	0					
ANR	1227793	Argument	"""Starting to cache log lines.\\n"""		1227775	1					
ANR	1227794	PrimaryExpression	"""Starting to cache log lines.\\n"""		1227775	0					
ANR	1227795	ReturnType	void		1227775	1					
ANR	1227796	Identifier	debug_cache_start_caching		1227775	2					
ANR	1227797	ParameterList			1227775	3					
ANR	1227798	CFGEntryNode	ENTRY		1227775		True				
ANR	1227799	CFGExitNode	EXIT		1227775		True				
ANR	1227800	Symbol	cache_enabled		1227775						
ANR	1227801	Symbol	cache_is_caching		1227775						
ANR	1227802	Symbol	true		1227775						
ANR	1227803	Symbol	D_ALWAYS		1227775						
ANR	1227804	Function	debug_cache_stop_caching	153:0:4560:4735							
ANR	1227805	FunctionDef	debug_cache_stop_caching ()		1227804	0					
ANR	1227806	CompoundStatement		155:0:4596:4735	1227804	0					
ANR	1227807	IfStatement	if ( cache_enabled )		1227804	0					
ANR	1227808	Condition	cache_enabled	156:5:4603:4615	1227804	0	True				
ANR	1227809	Identifier	cache_enabled		1227804	0					
ANR	1227810	CompoundStatement		2:20:21:21	1227804	1					
ANR	1227811	ExpressionStatement	debug_cache_flush ( )	157:2:4622:4641	1227804	0	True				
ANR	1227812	CallExpression	debug_cache_flush ( )		1227804	0					
ANR	1227813	Callee	debug_cache_flush		1227804	0					
ANR	1227814	Identifier	debug_cache_flush		1227804	0					
ANR	1227815	ArgumentList			1227804	1					
ANR	1227816	ExpressionStatement	cache_is_caching = false	158:2:4645:4669	1227804	1	True				
ANR	1227817	AssignmentExpression	cache_is_caching = false		1227804	0		=			
ANR	1227818	Identifier	cache_is_caching		1227804	0					
ANR	1227819	Identifier	false		1227804	1					
ANR	1227820	ExpressionStatement	"dprintf ( D_ALWAYS , ""Stopping the caching of log lines.\\n"" )"	159:2:4673:4730	1227804	2	True				
ANR	1227821	CallExpression	"dprintf ( D_ALWAYS , ""Stopping the caching of log lines.\\n"" )"		1227804	0					
ANR	1227822	Callee	dprintf		1227804	0					
ANR	1227823	Identifier	dprintf		1227804	0					
ANR	1227824	ArgumentList	D_ALWAYS		1227804	1					
ANR	1227825	Argument	D_ALWAYS		1227804	0					
ANR	1227826	Identifier	D_ALWAYS		1227804	0					
ANR	1227827	Argument	"""Stopping the caching of log lines.\\n"""		1227804	1					
ANR	1227828	PrimaryExpression	"""Stopping the caching of log lines.\\n"""		1227804	0					
ANR	1227829	ReturnType	void		1227804	1					
ANR	1227830	Identifier	debug_cache_stop_caching		1227804	2					
ANR	1227831	ParameterList			1227804	3					
ANR	1227832	CFGEntryNode	ENTRY		1227804		True				
ANR	1227833	CFGExitNode	EXIT		1227804		True				
ANR	1227834	Symbol	cache_enabled		1227804						
ANR	1227835	Symbol	cache_is_caching		1227804						
ANR	1227836	Symbol	false		1227804						
ANR	1227837	Symbol	D_ALWAYS		1227804						
ANR	1227838	Function	debug_cache_insert	164:0:4817:6589							
ANR	1227839	FunctionDef	"debug_cache_insert (int flags , const char * fmt , va_list args)"		1227838	0					
ANR	1227840	CompoundStatement		166:0:4883:6589	1227838	0					
ANR	1227841	IdentifierDeclStatement	time_t clock_now ;	167:1:4886:4902	1227838	0	True				
ANR	1227842	IdentifierDecl	clock_now		1227838	0					
ANR	1227843	IdentifierDeclType	time_t		1227838	0					
ANR	1227844	Identifier	clock_now		1227838	1					
ANR	1227845	IdentifierDeclStatement	struct tm * tm = NULL ;	168:1:4905:4925	1227838	1	True				
ANR	1227846	IdentifierDecl	* tm = NULL		1227838	0					
ANR	1227847	IdentifierDeclType	struct tm *		1227838	0					
ANR	1227848	Identifier	tm		1227838	1					
ANR	1227849	AssignmentExpression	* tm = NULL		1227838	2		=			
ANR	1227850	Identifier	NULL		1227838	0					
ANR	1227851	Identifier	NULL		1227838	1					
ANR	1227852	IdentifierDeclStatement	"MyString tstamp , fds , line , pid ;"	170:1:4929:4960	1227838	2	True				
ANR	1227853	IdentifierDecl	tstamp		1227838	0					
ANR	1227854	IdentifierDeclType	MyString		1227838	0					
ANR	1227855	Identifier	tstamp		1227838	1					
ANR	1227856	IdentifierDecl	fds		1227838	1					
ANR	1227857	IdentifierDeclType	MyString		1227838	0					
ANR	1227858	Identifier	fds		1227838	1					
ANR	1227859	IdentifierDecl	line		1227838	2					
ANR	1227860	IdentifierDeclType	MyString		1227838	0					
ANR	1227861	Identifier	line		1227838	1					
ANR	1227862	IdentifierDecl	pid		1227838	3					
ANR	1227863	IdentifierDeclType	MyString		1227838	0					
ANR	1227864	Identifier	pid		1227838	1					
ANR	1227865	IdentifierDeclStatement	pid_t my_pid ;	171:1:4963:4975	1227838	3	True				
ANR	1227866	IdentifierDecl	my_pid		1227838	0					
ANR	1227867	IdentifierDeclType	pid_t		1227838	0					
ANR	1227868	Identifier	my_pid		1227838	1					
ANR	1227869	ExpressionStatement	clock_now = time ( NULL )	182:1:5344:5366	1227838	4	True				
ANR	1227870	AssignmentExpression	clock_now = time ( NULL )		1227838	0		=			
ANR	1227871	Identifier	clock_now		1227838	0					
ANR	1227872	CallExpression	time ( NULL )		1227838	1					
ANR	1227873	Callee	time		1227838	0					
ANR	1227874	Identifier	time		1227838	0					
ANR	1227875	ArgumentList	NULL		1227838	1					
ANR	1227876	Argument	NULL		1227838	0					
ANR	1227877	Identifier	NULL		1227838	0					
ANR	1227878	IfStatement	if ( ! DebugUseTimestamps )		1227838	5					
ANR	1227879	Condition	! DebugUseTimestamps	183:5:5373:5391	1227838	0	True				
ANR	1227880	UnaryOperationExpression	! DebugUseTimestamps		1227838	0					
ANR	1227881	UnaryOperator	!		1227838	0					
ANR	1227882	Identifier	DebugUseTimestamps		1227838	1					
ANR	1227883	CompoundStatement		18:26:510:510	1227838	1					
ANR	1227884	ExpressionStatement	tm = localtime ( & clock_now )	184:2:5398:5424	1227838	0	True				
ANR	1227885	AssignmentExpression	tm = localtime ( & clock_now )		1227838	0		=			
ANR	1227886	Identifier	tm		1227838	0					
ANR	1227887	CallExpression	localtime ( & clock_now )		1227838	1					
ANR	1227888	Callee	localtime		1227838	0					
ANR	1227889	Identifier	localtime		1227838	0					
ANR	1227890	ArgumentList	& clock_now		1227838	1					
ANR	1227891	Argument	& clock_now		1227838	0					
ANR	1227892	UnaryOperationExpression	& clock_now		1227838	0					
ANR	1227893	UnaryOperator	&		1227838	0					
ANR	1227894	Identifier	clock_now		1227838	1					
ANR	1227895	IfStatement	if ( ( ( DebugFlags | flags ) & D_NOHEADER ) == 0 )		1227838	6					
ANR	1227896	Condition	( ( DebugFlags | flags ) & D_NOHEADER ) == 0	187:5:5435:5472	1227838	0	True				
ANR	1227897	EqualityExpression	( ( DebugFlags | flags ) & D_NOHEADER ) == 0		1227838	0		==			
ANR	1227898	BitAndExpression	( DebugFlags | flags ) & D_NOHEADER		1227838	0		&			
ANR	1227899	InclusiveOrExpression	DebugFlags | flags		1227838	0		|			
ANR	1227900	Identifier	DebugFlags		1227838	0					
ANR	1227901	Identifier	flags		1227838	1					
ANR	1227902	Identifier	D_NOHEADER		1227838	1					
ANR	1227903	PrimaryExpression	0		1227838	1					
ANR	1227904	CompoundStatement		22:45:591:591	1227838	1					
ANR	1227905	IfStatement	if ( DebugUseTimestamps )		1227838	0					
ANR	1227906	Condition	DebugUseTimestamps	188:6:5483:5500	1227838	0	True				
ANR	1227907	Identifier	DebugUseTimestamps		1227838	0					
ANR	1227908	CompoundStatement		23:26:619:619	1227838	1					
ANR	1227909	ExpressionStatement	"tstamp . sprintf ( ""(%d) "" , ( int ) clock_now )"	189:3:5508:5547	1227838	0	True				
ANR	1227910	CallExpression	"tstamp . sprintf ( ""(%d) "" , ( int ) clock_now )"		1227838	0					
ANR	1227911	Callee	tstamp . sprintf		1227838	0					
ANR	1227912	MemberAccess	tstamp . sprintf		1227838	0					
ANR	1227913	Identifier	tstamp		1227838	0					
ANR	1227914	Identifier	sprintf		1227838	1					
ANR	1227915	ArgumentList	"""(%d) """		1227838	1					
ANR	1227916	Argument	"""(%d) """		1227838	0					
ANR	1227917	PrimaryExpression	"""(%d) """		1227838	0					
ANR	1227918	Argument	( int ) clock_now		1227838	1					
ANR	1227919	CastExpression	( int ) clock_now		1227838	0					
ANR	1227920	CastTarget	int		1227838	0					
ANR	1227921	Identifier	clock_now		1227838	1					
ANR	1227922	ElseStatement	else		1227838	0					
ANR	1227923	CompoundStatement		25:9:674:674	1227838	0					
ANR	1227924	ExpressionStatement	"tstamp . sprintf ( ""%d/%d %02d:%02d:%02d "" , tm -> tm_mon + 1 , tm -> tm_mday , tm -> tm_hour , tm -> tm_min , tm -> tm_sec )"	191:3:5563:5677	1227838	0	True				
ANR	1227925	CallExpression	"tstamp . sprintf ( ""%d/%d %02d:%02d:%02d "" , tm -> tm_mon + 1 , tm -> tm_mday , tm -> tm_hour , tm -> tm_min , tm -> tm_sec )"		1227838	0					
ANR	1227926	Callee	tstamp . sprintf		1227838	0					
ANR	1227927	MemberAccess	tstamp . sprintf		1227838	0					
ANR	1227928	Identifier	tstamp		1227838	0					
ANR	1227929	Identifier	sprintf		1227838	1					
ANR	1227930	ArgumentList	"""%d/%d %02d:%02d:%02d """		1227838	1					
ANR	1227931	Argument	"""%d/%d %02d:%02d:%02d """		1227838	0					
ANR	1227932	PrimaryExpression	"""%d/%d %02d:%02d:%02d """		1227838	0					
ANR	1227933	Argument	tm -> tm_mon + 1		1227838	1					
ANR	1227934	AdditiveExpression	tm -> tm_mon + 1		1227838	0		+			
ANR	1227935	PtrMemberAccess	tm -> tm_mon		1227838	0					
ANR	1227936	Identifier	tm		1227838	0					
ANR	1227937	Identifier	tm_mon		1227838	1					
ANR	1227938	PrimaryExpression	1		1227838	1					
ANR	1227939	Argument	tm -> tm_mday		1227838	2					
ANR	1227940	PtrMemberAccess	tm -> tm_mday		1227838	0					
ANR	1227941	Identifier	tm		1227838	0					
ANR	1227942	Identifier	tm_mday		1227838	1					
ANR	1227943	Argument	tm -> tm_hour		1227838	3					
ANR	1227944	PtrMemberAccess	tm -> tm_hour		1227838	0					
ANR	1227945	Identifier	tm		1227838	0					
ANR	1227946	Identifier	tm_hour		1227838	1					
ANR	1227947	Argument	tm -> tm_min		1227838	4					
ANR	1227948	PtrMemberAccess	tm -> tm_min		1227838	0					
ANR	1227949	Identifier	tm		1227838	0					
ANR	1227950	Identifier	tm_min		1227838	1					
ANR	1227951	Argument	tm -> tm_sec		1227838	5					
ANR	1227952	PtrMemberAccess	tm -> tm_sec		1227838	0					
ANR	1227953	Identifier	tm		1227838	0					
ANR	1227954	Identifier	tm_sec		1227838	1					
ANR	1227955	IfStatement	if ( ( DebugFlags | flags ) & D_FDS )		1227838	1					
ANR	1227956	Condition	( DebugFlags | flags ) & D_FDS	196:6:5690:5715	1227838	0	True				
ANR	1227957	BitAndExpression	( DebugFlags | flags ) & D_FDS		1227838	0		&			
ANR	1227958	InclusiveOrExpression	DebugFlags | flags		1227838	0		|			
ANR	1227959	Identifier	DebugFlags		1227838	0					
ANR	1227960	Identifier	flags		1227838	1					
ANR	1227961	Identifier	D_FDS		1227838	1					
ANR	1227962	CompoundStatement		31:34:834:834	1227838	1					
ANR	1227963	ExpressionStatement	"fds . sprintf ( ""(fd:?) "" )"	201:3:5916:5939	1227838	0	True				
ANR	1227964	CallExpression	"fds . sprintf ( ""(fd:?) "" )"		1227838	0					
ANR	1227965	Callee	fds . sprintf		1227838	0					
ANR	1227966	MemberAccess	fds . sprintf		1227838	0					
ANR	1227967	Identifier	fds		1227838	0					
ANR	1227968	Identifier	sprintf		1227838	1					
ANR	1227969	ArgumentList	"""(fd:?) """		1227838	1					
ANR	1227970	Argument	"""(fd:?) """		1227838	0					
ANR	1227971	PrimaryExpression	"""(fd:?) """		1227838	0					
ANR	1227972	IfStatement	if ( ( DebugFlags | flags ) & D_PID )		1227838	2					
ANR	1227973	Condition	( DebugFlags | flags ) & D_PID	204:6:5952:5977	1227838	0	True				
ANR	1227974	BitAndExpression	( DebugFlags | flags ) & D_PID		1227838	0		&			
ANR	1227975	InclusiveOrExpression	DebugFlags | flags		1227838	0		|			
ANR	1227976	Identifier	DebugFlags		1227838	0					
ANR	1227977	Identifier	flags		1227838	1					
ANR	1227978	Identifier	D_PID		1227838	1					
ANR	1227979	CompoundStatement		39:34:1096:1096	1227838	1					
ANR	1227980	ExpressionStatement	my_pid = ( int ) GetCurrentProcessId ( )	206:3:5998:6034	1227838	0	True				
ANR	1227981	AssignmentExpression	my_pid = ( int ) GetCurrentProcessId ( )		1227838	0		=			
ANR	1227982	Identifier	my_pid		1227838	0					
ANR	1227983	CastExpression	( int ) GetCurrentProcessId ( )		1227838	1					
ANR	1227984	CastTarget	int		1227838	0					
ANR	1227985	CallExpression	GetCurrentProcessId ( )		1227838	1					
ANR	1227986	Callee	GetCurrentProcessId		1227838	0					
ANR	1227987	Identifier	GetCurrentProcessId		1227838	0					
ANR	1227988	ArgumentList			1227838	1					
ANR	1227989	ExpressionStatement	"pid . sprintf ( ""(pid:%d) "" , my_pid )"	210:3:6080:6113	1227838	1	True				
ANR	1227990	CallExpression	"pid . sprintf ( ""(pid:%d) "" , my_pid )"		1227838	0					
ANR	1227991	Callee	pid . sprintf		1227838	0					
ANR	1227992	MemberAccess	pid . sprintf		1227838	0					
ANR	1227993	Identifier	pid		1227838	0					
ANR	1227994	Identifier	sprintf		1227838	1					
ANR	1227995	ArgumentList	"""(pid:%d) """		1227838	1					
ANR	1227996	Argument	"""(pid:%d) """		1227838	0					
ANR	1227997	PrimaryExpression	"""(pid:%d) """		1227838	0					
ANR	1227998	Argument	my_pid		1227838	1					
ANR	1227999	Identifier	my_pid		1227838	0					
ANR	1228000	ExpressionStatement	"line . vsprintf ( fmt , args )"	220:1:6350:6374	1227838	7	True				
ANR	1228001	CallExpression	"line . vsprintf ( fmt , args )"		1227838	0					
ANR	1228002	Callee	line . vsprintf		1227838	0					
ANR	1228003	MemberAccess	line . vsprintf		1227838	0					
ANR	1228004	Identifier	line		1227838	0					
ANR	1228005	Identifier	vsprintf		1227838	1					
ANR	1228006	ArgumentList	fmt		1227838	1					
ANR	1228007	Argument	fmt		1227838	0					
ANR	1228008	Identifier	fmt		1227838	0					
ANR	1228009	Argument	args		1227838	1					
ANR	1228010	Identifier	args		1227838	0					
ANR	1228011	ExpressionStatement	cache += ( tstamp + fds + line )	223:1:6428:6458	1227838	8	True				
ANR	1228012	AssignmentExpression	cache += ( tstamp + fds + line )		1227838	0		+=			
ANR	1228013	Identifier	cache		1227838	0					
ANR	1228014	AdditiveExpression	tstamp + fds + line		1227838	1		+			
ANR	1228015	Identifier	tstamp		1227838	0					
ANR	1228016	AdditiveExpression	fds + line		1227838	1		+			
ANR	1228017	Identifier	fds		1227838	0					
ANR	1228018	Identifier	line		1227838	1					
ANR	1228019	IfStatement	if ( cache . Length ( ) > cache_size )		1227838	9					
ANR	1228020	Condition	cache . Length ( ) > cache_size	226:5:6532:6558	1227838	0	True				
ANR	1228021	RelationalExpression	cache . Length ( ) > cache_size		1227838	0		>			
ANR	1228022	CallExpression	cache . Length ( )		1227838	0					
ANR	1228023	Callee	cache . Length		1227838	0					
ANR	1228024	MemberAccess	cache . Length		1227838	0					
ANR	1228025	Identifier	cache		1227838	0					
ANR	1228026	Identifier	Length		1227838	1					
ANR	1228027	ArgumentList			1227838	1					
ANR	1228028	Identifier	cache_size		1227838	1					
ANR	1228029	CompoundStatement		61:34:1677:1677	1227838	1					
ANR	1228030	ExpressionStatement	debug_cache_flush ( )	227:2:6565:6584	1227838	0	True				
ANR	1228031	CallExpression	debug_cache_flush ( )		1227838	0					
ANR	1228032	Callee	debug_cache_flush		1227838	0					
ANR	1228033	Identifier	debug_cache_flush		1227838	0					
ANR	1228034	ArgumentList			1227838	1					
ANR	1228035	ReturnType	void		1227838	1					
ANR	1228036	Identifier	debug_cache_insert		1227838	2					
ANR	1228037	ParameterList	"int flags , const char * fmt , va_list args"		1227838	3					
ANR	1228038	Parameter	int flags	165:19:4841:4849	1227838	0	True				
ANR	1228039	ParameterType	int		1227838	0					
ANR	1228040	Identifier	flags		1227838	1					
ANR	1228041	Parameter	const char * fmt	165:30:4852:4866	1227838	1	True				
ANR	1228042	ParameterType	const char *		1227838	0					
ANR	1228043	Identifier	fmt		1227838	1					
ANR	1228044	Parameter	va_list args	165:47:4869:4880	1227838	2	True				
ANR	1228045	ParameterType	va_list		1227838	0					
ANR	1228046	Identifier	args		1227838	1					
ANR	1228047	CFGEntryNode	ENTRY		1227838		True				
ANR	1228048	CFGExitNode	EXIT		1227838		True				
ANR	1228049	Symbol	localtime		1227838						
ANR	1228050	Symbol	& clock_now		1227838						
ANR	1228051	Symbol	line		1227838						
ANR	1228052	Symbol	DebugUseTimestamps		1227838						
ANR	1228053	Symbol	flags		1227838						
ANR	1228054	Symbol	pid		1227838						
ANR	1228055	Symbol	fmt		1227838						
ANR	1228056	Symbol	tm -> tm_mday		1227838						
ANR	1228057	Symbol	D_PID		1227838						
ANR	1228058	Symbol	cache		1227838						
ANR	1228059	Symbol	NULL		1227838						
ANR	1228060	Symbol	cache_size		1227838						
ANR	1228061	Symbol	cache . Length		1227838						
ANR	1228062	Symbol	DebugFlags		1227838						
ANR	1228063	Symbol	GetCurrentProcessId		1227838						
ANR	1228064	Symbol	clock_now		1227838						
ANR	1228065	Symbol	tm -> tm_mon		1227838						
ANR	1228066	Symbol	my_pid		1227838						
ANR	1228067	Symbol	args		1227838						
ANR	1228068	Symbol	D_FDS		1227838						
ANR	1228069	Symbol	tstamp		1227838						
ANR	1228070	Symbol	fds		1227838						
ANR	1228071	Symbol	tm -> tm_min		1227838						
ANR	1228072	Symbol	tm -> tm_sec		1227838						
ANR	1228073	Symbol	tm		1227838						
ANR	1228074	Symbol	tm -> tm_hour		1227838						
ANR	1228075	Symbol	time		1227838						
ANR	1228076	Symbol	* tm		1227838						
ANR	1228077	Symbol	D_NOHEADER		1227838						
ANR	1228078	Function	debug_cache_flush	232:0:6671:7102							
ANR	1228079	FunctionDef	debug_cache_flush ()		1228078	0					
ANR	1228080	CompoundStatement		234:0:6700:7102	1228078	0					
ANR	1228081	IfStatement	"if ( cache != """" )"		1228078	0					
ANR	1228082	Condition	"cache != """""	239:5:6909:6919	1228078	0	True				
ANR	1228083	EqualityExpression	"cache != """""		1228078	0		!=			
ANR	1228084	Identifier	cache		1228078	0					
ANR	1228085	PrimaryExpression	""""""		1228078	1					
ANR	1228086	CompoundStatement		6:18:221:221	1228078	1					
ANR	1228087	ExpressionStatement	"dprintf ( D_ALWAYS , ""LOG LINE CACHE: Begin Flush\\n"" )"	240:2:6926:6976	1228078	0	True				
ANR	1228088	CallExpression	"dprintf ( D_ALWAYS , ""LOG LINE CACHE: Begin Flush\\n"" )"		1228078	0					
ANR	1228089	Callee	dprintf		1228078	0					
ANR	1228090	Identifier	dprintf		1228078	0					
ANR	1228091	ArgumentList	D_ALWAYS		1228078	1					
ANR	1228092	Argument	D_ALWAYS		1228078	0					
ANR	1228093	Identifier	D_ALWAYS		1228078	0					
ANR	1228094	Argument	"""LOG LINE CACHE: Begin Flush\\n"""		1228078	1					
ANR	1228095	PrimaryExpression	"""LOG LINE CACHE: Begin Flush\\n"""		1228078	0					
ANR	1228096	ExpressionStatement	"dprintf ( D_ALWAYS | D_NOHEADER , ""%s"" , cache . Value ( ) )"	241:2:6980:7031	1228078	1	True				
ANR	1228097	CallExpression	"dprintf ( D_ALWAYS | D_NOHEADER , ""%s"" , cache . Value ( ) )"		1228078	0					
ANR	1228098	Callee	dprintf		1228078	0					
ANR	1228099	Identifier	dprintf		1228078	0					
ANR	1228100	ArgumentList	D_ALWAYS | D_NOHEADER		1228078	1					
ANR	1228101	Argument	D_ALWAYS | D_NOHEADER		1228078	0					
ANR	1228102	InclusiveOrExpression	D_ALWAYS | D_NOHEADER		1228078	0		|			
ANR	1228103	Identifier	D_ALWAYS		1228078	0					
ANR	1228104	Identifier	D_NOHEADER		1228078	1					
ANR	1228105	Argument	"""%s"""		1228078	1					
ANR	1228106	PrimaryExpression	"""%s"""		1228078	0					
ANR	1228107	Argument	cache . Value ( )		1228078	2					
ANR	1228108	CallExpression	cache . Value ( )		1228078	0					
ANR	1228109	Callee	cache . Value		1228078	0					
ANR	1228110	MemberAccess	cache . Value		1228078	0					
ANR	1228111	Identifier	cache		1228078	0					
ANR	1228112	Identifier	Value		1228078	1					
ANR	1228113	ArgumentList			1228078	1					
ANR	1228114	ExpressionStatement	"dprintf ( D_ALWAYS , ""LOG LINE CACHE: End Flush\\n"" )"	242:2:7035:7083	1228078	2	True				
ANR	1228115	CallExpression	"dprintf ( D_ALWAYS , ""LOG LINE CACHE: End Flush\\n"" )"		1228078	0					
ANR	1228116	Callee	dprintf		1228078	0					
ANR	1228117	Identifier	dprintf		1228078	0					
ANR	1228118	ArgumentList	D_ALWAYS		1228078	1					
ANR	1228119	Argument	D_ALWAYS		1228078	0					
ANR	1228120	Identifier	D_ALWAYS		1228078	0					
ANR	1228121	Argument	"""LOG LINE CACHE: End Flush\\n"""		1228078	1					
ANR	1228122	PrimaryExpression	"""LOG LINE CACHE: End Flush\\n"""		1228078	0					
ANR	1228123	ExpressionStatement	"cache = """""	243:2:7087:7097	1228078	3	True				
ANR	1228124	AssignmentExpression	"cache = """""		1228078	0		=			
ANR	1228125	Identifier	cache		1228078	0					
ANR	1228126	PrimaryExpression	""""""		1228078	1					
ANR	1228127	ReturnType	void		1228078	1					
ANR	1228128	Identifier	debug_cache_flush		1228078	2					
ANR	1228129	ParameterList			1228078	3					
ANR	1228130	CFGEntryNode	ENTRY		1228078		True				
ANR	1228131	CFGExitNode	EXIT		1228078		True				
ANR	1228132	Symbol	cache		1228078						
ANR	1228133	Symbol	D_ALWAYS		1228078						
ANR	1228134	Symbol	cache . Value		1228078						
ANR	1228135	Symbol	D_NOHEADER		1228078						
ANR	1228136	Function	debug_cache_set_size	248:0:7184:7393							
ANR	1228137	FunctionDef	debug_cache_set_size (int size)		1228136	0					
ANR	1228138	CompoundStatement		249:0:7220:7393	1228136	0					
ANR	1228139	IfStatement	if ( cache_enabled && cache_is_caching )		1228136	0					
ANR	1228140	Condition	cache_enabled && cache_is_caching	251:5:7270:7302	1228136	0	True				
ANR	1228141	AndExpression	cache_enabled && cache_is_caching		1228136	0		&&			
ANR	1228142	Identifier	cache_enabled		1228136	0					
ANR	1228143	Identifier	cache_is_caching		1228136	1					
ANR	1228144	CompoundStatement		3:40:84:84	1228136	1					
ANR	1228145	ExpressionStatement	debug_cache_flush ( )	252:2:7309:7328	1228136	0	True				
ANR	1228146	CallExpression	debug_cache_flush ( )		1228136	0					
ANR	1228147	Callee	debug_cache_flush		1228136	0					
ANR	1228148	Identifier	debug_cache_flush		1228136	0					
ANR	1228149	ArgumentList			1228136	1					
ANR	1228150	IfStatement	if ( size < 0 )		1228136	1					
ANR	1228151	Condition	size < 0	255:5:7339:7346	1228136	0	True				
ANR	1228152	RelationalExpression	size < 0		1228136	0		<			
ANR	1228153	Identifier	size		1228136	0					
ANR	1228154	PrimaryExpression	0		1228136	1					
ANR	1228155	CompoundStatement		7:15:128:128	1228136	1					
ANR	1228156	ExpressionStatement	cache_size = 0	256:2:7353:7367	1228136	0	True				
ANR	1228157	AssignmentExpression	cache_size = 0		1228136	0		=			
ANR	1228158	Identifier	cache_size		1228136	0					
ANR	1228159	PrimaryExpression	0		1228136	1					
ANR	1228160	ExpressionStatement	cache_size = size	259:1:7374:7391	1228136	2	True				
ANR	1228161	AssignmentExpression	cache_size = size		1228136	0		=			
ANR	1228162	Identifier	cache_size		1228136	0					
ANR	1228163	Identifier	size		1228136	1					
ANR	1228164	ReturnType	void		1228136	1					
ANR	1228165	Identifier	debug_cache_set_size		1228136	2					
ANR	1228166	ParameterList	int size		1228136	3					
ANR	1228167	Parameter	int size	248:26:7210:7217	1228136	0	True				
ANR	1228168	ParameterType	int		1228136	0					
ANR	1228169	Identifier	size		1228136	1					
ANR	1228170	CFGEntryNode	ENTRY		1228136		True				
ANR	1228171	CFGExitNode	EXIT		1228136		True				
ANR	1228172	Symbol	size		1228136						
ANR	1228173	Symbol	cache_enabled		1228136						
ANR	1228174	Symbol	cache_size		1228136						
ANR	1228175	Symbol	cache_is_caching		1228136						
ANR	1228176	Function	check_warning_strictness	263:0:7475:7810							
ANR	1228177	FunctionDef	"check_warning_strictness (strict_level_t strictness , bool quit_if_error)"		1228176	0					
ANR	1228178	CompoundStatement		264:0:7554:7810	1228176	0					
ANR	1228179	IfStatement	if ( Dagman :: _strict >= strictness )		1228176	0					
ANR	1228180	Condition	Dagman :: _strict >= strictness	265:6:7562:7590	1228176	0	True				
ANR	1228181	RelationalExpression	Dagman :: _strict >= strictness		1228176	0		>=			
ANR	1228182	Identifier	Dagman :: _strict		1228176	0					
ANR	1228183	Identifier	strictness		1228176	1					
ANR	1228184	CompoundStatement		2:38:39:39	1228176	1					
ANR	1228185	Statement	debug_printf	266:2:7598:7609	1228176	0	True				
ANR	1228186	Statement	(	266:14:7610:7610	1228176	1	True				
ANR	1228187	Statement	DEBUG_QUIET	266:16:7612:7622	1228176	2	True				
ANR	1228188	Statement	","	266:27:7623:7623	1228176	3	True				
ANR	1228189	Statement	"""ERROR: Warning is fatal """	266:29:7625:7650	1228176	4	True				
ANR	1228190	Statement	"""error because of DAGMAN_USE_STRICT setting\\n"""	267:5:7657:7702	1228176	5	True				
ANR	1228191	Statement	)	267:52:7704:7704	1228176	6	True				
ANR	1228192	ExpressionStatement		267:53:7705:7705	1228176	7	True				
ANR	1228193	IfStatement	if ( quit_if_error )		1228176	8					
ANR	1228194	Condition	quit_if_error	268:7:7714:7726	1228176	0	True				
ANR	1228195	Identifier	quit_if_error		1228176	0					
ANR	1228196	CompoundStatement		5:23:175:175	1228176	1					
ANR	1228197	ExpressionStatement	main_shutdown_rescue ( EXIT_ERROR )	269:3:7735:7769	1228176	0	True				
ANR	1228198	CallExpression	main_shutdown_rescue ( EXIT_ERROR )		1228176	0					
ANR	1228199	Callee	main_shutdown_rescue		1228176	0					
ANR	1228200	Identifier	main_shutdown_rescue		1228176	0					
ANR	1228201	ArgumentList	EXIT_ERROR		1228176	1					
ANR	1228202	Argument	EXIT_ERROR		1228176	0					
ANR	1228203	Identifier	EXIT_ERROR		1228176	0					
ANR	1228204	ReturnStatement	return true ;	272:2:7778:7789	1228176	9	True				
ANR	1228205	Identifier	true		1228176	0					
ANR	1228206	ReturnStatement	return false ;	275:1:7796:7808	1228176	1	True				
ANR	1228207	Identifier	false		1228176	0					
ANR	1228208	ReturnType	bool		1228176	1					
ANR	1228209	Identifier	check_warning_strictness		1228176	2					
ANR	1228210	ParameterList	"strict_level_t strictness , bool quit_if_error"		1228176	3					
ANR	1228211	Parameter	strict_level_t strictness	263:31:7506:7530	1228176	0	True				
ANR	1228212	ParameterType	strict_level_t		1228176	0					
ANR	1228213	Identifier	strictness		1228176	1					
ANR	1228214	Parameter	bool quit_if_error	263:58:7533:7550	1228176	1	True				
ANR	1228215	ParameterType	bool		1228176	0					
ANR	1228216	Identifier	quit_if_error		1228176	1					
ANR	1228217	CFGEntryNode	ENTRY		1228176		True				
ANR	1228218	CFGExitNode	EXIT		1228176		True				
ANR	1228219	Symbol	Dagman :: _strict		1228176						
ANR	1228220	Symbol	EXIT_ERROR		1228176						
ANR	1228221	Symbol	true		1228176						
ANR	1228222	Symbol	false		1228176						
ANR	1228223	Symbol	strictness		1228176						
ANR	1228224	Symbol	quit_if_error		1228176						
