command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1447039	File	data/converged/CVE-2011-4930_htcondor/global.cpp								
ANR	1447040	Function	alert	43:0:1005:1070							
ANR	1447041	FunctionDef	alert (const char * s)		1447040	0					
ANR	1447042	CompoundStatement		44:0:1031:1070	1447040	0					
ANR	1447043	ExpressionStatement	"fprintf ( stderr , "">>>>ERROR %s\\n"" , s )"	45:1:1034:1068	1447040	0	True				
ANR	1447044	CallExpression	"fprintf ( stderr , "">>>>ERROR %s\\n"" , s )"		1447040	0					
ANR	1447045	Callee	fprintf		1447040	0					
ANR	1447046	Identifier	fprintf		1447040	0					
ANR	1447047	ArgumentList	stderr		1447040	1					
ANR	1447048	Argument	stderr		1447040	0					
ANR	1447049	Identifier	stderr		1447040	0					
ANR	1447050	Argument	""">>>>ERROR %s\\n"""		1447040	1					
ANR	1447051	PrimaryExpression	""">>>>ERROR %s\\n"""		1447040	0					
ANR	1447052	Argument	s		1447040	2					
ANR	1447053	Identifier	s		1447040	0					
ANR	1447054	ReturnType	void		1447040	1					
ANR	1447055	Identifier	alert		1447040	2					
ANR	1447056	ParameterList	const char * s		1447040	3					
ANR	1447057	Parameter	const char * s	43:11:1016:1028	1447040	0	True				
ANR	1447058	ParameterType	const char *		1447040	0					
ANR	1447059	Identifier	s		1447040	1					
ANR	1447060	CFGEntryNode	ENTRY		1447040		True				
ANR	1447061	CFGExitNode	EXIT		1447040		True				
ANR	1447062	Symbol	s		1447040						
ANR	1447063	Symbol	stderr		1447040						
ANR	1447064	Function	randExponential	63:0:1341:1637							
ANR	1447065	FunctionDef	randExponential (float mean)		1447064	0					
ANR	1447066	CompoundStatement		64:0:1377:1637	1447064	0					
ANR	1447067	IdentifierDeclStatement	double r ;	69:1:1530:1538	1447064	0	True				
ANR	1447068	IdentifierDecl	r		1447064	0					
ANR	1447069	IdentifierDeclType	double		1447064	0					
ANR	1447070	Identifier	r		1447064	1					
ANR	1447071	ExpressionStatement	r = rand ( )	70:1:1541:1551	1447064	1	True				
ANR	1447072	AssignmentExpression	r = rand ( )		1447064	0		=			
ANR	1447073	Identifier	r		1447064	0					
ANR	1447074	CallExpression	rand ( )		1447064	1					
ANR	1447075	Callee	rand		1447064	0					
ANR	1447076	Identifier	rand		1447064	0					
ANR	1447077	ArgumentList			1447064	1					
ANR	1447078	ExpressionStatement	r += 1	71:1:1554:1560	1447064	2	True				
ANR	1447079	AssignmentExpression	r += 1		1447064	0		+=			
ANR	1447080	Identifier	r		1447064	0					
ANR	1447081	PrimaryExpression	1		1447064	1					
ANR	1447082	IdentifierDeclStatement	double d = RAND_MAX ;	72:1:1563:1582	1447064	3	True				
ANR	1447083	IdentifierDecl	d = RAND_MAX		1447064	0					
ANR	1447084	IdentifierDeclType	double		1447064	0					
ANR	1447085	Identifier	d		1447064	1					
ANR	1447086	AssignmentExpression	d = RAND_MAX		1447064	2		=			
ANR	1447087	Identifier	RAND_MAX		1447064	0					
ANR	1447088	Identifier	RAND_MAX		1447064	1					
ANR	1447089	ExpressionStatement	d += 2	73:1:1585:1591	1447064	4	True				
ANR	1447090	AssignmentExpression	d += 2		1447064	0		+=			
ANR	1447091	Identifier	d		1447064	0					
ANR	1447092	PrimaryExpression	2		1447064	1					
ANR	1447093	ExpressionStatement	r = r / d	74:1:1594:1601	1447064	5	True				
ANR	1447094	AssignmentExpression	r = r / d		1447064	0		=			
ANR	1447095	Identifier	r		1447064	0					
ANR	1447096	MultiplicativeExpression	r / d		1447064	1		/			
ANR	1447097	Identifier	r		1447064	0					
ANR	1447098	Identifier	d		1447064	1					
ANR	1447099	ReturnStatement	return - mean * logf ( ( float ) r ) ;	76:1:1605:1635	1447064	6	True				
ANR	1447100	MultiplicativeExpression	- mean * logf ( ( float ) r )		1447064	0		*			
ANR	1447101	UnaryOperationExpression	- mean		1447064	0					
ANR	1447102	UnaryOperator	-		1447064	0					
ANR	1447103	Identifier	mean		1447064	1					
ANR	1447104	CallExpression	logf ( ( float ) r )		1447064	1					
ANR	1447105	Callee	logf		1447064	0					
ANR	1447106	Identifier	logf		1447064	0					
ANR	1447107	ArgumentList	( float ) r		1447064	1					
ANR	1447108	Argument	( float ) r		1447064	0					
ANR	1447109	CastExpression	( float ) r		1447064	0					
ANR	1447110	CastTarget	float		1447064	0					
ANR	1447111	Identifier	r		1447064	1					
ANR	1447112	ReturnType	float		1447064	1					
ANR	1447113	Identifier	randExponential		1447064	2					
ANR	1447114	ParameterList	float mean		1447064	3					
ANR	1447115	Parameter	float mean	63:23:1364:1373	1447064	0	True				
ANR	1447116	ParameterType	float		1447064	0					
ANR	1447117	Identifier	mean		1447064	1					
ANR	1447118	CFGEntryNode	ENTRY		1447064		True				
ANR	1447119	CFGExitNode	EXIT		1447064		True				
ANR	1447120	Symbol	rand		1447064						
ANR	1447121	Symbol	RAND_MAX		1447064						
ANR	1447122	Symbol	logf		1447064						
ANR	1447123	Symbol	r		1447064						
ANR	1447124	Symbol	d		1447064						
ANR	1447125	Symbol	mean		1447064						
ANR	1447126	Function	randNormal	94:0:1942:2365							
ANR	1447127	FunctionDef	"randNormal (float mean , float stdev)"		1447126	0					
ANR	1447128	CompoundStatement		95:0:1986:2365	1447126	0					
ANR	1447129	IdentifierDeclStatement	"double V_1 , V_2 , S , X_1 ;"	96:1:1989:2012	1447126	0	True				
ANR	1447130	IdentifierDecl	V_1		1447126	0					
ANR	1447131	IdentifierDeclType	double		1447126	0					
ANR	1447132	Identifier	V_1		1447126	1					
ANR	1447133	IdentifierDecl	V_2		1447126	1					
ANR	1447134	IdentifierDeclType	double		1447126	0					
ANR	1447135	Identifier	V_2		1447126	1					
ANR	1447136	IdentifierDecl	S		1447126	2					
ANR	1447137	IdentifierDeclType	double		1447126	0					
ANR	1447138	Identifier	S		1447126	1					
ANR	1447139	IdentifierDecl	X_1		1447126	3					
ANR	1447140	IdentifierDeclType	double		1447126	0					
ANR	1447141	Identifier	X_1		1447126	1					
ANR	1447142	DoStatement	do		1447126	1					
ANR	1447143	CompoundStatement		5:4:94:94	1447126	0					
ANR	1447144	ExpressionStatement	V_1 = ( 2 * ( double ) rand ( ) ) / RAND_MAX - 1	100:2:2085:2123	1447126	0	True				
ANR	1447145	AssignmentExpression	V_1 = ( 2 * ( double ) rand ( ) ) / RAND_MAX - 1		1447126	0		=			
ANR	1447146	Identifier	V_1		1447126	0					
ANR	1447147	AdditiveExpression	( 2 * ( double ) rand ( ) ) / RAND_MAX - 1		1447126	1		-			
ANR	1447148	MultiplicativeExpression	( 2 * ( double ) rand ( ) ) / RAND_MAX		1447126	0		/			
ANR	1447149	MultiplicativeExpression	2 * ( double ) rand ( )		1447126	0		*			
ANR	1447150	PrimaryExpression	2		1447126	0					
ANR	1447151	CastExpression	( double ) rand ( )		1447126	1					
ANR	1447152	CastTarget	double		1447126	0					
ANR	1447153	CallExpression	rand ( )		1447126	1					
ANR	1447154	Callee	rand		1447126	0					
ANR	1447155	Identifier	rand		1447126	0					
ANR	1447156	ArgumentList			1447126	1					
ANR	1447157	Identifier	RAND_MAX		1447126	1					
ANR	1447158	PrimaryExpression	1		1447126	1					
ANR	1447159	ExpressionStatement	V_2 = ( 2 * ( double ) rand ( ) ) / RAND_MAX - 1	101:2:2148:2186	1447126	1	True				
ANR	1447160	AssignmentExpression	V_2 = ( 2 * ( double ) rand ( ) ) / RAND_MAX - 1		1447126	0		=			
ANR	1447161	Identifier	V_2		1447126	0					
ANR	1447162	AdditiveExpression	( 2 * ( double ) rand ( ) ) / RAND_MAX - 1		1447126	1		-			
ANR	1447163	MultiplicativeExpression	( 2 * ( double ) rand ( ) ) / RAND_MAX		1447126	0		/			
ANR	1447164	MultiplicativeExpression	2 * ( double ) rand ( )		1447126	0		*			
ANR	1447165	PrimaryExpression	2		1447126	0					
ANR	1447166	CastExpression	( double ) rand ( )		1447126	1					
ANR	1447167	CastTarget	double		1447126	0					
ANR	1447168	CallExpression	rand ( )		1447126	1					
ANR	1447169	Callee	rand		1447126	0					
ANR	1447170	Identifier	rand		1447126	0					
ANR	1447171	ArgumentList			1447126	1					
ANR	1447172	Identifier	RAND_MAX		1447126	1					
ANR	1447173	PrimaryExpression	1		1447126	1					
ANR	1447174	ExpressionStatement	S = ( V_1 * V_1 ) + ( V_2 * V_2 )	102:2:2211:2234	1447126	2	True				
ANR	1447175	AssignmentExpression	S = ( V_1 * V_1 ) + ( V_2 * V_2 )		1447126	0		=			
ANR	1447176	Identifier	S		1447126	0					
ANR	1447177	AdditiveExpression	( V_1 * V_1 ) + ( V_2 * V_2 )		1447126	1		+			
ANR	1447178	MultiplicativeExpression	V_1 * V_1		1447126	0		*			
ANR	1447179	Identifier	V_1		1447126	0					
ANR	1447180	Identifier	V_1		1447126	1					
ANR	1447181	MultiplicativeExpression	V_2 * V_2		1447126	1		*			
ANR	1447182	Identifier	V_2		1447126	0					
ANR	1447183	Identifier	V_2		1447126	1					
ANR	1447184	Condition	S >= 1	103:10:2246:2251	1447126	1	True				
ANR	1447185	RelationalExpression	S >= 1		1447126	0		>=			
ANR	1447186	Identifier	S		1447126	0					
ANR	1447187	PrimaryExpression	1		1447126	1					
ANR	1447188	IfStatement	if ( 0 == S )		1447126	2					
ANR	1447189	Condition	0 == S	105:5:2262:2265	1447126	0	True				
ANR	1447190	EqualityExpression	0 == S		1447126	0		==			
ANR	1447191	PrimaryExpression	0		1447126	0					
ANR	1447192	Identifier	S		1447126	1					
ANR	1447193	ExpressionStatement	X_1 = 0	106:2:2271:2278	1447126	1	True				
ANR	1447194	AssignmentExpression	X_1 = 0		1447126	0		=			
ANR	1447195	Identifier	X_1		1447126	0					
ANR	1447196	PrimaryExpression	0		1447126	1					
ANR	1447197	ElseStatement	else		1447126	0					
ANR	1447198	ExpressionStatement	X_1 = V_1 * sqrt ( - 2 * log ( S ) / S )	108:2:2288:2317	1447126	0	True				
ANR	1447199	AssignmentExpression	X_1 = V_1 * sqrt ( - 2 * log ( S ) / S )		1447126	0		=			
ANR	1447200	Identifier	X_1		1447126	0					
ANR	1447201	MultiplicativeExpression	V_1 * sqrt ( - 2 * log ( S ) / S )		1447126	1		*			
ANR	1447202	Identifier	V_1		1447126	0					
ANR	1447203	CallExpression	sqrt ( - 2 * log ( S ) / S )		1447126	1					
ANR	1447204	Callee	sqrt		1447126	0					
ANR	1447205	Identifier	sqrt		1447126	0					
ANR	1447206	ArgumentList	- 2 * log ( S ) / S		1447126	1					
ANR	1447207	Argument	- 2 * log ( S ) / S		1447126	0					
ANR	1447208	MultiplicativeExpression	- 2 * log ( S ) / S		1447126	0		*			
ANR	1447209	UnaryOperationExpression	- 2		1447126	0					
ANR	1447210	UnaryOperator	-		1447126	0					
ANR	1447211	PrimaryExpression	2		1447126	1					
ANR	1447212	MultiplicativeExpression	log ( S ) / S		1447126	1		/			
ANR	1447213	CallExpression	log ( S )		1447126	0					
ANR	1447214	Callee	log		1447126	0					
ANR	1447215	Identifier	log		1447126	0					
ANR	1447216	ArgumentList	S		1447126	1					
ANR	1447217	Argument	S		1447126	0					
ANR	1447218	Identifier	S		1447126	0					
ANR	1447219	Identifier	S		1447126	1					
ANR	1447220	ReturnStatement	return ( float ) ( X_1 * stdev + mean ) ;	111:1:2331:2363	1447126	3	True				
ANR	1447221	CastExpression	( float ) ( X_1 * stdev + mean )		1447126	0					
ANR	1447222	CastTarget	float		1447126	0					
ANR	1447223	AdditiveExpression	X_1 * stdev + mean		1447126	1		+			
ANR	1447224	MultiplicativeExpression	X_1 * stdev		1447126	0		*			
ANR	1447225	Identifier	X_1		1447126	0					
ANR	1447226	Identifier	stdev		1447126	1					
ANR	1447227	Identifier	mean		1447126	1					
ANR	1447228	ReturnType	float		1447126	1					
ANR	1447229	Identifier	randNormal		1447126	2					
ANR	1447230	ParameterList	"float mean , float stdev"		1447126	3					
ANR	1447231	Parameter	float mean	94:18:1960:1969	1447126	0	True				
ANR	1447232	ParameterType	float		1447126	0					
ANR	1447233	Identifier	mean		1447126	1					
ANR	1447234	Parameter	float stdev	94:30:1972:1982	1447126	1	True				
ANR	1447235	ParameterType	float		1447126	0					
ANR	1447236	Identifier	stdev		1447126	1					
ANR	1447237	CFGEntryNode	ENTRY		1447126		True				
ANR	1447238	CFGExitNode	EXIT		1447126		True				
ANR	1447239	Symbol	rand		1447126						
ANR	1447240	Symbol	RAND_MAX		1447126						
ANR	1447241	Symbol	S		1447126						
ANR	1447242	Symbol	sqrt		1447126						
ANR	1447243	Symbol	log		1447126						
ANR	1447244	Symbol	mean		1447126						
ANR	1447245	Symbol	V_2		1447126						
ANR	1447246	Symbol	V_1		1447126						
ANR	1447247	Symbol	X_1		1447126						
ANR	1447248	Symbol	stdev		1447126						
ANR	1447249	Function	strlwr	131:0:2646:2810							
ANR	1447250	FunctionDef	strlwr (char * tab)		1447249	0					
ANR	1447251	CompoundStatement		132:0:2671:2810	1447249	0					
ANR	1447252	IdentifierDeclStatement	char * beg = tab ;	133:1:2674:2688	1447249	0	True				
ANR	1447253	IdentifierDecl	* beg = tab		1447249	0					
ANR	1447254	IdentifierDeclType	char *		1447249	0					
ANR	1447255	Identifier	beg		1447249	1					
ANR	1447256	AssignmentExpression	* beg = tab		1447249	2		=			
ANR	1447257	Identifier	tab		1447249	0					
ANR	1447258	Identifier	tab		1447249	1					
ANR	1447259	IfStatement	if ( NULL != tab )		1447249	1					
ANR	1447260	Condition	NULL != tab	134:5:2695:2703	1447249	0	True				
ANR	1447261	EqualityExpression	NULL != tab		1447249	0		!=			
ANR	1447262	Identifier	NULL		1447249	0					
ANR	1447263	Identifier	tab		1447249	1					
ANR	1447264	CompoundStatement		3:17:35:35	1447249	1					
ANR	1447265	WhileStatement	while ( * tab )		1447249	0					
ANR	1447266	Condition	* tab	135:9:2718:2721	1447249	0	True				
ANR	1447267	UnaryOperationExpression	* tab		1447249	0					
ANR	1447268	UnaryOperator	*		1447249	0					
ANR	1447269	Identifier	tab		1447249	1					
ANR	1447270	CompoundStatement		4:16:53:53	1447249	1					
ANR	1447271	IfStatement	if ( isupper ( * tab ) )		1447249	0					
ANR	1447272	Condition	isupper ( * tab )	136:7:2734:2746	1447249	0	True				
ANR	1447273	CallExpression	isupper ( * tab )		1447249	0					
ANR	1447274	Callee	isupper		1447249	0					
ANR	1447275	Identifier	isupper		1447249	0					
ANR	1447276	ArgumentList	* tab		1447249	1					
ANR	1447277	Argument	* tab		1447249	0					
ANR	1447278	UnaryOperationExpression	* tab		1447249	0					
ANR	1447279	UnaryOperator	*		1447249	0					
ANR	1447280	Identifier	tab		1447249	1					
ANR	1447281	ExpressionStatement	* tab = tolower ( * tab )	137:4:2754:2776	1447249	1	True				
ANR	1447282	AssignmentExpression	* tab = tolower ( * tab )		1447249	0		=			
ANR	1447283	UnaryOperationExpression	* tab		1447249	0					
ANR	1447284	UnaryOperator	*		1447249	0					
ANR	1447285	Identifier	tab		1447249	1					
ANR	1447286	CallExpression	tolower ( * tab )		1447249	1					
ANR	1447287	Callee	tolower		1447249	0					
ANR	1447288	Identifier	tolower		1447249	0					
ANR	1447289	ArgumentList	* tab		1447249	1					
ANR	1447290	Argument	* tab		1447249	0					
ANR	1447291	UnaryOperationExpression	* tab		1447249	0					
ANR	1447292	UnaryOperator	*		1447249	0					
ANR	1447293	Identifier	tab		1447249	1					
ANR	1447294	ExpressionStatement	tab ++	138:3:2781:2786	1447249	1	True				
ANR	1447295	PostIncDecOperationExpression	tab ++		1447249	0					
ANR	1447296	Identifier	tab		1447249	0					
ANR	1447297	IncDec	++		1447249	1					
ANR	1447298	ExpressionStatement		139:3:2791:2791	1447249	1	True				
ANR	1447299	ExpressionStatement		140:2:2795:2795	1447249	2	True				
ANR	1447300	ReturnStatement	return beg ;	141:1:2798:2808	1447249	3	True				
ANR	1447301	Identifier	beg		1447249	0					
ANR	1447302	ReturnType	char *		1447249	1					
ANR	1447303	Identifier	strlwr		1447249	2					
ANR	1447304	ParameterList	char * tab		1447249	3					
ANR	1447305	Parameter	char * tab	131:13:2659:2668	1447249	0	True				
ANR	1447306	ParameterType	char *		1447249	0					
ANR	1447307	Identifier	tab		1447249	1					
ANR	1447308	CFGEntryNode	ENTRY		1447249		True				
ANR	1447309	CFGExitNode	EXIT		1447249		True				
ANR	1447310	Symbol	NULL		1447249						
ANR	1447311	Symbol	tab		1447249						
ANR	1447312	Symbol	tolower		1447249						
ANR	1447313	Symbol	beg		1447249						
ANR	1447314	Symbol	isupper		1447249						
ANR	1447315	Symbol	* tab		1447249						
ANR	1447316	Function	stricmp	163:0:3199:3294							
ANR	1447317	FunctionDef	"stricmp (const char * string1 , const char * string2)"		1447316	0					
ANR	1447318	CompoundStatement		164:0:3255:3294	1447316	0					
ANR	1447319	ReturnStatement	"return strcasecmp ( string1 , string2 ) ;"	165:1:3258:3292	1447316	0	True				
ANR	1447320	CallExpression	"strcasecmp ( string1 , string2 )"		1447316	0					
ANR	1447321	Callee	strcasecmp		1447316	0					
ANR	1447322	Identifier	strcasecmp		1447316	0					
ANR	1447323	ArgumentList	string1		1447316	1					
ANR	1447324	Argument	string1		1447316	0					
ANR	1447325	Identifier	string1		1447316	0					
ANR	1447326	Argument	string2		1447316	1					
ANR	1447327	Identifier	string2		1447316	0					
ANR	1447328	ReturnType	int		1447316	1					
ANR	1447329	Identifier	stricmp		1447316	2					
ANR	1447330	ParameterList	"const char * string1 , const char * string2"		1447316	3					
ANR	1447331	Parameter	const char * string1	163:13:3212:3230	1447316	0	True				
ANR	1447332	ParameterType	const char *		1447316	0					
ANR	1447333	Identifier	string1		1447316	1					
ANR	1447334	Parameter	const char * string2	163:34:3233:3251	1447316	1	True				
ANR	1447335	ParameterType	const char *		1447316	0					
ANR	1447336	Identifier	string2		1447316	1					
ANR	1447337	CFGEntryNode	ENTRY		1447316		True				
ANR	1447338	CFGExitNode	EXIT		1447316		True				
ANR	1447339	Symbol	string1		1447316						
ANR	1447340	Symbol	string2		1447316						
ANR	1447341	Symbol	strcasecmp		1447316						
ANR	1447342	Function	strnicmp	187:0:3714:3824							
ANR	1447343	FunctionDef	"strnicmp (const char * string1 , const char * string2 , int len)"		1447342	0					
ANR	1447344	CompoundStatement		188:0:3780:3824	1447342	0					
ANR	1447345	ReturnStatement	"return strncasecmp ( string1 , string2 , len ) ;"	189:1:3783:3822	1447342	0	True				
ANR	1447346	CallExpression	"strncasecmp ( string1 , string2 , len )"		1447342	0					
ANR	1447347	Callee	strncasecmp		1447342	0					
ANR	1447348	Identifier	strncasecmp		1447342	0					
ANR	1447349	ArgumentList	string1		1447342	1					
ANR	1447350	Argument	string1		1447342	0					
ANR	1447351	Identifier	string1		1447342	0					
ANR	1447352	Argument	string2		1447342	1					
ANR	1447353	Identifier	string2		1447342	0					
ANR	1447354	Argument	len		1447342	2					
ANR	1447355	Identifier	len		1447342	0					
ANR	1447356	ReturnType	int		1447342	1					
ANR	1447357	Identifier	strnicmp		1447342	2					
ANR	1447358	ParameterList	"const char * string1 , const char * string2 , int len"		1447342	3					
ANR	1447359	Parameter	const char * string1	187:14:3728:3746	1447342	0	True				
ANR	1447360	ParameterType	const char *		1447342	0					
ANR	1447361	Identifier	string1		1447342	1					
ANR	1447362	Parameter	const char * string2	187:35:3749:3767	1447342	1	True				
ANR	1447363	ParameterType	const char *		1447342	0					
ANR	1447364	Identifier	string2		1447342	1					
ANR	1447365	Parameter	int len	187:56:3770:3776	1447342	2	True				
ANR	1447366	ParameterType	int		1447342	0					
ANR	1447367	Identifier	len		1447342	1					
ANR	1447368	CFGEntryNode	ENTRY		1447342		True				
ANR	1447369	CFGExitNode	EXIT		1447342		True				
ANR	1447370	Symbol	len		1447342						
ANR	1447371	Symbol	string1		1447342						
ANR	1447372	Symbol	string2		1447342						
ANR	1447373	Symbol	strncasecmp		1447342						
ANR	1447374	Function	skipWhite	207:0:4045:4178							
ANR	1447375	FunctionDef	skipWhite (char * tab)		1447374	0					
ANR	1447376	CompoundStatement		208:0:4072:4178	1447374	0					
ANR	1447377	IfStatement	if ( NULL == tab )		1447374	0					
ANR	1447378	Condition	NULL == tab	209:5:4079:4087	1447374	0	True				
ANR	1447379	EqualityExpression	NULL == tab		1447374	0		==			
ANR	1447380	Identifier	NULL		1447374	0					
ANR	1447381	Identifier	tab		1447374	1					
ANR	1447382	ReturnStatement	return NULL ;	210:2:4093:4104	1447374	1	True				
ANR	1447383	Identifier	NULL		1447374	0					
ANR	1447384	WhileStatement	while ( * tab == ' ' || * tab == '\\t' || * tab == '\\n' )		1447374	1					
ANR	1447385	Condition	* tab == ' ' || * tab == '\\t' || * tab == '\\n'	212:8:4115:4151	1447374	0	True				
ANR	1447386	OrExpression	* tab == ' ' || * tab == '\\t' || * tab == '\\n'		1447374	0		||			
ANR	1447387	EqualityExpression	* tab == ' '		1447374	0		==			
ANR	1447388	UnaryOperationExpression	* tab		1447374	0					
ANR	1447389	UnaryOperator	*		1447374	0					
ANR	1447390	Identifier	tab		1447374	1					
ANR	1447391	PrimaryExpression	' '		1447374	1					
ANR	1447392	OrExpression	* tab == '\\t' || * tab == '\\n'		1447374	1		||			
ANR	1447393	EqualityExpression	* tab == '\\t'		1447374	0		==			
ANR	1447394	UnaryOperationExpression	* tab		1447374	0					
ANR	1447395	UnaryOperator	*		1447374	0					
ANR	1447396	Identifier	tab		1447374	1					
ANR	1447397	PrimaryExpression	'\\t'		1447374	1					
ANR	1447398	EqualityExpression	* tab == '\\n'		1447374	1		==			
ANR	1447399	UnaryOperationExpression	* tab		1447374	0					
ANR	1447400	UnaryOperator	*		1447374	0					
ANR	1447401	Identifier	tab		1447374	1					
ANR	1447402	PrimaryExpression	'\\n'		1447374	1					
ANR	1447403	ExpressionStatement	tab ++	213:2:4157:4162	1447374	1	True				
ANR	1447404	PostIncDecOperationExpression	tab ++		1447374	0					
ANR	1447405	Identifier	tab		1447374	0					
ANR	1447406	IncDec	++		1447374	1					
ANR	1447407	ReturnStatement	return tab ;	215:1:4166:4176	1447374	2	True				
ANR	1447408	Identifier	tab		1447374	0					
ANR	1447409	ReturnType	char *		1447374	1					
ANR	1447410	Identifier	skipWhite		1447374	2					
ANR	1447411	ParameterList	char * tab		1447374	3					
ANR	1447412	Parameter	char * tab	207:16:4061:4069	1447374	0	True				
ANR	1447413	ParameterType	char *		1447374	0					
ANR	1447414	Identifier	tab		1447374	1					
ANR	1447415	CFGEntryNode	ENTRY		1447374		True				
ANR	1447416	CFGExitNode	EXIT		1447374		True				
ANR	1447417	Symbol	NULL		1447374						
ANR	1447418	Symbol	tab		1447374						
ANR	1447419	Symbol	* tab		1447374						
ANR	1447420	Function	skipNonWhite	232:0:4391:4526							
ANR	1447421	FunctionDef	skipNonWhite (char * tab)		1447420	0					
ANR	1447422	CompoundStatement		233:0:4421:4526	1447420	0					
ANR	1447423	IfStatement	if ( NULL == tab )		1447420	0					
ANR	1447424	Condition	NULL == tab	234:5:4428:4436	1447420	0	True				
ANR	1447425	EqualityExpression	NULL == tab		1447420	0		==			
ANR	1447426	Identifier	NULL		1447420	0					
ANR	1447427	Identifier	tab		1447420	1					
ANR	1447428	ReturnStatement	return NULL ;	235:2:4442:4453	1447420	1	True				
ANR	1447429	Identifier	NULL		1447420	0					
ANR	1447430	WhileStatement	while ( * tab != ' ' && * tab != '\\t' && * tab != '\\n' )		1447420	1					
ANR	1447431	Condition	* tab != ' ' && * tab != '\\t' && * tab != '\\n'	237:8:4464:4500	1447420	0	True				
ANR	1447432	AndExpression	* tab != ' ' && * tab != '\\t' && * tab != '\\n'		1447420	0		&&			
ANR	1447433	EqualityExpression	* tab != ' '		1447420	0		!=			
ANR	1447434	UnaryOperationExpression	* tab		1447420	0					
ANR	1447435	UnaryOperator	*		1447420	0					
ANR	1447436	Identifier	tab		1447420	1					
ANR	1447437	PrimaryExpression	' '		1447420	1					
ANR	1447438	AndExpression	* tab != '\\t' && * tab != '\\n'		1447420	1		&&			
ANR	1447439	EqualityExpression	* tab != '\\t'		1447420	0		!=			
ANR	1447440	UnaryOperationExpression	* tab		1447420	0					
ANR	1447441	UnaryOperator	*		1447420	0					
ANR	1447442	Identifier	tab		1447420	1					
ANR	1447443	PrimaryExpression	'\\t'		1447420	1					
ANR	1447444	EqualityExpression	* tab != '\\n'		1447420	1		!=			
ANR	1447445	UnaryOperationExpression	* tab		1447420	0					
ANR	1447446	UnaryOperator	*		1447420	0					
ANR	1447447	Identifier	tab		1447420	1					
ANR	1447448	PrimaryExpression	'\\n'		1447420	1					
ANR	1447449	ExpressionStatement	tab ++	238:2:4505:4510	1447420	1	True				
ANR	1447450	PostIncDecOperationExpression	tab ++		1447420	0					
ANR	1447451	Identifier	tab		1447420	0					
ANR	1447452	IncDec	++		1447420	1					
ANR	1447453	ReturnStatement	return tab ;	240:1:4514:4524	1447420	2	True				
ANR	1447454	Identifier	tab		1447420	0					
ANR	1447455	ReturnType	char *		1447420	1					
ANR	1447456	Identifier	skipNonWhite		1447420	2					
ANR	1447457	ParameterList	char * tab		1447420	3					
ANR	1447458	Parameter	char * tab	232:19:4410:4418	1447420	0	True				
ANR	1447459	ParameterType	char *		1447420	0					
ANR	1447460	Identifier	tab		1447420	1					
ANR	1447461	CFGEntryNode	ENTRY		1447420		True				
ANR	1447462	CFGExitNode	EXIT		1447420		True				
ANR	1447463	Symbol	NULL		1447420						
ANR	1447464	Symbol	tab		1447420						
ANR	1447465	Symbol	* tab		1447420						
ANR	1447466	Function	global_test	259:0:4802:5222							
ANR	1447467	FunctionDef	global_test ()		1447466	0					
ANR	1447468	CompoundStatement		260:0:4825:5222	1447466	0					
ANR	1447469	ForStatement	for ( int i = 0 ; i < 1000 ; i ++ )		1447466	0					
ANR	1447470	ForInit	int i = 0 ;	262:6:4936:4943	1447466	0	True				
ANR	1447471	IdentifierDeclStatement	int i = 0 ;		1447466	0					
ANR	1447472	IdentifierDecl	i = 0		1447466	0					
ANR	1447473	IdentifierDeclType	int		1447466	0					
ANR	1447474	Identifier	i		1447466	1					
ANR	1447475	AssignmentExpression	i = 0		1447466	2		=			
ANR	1447476	Identifier	i		1447466	0					
ANR	1447477	PrimaryExpression	0		1447466	1					
ANR	1447478	Condition	i < 1000	262:15:4945:4950	1447466	1	True				
ANR	1447479	RelationalExpression	i < 1000		1447466	0		<			
ANR	1447480	Identifier	i		1447466	0					
ANR	1447481	PrimaryExpression	1000		1447466	1					
ANR	1447482	PostIncDecOperationExpression	i ++	262:23:4953:4955	1447466	2	True				
ANR	1447483	Identifier	i		1447466	0					
ANR	1447484	IncDec	++		1447466	1					
ANR	1447485	ExpressionStatement	"printf ( ""%f\\t%f\\n"" , randNormal ( 30 , 10 ) , randExponential ( 10 ) )"	263:2:4961:5019	1447466	3	True				
ANR	1447486	CallExpression	"printf ( ""%f\\t%f\\n"" , randNormal ( 30 , 10 ) , randExponential ( 10 ) )"		1447466	0					
ANR	1447487	Callee	printf		1447466	0					
ANR	1447488	Identifier	printf		1447466	0					
ANR	1447489	ArgumentList	"""%f\\t%f\\n"""		1447466	1					
ANR	1447490	Argument	"""%f\\t%f\\n"""		1447466	0					
ANR	1447491	PrimaryExpression	"""%f\\t%f\\n"""		1447466	0					
ANR	1447492	Argument	"randNormal ( 30 , 10 )"		1447466	1					
ANR	1447493	CallExpression	"randNormal ( 30 , 10 )"		1447466	0					
ANR	1447494	Callee	randNormal		1447466	0					
ANR	1447495	Identifier	randNormal		1447466	0					
ANR	1447496	ArgumentList	30		1447466	1					
ANR	1447497	Argument	30		1447466	0					
ANR	1447498	PrimaryExpression	30		1447466	0					
ANR	1447499	Argument	10		1447466	1					
ANR	1447500	PrimaryExpression	10		1447466	0					
ANR	1447501	Argument	randExponential ( 10 )		1447466	2					
ANR	1447502	CallExpression	randExponential ( 10 )		1447466	0					
ANR	1447503	Callee	randExponential		1447466	0					
ANR	1447504	Identifier	randExponential		1447466	0					
ANR	1447505	ArgumentList	10		1447466	1					
ANR	1447506	Argument	10		1447466	0					
ANR	1447507	PrimaryExpression	10		1447466	0					
ANR	1447508	ExpressionStatement	"alert ( ""test"" )"	264:1:5022:5035	1447466	1	True				
ANR	1447509	CallExpression	"alert ( ""test"" )"		1447466	0					
ANR	1447510	Callee	alert		1447466	0					
ANR	1447511	Identifier	alert		1447466	0					
ANR	1447512	ArgumentList	"""test"""		1447466	1					
ANR	1447513	Argument	"""test"""		1447466	0					
ANR	1447514	PrimaryExpression	"""test"""		1447466	0					
ANR	1447515	IdentifierDeclStatement	"char * str = strdup ( ""1Ux:"" ) ;"	266:1:5039:5065	1447466	2	True				
ANR	1447516	IdentifierDecl	"* str = strdup ( ""1Ux:"" )"		1447466	0					
ANR	1447517	IdentifierDeclType	char *		1447466	0					
ANR	1447518	Identifier	str		1447466	1					
ANR	1447519	AssignmentExpression	"* str = strdup ( ""1Ux:"" )"		1447466	2		=			
ANR	1447520	Identifier	str		1447466	0					
ANR	1447521	CallExpression	"strdup ( ""1Ux:"" )"		1447466	1					
ANR	1447522	Callee	strdup		1447466	0					
ANR	1447523	Identifier	strdup		1447466	0					
ANR	1447524	ArgumentList	"""1Ux:"""		1447466	1					
ANR	1447525	Argument	"""1Ux:"""		1447466	0					
ANR	1447526	PrimaryExpression	"""1Ux:"""		1447466	0					
ANR	1447527	ExpressionStatement	"printf ( ""%s\\n"" , strlwr ( str ) )"	267:1:5068:5094	1447466	3	True				
ANR	1447528	CallExpression	"printf ( ""%s\\n"" , strlwr ( str ) )"		1447466	0					
ANR	1447529	Callee	printf		1447466	0					
ANR	1447530	Identifier	printf		1447466	0					
ANR	1447531	ArgumentList	"""%s\\n"""		1447466	1					
ANR	1447532	Argument	"""%s\\n"""		1447466	0					
ANR	1447533	PrimaryExpression	"""%s\\n"""		1447466	0					
ANR	1447534	Argument	strlwr ( str )		1447466	1					
ANR	1447535	CallExpression	strlwr ( str )		1447466	0					
ANR	1447536	Callee	strlwr		1447466	0					
ANR	1447537	Identifier	strlwr		1447466	0					
ANR	1447538	ArgumentList	str		1447466	1					
ANR	1447539	Argument	str		1447466	0					
ANR	1447540	Identifier	str		1447466	0					
ANR	1447541	ExpressionStatement	"printf ( ""%d\\n"" , stricmp ( ""A"" , ""a"" ) )"	269:1:5098:5134	1447466	4	True				
ANR	1447542	CallExpression	"printf ( ""%d\\n"" , stricmp ( ""A"" , ""a"" ) )"		1447466	0					
ANR	1447543	Callee	printf		1447466	0					
ANR	1447544	Identifier	printf		1447466	0					
ANR	1447545	ArgumentList	"""%d\\n"""		1447466	1					
ANR	1447546	Argument	"""%d\\n"""		1447466	0					
ANR	1447547	PrimaryExpression	"""%d\\n"""		1447466	0					
ANR	1447548	Argument	"stricmp ( ""A"" , ""a"" )"		1447466	1					
ANR	1447549	CallExpression	"stricmp ( ""A"" , ""a"" )"		1447466	0					
ANR	1447550	Callee	stricmp		1447466	0					
ANR	1447551	Identifier	stricmp		1447466	0					
ANR	1447552	ArgumentList	"""A"""		1447466	1					
ANR	1447553	Argument	"""A"""		1447466	0					
ANR	1447554	PrimaryExpression	"""A"""		1447466	0					
ANR	1447555	Argument	"""a"""		1447466	1					
ANR	1447556	PrimaryExpression	"""a"""		1447466	0					
ANR	1447557	ExpressionStatement	"printf ( ""%d\\n"" , stricmp ( ""B"" , ""a"" ) )"	270:1:5137:5173	1447466	5	True				
ANR	1447558	CallExpression	"printf ( ""%d\\n"" , stricmp ( ""B"" , ""a"" ) )"		1447466	0					
ANR	1447559	Callee	printf		1447466	0					
ANR	1447560	Identifier	printf		1447466	0					
ANR	1447561	ArgumentList	"""%d\\n"""		1447466	1					
ANR	1447562	Argument	"""%d\\n"""		1447466	0					
ANR	1447563	PrimaryExpression	"""%d\\n"""		1447466	0					
ANR	1447564	Argument	"stricmp ( ""B"" , ""a"" )"		1447466	1					
ANR	1447565	CallExpression	"stricmp ( ""B"" , ""a"" )"		1447466	0					
ANR	1447566	Callee	stricmp		1447466	0					
ANR	1447567	Identifier	stricmp		1447466	0					
ANR	1447568	ArgumentList	"""B"""		1447466	1					
ANR	1447569	Argument	"""B"""		1447466	0					
ANR	1447570	PrimaryExpression	"""B"""		1447466	0					
ANR	1447571	Argument	"""a"""		1447466	1					
ANR	1447572	PrimaryExpression	"""a"""		1447466	0					
ANR	1447573	ExpressionStatement	"printf ( ""%d\\n"" , stricmp ( ""aabDDD"" , ""Edsa"" ) )"	271:1:5176:5220	1447466	6	True				
ANR	1447574	CallExpression	"printf ( ""%d\\n"" , stricmp ( ""aabDDD"" , ""Edsa"" ) )"		1447466	0					
ANR	1447575	Callee	printf		1447466	0					
ANR	1447576	Identifier	printf		1447466	0					
ANR	1447577	ArgumentList	"""%d\\n"""		1447466	1					
ANR	1447578	Argument	"""%d\\n"""		1447466	0					
ANR	1447579	PrimaryExpression	"""%d\\n"""		1447466	0					
ANR	1447580	Argument	"stricmp ( ""aabDDD"" , ""Edsa"" )"		1447466	1					
ANR	1447581	CallExpression	"stricmp ( ""aabDDD"" , ""Edsa"" )"		1447466	0					
ANR	1447582	Callee	stricmp		1447466	0					
ANR	1447583	Identifier	stricmp		1447466	0					
ANR	1447584	ArgumentList	"""aabDDD"""		1447466	1					
ANR	1447585	Argument	"""aabDDD"""		1447466	0					
ANR	1447586	PrimaryExpression	"""aabDDD"""		1447466	0					
ANR	1447587	Argument	"""Edsa"""		1447466	1					
ANR	1447588	PrimaryExpression	"""Edsa"""		1447466	0					
ANR	1447589	ReturnType	void		1447466	1					
ANR	1447590	Identifier	global_test		1447466	2					
ANR	1447591	ParameterList			1447466	3					
ANR	1447592	CFGEntryNode	ENTRY		1447466		True				
ANR	1447593	CFGExitNode	EXIT		1447466		True				
ANR	1447594	Symbol	str		1447466						
ANR	1447595	Symbol	randNormal		1447466						
ANR	1447596	Symbol	strlwr		1447466						
ANR	1447597	Symbol	stricmp		1447466						
ANR	1447598	Symbol	i		1447466						
ANR	1447599	Symbol	strdup		1447466						
ANR	1447600	Symbol	randExponential		1447466						
