command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3416578	File	data/converged/CVE-2011-4930_htcondor/src_condor_io_condor_ipverify.cpp								
ANR	3416579	DeclStmt									
ANR	3416580	Decl							const char	const char [ ]	TotallyWild
ANR	3416581	Function	compute_perm_hash	40:0:1220:1551							
ANR	3416582	FunctionDef	compute_perm_hash (const in6_addr & in_addr)		3416581	0					
ANR	3416583	CompoundStatement		42:0:1283:1551	3416581	0					
ANR	3416584	IdentifierDeclStatement	int Len = sizeof ( in6_addr ) ;	44:1:1338:1364	3416581	0	True				
ANR	3416585	IdentifierDecl	Len = sizeof ( in6_addr )		3416581	0					
ANR	3416586	IdentifierDeclType	int		3416581	0					
ANR	3416587	Identifier	Len		3416581	1					
ANR	3416588	AssignmentExpression	Len = sizeof ( in6_addr )		3416581	2		=			
ANR	3416589	Identifier	Len		3416581	0					
ANR	3416590	SizeofExpression	sizeof ( in6_addr )		3416581	1					
ANR	3416591	Sizeof	sizeof		3416581	0					
ANR	3416592	SizeofOperand	in6_addr		3416581	1					
ANR	3416593	IdentifierDeclStatement	const unsigned char * Data = ( const unsigned char * ) & in_addr ;	45:1:1367:1425	3416581	1	True				
ANR	3416594	IdentifierDecl	* Data = ( const unsigned char * ) & in_addr		3416581	0					
ANR	3416595	IdentifierDeclType	const unsigned char *		3416581	0					
ANR	3416596	Identifier	Data		3416581	1					
ANR	3416597	AssignmentExpression	* Data = ( const unsigned char * ) & in_addr		3416581	2		=			
ANR	3416598	Identifier	Data		3416581	0					
ANR	3416599	CastExpression	( const unsigned char * ) & in_addr		3416581	1					
ANR	3416600	CastTarget	const unsigned char *		3416581	0					
ANR	3416601	UnaryOperationExpression	& in_addr		3416581	1					
ANR	3416602	UnaryOperator	&		3416581	0					
ANR	3416603	Identifier	in_addr		3416581	1					
ANR	3416604	IdentifierDeclStatement	int i ;	46:1:1428:1433	3416581	2	True				
ANR	3416605	IdentifierDecl	i		3416581	0					
ANR	3416606	IdentifierDeclType	int		3416581	0					
ANR	3416607	Identifier	i		3416581	1					
ANR	3416608	IdentifierDeclStatement	unsigned int result = 0 ;	47:1:1436:1459	3416581	3	True				
ANR	3416609	IdentifierDecl	result = 0		3416581	0					
ANR	3416610	IdentifierDeclType	unsigned int		3416581	0					
ANR	3416611	Identifier	result		3416581	1					
ANR	3416612	AssignmentExpression	result = 0		3416581	2		=			
ANR	3416613	Identifier	result		3416581	0					
ANR	3416614	PrimaryExpression	0		3416581	1					
ANR	3416615	ForStatement	for ( i = 0 ; i < Len ; i ++ )		3416581	4					
ANR	3416616	ForInit	i = 0 ;	48:5:1466:1471	3416581	0	True				
ANR	3416617	AssignmentExpression	i = 0		3416581	0		=			
ANR	3416618	Identifier	i		3416581	0					
ANR	3416619	PrimaryExpression	0		3416581	1					
ANR	3416620	Condition	i < Len	48:12:1473:1479	3416581	1	True				
ANR	3416621	RelationalExpression	i < Len		3416581	0		<			
ANR	3416622	Identifier	i		3416581	0					
ANR	3416623	Identifier	Len		3416581	1					
ANR	3416624	PostIncDecOperationExpression	i ++	48:21:1482:1484	3416581	2	True				
ANR	3416625	Identifier	i		3416581	0					
ANR	3416626	IncDec	++		3416581	1					
ANR	3416627	CompoundStatement		7:26:203:203	3416581	3					
ANR	3416628	ExpressionStatement	result = ( result << 5 ) + result + Data [ i ]	49:2:1491:1530	3416581	0	True				
ANR	3416629	AssignmentExpression	result = ( result << 5 ) + result + Data [ i ]		3416581	0		=			
ANR	3416630	Identifier	result		3416581	0					
ANR	3416631	AdditiveExpression	( result << 5 ) + result + Data [ i ]		3416581	1		+			
ANR	3416632	ShiftExpression	result << 5		3416581	0		<<			
ANR	3416633	Identifier	result		3416581	0					
ANR	3416634	PrimaryExpression	5		3416581	1					
ANR	3416635	AdditiveExpression	result + Data [ i ]		3416581	1		+			
ANR	3416636	Identifier	result		3416581	0					
ANR	3416637	ArrayIndexing	Data [ i ]		3416581	1					
ANR	3416638	Identifier	Data		3416581	0					
ANR	3416639	Identifier	i		3416581	1					
ANR	3416640	ReturnStatement	return result ;	51:1:1536:1549	3416581	5	True				
ANR	3416641	Identifier	result		3416581	0					
ANR	3416642	ReturnType	static unsigned int		3416581	1					
ANR	3416643	Identifier	compute_perm_hash		3416581	2					
ANR	3416644	ParameterList	const in6_addr & in_addr		3416581	3					
ANR	3416645	Parameter	const in6_addr & in_addr	41:18:1258:1280	3416581	0	True				
ANR	3416646	ParameterType	const in6_addr &		3416581	0					
ANR	3416647	Identifier	in_addr		3416581	1					
ANR	3416648	CFGEntryNode	ENTRY		3416581		True				
ANR	3416649	CFGExitNode	EXIT		3416581		True				
ANR	3416650	Symbol	in_addr		3416581						
ANR	3416651	Symbol	result		3416581						
ANR	3416652	Symbol	* i		3416581						
ANR	3416653	Symbol	Len		3416581						
ANR	3416654	Symbol	& in_addr		3416581						
ANR	3416655	Symbol	i		3416581						
ANR	3416656	Symbol	Data		3416581						
ANR	3416657	Symbol	* Data		3416581						
ANR	3416658	Function	compute_host_hash	55:0:1604:1692							
ANR	3416659	FunctionDef	compute_host_hash (const MyString & str)		3416658	0					
ANR	3416660	CompoundStatement		57:0:1666:1692	3416658	0					
ANR	3416661	ReturnStatement	return ( str . Hash ( ) ) ;	58:1:1669:1690	3416658	0	True				
ANR	3416662	CallExpression	str . Hash ( )		3416658	0					
ANR	3416663	Callee	str . Hash		3416658	0					
ANR	3416664	MemberAccess	str . Hash		3416658	0					
ANR	3416665	Identifier	str		3416658	0					
ANR	3416666	Identifier	Hash		3416658	1					
ANR	3416667	ArgumentList			3416658	1					
ANR	3416668	ReturnType	static unsigned int		3416658	1					
ANR	3416669	Identifier	compute_host_hash		3416658	2					
ANR	3416670	ParameterList	const MyString & str		3416658	3					
ANR	3416671	Parameter	const MyString & str	56:19:1643:1662	3416658	0	True				
ANR	3416672	ParameterType	const MyString &		3416658	0					
ANR	3416673	Identifier	str		3416658	1					
ANR	3416674	CFGEntryNode	ENTRY		3416658		True				
ANR	3416675	CFGExitNode	EXIT		3416658		True				
ANR	3416676	Symbol	str		3416658						
ANR	3416677	Symbol	str . Hash		3416658						
ANR	3416678	Function	operator ==	62:0:1766:1858							
ANR	3416679	FunctionDef	"operator == (const in6_addr & a , const in6_addr & b)"		3416678	0					
ANR	3416680	CompoundStatement		62:54:1820:1858	3416678	0					
ANR	3416681	ReturnStatement	"return IN6_ARE_ADDR_EQUAL ( & a , & b ) ;"	63:1:1823:1856	3416678	0	True				
ANR	3416682	CallExpression	"IN6_ARE_ADDR_EQUAL ( & a , & b )"		3416678	0					
ANR	3416683	Callee	IN6_ARE_ADDR_EQUAL		3416678	0					
ANR	3416684	Identifier	IN6_ARE_ADDR_EQUAL		3416678	0					
ANR	3416685	ArgumentList	& a		3416678	1					
ANR	3416686	Argument	& a		3416678	0					
ANR	3416687	UnaryOperationExpression	& a		3416678	0					
ANR	3416688	UnaryOperator	&		3416678	0					
ANR	3416689	Identifier	a		3416678	1					
ANR	3416690	Argument	& b		3416678	1					
ANR	3416691	UnaryOperationExpression	& b		3416678	0					
ANR	3416692	UnaryOperator	&		3416678	0					
ANR	3416693	Identifier	b		3416678	1					
ANR	3416694	ReturnType	bool		3416678	1					
ANR	3416695	Identifier	operator ==		3416678	2					
ANR	3416696	ParameterList	"const in6_addr & a , const in6_addr & b"		3416678	3					
ANR	3416697	Parameter	const in6_addr & a	62:16:1782:1798	3416678	0	True				
ANR	3416698	ParameterType	const in6_addr &		3416678	0					
ANR	3416699	Identifier	a		3416678	1					
ANR	3416700	Parameter	const in6_addr & b	62:35:1801:1817	3416678	1	True				
ANR	3416701	ParameterType	const in6_addr &		3416678	0					
ANR	3416702	Identifier	b		3416678	1					
ANR	3416703	CFGEntryNode	ENTRY		3416678		True				
ANR	3416704	CFGExitNode	EXIT		3416678		True				
ANR	3416705	Symbol	a		3416678						
ANR	3416706	Symbol	b		3416678						
ANR	3416707	Symbol	& a		3416678						
ANR	3416708	Symbol	& b		3416678						
ANR	3416709	Symbol	IN6_ARE_ADDR_EQUAL		3416678						
ANR	3416710	Function	IpVerify :: IpVerify	67:0:1876:2132							
ANR	3416711	FunctionDef	IpVerify :: IpVerify ()		3416710	0					
ANR	3416712	CompoundStatement		68:0:1898:2132	3416710	0					
ANR	3416713	ExpressionStatement	did_init = FALSE	69:1:1901:1917	3416710	0	True				
ANR	3416714	AssignmentExpression	did_init = FALSE		3416710	0		=			
ANR	3416715	Identifier	did_init		3416710	0					
ANR	3416716	Identifier	FALSE		3416710	1					
ANR	3416717	IdentifierDeclStatement	DCpermission perm ;	71:1:1921:1938	3416710	1	True				
ANR	3416718	IdentifierDecl	perm		3416710	0					
ANR	3416719	IdentifierDeclType	DCpermission		3416710	0					
ANR	3416720	Identifier	perm		3416710	1					
ANR	3416721	ForStatement	for ( perm = FIRST_PERM ; perm < LAST_PERM ; perm = NEXT_PERM ( perm ) )		3416710	2					
ANR	3416722	ForInit	perm = FIRST_PERM ;	72:6:1946:1961	3416710	0	True				
ANR	3416723	AssignmentExpression	perm = FIRST_PERM		3416710	0		=			
ANR	3416724	Identifier	perm		3416710	0					
ANR	3416725	Identifier	FIRST_PERM		3416710	1					
ANR	3416726	Condition	perm < LAST_PERM	72:23:1963:1976	3416710	1	True				
ANR	3416727	RelationalExpression	perm < LAST_PERM		3416710	0		<			
ANR	3416728	Identifier	perm		3416710	0					
ANR	3416729	Identifier	LAST_PERM		3416710	1					
ANR	3416730	AssignmentExpression	perm = NEXT_PERM ( perm )	72:39:1979:1998	3416710	2	True	=			
ANR	3416731	Identifier	perm		3416710	0					
ANR	3416732	CallExpression	NEXT_PERM ( perm )		3416710	1					
ANR	3416733	Callee	NEXT_PERM		3416710	0					
ANR	3416734	Identifier	NEXT_PERM		3416710	0					
ANR	3416735	ArgumentList	perm		3416710	1					
ANR	3416736	Argument	perm		3416710	0					
ANR	3416737	Identifier	perm		3416710	0					
ANR	3416738	CompoundStatement		5:61:102:102	3416710	3					
ANR	3416739	ExpressionStatement	PermTypeArray [ perm ] = NULL	73:2:2005:2031	3416710	0	True				
ANR	3416740	AssignmentExpression	PermTypeArray [ perm ] = NULL		3416710	0		=			
ANR	3416741	ArrayIndexing	PermTypeArray [ perm ]		3416710	0					
ANR	3416742	Identifier	PermTypeArray		3416710	0					
ANR	3416743	Identifier	perm		3416710	1					
ANR	3416744	Identifier	NULL		3416710	1					
ANR	3416745	ExpressionStatement	PunchedHoleArray [ perm ] = NULL	74:2:2035:2064	3416710	1	True				
ANR	3416746	AssignmentExpression	PunchedHoleArray [ perm ] = NULL		3416710	0		=			
ANR	3416747	ArrayIndexing	PunchedHoleArray [ perm ]		3416710	0					
ANR	3416748	Identifier	PunchedHoleArray		3416710	0					
ANR	3416749	Identifier	perm		3416710	1					
ANR	3416750	Identifier	NULL		3416710	1					
ANR	3416751	ExpressionStatement	"PermHashTable = new PermHashTable_t ( 797 , compute_perm_hash )"	77:1:2071:2130	3416710	3	True				
ANR	3416752	AssignmentExpression	"PermHashTable = new PermHashTable_t ( 797 , compute_perm_hash )"		3416710	0		=			
ANR	3416753	Identifier	PermHashTable		3416710	0					
ANR	3416754	Expression	"797 , compute_perm_hash"		3416710	1					
ANR	3416755	PrimaryExpression	797		3416710	0					
ANR	3416756	Identifier	compute_perm_hash		3416710	1					
ANR	3416757	Identifier	IpVerify :: IpVerify		3416710	1					
ANR	3416758	ParameterList			3416710	2					
ANR	3416759	CFGEntryNode	ENTRY		3416710		True				
ANR	3416760	CFGExitNode	EXIT		3416710		True				
ANR	3416761	Symbol	LAST_PERM		3416710						
ANR	3416762	Symbol	NULL		3416710						
ANR	3416763	Symbol	did_init		3416710						
ANR	3416764	Symbol	perm		3416710						
ANR	3416765	Symbol	* PermTypeArray		3416710						
ANR	3416766	Symbol	* perm		3416710						
ANR	3416767	Symbol	FIRST_PERM		3416710						
ANR	3416768	Symbol	PermTypeArray		3416710						
ANR	3416769	Symbol	compute_perm_hash		3416710						
ANR	3416770	Symbol	PermHashTable		3416710						
ANR	3416771	Symbol	* PunchedHoleArray		3416710						
ANR	3416772	Symbol	FALSE		3416710						
ANR	3416773	Symbol	NEXT_PERM		3416710						
ANR	3416774	Symbol	PunchedHoleArray		3416710						
ANR	3416775	Function	IpVerify :: ~IpVerify	82:0:2150:2731							
ANR	3416776	FunctionDef	IpVerify :: ~IpVerify ()		3416775	0					
ANR	3416777	CompoundStatement		83:0:2172:2731	3416775	0					
ANR	3416778	IfStatement	if ( PermHashTable )		3416775	0					
ANR	3416779	Condition	PermHashTable	86:5:2216:2228	3416775	0	True				
ANR	3416780	Identifier	PermHashTable		3416775	0					
ANR	3416781	CompoundStatement		7:2:132:150	3416775	1					
ANR	3416782	IdentifierDeclStatement	in6_addr key ;	88:2:2289:2301	3416775	0	True				
ANR	3416783	IdentifierDecl	key		3416775	0					
ANR	3416784	IdentifierDeclType	in6_addr		3416775	0					
ANR	3416785	Identifier	key		3416775	1					
ANR	3416786	IdentifierDeclStatement	UserPerm_t * value ;	89:2:2305:2323	3416775	1	True				
ANR	3416787	IdentifierDecl	* value		3416775	0					
ANR	3416788	IdentifierDeclType	UserPerm_t *		3416775	0					
ANR	3416789	Identifier	value		3416775	1					
ANR	3416790	ExpressionStatement	PermHashTable -> startIterations ( )	90:2:2327:2359	3416775	2	True				
ANR	3416791	CallExpression	PermHashTable -> startIterations ( )		3416775	0					
ANR	3416792	Callee	PermHashTable -> startIterations		3416775	0					
ANR	3416793	PtrMemberAccess	PermHashTable -> startIterations		3416775	0					
ANR	3416794	Identifier	PermHashTable		3416775	0					
ANR	3416795	Identifier	startIterations		3416775	1					
ANR	3416796	ArgumentList			3416775	1					
ANR	3416797	WhileStatement	"while ( PermHashTable -> iterate ( key , value ) )"		3416775	3					
ANR	3416798	Condition	"PermHashTable -> iterate ( key , value )"	92:9:2371:2404	3416775	0	True				
ANR	3416799	CallExpression	"PermHashTable -> iterate ( key , value )"		3416775	0					
ANR	3416800	Callee	PermHashTable -> iterate		3416775	0					
ANR	3416801	PtrMemberAccess	PermHashTable -> iterate		3416775	0					
ANR	3416802	Identifier	PermHashTable		3416775	0					
ANR	3416803	Identifier	iterate		3416775	1					
ANR	3416804	ArgumentList	key		3416775	1					
ANR	3416805	Argument	key		3416775	0					
ANR	3416806	Identifier	key		3416775	0					
ANR	3416807	Argument	value		3416775	1					
ANR	3416808	Identifier	value		3416775	0					
ANR	3416809	CompoundStatement		10:45:234:234	3416775	1					
ANR	3416810	Statement	delete	93:3:2412:2417	3416775	0	True				
ANR	3416811	ExpressionStatement	value	93:10:2419:2424	3416775	1	True				
ANR	3416812	Identifier	value		3416775	0					
ANR	3416813	Statement	delete	96:2:2433:2438	3416775	4	True				
ANR	3416814	ExpressionStatement	PermHashTable	96:9:2440:2453	3416775	5	True				
ANR	3416815	Identifier	PermHashTable		3416775	0					
ANR	3416816	IdentifierDeclStatement	DCpermission perm ;	100:1:2519:2536	3416775	1	True				
ANR	3416817	IdentifierDecl	perm		3416775	0					
ANR	3416818	IdentifierDeclType	DCpermission		3416775	0					
ANR	3416819	Identifier	perm		3416775	1					
ANR	3416820	ForStatement	for ( perm = FIRST_PERM ; perm < LAST_PERM ; perm = NEXT_PERM ( perm ) )		3416775	2					
ANR	3416821	ForInit	perm = FIRST_PERM ;	101:6:2544:2559	3416775	0	True				
ANR	3416822	AssignmentExpression	perm = FIRST_PERM		3416775	0		=			
ANR	3416823	Identifier	perm		3416775	0					
ANR	3416824	Identifier	FIRST_PERM		3416775	1					
ANR	3416825	Condition	perm < LAST_PERM	101:23:2561:2574	3416775	1	True				
ANR	3416826	RelationalExpression	perm < LAST_PERM		3416775	0		<			
ANR	3416827	Identifier	perm		3416775	0					
ANR	3416828	Identifier	LAST_PERM		3416775	1					
ANR	3416829	AssignmentExpression	perm = NEXT_PERM ( perm )	101:39:2577:2596	3416775	2	True	=			
ANR	3416830	Identifier	perm		3416775	0					
ANR	3416831	CallExpression	NEXT_PERM ( perm )		3416775	1					
ANR	3416832	Callee	NEXT_PERM		3416775	0					
ANR	3416833	Identifier	NEXT_PERM		3416775	0					
ANR	3416834	ArgumentList	perm		3416775	1					
ANR	3416835	Argument	perm		3416775	0					
ANR	3416836	Identifier	perm		3416775	0					
ANR	3416837	CompoundStatement		19:61:426:426	3416775	3					
ANR	3416838	IfStatement	if ( PermTypeArray [ perm ] )		3416775	0					
ANR	3416839	Condition	PermTypeArray [ perm ]	102:7:2608:2626	3416775	0	True				
ANR	3416840	ArrayIndexing	PermTypeArray [ perm ]		3416775	0					
ANR	3416841	Identifier	PermTypeArray		3416775	0					
ANR	3416842	Identifier	perm		3416775	1					
ANR	3416843	Statement	delete	103:3:2633:2638	3416775	1	True				
ANR	3416844	ExpressionStatement	PermTypeArray [ perm ]	103:10:2640:2659	3416775	1	True				
ANR	3416845	ArrayIndexing	PermTypeArray [ perm ]		3416775	0					
ANR	3416846	Identifier	PermTypeArray		3416775	0					
ANR	3416847	Identifier	perm		3416775	1					
ANR	3416848	IfStatement	if ( PunchedHoleArray [ perm ] )		3416775	2					
ANR	3416849	Condition	PunchedHoleArray [ perm ]	104:7:2668:2689	3416775	0	True				
ANR	3416850	ArrayIndexing	PunchedHoleArray [ perm ]		3416775	0					
ANR	3416851	Identifier	PunchedHoleArray		3416775	0					
ANR	3416852	Identifier	perm		3416775	1					
ANR	3416853	Statement	delete	105:3:2696:2701	3416775	1	True				
ANR	3416854	ExpressionStatement	PunchedHoleArray [ perm ]	105:10:2703:2725	3416775	3	True				
ANR	3416855	ArrayIndexing	PunchedHoleArray [ perm ]		3416775	0					
ANR	3416856	Identifier	PunchedHoleArray		3416775	0					
ANR	3416857	Identifier	perm		3416775	1					
ANR	3416858	Identifier	IpVerify :: ~IpVerify		3416775	1					
ANR	3416859	ParameterList			3416775	2					
ANR	3416860	CFGEntryNode	ENTRY		3416775		True				
ANR	3416861	CFGExitNode	EXIT		3416775		True				
ANR	3416862	Symbol	LAST_PERM		3416775						
ANR	3416863	Symbol	PermHashTable -> iterate		3416775						
ANR	3416864	Symbol	perm		3416775						
ANR	3416865	Symbol	* PermTypeArray		3416775						
ANR	3416866	Symbol	* perm		3416775						
ANR	3416867	Symbol	FIRST_PERM		3416775						
ANR	3416868	Symbol	PermTypeArray		3416775						
ANR	3416869	Symbol	PermHashTable		3416775						
ANR	3416870	Symbol	* PunchedHoleArray		3416775						
ANR	3416871	Symbol	* PermHashTable		3416775						
ANR	3416872	Symbol	NEXT_PERM		3416775						
ANR	3416873	Symbol	PunchedHoleArray		3416775						
ANR	3416874	Symbol	value		3416775						
ANR	3416875	Symbol	key		3416775						
ANR	3416876	Function	IpVerify :: Init	110:0:2735:7008							
ANR	3416877	FunctionDef	IpVerify :: Init ()		3416876	0					
ANR	3416878	CompoundStatement		112:0:2756:7008	3416876	0					
ANR	3416879	IdentifierDeclStatement	"char * pAllow = NULL , * pDeny = NULL , * pOldAllow = NULL , * pOldDeny = NULL , * pNewAllow = NULL , * pNewDeny = NULL ;"	113:1:2759:2869	3416876	0	True				
ANR	3416880	IdentifierDecl	* pAllow = NULL		3416876	0					
ANR	3416881	IdentifierDeclType	char *		3416876	0					
ANR	3416882	Identifier	pAllow		3416876	1					
ANR	3416883	AssignmentExpression	* pAllow = NULL		3416876	2		=			
ANR	3416884	Identifier	NULL		3416876	0					
ANR	3416885	Identifier	NULL		3416876	1					
ANR	3416886	IdentifierDecl	* pDeny = NULL		3416876	1					
ANR	3416887	IdentifierDeclType	char *		3416876	0					
ANR	3416888	Identifier	pDeny		3416876	1					
ANR	3416889	AssignmentExpression	* pDeny = NULL		3416876	2		=			
ANR	3416890	Identifier	NULL		3416876	0					
ANR	3416891	Identifier	NULL		3416876	1					
ANR	3416892	IdentifierDecl	* pOldAllow = NULL		3416876	2					
ANR	3416893	IdentifierDeclType	char *		3416876	0					
ANR	3416894	Identifier	pOldAllow		3416876	1					
ANR	3416895	AssignmentExpression	* pOldAllow = NULL		3416876	2		=			
ANR	3416896	Identifier	NULL		3416876	0					
ANR	3416897	Identifier	NULL		3416876	1					
ANR	3416898	IdentifierDecl	* pOldDeny = NULL		3416876	3					
ANR	3416899	IdentifierDeclType	char *		3416876	0					
ANR	3416900	Identifier	pOldDeny		3416876	1					
ANR	3416901	AssignmentExpression	* pOldDeny = NULL		3416876	2		=			
ANR	3416902	Identifier	NULL		3416876	0					
ANR	3416903	Identifier	NULL		3416876	1					
ANR	3416904	IdentifierDecl	* pNewAllow = NULL		3416876	4					
ANR	3416905	IdentifierDeclType	char *		3416876	0					
ANR	3416906	Identifier	pNewAllow		3416876	1					
ANR	3416907	AssignmentExpression	* pNewAllow = NULL		3416876	2		=			
ANR	3416908	Identifier	NULL		3416876	0					
ANR	3416909	Identifier	NULL		3416876	1					
ANR	3416910	IdentifierDecl	* pNewDeny = NULL		3416876	5					
ANR	3416911	IdentifierDeclType	char *		3416876	0					
ANR	3416912	Identifier	pNewDeny		3416876	1					
ANR	3416913	AssignmentExpression	* pNewDeny = NULL		3416876	2		=			
ANR	3416914	Identifier	NULL		3416876	0					
ANR	3416915	Identifier	NULL		3416876	1					
ANR	3416916	IdentifierDeclStatement	DCpermission perm ;	115:1:2872:2889	3416876	1	True				
ANR	3416917	IdentifierDecl	perm		3416876	0					
ANR	3416918	IdentifierDeclType	DCpermission		3416876	0					
ANR	3416919	Identifier	perm		3416876	1					
ANR	3416920	Statement	const	116:1:2892:2896	3416876	2	True				
ANR	3416921	Statement	char	116:7:2898:2901	3416876	3	True				
ANR	3416922	Statement	*	116:11:2902:2902	3416876	4	True				
ANR	3416923	Statement	const	116:13:2904:2908	3416876	5	True				
ANR	3416924	ExpressionStatement	ssysname = get_mySubSystem ( ) -> getName ( )	116:19:2910:2949	3416876	6	True				
ANR	3416925	AssignmentExpression	ssysname = get_mySubSystem ( ) -> getName ( )		3416876	0		=			
ANR	3416926	Identifier	ssysname		3416876	0					
ANR	3416927	CallExpression	get_mySubSystem ( ) -> getName ( )		3416876	1					
ANR	3416928	Callee	get_mySubSystem ( ) -> getName		3416876	0					
ANR	3416929	PtrMemberAccess	get_mySubSystem ( ) -> getName		3416876	0					
ANR	3416930	CallExpression	get_mySubSystem ( )		3416876	0					
ANR	3416931	Callee	get_mySubSystem		3416876	0					
ANR	3416932	Identifier	get_mySubSystem		3416876	0					
ANR	3416933	ArgumentList			3416876	1					
ANR	3416934	Identifier	getName		3416876	1					
ANR	3416935	ArgumentList			3416876	1					
ANR	3416936	ExpressionStatement	did_init = TRUE	118:1:2954:2969	3416876	7	True				
ANR	3416937	AssignmentExpression	did_init = TRUE		3416876	0		=			
ANR	3416938	Identifier	did_init		3416876	0					
ANR	3416939	Identifier	TRUE		3416876	1					
ANR	3416940	ExpressionStatement	ASSERT ( sizeof ( perm_mask_t ) * 8 - 2 > LAST_PERM )	122:1:3084:3131	3416876	8	True				
ANR	3416941	CallExpression	ASSERT ( sizeof ( perm_mask_t ) * 8 - 2 > LAST_PERM )		3416876	0					
ANR	3416942	Callee	ASSERT		3416876	0					
ANR	3416943	Identifier	ASSERT		3416876	0					
ANR	3416944	ArgumentList	sizeof ( perm_mask_t ) * 8 - 2 > LAST_PERM		3416876	1					
ANR	3416945	Argument	sizeof ( perm_mask_t ) * 8 - 2 > LAST_PERM		3416876	0					
ANR	3416946	RelationalExpression	sizeof ( perm_mask_t ) * 8 - 2 > LAST_PERM		3416876	0		>			
ANR	3416947	AdditiveExpression	sizeof ( perm_mask_t ) * 8 - 2		3416876	0		-			
ANR	3416948	MultiplicativeExpression	sizeof ( perm_mask_t ) * 8		3416876	0		*			
ANR	3416949	SizeofExpression	sizeof ( perm_mask_t )		3416876	0					
ANR	3416950	Sizeof	sizeof		3416876	0					
ANR	3416951	SizeofOperand	perm_mask_t		3416876	1					
ANR	3416952	PrimaryExpression	8		3416876	1					
ANR	3416953	PrimaryExpression	2		3416876	1					
ANR	3416954	Identifier	LAST_PERM		3416876	1					
ANR	3416955	IfStatement	if ( PermHashTable )		3416876	9					
ANR	3416956	Condition	PermHashTable	125:5:3199:3211	3416876	0	True				
ANR	3416957	Identifier	PermHashTable		3416876	0					
ANR	3416958	CompoundStatement		17:2:538:556	3416876	1					
ANR	3416959	IdentifierDeclStatement	struct in6_addr key ;	127:2:3272:3291	3416876	0	True				
ANR	3416960	IdentifierDecl	key		3416876	0					
ANR	3416961	IdentifierDeclType	struct in6_addr		3416876	0					
ANR	3416962	Identifier	key		3416876	1					
ANR	3416963	IdentifierDeclStatement	UserPerm_t * value ;	128:2:3295:3313	3416876	1	True				
ANR	3416964	IdentifierDecl	* value		3416876	0					
ANR	3416965	IdentifierDeclType	UserPerm_t *		3416876	0					
ANR	3416966	Identifier	value		3416876	1					
ANR	3416967	ExpressionStatement	PermHashTable -> startIterations ( )	129:2:3317:3349	3416876	2	True				
ANR	3416968	CallExpression	PermHashTable -> startIterations ( )		3416876	0					
ANR	3416969	Callee	PermHashTable -> startIterations		3416876	0					
ANR	3416970	PtrMemberAccess	PermHashTable -> startIterations		3416876	0					
ANR	3416971	Identifier	PermHashTable		3416876	0					
ANR	3416972	Identifier	startIterations		3416876	1					
ANR	3416973	ArgumentList			3416876	1					
ANR	3416974	WhileStatement	"while ( PermHashTable -> iterate ( key , value ) )"		3416876	3					
ANR	3416975	Condition	"PermHashTable -> iterate ( key , value )"	131:9:3361:3394	3416876	0	True				
ANR	3416976	CallExpression	"PermHashTable -> iterate ( key , value )"		3416876	0					
ANR	3416977	Callee	PermHashTable -> iterate		3416876	0					
ANR	3416978	PtrMemberAccess	PermHashTable -> iterate		3416876	0					
ANR	3416979	Identifier	PermHashTable		3416876	0					
ANR	3416980	Identifier	iterate		3416876	1					
ANR	3416981	ArgumentList	key		3416876	1					
ANR	3416982	Argument	key		3416876	0					
ANR	3416983	Identifier	key		3416876	0					
ANR	3416984	Argument	value		3416876	1					
ANR	3416985	Identifier	value		3416876	0					
ANR	3416986	CompoundStatement		20:45:640:640	3416876	1					
ANR	3416987	Statement	delete	132:3:3402:3407	3416876	0	True				
ANR	3416988	ExpressionStatement	value	132:10:3409:3414	3416876	1	True				
ANR	3416989	Identifier	value		3416876	0					
ANR	3416990	ExpressionStatement	PermHashTable -> clear ( )	135:2:3423:3445	3416876	4	True				
ANR	3416991	CallExpression	PermHashTable -> clear ( )		3416876	0					
ANR	3416992	Callee	PermHashTable -> clear		3416876	0					
ANR	3416993	PtrMemberAccess	PermHashTable -> clear		3416876	0					
ANR	3416994	Identifier	PermHashTable		3416876	0					
ANR	3416995	Identifier	clear		3416876	1					
ANR	3416996	ArgumentList			3416876	1					
ANR	3416997	ForStatement	for ( perm = FIRST_PERM ; perm < LAST_PERM ; perm = NEXT_PERM ( perm ) )		3416876	10					
ANR	3416998	ForInit	perm = FIRST_PERM ;	139:6:3497:3512	3416876	0	True				
ANR	3416999	AssignmentExpression	perm = FIRST_PERM		3416876	0		=			
ANR	3417000	Identifier	perm		3416876	0					
ANR	3417001	Identifier	FIRST_PERM		3416876	1					
ANR	3417002	Condition	perm < LAST_PERM	139:23:3514:3527	3416876	1	True				
ANR	3417003	RelationalExpression	perm < LAST_PERM		3416876	0		<			
ANR	3417004	Identifier	perm		3416876	0					
ANR	3417005	Identifier	LAST_PERM		3416876	1					
ANR	3417006	AssignmentExpression	perm = NEXT_PERM ( perm )	139:39:3530:3549	3416876	2	True	=			
ANR	3417007	Identifier	perm		3416876	0					
ANR	3417008	CallExpression	NEXT_PERM ( perm )		3416876	1					
ANR	3417009	Callee	NEXT_PERM		3416876	0					
ANR	3417010	Identifier	NEXT_PERM		3416876	0					
ANR	3417011	ArgumentList	perm		3416876	1					
ANR	3417012	Argument	perm		3416876	0					
ANR	3417013	Identifier	perm		3416876	0					
ANR	3417014	CompoundStatement		28:61:795:795	3416876	3					
ANR	3417015	IfStatement	if ( PermTypeArray [ perm ] )		3416876	0					
ANR	3417016	Condition	PermTypeArray [ perm ]	140:7:3561:3579	3416876	0	True				
ANR	3417017	ArrayIndexing	PermTypeArray [ perm ]		3416876	0					
ANR	3417018	Identifier	PermTypeArray		3416876	0					
ANR	3417019	Identifier	perm		3416876	1					
ANR	3417020	CompoundStatement		29:29:826:826	3416876	1					
ANR	3417021	Statement	delete	141:3:3588:3593	3416876	0	True				
ANR	3417022	ExpressionStatement	PermTypeArray [ perm ]	141:10:3595:3614	3416876	1	True				
ANR	3417023	ArrayIndexing	PermTypeArray [ perm ]		3416876	0					
ANR	3417024	Identifier	PermTypeArray		3416876	0					
ANR	3417025	Identifier	perm		3416876	1					
ANR	3417026	ExpressionStatement	PermTypeArray [ perm ] = NULL	142:3:3619:3645	3416876	2	True				
ANR	3417027	AssignmentExpression	PermTypeArray [ perm ] = NULL		3416876	0		=			
ANR	3417028	ArrayIndexing	PermTypeArray [ perm ]		3416876	0					
ANR	3417029	Identifier	PermTypeArray		3416876	0					
ANR	3417030	Identifier	perm		3416876	1					
ANR	3417031	Identifier	NULL		3416876	1					
ANR	3417032	ForStatement	for ( perm = FIRST_PERM ; perm < LAST_PERM ; perm = NEXT_PERM ( perm ) )		3416876	11					
ANR	3417033	ForInit	perm = FIRST_PERM ;	147:7:3688:3703	3416876	0	True				
ANR	3417034	AssignmentExpression	perm = FIRST_PERM		3416876	0		=			
ANR	3417035	Identifier	perm		3416876	0					
ANR	3417036	Identifier	FIRST_PERM		3416876	1					
ANR	3417037	Condition	perm < LAST_PERM	147:24:3705:3720	3416876	1	True				
ANR	3417038	RelationalExpression	perm < LAST_PERM		3416876	0		<			
ANR	3417039	Identifier	perm		3416876	0					
ANR	3417040	Identifier	LAST_PERM		3416876	1					
ANR	3417041	AssignmentExpression	perm = NEXT_PERM ( perm )	147:42:3723:3742	3416876	2	True	=			
ANR	3417042	Identifier	perm		3416876	0					
ANR	3417043	CallExpression	NEXT_PERM ( perm )		3416876	1					
ANR	3417044	Callee	NEXT_PERM		3416876	0					
ANR	3417045	Identifier	NEXT_PERM		3416876	0					
ANR	3417046	ArgumentList	perm		3416876	1					
ANR	3417047	Argument	perm		3416876	0					
ANR	3417048	Identifier	perm		3416876	0					
ANR	3417049	CompoundStatement		40:2:1092:1124	3416876	3					
ANR	3417050	IdentifierDeclStatement	PermTypeEntry * pentry = new PermTypeEntry ( ) ;	148:2:3750:3793	3416876	0	True				
ANR	3417051	IdentifierDecl	* pentry = new PermTypeEntry ( )		3416876	0					
ANR	3417052	IdentifierDeclType	PermTypeEntry *		3416876	0					
ANR	3417053	Identifier	pentry		3416876	1					
ANR	3417054	AssignmentExpression	* pentry = new PermTypeEntry ( )		3416876	2		=			
ANR	3417055	Identifier	pentry		3416876	0					
ANR	3417056	UnaryExpression	new PermTypeEntry ( )		3416876	1					
ANR	3417057	ExpressionStatement	ASSERT ( pentry )	149:2:3797:3813	3416876	1	True				
ANR	3417058	CallExpression	ASSERT ( pentry )		3416876	0					
ANR	3417059	Callee	ASSERT		3416876	0					
ANR	3417060	Identifier	ASSERT		3416876	0					
ANR	3417061	ArgumentList	pentry		3416876	1					
ANR	3417062	Argument	pentry		3416876	0					
ANR	3417063	Identifier	pentry		3416876	0					
ANR	3417064	ExpressionStatement	PermTypeArray [ perm ] = pentry	150:2:3817:3845	3416876	2	True				
ANR	3417065	AssignmentExpression	PermTypeArray [ perm ] = pentry		3416876	0		=			
ANR	3417066	ArrayIndexing	PermTypeArray [ perm ]		3416876	0					
ANR	3417067	Identifier	PermTypeArray		3416876	0					
ANR	3417068	Identifier	perm		3416876	1					
ANR	3417069	Identifier	pentry		3416876	1					
ANR	3417070	IdentifierDeclStatement	"MyString allow_param , deny_param ;"	151:2:3849:3881	3416876	3	True				
ANR	3417071	IdentifierDecl	allow_param		3416876	0					
ANR	3417072	IdentifierDeclType	MyString		3416876	0					
ANR	3417073	Identifier	allow_param		3416876	1					
ANR	3417074	IdentifierDecl	deny_param		3416876	1					
ANR	3417075	IdentifierDeclType	MyString		3416876	0					
ANR	3417076	Identifier	deny_param		3416876	1					
ANR	3417077	ExpressionStatement	"dprintf ( D_SECURITY , ""IPVERIFY: Subsystem %s\\n"" , ssysname )"	153:2:3886:3941	3416876	4	True				
ANR	3417078	CallExpression	"dprintf ( D_SECURITY , ""IPVERIFY: Subsystem %s\\n"" , ssysname )"		3416876	0					
ANR	3417079	Callee	dprintf		3416876	0					
ANR	3417080	Identifier	dprintf		3416876	0					
ANR	3417081	ArgumentList	D_SECURITY		3416876	1					
ANR	3417082	Argument	D_SECURITY		3416876	0					
ANR	3417083	Identifier	D_SECURITY		3416876	0					
ANR	3417084	Argument	"""IPVERIFY: Subsystem %s\\n"""		3416876	1					
ANR	3417085	PrimaryExpression	"""IPVERIFY: Subsystem %s\\n"""		3416876	0					
ANR	3417086	Argument	ssysname		3416876	2					
ANR	3417087	Identifier	ssysname		3416876	0					
ANR	3417088	ExpressionStatement	"dprintf ( D_SECURITY , ""IPVERIFY: Permission %s\\n"" , PermString ( perm ) )"	154:2:3945:4009	3416876	5	True				
ANR	3417089	CallExpression	"dprintf ( D_SECURITY , ""IPVERIFY: Permission %s\\n"" , PermString ( perm ) )"		3416876	0					
ANR	3417090	Callee	dprintf		3416876	0					
ANR	3417091	Identifier	dprintf		3416876	0					
ANR	3417092	ArgumentList	D_SECURITY		3416876	1					
ANR	3417093	Argument	D_SECURITY		3416876	0					
ANR	3417094	Identifier	D_SECURITY		3416876	0					
ANR	3417095	Argument	"""IPVERIFY: Permission %s\\n"""		3416876	1					
ANR	3417096	PrimaryExpression	"""IPVERIFY: Permission %s\\n"""		3416876	0					
ANR	3417097	Argument	PermString ( perm )		3416876	2					
ANR	3417098	CallExpression	PermString ( perm )		3416876	0					
ANR	3417099	Callee	PermString		3416876	0					
ANR	3417100	Identifier	PermString		3416876	0					
ANR	3417101	ArgumentList	perm		3416876	1					
ANR	3417102	Argument	perm		3416876	0					
ANR	3417103	Identifier	perm		3416876	0					
ANR	3417104	IfStatement	"if ( strcmp ( ssysname , ""TOOL"" ) == 0 || strcmp ( ssysname , ""SUBMIT"" ) == 0 )"		3416876	6					
ANR	3417105	Condition	"strcmp ( ssysname , ""TOOL"" ) == 0 || strcmp ( ssysname , ""SUBMIT"" ) == 0"	155:5:4016:4073	3416876	0	True				
ANR	3417106	OrExpression	"strcmp ( ssysname , ""TOOL"" ) == 0 || strcmp ( ssysname , ""SUBMIT"" ) == 0"		3416876	0		||			
ANR	3417107	EqualityExpression	"strcmp ( ssysname , ""TOOL"" ) == 0"		3416876	0		==			
ANR	3417108	CallExpression	"strcmp ( ssysname , ""TOOL"" )"		3416876	0					
ANR	3417109	Callee	strcmp		3416876	0					
ANR	3417110	Identifier	strcmp		3416876	0					
ANR	3417111	ArgumentList	ssysname		3416876	1					
ANR	3417112	Argument	ssysname		3416876	0					
ANR	3417113	Identifier	ssysname		3416876	0					
ANR	3417114	Argument	"""TOOL"""		3416876	1					
ANR	3417115	PrimaryExpression	"""TOOL"""		3416876	0					
ANR	3417116	PrimaryExpression	0		3416876	1					
ANR	3417117	EqualityExpression	"strcmp ( ssysname , ""SUBMIT"" ) == 0"		3416876	1		==			
ANR	3417118	CallExpression	"strcmp ( ssysname , ""SUBMIT"" )"		3416876	0					
ANR	3417119	Callee	strcmp		3416876	0					
ANR	3417120	Identifier	strcmp		3416876	0					
ANR	3417121	ArgumentList	ssysname		3416876	1					
ANR	3417122	Argument	ssysname		3416876	0					
ANR	3417123	Identifier	ssysname		3416876	0					
ANR	3417124	Argument	"""SUBMIT"""		3416876	1					
ANR	3417125	PrimaryExpression	"""SUBMIT"""		3416876	0					
ANR	3417126	PrimaryExpression	0		3416876	1					
ANR	3417127	CompoundStatement		44:64:1318:1318	3416876	1					
ANR	3417128	IfStatement	"if ( strcmp ( PermString ( perm ) , ""CLIENT"" ) == 0 )"		3416876	0					
ANR	3417129	Condition	"strcmp ( PermString ( perm ) , ""CLIENT"" ) == 0"	159:6:4273:4308	3416876	0	True				
ANR	3417130	EqualityExpression	"strcmp ( PermString ( perm ) , ""CLIENT"" ) == 0"		3416876	0		==			
ANR	3417131	CallExpression	"strcmp ( PermString ( perm ) , ""CLIENT"" )"		3416876	0					
ANR	3417132	Callee	strcmp		3416876	0					
ANR	3417133	Identifier	strcmp		3416876	0					
ANR	3417134	ArgumentList	PermString ( perm )		3416876	1					
ANR	3417135	Argument	PermString ( perm )		3416876	0					
ANR	3417136	CallExpression	PermString ( perm )		3416876	0					
ANR	3417137	Callee	PermString		3416876	0					
ANR	3417138	Identifier	PermString		3416876	0					
ANR	3417139	ArgumentList	perm		3416876	1					
ANR	3417140	Argument	perm		3416876	0					
ANR	3417141	Identifier	perm		3416876	0					
ANR	3417142	Argument	"""CLIENT"""		3416876	1					
ANR	3417143	PrimaryExpression	"""CLIENT"""		3416876	0					
ANR	3417144	PrimaryExpression	0		3416876	1					
ANR	3417145	CompoundStatement		48:43:1553:1553	3416876	1					
ANR	3417146	ExpressionStatement	"pNewAllow = SecMan :: getSecSetting ( ""ALLOW_%s"" , perm , & allow_param , ssysname )"	160:4:4317:4391	3416876	0	True				
ANR	3417147	AssignmentExpression	"pNewAllow = SecMan :: getSecSetting ( ""ALLOW_%s"" , perm , & allow_param , ssysname )"		3416876	0		=			
ANR	3417148	Identifier	pNewAllow		3416876	0					
ANR	3417149	CallExpression	"SecMan :: getSecSetting ( ""ALLOW_%s"" , perm , & allow_param , ssysname )"		3416876	1					
ANR	3417150	Callee	SecMan :: getSecSetting		3416876	0					
ANR	3417151	Identifier	SecMan :: getSecSetting		3416876	0					
ANR	3417152	ArgumentList	"""ALLOW_%s"""		3416876	1					
ANR	3417153	Argument	"""ALLOW_%s"""		3416876	0					
ANR	3417154	PrimaryExpression	"""ALLOW_%s"""		3416876	0					
ANR	3417155	Argument	perm		3416876	1					
ANR	3417156	Identifier	perm		3416876	0					
ANR	3417157	Argument	& allow_param		3416876	2					
ANR	3417158	UnaryOperationExpression	& allow_param		3416876	0					
ANR	3417159	UnaryOperator	&		3416876	0					
ANR	3417160	Identifier	allow_param		3416876	1					
ANR	3417161	Argument	ssysname		3416876	3					
ANR	3417162	Identifier	ssysname		3416876	0					
ANR	3417163	ExpressionStatement	"pOldAllow = SecMan :: getSecSetting ( ""HOSTALLOW_%s"" , perm , & allow_param , ssysname )"	161:4:4397:4475	3416876	1	True				
ANR	3417164	AssignmentExpression	"pOldAllow = SecMan :: getSecSetting ( ""HOSTALLOW_%s"" , perm , & allow_param , ssysname )"		3416876	0		=			
ANR	3417165	Identifier	pOldAllow		3416876	0					
ANR	3417166	CallExpression	"SecMan :: getSecSetting ( ""HOSTALLOW_%s"" , perm , & allow_param , ssysname )"		3416876	1					
ANR	3417167	Callee	SecMan :: getSecSetting		3416876	0					
ANR	3417168	Identifier	SecMan :: getSecSetting		3416876	0					
ANR	3417169	ArgumentList	"""HOSTALLOW_%s"""		3416876	1					
ANR	3417170	Argument	"""HOSTALLOW_%s"""		3416876	0					
ANR	3417171	PrimaryExpression	"""HOSTALLOW_%s"""		3416876	0					
ANR	3417172	Argument	perm		3416876	1					
ANR	3417173	Identifier	perm		3416876	0					
ANR	3417174	Argument	& allow_param		3416876	2					
ANR	3417175	UnaryOperationExpression	& allow_param		3416876	0					
ANR	3417176	UnaryOperator	&		3416876	0					
ANR	3417177	Identifier	allow_param		3416876	1					
ANR	3417178	Argument	ssysname		3416876	3					
ANR	3417179	Identifier	ssysname		3416876	0					
ANR	3417180	ExpressionStatement	"pNewDeny = SecMan :: getSecSetting ( ""DENY_%s"" , perm , & deny_param , ssysname )"	162:4:4481:4552	3416876	2	True				
ANR	3417181	AssignmentExpression	"pNewDeny = SecMan :: getSecSetting ( ""DENY_%s"" , perm , & deny_param , ssysname )"		3416876	0		=			
ANR	3417182	Identifier	pNewDeny		3416876	0					
ANR	3417183	CallExpression	"SecMan :: getSecSetting ( ""DENY_%s"" , perm , & deny_param , ssysname )"		3416876	1					
ANR	3417184	Callee	SecMan :: getSecSetting		3416876	0					
ANR	3417185	Identifier	SecMan :: getSecSetting		3416876	0					
ANR	3417186	ArgumentList	"""DENY_%s"""		3416876	1					
ANR	3417187	Argument	"""DENY_%s"""		3416876	0					
ANR	3417188	PrimaryExpression	"""DENY_%s"""		3416876	0					
ANR	3417189	Argument	perm		3416876	1					
ANR	3417190	Identifier	perm		3416876	0					
ANR	3417191	Argument	& deny_param		3416876	2					
ANR	3417192	UnaryOperationExpression	& deny_param		3416876	0					
ANR	3417193	UnaryOperator	&		3416876	0					
ANR	3417194	Identifier	deny_param		3416876	1					
ANR	3417195	Argument	ssysname		3416876	3					
ANR	3417196	Identifier	ssysname		3416876	0					
ANR	3417197	ExpressionStatement	"pOldDeny = SecMan :: getSecSetting ( ""HOSTDENY_%s"" , perm , & deny_param , ssysname )"	163:4:4558:4633	3416876	3	True				
ANR	3417198	AssignmentExpression	"pOldDeny = SecMan :: getSecSetting ( ""HOSTDENY_%s"" , perm , & deny_param , ssysname )"		3416876	0		=			
ANR	3417199	Identifier	pOldDeny		3416876	0					
ANR	3417200	CallExpression	"SecMan :: getSecSetting ( ""HOSTDENY_%s"" , perm , & deny_param , ssysname )"		3416876	1					
ANR	3417201	Callee	SecMan :: getSecSetting		3416876	0					
ANR	3417202	Identifier	SecMan :: getSecSetting		3416876	0					
ANR	3417203	ArgumentList	"""HOSTDENY_%s"""		3416876	1					
ANR	3417204	Argument	"""HOSTDENY_%s"""		3416876	0					
ANR	3417205	PrimaryExpression	"""HOSTDENY_%s"""		3416876	0					
ANR	3417206	Argument	perm		3416876	1					
ANR	3417207	Identifier	perm		3416876	0					
ANR	3417208	Argument	& deny_param		3416876	2					
ANR	3417209	UnaryOperationExpression	& deny_param		3416876	0					
ANR	3417210	UnaryOperator	&		3416876	0					
ANR	3417211	Identifier	deny_param		3416876	1					
ANR	3417212	Argument	ssysname		3416876	3					
ANR	3417213	Identifier	ssysname		3416876	0					
ANR	3417214	ElseStatement	else		3416876	0					
ANR	3417215	CompoundStatement		54:9:1892:1892	3416876	0					
ANR	3417216	ExpressionStatement	"pNewAllow = SecMan :: getSecSetting ( ""ALLOW_%s"" , perm , & allow_param , ssysname )"	166:3:4654:4728	3416876	0	True				
ANR	3417217	AssignmentExpression	"pNewAllow = SecMan :: getSecSetting ( ""ALLOW_%s"" , perm , & allow_param , ssysname )"		3416876	0		=			
ANR	3417218	Identifier	pNewAllow		3416876	0					
ANR	3417219	CallExpression	"SecMan :: getSecSetting ( ""ALLOW_%s"" , perm , & allow_param , ssysname )"		3416876	1					
ANR	3417220	Callee	SecMan :: getSecSetting		3416876	0					
ANR	3417221	Identifier	SecMan :: getSecSetting		3416876	0					
ANR	3417222	ArgumentList	"""ALLOW_%s"""		3416876	1					
ANR	3417223	Argument	"""ALLOW_%s"""		3416876	0					
ANR	3417224	PrimaryExpression	"""ALLOW_%s"""		3416876	0					
ANR	3417225	Argument	perm		3416876	1					
ANR	3417226	Identifier	perm		3416876	0					
ANR	3417227	Argument	& allow_param		3416876	2					
ANR	3417228	UnaryOperationExpression	& allow_param		3416876	0					
ANR	3417229	UnaryOperator	&		3416876	0					
ANR	3417230	Identifier	allow_param		3416876	1					
ANR	3417231	Argument	ssysname		3416876	3					
ANR	3417232	Identifier	ssysname		3416876	0					
ANR	3417233	ExpressionStatement	"pOldAllow = SecMan :: getSecSetting ( ""HOSTALLOW_%s"" , perm , & allow_param , ssysname )"	167:3:4733:4811	3416876	1	True				
ANR	3417234	AssignmentExpression	"pOldAllow = SecMan :: getSecSetting ( ""HOSTALLOW_%s"" , perm , & allow_param , ssysname )"		3416876	0		=			
ANR	3417235	Identifier	pOldAllow		3416876	0					
ANR	3417236	CallExpression	"SecMan :: getSecSetting ( ""HOSTALLOW_%s"" , perm , & allow_param , ssysname )"		3416876	1					
ANR	3417237	Callee	SecMan :: getSecSetting		3416876	0					
ANR	3417238	Identifier	SecMan :: getSecSetting		3416876	0					
ANR	3417239	ArgumentList	"""HOSTALLOW_%s"""		3416876	1					
ANR	3417240	Argument	"""HOSTALLOW_%s"""		3416876	0					
ANR	3417241	PrimaryExpression	"""HOSTALLOW_%s"""		3416876	0					
ANR	3417242	Argument	perm		3416876	1					
ANR	3417243	Identifier	perm		3416876	0					
ANR	3417244	Argument	& allow_param		3416876	2					
ANR	3417245	UnaryOperationExpression	& allow_param		3416876	0					
ANR	3417246	UnaryOperator	&		3416876	0					
ANR	3417247	Identifier	allow_param		3416876	1					
ANR	3417248	Argument	ssysname		3416876	3					
ANR	3417249	Identifier	ssysname		3416876	0					
ANR	3417250	ExpressionStatement	"pNewDeny = SecMan :: getSecSetting ( ""DENY_%s"" , perm , & deny_param , ssysname )"	168:3:4816:4887	3416876	2	True				
ANR	3417251	AssignmentExpression	"pNewDeny = SecMan :: getSecSetting ( ""DENY_%s"" , perm , & deny_param , ssysname )"		3416876	0		=			
ANR	3417252	Identifier	pNewDeny		3416876	0					
ANR	3417253	CallExpression	"SecMan :: getSecSetting ( ""DENY_%s"" , perm , & deny_param , ssysname )"		3416876	1					
ANR	3417254	Callee	SecMan :: getSecSetting		3416876	0					
ANR	3417255	Identifier	SecMan :: getSecSetting		3416876	0					
ANR	3417256	ArgumentList	"""DENY_%s"""		3416876	1					
ANR	3417257	Argument	"""DENY_%s"""		3416876	0					
ANR	3417258	PrimaryExpression	"""DENY_%s"""		3416876	0					
ANR	3417259	Argument	perm		3416876	1					
ANR	3417260	Identifier	perm		3416876	0					
ANR	3417261	Argument	& deny_param		3416876	2					
ANR	3417262	UnaryOperationExpression	& deny_param		3416876	0					
ANR	3417263	UnaryOperator	&		3416876	0					
ANR	3417264	Identifier	deny_param		3416876	1					
ANR	3417265	Argument	ssysname		3416876	3					
ANR	3417266	Identifier	ssysname		3416876	0					
ANR	3417267	ExpressionStatement	"pOldDeny = SecMan :: getSecSetting ( ""HOSTDENY_%s"" , perm , & deny_param , ssysname )"	169:3:4892:4967	3416876	3	True				
ANR	3417268	AssignmentExpression	"pOldDeny = SecMan :: getSecSetting ( ""HOSTDENY_%s"" , perm , & deny_param , ssysname )"		3416876	0		=			
ANR	3417269	Identifier	pOldDeny		3416876	0					
ANR	3417270	CallExpression	"SecMan :: getSecSetting ( ""HOSTDENY_%s"" , perm , & deny_param , ssysname )"		3416876	1					
ANR	3417271	Callee	SecMan :: getSecSetting		3416876	0					
ANR	3417272	Identifier	SecMan :: getSecSetting		3416876	0					
ANR	3417273	ArgumentList	"""HOSTDENY_%s"""		3416876	1					
ANR	3417274	Argument	"""HOSTDENY_%s"""		3416876	0					
ANR	3417275	PrimaryExpression	"""HOSTDENY_%s"""		3416876	0					
ANR	3417276	Argument	perm		3416876	1					
ANR	3417277	Identifier	perm		3416876	0					
ANR	3417278	Argument	& deny_param		3416876	2					
ANR	3417279	UnaryOperationExpression	& deny_param		3416876	0					
ANR	3417280	UnaryOperator	&		3416876	0					
ANR	3417281	Identifier	deny_param		3416876	1					
ANR	3417282	Argument	ssysname		3416876	3					
ANR	3417283	Identifier	ssysname		3416876	0					
ANR	3417284	ExpressionStatement	"pAllow = merge ( pNewAllow , pOldAllow )"	172:2:4995:5031	3416876	7	True				
ANR	3417285	AssignmentExpression	"pAllow = merge ( pNewAllow , pOldAllow )"		3416876	0		=			
ANR	3417286	Identifier	pAllow		3416876	0					
ANR	3417287	CallExpression	"merge ( pNewAllow , pOldAllow )"		3416876	1					
ANR	3417288	Callee	merge		3416876	0					
ANR	3417289	Identifier	merge		3416876	0					
ANR	3417290	ArgumentList	pNewAllow		3416876	1					
ANR	3417291	Argument	pNewAllow		3416876	0					
ANR	3417292	Identifier	pNewAllow		3416876	0					
ANR	3417293	Argument	pOldAllow		3416876	1					
ANR	3417294	Identifier	pOldAllow		3416876	0					
ANR	3417295	ExpressionStatement	"pDeny = merge ( pNewDeny , pOldDeny )"	174:2:5055:5088	3416876	8	True				
ANR	3417296	AssignmentExpression	"pDeny = merge ( pNewDeny , pOldDeny )"		3416876	0		=			
ANR	3417297	Identifier	pDeny		3416876	0					
ANR	3417298	CallExpression	"merge ( pNewDeny , pOldDeny )"		3416876	1					
ANR	3417299	Callee	merge		3416876	0					
ANR	3417300	Identifier	merge		3416876	0					
ANR	3417301	ArgumentList	pNewDeny		3416876	1					
ANR	3417302	Argument	pNewDeny		3416876	0					
ANR	3417303	Identifier	pNewDeny		3416876	0					
ANR	3417304	Argument	pOldDeny		3416876	1					
ANR	3417305	Identifier	pOldDeny		3416876	0					
ANR	3417306	IfStatement	if ( pAllow )		3416876	9					
ANR	3417307	Condition	pAllow	175:6:5096:5101	3416876	0	True				
ANR	3417308	Identifier	pAllow		3416876	0					
ANR	3417309	CompoundStatement		64:15:2348:2348	3416876	1					
ANR	3417310	ExpressionStatement	"dprintf ( D_SECURITY , ""IPVERIFY: allow %s: %s (from config value %s)\\n"" , PermString ( perm ) , pAllow , allow_param . Value ( ) )"	176:3:5110:5227	3416876	0	True				
ANR	3417311	CallExpression	"dprintf ( D_SECURITY , ""IPVERIFY: allow %s: %s (from config value %s)\\n"" , PermString ( perm ) , pAllow , allow_param . Value ( ) )"		3416876	0					
ANR	3417312	Callee	dprintf		3416876	0					
ANR	3417313	Identifier	dprintf		3416876	0					
ANR	3417314	ArgumentList	D_SECURITY		3416876	1					
ANR	3417315	Argument	D_SECURITY		3416876	0					
ANR	3417316	Identifier	D_SECURITY		3416876	0					
ANR	3417317	Argument	"""IPVERIFY: allow %s: %s (from config value %s)\\n"""		3416876	1					
ANR	3417318	PrimaryExpression	"""IPVERIFY: allow %s: %s (from config value %s)\\n"""		3416876	0					
ANR	3417319	Argument	PermString ( perm )		3416876	2					
ANR	3417320	CallExpression	PermString ( perm )		3416876	0					
ANR	3417321	Callee	PermString		3416876	0					
ANR	3417322	Identifier	PermString		3416876	0					
ANR	3417323	ArgumentList	perm		3416876	1					
ANR	3417324	Argument	perm		3416876	0					
ANR	3417325	Identifier	perm		3416876	0					
ANR	3417326	Argument	pAllow		3416876	3					
ANR	3417327	Identifier	pAllow		3416876	0					
ANR	3417328	Argument	allow_param . Value ( )		3416876	4					
ANR	3417329	CallExpression	allow_param . Value ( )		3416876	0					
ANR	3417330	Callee	allow_param . Value		3416876	0					
ANR	3417331	MemberAccess	allow_param . Value		3416876	0					
ANR	3417332	Identifier	allow_param		3416876	0					
ANR	3417333	Identifier	Value		3416876	1					
ANR	3417334	ArgumentList			3416876	1					
ANR	3417335	IfStatement	if ( pDeny )		3416876	10					
ANR	3417336	Condition	pDeny	178:6:5239:5243	3416876	0	True				
ANR	3417337	Identifier	pDeny		3416876	0					
ANR	3417338	CompoundStatement		67:14:2490:2490	3416876	1					
ANR	3417339	ExpressionStatement	"dprintf ( D_SECURITY , ""IPVERIFY: deny %s: %s (from config value %s)\\n"" , PermString ( perm ) , pDeny , deny_param . Value ( ) )"	179:3:5252:5366	3416876	0	True				
ANR	3417340	CallExpression	"dprintf ( D_SECURITY , ""IPVERIFY: deny %s: %s (from config value %s)\\n"" , PermString ( perm ) , pDeny , deny_param . Value ( ) )"		3416876	0					
ANR	3417341	Callee	dprintf		3416876	0					
ANR	3417342	Identifier	dprintf		3416876	0					
ANR	3417343	ArgumentList	D_SECURITY		3416876	1					
ANR	3417344	Argument	D_SECURITY		3416876	0					
ANR	3417345	Identifier	D_SECURITY		3416876	0					
ANR	3417346	Argument	"""IPVERIFY: deny %s: %s (from config value %s)\\n"""		3416876	1					
ANR	3417347	PrimaryExpression	"""IPVERIFY: deny %s: %s (from config value %s)\\n"""		3416876	0					
ANR	3417348	Argument	PermString ( perm )		3416876	2					
ANR	3417349	CallExpression	PermString ( perm )		3416876	0					
ANR	3417350	Callee	PermString		3416876	0					
ANR	3417351	Identifier	PermString		3416876	0					
ANR	3417352	ArgumentList	perm		3416876	1					
ANR	3417353	Argument	perm		3416876	0					
ANR	3417354	Identifier	perm		3416876	0					
ANR	3417355	Argument	pDeny		3416876	3					
ANR	3417356	Identifier	pDeny		3416876	0					
ANR	3417357	Argument	deny_param . Value ( )		3416876	4					
ANR	3417358	CallExpression	deny_param . Value ( )		3416876	0					
ANR	3417359	Callee	deny_param . Value		3416876	0					
ANR	3417360	MemberAccess	deny_param . Value		3416876	0					
ANR	3417361	Identifier	deny_param		3416876	0					
ANR	3417362	Identifier	Value		3416876	1					
ANR	3417363	ArgumentList			3416876	1					
ANR	3417364	IfStatement	if ( perm != CONFIG_PERM )		3416876	11					
ANR	3417365	Condition	perm != CONFIG_PERM	184:6:5557:5575	3416876	0	True				
ANR	3417366	EqualityExpression	perm != CONFIG_PERM		3416876	0		!=			
ANR	3417367	Identifier	perm		3416876	0					
ANR	3417368	Identifier	CONFIG_PERM		3416876	1					
ANR	3417369	CompoundStatement		73:28:2822:2822	3416876	1					
ANR	3417370	IfStatement	"if ( pAllow && ( ! strcmp ( pAllow , ""*"" ) || ! strcmp ( pAllow , ""*/*"" ) ) )"		3416876	0					
ANR	3417371	Condition	"pAllow && ( ! strcmp ( pAllow , ""*"" ) || ! strcmp ( pAllow , ""*/*"" ) )"	185:6:5587:5644	3416876	0	True				
ANR	3417372	AndExpression	"pAllow && ( ! strcmp ( pAllow , ""*"" ) || ! strcmp ( pAllow , ""*/*"" ) )"		3416876	0		&&			
ANR	3417373	Identifier	pAllow		3416876	0					
ANR	3417374	OrExpression	"! strcmp ( pAllow , ""*"" ) || ! strcmp ( pAllow , ""*/*"" )"		3416876	1		||			
ANR	3417375	UnaryOperationExpression	"! strcmp ( pAllow , ""*"" )"		3416876	0					
ANR	3417376	UnaryOperator	!		3416876	0					
ANR	3417377	CallExpression	"strcmp ( pAllow , ""*"" )"		3416876	1					
ANR	3417378	Callee	strcmp		3416876	0					
ANR	3417379	Identifier	strcmp		3416876	0					
ANR	3417380	ArgumentList	pAllow		3416876	1					
ANR	3417381	Argument	pAllow		3416876	0					
ANR	3417382	Identifier	pAllow		3416876	0					
ANR	3417383	Argument	"""*"""		3416876	1					
ANR	3417384	PrimaryExpression	"""*"""		3416876	0					
ANR	3417385	UnaryOperationExpression	"! strcmp ( pAllow , ""*/*"" )"		3416876	1					
ANR	3417386	UnaryOperator	!		3416876	0					
ANR	3417387	CallExpression	"strcmp ( pAllow , ""*/*"" )"		3416876	1					
ANR	3417388	Callee	strcmp		3416876	0					
ANR	3417389	Identifier	strcmp		3416876	0					
ANR	3417390	ArgumentList	pAllow		3416876	1					
ANR	3417391	Argument	pAllow		3416876	0					
ANR	3417392	Identifier	pAllow		3416876	0					
ANR	3417393	Argument	"""*/*"""		3416876	1					
ANR	3417394	PrimaryExpression	"""*/*"""		3416876	0					
ANR	3417395	CompoundStatement		74:66:2890:2890	3416876	1					
ANR	3417396	ExpressionStatement	free ( pAllow )	186:4:5653:5667	3416876	0	True				
ANR	3417397	CallExpression	free ( pAllow )		3416876	0					
ANR	3417398	Callee	free		3416876	0					
ANR	3417399	Identifier	free		3416876	0					
ANR	3417400	ArgumentList	pAllow		3416876	1					
ANR	3417401	Argument	pAllow		3416876	0					
ANR	3417402	Identifier	pAllow		3416876	0					
ANR	3417403	ExpressionStatement	pAllow = NULL	187:4:5673:5686	3416876	1	True				
ANR	3417404	AssignmentExpression	pAllow = NULL		3416876	0		=			
ANR	3417405	Identifier	pAllow		3416876	0					
ANR	3417406	Identifier	NULL		3416876	1					
ANR	3417407	IfStatement	if ( ! pAllow && ! pDeny )		3416876	12					
ANR	3417408	Condition	! pAllow && ! pDeny	190:7:5704:5720	3416876	0	True				
ANR	3417409	AndExpression	! pAllow && ! pDeny		3416876	0		&&			
ANR	3417410	UnaryOperationExpression	! pAllow		3416876	0					
ANR	3417411	UnaryOperator	!		3416876	0					
ANR	3417412	Identifier	pAllow		3416876	1					
ANR	3417413	UnaryOperationExpression	! pDeny		3416876	1					
ANR	3417414	UnaryOperator	!		3416876	0					
ANR	3417415	Identifier	pDeny		3416876	1					
ANR	3417416	CompoundStatement		79:27:2967:2967	3416876	1					
ANR	3417417	IfStatement	if ( perm == CONFIG_PERM )		3416876	0					
ANR	3417418	Condition	perm == CONFIG_PERM	191:7:5733:5751	3416876	0	True				
ANR	3417419	EqualityExpression	perm == CONFIG_PERM		3416876	0		==			
ANR	3417420	Identifier	perm		3416876	0					
ANR	3417421	Identifier	CONFIG_PERM		3416876	1					
ANR	3417422	CompoundStatement		80:28:2997:2997	3416876	1					
ANR	3417423	ExpressionStatement	pentry -> behavior = USERVERIFY_DENY	192:4:5792:5826	3416876	0	True				
ANR	3417424	AssignmentExpression	pentry -> behavior = USERVERIFY_DENY		3416876	0		=			
ANR	3417425	PtrMemberAccess	pentry -> behavior		3416876	0					
ANR	3417426	Identifier	pentry		3416876	0					
ANR	3417427	Identifier	behavior		3416876	1					
ANR	3417428	Identifier	USERVERIFY_DENY		3416876	1					
ANR	3417429	ExpressionStatement	"dprintf ( D_SECURITY , ""ipverify: %s optimized to deny everyone\\n"" , PermString ( perm ) )"	193:4:5846:5930	3416876	1	True				
ANR	3417430	CallExpression	"dprintf ( D_SECURITY , ""ipverify: %s optimized to deny everyone\\n"" , PermString ( perm ) )"		3416876	0					
ANR	3417431	Callee	dprintf		3416876	0					
ANR	3417432	Identifier	dprintf		3416876	0					
ANR	3417433	ArgumentList	D_SECURITY		3416876	1					
ANR	3417434	Argument	D_SECURITY		3416876	0					
ANR	3417435	Identifier	D_SECURITY		3416876	0					
ANR	3417436	Argument	"""ipverify: %s optimized to deny everyone\\n"""		3416876	1					
ANR	3417437	PrimaryExpression	"""ipverify: %s optimized to deny everyone\\n"""		3416876	0					
ANR	3417438	Argument	PermString ( perm )		3416876	2					
ANR	3417439	CallExpression	PermString ( perm )		3416876	0					
ANR	3417440	Callee	PermString		3416876	0					
ANR	3417441	Identifier	PermString		3416876	0					
ANR	3417442	ArgumentList	perm		3416876	1					
ANR	3417443	Argument	perm		3416876	0					
ANR	3417444	Identifier	perm		3416876	0					
ANR	3417445	ElseStatement	else		3416876	0					
ANR	3417446	CompoundStatement		83:10:3185:3185	3416876	0					
ANR	3417447	ExpressionStatement	pentry -> behavior = USERVERIFY_ALLOW	195:4:5948:5983	3416876	0	True				
ANR	3417448	AssignmentExpression	pentry -> behavior = USERVERIFY_ALLOW		3416876	0		=			
ANR	3417449	PtrMemberAccess	pentry -> behavior		3416876	0					
ANR	3417450	Identifier	pentry		3416876	0					
ANR	3417451	Identifier	behavior		3416876	1					
ANR	3417452	Identifier	USERVERIFY_ALLOW		3416876	1					
ANR	3417453	IfStatement	if ( perm != ALLOW )		3416876	1					
ANR	3417454	Condition	perm != ALLOW	196:8:5993:6005	3416876	0	True				
ANR	3417455	EqualityExpression	perm != ALLOW		3416876	0		!=			
ANR	3417456	Identifier	perm		3416876	0					
ANR	3417457	Identifier	ALLOW		3416876	1					
ANR	3417458	CompoundStatement		85:24:3252:3252	3416876	1					
ANR	3417459	ExpressionStatement	"dprintf ( D_SECURITY , ""ipverify: %s optimized to allow anyone\\n"" , PermString ( perm ) )"	197:5:6016:6099	3416876	0	True				
ANR	3417460	CallExpression	"dprintf ( D_SECURITY , ""ipverify: %s optimized to allow anyone\\n"" , PermString ( perm ) )"		3416876	0					
ANR	3417461	Callee	dprintf		3416876	0					
ANR	3417462	Identifier	dprintf		3416876	0					
ANR	3417463	ArgumentList	D_SECURITY		3416876	1					
ANR	3417464	Argument	D_SECURITY		3416876	0					
ANR	3417465	Identifier	D_SECURITY		3416876	0					
ANR	3417466	Argument	"""ipverify: %s optimized to allow anyone\\n"""		3416876	1					
ANR	3417467	PrimaryExpression	"""ipverify: %s optimized to allow anyone\\n"""		3416876	0					
ANR	3417468	Argument	PermString ( perm )		3416876	2					
ANR	3417469	CallExpression	PermString ( perm )		3416876	0					
ANR	3417470	Callee	PermString		3416876	0					
ANR	3417471	Identifier	PermString		3416876	0					
ANR	3417472	ArgumentList	perm		3416876	1					
ANR	3417473	Argument	perm		3416876	0					
ANR	3417474	Identifier	perm		3416876	0					
ANR	3417475	ElseStatement	else		3416876	0					
ANR	3417476	CompoundStatement		89:9:3364:3364	3416876	0					
ANR	3417477	IfStatement	if ( pDeny && ! pAllow && perm != CONFIG_PERM )		3416876	0					
ANR	3417478	Condition	pDeny && ! pAllow && perm != CONFIG_PERM	201:8:6131:6169	3416876	0	True				
ANR	3417479	AndExpression	pDeny && ! pAllow && perm != CONFIG_PERM		3416876	0		&&			
ANR	3417480	Identifier	pDeny		3416876	0					
ANR	3417481	AndExpression	! pAllow && perm != CONFIG_PERM		3416876	1		&&			
ANR	3417482	UnaryOperationExpression	! pAllow		3416876	0					
ANR	3417483	UnaryOperator	!		3416876	0					
ANR	3417484	Identifier	pAllow		3416876	1					
ANR	3417485	EqualityExpression	perm != CONFIG_PERM		3416876	1		!=			
ANR	3417486	Identifier	perm		3416876	0					
ANR	3417487	Identifier	CONFIG_PERM		3416876	1					
ANR	3417488	CompoundStatement		90:50:3416:3416	3416876	1					
ANR	3417489	ExpressionStatement	pentry -> behavior = USERVERIFY_ONLY_DENIES	202:4:6179:6220	3416876	0	True				
ANR	3417490	AssignmentExpression	pentry -> behavior = USERVERIFY_ONLY_DENIES		3416876	0		=			
ANR	3417491	PtrMemberAccess	pentry -> behavior		3416876	0					
ANR	3417492	Identifier	pentry		3416876	0					
ANR	3417493	Identifier	behavior		3416876	1					
ANR	3417494	Identifier	USERVERIFY_ONLY_DENIES		3416876	1					
ANR	3417495	ElseStatement	else		3416876	0					
ANR	3417496	CompoundStatement		92:10:3475:3475	3416876	0					
ANR	3417497	ExpressionStatement	pentry -> behavior = USERVERIFY_USE_TABLE	204:4:6238:6277	3416876	0	True				
ANR	3417498	AssignmentExpression	pentry -> behavior = USERVERIFY_USE_TABLE		3416876	0		=			
ANR	3417499	PtrMemberAccess	pentry -> behavior		3416876	0					
ANR	3417500	Identifier	pentry		3416876	0					
ANR	3417501	Identifier	behavior		3416876	1					
ANR	3417502	Identifier	USERVERIFY_USE_TABLE		3416876	1					
ANR	3417503	IfStatement	if ( pAllow )		3416876	1					
ANR	3417504	Condition	pAllow	206:8:6292:6297	3416876	0	True				
ANR	3417505	Identifier	pAllow		3416876	0					
ANR	3417506	CompoundStatement		95:17:3544:3544	3416876	1					
ANR	3417507	ExpressionStatement	"fill_table ( pentry , pAllow , true )"	207:4:6307:6341	3416876	0	True				
ANR	3417508	CallExpression	"fill_table ( pentry , pAllow , true )"		3416876	0					
ANR	3417509	Callee	fill_table		3416876	0					
ANR	3417510	Identifier	fill_table		3416876	0					
ANR	3417511	ArgumentList	pentry		3416876	1					
ANR	3417512	Argument	pentry		3416876	0					
ANR	3417513	Identifier	pentry		3416876	0					
ANR	3417514	Argument	pAllow		3416876	1					
ANR	3417515	Identifier	pAllow		3416876	0					
ANR	3417516	Argument	true		3416876	2					
ANR	3417517	Identifier	true		3416876	0					
ANR	3417518	ExpressionStatement	free ( pAllow )	208:4:6347:6359	3416876	1	True				
ANR	3417519	CallExpression	free ( pAllow )		3416876	0					
ANR	3417520	Callee	free		3416876	0					
ANR	3417521	Identifier	free		3416876	0					
ANR	3417522	ArgumentList	pAllow		3416876	1					
ANR	3417523	Argument	pAllow		3416876	0					
ANR	3417524	Identifier	pAllow		3416876	0					
ANR	3417525	ExpressionStatement	pAllow = NULL	209:4:6365:6378	3416876	2	True				
ANR	3417526	AssignmentExpression	pAllow = NULL		3416876	0		=			
ANR	3417527	Identifier	pAllow		3416876	0					
ANR	3417528	Identifier	NULL		3416876	1					
ANR	3417529	IfStatement	if ( pDeny )		3416876	2					
ANR	3417530	Condition	pDeny	211:8:6393:6397	3416876	0	True				
ANR	3417531	Identifier	pDeny		3416876	0					
ANR	3417532	CompoundStatement		100:16:3644:3644	3416876	1					
ANR	3417533	ExpressionStatement	"fill_table ( pentry , pDeny , false )"	212:4:6407:6441	3416876	0	True				
ANR	3417534	CallExpression	"fill_table ( pentry , pDeny , false )"		3416876	0					
ANR	3417535	Callee	fill_table		3416876	0					
ANR	3417536	Identifier	fill_table		3416876	0					
ANR	3417537	ArgumentList	pentry		3416876	1					
ANR	3417538	Argument	pentry		3416876	0					
ANR	3417539	Identifier	pentry		3416876	0					
ANR	3417540	Argument	pDeny		3416876	1					
ANR	3417541	Identifier	pDeny		3416876	0					
ANR	3417542	Argument	false		3416876	2					
ANR	3417543	Identifier	false		3416876	0					
ANR	3417544	ExpressionStatement	free ( pDeny )	213:4:6447:6458	3416876	1	True				
ANR	3417545	CallExpression	free ( pDeny )		3416876	0					
ANR	3417546	Callee	free		3416876	0					
ANR	3417547	Identifier	free		3416876	0					
ANR	3417548	ArgumentList	pDeny		3416876	1					
ANR	3417549	Argument	pDeny		3416876	0					
ANR	3417550	Identifier	pDeny		3416876	0					
ANR	3417551	ExpressionStatement	pDeny = NULL	214:4:6464:6476	3416876	2	True				
ANR	3417552	AssignmentExpression	pDeny = NULL		3416876	0		=			
ANR	3417553	Identifier	pDeny		3416876	0					
ANR	3417554	Identifier	NULL		3416876	1					
ANR	3417555	IfStatement	if ( pAllow )		3416876	13					
ANR	3417556	Condition	pAllow	217:6:6493:6498	3416876	0	True				
ANR	3417557	Identifier	pAllow		3416876	0					
ANR	3417558	CompoundStatement		106:14:3744:3744	3416876	1					
ANR	3417559	ExpressionStatement	free ( pAllow )	218:3:6506:6518	3416876	0	True				
ANR	3417560	CallExpression	free ( pAllow )		3416876	0					
ANR	3417561	Callee	free		3416876	0					
ANR	3417562	Identifier	free		3416876	0					
ANR	3417563	ArgumentList	pAllow		3416876	1					
ANR	3417564	Argument	pAllow		3416876	0					
ANR	3417565	Identifier	pAllow		3416876	0					
ANR	3417566	ExpressionStatement	pAllow = NULL	219:3:6523:6536	3416876	1	True				
ANR	3417567	AssignmentExpression	pAllow = NULL		3416876	0		=			
ANR	3417568	Identifier	pAllow		3416876	0					
ANR	3417569	Identifier	NULL		3416876	1					
ANR	3417570	IfStatement	if ( pDeny )		3416876	14					
ANR	3417571	Condition	pDeny	221:6:6548:6552	3416876	0	True				
ANR	3417572	Identifier	pDeny		3416876	0					
ANR	3417573	CompoundStatement		110:13:3798:3798	3416876	1					
ANR	3417574	ExpressionStatement	free ( pDeny )	222:3:6560:6571	3416876	0	True				
ANR	3417575	CallExpression	free ( pDeny )		3416876	0					
ANR	3417576	Callee	free		3416876	0					
ANR	3417577	Identifier	free		3416876	0					
ANR	3417578	ArgumentList	pDeny		3416876	1					
ANR	3417579	Argument	pDeny		3416876	0					
ANR	3417580	Identifier	pDeny		3416876	0					
ANR	3417581	ExpressionStatement	pDeny = NULL	223:3:6576:6588	3416876	1	True				
ANR	3417582	AssignmentExpression	pDeny = NULL		3416876	0		=			
ANR	3417583	Identifier	pDeny		3416876	0					
ANR	3417584	Identifier	NULL		3416876	1					
ANR	3417585	IfStatement	if ( pOldAllow )		3416876	15					
ANR	3417586	Condition	pOldAllow	225:6:6600:6608	3416876	0	True				
ANR	3417587	Identifier	pOldAllow		3416876	0					
ANR	3417588	CompoundStatement		114:17:3854:3854	3416876	1					
ANR	3417589	ExpressionStatement	free ( pOldAllow )	226:3:6616:6631	3416876	0	True				
ANR	3417590	CallExpression	free ( pOldAllow )		3416876	0					
ANR	3417591	Callee	free		3416876	0					
ANR	3417592	Identifier	free		3416876	0					
ANR	3417593	ArgumentList	pOldAllow		3416876	1					
ANR	3417594	Argument	pOldAllow		3416876	0					
ANR	3417595	Identifier	pOldAllow		3416876	0					
ANR	3417596	ExpressionStatement	pOldAllow = NULL	227:3:6636:6652	3416876	1	True				
ANR	3417597	AssignmentExpression	pOldAllow = NULL		3416876	0		=			
ANR	3417598	Identifier	pOldAllow		3416876	0					
ANR	3417599	Identifier	NULL		3416876	1					
ANR	3417600	IfStatement	if ( pOldDeny )		3416876	16					
ANR	3417601	Condition	pOldDeny	229:6:6664:6671	3416876	0	True				
ANR	3417602	Identifier	pOldDeny		3416876	0					
ANR	3417603	CompoundStatement		118:16:3917:3917	3416876	1					
ANR	3417604	ExpressionStatement	free ( pOldDeny )	230:3:6679:6693	3416876	0	True				
ANR	3417605	CallExpression	free ( pOldDeny )		3416876	0					
ANR	3417606	Callee	free		3416876	0					
ANR	3417607	Identifier	free		3416876	0					
ANR	3417608	ArgumentList	pOldDeny		3416876	1					
ANR	3417609	Argument	pOldDeny		3416876	0					
ANR	3417610	Identifier	pOldDeny		3416876	0					
ANR	3417611	ExpressionStatement	pOldDeny = NULL	231:3:6698:6713	3416876	1	True				
ANR	3417612	AssignmentExpression	pOldDeny = NULL		3416876	0		=			
ANR	3417613	Identifier	pOldDeny		3416876	0					
ANR	3417614	Identifier	NULL		3416876	1					
ANR	3417615	IfStatement	if ( pNewAllow )		3416876	17					
ANR	3417616	Condition	pNewAllow	233:6:6725:6733	3416876	0	True				
ANR	3417617	Identifier	pNewAllow		3416876	0					
ANR	3417618	CompoundStatement		122:17:3979:3979	3416876	1					
ANR	3417619	ExpressionStatement	free ( pNewAllow )	234:3:6741:6756	3416876	0	True				
ANR	3417620	CallExpression	free ( pNewAllow )		3416876	0					
ANR	3417621	Callee	free		3416876	0					
ANR	3417622	Identifier	free		3416876	0					
ANR	3417623	ArgumentList	pNewAllow		3416876	1					
ANR	3417624	Argument	pNewAllow		3416876	0					
ANR	3417625	Identifier	pNewAllow		3416876	0					
ANR	3417626	ExpressionStatement	pNewAllow = NULL	235:3:6761:6777	3416876	1	True				
ANR	3417627	AssignmentExpression	pNewAllow = NULL		3416876	0		=			
ANR	3417628	Identifier	pNewAllow		3416876	0					
ANR	3417629	Identifier	NULL		3416876	1					
ANR	3417630	IfStatement	if ( pNewDeny )		3416876	18					
ANR	3417631	Condition	pNewDeny	237:6:6789:6796	3416876	0	True				
ANR	3417632	Identifier	pNewDeny		3416876	0					
ANR	3417633	CompoundStatement		126:16:4042:4042	3416876	1					
ANR	3417634	ExpressionStatement	free ( pNewDeny )	238:3:6804:6818	3416876	0	True				
ANR	3417635	CallExpression	free ( pNewDeny )		3416876	0					
ANR	3417636	Callee	free		3416876	0					
ANR	3417637	Identifier	free		3416876	0					
ANR	3417638	ArgumentList	pNewDeny		3416876	1					
ANR	3417639	Argument	pNewDeny		3416876	0					
ANR	3417640	Identifier	pNewDeny		3416876	0					
ANR	3417641	ExpressionStatement	pNewDeny = NULL	239:3:6823:6838	3416876	1	True				
ANR	3417642	AssignmentExpression	pNewDeny = NULL		3416876	0		=			
ANR	3417643	Identifier	pNewDeny		3416876	0					
ANR	3417644	Identifier	NULL		3416876	1					
ANR	3417645	ExpressionStatement	"dprintf ( D_FULLDEBUG | D_SECURITY , ""Initialized the following authorization table:\\n"" )"	242:1:6848:6930	3416876	12	True				
ANR	3417646	CallExpression	"dprintf ( D_FULLDEBUG | D_SECURITY , ""Initialized the following authorization table:\\n"" )"		3416876	0					
ANR	3417647	Callee	dprintf		3416876	0					
ANR	3417648	Identifier	dprintf		3416876	0					
ANR	3417649	ArgumentList	D_FULLDEBUG | D_SECURITY		3416876	1					
ANR	3417650	Argument	D_FULLDEBUG | D_SECURITY		3416876	0					
ANR	3417651	InclusiveOrExpression	D_FULLDEBUG | D_SECURITY		3416876	0		|			
ANR	3417652	Identifier	D_FULLDEBUG		3416876	0					
ANR	3417653	Identifier	D_SECURITY		3416876	1					
ANR	3417654	Argument	"""Initialized the following authorization table:\\n"""		3416876	1					
ANR	3417655	PrimaryExpression	"""Initialized the following authorization table:\\n"""		3416876	0					
ANR	3417656	IfStatement	if ( PermHashTable )		3416876	13					
ANR	3417657	Condition	PermHashTable	243:4:6936:6948	3416876	0	True				
ANR	3417658	Identifier	PermHashTable		3416876	0					
ANR	3417659	ExpressionStatement	PrintAuthTable ( D_FULLDEBUG | D_SECURITY )	244:2:6954:6992	3416876	1	True				
ANR	3417660	CallExpression	PrintAuthTable ( D_FULLDEBUG | D_SECURITY )		3416876	0					
ANR	3417661	Callee	PrintAuthTable		3416876	0					
ANR	3417662	Identifier	PrintAuthTable		3416876	0					
ANR	3417663	ArgumentList	D_FULLDEBUG | D_SECURITY		3416876	1					
ANR	3417664	Argument	D_FULLDEBUG | D_SECURITY		3416876	0					
ANR	3417665	InclusiveOrExpression	D_FULLDEBUG | D_SECURITY		3416876	0		|			
ANR	3417666	Identifier	D_FULLDEBUG		3416876	0					
ANR	3417667	Identifier	D_SECURITY		3416876	1					
ANR	3417668	ReturnStatement	return TRUE ;	245:1:6995:7006	3416876	14	True				
ANR	3417669	Identifier	TRUE		3416876	0					
ANR	3417670	ReturnType	int		3416876	1					
ANR	3417671	Identifier	IpVerify :: Init		3416876	2					
ANR	3417672	ParameterList			3416876	3					
ANR	3417673	CFGEntryNode	ENTRY		3416876		True				
ANR	3417674	CFGExitNode	EXIT		3416876		True				
ANR	3417675	Symbol	PermHashTable -> iterate		3416876						
ANR	3417676	Symbol	perm		3416876						
ANR	3417677	Symbol	* PermTypeArray		3416876						
ANR	3417678	Symbol	* perm		3416876						
ANR	3417679	Symbol	D_SECURITY		3416876						
ANR	3417680	Symbol	allow_param		3416876						
ANR	3417681	Symbol	pOldAllow		3416876						
ANR	3417682	Symbol	pNewDeny		3416876						
ANR	3417683	Symbol	USERVERIFY_DENY		3416876						
ANR	3417684	Symbol	CONFIG_PERM		3416876						
ANR	3417685	Symbol	ssysname		3416876						
ANR	3417686	Symbol	pDeny		3416876						
ANR	3417687	Symbol	merge		3416876						
ANR	3417688	Symbol	PermHashTable		3416876						
ANR	3417689	Symbol	* PermHashTable		3416876						
ANR	3417690	Symbol	NEXT_PERM		3416876						
ANR	3417691	Symbol	& allow_param		3416876						
ANR	3417692	Symbol	pAllow		3416876						
ANR	3417693	Symbol	value		3416876						
ANR	3417694	Symbol	key		3416876						
ANR	3417695	Symbol	ALLOW		3416876						
ANR	3417696	Symbol	allow_param . Value		3416876						
ANR	3417697	Symbol	pNewAllow		3416876						
ANR	3417698	Symbol	LAST_PERM		3416876						
ANR	3417699	Symbol	strcmp		3416876						
ANR	3417700	Symbol	* pentry		3416876						
ANR	3417701	Symbol	USERVERIFY_USE_TABLE		3416876						
ANR	3417702	Symbol	NULL		3416876						
ANR	3417703	Symbol	pentry		3416876						
ANR	3417704	Symbol	get_mySubSystem ( ) -> getName		3416876						
ANR	3417705	Symbol	did_init		3416876						
ANR	3417706	Symbol	* get_mySubSystem		3416876						
ANR	3417707	Symbol	SecMan :: getSecSetting		3416876						
ANR	3417708	Symbol	false		3416876						
ANR	3417709	Symbol	TRUE		3416876						
ANR	3417710	Symbol	FIRST_PERM		3416876						
ANR	3417711	Symbol	D_FULLDEBUG		3416876						
ANR	3417712	Symbol	PermTypeArray		3416876						
ANR	3417713	Symbol	deny_param		3416876						
ANR	3417714	Symbol	USERVERIFY_ALLOW		3416876						
ANR	3417715	Symbol	deny_param . Value		3416876						
ANR	3417716	Symbol	pentry -> behavior		3416876						
ANR	3417717	Symbol	& deny_param		3416876						
ANR	3417718	Symbol	true		3416876						
ANR	3417719	Symbol	PermString		3416876						
ANR	3417720	Symbol	get_mySubSystem		3416876						
ANR	3417721	Symbol	USERVERIFY_ONLY_DENIES		3416876						
ANR	3417722	Symbol	pOldDeny		3416876						
ANR	3417723	Function	IpVerify :: merge	248:0:7011:7462							
ANR	3417724	FunctionDef	"IpVerify :: merge (char * pNewList , char * pOldList)"		3417723	0					
ANR	3417725	CompoundStatement		249:0:7070:7462	3417723	0					
ANR	3417726	IdentifierDeclStatement	char * pList = NULL ;	250:4:7076:7095	3417723	0	True				
ANR	3417727	IdentifierDecl	* pList = NULL		3417723	0					
ANR	3417728	IdentifierDeclType	char *		3417723	0					
ANR	3417729	Identifier	pList		3417723	1					
ANR	3417730	AssignmentExpression	* pList = NULL		3417723	2		=			
ANR	3417731	Identifier	NULL		3417723	0					
ANR	3417732	Identifier	NULL		3417723	1					
ANR	3417733	IfStatement	if ( pOldList )		3417723	1					
ANR	3417734	Condition	pOldList	252:8:7106:7113	3417723	0	True				
ANR	3417735	Identifier	pOldList		3417723	0					
ANR	3417736	CompoundStatement		4:18:45:45	3417723	1					
ANR	3417737	IfStatement	if ( pNewList )		3417723	0					
ANR	3417738	Condition	pNewList	253:12:7130:7137	3417723	0	True				
ANR	3417739	Identifier	pNewList		3417723	0					
ANR	3417740	CompoundStatement		5:22:69:69	3417723	1					
ANR	3417741	ExpressionStatement	pList = ( char * ) malloc ( strlen ( pOldList ) + strlen ( pNewList ) + 2 )	254:12:7154:7217	3417723	0	True				
ANR	3417742	AssignmentExpression	pList = ( char * ) malloc ( strlen ( pOldList ) + strlen ( pNewList ) + 2 )		3417723	0		=			
ANR	3417743	Identifier	pList		3417723	0					
ANR	3417744	CastExpression	( char * ) malloc ( strlen ( pOldList ) + strlen ( pNewList ) + 2 )		3417723	1					
ANR	3417745	CastTarget	char *		3417723	0					
ANR	3417746	CallExpression	malloc ( strlen ( pOldList ) + strlen ( pNewList ) + 2 )		3417723	1					
ANR	3417747	Callee	malloc		3417723	0					
ANR	3417748	Identifier	malloc		3417723	0					
ANR	3417749	ArgumentList	strlen ( pOldList ) + strlen ( pNewList ) + 2		3417723	1					
ANR	3417750	Argument	strlen ( pOldList ) + strlen ( pNewList ) + 2		3417723	0					
ANR	3417751	AdditiveExpression	strlen ( pOldList ) + strlen ( pNewList ) + 2		3417723	0		+			
ANR	3417752	CallExpression	strlen ( pOldList )		3417723	0					
ANR	3417753	Callee	strlen		3417723	0					
ANR	3417754	Identifier	strlen		3417723	0					
ANR	3417755	ArgumentList	pOldList		3417723	1					
ANR	3417756	Argument	pOldList		3417723	0					
ANR	3417757	Identifier	pOldList		3417723	0					
ANR	3417758	AdditiveExpression	strlen ( pNewList ) + 2		3417723	1		+			
ANR	3417759	CallExpression	strlen ( pNewList )		3417723	0					
ANR	3417760	Callee	strlen		3417723	0					
ANR	3417761	Identifier	strlen		3417723	0					
ANR	3417762	ArgumentList	pNewList		3417723	1					
ANR	3417763	Argument	pNewList		3417723	0					
ANR	3417764	Identifier	pNewList		3417723	0					
ANR	3417765	PrimaryExpression	2		3417723	1					
ANR	3417766	ExpressionStatement	"sprintf ( pList , ""%s,%s"" , pNewList , pOldList )"	255:12:7231:7274	3417723	1	True				
ANR	3417767	CallExpression	"sprintf ( pList , ""%s,%s"" , pNewList , pOldList )"		3417723	0					
ANR	3417768	Callee	sprintf		3417723	0					
ANR	3417769	Identifier	sprintf		3417723	0					
ANR	3417770	ArgumentList	pList		3417723	1					
ANR	3417771	Argument	pList		3417723	0					
ANR	3417772	Identifier	pList		3417723	0					
ANR	3417773	Argument	"""%s,%s"""		3417723	1					
ANR	3417774	PrimaryExpression	"""%s,%s"""		3417723	0					
ANR	3417775	Argument	pNewList		3417723	2					
ANR	3417776	Identifier	pNewList		3417723	0					
ANR	3417777	Argument	pOldList		3417723	3					
ANR	3417778	Identifier	pOldList		3417723	0					
ANR	3417779	ElseStatement	else		3417723	0					
ANR	3417780	CompoundStatement		9:13:228:228	3417723	0					
ANR	3417781	ExpressionStatement	pList = strdup ( pOldList )	258:12:7313:7337	3417723	0	True				
ANR	3417782	AssignmentExpression	pList = strdup ( pOldList )		3417723	0		=			
ANR	3417783	Identifier	pList		3417723	0					
ANR	3417784	CallExpression	strdup ( pOldList )		3417723	1					
ANR	3417785	Callee	strdup		3417723	0					
ANR	3417786	Identifier	strdup		3417723	0					
ANR	3417787	ArgumentList	pOldList		3417723	1					
ANR	3417788	Argument	pOldList		3417723	0					
ANR	3417789	Identifier	pOldList		3417723	0					
ANR	3417790	ElseStatement	else		3417723	0					
ANR	3417791	CompoundStatement		13:9:293:293	3417723	0					
ANR	3417792	IfStatement	if ( pNewList )		3417723	0					
ANR	3417793	Condition	pNewList	262:12:7378:7385	3417723	0	True				
ANR	3417794	Identifier	pNewList		3417723	0					
ANR	3417795	CompoundStatement		14:22:317:317	3417723	1					
ANR	3417796	ExpressionStatement	pList = strdup ( pNewList )	263:12:7402:7426	3417723	0	True				
ANR	3417797	AssignmentExpression	pList = strdup ( pNewList )		3417723	0		=			
ANR	3417798	Identifier	pList		3417723	0					
ANR	3417799	CallExpression	strdup ( pNewList )		3417723	1					
ANR	3417800	Callee	strdup		3417723	0					
ANR	3417801	Identifier	strdup		3417723	0					
ANR	3417802	ArgumentList	pNewList		3417723	1					
ANR	3417803	Argument	pNewList		3417723	0					
ANR	3417804	Identifier	pNewList		3417723	0					
ANR	3417805	ReturnStatement	return pList ;	266:4:7448:7460	3417723	2	True				
ANR	3417806	Identifier	pList		3417723	0					
ANR	3417807	ReturnType	char *		3417723	1					
ANR	3417808	Identifier	IpVerify :: merge		3417723	2					
ANR	3417809	ParameterList	"char * pNewList , char * pOldList"		3417723	3					
ANR	3417810	Parameter	char * pNewList	248:25:7036:7050	3417723	0	True				
ANR	3417811	ParameterType	char *		3417723	0					
ANR	3417812	Identifier	pNewList		3417723	1					
ANR	3417813	Parameter	char * pOldList	248:42:7053:7067	3417723	1	True				
ANR	3417814	ParameterType	char *		3417723	0					
ANR	3417815	Identifier	pOldList		3417723	1					
ANR	3417816	CFGEntryNode	ENTRY		3417723		True				
ANR	3417817	CFGExitNode	EXIT		3417723		True				
ANR	3417818	Symbol	pList		3417723						
ANR	3417819	Symbol	strlen		3417723						
ANR	3417820	Symbol	malloc		3417723						
ANR	3417821	Symbol	NULL		3417723						
ANR	3417822	Symbol	pOldList		3417723						
ANR	3417823	Symbol	pNewList		3417723						
ANR	3417824	Symbol	strdup		3417723						
ANR	3417825	Function	IpVerify :: has_user	269:0:7465:7772							
ANR	3417826	FunctionDef	"IpVerify :: has_user (UserPerm_t * perm , const char * user , perm_mask_t & mask)"		3417825	0					
ANR	3417827	CompoundStatement		270:0:7550:7772	3417825	0					
ANR	3417828	IdentifierDeclStatement	MyString user_key ;	272:4:7599:7616	3417825	0	True				
ANR	3417829	IdentifierDecl	user_key		3417825	0					
ANR	3417830	IdentifierDeclType	MyString		3417825	0					
ANR	3417831	Identifier	user_key		3417825	1					
ANR	3417832	ExpressionStatement	assert ( perm )	273:4:7622:7634	3417825	1	True				
ANR	3417833	CallExpression	assert ( perm )		3417825	0					
ANR	3417834	Callee	assert		3417825	0					
ANR	3417835	Identifier	assert		3417825	0					
ANR	3417836	ArgumentList	perm		3417825	1					
ANR	3417837	Argument	perm		3417825	0					
ANR	3417838	Identifier	perm		3417825	0					
ANR	3417839	IfStatement	if ( ! user || ! * user )		3417825	2					
ANR	3417840	Condition	! user || ! * user	275:8:7645:7659	3417825	0	True				
ANR	3417841	OrExpression	! user || ! * user		3417825	0		||			
ANR	3417842	UnaryOperationExpression	! user		3417825	0					
ANR	3417843	UnaryOperator	!		3417825	0					
ANR	3417844	Identifier	user		3417825	1					
ANR	3417845	UnaryOperationExpression	! * user		3417825	1					
ANR	3417846	UnaryOperator	!		3417825	0					
ANR	3417847	UnaryOperationExpression	* user		3417825	1					
ANR	3417848	UnaryOperator	*		3417825	0					
ANR	3417849	Identifier	user		3417825	1					
ANR	3417850	CompoundStatement		6:26:112:112	3417825	1					
ANR	3417851	ExpressionStatement	user_key = TotallyWild	276:2:7667:7689	3417825	0	True				
ANR	3417852	AssignmentExpression	user_key = TotallyWild		3417825	0		=			
ANR	3417853	Identifier	user_key		3417825	0					
ANR	3417854	Identifier	TotallyWild		3417825	1					
ANR	3417855	ElseStatement	else		3417825	0					
ANR	3417856	CompoundStatement		9:6:149:149	3417825	0					
ANR	3417857	ExpressionStatement	user_key = user	279:2:7704:7719	3417825	0	True				
ANR	3417858	AssignmentExpression	user_key = user		3417825	0		=			
ANR	3417859	Identifier	user_key		3417825	0					
ANR	3417860	Identifier	user		3417825	1					
ANR	3417861	ReturnStatement	"return perm -> lookup ( user_key , mask ) != - 1 ;"	282:4:7729:7770	3417825	3	True				
ANR	3417862	EqualityExpression	"perm -> lookup ( user_key , mask ) != - 1"		3417825	0		!=			
ANR	3417863	CallExpression	"perm -> lookup ( user_key , mask )"		3417825	0					
ANR	3417864	Callee	perm -> lookup		3417825	0					
ANR	3417865	PtrMemberAccess	perm -> lookup		3417825	0					
ANR	3417866	Identifier	perm		3417825	0					
ANR	3417867	Identifier	lookup		3417825	1					
ANR	3417868	ArgumentList	user_key		3417825	1					
ANR	3417869	Argument	user_key		3417825	0					
ANR	3417870	Identifier	user_key		3417825	0					
ANR	3417871	Argument	mask		3417825	1					
ANR	3417872	Identifier	mask		3417825	0					
ANR	3417873	UnaryOperationExpression	- 1		3417825	1					
ANR	3417874	UnaryOperator	-		3417825	0					
ANR	3417875	PrimaryExpression	1		3417825	1					
ANR	3417876	ReturnType	bool		3417825	1					
ANR	3417877	Identifier	IpVerify :: has_user		3417825	2					
ANR	3417878	ParameterList	"UserPerm_t * perm , const char * user , perm_mask_t & mask"		3417825	3					
ANR	3417879	Parameter	UserPerm_t * perm	269:26:7491:7507	3417825	0	True				
ANR	3417880	ParameterType	UserPerm_t *		3417825	0					
ANR	3417881	Identifier	perm		3417825	1					
ANR	3417882	Parameter	const char * user	269:45:7510:7526	3417825	1	True				
ANR	3417883	ParameterType	const char *		3417825	0					
ANR	3417884	Identifier	user		3417825	1					
ANR	3417885	Parameter	perm_mask_t & mask	269:64:7529:7546	3417825	2	True				
ANR	3417886	ParameterType	perm_mask_t &		3417825	0					
ANR	3417887	Identifier	mask		3417825	1					
ANR	3417888	CFGEntryNode	ENTRY		3417825		True				
ANR	3417889	CFGExitNode	EXIT		3417825		True				
ANR	3417890	Symbol	perm		3417825						
ANR	3417891	Symbol	* user		3417825						
ANR	3417892	Symbol	* perm		3417825						
ANR	3417893	Symbol	user_key		3417825						
ANR	3417894	Symbol	user		3417825						
ANR	3417895	Symbol	TotallyWild		3417825						
ANR	3417896	Symbol	perm -> lookup		3417825						
ANR	3417897	Symbol	mask		3417825						
ANR	3417898	Function	IpVerify :: LookupCachedVerifyResult	286:0:7779:8237							
ANR	3417899	FunctionDef	"IpVerify :: LookupCachedVerifyResult (DCpermission perm , const struct in6_addr & sin6 , const char * user , perm_mask_t & mask)"		3417898	0					
ANR	3417900	CompoundStatement		288:0:7907:8237	3417898	0					
ANR	3417901	IdentifierDeclStatement	UserPerm_t * ptable = NULL ;	289:4:7913:7939	3417898	0	True				
ANR	3417902	IdentifierDecl	* ptable = NULL		3417898	0					
ANR	3417903	IdentifierDeclType	UserPerm_t *		3417898	0					
ANR	3417904	Identifier	ptable		3417898	1					
ANR	3417905	AssignmentExpression	* ptable = NULL		3417898	2		=			
ANR	3417906	Identifier	NULL		3417898	0					
ANR	3417907	Identifier	NULL		3417898	1					
ANR	3417908	IfStatement	"if ( PermHashTable -> lookup ( sin6 , ptable ) != - 1 )"		3417898	1					
ANR	3417909	Condition	"PermHashTable -> lookup ( sin6 , ptable ) != - 1"	291:5:7947:7987	3417898	0	True				
ANR	3417910	EqualityExpression	"PermHashTable -> lookup ( sin6 , ptable ) != - 1"		3417898	0		!=			
ANR	3417911	CallExpression	"PermHashTable -> lookup ( sin6 , ptable )"		3417898	0					
ANR	3417912	Callee	PermHashTable -> lookup		3417898	0					
ANR	3417913	PtrMemberAccess	PermHashTable -> lookup		3417898	0					
ANR	3417914	Identifier	PermHashTable		3417898	0					
ANR	3417915	Identifier	lookup		3417898	1					
ANR	3417916	ArgumentList	sin6		3417898	1					
ANR	3417917	Argument	sin6		3417898	0					
ANR	3417918	Identifier	sin6		3417898	0					
ANR	3417919	Argument	ptable		3417898	1					
ANR	3417920	Identifier	ptable		3417898	0					
ANR	3417921	UnaryOperationExpression	- 1		3417898	1					
ANR	3417922	UnaryOperator	-		3417898	0					
ANR	3417923	PrimaryExpression	1		3417898	1					
ANR	3417924	CompoundStatement		4:49:83:83	3417898	1					
ANR	3417925	IfStatement	"if ( has_user ( ptable , user , mask ) )"		3417898	0					
ANR	3417926	Condition	"has_user ( ptable , user , mask )"	293:6:8000:8027	3417898	0	True				
ANR	3417927	CallExpression	"has_user ( ptable , user , mask )"		3417898	0					
ANR	3417928	Callee	has_user		3417898	0					
ANR	3417929	Identifier	has_user		3417898	0					
ANR	3417930	ArgumentList	ptable		3417898	1					
ANR	3417931	Argument	ptable		3417898	0					
ANR	3417932	Identifier	ptable		3417898	0					
ANR	3417933	Argument	user		3417898	1					
ANR	3417934	Identifier	user		3417898	0					
ANR	3417935	Argument	mask		3417898	2					
ANR	3417936	Identifier	mask		3417898	0					
ANR	3417937	CompoundStatement		6:36:122:122	3417898	1					
ANR	3417938	IfStatement	if ( mask & ( allow_mask ( perm ) | deny_mask ( perm ) ) )		3417898	0					
ANR	3417939	Condition	mask & ( allow_mask ( perm ) | deny_mask ( perm ) )	298:7:8147:8187	3417898	0	True				
ANR	3417940	BitAndExpression	mask & ( allow_mask ( perm ) | deny_mask ( perm ) )		3417898	0		&			
ANR	3417941	Identifier	mask		3417898	0					
ANR	3417942	InclusiveOrExpression	allow_mask ( perm ) | deny_mask ( perm )		3417898	1		|			
ANR	3417943	CallExpression	allow_mask ( perm )		3417898	0					
ANR	3417944	Callee	allow_mask		3417898	0					
ANR	3417945	Identifier	allow_mask		3417898	0					
ANR	3417946	ArgumentList	perm		3417898	1					
ANR	3417947	Argument	perm		3417898	0					
ANR	3417948	Identifier	perm		3417898	0					
ANR	3417949	CallExpression	deny_mask ( perm )		3417898	1					
ANR	3417950	Callee	deny_mask		3417898	0					
ANR	3417951	Identifier	deny_mask		3417898	0					
ANR	3417952	ArgumentList	perm		3417898	1					
ANR	3417953	Argument	perm		3417898	0					
ANR	3417954	Identifier	perm		3417898	0					
ANR	3417955	CompoundStatement		11:51:283:283	3417898	1					
ANR	3417956	ReturnStatement	return true ;	299:4:8197:8208	3417898	0	True				
ANR	3417957	Identifier	true		3417898	0					
ANR	3417958	ReturnStatement	return false ;	303:1:8223:8235	3417898	2	True				
ANR	3417959	Identifier	false		3417898	0					
ANR	3417960	ReturnType	bool		3417898	1					
ANR	3417961	Identifier	IpVerify :: LookupCachedVerifyResult		3417898	2					
ANR	3417962	ParameterList	"DCpermission perm , const struct in6_addr & sin6 , const char * user , perm_mask_t & mask"		3417898	3					
ANR	3417963	Parameter	DCpermission perm	287:36:7820:7836	3417898	0	True				
ANR	3417964	ParameterType	DCpermission		3417898	0					
ANR	3417965	Identifier	perm		3417898	1					
ANR	3417966	Parameter	const struct in6_addr & sin6	287:55:7839:7865	3417898	1	True				
ANR	3417967	ParameterType	const struct in6_addr &		3417898	0					
ANR	3417968	Identifier	sin6		3417898	1					
ANR	3417969	Parameter	const char * user	287:84:7868:7884	3417898	2	True				
ANR	3417970	ParameterType	const char *		3417898	0					
ANR	3417971	Identifier	user		3417898	1					
ANR	3417972	Parameter	perm_mask_t & mask	287:103:7887:7904	3417898	3	True				
ANR	3417973	ParameterType	perm_mask_t &		3417898	0					
ANR	3417974	Identifier	mask		3417898	1					
ANR	3417975	CFGEntryNode	ENTRY		3417898		True				
ANR	3417976	CFGExitNode	EXIT		3417898		True				
ANR	3417977	Symbol	allow_mask		3417898						
ANR	3417978	Symbol	NULL		3417898						
ANR	3417979	Symbol	perm		3417898						
ANR	3417980	Symbol	false		3417898						
ANR	3417981	Symbol	sin6		3417898						
ANR	3417982	Symbol	PermHashTable -> lookup		3417898						
ANR	3417983	Symbol	ptable		3417898						
ANR	3417984	Symbol	has_user		3417898						
ANR	3417985	Symbol	PermHashTable		3417898						
ANR	3417986	Symbol	deny_mask		3417898						
ANR	3417987	Symbol	true		3417898						
ANR	3417988	Symbol	* PermHashTable		3417898						
ANR	3417989	Symbol	user		3417898						
ANR	3417990	Symbol	mask		3417898						
ANR	3417991	Function	IpVerify :: add_hash_entry	306:0:8240:9247							
ANR	3417992	FunctionDef	"IpVerify :: add_hash_entry (const struct in6_addr & sin6_addr , const char * user , perm_mask_t new_mask)"		3417991	0					
ANR	3417993	CompoundStatement		308:0:8345:9247	3417991	0					
ANR	3417994	IdentifierDeclStatement	UserPerm_t * perm = NULL ;	309:4:8351:8375	3417991	0	True				
ANR	3417995	IdentifierDecl	* perm = NULL		3417991	0					
ANR	3417996	IdentifierDeclType	UserPerm_t *		3417991	0					
ANR	3417997	Identifier	perm		3417991	1					
ANR	3417998	AssignmentExpression	* perm = NULL		3417991	2		=			
ANR	3417999	Identifier	NULL		3417991	0					
ANR	3418000	Identifier	NULL		3417991	1					
ANR	3418001	IdentifierDeclStatement	perm_mask_t old_mask = 0 ;	310:4:8381:8405	3417991	1	True				
ANR	3418002	IdentifierDecl	old_mask = 0		3417991	0					
ANR	3418003	IdentifierDeclType	perm_mask_t		3417991	0					
ANR	3418004	Identifier	old_mask		3417991	1					
ANR	3418005	AssignmentExpression	old_mask = 0		3417991	2		=			
ANR	3418006	Identifier	old_mask		3417991	0					
ANR	3418007	PrimaryExpression	0		3417991	1					
ANR	3418008	IdentifierDeclStatement	MyString user_key = user ;	311:4:8445:8469	3417991	2	True				
ANR	3418009	IdentifierDecl	user_key = user		3417991	0					
ANR	3418010	IdentifierDeclType	MyString		3417991	0					
ANR	3418011	Identifier	user_key		3417991	1					
ANR	3418012	AssignmentExpression	user_key = user		3417991	2		=			
ANR	3418013	Identifier	user		3417991	0					
ANR	3418014	Identifier	user		3417991	1					
ANR	3418015	IfStatement	"if ( PermHashTable -> lookup ( sin6_addr , perm ) != - 1 )"		3417991	3					
ANR	3418016	Condition	"PermHashTable -> lookup ( sin6_addr , perm ) != - 1"	314:6:8505:8548	3417991	0	True				
ANR	3418017	EqualityExpression	"PermHashTable -> lookup ( sin6_addr , perm ) != - 1"		3417991	0		!=			
ANR	3418018	CallExpression	"PermHashTable -> lookup ( sin6_addr , perm )"		3417991	0					
ANR	3418019	Callee	PermHashTable -> lookup		3417991	0					
ANR	3418020	PtrMemberAccess	PermHashTable -> lookup		3417991	0					
ANR	3418021	Identifier	PermHashTable		3417991	0					
ANR	3418022	Identifier	lookup		3417991	1					
ANR	3418023	ArgumentList	sin6_addr		3417991	1					
ANR	3418024	Argument	sin6_addr		3417991	0					
ANR	3418025	Identifier	sin6_addr		3417991	0					
ANR	3418026	Argument	perm		3417991	1					
ANR	3418027	Identifier	perm		3417991	0					
ANR	3418028	UnaryOperationExpression	- 1		3417991	1					
ANR	3418029	UnaryOperator	-		3417991	0					
ANR	3418030	PrimaryExpression	1		3417991	1					
ANR	3418031	CompoundStatement		7:53:206:206	3417991	1					
ANR	3418032	IfStatement	"if ( has_user ( perm , user , old_mask ) )"		3417991	0					
ANR	3418033	Condition	"has_user ( perm , user , old_mask )"	317:6:8593:8622	3417991	0	True				
ANR	3418034	CallExpression	"has_user ( perm , user , old_mask )"		3417991	0					
ANR	3418035	Callee	has_user		3417991	0					
ANR	3418036	Identifier	has_user		3417991	0					
ANR	3418037	ArgumentList	perm		3417991	1					
ANR	3418038	Argument	perm		3417991	0					
ANR	3418039	Identifier	perm		3417991	0					
ANR	3418040	Argument	user		3417991	1					
ANR	3418041	Identifier	user		3417991	0					
ANR	3418042	Argument	old_mask		3417991	2					
ANR	3418043	Identifier	old_mask		3417991	0					
ANR	3418044	CompoundStatement		10:38:279:279	3417991	1					
ANR	3418045	ExpressionStatement	perm -> remove ( user_key )	320:3:8714:8736	3417991	0	True				
ANR	3418046	CallExpression	perm -> remove ( user_key )		3417991	0					
ANR	3418047	Callee	perm -> remove		3417991	0					
ANR	3418048	PtrMemberAccess	perm -> remove		3417991	0					
ANR	3418049	Identifier	perm		3417991	0					
ANR	3418050	Identifier	remove		3417991	1					
ANR	3418051	ArgumentList	user_key		3417991	1					
ANR	3418052	Argument	user_key		3417991	0					
ANR	3418053	Identifier	user_key		3417991	0					
ANR	3418054	ElseStatement	else		3417991	0					
ANR	3418055	CompoundStatement		16:9:414:414	3417991	0					
ANR	3418056	ExpressionStatement	"perm = new UserPerm_t ( 42 , compute_host_hash )"	324:8:8770:8814	3417991	0	True				
ANR	3418057	AssignmentExpression	"perm = new UserPerm_t ( 42 , compute_host_hash )"		3417991	0		=			
ANR	3418058	Identifier	perm		3417991	0					
ANR	3418059	Expression	"42 , compute_host_hash"		3417991	1					
ANR	3418060	PrimaryExpression	42		3417991	0					
ANR	3418061	Identifier	compute_host_hash		3417991	1					
ANR	3418062	IfStatement	"if ( PermHashTable -> insert ( sin6_addr , perm ) != 0 )"		3417991	1					
ANR	3418063	Condition	"PermHashTable -> insert ( sin6_addr , perm ) != 0"	325:12:8828:8870	3417991	0	True				
ANR	3418064	EqualityExpression	"PermHashTable -> insert ( sin6_addr , perm ) != 0"		3417991	0		!=			
ANR	3418065	CallExpression	"PermHashTable -> insert ( sin6_addr , perm )"		3417991	0					
ANR	3418066	Callee	PermHashTable -> insert		3417991	0					
ANR	3418067	PtrMemberAccess	PermHashTable -> insert		3417991	0					
ANR	3418068	Identifier	PermHashTable		3417991	0					
ANR	3418069	Identifier	insert		3417991	1					
ANR	3418070	ArgumentList	sin6_addr		3417991	1					
ANR	3418071	Argument	sin6_addr		3417991	0					
ANR	3418072	Identifier	sin6_addr		3417991	0					
ANR	3418073	Argument	perm		3417991	1					
ANR	3418074	Identifier	perm		3417991	0					
ANR	3418075	PrimaryExpression	0		3417991	1					
ANR	3418076	CompoundStatement		18:57:527:527	3417991	1					
ANR	3418077	Statement	delete	326:12:8887:8892	3417991	0	True				
ANR	3418078	ExpressionStatement	perm	326:19:8894:8898	3417991	1	True				
ANR	3418079	Identifier	perm		3417991	0					
ANR	3418080	ReturnStatement	return FALSE ;	327:12:8912:8924	3417991	2	True				
ANR	3418081	Identifier	FALSE		3417991	0					
ANR	3418082	ExpressionStatement	"perm -> insert ( user_key , old_mask | new_mask )"	331:4:8947:8990	3417991	4	True				
ANR	3418083	CallExpression	"perm -> insert ( user_key , old_mask | new_mask )"		3417991	0					
ANR	3418084	Callee	perm -> insert		3417991	0					
ANR	3418085	PtrMemberAccess	perm -> insert		3417991	0					
ANR	3418086	Identifier	perm		3417991	0					
ANR	3418087	Identifier	insert		3417991	1					
ANR	3418088	ArgumentList	user_key		3417991	1					
ANR	3418089	Argument	user_key		3417991	0					
ANR	3418090	Identifier	user_key		3417991	0					
ANR	3418091	Argument	old_mask | new_mask		3417991	1					
ANR	3418092	InclusiveOrExpression	old_mask | new_mask		3417991	0		|			
ANR	3418093	Identifier	old_mask		3417991	0					
ANR	3418094	Identifier	new_mask		3417991	1					
ANR	3418095	IfStatement	if ( DebugFlags & ( D_FULLDEBUG | D_SECURITY ) )		3417991	5					
ANR	3418096	Condition	DebugFlags & ( D_FULLDEBUG | D_SECURITY )	333:5:8998:9034	3417991	0	True				
ANR	3418097	BitAndExpression	DebugFlags & ( D_FULLDEBUG | D_SECURITY )		3417991	0		&			
ANR	3418098	Identifier	DebugFlags		3417991	0					
ANR	3418099	InclusiveOrExpression	D_FULLDEBUG | D_SECURITY		3417991	1		|			
ANR	3418100	Identifier	D_FULLDEBUG		3417991	0					
ANR	3418101	Identifier	D_SECURITY		3417991	1					
ANR	3418102	CompoundStatement		27:2:696:713	3417991	1					
ANR	3418103	IdentifierDeclStatement	MyString auth_str ;	334:2:9042:9059	3417991	0	True				
ANR	3418104	IdentifierDecl	auth_str		3417991	0					
ANR	3418105	IdentifierDeclType	MyString		3417991	0					
ANR	3418106	Identifier	auth_str		3417991	1					
ANR	3418107	ExpressionStatement	"AuthEntryToString ( sin6_addr , user , new_mask , auth_str )"	335:2:9063:9115	3417991	1	True				
ANR	3418108	CallExpression	"AuthEntryToString ( sin6_addr , user , new_mask , auth_str )"		3417991	0					
ANR	3418109	Callee	AuthEntryToString		3417991	0					
ANR	3418110	Identifier	AuthEntryToString		3417991	0					
ANR	3418111	ArgumentList	sin6_addr		3417991	1					
ANR	3418112	Argument	sin6_addr		3417991	0					
ANR	3418113	Identifier	sin6_addr		3417991	0					
ANR	3418114	Argument	user		3417991	1					
ANR	3418115	Identifier	user		3417991	0					
ANR	3418116	Argument	new_mask		3417991	2					
ANR	3418117	Identifier	new_mask		3417991	0					
ANR	3418118	Argument	auth_str		3417991	3					
ANR	3418119	Identifier	auth_str		3417991	0					
ANR	3418120	ExpressionStatement	"dprintf ( D_FULLDEBUG | D_SECURITY , ""Adding to resolved authorization table: %s\\n"" , auth_str . Value ( ) )"	336:2:9119:9224	3417991	2	True				
ANR	3418121	CallExpression	"dprintf ( D_FULLDEBUG | D_SECURITY , ""Adding to resolved authorization table: %s\\n"" , auth_str . Value ( ) )"		3417991	0					
ANR	3418122	Callee	dprintf		3417991	0					
ANR	3418123	Identifier	dprintf		3417991	0					
ANR	3418124	ArgumentList	D_FULLDEBUG | D_SECURITY		3417991	1					
ANR	3418125	Argument	D_FULLDEBUG | D_SECURITY		3417991	0					
ANR	3418126	InclusiveOrExpression	D_FULLDEBUG | D_SECURITY		3417991	0		|			
ANR	3418127	Identifier	D_FULLDEBUG		3417991	0					
ANR	3418128	Identifier	D_SECURITY		3417991	1					
ANR	3418129	Argument	"""Adding to resolved authorization table: %s\\n"""		3417991	1					
ANR	3418130	PrimaryExpression	"""Adding to resolved authorization table: %s\\n"""		3417991	0					
ANR	3418131	Argument	auth_str . Value ( )		3417991	2					
ANR	3418132	CallExpression	auth_str . Value ( )		3417991	0					
ANR	3418133	Callee	auth_str . Value		3417991	0					
ANR	3418134	MemberAccess	auth_str . Value		3417991	0					
ANR	3418135	Identifier	auth_str		3417991	0					
ANR	3418136	Identifier	Value		3417991	1					
ANR	3418137	ArgumentList			3417991	1					
ANR	3418138	ReturnStatement	return TRUE ;	341:4:9234:9245	3417991	6	True				
ANR	3418139	Identifier	TRUE		3417991	0					
ANR	3418140	ReturnType	int		3417991	1					
ANR	3418141	Identifier	IpVerify :: add_hash_entry		3417991	2					
ANR	3418142	ParameterList	"const struct in6_addr & sin6_addr , const char * user , perm_mask_t new_mask"		3417991	3					
ANR	3418143	Parameter	const struct in6_addr & sin6_addr	307:25:8269:8301	3417991	0	True				
ANR	3418144	ParameterType	const struct in6_addr &		3417991	0					
ANR	3418145	Identifier	sin6_addr		3417991	1					
ANR	3418146	Parameter	const char * user	307:60:8304:8320	3417991	1	True				
ANR	3418147	ParameterType	const char *		3417991	0					
ANR	3418148	Identifier	user		3417991	1					
ANR	3418149	Parameter	perm_mask_t new_mask	307:79:8323:8342	3417991	2	True				
ANR	3418150	ParameterType	perm_mask_t		3417991	0					
ANR	3418151	Identifier	new_mask		3417991	1					
ANR	3418152	CFGEntryNode	ENTRY		3417991		True				
ANR	3418153	CFGExitNode	EXIT		3417991		True				
ANR	3418154	Symbol	auth_str . Value		3417991						
ANR	3418155	Symbol	NULL		3417991						
ANR	3418156	Symbol	perm		3417991						
ANR	3418157	Symbol	D_SECURITY		3417991						
ANR	3418158	Symbol	sin6_addr		3417991						
ANR	3418159	Symbol	PermHashTable -> insert		3417991						
ANR	3418160	Symbol	compute_host_hash		3417991						
ANR	3418161	Symbol	user_key		3417991						
ANR	3418162	Symbol	TRUE		3417991						
ANR	3418163	Symbol	DebugFlags		3417991						
ANR	3418164	Symbol	D_FULLDEBUG		3417991						
ANR	3418165	Symbol	PermHashTable -> lookup		3417991						
ANR	3418166	Symbol	old_mask		3417991						
ANR	3418167	Symbol	has_user		3417991						
ANR	3418168	Symbol	PermHashTable		3417991						
ANR	3418169	Symbol	auth_str		3417991						
ANR	3418170	Symbol	* PermHashTable		3417991						
ANR	3418171	Symbol	FALSE		3417991						
ANR	3418172	Symbol	user		3417991						
ANR	3418173	Symbol	new_mask		3417991						
ANR	3418174	Function	IpVerify :: allow_mask	344:0:9250:9346							
ANR	3418175	FunctionDef	IpVerify :: allow_mask (DCpermission perm)		3418174	0					
ANR	3418176	CompoundStatement		345:40:9303:9346	3418174	0					
ANR	3418177	ReturnStatement	return ( ( perm_mask_t ) 1 << ( 1 + 2 * perm ) ) ;	346:1:9307:9344	3418174	0	True				
ANR	3418178	ShiftExpression	( perm_mask_t ) 1 << ( 1 + 2 * perm )		3418174	0		<<			
ANR	3418179	CastExpression	( perm_mask_t ) 1		3418174	0					
ANR	3418180	CastTarget	perm_mask_t		3418174	0					
ANR	3418181	PrimaryExpression	1		3418174	1					
ANR	3418182	AdditiveExpression	1 + 2 * perm		3418174	1		+			
ANR	3418183	PrimaryExpression	1		3418174	0					
ANR	3418184	MultiplicativeExpression	2 * perm		3418174	1		*			
ANR	3418185	PrimaryExpression	2		3418174	0					
ANR	3418186	Identifier	perm		3418174	1					
ANR	3418187	ReturnType	perm_mask_t		3418174	1					
ANR	3418188	Identifier	IpVerify :: allow_mask		3418174	2					
ANR	3418189	ParameterList	DCpermission perm		3418174	3					
ANR	3418190	Parameter	DCpermission perm	345:21:9284:9300	3418174	0	True				
ANR	3418191	ParameterType	DCpermission		3418174	0					
ANR	3418192	Identifier	perm		3418174	1					
ANR	3418193	CFGEntryNode	ENTRY		3418174		True				
ANR	3418194	CFGExitNode	EXIT		3418174		True				
ANR	3418195	Symbol	perm		3418174						
ANR	3418196	Function	IpVerify :: deny_mask	349:0:9349:9444							
ANR	3418197	FunctionDef	IpVerify :: deny_mask (DCpermission perm)		3418196	0					
ANR	3418198	CompoundStatement		350:39:9401:9444	3418196	0					
ANR	3418199	ReturnStatement	return ( ( perm_mask_t ) 1 << ( 2 + 2 * perm ) ) ;	351:1:9405:9442	3418196	0	True				
ANR	3418200	ShiftExpression	( perm_mask_t ) 1 << ( 2 + 2 * perm )		3418196	0		<<			
ANR	3418201	CastExpression	( perm_mask_t ) 1		3418196	0					
ANR	3418202	CastTarget	perm_mask_t		3418196	0					
ANR	3418203	PrimaryExpression	1		3418196	1					
ANR	3418204	AdditiveExpression	2 + 2 * perm		3418196	1		+			
ANR	3418205	PrimaryExpression	2		3418196	0					
ANR	3418206	MultiplicativeExpression	2 * perm		3418196	1		*			
ANR	3418207	PrimaryExpression	2		3418196	0					
ANR	3418208	Identifier	perm		3418196	1					
ANR	3418209	ReturnType	perm_mask_t		3418196	1					
ANR	3418210	Identifier	IpVerify :: deny_mask		3418196	2					
ANR	3418211	ParameterList	DCpermission perm		3418196	3					
ANR	3418212	Parameter	DCpermission perm	350:20:9382:9398	3418196	0	True				
ANR	3418213	ParameterType	DCpermission		3418196	0					
ANR	3418214	Identifier	perm		3418196	1					
ANR	3418215	CFGEntryNode	ENTRY		3418196		True				
ANR	3418216	CFGExitNode	EXIT		3418196		True				
ANR	3418217	Symbol	perm		3418196						
ANR	3418218	Function	IpVerify :: PermMaskToString	354:0:9448:9796							
ANR	3418219	FunctionDef	"IpVerify :: PermMaskToString (perm_mask_t mask , MyString & mask_str)"		3418218	0					
ANR	3418220	CompoundStatement		356:0:9518:9796	3418218	0					
ANR	3418221	IdentifierDeclStatement	DCpermission perm ;	357:1:9521:9538	3418218	0	True				
ANR	3418222	IdentifierDecl	perm		3418218	0					
ANR	3418223	IdentifierDeclType	DCpermission		3418218	0					
ANR	3418224	Identifier	perm		3418218	1					
ANR	3418225	ForStatement	for ( perm = FIRST_PERM ; perm < LAST_PERM ; perm = NEXT_PERM ( perm ) )		3418218	1					
ANR	3418226	ForInit	perm = FIRST_PERM ;	358:5:9545:9560	3418218	0	True				
ANR	3418227	AssignmentExpression	perm = FIRST_PERM		3418218	0		=			
ANR	3418228	Identifier	perm		3418218	0					
ANR	3418229	Identifier	FIRST_PERM		3418218	1					
ANR	3418230	Condition	perm < LAST_PERM	358:22:9562:9575	3418218	1	True				
ANR	3418231	RelationalExpression	perm < LAST_PERM		3418218	0		<			
ANR	3418232	Identifier	perm		3418218	0					
ANR	3418233	Identifier	LAST_PERM		3418218	1					
ANR	3418234	AssignmentExpression	perm = NEXT_PERM ( perm )	358:38:9578:9597	3418218	2	True	=			
ANR	3418235	Identifier	perm		3418218	0					
ANR	3418236	CallExpression	NEXT_PERM ( perm )		3418218	1					
ANR	3418237	Callee	NEXT_PERM		3418218	0					
ANR	3418238	Identifier	NEXT_PERM		3418218	0					
ANR	3418239	ArgumentList	perm		3418218	1					
ANR	3418240	Argument	perm		3418218	0					
ANR	3418241	Identifier	perm		3418218	0					
ANR	3418242	CompoundStatement		3:60:81:81	3418218	3					
ANR	3418243	IfStatement	if ( mask & allow_mask ( perm ) )		3418218	0					
ANR	3418244	Condition	mask & allow_mask ( perm )	359:6:9608:9630	3418218	0	True				
ANR	3418245	BitAndExpression	mask & allow_mask ( perm )		3418218	0		&			
ANR	3418246	Identifier	mask		3418218	0					
ANR	3418247	CallExpression	allow_mask ( perm )		3418218	1					
ANR	3418248	Callee	allow_mask		3418218	0					
ANR	3418249	Identifier	allow_mask		3418218	0					
ANR	3418250	ArgumentList	perm		3418218	1					
ANR	3418251	Argument	perm		3418218	0					
ANR	3418252	Identifier	perm		3418218	0					
ANR	3418253	CompoundStatement		4:32:115:115	3418218	1					
ANR	3418254	ExpressionStatement	mask_str . append_to_list ( PermString ( perm ) )	360:3:9639:9680	3418218	0	True				
ANR	3418255	CallExpression	mask_str . append_to_list ( PermString ( perm ) )		3418218	0					
ANR	3418256	Callee	mask_str . append_to_list		3418218	0					
ANR	3418257	MemberAccess	mask_str . append_to_list		3418218	0					
ANR	3418258	Identifier	mask_str		3418218	0					
ANR	3418259	Identifier	append_to_list		3418218	1					
ANR	3418260	ArgumentList	PermString ( perm )		3418218	1					
ANR	3418261	Argument	PermString ( perm )		3418218	0					
ANR	3418262	CallExpression	PermString ( perm )		3418218	0					
ANR	3418263	Callee	PermString		3418218	0					
ANR	3418264	Identifier	PermString		3418218	0					
ANR	3418265	ArgumentList	perm		3418218	1					
ANR	3418266	Argument	perm		3418218	0					
ANR	3418267	Identifier	perm		3418218	0					
ANR	3418268	IfStatement	if ( mask & deny_mask ( perm ) )		3418218	1					
ANR	3418269	Condition	mask & deny_mask ( perm )	362:6:9692:9713	3418218	0	True				
ANR	3418270	BitAndExpression	mask & deny_mask ( perm )		3418218	0		&			
ANR	3418271	Identifier	mask		3418218	0					
ANR	3418272	CallExpression	deny_mask ( perm )		3418218	1					
ANR	3418273	Callee	deny_mask		3418218	0					
ANR	3418274	Identifier	deny_mask		3418218	0					
ANR	3418275	ArgumentList	perm		3418218	1					
ANR	3418276	Argument	perm		3418218	0					
ANR	3418277	Identifier	perm		3418218	0					
ANR	3418278	CompoundStatement		7:31:198:198	3418218	1					
ANR	3418279	ExpressionStatement	"mask_str . append_to_list ( ""DENY_"" )"	363:3:9722:9754	3418218	0	True				
ANR	3418280	CallExpression	"mask_str . append_to_list ( ""DENY_"" )"		3418218	0					
ANR	3418281	Callee	mask_str . append_to_list		3418218	0					
ANR	3418282	MemberAccess	mask_str . append_to_list		3418218	0					
ANR	3418283	Identifier	mask_str		3418218	0					
ANR	3418284	Identifier	append_to_list		3418218	1					
ANR	3418285	ArgumentList	"""DENY_"""		3418218	1					
ANR	3418286	Argument	"""DENY_"""		3418218	0					
ANR	3418287	PrimaryExpression	"""DENY_"""		3418218	0					
ANR	3418288	ExpressionStatement	mask_str += PermString ( perm )	364:3:9759:9787	3418218	1	True				
ANR	3418289	AssignmentExpression	mask_str += PermString ( perm )		3418218	0		+=			
ANR	3418290	Identifier	mask_str		3418218	0					
ANR	3418291	CallExpression	PermString ( perm )		3418218	1					
ANR	3418292	Callee	PermString		3418218	0					
ANR	3418293	Identifier	PermString		3418218	0					
ANR	3418294	ArgumentList	perm		3418218	1					
ANR	3418295	Argument	perm		3418218	0					
ANR	3418296	Identifier	perm		3418218	0					
ANR	3418297	ReturnType	void		3418218	1					
ANR	3418298	Identifier	IpVerify :: PermMaskToString		3418218	2					
ANR	3418299	ParameterList	"perm_mask_t mask , MyString & mask_str"		3418218	3					
ANR	3418300	Parameter	perm_mask_t mask	355:27:9480:9495	3418218	0	True				
ANR	3418301	ParameterType	perm_mask_t		3418218	0					
ANR	3418302	Identifier	mask		3418218	1					
ANR	3418303	Parameter	MyString & mask_str	355:45:9498:9515	3418218	1	True				
ANR	3418304	ParameterType	MyString &		3418218	0					
ANR	3418305	Identifier	mask_str		3418218	1					
ANR	3418306	CFGEntryNode	ENTRY		3418218		True				
ANR	3418307	CFGExitNode	EXIT		3418218		True				
ANR	3418308	Symbol	LAST_PERM		3418218						
ANR	3418309	Symbol	allow_mask		3418218						
ANR	3418310	Symbol	mask_str		3418218						
ANR	3418311	Symbol	perm		3418218						
ANR	3418312	Symbol	deny_mask		3418218						
ANR	3418313	Symbol	FIRST_PERM		3418218						
ANR	3418314	Symbol	NEXT_PERM		3418218						
ANR	3418315	Symbol	PermString		3418218						
ANR	3418316	Symbol	mask		3418218						
ANR	3418317	Function	IpVerify :: UserHashToString	369:0:9799:10184							
ANR	3418318	FunctionDef	"IpVerify :: UserHashToString (UserHash_t * user_hash , MyString & result)"		3418317	0					
ANR	3418319	CompoundStatement		371:0:9872:10184	3418317	0					
ANR	3418320	ExpressionStatement	ASSERT ( user_hash )	372:1:9875:9894	3418317	0	True				
ANR	3418321	CallExpression	ASSERT ( user_hash )		3418317	0					
ANR	3418322	Callee	ASSERT		3418317	0					
ANR	3418323	Identifier	ASSERT		3418317	0					
ANR	3418324	ArgumentList	user_hash		3418317	1					
ANR	3418325	Argument	user_hash		3418317	0					
ANR	3418326	Identifier	user_hash		3418317	0					
ANR	3418327	ExpressionStatement	user_hash -> startIterations ( )	373:1:9897:9925	3418317	1	True				
ANR	3418328	CallExpression	user_hash -> startIterations ( )		3418317	0					
ANR	3418329	Callee	user_hash -> startIterations		3418317	0					
ANR	3418330	PtrMemberAccess	user_hash -> startIterations		3418317	0					
ANR	3418331	Identifier	user_hash		3418317	0					
ANR	3418332	Identifier	startIterations		3418317	1					
ANR	3418333	ArgumentList			3418317	1					
ANR	3418334	IdentifierDeclStatement	MyString host ;	374:1:9928:9941	3418317	2	True				
ANR	3418335	IdentifierDecl	host		3418317	0					
ANR	3418336	IdentifierDeclType	MyString		3418317	0					
ANR	3418337	Identifier	host		3418317	1					
ANR	3418338	IdentifierDeclStatement	StringList * users ;	375:1:9944:9961	3418317	3	True				
ANR	3418339	IdentifierDecl	* users		3418317	0					
ANR	3418340	IdentifierDeclType	StringList *		3418317	0					
ANR	3418341	Identifier	users		3418317	1					
ANR	3418342	IdentifierDeclStatement	char const * user ;	376:1:9964:9980	3418317	4	True				
ANR	3418343	IdentifierDecl	* user		3418317	0					
ANR	3418344	IdentifierDeclType	char const *		3418317	0					
ANR	3418345	Identifier	user		3418317	1					
ANR	3418346	WhileStatement	"while ( user_hash -> iterate ( host , users ) )"		3418317	5					
ANR	3418347	Condition	"user_hash -> iterate ( host , users )"	377:8:9990:10019	3418317	0	True				
ANR	3418348	CallExpression	"user_hash -> iterate ( host , users )"		3418317	0					
ANR	3418349	Callee	user_hash -> iterate		3418317	0					
ANR	3418350	PtrMemberAccess	user_hash -> iterate		3418317	0					
ANR	3418351	Identifier	user_hash		3418317	0					
ANR	3418352	Identifier	iterate		3418317	1					
ANR	3418353	ArgumentList	host		3418317	1					
ANR	3418354	Argument	host		3418317	0					
ANR	3418355	Identifier	host		3418317	0					
ANR	3418356	Argument	users		3418317	1					
ANR	3418357	Identifier	users		3418317	0					
ANR	3418358	CompoundStatement		7:41:150:150	3418317	1					
ANR	3418359	IfStatement	if ( users )		3418317	0					
ANR	3418360	Condition	users	378:6:10031:10035	3418317	0	True				
ANR	3418361	Identifier	users		3418317	0					
ANR	3418362	CompoundStatement		8:14:166:166	3418317	1					
ANR	3418363	ExpressionStatement	users -> rewind ( )	379:3:10044:10059	3418317	0	True				
ANR	3418364	CallExpression	users -> rewind ( )		3418317	0					
ANR	3418365	Callee	users -> rewind		3418317	0					
ANR	3418366	PtrMemberAccess	users -> rewind		3418317	0					
ANR	3418367	Identifier	users		3418317	0					
ANR	3418368	Identifier	rewind		3418317	1					
ANR	3418369	ArgumentList			3418317	1					
ANR	3418370	WhileStatement	while ( ( user = users -> next ( ) ) )		3418317	1					
ANR	3418371	Condition	user = users -> next ( )	380:10:10071:10090	3418317	0	True				
ANR	3418372	AssignmentExpression	user = users -> next ( )		3418317	0		=			
ANR	3418373	Identifier	user		3418317	0					
ANR	3418374	CallExpression	users -> next ( )		3418317	1					
ANR	3418375	Callee	users -> next		3418317	0					
ANR	3418376	PtrMemberAccess	users -> next		3418317	0					
ANR	3418377	Identifier	users		3418317	0					
ANR	3418378	Identifier	next		3418317	1					
ANR	3418379	ArgumentList			3418317	1					
ANR	3418380	CompoundStatement		10:33:221:221	3418317	1					
ANR	3418381	ExpressionStatement	"result . sprintf_cat ( "" %s/%s"" , user , host . Value ( ) )"	381:4:10100:10170	3418317	0	True				
ANR	3418382	CallExpression	"result . sprintf_cat ( "" %s/%s"" , user , host . Value ( ) )"		3418317	0					
ANR	3418383	Callee	result . sprintf_cat		3418317	0					
ANR	3418384	MemberAccess	result . sprintf_cat		3418317	0					
ANR	3418385	Identifier	result		3418317	0					
ANR	3418386	Identifier	sprintf_cat		3418317	1					
ANR	3418387	ArgumentList	""" %s/%s"""		3418317	1					
ANR	3418388	Argument	""" %s/%s"""		3418317	0					
ANR	3418389	PrimaryExpression	""" %s/%s"""		3418317	0					
ANR	3418390	Argument	user		3418317	1					
ANR	3418391	Identifier	user		3418317	0					
ANR	3418392	Argument	host . Value ( )		3418317	2					
ANR	3418393	CallExpression	host . Value ( )		3418317	0					
ANR	3418394	Callee	host . Value		3418317	0					
ANR	3418395	MemberAccess	host . Value		3418317	0					
ANR	3418396	Identifier	host		3418317	0					
ANR	3418397	Identifier	Value		3418317	1					
ANR	3418398	ArgumentList			3418317	1					
ANR	3418399	ReturnType	void		3418317	1					
ANR	3418400	Identifier	IpVerify :: UserHashToString		3418317	2					
ANR	3418401	ParameterList	"UserHash_t * user_hash , MyString & result"		3418317	3					
ANR	3418402	Parameter	UserHash_t * user_hash	370:27:9831:9851	3418317	0	True				
ANR	3418403	ParameterType	UserHash_t *		3418317	0					
ANR	3418404	Identifier	user_hash		3418317	1					
ANR	3418405	Parameter	MyString & result	370:50:9854:9869	3418317	1	True				
ANR	3418406	ParameterType	MyString &		3418317	0					
ANR	3418407	Identifier	result		3418317	1					
ANR	3418408	CFGEntryNode	ENTRY		3418317		True				
ANR	3418409	CFGExitNode	EXIT		3418317		True				
ANR	3418410	Symbol	result		3418317						
ANR	3418411	Symbol	user_hash		3418317						
ANR	3418412	Symbol	* users		3418317						
ANR	3418413	Symbol	* user_hash		3418317						
ANR	3418414	Symbol	users -> next		3418317						
ANR	3418415	Symbol	host		3418317						
ANR	3418416	Symbol	host . Value		3418317						
ANR	3418417	Symbol	user_hash -> iterate		3418317						
ANR	3418418	Symbol	user		3418317						
ANR	3418419	Symbol	users		3418317						
ANR	3418420	Function	IpVerify :: AuthEntryToString	389:0:10187:11103							
ANR	3418421	FunctionDef	"IpVerify :: AuthEntryToString (const in6_addr & host , const char * user , perm_mask_t mask , MyString & result)"		3418420	0					
ANR	3418422	CompoundStatement		391:0:10298:11103	3418420	0					
ANR	3418423	IdentifierDeclStatement	char buf [ INET6_ADDRSTRLEN ] ;	394:1:10404:10430	3418420	0	True				
ANR	3418424	IdentifierDecl	buf [ INET6_ADDRSTRLEN ]		3418420	0					
ANR	3418425	IdentifierDeclType	char [ INET6_ADDRSTRLEN ]		3418420	0					
ANR	3418426	Identifier	buf		3418420	1					
ANR	3418427	Identifier	INET6_ADDRSTRLEN		3418420	2					
ANR	3418428	ExpressionStatement	"memset ( ( void * ) buf , 0 , sizeof ( buf ) )"	395:1:10433:10467	3418420	1	True				
ANR	3418429	CallExpression	"memset ( ( void * ) buf , 0 , sizeof ( buf ) )"		3418420	0					
ANR	3418430	Callee	memset		3418420	0					
ANR	3418431	Identifier	memset		3418420	0					
ANR	3418432	ArgumentList	( void * ) buf		3418420	1					
ANR	3418433	Argument	( void * ) buf		3418420	0					
ANR	3418434	CastExpression	( void * ) buf		3418420	0					
ANR	3418435	CastTarget	void *		3418420	0					
ANR	3418436	Identifier	buf		3418420	1					
ANR	3418437	Argument	0		3418420	1					
ANR	3418438	PrimaryExpression	0		3418420	0					
ANR	3418439	Argument	sizeof ( buf )		3418420	2					
ANR	3418440	SizeofExpression	sizeof ( buf )		3418420	0					
ANR	3418441	Sizeof	sizeof		3418420	0					
ANR	3418442	SizeofOperand	buf		3418420	1					
ANR	3418443	IdentifierDeclStatement	uint32_t * addr = ( uint32_t * ) & host ;	396:1:10470:10503	3418420	2	True				
ANR	3418444	IdentifierDecl	* addr = ( uint32_t * ) & host		3418420	0					
ANR	3418445	IdentifierDeclType	uint32_t *		3418420	0					
ANR	3418446	Identifier	addr		3418420	1					
ANR	3418447	AssignmentExpression	* addr = ( uint32_t * ) & host		3418420	2		=			
ANR	3418448	Identifier	addr		3418420	0					
ANR	3418449	CastExpression	( uint32_t * ) & host		3418420	1					
ANR	3418450	CastTarget	uint32_t *		3418420	0					
ANR	3418451	UnaryOperationExpression	& host		3418420	1					
ANR	3418452	UnaryOperator	&		3418420	0					
ANR	3418453	Identifier	host		3418420	1					
ANR	3418454	IdentifierDeclStatement	const char * ret = NULL ;	399:1:10548:10570	3418420	3	True				
ANR	3418455	IdentifierDecl	* ret = NULL		3418420	0					
ANR	3418456	IdentifierDeclType	const char *		3418420	0					
ANR	3418457	Identifier	ret		3418420	1					
ANR	3418458	AssignmentExpression	* ret = NULL		3418420	2		=			
ANR	3418459	Identifier	NULL		3418420	0					
ANR	3418460	Identifier	NULL		3418420	1					
ANR	3418461	IfStatement	if ( addr [ 0 ] == 0 && addr [ 1 ] == 0 && addr [ 2 ] == htonl ( 0xffff ) )		3418420	4					
ANR	3418462	Condition	addr [ 0 ] == 0 && addr [ 1 ] == 0 && addr [ 2 ] == htonl ( 0xffff )	400:5:10577:10632	3418420	0	True				
ANR	3418463	AndExpression	addr [ 0 ] == 0 && addr [ 1 ] == 0 && addr [ 2 ] == htonl ( 0xffff )		3418420	0		&&			
ANR	3418464	EqualityExpression	addr [ 0 ] == 0		3418420	0		==			
ANR	3418465	ArrayIndexing	addr [ 0 ]		3418420	0					
ANR	3418466	Identifier	addr		3418420	0					
ANR	3418467	PrimaryExpression	0		3418420	1					
ANR	3418468	PrimaryExpression	0		3418420	1					
ANR	3418469	AndExpression	addr [ 1 ] == 0 && addr [ 2 ] == htonl ( 0xffff )		3418420	1		&&			
ANR	3418470	EqualityExpression	addr [ 1 ] == 0		3418420	0		==			
ANR	3418471	ArrayIndexing	addr [ 1 ]		3418420	0					
ANR	3418472	Identifier	addr		3418420	0					
ANR	3418473	PrimaryExpression	1		3418420	1					
ANR	3418474	PrimaryExpression	0		3418420	1					
ANR	3418475	EqualityExpression	addr [ 2 ] == htonl ( 0xffff )		3418420	1		==			
ANR	3418476	ArrayIndexing	addr [ 2 ]		3418420	0					
ANR	3418477	Identifier	addr		3418420	0					
ANR	3418478	PrimaryExpression	2		3418420	1					
ANR	3418479	CallExpression	htonl ( 0xffff )		3418420	1					
ANR	3418480	Callee	htonl		3418420	0					
ANR	3418481	Identifier	htonl		3418420	0					
ANR	3418482	ArgumentList	0xffff		3418420	1					
ANR	3418483	Argument	0xffff		3418420	0					
ANR	3418484	PrimaryExpression	0xffff		3418420	0					
ANR	3418485	CompoundStatement		10:63:336:336	3418420	1					
ANR	3418486	ExpressionStatement	"ret = inet_ntop ( AF_INET , ( const void * ) & addr [ 3 ] , buf , sizeof ( buf ) )"	401:2:10639:10704	3418420	0	True				
ANR	3418487	AssignmentExpression	"ret = inet_ntop ( AF_INET , ( const void * ) & addr [ 3 ] , buf , sizeof ( buf ) )"		3418420	0		=			
ANR	3418488	Identifier	ret		3418420	0					
ANR	3418489	CallExpression	"inet_ntop ( AF_INET , ( const void * ) & addr [ 3 ] , buf , sizeof ( buf ) )"		3418420	1					
ANR	3418490	Callee	inet_ntop		3418420	0					
ANR	3418491	Identifier	inet_ntop		3418420	0					
ANR	3418492	ArgumentList	AF_INET		3418420	1					
ANR	3418493	Argument	AF_INET		3418420	0					
ANR	3418494	Identifier	AF_INET		3418420	0					
ANR	3418495	Argument	( const void * ) & addr [ 3 ]		3418420	1					
ANR	3418496	CastExpression	( const void * ) & addr [ 3 ]		3418420	0					
ANR	3418497	CastTarget	const void *		3418420	0					
ANR	3418498	UnaryOperationExpression	& addr [ 3 ]		3418420	1					
ANR	3418499	UnaryOperator	&		3418420	0					
ANR	3418500	ArrayIndexing	addr [ 3 ]		3418420	1					
ANR	3418501	Identifier	addr		3418420	0					
ANR	3418502	PrimaryExpression	3		3418420	1					
ANR	3418503	Argument	buf		3418420	2					
ANR	3418504	Identifier	buf		3418420	0					
ANR	3418505	Argument	sizeof ( buf )		3418420	3					
ANR	3418506	SizeofExpression	sizeof ( buf )		3418420	0					
ANR	3418507	Sizeof	sizeof		3418420	0					
ANR	3418508	SizeofOperand	buf		3418420	1					
ANR	3418509	ElseStatement	else		3418420	0					
ANR	3418510	CompoundStatement		12:8:415:415	3418420	0					
ANR	3418511	ExpressionStatement	"ret = inet_ntop ( AF_INET6 , & host , buf , sizeof ( buf ) )"	403:2:10718:10768	3418420	0	True				
ANR	3418512	AssignmentExpression	"ret = inet_ntop ( AF_INET6 , & host , buf , sizeof ( buf ) )"		3418420	0		=			
ANR	3418513	Identifier	ret		3418420	0					
ANR	3418514	CallExpression	"inet_ntop ( AF_INET6 , & host , buf , sizeof ( buf ) )"		3418420	1					
ANR	3418515	Callee	inet_ntop		3418420	0					
ANR	3418516	Identifier	inet_ntop		3418420	0					
ANR	3418517	ArgumentList	AF_INET6		3418420	1					
ANR	3418518	Argument	AF_INET6		3418420	0					
ANR	3418519	Identifier	AF_INET6		3418420	0					
ANR	3418520	Argument	& host		3418420	1					
ANR	3418521	UnaryOperationExpression	& host		3418420	0					
ANR	3418522	UnaryOperator	&		3418420	0					
ANR	3418523	Identifier	host		3418420	1					
ANR	3418524	Argument	buf		3418420	2					
ANR	3418525	Identifier	buf		3418420	0					
ANR	3418526	Argument	sizeof ( buf )		3418420	3					
ANR	3418527	SizeofExpression	sizeof ( buf )		3418420	0					
ANR	3418528	Sizeof	sizeof		3418420	0					
ANR	3418529	SizeofOperand	buf		3418420	1					
ANR	3418530	IfStatement	if ( ! ret )		3418420	5					
ANR	3418531	Condition	! ret	407:5:10793:10796	3418420	0	True				
ANR	3418532	UnaryOperationExpression	! ret		3418420	0					
ANR	3418533	UnaryOperator	!		3418420	0					
ANR	3418534	Identifier	ret		3418420	1					
ANR	3418535	CompoundStatement		17:11:500:500	3418420	1					
ANR	3418536	ExpressionStatement	"dprintf ( D_HOSTNAME , ""IP address conversion failed, errno = %d\\n"" , errno )"	408:2:10803:10879	3418420	0	True				
ANR	3418537	CallExpression	"dprintf ( D_HOSTNAME , ""IP address conversion failed, errno = %d\\n"" , errno )"		3418420	0					
ANR	3418538	Callee	dprintf		3418420	0					
ANR	3418539	Identifier	dprintf		3418420	0					
ANR	3418540	ArgumentList	D_HOSTNAME		3418420	1					
ANR	3418541	Argument	D_HOSTNAME		3418420	0					
ANR	3418542	Identifier	D_HOSTNAME		3418420	0					
ANR	3418543	Argument	"""IP address conversion failed, errno = %d\\n"""		3418420	1					
ANR	3418544	PrimaryExpression	"""IP address conversion failed, errno = %d\\n"""		3418420	0					
ANR	3418545	Argument	errno		3418420	2					
ANR	3418546	Identifier	errno		3418420	0					
ANR	3418547	IdentifierDeclStatement	MyString mask_str ;	413:1:10893:10910	3418420	6	True				
ANR	3418548	IdentifierDecl	mask_str		3418420	0					
ANR	3418549	IdentifierDeclType	MyString		3418420	0					
ANR	3418550	Identifier	mask_str		3418420	1					
ANR	3418551	ExpressionStatement	"PermMaskToString ( mask , mask_str )"	414:1:10913:10947	3418420	7	True				
ANR	3418552	CallExpression	"PermMaskToString ( mask , mask_str )"		3418420	0					
ANR	3418553	Callee	PermMaskToString		3418420	0					
ANR	3418554	Identifier	PermMaskToString		3418420	0					
ANR	3418555	ArgumentList	mask		3418420	1					
ANR	3418556	Argument	mask		3418420	0					
ANR	3418557	Identifier	mask		3418420	0					
ANR	3418558	Argument	mask_str		3418420	1					
ANR	3418559	Identifier	mask_str		3418420	0					
ANR	3418560	ExpressionStatement	"result . sprintf ( ""%s/%s: %s"" , user ? user : ""(null)"" , buf , mask_str . Value ( ) )"	415:1:10950:11101	3418420	8	True				
ANR	3418561	CallExpression	"result . sprintf ( ""%s/%s: %s"" , user ? user : ""(null)"" , buf , mask_str . Value ( ) )"		3418420	0					
ANR	3418562	Callee	result . sprintf		3418420	0					
ANR	3418563	MemberAccess	result . sprintf		3418420	0					
ANR	3418564	Identifier	result		3418420	0					
ANR	3418565	Identifier	sprintf		3418420	1					
ANR	3418566	ArgumentList	"""%s/%s: %s"""		3418420	1					
ANR	3418567	Argument	"""%s/%s: %s"""		3418420	0					
ANR	3418568	PrimaryExpression	"""%s/%s: %s"""		3418420	0					
ANR	3418569	Argument	"user ? user : ""(null)"""		3418420	1					
ANR	3418570	ConditionalExpression	"user ? user : ""(null)"""		3418420	0					
ANR	3418571	Condition	user		3418420	0					
ANR	3418572	Identifier	user		3418420	0					
ANR	3418573	Identifier	user		3418420	1					
ANR	3418574	PrimaryExpression	"""(null)"""		3418420	2					
ANR	3418575	Argument	buf		3418420	2					
ANR	3418576	Identifier	buf		3418420	0					
ANR	3418577	Argument	mask_str . Value ( )		3418420	3					
ANR	3418578	CallExpression	mask_str . Value ( )		3418420	0					
ANR	3418579	Callee	mask_str . Value		3418420	0					
ANR	3418580	MemberAccess	mask_str . Value		3418420	0					
ANR	3418581	Identifier	mask_str		3418420	0					
ANR	3418582	Identifier	Value		3418420	1					
ANR	3418583	ArgumentList			3418420	1					
ANR	3418584	ReturnType	void		3418420	1					
ANR	3418585	Identifier	IpVerify :: AuthEntryToString		3418420	2					
ANR	3418586	ParameterList	"const in6_addr & host , const char * user , perm_mask_t mask , MyString & result"		3418420	3					
ANR	3418587	Parameter	const in6_addr & host	390:28:10220:10240	3418420	0	True				
ANR	3418588	ParameterType	const in6_addr &		3418420	0					
ANR	3418589	Identifier	host		3418420	1					
ANR	3418590	Parameter	const char * user	390:51:10243:10259	3418420	1	True				
ANR	3418591	ParameterType	const char *		3418420	0					
ANR	3418592	Identifier	user		3418420	1					
ANR	3418593	Parameter	perm_mask_t mask	390:70:10262:10277	3418420	2	True				
ANR	3418594	ParameterType	perm_mask_t		3418420	0					
ANR	3418595	Identifier	mask		3418420	1					
ANR	3418596	Parameter	MyString & result	390:88:10280:10295	3418420	3	True				
ANR	3418597	ParameterType	MyString &		3418420	0					
ANR	3418598	Identifier	result		3418420	1					
ANR	3418599	CFGEntryNode	ENTRY		3418420		True				
ANR	3418600	CFGExitNode	EXIT		3418420		True				
ANR	3418601	Symbol	ret		3418420						
ANR	3418602	Symbol	D_HOSTNAME		3418420						
ANR	3418603	Symbol	errno		3418420						
ANR	3418604	Symbol	NULL		3418420						
ANR	3418605	Symbol	AF_INET		3418420						
ANR	3418606	Symbol	mask_str . Value		3418420						
ANR	3418607	Symbol	& host		3418420						
ANR	3418608	Symbol	htonl		3418420						
ANR	3418609	Symbol	AF_INET6		3418420						
ANR	3418610	Symbol	result		3418420						
ANR	3418611	Symbol	buf		3418420						
ANR	3418612	Symbol	mask_str		3418420						
ANR	3418613	Symbol	host		3418420						
ANR	3418614	Symbol	inet_ntop		3418420						
ANR	3418615	Symbol	* addr		3418420						
ANR	3418616	Symbol	addr		3418420						
ANR	3418617	Symbol	user		3418420						
ANR	3418618	Symbol	mask		3418420						
ANR	3418619	Function	IpVerify :: PrintAuthTable	421:0:11106:12331							
ANR	3418620	FunctionDef	IpVerify :: PrintAuthTable (int dprintf_level)		3418619	0					
ANR	3418621	CompoundStatement		422:44:11155:12331	3418619	0					
ANR	3418622	IdentifierDeclStatement	struct in6_addr host ;	423:1:11158:11178	3418619	0	True				
ANR	3418623	IdentifierDecl	host		3418619	0					
ANR	3418624	IdentifierDeclType	struct in6_addr		3418619	0					
ANR	3418625	Identifier	host		3418619	1					
ANR	3418626	IdentifierDeclStatement	UserPerm_t * ptable ;	424:1:11181:11200	3418619	1	True				
ANR	3418627	IdentifierDecl	* ptable		3418619	0					
ANR	3418628	IdentifierDeclType	UserPerm_t *		3418619	0					
ANR	3418629	Identifier	ptable		3418619	1					
ANR	3418630	ExpressionStatement	PermHashTable -> startIterations ( )	425:1:11203:11235	3418619	2	True				
ANR	3418631	CallExpression	PermHashTable -> startIterations ( )		3418619	0					
ANR	3418632	Callee	PermHashTable -> startIterations		3418619	0					
ANR	3418633	PtrMemberAccess	PermHashTable -> startIterations		3418619	0					
ANR	3418634	Identifier	PermHashTable		3418619	0					
ANR	3418635	Identifier	startIterations		3418619	1					
ANR	3418636	ArgumentList			3418619	1					
ANR	3418637	WhileStatement	"while ( PermHashTable -> iterate ( host , ptable ) )"		3418619	3					
ANR	3418638	Condition	"PermHashTable -> iterate ( host , ptable )"	427:8:11246:11281	3418619	0	True				
ANR	3418639	CallExpression	"PermHashTable -> iterate ( host , ptable )"		3418619	0					
ANR	3418640	Callee	PermHashTable -> iterate		3418619	0					
ANR	3418641	PtrMemberAccess	PermHashTable -> iterate		3418619	0					
ANR	3418642	Identifier	PermHashTable		3418619	0					
ANR	3418643	Identifier	iterate		3418619	1					
ANR	3418644	ArgumentList	host		3418619	1					
ANR	3418645	Argument	host		3418619	0					
ANR	3418646	Identifier	host		3418619	0					
ANR	3418647	Argument	ptable		3418619	1					
ANR	3418648	Identifier	ptable		3418619	0					
ANR	3418649	CompoundStatement		8:2:151:167	3418619	1					
ANR	3418650	IdentifierDeclStatement	MyString userid ;	428:2:11288:11303	3418619	0	True				
ANR	3418651	IdentifierDecl	userid		3418619	0					
ANR	3418652	IdentifierDeclType	MyString		3418619	0					
ANR	3418653	Identifier	userid		3418619	1					
ANR	3418654	IdentifierDeclStatement	perm_mask_t mask ;	429:2:11307:11323	3418619	1	True				
ANR	3418655	IdentifierDecl	mask		3418619	0					
ANR	3418656	IdentifierDeclType	perm_mask_t		3418619	0					
ANR	3418657	Identifier	mask		3418619	1					
ANR	3418658	ExpressionStatement	ptable -> startIterations ( )	431:2:11328:11353	3418619	2	True				
ANR	3418659	CallExpression	ptable -> startIterations ( )		3418619	0					
ANR	3418660	Callee	ptable -> startIterations		3418619	0					
ANR	3418661	PtrMemberAccess	ptable -> startIterations		3418619	0					
ANR	3418662	Identifier	ptable		3418619	0					
ANR	3418663	Identifier	startIterations		3418619	1					
ANR	3418664	ArgumentList			3418619	1					
ANR	3418665	WhileStatement	"while ( ptable -> iterate ( userid , mask ) )"		3418619	3					
ANR	3418666	Condition	"ptable -> iterate ( userid , mask )"	432:9:11364:11391	3418619	0	True				
ANR	3418667	CallExpression	"ptable -> iterate ( userid , mask )"		3418619	0					
ANR	3418668	Callee	ptable -> iterate		3418619	0					
ANR	3418669	PtrMemberAccess	ptable -> iterate		3418619	0					
ANR	3418670	Identifier	ptable		3418619	0					
ANR	3418671	Identifier	iterate		3418619	1					
ANR	3418672	ArgumentList	userid		3418619	1					
ANR	3418673	Argument	userid		3418619	0					
ANR	3418674	Identifier	userid		3418619	0					
ANR	3418675	Argument	mask		3418619	1					
ANR	3418676	Identifier	mask		3418619	0					
ANR	3418677	CompoundStatement		15:3:332:355	3418619	1					
ANR	3418678	ExpressionStatement	"has_user ( ptable , userid . Value ( ) , mask )"	434:3:11444:11482	3418619	0	True				
ANR	3418679	CallExpression	"has_user ( ptable , userid . Value ( ) , mask )"		3418619	0					
ANR	3418680	Callee	has_user		3418619	0					
ANR	3418681	Identifier	has_user		3418619	0					
ANR	3418682	ArgumentList	ptable		3418619	1					
ANR	3418683	Argument	ptable		3418619	0					
ANR	3418684	Identifier	ptable		3418619	0					
ANR	3418685	Argument	userid . Value ( )		3418619	1					
ANR	3418686	CallExpression	userid . Value ( )		3418619	0					
ANR	3418687	Callee	userid . Value		3418619	0					
ANR	3418688	MemberAccess	userid . Value		3418619	0					
ANR	3418689	Identifier	userid		3418619	0					
ANR	3418690	Identifier	Value		3418619	1					
ANR	3418691	ArgumentList			3418619	1					
ANR	3418692	Argument	mask		3418619	2					
ANR	3418693	Identifier	mask		3418619	0					
ANR	3418694	IdentifierDeclStatement	MyString auth_entry_str ;	436:3:11488:11511	3418619	1	True				
ANR	3418695	IdentifierDecl	auth_entry_str		3418619	0					
ANR	3418696	IdentifierDeclType	MyString		3418619	0					
ANR	3418697	Identifier	auth_entry_str		3418619	1					
ANR	3418698	ExpressionStatement	"AuthEntryToString ( host , userid . Value ( ) , mask , auth_entry_str )"	437:3:11516:11575	3418619	2	True				
ANR	3418699	CallExpression	"AuthEntryToString ( host , userid . Value ( ) , mask , auth_entry_str )"		3418619	0					
ANR	3418700	Callee	AuthEntryToString		3418619	0					
ANR	3418701	Identifier	AuthEntryToString		3418619	0					
ANR	3418702	ArgumentList	host		3418619	1					
ANR	3418703	Argument	host		3418619	0					
ANR	3418704	Identifier	host		3418619	0					
ANR	3418705	Argument	userid . Value ( )		3418619	1					
ANR	3418706	CallExpression	userid . Value ( )		3418619	0					
ANR	3418707	Callee	userid . Value		3418619	0					
ANR	3418708	MemberAccess	userid . Value		3418619	0					
ANR	3418709	Identifier	userid		3418619	0					
ANR	3418710	Identifier	Value		3418619	1					
ANR	3418711	ArgumentList			3418619	1					
ANR	3418712	Argument	mask		3418619	2					
ANR	3418713	Identifier	mask		3418619	0					
ANR	3418714	Argument	auth_entry_str		3418619	3					
ANR	3418715	Identifier	auth_entry_str		3418619	0					
ANR	3418716	ExpressionStatement	"dprintf ( dprintf_level , ""%s\\n"" , auth_entry_str . Value ( ) )"	438:3:11580:11633	3418619	3	True				
ANR	3418717	CallExpression	"dprintf ( dprintf_level , ""%s\\n"" , auth_entry_str . Value ( ) )"		3418619	0					
ANR	3418718	Callee	dprintf		3418619	0					
ANR	3418719	Identifier	dprintf		3418619	0					
ANR	3418720	ArgumentList	dprintf_level		3418619	1					
ANR	3418721	Argument	dprintf_level		3418619	0					
ANR	3418722	Identifier	dprintf_level		3418619	0					
ANR	3418723	Argument	"""%s\\n"""		3418619	1					
ANR	3418724	PrimaryExpression	"""%s\\n"""		3418619	0					
ANR	3418725	Argument	auth_entry_str . Value ( )		3418619	2					
ANR	3418726	CallExpression	auth_entry_str . Value ( )		3418619	0					
ANR	3418727	Callee	auth_entry_str . Value		3418619	0					
ANR	3418728	MemberAccess	auth_entry_str . Value		3418619	0					
ANR	3418729	Identifier	auth_entry_str		3418619	0					
ANR	3418730	Identifier	Value		3418619	1					
ANR	3418731	ArgumentList			3418619	1					
ANR	3418732	ExpressionStatement	"dprintf ( dprintf_level , ""Authorizations yet to be resolved:\\n"" )"	442:1:11644:11705	3418619	4	True				
ANR	3418733	CallExpression	"dprintf ( dprintf_level , ""Authorizations yet to be resolved:\\n"" )"		3418619	0					
ANR	3418734	Callee	dprintf		3418619	0					
ANR	3418735	Identifier	dprintf		3418619	0					
ANR	3418736	ArgumentList	dprintf_level		3418619	1					
ANR	3418737	Argument	dprintf_level		3418619	0					
ANR	3418738	Identifier	dprintf_level		3418619	0					
ANR	3418739	Argument	"""Authorizations yet to be resolved:\\n"""		3418619	1					
ANR	3418740	PrimaryExpression	"""Authorizations yet to be resolved:\\n"""		3418619	0					
ANR	3418741	IdentifierDeclStatement	DCpermission perm ;	443:1:11708:11725	3418619	5	True				
ANR	3418742	IdentifierDecl	perm		3418619	0					
ANR	3418743	IdentifierDeclType	DCpermission		3418619	0					
ANR	3418744	Identifier	perm		3418619	1					
ANR	3418745	ForStatement	for ( perm = FIRST_PERM ; perm < LAST_PERM ; perm = NEXT_PERM ( perm ) )		3418619	6					
ANR	3418746	ForInit	perm = FIRST_PERM ;	444:7:11734:11749	3418619	0	True				
ANR	3418747	AssignmentExpression	perm = FIRST_PERM		3418619	0		=			
ANR	3418748	Identifier	perm		3418619	0					
ANR	3418749	Identifier	FIRST_PERM		3418619	1					
ANR	3418750	Condition	perm < LAST_PERM	444:24:11751:11766	3418619	1	True				
ANR	3418751	RelationalExpression	perm < LAST_PERM		3418619	0		<			
ANR	3418752	Identifier	perm		3418619	0					
ANR	3418753	Identifier	LAST_PERM		3418619	1					
ANR	3418754	AssignmentExpression	perm = NEXT_PERM ( perm )	444:42:11769:11788	3418619	2	True	=			
ANR	3418755	Identifier	perm		3418619	0					
ANR	3418756	CallExpression	NEXT_PERM ( perm )		3418619	1					
ANR	3418757	Callee	NEXT_PERM		3418619	0					
ANR	3418758	Identifier	NEXT_PERM		3418619	0					
ANR	3418759	ArgumentList	perm		3418619	1					
ANR	3418760	Argument	perm		3418619	0					
ANR	3418761	Identifier	perm		3418619	0					
ANR	3418762	CompoundStatement		28:2:709:740	3418619	3					
ANR	3418763	IdentifierDeclStatement	PermTypeEntry * pentry = PermTypeArray [ perm ] ;	446:2:11797:11840	3418619	0	True				
ANR	3418764	IdentifierDecl	* pentry = PermTypeArray [ perm ]		3418619	0					
ANR	3418765	IdentifierDeclType	PermTypeEntry *		3418619	0					
ANR	3418766	Identifier	pentry		3418619	1					
ANR	3418767	AssignmentExpression	* pentry = PermTypeArray [ perm ]		3418619	2		=			
ANR	3418768	Identifier	pentry		3418619	0					
ANR	3418769	ArrayIndexing	PermTypeArray [ perm ]		3418619	1					
ANR	3418770	Identifier	PermTypeArray		3418619	0					
ANR	3418771	Identifier	perm		3418619	1					
ANR	3418772	ExpressionStatement	ASSERT ( pentry )	447:2:11844:11860	3418619	1	True				
ANR	3418773	CallExpression	ASSERT ( pentry )		3418619	0					
ANR	3418774	Callee	ASSERT		3418619	0					
ANR	3418775	Identifier	ASSERT		3418619	0					
ANR	3418776	ArgumentList	pentry		3418619	1					
ANR	3418777	Argument	pentry		3418619	0					
ANR	3418778	Identifier	pentry		3418619	0					
ANR	3418779	IdentifierDeclStatement	"MyString allow_users , deny_users ;"	449:2:11865:11896	3418619	2	True				
ANR	3418780	IdentifierDecl	allow_users		3418619	0					
ANR	3418781	IdentifierDeclType	MyString		3418619	0					
ANR	3418782	Identifier	allow_users		3418619	1					
ANR	3418783	IdentifierDecl	deny_users		3418619	1					
ANR	3418784	IdentifierDeclType	MyString		3418619	0					
ANR	3418785	Identifier	deny_users		3418619	1					
ANR	3418786	IfStatement	if ( pentry -> allow_users )		3418619	3					
ANR	3418787	Condition	pentry -> allow_users	451:6:11905:11923	3418619	0	True				
ANR	3418788	PtrMemberAccess	pentry -> allow_users		3418619	0					
ANR	3418789	Identifier	pentry		3418619	0					
ANR	3418790	Identifier	allow_users		3418619	1					
ANR	3418791	CompoundStatement		30:28:771:771	3418619	1					
ANR	3418792	ExpressionStatement	"UserHashToString ( pentry -> allow_users , allow_users )"	452:3:11932:11981	3418619	0	True				
ANR	3418793	CallExpression	"UserHashToString ( pentry -> allow_users , allow_users )"		3418619	0					
ANR	3418794	Callee	UserHashToString		3418619	0					
ANR	3418795	Identifier	UserHashToString		3418619	0					
ANR	3418796	ArgumentList	pentry -> allow_users		3418619	1					
ANR	3418797	Argument	pentry -> allow_users		3418619	0					
ANR	3418798	PtrMemberAccess	pentry -> allow_users		3418619	0					
ANR	3418799	Identifier	pentry		3418619	0					
ANR	3418800	Identifier	allow_users		3418619	1					
ANR	3418801	Argument	allow_users		3418619	1					
ANR	3418802	Identifier	allow_users		3418619	0					
ANR	3418803	IfStatement	if ( pentry -> deny_users )		3418619	4					
ANR	3418804	Condition	pentry -> deny_users	455:6:11994:12011	3418619	0	True				
ANR	3418805	PtrMemberAccess	pentry -> deny_users		3418619	0					
ANR	3418806	Identifier	pentry		3418619	0					
ANR	3418807	Identifier	deny_users		3418619	1					
ANR	3418808	CompoundStatement		34:27:859:859	3418619	1					
ANR	3418809	ExpressionStatement	"UserHashToString ( pentry -> deny_users , deny_users )"	456:3:12020:12067	3418619	0	True				
ANR	3418810	CallExpression	"UserHashToString ( pentry -> deny_users , deny_users )"		3418619	0					
ANR	3418811	Callee	UserHashToString		3418619	0					
ANR	3418812	Identifier	UserHashToString		3418619	0					
ANR	3418813	ArgumentList	pentry -> deny_users		3418619	1					
ANR	3418814	Argument	pentry -> deny_users		3418619	0					
ANR	3418815	PtrMemberAccess	pentry -> deny_users		3418619	0					
ANR	3418816	Identifier	pentry		3418619	0					
ANR	3418817	Identifier	deny_users		3418619	1					
ANR	3418818	Argument	deny_users		3418619	1					
ANR	3418819	Identifier	deny_users		3418619	0					
ANR	3418820	IfStatement	if ( allow_users . Length ( ) )		3418619	5					
ANR	3418821	Condition	allow_users . Length ( )	459:6:12080:12099	3418619	0	True				
ANR	3418822	CallExpression	allow_users . Length ( )		3418619	0					
ANR	3418823	Callee	allow_users . Length		3418619	0					
ANR	3418824	MemberAccess	allow_users . Length		3418619	0					
ANR	3418825	Identifier	allow_users		3418619	0					
ANR	3418826	Identifier	Length		3418619	1					
ANR	3418827	ArgumentList			3418619	1					
ANR	3418828	CompoundStatement		38:29:947:947	3418619	1					
ANR	3418829	ExpressionStatement	"dprintf ( dprintf_level , ""allow %s: %s\\n"" , PermString ( perm ) , allow_users . Value ( ) )"	460:3:12108:12196	3418619	0	True				
ANR	3418830	CallExpression	"dprintf ( dprintf_level , ""allow %s: %s\\n"" , PermString ( perm ) , allow_users . Value ( ) )"		3418619	0					
ANR	3418831	Callee	dprintf		3418619	0					
ANR	3418832	Identifier	dprintf		3418619	0					
ANR	3418833	ArgumentList	dprintf_level		3418619	1					
ANR	3418834	Argument	dprintf_level		3418619	0					
ANR	3418835	Identifier	dprintf_level		3418619	0					
ANR	3418836	Argument	"""allow %s: %s\\n"""		3418619	1					
ANR	3418837	PrimaryExpression	"""allow %s: %s\\n"""		3418619	0					
ANR	3418838	Argument	PermString ( perm )		3418619	2					
ANR	3418839	CallExpression	PermString ( perm )		3418619	0					
ANR	3418840	Callee	PermString		3418619	0					
ANR	3418841	Identifier	PermString		3418619	0					
ANR	3418842	ArgumentList	perm		3418619	1					
ANR	3418843	Argument	perm		3418619	0					
ANR	3418844	Identifier	perm		3418619	0					
ANR	3418845	Argument	allow_users . Value ( )		3418619	3					
ANR	3418846	CallExpression	allow_users . Value ( )		3418619	0					
ANR	3418847	Callee	allow_users . Value		3418619	0					
ANR	3418848	MemberAccess	allow_users . Value		3418619	0					
ANR	3418849	Identifier	allow_users		3418619	0					
ANR	3418850	Identifier	Value		3418619	1					
ANR	3418851	ArgumentList			3418619	1					
ANR	3418852	IfStatement	if ( deny_users . Length ( ) )		3418619	6					
ANR	3418853	Condition	deny_users . Length ( )	465:6:12209:12227	3418619	0	True				
ANR	3418854	CallExpression	deny_users . Length ( )		3418619	0					
ANR	3418855	Callee	deny_users . Length		3418619	0					
ANR	3418856	MemberAccess	deny_users . Length		3418619	0					
ANR	3418857	Identifier	deny_users		3418619	0					
ANR	3418858	Identifier	Length		3418619	1					
ANR	3418859	ArgumentList			3418619	1					
ANR	3418860	CompoundStatement		44:28:1075:1075	3418619	1					
ANR	3418861	ExpressionStatement	"dprintf ( dprintf_level , ""deny %s: %s\\n"" , PermString ( perm ) , deny_users . Value ( ) )"	466:3:12236:12322	3418619	0	True				
ANR	3418862	CallExpression	"dprintf ( dprintf_level , ""deny %s: %s\\n"" , PermString ( perm ) , deny_users . Value ( ) )"		3418619	0					
ANR	3418863	Callee	dprintf		3418619	0					
ANR	3418864	Identifier	dprintf		3418619	0					
ANR	3418865	ArgumentList	dprintf_level		3418619	1					
ANR	3418866	Argument	dprintf_level		3418619	0					
ANR	3418867	Identifier	dprintf_level		3418619	0					
ANR	3418868	Argument	"""deny %s: %s\\n"""		3418619	1					
ANR	3418869	PrimaryExpression	"""deny %s: %s\\n"""		3418619	0					
ANR	3418870	Argument	PermString ( perm )		3418619	2					
ANR	3418871	CallExpression	PermString ( perm )		3418619	0					
ANR	3418872	Callee	PermString		3418619	0					
ANR	3418873	Identifier	PermString		3418619	0					
ANR	3418874	ArgumentList	perm		3418619	1					
ANR	3418875	Argument	perm		3418619	0					
ANR	3418876	Identifier	perm		3418619	0					
ANR	3418877	Argument	deny_users . Value ( )		3418619	3					
ANR	3418878	CallExpression	deny_users . Value ( )		3418619	0					
ANR	3418879	Callee	deny_users . Value		3418619	0					
ANR	3418880	MemberAccess	deny_users . Value		3418619	0					
ANR	3418881	Identifier	deny_users		3418619	0					
ANR	3418882	Identifier	Value		3418619	1					
ANR	3418883	ArgumentList			3418619	1					
ANR	3418884	ReturnType	void		3418619	1					
ANR	3418885	Identifier	IpVerify :: PrintAuthTable		3418619	2					
ANR	3418886	ParameterList	int dprintf_level		3418619	3					
ANR	3418887	Parameter	int dprintf_level	422:25:11136:11152	3418619	0	True				
ANR	3418888	ParameterType	int		3418619	0					
ANR	3418889	Identifier	dprintf_level		3418619	1					
ANR	3418890	CFGEntryNode	ENTRY		3418619		True				
ANR	3418891	CFGExitNode	EXIT		3418619		True				
ANR	3418892	Symbol	PermHashTable -> iterate		3418619						
ANR	3418893	Symbol	deny_users . Value		3418619						
ANR	3418894	Symbol	perm		3418619						
ANR	3418895	Symbol	* perm		3418619						
ANR	3418896	Symbol	* PermTypeArray		3418619						
ANR	3418897	Symbol	dprintf_level		3418619						
ANR	3418898	Symbol	allow_users . Length		3418619						
ANR	3418899	Symbol	auth_entry_str . Value		3418619						
ANR	3418900	Symbol	auth_entry_str		3418619						
ANR	3418901	Symbol	userid		3418619						
ANR	3418902	Symbol	deny_users		3418619						
ANR	3418903	Symbol	host		3418619						
ANR	3418904	Symbol	PermHashTable		3418619						
ANR	3418905	Symbol	* PermHashTable		3418619						
ANR	3418906	Symbol	NEXT_PERM		3418619						
ANR	3418907	Symbol	mask		3418619						
ANR	3418908	Symbol	ptable -> iterate		3418619						
ANR	3418909	Symbol	LAST_PERM		3418619						
ANR	3418910	Symbol	* pentry		3418619						
ANR	3418911	Symbol	pentry		3418619						
ANR	3418912	Symbol	allow_users . Value		3418619						
ANR	3418913	Symbol	FIRST_PERM		3418619						
ANR	3418914	Symbol	PermTypeArray		3418619						
ANR	3418915	Symbol	userid . Value		3418619						
ANR	3418916	Symbol	ptable		3418619						
ANR	3418917	Symbol	pentry -> allow_users		3418619						
ANR	3418918	Symbol	* ptable		3418619						
ANR	3418919	Symbol	deny_users . Length		3418619						
ANR	3418920	Symbol	pentry -> deny_users		3418619						
ANR	3418921	Symbol	PermString		3418619						
ANR	3418922	Symbol	allow_users		3418619						
ANR	3418923	Function	ExpandHostAddresses	475:0:12439:12962							
ANR	3418924	FunctionDef	"ExpandHostAddresses (char const * host , StringList * list)"		3418923	0					
ANR	3418925	CompoundStatement		477:0:12506:12962	3418923	0					
ANR	3418926	ExpressionStatement	list -> append ( host )	478:1:12509:12527	3418923	0	True				
ANR	3418927	CallExpression	list -> append ( host )		3418923	0					
ANR	3418928	Callee	list -> append		3418923	0					
ANR	3418929	PtrMemberAccess	list -> append		3418923	0					
ANR	3418930	Identifier	list		3418923	0					
ANR	3418931	Identifier	append		3418923	1					
ANR	3418932	ArgumentList	host		3418923	1					
ANR	3418933	Argument	host		3418923	0					
ANR	3418934	Identifier	host		3418923	0					
ANR	3418935	IdentifierDeclStatement	condor_netaddr netaddr ;	479:1:12530:12552	3418923	1	True				
ANR	3418936	IdentifierDecl	netaddr		3418923	0					
ANR	3418937	IdentifierDeclType	condor_netaddr		3418923	0					
ANR	3418938	Identifier	netaddr		3418923	1					
ANR	3418939	IfStatement	"if ( strchr ( host , '*' ) || strchr ( host , '/' ) || netaddr . from_net_string ( host ) )"		3418923	2					
ANR	3418940	Condition	"strchr ( host , '*' ) || strchr ( host , '/' ) || netaddr . from_net_string ( host )"	481:5:12560:12628	3418923	0	True				
ANR	3418941	OrExpression	"strchr ( host , '*' ) || strchr ( host , '/' ) || netaddr . from_net_string ( host )"		3418923	0		||			
ANR	3418942	CallExpression	"strchr ( host , '*' )"		3418923	0					
ANR	3418943	Callee	strchr		3418923	0					
ANR	3418944	Identifier	strchr		3418923	0					
ANR	3418945	ArgumentList	host		3418923	1					
ANR	3418946	Argument	host		3418923	0					
ANR	3418947	Identifier	host		3418923	0					
ANR	3418948	Argument	'*'		3418923	1					
ANR	3418949	PrimaryExpression	'*'		3418923	0					
ANR	3418950	OrExpression	"strchr ( host , '/' ) || netaddr . from_net_string ( host )"		3418923	1		||			
ANR	3418951	CallExpression	"strchr ( host , '/' )"		3418923	0					
ANR	3418952	Callee	strchr		3418923	0					
ANR	3418953	Identifier	strchr		3418923	0					
ANR	3418954	ArgumentList	host		3418923	1					
ANR	3418955	Argument	host		3418923	0					
ANR	3418956	Identifier	host		3418923	0					
ANR	3418957	Argument	'/'		3418923	1					
ANR	3418958	PrimaryExpression	'/'		3418923	0					
ANR	3418959	CallExpression	netaddr . from_net_string ( host )		3418923	1					
ANR	3418960	Callee	netaddr . from_net_string		3418923	0					
ANR	3418961	MemberAccess	netaddr . from_net_string		3418923	0					
ANR	3418962	Identifier	netaddr		3418923	0					
ANR	3418963	Identifier	from_net_string		3418923	1					
ANR	3418964	ArgumentList	host		3418923	1					
ANR	3418965	Argument	host		3418923	0					
ANR	3418966	Identifier	host		3418923	0					
ANR	3418967	CompoundStatement		5:76:124:124	3418923	1					
ANR	3418968	ReturnStatement	return ;	482:2:12635:12641	3418923	0	True				
ANR	3418969	IdentifierDeclStatement	std :: vector < condor_sockaddr > addrs = resolve_hostname ( host ) ;	485:1:12710:12769	3418923	3	True				
ANR	3418970	IdentifierDecl	addrs = resolve_hostname ( host )		3418923	0					
ANR	3418971	IdentifierDeclType	std :: vector < condor_sockaddr >		3418923	0					
ANR	3418972	Identifier	addrs		3418923	1					
ANR	3418973	AssignmentExpression	addrs = resolve_hostname ( host )		3418923	2		=			
ANR	3418974	Identifier	addrs		3418923	0					
ANR	3418975	CallExpression	resolve_hostname ( host )		3418923	1					
ANR	3418976	Callee	resolve_hostname		3418923	0					
ANR	3418977	Identifier	resolve_hostname		3418923	0					
ANR	3418978	ArgumentList	host		3418923	1					
ANR	3418979	Argument	host		3418923	0					
ANR	3418980	Identifier	host		3418923	0					
ANR	3418981	ForStatement	for ( std :: vector < condor_sockaddr > :: iterator iter = addrs . begin ( ) ; iter != addrs . end ( ) ; ++ iter )		3418923	4					
ANR	3418982	ForInit	std :: vector < condor_sockaddr > :: iterator iter = addrs . begin ( ) ;	486:6:12777:12836	3418923	0	True				
ANR	3418983	IdentifierDeclStatement	std :: vector < condor_sockaddr > :: iterator iter = addrs . begin ( ) ;		3418923	0					
ANR	3418984	IdentifierDecl	iter = addrs . begin ( )		3418923	0					
ANR	3418985	IdentifierDeclType	std :: vector < condor_sockaddr > :: iterator		3418923	0					
ANR	3418986	Identifier	iter		3418923	1					
ANR	3418987	AssignmentExpression	iter = addrs . begin ( )		3418923	2		=			
ANR	3418988	Identifier	iter		3418923	0					
ANR	3418989	CallExpression	addrs . begin ( )		3418923	1					
ANR	3418990	Callee	addrs . begin		3418923	0					
ANR	3418991	MemberAccess	addrs . begin		3418923	0					
ANR	3418992	Identifier	addrs		3418923	0					
ANR	3418993	Identifier	begin		3418923	1					
ANR	3418994	ArgumentList			3418923	1					
ANR	3418995	Condition	iter != addrs . end ( )	487:3:12841:12859	3418923	1	True				
ANR	3418996	EqualityExpression	iter != addrs . end ( )		3418923	0		!=			
ANR	3418997	Identifier	iter		3418923	0					
ANR	3418998	CallExpression	addrs . end ( )		3418923	1					
ANR	3418999	Callee	addrs . end		3418923	0					
ANR	3419000	MemberAccess	addrs . end		3418923	0					
ANR	3419001	Identifier	addrs		3418923	0					
ANR	3419002	Identifier	end		3418923	1					
ANR	3419003	ArgumentList			3418923	1					
ANR	3419004	UnaryExpression	++ iter	488:3:12865:12870	3418923	2	True				
ANR	3419005	IncDec	++		3418923	0					
ANR	3419006	Identifier	iter		3418923	1					
ANR	3419007	CompoundStatement		13:2:370:405	3418923	3					
ANR	3419008	IdentifierDeclStatement	const condor_sockaddr & addr = * iter ;	489:2:12877:12912	3418923	0	True				
ANR	3419009	IdentifierDecl	& addr = * iter		3418923	0					
ANR	3419010	IdentifierDeclType	const condor_sockaddr &		3418923	0					
ANR	3419011	Identifier	addr		3418923	1					
ANR	3419012	AssignmentExpression	& addr = * iter		3418923	2		=			
ANR	3419013	Identifier	addr		3418923	0					
ANR	3419014	UnaryOperationExpression	* iter		3418923	1					
ANR	3419015	UnaryOperator	*		3418923	0					
ANR	3419016	Identifier	iter		3418923	1					
ANR	3419017	ExpressionStatement	list -> append ( addr . to_ip_string ( ) . Value ( ) )	490:2:12916:12957	3418923	1	True				
ANR	3419018	CallExpression	list -> append ( addr . to_ip_string ( ) . Value ( ) )		3418923	0					
ANR	3419019	Callee	list -> append		3418923	0					
ANR	3419020	PtrMemberAccess	list -> append		3418923	0					
ANR	3419021	Identifier	list		3418923	0					
ANR	3419022	Identifier	append		3418923	1					
ANR	3419023	ArgumentList	addr . to_ip_string ( ) . Value ( )		3418923	1					
ANR	3419024	Argument	addr . to_ip_string ( ) . Value ( )		3418923	0					
ANR	3419025	CallExpression	addr . to_ip_string ( ) . Value ( )		3418923	0					
ANR	3419026	Callee	addr . to_ip_string ( ) . Value		3418923	0					
ANR	3419027	MemberAccess	addr . to_ip_string ( ) . Value		3418923	0					
ANR	3419028	CallExpression	addr . to_ip_string ( )		3418923	0					
ANR	3419029	Callee	addr . to_ip_string		3418923	0					
ANR	3419030	MemberAccess	addr . to_ip_string		3418923	0					
ANR	3419031	Identifier	addr		3418923	0					
ANR	3419032	Identifier	to_ip_string		3418923	1					
ANR	3419033	ArgumentList			3418923	1					
ANR	3419034	Identifier	Value		3418923	1					
ANR	3419035	ArgumentList			3418923	1					
ANR	3419036	ReturnType	static void		3418923	1					
ANR	3419037	Identifier	ExpandHostAddresses		3418923	2					
ANR	3419038	ParameterList	"char const * host , StringList * list"		3418923	3					
ANR	3419039	Parameter	char const * host	476:20:12471:12486	3418923	0	True				
ANR	3419040	ParameterType	char const *		3418923	0					
ANR	3419041	Identifier	host		3418923	1					
ANR	3419042	Parameter	StringList * list	476:37:12488:12503	3418923	1	True				
ANR	3419043	ParameterType	StringList *		3418923	0					
ANR	3419044	Identifier	list		3418923	1					
ANR	3419045	CFGEntryNode	ENTRY		3418923		True				
ANR	3419046	CFGExitNode	EXIT		3418923		True				
ANR	3419047	Symbol	addr . to_ip_string		3418923						
ANR	3419048	Symbol	addrs		3418923						
ANR	3419049	Symbol	strchr		3418923						
ANR	3419050	Symbol	iter		3418923						
ANR	3419051	Symbol	list		3418923						
ANR	3419052	Symbol	addr . to_ip_string ( ) . Value		3418923						
ANR	3419053	Symbol	* iter		3418923						
ANR	3419054	Symbol	netaddr . from_net_string		3418923						
ANR	3419055	Symbol	addrs . end		3418923						
ANR	3419056	Symbol	resolve_hostname		3418923						
ANR	3419057	Symbol	host		3418923						
ANR	3419058	Symbol	netaddr		3418923						
ANR	3419059	Symbol	addrs . begin		3418923						
ANR	3419060	Symbol	addr		3418923						
ANR	3419061	Function	IpVerify :: fill_table	494:0:12965:14625							
ANR	3419062	FunctionDef	"IpVerify :: fill_table (PermTypeEntry * pentry , char * list , bool allow)"		3419061	0					
ANR	3419063	CompoundStatement		496:0:13040:14625	3419061	0					
ANR	3419064	IdentifierDeclStatement	NetStringList * whichHostList = NULL ;	497:4:13046:13082	3419061	0	True				
ANR	3419065	IdentifierDecl	* whichHostList = NULL		3419061	0					
ANR	3419066	IdentifierDeclType	NetStringList *		3419061	0					
ANR	3419067	Identifier	whichHostList		3419061	1					
ANR	3419068	AssignmentExpression	* whichHostList = NULL		3419061	2		=			
ANR	3419069	Identifier	NULL		3419061	0					
ANR	3419070	Identifier	NULL		3419061	1					
ANR	3419071	IdentifierDeclStatement	UserHash_t * whichUserHash = NULL ;	498:4:13088:13121	3419061	1	True				
ANR	3419072	IdentifierDecl	* whichUserHash = NULL		3419061	0					
ANR	3419073	IdentifierDeclType	UserHash_t *		3419061	0					
ANR	3419074	Identifier	whichUserHash		3419061	1					
ANR	3419075	AssignmentExpression	* whichUserHash = NULL		3419061	2		=			
ANR	3419076	Identifier	NULL		3419061	0					
ANR	3419077	Identifier	NULL		3419061	1					
ANR	3419078	IdentifierDeclStatement	StringList * slist ;	499:4:13127:13145	3419061	2	True				
ANR	3419079	IdentifierDecl	* slist		3419061	0					
ANR	3419080	IdentifierDeclType	StringList *		3419061	0					
ANR	3419081	Identifier	slist		3419061	1					
ANR	3419082	ExpressionStatement	assert ( pentry )	501:4:13152:13166	3419061	3	True				
ANR	3419083	CallExpression	assert ( pentry )		3419061	0					
ANR	3419084	Callee	assert		3419061	0					
ANR	3419085	Identifier	assert		3419061	0					
ANR	3419086	ArgumentList	pentry		3419061	1					
ANR	3419087	Argument	pentry		3419061	0					
ANR	3419088	Identifier	pentry		3419061	0					
ANR	3419089	IfStatement	if ( whichHostList == NULL )		3419061	4					
ANR	3419090	Condition	whichHostList == NULL	503:8:13177:13197	3419061	0	True				
ANR	3419091	EqualityExpression	whichHostList == NULL		3419061	0		==			
ANR	3419092	Identifier	whichHostList		3419061	0					
ANR	3419093	Identifier	NULL		3419061	1					
ANR	3419094	CompoundStatement		8:31:159:159	3419061	1					
ANR	3419095	ExpressionStatement	whichHostList = new NetStringList ( )	504:8:13210:13245	3419061	0	True				
ANR	3419096	AssignmentExpression	whichHostList = new NetStringList ( )		3419061	0		=			
ANR	3419097	Identifier	whichHostList		3419061	0					
ANR	3419098	UnaryExpression	new NetStringList ( )		3419061	1					
ANR	3419099	IfStatement	if ( whichUserHash == NULL )		3419061	5					
ANR	3419100	Condition	whichUserHash == NULL	506:8:13261:13281	3419061	0	True				
ANR	3419101	EqualityExpression	whichUserHash == NULL		3419061	0		==			
ANR	3419102	Identifier	whichUserHash		3419061	0					
ANR	3419103	Identifier	NULL		3419061	1					
ANR	3419104	CompoundStatement		11:31:243:243	3419061	1					
ANR	3419105	ExpressionStatement	"whichUserHash = new UserHash_t ( 1024 , compute_host_hash )"	507:8:13294:13349	3419061	0	True				
ANR	3419106	AssignmentExpression	"whichUserHash = new UserHash_t ( 1024 , compute_host_hash )"		3419061	0		=			
ANR	3419107	Identifier	whichUserHash		3419061	0					
ANR	3419108	Expression	"1024 , compute_host_hash"		3419061	1					
ANR	3419109	PrimaryExpression	1024		3419061	0					
ANR	3419110	Identifier	compute_host_hash		3419061	1					
ANR	3419111	ExpressionStatement	slist = new StringList ( list )	510:4:13362:13390	3419061	6	True				
ANR	3419112	AssignmentExpression	slist = new StringList ( list )		3419061	0		=			
ANR	3419113	Identifier	slist		3419061	0					
ANR	3419114	Identifier	list		3419061	1					
ANR	3419115	IdentifierDeclStatement	"char * entry , * host , * user ;"	511:1:13393:13420	3419061	7	True				
ANR	3419116	IdentifierDecl	* entry		3419061	0					
ANR	3419117	IdentifierDeclType	char *		3419061	0					
ANR	3419118	Identifier	entry		3419061	1					
ANR	3419119	IdentifierDecl	* host		3419061	1					
ANR	3419120	IdentifierDeclType	char *		3419061	0					
ANR	3419121	Identifier	host		3419061	1					
ANR	3419122	IdentifierDecl	* user		3419061	2					
ANR	3419123	IdentifierDeclType	char *		3419061	0					
ANR	3419124	Identifier	user		3419061	1					
ANR	3419125	ExpressionStatement	slist -> rewind ( )	512:1:13423:13438	3419061	8	True				
ANR	3419126	CallExpression	slist -> rewind ( )		3419061	0					
ANR	3419127	Callee	slist -> rewind		3419061	0					
ANR	3419128	PtrMemberAccess	slist -> rewind		3419061	0					
ANR	3419129	Identifier	slist		3419061	0					
ANR	3419130	Identifier	rewind		3419061	1					
ANR	3419131	ArgumentList			3419061	1					
ANR	3419132	WhileStatement	while ( ( entry = slist -> next ( ) ) )		3419061	9					
ANR	3419133	Condition	entry = slist -> next ( )	513:9:13449:13469	3419061	0	True				
ANR	3419134	AssignmentExpression	entry = slist -> next ( )		3419061	0		=			
ANR	3419135	Identifier	entry		3419061	0					
ANR	3419136	CallExpression	slist -> next ( )		3419061	1					
ANR	3419137	Callee	slist -> next		3419061	0					
ANR	3419138	PtrMemberAccess	slist -> next		3419061	0					
ANR	3419139	Identifier	slist		3419061	0					
ANR	3419140	Identifier	next		3419061	1					
ANR	3419141	ArgumentList			3419061	1					
ANR	3419142	CompoundStatement		36:2:914:935	3419061	1					
ANR	3419143	IfStatement	if ( ! * entry )		3419061	0					
ANR	3419144	Condition	! * entry	514:6:13481:13487	3419061	0	True				
ANR	3419145	UnaryOperationExpression	! * entry		3419061	0					
ANR	3419146	UnaryOperator	!		3419061	0					
ANR	3419147	UnaryOperationExpression	* entry		3419061	1					
ANR	3419148	UnaryOperator	*		3419061	0					
ANR	3419149	Identifier	entry		3419061	1					
ANR	3419150	CompoundStatement		19:15:449:449	3419061	1					
ANR	3419151	ExpressionStatement	slist -> deleteCurrent ( )	516:3:13515:13537	3419061	0	True				
ANR	3419152	CallExpression	slist -> deleteCurrent ( )		3419061	0					
ANR	3419153	Callee	slist -> deleteCurrent		3419061	0					
ANR	3419154	PtrMemberAccess	slist -> deleteCurrent		3419061	0					
ANR	3419155	Identifier	slist		3419061	0					
ANR	3419156	Identifier	deleteCurrent		3419061	1					
ANR	3419157	ArgumentList			3419061	1					
ANR	3419158	ContinueStatement	continue ;	517:3:13542:13550	3419061	1	True				
ANR	3419159	ExpressionStatement	"split_entry ( entry , & host , & user )"	519:2:13558:13590	3419061	1	True				
ANR	3419160	CallExpression	"split_entry ( entry , & host , & user )"		3419061	0					
ANR	3419161	Callee	split_entry		3419061	0					
ANR	3419162	Identifier	split_entry		3419061	0					
ANR	3419163	ArgumentList	entry		3419061	1					
ANR	3419164	Argument	entry		3419061	0					
ANR	3419165	Identifier	entry		3419061	0					
ANR	3419166	Argument	& host		3419061	1					
ANR	3419167	UnaryOperationExpression	& host		3419061	0					
ANR	3419168	UnaryOperator	&		3419061	0					
ANR	3419169	Identifier	host		3419061	1					
ANR	3419170	Argument	& user		3419061	2					
ANR	3419171	UnaryOperationExpression	& user		3419061	0					
ANR	3419172	UnaryOperator	&		3419061	0					
ANR	3419173	Identifier	user		3419061	1					
ANR	3419174	ExpressionStatement	ASSERT ( host )	520:2:13594:13608	3419061	2	True				
ANR	3419175	CallExpression	ASSERT ( host )		3419061	0					
ANR	3419176	Callee	ASSERT		3419061	0					
ANR	3419177	Identifier	ASSERT		3419061	0					
ANR	3419178	ArgumentList	host		3419061	1					
ANR	3419179	Argument	host		3419061	0					
ANR	3419180	Identifier	host		3419061	0					
ANR	3419181	ExpressionStatement	ASSERT ( user )	521:2:13612:13626	3419061	3	True				
ANR	3419182	CallExpression	ASSERT ( user )		3419061	0					
ANR	3419183	Callee	ASSERT		3419061	0					
ANR	3419184	Identifier	ASSERT		3419061	0					
ANR	3419185	ArgumentList	user		3419061	1					
ANR	3419186	Argument	user		3419061	0					
ANR	3419187	Identifier	user		3419061	0					
ANR	3419188	IdentifierDeclStatement	StringList host_addrs ;	527:2:13865:13886	3419061	4	True				
ANR	3419189	IdentifierDecl	host_addrs		3419061	0					
ANR	3419190	IdentifierDeclType	StringList		3419061	0					
ANR	3419191	Identifier	host_addrs		3419061	1					
ANR	3419192	ExpressionStatement	"ExpandHostAddresses ( host , & host_addrs )"	528:2:13890:13927	3419061	5	True				
ANR	3419193	CallExpression	"ExpandHostAddresses ( host , & host_addrs )"		3419061	0					
ANR	3419194	Callee	ExpandHostAddresses		3419061	0					
ANR	3419195	Identifier	ExpandHostAddresses		3419061	0					
ANR	3419196	ArgumentList	host		3419061	1					
ANR	3419197	Argument	host		3419061	0					
ANR	3419198	Identifier	host		3419061	0					
ANR	3419199	Argument	& host_addrs		3419061	1					
ANR	3419200	UnaryOperationExpression	& host_addrs		3419061	0					
ANR	3419201	UnaryOperator	&		3419061	0					
ANR	3419202	Identifier	host_addrs		3419061	1					
ANR	3419203	ExpressionStatement	host_addrs . rewind ( )	529:2:13931:13950	3419061	6	True				
ANR	3419204	CallExpression	host_addrs . rewind ( )		3419061	0					
ANR	3419205	Callee	host_addrs . rewind		3419061	0					
ANR	3419206	MemberAccess	host_addrs . rewind		3419061	0					
ANR	3419207	Identifier	host_addrs		3419061	0					
ANR	3419208	Identifier	rewind		3419061	1					
ANR	3419209	ArgumentList			3419061	1					
ANR	3419210	IdentifierDeclStatement	char const * host_addr ;	531:2:13955:13976	3419061	7	True				
ANR	3419211	IdentifierDecl	* host_addr		3419061	0					
ANR	3419212	IdentifierDeclType	char const *		3419061	0					
ANR	3419213	Identifier	host_addr		3419061	1					
ANR	3419214	WhileStatement	while ( ( host_addr = host_addrs . next ( ) ) )		3419061	8					
ANR	3419215	Condition	host_addr = host_addrs . next ( )	532:9:13987:14015	3419061	0	True				
ANR	3419216	AssignmentExpression	host_addr = host_addrs . next ( )		3419061	0		=			
ANR	3419217	Identifier	host_addr		3419061	0					
ANR	3419218	CallExpression	host_addrs . next ( )		3419061	1					
ANR	3419219	Callee	host_addrs . next		3419061	0					
ANR	3419220	MemberAccess	host_addrs . next		3419061	0					
ANR	3419221	Identifier	host_addrs		3419061	0					
ANR	3419222	Identifier	next		3419061	1					
ANR	3419223	ArgumentList			3419061	1					
ANR	3419224	CompoundStatement		39:3:1018:1043	3419061	1					
ANR	3419225	IdentifierDeclStatement	MyString hostString ( host_addr ) ;	533:3:14024:14054	3419061	0	True				
ANR	3419226	IdentifierDecl	hostString ( host_addr )		3419061	0					
ANR	3419227	IdentifierDeclType	MyString		3419061	0					
ANR	3419228	Identifier	hostString		3419061	1					
ANR	3419229	Identifier	host_addr		3419061	2					
ANR	3419230	IdentifierDeclStatement	StringList * userList = 0 ;	534:3:14059:14084	3419061	1	True				
ANR	3419231	IdentifierDecl	* userList = 0		3419061	0					
ANR	3419232	IdentifierDeclType	StringList *		3419061	0					
ANR	3419233	Identifier	userList		3419061	1					
ANR	3419234	AssignmentExpression	* userList = 0		3419061	2		=			
ANR	3419235	Identifier	userList		3419061	0					
ANR	3419236	PrimaryExpression	0		3419061	1					
ANR	3419237	IfStatement	"if ( whichUserHash -> lookup ( hostString , userList ) == - 1 )"		3419061	2					
ANR	3419238	Condition	"whichUserHash -> lookup ( hostString , userList ) == - 1"	536:7:14141:14189	3419061	0	True				
ANR	3419239	EqualityExpression	"whichUserHash -> lookup ( hostString , userList ) == - 1"		3419061	0		==			
ANR	3419240	CallExpression	"whichUserHash -> lookup ( hostString , userList )"		3419061	0					
ANR	3419241	Callee	whichUserHash -> lookup		3419061	0					
ANR	3419242	PtrMemberAccess	whichUserHash -> lookup		3419061	0					
ANR	3419243	Identifier	whichUserHash		3419061	0					
ANR	3419244	Identifier	lookup		3419061	1					
ANR	3419245	ArgumentList	hostString		3419061	1					
ANR	3419246	Argument	hostString		3419061	0					
ANR	3419247	Identifier	hostString		3419061	0					
ANR	3419248	Argument	userList		3419061	1					
ANR	3419249	Identifier	userList		3419061	0					
ANR	3419250	UnaryOperationExpression	- 1		3419061	1					
ANR	3419251	UnaryOperator	-		3419061	0					
ANR	3419252	PrimaryExpression	1		3419061	1					
ANR	3419253	CompoundStatement		41:58:1151:1151	3419061	1					
ANR	3419254	ExpressionStatement	"whichUserHash -> insert ( hostString , new StringList ( user ) )"	537:4:14198:14253	3419061	0	True				
ANR	3419255	CallExpression	"whichUserHash -> insert ( hostString , new StringList ( user ) )"		3419061	0					
ANR	3419256	Callee	whichUserHash -> insert		3419061	0					
ANR	3419257	PtrMemberAccess	whichUserHash -> insert		3419061	0					
ANR	3419258	Identifier	whichUserHash		3419061	0					
ANR	3419259	Identifier	insert		3419061	1					
ANR	3419260	ArgumentList	hostString		3419061	1					
ANR	3419261	Argument	hostString		3419061	0					
ANR	3419262	Identifier	hostString		3419061	0					
ANR	3419263	Argument	user		3419061	1					
ANR	3419264	Identifier	user		3419061	0					
ANR	3419265	ExpressionStatement	whichHostList -> append ( hostString . Value ( ) )	538:4:14260:14301	3419061	1	True				
ANR	3419266	CallExpression	whichHostList -> append ( hostString . Value ( ) )		3419061	0					
ANR	3419267	Callee	whichHostList -> append		3419061	0					
ANR	3419268	PtrMemberAccess	whichHostList -> append		3419061	0					
ANR	3419269	Identifier	whichHostList		3419061	0					
ANR	3419270	Identifier	append		3419061	1					
ANR	3419271	ArgumentList	hostString . Value ( )		3419061	1					
ANR	3419272	Argument	hostString . Value ( )		3419061	0					
ANR	3419273	CallExpression	hostString . Value ( )		3419061	0					
ANR	3419274	Callee	hostString . Value		3419061	0					
ANR	3419275	MemberAccess	hostString . Value		3419061	0					
ANR	3419276	Identifier	hostString		3419061	0					
ANR	3419277	Identifier	Value		3419061	1					
ANR	3419278	ArgumentList			3419061	1					
ANR	3419279	ElseStatement	else		3419061	0					
ANR	3419280	CompoundStatement		45:8:1275:1275	3419061	0					
ANR	3419281	ExpressionStatement	userList -> append ( user )	541:4:14322:14344	3419061	0	True				
ANR	3419282	CallExpression	userList -> append ( user )		3419061	0					
ANR	3419283	Callee	userList -> append		3419061	0					
ANR	3419284	PtrMemberAccess	userList -> append		3419061	0					
ANR	3419285	Identifier	userList		3419061	0					
ANR	3419286	Identifier	append		3419061	1					
ANR	3419287	ArgumentList	user		3419061	1					
ANR	3419288	Argument	user		3419061	0					
ANR	3419289	Identifier	user		3419061	0					
ANR	3419290	ExpressionStatement	free ( host )	545:2:14358:14368	3419061	9	True				
ANR	3419291	CallExpression	free ( host )		3419061	0					
ANR	3419292	Callee	free		3419061	0					
ANR	3419293	Identifier	free		3419061	0					
ANR	3419294	ArgumentList	host		3419061	1					
ANR	3419295	Argument	host		3419061	0					
ANR	3419296	Identifier	host		3419061	0					
ANR	3419297	ExpressionStatement	free ( user )	546:2:14372:14382	3419061	10	True				
ANR	3419298	CallExpression	free ( user )		3419061	0					
ANR	3419299	Callee	free		3419061	0					
ANR	3419300	Identifier	free		3419061	0					
ANR	3419301	ArgumentList	user		3419061	1					
ANR	3419302	Argument	user		3419061	0					
ANR	3419303	Identifier	user		3419061	0					
ANR	3419304	IfStatement	if ( allow )		3419061	10					
ANR	3419305	Condition	allow	549:8:14396:14400	3419061	0	True				
ANR	3419306	Identifier	allow		3419061	0					
ANR	3419307	CompoundStatement		54:15:1362:1362	3419061	1					
ANR	3419308	ExpressionStatement	pentry -> allow_hosts = whichHostList	550:8:14413:14448	3419061	0	True				
ANR	3419309	AssignmentExpression	pentry -> allow_hosts = whichHostList		3419061	0		=			
ANR	3419310	PtrMemberAccess	pentry -> allow_hosts		3419061	0					
ANR	3419311	Identifier	pentry		3419061	0					
ANR	3419312	Identifier	allow_hosts		3419061	1					
ANR	3419313	Identifier	whichHostList		3419061	1					
ANR	3419314	ExpressionStatement	pentry -> allow_users = whichUserHash	551:8:14458:14494	3419061	1	True				
ANR	3419315	AssignmentExpression	pentry -> allow_users = whichUserHash		3419061	0		=			
ANR	3419316	PtrMemberAccess	pentry -> allow_users		3419061	0					
ANR	3419317	Identifier	pentry		3419061	0					
ANR	3419318	Identifier	allow_users		3419061	1					
ANR	3419319	Identifier	whichUserHash		3419061	1					
ANR	3419320	ElseStatement	else		3419061	0					
ANR	3419321	CompoundStatement		58:9:1470:1470	3419061	0					
ANR	3419322	ExpressionStatement	pentry -> deny_hosts = whichHostList	554:8:14521:14555	3419061	0	True				
ANR	3419323	AssignmentExpression	pentry -> deny_hosts = whichHostList		3419061	0		=			
ANR	3419324	PtrMemberAccess	pentry -> deny_hosts		3419061	0					
ANR	3419325	Identifier	pentry		3419061	0					
ANR	3419326	Identifier	deny_hosts		3419061	1					
ANR	3419327	Identifier	whichHostList		3419061	1					
ANR	3419328	ExpressionStatement	pentry -> deny_users = whichUserHash	555:8:14565:14599	3419061	1	True				
ANR	3419329	AssignmentExpression	pentry -> deny_users = whichUserHash		3419061	0		=			
ANR	3419330	PtrMemberAccess	pentry -> deny_users		3419061	0					
ANR	3419331	Identifier	pentry		3419061	0					
ANR	3419332	Identifier	deny_users		3419061	1					
ANR	3419333	Identifier	whichUserHash		3419061	1					
ANR	3419334	Statement	delete	557:4:14611:14616	3419061	11	True				
ANR	3419335	ExpressionStatement	slist	557:11:14618:14623	3419061	12	True				
ANR	3419336	Identifier	slist		3419061	0					
ANR	3419337	ReturnType	void		3419061	1					
ANR	3419338	Identifier	IpVerify :: fill_table		3419061	2					
ANR	3419339	ParameterList	"PermTypeEntry * pentry , char * list , bool allow"		3419061	3					
ANR	3419340	Parameter	PermTypeEntry * pentry	495:21:12991:13012	3419061	0	True				
ANR	3419341	ParameterType	PermTypeEntry *		3419061	0					
ANR	3419342	Identifier	pentry		3419061	1					
ANR	3419343	Parameter	char * list	495:45:13015:13025	3419061	1	True				
ANR	3419344	ParameterType	char *		3419061	0					
ANR	3419345	Identifier	list		3419061	1					
ANR	3419346	Parameter	bool allow	495:58:13028:13037	3419061	2	True				
ANR	3419347	ParameterType	bool		3419061	0					
ANR	3419348	Identifier	allow		3419061	1					
ANR	3419349	CFGEntryNode	ENTRY		3419061		True				
ANR	3419350	CFGExitNode	EXIT		3419061		True				
ANR	3419351	Symbol	allow		3419061						
ANR	3419352	Symbol	compute_host_hash		3419061						
ANR	3419353	Symbol	pentry -> deny_hosts		3419061						
ANR	3419354	Symbol	slist -> next		3419061						
ANR	3419355	Symbol	userList		3419061						
ANR	3419356	Symbol	host_addrs		3419061						
ANR	3419357	Symbol	whichUserHash -> lookup		3419061						
ANR	3419358	Symbol	slist		3419061						
ANR	3419359	Symbol	& host_addrs		3419061						
ANR	3419360	Symbol	& user		3419061						
ANR	3419361	Symbol	host		3419061						
ANR	3419362	Symbol	host_addr		3419061						
ANR	3419363	Symbol	* entry		3419061						
ANR	3419364	Symbol	* pentry		3419061						
ANR	3419365	Symbol	pentry		3419061						
ANR	3419366	Symbol	NULL		3419061						
ANR	3419367	Symbol	whichHostList		3419061						
ANR	3419368	Symbol	list		3419061						
ANR	3419369	Symbol	& host		3419061						
ANR	3419370	Symbol	hostString		3419061						
ANR	3419371	Symbol	whichUserHash		3419061						
ANR	3419372	Symbol	entry		3419061						
ANR	3419373	Symbol	pentry -> allow_users		3419061						
ANR	3419374	Symbol	* slist		3419061						
ANR	3419375	Symbol	hostString . Value		3419061						
ANR	3419376	Symbol	host_addrs . next		3419061						
ANR	3419377	Symbol	pentry -> deny_users		3419061						
ANR	3419378	Symbol	user		3419061						
ANR	3419379	Symbol	pentry -> allow_hosts		3419061						
ANR	3419380	Symbol	* whichUserHash		3419061						
ANR	3419381	Function	IpVerify :: split_entry	560:0:14628:16881							
ANR	3419382	FunctionDef	"IpVerify :: split_entry (const char * perm_entry , char * * host , char * * user)"		3419381	0					
ANR	3419383	CompoundStatement		561:0:14709:16881	3419381	0					
ANR	3419384	IdentifierDeclStatement	char * slash0 ;	562:4:14715:14728	3419381	0	True				
ANR	3419385	IdentifierDecl	* slash0		3419381	0					
ANR	3419386	IdentifierDeclType	char *		3419381	0					
ANR	3419387	Identifier	slash0		3419381	1					
ANR	3419388	IdentifierDeclStatement	char * slash1 ;	563:4:14734:14747	3419381	1	True				
ANR	3419389	IdentifierDecl	* slash1		3419381	0					
ANR	3419390	IdentifierDeclType	char *		3419381	0					
ANR	3419391	Identifier	slash1		3419381	1					
ANR	3419392	IdentifierDeclStatement	char * at ;	564:4:14753:14762	3419381	2	True				
ANR	3419393	IdentifierDecl	* at		3419381	0					
ANR	3419394	IdentifierDeclType	char *		3419381	0					
ANR	3419395	Identifier	at		3419381	1					
ANR	3419396	IdentifierDeclStatement	char * colon ;	565:1:14765:14777	3419381	3	True				
ANR	3419397	IdentifierDecl	* colon		3419381	0					
ANR	3419398	IdentifierDeclType	char *		3419381	0					
ANR	3419399	Identifier	colon		3419381	1					
ANR	3419400	IdentifierDeclStatement	char * permbuf ;	566:4:14783:14797	3419381	4	True				
ANR	3419401	IdentifierDecl	* permbuf		3419381	0					
ANR	3419402	IdentifierDeclType	char *		3419381	0					
ANR	3419403	Identifier	permbuf		3419381	1					
ANR	3419404	IfStatement	if ( ! perm_entry || ! * perm_entry )		3419381	5					
ANR	3419405	Condition	! perm_entry || ! * perm_entry	568:5:14805:14831	3419381	0	True				
ANR	3419406	OrExpression	! perm_entry || ! * perm_entry		3419381	0		||			
ANR	3419407	UnaryOperationExpression	! perm_entry		3419381	0					
ANR	3419408	UnaryOperator	!		3419381	0					
ANR	3419409	Identifier	perm_entry		3419381	1					
ANR	3419410	UnaryOperationExpression	! * perm_entry		3419381	1					
ANR	3419411	UnaryOperator	!		3419381	0					
ANR	3419412	UnaryOperationExpression	* perm_entry		3419381	1					
ANR	3419413	UnaryOperator	*		3419381	0					
ANR	3419414	Identifier	perm_entry		3419381	1					
ANR	3419415	CompoundStatement		8:34:124:124	3419381	1					
ANR	3419416	ExpressionStatement	"EXCEPT ( ""split_entry called with NULL or &NULL!"" )"	569:2:14838:14886	3419381	0	True				
ANR	3419417	CallExpression	"EXCEPT ( ""split_entry called with NULL or &NULL!"" )"		3419381	0					
ANR	3419418	Callee	EXCEPT		3419381	0					
ANR	3419419	Identifier	EXCEPT		3419381	0					
ANR	3419420	ArgumentList	"""split_entry called with NULL or &NULL!"""		3419381	1					
ANR	3419421	Argument	"""split_entry called with NULL or &NULL!"""		3419381	0					
ANR	3419422	PrimaryExpression	"""split_entry called with NULL or &NULL!"""		3419381	0					
ANR	3419423	ExpressionStatement	permbuf = strdup ( perm_entry )	587:1:15341:15371	3419381	6	True				
ANR	3419424	AssignmentExpression	permbuf = strdup ( perm_entry )		3419381	0		=			
ANR	3419425	Identifier	permbuf		3419381	0					
ANR	3419426	CallExpression	strdup ( perm_entry )		3419381	1					
ANR	3419427	Callee	strdup		3419381	0					
ANR	3419428	Identifier	strdup		3419381	0					
ANR	3419429	ArgumentList	perm_entry		3419381	1					
ANR	3419430	Argument	perm_entry		3419381	0					
ANR	3419431	Identifier	perm_entry		3419381	0					
ANR	3419432	ExpressionStatement	ASSERT ( permbuf )	588:1:15374:15391	3419381	7	True				
ANR	3419433	CallExpression	ASSERT ( permbuf )		3419381	0					
ANR	3419434	Callee	ASSERT		3419381	0					
ANR	3419435	Identifier	ASSERT		3419381	0					
ANR	3419436	ArgumentList	permbuf		3419381	1					
ANR	3419437	Argument	permbuf		3419381	0					
ANR	3419438	Identifier	permbuf		3419381	0					
ANR	3419439	ExpressionStatement	"slash0 = strchr ( permbuf , '/' )"	590:4:15398:15427	3419381	8	True				
ANR	3419440	AssignmentExpression	"slash0 = strchr ( permbuf , '/' )"		3419381	0		=			
ANR	3419441	Identifier	slash0		3419381	0					
ANR	3419442	CallExpression	"strchr ( permbuf , '/' )"		3419381	1					
ANR	3419443	Callee	strchr		3419381	0					
ANR	3419444	Identifier	strchr		3419381	0					
ANR	3419445	ArgumentList	permbuf		3419381	1					
ANR	3419446	Argument	permbuf		3419381	0					
ANR	3419447	Identifier	permbuf		3419381	0					
ANR	3419448	Argument	'/'		3419381	1					
ANR	3419449	PrimaryExpression	'/'		3419381	0					
ANR	3419450	IfStatement	if ( ! slash0 )		3419381	9					
ANR	3419451	Condition	! slash0	591:5:15434:15440	3419381	0	True				
ANR	3419452	UnaryOperationExpression	! slash0		3419381	0					
ANR	3419453	UnaryOperator	!		3419381	0					
ANR	3419454	Identifier	slash0		3419381	1					
ANR	3419455	CompoundStatement		31:14:733:733	3419381	1					
ANR	3419456	ExpressionStatement	"at = strchr ( permbuf , '@' )"	592:2:15447:15472	3419381	0	True				
ANR	3419457	AssignmentExpression	"at = strchr ( permbuf , '@' )"		3419381	0		=			
ANR	3419458	Identifier	at		3419381	0					
ANR	3419459	CallExpression	"strchr ( permbuf , '@' )"		3419381	1					
ANR	3419460	Callee	strchr		3419381	0					
ANR	3419461	Identifier	strchr		3419381	0					
ANR	3419462	ArgumentList	permbuf		3419381	1					
ANR	3419463	Argument	permbuf		3419381	0					
ANR	3419464	Identifier	permbuf		3419381	0					
ANR	3419465	Argument	'@'		3419381	1					
ANR	3419466	PrimaryExpression	'@'		3419381	0					
ANR	3419467	IfStatement	if ( at )		3419381	1					
ANR	3419468	Condition	at	593:6:15480:15481	3419381	0	True				
ANR	3419469	Identifier	at		3419381	0					
ANR	3419470	CompoundStatement		33:10:774:774	3419381	1					
ANR	3419471	ExpressionStatement	* user = strdup ( permbuf )	594:3:15489:15512	3419381	0	True				
ANR	3419472	AssignmentExpression	* user = strdup ( permbuf )		3419381	0		=			
ANR	3419473	UnaryOperationExpression	* user		3419381	0					
ANR	3419474	UnaryOperator	*		3419381	0					
ANR	3419475	Identifier	user		3419381	1					
ANR	3419476	CallExpression	strdup ( permbuf )		3419381	1					
ANR	3419477	Callee	strdup		3419381	0					
ANR	3419478	Identifier	strdup		3419381	0					
ANR	3419479	ArgumentList	permbuf		3419381	1					
ANR	3419480	Argument	permbuf		3419381	0					
ANR	3419481	Identifier	permbuf		3419381	0					
ANR	3419482	ExpressionStatement	"* host = strdup ( ""*"" )"	595:3:15517:15536	3419381	1	True				
ANR	3419483	AssignmentExpression	"* host = strdup ( ""*"" )"		3419381	0		=			
ANR	3419484	UnaryOperationExpression	* host		3419381	0					
ANR	3419485	UnaryOperator	*		3419381	0					
ANR	3419486	Identifier	host		3419381	1					
ANR	3419487	CallExpression	"strdup ( ""*"" )"		3419381	1					
ANR	3419488	Callee	strdup		3419381	0					
ANR	3419489	Identifier	strdup		3419381	0					
ANR	3419490	ArgumentList	"""*"""		3419381	1					
ANR	3419491	Argument	"""*"""		3419381	0					
ANR	3419492	PrimaryExpression	"""*"""		3419381	0					
ANR	3419493	ElseStatement	else		3419381	0					
ANR	3419494	CompoundStatement		36:9:837:837	3419381	0					
ANR	3419495	ExpressionStatement	"* user = strdup ( ""*"" )"	597:3:15552:15571	3419381	0	True				
ANR	3419496	AssignmentExpression	"* user = strdup ( ""*"" )"		3419381	0		=			
ANR	3419497	UnaryOperationExpression	* user		3419381	0					
ANR	3419498	UnaryOperator	*		3419381	0					
ANR	3419499	Identifier	user		3419381	1					
ANR	3419500	CallExpression	"strdup ( ""*"" )"		3419381	1					
ANR	3419501	Callee	strdup		3419381	0					
ANR	3419502	Identifier	strdup		3419381	0					
ANR	3419503	ArgumentList	"""*"""		3419381	1					
ANR	3419504	Argument	"""*"""		3419381	0					
ANR	3419505	PrimaryExpression	"""*"""		3419381	0					
ANR	3419506	ExpressionStatement	* host = strdup ( permbuf )	613:3:16000:16023	3419381	1	True				
ANR	3419507	AssignmentExpression	* host = strdup ( permbuf )		3419381	0		=			
ANR	3419508	UnaryOperationExpression	* host		3419381	0					
ANR	3419509	UnaryOperator	*		3419381	0					
ANR	3419510	Identifier	host		3419381	1					
ANR	3419511	CallExpression	strdup ( permbuf )		3419381	1					
ANR	3419512	Callee	strdup		3419381	0					
ANR	3419513	Identifier	strdup		3419381	0					
ANR	3419514	ArgumentList	permbuf		3419381	1					
ANR	3419515	Argument	permbuf		3419381	0					
ANR	3419516	Identifier	permbuf		3419381	0					
ANR	3419517	ElseStatement	else		3419381	0					
ANR	3419518	CompoundStatement		55:8:1327:1327	3419381	0					
ANR	3419519	ExpressionStatement	"slash1 = strchr ( slash0 + 1 , '/' )"	617:2:16092:16124	3419381	0	True				
ANR	3419520	AssignmentExpression	"slash1 = strchr ( slash0 + 1 , '/' )"		3419381	0		=			
ANR	3419521	Identifier	slash1		3419381	0					
ANR	3419522	CallExpression	"strchr ( slash0 + 1 , '/' )"		3419381	1					
ANR	3419523	Callee	strchr		3419381	0					
ANR	3419524	Identifier	strchr		3419381	0					
ANR	3419525	ArgumentList	slash0 + 1		3419381	1					
ANR	3419526	Argument	slash0 + 1		3419381	0					
ANR	3419527	AdditiveExpression	slash0 + 1		3419381	0		+			
ANR	3419528	Identifier	slash0		3419381	0					
ANR	3419529	PrimaryExpression	1		3419381	1					
ANR	3419530	Argument	'/'		3419381	1					
ANR	3419531	PrimaryExpression	'/'		3419381	0					
ANR	3419532	IfStatement	if ( slash1 )		3419381	1					
ANR	3419533	Condition	slash1	618:6:16132:16137	3419381	0	True				
ANR	3419534	Identifier	slash1		3419381	0					
ANR	3419535	CompoundStatement		58:14:1430:1430	3419381	1					
ANR	3419536	ExpressionStatement	* slash0 ++ = 0	620:3:16173:16186	3419381	0	True				
ANR	3419537	AssignmentExpression	* slash0 ++ = 0		3419381	0		=			
ANR	3419538	UnaryOperationExpression	* slash0 ++		3419381	0					
ANR	3419539	UnaryOperator	*		3419381	0					
ANR	3419540	PostIncDecOperationExpression	slash0 ++		3419381	1					
ANR	3419541	Identifier	slash0		3419381	0					
ANR	3419542	IncDec	++		3419381	1					
ANR	3419543	PrimaryExpression	0		3419381	1					
ANR	3419544	ExpressionStatement	* user = strdup ( permbuf )	621:3:16191:16214	3419381	1	True				
ANR	3419545	AssignmentExpression	* user = strdup ( permbuf )		3419381	0		=			
ANR	3419546	UnaryOperationExpression	* user		3419381	0					
ANR	3419547	UnaryOperator	*		3419381	0					
ANR	3419548	Identifier	user		3419381	1					
ANR	3419549	CallExpression	strdup ( permbuf )		3419381	1					
ANR	3419550	Callee	strdup		3419381	0					
ANR	3419551	Identifier	strdup		3419381	0					
ANR	3419552	ArgumentList	permbuf		3419381	1					
ANR	3419553	Argument	permbuf		3419381	0					
ANR	3419554	Identifier	permbuf		3419381	0					
ANR	3419555	ExpressionStatement	* host = strdup ( slash0 )	622:3:16219:16241	3419381	2	True				
ANR	3419556	AssignmentExpression	* host = strdup ( slash0 )		3419381	0		=			
ANR	3419557	UnaryOperationExpression	* host		3419381	0					
ANR	3419558	UnaryOperator	*		3419381	0					
ANR	3419559	Identifier	host		3419381	1					
ANR	3419560	CallExpression	strdup ( slash0 )		3419381	1					
ANR	3419561	Callee	strdup		3419381	0					
ANR	3419562	Identifier	strdup		3419381	0					
ANR	3419563	ArgumentList	slash0		3419381	1					
ANR	3419564	Argument	slash0		3419381	0					
ANR	3419565	Identifier	slash0		3419381	0					
ANR	3419566	ElseStatement	else		3419381	0					
ANR	3419567	CompoundStatement		63:9:1542:1542	3419381	0					
ANR	3419568	ExpressionStatement	"at = strchr ( permbuf , '@' )"	626:3:16331:16356	3419381	0	True				
ANR	3419569	AssignmentExpression	"at = strchr ( permbuf , '@' )"		3419381	0		=			
ANR	3419570	Identifier	at		3419381	0					
ANR	3419571	CallExpression	"strchr ( permbuf , '@' )"		3419381	1					
ANR	3419572	Callee	strchr		3419381	0					
ANR	3419573	Identifier	strchr		3419381	0					
ANR	3419574	ArgumentList	permbuf		3419381	1					
ANR	3419575	Argument	permbuf		3419381	0					
ANR	3419576	Identifier	permbuf		3419381	0					
ANR	3419577	Argument	'@'		3419381	1					
ANR	3419578	PrimaryExpression	'@'		3419381	0					
ANR	3419579	IfStatement	if ( ( at && at < slash0 ) || permbuf [ 0 ] == '*' )		3419381	1					
ANR	3419580	Condition	( at && at < slash0 ) || permbuf [ 0 ] == '*'	627:7:16365:16404	3419381	0	True				
ANR	3419581	OrExpression	( at && at < slash0 ) || permbuf [ 0 ] == '*'		3419381	0		||			
ANR	3419582	AndExpression	at && at < slash0		3419381	0		&&			
ANR	3419583	Identifier	at		3419381	0					
ANR	3419584	RelationalExpression	at < slash0		3419381	1		<			
ANR	3419585	Identifier	at		3419381	0					
ANR	3419586	Identifier	slash0		3419381	1					
ANR	3419587	EqualityExpression	permbuf [ 0 ] == '*'		3419381	1		==			
ANR	3419588	ArrayIndexing	permbuf [ 0 ]		3419381	0					
ANR	3419589	Identifier	permbuf		3419381	0					
ANR	3419590	PrimaryExpression	0		3419381	1					
ANR	3419591	PrimaryExpression	'*'		3419381	1					
ANR	3419592	CompoundStatement		67:49:1697:1697	3419381	1					
ANR	3419593	ExpressionStatement	* slash0 ++ = 0	628:4:16413:16426	3419381	0	True				
ANR	3419594	AssignmentExpression	* slash0 ++ = 0		3419381	0		=			
ANR	3419595	UnaryOperationExpression	* slash0 ++		3419381	0					
ANR	3419596	UnaryOperator	*		3419381	0					
ANR	3419597	PostIncDecOperationExpression	slash0 ++		3419381	1					
ANR	3419598	Identifier	slash0		3419381	0					
ANR	3419599	IncDec	++		3419381	1					
ANR	3419600	PrimaryExpression	0		3419381	1					
ANR	3419601	ExpressionStatement	* user = strdup ( permbuf )	629:4:16432:16455	3419381	1	True				
ANR	3419602	AssignmentExpression	* user = strdup ( permbuf )		3419381	0		=			
ANR	3419603	UnaryOperationExpression	* user		3419381	0					
ANR	3419604	UnaryOperator	*		3419381	0					
ANR	3419605	Identifier	user		3419381	1					
ANR	3419606	CallExpression	strdup ( permbuf )		3419381	1					
ANR	3419607	Callee	strdup		3419381	0					
ANR	3419608	Identifier	strdup		3419381	0					
ANR	3419609	ArgumentList	permbuf		3419381	1					
ANR	3419610	Argument	permbuf		3419381	0					
ANR	3419611	Identifier	permbuf		3419381	0					
ANR	3419612	ExpressionStatement	* host = strdup ( slash0 )	630:4:16461:16483	3419381	2	True				
ANR	3419613	AssignmentExpression	* host = strdup ( slash0 )		3419381	0		=			
ANR	3419614	UnaryOperationExpression	* host		3419381	0					
ANR	3419615	UnaryOperator	*		3419381	0					
ANR	3419616	Identifier	host		3419381	1					
ANR	3419617	CallExpression	strdup ( slash0 )		3419381	1					
ANR	3419618	Callee	strdup		3419381	0					
ANR	3419619	Identifier	strdup		3419381	0					
ANR	3419620	ArgumentList	slash0		3419381	1					
ANR	3419621	Argument	slash0		3419381	0					
ANR	3419622	Identifier	slash0		3419381	0					
ANR	3419623	ElseStatement	else		3419381	0					
ANR	3419624	CompoundStatement		72:4:1791:1813	3419381	0					
ANR	3419625	IdentifierDeclStatement	condor_netaddr netaddr ;	632:4:16501:16523	3419381	0	True				
ANR	3419626	IdentifierDecl	netaddr		3419381	0					
ANR	3419627	IdentifierDeclType	condor_netaddr		3419381	0					
ANR	3419628	Identifier	netaddr		3419381	1					
ANR	3419629	IfStatement	if ( netaddr . from_net_string ( permbuf ) )		3419381	1					
ANR	3419630	Condition	netaddr . from_net_string ( permbuf )	633:8:16533:16564	3419381	0	True				
ANR	3419631	CallExpression	netaddr . from_net_string ( permbuf )		3419381	0					
ANR	3419632	Callee	netaddr . from_net_string		3419381	0					
ANR	3419633	MemberAccess	netaddr . from_net_string		3419381	0					
ANR	3419634	Identifier	netaddr		3419381	0					
ANR	3419635	Identifier	from_net_string		3419381	1					
ANR	3419636	ArgumentList	permbuf		3419381	1					
ANR	3419637	Argument	permbuf		3419381	0					
ANR	3419638	Identifier	permbuf		3419381	0					
ANR	3419639	CompoundStatement		73:42:1857:1857	3419381	1					
ANR	3419640	ExpressionStatement	"* user = strdup ( ""*"" )"	635:5:16625:16644	3419381	0	True				
ANR	3419641	AssignmentExpression	"* user = strdup ( ""*"" )"		3419381	0		=			
ANR	3419642	UnaryOperationExpression	* user		3419381	0					
ANR	3419643	UnaryOperator	*		3419381	0					
ANR	3419644	Identifier	user		3419381	1					
ANR	3419645	CallExpression	"strdup ( ""*"" )"		3419381	1					
ANR	3419646	Callee	strdup		3419381	0					
ANR	3419647	Identifier	strdup		3419381	0					
ANR	3419648	ArgumentList	"""*"""		3419381	1					
ANR	3419649	Argument	"""*"""		3419381	0					
ANR	3419650	PrimaryExpression	"""*"""		3419381	0					
ANR	3419651	ExpressionStatement	* host = strdup ( permbuf )	636:5:16651:16674	3419381	1	True				
ANR	3419652	AssignmentExpression	* host = strdup ( permbuf )		3419381	0		=			
ANR	3419653	UnaryOperationExpression	* host		3419381	0					
ANR	3419654	UnaryOperator	*		3419381	0					
ANR	3419655	Identifier	host		3419381	1					
ANR	3419656	CallExpression	strdup ( permbuf )		3419381	1					
ANR	3419657	Callee	strdup		3419381	0					
ANR	3419658	Identifier	strdup		3419381	0					
ANR	3419659	ArgumentList	permbuf		3419381	1					
ANR	3419660	Argument	permbuf		3419381	0					
ANR	3419661	Identifier	permbuf		3419381	0					
ANR	3419662	ElseStatement	else		3419381	0					
ANR	3419663	CompoundStatement		77:11:1977:1977	3419381	0					
ANR	3419664	ExpressionStatement	"dprintf ( D_SECURITY , ""IPVERIFY: warning, strange entry %s\\n"" , permbuf )"	638:5:16694:16764	3419381	0	True				
ANR	3419665	CallExpression	"dprintf ( D_SECURITY , ""IPVERIFY: warning, strange entry %s\\n"" , permbuf )"		3419381	0					
ANR	3419666	Callee	dprintf		3419381	0					
ANR	3419667	Identifier	dprintf		3419381	0					
ANR	3419668	ArgumentList	D_SECURITY		3419381	1					
ANR	3419669	Argument	D_SECURITY		3419381	0					
ANR	3419670	Identifier	D_SECURITY		3419381	0					
ANR	3419671	Argument	"""IPVERIFY: warning, strange entry %s\\n"""		3419381	1					
ANR	3419672	PrimaryExpression	"""IPVERIFY: warning, strange entry %s\\n"""		3419381	0					
ANR	3419673	Argument	permbuf		3419381	2					
ANR	3419674	Identifier	permbuf		3419381	0					
ANR	3419675	ExpressionStatement	* slash0 ++ = 0	639:5:16771:16784	3419381	1	True				
ANR	3419676	AssignmentExpression	* slash0 ++ = 0		3419381	0		=			
ANR	3419677	UnaryOperationExpression	* slash0 ++		3419381	0					
ANR	3419678	UnaryOperator	*		3419381	0					
ANR	3419679	PostIncDecOperationExpression	slash0 ++		3419381	1					
ANR	3419680	Identifier	slash0		3419381	0					
ANR	3419681	IncDec	++		3419381	1					
ANR	3419682	PrimaryExpression	0		3419381	1					
ANR	3419683	ExpressionStatement	* user = strdup ( permbuf )	640:5:16791:16814	3419381	2	True				
ANR	3419684	AssignmentExpression	* user = strdup ( permbuf )		3419381	0		=			
ANR	3419685	UnaryOperationExpression	* user		3419381	0					
ANR	3419686	UnaryOperator	*		3419381	0					
ANR	3419687	Identifier	user		3419381	1					
ANR	3419688	CallExpression	strdup ( permbuf )		3419381	1					
ANR	3419689	Callee	strdup		3419381	0					
ANR	3419690	Identifier	strdup		3419381	0					
ANR	3419691	ArgumentList	permbuf		3419381	1					
ANR	3419692	Argument	permbuf		3419381	0					
ANR	3419693	Identifier	permbuf		3419381	0					
ANR	3419694	ExpressionStatement	* host = strdup ( slash0 )	641:5:16821:16843	3419381	3	True				
ANR	3419695	AssignmentExpression	* host = strdup ( slash0 )		3419381	0		=			
ANR	3419696	UnaryOperationExpression	* host		3419381	0					
ANR	3419697	UnaryOperator	*		3419381	0					
ANR	3419698	Identifier	host		3419381	1					
ANR	3419699	CallExpression	strdup ( slash0 )		3419381	1					
ANR	3419700	Callee	strdup		3419381	0					
ANR	3419701	Identifier	strdup		3419381	0					
ANR	3419702	ArgumentList	slash0		3419381	1					
ANR	3419703	Argument	slash0		3419381	0					
ANR	3419704	Identifier	slash0		3419381	0					
ANR	3419705	ExpressionStatement	free ( permbuf )	646:1:16864:16879	3419381	10	True				
ANR	3419706	CallExpression	free ( permbuf )		3419381	0					
ANR	3419707	Callee	free		3419381	0					
ANR	3419708	Identifier	free		3419381	0					
ANR	3419709	ArgumentList	permbuf		3419381	1					
ANR	3419710	Argument	permbuf		3419381	0					
ANR	3419711	Identifier	permbuf		3419381	0					
ANR	3419712	ReturnType	void		3419381	1					
ANR	3419713	Identifier	IpVerify :: split_entry		3419381	2					
ANR	3419714	ParameterList	"const char * perm_entry , char * * host , char * * user"		3419381	3					
ANR	3419715	Parameter	const char * perm_entry	560:29:14657:14679	3419381	0	True				
ANR	3419716	ParameterType	const char *		3419381	0					
ANR	3419717	Identifier	perm_entry		3419381	1					
ANR	3419718	Parameter	char * * host	560:54:14682:14693	3419381	1	True				
ANR	3419719	ParameterType	char * *		3419381	0					
ANR	3419720	Identifier	host		3419381	1					
ANR	3419721	Parameter	char * * user	560:68:14696:14706	3419381	2	True				
ANR	3419722	ParameterType	char * *		3419381	0					
ANR	3419723	Identifier	user		3419381	1					
ANR	3419724	CFGEntryNode	ENTRY		3419381		True				
ANR	3419725	CFGExitNode	EXIT		3419381		True				
ANR	3419726	Symbol	* host		3419381						
ANR	3419727	Symbol	* permbuf		3419381						
ANR	3419728	Symbol	* user		3419381						
ANR	3419729	Symbol	D_SECURITY		3419381						
ANR	3419730	Symbol	slash1		3419381						
ANR	3419731	Symbol	strchr		3419381						
ANR	3419732	Symbol	perm_entry		3419381						
ANR	3419733	Symbol	slash0		3419381						
ANR	3419734	Symbol	* slash0 ++		3419381						
ANR	3419735	Symbol	permbuf		3419381						
ANR	3419736	Symbol	* perm_entry		3419381						
ANR	3419737	Symbol	netaddr . from_net_string		3419381						
ANR	3419738	Symbol	at		3419381						
ANR	3419739	Symbol	host		3419381						
ANR	3419740	Symbol	colon		3419381						
ANR	3419741	Symbol	netaddr		3419381						
ANR	3419742	Symbol	strdup		3419381						
ANR	3419743	Symbol	user		3419381						
ANR	3419744	Function	IpVerify :: reconfig	649:0:16884:16931							
ANR	3419745	FunctionDef	IpVerify :: reconfig ()		3419744	0					
ANR	3419746	CompoundStatement		651:0:16910:16931	3419744	0					
ANR	3419747	ExpressionStatement	did_init = false	652:1:16913:16929	3419744	0	True				
ANR	3419748	AssignmentExpression	did_init = false		3419744	0		=			
ANR	3419749	Identifier	did_init		3419744	0					
ANR	3419750	Identifier	false		3419744	1					
ANR	3419751	ReturnType	void		3419744	1					
ANR	3419752	Identifier	IpVerify :: reconfig		3419744	2					
ANR	3419753	ParameterList			3419744	3					
ANR	3419754	CFGEntryNode	ENTRY		3419744		True				
ANR	3419755	CFGExitNode	EXIT		3419744		True				
ANR	3419756	Symbol	did_init		3419744						
ANR	3419757	Symbol	false		3419744						
ANR	3419758	Function	IpVerify :: refreshDNS	655:0:16934:17195							
ANR	3419759	FunctionDef	IpVerify :: refreshDNS ()		3419758	0					
ANR	3419760	CompoundStatement		656:23:16962:17195	3419758	0					
ANR	3419761	ExpressionStatement	reconfig ( )	661:1:17183:17193	3419758	0	True				
ANR	3419762	CallExpression	reconfig ( )		3419758	0					
ANR	3419763	Callee	reconfig		3419758	0					
ANR	3419764	Identifier	reconfig		3419758	0					
ANR	3419765	ArgumentList			3419758	1					
ANR	3419766	ReturnType	void		3419758	1					
ANR	3419767	Identifier	IpVerify :: refreshDNS		3419758	2					
ANR	3419768	ParameterList			3419758	3					
ANR	3419769	CFGEntryNode	ENTRY		3419758		True				
ANR	3419770	CFGExitNode	EXIT		3419758		True				
ANR	3419771	Function	IpVerify :: Verify	664:0:17198:25709							
ANR	3419772	FunctionDef	"IpVerify :: Verify (DCpermission perm , const condor_sockaddr & addr , const char * user , MyString * allow_reason , MyString * deny_reason)"		3419771	0					
ANR	3419773	CompoundStatement		666:0:17335:25709	3419771	0					
ANR	3419774	IdentifierDeclStatement	perm_mask_t mask ;	667:1:17338:17354	3419771	0	True				
ANR	3419775	IdentifierDecl	mask		3419771	0					
ANR	3419776	IdentifierDeclType	perm_mask_t		3419771	0					
ANR	3419777	Identifier	mask		3419771	1					
ANR	3419778	IdentifierDeclStatement	in6_addr sin6_addr ;	668:1:17357:17375	3419771	1	True				
ANR	3419779	IdentifierDecl	sin6_addr		3419771	0					
ANR	3419780	IdentifierDeclType	in6_addr		3419771	0					
ANR	3419781	Identifier	sin6_addr		3419771	1					
ANR	3419782	IdentifierDeclStatement	const char * thehost ;	669:1:17378:17397	3419771	2	True				
ANR	3419783	IdentifierDecl	* thehost		3419771	0					
ANR	3419784	IdentifierDeclType	const char *		3419771	0					
ANR	3419785	Identifier	thehost		3419771	1					
ANR	3419786	IdentifierDeclStatement	const char * who = user ;	670:4:17403:17426	3419771	3	True				
ANR	3419787	IdentifierDecl	* who = user		3419771	0					
ANR	3419788	IdentifierDeclType	const char *		3419771	0					
ANR	3419789	Identifier	who		3419771	1					
ANR	3419790	AssignmentExpression	* who = user		3419771	2		=			
ANR	3419791	Identifier	user		3419771	0					
ANR	3419792	Identifier	user		3419771	1					
ANR	3419793	IdentifierDeclStatement	MyString peer_description ;	671:1:17429:17454	3419771	4	True				
ANR	3419794	IdentifierDecl	peer_description		3419771	0					
ANR	3419795	IdentifierDeclType	MyString		3419771	0					
ANR	3419796	Identifier	peer_description		3419771	1					
ANR	3419797	IfStatement	if ( ! did_init )		3419771	5					
ANR	3419798	Condition	! did_init	673:5:17508:17516	3419771	0	True				
ANR	3419799	UnaryOperationExpression	! did_init		3419771	0					
ANR	3419800	UnaryOperator	!		3419771	0					
ANR	3419801	Identifier	did_init		3419771	1					
ANR	3419802	CompoundStatement		8:17:184:184	3419771	1					
ANR	3419803	ExpressionStatement	Init ( )	674:2:17524:17530	3419771	0	True				
ANR	3419804	CallExpression	Init ( )		3419771	0					
ANR	3419805	Callee	Init		3419771	0					
ANR	3419806	Identifier	Init		3419771	0					
ANR	3419807	ArgumentList			3419771	1					
ANR	3419808	SwitchStatement	switch ( perm )		3419771	6					
ANR	3419809	Condition	perm	682:10:17695:17698	3419771	0	True				
ANR	3419810	Identifier	perm		3419771	0					
ANR	3419811	CompoundStatement		17:17:366:366	3419771	1					
ANR	3419812	Label	case ALLOW :	684:1:17706:17716	3419771	0	True				
ANR	3419813	Identifier	ALLOW		3419771	0					
ANR	3419814	ReturnStatement	return USER_AUTH_SUCCESS ;	685:2:17720:17744	3419771	1	True				
ANR	3419815	Identifier	USER_AUTH_SUCCESS		3419771	0					
ANR	3419816	BreakStatement	break ;	686:2:17748:17753	3419771	2	True				
ANR	3419817	Label	default :	688:1:17757:17764	3419771	3	True				
ANR	3419818	Identifier	default		3419771	0					
ANR	3419819	BreakStatement	break ;	689:2:17768:17773	3419771	4	True				
ANR	3419820	ExpressionStatement	sin6_addr = addr . to_ipv6_address ( )	692:1:17780:17814	3419771	7	True				
ANR	3419821	AssignmentExpression	sin6_addr = addr . to_ipv6_address ( )		3419771	0		=			
ANR	3419822	Identifier	sin6_addr		3419771	0					
ANR	3419823	CallExpression	addr . to_ipv6_address ( )		3419771	1					
ANR	3419824	Callee	addr . to_ipv6_address		3419771	0					
ANR	3419825	MemberAccess	addr . to_ipv6_address		3419771	0					
ANR	3419826	Identifier	addr		3419771	0					
ANR	3419827	Identifier	to_ipv6_address		3419771	1					
ANR	3419828	ArgumentList			3419771	1					
ANR	3419829	ExpressionStatement	mask = 0	693:1:17817:17825	3419771	8	True				
ANR	3419830	AssignmentExpression	mask = 0		3419771	0		=			
ANR	3419831	Identifier	mask		3419771	0					
ANR	3419832	PrimaryExpression	0		3419771	1					
ANR	3419833	IfStatement	if ( who == NULL || * who == '\\0' )		3419771	9					
ANR	3419834	Condition	who == NULL || * who == '\\0'	695:8:17900:17926	3419771	0	True				
ANR	3419835	OrExpression	who == NULL || * who == '\\0'		3419771	0		||			
ANR	3419836	EqualityExpression	who == NULL		3419771	0		==			
ANR	3419837	Identifier	who		3419771	0					
ANR	3419838	Identifier	NULL		3419771	1					
ANR	3419839	EqualityExpression	* who == '\\0'		3419771	1		==			
ANR	3419840	UnaryOperationExpression	* who		3419771	0					
ANR	3419841	UnaryOperator	*		3419771	0					
ANR	3419842	Identifier	who		3419771	1					
ANR	3419843	PrimaryExpression	'\\0'		3419771	1					
ANR	3419844	CompoundStatement		30:37:593:593	3419771	1					
ANR	3419845	ExpressionStatement	who = TotallyWild	696:8:17939:17956	3419771	0	True				
ANR	3419846	AssignmentExpression	who = TotallyWild		3419771	0		=			
ANR	3419847	Identifier	who		3419771	0					
ANR	3419848	Identifier	TotallyWild		3419771	1					
ANR	3419849	IfStatement	if ( ! PermTypeArray [ perm ] )		3419771	10					
ANR	3419850	Condition	! PermTypeArray [ perm ]	699:6:17971:17990	3419771	0	True				
ANR	3419851	UnaryOperationExpression	! PermTypeArray [ perm ]		3419771	0					
ANR	3419852	UnaryOperator	!		3419771	0					
ANR	3419853	ArrayIndexing	PermTypeArray [ perm ]		3419771	1					
ANR	3419854	Identifier	PermTypeArray		3419771	0					
ANR	3419855	Identifier	perm		3419771	1					
ANR	3419856	CompoundStatement		34:29:658:658	3419771	1					
ANR	3419857	ExpressionStatement	"EXCEPT ( ""IpVerify::Verify: called with unknown permission %d\\n"" , perm )"	700:2:17998:18066	3419771	0	True				
ANR	3419858	CallExpression	"EXCEPT ( ""IpVerify::Verify: called with unknown permission %d\\n"" , perm )"		3419771	0					
ANR	3419859	Callee	EXCEPT		3419771	0					
ANR	3419860	Identifier	EXCEPT		3419771	0					
ANR	3419861	ArgumentList	"""IpVerify::Verify: called with unknown permission %d\\n"""		3419771	1					
ANR	3419862	Argument	"""IpVerify::Verify: called with unknown permission %d\\n"""		3419771	0					
ANR	3419863	PrimaryExpression	"""IpVerify::Verify: called with unknown permission %d\\n"""		3419771	0					
ANR	3419864	Argument	perm		3419771	1					
ANR	3419865	Identifier	perm		3419771	0					
ANR	3419866	IfStatement	if ( PunchedHoleArray [ perm ] != NULL )		3419771	11					
ANR	3419867	Condition	PunchedHoleArray [ perm ] != NULL	714:6:18608:18637	3419771	0	True				
ANR	3419868	EqualityExpression	PunchedHoleArray [ perm ] != NULL		3419771	0		!=			
ANR	3419869	ArrayIndexing	PunchedHoleArray [ perm ]		3419771	0					
ANR	3419870	Identifier	PunchedHoleArray		3419771	0					
ANR	3419871	Identifier	perm		3419771	1					
ANR	3419872	Identifier	NULL		3419771	1					
ANR	3419873	CompoundStatement		55:2:1485:1494	3419771	1					
ANR	3419874	IdentifierDeclStatement	HolePunchTable_t * hpt = PunchedHoleArray [ perm ] ;	715:2:18645:18691	3419771	0	True				
ANR	3419875	IdentifierDecl	* hpt = PunchedHoleArray [ perm ]		3419771	0					
ANR	3419876	IdentifierDeclType	HolePunchTable_t *		3419771	0					
ANR	3419877	Identifier	hpt		3419771	1					
ANR	3419878	AssignmentExpression	* hpt = PunchedHoleArray [ perm ]		3419771	2		=			
ANR	3419879	Identifier	hpt		3419771	0					
ANR	3419880	ArrayIndexing	PunchedHoleArray [ perm ]		3419771	1					
ANR	3419881	Identifier	PunchedHoleArray		3419771	0					
ANR	3419882	Identifier	perm		3419771	1					
ANR	3419883	IdentifierDeclStatement	MyString ip_str_buf = addr . to_ip_string ( ) ;	716:2:18695:18736	3419771	1	True				
ANR	3419884	IdentifierDecl	ip_str_buf = addr . to_ip_string ( )		3419771	0					
ANR	3419885	IdentifierDeclType	MyString		3419771	0					
ANR	3419886	Identifier	ip_str_buf		3419771	1					
ANR	3419887	AssignmentExpression	ip_str_buf = addr . to_ip_string ( )		3419771	2		=			
ANR	3419888	Identifier	ip_str_buf		3419771	0					
ANR	3419889	CallExpression	addr . to_ip_string ( )		3419771	1					
ANR	3419890	Callee	addr . to_ip_string		3419771	0					
ANR	3419891	MemberAccess	addr . to_ip_string		3419771	0					
ANR	3419892	Identifier	addr		3419771	0					
ANR	3419893	Identifier	to_ip_string		3419771	1					
ANR	3419894	ArgumentList			3419771	1					
ANR	3419895	IdentifierDeclStatement	const char * ip_str = ip_str_buf . Value ( ) ;	717:2:18740:18779	3419771	2	True				
ANR	3419896	IdentifierDecl	* ip_str = ip_str_buf . Value ( )		3419771	0					
ANR	3419897	IdentifierDeclType	const char *		3419771	0					
ANR	3419898	Identifier	ip_str		3419771	1					
ANR	3419899	AssignmentExpression	* ip_str = ip_str_buf . Value ( )		3419771	2		=			
ANR	3419900	Identifier	ip_str		3419771	0					
ANR	3419901	CallExpression	ip_str_buf . Value ( )		3419771	1					
ANR	3419902	Callee	ip_str_buf . Value		3419771	0					
ANR	3419903	MemberAccess	ip_str_buf . Value		3419771	0					
ANR	3419904	Identifier	ip_str_buf		3419771	0					
ANR	3419905	Identifier	Value		3419771	1					
ANR	3419906	ArgumentList			3419771	1					
ANR	3419907	IdentifierDeclStatement	MyString id_with_ip ;	718:2:18783:18802	3419771	3	True				
ANR	3419908	IdentifierDecl	id_with_ip		3419771	0					
ANR	3419909	IdentifierDeclType	MyString		3419771	0					
ANR	3419910	Identifier	id_with_ip		3419771	1					
ANR	3419911	IdentifierDeclStatement	MyString id ;	719:2:18806:18817	3419771	4	True				
ANR	3419912	IdentifierDecl	id		3419771	0					
ANR	3419913	IdentifierDeclType	MyString		3419771	0					
ANR	3419914	Identifier	id		3419771	1					
ANR	3419915	IdentifierDeclStatement	int count ;	720:2:18821:18830	3419771	5	True				
ANR	3419916	IdentifierDecl	count		3419771	0					
ANR	3419917	IdentifierDeclType	int		3419771	0					
ANR	3419918	Identifier	count		3419771	1					
ANR	3419919	IfStatement	if ( who != TotallyWild )		3419771	6					
ANR	3419920	Condition	who != TotallyWild	721:7:18839:18856	3419771	0	True				
ANR	3419921	EqualityExpression	who != TotallyWild		3419771	0		!=			
ANR	3419922	Identifier	who		3419771	0					
ANR	3419923	Identifier	TotallyWild		3419771	1					
ANR	3419924	CompoundStatement		56:28:1524:1524	3419771	1					
ANR	3419925	ExpressionStatement	"id_with_ip . sprintf ( ""%s/%s"" , who , ip_str )"	722:3:18865:18905	3419771	0	True				
ANR	3419926	CallExpression	"id_with_ip . sprintf ( ""%s/%s"" , who , ip_str )"		3419771	0					
ANR	3419927	Callee	id_with_ip . sprintf		3419771	0					
ANR	3419928	MemberAccess	id_with_ip . sprintf		3419771	0					
ANR	3419929	Identifier	id_with_ip		3419771	0					
ANR	3419930	Identifier	sprintf		3419771	1					
ANR	3419931	ArgumentList	"""%s/%s"""		3419771	1					
ANR	3419932	Argument	"""%s/%s"""		3419771	0					
ANR	3419933	PrimaryExpression	"""%s/%s"""		3419771	0					
ANR	3419934	Argument	who		3419771	1					
ANR	3419935	Identifier	who		3419771	0					
ANR	3419936	Argument	ip_str		3419771	2					
ANR	3419937	Identifier	ip_str		3419771	0					
ANR	3419938	ExpressionStatement	id = who	723:3:18910:18918	3419771	1	True				
ANR	3419939	AssignmentExpression	id = who		3419771	0		=			
ANR	3419940	Identifier	id		3419771	0					
ANR	3419941	Identifier	who		3419771	1					
ANR	3419942	IfStatement	"if ( hpt -> lookup ( id , count ) != - 1 )"		3419771	2					
ANR	3419943	Condition	"hpt -> lookup ( id , count ) != - 1"	724:8:18928:18955	3419771	0	True				
ANR	3419944	EqualityExpression	"hpt -> lookup ( id , count ) != - 1"		3419771	0		!=			
ANR	3419945	CallExpression	"hpt -> lookup ( id , count )"		3419771	0					
ANR	3419946	Callee	hpt -> lookup		3419771	0					
ANR	3419947	PtrMemberAccess	hpt -> lookup		3419771	0					
ANR	3419948	Identifier	hpt		3419771	0					
ANR	3419949	Identifier	lookup		3419771	1					
ANR	3419950	ArgumentList	id		3419771	1					
ANR	3419951	Argument	id		3419771	0					
ANR	3419952	Identifier	id		3419771	0					
ANR	3419953	Argument	count		3419771	1					
ANR	3419954	Identifier	count		3419771	0					
ANR	3419955	UnaryOperationExpression	- 1		3419771	1					
ANR	3419956	UnaryOperator	-		3419771	0					
ANR	3419957	PrimaryExpression	1		3419771	1					
ANR	3419958	CompoundStatement		59:39:1623:1623	3419771	1					
ANR	3419959	IfStatement	if ( allow_reason )		3419771	0					
ANR	3419960	Condition	allow_reason	725:8:18969:18980	3419771	0	True				
ANR	3419961	Identifier	allow_reason		3419771	0					
ANR	3419962	CompoundStatement		60:23:1648:1648	3419771	1					
ANR	3419963	ExpressionStatement	"allow_reason -> sprintf ( ""%s authorization has been made automatic for %s"" , PermString ( perm ) , id . Value ( ) )"	726:5:18991:19107	3419771	0	True				
ANR	3419964	CallExpression	"allow_reason -> sprintf ( ""%s authorization has been made automatic for %s"" , PermString ( perm ) , id . Value ( ) )"		3419771	0					
ANR	3419965	Callee	allow_reason -> sprintf		3419771	0					
ANR	3419966	PtrMemberAccess	allow_reason -> sprintf		3419771	0					
ANR	3419967	Identifier	allow_reason		3419771	0					
ANR	3419968	Identifier	sprintf		3419771	1					
ANR	3419969	ArgumentList	"""%s authorization has been made automatic for %s"""		3419771	1					
ANR	3419970	Argument	"""%s authorization has been made automatic for %s"""		3419771	0					
ANR	3419971	PrimaryExpression	"""%s authorization has been made automatic for %s"""		3419771	0					
ANR	3419972	Argument	PermString ( perm )		3419771	1					
ANR	3419973	CallExpression	PermString ( perm )		3419771	0					
ANR	3419974	Callee	PermString		3419771	0					
ANR	3419975	Identifier	PermString		3419771	0					
ANR	3419976	ArgumentList	perm		3419771	1					
ANR	3419977	Argument	perm		3419771	0					
ANR	3419978	Identifier	perm		3419771	0					
ANR	3419979	Argument	id . Value ( )		3419771	2					
ANR	3419980	CallExpression	id . Value ( )		3419771	0					
ANR	3419981	Callee	id . Value		3419771	0					
ANR	3419982	MemberAccess	id . Value		3419771	0					
ANR	3419983	Identifier	id		3419771	0					
ANR	3419984	Identifier	Value		3419771	1					
ANR	3419985	ArgumentList			3419771	1					
ANR	3419986	ReturnStatement	return USER_AUTH_SUCCESS ;	730:4:19119:19143	3419771	1	True				
ANR	3419987	Identifier	USER_AUTH_SUCCESS		3419771	0					
ANR	3419988	IfStatement	"if ( hpt -> lookup ( id_with_ip , count ) != - 1 )"		3419771	3					
ANR	3419989	Condition	"hpt -> lookup ( id_with_ip , count ) != - 1"	732:8:19158:19193	3419771	0	True				
ANR	3419990	EqualityExpression	"hpt -> lookup ( id_with_ip , count ) != - 1"		3419771	0		!=			
ANR	3419991	CallExpression	"hpt -> lookup ( id_with_ip , count )"		3419771	0					
ANR	3419992	Callee	hpt -> lookup		3419771	0					
ANR	3419993	PtrMemberAccess	hpt -> lookup		3419771	0					
ANR	3419994	Identifier	hpt		3419771	0					
ANR	3419995	Identifier	lookup		3419771	1					
ANR	3419996	ArgumentList	id_with_ip		3419771	1					
ANR	3419997	Argument	id_with_ip		3419771	0					
ANR	3419998	Identifier	id_with_ip		3419771	0					
ANR	3419999	Argument	count		3419771	1					
ANR	3420000	Identifier	count		3419771	0					
ANR	3420001	UnaryOperationExpression	- 1		3419771	1					
ANR	3420002	UnaryOperator	-		3419771	0					
ANR	3420003	PrimaryExpression	1		3419771	1					
ANR	3420004	CompoundStatement		67:47:1861:1861	3419771	1					
ANR	3420005	IfStatement	if ( allow_reason )		3419771	0					
ANR	3420006	Condition	allow_reason	733:8:19207:19218	3419771	0	True				
ANR	3420007	Identifier	allow_reason		3419771	0					
ANR	3420008	CompoundStatement		68:23:1886:1886	3419771	1					
ANR	3420009	ExpressionStatement	"allow_reason -> sprintf ( ""%s authorization has been made automatic for %s"" , PermString ( perm ) , id_with_ip . Value ( ) )"	734:5:19229:19353	3419771	0	True				
ANR	3420010	CallExpression	"allow_reason -> sprintf ( ""%s authorization has been made automatic for %s"" , PermString ( perm ) , id_with_ip . Value ( ) )"		3419771	0					
ANR	3420011	Callee	allow_reason -> sprintf		3419771	0					
ANR	3420012	PtrMemberAccess	allow_reason -> sprintf		3419771	0					
ANR	3420013	Identifier	allow_reason		3419771	0					
ANR	3420014	Identifier	sprintf		3419771	1					
ANR	3420015	ArgumentList	"""%s authorization has been made automatic for %s"""		3419771	1					
ANR	3420016	Argument	"""%s authorization has been made automatic for %s"""		3419771	0					
ANR	3420017	PrimaryExpression	"""%s authorization has been made automatic for %s"""		3419771	0					
ANR	3420018	Argument	PermString ( perm )		3419771	1					
ANR	3420019	CallExpression	PermString ( perm )		3419771	0					
ANR	3420020	Callee	PermString		3419771	0					
ANR	3420021	Identifier	PermString		3419771	0					
ANR	3420022	ArgumentList	perm		3419771	1					
ANR	3420023	Argument	perm		3419771	0					
ANR	3420024	Identifier	perm		3419771	0					
ANR	3420025	Argument	id_with_ip . Value ( )		3419771	2					
ANR	3420026	CallExpression	id_with_ip . Value ( )		3419771	0					
ANR	3420027	Callee	id_with_ip . Value		3419771	0					
ANR	3420028	MemberAccess	id_with_ip . Value		3419771	0					
ANR	3420029	Identifier	id_with_ip		3419771	0					
ANR	3420030	Identifier	Value		3419771	1					
ANR	3420031	ArgumentList			3419771	1					
ANR	3420032	ReturnStatement	return USER_AUTH_SUCCESS ;	738:4:19365:19389	3419771	1	True				
ANR	3420033	Identifier	USER_AUTH_SUCCESS		3419771	0					
ANR	3420034	ExpressionStatement	id = ip_str	741:2:19402:19413	3419771	7	True				
ANR	3420035	AssignmentExpression	id = ip_str		3419771	0		=			
ANR	3420036	Identifier	id		3419771	0					
ANR	3420037	Identifier	ip_str		3419771	1					
ANR	3420038	IfStatement	"if ( hpt -> lookup ( id , count ) != - 1 )"		3419771	8					
ANR	3420039	Condition	"hpt -> lookup ( id , count ) != - 1"	742:7:19422:19449	3419771	0	True				
ANR	3420040	EqualityExpression	"hpt -> lookup ( id , count ) != - 1"		3419771	0		!=			
ANR	3420041	CallExpression	"hpt -> lookup ( id , count )"		3419771	0					
ANR	3420042	Callee	hpt -> lookup		3419771	0					
ANR	3420043	PtrMemberAccess	hpt -> lookup		3419771	0					
ANR	3420044	Identifier	hpt		3419771	0					
ANR	3420045	Identifier	lookup		3419771	1					
ANR	3420046	ArgumentList	id		3419771	1					
ANR	3420047	Argument	id		3419771	0					
ANR	3420048	Identifier	id		3419771	0					
ANR	3420049	Argument	count		3419771	1					
ANR	3420050	Identifier	count		3419771	0					
ANR	3420051	UnaryOperationExpression	- 1		3419771	1					
ANR	3420052	UnaryOperator	-		3419771	0					
ANR	3420053	PrimaryExpression	1		3419771	1					
ANR	3420054	CompoundStatement		77:38:2117:2117	3419771	1					
ANR	3420055	IfStatement	if ( allow_reason )		3419771	0					
ANR	3420056	Condition	allow_reason	743:7:19462:19473	3419771	0	True				
ANR	3420057	Identifier	allow_reason		3419771	0					
ANR	3420058	CompoundStatement		78:22:2141:2141	3419771	1					
ANR	3420059	ExpressionStatement	"allow_reason -> sprintf ( ""%s authorization has been made automatic for %s"" , PermString ( perm ) , id . Value ( ) )"	744:4:19483:19597	3419771	0	True				
ANR	3420060	CallExpression	"allow_reason -> sprintf ( ""%s authorization has been made automatic for %s"" , PermString ( perm ) , id . Value ( ) )"		3419771	0					
ANR	3420061	Callee	allow_reason -> sprintf		3419771	0					
ANR	3420062	PtrMemberAccess	allow_reason -> sprintf		3419771	0					
ANR	3420063	Identifier	allow_reason		3419771	0					
ANR	3420064	Identifier	sprintf		3419771	1					
ANR	3420065	ArgumentList	"""%s authorization has been made automatic for %s"""		3419771	1					
ANR	3420066	Argument	"""%s authorization has been made automatic for %s"""		3419771	0					
ANR	3420067	PrimaryExpression	"""%s authorization has been made automatic for %s"""		3419771	0					
ANR	3420068	Argument	PermString ( perm )		3419771	1					
ANR	3420069	CallExpression	PermString ( perm )		3419771	0					
ANR	3420070	Callee	PermString		3419771	0					
ANR	3420071	Identifier	PermString		3419771	0					
ANR	3420072	ArgumentList	perm		3419771	1					
ANR	3420073	Argument	perm		3419771	0					
ANR	3420074	Identifier	perm		3419771	0					
ANR	3420075	Argument	id . Value ( )		3419771	2					
ANR	3420076	CallExpression	id . Value ( )		3419771	0					
ANR	3420077	Callee	id . Value		3419771	0					
ANR	3420078	MemberAccess	id . Value		3419771	0					
ANR	3420079	Identifier	id		3419771	0					
ANR	3420080	Identifier	Value		3419771	1					
ANR	3420081	ArgumentList			3419771	1					
ANR	3420082	ReturnStatement	return USER_AUTH_SUCCESS ;	748:3:19607:19631	3419771	1	True				
ANR	3420083	Identifier	USER_AUTH_SUCCESS		3419771	0					
ANR	3420084	IfStatement	if ( PermTypeArray [ perm ] -> behavior == USERVERIFY_ALLOW )		3419771	12					
ANR	3420085	Condition	PermTypeArray [ perm ] -> behavior == USERVERIFY_ALLOW	752:6:19647:19695	3419771	0	True				
ANR	3420086	EqualityExpression	PermTypeArray [ perm ] -> behavior == USERVERIFY_ALLOW		3419771	0		==			
ANR	3420087	PtrMemberAccess	PermTypeArray [ perm ] -> behavior		3419771	0					
ANR	3420088	ArrayIndexing	PermTypeArray [ perm ]		3419771	0					
ANR	3420089	Identifier	PermTypeArray		3419771	0					
ANR	3420090	Identifier	perm		3419771	1					
ANR	3420091	Identifier	behavior		3419771	1					
ANR	3420092	Identifier	USERVERIFY_ALLOW		3419771	1					
ANR	3420093	CompoundStatement		87:58:2363:2363	3419771	1					
ANR	3420094	IfStatement	if ( allow_reason )		3419771	0					
ANR	3420095	Condition	allow_reason	755:6:19782:19793	3419771	0	True				
ANR	3420096	Identifier	allow_reason		3419771	0					
ANR	3420097	CompoundStatement		90:21:2461:2461	3419771	1					
ANR	3420098	ExpressionStatement	"allow_reason -> sprintf ( ""%s authorization policy allows access by anyone"" , PermString ( perm ) )"	756:3:19802:19901	3419771	0	True				
ANR	3420099	CallExpression	"allow_reason -> sprintf ( ""%s authorization policy allows access by anyone"" , PermString ( perm ) )"		3419771	0					
ANR	3420100	Callee	allow_reason -> sprintf		3419771	0					
ANR	3420101	PtrMemberAccess	allow_reason -> sprintf		3419771	0					
ANR	3420102	Identifier	allow_reason		3419771	0					
ANR	3420103	Identifier	sprintf		3419771	1					
ANR	3420104	ArgumentList	"""%s authorization policy allows access by anyone"""		3419771	1					
ANR	3420105	Argument	"""%s authorization policy allows access by anyone"""		3419771	0					
ANR	3420106	PrimaryExpression	"""%s authorization policy allows access by anyone"""		3419771	0					
ANR	3420107	Argument	PermString ( perm )		3419771	1					
ANR	3420108	CallExpression	PermString ( perm )		3419771	0					
ANR	3420109	Callee	PermString		3419771	0					
ANR	3420110	Identifier	PermString		3419771	0					
ANR	3420111	ArgumentList	perm		3419771	1					
ANR	3420112	Argument	perm		3419771	0					
ANR	3420113	Identifier	perm		3419771	0					
ANR	3420114	ReturnStatement	return USER_AUTH_SUCCESS ;	760:2:19909:19933	3419771	1	True				
ANR	3420115	Identifier	USER_AUTH_SUCCESS		3419771	0					
ANR	3420116	IfStatement	if ( PermTypeArray [ perm ] -> behavior == USERVERIFY_DENY )		3419771	13					
ANR	3420117	Condition	PermTypeArray [ perm ] -> behavior == USERVERIFY_DENY	763:6:19947:19994	3419771	0	True				
ANR	3420118	EqualityExpression	PermTypeArray [ perm ] -> behavior == USERVERIFY_DENY		3419771	0		==			
ANR	3420119	PtrMemberAccess	PermTypeArray [ perm ] -> behavior		3419771	0					
ANR	3420120	ArrayIndexing	PermTypeArray [ perm ]		3419771	0					
ANR	3420121	Identifier	PermTypeArray		3419771	0					
ANR	3420122	Identifier	perm		3419771	1					
ANR	3420123	Identifier	behavior		3419771	1					
ANR	3420124	Identifier	USERVERIFY_DENY		3419771	1					
ANR	3420125	CompoundStatement		98:57:2662:2662	3419771	1					
ANR	3420126	IfStatement	if ( deny_reason )		3419771	0					
ANR	3420127	Condition	deny_reason	765:6:20017:20027	3419771	0	True				
ANR	3420128	Identifier	deny_reason		3419771	0					
ANR	3420129	CompoundStatement		100:20:2695:2695	3419771	1					
ANR	3420130	ExpressionStatement	"deny_reason -> sprintf ( ""%s authorization policy denies all access"" , PermString ( perm ) )"	766:3:20036:20128	3419771	0	True				
ANR	3420131	CallExpression	"deny_reason -> sprintf ( ""%s authorization policy denies all access"" , PermString ( perm ) )"		3419771	0					
ANR	3420132	Callee	deny_reason -> sprintf		3419771	0					
ANR	3420133	PtrMemberAccess	deny_reason -> sprintf		3419771	0					
ANR	3420134	Identifier	deny_reason		3419771	0					
ANR	3420135	Identifier	sprintf		3419771	1					
ANR	3420136	ArgumentList	"""%s authorization policy denies all access"""		3419771	1					
ANR	3420137	Argument	"""%s authorization policy denies all access"""		3419771	0					
ANR	3420138	PrimaryExpression	"""%s authorization policy denies all access"""		3419771	0					
ANR	3420139	Argument	PermString ( perm )		3419771	1					
ANR	3420140	CallExpression	PermString ( perm )		3419771	0					
ANR	3420141	Callee	PermString		3419771	0					
ANR	3420142	Identifier	PermString		3419771	0					
ANR	3420143	ArgumentList	perm		3419771	1					
ANR	3420144	Argument	perm		3419771	0					
ANR	3420145	Identifier	perm		3419771	0					
ANR	3420146	ReturnStatement	return USER_AUTH_FAILURE ;	770:2:20136:20160	3419771	1	True				
ANR	3420147	Identifier	USER_AUTH_FAILURE		3419771	0					
ANR	3420148	IfStatement	"if ( LookupCachedVerifyResult ( perm , sin6_addr , who , mask ) )"		3419771	14					
ANR	3420149	Condition	"LookupCachedVerifyResult ( perm , sin6_addr , who , mask )"	773:5:20173:20221	3419771	0	True				
ANR	3420150	CallExpression	"LookupCachedVerifyResult ( perm , sin6_addr , who , mask )"		3419771	0					
ANR	3420151	Callee	LookupCachedVerifyResult		3419771	0					
ANR	3420152	Identifier	LookupCachedVerifyResult		3419771	0					
ANR	3420153	ArgumentList	perm		3419771	1					
ANR	3420154	Argument	perm		3419771	0					
ANR	3420155	Identifier	perm		3419771	0					
ANR	3420156	Argument	sin6_addr		3419771	1					
ANR	3420157	Identifier	sin6_addr		3419771	0					
ANR	3420158	Argument	who		3419771	2					
ANR	3420159	Identifier	who		3419771	0					
ANR	3420160	Argument	mask		3419771	3					
ANR	3420161	Identifier	mask		3419771	0					
ANR	3420162	CompoundStatement		108:57:2889:2889	3419771	1					
ANR	3420163	IfStatement	if ( deny_reason && ( mask & deny_mask ( perm ) ) )		3419771	0					
ANR	3420164	Condition	deny_reason && ( mask & deny_mask ( perm ) )	774:6:20233:20269	3419771	0	True				
ANR	3420165	AndExpression	deny_reason && ( mask & deny_mask ( perm ) )		3419771	0		&&			
ANR	3420166	Identifier	deny_reason		3419771	0					
ANR	3420167	BitAndExpression	mask & deny_mask ( perm )		3419771	1		&			
ANR	3420168	Identifier	mask		3419771	0					
ANR	3420169	CallExpression	deny_mask ( perm )		3419771	1					
ANR	3420170	Callee	deny_mask		3419771	0					
ANR	3420171	Identifier	deny_mask		3419771	0					
ANR	3420172	ArgumentList	perm		3419771	1					
ANR	3420173	Argument	perm		3419771	0					
ANR	3420174	Identifier	perm		3419771	0					
ANR	3420175	CompoundStatement		109:46:2937:2937	3419771	1					
ANR	3420176	ExpressionStatement	"deny_reason -> sprintf ( ""cached result for %s; see first case for the full reason"" , PermString ( perm ) )"	775:3:20278:20385	3419771	0	True				
ANR	3420177	CallExpression	"deny_reason -> sprintf ( ""cached result for %s; see first case for the full reason"" , PermString ( perm ) )"		3419771	0					
ANR	3420178	Callee	deny_reason -> sprintf		3419771	0					
ANR	3420179	PtrMemberAccess	deny_reason -> sprintf		3419771	0					
ANR	3420180	Identifier	deny_reason		3419771	0					
ANR	3420181	Identifier	sprintf		3419771	1					
ANR	3420182	ArgumentList	"""cached result for %s; see first case for the full reason"""		3419771	1					
ANR	3420183	Argument	"""cached result for %s; see first case for the full reason"""		3419771	0					
ANR	3420184	PrimaryExpression	"""cached result for %s; see first case for the full reason"""		3419771	0					
ANR	3420185	Argument	PermString ( perm )		3419771	1					
ANR	3420186	CallExpression	PermString ( perm )		3419771	0					
ANR	3420187	Callee	PermString		3419771	0					
ANR	3420188	Identifier	PermString		3419771	0					
ANR	3420189	ArgumentList	perm		3419771	1					
ANR	3420190	Argument	perm		3419771	0					
ANR	3420191	Identifier	perm		3419771	0					
ANR	3420192	ElseStatement	else		3419771	0					
ANR	3420193	IfStatement	if ( allow_reason && ( mask & allow_mask ( perm ) ) )		3419771	0					
ANR	3420194	Condition	allow_reason && ( mask & allow_mask ( perm ) )	779:11:20402:20440	3419771	0	True				
ANR	3420195	AndExpression	allow_reason && ( mask & allow_mask ( perm ) )		3419771	0		&&			
ANR	3420196	Identifier	allow_reason		3419771	0					
ANR	3420197	BitAndExpression	mask & allow_mask ( perm )		3419771	1		&			
ANR	3420198	Identifier	mask		3419771	0					
ANR	3420199	CallExpression	allow_mask ( perm )		3419771	1					
ANR	3420200	Callee	allow_mask		3419771	0					
ANR	3420201	Identifier	allow_mask		3419771	0					
ANR	3420202	ArgumentList	perm		3419771	1					
ANR	3420203	Argument	perm		3419771	0					
ANR	3420204	Identifier	perm		3419771	0					
ANR	3420205	CompoundStatement		114:53:3108:3108	3419771	1					
ANR	3420206	ExpressionStatement	"allow_reason -> sprintf ( ""cached result for %s; see first case for the full reason"" , PermString ( perm ) )"	780:3:20449:20557	3419771	0	True				
ANR	3420207	CallExpression	"allow_reason -> sprintf ( ""cached result for %s; see first case for the full reason"" , PermString ( perm ) )"		3419771	0					
ANR	3420208	Callee	allow_reason -> sprintf		3419771	0					
ANR	3420209	PtrMemberAccess	allow_reason -> sprintf		3419771	0					
ANR	3420210	Identifier	allow_reason		3419771	0					
ANR	3420211	Identifier	sprintf		3419771	1					
ANR	3420212	ArgumentList	"""cached result for %s; see first case for the full reason"""		3419771	1					
ANR	3420213	Argument	"""cached result for %s; see first case for the full reason"""		3419771	0					
ANR	3420214	PrimaryExpression	"""cached result for %s; see first case for the full reason"""		3419771	0					
ANR	3420215	Argument	PermString ( perm )		3419771	1					
ANR	3420216	CallExpression	PermString ( perm )		3419771	0					
ANR	3420217	Callee	PermString		3419771	0					
ANR	3420218	Identifier	PermString		3419771	0					
ANR	3420219	ArgumentList	perm		3419771	1					
ANR	3420220	Argument	perm		3419771	0					
ANR	3420221	Identifier	perm		3419771	0					
ANR	3420222	ElseStatement	else		3419771	0					
ANR	3420223	CompoundStatement		191:2:5591:5624	3419771	0					
ANR	3420224	ExpressionStatement	mask = 0	786:2:20576:20584	3419771	0	True				
ANR	3420225	AssignmentExpression	mask = 0		3419771	0		=			
ANR	3420226	Identifier	mask		3419771	0					
ANR	3420227	PrimaryExpression	0		3419771	1					
ANR	3420228	IdentifierDeclStatement	perm_mask_t const deny_resolved = deny_mask ( perm ) ;	789:2:20654:20703	3419771	1	True				
ANR	3420229	IdentifierDecl	deny_resolved = deny_mask ( perm )		3419771	0					
ANR	3420230	IdentifierDeclType	perm_mask_t const		3419771	0					
ANR	3420231	Identifier	deny_resolved		3419771	1					
ANR	3420232	AssignmentExpression	deny_resolved = deny_mask ( perm )		3419771	2		=			
ANR	3420233	Identifier	deny_resolved		3419771	0					
ANR	3420234	CallExpression	deny_mask ( perm )		3419771	1					
ANR	3420235	Callee	deny_mask		3419771	0					
ANR	3420236	Identifier	deny_mask		3419771	0					
ANR	3420237	ArgumentList	perm		3419771	1					
ANR	3420238	Argument	perm		3419771	0					
ANR	3420239	Identifier	perm		3419771	0					
ANR	3420240	IdentifierDeclStatement	perm_mask_t const allow_resolved = allow_mask ( perm ) | deny_mask ( perm ) ;	792:2:20788:20855	3419771	2	True				
ANR	3420241	IdentifierDecl	allow_resolved = allow_mask ( perm ) | deny_mask ( perm )		3419771	0					
ANR	3420242	IdentifierDeclType	perm_mask_t const		3419771	0					
ANR	3420243	Identifier	allow_resolved		3419771	1					
ANR	3420244	AssignmentExpression	allow_resolved = allow_mask ( perm ) | deny_mask ( perm )		3419771	2		=			
ANR	3420245	Identifier	allow_resolved		3419771	0					
ANR	3420246	InclusiveOrExpression	allow_mask ( perm ) | deny_mask ( perm )		3419771	1		|			
ANR	3420247	CallExpression	allow_mask ( perm )		3419771	0					
ANR	3420248	Callee	allow_mask		3419771	0					
ANR	3420249	Identifier	allow_mask		3419771	0					
ANR	3420250	ArgumentList	perm		3419771	1					
ANR	3420251	Argument	perm		3419771	0					
ANR	3420252	Identifier	perm		3419771	0					
ANR	3420253	CallExpression	deny_mask ( perm )		3419771	1					
ANR	3420254	Callee	deny_mask		3419771	0					
ANR	3420255	Identifier	deny_mask		3419771	0					
ANR	3420256	ArgumentList	perm		3419771	1					
ANR	3420257	Argument	perm		3419771	0					
ANR	3420258	Identifier	perm		3419771	0					
ANR	3420259	Statement	char	795:2:20910:20913	3419771	3	True				
ANR	3420260	Statement	ipstr	795:7:20915:20919	3419771	4	True				
ANR	3420261	Statement	[	795:12:20920:20920	3419771	5	True				
ANR	3420262	Statement	INET6_ADDRSTRLEN	795:13:20921:20936	3419771	6	True				
ANR	3420263	Statement	]	795:29:20937:20937	3419771	7	True				
ANR	3420264	Statement	=	795:31:20939:20939	3419771	8	True				
ANR	3420265	CompoundStatement		130:33:3605:3605	3419771	9					
ANR	3420266	Statement	0	795:35:20943:20943	3419771	0	True				
ANR	3420267	Statement	","	795:36:20944:20944	3419771	1	True				
ANR	3420268	ExpressionStatement		795:39:20947:20947	3419771	10	True				
ANR	3420269	ExpressionStatement	"addr . to_ip_string ( ipstr , INET6_ADDRSTRLEN )"	796:5:20954:20996	3419771	11	True				
ANR	3420270	CallExpression	"addr . to_ip_string ( ipstr , INET6_ADDRSTRLEN )"		3419771	0					
ANR	3420271	Callee	addr . to_ip_string		3419771	0					
ANR	3420272	MemberAccess	addr . to_ip_string		3419771	0					
ANR	3420273	Identifier	addr		3419771	0					
ANR	3420274	Identifier	to_ip_string		3419771	1					
ANR	3420275	ArgumentList	ipstr		3419771	1					
ANR	3420276	Argument	ipstr		3419771	0					
ANR	3420277	Identifier	ipstr		3419771	0					
ANR	3420278	Argument	INET6_ADDRSTRLEN		3419771	1					
ANR	3420279	Identifier	INET6_ADDRSTRLEN		3419771	0					
ANR	3420280	ExpressionStatement	peer_description = addr . to_ip_string ( )	798:2:21001:21039	3419771	12	True				
ANR	3420281	AssignmentExpression	peer_description = addr . to_ip_string ( )		3419771	0		=			
ANR	3420282	Identifier	peer_description		3419771	0					
ANR	3420283	CallExpression	addr . to_ip_string ( )		3419771	1					
ANR	3420284	Callee	addr . to_ip_string		3419771	0					
ANR	3420285	MemberAccess	addr . to_ip_string		3419771	0					
ANR	3420286	Identifier	addr		3419771	0					
ANR	3420287	Identifier	to_ip_string		3419771	1					
ANR	3420288	ArgumentList			3419771	1					
ANR	3420289	IfStatement	"if ( ! ( mask & deny_resolved ) && lookup_user_ip_deny ( perm , who , ipstr ) )"		3419771	13					
ANR	3420290	Condition	"! ( mask & deny_resolved ) && lookup_user_ip_deny ( perm , who , ipstr )"	800:7:21049:21108	3419771	0	True				
ANR	3420291	AndExpression	"! ( mask & deny_resolved ) && lookup_user_ip_deny ( perm , who , ipstr )"		3419771	0		&&			
ANR	3420292	UnaryOperationExpression	! ( mask & deny_resolved )		3419771	0					
ANR	3420293	UnaryOperator	!		3419771	0					
ANR	3420294	BitAndExpression	mask & deny_resolved		3419771	1		&			
ANR	3420295	Identifier	mask		3419771	0					
ANR	3420296	Identifier	deny_resolved		3419771	1					
ANR	3420297	CallExpression	"lookup_user_ip_deny ( perm , who , ipstr )"		3419771	1					
ANR	3420298	Callee	lookup_user_ip_deny		3419771	0					
ANR	3420299	Identifier	lookup_user_ip_deny		3419771	0					
ANR	3420300	ArgumentList	perm		3419771	1					
ANR	3420301	Argument	perm		3419771	0					
ANR	3420302	Identifier	perm		3419771	0					
ANR	3420303	Argument	who		3419771	1					
ANR	3420304	Identifier	who		3419771	0					
ANR	3420305	Argument	ipstr		3419771	2					
ANR	3420306	Identifier	ipstr		3419771	0					
ANR	3420307	CompoundStatement		135:69:3775:3775	3419771	1					
ANR	3420308	ExpressionStatement	mask |= deny_mask ( perm )	801:3:21116:21139	3419771	0	True				
ANR	3420309	AssignmentExpression	mask |= deny_mask ( perm )		3419771	0		|=			
ANR	3420310	Identifier	mask		3419771	0					
ANR	3420311	CallExpression	deny_mask ( perm )		3419771	1					
ANR	3420312	Callee	deny_mask		3419771	0					
ANR	3420313	Identifier	deny_mask		3419771	0					
ANR	3420314	ArgumentList	perm		3419771	1					
ANR	3420315	Argument	perm		3419771	0					
ANR	3420316	Identifier	perm		3419771	0					
ANR	3420317	IfStatement	if ( deny_reason )		3419771	1					
ANR	3420318	Condition	deny_reason	802:7:21148:21158	3419771	0	True				
ANR	3420319	Identifier	deny_reason		3419771	0					
ANR	3420320	CompoundStatement		137:21:3826:3826	3419771	1					
ANR	3420321	ExpressionStatement	"deny_reason -> sprintf ( ""%s authorization policy denies IP address %s"" , PermString ( perm ) , addr . to_ip_string ( ) . Value ( ) )"	803:4:21168:21295	3419771	0	True				
ANR	3420322	CallExpression	"deny_reason -> sprintf ( ""%s authorization policy denies IP address %s"" , PermString ( perm ) , addr . to_ip_string ( ) . Value ( ) )"		3419771	0					
ANR	3420323	Callee	deny_reason -> sprintf		3419771	0					
ANR	3420324	PtrMemberAccess	deny_reason -> sprintf		3419771	0					
ANR	3420325	Identifier	deny_reason		3419771	0					
ANR	3420326	Identifier	sprintf		3419771	1					
ANR	3420327	ArgumentList	"""%s authorization policy denies IP address %s"""		3419771	1					
ANR	3420328	Argument	"""%s authorization policy denies IP address %s"""		3419771	0					
ANR	3420329	PrimaryExpression	"""%s authorization policy denies IP address %s"""		3419771	0					
ANR	3420330	Argument	PermString ( perm )		3419771	1					
ANR	3420331	CallExpression	PermString ( perm )		3419771	0					
ANR	3420332	Callee	PermString		3419771	0					
ANR	3420333	Identifier	PermString		3419771	0					
ANR	3420334	ArgumentList	perm		3419771	1					
ANR	3420335	Argument	perm		3419771	0					
ANR	3420336	Identifier	perm		3419771	0					
ANR	3420337	Argument	addr . to_ip_string ( ) . Value ( )		3419771	2					
ANR	3420338	CallExpression	addr . to_ip_string ( ) . Value ( )		3419771	0					
ANR	3420339	Callee	addr . to_ip_string ( ) . Value		3419771	0					
ANR	3420340	MemberAccess	addr . to_ip_string ( ) . Value		3419771	0					
ANR	3420341	CallExpression	addr . to_ip_string ( )		3419771	0					
ANR	3420342	Callee	addr . to_ip_string		3419771	0					
ANR	3420343	MemberAccess	addr . to_ip_string		3419771	0					
ANR	3420344	Identifier	addr		3419771	0					
ANR	3420345	Identifier	to_ip_string		3419771	1					
ANR	3420346	ArgumentList			3419771	1					
ANR	3420347	Identifier	Value		3419771	1					
ANR	3420348	ArgumentList			3419771	1					
ANR	3420349	IfStatement	"if ( ! ( mask & allow_resolved ) && lookup_user_ip_allow ( perm , who , ipstr ) )"		3419771	14					
ANR	3420350	Condition	"! ( mask & allow_resolved ) && lookup_user_ip_allow ( perm , who , ipstr )"	809:7:21314:21375	3419771	0	True				
ANR	3420351	AndExpression	"! ( mask & allow_resolved ) && lookup_user_ip_allow ( perm , who , ipstr )"		3419771	0		&&			
ANR	3420352	UnaryOperationExpression	! ( mask & allow_resolved )		3419771	0					
ANR	3420353	UnaryOperator	!		3419771	0					
ANR	3420354	BitAndExpression	mask & allow_resolved		3419771	1		&			
ANR	3420355	Identifier	mask		3419771	0					
ANR	3420356	Identifier	allow_resolved		3419771	1					
ANR	3420357	CallExpression	"lookup_user_ip_allow ( perm , who , ipstr )"		3419771	1					
ANR	3420358	Callee	lookup_user_ip_allow		3419771	0					
ANR	3420359	Identifier	lookup_user_ip_allow		3419771	0					
ANR	3420360	ArgumentList	perm		3419771	1					
ANR	3420361	Argument	perm		3419771	0					
ANR	3420362	Identifier	perm		3419771	0					
ANR	3420363	Argument	who		3419771	1					
ANR	3420364	Identifier	who		3419771	0					
ANR	3420365	Argument	ipstr		3419771	2					
ANR	3420366	Identifier	ipstr		3419771	0					
ANR	3420367	CompoundStatement		144:71:4042:4042	3419771	1					
ANR	3420368	ExpressionStatement	mask |= allow_mask ( perm )	810:3:21383:21407	3419771	0	True				
ANR	3420369	AssignmentExpression	mask |= allow_mask ( perm )		3419771	0		|=			
ANR	3420370	Identifier	mask		3419771	0					
ANR	3420371	CallExpression	allow_mask ( perm )		3419771	1					
ANR	3420372	Callee	allow_mask		3419771	0					
ANR	3420373	Identifier	allow_mask		3419771	0					
ANR	3420374	ArgumentList	perm		3419771	1					
ANR	3420375	Argument	perm		3419771	0					
ANR	3420376	Identifier	perm		3419771	0					
ANR	3420377	IfStatement	if ( allow_reason )		3419771	1					
ANR	3420378	Condition	allow_reason	811:7:21416:21427	3419771	0	True				
ANR	3420379	Identifier	allow_reason		3419771	0					
ANR	3420380	CompoundStatement		146:22:4095:4095	3419771	1					
ANR	3420381	ExpressionStatement	"allow_reason -> sprintf ( ""%s authorization policy allows IP address %s"" , PermString ( perm ) , addr . to_ip_string ( ) . Value ( ) )"	812:4:21437:21565	3419771	0	True				
ANR	3420382	CallExpression	"allow_reason -> sprintf ( ""%s authorization policy allows IP address %s"" , PermString ( perm ) , addr . to_ip_string ( ) . Value ( ) )"		3419771	0					
ANR	3420383	Callee	allow_reason -> sprintf		3419771	0					
ANR	3420384	PtrMemberAccess	allow_reason -> sprintf		3419771	0					
ANR	3420385	Identifier	allow_reason		3419771	0					
ANR	3420386	Identifier	sprintf		3419771	1					
ANR	3420387	ArgumentList	"""%s authorization policy allows IP address %s"""		3419771	1					
ANR	3420388	Argument	"""%s authorization policy allows IP address %s"""		3419771	0					
ANR	3420389	PrimaryExpression	"""%s authorization policy allows IP address %s"""		3419771	0					
ANR	3420390	Argument	PermString ( perm )		3419771	1					
ANR	3420391	CallExpression	PermString ( perm )		3419771	0					
ANR	3420392	Callee	PermString		3419771	0					
ANR	3420393	Identifier	PermString		3419771	0					
ANR	3420394	ArgumentList	perm		3419771	1					
ANR	3420395	Argument	perm		3419771	0					
ANR	3420396	Identifier	perm		3419771	0					
ANR	3420397	Argument	addr . to_ip_string ( ) . Value ( )		3419771	2					
ANR	3420398	CallExpression	addr . to_ip_string ( ) . Value ( )		3419771	0					
ANR	3420399	Callee	addr . to_ip_string ( ) . Value		3419771	0					
ANR	3420400	MemberAccess	addr . to_ip_string ( ) . Value		3419771	0					
ANR	3420401	CallExpression	addr . to_ip_string ( )		3419771	0					
ANR	3420402	Callee	addr . to_ip_string		3419771	0					
ANR	3420403	MemberAccess	addr . to_ip_string		3419771	0					
ANR	3420404	Identifier	addr		3419771	0					
ANR	3420405	Identifier	to_ip_string		3419771	1					
ANR	3420406	ArgumentList			3419771	1					
ANR	3420407	Identifier	Value		3419771	1					
ANR	3420408	ArgumentList			3419771	1					
ANR	3420409	IdentifierDeclStatement	std :: vector < MyString > hostnames ;	819:2:21580:21611	3419771	15	True				
ANR	3420410	IdentifierDecl	hostnames		3419771	0					
ANR	3420411	IdentifierDeclType	std :: vector < MyString >		3419771	0					
ANR	3420412	Identifier	hostnames		3419771	1					
ANR	3420413	IfStatement	if ( ! ( mask & allow_resolved ) || ! ( mask & deny_resolved ) )		3419771	16					
ANR	3420414	Condition	! ( mask & allow_resolved ) || ! ( mask & deny_resolved )	821:6:21658:21704	3419771	0	True				
ANR	3420415	OrExpression	! ( mask & allow_resolved ) || ! ( mask & deny_resolved )		3419771	0		||			
ANR	3420416	UnaryOperationExpression	! ( mask & allow_resolved )		3419771	0					
ANR	3420417	UnaryOperator	!		3419771	0					
ANR	3420418	BitAndExpression	mask & allow_resolved		3419771	1		&			
ANR	3420419	Identifier	mask		3419771	0					
ANR	3420420	Identifier	allow_resolved		3419771	1					
ANR	3420421	UnaryOperationExpression	! ( mask & deny_resolved )		3419771	1					
ANR	3420422	UnaryOperator	!		3419771	0					
ANR	3420423	BitAndExpression	mask & deny_resolved		3419771	1		&			
ANR	3420424	Identifier	mask		3419771	0					
ANR	3420425	Identifier	deny_resolved		3419771	1					
ANR	3420426	CompoundStatement		156:56:4372:4372	3419771	1					
ANR	3420427	ExpressionStatement	hostnames = get_hostname_with_alias ( addr )	822:3:21713:21754	3419771	0	True				
ANR	3420428	AssignmentExpression	hostnames = get_hostname_with_alias ( addr )		3419771	0		=			
ANR	3420429	Identifier	hostnames		3419771	0					
ANR	3420430	CallExpression	get_hostname_with_alias ( addr )		3419771	1					
ANR	3420431	Callee	get_hostname_with_alias		3419771	0					
ANR	3420432	Identifier	get_hostname_with_alias		3419771	0					
ANR	3420433	ArgumentList	addr		3419771	1					
ANR	3420434	Argument	addr		3419771	0					
ANR	3420435	Identifier	addr		3419771	0					
ANR	3420436	ForStatement	for ( unsigned int i = 0 ; i < hostnames . size ( ) ; ++ i )		3419771	17					
ANR	3420437	ForInit	unsigned int i = 0 ;	825:7:21768:21786	3419771	0	True				
ANR	3420438	IdentifierDeclStatement	unsigned int i = 0 ;		3419771	0					
ANR	3420439	IdentifierDecl	i = 0		3419771	0					
ANR	3420440	IdentifierDeclType	unsigned int		3419771	0					
ANR	3420441	Identifier	i		3419771	1					
ANR	3420442	AssignmentExpression	i = 0		3419771	2		=			
ANR	3420443	Identifier	i		3419771	0					
ANR	3420444	PrimaryExpression	0		3419771	1					
ANR	3420445	Condition	i < hostnames . size ( )	825:27:21788:21807	3419771	1	True				
ANR	3420446	RelationalExpression	i < hostnames . size ( )		3419771	0		<			
ANR	3420447	Identifier	i		3419771	0					
ANR	3420448	CallExpression	hostnames . size ( )		3419771	1					
ANR	3420449	Callee	hostnames . size		3419771	0					
ANR	3420450	MemberAccess	hostnames . size		3419771	0					
ANR	3420451	Identifier	hostnames		3419771	0					
ANR	3420452	Identifier	size		3419771	1					
ANR	3420453	ArgumentList			3419771	1					
ANR	3420454	UnaryExpression	++ i	825:49:21810:21812	3419771	2	True				
ANR	3420455	IncDec	++		3419771	0					
ANR	3420456	Identifier	i		3419771	1					
ANR	3420457	CompoundStatement		160:54:4479:4479	3419771	3					
ANR	3420458	ExpressionStatement	thehost = hostnames [ i ] . Value ( )	826:3:21820:21850	3419771	0	True				
ANR	3420459	AssignmentExpression	thehost = hostnames [ i ] . Value ( )		3419771	0		=			
ANR	3420460	Identifier	thehost		3419771	0					
ANR	3420461	CallExpression	hostnames [ i ] . Value ( )		3419771	1					
ANR	3420462	Callee	hostnames [ i ] . Value		3419771	0					
ANR	3420463	MemberAccess	hostnames [ i ] . Value		3419771	0					
ANR	3420464	ArrayIndexing	hostnames [ i ]		3419771	0					
ANR	3420465	Identifier	hostnames		3419771	0					
ANR	3420466	Identifier	i		3419771	1					
ANR	3420467	Identifier	Value		3419771	1					
ANR	3420468	ArgumentList			3419771	1					
ANR	3420469	ExpressionStatement	peer_description . append_to_list ( thehost )	827:3:21855:21895	3419771	1	True				
ANR	3420470	CallExpression	peer_description . append_to_list ( thehost )		3419771	0					
ANR	3420471	Callee	peer_description . append_to_list		3419771	0					
ANR	3420472	MemberAccess	peer_description . append_to_list		3419771	0					
ANR	3420473	Identifier	peer_description		3419771	0					
ANR	3420474	Identifier	append_to_list		3419771	1					
ANR	3420475	ArgumentList	thehost		3419771	1					
ANR	3420476	Argument	thehost		3419771	0					
ANR	3420477	Identifier	thehost		3419771	0					
ANR	3420478	IfStatement	"if ( ! ( mask & deny_resolved ) && lookup_user_host_deny ( perm , who , thehost ) )"		3419771	2					
ANR	3420479	Condition	"! ( mask & deny_resolved ) && lookup_user_host_deny ( perm , who , thehost )"	829:8:21906:21969	3419771	0	True				
ANR	3420480	AndExpression	"! ( mask & deny_resolved ) && lookup_user_host_deny ( perm , who , thehost )"		3419771	0		&&			
ANR	3420481	UnaryOperationExpression	! ( mask & deny_resolved )		3419771	0					
ANR	3420482	UnaryOperator	!		3419771	0					
ANR	3420483	BitAndExpression	mask & deny_resolved		3419771	1		&			
ANR	3420484	Identifier	mask		3419771	0					
ANR	3420485	Identifier	deny_resolved		3419771	1					
ANR	3420486	CallExpression	"lookup_user_host_deny ( perm , who , thehost )"		3419771	1					
ANR	3420487	Callee	lookup_user_host_deny		3419771	0					
ANR	3420488	Identifier	lookup_user_host_deny		3419771	0					
ANR	3420489	ArgumentList	perm		3419771	1					
ANR	3420490	Argument	perm		3419771	0					
ANR	3420491	Identifier	perm		3419771	0					
ANR	3420492	Argument	who		3419771	1					
ANR	3420493	Identifier	who		3419771	0					
ANR	3420494	Argument	thehost		3419771	2					
ANR	3420495	Identifier	thehost		3419771	0					
ANR	3420496	CompoundStatement		164:75:4637:4637	3419771	1					
ANR	3420497	ExpressionStatement	mask |= deny_mask ( perm )	830:4:21979:22002	3419771	0	True				
ANR	3420498	AssignmentExpression	mask |= deny_mask ( perm )		3419771	0		|=			
ANR	3420499	Identifier	mask		3419771	0					
ANR	3420500	CallExpression	deny_mask ( perm )		3419771	1					
ANR	3420501	Callee	deny_mask		3419771	0					
ANR	3420502	Identifier	deny_mask		3419771	0					
ANR	3420503	ArgumentList	perm		3419771	1					
ANR	3420504	Argument	perm		3419771	0					
ANR	3420505	Identifier	perm		3419771	0					
ANR	3420506	IfStatement	if ( deny_reason )		3419771	1					
ANR	3420507	Condition	deny_reason	831:8:22012:22022	3419771	0	True				
ANR	3420508	Identifier	deny_reason		3419771	0					
ANR	3420509	CompoundStatement		166:22:4690:4690	3419771	1					
ANR	3420510	ExpressionStatement	"deny_reason -> sprintf ( ""%s authorization policy denies hostname %s"" , PermString ( perm ) , thehost )"	832:5:22033:22140	3419771	0	True				
ANR	3420511	CallExpression	"deny_reason -> sprintf ( ""%s authorization policy denies hostname %s"" , PermString ( perm ) , thehost )"		3419771	0					
ANR	3420512	Callee	deny_reason -> sprintf		3419771	0					
ANR	3420513	PtrMemberAccess	deny_reason -> sprintf		3419771	0					
ANR	3420514	Identifier	deny_reason		3419771	0					
ANR	3420515	Identifier	sprintf		3419771	1					
ANR	3420516	ArgumentList	"""%s authorization policy denies hostname %s"""		3419771	1					
ANR	3420517	Argument	"""%s authorization policy denies hostname %s"""		3419771	0					
ANR	3420518	PrimaryExpression	"""%s authorization policy denies hostname %s"""		3419771	0					
ANR	3420519	Argument	PermString ( perm )		3419771	1					
ANR	3420520	CallExpression	PermString ( perm )		3419771	0					
ANR	3420521	Callee	PermString		3419771	0					
ANR	3420522	Identifier	PermString		3419771	0					
ANR	3420523	ArgumentList	perm		3419771	1					
ANR	3420524	Argument	perm		3419771	0					
ANR	3420525	Identifier	perm		3419771	0					
ANR	3420526	Argument	thehost		3419771	2					
ANR	3420527	Identifier	thehost		3419771	0					
ANR	3420528	IfStatement	"if ( ! ( mask & allow_resolved ) && lookup_user_host_allow ( perm , who , thehost ) )"		3419771	3					
ANR	3420529	Condition	"! ( mask & allow_resolved ) && lookup_user_host_allow ( perm , who , thehost )"	838:8:22162:22227	3419771	0	True				
ANR	3420530	AndExpression	"! ( mask & allow_resolved ) && lookup_user_host_allow ( perm , who , thehost )"		3419771	0		&&			
ANR	3420531	UnaryOperationExpression	! ( mask & allow_resolved )		3419771	0					
ANR	3420532	UnaryOperator	!		3419771	0					
ANR	3420533	BitAndExpression	mask & allow_resolved		3419771	1		&			
ANR	3420534	Identifier	mask		3419771	0					
ANR	3420535	Identifier	allow_resolved		3419771	1					
ANR	3420536	CallExpression	"lookup_user_host_allow ( perm , who , thehost )"		3419771	1					
ANR	3420537	Callee	lookup_user_host_allow		3419771	0					
ANR	3420538	Identifier	lookup_user_host_allow		3419771	0					
ANR	3420539	ArgumentList	perm		3419771	1					
ANR	3420540	Argument	perm		3419771	0					
ANR	3420541	Identifier	perm		3419771	0					
ANR	3420542	Argument	who		3419771	1					
ANR	3420543	Identifier	who		3419771	0					
ANR	3420544	Argument	thehost		3419771	2					
ANR	3420545	Identifier	thehost		3419771	0					
ANR	3420546	CompoundStatement		173:77:4895:4895	3419771	1					
ANR	3420547	ExpressionStatement	mask |= allow_mask ( perm )	839:4:22237:22261	3419771	0	True				
ANR	3420548	AssignmentExpression	mask |= allow_mask ( perm )		3419771	0		|=			
ANR	3420549	Identifier	mask		3419771	0					
ANR	3420550	CallExpression	allow_mask ( perm )		3419771	1					
ANR	3420551	Callee	allow_mask		3419771	0					
ANR	3420552	Identifier	allow_mask		3419771	0					
ANR	3420553	ArgumentList	perm		3419771	1					
ANR	3420554	Argument	perm		3419771	0					
ANR	3420555	Identifier	perm		3419771	0					
ANR	3420556	IfStatement	if ( allow_reason )		3419771	1					
ANR	3420557	Condition	allow_reason	840:8:22271:22282	3419771	0	True				
ANR	3420558	Identifier	allow_reason		3419771	0					
ANR	3420559	CompoundStatement		175:23:4950:4950	3419771	1					
ANR	3420560	ExpressionStatement	"allow_reason -> sprintf ( ""%s authorization policy allows hostname %s"" , PermString ( perm ) , thehost )"	841:5:22293:22401	3419771	0	True				
ANR	3420561	CallExpression	"allow_reason -> sprintf ( ""%s authorization policy allows hostname %s"" , PermString ( perm ) , thehost )"		3419771	0					
ANR	3420562	Callee	allow_reason -> sprintf		3419771	0					
ANR	3420563	PtrMemberAccess	allow_reason -> sprintf		3419771	0					
ANR	3420564	Identifier	allow_reason		3419771	0					
ANR	3420565	Identifier	sprintf		3419771	1					
ANR	3420566	ArgumentList	"""%s authorization policy allows hostname %s"""		3419771	1					
ANR	3420567	Argument	"""%s authorization policy allows hostname %s"""		3419771	0					
ANR	3420568	PrimaryExpression	"""%s authorization policy allows hostname %s"""		3419771	0					
ANR	3420569	Argument	PermString ( perm )		3419771	1					
ANR	3420570	CallExpression	PermString ( perm )		3419771	0					
ANR	3420571	Callee	PermString		3419771	0					
ANR	3420572	Identifier	PermString		3419771	0					
ANR	3420573	ArgumentList	perm		3419771	1					
ANR	3420574	Argument	perm		3419771	0					
ANR	3420575	Identifier	perm		3419771	0					
ANR	3420576	Argument	thehost		3419771	2					
ANR	3420577	Identifier	thehost		3419771	0					
ANR	3420578	IdentifierDeclStatement	bool determined_by_parent = false ;	856:2:22927:22960	3419771	18	True				
ANR	3420579	IdentifierDecl	determined_by_parent = false		3419771	0					
ANR	3420580	IdentifierDeclType	bool		3419771	0					
ANR	3420581	Identifier	determined_by_parent		3419771	1					
ANR	3420582	AssignmentExpression	determined_by_parent = false		3419771	2		=			
ANR	3420583	Identifier	false		3419771	0					
ANR	3420584	Identifier	false		3419771	1					
ANR	3420585	IfStatement	if ( mask == 0 )		3419771	19					
ANR	3420586	Condition	mask == 0	857:7:22969:22977	3419771	0	True				
ANR	3420587	EqualityExpression	mask == 0		3419771	0		==			
ANR	3420588	Identifier	mask		3419771	0					
ANR	3420589	PrimaryExpression	0		3419771	1					
ANR	3420590	CompoundStatement		192:19:5645:5645	3419771	1					
ANR	3420591	IfStatement	if ( PermTypeArray [ perm ] -> behavior == USERVERIFY_ONLY_DENIES )		3419771	0					
ANR	3420592	Condition	PermTypeArray [ perm ] -> behavior == USERVERIFY_ONLY_DENIES	858:8:22991:23045	3419771	0	True				
ANR	3420593	EqualityExpression	PermTypeArray [ perm ] -> behavior == USERVERIFY_ONLY_DENIES		3419771	0		==			
ANR	3420594	PtrMemberAccess	PermTypeArray [ perm ] -> behavior		3419771	0					
ANR	3420595	ArrayIndexing	PermTypeArray [ perm ]		3419771	0					
ANR	3420596	Identifier	PermTypeArray		3419771	0					
ANR	3420597	Identifier	perm		3419771	1					
ANR	3420598	Identifier	behavior		3419771	1					
ANR	3420599	Identifier	USERVERIFY_ONLY_DENIES		3419771	1					
ANR	3420600	CompoundStatement		193:66:5713:5713	3419771	1					
ANR	3420601	ExpressionStatement	"dprintf ( D_SECURITY , ""IPVERIFY: %s at %s not matched to deny list, so allowing.\\n"" , who , addr . to_sinful ( ) . Value ( ) )"	859:4:23055:23166	3419771	0	True				
ANR	3420602	CallExpression	"dprintf ( D_SECURITY , ""IPVERIFY: %s at %s not matched to deny list, so allowing.\\n"" , who , addr . to_sinful ( ) . Value ( ) )"		3419771	0					
ANR	3420603	Callee	dprintf		3419771	0					
ANR	3420604	Identifier	dprintf		3419771	0					
ANR	3420605	ArgumentList	D_SECURITY		3419771	1					
ANR	3420606	Argument	D_SECURITY		3419771	0					
ANR	3420607	Identifier	D_SECURITY		3419771	0					
ANR	3420608	Argument	"""IPVERIFY: %s at %s not matched to deny list, so allowing.\\n"""		3419771	1					
ANR	3420609	PrimaryExpression	"""IPVERIFY: %s at %s not matched to deny list, so allowing.\\n"""		3419771	0					
ANR	3420610	Argument	who		3419771	2					
ANR	3420611	Identifier	who		3419771	0					
ANR	3420612	Argument	addr . to_sinful ( ) . Value ( )		3419771	3					
ANR	3420613	CallExpression	addr . to_sinful ( ) . Value ( )		3419771	0					
ANR	3420614	Callee	addr . to_sinful ( ) . Value		3419771	0					
ANR	3420615	MemberAccess	addr . to_sinful ( ) . Value		3419771	0					
ANR	3420616	CallExpression	addr . to_sinful ( )		3419771	0					
ANR	3420617	Callee	addr . to_sinful		3419771	0					
ANR	3420618	MemberAccess	addr . to_sinful		3419771	0					
ANR	3420619	Identifier	addr		3419771	0					
ANR	3420620	Identifier	to_sinful		3419771	1					
ANR	3420621	ArgumentList			3419771	1					
ANR	3420622	Identifier	Value		3419771	1					
ANR	3420623	ArgumentList			3419771	1					
ANR	3420624	IfStatement	if ( allow_reason )		3419771	1					
ANR	3420625	Condition	allow_reason	860:8:23176:23187	3419771	0	True				
ANR	3420626	Identifier	allow_reason		3419771	0					
ANR	3420627	CompoundStatement		195:23:5855:5855	3419771	1					
ANR	3420628	ExpressionStatement	"allow_reason -> sprintf ( ""%s authorization policy does not deny, so allowing"" , PermString ( perm ) )"	861:5:23198:23304	3419771	0	True				
ANR	3420629	CallExpression	"allow_reason -> sprintf ( ""%s authorization policy does not deny, so allowing"" , PermString ( perm ) )"		3419771	0					
ANR	3420630	Callee	allow_reason -> sprintf		3419771	0					
ANR	3420631	PtrMemberAccess	allow_reason -> sprintf		3419771	0					
ANR	3420632	Identifier	allow_reason		3419771	0					
ANR	3420633	Identifier	sprintf		3419771	1					
ANR	3420634	ArgumentList	"""%s authorization policy does not deny, so allowing"""		3419771	1					
ANR	3420635	Argument	"""%s authorization policy does not deny, so allowing"""		3419771	0					
ANR	3420636	PrimaryExpression	"""%s authorization policy does not deny, so allowing"""		3419771	0					
ANR	3420637	Argument	PermString ( perm )		3419771	1					
ANR	3420638	CallExpression	PermString ( perm )		3419771	0					
ANR	3420639	Callee	PermString		3419771	0					
ANR	3420640	Identifier	PermString		3419771	0					
ANR	3420641	ArgumentList	perm		3419771	1					
ANR	3420642	Argument	perm		3419771	0					
ANR	3420643	Identifier	perm		3419771	0					
ANR	3420644	ExpressionStatement	mask |= allow_mask ( perm )	866:4:23317:23341	3419771	2	True				
ANR	3420645	AssignmentExpression	mask |= allow_mask ( perm )		3419771	0		|=			
ANR	3420646	Identifier	mask		3419771	0					
ANR	3420647	CallExpression	allow_mask ( perm )		3419771	1					
ANR	3420648	Callee	allow_mask		3419771	0					
ANR	3420649	Identifier	allow_mask		3419771	0					
ANR	3420650	ArgumentList	perm		3419771	1					
ANR	3420651	Argument	perm		3419771	0					
ANR	3420652	Identifier	perm		3419771	0					
ANR	3420653	ElseStatement	else		3419771	0					
ANR	3420654	CompoundStatement		206:4:6154:6181	3419771	0					
ANR	3420655	IdentifierDeclStatement	DCpermissionHierarchy hierarchy ( perm ) ;	868:4:23359:23398	3419771	0	True				
ANR	3420656	IdentifierDecl	hierarchy ( perm )		3419771	0					
ANR	3420657	IdentifierDeclType	DCpermissionHierarchy		3419771	0					
ANR	3420658	Identifier	hierarchy		3419771	1					
ANR	3420659	Identifier	perm		3419771	2					
ANR	3420660	IdentifierDeclStatement	DCpermission const * parent_perms = hierarchy . getPermsIAmDirectlyImpliedBy ( ) ;	869:4:23404:23484	3419771	1	True				
ANR	3420661	IdentifierDecl	* parent_perms = hierarchy . getPermsIAmDirectlyImpliedBy ( )		3419771	0					
ANR	3420662	IdentifierDeclType	DCpermission const *		3419771	0					
ANR	3420663	Identifier	parent_perms		3419771	1					
ANR	3420664	AssignmentExpression	* parent_perms = hierarchy . getPermsIAmDirectlyImpliedBy ( )		3419771	2		=			
ANR	3420665	Identifier	parent_perms		3419771	0					
ANR	3420666	CallExpression	hierarchy . getPermsIAmDirectlyImpliedBy ( )		3419771	1					
ANR	3420667	Callee	hierarchy . getPermsIAmDirectlyImpliedBy		3419771	0					
ANR	3420668	MemberAccess	hierarchy . getPermsIAmDirectlyImpliedBy		3419771	0					
ANR	3420669	Identifier	hierarchy		3419771	0					
ANR	3420670	Identifier	getPermsIAmDirectlyImpliedBy		3419771	1					
ANR	3420671	ArgumentList			3419771	1					
ANR	3420672	IdentifierDeclStatement	bool parent_allowed = false ;	871:4:23490:23517	3419771	2	True				
ANR	3420673	IdentifierDecl	parent_allowed = false		3419771	0					
ANR	3420674	IdentifierDeclType	bool		3419771	0					
ANR	3420675	Identifier	parent_allowed		3419771	1					
ANR	3420676	AssignmentExpression	parent_allowed = false		3419771	2		=			
ANR	3420677	Identifier	false		3419771	0					
ANR	3420678	Identifier	false		3419771	1					
ANR	3420679	ForStatement	for ( ; * parent_perms != LAST_PERM ; parent_perms ++ )		3419771	3					
ANR	3420680	Condition	* parent_perms != LAST_PERM	872:11:23530:23555	3419771	0	True				
ANR	3420681	EqualityExpression	* parent_perms != LAST_PERM		3419771	0		!=			
ANR	3420682	UnaryOperationExpression	* parent_perms		3419771	0					
ANR	3420683	UnaryOperator	*		3419771	0					
ANR	3420684	Identifier	parent_perms		3419771	1					
ANR	3420685	Identifier	LAST_PERM		3419771	1					
ANR	3420686	PostIncDecOperationExpression	parent_perms ++	872:39:23558:23571	3419771	1	True				
ANR	3420687	Identifier	parent_perms		3419771	0					
ANR	3420688	IncDec	++		3419771	1					
ANR	3420689	CompoundStatement		207:56:6239:6239	3419771	2					
ANR	3420690	IfStatement	"if ( Verify ( * parent_perms , addr , user , allow_reason , NULL ) == USER_AUTH_SUCCESS )"		3419771	0					
ANR	3420691	Condition	"Verify ( * parent_perms , addr , user , allow_reason , NULL ) == USER_AUTH_SUCCESS"	873:9:23586:23661	3419771	0	True				
ANR	3420692	EqualityExpression	"Verify ( * parent_perms , addr , user , allow_reason , NULL ) == USER_AUTH_SUCCESS"		3419771	0		==			
ANR	3420693	CallExpression	"Verify ( * parent_perms , addr , user , allow_reason , NULL )"		3419771	0					
ANR	3420694	Callee	Verify		3419771	0					
ANR	3420695	Identifier	Verify		3419771	0					
ANR	3420696	ArgumentList	* parent_perms		3419771	1					
ANR	3420697	Argument	* parent_perms		3419771	0					
ANR	3420698	UnaryOperationExpression	* parent_perms		3419771	0					
ANR	3420699	UnaryOperator	*		3419771	0					
ANR	3420700	Identifier	parent_perms		3419771	1					
ANR	3420701	Argument	addr		3419771	1					
ANR	3420702	Identifier	addr		3419771	0					
ANR	3420703	Argument	user		3419771	2					
ANR	3420704	Identifier	user		3419771	0					
ANR	3420705	Argument	allow_reason		3419771	3					
ANR	3420706	Identifier	allow_reason		3419771	0					
ANR	3420707	Argument	NULL		3419771	4					
ANR	3420708	Identifier	NULL		3419771	0					
ANR	3420709	Identifier	USER_AUTH_SUCCESS		3419771	1					
ANR	3420710	CompoundStatement		208:88:6329:6329	3419771	1					
ANR	3420711	ExpressionStatement	determined_by_parent = true	874:6:23673:23700	3419771	0	True				
ANR	3420712	AssignmentExpression	determined_by_parent = true		3419771	0		=			
ANR	3420713	Identifier	determined_by_parent		3419771	0					
ANR	3420714	Identifier	true		3419771	1					
ANR	3420715	ExpressionStatement	parent_allowed = true	875:6:23708:23729	3419771	1	True				
ANR	3420716	AssignmentExpression	parent_allowed = true		3419771	0		=			
ANR	3420717	Identifier	parent_allowed		3419771	0					
ANR	3420718	Identifier	true		3419771	1					
ANR	3420719	ExpressionStatement	"dprintf ( D_SECURITY , ""IPVERIFY: allowing %s at %s for %s because %s is allowed\\n"" , who , addr . to_sinful ( ) . Value ( ) , PermString ( perm ) , PermString ( * parent_perms ) )"	876:6:23737:23890	3419771	2	True				
ANR	3420720	CallExpression	"dprintf ( D_SECURITY , ""IPVERIFY: allowing %s at %s for %s because %s is allowed\\n"" , who , addr . to_sinful ( ) . Value ( ) , PermString ( perm ) , PermString ( * parent_perms ) )"		3419771	0					
ANR	3420721	Callee	dprintf		3419771	0					
ANR	3420722	Identifier	dprintf		3419771	0					
ANR	3420723	ArgumentList	D_SECURITY		3419771	1					
ANR	3420724	Argument	D_SECURITY		3419771	0					
ANR	3420725	Identifier	D_SECURITY		3419771	0					
ANR	3420726	Argument	"""IPVERIFY: allowing %s at %s for %s because %s is allowed\\n"""		3419771	1					
ANR	3420727	PrimaryExpression	"""IPVERIFY: allowing %s at %s for %s because %s is allowed\\n"""		3419771	0					
ANR	3420728	Argument	who		3419771	2					
ANR	3420729	Identifier	who		3419771	0					
ANR	3420730	Argument	addr . to_sinful ( ) . Value ( )		3419771	3					
ANR	3420731	CallExpression	addr . to_sinful ( ) . Value ( )		3419771	0					
ANR	3420732	Callee	addr . to_sinful ( ) . Value		3419771	0					
ANR	3420733	MemberAccess	addr . to_sinful ( ) . Value		3419771	0					
ANR	3420734	CallExpression	addr . to_sinful ( )		3419771	0					
ANR	3420735	Callee	addr . to_sinful		3419771	0					
ANR	3420736	MemberAccess	addr . to_sinful		3419771	0					
ANR	3420737	Identifier	addr		3419771	0					
ANR	3420738	Identifier	to_sinful		3419771	1					
ANR	3420739	ArgumentList			3419771	1					
ANR	3420740	Identifier	Value		3419771	1					
ANR	3420741	ArgumentList			3419771	1					
ANR	3420742	Argument	PermString ( perm )		3419771	4					
ANR	3420743	CallExpression	PermString ( perm )		3419771	0					
ANR	3420744	Callee	PermString		3419771	0					
ANR	3420745	Identifier	PermString		3419771	0					
ANR	3420746	ArgumentList	perm		3419771	1					
ANR	3420747	Argument	perm		3419771	0					
ANR	3420748	Identifier	perm		3419771	0					
ANR	3420749	Argument	PermString ( * parent_perms )		3419771	5					
ANR	3420750	CallExpression	PermString ( * parent_perms )		3419771	0					
ANR	3420751	Callee	PermString		3419771	0					
ANR	3420752	Identifier	PermString		3419771	0					
ANR	3420753	ArgumentList	* parent_perms		3419771	1					
ANR	3420754	Argument	* parent_perms		3419771	0					
ANR	3420755	UnaryOperationExpression	* parent_perms		3419771	0					
ANR	3420756	UnaryOperator	*		3419771	0					
ANR	3420757	Identifier	parent_perms		3419771	1					
ANR	3420758	IfStatement	if ( allow_reason )		3419771	3					
ANR	3420759	Condition	allow_reason	877:10:23902:23913	3419771	0	True				
ANR	3420760	Identifier	allow_reason		3419771	0					
ANR	3420761	CompoundStatement		213:7:6590:6618	3419771	1					
ANR	3420762	IdentifierDeclStatement	MyString tmp = * allow_reason ;	878:7:23926:23954	3419771	0	True				
ANR	3420763	IdentifierDecl	tmp = * allow_reason		3419771	0					
ANR	3420764	IdentifierDeclType	MyString		3419771	0					
ANR	3420765	Identifier	tmp		3419771	1					
ANR	3420766	AssignmentExpression	tmp = * allow_reason		3419771	2		=			
ANR	3420767	Identifier	tmp		3419771	0					
ANR	3420768	UnaryOperationExpression	* allow_reason		3419771	1					
ANR	3420769	UnaryOperator	*		3419771	0					
ANR	3420770	Identifier	allow_reason		3419771	1					
ANR	3420771	ExpressionStatement	"allow_reason -> sprintf ( ""%s is implied by %s; %s"" , PermString ( perm ) , PermString ( * parent_perms ) , tmp . Value ( ) )"	879:7:23963:24102	3419771	1	True				
ANR	3420772	CallExpression	"allow_reason -> sprintf ( ""%s is implied by %s; %s"" , PermString ( perm ) , PermString ( * parent_perms ) , tmp . Value ( ) )"		3419771	0					
ANR	3420773	Callee	allow_reason -> sprintf		3419771	0					
ANR	3420774	PtrMemberAccess	allow_reason -> sprintf		3419771	0					
ANR	3420775	Identifier	allow_reason		3419771	0					
ANR	3420776	Identifier	sprintf		3419771	1					
ANR	3420777	ArgumentList	"""%s is implied by %s; %s"""		3419771	1					
ANR	3420778	Argument	"""%s is implied by %s; %s"""		3419771	0					
ANR	3420779	PrimaryExpression	"""%s is implied by %s; %s"""		3419771	0					
ANR	3420780	Argument	PermString ( perm )		3419771	1					
ANR	3420781	CallExpression	PermString ( perm )		3419771	0					
ANR	3420782	Callee	PermString		3419771	0					
ANR	3420783	Identifier	PermString		3419771	0					
ANR	3420784	ArgumentList	perm		3419771	1					
ANR	3420785	Argument	perm		3419771	0					
ANR	3420786	Identifier	perm		3419771	0					
ANR	3420787	Argument	PermString ( * parent_perms )		3419771	2					
ANR	3420788	CallExpression	PermString ( * parent_perms )		3419771	0					
ANR	3420789	Callee	PermString		3419771	0					
ANR	3420790	Identifier	PermString		3419771	0					
ANR	3420791	ArgumentList	* parent_perms		3419771	1					
ANR	3420792	Argument	* parent_perms		3419771	0					
ANR	3420793	UnaryOperationExpression	* parent_perms		3419771	0					
ANR	3420794	UnaryOperator	*		3419771	0					
ANR	3420795	Identifier	parent_perms		3419771	1					
ANR	3420796	Argument	tmp . Value ( )		3419771	3					
ANR	3420797	CallExpression	tmp . Value ( )		3419771	0					
ANR	3420798	Callee	tmp . Value		3419771	0					
ANR	3420799	MemberAccess	tmp . Value		3419771	0					
ANR	3420800	Identifier	tmp		3419771	0					
ANR	3420801	Identifier	Value		3419771	1					
ANR	3420802	ArgumentList			3419771	1					
ANR	3420803	BreakStatement	break ;	885:6:24118:24123	3419771	4	True				
ANR	3420804	IfStatement	if ( parent_allowed )		3419771	4					
ANR	3420805	Condition	parent_allowed	888:8:24146:24159	3419771	0	True				
ANR	3420806	Identifier	parent_allowed		3419771	0					
ANR	3420807	CompoundStatement		223:25:6827:6827	3419771	1					
ANR	3420808	ExpressionStatement	mask |= allow_mask ( perm )	889:5:24170:24194	3419771	0	True				
ANR	3420809	AssignmentExpression	mask |= allow_mask ( perm )		3419771	0		|=			
ANR	3420810	Identifier	mask		3419771	0					
ANR	3420811	CallExpression	allow_mask ( perm )		3419771	1					
ANR	3420812	Callee	allow_mask		3419771	0					
ANR	3420813	Identifier	allow_mask		3419771	0					
ANR	3420814	ArgumentList	perm		3419771	1					
ANR	3420815	Argument	perm		3419771	0					
ANR	3420816	Identifier	perm		3419771	0					
ANR	3420817	ElseStatement	else		3419771	0					
ANR	3420818	CompoundStatement		226:9:6875:6875	3419771	0					
ANR	3420819	ExpressionStatement	mask |= deny_mask ( perm )	892:5:24218:24241	3419771	0	True				
ANR	3420820	AssignmentExpression	mask |= deny_mask ( perm )		3419771	0		|=			
ANR	3420821	Identifier	mask		3419771	0					
ANR	3420822	CallExpression	deny_mask ( perm )		3419771	1					
ANR	3420823	Callee	deny_mask		3419771	0					
ANR	3420824	Identifier	deny_mask		3419771	0					
ANR	3420825	ArgumentList	perm		3419771	1					
ANR	3420826	Argument	perm		3419771	0					
ANR	3420827	Identifier	perm		3419771	0					
ANR	3420828	IfStatement	if ( ! determined_by_parent && deny_reason )		3419771	1					
ANR	3420829	Condition	! determined_by_parent && deny_reason	894:9:24253:24288	3419771	0	True				
ANR	3420830	AndExpression	! determined_by_parent && deny_reason		3419771	0		&&			
ANR	3420831	UnaryOperationExpression	! determined_by_parent		3419771	0					
ANR	3420832	UnaryOperator	!		3419771	0					
ANR	3420833	Identifier	determined_by_parent		3419771	1					
ANR	3420834	Identifier	deny_reason		3419771	1					
ANR	3420835	CompoundStatement		229:48:6956:6956	3419771	1					
ANR	3420836	Statement	deny_reason	900:6:24557:24567	3419771	0	True				
ANR	3420837	Statement	->	900:17:24568:24569	3419771	1	True				
ANR	3420838	Statement	sprintf	900:19:24570:24576	3419771	2	True				
ANR	3420839	Statement	(	900:26:24577:24577	3419771	3	True				
ANR	3420840	Statement	"""%s authorization policy contains no matching """	901:7:24586:24632	3419771	4	True				
ANR	3420841	Statement	"""ALLOW entry for this request"""	902:7:24641:24670	3419771	5	True				
ANR	3420842	Statement	"""; identifiers used for this host: %s, hostname size = %lu, """	903:7:24679:24739	3419771	6	True				
ANR	3420843	Statement	"""original ip address = %s"""	904:7:24748:24773	3419771	7	True				
ANR	3420844	Statement	","	904:33:24774:24774	3419771	8	True				
ANR	3420845	Statement	PermString	905:7:24783:24792	3419771	9	True				
ANR	3420846	Statement	(	905:17:24793:24793	3419771	10	True				
ANR	3420847	Statement	perm	905:18:24794:24797	3419771	11	True				
ANR	3420848	Statement	)	905:22:24798:24798	3419771	12	True				
ANR	3420849	Statement	","	905:23:24799:24799	3419771	13	True				
ANR	3420850	Statement	peer_description	906:7:24808:24823	3419771	14	True				
ANR	3420851	Statement	.	906:23:24824:24824	3419771	15	True				
ANR	3420852	Statement	Value	906:24:24825:24829	3419771	16	True				
ANR	3420853	Statement	(	906:29:24830:24830	3419771	17	True				
ANR	3420854	Statement	)	906:30:24831:24831	3419771	18	True				
ANR	3420855	Statement	","	906:31:24832:24832	3419771	19	True				
ANR	3420856	Statement	hostnames	907:7:24841:24849	3419771	20	True				
ANR	3420857	Statement	.	907:16:24850:24850	3419771	21	True				
ANR	3420858	Statement	size	907:17:24851:24854	3419771	22	True				
ANR	3420859	Statement	(	907:21:24855:24855	3419771	23	True				
ANR	3420860	Statement	)	907:22:24856:24856	3419771	24	True				
ANR	3420861	Statement	","	907:23:24857:24857	3419771	25	True				
ANR	3420862	Statement	ipstr	908:7:24866:24870	3419771	26	True				
ANR	3420863	Statement	)	908:12:24871:24871	3419771	27	True				
ANR	3420864	ExpressionStatement		908:13:24872:24872	3419771	28	True				
ANR	3420865	IfStatement	if ( ! determined_by_parent && ( mask & allow_mask ( perm ) ) )		3419771	20					
ANR	3420866	Condition	! determined_by_parent && ( mask & allow_mask ( perm ) )	914:6:24903:24950	3419771	0	True				
ANR	3420867	AndExpression	! determined_by_parent && ( mask & allow_mask ( perm ) )		3419771	0		&&			
ANR	3420868	UnaryOperationExpression	! determined_by_parent		3419771	0					
ANR	3420869	UnaryOperator	!		3419771	0					
ANR	3420870	Identifier	determined_by_parent		3419771	1					
ANR	3420871	BitAndExpression	mask & allow_mask ( perm )		3419771	1		&			
ANR	3420872	Identifier	mask		3419771	0					
ANR	3420873	CallExpression	allow_mask ( perm )		3419771	1					
ANR	3420874	Callee	allow_mask		3419771	0					
ANR	3420875	Identifier	allow_mask		3419771	0					
ANR	3420876	ArgumentList	perm		3419771	1					
ANR	3420877	Argument	perm		3419771	0					
ANR	3420878	Identifier	perm		3419771	0					
ANR	3420879	CompoundStatement		249:57:7618:7618	3419771	1					
ANR	3420880	IfStatement	if ( allow_reason && ! peer_description . IsEmpty ( ) )		3419771	0					
ANR	3420881	Condition	allow_reason && ! peer_description . IsEmpty ( )	919:7:25164:25206	3419771	0	True				
ANR	3420882	AndExpression	allow_reason && ! peer_description . IsEmpty ( )		3419771	0		&&			
ANR	3420883	Identifier	allow_reason		3419771	0					
ANR	3420884	UnaryOperationExpression	! peer_description . IsEmpty ( )		3419771	1					
ANR	3420885	UnaryOperator	!		3419771	0					
ANR	3420886	CallExpression	peer_description . IsEmpty ( )		3419771	1					
ANR	3420887	Callee	peer_description . IsEmpty		3419771	0					
ANR	3420888	MemberAccess	peer_description . IsEmpty		3419771	0					
ANR	3420889	Identifier	peer_description		3419771	0					
ANR	3420890	Identifier	IsEmpty		3419771	1					
ANR	3420891	ArgumentList			3419771	1					
ANR	3420892	CompoundStatement		254:53:7874:7874	3419771	1					
ANR	3420893	ExpressionStatement	"allow_reason -> sprintf_cat ( ""; identifiers used for this remote host: %s"" , peer_description . Value ( ) )"	920:4:25216:25325	3419771	0	True				
ANR	3420894	CallExpression	"allow_reason -> sprintf_cat ( ""; identifiers used for this remote host: %s"" , peer_description . Value ( ) )"		3419771	0					
ANR	3420895	Callee	allow_reason -> sprintf_cat		3419771	0					
ANR	3420896	PtrMemberAccess	allow_reason -> sprintf_cat		3419771	0					
ANR	3420897	Identifier	allow_reason		3419771	0					
ANR	3420898	Identifier	sprintf_cat		3419771	1					
ANR	3420899	ArgumentList	"""; identifiers used for this remote host: %s"""		3419771	1					
ANR	3420900	Argument	"""; identifiers used for this remote host: %s"""		3419771	0					
ANR	3420901	PrimaryExpression	"""; identifiers used for this remote host: %s"""		3419771	0					
ANR	3420902	Argument	peer_description . Value ( )		3419771	1					
ANR	3420903	CallExpression	peer_description . Value ( )		3419771	0					
ANR	3420904	Callee	peer_description . Value		3419771	0					
ANR	3420905	MemberAccess	peer_description . Value		3419771	0					
ANR	3420906	Identifier	peer_description		3419771	0					
ANR	3420907	Identifier	Value		3419771	1					
ANR	3420908	ArgumentList			3419771	1					
ANR	3420909	ExpressionStatement	"add_hash_entry ( sin6_addr , who , mask )"	927:3:25413:25449	3419771	21	True				
ANR	3420910	CallExpression	"add_hash_entry ( sin6_addr , who , mask )"		3419771	0					
ANR	3420911	Callee	add_hash_entry		3419771	0					
ANR	3420912	Identifier	add_hash_entry		3419771	0					
ANR	3420913	ArgumentList	sin6_addr		3419771	1					
ANR	3420914	Argument	sin6_addr		3419771	0					
ANR	3420915	Identifier	sin6_addr		3419771	0					
ANR	3420916	Argument	who		3419771	1					
ANR	3420917	Identifier	who		3419771	0					
ANR	3420918	Argument	mask		3419771	2					
ANR	3420919	Identifier	mask		3419771	0					
ANR	3420920	IfStatement	if ( mask & deny_mask ( perm ) )		3419771	15					
ANR	3420921	Condition	mask & deny_mask ( perm )	931:6:25557:25578	3419771	0	True				
ANR	3420922	BitAndExpression	mask & deny_mask ( perm )		3419771	0		&			
ANR	3420923	Identifier	mask		3419771	0					
ANR	3420924	CallExpression	deny_mask ( perm )		3419771	1					
ANR	3420925	Callee	deny_mask		3419771	0					
ANR	3420926	Identifier	deny_mask		3419771	0					
ANR	3420927	ArgumentList	perm		3419771	1					
ANR	3420928	Argument	perm		3419771	0					
ANR	3420929	Identifier	perm		3419771	0					
ANR	3420930	CompoundStatement		266:31:8246:8246	3419771	1					
ANR	3420931	ReturnStatement	return USER_AUTH_FAILURE ;	932:2:25586:25610	3419771	0	True				
ANR	3420932	Identifier	USER_AUTH_FAILURE		3419771	0					
ANR	3420933	IfStatement	if ( mask & allow_mask ( perm ) )		3419771	16					
ANR	3420934	Condition	mask & allow_mask ( perm )	935:6:25622:25644	3419771	0	True				
ANR	3420935	BitAndExpression	mask & allow_mask ( perm )		3419771	0		&			
ANR	3420936	Identifier	mask		3419771	0					
ANR	3420937	CallExpression	allow_mask ( perm )		3419771	1					
ANR	3420938	Callee	allow_mask		3419771	0					
ANR	3420939	Identifier	allow_mask		3419771	0					
ANR	3420940	ArgumentList	perm		3419771	1					
ANR	3420941	Argument	perm		3419771	0					
ANR	3420942	Identifier	perm		3419771	0					
ANR	3420943	CompoundStatement		270:32:8312:8312	3419771	1					
ANR	3420944	ReturnStatement	return USER_AUTH_SUCCESS ;	936:2:25652:25676	3419771	0	True				
ANR	3420945	Identifier	USER_AUTH_SUCCESS		3419771	0					
ANR	3420946	ReturnStatement	return USER_AUTH_FAILURE ;	939:1:25683:25707	3419771	17	True				
ANR	3420947	Identifier	USER_AUTH_FAILURE		3419771	0					
ANR	3420948	ReturnType	int		3419771	1					
ANR	3420949	Identifier	IpVerify :: Verify		3419771	2					
ANR	3420950	ParameterList	"DCpermission perm , const condor_sockaddr & addr , const char * user , MyString * allow_reason , MyString * deny_reason"		3419771	3					
ANR	3420951	Parameter	DCpermission perm	665:18:17220:17236	3419771	0	True				
ANR	3420952	ParameterType	DCpermission		3419771	0					
ANR	3420953	Identifier	perm		3419771	1					
ANR	3420954	Parameter	const condor_sockaddr & addr	665:37:17239:17265	3419771	1	True				
ANR	3420955	ParameterType	const condor_sockaddr &		3419771	0					
ANR	3420956	Identifier	addr		3419771	1					
ANR	3420957	Parameter	const char * user	665:66:17268:17284	3419771	2	True				
ANR	3420958	ParameterType	const char *		3419771	0					
ANR	3420959	Identifier	user		3419771	1					
ANR	3420960	Parameter	MyString * allow_reason	665:85:17287:17308	3419771	3	True				
ANR	3420961	ParameterType	MyString *		3419771	0					
ANR	3420962	Identifier	allow_reason		3419771	1					
ANR	3420963	Parameter	MyString * deny_reason	665:109:17311:17331	3419771	4	True				
ANR	3420964	ParameterType	MyString *		3419771	0					
ANR	3420965	Identifier	deny_reason		3419771	1					
ANR	3420966	CFGEntryNode	ENTRY		3419771		True				
ANR	3420967	CFGExitNode	EXIT		3419771		True				
ANR	3420968	Symbol	* perm		3419771						
ANR	3420969	Symbol	* PermTypeArray		3419771						
ANR	3420970	Symbol	* parent_perms		3419771						
ANR	3420971	Symbol	* * perm		3419771						
ANR	3420972	Symbol	deny_resolved		3419771						
ANR	3420973	Symbol	tmp . Value		3419771						
ANR	3420974	Symbol	ip_str_buf . Value		3419771						
ANR	3420975	Symbol	deny_reason		3419771						
ANR	3420976	Symbol	USERVERIFY_DENY		3419771						
ANR	3420977	Symbol	thehost		3419771						
ANR	3420978	Symbol	id_with_ip . Value		3419771						
ANR	3420979	Symbol	* * PermTypeArray		3419771						
ANR	3420980	Symbol	tmp		3419771						
ANR	3420981	Symbol	* hostnames		3419771						
ANR	3420982	Symbol	id		3419771						
ANR	3420983	Symbol	Verify		3419771						
ANR	3420984	Symbol	ip_str		3419771						
ANR	3420985	Symbol	hostnames [ i ] . Value		3419771						
ANR	3420986	Symbol	hpt -> lookup		3419771						
ANR	3420987	Symbol	LAST_PERM		3419771						
ANR	3420988	Symbol	allow_mask		3419771						
ANR	3420989	Symbol	NULL		3419771						
ANR	3420990	Symbol	did_init		3419771						
ANR	3420991	Symbol	sin6_addr		3419771						
ANR	3420992	Symbol	hierarchy		3419771						
ANR	3420993	Symbol	* who		3419771						
ANR	3420994	Symbol	count		3419771						
ANR	3420995	Symbol	* allow_reason		3419771						
ANR	3420996	Symbol	* hpt		3419771						
ANR	3420997	Symbol	hostnames		3419771						
ANR	3420998	Symbol	id_with_ip		3419771						
ANR	3420999	Symbol	addr . to_ip_string ( ) . Value		3419771						
ANR	3421000	Symbol	allow_reason		3419771						
ANR	3421001	Symbol	USERVERIFY_ALLOW		3419771						
ANR	3421002	Symbol	parent_perms		3419771						
ANR	3421003	Symbol	USER_AUTH_SUCCESS		3419771						
ANR	3421004	Symbol	allow_resolved		3419771						
ANR	3421005	Symbol	true		3419771						
ANR	3421006	Symbol	* PunchedHoleArray		3419771						
ANR	3421007	Symbol	id . Value		3419771						
ANR	3421008	Symbol	lookup_user_host_deny		3419771						
ANR	3421009	Symbol	PermString		3419771						
ANR	3421010	Symbol	ip_str_buf		3419771						
ANR	3421011	Symbol	lookup_user_ip_allow		3419771						
ANR	3421012	Symbol	USER_AUTH_FAILURE		3419771						
ANR	3421013	Symbol	hostnames . size		3419771						
ANR	3421014	Symbol	USERVERIFY_ONLY_DENIES		3419771						
ANR	3421015	Symbol	who		3419771						
ANR	3421016	Symbol	parent_allowed		3419771						
ANR	3421017	Symbol	peer_description		3419771						
ANR	3421018	Symbol	lookup_user_ip_deny		3419771						
ANR	3421019	Symbol	perm		3419771						
ANR	3421020	Symbol	addr . to_sinful ( ) . Value		3419771						
ANR	3421021	Symbol	D_SECURITY		3419771						
ANR	3421022	Symbol	peer_description . Value		3419771						
ANR	3421023	Symbol	lookup_user_host_allow		3419771						
ANR	3421024	Symbol	get_hostname_with_alias		3419771						
ANR	3421025	Symbol	ipstr		3419771						
ANR	3421026	Symbol	deny_mask		3419771						
ANR	3421027	Symbol	determined_by_parent		3419771						
ANR	3421028	Symbol	addr		3419771						
ANR	3421029	Symbol	PunchedHoleArray		3419771						
ANR	3421030	Symbol	hierarchy . getPermsIAmDirectlyImpliedBy		3419771						
ANR	3421031	Symbol	mask		3419771						
ANR	3421032	Symbol	addr . to_ip_string		3419771						
ANR	3421033	Symbol	LookupCachedVerifyResult		3419771						
ANR	3421034	Symbol	false		3419771						
ANR	3421035	Symbol	i		3419771						
ANR	3421036	Symbol	PermTypeArray		3419771						
ANR	3421037	Symbol	INET6_ADDRSTRLEN		3419771						
ANR	3421038	Symbol	addr . to_ipv6_address		3419771						
ANR	3421039	Symbol	hpt		3419771						
ANR	3421040	Symbol	TotallyWild		3419771						
ANR	3421041	Symbol	PermTypeArray [ perm ] -> behavior		3419771						
ANR	3421042	Symbol	* i		3419771						
ANR	3421043	Symbol	addr . to_sinful		3419771						
ANR	3421044	Symbol	peer_description . IsEmpty		3419771						
ANR	3421045	Symbol	user		3419771						
ANR	3421046	Function	IpVerify :: lookup_user_ip_allow	942:0:25712:25938							
ANR	3421047	FunctionDef	"IpVerify :: lookup_user_ip_allow (DCpermission perm , char const * user , char const * ip)"		3421046	0					
ANR	3421048	CompoundStatement		944:0:25801:25938	3421046	0					
ANR	3421049	IdentifierDeclStatement	PermTypeEntry * permentry = PermTypeArray [ perm ] ;	945:1:25804:25850	3421046	0	True				
ANR	3421050	IdentifierDecl	* permentry = PermTypeArray [ perm ]		3421046	0					
ANR	3421051	IdentifierDeclType	PermTypeEntry *		3421046	0					
ANR	3421052	Identifier	permentry		3421046	1					
ANR	3421053	AssignmentExpression	* permentry = PermTypeArray [ perm ]		3421046	2		=			
ANR	3421054	Identifier	permentry		3421046	0					
ANR	3421055	ArrayIndexing	PermTypeArray [ perm ]		3421046	1					
ANR	3421056	Identifier	PermTypeArray		3421046	0					
ANR	3421057	Identifier	perm		3421046	1					
ANR	3421058	ReturnStatement	"return lookup_user ( permentry -> allow_hosts , permentry -> allow_users , user , ip , NULL , true ) ;"	946:1:25853:25936	3421046	1	True				
ANR	3421059	CallExpression	"lookup_user ( permentry -> allow_hosts , permentry -> allow_users , user , ip , NULL , true )"		3421046	0					
ANR	3421060	Callee	lookup_user		3421046	0					
ANR	3421061	Identifier	lookup_user		3421046	0					
ANR	3421062	ArgumentList	permentry -> allow_hosts		3421046	1					
ANR	3421063	Argument	permentry -> allow_hosts		3421046	0					
ANR	3421064	PtrMemberAccess	permentry -> allow_hosts		3421046	0					
ANR	3421065	Identifier	permentry		3421046	0					
ANR	3421066	Identifier	allow_hosts		3421046	1					
ANR	3421067	Argument	permentry -> allow_users		3421046	1					
ANR	3421068	PtrMemberAccess	permentry -> allow_users		3421046	0					
ANR	3421069	Identifier	permentry		3421046	0					
ANR	3421070	Identifier	allow_users		3421046	1					
ANR	3421071	Argument	user		3421046	2					
ANR	3421072	Identifier	user		3421046	0					
ANR	3421073	Argument	ip		3421046	3					
ANR	3421074	Identifier	ip		3421046	0					
ANR	3421075	Argument	NULL		3421046	4					
ANR	3421076	Identifier	NULL		3421046	0					
ANR	3421077	Argument	true		3421046	5					
ANR	3421078	Identifier	true		3421046	0					
ANR	3421079	ReturnType	bool		3421046	1					
ANR	3421080	Identifier	IpVerify :: lookup_user_ip_allow		3421046	2					
ANR	3421081	ParameterList	"DCpermission perm , char const * user , char const * ip"		3421046	3					
ANR	3421082	Parameter	DCpermission perm	943:31:25748:25764	3421046	0	True				
ANR	3421083	ParameterType	DCpermission		3421046	0					
ANR	3421084	Identifier	perm		3421046	1					
ANR	3421085	Parameter	char const * user	943:50:25767:25782	3421046	1	True				
ANR	3421086	ParameterType	char const *		3421046	0					
ANR	3421087	Identifier	user		3421046	1					
ANR	3421088	Parameter	char const * ip	943:68:25785:25798	3421046	2	True				
ANR	3421089	ParameterType	char const *		3421046	0					
ANR	3421090	Identifier	ip		3421046	1					
ANR	3421091	CFGEntryNode	ENTRY		3421046		True				
ANR	3421092	CFGExitNode	EXIT		3421046		True				
ANR	3421093	Symbol	NULL		3421046						
ANR	3421094	Symbol	perm		3421046						
ANR	3421095	Symbol	* perm		3421046						
ANR	3421096	Symbol	* PermTypeArray		3421046						
ANR	3421097	Symbol	ip		3421046						
ANR	3421098	Symbol	* permentry		3421046						
ANR	3421099	Symbol	PermTypeArray		3421046						
ANR	3421100	Symbol	permentry		3421046						
ANR	3421101	Symbol	permentry -> allow_users		3421046						
ANR	3421102	Symbol	lookup_user		3421046						
ANR	3421103	Symbol	true		3421046						
ANR	3421104	Symbol	permentry -> allow_hosts		3421046						
ANR	3421105	Symbol	user		3421046						
ANR	3421106	Function	IpVerify :: lookup_user_ip_deny	949:0:25941:26165							
ANR	3421107	FunctionDef	"IpVerify :: lookup_user_ip_deny (DCpermission perm , char const * user , char const * ip)"		3421106	0					
ANR	3421108	CompoundStatement		951:0:26029:26165	3421106	0					
ANR	3421109	IdentifierDeclStatement	PermTypeEntry * permentry = PermTypeArray [ perm ] ;	952:1:26032:26078	3421106	0	True				
ANR	3421110	IdentifierDecl	* permentry = PermTypeArray [ perm ]		3421106	0					
ANR	3421111	IdentifierDeclType	PermTypeEntry *		3421106	0					
ANR	3421112	Identifier	permentry		3421106	1					
ANR	3421113	AssignmentExpression	* permentry = PermTypeArray [ perm ]		3421106	2		=			
ANR	3421114	Identifier	permentry		3421106	0					
ANR	3421115	ArrayIndexing	PermTypeArray [ perm ]		3421106	1					
ANR	3421116	Identifier	PermTypeArray		3421106	0					
ANR	3421117	Identifier	perm		3421106	1					
ANR	3421118	ReturnStatement	"return lookup_user ( permentry -> deny_hosts , permentry -> deny_users , user , ip , NULL , false ) ;"	953:1:26081:26163	3421106	1	True				
ANR	3421119	CallExpression	"lookup_user ( permentry -> deny_hosts , permentry -> deny_users , user , ip , NULL , false )"		3421106	0					
ANR	3421120	Callee	lookup_user		3421106	0					
ANR	3421121	Identifier	lookup_user		3421106	0					
ANR	3421122	ArgumentList	permentry -> deny_hosts		3421106	1					
ANR	3421123	Argument	permentry -> deny_hosts		3421106	0					
ANR	3421124	PtrMemberAccess	permentry -> deny_hosts		3421106	0					
ANR	3421125	Identifier	permentry		3421106	0					
ANR	3421126	Identifier	deny_hosts		3421106	1					
ANR	3421127	Argument	permentry -> deny_users		3421106	1					
ANR	3421128	PtrMemberAccess	permentry -> deny_users		3421106	0					
ANR	3421129	Identifier	permentry		3421106	0					
ANR	3421130	Identifier	deny_users		3421106	1					
ANR	3421131	Argument	user		3421106	2					
ANR	3421132	Identifier	user		3421106	0					
ANR	3421133	Argument	ip		3421106	3					
ANR	3421134	Identifier	ip		3421106	0					
ANR	3421135	Argument	NULL		3421106	4					
ANR	3421136	Identifier	NULL		3421106	0					
ANR	3421137	Argument	false		3421106	5					
ANR	3421138	Identifier	false		3421106	0					
ANR	3421139	ReturnType	bool		3421106	1					
ANR	3421140	Identifier	IpVerify :: lookup_user_ip_deny		3421106	2					
ANR	3421141	ParameterList	"DCpermission perm , char const * user , char const * ip"		3421106	3					
ANR	3421142	Parameter	DCpermission perm	950:30:25976:25992	3421106	0	True				
ANR	3421143	ParameterType	DCpermission		3421106	0					
ANR	3421144	Identifier	perm		3421106	1					
ANR	3421145	Parameter	char const * user	950:49:25995:26010	3421106	1	True				
ANR	3421146	ParameterType	char const *		3421106	0					
ANR	3421147	Identifier	user		3421106	1					
ANR	3421148	Parameter	char const * ip	950:67:26013:26026	3421106	2	True				
ANR	3421149	ParameterType	char const *		3421106	0					
ANR	3421150	Identifier	ip		3421106	1					
ANR	3421151	CFGEntryNode	ENTRY		3421106		True				
ANR	3421152	CFGExitNode	EXIT		3421106		True				
ANR	3421153	Symbol	NULL		3421106						
ANR	3421154	Symbol	perm		3421106						
ANR	3421155	Symbol	* perm		3421106						
ANR	3421156	Symbol	* PermTypeArray		3421106						
ANR	3421157	Symbol	ip		3421106						
ANR	3421158	Symbol	false		3421106						
ANR	3421159	Symbol	* permentry		3421106						
ANR	3421160	Symbol	PermTypeArray		3421106						
ANR	3421161	Symbol	permentry -> deny_users		3421106						
ANR	3421162	Symbol	permentry		3421106						
ANR	3421163	Symbol	lookup_user		3421106						
ANR	3421164	Symbol	permentry -> deny_hosts		3421106						
ANR	3421165	Symbol	user		3421106						
ANR	3421166	Function	IpVerify :: lookup_user_host_allow	956:0:26168:26408							
ANR	3421167	FunctionDef	"IpVerify :: lookup_user_host_allow (DCpermission perm , char const * user , char const * hostname)"		3421166	0					
ANR	3421168	CompoundStatement		958:0:26265:26408	3421166	0					
ANR	3421169	IdentifierDeclStatement	PermTypeEntry * permentry = PermTypeArray [ perm ] ;	959:1:26268:26314	3421166	0	True				
ANR	3421170	IdentifierDecl	* permentry = PermTypeArray [ perm ]		3421166	0					
ANR	3421171	IdentifierDeclType	PermTypeEntry *		3421166	0					
ANR	3421172	Identifier	permentry		3421166	1					
ANR	3421173	AssignmentExpression	* permentry = PermTypeArray [ perm ]		3421166	2		=			
ANR	3421174	Identifier	permentry		3421166	0					
ANR	3421175	ArrayIndexing	PermTypeArray [ perm ]		3421166	1					
ANR	3421176	Identifier	PermTypeArray		3421166	0					
ANR	3421177	Identifier	perm		3421166	1					
ANR	3421178	ReturnStatement	"return lookup_user ( permentry -> allow_hosts , permentry -> allow_users , user , NULL , hostname , true ) ;"	960:1:26317:26406	3421166	1	True				
ANR	3421179	CallExpression	"lookup_user ( permentry -> allow_hosts , permentry -> allow_users , user , NULL , hostname , true )"		3421166	0					
ANR	3421180	Callee	lookup_user		3421166	0					
ANR	3421181	Identifier	lookup_user		3421166	0					
ANR	3421182	ArgumentList	permentry -> allow_hosts		3421166	1					
ANR	3421183	Argument	permentry -> allow_hosts		3421166	0					
ANR	3421184	PtrMemberAccess	permentry -> allow_hosts		3421166	0					
ANR	3421185	Identifier	permentry		3421166	0					
ANR	3421186	Identifier	allow_hosts		3421166	1					
ANR	3421187	Argument	permentry -> allow_users		3421166	1					
ANR	3421188	PtrMemberAccess	permentry -> allow_users		3421166	0					
ANR	3421189	Identifier	permentry		3421166	0					
ANR	3421190	Identifier	allow_users		3421166	1					
ANR	3421191	Argument	user		3421166	2					
ANR	3421192	Identifier	user		3421166	0					
ANR	3421193	Argument	NULL		3421166	3					
ANR	3421194	Identifier	NULL		3421166	0					
ANR	3421195	Argument	hostname		3421166	4					
ANR	3421196	Identifier	hostname		3421166	0					
ANR	3421197	Argument	true		3421166	5					
ANR	3421198	Identifier	true		3421166	0					
ANR	3421199	ReturnType	bool		3421166	1					
ANR	3421200	Identifier	IpVerify :: lookup_user_host_allow		3421166	2					
ANR	3421201	ParameterList	"DCpermission perm , char const * user , char const * hostname"		3421166	3					
ANR	3421202	Parameter	DCpermission perm	957:33:26206:26222	3421166	0	True				
ANR	3421203	ParameterType	DCpermission		3421166	0					
ANR	3421204	Identifier	perm		3421166	1					
ANR	3421205	Parameter	char const * user	957:52:26225:26240	3421166	1	True				
ANR	3421206	ParameterType	char const *		3421166	0					
ANR	3421207	Identifier	user		3421166	1					
ANR	3421208	Parameter	char const * hostname	957:70:26243:26262	3421166	2	True				
ANR	3421209	ParameterType	char const *		3421166	0					
ANR	3421210	Identifier	hostname		3421166	1					
ANR	3421211	CFGEntryNode	ENTRY		3421166		True				
ANR	3421212	CFGExitNode	EXIT		3421166		True				
ANR	3421213	Symbol	NULL		3421166						
ANR	3421214	Symbol	perm		3421166						
ANR	3421215	Symbol	* perm		3421166						
ANR	3421216	Symbol	* PermTypeArray		3421166						
ANR	3421217	Symbol	* permentry		3421166						
ANR	3421218	Symbol	PermTypeArray		3421166						
ANR	3421219	Symbol	hostname		3421166						
ANR	3421220	Symbol	permentry		3421166						
ANR	3421221	Symbol	permentry -> allow_users		3421166						
ANR	3421222	Symbol	lookup_user		3421166						
ANR	3421223	Symbol	true		3421166						
ANR	3421224	Symbol	permentry -> allow_hosts		3421166						
ANR	3421225	Symbol	user		3421166						
ANR	3421226	Function	IpVerify :: lookup_user_host_deny	963:0:26411:26649							
ANR	3421227	FunctionDef	"IpVerify :: lookup_user_host_deny (DCpermission perm , char const * user , char const * hostname)"		3421226	0					
ANR	3421228	CompoundStatement		965:0:26507:26649	3421226	0					
ANR	3421229	IdentifierDeclStatement	PermTypeEntry * permentry = PermTypeArray [ perm ] ;	966:1:26510:26556	3421226	0	True				
ANR	3421230	IdentifierDecl	* permentry = PermTypeArray [ perm ]		3421226	0					
ANR	3421231	IdentifierDeclType	PermTypeEntry *		3421226	0					
ANR	3421232	Identifier	permentry		3421226	1					
ANR	3421233	AssignmentExpression	* permentry = PermTypeArray [ perm ]		3421226	2		=			
ANR	3421234	Identifier	permentry		3421226	0					
ANR	3421235	ArrayIndexing	PermTypeArray [ perm ]		3421226	1					
ANR	3421236	Identifier	PermTypeArray		3421226	0					
ANR	3421237	Identifier	perm		3421226	1					
ANR	3421238	ReturnStatement	"return lookup_user ( permentry -> deny_hosts , permentry -> deny_users , user , NULL , hostname , false ) ;"	967:1:26559:26647	3421226	1	True				
ANR	3421239	CallExpression	"lookup_user ( permentry -> deny_hosts , permentry -> deny_users , user , NULL , hostname , false )"		3421226	0					
ANR	3421240	Callee	lookup_user		3421226	0					
ANR	3421241	Identifier	lookup_user		3421226	0					
ANR	3421242	ArgumentList	permentry -> deny_hosts		3421226	1					
ANR	3421243	Argument	permentry -> deny_hosts		3421226	0					
ANR	3421244	PtrMemberAccess	permentry -> deny_hosts		3421226	0					
ANR	3421245	Identifier	permentry		3421226	0					
ANR	3421246	Identifier	deny_hosts		3421226	1					
ANR	3421247	Argument	permentry -> deny_users		3421226	1					
ANR	3421248	PtrMemberAccess	permentry -> deny_users		3421226	0					
ANR	3421249	Identifier	permentry		3421226	0					
ANR	3421250	Identifier	deny_users		3421226	1					
ANR	3421251	Argument	user		3421226	2					
ANR	3421252	Identifier	user		3421226	0					
ANR	3421253	Argument	NULL		3421226	3					
ANR	3421254	Identifier	NULL		3421226	0					
ANR	3421255	Argument	hostname		3421226	4					
ANR	3421256	Identifier	hostname		3421226	0					
ANR	3421257	Argument	false		3421226	5					
ANR	3421258	Identifier	false		3421226	0					
ANR	3421259	ReturnType	bool		3421226	1					
ANR	3421260	Identifier	IpVerify :: lookup_user_host_deny		3421226	2					
ANR	3421261	ParameterList	"DCpermission perm , char const * user , char const * hostname"		3421226	3					
ANR	3421262	Parameter	DCpermission perm	964:32:26448:26464	3421226	0	True				
ANR	3421263	ParameterType	DCpermission		3421226	0					
ANR	3421264	Identifier	perm		3421226	1					
ANR	3421265	Parameter	char const * user	964:51:26467:26482	3421226	1	True				
ANR	3421266	ParameterType	char const *		3421226	0					
ANR	3421267	Identifier	user		3421226	1					
ANR	3421268	Parameter	char const * hostname	964:69:26485:26504	3421226	2	True				
ANR	3421269	ParameterType	char const *		3421226	0					
ANR	3421270	Identifier	hostname		3421226	1					
ANR	3421271	CFGEntryNode	ENTRY		3421226		True				
ANR	3421272	CFGExitNode	EXIT		3421226		True				
ANR	3421273	Symbol	NULL		3421226						
ANR	3421274	Symbol	perm		3421226						
ANR	3421275	Symbol	* perm		3421226						
ANR	3421276	Symbol	* PermTypeArray		3421226						
ANR	3421277	Symbol	* permentry		3421226						
ANR	3421278	Symbol	false		3421226						
ANR	3421279	Symbol	PermTypeArray		3421226						
ANR	3421280	Symbol	permentry -> deny_users		3421226						
ANR	3421281	Symbol	hostname		3421226						
ANR	3421282	Symbol	permentry		3421226						
ANR	3421283	Symbol	lookup_user		3421226						
ANR	3421284	Symbol	permentry -> deny_hosts		3421226						
ANR	3421285	Symbol	user		3421226						
ANR	3421286	Function	IpVerify :: lookup_user	970:0:26652:27548							
ANR	3421287	FunctionDef	"IpVerify :: lookup_user (NetStringList * hosts , UserHash_t * users , char const * user , char const * ip , char const * hostname , bool is_allow_list)"		3421286	0					
ANR	3421288	CompoundStatement		972:0:26796:27548	3421286	0					
ANR	3421289	IfStatement	if ( ! hosts || ! users )		3421286	0					
ANR	3421290	Condition	! hosts || ! users	973:5:26803:26818	3421286	0	True				
ANR	3421291	OrExpression	! hosts || ! users		3421286	0		||			
ANR	3421292	UnaryOperationExpression	! hosts		3421286	0					
ANR	3421293	UnaryOperator	!		3421286	0					
ANR	3421294	Identifier	hosts		3421286	1					
ANR	3421295	UnaryOperationExpression	! users		3421286	1					
ANR	3421296	UnaryOperator	!		3421286	0					
ANR	3421297	Identifier	users		3421286	1					
ANR	3421298	CompoundStatement		2:24:25:25	3421286	1					
ANR	3421299	ReturnStatement	return false ;	974:2:26826:26838	3421286	0	True				
ANR	3421300	Identifier	false		3421286	0					
ANR	3421301	ExpressionStatement	ASSERT ( user )	976:1:26844:26858	3421286	1	True				
ANR	3421302	CallExpression	ASSERT ( user )		3421286	0					
ANR	3421303	Callee	ASSERT		3421286	0					
ANR	3421304	Identifier	ASSERT		3421286	0					
ANR	3421305	ArgumentList	user		3421286	1					
ANR	3421306	Argument	user		3421286	0					
ANR	3421307	Identifier	user		3421286	0					
ANR	3421308	ExpressionStatement	ASSERT ( ! ip || ! hostname )	979:1:26909:26935	3421286	2	True				
ANR	3421309	CallExpression	ASSERT ( ! ip || ! hostname )		3421286	0					
ANR	3421310	Callee	ASSERT		3421286	0					
ANR	3421311	Identifier	ASSERT		3421286	0					
ANR	3421312	ArgumentList	! ip || ! hostname		3421286	1					
ANR	3421313	Argument	! ip || ! hostname		3421286	0					
ANR	3421314	OrExpression	! ip || ! hostname		3421286	0		||			
ANR	3421315	UnaryOperationExpression	! ip		3421286	0					
ANR	3421316	UnaryOperator	!		3421286	0					
ANR	3421317	Identifier	ip		3421286	1					
ANR	3421318	UnaryOperationExpression	! hostname		3421286	1					
ANR	3421319	UnaryOperator	!		3421286	0					
ANR	3421320	Identifier	hostname		3421286	1					
ANR	3421321	ExpressionStatement	ASSERT ( ip || hostname )	980:1:26938:26961	3421286	3	True				
ANR	3421322	CallExpression	ASSERT ( ip || hostname )		3421286	0					
ANR	3421323	Callee	ASSERT		3421286	0					
ANR	3421324	Identifier	ASSERT		3421286	0					
ANR	3421325	ArgumentList	ip || hostname		3421286	1					
ANR	3421326	Argument	ip || hostname		3421286	0					
ANR	3421327	OrExpression	ip || hostname		3421286	0		||			
ANR	3421328	Identifier	ip		3421286	0					
ANR	3421329	Identifier	hostname		3421286	1					
ANR	3421330	IdentifierDeclStatement	StringList hostmatches ;	982:1:26965:26987	3421286	4	True				
ANR	3421331	IdentifierDecl	hostmatches		3421286	0					
ANR	3421332	IdentifierDeclType	StringList		3421286	0					
ANR	3421333	Identifier	hostmatches		3421286	1					
ANR	3421334	IfStatement	if ( ip )		3421286	5					
ANR	3421335	Condition	ip	983:5:26994:26995	3421286	0	True				
ANR	3421336	Identifier	ip		3421286	0					
ANR	3421337	CompoundStatement		12:10:202:202	3421286	1					
ANR	3421338	ExpressionStatement	"hosts -> find_matches_withnetwork ( ip , & hostmatches )"	984:2:27003:27051	3421286	0	True				
ANR	3421339	CallExpression	"hosts -> find_matches_withnetwork ( ip , & hostmatches )"		3421286	0					
ANR	3421340	Callee	hosts -> find_matches_withnetwork		3421286	0					
ANR	3421341	PtrMemberAccess	hosts -> find_matches_withnetwork		3421286	0					
ANR	3421342	Identifier	hosts		3421286	0					
ANR	3421343	Identifier	find_matches_withnetwork		3421286	1					
ANR	3421344	ArgumentList	ip		3421286	1					
ANR	3421345	Argument	ip		3421286	0					
ANR	3421346	Identifier	ip		3421286	0					
ANR	3421347	Argument	& hostmatches		3421286	1					
ANR	3421348	UnaryOperationExpression	& hostmatches		3421286	0					
ANR	3421349	UnaryOperator	&		3421286	0					
ANR	3421350	Identifier	hostmatches		3421286	1					
ANR	3421351	ElseStatement	else		3421286	0					
ANR	3421352	IfStatement	if ( hostname )		3421286	0					
ANR	3421353	Condition	hostname	986:10:27066:27073	3421286	0	True				
ANR	3421354	Identifier	hostname		3421286	0					
ANR	3421355	CompoundStatement		15:21:280:280	3421286	1					
ANR	3421356	ExpressionStatement	"hosts -> find_matches_anycase_withwildcard ( hostname , & hostmatches )"	987:2:27081:27144	3421286	0	True				
ANR	3421357	CallExpression	"hosts -> find_matches_anycase_withwildcard ( hostname , & hostmatches )"		3421286	0					
ANR	3421358	Callee	hosts -> find_matches_anycase_withwildcard		3421286	0					
ANR	3421359	PtrMemberAccess	hosts -> find_matches_anycase_withwildcard		3421286	0					
ANR	3421360	Identifier	hosts		3421286	0					
ANR	3421361	Identifier	find_matches_anycase_withwildcard		3421286	1					
ANR	3421362	ArgumentList	hostname		3421286	1					
ANR	3421363	Argument	hostname		3421286	0					
ANR	3421364	Identifier	hostname		3421286	0					
ANR	3421365	Argument	& hostmatches		3421286	1					
ANR	3421366	UnaryOperationExpression	& hostmatches		3421286	0					
ANR	3421367	UnaryOperator	&		3421286	0					
ANR	3421368	Identifier	hostmatches		3421286	1					
ANR	3421369	IdentifierDeclStatement	char const * hostmatch ;	990:1:27151:27173	3421286	6	True				
ANR	3421370	IdentifierDecl	* hostmatch		3421286	0					
ANR	3421371	IdentifierDeclType	char const *		3421286	0					
ANR	3421372	Identifier	hostmatch		3421286	1					
ANR	3421373	ExpressionStatement	hostmatches . rewind ( )	991:1:27176:27196	3421286	7	True				
ANR	3421374	CallExpression	hostmatches . rewind ( )		3421286	0					
ANR	3421375	Callee	hostmatches . rewind		3421286	0					
ANR	3421376	MemberAccess	hostmatches . rewind		3421286	0					
ANR	3421377	Identifier	hostmatches		3421286	0					
ANR	3421378	Identifier	rewind		3421286	1					
ANR	3421379	ArgumentList			3421286	1					
ANR	3421380	WhileStatement	while ( ( hostmatch = hostmatches . next ( ) ) )		3421286	8					
ANR	3421381	Condition	hostmatch = hostmatches . next ( )	992:8:27206:27235	3421286	0	True				
ANR	3421382	AssignmentExpression	hostmatch = hostmatches . next ( )		3421286	0		=			
ANR	3421383	Identifier	hostmatch		3421286	0					
ANR	3421384	CallExpression	hostmatches . next ( )		3421286	1					
ANR	3421385	Callee	hostmatches . next		3421286	0					
ANR	3421386	MemberAccess	hostmatches . next		3421286	0					
ANR	3421387	Identifier	hostmatches		3421286	0					
ANR	3421388	Identifier	next		3421286	1					
ANR	3421389	ArgumentList			3421286	1					
ANR	3421390	CompoundStatement		22:2:446:466	3421286	1					
ANR	3421391	IdentifierDeclStatement	StringList * userlist ;	993:2:27243:27263	3421286	0	True				
ANR	3421392	IdentifierDecl	* userlist		3421286	0					
ANR	3421393	IdentifierDeclType	StringList *		3421286	0					
ANR	3421394	Identifier	userlist		3421286	1					
ANR	3421395	ExpressionStatement	"ASSERT ( users -> lookup ( hostmatch , userlist ) != - 1 )"	994:2:27267:27316	3421286	1	True				
ANR	3421396	CallExpression	"ASSERT ( users -> lookup ( hostmatch , userlist ) != - 1 )"		3421286	0					
ANR	3421397	Callee	ASSERT		3421286	0					
ANR	3421398	Identifier	ASSERT		3421286	0					
ANR	3421399	ArgumentList	"users -> lookup ( hostmatch , userlist ) != - 1"		3421286	1					
ANR	3421400	Argument	"users -> lookup ( hostmatch , userlist ) != - 1"		3421286	0					
ANR	3421401	EqualityExpression	"users -> lookup ( hostmatch , userlist ) != - 1"		3421286	0		!=			
ANR	3421402	CallExpression	"users -> lookup ( hostmatch , userlist )"		3421286	0					
ANR	3421403	Callee	users -> lookup		3421286	0					
ANR	3421404	PtrMemberAccess	users -> lookup		3421286	0					
ANR	3421405	Identifier	users		3421286	0					
ANR	3421406	Identifier	lookup		3421286	1					
ANR	3421407	ArgumentList	hostmatch		3421286	1					
ANR	3421408	Argument	hostmatch		3421286	0					
ANR	3421409	Identifier	hostmatch		3421286	0					
ANR	3421410	Argument	userlist		3421286	1					
ANR	3421411	Identifier	userlist		3421286	0					
ANR	3421412	UnaryOperationExpression	- 1		3421286	1					
ANR	3421413	UnaryOperator	-		3421286	0					
ANR	3421414	PrimaryExpression	1		3421286	1					
ANR	3421415	IfStatement	if ( userlist -> contains_anycase_withwildcard ( user ) )		3421286	2					
ANR	3421416	Condition	userlist -> contains_anycase_withwildcard ( user )	996:6:27325:27369	3421286	0	True				
ANR	3421417	CallExpression	userlist -> contains_anycase_withwildcard ( user )		3421286	0					
ANR	3421418	Callee	userlist -> contains_anycase_withwildcard		3421286	0					
ANR	3421419	PtrMemberAccess	userlist -> contains_anycase_withwildcard		3421286	0					
ANR	3421420	Identifier	userlist		3421286	0					
ANR	3421421	Identifier	contains_anycase_withwildcard		3421286	1					
ANR	3421422	ArgumentList	user		3421286	1					
ANR	3421423	Argument	user		3421286	0					
ANR	3421424	Identifier	user		3421286	0					
ANR	3421425	CompoundStatement		25:53:575:575	3421286	1					
ANR	3421426	ExpressionStatement	"dprintf ( D_SECURITY , ""IPVERIFY: matched user %s from %s to %s list\\n"" , user , hostmatch , is_allow_list ? ""allow"" : ""deny"" )"	997:3:27377:27507	3421286	0	True				
ANR	3421427	CallExpression	"dprintf ( D_SECURITY , ""IPVERIFY: matched user %s from %s to %s list\\n"" , user , hostmatch , is_allow_list ? ""allow"" : ""deny"" )"		3421286	0					
ANR	3421428	Callee	dprintf		3421286	0					
ANR	3421429	Identifier	dprintf		3421286	0					
ANR	3421430	ArgumentList	D_SECURITY		3421286	1					
ANR	3421431	Argument	D_SECURITY		3421286	0					
ANR	3421432	Identifier	D_SECURITY		3421286	0					
ANR	3421433	Argument	"""IPVERIFY: matched user %s from %s to %s list\\n"""		3421286	1					
ANR	3421434	PrimaryExpression	"""IPVERIFY: matched user %s from %s to %s list\\n"""		3421286	0					
ANR	3421435	Argument	user		3421286	2					
ANR	3421436	Identifier	user		3421286	0					
ANR	3421437	Argument	hostmatch		3421286	3					
ANR	3421438	Identifier	hostmatch		3421286	0					
ANR	3421439	Argument	"is_allow_list ? ""allow"" : ""deny"""		3421286	4					
ANR	3421440	ConditionalExpression	"is_allow_list ? ""allow"" : ""deny"""		3421286	0					
ANR	3421441	Condition	is_allow_list		3421286	0					
ANR	3421442	Identifier	is_allow_list		3421286	0					
ANR	3421443	PrimaryExpression	"""allow"""		3421286	1					
ANR	3421444	PrimaryExpression	"""deny"""		3421286	2					
ANR	3421445	ReturnStatement	return true ;	999:3:27512:27523	3421286	1	True				
ANR	3421446	Identifier	true		3421286	0					
ANR	3421447	ReturnStatement	return false ;	1003:1:27534:27546	3421286	9	True				
ANR	3421448	Identifier	false		3421286	0					
ANR	3421449	ReturnType	bool		3421286	1					
ANR	3421450	Identifier	IpVerify :: lookup_user		3421286	2					
ANR	3421451	ParameterList	"NetStringList * hosts , UserHash_t * users , char const * user , char const * ip , char const * hostname , bool is_allow_list"		3421286	3					
ANR	3421452	Parameter	NetStringList * hosts	971:22:26679:26698	3421286	0	True				
ANR	3421453	ParameterType	NetStringList *		3421286	0					
ANR	3421454	Identifier	hosts		3421286	1					
ANR	3421455	Parameter	UserHash_t * users	971:44:26701:26717	3421286	1	True				
ANR	3421456	ParameterType	UserHash_t *		3421286	0					
ANR	3421457	Identifier	users		3421286	1					
ANR	3421458	Parameter	char const * user	971:63:26720:26735	3421286	2	True				
ANR	3421459	ParameterType	char const *		3421286	0					
ANR	3421460	Identifier	user		3421286	1					
ANR	3421461	Parameter	char const * ip	971:81:26738:26751	3421286	3	True				
ANR	3421462	ParameterType	char const *		3421286	0					
ANR	3421463	Identifier	ip		3421286	1					
ANR	3421464	Parameter	char const * hostname	971:97:26754:26773	3421286	4	True				
ANR	3421465	ParameterType	char const *		3421286	0					
ANR	3421466	Identifier	hostname		3421286	1					
ANR	3421467	Parameter	bool is_allow_list	971:119:26776:26793	3421286	5	True				
ANR	3421468	ParameterType	bool		3421286	0					
ANR	3421469	Identifier	is_allow_list		3421286	1					
ANR	3421470	CFGEntryNode	ENTRY		3421286		True				
ANR	3421471	CFGExitNode	EXIT		3421286		True				
ANR	3421472	Symbol	hostmatch		3421286						
ANR	3421473	Symbol	userlist		3421286						
ANR	3421474	Symbol	D_SECURITY		3421286						
ANR	3421475	Symbol	is_allow_list		3421286						
ANR	3421476	Symbol	users -> lookup		3421286						
ANR	3421477	Symbol	hosts		3421286						
ANR	3421478	Symbol	hostmatches . next		3421286						
ANR	3421479	Symbol	ip		3421286						
ANR	3421480	Symbol	false		3421286						
ANR	3421481	Symbol	users		3421286						
ANR	3421482	Symbol	hostmatches		3421286						
ANR	3421483	Symbol	hostname		3421286						
ANR	3421484	Symbol	* users		3421286						
ANR	3421485	Symbol	userlist -> contains_anycase_withwildcard		3421286						
ANR	3421486	Symbol	true		3421286						
ANR	3421487	Symbol	& hostmatches		3421286						
ANR	3421488	Symbol	* userlist		3421286						
ANR	3421489	Symbol	user		3421286						
ANR	3421490	Function	IpVerify :: PunchHole	1012:0:27847:29032							
ANR	3421491	FunctionDef	"IpVerify :: PunchHole (DCpermission perm , MyString & id)"		3421490	0					
ANR	3421492	CompoundStatement		1014:0:27905:29032	3421490	0					
ANR	3421493	IdentifierDeclStatement	int count = 0 ;	1015:1:27908:27921	3421490	0	True				
ANR	3421494	IdentifierDecl	count = 0		3421490	0					
ANR	3421495	IdentifierDeclType	int		3421490	0					
ANR	3421496	Identifier	count		3421490	1					
ANR	3421497	AssignmentExpression	count = 0		3421490	2		=			
ANR	3421498	Identifier	count		3421490	0					
ANR	3421499	PrimaryExpression	0		3421490	1					
ANR	3421500	IfStatement	if ( PunchedHoleArray [ perm ] == NULL )		3421490	1					
ANR	3421501	Condition	PunchedHoleArray [ perm ] == NULL	1016:5:27928:27957	3421490	0	True				
ANR	3421502	EqualityExpression	PunchedHoleArray [ perm ] == NULL		3421490	0		==			
ANR	3421503	ArrayIndexing	PunchedHoleArray [ perm ]		3421490	0					
ANR	3421504	Identifier	PunchedHoleArray		3421490	0					
ANR	3421505	Identifier	perm		3421490	1					
ANR	3421506	Identifier	NULL		3421490	1					
ANR	3421507	CompoundStatement		3:37:54:54	3421490	1					
ANR	3421508	ExpressionStatement	PunchedHoleArray [ perm ] = new HolePunchTable_t ( compute_host_hash )	1017:2:27964:28031	3421490	0	True				
ANR	3421509	AssignmentExpression	PunchedHoleArray [ perm ] = new HolePunchTable_t ( compute_host_hash )		3421490	0		=			
ANR	3421510	ArrayIndexing	PunchedHoleArray [ perm ]		3421490	0					
ANR	3421511	Identifier	PunchedHoleArray		3421490	0					
ANR	3421512	Identifier	perm		3421490	1					
ANR	3421513	Identifier	compute_host_hash		3421490	1					
ANR	3421514	ExpressionStatement	ASSERT ( PunchedHoleArray [ perm ] != NULL )	1019:2:28035:28073	3421490	1	True				
ANR	3421515	CallExpression	ASSERT ( PunchedHoleArray [ perm ] != NULL )		3421490	0					
ANR	3421516	Callee	ASSERT		3421490	0					
ANR	3421517	Identifier	ASSERT		3421490	0					
ANR	3421518	ArgumentList	PunchedHoleArray [ perm ] != NULL		3421490	1					
ANR	3421519	Argument	PunchedHoleArray [ perm ] != NULL		3421490	0					
ANR	3421520	EqualityExpression	PunchedHoleArray [ perm ] != NULL		3421490	0		!=			
ANR	3421521	ArrayIndexing	PunchedHoleArray [ perm ]		3421490	0					
ANR	3421522	Identifier	PunchedHoleArray		3421490	0					
ANR	3421523	Identifier	perm		3421490	1					
ANR	3421524	Identifier	NULL		3421490	1					
ANR	3421525	ElseStatement	else		3421490	0					
ANR	3421526	CompoundStatement		9:2:182:187	3421490	0					
ANR	3421527	IdentifierDeclStatement	int c ;	1022:2:28088:28093	3421490	0	True				
ANR	3421528	IdentifierDecl	c		3421490	0					
ANR	3421529	IdentifierDeclType	int		3421490	0					
ANR	3421530	Identifier	c		3421490	1					
ANR	3421531	IfStatement	"if ( PunchedHoleArray [ perm ] -> lookup ( id , c ) != - 1 )"		3421490	1					
ANR	3421532	Condition	"PunchedHoleArray [ perm ] -> lookup ( id , c ) != - 1"	1023:6:28101:28143	3421490	0	True				
ANR	3421533	EqualityExpression	"PunchedHoleArray [ perm ] -> lookup ( id , c ) != - 1"		3421490	0		!=			
ANR	3421534	CallExpression	"PunchedHoleArray [ perm ] -> lookup ( id , c )"		3421490	0					
ANR	3421535	Callee	PunchedHoleArray [ perm ] -> lookup		3421490	0					
ANR	3421536	PtrMemberAccess	PunchedHoleArray [ perm ] -> lookup		3421490	0					
ANR	3421537	ArrayIndexing	PunchedHoleArray [ perm ]		3421490	0					
ANR	3421538	Identifier	PunchedHoleArray		3421490	0					
ANR	3421539	Identifier	perm		3421490	1					
ANR	3421540	Identifier	lookup		3421490	1					
ANR	3421541	ArgumentList	id		3421490	1					
ANR	3421542	Argument	id		3421490	0					
ANR	3421543	Identifier	id		3421490	0					
ANR	3421544	Argument	c		3421490	1					
ANR	3421545	Identifier	c		3421490	0					
ANR	3421546	UnaryOperationExpression	- 1		3421490	1					
ANR	3421547	UnaryOperator	-		3421490	0					
ANR	3421548	PrimaryExpression	1		3421490	1					
ANR	3421549	CompoundStatement		10:51:240:240	3421490	1					
ANR	3421550	ExpressionStatement	count = c	1024:3:28151:28160	3421490	0	True				
ANR	3421551	AssignmentExpression	count = c		3421490	0		=			
ANR	3421552	Identifier	count		3421490	0					
ANR	3421553	Identifier	c		3421490	1					
ANR	3421554	IfStatement	if ( PunchedHoleArray [ perm ] -> remove ( id ) == - 1 )		3421490	1					
ANR	3421555	Condition	PunchedHoleArray [ perm ] -> remove ( id ) == - 1	1025:7:28169:28208	3421490	0	True				
ANR	3421556	EqualityExpression	PunchedHoleArray [ perm ] -> remove ( id ) == - 1		3421490	0		==			
ANR	3421557	CallExpression	PunchedHoleArray [ perm ] -> remove ( id )		3421490	0					
ANR	3421558	Callee	PunchedHoleArray [ perm ] -> remove		3421490	0					
ANR	3421559	PtrMemberAccess	PunchedHoleArray [ perm ] -> remove		3421490	0					
ANR	3421560	ArrayIndexing	PunchedHoleArray [ perm ]		3421490	0					
ANR	3421561	Identifier	PunchedHoleArray		3421490	0					
ANR	3421562	Identifier	perm		3421490	1					
ANR	3421563	Identifier	remove		3421490	1					
ANR	3421564	ArgumentList	id		3421490	1					
ANR	3421565	Argument	id		3421490	0					
ANR	3421566	Identifier	id		3421490	0					
ANR	3421567	UnaryOperationExpression	- 1		3421490	1					
ANR	3421568	UnaryOperator	-		3421490	0					
ANR	3421569	PrimaryExpression	1		3421490	1					
ANR	3421570	CompoundStatement		12:49:305:305	3421490	1					
ANR	3421571	Statement	EXCEPT	1026:4:28217:28222	3421490	0	True				
ANR	3421572	Statement	(	1026:10:28223:28223	3421490	1	True				
ANR	3421573	Statement	"""IpVerify::PunchHole: """	1026:11:28224:28246	3421490	2	True				
ANR	3421574	Statement	"""table entry removal error"""	1027:15:28263:28289	3421490	3	True				
ANR	3421575	Statement	)	1027:42:28290:28290	3421490	4	True				
ANR	3421576	ExpressionStatement		1027:43:28291:28291	3421490	5	True				
ANR	3421577	ExpressionStatement	count ++	1032:1:28307:28314	3421490	2	True				
ANR	3421578	PostIncDecOperationExpression	count ++		3421490	0					
ANR	3421579	Identifier	count		3421490	0					
ANR	3421580	IncDec	++		3421490	1					
ANR	3421581	IfStatement	"if ( PunchedHoleArray [ perm ] -> insert ( id , count ) == - 1 )"		3421490	3					
ANR	3421582	Condition	"PunchedHoleArray [ perm ] -> insert ( id , count ) == - 1"	1033:5:28321:28367	3421490	0	True				
ANR	3421583	EqualityExpression	"PunchedHoleArray [ perm ] -> insert ( id , count ) == - 1"		3421490	0		==			
ANR	3421584	CallExpression	"PunchedHoleArray [ perm ] -> insert ( id , count )"		3421490	0					
ANR	3421585	Callee	PunchedHoleArray [ perm ] -> insert		3421490	0					
ANR	3421586	PtrMemberAccess	PunchedHoleArray [ perm ] -> insert		3421490	0					
ANR	3421587	ArrayIndexing	PunchedHoleArray [ perm ]		3421490	0					
ANR	3421588	Identifier	PunchedHoleArray		3421490	0					
ANR	3421589	Identifier	perm		3421490	1					
ANR	3421590	Identifier	insert		3421490	1					
ANR	3421591	ArgumentList	id		3421490	1					
ANR	3421592	Argument	id		3421490	0					
ANR	3421593	Identifier	id		3421490	0					
ANR	3421594	Argument	count		3421490	1					
ANR	3421595	Identifier	count		3421490	0					
ANR	3421596	UnaryOperationExpression	- 1		3421490	1					
ANR	3421597	UnaryOperator	-		3421490	0					
ANR	3421598	PrimaryExpression	1		3421490	1					
ANR	3421599	CompoundStatement		20:54:464:464	3421490	1					
ANR	3421600	ExpressionStatement	"EXCEPT ( ""IpVerify::PunchHole: table entry insertion error"" )"	1034:2:28374:28432	3421490	0	True				
ANR	3421601	CallExpression	"EXCEPT ( ""IpVerify::PunchHole: table entry insertion error"" )"		3421490	0					
ANR	3421602	Callee	EXCEPT		3421490	0					
ANR	3421603	Identifier	EXCEPT		3421490	0					
ANR	3421604	ArgumentList	"""IpVerify::PunchHole: table entry insertion error"""		3421490	1					
ANR	3421605	Argument	"""IpVerify::PunchHole: table entry insertion error"""		3421490	0					
ANR	3421606	PrimaryExpression	"""IpVerify::PunchHole: table entry insertion error"""		3421490	0					
ANR	3421607	IfStatement	if ( count == 1 )		3421490	4					
ANR	3421608	Condition	count == 1	1037:5:28443:28452	3421490	0	True				
ANR	3421609	EqualityExpression	count == 1		3421490	0		==			
ANR	3421610	Identifier	count		3421490	0					
ANR	3421611	PrimaryExpression	1		3421490	1					
ANR	3421612	CompoundStatement		24:17:549:549	3421490	1					
ANR	3421613	ExpressionStatement	"dprintf ( D_SECURITY , ""IpVerify::PunchHole: opened %s level to %s\\n"" , PermString ( perm ) , id . Value ( ) )"	1038:2:28459:28586	3421490	0	True				
ANR	3421614	CallExpression	"dprintf ( D_SECURITY , ""IpVerify::PunchHole: opened %s level to %s\\n"" , PermString ( perm ) , id . Value ( ) )"		3421490	0					
ANR	3421615	Callee	dprintf		3421490	0					
ANR	3421616	Identifier	dprintf		3421490	0					
ANR	3421617	ArgumentList	D_SECURITY		3421490	1					
ANR	3421618	Argument	D_SECURITY		3421490	0					
ANR	3421619	Identifier	D_SECURITY		3421490	0					
ANR	3421620	Argument	"""IpVerify::PunchHole: opened %s level to %s\\n"""		3421490	1					
ANR	3421621	PrimaryExpression	"""IpVerify::PunchHole: opened %s level to %s\\n"""		3421490	0					
ANR	3421622	Argument	PermString ( perm )		3421490	2					
ANR	3421623	CallExpression	PermString ( perm )		3421490	0					
ANR	3421624	Callee	PermString		3421490	0					
ANR	3421625	Identifier	PermString		3421490	0					
ANR	3421626	ArgumentList	perm		3421490	1					
ANR	3421627	Argument	perm		3421490	0					
ANR	3421628	Identifier	perm		3421490	0					
ANR	3421629	Argument	id . Value ( )		3421490	3					
ANR	3421630	CallExpression	id . Value ( )		3421490	0					
ANR	3421631	Callee	id . Value		3421490	0					
ANR	3421632	MemberAccess	id . Value		3421490	0					
ANR	3421633	Identifier	id		3421490	0					
ANR	3421634	Identifier	Value		3421490	1					
ANR	3421635	ArgumentList			3421490	1					
ANR	3421636	ElseStatement	else		3421490	0					
ANR	3421637	CompoundStatement		30:6:691:691	3421490	0					
ANR	3421638	Statement	dprintf	1044:2:28601:28607	3421490	0	True				
ANR	3421639	Statement	(	1044:9:28608:28608	3421490	1	True				
ANR	3421640	Statement	D_SECURITY	1044:10:28609:28618	3421490	2	True				
ANR	3421641	Statement	","	1044:20:28619:28619	3421490	3	True				
ANR	3421642	Statement	"""IpVerify::PunchHole: """	1045:10:28631:28653	3421490	4	True				
ANR	3421643	Statement	"""open count at level %s for %s now %d\\n"""	1046:7:28662:28701	3421490	5	True				
ANR	3421644	Statement	","	1046:47:28702:28702	3421490	6	True				
ANR	3421645	Statement	PermString	1047:10:28714:28723	3421490	7	True				
ANR	3421646	Statement	(	1047:20:28724:28724	3421490	8	True				
ANR	3421647	Statement	perm	1047:21:28725:28728	3421490	9	True				
ANR	3421648	Statement	)	1047:25:28729:28729	3421490	10	True				
ANR	3421649	Statement	","	1047:26:28730:28730	3421490	11	True				
ANR	3421650	Statement	id	1048:10:28742:28743	3421490	12	True				
ANR	3421651	Statement	.	1048:12:28744:28744	3421490	13	True				
ANR	3421652	Statement	Value	1048:13:28745:28749	3421490	14	True				
ANR	3421653	Statement	(	1048:18:28750:28750	3421490	15	True				
ANR	3421654	Statement	)	1048:19:28751:28751	3421490	16	True				
ANR	3421655	Statement	","	1048:20:28752:28752	3421490	17	True				
ANR	3421656	Statement	count	1049:10:28764:28768	3421490	18	True				
ANR	3421657	Statement	)	1049:15:28769:28769	3421490	19	True				
ANR	3421658	ExpressionStatement		1049:16:28770:28770	3421490	20	True				
ANR	3421659	IdentifierDeclStatement	DCpermissionHierarchy hierarchy ( perm ) ;	1052:1:28777:28816	3421490	5	True				
ANR	3421660	IdentifierDecl	hierarchy ( perm )		3421490	0					
ANR	3421661	IdentifierDeclType	DCpermissionHierarchy		3421490	0					
ANR	3421662	Identifier	hierarchy		3421490	1					
ANR	3421663	Identifier	perm		3421490	2					
ANR	3421664	IdentifierDeclStatement	DCpermission const * implied_perms = hierarchy . getImpliedPerms ( ) ;	1053:1:28819:28880	3421490	6	True				
ANR	3421665	IdentifierDecl	* implied_perms = hierarchy . getImpliedPerms ( )		3421490	0					
ANR	3421666	IdentifierDeclType	DCpermission const *		3421490	0					
ANR	3421667	Identifier	implied_perms		3421490	1					
ANR	3421668	AssignmentExpression	* implied_perms = hierarchy . getImpliedPerms ( )		3421490	2		=			
ANR	3421669	Identifier	implied_perms		3421490	0					
ANR	3421670	CallExpression	hierarchy . getImpliedPerms ( )		3421490	1					
ANR	3421671	Callee	hierarchy . getImpliedPerms		3421490	0					
ANR	3421672	MemberAccess	hierarchy . getImpliedPerms		3421490	0					
ANR	3421673	Identifier	hierarchy		3421490	0					
ANR	3421674	Identifier	getImpliedPerms		3421490	1					
ANR	3421675	ArgumentList			3421490	1					
ANR	3421676	ForStatement	for ( ; implied_perms [ 0 ] != LAST_PERM ; implied_perms ++ )		3421490	7					
ANR	3421677	Condition	implied_perms [ 0 ] != LAST_PERM	1054:7:28889:28917	3421490	0	True				
ANR	3421678	EqualityExpression	implied_perms [ 0 ] != LAST_PERM		3421490	0		!=			
ANR	3421679	ArrayIndexing	implied_perms [ 0 ]		3421490	0					
ANR	3421680	Identifier	implied_perms		3421490	0					
ANR	3421681	PrimaryExpression	0		3421490	1					
ANR	3421682	Identifier	LAST_PERM		3421490	1					
ANR	3421683	PostIncDecOperationExpression	implied_perms ++	1054:38:28920:28934	3421490	1	True				
ANR	3421684	Identifier	implied_perms		3421490	0					
ANR	3421685	IncDec	++		3421490	1					
ANR	3421686	CompoundStatement		41:56:1032:1032	3421490	2					
ANR	3421687	IfStatement	if ( perm != implied_perms [ 0 ] )		3421490	0					
ANR	3421688	Condition	perm != implied_perms [ 0 ]	1055:6:28946:28969	3421490	0	True				
ANR	3421689	EqualityExpression	perm != implied_perms [ 0 ]		3421490	0		!=			
ANR	3421690	Identifier	perm		3421490	0					
ANR	3421691	ArrayIndexing	implied_perms [ 0 ]		3421490	1					
ANR	3421692	Identifier	implied_perms		3421490	0					
ANR	3421693	PrimaryExpression	0		3421490	1					
ANR	3421694	CompoundStatement		42:33:1067:1067	3421490	1					
ANR	3421695	ExpressionStatement	"PunchHole ( implied_perms [ 0 ] , id )"	1056:3:28978:29008	3421490	0	True				
ANR	3421696	CallExpression	"PunchHole ( implied_perms [ 0 ] , id )"		3421490	0					
ANR	3421697	Callee	PunchHole		3421490	0					
ANR	3421698	Identifier	PunchHole		3421490	0					
ANR	3421699	ArgumentList	implied_perms [ 0 ]		3421490	1					
ANR	3421700	Argument	implied_perms [ 0 ]		3421490	0					
ANR	3421701	ArrayIndexing	implied_perms [ 0 ]		3421490	0					
ANR	3421702	Identifier	implied_perms		3421490	0					
ANR	3421703	PrimaryExpression	0		3421490	1					
ANR	3421704	Argument	id		3421490	1					
ANR	3421705	Identifier	id		3421490	0					
ANR	3421706	ReturnStatement	return true ;	1060:1:29019:29030	3421490	8	True				
ANR	3421707	Identifier	true		3421490	0					
ANR	3421708	ReturnType	bool		3421490	1					
ANR	3421709	Identifier	IpVerify :: PunchHole		3421490	2					
ANR	3421710	ParameterList	"DCpermission perm , MyString & id"		3421490	3					
ANR	3421711	Parameter	DCpermission perm	1013:20:27872:27888	3421490	0	True				
ANR	3421712	ParameterType	DCpermission		3421490	0					
ANR	3421713	Identifier	perm		3421490	1					
ANR	3421714	Parameter	MyString & id	1013:39:27891:27902	3421490	1	True				
ANR	3421715	ParameterType	MyString &		3421490	0					
ANR	3421716	Identifier	id		3421490	1					
ANR	3421717	CFGEntryNode	ENTRY		3421490		True				
ANR	3421718	CFGExitNode	EXIT		3421490		True				
ANR	3421719	Symbol	PunchedHoleArray [ perm ] -> remove		3421490						
ANR	3421720	Symbol	LAST_PERM		3421490						
ANR	3421721	Symbol	NULL		3421490						
ANR	3421722	Symbol	c		3421490						
ANR	3421723	Symbol	perm		3421490						
ANR	3421724	Symbol	* perm		3421490						
ANR	3421725	Symbol	D_SECURITY		3421490						
ANR	3421726	Symbol	PunchedHoleArray [ perm ] -> lookup		3421490						
ANR	3421727	Symbol	hierarchy . getImpliedPerms		3421490						
ANR	3421728	Symbol	compute_host_hash		3421490						
ANR	3421729	Symbol	* * perm		3421490						
ANR	3421730	Symbol	hierarchy		3421490						
ANR	3421731	Symbol	* implied_perms		3421490						
ANR	3421732	Symbol	count		3421490						
ANR	3421733	Symbol	* * PunchedHoleArray		3421490						
ANR	3421734	Symbol	PunchedHoleArray [ perm ] -> insert		3421490						
ANR	3421735	Symbol	implied_perms		3421490						
ANR	3421736	Symbol	true		3421490						
ANR	3421737	Symbol	* PunchedHoleArray		3421490						
ANR	3421738	Symbol	id . Value		3421490						
ANR	3421739	Symbol	id		3421490						
ANR	3421740	Symbol	PermString		3421490						
ANR	3421741	Symbol	PunchedHoleArray		3421490						
ANR	3421742	Function	IpVerify :: FillHole	1065:0:29101:30200							
ANR	3421743	FunctionDef	"IpVerify :: FillHole (DCpermission perm , MyString & id)"		3421742	0					
ANR	3421744	CompoundStatement		1067:0:29158:30200	3421742	0					
ANR	3421745	IdentifierDeclStatement	HolePunchTable_t * table = PunchedHoleArray [ perm ] ;	1068:1:29161:29209	3421742	0	True				
ANR	3421746	IdentifierDecl	* table = PunchedHoleArray [ perm ]		3421742	0					
ANR	3421747	IdentifierDeclType	HolePunchTable_t *		3421742	0					
ANR	3421748	Identifier	table		3421742	1					
ANR	3421749	AssignmentExpression	* table = PunchedHoleArray [ perm ]		3421742	2		=			
ANR	3421750	Identifier	table		3421742	0					
ANR	3421751	ArrayIndexing	PunchedHoleArray [ perm ]		3421742	1					
ANR	3421752	Identifier	PunchedHoleArray		3421742	0					
ANR	3421753	Identifier	perm		3421742	1					
ANR	3421754	IfStatement	if ( table == NULL )		3421742	1					
ANR	3421755	Condition	table == NULL	1069:5:29216:29228	3421742	0	True				
ANR	3421756	EqualityExpression	table == NULL		3421742	0		==			
ANR	3421757	Identifier	table		3421742	0					
ANR	3421758	Identifier	NULL		3421742	1					
ANR	3421759	CompoundStatement		3:20:72:72	3421742	1					
ANR	3421760	ReturnStatement	return false ;	1070:2:29235:29247	3421742	0	True				
ANR	3421761	Identifier	false		3421742	0					
ANR	3421762	IdentifierDeclStatement	int count ;	1073:1:29254:29263	3421742	2	True				
ANR	3421763	IdentifierDecl	count		3421742	0					
ANR	3421764	IdentifierDeclType	int		3421742	0					
ANR	3421765	Identifier	count		3421742	1					
ANR	3421766	IfStatement	"if ( table -> lookup ( id , count ) == - 1 )"		3421742	3					
ANR	3421767	Condition	"table -> lookup ( id , count ) == - 1"	1074:5:29270:29299	3421742	0	True				
ANR	3421768	EqualityExpression	"table -> lookup ( id , count ) == - 1"		3421742	0		==			
ANR	3421769	CallExpression	"table -> lookup ( id , count )"		3421742	0					
ANR	3421770	Callee	table -> lookup		3421742	0					
ANR	3421771	PtrMemberAccess	table -> lookup		3421742	0					
ANR	3421772	Identifier	table		3421742	0					
ANR	3421773	Identifier	lookup		3421742	1					
ANR	3421774	ArgumentList	id		3421742	1					
ANR	3421775	Argument	id		3421742	0					
ANR	3421776	Identifier	id		3421742	0					
ANR	3421777	Argument	count		3421742	1					
ANR	3421778	Identifier	count		3421742	0					
ANR	3421779	UnaryOperationExpression	- 1		3421742	1					
ANR	3421780	UnaryOperator	-		3421742	0					
ANR	3421781	PrimaryExpression	1		3421742	1					
ANR	3421782	CompoundStatement		8:37:143:143	3421742	1					
ANR	3421783	ReturnStatement	return false ;	1075:2:29306:29318	3421742	0	True				
ANR	3421784	Identifier	false		3421742	0					
ANR	3421785	IfStatement	if ( table -> remove ( id ) == - 1 )		3421742	4					
ANR	3421786	Condition	table -> remove ( id ) == - 1	1077:5:29328:29350	3421742	0	True				
ANR	3421787	EqualityExpression	table -> remove ( id ) == - 1		3421742	0		==			
ANR	3421788	CallExpression	table -> remove ( id )		3421742	0					
ANR	3421789	Callee	table -> remove		3421742	0					
ANR	3421790	PtrMemberAccess	table -> remove		3421742	0					
ANR	3421791	Identifier	table		3421742	0					
ANR	3421792	Identifier	remove		3421742	1					
ANR	3421793	ArgumentList	id		3421742	1					
ANR	3421794	Argument	id		3421742	0					
ANR	3421795	Identifier	id		3421742	0					
ANR	3421796	UnaryOperationExpression	- 1		3421742	1					
ANR	3421797	UnaryOperator	-		3421742	0					
ANR	3421798	PrimaryExpression	1		3421742	1					
ANR	3421799	CompoundStatement		11:30:194:194	3421742	1					
ANR	3421800	ExpressionStatement	"EXCEPT ( ""IpVerify::FillHole: table entry removal error"" )"	1078:2:29357:29412	3421742	0	True				
ANR	3421801	CallExpression	"EXCEPT ( ""IpVerify::FillHole: table entry removal error"" )"		3421742	0					
ANR	3421802	Callee	EXCEPT		3421742	0					
ANR	3421803	Identifier	EXCEPT		3421742	0					
ANR	3421804	ArgumentList	"""IpVerify::FillHole: table entry removal error"""		3421742	1					
ANR	3421805	Argument	"""IpVerify::FillHole: table entry removal error"""		3421742	0					
ANR	3421806	PrimaryExpression	"""IpVerify::FillHole: table entry removal error"""		3421742	0					
ANR	3421807	ExpressionStatement	count --	1081:1:29419:29426	3421742	5	True				
ANR	3421808	PostIncDecOperationExpression	count --		3421742	0					
ANR	3421809	Identifier	count		3421742	0					
ANR	3421810	IncDec	--		3421742	1					
ANR	3421811	IfStatement	if ( count != 0 )		3421742	6					
ANR	3421812	Condition	count != 0	1083:5:29434:29443	3421742	0	True				
ANR	3421813	EqualityExpression	count != 0		3421742	0		!=			
ANR	3421814	Identifier	count		3421742	0					
ANR	3421815	PrimaryExpression	0		3421742	1					
ANR	3421816	CompoundStatement		17:17:287:287	3421742	1					
ANR	3421817	IfStatement	"if ( table -> insert ( id , count ) == - 1 )"		3421742	0					
ANR	3421818	Condition	"table -> insert ( id , count ) == - 1"	1084:6:29454:29483	3421742	0	True				
ANR	3421819	EqualityExpression	"table -> insert ( id , count ) == - 1"		3421742	0		==			
ANR	3421820	CallExpression	"table -> insert ( id , count )"		3421742	0					
ANR	3421821	Callee	table -> insert		3421742	0					
ANR	3421822	PtrMemberAccess	table -> insert		3421742	0					
ANR	3421823	Identifier	table		3421742	0					
ANR	3421824	Identifier	insert		3421742	1					
ANR	3421825	ArgumentList	id		3421742	1					
ANR	3421826	Argument	id		3421742	0					
ANR	3421827	Identifier	id		3421742	0					
ANR	3421828	Argument	count		3421742	1					
ANR	3421829	Identifier	count		3421742	0					
ANR	3421830	UnaryOperationExpression	- 1		3421742	1					
ANR	3421831	UnaryOperator	-		3421742	0					
ANR	3421832	PrimaryExpression	1		3421742	1					
ANR	3421833	CompoundStatement		18:38:327:327	3421742	1					
ANR	3421834	Statement	EXCEPT	1085:3:29491:29496	3421742	0	True				
ANR	3421835	Statement	(	1085:9:29497:29497	3421742	1	True				
ANR	3421836	Statement	"""IpVerify::FillHole: """	1085:10:29498:29519	3421742	2	True				
ANR	3421837	Statement	"""table entry insertion error"""	1086:14:29535:29563	3421742	3	True				
ANR	3421838	Statement	)	1086:43:29564:29564	3421742	4	True				
ANR	3421839	ExpressionStatement		1086:44:29565:29565	3421742	5	True				
ANR	3421840	IfStatement	if ( count == 0 )		3421742	7					
ANR	3421841	Condition	count == 0	1090:5:29580:29589	3421742	0	True				
ANR	3421842	EqualityExpression	count == 0		3421742	0		==			
ANR	3421843	Identifier	count		3421742	0					
ANR	3421844	PrimaryExpression	0		3421742	1					
ANR	3421845	CompoundStatement		24:17:433:433	3421742	1					
ANR	3421846	Statement	dprintf	1091:2:29596:29602	3421742	0	True				
ANR	3421847	Statement	(	1091:9:29603:29603	3421742	1	True				
ANR	3421848	Statement	D_SECURITY	1091:10:29604:29613	3421742	2	True				
ANR	3421849	Statement	","	1091:20:29614:29614	3421742	3	True				
ANR	3421850	Statement	"""IpVerify::FillHole: """	1092:10:29626:29647	3421742	4	True				
ANR	3421851	Statement	"""removed %s-level opening for %s\\n"""	1093:14:29663:29697	3421742	5	True				
ANR	3421852	Statement	","	1093:49:29698:29698	3421742	6	True				
ANR	3421853	Statement	PermString	1094:10:29710:29719	3421742	7	True				
ANR	3421854	Statement	(	1094:20:29720:29720	3421742	8	True				
ANR	3421855	Statement	perm	1094:21:29721:29724	3421742	9	True				
ANR	3421856	Statement	)	1094:25:29725:29725	3421742	10	True				
ANR	3421857	Statement	","	1094:26:29726:29726	3421742	11	True				
ANR	3421858	Statement	id	1095:10:29738:29739	3421742	12	True				
ANR	3421859	Statement	.	1095:12:29740:29740	3421742	13	True				
ANR	3421860	Statement	Value	1095:13:29741:29745	3421742	14	True				
ANR	3421861	Statement	(	1095:18:29746:29746	3421742	15	True				
ANR	3421862	Statement	)	1095:19:29747:29747	3421742	16	True				
ANR	3421863	Statement	)	1095:20:29748:29748	3421742	17	True				
ANR	3421864	ExpressionStatement		1095:21:29749:29749	3421742	18	True				
ANR	3421865	ElseStatement	else		3421742	0					
ANR	3421866	CompoundStatement		31:6:601:601	3421742	0					
ANR	3421867	Statement	dprintf	1098:2:29764:29770	3421742	0	True				
ANR	3421868	Statement	(	1098:9:29771:29771	3421742	1	True				
ANR	3421869	Statement	D_SECURITY	1098:10:29772:29781	3421742	2	True				
ANR	3421870	Statement	","	1098:20:29782:29782	3421742	3	True				
ANR	3421871	Statement	"""IpVerify::FillHole: """	1099:10:29794:29815	3421742	4	True				
ANR	3421872	Statement	"""open count at level %s for %s now %d\\n"""	1100:14:29831:29870	3421742	5	True				
ANR	3421873	Statement	","	1100:54:29871:29871	3421742	6	True				
ANR	3421874	Statement	PermString	1101:10:29883:29892	3421742	7	True				
ANR	3421875	Statement	(	1101:20:29893:29893	3421742	8	True				
ANR	3421876	Statement	perm	1101:21:29894:29897	3421742	9	True				
ANR	3421877	Statement	)	1101:25:29898:29898	3421742	10	True				
ANR	3421878	Statement	","	1101:26:29899:29899	3421742	11	True				
ANR	3421879	Statement	id	1102:10:29911:29912	3421742	12	True				
ANR	3421880	Statement	.	1102:12:29913:29913	3421742	13	True				
ANR	3421881	Statement	Value	1102:13:29914:29918	3421742	14	True				
ANR	3421882	Statement	(	1102:18:29919:29919	3421742	15	True				
ANR	3421883	Statement	)	1102:19:29920:29920	3421742	16	True				
ANR	3421884	Statement	","	1102:20:29921:29921	3421742	17	True				
ANR	3421885	Statement	count	1103:10:29933:29937	3421742	18	True				
ANR	3421886	Statement	)	1103:15:29938:29938	3421742	19	True				
ANR	3421887	ExpressionStatement		1103:16:29939:29939	3421742	20	True				
ANR	3421888	IdentifierDeclStatement	DCpermissionHierarchy hierarchy ( perm ) ;	1106:1:29946:29985	3421742	8	True				
ANR	3421889	IdentifierDecl	hierarchy ( perm )		3421742	0					
ANR	3421890	IdentifierDeclType	DCpermissionHierarchy		3421742	0					
ANR	3421891	Identifier	hierarchy		3421742	1					
ANR	3421892	Identifier	perm		3421742	2					
ANR	3421893	IdentifierDeclStatement	DCpermission const * implied_perms = hierarchy . getImpliedPerms ( ) ;	1107:1:29988:30049	3421742	9	True				
ANR	3421894	IdentifierDecl	* implied_perms = hierarchy . getImpliedPerms ( )		3421742	0					
ANR	3421895	IdentifierDeclType	DCpermission const *		3421742	0					
ANR	3421896	Identifier	implied_perms		3421742	1					
ANR	3421897	AssignmentExpression	* implied_perms = hierarchy . getImpliedPerms ( )		3421742	2		=			
ANR	3421898	Identifier	implied_perms		3421742	0					
ANR	3421899	CallExpression	hierarchy . getImpliedPerms ( )		3421742	1					
ANR	3421900	Callee	hierarchy . getImpliedPerms		3421742	0					
ANR	3421901	MemberAccess	hierarchy . getImpliedPerms		3421742	0					
ANR	3421902	Identifier	hierarchy		3421742	0					
ANR	3421903	Identifier	getImpliedPerms		3421742	1					
ANR	3421904	ArgumentList			3421742	1					
ANR	3421905	ForStatement	for ( ; implied_perms [ 0 ] != LAST_PERM ; implied_perms ++ )		3421742	10					
ANR	3421906	Condition	implied_perms [ 0 ] != LAST_PERM	1108:7:30058:30086	3421742	0	True				
ANR	3421907	EqualityExpression	implied_perms [ 0 ] != LAST_PERM		3421742	0		!=			
ANR	3421908	ArrayIndexing	implied_perms [ 0 ]		3421742	0					
ANR	3421909	Identifier	implied_perms		3421742	0					
ANR	3421910	PrimaryExpression	0		3421742	1					
ANR	3421911	Identifier	LAST_PERM		3421742	1					
ANR	3421912	PostIncDecOperationExpression	implied_perms ++	1108:38:30089:30103	3421742	1	True				
ANR	3421913	Identifier	implied_perms		3421742	0					
ANR	3421914	IncDec	++		3421742	1					
ANR	3421915	CompoundStatement		42:56:948:948	3421742	2					
ANR	3421916	IfStatement	if ( perm != implied_perms [ 0 ] )		3421742	0					
ANR	3421917	Condition	perm != implied_perms [ 0 ]	1109:6:30115:30138	3421742	0	True				
ANR	3421918	EqualityExpression	perm != implied_perms [ 0 ]		3421742	0		!=			
ANR	3421919	Identifier	perm		3421742	0					
ANR	3421920	ArrayIndexing	implied_perms [ 0 ]		3421742	1					
ANR	3421921	Identifier	implied_perms		3421742	0					
ANR	3421922	PrimaryExpression	0		3421742	1					
ANR	3421923	CompoundStatement		43:33:983:983	3421742	1					
ANR	3421924	ExpressionStatement	"FillHole ( implied_perms [ 0 ] , id )"	1110:3:30147:30176	3421742	0	True				
ANR	3421925	CallExpression	"FillHole ( implied_perms [ 0 ] , id )"		3421742	0					
ANR	3421926	Callee	FillHole		3421742	0					
ANR	3421927	Identifier	FillHole		3421742	0					
ANR	3421928	ArgumentList	implied_perms [ 0 ]		3421742	1					
ANR	3421929	Argument	implied_perms [ 0 ]		3421742	0					
ANR	3421930	ArrayIndexing	implied_perms [ 0 ]		3421742	0					
ANR	3421931	Identifier	implied_perms		3421742	0					
ANR	3421932	PrimaryExpression	0		3421742	1					
ANR	3421933	Argument	id		3421742	1					
ANR	3421934	Identifier	id		3421742	0					
ANR	3421935	ReturnStatement	return true ;	1114:1:30187:30198	3421742	11	True				
ANR	3421936	Identifier	true		3421742	0					
ANR	3421937	ReturnType	bool		3421742	1					
ANR	3421938	Identifier	IpVerify :: FillHole		3421742	2					
ANR	3421939	ParameterList	"DCpermission perm , MyString & id"		3421742	3					
ANR	3421940	Parameter	DCpermission perm	1066:19:29125:29141	3421742	0	True				
ANR	3421941	ParameterType	DCpermission		3421742	0					
ANR	3421942	Identifier	perm		3421742	1					
ANR	3421943	Parameter	MyString & id	1066:38:29144:29155	3421742	1	True				
ANR	3421944	ParameterType	MyString &		3421742	0					
ANR	3421945	Identifier	id		3421742	1					
ANR	3421946	CFGEntryNode	ENTRY		3421742		True				
ANR	3421947	CFGExitNode	EXIT		3421742		True				
ANR	3421948	Symbol	LAST_PERM		3421742						
ANR	3421949	Symbol	NULL		3421742						
ANR	3421950	Symbol	perm		3421742						
ANR	3421951	Symbol	* perm		3421742						
ANR	3421952	Symbol	hierarchy . getImpliedPerms		3421742						
ANR	3421953	Symbol	hierarchy		3421742						
ANR	3421954	Symbol	* implied_perms		3421742						
ANR	3421955	Symbol	false		3421742						
ANR	3421956	Symbol	count		3421742						
ANR	3421957	Symbol	* table		3421742						
ANR	3421958	Symbol	implied_perms		3421742						
ANR	3421959	Symbol	table -> insert		3421742						
ANR	3421960	Symbol	true		3421742						
ANR	3421961	Symbol	* PunchedHoleArray		3421742						
ANR	3421962	Symbol	table -> remove		3421742						
ANR	3421963	Symbol	id		3421742						
ANR	3421964	Symbol	PunchedHoleArray		3421742						
ANR	3421965	Symbol	table -> lookup		3421742						
ANR	3421966	Symbol	table		3421742						
ANR	3421967	Function	IpVerify :: PermTypeEntry :: ~PermTypeEntry	1117:0:30203:30691							
ANR	3421968	FunctionDef	IpVerify :: PermTypeEntry :: ~PermTypeEntry ()		3421967	0					
ANR	3421969	CompoundStatement		1117:42:30245:30691	3421967	0					
ANR	3421970	IfStatement	if ( allow_hosts )		3421967	0					
ANR	3421971	Condition	allow_hosts	1118:5:30252:30262	3421967	0	True				
ANR	3421972	Identifier	allow_hosts		3421967	0					
ANR	3421973	Statement	delete	1119:2:30267:30272	3421967	1	True				
ANR	3421974	ExpressionStatement	allow_hosts	1119:9:30274:30285	3421967	1	True				
ANR	3421975	Identifier	allow_hosts		3421967	0					
ANR	3421976	IfStatement	if ( deny_hosts )		3421967	2					
ANR	3421977	Condition	deny_hosts	1120:5:30292:30301	3421967	0	True				
ANR	3421978	Identifier	deny_hosts		3421967	0					
ANR	3421979	Statement	delete	1121:2:30306:30311	3421967	1	True				
ANR	3421980	ExpressionStatement	deny_hosts	1121:9:30313:30323	3421967	3	True				
ANR	3421981	Identifier	deny_hosts		3421967	0					
ANR	3421982	IfStatement	if ( allow_users )		3421967	4					
ANR	3421983	Condition	allow_users	1122:5:30330:30340	3421967	0	True				
ANR	3421984	Identifier	allow_users		3421967	0					
ANR	3421985	CompoundStatement		8:2:120:137	3421967	1					
ANR	3421986	IdentifierDeclStatement	MyString key ;	1123:2:30347:30362	3421967	0	True				
ANR	3421987	IdentifierDecl	key		3421967	0					
ANR	3421988	IdentifierDeclType	MyString		3421967	0					
ANR	3421989	Identifier	key		3421967	1					
ANR	3421990	IdentifierDeclStatement	StringList * value ;	1124:2:30366:30383	3421967	1	True				
ANR	3421991	IdentifierDecl	* value		3421967	0					
ANR	3421992	IdentifierDeclType	StringList *		3421967	0					
ANR	3421993	Identifier	value		3421967	1					
ANR	3421994	ExpressionStatement	allow_users -> startIterations ( )	1125:2:30387:30417	3421967	2	True				
ANR	3421995	CallExpression	allow_users -> startIterations ( )		3421967	0					
ANR	3421996	Callee	allow_users -> startIterations		3421967	0					
ANR	3421997	PtrMemberAccess	allow_users -> startIterations		3421967	0					
ANR	3421998	Identifier	allow_users		3421967	0					
ANR	3421999	Identifier	startIterations		3421967	1					
ANR	3422000	ArgumentList			3421967	1					
ANR	3422001	WhileStatement	"while ( allow_users -> iterate ( key , value ) )"		3421967	3					
ANR	3422002	Condition	"allow_users -> iterate ( key , value )"	1126:9:30428:30459	3421967	0	True				
ANR	3422003	CallExpression	"allow_users -> iterate ( key , value )"		3421967	0					
ANR	3422004	Callee	allow_users -> iterate		3421967	0					
ANR	3422005	PtrMemberAccess	allow_users -> iterate		3421967	0					
ANR	3422006	Identifier	allow_users		3421967	0					
ANR	3422007	Identifier	iterate		3421967	1					
ANR	3422008	ArgumentList	key		3421967	1					
ANR	3422009	Argument	key		3421967	0					
ANR	3422010	Identifier	key		3421967	0					
ANR	3422011	Argument	value		3421967	1					
ANR	3422012	Identifier	value		3421967	0					
ANR	3422013	CompoundStatement		10:43:216:216	3421967	1					
ANR	3422014	Statement	delete	1127:3:30467:30472	3421967	0	True				
ANR	3422015	ExpressionStatement	value	1127:10:30474:30479	3421967	1	True				
ANR	3422016	Identifier	value		3421967	0					
ANR	3422017	Statement	delete	1129:2:30487:30492	3421967	4	True				
ANR	3422018	ExpressionStatement	allow_users	1129:9:30494:30505	3421967	5	True				
ANR	3422019	Identifier	allow_users		3421967	0					
ANR	3422020	IfStatement	if ( deny_users )		3421967	5					
ANR	3422021	Condition	deny_users	1131:5:30515:30524	3421967	0	True				
ANR	3422022	Identifier	deny_users		3421967	0					
ANR	3422023	CompoundStatement		17:2:304:321	3421967	1					
ANR	3422024	IdentifierDeclStatement	MyString key ;	1132:2:30531:30546	3421967	0	True				
ANR	3422025	IdentifierDecl	key		3421967	0					
ANR	3422026	IdentifierDeclType	MyString		3421967	0					
ANR	3422027	Identifier	key		3421967	1					
ANR	3422028	IdentifierDeclStatement	StringList * value ;	1133:2:30550:30567	3421967	1	True				
ANR	3422029	IdentifierDecl	* value		3421967	0					
ANR	3422030	IdentifierDeclType	StringList *		3421967	0					
ANR	3422031	Identifier	value		3421967	1					
ANR	3422032	ExpressionStatement	deny_users -> startIterations ( )	1134:2:30571:30600	3421967	2	True				
ANR	3422033	CallExpression	deny_users -> startIterations ( )		3421967	0					
ANR	3422034	Callee	deny_users -> startIterations		3421967	0					
ANR	3422035	PtrMemberAccess	deny_users -> startIterations		3421967	0					
ANR	3422036	Identifier	deny_users		3421967	0					
ANR	3422037	Identifier	startIterations		3421967	1					
ANR	3422038	ArgumentList			3421967	1					
ANR	3422039	WhileStatement	"while ( deny_users -> iterate ( key , value ) )"		3421967	3					
ANR	3422040	Condition	"deny_users -> iterate ( key , value )"	1135:9:30611:30641	3421967	0	True				
ANR	3422041	CallExpression	"deny_users -> iterate ( key , value )"		3421967	0					
ANR	3422042	Callee	deny_users -> iterate		3421967	0					
ANR	3422043	PtrMemberAccess	deny_users -> iterate		3421967	0					
ANR	3422044	Identifier	deny_users		3421967	0					
ANR	3422045	Identifier	iterate		3421967	1					
ANR	3422046	ArgumentList	key		3421967	1					
ANR	3422047	Argument	key		3421967	0					
ANR	3422048	Identifier	key		3421967	0					
ANR	3422049	Argument	value		3421967	1					
ANR	3422050	Identifier	value		3421967	0					
ANR	3422051	CompoundStatement		19:42:398:398	3421967	1					
ANR	3422052	Statement	delete	1136:3:30649:30654	3421967	0	True				
ANR	3422053	ExpressionStatement	value	1136:10:30656:30661	3421967	1	True				
ANR	3422054	Identifier	value		3421967	0					
ANR	3422055	Statement	delete	1138:2:30669:30674	3421967	4	True				
ANR	3422056	ExpressionStatement	deny_users	1138:9:30676:30686	3421967	5	True				
ANR	3422057	Identifier	deny_users		3421967	0					
ANR	3422058	Identifier	IpVerify :: PermTypeEntry :: ~PermTypeEntry		3421967	1					
ANR	3422059	ParameterList			3421967	2					
ANR	3422060	CFGEntryNode	ENTRY		3421967		True				
ANR	3422061	CFGExitNode	EXIT		3421967		True				
ANR	3422062	Symbol	allow_hosts		3421967						
ANR	3422063	Symbol	deny_users		3421967						
ANR	3422064	Symbol	deny_hosts		3421967						
ANR	3422065	Symbol	* deny_users		3421967						
ANR	3422066	Symbol	allow_users -> iterate		3421967						
ANR	3422067	Symbol	* allow_users		3421967						
ANR	3422068	Symbol	value		3421967						
ANR	3422069	Symbol	deny_users -> iterate		3421967						
ANR	3422070	Symbol	key		3421967						
ANR	3422071	Symbol	allow_users		3421967						
ANR	3422072	DeclStmt									
ANR	3422073	Decl							_CrtMemState	_CrtMemState	s1
ANR	3422074	Decl							_CrtMemState	_CrtMemState	s2
ANR	3422075	Decl							_CrtMemState	_CrtMemState	s3
ANR	3422076	Function	main	1149:0:30818:32110							
ANR	3422077	FunctionDef	main ()		3422076	0					
ANR	3422078	CompoundStatement		1151:0:30829:32110	3422076	0					
ANR	3422079	IdentifierDeclStatement	char buf [ 50 ] ;	1152:1:30832:30844	3422076	0	True				
ANR	3422080	IdentifierDecl	buf [ 50 ]		3422076	0					
ANR	3422081	IdentifierDeclType	char [ 50 ]		3422076	0					
ANR	3422082	Identifier	buf		3422076	1					
ANR	3422083	PrimaryExpression	50		3422076	2					
ANR	3422084	IdentifierDeclStatement	char buf1 [ 50 ] ;	1153:1:30847:30860	3422076	1	True				
ANR	3422085	IdentifierDecl	buf1 [ 50 ]		3422076	0					
ANR	3422086	IdentifierDeclType	char [ 50 ]		3422076	0					
ANR	3422087	Identifier	buf1		3422076	1					
ANR	3422088	PrimaryExpression	50		3422076	2					
ANR	3422089	IdentifierDeclStatement	struct sockaddr_in sin ;	1154:1:30863:30885	3422076	2	True				
ANR	3422090	IdentifierDecl	sin		3422076	0					
ANR	3422091	IdentifierDeclType	struct sockaddr_in		3422076	0					
ANR	3422092	Identifier	sin		3422076	1					
ANR	3422093	IdentifierDeclStatement	SafeSock ssock ;	1155:1:30888:30902	3422076	3	True				
ANR	3422094	IdentifierDecl	ssock		3422076	0					
ANR	3422095	IdentifierDeclType	SafeSock		3422076	0					
ANR	3422096	Identifier	ssock		3422076	1					
ANR	3422097	IdentifierDeclStatement	IpVerify * userverify ;	1156:1:30905:30925	3422076	4	True				
ANR	3422098	IdentifierDecl	* userverify		3422076	0					
ANR	3422099	IdentifierDeclType	IpVerify *		3422076	0					
ANR	3422100	Identifier	userverify		3422076	1					
ANR	3422101	ExpressionStatement	"set_mySubSystem ( ""COLLECTOR"" , SUBSYSTEM_TYPE_COLLECTOR )"	1158:1:30929:30985	3422076	5	True				
ANR	3422102	CallExpression	"set_mySubSystem ( ""COLLECTOR"" , SUBSYSTEM_TYPE_COLLECTOR )"		3422076	0					
ANR	3422103	Callee	set_mySubSystem		3422076	0					
ANR	3422104	Identifier	set_mySubSystem		3422076	0					
ANR	3422105	ArgumentList	"""COLLECTOR"""		3422076	1					
ANR	3422106	Argument	"""COLLECTOR"""		3422076	0					
ANR	3422107	PrimaryExpression	"""COLLECTOR"""		3422076	0					
ANR	3422108	Argument	SUBSYSTEM_TYPE_COLLECTOR		3422076	1					
ANR	3422109	Identifier	SUBSYSTEM_TYPE_COLLECTOR		3422076	0					
ANR	3422110	ExpressionStatement	config ( )	1160:1:30989:30997	3422076	6	True				
ANR	3422111	CallExpression	config ( )		3422076	0					
ANR	3422112	Callee	config		3422076	0					
ANR	3422113	Identifier	config		3422076	0					
ANR	3422114	ArgumentList			3422076	1					
ANR	3422115	ExpressionStatement	_CrtMemCheckpoint ( & s1 )	1163:1:31014:31038	3422076	7	True				
ANR	3422116	CallExpression	_CrtMemCheckpoint ( & s1 )		3422076	0					
ANR	3422117	Callee	_CrtMemCheckpoint		3422076	0					
ANR	3422118	Identifier	_CrtMemCheckpoint		3422076	0					
ANR	3422119	ArgumentList	& s1		3422076	1					
ANR	3422120	Argument	& s1		3422076	0					
ANR	3422121	UnaryOperationExpression	& s1		3422076	0					
ANR	3422122	UnaryOperator	&		3422076	0					
ANR	3422123	Identifier	s1		3422076	1					
ANR	3422124	ExpressionStatement	userverify = new IpVerify ( )	1166:1:31049:31076	3422076	8	True				
ANR	3422125	AssignmentExpression	userverify = new IpVerify ( )		3422076	0		=			
ANR	3422126	Identifier	userverify		3422076	0					
ANR	3422127	UnaryExpression	new IpVerify ( )		3422076	1					
ANR	3422128	ExpressionStatement	userverify -> Init ( )	1168:1:31080:31098	3422076	9	True				
ANR	3422129	CallExpression	userverify -> Init ( )		3422076	0					
ANR	3422130	Callee	userverify -> Init		3422076	0					
ANR	3422131	PtrMemberAccess	userverify -> Init		3422076	0					
ANR	3422132	Identifier	userverify		3422076	0					
ANR	3422133	Identifier	Init		3422076	1					
ANR	3422134	ArgumentList			3422076	1					
ANR	3422135	ExpressionStatement	buf [ 0 ] = '\\0'	1170:1:31102:31115	3422076	10	True				
ANR	3422136	AssignmentExpression	buf [ 0 ] = '\\0'		3422076	0		=			
ANR	3422137	ArrayIndexing	buf [ 0 ]		3422076	0					
ANR	3422138	Identifier	buf		3422076	0					
ANR	3422139	PrimaryExpression	0		3422076	1					
ANR	3422140	PrimaryExpression	'\\0'		3422076	1					
ANR	3422141	WhileStatement	while ( 1 )		3422076	11					
ANR	3422142	Condition	1	1172:8:31126:31126	3422076	0	True				
ANR	3422143	PrimaryExpression	1		3422076	0					
ANR	3422144	CompoundStatement		22:12:300:300	3422076	1					
ANR	3422145	ExpressionStatement	"printf ( ""Enter test:\\n"" )"	1173:2:31134:31157	3422076	0	True				
ANR	3422146	CallExpression	"printf ( ""Enter test:\\n"" )"		3422076	0					
ANR	3422147	Callee	printf		3422076	0					
ANR	3422148	Identifier	printf		3422076	0					
ANR	3422149	ArgumentList	"""Enter test:\\n"""		3422076	1					
ANR	3422150	Argument	"""Enter test:\\n"""		3422076	0					
ANR	3422151	PrimaryExpression	"""Enter test:\\n"""		3422076	0					
ANR	3422152	ExpressionStatement	"scanf ( ""%s"" , buf )"	1174:2:31161:31176	3422076	1	True				
ANR	3422153	CallExpression	"scanf ( ""%s"" , buf )"		3422076	0					
ANR	3422154	Callee	scanf		3422076	0					
ANR	3422155	Identifier	scanf		3422076	0					
ANR	3422156	ArgumentList	"""%s"""		3422076	1					
ANR	3422157	Argument	"""%s"""		3422076	0					
ANR	3422158	PrimaryExpression	"""%s"""		3422076	0					
ANR	3422159	Argument	buf		3422076	1					
ANR	3422160	Identifier	buf		3422076	0					
ANR	3422161	IfStatement	"if ( strncmp ( buf , ""exit"" , 4 ) == 0 )"		3422076	2					
ANR	3422162	Condition	"strncmp ( buf , ""exit"" , 4 ) == 0"	1175:7:31185:31210	3422076	0	True				
ANR	3422163	EqualityExpression	"strncmp ( buf , ""exit"" , 4 ) == 0"		3422076	0		==			
ANR	3422164	CallExpression	"strncmp ( buf , ""exit"" , 4 )"		3422076	0					
ANR	3422165	Callee	strncmp		3422076	0					
ANR	3422166	Identifier	strncmp		3422076	0					
ANR	3422167	ArgumentList	buf		3422076	1					
ANR	3422168	Argument	buf		3422076	0					
ANR	3422169	Identifier	buf		3422076	0					
ANR	3422170	Argument	"""exit"""		3422076	1					
ANR	3422171	PrimaryExpression	"""exit"""		3422076	0					
ANR	3422172	Argument	4		3422076	2					
ANR	3422173	PrimaryExpression	4		3422076	0					
ANR	3422174	PrimaryExpression	0		3422076	1					
ANR	3422175	BreakStatement	break ;	1176:3:31217:31222	3422076	1	True				
ANR	3422176	IfStatement	"if ( strncmp ( buf , ""reinit"" , 6 ) == 0 )"		3422076	3					
ANR	3422177	Condition	"strncmp ( buf , ""reinit"" , 6 ) == 0"	1177:7:31231:31258	3422076	0	True				
ANR	3422178	EqualityExpression	"strncmp ( buf , ""reinit"" , 6 ) == 0"		3422076	0		==			
ANR	3422179	CallExpression	"strncmp ( buf , ""reinit"" , 6 )"		3422076	0					
ANR	3422180	Callee	strncmp		3422076	0					
ANR	3422181	Identifier	strncmp		3422076	0					
ANR	3422182	ArgumentList	buf		3422076	1					
ANR	3422183	Argument	buf		3422076	0					
ANR	3422184	Identifier	buf		3422076	0					
ANR	3422185	Argument	"""reinit"""		3422076	1					
ANR	3422186	PrimaryExpression	"""reinit"""		3422076	0					
ANR	3422187	Argument	6		3422076	2					
ANR	3422188	PrimaryExpression	6		3422076	0					
ANR	3422189	PrimaryExpression	0		3422076	1					
ANR	3422190	CompoundStatement		27:38:432:432	3422076	1					
ANR	3422191	ExpressionStatement	config ( )	1178:3:31267:31275	3422076	0	True				
ANR	3422192	CallExpression	config ( )		3422076	0					
ANR	3422193	Callee	config		3422076	0					
ANR	3422194	Identifier	config		3422076	0					
ANR	3422195	ArgumentList			3422076	1					
ANR	3422196	ExpressionStatement	userverify -> Init ( )	1179:3:31280:31298	3422076	1	True				
ANR	3422197	CallExpression	userverify -> Init ( )		3422076	0					
ANR	3422198	Callee	userverify -> Init		3422076	0					
ANR	3422199	PtrMemberAccess	userverify -> Init		3422076	0					
ANR	3422200	Identifier	userverify		3422076	0					
ANR	3422201	Identifier	Init		3422076	1					
ANR	3422202	ArgumentList			3422076	1					
ANR	3422203	ContinueStatement	continue ;	1180:3:31303:31311	3422076	2	True				
ANR	3422204	ExpressionStatement	"printf ( ""Verifying %s ... "" , buf )"	1182:2:31319:31350	3422076	4	True				
ANR	3422205	CallExpression	"printf ( ""Verifying %s ... "" , buf )"		3422076	0					
ANR	3422206	Callee	printf		3422076	0					
ANR	3422207	Identifier	printf		3422076	0					
ANR	3422208	ArgumentList	"""Verifying %s ... """		3422076	1					
ANR	3422209	Argument	"""Verifying %s ... """		3422076	0					
ANR	3422210	PrimaryExpression	"""Verifying %s ... """		3422076	0					
ANR	3422211	Argument	buf		3422076	1					
ANR	3422212	Identifier	buf		3422076	0					
ANR	3422213	ExpressionStatement	"sprintf ( buf1 , ""<%s:1970>"" , buf )"	1183:2:31354:31383	3422076	5	True				
ANR	3422214	CallExpression	"sprintf ( buf1 , ""<%s:1970>"" , buf )"		3422076	0					
ANR	3422215	Callee	sprintf		3422076	0					
ANR	3422216	Identifier	sprintf		3422076	0					
ANR	3422217	ArgumentList	buf1		3422076	1					
ANR	3422218	Argument	buf1		3422076	0					
ANR	3422219	Identifier	buf1		3422076	0					
ANR	3422220	Argument	"""<%s:1970>"""		3422076	1					
ANR	3422221	PrimaryExpression	"""<%s:1970>"""		3422076	0					
ANR	3422222	Argument	buf		3422076	2					
ANR	3422223	Identifier	buf		3422076	0					
ANR	3422224	ExpressionStatement	"string_to_sin ( buf1 , & sin )"	1184:2:31387:31411	3422076	6	True				
ANR	3422225	CallExpression	"string_to_sin ( buf1 , & sin )"		3422076	0					
ANR	3422226	Callee	string_to_sin		3422076	0					
ANR	3422227	Identifier	string_to_sin		3422076	0					
ANR	3422228	ArgumentList	buf1		3422076	1					
ANR	3422229	Argument	buf1		3422076	0					
ANR	3422230	Identifier	buf1		3422076	0					
ANR	3422231	Argument	& sin		3422076	1					
ANR	3422232	UnaryOperationExpression	& sin		3422076	0					
ANR	3422233	UnaryOperator	&		3422076	0					
ANR	3422234	Identifier	sin		3422076	1					
ANR	3422235	IfStatement	"if ( userverify -> Verify ( WRITE , & sin ) == TRUE )"		3422076	7					
ANR	3422236	Condition	"userverify -> Verify ( WRITE , & sin ) == TRUE"	1185:7:31420:31457	3422076	0	True				
ANR	3422237	EqualityExpression	"userverify -> Verify ( WRITE , & sin ) == TRUE"		3422076	0		==			
ANR	3422238	CallExpression	"userverify -> Verify ( WRITE , & sin )"		3422076	0					
ANR	3422239	Callee	userverify -> Verify		3422076	0					
ANR	3422240	PtrMemberAccess	userverify -> Verify		3422076	0					
ANR	3422241	Identifier	userverify		3422076	0					
ANR	3422242	Identifier	Verify		3422076	1					
ANR	3422243	ArgumentList	WRITE		3422076	1					
ANR	3422244	Argument	WRITE		3422076	0					
ANR	3422245	Identifier	WRITE		3422076	0					
ANR	3422246	Argument	& sin		3422076	1					
ANR	3422247	UnaryOperationExpression	& sin		3422076	0					
ANR	3422248	UnaryOperator	&		3422076	0					
ANR	3422249	Identifier	sin		3422076	1					
ANR	3422250	Identifier	TRUE		3422076	1					
ANR	3422251	ExpressionStatement	"printf ( ""ALLOW\\n"" )"	1186:3:31464:31481	3422076	1	True				
ANR	3422252	CallExpression	"printf ( ""ALLOW\\n"" )"		3422076	0					
ANR	3422253	Callee	printf		3422076	0					
ANR	3422254	Identifier	printf		3422076	0					
ANR	3422255	ArgumentList	"""ALLOW\\n"""		3422076	1					
ANR	3422256	Argument	"""ALLOW\\n"""		3422076	0					
ANR	3422257	PrimaryExpression	"""ALLOW\\n"""		3422076	0					
ANR	3422258	ElseStatement	else		3422076	0					
ANR	3422259	ExpressionStatement	"printf ( ""DENY\\n"" )"	1188:3:31493:31509	3422076	0	True				
ANR	3422260	CallExpression	"printf ( ""DENY\\n"" )"		3422076	0					
ANR	3422261	Callee	printf		3422076	0					
ANR	3422262	Identifier	printf		3422076	0					
ANR	3422263	ArgumentList	"""DENY\\n"""		3422076	1					
ANR	3422264	Argument	"""DENY\\n"""		3422076	0					
ANR	3422265	PrimaryExpression	"""DENY\\n"""		3422076	0					
ANR	3422266	Statement	delete	1191:1:31517:31522	3422076	12	True				
ANR	3422267	ExpressionStatement	userverify	1191:8:31524:31534	3422076	13	True				
ANR	3422268	Identifier	userverify		3422076	0					
ANR	3422269	ExpressionStatement	_CrtMemCheckpoint ( & s2 )	1194:1:31551:31575	3422076	14	True				
ANR	3422270	CallExpression	_CrtMemCheckpoint ( & s2 )		3422076	0					
ANR	3422271	Callee	_CrtMemCheckpoint		3422076	0					
ANR	3422272	Identifier	_CrtMemCheckpoint		3422076	0					
ANR	3422273	ArgumentList	& s2		3422076	1					
ANR	3422274	Argument	& s2		3422076	0					
ANR	3422275	UnaryOperationExpression	& s2		3422076	0					
ANR	3422276	UnaryOperator	&		3422076	0					
ANR	3422277	Identifier	s2		3422076	1					
ANR	3422278	ExpressionStatement	"_CrtSetReportMode ( _CRT_WARN , _CRTDBG_MODE_FILE )"	1196:4:31620:31667	3422076	15	True				
ANR	3422279	CallExpression	"_CrtSetReportMode ( _CRT_WARN , _CRTDBG_MODE_FILE )"		3422076	0					
ANR	3422280	Callee	_CrtSetReportMode		3422076	0					
ANR	3422281	Identifier	_CrtSetReportMode		3422076	0					
ANR	3422282	ArgumentList	_CRT_WARN		3422076	1					
ANR	3422283	Argument	_CRT_WARN		3422076	0					
ANR	3422284	Identifier	_CRT_WARN		3422076	0					
ANR	3422285	Argument	_CRTDBG_MODE_FILE		3422076	1					
ANR	3422286	Identifier	_CRTDBG_MODE_FILE		3422076	0					
ANR	3422287	ExpressionStatement	"_CrtSetReportFile ( _CRT_WARN , _CRTDBG_FILE_STDOUT )"	1197:4:31673:31722	3422076	16	True				
ANR	3422288	CallExpression	"_CrtSetReportFile ( _CRT_WARN , _CRTDBG_FILE_STDOUT )"		3422076	0					
ANR	3422289	Callee	_CrtSetReportFile		3422076	0					
ANR	3422290	Identifier	_CrtSetReportFile		3422076	0					
ANR	3422291	ArgumentList	_CRT_WARN		3422076	1					
ANR	3422292	Argument	_CRT_WARN		3422076	0					
ANR	3422293	Identifier	_CRT_WARN		3422076	0					
ANR	3422294	Argument	_CRTDBG_FILE_STDOUT		3422076	1					
ANR	3422295	Identifier	_CRTDBG_FILE_STDOUT		3422076	0					
ANR	3422296	ExpressionStatement	"_CrtSetReportMode ( _CRT_ERROR , _CRTDBG_MODE_FILE )"	1198:4:31728:31776	3422076	17	True				
ANR	3422297	CallExpression	"_CrtSetReportMode ( _CRT_ERROR , _CRTDBG_MODE_FILE )"		3422076	0					
ANR	3422298	Callee	_CrtSetReportMode		3422076	0					
ANR	3422299	Identifier	_CrtSetReportMode		3422076	0					
ANR	3422300	ArgumentList	_CRT_ERROR		3422076	1					
ANR	3422301	Argument	_CRT_ERROR		3422076	0					
ANR	3422302	Identifier	_CRT_ERROR		3422076	0					
ANR	3422303	Argument	_CRTDBG_MODE_FILE		3422076	1					
ANR	3422304	Identifier	_CRTDBG_MODE_FILE		3422076	0					
ANR	3422305	ExpressionStatement	"_CrtSetReportFile ( _CRT_ERROR , _CRTDBG_FILE_STDOUT )"	1199:4:31782:31832	3422076	18	True				
ANR	3422306	CallExpression	"_CrtSetReportFile ( _CRT_ERROR , _CRTDBG_FILE_STDOUT )"		3422076	0					
ANR	3422307	Callee	_CrtSetReportFile		3422076	0					
ANR	3422308	Identifier	_CrtSetReportFile		3422076	0					
ANR	3422309	ArgumentList	_CRT_ERROR		3422076	1					
ANR	3422310	Argument	_CRT_ERROR		3422076	0					
ANR	3422311	Identifier	_CRT_ERROR		3422076	0					
ANR	3422312	Argument	_CRTDBG_FILE_STDOUT		3422076	1					
ANR	3422313	Identifier	_CRTDBG_FILE_STDOUT		3422076	0					
ANR	3422314	ExpressionStatement	"_CrtSetReportMode ( _CRT_ASSERT , _CRTDBG_MODE_FILE )"	1200:4:31838:31887	3422076	19	True				
ANR	3422315	CallExpression	"_CrtSetReportMode ( _CRT_ASSERT , _CRTDBG_MODE_FILE )"		3422076	0					
ANR	3422316	Callee	_CrtSetReportMode		3422076	0					
ANR	3422317	Identifier	_CrtSetReportMode		3422076	0					
ANR	3422318	ArgumentList	_CRT_ASSERT		3422076	1					
ANR	3422319	Argument	_CRT_ASSERT		3422076	0					
ANR	3422320	Identifier	_CRT_ASSERT		3422076	0					
ANR	3422321	Argument	_CRTDBG_MODE_FILE		3422076	1					
ANR	3422322	Identifier	_CRTDBG_MODE_FILE		3422076	0					
ANR	3422323	ExpressionStatement	"_CrtSetReportFile ( _CRT_ASSERT , _CRTDBG_FILE_STDOUT )"	1201:4:31893:31944	3422076	20	True				
ANR	3422324	CallExpression	"_CrtSetReportFile ( _CRT_ASSERT , _CRTDBG_FILE_STDOUT )"		3422076	0					
ANR	3422325	Callee	_CrtSetReportFile		3422076	0					
ANR	3422326	Identifier	_CrtSetReportFile		3422076	0					
ANR	3422327	ArgumentList	_CRT_ASSERT		3422076	1					
ANR	3422328	Argument	_CRT_ASSERT		3422076	0					
ANR	3422329	Identifier	_CRT_ASSERT		3422076	0					
ANR	3422330	Argument	_CRTDBG_FILE_STDOUT		3422076	1					
ANR	3422331	Identifier	_CRTDBG_FILE_STDOUT		3422076	0					
ANR	3422332	IfStatement	"if ( _CrtMemDifference ( & s3 , & s1 , & s2 ) )"		3422076	21					
ANR	3422333	Condition	"_CrtMemDifference ( & s3 , & s1 , & s2 )"	1202:6:31952:31985	3422076	0	True				
ANR	3422334	CallExpression	"_CrtMemDifference ( & s3 , & s1 , & s2 )"		3422076	0					
ANR	3422335	Callee	_CrtMemDifference		3422076	0					
ANR	3422336	Identifier	_CrtMemDifference		3422076	0					
ANR	3422337	ArgumentList	& s3		3422076	1					
ANR	3422338	Argument	& s3		3422076	0					
ANR	3422339	UnaryOperationExpression	& s3		3422076	0					
ANR	3422340	UnaryOperator	&		3422076	0					
ANR	3422341	Identifier	s3		3422076	1					
ANR	3422342	Argument	& s1		3422076	1					
ANR	3422343	UnaryOperationExpression	& s1		3422076	0					
ANR	3422344	UnaryOperator	&		3422076	0					
ANR	3422345	Identifier	s1		3422076	1					
ANR	3422346	Argument	& s2		3422076	2					
ANR	3422347	UnaryOperationExpression	& s2		3422076	0					
ANR	3422348	UnaryOperator	&		3422076	0					
ANR	3422349	Identifier	s2		3422076	1					
ANR	3422350	ExpressionStatement	_CrtMemDumpStatistics ( & s3 )	1203:6:31995:32023	3422076	1	True				
ANR	3422351	CallExpression	_CrtMemDumpStatistics ( & s3 )		3422076	0					
ANR	3422352	Callee	_CrtMemDumpStatistics		3422076	0					
ANR	3422353	Identifier	_CrtMemDumpStatistics		3422076	0					
ANR	3422354	ArgumentList	& s3		3422076	1					
ANR	3422355	Argument	& s3		3422076	0					
ANR	3422356	UnaryOperationExpression	& s3		3422076	0					
ANR	3422357	UnaryOperator	&		3422076	0					
ANR	3422358	Identifier	s3		3422076	1					
ANR	3422359	ReturnStatement	return TRUE ;	1207:1:32097:32108	3422076	22	True				
ANR	3422360	Identifier	TRUE		3422076	0					
ANR	3422361	ReturnType	int		3422076	1					
ANR	3422362	Identifier	main		3422076	2					
ANR	3422363	ParameterList			3422076	3					
ANR	3422364	CFGEntryNode	ENTRY		3422076		True				
ANR	3422365	CFGExitNode	EXIT		3422076		True				
ANR	3422366	Symbol	* buf		3422076						
ANR	3422367	Symbol	userverify -> Verify		3422076						
ANR	3422368	Symbol	_CRTDBG_FILE_STDOUT		3422076						
ANR	3422369	Symbol	_CRT_ASSERT		3422076						
ANR	3422370	Symbol	userverify		3422076						
ANR	3422371	Symbol	& s2		3422076						
ANR	3422372	Symbol	& s1		3422076						
ANR	3422373	Symbol	TRUE		3422076						
ANR	3422374	Symbol	_CRT_ERROR		3422076						
ANR	3422375	Symbol	& s3		3422076						
ANR	3422376	Symbol	_CrtMemDifference		3422076						
ANR	3422377	Symbol	SUBSYSTEM_TYPE_COLLECTOR		3422076						
ANR	3422378	Symbol	WRITE		3422076						
ANR	3422379	Symbol	buf1		3422076						
ANR	3422380	Symbol	strncmp		3422076						
ANR	3422381	Symbol	buf		3422076						
ANR	3422382	Symbol	_CRT_WARN		3422076						
ANR	3422383	Symbol	sin		3422076						
ANR	3422384	Symbol	& sin		3422076						
ANR	3422385	Symbol	ssock		3422076						
ANR	3422386	Symbol	* userverify		3422076						
ANR	3422387	Symbol	_CRTDBG_MODE_FILE		3422076						
