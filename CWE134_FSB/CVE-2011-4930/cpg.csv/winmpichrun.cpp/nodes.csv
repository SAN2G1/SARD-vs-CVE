command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5589483	File	data/converged/CVE-2011-4930_htcondor/winmpichrun.cpp								
ANR	5589484	Function	main	31:0:1090:2528							
ANR	5589485	FunctionDef	"main (int argc , char * * argv)"		5589484	0					
ANR	5589486	CompoundStatement		32:28:1122:2528	5589484	0					
ANR	5589487	IdentifierDeclStatement	"char * procno_str = getenv ( ""_CONDOR_PROCNO"" ) ;"	34:1:1126:1169	5589484	0	True				
ANR	5589488	IdentifierDecl	"* procno_str = getenv ( ""_CONDOR_PROCNO"" )"		5589484	0					
ANR	5589489	IdentifierDeclType	char *		5589484	0					
ANR	5589490	Identifier	procno_str		5589484	1					
ANR	5589491	AssignmentExpression	"* procno_str = getenv ( ""_CONDOR_PROCNO"" )"		5589484	2		=			
ANR	5589492	Identifier	procno_str		5589484	0					
ANR	5589493	CallExpression	"getenv ( ""_CONDOR_PROCNO"" )"		5589484	1					
ANR	5589494	Callee	getenv		5589484	0					
ANR	5589495	Identifier	getenv		5589484	0					
ANR	5589496	ArgumentList	"""_CONDOR_PROCNO"""		5589484	1					
ANR	5589497	Argument	"""_CONDOR_PROCNO"""		5589484	0					
ANR	5589498	PrimaryExpression	"""_CONDOR_PROCNO"""		5589484	0					
ANR	5589499	IfStatement	if ( procno_str == 0 )		5589484	1					
ANR	5589500	Condition	procno_str == 0	36:5:1177:1191	5589484	0	True				
ANR	5589501	EqualityExpression	procno_str == 0		5589484	0		==			
ANR	5589502	Identifier	procno_str		5589484	0					
ANR	5589503	PrimaryExpression	0		5589484	1					
ANR	5589504	CompoundStatement		5:22:71:71	5589484	1					
ANR	5589505	ExpressionStatement	"printf ( ""Environment variable _CONDOR_PROCNO not set, exitting\\n"" )"	37:2:1198:1263	5589484	0	True				
ANR	5589506	CallExpression	"printf ( ""Environment variable _CONDOR_PROCNO not set, exitting\\n"" )"		5589484	0					
ANR	5589507	Callee	printf		5589484	0					
ANR	5589508	Identifier	printf		5589484	0					
ANR	5589509	ArgumentList	"""Environment variable _CONDOR_PROCNO not set, exitting\\n"""		5589484	1					
ANR	5589510	Argument	"""Environment variable _CONDOR_PROCNO not set, exitting\\n"""		5589484	0					
ANR	5589511	PrimaryExpression	"""Environment variable _CONDOR_PROCNO not set, exitting\\n"""		5589484	0					
ANR	5589512	ExpressionStatement	exit ( 1 )	38:2:1267:1274	5589484	1	True				
ANR	5589513	CallExpression	exit ( 1 )		5589484	0					
ANR	5589514	Callee	exit		5589484	0					
ANR	5589515	Identifier	exit		5589484	0					
ANR	5589516	ArgumentList	1		5589484	1					
ANR	5589517	Argument	1		5589484	0					
ANR	5589518	PrimaryExpression	1		5589484	0					
ANR	5589519	IdentifierDeclStatement	int procno = - 1 ;	41:1:1281:1296	5589484	2	True				
ANR	5589520	IdentifierDecl	procno = - 1		5589484	0					
ANR	5589521	IdentifierDeclType	int		5589484	0					
ANR	5589522	Identifier	procno		5589484	1					
ANR	5589523	AssignmentExpression	procno = - 1		5589484	2		=			
ANR	5589524	Identifier	procno		5589484	0					
ANR	5589525	UnaryOperationExpression	- 1		5589484	1					
ANR	5589526	UnaryOperator	-		5589484	0					
ANR	5589527	PrimaryExpression	1		5589484	1					
ANR	5589528	ExpressionStatement	"sscanf ( procno_str , ""%d"" , & procno )"	42:1:1299:1332	5589484	3	True				
ANR	5589529	CallExpression	"sscanf ( procno_str , ""%d"" , & procno )"		5589484	0					
ANR	5589530	Callee	sscanf		5589484	0					
ANR	5589531	Identifier	sscanf		5589484	0					
ANR	5589532	ArgumentList	procno_str		5589484	1					
ANR	5589533	Argument	procno_str		5589484	0					
ANR	5589534	Identifier	procno_str		5589484	0					
ANR	5589535	Argument	"""%d"""		5589484	1					
ANR	5589536	PrimaryExpression	"""%d"""		5589484	0					
ANR	5589537	Argument	& procno		5589484	2					
ANR	5589538	UnaryOperationExpression	& procno		5589484	0					
ANR	5589539	UnaryOperator	&		5589484	0					
ANR	5589540	Identifier	procno		5589484	1					
ANR	5589541	IfStatement	if ( procno == - 1 )		5589484	4					
ANR	5589542	Condition	procno == - 1	44:5:1340:1351	5589484	0	True				
ANR	5589543	EqualityExpression	procno == - 1		5589484	0		==			
ANR	5589544	Identifier	procno		5589484	0					
ANR	5589545	UnaryOperationExpression	- 1		5589484	1					
ANR	5589546	UnaryOperator	-		5589484	0					
ANR	5589547	PrimaryExpression	1		5589484	1					
ANR	5589548	CompoundStatement		13:19:231:231	5589484	1					
ANR	5589549	ExpressionStatement	"printf ( ""Can't parse_CONDOR_PROCNO as integer\\n"" )"	45:2:1358:1406	5589484	0	True				
ANR	5589550	CallExpression	"printf ( ""Can't parse_CONDOR_PROCNO as integer\\n"" )"		5589484	0					
ANR	5589551	Callee	printf		5589484	0					
ANR	5589552	Identifier	printf		5589484	0					
ANR	5589553	ArgumentList	"""Can't parse_CONDOR_PROCNO as integer\\n"""		5589484	1					
ANR	5589554	Argument	"""Can't parse_CONDOR_PROCNO as integer\\n"""		5589484	0					
ANR	5589555	PrimaryExpression	"""Can't parse_CONDOR_PROCNO as integer\\n"""		5589484	0					
ANR	5589556	ExpressionStatement	exit ( 1 )	46:2:1410:1417	5589484	1	True				
ANR	5589557	CallExpression	exit ( 1 )		5589484	0					
ANR	5589558	Callee	exit		5589484	0					
ANR	5589559	Identifier	exit		5589484	0					
ANR	5589560	ArgumentList	1		5589484	1					
ANR	5589561	Argument	1		5589484	0					
ANR	5589562	PrimaryExpression	1		5589484	0					
ANR	5589563	IfStatement	if ( procno != 0 )		5589484	5					
ANR	5589564	Condition	procno != 0	51:5:1476:1486	5589484	0	True				
ANR	5589565	EqualityExpression	procno != 0		5589484	0		!=			
ANR	5589566	Identifier	procno		5589484	0					
ANR	5589567	PrimaryExpression	0		5589484	1					
ANR	5589568	CompoundStatement		20:18:366:366	5589484	1					
ANR	5589569	WhileStatement	while ( 1 )		5589484	0					
ANR	5589570	Condition	1	52:9:1500:1500	5589484	0	True				
ANR	5589571	PrimaryExpression	1		5589484	0					
ANR	5589572	CompoundStatement		21:12:380:380	5589484	1					
ANR	5589573	ExpressionStatement	_sleep ( 3600 * 100 )	53:3:1508:1526	5589484	0	True				
ANR	5589574	CallExpression	_sleep ( 3600 * 100 )		5589484	0					
ANR	5589575	Callee	_sleep		5589484	0					
ANR	5589576	Identifier	_sleep		5589484	0					
ANR	5589577	ArgumentList	3600 * 100		5589484	1					
ANR	5589578	Argument	3600 * 100		5589484	0					
ANR	5589579	MultiplicativeExpression	3600 * 100		5589484	0		*			
ANR	5589580	PrimaryExpression	3600		5589484	0					
ANR	5589581	PrimaryExpression	100		5589484	1					
ANR	5589582	IdentifierDeclStatement	"int r = system ( ""condor_chirp get_job_attr RemoteHosts > nodes"" ) ;"	58:1:1571:1634	5589484	6	True				
ANR	5589583	IdentifierDecl	"r = system ( ""condor_chirp get_job_attr RemoteHosts > nodes"" )"		5589484	0					
ANR	5589584	IdentifierDeclType	int		5589484	0					
ANR	5589585	Identifier	r		5589484	1					
ANR	5589586	AssignmentExpression	"r = system ( ""condor_chirp get_job_attr RemoteHosts > nodes"" )"		5589484	2		=			
ANR	5589587	Identifier	r		5589484	0					
ANR	5589588	CallExpression	"system ( ""condor_chirp get_job_attr RemoteHosts > nodes"" )"		5589484	1					
ANR	5589589	Callee	system		5589484	0					
ANR	5589590	Identifier	system		5589484	0					
ANR	5589591	ArgumentList	"""condor_chirp get_job_attr RemoteHosts > nodes"""		5589484	1					
ANR	5589592	Argument	"""condor_chirp get_job_attr RemoteHosts > nodes"""		5589484	0					
ANR	5589593	PrimaryExpression	"""condor_chirp get_job_attr RemoteHosts > nodes"""		5589484	0					
ANR	5589594	IfStatement	if ( r != 0 )		5589484	7					
ANR	5589595	Condition	r != 0	60:5:1642:1647	5589484	0	True				
ANR	5589596	EqualityExpression	r != 0		5589484	0		!=			
ANR	5589597	Identifier	r		5589484	0					
ANR	5589598	PrimaryExpression	0		5589484	1					
ANR	5589599	CompoundStatement		29:13:527:527	5589484	1					
ANR	5589600	ExpressionStatement	"printf ( ""Error running condor_chirp, exiting\\n"" )"	61:2:1654:1701	5589484	0	True				
ANR	5589601	CallExpression	"printf ( ""Error running condor_chirp, exiting\\n"" )"		5589484	0					
ANR	5589602	Callee	printf		5589484	0					
ANR	5589603	Identifier	printf		5589484	0					
ANR	5589604	ArgumentList	"""Error running condor_chirp, exiting\\n"""		5589484	1					
ANR	5589605	Argument	"""Error running condor_chirp, exiting\\n"""		5589484	0					
ANR	5589606	PrimaryExpression	"""Error running condor_chirp, exiting\\n"""		5589484	0					
ANR	5589607	IdentifierDeclStatement	"FILE * n = fopen ( ""nodes"" , ""r"" ) ;"	65:1:1770:1799	5589484	8	True				
ANR	5589608	IdentifierDecl	"* n = fopen ( ""nodes"" , ""r"" )"		5589484	0					
ANR	5589609	IdentifierDeclType	FILE *		5589484	0					
ANR	5589610	Identifier	n		5589484	1					
ANR	5589611	AssignmentExpression	"* n = fopen ( ""nodes"" , ""r"" )"		5589484	2		=			
ANR	5589612	Identifier	n		5589484	0					
ANR	5589613	CallExpression	"fopen ( ""nodes"" , ""r"" )"		5589484	1					
ANR	5589614	Callee	fopen		5589484	0					
ANR	5589615	Identifier	fopen		5589484	0					
ANR	5589616	ArgumentList	"""nodes"""		5589484	1					
ANR	5589617	Argument	"""nodes"""		5589484	0					
ANR	5589618	PrimaryExpression	"""nodes"""		5589484	0					
ANR	5589619	Argument	"""r"""		5589484	1					
ANR	5589620	PrimaryExpression	"""r"""		5589484	0					
ANR	5589621	IdentifierDeclStatement	"FILE * m = fopen ( ""machines"" , ""w"" ) ;"	66:1:1802:1834	5589484	9	True				
ANR	5589622	IdentifierDecl	"* m = fopen ( ""machines"" , ""w"" )"		5589484	0					
ANR	5589623	IdentifierDeclType	FILE *		5589484	0					
ANR	5589624	Identifier	m		5589484	1					
ANR	5589625	AssignmentExpression	"* m = fopen ( ""machines"" , ""w"" )"		5589484	2		=			
ANR	5589626	Identifier	m		5589484	0					
ANR	5589627	CallExpression	"fopen ( ""machines"" , ""w"" )"		5589484	1					
ANR	5589628	Callee	fopen		5589484	0					
ANR	5589629	Identifier	fopen		5589484	0					
ANR	5589630	ArgumentList	"""machines"""		5589484	1					
ANR	5589631	Argument	"""machines"""		5589484	0					
ANR	5589632	PrimaryExpression	"""machines"""		5589484	0					
ANR	5589633	Argument	"""w"""		5589484	1					
ANR	5589634	PrimaryExpression	"""w"""		5589484	0					
ANR	5589635	IdentifierDeclStatement	char c ;	68:1:1838:1844	5589484	10	True				
ANR	5589636	IdentifierDecl	c		5589484	0					
ANR	5589637	IdentifierDeclType	char		5589484	0					
ANR	5589638	Identifier	c		5589484	1					
ANR	5589639	IdentifierDeclStatement	int count = 1 ;	69:1:1847:1860	5589484	11	True				
ANR	5589640	IdentifierDecl	count = 1		5589484	0					
ANR	5589641	IdentifierDeclType	int		5589484	0					
ANR	5589642	Identifier	count		5589484	1					
ANR	5589643	AssignmentExpression	count = 1		5589484	2		=			
ANR	5589644	Identifier	count		5589484	0					
ANR	5589645	PrimaryExpression	1		5589484	1					
ANR	5589646	WhileStatement	while ( 1 )		5589484	12					
ANR	5589647	Condition	1	71:8:1871:1871	5589484	0	True				
ANR	5589648	PrimaryExpression	1		5589484	0					
ANR	5589649	CompoundStatement		40:11:751:751	5589484	1					
ANR	5589650	ExpressionStatement	c = fgetc ( n )	72:2:1878:1890	5589484	0	True				
ANR	5589651	AssignmentExpression	c = fgetc ( n )		5589484	0		=			
ANR	5589652	Identifier	c		5589484	0					
ANR	5589653	CallExpression	fgetc ( n )		5589484	1					
ANR	5589654	Callee	fgetc		5589484	0					
ANR	5589655	Identifier	fgetc		5589484	0					
ANR	5589656	ArgumentList	n		5589484	1					
ANR	5589657	Argument	n		5589484	0					
ANR	5589658	Identifier	n		5589484	0					
ANR	5589659	IfStatement	if ( feof ( n ) )		5589484	1					
ANR	5589660	Condition	feof ( n )	73:6:1898:1904	5589484	0	True				
ANR	5589661	CallExpression	feof ( n )		5589484	0					
ANR	5589662	Callee	feof		5589484	0					
ANR	5589663	Identifier	feof		5589484	0					
ANR	5589664	ArgumentList	n		5589484	1					
ANR	5589665	Argument	n		5589484	0					
ANR	5589666	Identifier	n		5589484	0					
ANR	5589667	BreakStatement	break ;	73:15:1907:1912	5589484	1	True				
ANR	5589668	IfStatement	if ( c == ' ' )		5589484	2					
ANR	5589669	Condition	c == ' '	74:6:1920:1927	5589484	0	True				
ANR	5589670	EqualityExpression	c == ' '		5589484	0		==			
ANR	5589671	Identifier	c		5589484	0					
ANR	5589672	PrimaryExpression	' '		5589484	1					
ANR	5589673	ContinueStatement	continue ;	74:16:1930:1938	5589484	1	True				
ANR	5589674	IfStatement	"if ( c == '""' )"		5589484	3					
ANR	5589675	Condition	"c == '""'"	75:6:1946:1953	5589484	0	True				
ANR	5589676	EqualityExpression	"c == '""'"		5589484	0		==			
ANR	5589677	Identifier	c		5589484	0					
ANR	5589678	PrimaryExpression	"'""'"		5589484	1					
ANR	5589679	ContinueStatement	continue ;	75:16:1956:1964	5589484	1	True				
ANR	5589680	IfStatement	"if ( c == ',' )"		5589484	4					
ANR	5589681	Condition	"c == ','"	76:6:1972:1979	5589484	0	True				
ANR	5589682	EqualityExpression	"c == ','"		5589484	0		==			
ANR	5589683	Identifier	c		5589484	0					
ANR	5589684	PrimaryExpression	"','"		5589484	1					
ANR	5589685	CompoundStatement		45:16:859:859	5589484	1					
ANR	5589686	ExpressionStatement	c = '\\n'	77:3:1987:1995	5589484	0	True				
ANR	5589687	AssignmentExpression	c = '\\n'		5589484	0		=			
ANR	5589688	Identifier	c		5589484	0					
ANR	5589689	PrimaryExpression	'\\n'		5589484	1					
ANR	5589690	ExpressionStatement	count ++	78:3:2000:2007	5589484	1	True				
ANR	5589691	PostIncDecOperationExpression	count ++		5589484	0					
ANR	5589692	Identifier	count		5589484	0					
ANR	5589693	IncDec	++		5589484	1					
ANR	5589694	ExpressionStatement	"fputc ( c , m )"	80:2:2015:2026	5589484	5	True				
ANR	5589695	CallExpression	"fputc ( c , m )"		5589484	0					
ANR	5589696	Callee	fputc		5589484	0					
ANR	5589697	Identifier	fputc		5589484	0					
ANR	5589698	ArgumentList	c		5589484	1					
ANR	5589699	Argument	c		5589484	0					
ANR	5589700	Identifier	c		5589484	0					
ANR	5589701	Argument	m		5589484	1					
ANR	5589702	Identifier	m		5589484	0					
ANR	5589703	ExpressionStatement	fclose ( n )	82:1:2032:2041	5589484	13	True				
ANR	5589704	CallExpression	fclose ( n )		5589484	0					
ANR	5589705	Callee	fclose		5589484	0					
ANR	5589706	Identifier	fclose		5589484	0					
ANR	5589707	ArgumentList	n		5589484	1					
ANR	5589708	Argument	n		5589484	0					
ANR	5589709	Identifier	n		5589484	0					
ANR	5589710	ExpressionStatement	fclose ( m )	83:1:2044:2053	5589484	14	True				
ANR	5589711	CallExpression	fclose ( m )		5589484	0					
ANR	5589712	Callee	fclose		5589484	0					
ANR	5589713	Identifier	fclose		5589484	0					
ANR	5589714	ArgumentList	m		5589484	1					
ANR	5589715	Argument	m		5589484	0					
ANR	5589716	Identifier	m		5589484	0					
ANR	5589717	ExpressionStatement	"remove ( ""nodes"" )"	85:1:2057:2072	5589484	15	True				
ANR	5589718	CallExpression	"remove ( ""nodes"" )"		5589484	0					
ANR	5589719	Callee	remove		5589484	0					
ANR	5589720	Identifier	remove		5589484	0					
ANR	5589721	ArgumentList	"""nodes"""		5589484	1					
ANR	5589722	Argument	"""nodes"""		5589484	0					
ANR	5589723	PrimaryExpression	"""nodes"""		5589484	0					
ANR	5589724	IdentifierDeclStatement	int command_size = 128 ;	88:1:2112:2134	5589484	16	True				
ANR	5589725	IdentifierDecl	command_size = 128		5589484	0					
ANR	5589726	IdentifierDeclType	int		5589484	0					
ANR	5589727	Identifier	command_size		5589484	1					
ANR	5589728	AssignmentExpression	command_size = 128		5589484	2		=			
ANR	5589729	Identifier	command_size		5589484	0					
ANR	5589730	PrimaryExpression	128		5589484	1					
ANR	5589731	IdentifierDeclStatement	int index ;	89:1:2137:2146	5589484	17	True				
ANR	5589732	IdentifierDecl	index		5589484	0					
ANR	5589733	IdentifierDeclType	int		5589484	0					
ANR	5589734	Identifier	index		5589484	1					
ANR	5589735	ForStatement	for ( index = 0 ; index < argc ; index ++ )		5589484	18					
ANR	5589736	ForInit	index = 0 ;	90:6:2154:2163	5589484	0	True				
ANR	5589737	AssignmentExpression	index = 0		5589484	0		=			
ANR	5589738	Identifier	index		5589484	0					
ANR	5589739	PrimaryExpression	0		5589484	1					
ANR	5589740	Condition	index < argc	90:17:2165:2176	5589484	1	True				
ANR	5589741	RelationalExpression	index < argc		5589484	0		<			
ANR	5589742	Identifier	index		5589484	0					
ANR	5589743	Identifier	argc		5589484	1					
ANR	5589744	PostIncDecOperationExpression	index ++	90:31:2179:2185	5589484	2	True				
ANR	5589745	Identifier	index		5589484	0					
ANR	5589746	IncDec	++		5589484	1					
ANR	5589747	CompoundStatement		59:40:1065:1065	5589484	3					
ANR	5589748	ExpressionStatement	command_size += strlen ( argv [ index ] )	91:2:2192:2227	5589484	0	True				
ANR	5589749	AssignmentExpression	command_size += strlen ( argv [ index ] )		5589484	0		+=			
ANR	5589750	Identifier	command_size		5589484	0					
ANR	5589751	CallExpression	strlen ( argv [ index ] )		5589484	1					
ANR	5589752	Callee	strlen		5589484	0					
ANR	5589753	Identifier	strlen		5589484	0					
ANR	5589754	ArgumentList	argv [ index ]		5589484	1					
ANR	5589755	Argument	argv [ index ]		5589484	0					
ANR	5589756	ArrayIndexing	argv [ index ]		5589484	0					
ANR	5589757	Identifier	argv		5589484	0					
ANR	5589758	Identifier	index		5589484	1					
ANR	5589759	IdentifierDeclStatement	char * command = ( char * ) malloc ( command_size ) ;	94:1:2234:2278	5589484	19	True				
ANR	5589760	IdentifierDecl	* command = ( char * ) malloc ( command_size )		5589484	0					
ANR	5589761	IdentifierDeclType	char *		5589484	0					
ANR	5589762	Identifier	command		5589484	1					
ANR	5589763	AssignmentExpression	* command = ( char * ) malloc ( command_size )		5589484	2		=			
ANR	5589764	Identifier	command		5589484	0					
ANR	5589765	CastExpression	( char * ) malloc ( command_size )		5589484	1					
ANR	5589766	CastTarget	char *		5589484	0					
ANR	5589767	CallExpression	malloc ( command_size )		5589484	1					
ANR	5589768	Callee	malloc		5589484	0					
ANR	5589769	Identifier	malloc		5589484	0					
ANR	5589770	ArgumentList	command_size		5589484	1					
ANR	5589771	Argument	command_size		5589484	0					
ANR	5589772	Identifier	command_size		5589484	0					
ANR	5589773	ExpressionStatement	"sprintf ( command , ""mpirun -np %d -machines machines "" , count )"	96:1:2282:2342	5589484	20	True				
ANR	5589774	CallExpression	"sprintf ( command , ""mpirun -np %d -machines machines "" , count )"		5589484	0					
ANR	5589775	Callee	sprintf		5589484	0					
ANR	5589776	Identifier	sprintf		5589484	0					
ANR	5589777	ArgumentList	command		5589484	1					
ANR	5589778	Argument	command		5589484	0					
ANR	5589779	Identifier	command		5589484	0					
ANR	5589780	Argument	"""mpirun -np %d -machines machines """		5589484	1					
ANR	5589781	PrimaryExpression	"""mpirun -np %d -machines machines """		5589484	0					
ANR	5589782	Argument	count		5589484	2					
ANR	5589783	Identifier	count		5589484	0					
ANR	5589784	IdentifierDeclStatement	int i ;	98:1:2346:2351	5589484	21	True				
ANR	5589785	IdentifierDecl	i		5589484	0					
ANR	5589786	IdentifierDeclType	int		5589484	0					
ANR	5589787	Identifier	i		5589484	1					
ANR	5589788	ForStatement	for ( i = 1 ; i < argc ; i ++ )		5589484	22					
ANR	5589789	ForInit	i = 1 ;	99:6:2359:2364	5589484	0	True				
ANR	5589790	AssignmentExpression	i = 1		5589484	0		=			
ANR	5589791	Identifier	i		5589484	0					
ANR	5589792	PrimaryExpression	1		5589484	1					
ANR	5589793	Condition	i < argc	99:13:2366:2373	5589484	1	True				
ANR	5589794	RelationalExpression	i < argc		5589484	0		<			
ANR	5589795	Identifier	i		5589484	0					
ANR	5589796	Identifier	argc		5589484	1					
ANR	5589797	PostIncDecOperationExpression	i ++	99:23:2376:2378	5589484	2	True				
ANR	5589798	Identifier	i		5589484	0					
ANR	5589799	IncDec	++		5589484	1					
ANR	5589800	CompoundStatement		68:28:1258:1258	5589484	3					
ANR	5589801	ExpressionStatement	"strcat ( command , argv [ i ] )"	100:2:2386:2410	5589484	0	True				
ANR	5589802	CallExpression	"strcat ( command , argv [ i ] )"		5589484	0					
ANR	5589803	Callee	strcat		5589484	0					
ANR	5589804	Identifier	strcat		5589484	0					
ANR	5589805	ArgumentList	command		5589484	1					
ANR	5589806	Argument	command		5589484	0					
ANR	5589807	Identifier	command		5589484	0					
ANR	5589808	Argument	argv [ i ]		5589484	1					
ANR	5589809	ArrayIndexing	argv [ i ]		5589484	0					
ANR	5589810	Identifier	argv		5589484	0					
ANR	5589811	Identifier	i		5589484	1					
ANR	5589812	ExpressionStatement	"strcat ( command , "" "" )"	101:2:2414:2434	5589484	1	True				
ANR	5589813	CallExpression	"strcat ( command , "" "" )"		5589484	0					
ANR	5589814	Callee	strcat		5589484	0					
ANR	5589815	Identifier	strcat		5589484	0					
ANR	5589816	ArgumentList	command		5589484	1					
ANR	5589817	Argument	command		5589484	0					
ANR	5589818	Identifier	command		5589484	0					
ANR	5589819	Argument	""" """		5589484	1					
ANR	5589820	PrimaryExpression	""" """		5589484	0					
ANR	5589821	ExpressionStatement	r = system ( command )	104:1:2441:2460	5589484	23	True				
ANR	5589822	AssignmentExpression	r = system ( command )		5589484	0		=			
ANR	5589823	Identifier	r		5589484	0					
ANR	5589824	CallExpression	system ( command )		5589484	1					
ANR	5589825	Callee	system		5589484	0					
ANR	5589826	Identifier	system		5589484	0					
ANR	5589827	ArgumentList	command		5589484	1					
ANR	5589828	Argument	command		5589484	0					
ANR	5589829	Identifier	command		5589484	0					
ANR	5589830	ExpressionStatement	"remove ( ""machines"" )"	105:1:2463:2481	5589484	24	True				
ANR	5589831	CallExpression	"remove ( ""machines"" )"		5589484	0					
ANR	5589832	Callee	remove		5589484	0					
ANR	5589833	Identifier	remove		5589484	0					
ANR	5589834	ArgumentList	"""machines"""		5589484	1					
ANR	5589835	Argument	"""machines"""		5589484	0					
ANR	5589836	PrimaryExpression	"""machines"""		5589484	0					
ANR	5589837	ExpressionStatement	exit ( r )	107:1:2485:2492	5589484	25	True				
ANR	5589838	CallExpression	exit ( r )		5589484	0					
ANR	5589839	Callee	exit		5589484	0					
ANR	5589840	Identifier	exit		5589484	0					
ANR	5589841	ArgumentList	r		5589484	1					
ANR	5589842	Argument	r		5589484	0					
ANR	5589843	Identifier	r		5589484	0					
ANR	5589844	ReturnStatement	return 0 ;	108:1:2495:2503	5589484	26	True				
ANR	5589845	PrimaryExpression	0		5589484	0					
ANR	5589846	ReturnType	int		5589484	1					
ANR	5589847	Identifier	main		5589484	2					
ANR	5589848	ParameterList	"int argc , char * * argv"		5589484	3					
ANR	5589849	Parameter	int argc	32:5:1099:1106	5589484	0	True				
ANR	5589850	ParameterType	int		5589484	0					
ANR	5589851	Identifier	argc		5589484	1					
ANR	5589852	Parameter	char * * argv	32:15:1109:1119	5589484	1	True				
ANR	5589853	ParameterType	char * *		5589484	0					
ANR	5589854	Identifier	argv		5589484	1					
ANR	5589855	CFGEntryNode	ENTRY		5589484		True				
ANR	5589856	CFGExitNode	EXIT		5589484		True				
ANR	5589857	Symbol	argc		5589484						
ANR	5589858	Symbol	fopen		5589484						
ANR	5589859	Symbol	malloc		5589484						
ANR	5589860	Symbol	c		5589484						
ANR	5589861	Symbol	* index		5589484						
ANR	5589862	Symbol	count		5589484						
ANR	5589863	Symbol	index		5589484						
ANR	5589864	Symbol	i		5589484						
ANR	5589865	Symbol	* argv		5589484						
ANR	5589866	Symbol	command_size		5589484						
ANR	5589867	Symbol	argv		5589484						
ANR	5589868	Symbol	procno_str		5589484						
ANR	5589869	Symbol	m		5589484						
ANR	5589870	Symbol	procno		5589484						
ANR	5589871	Symbol	n		5589484						
ANR	5589872	Symbol	command		5589484						
ANR	5589873	Symbol	strlen		5589484						
ANR	5589874	Symbol	r		5589484						
ANR	5589875	Symbol	system		5589484						
ANR	5589876	Symbol	* i		5589484						
ANR	5589877	Symbol	feof		5589484						
ANR	5589878	Symbol	& procno		5589484						
ANR	5589879	Symbol	fgetc		5589484						
ANR	5589880	Symbol	getenv		5589484						
