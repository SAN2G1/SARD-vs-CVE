command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2610469	File	data/converged/CVE-2011-4930_htcondor/src_classad_util.cpp								
ANR	2610470	Function	isnan_f	42:0:1565:1625							
ANR	2610471	FunctionDef	isnan_f (float x)		2610470	0					
ANR	2610472	CompoundStatement		42:43:1608:1625	2610470	0					
ANR	2610473	ReturnStatement	return x != x ;	42:1:1610:1623	2610470	0	True				
ANR	2610474	EqualityExpression	x != x		2610470	0		!=			
ANR	2610475	Identifier	x		2610470	0					
ANR	2610476	Identifier	x		2610470	1					
ANR	2610477	ReturnType	static inline int		2610470	1					
ANR	2610478	Identifier	isnan_f		2610470	2					
ANR	2610479	ParameterList	float x		2610470	3					
ANR	2610480	Parameter	float x	42:28:1593:1605	2610470	0	True				
ANR	2610481	ParameterType	float		2610470	0					
ANR	2610482	Identifier	x		2610470	1					
ANR	2610483	CFGEntryNode	ENTRY		2610470		True				
ANR	2610484	CFGExitNode	EXIT		2610470		True				
ANR	2610485	Symbol	x		2610470						
ANR	2610486	Function	isnan_d	43:0:1627:1687							
ANR	2610487	FunctionDef	isnan_d (double x)		2610486	0					
ANR	2610488	CompoundStatement		43:43:1670:1687	2610486	0					
ANR	2610489	ReturnStatement	return x != x ;	43:1:1672:1685	2610486	0	True				
ANR	2610490	EqualityExpression	x != x		2610486	0		!=			
ANR	2610491	Identifier	x		2610486	0					
ANR	2610492	Identifier	x		2610486	1					
ANR	2610493	ReturnType	static inline int		2610486	1					
ANR	2610494	Identifier	isnan_d		2610486	2					
ANR	2610495	ParameterList	double x		2610486	3					
ANR	2610496	Parameter	double x	43:28:1655:1667	2610486	0	True				
ANR	2610497	ParameterType	double		2610486	0					
ANR	2610498	Identifier	x		2610486	1					
ANR	2610499	CFGEntryNode	ENTRY		2610486		True				
ANR	2610500	CFGExitNode	EXIT		2610486		True				
ANR	2610501	Symbol	x		2610486						
ANR	2610502	Function	isnan_ld	44:0:1689:1749							
ANR	2610503	FunctionDef	isnan_ld (long double x)		2610502	0					
ANR	2610504	CompoundStatement		44:43:1732:1749	2610502	0					
ANR	2610505	ReturnStatement	return x != x ;	44:1:1734:1747	2610502	0	True				
ANR	2610506	EqualityExpression	x != x		2610502	0		!=			
ANR	2610507	Identifier	x		2610502	0					
ANR	2610508	Identifier	x		2610502	1					
ANR	2610509	ReturnType	static inline int		2610502	1					
ANR	2610510	Identifier	isnan_ld		2610502	2					
ANR	2610511	ParameterList	long double x		2610502	3					
ANR	2610512	Parameter	long double x	44:28:1717:1729	2610502	0	True				
ANR	2610513	ParameterType	long double		2610502	0					
ANR	2610514	Identifier	x		2610502	1					
ANR	2610515	CFGEntryNode	ENTRY		2610502		True				
ANR	2610516	CFGExitNode	EXIT		2610502		True				
ANR	2610517	Symbol	x		2610502						
ANR	2610518	Function	isinf_f	52:0:1933:2000							
ANR	2610519	FunctionDef	isinf_f (float x)		2610518	0					
ANR	2610520	CompoundStatement		52:43:1976:2000	2610518	0					
ANR	2610521	ReturnStatement	return isnan ( x - x ) ;	52:1:1978:1998	2610518	0	True				
ANR	2610522	CallExpression	isnan ( x - x )		2610518	0					
ANR	2610523	Callee	isnan		2610518	0					
ANR	2610524	Identifier	isnan		2610518	0					
ANR	2610525	ArgumentList	x - x		2610518	1					
ANR	2610526	Argument	x - x		2610518	0					
ANR	2610527	AdditiveExpression	x - x		2610518	0		-			
ANR	2610528	Identifier	x		2610518	0					
ANR	2610529	Identifier	x		2610518	1					
ANR	2610530	ReturnType	static inline int		2610518	1					
ANR	2610531	Identifier	isinf_f		2610518	2					
ANR	2610532	ParameterList	float x		2610518	3					
ANR	2610533	Parameter	float x	52:28:1961:1973	2610518	0	True				
ANR	2610534	ParameterType	float		2610518	0					
ANR	2610535	Identifier	x		2610518	1					
ANR	2610536	CFGEntryNode	ENTRY		2610518		True				
ANR	2610537	CFGExitNode	EXIT		2610518		True				
ANR	2610538	Symbol	x		2610518						
ANR	2610539	Symbol	isnan		2610518						
ANR	2610540	Function	isinf_d	53:0:2002:2069							
ANR	2610541	FunctionDef	isinf_d (double x)		2610540	0					
ANR	2610542	CompoundStatement		53:43:2045:2069	2610540	0					
ANR	2610543	ReturnStatement	return isnan ( x - x ) ;	53:1:2047:2067	2610540	0	True				
ANR	2610544	CallExpression	isnan ( x - x )		2610540	0					
ANR	2610545	Callee	isnan		2610540	0					
ANR	2610546	Identifier	isnan		2610540	0					
ANR	2610547	ArgumentList	x - x		2610540	1					
ANR	2610548	Argument	x - x		2610540	0					
ANR	2610549	AdditiveExpression	x - x		2610540	0		-			
ANR	2610550	Identifier	x		2610540	0					
ANR	2610551	Identifier	x		2610540	1					
ANR	2610552	ReturnType	static inline int		2610540	1					
ANR	2610553	Identifier	isinf_d		2610540	2					
ANR	2610554	ParameterList	double x		2610540	3					
ANR	2610555	Parameter	double x	53:28:2030:2042	2610540	0	True				
ANR	2610556	ParameterType	double		2610540	0					
ANR	2610557	Identifier	x		2610540	1					
ANR	2610558	CFGEntryNode	ENTRY		2610540		True				
ANR	2610559	CFGExitNode	EXIT		2610540		True				
ANR	2610560	Symbol	x		2610540						
ANR	2610561	Symbol	isnan		2610540						
ANR	2610562	Function	isinf_ld	54:0:2071:2138							
ANR	2610563	FunctionDef	isinf_ld (long double x)		2610562	0					
ANR	2610564	CompoundStatement		54:43:2114:2138	2610562	0					
ANR	2610565	ReturnStatement	return isnan ( x - x ) ;	54:1:2116:2136	2610562	0	True				
ANR	2610566	CallExpression	isnan ( x - x )		2610562	0					
ANR	2610567	Callee	isnan		2610562	0					
ANR	2610568	Identifier	isnan		2610562	0					
ANR	2610569	ArgumentList	x - x		2610562	1					
ANR	2610570	Argument	x - x		2610562	0					
ANR	2610571	AdditiveExpression	x - x		2610562	0		-			
ANR	2610572	Identifier	x		2610562	0					
ANR	2610573	Identifier	x		2610562	1					
ANR	2610574	ReturnType	static inline int		2610562	1					
ANR	2610575	Identifier	isinf_ld		2610562	2					
ANR	2610576	ParameterList	long double x		2610562	3					
ANR	2610577	Parameter	long double x	54:28:2099:2111	2610562	0	True				
ANR	2610578	ParameterType	long double		2610562	0					
ANR	2610579	Identifier	x		2610562	1					
ANR	2610580	CFGEntryNode	ENTRY		2610562		True				
ANR	2610581	CFGExitNode	EXIT		2610562		True				
ANR	2610582	Symbol	x		2610562						
ANR	2610583	Symbol	isnan		2610562						
ANR	2610584	Function	get_random_integer	60:1:2183:2401							
ANR	2610585	FunctionDef	get_random_integer ()		2610584	0					
ANR	2610586	CompoundStatement		62:0:2247:2401	2610584	0					
ANR	2610587	Statement	static	63:4:2253:2258	2610584	0	True				
ANR	2610588	IdentifierDeclStatement	char initialized = 0 ;	63:11:2260:2280	2610584	1	True				
ANR	2610589	IdentifierDecl	initialized = 0		2610584	0					
ANR	2610590	IdentifierDeclType	char		2610584	0					
ANR	2610591	Identifier	initialized		2610584	1					
ANR	2610592	AssignmentExpression	initialized = 0		2610584	2		=			
ANR	2610593	Identifier	initialized		2610584	0					
ANR	2610594	PrimaryExpression	0		2610584	1					
ANR	2610595	IfStatement	if ( ! initialized )		2610584	2					
ANR	2610596	Condition	! initialized	65:5:2288:2299	2610584	0	True				
ANR	2610597	UnaryOperationExpression	! initialized		2610584	0					
ANR	2610598	UnaryOperator	!		2610584	0					
ANR	2610599	Identifier	initialized		2610584	1					
ANR	2610600	CompoundStatement		5:8:64:85	2610584	1					
ANR	2610601	IdentifierDeclStatement	int seed = time ( NULL ) ;	66:8:2312:2333	2610584	0	True				
ANR	2610602	IdentifierDecl	seed = time ( NULL )		2610584	0					
ANR	2610603	IdentifierDeclType	int		2610584	0					
ANR	2610604	Identifier	seed		2610584	1					
ANR	2610605	AssignmentExpression	seed = time ( NULL )		2610584	2		=			
ANR	2610606	Identifier	seed		2610584	0					
ANR	2610607	CallExpression	time ( NULL )		2610584	1					
ANR	2610608	Callee	time		2610584	0					
ANR	2610609	Identifier	time		2610584	0					
ANR	2610610	ArgumentList	NULL		2610584	1					
ANR	2610611	Argument	NULL		2610584	0					
ANR	2610612	Identifier	NULL		2610584	0					
ANR	2610613	ExpressionStatement	srand ( seed )	67:8:2343:2354	2610584	1	True				
ANR	2610614	CallExpression	srand ( seed )		2610584	0					
ANR	2610615	Callee	srand		2610584	0					
ANR	2610616	Identifier	srand		2610584	0					
ANR	2610617	ArgumentList	seed		2610584	1					
ANR	2610618	Argument	seed		2610584	0					
ANR	2610619	Identifier	seed		2610584	0					
ANR	2610620	ExpressionStatement	initialized = 1	68:8:2364:2379	2610584	2	True				
ANR	2610621	AssignmentExpression	initialized = 1		2610584	0		=			
ANR	2610622	Identifier	initialized		2610584	0					
ANR	2610623	PrimaryExpression	1		2610584	1					
ANR	2610624	ReturnStatement	return rand ( ) ;	71:1:2386:2399	2610584	3	True				
ANR	2610625	CallExpression	rand ( )		2610584	0					
ANR	2610626	Callee	rand		2610584	0					
ANR	2610627	Identifier	rand		2610584	0					
ANR	2610628	ArgumentList			2610584	1					
ANR	2610629	ReturnType	define BIGGEST_RANDOM_INT RAND_MAX int		2610584	1					
ANR	2610630	Identifier	get_random_integer		2610584	2					
ANR	2610631	ParameterList			2610584	3					
ANR	2610632	CFGEntryNode	ENTRY		2610584		True				
ANR	2610633	CFGExitNode	EXIT		2610584		True				
ANR	2610634	Symbol	rand		2610584						
ANR	2610635	Symbol	NULL		2610584						
ANR	2610636	Symbol	seed		2610584						
ANR	2610637	Symbol	initialized		2610584						
ANR	2610638	Symbol	time		2610584						
ANR	2610639	Function	get_random_integer	74:1:2410:2649							
ANR	2610640	FunctionDef	get_random_integer ()		2610639	0					
ANR	2610641	CompoundStatement		76:0:2473:2649	2610639	0					
ANR	2610642	Statement	static	77:4:2479:2484	2610639	0	True				
ANR	2610643	IdentifierDeclStatement	char initialized = 0 ;	77:11:2486:2506	2610639	1	True				
ANR	2610644	IdentifierDecl	initialized = 0		2610639	0					
ANR	2610645	IdentifierDeclType	char		2610639	0					
ANR	2610646	Identifier	initialized		2610639	1					
ANR	2610647	AssignmentExpression	initialized = 0		2610639	2		=			
ANR	2610648	Identifier	initialized		2610639	0					
ANR	2610649	PrimaryExpression	0		2610639	1					
ANR	2610650	IfStatement	if ( ! initialized )		2610639	2					
ANR	2610651	Condition	! initialized	79:5:2514:2525	2610639	0	True				
ANR	2610652	UnaryOperationExpression	! initialized		2610639	0					
ANR	2610653	UnaryOperator	!		2610639	0					
ANR	2610654	Identifier	initialized		2610639	1					
ANR	2610655	CompoundStatement		5:8:64:85	2610639	1					
ANR	2610656	IdentifierDeclStatement	int seed = time ( NULL ) ;	80:8:2538:2559	2610639	0	True				
ANR	2610657	IdentifierDecl	seed = time ( NULL )		2610639	0					
ANR	2610658	IdentifierDeclType	int		2610639	0					
ANR	2610659	Identifier	seed		2610639	1					
ANR	2610660	AssignmentExpression	seed = time ( NULL )		2610639	2		=			
ANR	2610661	Identifier	seed		2610639	0					
ANR	2610662	CallExpression	time ( NULL )		2610639	1					
ANR	2610663	Callee	time		2610639	0					
ANR	2610664	Identifier	time		2610639	0					
ANR	2610665	ArgumentList	NULL		2610639	1					
ANR	2610666	Argument	NULL		2610639	0					
ANR	2610667	Identifier	NULL		2610639	0					
ANR	2610668	ExpressionStatement	srand48 ( seed )	81:8:2569:2582	2610639	1	True				
ANR	2610669	CallExpression	srand48 ( seed )		2610639	0					
ANR	2610670	Callee	srand48		2610639	0					
ANR	2610671	Identifier	srand48		2610639	0					
ANR	2610672	ArgumentList	seed		2610639	1					
ANR	2610673	Argument	seed		2610639	0					
ANR	2610674	Identifier	seed		2610639	0					
ANR	2610675	ExpressionStatement	initialized = 1	82:8:2592:2607	2610639	2	True				
ANR	2610676	AssignmentExpression	initialized = 1		2610639	0		=			
ANR	2610677	Identifier	initialized		2610639	0					
ANR	2610678	PrimaryExpression	1		2610639	1					
ANR	2610679	ReturnStatement	return ( int ) ( lrand48 ( ) & INT_MAX ) ;	84:1:2613:2647	2610639	3	True				
ANR	2610680	CastExpression	( int ) ( lrand48 ( ) & INT_MAX )		2610639	0					
ANR	2610681	CastTarget	int		2610639	0					
ANR	2610682	BitAndExpression	lrand48 ( ) & INT_MAX		2610639	1		&			
ANR	2610683	CallExpression	lrand48 ( )		2610639	0					
ANR	2610684	Callee	lrand48		2610639	0					
ANR	2610685	Identifier	lrand48		2610639	0					
ANR	2610686	ArgumentList			2610639	1					
ANR	2610687	Identifier	INT_MAX		2610639	1					
ANR	2610688	ReturnType	define BIGGEST_RANDOM_INT INT_MAX int		2610639	1					
ANR	2610689	Identifier	get_random_integer		2610639	2					
ANR	2610690	ParameterList			2610639	3					
ANR	2610691	CFGEntryNode	ENTRY		2610639		True				
ANR	2610692	CFGExitNode	EXIT		2610639		True				
ANR	2610693	Symbol	NULL		2610639						
ANR	2610694	Symbol	seed		2610639						
ANR	2610695	Symbol	lrand48		2610639						
ANR	2610696	Symbol	INT_MAX		2610639						
ANR	2610697	Symbol	initialized		2610639						
ANR	2610698	Symbol	time		2610639						
ANR	2610699	Function	get_random_real	88:0:2659:2755							
ANR	2610700	FunctionDef	get_random_real ()		2610699	0					
ANR	2610701	CompoundStatement		89:0:2688:2755	2610699	0					
ANR	2610702	ReturnStatement	return ( get_random_integer ( ) / ( double ) BIGGEST_RANDOM_INT ) ;	90:4:2694:2753	2610699	0	True				
ANR	2610703	MultiplicativeExpression	get_random_integer ( ) / ( double ) BIGGEST_RANDOM_INT		2610699	0		/			
ANR	2610704	CallExpression	get_random_integer ( )		2610699	0					
ANR	2610705	Callee	get_random_integer		2610699	0					
ANR	2610706	Identifier	get_random_integer		2610699	0					
ANR	2610707	ArgumentList			2610699	1					
ANR	2610708	CastExpression	( double ) BIGGEST_RANDOM_INT		2610699	1					
ANR	2610709	CastTarget	double		2610699	0					
ANR	2610710	Identifier	BIGGEST_RANDOM_INT		2610699	1					
ANR	2610711	ReturnType	double		2610699	1					
ANR	2610712	Identifier	get_random_real		2610699	2					
ANR	2610713	ParameterList			2610699	3					
ANR	2610714	CFGEntryNode	ENTRY		2610699		True				
ANR	2610715	CFGExitNode	EXIT		2610699		True				
ANR	2610716	Symbol	BIGGEST_RANDOM_INT		2610699						
ANR	2610717	Symbol	get_random_integer		2610699						
ANR	2610718	Function	timezone_offset	93:0:2758:3712							
ANR	2610719	FunctionDef	"timezone_offset (time_t clock , bool no_dst)"		2610718	0					
ANR	2610720	CompoundStatement		94:0:2808:3712	2610718	0					
ANR	2610721	IdentifierDeclStatement	long tz_offset ;	95:4:2814:2828	2610718	0	True				
ANR	2610722	IdentifierDecl	tz_offset		2610718	0					
ANR	2610723	IdentifierDeclType	long		2610718	0					
ANR	2610724	Identifier	tz_offset		2610718	1					
ANR	2610725	IdentifierDeclStatement	struct tm tms ;	96:4:2834:2848	2610718	1	True				
ANR	2610726	IdentifierDecl	tms		2610718	0					
ANR	2610727	IdentifierDeclType	struct tm		2610718	0					
ANR	2610728	Identifier	tms		2610718	1					
ANR	2610729	ExpressionStatement	"getLocalTime ( & clock , & tms )"	98:4:2855:2881	2610718	2	True				
ANR	2610730	CallExpression	"getLocalTime ( & clock , & tms )"		2610718	0					
ANR	2610731	Callee	getLocalTime		2610718	0					
ANR	2610732	Identifier	getLocalTime		2610718	0					
ANR	2610733	ArgumentList	& clock		2610718	1					
ANR	2610734	Argument	& clock		2610718	0					
ANR	2610735	UnaryOperationExpression	& clock		2610718	0					
ANR	2610736	UnaryOperator	&		2610718	0					
ANR	2610737	Identifier	clock		2610718	1					
ANR	2610738	Argument	& tms		2610718	1					
ANR	2610739	UnaryOperationExpression	& tms		2610718	0					
ANR	2610740	UnaryOperator	&		2610718	0					
ANR	2610741	Identifier	tms		2610718	1					
ANR	2610742	ExpressionStatement	tz_offset = tms . tm_gmtoff	100:4:2909:2934	2610718	3	True				
ANR	2610743	AssignmentExpression	tz_offset = tms . tm_gmtoff		2610718	0		=			
ANR	2610744	Identifier	tz_offset		2610718	0					
ANR	2610745	MemberAccess	tms . tm_gmtoff		2610718	1					
ANR	2610746	Identifier	tms		2610718	0					
ANR	2610747	Identifier	tm_gmtoff		2610718	1					
ANR	2610748	IfStatement	if ( no_dst && 0 != tms . tm_isdst )		2610718	4					
ANR	2610749	Condition	no_dst && 0 != tms . tm_isdst	126:9:3624:3650	2610718	0	True				
ANR	2610750	AndExpression	no_dst && 0 != tms . tm_isdst		2610718	0		&&			
ANR	2610751	Identifier	no_dst		2610718	0					
ANR	2610752	EqualityExpression	0 != tms . tm_isdst		2610718	1		!=			
ANR	2610753	PrimaryExpression	0		2610718	0					
ANR	2610754	MemberAccess	tms . tm_isdst		2610718	1					
ANR	2610755	Identifier	tms		2610718	0					
ANR	2610756	Identifier	tm_isdst		2610718	1					
ANR	2610757	CompoundStatement		33:39:845:845	2610718	1					
ANR	2610758	ExpressionStatement	tz_offset -= 3600	127:8:3664:3681	2610718	0	True				
ANR	2610759	AssignmentExpression	tz_offset -= 3600		2610718	0		-=			
ANR	2610760	Identifier	tz_offset		2610718	0					
ANR	2610761	PrimaryExpression	3600		2610718	1					
ANR	2610762	ReturnStatement	return tz_offset ;	130:4:3694:3710	2610718	5	True				
ANR	2610763	Identifier	tz_offset		2610718	0					
ANR	2610764	ReturnType	long		2610718	1					
ANR	2610765	Identifier	timezone_offset		2610718	2					
ANR	2610766	ParameterList	"time_t clock , bool no_dst"		2610718	3					
ANR	2610767	Parameter	time_t clock	93:22:2780:2791	2610718	0	True				
ANR	2610768	ParameterType	time_t		2610718	0					
ANR	2610769	Identifier	clock		2610718	1					
ANR	2610770	Parameter	bool no_dst	93:36:2794:2804	2610718	1	True				
ANR	2610771	ParameterType	bool		2610718	0					
ANR	2610772	Identifier	no_dst		2610718	1					
ANR	2610773	CFGEntryNode	ENTRY		2610718		True				
ANR	2610774	CFGExitNode	EXIT		2610718		True				
ANR	2610775	Symbol	tms . tm_gmtoff		2610718						
ANR	2610776	Symbol	tz_offset		2610718						
ANR	2610777	Symbol	& tms		2610718						
ANR	2610778	Symbol	& clock		2610718						
ANR	2610779	Symbol	no_dst		2610718						
ANR	2610780	Symbol	clock		2610718						
ANR	2610781	Symbol	tms		2610718						
ANR	2610782	Symbol	tms . tm_isdst		2610718						
ANR	2610783	Function	convert_escapes	133:0:3715:6198							
ANR	2610784	FunctionDef	"convert_escapes (string & text , bool & validStr)"		2610783	0					
ANR	2610785	CompoundStatement		134:0:3766:6198	2610783	0					
ANR	2610786	IdentifierDeclStatement	char * copy ;	135:1:3769:3779	2610783	0	True				
ANR	2610787	IdentifierDecl	* copy		2610783	0					
ANR	2610788	IdentifierDeclType	char *		2610783	0					
ANR	2610789	Identifier	copy		2610783	1					
ANR	2610790	IdentifierDeclStatement	int length ;	136:1:3782:3793	2610783	1	True				
ANR	2610791	IdentifierDecl	length		2610783	0					
ANR	2610792	IdentifierDeclType	int		2610783	0					
ANR	2610793	Identifier	length		2610783	1					
ANR	2610794	IdentifierDeclStatement	"int source , dest ;"	137:1:3796:3813	2610783	2	True				
ANR	2610795	IdentifierDecl	source		2610783	0					
ANR	2610796	IdentifierDeclType	int		2610783	0					
ANR	2610797	Identifier	source		2610783	1					
ANR	2610798	IdentifierDecl	dest		2610783	1					
ANR	2610799	IdentifierDeclType	int		2610783	0					
ANR	2610800	Identifier	dest		2610783	1					
ANR	2610801	ExpressionStatement	length = text . length ( )	140:1:3868:3890	2610783	3	True				
ANR	2610802	AssignmentExpression	length = text . length ( )		2610783	0		=			
ANR	2610803	Identifier	length		2610783	0					
ANR	2610804	CallExpression	text . length ( )		2610783	1					
ANR	2610805	Callee	text . length		2610783	0					
ANR	2610806	MemberAccess	text . length		2610783	0					
ANR	2610807	Identifier	text		2610783	0					
ANR	2610808	Identifier	length		2610783	1					
ANR	2610809	ArgumentList			2610783	1					
ANR	2610810	ExpressionStatement	copy = new char [ length + 1 ]	141:1:3893:3920	2610783	4	True				
ANR	2610811	AssignmentExpression	copy = new char [ length + 1 ]		2610783	0		=			
ANR	2610812	Identifier	copy		2610783	0					
ANR	2610813	AdditiveExpression	length + 1		2610783	1		+			
ANR	2610814	Identifier	length		2610783	0					
ANR	2610815	PrimaryExpression	1		2610783	1					
ANR	2610816	ExpressionStatement	dest = 0	145:1:4036:4044	2610783	5	True				
ANR	2610817	AssignmentExpression	dest = 0		2610783	0		=			
ANR	2610818	Identifier	dest		2610783	0					
ANR	2610819	PrimaryExpression	0		2610783	1					
ANR	2610820	ForStatement	for ( source = 0 ; source < length - 1 ; source ++ )		2610783	6					
ANR	2610821	ForInit	source = 0 ;	146:6:4052:4062	2610783	0	True				
ANR	2610822	AssignmentExpression	source = 0		2610783	0		=			
ANR	2610823	Identifier	source		2610783	0					
ANR	2610824	PrimaryExpression	0		2610783	1					
ANR	2610825	Condition	source < length - 1	146:18:4064:4082	2610783	1	True				
ANR	2610826	RelationalExpression	source < length - 1		2610783	0		<			
ANR	2610827	Identifier	source		2610783	0					
ANR	2610828	AdditiveExpression	length - 1		2610783	1		-			
ANR	2610829	Identifier	length		2610783	0					
ANR	2610830	PrimaryExpression	1		2610783	1					
ANR	2610831	PostIncDecOperationExpression	source ++	146:39:4085:4092	2610783	2	True				
ANR	2610832	Identifier	source		2610783	0					
ANR	2610833	IncDec	++		2610783	1					
ANR	2610834	CompoundStatement		13:49:328:328	2610783	3					
ANR	2610835	IfStatement	if ( text [ source ] != '\\\\' || source == length - 1 )		2610783	0					
ANR	2610836	Condition	text [ source ] != '\\\\' || source == length - 1	147:6:4103:4146	2610783	0	True				
ANR	2610837	OrExpression	text [ source ] != '\\\\' || source == length - 1		2610783	0		||			
ANR	2610838	EqualityExpression	text [ source ] != '\\\\'		2610783	0		!=			
ANR	2610839	ArrayIndexing	text [ source ]		2610783	0					
ANR	2610840	Identifier	text		2610783	0					
ANR	2610841	Identifier	source		2610783	1					
ANR	2610842	PrimaryExpression	'\\\\'		2610783	1					
ANR	2610843	EqualityExpression	source == length - 1		2610783	1		==			
ANR	2610844	Identifier	source		2610783	0					
ANR	2610845	AdditiveExpression	length - 1		2610783	1		-			
ANR	2610846	Identifier	length		2610783	0					
ANR	2610847	PrimaryExpression	1		2610783	1					
ANR	2610848	CompoundStatement		14:52:382:382	2610783	1					
ANR	2610849	ExpressionStatement	copy [ dest ++ ] = text [ source ]	148:3:4154:4180	2610783	0	True				
ANR	2610850	AssignmentExpression	copy [ dest ++ ] = text [ source ]		2610783	0		=			
ANR	2610851	ArrayIndexing	copy [ dest ++ ]		2610783	0					
ANR	2610852	Identifier	copy		2610783	0					
ANR	2610853	PostIncDecOperationExpression	dest ++		2610783	1					
ANR	2610854	Identifier	dest		2610783	0					
ANR	2610855	IncDec	++		2610783	1					
ANR	2610856	ArrayIndexing	text [ source ]		2610783	1					
ANR	2610857	Identifier	text		2610783	0					
ANR	2610858	Identifier	source		2610783	1					
ANR	2610859	ElseStatement	else		2610783	0					
ANR	2610860	CompoundStatement		20:3:446:459	2610783	0					
ANR	2610861	ExpressionStatement	source ++	151:3:4199:4207	2610783	0	True				
ANR	2610862	PostIncDecOperationExpression	source ++		2610783	0					
ANR	2610863	Identifier	source		2610783	0					
ANR	2610864	IncDec	++		2610783	1					
ANR	2610865	IdentifierDeclStatement	char new_char ;	153:3:4213:4226	2610783	1	True				
ANR	2610866	IdentifierDecl	new_char		2610783	0					
ANR	2610867	IdentifierDeclType	char		2610783	0					
ANR	2610868	Identifier	new_char		2610783	1					
ANR	2610869	SwitchStatement	switch ( text [ source ] )		2610783	2					
ANR	2610870	Condition	text [ source ]	154:10:4238:4249	2610783	0	True				
ANR	2610871	ArrayIndexing	text [ source ]		2610783	0					
ANR	2610872	Identifier	text		2610783	0					
ANR	2610873	Identifier	source		2610783	1					
ANR	2610874	CompoundStatement		21:24:485:485	2610783	1					
ANR	2610875	Label	case 'a' :	155:3:4257:4265	2610783	0	True				
ANR	2610876	ExpressionStatement	new_char = '\\a'	155:13:4267:4282	2610783	1	True				
ANR	2610877	AssignmentExpression	new_char = '\\a'		2610783	0		=			
ANR	2610878	Identifier	new_char		2610783	0					
ANR	2610879	PrimaryExpression	'\\a'		2610783	1					
ANR	2610880	BreakStatement	break ;	155:30:4284:4289	2610783	2	True				
ANR	2610881	Label	case 'b' :	156:3:4294:4302	2610783	3	True				
ANR	2610882	ExpressionStatement	new_char = '\\b'	156:13:4304:4319	2610783	4	True				
ANR	2610883	AssignmentExpression	new_char = '\\b'		2610783	0		=			
ANR	2610884	Identifier	new_char		2610783	0					
ANR	2610885	PrimaryExpression	'\\b'		2610783	1					
ANR	2610886	BreakStatement	break ;	156:30:4321:4326	2610783	5	True				
ANR	2610887	Label	case 'f' :	157:3:4331:4339	2610783	6	True				
ANR	2610888	ExpressionStatement	new_char = '\\f'	157:13:4341:4356	2610783	7	True				
ANR	2610889	AssignmentExpression	new_char = '\\f'		2610783	0		=			
ANR	2610890	Identifier	new_char		2610783	0					
ANR	2610891	PrimaryExpression	'\\f'		2610783	1					
ANR	2610892	BreakStatement	break ;	157:30:4358:4363	2610783	8	True				
ANR	2610893	Label	case 'n' :	158:3:4368:4376	2610783	9	True				
ANR	2610894	ExpressionStatement	new_char = '\\n'	158:13:4378:4393	2610783	10	True				
ANR	2610895	AssignmentExpression	new_char = '\\n'		2610783	0		=			
ANR	2610896	Identifier	new_char		2610783	0					
ANR	2610897	PrimaryExpression	'\\n'		2610783	1					
ANR	2610898	BreakStatement	break ;	158:30:4395:4400	2610783	11	True				
ANR	2610899	Label	case 'r' :	159:3:4405:4413	2610783	12	True				
ANR	2610900	ExpressionStatement	new_char = '\\r'	159:13:4415:4430	2610783	13	True				
ANR	2610901	AssignmentExpression	new_char = '\\r'		2610783	0		=			
ANR	2610902	Identifier	new_char		2610783	0					
ANR	2610903	PrimaryExpression	'\\r'		2610783	1					
ANR	2610904	BreakStatement	break ;	159:30:4432:4437	2610783	14	True				
ANR	2610905	Label	case 't' :	160:3:4442:4450	2610783	15	True				
ANR	2610906	ExpressionStatement	new_char = '\\t'	160:13:4452:4467	2610783	16	True				
ANR	2610907	AssignmentExpression	new_char = '\\t'		2610783	0		=			
ANR	2610908	Identifier	new_char		2610783	0					
ANR	2610909	PrimaryExpression	'\\t'		2610783	1					
ANR	2610910	BreakStatement	break ;	160:30:4469:4474	2610783	17	True				
ANR	2610911	Label	case 'v' :	161:3:4479:4487	2610783	18	True				
ANR	2610912	ExpressionStatement	new_char = '\\v'	161:13:4489:4504	2610783	19	True				
ANR	2610913	AssignmentExpression	new_char = '\\v'		2610783	0		=			
ANR	2610914	Identifier	new_char		2610783	0					
ANR	2610915	PrimaryExpression	'\\v'		2610783	1					
ANR	2610916	BreakStatement	break ;	161:30:4506:4511	2610783	20	True				
ANR	2610917	Label	case '\\\\' :	162:3:4516:4525	2610783	21	True				
ANR	2610918	ExpressionStatement	new_char = '\\\\'	162:14:4527:4542	2610783	22	True				
ANR	2610919	AssignmentExpression	new_char = '\\\\'		2610783	0		=			
ANR	2610920	Identifier	new_char		2610783	0					
ANR	2610921	PrimaryExpression	'\\\\'		2610783	1					
ANR	2610922	BreakStatement	break ;	162:31:4544:4549	2610783	23	True				
ANR	2610923	Label	case '\\?' :	163:3:4554:4563	2610783	24	True				
ANR	2610924	ExpressionStatement	new_char = '\\?'	163:14:4565:4580	2610783	25	True				
ANR	2610925	AssignmentExpression	new_char = '\\?'		2610783	0		=			
ANR	2610926	Identifier	new_char		2610783	0					
ANR	2610927	PrimaryExpression	'\\?'		2610783	1					
ANR	2610928	BreakStatement	break ;	163:31:4582:4587	2610783	26	True				
ANR	2610929	Label	case '\\'' :	164:3:4592:4601	2610783	27	True				
ANR	2610930	ExpressionStatement	new_char = '\\''	164:14:4603:4618	2610783	28	True				
ANR	2610931	AssignmentExpression	new_char = '\\''		2610783	0		=			
ANR	2610932	Identifier	new_char		2610783	0					
ANR	2610933	PrimaryExpression	'\\''		2610783	1					
ANR	2610934	BreakStatement	break ;	164:31:4620:4625	2610783	29	True				
ANR	2610935	Label	"case '\\""' :"	165:3:4630:4639	2610783	30	True				
ANR	2610936	ExpressionStatement	"new_char = '\\""'"	165:14:4641:4656	2610783	31	True				
ANR	2610937	AssignmentExpression	"new_char = '\\""'"		2610783	0		=			
ANR	2610938	Identifier	new_char		2610783	0					
ANR	2610939	PrimaryExpression	"'\\""'"		2610783	1					
ANR	2610940	BreakStatement	break ;	165:31:4658:4663	2610783	32	True				
ANR	2610941	Label	default :	166:3:4668:4675	2610783	33	True				
ANR	2610942	Identifier	default		2610783	0					
ANR	2610943	IfStatement	if ( isodigit ( text [ source ] ) )		2610783	34					
ANR	2610944	Condition	isodigit ( text [ source ] )	167:8:4688:4709	2610783	0	True				
ANR	2610945	CallExpression	isodigit ( text [ source ] )		2610783	0					
ANR	2610946	Callee	isodigit		2610783	0					
ANR	2610947	Identifier	isodigit		2610783	0					
ANR	2610948	ArgumentList	text [ source ]		2610783	1					
ANR	2610949	Argument	text [ source ]		2610783	0					
ANR	2610950	ArrayIndexing	text [ source ]		2610783	0					
ANR	2610951	Identifier	text		2610783	0					
ANR	2610952	Identifier	source		2610783	1					
ANR	2610953	CompoundStatement		35:5:952:972	2610783	1					
ANR	2610954	IdentifierDeclStatement	unsigned int number ;	168:5:4719:4739	2610783	0	True				
ANR	2610955	IdentifierDecl	number		2610783	0					
ANR	2610956	IdentifierDeclType	unsigned int		2610783	0					
ANR	2610957	Identifier	number		2610783	1					
ANR	2610958	IfStatement	if ( source <= length - 3 && text [ source ] >= '0' && text [ source ] <= '3' && isodigit ( text [ source + 1 ] ) && isodigit ( text [ source + 2 ] ) )		2610783	1					
ANR	2610959	Condition	source <= length - 3 && text [ source ] >= '0' && text [ source ] <= '3' && isodigit ( text [ source + 1 ] ) && isodigit ( text [ source + 2 ] )	171:12:4889:5028	2610783	0	True				
ANR	2610960	AndExpression	source <= length - 3 && text [ source ] >= '0' && text [ source ] <= '3' && isodigit ( text [ source + 1 ] ) && isodigit ( text [ source + 2 ] )		2610783	0		&&			
ANR	2610961	RelationalExpression	source <= length - 3		2610783	0		<=			
ANR	2610962	Identifier	source		2610783	0					
ANR	2610963	AdditiveExpression	length - 3		2610783	1		-			
ANR	2610964	Identifier	length		2610783	0					
ANR	2610965	PrimaryExpression	3		2610783	1					
ANR	2610966	AndExpression	text [ source ] >= '0' && text [ source ] <= '3' && isodigit ( text [ source + 1 ] ) && isodigit ( text [ source + 2 ] )		2610783	1		&&			
ANR	2610967	RelationalExpression	text [ source ] >= '0'		2610783	0		>=			
ANR	2610968	ArrayIndexing	text [ source ]		2610783	0					
ANR	2610969	Identifier	text		2610783	0					
ANR	2610970	Identifier	source		2610783	1					
ANR	2610971	PrimaryExpression	'0'		2610783	1					
ANR	2610972	AndExpression	text [ source ] <= '3' && isodigit ( text [ source + 1 ] ) && isodigit ( text [ source + 2 ] )		2610783	1		&&			
ANR	2610973	RelationalExpression	text [ source ] <= '3'		2610783	0		<=			
ANR	2610974	ArrayIndexing	text [ source ]		2610783	0					
ANR	2610975	Identifier	text		2610783	0					
ANR	2610976	Identifier	source		2610783	1					
ANR	2610977	PrimaryExpression	'3'		2610783	1					
ANR	2610978	AndExpression	isodigit ( text [ source + 1 ] ) && isodigit ( text [ source + 2 ] )		2610783	1		&&			
ANR	2610979	CallExpression	isodigit ( text [ source + 1 ] )		2610783	0					
ANR	2610980	Callee	isodigit		2610783	0					
ANR	2610981	Identifier	isodigit		2610783	0					
ANR	2610982	ArgumentList	text [ source + 1 ]		2610783	1					
ANR	2610983	Argument	text [ source + 1 ]		2610783	0					
ANR	2610984	ArrayIndexing	text [ source + 1 ]		2610783	0					
ANR	2610985	Identifier	text		2610783	0					
ANR	2610986	AdditiveExpression	source + 1		2610783	1		+			
ANR	2610987	Identifier	source		2610783	0					
ANR	2610988	PrimaryExpression	1		2610783	1					
ANR	2610989	CallExpression	isodigit ( text [ source + 2 ] )		2610783	1					
ANR	2610990	Callee	isodigit		2610783	0					
ANR	2610991	Identifier	isodigit		2610783	0					
ANR	2610992	ArgumentList	text [ source + 2 ]		2610783	1					
ANR	2610993	Argument	text [ source + 2 ]		2610783	0					
ANR	2610994	ArrayIndexing	text [ source + 2 ]		2610783	0					
ANR	2610995	Identifier	text		2610783	0					
ANR	2610996	AdditiveExpression	source + 2		2610783	1		+			
ANR	2610997	Identifier	source		2610783	0					
ANR	2610998	PrimaryExpression	2		2610783	1					
ANR	2610999	CompoundStatement		44:6:1309:1322	2610783	1					
ANR	2611000	IdentifierDeclStatement	char octal [ 4 ] ;	177:6:5076:5089	2610783	0	True				
ANR	2611001	IdentifierDecl	octal [ 4 ]		2610783	0					
ANR	2611002	IdentifierDeclType	char [ 4 ]		2610783	0					
ANR	2611003	Identifier	octal		2610783	1					
ANR	2611004	PrimaryExpression	4		2610783	2					
ANR	2611005	ExpressionStatement	octal [ 0 ] = text [ source ]	178:6:5097:5120	2610783	1	True				
ANR	2611006	AssignmentExpression	octal [ 0 ] = text [ source ]		2610783	0		=			
ANR	2611007	ArrayIndexing	octal [ 0 ]		2610783	0					
ANR	2611008	Identifier	octal		2610783	0					
ANR	2611009	PrimaryExpression	0		2610783	1					
ANR	2611010	ArrayIndexing	text [ source ]		2610783	1					
ANR	2611011	Identifier	text		2610783	0					
ANR	2611012	Identifier	source		2610783	1					
ANR	2611013	ExpressionStatement	octal [ 1 ] = text [ source + 1 ]	179:6:5128:5153	2610783	2	True				
ANR	2611014	AssignmentExpression	octal [ 1 ] = text [ source + 1 ]		2610783	0		=			
ANR	2611015	ArrayIndexing	octal [ 1 ]		2610783	0					
ANR	2611016	Identifier	octal		2610783	0					
ANR	2611017	PrimaryExpression	1		2610783	1					
ANR	2611018	ArrayIndexing	text [ source + 1 ]		2610783	1					
ANR	2611019	Identifier	text		2610783	0					
ANR	2611020	AdditiveExpression	source + 1		2610783	1		+			
ANR	2611021	Identifier	source		2610783	0					
ANR	2611022	PrimaryExpression	1		2610783	1					
ANR	2611023	ExpressionStatement	octal [ 2 ] = text [ source + 2 ]	180:6:5161:5186	2610783	3	True				
ANR	2611024	AssignmentExpression	octal [ 2 ] = text [ source + 2 ]		2610783	0		=			
ANR	2611025	ArrayIndexing	octal [ 2 ]		2610783	0					
ANR	2611026	Identifier	octal		2610783	0					
ANR	2611027	PrimaryExpression	2		2610783	1					
ANR	2611028	ArrayIndexing	text [ source + 2 ]		2610783	1					
ANR	2611029	Identifier	text		2610783	0					
ANR	2611030	AdditiveExpression	source + 2		2610783	1		+			
ANR	2611031	Identifier	source		2610783	0					
ANR	2611032	PrimaryExpression	2		2610783	1					
ANR	2611033	ExpressionStatement	octal [ 3 ] = 0	181:6:5194:5206	2610783	4	True				
ANR	2611034	AssignmentExpression	octal [ 3 ] = 0		2610783	0		=			
ANR	2611035	ArrayIndexing	octal [ 3 ]		2610783	0					
ANR	2611036	Identifier	octal		2610783	0					
ANR	2611037	PrimaryExpression	3		2610783	1					
ANR	2611038	PrimaryExpression	0		2610783	1					
ANR	2611039	ExpressionStatement	"sscanf ( octal , ""%o"" , & number )"	182:6:5214:5242	2610783	5	True				
ANR	2611040	CallExpression	"sscanf ( octal , ""%o"" , & number )"		2610783	0					
ANR	2611041	Callee	sscanf		2610783	0					
ANR	2611042	Identifier	sscanf		2610783	0					
ANR	2611043	ArgumentList	octal		2610783	1					
ANR	2611044	Argument	octal		2610783	0					
ANR	2611045	Identifier	octal		2610783	0					
ANR	2611046	Argument	"""%o"""		2610783	1					
ANR	2611047	PrimaryExpression	"""%o"""		2610783	0					
ANR	2611048	Argument	& number		2610783	2					
ANR	2611049	UnaryOperationExpression	& number		2610783	0					
ANR	2611050	UnaryOperator	&		2610783	0					
ANR	2611051	Identifier	number		2610783	1					
ANR	2611052	ExpressionStatement	new_char = number	183:6:5250:5267	2610783	6	True				
ANR	2611053	AssignmentExpression	new_char = number		2610783	0		=			
ANR	2611054	Identifier	new_char		2610783	0					
ANR	2611055	Identifier	number		2610783	1					
ANR	2611056	ExpressionStatement	source += 2	184:6:5275:5286	2610783	7	True				
ANR	2611057	AssignmentExpression	source += 2		2610783	0		+=			
ANR	2611058	Identifier	source		2610783	0					
ANR	2611059	PrimaryExpression	2		2610783	1					
ANR	2611060	ElseStatement	else		2610783	0					
ANR	2611061	IfStatement	if ( source <= length - 2 && isodigit ( text [ source + 1 ] ) )		2610783	0					
ANR	2611062	Condition	source <= length - 2 && isodigit ( text [ source + 1 ] )	185:19:5346:5402	2610783	0	True				
ANR	2611063	AndExpression	source <= length - 2 && isodigit ( text [ source + 1 ] )		2610783	0		&&			
ANR	2611064	RelationalExpression	source <= length - 2		2610783	0		<=			
ANR	2611065	Identifier	source		2610783	0					
ANR	2611066	AdditiveExpression	length - 2		2610783	1		-			
ANR	2611067	Identifier	length		2610783	0					
ANR	2611068	PrimaryExpression	2		2610783	1					
ANR	2611069	CallExpression	isodigit ( text [ source + 1 ] )		2610783	1					
ANR	2611070	Callee	isodigit		2610783	0					
ANR	2611071	Identifier	isodigit		2610783	0					
ANR	2611072	ArgumentList	text [ source + 1 ]		2610783	1					
ANR	2611073	Argument	text [ source + 1 ]		2610783	0					
ANR	2611074	ArrayIndexing	text [ source + 1 ]		2610783	0					
ANR	2611075	Identifier	text		2610783	0					
ANR	2611076	AdditiveExpression	source + 1		2610783	1		+			
ANR	2611077	Identifier	source		2610783	0					
ANR	2611078	PrimaryExpression	1		2610783	1					
ANR	2611079	CompoundStatement		56:6:1677:1690	2610783	1					
ANR	2611080	IdentifierDeclStatement	char octal [ 3 ] ;	189:6:5444:5457	2610783	0	True				
ANR	2611081	IdentifierDecl	octal [ 3 ]		2610783	0					
ANR	2611082	IdentifierDeclType	char [ 3 ]		2610783	0					
ANR	2611083	Identifier	octal		2610783	1					
ANR	2611084	PrimaryExpression	3		2610783	2					
ANR	2611085	ExpressionStatement	octal [ 0 ] = text [ source ]	190:6:5465:5488	2610783	1	True				
ANR	2611086	AssignmentExpression	octal [ 0 ] = text [ source ]		2610783	0		=			
ANR	2611087	ArrayIndexing	octal [ 0 ]		2610783	0					
ANR	2611088	Identifier	octal		2610783	0					
ANR	2611089	PrimaryExpression	0		2610783	1					
ANR	2611090	ArrayIndexing	text [ source ]		2610783	1					
ANR	2611091	Identifier	text		2610783	0					
ANR	2611092	Identifier	source		2610783	1					
ANR	2611093	ExpressionStatement	octal [ 1 ] = text [ source + 1 ]	191:6:5496:5521	2610783	2	True				
ANR	2611094	AssignmentExpression	octal [ 1 ] = text [ source + 1 ]		2610783	0		=			
ANR	2611095	ArrayIndexing	octal [ 1 ]		2610783	0					
ANR	2611096	Identifier	octal		2610783	0					
ANR	2611097	PrimaryExpression	1		2610783	1					
ANR	2611098	ArrayIndexing	text [ source + 1 ]		2610783	1					
ANR	2611099	Identifier	text		2610783	0					
ANR	2611100	AdditiveExpression	source + 1		2610783	1		+			
ANR	2611101	Identifier	source		2610783	0					
ANR	2611102	PrimaryExpression	1		2610783	1					
ANR	2611103	ExpressionStatement	octal [ 2 ] = 0	192:6:5529:5541	2610783	3	True				
ANR	2611104	AssignmentExpression	octal [ 2 ] = 0		2610783	0		=			
ANR	2611105	ArrayIndexing	octal [ 2 ]		2610783	0					
ANR	2611106	Identifier	octal		2610783	0					
ANR	2611107	PrimaryExpression	2		2610783	1					
ANR	2611108	PrimaryExpression	0		2610783	1					
ANR	2611109	ExpressionStatement	"sscanf ( octal , ""%o"" , & number )"	193:6:5549:5577	2610783	4	True				
ANR	2611110	CallExpression	"sscanf ( octal , ""%o"" , & number )"		2610783	0					
ANR	2611111	Callee	sscanf		2610783	0					
ANR	2611112	Identifier	sscanf		2610783	0					
ANR	2611113	ArgumentList	octal		2610783	1					
ANR	2611114	Argument	octal		2610783	0					
ANR	2611115	Identifier	octal		2610783	0					
ANR	2611116	Argument	"""%o"""		2610783	1					
ANR	2611117	PrimaryExpression	"""%o"""		2610783	0					
ANR	2611118	Argument	& number		2610783	2					
ANR	2611119	UnaryOperationExpression	& number		2610783	0					
ANR	2611120	UnaryOperator	&		2610783	0					
ANR	2611121	Identifier	number		2610783	1					
ANR	2611122	ExpressionStatement	new_char = number	194:6:5585:5602	2610783	5	True				
ANR	2611123	AssignmentExpression	new_char = number		2610783	0		=			
ANR	2611124	Identifier	new_char		2610783	0					
ANR	2611125	Identifier	number		2610783	1					
ANR	2611126	ExpressionStatement	source += 1	195:6:5610:5621	2610783	6	True				
ANR	2611127	AssignmentExpression	source += 1		2610783	0		+=			
ANR	2611128	Identifier	source		2610783	0					
ANR	2611129	PrimaryExpression	1		2610783	1					
ANR	2611130	ElseStatement	else		2610783	0					
ANR	2611131	IfStatement	if ( source <= length - 1 )		2610783	0					
ANR	2611132	Condition	source <= length - 1	196:16:5673:5692	2610783	0	True				
ANR	2611133	RelationalExpression	source <= length - 1		2610783	0		<=			
ANR	2611134	Identifier	source		2610783	0					
ANR	2611135	AdditiveExpression	length - 1		2610783	1		-			
ANR	2611136	Identifier	length		2610783	0					
ANR	2611137	PrimaryExpression	1		2610783	1					
ANR	2611138	CompoundStatement		64:6:1936:1949	2610783	1					
ANR	2611139	IdentifierDeclStatement	char octal [ 2 ] ;	197:6:5703:5716	2610783	0	True				
ANR	2611140	IdentifierDecl	octal [ 2 ]		2610783	0					
ANR	2611141	IdentifierDeclType	char [ 2 ]		2610783	0					
ANR	2611142	Identifier	octal		2610783	1					
ANR	2611143	PrimaryExpression	2		2610783	2					
ANR	2611144	ExpressionStatement	octal [ 0 ] = text [ source ]	198:6:5724:5747	2610783	1	True				
ANR	2611145	AssignmentExpression	octal [ 0 ] = text [ source ]		2610783	0		=			
ANR	2611146	ArrayIndexing	octal [ 0 ]		2610783	0					
ANR	2611147	Identifier	octal		2610783	0					
ANR	2611148	PrimaryExpression	0		2610783	1					
ANR	2611149	ArrayIndexing	text [ source ]		2610783	1					
ANR	2611150	Identifier	text		2610783	0					
ANR	2611151	Identifier	source		2610783	1					
ANR	2611152	ExpressionStatement	octal [ 1 ] = 0	199:6:5755:5767	2610783	2	True				
ANR	2611153	AssignmentExpression	octal [ 1 ] = 0		2610783	0		=			
ANR	2611154	ArrayIndexing	octal [ 1 ]		2610783	0					
ANR	2611155	Identifier	octal		2610783	0					
ANR	2611156	PrimaryExpression	1		2610783	1					
ANR	2611157	PrimaryExpression	0		2610783	1					
ANR	2611158	ExpressionStatement	"sscanf ( octal , ""%o"" , & number )"	200:6:5775:5803	2610783	3	True				
ANR	2611159	CallExpression	"sscanf ( octal , ""%o"" , & number )"		2610783	0					
ANR	2611160	Callee	sscanf		2610783	0					
ANR	2611161	Identifier	sscanf		2610783	0					
ANR	2611162	ArgumentList	octal		2610783	1					
ANR	2611163	Argument	octal		2610783	0					
ANR	2611164	Identifier	octal		2610783	0					
ANR	2611165	Argument	"""%o"""		2610783	1					
ANR	2611166	PrimaryExpression	"""%o"""		2610783	0					
ANR	2611167	Argument	& number		2610783	2					
ANR	2611168	UnaryOperationExpression	& number		2610783	0					
ANR	2611169	UnaryOperator	&		2610783	0					
ANR	2611170	Identifier	number		2610783	1					
ANR	2611171	ExpressionStatement	new_char = number	201:6:5811:5828	2610783	4	True				
ANR	2611172	AssignmentExpression	new_char = number		2610783	0		=			
ANR	2611173	Identifier	new_char		2610783	0					
ANR	2611174	Identifier	number		2610783	1					
ANR	2611175	ElseStatement	else		2610783	0					
ANR	2611176	CompoundStatement		69:12:2075:2075	2610783	0					
ANR	2611177	ExpressionStatement	number = new_char = text [ source ]	203:6:5850:5882	2610783	0	True				
ANR	2611178	AssignmentExpression	number = new_char = text [ source ]		2610783	0		=			
ANR	2611179	Identifier	number		2610783	0					
ANR	2611180	AssignmentExpression	new_char = text [ source ]		2610783	1		=			
ANR	2611181	Identifier	new_char		2610783	0					
ANR	2611182	ArrayIndexing	text [ source ]		2610783	1					
ANR	2611183	Identifier	text		2610783	0					
ANR	2611184	Identifier	source		2610783	1					
ANR	2611185	IfStatement	if ( number == 0 )		2610783	2					
ANR	2611186	Condition	number == 0	205:8:5899:5909	2610783	0	True				
ANR	2611187	EqualityExpression	number == 0		2610783	0		==			
ANR	2611188	Identifier	number		2610783	0					
ANR	2611189	PrimaryExpression	0		2610783	1					
ANR	2611190	CompoundStatement		72:21:2145:2145	2610783	1					
ANR	2611191	ExpressionStatement	validStr = false	206:7:5978:5994	2610783	0	True				
ANR	2611192	AssignmentExpression	validStr = false		2610783	0		=			
ANR	2611193	Identifier	validStr		2610783	0					
ANR	2611194	Identifier	false		2610783	1					
ANR	2611195	Statement	delete	207:7:6003:6008	2610783	1	True				
ANR	2611196	Statement	[	207:14:6010:6010	2610783	2	True				
ANR	2611197	Statement	]	207:15:6011:6011	2610783	3	True				
ANR	2611198	ExpressionStatement	copy	207:17:6013:6017	2610783	4	True				
ANR	2611199	Identifier	copy		2610783	0					
ANR	2611200	ReturnStatement	return ;	208:7:6026:6032	2610783	5	True				
ANR	2611201	ElseStatement	else		2610783	0					
ANR	2611202	CompoundStatement		77:11:2285:2285	2610783	0					
ANR	2611203	ExpressionStatement	new_char = text [ source ]	211:5:6059:6082	2610783	0	True				
ANR	2611204	AssignmentExpression	new_char = text [ source ]		2610783	0		=			
ANR	2611205	Identifier	new_char		2610783	0					
ANR	2611206	ArrayIndexing	text [ source ]		2610783	1					
ANR	2611207	Identifier	text		2610783	0					
ANR	2611208	Identifier	source		2610783	1					
ANR	2611209	BreakStatement	break ;	213:4:6094:6099	2610783	35	True				
ANR	2611210	ExpressionStatement	copy [ dest ++ ] = new_char	215:3:6109:6132	2610783	3	True				
ANR	2611211	AssignmentExpression	copy [ dest ++ ] = new_char		2610783	0		=			
ANR	2611212	ArrayIndexing	copy [ dest ++ ]		2610783	0					
ANR	2611213	Identifier	copy		2610783	0					
ANR	2611214	PostIncDecOperationExpression	dest ++		2610783	1					
ANR	2611215	Identifier	dest		2610783	0					
ANR	2611216	IncDec	++		2610783	1					
ANR	2611217	Identifier	new_char		2610783	1					
ANR	2611218	ExpressionStatement	copy [ dest ] = 0	218:1:6142:6156	2610783	7	True				
ANR	2611219	AssignmentExpression	copy [ dest ] = 0		2610783	0		=			
ANR	2611220	ArrayIndexing	copy [ dest ]		2610783	0					
ANR	2611221	Identifier	copy		2610783	0					
ANR	2611222	Identifier	dest		2610783	1					
ANR	2611223	PrimaryExpression	0		2610783	1					
ANR	2611224	ExpressionStatement	text = copy	219:1:6159:6170	2610783	8	True				
ANR	2611225	AssignmentExpression	text = copy		2610783	0		=			
ANR	2611226	Identifier	text		2610783	0					
ANR	2611227	Identifier	copy		2610783	1					
ANR	2611228	Statement	delete	220:1:6173:6178	2610783	9	True				
ANR	2611229	Statement	[	220:8:6180:6180	2610783	10	True				
ANR	2611230	Statement	]	220:9:6181:6181	2610783	11	True				
ANR	2611231	ExpressionStatement	copy	220:11:6183:6187	2610783	12	True				
ANR	2611232	Identifier	copy		2610783	0					
ANR	2611233	ReturnStatement	return ;	221:1:6190:6196	2610783	13	True				
ANR	2611234	ReturnType	void		2610783	1					
ANR	2611235	Identifier	convert_escapes		2610783	2					
ANR	2611236	ParameterList	"string & text , bool & validStr"		2610783	3					
ANR	2611237	Parameter	string & text	133:21:3736:3747	2610783	0	True				
ANR	2611238	ParameterType	string &		2610783	0					
ANR	2611239	Identifier	text		2610783	1					
ANR	2611240	Parameter	bool & validStr	133:35:3750:3763	2610783	1	True				
ANR	2611241	ParameterType	bool &		2610783	0					
ANR	2611242	Identifier	validStr		2610783	1					
ANR	2611243	CFGEntryNode	ENTRY		2610783		True				
ANR	2611244	CFGExitNode	EXIT		2610783		True				
ANR	2611245	Symbol	octal		2610783						
ANR	2611246	Symbol	text . length		2610783						
ANR	2611247	Symbol	new_char		2610783						
ANR	2611248	Symbol	* dest		2610783						
ANR	2611249	Symbol	* text		2610783						
ANR	2611250	Symbol	length		2610783						
ANR	2611251	Symbol	false		2610783						
ANR	2611252	Symbol	source		2610783						
ANR	2611253	Symbol	dest		2610783						
ANR	2611254	Symbol	isodigit		2610783						
ANR	2611255	Symbol	& number		2610783						
ANR	2611256	Symbol	number		2610783						
ANR	2611257	Symbol	* copy		2610783						
ANR	2611258	Symbol	* source		2610783						
ANR	2611259	Symbol	text		2610783						
ANR	2611260	Symbol	copy		2610783						
ANR	2611261	Symbol	validStr		2610783						
ANR	2611262	Symbol	* octal		2610783						
ANR	2611263	Function	getLocalTime	224:0:6201:7036							
ANR	2611264	FunctionDef	"getLocalTime (time_t * now , struct tm * localtm)"		2611263	0					
ANR	2611265	CompoundStatement		226:0:6254:7036	2611263	0					
ANR	2611266	ExpressionStatement	"localtime_r ( now , localtm )"	229:1:6272:6299	2611263	0	True				
ANR	2611267	CallExpression	"localtime_r ( now , localtm )"		2611263	0					
ANR	2611268	Callee	localtime_r		2611263	0					
ANR	2611269	Identifier	localtime_r		2611263	0					
ANR	2611270	ArgumentList	now		2611263	1					
ANR	2611271	Argument	now		2611263	0					
ANR	2611272	Identifier	now		2611263	0					
ANR	2611273	Argument	localtm		2611263	1					
ANR	2611274	Identifier	localtm		2611263	0					
ANR	2611275	ReturnStatement	return ;	251:1:7028:7034	2611263	1	True				
ANR	2611276	ReturnType	void		2611263	1					
ANR	2611277	Identifier	getLocalTime		2611263	2					
ANR	2611278	ParameterList	"time_t * now , struct tm * localtm"		2611263	3					
ANR	2611279	Parameter	time_t * now	225:13:6220:6230	2611263	0	True				
ANR	2611280	ParameterType	time_t *		2611263	0					
ANR	2611281	Identifier	now		2611263	1					
ANR	2611282	Parameter	struct tm * localtm	225:26:6233:6250	2611263	1	True				
ANR	2611283	ParameterType	struct tm *		2611263	0					
ANR	2611284	Identifier	localtm		2611263	1					
ANR	2611285	CFGEntryNode	ENTRY		2611263		True				
ANR	2611286	CFGExitNode	EXIT		2611263		True				
ANR	2611287	Symbol	now		2611263						
ANR	2611288	Symbol	localtm		2611263						
ANR	2611289	Function	getGMTime	254:0:7039:7817							
ANR	2611290	FunctionDef	"getGMTime (time_t * now , struct tm * gtm)"		2611289	0					
ANR	2611291	CompoundStatement		256:0:7085:7817	2611289	0					
ANR	2611292	ExpressionStatement	"gmtime_r ( now , gtm )"	259:1:7103:7123	2611289	0	True				
ANR	2611293	CallExpression	"gmtime_r ( now , gtm )"		2611289	0					
ANR	2611294	Callee	gmtime_r		2611289	0					
ANR	2611295	Identifier	gmtime_r		2611289	0					
ANR	2611296	ArgumentList	now		2611289	1					
ANR	2611297	Argument	now		2611289	0					
ANR	2611298	Identifier	now		2611289	0					
ANR	2611299	Argument	gtm		2611289	1					
ANR	2611300	Identifier	gtm		2611289	0					
ANR	2611301	ReturnStatement	return ;	281:1:7809:7815	2611289	1	True				
ANR	2611302	ReturnType	void		2611289	1					
ANR	2611303	Identifier	getGMTime		2611289	2					
ANR	2611304	ParameterList	"time_t * now , struct tm * gtm"		2611289	3					
ANR	2611305	Parameter	time_t * now	255:10:7055:7065	2611289	0	True				
ANR	2611306	ParameterType	time_t *		2611289	0					
ANR	2611307	Identifier	now		2611289	1					
ANR	2611308	Parameter	struct tm * gtm	255:23:7068:7081	2611289	1	True				
ANR	2611309	ParameterType	struct tm *		2611289	0					
ANR	2611310	Identifier	gtm		2611289	1					
ANR	2611311	CFGEntryNode	ENTRY		2611289		True				
ANR	2611312	CFGExitNode	EXIT		2611289		True				
ANR	2611313	Symbol	gtm		2611289						
ANR	2611314	Symbol	now		2611289						
ANR	2611315	Function	absTimeToString	284:0:7820:8435							
ANR	2611316	FunctionDef	"absTimeToString (const abstime_t & atime , string & buffer)"		2611315	0					
ANR	2611317	CompoundStatement		285:0:7881:8435	2611315	0					
ANR	2611318	IdentifierDeclStatement	int tzsecs ;	286:4:7887:7903	2611315	0	True				
ANR	2611319	IdentifierDecl	tzsecs		2611315	0					
ANR	2611320	IdentifierDeclType	int		2611315	0					
ANR	2611321	Identifier	tzsecs		2611315	1					
ANR	2611322	IdentifierDeclStatement	time_t epoch_time ;	287:4:7909:7929	2611315	1	True				
ANR	2611323	IdentifierDecl	epoch_time		2611315	0					
ANR	2611324	IdentifierDeclType	time_t		2611315	0					
ANR	2611325	Identifier	epoch_time		2611315	1					
ANR	2611326	IdentifierDeclStatement	"char timebuf [ 32 ] , sign ;"	288:4:7935:7962	2611315	2	True				
ANR	2611327	IdentifierDecl	timebuf [ 32 ]		2611315	0					
ANR	2611328	IdentifierDeclType	char [ 32 ]		2611315	0					
ANR	2611329	Identifier	timebuf		2611315	1					
ANR	2611330	PrimaryExpression	32		2611315	2					
ANR	2611331	IdentifierDecl	sign		2611315	1					
ANR	2611332	IdentifierDeclType	char		2611315	0					
ANR	2611333	Identifier	sign		2611315	1					
ANR	2611334	IdentifierDeclStatement	struct tm tms ;	289:4:7968:7981	2611315	3	True				
ANR	2611335	IdentifierDecl	tms		2611315	0					
ANR	2611336	IdentifierDeclType	struct tm		2611315	0					
ANR	2611337	Identifier	tms		2611315	1					
ANR	2611338	ExpressionStatement	tzsecs = atime . offset	291:4:7988:8009	2611315	4	True				
ANR	2611339	AssignmentExpression	tzsecs = atime . offset		2611315	0		=			
ANR	2611340	Identifier	tzsecs		2611315	0					
ANR	2611341	MemberAccess	atime . offset		2611315	1					
ANR	2611342	Identifier	atime		2611315	0					
ANR	2611343	Identifier	offset		2611315	1					
ANR	2611344	ExpressionStatement	epoch_time = atime . secs + atime . offset	292:4:8017:8055	2611315	5	True				
ANR	2611345	AssignmentExpression	epoch_time = atime . secs + atime . offset		2611315	0		=			
ANR	2611346	Identifier	epoch_time		2611315	0					
ANR	2611347	AdditiveExpression	atime . secs + atime . offset		2611315	1		+			
ANR	2611348	MemberAccess	atime . secs		2611315	0					
ANR	2611349	Identifier	atime		2611315	0					
ANR	2611350	Identifier	secs		2611315	1					
ANR	2611351	MemberAccess	atime . offset		2611315	1					
ANR	2611352	Identifier	atime		2611315	0					
ANR	2611353	Identifier	offset		2611315	1					
ANR	2611354	IfStatement	if ( tzsecs > 0 )		2611315	6					
ANR	2611355	Condition	tzsecs > 0	293:8:8065:8074	2611315	0	True				
ANR	2611356	RelationalExpression	tzsecs > 0		2611315	0		>			
ANR	2611357	Identifier	tzsecs		2611315	0					
ANR	2611358	PrimaryExpression	0		2611315	1					
ANR	2611359	CompoundStatement		9:20:195:195	2611315	1					
ANR	2611360	ExpressionStatement	sign = '+'	294:8:8088:8098	2611315	0	True				
ANR	2611361	AssignmentExpression	sign = '+'		2611315	0		=			
ANR	2611362	Identifier	sign		2611315	0					
ANR	2611363	PrimaryExpression	'+'		2611315	1					
ANR	2611364	ElseStatement	else		2611315	0					
ANR	2611365	CompoundStatement		11:11:263:263	2611315	0					
ANR	2611366	ExpressionStatement	sign = '-'	296:8:8155:8165	2611315	0	True				
ANR	2611367	AssignmentExpression	sign = '-'		2611315	0		=			
ANR	2611368	Identifier	sign		2611315	0					
ANR	2611369	PrimaryExpression	'-'		2611315	1					
ANR	2611370	ExpressionStatement	tzsecs = - tzsecs	297:8:8175:8191	2611315	1	True				
ANR	2611371	AssignmentExpression	tzsecs = - tzsecs		2611315	0		=			
ANR	2611372	Identifier	tzsecs		2611315	0					
ANR	2611373	UnaryOperationExpression	- tzsecs		2611315	1					
ANR	2611374	UnaryOperator	-		2611315	0					
ANR	2611375	Identifier	tzsecs		2611315	1					
ANR	2611376	ExpressionStatement	"getGMTime ( & epoch_time , & tms )"	299:4:8203:8231	2611315	7	True				
ANR	2611377	CallExpression	"getGMTime ( & epoch_time , & tms )"		2611315	0					
ANR	2611378	Callee	getGMTime		2611315	0					
ANR	2611379	Identifier	getGMTime		2611315	0					
ANR	2611380	ArgumentList	& epoch_time		2611315	1					
ANR	2611381	Argument	& epoch_time		2611315	0					
ANR	2611382	UnaryOperationExpression	& epoch_time		2611315	0					
ANR	2611383	UnaryOperator	&		2611315	0					
ANR	2611384	Identifier	epoch_time		2611315	1					
ANR	2611385	Argument	& tms		2611315	1					
ANR	2611386	UnaryOperationExpression	& tms		2611315	0					
ANR	2611387	UnaryOperator	&		2611315	0					
ANR	2611388	Identifier	tms		2611315	1					
ANR	2611389	ExpressionStatement	"strftime ( timebuf , sizeof ( timebuf ) , ""%Y-%m-%dT%H:%M:%S"" , & tms )"	300:4:8237:8298	2611315	8	True				
ANR	2611390	CallExpression	"strftime ( timebuf , sizeof ( timebuf ) , ""%Y-%m-%dT%H:%M:%S"" , & tms )"		2611315	0					
ANR	2611391	Callee	strftime		2611315	0					
ANR	2611392	Identifier	strftime		2611315	0					
ANR	2611393	ArgumentList	timebuf		2611315	1					
ANR	2611394	Argument	timebuf		2611315	0					
ANR	2611395	Identifier	timebuf		2611315	0					
ANR	2611396	Argument	sizeof ( timebuf )		2611315	1					
ANR	2611397	SizeofExpression	sizeof ( timebuf )		2611315	0					
ANR	2611398	Sizeof	sizeof		2611315	0					
ANR	2611399	SizeofOperand	timebuf		2611315	1					
ANR	2611400	Argument	"""%Y-%m-%dT%H:%M:%S"""		2611315	2					
ANR	2611401	PrimaryExpression	"""%Y-%m-%dT%H:%M:%S"""		2611315	0					
ANR	2611402	Argument	& tms		2611315	3					
ANR	2611403	UnaryOperationExpression	& tms		2611315	0					
ANR	2611404	UnaryOperator	&		2611315	0					
ANR	2611405	Identifier	tms		2611315	1					
ANR	2611406	ExpressionStatement	buffer += timebuf	301:4:8304:8321	2611315	9	True				
ANR	2611407	AssignmentExpression	buffer += timebuf		2611315	0		+=			
ANR	2611408	Identifier	buffer		2611315	0					
ANR	2611409	Identifier	timebuf		2611315	1					
ANR	2611410	ExpressionStatement	"sprintf ( timebuf , ""%c%02d%02d"" , sign , tzsecs / 3600 , ( tzsecs / 60 ) % 60 )"	302:4:8327:8398	2611315	10	True				
ANR	2611411	CallExpression	"sprintf ( timebuf , ""%c%02d%02d"" , sign , tzsecs / 3600 , ( tzsecs / 60 ) % 60 )"		2611315	0					
ANR	2611412	Callee	sprintf		2611315	0					
ANR	2611413	Identifier	sprintf		2611315	0					
ANR	2611414	ArgumentList	timebuf		2611315	1					
ANR	2611415	Argument	timebuf		2611315	0					
ANR	2611416	Identifier	timebuf		2611315	0					
ANR	2611417	Argument	"""%c%02d%02d"""		2611315	1					
ANR	2611418	PrimaryExpression	"""%c%02d%02d"""		2611315	0					
ANR	2611419	Argument	sign		2611315	2					
ANR	2611420	Identifier	sign		2611315	0					
ANR	2611421	Argument	tzsecs / 3600		2611315	3					
ANR	2611422	MultiplicativeExpression	tzsecs / 3600		2611315	0		/			
ANR	2611423	Identifier	tzsecs		2611315	0					
ANR	2611424	PrimaryExpression	3600		2611315	1					
ANR	2611425	Argument	( tzsecs / 60 ) % 60		2611315	4					
ANR	2611426	MultiplicativeExpression	( tzsecs / 60 ) % 60		2611315	0		%			
ANR	2611427	MultiplicativeExpression	tzsecs / 60		2611315	0		/			
ANR	2611428	Identifier	tzsecs		2611315	0					
ANR	2611429	PrimaryExpression	60		2611315	1					
ANR	2611430	PrimaryExpression	60		2611315	1					
ANR	2611431	ExpressionStatement	buffer += timebuf	303:4:8404:8421	2611315	11	True				
ANR	2611432	AssignmentExpression	buffer += timebuf		2611315	0		+=			
ANR	2611433	Identifier	buffer		2611315	0					
ANR	2611434	Identifier	timebuf		2611315	1					
ANR	2611435	ReturnStatement	return ;	304:4:8427:8433	2611315	12	True				
ANR	2611436	ReturnType	void		2611315	1					
ANR	2611437	Identifier	absTimeToString		2611315	2					
ANR	2611438	ParameterList	"const abstime_t & atime , string & buffer"		2611315	3					
ANR	2611439	Parameter	const abstime_t & atime	284:21:7841:7862	2611315	0	True				
ANR	2611440	ParameterType	const abstime_t &		2611315	0					
ANR	2611441	Identifier	atime		2611315	1					
ANR	2611442	Parameter	string & buffer	284:45:7865:7878	2611315	1	True				
ANR	2611443	ParameterType	string &		2611315	0					
ANR	2611444	Identifier	buffer		2611315	1					
ANR	2611445	CFGEntryNode	ENTRY		2611315		True				
ANR	2611446	CFGExitNode	EXIT		2611315		True				
ANR	2611447	Symbol	atime		2611315						
ANR	2611448	Symbol	atime . offset		2611315						
ANR	2611449	Symbol	tzsecs		2611315						
ANR	2611450	Symbol	& tms		2611315						
ANR	2611451	Symbol	sign		2611315						
ANR	2611452	Symbol	timebuf		2611315						
ANR	2611453	Symbol	buffer		2611315						
ANR	2611454	Symbol	tms		2611315						
ANR	2611455	Symbol	epoch_time		2611315						
ANR	2611456	Symbol	& epoch_time		2611315						
ANR	2611457	Symbol	atime . secs		2611315						
ANR	2611458	Function	relTimeToString	307:0:8438:9897							
ANR	2611459	FunctionDef	"relTimeToString (double rsecs , string & buffer)"		2611458	0					
ANR	2611460	CompoundStatement		308:0:8489:9897	2611458	0					
ANR	2611461	IdentifierDeclStatement	double fractional_seconds ;	309:4:8495:8521	2611458	0	True				
ANR	2611462	IdentifierDecl	fractional_seconds		2611458	0					
ANR	2611463	IdentifierDeclType	double		2611458	0					
ANR	2611464	Identifier	fractional_seconds		2611458	1					
ANR	2611465	IdentifierDeclStatement	"int days , hrs , mins ;"	310:4:8527:8550	2611458	1	True				
ANR	2611466	IdentifierDecl	days		2611458	0					
ANR	2611467	IdentifierDeclType	int		2611458	0					
ANR	2611468	Identifier	days		2611458	1					
ANR	2611469	IdentifierDecl	hrs		2611458	1					
ANR	2611470	IdentifierDeclType	int		2611458	0					
ANR	2611471	Identifier	hrs		2611458	1					
ANR	2611472	IdentifierDecl	mins		2611458	2					
ANR	2611473	IdentifierDeclType	int		2611458	0					
ANR	2611474	Identifier	mins		2611458	1					
ANR	2611475	IdentifierDeclStatement	double secs ;	311:4:8556:8568	2611458	2	True				
ANR	2611476	IdentifierDecl	secs		2611458	0					
ANR	2611477	IdentifierDeclType	double		2611458	0					
ANR	2611478	Identifier	secs		2611458	1					
ANR	2611479	IdentifierDeclStatement	char timebuf [ 128 ] ;	312:4:8574:8594	2611458	3	True				
ANR	2611480	IdentifierDecl	timebuf [ 128 ]		2611458	0					
ANR	2611481	IdentifierDeclType	char [ 128 ]		2611458	0					
ANR	2611482	Identifier	timebuf		2611458	1					
ANR	2611483	PrimaryExpression	128		2611458	2					
ANR	2611484	IfStatement	if ( rsecs < 0 )		2611458	4					
ANR	2611485	Condition	rsecs < 0	314:8:8608:8616	2611458	0	True				
ANR	2611486	RelationalExpression	rsecs < 0		2611458	0		<			
ANR	2611487	Identifier	rsecs		2611458	0					
ANR	2611488	PrimaryExpression	0		2611458	1					
ANR	2611489	CompoundStatement		7:20:130:130	2611458	1					
ANR	2611490	ExpressionStatement	"buffer += ""-"""	315:8:8630:8643	2611458	0	True				
ANR	2611491	AssignmentExpression	"buffer += ""-"""		2611458	0		+=			
ANR	2611492	Identifier	buffer		2611458	0					
ANR	2611493	PrimaryExpression	"""-"""		2611458	1					
ANR	2611494	ExpressionStatement	rsecs = - rsecs	316:8:8653:8667	2611458	1	True				
ANR	2611495	AssignmentExpression	rsecs = - rsecs		2611458	0		=			
ANR	2611496	Identifier	rsecs		2611458	0					
ANR	2611497	UnaryOperationExpression	- rsecs		2611458	1					
ANR	2611498	UnaryOperator	-		2611458	0					
ANR	2611499	Identifier	rsecs		2611458	1					
ANR	2611500	ExpressionStatement	fractional_seconds = rsecs - floor ( rsecs )	318:4:8679:8720	2611458	5	True				
ANR	2611501	AssignmentExpression	fractional_seconds = rsecs - floor ( rsecs )		2611458	0		=			
ANR	2611502	Identifier	fractional_seconds		2611458	0					
ANR	2611503	AdditiveExpression	rsecs - floor ( rsecs )		2611458	1		-			
ANR	2611504	Identifier	rsecs		2611458	0					
ANR	2611505	CallExpression	floor ( rsecs )		2611458	1					
ANR	2611506	Callee	floor		2611458	0					
ANR	2611507	Identifier	floor		2611458	0					
ANR	2611508	ArgumentList	rsecs		2611458	1					
ANR	2611509	Argument	rsecs		2611458	0					
ANR	2611510	Identifier	rsecs		2611458	0					
ANR	2611511	ExpressionStatement	days = ( int ) rsecs	320:4:8727:8745	2611458	6	True				
ANR	2611512	AssignmentExpression	days = ( int ) rsecs		2611458	0		=			
ANR	2611513	Identifier	days		2611458	0					
ANR	2611514	CastExpression	( int ) rsecs		2611458	1					
ANR	2611515	CastTarget	int		2611458	0					
ANR	2611516	Identifier	rsecs		2611458	1					
ANR	2611517	ExpressionStatement	hrs = days % 86400	321:4:8751:8770	2611458	7	True				
ANR	2611518	AssignmentExpression	hrs = days % 86400		2611458	0		=			
ANR	2611519	Identifier	hrs		2611458	0					
ANR	2611520	MultiplicativeExpression	days % 86400		2611458	1		%			
ANR	2611521	Identifier	days		2611458	0					
ANR	2611522	PrimaryExpression	86400		2611458	1					
ANR	2611523	ExpressionStatement	mins = hrs % 3600	322:4:8776:8794	2611458	8	True				
ANR	2611524	AssignmentExpression	mins = hrs % 3600		2611458	0		=			
ANR	2611525	Identifier	mins		2611458	0					
ANR	2611526	MultiplicativeExpression	hrs % 3600		2611458	1		%			
ANR	2611527	Identifier	hrs		2611458	0					
ANR	2611528	PrimaryExpression	3600		2611458	1					
ANR	2611529	ExpressionStatement	secs = ( mins % 60 ) + fractional_seconds	323:4:8800:8839	2611458	9	True				
ANR	2611530	AssignmentExpression	secs = ( mins % 60 ) + fractional_seconds		2611458	0		=			
ANR	2611531	Identifier	secs		2611458	0					
ANR	2611532	AdditiveExpression	( mins % 60 ) + fractional_seconds		2611458	1		+			
ANR	2611533	MultiplicativeExpression	mins % 60		2611458	0		%			
ANR	2611534	Identifier	mins		2611458	0					
ANR	2611535	PrimaryExpression	60		2611458	1					
ANR	2611536	Identifier	fractional_seconds		2611458	1					
ANR	2611537	ExpressionStatement	days = days / 86400	324:4:8845:8864	2611458	10	True				
ANR	2611538	AssignmentExpression	days = days / 86400		2611458	0		=			
ANR	2611539	Identifier	days		2611458	0					
ANR	2611540	MultiplicativeExpression	days / 86400		2611458	1		/			
ANR	2611541	Identifier	days		2611458	0					
ANR	2611542	PrimaryExpression	86400		2611458	1					
ANR	2611543	ExpressionStatement	hrs = hrs / 3600	325:4:8870:8888	2611458	11	True				
ANR	2611544	AssignmentExpression	hrs = hrs / 3600		2611458	0		=			
ANR	2611545	Identifier	hrs		2611458	0					
ANR	2611546	MultiplicativeExpression	hrs / 3600		2611458	1		/			
ANR	2611547	Identifier	hrs		2611458	0					
ANR	2611548	PrimaryExpression	3600		2611458	1					
ANR	2611549	ExpressionStatement	mins = mins / 60	326:4:8894:8910	2611458	12	True				
ANR	2611550	AssignmentExpression	mins = mins / 60		2611458	0		=			
ANR	2611551	Identifier	mins		2611458	0					
ANR	2611552	MultiplicativeExpression	mins / 60		2611458	1		/			
ANR	2611553	Identifier	mins		2611458	0					
ANR	2611554	PrimaryExpression	60		2611458	1					
ANR	2611555	IfStatement	if ( days )		2611458	13					
ANR	2611556	Condition	days	328:8:8925:8928	2611458	0	True				
ANR	2611557	Identifier	days		2611458	0					
ANR	2611558	CompoundStatement		21:14:441:441	2611458	1					
ANR	2611559	IfStatement	if ( fractional_seconds == 0 )		2611458	0					
ANR	2611560	Condition	fractional_seconds == 0	329:12:8945:8967	2611458	0	True				
ANR	2611561	EqualityExpression	fractional_seconds == 0		2611458	0		==			
ANR	2611562	Identifier	fractional_seconds		2611458	0					
ANR	2611563	PrimaryExpression	0		2611458	1					
ANR	2611564	CompoundStatement		22:37:480:480	2611458	1					
ANR	2611565	ExpressionStatement	"sprintf ( timebuf , ""%d+%02d:%02d:%02d"" , days , hrs , mins , ( int ) secs )"	330:12:8984:9050	2611458	0	True				
ANR	2611566	CallExpression	"sprintf ( timebuf , ""%d+%02d:%02d:%02d"" , days , hrs , mins , ( int ) secs )"		2611458	0					
ANR	2611567	Callee	sprintf		2611458	0					
ANR	2611568	Identifier	sprintf		2611458	0					
ANR	2611569	ArgumentList	timebuf		2611458	1					
ANR	2611570	Argument	timebuf		2611458	0					
ANR	2611571	Identifier	timebuf		2611458	0					
ANR	2611572	Argument	"""%d+%02d:%02d:%02d"""		2611458	1					
ANR	2611573	PrimaryExpression	"""%d+%02d:%02d:%02d"""		2611458	0					
ANR	2611574	Argument	days		2611458	2					
ANR	2611575	Identifier	days		2611458	0					
ANR	2611576	Argument	hrs		2611458	3					
ANR	2611577	Identifier	hrs		2611458	0					
ANR	2611578	Argument	mins		2611458	4					
ANR	2611579	Identifier	mins		2611458	0					
ANR	2611580	Argument	( int ) secs		2611458	5					
ANR	2611581	CastExpression	( int ) secs		2611458	0					
ANR	2611582	CastTarget	int		2611458	0					
ANR	2611583	Identifier	secs		2611458	1					
ANR	2611584	ElseStatement	else		2611458	0					
ANR	2611585	CompoundStatement		24:15:577:577	2611458	0					
ANR	2611586	ExpressionStatement	"sprintf ( timebuf , ""%d+%02d:%02d:%02g"" , days , hrs , mins , secs )"	332:12:9081:9141	2611458	0	True				
ANR	2611587	CallExpression	"sprintf ( timebuf , ""%d+%02d:%02d:%02g"" , days , hrs , mins , secs )"		2611458	0					
ANR	2611588	Callee	sprintf		2611458	0					
ANR	2611589	Identifier	sprintf		2611458	0					
ANR	2611590	ArgumentList	timebuf		2611458	1					
ANR	2611591	Argument	timebuf		2611458	0					
ANR	2611592	Identifier	timebuf		2611458	0					
ANR	2611593	Argument	"""%d+%02d:%02d:%02g"""		2611458	1					
ANR	2611594	PrimaryExpression	"""%d+%02d:%02d:%02g"""		2611458	0					
ANR	2611595	Argument	days		2611458	2					
ANR	2611596	Identifier	days		2611458	0					
ANR	2611597	Argument	hrs		2611458	3					
ANR	2611598	Identifier	hrs		2611458	0					
ANR	2611599	Argument	mins		2611458	4					
ANR	2611600	Identifier	mins		2611458	0					
ANR	2611601	Argument	secs		2611458	5					
ANR	2611602	Identifier	secs		2611458	0					
ANR	2611603	ExpressionStatement	buffer += timebuf	334:8:9161:9178	2611458	1	True				
ANR	2611604	AssignmentExpression	buffer += timebuf		2611458	0		+=			
ANR	2611605	Identifier	buffer		2611458	0					
ANR	2611606	Identifier	timebuf		2611458	1					
ANR	2611607	ElseStatement	else		2611458	0					
ANR	2611608	IfStatement	if ( hrs )		2611458	0					
ANR	2611609	Condition	hrs	335:15:9195:9197	2611458	0	True				
ANR	2611610	Identifier	hrs		2611458	0					
ANR	2611611	CompoundStatement		28:20:710:710	2611458	1					
ANR	2611612	IfStatement	if ( fractional_seconds == 0 )		2611458	0					
ANR	2611613	Condition	fractional_seconds == 0	336:12:9214:9236	2611458	0	True				
ANR	2611614	EqualityExpression	fractional_seconds == 0		2611458	0		==			
ANR	2611615	Identifier	fractional_seconds		2611458	0					
ANR	2611616	PrimaryExpression	0		2611458	1					
ANR	2611617	CompoundStatement		29:37:749:749	2611458	1					
ANR	2611618	ExpressionStatement	"sprintf ( timebuf , ""%02d:%02d:%02d"" , hrs , mins , ( int ) secs )"	337:12:9253:9310	2611458	0	True				
ANR	2611619	CallExpression	"sprintf ( timebuf , ""%02d:%02d:%02d"" , hrs , mins , ( int ) secs )"		2611458	0					
ANR	2611620	Callee	sprintf		2611458	0					
ANR	2611621	Identifier	sprintf		2611458	0					
ANR	2611622	ArgumentList	timebuf		2611458	1					
ANR	2611623	Argument	timebuf		2611458	0					
ANR	2611624	Identifier	timebuf		2611458	0					
ANR	2611625	Argument	"""%02d:%02d:%02d"""		2611458	1					
ANR	2611626	PrimaryExpression	"""%02d:%02d:%02d"""		2611458	0					
ANR	2611627	Argument	hrs		2611458	2					
ANR	2611628	Identifier	hrs		2611458	0					
ANR	2611629	Argument	mins		2611458	3					
ANR	2611630	Identifier	mins		2611458	0					
ANR	2611631	Argument	( int ) secs		2611458	4					
ANR	2611632	CastExpression	( int ) secs		2611458	0					
ANR	2611633	CastTarget	int		2611458	0					
ANR	2611634	Identifier	secs		2611458	1					
ANR	2611635	ElseStatement	else		2611458	0					
ANR	2611636	CompoundStatement		31:15:837:837	2611458	0					
ANR	2611637	ExpressionStatement	"sprintf ( timebuf , ""%02d:%02d:%02g"" , hrs , mins , secs )"	339:12:9341:9392	2611458	0	True				
ANR	2611638	CallExpression	"sprintf ( timebuf , ""%02d:%02d:%02g"" , hrs , mins , secs )"		2611458	0					
ANR	2611639	Callee	sprintf		2611458	0					
ANR	2611640	Identifier	sprintf		2611458	0					
ANR	2611641	ArgumentList	timebuf		2611458	1					
ANR	2611642	Argument	timebuf		2611458	0					
ANR	2611643	Identifier	timebuf		2611458	0					
ANR	2611644	Argument	"""%02d:%02d:%02g"""		2611458	1					
ANR	2611645	PrimaryExpression	"""%02d:%02d:%02g"""		2611458	0					
ANR	2611646	Argument	hrs		2611458	2					
ANR	2611647	Identifier	hrs		2611458	0					
ANR	2611648	Argument	mins		2611458	3					
ANR	2611649	Identifier	mins		2611458	0					
ANR	2611650	Argument	secs		2611458	4					
ANR	2611651	Identifier	secs		2611458	0					
ANR	2611652	ExpressionStatement	buffer += timebuf	341:8:9412:9429	2611458	1	True				
ANR	2611653	AssignmentExpression	buffer += timebuf		2611458	0		+=			
ANR	2611654	Identifier	buffer		2611458	0					
ANR	2611655	Identifier	timebuf		2611458	1					
ANR	2611656	ElseStatement	else		2611458	0					
ANR	2611657	IfStatement	if ( mins )		2611458	0					
ANR	2611658	Condition	mins	342:15:9446:9449	2611458	0	True				
ANR	2611659	Identifier	mins		2611458	0					
ANR	2611660	CompoundStatement		35:21:962:962	2611458	1					
ANR	2611661	IfStatement	if ( fractional_seconds == 0 )		2611458	0					
ANR	2611662	Condition	fractional_seconds == 0	343:12:9466:9488	2611458	0	True				
ANR	2611663	EqualityExpression	fractional_seconds == 0		2611458	0		==			
ANR	2611664	Identifier	fractional_seconds		2611458	0					
ANR	2611665	PrimaryExpression	0		2611458	1					
ANR	2611666	CompoundStatement		36:37:1001:1001	2611458	1					
ANR	2611667	ExpressionStatement	"sprintf ( timebuf , ""%02d:%02d"" , mins , ( int ) secs )"	344:12:9505:9552	2611458	0	True				
ANR	2611668	CallExpression	"sprintf ( timebuf , ""%02d:%02d"" , mins , ( int ) secs )"		2611458	0					
ANR	2611669	Callee	sprintf		2611458	0					
ANR	2611670	Identifier	sprintf		2611458	0					
ANR	2611671	ArgumentList	timebuf		2611458	1					
ANR	2611672	Argument	timebuf		2611458	0					
ANR	2611673	Identifier	timebuf		2611458	0					
ANR	2611674	Argument	"""%02d:%02d"""		2611458	1					
ANR	2611675	PrimaryExpression	"""%02d:%02d"""		2611458	0					
ANR	2611676	Argument	mins		2611458	2					
ANR	2611677	Identifier	mins		2611458	0					
ANR	2611678	Argument	( int ) secs		2611458	3					
ANR	2611679	CastExpression	( int ) secs		2611458	0					
ANR	2611680	CastTarget	int		2611458	0					
ANR	2611681	Identifier	secs		2611458	1					
ANR	2611682	ElseStatement	else		2611458	0					
ANR	2611683	CompoundStatement		38:15:1079:1079	2611458	0					
ANR	2611684	ExpressionStatement	"sprintf ( timebuf , ""%02d:%02g"" , mins , secs )"	346:12:9583:9624	2611458	0	True				
ANR	2611685	CallExpression	"sprintf ( timebuf , ""%02d:%02g"" , mins , secs )"		2611458	0					
ANR	2611686	Callee	sprintf		2611458	0					
ANR	2611687	Identifier	sprintf		2611458	0					
ANR	2611688	ArgumentList	timebuf		2611458	1					
ANR	2611689	Argument	timebuf		2611458	0					
ANR	2611690	Identifier	timebuf		2611458	0					
ANR	2611691	Argument	"""%02d:%02g"""		2611458	1					
ANR	2611692	PrimaryExpression	"""%02d:%02g"""		2611458	0					
ANR	2611693	Argument	mins		2611458	2					
ANR	2611694	Identifier	mins		2611458	0					
ANR	2611695	Argument	secs		2611458	3					
ANR	2611696	Identifier	secs		2611458	0					
ANR	2611697	ExpressionStatement	buffer += timebuf	348:8:9644:9661	2611458	1	True				
ANR	2611698	AssignmentExpression	buffer += timebuf		2611458	0		+=			
ANR	2611699	Identifier	buffer		2611458	0					
ANR	2611700	Identifier	timebuf		2611458	1					
ANR	2611701	ReturnStatement	return ;	349:8:9671:9677	2611458	2	True				
ANR	2611702	ElseStatement	else		2611458	0					
ANR	2611703	CompoundStatement		43:11:1200:1200	2611458	0					
ANR	2611704	IfStatement	if ( fractional_seconds == 0 )		2611458	0					
ANR	2611705	Condition	fractional_seconds == 0	351:12:9704:9726	2611458	0	True				
ANR	2611706	EqualityExpression	fractional_seconds == 0		2611458	0		==			
ANR	2611707	Identifier	fractional_seconds		2611458	0					
ANR	2611708	PrimaryExpression	0		2611458	1					
ANR	2611709	CompoundStatement		44:37:1239:1239	2611458	1					
ANR	2611710	ExpressionStatement	"sprintf ( timebuf , ""%02d"" , ( int ) secs )"	352:12:9743:9779	2611458	0	True				
ANR	2611711	CallExpression	"sprintf ( timebuf , ""%02d"" , ( int ) secs )"		2611458	0					
ANR	2611712	Callee	sprintf		2611458	0					
ANR	2611713	Identifier	sprintf		2611458	0					
ANR	2611714	ArgumentList	timebuf		2611458	1					
ANR	2611715	Argument	timebuf		2611458	0					
ANR	2611716	Identifier	timebuf		2611458	0					
ANR	2611717	Argument	"""%02d"""		2611458	1					
ANR	2611718	PrimaryExpression	"""%02d"""		2611458	0					
ANR	2611719	Argument	( int ) secs		2611458	2					
ANR	2611720	CastExpression	( int ) secs		2611458	0					
ANR	2611721	CastTarget	int		2611458	0					
ANR	2611722	Identifier	secs		2611458	1					
ANR	2611723	ElseStatement	else		2611458	0					
ANR	2611724	CompoundStatement		46:15:1306:1306	2611458	0					
ANR	2611725	ExpressionStatement	"sprintf ( timebuf , ""%02g"" , secs )"	354:12:9810:9840	2611458	0	True				
ANR	2611726	CallExpression	"sprintf ( timebuf , ""%02g"" , secs )"		2611458	0					
ANR	2611727	Callee	sprintf		2611458	0					
ANR	2611728	Identifier	sprintf		2611458	0					
ANR	2611729	ArgumentList	timebuf		2611458	1					
ANR	2611730	Argument	timebuf		2611458	0					
ANR	2611731	Identifier	timebuf		2611458	0					
ANR	2611732	Argument	"""%02g"""		2611458	1					
ANR	2611733	PrimaryExpression	"""%02g"""		2611458	0					
ANR	2611734	Argument	secs		2611458	2					
ANR	2611735	Identifier	secs		2611458	0					
ANR	2611736	ExpressionStatement	buffer += timebuf	356:8:9860:9877	2611458	1	True				
ANR	2611737	AssignmentExpression	buffer += timebuf		2611458	0		+=			
ANR	2611738	Identifier	buffer		2611458	0					
ANR	2611739	Identifier	timebuf		2611458	1					
ANR	2611740	ReturnStatement	return ;	358:4:9889:9895	2611458	14	True				
ANR	2611741	ReturnType	void		2611458	1					
ANR	2611742	Identifier	relTimeToString		2611458	2					
ANR	2611743	ParameterList	"double rsecs , string & buffer"		2611458	3					
ANR	2611744	Parameter	double rsecs	307:21:8459:8470	2611458	0	True				
ANR	2611745	ParameterType	double		2611458	0					
ANR	2611746	Identifier	rsecs		2611458	1					
ANR	2611747	Parameter	string & buffer	307:35:8473:8486	2611458	1	True				
ANR	2611748	ParameterType	string &		2611458	0					
ANR	2611749	Identifier	buffer		2611458	1					
ANR	2611750	CFGEntryNode	ENTRY		2611458		True				
ANR	2611751	CFGExitNode	EXIT		2611458		True				
ANR	2611752	Symbol	fractional_seconds		2611458						
ANR	2611753	Symbol	mins		2611458						
ANR	2611754	Symbol	secs		2611458						
ANR	2611755	Symbol	rsecs		2611458						
ANR	2611756	Symbol	hrs		2611458						
ANR	2611757	Symbol	days		2611458						
ANR	2611758	Symbol	timebuf		2611458						
ANR	2611759	Symbol	buffer		2611458						
ANR	2611760	Symbol	floor		2611458						
ANR	2611761	Function	day_numbers	361:0:9900:10166							
ANR	2611762	FunctionDef	"day_numbers (int year , int month , int day , int & weekday , int & yearday)"		2611761	0					
ANR	2611763	CompoundStatement		362:0:9975:10166	2611761	0					
ANR	2611764	IdentifierDeclStatement	"int fixed = fixed_from_gregorian ( year , month , day ) ;"	363:4:9981:10037	2611761	0	True				
ANR	2611765	IdentifierDecl	"fixed = fixed_from_gregorian ( year , month , day )"		2611761	0					
ANR	2611766	IdentifierDeclType	int		2611761	0					
ANR	2611767	Identifier	fixed		2611761	1					
ANR	2611768	AssignmentExpression	"fixed = fixed_from_gregorian ( year , month , day )"		2611761	2		=			
ANR	2611769	Identifier	fixed		2611761	0					
ANR	2611770	CallExpression	"fixed_from_gregorian ( year , month , day )"		2611761	1					
ANR	2611771	Callee	fixed_from_gregorian		2611761	0					
ANR	2611772	Identifier	fixed_from_gregorian		2611761	0					
ANR	2611773	ArgumentList	year		2611761	1					
ANR	2611774	Argument	year		2611761	0					
ANR	2611775	Identifier	year		2611761	0					
ANR	2611776	Argument	month		2611761	1					
ANR	2611777	Identifier	month		2611761	0					
ANR	2611778	Argument	day		2611761	2					
ANR	2611779	Identifier	day		2611761	0					
ANR	2611780	IdentifierDeclStatement	"int jan1_fixed = fixed_from_gregorian ( year , 1 , 1 ) ;"	364:4:10043:10093	2611761	1	True				
ANR	2611781	IdentifierDecl	"jan1_fixed = fixed_from_gregorian ( year , 1 , 1 )"		2611761	0					
ANR	2611782	IdentifierDeclType	int		2611761	0					
ANR	2611783	Identifier	jan1_fixed		2611761	1					
ANR	2611784	AssignmentExpression	"jan1_fixed = fixed_from_gregorian ( year , 1 , 1 )"		2611761	2		=			
ANR	2611785	Identifier	jan1_fixed		2611761	0					
ANR	2611786	CallExpression	"fixed_from_gregorian ( year , 1 , 1 )"		2611761	1					
ANR	2611787	Callee	fixed_from_gregorian		2611761	0					
ANR	2611788	Identifier	fixed_from_gregorian		2611761	0					
ANR	2611789	ArgumentList	year		2611761	1					
ANR	2611790	Argument	year		2611761	0					
ANR	2611791	Identifier	year		2611761	0					
ANR	2611792	Argument	1		2611761	1					
ANR	2611793	PrimaryExpression	1		2611761	0					
ANR	2611794	Argument	1		2611761	2					
ANR	2611795	PrimaryExpression	1		2611761	0					
ANR	2611796	ExpressionStatement	weekday = fixed % 7	365:4:10099:10118	2611761	2	True				
ANR	2611797	AssignmentExpression	weekday = fixed % 7		2611761	0		=			
ANR	2611798	Identifier	weekday		2611761	0					
ANR	2611799	MultiplicativeExpression	fixed % 7		2611761	1		%			
ANR	2611800	Identifier	fixed		2611761	0					
ANR	2611801	PrimaryExpression	7		2611761	1					
ANR	2611802	ExpressionStatement	yearday = fixed - jan1_fixed	366:4:10124:10152	2611761	3	True				
ANR	2611803	AssignmentExpression	yearday = fixed - jan1_fixed		2611761	0		=			
ANR	2611804	Identifier	yearday		2611761	0					
ANR	2611805	AdditiveExpression	fixed - jan1_fixed		2611761	1		-			
ANR	2611806	Identifier	fixed		2611761	0					
ANR	2611807	Identifier	jan1_fixed		2611761	1					
ANR	2611808	ReturnStatement	return ;	367:4:10158:10164	2611761	4	True				
ANR	2611809	ReturnType	void		2611761	1					
ANR	2611810	Identifier	day_numbers		2611761	2					
ANR	2611811	ParameterList	"int year , int month , int day , int & weekday , int & yearday"		2611761	3					
ANR	2611812	Parameter	int year	361:17:9917:9924	2611761	0	True				
ANR	2611813	ParameterType	int		2611761	0					
ANR	2611814	Identifier	year		2611761	1					
ANR	2611815	Parameter	int month	361:27:9927:9935	2611761	1	True				
ANR	2611816	ParameterType	int		2611761	0					
ANR	2611817	Identifier	month		2611761	1					
ANR	2611818	Parameter	int day	361:38:9938:9944	2611761	2	True				
ANR	2611819	ParameterType	int		2611761	0					
ANR	2611820	Identifier	day		2611761	1					
ANR	2611821	Parameter	int & weekday	361:47:9947:9958	2611761	3	True				
ANR	2611822	ParameterType	int &		2611761	0					
ANR	2611823	Identifier	weekday		2611761	1					
ANR	2611824	Parameter	int & yearday	361:61:9961:9972	2611761	4	True				
ANR	2611825	ParameterType	int &		2611761	0					
ANR	2611826	Identifier	yearday		2611761	1					
ANR	2611827	CFGEntryNode	ENTRY		2611761		True				
ANR	2611828	CFGExitNode	EXIT		2611761		True				
ANR	2611829	Symbol	month		2611761						
ANR	2611830	Symbol	year		2611761						
ANR	2611831	Symbol	weekday		2611761						
ANR	2611832	Symbol	yearday		2611761						
ANR	2611833	Symbol	fixed		2611761						
ANR	2611834	Symbol	jan1_fixed		2611761						
ANR	2611835	Symbol	day		2611761						
ANR	2611836	Symbol	fixed_from_gregorian		2611761						
ANR	2611837	Function	fixed_from_gregorian	370:0:10169:10660							
ANR	2611838	FunctionDef	"fixed_from_gregorian (int year , int month , int day)"		2611837	0					
ANR	2611839	CompoundStatement		371:0:10224:10660	2611837	0					
ANR	2611840	IdentifierDeclStatement	int fixed ;	372:4:10230:10239	2611837	0	True				
ANR	2611841	IdentifierDecl	fixed		2611837	0					
ANR	2611842	IdentifierDeclType	int		2611837	0					
ANR	2611843	Identifier	fixed		2611837	1					
ANR	2611844	IdentifierDeclStatement	int month_adjustment ;	373:4:10245:10265	2611837	1	True				
ANR	2611845	IdentifierDecl	month_adjustment		2611837	0					
ANR	2611846	IdentifierDeclType	int		2611837	0					
ANR	2611847	Identifier	month_adjustment		2611837	1					
ANR	2611848	IfStatement	if ( month <= 2 )		2611837	2					
ANR	2611849	Condition	month <= 2	375:8:10276:10285	2611837	0	True				
ANR	2611850	RelationalExpression	month <= 2		2611837	0		<=			
ANR	2611851	Identifier	month		2611837	0					
ANR	2611852	PrimaryExpression	2		2611837	1					
ANR	2611853	CompoundStatement		5:20:63:63	2611837	1					
ANR	2611854	ExpressionStatement	month_adjustment = 0	376:8:10298:10318	2611837	0	True				
ANR	2611855	AssignmentExpression	month_adjustment = 0		2611837	0		=			
ANR	2611856	Identifier	month_adjustment		2611837	0					
ANR	2611857	PrimaryExpression	0		2611837	1					
ANR	2611858	ElseStatement	else		2611837	0					
ANR	2611859	IfStatement	if ( is_leap_year ( year ) )		2611837	0					
ANR	2611860	Condition	is_leap_year ( year )	377:15:10335:10352	2611837	0	True				
ANR	2611861	CallExpression	is_leap_year ( year )		2611837	0					
ANR	2611862	Callee	is_leap_year		2611837	0					
ANR	2611863	Identifier	is_leap_year		2611837	0					
ANR	2611864	ArgumentList	year		2611837	1					
ANR	2611865	Argument	year		2611837	0					
ANR	2611866	Identifier	year		2611837	0					
ANR	2611867	CompoundStatement		7:35:130:130	2611837	1					
ANR	2611868	ExpressionStatement	month_adjustment = - 1	378:8:10365:10386	2611837	0	True				
ANR	2611869	AssignmentExpression	month_adjustment = - 1		2611837	0		=			
ANR	2611870	Identifier	month_adjustment		2611837	0					
ANR	2611871	UnaryOperationExpression	- 1		2611837	1					
ANR	2611872	UnaryOperator	-		2611837	0					
ANR	2611873	PrimaryExpression	1		2611837	1					
ANR	2611874	ElseStatement	else		2611837	0					
ANR	2611875	CompoundStatement		9:11:174:174	2611837	0					
ANR	2611876	ExpressionStatement	month_adjustment = - 2	380:8:10409:10430	2611837	0	True				
ANR	2611877	AssignmentExpression	month_adjustment = - 2		2611837	0		=			
ANR	2611878	Identifier	month_adjustment		2611837	0					
ANR	2611879	UnaryOperationExpression	- 2		2611837	1					
ANR	2611880	UnaryOperator	-		2611837	0					
ANR	2611881	PrimaryExpression	2		2611837	1					
ANR	2611882	ExpressionStatement	fixed = 365 * ( year - 1 ) + ( ( year - 1 ) / 4 ) - ( ( year - 1 ) / 100 ) + ( ( year - 1 ) / 400 ) + ( ( 367 * month - 362 ) / 12 ) + month_adjustment + day	382:4:10442:10640	2611837	3	True				
ANR	2611883	AssignmentExpression	fixed = 365 * ( year - 1 ) + ( ( year - 1 ) / 4 ) - ( ( year - 1 ) / 100 ) + ( ( year - 1 ) / 400 ) + ( ( 367 * month - 362 ) / 12 ) + month_adjustment + day		2611837	0		=			
ANR	2611884	Identifier	fixed		2611837	0					
ANR	2611885	AdditiveExpression	365 * ( year - 1 ) + ( ( year - 1 ) / 4 ) - ( ( year - 1 ) / 100 ) + ( ( year - 1 ) / 400 ) + ( ( 367 * month - 362 ) / 12 ) + month_adjustment + day		2611837	1		+			
ANR	2611886	MultiplicativeExpression	365 * ( year - 1 )		2611837	0		*			
ANR	2611887	PrimaryExpression	365		2611837	0					
ANR	2611888	AdditiveExpression	year - 1		2611837	1		-			
ANR	2611889	Identifier	year		2611837	0					
ANR	2611890	PrimaryExpression	1		2611837	1					
ANR	2611891	AdditiveExpression	( ( year - 1 ) / 4 ) - ( ( year - 1 ) / 100 ) + ( ( year - 1 ) / 400 ) + ( ( 367 * month - 362 ) / 12 ) + month_adjustment + day		2611837	1		-			
ANR	2611892	MultiplicativeExpression	( year - 1 ) / 4		2611837	0		/			
ANR	2611893	AdditiveExpression	year - 1		2611837	0		-			
ANR	2611894	Identifier	year		2611837	0					
ANR	2611895	PrimaryExpression	1		2611837	1					
ANR	2611896	PrimaryExpression	4		2611837	1					
ANR	2611897	AdditiveExpression	( ( year - 1 ) / 100 ) + ( ( year - 1 ) / 400 ) + ( ( 367 * month - 362 ) / 12 ) + month_adjustment + day		2611837	1		+			
ANR	2611898	MultiplicativeExpression	( year - 1 ) / 100		2611837	0		/			
ANR	2611899	AdditiveExpression	year - 1		2611837	0		-			
ANR	2611900	Identifier	year		2611837	0					
ANR	2611901	PrimaryExpression	1		2611837	1					
ANR	2611902	PrimaryExpression	100		2611837	1					
ANR	2611903	AdditiveExpression	( ( year - 1 ) / 400 ) + ( ( 367 * month - 362 ) / 12 ) + month_adjustment + day		2611837	1		+			
ANR	2611904	MultiplicativeExpression	( year - 1 ) / 400		2611837	0		/			
ANR	2611905	AdditiveExpression	year - 1		2611837	0		-			
ANR	2611906	Identifier	year		2611837	0					
ANR	2611907	PrimaryExpression	1		2611837	1					
ANR	2611908	PrimaryExpression	400		2611837	1					
ANR	2611909	AdditiveExpression	( ( 367 * month - 362 ) / 12 ) + month_adjustment + day		2611837	1		+			
ANR	2611910	MultiplicativeExpression	( 367 * month - 362 ) / 12		2611837	0		/			
ANR	2611911	AdditiveExpression	367 * month - 362		2611837	0		-			
ANR	2611912	MultiplicativeExpression	367 * month		2611837	0		*			
ANR	2611913	PrimaryExpression	367		2611837	0					
ANR	2611914	Identifier	month		2611837	1					
ANR	2611915	PrimaryExpression	362		2611837	1					
ANR	2611916	PrimaryExpression	12		2611837	1					
ANR	2611917	AdditiveExpression	month_adjustment + day		2611837	1		+			
ANR	2611918	Identifier	month_adjustment		2611837	0					
ANR	2611919	Identifier	day		2611837	1					
ANR	2611920	ReturnStatement	return fixed ;	389:4:10646:10658	2611837	4	True				
ANR	2611921	Identifier	fixed		2611837	0					
ANR	2611922	ReturnType	int		2611837	1					
ANR	2611923	Identifier	fixed_from_gregorian		2611837	2					
ANR	2611924	ParameterList	"int year , int month , int day"		2611837	3					
ANR	2611925	Parameter	int year	370:25:10194:10201	2611837	0	True				
ANR	2611926	ParameterType	int		2611837	0					
ANR	2611927	Identifier	year		2611837	1					
ANR	2611928	Parameter	int month	370:35:10204:10212	2611837	1	True				
ANR	2611929	ParameterType	int		2611837	0					
ANR	2611930	Identifier	month		2611837	1					
ANR	2611931	Parameter	int day	370:46:10215:10221	2611837	2	True				
ANR	2611932	ParameterType	int		2611837	0					
ANR	2611933	Identifier	day		2611837	1					
ANR	2611934	CFGEntryNode	ENTRY		2611837		True				
ANR	2611935	CFGExitNode	EXIT		2611837		True				
ANR	2611936	Symbol	is_leap_year		2611837						
ANR	2611937	Symbol	month		2611837						
ANR	2611938	Symbol	year		2611837						
ANR	2611939	Symbol	month_adjustment		2611837						
ANR	2611940	Symbol	fixed		2611837						
ANR	2611941	Symbol	day		2611837						
ANR	2611942	Function	is_leap_year	392:0:10663:10961							
ANR	2611943	FunctionDef	is_leap_year (int year)		2611942	0					
ANR	2611944	CompoundStatement		393:0:10691:10961	2611942	0					
ANR	2611945	IdentifierDeclStatement	int mod4 ;	394:4:10697:10706	2611942	0	True				
ANR	2611946	IdentifierDecl	mod4		2611942	0					
ANR	2611947	IdentifierDeclType	int		2611942	0					
ANR	2611948	Identifier	mod4		2611942	1					
ANR	2611949	IdentifierDeclStatement	int mod400 ;	395:4:10712:10723	2611942	1	True				
ANR	2611950	IdentifierDecl	mod400		2611942	0					
ANR	2611951	IdentifierDeclType	int		2611942	0					
ANR	2611952	Identifier	mod400		2611942	1					
ANR	2611953	IdentifierDeclStatement	bool leap_year ;	396:4:10729:10743	2611942	2	True				
ANR	2611954	IdentifierDecl	leap_year		2611942	0					
ANR	2611955	IdentifierDeclType	bool		2611942	0					
ANR	2611956	Identifier	leap_year		2611942	1					
ANR	2611957	ExpressionStatement	mod4 = year % 4	398:4:10750:10767	2611942	3	True				
ANR	2611958	AssignmentExpression	mod4 = year % 4		2611942	0		=			
ANR	2611959	Identifier	mod4		2611942	0					
ANR	2611960	MultiplicativeExpression	year % 4		2611942	1		%			
ANR	2611961	Identifier	year		2611942	0					
ANR	2611962	PrimaryExpression	4		2611942	1					
ANR	2611963	ExpressionStatement	mod400 = year % 400	399:4:10773:10792	2611942	4	True				
ANR	2611964	AssignmentExpression	mod400 = year % 400		2611942	0		=			
ANR	2611965	Identifier	mod400		2611942	0					
ANR	2611966	MultiplicativeExpression	year % 400		2611942	1		%			
ANR	2611967	Identifier	year		2611942	0					
ANR	2611968	PrimaryExpression	400		2611942	1					
ANR	2611969	IfStatement	if ( mod4 == 0 && mod400 != 100 && mod400 != 200 && mod400 != 300 )		2611942	5					
ANR	2611970	Condition	mod4 == 0 && mod400 != 100 && mod400 != 200 && mod400 != 300	401:8:10803:10862	2611942	0	True				
ANR	2611971	AndExpression	mod4 == 0 && mod400 != 100 && mod400 != 200 && mod400 != 300		2611942	0		&&			
ANR	2611972	EqualityExpression	mod4 == 0		2611942	0		==			
ANR	2611973	Identifier	mod4		2611942	0					
ANR	2611974	PrimaryExpression	0		2611942	1					
ANR	2611975	AndExpression	mod400 != 100 && mod400 != 200 && mod400 != 300		2611942	1		&&			
ANR	2611976	EqualityExpression	mod400 != 100		2611942	0		!=			
ANR	2611977	Identifier	mod400		2611942	0					
ANR	2611978	PrimaryExpression	100		2611942	1					
ANR	2611979	AndExpression	mod400 != 200 && mod400 != 300		2611942	1		&&			
ANR	2611980	EqualityExpression	mod400 != 200		2611942	0		!=			
ANR	2611981	Identifier	mod400		2611942	0					
ANR	2611982	PrimaryExpression	200		2611942	1					
ANR	2611983	EqualityExpression	mod400 != 300		2611942	1		!=			
ANR	2611984	Identifier	mod400		2611942	0					
ANR	2611985	PrimaryExpression	300		2611942	1					
ANR	2611986	CompoundStatement		9:70:173:173	2611942	1					
ANR	2611987	ExpressionStatement	leap_year = true	402:8:10875:10891	2611942	0	True				
ANR	2611988	AssignmentExpression	leap_year = true		2611942	0		=			
ANR	2611989	Identifier	leap_year		2611942	0					
ANR	2611990	Identifier	true		2611942	1					
ANR	2611991	ElseStatement	else		2611942	0					
ANR	2611992	CompoundStatement		11:11:212:212	2611942	0					
ANR	2611993	ExpressionStatement	leap_year = false	404:8:10914:10931	2611942	0	True				
ANR	2611994	AssignmentExpression	leap_year = false		2611942	0		=			
ANR	2611995	Identifier	leap_year		2611942	0					
ANR	2611996	Identifier	false		2611942	1					
ANR	2611997	ReturnStatement	return leap_year ;	406:4:10943:10959	2611942	6	True				
ANR	2611998	Identifier	leap_year		2611942	0					
ANR	2611999	ReturnType	bool		2611942	1					
ANR	2612000	Identifier	is_leap_year		2611942	2					
ANR	2612001	ParameterList	int year		2611942	3					
ANR	2612002	Parameter	int year	392:18:10681:10688	2611942	0	True				
ANR	2612003	ParameterType	int		2611942	0					
ANR	2612004	Identifier	year		2611942	1					
ANR	2612005	CFGEntryNode	ENTRY		2611942		True				
ANR	2612006	CFGExitNode	EXIT		2611942		True				
ANR	2612007	Symbol	leap_year		2611942						
ANR	2612008	Symbol	mod4		2611942						
ANR	2612009	Symbol	year		2611942						
ANR	2612010	Symbol	mod400		2611942						
ANR	2612011	Symbol	true		2611942						
ANR	2612012	Symbol	false		2611942						
ANR	2612013	Function	classad_isinf	410:0:10977:11240							
ANR	2612014	FunctionDef	classad_isinf (double x)		2612013	0					
ANR	2612015	CompoundStatement		411:0:11006:11240	2612013	0					
ANR	2612016	IdentifierDeclStatement	int result ;	413:1:11010:11020	2612013	0	True				
ANR	2612017	IdentifierDecl	result		2612013	0					
ANR	2612018	IdentifierDeclType	int		2612013	0					
ANR	2612019	Identifier	result		2612013	1					
ANR	2612020	ExpressionStatement	result = _fpclass ( x )	414:1:11023:11043	2612013	1	True				
ANR	2612021	AssignmentExpression	result = _fpclass ( x )		2612013	0		=			
ANR	2612022	Identifier	result		2612013	0					
ANR	2612023	CallExpression	_fpclass ( x )		2612013	1					
ANR	2612024	Callee	_fpclass		2612013	0					
ANR	2612025	Identifier	_fpclass		2612013	0					
ANR	2612026	ArgumentList	x		2612013	1					
ANR	2612027	Argument	x		2612013	0					
ANR	2612028	Identifier	x		2612013	0					
ANR	2612029	IfStatement	if ( result == _FPCLASS_NINF )		2612013	2					
ANR	2612030	Condition	result == _FPCLASS_NINF	416:5:11051:11073	2612013	0	True				
ANR	2612031	EqualityExpression	result == _FPCLASS_NINF		2612013	0		==			
ANR	2612032	Identifier	result		2612013	0					
ANR	2612033	Identifier	_FPCLASS_NINF		2612013	1					
ANR	2612034	CompoundStatement		6:31:70:70	2612013	1					
ANR	2612035	ReturnStatement	return - 1 ;	418:2:11107:11116	2612013	0	True				
ANR	2612036	UnaryOperationExpression	- 1		2612013	0					
ANR	2612037	UnaryOperator	-		2612013	0					
ANR	2612038	PrimaryExpression	1		2612013	1					
ANR	2612039	ElseStatement	else		2612013	0					
ANR	2612040	IfStatement	if ( result == _FPCLASS_PINF )		2612013	0					
ANR	2612041	Condition	result == _FPCLASS_PINF	419:13:11131:11153	2612013	0	True				
ANR	2612042	EqualityExpression	result == _FPCLASS_PINF		2612013	0		==			
ANR	2612043	Identifier	result		2612013	0					
ANR	2612044	Identifier	_FPCLASS_PINF		2612013	1					
ANR	2612045	CompoundStatement		9:39:150:150	2612013	1					
ANR	2612046	ReturnStatement	return 1 ;	421:2:11187:11195	2612013	0	True				
ANR	2612047	PrimaryExpression	1		2612013	0					
ANR	2612048	ElseStatement	else		2612013	0					
ANR	2612049	CompoundStatement		12:8:198:198	2612013	0					
ANR	2612050	ReturnStatement	return 0 ;	424:2:11227:11235	2612013	0	True				
ANR	2612051	PrimaryExpression	0		2612013	0					
ANR	2612052	ReturnType	int		2612013	1					
ANR	2612053	Identifier	classad_isinf		2612013	2					
ANR	2612054	ParameterList	double x		2612013	3					
ANR	2612055	Parameter	double x	410:18:10995:11002	2612013	0	True				
ANR	2612056	ParameterType	double		2612013	0					
ANR	2612057	Identifier	x		2612013	1					
ANR	2612058	CFGEntryNode	ENTRY		2612013		True				
ANR	2612059	CFGExitNode	EXIT		2612013		True				
ANR	2612060	Symbol	result		2612013						
ANR	2612061	Symbol	_fpclass		2612013						
ANR	2612062	Symbol	_FPCLASS_NINF		2612013						
ANR	2612063	Symbol	x		2612013						
ANR	2612064	Symbol	_FPCLASS_PINF		2612013						
ANR	2612065	Function	classad_isinf	431:0:11359:11520							
ANR	2612066	FunctionDef	classad_isinf (double x)		2612065	0					
ANR	2612067	CompoundStatement		432:0:11388:11520	2612065	0					
ANR	2612068	IfStatement	if ( finite ( x ) || x != x )		2612065	0					
ANR	2612069	Condition	finite ( x ) || x != x	433:8:11399:11417	2612065	0	True				
ANR	2612070	OrExpression	finite ( x ) || x != x		2612065	0		||			
ANR	2612071	CallExpression	finite ( x )		2612065	0					
ANR	2612072	Callee	finite		2612065	0					
ANR	2612073	Identifier	finite		2612065	0					
ANR	2612074	ArgumentList	x		2612065	1					
ANR	2612075	Argument	x		2612065	0					
ANR	2612076	Identifier	x		2612065	0					
ANR	2612077	EqualityExpression	x != x		2612065	1		!=			
ANR	2612078	Identifier	x		2612065	0					
ANR	2612079	Identifier	x		2612065	1					
ANR	2612080	CompoundStatement		2:29:31:31	2612065	1					
ANR	2612081	ReturnStatement	return 0 ;	434:8:11430:11438	2612065	0	True				
ANR	2612082	PrimaryExpression	0		2612065	0					
ANR	2612083	ElseStatement	else		2612065	0					
ANR	2612084	IfStatement	if ( x > 0 )		2612065	0					
ANR	2612085	Condition	x > 0	435:15:11455:11459	2612065	0	True				
ANR	2612086	RelationalExpression	x > 0		2612065	0		>			
ANR	2612087	Identifier	x		2612065	0					
ANR	2612088	PrimaryExpression	0		2612065	1					
ANR	2612089	CompoundStatement		4:22:73:73	2612065	1					
ANR	2612090	ReturnStatement	return 1 ;	436:8:11472:11480	2612065	0	True				
ANR	2612091	PrimaryExpression	1		2612065	0					
ANR	2612092	ElseStatement	else		2612065	0					
ANR	2612093	CompoundStatement		6:11:104:104	2612065	0					
ANR	2612094	ReturnStatement	return - 1 ;	438:8:11503:11512	2612065	0	True				
ANR	2612095	UnaryOperationExpression	- 1		2612065	0					
ANR	2612096	UnaryOperator	-		2612065	0					
ANR	2612097	PrimaryExpression	1		2612065	1					
ANR	2612098	ReturnType	int		2612065	1					
ANR	2612099	Identifier	classad_isinf		2612065	2					
ANR	2612100	ParameterList	double x		2612065	3					
ANR	2612101	Parameter	double x	431:18:11377:11384	2612065	0	True				
ANR	2612102	ParameterType	double		2612065	0					
ANR	2612103	Identifier	x		2612065	1					
ANR	2612104	CFGEntryNode	ENTRY		2612065		True				
ANR	2612105	CFGExitNode	EXIT		2612065		True				
ANR	2612106	Symbol	finite		2612065						
ANR	2612107	Symbol	x		2612065						
ANR	2612108	Function	classad_isinf	442:0:11528:11687							
ANR	2612109	FunctionDef	classad_isinf (double x)		2612108	0					
ANR	2612110	CompoundStatement		443:0:11556:11687	2612108	0					
ANR	2612111	IfStatement	if ( ! isinf ( x ) || x != x )		2612108	0					
ANR	2612112	Condition	! isinf ( x ) || x != x	444:8:11566:11584	2612108	0	True				
ANR	2612113	OrExpression	! isinf ( x ) || x != x		2612108	0		||			
ANR	2612114	UnaryOperationExpression	! isinf ( x )		2612108	0					
ANR	2612115	UnaryOperator	!		2612108	0					
ANR	2612116	CallExpression	isinf ( x )		2612108	1					
ANR	2612117	Callee	isinf		2612108	0					
ANR	2612118	Identifier	isinf		2612108	0					
ANR	2612119	ArgumentList	x		2612108	1					
ANR	2612120	Argument	x		2612108	0					
ANR	2612121	Identifier	x		2612108	0					
ANR	2612122	EqualityExpression	x != x		2612108	1		!=			
ANR	2612123	Identifier	x		2612108	0					
ANR	2612124	Identifier	x		2612108	1					
ANR	2612125	CompoundStatement		2:29:30:30	2612108	1					
ANR	2612126	ReturnStatement	return 0 ;	445:8:11597:11605	2612108	0	True				
ANR	2612127	PrimaryExpression	0		2612108	0					
ANR	2612128	ElseStatement	else		2612108	0					
ANR	2612129	IfStatement	if ( x > 0 )		2612108	0					
ANR	2612130	Condition	x > 0	446:15:11622:11626	2612108	0	True				
ANR	2612131	RelationalExpression	x > 0		2612108	0		>			
ANR	2612132	Identifier	x		2612108	0					
ANR	2612133	PrimaryExpression	0		2612108	1					
ANR	2612134	CompoundStatement		4:22:72:72	2612108	1					
ANR	2612135	ReturnStatement	return 1 ;	447:8:11639:11647	2612108	0	True				
ANR	2612136	PrimaryExpression	1		2612108	0					
ANR	2612137	ElseStatement	else		2612108	0					
ANR	2612138	CompoundStatement		6:11:103:103	2612108	0					
ANR	2612139	ReturnStatement	return - 1 ;	449:8:11670:11679	2612108	0	True				
ANR	2612140	UnaryOperationExpression	- 1		2612108	0					
ANR	2612141	UnaryOperator	-		2612108	0					
ANR	2612142	PrimaryExpression	1		2612108	1					
ANR	2612143	ReturnType	int		2612108	1					
ANR	2612144	Identifier	classad_isinf		2612108	2					
ANR	2612145	ParameterList	double x		2612108	3					
ANR	2612146	Parameter	double x	442:18:11546:11553	2612108	0	True				
ANR	2612147	ParameterType	double		2612108	0					
ANR	2612148	Identifier	x		2612108	1					
ANR	2612149	CFGEntryNode	ENTRY		2612108		True				
ANR	2612150	CFGExitNode	EXIT		2612108		True				
ANR	2612151	Symbol	x		2612108						
ANR	2612152	Symbol	isinf		2612108						
ANR	2612153	Function	classad_isnan	454:0:11698:11749							
ANR	2612154	FunctionDef	classad_isnan (double x)		2612153	0					
ANR	2612155	CompoundStatement		455:0:11726:11749	2612153	0					
ANR	2612156	ReturnStatement	return isnan ( x ) ;	456:4:11732:11747	2612153	0	True				
ANR	2612157	CallExpression	isnan ( x )		2612153	0					
ANR	2612158	Callee	isnan		2612153	0					
ANR	2612159	Identifier	isnan		2612153	0					
ANR	2612160	ArgumentList	x		2612153	1					
ANR	2612161	Argument	x		2612153	0					
ANR	2612162	Identifier	x		2612153	0					
ANR	2612163	ReturnType	int		2612153	1					
ANR	2612164	Identifier	classad_isnan		2612153	2					
ANR	2612165	ParameterList	double x		2612153	3					
ANR	2612166	Parameter	double x	454:18:11716:11723	2612153	0	True				
ANR	2612167	ParameterType	double		2612153	0					
ANR	2612168	Identifier	x		2612153	1					
ANR	2612169	CFGEntryNode	ENTRY		2612153		True				
ANR	2612170	CFGExitNode	EXIT		2612153		True				
ANR	2612171	Symbol	x		2612153						
ANR	2612172	Symbol	isnan		2612153						
