command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4056789	File	data/converged/CVE-2011-4930_htcondor/src_condor_starter.std_starter_main.cpp								
ANR	4056790	DeclStmt									
ANR	4056791	Decl							List < UserProc >	List < UserProc >	listuserproc
ANR	4056792	DeclStmt									
ANR	4056793	Decl							void	"void ( const STARTUP_INFO * s , int flags )"	display_startup_info
ANR	4056794	DeclStmt									
ANR	4056795	Decl							const pid_t	const pid_t	ANY_PID
ANR	4056796	DeclStmt									
ANR	4056797	Decl							StdUnivSock	StdUnivSock *	SyscallStream
ANR	4056798	DeclStmt									
ANR	4056799	Decl							List < UserProc >	List < UserProc >	UProcList
ANR	4056800	DeclStmt									
ANR	4056801	Decl							char	char *	Execute
ANR	4056802	DeclStmt									
ANR	4056803	Decl							int	int	ExecTransferAttempts
ANR	4056804	DeclStmt									
ANR	4056805	Decl							char	char *	UidDomain
ANR	4056806	DeclStmt									
ANR	4056807	Decl							bool	bool	TrustUidDomain
ANR	4056808	DeclStmt									
ANR	4056809	Decl							Alarm	Alarm	MyAlarm
ANR	4056810	DeclStmt									
ANR	4056811	Decl							char	char *	InitiatingHost
ANR	4056812	DeclStmt									
ANR	4056813	Decl							char	char *	ThisHost
ANR	4056814	DeclStmt									
ANR	4056815	Decl							extern State	extern State [ ]	StateTab
ANR	4056816	DeclStmt									
ANR	4056817	Decl							extern Transition	extern Transition [ ]	TransTab
ANR	4056818	DeclStmt									
ANR	4056819	Decl							extern int	extern int [ ]	EventSigs
ANR	4056820	DeclStmt									
ANR	4056821	Decl							extern NameTable	extern NameTable	ProcStates
ANR	4056822	DeclStmt									
ANR	4056823	Decl							extern NameTable	extern NameTable	PvmMsgNames
ANR	4056824	DeclStmt									
ANR	4056825	Decl							extern int	extern int	shadow_tid
ANR	4056826	DeclStmt									
ANR	4056827	Decl							int	int ( UserProc * proc )	update_one
ANR	4056828	DeclStmt									
ANR	4056829	Decl							void	void ( UserProc * proc )	send_final_status
ANR	4056830	DeclStmt									
ANR	4056831	Decl							void	void ( )	resume_all
ANR	4056832	DeclStmt									
ANR	4056833	Decl							void	void ( )	req_exit_all
ANR	4056834	DeclStmt									
ANR	4056835	Decl							void	void ( )	req_ckpt_exit_all
ANR	4056836	DeclStmt									
ANR	4056837	Decl							int	int ( int fd )	needed_fd
ANR	4056838	DeclStmt									
ANR	4056839	Decl							void	"void ( uid_t & requested_uid , gid_t & requested_gid )"	determine_user_ids
ANR	4056840	DeclStmt									
ANR	4056841	Decl							void	void ( )	init_environment_info
ANR	4056842	DeclStmt									
ANR	4056843	Decl							void	"void ( uid_t & requested_uid , gid_t & requested_gid )"	determine_user_ids
ANR	4056844	DeclStmt									
ANR	4056845	Decl							StateMachine	StateMachine *	condor_starter_ptr
ANR	4056846	Function	printClassAd	102:0:2930:3167							
ANR	4056847	FunctionDef	printClassAd ()		4056846	0					
ANR	4056848	CompoundStatement		104:0:2956:3167	4056846	0					
ANR	4056849	ExpressionStatement	"printf ( ""%s = False\\n"" , ATTR_IS_DAEMON_CORE )"	105:1:2959:3004	4056846	0	True				
ANR	4056850	CallExpression	"printf ( ""%s = False\\n"" , ATTR_IS_DAEMON_CORE )"		4056846	0					
ANR	4056851	Callee	printf		4056846	0					
ANR	4056852	Identifier	printf		4056846	0					
ANR	4056853	ArgumentList	"""%s = False\\n"""		4056846	1					
ANR	4056854	Argument	"""%s = False\\n"""		4056846	0					
ANR	4056855	PrimaryExpression	"""%s = False\\n"""		4056846	0					
ANR	4056856	Argument	ATTR_IS_DAEMON_CORE		4056846	1					
ANR	4056857	Identifier	ATTR_IS_DAEMON_CORE		4056846	0					
ANR	4056858	ExpressionStatement	"printf ( ""%s = True\\n"" , ATTR_HAS_REMOTE_SYSCALLS )"	106:1:3007:3056	4056846	1	True				
ANR	4056859	CallExpression	"printf ( ""%s = True\\n"" , ATTR_HAS_REMOTE_SYSCALLS )"		4056846	0					
ANR	4056860	Callee	printf		4056846	0					
ANR	4056861	Identifier	printf		4056846	0					
ANR	4056862	ArgumentList	"""%s = True\\n"""		4056846	1					
ANR	4056863	Argument	"""%s = True\\n"""		4056846	0					
ANR	4056864	PrimaryExpression	"""%s = True\\n"""		4056846	0					
ANR	4056865	Argument	ATTR_HAS_REMOTE_SYSCALLS		4056846	1					
ANR	4056866	Identifier	ATTR_HAS_REMOTE_SYSCALLS		4056846	0					
ANR	4056867	ExpressionStatement	"printf ( ""%s = True\\n"" , ATTR_HAS_CHECKPOINTING )"	107:1:3059:3106	4056846	2	True				
ANR	4056868	CallExpression	"printf ( ""%s = True\\n"" , ATTR_HAS_CHECKPOINTING )"		4056846	0					
ANR	4056869	Callee	printf		4056846	0					
ANR	4056870	Identifier	printf		4056846	0					
ANR	4056871	ArgumentList	"""%s = True\\n"""		4056846	1					
ANR	4056872	Argument	"""%s = True\\n"""		4056846	0					
ANR	4056873	PrimaryExpression	"""%s = True\\n"""		4056846	0					
ANR	4056874	Argument	ATTR_HAS_CHECKPOINTING		4056846	1					
ANR	4056875	Identifier	ATTR_HAS_CHECKPOINTING		4056846	0					
ANR	4056876	ExpressionStatement	"printf ( ""%s = \\""%s\\""\\n"" , ATTR_VERSION , CondorVersion ( ) )"	108:1:3109:3165	4056846	3	True				
ANR	4056877	CallExpression	"printf ( ""%s = \\""%s\\""\\n"" , ATTR_VERSION , CondorVersion ( ) )"		4056846	0					
ANR	4056878	Callee	printf		4056846	0					
ANR	4056879	Identifier	printf		4056846	0					
ANR	4056880	ArgumentList	"""%s = \\""%s\\""\\n"""		4056846	1					
ANR	4056881	Argument	"""%s = \\""%s\\""\\n"""		4056846	0					
ANR	4056882	PrimaryExpression	"""%s = \\""%s\\""\\n"""		4056846	0					
ANR	4056883	Argument	ATTR_VERSION		4056846	1					
ANR	4056884	Identifier	ATTR_VERSION		4056846	0					
ANR	4056885	Argument	CondorVersion ( )		4056846	2					
ANR	4056886	CallExpression	CondorVersion ( )		4056846	0					
ANR	4056887	Callee	CondorVersion		4056846	0					
ANR	4056888	Identifier	CondorVersion		4056846	0					
ANR	4056889	ArgumentList			4056846	1					
ANR	4056890	ReturnType	void		4056846	1					
ANR	4056891	Identifier	printClassAd		4056846	2					
ANR	4056892	ParameterList			4056846	3					
ANR	4056893	CFGEntryNode	ENTRY		4056846		True				
ANR	4056894	CFGExitNode	EXIT		4056846		True				
ANR	4056895	Symbol	ATTR_VERSION		4056846						
ANR	4056896	Symbol	CondorVersion		4056846						
ANR	4056897	Symbol	ATTR_IS_DAEMON_CORE		4056846						
ANR	4056898	Symbol	ATTR_HAS_CHECKPOINTING		4056846						
ANR	4056899	Symbol	ATTR_HAS_REMOTE_SYSCALLS		4056846						
ANR	4056900	Function	main	117:0:3377:4225							
ANR	4056901	FunctionDef	"main (int argc , char * argv [ ])"		4056900	0					
ANR	4056902	CompoundStatement		119:0:3412:4225	4056900	0					
ANR	4056903	ExpressionStatement	"set_mySubSystem ( ""STARTER"" , SUBSYSTEM_TYPE_STARTER )"	120:1:3415:3467	4056900	0	True				
ANR	4056904	CallExpression	"set_mySubSystem ( ""STARTER"" , SUBSYSTEM_TYPE_STARTER )"		4056900	0					
ANR	4056905	Callee	set_mySubSystem		4056900	0					
ANR	4056906	Identifier	set_mySubSystem		4056900	0					
ANR	4056907	ArgumentList	"""STARTER"""		4056900	1					
ANR	4056908	Argument	"""STARTER"""		4056900	0					
ANR	4056909	PrimaryExpression	"""STARTER"""		4056900	0					
ANR	4056910	Argument	SUBSYSTEM_TYPE_STARTER		4056900	1					
ANR	4056911	Identifier	SUBSYSTEM_TYPE_STARTER		4056900	0					
ANR	4056912	ExpressionStatement	"myDistro -> Init ( argc , argv )"	122:1:3471:3499	4056900	1	True				
ANR	4056913	CallExpression	"myDistro -> Init ( argc , argv )"		4056900	0					
ANR	4056914	Callee	myDistro -> Init		4056900	0					
ANR	4056915	PtrMemberAccess	myDistro -> Init		4056900	0					
ANR	4056916	Identifier	myDistro		4056900	0					
ANR	4056917	Identifier	Init		4056900	1					
ANR	4056918	ArgumentList	argc		4056900	1					
ANR	4056919	Argument	argc		4056900	0					
ANR	4056920	Identifier	argc		4056900	0					
ANR	4056921	Argument	argv		4056900	1					
ANR	4056922	Identifier	argv		4056900	0					
ANR	4056923	IfStatement	"if ( argc == 2 && strncasecmp ( argv [ 1 ] , ""-cl"" , 3 ) == MATCH )"		4056900	2					
ANR	4056924	Condition	"argc == 2 && strncasecmp ( argv [ 1 ] , ""-cl"" , 3 ) == MATCH"	123:5:3506:3557	4056900	0	True				
ANR	4056925	AndExpression	"argc == 2 && strncasecmp ( argv [ 1 ] , ""-cl"" , 3 ) == MATCH"		4056900	0		&&			
ANR	4056926	EqualityExpression	argc == 2		4056900	0		==			
ANR	4056927	Identifier	argc		4056900	0					
ANR	4056928	PrimaryExpression	2		4056900	1					
ANR	4056929	EqualityExpression	"strncasecmp ( argv [ 1 ] , ""-cl"" , 3 ) == MATCH"		4056900	1		==			
ANR	4056930	CallExpression	"strncasecmp ( argv [ 1 ] , ""-cl"" , 3 )"		4056900	0					
ANR	4056931	Callee	strncasecmp		4056900	0					
ANR	4056932	Identifier	strncasecmp		4056900	0					
ANR	4056933	ArgumentList	argv [ 1 ]		4056900	1					
ANR	4056934	Argument	argv [ 1 ]		4056900	0					
ANR	4056935	ArrayIndexing	argv [ 1 ]		4056900	0					
ANR	4056936	Identifier	argv		4056900	0					
ANR	4056937	PrimaryExpression	1		4056900	1					
ANR	4056938	Argument	"""-cl"""		4056900	1					
ANR	4056939	PrimaryExpression	"""-cl"""		4056900	0					
ANR	4056940	Argument	3		4056900	2					
ANR	4056941	PrimaryExpression	3		4056900	0					
ANR	4056942	Identifier	MATCH		4056900	1					
ANR	4056943	CompoundStatement		5:60:148:148	4056900	1					
ANR	4056944	ExpressionStatement	printClassAd ( )	124:2:3565:3579	4056900	0	True				
ANR	4056945	CallExpression	printClassAd ( )		4056900	0					
ANR	4056946	Callee	printClassAd		4056900	0					
ANR	4056947	Identifier	printClassAd		4056900	0					
ANR	4056948	ArgumentList			4056900	1					
ANR	4056949	ExpressionStatement	exit ( 0 )	125:2:3583:3592	4056900	1	True				
ANR	4056950	CallExpression	exit ( 0 )		4056900	0					
ANR	4056951	Callee	exit		4056900	0					
ANR	4056952	Identifier	exit		4056900	0					
ANR	4056953	ArgumentList	0		4056900	1					
ANR	4056954	Argument	0		4056900	0					
ANR	4056955	PrimaryExpression	0		4056900	0					
ANR	4056956	IdentifierDeclStatement	"StateMachine condor_starter ( StateTab , TransTab , EventSigs , START , END ) ;"	128:1:3599:3671	4056900	3	True				
ANR	4056957	IdentifierDecl	"condor_starter ( StateTab , TransTab , EventSigs , START , END )"		4056900	0					
ANR	4056958	IdentifierDeclType	StateMachine		4056900	0					
ANR	4056959	Identifier	condor_starter		4056900	1					
ANR	4056960	Expression	"StateTab , TransTab , EventSigs , START , END"		4056900	2					
ANR	4056961	Identifier	StateTab		4056900	0					
ANR	4056962	Expression	"TransTab , EventSigs , START , END"		4056900	1					
ANR	4056963	Identifier	TransTab		4056900	0					
ANR	4056964	Expression	"EventSigs , START , END"		4056900	1					
ANR	4056965	Identifier	EventSigs		4056900	0					
ANR	4056966	Expression	"START , END"		4056900	1					
ANR	4056967	Identifier	START		4056900	0					
ANR	4056968	Identifier	END		4056900	1					
ANR	4056969	Statement	define	130:1:3675:3680	4056900	4	True				
ANR	4056970	Statement	DEBUGGING	130:8:3682:3690	4056900	5	True				
ANR	4056971	Statement	FALSE	130:18:3692:3696	4056900	6	True				
ANR	4056972	ExpressionStatement	wait_for_debugger ( TRUE )	132:1:3713:3738	4056900	7	True				
ANR	4056973	CallExpression	wait_for_debugger ( TRUE )		4056900	0					
ANR	4056974	Callee	wait_for_debugger		4056900	0					
ANR	4056975	Identifier	wait_for_debugger		4056900	0					
ANR	4056976	ArgumentList	TRUE		4056900	1					
ANR	4056977	Argument	TRUE		4056900	0					
ANR	4056978	Identifier	TRUE		4056900	0					
ANR	4056979	ExpressionStatement	"install_sig_handler ( SIGPIPE , SIG_IGN )"	138:1:3804:3842	4056900	8	True				
ANR	4056980	CallExpression	"install_sig_handler ( SIGPIPE , SIG_IGN )"		4056900	0					
ANR	4056981	Callee	install_sig_handler		4056900	0					
ANR	4056982	Identifier	install_sig_handler		4056900	0					
ANR	4056983	ArgumentList	SIGPIPE		4056900	1					
ANR	4056984	Argument	SIGPIPE		4056900	0					
ANR	4056985	Identifier	SIGPIPE		4056900	0					
ANR	4056986	Argument	SIG_IGN		4056900	1					
ANR	4056987	Identifier	SIG_IGN		4056900	0					
ANR	4056988	IfStatement	"if ( argc == 2 && strcmp ( argv [ 1 ] , ""-dot"" ) == MATCH )"		4056900	9					
ANR	4056989	Condition	"argc == 2 && strcmp ( argv [ 1 ] , ""-dot"" ) == MATCH"	141:5:3857:3901	4056900	0	True				
ANR	4056990	AndExpression	"argc == 2 && strcmp ( argv [ 1 ] , ""-dot"" ) == MATCH"		4056900	0		&&			
ANR	4056991	EqualityExpression	argc == 2		4056900	0		==			
ANR	4056992	Identifier	argc		4056900	0					
ANR	4056993	PrimaryExpression	2		4056900	1					
ANR	4056994	EqualityExpression	"strcmp ( argv [ 1 ] , ""-dot"" ) == MATCH"		4056900	1		==			
ANR	4056995	CallExpression	"strcmp ( argv [ 1 ] , ""-dot"" )"		4056900	0					
ANR	4056996	Callee	strcmp		4056900	0					
ANR	4056997	Identifier	strcmp		4056900	0					
ANR	4056998	ArgumentList	argv [ 1 ]		4056900	1					
ANR	4056999	Argument	argv [ 1 ]		4056900	0					
ANR	4057000	ArrayIndexing	argv [ 1 ]		4056900	0					
ANR	4057001	Identifier	argv		4056900	0					
ANR	4057002	PrimaryExpression	1		4056900	1					
ANR	4057003	Argument	"""-dot"""		4056900	1					
ANR	4057004	PrimaryExpression	"""-dot"""		4056900	0					
ANR	4057005	Identifier	MATCH		4056900	1					
ANR	4057006	CompoundStatement		23:52:491:491	4056900	1					
ANR	4057007	ExpressionStatement	condor_starter . dot_print ( stdout )	142:2:3908:3940	4056900	0	True				
ANR	4057008	CallExpression	condor_starter . dot_print ( stdout )		4056900	0					
ANR	4057009	Callee	condor_starter . dot_print		4056900	0					
ANR	4057010	MemberAccess	condor_starter . dot_print		4056900	0					
ANR	4057011	Identifier	condor_starter		4056900	0					
ANR	4057012	Identifier	dot_print		4056900	1					
ANR	4057013	ArgumentList	stdout		4056900	1					
ANR	4057014	Argument	stdout		4056900	0					
ANR	4057015	Identifier	stdout		4056900	0					
ANR	4057016	ExpressionStatement	exit ( 0 )	143:2:3944:3951	4056900	1	True				
ANR	4057017	CallExpression	exit ( 0 )		4056900	0					
ANR	4057018	Callee	exit		4056900	0					
ANR	4057019	Identifier	exit		4056900	0					
ANR	4057020	ArgumentList	0		4056900	1					
ANR	4057021	Argument	0		4056900	0					
ANR	4057022	PrimaryExpression	0		4056900	0					
ANR	4057023	ExpressionStatement	set_posix_environment ( )	146:1:3958:3981	4056900	10	True				
ANR	4057024	CallExpression	set_posix_environment ( )		4056900	0					
ANR	4057025	Callee	set_posix_environment		4056900	0					
ANR	4057026	Identifier	set_posix_environment		4056900	0					
ANR	4057027	ArgumentList			4056900	1					
ANR	4057028	ExpressionStatement	"initial_bookeeping ( argc , argv )"	147:1:3984:4016	4056900	11	True				
ANR	4057029	CallExpression	"initial_bookeeping ( argc , argv )"		4056900	0					
ANR	4057030	Callee	initial_bookeeping		4056900	0					
ANR	4057031	Identifier	initial_bookeeping		4056900	0					
ANR	4057032	ArgumentList	argc		4056900	1					
ANR	4057033	Argument	argc		4056900	0					
ANR	4057034	Identifier	argc		4056900	0					
ANR	4057035	Argument	argv		4056900	1					
ANR	4057036	Identifier	argv		4056900	0					
ANR	4057037	ExpressionStatement	condor_starter_ptr = & ( condor_starter )	149:1:4020:4058	4056900	12	True				
ANR	4057038	AssignmentExpression	condor_starter_ptr = & ( condor_starter )		4056900	0		=			
ANR	4057039	Identifier	condor_starter_ptr		4056900	0					
ANR	4057040	UnaryOperationExpression	& ( condor_starter )		4056900	1					
ANR	4057041	UnaryOperator	&		4056900	0					
ANR	4057042	Identifier	condor_starter		4056900	1					
ANR	4057043	ExpressionStatement	condor_starter . execute ( )	151:1:4090:4114	4056900	13	True				
ANR	4057044	CallExpression	condor_starter . execute ( )		4056900	0					
ANR	4057045	Callee	condor_starter . execute		4056900	0					
ANR	4057046	MemberAccess	condor_starter . execute		4056900	0					
ANR	4057047	Identifier	condor_starter		4056900	0					
ANR	4057048	Identifier	execute		4056900	1					
ANR	4057049	ArgumentList			4056900	1					
ANR	4057050	ExpressionStatement	free ( UidDomain )	152:4:4120:4135	4056900	14	True				
ANR	4057051	CallExpression	free ( UidDomain )		4056900	0					
ANR	4057052	Callee	free		4056900	0					
ANR	4057053	Identifier	free		4056900	0					
ANR	4057054	ArgumentList	UidDomain		4056900	1					
ANR	4057055	Argument	UidDomain		4056900	0					
ANR	4057056	Identifier	UidDomain		4056900	0					
ANR	4057057	ExpressionStatement	"dprintf ( D_ALWAYS , ""********* STARTER terminating normally **********\\n"" )"	153:1:4138:4212	4056900	15	True				
ANR	4057058	CallExpression	"dprintf ( D_ALWAYS , ""********* STARTER terminating normally **********\\n"" )"		4056900	0					
ANR	4057059	Callee	dprintf		4056900	0					
ANR	4057060	Identifier	dprintf		4056900	0					
ANR	4057061	ArgumentList	D_ALWAYS		4056900	1					
ANR	4057062	Argument	D_ALWAYS		4056900	0					
ANR	4057063	Identifier	D_ALWAYS		4056900	0					
ANR	4057064	Argument	"""********* STARTER terminating normally **********\\n"""		4056900	1					
ANR	4057065	PrimaryExpression	"""********* STARTER terminating normally **********\\n"""		4056900	0					
ANR	4057066	ReturnStatement	return 0 ;	154:1:4215:4223	4056900	16	True				
ANR	4057067	PrimaryExpression	0		4056900	0					
ANR	4057068	ReturnType	int		4056900	1					
ANR	4057069	Identifier	main		4056900	2					
ANR	4057070	ParameterList	"int argc , char * argv [ ]"		4056900	3					
ANR	4057071	Parameter	int argc	118:6:3387:3394	4056900	0	True				
ANR	4057072	ParameterType	int		4056900	0					
ANR	4057073	Identifier	argc		4056900	1					
ANR	4057074	Parameter	char * argv [ ]	118:16:3397:3408	4056900	1	True				
ANR	4057075	ParameterType	char * [ ]		4056900	0					
ANR	4057076	Identifier	argv		4056900	1					
ANR	4057077	CFGEntryNode	ENTRY		4056900		True				
ANR	4057078	CFGExitNode	EXIT		4056900		True				
ANR	4057079	Symbol	argc		4056900						
ANR	4057080	Symbol	strcmp		4056900						
ANR	4057081	Symbol	stdout		4056900						
ANR	4057082	Symbol	strncasecmp		4056900						
ANR	4057083	Symbol	UidDomain		4056900						
ANR	4057084	Symbol	D_ALWAYS		4056900						
ANR	4057085	Symbol	TRUE		4056900						
ANR	4057086	Symbol	SIG_IGN		4056900						
ANR	4057087	Symbol	* argv		4056900						
ANR	4057088	Symbol	argv		4056900						
ANR	4057089	Symbol	SUBSYSTEM_TYPE_STARTER		4056900						
ANR	4057090	Symbol	& condor_starter		4056900						
ANR	4057091	Symbol	myDistro		4056900						
ANR	4057092	Symbol	condor_starter		4056900						
ANR	4057093	Symbol	SIGPIPE		4056900						
ANR	4057094	Symbol	MATCH		4056900						
ANR	4057095	Symbol	condor_starter_ptr		4056900						
ANR	4057096	Function	init	161:0:4303:4460							
ANR	4057097	FunctionDef	init ()		4057096	0					
ANR	4057098	CompoundStatement		163:0:4314:4460	4057096	0					
ANR	4057099	ExpressionStatement	move_to_execute_directory ( )	164:1:4317:4344	4057096	0	True				
ANR	4057100	CallExpression	move_to_execute_directory ( )		4057096	0					
ANR	4057101	Callee	move_to_execute_directory		4057096	0					
ANR	4057102	Identifier	move_to_execute_directory		4057096	0					
ANR	4057103	ArgumentList			4057096	1					
ANR	4057104	ExpressionStatement	init_environment_info ( )	165:1:4347:4370	4057096	1	True				
ANR	4057105	CallExpression	init_environment_info ( )		4057096	0					
ANR	4057106	Callee	init_environment_info		4057096	0					
ANR	4057107	Identifier	init_environment_info		4057096	0					
ANR	4057108	ArgumentList			4057096	1					
ANR	4057109	ExpressionStatement	sysapi_set_resource_limits ( 1 << 29 )	166:1:4373:4406	4057096	2	True				
ANR	4057110	CallExpression	sysapi_set_resource_limits ( 1 << 29 )		4057096	0					
ANR	4057111	Callee	sysapi_set_resource_limits		4057096	0					
ANR	4057112	Identifier	sysapi_set_resource_limits		4057096	0					
ANR	4057113	ArgumentList	1 << 29		4057096	1					
ANR	4057114	Argument	1 << 29		4057096	0					
ANR	4057115	ShiftExpression	1 << 29		4057096	0		<<			
ANR	4057116	PrimaryExpression	1		4057096	0					
ANR	4057117	PrimaryExpression	29		4057096	1					
ANR	4057118	ExpressionStatement	close_unused_file_descriptors ( )	167:1:4409:4440	4057096	3	True				
ANR	4057119	CallExpression	close_unused_file_descriptors ( )		4057096	0					
ANR	4057120	Callee	close_unused_file_descriptors		4057096	0					
ANR	4057121	Identifier	close_unused_file_descriptors		4057096	0					
ANR	4057122	ArgumentList			4057096	1					
ANR	4057123	ReturnStatement	return DEFAULT ;	169:1:4444:4458	4057096	4	True				
ANR	4057124	Identifier	DEFAULT		4057096	0					
ANR	4057125	ReturnType	int		4057096	1					
ANR	4057126	Identifier	init		4057096	2					
ANR	4057127	ParameterList			4057096	3					
ANR	4057128	CFGEntryNode	ENTRY		4057096		True				
ANR	4057129	CFGExitNode	EXIT		4057096		True				
ANR	4057130	Symbol	DEFAULT		4057096						
ANR	4057131	Function	susp_self	176:0:4519:4661							
ANR	4057132	FunctionDef	susp_self ()		4057131	0					
ANR	4057133	CompoundStatement		178:0:4535:4661	4057131	0					
ANR	4057134	ExpressionStatement	"dprintf ( D_ALWAYS , ""Suspending self\\n"" )"	179:1:4538:4578	4057131	0	True				
ANR	4057135	CallExpression	"dprintf ( D_ALWAYS , ""Suspending self\\n"" )"		4057131	0					
ANR	4057136	Callee	dprintf		4057131	0					
ANR	4057137	Identifier	dprintf		4057131	0					
ANR	4057138	ArgumentList	D_ALWAYS		4057131	1					
ANR	4057139	Argument	D_ALWAYS		4057131	0					
ANR	4057140	Identifier	D_ALWAYS		4057131	0					
ANR	4057141	Argument	"""Suspending self\\n"""		4057131	1					
ANR	4057142	PrimaryExpression	"""Suspending self\\n"""		4057131	0					
ANR	4057143	ExpressionStatement	"kill ( getpid ( ) , SIGSTOP )"	180:1:4581:4606	4057131	1	True				
ANR	4057144	CallExpression	"kill ( getpid ( ) , SIGSTOP )"		4057131	0					
ANR	4057145	Callee	kill		4057131	0					
ANR	4057146	Identifier	kill		4057131	0					
ANR	4057147	ArgumentList	getpid ( )		4057131	1					
ANR	4057148	Argument	getpid ( )		4057131	0					
ANR	4057149	CallExpression	getpid ( )		4057131	0					
ANR	4057150	Callee	getpid		4057131	0					
ANR	4057151	Identifier	getpid		4057131	0					
ANR	4057152	ArgumentList			4057131	1					
ANR	4057153	Argument	SIGSTOP		4057131	1					
ANR	4057154	Identifier	SIGSTOP		4057131	0					
ANR	4057155	ExpressionStatement	"dprintf ( D_ALWAYS , ""Resuming self\\n"" )"	181:1:4609:4647	4057131	2	True				
ANR	4057156	CallExpression	"dprintf ( D_ALWAYS , ""Resuming self\\n"" )"		4057131	0					
ANR	4057157	Callee	dprintf		4057131	0					
ANR	4057158	Identifier	dprintf		4057131	0					
ANR	4057159	ArgumentList	D_ALWAYS		4057131	1					
ANR	4057160	Argument	D_ALWAYS		4057131	0					
ANR	4057161	Identifier	D_ALWAYS		4057131	0					
ANR	4057162	Argument	"""Resuming self\\n"""		4057131	1					
ANR	4057163	PrimaryExpression	"""Resuming self\\n"""		4057131	0					
ANR	4057164	ReturnStatement	return ( 0 ) ;	182:1:4650:4659	4057131	3	True				
ANR	4057165	PrimaryExpression	0		4057131	0					
ANR	4057166	ReturnType	int		4057131	1					
ANR	4057167	Identifier	susp_self		4057131	2					
ANR	4057168	ParameterList			4057131	3					
ANR	4057169	CFGEntryNode	ENTRY		4057131		True				
ANR	4057170	CFGExitNode	EXIT		4057131		True				
ANR	4057171	Symbol	SIGSTOP		4057131						
ANR	4057172	Symbol	D_ALWAYS		4057131						
ANR	4057173	Symbol	getpid		4057131						
ANR	4057174	Function	usage	189:0:4762:4903							
ANR	4057175	FunctionDef	usage (char * my_name)		4057174	0					
ANR	4057176	CompoundStatement		191:0:4790:4903	4057174	0					
ANR	4057177	ExpressionStatement	"dprintf ( D_ALWAYS , ""Usage: %s ( -pipe | initiating_host) [<STARTD_IP:STARTD_PORT>]\\n"" , my_name )"	192:1:4793:4889	4057174	0	True				
ANR	4057178	CallExpression	"dprintf ( D_ALWAYS , ""Usage: %s ( -pipe | initiating_host) [<STARTD_IP:STARTD_PORT>]\\n"" , my_name )"		4057174	0					
ANR	4057179	Callee	dprintf		4057174	0					
ANR	4057180	Identifier	dprintf		4057174	0					
ANR	4057181	ArgumentList	D_ALWAYS		4057174	1					
ANR	4057182	Argument	D_ALWAYS		4057174	0					
ANR	4057183	Identifier	D_ALWAYS		4057174	0					
ANR	4057184	Argument	"""Usage: %s ( -pipe | initiating_host) [<STARTD_IP:STARTD_PORT>]\\n"""		4057174	1					
ANR	4057185	PrimaryExpression	"""Usage: %s ( -pipe | initiating_host) [<STARTD_IP:STARTD_PORT>]\\n"""		4057174	0					
ANR	4057186	Argument	my_name		4057174	2					
ANR	4057187	Identifier	my_name		4057174	0					
ANR	4057188	ExpressionStatement	exit ( 0 )	193:1:4892:4901	4057174	1	True				
ANR	4057189	CallExpression	exit ( 0 )		4057174	0					
ANR	4057190	Callee	exit		4057174	0					
ANR	4057191	Identifier	exit		4057174	0					
ANR	4057192	ArgumentList	0		4057174	1					
ANR	4057193	Argument	0		4057174	0					
ANR	4057194	PrimaryExpression	0		4057174	0					
ANR	4057195	ReturnType	void		4057174	1					
ANR	4057196	Identifier	usage		4057174	2					
ANR	4057197	ParameterList	char * my_name		4057174	3					
ANR	4057198	Parameter	char * my_name	190:7:4774:4786	4057174	0	True				
ANR	4057199	ParameterType	char *		4057174	0					
ANR	4057200	Identifier	my_name		4057174	1					
ANR	4057201	CFGEntryNode	ENTRY		4057174		True				
ANR	4057202	CFGExitNode	EXIT		4057174		True				
ANR	4057203	Symbol	my_name		4057174						
ANR	4057204	Symbol	D_ALWAYS		4057174						
ANR	4057205	Function	wait_for_debugger	201:0:5100:5587							
ANR	4057206	FunctionDef	wait_for_debugger (int do_wait)		4057205	0					
ANR	4057207	CompoundStatement		202:0:5138:5587	4057205	0					
ANR	4057208	IdentifierDeclStatement	sigset_t sigset ;	203:1:5141:5156	4057205	0	True				
ANR	4057209	IdentifierDecl	sigset		4057205	0					
ANR	4057210	IdentifierDeclType	sigset_t		4057205	0					
ANR	4057211	Identifier	sigset		4057205	1					
ANR	4057212	ExpressionStatement	sigemptyset ( & sigset )	212:1:5460:5482	4057205	1	True				
ANR	4057213	CallExpression	sigemptyset ( & sigset )		4057205	0					
ANR	4057214	Callee	sigemptyset		4057205	0					
ANR	4057215	Identifier	sigemptyset		4057205	0					
ANR	4057216	ArgumentList	& sigset		4057205	1					
ANR	4057217	Argument	& sigset		4057205	0					
ANR	4057218	UnaryOperationExpression	& sigset		4057205	0					
ANR	4057219	UnaryOperator	&		4057205	0					
ANR	4057220	Identifier	sigset		4057205	1					
ANR	4057221	ExpressionStatement	"sigaddset ( & sigset , SIGTRAP )"	213:1:5485:5514	4057205	2	True				
ANR	4057222	CallExpression	"sigaddset ( & sigset , SIGTRAP )"		4057205	0					
ANR	4057223	Callee	sigaddset		4057205	0					
ANR	4057224	Identifier	sigaddset		4057205	0					
ANR	4057225	ArgumentList	& sigset		4057205	1					
ANR	4057226	Argument	& sigset		4057205	0					
ANR	4057227	UnaryOperationExpression	& sigset		4057205	0					
ANR	4057228	UnaryOperator	&		4057205	0					
ANR	4057229	Identifier	sigset		4057205	1					
ANR	4057230	Argument	SIGTRAP		4057205	1					
ANR	4057231	Identifier	SIGTRAP		4057205	0					
ANR	4057232	ExpressionStatement	"sigprocmask ( SIG_UNBLOCK , & sigset , 0 )"	214:1:5517:5555	4057205	3	True				
ANR	4057233	CallExpression	"sigprocmask ( SIG_UNBLOCK , & sigset , 0 )"		4057205	0					
ANR	4057234	Callee	sigprocmask		4057205	0					
ANR	4057235	Identifier	sigprocmask		4057205	0					
ANR	4057236	ArgumentList	SIG_UNBLOCK		4057205	1					
ANR	4057237	Argument	SIG_UNBLOCK		4057205	0					
ANR	4057238	Identifier	SIG_UNBLOCK		4057205	0					
ANR	4057239	Argument	& sigset		4057205	1					
ANR	4057240	UnaryOperationExpression	& sigset		4057205	0					
ANR	4057241	UnaryOperator	&		4057205	0					
ANR	4057242	Identifier	sigset		4057205	1					
ANR	4057243	Argument	0		4057205	2					
ANR	4057244	PrimaryExpression	0		4057205	0					
ANR	4057245	WhileStatement	while ( do_wait )		4057205	4					
ANR	4057246	Condition	do_wait	217:8:5573:5579	4057205	0	True				
ANR	4057247	Identifier	do_wait		4057205	0					
ANR	4057248	ExpressionStatement		218:2:5585:5585	4057205	1	True				
ANR	4057249	ReturnType	void		4057205	1					
ANR	4057250	Identifier	wait_for_debugger		4057205	2					
ANR	4057251	ParameterList	int do_wait		4057205	3					
ANR	4057252	Parameter	int do_wait	201:24:5124:5134	4057205	0	True				
ANR	4057253	ParameterType	int		4057205	0					
ANR	4057254	Identifier	do_wait		4057205	1					
ANR	4057255	CFGEntryNode	ENTRY		4057205		True				
ANR	4057256	CFGExitNode	EXIT		4057205		True				
ANR	4057257	Symbol	do_wait		4057205						
ANR	4057258	Symbol	& sigset		4057205						
ANR	4057259	Symbol	sigset		4057205						
ANR	4057260	Symbol	SIG_UNBLOCK		4057205						
ANR	4057261	Symbol	SIGTRAP		4057205						
ANR	4057262	Function	init_shadow_connections	228:0:5901:6249							
ANR	4057263	FunctionDef	init_shadow_connections ()		4057262	0					
ANR	4057264	CompoundStatement		230:0:5932:6249	4057262	0					
ANR	4057265	ExpressionStatement	"( void ) dup2 ( 1 , RSC_SOCK )"	231:1:5935:5961	4057262	0	True				
ANR	4057266	CastExpression	"( void ) dup2 ( 1 , RSC_SOCK )"		4057262	0					
ANR	4057267	CastTarget	void		4057262	0					
ANR	4057268	CallExpression	"dup2 ( 1 , RSC_SOCK )"		4057262	1					
ANR	4057269	Callee	dup2		4057262	0					
ANR	4057270	Identifier	dup2		4057262	0					
ANR	4057271	ArgumentList	1		4057262	1					
ANR	4057272	Argument	1		4057262	0					
ANR	4057273	PrimaryExpression	1		4057262	0					
ANR	4057274	Argument	RSC_SOCK		4057262	1					
ANR	4057275	Identifier	RSC_SOCK		4057262	0					
ANR	4057276	ExpressionStatement	"( void ) dup2 ( 2 , CLIENT_LOG )"	232:1:5964:5992	4057262	1	True				
ANR	4057277	CastExpression	"( void ) dup2 ( 2 , CLIENT_LOG )"		4057262	0					
ANR	4057278	CastTarget	void		4057262	0					
ANR	4057279	CallExpression	"dup2 ( 2 , CLIENT_LOG )"		4057262	1					
ANR	4057280	Callee	dup2		4057262	0					
ANR	4057281	Identifier	dup2		4057262	0					
ANR	4057282	ArgumentList	2		4057262	1					
ANR	4057283	Argument	2		4057262	0					
ANR	4057284	PrimaryExpression	2		4057262	0					
ANR	4057285	Argument	CLIENT_LOG		4057262	1					
ANR	4057286	Identifier	CLIENT_LOG		4057262	0					
ANR	4057287	ExpressionStatement	SyscallStream = init_syscall_connection ( FALSE )	233:1:5995:6042	4057262	2	True				
ANR	4057288	AssignmentExpression	SyscallStream = init_syscall_connection ( FALSE )		4057262	0		=			
ANR	4057289	Identifier	SyscallStream		4057262	0					
ANR	4057290	CallExpression	init_syscall_connection ( FALSE )		4057262	1					
ANR	4057291	Callee	init_syscall_connection		4057262	0					
ANR	4057292	Identifier	init_syscall_connection		4057262	0					
ANR	4057293	ArgumentList	FALSE		4057262	1					
ANR	4057294	Argument	FALSE		4057262	0					
ANR	4057295	Identifier	FALSE		4057262	0					
ANR	4057296	ExpressionStatement	SyscallStream -> timeout ( 300 )	237:1:6220:6247	4057262	3	True				
ANR	4057297	CallExpression	SyscallStream -> timeout ( 300 )		4057262	0					
ANR	4057298	Callee	SyscallStream -> timeout		4057262	0					
ANR	4057299	PtrMemberAccess	SyscallStream -> timeout		4057262	0					
ANR	4057300	Identifier	SyscallStream		4057262	0					
ANR	4057301	Identifier	timeout		4057262	1					
ANR	4057302	ArgumentList	300		4057262	1					
ANR	4057303	Argument	300		4057262	0					
ANR	4057304	PrimaryExpression	300		4057262	0					
ANR	4057305	ReturnType	void		4057262	1					
ANR	4057306	Identifier	init_shadow_connections		4057262	2					
ANR	4057307	ParameterList			4057262	3					
ANR	4057308	CFGEntryNode	ENTRY		4057262		True				
ANR	4057309	CFGExitNode	EXIT		4057262		True				
ANR	4057310	Symbol	CLIENT_LOG		4057262						
ANR	4057311	Symbol	init_syscall_connection		4057262						
ANR	4057312	Symbol	SyscallStream		4057262						
ANR	4057313	Symbol	RSC_SOCK		4057262						
ANR	4057314	Symbol	FALSE		4057262						
ANR	4057315	Function	move_to_execute_directory	243:0:6318:6485							
ANR	4057316	FunctionDef	move_to_execute_directory ()		4057315	0					
ANR	4057317	CompoundStatement		245:0:6351:6485	4057315	0					
ANR	4057318	IfStatement	if ( chdir ( Execute ) )		4057315	0					
ANR	4057319	Condition	chdir ( Execute )	246:5:6358:6371	4057315	0	True				
ANR	4057320	CallExpression	chdir ( Execute )		4057315	0					
ANR	4057321	Callee	chdir		4057315	0					
ANR	4057322	Identifier	chdir		4057315	0					
ANR	4057323	ArgumentList	Execute		4057315	1					
ANR	4057324	Argument	Execute		4057315	0					
ANR	4057325	Identifier	Execute		4057315	0					
ANR	4057326	CompoundStatement		2:22:23:23	4057315	1					
ANR	4057327	ExpressionStatement	"EXCEPT ( ""chdir(%s)"" , Execute )"	247:2:6379:6409	4057315	0	True				
ANR	4057328	CallExpression	"EXCEPT ( ""chdir(%s)"" , Execute )"		4057315	0					
ANR	4057329	Callee	EXCEPT		4057315	0					
ANR	4057330	Identifier	EXCEPT		4057315	0					
ANR	4057331	ArgumentList	"""chdir(%s)"""		4057315	1					
ANR	4057332	Argument	"""chdir(%s)"""		4057315	0					
ANR	4057333	PrimaryExpression	"""chdir(%s)"""		4057315	0					
ANR	4057334	Argument	Execute		4057315	1					
ANR	4057335	Identifier	Execute		4057315	0					
ANR	4057336	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Done moving to directory \\""%s\\""\\n"" , Execute )"	249:1:6415:6483	4057315	1	True				
ANR	4057337	CallExpression	"dprintf ( D_FULLDEBUG , ""Done moving to directory \\""%s\\""\\n"" , Execute )"		4057315	0					
ANR	4057338	Callee	dprintf		4057315	0					
ANR	4057339	Identifier	dprintf		4057315	0					
ANR	4057340	ArgumentList	D_FULLDEBUG		4057315	1					
ANR	4057341	Argument	D_FULLDEBUG		4057315	0					
ANR	4057342	Identifier	D_FULLDEBUG		4057315	0					
ANR	4057343	Argument	"""Done moving to directory \\""%s\\""\\n"""		4057315	1					
ANR	4057344	PrimaryExpression	"""Done moving to directory \\""%s\\""\\n"""		4057315	0					
ANR	4057345	Argument	Execute		4057315	2					
ANR	4057346	Identifier	Execute		4057315	0					
ANR	4057347	ReturnType	void		4057315	1					
ANR	4057348	Identifier	move_to_execute_directory		4057315	2					
ANR	4057349	ParameterList			4057315	3					
ANR	4057350	CFGEntryNode	ENTRY		4057315		True				
ANR	4057351	CFGExitNode	EXIT		4057315		True				
ANR	4057352	Symbol	Execute		4057315						
ANR	4057353	Symbol	D_FULLDEBUG		4057315						
ANR	4057354	Symbol	chdir		4057315						
ANR	4057355	Function	close_unused_file_descriptors	258:0:6715:7525							
ANR	4057356	FunctionDef	close_unused_file_descriptors ()		4057355	0					
ANR	4057357	CompoundStatement		260:0:6752:7525	4057355	0					
ANR	4057358	IdentifierDeclStatement	long open_max ;	261:1:6755:6769	4057355	0	True				
ANR	4057359	IdentifierDecl	open_max		4057355	0					
ANR	4057360	IdentifierDeclType	long		4057355	0					
ANR	4057361	Identifier	open_max		4057355	1					
ANR	4057362	IdentifierDeclStatement	long i ;	262:1:6772:6779	4057355	1	True				
ANR	4057363	IdentifierDecl	i		4057355	0					
ANR	4057364	IdentifierDeclType	long		4057355	0					
ANR	4057365	Identifier	i		4057355	1					
ANR	4057366	IdentifierDeclStatement	"std :: map < int , bool > open_fds ;"	263:1:6782:6809	4057355	2	True				
ANR	4057367	IdentifierDecl	open_fds		4057355	0					
ANR	4057368	IdentifierDeclType	"std :: map < int , bool >"		4057355	0					
ANR	4057369	Identifier	open_fds		4057355	1					
ANR	4057370	IdentifierDeclStatement	bool need_open = false ;	264:1:6812:6834	4057355	3	True				
ANR	4057371	IdentifierDecl	need_open = false		4057355	0					
ANR	4057372	IdentifierDeclType	bool		4057355	0					
ANR	4057373	Identifier	need_open		4057355	1					
ANR	4057374	AssignmentExpression	need_open = false		4057355	2		=			
ANR	4057375	Identifier	false		4057355	0					
ANR	4057376	Identifier	false		4057355	1					
ANR	4057377	ExpressionStatement	errno = 0	268:1:6905:6914	4057355	4	True				
ANR	4057378	AssignmentExpression	errno = 0		4057355	0		=			
ANR	4057379	Identifier	errno		4057355	0					
ANR	4057380	PrimaryExpression	0		4057355	1					
ANR	4057381	IfStatement	if ( ( open_max = sysconf ( _SC_OPEN_MAX ) ) == - 1 )		4057355	5					
ANR	4057382	Condition	( open_max = sysconf ( _SC_OPEN_MAX ) ) == - 1	269:5:6921:6958	4057355	0	True				
ANR	4057383	EqualityExpression	( open_max = sysconf ( _SC_OPEN_MAX ) ) == - 1		4057355	0		==			
ANR	4057384	AssignmentExpression	open_max = sysconf ( _SC_OPEN_MAX )		4057355	0		=			
ANR	4057385	Identifier	open_max		4057355	0					
ANR	4057386	CallExpression	sysconf ( _SC_OPEN_MAX )		4057355	1					
ANR	4057387	Callee	sysconf		4057355	0					
ANR	4057388	Identifier	sysconf		4057355	0					
ANR	4057389	ArgumentList	_SC_OPEN_MAX		4057355	1					
ANR	4057390	Argument	_SC_OPEN_MAX		4057355	0					
ANR	4057391	Identifier	_SC_OPEN_MAX		4057355	0					
ANR	4057392	UnaryOperationExpression	- 1		4057355	1					
ANR	4057393	UnaryOperator	-		4057355	0					
ANR	4057394	PrimaryExpression	1		4057355	1					
ANR	4057395	CompoundStatement		10:46:209:209	4057355	1					
ANR	4057396	IfStatement	if ( errno == 0 )		4057355	0					
ANR	4057397	Condition	errno == 0	270:6:6970:6979	4057355	0	True				
ANR	4057398	EqualityExpression	errno == 0		4057355	0		==			
ANR	4057399	Identifier	errno		4057355	0					
ANR	4057400	PrimaryExpression	0		4057355	1					
ANR	4057401	CompoundStatement		11:19:230:230	4057355	1					
ANR	4057402	ExpressionStatement	open_max = RSC_SOCK	271:3:6988:7007	4057355	0	True				
ANR	4057403	AssignmentExpression	open_max = RSC_SOCK		4057355	0		=			
ANR	4057404	Identifier	open_max		4057355	0					
ANR	4057405	Identifier	RSC_SOCK		4057355	1					
ANR	4057406	ExpressionStatement	"dprintf ( D_ALWAYS , ""OPEN_MAX is indeterminite, using %d\\n"" , RSC_SOCK )"	272:3:7012:7098	4057355	1	True				
ANR	4057407	CallExpression	"dprintf ( D_ALWAYS , ""OPEN_MAX is indeterminite, using %d\\n"" , RSC_SOCK )"		4057355	0					
ANR	4057408	Callee	dprintf		4057355	0					
ANR	4057409	Identifier	dprintf		4057355	0					
ANR	4057410	ArgumentList	D_ALWAYS		4057355	1					
ANR	4057411	Argument	D_ALWAYS		4057355	0					
ANR	4057412	Identifier	D_ALWAYS		4057355	0					
ANR	4057413	Argument	"""OPEN_MAX is indeterminite, using %d\\n"""		4057355	1					
ANR	4057414	PrimaryExpression	"""OPEN_MAX is indeterminite, using %d\\n"""		4057355	0					
ANR	4057415	Argument	RSC_SOCK		4057355	2					
ANR	4057416	Identifier	RSC_SOCK		4057355	0					
ANR	4057417	ElseStatement	else		4057355	0					
ANR	4057418	CompoundStatement		15:9:356:356	4057355	0					
ANR	4057419	ExpressionStatement	"EXCEPT ( ""_SC_OPEN_MAX not recognized"" )"	275:3:7114:7153	4057355	0	True				
ANR	4057420	CallExpression	"EXCEPT ( ""_SC_OPEN_MAX not recognized"" )"		4057355	0					
ANR	4057421	Callee	EXCEPT		4057355	0					
ANR	4057422	Identifier	EXCEPT		4057355	0					
ANR	4057423	ArgumentList	"""_SC_OPEN_MAX not recognized"""		4057355	1					
ANR	4057424	Argument	"""_SC_OPEN_MAX not recognized"""		4057355	0					
ANR	4057425	PrimaryExpression	"""_SC_OPEN_MAX not recognized"""		4057355	0					
ANR	4057426	ExpressionStatement	need_open = debug_open_fds ( open_fds )	279:1:7164:7200	4057355	6	True				
ANR	4057427	AssignmentExpression	need_open = debug_open_fds ( open_fds )		4057355	0		=			
ANR	4057428	Identifier	need_open		4057355	0					
ANR	4057429	CallExpression	debug_open_fds ( open_fds )		4057355	1					
ANR	4057430	Callee	debug_open_fds		4057355	0					
ANR	4057431	Identifier	debug_open_fds		4057355	0					
ANR	4057432	ArgumentList	open_fds		4057355	1					
ANR	4057433	Argument	open_fds		4057355	0					
ANR	4057434	Identifier	open_fds		4057355	0					
ANR	4057435	ForStatement	for ( i = 0 ; i < open_max ; i ++ )		4057355	7					
ANR	4057436	ForInit	i = 0 ;	282:6:7261:7264	4057355	0	True				
ANR	4057437	AssignmentExpression	i = 0		4057355	0		=			
ANR	4057438	Identifier	i		4057355	0					
ANR	4057439	PrimaryExpression	0		4057355	1					
ANR	4057440	Condition	i < open_max	282:11:7266:7275	4057355	1	True				
ANR	4057441	RelationalExpression	i < open_max		4057355	0		<			
ANR	4057442	Identifier	i		4057355	0					
ANR	4057443	Identifier	open_max		4057355	1					
ANR	4057444	PostIncDecOperationExpression	i ++	282:23:7278:7280	4057355	2	True				
ANR	4057445	Identifier	i		4057355	0					
ANR	4057446	IncDec	++		4057355	1					
ANR	4057447	CompoundStatement		24:2:535:554	4057355	3					
ANR	4057448	IdentifierDeclStatement	bool is_log = false ;	283:2:7288:7307	4057355	0	True				
ANR	4057449	IdentifierDecl	is_log = false		4057355	0					
ANR	4057450	IdentifierDeclType	bool		4057355	0					
ANR	4057451	Identifier	is_log		4057355	1					
ANR	4057452	AssignmentExpression	is_log = false		4057355	2		=			
ANR	4057453	Identifier	false		4057355	0					
ANR	4057454	Identifier	false		4057355	1					
ANR	4057455	IfStatement	if ( need_open )		4057355	1					
ANR	4057456	Condition	need_open	284:5:7314:7322	4057355	0	True				
ANR	4057457	Identifier	need_open		4057355	0					
ANR	4057458	CompoundStatement		26:2:574:574	4057355	1					
ANR	4057459	IfStatement	if ( open_fds . find ( i ) != open_fds . end ( ) )		4057355	0					
ANR	4057460	Condition	open_fds . find ( i ) != open_fds . end ( )	286:6:7335:7368	4057355	0	True				
ANR	4057461	EqualityExpression	open_fds . find ( i ) != open_fds . end ( )		4057355	0		!=			
ANR	4057462	CallExpression	open_fds . find ( i )		4057355	0					
ANR	4057463	Callee	open_fds . find		4057355	0					
ANR	4057464	MemberAccess	open_fds . find		4057355	0					
ANR	4057465	Identifier	open_fds		4057355	0					
ANR	4057466	Identifier	find		4057355	1					
ANR	4057467	ArgumentList	i		4057355	1					
ANR	4057468	Argument	i		4057355	0					
ANR	4057469	Identifier	i		4057355	0					
ANR	4057470	CallExpression	open_fds . end ( )		4057355	1					
ANR	4057471	Callee	open_fds . end		4057355	0					
ANR	4057472	MemberAccess	open_fds . end		4057355	0					
ANR	4057473	Identifier	open_fds		4057355	0					
ANR	4057474	Identifier	end		4057355	1					
ANR	4057475	ArgumentList			4057355	1					
ANR	4057476	CompoundStatement		27:42:618:618	4057355	1					
ANR	4057477	ExpressionStatement	is_log = true	287:4:7377:7390	4057355	0	True				
ANR	4057478	AssignmentExpression	is_log = true		4057355	0		=			
ANR	4057479	Identifier	is_log		4057355	0					
ANR	4057480	Identifier	true		4057355	1					
ANR	4057481	IfStatement	if ( ! is_log && ! needed_fd ( i ) )		4057355	2					
ANR	4057482	Condition	! is_log && ! needed_fd ( i )	291:5:7407:7430	4057355	0	True				
ANR	4057483	AndExpression	! is_log && ! needed_fd ( i )		4057355	0		&&			
ANR	4057484	UnaryOperationExpression	! is_log		4057355	0					
ANR	4057485	UnaryOperator	!		4057355	0					
ANR	4057486	Identifier	is_log		4057355	1					
ANR	4057487	UnaryOperationExpression	! needed_fd ( i )		4057355	1					
ANR	4057488	UnaryOperator	!		4057355	0					
ANR	4057489	CallExpression	needed_fd ( i )		4057355	1					
ANR	4057490	Callee	needed_fd		4057355	0					
ANR	4057491	Identifier	needed_fd		4057355	0					
ANR	4057492	ArgumentList	i		4057355	1					
ANR	4057493	Argument	i		4057355	0					
ANR	4057494	Identifier	i		4057355	0					
ANR	4057495	CompoundStatement		32:31:680:680	4057355	1					
ANR	4057496	ExpressionStatement	( void ) close ( i )	292:3:7438:7455	4057355	0	True				
ANR	4057497	CastExpression	( void ) close ( i )		4057355	0					
ANR	4057498	CastTarget	void		4057355	0					
ANR	4057499	CallExpression	close ( i )		4057355	1					
ANR	4057500	Callee	close		4057355	0					
ANR	4057501	Identifier	close		4057355	0					
ANR	4057502	ArgumentList	i		4057355	1					
ANR	4057503	Argument	i		4057355	0					
ANR	4057504	Identifier	i		4057355	0					
ANR	4057505	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Done closing file descriptors\\n"" )"	296:1:7466:7523	4057355	8	True				
ANR	4057506	CallExpression	"dprintf ( D_FULLDEBUG , ""Done closing file descriptors\\n"" )"		4057355	0					
ANR	4057507	Callee	dprintf		4057355	0					
ANR	4057508	Identifier	dprintf		4057355	0					
ANR	4057509	ArgumentList	D_FULLDEBUG		4057355	1					
ANR	4057510	Argument	D_FULLDEBUG		4057355	0					
ANR	4057511	Identifier	D_FULLDEBUG		4057355	0					
ANR	4057512	Argument	"""Done closing file descriptors\\n"""		4057355	1					
ANR	4057513	PrimaryExpression	"""Done closing file descriptors\\n"""		4057355	0					
ANR	4057514	ReturnType	void		4057355	1					
ANR	4057515	Identifier	close_unused_file_descriptors		4057355	2					
ANR	4057516	ParameterList			4057355	3					
ANR	4057517	CFGEntryNode	ENTRY		4057355		True				
ANR	4057518	CFGExitNode	EXIT		4057355		True				
ANR	4057519	Symbol	is_log		4057355						
ANR	4057520	Symbol	errno		4057355						
ANR	4057521	Symbol	open_fds . find		4057355						
ANR	4057522	Symbol	false		4057355						
ANR	4057523	Symbol	D_ALWAYS		4057355						
ANR	4057524	Symbol	i		4057355						
ANR	4057525	Symbol	_SC_OPEN_MAX		4057355						
ANR	4057526	Symbol	D_FULLDEBUG		4057355						
ANR	4057527	Symbol	open_fds		4057355						
ANR	4057528	Symbol	debug_open_fds		4057355						
ANR	4057529	Symbol	need_open		4057355						
ANR	4057530	Symbol	true		4057355						
ANR	4057531	Symbol	RSC_SOCK		4057355						
ANR	4057532	Symbol	open_fds . end		4057355						
ANR	4057533	Symbol	sysconf		4057355						
ANR	4057534	Symbol	needed_fd		4057355						
ANR	4057535	Symbol	open_max		4057355						
ANR	4057536	Function	init_params	303:0:7631:8345							
ANR	4057537	FunctionDef	init_params ()		4057536	0					
ANR	4057538	CompoundStatement		305:0:7650:8345	4057536	0					
ANR	4057539	IfStatement	"if ( ( Execute = param ( ""EXECUTE"" ) ) == NULL )"		4057536	0					
ANR	4057540	Condition	"( Execute = param ( ""EXECUTE"" ) ) == NULL"	306:5:7657:7690	4057536	0	True				
ANR	4057541	EqualityExpression	"( Execute = param ( ""EXECUTE"" ) ) == NULL"		4057536	0		==			
ANR	4057542	AssignmentExpression	"Execute = param ( ""EXECUTE"" )"		4057536	0		=			
ANR	4057543	Identifier	Execute		4057536	0					
ANR	4057544	CallExpression	"param ( ""EXECUTE"" )"		4057536	1					
ANR	4057545	Callee	param		4057536	0					
ANR	4057546	Identifier	param		4057536	0					
ANR	4057547	ArgumentList	"""EXECUTE"""		4057536	1					
ANR	4057548	Argument	"""EXECUTE"""		4057536	0					
ANR	4057549	PrimaryExpression	"""EXECUTE"""		4057536	0					
ANR	4057550	Identifier	NULL		4057536	1					
ANR	4057551	CompoundStatement		2:42:43:43	4057536	1					
ANR	4057552	ExpressionStatement	"EXCEPT ( ""Execute directory not specified in config file"" )"	307:2:7698:7756	4057536	0	True				
ANR	4057553	CallExpression	"EXCEPT ( ""Execute directory not specified in config file"" )"		4057536	0					
ANR	4057554	Callee	EXCEPT		4057536	0					
ANR	4057555	Identifier	EXCEPT		4057536	0					
ANR	4057556	ArgumentList	"""Execute directory not specified in config file"""		4057536	1					
ANR	4057557	Argument	"""Execute directory not specified in config file"""		4057536	0					
ANR	4057558	PrimaryExpression	"""Execute directory not specified in config file"""		4057536	0					
ANR	4057559	ExpressionStatement	"UidDomain = param ( ""UID_DOMAIN"" )"	311:1:7816:7849	4057536	1	True				
ANR	4057560	AssignmentExpression	"UidDomain = param ( ""UID_DOMAIN"" )"		4057536	0		=			
ANR	4057561	Identifier	UidDomain		4057536	0					
ANR	4057562	CallExpression	"param ( ""UID_DOMAIN"" )"		4057536	1					
ANR	4057563	Callee	param		4057536	0					
ANR	4057564	Identifier	param		4057536	0					
ANR	4057565	ArgumentList	"""UID_DOMAIN"""		4057536	1					
ANR	4057566	Argument	"""UID_DOMAIN"""		4057536	0					
ANR	4057567	PrimaryExpression	"""UID_DOMAIN"""		4057536	0					
ANR	4057568	IfStatement	if ( UidDomain == NULL || UidDomain [ 0 ] == '\\0' )		4057536	2					
ANR	4057569	Condition	UidDomain == NULL || UidDomain [ 0 ] == '\\0'	314:5:7906:7946	4057536	0	True				
ANR	4057570	OrExpression	UidDomain == NULL || UidDomain [ 0 ] == '\\0'		4057536	0		||			
ANR	4057571	EqualityExpression	UidDomain == NULL		4057536	0		==			
ANR	4057572	Identifier	UidDomain		4057536	0					
ANR	4057573	Identifier	NULL		4057536	1					
ANR	4057574	EqualityExpression	UidDomain [ 0 ] == '\\0'		4057536	1		==			
ANR	4057575	ArrayIndexing	UidDomain [ 0 ]		4057536	0					
ANR	4057576	Identifier	UidDomain		4057536	0					
ANR	4057577	PrimaryExpression	0		4057536	1					
ANR	4057578	PrimaryExpression	'\\0'		4057536	1					
ANR	4057579	CompoundStatement		10:49:299:299	4057536	1					
ANR	4057580	ExpressionStatement	"UidDomain = ""Unknown"""	315:2:7954:7975	4057536	0	True				
ANR	4057581	AssignmentExpression	"UidDomain = ""Unknown"""		4057536	0		=			
ANR	4057582	Identifier	UidDomain		4057536	0					
ANR	4057583	PrimaryExpression	"""Unknown"""		4057536	1					
ANR	4057584	IfStatement	if ( UidDomain [ 0 ] == '*' )		4057536	3					
ANR	4057585	Condition	UidDomain [ 0 ] == '*'	319:5:8047:8065	4057536	0	True				
ANR	4057586	EqualityExpression	UidDomain [ 0 ] == '*'		4057536	0		==			
ANR	4057587	ArrayIndexing	UidDomain [ 0 ]		4057536	0					
ANR	4057588	Identifier	UidDomain		4057536	0					
ANR	4057589	PrimaryExpression	0		4057536	1					
ANR	4057590	PrimaryExpression	'*'		4057536	1					
ANR	4057591	CompoundStatement		15:27:418:418	4057536	1					
ANR	4057592	ExpressionStatement	UidDomain [ 0 ] = '\\0'	320:2:8073:8092	4057536	0	True				
ANR	4057593	AssignmentExpression	UidDomain [ 0 ] = '\\0'		4057536	0		=			
ANR	4057594	ArrayIndexing	UidDomain [ 0 ]		4057536	0					
ANR	4057595	Identifier	UidDomain		4057536	0					
ANR	4057596	PrimaryExpression	0		4057536	1					
ANR	4057597	PrimaryExpression	'\\0'		4057536	1					
ANR	4057598	ExpressionStatement	"TrustUidDomain = param_boolean_crufty ( ""TRUST_UID_DOMAIN"" , false )"	323:1:8099:8163	4057536	4	True				
ANR	4057599	AssignmentExpression	"TrustUidDomain = param_boolean_crufty ( ""TRUST_UID_DOMAIN"" , false )"		4057536	0		=			
ANR	4057600	Identifier	TrustUidDomain		4057536	0					
ANR	4057601	CallExpression	"param_boolean_crufty ( ""TRUST_UID_DOMAIN"" , false )"		4057536	1					
ANR	4057602	Callee	param_boolean_crufty		4057536	0					
ANR	4057603	Identifier	param_boolean_crufty		4057536	0					
ANR	4057604	ArgumentList	"""TRUST_UID_DOMAIN"""		4057536	1					
ANR	4057605	Argument	"""TRUST_UID_DOMAIN"""		4057536	0					
ANR	4057606	PrimaryExpression	"""TRUST_UID_DOMAIN"""		4057536	0					
ANR	4057607	Argument	false		4057536	1					
ANR	4057608	Identifier	false		4057536	0					
ANR	4057609	ExpressionStatement	"ExecTransferAttempts = param_integer ( ""EXEC_TRANSFER_ATTEMPTS"" , 3 , 1 )"	327:1:8273:8343	4057536	5	True				
ANR	4057610	AssignmentExpression	"ExecTransferAttempts = param_integer ( ""EXEC_TRANSFER_ATTEMPTS"" , 3 , 1 )"		4057536	0		=			
ANR	4057611	Identifier	ExecTransferAttempts		4057536	0					
ANR	4057612	CallExpression	"param_integer ( ""EXEC_TRANSFER_ATTEMPTS"" , 3 , 1 )"		4057536	1					
ANR	4057613	Callee	param_integer		4057536	0					
ANR	4057614	Identifier	param_integer		4057536	0					
ANR	4057615	ArgumentList	"""EXEC_TRANSFER_ATTEMPTS"""		4057536	1					
ANR	4057616	Argument	"""EXEC_TRANSFER_ATTEMPTS"""		4057536	0					
ANR	4057617	PrimaryExpression	"""EXEC_TRANSFER_ATTEMPTS"""		4057536	0					
ANR	4057618	Argument	3		4057536	1					
ANR	4057619	PrimaryExpression	3		4057536	0					
ANR	4057620	Argument	1		4057536	2					
ANR	4057621	PrimaryExpression	1		4057536	0					
ANR	4057622	ReturnType	void		4057536	1					
ANR	4057623	Identifier	init_params		4057536	2					
ANR	4057624	ParameterList			4057536	3					
ANR	4057625	CFGEntryNode	ENTRY		4057536		True				
ANR	4057626	CFGExitNode	EXIT		4057536		True				
ANR	4057627	Symbol	* UidDomain		4057536						
ANR	4057628	Symbol	NULL		4057536						
ANR	4057629	Symbol	TrustUidDomain		4057536						
ANR	4057630	Symbol	Execute		4057536						
ANR	4057631	Symbol	param		4057536						
ANR	4057632	Symbol	ExecTransferAttempts		4057536						
ANR	4057633	Symbol	UidDomain		4057536						
ANR	4057634	Symbol	false		4057536						
ANR	4057635	Symbol	param_boolean_crufty		4057536						
ANR	4057636	Symbol	param_integer		4057536						
ANR	4057637	Function	get_proc	335:0:8554:8768							
ANR	4057638	FunctionDef	get_proc ()		4057637	0					
ANR	4057639	CompoundStatement		337:0:8569:8768	4057637	0					
ANR	4057640	IdentifierDeclStatement	UserProc * new_process ;	338:1:8572:8593	4057637	0	True				
ANR	4057641	IdentifierDecl	* new_process		4057637	0					
ANR	4057642	IdentifierDeclType	UserProc *		4057637	0					
ANR	4057643	Identifier	new_process		4057637	1					
ANR	4057644	ExpressionStatement	"dprintf ( D_ALWAYS , ""Entering get_proc()\\n"" )"	340:1:8597:8641	4057637	1	True				
ANR	4057645	CallExpression	"dprintf ( D_ALWAYS , ""Entering get_proc()\\n"" )"		4057637	0					
ANR	4057646	Callee	dprintf		4057637	0					
ANR	4057647	Identifier	dprintf		4057637	0					
ANR	4057648	ArgumentList	D_ALWAYS		4057637	1					
ANR	4057649	Argument	D_ALWAYS		4057637	0					
ANR	4057650	Identifier	D_ALWAYS		4057637	0					
ANR	4057651	Argument	"""Entering get_proc()\\n"""		4057637	1					
ANR	4057652	PrimaryExpression	"""Entering get_proc()\\n"""		4057637	0					
ANR	4057653	IfStatement	if ( ( new_process = get_job_info ( ) ) )		4057637	2					
ANR	4057654	Condition	new_process = get_job_info ( )	342:5:8649:8676	4057637	0	True				
ANR	4057655	AssignmentExpression	new_process = get_job_info ( )		4057637	0		=			
ANR	4057656	Identifier	new_process		4057637	0					
ANR	4057657	CallExpression	get_job_info ( )		4057637	1					
ANR	4057658	Callee	get_job_info		4057637	0					
ANR	4057659	Identifier	get_job_info		4057637	0					
ANR	4057660	ArgumentList			4057637	1					
ANR	4057661	CompoundStatement		6:36:110:110	4057637	1					
ANR	4057662	ExpressionStatement	UProcList . Append ( new_process )	343:2:8684:8715	4057637	0	True				
ANR	4057663	CallExpression	UProcList . Append ( new_process )		4057637	0					
ANR	4057664	Callee	UProcList . Append		4057637	0					
ANR	4057665	MemberAccess	UProcList . Append		4057637	0					
ANR	4057666	Identifier	UProcList		4057637	0					
ANR	4057667	Identifier	Append		4057637	1					
ANR	4057668	ArgumentList	new_process		4057637	1					
ANR	4057669	Argument	new_process		4057637	0					
ANR	4057670	Identifier	new_process		4057637	0					
ANR	4057671	ReturnStatement	return SUCCESS ;	344:2:8719:8733	4057637	1	True				
ANR	4057672	Identifier	SUCCESS		4057637	0					
ANR	4057673	ElseStatement	else		4057637	0					
ANR	4057674	CompoundStatement		9:8:173:173	4057637	0					
ANR	4057675	ReturnStatement	return TRY_LATER ;	346:2:8747:8763	4057637	0	True				
ANR	4057676	Identifier	TRY_LATER		4057637	0					
ANR	4057677	ReturnType	int		4057637	1					
ANR	4057678	Identifier	get_proc		4057637	2					
ANR	4057679	ParameterList			4057637	3					
ANR	4057680	CFGEntryNode	ENTRY		4057637		True				
ANR	4057681	CFGExitNode	EXIT		4057637		True				
ANR	4057682	Symbol	TRY_LATER		4057637						
ANR	4057683	Symbol	SUCCESS		4057637						
ANR	4057684	Symbol	UProcList		4057637						
ANR	4057685	Symbol	D_ALWAYS		4057637						
ANR	4057686	Symbol	new_process		4057637						
ANR	4057687	Symbol	get_job_info		4057637						
ANR	4057688	Function	get_exec	354:0:8874:9082							
ANR	4057689	FunctionDef	get_exec ()		4057688	0					
ANR	4057690	CompoundStatement		356:0:8889:9082	4057688	0					
ANR	4057691	IdentifierDeclStatement	UserProc * new_process ;	357:1:8892:8913	4057688	0	True				
ANR	4057692	IdentifierDecl	* new_process		4057688	0					
ANR	4057693	IdentifierDeclType	UserProc *		4057688	0					
ANR	4057694	Identifier	new_process		4057688	1					
ANR	4057695	ExpressionStatement	"dprintf ( D_ALWAYS , ""Entering get_exec()\\n"" )"	359:1:8917:8961	4057688	1	True				
ANR	4057696	CallExpression	"dprintf ( D_ALWAYS , ""Entering get_exec()\\n"" )"		4057688	0					
ANR	4057697	Callee	dprintf		4057688	0					
ANR	4057698	Identifier	dprintf		4057688	0					
ANR	4057699	ArgumentList	D_ALWAYS		4057688	1					
ANR	4057700	Argument	D_ALWAYS		4057688	0					
ANR	4057701	Identifier	D_ALWAYS		4057688	0					
ANR	4057702	Argument	"""Entering get_exec()\\n"""		4057688	1					
ANR	4057703	PrimaryExpression	"""Entering get_exec()\\n"""		4057688	0					
ANR	4057704	ExpressionStatement	new_process = UProcList . Current ( )	362:1:8966:8999	4057688	2	True				
ANR	4057705	AssignmentExpression	new_process = UProcList . Current ( )		4057688	0		=			
ANR	4057706	Identifier	new_process		4057688	0					
ANR	4057707	CallExpression	UProcList . Current ( )		4057688	1					
ANR	4057708	Callee	UProcList . Current		4057688	0					
ANR	4057709	MemberAccess	UProcList . Current		4057688	0					
ANR	4057710	Identifier	UProcList		4057688	0					
ANR	4057711	Identifier	Current		4057688	1					
ANR	4057712	ArgumentList			4057688	1					
ANR	4057713	IfStatement	if ( new_process -> fetch_ckpt ( ) != TRUE )		4057688	3					
ANR	4057714	Condition	new_process -> fetch_ckpt ( ) != TRUE	363:5:9006:9038	4057688	0	True				
ANR	4057715	EqualityExpression	new_process -> fetch_ckpt ( ) != TRUE		4057688	0		!=			
ANR	4057716	CallExpression	new_process -> fetch_ckpt ( )		4057688	0					
ANR	4057717	Callee	new_process -> fetch_ckpt		4057688	0					
ANR	4057718	PtrMemberAccess	new_process -> fetch_ckpt		4057688	0					
ANR	4057719	Identifier	new_process		4057688	0					
ANR	4057720	Identifier	fetch_ckpt		4057688	1					
ANR	4057721	ArgumentList			4057688	1					
ANR	4057722	Identifier	TRUE		4057688	1					
ANR	4057723	CompoundStatement		8:41:152:152	4057688	1					
ANR	4057724	ReturnStatement	return FAILURE ;	364:2:9046:9060	4057688	0	True				
ANR	4057725	Identifier	FAILURE		4057688	0					
ANR	4057726	ReturnStatement	return SUCCESS ;	366:1:9066:9080	4057688	4	True				
ANR	4057727	Identifier	SUCCESS		4057688	0					
ANR	4057728	ReturnType	int		4057688	1					
ANR	4057729	Identifier	get_exec		4057688	2					
ANR	4057730	ParameterList			4057688	3					
ANR	4057731	CFGEntryNode	ENTRY		4057688		True				
ANR	4057732	CFGExitNode	EXIT		4057688		True				
ANR	4057733	Symbol	new_process -> fetch_ckpt		4057688						
ANR	4057734	Symbol	SUCCESS		4057688						
ANR	4057735	Symbol	* new_process		4057688						
ANR	4057736	Symbol	UProcList		4057688						
ANR	4057737	Symbol	D_ALWAYS		4057688						
ANR	4057738	Symbol	TRUE		4057688						
ANR	4057739	Symbol	new_process		4057688						
ANR	4057740	Symbol	FAILURE		4057688						
ANR	4057741	Symbol	UProcList . Current		4057688						
ANR	4057742	Function	req_vacate	375:0:9283:9445							
ANR	4057743	FunctionDef	req_vacate ()		4057742	0					
ANR	4057744	CompoundStatement		377:0:9300:9445	4057742	0					
ANR	4057745	ExpressionStatement	MyAlarm . cancel ( )	379:1:9304:9320	4057742	0	True				
ANR	4057746	CallExpression	MyAlarm . cancel ( )		4057742	0					
ANR	4057747	Callee	MyAlarm . cancel		4057742	0					
ANR	4057748	MemberAccess	MyAlarm . cancel		4057742	0					
ANR	4057749	Identifier	MyAlarm		4057742	0					
ANR	4057750	Identifier	cancel		4057742	1					
ANR	4057751	ArgumentList			4057742	1					
ANR	4057752	ExpressionStatement	req_ckpt_exit_all ( )	382:1:9411:9430	4057742	1	True				
ANR	4057753	CallExpression	req_ckpt_exit_all ( )		4057742	0					
ANR	4057754	Callee	req_ckpt_exit_all		4057742	0					
ANR	4057755	Identifier	req_ckpt_exit_all		4057742	0					
ANR	4057756	ArgumentList			4057742	1					
ANR	4057757	ReturnStatement	return ( 0 ) ;	384:1:9434:9443	4057742	2	True				
ANR	4057758	PrimaryExpression	0		4057742	0					
ANR	4057759	ReturnType	int		4057742	1					
ANR	4057760	Identifier	req_vacate		4057742	2					
ANR	4057761	ParameterList			4057742	3					
ANR	4057762	CFGEntryNode	ENTRY		4057742		True				
ANR	4057763	CFGExitNode	EXIT		4057742		True				
ANR	4057764	Symbol	MyAlarm		4057742						
ANR	4057765	Function	req_die	392:0:9647:9756							
ANR	4057766	FunctionDef	req_die ()		4057765	0					
ANR	4057767	CompoundStatement		394:0:9661:9756	4057765	0					
ANR	4057768	ExpressionStatement	MyAlarm . cancel ( )	395:1:9664:9680	4057765	0	True				
ANR	4057769	CallExpression	MyAlarm . cancel ( )		4057765	0					
ANR	4057770	Callee	MyAlarm . cancel		4057765	0					
ANR	4057771	MemberAccess	MyAlarm . cancel		4057765	0					
ANR	4057772	Identifier	MyAlarm		4057765	0					
ANR	4057773	Identifier	cancel		4057765	1					
ANR	4057774	ArgumentList			4057765	1					
ANR	4057775	ExpressionStatement	req_exit_all ( )	396:1:9727:9741	4057765	1	True				
ANR	4057776	CallExpression	req_exit_all ( )		4057765	0					
ANR	4057777	Callee	req_exit_all		4057765	0					
ANR	4057778	Identifier	req_exit_all		4057765	0					
ANR	4057779	ArgumentList			4057765	1					
ANR	4057780	ReturnStatement	return ( 0 ) ;	398:1:9745:9754	4057765	2	True				
ANR	4057781	PrimaryExpression	0		4057765	0					
ANR	4057782	ReturnType	int		4057765	1					
ANR	4057783	Identifier	req_die		4057765	2					
ANR	4057784	ParameterList			4057765	3					
ANR	4057785	CFGEntryNode	ENTRY		4057765		True				
ANR	4057786	CFGExitNode	EXIT		4057765		True				
ANR	4057787	Symbol	MyAlarm		4057765						
ANR	4057788	Function	req_ckpt_exit_all	406:0:9826:10280							
ANR	4057789	FunctionDef	req_ckpt_exit_all ()		4057788	0					
ANR	4057790	CompoundStatement		408:0:9851:10280	4057788	0					
ANR	4057791	IdentifierDeclStatement	UserProc * proc ;	409:1:9854:9868	4057788	0	True				
ANR	4057792	IdentifierDecl	* proc		4057788	0					
ANR	4057793	IdentifierDeclType	UserProc *		4057788	0					
ANR	4057794	Identifier	proc		4057788	1					
ANR	4057795	ExpressionStatement	UProcList . Rewind ( )	412:1:9925:9943	4057788	1	True				
ANR	4057796	CallExpression	UProcList . Rewind ( )		4057788	0					
ANR	4057797	Callee	UProcList . Rewind		4057788	0					
ANR	4057798	MemberAccess	UProcList . Rewind		4057788	0					
ANR	4057799	Identifier	UProcList		4057788	0					
ANR	4057800	Identifier	Rewind		4057788	1					
ANR	4057801	ArgumentList			4057788	1					
ANR	4057802	WhileStatement	while ( ( proc = UProcList . Next ( ) ) )		4057788	2					
ANR	4057803	Condition	proc = UProcList . Next ( )	413:8:9953:9977	4057788	0	True				
ANR	4057804	AssignmentExpression	proc = UProcList . Next ( )		4057788	0		=			
ANR	4057805	Identifier	proc		4057788	0					
ANR	4057806	CallExpression	UProcList . Next ( )		4057788	1					
ANR	4057807	Callee	UProcList . Next		4057788	0					
ANR	4057808	MemberAccess	UProcList . Next		4057788	0					
ANR	4057809	Identifier	UProcList		4057788	0					
ANR	4057810	Identifier	Next		4057788	1					
ANR	4057811	ArgumentList			4057788	1					
ANR	4057812	CompoundStatement		6:36:129:129	4057788	1					
ANR	4057813	ExpressionStatement	"dprintf ( D_ALWAYS , ""req_ckpt_exit_all: Proc %d in state %s\\n"" , proc -> get_id ( ) , ProcStates . get_name ( proc -> get_state ( ) ) )"	414:2:9985:10115	4057788	0	True				
ANR	4057814	CallExpression	"dprintf ( D_ALWAYS , ""req_ckpt_exit_all: Proc %d in state %s\\n"" , proc -> get_id ( ) , ProcStates . get_name ( proc -> get_state ( ) ) )"		4057788	0					
ANR	4057815	Callee	dprintf		4057788	0					
ANR	4057816	Identifier	dprintf		4057788	0					
ANR	4057817	ArgumentList	D_ALWAYS		4057788	1					
ANR	4057818	Argument	D_ALWAYS		4057788	0					
ANR	4057819	Identifier	D_ALWAYS		4057788	0					
ANR	4057820	Argument	"""req_ckpt_exit_all: Proc %d in state %s\\n"""		4057788	1					
ANR	4057821	PrimaryExpression	"""req_ckpt_exit_all: Proc %d in state %s\\n"""		4057788	0					
ANR	4057822	Argument	proc -> get_id ( )		4057788	2					
ANR	4057823	CallExpression	proc -> get_id ( )		4057788	0					
ANR	4057824	Callee	proc -> get_id		4057788	0					
ANR	4057825	PtrMemberAccess	proc -> get_id		4057788	0					
ANR	4057826	Identifier	proc		4057788	0					
ANR	4057827	Identifier	get_id		4057788	1					
ANR	4057828	ArgumentList			4057788	1					
ANR	4057829	Argument	ProcStates . get_name ( proc -> get_state ( ) )		4057788	3					
ANR	4057830	CallExpression	ProcStates . get_name ( proc -> get_state ( ) )		4057788	0					
ANR	4057831	Callee	ProcStates . get_name		4057788	0					
ANR	4057832	MemberAccess	ProcStates . get_name		4057788	0					
ANR	4057833	Identifier	ProcStates		4057788	0					
ANR	4057834	Identifier	get_name		4057788	1					
ANR	4057835	ArgumentList	proc -> get_state ( )		4057788	1					
ANR	4057836	Argument	proc -> get_state ( )		4057788	0					
ANR	4057837	CallExpression	proc -> get_state ( )		4057788	0					
ANR	4057838	Callee	proc -> get_state		4057788	0					
ANR	4057839	PtrMemberAccess	proc -> get_state		4057788	0					
ANR	4057840	Identifier	proc		4057788	0					
ANR	4057841	Identifier	get_state		4057788	1					
ANR	4057842	ArgumentList			4057788	1					
ANR	4057843	IfStatement	if ( proc -> is_running ( ) || proc -> is_suspended ( ) )		4057788	1					
ANR	4057844	Condition	proc -> is_running ( ) || proc -> is_suspended ( )	417:6:10123:10164	4057788	0	True				
ANR	4057845	OrExpression	proc -> is_running ( ) || proc -> is_suspended ( )		4057788	0		||			
ANR	4057846	CallExpression	proc -> is_running ( )		4057788	0					
ANR	4057847	Callee	proc -> is_running		4057788	0					
ANR	4057848	PtrMemberAccess	proc -> is_running		4057788	0					
ANR	4057849	Identifier	proc		4057788	0					
ANR	4057850	Identifier	is_running		4057788	1					
ANR	4057851	ArgumentList			4057788	1					
ANR	4057852	CallExpression	proc -> is_suspended ( )		4057788	1					
ANR	4057853	Callee	proc -> is_suspended		4057788	0					
ANR	4057854	PtrMemberAccess	proc -> is_suspended		4057788	0					
ANR	4057855	Identifier	proc		4057788	0					
ANR	4057856	Identifier	is_suspended		4057788	1					
ANR	4057857	ArgumentList			4057788	1					
ANR	4057858	CompoundStatement		10:51:316:316	4057788	1					
ANR	4057859	ExpressionStatement	"dprintf ( D_ALWAYS , ""Requesting Exit on proc #%d\\n"" , proc -> get_id ( ) )"	418:3:10173:10246	4057788	0	True				
ANR	4057860	CallExpression	"dprintf ( D_ALWAYS , ""Requesting Exit on proc #%d\\n"" , proc -> get_id ( ) )"		4057788	0					
ANR	4057861	Callee	dprintf		4057788	0					
ANR	4057862	Identifier	dprintf		4057788	0					
ANR	4057863	ArgumentList	D_ALWAYS		4057788	1					
ANR	4057864	Argument	D_ALWAYS		4057788	0					
ANR	4057865	Identifier	D_ALWAYS		4057788	0					
ANR	4057866	Argument	"""Requesting Exit on proc #%d\\n"""		4057788	1					
ANR	4057867	PrimaryExpression	"""Requesting Exit on proc #%d\\n"""		4057788	0					
ANR	4057868	Argument	proc -> get_id ( )		4057788	2					
ANR	4057869	CallExpression	proc -> get_id ( )		4057788	0					
ANR	4057870	Callee	proc -> get_id		4057788	0					
ANR	4057871	PtrMemberAccess	proc -> get_id		4057788	0					
ANR	4057872	Identifier	proc		4057788	0					
ANR	4057873	Identifier	get_id		4057788	1					
ANR	4057874	ArgumentList			4057788	1					
ANR	4057875	ExpressionStatement	proc -> request_exit ( )	420:3:10251:10271	4057788	1	True				
ANR	4057876	CallExpression	proc -> request_exit ( )		4057788	0					
ANR	4057877	Callee	proc -> request_exit		4057788	0					
ANR	4057878	PtrMemberAccess	proc -> request_exit		4057788	0					
ANR	4057879	Identifier	proc		4057788	0					
ANR	4057880	Identifier	request_exit		4057788	1					
ANR	4057881	ArgumentList			4057788	1					
ANR	4057882	ReturnType	void		4057788	1					
ANR	4057883	Identifier	req_ckpt_exit_all		4057788	2					
ANR	4057884	ParameterList			4057788	3					
ANR	4057885	CFGEntryNode	ENTRY		4057788		True				
ANR	4057886	CFGExitNode	EXIT		4057788		True				
ANR	4057887	Symbol	proc -> get_state		4057788						
ANR	4057888	Symbol	proc		4057788						
ANR	4057889	Symbol	ProcStates		4057788						
ANR	4057890	Symbol	UProcList . Next		4057788						
ANR	4057891	Symbol	ProcStates . get_name		4057788						
ANR	4057892	Symbol	proc -> is_running		4057788						
ANR	4057893	Symbol	UProcList		4057788						
ANR	4057894	Symbol	D_ALWAYS		4057788						
ANR	4057895	Symbol	proc -> is_suspended		4057788						
ANR	4057896	Symbol	proc -> get_id		4057788						
ANR	4057897	Symbol	* proc		4057788						
ANR	4057898	Function	req_exit_all	428:0:10331:10824							
ANR	4057899	FunctionDef	req_exit_all ()		4057898	0					
ANR	4057900	CompoundStatement		430:0:10351:10824	4057898	0					
ANR	4057901	IdentifierDeclStatement	UserProc * proc ;	431:1:10354:10368	4057898	0	True				
ANR	4057902	IdentifierDecl	* proc		4057898	0					
ANR	4057903	IdentifierDeclType	UserProc *		4057898	0					
ANR	4057904	Identifier	proc		4057898	1					
ANR	4057905	ExpressionStatement	UProcList . Rewind ( )	434:1:10411:10429	4057898	1	True				
ANR	4057906	CallExpression	UProcList . Rewind ( )		4057898	0					
ANR	4057907	Callee	UProcList . Rewind		4057898	0					
ANR	4057908	MemberAccess	UProcList . Rewind		4057898	0					
ANR	4057909	Identifier	UProcList		4057898	0					
ANR	4057910	Identifier	Rewind		4057898	1					
ANR	4057911	ArgumentList			4057898	1					
ANR	4057912	WhileStatement	while ( ( proc = UProcList . Next ( ) ) )		4057898	2					
ANR	4057913	Condition	proc = UProcList . Next ( )	435:8:10439:10463	4057898	0	True				
ANR	4057914	AssignmentExpression	proc = UProcList . Next ( )		4057898	0		=			
ANR	4057915	Identifier	proc		4057898	0					
ANR	4057916	CallExpression	UProcList . Next ( )		4057898	1					
ANR	4057917	Callee	UProcList . Next		4057898	0					
ANR	4057918	MemberAccess	UProcList . Next		4057898	0					
ANR	4057919	Identifier	UProcList		4057898	0					
ANR	4057920	Identifier	Next		4057898	1					
ANR	4057921	ArgumentList			4057898	1					
ANR	4057922	CompoundStatement		6:36:115:115	4057898	1					
ANR	4057923	IfStatement	if ( proc -> get_class ( ) != CONDOR_UNIVERSE_PVMD )		4057898	0					
ANR	4057924	Condition	proc -> get_class ( ) != CONDOR_UNIVERSE_PVMD	436:7:10476:10516	4057898	0	True				
ANR	4057925	EqualityExpression	proc -> get_class ( ) != CONDOR_UNIVERSE_PVMD		4057898	0		!=			
ANR	4057926	CallExpression	proc -> get_class ( )		4057898	0					
ANR	4057927	Callee	proc -> get_class		4057898	0					
ANR	4057928	PtrMemberAccess	proc -> get_class		4057898	0					
ANR	4057929	Identifier	proc		4057898	0					
ANR	4057930	Identifier	get_class		4057898	1					
ANR	4057931	ArgumentList			4057898	1					
ANR	4057932	Identifier	CONDOR_UNIVERSE_PVMD		4057898	1					
ANR	4057933	CompoundStatement		7:51:168:168	4057898	1					
ANR	4057934	ExpressionStatement	"dprintf ( D_ALWAYS , ""req_exit_all: Proc %d in state %s\\n"" , proc -> get_id ( ) , ProcStates . get_name ( proc -> get_state ( ) ) )"	437:3:10525:10650	4057898	0	True				
ANR	4057935	CallExpression	"dprintf ( D_ALWAYS , ""req_exit_all: Proc %d in state %s\\n"" , proc -> get_id ( ) , ProcStates . get_name ( proc -> get_state ( ) ) )"		4057898	0					
ANR	4057936	Callee	dprintf		4057898	0					
ANR	4057937	Identifier	dprintf		4057898	0					
ANR	4057938	ArgumentList	D_ALWAYS		4057898	1					
ANR	4057939	Argument	D_ALWAYS		4057898	0					
ANR	4057940	Identifier	D_ALWAYS		4057898	0					
ANR	4057941	Argument	"""req_exit_all: Proc %d in state %s\\n"""		4057898	1					
ANR	4057942	PrimaryExpression	"""req_exit_all: Proc %d in state %s\\n"""		4057898	0					
ANR	4057943	Argument	proc -> get_id ( )		4057898	2					
ANR	4057944	CallExpression	proc -> get_id ( )		4057898	0					
ANR	4057945	Callee	proc -> get_id		4057898	0					
ANR	4057946	PtrMemberAccess	proc -> get_id		4057898	0					
ANR	4057947	Identifier	proc		4057898	0					
ANR	4057948	Identifier	get_id		4057898	1					
ANR	4057949	ArgumentList			4057898	1					
ANR	4057950	Argument	ProcStates . get_name ( proc -> get_state ( ) )		4057898	3					
ANR	4057951	CallExpression	ProcStates . get_name ( proc -> get_state ( ) )		4057898	0					
ANR	4057952	Callee	ProcStates . get_name		4057898	0					
ANR	4057953	MemberAccess	ProcStates . get_name		4057898	0					
ANR	4057954	Identifier	ProcStates		4057898	0					
ANR	4057955	Identifier	get_name		4057898	1					
ANR	4057956	ArgumentList	proc -> get_state ( )		4057898	1					
ANR	4057957	Argument	proc -> get_state ( )		4057898	0					
ANR	4057958	CallExpression	proc -> get_state ( )		4057898	0					
ANR	4057959	Callee	proc -> get_state		4057898	0					
ANR	4057960	PtrMemberAccess	proc -> get_state		4057898	0					
ANR	4057961	Identifier	proc		4057898	0					
ANR	4057962	Identifier	get_state		4057898	1					
ANR	4057963	ArgumentList			4057898	1					
ANR	4057964	IfStatement	if ( proc -> is_running ( ) || proc -> is_suspended ( ) )		4057898	1					
ANR	4057965	Condition	proc -> is_running ( ) || proc -> is_suspended ( )	440:7:10659:10700	4057898	0	True				
ANR	4057966	OrExpression	proc -> is_running ( ) || proc -> is_suspended ( )		4057898	0		||			
ANR	4057967	CallExpression	proc -> is_running ( )		4057898	0					
ANR	4057968	Callee	proc -> is_running		4057898	0					
ANR	4057969	PtrMemberAccess	proc -> is_running		4057898	0					
ANR	4057970	Identifier	proc		4057898	0					
ANR	4057971	Identifier	is_running		4057898	1					
ANR	4057972	ArgumentList			4057898	1					
ANR	4057973	CallExpression	proc -> is_suspended ( )		4057898	1					
ANR	4057974	Callee	proc -> is_suspended		4057898	0					
ANR	4057975	PtrMemberAccess	proc -> is_suspended		4057898	0					
ANR	4057976	Identifier	proc		4057898	0					
ANR	4057977	Identifier	is_suspended		4057898	1					
ANR	4057978	ArgumentList			4057898	1					
ANR	4057979	CompoundStatement		11:52:352:352	4057898	1					
ANR	4057980	ExpressionStatement	"dprintf ( D_ALWAYS , ""Requesting Exit on proc #%d\\n"" , proc -> get_id ( ) )"	441:4:10710:10783	4057898	0	True				
ANR	4057981	CallExpression	"dprintf ( D_ALWAYS , ""Requesting Exit on proc #%d\\n"" , proc -> get_id ( ) )"		4057898	0					
ANR	4057982	Callee	dprintf		4057898	0					
ANR	4057983	Identifier	dprintf		4057898	0					
ANR	4057984	ArgumentList	D_ALWAYS		4057898	1					
ANR	4057985	Argument	D_ALWAYS		4057898	0					
ANR	4057986	Identifier	D_ALWAYS		4057898	0					
ANR	4057987	Argument	"""Requesting Exit on proc #%d\\n"""		4057898	1					
ANR	4057988	PrimaryExpression	"""Requesting Exit on proc #%d\\n"""		4057898	0					
ANR	4057989	Argument	proc -> get_id ( )		4057898	2					
ANR	4057990	CallExpression	proc -> get_id ( )		4057898	0					
ANR	4057991	Callee	proc -> get_id		4057898	0					
ANR	4057992	PtrMemberAccess	proc -> get_id		4057898	0					
ANR	4057993	Identifier	proc		4057898	0					
ANR	4057994	Identifier	get_id		4057898	1					
ANR	4057995	ArgumentList			4057898	1					
ANR	4057996	ExpressionStatement	proc -> kill_forcibly ( )	443:4:10789:10810	4057898	1	True				
ANR	4057997	CallExpression	proc -> kill_forcibly ( )		4057898	0					
ANR	4057998	Callee	proc -> kill_forcibly		4057898	0					
ANR	4057999	PtrMemberAccess	proc -> kill_forcibly		4057898	0					
ANR	4058000	Identifier	proc		4057898	0					
ANR	4058001	Identifier	kill_forcibly		4057898	1					
ANR	4058002	ArgumentList			4057898	1					
ANR	4058003	ReturnType	void		4057898	1					
ANR	4058004	Identifier	req_exit_all		4057898	2					
ANR	4058005	ParameterList			4057898	3					
ANR	4058006	CFGEntryNode	ENTRY		4057898		True				
ANR	4058007	CFGExitNode	EXIT		4057898		True				
ANR	4058008	Symbol	proc		4057898						
ANR	4058009	Symbol	UProcList . Next		4057898						
ANR	4058010	Symbol	proc -> get_class		4057898						
ANR	4058011	Symbol	proc -> is_running		4057898						
ANR	4058012	Symbol	CONDOR_UNIVERSE_PVMD		4057898						
ANR	4058013	Symbol	D_ALWAYS		4057898						
ANR	4058014	Symbol	proc -> get_id		4057898						
ANR	4058015	Symbol	* proc		4057898						
ANR	4058016	Symbol	proc -> get_state		4057898						
ANR	4058017	Symbol	ProcStates		4057898						
ANR	4058018	Symbol	ProcStates . get_name		4057898						
ANR	4058019	Symbol	UProcList		4057898						
ANR	4058020	Symbol	proc -> is_suspended		4057898						
ANR	4058021	Function	terminate_all	452:0:10872:11359							
ANR	4058022	FunctionDef	terminate_all ()		4058021	0					
ANR	4058023	CompoundStatement		454:0:10892:11359	4058021	0					
ANR	4058024	IdentifierDeclStatement	UserProc * proc ;	455:1:10895:10909	4058021	0	True				
ANR	4058025	IdentifierDecl	* proc		4058021	0					
ANR	4058026	IdentifierDeclType	UserProc *		4058021	0					
ANR	4058027	Identifier	proc		4058021	1					
ANR	4058028	ExpressionStatement	UProcList . Rewind ( )	459:1:10978:10996	4058021	1	True				
ANR	4058029	CallExpression	UProcList . Rewind ( )		4058021	0					
ANR	4058030	Callee	UProcList . Rewind		4058021	0					
ANR	4058031	MemberAccess	UProcList . Rewind		4058021	0					
ANR	4058032	Identifier	UProcList		4058021	0					
ANR	4058033	Identifier	Rewind		4058021	1					
ANR	4058034	ArgumentList			4058021	1					
ANR	4058035	WhileStatement	while ( ( proc = UProcList . Next ( ) ) )		4058021	2					
ANR	4058036	Condition	proc = UProcList . Next ( )	460:8:11006:11030	4058021	0	True				
ANR	4058037	AssignmentExpression	proc = UProcList . Next ( )		4058021	0		=			
ANR	4058038	Identifier	proc		4058021	0					
ANR	4058039	CallExpression	UProcList . Next ( )		4058021	1					
ANR	4058040	Callee	UProcList . Next		4058021	0					
ANR	4058041	MemberAccess	UProcList . Next		4058021	0					
ANR	4058042	Identifier	UProcList		4058021	0					
ANR	4058043	Identifier	Next		4058021	1					
ANR	4058044	ArgumentList			4058021	1					
ANR	4058045	CompoundStatement		7:36:141:141	4058021	1					
ANR	4058046	IfStatement	if ( proc -> is_running ( ) || proc -> is_suspended ( ) )		4058021	0					
ANR	4058047	Condition	proc -> is_running ( ) || proc -> is_suspended ( )	461:6:11042:11083	4058021	0	True				
ANR	4058048	OrExpression	proc -> is_running ( ) || proc -> is_suspended ( )		4058021	0		||			
ANR	4058049	CallExpression	proc -> is_running ( )		4058021	0					
ANR	4058050	Callee	proc -> is_running		4058021	0					
ANR	4058051	PtrMemberAccess	proc -> is_running		4058021	0					
ANR	4058052	Identifier	proc		4058021	0					
ANR	4058053	Identifier	is_running		4058021	1					
ANR	4058054	ArgumentList			4058021	1					
ANR	4058055	CallExpression	proc -> is_suspended ( )		4058021	1					
ANR	4058056	Callee	proc -> is_suspended		4058021	0					
ANR	4058057	PtrMemberAccess	proc -> is_suspended		4058021	0					
ANR	4058058	Identifier	proc		4058021	0					
ANR	4058059	Identifier	is_suspended		4058021	1					
ANR	4058060	ArgumentList			4058021	1					
ANR	4058061	CompoundStatement		8:51:194:194	4058021	1					
ANR	4058062	ReturnStatement	return DO_WAIT ;	462:3:11092:11106	4058021	0	True				
ANR	4058063	Identifier	DO_WAIT		4058021	0					
ANR	4058064	IfStatement	if ( proc -> exited_abnormally ( ) )		4058021	1					
ANR	4058065	Condition	proc -> exited_abnormally ( )	467:6:11224:11248	4058021	0	True				
ANR	4058066	CallExpression	proc -> exited_abnormally ( )		4058021	0					
ANR	4058067	Callee	proc -> exited_abnormally		4058021	0					
ANR	4058068	PtrMemberAccess	proc -> exited_abnormally		4058021	0					
ANR	4058069	Identifier	proc		4058021	0					
ANR	4058070	Identifier	exited_abnormally		4058021	1					
ANR	4058071	ArgumentList			4058021	1					
ANR	4058072	CompoundStatement		14:34:359:359	4058021	1					
ANR	4058073	ExpressionStatement	proc -> store_core ( )	468:3:11257:11275	4058021	0	True				
ANR	4058074	CallExpression	proc -> store_core ( )		4058021	0					
ANR	4058075	Callee	proc -> store_core		4058021	0					
ANR	4058076	PtrMemberAccess	proc -> store_core		4058021	0					
ANR	4058077	Identifier	proc		4058021	0					
ANR	4058078	Identifier	store_core		4058021	1					
ANR	4058079	ArgumentList			4058021	1					
ANR	4058080	ReturnStatement	return DEFAULT ;	469:3:11280:11294	4058021	1	True				
ANR	4058081	Identifier	DEFAULT		4058021	0					
ANR	4058082	ExpressionStatement	MyAlarm . cancel ( )	474:1:11323:11339	4058021	3	True				
ANR	4058083	CallExpression	MyAlarm . cancel ( )		4058021	0					
ANR	4058084	Callee	MyAlarm . cancel		4058021	0					
ANR	4058085	MemberAccess	MyAlarm . cancel		4058021	0					
ANR	4058086	Identifier	MyAlarm		4058021	0					
ANR	4058087	Identifier	cancel		4058021	1					
ANR	4058088	ArgumentList			4058021	1					
ANR	4058089	ReturnStatement	return DEFAULT ;	476:1:11343:11357	4058021	4	True				
ANR	4058090	Identifier	DEFAULT		4058021	0					
ANR	4058091	ReturnType	int		4058021	1					
ANR	4058092	Identifier	terminate_all		4058021	2					
ANR	4058093	ParameterList			4058021	3					
ANR	4058094	CFGEntryNode	ENTRY		4058021		True				
ANR	4058095	CFGExitNode	EXIT		4058021		True				
ANR	4058096	Symbol	DO_WAIT		4058021						
ANR	4058097	Symbol	proc		4058021						
ANR	4058098	Symbol	UProcList . Next		4058021						
ANR	4058099	Symbol	proc -> is_running		4058021						
ANR	4058100	Symbol	MyAlarm		4058021						
ANR	4058101	Symbol	UProcList		4058021						
ANR	4058102	Symbol	proc -> exited_abnormally		4058021						
ANR	4058103	Symbol	proc -> is_suspended		4058021						
ANR	4058104	Symbol	DEFAULT		4058021						
ANR	4058105	Symbol	* proc		4058021						
ANR	4058106	Function	dispose_all	483:0:11446:11762							
ANR	4058107	FunctionDef	dispose_all ()		4058106	0					
ANR	4058108	CompoundStatement		485:0:11464:11762	4058106	0					
ANR	4058109	IdentifierDeclStatement	UserProc * proc ;	486:1:11467:11481	4058106	0	True				
ANR	4058110	IdentifierDecl	* proc		4058106	0					
ANR	4058111	IdentifierDeclType	UserProc *		4058106	0					
ANR	4058112	Identifier	proc		4058106	1					
ANR	4058113	ExpressionStatement	UProcList . Rewind ( )	490:1:11539:11557	4058106	1	True				
ANR	4058114	CallExpression	UProcList . Rewind ( )		4058106	0					
ANR	4058115	Callee	UProcList . Rewind		4058106	0					
ANR	4058116	MemberAccess	UProcList . Rewind		4058106	0					
ANR	4058117	Identifier	UProcList		4058106	0					
ANR	4058118	Identifier	Rewind		4058106	1					
ANR	4058119	ArgumentList			4058106	1					
ANR	4058120	WhileStatement	while ( ( proc = UProcList . Next ( ) ) )		4058106	2					
ANR	4058121	Condition	proc = UProcList . Next ( )	491:8:11567:11591	4058106	0	True				
ANR	4058122	AssignmentExpression	proc = UProcList . Next ( )		4058106	0		=			
ANR	4058123	Identifier	proc		4058106	0					
ANR	4058124	CallExpression	UProcList . Next ( )		4058106	1					
ANR	4058125	Callee	UProcList . Next		4058106	0					
ANR	4058126	MemberAccess	UProcList . Next		4058106	0					
ANR	4058127	Identifier	UProcList		4058106	0					
ANR	4058128	Identifier	Next		4058106	1					
ANR	4058129	ArgumentList			4058106	1					
ANR	4058130	CompoundStatement		7:36:130:130	4058106	1					
ANR	4058131	ExpressionStatement	send_final_status ( proc )	492:2:11599:11624	4058106	0	True				
ANR	4058132	CallExpression	send_final_status ( proc )		4058106	0					
ANR	4058133	Callee	send_final_status		4058106	0					
ANR	4058134	Identifier	send_final_status		4058106	0					
ANR	4058135	ArgumentList	proc		4058106	1					
ANR	4058136	Argument	proc		4058106	0					
ANR	4058137	Identifier	proc		4058106	0					
ANR	4058138	ExpressionStatement	proc -> delete_files ( )	493:2:11628:11648	4058106	1	True				
ANR	4058139	CallExpression	proc -> delete_files ( )		4058106	0					
ANR	4058140	Callee	proc -> delete_files		4058106	0					
ANR	4058141	PtrMemberAccess	proc -> delete_files		4058106	0					
ANR	4058142	Identifier	proc		4058106	0					
ANR	4058143	Identifier	delete_files		4058106	1					
ANR	4058144	ArgumentList			4058106	1					
ANR	4058145	ExpressionStatement	UProcList . DeleteCurrent ( )	494:2:11652:11677	4058106	2	True				
ANR	4058146	CallExpression	UProcList . DeleteCurrent ( )		4058106	0					
ANR	4058147	Callee	UProcList . DeleteCurrent		4058106	0					
ANR	4058148	MemberAccess	UProcList . DeleteCurrent		4058106	0					
ANR	4058149	Identifier	UProcList		4058106	0					
ANR	4058150	Identifier	DeleteCurrent		4058106	1					
ANR	4058151	ArgumentList			4058106	1					
ANR	4058152	Statement	delete	495:2:11681:11686	4058106	3	True				
ANR	4058153	ExpressionStatement	proc	495:9:11688:11692	4058106	4	True				
ANR	4058154	Identifier	proc		4058106	0					
ANR	4058155	ReturnStatement	return DEFAULT ;	498:1:11746:11760	4058106	3	True				
ANR	4058156	Identifier	DEFAULT		4058106	0					
ANR	4058157	ReturnType	int		4058106	1					
ANR	4058158	Identifier	dispose_all		4058106	2					
ANR	4058159	ParameterList			4058106	3					
ANR	4058160	CFGEntryNode	ENTRY		4058106		True				
ANR	4058161	CFGExitNode	EXIT		4058106		True				
ANR	4058162	Symbol	proc		4058106						
ANR	4058163	Symbol	UProcList . Next		4058106						
ANR	4058164	Symbol	UProcList		4058106						
ANR	4058165	Symbol	DEFAULT		4058106						
ANR	4058166	Function	send_final_status	506:0:11859:13234							
ANR	4058167	FunctionDef	send_final_status (UserProc * proc)		4058166	0					
ANR	4058168	CompoundStatement		508:0:11900:13234	4058166	0					
ANR	4058169	IdentifierDeclStatement	void * status ;	510:1:11924:11937	4058166	0	True				
ANR	4058170	IdentifierDecl	* status		4058166	0					
ANR	4058171	IdentifierDeclType	void *		4058166	0					
ANR	4058172	Identifier	status		4058166	1					
ANR	4058173	IdentifierDeclStatement	void * rusage ;	511:1:11940:11953	4058166	1	True				
ANR	4058174	IdentifierDecl	* rusage		4058166	0					
ANR	4058175	IdentifierDeclType	void *		4058166	0					
ANR	4058176	Identifier	rusage		4058166	1					
ANR	4058177	IdentifierDeclStatement	int id ;	512:1:11956:11964	4058166	2	True				
ANR	4058178	IdentifierDecl	id		4058166	0					
ANR	4058179	IdentifierDeclType	int		4058166	0					
ANR	4058180	Identifier	id		4058166	1					
ANR	4058181	IdentifierDeclStatement	int cluster_no = proc -> get_cluster ( ) ;	513:1:11967:12005	4058166	3	True				
ANR	4058182	IdentifierDecl	cluster_no = proc -> get_cluster ( )		4058166	0					
ANR	4058183	IdentifierDeclType	int		4058166	0					
ANR	4058184	Identifier	cluster_no		4058166	1					
ANR	4058185	AssignmentExpression	cluster_no = proc -> get_cluster ( )		4058166	2		=			
ANR	4058186	Identifier	cluster_no		4058166	0					
ANR	4058187	CallExpression	proc -> get_cluster ( )		4058166	1					
ANR	4058188	Callee	proc -> get_cluster		4058166	0					
ANR	4058189	PtrMemberAccess	proc -> get_cluster		4058166	0					
ANR	4058190	Identifier	proc		4058166	0					
ANR	4058191	Identifier	get_cluster		4058166	1					
ANR	4058192	ArgumentList			4058166	1					
ANR	4058193	IdentifierDeclStatement	int proc_no = proc -> get_proc ( ) ;	514:1:12008:12040	4058166	4	True				
ANR	4058194	IdentifierDecl	proc_no = proc -> get_proc ( )		4058166	0					
ANR	4058195	IdentifierDeclType	int		4058166	0					
ANR	4058196	Identifier	proc_no		4058166	1					
ANR	4058197	AssignmentExpression	proc_no = proc -> get_proc ( )		4058166	2		=			
ANR	4058198	Identifier	proc_no		4058166	0					
ANR	4058199	CallExpression	proc -> get_proc ( )		4058166	1					
ANR	4058200	Callee	proc -> get_proc		4058166	0					
ANR	4058201	PtrMemberAccess	proc -> get_proc		4058166	0					
ANR	4058202	Identifier	proc		4058166	0					
ANR	4058203	Identifier	get_proc		4058166	1					
ANR	4058204	ArgumentList			4058166	1					
ANR	4058205	ExpressionStatement	"dprintf ( D_ALWAYS , ""Sending final status for process %d.%d\\n"" , cluster_no , proc_no )"	517:1:12045:12132	4058166	5	True				
ANR	4058206	CallExpression	"dprintf ( D_ALWAYS , ""Sending final status for process %d.%d\\n"" , cluster_no , proc_no )"		4058166	0					
ANR	4058207	Callee	dprintf		4058166	0					
ANR	4058208	Identifier	dprintf		4058166	0					
ANR	4058209	ArgumentList	D_ALWAYS		4058166	1					
ANR	4058210	Argument	D_ALWAYS		4058166	0					
ANR	4058211	Identifier	D_ALWAYS		4058166	0					
ANR	4058212	Argument	"""Sending final status for process %d.%d\\n"""		4058166	1					
ANR	4058213	PrimaryExpression	"""Sending final status for process %d.%d\\n"""		4058166	0					
ANR	4058214	Argument	cluster_no		4058166	2					
ANR	4058215	Identifier	cluster_no		4058166	0					
ANR	4058216	Argument	proc_no		4058166	3					
ANR	4058217	Identifier	proc_no		4058166	0					
ANR	4058218	ExpressionStatement	image_size = proc -> get_image_size ( )	529:1:12534:12569	4058166	6	True				
ANR	4058219	AssignmentExpression	image_size = proc -> get_image_size ( )		4058166	0		=			
ANR	4058220	Identifier	image_size		4058166	0					
ANR	4058221	CallExpression	proc -> get_image_size ( )		4058166	1					
ANR	4058222	Callee	proc -> get_image_size		4058166	0					
ANR	4058223	PtrMemberAccess	proc -> get_image_size		4058166	0					
ANR	4058224	Identifier	proc		4058166	0					
ANR	4058225	Identifier	get_image_size		4058166	1					
ANR	4058226	ArgumentList			4058166	1					
ANR	4058227	IfStatement	if ( image_size > 0 )		4058166	7					
ANR	4058228	Condition	image_size > 0	530:6:12577:12590	4058166	0	True				
ANR	4058229	RelationalExpression	image_size > 0		4058166	0		>			
ANR	4058230	Identifier	image_size		4058166	0					
ANR	4058231	PrimaryExpression	0		4058166	1					
ANR	4058232	CompoundStatement		23:23:693:693	4058166	1					
ANR	4058233	ExpressionStatement	( void ) REMOTE_CONDOR_image_size ( image_size )	531:2:12598:12642	4058166	0	True				
ANR	4058234	CastExpression	( void ) REMOTE_CONDOR_image_size ( image_size )		4058166	0					
ANR	4058235	CastTarget	void		4058166	0					
ANR	4058236	CallExpression	REMOTE_CONDOR_image_size ( image_size )		4058166	1					
ANR	4058237	Callee	REMOTE_CONDOR_image_size		4058166	0					
ANR	4058238	Identifier	REMOTE_CONDOR_image_size		4058166	0					
ANR	4058239	ArgumentList	image_size		4058166	1					
ANR	4058240	Argument	image_size		4058166	0					
ANR	4058241	Identifier	image_size		4058166	0					
ANR	4058242	ExpressionStatement	status = proc -> bsd_exit_status ( )	536:1:12716:12748	4058166	8	True				
ANR	4058243	AssignmentExpression	status = proc -> bsd_exit_status ( )		4058166	0		=			
ANR	4058244	Identifier	status		4058166	0					
ANR	4058245	CallExpression	proc -> bsd_exit_status ( )		4058166	1					
ANR	4058246	Callee	proc -> bsd_exit_status		4058166	0					
ANR	4058247	PtrMemberAccess	proc -> bsd_exit_status		4058166	0					
ANR	4058248	Identifier	proc		4058166	0					
ANR	4058249	Identifier	bsd_exit_status		4058166	1					
ANR	4058250	ArgumentList			4058166	1					
ANR	4058251	IfStatement	if ( proc -> get_class ( ) == CONDOR_UNIVERSE_PVM )		4058166	9					
ANR	4058252	Condition	proc -> get_class ( ) == CONDOR_UNIVERSE_PVM	537:5:12755:12794	4058166	0	True				
ANR	4058253	EqualityExpression	proc -> get_class ( ) == CONDOR_UNIVERSE_PVM		4058166	0		==			
ANR	4058254	CallExpression	proc -> get_class ( )		4058166	0					
ANR	4058255	Callee	proc -> get_class		4058166	0					
ANR	4058256	PtrMemberAccess	proc -> get_class		4058166	0					
ANR	4058257	Identifier	proc		4058166	0					
ANR	4058258	Identifier	get_class		4058166	1					
ANR	4058259	ArgumentList			4058166	1					
ANR	4058260	Identifier	CONDOR_UNIVERSE_PVM		4058166	1					
ANR	4058261	CompoundStatement		30:48:897:897	4058166	1					
ANR	4058262	ExpressionStatement	rusage = proc -> accumulated_rusage ( )	538:2:12802:12837	4058166	0	True				
ANR	4058263	AssignmentExpression	rusage = proc -> accumulated_rusage ( )		4058166	0		=			
ANR	4058264	Identifier	rusage		4058166	0					
ANR	4058265	CallExpression	proc -> accumulated_rusage ( )		4058166	1					
ANR	4058266	Callee	proc -> accumulated_rusage		4058166	0					
ANR	4058267	PtrMemberAccess	proc -> accumulated_rusage		4058166	0					
ANR	4058268	Identifier	proc		4058166	0					
ANR	4058269	Identifier	accumulated_rusage		4058166	1					
ANR	4058270	ArgumentList			4058166	1					
ANR	4058271	ExpressionStatement	id = proc -> get_id ( )	539:2:12863:12882	4058166	1	True				
ANR	4058272	AssignmentExpression	id = proc -> get_id ( )		4058166	0		=			
ANR	4058273	Identifier	id		4058166	0					
ANR	4058274	CallExpression	proc -> get_id ( )		4058166	1					
ANR	4058275	Callee	proc -> get_id		4058166	0					
ANR	4058276	PtrMemberAccess	proc -> get_id		4058166	0					
ANR	4058277	Identifier	proc		4058166	0					
ANR	4058278	Identifier	get_id		4058166	1					
ANR	4058279	ArgumentList			4058166	1					
ANR	4058280	ExpressionStatement	"( void ) REMOTE_CONDOR_subproc_status ( ( int ) id , ( int * ) status , ( struct rusage * ) rusage )"	540:2:12886:12972	4058166	2	True				
ANR	4058281	CastExpression	"( void ) REMOTE_CONDOR_subproc_status ( ( int ) id , ( int * ) status , ( struct rusage * ) rusage )"		4058166	0					
ANR	4058282	CastTarget	void		4058166	0					
ANR	4058283	CallExpression	"REMOTE_CONDOR_subproc_status ( ( int ) id , ( int * ) status , ( struct rusage * ) rusage )"		4058166	1					
ANR	4058284	Callee	REMOTE_CONDOR_subproc_status		4058166	0					
ANR	4058285	Identifier	REMOTE_CONDOR_subproc_status		4058166	0					
ANR	4058286	ArgumentList	( int ) id		4058166	1					
ANR	4058287	Argument	( int ) id		4058166	0					
ANR	4058288	CastExpression	( int ) id		4058166	0					
ANR	4058289	CastTarget	int		4058166	0					
ANR	4058290	Identifier	id		4058166	1					
ANR	4058291	Argument	( int * ) status		4058166	1					
ANR	4058292	CastExpression	( int * ) status		4058166	0					
ANR	4058293	CastTarget	int *		4058166	0					
ANR	4058294	Identifier	status		4058166	1					
ANR	4058295	Argument	( struct rusage * ) rusage		4058166	2					
ANR	4058296	CastExpression	( struct rusage * ) rusage		4058166	0					
ANR	4058297	CastTarget	struct rusage *		4058166	0					
ANR	4058298	Identifier	rusage		4058166	1					
ANR	4058299	ElseStatement	else		4058166	0					
ANR	4058300	CompoundStatement		35:8:1081:1081	4058166	0					
ANR	4058301	ExpressionStatement	rusage = proc -> guaranteed_rusage ( )	543:2:12986:13020	4058166	0	True				
ANR	4058302	AssignmentExpression	rusage = proc -> guaranteed_rusage ( )		4058166	0		=			
ANR	4058303	Identifier	rusage		4058166	0					
ANR	4058304	CallExpression	proc -> guaranteed_rusage ( )		4058166	1					
ANR	4058305	Callee	proc -> guaranteed_rusage		4058166	0					
ANR	4058306	PtrMemberAccess	proc -> guaranteed_rusage		4058166	0					
ANR	4058307	Identifier	proc		4058166	0					
ANR	4058308	Identifier	guaranteed_rusage		4058166	1					
ANR	4058309	ArgumentList			4058166	1					
ANR	4058310	ExpressionStatement	"( void ) REMOTE_CONDOR_reallyexit ( ( int * ) status , ( struct rusage * ) rusage )"	544:2:13058:13127	4058166	1	True				
ANR	4058311	CastExpression	"( void ) REMOTE_CONDOR_reallyexit ( ( int * ) status , ( struct rusage * ) rusage )"		4058166	0					
ANR	4058312	CastTarget	void		4058166	0					
ANR	4058313	CallExpression	"REMOTE_CONDOR_reallyexit ( ( int * ) status , ( struct rusage * ) rusage )"		4058166	1					
ANR	4058314	Callee	REMOTE_CONDOR_reallyexit		4058166	0					
ANR	4058315	Identifier	REMOTE_CONDOR_reallyexit		4058166	0					
ANR	4058316	ArgumentList	( int * ) status		4058166	1					
ANR	4058317	Argument	( int * ) status		4058166	0					
ANR	4058318	CastExpression	( int * ) status		4058166	0					
ANR	4058319	CastTarget	int *		4058166	0					
ANR	4058320	Identifier	status		4058166	1					
ANR	4058321	Argument	( struct rusage * ) rusage		4058166	1					
ANR	4058322	CastExpression	( struct rusage * ) rusage		4058166	0					
ANR	4058323	CastTarget	struct rusage *		4058166	0					
ANR	4058324	Identifier	rusage		4058166	1					
ANR	4058325	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Done sending final status for process %d.%d\\n"" , cluster_no , proc_no )"	547:1:13134:13229	4058166	10	True				
ANR	4058326	CallExpression	"dprintf ( D_FULLDEBUG , ""Done sending final status for process %d.%d\\n"" , cluster_no , proc_no )"		4058166	0					
ANR	4058327	Callee	dprintf		4058166	0					
ANR	4058328	Identifier	dprintf		4058166	0					
ANR	4058329	ArgumentList	D_FULLDEBUG		4058166	1					
ANR	4058330	Argument	D_FULLDEBUG		4058166	0					
ANR	4058331	Identifier	D_FULLDEBUG		4058166	0					
ANR	4058332	Argument	"""Done sending final status for process %d.%d\\n"""		4058166	1					
ANR	4058333	PrimaryExpression	"""Done sending final status for process %d.%d\\n"""		4058166	0					
ANR	4058334	Argument	cluster_no		4058166	2					
ANR	4058335	Identifier	cluster_no		4058166	0					
ANR	4058336	Argument	proc_no		4058166	3					
ANR	4058337	Identifier	proc_no		4058166	0					
ANR	4058338	ReturnType	void		4058166	1					
ANR	4058339	Identifier	send_final_status		4058166	2					
ANR	4058340	ParameterList	UserProc * proc		4058166	3					
ANR	4058341	Parameter	UserProc * proc	507:19:11883:11896	4058166	0	True				
ANR	4058342	ParameterType	UserProc *		4058166	0					
ANR	4058343	Identifier	proc		4058166	1					
ANR	4058344	CFGEntryNode	ENTRY		4058166		True				
ANR	4058345	CFGExitNode	EXIT		4058166		True				
ANR	4058346	Symbol	proc -> get_image_size		4058166						
ANR	4058347	Symbol	rusage		4058166						
ANR	4058348	Symbol	proc		4058166						
ANR	4058349	Symbol	proc -> get_class		4058166						
ANR	4058350	Symbol	image_size		4058166						
ANR	4058351	Symbol	proc_no		4058166						
ANR	4058352	Symbol	CONDOR_UNIVERSE_PVM		4058166						
ANR	4058353	Symbol	D_ALWAYS		4058166						
ANR	4058354	Symbol	proc -> accumulated_rusage		4058166						
ANR	4058355	Symbol	D_FULLDEBUG		4058166						
ANR	4058356	Symbol	proc -> get_id		4058166						
ANR	4058357	Symbol	* proc		4058166						
ANR	4058358	Symbol	proc -> get_proc		4058166						
ANR	4058359	Symbol	proc -> bsd_exit_status		4058166						
ANR	4058360	Symbol	cluster_no		4058166						
ANR	4058361	Symbol	proc -> get_cluster		4058166						
ANR	4058362	Symbol	id		4058166						
ANR	4058363	Symbol	proc -> guaranteed_rusage		4058166						
ANR	4058364	Symbol	status		4058166						
ANR	4058365	Function	reaper	557:0:13352:14162							
ANR	4058366	FunctionDef	reaper ()		4058365	0					
ANR	4058367	CompoundStatement		559:0:13365:14162	4058365	0					
ANR	4058368	IdentifierDeclStatement	int st ;	560:1:13368:13376	4058365	0	True				
ANR	4058369	IdentifierDecl	st		4058365	0					
ANR	4058370	IdentifierDeclType	int		4058365	0					
ANR	4058371	Identifier	st		4058365	1					
ANR	4058372	IdentifierDeclStatement	pid_t pid ;	561:1:13379:13389	4058365	1	True				
ANR	4058373	IdentifierDecl	pid		4058365	0					
ANR	4058374	IdentifierDeclType	pid_t		4058365	0					
ANR	4058375	Identifier	pid		4058365	1					
ANR	4058376	IdentifierDeclStatement	UserProc * proc ;	562:1:13392:13406	4058365	2	True				
ANR	4058377	IdentifierDecl	* proc		4058365	0					
ANR	4058378	IdentifierDeclType	UserProc *		4058365	0					
ANR	4058379	Identifier	proc		4058365	1					
ANR	4058380	IdentifierDeclStatement	int continue_fsa = - 2 ;	563:1:13409:13430	4058365	3	True				
ANR	4058381	IdentifierDecl	continue_fsa = - 2		4058365	0					
ANR	4058382	IdentifierDeclType	int		4058365	0					
ANR	4058383	Identifier	continue_fsa		4058365	1					
ANR	4058384	AssignmentExpression	continue_fsa = - 2		4058365	2		=			
ANR	4058385	Identifier	continue_fsa		4058365	0					
ANR	4058386	UnaryOperationExpression	- 2		4058365	1					
ANR	4058387	UnaryOperator	-		4058365	0					
ANR	4058388	PrimaryExpression	2		4058365	1					
ANR	4058389	ExpressionStatement	MyAlarm . cancel ( )	565:1:13434:13450	4058365	4	True				
ANR	4058390	CallExpression	MyAlarm . cancel ( )		4058365	0					
ANR	4058391	Callee	MyAlarm . cancel		4058365	0					
ANR	4058392	MemberAccess	MyAlarm . cancel		4058365	0					
ANR	4058393	Identifier	MyAlarm		4058365	0					
ANR	4058394	Identifier	cancel		4058365	1					
ANR	4058395	ArgumentList			4058365	1					
ANR	4058396	ForStatement	for ( ; ; )		4058365	5					
ANR	4058397	CompoundStatement		9:10:141:141	4058365	0					
ANR	4058398	ExpressionStatement	"pid = waitpid ( ANY_PID , & st , WNOHANG )"	569:1:13511:13545	4058365	0	True				
ANR	4058399	AssignmentExpression	"pid = waitpid ( ANY_PID , & st , WNOHANG )"		4058365	0		=			
ANR	4058400	Identifier	pid		4058365	0					
ANR	4058401	CallExpression	"waitpid ( ANY_PID , & st , WNOHANG )"		4058365	1					
ANR	4058402	Callee	waitpid		4058365	0					
ANR	4058403	Identifier	waitpid		4058365	0					
ANR	4058404	ArgumentList	ANY_PID		4058365	1					
ANR	4058405	Argument	ANY_PID		4058365	0					
ANR	4058406	Identifier	ANY_PID		4058365	0					
ANR	4058407	Argument	& st		4058365	1					
ANR	4058408	UnaryOperationExpression	& st		4058365	0					
ANR	4058409	UnaryOperator	&		4058365	0					
ANR	4058410	Identifier	st		4058365	1					
ANR	4058411	Argument	WNOHANG		4058365	2					
ANR	4058412	Identifier	WNOHANG		4058365	0					
ANR	4058413	IfStatement	if ( pid == - 1 )		4058365	1					
ANR	4058414	Condition	pid == - 1	571:5:13553:13561	4058365	0	True				
ANR	4058415	EqualityExpression	pid == - 1		4058365	0		==			
ANR	4058416	Identifier	pid		4058365	0					
ANR	4058417	UnaryOperationExpression	- 1		4058365	1					
ANR	4058418	UnaryOperator	-		4058365	0					
ANR	4058419	PrimaryExpression	1		4058365	1					
ANR	4058420	CompoundStatement		13:17:199:199	4058365	1					
ANR	4058421	IfStatement	if ( errno == EINTR )		4058365	0					
ANR	4058422	Condition	errno == EINTR	572:7:13574:13587	4058365	0	True				
ANR	4058423	EqualityExpression	errno == EINTR		4058365	0		==			
ANR	4058424	Identifier	errno		4058365	0					
ANR	4058425	Identifier	EINTR		4058365	1					
ANR	4058426	CompoundStatement		14:24:225:225	4058365	1					
ANR	4058427	ContinueStatement	continue ;	573:3:13596:13604	4058365	0	True				
ANR	4058428	ElseStatement	else		4058365	0					
ANR	4058429	CompoundStatement		16:9:249:249	4058365	0					
ANR	4058430	BreakStatement	break ;	575:3:13620:13625	4058365	0	True				
ANR	4058431	IfStatement	if ( pid == 0 )		4058365	2					
ANR	4058432	Condition	pid == 0	579:5:13640:13647	4058365	0	True				
ANR	4058433	EqualityExpression	pid == 0		4058365	0		==			
ANR	4058434	Identifier	pid		4058365	0					
ANR	4058435	PrimaryExpression	0		4058365	1					
ANR	4058436	CompoundStatement		21:16:285:285	4058365	1					
ANR	4058437	BreakStatement	break ;	580:2:13655:13660	4058365	0	True				
ANR	4058438	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Process %d exited, searching process list...\\n"" , pid )"	584:1:13712:13793	4058365	3	True				
ANR	4058439	CallExpression	"dprintf ( D_FULLDEBUG , ""Process %d exited, searching process list...\\n"" , pid )"		4058365	0					
ANR	4058440	Callee	dprintf		4058365	0					
ANR	4058441	Identifier	dprintf		4058365	0					
ANR	4058442	ArgumentList	D_FULLDEBUG		4058365	1					
ANR	4058443	Argument	D_FULLDEBUG		4058365	0					
ANR	4058444	Identifier	D_FULLDEBUG		4058365	0					
ANR	4058445	Argument	"""Process %d exited, searching process list...\\n"""		4058365	1					
ANR	4058446	PrimaryExpression	"""Process %d exited, searching process list...\\n"""		4058365	0					
ANR	4058447	Argument	pid		4058365	2					
ANR	4058448	Identifier	pid		4058365	0					
ANR	4058449	ExpressionStatement	UProcList . Rewind ( )	588:1:13797:13815	4058365	4	True				
ANR	4058450	CallExpression	UProcList . Rewind ( )		4058365	0					
ANR	4058451	Callee	UProcList . Rewind		4058365	0					
ANR	4058452	MemberAccess	UProcList . Rewind		4058365	0					
ANR	4058453	Identifier	UProcList		4058365	0					
ANR	4058454	Identifier	Rewind		4058365	1					
ANR	4058455	ArgumentList			4058365	1					
ANR	4058456	WhileStatement	while ( ( proc = UProcList . Next ( ) ) )		4058365	5					
ANR	4058457	Condition	proc = UProcList . Next ( )	589:8:13825:13849	4058365	0	True				
ANR	4058458	AssignmentExpression	proc = UProcList . Next ( )		4058365	0		=			
ANR	4058459	Identifier	proc		4058365	0					
ANR	4058460	CallExpression	UProcList . Next ( )		4058365	1					
ANR	4058461	Callee	UProcList . Next		4058365	0					
ANR	4058462	MemberAccess	UProcList . Next		4058365	0					
ANR	4058463	Identifier	UProcList		4058365	0					
ANR	4058464	Identifier	Next		4058365	1					
ANR	4058465	ArgumentList			4058365	1					
ANR	4058466	CompoundStatement		31:36:487:487	4058365	1					
ANR	4058467	IfStatement	if ( proc -> get_pid ( ) == pid )		4058365	0					
ANR	4058468	Condition	proc -> get_pid ( ) == pid	590:6:13861:13882	4058365	0	True				
ANR	4058469	EqualityExpression	proc -> get_pid ( ) == pid		4058365	0		==			
ANR	4058470	CallExpression	proc -> get_pid ( )		4058365	0					
ANR	4058471	Callee	proc -> get_pid		4058365	0					
ANR	4058472	PtrMemberAccess	proc -> get_pid		4058365	0					
ANR	4058473	Identifier	proc		4058365	0					
ANR	4058474	Identifier	get_pid		4058365	1					
ANR	4058475	ArgumentList			4058365	1					
ANR	4058476	Identifier	pid		4058365	1					
ANR	4058477	CompoundStatement		32:31:520:520	4058365	1					
ANR	4058478	BreakStatement	break ;	591:3:13891:13896	4058365	0	True				
ANR	4058479	IfStatement	if ( proc != NULL )		4058365	6					
ANR	4058480	Condition	proc != NULL	596:5:13964:13975	4058365	0	True				
ANR	4058481	EqualityExpression	proc != NULL		4058365	0		!=			
ANR	4058482	Identifier	proc		4058365	0					
ANR	4058483	Identifier	NULL		4058365	1					
ANR	4058484	CompoundStatement		38:20:613:613	4058365	1					
ANR	4058485	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Found object for process %d\\n"" , pid )"	597:2:13983:14043	4058365	0	True				
ANR	4058486	CallExpression	"dprintf ( D_FULLDEBUG , ""Found object for process %d\\n"" , pid )"		4058365	0					
ANR	4058487	Callee	dprintf		4058365	0					
ANR	4058488	Identifier	dprintf		4058365	0					
ANR	4058489	ArgumentList	D_FULLDEBUG		4058365	1					
ANR	4058490	Argument	D_FULLDEBUG		4058365	0					
ANR	4058491	Identifier	D_FULLDEBUG		4058365	0					
ANR	4058492	Argument	"""Found object for process %d\\n"""		4058365	1					
ANR	4058493	PrimaryExpression	"""Found object for process %d\\n"""		4058365	0					
ANR	4058494	Argument	pid		4058365	2					
ANR	4058495	Identifier	pid		4058365	0					
ANR	4058496	ExpressionStatement	continue_fsa = 0	598:2:14048:14064	4058365	1	True				
ANR	4058497	AssignmentExpression	continue_fsa = 0		4058365	0		=			
ANR	4058498	Identifier	continue_fsa		4058365	0					
ANR	4058499	PrimaryExpression	0		4058365	1					
ANR	4058500	ExpressionStatement	proc -> handle_termination ( st )	599:2:14068:14098	4058365	2	True				
ANR	4058501	CallExpression	proc -> handle_termination ( st )		4058365	0					
ANR	4058502	Callee	proc -> handle_termination		4058365	0					
ANR	4058503	PtrMemberAccess	proc -> handle_termination		4058365	0					
ANR	4058504	Identifier	proc		4058365	0					
ANR	4058505	Identifier	handle_termination		4058365	1					
ANR	4058506	ArgumentList	st		4058365	1					
ANR	4058507	Argument	st		4058365	0					
ANR	4058508	Identifier	st		4058365	0					
ANR	4058509	ReturnStatement	return ( continue_fsa ) ;	604:1:14140:14160	4058365	6	True				
ANR	4058510	Identifier	continue_fsa		4058365	0					
ANR	4058511	ReturnType	int		4058365	1					
ANR	4058512	Identifier	reaper		4058365	2					
ANR	4058513	ParameterList			4058365	3					
ANR	4058514	CFGEntryNode	ENTRY		4058365		True				
ANR	4058515	CFGExitNode	EXIT		4058365		True				
ANR	4058516	InfiniteForNode	true		4058365		True				
ANR	4058517	Symbol	st		4058365						
ANR	4058518	Symbol	proc		4058365						
ANR	4058519	Symbol	errno		4058365						
ANR	4058520	Symbol	UProcList . Next		4058365						
ANR	4058521	Symbol	NULL		4058365						
ANR	4058522	Symbol	continue_fsa		4058365						
ANR	4058523	Symbol	MyAlarm		4058365						
ANR	4058524	Symbol	EINTR		4058365						
ANR	4058525	Symbol	pid		4058365						
ANR	4058526	Symbol	& st		4058365						
ANR	4058527	Symbol	D_FULLDEBUG		4058365						
ANR	4058528	Symbol	* proc		4058365						
ANR	4058529	Symbol	UProcList		4058365						
ANR	4058530	Symbol	WNOHANG		4058365						
ANR	4058531	Symbol	ANY_PID		4058365						
ANR	4058532	Symbol	proc -> get_pid		4058365						
ANR	4058533	Symbol	waitpid		4058365						
ANR	4058534	Function	susp_ckpt_timer	611:0:14243:14342							
ANR	4058535	FunctionDef	susp_ckpt_timer ()		4058534	0					
ANR	4058536	CompoundStatement		613:0:14265:14342	4058534	0					
ANR	4058537	ExpressionStatement	MyAlarm . cancel ( )	614:1:14268:14284	4058534	0	True				
ANR	4058538	CallExpression	MyAlarm . cancel ( )		4058534	0					
ANR	4058539	Callee	MyAlarm . cancel		4058534	0					
ANR	4058540	MemberAccess	MyAlarm . cancel		4058534	0					
ANR	4058541	Identifier	MyAlarm		4058534	0					
ANR	4058542	Identifier	cancel		4058534	1					
ANR	4058543	ArgumentList			4058534	1					
ANR	4058544	ReturnStatement	return ( 0 ) ;	615:1:14331:14340	4058534	1	True				
ANR	4058545	PrimaryExpression	0		4058534	0					
ANR	4058546	ReturnType	int		4058534	1					
ANR	4058547	Identifier	susp_ckpt_timer		4058534	2					
ANR	4058548	ParameterList			4058534	3					
ANR	4058549	CFGEntryNode	ENTRY		4058534		True				
ANR	4058550	CFGExitNode	EXIT		4058534		True				
ANR	4058551	Symbol	MyAlarm		4058534						
ANR	4058552	Function	susp_all	622:0:14415:15927							
ANR	4058553	FunctionDef	susp_all ()		4058552	0					
ANR	4058554	CompoundStatement		624:0:14430:15927	4058552	0					
ANR	4058555	IdentifierDeclStatement	"char * susp_msg = ""TISABH Starter: Suspended user job: "" ;"	625:1:14433:14488	4058552	0	True				
ANR	4058556	IdentifierDecl	"* susp_msg = ""TISABH Starter: Suspended user job: """		4058552	0					
ANR	4058557	IdentifierDeclType	char *		4058552	0					
ANR	4058558	Identifier	susp_msg		4058552	1					
ANR	4058559	AssignmentExpression	"* susp_msg = ""TISABH Starter: Suspended user job: """		4058552	2		=			
ANR	4058560	Identifier	susp_msg		4058552	0					
ANR	4058561	PrimaryExpression	"""TISABH Starter: Suspended user job: """		4058552	1					
ANR	4058562	IdentifierDeclStatement	"char * unsusp_msg = ""TISABH Starter: Unsuspended user job."" ;"	626:1:14491:14549	4058552	1	True				
ANR	4058563	IdentifierDecl	"* unsusp_msg = ""TISABH Starter: Unsuspended user job."""		4058552	0					
ANR	4058564	IdentifierDeclType	char *		4058552	0					
ANR	4058565	Identifier	unsusp_msg		4058552	1					
ANR	4058566	AssignmentExpression	"* unsusp_msg = ""TISABH Starter: Unsuspended user job."""		4058552	2		=			
ANR	4058567	Identifier	unsusp_msg		4058552	0					
ANR	4058568	PrimaryExpression	"""TISABH Starter: Unsuspended user job."""		4058552	1					
ANR	4058569	IdentifierDeclStatement	char msg [ 4096 ] ;	627:1:14552:14566	4058552	2	True				
ANR	4058570	IdentifierDecl	msg [ 4096 ]		4058552	0					
ANR	4058571	IdentifierDeclType	char [ 4096 ]		4058552	0					
ANR	4058572	Identifier	msg		4058552	1					
ANR	4058573	PrimaryExpression	4096		4058552	2					
ANR	4058574	IdentifierDeclStatement	UserProc * proc ;	628:1:14569:14583	4058552	3	True				
ANR	4058575	IdentifierDecl	* proc		4058552	0					
ANR	4058576	IdentifierDeclType	UserProc *		4058552	0					
ANR	4058577	Identifier	proc		4058552	1					
ANR	4058578	IdentifierDeclStatement	int sum ;	629:1:14586:14593	4058552	4	True				
ANR	4058579	IdentifierDecl	sum		4058552	0					
ANR	4058580	IdentifierDeclType	int		4058552	0					
ANR	4058581	Identifier	sum		4058552	1					
ANR	4058582	ExpressionStatement	stop_all ( )	631:1:14597:14607	4058552	5	True				
ANR	4058583	CallExpression	stop_all ( )		4058552	0					
ANR	4058584	Callee	stop_all		4058552	0					
ANR	4058585	Identifier	stop_all		4058552	0					
ANR	4058586	ArgumentList			4058552	1					
ANR	4058587	ExpressionStatement	sum = 0	634:1:14664:14671	4058552	6	True				
ANR	4058588	AssignmentExpression	sum = 0		4058552	0		=			
ANR	4058589	Identifier	sum		4058552	0					
ANR	4058590	PrimaryExpression	0		4058552	1					
ANR	4058591	ExpressionStatement	UProcList . Rewind ( )	635:1:14674:14692	4058552	7	True				
ANR	4058592	CallExpression	UProcList . Rewind ( )		4058552	0					
ANR	4058593	Callee	UProcList . Rewind		4058552	0					
ANR	4058594	MemberAccess	UProcList . Rewind		4058552	0					
ANR	4058595	Identifier	UProcList		4058552	0					
ANR	4058596	Identifier	Rewind		4058552	1					
ANR	4058597	ArgumentList			4058552	1					
ANR	4058598	WhileStatement	while ( ( proc = UProcList . Next ( ) ) )		4058552	8					
ANR	4058599	Condition	proc = UProcList . Next ( )	636:8:14702:14726	4058552	0	True				
ANR	4058600	AssignmentExpression	proc = UProcList . Next ( )		4058552	0		=			
ANR	4058601	Identifier	proc		4058552	0					
ANR	4058602	CallExpression	UProcList . Next ( )		4058552	1					
ANR	4058603	Callee	UProcList . Next		4058552	0					
ANR	4058604	MemberAccess	UProcList . Next		4058552	0					
ANR	4058605	Identifier	UProcList		4058552	0					
ANR	4058606	Identifier	Next		4058552	1					
ANR	4058607	ArgumentList			4058552	1					
ANR	4058608	CompoundStatement		13:36:299:299	4058552	1					
ANR	4058609	IfStatement	if ( proc -> is_suspended ( ) )		4058552	0					
ANR	4058610	Condition	proc -> is_suspended ( )	637:6:14738:14757	4058552	0	True				
ANR	4058611	CallExpression	proc -> is_suspended ( )		4058552	0					
ANR	4058612	Callee	proc -> is_suspended		4058552	0					
ANR	4058613	PtrMemberAccess	proc -> is_suspended		4058552	0					
ANR	4058614	Identifier	proc		4058552	0					
ANR	4058615	Identifier	is_suspended		4058552	1					
ANR	4058616	ArgumentList			4058552	1					
ANR	4058617	CompoundStatement		14:29:330:330	4058552	1					
ANR	4058618	ExpressionStatement	sum += proc -> get_num_pids_suspended ( )	638:3:14766:14803	4058552	0	True				
ANR	4058619	AssignmentExpression	sum += proc -> get_num_pids_suspended ( )		4058552	0		+=			
ANR	4058620	Identifier	sum		4058552	0					
ANR	4058621	CallExpression	proc -> get_num_pids_suspended ( )		4058552	1					
ANR	4058622	Callee	proc -> get_num_pids_suspended		4058552	0					
ANR	4058623	PtrMemberAccess	proc -> get_num_pids_suspended		4058552	0					
ANR	4058624	Identifier	proc		4058552	0					
ANR	4058625	Identifier	get_num_pids_suspended		4058552	1					
ANR	4058626	ArgumentList			4058552	1					
ANR	4058627	ExpressionStatement	"sprintf ( msg , ""%s%d\\n"" , susp_msg , sum )"	654:1:15404:15441	4058552	9	True				
ANR	4058628	CallExpression	"sprintf ( msg , ""%s%d\\n"" , susp_msg , sum )"		4058552	0					
ANR	4058629	Callee	sprintf		4058552	0					
ANR	4058630	Identifier	sprintf		4058552	0					
ANR	4058631	ArgumentList	msg		4058552	1					
ANR	4058632	Argument	msg		4058552	0					
ANR	4058633	Identifier	msg		4058552	0					
ANR	4058634	Argument	"""%s%d\\n"""		4058552	1					
ANR	4058635	PrimaryExpression	"""%s%d\\n"""		4058552	0					
ANR	4058636	Argument	susp_msg		4058552	2					
ANR	4058637	Identifier	susp_msg		4058552	0					
ANR	4058638	Argument	sum		4058552	3					
ANR	4058639	Identifier	sum		4058552	0					
ANR	4058640	ExpressionStatement	"write ( CLIENT_LOG , msg , strlen ( msg ) )"	656:1:15519:15554	4058552	10	True				
ANR	4058641	CallExpression	"write ( CLIENT_LOG , msg , strlen ( msg ) )"		4058552	0					
ANR	4058642	Callee	write		4058552	0					
ANR	4058643	Identifier	write		4058552	0					
ANR	4058644	ArgumentList	CLIENT_LOG		4058552	1					
ANR	4058645	Argument	CLIENT_LOG		4058552	0					
ANR	4058646	Identifier	CLIENT_LOG		4058552	0					
ANR	4058647	Argument	msg		4058552	1					
ANR	4058648	Identifier	msg		4058552	0					
ANR	4058649	Argument	strlen ( msg )		4058552	2					
ANR	4058650	CallExpression	strlen ( msg )		4058552	0					
ANR	4058651	Callee	strlen		4058552	0					
ANR	4058652	Identifier	strlen		4058552	0					
ANR	4058653	ArgumentList	msg		4058552	1					
ANR	4058654	Argument	msg		4058552	0					
ANR	4058655	Identifier	msg		4058552	0					
ANR	4058656	ExpressionStatement	susp_self ( )	658:1:15558:15569	4058552	11	True				
ANR	4058657	CallExpression	susp_self ( )		4058552	0					
ANR	4058658	Callee	susp_self		4058552	0					
ANR	4058659	Identifier	susp_self		4058552	0					
ANR	4058660	ArgumentList			4058552	1					
ANR	4058661	ExpressionStatement	"sprintf ( msg , ""%s\\n"" , unsusp_msg )"	664:1:15751:15783	4058552	12	True				
ANR	4058662	CallExpression	"sprintf ( msg , ""%s\\n"" , unsusp_msg )"		4058552	0					
ANR	4058663	Callee	sprintf		4058552	0					
ANR	4058664	Identifier	sprintf		4058552	0					
ANR	4058665	ArgumentList	msg		4058552	1					
ANR	4058666	Argument	msg		4058552	0					
ANR	4058667	Identifier	msg		4058552	0					
ANR	4058668	Argument	"""%s\\n"""		4058552	1					
ANR	4058669	PrimaryExpression	"""%s\\n"""		4058552	0					
ANR	4058670	Argument	unsusp_msg		4058552	2					
ANR	4058671	Identifier	unsusp_msg		4058552	0					
ANR	4058672	ExpressionStatement	"write ( CLIENT_LOG , msg , strlen ( msg ) )"	666:1:15861:15896	4058552	13	True				
ANR	4058673	CallExpression	"write ( CLIENT_LOG , msg , strlen ( msg ) )"		4058552	0					
ANR	4058674	Callee	write		4058552	0					
ANR	4058675	Identifier	write		4058552	0					
ANR	4058676	ArgumentList	CLIENT_LOG		4058552	1					
ANR	4058677	Argument	CLIENT_LOG		4058552	0					
ANR	4058678	Identifier	CLIENT_LOG		4058552	0					
ANR	4058679	Argument	msg		4058552	1					
ANR	4058680	Identifier	msg		4058552	0					
ANR	4058681	Argument	strlen ( msg )		4058552	2					
ANR	4058682	CallExpression	strlen ( msg )		4058552	0					
ANR	4058683	Callee	strlen		4058552	0					
ANR	4058684	Identifier	strlen		4058552	0					
ANR	4058685	ArgumentList	msg		4058552	1					
ANR	4058686	Argument	msg		4058552	0					
ANR	4058687	Identifier	msg		4058552	0					
ANR	4058688	ExpressionStatement	resume_all ( )	668:1:15900:15912	4058552	14	True				
ANR	4058689	CallExpression	resume_all ( )		4058552	0					
ANR	4058690	Callee	resume_all		4058552	0					
ANR	4058691	Identifier	resume_all		4058552	0					
ANR	4058692	ArgumentList			4058552	1					
ANR	4058693	ReturnStatement	return ( 0 ) ;	670:1:15916:15925	4058552	15	True				
ANR	4058694	PrimaryExpression	0		4058552	0					
ANR	4058695	ReturnType	int		4058552	1					
ANR	4058696	Identifier	susp_all		4058552	2					
ANR	4058697	ParameterList			4058552	3					
ANR	4058698	CFGEntryNode	ENTRY		4058552		True				
ANR	4058699	CFGExitNode	EXIT		4058552		True				
ANR	4058700	Symbol	msg		4058552						
ANR	4058701	Symbol	strlen		4058552						
ANR	4058702	Symbol	proc		4058552						
ANR	4058703	Symbol	UProcList . Next		4058552						
ANR	4058704	Symbol	CLIENT_LOG		4058552						
ANR	4058705	Symbol	susp_msg		4058552						
ANR	4058706	Symbol	unsusp_msg		4058552						
ANR	4058707	Symbol	UProcList		4058552						
ANR	4058708	Symbol	proc -> is_suspended		4058552						
ANR	4058709	Symbol	proc -> get_num_pids_suspended		4058552						
ANR	4058710	Symbol	sum		4058552						
ANR	4058711	Symbol	* proc		4058552						
ANR	4058712	Function	set_quit	677:0:16051:16140							
ANR	4058713	FunctionDef	set_quit ()		4058712	0					
ANR	4058714	CompoundStatement		679:0:16066:16140	4058712	0					
ANR	4058715	ReturnStatement	return ( 0 ) ;	682:1:16129:16138	4058712	0	True				
ANR	4058716	PrimaryExpression	0		4058712	0					
ANR	4058717	ReturnType	int		4058712	1					
ANR	4058718	Identifier	set_quit		4058712	2					
ANR	4058719	ParameterList			4058712	3					
ANR	4058720	CFGEntryNode	ENTRY		4058712		True				
ANR	4058721	CFGExitNode	EXIT		4058712		True				
ANR	4058722	Function	stop_all	688:0:16179:16729							
ANR	4058723	FunctionDef	stop_all ()		4058722	0					
ANR	4058724	CompoundStatement		690:0:16194:16729	4058722	0					
ANR	4058725	IdentifierDeclStatement	UserProc * proc ;	691:1:16197:16211	4058722	0	True				
ANR	4058726	IdentifierDecl	* proc		4058722	0					
ANR	4058727	IdentifierDeclType	UserProc *		4058722	0					
ANR	4058728	Identifier	proc		4058722	1					
ANR	4058729	ExpressionStatement	UProcList . Rewind ( )	695:1:16275:16293	4058722	1	True				
ANR	4058730	CallExpression	UProcList . Rewind ( )		4058722	0					
ANR	4058731	Callee	UProcList . Rewind		4058722	0					
ANR	4058732	MemberAccess	UProcList . Rewind		4058722	0					
ANR	4058733	Identifier	UProcList		4058722	0					
ANR	4058734	Identifier	Rewind		4058722	1					
ANR	4058735	ArgumentList			4058722	1					
ANR	4058736	WhileStatement	while ( ( proc = UProcList . Next ( ) ) )		4058722	2					
ANR	4058737	Condition	proc = UProcList . Next ( )	696:8:16303:16327	4058722	0	True				
ANR	4058738	AssignmentExpression	proc = UProcList . Next ( )		4058722	0		=			
ANR	4058739	Identifier	proc		4058722	0					
ANR	4058740	CallExpression	UProcList . Next ( )		4058722	1					
ANR	4058741	Callee	UProcList . Next		4058722	0					
ANR	4058742	MemberAccess	UProcList . Next		4058722	0					
ANR	4058743	Identifier	UProcList		4058722	0					
ANR	4058744	Identifier	Next		4058722	1					
ANR	4058745	ArgumentList			4058722	1					
ANR	4058746	CompoundStatement		7:36:136:136	4058722	1					
ANR	4058747	IfStatement	if ( proc -> is_running ( ) && proc -> get_class ( ) != CONDOR_UNIVERSE_PVMD )		4058722	0					
ANR	4058748	Condition	proc -> is_running ( ) && proc -> get_class ( ) != CONDOR_UNIVERSE_PVMD	697:6:16339:16401	4058722	0	True				
ANR	4058749	AndExpression	proc -> is_running ( ) && proc -> get_class ( ) != CONDOR_UNIVERSE_PVMD		4058722	0		&&			
ANR	4058750	CallExpression	proc -> is_running ( )		4058722	0					
ANR	4058751	Callee	proc -> is_running		4058722	0					
ANR	4058752	PtrMemberAccess	proc -> is_running		4058722	0					
ANR	4058753	Identifier	proc		4058722	0					
ANR	4058754	Identifier	is_running		4058722	1					
ANR	4058755	ArgumentList			4058722	1					
ANR	4058756	EqualityExpression	proc -> get_class ( ) != CONDOR_UNIVERSE_PVMD		4058722	1		!=			
ANR	4058757	CallExpression	proc -> get_class ( )		4058722	0					
ANR	4058758	Callee	proc -> get_class		4058722	0					
ANR	4058759	PtrMemberAccess	proc -> get_class		4058722	0					
ANR	4058760	Identifier	proc		4058722	0					
ANR	4058761	Identifier	get_class		4058722	1					
ANR	4058762	ArgumentList			4058722	1					
ANR	4058763	Identifier	CONDOR_UNIVERSE_PVMD		4058722	1					
ANR	4058764	CompoundStatement		8:72:210:210	4058722	1					
ANR	4058765	ExpressionStatement	proc -> suspend ( )	698:3:16410:16425	4058722	0	True				
ANR	4058766	CallExpression	proc -> suspend ( )		4058722	0					
ANR	4058767	Callee	proc -> suspend		4058722	0					
ANR	4058768	PtrMemberAccess	proc -> suspend		4058722	0					
ANR	4058769	Identifier	proc		4058722	0					
ANR	4058770	Identifier	suspend		4058722	1					
ANR	4058771	ArgumentList			4058722	1					
ANR	4058772	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\tRequested user job to suspend\\n"" )"	699:3:16430:16486	4058722	1	True				
ANR	4058773	CallExpression	"dprintf ( D_ALWAYS , ""\\tRequested user job to suspend\\n"" )"		4058722	0					
ANR	4058774	Callee	dprintf		4058722	0					
ANR	4058775	Identifier	dprintf		4058722	0					
ANR	4058776	ArgumentList	D_ALWAYS		4058722	1					
ANR	4058777	Argument	D_ALWAYS		4058722	0					
ANR	4058778	Identifier	D_ALWAYS		4058722	0					
ANR	4058779	Argument	"""\\tRequested user job to suspend\\n"""		4058722	1					
ANR	4058780	PrimaryExpression	"""\\tRequested user job to suspend\\n"""		4058722	0					
ANR	4058781	ExpressionStatement	UProcList . Rewind ( )	703:1:16497:16515	4058722	3	True				
ANR	4058782	CallExpression	UProcList . Rewind ( )		4058722	0					
ANR	4058783	Callee	UProcList . Rewind		4058722	0					
ANR	4058784	MemberAccess	UProcList . Rewind		4058722	0					
ANR	4058785	Identifier	UProcList		4058722	0					
ANR	4058786	Identifier	Rewind		4058722	1					
ANR	4058787	ArgumentList			4058722	1					
ANR	4058788	WhileStatement	while ( ( proc = UProcList . Next ( ) ) )		4058722	4					
ANR	4058789	Condition	proc = UProcList . Next ( )	704:8:16525:16549	4058722	0	True				
ANR	4058790	AssignmentExpression	proc = UProcList . Next ( )		4058722	0		=			
ANR	4058791	Identifier	proc		4058722	0					
ANR	4058792	CallExpression	UProcList . Next ( )		4058722	1					
ANR	4058793	Callee	UProcList . Next		4058722	0					
ANR	4058794	MemberAccess	UProcList . Next		4058722	0					
ANR	4058795	Identifier	UProcList		4058722	0					
ANR	4058796	Identifier	Next		4058722	1					
ANR	4058797	ArgumentList			4058722	1					
ANR	4058798	CompoundStatement		15:36:358:358	4058722	1					
ANR	4058799	IfStatement	if ( proc -> is_running ( ) && proc -> get_class ( ) == CONDOR_UNIVERSE_PVMD )		4058722	0					
ANR	4058800	Condition	proc -> is_running ( ) && proc -> get_class ( ) == CONDOR_UNIVERSE_PVMD	705:6:16561:16623	4058722	0	True				
ANR	4058801	AndExpression	proc -> is_running ( ) && proc -> get_class ( ) == CONDOR_UNIVERSE_PVMD		4058722	0		&&			
ANR	4058802	CallExpression	proc -> is_running ( )		4058722	0					
ANR	4058803	Callee	proc -> is_running		4058722	0					
ANR	4058804	PtrMemberAccess	proc -> is_running		4058722	0					
ANR	4058805	Identifier	proc		4058722	0					
ANR	4058806	Identifier	is_running		4058722	1					
ANR	4058807	ArgumentList			4058722	1					
ANR	4058808	EqualityExpression	proc -> get_class ( ) == CONDOR_UNIVERSE_PVMD		4058722	1		==			
ANR	4058809	CallExpression	proc -> get_class ( )		4058722	0					
ANR	4058810	Callee	proc -> get_class		4058722	0					
ANR	4058811	PtrMemberAccess	proc -> get_class		4058722	0					
ANR	4058812	Identifier	proc		4058722	0					
ANR	4058813	Identifier	get_class		4058722	1					
ANR	4058814	ArgumentList			4058722	1					
ANR	4058815	Identifier	CONDOR_UNIVERSE_PVMD		4058722	1					
ANR	4058816	CompoundStatement		16:72:432:432	4058722	1					
ANR	4058817	ExpressionStatement	proc -> suspend ( )	706:3:16632:16647	4058722	0	True				
ANR	4058818	CallExpression	proc -> suspend ( )		4058722	0					
ANR	4058819	Callee	proc -> suspend		4058722	0					
ANR	4058820	PtrMemberAccess	proc -> suspend		4058722	0					
ANR	4058821	Identifier	proc		4058722	0					
ANR	4058822	Identifier	suspend		4058722	1					
ANR	4058823	ArgumentList			4058722	1					
ANR	4058824	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\tRequested user job to suspend\\n"" )"	707:3:16652:16708	4058722	1	True				
ANR	4058825	CallExpression	"dprintf ( D_ALWAYS , ""\\tRequested user job to suspend\\n"" )"		4058722	0					
ANR	4058826	Callee	dprintf		4058722	0					
ANR	4058827	Identifier	dprintf		4058722	0					
ANR	4058828	ArgumentList	D_ALWAYS		4058722	1					
ANR	4058829	Argument	D_ALWAYS		4058722	0					
ANR	4058830	Identifier	D_ALWAYS		4058722	0					
ANR	4058831	Argument	"""\\tRequested user job to suspend\\n"""		4058722	1					
ANR	4058832	PrimaryExpression	"""\\tRequested user job to suspend\\n"""		4058722	0					
ANR	4058833	ReturnStatement	return ( 0 ) ;	710:1:16718:16727	4058722	5	True				
ANR	4058834	PrimaryExpression	0		4058722	0					
ANR	4058835	ReturnType	int		4058722	1					
ANR	4058836	Identifier	stop_all		4058722	2					
ANR	4058837	ParameterList			4058722	3					
ANR	4058838	CFGEntryNode	ENTRY		4058722		True				
ANR	4058839	CFGExitNode	EXIT		4058722		True				
ANR	4058840	Symbol	proc		4058722						
ANR	4058841	Symbol	UProcList . Next		4058722						
ANR	4058842	Symbol	proc -> get_class		4058722						
ANR	4058843	Symbol	proc -> is_running		4058722						
ANR	4058844	Symbol	UProcList		4058722						
ANR	4058845	Symbol	CONDOR_UNIVERSE_PVMD		4058722						
ANR	4058846	Symbol	D_ALWAYS		4058722						
ANR	4058847	Symbol	* proc		4058722						
ANR	4058848	Function	resume_all	716:0:16777:17320							
ANR	4058849	FunctionDef	resume_all ()		4058848	0					
ANR	4058850	CompoundStatement		718:0:16795:17320	4058848	0					
ANR	4058851	IdentifierDeclStatement	UserProc * proc ;	719:1:16798:16812	4058848	0	True				
ANR	4058852	IdentifierDecl	* proc		4058848	0					
ANR	4058853	IdentifierDeclType	UserProc *		4058848	0					
ANR	4058854	Identifier	proc		4058848	1					
ANR	4058855	ExpressionStatement	UProcList . Rewind ( )	723:1:16878:16896	4058848	1	True				
ANR	4058856	CallExpression	UProcList . Rewind ( )		4058848	0					
ANR	4058857	Callee	UProcList . Rewind		4058848	0					
ANR	4058858	MemberAccess	UProcList . Rewind		4058848	0					
ANR	4058859	Identifier	UProcList		4058848	0					
ANR	4058860	Identifier	Rewind		4058848	1					
ANR	4058861	ArgumentList			4058848	1					
ANR	4058862	WhileStatement	while ( ( proc = UProcList . Next ( ) ) )		4058848	2					
ANR	4058863	Condition	proc = UProcList . Next ( )	724:8:16906:16930	4058848	0	True				
ANR	4058864	AssignmentExpression	proc = UProcList . Next ( )		4058848	0		=			
ANR	4058865	Identifier	proc		4058848	0					
ANR	4058866	CallExpression	UProcList . Next ( )		4058848	1					
ANR	4058867	Callee	UProcList . Next		4058848	0					
ANR	4058868	MemberAccess	UProcList . Next		4058848	0					
ANR	4058869	Identifier	UProcList		4058848	0					
ANR	4058870	Identifier	Next		4058848	1					
ANR	4058871	ArgumentList			4058848	1					
ANR	4058872	CompoundStatement		7:36:138:138	4058848	1					
ANR	4058873	IfStatement	if ( proc -> is_suspended ( ) && proc -> get_class ( ) == CONDOR_UNIVERSE_PVMD )		4058848	0					
ANR	4058874	Condition	proc -> is_suspended ( ) && proc -> get_class ( ) == CONDOR_UNIVERSE_PVMD	725:6:16942:17006	4058848	0	True				
ANR	4058875	AndExpression	proc -> is_suspended ( ) && proc -> get_class ( ) == CONDOR_UNIVERSE_PVMD		4058848	0		&&			
ANR	4058876	CallExpression	proc -> is_suspended ( )		4058848	0					
ANR	4058877	Callee	proc -> is_suspended		4058848	0					
ANR	4058878	PtrMemberAccess	proc -> is_suspended		4058848	0					
ANR	4058879	Identifier	proc		4058848	0					
ANR	4058880	Identifier	is_suspended		4058848	1					
ANR	4058881	ArgumentList			4058848	1					
ANR	4058882	EqualityExpression	proc -> get_class ( ) == CONDOR_UNIVERSE_PVMD		4058848	1		==			
ANR	4058883	CallExpression	proc -> get_class ( )		4058848	0					
ANR	4058884	Callee	proc -> get_class		4058848	0					
ANR	4058885	PtrMemberAccess	proc -> get_class		4058848	0					
ANR	4058886	Identifier	proc		4058848	0					
ANR	4058887	Identifier	get_class		4058848	1					
ANR	4058888	ArgumentList			4058848	1					
ANR	4058889	Identifier	CONDOR_UNIVERSE_PVMD		4058848	1					
ANR	4058890	CompoundStatement		8:74:214:214	4058848	1					
ANR	4058891	ExpressionStatement	proc -> resume ( )	726:3:17015:17029	4058848	0	True				
ANR	4058892	CallExpression	proc -> resume ( )		4058848	0					
ANR	4058893	Callee	proc -> resume		4058848	0					
ANR	4058894	PtrMemberAccess	proc -> resume		4058848	0					
ANR	4058895	Identifier	proc		4058848	0					
ANR	4058896	Identifier	resume		4058848	1					
ANR	4058897	ArgumentList			4058848	1					
ANR	4058898	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\tRequested user job to resume\\n"" )"	727:3:17034:17089	4058848	1	True				
ANR	4058899	CallExpression	"dprintf ( D_ALWAYS , ""\\tRequested user job to resume\\n"" )"		4058848	0					
ANR	4058900	Callee	dprintf		4058848	0					
ANR	4058901	Identifier	dprintf		4058848	0					
ANR	4058902	ArgumentList	D_ALWAYS		4058848	1					
ANR	4058903	Argument	D_ALWAYS		4058848	0					
ANR	4058904	Identifier	D_ALWAYS		4058848	0					
ANR	4058905	Argument	"""\\tRequested user job to resume\\n"""		4058848	1					
ANR	4058906	PrimaryExpression	"""\\tRequested user job to resume\\n"""		4058848	0					
ANR	4058907	ExpressionStatement	UProcList . Rewind ( )	731:1:17100:17118	4058848	3	True				
ANR	4058908	CallExpression	UProcList . Rewind ( )		4058848	0					
ANR	4058909	Callee	UProcList . Rewind		4058848	0					
ANR	4058910	MemberAccess	UProcList . Rewind		4058848	0					
ANR	4058911	Identifier	UProcList		4058848	0					
ANR	4058912	Identifier	Rewind		4058848	1					
ANR	4058913	ArgumentList			4058848	1					
ANR	4058914	WhileStatement	while ( ( proc = UProcList . Next ( ) ) )		4058848	4					
ANR	4058915	Condition	proc = UProcList . Next ( )	732:8:17128:17152	4058848	0	True				
ANR	4058916	AssignmentExpression	proc = UProcList . Next ( )		4058848	0		=			
ANR	4058917	Identifier	proc		4058848	0					
ANR	4058918	CallExpression	UProcList . Next ( )		4058848	1					
ANR	4058919	Callee	UProcList . Next		4058848	0					
ANR	4058920	MemberAccess	UProcList . Next		4058848	0					
ANR	4058921	Identifier	UProcList		4058848	0					
ANR	4058922	Identifier	Next		4058848	1					
ANR	4058923	ArgumentList			4058848	1					
ANR	4058924	CompoundStatement		15:36:360:360	4058848	1					
ANR	4058925	IfStatement	if ( proc -> is_suspended ( ) && proc -> get_class ( ) != CONDOR_UNIVERSE_PVMD )		4058848	0					
ANR	4058926	Condition	proc -> is_suspended ( ) && proc -> get_class ( ) != CONDOR_UNIVERSE_PVMD	733:6:17164:17228	4058848	0	True				
ANR	4058927	AndExpression	proc -> is_suspended ( ) && proc -> get_class ( ) != CONDOR_UNIVERSE_PVMD		4058848	0		&&			
ANR	4058928	CallExpression	proc -> is_suspended ( )		4058848	0					
ANR	4058929	Callee	proc -> is_suspended		4058848	0					
ANR	4058930	PtrMemberAccess	proc -> is_suspended		4058848	0					
ANR	4058931	Identifier	proc		4058848	0					
ANR	4058932	Identifier	is_suspended		4058848	1					
ANR	4058933	ArgumentList			4058848	1					
ANR	4058934	EqualityExpression	proc -> get_class ( ) != CONDOR_UNIVERSE_PVMD		4058848	1		!=			
ANR	4058935	CallExpression	proc -> get_class ( )		4058848	0					
ANR	4058936	Callee	proc -> get_class		4058848	0					
ANR	4058937	PtrMemberAccess	proc -> get_class		4058848	0					
ANR	4058938	Identifier	proc		4058848	0					
ANR	4058939	Identifier	get_class		4058848	1					
ANR	4058940	ArgumentList			4058848	1					
ANR	4058941	Identifier	CONDOR_UNIVERSE_PVMD		4058848	1					
ANR	4058942	CompoundStatement		16:74:436:436	4058848	1					
ANR	4058943	ExpressionStatement	proc -> resume ( )	734:3:17237:17251	4058848	0	True				
ANR	4058944	CallExpression	proc -> resume ( )		4058848	0					
ANR	4058945	Callee	proc -> resume		4058848	0					
ANR	4058946	PtrMemberAccess	proc -> resume		4058848	0					
ANR	4058947	Identifier	proc		4058848	0					
ANR	4058948	Identifier	resume		4058848	1					
ANR	4058949	ArgumentList			4058848	1					
ANR	4058950	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\tRequested user job to resume\\n"" )"	735:3:17256:17311	4058848	1	True				
ANR	4058951	CallExpression	"dprintf ( D_ALWAYS , ""\\tRequested user job to resume\\n"" )"		4058848	0					
ANR	4058952	Callee	dprintf		4058848	0					
ANR	4058953	Identifier	dprintf		4058848	0					
ANR	4058954	ArgumentList	D_ALWAYS		4058848	1					
ANR	4058955	Argument	D_ALWAYS		4058848	0					
ANR	4058956	Identifier	D_ALWAYS		4058848	0					
ANR	4058957	Argument	"""\\tRequested user job to resume\\n"""		4058848	1					
ANR	4058958	PrimaryExpression	"""\\tRequested user job to resume\\n"""		4058848	0					
ANR	4058959	ReturnType	void		4058848	1					
ANR	4058960	Identifier	resume_all		4058848	2					
ANR	4058961	ParameterList			4058848	3					
ANR	4058962	CFGEntryNode	ENTRY		4058848		True				
ANR	4058963	CFGExitNode	EXIT		4058848		True				
ANR	4058964	Symbol	proc		4058848						
ANR	4058965	Symbol	UProcList . Next		4058848						
ANR	4058966	Symbol	proc -> get_class		4058848						
ANR	4058967	Symbol	UProcList		4058848						
ANR	4058968	Symbol	proc -> is_suspended		4058848						
ANR	4058969	Symbol	CONDOR_UNIVERSE_PVMD		4058848						
ANR	4058970	Symbol	D_ALWAYS		4058848						
ANR	4058971	Symbol	* proc		4058848						
ANR	4058972	Function	periodic_ckpt_all	743:0:17388:17653							
ANR	4058973	FunctionDef	periodic_ckpt_all ()		4058972	0					
ANR	4058974	CompoundStatement		745:0:17412:17653	4058972	0					
ANR	4058975	IdentifierDeclStatement	UserProc * proc ;	746:1:17415:17429	4058972	0	True				
ANR	4058976	IdentifierDecl	* proc		4058972	0					
ANR	4058977	IdentifierDeclType	UserProc *		4058972	0					
ANR	4058978	Identifier	proc		4058972	1					
ANR	4058979	ExpressionStatement	UProcList . Rewind ( )	748:1:17433:17451	4058972	1	True				
ANR	4058980	CallExpression	UProcList . Rewind ( )		4058972	0					
ANR	4058981	Callee	UProcList . Rewind		4058972	0					
ANR	4058982	MemberAccess	UProcList . Rewind		4058972	0					
ANR	4058983	Identifier	UProcList		4058972	0					
ANR	4058984	Identifier	Rewind		4058972	1					
ANR	4058985	ArgumentList			4058972	1					
ANR	4058986	WhileStatement	while ( ( proc = UProcList . Next ( ) ) )		4058972	2					
ANR	4058987	Condition	proc = UProcList . Next ( )	749:8:17461:17485	4058972	0	True				
ANR	4058988	AssignmentExpression	proc = UProcList . Next ( )		4058972	0		=			
ANR	4058989	Identifier	proc		4058972	0					
ANR	4058990	CallExpression	UProcList . Next ( )		4058972	1					
ANR	4058991	Callee	UProcList . Next		4058972	0					
ANR	4058992	MemberAccess	UProcList . Next		4058972	0					
ANR	4058993	Identifier	UProcList		4058972	0					
ANR	4058994	Identifier	Next		4058972	1					
ANR	4058995	ArgumentList			4058972	1					
ANR	4058996	CompoundStatement		5:36:76:76	4058972	1					
ANR	4058997	IfStatement	if ( proc -> ckpt_enabled ( ) )		4058972	0					
ANR	4058998	Condition	proc -> ckpt_enabled ( )	750:6:17497:17516	4058972	0	True				
ANR	4058999	CallExpression	proc -> ckpt_enabled ( )		4058972	0					
ANR	4059000	Callee	proc -> ckpt_enabled		4058972	0					
ANR	4059001	PtrMemberAccess	proc -> ckpt_enabled		4058972	0					
ANR	4059002	Identifier	proc		4058972	0					
ANR	4059003	Identifier	ckpt_enabled		4058972	1					
ANR	4059004	ArgumentList			4058972	1					
ANR	4059005	CompoundStatement		6:29:107:107	4058972	1					
ANR	4059006	ExpressionStatement	proc -> request_periodic_ckpt ( )	751:3:17525:17554	4058972	0	True				
ANR	4059007	CallExpression	proc -> request_periodic_ckpt ( )		4058972	0					
ANR	4059008	Callee	proc -> request_periodic_ckpt		4058972	0					
ANR	4059009	PtrMemberAccess	proc -> request_periodic_ckpt		4058972	0					
ANR	4059010	Identifier	proc		4058972	0					
ANR	4059011	Identifier	request_periodic_ckpt		4058972	1					
ANR	4059012	ArgumentList			4058972	1					
ANR	4059013	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\tRequested user job to do a periodic checkpoint\\n"" )"	752:3:17559:17632	4058972	1	True				
ANR	4059014	CallExpression	"dprintf ( D_ALWAYS , ""\\tRequested user job to do a periodic checkpoint\\n"" )"		4058972	0					
ANR	4059015	Callee	dprintf		4058972	0					
ANR	4059016	Identifier	dprintf		4058972	0					
ANR	4059017	ArgumentList	D_ALWAYS		4058972	1					
ANR	4059018	Argument	D_ALWAYS		4058972	0					
ANR	4059019	Identifier	D_ALWAYS		4058972	0					
ANR	4059020	Argument	"""\\tRequested user job to do a periodic checkpoint\\n"""		4058972	1					
ANR	4059021	PrimaryExpression	"""\\tRequested user job to do a periodic checkpoint\\n"""		4058972	0					
ANR	4059022	ReturnStatement	return ( 0 ) ;	755:1:17642:17651	4058972	3	True				
ANR	4059023	PrimaryExpression	0		4058972	0					
ANR	4059024	ReturnType	int		4058972	1					
ANR	4059025	Identifier	periodic_ckpt_all		4058972	2					
ANR	4059026	ParameterList			4058972	3					
ANR	4059027	CFGEntryNode	ENTRY		4058972		True				
ANR	4059028	CFGExitNode	EXIT		4058972		True				
ANR	4059029	Symbol	proc		4058972						
ANR	4059030	Symbol	UProcList . Next		4058972						
ANR	4059031	Symbol	proc -> ckpt_enabled		4058972						
ANR	4059032	Symbol	UProcList		4058972						
ANR	4059033	Symbol	D_ALWAYS		4058972						
ANR	4059034	Symbol	* proc		4058972						
ANR	4059035	Function	spawn_all	761:0:17730:18123							
ANR	4059036	FunctionDef	spawn_all ()		4059035	0					
ANR	4059037	CompoundStatement		763:0:17746:18123	4059035	0					
ANR	4059038	IdentifierDeclStatement	UserProc * proc ;	764:1:17749:17763	4059035	0	True				
ANR	4059039	IdentifierDecl	* proc		4059035	0					
ANR	4059040	IdentifierDeclType	UserProc *		4059035	0					
ANR	4059041	Identifier	proc		4059035	1					
ANR	4059042	ExpressionStatement	UProcList . Rewind ( )	768:1:17828:17846	4059035	1	True				
ANR	4059043	CallExpression	UProcList . Rewind ( )		4059035	0					
ANR	4059044	Callee	UProcList . Rewind		4059035	0					
ANR	4059045	MemberAccess	UProcList . Rewind		4059035	0					
ANR	4059046	Identifier	UProcList		4059035	0					
ANR	4059047	Identifier	Rewind		4059035	1					
ANR	4059048	ArgumentList			4059035	1					
ANR	4059049	WhileStatement	while ( ( proc = UProcList . Next ( ) ) )		4059035	2					
ANR	4059050	Condition	proc = UProcList . Next ( )	769:8:17856:17880	4059035	0	True				
ANR	4059051	AssignmentExpression	proc = UProcList . Next ( )		4059035	0		=			
ANR	4059052	Identifier	proc		4059035	0					
ANR	4059053	CallExpression	UProcList . Next ( )		4059035	1					
ANR	4059054	Callee	UProcList . Next		4059035	0					
ANR	4059055	MemberAccess	UProcList . Next		4059035	0					
ANR	4059056	Identifier	UProcList		4059035	0					
ANR	4059057	Identifier	Next		4059035	1					
ANR	4059058	ArgumentList			4059035	1					
ANR	4059059	CompoundStatement		7:36:137:137	4059035	1					
ANR	4059060	IfStatement	if ( proc -> is_runnable ( ) )		4059035	0					
ANR	4059061	Condition	proc -> is_runnable ( )	770:6:17892:17910	4059035	0	True				
ANR	4059062	CallExpression	proc -> is_runnable ( )		4059035	0					
ANR	4059063	Callee	proc -> is_runnable		4059035	0					
ANR	4059064	PtrMemberAccess	proc -> is_runnable		4059035	0					
ANR	4059065	Identifier	proc		4059035	0					
ANR	4059066	Identifier	is_runnable		4059035	1					
ANR	4059067	ArgumentList			4059035	1					
ANR	4059068	CompoundStatement		8:28:167:167	4059035	1					
ANR	4059069	ExpressionStatement	proc -> execute ( )	771:3:17919:17934	4059035	0	True				
ANR	4059070	CallExpression	proc -> execute ( )		4059035	0					
ANR	4059071	Callee	proc -> execute		4059035	0					
ANR	4059072	PtrMemberAccess	proc -> execute		4059035	0					
ANR	4059073	Identifier	proc		4059035	0					
ANR	4059074	Identifier	execute		4059035	1					
ANR	4059075	ArgumentList			4059035	1					
ANR	4059076	ElseStatement	else		4059035	0					
ANR	4059077	CompoundStatement		10:9:198:198	4059035	0					
ANR	4059078	ExpressionStatement	"dprintf ( D_ALWAYS , ""Proc %d not runnable in state %d\\n"" , proc -> get_id ( ) , proc -> get_state ( ) )"	773:3:17950:18048	4059035	0	True				
ANR	4059079	CallExpression	"dprintf ( D_ALWAYS , ""Proc %d not runnable in state %d\\n"" , proc -> get_id ( ) , proc -> get_state ( ) )"		4059035	0					
ANR	4059080	Callee	dprintf		4059035	0					
ANR	4059081	Identifier	dprintf		4059035	0					
ANR	4059082	ArgumentList	D_ALWAYS		4059035	1					
ANR	4059083	Argument	D_ALWAYS		4059035	0					
ANR	4059084	Identifier	D_ALWAYS		4059035	0					
ANR	4059085	Argument	"""Proc %d not runnable in state %d\\n"""		4059035	1					
ANR	4059086	PrimaryExpression	"""Proc %d not runnable in state %d\\n"""		4059035	0					
ANR	4059087	Argument	proc -> get_id ( )		4059035	2					
ANR	4059088	CallExpression	proc -> get_id ( )		4059035	0					
ANR	4059089	Callee	proc -> get_id		4059035	0					
ANR	4059090	PtrMemberAccess	proc -> get_id		4059035	0					
ANR	4059091	Identifier	proc		4059035	0					
ANR	4059092	Identifier	get_id		4059035	1					
ANR	4059093	ArgumentList			4059035	1					
ANR	4059094	Argument	proc -> get_state ( )		4059035	3					
ANR	4059095	CallExpression	proc -> get_state ( )		4059035	0					
ANR	4059096	Callee	proc -> get_state		4059035	0					
ANR	4059097	PtrMemberAccess	proc -> get_state		4059035	0					
ANR	4059098	Identifier	proc		4059035	0					
ANR	4059099	Identifier	get_state		4059035	1					
ANR	4059100	ArgumentList			4059035	1					
ANR	4059101	IfStatement	if ( proc -> is_suspended ( ) )		4059035	1					
ANR	4059102	Condition	proc -> is_suspended ( )	776:6:18060:18079	4059035	0	True				
ANR	4059103	CallExpression	proc -> is_suspended ( )		4059035	0					
ANR	4059104	Callee	proc -> is_suspended		4059035	0					
ANR	4059105	PtrMemberAccess	proc -> is_suspended		4059035	0					
ANR	4059106	Identifier	proc		4059035	0					
ANR	4059107	Identifier	is_suspended		4059035	1					
ANR	4059108	ArgumentList			4059035	1					
ANR	4059109	CompoundStatement		14:29:336:336	4059035	1					
ANR	4059110	ExpressionStatement	proc -> resume ( )	777:3:18088:18102	4059035	0	True				
ANR	4059111	CallExpression	proc -> resume ( )		4059035	0					
ANR	4059112	Callee	proc -> resume		4059035	0					
ANR	4059113	PtrMemberAccess	proc -> resume		4059035	0					
ANR	4059114	Identifier	proc		4059035	0					
ANR	4059115	Identifier	resume		4059035	1					
ANR	4059116	ArgumentList			4059035	1					
ANR	4059117	ReturnStatement	return ( 0 ) ;	780:1:18112:18121	4059035	3	True				
ANR	4059118	PrimaryExpression	0		4059035	0					
ANR	4059119	ReturnType	int		4059035	1					
ANR	4059120	Identifier	spawn_all		4059035	2					
ANR	4059121	ParameterList			4059035	3					
ANR	4059122	CFGEntryNode	ENTRY		4059035		True				
ANR	4059123	CFGExitNode	EXIT		4059035		True				
ANR	4059124	Symbol	proc -> get_state		4059035						
ANR	4059125	Symbol	proc		4059035						
ANR	4059126	Symbol	UProcList . Next		4059035						
ANR	4059127	Symbol	proc -> is_runnable		4059035						
ANR	4059128	Symbol	UProcList		4059035						
ANR	4059129	Symbol	D_ALWAYS		4059035						
ANR	4059130	Symbol	proc -> is_suspended		4059035						
ANR	4059131	Symbol	proc -> get_id		4059035						
ANR	4059132	Symbol	* proc		4059035						
ANR	4059133	Function	test_connection	789:0:18414:18741							
ANR	4059134	FunctionDef	test_connection ()		4059133	0					
ANR	4059135	CompoundStatement		791:0:18436:18741	4059133	0					
ANR	4059136	IfStatement	"if ( write ( CLIENT_LOG , ""\\0\\n"" , 2 ) == - 1 )"		4059133	0					
ANR	4059137	Condition	"write ( CLIENT_LOG , ""\\0\\n"" , 2 ) == - 1"	792:6:18444:18475	4059133	0	True				
ANR	4059138	EqualityExpression	"write ( CLIENT_LOG , ""\\0\\n"" , 2 ) == - 1"		4059133	0		==			
ANR	4059139	CallExpression	"write ( CLIENT_LOG , ""\\0\\n"" , 2 )"		4059133	0					
ANR	4059140	Callee	write		4059133	0					
ANR	4059141	Identifier	write		4059133	0					
ANR	4059142	ArgumentList	CLIENT_LOG		4059133	1					
ANR	4059143	Argument	CLIENT_LOG		4059133	0					
ANR	4059144	Identifier	CLIENT_LOG		4059133	0					
ANR	4059145	Argument	"""\\0\\n"""		4059133	1					
ANR	4059146	PrimaryExpression	"""\\0\\n"""		4059133	0					
ANR	4059147	Argument	2		4059133	2					
ANR	4059148	PrimaryExpression	2		4059133	0					
ANR	4059149	UnaryOperationExpression	- 1		4059133	1					
ANR	4059150	UnaryOperator	-		4059133	0					
ANR	4059151	PrimaryExpression	1		4059133	1					
ANR	4059152	CompoundStatement		2:41:42:42	4059133	1					
ANR	4059153	IfStatement	"if ( param_boolean_crufty ( ""STARTER_LOCAL_LOGGING"" , false ) )"		4059133	0					
ANR	4059154	Condition	"param_boolean_crufty ( ""STARTER_LOCAL_LOGGING"" , false )"	794:6:18490:18543	4059133	0	True				
ANR	4059155	CallExpression	"param_boolean_crufty ( ""STARTER_LOCAL_LOGGING"" , false )"		4059133	0					
ANR	4059156	Callee	param_boolean_crufty		4059133	0					
ANR	4059157	Identifier	param_boolean_crufty		4059133	0					
ANR	4059158	ArgumentList	"""STARTER_LOCAL_LOGGING"""		4059133	1					
ANR	4059159	Argument	"""STARTER_LOCAL_LOGGING"""		4059133	0					
ANR	4059160	PrimaryExpression	"""STARTER_LOCAL_LOGGING"""		4059133	0					
ANR	4059161	Argument	false		4059133	1					
ANR	4059162	Identifier	false		4059133	0					
ANR	4059163	CompoundStatement		4:63:110:110	4059133	1					
ANR	4059164	ExpressionStatement	"dprintf ( D_ALWAYS , ""Lost our connection to the shadow! Exiting.\\n"" )"	795:3:18552:18620	4059133	0	True				
ANR	4059165	CallExpression	"dprintf ( D_ALWAYS , ""Lost our connection to the shadow! Exiting.\\n"" )"		4059133	0					
ANR	4059166	Callee	dprintf		4059133	0					
ANR	4059167	Identifier	dprintf		4059133	0					
ANR	4059168	ArgumentList	D_ALWAYS		4059133	1					
ANR	4059169	Argument	D_ALWAYS		4059133	0					
ANR	4059170	Identifier	D_ALWAYS		4059133	0					
ANR	4059171	Argument	"""Lost our connection to the shadow! Exiting.\\n"""		4059133	1					
ANR	4059172	PrimaryExpression	"""Lost our connection to the shadow! Exiting.\\n"""		4059133	0					
ANR	4059173	ExpressionStatement	set_root_priv ( )	799:2:18677:18692	4059133	1	True				
ANR	4059174	CallExpression	set_root_priv ( )		4059133	0					
ANR	4059175	Callee	set_root_priv		4059133	0					
ANR	4059176	Identifier	set_root_priv		4059133	0					
ANR	4059177	ArgumentList			4059133	1					
ANR	4059178	ExpressionStatement	"kill ( - ( getpid ( ) ) , SIGKILL )"	800:2:18696:18724	4059133	2	True				
ANR	4059179	CallExpression	"kill ( - ( getpid ( ) ) , SIGKILL )"		4059133	0					
ANR	4059180	Callee	kill		4059133	0					
ANR	4059181	Identifier	kill		4059133	0					
ANR	4059182	ArgumentList	- ( getpid ( ) )		4059133	1					
ANR	4059183	Argument	- ( getpid ( ) )		4059133	0					
ANR	4059184	UnaryOperationExpression	- ( getpid ( ) )		4059133	0					
ANR	4059185	UnaryOperator	-		4059133	0					
ANR	4059186	CallExpression	getpid ( )		4059133	1					
ANR	4059187	Callee	getpid		4059133	0					
ANR	4059188	Identifier	getpid		4059133	0					
ANR	4059189	ArgumentList			4059133	1					
ANR	4059190	Argument	SIGKILL		4059133	1					
ANR	4059191	Identifier	SIGKILL		4059133	0					
ANR	4059192	ReturnStatement	return 0 ;	803:1:18731:18739	4059133	1	True				
ANR	4059193	PrimaryExpression	0		4059133	0					
ANR	4059194	ReturnType	int		4059133	1					
ANR	4059195	Identifier	test_connection		4059133	2					
ANR	4059196	ParameterList			4059133	3					
ANR	4059197	CFGEntryNode	ENTRY		4059133		True				
ANR	4059198	CFGExitNode	EXIT		4059133		True				
ANR	4059199	Symbol	CLIENT_LOG		4059133						
ANR	4059200	Symbol	false		4059133						
ANR	4059201	Symbol	D_ALWAYS		4059133						
ANR	4059202	Symbol	param_boolean_crufty		4059133						
ANR	4059203	Symbol	write		4059133						
ANR	4059204	Symbol	SIGKILL		4059133						
ANR	4059205	Symbol	getpid		4059133						
ANR	4059206	Function	supervise_all	814:0:19064:19706							
ANR	4059207	FunctionDef	supervise_all ()		4059206	0					
ANR	4059208	CompoundStatement		816:0:19084:19706	4059206	0					
ANR	4059209	IdentifierDeclStatement	UserProc * proc ;	817:1:19087:19101	4059206	0	True				
ANR	4059210	IdentifierDecl	* proc		4059206	0					
ANR	4059211	IdentifierDeclType	UserProc *		4059206	0					
ANR	4059212	Identifier	proc		4059206	1					
ANR	4059213	IdentifierDeclStatement	int periodic_checkpointing = FALSE ;	818:1:19104:19140	4059206	1	True				
ANR	4059214	IdentifierDecl	periodic_checkpointing = FALSE		4059206	0					
ANR	4059215	IdentifierDeclType	int		4059206	0					
ANR	4059216	Identifier	periodic_checkpointing		4059206	1					
ANR	4059217	AssignmentExpression	periodic_checkpointing = FALSE		4059206	2		=			
ANR	4059218	Identifier	FALSE		4059206	0					
ANR	4059219	Identifier	FALSE		4059206	1					
ANR	4059220	Statement	static	819:1:19143:19148	4059206	2	True				
ANR	4059221	IdentifierDeclStatement	Transition * tr = 0 ;	819:8:19150:19168	4059206	3	True				
ANR	4059222	IdentifierDecl	* tr = 0		4059206	0					
ANR	4059223	IdentifierDeclType	Transition *		4059206	0					
ANR	4059224	Identifier	tr		4059206	1					
ANR	4059225	AssignmentExpression	* tr = 0		4059206	2		=			
ANR	4059226	Identifier	tr		4059206	0					
ANR	4059227	PrimaryExpression	0		4059206	1					
ANR	4059228	ExpressionStatement	UProcList . Rewind ( )	824:1:19238:19256	4059206	4	True				
ANR	4059229	CallExpression	UProcList . Rewind ( )		4059206	0					
ANR	4059230	Callee	UProcList . Rewind		4059206	0					
ANR	4059231	MemberAccess	UProcList . Rewind		4059206	0					
ANR	4059232	Identifier	UProcList		4059206	0					
ANR	4059233	Identifier	Rewind		4059206	1					
ANR	4059234	ArgumentList			4059206	1					
ANR	4059235	WhileStatement	while ( ( proc = UProcList . Next ( ) ) )		4059206	5					
ANR	4059236	Condition	proc = UProcList . Next ( )	825:8:19266:19290	4059206	0	True				
ANR	4059237	AssignmentExpression	proc = UProcList . Next ( )		4059206	0		=			
ANR	4059238	Identifier	proc		4059206	0					
ANR	4059239	CallExpression	UProcList . Next ( )		4059206	1					
ANR	4059240	Callee	UProcList . Next		4059206	0					
ANR	4059241	MemberAccess	UProcList . Next		4059206	0					
ANR	4059242	Identifier	UProcList		4059206	0					
ANR	4059243	Identifier	Next		4059206	1					
ANR	4059244	ArgumentList			4059206	1					
ANR	4059245	CompoundStatement		10:36:209:209	4059206	1					
ANR	4059246	IfStatement	if ( proc -> ckpt_enabled ( ) )		4059206	0					
ANR	4059247	Condition	proc -> ckpt_enabled ( )	826:6:19302:19321	4059206	0	True				
ANR	4059248	CallExpression	proc -> ckpt_enabled ( )		4059206	0					
ANR	4059249	Callee	proc -> ckpt_enabled		4059206	0					
ANR	4059250	PtrMemberAccess	proc -> ckpt_enabled		4059206	0					
ANR	4059251	Identifier	proc		4059206	0					
ANR	4059252	Identifier	ckpt_enabled		4059206	1					
ANR	4059253	ArgumentList			4059206	1					
ANR	4059254	CompoundStatement		11:29:240:240	4059206	1					
ANR	4059255	ExpressionStatement	periodic_checkpointing = TRUE	827:3:19330:19359	4059206	0	True				
ANR	4059256	AssignmentExpression	periodic_checkpointing = TRUE		4059206	0		=			
ANR	4059257	Identifier	periodic_checkpointing		4059206	0					
ANR	4059258	Identifier	TRUE		4059206	1					
ANR	4059259	BreakStatement	break ;	828:3:19364:19369	4059206	1	True				
ANR	4059260	IfStatement	if ( tr == 0 )		4059206	6					
ANR	4059261	Condition	tr == 0	832:5:19384:19390	4059206	0	True				
ANR	4059262	EqualityExpression	tr == 0		4059206	0		==			
ANR	4059263	Identifier	tr		4059206	0					
ANR	4059264	PrimaryExpression	0		4059206	1					
ANR	4059265	CompoundStatement		17:14:308:308	4059206	1					
ANR	4059266	ExpressionStatement	tr = condor_starter_ptr -> find_transition ( ALARM )	833:2:19397:19446	4059206	0	True				
ANR	4059267	AssignmentExpression	tr = condor_starter_ptr -> find_transition ( ALARM )		4059206	0		=			
ANR	4059268	Identifier	tr		4059206	0					
ANR	4059269	CallExpression	condor_starter_ptr -> find_transition ( ALARM )		4059206	1					
ANR	4059270	Callee	condor_starter_ptr -> find_transition		4059206	0					
ANR	4059271	PtrMemberAccess	condor_starter_ptr -> find_transition		4059206	0					
ANR	4059272	Identifier	condor_starter_ptr		4059206	0					
ANR	4059273	Identifier	find_transition		4059206	1					
ANR	4059274	ArgumentList	ALARM		4059206	1					
ANR	4059275	Argument	ALARM		4059206	0					
ANR	4059276	Identifier	ALARM		4059206	0					
ANR	4059277	IfStatement	if ( tr )		4059206	1					
ANR	4059278	Condition	tr	834:7:19455:19456	4059206	0	True				
ANR	4059279	Identifier	tr		4059206	0					
ANR	4059280	CompoundStatement		19:12:375:375	4059206	1					
ANR	4059281	ExpressionStatement	condor_starter_ptr -> dont_print_transition ( tr )	835:3:19465:19512	4059206	0	True				
ANR	4059282	CallExpression	condor_starter_ptr -> dont_print_transition ( tr )		4059206	0					
ANR	4059283	Callee	condor_starter_ptr -> dont_print_transition		4059206	0					
ANR	4059284	PtrMemberAccess	condor_starter_ptr -> dont_print_transition		4059206	0					
ANR	4059285	Identifier	condor_starter_ptr		4059206	0					
ANR	4059286	Identifier	dont_print_transition		4059206	1					
ANR	4059287	ArgumentList	tr		4059206	1					
ANR	4059288	Argument	tr		4059206	0					
ANR	4059289	Identifier	tr		4059206	0					
ANR	4059290	ForStatement	for ( ; ; )		4059206	7					
ANR	4059291	CompoundStatement		24:9:446:446	4059206	0					
ANR	4059292	ExpressionStatement	MyAlarm . set ( 300 )	841:2:19601:19617	4059206	0	True				
ANR	4059293	CallExpression	MyAlarm . set ( 300 )		4059206	0					
ANR	4059294	Callee	MyAlarm . set		4059206	0					
ANR	4059295	MemberAccess	MyAlarm . set		4059206	0					
ANR	4059296	Identifier	MyAlarm		4059206	0					
ANR	4059297	Identifier	set		4059206	1					
ANR	4059298	ArgumentList	300		4059206	1					
ANR	4059299	Argument	300		4059206	0					
ANR	4059300	PrimaryExpression	300		4059206	0					
ANR	4059301	ExpressionStatement	pause ( )	844:2:19651:19658	4059206	1	True				
ANR	4059302	CallExpression	pause ( )		4059206	0					
ANR	4059303	Callee	pause		4059206	0					
ANR	4059304	Identifier	pause		4059206	0					
ANR	4059305	ArgumentList			4059206	1					
ANR	4059306	ReturnStatement	return NO_EVENT ;	848:1:19689:19704	4059206	8	True				
ANR	4059307	Identifier	NO_EVENT		4059206	0					
ANR	4059308	ReturnType	int		4059206	1					
ANR	4059309	Identifier	supervise_all		4059206	2					
ANR	4059310	ParameterList			4059206	3					
ANR	4059311	CFGEntryNode	ENTRY		4059206		True				
ANR	4059312	CFGExitNode	EXIT		4059206		True				
ANR	4059313	InfiniteForNode	true		4059206		True				
ANR	4059314	Symbol	proc		4059206						
ANR	4059315	Symbol	UProcList . Next		4059206						
ANR	4059316	Symbol	proc -> ckpt_enabled		4059206						
ANR	4059317	Symbol	NO_EVENT		4059206						
ANR	4059318	Symbol	MyAlarm		4059206						
ANR	4059319	Symbol	ALARM		4059206						
ANR	4059320	Symbol	TRUE		4059206						
ANR	4059321	Symbol	* condor_starter_ptr		4059206						
ANR	4059322	Symbol	* proc		4059206						
ANR	4059323	Symbol	condor_starter_ptr -> find_transition		4059206						
ANR	4059324	Symbol	periodic_checkpointing		4059206						
ANR	4059325	Symbol	UProcList		4059206						
ANR	4059326	Symbol	FALSE		4059206						
ANR	4059327	Symbol	tr		4059206						
ANR	4059328	Symbol	condor_starter_ptr		4059206						
ANR	4059329	Function	proc_exit	855:0:19851:20331							
ANR	4059330	FunctionDef	proc_exit ()		4059329	0					
ANR	4059331	CompoundStatement		857:0:19867:20331	4059329	0					
ANR	4059332	IdentifierDeclStatement	UserProc * proc ;	858:1:19870:19884	4059329	0	True				
ANR	4059333	IdentifierDecl	* proc		4059329	0					
ANR	4059334	IdentifierDeclType	UserProc *		4059329	0					
ANR	4059335	Identifier	proc		4059329	1					
ANR	4059336	IdentifierDeclStatement	PROC_STATE state ;	859:1:19887:19903	4059329	1	True				
ANR	4059337	IdentifierDecl	state		4059329	0					
ANR	4059338	IdentifierDeclType	PROC_STATE		4059329	0					
ANR	4059339	Identifier	state		4059329	1					
ANR	4059340	ExpressionStatement	proc = UProcList . Current ( )	862:1:19953:19979	4059329	2	True				
ANR	4059341	AssignmentExpression	proc = UProcList . Current ( )		4059329	0		=			
ANR	4059342	Identifier	proc		4059329	0					
ANR	4059343	CallExpression	UProcList . Current ( )		4059329	1					
ANR	4059344	Callee	UProcList . Current		4059329	0					
ANR	4059345	MemberAccess	UProcList . Current		4059329	0					
ANR	4059346	Identifier	UProcList		4059329	0					
ANR	4059347	Identifier	Current		4059329	1					
ANR	4059348	ArgumentList			4059329	1					
ANR	4059349	SwitchStatement	switch ( state = proc -> get_state ( ) )		4059329	3					
ANR	4059350	Condition	state = proc -> get_state ( )	864:9:19991:20015	4059329	0	True				
ANR	4059351	AssignmentExpression	state = proc -> get_state ( )		4059329	0		=			
ANR	4059352	Identifier	state		4059329	0					
ANR	4059353	CallExpression	proc -> get_state ( )		4059329	1					
ANR	4059354	Callee	proc -> get_state		4059329	0					
ANR	4059355	PtrMemberAccess	proc -> get_state		4059329	0					
ANR	4059356	Identifier	proc		4059329	0					
ANR	4059357	Identifier	get_state		4059329	1					
ANR	4059358	ArgumentList			4059329	1					
ANR	4059359	CompoundStatement		8:37:151:151	4059329	1					
ANR	4059360	Label	case CHECKPOINTING :	866:3:20025:20043	4059329	0	True				
ANR	4059361	Identifier	CHECKPOINTING		4059329	0					
ANR	4059362	ReturnStatement	return CKPT_EXIT ;	867:2:20047:20063	4059329	1	True				
ANR	4059363	Identifier	CKPT_EXIT		4059329	0					
ANR	4059364	Label	case ABNORMAL_EXIT :	869:3:20120:20138	4059329	2	True				
ANR	4059365	Identifier	ABNORMAL_EXIT		4059329	0					
ANR	4059366	ReturnStatement	return HAS_CORE ;	870:2:20142:20157	4059329	3	True				
ANR	4059367	Identifier	HAS_CORE		4059329	0					
ANR	4059368	Label	case NON_RUNNABLE :	872:3:20163:20180	4059329	4	True				
ANR	4059369	Identifier	NON_RUNNABLE		4059329	0					
ANR	4059370	Label	case NORMAL_EXIT :	873:3:20185:20201	4059329	5	True				
ANR	4059371	Identifier	NORMAL_EXIT		4059329	0					
ANR	4059372	ReturnStatement	return NO_CORE ;	874:2:20205:20219	4059329	6	True				
ANR	4059373	Identifier	NO_CORE		4059329	0					
ANR	4059374	Label	default :	876:3:20225:20232	4059329	7	True				
ANR	4059375	Identifier	default		4059329	0					
ANR	4059376	ExpressionStatement	"EXCEPT ( ""Unexpected proc state (%d)\\n"" , state )"	877:2:20236:20283	4059329	8	True				
ANR	4059377	CallExpression	"EXCEPT ( ""Unexpected proc state (%d)\\n"" , state )"		4059329	0					
ANR	4059378	Callee	EXCEPT		4059329	0					
ANR	4059379	Identifier	EXCEPT		4059329	0					
ANR	4059380	ArgumentList	"""Unexpected proc state (%d)\\n"""		4059329	1					
ANR	4059381	Argument	"""Unexpected proc state (%d)\\n"""		4059329	0					
ANR	4059382	PrimaryExpression	"""Unexpected proc state (%d)\\n"""		4059329	0					
ANR	4059383	Argument	state		4059329	1					
ANR	4059384	Identifier	state		4059329	0					
ANR	4059385	ReturnStatement	return DEFAULT ;	881:1:20315:20329	4059329	4	True				
ANR	4059386	Identifier	DEFAULT		4059329	0					
ANR	4059387	ReturnType	int		4059329	1					
ANR	4059388	Identifier	proc_exit		4059329	2					
ANR	4059389	ParameterList			4059329	3					
ANR	4059390	CFGEntryNode	ENTRY		4059329		True				
ANR	4059391	CFGExitNode	EXIT		4059329		True				
ANR	4059392	Symbol	proc -> get_state		4059329						
ANR	4059393	Symbol	proc		4059329						
ANR	4059394	Symbol	HAS_CORE		4059329						
ANR	4059395	Symbol	NO_CORE		4059329						
ANR	4059396	Symbol	UProcList		4059329						
ANR	4059397	Symbol	CKPT_EXIT		4059329						
ANR	4059398	Symbol	state		4059329						
ANR	4059399	Symbol	DEFAULT		4059329						
ANR	4059400	Symbol	UProcList . Current		4059329						
ANR	4059401	Symbol	* proc		4059329						
ANR	4059402	Function	dispose_one	887:0:20385:20719							
ANR	4059403	FunctionDef	dispose_one ()		4059402	0					
ANR	4059404	CompoundStatement		889:0:20403:20719	4059402	0					
ANR	4059405	IdentifierDeclStatement	UserProc * proc ;	890:1:20406:20420	4059402	0	True				
ANR	4059406	IdentifierDecl	* proc		4059402	0					
ANR	4059407	IdentifierDeclType	UserProc *		4059402	0					
ANR	4059408	Identifier	proc		4059402	1					
ANR	4059409	ExpressionStatement	proc = UProcList . Current ( )	893:1:20470:20496	4059402	1	True				
ANR	4059410	AssignmentExpression	proc = UProcList . Current ( )		4059402	0		=			
ANR	4059411	Identifier	proc		4059402	0					
ANR	4059412	CallExpression	UProcList . Current ( )		4059402	1					
ANR	4059413	Callee	UProcList . Current		4059402	0					
ANR	4059414	MemberAccess	UProcList . Current		4059402	0					
ANR	4059415	Identifier	UProcList		4059402	0					
ANR	4059416	Identifier	Current		4059402	1					
ANR	4059417	ArgumentList			4059402	1					
ANR	4059418	ExpressionStatement	send_final_status ( proc )	896:1:20534:20559	4059402	2	True				
ANR	4059419	CallExpression	send_final_status ( proc )		4059402	0					
ANR	4059420	Callee	send_final_status		4059402	0					
ANR	4059421	Identifier	send_final_status		4059402	0					
ANR	4059422	ArgumentList	proc		4059402	1					
ANR	4059423	Argument	proc		4059402	0					
ANR	4059424	Identifier	proc		4059402	0					
ANR	4059425	ExpressionStatement	proc -> delete_files ( )	899:1:20594:20614	4059402	3	True				
ANR	4059426	CallExpression	proc -> delete_files ( )		4059402	0					
ANR	4059427	Callee	proc -> delete_files		4059402	0					
ANR	4059428	PtrMemberAccess	proc -> delete_files		4059402	0					
ANR	4059429	Identifier	proc		4059402	0					
ANR	4059430	Identifier	delete_files		4059402	1					
ANR	4059431	ArgumentList			4059402	1					
ANR	4059432	ExpressionStatement	UProcList . DeleteCurrent ( )	901:1:20619:20644	4059402	4	True				
ANR	4059433	CallExpression	UProcList . DeleteCurrent ( )		4059402	0					
ANR	4059434	Callee	UProcList . DeleteCurrent		4059402	0					
ANR	4059435	MemberAccess	UProcList . DeleteCurrent		4059402	0					
ANR	4059436	Identifier	UProcList		4059402	0					
ANR	4059437	Identifier	DeleteCurrent		4059402	1					
ANR	4059438	ArgumentList			4059402	1					
ANR	4059439	Statement	delete	902:1:20647:20652	4059402	5	True				
ANR	4059440	ExpressionStatement	proc	902:8:20654:20658	4059402	6	True				
ANR	4059441	Identifier	proc		4059402	0					
ANR	4059442	ReturnStatement	return ( 0 ) ;	903:1:20708:20717	4059402	7	True				
ANR	4059443	PrimaryExpression	0		4059402	0					
ANR	4059444	ReturnType	int		4059402	1					
ANR	4059445	Identifier	dispose_one		4059402	2					
ANR	4059446	ParameterList			4059402	3					
ANR	4059447	CFGEntryNode	ENTRY		4059402		True				
ANR	4059448	CFGExitNode	EXIT		4059402		True				
ANR	4059449	Symbol	proc		4059402						
ANR	4059450	Symbol	UProcList		4059402						
ANR	4059451	Symbol	UProcList . Current		4059402						
ANR	4059452	Function	make_runnable	909:0:20773:20978							
ANR	4059453	FunctionDef	make_runnable ()		4059452	0					
ANR	4059454	CompoundStatement		911:0:20793:20978	4059452	0					
ANR	4059455	IdentifierDeclStatement	UserProc * proc ;	912:1:20796:20810	4059452	0	True				
ANR	4059456	IdentifierDecl	* proc		4059452	0					
ANR	4059457	IdentifierDeclType	UserProc *		4059452	0					
ANR	4059458	Identifier	proc		4059452	1					
ANR	4059459	ExpressionStatement	proc = UProcList . Current ( )	915:1:20860:20886	4059452	1	True				
ANR	4059460	AssignmentExpression	proc = UProcList . Current ( )		4059452	0		=			
ANR	4059461	Identifier	proc		4059452	0					
ANR	4059462	CallExpression	UProcList . Current ( )		4059452	1					
ANR	4059463	Callee	UProcList . Current		4059452	0					
ANR	4059464	MemberAccess	UProcList . Current		4059452	0					
ANR	4059465	Identifier	UProcList		4059452	0					
ANR	4059466	Identifier	Current		4059452	1					
ANR	4059467	ArgumentList			4059452	1					
ANR	4059468	ExpressionStatement	proc -> make_runnable ( )	918:1:20924:20945	4059452	2	True				
ANR	4059469	CallExpression	proc -> make_runnable ( )		4059452	0					
ANR	4059470	Callee	proc -> make_runnable		4059452	0					
ANR	4059471	PtrMemberAccess	proc -> make_runnable		4059452	0					
ANR	4059472	Identifier	proc		4059452	0					
ANR	4059473	Identifier	make_runnable		4059452	1					
ANR	4059474	ArgumentList			4059452	1					
ANR	4059475	ExpressionStatement	proc -> execute ( )	919:1:20948:20963	4059452	3	True				
ANR	4059476	CallExpression	proc -> execute ( )		4059452	0					
ANR	4059477	Callee	proc -> execute		4059452	0					
ANR	4059478	PtrMemberAccess	proc -> execute		4059452	0					
ANR	4059479	Identifier	proc		4059452	0					
ANR	4059480	Identifier	execute		4059452	1					
ANR	4059481	ArgumentList			4059452	1					
ANR	4059482	ReturnStatement	return ( 0 ) ;	921:1:20967:20976	4059452	4	True				
ANR	4059483	PrimaryExpression	0		4059452	0					
ANR	4059484	ReturnType	int		4059452	1					
ANR	4059485	Identifier	make_runnable		4059452	2					
ANR	4059486	ParameterList			4059452	3					
ANR	4059487	CFGEntryNode	ENTRY		4059452		True				
ANR	4059488	CFGExitNode	EXIT		4059452		True				
ANR	4059489	Symbol	proc		4059452						
ANR	4059490	Symbol	UProcList		4059452						
ANR	4059491	Symbol	UProcList . Current		4059452						
ANR	4059492	Function	send_core	928:0:21124:21274							
ANR	4059493	FunctionDef	send_core ()		4059492	0					
ANR	4059494	CompoundStatement		929:0:21140:21274	4059492	0					
ANR	4059495	IdentifierDeclStatement	UserProc * proc ;	930:1:21143:21157	4059492	0	True				
ANR	4059496	IdentifierDecl	* proc		4059492	0					
ANR	4059497	IdentifierDeclType	UserProc *		4059492	0					
ANR	4059498	Identifier	proc		4059492	1					
ANR	4059499	ExpressionStatement	proc = UProcList . Current ( )	933:1:21207:21233	4059492	1	True				
ANR	4059500	AssignmentExpression	proc = UProcList . Current ( )		4059492	0		=			
ANR	4059501	Identifier	proc		4059492	0					
ANR	4059502	CallExpression	UProcList . Current ( )		4059492	1					
ANR	4059503	Callee	UProcList . Current		4059492	0					
ANR	4059504	MemberAccess	UProcList . Current		4059492	0					
ANR	4059505	Identifier	UProcList		4059492	0					
ANR	4059506	Identifier	Current		4059492	1					
ANR	4059507	ArgumentList			4059492	1					
ANR	4059508	ExpressionStatement	proc -> store_core ( )	934:1:21236:21254	4059492	2	True				
ANR	4059509	CallExpression	proc -> store_core ( )		4059492	0					
ANR	4059510	Callee	proc -> store_core		4059492	0					
ANR	4059511	PtrMemberAccess	proc -> store_core		4059492	0					
ANR	4059512	Identifier	proc		4059492	0					
ANR	4059513	Identifier	store_core		4059492	1					
ANR	4059514	ArgumentList			4059492	1					
ANR	4059515	ReturnStatement	return DEFAULT ;	936:1:21258:21272	4059492	3	True				
ANR	4059516	Identifier	DEFAULT		4059492	0					
ANR	4059517	ReturnType	int		4059492	1					
ANR	4059518	Identifier	send_core		4059492	2					
ANR	4059519	ParameterList			4059492	3					
ANR	4059520	CFGEntryNode	ENTRY		4059492		True				
ANR	4059521	CFGExitNode	EXIT		4059492		True				
ANR	4059522	Symbol	proc		4059492						
ANR	4059523	Symbol	UProcList		4059492						
ANR	4059524	Symbol	DEFAULT		4059492						
ANR	4059525	Symbol	UProcList . Current		4059492						
ANR	4059526	Function	asynch_wait	945:0:21471:21558							
ANR	4059527	FunctionDef	asynch_wait ()		4059526	0					
ANR	4059528	CompoundStatement		947:0:21489:21558	4059526	0					
ANR	4059529	ForStatement	for ( ; ; )		4059526	0					
ANR	4059530	CompoundStatement		2:9:10:10	4059526	0					
ANR	4059531	ExpressionStatement	pause ( )	949:2:21504:21511	4059526	0	True				
ANR	4059532	CallExpression	pause ( )		4059526	0					
ANR	4059533	Callee	pause		4059526	0					
ANR	4059534	Identifier	pause		4059526	0					
ANR	4059535	ArgumentList			4059526	1					
ANR	4059536	ReturnStatement	return NO_EVENT ;	952:1:21541:21556	4059526	1	True				
ANR	4059537	Identifier	NO_EVENT		4059526	0					
ANR	4059538	ReturnType	int		4059526	1					
ANR	4059539	Identifier	asynch_wait		4059526	2					
ANR	4059540	ParameterList			4059526	3					
ANR	4059541	CFGEntryNode	ENTRY		4059526		True				
ANR	4059542	CFGExitNode	EXIT		4059526		True				
ANR	4059543	InfiniteForNode	true		4059526		True				
ANR	4059544	Symbol	NO_EVENT		4059526						
ANR	4059545	Function	update_cpu	961:0:21773:22167							
ANR	4059546	FunctionDef	update_cpu ()		4059545	0					
ANR	4059547	CompoundStatement		963:0:21790:22167	4059545	0					
ANR	4059548	ExpressionStatement	proc = UProcList . Current ( )	972:1:22037:22063	4059545	0	True				
ANR	4059549	AssignmentExpression	proc = UProcList . Current ( )		4059545	0		=			
ANR	4059550	Identifier	proc		4059545	0					
ANR	4059551	CallExpression	UProcList . Current ( )		4059545	1					
ANR	4059552	Callee	UProcList . Current		4059545	0					
ANR	4059553	MemberAccess	UProcList . Current		4059545	0					
ANR	4059554	Identifier	UProcList		4059545	0					
ANR	4059555	Identifier	Current		4059545	1					
ANR	4059556	ArgumentList			4059545	1					
ANR	4059557	ExpressionStatement	rusage = proc -> accumulated_rusage ( )	974:1:22067:22102	4059545	1	True				
ANR	4059558	AssignmentExpression	rusage = proc -> accumulated_rusage ( )		4059545	0		=			
ANR	4059559	Identifier	rusage		4059545	0					
ANR	4059560	CallExpression	proc -> accumulated_rusage ( )		4059545	1					
ANR	4059561	Callee	proc -> accumulated_rusage		4059545	0					
ANR	4059562	PtrMemberAccess	proc -> accumulated_rusage		4059545	0					
ANR	4059563	Identifier	proc		4059545	0					
ANR	4059564	Identifier	accumulated_rusage		4059545	1					
ANR	4059565	ArgumentList			4059545	1					
ANR	4059566	ExpressionStatement	( void ) REMOTE_CONDOR_send_rusage ( rusage )	975:1:22105:22146	4059545	2	True				
ANR	4059567	CastExpression	( void ) REMOTE_CONDOR_send_rusage ( rusage )		4059545	0					
ANR	4059568	CastTarget	void		4059545	0					
ANR	4059569	CallExpression	REMOTE_CONDOR_send_rusage ( rusage )		4059545	1					
ANR	4059570	Callee	REMOTE_CONDOR_send_rusage		4059545	0					
ANR	4059571	Identifier	REMOTE_CONDOR_send_rusage		4059545	0					
ANR	4059572	ArgumentList	rusage		4059545	1					
ANR	4059573	Argument	rusage		4059545	0					
ANR	4059574	Identifier	rusage		4059545	0					
ANR	4059575	ReturnStatement	return ( 0 ) ;	977:1:22156:22165	4059545	3	True				
ANR	4059576	PrimaryExpression	0		4059545	0					
ANR	4059577	ReturnType	int		4059545	1					
ANR	4059578	Identifier	update_cpu		4059545	2					
ANR	4059579	ParameterList			4059545	3					
ANR	4059580	CFGEntryNode	ENTRY		4059545		True				
ANR	4059581	CFGExitNode	EXIT		4059545		True				
ANR	4059582	Symbol	rusage		4059545						
ANR	4059583	Symbol	proc		4059545						
ANR	4059584	Symbol	UProcList		4059545						
ANR	4059585	Symbol	proc -> accumulated_rusage		4059545						
ANR	4059586	Symbol	UProcList . Current		4059545						
ANR	4059587	Symbol	* proc		4059545						
ANR	4059588	Function	get_job_info	987:0:22363:23732							
ANR	4059589	FunctionDef	get_job_info ()		4059588	0					
ANR	4059590	CompoundStatement		989:0:22389:23732	4059588	0					
ANR	4059591	IdentifierDeclStatement	UserProc * u_proc ;	990:1:22392:22409	4059588	0	True				
ANR	4059592	IdentifierDecl	* u_proc		4059588	0					
ANR	4059593	IdentifierDeclType	UserProc *		4059588	0					
ANR	4059594	Identifier	u_proc		4059588	1					
ANR	4059595	IdentifierDeclStatement	STARTUP_INFO s ;	991:1:22412:22426	4059588	1	True				
ANR	4059596	IdentifierDecl	s		4059588	0					
ANR	4059597	IdentifierDeclType	STARTUP_INFO		4059588	0					
ANR	4059598	Identifier	s		4059588	1					
ANR	4059599	ExpressionStatement	"memset ( ( char * ) & s , 0 , sizeof ( STARTUP_INFO ) )"	998:1:22562:22605	4059588	2	True				
ANR	4059600	CallExpression	"memset ( ( char * ) & s , 0 , sizeof ( STARTUP_INFO ) )"		4059588	0					
ANR	4059601	Callee	memset		4059588	0					
ANR	4059602	Identifier	memset		4059588	0					
ANR	4059603	ArgumentList	( char * ) & s		4059588	1					
ANR	4059604	Argument	( char * ) & s		4059588	0					
ANR	4059605	CastExpression	( char * ) & s		4059588	0					
ANR	4059606	CastTarget	char *		4059588	0					
ANR	4059607	UnaryOperationExpression	& s		4059588	1					
ANR	4059608	UnaryOperator	&		4059588	0					
ANR	4059609	Identifier	s		4059588	1					
ANR	4059610	Argument	0		4059588	1					
ANR	4059611	PrimaryExpression	0		4059588	0					
ANR	4059612	Argument	sizeof ( STARTUP_INFO )		4059588	2					
ANR	4059613	SizeofExpression	sizeof ( STARTUP_INFO )		4059588	0					
ANR	4059614	Sizeof	sizeof		4059588	0					
ANR	4059615	SizeofOperand	STARTUP_INFO		4059588	1					
ANR	4059616	ExpressionStatement	"dprintf ( D_ALWAYS , ""Entering get_job_info()\\n"" )"	1000:1:22609:22657	4059588	3	True				
ANR	4059617	CallExpression	"dprintf ( D_ALWAYS , ""Entering get_job_info()\\n"" )"		4059588	0					
ANR	4059618	Callee	dprintf		4059588	0					
ANR	4059619	Identifier	dprintf		4059588	0					
ANR	4059620	ArgumentList	D_ALWAYS		4059588	1					
ANR	4059621	Argument	D_ALWAYS		4059588	0					
ANR	4059622	Identifier	D_ALWAYS		4059588	0					
ANR	4059623	Argument	"""Entering get_job_info()\\n"""		4059588	1					
ANR	4059624	PrimaryExpression	"""Entering get_job_info()\\n"""		4059588	0					
ANR	4059625	ExpressionStatement	"memset ( & s , 0 , sizeof ( s ) )"	1002:1:22661:22687	4059588	4	True				
ANR	4059626	CallExpression	"memset ( & s , 0 , sizeof ( s ) )"		4059588	0					
ANR	4059627	Callee	memset		4059588	0					
ANR	4059628	Identifier	memset		4059588	0					
ANR	4059629	ArgumentList	& s		4059588	1					
ANR	4059630	Argument	& s		4059588	0					
ANR	4059631	UnaryOperationExpression	& s		4059588	0					
ANR	4059632	UnaryOperator	&		4059588	0					
ANR	4059633	Identifier	s		4059588	1					
ANR	4059634	Argument	0		4059588	1					
ANR	4059635	PrimaryExpression	0		4059588	0					
ANR	4059636	Argument	sizeof ( s )		4059588	2					
ANR	4059637	SizeofExpression	sizeof ( s )		4059588	0					
ANR	4059638	Sizeof	sizeof		4059588	0					
ANR	4059639	SizeofOperand	s		4059588	1					
ANR	4059640	ExpressionStatement	REMOTE_CONDOR_startup_info_request ( & s )	1003:1:22690:22730	4059588	5	True				
ANR	4059641	CallExpression	REMOTE_CONDOR_startup_info_request ( & s )		4059588	0					
ANR	4059642	Callee	REMOTE_CONDOR_startup_info_request		4059588	0					
ANR	4059643	Identifier	REMOTE_CONDOR_startup_info_request		4059588	0					
ANR	4059644	ArgumentList	& s		4059588	1					
ANR	4059645	Argument	& s		4059588	0					
ANR	4059646	UnaryOperationExpression	& s		4059588	0					
ANR	4059647	UnaryOperator	&		4059588	0					
ANR	4059648	Identifier	s		4059588	1					
ANR	4059649	ExpressionStatement	"display_startup_info ( & s , D_ALWAYS )"	1004:1:22733:22769	4059588	6	True				
ANR	4059650	CallExpression	"display_startup_info ( & s , D_ALWAYS )"		4059588	0					
ANR	4059651	Callee	display_startup_info		4059588	0					
ANR	4059652	Identifier	display_startup_info		4059588	0					
ANR	4059653	ArgumentList	& s		4059588	1					
ANR	4059654	Argument	& s		4059588	0					
ANR	4059655	UnaryOperationExpression	& s		4059588	0					
ANR	4059656	UnaryOperator	&		4059588	0					
ANR	4059657	Identifier	s		4059588	1					
ANR	4059658	Argument	D_ALWAYS		4059588	1					
ANR	4059659	Identifier	D_ALWAYS		4059588	0					
ANR	4059660	ExpressionStatement	"determine_user_ids ( s . uid , s . gid )"	1006:1:22773:22807	4059588	7	True				
ANR	4059661	CallExpression	"determine_user_ids ( s . uid , s . gid )"		4059588	0					
ANR	4059662	Callee	determine_user_ids		4059588	0					
ANR	4059663	Identifier	determine_user_ids		4059588	0					
ANR	4059664	ArgumentList	s . uid		4059588	1					
ANR	4059665	Argument	s . uid		4059588	0					
ANR	4059666	MemberAccess	s . uid		4059588	0					
ANR	4059667	Identifier	s		4059588	0					
ANR	4059668	Identifier	uid		4059588	1					
ANR	4059669	Argument	s . gid		4059588	1					
ANR	4059670	MemberAccess	s . gid		4059588	0					
ANR	4059671	Identifier	s		4059588	0					
ANR	4059672	Identifier	gid		4059588	1					
ANR	4059673	ExpressionStatement	"dprintf ( D_ALWAYS , ""User uid set to %d\\n"" , s . uid )"	1008:1:22811:22861	4059588	8	True				
ANR	4059674	CallExpression	"dprintf ( D_ALWAYS , ""User uid set to %d\\n"" , s . uid )"		4059588	0					
ANR	4059675	Callee	dprintf		4059588	0					
ANR	4059676	Identifier	dprintf		4059588	0					
ANR	4059677	ArgumentList	D_ALWAYS		4059588	1					
ANR	4059678	Argument	D_ALWAYS		4059588	0					
ANR	4059679	Identifier	D_ALWAYS		4059588	0					
ANR	4059680	Argument	"""User uid set to %d\\n"""		4059588	1					
ANR	4059681	PrimaryExpression	"""User uid set to %d\\n"""		4059588	0					
ANR	4059682	Argument	s . uid		4059588	2					
ANR	4059683	MemberAccess	s . uid		4059588	0					
ANR	4059684	Identifier	s		4059588	0					
ANR	4059685	Identifier	uid		4059588	1					
ANR	4059686	ExpressionStatement	"dprintf ( D_ALWAYS , ""User uid set to %d\\n"" , s . gid )"	1009:1:22864:22914	4059588	9	True				
ANR	4059687	CallExpression	"dprintf ( D_ALWAYS , ""User uid set to %d\\n"" , s . gid )"		4059588	0					
ANR	4059688	Callee	dprintf		4059588	0					
ANR	4059689	Identifier	dprintf		4059588	0					
ANR	4059690	ArgumentList	D_ALWAYS		4059588	1					
ANR	4059691	Argument	D_ALWAYS		4059588	0					
ANR	4059692	Identifier	D_ALWAYS		4059588	0					
ANR	4059693	Argument	"""User uid set to %d\\n"""		4059588	1					
ANR	4059694	PrimaryExpression	"""User uid set to %d\\n"""		4059588	0					
ANR	4059695	Argument	s . gid		4059588	2					
ANR	4059696	MemberAccess	s . gid		4059588	0					
ANR	4059697	Identifier	s		4059588	0					
ANR	4059698	Identifier	gid		4059588	1					
ANR	4059699	ExpressionStatement	"set_user_ids ( s . uid , s . gid )"	1011:1:22918:22946	4059588	10	True				
ANR	4059700	CallExpression	"set_user_ids ( s . uid , s . gid )"		4059588	0					
ANR	4059701	Callee	set_user_ids		4059588	0					
ANR	4059702	Identifier	set_user_ids		4059588	0					
ANR	4059703	ArgumentList	s . uid		4059588	1					
ANR	4059704	Argument	s . uid		4059588	0					
ANR	4059705	MemberAccess	s . uid		4059588	0					
ANR	4059706	Identifier	s		4059588	0					
ANR	4059707	Identifier	uid		4059588	1					
ANR	4059708	Argument	s . gid		4059588	1					
ANR	4059709	MemberAccess	s . gid		4059588	0					
ANR	4059710	Identifier	s		4059588	0					
ANR	4059711	Identifier	gid		4059588	1					
ANR	4059712	SwitchStatement	switch ( s . job_class )		4059588	11					
ANR	4059713	Condition	s . job_class	1013:9:22958:22968	4059588	0	True				
ANR	4059714	MemberAccess	s . job_class		4059588	0					
ANR	4059715	Identifier	s		4059588	0					
ANR	4059716	Identifier	job_class		4059588	1					
ANR	4059717	CompoundStatement		25:23:582:582	4059588	1					
ANR	4059718	Label	case CONDOR_UNIVERSE_PVMD :	1015:2:22982:23007	4059588	0	True				
ANR	4059719	Identifier	CONDOR_UNIVERSE_PVMD		4059588	0					
ANR	4059720	ExpressionStatement	u_proc = new PVMdProc ( s )	1016:3:23012:23038	4059588	1	True				
ANR	4059721	AssignmentExpression	u_proc = new PVMdProc ( s )		4059588	0		=			
ANR	4059722	Identifier	u_proc		4059588	0					
ANR	4059723	Identifier	s		4059588	1					
ANR	4059724	BreakStatement	break ;	1017:3:23043:23048	4059588	2	True				
ANR	4059725	Label	case CONDOR_UNIVERSE_PVM :	1018:2:23052:23076	4059588	3	True				
ANR	4059726	Identifier	CONDOR_UNIVERSE_PVM		4059588	0					
ANR	4059727	ExpressionStatement	u_proc = new PVMUserProc ( s )	1019:3:23081:23110	4059588	4	True				
ANR	4059728	AssignmentExpression	u_proc = new PVMUserProc ( s )		4059588	0		=			
ANR	4059729	Identifier	u_proc		4059588	0					
ANR	4059730	Identifier	s		4059588	1					
ANR	4059731	BreakStatement	break ;	1020:3:23115:23120	4059588	5	True				
ANR	4059732	Label	default :	1022:2:23131:23138	4059588	6	True				
ANR	4059733	Identifier	default		4059588	0					
ANR	4059734	IfStatement	if ( s . cmd )		4059588	7					
ANR	4059735	Condition	s . cmd	1023:6:23146:23150	4059588	0	True				
ANR	4059736	MemberAccess	s . cmd		4059588	0					
ANR	4059737	Identifier	s		4059588	0					
ANR	4059738	Identifier	cmd		4059588	1					
ANR	4059739	ExpressionStatement	u_proc = new UserProc ( s )	1024:4:23157:23183	4059588	1	True				
ANR	4059740	AssignmentExpression	u_proc = new UserProc ( s )		4059588	0		=			
ANR	4059741	Identifier	u_proc		4059588	0					
ANR	4059742	Identifier	s		4059588	1					
ANR	4059743	BreakStatement	break ;	1025:3:23188:23193	4059588	8	True				
ANR	4059744	ExpressionStatement	u_proc -> display ( )	1028:1:23200:23217	4059588	12	True				
ANR	4059745	CallExpression	u_proc -> display ( )		4059588	0					
ANR	4059746	Callee	u_proc -> display		4059588	0					
ANR	4059747	PtrMemberAccess	u_proc -> display		4059588	0					
ANR	4059748	Identifier	u_proc		4059588	0					
ANR	4059749	Identifier	display		4059588	1					
ANR	4059750	ArgumentList			4059588	1					
ANR	4059751	IfStatement	if ( s . cmd )		4059588	13					
ANR	4059752	Condition	s . cmd	1036:5:23589:23593	4059588	0	True				
ANR	4059753	MemberAccess	s . cmd		4059588	0					
ANR	4059754	Identifier	s		4059588	0					
ANR	4059755	Identifier	cmd		4059588	1					
ANR	4059756	ExpressionStatement	free ( s . cmd )	1036:13:23597:23608	4059588	1	True				
ANR	4059757	CallExpression	free ( s . cmd )		4059588	0					
ANR	4059758	Callee	free		4059588	0					
ANR	4059759	Identifier	free		4059588	0					
ANR	4059760	ArgumentList	s . cmd		4059588	1					
ANR	4059761	Argument	s . cmd		4059588	0					
ANR	4059762	MemberAccess	s . cmd		4059588	0					
ANR	4059763	Identifier	s		4059588	0					
ANR	4059764	Identifier	cmd		4059588	1					
ANR	4059765	IfStatement	if ( s . args_v1or2 )		4059588	14					
ANR	4059766	Condition	s . args_v1or2	1037:5:23615:23626	4059588	0	True				
ANR	4059767	MemberAccess	s . args_v1or2		4059588	0					
ANR	4059768	Identifier	s		4059588	0					
ANR	4059769	Identifier	args_v1or2		4059588	1					
ANR	4059770	ExpressionStatement	free ( s . args_v1or2 )	1037:19:23629:23647	4059588	1	True				
ANR	4059771	CallExpression	free ( s . args_v1or2 )		4059588	0					
ANR	4059772	Callee	free		4059588	0					
ANR	4059773	Identifier	free		4059588	0					
ANR	4059774	ArgumentList	s . args_v1or2		4059588	1					
ANR	4059775	Argument	s . args_v1or2		4059588	0					
ANR	4059776	MemberAccess	s . args_v1or2		4059588	0					
ANR	4059777	Identifier	s		4059588	0					
ANR	4059778	Identifier	args_v1or2		4059588	1					
ANR	4059779	IfStatement	if ( s . env_v1or2 )		4059588	15					
ANR	4059780	Condition	s . env_v1or2	1038:5:23654:23664	4059588	0	True				
ANR	4059781	MemberAccess	s . env_v1or2		4059588	0					
ANR	4059782	Identifier	s		4059588	0					
ANR	4059783	Identifier	env_v1or2		4059588	1					
ANR	4059784	ExpressionStatement	free ( s . env_v1or2 )	1038:19:23668:23686	4059588	1	True				
ANR	4059785	CallExpression	free ( s . env_v1or2 )		4059588	0					
ANR	4059786	Callee	free		4059588	0					
ANR	4059787	Identifier	free		4059588	0					
ANR	4059788	ArgumentList	s . env_v1or2		4059588	1					
ANR	4059789	Argument	s . env_v1or2		4059588	0					
ANR	4059790	MemberAccess	s . env_v1or2		4059588	0					
ANR	4059791	Identifier	s		4059588	0					
ANR	4059792	Identifier	env_v1or2		4059588	1					
ANR	4059793	IfStatement	if ( s . iwd )		4059588	16					
ANR	4059794	Condition	s . iwd	1039:5:23693:23697	4059588	0	True				
ANR	4059795	MemberAccess	s . iwd		4059588	0					
ANR	4059796	Identifier	s		4059588	0					
ANR	4059797	Identifier	iwd		4059588	1					
ANR	4059798	ExpressionStatement	free ( s . iwd )	1039:13:23701:23713	4059588	1	True				
ANR	4059799	CallExpression	free ( s . iwd )		4059588	0					
ANR	4059800	Callee	free		4059588	0					
ANR	4059801	Identifier	free		4059588	0					
ANR	4059802	ArgumentList	s . iwd		4059588	1					
ANR	4059803	Argument	s . iwd		4059588	0					
ANR	4059804	MemberAccess	s . iwd		4059588	0					
ANR	4059805	Identifier	s		4059588	0					
ANR	4059806	Identifier	iwd		4059588	1					
ANR	4059807	ReturnStatement	return u_proc ;	1041:1:23717:23730	4059588	17	True				
ANR	4059808	Identifier	u_proc		4059588	0					
ANR	4059809	ReturnType	UserProc *		4059588	1					
ANR	4059810	Identifier	get_job_info		4059588	2					
ANR	4059811	ParameterList			4059588	3					
ANR	4059812	CFGEntryNode	ENTRY		4059588		True				
ANR	4059813	CFGExitNode	EXIT		4059588		True				
ANR	4059814	Symbol	s . uid		4059588						
ANR	4059815	Symbol	s		4059588						
ANR	4059816	Symbol	s . gid		4059588						
ANR	4059817	Symbol	s . job_class		4059588						
ANR	4059818	Symbol	s . cmd		4059588						
ANR	4059819	Symbol	u_proc		4059588						
ANR	4059820	Symbol	s . iwd		4059588						
ANR	4059821	Symbol	D_ALWAYS		4059588						
ANR	4059822	Symbol	& s		4059588						
ANR	4059823	Symbol	s . env_v1or2		4059588						
ANR	4059824	Symbol	s . args_v1or2		4059588						
ANR	4059825	Function	cleanup	1054:0:24245:24818							
ANR	4059826	FunctionDef	cleanup ()		4059825	0					
ANR	4059827	CompoundStatement		1056:0:24259:24818	4059825	0					
ANR	4059828	IdentifierDeclStatement	UserProc * proc ;	1057:1:24262:24276	4059825	0	True				
ANR	4059829	IdentifierDecl	* proc		4059825	0					
ANR	4059830	IdentifierDeclType	UserProc *		4059825	0					
ANR	4059831	Identifier	proc		4059825	1					
ANR	4059832	ExpressionStatement	UProcList . Rewind ( )	1059:1:24280:24298	4059825	1	True				
ANR	4059833	CallExpression	UProcList . Rewind ( )		4059825	0					
ANR	4059834	Callee	UProcList . Rewind		4059825	0					
ANR	4059835	MemberAccess	UProcList . Rewind		4059825	0					
ANR	4059836	Identifier	UProcList		4059825	0					
ANR	4059837	Identifier	Rewind		4059825	1					
ANR	4059838	ArgumentList			4059825	1					
ANR	4059839	WhileStatement	while ( ( proc = UProcList . Next ( ) ) )		4059825	2					
ANR	4059840	Condition	proc = UProcList . Next ( )	1060:8:24308:24332	4059825	0	True				
ANR	4059841	AssignmentExpression	proc = UProcList . Next ( )		4059825	0		=			
ANR	4059842	Identifier	proc		4059825	0					
ANR	4059843	CallExpression	UProcList . Next ( )		4059825	1					
ANR	4059844	Callee	UProcList . Next		4059825	0					
ANR	4059845	MemberAccess	UProcList . Next		4059825	0					
ANR	4059846	Identifier	UProcList		4059825	0					
ANR	4059847	Identifier	Next		4059825	1					
ANR	4059848	ArgumentList			4059825	1					
ANR	4059849	CompoundStatement		5:36:76:76	4059825	1					
ANR	4059850	IfStatement	if ( proc -> get_class ( ) != CONDOR_UNIVERSE_PVMD )		4059825	0					
ANR	4059851	Condition	proc -> get_class ( ) != CONDOR_UNIVERSE_PVMD	1061:7:24345:24385	4059825	0	True				
ANR	4059852	EqualityExpression	proc -> get_class ( ) != CONDOR_UNIVERSE_PVMD		4059825	0		!=			
ANR	4059853	CallExpression	proc -> get_class ( )		4059825	0					
ANR	4059854	Callee	proc -> get_class		4059825	0					
ANR	4059855	PtrMemberAccess	proc -> get_class		4059825	0					
ANR	4059856	Identifier	proc		4059825	0					
ANR	4059857	Identifier	get_class		4059825	1					
ANR	4059858	ArgumentList			4059825	1					
ANR	4059859	Identifier	CONDOR_UNIVERSE_PVMD		4059825	1					
ANR	4059860	CompoundStatement		6:51:129:129	4059825	1					
ANR	4059861	ExpressionStatement	proc -> kill_forcibly ( )	1062:3:24394:24415	4059825	0	True				
ANR	4059862	CallExpression	proc -> kill_forcibly ( )		4059825	0					
ANR	4059863	Callee	proc -> kill_forcibly		4059825	0					
ANR	4059864	PtrMemberAccess	proc -> kill_forcibly		4059825	0					
ANR	4059865	Identifier	proc		4059825	0					
ANR	4059866	Identifier	kill_forcibly		4059825	1					
ANR	4059867	ArgumentList			4059825	1					
ANR	4059868	ExpressionStatement	proc -> delete_files ( )	1063:3:24420:24440	4059825	1	True				
ANR	4059869	CallExpression	proc -> delete_files ( )		4059825	0					
ANR	4059870	Callee	proc -> delete_files		4059825	0					
ANR	4059871	PtrMemberAccess	proc -> delete_files		4059825	0					
ANR	4059872	Identifier	proc		4059825	0					
ANR	4059873	Identifier	delete_files		4059825	1					
ANR	4059874	ArgumentList			4059825	1					
ANR	4059875	ExpressionStatement	UProcList . DeleteCurrent ( )	1064:3:24445:24470	4059825	2	True				
ANR	4059876	CallExpression	UProcList . DeleteCurrent ( )		4059825	0					
ANR	4059877	Callee	UProcList . DeleteCurrent		4059825	0					
ANR	4059878	MemberAccess	UProcList . DeleteCurrent		4059825	0					
ANR	4059879	Identifier	UProcList		4059825	0					
ANR	4059880	Identifier	DeleteCurrent		4059825	1					
ANR	4059881	ArgumentList			4059825	1					
ANR	4059882	Statement	delete	1065:3:24475:24480	4059825	3	True				
ANR	4059883	ExpressionStatement	proc	1065:10:24482:24486	4059825	4	True				
ANR	4059884	Identifier	proc		4059825	0					
ANR	4059885	ExpressionStatement	UProcList . Rewind ( )	1068:1:24543:24561	4059825	3	True				
ANR	4059886	CallExpression	UProcList . Rewind ( )		4059825	0					
ANR	4059887	Callee	UProcList . Rewind		4059825	0					
ANR	4059888	MemberAccess	UProcList . Rewind		4059825	0					
ANR	4059889	Identifier	UProcList		4059825	0					
ANR	4059890	Identifier	Rewind		4059825	1					
ANR	4059891	ArgumentList			4059825	1					
ANR	4059892	WhileStatement	while ( ( proc = UProcList . Next ( ) ) )		4059825	4					
ANR	4059893	Condition	proc = UProcList . Next ( )	1069:9:24572:24596	4059825	0	True				
ANR	4059894	AssignmentExpression	proc = UProcList . Next ( )		4059825	0		=			
ANR	4059895	Identifier	proc		4059825	0					
ANR	4059896	CallExpression	UProcList . Next ( )		4059825	1					
ANR	4059897	Callee	UProcList . Next		4059825	0					
ANR	4059898	MemberAccess	UProcList . Next		4059825	0					
ANR	4059899	Identifier	UProcList		4059825	0					
ANR	4059900	Identifier	Next		4059825	1					
ANR	4059901	ArgumentList			4059825	1					
ANR	4059902	CompoundStatement		14:37:340:340	4059825	1					
ANR	4059903	IfStatement	if ( proc -> get_class ( ) == CONDOR_UNIVERSE_PVMD )		4059825	0					
ANR	4059904	Condition	proc -> get_class ( ) == CONDOR_UNIVERSE_PVMD	1070:7:24609:24649	4059825	0	True				
ANR	4059905	EqualityExpression	proc -> get_class ( ) == CONDOR_UNIVERSE_PVMD		4059825	0		==			
ANR	4059906	CallExpression	proc -> get_class ( )		4059825	0					
ANR	4059907	Callee	proc -> get_class		4059825	0					
ANR	4059908	PtrMemberAccess	proc -> get_class		4059825	0					
ANR	4059909	Identifier	proc		4059825	0					
ANR	4059910	Identifier	get_class		4059825	1					
ANR	4059911	ArgumentList			4059825	1					
ANR	4059912	Identifier	CONDOR_UNIVERSE_PVMD		4059825	1					
ANR	4059913	CompoundStatement		15:51:393:393	4059825	1					
ANR	4059914	ExpressionStatement	proc -> kill_forcibly ( )	1071:3:24658:24679	4059825	0	True				
ANR	4059915	CallExpression	proc -> kill_forcibly ( )		4059825	0					
ANR	4059916	Callee	proc -> kill_forcibly		4059825	0					
ANR	4059917	PtrMemberAccess	proc -> kill_forcibly		4059825	0					
ANR	4059918	Identifier	proc		4059825	0					
ANR	4059919	Identifier	kill_forcibly		4059825	1					
ANR	4059920	ArgumentList			4059825	1					
ANR	4059921	ExpressionStatement	proc -> delete_files ( )	1072:3:24684:24704	4059825	1	True				
ANR	4059922	CallExpression	proc -> delete_files ( )		4059825	0					
ANR	4059923	Callee	proc -> delete_files		4059825	0					
ANR	4059924	PtrMemberAccess	proc -> delete_files		4059825	0					
ANR	4059925	Identifier	proc		4059825	0					
ANR	4059926	Identifier	delete_files		4059825	1					
ANR	4059927	ArgumentList			4059825	1					
ANR	4059928	ExpressionStatement	UProcList . DeleteCurrent ( )	1073:3:24709:24734	4059825	2	True				
ANR	4059929	CallExpression	UProcList . DeleteCurrent ( )		4059825	0					
ANR	4059930	Callee	UProcList . DeleteCurrent		4059825	0					
ANR	4059931	MemberAccess	UProcList . DeleteCurrent		4059825	0					
ANR	4059932	Identifier	UProcList		4059825	0					
ANR	4059933	Identifier	DeleteCurrent		4059825	1					
ANR	4059934	ArgumentList			4059825	1					
ANR	4059935	Statement	delete	1074:3:24739:24744	4059825	3	True				
ANR	4059936	ExpressionStatement	proc	1074:10:24746:24750	4059825	4	True				
ANR	4059937	Identifier	proc		4059825	0					
ANR	4059938	ReturnStatement	return ( 0 ) ;	1077:1:24807:24816	4059825	5	True				
ANR	4059939	PrimaryExpression	0		4059825	0					
ANR	4059940	ReturnType	int		4059825	1					
ANR	4059941	Identifier	cleanup		4059825	2					
ANR	4059942	ParameterList			4059825	3					
ANR	4059943	CFGEntryNode	ENTRY		4059825		True				
ANR	4059944	CFGExitNode	EXIT		4059825		True				
ANR	4059945	Symbol	proc		4059825						
ANR	4059946	Symbol	UProcList . Next		4059825						
ANR	4059947	Symbol	proc -> get_class		4059825						
ANR	4059948	Symbol	UProcList		4059825						
ANR	4059949	Symbol	CONDOR_UNIVERSE_PVMD		4059825						
ANR	4059950	Symbol	* proc		4059825						
ANR	4059951	DeclStmt									
ANR	4059952	Decl							sigset_t	sigset_t	mask
ANR	4059953	DeclStmt									
ANR	4059954	Decl							int	int	AvoidNFS
ANR	4059955	DeclStmt									
ANR	4059956	Decl							int	int	SyscallInProgress
ANR	4059957	DeclStmt									
ANR	4059958	Decl							int	int	CkptWanted
ANR	4059959	DeclStmt									
ANR	4059960	Decl							int	int	KillWanted
ANR	4059961	DeclStmt									
ANR	4059962	Decl							void	void ( )	do_kill
ANR	4059963	DeclStmt									
ANR	4059964	Decl							void	void ( )	ckpt
ANR	4059965	Function	do_kill	1133:0:26079:26094							
ANR	4059966	FunctionDef	do_kill ()		4059965	0					
ANR	4059967	CompoundStatement		1133:14:26093:26094	4059965	0					
ANR	4059968	ReturnType	void		4059965	1					
ANR	4059969	Identifier	do_kill		4059965	2					
ANR	4059970	ParameterList			4059965	3					
ANR	4059971	CFGEntryNode	ENTRY		4059965		True				
ANR	4059972	CFGExitNode	EXIT		4059965		True				
ANR	4059973	Function	ckpt	1134:0:26096:26108							
ANR	4059974	FunctionDef	ckpt ()		4059973	0					
ANR	4059975	CompoundStatement		1134:11:26107:26108	4059973	0					
ANR	4059976	ReturnType	void		4059973	1					
ANR	4059977	Identifier	ckpt		4059973	2					
ANR	4059978	ParameterList			4059973	3					
ANR	4059979	CFGEntryNode	ENTRY		4059973		True				
ANR	4059980	CFGExitNode	EXIT		4059973		True				
ANR	4059981	Function	_updateckpt	1135:11:26121:26177							
ANR	4059982	FunctionDef	"_updateckpt (char * foo , char * bar , char * glarch)"		4059981	0					
ANR	4059983	CompoundStatement		1135:66:26176:26177	4059981	0					
ANR	4059984	ReturnType	void		4059981	1					
ANR	4059985	Identifier	_updateckpt		4059981	2					
ANR	4059986	ParameterList	"char * foo , char * bar , char * glarch"		4059981	3					
ANR	4059987	Parameter	char * foo	1135:29:26139:26147	4059981	0	True				
ANR	4059988	ParameterType	char *		4059981	0					
ANR	4059989	Identifier	foo		4059981	1					
ANR	4059990	Parameter	char * bar	1135:40:26150:26158	4059981	1	True				
ANR	4059991	ParameterType	char *		4059981	0					
ANR	4059992	Identifier	bar		4059981	1					
ANR	4059993	Parameter	char * glarch	1135:51:26161:26172	4059981	2	True				
ANR	4059994	ParameterType	char *		4059981	0					
ANR	4059995	Identifier	glarch		4059981	1					
ANR	4059996	CFGEntryNode	ENTRY		4059981		True				
ANR	4059997	CFGExitNode	EXIT		4059981		True				
ANR	4059998	Symbol	bar		4059981						
ANR	4059999	Symbol	foo		4059981						
ANR	4060000	Symbol	glarch		4059981						
ANR	4060001	Function	needed_fd	1144:0:26349:26642							
ANR	4060002	FunctionDef	needed_fd (int fd)		4060001	0					
ANR	4060003	CompoundStatement		1146:0:26373:26642	4060001	0					
ANR	4060004	SwitchStatement	switch ( fd )		4060001	0					
ANR	4060005	Condition	fd	1147:9:26384:26385	4060001	0	True				
ANR	4060006	Identifier	fd		4060001	0					
ANR	4060007	CompoundStatement		2:14:15:15	4060001	1					
ANR	4060008	Label	case 2 :	1149:3:26395:26401	4060001	0	True				
ANR	4060009	Label	case CLIENT_LOG :	1150:3:26406:26421	4060001	1	True				
ANR	4060010	Identifier	CLIENT_LOG		4060001	0					
ANR	4060011	ReturnStatement	return TRUE ;	1151:4:26427:26438	4060001	2	True				
ANR	4060012	Identifier	TRUE		4060001	0					
ANR	4060013	Label	case REQ_SOCK :	1153:3:26444:26457	4060001	3	True				
ANR	4060014	Identifier	REQ_SOCK		4060001	0					
ANR	4060015	ReturnStatement	return FALSE ;	1154:4:26512:26524	4060001	4	True				
ANR	4060016	Identifier	FALSE		4060001	0					
ANR	4060017	Label	case RSC_SOCK :	1156:3:26530:26543	4060001	5	True				
ANR	4060018	Identifier	RSC_SOCK		4060001	0					
ANR	4060019	ReturnStatement	return TRUE ;	1157:4:26595:26606	4060001	6	True				
ANR	4060020	Identifier	TRUE		4060001	0					
ANR	4060021	Label	default :	1159:3:26612:26619	4060001	7	True				
ANR	4060022	Identifier	default		4060001	0					
ANR	4060023	ReturnStatement	return FALSE ;	1160:4:26625:26637	4060001	8	True				
ANR	4060024	Identifier	FALSE		4060001	0					
ANR	4060025	ReturnType	int		4060001	1					
ANR	4060026	Identifier	needed_fd		4060001	2					
ANR	4060027	ParameterList	int fd		4060001	3					
ANR	4060028	Parameter	int fd	1145:11:26364:26369	4060001	0	True				
ANR	4060029	ParameterType	int		4060001	0					
ANR	4060030	Identifier	fd		4060001	1					
ANR	4060031	CFGEntryNode	ENTRY		4060001		True				
ANR	4060032	CFGExitNode	EXIT		4060001		True				
ANR	4060033	Symbol	TRUE		4060001						
ANR	4060034	Symbol	FALSE		4060001						
ANR	4060035	Symbol	fd		4060001						
ANR	4060036	Function	init_environment_info	1168:0:26766:27780							
ANR	4060037	FunctionDef	init_environment_info ()		4060036	0					
ANR	4060038	CompoundStatement		1170:0:26795:27780	4060036	0					
ANR	4060039	IdentifierDeclStatement	char * my_fs_domain ;	1171:1:26798:26818	4060036	0	True				
ANR	4060040	IdentifierDecl	* my_fs_domain		4060036	0					
ANR	4060041	IdentifierDeclType	char *		4060036	0					
ANR	4060042	Identifier	my_fs_domain		4060036	1					
ANR	4060043	IdentifierDeclStatement	char * my_uid_domain ;	1172:1:26821:26841	4060036	1	True				
ANR	4060044	IdentifierDecl	* my_uid_domain		4060036	0					
ANR	4060045	IdentifierDeclType	char *		4060036	0					
ANR	4060046	Identifier	my_uid_domain		4060036	1					
ANR	4060047	IdentifierDeclStatement	char * ckpt_server_host ;	1173:1:26844:26867	4060036	2	True				
ANR	4060048	IdentifierDecl	* ckpt_server_host		4060036	0					
ANR	4060049	IdentifierDeclType	char *		4060036	0					
ANR	4060050	Identifier	ckpt_server_host		4060036	1					
ANR	4060051	IdentifierDeclStatement	"char * arch , * opsys ;"	1174:1:26870:26889	4060036	3	True				
ANR	4060052	IdentifierDecl	* arch		4060036	0					
ANR	4060053	IdentifierDeclType	char *		4060036	0					
ANR	4060054	Identifier	arch		4060036	1					
ANR	4060055	IdentifierDecl	* opsys		4060036	1					
ANR	4060056	IdentifierDeclType	char *		4060036	0					
ANR	4060057	Identifier	opsys		4060036	1					
ANR	4060058	IdentifierDeclStatement	const char * ckptpltfrm ;	1175:1:26892:26915	4060036	4	True				
ANR	4060059	IdentifierDecl	* ckptpltfrm		4060036	0					
ANR	4060060	IdentifierDeclType	const char *		4060036	0					
ANR	4060061	Identifier	ckptpltfrm		4060036	1					
ANR	4060062	ExpressionStatement	"my_fs_domain = param ( ""FILESYSTEM_DOMAIN"" )"	1177:1:26919:26962	4060036	5	True				
ANR	4060063	AssignmentExpression	"my_fs_domain = param ( ""FILESYSTEM_DOMAIN"" )"		4060036	0		=			
ANR	4060064	Identifier	my_fs_domain		4060036	0					
ANR	4060065	CallExpression	"param ( ""FILESYSTEM_DOMAIN"" )"		4060036	1					
ANR	4060066	Callee	param		4060036	0					
ANR	4060067	Identifier	param		4060036	0					
ANR	4060068	ArgumentList	"""FILESYSTEM_DOMAIN"""		4060036	1					
ANR	4060069	Argument	"""FILESYSTEM_DOMAIN"""		4060036	0					
ANR	4060070	PrimaryExpression	"""FILESYSTEM_DOMAIN"""		4060036	0					
ANR	4060071	IfStatement	if ( my_fs_domain )		4060036	6					
ANR	4060072	Condition	my_fs_domain	1178:5:26969:26980	4060036	0	True				
ANR	4060073	Identifier	my_fs_domain		4060036	0					
ANR	4060074	CompoundStatement		9:20:188:188	4060036	1					
ANR	4060075	ExpressionStatement	REMOTE_CONDOR_register_fs_domain ( my_fs_domain )	1179:2:26988:27036	4060036	0	True				
ANR	4060076	CallExpression	REMOTE_CONDOR_register_fs_domain ( my_fs_domain )		4060036	0					
ANR	4060077	Callee	REMOTE_CONDOR_register_fs_domain		4060036	0					
ANR	4060078	Identifier	REMOTE_CONDOR_register_fs_domain		4060036	0					
ANR	4060079	ArgumentList	my_fs_domain		4060036	1					
ANR	4060080	Argument	my_fs_domain		4060036	0					
ANR	4060081	Identifier	my_fs_domain		4060036	0					
ANR	4060082	ExpressionStatement	free ( my_fs_domain )	1180:2:27040:27058	4060036	1	True				
ANR	4060083	CallExpression	free ( my_fs_domain )		4060036	0					
ANR	4060084	Callee	free		4060036	0					
ANR	4060085	Identifier	free		4060036	0					
ANR	4060086	ArgumentList	my_fs_domain		4060036	1					
ANR	4060087	Argument	my_fs_domain		4060036	0					
ANR	4060088	Identifier	my_fs_domain		4060036	0					
ANR	4060089	ExpressionStatement	"my_uid_domain = param ( ""UID_DOMAIN"" )"	1183:1:27065:27102	4060036	7	True				
ANR	4060090	AssignmentExpression	"my_uid_domain = param ( ""UID_DOMAIN"" )"		4060036	0		=			
ANR	4060091	Identifier	my_uid_domain		4060036	0					
ANR	4060092	CallExpression	"param ( ""UID_DOMAIN"" )"		4060036	1					
ANR	4060093	Callee	param		4060036	0					
ANR	4060094	Identifier	param		4060036	0					
ANR	4060095	ArgumentList	"""UID_DOMAIN"""		4060036	1					
ANR	4060096	Argument	"""UID_DOMAIN"""		4060036	0					
ANR	4060097	PrimaryExpression	"""UID_DOMAIN"""		4060036	0					
ANR	4060098	IfStatement	if ( my_uid_domain )		4060036	8					
ANR	4060099	Condition	my_uid_domain	1184:5:27109:27121	4060036	0	True				
ANR	4060100	Identifier	my_uid_domain		4060036	0					
ANR	4060101	CompoundStatement		15:21:329:329	4060036	1					
ANR	4060102	ExpressionStatement	REMOTE_CONDOR_register_uid_domain ( my_uid_domain )	1185:2:27129:27179	4060036	0	True				
ANR	4060103	CallExpression	REMOTE_CONDOR_register_uid_domain ( my_uid_domain )		4060036	0					
ANR	4060104	Callee	REMOTE_CONDOR_register_uid_domain		4060036	0					
ANR	4060105	Identifier	REMOTE_CONDOR_register_uid_domain		4060036	0					
ANR	4060106	ArgumentList	my_uid_domain		4060036	1					
ANR	4060107	Argument	my_uid_domain		4060036	0					
ANR	4060108	Identifier	my_uid_domain		4060036	0					
ANR	4060109	ExpressionStatement	free ( my_uid_domain )	1186:2:27183:27202	4060036	1	True				
ANR	4060110	CallExpression	free ( my_uid_domain )		4060036	0					
ANR	4060111	Callee	free		4060036	0					
ANR	4060112	Identifier	free		4060036	0					
ANR	4060113	ArgumentList	my_uid_domain		4060036	1					
ANR	4060114	Argument	my_uid_domain		4060036	0					
ANR	4060115	Identifier	my_uid_domain		4060036	0					
ANR	4060116	ExpressionStatement	ckptpltfrm = sysapi_ckptpltfrm ( )	1189:1:27209:27241	4060036	9	True				
ANR	4060117	AssignmentExpression	ckptpltfrm = sysapi_ckptpltfrm ( )		4060036	0		=			
ANR	4060118	Identifier	ckptpltfrm		4060036	0					
ANR	4060119	CallExpression	sysapi_ckptpltfrm ( )		4060036	1					
ANR	4060120	Callee	sysapi_ckptpltfrm		4060036	0					
ANR	4060121	Identifier	sysapi_ckptpltfrm		4060036	0					
ANR	4060122	ArgumentList			4060036	1					
ANR	4060123	ExpressionStatement	"REMOTE_CONDOR_register_ckpt_platform ( ckptpltfrm , strlen ( ckptpltfrm ) + 1 )"	1191:1:27317:27390	4060036	10	True				
ANR	4060124	CallExpression	"REMOTE_CONDOR_register_ckpt_platform ( ckptpltfrm , strlen ( ckptpltfrm ) + 1 )"		4060036	0					
ANR	4060125	Callee	REMOTE_CONDOR_register_ckpt_platform		4060036	0					
ANR	4060126	Identifier	REMOTE_CONDOR_register_ckpt_platform		4060036	0					
ANR	4060127	ArgumentList	ckptpltfrm		4060036	1					
ANR	4060128	Argument	ckptpltfrm		4060036	0					
ANR	4060129	Identifier	ckptpltfrm		4060036	0					
ANR	4060130	Argument	strlen ( ckptpltfrm ) + 1		4060036	1					
ANR	4060131	AdditiveExpression	strlen ( ckptpltfrm ) + 1		4060036	0		+			
ANR	4060132	CallExpression	strlen ( ckptpltfrm )		4060036	0					
ANR	4060133	Callee	strlen		4060036	0					
ANR	4060134	Identifier	strlen		4060036	0					
ANR	4060135	ArgumentList	ckptpltfrm		4060036	1					
ANR	4060136	Argument	ckptpltfrm		4060036	0					
ANR	4060137	Identifier	ckptpltfrm		4060036	0					
ANR	4060138	PrimaryExpression	1		4060036	1					
ANR	4060139	ExpressionStatement	"ckpt_server_host = param ( ""CKPT_SERVER_HOST"" )"	1194:1:27416:27462	4060036	11	True				
ANR	4060140	AssignmentExpression	"ckpt_server_host = param ( ""CKPT_SERVER_HOST"" )"		4060036	0		=			
ANR	4060141	Identifier	ckpt_server_host		4060036	0					
ANR	4060142	CallExpression	"param ( ""CKPT_SERVER_HOST"" )"		4060036	1					
ANR	4060143	Callee	param		4060036	0					
ANR	4060144	Identifier	param		4060036	0					
ANR	4060145	ArgumentList	"""CKPT_SERVER_HOST"""		4060036	1					
ANR	4060146	Argument	"""CKPT_SERVER_HOST"""		4060036	0					
ANR	4060147	PrimaryExpression	"""CKPT_SERVER_HOST"""		4060036	0					
ANR	4060148	IfStatement	if ( ckpt_server_host )		4060036	12					
ANR	4060149	Condition	ckpt_server_host	1195:5:27469:27484	4060036	0	True				
ANR	4060150	Identifier	ckpt_server_host		4060036	0					
ANR	4060151	CompoundStatement		26:24:692:692	4060036	1					
ANR	4060152	ExpressionStatement	REMOTE_CONDOR_register_ckpt_server ( ckpt_server_host )	1196:2:27492:27546	4060036	0	True				
ANR	4060153	CallExpression	REMOTE_CONDOR_register_ckpt_server ( ckpt_server_host )		4060036	0					
ANR	4060154	Callee	REMOTE_CONDOR_register_ckpt_server		4060036	0					
ANR	4060155	Identifier	REMOTE_CONDOR_register_ckpt_server		4060036	0					
ANR	4060156	ArgumentList	ckpt_server_host		4060036	1					
ANR	4060157	Argument	ckpt_server_host		4060036	0					
ANR	4060158	Identifier	ckpt_server_host		4060036	0					
ANR	4060159	ExpressionStatement	free ( ckpt_server_host )	1197:2:27550:27572	4060036	1	True				
ANR	4060160	CallExpression	free ( ckpt_server_host )		4060036	0					
ANR	4060161	Callee	free		4060036	0					
ANR	4060162	Identifier	free		4060036	0					
ANR	4060163	ArgumentList	ckpt_server_host		4060036	1					
ANR	4060164	Argument	ckpt_server_host		4060036	0					
ANR	4060165	Identifier	ckpt_server_host		4060036	0					
ANR	4060166	ExpressionStatement	"arch = param ( ""ARCH"" )"	1200:1:27579:27601	4060036	13	True				
ANR	4060167	AssignmentExpression	"arch = param ( ""ARCH"" )"		4060036	0		=			
ANR	4060168	Identifier	arch		4060036	0					
ANR	4060169	CallExpression	"param ( ""ARCH"" )"		4060036	1					
ANR	4060170	Callee	param		4060036	0					
ANR	4060171	Identifier	param		4060036	0					
ANR	4060172	ArgumentList	"""ARCH"""		4060036	1					
ANR	4060173	Argument	"""ARCH"""		4060036	0					
ANR	4060174	PrimaryExpression	"""ARCH"""		4060036	0					
ANR	4060175	IfStatement	if ( arch )		4060036	14					
ANR	4060176	Condition	arch	1201:5:27608:27611	4060036	0	True				
ANR	4060177	Identifier	arch		4060036	0					
ANR	4060178	CompoundStatement		32:11:818:818	4060036	1					
ANR	4060179	ExpressionStatement	REMOTE_CONDOR_register_arch ( arch )	1202:2:27618:27653	4060036	0	True				
ANR	4060180	CallExpression	REMOTE_CONDOR_register_arch ( arch )		4060036	0					
ANR	4060181	Callee	REMOTE_CONDOR_register_arch		4060036	0					
ANR	4060182	Identifier	REMOTE_CONDOR_register_arch		4060036	0					
ANR	4060183	ArgumentList	arch		4060036	1					
ANR	4060184	Argument	arch		4060036	0					
ANR	4060185	Identifier	arch		4060036	0					
ANR	4060186	ExpressionStatement	free ( arch )	1203:2:27657:27667	4060036	1	True				
ANR	4060187	CallExpression	free ( arch )		4060036	0					
ANR	4060188	Callee	free		4060036	0					
ANR	4060189	Identifier	free		4060036	0					
ANR	4060190	ArgumentList	arch		4060036	1					
ANR	4060191	Argument	arch		4060036	0					
ANR	4060192	Identifier	arch		4060036	0					
ANR	4060193	ExpressionStatement	"opsys = param ( ""OPSYS"" )"	1206:1:27674:27698	4060036	15	True				
ANR	4060194	AssignmentExpression	"opsys = param ( ""OPSYS"" )"		4060036	0		=			
ANR	4060195	Identifier	opsys		4060036	0					
ANR	4060196	CallExpression	"param ( ""OPSYS"" )"		4060036	1					
ANR	4060197	Callee	param		4060036	0					
ANR	4060198	Identifier	param		4060036	0					
ANR	4060199	ArgumentList	"""OPSYS"""		4060036	1					
ANR	4060200	Argument	"""OPSYS"""		4060036	0					
ANR	4060201	PrimaryExpression	"""OPSYS"""		4060036	0					
ANR	4060202	IfStatement	if ( opsys )		4060036	16					
ANR	4060203	Condition	opsys	1207:5:27705:27709	4060036	0	True				
ANR	4060204	Identifier	opsys		4060036	0					
ANR	4060205	CompoundStatement		38:12:916:916	4060036	1					
ANR	4060206	ExpressionStatement	REMOTE_CONDOR_register_opsys ( opsys )	1208:2:27716:27753	4060036	0	True				
ANR	4060207	CallExpression	REMOTE_CONDOR_register_opsys ( opsys )		4060036	0					
ANR	4060208	Callee	REMOTE_CONDOR_register_opsys		4060036	0					
ANR	4060209	Identifier	REMOTE_CONDOR_register_opsys		4060036	0					
ANR	4060210	ArgumentList	opsys		4060036	1					
ANR	4060211	Argument	opsys		4060036	0					
ANR	4060212	Identifier	opsys		4060036	0					
ANR	4060213	ExpressionStatement	free ( opsys )	1209:2:27757:27768	4060036	1	True				
ANR	4060214	CallExpression	free ( opsys )		4060036	0					
ANR	4060215	Callee	free		4060036	0					
ANR	4060216	Identifier	free		4060036	0					
ANR	4060217	ArgumentList	opsys		4060036	1					
ANR	4060218	Argument	opsys		4060036	0					
ANR	4060219	Identifier	opsys		4060036	0					
ANR	4060220	ReturnType	void		4060036	1					
ANR	4060221	Identifier	init_environment_info		4060036	2					
ANR	4060222	ParameterList			4060036	3					
ANR	4060223	CFGEntryNode	ENTRY		4060036		True				
ANR	4060224	CFGExitNode	EXIT		4060036		True				
ANR	4060225	Symbol	sysapi_ckptpltfrm		4060036						
ANR	4060226	Symbol	strlen		4060036						
ANR	4060227	Symbol	ckpt_server_host		4060036						
ANR	4060228	Symbol	param		4060036						
ANR	4060229	Symbol	arch		4060036						
ANR	4060230	Symbol	ckptpltfrm		4060036						
ANR	4060231	Symbol	my_uid_domain		4060036						
ANR	4060232	Symbol	opsys		4060036						
ANR	4060233	Symbol	my_fs_domain		4060036						
