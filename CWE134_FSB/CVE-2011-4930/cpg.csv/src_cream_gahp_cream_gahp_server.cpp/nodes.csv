command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5047421	File	data/converged/CVE-2011-4930_htcondor/src_cream_gahp_cream_gahp_server.cpp								
ANR	5047422	DeclStmt									
ANR	5047423	Decl							FILE	FILE *	tmplog
ANR	5047424	Function	quicklog	45:0:1434:1748							
ANR	5047425	FunctionDef	quicklog (const char * p)		5047424	0					
ANR	5047426	CompoundStatement		46:0:1471:1748	5047424	0					
ANR	5047427	IdentifierDeclStatement	struct tm t ;	47:1:1474:1485	5047424	0	True				
ANR	5047428	IdentifierDecl	t		5047424	0					
ANR	5047429	IdentifierDeclType	struct tm		5047424	0					
ANR	5047430	Identifier	t		5047424	1					
ANR	5047431	IdentifierDeclStatement	time_t timet = time ( 0 ) ;	48:1:1488:1510	5047424	1	True				
ANR	5047432	IdentifierDecl	timet = time ( 0 )		5047424	0					
ANR	5047433	IdentifierDeclType	time_t		5047424	0					
ANR	5047434	Identifier	timet		5047424	1					
ANR	5047435	AssignmentExpression	timet = time ( 0 )		5047424	2		=			
ANR	5047436	Identifier	timet		5047424	0					
ANR	5047437	CallExpression	time ( 0 )		5047424	1					
ANR	5047438	Callee	time		5047424	0					
ANR	5047439	Identifier	time		5047424	0					
ANR	5047440	ArgumentList	0		5047424	1					
ANR	5047441	Argument	0		5047424	0					
ANR	5047442	PrimaryExpression	0		5047424	0					
ANR	5047443	ExpressionStatement	"localtime_r ( & timet , & t )"	49:1:1513:1536	5047424	2	True				
ANR	5047444	CallExpression	"localtime_r ( & timet , & t )"		5047424	0					
ANR	5047445	Callee	localtime_r		5047424	0					
ANR	5047446	Identifier	localtime_r		5047424	0					
ANR	5047447	ArgumentList	& timet		5047424	1					
ANR	5047448	Argument	& timet		5047424	0					
ANR	5047449	UnaryOperationExpression	& timet		5047424	0					
ANR	5047450	UnaryOperator	&		5047424	0					
ANR	5047451	Identifier	timet		5047424	1					
ANR	5047452	Argument	& t		5047424	1					
ANR	5047453	UnaryOperationExpression	& t		5047424	0					
ANR	5047454	UnaryOperator	&		5047424	0					
ANR	5047455	Identifier	t		5047424	1					
ANR	5047456	IfStatement	if ( ! p )		5047424	3					
ANR	5047457	Condition	! p	50:5:1543:1545	5047424	0	True				
ANR	5047458	UnaryOperationExpression	! p		5047424	0					
ANR	5047459	UnaryOperator	!		5047424	0					
ANR	5047460	Identifier	p		5047424	1					
ANR	5047461	CompoundStatement		5:11:77:77	5047424	1					
ANR	5047462	ExpressionStatement	"p = ""No message"""	50:13:1551:1567	5047424	0	True				
ANR	5047463	AssignmentExpression	"p = ""No message"""		5047424	0		=			
ANR	5047464	Identifier	p		5047424	0					
ANR	5047465	PrimaryExpression	"""No message"""		5047424	1					
ANR	5047466	ExpressionStatement	"fprintf ( tmplog , ""%04d-%02d-%02d %02d:%02d:%02d (pid: %d) %s\\n"" , t . tm_year + 1900 , t . tm_mon + 1 , t . tm_mday + 1 , t . tm_hour + 1 , t . tm_min + 1 , t . tm_sec + 1 , ( int ) getpid ( ) , p )"	51:1:1572:1746	5047424	4	True				
ANR	5047467	CallExpression	"fprintf ( tmplog , ""%04d-%02d-%02d %02d:%02d:%02d (pid: %d) %s\\n"" , t . tm_year + 1900 , t . tm_mon + 1 , t . tm_mday + 1 , t . tm_hour + 1 , t . tm_min + 1 , t . tm_sec + 1 , ( int ) getpid ( ) , p )"		5047424	0					
ANR	5047468	Callee	fprintf		5047424	0					
ANR	5047469	Identifier	fprintf		5047424	0					
ANR	5047470	ArgumentList	tmplog		5047424	1					
ANR	5047471	Argument	tmplog		5047424	0					
ANR	5047472	Identifier	tmplog		5047424	0					
ANR	5047473	Argument	"""%04d-%02d-%02d %02d:%02d:%02d (pid: %d) %s\\n"""		5047424	1					
ANR	5047474	PrimaryExpression	"""%04d-%02d-%02d %02d:%02d:%02d (pid: %d) %s\\n"""		5047424	0					
ANR	5047475	Argument	t . tm_year + 1900		5047424	2					
ANR	5047476	AdditiveExpression	t . tm_year + 1900		5047424	0		+			
ANR	5047477	MemberAccess	t . tm_year		5047424	0					
ANR	5047478	Identifier	t		5047424	0					
ANR	5047479	Identifier	tm_year		5047424	1					
ANR	5047480	PrimaryExpression	1900		5047424	1					
ANR	5047481	Argument	t . tm_mon + 1		5047424	3					
ANR	5047482	AdditiveExpression	t . tm_mon + 1		5047424	0		+			
ANR	5047483	MemberAccess	t . tm_mon		5047424	0					
ANR	5047484	Identifier	t		5047424	0					
ANR	5047485	Identifier	tm_mon		5047424	1					
ANR	5047486	PrimaryExpression	1		5047424	1					
ANR	5047487	Argument	t . tm_mday + 1		5047424	4					
ANR	5047488	AdditiveExpression	t . tm_mday + 1		5047424	0		+			
ANR	5047489	MemberAccess	t . tm_mday		5047424	0					
ANR	5047490	Identifier	t		5047424	0					
ANR	5047491	Identifier	tm_mday		5047424	1					
ANR	5047492	PrimaryExpression	1		5047424	1					
ANR	5047493	Argument	t . tm_hour + 1		5047424	5					
ANR	5047494	AdditiveExpression	t . tm_hour + 1		5047424	0		+			
ANR	5047495	MemberAccess	t . tm_hour		5047424	0					
ANR	5047496	Identifier	t		5047424	0					
ANR	5047497	Identifier	tm_hour		5047424	1					
ANR	5047498	PrimaryExpression	1		5047424	1					
ANR	5047499	Argument	t . tm_min + 1		5047424	6					
ANR	5047500	AdditiveExpression	t . tm_min + 1		5047424	0		+			
ANR	5047501	MemberAccess	t . tm_min		5047424	0					
ANR	5047502	Identifier	t		5047424	0					
ANR	5047503	Identifier	tm_min		5047424	1					
ANR	5047504	PrimaryExpression	1		5047424	1					
ANR	5047505	Argument	t . tm_sec + 1		5047424	7					
ANR	5047506	AdditiveExpression	t . tm_sec + 1		5047424	0		+			
ANR	5047507	MemberAccess	t . tm_sec		5047424	0					
ANR	5047508	Identifier	t		5047424	0					
ANR	5047509	Identifier	tm_sec		5047424	1					
ANR	5047510	PrimaryExpression	1		5047424	1					
ANR	5047511	Argument	( int ) getpid ( )		5047424	8					
ANR	5047512	CastExpression	( int ) getpid ( )		5047424	0					
ANR	5047513	CastTarget	int		5047424	0					
ANR	5047514	CallExpression	getpid ( )		5047424	1					
ANR	5047515	Callee	getpid		5047424	0					
ANR	5047516	Identifier	getpid		5047424	0					
ANR	5047517	ArgumentList			5047424	1					
ANR	5047518	Argument	p		5047424	9					
ANR	5047519	Identifier	p		5047424	0					
ANR	5047520	ReturnType	static void		5047424	1					
ANR	5047521	Identifier	quicklog		5047424	2					
ANR	5047522	ParameterList	const char * p		5047424	3					
ANR	5047523	Parameter	const char * p	45:21:1455:1468	5047424	0	True				
ANR	5047524	ParameterType	const char *		5047424	0					
ANR	5047525	Identifier	p		5047424	1					
ANR	5047526	CFGEntryNode	ENTRY		5047424		True				
ANR	5047527	CFGExitNode	EXIT		5047424		True				
ANR	5047528	Symbol	t . tm_year		5047424						
ANR	5047529	Symbol	tmplog		5047424						
ANR	5047530	Symbol	p		5047424						
ANR	5047531	Symbol	timet		5047424						
ANR	5047532	Symbol	t . tm_hour		5047424						
ANR	5047533	Symbol	t		5047424						
ANR	5047534	Symbol	t . tm_mon		5047424						
ANR	5047535	Symbol	& timet		5047424						
ANR	5047536	Symbol	t . tm_mday		5047424						
ANR	5047537	Symbol	t . tm_sec		5047424						
ANR	5047538	Symbol	& t		5047424						
ANR	5047539	Symbol	time		5047424						
ANR	5047540	Symbol	t . tm_min		5047424						
ANR	5047541	Symbol	getpid		5047424						
ANR	5047542	Function	HANDLE_SYNTAX_ERROR	74:1:2020:2117							
ANR	5047543	FunctionDef	HANDLE_SYNTAX_ERROR ()		5047542	0					
ANR	5047544	CompoundStatement		75:0:2051:2117	5047542	0					
ANR	5047545	ExpressionStatement	"gahp_printf ( ""E\\n"" )"	76:1:2056:2074	5047542	0	True				
ANR	5047546	CallExpression	"gahp_printf ( ""E\\n"" )"		5047542	0					
ANR	5047547	Callee	gahp_printf		5047542	0					
ANR	5047548	Identifier	gahp_printf		5047542	0					
ANR	5047549	ArgumentList	"""E\\n"""		5047542	1					
ANR	5047550	Argument	"""E\\n"""		5047542	0					
ANR	5047551	PrimaryExpression	"""E\\n"""		5047542	0					
ANR	5047552	ExpressionStatement	free_args ( input_line )	77:1:2079:2100	5047542	1	True				
ANR	5047553	CallExpression	free_args ( input_line )		5047542	0					
ANR	5047554	Callee	free_args		5047542	0					
ANR	5047555	Identifier	free_args		5047542	0					
ANR	5047556	ArgumentList	input_line		5047542	1					
ANR	5047557	Argument	input_line		5047542	0					
ANR	5047558	Identifier	input_line		5047542	0					
ANR	5047559	ReturnStatement	return 0 ;	78:1:2105:2113	5047542	2	True				
ANR	5047560	PrimaryExpression	0		5047542	0					
ANR	5047561	ReturnType	define		5047542	1					
ANR	5047562	Identifier	HANDLE_SYNTAX_ERROR		5047542	2					
ANR	5047563	ParameterList			5047542	3					
ANR	5047564	CFGEntryNode	ENTRY		5047542		True				
ANR	5047565	CFGExitNode	EXIT		5047542		True				
ANR	5047566	Symbol	input_line		5047542						
ANR	5047567	Function	HANDLE_INVALID_REQ	81:1:2122:2205							
ANR	5047568	FunctionDef	HANDLE_INVALID_REQ ()		5047567	0					
ANR	5047569	CompoundStatement		82:0:2152:2205	5047567	0					
ANR	5047570	ExpressionStatement	"gahp_printf ( ""E\\n"" )"	83:1:2157:2175	5047567	0	True				
ANR	5047571	CallExpression	"gahp_printf ( ""E\\n"" )"		5047567	0					
ANR	5047572	Callee	gahp_printf		5047567	0					
ANR	5047573	Identifier	gahp_printf		5047567	0					
ANR	5047574	ArgumentList	"""E\\n"""		5047567	1					
ANR	5047575	Argument	"""E\\n"""		5047567	0					
ANR	5047576	PrimaryExpression	"""E\\n"""		5047567	0					
ANR	5047577	ExpressionStatement	free_args ( input_line )	84:1:2180:2201	5047567	1	True				
ANR	5047578	CallExpression	free_args ( input_line )		5047567	0					
ANR	5047579	Callee	free_args		5047567	0					
ANR	5047580	Identifier	free_args		5047567	0					
ANR	5047581	ArgumentList	input_line		5047567	1					
ANR	5047582	Argument	input_line		5047567	0					
ANR	5047583	Identifier	input_line		5047567	0					
ANR	5047584	ReturnType	define		5047567	1					
ANR	5047585	Identifier	HANDLE_INVALID_REQ		5047567	2					
ANR	5047586	ParameterList			5047567	3					
ANR	5047587	CFGEntryNode	ENTRY		5047567		True				
ANR	5047588	CFGExitNode	EXIT		5047567		True				
ANR	5047589	Symbol	input_line		5047567						
ANR	5047590	DeclStmt									
ANR	5047591	Decl							int ( * ) ( Request * )	int ( * ) ( Request * )	SingleHandler
ANR	5047592	DeclStmt									
ANR	5047593	Decl							int ( * ) ( Request * * )	int ( * ) ( Request * * )	BatchHandler
ANR	5047594	DeclStmt									
ANR	5047595	Decl							"bool ( * ) ( const vector < Request * > & , const Request * )"	"bool ( * ) ( const vector < Request * > & , const Request * )"	RequestCmp
ANR	5047596	Function	internal_error	95:0:2537:2643							
ANR	5047597	FunctionDef	internal_error (const char * p)		5047596	0					
ANR	5047598	CompoundStatement		96:0:2580:2643	5047596	0					
ANR	5047599	ExpressionStatement	"fprintf ( stderr , ""FATAL INTERNAL ERROR: %s\\n"" , p )"	97:1:2583:2631	5047596	0	True				
ANR	5047600	CallExpression	"fprintf ( stderr , ""FATAL INTERNAL ERROR: %s\\n"" , p )"		5047596	0					
ANR	5047601	Callee	fprintf		5047596	0					
ANR	5047602	Identifier	fprintf		5047596	0					
ANR	5047603	ArgumentList	stderr		5047596	1					
ANR	5047604	Argument	stderr		5047596	0					
ANR	5047605	Identifier	stderr		5047596	0					
ANR	5047606	Argument	"""FATAL INTERNAL ERROR: %s\\n"""		5047596	1					
ANR	5047607	PrimaryExpression	"""FATAL INTERNAL ERROR: %s\\n"""		5047596	0					
ANR	5047608	Argument	p		5047596	2					
ANR	5047609	Identifier	p		5047596	0					
ANR	5047610	ExpressionStatement	exit ( 4 )	98:1:2634:2641	5047596	1	True				
ANR	5047611	CallExpression	exit ( 4 )		5047596	0					
ANR	5047612	Callee	exit		5047596	0					
ANR	5047613	Identifier	exit		5047596	0					
ANR	5047614	ArgumentList	4		5047596	1					
ANR	5047615	Argument	4		5047596	0					
ANR	5047616	PrimaryExpression	4		5047596	0					
ANR	5047617	ReturnType	static void		5047596	1					
ANR	5047618	Identifier	internal_error		5047596	2					
ANR	5047619	ParameterList	const char * p		5047596	3					
ANR	5047620	Parameter	const char * p	95:27:2564:2577	5047596	0	True				
ANR	5047621	ParameterType	const char *		5047596	0					
ANR	5047622	Identifier	p		5047596	1					
ANR	5047623	CFGEntryNode	ENTRY		5047596		True				
ANR	5047624	CFGExitNode	EXIT		5047596		True				
ANR	5047625	Symbol	p		5047596						
ANR	5047626	Symbol	stderr		5047596						
ANR	5047627	Function	check_for_factory_error	101:0:2646:2798							
ANR	5047628	FunctionDef	check_for_factory_error (AbsCreamProxy * cp)		5047627	0					
ANR	5047629	CompoundStatement		103:0:2701:2798	5047627	0					
ANR	5047630	IfStatement	if ( cp == NULL )		5047627	0					
ANR	5047631	Condition	cp == NULL	104:5:2708:2717	5047627	0	True				
ANR	5047632	EqualityExpression	cp == NULL		5047627	0		==			
ANR	5047633	Identifier	cp		5047627	0					
ANR	5047634	Identifier	NULL		5047627	1					
ANR	5047635	CompoundStatement		2:17:18:18	5047627	1					
ANR	5047636	ThrowStatement	"throw runtime_error ( ""CreamProxyFactory failed to make a cream proxy"" ) ;"	105:2:2724:2793	5047627	0	True				
ANR	5047637	CallExpression	"runtime_error ( ""CreamProxyFactory failed to make a cream proxy"" )"		5047627	0					
ANR	5047638	Callee	runtime_error		5047627	0					
ANR	5047639	Identifier	runtime_error		5047627	0					
ANR	5047640	ArgumentList	"""CreamProxyFactory failed to make a cream proxy"""		5047627	1					
ANR	5047641	Argument	"""CreamProxyFactory failed to make a cream proxy"""		5047627	0					
ANR	5047642	PrimaryExpression	"""CreamProxyFactory failed to make a cream proxy"""		5047627	0					
ANR	5047643	ReturnType	static void		5047627	1					
ANR	5047644	Identifier	check_for_factory_error		5047627	2					
ANR	5047645	ParameterList	AbsCreamProxy * cp		5047627	3					
ANR	5047646	Parameter	AbsCreamProxy * cp	102:24:2682:2698	5047627	0	True				
ANR	5047647	ParameterType	AbsCreamProxy *		5047627	0					
ANR	5047648	Identifier	cp		5047627	1					
ANR	5047649	CFGEntryNode	ENTRY		5047627		True				
ANR	5047650	CFGExitNode	EXIT		5047627		True				
ANR	5047651	CFGExceptionNode	EXCEPTION		5047627		True				
ANR	5047652	Symbol	NULL		5047627						
ANR	5047653	Symbol	cp		5047627						
ANR	5047654	Function	check_result_wrapper	109:0:2801:3515							
ANR	5047655	FunctionDef	check_result_wrapper (ResultWrapper & rw)		5047654	0					
ANR	5047656	CompoundStatement		111:0:2853:3515	5047654	0					
ANR	5047657	IdentifierDeclStatement	"list < pair < JobIdWrapper , string > > job_list ;"	112:1:2856:2898	5047654	0	True				
ANR	5047658	IdentifierDecl	job_list		5047654	0					
ANR	5047659	IdentifierDeclType	"list < pair < JobIdWrapper , string > >"		5047654	0					
ANR	5047660	Identifier	job_list		5047654	1					
ANR	5047661	ExpressionStatement	rw . getNotExistingJobs ( job_list )	113:1:2901:2932	5047654	1	True				
ANR	5047662	CallExpression	rw . getNotExistingJobs ( job_list )		5047654	0					
ANR	5047663	Callee	rw . getNotExistingJobs		5047654	0					
ANR	5047664	MemberAccess	rw . getNotExistingJobs		5047654	0					
ANR	5047665	Identifier	rw		5047654	0					
ANR	5047666	Identifier	getNotExistingJobs		5047654	1					
ANR	5047667	ArgumentList	job_list		5047654	1					
ANR	5047668	Argument	job_list		5047654	0					
ANR	5047669	Identifier	job_list		5047654	0					
ANR	5047670	IfStatement	if ( ! job_list . empty ( ) )		5047654	2					
ANR	5047671	Condition	! job_list . empty ( )	114:5:2939:2955	5047654	0	True				
ANR	5047672	UnaryOperationExpression	! job_list . empty ( )		5047654	0					
ANR	5047673	UnaryOperator	!		5047654	0					
ANR	5047674	CallExpression	job_list . empty ( )		5047654	1					
ANR	5047675	Callee	job_list . empty		5047654	0					
ANR	5047676	MemberAccess	job_list . empty		5047654	0					
ANR	5047677	Identifier	job_list		5047654	0					
ANR	5047678	Identifier	empty		5047654	1					
ANR	5047679	ArgumentList			5047654	1					
ANR	5047680	CompoundStatement		4:24:104:104	5047654	1					
ANR	5047681	ThrowStatement	"throw runtime_error ( ""job does not exist"" ) ;"	115:2:2962:3003	5047654	0	True				
ANR	5047682	CallExpression	"runtime_error ( ""job does not exist"" )"		5047654	0					
ANR	5047683	Callee	runtime_error		5047654	0					
ANR	5047684	Identifier	runtime_error		5047654	0					
ANR	5047685	ArgumentList	"""job does not exist"""		5047654	1					
ANR	5047686	Argument	"""job does not exist"""		5047654	0					
ANR	5047687	PrimaryExpression	"""job does not exist"""		5047654	0					
ANR	5047688	ExpressionStatement	rw . getNotMatchingStatusJobs ( job_list )	117:1:3009:3046	5047654	3	True				
ANR	5047689	CallExpression	rw . getNotMatchingStatusJobs ( job_list )		5047654	0					
ANR	5047690	Callee	rw . getNotMatchingStatusJobs		5047654	0					
ANR	5047691	MemberAccess	rw . getNotMatchingStatusJobs		5047654	0					
ANR	5047692	Identifier	rw		5047654	0					
ANR	5047693	Identifier	getNotMatchingStatusJobs		5047654	1					
ANR	5047694	ArgumentList	job_list		5047654	1					
ANR	5047695	Argument	job_list		5047654	0					
ANR	5047696	Identifier	job_list		5047654	0					
ANR	5047697	IfStatement	if ( ! job_list . empty ( ) )		5047654	4					
ANR	5047698	Condition	! job_list . empty ( )	118:5:3053:3069	5047654	0	True				
ANR	5047699	UnaryOperationExpression	! job_list . empty ( )		5047654	0					
ANR	5047700	UnaryOperator	!		5047654	0					
ANR	5047701	CallExpression	job_list . empty ( )		5047654	1					
ANR	5047702	Callee	job_list . empty		5047654	0					
ANR	5047703	MemberAccess	job_list . empty		5047654	0					
ANR	5047704	Identifier	job_list		5047654	0					
ANR	5047705	Identifier	empty		5047654	1					
ANR	5047706	ArgumentList			5047654	1					
ANR	5047707	CompoundStatement		8:24:218:218	5047654	1					
ANR	5047708	ThrowStatement	"throw runtime_error ( ""job status does not match"" ) ;"	119:2:3076:3124	5047654	0	True				
ANR	5047709	CallExpression	"runtime_error ( ""job status does not match"" )"		5047654	0					
ANR	5047710	Callee	runtime_error		5047654	0					
ANR	5047711	Identifier	runtime_error		5047654	0					
ANR	5047712	ArgumentList	"""job status does not match"""		5047654	1					
ANR	5047713	Argument	"""job status does not match"""		5047654	0					
ANR	5047714	PrimaryExpression	"""job status does not match"""		5047654	0					
ANR	5047715	ExpressionStatement	rw . getNotMatchingDateJobs ( job_list )	121:1:3130:3165	5047654	5	True				
ANR	5047716	CallExpression	rw . getNotMatchingDateJobs ( job_list )		5047654	0					
ANR	5047717	Callee	rw . getNotMatchingDateJobs		5047654	0					
ANR	5047718	MemberAccess	rw . getNotMatchingDateJobs		5047654	0					
ANR	5047719	Identifier	rw		5047654	0					
ANR	5047720	Identifier	getNotMatchingDateJobs		5047654	1					
ANR	5047721	ArgumentList	job_list		5047654	1					
ANR	5047722	Argument	job_list		5047654	0					
ANR	5047723	Identifier	job_list		5047654	0					
ANR	5047724	IfStatement	if ( ! job_list . empty ( ) )		5047654	6					
ANR	5047725	Condition	! job_list . empty ( )	122:5:3172:3188	5047654	0	True				
ANR	5047726	UnaryOperationExpression	! job_list . empty ( )		5047654	0					
ANR	5047727	UnaryOperator	!		5047654	0					
ANR	5047728	CallExpression	job_list . empty ( )		5047654	1					
ANR	5047729	Callee	job_list . empty		5047654	0					
ANR	5047730	MemberAccess	job_list . empty		5047654	0					
ANR	5047731	Identifier	job_list		5047654	0					
ANR	5047732	Identifier	empty		5047654	1					
ANR	5047733	ArgumentList			5047654	1					
ANR	5047734	CompoundStatement		12:24:337:337	5047654	1					
ANR	5047735	ThrowStatement	"throw runtime_error ( ""job date does not match"" ) ;"	123:2:3195:3241	5047654	0	True				
ANR	5047736	CallExpression	"runtime_error ( ""job date does not match"" )"		5047654	0					
ANR	5047737	Callee	runtime_error		5047654	0					
ANR	5047738	Identifier	runtime_error		5047654	0					
ANR	5047739	ArgumentList	"""job date does not match"""		5047654	1					
ANR	5047740	Argument	"""job date does not match"""		5047654	0					
ANR	5047741	PrimaryExpression	"""job date does not match"""		5047654	0					
ANR	5047742	ExpressionStatement	rw . getNotMatchingProxyDelegationIdJobs ( job_list )	125:1:3247:3295	5047654	7	True				
ANR	5047743	CallExpression	rw . getNotMatchingProxyDelegationIdJobs ( job_list )		5047654	0					
ANR	5047744	Callee	rw . getNotMatchingProxyDelegationIdJobs		5047654	0					
ANR	5047745	MemberAccess	rw . getNotMatchingProxyDelegationIdJobs		5047654	0					
ANR	5047746	Identifier	rw		5047654	0					
ANR	5047747	Identifier	getNotMatchingProxyDelegationIdJobs		5047654	1					
ANR	5047748	ArgumentList	job_list		5047654	1					
ANR	5047749	Argument	job_list		5047654	0					
ANR	5047750	Identifier	job_list		5047654	0					
ANR	5047751	IfStatement	if ( ! job_list . empty ( ) )		5047654	8					
ANR	5047752	Condition	! job_list . empty ( )	126:5:3302:3318	5047654	0	True				
ANR	5047753	UnaryOperationExpression	! job_list . empty ( )		5047654	0					
ANR	5047754	UnaryOperator	!		5047654	0					
ANR	5047755	CallExpression	job_list . empty ( )		5047654	1					
ANR	5047756	Callee	job_list . empty		5047654	0					
ANR	5047757	MemberAccess	job_list . empty		5047654	0					
ANR	5047758	Identifier	job_list		5047654	0					
ANR	5047759	Identifier	empty		5047654	1					
ANR	5047760	ArgumentList			5047654	1					
ANR	5047761	CompoundStatement		16:24:467:467	5047654	1					
ANR	5047762	ThrowStatement	"throw runtime_error ( ""job proxy delegation ID does not match"" ) ;"	127:2:3325:3386	5047654	0	True				
ANR	5047763	CallExpression	"runtime_error ( ""job proxy delegation ID does not match"" )"		5047654	0					
ANR	5047764	Callee	runtime_error		5047654	0					
ANR	5047765	Identifier	runtime_error		5047654	0					
ANR	5047766	ArgumentList	"""job proxy delegation ID does not match"""		5047654	1					
ANR	5047767	Argument	"""job proxy delegation ID does not match"""		5047654	0					
ANR	5047768	PrimaryExpression	"""job proxy delegation ID does not match"""		5047654	0					
ANR	5047769	ExpressionStatement	rw . getNotMatchingLeaseIdJobs ( job_list )	129:1:3392:3430	5047654	9	True				
ANR	5047770	CallExpression	rw . getNotMatchingLeaseIdJobs ( job_list )		5047654	0					
ANR	5047771	Callee	rw . getNotMatchingLeaseIdJobs		5047654	0					
ANR	5047772	MemberAccess	rw . getNotMatchingLeaseIdJobs		5047654	0					
ANR	5047773	Identifier	rw		5047654	0					
ANR	5047774	Identifier	getNotMatchingLeaseIdJobs		5047654	1					
ANR	5047775	ArgumentList	job_list		5047654	1					
ANR	5047776	Argument	job_list		5047654	0					
ANR	5047777	Identifier	job_list		5047654	0					
ANR	5047778	IfStatement	if ( ! job_list . empty ( ) )		5047654	10					
ANR	5047779	Condition	! job_list . empty ( )	130:5:3437:3453	5047654	0	True				
ANR	5047780	UnaryOperationExpression	! job_list . empty ( )		5047654	0					
ANR	5047781	UnaryOperator	!		5047654	0					
ANR	5047782	CallExpression	job_list . empty ( )		5047654	1					
ANR	5047783	Callee	job_list . empty		5047654	0					
ANR	5047784	MemberAccess	job_list . empty		5047654	0					
ANR	5047785	Identifier	job_list		5047654	0					
ANR	5047786	Identifier	empty		5047654	1					
ANR	5047787	ArgumentList			5047654	1					
ANR	5047788	CompoundStatement		20:24:602:602	5047654	1					
ANR	5047789	ThrowStatement	"throw runtime_error ( ""job lease ID does not match"" ) ;"	131:2:3460:3510	5047654	0	True				
ANR	5047790	CallExpression	"runtime_error ( ""job lease ID does not match"" )"		5047654	0					
ANR	5047791	Callee	runtime_error		5047654	0					
ANR	5047792	Identifier	runtime_error		5047654	0					
ANR	5047793	ArgumentList	"""job lease ID does not match"""		5047654	1					
ANR	5047794	Argument	"""job lease ID does not match"""		5047654	0					
ANR	5047795	PrimaryExpression	"""job lease ID does not match"""		5047654	0					
ANR	5047796	ReturnType	static void		5047654	1					
ANR	5047797	Identifier	check_result_wrapper		5047654	2					
ANR	5047798	ParameterList	ResultWrapper & rw		5047654	3					
ANR	5047799	Parameter	ResultWrapper & rw	110:21:2834:2850	5047654	0	True				
ANR	5047800	ParameterType	ResultWrapper &		5047654	0					
ANR	5047801	Identifier	rw		5047654	1					
ANR	5047802	CFGEntryNode	ENTRY		5047654		True				
ANR	5047803	CFGExitNode	EXIT		5047654		True				
ANR	5047804	CFGExceptionNode	EXCEPTION		5047654		True				
ANR	5047805	CFGExceptionNode	EXCEPTION		5047654		True				
ANR	5047806	CFGExceptionNode	EXCEPTION		5047654		True				
ANR	5047807	CFGExceptionNode	EXCEPTION		5047654		True				
ANR	5047808	CFGExceptionNode	EXCEPTION		5047654		True				
ANR	5047809	CFGExceptionNode	EXCEPTION		5047654		True				
ANR	5047810	CFGExceptionNode	EXCEPTION		5047654		True				
ANR	5047811	CFGExceptionNode	EXCEPTION		5047654		True				
ANR	5047812	CFGExceptionNode	EXCEPTION		5047654		True				
ANR	5047813	Symbol	rw		5047654						
ANR	5047814	Symbol	job_list		5047654						
ANR	5047815	Symbol	job_list . empty		5047654						
ANR	5047816	Function	check_result_wrapper2	135:0:3518:4680							
ANR	5047817	FunctionDef	"check_result_wrapper2 (ResultWrapper & rw , map < string , string > & out)"		5047816	0					
ANR	5047818	CompoundStatement		137:0:3597:4680	5047816	0					
ANR	5047819	IdentifierDeclStatement	"list < pair < JobIdWrapper , string > > job_list ;"	138:1:3600:3642	5047816	0	True				
ANR	5047820	IdentifierDecl	job_list		5047816	0					
ANR	5047821	IdentifierDeclType	"list < pair < JobIdWrapper , string > >"		5047816	0					
ANR	5047822	Identifier	job_list		5047816	1					
ANR	5047823	IdentifierDeclStatement	"list < pair < JobIdWrapper , string > > :: iterator itr ;"	139:1:3645:3692	5047816	1	True				
ANR	5047824	IdentifierDecl	itr		5047816	0					
ANR	5047825	IdentifierDeclType	"list < pair < JobIdWrapper , string > > :: iterator"		5047816	0					
ANR	5047826	Identifier	itr		5047816	1					
ANR	5047827	ExpressionStatement	rw . getNotExistingJobs ( job_list )	140:1:3695:3726	5047816	2	True				
ANR	5047828	CallExpression	rw . getNotExistingJobs ( job_list )		5047816	0					
ANR	5047829	Callee	rw . getNotExistingJobs		5047816	0					
ANR	5047830	MemberAccess	rw . getNotExistingJobs		5047816	0					
ANR	5047831	Identifier	rw		5047816	0					
ANR	5047832	Identifier	getNotExistingJobs		5047816	1					
ANR	5047833	ArgumentList	job_list		5047816	1					
ANR	5047834	Argument	job_list		5047816	0					
ANR	5047835	Identifier	job_list		5047816	0					
ANR	5047836	ForStatement	for ( itr = job_list . begin ( ) ; itr != job_list . end ( ) ; itr ++ )		5047816	3					
ANR	5047837	ForInit	itr = job_list . begin ( ) ;	141:7:3735:3757	5047816	0	True				
ANR	5047838	AssignmentExpression	itr = job_list . begin ( )		5047816	0		=			
ANR	5047839	Identifier	itr		5047816	0					
ANR	5047840	CallExpression	job_list . begin ( )		5047816	1					
ANR	5047841	Callee	job_list . begin		5047816	0					
ANR	5047842	MemberAccess	job_list . begin		5047816	0					
ANR	5047843	Identifier	job_list		5047816	0					
ANR	5047844	Identifier	begin		5047816	1					
ANR	5047845	ArgumentList			5047816	1					
ANR	5047846	Condition	itr != job_list . end ( )	141:31:3759:3779	5047816	1	True				
ANR	5047847	EqualityExpression	itr != job_list . end ( )		5047816	0		!=			
ANR	5047848	Identifier	itr		5047816	0					
ANR	5047849	CallExpression	job_list . end ( )		5047816	1					
ANR	5047850	Callee	job_list . end		5047816	0					
ANR	5047851	MemberAccess	job_list . end		5047816	0					
ANR	5047852	Identifier	job_list		5047816	0					
ANR	5047853	Identifier	end		5047816	1					
ANR	5047854	ArgumentList			5047816	1					
ANR	5047855	PostIncDecOperationExpression	itr ++	141:54:3782:3786	5047816	2	True				
ANR	5047856	Identifier	itr		5047816	0					
ANR	5047857	IncDec	++		5047816	1					
ANR	5047858	CompoundStatement		5:62:192:192	5047816	3					
ANR	5047859	ExpressionStatement	"out [ itr -> first . getCreamJobID ( ) ] = string ( ""job does not exist"" )"	142:2:3794:3856	5047816	0	True				
ANR	5047860	AssignmentExpression	"out [ itr -> first . getCreamJobID ( ) ] = string ( ""job does not exist"" )"		5047816	0		=			
ANR	5047861	ArrayIndexing	out [ itr -> first . getCreamJobID ( ) ]		5047816	0					
ANR	5047862	Identifier	out		5047816	0					
ANR	5047863	CallExpression	itr -> first . getCreamJobID ( )		5047816	1					
ANR	5047864	Callee	itr -> first . getCreamJobID		5047816	0					
ANR	5047865	MemberAccess	itr -> first . getCreamJobID		5047816	0					
ANR	5047866	PtrMemberAccess	itr -> first		5047816	0					
ANR	5047867	Identifier	itr		5047816	0					
ANR	5047868	Identifier	first		5047816	1					
ANR	5047869	Identifier	getCreamJobID		5047816	1					
ANR	5047870	ArgumentList			5047816	1					
ANR	5047871	CallExpression	"string ( ""job does not exist"" )"		5047816	1					
ANR	5047872	Callee	string		5047816	0					
ANR	5047873	Identifier	string		5047816	0					
ANR	5047874	ArgumentList	"""job does not exist"""		5047816	1					
ANR	5047875	Argument	"""job does not exist"""		5047816	0					
ANR	5047876	PrimaryExpression	"""job does not exist"""		5047816	0					
ANR	5047877	ExpressionStatement	job_list . clear ( )	144:1:3862:3878	5047816	4	True				
ANR	5047878	CallExpression	job_list . clear ( )		5047816	0					
ANR	5047879	Callee	job_list . clear		5047816	0					
ANR	5047880	MemberAccess	job_list . clear		5047816	0					
ANR	5047881	Identifier	job_list		5047816	0					
ANR	5047882	Identifier	clear		5047816	1					
ANR	5047883	ArgumentList			5047816	1					
ANR	5047884	ExpressionStatement	rw . getNotMatchingStatusJobs ( job_list )	145:1:3881:3918	5047816	5	True				
ANR	5047885	CallExpression	rw . getNotMatchingStatusJobs ( job_list )		5047816	0					
ANR	5047886	Callee	rw . getNotMatchingStatusJobs		5047816	0					
ANR	5047887	MemberAccess	rw . getNotMatchingStatusJobs		5047816	0					
ANR	5047888	Identifier	rw		5047816	0					
ANR	5047889	Identifier	getNotMatchingStatusJobs		5047816	1					
ANR	5047890	ArgumentList	job_list		5047816	1					
ANR	5047891	Argument	job_list		5047816	0					
ANR	5047892	Identifier	job_list		5047816	0					
ANR	5047893	ForStatement	for ( itr = job_list . begin ( ) ; itr != job_list . end ( ) ; itr ++ )		5047816	6					
ANR	5047894	ForInit	itr = job_list . begin ( ) ;	146:7:3927:3949	5047816	0	True				
ANR	5047895	AssignmentExpression	itr = job_list . begin ( )		5047816	0		=			
ANR	5047896	Identifier	itr		5047816	0					
ANR	5047897	CallExpression	job_list . begin ( )		5047816	1					
ANR	5047898	Callee	job_list . begin		5047816	0					
ANR	5047899	MemberAccess	job_list . begin		5047816	0					
ANR	5047900	Identifier	job_list		5047816	0					
ANR	5047901	Identifier	begin		5047816	1					
ANR	5047902	ArgumentList			5047816	1					
ANR	5047903	Condition	itr != job_list . end ( )	146:31:3951:3971	5047816	1	True				
ANR	5047904	EqualityExpression	itr != job_list . end ( )		5047816	0		!=			
ANR	5047905	Identifier	itr		5047816	0					
ANR	5047906	CallExpression	job_list . end ( )		5047816	1					
ANR	5047907	Callee	job_list . end		5047816	0					
ANR	5047908	MemberAccess	job_list . end		5047816	0					
ANR	5047909	Identifier	job_list		5047816	0					
ANR	5047910	Identifier	end		5047816	1					
ANR	5047911	ArgumentList			5047816	1					
ANR	5047912	PostIncDecOperationExpression	itr ++	146:54:3974:3978	5047816	2	True				
ANR	5047913	Identifier	itr		5047816	0					
ANR	5047914	IncDec	++		5047816	1					
ANR	5047915	CompoundStatement		10:62:384:384	5047816	3					
ANR	5047916	ExpressionStatement	"out [ itr -> first . getCreamJobID ( ) ] = string ( ""job status does not match"" )"	147:2:3986:4055	5047816	0	True				
ANR	5047917	AssignmentExpression	"out [ itr -> first . getCreamJobID ( ) ] = string ( ""job status does not match"" )"		5047816	0		=			
ANR	5047918	ArrayIndexing	out [ itr -> first . getCreamJobID ( ) ]		5047816	0					
ANR	5047919	Identifier	out		5047816	0					
ANR	5047920	CallExpression	itr -> first . getCreamJobID ( )		5047816	1					
ANR	5047921	Callee	itr -> first . getCreamJobID		5047816	0					
ANR	5047922	MemberAccess	itr -> first . getCreamJobID		5047816	0					
ANR	5047923	PtrMemberAccess	itr -> first		5047816	0					
ANR	5047924	Identifier	itr		5047816	0					
ANR	5047925	Identifier	first		5047816	1					
ANR	5047926	Identifier	getCreamJobID		5047816	1					
ANR	5047927	ArgumentList			5047816	1					
ANR	5047928	CallExpression	"string ( ""job status does not match"" )"		5047816	1					
ANR	5047929	Callee	string		5047816	0					
ANR	5047930	Identifier	string		5047816	0					
ANR	5047931	ArgumentList	"""job status does not match"""		5047816	1					
ANR	5047932	Argument	"""job status does not match"""		5047816	0					
ANR	5047933	PrimaryExpression	"""job status does not match"""		5047816	0					
ANR	5047934	ExpressionStatement	job_list . clear ( )	149:1:4061:4077	5047816	7	True				
ANR	5047935	CallExpression	job_list . clear ( )		5047816	0					
ANR	5047936	Callee	job_list . clear		5047816	0					
ANR	5047937	MemberAccess	job_list . clear		5047816	0					
ANR	5047938	Identifier	job_list		5047816	0					
ANR	5047939	Identifier	clear		5047816	1					
ANR	5047940	ArgumentList			5047816	1					
ANR	5047941	ExpressionStatement	rw . getNotMatchingDateJobs ( job_list )	150:1:4080:4115	5047816	8	True				
ANR	5047942	CallExpression	rw . getNotMatchingDateJobs ( job_list )		5047816	0					
ANR	5047943	Callee	rw . getNotMatchingDateJobs		5047816	0					
ANR	5047944	MemberAccess	rw . getNotMatchingDateJobs		5047816	0					
ANR	5047945	Identifier	rw		5047816	0					
ANR	5047946	Identifier	getNotMatchingDateJobs		5047816	1					
ANR	5047947	ArgumentList	job_list		5047816	1					
ANR	5047948	Argument	job_list		5047816	0					
ANR	5047949	Identifier	job_list		5047816	0					
ANR	5047950	ForStatement	for ( itr = job_list . begin ( ) ; itr != job_list . end ( ) ; itr ++ )		5047816	9					
ANR	5047951	ForInit	itr = job_list . begin ( ) ;	151:7:4124:4146	5047816	0	True				
ANR	5047952	AssignmentExpression	itr = job_list . begin ( )		5047816	0		=			
ANR	5047953	Identifier	itr		5047816	0					
ANR	5047954	CallExpression	job_list . begin ( )		5047816	1					
ANR	5047955	Callee	job_list . begin		5047816	0					
ANR	5047956	MemberAccess	job_list . begin		5047816	0					
ANR	5047957	Identifier	job_list		5047816	0					
ANR	5047958	Identifier	begin		5047816	1					
ANR	5047959	ArgumentList			5047816	1					
ANR	5047960	Condition	itr != job_list . end ( )	151:31:4148:4168	5047816	1	True				
ANR	5047961	EqualityExpression	itr != job_list . end ( )		5047816	0		!=			
ANR	5047962	Identifier	itr		5047816	0					
ANR	5047963	CallExpression	job_list . end ( )		5047816	1					
ANR	5047964	Callee	job_list . end		5047816	0					
ANR	5047965	MemberAccess	job_list . end		5047816	0					
ANR	5047966	Identifier	job_list		5047816	0					
ANR	5047967	Identifier	end		5047816	1					
ANR	5047968	ArgumentList			5047816	1					
ANR	5047969	PostIncDecOperationExpression	itr ++	151:54:4171:4175	5047816	2	True				
ANR	5047970	Identifier	itr		5047816	0					
ANR	5047971	IncDec	++		5047816	1					
ANR	5047972	CompoundStatement		15:62:581:581	5047816	3					
ANR	5047973	ExpressionStatement	"out [ itr -> first . getCreamJobID ( ) ] = string ( ""job date does not match"" )"	152:2:4183:4250	5047816	0	True				
ANR	5047974	AssignmentExpression	"out [ itr -> first . getCreamJobID ( ) ] = string ( ""job date does not match"" )"		5047816	0		=			
ANR	5047975	ArrayIndexing	out [ itr -> first . getCreamJobID ( ) ]		5047816	0					
ANR	5047976	Identifier	out		5047816	0					
ANR	5047977	CallExpression	itr -> first . getCreamJobID ( )		5047816	1					
ANR	5047978	Callee	itr -> first . getCreamJobID		5047816	0					
ANR	5047979	MemberAccess	itr -> first . getCreamJobID		5047816	0					
ANR	5047980	PtrMemberAccess	itr -> first		5047816	0					
ANR	5047981	Identifier	itr		5047816	0					
ANR	5047982	Identifier	first		5047816	1					
ANR	5047983	Identifier	getCreamJobID		5047816	1					
ANR	5047984	ArgumentList			5047816	1					
ANR	5047985	CallExpression	"string ( ""job date does not match"" )"		5047816	1					
ANR	5047986	Callee	string		5047816	0					
ANR	5047987	Identifier	string		5047816	0					
ANR	5047988	ArgumentList	"""job date does not match"""		5047816	1					
ANR	5047989	Argument	"""job date does not match"""		5047816	0					
ANR	5047990	PrimaryExpression	"""job date does not match"""		5047816	0					
ANR	5047991	ExpressionStatement	job_list . clear ( )	154:1:4256:4272	5047816	10	True				
ANR	5047992	CallExpression	job_list . clear ( )		5047816	0					
ANR	5047993	Callee	job_list . clear		5047816	0					
ANR	5047994	MemberAccess	job_list . clear		5047816	0					
ANR	5047995	Identifier	job_list		5047816	0					
ANR	5047996	Identifier	clear		5047816	1					
ANR	5047997	ArgumentList			5047816	1					
ANR	5047998	ExpressionStatement	rw . getNotMatchingProxyDelegationIdJobs ( job_list )	155:1:4275:4323	5047816	11	True				
ANR	5047999	CallExpression	rw . getNotMatchingProxyDelegationIdJobs ( job_list )		5047816	0					
ANR	5048000	Callee	rw . getNotMatchingProxyDelegationIdJobs		5047816	0					
ANR	5048001	MemberAccess	rw . getNotMatchingProxyDelegationIdJobs		5047816	0					
ANR	5048002	Identifier	rw		5047816	0					
ANR	5048003	Identifier	getNotMatchingProxyDelegationIdJobs		5047816	1					
ANR	5048004	ArgumentList	job_list		5047816	1					
ANR	5048005	Argument	job_list		5047816	0					
ANR	5048006	Identifier	job_list		5047816	0					
ANR	5048007	ForStatement	for ( itr = job_list . begin ( ) ; itr != job_list . end ( ) ; itr ++ )		5047816	12					
ANR	5048008	ForInit	itr = job_list . begin ( ) ;	156:7:4332:4354	5047816	0	True				
ANR	5048009	AssignmentExpression	itr = job_list . begin ( )		5047816	0		=			
ANR	5048010	Identifier	itr		5047816	0					
ANR	5048011	CallExpression	job_list . begin ( )		5047816	1					
ANR	5048012	Callee	job_list . begin		5047816	0					
ANR	5048013	MemberAccess	job_list . begin		5047816	0					
ANR	5048014	Identifier	job_list		5047816	0					
ANR	5048015	Identifier	begin		5047816	1					
ANR	5048016	ArgumentList			5047816	1					
ANR	5048017	Condition	itr != job_list . end ( )	156:31:4356:4376	5047816	1	True				
ANR	5048018	EqualityExpression	itr != job_list . end ( )		5047816	0		!=			
ANR	5048019	Identifier	itr		5047816	0					
ANR	5048020	CallExpression	job_list . end ( )		5047816	1					
ANR	5048021	Callee	job_list . end		5047816	0					
ANR	5048022	MemberAccess	job_list . end		5047816	0					
ANR	5048023	Identifier	job_list		5047816	0					
ANR	5048024	Identifier	end		5047816	1					
ANR	5048025	ArgumentList			5047816	1					
ANR	5048026	PostIncDecOperationExpression	itr ++	156:54:4379:4383	5047816	2	True				
ANR	5048027	Identifier	itr		5047816	0					
ANR	5048028	IncDec	++		5047816	1					
ANR	5048029	CompoundStatement		20:62:789:789	5047816	3					
ANR	5048030	ExpressionStatement	"out [ itr -> first . getCreamJobID ( ) ] = string ( ""job proxy delegation ID does not match"" )"	157:2:4391:4473	5047816	0	True				
ANR	5048031	AssignmentExpression	"out [ itr -> first . getCreamJobID ( ) ] = string ( ""job proxy delegation ID does not match"" )"		5047816	0		=			
ANR	5048032	ArrayIndexing	out [ itr -> first . getCreamJobID ( ) ]		5047816	0					
ANR	5048033	Identifier	out		5047816	0					
ANR	5048034	CallExpression	itr -> first . getCreamJobID ( )		5047816	1					
ANR	5048035	Callee	itr -> first . getCreamJobID		5047816	0					
ANR	5048036	MemberAccess	itr -> first . getCreamJobID		5047816	0					
ANR	5048037	PtrMemberAccess	itr -> first		5047816	0					
ANR	5048038	Identifier	itr		5047816	0					
ANR	5048039	Identifier	first		5047816	1					
ANR	5048040	Identifier	getCreamJobID		5047816	1					
ANR	5048041	ArgumentList			5047816	1					
ANR	5048042	CallExpression	"string ( ""job proxy delegation ID does not match"" )"		5047816	1					
ANR	5048043	Callee	string		5047816	0					
ANR	5048044	Identifier	string		5047816	0					
ANR	5048045	ArgumentList	"""job proxy delegation ID does not match"""		5047816	1					
ANR	5048046	Argument	"""job proxy delegation ID does not match"""		5047816	0					
ANR	5048047	PrimaryExpression	"""job proxy delegation ID does not match"""		5047816	0					
ANR	5048048	ExpressionStatement	job_list . clear ( )	159:1:4479:4495	5047816	13	True				
ANR	5048049	CallExpression	job_list . clear ( )		5047816	0					
ANR	5048050	Callee	job_list . clear		5047816	0					
ANR	5048051	MemberAccess	job_list . clear		5047816	0					
ANR	5048052	Identifier	job_list		5047816	0					
ANR	5048053	Identifier	clear		5047816	1					
ANR	5048054	ArgumentList			5047816	1					
ANR	5048055	ExpressionStatement	rw . getNotMatchingLeaseIdJobs ( job_list )	160:1:4498:4536	5047816	14	True				
ANR	5048056	CallExpression	rw . getNotMatchingLeaseIdJobs ( job_list )		5047816	0					
ANR	5048057	Callee	rw . getNotMatchingLeaseIdJobs		5047816	0					
ANR	5048058	MemberAccess	rw . getNotMatchingLeaseIdJobs		5047816	0					
ANR	5048059	Identifier	rw		5047816	0					
ANR	5048060	Identifier	getNotMatchingLeaseIdJobs		5047816	1					
ANR	5048061	ArgumentList	job_list		5047816	1					
ANR	5048062	Argument	job_list		5047816	0					
ANR	5048063	Identifier	job_list		5047816	0					
ANR	5048064	ForStatement	for ( itr = job_list . begin ( ) ; itr != job_list . end ( ) ; itr ++ )		5047816	15					
ANR	5048065	ForInit	itr = job_list . begin ( ) ;	161:7:4545:4567	5047816	0	True				
ANR	5048066	AssignmentExpression	itr = job_list . begin ( )		5047816	0		=			
ANR	5048067	Identifier	itr		5047816	0					
ANR	5048068	CallExpression	job_list . begin ( )		5047816	1					
ANR	5048069	Callee	job_list . begin		5047816	0					
ANR	5048070	MemberAccess	job_list . begin		5047816	0					
ANR	5048071	Identifier	job_list		5047816	0					
ANR	5048072	Identifier	begin		5047816	1					
ANR	5048073	ArgumentList			5047816	1					
ANR	5048074	Condition	itr != job_list . end ( )	161:31:4569:4589	5047816	1	True				
ANR	5048075	EqualityExpression	itr != job_list . end ( )		5047816	0		!=			
ANR	5048076	Identifier	itr		5047816	0					
ANR	5048077	CallExpression	job_list . end ( )		5047816	1					
ANR	5048078	Callee	job_list . end		5047816	0					
ANR	5048079	MemberAccess	job_list . end		5047816	0					
ANR	5048080	Identifier	job_list		5047816	0					
ANR	5048081	Identifier	end		5047816	1					
ANR	5048082	ArgumentList			5047816	1					
ANR	5048083	PostIncDecOperationExpression	itr ++	161:54:4592:4596	5047816	2	True				
ANR	5048084	Identifier	itr		5047816	0					
ANR	5048085	IncDec	++		5047816	1					
ANR	5048086	CompoundStatement		25:62:1002:1002	5047816	3					
ANR	5048087	ExpressionStatement	"out [ itr -> first . getCreamJobID ( ) ] = string ( ""job lease ID does not match"" )"	162:2:4604:4675	5047816	0	True				
ANR	5048088	AssignmentExpression	"out [ itr -> first . getCreamJobID ( ) ] = string ( ""job lease ID does not match"" )"		5047816	0		=			
ANR	5048089	ArrayIndexing	out [ itr -> first . getCreamJobID ( ) ]		5047816	0					
ANR	5048090	Identifier	out		5047816	0					
ANR	5048091	CallExpression	itr -> first . getCreamJobID ( )		5047816	1					
ANR	5048092	Callee	itr -> first . getCreamJobID		5047816	0					
ANR	5048093	MemberAccess	itr -> first . getCreamJobID		5047816	0					
ANR	5048094	PtrMemberAccess	itr -> first		5047816	0					
ANR	5048095	Identifier	itr		5047816	0					
ANR	5048096	Identifier	first		5047816	1					
ANR	5048097	Identifier	getCreamJobID		5047816	1					
ANR	5048098	ArgumentList			5047816	1					
ANR	5048099	CallExpression	"string ( ""job lease ID does not match"" )"		5047816	1					
ANR	5048100	Callee	string		5047816	0					
ANR	5048101	Identifier	string		5047816	0					
ANR	5048102	ArgumentList	"""job lease ID does not match"""		5047816	1					
ANR	5048103	Argument	"""job lease ID does not match"""		5047816	0					
ANR	5048104	PrimaryExpression	"""job lease ID does not match"""		5047816	0					
ANR	5048105	ReturnType	static void		5047816	1					
ANR	5048106	Identifier	check_result_wrapper2		5047816	2					
ANR	5048107	ParameterList	"ResultWrapper & rw , map < string , string > & out"		5047816	3					
ANR	5048108	Parameter	ResultWrapper & rw	136:22:3552:3568	5047816	0	True				
ANR	5048109	ParameterType	ResultWrapper &		5047816	0					
ANR	5048110	Identifier	rw		5047816	1					
ANR	5048111	Parameter	"map < string , string > & out"	136:41:3571:3594	5047816	1	True				
ANR	5048112	ParameterType	"map < string , string > &"		5047816	0					
ANR	5048113	Identifier	out		5047816	1					
ANR	5048114	CFGEntryNode	ENTRY		5047816		True				
ANR	5048115	CFGExitNode	EXIT		5047816		True				
ANR	5048116	Symbol	* itr -> first . getCreamJobID		5047816						
ANR	5048117	Symbol	string		5047816						
ANR	5048118	Symbol	rw		5047816						
ANR	5048119	Symbol	itr		5047816						
ANR	5048120	Symbol	itr -> first . getCreamJobID		5047816						
ANR	5048121	Symbol	* itr		5047816						
ANR	5048122	Symbol	out		5047816						
ANR	5048123	Symbol	job_list . begin		5047816						
ANR	5048124	Symbol	* itr -> first		5047816						
ANR	5048125	Symbol	job_list . end		5047816						
ANR	5048126	Symbol	job_list		5047816						
ANR	5048127	Symbol	* out		5047816						
ANR	5048128	Symbol	itr -> first		5047816						
ANR	5048129	Symbol	* * itr		5047816						
ANR	5048130	DeclStmt									
ANR	5048131	Decl							void	void ( char * * )	free_args
ANR	5048132	ClassDef	Request	168:0:4711:4983							
ANR	5048133	Function	Request	169:1:4729:4813							
ANR	5048134	FunctionDef	Request ()		5048133	0					
ANR	5048135	CompoundStatement		169:11:4739:4813	5048133	0					
ANR	5048136	ExpressionStatement	input_line = NULL	169:1:4741:4758	5048133	0	True				
ANR	5048137	AssignmentExpression	input_line = NULL		5048133	0		=			
ANR	5048138	Identifier	input_line		5048133	0					
ANR	5048139	Identifier	NULL		5048133	1					
ANR	5048140	ExpressionStatement	handler = NULL	169:20:4760:4774	5048133	1	True				
ANR	5048141	AssignmentExpression	handler = NULL		5048133	0		=			
ANR	5048142	Identifier	handler		5048133	0					
ANR	5048143	Identifier	NULL		5048133	1					
ANR	5048144	ExpressionStatement	bhandler = NULL	169:36:4776:4791	5048133	2	True				
ANR	5048145	AssignmentExpression	bhandler = NULL		5048133	0		=			
ANR	5048146	Identifier	bhandler		5048133	0					
ANR	5048147	Identifier	NULL		5048133	1					
ANR	5048148	ExpressionStatement	requestcomp = NULL	169:53:4793:4811	5048133	3	True				
ANR	5048149	AssignmentExpression	requestcomp = NULL		5048133	0		=			
ANR	5048150	Identifier	requestcomp		5048133	0					
ANR	5048151	Identifier	NULL		5048133	1					
ANR	5048152	Identifier	Request		5048133	1					
ANR	5048153	ParameterList			5048133	2					
ANR	5048154	CFGEntryNode	ENTRY		5048133		True				
ANR	5048155	CFGExitNode	EXIT		5048133		True				
ANR	5048156	Symbol	handler		5048133						
ANR	5048157	Symbol	NULL		5048133						
ANR	5048158	Symbol	bhandler		5048133						
ANR	5048159	Symbol	input_line		5048133						
ANR	5048160	Symbol	requestcomp		5048133						
ANR	5048161	Function	~Request	170:1:4816:4872							
ANR	5048162	FunctionDef	~Request ()		5048161	1					
ANR	5048163	CompoundStatement		170:12:4827:4872	5048161	0					
ANR	5048164	IfStatement	if ( input_line )		5048161	0					
ANR	5048165	Condition	input_line	170:6:4834:4843	5048161	0	True				
ANR	5048166	Identifier	input_line		5048161	0					
ANR	5048167	ExpressionStatement	free_args ( input_line )	170:19:4847:4870	5048161	1	True				
ANR	5048168	CallExpression	free_args ( input_line )		5048161	0					
ANR	5048169	Callee	free_args		5048161	0					
ANR	5048170	Identifier	free_args		5048161	0					
ANR	5048171	ArgumentList	input_line		5048161	1					
ANR	5048172	Argument	input_line		5048161	0					
ANR	5048173	Identifier	input_line		5048161	0					
ANR	5048174	Identifier	~Request		5048161	1					
ANR	5048175	ParameterList			5048161	2					
ANR	5048176	CFGEntryNode	ENTRY		5048161		True				
ANR	5048177	CFGExitNode	EXIT		5048161		True				
ANR	5048178	Symbol	input_line		5048161						
ANR	5048179	DeclStmt									
ANR	5048180	Decl							char	char * *	input_line
ANR	5048181	DeclStmt									
ANR	5048182	Decl							string	string	proxy
ANR	5048183	DeclStmt									
ANR	5048184	Decl							SingleHandler	SingleHandler	handler
ANR	5048185	DeclStmt									
ANR	5048186	Decl							BatchHandler	BatchHandler	bhandler
ANR	5048187	DeclStmt									
ANR	5048188	Decl							RequestCmp	RequestCmp	requestcomp
ANR	5048189	DeclStmt									
ANR	5048190	Decl							char	char *	commands_list
ANR	5048191	DeclStmt									
ANR	5048192	Decl							char	char *	VersionString
ANR	5048193	DeclStmt									
ANR	5048194	Decl							pthread_t	pthread_t *	threads
ANR	5048195	DeclStmt									
ANR	5048196	Decl							string	string	active_proxy
ANR	5048197	DeclStmt									
ANR	5048198	Decl							bool	bool	initialized
ANR	5048199	DeclStmt									
ANR	5048200	Decl							"map < string , string >"	"map < string , string >"	proxies
ANR	5048201	DeclStmt									
ANR	5048202	Decl							string	string	sp
ANR	5048203	DeclStmt									
ANR	5048204	Decl							deque < Request * >	deque < Request * >	requestQueue
ANR	5048205	DeclStmt									
ANR	5048206	Decl							pthread_cond_t	pthread_cond_t	requestQueueEmpty
ANR	5048207	DeclStmt									
ANR	5048208	Decl							pthread_mutex_t	pthread_mutex_t	requestQueueLock
ANR	5048209	DeclStmt									
ANR	5048210	Decl							queue < string >	queue < string >	resultQueue
ANR	5048211	DeclStmt									
ANR	5048212	Decl							pthread_mutex_t	pthread_mutex_t	resultQueueLock
ANR	5048213	DeclStmt									
ANR	5048214	Decl							bool	bool	async
ANR	5048215	DeclStmt									
ANR	5048216	Decl							bool	bool	results_pending
ANR	5048217	DeclStmt									
ANR	5048218	Decl							pthread_mutex_t	pthread_mutex_t	outputLock
ANR	5048219	DeclStmt									
ANR	5048220	Decl							char	char *	response_prefix
ANR	5048221	DeclStmt									
ANR	5048222	Decl							int	int ( Request * req )	thread_cream_delegate
ANR	5048223	DeclStmt									
ANR	5048224	Decl							int	int ( Request * * req )	thread_cream_job_register
ANR	5048225	DeclStmt									
ANR	5048226	Decl							int	int ( Request * * req )	thread_cream_job_start
ANR	5048227	DeclStmt									
ANR	5048228	Decl							int	int ( Request * * req )	thread_cream_job_purge
ANR	5048229	DeclStmt									
ANR	5048230	Decl							int	int ( Request * * req )	thread_cream_job_cancel
ANR	5048231	DeclStmt									
ANR	5048232	Decl							int	int ( Request * req )	thread_cream_job_suspend
ANR	5048233	DeclStmt									
ANR	5048234	Decl							int	int ( Request * req )	thread_cream_job_resume
ANR	5048235	DeclStmt									
ANR	5048236	Decl							int	int ( Request * req )	thread_cream_set_lease
ANR	5048237	DeclStmt									
ANR	5048238	Decl							int	int ( Request * * req )	thread_cream_job_status
ANR	5048239	DeclStmt									
ANR	5048240	Decl							int	int ( Request * req )	thread_cream_job_info
ANR	5048241	DeclStmt									
ANR	5048242	Decl							int	int ( Request * req )	thread_cream_job_list
ANR	5048243	DeclStmt									
ANR	5048244	Decl							int	int ( Request * req )	thread_cream_ping
ANR	5048245	DeclStmt									
ANR	5048246	Decl							int	int ( Request * req )	thread_cream_does_accept_job_submissions
ANR	5048247	DeclStmt									
ANR	5048248	Decl							int	int ( Request * req )	thread_cream_proxy_renew
ANR	5048249	DeclStmt									
ANR	5048250	Decl							int	int ( Request * req )	thread_cream_get_CEMon_url
ANR	5048251	Function	gahp_printf	251:0:7395:7741							
ANR	5048252	FunctionDef	gahp_printf (const char * format)		5048251	0					
ANR	5048253	CompoundStatement		252:0:7436:7741	5048251	0					
ANR	5048254	IdentifierDeclStatement	int ret_val = 0 ;	253:1:7439:7454	5048251	0	True				
ANR	5048255	IdentifierDecl	ret_val = 0		5048251	0					
ANR	5048256	IdentifierDeclType	int		5048251	0					
ANR	5048257	Identifier	ret_val		5048251	1					
ANR	5048258	AssignmentExpression	ret_val = 0		5048251	2		=			
ANR	5048259	Identifier	ret_val		5048251	0					
ANR	5048260	PrimaryExpression	0		5048251	1					
ANR	5048261	IdentifierDeclStatement	va_list ap ;	254:1:7457:7467	5048251	1	True				
ANR	5048262	IdentifierDecl	ap		5048251	0					
ANR	5048263	IdentifierDeclType	va_list		5048251	0					
ANR	5048264	Identifier	ap		5048251	1					
ANR	5048265	ExpressionStatement	pthread_mutex_lock ( & outputLock )	256:1:7473:7506	5048251	2	True				
ANR	5048266	CallExpression	pthread_mutex_lock ( & outputLock )		5048251	0					
ANR	5048267	Callee	pthread_mutex_lock		5048251	0					
ANR	5048268	Identifier	pthread_mutex_lock		5048251	0					
ANR	5048269	ArgumentList	& outputLock		5048251	1					
ANR	5048270	Argument	& outputLock		5048251	0					
ANR	5048271	UnaryOperationExpression	& outputLock		5048251	0					
ANR	5048272	UnaryOperator	&		5048251	0					
ANR	5048273	Identifier	outputLock		5048251	1					
ANR	5048274	IfStatement	if ( response_prefix )		5048251	3					
ANR	5048275	Condition	response_prefix	258:5:7514:7528	5048251	0	True				
ANR	5048276	Identifier	response_prefix		5048251	0					
ANR	5048277	CompoundStatement		7:22:94:94	5048251	1					
ANR	5048278	ExpressionStatement	"ret_val = printf ( ""%s"" , response_prefix )"	259:2:7535:7574	5048251	0	True				
ANR	5048279	AssignmentExpression	"ret_val = printf ( ""%s"" , response_prefix )"		5048251	0		=			
ANR	5048280	Identifier	ret_val		5048251	0					
ANR	5048281	CallExpression	"printf ( ""%s"" , response_prefix )"		5048251	1					
ANR	5048282	Callee	printf		5048251	0					
ANR	5048283	Identifier	printf		5048251	0					
ANR	5048284	ArgumentList	"""%s"""		5048251	1					
ANR	5048285	Argument	"""%s"""		5048251	0					
ANR	5048286	PrimaryExpression	"""%s"""		5048251	0					
ANR	5048287	Argument	response_prefix		5048251	1					
ANR	5048288	Identifier	response_prefix		5048251	0					
ANR	5048289	IfStatement	if ( ret_val >= 0 )		5048251	4					
ANR	5048290	Condition	ret_val >= 0	262:4:7584:7595	5048251	0	True				
ANR	5048291	RelationalExpression	ret_val >= 0		5048251	0		>=			
ANR	5048292	Identifier	ret_val		5048251	0					
ANR	5048293	PrimaryExpression	0		5048251	1					
ANR	5048294	CompoundStatement		11:18:161:161	5048251	1					
ANR	5048295	ExpressionStatement	"va_start ( ap , format )"	263:2:7602:7622	5048251	0	True				
ANR	5048296	CallExpression	"va_start ( ap , format )"		5048251	0					
ANR	5048297	Callee	va_start		5048251	0					
ANR	5048298	Identifier	va_start		5048251	0					
ANR	5048299	ArgumentList	ap		5048251	1					
ANR	5048300	Argument	ap		5048251	0					
ANR	5048301	Identifier	ap		5048251	0					
ANR	5048302	Argument	format		5048251	1					
ANR	5048303	Identifier	format		5048251	0					
ANR	5048304	ExpressionStatement	"vprintf ( format , ap )"	264:2:7626:7645	5048251	1	True				
ANR	5048305	CallExpression	"vprintf ( format , ap )"		5048251	0					
ANR	5048306	Callee	vprintf		5048251	0					
ANR	5048307	Identifier	vprintf		5048251	0					
ANR	5048308	ArgumentList	format		5048251	1					
ANR	5048309	Argument	format		5048251	0					
ANR	5048310	Identifier	format		5048251	0					
ANR	5048311	Argument	ap		5048251	1					
ANR	5048312	Identifier	ap		5048251	0					
ANR	5048313	ExpressionStatement	va_end ( ap )	265:2:7649:7659	5048251	2	True				
ANR	5048314	CallExpression	va_end ( ap )		5048251	0					
ANR	5048315	Callee	va_end		5048251	0					
ANR	5048316	Identifier	va_end		5048251	0					
ANR	5048317	ArgumentList	ap		5048251	1					
ANR	5048318	Argument	ap		5048251	0					
ANR	5048319	Identifier	ap		5048251	0					
ANR	5048320	ExpressionStatement	fflush ( stdout )	268:1:7667:7681	5048251	5	True				
ANR	5048321	CallExpression	fflush ( stdout )		5048251	0					
ANR	5048322	Callee	fflush		5048251	0					
ANR	5048323	Identifier	fflush		5048251	0					
ANR	5048324	ArgumentList	stdout		5048251	1					
ANR	5048325	Argument	stdout		5048251	0					
ANR	5048326	Identifier	stdout		5048251	0					
ANR	5048327	ExpressionStatement	pthread_mutex_unlock ( & outputLock )	270:1:7685:7720	5048251	6	True				
ANR	5048328	CallExpression	pthread_mutex_unlock ( & outputLock )		5048251	0					
ANR	5048329	Callee	pthread_mutex_unlock		5048251	0					
ANR	5048330	Identifier	pthread_mutex_unlock		5048251	0					
ANR	5048331	ArgumentList	& outputLock		5048251	1					
ANR	5048332	Argument	& outputLock		5048251	0					
ANR	5048333	UnaryOperationExpression	& outputLock		5048251	0					
ANR	5048334	UnaryOperator	&		5048251	0					
ANR	5048335	Identifier	outputLock		5048251	1					
ANR	5048336	ReturnStatement	return ret_val ;	272:1:7725:7739	5048251	7	True				
ANR	5048337	Identifier	ret_val		5048251	0					
ANR	5048338	ReturnType	int		5048251	1					
ANR	5048339	Identifier	gahp_printf		5048251	2					
ANR	5048340	ParameterList	const char * format		5048251	3					
ANR	5048341	Parameter	const char * format	251:16:7411:7428	5048251	0	True				
ANR	5048342	ParameterType	const char *		5048251	0					
ANR	5048343	Identifier	format		5048251	1					
ANR	5048344	CFGEntryNode	ENTRY		5048251		True				
ANR	5048345	CFGExitNode	EXIT		5048251		True				
ANR	5048346	Symbol	stdout		5048251						
ANR	5048347	Symbol	& outputLock		5048251						
ANR	5048348	Symbol	format		5048251						
ANR	5048349	Symbol	response_prefix		5048251						
ANR	5048350	Symbol	ret_val		5048251						
ANR	5048351	Symbol	ap		5048251						
ANR	5048352	Symbol	printf		5048251						
ANR	5048353	Function	process_string_arg	280:0:7960:8267							
ANR	5048354	FunctionDef	"process_string_arg (char * input_line , char * * output)"		5048353	0					
ANR	5048355	CompoundStatement		281:0:8017:8267	5048353	0					
ANR	5048356	IfStatement	"if ( ! strcasecmp ( input_line , ""NULL"" ) )"		5048353	0					
ANR	5048357	Condition	"! strcasecmp ( input_line , ""NULL"" )"	284:4:8152:8182	5048353	0	True				
ANR	5048358	UnaryOperationExpression	"! strcasecmp ( input_line , ""NULL"" )"		5048353	0					
ANR	5048359	UnaryOperator	!		5048353	0					
ANR	5048360	CallExpression	"strcasecmp ( input_line , ""NULL"" )"		5048353	1					
ANR	5048361	Callee	strcasecmp		5048353	0					
ANR	5048362	Identifier	strcasecmp		5048353	0					
ANR	5048363	ArgumentList	input_line		5048353	1					
ANR	5048364	Argument	input_line		5048353	0					
ANR	5048365	Identifier	input_line		5048353	0					
ANR	5048366	Argument	"""NULL"""		5048353	1					
ANR	5048367	PrimaryExpression	"""NULL"""		5048353	0					
ANR	5048368	ExpressionStatement	* output = NULL	285:2:8188:8202	5048353	1	True				
ANR	5048369	AssignmentExpression	* output = NULL		5048353	0		=			
ANR	5048370	UnaryOperationExpression	* output		5048353	0					
ANR	5048371	UnaryOperator	*		5048353	0					
ANR	5048372	Identifier	output		5048353	1					
ANR	5048373	Identifier	NULL		5048353	1					
ANR	5048374	ElseStatement	else		5048353	0					
ANR	5048375	ExpressionStatement	* output = input_line	287:2:8214:8234	5048353	0	True				
ANR	5048376	AssignmentExpression	* output = input_line		5048353	0		=			
ANR	5048377	UnaryOperationExpression	* output		5048353	0					
ANR	5048378	UnaryOperator	*		5048353	0					
ANR	5048379	Identifier	output		5048353	1					
ANR	5048380	Identifier	input_line		5048353	1					
ANR	5048381	ReturnType	void		5048353	1					
ANR	5048382	Identifier	process_string_arg		5048353	2					
ANR	5048383	ParameterList	"char * input_line , char * * output"		5048353	3					
ANR	5048384	Parameter	char * input_line	280:24:7984:7999	5048353	0	True				
ANR	5048385	ParameterType	char *		5048353	0					
ANR	5048386	Identifier	input_line		5048353	1					
ANR	5048387	Parameter	char * * output	280:42:8002:8014	5048353	1	True				
ANR	5048388	ParameterType	char * *		5048353	0					
ANR	5048389	Identifier	output		5048353	1					
ANR	5048390	CFGEntryNode	ENTRY		5048353		True				
ANR	5048391	CFGExitNode	EXIT		5048353		True				
ANR	5048392	Symbol	output		5048353						
ANR	5048393	Symbol	NULL		5048353						
ANR	5048394	Symbol	input_line		5048353						
ANR	5048395	Symbol	strcasecmp		5048353						
ANR	5048396	Symbol	* output		5048353						
ANR	5048397	Function	process_int_arg	290:0:8270:8432							
ANR	5048398	FunctionDef	"process_int_arg (char * input , int * output)"		5048397	0					
ANR	5048399	CompoundStatement		292:0:8318:8432	5048397	0					
ANR	5048400	IfStatement	if ( input && strlen ( input ) )		5048397	0					
ANR	5048401	Condition	input && strlen ( input )	293:5:8325:8346	5048397	0	True				
ANR	5048402	AndExpression	input && strlen ( input )		5048397	0		&&			
ANR	5048403	Identifier	input		5048397	0					
ANR	5048404	CallExpression	strlen ( input )		5048397	1					
ANR	5048405	Callee	strlen		5048397	0					
ANR	5048406	Identifier	strlen		5048397	0					
ANR	5048407	ArgumentList	input		5048397	1					
ANR	5048408	Argument	input		5048397	0					
ANR	5048409	Identifier	input		5048397	0					
ANR	5048410	CompoundStatement		2:29:30:30	5048397	1					
ANR	5048411	IfStatement	if ( output )		5048397	0					
ANR	5048412	Condition	output	294:7:8358:8363	5048397	0	True				
ANR	5048413	Identifier	output		5048397	0					
ANR	5048414	CompoundStatement		3:16:48:48	5048397	1					
ANR	5048415	ExpressionStatement	* output = atoi ( input )	295:3:8372:8393	5048397	0	True				
ANR	5048416	AssignmentExpression	* output = atoi ( input )		5048397	0		=			
ANR	5048417	UnaryOperationExpression	* output		5048397	0					
ANR	5048418	UnaryOperator	*		5048397	0					
ANR	5048419	Identifier	output		5048397	1					
ANR	5048420	CallExpression	atoi ( input )		5048397	1					
ANR	5048421	Callee	atoi		5048397	0					
ANR	5048422	Identifier	atoi		5048397	0					
ANR	5048423	ArgumentList	input		5048397	1					
ANR	5048424	Argument	input		5048397	0					
ANR	5048425	Identifier	input		5048397	0					
ANR	5048426	ReturnStatement	return true ;	297:2:8401:8412	5048397	1	True				
ANR	5048427	Identifier	true		5048397	0					
ANR	5048428	ReturnStatement	return false ;	299:1:8418:8430	5048397	1	True				
ANR	5048429	Identifier	false		5048397	0					
ANR	5048430	ReturnType	int		5048397	1					
ANR	5048431	Identifier	process_int_arg		5048397	2					
ANR	5048432	ParameterList	"char * input , int * output"		5048397	3					
ANR	5048433	Parameter	char * input	291:17:8292:8302	5048397	0	True				
ANR	5048434	ParameterType	char *		5048397	0					
ANR	5048435	Identifier	input		5048397	1					
ANR	5048436	Parameter	int * output	291:30:8305:8315	5048397	1	True				
ANR	5048437	ParameterType	int *		5048397	0					
ANR	5048438	Identifier	output		5048397	1					
ANR	5048439	CFGEntryNode	ENTRY		5048397		True				
ANR	5048440	CFGExitNode	EXIT		5048397		True				
ANR	5048441	Symbol	output		5048397						
ANR	5048442	Symbol	atoi		5048397						
ANR	5048443	Symbol	input		5048397						
ANR	5048444	Symbol	strlen		5048397						
ANR	5048445	Symbol	true		5048397						
ANR	5048446	Symbol	false		5048397						
ANR	5048447	Symbol	* output		5048397						
ANR	5048448	Function	count_args	302:0:8435:8552							
ANR	5048449	FunctionDef	count_args (char * * input_line)		5048448	0					
ANR	5048450	CompoundStatement		303:0:8471:8552	5048448	0					
ANR	5048451	IdentifierDeclStatement	int count = 0 ;	304:1:8474:8487	5048448	0	True				
ANR	5048452	IdentifierDecl	count = 0		5048448	0					
ANR	5048453	IdentifierDeclType	int		5048448	0					
ANR	5048454	Identifier	count		5048448	1					
ANR	5048455	AssignmentExpression	count = 0		5048448	2		=			
ANR	5048456	Identifier	count		5048448	0					
ANR	5048457	PrimaryExpression	0		5048448	1					
ANR	5048458	ForStatement	for ( count = 0 ; input_line [ count ] ; count ++ )		5048448	1					
ANR	5048459	ForInit	count = 0 ;	305:7:8496:8505	5048448	0	True				
ANR	5048460	AssignmentExpression	count = 0		5048448	0		=			
ANR	5048461	Identifier	count		5048448	0					
ANR	5048462	PrimaryExpression	0		5048448	1					
ANR	5048463	Condition	input_line [ count ]	305:18:8507:8523	5048448	1	True				
ANR	5048464	ArrayIndexing	input_line [ count ]		5048448	0					
ANR	5048465	Identifier	input_line		5048448	0					
ANR	5048466	Identifier	count		5048448	1					
ANR	5048467	PostIncDecOperationExpression	count ++	305:37:8526:8532	5048448	2	True				
ANR	5048468	Identifier	count		5048448	0					
ANR	5048469	IncDec	++		5048448	1					
ANR	5048470	ExpressionStatement		305:46:8535:8535	5048448	3	True				
ANR	5048471	ReturnStatement	return count ;	306:1:8538:8550	5048448	2	True				
ANR	5048472	Identifier	count		5048448	0					
ANR	5048473	ReturnType	int		5048448	1					
ANR	5048474	Identifier	count_args		5048448	2					
ANR	5048475	ParameterList	char * * input_line		5048448	3					
ANR	5048476	Parameter	char * * input_line	302:16:8451:8467	5048448	0	True				
ANR	5048477	ParameterType	char * *		5048448	0					
ANR	5048478	Identifier	input_line		5048448	1					
ANR	5048479	CFGEntryNode	ENTRY		5048448		True				
ANR	5048480	CFGExitNode	EXIT		5048448		True				
ANR	5048481	Symbol	* input_line		5048448						
ANR	5048482	Symbol	* count		5048448						
ANR	5048483	Symbol	count		5048448						
ANR	5048484	Symbol	input_line		5048448						
ANR	5048485	Function	escape_spaces	313:0:8828:9538							
ANR	5048486	FunctionDef	escape_spaces (const char * input_line)		5048485	0					
ANR	5048487	CompoundStatement		314:0:8874:9538	5048485	0					
ANR	5048488	IdentifierDeclStatement	int i ;	315:1:8877:8882	5048485	0	True				
ANR	5048489	IdentifierDecl	i		5048485	0					
ANR	5048490	IdentifierDeclType	int		5048485	0					
ANR	5048491	Identifier	i		5048485	1					
ANR	5048492	IdentifierDeclStatement	const char * temp ;	316:1:8885:8901	5048485	1	True				
ANR	5048493	IdentifierDecl	* temp		5048485	0					
ANR	5048494	IdentifierDeclType	const char *		5048485	0					
ANR	5048495	Identifier	temp		5048485	1					
ANR	5048496	IdentifierDeclStatement	char * output_line ;	317:1:8904:8921	5048485	2	True				
ANR	5048497	IdentifierDecl	* output_line		5048485	0					
ANR	5048498	IdentifierDeclType	char *		5048485	0					
ANR	5048499	Identifier	output_line		5048485	1					
ANR	5048500	ExpressionStatement	temp = input_line	320:1:8956:8973	5048485	3	True				
ANR	5048501	AssignmentExpression	temp = input_line		5048485	0		=			
ANR	5048502	Identifier	temp		5048485	0					
ANR	5048503	Identifier	input_line		5048485	1					
ANR	5048504	ForStatement	for ( i = 0 ; * temp != '\\0' ; temp ++ )		5048485	4					
ANR	5048505	ForInit	i = 0 ;	321:5:8980:8985	5048485	0	True				
ANR	5048506	AssignmentExpression	i = 0		5048485	0		=			
ANR	5048507	Identifier	i		5048485	0					
ANR	5048508	PrimaryExpression	0		5048485	1					
ANR	5048509	Condition	* temp != '\\0'	321:12:8987:8999	5048485	1	True				
ANR	5048510	EqualityExpression	* temp != '\\0'		5048485	0		!=			
ANR	5048511	UnaryOperationExpression	* temp		5048485	0					
ANR	5048512	UnaryOperator	*		5048485	0					
ANR	5048513	Identifier	temp		5048485	1					
ANR	5048514	PrimaryExpression	'\\0'		5048485	1					
ANR	5048515	PostIncDecOperationExpression	temp ++	321:27:9002:9007	5048485	2	True				
ANR	5048516	Identifier	temp		5048485	0					
ANR	5048517	IncDec	++		5048485	1					
ANR	5048518	CompoundStatement		8:35:135:135	5048485	3					
ANR	5048519	IfStatement	if ( * temp == ' ' || * temp == '\\r' || * temp == '\\n' || * temp == '\\\\' )		5048485	0					
ANR	5048520	Condition	* temp == ' ' || * temp == '\\r' || * temp == '\\n' || * temp == '\\\\'	322:6:9018:9079	5048485	0	True				
ANR	5048521	OrExpression	* temp == ' ' || * temp == '\\r' || * temp == '\\n' || * temp == '\\\\'		5048485	0		||			
ANR	5048522	EqualityExpression	* temp == ' '		5048485	0		==			
ANR	5048523	UnaryOperationExpression	* temp		5048485	0					
ANR	5048524	UnaryOperator	*		5048485	0					
ANR	5048525	Identifier	temp		5048485	1					
ANR	5048526	PrimaryExpression	' '		5048485	1					
ANR	5048527	OrExpression	* temp == '\\r' || * temp == '\\n' || * temp == '\\\\'		5048485	1		||			
ANR	5048528	EqualityExpression	* temp == '\\r'		5048485	0		==			
ANR	5048529	UnaryOperationExpression	* temp		5048485	0					
ANR	5048530	UnaryOperator	*		5048485	0					
ANR	5048531	Identifier	temp		5048485	1					
ANR	5048532	PrimaryExpression	'\\r'		5048485	1					
ANR	5048533	OrExpression	* temp == '\\n' || * temp == '\\\\'		5048485	1		||			
ANR	5048534	EqualityExpression	* temp == '\\n'		5048485	0		==			
ANR	5048535	UnaryOperationExpression	* temp		5048485	0					
ANR	5048536	UnaryOperator	*		5048485	0					
ANR	5048537	Identifier	temp		5048485	1					
ANR	5048538	PrimaryExpression	'\\n'		5048485	1					
ANR	5048539	EqualityExpression	* temp == '\\\\'		5048485	1		==			
ANR	5048540	UnaryOperationExpression	* temp		5048485	0					
ANR	5048541	UnaryOperator	*		5048485	0					
ANR	5048542	Identifier	temp		5048485	1					
ANR	5048543	PrimaryExpression	'\\\\'		5048485	1					
ANR	5048544	CompoundStatement		9:71:208:208	5048485	1					
ANR	5048545	ExpressionStatement	i ++	323:3:9088:9091	5048485	0	True				
ANR	5048546	PostIncDecOperationExpression	i ++		5048485	0					
ANR	5048547	Identifier	i		5048485	0					
ANR	5048548	IncDec	++		5048485	1					
ANR	5048549	ExpressionStatement	output_line = ( char * ) malloc ( strlen ( input_line ) + i + 200 )	328:1:9139:9197	5048485	5	True				
ANR	5048550	AssignmentExpression	output_line = ( char * ) malloc ( strlen ( input_line ) + i + 200 )		5048485	0		=			
ANR	5048551	Identifier	output_line		5048485	0					
ANR	5048552	CastExpression	( char * ) malloc ( strlen ( input_line ) + i + 200 )		5048485	1					
ANR	5048553	CastTarget	char *		5048485	0					
ANR	5048554	CallExpression	malloc ( strlen ( input_line ) + i + 200 )		5048485	1					
ANR	5048555	Callee	malloc		5048485	0					
ANR	5048556	Identifier	malloc		5048485	0					
ANR	5048557	ArgumentList	strlen ( input_line ) + i + 200		5048485	1					
ANR	5048558	Argument	strlen ( input_line ) + i + 200		5048485	0					
ANR	5048559	AdditiveExpression	strlen ( input_line ) + i + 200		5048485	0		+			
ANR	5048560	CallExpression	strlen ( input_line )		5048485	0					
ANR	5048561	Callee	strlen		5048485	0					
ANR	5048562	Identifier	strlen		5048485	0					
ANR	5048563	ArgumentList	input_line		5048485	1					
ANR	5048564	Argument	input_line		5048485	0					
ANR	5048565	Identifier	input_line		5048485	0					
ANR	5048566	AdditiveExpression	i + 200		5048485	1		+			
ANR	5048567	Identifier	i		5048485	0					
ANR	5048568	PrimaryExpression	200		5048485	1					
ANR	5048569	ExpressionStatement	temp = input_line	331:1:9226:9243	5048485	6	True				
ANR	5048570	AssignmentExpression	temp = input_line		5048485	0		=			
ANR	5048571	Identifier	temp		5048485	0					
ANR	5048572	Identifier	input_line		5048485	1					
ANR	5048573	ForStatement	for ( i = 0 ; * temp != '\\0' ; temp ++ )		5048485	7					
ANR	5048574	ForInit	i = 0 ;	332:5:9250:9255	5048485	0	True				
ANR	5048575	AssignmentExpression	i = 0		5048485	0		=			
ANR	5048576	Identifier	i		5048485	0					
ANR	5048577	PrimaryExpression	0		5048485	1					
ANR	5048578	Condition	* temp != '\\0'	332:12:9257:9269	5048485	1	True				
ANR	5048579	EqualityExpression	* temp != '\\0'		5048485	0		!=			
ANR	5048580	UnaryOperationExpression	* temp		5048485	0					
ANR	5048581	UnaryOperator	*		5048485	0					
ANR	5048582	Identifier	temp		5048485	1					
ANR	5048583	PrimaryExpression	'\\0'		5048485	1					
ANR	5048584	PostIncDecOperationExpression	temp ++	332:27:9272:9277	5048485	2	True				
ANR	5048585	Identifier	temp		5048485	0					
ANR	5048586	IncDec	++		5048485	1					
ANR	5048587	CompoundStatement		19:35:405:405	5048485	3					
ANR	5048588	IfStatement	if ( * temp == ' ' || * temp == '\\r' || * temp == '\\n' || * temp == '\\\\' )		5048485	0					
ANR	5048589	Condition	* temp == ' ' || * temp == '\\r' || * temp == '\\n' || * temp == '\\\\'	333:6:9288:9349	5048485	0	True				
ANR	5048590	OrExpression	* temp == ' ' || * temp == '\\r' || * temp == '\\n' || * temp == '\\\\'		5048485	0		||			
ANR	5048591	EqualityExpression	* temp == ' '		5048485	0		==			
ANR	5048592	UnaryOperationExpression	* temp		5048485	0					
ANR	5048593	UnaryOperator	*		5048485	0					
ANR	5048594	Identifier	temp		5048485	1					
ANR	5048595	PrimaryExpression	' '		5048485	1					
ANR	5048596	OrExpression	* temp == '\\r' || * temp == '\\n' || * temp == '\\\\'		5048485	1		||			
ANR	5048597	EqualityExpression	* temp == '\\r'		5048485	0		==			
ANR	5048598	UnaryOperationExpression	* temp		5048485	0					
ANR	5048599	UnaryOperator	*		5048485	0					
ANR	5048600	Identifier	temp		5048485	1					
ANR	5048601	PrimaryExpression	'\\r'		5048485	1					
ANR	5048602	OrExpression	* temp == '\\n' || * temp == '\\\\'		5048485	1		||			
ANR	5048603	EqualityExpression	* temp == '\\n'		5048485	0		==			
ANR	5048604	UnaryOperationExpression	* temp		5048485	0					
ANR	5048605	UnaryOperator	*		5048485	0					
ANR	5048606	Identifier	temp		5048485	1					
ANR	5048607	PrimaryExpression	'\\n'		5048485	1					
ANR	5048608	EqualityExpression	* temp == '\\\\'		5048485	1		==			
ANR	5048609	UnaryOperationExpression	* temp		5048485	0					
ANR	5048610	UnaryOperator	*		5048485	0					
ANR	5048611	Identifier	temp		5048485	1					
ANR	5048612	PrimaryExpression	'\\\\'		5048485	1					
ANR	5048613	CompoundStatement		20:71:478:478	5048485	1					
ANR	5048614	ExpressionStatement	output_line [ i ] = '\\\\'	334:3:9358:9379	5048485	0	True				
ANR	5048615	AssignmentExpression	output_line [ i ] = '\\\\'		5048485	0		=			
ANR	5048616	ArrayIndexing	output_line [ i ]		5048485	0					
ANR	5048617	Identifier	output_line		5048485	0					
ANR	5048618	Identifier	i		5048485	1					
ANR	5048619	PrimaryExpression	'\\\\'		5048485	1					
ANR	5048620	ExpressionStatement	i ++	335:3:9385:9388	5048485	1	True				
ANR	5048621	PostIncDecOperationExpression	i ++		5048485	0					
ANR	5048622	Identifier	i		5048485	0					
ANR	5048623	IncDec	++		5048485	1					
ANR	5048624	ExpressionStatement	output_line [ i ] = * temp	337:2:9396:9418	5048485	1	True				
ANR	5048625	AssignmentExpression	output_line [ i ] = * temp		5048485	0		=			
ANR	5048626	ArrayIndexing	output_line [ i ]		5048485	0					
ANR	5048627	Identifier	output_line		5048485	0					
ANR	5048628	Identifier	i		5048485	1					
ANR	5048629	UnaryOperationExpression	* temp		5048485	1					
ANR	5048630	UnaryOperator	*		5048485	0					
ANR	5048631	Identifier	temp		5048485	1					
ANR	5048632	ExpressionStatement	i ++	338:2:9422:9425	5048485	2	True				
ANR	5048633	PostIncDecOperationExpression	i ++		5048485	0					
ANR	5048634	Identifier	i		5048485	0					
ANR	5048635	IncDec	++		5048485	1					
ANR	5048636	ExpressionStatement	output_line [ i ] = '\\0'	340:1:9431:9452	5048485	8	True				
ANR	5048637	AssignmentExpression	output_line [ i ] = '\\0'		5048485	0		=			
ANR	5048638	ArrayIndexing	output_line [ i ]		5048485	0					
ANR	5048639	Identifier	output_line		5048485	0					
ANR	5048640	Identifier	i		5048485	1					
ANR	5048641	PrimaryExpression	'\\0'		5048485	1					
ANR	5048642	ReturnStatement	return output_line ;	342:1:9517:9535	5048485	9	True				
ANR	5048643	Identifier	output_line		5048485	0					
ANR	5048644	ReturnType	char *		5048485	1					
ANR	5048645	Identifier	escape_spaces		5048485	2					
ANR	5048646	ParameterList	const char * input_line		5048485	3					
ANR	5048647	Parameter	const char * input_line	313:21:8849:8870	5048485	0	True				
ANR	5048648	ParameterType	const char *		5048485	0					
ANR	5048649	Identifier	input_line		5048485	1					
ANR	5048650	CFGEntryNode	ENTRY		5048485		True				
ANR	5048651	CFGExitNode	EXIT		5048485		True				
ANR	5048652	Symbol	* output_line		5048485						
ANR	5048653	Symbol	malloc		5048485						
ANR	5048654	Symbol	strlen		5048485						
ANR	5048655	Symbol	temp		5048485						
ANR	5048656	Symbol	* i		5048485						
ANR	5048657	Symbol	i		5048485						
ANR	5048658	Symbol	input_line		5048485						
ANR	5048659	Symbol	output_line		5048485						
ANR	5048660	Symbol	* temp		5048485						
ANR	5048661	Function	free_args	350:0:9746:9908							
ANR	5048662	FunctionDef	free_args (char * * input_line)		5048661	0					
ANR	5048663	CompoundStatement		351:0:9782:9908	5048661	0					
ANR	5048664	IfStatement	if ( input_line == NULL )		5048661	0					
ANR	5048665	Condition	input_line == NULL	352:4:9788:9805	5048661	0	True				
ANR	5048666	EqualityExpression	input_line == NULL		5048661	0		==			
ANR	5048667	Identifier	input_line		5048661	0					
ANR	5048668	Identifier	NULL		5048661	1					
ANR	5048669	ReturnStatement	return ;	353:2:9810:9816	5048661	1	True				
ANR	5048670	ForStatement	for ( int i = 0 ; input_line [ i ] ; i ++ )		5048661	1					
ANR	5048671	ForInit	int i = 0 ;	355:7:9826:9835	5048661	0	True				
ANR	5048672	IdentifierDeclStatement	int i = 0 ;		5048661	0					
ANR	5048673	IdentifierDecl	i = 0		5048661	0					
ANR	5048674	IdentifierDeclType	int		5048661	0					
ANR	5048675	Identifier	i		5048661	1					
ANR	5048676	AssignmentExpression	i = 0		5048661	2		=			
ANR	5048677	Identifier	i		5048661	0					
ANR	5048678	PrimaryExpression	0		5048661	1					
ANR	5048679	Condition	input_line [ i ]	355:18:9837:9849	5048661	1	True				
ANR	5048680	ArrayIndexing	input_line [ i ]		5048661	0					
ANR	5048681	Identifier	input_line		5048661	0					
ANR	5048682	Identifier	i		5048661	1					
ANR	5048683	PostIncDecOperationExpression	i ++	355:33:9852:9854	5048661	2	True				
ANR	5048684	Identifier	i		5048661	0					
ANR	5048685	IncDec	++		5048661	1					
ANR	5048686	CompoundStatement		5:39:75:75	5048661	3					
ANR	5048687	ExpressionStatement	free ( input_line [ i ] )	356:2:9862:9883	5048661	0	True				
ANR	5048688	CallExpression	free ( input_line [ i ] )		5048661	0					
ANR	5048689	Callee	free		5048661	0					
ANR	5048690	Identifier	free		5048661	0					
ANR	5048691	ArgumentList	input_line [ i ]		5048661	1					
ANR	5048692	Argument	input_line [ i ]		5048661	0					
ANR	5048693	ArrayIndexing	input_line [ i ]		5048661	0					
ANR	5048694	Identifier	input_line		5048661	0					
ANR	5048695	Identifier	i		5048661	1					
ANR	5048696	ExpressionStatement	free ( input_line )	359:1:9890:9906	5048661	2	True				
ANR	5048697	CallExpression	free ( input_line )		5048661	0					
ANR	5048698	Callee	free		5048661	0					
ANR	5048699	Identifier	free		5048661	0					
ANR	5048700	ArgumentList	input_line		5048661	1					
ANR	5048701	Argument	input_line		5048661	0					
ANR	5048702	Identifier	input_line		5048661	0					
ANR	5048703	ReturnType	void		5048661	1					
ANR	5048704	Identifier	free_args		5048661	2					
ANR	5048705	ParameterList	char * * input_line		5048661	3					
ANR	5048706	Parameter	char * * input_line	350:16:9762:9778	5048661	0	True				
ANR	5048707	ParameterType	char * *		5048661	0					
ANR	5048708	Identifier	input_line		5048661	1					
ANR	5048709	CFGEntryNode	ENTRY		5048661		True				
ANR	5048710	CFGExitNode	EXIT		5048661		True				
ANR	5048711	Symbol	* input_line		5048661						
ANR	5048712	Symbol	NULL		5048661						
ANR	5048713	Symbol	* i		5048661						
ANR	5048714	Symbol	i		5048661						
ANR	5048715	Symbol	input_line		5048661						
ANR	5048716	Function	enqueue_request_impl	364:0:9983:10498							
ANR	5048717	FunctionDef	"enqueue_request_impl (char * * input_line , SingleHandler shandler , BatchHandler bhandler , RequestCmp rhandler)"		5048716	0					
ANR	5048718	CompoundStatement		368:0:10160:10498	5048716	0					
ANR	5048719	IdentifierDeclStatement	Request * req = new Request ( ) ;	369:1:10163:10191	5048716	0	True				
ANR	5048720	IdentifierDecl	* req = new Request ( )		5048716	0					
ANR	5048721	IdentifierDeclType	Request *		5048716	0					
ANR	5048722	Identifier	req		5048716	1					
ANR	5048723	AssignmentExpression	* req = new Request ( )		5048716	2		=			
ANR	5048724	Identifier	req		5048716	0					
ANR	5048725	UnaryExpression	new Request ( )		5048716	1					
ANR	5048726	ExpressionStatement	req -> input_line = input_line	370:1:10194:10222	5048716	1	True				
ANR	5048727	AssignmentExpression	req -> input_line = input_line		5048716	0		=			
ANR	5048728	PtrMemberAccess	req -> input_line		5048716	0					
ANR	5048729	Identifier	req		5048716	0					
ANR	5048730	Identifier	input_line		5048716	1					
ANR	5048731	Identifier	input_line		5048716	1					
ANR	5048732	ExpressionStatement	req -> proxy = active_proxy	371:1:10225:10250	5048716	2	True				
ANR	5048733	AssignmentExpression	req -> proxy = active_proxy		5048716	0		=			
ANR	5048734	PtrMemberAccess	req -> proxy		5048716	0					
ANR	5048735	Identifier	req		5048716	0					
ANR	5048736	Identifier	proxy		5048716	1					
ANR	5048737	Identifier	active_proxy		5048716	1					
ANR	5048738	ExpressionStatement	req -> handler = shandler	372:1:10253:10276	5048716	3	True				
ANR	5048739	AssignmentExpression	req -> handler = shandler		5048716	0		=			
ANR	5048740	PtrMemberAccess	req -> handler		5048716	0					
ANR	5048741	Identifier	req		5048716	0					
ANR	5048742	Identifier	handler		5048716	1					
ANR	5048743	Identifier	shandler		5048716	1					
ANR	5048744	ExpressionStatement	req -> bhandler = bhandler	373:1:10279:10303	5048716	4	True				
ANR	5048745	AssignmentExpression	req -> bhandler = bhandler		5048716	0		=			
ANR	5048746	PtrMemberAccess	req -> bhandler		5048716	0					
ANR	5048747	Identifier	req		5048716	0					
ANR	5048748	Identifier	bhandler		5048716	1					
ANR	5048749	Identifier	bhandler		5048716	1					
ANR	5048750	ExpressionStatement	req -> requestcomp = rhandler	374:1:10306:10333	5048716	5	True				
ANR	5048751	AssignmentExpression	req -> requestcomp = rhandler		5048716	0		=			
ANR	5048752	PtrMemberAccess	req -> requestcomp		5048716	0					
ANR	5048753	Identifier	req		5048716	0					
ANR	5048754	Identifier	requestcomp		5048716	1					
ANR	5048755	Identifier	rhandler		5048716	1					
ANR	5048756	ExpressionStatement	pthread_mutex_lock ( & requestQueueLock )	376:1:10337:10376	5048716	6	True				
ANR	5048757	CallExpression	pthread_mutex_lock ( & requestQueueLock )		5048716	0					
ANR	5048758	Callee	pthread_mutex_lock		5048716	0					
ANR	5048759	Identifier	pthread_mutex_lock		5048716	0					
ANR	5048760	ArgumentList	& requestQueueLock		5048716	1					
ANR	5048761	Argument	& requestQueueLock		5048716	0					
ANR	5048762	UnaryOperationExpression	& requestQueueLock		5048716	0					
ANR	5048763	UnaryOperator	&		5048716	0					
ANR	5048764	Identifier	requestQueueLock		5048716	1					
ANR	5048765	ExpressionStatement	requestQueue . push_back ( req )	377:1:10379:10408	5048716	7	True				
ANR	5048766	CallExpression	requestQueue . push_back ( req )		5048716	0					
ANR	5048767	Callee	requestQueue . push_back		5048716	0					
ANR	5048768	MemberAccess	requestQueue . push_back		5048716	0					
ANR	5048769	Identifier	requestQueue		5048716	0					
ANR	5048770	Identifier	push_back		5048716	1					
ANR	5048771	ArgumentList	req		5048716	1					
ANR	5048772	Argument	req		5048716	0					
ANR	5048773	Identifier	req		5048716	0					
ANR	5048774	ExpressionStatement	pthread_cond_signal ( & requestQueueEmpty )	378:1:10411:10452	5048716	8	True				
ANR	5048775	CallExpression	pthread_cond_signal ( & requestQueueEmpty )		5048716	0					
ANR	5048776	Callee	pthread_cond_signal		5048716	0					
ANR	5048777	Identifier	pthread_cond_signal		5048716	0					
ANR	5048778	ArgumentList	& requestQueueEmpty		5048716	1					
ANR	5048779	Argument	& requestQueueEmpty		5048716	0					
ANR	5048780	UnaryOperationExpression	& requestQueueEmpty		5048716	0					
ANR	5048781	UnaryOperator	&		5048716	0					
ANR	5048782	Identifier	requestQueueEmpty		5048716	1					
ANR	5048783	ExpressionStatement	pthread_mutex_unlock ( & requestQueueLock )	379:1:10455:10496	5048716	9	True				
ANR	5048784	CallExpression	pthread_mutex_unlock ( & requestQueueLock )		5048716	0					
ANR	5048785	Callee	pthread_mutex_unlock		5048716	0					
ANR	5048786	Identifier	pthread_mutex_unlock		5048716	0					
ANR	5048787	ArgumentList	& requestQueueLock		5048716	1					
ANR	5048788	Argument	& requestQueueLock		5048716	0					
ANR	5048789	UnaryOperationExpression	& requestQueueLock		5048716	0					
ANR	5048790	UnaryOperator	&		5048716	0					
ANR	5048791	Identifier	requestQueueLock		5048716	1					
ANR	5048792	ReturnType	void		5048716	1					
ANR	5048793	Identifier	enqueue_request_impl		5048716	2					
ANR	5048794	ParameterList	"char * * input_line , SingleHandler shandler , BatchHandler bhandler , RequestCmp rhandler"		5048716	3					
ANR	5048795	Parameter	char * * input_line	364:27:10010:10026	5048716	0	True				
ANR	5048796	ParameterType	char * *		5048716	0					
ANR	5048797	Identifier	input_line		5048716	1					
ANR	5048798	Parameter	SingleHandler shandler	365:27:10056:10077	5048716	1	True				
ANR	5048799	ParameterType	SingleHandler		5048716	0					
ANR	5048800	Identifier	shandler		5048716	1					
ANR	5048801	Parameter	BatchHandler bhandler	366:27:10107:10127	5048716	2	True				
ANR	5048802	ParameterType	BatchHandler		5048716	0					
ANR	5048803	Identifier	bhandler		5048716	1					
ANR	5048804	Parameter	RequestCmp rhandler	367:9:10139:10157	5048716	3	True				
ANR	5048805	ParameterType	RequestCmp		5048716	0					
ANR	5048806	Identifier	rhandler		5048716	1					
ANR	5048807	CFGEntryNode	ENTRY		5048716		True				
ANR	5048808	CFGExitNode	EXIT		5048716		True				
ANR	5048809	Symbol	active_proxy		5048716						
ANR	5048810	Symbol	req -> proxy		5048716						
ANR	5048811	Symbol	shandler		5048716						
ANR	5048812	Symbol	* req		5048716						
ANR	5048813	Symbol	rhandler		5048716						
ANR	5048814	Symbol	input_line		5048716						
ANR	5048815	Symbol	& requestQueueEmpty		5048716						
ANR	5048816	Symbol	requestQueue		5048716						
ANR	5048817	Symbol	& requestQueueLock		5048716						
ANR	5048818	Symbol	bhandler		5048716						
ANR	5048819	Symbol	req -> input_line		5048716						
ANR	5048820	Symbol	req -> requestcomp		5048716						
ANR	5048821	Symbol	req -> bhandler		5048716						
ANR	5048822	Symbol	req		5048716						
ANR	5048823	Symbol	req -> handler		5048716						
ANR	5048824	Function	enqueue_request	382:0:10501:10630							
ANR	5048825	FunctionDef	"enqueue_request (char * * input_line , SingleHandler handler)"		5048824	0					
ANR	5048826	CompoundStatement		384:0:10572:10630	5048824	0					
ANR	5048827	ExpressionStatement	"enqueue_request_impl ( input_line , handler , NULL , NULL )"	385:1:10575:10628	5048824	0	True				
ANR	5048828	CallExpression	"enqueue_request_impl ( input_line , handler , NULL , NULL )"		5048824	0					
ANR	5048829	Callee	enqueue_request_impl		5048824	0					
ANR	5048830	Identifier	enqueue_request_impl		5048824	0					
ANR	5048831	ArgumentList	input_line		5048824	1					
ANR	5048832	Argument	input_line		5048824	0					
ANR	5048833	Identifier	input_line		5048824	0					
ANR	5048834	Argument	handler		5048824	1					
ANR	5048835	Identifier	handler		5048824	0					
ANR	5048836	Argument	NULL		5048824	2					
ANR	5048837	Identifier	NULL		5048824	0					
ANR	5048838	Argument	NULL		5048824	3					
ANR	5048839	Identifier	NULL		5048824	0					
ANR	5048840	ReturnType	void		5048824	1					
ANR	5048841	Identifier	enqueue_request		5048824	2					
ANR	5048842	ParameterList	"char * * input_line , SingleHandler handler"		5048824	3					
ANR	5048843	Parameter	char * * input_line	382:22:10523:10539	5048824	0	True				
ANR	5048844	ParameterType	char * *		5048824	0					
ANR	5048845	Identifier	input_line		5048824	1					
ANR	5048846	Parameter	SingleHandler handler	383:7:10549:10569	5048824	1	True				
ANR	5048847	ParameterType	SingleHandler		5048824	0					
ANR	5048848	Identifier	handler		5048824	1					
ANR	5048849	CFGEntryNode	ENTRY		5048824		True				
ANR	5048850	CFGExitNode	EXIT		5048824		True				
ANR	5048851	Symbol	handler		5048824						
ANR	5048852	Symbol	NULL		5048824						
ANR	5048853	Symbol	input_line		5048824						
ANR	5048854	Function	enqueue_request_batch	388:0:10633:10816							
ANR	5048855	FunctionDef	"enqueue_request_batch (char * * input_line , BatchHandler handler , RequestCmp reqcmp)"		5048854	0					
ANR	5048856	CompoundStatement		391:0:10756:10816	5048854	0					
ANR	5048857	ExpressionStatement	"enqueue_request_impl ( input_line , NULL , handler , reqcmp )"	392:1:10759:10814	5048854	0	True				
ANR	5048858	CallExpression	"enqueue_request_impl ( input_line , NULL , handler , reqcmp )"		5048854	0					
ANR	5048859	Callee	enqueue_request_impl		5048854	0					
ANR	5048860	Identifier	enqueue_request_impl		5048854	0					
ANR	5048861	ArgumentList	input_line		5048854	1					
ANR	5048862	Argument	input_line		5048854	0					
ANR	5048863	Identifier	input_line		5048854	0					
ANR	5048864	Argument	NULL		5048854	1					
ANR	5048865	Identifier	NULL		5048854	0					
ANR	5048866	Argument	handler		5048854	2					
ANR	5048867	Identifier	handler		5048854	0					
ANR	5048868	Argument	reqcmp		5048854	3					
ANR	5048869	Identifier	reqcmp		5048854	0					
ANR	5048870	ReturnType	void		5048854	1					
ANR	5048871	Identifier	enqueue_request_batch		5048854	2					
ANR	5048872	ParameterList	"char * * input_line , BatchHandler handler , RequestCmp reqcmp"		5048854	3					
ANR	5048873	Parameter	char * * input_line	388:28:10661:10677	5048854	0	True				
ANR	5048874	ParameterType	char * *		5048854	0					
ANR	5048875	Identifier	input_line		5048854	1					
ANR	5048876	Parameter	BatchHandler handler	389:28:10708:10727	5048854	1	True				
ANR	5048877	ParameterType	BatchHandler		5048854	0					
ANR	5048878	Identifier	handler		5048854	1					
ANR	5048879	Parameter	RequestCmp reqcmp	390:7:10737:10753	5048854	2	True				
ANR	5048880	ParameterType	RequestCmp		5048854	0					
ANR	5048881	Identifier	reqcmp		5048854	1					
ANR	5048882	CFGEntryNode	ENTRY		5048854		True				
ANR	5048883	CFGExitNode	EXIT		5048854		True				
ANR	5048884	Symbol	handler		5048854						
ANR	5048885	Symbol	NULL		5048854						
ANR	5048886	Symbol	reqcmp		5048854						
ANR	5048887	Symbol	input_line		5048854						
ANR	5048888	Function	enqueue_result	400:0:11092:11406							
ANR	5048889	FunctionDef	enqueue_result (string result_line)		5048888	0					
ANR	5048890	CompoundStatement		401:0:11132:11406	5048888	0					
ANR	5048891	ExpressionStatement	pthread_mutex_lock ( & resultQueueLock )	402:1:11135:11173	5048888	0	True				
ANR	5048892	CallExpression	pthread_mutex_lock ( & resultQueueLock )		5048888	0					
ANR	5048893	Callee	pthread_mutex_lock		5048888	0					
ANR	5048894	Identifier	pthread_mutex_lock		5048888	0					
ANR	5048895	ArgumentList	& resultQueueLock		5048888	1					
ANR	5048896	Argument	& resultQueueLock		5048888	0					
ANR	5048897	UnaryOperationExpression	& resultQueueLock		5048888	0					
ANR	5048898	UnaryOperator	&		5048888	0					
ANR	5048899	Identifier	resultQueueLock		5048888	1					
ANR	5048900	IfStatement	if ( async && ! results_pending )		5048888	1					
ANR	5048901	Condition	async && ! results_pending	404:5:11181:11205	5048888	0	True				
ANR	5048902	AndExpression	async && ! results_pending		5048888	0		&&			
ANR	5048903	Identifier	async		5048888	0					
ANR	5048904	UnaryOperationExpression	! results_pending		5048888	1					
ANR	5048905	UnaryOperator	!		5048888	0					
ANR	5048906	Identifier	results_pending		5048888	1					
ANR	5048907	CompoundStatement		4:32:75:75	5048888	1					
ANR	5048908	ExpressionStatement	"gahp_printf ( ""R\\n"" )"	405:2:11212:11230	5048888	0	True				
ANR	5048909	CallExpression	"gahp_printf ( ""R\\n"" )"		5048888	0					
ANR	5048910	Callee	gahp_printf		5048888	0					
ANR	5048911	Identifier	gahp_printf		5048888	0					
ANR	5048912	ArgumentList	"""R\\n"""		5048888	1					
ANR	5048913	Argument	"""R\\n"""		5048888	0					
ANR	5048914	PrimaryExpression	"""R\\n"""		5048888	0					
ANR	5048915	ExpressionStatement	results_pending = true	406:2:11234:11256	5048888	1	True				
ANR	5048916	AssignmentExpression	results_pending = true		5048888	0		=			
ANR	5048917	Identifier	results_pending		5048888	0					
ANR	5048918	Identifier	true		5048888	1					
ANR	5048919	ExpressionStatement	resultQueue . push ( result_line )	410:1:11320:11349	5048888	2	True				
ANR	5048920	CallExpression	resultQueue . push ( result_line )		5048888	0					
ANR	5048921	Callee	resultQueue . push		5048888	0					
ANR	5048922	MemberAccess	resultQueue . push		5048888	0					
ANR	5048923	Identifier	resultQueue		5048888	0					
ANR	5048924	Identifier	push		5048888	1					
ANR	5048925	ArgumentList	result_line		5048888	1					
ANR	5048926	Argument	result_line		5048888	0					
ANR	5048927	Identifier	result_line		5048888	0					
ANR	5048928	ExpressionStatement	pthread_mutex_unlock ( & resultQueueLock )	412:1:11353:11393	5048888	3	True				
ANR	5048929	CallExpression	pthread_mutex_unlock ( & resultQueueLock )		5048888	0					
ANR	5048930	Callee	pthread_mutex_unlock		5048888	0					
ANR	5048931	Identifier	pthread_mutex_unlock		5048888	0					
ANR	5048932	ArgumentList	& resultQueueLock		5048888	1					
ANR	5048933	Argument	& resultQueueLock		5048888	0					
ANR	5048934	UnaryOperationExpression	& resultQueueLock		5048888	0					
ANR	5048935	UnaryOperator	&		5048888	0					
ANR	5048936	Identifier	resultQueueLock		5048888	1					
ANR	5048937	ReturnStatement	return ;	414:1:11398:11404	5048888	4	True				
ANR	5048938	ReturnType	void		5048888	1					
ANR	5048939	Identifier	enqueue_result		5048888	2					
ANR	5048940	ParameterList	string result_line		5048888	3					
ANR	5048941	Parameter	string result_line	400:20:11112:11129	5048888	0	True				
ANR	5048942	ParameterType	string		5048888	0					
ANR	5048943	Identifier	result_line		5048888	1					
ANR	5048944	CFGEntryNode	ENTRY		5048888		True				
ANR	5048945	CFGExitNode	EXIT		5048888		True				
ANR	5048946	Symbol	async		5048888						
ANR	5048947	Symbol	resultQueue		5048888						
ANR	5048948	Symbol	true		5048888						
ANR	5048949	Symbol	& resultQueueLock		5048888						
ANR	5048950	Symbol	results_pending		5048888						
ANR	5048951	Symbol	result_line		5048888						
ANR	5048952	Function	collect_job_ids	434:0:12389:14096							
ANR	5048953	FunctionDef	"collect_job_ids (Request * * reqlist , vector < JobIdWrapper > & jv , vector < string > & reqids)"		5048952	0					
ANR	5048954	CompoundStatement		435:26:12484:14096	5048952	0					
ANR	5048955	IfStatement	if ( reqlist == NULL )		5048952	0					
ANR	5048956	Condition	reqlist == NULL	437:4:12491:12505	5048952	0	True				
ANR	5048957	EqualityExpression	reqlist == NULL		5048952	0		==			
ANR	5048958	Identifier	reqlist		5048952	0					
ANR	5048959	Identifier	NULL		5048952	1					
ANR	5048960	CompoundStatement		3:21:23:23	5048952	1					
ANR	5048961	ExpressionStatement	"internal_error ( ""collect_job_ids called with NULL pointer\\n"" )"	438:2:12512:12572	5048952	0	True				
ANR	5048962	CallExpression	"internal_error ( ""collect_job_ids called with NULL pointer\\n"" )"		5048952	0					
ANR	5048963	Callee	internal_error		5048952	0					
ANR	5048964	Identifier	internal_error		5048952	0					
ANR	5048965	ArgumentList	"""collect_job_ids called with NULL pointer\\n"""		5048952	1					
ANR	5048966	Argument	"""collect_job_ids called with NULL pointer\\n"""		5048952	0					
ANR	5048967	PrimaryExpression	"""collect_job_ids called with NULL pointer\\n"""		5048952	0					
ANR	5048968	IfStatement	if ( reqlist [ 0 ] == NULL )		5048952	1					
ANR	5048969	Condition	reqlist [ 0 ] == NULL	440:4:12581:12598	5048952	0	True				
ANR	5048970	EqualityExpression	reqlist [ 0 ] == NULL		5048952	0		==			
ANR	5048971	ArrayIndexing	reqlist [ 0 ]		5048952	0					
ANR	5048972	Identifier	reqlist		5048952	0					
ANR	5048973	PrimaryExpression	0		5048952	1					
ANR	5048974	Identifier	NULL		5048952	1					
ANR	5048975	CompoundStatement		6:24:116:116	5048952	1					
ANR	5048976	ExpressionStatement	"internal_error ( ""collect_job_ids called with empty list\\n"" )"	441:2:12605:12663	5048952	0	True				
ANR	5048977	CallExpression	"internal_error ( ""collect_job_ids called with empty list\\n"" )"		5048952	0					
ANR	5048978	Callee	internal_error		5048952	0					
ANR	5048979	Identifier	internal_error		5048952	0					
ANR	5048980	ArgumentList	"""collect_job_ids called with empty list\\n"""		5048952	1					
ANR	5048981	Argument	"""collect_job_ids called with empty list\\n"""		5048952	0					
ANR	5048982	PrimaryExpression	"""collect_job_ids called with empty list\\n"""		5048952	0					
ANR	5048983	IdentifierDeclStatement	char * service ;	444:1:12671:12684	5048952	2	True				
ANR	5048984	IdentifierDecl	* service		5048952	0					
ANR	5048985	IdentifierDeclType	char *		5048952	0					
ANR	5048986	Identifier	service		5048952	1					
ANR	5048987	ExpressionStatement	"process_string_arg ( reqlist [ 0 ] -> input_line [ 2 ] , & service )"	445:1:12687:12744	5048952	3	True				
ANR	5048988	CallExpression	"process_string_arg ( reqlist [ 0 ] -> input_line [ 2 ] , & service )"		5048952	0					
ANR	5048989	Callee	process_string_arg		5048952	0					
ANR	5048990	Identifier	process_string_arg		5048952	0					
ANR	5048991	ArgumentList	reqlist [ 0 ] -> input_line [ 2 ]		5048952	1					
ANR	5048992	Argument	reqlist [ 0 ] -> input_line [ 2 ]		5048952	0					
ANR	5048993	ArrayIndexing	reqlist [ 0 ] -> input_line [ 2 ]		5048952	0					
ANR	5048994	PtrMemberAccess	reqlist [ 0 ] -> input_line		5048952	0					
ANR	5048995	ArrayIndexing	reqlist [ 0 ]		5048952	0					
ANR	5048996	Identifier	reqlist		5048952	0					
ANR	5048997	PrimaryExpression	0		5048952	1					
ANR	5048998	Identifier	input_line		5048952	1					
ANR	5048999	PrimaryExpression	2		5048952	1					
ANR	5049000	Argument	& service		5048952	1					
ANR	5049001	UnaryOperationExpression	& service		5048952	0					
ANR	5049002	UnaryOperator	&		5048952	0					
ANR	5049003	Identifier	service		5048952	1					
ANR	5049004	IdentifierDeclStatement	string proxy = reqlist [ 0 ] -> proxy ;	446:1:12747:12779	5048952	4	True				
ANR	5049005	IdentifierDecl	proxy = reqlist [ 0 ] -> proxy		5048952	0					
ANR	5049006	IdentifierDeclType	string		5048952	0					
ANR	5049007	Identifier	proxy		5048952	1					
ANR	5049008	AssignmentExpression	proxy = reqlist [ 0 ] -> proxy		5048952	2		=			
ANR	5049009	Identifier	proxy		5048952	0					
ANR	5049010	PtrMemberAccess	reqlist [ 0 ] -> proxy		5048952	1					
ANR	5049011	ArrayIndexing	reqlist [ 0 ]		5048952	0					
ANR	5049012	Identifier	reqlist		5048952	0					
ANR	5049013	PrimaryExpression	0		5048952	1					
ANR	5049014	Identifier	proxy		5048952	1					
ANR	5049015	ForStatement	for ( size_t j = 0 ; reqlist [ j ] != NULL ; j ++ )		5048952	5					
ANR	5049016	ForInit	size_t j = 0 ;	448:5:12787:12799	5048952	0	True				
ANR	5049017	IdentifierDeclStatement	size_t j = 0 ;		5048952	0					
ANR	5049018	IdentifierDecl	j = 0		5048952	0					
ANR	5049019	IdentifierDeclType	size_t		5048952	0					
ANR	5049020	Identifier	j		5048952	1					
ANR	5049021	AssignmentExpression	j = 0		5048952	2		=			
ANR	5049022	Identifier	j		5048952	0					
ANR	5049023	PrimaryExpression	0		5048952	1					
ANR	5049024	Condition	reqlist [ j ] != NULL	448:19:12801:12818	5048952	1	True				
ANR	5049025	EqualityExpression	reqlist [ j ] != NULL		5048952	0		!=			
ANR	5049026	ArrayIndexing	reqlist [ j ]		5048952	0					
ANR	5049027	Identifier	reqlist		5048952	0					
ANR	5049028	Identifier	j		5048952	1					
ANR	5049029	Identifier	NULL		5048952	1					
ANR	5049030	PostIncDecOperationExpression	j ++	448:39:12821:12823	5048952	2	True				
ANR	5049031	Identifier	j		5048952	0					
ANR	5049032	IncDec	++		5048952	1					
ANR	5049033	CompoundStatement		48:2:1362:1393	5048952	3					
ANR	5049034	IdentifierDeclStatement	Request * req = reqlist [ j ] ;	449:2:12830:12856	5048952	0	True				
ANR	5049035	IdentifierDecl	* req = reqlist [ j ]		5048952	0					
ANR	5049036	IdentifierDeclType	Request *		5048952	0					
ANR	5049037	Identifier	req		5048952	1					
ANR	5049038	AssignmentExpression	* req = reqlist [ j ]		5048952	2		=			
ANR	5049039	Identifier	req		5048952	0					
ANR	5049040	ArrayIndexing	reqlist [ j ]		5048952	1					
ANR	5049041	Identifier	reqlist		5048952	0					
ANR	5049042	Identifier	j		5048952	1					
ANR	5049043	IdentifierDeclStatement	char * this_service ;	453:2:12957:12976	5048952	1	True				
ANR	5049044	IdentifierDecl	* this_service		5048952	0					
ANR	5049045	IdentifierDeclType	char *		5048952	0					
ANR	5049046	Identifier	this_service		5048952	1					
ANR	5049047	ExpressionStatement	"process_string_arg ( req -> input_line [ 2 ] , & this_service )"	454:2:12980:13035	5048952	2	True				
ANR	5049048	CallExpression	"process_string_arg ( req -> input_line [ 2 ] , & this_service )"		5048952	0					
ANR	5049049	Callee	process_string_arg		5048952	0					
ANR	5049050	Identifier	process_string_arg		5048952	0					
ANR	5049051	ArgumentList	req -> input_line [ 2 ]		5048952	1					
ANR	5049052	Argument	req -> input_line [ 2 ]		5048952	0					
ANR	5049053	ArrayIndexing	req -> input_line [ 2 ]		5048952	0					
ANR	5049054	PtrMemberAccess	req -> input_line		5048952	0					
ANR	5049055	Identifier	req		5048952	0					
ANR	5049056	Identifier	input_line		5048952	1					
ANR	5049057	PrimaryExpression	2		5048952	1					
ANR	5049058	Argument	& this_service		5048952	1					
ANR	5049059	UnaryOperationExpression	& this_service		5048952	0					
ANR	5049060	UnaryOperator	&		5048952	0					
ANR	5049061	Identifier	this_service		5048952	1					
ANR	5049062	IfStatement	"if ( strcmp ( this_service , service ) != 0 )"		5048952	3					
ANR	5049063	Condition	"strcmp ( this_service , service ) != 0"	455:5:13042:13075	5048952	0	True				
ANR	5049064	EqualityExpression	"strcmp ( this_service , service ) != 0"		5048952	0		!=			
ANR	5049065	CallExpression	"strcmp ( this_service , service )"		5048952	0					
ANR	5049066	Callee	strcmp		5048952	0					
ANR	5049067	Identifier	strcmp		5048952	0					
ANR	5049068	ArgumentList	this_service		5048952	1					
ANR	5049069	Argument	this_service		5048952	0					
ANR	5049070	Identifier	this_service		5048952	0					
ANR	5049071	Argument	service		5048952	1					
ANR	5049072	Identifier	service		5048952	0					
ANR	5049073	PrimaryExpression	0		5048952	1					
ANR	5049074	CompoundStatement		21:41:593:593	5048952	1					
ANR	5049075	ExpressionStatement	"internal_error ( ""Multiple services in one request"" )"	456:3:13083:13133	5048952	0	True				
ANR	5049076	CallExpression	"internal_error ( ""Multiple services in one request"" )"		5048952	0					
ANR	5049077	Callee	internal_error		5048952	0					
ANR	5049078	Identifier	internal_error		5048952	0					
ANR	5049079	ArgumentList	"""Multiple services in one request"""		5048952	1					
ANR	5049080	Argument	"""Multiple services in one request"""		5048952	0					
ANR	5049081	PrimaryExpression	"""Multiple services in one request"""		5048952	0					
ANR	5049082	IdentifierDeclStatement	string this_proxy = req -> proxy ;	461:2:13235:13265	5048952	4	True				
ANR	5049083	IdentifierDecl	this_proxy = req -> proxy		5048952	0					
ANR	5049084	IdentifierDeclType	string		5048952	0					
ANR	5049085	Identifier	this_proxy		5048952	1					
ANR	5049086	AssignmentExpression	this_proxy = req -> proxy		5048952	2		=			
ANR	5049087	Identifier	this_proxy		5048952	0					
ANR	5049088	PtrMemberAccess	req -> proxy		5048952	1					
ANR	5049089	Identifier	req		5048952	0					
ANR	5049090	Identifier	proxy		5048952	1					
ANR	5049091	ExpressionStatement		461:33:13266:13266	5048952	5	True				
ANR	5049092	IfStatement	if ( this_proxy != proxy )		5048952	6					
ANR	5049093	Condition	this_proxy != proxy	462:5:13273:13291	5048952	0	True				
ANR	5049094	EqualityExpression	this_proxy != proxy		5048952	0		!=			
ANR	5049095	Identifier	this_proxy		5048952	0					
ANR	5049096	Identifier	proxy		5048952	1					
ANR	5049097	CompoundStatement		28:26:809:809	5048952	1					
ANR	5049098	ExpressionStatement	"internal_error ( ""Multiple proxies in one request"" )"	463:3:13299:13348	5048952	0	True				
ANR	5049099	CallExpression	"internal_error ( ""Multiple proxies in one request"" )"		5048952	0					
ANR	5049100	Callee	internal_error		5048952	0					
ANR	5049101	Identifier	internal_error		5048952	0					
ANR	5049102	ArgumentList	"""Multiple proxies in one request"""		5048952	1					
ANR	5049103	Argument	"""Multiple proxies in one request"""		5048952	0					
ANR	5049104	PrimaryExpression	"""Multiple proxies in one request"""		5048952	0					
ANR	5049105	IdentifierDeclStatement	char * reqid = NULL ;	467:2:13402:13421	5048952	7	True				
ANR	5049106	IdentifierDecl	* reqid = NULL		5048952	0					
ANR	5049107	IdentifierDeclType	char *		5048952	0					
ANR	5049108	Identifier	reqid		5048952	1					
ANR	5049109	AssignmentExpression	* reqid = NULL		5048952	2		=			
ANR	5049110	Identifier	NULL		5048952	0					
ANR	5049111	Identifier	NULL		5048952	1					
ANR	5049112	ExpressionStatement	"process_string_arg ( req -> input_line [ 1 ] , & reqid )"	468:2:13425:13473	5048952	8	True				
ANR	5049113	CallExpression	"process_string_arg ( req -> input_line [ 1 ] , & reqid )"		5048952	0					
ANR	5049114	Callee	process_string_arg		5048952	0					
ANR	5049115	Identifier	process_string_arg		5048952	0					
ANR	5049116	ArgumentList	req -> input_line [ 1 ]		5048952	1					
ANR	5049117	Argument	req -> input_line [ 1 ]		5048952	0					
ANR	5049118	ArrayIndexing	req -> input_line [ 1 ]		5048952	0					
ANR	5049119	PtrMemberAccess	req -> input_line		5048952	0					
ANR	5049120	Identifier	req		5048952	0					
ANR	5049121	Identifier	input_line		5048952	1					
ANR	5049122	PrimaryExpression	1		5048952	1					
ANR	5049123	Argument	& reqid		5048952	1					
ANR	5049124	UnaryOperationExpression	& reqid		5048952	0					
ANR	5049125	UnaryOperator	&		5048952	0					
ANR	5049126	Identifier	reqid		5048952	1					
ANR	5049127	IfStatement	if ( reqid == NULL )		5048952	9					
ANR	5049128	Condition	reqid == NULL	469:5:13480:13492	5048952	0	True				
ANR	5049129	EqualityExpression	reqid == NULL		5048952	0		==			
ANR	5049130	Identifier	reqid		5048952	0					
ANR	5049131	Identifier	NULL		5048952	1					
ANR	5049132	CompoundStatement		35:20:1010:1010	5048952	1					
ANR	5049133	ExpressionStatement	"internal_error ( ""request lacks reqid"" )"	470:3:13500:13537	5048952	0	True				
ANR	5049134	CallExpression	"internal_error ( ""request lacks reqid"" )"		5048952	0					
ANR	5049135	Callee	internal_error		5048952	0					
ANR	5049136	Identifier	internal_error		5048952	0					
ANR	5049137	ArgumentList	"""request lacks reqid"""		5048952	1					
ANR	5049138	Argument	"""request lacks reqid"""		5048952	0					
ANR	5049139	PrimaryExpression	"""request lacks reqid"""		5048952	0					
ANR	5049140	ExpressionStatement	reqids . push_back ( reqid )	472:2:13545:13568	5048952	10	True				
ANR	5049141	CallExpression	reqids . push_back ( reqid )		5048952	0					
ANR	5049142	Callee	reqids . push_back		5048952	0					
ANR	5049143	MemberAccess	reqids . push_back		5048952	0					
ANR	5049144	Identifier	reqids		5048952	0					
ANR	5049145	Identifier	push_back		5048952	1					
ANR	5049146	ArgumentList	reqid		5048952	1					
ANR	5049147	Argument	reqid		5048952	0					
ANR	5049148	Identifier	reqid		5048952	0					
ANR	5049149	IdentifierDeclStatement	char * jobnum_str ;	475:2:13616:13633	5048952	11	True				
ANR	5049150	IdentifierDecl	* jobnum_str		5048952	0					
ANR	5049151	IdentifierDeclType	char *		5048952	0					
ANR	5049152	Identifier	jobnum_str		5048952	1					
ANR	5049153	ExpressionStatement	"process_string_arg ( req -> input_line [ 3 ] , & jobnum_str )"	476:2:13637:13690	5048952	12	True				
ANR	5049154	CallExpression	"process_string_arg ( req -> input_line [ 3 ] , & jobnum_str )"		5048952	0					
ANR	5049155	Callee	process_string_arg		5048952	0					
ANR	5049156	Identifier	process_string_arg		5048952	0					
ANR	5049157	ArgumentList	req -> input_line [ 3 ]		5048952	1					
ANR	5049158	Argument	req -> input_line [ 3 ]		5048952	0					
ANR	5049159	ArrayIndexing	req -> input_line [ 3 ]		5048952	0					
ANR	5049160	PtrMemberAccess	req -> input_line		5048952	0					
ANR	5049161	Identifier	req		5048952	0					
ANR	5049162	Identifier	input_line		5048952	1					
ANR	5049163	PrimaryExpression	3		5048952	1					
ANR	5049164	Argument	& jobnum_str		5048952	1					
ANR	5049165	UnaryOperationExpression	& jobnum_str		5048952	0					
ANR	5049166	UnaryOperator	&		5048952	0					
ANR	5049167	Identifier	jobnum_str		5048952	1					
ANR	5049168	IfStatement	if ( jobnum_str == NULL )		5048952	13					
ANR	5049169	Condition	jobnum_str == NULL	477:6:13698:13715	5048952	0	True				
ANR	5049170	EqualityExpression	jobnum_str == NULL		5048952	0		==			
ANR	5049171	Identifier	jobnum_str		5048952	0					
ANR	5049172	Identifier	NULL		5048952	1					
ANR	5049173	CompoundStatement		43:26:1233:1233	5048952	1					
ANR	5049174	ThrowStatement	"throw runtime_error ( ""handling of all jobs (NULL jobnum) not supported"" ) ;"	478:3:13723:13794	5048952	0	True				
ANR	5049175	CallExpression	"runtime_error ( ""handling of all jobs (NULL jobnum) not supported"" )"		5048952	0					
ANR	5049176	Callee	runtime_error		5048952	0					
ANR	5049177	Identifier	runtime_error		5048952	0					
ANR	5049178	ArgumentList	"""handling of all jobs (NULL jobnum) not supported"""		5048952	1					
ANR	5049179	Argument	"""handling of all jobs (NULL jobnum) not supported"""		5048952	0					
ANR	5049180	PrimaryExpression	"""handling of all jobs (NULL jobnum) not supported"""		5048952	0					
ANR	5049181	IdentifierDeclStatement	int jobnum = atoi ( jobnum_str ) ;	482:2:13847:13878	5048952	14	True				
ANR	5049182	IdentifierDecl	jobnum = atoi ( jobnum_str )		5048952	0					
ANR	5049183	IdentifierDeclType	int		5048952	0					
ANR	5049184	Identifier	jobnum		5048952	1					
ANR	5049185	AssignmentExpression	jobnum = atoi ( jobnum_str )		5048952	2		=			
ANR	5049186	Identifier	jobnum		5048952	0					
ANR	5049187	CallExpression	atoi ( jobnum_str )		5048952	1					
ANR	5049188	Callee	atoi		5048952	0					
ANR	5049189	Identifier	atoi		5048952	0					
ANR	5049190	ArgumentList	jobnum_str		5048952	1					
ANR	5049191	Argument	jobnum_str		5048952	0					
ANR	5049192	Identifier	jobnum_str		5048952	0					
ANR	5049193	ForStatement	for ( int i = 0 ; i < jobnum ; i ++ )		5048952	15					
ANR	5049194	ForInit	int i = 0 ;	483:8:13888:13897	5048952	0	True				
ANR	5049195	IdentifierDeclStatement	int i = 0 ;		5048952	0					
ANR	5049196	IdentifierDecl	i = 0		5048952	0					
ANR	5049197	IdentifierDeclType	int		5048952	0					
ANR	5049198	Identifier	i		5048952	1					
ANR	5049199	AssignmentExpression	i = 0		5048952	2		=			
ANR	5049200	Identifier	i		5048952	0					
ANR	5049201	PrimaryExpression	0		5048952	1					
ANR	5049202	Condition	i < jobnum	483:19:13899:13908	5048952	1	True				
ANR	5049203	RelationalExpression	i < jobnum		5048952	0		<			
ANR	5049204	Identifier	i		5048952	0					
ANR	5049205	Identifier	jobnum		5048952	1					
ANR	5049206	PostIncDecOperationExpression	i ++	483:31:13911:13913	5048952	2	True				
ANR	5049207	Identifier	i		5048952	0					
ANR	5049208	IncDec	++		5048952	1					
ANR	5049209	CompoundStatement		50:3:1436:1448	5048952	3					
ANR	5049210	IdentifierDeclStatement	char * jobid ;	484:3:13921:13933	5048952	0	True				
ANR	5049211	IdentifierDecl	* jobid		5048952	0					
ANR	5049212	IdentifierDeclType	char *		5048952	0					
ANR	5049213	Identifier	jobid		5048952	1					
ANR	5049214	ExpressionStatement	"process_string_arg ( req -> input_line [ i + 4 ] , & jobid )"	485:3:13938:13988	5048952	1	True				
ANR	5049215	CallExpression	"process_string_arg ( req -> input_line [ i + 4 ] , & jobid )"		5048952	0					
ANR	5049216	Callee	process_string_arg		5048952	0					
ANR	5049217	Identifier	process_string_arg		5048952	0					
ANR	5049218	ArgumentList	req -> input_line [ i + 4 ]		5048952	1					
ANR	5049219	Argument	req -> input_line [ i + 4 ]		5048952	0					
ANR	5049220	ArrayIndexing	req -> input_line [ i + 4 ]		5048952	0					
ANR	5049221	PtrMemberAccess	req -> input_line		5048952	0					
ANR	5049222	Identifier	req		5048952	0					
ANR	5049223	Identifier	input_line		5048952	1					
ANR	5049224	AdditiveExpression	i + 4		5048952	1		+			
ANR	5049225	Identifier	i		5048952	0					
ANR	5049226	PrimaryExpression	4		5048952	1					
ANR	5049227	Argument	& jobid		5048952	1					
ANR	5049228	UnaryOperationExpression	& jobid		5048952	0					
ANR	5049229	UnaryOperator	&		5048952	0					
ANR	5049230	Identifier	jobid		5048952	1					
ANR	5049231	Statement	jv	486:3:13993:13994	5048952	2	True				
ANR	5049232	Statement	.	486:5:13995:13995	5048952	3	True				
ANR	5049233	Statement	push_back	486:6:13996:14004	5048952	4	True				
ANR	5049234	Statement	(	486:15:14005:14005	5048952	5	True				
ANR	5049235	Statement	JobIdWrapper	486:16:14006:14017	5048952	6	True				
ANR	5049236	Statement	(	486:28:14018:14018	5048952	7	True				
ANR	5049237	Statement	jobid	486:29:14019:14023	5048952	8	True				
ANR	5049238	Statement	","	486:34:14024:14024	5048952	9	True				
ANR	5049239	Statement	service	487:11:14037:14043	5048952	10	True				
ANR	5049240	Statement	","	487:18:14044:14044	5048952	11	True				
ANR	5049241	Statement	vector	488:11:14057:14062	5048952	12	True				
ANR	5049242	Statement	<	488:17:14063:14063	5048952	13	True				
ANR	5049243	Statement	JobPropertyWrapper	488:18:14064:14081	5048952	14	True				
ANR	5049244	Statement	>	488:36:14082:14082	5048952	15	True				
ANR	5049245	Statement	(	488:37:14083:14083	5048952	16	True				
ANR	5049246	Statement	)	488:38:14084:14084	5048952	17	True				
ANR	5049247	Statement	)	488:39:14085:14085	5048952	18	True				
ANR	5049248	Statement	)	488:40:14086:14086	5048952	19	True				
ANR	5049249	ExpressionStatement		488:41:14087:14087	5048952	20	True				
ANR	5049250	ReturnType	void		5048952	1					
ANR	5049251	Identifier	collect_job_ids		5048952	2					
ANR	5049252	ParameterList	"Request * * reqlist , vector < JobIdWrapper > & jv , vector < string > & reqids"		5048952	3					
ANR	5049253	Parameter	Request * * reqlist	434:21:12410:12427	5048952	0	True				
ANR	5049254	ParameterType	Request * *		5048952	0					
ANR	5049255	Identifier	reqlist		5048952	1					
ANR	5049256	Parameter	vector < JobIdWrapper > & jv	434:41:12430:12454	5048952	1	True				
ANR	5049257	ParameterType	vector < JobIdWrapper > &		5048952	0					
ANR	5049258	Identifier	jv		5048952	1					
ANR	5049259	Parameter	vector < string > & reqids	435:1:12459:12481	5048952	2	True				
ANR	5049260	ParameterType	vector < string > &		5048952	0					
ANR	5049261	Identifier	reqids		5048952	1					
ANR	5049262	CFGEntryNode	ENTRY		5048952		True				
ANR	5049263	CFGExitNode	EXIT		5048952		True				
ANR	5049264	CFGExceptionNode	EXCEPTION		5048952		True				
ANR	5049265	Symbol	& reqid		5048952						
ANR	5049266	Symbol	jobnum		5048952						
ANR	5049267	Symbol	* req		5048952						
ANR	5049268	Symbol	* * * reqlist		5048952						
ANR	5049269	Symbol	jv		5048952						
ANR	5049270	Symbol	this_service		5048952						
ANR	5049271	Symbol	* * reqlist		5048952						
ANR	5049272	Symbol	reqid		5048952						
ANR	5049273	Symbol	& jobid		5048952						
ANR	5049274	Symbol	jobid		5048952						
ANR	5049275	Symbol	jobnum_str		5048952						
ANR	5049276	Symbol	this_proxy		5048952						
ANR	5049277	Symbol	reqids		5048952						
ANR	5049278	Symbol	reqlist [ 0 ] -> proxy		5048952						
ANR	5049279	Symbol	req -> input_line		5048952						
ANR	5049280	Symbol	* req -> input_line		5048952						
ANR	5049281	Symbol	* reqlist [ 0 ] -> input_line		5048952						
ANR	5049282	Symbol	req		5048952						
ANR	5049283	Symbol	strcmp		5048952						
ANR	5049284	Symbol	req -> proxy		5048952						
ANR	5049285	Symbol	atoi		5048952						
ANR	5049286	Symbol	NULL		5048952						
ANR	5049287	Symbol	reqlist [ 0 ] -> input_line		5048952						
ANR	5049288	Symbol	i		5048952						
ANR	5049289	Symbol	& service		5048952						
ANR	5049290	Symbol	j		5048952						
ANR	5049291	Symbol	& this_service		5048952						
ANR	5049292	Symbol	& jobnum_str		5048952						
ANR	5049293	Symbol	* reqlist		5048952						
ANR	5049294	Symbol	proxy		5048952						
ANR	5049295	Symbol	* * req		5048952						
ANR	5049296	Symbol	* i		5048952						
ANR	5049297	Symbol	* j		5048952						
ANR	5049298	Symbol	reqlist		5048952						
ANR	5049299	Symbol	service		5048952						
ANR	5049300	Function	cmp_request_register	499:0:14447:14796							
ANR	5049301	FunctionDef	"cmp_request_register (const vector < Request * > & list , const Request * b)"		5049300	0					
ANR	5049302	CompoundStatement		499:76:14523:14796	5049300	0					
ANR	5049303	IdentifierDeclStatement	const Request * a = list . front ( ) ;	503:1:14617:14648	5049300	0	True				
ANR	5049304	IdentifierDecl	* a = list . front ( )		5049300	0					
ANR	5049305	IdentifierDeclType	const Request *		5049300	0					
ANR	5049306	Identifier	a		5049300	1					
ANR	5049307	AssignmentExpression	* a = list . front ( )		5049300	2		=			
ANR	5049308	Identifier	a		5049300	0					
ANR	5049309	CallExpression	list . front ( )		5049300	1					
ANR	5049310	Callee	list . front		5049300	0					
ANR	5049311	MemberAccess	list . front		5049300	0					
ANR	5049312	Identifier	list		5049300	0					
ANR	5049313	Identifier	front		5049300	1					
ANR	5049314	ArgumentList			5049300	1					
ANR	5049315	IfStatement	if ( list . size ( ) >= 10 )		5049300	1					
ANR	5049316	Condition	list . size ( ) >= 10	504:6:14656:14672	5049300	0	True				
ANR	5049317	RelationalExpression	list . size ( ) >= 10		5049300	0		>=			
ANR	5049318	CallExpression	list . size ( )		5049300	0					
ANR	5049319	Callee	list . size		5049300	0					
ANR	5049320	MemberAccess	list . size		5049300	0					
ANR	5049321	Identifier	list		5049300	0					
ANR	5049322	Identifier	size		5049300	1					
ANR	5049323	ArgumentList			5049300	1					
ANR	5049324	PrimaryExpression	10		5049300	1					
ANR	5049325	CompoundStatement		6:26:152:152	5049300	1					
ANR	5049326	ReturnStatement	return false ;	505:2:14680:14692	5049300	0	True				
ANR	5049327	Identifier	false		5049300	0					
ANR	5049328	IfStatement	"if ( strcmp ( a -> input_line [ 2 ] , b -> input_line [ 2 ] ) )"		5049300	2					
ANR	5049329	Condition	"strcmp ( a -> input_line [ 2 ] , b -> input_line [ 2 ] )"	507:6:14703:14746	5049300	0	True				
ANR	5049330	CallExpression	"strcmp ( a -> input_line [ 2 ] , b -> input_line [ 2 ] )"		5049300	0					
ANR	5049331	Callee	strcmp		5049300	0					
ANR	5049332	Identifier	strcmp		5049300	0					
ANR	5049333	ArgumentList	a -> input_line [ 2 ]		5049300	1					
ANR	5049334	Argument	a -> input_line [ 2 ]		5049300	0					
ANR	5049335	ArrayIndexing	a -> input_line [ 2 ]		5049300	0					
ANR	5049336	PtrMemberAccess	a -> input_line		5049300	0					
ANR	5049337	Identifier	a		5049300	0					
ANR	5049338	Identifier	input_line		5049300	1					
ANR	5049339	PrimaryExpression	2		5049300	1					
ANR	5049340	Argument	b -> input_line [ 2 ]		5049300	1					
ANR	5049341	ArrayIndexing	b -> input_line [ 2 ]		5049300	0					
ANR	5049342	PtrMemberAccess	b -> input_line		5049300	0					
ANR	5049343	Identifier	b		5049300	0					
ANR	5049344	Identifier	input_line		5049300	1					
ANR	5049345	PrimaryExpression	2		5049300	1					
ANR	5049346	CompoundStatement		9:53:226:226	5049300	1					
ANR	5049347	ReturnStatement	return false ;	508:2:14754:14766	5049300	0	True				
ANR	5049348	Identifier	false		5049300	0					
ANR	5049349	ElseStatement	else		5049300	0					
ANR	5049350	CompoundStatement		11:8:252:252	5049300	0					
ANR	5049351	ReturnStatement	return true ;	510:2:14780:14791	5049300	0	True				
ANR	5049352	Identifier	true		5049300	0					
ANR	5049353	ReturnType	bool		5049300	1					
ANR	5049354	Identifier	cmp_request_register		5049300	2					
ANR	5049355	ParameterList	"const vector < Request * > & list , const Request * b"		5049300	3					
ANR	5049356	Parameter	const vector < Request * > & list	499:26:14473:14501	5049300	0	True				
ANR	5049357	ParameterType	const vector < Request * > &		5049300	0					
ANR	5049358	Identifier	list		5049300	1					
ANR	5049359	Parameter	const Request * b	499:57:14504:14520	5049300	1	True				
ANR	5049360	ParameterType	const Request *		5049300	0					
ANR	5049361	Identifier	b		5049300	1					
ANR	5049362	CFGEntryNode	ENTRY		5049300		True				
ANR	5049363	CFGExitNode	EXIT		5049300		True				
ANR	5049364	Symbol	strcmp		5049300						
ANR	5049365	Symbol	a		5049300						
ANR	5049366	Symbol	b		5049300						
ANR	5049367	Symbol	list . front		5049300						
ANR	5049368	Symbol	b -> input_line		5049300						
ANR	5049369	Symbol	false		5049300						
ANR	5049370	Symbol	* * b		5049300						
ANR	5049371	Symbol	* * a		5049300						
ANR	5049372	Symbol	* a		5049300						
ANR	5049373	Symbol	list		5049300						
ANR	5049374	Symbol	* b		5049300						
ANR	5049375	Symbol	list . size		5049300						
ANR	5049376	Symbol	true		5049300						
ANR	5049377	Symbol	a -> input_line		5049300						
ANR	5049378	Symbol	* a -> input_line		5049300						
ANR	5049379	Symbol	* b -> input_line		5049300						
ANR	5049380	Function	cmp_request_single	521:0:15200:15487							
ANR	5049381	FunctionDef	"cmp_request_single (const vector < Request * > & list , const Request * b)"		5049380	0					
ANR	5049382	CompoundStatement		521:76:15276:15487	5049380	0					
ANR	5049383	IdentifierDeclStatement	const Request * a = list . front ( ) ;	522:1:15279:15310	5049380	0	True				
ANR	5049384	IdentifierDecl	* a = list . front ( )		5049380	0					
ANR	5049385	IdentifierDeclType	const Request *		5049380	0					
ANR	5049386	Identifier	a		5049380	1					
ANR	5049387	AssignmentExpression	* a = list . front ( )		5049380	2		=			
ANR	5049388	Identifier	a		5049380	0					
ANR	5049389	CallExpression	list . front ( )		5049380	1					
ANR	5049390	Callee	list . front		5049380	0					
ANR	5049391	MemberAccess	list . front		5049380	0					
ANR	5049392	Identifier	list		5049380	0					
ANR	5049393	Identifier	front		5049380	1					
ANR	5049394	ArgumentList			5049380	1					
ANR	5049395	IfStatement	"if ( strcmp ( a -> input_line [ 3 ] , ""1"" ) || strcmp ( b -> input_line [ 3 ] , ""1"" ) || strcmp ( a -> input_line [ 2 ] , b -> input_line [ 2 ] ) )"		5049380	1					
ANR	5049396	Condition	"strcmp ( a -> input_line [ 3 ] , ""1"" ) || strcmp ( b -> input_line [ 3 ] , ""1"" ) || strcmp ( a -> input_line [ 2 ] , b -> input_line [ 2 ] )"	523:6:15318:15437	5049380	0	True				
ANR	5049397	OrExpression	"strcmp ( a -> input_line [ 3 ] , ""1"" ) || strcmp ( b -> input_line [ 3 ] , ""1"" ) || strcmp ( a -> input_line [ 2 ] , b -> input_line [ 2 ] )"		5049380	0		||			
ANR	5049398	CallExpression	"strcmp ( a -> input_line [ 3 ] , ""1"" )"		5049380	0					
ANR	5049399	Callee	strcmp		5049380	0					
ANR	5049400	Identifier	strcmp		5049380	0					
ANR	5049401	ArgumentList	a -> input_line [ 3 ]		5049380	1					
ANR	5049402	Argument	a -> input_line [ 3 ]		5049380	0					
ANR	5049403	ArrayIndexing	a -> input_line [ 3 ]		5049380	0					
ANR	5049404	PtrMemberAccess	a -> input_line		5049380	0					
ANR	5049405	Identifier	a		5049380	0					
ANR	5049406	Identifier	input_line		5049380	1					
ANR	5049407	PrimaryExpression	3		5049380	1					
ANR	5049408	Argument	"""1"""		5049380	1					
ANR	5049409	PrimaryExpression	"""1"""		5049380	0					
ANR	5049410	OrExpression	"strcmp ( b -> input_line [ 3 ] , ""1"" ) || strcmp ( a -> input_line [ 2 ] , b -> input_line [ 2 ] )"		5049380	1		||			
ANR	5049411	CallExpression	"strcmp ( b -> input_line [ 3 ] , ""1"" )"		5049380	0					
ANR	5049412	Callee	strcmp		5049380	0					
ANR	5049413	Identifier	strcmp		5049380	0					
ANR	5049414	ArgumentList	b -> input_line [ 3 ]		5049380	1					
ANR	5049415	Argument	b -> input_line [ 3 ]		5049380	0					
ANR	5049416	ArrayIndexing	b -> input_line [ 3 ]		5049380	0					
ANR	5049417	PtrMemberAccess	b -> input_line		5049380	0					
ANR	5049418	Identifier	b		5049380	0					
ANR	5049419	Identifier	input_line		5049380	1					
ANR	5049420	PrimaryExpression	3		5049380	1					
ANR	5049421	Argument	"""1"""		5049380	1					
ANR	5049422	PrimaryExpression	"""1"""		5049380	0					
ANR	5049423	CallExpression	"strcmp ( a -> input_line [ 2 ] , b -> input_line [ 2 ] )"		5049380	1					
ANR	5049424	Callee	strcmp		5049380	0					
ANR	5049425	Identifier	strcmp		5049380	0					
ANR	5049426	ArgumentList	a -> input_line [ 2 ]		5049380	1					
ANR	5049427	Argument	a -> input_line [ 2 ]		5049380	0					
ANR	5049428	ArrayIndexing	a -> input_line [ 2 ]		5049380	0					
ANR	5049429	PtrMemberAccess	a -> input_line		5049380	0					
ANR	5049430	Identifier	a		5049380	0					
ANR	5049431	Identifier	input_line		5049380	1					
ANR	5049432	PrimaryExpression	2		5049380	1					
ANR	5049433	Argument	b -> input_line [ 2 ]		5049380	1					
ANR	5049434	ArrayIndexing	b -> input_line [ 2 ]		5049380	0					
ANR	5049435	PtrMemberAccess	b -> input_line		5049380	0					
ANR	5049436	Identifier	b		5049380	0					
ANR	5049437	Identifier	input_line		5049380	1					
ANR	5049438	PrimaryExpression	2		5049380	1					
ANR	5049439	CompoundStatement		5:50:164:164	5049380	1					
ANR	5049440	ReturnStatement	return false ;	526:2:15445:15457	5049380	0	True				
ANR	5049441	Identifier	false		5049380	0					
ANR	5049442	ElseStatement	else		5049380	0					
ANR	5049443	CompoundStatement		7:8:190:190	5049380	0					
ANR	5049444	ReturnStatement	return true ;	528:2:15471:15482	5049380	0	True				
ANR	5049445	Identifier	true		5049380	0					
ANR	5049446	ReturnType	bool		5049380	1					
ANR	5049447	Identifier	cmp_request_single		5049380	2					
ANR	5049448	ParameterList	"const vector < Request * > & list , const Request * b"		5049380	3					
ANR	5049449	Parameter	const vector < Request * > & list	521:25:15225:15253	5049380	0	True				
ANR	5049450	ParameterType	const vector < Request * > &		5049380	0					
ANR	5049451	Identifier	list		5049380	1					
ANR	5049452	Parameter	const Request * b	521:56:15256:15272	5049380	1	True				
ANR	5049453	ParameterType	const Request *		5049380	0					
ANR	5049454	Identifier	b		5049380	1					
ANR	5049455	CFGEntryNode	ENTRY		5049380		True				
ANR	5049456	CFGExitNode	EXIT		5049380		True				
ANR	5049457	Symbol	strcmp		5049380						
ANR	5049458	Symbol	a		5049380						
ANR	5049459	Symbol	b		5049380						
ANR	5049460	Symbol	list . front		5049380						
ANR	5049461	Symbol	b -> input_line		5049380						
ANR	5049462	Symbol	false		5049380						
ANR	5049463	Symbol	* * b		5049380						
ANR	5049464	Symbol	* * a		5049380						
ANR	5049465	Symbol	* a		5049380						
ANR	5049466	Symbol	list		5049380						
ANR	5049467	Symbol	* b		5049380						
ANR	5049468	Symbol	true		5049380						
ANR	5049469	Symbol	a -> input_line		5049380						
ANR	5049470	Symbol	* b -> input_line		5049380						
ANR	5049471	Symbol	* a -> input_line		5049380						
ANR	5049472	Function	handle_initialize_from_file	537:0:15769:16471							
ANR	5049473	FunctionDef	handle_initialize_from_file (char * * input_line)		5049472	0					
ANR	5049474	CompoundStatement		538:0:15820:16471	5049472	0					
ANR	5049475	IdentifierDeclStatement	char * cert ;	539:1:15823:15833	5049472	0	True				
ANR	5049476	IdentifierDecl	* cert		5049472	0					
ANR	5049477	IdentifierDeclType	char *		5049472	0					
ANR	5049478	Identifier	cert		5049472	1					
ANR	5049479	IdentifierDeclStatement	AbsCreamProxy * cp = NULL ;	540:1:15836:15860	5049472	1	True				
ANR	5049480	IdentifierDecl	* cp = NULL		5049472	0					
ANR	5049481	IdentifierDeclType	AbsCreamProxy *		5049472	0					
ANR	5049482	Identifier	cp		5049472	1					
ANR	5049483	AssignmentExpression	* cp = NULL		5049472	2		=			
ANR	5049484	Identifier	NULL		5049472	0					
ANR	5049485	Identifier	NULL		5049472	1					
ANR	5049486	IfStatement	if ( count_args ( input_line ) != 2 )		5049472	2					
ANR	5049487	Condition	count_args ( input_line ) != 2	542:6:15870:15897	5049472	0	True				
ANR	5049488	EqualityExpression	count_args ( input_line ) != 2		5049472	0		!=			
ANR	5049489	CallExpression	count_args ( input_line )		5049472	0					
ANR	5049490	Callee	count_args		5049472	0					
ANR	5049491	Identifier	count_args		5049472	0					
ANR	5049492	ArgumentList	input_line		5049472	1					
ANR	5049493	Argument	input_line		5049472	0					
ANR	5049494	Identifier	input_line		5049472	0					
ANR	5049495	PrimaryExpression	2		5049472	1					
ANR	5049496	CompoundStatement		5:37:80:80	5049472	1					
ANR	5049497	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	543:2:15905:15926	5049472	0	True				
ANR	5049498	CallExpression	HANDLE_SYNTAX_ERROR ( )		5049472	0					
ANR	5049499	Callee	HANDLE_SYNTAX_ERROR		5049472	0					
ANR	5049500	Identifier	HANDLE_SYNTAX_ERROR		5049472	0					
ANR	5049501	ArgumentList			5049472	1					
ANR	5049502	ExpressionStatement	"process_string_arg ( input_line [ 1 ] , & cert )"	546:1:15933:15975	5049472	3	True				
ANR	5049503	CallExpression	"process_string_arg ( input_line [ 1 ] , & cert )"		5049472	0					
ANR	5049504	Callee	process_string_arg		5049472	0					
ANR	5049505	Identifier	process_string_arg		5049472	0					
ANR	5049506	ArgumentList	input_line [ 1 ]		5049472	1					
ANR	5049507	Argument	input_line [ 1 ]		5049472	0					
ANR	5049508	ArrayIndexing	input_line [ 1 ]		5049472	0					
ANR	5049509	Identifier	input_line		5049472	0					
ANR	5049510	PrimaryExpression	1		5049472	1					
ANR	5049511	Argument	& cert		5049472	1					
ANR	5049512	UnaryOperationExpression	& cert		5049472	0					
ANR	5049513	UnaryOperator	&		5049472	0					
ANR	5049514	Identifier	cert		5049472	1					
ANR	5049515	ExpressionStatement	active_proxy = cert	548:1:15979:15998	5049472	4	True				
ANR	5049516	AssignmentExpression	active_proxy = cert		5049472	0		=			
ANR	5049517	Identifier	active_proxy		5049472	0					
ANR	5049518	Identifier	cert		5049472	1					
ANR	5049519	TryStatement	try		5049472	5					
ANR	5049520	CompoundStatement		13:5:185:185	5049472	0					
ANR	5049521	ExpressionStatement	"cp = CreamProxyFactory :: make_CreamProxyDelegate ( ""XXX"" , DEFAULT_TIMEOUT )"		5049472	0					
ANR	5049522	AssignmentExpression	"cp = CreamProxyFactory :: make_CreamProxyDelegate ( ""XXX"" , DEFAULT_TIMEOUT )"		5049472	0		=			
ANR	5049523	Identifier	cp		5049472	0					
ANR	5049524	CallExpression	"CreamProxyFactory :: make_CreamProxyDelegate ( ""XXX"" , DEFAULT_TIMEOUT )"		5049472	1					
ANR	5049525	Callee	CreamProxyFactory :: make_CreamProxyDelegate		5049472	0					
ANR	5049526	Identifier	CreamProxyFactory :: make_CreamProxyDelegate		5049472	0					
ANR	5049527	ArgumentList	"""XXX"""		5049472	1					
ANR	5049528	Argument	"""XXX"""		5049472	0					
ANR	5049529	PrimaryExpression	"""XXX"""		5049472	0					
ANR	5049530	Argument	DEFAULT_TIMEOUT		5049472	1					
ANR	5049531	Identifier	DEFAULT_TIMEOUT		5049472	0					
ANR	5049532	ExpressionStatement	check_for_factory_error ( cp )		5049472	1					
ANR	5049533	CallExpression	check_for_factory_error ( cp )		5049472	0					
ANR	5049534	Callee	check_for_factory_error		5049472	0					
ANR	5049535	Identifier	check_for_factory_error		5049472	0					
ANR	5049536	ArgumentList	cp		5049472	1					
ANR	5049537	Argument	cp		5049472	0					
ANR	5049538	Identifier	cp		5049472	0					
ANR	5049539	ExpressionStatement	cp -> setCredential ( cert )		5049472	2					
ANR	5049540	CallExpression	cp -> setCredential ( cert )		5049472	0					
ANR	5049541	Callee	cp -> setCredential		5049472	0					
ANR	5049542	PtrMemberAccess	cp -> setCredential		5049472	0					
ANR	5049543	Identifier	cp		5049472	0					
ANR	5049544	Identifier	setCredential		5049472	1					
ANR	5049545	ArgumentList	cert		5049472	1					
ANR	5049546	Argument	cert		5049472	0					
ANR	5049547	Identifier	cert		5049472	0					
ANR	5049548	Statement	delete		5049472	3					
ANR	5049549	ExpressionStatement	cp		5049472	4					
ANR	5049550	Identifier	cp		5049472	0					
ANR	5049551	CatchList			5049472	1					
ANR	5049552	CatchStatement	catch ( std :: exception & ex )		5049472	0					
ANR	5049553	Identifier	ex		5049472	0					
ANR	5049554	CompoundStatement		20:29:483:483	5049472	1					
ANR	5049555	Statement	delete	558:2:16308:16313	5049472	0	True				
ANR	5049556	ExpressionStatement	cp	558:9:16315:16317	5049472	1	True				
ANR	5049557	Identifier	cp		5049472	0					
ANR	5049558	ExpressionStatement	"gahp_printf ( ""E\\n"" )"	559:2:16321:16339	5049472	2	True				
ANR	5049559	CallExpression	"gahp_printf ( ""E\\n"" )"		5049472	0					
ANR	5049560	Callee	gahp_printf		5049472	0					
ANR	5049561	Identifier	gahp_printf		5049472	0					
ANR	5049562	ArgumentList	"""E\\n"""		5049472	1					
ANR	5049563	Argument	"""E\\n"""		5049472	0					
ANR	5049564	PrimaryExpression	"""E\\n"""		5049472	0					
ANR	5049565	ExpressionStatement	free_args ( input_line )	560:2:16343:16364	5049472	3	True				
ANR	5049566	CallExpression	free_args ( input_line )		5049472	0					
ANR	5049567	Callee	free_args		5049472	0					
ANR	5049568	Identifier	free_args		5049472	0					
ANR	5049569	ArgumentList	input_line		5049472	1					
ANR	5049570	Argument	input_line		5049472	0					
ANR	5049571	Identifier	input_line		5049472	0					
ANR	5049572	ReturnStatement	return 1 ;	562:2:16371:16379	5049472	4	True				
ANR	5049573	PrimaryExpression	1		5049472	0					
ANR	5049574	ExpressionStatement	initialized = true	565:1:16386:16404	5049472	6	True				
ANR	5049575	AssignmentExpression	initialized = true		5049472	0		=			
ANR	5049576	Identifier	initialized		5049472	0					
ANR	5049577	Identifier	true		5049472	1					
ANR	5049578	ExpressionStatement	"gahp_printf ( ""S\\n"" )"	566:1:16412:16430	5049472	7	True				
ANR	5049579	CallExpression	"gahp_printf ( ""S\\n"" )"		5049472	0					
ANR	5049580	Callee	gahp_printf		5049472	0					
ANR	5049581	Identifier	gahp_printf		5049472	0					
ANR	5049582	ArgumentList	"""S\\n"""		5049472	1					
ANR	5049583	Argument	"""S\\n"""		5049472	0					
ANR	5049584	PrimaryExpression	"""S\\n"""		5049472	0					
ANR	5049585	ExpressionStatement	free_args ( input_line )	568:1:16435:16456	5049472	8	True				
ANR	5049586	CallExpression	free_args ( input_line )		5049472	0					
ANR	5049587	Callee	free_args		5049472	0					
ANR	5049588	Identifier	free_args		5049472	0					
ANR	5049589	ArgumentList	input_line		5049472	1					
ANR	5049590	Argument	input_line		5049472	0					
ANR	5049591	Identifier	input_line		5049472	0					
ANR	5049592	ReturnStatement	return 0 ;	570:1:16461:16469	5049472	9	True				
ANR	5049593	PrimaryExpression	0		5049472	0					
ANR	5049594	ReturnType	int		5049472	1					
ANR	5049595	Identifier	handle_initialize_from_file		5049472	2					
ANR	5049596	ParameterList	char * * input_line		5049472	3					
ANR	5049597	Parameter	char * * input_line	537:32:15801:15817	5049472	0	True				
ANR	5049598	ParameterType	char * *		5049472	0					
ANR	5049599	Identifier	input_line		5049472	1					
ANR	5049600	CFGEntryNode	ENTRY		5049472		True				
ANR	5049601	CFGExitNode	EXIT		5049472		True				
ANR	5049602	CFGErrorNode	ERROR		5049472		True				
ANR	5049603	Symbol	active_proxy		5049472						
ANR	5049604	Symbol	* input_line		5049472						
ANR	5049605	Symbol	NULL		5049472						
ANR	5049606	Symbol	& cert		5049472						
ANR	5049607	Symbol	true		5049472						
ANR	5049608	Symbol	count_args		5049472						
ANR	5049609	Symbol	initialized		5049472						
ANR	5049610	Symbol	input_line		5049472						
ANR	5049611	Symbol	cert		5049472						
ANR	5049612	Symbol	cp		5049472						
ANR	5049613	Function	handle_cream_delegate	577:0:16693:16900							
ANR	5049614	FunctionDef	handle_cream_delegate (char * * input_line)		5049613	0					
ANR	5049615	CompoundStatement		578:0:16740:16900	5049613	0					
ANR	5049616	IfStatement	if ( count_args ( input_line ) != 4 )		5049613	0					
ANR	5049617	Condition	count_args ( input_line ) != 4	579:6:16748:16776	5049613	0	True				
ANR	5049618	EqualityExpression	count_args ( input_line ) != 4		5049613	0		!=			
ANR	5049619	CallExpression	count_args ( input_line )		5049613	0					
ANR	5049620	Callee	count_args		5049613	0					
ANR	5049621	Identifier	count_args		5049613	0					
ANR	5049622	ArgumentList	input_line		5049613	1					
ANR	5049623	Argument	input_line		5049613	0					
ANR	5049624	Identifier	input_line		5049613	0					
ANR	5049625	PrimaryExpression	4		5049613	1					
ANR	5049626	CompoundStatement		2:38:39:39	5049613	1					
ANR	5049627	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	580:2:16784:16805	5049613	0	True				
ANR	5049628	CallExpression	HANDLE_SYNTAX_ERROR ( )		5049613	0					
ANR	5049629	Callee	HANDLE_SYNTAX_ERROR		5049613	0					
ANR	5049630	Identifier	HANDLE_SYNTAX_ERROR		5049613	0					
ANR	5049631	ArgumentList			5049613	1					
ANR	5049632	ExpressionStatement	"enqueue_request ( input_line , thread_cream_delegate )"	583:1:16812:16864	5049613	1	True				
ANR	5049633	CallExpression	"enqueue_request ( input_line , thread_cream_delegate )"		5049613	0					
ANR	5049634	Callee	enqueue_request		5049613	0					
ANR	5049635	Identifier	enqueue_request		5049613	0					
ANR	5049636	ArgumentList	input_line		5049613	1					
ANR	5049637	Argument	input_line		5049613	0					
ANR	5049638	Identifier	input_line		5049613	0					
ANR	5049639	Argument	thread_cream_delegate		5049613	1					
ANR	5049640	Identifier	thread_cream_delegate		5049613	0					
ANR	5049641	ExpressionStatement	"gahp_printf ( ""S\\n"" )"	585:1:16868:16886	5049613	2	True				
ANR	5049642	CallExpression	"gahp_printf ( ""S\\n"" )"		5049613	0					
ANR	5049643	Callee	gahp_printf		5049613	0					
ANR	5049644	Identifier	gahp_printf		5049613	0					
ANR	5049645	ArgumentList	"""S\\n"""		5049613	1					
ANR	5049646	Argument	"""S\\n"""		5049613	0					
ANR	5049647	PrimaryExpression	"""S\\n"""		5049613	0					
ANR	5049648	ReturnStatement	return 0 ;	587:1:16890:16898	5049613	3	True				
ANR	5049649	PrimaryExpression	0		5049613	0					
ANR	5049650	ReturnType	int		5049613	1					
ANR	5049651	Identifier	handle_cream_delegate		5049613	2					
ANR	5049652	ParameterList	char * * input_line		5049613	3					
ANR	5049653	Parameter	char * * input_line	577:27:16720:16736	5049613	0	True				
ANR	5049654	ParameterType	char * *		5049613	0					
ANR	5049655	Identifier	input_line		5049613	1					
ANR	5049656	CFGEntryNode	ENTRY		5049613		True				
ANR	5049657	CFGExitNode	EXIT		5049613		True				
ANR	5049658	Symbol	count_args		5049613						
ANR	5049659	Symbol	input_line		5049613						
ANR	5049660	Symbol	thread_cream_delegate		5049613						
ANR	5049661	Function	thread_cream_delegate	590:0:16903:17703							
ANR	5049662	FunctionDef	thread_cream_delegate (Request * req)		5049661	0					
ANR	5049663	CompoundStatement		591:0:16945:17703	5049661	0					
ANR	5049664	IdentifierDeclStatement	"char * reqid , * delgservice , * delgid ;"	592:1:16948:16982	5049661	0	True				
ANR	5049665	IdentifierDecl	* reqid		5049661	0					
ANR	5049666	IdentifierDeclType	char *		5049661	0					
ANR	5049667	Identifier	reqid		5049661	1					
ANR	5049668	IdentifierDecl	* delgservice		5049661	1					
ANR	5049669	IdentifierDeclType	char *		5049661	0					
ANR	5049670	Identifier	delgservice		5049661	1					
ANR	5049671	IdentifierDecl	* delgid		5049661	2					
ANR	5049672	IdentifierDeclType	char *		5049661	0					
ANR	5049673	Identifier	delgid		5049661	1					
ANR	5049674	IdentifierDeclStatement	string result_line ;	593:1:16985:17003	5049661	1	True				
ANR	5049675	IdentifierDecl	result_line		5049661	0					
ANR	5049676	IdentifierDeclType	string		5049661	0					
ANR	5049677	Identifier	result_line		5049661	1					
ANR	5049678	IdentifierDeclStatement	AbsCreamProxy * cp = NULL ;	594:1:17006:17030	5049661	2	True				
ANR	5049679	IdentifierDecl	* cp = NULL		5049661	0					
ANR	5049680	IdentifierDeclType	AbsCreamProxy *		5049661	0					
ANR	5049681	Identifier	cp		5049661	1					
ANR	5049682	AssignmentExpression	* cp = NULL		5049661	2		=			
ANR	5049683	Identifier	NULL		5049661	0					
ANR	5049684	Identifier	NULL		5049661	1					
ANR	5049685	ExpressionStatement	"process_string_arg ( req -> input_line [ 1 ] , & reqid )"	596:1:17035:17083	5049661	3	True				
ANR	5049686	CallExpression	"process_string_arg ( req -> input_line [ 1 ] , & reqid )"		5049661	0					
ANR	5049687	Callee	process_string_arg		5049661	0					
ANR	5049688	Identifier	process_string_arg		5049661	0					
ANR	5049689	ArgumentList	req -> input_line [ 1 ]		5049661	1					
ANR	5049690	Argument	req -> input_line [ 1 ]		5049661	0					
ANR	5049691	ArrayIndexing	req -> input_line [ 1 ]		5049661	0					
ANR	5049692	PtrMemberAccess	req -> input_line		5049661	0					
ANR	5049693	Identifier	req		5049661	0					
ANR	5049694	Identifier	input_line		5049661	1					
ANR	5049695	PrimaryExpression	1		5049661	1					
ANR	5049696	Argument	& reqid		5049661	1					
ANR	5049697	UnaryOperationExpression	& reqid		5049661	0					
ANR	5049698	UnaryOperator	&		5049661	0					
ANR	5049699	Identifier	reqid		5049661	1					
ANR	5049700	ExpressionStatement	"process_string_arg ( req -> input_line [ 2 ] , & delgid )"	597:1:17086:17135	5049661	4	True				
ANR	5049701	CallExpression	"process_string_arg ( req -> input_line [ 2 ] , & delgid )"		5049661	0					
ANR	5049702	Callee	process_string_arg		5049661	0					
ANR	5049703	Identifier	process_string_arg		5049661	0					
ANR	5049704	ArgumentList	req -> input_line [ 2 ]		5049661	1					
ANR	5049705	Argument	req -> input_line [ 2 ]		5049661	0					
ANR	5049706	ArrayIndexing	req -> input_line [ 2 ]		5049661	0					
ANR	5049707	PtrMemberAccess	req -> input_line		5049661	0					
ANR	5049708	Identifier	req		5049661	0					
ANR	5049709	Identifier	input_line		5049661	1					
ANR	5049710	PrimaryExpression	2		5049661	1					
ANR	5049711	Argument	& delgid		5049661	1					
ANR	5049712	UnaryOperationExpression	& delgid		5049661	0					
ANR	5049713	UnaryOperator	&		5049661	0					
ANR	5049714	Identifier	delgid		5049661	1					
ANR	5049715	ExpressionStatement	"process_string_arg ( req -> input_line [ 3 ] , & delgservice )"	598:1:17138:17191	5049661	5	True				
ANR	5049716	CallExpression	"process_string_arg ( req -> input_line [ 3 ] , & delgservice )"		5049661	0					
ANR	5049717	Callee	process_string_arg		5049661	0					
ANR	5049718	Identifier	process_string_arg		5049661	0					
ANR	5049719	ArgumentList	req -> input_line [ 3 ]		5049661	1					
ANR	5049720	Argument	req -> input_line [ 3 ]		5049661	0					
ANR	5049721	ArrayIndexing	req -> input_line [ 3 ]		5049661	0					
ANR	5049722	PtrMemberAccess	req -> input_line		5049661	0					
ANR	5049723	Identifier	req		5049661	0					
ANR	5049724	Identifier	input_line		5049661	1					
ANR	5049725	PrimaryExpression	3		5049661	1					
ANR	5049726	Argument	& delgservice		5049661	1					
ANR	5049727	UnaryOperationExpression	& delgservice		5049661	0					
ANR	5049728	UnaryOperator	&		5049661	0					
ANR	5049729	Identifier	delgservice		5049661	1					
ANR	5049730	TryStatement	try		5049661	6					
ANR	5049731	CompoundStatement		10:5:253:253	5049661	0					
ANR	5049732	ExpressionStatement	"cp = CreamProxyFactory :: make_CreamProxyDelegate ( delgid , DEFAULT_TIMEOUT )"		5049661	0					
ANR	5049733	AssignmentExpression	"cp = CreamProxyFactory :: make_CreamProxyDelegate ( delgid , DEFAULT_TIMEOUT )"		5049661	0		=			
ANR	5049734	Identifier	cp		5049661	0					
ANR	5049735	CallExpression	"CreamProxyFactory :: make_CreamProxyDelegate ( delgid , DEFAULT_TIMEOUT )"		5049661	1					
ANR	5049736	Callee	CreamProxyFactory :: make_CreamProxyDelegate		5049661	0					
ANR	5049737	Identifier	CreamProxyFactory :: make_CreamProxyDelegate		5049661	0					
ANR	5049738	ArgumentList	delgid		5049661	1					
ANR	5049739	Argument	delgid		5049661	0					
ANR	5049740	Identifier	delgid		5049661	0					
ANR	5049741	Argument	DEFAULT_TIMEOUT		5049661	1					
ANR	5049742	Identifier	DEFAULT_TIMEOUT		5049661	0					
ANR	5049743	ExpressionStatement	check_for_factory_error ( cp )		5049661	1					
ANR	5049744	CallExpression	check_for_factory_error ( cp )		5049661	0					
ANR	5049745	Callee	check_for_factory_error		5049661	0					
ANR	5049746	Identifier	check_for_factory_error		5049661	0					
ANR	5049747	ArgumentList	cp		5049661	1					
ANR	5049748	Argument	cp		5049661	0					
ANR	5049749	Identifier	cp		5049661	0					
ANR	5049750	ExpressionStatement	cp -> setCredential ( req -> proxy . c_str ( ) )		5049661	2					
ANR	5049751	CallExpression	cp -> setCredential ( req -> proxy . c_str ( ) )		5049661	0					
ANR	5049752	Callee	cp -> setCredential		5049661	0					
ANR	5049753	PtrMemberAccess	cp -> setCredential		5049661	0					
ANR	5049754	Identifier	cp		5049661	0					
ANR	5049755	Identifier	setCredential		5049661	1					
ANR	5049756	ArgumentList	req -> proxy . c_str ( )		5049661	1					
ANR	5049757	Argument	req -> proxy . c_str ( )		5049661	0					
ANR	5049758	CallExpression	req -> proxy . c_str ( )		5049661	0					
ANR	5049759	Callee	req -> proxy . c_str		5049661	0					
ANR	5049760	MemberAccess	req -> proxy . c_str		5049661	0					
ANR	5049761	PtrMemberAccess	req -> proxy		5049661	0					
ANR	5049762	Identifier	req		5049661	0					
ANR	5049763	Identifier	proxy		5049661	1					
ANR	5049764	Identifier	c_str		5049661	1					
ANR	5049765	ArgumentList			5049661	1					
ANR	5049766	ExpressionStatement	cp -> execute ( delgservice )		5049661	3					
ANR	5049767	CallExpression	cp -> execute ( delgservice )		5049661	0					
ANR	5049768	Callee	cp -> execute		5049661	0					
ANR	5049769	PtrMemberAccess	cp -> execute		5049661	0					
ANR	5049770	Identifier	cp		5049661	0					
ANR	5049771	Identifier	execute		5049661	1					
ANR	5049772	ArgumentList	delgservice		5049661	1					
ANR	5049773	Argument	delgservice		5049661	0					
ANR	5049774	Identifier	delgservice		5049661	0					
ANR	5049775	Statement	delete		5049661	4					
ANR	5049776	ExpressionStatement	cp		5049661	5					
ANR	5049777	Identifier	cp		5049661	0					
ANR	5049778	CatchList			5049661	1					
ANR	5049779	CatchStatement	catch ( std :: exception & ex )		5049661	0					
ANR	5049780	Identifier	ex		5049661	0					
ANR	5049781	CompoundStatement		20:2:505:541	5049661	1					
ANR	5049782	Statement	delete	609:2:17438:17443	5049661	0	True				
ANR	5049783	ExpressionStatement	cp	609:9:17445:17447	5049661	1	True				
ANR	5049784	Identifier	cp		5049661	0					
ANR	5049785	IdentifierDeclStatement	char * msg = escape_spaces ( ex . what ( ) ) ;	610:2:17451:17487	5049661	2	True				
ANR	5049786	IdentifierDecl	* msg = escape_spaces ( ex . what ( ) )		5049661	0					
ANR	5049787	IdentifierDeclType	char *		5049661	0					
ANR	5049788	Identifier	msg		5049661	1					
ANR	5049789	AssignmentExpression	* msg = escape_spaces ( ex . what ( ) )		5049661	2		=			
ANR	5049790	Identifier	msg		5049661	0					
ANR	5049791	CallExpression	escape_spaces ( ex . what ( ) )		5049661	1					
ANR	5049792	Callee	escape_spaces		5049661	0					
ANR	5049793	Identifier	escape_spaces		5049661	0					
ANR	5049794	ArgumentList	ex . what ( )		5049661	1					
ANR	5049795	Argument	ex . what ( )		5049661	0					
ANR	5049796	CallExpression	ex . what ( )		5049661	0					
ANR	5049797	Callee	ex . what		5049661	0					
ANR	5049798	MemberAccess	ex . what		5049661	0					
ANR	5049799	Identifier	ex		5049661	0					
ANR	5049800	Identifier	what		5049661	1					
ANR	5049801	ArgumentList			5049661	1					
ANR	5049802	ExpressionStatement	"result_line = ( string ) reqid + "" CREAM_Delegate\\\\ Error:\\\\ "" + msg"	611:2:17491:17556	5049661	3	True				
ANR	5049803	AssignmentExpression	"result_line = ( string ) reqid + "" CREAM_Delegate\\\\ Error:\\\\ "" + msg"		5049661	0		=			
ANR	5049804	Identifier	result_line		5049661	0					
ANR	5049805	AdditiveExpression	"( string ) reqid + "" CREAM_Delegate\\\\ Error:\\\\ "" + msg"		5049661	1		+			
ANR	5049806	CastExpression	( string ) reqid		5049661	0					
ANR	5049807	CastTarget	string		5049661	0					
ANR	5049808	Identifier	reqid		5049661	1					
ANR	5049809	AdditiveExpression	""" CREAM_Delegate\\\\ Error:\\\\ "" + msg"		5049661	1		+			
ANR	5049810	PrimaryExpression	""" CREAM_Delegate\\\\ Error:\\\\ """		5049661	0					
ANR	5049811	Identifier	msg		5049661	1					
ANR	5049812	ExpressionStatement	enqueue_result ( result_line )	612:2:17560:17587	5049661	4	True				
ANR	5049813	CallExpression	enqueue_result ( result_line )		5049661	0					
ANR	5049814	Callee	enqueue_result		5049661	0					
ANR	5049815	Identifier	enqueue_result		5049661	0					
ANR	5049816	ArgumentList	result_line		5049661	1					
ANR	5049817	Argument	result_line		5049661	0					
ANR	5049818	Identifier	result_line		5049661	0					
ANR	5049819	ExpressionStatement	free ( msg )	613:2:17591:17600	5049661	5	True				
ANR	5049820	CallExpression	free ( msg )		5049661	0					
ANR	5049821	Callee	free		5049661	0					
ANR	5049822	Identifier	free		5049661	0					
ANR	5049823	ArgumentList	msg		5049661	1					
ANR	5049824	Argument	msg		5049661	0					
ANR	5049825	Identifier	msg		5049661	0					
ANR	5049826	ReturnStatement	return 1 ;	615:2:17605:17613	5049661	6	True				
ANR	5049827	PrimaryExpression	1		5049661	0					
ANR	5049828	ExpressionStatement	"result_line = ( string ) reqid + "" NULL"""	618:1:17621:17658	5049661	7	True				
ANR	5049829	AssignmentExpression	"result_line = ( string ) reqid + "" NULL"""		5049661	0		=			
ANR	5049830	Identifier	result_line		5049661	0					
ANR	5049831	AdditiveExpression	"( string ) reqid + "" NULL"""		5049661	1		+			
ANR	5049832	CastExpression	( string ) reqid		5049661	0					
ANR	5049833	CastTarget	string		5049661	0					
ANR	5049834	Identifier	reqid		5049661	1					
ANR	5049835	PrimaryExpression	""" NULL"""		5049661	1					
ANR	5049836	ExpressionStatement	enqueue_result ( result_line )	619:1:17661:17688	5049661	8	True				
ANR	5049837	CallExpression	enqueue_result ( result_line )		5049661	0					
ANR	5049838	Callee	enqueue_result		5049661	0					
ANR	5049839	Identifier	enqueue_result		5049661	0					
ANR	5049840	ArgumentList	result_line		5049661	1					
ANR	5049841	Argument	result_line		5049661	0					
ANR	5049842	Identifier	result_line		5049661	0					
ANR	5049843	ReturnStatement	return 0 ;	621:1:17693:17701	5049661	9	True				
ANR	5049844	PrimaryExpression	0		5049661	0					
ANR	5049845	ReturnType	int		5049661	1					
ANR	5049846	Identifier	thread_cream_delegate		5049661	2					
ANR	5049847	ParameterList	Request * req		5049661	3					
ANR	5049848	Parameter	Request * req	590:27:16930:16941	5049661	0	True				
ANR	5049849	ParameterType	Request *		5049661	0					
ANR	5049850	Identifier	req		5049661	1					
ANR	5049851	CFGEntryNode	ENTRY		5049661		True				
ANR	5049852	CFGExitNode	EXIT		5049661		True				
ANR	5049853	CFGErrorNode	ERROR		5049661		True				
ANR	5049854	Symbol	& reqid		5049661						
ANR	5049855	Symbol	NULL		5049661						
ANR	5049856	Symbol	* req		5049661						
ANR	5049857	Symbol	& delgid		5049661						
ANR	5049858	Symbol	cp		5049661						
ANR	5049859	Symbol	& delgservice		5049661						
ANR	5049860	Symbol	reqid		5049661						
ANR	5049861	Symbol	result_line		5049661						
ANR	5049862	Symbol	delgid		5049661						
ANR	5049863	Symbol	delgservice		5049661						
ANR	5049864	Symbol	* * req		5049661						
ANR	5049865	Symbol	req -> input_line		5049661						
ANR	5049866	Symbol	* req -> input_line		5049661						
ANR	5049867	Symbol	req		5049661						
ANR	5049868	Function	handle_cream_job_register	629:0:17921:18167							
ANR	5049869	FunctionDef	handle_cream_job_register (char * * input_line)		5049868	0					
ANR	5049870	CompoundStatement		630:0:17972:18167	5049868	0					
ANR	5049871	IfStatement	if ( count_args ( input_line ) != 6 )		5049868	0					
ANR	5049872	Condition	count_args ( input_line ) != 6	631:6:17980:18008	5049868	0	True				
ANR	5049873	EqualityExpression	count_args ( input_line ) != 6		5049868	0		!=			
ANR	5049874	CallExpression	count_args ( input_line )		5049868	0					
ANR	5049875	Callee	count_args		5049868	0					
ANR	5049876	Identifier	count_args		5049868	0					
ANR	5049877	ArgumentList	input_line		5049868	1					
ANR	5049878	Argument	input_line		5049868	0					
ANR	5049879	Identifier	input_line		5049868	0					
ANR	5049880	PrimaryExpression	6		5049868	1					
ANR	5049881	CompoundStatement		2:38:39:39	5049868	1					
ANR	5049882	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	632:2:18016:18037	5049868	0	True				
ANR	5049883	CallExpression	HANDLE_SYNTAX_ERROR ( )		5049868	0					
ANR	5049884	Callee	HANDLE_SYNTAX_ERROR		5049868	0					
ANR	5049885	Identifier	HANDLE_SYNTAX_ERROR		5049868	0					
ANR	5049886	ArgumentList			5049868	1					
ANR	5049887	ExpressionStatement	"enqueue_request_batch ( input_line , thread_cream_job_register , cmp_request_register )"	635:1:18045:18129	5049868	1	True				
ANR	5049888	CallExpression	"enqueue_request_batch ( input_line , thread_cream_job_register , cmp_request_register )"		5049868	0					
ANR	5049889	Callee	enqueue_request_batch		5049868	0					
ANR	5049890	Identifier	enqueue_request_batch		5049868	0					
ANR	5049891	ArgumentList	input_line		5049868	1					
ANR	5049892	Argument	input_line		5049868	0					
ANR	5049893	Identifier	input_line		5049868	0					
ANR	5049894	Argument	thread_cream_job_register		5049868	1					
ANR	5049895	Identifier	thread_cream_job_register		5049868	0					
ANR	5049896	Argument	cmp_request_register		5049868	2					
ANR	5049897	Identifier	cmp_request_register		5049868	0					
ANR	5049898	ExpressionStatement	"gahp_printf ( ""S\\n"" )"	637:1:18133:18151	5049868	2	True				
ANR	5049899	CallExpression	"gahp_printf ( ""S\\n"" )"		5049868	0					
ANR	5049900	Callee	gahp_printf		5049868	0					
ANR	5049901	Identifier	gahp_printf		5049868	0					
ANR	5049902	ArgumentList	"""S\\n"""		5049868	1					
ANR	5049903	Argument	"""S\\n"""		5049868	0					
ANR	5049904	PrimaryExpression	"""S\\n"""		5049868	0					
ANR	5049905	ReturnStatement	return 0 ;	639:1:18157:18165	5049868	3	True				
ANR	5049906	PrimaryExpression	0		5049868	0					
ANR	5049907	ReturnType	int		5049868	1					
ANR	5049908	Identifier	handle_cream_job_register		5049868	2					
ANR	5049909	ParameterList	char * * input_line		5049868	3					
ANR	5049910	Parameter	char * * input_line	629:31:17952:17968	5049868	0	True				
ANR	5049911	ParameterType	char * *		5049868	0					
ANR	5049912	Identifier	input_line		5049868	1					
ANR	5049913	CFGEntryNode	ENTRY		5049868		True				
ANR	5049914	CFGExitNode	EXIT		5049868		True				
ANR	5049915	Symbol	count_args		5049868						
ANR	5049916	Symbol	input_line		5049868						
ANR	5049917	Symbol	cmp_request_register		5049868						
ANR	5049918	Symbol	thread_cream_job_register		5049868						
ANR	5049919	Function	thread_cream_job_register	642:0:18170:20844							
ANR	5049920	FunctionDef	thread_cream_job_register (Request * * reqlist)		5049919	0					
ANR	5049921	CompoundStatement		643:0:18221:20844	5049919	0					
ANR	5049922	IfStatement	if ( reqlist == NULL )		5049919	0					
ANR	5049923	Condition	reqlist == NULL	648:6:18400:18414	5049919	0	True				
ANR	5049924	EqualityExpression	reqlist == NULL		5049919	0		==			
ANR	5049925	Identifier	reqlist		5049919	0					
ANR	5049926	Identifier	NULL		5049919	1					
ANR	5049927	CompoundStatement		6:24:196:196	5049919	1					
ANR	5049928	ExpressionStatement	"internal_error ( ""thread_cream_job_register called with NULL pointer\\n"" )"	649:2:18422:18494	5049919	0	True				
ANR	5049929	CallExpression	"internal_error ( ""thread_cream_job_register called with NULL pointer\\n"" )"		5049919	0					
ANR	5049930	Callee	internal_error		5049919	0					
ANR	5049931	Identifier	internal_error		5049919	0					
ANR	5049932	ArgumentList	"""thread_cream_job_register called with NULL pointer\\n"""		5049919	1					
ANR	5049933	Argument	"""thread_cream_job_register called with NULL pointer\\n"""		5049919	0					
ANR	5049934	PrimaryExpression	"""thread_cream_job_register called with NULL pointer\\n"""		5049919	0					
ANR	5049935	IfStatement	if ( reqlist [ 0 ] == NULL )		5049919	1					
ANR	5049936	Condition	reqlist [ 0 ] == NULL	651:6:18505:18522	5049919	0	True				
ANR	5049937	EqualityExpression	reqlist [ 0 ] == NULL		5049919	0		==			
ANR	5049938	ArrayIndexing	reqlist [ 0 ]		5049919	0					
ANR	5049939	Identifier	reqlist		5049919	0					
ANR	5049940	PrimaryExpression	0		5049919	1					
ANR	5049941	Identifier	NULL		5049919	1					
ANR	5049942	CompoundStatement		9:27:304:304	5049919	1					
ANR	5049943	ExpressionStatement	"internal_error ( ""thread_cream_job_status called with empty list\\n"" )"	652:2:18530:18598	5049919	0	True				
ANR	5049944	CallExpression	"internal_error ( ""thread_cream_job_status called with empty list\\n"" )"		5049919	0					
ANR	5049945	Callee	internal_error		5049919	0					
ANR	5049946	Identifier	internal_error		5049919	0					
ANR	5049947	ArgumentList	"""thread_cream_job_status called with empty list\\n"""		5049919	1					
ANR	5049948	Argument	"""thread_cream_job_status called with empty list\\n"""		5049919	0					
ANR	5049949	PrimaryExpression	"""thread_cream_job_status called with empty list\\n"""		5049919	0					
ANR	5049950	IdentifierDeclStatement	vector < string > reqids ;	655:1:18605:18626	5049919	2	True				
ANR	5049951	IdentifierDecl	reqids		5049919	0					
ANR	5049952	IdentifierDeclType	vector < string >		5049919	0					
ANR	5049953	Identifier	reqids		5049919	1					
ANR	5049954	IdentifierDeclStatement	string result_line ;	657:1:18630:18648	5049919	3	True				
ANR	5049955	IdentifierDecl	result_line		5049919	0					
ANR	5049956	IdentifierDeclType	string		5049919	0					
ANR	5049957	Identifier	result_line		5049919	1					
ANR	5049958	IdentifierDeclStatement	string proxy = reqlist [ 0 ] -> proxy ;	658:1:18651:18683	5049919	4	True				
ANR	5049959	IdentifierDecl	proxy = reqlist [ 0 ] -> proxy		5049919	0					
ANR	5049960	IdentifierDeclType	string		5049919	0					
ANR	5049961	Identifier	proxy		5049919	1					
ANR	5049962	AssignmentExpression	proxy = reqlist [ 0 ] -> proxy		5049919	2		=			
ANR	5049963	Identifier	proxy		5049919	0					
ANR	5049964	PtrMemberAccess	reqlist [ 0 ] -> proxy		5049919	1					
ANR	5049965	ArrayIndexing	reqlist [ 0 ]		5049919	0					
ANR	5049966	Identifier	reqlist		5049919	0					
ANR	5049967	PrimaryExpression	0		5049919	1					
ANR	5049968	Identifier	proxy		5049919	1					
ANR	5049969	IdentifierDeclStatement	char * service = reqlist [ 0 ] -> input_line [ 2 ] ;	659:1:18686:18727	5049919	5	True				
ANR	5049970	IdentifierDecl	* service = reqlist [ 0 ] -> input_line [ 2 ]		5049919	0					
ANR	5049971	IdentifierDeclType	char *		5049919	0					
ANR	5049972	Identifier	service		5049919	1					
ANR	5049973	AssignmentExpression	* service = reqlist [ 0 ] -> input_line [ 2 ]		5049919	2		=			
ANR	5049974	Identifier	service		5049919	0					
ANR	5049975	ArrayIndexing	reqlist [ 0 ] -> input_line [ 2 ]		5049919	1					
ANR	5049976	PtrMemberAccess	reqlist [ 0 ] -> input_line		5049919	0					
ANR	5049977	ArrayIndexing	reqlist [ 0 ]		5049919	0					
ANR	5049978	Identifier	reqlist		5049919	0					
ANR	5049979	PrimaryExpression	0		5049919	1					
ANR	5049980	Identifier	input_line		5049919	1					
ANR	5049981	PrimaryExpression	2		5049919	1					
ANR	5049982	IdentifierDeclStatement	AbsCreamProxy * cp = NULL ;	660:1:18730:18754	5049919	6	True				
ANR	5049983	IdentifierDecl	* cp = NULL		5049919	0					
ANR	5049984	IdentifierDeclType	AbsCreamProxy *		5049919	0					
ANR	5049985	Identifier	cp		5049919	1					
ANR	5049986	AssignmentExpression	* cp = NULL		5049919	2		=			
ANR	5049987	Identifier	NULL		5049919	0					
ANR	5049988	Identifier	NULL		5049919	1					
ANR	5049989	IdentifierDeclStatement	AbsCreamProxy :: RegisterArrayResult resp ;	661:1:18757:18796	5049919	7	True				
ANR	5049990	IdentifierDecl	resp		5049919	0					
ANR	5049991	IdentifierDeclType	AbsCreamProxy :: RegisterArrayResult		5049919	0					
ANR	5049992	Identifier	resp		5049919	1					
ANR	5049993	IdentifierDeclStatement	AbsCreamProxy :: RegisterArrayRequest reqs ;	662:1:18799:18839	5049919	8	True				
ANR	5049994	IdentifierDecl	reqs		5049919	0					
ANR	5049995	IdentifierDeclType	AbsCreamProxy :: RegisterArrayRequest		5049919	0					
ANR	5049996	Identifier	reqs		5049919	1					
ANR	5049997	TryStatement	try		5049919	9					
ANR	5049998	CompoundStatement		22:5:625:625	5049919	0					
ANR	5049999	ForStatement	for ( int i = 0 ; reqlist [ i ] != NULL ; i ++ )		5049919	0					
ANR	5050000	ForInit	int i = 0 ;		5049919	0					
ANR	5050001	IdentifierDeclStatement	int i = 0 ;		5049919	0					
ANR	5050002	IdentifierDecl	i = 0		5049919	0					
ANR	5050003	IdentifierDeclType	int		5049919	0					
ANR	5050004	Identifier	i		5049919	1					
ANR	5050005	AssignmentExpression	i = 0		5049919	2		=			
ANR	5050006	Identifier	i		5049919	0					
ANR	5050007	PrimaryExpression	0		5049919	1					
ANR	5050008	Condition	reqlist [ i ] != NULL		5049919	1					
ANR	5050009	EqualityExpression	reqlist [ i ] != NULL		5049919	0		!=			
ANR	5050010	ArrayIndexing	reqlist [ i ]		5049919	0					
ANR	5050011	Identifier	reqlist		5049919	0					
ANR	5050012	Identifier	i		5049919	1					
ANR	5050013	Identifier	NULL		5049919	1					
ANR	5050014	PostIncDecOperationExpression	i ++		5049919	2					
ANR	5050015	Identifier	i		5049919	0					
ANR	5050016	IncDec	++		5049919	1					
ANR	5050017	CompoundStatement		23:45:672:672	5049919	3					
ANR	5050018	ExpressionStatement	reqids . push_back ( reqlist [ i ] -> input_line [ 1 ] )		5049919	0					
ANR	5050019	CallExpression	reqids . push_back ( reqlist [ i ] -> input_line [ 1 ] )		5049919	0					
ANR	5050020	Callee	reqids . push_back		5049919	0					
ANR	5050021	MemberAccess	reqids . push_back		5049919	0					
ANR	5050022	Identifier	reqids		5049919	0					
ANR	5050023	Identifier	push_back		5049919	1					
ANR	5050024	ArgumentList	reqlist [ i ] -> input_line [ 1 ]		5049919	1					
ANR	5050025	Argument	reqlist [ i ] -> input_line [ 1 ]		5049919	0					
ANR	5050026	ArrayIndexing	reqlist [ i ] -> input_line [ 1 ]		5049919	0					
ANR	5050027	PtrMemberAccess	reqlist [ i ] -> input_line		5049919	0					
ANR	5050028	ArrayIndexing	reqlist [ i ]		5049919	0					
ANR	5050029	Identifier	reqlist		5049919	0					
ANR	5050030	Identifier	i		5049919	1					
ANR	5050031	Identifier	input_line		5049919	1					
ANR	5050032	PrimaryExpression	1		5049919	1					
ANR	5050033	ExpressionStatement	"reqs . push_back ( new JobDescriptionWrapper ( reqlist [ i ] -> input_line [ 4 ] , reqlist [ i ] -> input_line [ 3 ] , """" , reqlist [ i ] -> input_line [ 5 ] , false , reqlist [ i ] -> input_line [ 1 ] ) )"		5049919	1					
ANR	5050034	CallExpression	"reqs . push_back ( new JobDescriptionWrapper ( reqlist [ i ] -> input_line [ 4 ] , reqlist [ i ] -> input_line [ 3 ] , """" , reqlist [ i ] -> input_line [ 5 ] , false , reqlist [ i ] -> input_line [ 1 ] ) )"		5049919	0					
ANR	5050035	Callee	reqs . push_back		5049919	0					
ANR	5050036	MemberAccess	reqs . push_back		5049919	0					
ANR	5050037	Identifier	reqs		5049919	0					
ANR	5050038	Identifier	push_back		5049919	1					
ANR	5050039	ArgumentList	"reqlist [ i ] -> input_line [ 4 ] , reqlist [ i ] -> input_line [ 3 ] , """" , reqlist [ i ] -> input_line [ 5 ] , false , reqlist [ i ] -> input_line [ 1 ]"		5049919	1					
ANR	5050040	Argument	"reqlist [ i ] -> input_line [ 4 ] , reqlist [ i ] -> input_line [ 3 ] , """" , reqlist [ i ] -> input_line [ 5 ] , false , reqlist [ i ] -> input_line [ 1 ]"		5049919	0					
ANR	5050041	Expression	"reqlist [ i ] -> input_line [ 4 ] , reqlist [ i ] -> input_line [ 3 ] , """" , reqlist [ i ] -> input_line [ 5 ] , false , reqlist [ i ] -> input_line [ 1 ]"		5049919	0					
ANR	5050042	ArrayIndexing	reqlist [ i ] -> input_line [ 4 ]		5049919	0					
ANR	5050043	PtrMemberAccess	reqlist [ i ] -> input_line		5049919	0					
ANR	5050044	ArrayIndexing	reqlist [ i ]		5049919	0					
ANR	5050045	Identifier	reqlist		5049919	0					
ANR	5050046	Identifier	i		5049919	1					
ANR	5050047	Identifier	input_line		5049919	1					
ANR	5050048	PrimaryExpression	4		5049919	1					
ANR	5050049	Expression	"reqlist [ i ] -> input_line [ 3 ] , """" , reqlist [ i ] -> input_line [ 5 ] , false , reqlist [ i ] -> input_line [ 1 ]"		5049919	1					
ANR	5050050	ArrayIndexing	reqlist [ i ] -> input_line [ 3 ]		5049919	0					
ANR	5050051	PtrMemberAccess	reqlist [ i ] -> input_line		5049919	0					
ANR	5050052	ArrayIndexing	reqlist [ i ]		5049919	0					
ANR	5050053	Identifier	reqlist		5049919	0					
ANR	5050054	Identifier	i		5049919	1					
ANR	5050055	Identifier	input_line		5049919	1					
ANR	5050056	PrimaryExpression	3		5049919	1					
ANR	5050057	Expression	""""" , reqlist [ i ] -> input_line [ 5 ] , false , reqlist [ i ] -> input_line [ 1 ]"		5049919	1					
ANR	5050058	PrimaryExpression	""""""		5049919	0					
ANR	5050059	Expression	"reqlist [ i ] -> input_line [ 5 ] , false , reqlist [ i ] -> input_line [ 1 ]"		5049919	1					
ANR	5050060	ArrayIndexing	reqlist [ i ] -> input_line [ 5 ]		5049919	0					
ANR	5050061	PtrMemberAccess	reqlist [ i ] -> input_line		5049919	0					
ANR	5050062	ArrayIndexing	reqlist [ i ]		5049919	0					
ANR	5050063	Identifier	reqlist		5049919	0					
ANR	5050064	Identifier	i		5049919	1					
ANR	5050065	Identifier	input_line		5049919	1					
ANR	5050066	PrimaryExpression	5		5049919	1					
ANR	5050067	Expression	"false , reqlist [ i ] -> input_line [ 1 ]"		5049919	1					
ANR	5050068	Identifier	false		5049919	0					
ANR	5050069	ArrayIndexing	reqlist [ i ] -> input_line [ 1 ]		5049919	1					
ANR	5050070	PtrMemberAccess	reqlist [ i ] -> input_line		5049919	0					
ANR	5050071	ArrayIndexing	reqlist [ i ]		5049919	0					
ANR	5050072	Identifier	reqlist		5049919	0					
ANR	5050073	Identifier	i		5049919	1					
ANR	5050074	Identifier	input_line		5049919	1					
ANR	5050075	PrimaryExpression	1		5049919	1					
ANR	5050076	ExpressionStatement	"cp = CreamProxyFactory :: make_CreamProxyRegister ( & reqs , & resp , DEFAULT_TIMEOUT )"		5049919	1					
ANR	5050077	AssignmentExpression	"cp = CreamProxyFactory :: make_CreamProxyRegister ( & reqs , & resp , DEFAULT_TIMEOUT )"		5049919	0		=			
ANR	5050078	Identifier	cp		5049919	0					
ANR	5050079	CallExpression	"CreamProxyFactory :: make_CreamProxyRegister ( & reqs , & resp , DEFAULT_TIMEOUT )"		5049919	1					
ANR	5050080	Callee	CreamProxyFactory :: make_CreamProxyRegister		5049919	0					
ANR	5050081	Identifier	CreamProxyFactory :: make_CreamProxyRegister		5049919	0					
ANR	5050082	ArgumentList	& reqs		5049919	1					
ANR	5050083	Argument	& reqs		5049919	0					
ANR	5050084	UnaryOperationExpression	& reqs		5049919	0					
ANR	5050085	UnaryOperator	&		5049919	0					
ANR	5050086	Identifier	reqs		5049919	1					
ANR	5050087	Argument	& resp		5049919	1					
ANR	5050088	UnaryOperationExpression	& resp		5049919	0					
ANR	5050089	UnaryOperator	&		5049919	0					
ANR	5050090	Identifier	resp		5049919	1					
ANR	5050091	Argument	DEFAULT_TIMEOUT		5049919	2					
ANR	5050092	Identifier	DEFAULT_TIMEOUT		5049919	0					
ANR	5050093	ExpressionStatement	check_for_factory_error ( cp )		5049919	2					
ANR	5050094	CallExpression	check_for_factory_error ( cp )		5049919	0					
ANR	5050095	Callee	check_for_factory_error		5049919	0					
ANR	5050096	Identifier	check_for_factory_error		5049919	0					
ANR	5050097	ArgumentList	cp		5049919	1					
ANR	5050098	Argument	cp		5049919	0					
ANR	5050099	Identifier	cp		5049919	0					
ANR	5050100	ExpressionStatement	cp -> setCredential ( proxy . c_str ( ) )		5049919	3					
ANR	5050101	CallExpression	cp -> setCredential ( proxy . c_str ( ) )		5049919	0					
ANR	5050102	Callee	cp -> setCredential		5049919	0					
ANR	5050103	PtrMemberAccess	cp -> setCredential		5049919	0					
ANR	5050104	Identifier	cp		5049919	0					
ANR	5050105	Identifier	setCredential		5049919	1					
ANR	5050106	ArgumentList	proxy . c_str ( )		5049919	1					
ANR	5050107	Argument	proxy . c_str ( )		5049919	0					
ANR	5050108	CallExpression	proxy . c_str ( )		5049919	0					
ANR	5050109	Callee	proxy . c_str		5049919	0					
ANR	5050110	MemberAccess	proxy . c_str		5049919	0					
ANR	5050111	Identifier	proxy		5049919	0					
ANR	5050112	Identifier	c_str		5049919	1					
ANR	5050113	ArgumentList			5049919	1					
ANR	5050114	ExpressionStatement	cp -> execute ( service )		5049919	4					
ANR	5050115	CallExpression	cp -> execute ( service )		5049919	0					
ANR	5050116	Callee	cp -> execute		5049919	0					
ANR	5050117	PtrMemberAccess	cp -> execute		5049919	0					
ANR	5050118	Identifier	cp		5049919	0					
ANR	5050119	Identifier	execute		5049919	1					
ANR	5050120	ArgumentList	service		5049919	1					
ANR	5050121	Argument	service		5049919	0					
ANR	5050122	Identifier	service		5049919	0					
ANR	5050123	Statement	delete		5049919	5					
ANR	5050124	ExpressionStatement	cp		5049919	6					
ANR	5050125	Identifier	cp		5049919	0					
ANR	5050126	ForStatement	for ( AbsCreamProxy :: RegisterArrayRequest :: iterator it = reqs . begin ( ) ; it != reqs . end ( ) ; it ++ )		5049919	7					
ANR	5050127	ForInit	AbsCreamProxy :: RegisterArrayRequest :: iterator it = reqs . begin ( ) ;		5049919	0					
ANR	5050128	IdentifierDeclStatement	AbsCreamProxy :: RegisterArrayRequest :: iterator it = reqs . begin ( ) ;		5049919	0					
ANR	5050129	IdentifierDecl	it = reqs . begin ( )		5049919	0					
ANR	5050130	IdentifierDeclType	AbsCreamProxy :: RegisterArrayRequest :: iterator		5049919	0					
ANR	5050131	Identifier	it		5049919	1					
ANR	5050132	AssignmentExpression	it = reqs . begin ( )		5049919	2		=			
ANR	5050133	Identifier	it		5049919	0					
ANR	5050134	CallExpression	reqs . begin ( )		5049919	1					
ANR	5050135	Callee	reqs . begin		5049919	0					
ANR	5050136	MemberAccess	reqs . begin		5049919	0					
ANR	5050137	Identifier	reqs		5049919	0					
ANR	5050138	Identifier	begin		5049919	1					
ANR	5050139	ArgumentList			5049919	1					
ANR	5050140	Condition	it != reqs . end ( )		5049919	1					
ANR	5050141	EqualityExpression	it != reqs . end ( )		5049919	0		!=			
ANR	5050142	Identifier	it		5049919	0					
ANR	5050143	CallExpression	reqs . end ( )		5049919	1					
ANR	5050144	Callee	reqs . end		5049919	0					
ANR	5050145	MemberAccess	reqs . end		5049919	0					
ANR	5050146	Identifier	reqs		5049919	0					
ANR	5050147	Identifier	end		5049919	1					
ANR	5050148	ArgumentList			5049919	1					
ANR	5050149	PostIncDecOperationExpression	it ++		5049919	2					
ANR	5050150	Identifier	it		5049919	0					
ANR	5050151	IncDec	++		5049919	1					
ANR	5050152	CompoundStatement		42:30:1357:1357	5049919	3					
ANR	5050153	Statement	delete		5049919	0					
ANR	5050154	ExpressionStatement	* it		5049919	1					
ANR	5050155	UnaryOperationExpression	* it		5049919	0					
ANR	5050156	UnaryOperator	*		5049919	0					
ANR	5050157	Identifier	it		5049919	1					
ANR	5050158	CatchList			5049919	1					
ANR	5050159	CatchStatement	catch ( std :: exception & ex )		5049919	0					
ANR	5050160	Identifier	ex		5049919	0					
ANR	5050161	CompoundStatement		52:2:1549:1585	5049919	1					
ANR	5050162	Statement	delete	689:2:19634:19639	5049919	0	True				
ANR	5050163	ExpressionStatement	cp	689:9:19641:19643	5049919	1	True				
ANR	5050164	Identifier	cp		5049919	0					
ANR	5050165	ForStatement	for ( AbsCreamProxy :: RegisterArrayRequest :: iterator it = reqs . begin ( ) ; it != reqs . end ( ) ; it ++ )		5049919	2					
ANR	5050166	ForInit	AbsCreamProxy :: RegisterArrayRequest :: iterator it = reqs . begin ( ) ;	690:8:19653:19716	5049919	0	True				
ANR	5050167	IdentifierDeclStatement	AbsCreamProxy :: RegisterArrayRequest :: iterator it = reqs . begin ( ) ;		5049919	0					
ANR	5050168	IdentifierDecl	it = reqs . begin ( )		5049919	0					
ANR	5050169	IdentifierDeclType	AbsCreamProxy :: RegisterArrayRequest :: iterator		5049919	0					
ANR	5050170	Identifier	it		5049919	1					
ANR	5050171	AssignmentExpression	it = reqs . begin ( )		5049919	2		=			
ANR	5050172	Identifier	it		5049919	0					
ANR	5050173	CallExpression	reqs . begin ( )		5049919	1					
ANR	5050174	Callee	reqs . begin		5049919	0					
ANR	5050175	MemberAccess	reqs . begin		5049919	0					
ANR	5050176	Identifier	reqs		5049919	0					
ANR	5050177	Identifier	begin		5049919	1					
ANR	5050178	ArgumentList			5049919	1					
ANR	5050179	Condition	it != reqs . end ( )	691:5:19723:19738	5049919	1	True				
ANR	5050180	EqualityExpression	it != reqs . end ( )		5049919	0		!=			
ANR	5050181	Identifier	it		5049919	0					
ANR	5050182	CallExpression	reqs . end ( )		5049919	1					
ANR	5050183	Callee	reqs . end		5049919	0					
ANR	5050184	MemberAccess	reqs . end		5049919	0					
ANR	5050185	Identifier	reqs		5049919	0					
ANR	5050186	Identifier	end		5049919	1					
ANR	5050187	ArgumentList			5049919	1					
ANR	5050188	PostIncDecOperationExpression	it ++	691:23:19741:19744	5049919	2	True				
ANR	5050189	Identifier	it		5049919	0					
ANR	5050190	IncDec	++		5049919	1					
ANR	5050191	CompoundStatement		49:30:1526:1526	5049919	3					
ANR	5050192	Statement	delete	692:3:19753:19758	5049919	0	True				
ANR	5050193	ExpressionStatement	* it	692:10:19760:19763	5049919	1	True				
ANR	5050194	UnaryOperationExpression	* it		5049919	0					
ANR	5050195	UnaryOperator	*		5049919	0					
ANR	5050196	Identifier	it		5049919	1					
ANR	5050197	IdentifierDeclStatement	char * msg = escape_spaces ( ex . what ( ) ) ;	694:2:19771:19807	5049919	3	True				
ANR	5050198	IdentifierDecl	* msg = escape_spaces ( ex . what ( ) )		5049919	0					
ANR	5050199	IdentifierDeclType	char *		5049919	0					
ANR	5050200	Identifier	msg		5049919	1					
ANR	5050201	AssignmentExpression	* msg = escape_spaces ( ex . what ( ) )		5049919	2		=			
ANR	5050202	Identifier	msg		5049919	0					
ANR	5050203	CallExpression	escape_spaces ( ex . what ( ) )		5049919	1					
ANR	5050204	Callee	escape_spaces		5049919	0					
ANR	5050205	Identifier	escape_spaces		5049919	0					
ANR	5050206	ArgumentList	ex . what ( )		5049919	1					
ANR	5050207	Argument	ex . what ( )		5049919	0					
ANR	5050208	CallExpression	ex . what ( )		5049919	0					
ANR	5050209	Callee	ex . what		5049919	0					
ANR	5050210	MemberAccess	ex . what		5049919	0					
ANR	5050211	Identifier	ex		5049919	0					
ANR	5050212	Identifier	what		5049919	1					
ANR	5050213	ArgumentList			5049919	1					
ANR	5050214	ForStatement	for ( vector < string > :: const_iterator it = reqids . begin ( ) ; it != reqids . end ( ) ; it ++ )		5049919	4					
ANR	5050215	ForInit	vector < string > :: const_iterator it = reqids . begin ( ) ;	695:7:19816:19866	5049919	0	True				
ANR	5050216	IdentifierDeclStatement	vector < string > :: const_iterator it = reqids . begin ( ) ;		5049919	0					
ANR	5050217	IdentifierDecl	it = reqids . begin ( )		5049919	0					
ANR	5050218	IdentifierDeclType	vector < string > :: const_iterator		5049919	0					
ANR	5050219	Identifier	it		5049919	1					
ANR	5050220	AssignmentExpression	it = reqids . begin ( )		5049919	2		=			
ANR	5050221	Identifier	it		5049919	0					
ANR	5050222	CallExpression	reqids . begin ( )		5049919	1					
ANR	5050223	Callee	reqids . begin		5049919	0					
ANR	5050224	MemberAccess	reqids . begin		5049919	0					
ANR	5050225	Identifier	reqids		5049919	0					
ANR	5050226	Identifier	begin		5049919	1					
ANR	5050227	ArgumentList			5049919	1					
ANR	5050228	Condition	it != reqids . end ( )	696:4:19872:19889	5049919	1	True				
ANR	5050229	EqualityExpression	it != reqids . end ( )		5049919	0		!=			
ANR	5050230	Identifier	it		5049919	0					
ANR	5050231	CallExpression	reqids . end ( )		5049919	1					
ANR	5050232	Callee	reqids . end		5049919	0					
ANR	5050233	MemberAccess	reqids . end		5049919	0					
ANR	5050234	Identifier	reqids		5049919	0					
ANR	5050235	Identifier	end		5049919	1					
ANR	5050236	ArgumentList			5049919	1					
ANR	5050237	PostIncDecOperationExpression	it ++	696:24:19892:19895	5049919	2	True				
ANR	5050238	Identifier	it		5049919	0					
ANR	5050239	IncDec	++		5049919	1					
ANR	5050240	CompoundStatement		54:31:1677:1677	5049919	3					
ANR	5050241	ExpressionStatement	"result_line = ( * it ) + "" CREAM_Job_Register\\\\ Error:\\\\ "" + msg"	697:3:19904:19965	5049919	0	True				
ANR	5050242	AssignmentExpression	"result_line = ( * it ) + "" CREAM_Job_Register\\\\ Error:\\\\ "" + msg"		5049919	0		=			
ANR	5050243	Identifier	result_line		5049919	0					
ANR	5050244	AdditiveExpression	"( * it ) + "" CREAM_Job_Register\\\\ Error:\\\\ "" + msg"		5049919	1		+			
ANR	5050245	UnaryOperationExpression	* it		5049919	0					
ANR	5050246	UnaryOperator	*		5049919	0					
ANR	5050247	Identifier	it		5049919	1					
ANR	5050248	AdditiveExpression	""" CREAM_Job_Register\\\\ Error:\\\\ "" + msg"		5049919	1		+			
ANR	5050249	PrimaryExpression	""" CREAM_Job_Register\\\\ Error:\\\\ """		5049919	0					
ANR	5050250	Identifier	msg		5049919	1					
ANR	5050251	ExpressionStatement	enqueue_result ( result_line )	698:3:19970:19997	5049919	1	True				
ANR	5050252	CallExpression	enqueue_result ( result_line )		5049919	0					
ANR	5050253	Callee	enqueue_result		5049919	0					
ANR	5050254	Identifier	enqueue_result		5049919	0					
ANR	5050255	ArgumentList	result_line		5049919	1					
ANR	5050256	Argument	result_line		5049919	0					
ANR	5050257	Identifier	result_line		5049919	0					
ANR	5050258	ExpressionStatement	free ( msg )	700:2:20005:20014	5049919	5	True				
ANR	5050259	CallExpression	free ( msg )		5049919	0					
ANR	5050260	Callee	free		5049919	0					
ANR	5050261	Identifier	free		5049919	0					
ANR	5050262	ArgumentList	msg		5049919	1					
ANR	5050263	Argument	msg		5049919	0					
ANR	5050264	Identifier	msg		5049919	0					
ANR	5050265	ReturnStatement	return 1 ;	702:2:20019:20027	5049919	6	True				
ANR	5050266	PrimaryExpression	1		5049919	0					
ANR	5050267	ForStatement	for ( vector < string > :: const_iterator it = reqids . begin ( ) ; it != reqids . end ( ) ; it ++ )		5049919	10					
ANR	5050268	ForInit	vector < string > :: const_iterator it = reqids . begin ( ) ;	705:6:20039:20089	5049919	0	True				
ANR	5050269	IdentifierDeclStatement	vector < string > :: const_iterator it = reqids . begin ( ) ;		5049919	0					
ANR	5050270	IdentifierDecl	it = reqids . begin ( )		5049919	0					
ANR	5050271	IdentifierDeclType	vector < string > :: const_iterator		5049919	0					
ANR	5050272	Identifier	it		5049919	1					
ANR	5050273	AssignmentExpression	it = reqids . begin ( )		5049919	2		=			
ANR	5050274	Identifier	it		5049919	0					
ANR	5050275	CallExpression	reqids . begin ( )		5049919	1					
ANR	5050276	Callee	reqids . begin		5049919	0					
ANR	5050277	MemberAccess	reqids . begin		5049919	0					
ANR	5050278	Identifier	reqids		5049919	0					
ANR	5050279	Identifier	begin		5049919	1					
ANR	5050280	ArgumentList			5049919	1					
ANR	5050281	Condition	it != reqids . end ( )	706:3:20094:20111	5049919	1	True				
ANR	5050282	EqualityExpression	it != reqids . end ( )		5049919	0		!=			
ANR	5050283	Identifier	it		5049919	0					
ANR	5050284	CallExpression	reqids . end ( )		5049919	1					
ANR	5050285	Callee	reqids . end		5049919	0					
ANR	5050286	MemberAccess	reqids . end		5049919	0					
ANR	5050287	Identifier	reqids		5049919	0					
ANR	5050288	Identifier	end		5049919	1					
ANR	5050289	ArgumentList			5049919	1					
ANR	5050290	PostIncDecOperationExpression	it ++	706:23:20114:20117	5049919	2	True				
ANR	5050291	Identifier	it		5049919	0					
ANR	5050292	IncDec	++		5049919	1					
ANR	5050293	CompoundStatement		79:2:2344:2369	5049919	3					
ANR	5050294	IfStatement	if ( resp . find ( * it ) == resp . end ( ) )		5049919	0					
ANR	5050295	Condition	resp . find ( * it ) == resp . end ( )	707:7:20130:20159	5049919	0	True				
ANR	5050296	EqualityExpression	resp . find ( * it ) == resp . end ( )		5049919	0		==			
ANR	5050297	CallExpression	resp . find ( * it )		5049919	0					
ANR	5050298	Callee	resp . find		5049919	0					
ANR	5050299	MemberAccess	resp . find		5049919	0					
ANR	5050300	Identifier	resp		5049919	0					
ANR	5050301	Identifier	find		5049919	1					
ANR	5050302	ArgumentList	* it		5049919	1					
ANR	5050303	Argument	* it		5049919	0					
ANR	5050304	UnaryOperationExpression	* it		5049919	0					
ANR	5050305	UnaryOperator	*		5049919	0					
ANR	5050306	Identifier	it		5049919	1					
ANR	5050307	CallExpression	resp . end ( )		5049919	1					
ANR	5050308	Callee	resp . end		5049919	0					
ANR	5050309	MemberAccess	resp . end		5049919	0					
ANR	5050310	Identifier	resp		5049919	0					
ANR	5050311	Identifier	end		5049919	1					
ANR	5050312	ArgumentList			5049919	1					
ANR	5050313	CompoundStatement		65:40:1941:1941	5049919	1					
ANR	5050314	ExpressionStatement	"result_line = * it + "" CREAM_Job_Register\\\\ Error:\\\\ Job\\\\ not\\\\ in\\\\ reply"""	709:3:20195:20270	5049919	0	True				
ANR	5050315	AssignmentExpression	"result_line = * it + "" CREAM_Job_Register\\\\ Error:\\\\ Job\\\\ not\\\\ in\\\\ reply"""		5049919	0		=			
ANR	5050316	Identifier	result_line		5049919	0					
ANR	5050317	AdditiveExpression	"* it + "" CREAM_Job_Register\\\\ Error:\\\\ Job\\\\ not\\\\ in\\\\ reply"""		5049919	1		+			
ANR	5050318	UnaryOperationExpression	* it		5049919	0					
ANR	5050319	UnaryOperator	*		5049919	0					
ANR	5050320	Identifier	it		5049919	1					
ANR	5050321	PrimaryExpression	""" CREAM_Job_Register\\\\ Error:\\\\ Job\\\\ not\\\\ in\\\\ reply"""		5049919	1					
ANR	5050322	ExpressionStatement	enqueue_result ( result_line )	710:3:20275:20304	5049919	1	True				
ANR	5050323	CallExpression	enqueue_result ( result_line )		5049919	0					
ANR	5050324	Callee	enqueue_result		5049919	0					
ANR	5050325	Identifier	enqueue_result		5049919	0					
ANR	5050326	ArgumentList	result_line		5049919	1					
ANR	5050327	Argument	result_line		5049919	0					
ANR	5050328	Identifier	result_line		5049919	0					
ANR	5050329	ContinueStatement	continue ;	711:3:20309:20317	5049919	2	True				
ANR	5050330	Statement	if	713:2:20325:20326	5049919	1	True				
ANR	5050331	Statement	(	713:5:20328:20328	5049919	2	True				
ANR	5050332	Statement	resp	713:7:20330:20333	5049919	3	True				
ANR	5050333	Statement	[	713:11:20334:20334	5049919	4	True				
ANR	5050334	Statement	*	713:12:20335:20335	5049919	5	True				
ANR	5050335	Statement	it	713:13:20336:20337	5049919	6	True				
ANR	5050336	Statement	]	713:15:20338:20338	5049919	7	True				
ANR	5050337	Statement	.	713:16:20339:20339	5049919	8	True				
ANR	5050338	Statement	get	713:17:20340:20342	5049919	9	True				
ANR	5050339	Statement	<	713:20:20343:20343	5049919	10	True				
ANR	5050340	Statement	0	713:21:20344:20344	5049919	11	True				
ANR	5050341	Statement	>	713:22:20345:20345	5049919	12	True				
ANR	5050342	Statement	(	713:23:20346:20346	5049919	13	True				
ANR	5050343	Statement	)	713:24:20347:20347	5049919	14	True				
ANR	5050344	Statement	!=	713:26:20349:20350	5049919	15	True				
ANR	5050345	Statement	JobIdWrapper	713:29:20352:20363	5049919	16	True				
ANR	5050346	Statement	::	713:41:20364:20365	5049919	17	True				
ANR	5050347	Statement	OK	713:43:20366:20367	5049919	18	True				
ANR	5050348	Statement	)	713:45:20368:20368	5049919	19	True				
ANR	5050349	CompoundStatement		71:47:2148:2148	5049919	20					
ANR	5050350	Statement	char	714:3:20375:20378	5049919	0	True				
ANR	5050351	Statement	*	714:8:20380:20380	5049919	1	True				
ANR	5050352	Statement	msg	714:9:20381:20383	5049919	2	True				
ANR	5050353	Statement	=	714:13:20385:20385	5049919	3	True				
ANR	5050354	Statement	escape_spaces	714:15:20387:20399	5049919	4	True				
ANR	5050355	Statement	(	714:28:20400:20400	5049919	5	True				
ANR	5050356	Statement	resp	714:30:20402:20405	5049919	6	True				
ANR	5050357	Statement	[	714:34:20406:20406	5049919	7	True				
ANR	5050358	Statement	*	714:35:20407:20407	5049919	8	True				
ANR	5050359	Statement	it	714:36:20408:20409	5049919	9	True				
ANR	5050360	Statement	]	714:38:20410:20410	5049919	10	True				
ANR	5050361	Statement	.	714:39:20411:20411	5049919	11	True				
ANR	5050362	Statement	get	714:40:20412:20414	5049919	12	True				
ANR	5050363	Statement	<	714:43:20415:20415	5049919	13	True				
ANR	5050364	Statement	2	714:44:20416:20416	5049919	14	True				
ANR	5050365	Statement	>	714:45:20417:20417	5049919	15	True				
ANR	5050366	Statement	(	714:46:20418:20418	5049919	16	True				
ANR	5050367	Statement	)	714:47:20419:20419	5049919	17	True				
ANR	5050368	Statement	.	714:48:20420:20420	5049919	18	True				
ANR	5050369	Statement	c_str	714:49:20421:20425	5049919	19	True				
ANR	5050370	Statement	(	714:54:20426:20426	5049919	20	True				
ANR	5050371	Statement	)	714:55:20427:20427	5049919	21	True				
ANR	5050372	Statement	)	714:57:20429:20429	5049919	22	True				
ANR	5050373	ExpressionStatement		714:58:20430:20430	5049919	23	True				
ANR	5050374	ExpressionStatement	"result_line = * it + "" CREAM_Job_Register\\\\ Error:\\\\ "" + msg"	715:3:20435:20494	5049919	24	True				
ANR	5050375	AssignmentExpression	"result_line = * it + "" CREAM_Job_Register\\\\ Error:\\\\ "" + msg"		5049919	0		=			
ANR	5050376	Identifier	result_line		5049919	0					
ANR	5050377	AdditiveExpression	"* it + "" CREAM_Job_Register\\\\ Error:\\\\ "" + msg"		5049919	1		+			
ANR	5050378	UnaryOperationExpression	* it		5049919	0					
ANR	5050379	UnaryOperator	*		5049919	0					
ANR	5050380	Identifier	it		5049919	1					
ANR	5050381	AdditiveExpression	""" CREAM_Job_Register\\\\ Error:\\\\ "" + msg"		5049919	1		+			
ANR	5050382	PrimaryExpression	""" CREAM_Job_Register\\\\ Error:\\\\ """		5049919	0					
ANR	5050383	Identifier	msg		5049919	1					
ANR	5050384	ExpressionStatement	enqueue_result ( result_line )	716:3:20499:20528	5049919	25	True				
ANR	5050385	CallExpression	enqueue_result ( result_line )		5049919	0					
ANR	5050386	Callee	enqueue_result		5049919	0					
ANR	5050387	Identifier	enqueue_result		5049919	0					
ANR	5050388	ArgumentList	result_line		5049919	1					
ANR	5050389	Argument	result_line		5049919	0					
ANR	5050390	Identifier	result_line		5049919	0					
ANR	5050391	ExpressionStatement	free ( msg )	717:3:20533:20544	5049919	26	True				
ANR	5050392	CallExpression	free ( msg )		5049919	0					
ANR	5050393	Callee	free		5049919	0					
ANR	5050394	Identifier	free		5049919	0					
ANR	5050395	ArgumentList	msg		5049919	1					
ANR	5050396	Argument	msg		5049919	0					
ANR	5050397	Identifier	msg		5049919	0					
ANR	5050398	ContinueStatement	continue ;	718:3:20549:20557	5049919	27	True				
ANR	5050399	IdentifierDeclStatement	"map < string , string > props ;"	721:2:20566:20591	5049919	21	True				
ANR	5050400	IdentifierDecl	props		5049919	0					
ANR	5050401	IdentifierDeclType	"map < string , string >"		5049919	0					
ANR	5050402	Identifier	props		5049919	1					
ANR	5050403	Statement	resp	722:2:20595:20598	5049919	22	True				
ANR	5050404	Statement	[	722:6:20599:20599	5049919	23	True				
ANR	5050405	Statement	*	722:7:20600:20600	5049919	24	True				
ANR	5050406	Statement	it	722:8:20601:20602	5049919	25	True				
ANR	5050407	Statement	]	722:10:20603:20603	5049919	26	True				
ANR	5050408	Statement	.	722:11:20604:20604	5049919	27	True				
ANR	5050409	Statement	get	722:12:20605:20607	5049919	28	True				
ANR	5050410	Statement	<	722:15:20608:20608	5049919	29	True				
ANR	5050411	Statement	1	722:16:20609:20609	5049919	30	True				
ANR	5050412	Statement	>	722:17:20610:20610	5049919	31	True				
ANR	5050413	Statement	(	722:18:20611:20611	5049919	32	True				
ANR	5050414	Statement	)	722:19:20612:20612	5049919	33	True				
ANR	5050415	Statement	.	722:20:20613:20613	5049919	34	True				
ANR	5050416	ExpressionStatement	getProperties ( props )	722:21:20614:20634	5049919	35	True				
ANR	5050417	CallExpression	getProperties ( props )		5049919	0					
ANR	5050418	Callee	getProperties		5049919	0					
ANR	5050419	Identifier	getProperties		5049919	0					
ANR	5050420	ArgumentList	props		5049919	1					
ANR	5050421	Argument	props		5049919	0					
ANR	5050422	Identifier	props		5049919	0					
ANR	5050423	Statement	result_line	723:2:20638:20648	5049919	36	True				
ANR	5050424	Statement	=	723:14:20650:20650	5049919	37	True				
ANR	5050425	Statement	*	723:16:20652:20652	5049919	38	True				
ANR	5050426	Statement	it	723:17:20653:20654	5049919	39	True				
ANR	5050427	Statement	+	723:20:20656:20656	5049919	40	True				
ANR	5050428	Statement	""" NULL """	724:3:20661:20668	5049919	41	True				
ANR	5050429	Statement	+	724:12:20670:20670	5049919	42	True				
ANR	5050430	Statement	resp	725:3:20675:20678	5049919	43	True				
ANR	5050431	Statement	[	725:7:20679:20679	5049919	44	True				
ANR	5050432	Statement	*	725:8:20680:20680	5049919	45	True				
ANR	5050433	Statement	it	725:9:20681:20682	5049919	46	True				
ANR	5050434	Statement	]	725:11:20683:20683	5049919	47	True				
ANR	5050435	Statement	.	725:12:20684:20684	5049919	48	True				
ANR	5050436	Statement	get	725:13:20685:20687	5049919	49	True				
ANR	5050437	Statement	<	725:16:20688:20688	5049919	50	True				
ANR	5050438	Statement	1	725:17:20689:20689	5049919	51	True				
ANR	5050439	Statement	>	725:18:20690:20690	5049919	52	True				
ANR	5050440	Statement	(	725:19:20691:20691	5049919	53	True				
ANR	5050441	Statement	)	725:20:20692:20692	5049919	54	True				
ANR	5050442	Statement	.	725:21:20693:20693	5049919	55	True				
ANR	5050443	ExpressionStatement	"getCreamJobID ( ) + sp + props [ ""CREAMInputSandboxURI"" ] + sp + props [ ""CREAMOutputSandboxURI"" ]"	725:22:20694:20796	5049919	56	True				
ANR	5050444	AdditiveExpression	"getCreamJobID ( ) + sp + props [ ""CREAMInputSandboxURI"" ] + sp + props [ ""CREAMOutputSandboxURI"" ]"		5049919	0		+			
ANR	5050445	CallExpression	getCreamJobID ( )		5049919	0					
ANR	5050446	Callee	getCreamJobID		5049919	0					
ANR	5050447	Identifier	getCreamJobID		5049919	0					
ANR	5050448	ArgumentList			5049919	1					
ANR	5050449	AdditiveExpression	"sp + props [ ""CREAMInputSandboxURI"" ] + sp + props [ ""CREAMOutputSandboxURI"" ]"		5049919	1		+			
ANR	5050450	Identifier	sp		5049919	0					
ANR	5050451	AdditiveExpression	"props [ ""CREAMInputSandboxURI"" ] + sp + props [ ""CREAMOutputSandboxURI"" ]"		5049919	1		+			
ANR	5050452	ArrayIndexing	"props [ ""CREAMInputSandboxURI"" ]"		5049919	0					
ANR	5050453	Identifier	props		5049919	0					
ANR	5050454	PrimaryExpression	"""CREAMInputSandboxURI"""		5049919	1					
ANR	5050455	AdditiveExpression	"sp + props [ ""CREAMOutputSandboxURI"" ]"		5049919	1		+			
ANR	5050456	Identifier	sp		5049919	0					
ANR	5050457	ArrayIndexing	"props [ ""CREAMOutputSandboxURI"" ]"		5049919	1					
ANR	5050458	Identifier	props		5049919	0					
ANR	5050459	PrimaryExpression	"""CREAMOutputSandboxURI"""		5049919	1					
ANR	5050460	ExpressionStatement	enqueue_result ( result_line )	730:2:20800:20827	5049919	57	True				
ANR	5050461	CallExpression	enqueue_result ( result_line )		5049919	0					
ANR	5050462	Callee	enqueue_result		5049919	0					
ANR	5050463	Identifier	enqueue_result		5049919	0					
ANR	5050464	ArgumentList	result_line		5049919	1					
ANR	5050465	Argument	result_line		5049919	0					
ANR	5050466	Identifier	result_line		5049919	0					
ANR	5050467	ReturnStatement	return 0 ;	733:1:20834:20842	5049919	11	True				
ANR	5050468	PrimaryExpression	0		5049919	0					
ANR	5050469	ReturnType	int		5049919	1					
ANR	5050470	Identifier	thread_cream_job_register		5049919	2					
ANR	5050471	ParameterList	Request * * reqlist		5049919	3					
ANR	5050472	Parameter	Request * * reqlist	642:31:18201:18217	5049919	0	True				
ANR	5050473	ParameterType	Request * *		5049919	0					
ANR	5050474	Identifier	reqlist		5049919	1					
ANR	5050475	CFGEntryNode	ENTRY		5049919		True				
ANR	5050476	CFGExitNode	EXIT		5049919		True				
ANR	5050477	CFGErrorNode	ERROR		5049919		True				
ANR	5050478	Symbol	reqs		5049919						
ANR	5050479	Symbol	msg		5049919						
ANR	5050480	Symbol	NULL		5049919						
ANR	5050481	Symbol	reqlist [ 0 ] -> input_line		5049919						
ANR	5050482	Symbol	resp		5049919						
ANR	5050483	Symbol	* * * reqlist		5049919						
ANR	5050484	Symbol	it		5049919						
ANR	5050485	Symbol	reqids . end		5049919						
ANR	5050486	Symbol	* reqlist		5049919						
ANR	5050487	Symbol	cp		5049919						
ANR	5050488	Symbol	* * reqlist		5049919						
ANR	5050489	Symbol	result_line		5049919						
ANR	5050490	Symbol	props		5049919						
ANR	5050491	Symbol	resp . find		5049919						
ANR	5050492	Symbol	proxy		5049919						
ANR	5050493	Symbol	resp . end		5049919						
ANR	5050494	Symbol	* it		5049919						
ANR	5050495	Symbol	reqlist		5049919						
ANR	5050496	Symbol	reqids		5049919						
ANR	5050497	Symbol	service		5049919						
ANR	5050498	Symbol	reqlist [ 0 ] -> proxy		5049919						
ANR	5050499	Symbol	* reqlist [ 0 ] -> input_line		5049919						
ANR	5050500	Symbol	reqids . begin		5049919						
ANR	5050501	Function	handle_cream_job_start	740:0:21047:21855							
ANR	5050502	FunctionDef	handle_cream_job_start (char * * input_line)		5050501	0					
ANR	5050503	CompoundStatement		741:0:21095:21855	5050501	0					
ANR	5050504	IdentifierDeclStatement	int arg_cnt = count_args ( input_line ) ;	742:1:21098:21136	5050501	0	True				
ANR	5050505	IdentifierDecl	arg_cnt = count_args ( input_line )		5050501	0					
ANR	5050506	IdentifierDeclType	int		5050501	0					
ANR	5050507	Identifier	arg_cnt		5050501	1					
ANR	5050508	AssignmentExpression	arg_cnt = count_args ( input_line )		5050501	2		=			
ANR	5050509	Identifier	arg_cnt		5050501	0					
ANR	5050510	CallExpression	count_args ( input_line )		5050501	1					
ANR	5050511	Callee	count_args		5050501	0					
ANR	5050512	Identifier	count_args		5050501	0					
ANR	5050513	ArgumentList	input_line		5050501	1					
ANR	5050514	Argument	input_line		5050501	0					
ANR	5050515	Identifier	input_line		5050501	0					
ANR	5050516	IdentifierDeclStatement	char * jobnum = NULL ;	743:1:21139:21158	5050501	1	True				
ANR	5050517	IdentifierDecl	* jobnum = NULL		5050501	0					
ANR	5050518	IdentifierDeclType	char *		5050501	0					
ANR	5050519	Identifier	jobnum		5050501	1					
ANR	5050520	AssignmentExpression	* jobnum = NULL		5050501	2		=			
ANR	5050521	Identifier	NULL		5050501	0					
ANR	5050522	Identifier	NULL		5050501	1					
ANR	5050523	IfStatement	if ( arg_cnt == 4 )		5050501	2					
ANR	5050524	Condition	arg_cnt == 4	752:6:21472:21483	5050501	0	True				
ANR	5050525	EqualityExpression	arg_cnt == 4		5050501	0		==			
ANR	5050526	Identifier	arg_cnt		5050501	0					
ANR	5050527	PrimaryExpression	4		5050501	1					
ANR	5050528	CompoundStatement		12:21:391:391	5050501	1					
ANR	5050529	ExpressionStatement	input_line [ 5 ] = input_line [ 4 ]	753:2:21491:21520	5050501	0	True				
ANR	5050530	AssignmentExpression	input_line [ 5 ] = input_line [ 4 ]		5050501	0		=			
ANR	5050531	ArrayIndexing	input_line [ 5 ]		5050501	0					
ANR	5050532	Identifier	input_line		5050501	0					
ANR	5050533	PrimaryExpression	5		5050501	1					
ANR	5050534	ArrayIndexing	input_line [ 4 ]		5050501	1					
ANR	5050535	Identifier	input_line		5050501	0					
ANR	5050536	PrimaryExpression	4		5050501	1					
ANR	5050537	ExpressionStatement	input_line [ 4 ] = input_line [ 3 ]	754:2:21524:21553	5050501	1	True				
ANR	5050538	AssignmentExpression	input_line [ 4 ] = input_line [ 3 ]		5050501	0		=			
ANR	5050539	ArrayIndexing	input_line [ 4 ]		5050501	0					
ANR	5050540	Identifier	input_line		5050501	0					
ANR	5050541	PrimaryExpression	4		5050501	1					
ANR	5050542	ArrayIndexing	input_line [ 3 ]		5050501	1					
ANR	5050543	Identifier	input_line		5050501	0					
ANR	5050544	PrimaryExpression	3		5050501	1					
ANR	5050545	ExpressionStatement	"input_line [ 3 ] = strdup ( ""1"" )"	755:2:21557:21586	5050501	2	True				
ANR	5050546	AssignmentExpression	"input_line [ 3 ] = strdup ( ""1"" )"		5050501	0		=			
ANR	5050547	ArrayIndexing	input_line [ 3 ]		5050501	0					
ANR	5050548	Identifier	input_line		5050501	0					
ANR	5050549	PrimaryExpression	3		5050501	1					
ANR	5050550	CallExpression	"strdup ( ""1"" )"		5050501	1					
ANR	5050551	Callee	strdup		5050501	0					
ANR	5050552	Identifier	strdup		5050501	0					
ANR	5050553	ArgumentList	"""1"""		5050501	1					
ANR	5050554	Argument	"""1"""		5050501	0					
ANR	5050555	PrimaryExpression	"""1"""		5050501	0					
ANR	5050556	ExpressionStatement	arg_cnt = 5	756:2:21590:21601	5050501	3	True				
ANR	5050557	AssignmentExpression	arg_cnt = 5		5050501	0		=			
ANR	5050558	Identifier	arg_cnt		5050501	0					
ANR	5050559	PrimaryExpression	5		5050501	1					
ANR	5050560	ExpressionStatement	"process_string_arg ( input_line [ 3 ] , & jobnum )"	759:1:21608:21652	5050501	3	True				
ANR	5050561	CallExpression	"process_string_arg ( input_line [ 3 ] , & jobnum )"		5050501	0					
ANR	5050562	Callee	process_string_arg		5050501	0					
ANR	5050563	Identifier	process_string_arg		5050501	0					
ANR	5050564	ArgumentList	input_line [ 3 ]		5050501	1					
ANR	5050565	Argument	input_line [ 3 ]		5050501	0					
ANR	5050566	ArrayIndexing	input_line [ 3 ]		5050501	0					
ANR	5050567	Identifier	input_line		5050501	0					
ANR	5050568	PrimaryExpression	3		5050501	1					
ANR	5050569	Argument	& jobnum		5050501	1					
ANR	5050570	UnaryOperationExpression	& jobnum		5050501	0					
ANR	5050571	UnaryOperator	&		5050501	0					
ANR	5050572	Identifier	jobnum		5050501	1					
ANR	5050573	IfStatement	if ( jobnum && ( atoi ( jobnum ) + 4 != arg_cnt ) )		5050501	4					
ANR	5050574	Condition	jobnum && ( atoi ( jobnum ) + 4 != arg_cnt )	760:6:21660:21702	5050501	0	True				
ANR	5050575	AndExpression	jobnum && ( atoi ( jobnum ) + 4 != arg_cnt )		5050501	0		&&			
ANR	5050576	Identifier	jobnum		5050501	0					
ANR	5050577	EqualityExpression	atoi ( jobnum ) + 4 != arg_cnt		5050501	1		!=			
ANR	5050578	AdditiveExpression	atoi ( jobnum ) + 4		5050501	0		+			
ANR	5050579	CallExpression	atoi ( jobnum )		5050501	0					
ANR	5050580	Callee	atoi		5050501	0					
ANR	5050581	Identifier	atoi		5050501	0					
ANR	5050582	ArgumentList	jobnum		5050501	1					
ANR	5050583	Argument	jobnum		5050501	0					
ANR	5050584	Identifier	jobnum		5050501	0					
ANR	5050585	PrimaryExpression	4		5050501	1					
ANR	5050586	Identifier	arg_cnt		5050501	1					
ANR	5050587	CompoundStatement		20:52:610:610	5050501	1					
ANR	5050588	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	761:2:21710:21731	5050501	0	True				
ANR	5050589	CallExpression	HANDLE_SYNTAX_ERROR ( )		5050501	0					
ANR	5050590	Callee	HANDLE_SYNTAX_ERROR		5050501	0					
ANR	5050591	Identifier	HANDLE_SYNTAX_ERROR		5050501	0					
ANR	5050592	ArgumentList			5050501	1					
ANR	5050593	ExpressionStatement	"enqueue_request_batch ( input_line , thread_cream_job_start , cmp_request_single )"	764:1:21738:21817	5050501	5	True				
ANR	5050594	CallExpression	"enqueue_request_batch ( input_line , thread_cream_job_start , cmp_request_single )"		5050501	0					
ANR	5050595	Callee	enqueue_request_batch		5050501	0					
ANR	5050596	Identifier	enqueue_request_batch		5050501	0					
ANR	5050597	ArgumentList	input_line		5050501	1					
ANR	5050598	Argument	input_line		5050501	0					
ANR	5050599	Identifier	input_line		5050501	0					
ANR	5050600	Argument	thread_cream_job_start		5050501	1					
ANR	5050601	Identifier	thread_cream_job_start		5050501	0					
ANR	5050602	Argument	cmp_request_single		5050501	2					
ANR	5050603	Identifier	cmp_request_single		5050501	0					
ANR	5050604	ExpressionStatement	"gahp_printf ( ""S\\n"" )"	766:1:21821:21839	5050501	6	True				
ANR	5050605	CallExpression	"gahp_printf ( ""S\\n"" )"		5050501	0					
ANR	5050606	Callee	gahp_printf		5050501	0					
ANR	5050607	Identifier	gahp_printf		5050501	0					
ANR	5050608	ArgumentList	"""S\\n"""		5050501	1					
ANR	5050609	Argument	"""S\\n"""		5050501	0					
ANR	5050610	PrimaryExpression	"""S\\n"""		5050501	0					
ANR	5050611	ReturnStatement	return 0 ;	768:1:21845:21853	5050501	7	True				
ANR	5050612	PrimaryExpression	0		5050501	0					
ANR	5050613	ReturnType	int		5050501	1					
ANR	5050614	Identifier	handle_cream_job_start		5050501	2					
ANR	5050615	ParameterList	char * * input_line		5050501	3					
ANR	5050616	Parameter	char * * input_line	740:28:21075:21091	5050501	0	True				
ANR	5050617	ParameterType	char * *		5050501	0					
ANR	5050618	Identifier	input_line		5050501	1					
ANR	5050619	CFGEntryNode	ENTRY		5050501		True				
ANR	5050620	CFGExitNode	EXIT		5050501		True				
ANR	5050621	Symbol	atoi		5050501						
ANR	5050622	Symbol	* input_line		5050501						
ANR	5050623	Symbol	NULL		5050501						
ANR	5050624	Symbol	& jobnum		5050501						
ANR	5050625	Symbol	jobnum		5050501						
ANR	5050626	Symbol	thread_cream_job_start		5050501						
ANR	5050627	Symbol	count_args		5050501						
ANR	5050628	Symbol	cmp_request_single		5050501						
ANR	5050629	Symbol	input_line		5050501						
ANR	5050630	Symbol	strdup		5050501						
ANR	5050631	Symbol	arg_cnt		5050501						
ANR	5050632	Function	thread_cream_job_start	771:0:21858:23827							
ANR	5050633	FunctionDef	thread_cream_job_start (Request * * reqlist)		5050632	0					
ANR	5050634	CompoundStatement		772:0:21906:23827	5050632	0					
ANR	5050635	IfStatement	if ( reqlist == NULL )		5050632	0					
ANR	5050636	Condition	reqlist == NULL	778:4:22133:22147	5050632	0	True				
ANR	5050637	EqualityExpression	reqlist == NULL		5050632	0		==			
ANR	5050638	Identifier	reqlist		5050632	0					
ANR	5050639	Identifier	NULL		5050632	1					
ANR	5050640	CompoundStatement		7:21:243:243	5050632	1					
ANR	5050641	ExpressionStatement	"internal_error ( ""thread_cream_job_start called with NULL pointer\\n"" )"	779:2:22154:22221	5050632	0	True				
ANR	5050642	CallExpression	"internal_error ( ""thread_cream_job_start called with NULL pointer\\n"" )"		5050632	0					
ANR	5050643	Callee	internal_error		5050632	0					
ANR	5050644	Identifier	internal_error		5050632	0					
ANR	5050645	ArgumentList	"""thread_cream_job_start called with NULL pointer\\n"""		5050632	1					
ANR	5050646	Argument	"""thread_cream_job_start called with NULL pointer\\n"""		5050632	0					
ANR	5050647	PrimaryExpression	"""thread_cream_job_start called with NULL pointer\\n"""		5050632	0					
ANR	5050648	IfStatement	if ( reqlist [ 0 ] == NULL )		5050632	1					
ANR	5050649	Condition	reqlist [ 0 ] == NULL	781:4:22230:22247	5050632	0	True				
ANR	5050650	EqualityExpression	reqlist [ 0 ] == NULL		5050632	0		==			
ANR	5050651	ArrayIndexing	reqlist [ 0 ]		5050632	0					
ANR	5050652	Identifier	reqlist		5050632	0					
ANR	5050653	PrimaryExpression	0		5050632	1					
ANR	5050654	Identifier	NULL		5050632	1					
ANR	5050655	CompoundStatement		10:24:343:343	5050632	1					
ANR	5050656	ExpressionStatement	"internal_error ( ""thread_cream_job_start called with empty list\\n"" )"	782:2:22254:22319	5050632	0	True				
ANR	5050657	CallExpression	"internal_error ( ""thread_cream_job_start called with empty list\\n"" )"		5050632	0					
ANR	5050658	Callee	internal_error		5050632	0					
ANR	5050659	Identifier	internal_error		5050632	0					
ANR	5050660	ArgumentList	"""thread_cream_job_start called with empty list\\n"""		5050632	1					
ANR	5050661	Argument	"""thread_cream_job_start called with empty list\\n"""		5050632	0					
ANR	5050662	PrimaryExpression	"""thread_cream_job_start called with empty list\\n"""		5050632	0					
ANR	5050663	IdentifierDeclStatement	char * service ;	785:1:22327:22340	5050632	2	True				
ANR	5050664	IdentifierDecl	* service		5050632	0					
ANR	5050665	IdentifierDeclType	char *		5050632	0					
ANR	5050666	Identifier	service		5050632	1					
ANR	5050667	ExpressionStatement	"process_string_arg ( reqlist [ 0 ] -> input_line [ 2 ] , & service )"	786:1:22343:22400	5050632	3	True				
ANR	5050668	CallExpression	"process_string_arg ( reqlist [ 0 ] -> input_line [ 2 ] , & service )"		5050632	0					
ANR	5050669	Callee	process_string_arg		5050632	0					
ANR	5050670	Identifier	process_string_arg		5050632	0					
ANR	5050671	ArgumentList	reqlist [ 0 ] -> input_line [ 2 ]		5050632	1					
ANR	5050672	Argument	reqlist [ 0 ] -> input_line [ 2 ]		5050632	0					
ANR	5050673	ArrayIndexing	reqlist [ 0 ] -> input_line [ 2 ]		5050632	0					
ANR	5050674	PtrMemberAccess	reqlist [ 0 ] -> input_line		5050632	0					
ANR	5050675	ArrayIndexing	reqlist [ 0 ]		5050632	0					
ANR	5050676	Identifier	reqlist		5050632	0					
ANR	5050677	PrimaryExpression	0		5050632	1					
ANR	5050678	Identifier	input_line		5050632	1					
ANR	5050679	PrimaryExpression	2		5050632	1					
ANR	5050680	Argument	& service		5050632	1					
ANR	5050681	UnaryOperationExpression	& service		5050632	0					
ANR	5050682	UnaryOperator	&		5050632	0					
ANR	5050683	Identifier	service		5050632	1					
ANR	5050684	IdentifierDeclStatement	string proxy = reqlist [ 0 ] -> proxy ;	787:1:22403:22435	5050632	4	True				
ANR	5050685	IdentifierDecl	proxy = reqlist [ 0 ] -> proxy		5050632	0					
ANR	5050686	IdentifierDeclType	string		5050632	0					
ANR	5050687	Identifier	proxy		5050632	1					
ANR	5050688	AssignmentExpression	proxy = reqlist [ 0 ] -> proxy		5050632	2		=			
ANR	5050689	Identifier	proxy		5050632	0					
ANR	5050690	PtrMemberAccess	reqlist [ 0 ] -> proxy		5050632	1					
ANR	5050691	ArrayIndexing	reqlist [ 0 ]		5050632	0					
ANR	5050692	Identifier	reqlist		5050632	0					
ANR	5050693	PrimaryExpression	0		5050632	1					
ANR	5050694	Identifier	proxy		5050632	1					
ANR	5050695	IdentifierDeclStatement	AbsCreamProxy * cp = NULL ;	788:1:22438:22462	5050632	5	True				
ANR	5050696	IdentifierDecl	* cp = NULL		5050632	0					
ANR	5050697	IdentifierDeclType	AbsCreamProxy *		5050632	0					
ANR	5050698	Identifier	cp		5050632	1					
ANR	5050699	AssignmentExpression	* cp = NULL		5050632	2		=			
ANR	5050700	Identifier	NULL		5050632	0					
ANR	5050701	Identifier	NULL		5050632	1					
ANR	5050702	IdentifierDeclStatement	vector < string > reqids ;	790:1:22466:22487	5050632	6	True				
ANR	5050703	IdentifierDecl	reqids		5050632	0					
ANR	5050704	IdentifierDeclType	vector < string >		5050632	0					
ANR	5050705	Identifier	reqids		5050632	1					
ANR	5050706	IdentifierDeclStatement	"map < string , string > results ;"	791:1:22490:22517	5050632	7	True				
ANR	5050707	IdentifierDecl	results		5050632	0					
ANR	5050708	IdentifierDeclType	"map < string , string >"		5050632	0					
ANR	5050709	Identifier	results		5050632	1					
ANR	5050710	TryStatement	try		5050632	8					
ANR	5050711	CompoundStatement		33:2:1006:1022	5050632	0					
ANR	5050712	IdentifierDeclStatement	vector < JobIdWrapper > jv ;		5050632	0					
ANR	5050713	IdentifierDecl	jv		5050632	0					
ANR	5050714	IdentifierDeclType	vector < JobIdWrapper >		5050632	0					
ANR	5050715	Identifier	jv		5050632	1					
ANR	5050716	ExpressionStatement	"collect_job_ids ( reqlist , jv , reqids )"		5050632	1					
ANR	5050717	CallExpression	"collect_job_ids ( reqlist , jv , reqids )"		5050632	0					
ANR	5050718	Callee	collect_job_ids		5050632	0					
ANR	5050719	Identifier	collect_job_ids		5050632	0					
ANR	5050720	ArgumentList	reqlist		5050632	1					
ANR	5050721	Argument	reqlist		5050632	0					
ANR	5050722	Identifier	reqlist		5050632	0					
ANR	5050723	Argument	jv		5050632	1					
ANR	5050724	Identifier	jv		5050632	0					
ANR	5050725	Argument	reqids		5050632	2					
ANR	5050726	Identifier	reqids		5050632	0					
ANR	5050727	IdentifierDeclStatement	vector < string > sv ;		5050632	2					
ANR	5050728	IdentifierDecl	sv		5050632	0					
ANR	5050729	IdentifierDeclType	vector < string >		5050632	0					
ANR	5050730	Identifier	sv		5050632	1					
ANR	5050731	IdentifierDeclStatement	"JobFilterWrapper jfw ( jv , sv , - 1 , - 1 , """" , """" ) ;"		5050632	3					
ANR	5050732	IdentifierDecl	"jfw ( jv , sv , - 1 , - 1 , """" , """" )"		5050632	0					
ANR	5050733	IdentifierDeclType	JobFilterWrapper		5050632	0					
ANR	5050734	Identifier	jfw		5050632	1					
ANR	5050735	Expression	"jv , sv , - 1 , - 1 , """" , """""		5050632	2					
ANR	5050736	Identifier	jv		5050632	0					
ANR	5050737	Expression	"sv , - 1 , - 1 , """" , """""		5050632	1					
ANR	5050738	Identifier	sv		5050632	0					
ANR	5050739	Expression	"- 1 , - 1 , """" , """""		5050632	1					
ANR	5050740	UnaryOperationExpression	- 1		5050632	0					
ANR	5050741	UnaryOperator	-		5050632	0					
ANR	5050742	PrimaryExpression	1		5050632	1					
ANR	5050743	Expression	"- 1 , """" , """""		5050632	1					
ANR	5050744	UnaryOperationExpression	- 1		5050632	0					
ANR	5050745	UnaryOperator	-		5050632	0					
ANR	5050746	PrimaryExpression	1		5050632	1					
ANR	5050747	Expression	""""" , """""		5050632	1					
ANR	5050748	PrimaryExpression	""""""		5050632	0					
ANR	5050749	PrimaryExpression	""""""		5050632	1					
ANR	5050750	IdentifierDeclStatement	ResultWrapper rw ;		5050632	4					
ANR	5050751	IdentifierDecl	rw		5050632	0					
ANR	5050752	IdentifierDeclType	ResultWrapper		5050632	0					
ANR	5050753	Identifier	rw		5050632	1					
ANR	5050754	ExpressionStatement	"cp = CreamProxyFactory :: make_CreamProxyStart ( & jfw , & rw , DEFAULT_TIMEOUT )"		5050632	5					
ANR	5050755	AssignmentExpression	"cp = CreamProxyFactory :: make_CreamProxyStart ( & jfw , & rw , DEFAULT_TIMEOUT )"		5050632	0		=			
ANR	5050756	Identifier	cp		5050632	0					
ANR	5050757	CallExpression	"CreamProxyFactory :: make_CreamProxyStart ( & jfw , & rw , DEFAULT_TIMEOUT )"		5050632	1					
ANR	5050758	Callee	CreamProxyFactory :: make_CreamProxyStart		5050632	0					
ANR	5050759	Identifier	CreamProxyFactory :: make_CreamProxyStart		5050632	0					
ANR	5050760	ArgumentList	& jfw		5050632	1					
ANR	5050761	Argument	& jfw		5050632	0					
ANR	5050762	UnaryOperationExpression	& jfw		5050632	0					
ANR	5050763	UnaryOperator	&		5050632	0					
ANR	5050764	Identifier	jfw		5050632	1					
ANR	5050765	Argument	& rw		5050632	1					
ANR	5050766	UnaryOperationExpression	& rw		5050632	0					
ANR	5050767	UnaryOperator	&		5050632	0					
ANR	5050768	Identifier	rw		5050632	1					
ANR	5050769	Argument	DEFAULT_TIMEOUT		5050632	2					
ANR	5050770	Identifier	DEFAULT_TIMEOUT		5050632	0					
ANR	5050771	ExpressionStatement	check_for_factory_error ( cp )		5050632	6					
ANR	5050772	CallExpression	check_for_factory_error ( cp )		5050632	0					
ANR	5050773	Callee	check_for_factory_error		5050632	0					
ANR	5050774	Identifier	check_for_factory_error		5050632	0					
ANR	5050775	ArgumentList	cp		5050632	1					
ANR	5050776	Argument	cp		5050632	0					
ANR	5050777	Identifier	cp		5050632	0					
ANR	5050778	ExpressionStatement	cp -> setCredential ( proxy . c_str ( ) )		5050632	7					
ANR	5050779	CallExpression	cp -> setCredential ( proxy . c_str ( ) )		5050632	0					
ANR	5050780	Callee	cp -> setCredential		5050632	0					
ANR	5050781	PtrMemberAccess	cp -> setCredential		5050632	0					
ANR	5050782	Identifier	cp		5050632	0					
ANR	5050783	Identifier	setCredential		5050632	1					
ANR	5050784	ArgumentList	proxy . c_str ( )		5050632	1					
ANR	5050785	Argument	proxy . c_str ( )		5050632	0					
ANR	5050786	CallExpression	proxy . c_str ( )		5050632	0					
ANR	5050787	Callee	proxy . c_str		5050632	0					
ANR	5050788	MemberAccess	proxy . c_str		5050632	0					
ANR	5050789	Identifier	proxy		5050632	0					
ANR	5050790	Identifier	c_str		5050632	1					
ANR	5050791	ArgumentList			5050632	1					
ANR	5050792	ExpressionStatement	cp -> execute ( service )		5050632	8					
ANR	5050793	CallExpression	cp -> execute ( service )		5050632	0					
ANR	5050794	Callee	cp -> execute		5050632	0					
ANR	5050795	PtrMemberAccess	cp -> execute		5050632	0					
ANR	5050796	Identifier	cp		5050632	0					
ANR	5050797	Identifier	execute		5050632	1					
ANR	5050798	ArgumentList	service		5050632	1					
ANR	5050799	Argument	service		5050632	0					
ANR	5050800	Identifier	service		5050632	0					
ANR	5050801	ExpressionStatement	"check_result_wrapper2 ( rw , results )"		5050632	9					
ANR	5050802	CallExpression	"check_result_wrapper2 ( rw , results )"		5050632	0					
ANR	5050803	Callee	check_result_wrapper2		5050632	0					
ANR	5050804	Identifier	check_result_wrapper2		5050632	0					
ANR	5050805	ArgumentList	rw		5050632	1					
ANR	5050806	Argument	rw		5050632	0					
ANR	5050807	Identifier	rw		5050632	0					
ANR	5050808	Argument	results		5050632	1					
ANR	5050809	Identifier	results		5050632	0					
ANR	5050810	Statement	delete		5050632	10					
ANR	5050811	ExpressionStatement	cp		5050632	11					
ANR	5050812	Identifier	cp		5050632	0					
ANR	5050813	CatchList			5050632	1					
ANR	5050814	CatchStatement	catch ( std :: exception & ex )		5050632	0					
ANR	5050815	Identifier	ex		5050632	0					
ANR	5050816	CompoundStatement		43:27:1300:1300	5050632	1					
ANR	5050817	Statement	delete	815:2:23211:23216	5050632	0	True				
ANR	5050818	ExpressionStatement	cp	815:9:23218:23220	5050632	1	True				
ANR	5050819	Identifier	cp		5050632	0					
ANR	5050820	ForStatement	for ( vector < string > :: const_iterator it = reqids . begin ( ) ; it != reqids . end ( ) ; it ++ )		5050632	2					
ANR	5050821	ForInit	vector < string > :: const_iterator it = reqids . begin ( ) ;	816:6:23228:23278	5050632	0	True				
ANR	5050822	IdentifierDeclStatement	vector < string > :: const_iterator it = reqids . begin ( ) ;		5050632	0					
ANR	5050823	IdentifierDecl	it = reqids . begin ( )		5050632	0					
ANR	5050824	IdentifierDeclType	vector < string > :: const_iterator		5050632	0					
ANR	5050825	Identifier	it		5050632	1					
ANR	5050826	AssignmentExpression	it = reqids . begin ( )		5050632	2		=			
ANR	5050827	Identifier	it		5050632	0					
ANR	5050828	CallExpression	reqids . begin ( )		5050632	1					
ANR	5050829	Callee	reqids . begin		5050632	0					
ANR	5050830	MemberAccess	reqids . begin		5050632	0					
ANR	5050831	Identifier	reqids		5050632	0					
ANR	5050832	Identifier	begin		5050632	1					
ANR	5050833	ArgumentList			5050632	1					
ANR	5050834	Condition	it != reqids . end ( )	817:3:23283:23300	5050632	1	True				
ANR	5050835	EqualityExpression	it != reqids . end ( )		5050632	0		!=			
ANR	5050836	Identifier	it		5050632	0					
ANR	5050837	CallExpression	reqids . end ( )		5050632	1					
ANR	5050838	Callee	reqids . end		5050632	0					
ANR	5050839	MemberAccess	reqids . end		5050632	0					
ANR	5050840	Identifier	reqids		5050632	0					
ANR	5050841	Identifier	end		5050632	1					
ANR	5050842	ArgumentList			5050632	1					
ANR	5050843	PostIncDecOperationExpression	it ++	817:23:23303:23306	5050632	2	True				
ANR	5050844	Identifier	it		5050632	0					
ANR	5050845	IncDec	++		5050632	1					
ANR	5050846	CompoundStatement		48:3:1411:1447	5050632	3					
ANR	5050847	IdentifierDeclStatement	char * msg = escape_spaces ( ex . what ( ) ) ;	819:3:23318:23354	5050632	0	True				
ANR	5050848	IdentifierDecl	* msg = escape_spaces ( ex . what ( ) )		5050632	0					
ANR	5050849	IdentifierDeclType	char *		5050632	0					
ANR	5050850	Identifier	msg		5050632	1					
ANR	5050851	AssignmentExpression	* msg = escape_spaces ( ex . what ( ) )		5050632	2		=			
ANR	5050852	Identifier	msg		5050632	0					
ANR	5050853	CallExpression	escape_spaces ( ex . what ( ) )		5050632	1					
ANR	5050854	Callee	escape_spaces		5050632	0					
ANR	5050855	Identifier	escape_spaces		5050632	0					
ANR	5050856	ArgumentList	ex . what ( )		5050632	1					
ANR	5050857	Argument	ex . what ( )		5050632	0					
ANR	5050858	CallExpression	ex . what ( )		5050632	0					
ANR	5050859	Callee	ex . what		5050632	0					
ANR	5050860	MemberAccess	ex . what		5050632	0					
ANR	5050861	Identifier	ex		5050632	0					
ANR	5050862	Identifier	what		5050632	1					
ANR	5050863	ArgumentList			5050632	1					
ANR	5050864	ExpressionStatement	"enqueue_result ( ( * it ) + "" CREAM_Job_Start\\\\ Error:\\\\ "" + msg )"	820:3:23359:23419	5050632	1	True				
ANR	5050865	CallExpression	"enqueue_result ( ( * it ) + "" CREAM_Job_Start\\\\ Error:\\\\ "" + msg )"		5050632	0					
ANR	5050866	Callee	enqueue_result		5050632	0					
ANR	5050867	Identifier	enqueue_result		5050632	0					
ANR	5050868	ArgumentList	"( * it ) + "" CREAM_Job_Start\\\\ Error:\\\\ "" + msg"		5050632	1					
ANR	5050869	Argument	"( * it ) + "" CREAM_Job_Start\\\\ Error:\\\\ "" + msg"		5050632	0					
ANR	5050870	AdditiveExpression	"( * it ) + "" CREAM_Job_Start\\\\ Error:\\\\ "" + msg"		5050632	0		+			
ANR	5050871	UnaryOperationExpression	* it		5050632	0					
ANR	5050872	UnaryOperator	*		5050632	0					
ANR	5050873	Identifier	it		5050632	1					
ANR	5050874	AdditiveExpression	""" CREAM_Job_Start\\\\ Error:\\\\ "" + msg"		5050632	1		+			
ANR	5050875	PrimaryExpression	""" CREAM_Job_Start\\\\ Error:\\\\ """		5050632	0					
ANR	5050876	Identifier	msg		5050632	1					
ANR	5050877	ExpressionStatement	free ( msg )	821:3:23424:23433	5050632	2	True				
ANR	5050878	CallExpression	free ( msg )		5050632	0					
ANR	5050879	Callee	free		5050632	0					
ANR	5050880	Identifier	free		5050632	0					
ANR	5050881	ArgumentList	msg		5050632	1					
ANR	5050882	Argument	msg		5050632	0					
ANR	5050883	Identifier	msg		5050632	0					
ANR	5050884	ReturnStatement	return 1 ;	824:2:23444:23452	5050632	3	True				
ANR	5050885	PrimaryExpression	1		5050632	0					
ANR	5050886	ForStatement	for ( int idx = 0 ; reqlist [ idx ] != NULL ; idx ++ )		5050632	9					
ANR	5050887	ForInit	int idx = 0 ;	827:7:23466:23477	5050632	0	True				
ANR	5050888	IdentifierDeclStatement	int idx = 0 ;		5050632	0					
ANR	5050889	IdentifierDecl	idx = 0		5050632	0					
ANR	5050890	IdentifierDeclType	int		5050632	0					
ANR	5050891	Identifier	idx		5050632	1					
ANR	5050892	AssignmentExpression	idx = 0		5050632	2		=			
ANR	5050893	Identifier	idx		5050632	0					
ANR	5050894	PrimaryExpression	0		5050632	1					
ANR	5050895	Condition	reqlist [ idx ] != NULL	827:20:23479:23498	5050632	1	True				
ANR	5050896	EqualityExpression	reqlist [ idx ] != NULL		5050632	0		!=			
ANR	5050897	ArrayIndexing	reqlist [ idx ]		5050632	0					
ANR	5050898	Identifier	reqlist		5050632	0					
ANR	5050899	Identifier	idx		5050632	1					
ANR	5050900	Identifier	NULL		5050632	1					
ANR	5050901	PostIncDecOperationExpression	idx ++	827:42:23501:23505	5050632	2	True				
ANR	5050902	Identifier	idx		5050632	0					
ANR	5050903	IncDec	++		5050632	1					
ANR	5050904	CompoundStatement		58:2:1652:1694	5050632	3					
ANR	5050905	IdentifierDeclStatement	string reqid = reqlist [ idx ] -> input_line [ 1 ] ;	828:2:23513:23555	5050632	0	True				
ANR	5050906	IdentifierDecl	reqid = reqlist [ idx ] -> input_line [ 1 ]		5050632	0					
ANR	5050907	IdentifierDeclType	string		5050632	0					
ANR	5050908	Identifier	reqid		5050632	1					
ANR	5050909	AssignmentExpression	reqid = reqlist [ idx ] -> input_line [ 1 ]		5050632	2		=			
ANR	5050910	Identifier	reqid		5050632	0					
ANR	5050911	ArrayIndexing	reqlist [ idx ] -> input_line [ 1 ]		5050632	1					
ANR	5050912	PtrMemberAccess	reqlist [ idx ] -> input_line		5050632	0					
ANR	5050913	ArrayIndexing	reqlist [ idx ]		5050632	0					
ANR	5050914	Identifier	reqlist		5050632	0					
ANR	5050915	Identifier	idx		5050632	1					
ANR	5050916	Identifier	input_line		5050632	1					
ANR	5050917	PrimaryExpression	1		5050632	1					
ANR	5050918	IdentifierDeclStatement	string jobid = reqlist [ idx ] -> input_line [ 4 ] ;	829:2:23559:23601	5050632	1	True				
ANR	5050919	IdentifierDecl	jobid = reqlist [ idx ] -> input_line [ 4 ]		5050632	0					
ANR	5050920	IdentifierDeclType	string		5050632	0					
ANR	5050921	Identifier	jobid		5050632	1					
ANR	5050922	AssignmentExpression	jobid = reqlist [ idx ] -> input_line [ 4 ]		5050632	2		=			
ANR	5050923	Identifier	jobid		5050632	0					
ANR	5050924	ArrayIndexing	reqlist [ idx ] -> input_line [ 4 ]		5050632	1					
ANR	5050925	PtrMemberAccess	reqlist [ idx ] -> input_line		5050632	0					
ANR	5050926	ArrayIndexing	reqlist [ idx ]		5050632	0					
ANR	5050927	Identifier	reqlist		5050632	0					
ANR	5050928	Identifier	idx		5050632	1					
ANR	5050929	Identifier	input_line		5050632	1					
ANR	5050930	PrimaryExpression	4		5050632	1					
ANR	5050931	IfStatement	"if ( results [ jobid ] != """" )"		5050632	2					
ANR	5050932	Condition	"results [ jobid ] != """""	830:7:23610:23629	5050632	0	True				
ANR	5050933	EqualityExpression	"results [ jobid ] != """""		5050632	0		!=			
ANR	5050934	ArrayIndexing	results [ jobid ]		5050632	0					
ANR	5050935	Identifier	results		5050632	0					
ANR	5050936	Identifier	jobid		5050632	1					
ANR	5050937	PrimaryExpression	""""""		5050632	1					
ANR	5050938	CompoundStatement		60:3:1731:1782	5050632	1					
ANR	5050939	IdentifierDeclStatement	char * msg = escape_spaces ( results [ jobid ] . c_str ( ) ) ;	831:3:23638:23689	5050632	0	True				
ANR	5050940	IdentifierDecl	* msg = escape_spaces ( results [ jobid ] . c_str ( ) )		5050632	0					
ANR	5050941	IdentifierDeclType	char *		5050632	0					
ANR	5050942	Identifier	msg		5050632	1					
ANR	5050943	AssignmentExpression	* msg = escape_spaces ( results [ jobid ] . c_str ( ) )		5050632	2		=			
ANR	5050944	Identifier	msg		5050632	0					
ANR	5050945	CallExpression	escape_spaces ( results [ jobid ] . c_str ( ) )		5050632	1					
ANR	5050946	Callee	escape_spaces		5050632	0					
ANR	5050947	Identifier	escape_spaces		5050632	0					
ANR	5050948	ArgumentList	results [ jobid ] . c_str ( )		5050632	1					
ANR	5050949	Argument	results [ jobid ] . c_str ( )		5050632	0					
ANR	5050950	CallExpression	results [ jobid ] . c_str ( )		5050632	0					
ANR	5050951	Callee	results [ jobid ] . c_str		5050632	0					
ANR	5050952	MemberAccess	results [ jobid ] . c_str		5050632	0					
ANR	5050953	ArrayIndexing	results [ jobid ]		5050632	0					
ANR	5050954	Identifier	results		5050632	0					
ANR	5050955	Identifier	jobid		5050632	1					
ANR	5050956	Identifier	c_str		5050632	1					
ANR	5050957	ArgumentList			5050632	1					
ANR	5050958	ExpressionStatement	"enqueue_result ( reqid + "" CREAM_Job_Start\\\\ Error:\\\\ "" + msg )"	832:3:23694:23756	5050632	1	True				
ANR	5050959	CallExpression	"enqueue_result ( reqid + "" CREAM_Job_Start\\\\ Error:\\\\ "" + msg )"		5050632	0					
ANR	5050960	Callee	enqueue_result		5050632	0					
ANR	5050961	Identifier	enqueue_result		5050632	0					
ANR	5050962	ArgumentList	"reqid + "" CREAM_Job_Start\\\\ Error:\\\\ "" + msg"		5050632	1					
ANR	5050963	Argument	"reqid + "" CREAM_Job_Start\\\\ Error:\\\\ "" + msg"		5050632	0					
ANR	5050964	AdditiveExpression	"reqid + "" CREAM_Job_Start\\\\ Error:\\\\ "" + msg"		5050632	0		+			
ANR	5050965	Identifier	reqid		5050632	0					
ANR	5050966	AdditiveExpression	""" CREAM_Job_Start\\\\ Error:\\\\ "" + msg"		5050632	1		+			
ANR	5050967	PrimaryExpression	""" CREAM_Job_Start\\\\ Error:\\\\ """		5050632	0					
ANR	5050968	Identifier	msg		5050632	1					
ANR	5050969	ElseStatement	else		5050632	0					
ANR	5050970	CompoundStatement		62:9:1860:1860	5050632	0					
ANR	5050971	ExpressionStatement	"enqueue_result ( reqid + "" NULL"" )"	834:3:23772:23805	5050632	0	True				
ANR	5050972	CallExpression	"enqueue_result ( reqid + "" NULL"" )"		5050632	0					
ANR	5050973	Callee	enqueue_result		5050632	0					
ANR	5050974	Identifier	enqueue_result		5050632	0					
ANR	5050975	ArgumentList	"reqid + "" NULL"""		5050632	1					
ANR	5050976	Argument	"reqid + "" NULL"""		5050632	0					
ANR	5050977	AdditiveExpression	"reqid + "" NULL"""		5050632	0		+			
ANR	5050978	Identifier	reqid		5050632	0					
ANR	5050979	PrimaryExpression	""" NULL"""		5050632	1					
ANR	5050980	ReturnStatement	return 0 ;	838:1:23817:23825	5050632	10	True				
ANR	5050981	PrimaryExpression	0		5050632	0					
ANR	5050982	ReturnType	int		5050632	1					
ANR	5050983	Identifier	thread_cream_job_start		5050632	2					
ANR	5050984	ParameterList	Request * * reqlist		5050632	3					
ANR	5050985	Parameter	Request * * reqlist	771:28:21886:21902	5050632	0	True				
ANR	5050986	ParameterType	Request * *		5050632	0					
ANR	5050987	Identifier	reqlist		5050632	1					
ANR	5050988	CFGEntryNode	ENTRY		5050632		True				
ANR	5050989	CFGExitNode	EXIT		5050632		True				
ANR	5050990	CFGErrorNode	ERROR		5050632		True				
ANR	5050991	Symbol	msg		5050632						
ANR	5050992	Symbol	results [ jobid ] . c_str		5050632						
ANR	5050993	Symbol	reqlist [ idx ] -> input_line		5050632						
ANR	5050994	Symbol	* jobid		5050632						
ANR	5050995	Symbol	* * * reqlist		5050632						
ANR	5050996	Symbol	* results		5050632						
ANR	5050997	Symbol	* * reqlist		5050632						
ANR	5050998	Symbol	reqid		5050632						
ANR	5050999	Symbol	* * idx		5050632						
ANR	5051000	Symbol	jobid		5050632						
ANR	5051001	Symbol	* reqlist [ idx ] -> input_line		5050632						
ANR	5051002	Symbol	reqids		5050632						
ANR	5051003	Symbol	reqlist [ 0 ] -> proxy		5050632						
ANR	5051004	Symbol	* idx		5050632						
ANR	5051005	Symbol	* reqlist [ 0 ] -> input_line		5050632						
ANR	5051006	Symbol	results		5050632						
ANR	5051007	Symbol	NULL		5050632						
ANR	5051008	Symbol	reqlist [ 0 ] -> input_line		5050632						
ANR	5051009	Symbol	& service		5050632						
ANR	5051010	Symbol	* reqlist		5050632						
ANR	5051011	Symbol	cp		5050632						
ANR	5051012	Symbol	proxy		5050632						
ANR	5051013	Symbol	reqlist		5050632						
ANR	5051014	Symbol	service		5050632						
ANR	5051015	Symbol	* * * idx		5050632						
ANR	5051016	Symbol	escape_spaces		5050632						
ANR	5051017	Symbol	idx		5050632						
ANR	5051018	Function	handle_cream_job_purge	847:0:24073:24485							
ANR	5051019	FunctionDef	handle_cream_job_purge (char * * input_line)		5051018	0					
ANR	5051020	CompoundStatement		848:0:24121:24485	5051018	0					
ANR	5051021	IdentifierDeclStatement	int arg_cnt = count_args ( input_line ) ;	849:1:24124:24162	5051018	0	True				
ANR	5051022	IdentifierDecl	arg_cnt = count_args ( input_line )		5051018	0					
ANR	5051023	IdentifierDeclType	int		5051018	0					
ANR	5051024	Identifier	arg_cnt		5051018	1					
ANR	5051025	AssignmentExpression	arg_cnt = count_args ( input_line )		5051018	2		=			
ANR	5051026	Identifier	arg_cnt		5051018	0					
ANR	5051027	CallExpression	count_args ( input_line )		5051018	1					
ANR	5051028	Callee	count_args		5051018	0					
ANR	5051029	Identifier	count_args		5051018	0					
ANR	5051030	ArgumentList	input_line		5051018	1					
ANR	5051031	Argument	input_line		5051018	0					
ANR	5051032	Identifier	input_line		5051018	0					
ANR	5051033	IdentifierDeclStatement	char * jobnum = NULL ;	850:1:24165:24184	5051018	1	True				
ANR	5051034	IdentifierDecl	* jobnum = NULL		5051018	0					
ANR	5051035	IdentifierDeclType	char *		5051018	0					
ANR	5051036	Identifier	jobnum		5051018	1					
ANR	5051037	AssignmentExpression	* jobnum = NULL		5051018	2		=			
ANR	5051038	Identifier	NULL		5051018	0					
ANR	5051039	Identifier	NULL		5051018	1					
ANR	5051040	IfStatement	if ( arg_cnt < 4 )		5051018	2					
ANR	5051041	Condition	arg_cnt < 4	852:6:24193:24203	5051018	0	True				
ANR	5051042	RelationalExpression	arg_cnt < 4		5051018	0		<			
ANR	5051043	Identifier	arg_cnt		5051018	0					
ANR	5051044	PrimaryExpression	4		5051018	1					
ANR	5051045	CompoundStatement		5:20:85:85	5051018	1					
ANR	5051046	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	853:2:24211:24232	5051018	0	True				
ANR	5051047	CallExpression	HANDLE_SYNTAX_ERROR ( )		5051018	0					
ANR	5051048	Callee	HANDLE_SYNTAX_ERROR		5051018	0					
ANR	5051049	Identifier	HANDLE_SYNTAX_ERROR		5051018	0					
ANR	5051050	ArgumentList			5051018	1					
ANR	5051051	ExpressionStatement	"process_string_arg ( input_line [ 3 ] , & jobnum )"	856:1:24239:24283	5051018	3	True				
ANR	5051052	CallExpression	"process_string_arg ( input_line [ 3 ] , & jobnum )"		5051018	0					
ANR	5051053	Callee	process_string_arg		5051018	0					
ANR	5051054	Identifier	process_string_arg		5051018	0					
ANR	5051055	ArgumentList	input_line [ 3 ]		5051018	1					
ANR	5051056	Argument	input_line [ 3 ]		5051018	0					
ANR	5051057	ArrayIndexing	input_line [ 3 ]		5051018	0					
ANR	5051058	Identifier	input_line		5051018	0					
ANR	5051059	PrimaryExpression	3		5051018	1					
ANR	5051060	Argument	& jobnum		5051018	1					
ANR	5051061	UnaryOperationExpression	& jobnum		5051018	0					
ANR	5051062	UnaryOperator	&		5051018	0					
ANR	5051063	Identifier	jobnum		5051018	1					
ANR	5051064	IfStatement	if ( jobnum && ( atoi ( jobnum ) + 4 != arg_cnt ) )		5051018	4					
ANR	5051065	Condition	jobnum && ( atoi ( jobnum ) + 4 != arg_cnt )	857:6:24291:24333	5051018	0	True				
ANR	5051066	AndExpression	jobnum && ( atoi ( jobnum ) + 4 != arg_cnt )		5051018	0		&&			
ANR	5051067	Identifier	jobnum		5051018	0					
ANR	5051068	EqualityExpression	atoi ( jobnum ) + 4 != arg_cnt		5051018	1		!=			
ANR	5051069	AdditiveExpression	atoi ( jobnum ) + 4		5051018	0		+			
ANR	5051070	CallExpression	atoi ( jobnum )		5051018	0					
ANR	5051071	Callee	atoi		5051018	0					
ANR	5051072	Identifier	atoi		5051018	0					
ANR	5051073	ArgumentList	jobnum		5051018	1					
ANR	5051074	Argument	jobnum		5051018	0					
ANR	5051075	Identifier	jobnum		5051018	0					
ANR	5051076	PrimaryExpression	4		5051018	1					
ANR	5051077	Identifier	arg_cnt		5051018	1					
ANR	5051078	CompoundStatement		10:52:215:215	5051018	1					
ANR	5051079	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	858:2:24341:24362	5051018	0	True				
ANR	5051080	CallExpression	HANDLE_SYNTAX_ERROR ( )		5051018	0					
ANR	5051081	Callee	HANDLE_SYNTAX_ERROR		5051018	0					
ANR	5051082	Identifier	HANDLE_SYNTAX_ERROR		5051018	0					
ANR	5051083	ArgumentList			5051018	1					
ANR	5051084	ExpressionStatement	"enqueue_request_batch ( input_line , thread_cream_job_purge , cmp_request_single )"	861:1:24369:24448	5051018	5	True				
ANR	5051085	CallExpression	"enqueue_request_batch ( input_line , thread_cream_job_purge , cmp_request_single )"		5051018	0					
ANR	5051086	Callee	enqueue_request_batch		5051018	0					
ANR	5051087	Identifier	enqueue_request_batch		5051018	0					
ANR	5051088	ArgumentList	input_line		5051018	1					
ANR	5051089	Argument	input_line		5051018	0					
ANR	5051090	Identifier	input_line		5051018	0					
ANR	5051091	Argument	thread_cream_job_purge		5051018	1					
ANR	5051092	Identifier	thread_cream_job_purge		5051018	0					
ANR	5051093	Argument	cmp_request_single		5051018	2					
ANR	5051094	Identifier	cmp_request_single		5051018	0					
ANR	5051095	ExpressionStatement	"gahp_printf ( ""S\\n"" )"	863:1:24452:24470	5051018	6	True				
ANR	5051096	CallExpression	"gahp_printf ( ""S\\n"" )"		5051018	0					
ANR	5051097	Callee	gahp_printf		5051018	0					
ANR	5051098	Identifier	gahp_printf		5051018	0					
ANR	5051099	ArgumentList	"""S\\n"""		5051018	1					
ANR	5051100	Argument	"""S\\n"""		5051018	0					
ANR	5051101	PrimaryExpression	"""S\\n"""		5051018	0					
ANR	5051102	ReturnStatement	return 0 ;	865:1:24475:24483	5051018	7	True				
ANR	5051103	PrimaryExpression	0		5051018	0					
ANR	5051104	ReturnType	int		5051018	1					
ANR	5051105	Identifier	handle_cream_job_purge		5051018	2					
ANR	5051106	ParameterList	char * * input_line		5051018	3					
ANR	5051107	Parameter	char * * input_line	847:28:24101:24117	5051018	0	True				
ANR	5051108	ParameterType	char * *		5051018	0					
ANR	5051109	Identifier	input_line		5051018	1					
ANR	5051110	CFGEntryNode	ENTRY		5051018		True				
ANR	5051111	CFGExitNode	EXIT		5051018		True				
ANR	5051112	Symbol	atoi		5051018						
ANR	5051113	Symbol	* input_line		5051018						
ANR	5051114	Symbol	NULL		5051018						
ANR	5051115	Symbol	& jobnum		5051018						
ANR	5051116	Symbol	jobnum		5051018						
ANR	5051117	Symbol	thread_cream_job_purge		5051018						
ANR	5051118	Symbol	count_args		5051018						
ANR	5051119	Symbol	cmp_request_single		5051018						
ANR	5051120	Symbol	input_line		5051018						
ANR	5051121	Symbol	arg_cnt		5051018						
ANR	5051122	Function	thread_cream_job_purge	868:0:24488:26379							
ANR	5051123	FunctionDef	thread_cream_job_purge (Request * * reqlist)		5051122	0					
ANR	5051124	CompoundStatement		869:0:24536:26379	5051122	0					
ANR	5051125	IfStatement	if ( reqlist == NULL )		5051122	0					
ANR	5051126	Condition	reqlist == NULL	875:4:24763:24777	5051122	0	True				
ANR	5051127	EqualityExpression	reqlist == NULL		5051122	0		==			
ANR	5051128	Identifier	reqlist		5051122	0					
ANR	5051129	Identifier	NULL		5051122	1					
ANR	5051130	CompoundStatement		7:21:243:243	5051122	1					
ANR	5051131	ExpressionStatement	"internal_error ( ""thread_cream_job_purge called with NULL pointer\\n"" )"	876:2:24784:24851	5051122	0	True				
ANR	5051132	CallExpression	"internal_error ( ""thread_cream_job_purge called with NULL pointer\\n"" )"		5051122	0					
ANR	5051133	Callee	internal_error		5051122	0					
ANR	5051134	Identifier	internal_error		5051122	0					
ANR	5051135	ArgumentList	"""thread_cream_job_purge called with NULL pointer\\n"""		5051122	1					
ANR	5051136	Argument	"""thread_cream_job_purge called with NULL pointer\\n"""		5051122	0					
ANR	5051137	PrimaryExpression	"""thread_cream_job_purge called with NULL pointer\\n"""		5051122	0					
ANR	5051138	IfStatement	if ( reqlist [ 0 ] == NULL )		5051122	1					
ANR	5051139	Condition	reqlist [ 0 ] == NULL	878:4:24860:24877	5051122	0	True				
ANR	5051140	EqualityExpression	reqlist [ 0 ] == NULL		5051122	0		==			
ANR	5051141	ArrayIndexing	reqlist [ 0 ]		5051122	0					
ANR	5051142	Identifier	reqlist		5051122	0					
ANR	5051143	PrimaryExpression	0		5051122	1					
ANR	5051144	Identifier	NULL		5051122	1					
ANR	5051145	CompoundStatement		10:24:343:343	5051122	1					
ANR	5051146	ExpressionStatement	"internal_error ( ""thread_cream_job_purge called with empty list\\n"" )"	879:2:24884:24949	5051122	0	True				
ANR	5051147	CallExpression	"internal_error ( ""thread_cream_job_purge called with empty list\\n"" )"		5051122	0					
ANR	5051148	Callee	internal_error		5051122	0					
ANR	5051149	Identifier	internal_error		5051122	0					
ANR	5051150	ArgumentList	"""thread_cream_job_purge called with empty list\\n"""		5051122	1					
ANR	5051151	Argument	"""thread_cream_job_purge called with empty list\\n"""		5051122	0					
ANR	5051152	PrimaryExpression	"""thread_cream_job_purge called with empty list\\n"""		5051122	0					
ANR	5051153	IdentifierDeclStatement	char * service ;	882:1:24956:24969	5051122	2	True				
ANR	5051154	IdentifierDecl	* service		5051122	0					
ANR	5051155	IdentifierDeclType	char *		5051122	0					
ANR	5051156	Identifier	service		5051122	1					
ANR	5051157	ExpressionStatement	"process_string_arg ( reqlist [ 0 ] -> input_line [ 2 ] , & service )"	883:1:24972:25029	5051122	3	True				
ANR	5051158	CallExpression	"process_string_arg ( reqlist [ 0 ] -> input_line [ 2 ] , & service )"		5051122	0					
ANR	5051159	Callee	process_string_arg		5051122	0					
ANR	5051160	Identifier	process_string_arg		5051122	0					
ANR	5051161	ArgumentList	reqlist [ 0 ] -> input_line [ 2 ]		5051122	1					
ANR	5051162	Argument	reqlist [ 0 ] -> input_line [ 2 ]		5051122	0					
ANR	5051163	ArrayIndexing	reqlist [ 0 ] -> input_line [ 2 ]		5051122	0					
ANR	5051164	PtrMemberAccess	reqlist [ 0 ] -> input_line		5051122	0					
ANR	5051165	ArrayIndexing	reqlist [ 0 ]		5051122	0					
ANR	5051166	Identifier	reqlist		5051122	0					
ANR	5051167	PrimaryExpression	0		5051122	1					
ANR	5051168	Identifier	input_line		5051122	1					
ANR	5051169	PrimaryExpression	2		5051122	1					
ANR	5051170	Argument	& service		5051122	1					
ANR	5051171	UnaryOperationExpression	& service		5051122	0					
ANR	5051172	UnaryOperator	&		5051122	0					
ANR	5051173	Identifier	service		5051122	1					
ANR	5051174	IdentifierDeclStatement	string proxy = reqlist [ 0 ] -> proxy ;	884:1:25032:25064	5051122	4	True				
ANR	5051175	IdentifierDecl	proxy = reqlist [ 0 ] -> proxy		5051122	0					
ANR	5051176	IdentifierDeclType	string		5051122	0					
ANR	5051177	Identifier	proxy		5051122	1					
ANR	5051178	AssignmentExpression	proxy = reqlist [ 0 ] -> proxy		5051122	2		=			
ANR	5051179	Identifier	proxy		5051122	0					
ANR	5051180	PtrMemberAccess	reqlist [ 0 ] -> proxy		5051122	1					
ANR	5051181	ArrayIndexing	reqlist [ 0 ]		5051122	0					
ANR	5051182	Identifier	reqlist		5051122	0					
ANR	5051183	PrimaryExpression	0		5051122	1					
ANR	5051184	Identifier	proxy		5051122	1					
ANR	5051185	IdentifierDeclStatement	AbsCreamProxy * cp = NULL ;	885:1:25067:25091	5051122	5	True				
ANR	5051186	IdentifierDecl	* cp = NULL		5051122	0					
ANR	5051187	IdentifierDeclType	AbsCreamProxy *		5051122	0					
ANR	5051188	Identifier	cp		5051122	1					
ANR	5051189	AssignmentExpression	* cp = NULL		5051122	2		=			
ANR	5051190	Identifier	NULL		5051122	0					
ANR	5051191	Identifier	NULL		5051122	1					
ANR	5051192	IdentifierDeclStatement	vector < string > reqids ;	887:1:25095:25116	5051122	6	True				
ANR	5051193	IdentifierDecl	reqids		5051122	0					
ANR	5051194	IdentifierDeclType	vector < string >		5051122	0					
ANR	5051195	Identifier	reqids		5051122	1					
ANR	5051196	IdentifierDeclStatement	"map < string , string > results ;"	888:1:25119:25146	5051122	7	True				
ANR	5051197	IdentifierDecl	results		5051122	0					
ANR	5051198	IdentifierDeclType	"map < string , string >"		5051122	0					
ANR	5051199	Identifier	results		5051122	1					
ANR	5051200	TryStatement	try		5051122	8					
ANR	5051201	CompoundStatement		33:2:930:946	5051122	0					
ANR	5051202	IdentifierDeclStatement	vector < JobIdWrapper > jv ;		5051122	0					
ANR	5051203	IdentifierDecl	jv		5051122	0					
ANR	5051204	IdentifierDeclType	vector < JobIdWrapper >		5051122	0					
ANR	5051205	Identifier	jv		5051122	1					
ANR	5051206	ExpressionStatement	"collect_job_ids ( reqlist , jv , reqids )"		5051122	1					
ANR	5051207	CallExpression	"collect_job_ids ( reqlist , jv , reqids )"		5051122	0					
ANR	5051208	Callee	collect_job_ids		5051122	0					
ANR	5051209	Identifier	collect_job_ids		5051122	0					
ANR	5051210	ArgumentList	reqlist		5051122	1					
ANR	5051211	Argument	reqlist		5051122	0					
ANR	5051212	Identifier	reqlist		5051122	0					
ANR	5051213	Argument	jv		5051122	1					
ANR	5051214	Identifier	jv		5051122	0					
ANR	5051215	Argument	reqids		5051122	2					
ANR	5051216	Identifier	reqids		5051122	0					
ANR	5051217	IdentifierDeclStatement	vector < string > sv ;		5051122	2					
ANR	5051218	IdentifierDecl	sv		5051122	0					
ANR	5051219	IdentifierDeclType	vector < string >		5051122	0					
ANR	5051220	Identifier	sv		5051122	1					
ANR	5051221	IdentifierDeclStatement	"JobFilterWrapper jfw ( jv , sv , - 1 , - 1 , """" , """" ) ;"		5051122	3					
ANR	5051222	IdentifierDecl	"jfw ( jv , sv , - 1 , - 1 , """" , """" )"		5051122	0					
ANR	5051223	IdentifierDeclType	JobFilterWrapper		5051122	0					
ANR	5051224	Identifier	jfw		5051122	1					
ANR	5051225	Expression	"jv , sv , - 1 , - 1 , """" , """""		5051122	2					
ANR	5051226	Identifier	jv		5051122	0					
ANR	5051227	Expression	"sv , - 1 , - 1 , """" , """""		5051122	1					
ANR	5051228	Identifier	sv		5051122	0					
ANR	5051229	Expression	"- 1 , - 1 , """" , """""		5051122	1					
ANR	5051230	UnaryOperationExpression	- 1		5051122	0					
ANR	5051231	UnaryOperator	-		5051122	0					
ANR	5051232	PrimaryExpression	1		5051122	1					
ANR	5051233	Expression	"- 1 , """" , """""		5051122	1					
ANR	5051234	UnaryOperationExpression	- 1		5051122	0					
ANR	5051235	UnaryOperator	-		5051122	0					
ANR	5051236	PrimaryExpression	1		5051122	1					
ANR	5051237	Expression	""""" , """""		5051122	1					
ANR	5051238	PrimaryExpression	""""""		5051122	0					
ANR	5051239	PrimaryExpression	""""""		5051122	1					
ANR	5051240	IdentifierDeclStatement	ResultWrapper rw ;		5051122	4					
ANR	5051241	IdentifierDecl	rw		5051122	0					
ANR	5051242	IdentifierDeclType	ResultWrapper		5051122	0					
ANR	5051243	Identifier	rw		5051122	1					
ANR	5051244	ExpressionStatement	"cp = CreamProxyFactory :: make_CreamProxyPurge ( & jfw , & rw , DEFAULT_TIMEOUT )"		5051122	5					
ANR	5051245	AssignmentExpression	"cp = CreamProxyFactory :: make_CreamProxyPurge ( & jfw , & rw , DEFAULT_TIMEOUT )"		5051122	0		=			
ANR	5051246	Identifier	cp		5051122	0					
ANR	5051247	CallExpression	"CreamProxyFactory :: make_CreamProxyPurge ( & jfw , & rw , DEFAULT_TIMEOUT )"		5051122	1					
ANR	5051248	Callee	CreamProxyFactory :: make_CreamProxyPurge		5051122	0					
ANR	5051249	Identifier	CreamProxyFactory :: make_CreamProxyPurge		5051122	0					
ANR	5051250	ArgumentList	& jfw		5051122	1					
ANR	5051251	Argument	& jfw		5051122	0					
ANR	5051252	UnaryOperationExpression	& jfw		5051122	0					
ANR	5051253	UnaryOperator	&		5051122	0					
ANR	5051254	Identifier	jfw		5051122	1					
ANR	5051255	Argument	& rw		5051122	1					
ANR	5051256	UnaryOperationExpression	& rw		5051122	0					
ANR	5051257	UnaryOperator	&		5051122	0					
ANR	5051258	Identifier	rw		5051122	1					
ANR	5051259	Argument	DEFAULT_TIMEOUT		5051122	2					
ANR	5051260	Identifier	DEFAULT_TIMEOUT		5051122	0					
ANR	5051261	ExpressionStatement	check_for_factory_error ( cp )		5051122	6					
ANR	5051262	CallExpression	check_for_factory_error ( cp )		5051122	0					
ANR	5051263	Callee	check_for_factory_error		5051122	0					
ANR	5051264	Identifier	check_for_factory_error		5051122	0					
ANR	5051265	ArgumentList	cp		5051122	1					
ANR	5051266	Argument	cp		5051122	0					
ANR	5051267	Identifier	cp		5051122	0					
ANR	5051268	ExpressionStatement	cp -> setCredential ( proxy . c_str ( ) )		5051122	7					
ANR	5051269	CallExpression	cp -> setCredential ( proxy . c_str ( ) )		5051122	0					
ANR	5051270	Callee	cp -> setCredential		5051122	0					
ANR	5051271	PtrMemberAccess	cp -> setCredential		5051122	0					
ANR	5051272	Identifier	cp		5051122	0					
ANR	5051273	Identifier	setCredential		5051122	1					
ANR	5051274	ArgumentList	proxy . c_str ( )		5051122	1					
ANR	5051275	Argument	proxy . c_str ( )		5051122	0					
ANR	5051276	CallExpression	proxy . c_str ( )		5051122	0					
ANR	5051277	Callee	proxy . c_str		5051122	0					
ANR	5051278	MemberAccess	proxy . c_str		5051122	0					
ANR	5051279	Identifier	proxy		5051122	0					
ANR	5051280	Identifier	c_str		5051122	1					
ANR	5051281	ArgumentList			5051122	1					
ANR	5051282	ExpressionStatement	cp -> execute ( service )		5051122	8					
ANR	5051283	CallExpression	cp -> execute ( service )		5051122	0					
ANR	5051284	Callee	cp -> execute		5051122	0					
ANR	5051285	PtrMemberAccess	cp -> execute		5051122	0					
ANR	5051286	Identifier	cp		5051122	0					
ANR	5051287	Identifier	execute		5051122	1					
ANR	5051288	ArgumentList	service		5051122	1					
ANR	5051289	Argument	service		5051122	0					
ANR	5051290	Identifier	service		5051122	0					
ANR	5051291	ExpressionStatement	"check_result_wrapper2 ( rw , results )"		5051122	9					
ANR	5051292	CallExpression	"check_result_wrapper2 ( rw , results )"		5051122	0					
ANR	5051293	Callee	check_result_wrapper2		5051122	0					
ANR	5051294	Identifier	check_result_wrapper2		5051122	0					
ANR	5051295	ArgumentList	rw		5051122	1					
ANR	5051296	Argument	rw		5051122	0					
ANR	5051297	Identifier	rw		5051122	0					
ANR	5051298	Argument	results		5051122	1					
ANR	5051299	Identifier	results		5051122	0					
ANR	5051300	Statement	delete		5051122	10					
ANR	5051301	ExpressionStatement	cp		5051122	11					
ANR	5051302	Identifier	cp		5051122	0					
ANR	5051303	CatchList			5051122	1					
ANR	5051304	CatchStatement	catch ( std :: exception & ex )		5051122	0					
ANR	5051305	Identifier	ex		5051122	0					
ANR	5051306	CompoundStatement		43:27:1224:1224	5051122	1					
ANR	5051307	Statement	delete	912:2:25765:25770	5051122	0	True				
ANR	5051308	ExpressionStatement	cp	912:9:25772:25774	5051122	1	True				
ANR	5051309	Identifier	cp		5051122	0					
ANR	5051310	ForStatement	for ( vector < string > :: const_iterator it = reqids . begin ( ) ; it != reqids . end ( ) ; it ++ )		5051122	2					
ANR	5051311	ForInit	vector < string > :: const_iterator it = reqids . begin ( ) ;	914:6:25783:25833	5051122	0	True				
ANR	5051312	IdentifierDeclStatement	vector < string > :: const_iterator it = reqids . begin ( ) ;		5051122	0					
ANR	5051313	IdentifierDecl	it = reqids . begin ( )		5051122	0					
ANR	5051314	IdentifierDeclType	vector < string > :: const_iterator		5051122	0					
ANR	5051315	Identifier	it		5051122	1					
ANR	5051316	AssignmentExpression	it = reqids . begin ( )		5051122	2		=			
ANR	5051317	Identifier	it		5051122	0					
ANR	5051318	CallExpression	reqids . begin ( )		5051122	1					
ANR	5051319	Callee	reqids . begin		5051122	0					
ANR	5051320	MemberAccess	reqids . begin		5051122	0					
ANR	5051321	Identifier	reqids		5051122	0					
ANR	5051322	Identifier	begin		5051122	1					
ANR	5051323	ArgumentList			5051122	1					
ANR	5051324	Condition	it != reqids . end ( )	915:3:25838:25855	5051122	1	True				
ANR	5051325	EqualityExpression	it != reqids . end ( )		5051122	0		!=			
ANR	5051326	Identifier	it		5051122	0					
ANR	5051327	CallExpression	reqids . end ( )		5051122	1					
ANR	5051328	Callee	reqids . end		5051122	0					
ANR	5051329	MemberAccess	reqids . end		5051122	0					
ANR	5051330	Identifier	reqids		5051122	0					
ANR	5051331	Identifier	end		5051122	1					
ANR	5051332	ArgumentList			5051122	1					
ANR	5051333	PostIncDecOperationExpression	it ++	915:23:25858:25861	5051122	2	True				
ANR	5051334	Identifier	it		5051122	0					
ANR	5051335	IncDec	++		5051122	1					
ANR	5051336	CompoundStatement		49:3:1333:1369	5051122	3					
ANR	5051337	IdentifierDeclStatement	char * msg = escape_spaces ( ex . what ( ) ) ;	917:3:25870:25906	5051122	0	True				
ANR	5051338	IdentifierDecl	* msg = escape_spaces ( ex . what ( ) )		5051122	0					
ANR	5051339	IdentifierDeclType	char *		5051122	0					
ANR	5051340	Identifier	msg		5051122	1					
ANR	5051341	AssignmentExpression	* msg = escape_spaces ( ex . what ( ) )		5051122	2		=			
ANR	5051342	Identifier	msg		5051122	0					
ANR	5051343	CallExpression	escape_spaces ( ex . what ( ) )		5051122	1					
ANR	5051344	Callee	escape_spaces		5051122	0					
ANR	5051345	Identifier	escape_spaces		5051122	0					
ANR	5051346	ArgumentList	ex . what ( )		5051122	1					
ANR	5051347	Argument	ex . what ( )		5051122	0					
ANR	5051348	CallExpression	ex . what ( )		5051122	0					
ANR	5051349	Callee	ex . what		5051122	0					
ANR	5051350	MemberAccess	ex . what		5051122	0					
ANR	5051351	Identifier	ex		5051122	0					
ANR	5051352	Identifier	what		5051122	1					
ANR	5051353	ArgumentList			5051122	1					
ANR	5051354	ExpressionStatement	"enqueue_result ( ( * it ) + "" CREAM_Job_Purge\\\\ Error:\\\\ "" + msg )"	918:3:25911:25971	5051122	1	True				
ANR	5051355	CallExpression	"enqueue_result ( ( * it ) + "" CREAM_Job_Purge\\\\ Error:\\\\ "" + msg )"		5051122	0					
ANR	5051356	Callee	enqueue_result		5051122	0					
ANR	5051357	Identifier	enqueue_result		5051122	0					
ANR	5051358	ArgumentList	"( * it ) + "" CREAM_Job_Purge\\\\ Error:\\\\ "" + msg"		5051122	1					
ANR	5051359	Argument	"( * it ) + "" CREAM_Job_Purge\\\\ Error:\\\\ "" + msg"		5051122	0					
ANR	5051360	AdditiveExpression	"( * it ) + "" CREAM_Job_Purge\\\\ Error:\\\\ "" + msg"		5051122	0		+			
ANR	5051361	UnaryOperationExpression	* it		5051122	0					
ANR	5051362	UnaryOperator	*		5051122	0					
ANR	5051363	Identifier	it		5051122	1					
ANR	5051364	AdditiveExpression	""" CREAM_Job_Purge\\\\ Error:\\\\ "" + msg"		5051122	1		+			
ANR	5051365	PrimaryExpression	""" CREAM_Job_Purge\\\\ Error:\\\\ """		5051122	0					
ANR	5051366	Identifier	msg		5051122	1					
ANR	5051367	ExpressionStatement	free ( msg )	919:3:25976:25985	5051122	2	True				
ANR	5051368	CallExpression	free ( msg )		5051122	0					
ANR	5051369	Callee	free		5051122	0					
ANR	5051370	Identifier	free		5051122	0					
ANR	5051371	ArgumentList	msg		5051122	1					
ANR	5051372	Argument	msg		5051122	0					
ANR	5051373	Identifier	msg		5051122	0					
ANR	5051374	ReturnStatement	return 1 ;	922:2:25996:26004	5051122	3	True				
ANR	5051375	PrimaryExpression	1		5051122	0					
ANR	5051376	ForStatement	for ( int idx = 0 ; reqlist [ idx ] != NULL ; idx ++ )		5051122	9					
ANR	5051377	ForInit	int idx = 0 ;	925:7:26018:26029	5051122	0	True				
ANR	5051378	IdentifierDeclStatement	int idx = 0 ;		5051122	0					
ANR	5051379	IdentifierDecl	idx = 0		5051122	0					
ANR	5051380	IdentifierDeclType	int		5051122	0					
ANR	5051381	Identifier	idx		5051122	1					
ANR	5051382	AssignmentExpression	idx = 0		5051122	2		=			
ANR	5051383	Identifier	idx		5051122	0					
ANR	5051384	PrimaryExpression	0		5051122	1					
ANR	5051385	Condition	reqlist [ idx ] != NULL	925:20:26031:26050	5051122	1	True				
ANR	5051386	EqualityExpression	reqlist [ idx ] != NULL		5051122	0		!=			
ANR	5051387	ArrayIndexing	reqlist [ idx ]		5051122	0					
ANR	5051388	Identifier	reqlist		5051122	0					
ANR	5051389	Identifier	idx		5051122	1					
ANR	5051390	Identifier	NULL		5051122	1					
ANR	5051391	PostIncDecOperationExpression	idx ++	925:42:26053:26057	5051122	2	True				
ANR	5051392	Identifier	idx		5051122	0					
ANR	5051393	IncDec	++		5051122	1					
ANR	5051394	CompoundStatement		59:2:1574:1616	5051122	3					
ANR	5051395	IdentifierDeclStatement	string reqid = reqlist [ idx ] -> input_line [ 1 ] ;	926:2:26065:26107	5051122	0	True				
ANR	5051396	IdentifierDecl	reqid = reqlist [ idx ] -> input_line [ 1 ]		5051122	0					
ANR	5051397	IdentifierDeclType	string		5051122	0					
ANR	5051398	Identifier	reqid		5051122	1					
ANR	5051399	AssignmentExpression	reqid = reqlist [ idx ] -> input_line [ 1 ]		5051122	2		=			
ANR	5051400	Identifier	reqid		5051122	0					
ANR	5051401	ArrayIndexing	reqlist [ idx ] -> input_line [ 1 ]		5051122	1					
ANR	5051402	PtrMemberAccess	reqlist [ idx ] -> input_line		5051122	0					
ANR	5051403	ArrayIndexing	reqlist [ idx ]		5051122	0					
ANR	5051404	Identifier	reqlist		5051122	0					
ANR	5051405	Identifier	idx		5051122	1					
ANR	5051406	Identifier	input_line		5051122	1					
ANR	5051407	PrimaryExpression	1		5051122	1					
ANR	5051408	IdentifierDeclStatement	string jobid = reqlist [ idx ] -> input_line [ 4 ] ;	927:2:26111:26153	5051122	1	True				
ANR	5051409	IdentifierDecl	jobid = reqlist [ idx ] -> input_line [ 4 ]		5051122	0					
ANR	5051410	IdentifierDeclType	string		5051122	0					
ANR	5051411	Identifier	jobid		5051122	1					
ANR	5051412	AssignmentExpression	jobid = reqlist [ idx ] -> input_line [ 4 ]		5051122	2		=			
ANR	5051413	Identifier	jobid		5051122	0					
ANR	5051414	ArrayIndexing	reqlist [ idx ] -> input_line [ 4 ]		5051122	1					
ANR	5051415	PtrMemberAccess	reqlist [ idx ] -> input_line		5051122	0					
ANR	5051416	ArrayIndexing	reqlist [ idx ]		5051122	0					
ANR	5051417	Identifier	reqlist		5051122	0					
ANR	5051418	Identifier	idx		5051122	1					
ANR	5051419	Identifier	input_line		5051122	1					
ANR	5051420	PrimaryExpression	4		5051122	1					
ANR	5051421	IfStatement	"if ( results [ jobid ] != """" )"		5051122	2					
ANR	5051422	Condition	"results [ jobid ] != """""	928:7:26162:26181	5051122	0	True				
ANR	5051423	EqualityExpression	"results [ jobid ] != """""		5051122	0		!=			
ANR	5051424	ArrayIndexing	results [ jobid ]		5051122	0					
ANR	5051425	Identifier	results		5051122	0					
ANR	5051426	Identifier	jobid		5051122	1					
ANR	5051427	PrimaryExpression	""""""		5051122	1					
ANR	5051428	CompoundStatement		61:3:1653:1704	5051122	1					
ANR	5051429	IdentifierDeclStatement	char * msg = escape_spaces ( results [ jobid ] . c_str ( ) ) ;	929:3:26190:26241	5051122	0	True				
ANR	5051430	IdentifierDecl	* msg = escape_spaces ( results [ jobid ] . c_str ( ) )		5051122	0					
ANR	5051431	IdentifierDeclType	char *		5051122	0					
ANR	5051432	Identifier	msg		5051122	1					
ANR	5051433	AssignmentExpression	* msg = escape_spaces ( results [ jobid ] . c_str ( ) )		5051122	2		=			
ANR	5051434	Identifier	msg		5051122	0					
ANR	5051435	CallExpression	escape_spaces ( results [ jobid ] . c_str ( ) )		5051122	1					
ANR	5051436	Callee	escape_spaces		5051122	0					
ANR	5051437	Identifier	escape_spaces		5051122	0					
ANR	5051438	ArgumentList	results [ jobid ] . c_str ( )		5051122	1					
ANR	5051439	Argument	results [ jobid ] . c_str ( )		5051122	0					
ANR	5051440	CallExpression	results [ jobid ] . c_str ( )		5051122	0					
ANR	5051441	Callee	results [ jobid ] . c_str		5051122	0					
ANR	5051442	MemberAccess	results [ jobid ] . c_str		5051122	0					
ANR	5051443	ArrayIndexing	results [ jobid ]		5051122	0					
ANR	5051444	Identifier	results		5051122	0					
ANR	5051445	Identifier	jobid		5051122	1					
ANR	5051446	Identifier	c_str		5051122	1					
ANR	5051447	ArgumentList			5051122	1					
ANR	5051448	ExpressionStatement	"enqueue_result ( reqid + "" CREAM_Job_Purge\\\\ Error:\\\\ "" + msg )"	930:3:26246:26308	5051122	1	True				
ANR	5051449	CallExpression	"enqueue_result ( reqid + "" CREAM_Job_Purge\\\\ Error:\\\\ "" + msg )"		5051122	0					
ANR	5051450	Callee	enqueue_result		5051122	0					
ANR	5051451	Identifier	enqueue_result		5051122	0					
ANR	5051452	ArgumentList	"reqid + "" CREAM_Job_Purge\\\\ Error:\\\\ "" + msg"		5051122	1					
ANR	5051453	Argument	"reqid + "" CREAM_Job_Purge\\\\ Error:\\\\ "" + msg"		5051122	0					
ANR	5051454	AdditiveExpression	"reqid + "" CREAM_Job_Purge\\\\ Error:\\\\ "" + msg"		5051122	0		+			
ANR	5051455	Identifier	reqid		5051122	0					
ANR	5051456	AdditiveExpression	""" CREAM_Job_Purge\\\\ Error:\\\\ "" + msg"		5051122	1		+			
ANR	5051457	PrimaryExpression	""" CREAM_Job_Purge\\\\ Error:\\\\ """		5051122	0					
ANR	5051458	Identifier	msg		5051122	1					
ANR	5051459	ElseStatement	else		5051122	0					
ANR	5051460	CompoundStatement		63:9:1782:1782	5051122	0					
ANR	5051461	ExpressionStatement	"enqueue_result ( reqid + "" NULL"" )"	932:3:26324:26357	5051122	0	True				
ANR	5051462	CallExpression	"enqueue_result ( reqid + "" NULL"" )"		5051122	0					
ANR	5051463	Callee	enqueue_result		5051122	0					
ANR	5051464	Identifier	enqueue_result		5051122	0					
ANR	5051465	ArgumentList	"reqid + "" NULL"""		5051122	1					
ANR	5051466	Argument	"reqid + "" NULL"""		5051122	0					
ANR	5051467	AdditiveExpression	"reqid + "" NULL"""		5051122	0		+			
ANR	5051468	Identifier	reqid		5051122	0					
ANR	5051469	PrimaryExpression	""" NULL"""		5051122	1					
ANR	5051470	ReturnStatement	return 0 ;	936:1:26369:26377	5051122	10	True				
ANR	5051471	PrimaryExpression	0		5051122	0					
ANR	5051472	ReturnType	int		5051122	1					
ANR	5051473	Identifier	thread_cream_job_purge		5051122	2					
ANR	5051474	ParameterList	Request * * reqlist		5051122	3					
ANR	5051475	Parameter	Request * * reqlist	868:28:24516:24532	5051122	0	True				
ANR	5051476	ParameterType	Request * *		5051122	0					
ANR	5051477	Identifier	reqlist		5051122	1					
ANR	5051478	CFGEntryNode	ENTRY		5051122		True				
ANR	5051479	CFGExitNode	EXIT		5051122		True				
ANR	5051480	CFGErrorNode	ERROR		5051122		True				
ANR	5051481	Symbol	msg		5051122						
ANR	5051482	Symbol	results [ jobid ] . c_str		5051122						
ANR	5051483	Symbol	reqlist [ idx ] -> input_line		5051122						
ANR	5051484	Symbol	* jobid		5051122						
ANR	5051485	Symbol	* * * reqlist		5051122						
ANR	5051486	Symbol	* results		5051122						
ANR	5051487	Symbol	* * reqlist		5051122						
ANR	5051488	Symbol	reqid		5051122						
ANR	5051489	Symbol	* * idx		5051122						
ANR	5051490	Symbol	jobid		5051122						
ANR	5051491	Symbol	* reqlist [ idx ] -> input_line		5051122						
ANR	5051492	Symbol	reqids		5051122						
ANR	5051493	Symbol	reqlist [ 0 ] -> proxy		5051122						
ANR	5051494	Symbol	* idx		5051122						
ANR	5051495	Symbol	* reqlist [ 0 ] -> input_line		5051122						
ANR	5051496	Symbol	results		5051122						
ANR	5051497	Symbol	NULL		5051122						
ANR	5051498	Symbol	reqlist [ 0 ] -> input_line		5051122						
ANR	5051499	Symbol	& service		5051122						
ANR	5051500	Symbol	* reqlist		5051122						
ANR	5051501	Symbol	cp		5051122						
ANR	5051502	Symbol	proxy		5051122						
ANR	5051503	Symbol	reqlist		5051122						
ANR	5051504	Symbol	service		5051122						
ANR	5051505	Symbol	* * * idx		5051122						
ANR	5051506	Symbol	escape_spaces		5051122						
ANR	5051507	Symbol	idx		5051122						
ANR	5051508	Function	handle_cream_job_cancel	945:0:26635:27046							
ANR	5051509	FunctionDef	handle_cream_job_cancel (char * * input_line)		5051508	0					
ANR	5051510	CompoundStatement		946:0:26684:27046	5051508	0					
ANR	5051511	IdentifierDeclStatement	int arg_cnt = count_args ( input_line ) ;	947:1:26687:26725	5051508	0	True				
ANR	5051512	IdentifierDecl	arg_cnt = count_args ( input_line )		5051508	0					
ANR	5051513	IdentifierDeclType	int		5051508	0					
ANR	5051514	Identifier	arg_cnt		5051508	1					
ANR	5051515	AssignmentExpression	arg_cnt = count_args ( input_line )		5051508	2		=			
ANR	5051516	Identifier	arg_cnt		5051508	0					
ANR	5051517	CallExpression	count_args ( input_line )		5051508	1					
ANR	5051518	Callee	count_args		5051508	0					
ANR	5051519	Identifier	count_args		5051508	0					
ANR	5051520	ArgumentList	input_line		5051508	1					
ANR	5051521	Argument	input_line		5051508	0					
ANR	5051522	Identifier	input_line		5051508	0					
ANR	5051523	IdentifierDeclStatement	char * jobnum = NULL ;	948:1:26728:26747	5051508	1	True				
ANR	5051524	IdentifierDecl	* jobnum = NULL		5051508	0					
ANR	5051525	IdentifierDeclType	char *		5051508	0					
ANR	5051526	Identifier	jobnum		5051508	1					
ANR	5051527	AssignmentExpression	* jobnum = NULL		5051508	2		=			
ANR	5051528	Identifier	NULL		5051508	0					
ANR	5051529	Identifier	NULL		5051508	1					
ANR	5051530	IfStatement	if ( arg_cnt < 4 )		5051508	2					
ANR	5051531	Condition	arg_cnt < 4	950:6:26756:26766	5051508	0	True				
ANR	5051532	RelationalExpression	arg_cnt < 4		5051508	0		<			
ANR	5051533	Identifier	arg_cnt		5051508	0					
ANR	5051534	PrimaryExpression	4		5051508	1					
ANR	5051535	CompoundStatement		5:20:85:85	5051508	1					
ANR	5051536	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	951:2:26774:26795	5051508	0	True				
ANR	5051537	CallExpression	HANDLE_SYNTAX_ERROR ( )		5051508	0					
ANR	5051538	Callee	HANDLE_SYNTAX_ERROR		5051508	0					
ANR	5051539	Identifier	HANDLE_SYNTAX_ERROR		5051508	0					
ANR	5051540	ArgumentList			5051508	1					
ANR	5051541	ExpressionStatement	"process_string_arg ( input_line [ 3 ] , & jobnum )"	954:1:26802:26846	5051508	3	True				
ANR	5051542	CallExpression	"process_string_arg ( input_line [ 3 ] , & jobnum )"		5051508	0					
ANR	5051543	Callee	process_string_arg		5051508	0					
ANR	5051544	Identifier	process_string_arg		5051508	0					
ANR	5051545	ArgumentList	input_line [ 3 ]		5051508	1					
ANR	5051546	Argument	input_line [ 3 ]		5051508	0					
ANR	5051547	ArrayIndexing	input_line [ 3 ]		5051508	0					
ANR	5051548	Identifier	input_line		5051508	0					
ANR	5051549	PrimaryExpression	3		5051508	1					
ANR	5051550	Argument	& jobnum		5051508	1					
ANR	5051551	UnaryOperationExpression	& jobnum		5051508	0					
ANR	5051552	UnaryOperator	&		5051508	0					
ANR	5051553	Identifier	jobnum		5051508	1					
ANR	5051554	IfStatement	if ( jobnum && ( atoi ( jobnum ) + 4 != arg_cnt ) )		5051508	4					
ANR	5051555	Condition	jobnum && ( atoi ( jobnum ) + 4 != arg_cnt )	955:6:26854:26896	5051508	0	True				
ANR	5051556	AndExpression	jobnum && ( atoi ( jobnum ) + 4 != arg_cnt )		5051508	0		&&			
ANR	5051557	Identifier	jobnum		5051508	0					
ANR	5051558	EqualityExpression	atoi ( jobnum ) + 4 != arg_cnt		5051508	1		!=			
ANR	5051559	AdditiveExpression	atoi ( jobnum ) + 4		5051508	0		+			
ANR	5051560	CallExpression	atoi ( jobnum )		5051508	0					
ANR	5051561	Callee	atoi		5051508	0					
ANR	5051562	Identifier	atoi		5051508	0					
ANR	5051563	ArgumentList	jobnum		5051508	1					
ANR	5051564	Argument	jobnum		5051508	0					
ANR	5051565	Identifier	jobnum		5051508	0					
ANR	5051566	PrimaryExpression	4		5051508	1					
ANR	5051567	Identifier	arg_cnt		5051508	1					
ANR	5051568	CompoundStatement		10:52:215:215	5051508	1					
ANR	5051569	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	956:2:26904:26925	5051508	0	True				
ANR	5051570	CallExpression	HANDLE_SYNTAX_ERROR ( )		5051508	0					
ANR	5051571	Callee	HANDLE_SYNTAX_ERROR		5051508	0					
ANR	5051572	Identifier	HANDLE_SYNTAX_ERROR		5051508	0					
ANR	5051573	ArgumentList			5051508	1					
ANR	5051574	ExpressionStatement	"enqueue_request_batch ( input_line , thread_cream_job_cancel , cmp_request_single )"	959:1:26932:27010	5051508	5	True				
ANR	5051575	CallExpression	"enqueue_request_batch ( input_line , thread_cream_job_cancel , cmp_request_single )"		5051508	0					
ANR	5051576	Callee	enqueue_request_batch		5051508	0					
ANR	5051577	Identifier	enqueue_request_batch		5051508	0					
ANR	5051578	ArgumentList	input_line		5051508	1					
ANR	5051579	Argument	input_line		5051508	0					
ANR	5051580	Identifier	input_line		5051508	0					
ANR	5051581	Argument	thread_cream_job_cancel		5051508	1					
ANR	5051582	Identifier	thread_cream_job_cancel		5051508	0					
ANR	5051583	Argument	cmp_request_single		5051508	2					
ANR	5051584	Identifier	cmp_request_single		5051508	0					
ANR	5051585	ExpressionStatement	"gahp_printf ( ""S\\n"" )"	960:1:27013:27031	5051508	6	True				
ANR	5051586	CallExpression	"gahp_printf ( ""S\\n"" )"		5051508	0					
ANR	5051587	Callee	gahp_printf		5051508	0					
ANR	5051588	Identifier	gahp_printf		5051508	0					
ANR	5051589	ArgumentList	"""S\\n"""		5051508	1					
ANR	5051590	Argument	"""S\\n"""		5051508	0					
ANR	5051591	PrimaryExpression	"""S\\n"""		5051508	0					
ANR	5051592	ReturnStatement	return 0 ;	962:1:27036:27044	5051508	7	True				
ANR	5051593	PrimaryExpression	0		5051508	0					
ANR	5051594	ReturnType	int		5051508	1					
ANR	5051595	Identifier	handle_cream_job_cancel		5051508	2					
ANR	5051596	ParameterList	char * * input_line		5051508	3					
ANR	5051597	Parameter	char * * input_line	945:29:26664:26680	5051508	0	True				
ANR	5051598	ParameterType	char * *		5051508	0					
ANR	5051599	Identifier	input_line		5051508	1					
ANR	5051600	CFGEntryNode	ENTRY		5051508		True				
ANR	5051601	CFGExitNode	EXIT		5051508		True				
ANR	5051602	Symbol	atoi		5051508						
ANR	5051603	Symbol	* input_line		5051508						
ANR	5051604	Symbol	NULL		5051508						
ANR	5051605	Symbol	& jobnum		5051508						
ANR	5051606	Symbol	jobnum		5051508						
ANR	5051607	Symbol	count_args		5051508						
ANR	5051608	Symbol	cmp_request_single		5051508						
ANR	5051609	Symbol	input_line		5051508						
ANR	5051610	Symbol	arg_cnt		5051508						
ANR	5051611	Symbol	thread_cream_job_cancel		5051508						
ANR	5051612	Function	thread_cream_job_cancel	965:0:27049:29022							
ANR	5051613	FunctionDef	thread_cream_job_cancel (Request * * reqlist)		5051612	0					
ANR	5051614	CompoundStatement		966:0:27098:29022	5051612	0					
ANR	5051615	IfStatement	if ( reqlist == NULL )		5051612	0					
ANR	5051616	Condition	reqlist == NULL	972:4:27325:27339	5051612	0	True				
ANR	5051617	EqualityExpression	reqlist == NULL		5051612	0		==			
ANR	5051618	Identifier	reqlist		5051612	0					
ANR	5051619	Identifier	NULL		5051612	1					
ANR	5051620	CompoundStatement		7:21:243:243	5051612	1					
ANR	5051621	ExpressionStatement	"internal_error ( ""thread_cream_job_cancel called with NULL pointer\\n"" )"	973:2:27346:27414	5051612	0	True				
ANR	5051622	CallExpression	"internal_error ( ""thread_cream_job_cancel called with NULL pointer\\n"" )"		5051612	0					
ANR	5051623	Callee	internal_error		5051612	0					
ANR	5051624	Identifier	internal_error		5051612	0					
ANR	5051625	ArgumentList	"""thread_cream_job_cancel called with NULL pointer\\n"""		5051612	1					
ANR	5051626	Argument	"""thread_cream_job_cancel called with NULL pointer\\n"""		5051612	0					
ANR	5051627	PrimaryExpression	"""thread_cream_job_cancel called with NULL pointer\\n"""		5051612	0					
ANR	5051628	IfStatement	if ( reqlist [ 0 ] == NULL )		5051612	1					
ANR	5051629	Condition	reqlist [ 0 ] == NULL	975:4:27423:27440	5051612	0	True				
ANR	5051630	EqualityExpression	reqlist [ 0 ] == NULL		5051612	0		==			
ANR	5051631	ArrayIndexing	reqlist [ 0 ]		5051612	0					
ANR	5051632	Identifier	reqlist		5051612	0					
ANR	5051633	PrimaryExpression	0		5051612	1					
ANR	5051634	Identifier	NULL		5051612	1					
ANR	5051635	CompoundStatement		10:24:344:344	5051612	1					
ANR	5051636	ExpressionStatement	"internal_error ( ""thread_cream_job_cancel called with empty list\\n"" )"	976:2:27447:27513	5051612	0	True				
ANR	5051637	CallExpression	"internal_error ( ""thread_cream_job_cancel called with empty list\\n"" )"		5051612	0					
ANR	5051638	Callee	internal_error		5051612	0					
ANR	5051639	Identifier	internal_error		5051612	0					
ANR	5051640	ArgumentList	"""thread_cream_job_cancel called with empty list\\n"""		5051612	1					
ANR	5051641	Argument	"""thread_cream_job_cancel called with empty list\\n"""		5051612	0					
ANR	5051642	PrimaryExpression	"""thread_cream_job_cancel called with empty list\\n"""		5051612	0					
ANR	5051643	IdentifierDeclStatement	char * service ;	979:1:27520:27533	5051612	2	True				
ANR	5051644	IdentifierDecl	* service		5051612	0					
ANR	5051645	IdentifierDeclType	char *		5051612	0					
ANR	5051646	Identifier	service		5051612	1					
ANR	5051647	ExpressionStatement	"process_string_arg ( reqlist [ 0 ] -> input_line [ 2 ] , & service )"	980:1:27536:27593	5051612	3	True				
ANR	5051648	CallExpression	"process_string_arg ( reqlist [ 0 ] -> input_line [ 2 ] , & service )"		5051612	0					
ANR	5051649	Callee	process_string_arg		5051612	0					
ANR	5051650	Identifier	process_string_arg		5051612	0					
ANR	5051651	ArgumentList	reqlist [ 0 ] -> input_line [ 2 ]		5051612	1					
ANR	5051652	Argument	reqlist [ 0 ] -> input_line [ 2 ]		5051612	0					
ANR	5051653	ArrayIndexing	reqlist [ 0 ] -> input_line [ 2 ]		5051612	0					
ANR	5051654	PtrMemberAccess	reqlist [ 0 ] -> input_line		5051612	0					
ANR	5051655	ArrayIndexing	reqlist [ 0 ]		5051612	0					
ANR	5051656	Identifier	reqlist		5051612	0					
ANR	5051657	PrimaryExpression	0		5051612	1					
ANR	5051658	Identifier	input_line		5051612	1					
ANR	5051659	PrimaryExpression	2		5051612	1					
ANR	5051660	Argument	& service		5051612	1					
ANR	5051661	UnaryOperationExpression	& service		5051612	0					
ANR	5051662	UnaryOperator	&		5051612	0					
ANR	5051663	Identifier	service		5051612	1					
ANR	5051664	IdentifierDeclStatement	string proxy = reqlist [ 0 ] -> proxy ;	981:1:27596:27628	5051612	4	True				
ANR	5051665	IdentifierDecl	proxy = reqlist [ 0 ] -> proxy		5051612	0					
ANR	5051666	IdentifierDeclType	string		5051612	0					
ANR	5051667	Identifier	proxy		5051612	1					
ANR	5051668	AssignmentExpression	proxy = reqlist [ 0 ] -> proxy		5051612	2		=			
ANR	5051669	Identifier	proxy		5051612	0					
ANR	5051670	PtrMemberAccess	reqlist [ 0 ] -> proxy		5051612	1					
ANR	5051671	ArrayIndexing	reqlist [ 0 ]		5051612	0					
ANR	5051672	Identifier	reqlist		5051612	0					
ANR	5051673	PrimaryExpression	0		5051612	1					
ANR	5051674	Identifier	proxy		5051612	1					
ANR	5051675	IdentifierDeclStatement	AbsCreamProxy * cp = NULL ;	982:1:27631:27655	5051612	5	True				
ANR	5051676	IdentifierDecl	* cp = NULL		5051612	0					
ANR	5051677	IdentifierDeclType	AbsCreamProxy *		5051612	0					
ANR	5051678	Identifier	cp		5051612	1					
ANR	5051679	AssignmentExpression	* cp = NULL		5051612	2		=			
ANR	5051680	Identifier	NULL		5051612	0					
ANR	5051681	Identifier	NULL		5051612	1					
ANR	5051682	IdentifierDeclStatement	vector < string > reqids ;	984:1:27659:27680	5051612	6	True				
ANR	5051683	IdentifierDecl	reqids		5051612	0					
ANR	5051684	IdentifierDeclType	vector < string >		5051612	0					
ANR	5051685	Identifier	reqids		5051612	1					
ANR	5051686	IdentifierDeclStatement	"map < string , string > results ;"	985:1:27683:27710	5051612	7	True				
ANR	5051687	IdentifierDecl	results		5051612	0					
ANR	5051688	IdentifierDeclType	"map < string , string >"		5051612	0					
ANR	5051689	Identifier	results		5051612	1					
ANR	5051690	TryStatement	try		5051612	8					
ANR	5051691	CompoundStatement		33:2:1006:1022	5051612	0					
ANR	5051692	IdentifierDeclStatement	vector < JobIdWrapper > jv ;		5051612	0					
ANR	5051693	IdentifierDecl	jv		5051612	0					
ANR	5051694	IdentifierDeclType	vector < JobIdWrapper >		5051612	0					
ANR	5051695	Identifier	jv		5051612	1					
ANR	5051696	ExpressionStatement	"collect_job_ids ( reqlist , jv , reqids )"		5051612	1					
ANR	5051697	CallExpression	"collect_job_ids ( reqlist , jv , reqids )"		5051612	0					
ANR	5051698	Callee	collect_job_ids		5051612	0					
ANR	5051699	Identifier	collect_job_ids		5051612	0					
ANR	5051700	ArgumentList	reqlist		5051612	1					
ANR	5051701	Argument	reqlist		5051612	0					
ANR	5051702	Identifier	reqlist		5051612	0					
ANR	5051703	Argument	jv		5051612	1					
ANR	5051704	Identifier	jv		5051612	0					
ANR	5051705	Argument	reqids		5051612	2					
ANR	5051706	Identifier	reqids		5051612	0					
ANR	5051707	IdentifierDeclStatement	vector < string > sv ;		5051612	2					
ANR	5051708	IdentifierDecl	sv		5051612	0					
ANR	5051709	IdentifierDeclType	vector < string >		5051612	0					
ANR	5051710	Identifier	sv		5051612	1					
ANR	5051711	IdentifierDeclStatement	"JobFilterWrapper jfw ( jv , sv , - 1 , - 1 , """" , """" ) ;"		5051612	3					
ANR	5051712	IdentifierDecl	"jfw ( jv , sv , - 1 , - 1 , """" , """" )"		5051612	0					
ANR	5051713	IdentifierDeclType	JobFilterWrapper		5051612	0					
ANR	5051714	Identifier	jfw		5051612	1					
ANR	5051715	Expression	"jv , sv , - 1 , - 1 , """" , """""		5051612	2					
ANR	5051716	Identifier	jv		5051612	0					
ANR	5051717	Expression	"sv , - 1 , - 1 , """" , """""		5051612	1					
ANR	5051718	Identifier	sv		5051612	0					
ANR	5051719	Expression	"- 1 , - 1 , """" , """""		5051612	1					
ANR	5051720	UnaryOperationExpression	- 1		5051612	0					
ANR	5051721	UnaryOperator	-		5051612	0					
ANR	5051722	PrimaryExpression	1		5051612	1					
ANR	5051723	Expression	"- 1 , """" , """""		5051612	1					
ANR	5051724	UnaryOperationExpression	- 1		5051612	0					
ANR	5051725	UnaryOperator	-		5051612	0					
ANR	5051726	PrimaryExpression	1		5051612	1					
ANR	5051727	Expression	""""" , """""		5051612	1					
ANR	5051728	PrimaryExpression	""""""		5051612	0					
ANR	5051729	PrimaryExpression	""""""		5051612	1					
ANR	5051730	IdentifierDeclStatement	ResultWrapper rw ;		5051612	4					
ANR	5051731	IdentifierDecl	rw		5051612	0					
ANR	5051732	IdentifierDeclType	ResultWrapper		5051612	0					
ANR	5051733	Identifier	rw		5051612	1					
ANR	5051734	ExpressionStatement	"cp = CreamProxyFactory :: make_CreamProxyCancel ( & jfw , & rw , DEFAULT_TIMEOUT )"		5051612	5					
ANR	5051735	AssignmentExpression	"cp = CreamProxyFactory :: make_CreamProxyCancel ( & jfw , & rw , DEFAULT_TIMEOUT )"		5051612	0		=			
ANR	5051736	Identifier	cp		5051612	0					
ANR	5051737	CallExpression	"CreamProxyFactory :: make_CreamProxyCancel ( & jfw , & rw , DEFAULT_TIMEOUT )"		5051612	1					
ANR	5051738	Callee	CreamProxyFactory :: make_CreamProxyCancel		5051612	0					
ANR	5051739	Identifier	CreamProxyFactory :: make_CreamProxyCancel		5051612	0					
ANR	5051740	ArgumentList	& jfw		5051612	1					
ANR	5051741	Argument	& jfw		5051612	0					
ANR	5051742	UnaryOperationExpression	& jfw		5051612	0					
ANR	5051743	UnaryOperator	&		5051612	0					
ANR	5051744	Identifier	jfw		5051612	1					
ANR	5051745	Argument	& rw		5051612	1					
ANR	5051746	UnaryOperationExpression	& rw		5051612	0					
ANR	5051747	UnaryOperator	&		5051612	0					
ANR	5051748	Identifier	rw		5051612	1					
ANR	5051749	Argument	DEFAULT_TIMEOUT		5051612	2					
ANR	5051750	Identifier	DEFAULT_TIMEOUT		5051612	0					
ANR	5051751	ExpressionStatement	check_for_factory_error ( cp )		5051612	6					
ANR	5051752	CallExpression	check_for_factory_error ( cp )		5051612	0					
ANR	5051753	Callee	check_for_factory_error		5051612	0					
ANR	5051754	Identifier	check_for_factory_error		5051612	0					
ANR	5051755	ArgumentList	cp		5051612	1					
ANR	5051756	Argument	cp		5051612	0					
ANR	5051757	Identifier	cp		5051612	0					
ANR	5051758	ExpressionStatement	cp -> setCredential ( proxy . c_str ( ) )		5051612	7					
ANR	5051759	CallExpression	cp -> setCredential ( proxy . c_str ( ) )		5051612	0					
ANR	5051760	Callee	cp -> setCredential		5051612	0					
ANR	5051761	PtrMemberAccess	cp -> setCredential		5051612	0					
ANR	5051762	Identifier	cp		5051612	0					
ANR	5051763	Identifier	setCredential		5051612	1					
ANR	5051764	ArgumentList	proxy . c_str ( )		5051612	1					
ANR	5051765	Argument	proxy . c_str ( )		5051612	0					
ANR	5051766	CallExpression	proxy . c_str ( )		5051612	0					
ANR	5051767	Callee	proxy . c_str		5051612	0					
ANR	5051768	MemberAccess	proxy . c_str		5051612	0					
ANR	5051769	Identifier	proxy		5051612	0					
ANR	5051770	Identifier	c_str		5051612	1					
ANR	5051771	ArgumentList			5051612	1					
ANR	5051772	ExpressionStatement	cp -> execute ( service )		5051612	8					
ANR	5051773	CallExpression	cp -> execute ( service )		5051612	0					
ANR	5051774	Callee	cp -> execute		5051612	0					
ANR	5051775	PtrMemberAccess	cp -> execute		5051612	0					
ANR	5051776	Identifier	cp		5051612	0					
ANR	5051777	Identifier	execute		5051612	1					
ANR	5051778	ArgumentList	service		5051612	1					
ANR	5051779	Argument	service		5051612	0					
ANR	5051780	Identifier	service		5051612	0					
ANR	5051781	ExpressionStatement	"check_result_wrapper2 ( rw , results )"		5051612	9					
ANR	5051782	CallExpression	"check_result_wrapper2 ( rw , results )"		5051612	0					
ANR	5051783	Callee	check_result_wrapper2		5051612	0					
ANR	5051784	Identifier	check_result_wrapper2		5051612	0					
ANR	5051785	ArgumentList	rw		5051612	1					
ANR	5051786	Argument	rw		5051612	0					
ANR	5051787	Identifier	rw		5051612	0					
ANR	5051788	Argument	results		5051612	1					
ANR	5051789	Identifier	results		5051612	0					
ANR	5051790	Statement	delete		5051612	10					
ANR	5051791	ExpressionStatement	cp		5051612	11					
ANR	5051792	Identifier	cp		5051612	0					
ANR	5051793	CatchList			5051612	1					
ANR	5051794	CatchStatement	catch ( std :: exception & ex )		5051612	0					
ANR	5051795	Identifier	ex		5051612	0					
ANR	5051796	CompoundStatement		43:27:1303:1303	5051612	1					
ANR	5051797	Statement	delete	1009:2:28406:28411	5051612	0	True				
ANR	5051798	ExpressionStatement	cp	1009:9:28413:28415	5051612	1	True				
ANR	5051799	Identifier	cp		5051612	0					
ANR	5051800	ForStatement	for ( vector < string > :: const_iterator it = reqids . begin ( ) ; it != reqids . end ( ) ; it ++ )		5051612	2					
ANR	5051801	ForInit	vector < string > :: const_iterator it = reqids . begin ( ) ;	1011:6:28424:28474	5051612	0	True				
ANR	5051802	IdentifierDeclStatement	vector < string > :: const_iterator it = reqids . begin ( ) ;		5051612	0					
ANR	5051803	IdentifierDecl	it = reqids . begin ( )		5051612	0					
ANR	5051804	IdentifierDeclType	vector < string > :: const_iterator		5051612	0					
ANR	5051805	Identifier	it		5051612	1					
ANR	5051806	AssignmentExpression	it = reqids . begin ( )		5051612	2		=			
ANR	5051807	Identifier	it		5051612	0					
ANR	5051808	CallExpression	reqids . begin ( )		5051612	1					
ANR	5051809	Callee	reqids . begin		5051612	0					
ANR	5051810	MemberAccess	reqids . begin		5051612	0					
ANR	5051811	Identifier	reqids		5051612	0					
ANR	5051812	Identifier	begin		5051612	1					
ANR	5051813	ArgumentList			5051612	1					
ANR	5051814	Condition	it != reqids . end ( )	1012:3:28479:28496	5051612	1	True				
ANR	5051815	EqualityExpression	it != reqids . end ( )		5051612	0		!=			
ANR	5051816	Identifier	it		5051612	0					
ANR	5051817	CallExpression	reqids . end ( )		5051612	1					
ANR	5051818	Callee	reqids . end		5051612	0					
ANR	5051819	MemberAccess	reqids . end		5051612	0					
ANR	5051820	Identifier	reqids		5051612	0					
ANR	5051821	Identifier	end		5051612	1					
ANR	5051822	ArgumentList			5051612	1					
ANR	5051823	PostIncDecOperationExpression	it ++	1012:23:28499:28502	5051612	2	True				
ANR	5051824	Identifier	it		5051612	0					
ANR	5051825	IncDec	++		5051612	1					
ANR	5051826	CompoundStatement		49:3:1412:1448	5051612	3					
ANR	5051827	IdentifierDeclStatement	char * msg = escape_spaces ( ex . what ( ) ) ;	1014:3:28511:28547	5051612	0	True				
ANR	5051828	IdentifierDecl	* msg = escape_spaces ( ex . what ( ) )		5051612	0					
ANR	5051829	IdentifierDeclType	char *		5051612	0					
ANR	5051830	Identifier	msg		5051612	1					
ANR	5051831	AssignmentExpression	* msg = escape_spaces ( ex . what ( ) )		5051612	2		=			
ANR	5051832	Identifier	msg		5051612	0					
ANR	5051833	CallExpression	escape_spaces ( ex . what ( ) )		5051612	1					
ANR	5051834	Callee	escape_spaces		5051612	0					
ANR	5051835	Identifier	escape_spaces		5051612	0					
ANR	5051836	ArgumentList	ex . what ( )		5051612	1					
ANR	5051837	Argument	ex . what ( )		5051612	0					
ANR	5051838	CallExpression	ex . what ( )		5051612	0					
ANR	5051839	Callee	ex . what		5051612	0					
ANR	5051840	MemberAccess	ex . what		5051612	0					
ANR	5051841	Identifier	ex		5051612	0					
ANR	5051842	Identifier	what		5051612	1					
ANR	5051843	ArgumentList			5051612	1					
ANR	5051844	ExpressionStatement	"enqueue_result ( ( * it ) + "" CREAM_Job_Cancel\\\\ Error:\\\\ "" + msg )"	1015:3:28552:28613	5051612	1	True				
ANR	5051845	CallExpression	"enqueue_result ( ( * it ) + "" CREAM_Job_Cancel\\\\ Error:\\\\ "" + msg )"		5051612	0					
ANR	5051846	Callee	enqueue_result		5051612	0					
ANR	5051847	Identifier	enqueue_result		5051612	0					
ANR	5051848	ArgumentList	"( * it ) + "" CREAM_Job_Cancel\\\\ Error:\\\\ "" + msg"		5051612	1					
ANR	5051849	Argument	"( * it ) + "" CREAM_Job_Cancel\\\\ Error:\\\\ "" + msg"		5051612	0					
ANR	5051850	AdditiveExpression	"( * it ) + "" CREAM_Job_Cancel\\\\ Error:\\\\ "" + msg"		5051612	0		+			
ANR	5051851	UnaryOperationExpression	* it		5051612	0					
ANR	5051852	UnaryOperator	*		5051612	0					
ANR	5051853	Identifier	it		5051612	1					
ANR	5051854	AdditiveExpression	""" CREAM_Job_Cancel\\\\ Error:\\\\ "" + msg"		5051612	1		+			
ANR	5051855	PrimaryExpression	""" CREAM_Job_Cancel\\\\ Error:\\\\ """		5051612	0					
ANR	5051856	Identifier	msg		5051612	1					
ANR	5051857	ExpressionStatement	free ( msg )	1016:3:28618:28627	5051612	2	True				
ANR	5051858	CallExpression	free ( msg )		5051612	0					
ANR	5051859	Callee	free		5051612	0					
ANR	5051860	Identifier	free		5051612	0					
ANR	5051861	ArgumentList	msg		5051612	1					
ANR	5051862	Argument	msg		5051612	0					
ANR	5051863	Identifier	msg		5051612	0					
ANR	5051864	ReturnStatement	return 1 ;	1019:2:28638:28646	5051612	3	True				
ANR	5051865	PrimaryExpression	1		5051612	0					
ANR	5051866	ForStatement	for ( int idx = 0 ; reqlist [ idx ] != NULL ; idx ++ )		5051612	9					
ANR	5051867	ForInit	int idx = 0 ;	1022:7:28660:28671	5051612	0	True				
ANR	5051868	IdentifierDeclStatement	int idx = 0 ;		5051612	0					
ANR	5051869	IdentifierDecl	idx = 0		5051612	0					
ANR	5051870	IdentifierDeclType	int		5051612	0					
ANR	5051871	Identifier	idx		5051612	1					
ANR	5051872	AssignmentExpression	idx = 0		5051612	2		=			
ANR	5051873	Identifier	idx		5051612	0					
ANR	5051874	PrimaryExpression	0		5051612	1					
ANR	5051875	Condition	reqlist [ idx ] != NULL	1022:20:28673:28692	5051612	1	True				
ANR	5051876	EqualityExpression	reqlist [ idx ] != NULL		5051612	0		!=			
ANR	5051877	ArrayIndexing	reqlist [ idx ]		5051612	0					
ANR	5051878	Identifier	reqlist		5051612	0					
ANR	5051879	Identifier	idx		5051612	1					
ANR	5051880	Identifier	NULL		5051612	1					
ANR	5051881	PostIncDecOperationExpression	idx ++	1022:42:28695:28699	5051612	2	True				
ANR	5051882	Identifier	idx		5051612	0					
ANR	5051883	IncDec	++		5051612	1					
ANR	5051884	CompoundStatement		59:2:1654:1696	5051612	3					
ANR	5051885	IdentifierDeclStatement	string reqid = reqlist [ idx ] -> input_line [ 1 ] ;	1023:2:28707:28749	5051612	0	True				
ANR	5051886	IdentifierDecl	reqid = reqlist [ idx ] -> input_line [ 1 ]		5051612	0					
ANR	5051887	IdentifierDeclType	string		5051612	0					
ANR	5051888	Identifier	reqid		5051612	1					
ANR	5051889	AssignmentExpression	reqid = reqlist [ idx ] -> input_line [ 1 ]		5051612	2		=			
ANR	5051890	Identifier	reqid		5051612	0					
ANR	5051891	ArrayIndexing	reqlist [ idx ] -> input_line [ 1 ]		5051612	1					
ANR	5051892	PtrMemberAccess	reqlist [ idx ] -> input_line		5051612	0					
ANR	5051893	ArrayIndexing	reqlist [ idx ]		5051612	0					
ANR	5051894	Identifier	reqlist		5051612	0					
ANR	5051895	Identifier	idx		5051612	1					
ANR	5051896	Identifier	input_line		5051612	1					
ANR	5051897	PrimaryExpression	1		5051612	1					
ANR	5051898	IdentifierDeclStatement	string jobid = reqlist [ idx ] -> input_line [ 4 ] ;	1024:2:28753:28795	5051612	1	True				
ANR	5051899	IdentifierDecl	jobid = reqlist [ idx ] -> input_line [ 4 ]		5051612	0					
ANR	5051900	IdentifierDeclType	string		5051612	0					
ANR	5051901	Identifier	jobid		5051612	1					
ANR	5051902	AssignmentExpression	jobid = reqlist [ idx ] -> input_line [ 4 ]		5051612	2		=			
ANR	5051903	Identifier	jobid		5051612	0					
ANR	5051904	ArrayIndexing	reqlist [ idx ] -> input_line [ 4 ]		5051612	1					
ANR	5051905	PtrMemberAccess	reqlist [ idx ] -> input_line		5051612	0					
ANR	5051906	ArrayIndexing	reqlist [ idx ]		5051612	0					
ANR	5051907	Identifier	reqlist		5051612	0					
ANR	5051908	Identifier	idx		5051612	1					
ANR	5051909	Identifier	input_line		5051612	1					
ANR	5051910	PrimaryExpression	4		5051612	1					
ANR	5051911	IfStatement	"if ( results [ jobid ] != """" )"		5051612	2					
ANR	5051912	Condition	"results [ jobid ] != """""	1025:7:28804:28823	5051612	0	True				
ANR	5051913	EqualityExpression	"results [ jobid ] != """""		5051612	0		!=			
ANR	5051914	ArrayIndexing	results [ jobid ]		5051612	0					
ANR	5051915	Identifier	results		5051612	0					
ANR	5051916	Identifier	jobid		5051612	1					
ANR	5051917	PrimaryExpression	""""""		5051612	1					
ANR	5051918	CompoundStatement		61:3:1733:1784	5051612	1					
ANR	5051919	IdentifierDeclStatement	char * msg = escape_spaces ( results [ jobid ] . c_str ( ) ) ;	1026:3:28832:28883	5051612	0	True				
ANR	5051920	IdentifierDecl	* msg = escape_spaces ( results [ jobid ] . c_str ( ) )		5051612	0					
ANR	5051921	IdentifierDeclType	char *		5051612	0					
ANR	5051922	Identifier	msg		5051612	1					
ANR	5051923	AssignmentExpression	* msg = escape_spaces ( results [ jobid ] . c_str ( ) )		5051612	2		=			
ANR	5051924	Identifier	msg		5051612	0					
ANR	5051925	CallExpression	escape_spaces ( results [ jobid ] . c_str ( ) )		5051612	1					
ANR	5051926	Callee	escape_spaces		5051612	0					
ANR	5051927	Identifier	escape_spaces		5051612	0					
ANR	5051928	ArgumentList	results [ jobid ] . c_str ( )		5051612	1					
ANR	5051929	Argument	results [ jobid ] . c_str ( )		5051612	0					
ANR	5051930	CallExpression	results [ jobid ] . c_str ( )		5051612	0					
ANR	5051931	Callee	results [ jobid ] . c_str		5051612	0					
ANR	5051932	MemberAccess	results [ jobid ] . c_str		5051612	0					
ANR	5051933	ArrayIndexing	results [ jobid ]		5051612	0					
ANR	5051934	Identifier	results		5051612	0					
ANR	5051935	Identifier	jobid		5051612	1					
ANR	5051936	Identifier	c_str		5051612	1					
ANR	5051937	ArgumentList			5051612	1					
ANR	5051938	ExpressionStatement	"enqueue_result ( reqid + "" CREAM_Job_Cancel\\\\ Error:\\\\ "" + msg )"	1027:3:28888:28951	5051612	1	True				
ANR	5051939	CallExpression	"enqueue_result ( reqid + "" CREAM_Job_Cancel\\\\ Error:\\\\ "" + msg )"		5051612	0					
ANR	5051940	Callee	enqueue_result		5051612	0					
ANR	5051941	Identifier	enqueue_result		5051612	0					
ANR	5051942	ArgumentList	"reqid + "" CREAM_Job_Cancel\\\\ Error:\\\\ "" + msg"		5051612	1					
ANR	5051943	Argument	"reqid + "" CREAM_Job_Cancel\\\\ Error:\\\\ "" + msg"		5051612	0					
ANR	5051944	AdditiveExpression	"reqid + "" CREAM_Job_Cancel\\\\ Error:\\\\ "" + msg"		5051612	0		+			
ANR	5051945	Identifier	reqid		5051612	0					
ANR	5051946	AdditiveExpression	""" CREAM_Job_Cancel\\\\ Error:\\\\ "" + msg"		5051612	1		+			
ANR	5051947	PrimaryExpression	""" CREAM_Job_Cancel\\\\ Error:\\\\ """		5051612	0					
ANR	5051948	Identifier	msg		5051612	1					
ANR	5051949	ElseStatement	else		5051612	0					
ANR	5051950	CompoundStatement		63:9:1863:1863	5051612	0					
ANR	5051951	ExpressionStatement	"enqueue_result ( reqid + "" NULL"" )"	1029:3:28967:29000	5051612	0	True				
ANR	5051952	CallExpression	"enqueue_result ( reqid + "" NULL"" )"		5051612	0					
ANR	5051953	Callee	enqueue_result		5051612	0					
ANR	5051954	Identifier	enqueue_result		5051612	0					
ANR	5051955	ArgumentList	"reqid + "" NULL"""		5051612	1					
ANR	5051956	Argument	"reqid + "" NULL"""		5051612	0					
ANR	5051957	AdditiveExpression	"reqid + "" NULL"""		5051612	0		+			
ANR	5051958	Identifier	reqid		5051612	0					
ANR	5051959	PrimaryExpression	""" NULL"""		5051612	1					
ANR	5051960	ReturnStatement	return 0 ;	1033:1:29012:29020	5051612	10	True				
ANR	5051961	PrimaryExpression	0		5051612	0					
ANR	5051962	ReturnType	int		5051612	1					
ANR	5051963	Identifier	thread_cream_job_cancel		5051612	2					
ANR	5051964	ParameterList	Request * * reqlist		5051612	3					
ANR	5051965	Parameter	Request * * reqlist	965:29:27078:27094	5051612	0	True				
ANR	5051966	ParameterType	Request * *		5051612	0					
ANR	5051967	Identifier	reqlist		5051612	1					
ANR	5051968	CFGEntryNode	ENTRY		5051612		True				
ANR	5051969	CFGExitNode	EXIT		5051612		True				
ANR	5051970	CFGErrorNode	ERROR		5051612		True				
ANR	5051971	Symbol	msg		5051612						
ANR	5051972	Symbol	results [ jobid ] . c_str		5051612						
ANR	5051973	Symbol	reqlist [ idx ] -> input_line		5051612						
ANR	5051974	Symbol	* jobid		5051612						
ANR	5051975	Symbol	* * * reqlist		5051612						
ANR	5051976	Symbol	* results		5051612						
ANR	5051977	Symbol	* * reqlist		5051612						
ANR	5051978	Symbol	reqid		5051612						
ANR	5051979	Symbol	* * idx		5051612						
ANR	5051980	Symbol	jobid		5051612						
ANR	5051981	Symbol	* reqlist [ idx ] -> input_line		5051612						
ANR	5051982	Symbol	reqids		5051612						
ANR	5051983	Symbol	reqlist [ 0 ] -> proxy		5051612						
ANR	5051984	Symbol	* idx		5051612						
ANR	5051985	Symbol	* reqlist [ 0 ] -> input_line		5051612						
ANR	5051986	Symbol	results		5051612						
ANR	5051987	Symbol	NULL		5051612						
ANR	5051988	Symbol	reqlist [ 0 ] -> input_line		5051612						
ANR	5051989	Symbol	& service		5051612						
ANR	5051990	Symbol	* reqlist		5051612						
ANR	5051991	Symbol	cp		5051612						
ANR	5051992	Symbol	proxy		5051612						
ANR	5051993	Symbol	reqlist		5051612						
ANR	5051994	Symbol	service		5051612						
ANR	5051995	Symbol	* * * idx		5051612						
ANR	5051996	Symbol	escape_spaces		5051612						
ANR	5051997	Symbol	idx		5051612						
ANR	5051998	Function	handle_cream_job_suspend	1041:0:29270:29660							
ANR	5051999	FunctionDef	handle_cream_job_suspend (char * * input_line)		5051998	0					
ANR	5052000	CompoundStatement		1042:0:29320:29660	5051998	0					
ANR	5052001	IdentifierDeclStatement	int arg_cnt = count_args ( input_line ) ;	1043:1:29323:29361	5051998	0	True				
ANR	5052002	IdentifierDecl	arg_cnt = count_args ( input_line )		5051998	0					
ANR	5052003	IdentifierDeclType	int		5051998	0					
ANR	5052004	Identifier	arg_cnt		5051998	1					
ANR	5052005	AssignmentExpression	arg_cnt = count_args ( input_line )		5051998	2		=			
ANR	5052006	Identifier	arg_cnt		5051998	0					
ANR	5052007	CallExpression	count_args ( input_line )		5051998	1					
ANR	5052008	Callee	count_args		5051998	0					
ANR	5052009	Identifier	count_args		5051998	0					
ANR	5052010	ArgumentList	input_line		5051998	1					
ANR	5052011	Argument	input_line		5051998	0					
ANR	5052012	Identifier	input_line		5051998	0					
ANR	5052013	IdentifierDeclStatement	char * jobnum = NULL ;	1044:1:29364:29383	5051998	1	True				
ANR	5052014	IdentifierDecl	* jobnum = NULL		5051998	0					
ANR	5052015	IdentifierDeclType	char *		5051998	0					
ANR	5052016	Identifier	jobnum		5051998	1					
ANR	5052017	AssignmentExpression	* jobnum = NULL		5051998	2		=			
ANR	5052018	Identifier	NULL		5051998	0					
ANR	5052019	Identifier	NULL		5051998	1					
ANR	5052020	IfStatement	if ( arg_cnt < 4 )		5051998	2					
ANR	5052021	Condition	arg_cnt < 4	1046:6:29392:29402	5051998	0	True				
ANR	5052022	RelationalExpression	arg_cnt < 4		5051998	0		<			
ANR	5052023	Identifier	arg_cnt		5051998	0					
ANR	5052024	PrimaryExpression	4		5051998	1					
ANR	5052025	CompoundStatement		5:20:85:85	5051998	1					
ANR	5052026	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	1047:2:29410:29431	5051998	0	True				
ANR	5052027	CallExpression	HANDLE_SYNTAX_ERROR ( )		5051998	0					
ANR	5052028	Callee	HANDLE_SYNTAX_ERROR		5051998	0					
ANR	5052029	Identifier	HANDLE_SYNTAX_ERROR		5051998	0					
ANR	5052030	ArgumentList			5051998	1					
ANR	5052031	ExpressionStatement	"process_string_arg ( input_line [ 3 ] , & jobnum )"	1050:1:29438:29482	5051998	3	True				
ANR	5052032	CallExpression	"process_string_arg ( input_line [ 3 ] , & jobnum )"		5051998	0					
ANR	5052033	Callee	process_string_arg		5051998	0					
ANR	5052034	Identifier	process_string_arg		5051998	0					
ANR	5052035	ArgumentList	input_line [ 3 ]		5051998	1					
ANR	5052036	Argument	input_line [ 3 ]		5051998	0					
ANR	5052037	ArrayIndexing	input_line [ 3 ]		5051998	0					
ANR	5052038	Identifier	input_line		5051998	0					
ANR	5052039	PrimaryExpression	3		5051998	1					
ANR	5052040	Argument	& jobnum		5051998	1					
ANR	5052041	UnaryOperationExpression	& jobnum		5051998	0					
ANR	5052042	UnaryOperator	&		5051998	0					
ANR	5052043	Identifier	jobnum		5051998	1					
ANR	5052044	IfStatement	if ( jobnum && ( atoi ( jobnum ) + 4 != arg_cnt ) )		5051998	4					
ANR	5052045	Condition	jobnum && ( atoi ( jobnum ) + 4 != arg_cnt )	1051:6:29490:29532	5051998	0	True				
ANR	5052046	AndExpression	jobnum && ( atoi ( jobnum ) + 4 != arg_cnt )		5051998	0		&&			
ANR	5052047	Identifier	jobnum		5051998	0					
ANR	5052048	EqualityExpression	atoi ( jobnum ) + 4 != arg_cnt		5051998	1		!=			
ANR	5052049	AdditiveExpression	atoi ( jobnum ) + 4		5051998	0		+			
ANR	5052050	CallExpression	atoi ( jobnum )		5051998	0					
ANR	5052051	Callee	atoi		5051998	0					
ANR	5052052	Identifier	atoi		5051998	0					
ANR	5052053	ArgumentList	jobnum		5051998	1					
ANR	5052054	Argument	jobnum		5051998	0					
ANR	5052055	Identifier	jobnum		5051998	0					
ANR	5052056	PrimaryExpression	4		5051998	1					
ANR	5052057	Identifier	arg_cnt		5051998	1					
ANR	5052058	CompoundStatement		10:52:215:215	5051998	1					
ANR	5052059	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	1052:2:29540:29561	5051998	0	True				
ANR	5052060	CallExpression	HANDLE_SYNTAX_ERROR ( )		5051998	0					
ANR	5052061	Callee	HANDLE_SYNTAX_ERROR		5051998	0					
ANR	5052062	Identifier	HANDLE_SYNTAX_ERROR		5051998	0					
ANR	5052063	ArgumentList			5051998	1					
ANR	5052064	ExpressionStatement	"enqueue_request ( input_line , thread_cream_job_suspend )"	1055:1:29568:29623	5051998	5	True				
ANR	5052065	CallExpression	"enqueue_request ( input_line , thread_cream_job_suspend )"		5051998	0					
ANR	5052066	Callee	enqueue_request		5051998	0					
ANR	5052067	Identifier	enqueue_request		5051998	0					
ANR	5052068	ArgumentList	input_line		5051998	1					
ANR	5052069	Argument	input_line		5051998	0					
ANR	5052070	Identifier	input_line		5051998	0					
ANR	5052071	Argument	thread_cream_job_suspend		5051998	1					
ANR	5052072	Identifier	thread_cream_job_suspend		5051998	0					
ANR	5052073	ExpressionStatement	"gahp_printf ( ""S\\n"" )"	1057:1:29627:29645	5051998	6	True				
ANR	5052074	CallExpression	"gahp_printf ( ""S\\n"" )"		5051998	0					
ANR	5052075	Callee	gahp_printf		5051998	0					
ANR	5052076	Identifier	gahp_printf		5051998	0					
ANR	5052077	ArgumentList	"""S\\n"""		5051998	1					
ANR	5052078	Argument	"""S\\n"""		5051998	0					
ANR	5052079	PrimaryExpression	"""S\\n"""		5051998	0					
ANR	5052080	ReturnStatement	return 0 ;	1059:1:29650:29658	5051998	7	True				
ANR	5052081	PrimaryExpression	0		5051998	0					
ANR	5052082	ReturnType	int		5051998	1					
ANR	5052083	Identifier	handle_cream_job_suspend		5051998	2					
ANR	5052084	ParameterList	char * * input_line		5051998	3					
ANR	5052085	Parameter	char * * input_line	1041:30:29300:29316	5051998	0	True				
ANR	5052086	ParameterType	char * *		5051998	0					
ANR	5052087	Identifier	input_line		5051998	1					
ANR	5052088	CFGEntryNode	ENTRY		5051998		True				
ANR	5052089	CFGExitNode	EXIT		5051998		True				
ANR	5052090	Symbol	atoi		5051998						
ANR	5052091	Symbol	* input_line		5051998						
ANR	5052092	Symbol	NULL		5051998						
ANR	5052093	Symbol	& jobnum		5051998						
ANR	5052094	Symbol	jobnum		5051998						
ANR	5052095	Symbol	count_args		5051998						
ANR	5052096	Symbol	input_line		5051998						
ANR	5052097	Symbol	thread_cream_job_suspend		5051998						
ANR	5052098	Symbol	arg_cnt		5051998						
ANR	5052099	Function	thread_cream_job_suspend	1062:0:29663:31468							
ANR	5052100	FunctionDef	thread_cream_job_suspend (Request * req)		5052099	0					
ANR	5052101	CompoundStatement		1063:0:29708:31468	5052099	0					
ANR	5052102	IdentifierDeclStatement	"char * reqid , * service , * jobnum_str , * jobid ;"	1069:1:29932:29974	5052099	0	True				
ANR	5052103	IdentifierDecl	* reqid		5052099	0					
ANR	5052104	IdentifierDeclType	char *		5052099	0					
ANR	5052105	Identifier	reqid		5052099	1					
ANR	5052106	IdentifierDecl	* service		5052099	1					
ANR	5052107	IdentifierDeclType	char *		5052099	0					
ANR	5052108	Identifier	service		5052099	1					
ANR	5052109	IdentifierDecl	* jobnum_str		5052099	2					
ANR	5052110	IdentifierDeclType	char *		5052099	0					
ANR	5052111	Identifier	jobnum_str		5052099	1					
ANR	5052112	IdentifierDecl	* jobid		5052099	3					
ANR	5052113	IdentifierDeclType	char *		5052099	0					
ANR	5052114	Identifier	jobid		5052099	1					
ANR	5052115	IdentifierDeclStatement	string result_line ;	1070:1:29977:29995	5052099	1	True				
ANR	5052116	IdentifierDecl	result_line		5052099	0					
ANR	5052117	IdentifierDeclType	string		5052099	0					
ANR	5052118	Identifier	result_line		5052099	1					
ANR	5052119	IdentifierDeclStatement	AbsCreamProxy * cp = NULL ;	1071:1:29998:30022	5052099	2	True				
ANR	5052120	IdentifierDecl	* cp = NULL		5052099	0					
ANR	5052121	IdentifierDeclType	AbsCreamProxy *		5052099	0					
ANR	5052122	Identifier	cp		5052099	1					
ANR	5052123	AssignmentExpression	* cp = NULL		5052099	2		=			
ANR	5052124	Identifier	NULL		5052099	0					
ANR	5052125	Identifier	NULL		5052099	1					
ANR	5052126	ExpressionStatement	"process_string_arg ( req -> input_line [ 1 ] , & reqid )"	1073:1:30027:30075	5052099	3	True				
ANR	5052127	CallExpression	"process_string_arg ( req -> input_line [ 1 ] , & reqid )"		5052099	0					
ANR	5052128	Callee	process_string_arg		5052099	0					
ANR	5052129	Identifier	process_string_arg		5052099	0					
ANR	5052130	ArgumentList	req -> input_line [ 1 ]		5052099	1					
ANR	5052131	Argument	req -> input_line [ 1 ]		5052099	0					
ANR	5052132	ArrayIndexing	req -> input_line [ 1 ]		5052099	0					
ANR	5052133	PtrMemberAccess	req -> input_line		5052099	0					
ANR	5052134	Identifier	req		5052099	0					
ANR	5052135	Identifier	input_line		5052099	1					
ANR	5052136	PrimaryExpression	1		5052099	1					
ANR	5052137	Argument	& reqid		5052099	1					
ANR	5052138	UnaryOperationExpression	& reqid		5052099	0					
ANR	5052139	UnaryOperator	&		5052099	0					
ANR	5052140	Identifier	reqid		5052099	1					
ANR	5052141	ExpressionStatement	"process_string_arg ( req -> input_line [ 2 ] , & service )"	1074:1:30078:30128	5052099	4	True				
ANR	5052142	CallExpression	"process_string_arg ( req -> input_line [ 2 ] , & service )"		5052099	0					
ANR	5052143	Callee	process_string_arg		5052099	0					
ANR	5052144	Identifier	process_string_arg		5052099	0					
ANR	5052145	ArgumentList	req -> input_line [ 2 ]		5052099	1					
ANR	5052146	Argument	req -> input_line [ 2 ]		5052099	0					
ANR	5052147	ArrayIndexing	req -> input_line [ 2 ]		5052099	0					
ANR	5052148	PtrMemberAccess	req -> input_line		5052099	0					
ANR	5052149	Identifier	req		5052099	0					
ANR	5052150	Identifier	input_line		5052099	1					
ANR	5052151	PrimaryExpression	2		5052099	1					
ANR	5052152	Argument	& service		5052099	1					
ANR	5052153	UnaryOperationExpression	& service		5052099	0					
ANR	5052154	UnaryOperator	&		5052099	0					
ANR	5052155	Identifier	service		5052099	1					
ANR	5052156	ExpressionStatement	"process_string_arg ( req -> input_line [ 3 ] , & jobnum_str )"	1075:1:30131:30184	5052099	5	True				
ANR	5052157	CallExpression	"process_string_arg ( req -> input_line [ 3 ] , & jobnum_str )"		5052099	0					
ANR	5052158	Callee	process_string_arg		5052099	0					
ANR	5052159	Identifier	process_string_arg		5052099	0					
ANR	5052160	ArgumentList	req -> input_line [ 3 ]		5052099	1					
ANR	5052161	Argument	req -> input_line [ 3 ]		5052099	0					
ANR	5052162	ArrayIndexing	req -> input_line [ 3 ]		5052099	0					
ANR	5052163	PtrMemberAccess	req -> input_line		5052099	0					
ANR	5052164	Identifier	req		5052099	0					
ANR	5052165	Identifier	input_line		5052099	1					
ANR	5052166	PrimaryExpression	3		5052099	1					
ANR	5052167	Argument	& jobnum_str		5052099	1					
ANR	5052168	UnaryOperationExpression	& jobnum_str		5052099	0					
ANR	5052169	UnaryOperator	&		5052099	0					
ANR	5052170	Identifier	jobnum_str		5052099	1					
ANR	5052171	TryStatement	try		5052099	6					
ANR	5052172	CompoundStatement		34:2:1190:1206	5052099	0					
ANR	5052173	IfStatement	if ( jobnum_str == NULL )		5052099	0					
ANR	5052174	Condition	jobnum_str == NULL		5052099	0					
ANR	5052175	EqualityExpression	jobnum_str == NULL		5052099	0		==			
ANR	5052176	Identifier	jobnum_str		5052099	0					
ANR	5052177	Identifier	NULL		5052099	1					
ANR	5052178	CompoundStatement		16:26:512:512	5052099	1					
ANR	5052179	ThrowStatement	"throw runtime_error ( ""suspend of all jobs not supported"" ) ;"		5052099	0					
ANR	5052180	CallExpression	"runtime_error ( ""suspend of all jobs not supported"" )"		5052099	0					
ANR	5052181	Callee	runtime_error		5052099	0					
ANR	5052182	Identifier	runtime_error		5052099	0					
ANR	5052183	ArgumentList	"""suspend of all jobs not supported"""		5052099	1					
ANR	5052184	Argument	"""suspend of all jobs not supported"""		5052099	0					
ANR	5052185	PrimaryExpression	"""suspend of all jobs not supported"""		5052099	0					
ANR	5052186	IdentifierDeclStatement	vector < JobIdWrapper > jv ;		5052099	1					
ANR	5052187	IdentifierDecl	jv		5052099	0					
ANR	5052188	IdentifierDeclType	vector < JobIdWrapper >		5052099	0					
ANR	5052189	Identifier	jv		5052099	1					
ANR	5052190	IdentifierDeclStatement	int jobnum = atoi ( jobnum_str ) ;		5052099	2					
ANR	5052191	IdentifierDecl	jobnum = atoi ( jobnum_str )		5052099	0					
ANR	5052192	IdentifierDeclType	int		5052099	0					
ANR	5052193	Identifier	jobnum		5052099	1					
ANR	5052194	AssignmentExpression	jobnum = atoi ( jobnum_str )		5052099	2		=			
ANR	5052195	Identifier	jobnum		5052099	0					
ANR	5052196	CallExpression	atoi ( jobnum_str )		5052099	1					
ANR	5052197	Callee	atoi		5052099	0					
ANR	5052198	Identifier	atoi		5052099	0					
ANR	5052199	ArgumentList	jobnum_str		5052099	1					
ANR	5052200	Argument	jobnum_str		5052099	0					
ANR	5052201	Identifier	jobnum_str		5052099	0					
ANR	5052202	ForStatement	for ( int i = 0 ; i < jobnum ; i ++ )		5052099	3					
ANR	5052203	ForInit	int i = 0 ;		5052099	0					
ANR	5052204	IdentifierDeclStatement	int i = 0 ;		5052099	0					
ANR	5052205	IdentifierDecl	i = 0		5052099	0					
ANR	5052206	IdentifierDeclType	int		5052099	0					
ANR	5052207	Identifier	i		5052099	1					
ANR	5052208	AssignmentExpression	i = 0		5052099	2		=			
ANR	5052209	Identifier	i		5052099	0					
ANR	5052210	PrimaryExpression	0		5052099	1					
ANR	5052211	Condition	i < jobnum		5052099	1					
ANR	5052212	RelationalExpression	i < jobnum		5052099	0		<			
ANR	5052213	Identifier	i		5052099	0					
ANR	5052214	Identifier	jobnum		5052099	1					
ANR	5052215	PostIncDecOperationExpression	i ++		5052099	2					
ANR	5052216	Identifier	i		5052099	0					
ANR	5052217	IncDec	++		5052099	1					
ANR	5052218	CompoundStatement		21:36:677:677	5052099	3					
ANR	5052219	ExpressionStatement	"process_string_arg ( req -> input_line [ i + 4 ] , & jobid )"		5052099	0					
ANR	5052220	CallExpression	"process_string_arg ( req -> input_line [ i + 4 ] , & jobid )"		5052099	0					
ANR	5052221	Callee	process_string_arg		5052099	0					
ANR	5052222	Identifier	process_string_arg		5052099	0					
ANR	5052223	ArgumentList	req -> input_line [ i + 4 ]		5052099	1					
ANR	5052224	Argument	req -> input_line [ i + 4 ]		5052099	0					
ANR	5052225	ArrayIndexing	req -> input_line [ i + 4 ]		5052099	0					
ANR	5052226	PtrMemberAccess	req -> input_line		5052099	0					
ANR	5052227	Identifier	req		5052099	0					
ANR	5052228	Identifier	input_line		5052099	1					
ANR	5052229	AdditiveExpression	i + 4		5052099	1		+			
ANR	5052230	Identifier	i		5052099	0					
ANR	5052231	PrimaryExpression	4		5052099	1					
ANR	5052232	Argument	& jobid		5052099	1					
ANR	5052233	UnaryOperationExpression	& jobid		5052099	0					
ANR	5052234	UnaryOperator	&		5052099	0					
ANR	5052235	Identifier	jobid		5052099	1					
ANR	5052236	Statement	jv		5052099	1					
ANR	5052237	Statement	.		5052099	2					
ANR	5052238	Statement	push_back		5052099	3					
ANR	5052239	Statement	(		5052099	4					
ANR	5052240	Statement	JobIdWrapper		5052099	5					
ANR	5052241	Statement	(		5052099	6					
ANR	5052242	Statement	jobid		5052099	7					
ANR	5052243	Statement	","		5052099	8					
ANR	5052244	Statement	service		5052099	9					
ANR	5052245	Statement	","		5052099	10					
ANR	5052246	Statement	vector		5052099	11					
ANR	5052247	Statement	<		5052099	12					
ANR	5052248	Statement	JobPropertyWrapper		5052099	13					
ANR	5052249	Statement	>		5052099	14					
ANR	5052250	Statement	(		5052099	15					
ANR	5052251	Statement	)		5052099	16					
ANR	5052252	Statement	)		5052099	17					
ANR	5052253	Statement	)		5052099	18					
ANR	5052254	ExpressionStatement			5052099	19					
ANR	5052255	IdentifierDeclStatement	vector < string > sv ;		5052099	4					
ANR	5052256	IdentifierDecl	sv		5052099	0					
ANR	5052257	IdentifierDeclType	vector < string >		5052099	0					
ANR	5052258	Identifier	sv		5052099	1					
ANR	5052259	IdentifierDeclStatement	"JobFilterWrapper jfw ( jv , sv , - 1 , - 1 , """" , """" ) ;"		5052099	5					
ANR	5052260	IdentifierDecl	"jfw ( jv , sv , - 1 , - 1 , """" , """" )"		5052099	0					
ANR	5052261	IdentifierDeclType	JobFilterWrapper		5052099	0					
ANR	5052262	Identifier	jfw		5052099	1					
ANR	5052263	Expression	"jv , sv , - 1 , - 1 , """" , """""		5052099	2					
ANR	5052264	Identifier	jv		5052099	0					
ANR	5052265	Expression	"sv , - 1 , - 1 , """" , """""		5052099	1					
ANR	5052266	Identifier	sv		5052099	0					
ANR	5052267	Expression	"- 1 , - 1 , """" , """""		5052099	1					
ANR	5052268	UnaryOperationExpression	- 1		5052099	0					
ANR	5052269	UnaryOperator	-		5052099	0					
ANR	5052270	PrimaryExpression	1		5052099	1					
ANR	5052271	Expression	"- 1 , """" , """""		5052099	1					
ANR	5052272	UnaryOperationExpression	- 1		5052099	0					
ANR	5052273	UnaryOperator	-		5052099	0					
ANR	5052274	PrimaryExpression	1		5052099	1					
ANR	5052275	Expression	""""" , """""		5052099	1					
ANR	5052276	PrimaryExpression	""""""		5052099	0					
ANR	5052277	PrimaryExpression	""""""		5052099	1					
ANR	5052278	IdentifierDeclStatement	ResultWrapper rw ;		5052099	6					
ANR	5052279	IdentifierDecl	rw		5052099	0					
ANR	5052280	IdentifierDeclType	ResultWrapper		5052099	0					
ANR	5052281	Identifier	rw		5052099	1					
ANR	5052282	ExpressionStatement	"cp = CreamProxyFactory :: make_CreamProxySuspend ( & jfw , & rw , DEFAULT_TIMEOUT )"		5052099	7					
ANR	5052283	AssignmentExpression	"cp = CreamProxyFactory :: make_CreamProxySuspend ( & jfw , & rw , DEFAULT_TIMEOUT )"		5052099	0		=			
ANR	5052284	Identifier	cp		5052099	0					
ANR	5052285	CallExpression	"CreamProxyFactory :: make_CreamProxySuspend ( & jfw , & rw , DEFAULT_TIMEOUT )"		5052099	1					
ANR	5052286	Callee	CreamProxyFactory :: make_CreamProxySuspend		5052099	0					
ANR	5052287	Identifier	CreamProxyFactory :: make_CreamProxySuspend		5052099	0					
ANR	5052288	ArgumentList	& jfw		5052099	1					
ANR	5052289	Argument	& jfw		5052099	0					
ANR	5052290	UnaryOperationExpression	& jfw		5052099	0					
ANR	5052291	UnaryOperator	&		5052099	0					
ANR	5052292	Identifier	jfw		5052099	1					
ANR	5052293	Argument	& rw		5052099	1					
ANR	5052294	UnaryOperationExpression	& rw		5052099	0					
ANR	5052295	UnaryOperator	&		5052099	0					
ANR	5052296	Identifier	rw		5052099	1					
ANR	5052297	Argument	DEFAULT_TIMEOUT		5052099	2					
ANR	5052298	Identifier	DEFAULT_TIMEOUT		5052099	0					
ANR	5052299	ExpressionStatement	check_for_factory_error ( cp )		5052099	8					
ANR	5052300	CallExpression	check_for_factory_error ( cp )		5052099	0					
ANR	5052301	Callee	check_for_factory_error		5052099	0					
ANR	5052302	Identifier	check_for_factory_error		5052099	0					
ANR	5052303	ArgumentList	cp		5052099	1					
ANR	5052304	Argument	cp		5052099	0					
ANR	5052305	Identifier	cp		5052099	0					
ANR	5052306	ExpressionStatement	cp -> setCredential ( req -> proxy . c_str ( ) )		5052099	9					
ANR	5052307	CallExpression	cp -> setCredential ( req -> proxy . c_str ( ) )		5052099	0					
ANR	5052308	Callee	cp -> setCredential		5052099	0					
ANR	5052309	PtrMemberAccess	cp -> setCredential		5052099	0					
ANR	5052310	Identifier	cp		5052099	0					
ANR	5052311	Identifier	setCredential		5052099	1					
ANR	5052312	ArgumentList	req -> proxy . c_str ( )		5052099	1					
ANR	5052313	Argument	req -> proxy . c_str ( )		5052099	0					
ANR	5052314	CallExpression	req -> proxy . c_str ( )		5052099	0					
ANR	5052315	Callee	req -> proxy . c_str		5052099	0					
ANR	5052316	MemberAccess	req -> proxy . c_str		5052099	0					
ANR	5052317	PtrMemberAccess	req -> proxy		5052099	0					
ANR	5052318	Identifier	req		5052099	0					
ANR	5052319	Identifier	proxy		5052099	1					
ANR	5052320	Identifier	c_str		5052099	1					
ANR	5052321	ArgumentList			5052099	1					
ANR	5052322	ExpressionStatement	cp -> execute ( service )		5052099	10					
ANR	5052323	CallExpression	cp -> execute ( service )		5052099	0					
ANR	5052324	Callee	cp -> execute		5052099	0					
ANR	5052325	PtrMemberAccess	cp -> execute		5052099	0					
ANR	5052326	Identifier	cp		5052099	0					
ANR	5052327	Identifier	execute		5052099	1					
ANR	5052328	ArgumentList	service		5052099	1					
ANR	5052329	Argument	service		5052099	0					
ANR	5052330	Identifier	service		5052099	0					
ANR	5052331	ExpressionStatement	check_result_wrapper ( rw )		5052099	11					
ANR	5052332	CallExpression	check_result_wrapper ( rw )		5052099	0					
ANR	5052333	Callee	check_result_wrapper		5052099	0					
ANR	5052334	Identifier	check_result_wrapper		5052099	0					
ANR	5052335	ArgumentList	rw		5052099	1					
ANR	5052336	Argument	rw		5052099	0					
ANR	5052337	Identifier	rw		5052099	0					
ANR	5052338	Statement	delete		5052099	12					
ANR	5052339	ExpressionStatement	cp		5052099	13					
ANR	5052340	Identifier	cp		5052099	0					
ANR	5052341	CatchList			5052099	1					
ANR	5052342	CatchStatement	catch ( std :: exception & ex )		5052099	0					
ANR	5052343	Identifier	ex		5052099	0					
ANR	5052344	CompoundStatement		46:2:1502:1538	5052099	1					
ANR	5052345	Statement	delete	1107:2:31198:31203	5052099	0	True				
ANR	5052346	ExpressionStatement	cp	1107:9:31205:31207	5052099	1	True				
ANR	5052347	Identifier	cp		5052099	0					
ANR	5052348	IdentifierDeclStatement	char * msg = escape_spaces ( ex . what ( ) ) ;	1108:2:31211:31247	5052099	2	True				
ANR	5052349	IdentifierDecl	* msg = escape_spaces ( ex . what ( ) )		5052099	0					
ANR	5052350	IdentifierDeclType	char *		5052099	0					
ANR	5052351	Identifier	msg		5052099	1					
ANR	5052352	AssignmentExpression	* msg = escape_spaces ( ex . what ( ) )		5052099	2		=			
ANR	5052353	Identifier	msg		5052099	0					
ANR	5052354	CallExpression	escape_spaces ( ex . what ( ) )		5052099	1					
ANR	5052355	Callee	escape_spaces		5052099	0					
ANR	5052356	Identifier	escape_spaces		5052099	0					
ANR	5052357	ArgumentList	ex . what ( )		5052099	1					
ANR	5052358	Argument	ex . what ( )		5052099	0					
ANR	5052359	CallExpression	ex . what ( )		5052099	0					
ANR	5052360	Callee	ex . what		5052099	0					
ANR	5052361	MemberAccess	ex . what		5052099	0					
ANR	5052362	Identifier	ex		5052099	0					
ANR	5052363	Identifier	what		5052099	1					
ANR	5052364	ArgumentList			5052099	1					
ANR	5052365	ExpressionStatement	"result_line = ( string ) reqid + "" CREAM_Job_Suspend\\\\ Error:\\\\ "" + msg"	1109:2:31251:31319	5052099	3	True				
ANR	5052366	AssignmentExpression	"result_line = ( string ) reqid + "" CREAM_Job_Suspend\\\\ Error:\\\\ "" + msg"		5052099	0		=			
ANR	5052367	Identifier	result_line		5052099	0					
ANR	5052368	AdditiveExpression	"( string ) reqid + "" CREAM_Job_Suspend\\\\ Error:\\\\ "" + msg"		5052099	1		+			
ANR	5052369	CastExpression	( string ) reqid		5052099	0					
ANR	5052370	CastTarget	string		5052099	0					
ANR	5052371	Identifier	reqid		5052099	1					
ANR	5052372	AdditiveExpression	""" CREAM_Job_Suspend\\\\ Error:\\\\ "" + msg"		5052099	1		+			
ANR	5052373	PrimaryExpression	""" CREAM_Job_Suspend\\\\ Error:\\\\ """		5052099	0					
ANR	5052374	Identifier	msg		5052099	1					
ANR	5052375	ExpressionStatement	enqueue_result ( result_line )	1110:2:31323:31350	5052099	4	True				
ANR	5052376	CallExpression	enqueue_result ( result_line )		5052099	0					
ANR	5052377	Callee	enqueue_result		5052099	0					
ANR	5052378	Identifier	enqueue_result		5052099	0					
ANR	5052379	ArgumentList	result_line		5052099	1					
ANR	5052380	Argument	result_line		5052099	0					
ANR	5052381	Identifier	result_line		5052099	0					
ANR	5052382	ExpressionStatement	free ( msg )	1111:2:31354:31363	5052099	5	True				
ANR	5052383	CallExpression	free ( msg )		5052099	0					
ANR	5052384	Callee	free		5052099	0					
ANR	5052385	Identifier	free		5052099	0					
ANR	5052386	ArgumentList	msg		5052099	1					
ANR	5052387	Argument	msg		5052099	0					
ANR	5052388	Identifier	msg		5052099	0					
ANR	5052389	ReturnStatement	return 1 ;	1113:2:31370:31378	5052099	6	True				
ANR	5052390	PrimaryExpression	1		5052099	0					
ANR	5052391	ExpressionStatement	"result_line = ( string ) reqid + "" NULL"""	1116:1:31386:31423	5052099	7	True				
ANR	5052392	AssignmentExpression	"result_line = ( string ) reqid + "" NULL"""		5052099	0		=			
ANR	5052393	Identifier	result_line		5052099	0					
ANR	5052394	AdditiveExpression	"( string ) reqid + "" NULL"""		5052099	1		+			
ANR	5052395	CastExpression	( string ) reqid		5052099	0					
ANR	5052396	CastTarget	string		5052099	0					
ANR	5052397	Identifier	reqid		5052099	1					
ANR	5052398	PrimaryExpression	""" NULL"""		5052099	1					
ANR	5052399	ExpressionStatement	enqueue_result ( result_line )	1117:1:31426:31453	5052099	8	True				
ANR	5052400	CallExpression	enqueue_result ( result_line )		5052099	0					
ANR	5052401	Callee	enqueue_result		5052099	0					
ANR	5052402	Identifier	enqueue_result		5052099	0					
ANR	5052403	ArgumentList	result_line		5052099	1					
ANR	5052404	Argument	result_line		5052099	0					
ANR	5052405	Identifier	result_line		5052099	0					
ANR	5052406	ReturnStatement	return 0 ;	1119:1:31458:31466	5052099	9	True				
ANR	5052407	PrimaryExpression	0		5052099	0					
ANR	5052408	ReturnType	int		5052099	1					
ANR	5052409	Identifier	thread_cream_job_suspend		5052099	2					
ANR	5052410	ParameterList	Request * req		5052099	3					
ANR	5052411	Parameter	Request * req	1062:30:29693:29704	5052099	0	True				
ANR	5052412	ParameterType	Request *		5052099	0					
ANR	5052413	Identifier	req		5052099	1					
ANR	5052414	CFGEntryNode	ENTRY		5052099		True				
ANR	5052415	CFGExitNode	EXIT		5052099		True				
ANR	5052416	CFGErrorNode	ERROR		5052099		True				
ANR	5052417	Symbol	& reqid		5052099						
ANR	5052418	Symbol	NULL		5052099						
ANR	5052419	Symbol	* req		5052099						
ANR	5052420	Symbol	& service		5052099						
ANR	5052421	Symbol	& jobnum_str		5052099						
ANR	5052422	Symbol	cp		5052099						
ANR	5052423	Symbol	reqid		5052099						
ANR	5052424	Symbol	result_line		5052099						
ANR	5052425	Symbol	jobid		5052099						
ANR	5052426	Symbol	jobnum_str		5052099						
ANR	5052427	Symbol	* * req		5052099						
ANR	5052428	Symbol	service		5052099						
ANR	5052429	Symbol	req -> input_line		5052099						
ANR	5052430	Symbol	* req -> input_line		5052099						
ANR	5052431	Symbol	req		5052099						
ANR	5052432	Function	handle_cream_job_resume	1127:0:31679:32067							
ANR	5052433	FunctionDef	handle_cream_job_resume (char * * input_line)		5052432	0					
ANR	5052434	CompoundStatement		1128:0:31728:32067	5052432	0					
ANR	5052435	IdentifierDeclStatement	int arg_cnt = count_args ( input_line ) ;	1129:1:31731:31769	5052432	0	True				
ANR	5052436	IdentifierDecl	arg_cnt = count_args ( input_line )		5052432	0					
ANR	5052437	IdentifierDeclType	int		5052432	0					
ANR	5052438	Identifier	arg_cnt		5052432	1					
ANR	5052439	AssignmentExpression	arg_cnt = count_args ( input_line )		5052432	2		=			
ANR	5052440	Identifier	arg_cnt		5052432	0					
ANR	5052441	CallExpression	count_args ( input_line )		5052432	1					
ANR	5052442	Callee	count_args		5052432	0					
ANR	5052443	Identifier	count_args		5052432	0					
ANR	5052444	ArgumentList	input_line		5052432	1					
ANR	5052445	Argument	input_line		5052432	0					
ANR	5052446	Identifier	input_line		5052432	0					
ANR	5052447	IdentifierDeclStatement	char * jobnum = NULL ;	1130:1:31772:31791	5052432	1	True				
ANR	5052448	IdentifierDecl	* jobnum = NULL		5052432	0					
ANR	5052449	IdentifierDeclType	char *		5052432	0					
ANR	5052450	Identifier	jobnum		5052432	1					
ANR	5052451	AssignmentExpression	* jobnum = NULL		5052432	2		=			
ANR	5052452	Identifier	NULL		5052432	0					
ANR	5052453	Identifier	NULL		5052432	1					
ANR	5052454	IfStatement	if ( arg_cnt < 4 )		5052432	2					
ANR	5052455	Condition	arg_cnt < 4	1132:6:31800:31810	5052432	0	True				
ANR	5052456	RelationalExpression	arg_cnt < 4		5052432	0		<			
ANR	5052457	Identifier	arg_cnt		5052432	0					
ANR	5052458	PrimaryExpression	4		5052432	1					
ANR	5052459	CompoundStatement		5:20:85:85	5052432	1					
ANR	5052460	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	1133:2:31818:31839	5052432	0	True				
ANR	5052461	CallExpression	HANDLE_SYNTAX_ERROR ( )		5052432	0					
ANR	5052462	Callee	HANDLE_SYNTAX_ERROR		5052432	0					
ANR	5052463	Identifier	HANDLE_SYNTAX_ERROR		5052432	0					
ANR	5052464	ArgumentList			5052432	1					
ANR	5052465	ExpressionStatement	"process_string_arg ( input_line [ 3 ] , & jobnum )"	1136:1:31846:31890	5052432	3	True				
ANR	5052466	CallExpression	"process_string_arg ( input_line [ 3 ] , & jobnum )"		5052432	0					
ANR	5052467	Callee	process_string_arg		5052432	0					
ANR	5052468	Identifier	process_string_arg		5052432	0					
ANR	5052469	ArgumentList	input_line [ 3 ]		5052432	1					
ANR	5052470	Argument	input_line [ 3 ]		5052432	0					
ANR	5052471	ArrayIndexing	input_line [ 3 ]		5052432	0					
ANR	5052472	Identifier	input_line		5052432	0					
ANR	5052473	PrimaryExpression	3		5052432	1					
ANR	5052474	Argument	& jobnum		5052432	1					
ANR	5052475	UnaryOperationExpression	& jobnum		5052432	0					
ANR	5052476	UnaryOperator	&		5052432	0					
ANR	5052477	Identifier	jobnum		5052432	1					
ANR	5052478	IfStatement	if ( jobnum && ( atoi ( jobnum ) + 4 != arg_cnt ) )		5052432	4					
ANR	5052479	Condition	jobnum && ( atoi ( jobnum ) + 4 != arg_cnt )	1137:6:31898:31940	5052432	0	True				
ANR	5052480	AndExpression	jobnum && ( atoi ( jobnum ) + 4 != arg_cnt )		5052432	0		&&			
ANR	5052481	Identifier	jobnum		5052432	0					
ANR	5052482	EqualityExpression	atoi ( jobnum ) + 4 != arg_cnt		5052432	1		!=			
ANR	5052483	AdditiveExpression	atoi ( jobnum ) + 4		5052432	0		+			
ANR	5052484	CallExpression	atoi ( jobnum )		5052432	0					
ANR	5052485	Callee	atoi		5052432	0					
ANR	5052486	Identifier	atoi		5052432	0					
ANR	5052487	ArgumentList	jobnum		5052432	1					
ANR	5052488	Argument	jobnum		5052432	0					
ANR	5052489	Identifier	jobnum		5052432	0					
ANR	5052490	PrimaryExpression	4		5052432	1					
ANR	5052491	Identifier	arg_cnt		5052432	1					
ANR	5052492	CompoundStatement		10:52:215:215	5052432	1					
ANR	5052493	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	1138:2:31948:31969	5052432	0	True				
ANR	5052494	CallExpression	HANDLE_SYNTAX_ERROR ( )		5052432	0					
ANR	5052495	Callee	HANDLE_SYNTAX_ERROR		5052432	0					
ANR	5052496	Identifier	HANDLE_SYNTAX_ERROR		5052432	0					
ANR	5052497	ArgumentList			5052432	1					
ANR	5052498	ExpressionStatement	"enqueue_request ( input_line , thread_cream_job_resume )"	1141:1:31976:32030	5052432	5	True				
ANR	5052499	CallExpression	"enqueue_request ( input_line , thread_cream_job_resume )"		5052432	0					
ANR	5052500	Callee	enqueue_request		5052432	0					
ANR	5052501	Identifier	enqueue_request		5052432	0					
ANR	5052502	ArgumentList	input_line		5052432	1					
ANR	5052503	Argument	input_line		5052432	0					
ANR	5052504	Identifier	input_line		5052432	0					
ANR	5052505	Argument	thread_cream_job_resume		5052432	1					
ANR	5052506	Identifier	thread_cream_job_resume		5052432	0					
ANR	5052507	ExpressionStatement	"gahp_printf ( ""S\\n"" )"	1143:1:32034:32052	5052432	6	True				
ANR	5052508	CallExpression	"gahp_printf ( ""S\\n"" )"		5052432	0					
ANR	5052509	Callee	gahp_printf		5052432	0					
ANR	5052510	Identifier	gahp_printf		5052432	0					
ANR	5052511	ArgumentList	"""S\\n"""		5052432	1					
ANR	5052512	Argument	"""S\\n"""		5052432	0					
ANR	5052513	PrimaryExpression	"""S\\n"""		5052432	0					
ANR	5052514	ReturnStatement	return 0 ;	1145:1:32057:32065	5052432	7	True				
ANR	5052515	PrimaryExpression	0		5052432	0					
ANR	5052516	ReturnType	int		5052432	1					
ANR	5052517	Identifier	handle_cream_job_resume		5052432	2					
ANR	5052518	ParameterList	char * * input_line		5052432	3					
ANR	5052519	Parameter	char * * input_line	1127:29:31708:31724	5052432	0	True				
ANR	5052520	ParameterType	char * *		5052432	0					
ANR	5052521	Identifier	input_line		5052432	1					
ANR	5052522	CFGEntryNode	ENTRY		5052432		True				
ANR	5052523	CFGExitNode	EXIT		5052432		True				
ANR	5052524	Symbol	atoi		5052432						
ANR	5052525	Symbol	* input_line		5052432						
ANR	5052526	Symbol	NULL		5052432						
ANR	5052527	Symbol	& jobnum		5052432						
ANR	5052528	Symbol	jobnum		5052432						
ANR	5052529	Symbol	thread_cream_job_resume		5052432						
ANR	5052530	Symbol	count_args		5052432						
ANR	5052531	Symbol	input_line		5052432						
ANR	5052532	Symbol	arg_cnt		5052432						
ANR	5052533	Function	thread_cream_job_resume	1148:0:32070:33869							
ANR	5052534	FunctionDef	thread_cream_job_resume (Request * req)		5052533	0					
ANR	5052535	CompoundStatement		1149:0:32114:33869	5052533	0					
ANR	5052536	IdentifierDeclStatement	"char * reqid , * service , * jobnum_str , * jobid ;"	1155:1:32338:32380	5052533	0	True				
ANR	5052537	IdentifierDecl	* reqid		5052533	0					
ANR	5052538	IdentifierDeclType	char *		5052533	0					
ANR	5052539	Identifier	reqid		5052533	1					
ANR	5052540	IdentifierDecl	* service		5052533	1					
ANR	5052541	IdentifierDeclType	char *		5052533	0					
ANR	5052542	Identifier	service		5052533	1					
ANR	5052543	IdentifierDecl	* jobnum_str		5052533	2					
ANR	5052544	IdentifierDeclType	char *		5052533	0					
ANR	5052545	Identifier	jobnum_str		5052533	1					
ANR	5052546	IdentifierDecl	* jobid		5052533	3					
ANR	5052547	IdentifierDeclType	char *		5052533	0					
ANR	5052548	Identifier	jobid		5052533	1					
ANR	5052549	IdentifierDeclStatement	string result_line ;	1156:1:32383:32401	5052533	1	True				
ANR	5052550	IdentifierDecl	result_line		5052533	0					
ANR	5052551	IdentifierDeclType	string		5052533	0					
ANR	5052552	Identifier	result_line		5052533	1					
ANR	5052553	IdentifierDeclStatement	AbsCreamProxy * cp = NULL ;	1157:1:32404:32428	5052533	2	True				
ANR	5052554	IdentifierDecl	* cp = NULL		5052533	0					
ANR	5052555	IdentifierDeclType	AbsCreamProxy *		5052533	0					
ANR	5052556	Identifier	cp		5052533	1					
ANR	5052557	AssignmentExpression	* cp = NULL		5052533	2		=			
ANR	5052558	Identifier	NULL		5052533	0					
ANR	5052559	Identifier	NULL		5052533	1					
ANR	5052560	ExpressionStatement	"process_string_arg ( req -> input_line [ 1 ] , & reqid )"	1159:1:32433:32481	5052533	3	True				
ANR	5052561	CallExpression	"process_string_arg ( req -> input_line [ 1 ] , & reqid )"		5052533	0					
ANR	5052562	Callee	process_string_arg		5052533	0					
ANR	5052563	Identifier	process_string_arg		5052533	0					
ANR	5052564	ArgumentList	req -> input_line [ 1 ]		5052533	1					
ANR	5052565	Argument	req -> input_line [ 1 ]		5052533	0					
ANR	5052566	ArrayIndexing	req -> input_line [ 1 ]		5052533	0					
ANR	5052567	PtrMemberAccess	req -> input_line		5052533	0					
ANR	5052568	Identifier	req		5052533	0					
ANR	5052569	Identifier	input_line		5052533	1					
ANR	5052570	PrimaryExpression	1		5052533	1					
ANR	5052571	Argument	& reqid		5052533	1					
ANR	5052572	UnaryOperationExpression	& reqid		5052533	0					
ANR	5052573	UnaryOperator	&		5052533	0					
ANR	5052574	Identifier	reqid		5052533	1					
ANR	5052575	ExpressionStatement	"process_string_arg ( req -> input_line [ 2 ] , & service )"	1160:1:32484:32534	5052533	4	True				
ANR	5052576	CallExpression	"process_string_arg ( req -> input_line [ 2 ] , & service )"		5052533	0					
ANR	5052577	Callee	process_string_arg		5052533	0					
ANR	5052578	Identifier	process_string_arg		5052533	0					
ANR	5052579	ArgumentList	req -> input_line [ 2 ]		5052533	1					
ANR	5052580	Argument	req -> input_line [ 2 ]		5052533	0					
ANR	5052581	ArrayIndexing	req -> input_line [ 2 ]		5052533	0					
ANR	5052582	PtrMemberAccess	req -> input_line		5052533	0					
ANR	5052583	Identifier	req		5052533	0					
ANR	5052584	Identifier	input_line		5052533	1					
ANR	5052585	PrimaryExpression	2		5052533	1					
ANR	5052586	Argument	& service		5052533	1					
ANR	5052587	UnaryOperationExpression	& service		5052533	0					
ANR	5052588	UnaryOperator	&		5052533	0					
ANR	5052589	Identifier	service		5052533	1					
ANR	5052590	ExpressionStatement	"process_string_arg ( req -> input_line [ 3 ] , & jobnum_str )"	1161:1:32537:32590	5052533	5	True				
ANR	5052591	CallExpression	"process_string_arg ( req -> input_line [ 3 ] , & jobnum_str )"		5052533	0					
ANR	5052592	Callee	process_string_arg		5052533	0					
ANR	5052593	Identifier	process_string_arg		5052533	0					
ANR	5052594	ArgumentList	req -> input_line [ 3 ]		5052533	1					
ANR	5052595	Argument	req -> input_line [ 3 ]		5052533	0					
ANR	5052596	ArrayIndexing	req -> input_line [ 3 ]		5052533	0					
ANR	5052597	PtrMemberAccess	req -> input_line		5052533	0					
ANR	5052598	Identifier	req		5052533	0					
ANR	5052599	Identifier	input_line		5052533	1					
ANR	5052600	PrimaryExpression	3		5052533	1					
ANR	5052601	Argument	& jobnum_str		5052533	1					
ANR	5052602	UnaryOperationExpression	& jobnum_str		5052533	0					
ANR	5052603	UnaryOperator	&		5052533	0					
ANR	5052604	Identifier	jobnum_str		5052533	1					
ANR	5052605	TryStatement	try		5052533	6					
ANR	5052606	CompoundStatement		34:2:1189:1205	5052533	0					
ANR	5052607	IfStatement	if ( jobnum_str == NULL )		5052533	0					
ANR	5052608	Condition	jobnum_str == NULL		5052533	0					
ANR	5052609	EqualityExpression	jobnum_str == NULL		5052533	0		==			
ANR	5052610	Identifier	jobnum_str		5052533	0					
ANR	5052611	Identifier	NULL		5052533	1					
ANR	5052612	CompoundStatement		16:26:512:512	5052533	1					
ANR	5052613	ThrowStatement	"throw runtime_error ( ""resume of all jobs not supported"" ) ;"		5052533	0					
ANR	5052614	CallExpression	"runtime_error ( ""resume of all jobs not supported"" )"		5052533	0					
ANR	5052615	Callee	runtime_error		5052533	0					
ANR	5052616	Identifier	runtime_error		5052533	0					
ANR	5052617	ArgumentList	"""resume of all jobs not supported"""		5052533	1					
ANR	5052618	Argument	"""resume of all jobs not supported"""		5052533	0					
ANR	5052619	PrimaryExpression	"""resume of all jobs not supported"""		5052533	0					
ANR	5052620	IdentifierDeclStatement	vector < JobIdWrapper > jv ;		5052533	1					
ANR	5052621	IdentifierDecl	jv		5052533	0					
ANR	5052622	IdentifierDeclType	vector < JobIdWrapper >		5052533	0					
ANR	5052623	Identifier	jv		5052533	1					
ANR	5052624	IdentifierDeclStatement	int jobnum = atoi ( jobnum_str ) ;		5052533	2					
ANR	5052625	IdentifierDecl	jobnum = atoi ( jobnum_str )		5052533	0					
ANR	5052626	IdentifierDeclType	int		5052533	0					
ANR	5052627	Identifier	jobnum		5052533	1					
ANR	5052628	AssignmentExpression	jobnum = atoi ( jobnum_str )		5052533	2		=			
ANR	5052629	Identifier	jobnum		5052533	0					
ANR	5052630	CallExpression	atoi ( jobnum_str )		5052533	1					
ANR	5052631	Callee	atoi		5052533	0					
ANR	5052632	Identifier	atoi		5052533	0					
ANR	5052633	ArgumentList	jobnum_str		5052533	1					
ANR	5052634	Argument	jobnum_str		5052533	0					
ANR	5052635	Identifier	jobnum_str		5052533	0					
ANR	5052636	ForStatement	for ( int i = 0 ; i < jobnum ; i ++ )		5052533	3					
ANR	5052637	ForInit	int i = 0 ;		5052533	0					
ANR	5052638	IdentifierDeclStatement	int i = 0 ;		5052533	0					
ANR	5052639	IdentifierDecl	i = 0		5052533	0					
ANR	5052640	IdentifierDeclType	int		5052533	0					
ANR	5052641	Identifier	i		5052533	1					
ANR	5052642	AssignmentExpression	i = 0		5052533	2		=			
ANR	5052643	Identifier	i		5052533	0					
ANR	5052644	PrimaryExpression	0		5052533	1					
ANR	5052645	Condition	i < jobnum		5052533	1					
ANR	5052646	RelationalExpression	i < jobnum		5052533	0		<			
ANR	5052647	Identifier	i		5052533	0					
ANR	5052648	Identifier	jobnum		5052533	1					
ANR	5052649	PostIncDecOperationExpression	i ++		5052533	2					
ANR	5052650	Identifier	i		5052533	0					
ANR	5052651	IncDec	++		5052533	1					
ANR	5052652	CompoundStatement		21:36:676:676	5052533	3					
ANR	5052653	ExpressionStatement	"process_string_arg ( req -> input_line [ i + 4 ] , & jobid )"		5052533	0					
ANR	5052654	CallExpression	"process_string_arg ( req -> input_line [ i + 4 ] , & jobid )"		5052533	0					
ANR	5052655	Callee	process_string_arg		5052533	0					
ANR	5052656	Identifier	process_string_arg		5052533	0					
ANR	5052657	ArgumentList	req -> input_line [ i + 4 ]		5052533	1					
ANR	5052658	Argument	req -> input_line [ i + 4 ]		5052533	0					
ANR	5052659	ArrayIndexing	req -> input_line [ i + 4 ]		5052533	0					
ANR	5052660	PtrMemberAccess	req -> input_line		5052533	0					
ANR	5052661	Identifier	req		5052533	0					
ANR	5052662	Identifier	input_line		5052533	1					
ANR	5052663	AdditiveExpression	i + 4		5052533	1		+			
ANR	5052664	Identifier	i		5052533	0					
ANR	5052665	PrimaryExpression	4		5052533	1					
ANR	5052666	Argument	& jobid		5052533	1					
ANR	5052667	UnaryOperationExpression	& jobid		5052533	0					
ANR	5052668	UnaryOperator	&		5052533	0					
ANR	5052669	Identifier	jobid		5052533	1					
ANR	5052670	Statement	jv		5052533	1					
ANR	5052671	Statement	.		5052533	2					
ANR	5052672	Statement	push_back		5052533	3					
ANR	5052673	Statement	(		5052533	4					
ANR	5052674	Statement	JobIdWrapper		5052533	5					
ANR	5052675	Statement	(		5052533	6					
ANR	5052676	Statement	jobid		5052533	7					
ANR	5052677	Statement	","		5052533	8					
ANR	5052678	Statement	service		5052533	9					
ANR	5052679	Statement	","		5052533	10					
ANR	5052680	Statement	vector		5052533	11					
ANR	5052681	Statement	<		5052533	12					
ANR	5052682	Statement	JobPropertyWrapper		5052533	13					
ANR	5052683	Statement	>		5052533	14					
ANR	5052684	Statement	(		5052533	15					
ANR	5052685	Statement	)		5052533	16					
ANR	5052686	Statement	)		5052533	17					
ANR	5052687	Statement	)		5052533	18					
ANR	5052688	ExpressionStatement			5052533	19					
ANR	5052689	IdentifierDeclStatement	vector < string > sv ;		5052533	4					
ANR	5052690	IdentifierDecl	sv		5052533	0					
ANR	5052691	IdentifierDeclType	vector < string >		5052533	0					
ANR	5052692	Identifier	sv		5052533	1					
ANR	5052693	IdentifierDeclStatement	"JobFilterWrapper jfw ( jv , sv , - 1 , - 1 , """" , """" ) ;"		5052533	5					
ANR	5052694	IdentifierDecl	"jfw ( jv , sv , - 1 , - 1 , """" , """" )"		5052533	0					
ANR	5052695	IdentifierDeclType	JobFilterWrapper		5052533	0					
ANR	5052696	Identifier	jfw		5052533	1					
ANR	5052697	Expression	"jv , sv , - 1 , - 1 , """" , """""		5052533	2					
ANR	5052698	Identifier	jv		5052533	0					
ANR	5052699	Expression	"sv , - 1 , - 1 , """" , """""		5052533	1					
ANR	5052700	Identifier	sv		5052533	0					
ANR	5052701	Expression	"- 1 , - 1 , """" , """""		5052533	1					
ANR	5052702	UnaryOperationExpression	- 1		5052533	0					
ANR	5052703	UnaryOperator	-		5052533	0					
ANR	5052704	PrimaryExpression	1		5052533	1					
ANR	5052705	Expression	"- 1 , """" , """""		5052533	1					
ANR	5052706	UnaryOperationExpression	- 1		5052533	0					
ANR	5052707	UnaryOperator	-		5052533	0					
ANR	5052708	PrimaryExpression	1		5052533	1					
ANR	5052709	Expression	""""" , """""		5052533	1					
ANR	5052710	PrimaryExpression	""""""		5052533	0					
ANR	5052711	PrimaryExpression	""""""		5052533	1					
ANR	5052712	IdentifierDeclStatement	ResultWrapper rw ;		5052533	6					
ANR	5052713	IdentifierDecl	rw		5052533	0					
ANR	5052714	IdentifierDeclType	ResultWrapper		5052533	0					
ANR	5052715	Identifier	rw		5052533	1					
ANR	5052716	ExpressionStatement	"cp = CreamProxyFactory :: make_CreamProxyResume ( & jfw , & rw , DEFAULT_TIMEOUT )"		5052533	7					
ANR	5052717	AssignmentExpression	"cp = CreamProxyFactory :: make_CreamProxyResume ( & jfw , & rw , DEFAULT_TIMEOUT )"		5052533	0		=			
ANR	5052718	Identifier	cp		5052533	0					
ANR	5052719	CallExpression	"CreamProxyFactory :: make_CreamProxyResume ( & jfw , & rw , DEFAULT_TIMEOUT )"		5052533	1					
ANR	5052720	Callee	CreamProxyFactory :: make_CreamProxyResume		5052533	0					
ANR	5052721	Identifier	CreamProxyFactory :: make_CreamProxyResume		5052533	0					
ANR	5052722	ArgumentList	& jfw		5052533	1					
ANR	5052723	Argument	& jfw		5052533	0					
ANR	5052724	UnaryOperationExpression	& jfw		5052533	0					
ANR	5052725	UnaryOperator	&		5052533	0					
ANR	5052726	Identifier	jfw		5052533	1					
ANR	5052727	Argument	& rw		5052533	1					
ANR	5052728	UnaryOperationExpression	& rw		5052533	0					
ANR	5052729	UnaryOperator	&		5052533	0					
ANR	5052730	Identifier	rw		5052533	1					
ANR	5052731	Argument	DEFAULT_TIMEOUT		5052533	2					
ANR	5052732	Identifier	DEFAULT_TIMEOUT		5052533	0					
ANR	5052733	ExpressionStatement	check_for_factory_error ( cp )		5052533	8					
ANR	5052734	CallExpression	check_for_factory_error ( cp )		5052533	0					
ANR	5052735	Callee	check_for_factory_error		5052533	0					
ANR	5052736	Identifier	check_for_factory_error		5052533	0					
ANR	5052737	ArgumentList	cp		5052533	1					
ANR	5052738	Argument	cp		5052533	0					
ANR	5052739	Identifier	cp		5052533	0					
ANR	5052740	ExpressionStatement	cp -> setCredential ( req -> proxy . c_str ( ) )		5052533	9					
ANR	5052741	CallExpression	cp -> setCredential ( req -> proxy . c_str ( ) )		5052533	0					
ANR	5052742	Callee	cp -> setCredential		5052533	0					
ANR	5052743	PtrMemberAccess	cp -> setCredential		5052533	0					
ANR	5052744	Identifier	cp		5052533	0					
ANR	5052745	Identifier	setCredential		5052533	1					
ANR	5052746	ArgumentList	req -> proxy . c_str ( )		5052533	1					
ANR	5052747	Argument	req -> proxy . c_str ( )		5052533	0					
ANR	5052748	CallExpression	req -> proxy . c_str ( )		5052533	0					
ANR	5052749	Callee	req -> proxy . c_str		5052533	0					
ANR	5052750	MemberAccess	req -> proxy . c_str		5052533	0					
ANR	5052751	PtrMemberAccess	req -> proxy		5052533	0					
ANR	5052752	Identifier	req		5052533	0					
ANR	5052753	Identifier	proxy		5052533	1					
ANR	5052754	Identifier	c_str		5052533	1					
ANR	5052755	ArgumentList			5052533	1					
ANR	5052756	ExpressionStatement	cp -> execute ( service )		5052533	10					
ANR	5052757	CallExpression	cp -> execute ( service )		5052533	0					
ANR	5052758	Callee	cp -> execute		5052533	0					
ANR	5052759	PtrMemberAccess	cp -> execute		5052533	0					
ANR	5052760	Identifier	cp		5052533	0					
ANR	5052761	Identifier	execute		5052533	1					
ANR	5052762	ArgumentList	service		5052533	1					
ANR	5052763	Argument	service		5052533	0					
ANR	5052764	Identifier	service		5052533	0					
ANR	5052765	ExpressionStatement	check_result_wrapper ( rw )		5052533	11					
ANR	5052766	CallExpression	check_result_wrapper ( rw )		5052533	0					
ANR	5052767	Callee	check_result_wrapper		5052533	0					
ANR	5052768	Identifier	check_result_wrapper		5052533	0					
ANR	5052769	ArgumentList	rw		5052533	1					
ANR	5052770	Argument	rw		5052533	0					
ANR	5052771	Identifier	rw		5052533	0					
ANR	5052772	Statement	delete		5052533	12					
ANR	5052773	ExpressionStatement	cp		5052533	13					
ANR	5052774	Identifier	cp		5052533	0					
ANR	5052775	CatchList			5052533	1					
ANR	5052776	CatchStatement	catch ( std :: exception & ex )		5052533	0					
ANR	5052777	Identifier	ex		5052533	0					
ANR	5052778	CompoundStatement		46:2:1498:1534	5052533	1					
ANR	5052779	Statement	delete	1193:2:33600:33605	5052533	0	True				
ANR	5052780	ExpressionStatement	cp	1193:9:33607:33609	5052533	1	True				
ANR	5052781	Identifier	cp		5052533	0					
ANR	5052782	IdentifierDeclStatement	char * msg = escape_spaces ( ex . what ( ) ) ;	1194:2:33613:33649	5052533	2	True				
ANR	5052783	IdentifierDecl	* msg = escape_spaces ( ex . what ( ) )		5052533	0					
ANR	5052784	IdentifierDeclType	char *		5052533	0					
ANR	5052785	Identifier	msg		5052533	1					
ANR	5052786	AssignmentExpression	* msg = escape_spaces ( ex . what ( ) )		5052533	2		=			
ANR	5052787	Identifier	msg		5052533	0					
ANR	5052788	CallExpression	escape_spaces ( ex . what ( ) )		5052533	1					
ANR	5052789	Callee	escape_spaces		5052533	0					
ANR	5052790	Identifier	escape_spaces		5052533	0					
ANR	5052791	ArgumentList	ex . what ( )		5052533	1					
ANR	5052792	Argument	ex . what ( )		5052533	0					
ANR	5052793	CallExpression	ex . what ( )		5052533	0					
ANR	5052794	Callee	ex . what		5052533	0					
ANR	5052795	MemberAccess	ex . what		5052533	0					
ANR	5052796	Identifier	ex		5052533	0					
ANR	5052797	Identifier	what		5052533	1					
ANR	5052798	ArgumentList			5052533	1					
ANR	5052799	ExpressionStatement	"result_line = ( string ) reqid + "" CREAM_Job_Resume\\\\ Error:\\\\ "" + msg"	1195:2:33653:33720	5052533	3	True				
ANR	5052800	AssignmentExpression	"result_line = ( string ) reqid + "" CREAM_Job_Resume\\\\ Error:\\\\ "" + msg"		5052533	0		=			
ANR	5052801	Identifier	result_line		5052533	0					
ANR	5052802	AdditiveExpression	"( string ) reqid + "" CREAM_Job_Resume\\\\ Error:\\\\ "" + msg"		5052533	1		+			
ANR	5052803	CastExpression	( string ) reqid		5052533	0					
ANR	5052804	CastTarget	string		5052533	0					
ANR	5052805	Identifier	reqid		5052533	1					
ANR	5052806	AdditiveExpression	""" CREAM_Job_Resume\\\\ Error:\\\\ "" + msg"		5052533	1		+			
ANR	5052807	PrimaryExpression	""" CREAM_Job_Resume\\\\ Error:\\\\ """		5052533	0					
ANR	5052808	Identifier	msg		5052533	1					
ANR	5052809	ExpressionStatement	enqueue_result ( result_line )	1196:2:33724:33751	5052533	4	True				
ANR	5052810	CallExpression	enqueue_result ( result_line )		5052533	0					
ANR	5052811	Callee	enqueue_result		5052533	0					
ANR	5052812	Identifier	enqueue_result		5052533	0					
ANR	5052813	ArgumentList	result_line		5052533	1					
ANR	5052814	Argument	result_line		5052533	0					
ANR	5052815	Identifier	result_line		5052533	0					
ANR	5052816	ExpressionStatement	free ( msg )	1197:2:33755:33764	5052533	5	True				
ANR	5052817	CallExpression	free ( msg )		5052533	0					
ANR	5052818	Callee	free		5052533	0					
ANR	5052819	Identifier	free		5052533	0					
ANR	5052820	ArgumentList	msg		5052533	1					
ANR	5052821	Argument	msg		5052533	0					
ANR	5052822	Identifier	msg		5052533	0					
ANR	5052823	ReturnStatement	return 1 ;	1199:2:33771:33779	5052533	6	True				
ANR	5052824	PrimaryExpression	1		5052533	0					
ANR	5052825	ExpressionStatement	"result_line = ( string ) reqid + "" NULL"""	1202:1:33787:33824	5052533	7	True				
ANR	5052826	AssignmentExpression	"result_line = ( string ) reqid + "" NULL"""		5052533	0		=			
ANR	5052827	Identifier	result_line		5052533	0					
ANR	5052828	AdditiveExpression	"( string ) reqid + "" NULL"""		5052533	1		+			
ANR	5052829	CastExpression	( string ) reqid		5052533	0					
ANR	5052830	CastTarget	string		5052533	0					
ANR	5052831	Identifier	reqid		5052533	1					
ANR	5052832	PrimaryExpression	""" NULL"""		5052533	1					
ANR	5052833	ExpressionStatement	enqueue_result ( result_line )	1203:1:33827:33854	5052533	8	True				
ANR	5052834	CallExpression	enqueue_result ( result_line )		5052533	0					
ANR	5052835	Callee	enqueue_result		5052533	0					
ANR	5052836	Identifier	enqueue_result		5052533	0					
ANR	5052837	ArgumentList	result_line		5052533	1					
ANR	5052838	Argument	result_line		5052533	0					
ANR	5052839	Identifier	result_line		5052533	0					
ANR	5052840	ReturnStatement	return 0 ;	1205:1:33859:33867	5052533	9	True				
ANR	5052841	PrimaryExpression	0		5052533	0					
ANR	5052842	ReturnType	int		5052533	1					
ANR	5052843	Identifier	thread_cream_job_resume		5052533	2					
ANR	5052844	ParameterList	Request * req		5052533	3					
ANR	5052845	Parameter	Request * req	1148:29:32099:32110	5052533	0	True				
ANR	5052846	ParameterType	Request *		5052533	0					
ANR	5052847	Identifier	req		5052533	1					
ANR	5052848	CFGEntryNode	ENTRY		5052533		True				
ANR	5052849	CFGExitNode	EXIT		5052533		True				
ANR	5052850	CFGErrorNode	ERROR		5052533		True				
ANR	5052851	Symbol	& reqid		5052533						
ANR	5052852	Symbol	NULL		5052533						
ANR	5052853	Symbol	* req		5052533						
ANR	5052854	Symbol	& service		5052533						
ANR	5052855	Symbol	& jobnum_str		5052533						
ANR	5052856	Symbol	cp		5052533						
ANR	5052857	Symbol	reqid		5052533						
ANR	5052858	Symbol	result_line		5052533						
ANR	5052859	Symbol	jobid		5052533						
ANR	5052860	Symbol	jobnum_str		5052533						
ANR	5052861	Symbol	* * req		5052533						
ANR	5052862	Symbol	service		5052533						
ANR	5052863	Symbol	req -> input_line		5052533						
ANR	5052864	Symbol	* req -> input_line		5052533						
ANR	5052865	Symbol	req		5052533						
ANR	5052866	Function	handle_cream_set_lease	1213:0:34051:34286							
ANR	5052867	FunctionDef	handle_cream_set_lease (char * * input_line)		5052866	0					
ANR	5052868	CompoundStatement		1214:0:34099:34286	5052866	0					
ANR	5052869	IdentifierDeclStatement	int arg_cnt = count_args ( input_line ) ;	1215:1:34102:34140	5052866	0	True				
ANR	5052870	IdentifierDecl	arg_cnt = count_args ( input_line )		5052866	0					
ANR	5052871	IdentifierDeclType	int		5052866	0					
ANR	5052872	Identifier	arg_cnt		5052866	1					
ANR	5052873	AssignmentExpression	arg_cnt = count_args ( input_line )		5052866	2		=			
ANR	5052874	Identifier	arg_cnt		5052866	0					
ANR	5052875	CallExpression	count_args ( input_line )		5052866	1					
ANR	5052876	Callee	count_args		5052866	0					
ANR	5052877	Identifier	count_args		5052866	0					
ANR	5052878	ArgumentList	input_line		5052866	1					
ANR	5052879	Argument	input_line		5052866	0					
ANR	5052880	Identifier	input_line		5052866	0					
ANR	5052881	IfStatement	if ( arg_cnt != 5 )		5052866	1					
ANR	5052882	Condition	arg_cnt != 5	1217:6:34149:34160	5052866	0	True				
ANR	5052883	EqualityExpression	arg_cnt != 5		5052866	0		!=			
ANR	5052884	Identifier	arg_cnt		5052866	0					
ANR	5052885	PrimaryExpression	5		5052866	1					
ANR	5052886	CompoundStatement		4:21:64:64	5052866	1					
ANR	5052887	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	1218:2:34168:34189	5052866	0	True				
ANR	5052888	CallExpression	HANDLE_SYNTAX_ERROR ( )		5052866	0					
ANR	5052889	Callee	HANDLE_SYNTAX_ERROR		5052866	0					
ANR	5052890	Identifier	HANDLE_SYNTAX_ERROR		5052866	0					
ANR	5052891	ArgumentList			5052866	1					
ANR	5052892	ExpressionStatement	"enqueue_request ( input_line , thread_cream_set_lease )"	1221:1:34196:34249	5052866	2	True				
ANR	5052893	CallExpression	"enqueue_request ( input_line , thread_cream_set_lease )"		5052866	0					
ANR	5052894	Callee	enqueue_request		5052866	0					
ANR	5052895	Identifier	enqueue_request		5052866	0					
ANR	5052896	ArgumentList	input_line		5052866	1					
ANR	5052897	Argument	input_line		5052866	0					
ANR	5052898	Identifier	input_line		5052866	0					
ANR	5052899	Argument	thread_cream_set_lease		5052866	1					
ANR	5052900	Identifier	thread_cream_set_lease		5052866	0					
ANR	5052901	ExpressionStatement	"gahp_printf ( ""S\\n"" )"	1223:1:34253:34271	5052866	3	True				
ANR	5052902	CallExpression	"gahp_printf ( ""S\\n"" )"		5052866	0					
ANR	5052903	Callee	gahp_printf		5052866	0					
ANR	5052904	Identifier	gahp_printf		5052866	0					
ANR	5052905	ArgumentList	"""S\\n"""		5052866	1					
ANR	5052906	Argument	"""S\\n"""		5052866	0					
ANR	5052907	PrimaryExpression	"""S\\n"""		5052866	0					
ANR	5052908	ReturnStatement	return 0 ;	1225:1:34276:34284	5052866	4	True				
ANR	5052909	PrimaryExpression	0		5052866	0					
ANR	5052910	ReturnType	int		5052866	1					
ANR	5052911	Identifier	handle_cream_set_lease		5052866	2					
ANR	5052912	ParameterList	char * * input_line		5052866	3					
ANR	5052913	Parameter	char * * input_line	1213:28:34079:34095	5052866	0	True				
ANR	5052914	ParameterType	char * *		5052866	0					
ANR	5052915	Identifier	input_line		5052866	1					
ANR	5052916	CFGEntryNode	ENTRY		5052866		True				
ANR	5052917	CFGExitNode	EXIT		5052866		True				
ANR	5052918	Symbol	thread_cream_set_lease		5052866						
ANR	5052919	Symbol	count_args		5052866						
ANR	5052920	Symbol	input_line		5052866						
ANR	5052921	Symbol	arg_cnt		5052866						
ANR	5052922	Function	thread_cream_set_lease	1228:0:34289:35624							
ANR	5052923	FunctionDef	thread_cream_set_lease (Request * req)		5052922	0					
ANR	5052924	CompoundStatement		1229:0:34332:35624	5052922	0					
ANR	5052925	IdentifierDeclStatement	"char * reqid , * service , * lease_id ;"	1234:1:34494:34526	5052922	0	True				
ANR	5052926	IdentifierDecl	* reqid		5052922	0					
ANR	5052927	IdentifierDeclType	char *		5052922	0					
ANR	5052928	Identifier	reqid		5052922	1					
ANR	5052929	IdentifierDecl	* service		5052922	1					
ANR	5052930	IdentifierDeclType	char *		5052922	0					
ANR	5052931	Identifier	service		5052922	1					
ANR	5052932	IdentifierDecl	* lease_id		5052922	2					
ANR	5052933	IdentifierDeclType	char *		5052922	0					
ANR	5052934	Identifier	lease_id		5052922	1					
ANR	5052935	IdentifierDeclStatement	int lease_expiry ;	1235:1:34529:34545	5052922	1	True				
ANR	5052936	IdentifierDecl	lease_expiry		5052922	0					
ANR	5052937	IdentifierDeclType	int		5052922	0					
ANR	5052938	Identifier	lease_expiry		5052922	1					
ANR	5052939	IdentifierDeclStatement	string result_line ;	1236:1:34548:34566	5052922	2	True				
ANR	5052940	IdentifierDecl	result_line		5052922	0					
ANR	5052941	IdentifierDeclType	string		5052922	0					
ANR	5052942	Identifier	result_line		5052922	1					
ANR	5052943	IdentifierDeclStatement	AbsCreamProxy * cp = NULL ;	1237:1:34569:34593	5052922	3	True				
ANR	5052944	IdentifierDecl	* cp = NULL		5052922	0					
ANR	5052945	IdentifierDeclType	AbsCreamProxy *		5052922	0					
ANR	5052946	Identifier	cp		5052922	1					
ANR	5052947	AssignmentExpression	* cp = NULL		5052922	2		=			
ANR	5052948	Identifier	NULL		5052922	0					
ANR	5052949	Identifier	NULL		5052922	1					
ANR	5052950	ExpressionStatement	"process_string_arg ( req -> input_line [ 1 ] , & reqid )"	1239:1:34598:34646	5052922	4	True				
ANR	5052951	CallExpression	"process_string_arg ( req -> input_line [ 1 ] , & reqid )"		5052922	0					
ANR	5052952	Callee	process_string_arg		5052922	0					
ANR	5052953	Identifier	process_string_arg		5052922	0					
ANR	5052954	ArgumentList	req -> input_line [ 1 ]		5052922	1					
ANR	5052955	Argument	req -> input_line [ 1 ]		5052922	0					
ANR	5052956	ArrayIndexing	req -> input_line [ 1 ]		5052922	0					
ANR	5052957	PtrMemberAccess	req -> input_line		5052922	0					
ANR	5052958	Identifier	req		5052922	0					
ANR	5052959	Identifier	input_line		5052922	1					
ANR	5052960	PrimaryExpression	1		5052922	1					
ANR	5052961	Argument	& reqid		5052922	1					
ANR	5052962	UnaryOperationExpression	& reqid		5052922	0					
ANR	5052963	UnaryOperator	&		5052922	0					
ANR	5052964	Identifier	reqid		5052922	1					
ANR	5052965	ExpressionStatement	"process_string_arg ( req -> input_line [ 2 ] , & service )"	1240:1:34649:34699	5052922	5	True				
ANR	5052966	CallExpression	"process_string_arg ( req -> input_line [ 2 ] , & service )"		5052922	0					
ANR	5052967	Callee	process_string_arg		5052922	0					
ANR	5052968	Identifier	process_string_arg		5052922	0					
ANR	5052969	ArgumentList	req -> input_line [ 2 ]		5052922	1					
ANR	5052970	Argument	req -> input_line [ 2 ]		5052922	0					
ANR	5052971	ArrayIndexing	req -> input_line [ 2 ]		5052922	0					
ANR	5052972	PtrMemberAccess	req -> input_line		5052922	0					
ANR	5052973	Identifier	req		5052922	0					
ANR	5052974	Identifier	input_line		5052922	1					
ANR	5052975	PrimaryExpression	2		5052922	1					
ANR	5052976	Argument	& service		5052922	1					
ANR	5052977	UnaryOperationExpression	& service		5052922	0					
ANR	5052978	UnaryOperator	&		5052922	0					
ANR	5052979	Identifier	service		5052922	1					
ANR	5052980	ExpressionStatement	"process_string_arg ( req -> input_line [ 3 ] , & lease_id )"	1241:1:34702:34753	5052922	6	True				
ANR	5052981	CallExpression	"process_string_arg ( req -> input_line [ 3 ] , & lease_id )"		5052922	0					
ANR	5052982	Callee	process_string_arg		5052922	0					
ANR	5052983	Identifier	process_string_arg		5052922	0					
ANR	5052984	ArgumentList	req -> input_line [ 3 ]		5052922	1					
ANR	5052985	Argument	req -> input_line [ 3 ]		5052922	0					
ANR	5052986	ArrayIndexing	req -> input_line [ 3 ]		5052922	0					
ANR	5052987	PtrMemberAccess	req -> input_line		5052922	0					
ANR	5052988	Identifier	req		5052922	0					
ANR	5052989	Identifier	input_line		5052922	1					
ANR	5052990	PrimaryExpression	3		5052922	1					
ANR	5052991	Argument	& lease_id		5052922	1					
ANR	5052992	UnaryOperationExpression	& lease_id		5052922	0					
ANR	5052993	UnaryOperator	&		5052922	0					
ANR	5052994	Identifier	lease_id		5052922	1					
ANR	5052995	ExpressionStatement	"process_int_arg ( req -> input_line [ 4 ] , & lease_expiry )"	1242:1:34756:34808	5052922	7	True				
ANR	5052996	CallExpression	"process_int_arg ( req -> input_line [ 4 ] , & lease_expiry )"		5052922	0					
ANR	5052997	Callee	process_int_arg		5052922	0					
ANR	5052998	Identifier	process_int_arg		5052922	0					
ANR	5052999	ArgumentList	req -> input_line [ 4 ]		5052922	1					
ANR	5053000	Argument	req -> input_line [ 4 ]		5052922	0					
ANR	5053001	ArrayIndexing	req -> input_line [ 4 ]		5052922	0					
ANR	5053002	PtrMemberAccess	req -> input_line		5052922	0					
ANR	5053003	Identifier	req		5052922	0					
ANR	5053004	Identifier	input_line		5052922	1					
ANR	5053005	PrimaryExpression	4		5052922	1					
ANR	5053006	Argument	& lease_expiry		5052922	1					
ANR	5053007	UnaryOperationExpression	& lease_expiry		5052922	0					
ANR	5053008	UnaryOperator	&		5052922	0					
ANR	5053009	Identifier	lease_expiry		5052922	1					
ANR	5053010	TryStatement	try		5052922	8					
ANR	5053011	CompoundStatement		18:2:522:553	5052922	0					
ANR	5053012	IdentifierDeclStatement	"pair < string , time_t > cmd_input ;"		5052922	0					
ANR	5053013	IdentifierDecl	cmd_input		5052922	0					
ANR	5053014	IdentifierDeclType	"pair < string , time_t >"		5052922	0					
ANR	5053015	Identifier	cmd_input		5052922	1					
ANR	5053016	IdentifierDeclStatement	"pair < string , time_t > cmd_output ;"		5052922	1					
ANR	5053017	IdentifierDecl	cmd_output		5052922	0					
ANR	5053018	IdentifierDeclType	"pair < string , time_t >"		5052922	0					
ANR	5053019	Identifier	cmd_output		5052922	1					
ANR	5053020	IfStatement	if ( lease_id )		5052922	2					
ANR	5053021	Condition	lease_id		5052922	0					
ANR	5053022	Identifier	lease_id		5052922	0					
ANR	5053023	CompoundStatement		19:18:573:573	5052922	1					
ANR	5053024	ExpressionStatement	cmd_input . first = lease_id		5052922	0					
ANR	5053025	AssignmentExpression	cmd_input . first = lease_id		5052922	0		=			
ANR	5053026	MemberAccess	cmd_input . first		5052922	0					
ANR	5053027	Identifier	cmd_input		5052922	0					
ANR	5053028	Identifier	first		5052922	1					
ANR	5053029	Identifier	lease_id		5052922	1					
ANR	5053030	ElseStatement	else		5052922	0					
ANR	5053031	CompoundStatement		21:9:615:615	5052922	0					
ANR	5053032	ExpressionStatement	"cmd_input . first = """""		5052922	0					
ANR	5053033	AssignmentExpression	"cmd_input . first = """""		5052922	0		=			
ANR	5053034	MemberAccess	cmd_input . first		5052922	0					
ANR	5053035	Identifier	cmd_input		5052922	0					
ANR	5053036	Identifier	first		5052922	1					
ANR	5053037	PrimaryExpression	""""""		5052922	1					
ANR	5053038	ExpressionStatement	cmd_input . second = lease_expiry		5052922	3					
ANR	5053039	AssignmentExpression	cmd_input . second = lease_expiry		5052922	0		=			
ANR	5053040	MemberAccess	cmd_input . second		5052922	0					
ANR	5053041	Identifier	cmd_input		5052922	0					
ANR	5053042	Identifier	second		5052922	1					
ANR	5053043	Identifier	lease_expiry		5052922	1					
ANR	5053044	ExpressionStatement	"cp = CreamProxyFactory :: make_CreamProxyLease ( cmd_input , & cmd_output , DEFAULT_TIMEOUT )"		5052922	4					
ANR	5053045	AssignmentExpression	"cp = CreamProxyFactory :: make_CreamProxyLease ( cmd_input , & cmd_output , DEFAULT_TIMEOUT )"		5052922	0		=			
ANR	5053046	Identifier	cp		5052922	0					
ANR	5053047	CallExpression	"CreamProxyFactory :: make_CreamProxyLease ( cmd_input , & cmd_output , DEFAULT_TIMEOUT )"		5052922	1					
ANR	5053048	Callee	CreamProxyFactory :: make_CreamProxyLease		5052922	0					
ANR	5053049	Identifier	CreamProxyFactory :: make_CreamProxyLease		5052922	0					
ANR	5053050	ArgumentList	cmd_input		5052922	1					
ANR	5053051	Argument	cmd_input		5052922	0					
ANR	5053052	Identifier	cmd_input		5052922	0					
ANR	5053053	Argument	& cmd_output		5052922	1					
ANR	5053054	UnaryOperationExpression	& cmd_output		5052922	0					
ANR	5053055	UnaryOperator	&		5052922	0					
ANR	5053056	Identifier	cmd_output		5052922	1					
ANR	5053057	Argument	DEFAULT_TIMEOUT		5052922	2					
ANR	5053058	Identifier	DEFAULT_TIMEOUT		5052922	0					
ANR	5053059	ExpressionStatement	check_for_factory_error ( cp )		5052922	5					
ANR	5053060	CallExpression	check_for_factory_error ( cp )		5052922	0					
ANR	5053061	Callee	check_for_factory_error		5052922	0					
ANR	5053062	Identifier	check_for_factory_error		5052922	0					
ANR	5053063	ArgumentList	cp		5052922	1					
ANR	5053064	Argument	cp		5052922	0					
ANR	5053065	Identifier	cp		5052922	0					
ANR	5053066	ExpressionStatement	cp -> setCredential ( req -> proxy . c_str ( ) )		5052922	6					
ANR	5053067	CallExpression	cp -> setCredential ( req -> proxy . c_str ( ) )		5052922	0					
ANR	5053068	Callee	cp -> setCredential		5052922	0					
ANR	5053069	PtrMemberAccess	cp -> setCredential		5052922	0					
ANR	5053070	Identifier	cp		5052922	0					
ANR	5053071	Identifier	setCredential		5052922	1					
ANR	5053072	ArgumentList	req -> proxy . c_str ( )		5052922	1					
ANR	5053073	Argument	req -> proxy . c_str ( )		5052922	0					
ANR	5053074	CallExpression	req -> proxy . c_str ( )		5052922	0					
ANR	5053075	Callee	req -> proxy . c_str		5052922	0					
ANR	5053076	MemberAccess	req -> proxy . c_str		5052922	0					
ANR	5053077	PtrMemberAccess	req -> proxy		5052922	0					
ANR	5053078	Identifier	req		5052922	0					
ANR	5053079	Identifier	proxy		5052922	1					
ANR	5053080	Identifier	c_str		5052922	1					
ANR	5053081	ArgumentList			5052922	1					
ANR	5053082	ExpressionStatement	cp -> execute ( service )		5052922	7					
ANR	5053083	CallExpression	cp -> execute ( service )		5052922	0					
ANR	5053084	Callee	cp -> execute		5052922	0					
ANR	5053085	PtrMemberAccess	cp -> execute		5052922	0					
ANR	5053086	Identifier	cp		5052922	0					
ANR	5053087	Identifier	execute		5052922	1					
ANR	5053088	ArgumentList	service		5052922	1					
ANR	5053089	Argument	service		5052922	0					
ANR	5053090	Identifier	service		5052922	0					
ANR	5053091	ExpressionStatement	lease_expiry = cmd_output . second		5052922	8					
ANR	5053092	AssignmentExpression	lease_expiry = cmd_output . second		5052922	0		=			
ANR	5053093	Identifier	lease_expiry		5052922	0					
ANR	5053094	MemberAccess	cmd_output . second		5052922	1					
ANR	5053095	Identifier	cmd_output		5052922	0					
ANR	5053096	Identifier	second		5052922	1					
ANR	5053097	Statement	delete		5052922	9					
ANR	5053098	ExpressionStatement	cp		5052922	10					
ANR	5053099	Identifier	cp		5052922	0					
ANR	5053100	CatchList			5052922	1					
ANR	5053101	CatchStatement	catch ( std :: exception & ex )		5052922	0					
ANR	5053102	Identifier	ex		5052922	0					
ANR	5053103	CompoundStatement		35:2:976:1012	5052922	1					
ANR	5053104	Statement	delete	1262:2:35296:35301	5052922	0	True				
ANR	5053105	ExpressionStatement	cp	1262:9:35303:35305	5052922	1	True				
ANR	5053106	Identifier	cp		5052922	0					
ANR	5053107	IdentifierDeclStatement	char * msg = escape_spaces ( ex . what ( ) ) ;	1263:2:35309:35345	5052922	2	True				
ANR	5053108	IdentifierDecl	* msg = escape_spaces ( ex . what ( ) )		5052922	0					
ANR	5053109	IdentifierDeclType	char *		5052922	0					
ANR	5053110	Identifier	msg		5052922	1					
ANR	5053111	AssignmentExpression	* msg = escape_spaces ( ex . what ( ) )		5052922	2		=			
ANR	5053112	Identifier	msg		5052922	0					
ANR	5053113	CallExpression	escape_spaces ( ex . what ( ) )		5052922	1					
ANR	5053114	Callee	escape_spaces		5052922	0					
ANR	5053115	Identifier	escape_spaces		5052922	0					
ANR	5053116	ArgumentList	ex . what ( )		5052922	1					
ANR	5053117	Argument	ex . what ( )		5052922	0					
ANR	5053118	CallExpression	ex . what ( )		5052922	0					
ANR	5053119	Callee	ex . what		5052922	0					
ANR	5053120	MemberAccess	ex . what		5052922	0					
ANR	5053121	Identifier	ex		5052922	0					
ANR	5053122	Identifier	what		5052922	1					
ANR	5053123	ArgumentList			5052922	1					
ANR	5053124	ExpressionStatement	"result_line = ( string ) reqid + "" CREAM_Set_Lease\\\\ Error:\\\\ "" + msg"	1264:2:35349:35415	5052922	3	True				
ANR	5053125	AssignmentExpression	"result_line = ( string ) reqid + "" CREAM_Set_Lease\\\\ Error:\\\\ "" + msg"		5052922	0		=			
ANR	5053126	Identifier	result_line		5052922	0					
ANR	5053127	AdditiveExpression	"( string ) reqid + "" CREAM_Set_Lease\\\\ Error:\\\\ "" + msg"		5052922	1		+			
ANR	5053128	CastExpression	( string ) reqid		5052922	0					
ANR	5053129	CastTarget	string		5052922	0					
ANR	5053130	Identifier	reqid		5052922	1					
ANR	5053131	AdditiveExpression	""" CREAM_Set_Lease\\\\ Error:\\\\ "" + msg"		5052922	1		+			
ANR	5053132	PrimaryExpression	""" CREAM_Set_Lease\\\\ Error:\\\\ """		5052922	0					
ANR	5053133	Identifier	msg		5052922	1					
ANR	5053134	ExpressionStatement	enqueue_result ( result_line )	1265:2:35419:35446	5052922	4	True				
ANR	5053135	CallExpression	enqueue_result ( result_line )		5052922	0					
ANR	5053136	Callee	enqueue_result		5052922	0					
ANR	5053137	Identifier	enqueue_result		5052922	0					
ANR	5053138	ArgumentList	result_line		5052922	1					
ANR	5053139	Argument	result_line		5052922	0					
ANR	5053140	Identifier	result_line		5052922	0					
ANR	5053141	ExpressionStatement	free ( msg )	1266:2:35450:35459	5052922	5	True				
ANR	5053142	CallExpression	free ( msg )		5052922	0					
ANR	5053143	Callee	free		5052922	0					
ANR	5053144	Identifier	free		5052922	0					
ANR	5053145	ArgumentList	msg		5052922	1					
ANR	5053146	Argument	msg		5052922	0					
ANR	5053147	Identifier	msg		5052922	0					
ANR	5053148	ReturnStatement	return 1 ;	1268:2:35466:35474	5052922	6	True				
ANR	5053149	PrimaryExpression	1		5052922	0					
ANR	5053150	IdentifierDeclStatement	char buf [ 100 ] ;	1271:1:35482:35495	5052922	9	True				
ANR	5053151	IdentifierDecl	buf [ 100 ]		5052922	0					
ANR	5053152	IdentifierDeclType	char [ 100 ]		5052922	0					
ANR	5053153	Identifier	buf		5052922	1					
ANR	5053154	PrimaryExpression	100		5052922	2					
ANR	5053155	ExpressionStatement	"sprintf ( buf , ""%d"" , lease_expiry )"	1272:1:35498:35532	5052922	10	True				
ANR	5053156	CallExpression	"sprintf ( buf , ""%d"" , lease_expiry )"		5052922	0					
ANR	5053157	Callee	sprintf		5052922	0					
ANR	5053158	Identifier	sprintf		5052922	0					
ANR	5053159	ArgumentList	buf		5052922	1					
ANR	5053160	Argument	buf		5052922	0					
ANR	5053161	Identifier	buf		5052922	0					
ANR	5053162	Argument	"""%d"""		5052922	1					
ANR	5053163	PrimaryExpression	"""%d"""		5052922	0					
ANR	5053164	Argument	lease_expiry		5052922	2					
ANR	5053165	Identifier	lease_expiry		5052922	0					
ANR	5053166	ExpressionStatement	"result_line = ( string ) reqid + "" NULL "" + buf"	1273:1:35535:35579	5052922	11	True				
ANR	5053167	AssignmentExpression	"result_line = ( string ) reqid + "" NULL "" + buf"		5052922	0		=			
ANR	5053168	Identifier	result_line		5052922	0					
ANR	5053169	AdditiveExpression	"( string ) reqid + "" NULL "" + buf"		5052922	1		+			
ANR	5053170	CastExpression	( string ) reqid		5052922	0					
ANR	5053171	CastTarget	string		5052922	0					
ANR	5053172	Identifier	reqid		5052922	1					
ANR	5053173	AdditiveExpression	""" NULL "" + buf"		5052922	1		+			
ANR	5053174	PrimaryExpression	""" NULL """		5052922	0					
ANR	5053175	Identifier	buf		5052922	1					
ANR	5053176	ExpressionStatement	enqueue_result ( result_line )	1274:1:35582:35609	5052922	12	True				
ANR	5053177	CallExpression	enqueue_result ( result_line )		5052922	0					
ANR	5053178	Callee	enqueue_result		5052922	0					
ANR	5053179	Identifier	enqueue_result		5052922	0					
ANR	5053180	ArgumentList	result_line		5052922	1					
ANR	5053181	Argument	result_line		5052922	0					
ANR	5053182	Identifier	result_line		5052922	0					
ANR	5053183	ReturnStatement	return 0 ;	1276:1:35614:35622	5052922	13	True				
ANR	5053184	PrimaryExpression	0		5052922	0					
ANR	5053185	ReturnType	int		5052922	1					
ANR	5053186	Identifier	thread_cream_set_lease		5052922	2					
ANR	5053187	ParameterList	Request * req		5052922	3					
ANR	5053188	Parameter	Request * req	1228:28:34317:34328	5052922	0	True				
ANR	5053189	ParameterType	Request *		5052922	0					
ANR	5053190	Identifier	req		5052922	1					
ANR	5053191	CFGEntryNode	ENTRY		5052922		True				
ANR	5053192	CFGExitNode	EXIT		5052922		True				
ANR	5053193	CFGErrorNode	ERROR		5052922		True				
ANR	5053194	Symbol	& reqid		5052922						
ANR	5053195	Symbol	NULL		5052922						
ANR	5053196	Symbol	* req		5052922						
ANR	5053197	Symbol	& lease_id		5052922						
ANR	5053198	Symbol	& lease_expiry		5052922						
ANR	5053199	Symbol	& service		5052922						
ANR	5053200	Symbol	cp		5052922						
ANR	5053201	Symbol	reqid		5052922						
ANR	5053202	Symbol	result_line		5052922						
ANR	5053203	Symbol	* * req		5052922						
ANR	5053204	Symbol	buf		5052922						
ANR	5053205	Symbol	lease_expiry		5052922						
ANR	5053206	Symbol	service		5052922						
ANR	5053207	Symbol	req -> input_line		5052922						
ANR	5053208	Symbol	* req -> input_line		5052922						
ANR	5053209	Symbol	lease_id		5052922						
ANR	5053210	Symbol	req		5052922						
ANR	5053211	Function	handle_cream_job_status	1284:0:35802:36216							
ANR	5053212	FunctionDef	handle_cream_job_status (char * * input_line)		5053211	0					
ANR	5053213	CompoundStatement		1285:0:35851:36216	5053211	0					
ANR	5053214	IdentifierDeclStatement	int arg_cnt = count_args ( input_line ) ;	1286:1:35854:35892	5053211	0	True				
ANR	5053215	IdentifierDecl	arg_cnt = count_args ( input_line )		5053211	0					
ANR	5053216	IdentifierDeclType	int		5053211	0					
ANR	5053217	Identifier	arg_cnt		5053211	1					
ANR	5053218	AssignmentExpression	arg_cnt = count_args ( input_line )		5053211	2		=			
ANR	5053219	Identifier	arg_cnt		5053211	0					
ANR	5053220	CallExpression	count_args ( input_line )		5053211	1					
ANR	5053221	Callee	count_args		5053211	0					
ANR	5053222	Identifier	count_args		5053211	0					
ANR	5053223	ArgumentList	input_line		5053211	1					
ANR	5053224	Argument	input_line		5053211	0					
ANR	5053225	Identifier	input_line		5053211	0					
ANR	5053226	IdentifierDeclStatement	char * jobnum = NULL ;	1287:1:35895:35914	5053211	1	True				
ANR	5053227	IdentifierDecl	* jobnum = NULL		5053211	0					
ANR	5053228	IdentifierDeclType	char *		5053211	0					
ANR	5053229	Identifier	jobnum		5053211	1					
ANR	5053230	AssignmentExpression	* jobnum = NULL		5053211	2		=			
ANR	5053231	Identifier	NULL		5053211	0					
ANR	5053232	Identifier	NULL		5053211	1					
ANR	5053233	IfStatement	if ( arg_cnt < 4 )		5053211	2					
ANR	5053234	Condition	arg_cnt < 4	1289:6:35923:35933	5053211	0	True				
ANR	5053235	RelationalExpression	arg_cnt < 4		5053211	0		<			
ANR	5053236	Identifier	arg_cnt		5053211	0					
ANR	5053237	PrimaryExpression	4		5053211	1					
ANR	5053238	CompoundStatement		5:20:85:85	5053211	1					
ANR	5053239	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	1290:2:35941:35962	5053211	0	True				
ANR	5053240	CallExpression	HANDLE_SYNTAX_ERROR ( )		5053211	0					
ANR	5053241	Callee	HANDLE_SYNTAX_ERROR		5053211	0					
ANR	5053242	Identifier	HANDLE_SYNTAX_ERROR		5053211	0					
ANR	5053243	ArgumentList			5053211	1					
ANR	5053244	ExpressionStatement	"process_string_arg ( input_line [ 3 ] , & jobnum )"	1293:1:35969:36013	5053211	3	True				
ANR	5053245	CallExpression	"process_string_arg ( input_line [ 3 ] , & jobnum )"		5053211	0					
ANR	5053246	Callee	process_string_arg		5053211	0					
ANR	5053247	Identifier	process_string_arg		5053211	0					
ANR	5053248	ArgumentList	input_line [ 3 ]		5053211	1					
ANR	5053249	Argument	input_line [ 3 ]		5053211	0					
ANR	5053250	ArrayIndexing	input_line [ 3 ]		5053211	0					
ANR	5053251	Identifier	input_line		5053211	0					
ANR	5053252	PrimaryExpression	3		5053211	1					
ANR	5053253	Argument	& jobnum		5053211	1					
ANR	5053254	UnaryOperationExpression	& jobnum		5053211	0					
ANR	5053255	UnaryOperator	&		5053211	0					
ANR	5053256	Identifier	jobnum		5053211	1					
ANR	5053257	IfStatement	if ( jobnum && ( atoi ( jobnum ) + 4 != arg_cnt ) )		5053211	4					
ANR	5053258	Condition	jobnum && ( atoi ( jobnum ) + 4 != arg_cnt )	1294:6:36021:36063	5053211	0	True				
ANR	5053259	AndExpression	jobnum && ( atoi ( jobnum ) + 4 != arg_cnt )		5053211	0		&&			
ANR	5053260	Identifier	jobnum		5053211	0					
ANR	5053261	EqualityExpression	atoi ( jobnum ) + 4 != arg_cnt		5053211	1		!=			
ANR	5053262	AdditiveExpression	atoi ( jobnum ) + 4		5053211	0		+			
ANR	5053263	CallExpression	atoi ( jobnum )		5053211	0					
ANR	5053264	Callee	atoi		5053211	0					
ANR	5053265	Identifier	atoi		5053211	0					
ANR	5053266	ArgumentList	jobnum		5053211	1					
ANR	5053267	Argument	jobnum		5053211	0					
ANR	5053268	Identifier	jobnum		5053211	0					
ANR	5053269	PrimaryExpression	4		5053211	1					
ANR	5053270	Identifier	arg_cnt		5053211	1					
ANR	5053271	CompoundStatement		10:52:215:215	5053211	1					
ANR	5053272	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	1295:2:36071:36092	5053211	0	True				
ANR	5053273	CallExpression	HANDLE_SYNTAX_ERROR ( )		5053211	0					
ANR	5053274	Callee	HANDLE_SYNTAX_ERROR		5053211	0					
ANR	5053275	Identifier	HANDLE_SYNTAX_ERROR		5053211	0					
ANR	5053276	ArgumentList			5053211	1					
ANR	5053277	ExpressionStatement	"enqueue_request_batch ( input_line , thread_cream_job_status , cmp_request_single )"	1298:1:36099:36179	5053211	5	True				
ANR	5053278	CallExpression	"enqueue_request_batch ( input_line , thread_cream_job_status , cmp_request_single )"		5053211	0					
ANR	5053279	Callee	enqueue_request_batch		5053211	0					
ANR	5053280	Identifier	enqueue_request_batch		5053211	0					
ANR	5053281	ArgumentList	input_line		5053211	1					
ANR	5053282	Argument	input_line		5053211	0					
ANR	5053283	Identifier	input_line		5053211	0					
ANR	5053284	Argument	thread_cream_job_status		5053211	1					
ANR	5053285	Identifier	thread_cream_job_status		5053211	0					
ANR	5053286	Argument	cmp_request_single		5053211	2					
ANR	5053287	Identifier	cmp_request_single		5053211	0					
ANR	5053288	ExpressionStatement	"gahp_printf ( ""S\\n"" )"	1300:1:36183:36201	5053211	6	True				
ANR	5053289	CallExpression	"gahp_printf ( ""S\\n"" )"		5053211	0					
ANR	5053290	Callee	gahp_printf		5053211	0					
ANR	5053291	Identifier	gahp_printf		5053211	0					
ANR	5053292	ArgumentList	"""S\\n"""		5053211	1					
ANR	5053293	Argument	"""S\\n"""		5053211	0					
ANR	5053294	PrimaryExpression	"""S\\n"""		5053211	0					
ANR	5053295	ReturnStatement	return 0 ;	1302:1:36206:36214	5053211	7	True				
ANR	5053296	PrimaryExpression	0		5053211	0					
ANR	5053297	ReturnType	int		5053211	1					
ANR	5053298	Identifier	handle_cream_job_status		5053211	2					
ANR	5053299	ParameterList	char * * input_line		5053211	3					
ANR	5053300	Parameter	char * * input_line	1284:29:35831:35847	5053211	0	True				
ANR	5053301	ParameterType	char * *		5053211	0					
ANR	5053302	Identifier	input_line		5053211	1					
ANR	5053303	CFGEntryNode	ENTRY		5053211		True				
ANR	5053304	CFGExitNode	EXIT		5053211		True				
ANR	5053305	Symbol	atoi		5053211						
ANR	5053306	Symbol	* input_line		5053211						
ANR	5053307	Symbol	thread_cream_job_status		5053211						
ANR	5053308	Symbol	NULL		5053211						
ANR	5053309	Symbol	& jobnum		5053211						
ANR	5053310	Symbol	jobnum		5053211						
ANR	5053311	Symbol	count_args		5053211						
ANR	5053312	Symbol	cmp_request_single		5053211						
ANR	5053313	Symbol	input_line		5053211						
ANR	5053314	Symbol	arg_cnt		5053211						
ANR	5053315	Function	thread_cream_job_status	1305:0:36219:40561							
ANR	5053316	FunctionDef	thread_cream_job_status (Request * * reqlist)		5053315	0					
ANR	5053317	CompoundStatement		1306:0:36268:40561	5053315	0					
ANR	5053318	IfStatement	if ( reqlist == NULL )		5053315	0					
ANR	5053319	Condition	reqlist == NULL	1307:6:36276:36290	5053315	0	True				
ANR	5053320	EqualityExpression	reqlist == NULL		5053315	0		==			
ANR	5053321	Identifier	reqlist		5053315	0					
ANR	5053322	Identifier	NULL		5053315	1					
ANR	5053323	CompoundStatement		2:24:25:25	5053315	1					
ANR	5053324	ExpressionStatement	"internal_error ( ""thread_cream_job_status called with NULL pointer\\n"" )"	1308:2:36298:36368	5053315	0	True				
ANR	5053325	CallExpression	"internal_error ( ""thread_cream_job_status called with NULL pointer\\n"" )"		5053315	0					
ANR	5053326	Callee	internal_error		5053315	0					
ANR	5053327	Identifier	internal_error		5053315	0					
ANR	5053328	ArgumentList	"""thread_cream_job_status called with NULL pointer\\n"""		5053315	1					
ANR	5053329	Argument	"""thread_cream_job_status called with NULL pointer\\n"""		5053315	0					
ANR	5053330	PrimaryExpression	"""thread_cream_job_status called with NULL pointer\\n"""		5053315	0					
ANR	5053331	IfStatement	if ( reqlist [ 0 ] == NULL )		5053315	1					
ANR	5053332	Condition	reqlist [ 0 ] == NULL	1310:6:36379:36396	5053315	0	True				
ANR	5053333	EqualityExpression	reqlist [ 0 ] == NULL		5053315	0		==			
ANR	5053334	ArrayIndexing	reqlist [ 0 ]		5053315	0					
ANR	5053335	Identifier	reqlist		5053315	0					
ANR	5053336	PrimaryExpression	0		5053315	1					
ANR	5053337	Identifier	NULL		5053315	1					
ANR	5053338	CompoundStatement		5:27:131:131	5053315	1					
ANR	5053339	ExpressionStatement	"internal_error ( ""thread_cream_job_status called with empty list\\n"" )"	1311:2:36404:36472	5053315	0	True				
ANR	5053340	CallExpression	"internal_error ( ""thread_cream_job_status called with empty list\\n"" )"		5053315	0					
ANR	5053341	Callee	internal_error		5053315	0					
ANR	5053342	Identifier	internal_error		5053315	0					
ANR	5053343	ArgumentList	"""thread_cream_job_status called with empty list\\n"""		5053315	1					
ANR	5053344	Argument	"""thread_cream_job_status called with empty list\\n"""		5053315	0					
ANR	5053345	PrimaryExpression	"""thread_cream_job_status called with empty list\\n"""		5053315	0					
ANR	5053346	IdentifierDeclStatement	bool single_request = ( reqlist [ 1 ] == NULL ) ;	1314:1:36479:36521	5053315	2	True				
ANR	5053347	IdentifierDecl	single_request = ( reqlist [ 1 ] == NULL )		5053315	0					
ANR	5053348	IdentifierDeclType	bool		5053315	0					
ANR	5053349	Identifier	single_request		5053315	1					
ANR	5053350	AssignmentExpression	single_request = ( reqlist [ 1 ] == NULL )		5053315	2		=			
ANR	5053351	Identifier	single_request		5053315	0					
ANR	5053352	EqualityExpression	reqlist [ 1 ] == NULL		5053315	1		==			
ANR	5053353	ArrayIndexing	reqlist [ 1 ]		5053315	0					
ANR	5053354	Identifier	reqlist		5053315	0					
ANR	5053355	PrimaryExpression	1		5053315	1					
ANR	5053356	Identifier	NULL		5053315	1					
ANR	5053357	IdentifierDeclStatement	string result_line ;	1316:1:36525:36543	5053315	3	True				
ANR	5053358	IdentifierDecl	result_line		5053315	0					
ANR	5053359	IdentifierDeclType	string		5053315	0					
ANR	5053360	Identifier	result_line		5053315	1					
ANR	5053361	IdentifierDeclStatement	char * service ;	1317:1:36546:36559	5053315	4	True				
ANR	5053362	IdentifierDecl	* service		5053315	0					
ANR	5053363	IdentifierDeclType	char *		5053315	0					
ANR	5053364	Identifier	service		5053315	1					
ANR	5053365	ExpressionStatement	"process_string_arg ( reqlist [ 0 ] -> input_line [ 2 ] , & service )"	1318:1:36562:36619	5053315	5	True				
ANR	5053366	CallExpression	"process_string_arg ( reqlist [ 0 ] -> input_line [ 2 ] , & service )"		5053315	0					
ANR	5053367	Callee	process_string_arg		5053315	0					
ANR	5053368	Identifier	process_string_arg		5053315	0					
ANR	5053369	ArgumentList	reqlist [ 0 ] -> input_line [ 2 ]		5053315	1					
ANR	5053370	Argument	reqlist [ 0 ] -> input_line [ 2 ]		5053315	0					
ANR	5053371	ArrayIndexing	reqlist [ 0 ] -> input_line [ 2 ]		5053315	0					
ANR	5053372	PtrMemberAccess	reqlist [ 0 ] -> input_line		5053315	0					
ANR	5053373	ArrayIndexing	reqlist [ 0 ]		5053315	0					
ANR	5053374	Identifier	reqlist		5053315	0					
ANR	5053375	PrimaryExpression	0		5053315	1					
ANR	5053376	Identifier	input_line		5053315	1					
ANR	5053377	PrimaryExpression	2		5053315	1					
ANR	5053378	Argument	& service		5053315	1					
ANR	5053379	UnaryOperationExpression	& service		5053315	0					
ANR	5053380	UnaryOperator	&		5053315	0					
ANR	5053381	Identifier	service		5053315	1					
ANR	5053382	IdentifierDeclStatement	string proxy = reqlist [ 0 ] -> proxy ;	1319:1:36622:36654	5053315	6	True				
ANR	5053383	IdentifierDecl	proxy = reqlist [ 0 ] -> proxy		5053315	0					
ANR	5053384	IdentifierDeclType	string		5053315	0					
ANR	5053385	Identifier	proxy		5053315	1					
ANR	5053386	AssignmentExpression	proxy = reqlist [ 0 ] -> proxy		5053315	2		=			
ANR	5053387	Identifier	proxy		5053315	0					
ANR	5053388	PtrMemberAccess	reqlist [ 0 ] -> proxy		5053315	1					
ANR	5053389	ArrayIndexing	reqlist [ 0 ]		5053315	0					
ANR	5053390	Identifier	reqlist		5053315	0					
ANR	5053391	PrimaryExpression	0		5053315	1					
ANR	5053392	Identifier	proxy		5053315	1					
ANR	5053393	IdentifierDeclStatement	AbsCreamProxy * cp = NULL ;	1320:1:36657:36681	5053315	7	True				
ANR	5053394	IdentifierDecl	* cp = NULL		5053315	0					
ANR	5053395	IdentifierDeclType	AbsCreamProxy *		5053315	0					
ANR	5053396	Identifier	cp		5053315	1					
ANR	5053397	AssignmentExpression	* cp = NULL		5053315	2		=			
ANR	5053398	Identifier	NULL		5053315	0					
ANR	5053399	Identifier	NULL		5053315	1					
ANR	5053400	IdentifierDeclStatement	vector < string > reqids ;	1322:1:36685:36706	5053315	8	True				
ANR	5053401	IdentifierDecl	reqids		5053315	0					
ANR	5053402	IdentifierDeclType	vector < string >		5053315	0					
ANR	5053403	Identifier	reqids		5053315	1					
ANR	5053404	IdentifierDeclStatement	AbsCreamProxy :: StatusArrayResult sar ;	1324:1:36710:36746	5053315	9	True				
ANR	5053405	IdentifierDecl	sar		5053315	0					
ANR	5053406	IdentifierDeclType	AbsCreamProxy :: StatusArrayResult		5053315	0					
ANR	5053407	Identifier	sar		5053315	1					
ANR	5053408	TryStatement	try		5053315	10					
ANR	5053409	CompoundStatement		25:2:579:765	5053315	0					
ANR	5053410	IdentifierDeclStatement	vector < JobIdWrapper > jv ;		5053315	0					
ANR	5053411	IdentifierDecl	jv		5053315	0					
ANR	5053412	IdentifierDeclType	vector < JobIdWrapper >		5053315	0					
ANR	5053413	Identifier	jv		5053315	1					
ANR	5053414	ExpressionStatement	"collect_job_ids ( reqlist , jv , reqids )"		5053315	1					
ANR	5053415	CallExpression	"collect_job_ids ( reqlist , jv , reqids )"		5053315	0					
ANR	5053416	Callee	collect_job_ids		5053315	0					
ANR	5053417	Identifier	collect_job_ids		5053315	0					
ANR	5053418	ArgumentList	reqlist		5053315	1					
ANR	5053419	Argument	reqlist		5053315	0					
ANR	5053420	Identifier	reqlist		5053315	0					
ANR	5053421	Argument	jv		5053315	1					
ANR	5053422	Identifier	jv		5053315	0					
ANR	5053423	Argument	reqids		5053315	2					
ANR	5053424	Identifier	reqids		5053315	0					
ANR	5053425	IdentifierDeclStatement	vector < string > sv ;		5053315	2					
ANR	5053426	IdentifierDecl	sv		5053315	0					
ANR	5053427	IdentifierDeclType	vector < string >		5053315	0					
ANR	5053428	Identifier	sv		5053315	1					
ANR	5053429	IdentifierDeclStatement	"JobFilterWrapper jfw ( jv , sv , - 1 , - 1 , """" , """" ) ;"		5053315	3					
ANR	5053430	IdentifierDecl	"jfw ( jv , sv , - 1 , - 1 , """" , """" )"		5053315	0					
ANR	5053431	IdentifierDeclType	JobFilterWrapper		5053315	0					
ANR	5053432	Identifier	jfw		5053315	1					
ANR	5053433	Expression	"jv , sv , - 1 , - 1 , """" , """""		5053315	2					
ANR	5053434	Identifier	jv		5053315	0					
ANR	5053435	Expression	"sv , - 1 , - 1 , """" , """""		5053315	1					
ANR	5053436	Identifier	sv		5053315	0					
ANR	5053437	Expression	"- 1 , - 1 , """" , """""		5053315	1					
ANR	5053438	UnaryOperationExpression	- 1		5053315	0					
ANR	5053439	UnaryOperator	-		5053315	0					
ANR	5053440	PrimaryExpression	1		5053315	1					
ANR	5053441	Expression	"- 1 , """" , """""		5053315	1					
ANR	5053442	UnaryOperationExpression	- 1		5053315	0					
ANR	5053443	UnaryOperator	-		5053315	0					
ANR	5053444	PrimaryExpression	1		5053315	1					
ANR	5053445	Expression	""""" , """""		5053315	1					
ANR	5053446	PrimaryExpression	""""""		5053315	0					
ANR	5053447	PrimaryExpression	""""""		5053315	1					
ANR	5053448	ExpressionStatement	"cp = CreamProxyFactory :: make_CreamProxyStatus ( & jfw , & sar , DEFAULT_TIMEOUT )"		5053315	4					
ANR	5053449	AssignmentExpression	"cp = CreamProxyFactory :: make_CreamProxyStatus ( & jfw , & sar , DEFAULT_TIMEOUT )"		5053315	0		=			
ANR	5053450	Identifier	cp		5053315	0					
ANR	5053451	CallExpression	"CreamProxyFactory :: make_CreamProxyStatus ( & jfw , & sar , DEFAULT_TIMEOUT )"		5053315	1					
ANR	5053452	Callee	CreamProxyFactory :: make_CreamProxyStatus		5053315	0					
ANR	5053453	Identifier	CreamProxyFactory :: make_CreamProxyStatus		5053315	0					
ANR	5053454	ArgumentList	& jfw		5053315	1					
ANR	5053455	Argument	& jfw		5053315	0					
ANR	5053456	UnaryOperationExpression	& jfw		5053315	0					
ANR	5053457	UnaryOperator	&		5053315	0					
ANR	5053458	Identifier	jfw		5053315	1					
ANR	5053459	Argument	& sar		5053315	1					
ANR	5053460	UnaryOperationExpression	& sar		5053315	0					
ANR	5053461	UnaryOperator	&		5053315	0					
ANR	5053462	Identifier	sar		5053315	1					
ANR	5053463	Argument	DEFAULT_TIMEOUT		5053315	2					
ANR	5053464	Identifier	DEFAULT_TIMEOUT		5053315	0					
ANR	5053465	ExpressionStatement	check_for_factory_error ( cp )		5053315	5					
ANR	5053466	CallExpression	check_for_factory_error ( cp )		5053315	0					
ANR	5053467	Callee	check_for_factory_error		5053315	0					
ANR	5053468	Identifier	check_for_factory_error		5053315	0					
ANR	5053469	ArgumentList	cp		5053315	1					
ANR	5053470	Argument	cp		5053315	0					
ANR	5053471	Identifier	cp		5053315	0					
ANR	5053472	ExpressionStatement	cp -> setCredential ( proxy . c_str ( ) )		5053315	6					
ANR	5053473	CallExpression	cp -> setCredential ( proxy . c_str ( ) )		5053315	0					
ANR	5053474	Callee	cp -> setCredential		5053315	0					
ANR	5053475	PtrMemberAccess	cp -> setCredential		5053315	0					
ANR	5053476	Identifier	cp		5053315	0					
ANR	5053477	Identifier	setCredential		5053315	1					
ANR	5053478	ArgumentList	proxy . c_str ( )		5053315	1					
ANR	5053479	Argument	proxy . c_str ( )		5053315	0					
ANR	5053480	CallExpression	proxy . c_str ( )		5053315	0					
ANR	5053481	Callee	proxy . c_str		5053315	0					
ANR	5053482	MemberAccess	proxy . c_str		5053315	0					
ANR	5053483	Identifier	proxy		5053315	0					
ANR	5053484	Identifier	c_str		5053315	1					
ANR	5053485	ArgumentList			5053315	1					
ANR	5053486	ExpressionStatement	cp -> execute ( service )		5053315	7					
ANR	5053487	CallExpression	cp -> execute ( service )		5053315	0					
ANR	5053488	Callee	cp -> execute		5053315	0					
ANR	5053489	PtrMemberAccess	cp -> execute		5053315	0					
ANR	5053490	Identifier	cp		5053315	0					
ANR	5053491	Identifier	execute		5053315	1					
ANR	5053492	ArgumentList	service		5053315	1					
ANR	5053493	Argument	service		5053315	0					
ANR	5053494	Identifier	service		5053315	0					
ANR	5053495	Statement	delete		5053315	8					
ANR	5053496	ExpressionStatement	cp		5053315	9					
ANR	5053497	Identifier	cp		5053315	0					
ANR	5053498	CatchList			5053315	1					
ANR	5053499	CatchStatement	catch ( std :: exception & ex )		5053315	0					
ANR	5053500	Identifier	ex		5053315	0					
ANR	5053501	CompoundStatement		40:27:1039:1039	5053315	1					
ANR	5053502	Statement	delete	1346:2:37312:37317	5053315	0	True				
ANR	5053503	ExpressionStatement	cp	1346:9:37319:37321	5053315	1	True				
ANR	5053504	Identifier	cp		5053315	0					
ANR	5053505	ForStatement	for ( vector < string > :: const_iterator it = reqids . begin ( ) ; it != reqids . end ( ) ; it ++ )		5053315	2					
ANR	5053506	ForInit	vector < string > :: const_iterator it = reqids . begin ( ) ;	1347:7:37330:37380	5053315	0	True				
ANR	5053507	IdentifierDeclStatement	vector < string > :: const_iterator it = reqids . begin ( ) ;		5053315	0					
ANR	5053508	IdentifierDecl	it = reqids . begin ( )		5053315	0					
ANR	5053509	IdentifierDeclType	vector < string > :: const_iterator		5053315	0					
ANR	5053510	Identifier	it		5053315	1					
ANR	5053511	AssignmentExpression	it = reqids . begin ( )		5053315	2		=			
ANR	5053512	Identifier	it		5053315	0					
ANR	5053513	CallExpression	reqids . begin ( )		5053315	1					
ANR	5053514	Callee	reqids . begin		5053315	0					
ANR	5053515	MemberAccess	reqids . begin		5053315	0					
ANR	5053516	Identifier	reqids		5053315	0					
ANR	5053517	Identifier	begin		5053315	1					
ANR	5053518	ArgumentList			5053315	1					
ANR	5053519	Condition	it != reqids . end ( )	1348:4:37386:37403	5053315	1	True				
ANR	5053520	EqualityExpression	it != reqids . end ( )		5053315	0		!=			
ANR	5053521	Identifier	it		5053315	0					
ANR	5053522	CallExpression	reqids . end ( )		5053315	1					
ANR	5053523	Callee	reqids . end		5053315	0					
ANR	5053524	MemberAccess	reqids . end		5053315	0					
ANR	5053525	Identifier	reqids		5053315	0					
ANR	5053526	Identifier	end		5053315	1					
ANR	5053527	ArgumentList			5053315	1					
ANR	5053528	PostIncDecOperationExpression	it ++	1348:24:37406:37409	5053315	2	True				
ANR	5053529	Identifier	it		5053315	0					
ANR	5053530	IncDec	++		5053315	1					
ANR	5053531	CompoundStatement		45:3:1150:1186	5053315	3					
ANR	5053532	IdentifierDeclStatement	char * msg = escape_spaces ( ex . what ( ) ) ;	1350:3:37419:37455	5053315	0	True				
ANR	5053533	IdentifierDecl	* msg = escape_spaces ( ex . what ( ) )		5053315	0					
ANR	5053534	IdentifierDeclType	char *		5053315	0					
ANR	5053535	Identifier	msg		5053315	1					
ANR	5053536	AssignmentExpression	* msg = escape_spaces ( ex . what ( ) )		5053315	2		=			
ANR	5053537	Identifier	msg		5053315	0					
ANR	5053538	CallExpression	escape_spaces ( ex . what ( ) )		5053315	1					
ANR	5053539	Callee	escape_spaces		5053315	0					
ANR	5053540	Identifier	escape_spaces		5053315	0					
ANR	5053541	ArgumentList	ex . what ( )		5053315	1					
ANR	5053542	Argument	ex . what ( )		5053315	0					
ANR	5053543	CallExpression	ex . what ( )		5053315	0					
ANR	5053544	Callee	ex . what		5053315	0					
ANR	5053545	MemberAccess	ex . what		5053315	0					
ANR	5053546	Identifier	ex		5053315	0					
ANR	5053547	Identifier	what		5053315	1					
ANR	5053548	ArgumentList			5053315	1					
ANR	5053549	ExpressionStatement	"enqueue_result ( ( * it ) + "" CREAM_Job_Status\\\\ Error:\\\\ "" + msg )"	1351:3:37460:37523	5053315	1	True				
ANR	5053550	CallExpression	"enqueue_result ( ( * it ) + "" CREAM_Job_Status\\\\ Error:\\\\ "" + msg )"		5053315	0					
ANR	5053551	Callee	enqueue_result		5053315	0					
ANR	5053552	Identifier	enqueue_result		5053315	0					
ANR	5053553	ArgumentList	"( * it ) + "" CREAM_Job_Status\\\\ Error:\\\\ "" + msg"		5053315	1					
ANR	5053554	Argument	"( * it ) + "" CREAM_Job_Status\\\\ Error:\\\\ "" + msg"		5053315	0					
ANR	5053555	AdditiveExpression	"( * it ) + "" CREAM_Job_Status\\\\ Error:\\\\ "" + msg"		5053315	0		+			
ANR	5053556	UnaryOperationExpression	* it		5053315	0					
ANR	5053557	UnaryOperator	*		5053315	0					
ANR	5053558	Identifier	it		5053315	1					
ANR	5053559	AdditiveExpression	""" CREAM_Job_Status\\\\ Error:\\\\ "" + msg"		5053315	1		+			
ANR	5053560	PrimaryExpression	""" CREAM_Job_Status\\\\ Error:\\\\ """		5053315	0					
ANR	5053561	Identifier	msg		5053315	1					
ANR	5053562	ExpressionStatement	free ( msg )	1352:3:37528:37537	5053315	2	True				
ANR	5053563	CallExpression	free ( msg )		5053315	0					
ANR	5053564	Callee	free		5053315	0					
ANR	5053565	Identifier	free		5053315	0					
ANR	5053566	ArgumentList	msg		5053315	1					
ANR	5053567	Argument	msg		5053315	0					
ANR	5053568	Identifier	msg		5053315	0					
ANR	5053569	ReturnStatement	return 1 ;	1354:2:37545:37553	5053315	3	True				
ANR	5053570	PrimaryExpression	1		5053315	0					
ANR	5053571	ReturnType	int		5053315	1					
ANR	5053572	Identifier	thread_cream_job_status		5053315	2					
ANR	5053573	ParameterList	Request * * reqlist		5053315	3					
ANR	5053574	Parameter	Request * * reqlist	1305:29:36248:36264	5053315	0	True				
ANR	5053575	ParameterType	Request * *		5053315	0					
ANR	5053576	Identifier	reqlist		5053315	1					
ANR	5053577	CFGEntryNode	ENTRY		5053315		True				
ANR	5053578	CFGExitNode	EXIT		5053315		True				
ANR	5053579	CFGErrorNode	ERROR		5053315		True				
ANR	5053580	Symbol	NULL		5053315						
ANR	5053581	Symbol	reqlist [ 0 ] -> input_line		5053315						
ANR	5053582	Symbol	sar		5053315						
ANR	5053583	Symbol	single_request		5053315						
ANR	5053584	Symbol	& service		5053315						
ANR	5053585	Symbol	* * * reqlist		5053315						
ANR	5053586	Symbol	* reqlist		5053315						
ANR	5053587	Symbol	cp		5053315						
ANR	5053588	Symbol	* * reqlist		5053315						
ANR	5053589	Symbol	result_line		5053315						
ANR	5053590	Symbol	proxy		5053315						
ANR	5053591	Symbol	reqlist		5053315						
ANR	5053592	Symbol	service		5053315						
ANR	5053593	Symbol	reqids		5053315						
ANR	5053594	Symbol	reqlist [ 0 ] -> proxy		5053315						
ANR	5053595	Symbol	* reqlist [ 0 ] -> input_line		5053315						
ANR	5053596	Function	handle_cream_job_info	1482:0:40783:41167							
ANR	5053597	FunctionDef	handle_cream_job_info (char * * input_line)		5053596	0					
ANR	5053598	CompoundStatement		1483:0:40830:41167	5053596	0					
ANR	5053599	IdentifierDeclStatement	int arg_cnt = count_args ( input_line ) ;	1484:1:40833:40871	5053596	0	True				
ANR	5053600	IdentifierDecl	arg_cnt = count_args ( input_line )		5053596	0					
ANR	5053601	IdentifierDeclType	int		5053596	0					
ANR	5053602	Identifier	arg_cnt		5053596	1					
ANR	5053603	AssignmentExpression	arg_cnt = count_args ( input_line )		5053596	2		=			
ANR	5053604	Identifier	arg_cnt		5053596	0					
ANR	5053605	CallExpression	count_args ( input_line )		5053596	1					
ANR	5053606	Callee	count_args		5053596	0					
ANR	5053607	Identifier	count_args		5053596	0					
ANR	5053608	ArgumentList	input_line		5053596	1					
ANR	5053609	Argument	input_line		5053596	0					
ANR	5053610	Identifier	input_line		5053596	0					
ANR	5053611	IdentifierDeclStatement	char * jobnum = NULL ;	1485:1:40874:40893	5053596	1	True				
ANR	5053612	IdentifierDecl	* jobnum = NULL		5053596	0					
ANR	5053613	IdentifierDeclType	char *		5053596	0					
ANR	5053614	Identifier	jobnum		5053596	1					
ANR	5053615	AssignmentExpression	* jobnum = NULL		5053596	2		=			
ANR	5053616	Identifier	NULL		5053596	0					
ANR	5053617	Identifier	NULL		5053596	1					
ANR	5053618	IfStatement	if ( arg_cnt < 4 )		5053596	2					
ANR	5053619	Condition	arg_cnt < 4	1487:6:40902:40912	5053596	0	True				
ANR	5053620	RelationalExpression	arg_cnt < 4		5053596	0		<			
ANR	5053621	Identifier	arg_cnt		5053596	0					
ANR	5053622	PrimaryExpression	4		5053596	1					
ANR	5053623	CompoundStatement		5:20:85:85	5053596	1					
ANR	5053624	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	1488:2:40920:40941	5053596	0	True				
ANR	5053625	CallExpression	HANDLE_SYNTAX_ERROR ( )		5053596	0					
ANR	5053626	Callee	HANDLE_SYNTAX_ERROR		5053596	0					
ANR	5053627	Identifier	HANDLE_SYNTAX_ERROR		5053596	0					
ANR	5053628	ArgumentList			5053596	1					
ANR	5053629	ExpressionStatement	"process_string_arg ( input_line [ 3 ] , & jobnum )"	1491:1:40948:40992	5053596	3	True				
ANR	5053630	CallExpression	"process_string_arg ( input_line [ 3 ] , & jobnum )"		5053596	0					
ANR	5053631	Callee	process_string_arg		5053596	0					
ANR	5053632	Identifier	process_string_arg		5053596	0					
ANR	5053633	ArgumentList	input_line [ 3 ]		5053596	1					
ANR	5053634	Argument	input_line [ 3 ]		5053596	0					
ANR	5053635	ArrayIndexing	input_line [ 3 ]		5053596	0					
ANR	5053636	Identifier	input_line		5053596	0					
ANR	5053637	PrimaryExpression	3		5053596	1					
ANR	5053638	Argument	& jobnum		5053596	1					
ANR	5053639	UnaryOperationExpression	& jobnum		5053596	0					
ANR	5053640	UnaryOperator	&		5053596	0					
ANR	5053641	Identifier	jobnum		5053596	1					
ANR	5053642	IfStatement	if ( jobnum && ( atoi ( jobnum ) + 4 != arg_cnt ) )		5053596	4					
ANR	5053643	Condition	jobnum && ( atoi ( jobnum ) + 4 != arg_cnt )	1492:6:41000:41042	5053596	0	True				
ANR	5053644	AndExpression	jobnum && ( atoi ( jobnum ) + 4 != arg_cnt )		5053596	0		&&			
ANR	5053645	Identifier	jobnum		5053596	0					
ANR	5053646	EqualityExpression	atoi ( jobnum ) + 4 != arg_cnt		5053596	1		!=			
ANR	5053647	AdditiveExpression	atoi ( jobnum ) + 4		5053596	0		+			
ANR	5053648	CallExpression	atoi ( jobnum )		5053596	0					
ANR	5053649	Callee	atoi		5053596	0					
ANR	5053650	Identifier	atoi		5053596	0					
ANR	5053651	ArgumentList	jobnum		5053596	1					
ANR	5053652	Argument	jobnum		5053596	0					
ANR	5053653	Identifier	jobnum		5053596	0					
ANR	5053654	PrimaryExpression	4		5053596	1					
ANR	5053655	Identifier	arg_cnt		5053596	1					
ANR	5053656	CompoundStatement		10:52:215:215	5053596	1					
ANR	5053657	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	1493:2:41050:41071	5053596	0	True				
ANR	5053658	CallExpression	HANDLE_SYNTAX_ERROR ( )		5053596	0					
ANR	5053659	Callee	HANDLE_SYNTAX_ERROR		5053596	0					
ANR	5053660	Identifier	HANDLE_SYNTAX_ERROR		5053596	0					
ANR	5053661	ArgumentList			5053596	1					
ANR	5053662	ExpressionStatement	"enqueue_request ( input_line , thread_cream_job_info )"	1496:1:41078:41130	5053596	5	True				
ANR	5053663	CallExpression	"enqueue_request ( input_line , thread_cream_job_info )"		5053596	0					
ANR	5053664	Callee	enqueue_request		5053596	0					
ANR	5053665	Identifier	enqueue_request		5053596	0					
ANR	5053666	ArgumentList	input_line		5053596	1					
ANR	5053667	Argument	input_line		5053596	0					
ANR	5053668	Identifier	input_line		5053596	0					
ANR	5053669	Argument	thread_cream_job_info		5053596	1					
ANR	5053670	Identifier	thread_cream_job_info		5053596	0					
ANR	5053671	ExpressionStatement	"gahp_printf ( ""S\\n"" )"	1498:1:41134:41152	5053596	6	True				
ANR	5053672	CallExpression	"gahp_printf ( ""S\\n"" )"		5053596	0					
ANR	5053673	Callee	gahp_printf		5053596	0					
ANR	5053674	Identifier	gahp_printf		5053596	0					
ANR	5053675	ArgumentList	"""S\\n"""		5053596	1					
ANR	5053676	Argument	"""S\\n"""		5053596	0					
ANR	5053677	PrimaryExpression	"""S\\n"""		5053596	0					
ANR	5053678	ReturnStatement	return 0 ;	1500:1:41157:41165	5053596	7	True				
ANR	5053679	PrimaryExpression	0		5053596	0					
ANR	5053680	ReturnType	int		5053596	1					
ANR	5053681	Identifier	handle_cream_job_info		5053596	2					
ANR	5053682	ParameterList	char * * input_line		5053596	3					
ANR	5053683	Parameter	char * * input_line	1482:27:40810:40826	5053596	0	True				
ANR	5053684	ParameterType	char * *		5053596	0					
ANR	5053685	Identifier	input_line		5053596	1					
ANR	5053686	CFGEntryNode	ENTRY		5053596		True				
ANR	5053687	CFGExitNode	EXIT		5053596		True				
ANR	5053688	Symbol	atoi		5053596						
ANR	5053689	Symbol	* input_line		5053596						
ANR	5053690	Symbol	NULL		5053596						
ANR	5053691	Symbol	& jobnum		5053596						
ANR	5053692	Symbol	jobnum		5053596						
ANR	5053693	Symbol	count_args		5053596						
ANR	5053694	Symbol	input_line		5053596						
ANR	5053695	Symbol	arg_cnt		5053596						
ANR	5053696	Symbol	thread_cream_job_info		5053596						
ANR	5053697	Function	thread_cream_job_info	1503:0:41170:43077							
ANR	5053698	FunctionDef	thread_cream_job_info (Request * req)		5053697	0					
ANR	5053699	CompoundStatement		1504:0:41212:43077	5053697	0					
ANR	5053700	IdentifierDeclStatement	"char * reqid , * service , * jobnum_str , * jobid ;"	1509:1:41374:41416	5053697	0	True				
ANR	5053701	IdentifierDecl	* reqid		5053697	0					
ANR	5053702	IdentifierDeclType	char *		5053697	0					
ANR	5053703	Identifier	reqid		5053697	1					
ANR	5053704	IdentifierDecl	* service		5053697	1					
ANR	5053705	IdentifierDeclType	char *		5053697	0					
ANR	5053706	Identifier	service		5053697	1					
ANR	5053707	IdentifierDecl	* jobnum_str		5053697	2					
ANR	5053708	IdentifierDeclType	char *		5053697	0					
ANR	5053709	Identifier	jobnum_str		5053697	1					
ANR	5053710	IdentifierDecl	* jobid		5053697	3					
ANR	5053711	IdentifierDeclType	char *		5053697	0					
ANR	5053712	Identifier	jobid		5053697	1					
ANR	5053713	IdentifierDeclStatement	string result_line ;	1510:1:41419:41437	5053697	1	True				
ANR	5053714	IdentifierDecl	result_line		5053697	0					
ANR	5053715	IdentifierDeclType	string		5053697	0					
ANR	5053716	Identifier	result_line		5053697	1					
ANR	5053717	IdentifierDeclStatement	AbsCreamProxy * cp = NULL ;	1511:1:41440:41464	5053697	2	True				
ANR	5053718	IdentifierDecl	* cp = NULL		5053697	0					
ANR	5053719	IdentifierDeclType	AbsCreamProxy *		5053697	0					
ANR	5053720	Identifier	cp		5053697	1					
ANR	5053721	AssignmentExpression	* cp = NULL		5053697	2		=			
ANR	5053722	Identifier	NULL		5053697	0					
ANR	5053723	Identifier	NULL		5053697	1					
ANR	5053724	ExpressionStatement	"process_string_arg ( req -> input_line [ 1 ] , & reqid )"	1513:1:41469:41517	5053697	3	True				
ANR	5053725	CallExpression	"process_string_arg ( req -> input_line [ 1 ] , & reqid )"		5053697	0					
ANR	5053726	Callee	process_string_arg		5053697	0					
ANR	5053727	Identifier	process_string_arg		5053697	0					
ANR	5053728	ArgumentList	req -> input_line [ 1 ]		5053697	1					
ANR	5053729	Argument	req -> input_line [ 1 ]		5053697	0					
ANR	5053730	ArrayIndexing	req -> input_line [ 1 ]		5053697	0					
ANR	5053731	PtrMemberAccess	req -> input_line		5053697	0					
ANR	5053732	Identifier	req		5053697	0					
ANR	5053733	Identifier	input_line		5053697	1					
ANR	5053734	PrimaryExpression	1		5053697	1					
ANR	5053735	Argument	& reqid		5053697	1					
ANR	5053736	UnaryOperationExpression	& reqid		5053697	0					
ANR	5053737	UnaryOperator	&		5053697	0					
ANR	5053738	Identifier	reqid		5053697	1					
ANR	5053739	ExpressionStatement	"process_string_arg ( req -> input_line [ 2 ] , & service )"	1514:1:41520:41570	5053697	4	True				
ANR	5053740	CallExpression	"process_string_arg ( req -> input_line [ 2 ] , & service )"		5053697	0					
ANR	5053741	Callee	process_string_arg		5053697	0					
ANR	5053742	Identifier	process_string_arg		5053697	0					
ANR	5053743	ArgumentList	req -> input_line [ 2 ]		5053697	1					
ANR	5053744	Argument	req -> input_line [ 2 ]		5053697	0					
ANR	5053745	ArrayIndexing	req -> input_line [ 2 ]		5053697	0					
ANR	5053746	PtrMemberAccess	req -> input_line		5053697	0					
ANR	5053747	Identifier	req		5053697	0					
ANR	5053748	Identifier	input_line		5053697	1					
ANR	5053749	PrimaryExpression	2		5053697	1					
ANR	5053750	Argument	& service		5053697	1					
ANR	5053751	UnaryOperationExpression	& service		5053697	0					
ANR	5053752	UnaryOperator	&		5053697	0					
ANR	5053753	Identifier	service		5053697	1					
ANR	5053754	ExpressionStatement	"process_string_arg ( req -> input_line [ 3 ] , & jobnum_str )"	1515:1:41573:41626	5053697	5	True				
ANR	5053755	CallExpression	"process_string_arg ( req -> input_line [ 3 ] , & jobnum_str )"		5053697	0					
ANR	5053756	Callee	process_string_arg		5053697	0					
ANR	5053757	Identifier	process_string_arg		5053697	0					
ANR	5053758	ArgumentList	req -> input_line [ 3 ]		5053697	1					
ANR	5053759	Argument	req -> input_line [ 3 ]		5053697	0					
ANR	5053760	ArrayIndexing	req -> input_line [ 3 ]		5053697	0					
ANR	5053761	PtrMemberAccess	req -> input_line		5053697	0					
ANR	5053762	Identifier	req		5053697	0					
ANR	5053763	Identifier	input_line		5053697	1					
ANR	5053764	PrimaryExpression	3		5053697	1					
ANR	5053765	Argument	& jobnum_str		5053697	1					
ANR	5053766	UnaryOperationExpression	& jobnum_str		5053697	0					
ANR	5053767	UnaryOperator	&		5053697	0					
ANR	5053768	Identifier	jobnum_str		5053697	1					
ANR	5053769	IdentifierDeclStatement	AbsCreamProxy :: InfoArrayResult iar ;	1517:1:41631:41665	5053697	6	True				
ANR	5053770	IdentifierDecl	iar		5053697	0					
ANR	5053771	IdentifierDeclType	AbsCreamProxy :: InfoArrayResult		5053697	0					
ANR	5053772	Identifier	iar		5053697	1					
ANR	5053773	TryStatement	try		5053697	7					
ANR	5053774	CompoundStatement		28:2:868:1129	5053697	0					
ANR	5053775	IfStatement	if ( jobnum_str == NULL )		5053697	0					
ANR	5053776	Condition	jobnum_str == NULL		5053697	0					
ANR	5053777	EqualityExpression	jobnum_str == NULL		5053697	0		==			
ANR	5053778	Identifier	jobnum_str		5053697	0					
ANR	5053779	Identifier	NULL		5053697	1					
ANR	5053780	CompoundStatement		16:26:487:487	5053697	1					
ANR	5053781	ThrowStatement	"throw runtime_error ( ""info of all jobs not supported"" ) ;"		5053697	0					
ANR	5053782	CallExpression	"runtime_error ( ""info of all jobs not supported"" )"		5053697	0					
ANR	5053783	Callee	runtime_error		5053697	0					
ANR	5053784	Identifier	runtime_error		5053697	0					
ANR	5053785	ArgumentList	"""info of all jobs not supported"""		5053697	1					
ANR	5053786	Argument	"""info of all jobs not supported"""		5053697	0					
ANR	5053787	PrimaryExpression	"""info of all jobs not supported"""		5053697	0					
ANR	5053788	IdentifierDeclStatement	vector < JobIdWrapper > jv ;		5053697	1					
ANR	5053789	IdentifierDecl	jv		5053697	0					
ANR	5053790	IdentifierDeclType	vector < JobIdWrapper >		5053697	0					
ANR	5053791	Identifier	jv		5053697	1					
ANR	5053792	IdentifierDeclStatement	int jobnum = atoi ( jobnum_str ) ;		5053697	2					
ANR	5053793	IdentifierDecl	jobnum = atoi ( jobnum_str )		5053697	0					
ANR	5053794	IdentifierDeclType	int		5053697	0					
ANR	5053795	Identifier	jobnum		5053697	1					
ANR	5053796	AssignmentExpression	jobnum = atoi ( jobnum_str )		5053697	2		=			
ANR	5053797	Identifier	jobnum		5053697	0					
ANR	5053798	CallExpression	atoi ( jobnum_str )		5053697	1					
ANR	5053799	Callee	atoi		5053697	0					
ANR	5053800	Identifier	atoi		5053697	0					
ANR	5053801	ArgumentList	jobnum_str		5053697	1					
ANR	5053802	Argument	jobnum_str		5053697	0					
ANR	5053803	Identifier	jobnum_str		5053697	0					
ANR	5053804	ForStatement	for ( int i = 0 ; i < jobnum ; i ++ )		5053697	3					
ANR	5053805	ForInit	int i = 0 ;		5053697	0					
ANR	5053806	IdentifierDeclStatement	int i = 0 ;		5053697	0					
ANR	5053807	IdentifierDecl	i = 0		5053697	0					
ANR	5053808	IdentifierDeclType	int		5053697	0					
ANR	5053809	Identifier	i		5053697	1					
ANR	5053810	AssignmentExpression	i = 0		5053697	2		=			
ANR	5053811	Identifier	i		5053697	0					
ANR	5053812	PrimaryExpression	0		5053697	1					
ANR	5053813	Condition	i < jobnum		5053697	1					
ANR	5053814	RelationalExpression	i < jobnum		5053697	0		<			
ANR	5053815	Identifier	i		5053697	0					
ANR	5053816	Identifier	jobnum		5053697	1					
ANR	5053817	PostIncDecOperationExpression	i ++		5053697	2					
ANR	5053818	Identifier	i		5053697	0					
ANR	5053819	IncDec	++		5053697	1					
ANR	5053820	CompoundStatement		21:36:649:649	5053697	3					
ANR	5053821	ExpressionStatement	"process_string_arg ( req -> input_line [ i + 4 ] , & jobid )"		5053697	0					
ANR	5053822	CallExpression	"process_string_arg ( req -> input_line [ i + 4 ] , & jobid )"		5053697	0					
ANR	5053823	Callee	process_string_arg		5053697	0					
ANR	5053824	Identifier	process_string_arg		5053697	0					
ANR	5053825	ArgumentList	req -> input_line [ i + 4 ]		5053697	1					
ANR	5053826	Argument	req -> input_line [ i + 4 ]		5053697	0					
ANR	5053827	ArrayIndexing	req -> input_line [ i + 4 ]		5053697	0					
ANR	5053828	PtrMemberAccess	req -> input_line		5053697	0					
ANR	5053829	Identifier	req		5053697	0					
ANR	5053830	Identifier	input_line		5053697	1					
ANR	5053831	AdditiveExpression	i + 4		5053697	1		+			
ANR	5053832	Identifier	i		5053697	0					
ANR	5053833	PrimaryExpression	4		5053697	1					
ANR	5053834	Argument	& jobid		5053697	1					
ANR	5053835	UnaryOperationExpression	& jobid		5053697	0					
ANR	5053836	UnaryOperator	&		5053697	0					
ANR	5053837	Identifier	jobid		5053697	1					
ANR	5053838	Statement	jv		5053697	1					
ANR	5053839	Statement	.		5053697	2					
ANR	5053840	Statement	push_back		5053697	3					
ANR	5053841	Statement	(		5053697	4					
ANR	5053842	Statement	JobIdWrapper		5053697	5					
ANR	5053843	Statement	(		5053697	6					
ANR	5053844	Statement	jobid		5053697	7					
ANR	5053845	Statement	","		5053697	8					
ANR	5053846	Statement	service		5053697	9					
ANR	5053847	Statement	","		5053697	10					
ANR	5053848	Statement	vector		5053697	11					
ANR	5053849	Statement	<		5053697	12					
ANR	5053850	Statement	JobPropertyWrapper		5053697	13					
ANR	5053851	Statement	>		5053697	14					
ANR	5053852	Statement	(		5053697	15					
ANR	5053853	Statement	)		5053697	16					
ANR	5053854	Statement	)		5053697	17					
ANR	5053855	Statement	)		5053697	18					
ANR	5053856	ExpressionStatement			5053697	19					
ANR	5053857	IdentifierDeclStatement	vector < string > sv ;		5053697	4					
ANR	5053858	IdentifierDecl	sv		5053697	0					
ANR	5053859	IdentifierDeclType	vector < string >		5053697	0					
ANR	5053860	Identifier	sv		5053697	1					
ANR	5053861	IdentifierDeclStatement	"JobFilterWrapper jfw ( jv , sv , - 1 , - 1 , """" , """" ) ;"		5053697	5					
ANR	5053862	IdentifierDecl	"jfw ( jv , sv , - 1 , - 1 , """" , """" )"		5053697	0					
ANR	5053863	IdentifierDeclType	JobFilterWrapper		5053697	0					
ANR	5053864	Identifier	jfw		5053697	1					
ANR	5053865	Expression	"jv , sv , - 1 , - 1 , """" , """""		5053697	2					
ANR	5053866	Identifier	jv		5053697	0					
ANR	5053867	Expression	"sv , - 1 , - 1 , """" , """""		5053697	1					
ANR	5053868	Identifier	sv		5053697	0					
ANR	5053869	Expression	"- 1 , - 1 , """" , """""		5053697	1					
ANR	5053870	UnaryOperationExpression	- 1		5053697	0					
ANR	5053871	UnaryOperator	-		5053697	0					
ANR	5053872	PrimaryExpression	1		5053697	1					
ANR	5053873	Expression	"- 1 , """" , """""		5053697	1					
ANR	5053874	UnaryOperationExpression	- 1		5053697	0					
ANR	5053875	UnaryOperator	-		5053697	0					
ANR	5053876	PrimaryExpression	1		5053697	1					
ANR	5053877	Expression	""""" , """""		5053697	1					
ANR	5053878	PrimaryExpression	""""""		5053697	0					
ANR	5053879	PrimaryExpression	""""""		5053697	1					
ANR	5053880	ExpressionStatement	"cp = CreamProxyFactory :: make_CreamProxyInfo ( & jfw , & iar , DEFAULT_TIMEOUT )"		5053697	6					
ANR	5053881	AssignmentExpression	"cp = CreamProxyFactory :: make_CreamProxyInfo ( & jfw , & iar , DEFAULT_TIMEOUT )"		5053697	0		=			
ANR	5053882	Identifier	cp		5053697	0					
ANR	5053883	CallExpression	"CreamProxyFactory :: make_CreamProxyInfo ( & jfw , & iar , DEFAULT_TIMEOUT )"		5053697	1					
ANR	5053884	Callee	CreamProxyFactory :: make_CreamProxyInfo		5053697	0					
ANR	5053885	Identifier	CreamProxyFactory :: make_CreamProxyInfo		5053697	0					
ANR	5053886	ArgumentList	& jfw		5053697	1					
ANR	5053887	Argument	& jfw		5053697	0					
ANR	5053888	UnaryOperationExpression	& jfw		5053697	0					
ANR	5053889	UnaryOperator	&		5053697	0					
ANR	5053890	Identifier	jfw		5053697	1					
ANR	5053891	Argument	& iar		5053697	1					
ANR	5053892	UnaryOperationExpression	& iar		5053697	0					
ANR	5053893	UnaryOperator	&		5053697	0					
ANR	5053894	Identifier	iar		5053697	1					
ANR	5053895	Argument	DEFAULT_TIMEOUT		5053697	2					
ANR	5053896	Identifier	DEFAULT_TIMEOUT		5053697	0					
ANR	5053897	ExpressionStatement	check_for_factory_error ( cp )		5053697	7					
ANR	5053898	CallExpression	check_for_factory_error ( cp )		5053697	0					
ANR	5053899	Callee	check_for_factory_error		5053697	0					
ANR	5053900	Identifier	check_for_factory_error		5053697	0					
ANR	5053901	ArgumentList	cp		5053697	1					
ANR	5053902	Argument	cp		5053697	0					
ANR	5053903	Identifier	cp		5053697	0					
ANR	5053904	ExpressionStatement	cp -> setCredential ( req -> proxy . c_str ( ) )		5053697	8					
ANR	5053905	CallExpression	cp -> setCredential ( req -> proxy . c_str ( ) )		5053697	0					
ANR	5053906	Callee	cp -> setCredential		5053697	0					
ANR	5053907	PtrMemberAccess	cp -> setCredential		5053697	0					
ANR	5053908	Identifier	cp		5053697	0					
ANR	5053909	Identifier	setCredential		5053697	1					
ANR	5053910	ArgumentList	req -> proxy . c_str ( )		5053697	1					
ANR	5053911	Argument	req -> proxy . c_str ( )		5053697	0					
ANR	5053912	CallExpression	req -> proxy . c_str ( )		5053697	0					
ANR	5053913	Callee	req -> proxy . c_str		5053697	0					
ANR	5053914	MemberAccess	req -> proxy . c_str		5053697	0					
ANR	5053915	PtrMemberAccess	req -> proxy		5053697	0					
ANR	5053916	Identifier	req		5053697	0					
ANR	5053917	Identifier	proxy		5053697	1					
ANR	5053918	Identifier	c_str		5053697	1					
ANR	5053919	ArgumentList			5053697	1					
ANR	5053920	ExpressionStatement	cp -> execute ( service )		5053697	9					
ANR	5053921	CallExpression	cp -> execute ( service )		5053697	0					
ANR	5053922	Callee	cp -> execute		5053697	0					
ANR	5053923	PtrMemberAccess	cp -> execute		5053697	0					
ANR	5053924	Identifier	cp		5053697	0					
ANR	5053925	Identifier	execute		5053697	1					
ANR	5053926	ArgumentList	service		5053697	1					
ANR	5053927	Argument	service		5053697	0					
ANR	5053928	Identifier	service		5053697	0					
ANR	5053929	ForStatement	for ( AbsCreamProxy :: InfoArrayResult :: iterator i = iar . begin ( ) ; i != iar . end ( ) ; i ++ )		5053697	10					
ANR	5053930	ForInit	AbsCreamProxy :: InfoArrayResult :: iterator i = iar . begin ( ) ;		5053697	0					
ANR	5053931	IdentifierDeclStatement	AbsCreamProxy :: InfoArrayResult :: iterator i = iar . begin ( ) ;		5053697	0					
ANR	5053932	IdentifierDecl	i = iar . begin ( )		5053697	0					
ANR	5053933	IdentifierDeclType	AbsCreamProxy :: InfoArrayResult :: iterator		5053697	0					
ANR	5053934	Identifier	i		5053697	1					
ANR	5053935	AssignmentExpression	i = iar . begin ( )		5053697	2		=			
ANR	5053936	Identifier	i		5053697	0					
ANR	5053937	CallExpression	iar . begin ( )		5053697	1					
ANR	5053938	Callee	iar . begin		5053697	0					
ANR	5053939	MemberAccess	iar . begin		5053697	0					
ANR	5053940	Identifier	iar		5053697	0					
ANR	5053941	Identifier	begin		5053697	1					
ANR	5053942	ArgumentList			5053697	1					
ANR	5053943	Condition	i != iar . end ( )		5053697	1					
ANR	5053944	EqualityExpression	i != iar . end ( )		5053697	0		!=			
ANR	5053945	Identifier	i		5053697	0					
ANR	5053946	CallExpression	iar . end ( )		5053697	1					
ANR	5053947	Callee	iar . end		5053697	0					
ANR	5053948	MemberAccess	iar . end		5053697	0					
ANR	5053949	Identifier	iar		5053697	0					
ANR	5053950	Identifier	end		5053697	1					
ANR	5053951	ArgumentList			5053697	1					
ANR	5053952	PostIncDecOperationExpression	i ++		5053697	2					
ANR	5053953	Identifier	i		5053697	0					
ANR	5053954	IncDec	++		5053697	1					
ANR	5053955	CompoundStatement		43:2:1460:1460	5053697	3					
ANR	5053956	Statement	if		5053697	0					
ANR	5053957	Statement	(		5053697	1					
ANR	5053958	Statement	i		5053697	2					
ANR	5053959	Statement	->		5053697	3					
ANR	5053960	Statement	second		5053697	4					
ANR	5053961	Statement	.		5053697	5					
ANR	5053962	Statement	get		5053697	6					
ANR	5053963	Statement	<		5053697	7					
ANR	5053964	Statement	0		5053697	8					
ANR	5053965	Statement	>		5053697	9					
ANR	5053966	Statement	(		5053697	10					
ANR	5053967	Statement	)		5053697	11					
ANR	5053968	Statement	!=		5053697	12					
ANR	5053969	Statement	JobInfoWrapper		5053697	13					
ANR	5053970	Statement	::		5053697	14					
ANR	5053971	Statement	OK		5053697	15					
ANR	5053972	Statement	)		5053697	16					
ANR	5053973	CompoundStatement		44:49:1511:1511	5053697	17					
ANR	5053974	Statement	throw		5053697	0					
ANR	5053975	Statement	runtime_error		5053697	1					
ANR	5053976	Statement	(		5053697	2					
ANR	5053977	Statement	i		5053697	3					
ANR	5053978	Statement	->		5053697	4					
ANR	5053979	Statement	second		5053697	5					
ANR	5053980	Statement	.		5053697	6					
ANR	5053981	Statement	get		5053697	7					
ANR	5053982	Statement	<		5053697	8					
ANR	5053983	Statement	2		5053697	9					
ANR	5053984	Statement	>		5053697	10					
ANR	5053985	Statement	(		5053697	11					
ANR	5053986	Statement	)		5053697	12					
ANR	5053987	Statement	)		5053697	13					
ANR	5053988	ExpressionStatement			5053697	14					
ANR	5053989	Statement	delete		5053697	11					
ANR	5053990	ExpressionStatement	cp		5053697	12					
ANR	5053991	Identifier	cp		5053697	0					
ANR	5053992	CatchList			5053697	1					
ANR	5053993	CatchStatement	catch ( std :: exception & ex )		5053697	0					
ANR	5053994	Identifier	ex		5053697	0					
ANR	5053995	CompoundStatement		52:2:1627:1663	5053697	1					
ANR	5053996	Statement	delete	1554:2:42827:42832	5053697	0	True				
ANR	5053997	ExpressionStatement	cp	1554:9:42834:42836	5053697	1	True				
ANR	5053998	Identifier	cp		5053697	0					
ANR	5053999	IdentifierDeclStatement	char * msg = escape_spaces ( ex . what ( ) ) ;	1555:2:42840:42876	5053697	2	True				
ANR	5054000	IdentifierDecl	* msg = escape_spaces ( ex . what ( ) )		5053697	0					
ANR	5054001	IdentifierDeclType	char *		5053697	0					
ANR	5054002	Identifier	msg		5053697	1					
ANR	5054003	AssignmentExpression	* msg = escape_spaces ( ex . what ( ) )		5053697	2		=			
ANR	5054004	Identifier	msg		5053697	0					
ANR	5054005	CallExpression	escape_spaces ( ex . what ( ) )		5053697	1					
ANR	5054006	Callee	escape_spaces		5053697	0					
ANR	5054007	Identifier	escape_spaces		5053697	0					
ANR	5054008	ArgumentList	ex . what ( )		5053697	1					
ANR	5054009	Argument	ex . what ( )		5053697	0					
ANR	5054010	CallExpression	ex . what ( )		5053697	0					
ANR	5054011	Callee	ex . what		5053697	0					
ANR	5054012	MemberAccess	ex . what		5053697	0					
ANR	5054013	Identifier	ex		5053697	0					
ANR	5054014	Identifier	what		5053697	1					
ANR	5054015	ArgumentList			5053697	1					
ANR	5054016	ExpressionStatement	"result_line = ( string ) reqid + "" CREAM_Job_Info\\\\ Error:\\\\ "" + msg"	1556:2:42880:42945	5053697	3	True				
ANR	5054017	AssignmentExpression	"result_line = ( string ) reqid + "" CREAM_Job_Info\\\\ Error:\\\\ "" + msg"		5053697	0		=			
ANR	5054018	Identifier	result_line		5053697	0					
ANR	5054019	AdditiveExpression	"( string ) reqid + "" CREAM_Job_Info\\\\ Error:\\\\ "" + msg"		5053697	1		+			
ANR	5054020	CastExpression	( string ) reqid		5053697	0					
ANR	5054021	CastTarget	string		5053697	0					
ANR	5054022	Identifier	reqid		5053697	1					
ANR	5054023	AdditiveExpression	""" CREAM_Job_Info\\\\ Error:\\\\ "" + msg"		5053697	1		+			
ANR	5054024	PrimaryExpression	""" CREAM_Job_Info\\\\ Error:\\\\ """		5053697	0					
ANR	5054025	Identifier	msg		5053697	1					
ANR	5054026	ExpressionStatement	enqueue_result ( result_line )	1557:2:42949:42976	5053697	4	True				
ANR	5054027	CallExpression	enqueue_result ( result_line )		5053697	0					
ANR	5054028	Callee	enqueue_result		5053697	0					
ANR	5054029	Identifier	enqueue_result		5053697	0					
ANR	5054030	ArgumentList	result_line		5053697	1					
ANR	5054031	Argument	result_line		5053697	0					
ANR	5054032	Identifier	result_line		5053697	0					
ANR	5054033	ExpressionStatement	free ( msg )	1558:2:42980:42989	5053697	5	True				
ANR	5054034	CallExpression	free ( msg )		5053697	0					
ANR	5054035	Callee	free		5053697	0					
ANR	5054036	Identifier	free		5053697	0					
ANR	5054037	ArgumentList	msg		5053697	1					
ANR	5054038	Argument	msg		5053697	0					
ANR	5054039	Identifier	msg		5053697	0					
ANR	5054040	ReturnStatement	return 1 ;	1560:2:42996:43004	5053697	6	True				
ANR	5054041	PrimaryExpression	1		5053697	0					
ANR	5054042	ReturnStatement	return 0 ;	1565:1:43067:43075	5053697	8	True				
ANR	5054043	PrimaryExpression	0		5053697	0					
ANR	5054044	ReturnType	int		5053697	1					
ANR	5054045	Identifier	thread_cream_job_info		5053697	2					
ANR	5054046	ParameterList	Request * req		5053697	3					
ANR	5054047	Parameter	Request * req	1503:27:41197:41208	5053697	0	True				
ANR	5054048	ParameterType	Request *		5053697	0					
ANR	5054049	Identifier	req		5053697	1					
ANR	5054050	CFGEntryNode	ENTRY		5053697		True				
ANR	5054051	CFGExitNode	EXIT		5053697		True				
ANR	5054052	CFGErrorNode	ERROR		5053697		True				
ANR	5054053	Symbol	& reqid		5053697						
ANR	5054054	Symbol	NULL		5053697						
ANR	5054055	Symbol	* req		5053697						
ANR	5054056	Symbol	& service		5053697						
ANR	5054057	Symbol	& jobnum_str		5053697						
ANR	5054058	Symbol	cp		5053697						
ANR	5054059	Symbol	reqid		5053697						
ANR	5054060	Symbol	result_line		5053697						
ANR	5054061	Symbol	jobid		5053697						
ANR	5054062	Symbol	jobnum_str		5053697						
ANR	5054063	Symbol	* * req		5053697						
ANR	5054064	Symbol	service		5053697						
ANR	5054065	Symbol	req -> input_line		5053697						
ANR	5054066	Symbol	iar		5053697						
ANR	5054067	Symbol	* req -> input_line		5053697						
ANR	5054068	Symbol	req		5053697						
ANR	5054069	Function	handle_cream_job_list	1573:0:43287:43497							
ANR	5054070	FunctionDef	handle_cream_job_list (char * * input_line)		5054069	0					
ANR	5054071	CompoundStatement		1574:0:43335:43497	5054069	0					
ANR	5054072	IfStatement	if ( count_args ( input_line ) != 3 )		5054069	0					
ANR	5054073	Condition	count_args ( input_line ) != 3	1575:6:43343:43371	5054069	0	True				
ANR	5054074	EqualityExpression	count_args ( input_line ) != 3		5054069	0		!=			
ANR	5054075	CallExpression	count_args ( input_line )		5054069	0					
ANR	5054076	Callee	count_args		5054069	0					
ANR	5054077	Identifier	count_args		5054069	0					
ANR	5054078	ArgumentList	input_line		5054069	1					
ANR	5054079	Argument	input_line		5054069	0					
ANR	5054080	Identifier	input_line		5054069	0					
ANR	5054081	PrimaryExpression	3		5054069	1					
ANR	5054082	CompoundStatement		2:38:39:39	5054069	1					
ANR	5054083	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	1576:2:43379:43400	5054069	0	True				
ANR	5054084	CallExpression	HANDLE_SYNTAX_ERROR ( )		5054069	0					
ANR	5054085	Callee	HANDLE_SYNTAX_ERROR		5054069	0					
ANR	5054086	Identifier	HANDLE_SYNTAX_ERROR		5054069	0					
ANR	5054087	ArgumentList			5054069	1					
ANR	5054088	ExpressionStatement	"enqueue_request ( input_line , thread_cream_job_list )"	1579:1:43407:43459	5054069	1	True				
ANR	5054089	CallExpression	"enqueue_request ( input_line , thread_cream_job_list )"		5054069	0					
ANR	5054090	Callee	enqueue_request		5054069	0					
ANR	5054091	Identifier	enqueue_request		5054069	0					
ANR	5054092	ArgumentList	input_line		5054069	1					
ANR	5054093	Argument	input_line		5054069	0					
ANR	5054094	Identifier	input_line		5054069	0					
ANR	5054095	Argument	thread_cream_job_list		5054069	1					
ANR	5054096	Identifier	thread_cream_job_list		5054069	0					
ANR	5054097	ExpressionStatement	"gahp_printf ( ""S\\n"" )"	1581:1:43463:43481	5054069	2	True				
ANR	5054098	CallExpression	"gahp_printf ( ""S\\n"" )"		5054069	0					
ANR	5054099	Callee	gahp_printf		5054069	0					
ANR	5054100	Identifier	gahp_printf		5054069	0					
ANR	5054101	ArgumentList	"""S\\n"""		5054069	1					
ANR	5054102	Argument	"""S\\n"""		5054069	0					
ANR	5054103	PrimaryExpression	"""S\\n"""		5054069	0					
ANR	5054104	ReturnStatement	return 0 ;	1583:1:43487:43495	5054069	3	True				
ANR	5054105	PrimaryExpression	0		5054069	0					
ANR	5054106	ReturnType	int		5054069	1					
ANR	5054107	Identifier	handle_cream_job_list		5054069	2					
ANR	5054108	ParameterList	char * * input_line		5054069	3					
ANR	5054109	Parameter	char * * input_line	1573:27:43314:43331	5054069	0	True				
ANR	5054110	ParameterType	char * *		5054069	0					
ANR	5054111	Identifier	input_line		5054069	1					
ANR	5054112	CFGEntryNode	ENTRY		5054069		True				
ANR	5054113	CFGExitNode	EXIT		5054069		True				
ANR	5054114	Symbol	count_args		5054069						
ANR	5054115	Symbol	input_line		5054069						
ANR	5054116	Symbol	thread_cream_job_list		5054069						
ANR	5054117	Function	thread_cream_job_list	1586:0:43500:44499							
ANR	5054118	FunctionDef	thread_cream_job_list (Request * req)		5054117	0					
ANR	5054119	CompoundStatement		1587:0:43542:44499	5054117	0					
ANR	5054120	IdentifierDeclStatement	"char * reqid , * service ;"	1588:1:43545:43566	5054117	0	True				
ANR	5054121	IdentifierDecl	* reqid		5054117	0					
ANR	5054122	IdentifierDeclType	char *		5054117	0					
ANR	5054123	Identifier	reqid		5054117	1					
ANR	5054124	IdentifierDecl	* service		5054117	1					
ANR	5054125	IdentifierDeclType	char *		5054117	0					
ANR	5054126	Identifier	service		5054117	1					
ANR	5054127	IdentifierDeclStatement	"string result_line , temp ;"	1589:1:43569:43593	5054117	1	True				
ANR	5054128	IdentifierDecl	result_line		5054117	0					
ANR	5054129	IdentifierDeclType	string		5054117	0					
ANR	5054130	Identifier	result_line		5054117	1					
ANR	5054131	IdentifierDecl	temp		5054117	1					
ANR	5054132	IdentifierDeclType	string		5054117	0					
ANR	5054133	Identifier	temp		5054117	1					
ANR	5054134	IdentifierDeclStatement	AbsCreamProxy * cp = NULL ;	1590:1:43596:43620	5054117	2	True				
ANR	5054135	IdentifierDecl	* cp = NULL		5054117	0					
ANR	5054136	IdentifierDeclType	AbsCreamProxy *		5054117	0					
ANR	5054137	Identifier	cp		5054117	1					
ANR	5054138	AssignmentExpression	* cp = NULL		5054117	2		=			
ANR	5054139	Identifier	NULL		5054117	0					
ANR	5054140	Identifier	NULL		5054117	1					
ANR	5054141	ExpressionStatement	"process_string_arg ( req -> input_line [ 1 ] , & reqid )"	1592:1:43624:43672	5054117	3	True				
ANR	5054142	CallExpression	"process_string_arg ( req -> input_line [ 1 ] , & reqid )"		5054117	0					
ANR	5054143	Callee	process_string_arg		5054117	0					
ANR	5054144	Identifier	process_string_arg		5054117	0					
ANR	5054145	ArgumentList	req -> input_line [ 1 ]		5054117	1					
ANR	5054146	Argument	req -> input_line [ 1 ]		5054117	0					
ANR	5054147	ArrayIndexing	req -> input_line [ 1 ]		5054117	0					
ANR	5054148	PtrMemberAccess	req -> input_line		5054117	0					
ANR	5054149	Identifier	req		5054117	0					
ANR	5054150	Identifier	input_line		5054117	1					
ANR	5054151	PrimaryExpression	1		5054117	1					
ANR	5054152	Argument	& reqid		5054117	1					
ANR	5054153	UnaryOperationExpression	& reqid		5054117	0					
ANR	5054154	UnaryOperator	&		5054117	0					
ANR	5054155	Identifier	reqid		5054117	1					
ANR	5054156	ExpressionStatement	"process_string_arg ( req -> input_line [ 2 ] , & service )"	1593:1:43675:43725	5054117	4	True				
ANR	5054157	CallExpression	"process_string_arg ( req -> input_line [ 2 ] , & service )"		5054117	0					
ANR	5054158	Callee	process_string_arg		5054117	0					
ANR	5054159	Identifier	process_string_arg		5054117	0					
ANR	5054160	ArgumentList	req -> input_line [ 2 ]		5054117	1					
ANR	5054161	Argument	req -> input_line [ 2 ]		5054117	0					
ANR	5054162	ArrayIndexing	req -> input_line [ 2 ]		5054117	0					
ANR	5054163	PtrMemberAccess	req -> input_line		5054117	0					
ANR	5054164	Identifier	req		5054117	0					
ANR	5054165	Identifier	input_line		5054117	1					
ANR	5054166	PrimaryExpression	2		5054117	1					
ANR	5054167	Argument	& service		5054117	1					
ANR	5054168	UnaryOperationExpression	& service		5054117	0					
ANR	5054169	UnaryOperator	&		5054117	0					
ANR	5054170	Identifier	service		5054117	1					
ANR	5054171	IdentifierDeclStatement	vector < JobIdWrapper > jv ;	1595:1:43729:43752	5054117	5	True				
ANR	5054172	IdentifierDecl	jv		5054117	0					
ANR	5054173	IdentifierDeclType	vector < JobIdWrapper >		5054117	0					
ANR	5054174	Identifier	jv		5054117	1					
ANR	5054175	TryStatement	try		5054117	6					
ANR	5054176	CompoundStatement		10:5:216:216	5054117	0					
ANR	5054177	ExpressionStatement	"cp = CreamProxyFactory :: make_CreamProxyList ( & jv , DEFAULT_TIMEOUT )"		5054117	0					
ANR	5054178	AssignmentExpression	"cp = CreamProxyFactory :: make_CreamProxyList ( & jv , DEFAULT_TIMEOUT )"		5054117	0		=			
ANR	5054179	Identifier	cp		5054117	0					
ANR	5054180	CallExpression	"CreamProxyFactory :: make_CreamProxyList ( & jv , DEFAULT_TIMEOUT )"		5054117	1					
ANR	5054181	Callee	CreamProxyFactory :: make_CreamProxyList		5054117	0					
ANR	5054182	Identifier	CreamProxyFactory :: make_CreamProxyList		5054117	0					
ANR	5054183	ArgumentList	& jv		5054117	1					
ANR	5054184	Argument	& jv		5054117	0					
ANR	5054185	UnaryOperationExpression	& jv		5054117	0					
ANR	5054186	UnaryOperator	&		5054117	0					
ANR	5054187	Identifier	jv		5054117	1					
ANR	5054188	Argument	DEFAULT_TIMEOUT		5054117	1					
ANR	5054189	Identifier	DEFAULT_TIMEOUT		5054117	0					
ANR	5054190	ExpressionStatement	check_for_factory_error ( cp )		5054117	1					
ANR	5054191	CallExpression	check_for_factory_error ( cp )		5054117	0					
ANR	5054192	Callee	check_for_factory_error		5054117	0					
ANR	5054193	Identifier	check_for_factory_error		5054117	0					
ANR	5054194	ArgumentList	cp		5054117	1					
ANR	5054195	Argument	cp		5054117	0					
ANR	5054196	Identifier	cp		5054117	0					
ANR	5054197	ExpressionStatement	cp -> setCredential ( req -> proxy . c_str ( ) )		5054117	2					
ANR	5054198	CallExpression	cp -> setCredential ( req -> proxy . c_str ( ) )		5054117	0					
ANR	5054199	Callee	cp -> setCredential		5054117	0					
ANR	5054200	PtrMemberAccess	cp -> setCredential		5054117	0					
ANR	5054201	Identifier	cp		5054117	0					
ANR	5054202	Identifier	setCredential		5054117	1					
ANR	5054203	ArgumentList	req -> proxy . c_str ( )		5054117	1					
ANR	5054204	Argument	req -> proxy . c_str ( )		5054117	0					
ANR	5054205	CallExpression	req -> proxy . c_str ( )		5054117	0					
ANR	5054206	Callee	req -> proxy . c_str		5054117	0					
ANR	5054207	MemberAccess	req -> proxy . c_str		5054117	0					
ANR	5054208	PtrMemberAccess	req -> proxy		5054117	0					
ANR	5054209	Identifier	req		5054117	0					
ANR	5054210	Identifier	proxy		5054117	1					
ANR	5054211	Identifier	c_str		5054117	1					
ANR	5054212	ArgumentList			5054117	1					
ANR	5054213	ExpressionStatement	cp -> execute ( service )		5054117	3					
ANR	5054214	CallExpression	cp -> execute ( service )		5054117	0					
ANR	5054215	Callee	cp -> execute		5054117	0					
ANR	5054216	PtrMemberAccess	cp -> execute		5054117	0					
ANR	5054217	Identifier	cp		5054117	0					
ANR	5054218	Identifier	execute		5054117	1					
ANR	5054219	ArgumentList	service		5054117	1					
ANR	5054220	Argument	service		5054117	0					
ANR	5054221	Identifier	service		5054117	0					
ANR	5054222	Statement	delete		5054117	4					
ANR	5054223	ExpressionStatement	cp		5054117	5					
ANR	5054224	Identifier	cp		5054117	0					
ANR	5054225	CatchList			5054117	1					
ANR	5054226	CatchStatement	catch ( std :: exception & ex )		5054117	0					
ANR	5054227	Identifier	ex		5054117	0					
ANR	5054228	CompoundStatement		20:2:456:492	5054117	1					
ANR	5054229	Statement	delete	1605:2:43986:43991	5054117	0	True				
ANR	5054230	ExpressionStatement	cp	1605:9:43993:43995	5054117	1	True				
ANR	5054231	Identifier	cp		5054117	0					
ANR	5054232	IdentifierDeclStatement	char * msg = escape_spaces ( ex . what ( ) ) ;	1606:2:43999:44035	5054117	2	True				
ANR	5054233	IdentifierDecl	* msg = escape_spaces ( ex . what ( ) )		5054117	0					
ANR	5054234	IdentifierDeclType	char *		5054117	0					
ANR	5054235	Identifier	msg		5054117	1					
ANR	5054236	AssignmentExpression	* msg = escape_spaces ( ex . what ( ) )		5054117	2		=			
ANR	5054237	Identifier	msg		5054117	0					
ANR	5054238	CallExpression	escape_spaces ( ex . what ( ) )		5054117	1					
ANR	5054239	Callee	escape_spaces		5054117	0					
ANR	5054240	Identifier	escape_spaces		5054117	0					
ANR	5054241	ArgumentList	ex . what ( )		5054117	1					
ANR	5054242	Argument	ex . what ( )		5054117	0					
ANR	5054243	CallExpression	ex . what ( )		5054117	0					
ANR	5054244	Callee	ex . what		5054117	0					
ANR	5054245	MemberAccess	ex . what		5054117	0					
ANR	5054246	Identifier	ex		5054117	0					
ANR	5054247	Identifier	what		5054117	1					
ANR	5054248	ArgumentList			5054117	1					
ANR	5054249	ExpressionStatement	"result_line = ( string ) reqid + "" CREAM_Job_List\\\\ Error:\\\\ "" + msg"	1607:2:44039:44104	5054117	3	True				
ANR	5054250	AssignmentExpression	"result_line = ( string ) reqid + "" CREAM_Job_List\\\\ Error:\\\\ "" + msg"		5054117	0		=			
ANR	5054251	Identifier	result_line		5054117	0					
ANR	5054252	AdditiveExpression	"( string ) reqid + "" CREAM_Job_List\\\\ Error:\\\\ "" + msg"		5054117	1		+			
ANR	5054253	CastExpression	( string ) reqid		5054117	0					
ANR	5054254	CastTarget	string		5054117	0					
ANR	5054255	Identifier	reqid		5054117	1					
ANR	5054256	AdditiveExpression	""" CREAM_Job_List\\\\ Error:\\\\ "" + msg"		5054117	1		+			
ANR	5054257	PrimaryExpression	""" CREAM_Job_List\\\\ Error:\\\\ """		5054117	0					
ANR	5054258	Identifier	msg		5054117	1					
ANR	5054259	ExpressionStatement	enqueue_result ( result_line )	1608:2:44108:44135	5054117	4	True				
ANR	5054260	CallExpression	enqueue_result ( result_line )		5054117	0					
ANR	5054261	Callee	enqueue_result		5054117	0					
ANR	5054262	Identifier	enqueue_result		5054117	0					
ANR	5054263	ArgumentList	result_line		5054117	1					
ANR	5054264	Argument	result_line		5054117	0					
ANR	5054265	Identifier	result_line		5054117	0					
ANR	5054266	ExpressionStatement	free ( msg )	1609:2:44139:44148	5054117	5	True				
ANR	5054267	CallExpression	free ( msg )		5054117	0					
ANR	5054268	Callee	free		5054117	0					
ANR	5054269	Identifier	free		5054117	0					
ANR	5054270	ArgumentList	msg		5054117	1					
ANR	5054271	Argument	msg		5054117	0					
ANR	5054272	Identifier	msg		5054117	0					
ANR	5054273	ReturnStatement	return 1 ;	1611:2:44157:44165	5054117	6	True				
ANR	5054274	PrimaryExpression	1		5054117	0					
ANR	5054275	ExpressionStatement	"result_line = ( string ) reqid + "" NULL"""	1614:1:44173:44210	5054117	7	True				
ANR	5054276	AssignmentExpression	"result_line = ( string ) reqid + "" NULL"""		5054117	0		=			
ANR	5054277	Identifier	result_line		5054117	0					
ANR	5054278	AdditiveExpression	"( string ) reqid + "" NULL"""		5054117	1		+			
ANR	5054279	CastExpression	( string ) reqid		5054117	0					
ANR	5054280	CastTarget	string		5054117	0					
ANR	5054281	Identifier	reqid		5054117	1					
ANR	5054282	PrimaryExpression	""" NULL"""		5054117	1					
ANR	5054283	IdentifierDeclStatement	int cnt = 0 ;	1616:1:44215:44226	5054117	8	True				
ANR	5054284	IdentifierDecl	cnt = 0		5054117	0					
ANR	5054285	IdentifierDeclType	int		5054117	0					
ANR	5054286	Identifier	cnt		5054117	1					
ANR	5054287	AssignmentExpression	cnt = 0		5054117	2		=			
ANR	5054288	Identifier	cnt		5054117	0					
ANR	5054289	PrimaryExpression	0		5054117	1					
ANR	5054290	ForStatement	for ( vector < JobIdWrapper > :: iterator i = jv . begin ( ) ; i != jv . end ( ) ; i ++ )		5054117	9					
ANR	5054291	ForInit	vector < JobIdWrapper > :: iterator i = jv . begin ( ) ;	1617:6:44234:44279	5054117	0	True				
ANR	5054292	IdentifierDeclStatement	vector < JobIdWrapper > :: iterator i = jv . begin ( ) ;		5054117	0					
ANR	5054293	IdentifierDecl	i = jv . begin ( )		5054117	0					
ANR	5054294	IdentifierDeclType	vector < JobIdWrapper > :: iterator		5054117	0					
ANR	5054295	Identifier	i		5054117	1					
ANR	5054296	AssignmentExpression	i = jv . begin ( )		5054117	2		=			
ANR	5054297	Identifier	i		5054117	0					
ANR	5054298	CallExpression	jv . begin ( )		5054117	1					
ANR	5054299	Callee	jv . begin		5054117	0					
ANR	5054300	MemberAccess	jv . begin		5054117	0					
ANR	5054301	Identifier	jv		5054117	0					
ANR	5054302	Identifier	begin		5054117	1					
ANR	5054303	ArgumentList			5054117	1					
ANR	5054304	Condition	i != jv . end ( )	1618:6:44287:44299	5054117	1	True				
ANR	5054305	EqualityExpression	i != jv . end ( )		5054117	0		!=			
ANR	5054306	Identifier	i		5054117	0					
ANR	5054307	CallExpression	jv . end ( )		5054117	1					
ANR	5054308	Callee	jv . end		5054117	0					
ANR	5054309	MemberAccess	jv . end		5054117	0					
ANR	5054310	Identifier	jv		5054117	0					
ANR	5054311	Identifier	end		5054117	1					
ANR	5054312	ArgumentList			5054117	1					
ANR	5054313	PostIncDecOperationExpression	i ++	1619:6:44308:44310	5054117	2	True				
ANR	5054314	Identifier	i		5054117	0					
ANR	5054315	IncDec	++		5054117	1					
ANR	5054316	CompoundStatement		34:1:771:771	5054117	3					
ANR	5054317	ExpressionStatement	temp += sp + i -> getCreamJobID ( )	1621:2:44318:44349	5054117	0	True				
ANR	5054318	AssignmentExpression	temp += sp + i -> getCreamJobID ( )		5054117	0		+=			
ANR	5054319	Identifier	temp		5054117	0					
ANR	5054320	AdditiveExpression	sp + i -> getCreamJobID ( )		5054117	1		+			
ANR	5054321	Identifier	sp		5054117	0					
ANR	5054322	CallExpression	i -> getCreamJobID ( )		5054117	1					
ANR	5054323	Callee	i -> getCreamJobID		5054117	0					
ANR	5054324	PtrMemberAccess	i -> getCreamJobID		5054117	0					
ANR	5054325	Identifier	i		5054117	0					
ANR	5054326	Identifier	getCreamJobID		5054117	1					
ANR	5054327	ArgumentList			5054117	1					
ANR	5054328	ExpressionStatement	cnt ++	1622:2:44353:44358	5054117	1	True				
ANR	5054329	PostIncDecOperationExpression	cnt ++		5054117	0					
ANR	5054330	Identifier	cnt		5054117	0					
ANR	5054331	IncDec	++		5054117	1					
ANR	5054332	IdentifierDeclStatement	char buf [ 10000 ] ;	1625:1:44366:44381	5054117	10	True				
ANR	5054333	IdentifierDecl	buf [ 10000 ]		5054117	0					
ANR	5054334	IdentifierDeclType	char [ 10000 ]		5054117	0					
ANR	5054335	Identifier	buf		5054117	1					
ANR	5054336	PrimaryExpression	10000		5054117	2					
ANR	5054337	ExpressionStatement	"sprintf ( buf , ""%d"" , cnt )"	1627:1:44386:44409	5054117	11	True				
ANR	5054338	CallExpression	"sprintf ( buf , ""%d"" , cnt )"		5054117	0					
ANR	5054339	Callee	sprintf		5054117	0					
ANR	5054340	Identifier	sprintf		5054117	0					
ANR	5054341	ArgumentList	buf		5054117	1					
ANR	5054342	Argument	buf		5054117	0					
ANR	5054343	Identifier	buf		5054117	0					
ANR	5054344	Argument	"""%d"""		5054117	1					
ANR	5054345	PrimaryExpression	"""%d"""		5054117	0					
ANR	5054346	Argument	cnt		5054117	2					
ANR	5054347	Identifier	cnt		5054117	0					
ANR	5054348	ExpressionStatement	result_line += sp + string ( buf ) + temp	1628:1:44414:44452	5054117	12	True				
ANR	5054349	AssignmentExpression	result_line += sp + string ( buf ) + temp		5054117	0		+=			
ANR	5054350	Identifier	result_line		5054117	0					
ANR	5054351	AdditiveExpression	sp + string ( buf ) + temp		5054117	1		+			
ANR	5054352	Identifier	sp		5054117	0					
ANR	5054353	AdditiveExpression	string ( buf ) + temp		5054117	1		+			
ANR	5054354	CallExpression	string ( buf )		5054117	0					
ANR	5054355	Callee	string		5054117	0					
ANR	5054356	Identifier	string		5054117	0					
ANR	5054357	ArgumentList	buf		5054117	1					
ANR	5054358	Argument	buf		5054117	0					
ANR	5054359	Identifier	buf		5054117	0					
ANR	5054360	Identifier	temp		5054117	1					
ANR	5054361	ExpressionStatement	enqueue_result ( result_line )	1630:1:44456:44483	5054117	13	True				
ANR	5054362	CallExpression	enqueue_result ( result_line )		5054117	0					
ANR	5054363	Callee	enqueue_result		5054117	0					
ANR	5054364	Identifier	enqueue_result		5054117	0					
ANR	5054365	ArgumentList	result_line		5054117	1					
ANR	5054366	Argument	result_line		5054117	0					
ANR	5054367	Identifier	result_line		5054117	0					
ANR	5054368	ReturnStatement	return 0 ;	1632:1:44489:44497	5054117	14	True				
ANR	5054369	PrimaryExpression	0		5054117	0					
ANR	5054370	ReturnType	int		5054117	1					
ANR	5054371	Identifier	thread_cream_job_list		5054117	2					
ANR	5054372	ParameterList	Request * req		5054117	3					
ANR	5054373	Parameter	Request * req	1586:27:43527:43538	5054117	0	True				
ANR	5054374	ParameterType	Request *		5054117	0					
ANR	5054375	Identifier	req		5054117	1					
ANR	5054376	CFGEntryNode	ENTRY		5054117		True				
ANR	5054377	CFGExitNode	EXIT		5054117		True				
ANR	5054378	CFGErrorNode	ERROR		5054117		True				
ANR	5054379	Symbol	temp		5054117						
ANR	5054380	Symbol	& reqid		5054117						
ANR	5054381	Symbol	NULL		5054117						
ANR	5054382	Symbol	jv . begin		5054117						
ANR	5054383	Symbol	string		5054117						
ANR	5054384	Symbol	* req		5054117						
ANR	5054385	Symbol	cnt		5054117						
ANR	5054386	Symbol	i		5054117						
ANR	5054387	Symbol	& service		5054117						
ANR	5054388	Symbol	jv		5054117						
ANR	5054389	Symbol	cp		5054117						
ANR	5054390	Symbol	reqid		5054117						
ANR	5054391	Symbol	result_line		5054117						
ANR	5054392	Symbol	* * req		5054117						
ANR	5054393	Symbol	buf		5054117						
ANR	5054394	Symbol	* i		5054117						
ANR	5054395	Symbol	service		5054117						
ANR	5054396	Symbol	i -> getCreamJobID		5054117						
ANR	5054397	Symbol	req -> input_line		5054117						
ANR	5054398	Symbol	jv . end		5054117						
ANR	5054399	Symbol	* req -> input_line		5054117						
ANR	5054400	Symbol	sp		5054117						
ANR	5054401	Symbol	req		5054117						
ANR	5054402	Function	handle_cream_ping	1640:0:44699:44899							
ANR	5054403	FunctionDef	handle_cream_ping (char * * input_line)		5054402	0					
ANR	5054404	CompoundStatement		1641:0:44742:44899	5054402	0					
ANR	5054405	IfStatement	if ( count_args ( input_line ) != 3 )		5054402	0					
ANR	5054406	Condition	count_args ( input_line ) != 3	1642:6:44750:44778	5054402	0	True				
ANR	5054407	EqualityExpression	count_args ( input_line ) != 3		5054402	0		!=			
ANR	5054408	CallExpression	count_args ( input_line )		5054402	0					
ANR	5054409	Callee	count_args		5054402	0					
ANR	5054410	Identifier	count_args		5054402	0					
ANR	5054411	ArgumentList	input_line		5054402	1					
ANR	5054412	Argument	input_line		5054402	0					
ANR	5054413	Identifier	input_line		5054402	0					
ANR	5054414	PrimaryExpression	3		5054402	1					
ANR	5054415	CompoundStatement		2:38:39:39	5054402	1					
ANR	5054416	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	1643:2:44786:44807	5054402	0	True				
ANR	5054417	CallExpression	HANDLE_SYNTAX_ERROR ( )		5054402	0					
ANR	5054418	Callee	HANDLE_SYNTAX_ERROR		5054402	0					
ANR	5054419	Identifier	HANDLE_SYNTAX_ERROR		5054402	0					
ANR	5054420	ArgumentList			5054402	1					
ANR	5054421	ExpressionStatement	"enqueue_request ( input_line , thread_cream_ping )"	1646:1:44814:44862	5054402	1	True				
ANR	5054422	CallExpression	"enqueue_request ( input_line , thread_cream_ping )"		5054402	0					
ANR	5054423	Callee	enqueue_request		5054402	0					
ANR	5054424	Identifier	enqueue_request		5054402	0					
ANR	5054425	ArgumentList	input_line		5054402	1					
ANR	5054426	Argument	input_line		5054402	0					
ANR	5054427	Identifier	input_line		5054402	0					
ANR	5054428	Argument	thread_cream_ping		5054402	1					
ANR	5054429	Identifier	thread_cream_ping		5054402	0					
ANR	5054430	ExpressionStatement	"gahp_printf ( ""S\\n"" )"	1648:1:44867:44885	5054402	2	True				
ANR	5054431	CallExpression	"gahp_printf ( ""S\\n"" )"		5054402	0					
ANR	5054432	Callee	gahp_printf		5054402	0					
ANR	5054433	Identifier	gahp_printf		5054402	0					
ANR	5054434	ArgumentList	"""S\\n"""		5054402	1					
ANR	5054435	Argument	"""S\\n"""		5054402	0					
ANR	5054436	PrimaryExpression	"""S\\n"""		5054402	0					
ANR	5054437	ReturnStatement	return 0 ;	1650:1:44889:44897	5054402	3	True				
ANR	5054438	PrimaryExpression	0		5054402	0					
ANR	5054439	ReturnType	int		5054402	1					
ANR	5054440	Identifier	handle_cream_ping		5054402	2					
ANR	5054441	ParameterList	char * * input_line		5054402	3					
ANR	5054442	Parameter	char * * input_line	1640:23:44722:44738	5054402	0	True				
ANR	5054443	ParameterType	char * *		5054402	0					
ANR	5054444	Identifier	input_line		5054402	1					
ANR	5054445	CFGEntryNode	ENTRY		5054402		True				
ANR	5054446	CFGExitNode	EXIT		5054402		True				
ANR	5054447	Symbol	count_args		5054402						
ANR	5054448	Symbol	input_line		5054402						
ANR	5054449	Symbol	thread_cream_ping		5054402						
ANR	5054450	Function	thread_cream_ping	1653:0:44902:45707							
ANR	5054451	FunctionDef	thread_cream_ping (Request * req)		5054450	0					
ANR	5054452	CompoundStatement		1654:0:44940:45707	5054450	0					
ANR	5054453	IdentifierDeclStatement	"char * reqid , * service ;"	1658:1:45065:45086	5054450	0	True				
ANR	5054454	IdentifierDecl	* reqid		5054450	0					
ANR	5054455	IdentifierDeclType	char *		5054450	0					
ANR	5054456	Identifier	reqid		5054450	1					
ANR	5054457	IdentifierDecl	* service		5054450	1					
ANR	5054458	IdentifierDeclType	char *		5054450	0					
ANR	5054459	Identifier	service		5054450	1					
ANR	5054460	IdentifierDeclStatement	AbsCreamProxy * cp = NULL ;	1659:1:45089:45113	5054450	1	True				
ANR	5054461	IdentifierDecl	* cp = NULL		5054450	0					
ANR	5054462	IdentifierDeclType	AbsCreamProxy *		5054450	0					
ANR	5054463	Identifier	cp		5054450	1					
ANR	5054464	AssignmentExpression	* cp = NULL		5054450	2		=			
ANR	5054465	Identifier	NULL		5054450	0					
ANR	5054466	Identifier	NULL		5054450	1					
ANR	5054467	ExpressionStatement	"process_string_arg ( req -> input_line [ 1 ] , & reqid )"	1661:1:45118:45166	5054450	2	True				
ANR	5054468	CallExpression	"process_string_arg ( req -> input_line [ 1 ] , & reqid )"		5054450	0					
ANR	5054469	Callee	process_string_arg		5054450	0					
ANR	5054470	Identifier	process_string_arg		5054450	0					
ANR	5054471	ArgumentList	req -> input_line [ 1 ]		5054450	1					
ANR	5054472	Argument	req -> input_line [ 1 ]		5054450	0					
ANR	5054473	ArrayIndexing	req -> input_line [ 1 ]		5054450	0					
ANR	5054474	PtrMemberAccess	req -> input_line		5054450	0					
ANR	5054475	Identifier	req		5054450	0					
ANR	5054476	Identifier	input_line		5054450	1					
ANR	5054477	PrimaryExpression	1		5054450	1					
ANR	5054478	Argument	& reqid		5054450	1					
ANR	5054479	UnaryOperationExpression	& reqid		5054450	0					
ANR	5054480	UnaryOperator	&		5054450	0					
ANR	5054481	Identifier	reqid		5054450	1					
ANR	5054482	ExpressionStatement	"process_string_arg ( req -> input_line [ 2 ] , & service )"	1662:1:45169:45219	5054450	3	True				
ANR	5054483	CallExpression	"process_string_arg ( req -> input_line [ 2 ] , & service )"		5054450	0					
ANR	5054484	Callee	process_string_arg		5054450	0					
ANR	5054485	Identifier	process_string_arg		5054450	0					
ANR	5054486	ArgumentList	req -> input_line [ 2 ]		5054450	1					
ANR	5054487	Argument	req -> input_line [ 2 ]		5054450	0					
ANR	5054488	ArrayIndexing	req -> input_line [ 2 ]		5054450	0					
ANR	5054489	PtrMemberAccess	req -> input_line		5054450	0					
ANR	5054490	Identifier	req		5054450	0					
ANR	5054491	Identifier	input_line		5054450	1					
ANR	5054492	PrimaryExpression	2		5054450	1					
ANR	5054493	Argument	& service		5054450	1					
ANR	5054494	UnaryOperationExpression	& service		5054450	0					
ANR	5054495	UnaryOperator	&		5054450	0					
ANR	5054496	Identifier	service		5054450	1					
ANR	5054497	IdentifierDeclStatement	ServiceInfoWrapper siw ;	1664:1:45224:45246	5054450	4	True				
ANR	5054498	IdentifierDecl	siw		5054450	0					
ANR	5054499	IdentifierDeclType	ServiceInfoWrapper		5054450	0					
ANR	5054500	Identifier	siw		5054450	1					
ANR	5054501	TryStatement	try		5054450	5					
ANR	5054502	CompoundStatement		12:5:312:312	5054450	0					
ANR	5054503	ExpressionStatement	"cp = CreamProxyFactory :: make_CreamProxyServiceInfo ( & siw , 0 , DEFAULT_TIMEOUT )"		5054450	0					
ANR	5054504	AssignmentExpression	"cp = CreamProxyFactory :: make_CreamProxyServiceInfo ( & siw , 0 , DEFAULT_TIMEOUT )"		5054450	0		=			
ANR	5054505	Identifier	cp		5054450	0					
ANR	5054506	CallExpression	"CreamProxyFactory :: make_CreamProxyServiceInfo ( & siw , 0 , DEFAULT_TIMEOUT )"		5054450	1					
ANR	5054507	Callee	CreamProxyFactory :: make_CreamProxyServiceInfo		5054450	0					
ANR	5054508	Identifier	CreamProxyFactory :: make_CreamProxyServiceInfo		5054450	0					
ANR	5054509	ArgumentList	& siw		5054450	1					
ANR	5054510	Argument	& siw		5054450	0					
ANR	5054511	UnaryOperationExpression	& siw		5054450	0					
ANR	5054512	UnaryOperator	&		5054450	0					
ANR	5054513	Identifier	siw		5054450	1					
ANR	5054514	Argument	0		5054450	1					
ANR	5054515	PrimaryExpression	0		5054450	0					
ANR	5054516	Argument	DEFAULT_TIMEOUT		5054450	2					
ANR	5054517	Identifier	DEFAULT_TIMEOUT		5054450	0					
ANR	5054518	ExpressionStatement	check_for_factory_error ( cp )		5054450	1					
ANR	5054519	CallExpression	check_for_factory_error ( cp )		5054450	0					
ANR	5054520	Callee	check_for_factory_error		5054450	0					
ANR	5054521	Identifier	check_for_factory_error		5054450	0					
ANR	5054522	ArgumentList	cp		5054450	1					
ANR	5054523	Argument	cp		5054450	0					
ANR	5054524	Identifier	cp		5054450	0					
ANR	5054525	ExpressionStatement	cp -> setCredential ( req -> proxy . c_str ( ) )		5054450	2					
ANR	5054526	CallExpression	cp -> setCredential ( req -> proxy . c_str ( ) )		5054450	0					
ANR	5054527	Callee	cp -> setCredential		5054450	0					
ANR	5054528	PtrMemberAccess	cp -> setCredential		5054450	0					
ANR	5054529	Identifier	cp		5054450	0					
ANR	5054530	Identifier	setCredential		5054450	1					
ANR	5054531	ArgumentList	req -> proxy . c_str ( )		5054450	1					
ANR	5054532	Argument	req -> proxy . c_str ( )		5054450	0					
ANR	5054533	CallExpression	req -> proxy . c_str ( )		5054450	0					
ANR	5054534	Callee	req -> proxy . c_str		5054450	0					
ANR	5054535	MemberAccess	req -> proxy . c_str		5054450	0					
ANR	5054536	PtrMemberAccess	req -> proxy		5054450	0					
ANR	5054537	Identifier	req		5054450	0					
ANR	5054538	Identifier	proxy		5054450	1					
ANR	5054539	Identifier	c_str		5054450	1					
ANR	5054540	ArgumentList			5054450	1					
ANR	5054541	ExpressionStatement	cp -> execute ( service )		5054450	3					
ANR	5054542	CallExpression	cp -> execute ( service )		5054450	0					
ANR	5054543	Callee	cp -> execute		5054450	0					
ANR	5054544	PtrMemberAccess	cp -> execute		5054450	0					
ANR	5054545	Identifier	cp		5054450	0					
ANR	5054546	Identifier	execute		5054450	1					
ANR	5054547	ArgumentList	service		5054450	1					
ANR	5054548	Argument	service		5054450	0					
ANR	5054549	Identifier	service		5054450	0					
ANR	5054550	Statement	delete		5054450	4					
ANR	5054551	ExpressionStatement	cp		5054450	5					
ANR	5054552	Identifier	cp		5054450	0					
ANR	5054553	CatchList			5054450	1					
ANR	5054554	CatchStatement	catch ( std :: exception & ex )		5054450	0					
ANR	5054555	Identifier	ex		5054450	0					
ANR	5054556	CompoundStatement		22:2:566:602	5054450	1					
ANR	5054557	Statement	delete	1674:2:45494:45499	5054450	0	True				
ANR	5054558	ExpressionStatement	cp	1674:9:45501:45503	5054450	1	True				
ANR	5054559	Identifier	cp		5054450	0					
ANR	5054560	IdentifierDeclStatement	char * msg = escape_spaces ( ex . what ( ) ) ;	1675:2:45507:45543	5054450	2	True				
ANR	5054561	IdentifierDecl	* msg = escape_spaces ( ex . what ( ) )		5054450	0					
ANR	5054562	IdentifierDeclType	char *		5054450	0					
ANR	5054563	Identifier	msg		5054450	1					
ANR	5054564	AssignmentExpression	* msg = escape_spaces ( ex . what ( ) )		5054450	2		=			
ANR	5054565	Identifier	msg		5054450	0					
ANR	5054566	CallExpression	escape_spaces ( ex . what ( ) )		5054450	1					
ANR	5054567	Callee	escape_spaces		5054450	0					
ANR	5054568	Identifier	escape_spaces		5054450	0					
ANR	5054569	ArgumentList	ex . what ( )		5054450	1					
ANR	5054570	Argument	ex . what ( )		5054450	0					
ANR	5054571	CallExpression	ex . what ( )		5054450	0					
ANR	5054572	Callee	ex . what		5054450	0					
ANR	5054573	MemberAccess	ex . what		5054450	0					
ANR	5054574	Identifier	ex		5054450	0					
ANR	5054575	Identifier	what		5054450	1					
ANR	5054576	ArgumentList			5054450	1					
ANR	5054577	ExpressionStatement	"enqueue_result ( ( string ) reqid + "" "" + msg )"	1676:2:45547:45588	5054450	3	True				
ANR	5054578	CallExpression	"enqueue_result ( ( string ) reqid + "" "" + msg )"		5054450	0					
ANR	5054579	Callee	enqueue_result		5054450	0					
ANR	5054580	Identifier	enqueue_result		5054450	0					
ANR	5054581	ArgumentList	"( string ) reqid + "" "" + msg"		5054450	1					
ANR	5054582	Argument	"( string ) reqid + "" "" + msg"		5054450	0					
ANR	5054583	AdditiveExpression	"( string ) reqid + "" "" + msg"		5054450	0		+			
ANR	5054584	CastExpression	( string ) reqid		5054450	0					
ANR	5054585	CastTarget	string		5054450	0					
ANR	5054586	Identifier	reqid		5054450	1					
ANR	5054587	AdditiveExpression	""" "" + msg"		5054450	1		+			
ANR	5054588	PrimaryExpression	""" """		5054450	0					
ANR	5054589	Identifier	msg		5054450	1					
ANR	5054590	ExpressionStatement	free ( msg )	1677:2:45592:45601	5054450	4	True				
ANR	5054591	CallExpression	free ( msg )		5054450	0					
ANR	5054592	Callee	free		5054450	0					
ANR	5054593	Identifier	free		5054450	0					
ANR	5054594	ArgumentList	msg		5054450	1					
ANR	5054595	Argument	msg		5054450	0					
ANR	5054596	Identifier	msg		5054450	0					
ANR	5054597	ReturnStatement	return 1 ;	1679:2:45608:45616	5054450	5	True				
ANR	5054598	PrimaryExpression	1		5054450	0					
ANR	5054599	ExpressionStatement	"enqueue_result ( ( string ) reqid + "" NULL true"" )"	1682:1:45624:45668	5054450	6	True				
ANR	5054600	CallExpression	"enqueue_result ( ( string ) reqid + "" NULL true"" )"		5054450	0					
ANR	5054601	Callee	enqueue_result		5054450	0					
ANR	5054602	Identifier	enqueue_result		5054450	0					
ANR	5054603	ArgumentList	"( string ) reqid + "" NULL true"""		5054450	1					
ANR	5054604	Argument	"( string ) reqid + "" NULL true"""		5054450	0					
ANR	5054605	AdditiveExpression	"( string ) reqid + "" NULL true"""		5054450	0		+			
ANR	5054606	CastExpression	( string ) reqid		5054450	0					
ANR	5054607	CastTarget	string		5054450	0					
ANR	5054608	Identifier	reqid		5054450	1					
ANR	5054609	PrimaryExpression	""" NULL true"""		5054450	1					
ANR	5054610	ReturnStatement	return 0 ;	1684:1:45697:45705	5054450	7	True				
ANR	5054611	PrimaryExpression	0		5054450	0					
ANR	5054612	ReturnType	int		5054450	1					
ANR	5054613	Identifier	thread_cream_ping		5054450	2					
ANR	5054614	ParameterList	Request * req		5054450	3					
ANR	5054615	Parameter	Request * req	1653:23:44925:44936	5054450	0	True				
ANR	5054616	ParameterType	Request *		5054450	0					
ANR	5054617	Identifier	req		5054450	1					
ANR	5054618	CFGEntryNode	ENTRY		5054450		True				
ANR	5054619	CFGExitNode	EXIT		5054450		True				
ANR	5054620	CFGErrorNode	ERROR		5054450		True				
ANR	5054621	Symbol	siw		5054450						
ANR	5054622	Symbol	& reqid		5054450						
ANR	5054623	Symbol	* * req		5054450						
ANR	5054624	Symbol	NULL		5054450						
ANR	5054625	Symbol	service		5054450						
ANR	5054626	Symbol	* req		5054450						
ANR	5054627	Symbol	req -> input_line		5054450						
ANR	5054628	Symbol	& service		5054450						
ANR	5054629	Symbol	* req -> input_line		5054450						
ANR	5054630	Symbol	cp		5054450						
ANR	5054631	Symbol	req		5054450						
ANR	5054632	Symbol	reqid		5054450						
ANR	5054633	Function	handle_cream_does_accept_job_submissions	1692:0:45958:46203							
ANR	5054634	FunctionDef	handle_cream_does_accept_job_submissions (char * * input_line)		5054633	0					
ANR	5054635	CompoundStatement		1693:0:46024:46203	5054633	0					
ANR	5054636	IfStatement	if ( count_args ( input_line ) != 3 )		5054633	0					
ANR	5054637	Condition	count_args ( input_line ) != 3	1694:6:46032:46060	5054633	0	True				
ANR	5054638	EqualityExpression	count_args ( input_line ) != 3		5054633	0		!=			
ANR	5054639	CallExpression	count_args ( input_line )		5054633	0					
ANR	5054640	Callee	count_args		5054633	0					
ANR	5054641	Identifier	count_args		5054633	0					
ANR	5054642	ArgumentList	input_line		5054633	1					
ANR	5054643	Argument	input_line		5054633	0					
ANR	5054644	Identifier	input_line		5054633	0					
ANR	5054645	PrimaryExpression	3		5054633	1					
ANR	5054646	CompoundStatement		2:38:39:39	5054633	1					
ANR	5054647	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	1695:2:46068:46089	5054633	0	True				
ANR	5054648	CallExpression	HANDLE_SYNTAX_ERROR ( )		5054633	0					
ANR	5054649	Callee	HANDLE_SYNTAX_ERROR		5054633	0					
ANR	5054650	Identifier	HANDLE_SYNTAX_ERROR		5054633	0					
ANR	5054651	ArgumentList			5054633	1					
ANR	5054652	ExpressionStatement	"enqueue_request ( input_line , thread_cream_does_accept_job_submissions )"	1698:1:46096:46167	5054633	1	True				
ANR	5054653	CallExpression	"enqueue_request ( input_line , thread_cream_does_accept_job_submissions )"		5054633	0					
ANR	5054654	Callee	enqueue_request		5054633	0					
ANR	5054655	Identifier	enqueue_request		5054633	0					
ANR	5054656	ArgumentList	input_line		5054633	1					
ANR	5054657	Argument	input_line		5054633	0					
ANR	5054658	Identifier	input_line		5054633	0					
ANR	5054659	Argument	thread_cream_does_accept_job_submissions		5054633	1					
ANR	5054660	Identifier	thread_cream_does_accept_job_submissions		5054633	0					
ANR	5054661	ExpressionStatement	"gahp_printf ( ""S\\n"" )"	1700:1:46171:46189	5054633	2	True				
ANR	5054662	CallExpression	"gahp_printf ( ""S\\n"" )"		5054633	0					
ANR	5054663	Callee	gahp_printf		5054633	0					
ANR	5054664	Identifier	gahp_printf		5054633	0					
ANR	5054665	ArgumentList	"""S\\n"""		5054633	1					
ANR	5054666	Argument	"""S\\n"""		5054633	0					
ANR	5054667	PrimaryExpression	"""S\\n"""		5054633	0					
ANR	5054668	ReturnStatement	return 0 ;	1702:1:46193:46201	5054633	3	True				
ANR	5054669	PrimaryExpression	0		5054633	0					
ANR	5054670	ReturnType	int		5054633	1					
ANR	5054671	Identifier	handle_cream_does_accept_job_submissions		5054633	2					
ANR	5054672	ParameterList	char * * input_line		5054633	3					
ANR	5054673	Parameter	char * * input_line	1692:46:46004:46020	5054633	0	True				
ANR	5054674	ParameterType	char * *		5054633	0					
ANR	5054675	Identifier	input_line		5054633	1					
ANR	5054676	CFGEntryNode	ENTRY		5054633		True				
ANR	5054677	CFGExitNode	EXIT		5054633		True				
ANR	5054678	Symbol	thread_cream_does_accept_job_submissions		5054633						
ANR	5054679	Symbol	count_args		5054633						
ANR	5054680	Symbol	input_line		5054633						
ANR	5054681	Function	thread_cream_does_accept_job_submissions	1705:0:46206:46988							
ANR	5054682	FunctionDef	thread_cream_does_accept_job_submissions (Request * req)		5054681	0					
ANR	5054683	CompoundStatement		1706:0:46267:46988	5054681	0					
ANR	5054684	IdentifierDeclStatement	"char * reqid , * service ;"	1707:1:46270:46291	5054681	0	True				
ANR	5054685	IdentifierDecl	* reqid		5054681	0					
ANR	5054686	IdentifierDeclType	char *		5054681	0					
ANR	5054687	Identifier	reqid		5054681	1					
ANR	5054688	IdentifierDecl	* service		5054681	1					
ANR	5054689	IdentifierDeclType	char *		5054681	0					
ANR	5054690	Identifier	service		5054681	1					
ANR	5054691	IdentifierDeclStatement	AbsCreamProxy * cp = NULL ;	1708:1:46294:46318	5054681	1	True				
ANR	5054692	IdentifierDecl	* cp = NULL		5054681	0					
ANR	5054693	IdentifierDeclType	AbsCreamProxy *		5054681	0					
ANR	5054694	Identifier	cp		5054681	1					
ANR	5054695	AssignmentExpression	* cp = NULL		5054681	2		=			
ANR	5054696	Identifier	NULL		5054681	0					
ANR	5054697	Identifier	NULL		5054681	1					
ANR	5054698	ExpressionStatement	"process_string_arg ( req -> input_line [ 1 ] , & reqid )"	1710:1:46323:46371	5054681	2	True				
ANR	5054699	CallExpression	"process_string_arg ( req -> input_line [ 1 ] , & reqid )"		5054681	0					
ANR	5054700	Callee	process_string_arg		5054681	0					
ANR	5054701	Identifier	process_string_arg		5054681	0					
ANR	5054702	ArgumentList	req -> input_line [ 1 ]		5054681	1					
ANR	5054703	Argument	req -> input_line [ 1 ]		5054681	0					
ANR	5054704	ArrayIndexing	req -> input_line [ 1 ]		5054681	0					
ANR	5054705	PtrMemberAccess	req -> input_line		5054681	0					
ANR	5054706	Identifier	req		5054681	0					
ANR	5054707	Identifier	input_line		5054681	1					
ANR	5054708	PrimaryExpression	1		5054681	1					
ANR	5054709	Argument	& reqid		5054681	1					
ANR	5054710	UnaryOperationExpression	& reqid		5054681	0					
ANR	5054711	UnaryOperator	&		5054681	0					
ANR	5054712	Identifier	reqid		5054681	1					
ANR	5054713	ExpressionStatement	"process_string_arg ( req -> input_line [ 2 ] , & service )"	1711:1:46374:46424	5054681	3	True				
ANR	5054714	CallExpression	"process_string_arg ( req -> input_line [ 2 ] , & service )"		5054681	0					
ANR	5054715	Callee	process_string_arg		5054681	0					
ANR	5054716	Identifier	process_string_arg		5054681	0					
ANR	5054717	ArgumentList	req -> input_line [ 2 ]		5054681	1					
ANR	5054718	Argument	req -> input_line [ 2 ]		5054681	0					
ANR	5054719	ArrayIndexing	req -> input_line [ 2 ]		5054681	0					
ANR	5054720	PtrMemberAccess	req -> input_line		5054681	0					
ANR	5054721	Identifier	req		5054681	0					
ANR	5054722	Identifier	input_line		5054681	1					
ANR	5054723	PrimaryExpression	2		5054681	1					
ANR	5054724	Argument	& service		5054681	1					
ANR	5054725	UnaryOperationExpression	& service		5054681	0					
ANR	5054726	UnaryOperator	&		5054681	0					
ANR	5054727	Identifier	service		5054681	1					
ANR	5054728	IdentifierDeclStatement	ServiceInfoWrapper siw ;	1713:1:46428:46450	5054681	4	True				
ANR	5054729	IdentifierDecl	siw		5054681	0					
ANR	5054730	IdentifierDeclType	ServiceInfoWrapper		5054681	0					
ANR	5054731	Identifier	siw		5054681	1					
ANR	5054732	TryStatement	try		5054681	5					
ANR	5054733	CompoundStatement		9:5:189:189	5054681	0					
ANR	5054734	ExpressionStatement	"cp = CreamProxyFactory :: make_CreamProxyServiceInfo ( & siw , 0 , DEFAULT_TIMEOUT )"		5054681	0					
ANR	5054735	AssignmentExpression	"cp = CreamProxyFactory :: make_CreamProxyServiceInfo ( & siw , 0 , DEFAULT_TIMEOUT )"		5054681	0		=			
ANR	5054736	Identifier	cp		5054681	0					
ANR	5054737	CallExpression	"CreamProxyFactory :: make_CreamProxyServiceInfo ( & siw , 0 , DEFAULT_TIMEOUT )"		5054681	1					
ANR	5054738	Callee	CreamProxyFactory :: make_CreamProxyServiceInfo		5054681	0					
ANR	5054739	Identifier	CreamProxyFactory :: make_CreamProxyServiceInfo		5054681	0					
ANR	5054740	ArgumentList	& siw		5054681	1					
ANR	5054741	Argument	& siw		5054681	0					
ANR	5054742	UnaryOperationExpression	& siw		5054681	0					
ANR	5054743	UnaryOperator	&		5054681	0					
ANR	5054744	Identifier	siw		5054681	1					
ANR	5054745	Argument	0		5054681	1					
ANR	5054746	PrimaryExpression	0		5054681	0					
ANR	5054747	Argument	DEFAULT_TIMEOUT		5054681	2					
ANR	5054748	Identifier	DEFAULT_TIMEOUT		5054681	0					
ANR	5054749	ExpressionStatement	check_for_factory_error ( cp )		5054681	1					
ANR	5054750	CallExpression	check_for_factory_error ( cp )		5054681	0					
ANR	5054751	Callee	check_for_factory_error		5054681	0					
ANR	5054752	Identifier	check_for_factory_error		5054681	0					
ANR	5054753	ArgumentList	cp		5054681	1					
ANR	5054754	Argument	cp		5054681	0					
ANR	5054755	Identifier	cp		5054681	0					
ANR	5054756	ExpressionStatement	cp -> setCredential ( req -> proxy . c_str ( ) )		5054681	2					
ANR	5054757	CallExpression	cp -> setCredential ( req -> proxy . c_str ( ) )		5054681	0					
ANR	5054758	Callee	cp -> setCredential		5054681	0					
ANR	5054759	PtrMemberAccess	cp -> setCredential		5054681	0					
ANR	5054760	Identifier	cp		5054681	0					
ANR	5054761	Identifier	setCredential		5054681	1					
ANR	5054762	ArgumentList	req -> proxy . c_str ( )		5054681	1					
ANR	5054763	Argument	req -> proxy . c_str ( )		5054681	0					
ANR	5054764	CallExpression	req -> proxy . c_str ( )		5054681	0					
ANR	5054765	Callee	req -> proxy . c_str		5054681	0					
ANR	5054766	MemberAccess	req -> proxy . c_str		5054681	0					
ANR	5054767	PtrMemberAccess	req -> proxy		5054681	0					
ANR	5054768	Identifier	req		5054681	0					
ANR	5054769	Identifier	proxy		5054681	1					
ANR	5054770	Identifier	c_str		5054681	1					
ANR	5054771	ArgumentList			5054681	1					
ANR	5054772	ExpressionStatement	cp -> execute ( service )		5054681	3					
ANR	5054773	CallExpression	cp -> execute ( service )		5054681	0					
ANR	5054774	Callee	cp -> execute		5054681	0					
ANR	5054775	PtrMemberAccess	cp -> execute		5054681	0					
ANR	5054776	Identifier	cp		5054681	0					
ANR	5054777	Identifier	execute		5054681	1					
ANR	5054778	ArgumentList	service		5054681	1					
ANR	5054779	Argument	service		5054681	0					
ANR	5054780	Identifier	service		5054681	0					
ANR	5054781	Statement	delete		5054681	4					
ANR	5054782	ExpressionStatement	cp		5054681	5					
ANR	5054783	Identifier	cp		5054681	0					
ANR	5054784	CatchList			5054681	1					
ANR	5054785	CatchStatement	catch ( std :: exception & ex )		5054681	0					
ANR	5054786	Identifier	ex		5054681	0					
ANR	5054787	CompoundStatement		19:2:443:479	5054681	1					
ANR	5054788	Statement	delete	1723:2:46698:46703	5054681	0	True				
ANR	5054789	ExpressionStatement	cp	1723:9:46705:46707	5054681	1	True				
ANR	5054790	Identifier	cp		5054681	0					
ANR	5054791	IdentifierDeclStatement	char * msg = escape_spaces ( ex . what ( ) ) ;	1724:2:46711:46747	5054681	2	True				
ANR	5054792	IdentifierDecl	* msg = escape_spaces ( ex . what ( ) )		5054681	0					
ANR	5054793	IdentifierDeclType	char *		5054681	0					
ANR	5054794	Identifier	msg		5054681	1					
ANR	5054795	AssignmentExpression	* msg = escape_spaces ( ex . what ( ) )		5054681	2		=			
ANR	5054796	Identifier	msg		5054681	0					
ANR	5054797	CallExpression	escape_spaces ( ex . what ( ) )		5054681	1					
ANR	5054798	Callee	escape_spaces		5054681	0					
ANR	5054799	Identifier	escape_spaces		5054681	0					
ANR	5054800	ArgumentList	ex . what ( )		5054681	1					
ANR	5054801	Argument	ex . what ( )		5054681	0					
ANR	5054802	CallExpression	ex . what ( )		5054681	0					
ANR	5054803	Callee	ex . what		5054681	0					
ANR	5054804	MemberAccess	ex . what		5054681	0					
ANR	5054805	Identifier	ex		5054681	0					
ANR	5054806	Identifier	what		5054681	1					
ANR	5054807	ArgumentList			5054681	1					
ANR	5054808	ExpressionStatement	"enqueue_result ( ( string ) reqid + "" "" + msg )"	1725:2:46751:46792	5054681	3	True				
ANR	5054809	CallExpression	"enqueue_result ( ( string ) reqid + "" "" + msg )"		5054681	0					
ANR	5054810	Callee	enqueue_result		5054681	0					
ANR	5054811	Identifier	enqueue_result		5054681	0					
ANR	5054812	ArgumentList	"( string ) reqid + "" "" + msg"		5054681	1					
ANR	5054813	Argument	"( string ) reqid + "" "" + msg"		5054681	0					
ANR	5054814	AdditiveExpression	"( string ) reqid + "" "" + msg"		5054681	0		+			
ANR	5054815	CastExpression	( string ) reqid		5054681	0					
ANR	5054816	CastTarget	string		5054681	0					
ANR	5054817	Identifier	reqid		5054681	1					
ANR	5054818	AdditiveExpression	""" "" + msg"		5054681	1		+			
ANR	5054819	PrimaryExpression	""" """		5054681	0					
ANR	5054820	Identifier	msg		5054681	1					
ANR	5054821	ExpressionStatement	free ( msg )	1726:2:46796:46805	5054681	4	True				
ANR	5054822	CallExpression	free ( msg )		5054681	0					
ANR	5054823	Callee	free		5054681	0					
ANR	5054824	Identifier	free		5054681	0					
ANR	5054825	ArgumentList	msg		5054681	1					
ANR	5054826	Argument	msg		5054681	0					
ANR	5054827	Identifier	msg		5054681	0					
ANR	5054828	ReturnStatement	return 1 ;	1728:2:46812:46820	5054681	5	True				
ANR	5054829	PrimaryExpression	1		5054681	0					
ANR	5054830	IfStatement	if ( siw . getAcceptJobSubmission ( ) )		5054681	6					
ANR	5054831	Condition	siw . getAcceptJobSubmission ( )	1731:5:46832:46859	5054681	0	True				
ANR	5054832	CallExpression	siw . getAcceptJobSubmission ( )		5054681	0					
ANR	5054833	Callee	siw . getAcceptJobSubmission		5054681	0					
ANR	5054834	MemberAccess	siw . getAcceptJobSubmission		5054681	0					
ANR	5054835	Identifier	siw		5054681	0					
ANR	5054836	Identifier	getAcceptJobSubmission		5054681	1					
ANR	5054837	ArgumentList			5054681	1					
ANR	5054838	CompoundStatement		26:35:594:594	5054681	1					
ANR	5054839	ExpressionStatement	"enqueue_result ( ( string ) reqid + "" NULL true"" )"	1732:2:46866:46910	5054681	0	True				
ANR	5054840	CallExpression	"enqueue_result ( ( string ) reqid + "" NULL true"" )"		5054681	0					
ANR	5054841	Callee	enqueue_result		5054681	0					
ANR	5054842	Identifier	enqueue_result		5054681	0					
ANR	5054843	ArgumentList	"( string ) reqid + "" NULL true"""		5054681	1					
ANR	5054844	Argument	"( string ) reqid + "" NULL true"""		5054681	0					
ANR	5054845	AdditiveExpression	"( string ) reqid + "" NULL true"""		5054681	0		+			
ANR	5054846	CastExpression	( string ) reqid		5054681	0					
ANR	5054847	CastTarget	string		5054681	0					
ANR	5054848	Identifier	reqid		5054681	1					
ANR	5054849	PrimaryExpression	""" NULL true"""		5054681	1					
ANR	5054850	ElseStatement	else		5054681	0					
ANR	5054851	CompoundStatement		29:6:653:653	5054681	0					
ANR	5054852	ExpressionStatement	"enqueue_result ( ( string ) reqid + "" NULL false"" )"	1735:2:46925:46970	5054681	0	True				
ANR	5054853	CallExpression	"enqueue_result ( ( string ) reqid + "" NULL false"" )"		5054681	0					
ANR	5054854	Callee	enqueue_result		5054681	0					
ANR	5054855	Identifier	enqueue_result		5054681	0					
ANR	5054856	ArgumentList	"( string ) reqid + "" NULL false"""		5054681	1					
ANR	5054857	Argument	"( string ) reqid + "" NULL false"""		5054681	0					
ANR	5054858	AdditiveExpression	"( string ) reqid + "" NULL false"""		5054681	0		+			
ANR	5054859	CastExpression	( string ) reqid		5054681	0					
ANR	5054860	CastTarget	string		5054681	0					
ANR	5054861	Identifier	reqid		5054681	1					
ANR	5054862	PrimaryExpression	""" NULL false"""		5054681	1					
ANR	5054863	ReturnStatement	return 0 ;	1738:1:46978:46986	5054681	7	True				
ANR	5054864	PrimaryExpression	0		5054681	0					
ANR	5054865	ReturnType	int		5054681	1					
ANR	5054866	Identifier	thread_cream_does_accept_job_submissions		5054681	2					
ANR	5054867	ParameterList	Request * req		5054681	3					
ANR	5054868	Parameter	Request * req	1705:46:46252:46263	5054681	0	True				
ANR	5054869	ParameterType	Request *		5054681	0					
ANR	5054870	Identifier	req		5054681	1					
ANR	5054871	CFGEntryNode	ENTRY		5054681		True				
ANR	5054872	CFGExitNode	EXIT		5054681		True				
ANR	5054873	CFGErrorNode	ERROR		5054681		True				
ANR	5054874	Symbol	siw		5054681						
ANR	5054875	Symbol	& reqid		5054681						
ANR	5054876	Symbol	NULL		5054681						
ANR	5054877	Symbol	* req		5054681						
ANR	5054878	Symbol	& service		5054681						
ANR	5054879	Symbol	cp		5054681						
ANR	5054880	Symbol	reqid		5054681						
ANR	5054881	Symbol	* * req		5054681						
ANR	5054882	Symbol	siw . getAcceptJobSubmission		5054681						
ANR	5054883	Symbol	service		5054681						
ANR	5054884	Symbol	req -> input_line		5054681						
ANR	5054885	Symbol	* req -> input_line		5054681						
ANR	5054886	Symbol	req		5054681						
ANR	5054887	Function	handle_cream_proxy_renew	1747:0:47254:47628							
ANR	5054888	FunctionDef	handle_cream_proxy_renew (char * * input_line)		5054887	0					
ANR	5054889	CompoundStatement		1748:0:47304:47628	5054887	0					
ANR	5054890	IdentifierDeclStatement	int arg_cnt = count_args ( input_line ) ;	1749:1:47307:47345	5054887	0	True				
ANR	5054891	IdentifierDecl	arg_cnt = count_args ( input_line )		5054887	0					
ANR	5054892	IdentifierDeclType	int		5054887	0					
ANR	5054893	Identifier	arg_cnt		5054887	1					
ANR	5054894	AssignmentExpression	arg_cnt = count_args ( input_line )		5054887	2		=			
ANR	5054895	Identifier	arg_cnt		5054887	0					
ANR	5054896	CallExpression	count_args ( input_line )		5054887	1					
ANR	5054897	Callee	count_args		5054887	0					
ANR	5054898	Identifier	count_args		5054887	0					
ANR	5054899	ArgumentList	input_line		5054887	1					
ANR	5054900	Argument	input_line		5054887	0					
ANR	5054901	Identifier	input_line		5054887	0					
ANR	5054902	IdentifierDeclStatement	int jobnum ;	1750:1:47348:47358	5054887	1	True				
ANR	5054903	IdentifierDecl	jobnum		5054887	0					
ANR	5054904	IdentifierDeclType	int		5054887	0					
ANR	5054905	Identifier	jobnum		5054887	1					
ANR	5054906	IfStatement	"if ( arg_cnt != 4 && ( arg_cnt < 6 || ! process_int_arg ( input_line [ 5 ] , & jobnum ) || jobnum <= 0 || jobnum + 6 != arg_cnt ) )"		5054887	2					
ANR	5054907	Condition	"arg_cnt != 4 && ( arg_cnt < 6 || ! process_int_arg ( input_line [ 5 ] , & jobnum ) || jobnum <= 0 || jobnum + 6 != arg_cnt )"	1752:6:47367:47501	5054887	0	True				
ANR	5054908	AndExpression	"arg_cnt != 4 && ( arg_cnt < 6 || ! process_int_arg ( input_line [ 5 ] , & jobnum ) || jobnum <= 0 || jobnum + 6 != arg_cnt )"		5054887	0		&&			
ANR	5054909	EqualityExpression	arg_cnt != 4		5054887	0		!=			
ANR	5054910	Identifier	arg_cnt		5054887	0					
ANR	5054911	PrimaryExpression	4		5054887	1					
ANR	5054912	OrExpression	"arg_cnt < 6 || ! process_int_arg ( input_line [ 5 ] , & jobnum ) || jobnum <= 0 || jobnum + 6 != arg_cnt"		5054887	1		||			
ANR	5054913	RelationalExpression	arg_cnt < 6		5054887	0		<			
ANR	5054914	Identifier	arg_cnt		5054887	0					
ANR	5054915	PrimaryExpression	6		5054887	1					
ANR	5054916	OrExpression	"! process_int_arg ( input_line [ 5 ] , & jobnum ) || jobnum <= 0 || jobnum + 6 != arg_cnt"		5054887	1		||			
ANR	5054917	UnaryOperationExpression	"! process_int_arg ( input_line [ 5 ] , & jobnum )"		5054887	0					
ANR	5054918	UnaryOperator	!		5054887	0					
ANR	5054919	CallExpression	"process_int_arg ( input_line [ 5 ] , & jobnum )"		5054887	1					
ANR	5054920	Callee	process_int_arg		5054887	0					
ANR	5054921	Identifier	process_int_arg		5054887	0					
ANR	5054922	ArgumentList	input_line [ 5 ]		5054887	1					
ANR	5054923	Argument	input_line [ 5 ]		5054887	0					
ANR	5054924	ArrayIndexing	input_line [ 5 ]		5054887	0					
ANR	5054925	Identifier	input_line		5054887	0					
ANR	5054926	PrimaryExpression	5		5054887	1					
ANR	5054927	Argument	& jobnum		5054887	1					
ANR	5054928	UnaryOperationExpression	& jobnum		5054887	0					
ANR	5054929	UnaryOperator	&		5054887	0					
ANR	5054930	Identifier	jobnum		5054887	1					
ANR	5054931	OrExpression	jobnum <= 0 || jobnum + 6 != arg_cnt		5054887	1		||			
ANR	5054932	RelationalExpression	jobnum <= 0		5054887	0		<=			
ANR	5054933	Identifier	jobnum		5054887	0					
ANR	5054934	PrimaryExpression	0		5054887	1					
ANR	5054935	EqualityExpression	jobnum + 6 != arg_cnt		5054887	1		!=			
ANR	5054936	AdditiveExpression	jobnum + 6		5054887	0		+			
ANR	5054937	Identifier	jobnum		5054887	0					
ANR	5054938	PrimaryExpression	6		5054887	1					
ANR	5054939	Identifier	arg_cnt		5054887	1					
ANR	5054940	CompoundStatement		7:50:200:200	5054887	1					
ANR	5054941	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	1755:2:47509:47530	5054887	0	True				
ANR	5054942	CallExpression	HANDLE_SYNTAX_ERROR ( )		5054887	0					
ANR	5054943	Callee	HANDLE_SYNTAX_ERROR		5054887	0					
ANR	5054944	Identifier	HANDLE_SYNTAX_ERROR		5054887	0					
ANR	5054945	ArgumentList			5054887	1					
ANR	5054946	ExpressionStatement	"enqueue_request ( input_line , thread_cream_proxy_renew )"	1758:1:47537:47592	5054887	3	True				
ANR	5054947	CallExpression	"enqueue_request ( input_line , thread_cream_proxy_renew )"		5054887	0					
ANR	5054948	Callee	enqueue_request		5054887	0					
ANR	5054949	Identifier	enqueue_request		5054887	0					
ANR	5054950	ArgumentList	input_line		5054887	1					
ANR	5054951	Argument	input_line		5054887	0					
ANR	5054952	Identifier	input_line		5054887	0					
ANR	5054953	Argument	thread_cream_proxy_renew		5054887	1					
ANR	5054954	Identifier	thread_cream_proxy_renew		5054887	0					
ANR	5054955	ExpressionStatement	"gahp_printf ( ""S\\n"" )"	1760:1:47596:47614	5054887	4	True				
ANR	5054956	CallExpression	"gahp_printf ( ""S\\n"" )"		5054887	0					
ANR	5054957	Callee	gahp_printf		5054887	0					
ANR	5054958	Identifier	gahp_printf		5054887	0					
ANR	5054959	ArgumentList	"""S\\n"""		5054887	1					
ANR	5054960	Argument	"""S\\n"""		5054887	0					
ANR	5054961	PrimaryExpression	"""S\\n"""		5054887	0					
ANR	5054962	ReturnStatement	return 0 ;	1762:1:47618:47626	5054887	5	True				
ANR	5054963	PrimaryExpression	0		5054887	0					
ANR	5054964	ReturnType	int		5054887	1					
ANR	5054965	Identifier	handle_cream_proxy_renew		5054887	2					
ANR	5054966	ParameterList	char * * input_line		5054887	3					
ANR	5054967	Parameter	char * * input_line	1747:30:47284:47300	5054887	0	True				
ANR	5054968	ParameterType	char * *		5054887	0					
ANR	5054969	Identifier	input_line		5054887	1					
ANR	5054970	CFGEntryNode	ENTRY		5054887		True				
ANR	5054971	CFGExitNode	EXIT		5054887		True				
ANR	5054972	Symbol	thread_cream_proxy_renew		5054887						
ANR	5054973	Symbol	* input_line		5054887						
ANR	5054974	Symbol	& jobnum		5054887						
ANR	5054975	Symbol	jobnum		5054887						
ANR	5054976	Symbol	count_args		5054887						
ANR	5054977	Symbol	input_line		5054887						
ANR	5054978	Symbol	process_int_arg		5054887						
ANR	5054979	Symbol	arg_cnt		5054887						
ANR	5054980	Function	thread_cream_proxy_renew	1765:0:47631:48934							
ANR	5054981	FunctionDef	thread_cream_proxy_renew (Request * req)		5054980	0					
ANR	5054982	CompoundStatement		1766:0:47676:48934	5054980	0					
ANR	5054983	IdentifierDeclStatement	int arg_cnt = count_args ( req -> input_line ) ;	1773:1:47968:48011	5054980	0	True				
ANR	5054984	IdentifierDecl	arg_cnt = count_args ( req -> input_line )		5054980	0					
ANR	5054985	IdentifierDeclType	int		5054980	0					
ANR	5054986	Identifier	arg_cnt		5054980	1					
ANR	5054987	AssignmentExpression	arg_cnt = count_args ( req -> input_line )		5054980	2		=			
ANR	5054988	Identifier	arg_cnt		5054980	0					
ANR	5054989	CallExpression	count_args ( req -> input_line )		5054980	1					
ANR	5054990	Callee	count_args		5054980	0					
ANR	5054991	Identifier	count_args		5054980	0					
ANR	5054992	ArgumentList	req -> input_line		5054980	1					
ANR	5054993	Argument	req -> input_line		5054980	0					
ANR	5054994	PtrMemberAccess	req -> input_line		5054980	0					
ANR	5054995	Identifier	req		5054980	0					
ANR	5054996	Identifier	input_line		5054980	1					
ANR	5054997	IdentifierDeclStatement	"char * reqid , * delgservice , * delgid ;"	1774:1:48014:48048	5054980	1	True				
ANR	5054998	IdentifierDecl	* reqid		5054980	0					
ANR	5054999	IdentifierDeclType	char *		5054980	0					
ANR	5055000	Identifier	reqid		5054980	1					
ANR	5055001	IdentifierDecl	* delgservice		5054980	1					
ANR	5055002	IdentifierDeclType	char *		5054980	0					
ANR	5055003	Identifier	delgservice		5054980	1					
ANR	5055004	IdentifierDecl	* delgid		5054980	2					
ANR	5055005	IdentifierDeclType	char *		5054980	0					
ANR	5055006	Identifier	delgid		5054980	1					
ANR	5055007	IdentifierDeclStatement	string result_line ;	1775:1:48051:48069	5054980	2	True				
ANR	5055008	IdentifierDecl	result_line		5054980	0					
ANR	5055009	IdentifierDeclType	string		5054980	0					
ANR	5055010	Identifier	result_line		5054980	1					
ANR	5055011	IdentifierDeclStatement	AbsCreamProxy * cp = NULL ;	1776:1:48072:48096	5054980	3	True				
ANR	5055012	IdentifierDecl	* cp = NULL		5054980	0					
ANR	5055013	IdentifierDeclType	AbsCreamProxy *		5054980	0					
ANR	5055014	Identifier	cp		5054980	1					
ANR	5055015	AssignmentExpression	* cp = NULL		5054980	2		=			
ANR	5055016	Identifier	NULL		5054980	0					
ANR	5055017	Identifier	NULL		5054980	1					
ANR	5055018	ExpressionStatement	"process_string_arg ( req -> input_line [ 1 ] , & reqid )"	1778:1:48101:48149	5054980	4	True				
ANR	5055019	CallExpression	"process_string_arg ( req -> input_line [ 1 ] , & reqid )"		5054980	0					
ANR	5055020	Callee	process_string_arg		5054980	0					
ANR	5055021	Identifier	process_string_arg		5054980	0					
ANR	5055022	ArgumentList	req -> input_line [ 1 ]		5054980	1					
ANR	5055023	Argument	req -> input_line [ 1 ]		5054980	0					
ANR	5055024	ArrayIndexing	req -> input_line [ 1 ]		5054980	0					
ANR	5055025	PtrMemberAccess	req -> input_line		5054980	0					
ANR	5055026	Identifier	req		5054980	0					
ANR	5055027	Identifier	input_line		5054980	1					
ANR	5055028	PrimaryExpression	1		5054980	1					
ANR	5055029	Argument	& reqid		5054980	1					
ANR	5055030	UnaryOperationExpression	& reqid		5054980	0					
ANR	5055031	UnaryOperator	&		5054980	0					
ANR	5055032	Identifier	reqid		5054980	1					
ANR	5055033	IfStatement	if ( arg_cnt == 4 )		5054980	5					
ANR	5055034	Condition	arg_cnt == 4	1780:6:48158:48169	5054980	0	True				
ANR	5055035	EqualityExpression	arg_cnt == 4		5054980	0		==			
ANR	5055036	Identifier	arg_cnt		5054980	0					
ANR	5055037	PrimaryExpression	4		5054980	1					
ANR	5055038	CompoundStatement		15:21:496:496	5054980	1					
ANR	5055039	ExpressionStatement	"process_string_arg ( req -> input_line [ 2 ] , & delgservice )"	1781:2:48177:48231	5054980	0	True				
ANR	5055040	CallExpression	"process_string_arg ( req -> input_line [ 2 ] , & delgservice )"		5054980	0					
ANR	5055041	Callee	process_string_arg		5054980	0					
ANR	5055042	Identifier	process_string_arg		5054980	0					
ANR	5055043	ArgumentList	req -> input_line [ 2 ]		5054980	1					
ANR	5055044	Argument	req -> input_line [ 2 ]		5054980	0					
ANR	5055045	ArrayIndexing	req -> input_line [ 2 ]		5054980	0					
ANR	5055046	PtrMemberAccess	req -> input_line		5054980	0					
ANR	5055047	Identifier	req		5054980	0					
ANR	5055048	Identifier	input_line		5054980	1					
ANR	5055049	PrimaryExpression	2		5054980	1					
ANR	5055050	Argument	& delgservice		5054980	1					
ANR	5055051	UnaryOperationExpression	& delgservice		5054980	0					
ANR	5055052	UnaryOperator	&		5054980	0					
ANR	5055053	Identifier	delgservice		5054980	1					
ANR	5055054	ExpressionStatement	"process_string_arg ( req -> input_line [ 3 ] , & delgid )"	1782:2:48235:48284	5054980	1	True				
ANR	5055055	CallExpression	"process_string_arg ( req -> input_line [ 3 ] , & delgid )"		5054980	0					
ANR	5055056	Callee	process_string_arg		5054980	0					
ANR	5055057	Identifier	process_string_arg		5054980	0					
ANR	5055058	ArgumentList	req -> input_line [ 3 ]		5054980	1					
ANR	5055059	Argument	req -> input_line [ 3 ]		5054980	0					
ANR	5055060	ArrayIndexing	req -> input_line [ 3 ]		5054980	0					
ANR	5055061	PtrMemberAccess	req -> input_line		5054980	0					
ANR	5055062	Identifier	req		5054980	0					
ANR	5055063	Identifier	input_line		5054980	1					
ANR	5055064	PrimaryExpression	3		5054980	1					
ANR	5055065	Argument	& delgid		5054980	1					
ANR	5055066	UnaryOperationExpression	& delgid		5054980	0					
ANR	5055067	UnaryOperator	&		5054980	0					
ANR	5055068	Identifier	delgid		5054980	1					
ANR	5055069	ElseStatement	else		5054980	0					
ANR	5055070	CompoundStatement		18:8:617:617	5054980	0					
ANR	5055071	ExpressionStatement	"process_string_arg ( req -> input_line [ 3 ] , & delgservice )"	1784:2:48298:48352	5054980	0	True				
ANR	5055072	CallExpression	"process_string_arg ( req -> input_line [ 3 ] , & delgservice )"		5054980	0					
ANR	5055073	Callee	process_string_arg		5054980	0					
ANR	5055074	Identifier	process_string_arg		5054980	0					
ANR	5055075	ArgumentList	req -> input_line [ 3 ]		5054980	1					
ANR	5055076	Argument	req -> input_line [ 3 ]		5054980	0					
ANR	5055077	ArrayIndexing	req -> input_line [ 3 ]		5054980	0					
ANR	5055078	PtrMemberAccess	req -> input_line		5054980	0					
ANR	5055079	Identifier	req		5054980	0					
ANR	5055080	Identifier	input_line		5054980	1					
ANR	5055081	PrimaryExpression	3		5054980	1					
ANR	5055082	Argument	& delgservice		5054980	1					
ANR	5055083	UnaryOperationExpression	& delgservice		5054980	0					
ANR	5055084	UnaryOperator	&		5054980	0					
ANR	5055085	Identifier	delgservice		5054980	1					
ANR	5055086	ExpressionStatement	"process_string_arg ( req -> input_line [ 4 ] , & delgid )"	1785:2:48356:48405	5054980	1	True				
ANR	5055087	CallExpression	"process_string_arg ( req -> input_line [ 4 ] , & delgid )"		5054980	0					
ANR	5055088	Callee	process_string_arg		5054980	0					
ANR	5055089	Identifier	process_string_arg		5054980	0					
ANR	5055090	ArgumentList	req -> input_line [ 4 ]		5054980	1					
ANR	5055091	Argument	req -> input_line [ 4 ]		5054980	0					
ANR	5055092	ArrayIndexing	req -> input_line [ 4 ]		5054980	0					
ANR	5055093	PtrMemberAccess	req -> input_line		5054980	0					
ANR	5055094	Identifier	req		5054980	0					
ANR	5055095	Identifier	input_line		5054980	1					
ANR	5055096	PrimaryExpression	4		5054980	1					
ANR	5055097	Argument	& delgid		5054980	1					
ANR	5055098	UnaryOperationExpression	& delgid		5054980	0					
ANR	5055099	UnaryOperator	&		5054980	0					
ANR	5055100	Identifier	delgid		5054980	1					
ANR	5055101	TryStatement	try		5054980	6					
ANR	5055102	CompoundStatement		23:5:740:740	5054980	0					
ANR	5055103	ExpressionStatement	"cp = CreamProxyFactory :: make_CreamProxy_ProxyRenew ( delgid , DEFAULT_TIMEOUT )"		5054980	0					
ANR	5055104	AssignmentExpression	"cp = CreamProxyFactory :: make_CreamProxy_ProxyRenew ( delgid , DEFAULT_TIMEOUT )"		5054980	0		=			
ANR	5055105	Identifier	cp		5054980	0					
ANR	5055106	CallExpression	"CreamProxyFactory :: make_CreamProxy_ProxyRenew ( delgid , DEFAULT_TIMEOUT )"		5054980	1					
ANR	5055107	Callee	CreamProxyFactory :: make_CreamProxy_ProxyRenew		5054980	0					
ANR	5055108	Identifier	CreamProxyFactory :: make_CreamProxy_ProxyRenew		5054980	0					
ANR	5055109	ArgumentList	delgid		5054980	1					
ANR	5055110	Argument	delgid		5054980	0					
ANR	5055111	Identifier	delgid		5054980	0					
ANR	5055112	Argument	DEFAULT_TIMEOUT		5054980	1					
ANR	5055113	Identifier	DEFAULT_TIMEOUT		5054980	0					
ANR	5055114	ExpressionStatement	check_for_factory_error ( cp )		5054980	1					
ANR	5055115	CallExpression	check_for_factory_error ( cp )		5054980	0					
ANR	5055116	Callee	check_for_factory_error		5054980	0					
ANR	5055117	Identifier	check_for_factory_error		5054980	0					
ANR	5055118	ArgumentList	cp		5054980	1					
ANR	5055119	Argument	cp		5054980	0					
ANR	5055120	Identifier	cp		5054980	0					
ANR	5055121	ExpressionStatement	cp -> setCredential ( req -> proxy . c_str ( ) )		5054980	2					
ANR	5055122	CallExpression	cp -> setCredential ( req -> proxy . c_str ( ) )		5054980	0					
ANR	5055123	Callee	cp -> setCredential		5054980	0					
ANR	5055124	PtrMemberAccess	cp -> setCredential		5054980	0					
ANR	5055125	Identifier	cp		5054980	0					
ANR	5055126	Identifier	setCredential		5054980	1					
ANR	5055127	ArgumentList	req -> proxy . c_str ( )		5054980	1					
ANR	5055128	Argument	req -> proxy . c_str ( )		5054980	0					
ANR	5055129	CallExpression	req -> proxy . c_str ( )		5054980	0					
ANR	5055130	Callee	req -> proxy . c_str		5054980	0					
ANR	5055131	MemberAccess	req -> proxy . c_str		5054980	0					
ANR	5055132	PtrMemberAccess	req -> proxy		5054980	0					
ANR	5055133	Identifier	req		5054980	0					
ANR	5055134	Identifier	proxy		5054980	1					
ANR	5055135	Identifier	c_str		5054980	1					
ANR	5055136	ArgumentList			5054980	1					
ANR	5055137	ExpressionStatement	cp -> execute ( delgservice )		5054980	3					
ANR	5055138	CallExpression	cp -> execute ( delgservice )		5054980	0					
ANR	5055139	Callee	cp -> execute		5054980	0					
ANR	5055140	PtrMemberAccess	cp -> execute		5054980	0					
ANR	5055141	Identifier	cp		5054980	0					
ANR	5055142	Identifier	execute		5054980	1					
ANR	5055143	ArgumentList	delgservice		5054980	1					
ANR	5055144	Argument	delgservice		5054980	0					
ANR	5055145	Identifier	delgservice		5054980	0					
ANR	5055146	Statement	delete		5054980	4					
ANR	5055147	ExpressionStatement	cp		5054980	5					
ANR	5055148	Identifier	cp		5054980	0					
ANR	5055149	CatchList			5054980	1					
ANR	5055150	CatchStatement	catch ( std :: exception & ex )		5054980	0					
ANR	5055151	Identifier	ex		5054980	0					
ANR	5055152	CompoundStatement		33:2:998:1034	5054980	1					
ANR	5055153	Statement	delete	1797:2:48662:48667	5054980	0	True				
ANR	5055154	ExpressionStatement	cp	1797:9:48669:48671	5054980	1	True				
ANR	5055155	Identifier	cp		5054980	0					
ANR	5055156	IdentifierDeclStatement	char * msg = escape_spaces ( ex . what ( ) ) ;	1798:2:48675:48711	5054980	2	True				
ANR	5055157	IdentifierDecl	* msg = escape_spaces ( ex . what ( ) )		5054980	0					
ANR	5055158	IdentifierDeclType	char *		5054980	0					
ANR	5055159	Identifier	msg		5054980	1					
ANR	5055160	AssignmentExpression	* msg = escape_spaces ( ex . what ( ) )		5054980	2		=			
ANR	5055161	Identifier	msg		5054980	0					
ANR	5055162	CallExpression	escape_spaces ( ex . what ( ) )		5054980	1					
ANR	5055163	Callee	escape_spaces		5054980	0					
ANR	5055164	Identifier	escape_spaces		5054980	0					
ANR	5055165	ArgumentList	ex . what ( )		5054980	1					
ANR	5055166	Argument	ex . what ( )		5054980	0					
ANR	5055167	CallExpression	ex . what ( )		5054980	0					
ANR	5055168	Callee	ex . what		5054980	0					
ANR	5055169	MemberAccess	ex . what		5054980	0					
ANR	5055170	Identifier	ex		5054980	0					
ANR	5055171	Identifier	what		5054980	1					
ANR	5055172	ArgumentList			5054980	1					
ANR	5055173	ExpressionStatement	"result_line = ( string ) reqid + "" CREAM_Proxy_Renew\\\\ Error:\\\\ "" + msg"	1799:2:48715:48783	5054980	3	True				
ANR	5055174	AssignmentExpression	"result_line = ( string ) reqid + "" CREAM_Proxy_Renew\\\\ Error:\\\\ "" + msg"		5054980	0		=			
ANR	5055175	Identifier	result_line		5054980	0					
ANR	5055176	AdditiveExpression	"( string ) reqid + "" CREAM_Proxy_Renew\\\\ Error:\\\\ "" + msg"		5054980	1		+			
ANR	5055177	CastExpression	( string ) reqid		5054980	0					
ANR	5055178	CastTarget	string		5054980	0					
ANR	5055179	Identifier	reqid		5054980	1					
ANR	5055180	AdditiveExpression	""" CREAM_Proxy_Renew\\\\ Error:\\\\ "" + msg"		5054980	1		+			
ANR	5055181	PrimaryExpression	""" CREAM_Proxy_Renew\\\\ Error:\\\\ """		5054980	0					
ANR	5055182	Identifier	msg		5054980	1					
ANR	5055183	ExpressionStatement	enqueue_result ( result_line )	1800:2:48787:48814	5054980	4	True				
ANR	5055184	CallExpression	enqueue_result ( result_line )		5054980	0					
ANR	5055185	Callee	enqueue_result		5054980	0					
ANR	5055186	Identifier	enqueue_result		5054980	0					
ANR	5055187	ArgumentList	result_line		5054980	1					
ANR	5055188	Argument	result_line		5054980	0					
ANR	5055189	Identifier	result_line		5054980	0					
ANR	5055190	ExpressionStatement	free ( msg )	1801:2:48818:48827	5054980	5	True				
ANR	5055191	CallExpression	free ( msg )		5054980	0					
ANR	5055192	Callee	free		5054980	0					
ANR	5055193	Identifier	free		5054980	0					
ANR	5055194	ArgumentList	msg		5054980	1					
ANR	5055195	Argument	msg		5054980	0					
ANR	5055196	Identifier	msg		5054980	0					
ANR	5055197	ReturnStatement	return 1 ;	1803:2:48834:48842	5054980	6	True				
ANR	5055198	PrimaryExpression	1		5054980	0					
ANR	5055199	ExpressionStatement	"result_line = ( string ) reqid + "" NULL"""	1806:1:48850:48887	5054980	7	True				
ANR	5055200	AssignmentExpression	"result_line = ( string ) reqid + "" NULL"""		5054980	0		=			
ANR	5055201	Identifier	result_line		5054980	0					
ANR	5055202	AdditiveExpression	"( string ) reqid + "" NULL"""		5054980	1		+			
ANR	5055203	CastExpression	( string ) reqid		5054980	0					
ANR	5055204	CastTarget	string		5054980	0					
ANR	5055205	Identifier	reqid		5054980	1					
ANR	5055206	PrimaryExpression	""" NULL"""		5054980	1					
ANR	5055207	ExpressionStatement	enqueue_result ( result_line )	1807:1:48890:48917	5054980	8	True				
ANR	5055208	CallExpression	enqueue_result ( result_line )		5054980	0					
ANR	5055209	Callee	enqueue_result		5054980	0					
ANR	5055210	Identifier	enqueue_result		5054980	0					
ANR	5055211	ArgumentList	result_line		5054980	1					
ANR	5055212	Argument	result_line		5054980	0					
ANR	5055213	Identifier	result_line		5054980	0					
ANR	5055214	ReturnStatement	return 0 ;	1809:1:48924:48932	5054980	9	True				
ANR	5055215	PrimaryExpression	0		5054980	0					
ANR	5055216	ReturnType	int		5054980	1					
ANR	5055217	Identifier	thread_cream_proxy_renew		5054980	2					
ANR	5055218	ParameterList	Request * req		5054980	3					
ANR	5055219	Parameter	Request * req	1765:30:47661:47672	5054980	0	True				
ANR	5055220	ParameterType	Request *		5054980	0					
ANR	5055221	Identifier	req		5054980	1					
ANR	5055222	CFGEntryNode	ENTRY		5054980		True				
ANR	5055223	CFGExitNode	EXIT		5054980		True				
ANR	5055224	CFGErrorNode	ERROR		5054980		True				
ANR	5055225	Symbol	& reqid		5054980						
ANR	5055226	Symbol	NULL		5054980						
ANR	5055227	Symbol	* req		5054980						
ANR	5055228	Symbol	count_args		5054980						
ANR	5055229	Symbol	& delgid		5054980						
ANR	5055230	Symbol	cp		5054980						
ANR	5055231	Symbol	& delgservice		5054980						
ANR	5055232	Symbol	reqid		5054980						
ANR	5055233	Symbol	result_line		5054980						
ANR	5055234	Symbol	delgid		5054980						
ANR	5055235	Symbol	delgservice		5054980						
ANR	5055236	Symbol	* * req		5054980						
ANR	5055237	Symbol	req -> input_line		5054980						
ANR	5055238	Symbol	* req -> input_line		5054980						
ANR	5055239	Symbol	arg_cnt		5054980						
ANR	5055240	Symbol	req		5054980						
ANR	5055241	Function	handle_cream_get_CEMon_url	1818:0:49196:49415							
ANR	5055242	FunctionDef	handle_cream_get_CEMon_url (char * * input_line)		5055241	0					
ANR	5055243	CompoundStatement		1819:0:49248:49415	5055241	0					
ANR	5055244	IfStatement	if ( count_args ( input_line ) != 3 )		5055241	0					
ANR	5055245	Condition	count_args ( input_line ) != 3	1820:6:49256:49284	5055241	0	True				
ANR	5055246	EqualityExpression	count_args ( input_line ) != 3		5055241	0		!=			
ANR	5055247	CallExpression	count_args ( input_line )		5055241	0					
ANR	5055248	Callee	count_args		5055241	0					
ANR	5055249	Identifier	count_args		5055241	0					
ANR	5055250	ArgumentList	input_line		5055241	1					
ANR	5055251	Argument	input_line		5055241	0					
ANR	5055252	Identifier	input_line		5055241	0					
ANR	5055253	PrimaryExpression	3		5055241	1					
ANR	5055254	CompoundStatement		2:38:39:39	5055241	1					
ANR	5055255	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	1821:2:49292:49313	5055241	0	True				
ANR	5055256	CallExpression	HANDLE_SYNTAX_ERROR ( )		5055241	0					
ANR	5055257	Callee	HANDLE_SYNTAX_ERROR		5055241	0					
ANR	5055258	Identifier	HANDLE_SYNTAX_ERROR		5055241	0					
ANR	5055259	ArgumentList			5055241	1					
ANR	5055260	ExpressionStatement	"enqueue_request ( input_line , thread_cream_get_CEMon_url )"	1824:1:49320:49377	5055241	1	True				
ANR	5055261	CallExpression	"enqueue_request ( input_line , thread_cream_get_CEMon_url )"		5055241	0					
ANR	5055262	Callee	enqueue_request		5055241	0					
ANR	5055263	Identifier	enqueue_request		5055241	0					
ANR	5055264	ArgumentList	input_line		5055241	1					
ANR	5055265	Argument	input_line		5055241	0					
ANR	5055266	Identifier	input_line		5055241	0					
ANR	5055267	Argument	thread_cream_get_CEMon_url		5055241	1					
ANR	5055268	Identifier	thread_cream_get_CEMon_url		5055241	0					
ANR	5055269	ExpressionStatement	"gahp_printf ( ""S\\n"" )"	1826:1:49382:49400	5055241	2	True				
ANR	5055270	CallExpression	"gahp_printf ( ""S\\n"" )"		5055241	0					
ANR	5055271	Callee	gahp_printf		5055241	0					
ANR	5055272	Identifier	gahp_printf		5055241	0					
ANR	5055273	ArgumentList	"""S\\n"""		5055241	1					
ANR	5055274	Argument	"""S\\n"""		5055241	0					
ANR	5055275	PrimaryExpression	"""S\\n"""		5055241	0					
ANR	5055276	ReturnStatement	return 0 ;	1828:1:49405:49413	5055241	3	True				
ANR	5055277	PrimaryExpression	0		5055241	0					
ANR	5055278	ReturnType	int		5055241	1					
ANR	5055279	Identifier	handle_cream_get_CEMon_url		5055241	2					
ANR	5055280	ParameterList	char * * input_line		5055241	3					
ANR	5055281	Parameter	char * * input_line	1818:32:49228:49244	5055241	0	True				
ANR	5055282	ParameterType	char * *		5055241	0					
ANR	5055283	Identifier	input_line		5055241	1					
ANR	5055284	CFGEntryNode	ENTRY		5055241		True				
ANR	5055285	CFGExitNode	EXIT		5055241		True				
ANR	5055286	Symbol	count_args		5055241						
ANR	5055287	Symbol	input_line		5055241						
ANR	5055288	Symbol	thread_cream_get_CEMon_url		5055241						
ANR	5055289	Function	thread_cream_get_CEMon_url	1831:0:49418:50211							
ANR	5055290	FunctionDef	thread_cream_get_CEMon_url (Request * req)		5055289	0					
ANR	5055291	CompoundStatement		1832:0:49465:50211	5055289	0					
ANR	5055292	IdentifierDeclStatement	"char * reqid , * service ;"	1833:1:49468:49489	5055289	0	True				
ANR	5055293	IdentifierDecl	* reqid		5055289	0					
ANR	5055294	IdentifierDeclType	char *		5055289	0					
ANR	5055295	Identifier	reqid		5055289	1					
ANR	5055296	IdentifierDecl	* service		5055289	1					
ANR	5055297	IdentifierDeclType	char *		5055289	0					
ANR	5055298	Identifier	service		5055289	1					
ANR	5055299	IdentifierDeclStatement	string result_line ;	1834:1:49492:49510	5055289	1	True				
ANR	5055300	IdentifierDecl	result_line		5055289	0					
ANR	5055301	IdentifierDeclType	string		5055289	0					
ANR	5055302	Identifier	result_line		5055289	1					
ANR	5055303	IdentifierDeclStatement	AbsCreamProxy * cp = NULL ;	1835:1:49513:49537	5055289	2	True				
ANR	5055304	IdentifierDecl	* cp = NULL		5055289	0					
ANR	5055305	IdentifierDeclType	AbsCreamProxy *		5055289	0					
ANR	5055306	Identifier	cp		5055289	1					
ANR	5055307	AssignmentExpression	* cp = NULL		5055289	2		=			
ANR	5055308	Identifier	NULL		5055289	0					
ANR	5055309	Identifier	NULL		5055289	1					
ANR	5055310	ExpressionStatement	"process_string_arg ( req -> input_line [ 1 ] , & reqid )"	1837:1:49542:49590	5055289	3	True				
ANR	5055311	CallExpression	"process_string_arg ( req -> input_line [ 1 ] , & reqid )"		5055289	0					
ANR	5055312	Callee	process_string_arg		5055289	0					
ANR	5055313	Identifier	process_string_arg		5055289	0					
ANR	5055314	ArgumentList	req -> input_line [ 1 ]		5055289	1					
ANR	5055315	Argument	req -> input_line [ 1 ]		5055289	0					
ANR	5055316	ArrayIndexing	req -> input_line [ 1 ]		5055289	0					
ANR	5055317	PtrMemberAccess	req -> input_line		5055289	0					
ANR	5055318	Identifier	req		5055289	0					
ANR	5055319	Identifier	input_line		5055289	1					
ANR	5055320	PrimaryExpression	1		5055289	1					
ANR	5055321	Argument	& reqid		5055289	1					
ANR	5055322	UnaryOperationExpression	& reqid		5055289	0					
ANR	5055323	UnaryOperator	&		5055289	0					
ANR	5055324	Identifier	reqid		5055289	1					
ANR	5055325	ExpressionStatement	"process_string_arg ( req -> input_line [ 2 ] , & service )"	1838:1:49593:49643	5055289	4	True				
ANR	5055326	CallExpression	"process_string_arg ( req -> input_line [ 2 ] , & service )"		5055289	0					
ANR	5055327	Callee	process_string_arg		5055289	0					
ANR	5055328	Identifier	process_string_arg		5055289	0					
ANR	5055329	ArgumentList	req -> input_line [ 2 ]		5055289	1					
ANR	5055330	Argument	req -> input_line [ 2 ]		5055289	0					
ANR	5055331	ArrayIndexing	req -> input_line [ 2 ]		5055289	0					
ANR	5055332	PtrMemberAccess	req -> input_line		5055289	0					
ANR	5055333	Identifier	req		5055289	0					
ANR	5055334	Identifier	input_line		5055289	1					
ANR	5055335	PrimaryExpression	2		5055289	1					
ANR	5055336	Argument	& service		5055289	1					
ANR	5055337	UnaryOperationExpression	& service		5055289	0					
ANR	5055338	UnaryOperator	&		5055289	0					
ANR	5055339	Identifier	service		5055289	1					
ANR	5055340	IdentifierDeclStatement	ServiceInfoWrapper siw ;	1840:1:49648:49670	5055289	5	True				
ANR	5055341	IdentifierDecl	siw		5055289	0					
ANR	5055342	IdentifierDeclType	ServiceInfoWrapper		5055289	0					
ANR	5055343	Identifier	siw		5055289	1					
ANR	5055344	TryStatement	try		5055289	6					
ANR	5055345	CompoundStatement		10:5:211:211	5055289	0					
ANR	5055346	ExpressionStatement	"cp = CreamProxyFactory :: make_CreamProxyServiceInfo ( & siw , 0 , DEFAULT_TIMEOUT )"		5055289	0					
ANR	5055347	AssignmentExpression	"cp = CreamProxyFactory :: make_CreamProxyServiceInfo ( & siw , 0 , DEFAULT_TIMEOUT )"		5055289	0		=			
ANR	5055348	Identifier	cp		5055289	0					
ANR	5055349	CallExpression	"CreamProxyFactory :: make_CreamProxyServiceInfo ( & siw , 0 , DEFAULT_TIMEOUT )"		5055289	1					
ANR	5055350	Callee	CreamProxyFactory :: make_CreamProxyServiceInfo		5055289	0					
ANR	5055351	Identifier	CreamProxyFactory :: make_CreamProxyServiceInfo		5055289	0					
ANR	5055352	ArgumentList	& siw		5055289	1					
ANR	5055353	Argument	& siw		5055289	0					
ANR	5055354	UnaryOperationExpression	& siw		5055289	0					
ANR	5055355	UnaryOperator	&		5055289	0					
ANR	5055356	Identifier	siw		5055289	1					
ANR	5055357	Argument	0		5055289	1					
ANR	5055358	PrimaryExpression	0		5055289	0					
ANR	5055359	Argument	DEFAULT_TIMEOUT		5055289	2					
ANR	5055360	Identifier	DEFAULT_TIMEOUT		5055289	0					
ANR	5055361	ExpressionStatement	check_for_factory_error ( cp )		5055289	1					
ANR	5055362	CallExpression	check_for_factory_error ( cp )		5055289	0					
ANR	5055363	Callee	check_for_factory_error		5055289	0					
ANR	5055364	Identifier	check_for_factory_error		5055289	0					
ANR	5055365	ArgumentList	cp		5055289	1					
ANR	5055366	Argument	cp		5055289	0					
ANR	5055367	Identifier	cp		5055289	0					
ANR	5055368	ExpressionStatement	cp -> setCredential ( req -> proxy . c_str ( ) )		5055289	2					
ANR	5055369	CallExpression	cp -> setCredential ( req -> proxy . c_str ( ) )		5055289	0					
ANR	5055370	Callee	cp -> setCredential		5055289	0					
ANR	5055371	PtrMemberAccess	cp -> setCredential		5055289	0					
ANR	5055372	Identifier	cp		5055289	0					
ANR	5055373	Identifier	setCredential		5055289	1					
ANR	5055374	ArgumentList	req -> proxy . c_str ( )		5055289	1					
ANR	5055375	Argument	req -> proxy . c_str ( )		5055289	0					
ANR	5055376	CallExpression	req -> proxy . c_str ( )		5055289	0					
ANR	5055377	Callee	req -> proxy . c_str		5055289	0					
ANR	5055378	MemberAccess	req -> proxy . c_str		5055289	0					
ANR	5055379	PtrMemberAccess	req -> proxy		5055289	0					
ANR	5055380	Identifier	req		5055289	0					
ANR	5055381	Identifier	proxy		5055289	1					
ANR	5055382	Identifier	c_str		5055289	1					
ANR	5055383	ArgumentList			5055289	1					
ANR	5055384	ExpressionStatement	cp -> execute ( service )		5055289	3					
ANR	5055385	CallExpression	cp -> execute ( service )		5055289	0					
ANR	5055386	Callee	cp -> execute		5055289	0					
ANR	5055387	PtrMemberAccess	cp -> execute		5055289	0					
ANR	5055388	Identifier	cp		5055289	0					
ANR	5055389	Identifier	execute		5055289	1					
ANR	5055390	ArgumentList	service		5055289	1					
ANR	5055391	Argument	service		5055289	0					
ANR	5055392	Identifier	service		5055289	0					
ANR	5055393	Statement	delete		5055289	4					
ANR	5055394	ExpressionStatement	cp		5055289	5					
ANR	5055395	Identifier	cp		5055289	0					
ANR	5055396	CatchList			5055289	1					
ANR	5055397	CatchStatement	catch ( std :: exception & ex )		5055289	0					
ANR	5055398	Identifier	ex		5055289	0					
ANR	5055399	CompoundStatement		20:2:465:501	5055289	1					
ANR	5055400	Statement	delete	1850:2:49918:49923	5055289	0	True				
ANR	5055401	ExpressionStatement	cp	1850:9:49925:49927	5055289	1	True				
ANR	5055402	Identifier	cp		5055289	0					
ANR	5055403	IdentifierDeclStatement	char * msg = escape_spaces ( ex . what ( ) ) ;	1851:2:49931:49967	5055289	2	True				
ANR	5055404	IdentifierDecl	* msg = escape_spaces ( ex . what ( ) )		5055289	0					
ANR	5055405	IdentifierDeclType	char *		5055289	0					
ANR	5055406	Identifier	msg		5055289	1					
ANR	5055407	AssignmentExpression	* msg = escape_spaces ( ex . what ( ) )		5055289	2		=			
ANR	5055408	Identifier	msg		5055289	0					
ANR	5055409	CallExpression	escape_spaces ( ex . what ( ) )		5055289	1					
ANR	5055410	Callee	escape_spaces		5055289	0					
ANR	5055411	Identifier	escape_spaces		5055289	0					
ANR	5055412	ArgumentList	ex . what ( )		5055289	1					
ANR	5055413	Argument	ex . what ( )		5055289	0					
ANR	5055414	CallExpression	ex . what ( )		5055289	0					
ANR	5055415	Callee	ex . what		5055289	0					
ANR	5055416	MemberAccess	ex . what		5055289	0					
ANR	5055417	Identifier	ex		5055289	0					
ANR	5055418	Identifier	what		5055289	1					
ANR	5055419	ArgumentList			5055289	1					
ANR	5055420	ExpressionStatement	"result_line = ( string ) reqid + "" CREAM_Get_CEMon_URL\\\\ Error:\\\\ "" + msg"	1852:2:49971:50041	5055289	3	True				
ANR	5055421	AssignmentExpression	"result_line = ( string ) reqid + "" CREAM_Get_CEMon_URL\\\\ Error:\\\\ "" + msg"		5055289	0		=			
ANR	5055422	Identifier	result_line		5055289	0					
ANR	5055423	AdditiveExpression	"( string ) reqid + "" CREAM_Get_CEMon_URL\\\\ Error:\\\\ "" + msg"		5055289	1		+			
ANR	5055424	CastExpression	( string ) reqid		5055289	0					
ANR	5055425	CastTarget	string		5055289	0					
ANR	5055426	Identifier	reqid		5055289	1					
ANR	5055427	AdditiveExpression	""" CREAM_Get_CEMon_URL\\\\ Error:\\\\ "" + msg"		5055289	1		+			
ANR	5055428	PrimaryExpression	""" CREAM_Get_CEMon_URL\\\\ Error:\\\\ """		5055289	0					
ANR	5055429	Identifier	msg		5055289	1					
ANR	5055430	ExpressionStatement	enqueue_result ( result_line )	1853:2:50045:50072	5055289	4	True				
ANR	5055431	CallExpression	enqueue_result ( result_line )		5055289	0					
ANR	5055432	Callee	enqueue_result		5055289	0					
ANR	5055433	Identifier	enqueue_result		5055289	0					
ANR	5055434	ArgumentList	result_line		5055289	1					
ANR	5055435	Argument	result_line		5055289	0					
ANR	5055436	Identifier	result_line		5055289	0					
ANR	5055437	ExpressionStatement	free ( msg )	1854:2:50076:50085	5055289	5	True				
ANR	5055438	CallExpression	free ( msg )		5055289	0					
ANR	5055439	Callee	free		5055289	0					
ANR	5055440	Identifier	free		5055289	0					
ANR	5055441	ArgumentList	msg		5055289	1					
ANR	5055442	Argument	msg		5055289	0					
ANR	5055443	Identifier	msg		5055289	0					
ANR	5055444	ReturnStatement	return 1 ;	1856:2:50092:50100	5055289	6	True				
ANR	5055445	PrimaryExpression	1		5055289	0					
ANR	5055446	ExpressionStatement	"result_line = ( string ) reqid + "" NULL "" + siw . getCEMonURL ( )"	1859:1:50108:50166	5055289	7	True				
ANR	5055447	AssignmentExpression	"result_line = ( string ) reqid + "" NULL "" + siw . getCEMonURL ( )"		5055289	0		=			
ANR	5055448	Identifier	result_line		5055289	0					
ANR	5055449	AdditiveExpression	"( string ) reqid + "" NULL "" + siw . getCEMonURL ( )"		5055289	1		+			
ANR	5055450	CastExpression	( string ) reqid		5055289	0					
ANR	5055451	CastTarget	string		5055289	0					
ANR	5055452	Identifier	reqid		5055289	1					
ANR	5055453	AdditiveExpression	""" NULL "" + siw . getCEMonURL ( )"		5055289	1		+			
ANR	5055454	PrimaryExpression	""" NULL """		5055289	0					
ANR	5055455	CallExpression	siw . getCEMonURL ( )		5055289	1					
ANR	5055456	Callee	siw . getCEMonURL		5055289	0					
ANR	5055457	MemberAccess	siw . getCEMonURL		5055289	0					
ANR	5055458	Identifier	siw		5055289	0					
ANR	5055459	Identifier	getCEMonURL		5055289	1					
ANR	5055460	ArgumentList			5055289	1					
ANR	5055461	ExpressionStatement	enqueue_result ( result_line )	1860:1:50169:50196	5055289	8	True				
ANR	5055462	CallExpression	enqueue_result ( result_line )		5055289	0					
ANR	5055463	Callee	enqueue_result		5055289	0					
ANR	5055464	Identifier	enqueue_result		5055289	0					
ANR	5055465	ArgumentList	result_line		5055289	1					
ANR	5055466	Argument	result_line		5055289	0					
ANR	5055467	Identifier	result_line		5055289	0					
ANR	5055468	ReturnStatement	return 0 ;	1862:1:50201:50209	5055289	9	True				
ANR	5055469	PrimaryExpression	0		5055289	0					
ANR	5055470	ReturnType	int		5055289	1					
ANR	5055471	Identifier	thread_cream_get_CEMon_url		5055289	2					
ANR	5055472	ParameterList	Request * req		5055289	3					
ANR	5055473	Parameter	Request * req	1831:32:49450:49461	5055289	0	True				
ANR	5055474	ParameterType	Request *		5055289	0					
ANR	5055475	Identifier	req		5055289	1					
ANR	5055476	CFGEntryNode	ENTRY		5055289		True				
ANR	5055477	CFGExitNode	EXIT		5055289		True				
ANR	5055478	CFGErrorNode	ERROR		5055289		True				
ANR	5055479	Symbol	siw		5055289						
ANR	5055480	Symbol	siw . getCEMonURL		5055289						
ANR	5055481	Symbol	& reqid		5055289						
ANR	5055482	Symbol	NULL		5055289						
ANR	5055483	Symbol	* req		5055289						
ANR	5055484	Symbol	& service		5055289						
ANR	5055485	Symbol	cp		5055289						
ANR	5055486	Symbol	reqid		5055289						
ANR	5055487	Symbol	result_line		5055289						
ANR	5055488	Symbol	* * req		5055289						
ANR	5055489	Symbol	service		5055289						
ANR	5055490	Symbol	req -> input_line		5055289						
ANR	5055491	Symbol	* req -> input_line		5055289						
ANR	5055492	Symbol	req		5055289						
ANR	5055493	Function	handle_results	1870:0:50425:50809							
ANR	5055494	FunctionDef	handle_results (char * * input_line)		5055493	0					
ANR	5055495	CompoundStatement		1871:0:50465:50809	5055493	0					
ANR	5055496	ExpressionStatement	pthread_mutex_lock ( & resultQueueLock )	1872:1:50468:50506	5055493	0	True				
ANR	5055497	CallExpression	pthread_mutex_lock ( & resultQueueLock )		5055493	0					
ANR	5055498	Callee	pthread_mutex_lock		5055493	0					
ANR	5055499	Identifier	pthread_mutex_lock		5055493	0					
ANR	5055500	ArgumentList	& resultQueueLock		5055493	1					
ANR	5055501	Argument	& resultQueueLock		5055493	0					
ANR	5055502	UnaryOperationExpression	& resultQueueLock		5055493	0					
ANR	5055503	UnaryOperator	&		5055493	0					
ANR	5055504	Identifier	resultQueueLock		5055493	1					
ANR	5055505	ExpressionStatement	results_pending = false	1874:1:50510:50533	5055493	1	True				
ANR	5055506	AssignmentExpression	results_pending = false		5055493	0		=			
ANR	5055507	Identifier	results_pending		5055493	0					
ANR	5055508	Identifier	false		5055493	1					
ANR	5055509	ExpressionStatement	"gahp_printf ( ""S %d\\n"" , resultQueue . size ( ) )"	1876:1:50563:50606	5055493	2	True				
ANR	5055510	CallExpression	"gahp_printf ( ""S %d\\n"" , resultQueue . size ( ) )"		5055493	0					
ANR	5055511	Callee	gahp_printf		5055493	0					
ANR	5055512	Identifier	gahp_printf		5055493	0					
ANR	5055513	ArgumentList	"""S %d\\n"""		5055493	1					
ANR	5055514	Argument	"""S %d\\n"""		5055493	0					
ANR	5055515	PrimaryExpression	"""S %d\\n"""		5055493	0					
ANR	5055516	Argument	resultQueue . size ( )		5055493	1					
ANR	5055517	CallExpression	resultQueue . size ( )		5055493	0					
ANR	5055518	Callee	resultQueue . size		5055493	0					
ANR	5055519	MemberAccess	resultQueue . size		5055493	0					
ANR	5055520	Identifier	resultQueue		5055493	0					
ANR	5055521	Identifier	size		5055493	1					
ANR	5055522	ArgumentList			5055493	1					
ANR	5055523	WhileStatement	while ( ! resultQueue . empty ( ) )		5055493	3					
ANR	5055524	Condition	! resultQueue . empty ( )	1878:9:50619:50639	5055493	0	True				
ANR	5055525	UnaryOperationExpression	! resultQueue . empty ( )		5055493	0					
ANR	5055526	UnaryOperator	!		5055493	0					
ANR	5055527	CallExpression	resultQueue . empty ( )		5055493	1					
ANR	5055528	Callee	resultQueue . empty		5055493	0					
ANR	5055529	MemberAccess	resultQueue . empty		5055493	0					
ANR	5055530	Identifier	resultQueue		5055493	0					
ANR	5055531	Identifier	empty		5055493	1					
ANR	5055532	ArgumentList			5055493	1					
ANR	5055533	CompoundStatement		8:32:176:176	5055493	1					
ANR	5055534	ExpressionStatement	"gahp_printf ( ""%s\\n"" , ( resultQueue . front ( ) ) . c_str ( ) )"	1879:2:50646:50698	5055493	0	True				
ANR	5055535	CallExpression	"gahp_printf ( ""%s\\n"" , ( resultQueue . front ( ) ) . c_str ( ) )"		5055493	0					
ANR	5055536	Callee	gahp_printf		5055493	0					
ANR	5055537	Identifier	gahp_printf		5055493	0					
ANR	5055538	ArgumentList	"""%s\\n"""		5055493	1					
ANR	5055539	Argument	"""%s\\n"""		5055493	0					
ANR	5055540	PrimaryExpression	"""%s\\n"""		5055493	0					
ANR	5055541	Argument	( resultQueue . front ( ) ) . c_str ( )		5055493	1					
ANR	5055542	CallExpression	( resultQueue . front ( ) ) . c_str ( )		5055493	0					
ANR	5055543	Callee	( resultQueue . front ( ) ) . c_str		5055493	0					
ANR	5055544	MemberAccess	( resultQueue . front ( ) ) . c_str		5055493	0					
ANR	5055545	CallExpression	resultQueue . front ( )		5055493	0					
ANR	5055546	Callee	resultQueue . front		5055493	0					
ANR	5055547	MemberAccess	resultQueue . front		5055493	0					
ANR	5055548	Identifier	resultQueue		5055493	0					
ANR	5055549	Identifier	front		5055493	1					
ANR	5055550	ArgumentList			5055493	1					
ANR	5055551	Identifier	c_str		5055493	1					
ANR	5055552	ArgumentList			5055493	1					
ANR	5055553	ExpressionStatement	resultQueue . pop ( )	1880:2:50702:50719	5055493	1	True				
ANR	5055554	CallExpression	resultQueue . pop ( )		5055493	0					
ANR	5055555	Callee	resultQueue . pop		5055493	0					
ANR	5055556	MemberAccess	resultQueue . pop		5055493	0					
ANR	5055557	Identifier	resultQueue		5055493	0					
ANR	5055558	Identifier	pop		5055493	1					
ANR	5055559	ArgumentList			5055493	1					
ANR	5055560	ExpressionStatement	pthread_mutex_unlock ( & resultQueueLock )	1883:1:50727:50767	5055493	4	True				
ANR	5055561	CallExpression	pthread_mutex_unlock ( & resultQueueLock )		5055493	0					
ANR	5055562	Callee	pthread_mutex_unlock		5055493	0					
ANR	5055563	Identifier	pthread_mutex_unlock		5055493	0					
ANR	5055564	ArgumentList	& resultQueueLock		5055493	1					
ANR	5055565	Argument	& resultQueueLock		5055493	0					
ANR	5055566	UnaryOperationExpression	& resultQueueLock		5055493	0					
ANR	5055567	UnaryOperator	&		5055493	0					
ANR	5055568	Identifier	resultQueueLock		5055493	1					
ANR	5055569	ExpressionStatement	free_args ( input_line )	1885:1:50771:50794	5055493	5	True				
ANR	5055570	CallExpression	free_args ( input_line )		5055493	0					
ANR	5055571	Callee	free_args		5055493	0					
ANR	5055572	Identifier	free_args		5055493	0					
ANR	5055573	ArgumentList	input_line		5055493	1					
ANR	5055574	Argument	input_line		5055493	0					
ANR	5055575	Identifier	input_line		5055493	0					
ANR	5055576	ReturnStatement	return 0 ;	1887:1:50799:50807	5055493	6	True				
ANR	5055577	PrimaryExpression	0		5055493	0					
ANR	5055578	ReturnType	int		5055493	1					
ANR	5055579	Identifier	handle_results		5055493	2					
ANR	5055580	ParameterList	char * * input_line		5055493	3					
ANR	5055581	Parameter	char * * input_line	1870:20:50445:50461	5055493	0	True				
ANR	5055582	ParameterType	char * *		5055493	0					
ANR	5055583	Identifier	input_line		5055493	1					
ANR	5055584	CFGEntryNode	ENTRY		5055493		True				
ANR	5055585	CFGExitNode	EXIT		5055493		True				
ANR	5055586	Symbol	resultQueue . front		5055493						
ANR	5055587	Symbol	resultQueue		5055493						
ANR	5055588	Symbol	resultQueue . size		5055493						
ANR	5055589	Symbol	resultQueue . empty		5055493						
ANR	5055590	Symbol	false		5055493						
ANR	5055591	Symbol	input_line		5055493						
ANR	5055592	Symbol	( resultQueue . front ( ) ) . c_str		5055493						
ANR	5055593	Symbol	& resultQueueLock		5055493						
ANR	5055594	Symbol	results_pending		5055493						
ANR	5055595	Function	handle_version	1895:0:51016:51138							
ANR	5055596	FunctionDef	handle_version (char * * input_line)		5055595	0					
ANR	5055597	CompoundStatement		1896:0:51056:51138	5055595	0					
ANR	5055598	ExpressionStatement	"gahp_printf ( ""S %s\\n"" , VersionString )"	1897:1:51059:51095	5055595	0	True				
ANR	5055599	CallExpression	"gahp_printf ( ""S %s\\n"" , VersionString )"		5055595	0					
ANR	5055600	Callee	gahp_printf		5055595	0					
ANR	5055601	Identifier	gahp_printf		5055595	0					
ANR	5055602	ArgumentList	"""S %s\\n"""		5055595	1					
ANR	5055603	Argument	"""S %s\\n"""		5055595	0					
ANR	5055604	PrimaryExpression	"""S %s\\n"""		5055595	0					
ANR	5055605	Argument	VersionString		5055595	1					
ANR	5055606	Identifier	VersionString		5055595	0					
ANR	5055607	ExpressionStatement	free_args ( input_line )	1899:1:51100:51123	5055595	1	True				
ANR	5055608	CallExpression	free_args ( input_line )		5055595	0					
ANR	5055609	Callee	free_args		5055595	0					
ANR	5055610	Identifier	free_args		5055595	0					
ANR	5055611	ArgumentList	input_line		5055595	1					
ANR	5055612	Argument	input_line		5055595	0					
ANR	5055613	Identifier	input_line		5055595	0					
ANR	5055614	ReturnStatement	return 0 ;	1901:1:51128:51136	5055595	2	True				
ANR	5055615	PrimaryExpression	0		5055595	0					
ANR	5055616	ReturnType	int		5055595	1					
ANR	5055617	Identifier	handle_version		5055595	2					
ANR	5055618	ParameterList	char * * input_line		5055595	3					
ANR	5055619	Parameter	char * * input_line	1895:20:51036:51052	5055595	0	True				
ANR	5055620	ParameterType	char * *		5055595	0					
ANR	5055621	Identifier	input_line		5055595	1					
ANR	5055622	CFGEntryNode	ENTRY		5055595		True				
ANR	5055623	CFGExitNode	EXIT		5055595		True				
ANR	5055624	Symbol	VersionString		5055595						
ANR	5055625	Symbol	input_line		5055595						
ANR	5055626	Function	handle_response_prefix	1910:0:51384:51935							
ANR	5055627	FunctionDef	handle_response_prefix (char * * input_line)		5055626	0					
ANR	5055628	CompoundStatement		1911:0:51432:51935	5055626	0					
ANR	5055629	IdentifierDeclStatement	char * prefix ;	1912:1:51435:51447	5055626	0	True				
ANR	5055630	IdentifierDecl	* prefix		5055626	0					
ANR	5055631	IdentifierDeclType	char *		5055626	0					
ANR	5055632	Identifier	prefix		5055626	1					
ANR	5055633	IfStatement	if ( count_args ( input_line ) != 2 )		5055626	1					
ANR	5055634	Condition	count_args ( input_line ) != 2	1914:6:51457:51485	5055626	0	True				
ANR	5055635	EqualityExpression	count_args ( input_line ) != 2		5055626	0		!=			
ANR	5055636	CallExpression	count_args ( input_line )		5055626	0					
ANR	5055637	Callee	count_args		5055626	0					
ANR	5055638	Identifier	count_args		5055626	0					
ANR	5055639	ArgumentList	input_line		5055626	1					
ANR	5055640	Argument	input_line		5055626	0					
ANR	5055641	Identifier	input_line		5055626	0					
ANR	5055642	PrimaryExpression	2		5055626	1					
ANR	5055643	CompoundStatement		4:38:56:56	5055626	1					
ANR	5055644	ForStatement	for ( int i = 0 ; input_line [ i ] ; i ++ )		5055626	0					
ANR	5055645	ForInit	int i = 0 ;	1915:6:51497:51504	5055626	0	True				
ANR	5055646	IdentifierDeclStatement	int i = 0 ;		5055626	0					
ANR	5055647	IdentifierDecl	i = 0		5055626	0					
ANR	5055648	IdentifierDeclType	int		5055626	0					
ANR	5055649	Identifier	i		5055626	1					
ANR	5055650	AssignmentExpression	i = 0		5055626	2		=			
ANR	5055651	Identifier	i		5055626	0					
ANR	5055652	PrimaryExpression	0		5055626	1					
ANR	5055653	Condition	input_line [ i ]	1915:14:51505:51517	5055626	1	True				
ANR	5055654	ArrayIndexing	input_line [ i ]		5055626	0					
ANR	5055655	Identifier	input_line		5055626	0					
ANR	5055656	Identifier	i		5055626	1					
ANR	5055657	PostIncDecOperationExpression	i ++	1915:28:51519:51521	5055626	2	True				
ANR	5055658	Identifier	i		5055626	0					
ANR	5055659	IncDec	++		5055626	1					
ANR	5055660	CompoundStatement		5:32:90:90	5055626	3					
ANR	5055661	ExpressionStatement	"fprintf ( stderr , ""input_line[%d]=\\""%s\\"" (len=%d)\\n"" , i , input_line [ i ] , strlen ( input_line [ i ] ) )"	1915:33:51524:51612	5055626	0	True				
ANR	5055662	CallExpression	"fprintf ( stderr , ""input_line[%d]=\\""%s\\"" (len=%d)\\n"" , i , input_line [ i ] , strlen ( input_line [ i ] ) )"		5055626	0					
ANR	5055663	Callee	fprintf		5055626	0					
ANR	5055664	Identifier	fprintf		5055626	0					
ANR	5055665	ArgumentList	stderr		5055626	1					
ANR	5055666	Argument	stderr		5055626	0					
ANR	5055667	Identifier	stderr		5055626	0					
ANR	5055668	Argument	"""input_line[%d]=\\""%s\\"" (len=%d)\\n"""		5055626	1					
ANR	5055669	PrimaryExpression	"""input_line[%d]=\\""%s\\"" (len=%d)\\n"""		5055626	0					
ANR	5055670	Argument	i		5055626	2					
ANR	5055671	Identifier	i		5055626	0					
ANR	5055672	Argument	input_line [ i ]		5055626	3					
ANR	5055673	ArrayIndexing	input_line [ i ]		5055626	0					
ANR	5055674	Identifier	input_line		5055626	0					
ANR	5055675	Identifier	i		5055626	1					
ANR	5055676	Argument	strlen ( input_line [ i ] )		5055626	4					
ANR	5055677	CallExpression	strlen ( input_line [ i ] )		5055626	0					
ANR	5055678	Callee	strlen		5055626	0					
ANR	5055679	Identifier	strlen		5055626	0					
ANR	5055680	ArgumentList	input_line [ i ]		5055626	1					
ANR	5055681	Argument	input_line [ i ]		5055626	0					
ANR	5055682	ArrayIndexing	input_line [ i ]		5055626	0					
ANR	5055683	Identifier	input_line		5055626	0					
ANR	5055684	Identifier	i		5055626	1					
ANR	5055685	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	1916:2:51617:51638	5055626	1	True				
ANR	5055686	CallExpression	HANDLE_SYNTAX_ERROR ( )		5055626	0					
ANR	5055687	Callee	HANDLE_SYNTAX_ERROR		5055626	0					
ANR	5055688	Identifier	HANDLE_SYNTAX_ERROR		5055626	0					
ANR	5055689	ArgumentList			5055626	1					
ANR	5055690	ExpressionStatement	"process_string_arg ( input_line [ 1 ] , & prefix )"	1919:1:51645:51689	5055626	2	True				
ANR	5055691	CallExpression	"process_string_arg ( input_line [ 1 ] , & prefix )"		5055626	0					
ANR	5055692	Callee	process_string_arg		5055626	0					
ANR	5055693	Identifier	process_string_arg		5055626	0					
ANR	5055694	ArgumentList	input_line [ 1 ]		5055626	1					
ANR	5055695	Argument	input_line [ 1 ]		5055626	0					
ANR	5055696	ArrayIndexing	input_line [ 1 ]		5055626	0					
ANR	5055697	Identifier	input_line		5055626	0					
ANR	5055698	PrimaryExpression	1		5055626	1					
ANR	5055699	Argument	& prefix		5055626	1					
ANR	5055700	UnaryOperationExpression	& prefix		5055626	0					
ANR	5055701	UnaryOperator	&		5055626	0					
ANR	5055702	Identifier	prefix		5055626	1					
ANR	5055703	ExpressionStatement	"gahp_printf ( ""S\\n"" )"	1921:1:51693:51711	5055626	3	True				
ANR	5055704	CallExpression	"gahp_printf ( ""S\\n"" )"		5055626	0					
ANR	5055705	Callee	gahp_printf		5055626	0					
ANR	5055706	Identifier	gahp_printf		5055626	0					
ANR	5055707	ArgumentList	"""S\\n"""		5055626	1					
ANR	5055708	Argument	"""S\\n"""		5055626	0					
ANR	5055709	PrimaryExpression	"""S\\n"""		5055626	0					
ANR	5055710	ExpressionStatement	pthread_mutex_lock ( & outputLock )	1923:1:51715:51748	5055626	4	True				
ANR	5055711	CallExpression	pthread_mutex_lock ( & outputLock )		5055626	0					
ANR	5055712	Callee	pthread_mutex_lock		5055626	0					
ANR	5055713	Identifier	pthread_mutex_lock		5055626	0					
ANR	5055714	ArgumentList	& outputLock		5055626	1					
ANR	5055715	Argument	& outputLock		5055626	0					
ANR	5055716	UnaryOperationExpression	& outputLock		5055626	0					
ANR	5055717	UnaryOperator	&		5055626	0					
ANR	5055718	Identifier	outputLock		5055626	1					
ANR	5055719	IfStatement	if ( response_prefix )		5055626	5					
ANR	5055720	Condition	response_prefix	1925:5:51756:51770	5055626	0	True				
ANR	5055721	Identifier	response_prefix		5055626	0					
ANR	5055722	ExpressionStatement	free ( response_prefix )	1926:2:51775:51796	5055626	1	True				
ANR	5055723	CallExpression	free ( response_prefix )		5055626	0					
ANR	5055724	Callee	free		5055626	0					
ANR	5055725	Identifier	free		5055626	0					
ANR	5055726	ArgumentList	response_prefix		5055626	1					
ANR	5055727	Argument	response_prefix		5055626	0					
ANR	5055728	Identifier	response_prefix		5055626	0					
ANR	5055729	IfStatement	if ( prefix )		5055626	6					
ANR	5055730	Condition	prefix	1928:5:51804:51809	5055626	0	True				
ANR	5055731	Identifier	prefix		5055626	0					
ANR	5055732	CompoundStatement		18:13:379:379	5055626	1					
ANR	5055733	ExpressionStatement	response_prefix = strdup ( prefix )	1929:2:51816:51850	5055626	0	True				
ANR	5055734	AssignmentExpression	response_prefix = strdup ( prefix )		5055626	0		=			
ANR	5055735	Identifier	response_prefix		5055626	0					
ANR	5055736	CallExpression	strdup ( prefix )		5055626	1					
ANR	5055737	Callee	strdup		5055626	0					
ANR	5055738	Identifier	strdup		5055626	0					
ANR	5055739	ArgumentList	prefix		5055626	1					
ANR	5055740	Argument	prefix		5055626	0					
ANR	5055741	Identifier	prefix		5055626	0					
ANR	5055742	ExpressionStatement	pthread_mutex_unlock ( & outputLock )	1932:1:51857:51892	5055626	7	True				
ANR	5055743	CallExpression	pthread_mutex_unlock ( & outputLock )		5055626	0					
ANR	5055744	Callee	pthread_mutex_unlock		5055626	0					
ANR	5055745	Identifier	pthread_mutex_unlock		5055626	0					
ANR	5055746	ArgumentList	& outputLock		5055626	1					
ANR	5055747	Argument	& outputLock		5055626	0					
ANR	5055748	UnaryOperationExpression	& outputLock		5055626	0					
ANR	5055749	UnaryOperator	&		5055626	0					
ANR	5055750	Identifier	outputLock		5055626	1					
ANR	5055751	ExpressionStatement	free_args ( input_line )	1934:1:51897:51920	5055626	8	True				
ANR	5055752	CallExpression	free_args ( input_line )		5055626	0					
ANR	5055753	Callee	free_args		5055626	0					
ANR	5055754	Identifier	free_args		5055626	0					
ANR	5055755	ArgumentList	input_line		5055626	1					
ANR	5055756	Argument	input_line		5055626	0					
ANR	5055757	Identifier	input_line		5055626	0					
ANR	5055758	ReturnStatement	return 0 ;	1936:1:51925:51933	5055626	9	True				
ANR	5055759	PrimaryExpression	0		5055626	0					
ANR	5055760	ReturnType	int		5055626	1					
ANR	5055761	Identifier	handle_response_prefix		5055626	2					
ANR	5055762	ParameterList	char * * input_line		5055626	3					
ANR	5055763	Parameter	char * * input_line	1910:28:51412:51428	5055626	0	True				
ANR	5055764	ParameterType	char * *		5055626	0					
ANR	5055765	Identifier	input_line		5055626	1					
ANR	5055766	CFGEntryNode	ENTRY		5055626		True				
ANR	5055767	CFGExitNode	EXIT		5055626		True				
ANR	5055768	Symbol	* input_line		5055626						
ANR	5055769	Symbol	strlen		5055626						
ANR	5055770	Symbol	* i		5055626						
ANR	5055771	Symbol	& prefix		5055626						
ANR	5055772	Symbol	& outputLock		5055626						
ANR	5055773	Symbol	prefix		5055626						
ANR	5055774	Symbol	count_args		5055626						
ANR	5055775	Symbol	i		5055626						
ANR	5055776	Symbol	input_line		5055626						
ANR	5055777	Symbol	response_prefix		5055626						
ANR	5055778	Symbol	strdup		5055626						
ANR	5055779	Symbol	stderr		5055626						
ANR	5055780	Function	handle_async_mode_on	1944:0:52149:52386							
ANR	5055781	FunctionDef	handle_async_mode_on (char * * input_line)		5055780	0					
ANR	5055782	CompoundStatement		1945:0:52195:52386	5055780	0					
ANR	5055783	ExpressionStatement	pthread_mutex_lock ( & resultQueueLock )	1946:1:52198:52236	5055780	0	True				
ANR	5055784	CallExpression	pthread_mutex_lock ( & resultQueueLock )		5055780	0					
ANR	5055785	Callee	pthread_mutex_lock		5055780	0					
ANR	5055786	Identifier	pthread_mutex_lock		5055780	0					
ANR	5055787	ArgumentList	& resultQueueLock		5055780	1					
ANR	5055788	Argument	& resultQueueLock		5055780	0					
ANR	5055789	UnaryOperationExpression	& resultQueueLock		5055780	0					
ANR	5055790	UnaryOperator	&		5055780	0					
ANR	5055791	Identifier	resultQueueLock		5055780	1					
ANR	5055792	ExpressionStatement	async = true	1947:1:52239:52251	5055780	1	True				
ANR	5055793	AssignmentExpression	async = true		5055780	0		=			
ANR	5055794	Identifier	async		5055780	0					
ANR	5055795	Identifier	true		5055780	1					
ANR	5055796	ExpressionStatement	results_pending = false	1948:1:52254:52277	5055780	2	True				
ANR	5055797	AssignmentExpression	results_pending = false		5055780	0		=			
ANR	5055798	Identifier	results_pending		5055780	0					
ANR	5055799	Identifier	false		5055780	1					
ANR	5055800	ExpressionStatement	pthread_mutex_unlock ( & resultQueueLock )	1949:1:52280:52320	5055780	3	True				
ANR	5055801	CallExpression	pthread_mutex_unlock ( & resultQueueLock )		5055780	0					
ANR	5055802	Callee	pthread_mutex_unlock		5055780	0					
ANR	5055803	Identifier	pthread_mutex_unlock		5055780	0					
ANR	5055804	ArgumentList	& resultQueueLock		5055780	1					
ANR	5055805	Argument	& resultQueueLock		5055780	0					
ANR	5055806	UnaryOperationExpression	& resultQueueLock		5055780	0					
ANR	5055807	UnaryOperator	&		5055780	0					
ANR	5055808	Identifier	resultQueueLock		5055780	1					
ANR	5055809	ExpressionStatement	"gahp_printf ( ""S\\n"" )"	1951:1:52325:52343	5055780	4	True				
ANR	5055810	CallExpression	"gahp_printf ( ""S\\n"" )"		5055780	0					
ANR	5055811	Callee	gahp_printf		5055780	0					
ANR	5055812	Identifier	gahp_printf		5055780	0					
ANR	5055813	ArgumentList	"""S\\n"""		5055780	1					
ANR	5055814	Argument	"""S\\n"""		5055780	0					
ANR	5055815	PrimaryExpression	"""S\\n"""		5055780	0					
ANR	5055816	ExpressionStatement	free_args ( input_line )	1953:1:52348:52371	5055780	5	True				
ANR	5055817	CallExpression	free_args ( input_line )		5055780	0					
ANR	5055818	Callee	free_args		5055780	0					
ANR	5055819	Identifier	free_args		5055780	0					
ANR	5055820	ArgumentList	input_line		5055780	1					
ANR	5055821	Argument	input_line		5055780	0					
ANR	5055822	Identifier	input_line		5055780	0					
ANR	5055823	ReturnStatement	return 0 ;	1955:1:52376:52384	5055780	6	True				
ANR	5055824	PrimaryExpression	0		5055780	0					
ANR	5055825	ReturnType	int		5055780	1					
ANR	5055826	Identifier	handle_async_mode_on		5055780	2					
ANR	5055827	ParameterList	char * * input_line		5055780	3					
ANR	5055828	Parameter	char * * input_line	1944:26:52175:52191	5055780	0	True				
ANR	5055829	ParameterType	char * *		5055780	0					
ANR	5055830	Identifier	input_line		5055780	1					
ANR	5055831	CFGEntryNode	ENTRY		5055780		True				
ANR	5055832	CFGExitNode	EXIT		5055780		True				
ANR	5055833	Symbol	async		5055780						
ANR	5055834	Symbol	true		5055780						
ANR	5055835	Symbol	false		5055780						
ANR	5055836	Symbol	input_line		5055780						
ANR	5055837	Symbol	& resultQueueLock		5055780						
ANR	5055838	Symbol	results_pending		5055780						
ANR	5055839	Function	handle_async_mode_off	1963:0:52602:52841							
ANR	5055840	FunctionDef	handle_async_mode_off (char * * input_line)		5055839	0					
ANR	5055841	CompoundStatement		1964:0:52649:52841	5055839	0					
ANR	5055842	ExpressionStatement	pthread_mutex_lock ( & resultQueueLock )	1965:1:52652:52690	5055839	0	True				
ANR	5055843	CallExpression	pthread_mutex_lock ( & resultQueueLock )		5055839	0					
ANR	5055844	Callee	pthread_mutex_lock		5055839	0					
ANR	5055845	Identifier	pthread_mutex_lock		5055839	0					
ANR	5055846	ArgumentList	& resultQueueLock		5055839	1					
ANR	5055847	Argument	& resultQueueLock		5055839	0					
ANR	5055848	UnaryOperationExpression	& resultQueueLock		5055839	0					
ANR	5055849	UnaryOperator	&		5055839	0					
ANR	5055850	Identifier	resultQueueLock		5055839	1					
ANR	5055851	ExpressionStatement	async = false	1966:1:52693:52706	5055839	1	True				
ANR	5055852	AssignmentExpression	async = false		5055839	0		=			
ANR	5055853	Identifier	async		5055839	0					
ANR	5055854	Identifier	false		5055839	1					
ANR	5055855	ExpressionStatement	results_pending = false	1967:1:52709:52732	5055839	2	True				
ANR	5055856	AssignmentExpression	results_pending = false		5055839	0		=			
ANR	5055857	Identifier	results_pending		5055839	0					
ANR	5055858	Identifier	false		5055839	1					
ANR	5055859	ExpressionStatement	pthread_mutex_unlock ( & resultQueueLock )	1968:1:52735:52775	5055839	3	True				
ANR	5055860	CallExpression	pthread_mutex_unlock ( & resultQueueLock )		5055839	0					
ANR	5055861	Callee	pthread_mutex_unlock		5055839	0					
ANR	5055862	Identifier	pthread_mutex_unlock		5055839	0					
ANR	5055863	ArgumentList	& resultQueueLock		5055839	1					
ANR	5055864	Argument	& resultQueueLock		5055839	0					
ANR	5055865	UnaryOperationExpression	& resultQueueLock		5055839	0					
ANR	5055866	UnaryOperator	&		5055839	0					
ANR	5055867	Identifier	resultQueueLock		5055839	1					
ANR	5055868	ExpressionStatement	"gahp_printf ( ""S\\n"" )"	1970:1:52780:52798	5055839	4	True				
ANR	5055869	CallExpression	"gahp_printf ( ""S\\n"" )"		5055839	0					
ANR	5055870	Callee	gahp_printf		5055839	0					
ANR	5055871	Identifier	gahp_printf		5055839	0					
ANR	5055872	ArgumentList	"""S\\n"""		5055839	1					
ANR	5055873	Argument	"""S\\n"""		5055839	0					
ANR	5055874	PrimaryExpression	"""S\\n"""		5055839	0					
ANR	5055875	ExpressionStatement	free_args ( input_line )	1972:1:52803:52826	5055839	5	True				
ANR	5055876	CallExpression	free_args ( input_line )		5055839	0					
ANR	5055877	Callee	free_args		5055839	0					
ANR	5055878	Identifier	free_args		5055839	0					
ANR	5055879	ArgumentList	input_line		5055839	1					
ANR	5055880	Argument	input_line		5055839	0					
ANR	5055881	Identifier	input_line		5055839	0					
ANR	5055882	ReturnStatement	return 0 ;	1974:1:52831:52839	5055839	6	True				
ANR	5055883	PrimaryExpression	0		5055839	0					
ANR	5055884	ReturnType	int		5055839	1					
ANR	5055885	Identifier	handle_async_mode_off		5055839	2					
ANR	5055886	ParameterList	char * * input_line		5055839	3					
ANR	5055887	Parameter	char * * input_line	1963:27:52629:52645	5055839	0	True				
ANR	5055888	ParameterType	char * *		5055839	0					
ANR	5055889	Identifier	input_line		5055839	1					
ANR	5055890	CFGEntryNode	ENTRY		5055839		True				
ANR	5055891	CFGExitNode	EXIT		5055839		True				
ANR	5055892	Symbol	async		5055839						
ANR	5055893	Symbol	false		5055839						
ANR	5055894	Symbol	input_line		5055839						
ANR	5055895	Symbol	& resultQueueLock		5055839						
ANR	5055896	Symbol	results_pending		5055839						
ANR	5055897	Function	handle_commands	1982:0:53040:53161							
ANR	5055898	FunctionDef	handle_commands (char * * input_line)		5055897	0					
ANR	5055899	CompoundStatement		1983:0:53081:53161	5055897	0					
ANR	5055900	ExpressionStatement	"gahp_printf ( ""S %s\\n"" , commands_list )"	1984:1:53084:53120	5055897	0	True				
ANR	5055901	CallExpression	"gahp_printf ( ""S %s\\n"" , commands_list )"		5055897	0					
ANR	5055902	Callee	gahp_printf		5055897	0					
ANR	5055903	Identifier	gahp_printf		5055897	0					
ANR	5055904	ArgumentList	"""S %s\\n"""		5055897	1					
ANR	5055905	Argument	"""S %s\\n"""		5055897	0					
ANR	5055906	PrimaryExpression	"""S %s\\n"""		5055897	0					
ANR	5055907	Argument	commands_list		5055897	1					
ANR	5055908	Identifier	commands_list		5055897	0					
ANR	5055909	ExpressionStatement	free_args ( input_line )	1985:1:53123:53146	5055897	1	True				
ANR	5055910	CallExpression	free_args ( input_line )		5055897	0					
ANR	5055911	Callee	free_args		5055897	0					
ANR	5055912	Identifier	free_args		5055897	0					
ANR	5055913	ArgumentList	input_line		5055897	1					
ANR	5055914	Argument	input_line		5055897	0					
ANR	5055915	Identifier	input_line		5055897	0					
ANR	5055916	ReturnStatement	return 0 ;	1987:1:53151:53159	5055897	2	True				
ANR	5055917	PrimaryExpression	0		5055897	0					
ANR	5055918	ReturnType	int		5055897	1					
ANR	5055919	Identifier	handle_commands		5055897	2					
ANR	5055920	ParameterList	char * * input_line		5055897	3					
ANR	5055921	Parameter	char * * input_line	1982:21:53061:53077	5055897	0	True				
ANR	5055922	ParameterType	char * *		5055897	0					
ANR	5055923	Identifier	input_line		5055897	1					
ANR	5055924	CFGEntryNode	ENTRY		5055897		True				
ANR	5055925	CFGExitNode	EXIT		5055897		True				
ANR	5055926	Symbol	commands_list		5055897						
ANR	5055927	Symbol	input_line		5055897						
ANR	5055928	Function	handle_quit	1995:0:53365:53521							
ANR	5055929	FunctionDef	handle_quit (char * * input_line)		5055928	0					
ANR	5055930	CompoundStatement		1996:0:53402:53521	5055928	0					
ANR	5055931	ExpressionStatement	"gahp_printf ( ""S\\n"" )"	1997:1:53405:53423	5055928	0	True				
ANR	5055932	CallExpression	"gahp_printf ( ""S\\n"" )"		5055928	0					
ANR	5055933	Callee	gahp_printf		5055928	0					
ANR	5055934	Identifier	gahp_printf		5055928	0					
ANR	5055935	ArgumentList	"""S\\n"""		5055928	1					
ANR	5055936	Argument	"""S\\n"""		5055928	0					
ANR	5055937	PrimaryExpression	"""S\\n"""		5055928	0					
ANR	5055938	ExpressionStatement	free_args ( input_line )	1999:1:53427:53450	5055928	1	True				
ANR	5055939	CallExpression	free_args ( input_line )		5055928	0					
ANR	5055940	Callee	free_args		5055928	0					
ANR	5055941	Identifier	free_args		5055928	0					
ANR	5055942	ArgumentList	input_line		5055928	1					
ANR	5055943	Argument	input_line		5055928	0					
ANR	5055944	Identifier	input_line		5055928	0					
ANR	5055945	IfStatement	if ( response_prefix != NULL )		5055928	2					
ANR	5055946	Condition	response_prefix != NULL	2001:5:53459:53481	5055928	0	True				
ANR	5055947	EqualityExpression	response_prefix != NULL		5055928	0		!=			
ANR	5055948	Identifier	response_prefix		5055928	0					
ANR	5055949	Identifier	NULL		5055928	1					
ANR	5055950	ExpressionStatement	free ( response_prefix )	2002:2:53486:53507	5055928	1	True				
ANR	5055951	CallExpression	free ( response_prefix )		5055928	0					
ANR	5055952	Callee	free		5055928	0					
ANR	5055953	Identifier	free		5055928	0					
ANR	5055954	ArgumentList	response_prefix		5055928	1					
ANR	5055955	Argument	response_prefix		5055928	0					
ANR	5055956	Identifier	response_prefix		5055928	0					
ANR	5055957	ExpressionStatement	exit ( 0 )	2004:1:53512:53519	5055928	3	True				
ANR	5055958	CallExpression	exit ( 0 )		5055928	0					
ANR	5055959	Callee	exit		5055928	0					
ANR	5055960	Identifier	exit		5055928	0					
ANR	5055961	ArgumentList	0		5055928	1					
ANR	5055962	Argument	0		5055928	0					
ANR	5055963	PrimaryExpression	0		5055928	0					
ANR	5055964	ReturnType	int		5055928	1					
ANR	5055965	Identifier	handle_quit		5055928	2					
ANR	5055966	ParameterList	char * * input_line		5055928	3					
ANR	5055967	Parameter	char * * input_line	1995:17:53382:53398	5055928	0	True				
ANR	5055968	ParameterType	char * *		5055928	0					
ANR	5055969	Identifier	input_line		5055928	1					
ANR	5055970	CFGEntryNode	ENTRY		5055928		True				
ANR	5055971	CFGExitNode	EXIT		5055928		True				
ANR	5055972	Symbol	NULL		5055928						
ANR	5055973	Symbol	input_line		5055928						
ANR	5055974	Symbol	response_prefix		5055928						
ANR	5055975	Function	handle_cache_proxy_from_file	2012:0:53752:54594							
ANR	5055976	FunctionDef	handle_cache_proxy_from_file (char * * input_line)		5055975	0					
ANR	5055977	CompoundStatement		2013:0:53805:54594	5055975	0					
ANR	5055978	IdentifierDeclStatement	"char * reqid , * filename ;"	2014:1:53808:53830	5055975	0	True				
ANR	5055979	IdentifierDecl	* reqid		5055975	0					
ANR	5055980	IdentifierDeclType	char *		5055975	0					
ANR	5055981	Identifier	reqid		5055975	1					
ANR	5055982	IdentifierDecl	* filename		5055975	1					
ANR	5055983	IdentifierDeclType	char *		5055975	0					
ANR	5055984	Identifier	filename		5055975	1					
ANR	5055985	IdentifierDeclStatement	AbsCreamProxy * cp = NULL ;	2015:1:53833:53857	5055975	1	True				
ANR	5055986	IdentifierDecl	* cp = NULL		5055975	0					
ANR	5055987	IdentifierDeclType	AbsCreamProxy *		5055975	0					
ANR	5055988	Identifier	cp		5055975	1					
ANR	5055989	AssignmentExpression	* cp = NULL		5055975	2		=			
ANR	5055990	Identifier	NULL		5055975	0					
ANR	5055991	Identifier	NULL		5055975	1					
ANR	5055992	IfStatement	if ( count_args ( input_line ) != 3 )		5055975	2					
ANR	5055993	Condition	count_args ( input_line ) != 3	2017:6:53866:53894	5055975	0	True				
ANR	5055994	EqualityExpression	count_args ( input_line ) != 3		5055975	0		!=			
ANR	5055995	CallExpression	count_args ( input_line )		5055975	0					
ANR	5055996	Callee	count_args		5055975	0					
ANR	5055997	Identifier	count_args		5055975	0					
ANR	5055998	ArgumentList	input_line		5055975	1					
ANR	5055999	Argument	input_line		5055975	0					
ANR	5056000	Identifier	input_line		5055975	0					
ANR	5056001	PrimaryExpression	3		5055975	1					
ANR	5056002	CompoundStatement		5:38:92:92	5055975	1					
ANR	5056003	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	2018:2:53902:53923	5055975	0	True				
ANR	5056004	CallExpression	HANDLE_SYNTAX_ERROR ( )		5055975	0					
ANR	5056005	Callee	HANDLE_SYNTAX_ERROR		5055975	0					
ANR	5056006	Identifier	HANDLE_SYNTAX_ERROR		5055975	0					
ANR	5056007	ArgumentList			5055975	1					
ANR	5056008	ExpressionStatement	"process_string_arg ( input_line [ 1 ] , & reqid )"	2021:1:53931:53974	5055975	3	True				
ANR	5056009	CallExpression	"process_string_arg ( input_line [ 1 ] , & reqid )"		5055975	0					
ANR	5056010	Callee	process_string_arg		5055975	0					
ANR	5056011	Identifier	process_string_arg		5055975	0					
ANR	5056012	ArgumentList	input_line [ 1 ]		5055975	1					
ANR	5056013	Argument	input_line [ 1 ]		5055975	0					
ANR	5056014	ArrayIndexing	input_line [ 1 ]		5055975	0					
ANR	5056015	Identifier	input_line		5055975	0					
ANR	5056016	PrimaryExpression	1		5055975	1					
ANR	5056017	Argument	& reqid		5055975	1					
ANR	5056018	UnaryOperationExpression	& reqid		5055975	0					
ANR	5056019	UnaryOperator	&		5055975	0					
ANR	5056020	Identifier	reqid		5055975	1					
ANR	5056021	ExpressionStatement	"process_string_arg ( input_line [ 2 ] , & filename )"	2022:1:53977:54023	5055975	4	True				
ANR	5056022	CallExpression	"process_string_arg ( input_line [ 2 ] , & filename )"		5055975	0					
ANR	5056023	Callee	process_string_arg		5055975	0					
ANR	5056024	Identifier	process_string_arg		5055975	0					
ANR	5056025	ArgumentList	input_line [ 2 ]		5055975	1					
ANR	5056026	Argument	input_line [ 2 ]		5055975	0					
ANR	5056027	ArrayIndexing	input_line [ 2 ]		5055975	0					
ANR	5056028	Identifier	input_line		5055975	0					
ANR	5056029	PrimaryExpression	2		5055975	1					
ANR	5056030	Argument	& filename		5055975	1					
ANR	5056031	UnaryOperationExpression	& filename		5055975	0					
ANR	5056032	UnaryOperator	&		5055975	0					
ANR	5056033	Identifier	filename		5055975	1					
ANR	5056034	IfStatement	if ( reqid == NULL || filename == NULL )		5055975	5					
ANR	5056035	Condition	reqid == NULL || filename == NULL	2023:6:54031:54063	5055975	0	True				
ANR	5056036	OrExpression	reqid == NULL || filename == NULL		5055975	0		||			
ANR	5056037	EqualityExpression	reqid == NULL		5055975	0		==			
ANR	5056038	Identifier	reqid		5055975	0					
ANR	5056039	Identifier	NULL		5055975	1					
ANR	5056040	EqualityExpression	filename == NULL		5055975	1		==			
ANR	5056041	Identifier	filename		5055975	0					
ANR	5056042	Identifier	NULL		5055975	1					
ANR	5056043	CompoundStatement		11:42:261:261	5055975	1					
ANR	5056044	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	2024:2:54071:54092	5055975	0	True				
ANR	5056045	CallExpression	HANDLE_SYNTAX_ERROR ( )		5055975	0					
ANR	5056046	Callee	HANDLE_SYNTAX_ERROR		5055975	0					
ANR	5056047	Identifier	HANDLE_SYNTAX_ERROR		5055975	0					
ANR	5056048	ArgumentList			5055975	1					
ANR	5056049	TryStatement	try		5055975	6					
ANR	5056050	CompoundStatement		15:5:297:297	5055975	0					
ANR	5056051	ExpressionStatement	"cp = CreamProxyFactory :: make_CreamProxyDelegate ( ""XXX"" , DEFAULT_TIMEOUT )"		5055975	0					
ANR	5056052	AssignmentExpression	"cp = CreamProxyFactory :: make_CreamProxyDelegate ( ""XXX"" , DEFAULT_TIMEOUT )"		5055975	0		=			
ANR	5056053	Identifier	cp		5055975	0					
ANR	5056054	CallExpression	"CreamProxyFactory :: make_CreamProxyDelegate ( ""XXX"" , DEFAULT_TIMEOUT )"		5055975	1					
ANR	5056055	Callee	CreamProxyFactory :: make_CreamProxyDelegate		5055975	0					
ANR	5056056	Identifier	CreamProxyFactory :: make_CreamProxyDelegate		5055975	0					
ANR	5056057	ArgumentList	"""XXX"""		5055975	1					
ANR	5056058	Argument	"""XXX"""		5055975	0					
ANR	5056059	PrimaryExpression	"""XXX"""		5055975	0					
ANR	5056060	Argument	DEFAULT_TIMEOUT		5055975	1					
ANR	5056061	Identifier	DEFAULT_TIMEOUT		5055975	0					
ANR	5056062	ExpressionStatement	check_for_factory_error ( cp )		5055975	1					
ANR	5056063	CallExpression	check_for_factory_error ( cp )		5055975	0					
ANR	5056064	Callee	check_for_factory_error		5055975	0					
ANR	5056065	Identifier	check_for_factory_error		5055975	0					
ANR	5056066	ArgumentList	cp		5055975	1					
ANR	5056067	Argument	cp		5055975	0					
ANR	5056068	Identifier	cp		5055975	0					
ANR	5056069	ExpressionStatement	cp -> setCredential ( filename )		5055975	2					
ANR	5056070	CallExpression	cp -> setCredential ( filename )		5055975	0					
ANR	5056071	Callee	cp -> setCredential		5055975	0					
ANR	5056072	PtrMemberAccess	cp -> setCredential		5055975	0					
ANR	5056073	Identifier	cp		5055975	0					
ANR	5056074	Identifier	setCredential		5055975	1					
ANR	5056075	ArgumentList	filename		5055975	1					
ANR	5056076	Argument	filename		5055975	0					
ANR	5056077	Identifier	filename		5055975	0					
ANR	5056078	Statement	delete		5055975	3					
ANR	5056079	ExpressionStatement	cp		5055975	4					
ANR	5056080	Identifier	cp		5055975	0					
ANR	5056081	CatchList			5055975	1					
ANR	5056082	CatchStatement	catch ( std :: exception & ex )		5055975	0					
ANR	5056083	Identifier	ex		5055975	0					
ANR	5056084	CompoundStatement		22:32:602:602	5055975	1					
ANR	5056085	Statement	delete	2035:2:54412:54417	5055975	0	True				
ANR	5056086	ExpressionStatement	cp	2035:9:54419:54421	5055975	1	True				
ANR	5056087	Identifier	cp		5055975	0					
ANR	5056088	ExpressionStatement	"gahp_printf ( ""E\\n"" )"	2036:2:54425:54443	5055975	2	True				
ANR	5056089	CallExpression	"gahp_printf ( ""E\\n"" )"		5055975	0					
ANR	5056090	Callee	gahp_printf		5055975	0					
ANR	5056091	Identifier	gahp_printf		5055975	0					
ANR	5056092	ArgumentList	"""E\\n"""		5055975	1					
ANR	5056093	Argument	"""E\\n"""		5055975	0					
ANR	5056094	PrimaryExpression	"""E\\n"""		5055975	0					
ANR	5056095	ExpressionStatement	free_args ( input_line )	2037:2:54447:54470	5055975	3	True				
ANR	5056096	CallExpression	free_args ( input_line )		5055975	0					
ANR	5056097	Callee	free_args		5055975	0					
ANR	5056098	Identifier	free_args		5055975	0					
ANR	5056099	ArgumentList	input_line		5055975	1					
ANR	5056100	Argument	input_line		5055975	0					
ANR	5056101	Identifier	input_line		5055975	0					
ANR	5056102	ReturnStatement	return 1 ;	2039:2:54475:54483	5055975	4	True				
ANR	5056103	PrimaryExpression	1		5055975	0					
ANR	5056104	ExpressionStatement	"gahp_printf ( ""S\\n"" )"	2042:1:54490:54508	5055975	7	True				
ANR	5056105	CallExpression	"gahp_printf ( ""S\\n"" )"		5055975	0					
ANR	5056106	Callee	gahp_printf		5055975	0					
ANR	5056107	Identifier	gahp_printf		5055975	0					
ANR	5056108	ArgumentList	"""S\\n"""		5055975	1					
ANR	5056109	Argument	"""S\\n"""		5055975	0					
ANR	5056110	PrimaryExpression	"""S\\n"""		5055975	0					
ANR	5056111	ExpressionStatement	proxies [ string ( reqid ) ] = string ( filename )	2044:1:54512:54553	5055975	8	True				
ANR	5056112	AssignmentExpression	proxies [ string ( reqid ) ] = string ( filename )		5055975	0		=			
ANR	5056113	ArrayIndexing	proxies [ string ( reqid ) ]		5055975	0					
ANR	5056114	Identifier	proxies		5055975	0					
ANR	5056115	CallExpression	string ( reqid )		5055975	1					
ANR	5056116	Callee	string		5055975	0					
ANR	5056117	Identifier	string		5055975	0					
ANR	5056118	ArgumentList	reqid		5055975	1					
ANR	5056119	Argument	reqid		5055975	0					
ANR	5056120	Identifier	reqid		5055975	0					
ANR	5056121	CallExpression	string ( filename )		5055975	1					
ANR	5056122	Callee	string		5055975	0					
ANR	5056123	Identifier	string		5055975	0					
ANR	5056124	ArgumentList	filename		5055975	1					
ANR	5056125	Argument	filename		5055975	0					
ANR	5056126	Identifier	filename		5055975	0					
ANR	5056127	ExpressionStatement	free_args ( input_line )	2046:1:54557:54580	5055975	9	True				
ANR	5056128	CallExpression	free_args ( input_line )		5055975	0					
ANR	5056129	Callee	free_args		5055975	0					
ANR	5056130	Identifier	free_args		5055975	0					
ANR	5056131	ArgumentList	input_line		5055975	1					
ANR	5056132	Argument	input_line		5055975	0					
ANR	5056133	Identifier	input_line		5055975	0					
ANR	5056134	ReturnStatement	return 0 ;	2048:1:54584:54592	5055975	10	True				
ANR	5056135	PrimaryExpression	0		5055975	0					
ANR	5056136	ReturnType	int		5055975	1					
ANR	5056137	Identifier	handle_cache_proxy_from_file		5055975	2					
ANR	5056138	ParameterList	char * * input_line		5055975	3					
ANR	5056139	Parameter	char * * input_line	2012:34:53786:53802	5055975	0	True				
ANR	5056140	ParameterType	char * *		5055975	0					
ANR	5056141	Identifier	input_line		5055975	1					
ANR	5056142	CFGEntryNode	ENTRY		5055975		True				
ANR	5056143	CFGExitNode	EXIT		5055975		True				
ANR	5056144	CFGErrorNode	ERROR		5055975		True				
ANR	5056145	Symbol	* proxies		5055975						
ANR	5056146	Symbol	* input_line		5055975						
ANR	5056147	Symbol	& reqid		5055975						
ANR	5056148	Symbol	NULL		5055975						
ANR	5056149	Symbol	string		5055975						
ANR	5056150	Symbol	count_args		5055975						
ANR	5056151	Symbol	& filename		5055975						
ANR	5056152	Symbol	* string		5055975						
ANR	5056153	Symbol	input_line		5055975						
ANR	5056154	Symbol	cp		5055975						
ANR	5056155	Symbol	reqid		5055975						
ANR	5056156	Symbol	filename		5055975						
ANR	5056157	Symbol	proxies		5055975						
ANR	5056158	Function	handle_use_cached_proxy	2056:0:54822:55403							
ANR	5056159	FunctionDef	handle_use_cached_proxy (char * * input_line)		5056158	0					
ANR	5056160	CompoundStatement		2057:0:54871:55403	5056158	0					
ANR	5056161	IdentifierDeclStatement	char * reqid ;	2058:1:54874:54885	5056158	0	True				
ANR	5056162	IdentifierDecl	* reqid		5056158	0					
ANR	5056163	IdentifierDeclType	char *		5056158	0					
ANR	5056164	Identifier	reqid		5056158	1					
ANR	5056165	IdentifierDeclStatement	"map < string , string > :: const_iterator it ;"	2059:1:54888:54926	5056158	1	True				
ANR	5056166	IdentifierDecl	it		5056158	0					
ANR	5056167	IdentifierDeclType	"map < string , string > :: const_iterator"		5056158	0					
ANR	5056168	Identifier	it		5056158	1					
ANR	5056169	IfStatement	if ( count_args ( input_line ) != 2 )		5056158	2					
ANR	5056170	Condition	count_args ( input_line ) != 2	2061:6:54935:54963	5056158	0	True				
ANR	5056171	EqualityExpression	count_args ( input_line ) != 2		5056158	0		!=			
ANR	5056172	CallExpression	count_args ( input_line )		5056158	0					
ANR	5056173	Callee	count_args		5056158	0					
ANR	5056174	Identifier	count_args		5056158	0					
ANR	5056175	ArgumentList	input_line		5056158	1					
ANR	5056176	Argument	input_line		5056158	0					
ANR	5056177	Identifier	input_line		5056158	0					
ANR	5056178	PrimaryExpression	2		5056158	1					
ANR	5056179	CompoundStatement		5:38:95:95	5056158	1					
ANR	5056180	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	2062:2:54971:54992	5056158	0	True				
ANR	5056181	CallExpression	HANDLE_SYNTAX_ERROR ( )		5056158	0					
ANR	5056182	Callee	HANDLE_SYNTAX_ERROR		5056158	0					
ANR	5056183	Identifier	HANDLE_SYNTAX_ERROR		5056158	0					
ANR	5056184	ArgumentList			5056158	1					
ANR	5056185	ExpressionStatement	"process_string_arg ( input_line [ 1 ] , & reqid )"	2065:1:54999:55042	5056158	3	True				
ANR	5056186	CallExpression	"process_string_arg ( input_line [ 1 ] , & reqid )"		5056158	0					
ANR	5056187	Callee	process_string_arg		5056158	0					
ANR	5056188	Identifier	process_string_arg		5056158	0					
ANR	5056189	ArgumentList	input_line [ 1 ]		5056158	1					
ANR	5056190	Argument	input_line [ 1 ]		5056158	0					
ANR	5056191	ArrayIndexing	input_line [ 1 ]		5056158	0					
ANR	5056192	Identifier	input_line		5056158	0					
ANR	5056193	PrimaryExpression	1		5056158	1					
ANR	5056194	Argument	& reqid		5056158	1					
ANR	5056195	UnaryOperationExpression	& reqid		5056158	0					
ANR	5056196	UnaryOperator	&		5056158	0					
ANR	5056197	Identifier	reqid		5056158	1					
ANR	5056198	IfStatement	if ( reqid == NULL )		5056158	4					
ANR	5056199	Condition	reqid == NULL	2066:6:55050:55062	5056158	0	True				
ANR	5056200	EqualityExpression	reqid == NULL		5056158	0		==			
ANR	5056201	Identifier	reqid		5056158	0					
ANR	5056202	Identifier	NULL		5056158	1					
ANR	5056203	CompoundStatement		10:22:194:194	5056158	1					
ANR	5056204	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	2067:2:55070:55091	5056158	0	True				
ANR	5056205	CallExpression	HANDLE_SYNTAX_ERROR ( )		5056158	0					
ANR	5056206	Callee	HANDLE_SYNTAX_ERROR		5056158	0					
ANR	5056207	Identifier	HANDLE_SYNTAX_ERROR		5056158	0					
ANR	5056208	ArgumentList			5056158	1					
ANR	5056209	ExpressionStatement	sleep ( 1 )	2071:1:55137:55145	5056158	5	True				
ANR	5056210	CallExpression	sleep ( 1 )		5056158	0					
ANR	5056211	Callee	sleep		5056158	0					
ANR	5056212	Identifier	sleep		5056158	0					
ANR	5056213	ArgumentList	1		5056158	1					
ANR	5056214	Argument	1		5056158	0					
ANR	5056215	PrimaryExpression	1		5056158	0					
ANR	5056216	ExpressionStatement	it = proxies . find ( string ( reqid ) )	2072:1:55148:55180	5056158	6	True				
ANR	5056217	AssignmentExpression	it = proxies . find ( string ( reqid ) )		5056158	0		=			
ANR	5056218	Identifier	it		5056158	0					
ANR	5056219	CallExpression	proxies . find ( string ( reqid ) )		5056158	1					
ANR	5056220	Callee	proxies . find		5056158	0					
ANR	5056221	MemberAccess	proxies . find		5056158	0					
ANR	5056222	Identifier	proxies		5056158	0					
ANR	5056223	Identifier	find		5056158	1					
ANR	5056224	ArgumentList	string ( reqid )		5056158	1					
ANR	5056225	Argument	string ( reqid )		5056158	0					
ANR	5056226	CallExpression	string ( reqid )		5056158	0					
ANR	5056227	Callee	string		5056158	0					
ANR	5056228	Identifier	string		5056158	0					
ANR	5056229	ArgumentList	reqid		5056158	1					
ANR	5056230	Argument	reqid		5056158	0					
ANR	5056231	Identifier	reqid		5056158	0					
ANR	5056232	IfStatement	if ( it != proxies . end ( ) )		5056158	7					
ANR	5056233	Condition	it != proxies . end ( )	2074:5:55188:55206	5056158	0	True				
ANR	5056234	EqualityExpression	it != proxies . end ( )		5056158	0		!=			
ANR	5056235	Identifier	it		5056158	0					
ANR	5056236	CallExpression	proxies . end ( )		5056158	1					
ANR	5056237	Callee	proxies . end		5056158	0					
ANR	5056238	MemberAccess	proxies . end		5056158	0					
ANR	5056239	Identifier	proxies		5056158	0					
ANR	5056240	Identifier	end		5056158	1					
ANR	5056241	ArgumentList			5056158	1					
ANR	5056242	CompoundStatement		18:26:337:337	5056158	1					
ANR	5056243	ExpressionStatement	"gahp_printf ( ""S\\n"" )"	2075:2:55213:55231	5056158	0	True				
ANR	5056244	CallExpression	"gahp_printf ( ""S\\n"" )"		5056158	0					
ANR	5056245	Callee	gahp_printf		5056158	0					
ANR	5056246	Identifier	gahp_printf		5056158	0					
ANR	5056247	ArgumentList	"""S\\n"""		5056158	1					
ANR	5056248	Argument	"""S\\n"""		5056158	0					
ANR	5056249	PrimaryExpression	"""S\\n"""		5056158	0					
ANR	5056250	ExpressionStatement	active_proxy = it -> second	2076:2:55235:55260	5056158	1	True				
ANR	5056251	AssignmentExpression	active_proxy = it -> second		5056158	0		=			
ANR	5056252	Identifier	active_proxy		5056158	0					
ANR	5056253	PtrMemberAccess	it -> second		5056158	1					
ANR	5056254	Identifier	it		5056158	0					
ANR	5056255	Identifier	second		5056158	1					
ANR	5056256	ElseStatement	else		5056158	0					
ANR	5056257	CompoundStatement		22:6:399:399	5056158	0					
ANR	5056258	ExpressionStatement	"gahp_printf ( ""F unable\\\\ to\\\\ locate\\\\ proxy\\\\ cached\\\\ under\\\\ key:\\\\ %s\\n"" , reqid )"	2079:2:55275:55358	5056158	0	True				
ANR	5056259	CallExpression	"gahp_printf ( ""F unable\\\\ to\\\\ locate\\\\ proxy\\\\ cached\\\\ under\\\\ key:\\\\ %s\\n"" , reqid )"		5056158	0					
ANR	5056260	Callee	gahp_printf		5056158	0					
ANR	5056261	Identifier	gahp_printf		5056158	0					
ANR	5056262	ArgumentList	"""F unable\\\\ to\\\\ locate\\\\ proxy\\\\ cached\\\\ under\\\\ key:\\\\ %s\\n"""		5056158	1					
ANR	5056263	Argument	"""F unable\\\\ to\\\\ locate\\\\ proxy\\\\ cached\\\\ under\\\\ key:\\\\ %s\\n"""		5056158	0					
ANR	5056264	PrimaryExpression	"""F unable\\\\ to\\\\ locate\\\\ proxy\\\\ cached\\\\ under\\\\ key:\\\\ %s\\n"""		5056158	0					
ANR	5056265	Argument	reqid		5056158	1					
ANR	5056266	Identifier	reqid		5056158	0					
ANR	5056267	ExpressionStatement	free_args ( input_line )	2082:1:55365:55388	5056158	8	True				
ANR	5056268	CallExpression	free_args ( input_line )		5056158	0					
ANR	5056269	Callee	free_args		5056158	0					
ANR	5056270	Identifier	free_args		5056158	0					
ANR	5056271	ArgumentList	input_line		5056158	1					
ANR	5056272	Argument	input_line		5056158	0					
ANR	5056273	Identifier	input_line		5056158	0					
ANR	5056274	ReturnStatement	return 0 ;	2084:1:55393:55401	5056158	9	True				
ANR	5056275	PrimaryExpression	0		5056158	0					
ANR	5056276	ReturnType	int		5056158	1					
ANR	5056277	Identifier	handle_use_cached_proxy		5056158	2					
ANR	5056278	ParameterList	char * * input_line		5056158	3					
ANR	5056279	Parameter	char * * input_line	2056:29:54851:54867	5056158	0	True				
ANR	5056280	ParameterType	char * *		5056158	0					
ANR	5056281	Identifier	input_line		5056158	1					
ANR	5056282	CFGEntryNode	ENTRY		5056158		True				
ANR	5056283	CFGExitNode	EXIT		5056158		True				
ANR	5056284	Symbol	active_proxy		5056158						
ANR	5056285	Symbol	* input_line		5056158						
ANR	5056286	Symbol	& reqid		5056158						
ANR	5056287	Symbol	NULL		5056158						
ANR	5056288	Symbol	proxies . find		5056158						
ANR	5056289	Symbol	string		5056158						
ANR	5056290	Symbol	count_args		5056158						
ANR	5056291	Symbol	input_line		5056158						
ANR	5056292	Symbol	it		5056158						
ANR	5056293	Symbol	reqid		5056158						
ANR	5056294	Symbol	it -> second		5056158						
ANR	5056295	Symbol	* it		5056158						
ANR	5056296	Symbol	proxies . end		5056158						
ANR	5056297	Symbol	proxies		5056158						
ANR	5056298	Function	handle_uncache_proxy	2092:0:55625:56203							
ANR	5056299	FunctionDef	handle_uncache_proxy (char * * input_line)		5056298	0					
ANR	5056300	CompoundStatement		2093:0:55671:56203	5056298	0					
ANR	5056301	IdentifierDeclStatement	char * reqid ;	2094:1:55674:55685	5056298	0	True				
ANR	5056302	IdentifierDecl	* reqid		5056298	0					
ANR	5056303	IdentifierDeclType	char *		5056298	0					
ANR	5056304	Identifier	reqid		5056298	1					
ANR	5056305	IdentifierDeclStatement	"map < string , string > :: const_iterator it ;"	2095:1:55688:55726	5056298	1	True				
ANR	5056306	IdentifierDecl	it		5056298	0					
ANR	5056307	IdentifierDeclType	"map < string , string > :: const_iterator"		5056298	0					
ANR	5056308	Identifier	it		5056298	1					
ANR	5056309	IfStatement	if ( count_args ( input_line ) != 2 )		5056298	2					
ANR	5056310	Condition	count_args ( input_line ) != 2	2097:6:55735:55763	5056298	0	True				
ANR	5056311	EqualityExpression	count_args ( input_line ) != 2		5056298	0		!=			
ANR	5056312	CallExpression	count_args ( input_line )		5056298	0					
ANR	5056313	Callee	count_args		5056298	0					
ANR	5056314	Identifier	count_args		5056298	0					
ANR	5056315	ArgumentList	input_line		5056298	1					
ANR	5056316	Argument	input_line		5056298	0					
ANR	5056317	Identifier	input_line		5056298	0					
ANR	5056318	PrimaryExpression	2		5056298	1					
ANR	5056319	CompoundStatement		5:38:95:95	5056298	1					
ANR	5056320	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	2098:2:55771:55792	5056298	0	True				
ANR	5056321	CallExpression	HANDLE_SYNTAX_ERROR ( )		5056298	0					
ANR	5056322	Callee	HANDLE_SYNTAX_ERROR		5056298	0					
ANR	5056323	Identifier	HANDLE_SYNTAX_ERROR		5056298	0					
ANR	5056324	ArgumentList			5056298	1					
ANR	5056325	ExpressionStatement	"process_string_arg ( input_line [ 1 ] , & reqid )"	2101:1:55799:55842	5056298	3	True				
ANR	5056326	CallExpression	"process_string_arg ( input_line [ 1 ] , & reqid )"		5056298	0					
ANR	5056327	Callee	process_string_arg		5056298	0					
ANR	5056328	Identifier	process_string_arg		5056298	0					
ANR	5056329	ArgumentList	input_line [ 1 ]		5056298	1					
ANR	5056330	Argument	input_line [ 1 ]		5056298	0					
ANR	5056331	ArrayIndexing	input_line [ 1 ]		5056298	0					
ANR	5056332	Identifier	input_line		5056298	0					
ANR	5056333	PrimaryExpression	1		5056298	1					
ANR	5056334	Argument	& reqid		5056298	1					
ANR	5056335	UnaryOperationExpression	& reqid		5056298	0					
ANR	5056336	UnaryOperator	&		5056298	0					
ANR	5056337	Identifier	reqid		5056298	1					
ANR	5056338	IfStatement	if ( reqid == NULL )		5056298	4					
ANR	5056339	Condition	reqid == NULL	2102:6:55850:55862	5056298	0	True				
ANR	5056340	EqualityExpression	reqid == NULL		5056298	0		==			
ANR	5056341	Identifier	reqid		5056298	0					
ANR	5056342	Identifier	NULL		5056298	1					
ANR	5056343	CompoundStatement		10:22:194:194	5056298	1					
ANR	5056344	ExpressionStatement	HANDLE_SYNTAX_ERROR ( )	2103:2:55870:55891	5056298	0	True				
ANR	5056345	CallExpression	HANDLE_SYNTAX_ERROR ( )		5056298	0					
ANR	5056346	Callee	HANDLE_SYNTAX_ERROR		5056298	0					
ANR	5056347	Identifier	HANDLE_SYNTAX_ERROR		5056298	0					
ANR	5056348	ArgumentList			5056298	1					
ANR	5056349	ExpressionStatement	sleep ( 1 )	2107:1:55936:55944	5056298	5	True				
ANR	5056350	CallExpression	sleep ( 1 )		5056298	0					
ANR	5056351	Callee	sleep		5056298	0					
ANR	5056352	Identifier	sleep		5056298	0					
ANR	5056353	ArgumentList	1		5056298	1					
ANR	5056354	Argument	1		5056298	0					
ANR	5056355	PrimaryExpression	1		5056298	0					
ANR	5056356	ExpressionStatement	it = proxies . find ( string ( reqid ) )	2108:1:55947:55979	5056298	6	True				
ANR	5056357	AssignmentExpression	it = proxies . find ( string ( reqid ) )		5056298	0		=			
ANR	5056358	Identifier	it		5056298	0					
ANR	5056359	CallExpression	proxies . find ( string ( reqid ) )		5056298	1					
ANR	5056360	Callee	proxies . find		5056298	0					
ANR	5056361	MemberAccess	proxies . find		5056298	0					
ANR	5056362	Identifier	proxies		5056298	0					
ANR	5056363	Identifier	find		5056298	1					
ANR	5056364	ArgumentList	string ( reqid )		5056298	1					
ANR	5056365	Argument	string ( reqid )		5056298	0					
ANR	5056366	CallExpression	string ( reqid )		5056298	0					
ANR	5056367	Callee	string		5056298	0					
ANR	5056368	Identifier	string		5056298	0					
ANR	5056369	ArgumentList	reqid		5056298	1					
ANR	5056370	Argument	reqid		5056298	0					
ANR	5056371	Identifier	reqid		5056298	0					
ANR	5056372	IfStatement	if ( it != proxies . end ( ) )		5056298	7					
ANR	5056373	Condition	it != proxies . end ( )	2110:5:55987:56005	5056298	0	True				
ANR	5056374	EqualityExpression	it != proxies . end ( )		5056298	0		!=			
ANR	5056375	Identifier	it		5056298	0					
ANR	5056376	CallExpression	proxies . end ( )		5056298	1					
ANR	5056377	Callee	proxies . end		5056298	0					
ANR	5056378	MemberAccess	proxies . end		5056298	0					
ANR	5056379	Identifier	proxies		5056298	0					
ANR	5056380	Identifier	end		5056298	1					
ANR	5056381	ArgumentList			5056298	1					
ANR	5056382	CompoundStatement		18:26:336:336	5056298	1					
ANR	5056383	ExpressionStatement	"gahp_printf ( ""S\\n"" )"	2111:2:56012:56030	5056298	0	True				
ANR	5056384	CallExpression	"gahp_printf ( ""S\\n"" )"		5056298	0					
ANR	5056385	Callee	gahp_printf		5056298	0					
ANR	5056386	Identifier	gahp_printf		5056298	0					
ANR	5056387	ArgumentList	"""S\\n"""		5056298	1					
ANR	5056388	Argument	"""S\\n"""		5056298	0					
ANR	5056389	PrimaryExpression	"""S\\n"""		5056298	0					
ANR	5056390	ExpressionStatement	proxies . erase ( string ( reqid ) )	2112:2:56034:56062	5056298	1	True				
ANR	5056391	CallExpression	proxies . erase ( string ( reqid ) )		5056298	0					
ANR	5056392	Callee	proxies . erase		5056298	0					
ANR	5056393	MemberAccess	proxies . erase		5056298	0					
ANR	5056394	Identifier	proxies		5056298	0					
ANR	5056395	Identifier	erase		5056298	1					
ANR	5056396	ArgumentList	string ( reqid )		5056298	1					
ANR	5056397	Argument	string ( reqid )		5056298	0					
ANR	5056398	CallExpression	string ( reqid )		5056298	0					
ANR	5056399	Callee	string		5056298	0					
ANR	5056400	Identifier	string		5056298	0					
ANR	5056401	ArgumentList	reqid		5056298	1					
ANR	5056402	Argument	reqid		5056298	0					
ANR	5056403	Identifier	reqid		5056298	0					
ANR	5056404	ElseStatement	else		5056298	0					
ANR	5056405	CompoundStatement		21:8:400:400	5056298	0					
ANR	5056406	ExpressionStatement	"gahp_printf ( ""F unable\\\\ to\\\\ locate\\\\ proxy\\\\ cached\\\\ under\\\\ key:\\\\ %s\\n"" , reqid )"	2114:2:56076:56159	5056298	0	True				
ANR	5056407	CallExpression	"gahp_printf ( ""F unable\\\\ to\\\\ locate\\\\ proxy\\\\ cached\\\\ under\\\\ key:\\\\ %s\\n"" , reqid )"		5056298	0					
ANR	5056408	Callee	gahp_printf		5056298	0					
ANR	5056409	Identifier	gahp_printf		5056298	0					
ANR	5056410	ArgumentList	"""F unable\\\\ to\\\\ locate\\\\ proxy\\\\ cached\\\\ under\\\\ key:\\\\ %s\\n"""		5056298	1					
ANR	5056411	Argument	"""F unable\\\\ to\\\\ locate\\\\ proxy\\\\ cached\\\\ under\\\\ key:\\\\ %s\\n"""		5056298	0					
ANR	5056412	PrimaryExpression	"""F unable\\\\ to\\\\ locate\\\\ proxy\\\\ cached\\\\ under\\\\ key:\\\\ %s\\n"""		5056298	0					
ANR	5056413	Argument	reqid		5056298	1					
ANR	5056414	Identifier	reqid		5056298	0					
ANR	5056415	ExpressionStatement	free_args ( input_line )	2117:1:56166:56189	5056298	8	True				
ANR	5056416	CallExpression	free_args ( input_line )		5056298	0					
ANR	5056417	Callee	free_args		5056298	0					
ANR	5056418	Identifier	free_args		5056298	0					
ANR	5056419	ArgumentList	input_line		5056298	1					
ANR	5056420	Argument	input_line		5056298	0					
ANR	5056421	Identifier	input_line		5056298	0					
ANR	5056422	ReturnStatement	return 0 ;	2119:1:56193:56201	5056298	9	True				
ANR	5056423	PrimaryExpression	0		5056298	0					
ANR	5056424	ReturnType	int		5056298	1					
ANR	5056425	Identifier	handle_uncache_proxy		5056298	2					
ANR	5056426	ParameterList	char * * input_line		5056298	3					
ANR	5056427	Parameter	char * * input_line	2092:26:55651:55667	5056298	0	True				
ANR	5056428	ParameterType	char * *		5056298	0					
ANR	5056429	Identifier	input_line		5056298	1					
ANR	5056430	CFGEntryNode	ENTRY		5056298		True				
ANR	5056431	CFGExitNode	EXIT		5056298		True				
ANR	5056432	Symbol	* input_line		5056298						
ANR	5056433	Symbol	& reqid		5056298						
ANR	5056434	Symbol	NULL		5056298						
ANR	5056435	Symbol	proxies . find		5056298						
ANR	5056436	Symbol	string		5056298						
ANR	5056437	Symbol	proxies . end		5056298						
ANR	5056438	Symbol	count_args		5056298						
ANR	5056439	Symbol	input_line		5056298						
ANR	5056440	Symbol	proxies		5056298						
ANR	5056441	Symbol	it		5056298						
ANR	5056442	Symbol	reqid		5056298						
ANR	5056443	Function	read_command	2128:0:56478:57841							
ANR	5056444	FunctionDef	read_command ()		5056443	0					
ANR	5056445	CompoundStatement		2129:0:56500:57841	5056443	0					
ANR	5056446	Statement	static	2130:1:56503:56508	5056443	0	True				
ANR	5056447	IdentifierDeclStatement	char * buf = NULL ;	2130:8:56510:56526	5056443	1	True				
ANR	5056448	IdentifierDecl	* buf = NULL		5056443	0					
ANR	5056449	IdentifierDeclType	char *		5056443	0					
ANR	5056450	Identifier	buf		5056443	1					
ANR	5056451	AssignmentExpression	* buf = NULL		5056443	2		=			
ANR	5056452	Identifier	NULL		5056443	0					
ANR	5056453	Identifier	NULL		5056443	1					
ANR	5056454	IdentifierDeclStatement	char * * command_argv ;	2131:1:56529:56548	5056443	2	True				
ANR	5056455	IdentifierDecl	* * command_argv		5056443	0					
ANR	5056456	IdentifierDeclType	char * *		5056443	0					
ANR	5056457	Identifier	command_argv		5056443	1					
ANR	5056458	IdentifierDeclStatement	int ibuf = 0 ;	2132:1:56551:56563	5056443	3	True				
ANR	5056459	IdentifierDecl	ibuf = 0		5056443	0					
ANR	5056460	IdentifierDeclType	int		5056443	0					
ANR	5056461	Identifier	ibuf		5056443	1					
ANR	5056462	AssignmentExpression	ibuf = 0		5056443	2		=			
ANR	5056463	Identifier	ibuf		5056443	0					
ANR	5056464	PrimaryExpression	0		5056443	1					
ANR	5056465	IdentifierDeclStatement	int iargv = 0 ;	2133:1:56566:56579	5056443	4	True				
ANR	5056466	IdentifierDecl	iargv = 0		5056443	0					
ANR	5056467	IdentifierDeclType	int		5056443	0					
ANR	5056468	Identifier	iargv		5056443	1					
ANR	5056469	AssignmentExpression	iargv = 0		5056443	2		=			
ANR	5056470	Identifier	iargv		5056443	0					
ANR	5056471	PrimaryExpression	0		5056443	1					
ANR	5056472	IdentifierDeclStatement	int result = 0 ;	2134:1:56582:56596	5056443	5	True				
ANR	5056473	IdentifierDecl	result = 0		5056443	0					
ANR	5056474	IdentifierDeclType	int		5056443	0					
ANR	5056475	Identifier	result		5056443	1					
ANR	5056476	AssignmentExpression	result = 0		5056443	2		=			
ANR	5056477	Identifier	result		5056443	0					
ANR	5056478	PrimaryExpression	0		5056443	1					
ANR	5056479	IdentifierDeclStatement	int argv_size = 500 ;	2135:1:56599:56618	5056443	6	True				
ANR	5056480	IdentifierDecl	argv_size = 500		5056443	0					
ANR	5056481	IdentifierDeclType	int		5056443	0					
ANR	5056482	Identifier	argv_size		5056443	1					
ANR	5056483	AssignmentExpression	argv_size = 500		5056443	2		=			
ANR	5056484	Identifier	argv_size		5056443	0					
ANR	5056485	PrimaryExpression	500		5056443	1					
ANR	5056486	IfStatement	if ( buf == NULL )		5056443	7					
ANR	5056487	Condition	buf == NULL	2137:6:56628:56638	5056443	0	True				
ANR	5056488	EqualityExpression	buf == NULL		5056443	0		==			
ANR	5056489	Identifier	buf		5056443	0					
ANR	5056490	Identifier	NULL		5056443	1					
ANR	5056491	CompoundStatement		9:20:141:141	5056443	1					
ANR	5056492	ExpressionStatement	buf = ( char * ) malloc ( 1024 * 500 )	2138:2:56646:56679	5056443	0	True				
ANR	5056493	AssignmentExpression	buf = ( char * ) malloc ( 1024 * 500 )		5056443	0		=			
ANR	5056494	Identifier	buf		5056443	0					
ANR	5056495	CastExpression	( char * ) malloc ( 1024 * 500 )		5056443	1					
ANR	5056496	CastTarget	char *		5056443	0					
ANR	5056497	CallExpression	malloc ( 1024 * 500 )		5056443	1					
ANR	5056498	Callee	malloc		5056443	0					
ANR	5056499	Identifier	malloc		5056443	0					
ANR	5056500	ArgumentList	1024 * 500		5056443	1					
ANR	5056501	Argument	1024 * 500		5056443	0					
ANR	5056502	MultiplicativeExpression	1024 * 500		5056443	0		*			
ANR	5056503	PrimaryExpression	1024		5056443	0					
ANR	5056504	PrimaryExpression	500		5056443	1					
ANR	5056505	ExpressionStatement	command_argv = ( char * * ) malloc ( argv_size * sizeof ( char * ) )	2141:1:56687:56744	5056443	8	True				
ANR	5056506	AssignmentExpression	command_argv = ( char * * ) malloc ( argv_size * sizeof ( char * ) )		5056443	0		=			
ANR	5056507	Identifier	command_argv		5056443	0					
ANR	5056508	CastExpression	( char * * ) malloc ( argv_size * sizeof ( char * ) )		5056443	1					
ANR	5056509	CastTarget	char * *		5056443	0					
ANR	5056510	CallExpression	malloc ( argv_size * sizeof ( char * ) )		5056443	1					
ANR	5056511	Callee	malloc		5056443	0					
ANR	5056512	Identifier	malloc		5056443	0					
ANR	5056513	ArgumentList	argv_size * sizeof ( char * )		5056443	1					
ANR	5056514	Argument	argv_size * sizeof ( char * )		5056443	0					
ANR	5056515	MultiplicativeExpression	argv_size * sizeof ( char * )		5056443	0		*			
ANR	5056516	Identifier	argv_size		5056443	0					
ANR	5056517	SizeofExpression	sizeof ( char * )		5056443	1					
ANR	5056518	Sizeof	sizeof		5056443	0					
ANR	5056519	SizeofOperand	char *		5056443	1					
ANR	5056520	WhileStatement	while ( 1 )		5056443	9					
ANR	5056521	Condition	1	2143:7:56755:56755	5056443	0	True				
ANR	5056522	PrimaryExpression	1		5056443	0					
ANR	5056523	CompoundStatement		15:10:257:257	5056443	1					
ANR	5056524	ExpressionStatement	"result = read ( 0 , & ( buf [ ibuf ] ) , 1 )"	2144:2:56762:56796	5056443	0	True				
ANR	5056525	AssignmentExpression	"result = read ( 0 , & ( buf [ ibuf ] ) , 1 )"		5056443	0		=			
ANR	5056526	Identifier	result		5056443	0					
ANR	5056527	CallExpression	"read ( 0 , & ( buf [ ibuf ] ) , 1 )"		5056443	1					
ANR	5056528	Callee	read		5056443	0					
ANR	5056529	Identifier	read		5056443	0					
ANR	5056530	ArgumentList	0		5056443	1					
ANR	5056531	Argument	0		5056443	0					
ANR	5056532	PrimaryExpression	0		5056443	0					
ANR	5056533	Argument	& ( buf [ ibuf ] )		5056443	1					
ANR	5056534	UnaryOperationExpression	& ( buf [ ibuf ] )		5056443	0					
ANR	5056535	UnaryOperator	&		5056443	0					
ANR	5056536	ArrayIndexing	buf [ ibuf ]		5056443	1					
ANR	5056537	Identifier	buf		5056443	0					
ANR	5056538	Identifier	ibuf		5056443	1					
ANR	5056539	Argument	1		5056443	2					
ANR	5056540	PrimaryExpression	1		5056443	0					
ANR	5056541	IfStatement	if ( result < 0 )		5056443	1					
ANR	5056542	Condition	result < 0	2146:6:56807:56816	5056443	0	True				
ANR	5056543	RelationalExpression	result < 0		5056443	0		<			
ANR	5056544	Identifier	result		5056443	0					
ANR	5056545	PrimaryExpression	0		5056443	1					
ANR	5056546	ExpressionStatement	exit ( 2 )	2147:3:56831:56838	5056443	1	True				
ANR	5056547	CallExpression	exit ( 2 )		5056443	0					
ANR	5056548	Callee	exit		5056443	0					
ANR	5056549	Identifier	exit		5056443	0					
ANR	5056550	ArgumentList	2		5056443	1					
ANR	5056551	Argument	2		5056443	0					
ANR	5056552	PrimaryExpression	2		5056443	0					
ANR	5056553	IfStatement	if ( result == 0 )		5056443	2					
ANR	5056554	Condition	result == 0	2149:6:56850:56860	5056443	0	True				
ANR	5056555	EqualityExpression	result == 0		5056443	0		==			
ANR	5056556	Identifier	result		5056443	0					
ANR	5056557	PrimaryExpression	0		5056443	1					
ANR	5056558	ExpressionStatement	exit ( 3 )	2150:3:56873:56880	5056443	1	True				
ANR	5056559	CallExpression	exit ( 3 )		5056443	0					
ANR	5056560	Callee	exit		5056443	0					
ANR	5056561	Identifier	exit		5056443	0					
ANR	5056562	ArgumentList	3		5056443	1					
ANR	5056563	Argument	3		5056443	0					
ANR	5056564	PrimaryExpression	3		5056443	0					
ANR	5056565	IfStatement	if ( ibuf > 0 && buf [ ibuf - 1 ] == '\\\\' )		5056443	3					
ANR	5056566	Condition	ibuf > 0 && buf [ ibuf - 1 ] == '\\\\'	2154:7:57011:57041	5056443	0	True				
ANR	5056567	AndExpression	ibuf > 0 && buf [ ibuf - 1 ] == '\\\\'		5056443	0		&&			
ANR	5056568	RelationalExpression	ibuf > 0		5056443	0		>			
ANR	5056569	Identifier	ibuf		5056443	0					
ANR	5056570	PrimaryExpression	0		5056443	1					
ANR	5056571	EqualityExpression	buf [ ibuf - 1 ] == '\\\\'		5056443	1		==			
ANR	5056572	ArrayIndexing	buf [ ibuf - 1 ]		5056443	0					
ANR	5056573	Identifier	buf		5056443	0					
ANR	5056574	AdditiveExpression	ibuf - 1		5056443	1		-			
ANR	5056575	Identifier	ibuf		5056443	0					
ANR	5056576	PrimaryExpression	1		5056443	1					
ANR	5056577	PrimaryExpression	'\\\\'		5056443	1					
ANR	5056578	CompoundStatement		26:41:544:544	5056443	1					
ANR	5056579	ExpressionStatement	buf [ ibuf - 1 ] = buf [ ibuf ]	2155:3:57050:57073	5056443	0	True				
ANR	5056580	AssignmentExpression	buf [ ibuf - 1 ] = buf [ ibuf ]		5056443	0		=			
ANR	5056581	ArrayIndexing	buf [ ibuf - 1 ]		5056443	0					
ANR	5056582	Identifier	buf		5056443	0					
ANR	5056583	AdditiveExpression	ibuf - 1		5056443	1		-			
ANR	5056584	Identifier	ibuf		5056443	0					
ANR	5056585	PrimaryExpression	1		5056443	1					
ANR	5056586	ArrayIndexing	buf [ ibuf ]		5056443	1					
ANR	5056587	Identifier	buf		5056443	0					
ANR	5056588	Identifier	ibuf		5056443	1					
ANR	5056589	ContinueStatement	continue ;	2156:3:57078:57086	5056443	1	True				
ANR	5056590	IfStatement	if ( buf [ ibuf ] == '\\r' )		5056443	4					
ANR	5056591	Condition	buf [ ibuf ] == '\\r'	2159:7:57140:57156	5056443	0	True				
ANR	5056592	EqualityExpression	buf [ ibuf ] == '\\r'		5056443	0		==			
ANR	5056593	ArrayIndexing	buf [ ibuf ]		5056443	0					
ANR	5056594	Identifier	buf		5056443	0					
ANR	5056595	Identifier	ibuf		5056443	1					
ANR	5056596	PrimaryExpression	'\\r'		5056443	1					
ANR	5056597	CompoundStatement		31:27:659:659	5056443	1					
ANR	5056598	ContinueStatement	continue ;	2160:3:57165:57173	5056443	0	True				
ANR	5056599	IfStatement	if ( buf [ ibuf ] == ' ' )		5056443	5					
ANR	5056600	Condition	buf [ ibuf ] == ' '	2163:7:57231:57246	5056443	0	True				
ANR	5056601	EqualityExpression	buf [ ibuf ] == ' '		5056443	0		==			
ANR	5056602	ArrayIndexing	buf [ ibuf ]		5056443	0					
ANR	5056603	Identifier	buf		5056443	0					
ANR	5056604	Identifier	ibuf		5056443	1					
ANR	5056605	PrimaryExpression	' '		5056443	1					
ANR	5056606	CompoundStatement		35:26:749:749	5056443	1					
ANR	5056607	ExpressionStatement	buf [ ibuf ] = '\\0'	2165:3:57256:57272	5056443	0	True				
ANR	5056608	AssignmentExpression	buf [ ibuf ] = '\\0'		5056443	0		=			
ANR	5056609	ArrayIndexing	buf [ ibuf ]		5056443	0					
ANR	5056610	Identifier	buf		5056443	0					
ANR	5056611	Identifier	ibuf		5056443	1					
ANR	5056612	PrimaryExpression	'\\0'		5056443	1					
ANR	5056613	ExpressionStatement	command_argv [ iargv ] = ( char * ) malloc ( ibuf + 5 )	2166:3:57277:57323	5056443	1	True				
ANR	5056614	AssignmentExpression	command_argv [ iargv ] = ( char * ) malloc ( ibuf + 5 )		5056443	0		=			
ANR	5056615	ArrayIndexing	command_argv [ iargv ]		5056443	0					
ANR	5056616	Identifier	command_argv		5056443	0					
ANR	5056617	Identifier	iargv		5056443	1					
ANR	5056618	CastExpression	( char * ) malloc ( ibuf + 5 )		5056443	1					
ANR	5056619	CastTarget	char *		5056443	0					
ANR	5056620	CallExpression	malloc ( ibuf + 5 )		5056443	1					
ANR	5056621	Callee	malloc		5056443	0					
ANR	5056622	Identifier	malloc		5056443	0					
ANR	5056623	ArgumentList	ibuf + 5		5056443	1					
ANR	5056624	Argument	ibuf + 5		5056443	0					
ANR	5056625	AdditiveExpression	ibuf + 5		5056443	0		+			
ANR	5056626	Identifier	ibuf		5056443	0					
ANR	5056627	PrimaryExpression	5		5056443	1					
ANR	5056628	ExpressionStatement	"strcpy ( command_argv [ iargv ] , buf )"	2167:3:57328:57359	5056443	2	True				
ANR	5056629	CallExpression	"strcpy ( command_argv [ iargv ] , buf )"		5056443	0					
ANR	5056630	Callee	strcpy		5056443	0					
ANR	5056631	Identifier	strcpy		5056443	0					
ANR	5056632	ArgumentList	command_argv [ iargv ]		5056443	1					
ANR	5056633	Argument	command_argv [ iargv ]		5056443	0					
ANR	5056634	ArrayIndexing	command_argv [ iargv ]		5056443	0					
ANR	5056635	Identifier	command_argv		5056443	0					
ANR	5056636	Identifier	iargv		5056443	1					
ANR	5056637	Argument	buf		5056443	1					
ANR	5056638	Identifier	buf		5056443	0					
ANR	5056639	ExpressionStatement	ibuf = 0	2168:3:57364:57372	5056443	3	True				
ANR	5056640	AssignmentExpression	ibuf = 0		5056443	0		=			
ANR	5056641	Identifier	ibuf		5056443	0					
ANR	5056642	PrimaryExpression	0		5056443	1					
ANR	5056643	ExpressionStatement	iargv ++	2169:3:57377:57384	5056443	4	True				
ANR	5056644	PostIncDecOperationExpression	iargv ++		5056443	0					
ANR	5056645	Identifier	iargv		5056443	0					
ANR	5056646	IncDec	++		5056443	1					
ANR	5056647	IfStatement	if ( iargv >= argv_size - 1 )		5056443	5					
ANR	5056648	Condition	iargv >= argv_size - 1	2170:8:57394:57415	5056443	0	True				
ANR	5056649	RelationalExpression	iargv >= argv_size - 1		5056443	0		>=			
ANR	5056650	Identifier	iargv		5056443	0					
ANR	5056651	AdditiveExpression	argv_size - 1		5056443	1		-			
ANR	5056652	Identifier	argv_size		5056443	0					
ANR	5056653	PrimaryExpression	1		5056443	1					
ANR	5056654	CompoundStatement		42:33:918:918	5056443	1					
ANR	5056655	ExpressionStatement	argv_size += 500	2171:4:57425:57441	5056443	0	True				
ANR	5056656	AssignmentExpression	argv_size += 500		5056443	0		+=			
ANR	5056657	Identifier	argv_size		5056443	0					
ANR	5056658	PrimaryExpression	500		5056443	1					
ANR	5056659	ExpressionStatement	"command_argv = ( char * * ) realloc ( command_argv , argv_size * sizeof ( char * ) )"	2172:4:57447:57534	5056443	1	True				
ANR	5056660	AssignmentExpression	"command_argv = ( char * * ) realloc ( command_argv , argv_size * sizeof ( char * ) )"		5056443	0		=			
ANR	5056661	Identifier	command_argv		5056443	0					
ANR	5056662	CastExpression	"( char * * ) realloc ( command_argv , argv_size * sizeof ( char * ) )"		5056443	1					
ANR	5056663	CastTarget	char * *		5056443	0					
ANR	5056664	CallExpression	"realloc ( command_argv , argv_size * sizeof ( char * ) )"		5056443	1					
ANR	5056665	Callee	realloc		5056443	0					
ANR	5056666	Identifier	realloc		5056443	0					
ANR	5056667	ArgumentList	command_argv		5056443	1					
ANR	5056668	Argument	command_argv		5056443	0					
ANR	5056669	Identifier	command_argv		5056443	0					
ANR	5056670	Argument	argv_size * sizeof ( char * )		5056443	1					
ANR	5056671	MultiplicativeExpression	argv_size * sizeof ( char * )		5056443	0		*			
ANR	5056672	Identifier	argv_size		5056443	0					
ANR	5056673	SizeofExpression	sizeof ( char * )		5056443	1					
ANR	5056674	Sizeof	sizeof		5056443	0					
ANR	5056675	SizeofOperand	char *		5056443	1					
ANR	5056676	ContinueStatement	continue ;	2175:3:57544:57552	5056443	6	True				
ANR	5056677	IfStatement	if ( buf [ ibuf ] == '\\n' )		5056443	6					
ANR	5056678	Condition	buf [ ibuf ] == '\\n'	2179:6:57627:57643	5056443	0	True				
ANR	5056679	EqualityExpression	buf [ ibuf ] == '\\n'		5056443	0		==			
ANR	5056680	ArrayIndexing	buf [ ibuf ]		5056443	0					
ANR	5056681	Identifier	buf		5056443	0					
ANR	5056682	Identifier	ibuf		5056443	1					
ANR	5056683	PrimaryExpression	'\\n'		5056443	1					
ANR	5056684	CompoundStatement		51:25:1145:1145	5056443	1					
ANR	5056685	ExpressionStatement	buf [ ibuf ] = '\\0'	2180:3:57652:57668	5056443	0	True				
ANR	5056686	AssignmentExpression	buf [ ibuf ] = '\\0'		5056443	0		=			
ANR	5056687	ArrayIndexing	buf [ ibuf ]		5056443	0					
ANR	5056688	Identifier	buf		5056443	0					
ANR	5056689	Identifier	ibuf		5056443	1					
ANR	5056690	PrimaryExpression	'\\0'		5056443	1					
ANR	5056691	ExpressionStatement	command_argv [ iargv ] = ( char * ) malloc ( ibuf + 5 )	2181:3:57673:57719	5056443	1	True				
ANR	5056692	AssignmentExpression	command_argv [ iargv ] = ( char * ) malloc ( ibuf + 5 )		5056443	0		=			
ANR	5056693	ArrayIndexing	command_argv [ iargv ]		5056443	0					
ANR	5056694	Identifier	command_argv		5056443	0					
ANR	5056695	Identifier	iargv		5056443	1					
ANR	5056696	CastExpression	( char * ) malloc ( ibuf + 5 )		5056443	1					
ANR	5056697	CastTarget	char *		5056443	0					
ANR	5056698	CallExpression	malloc ( ibuf + 5 )		5056443	1					
ANR	5056699	Callee	malloc		5056443	0					
ANR	5056700	Identifier	malloc		5056443	0					
ANR	5056701	ArgumentList	ibuf + 5		5056443	1					
ANR	5056702	Argument	ibuf + 5		5056443	0					
ANR	5056703	AdditiveExpression	ibuf + 5		5056443	0		+			
ANR	5056704	Identifier	ibuf		5056443	0					
ANR	5056705	PrimaryExpression	5		5056443	1					
ANR	5056706	ExpressionStatement	"strcpy ( command_argv [ iargv ] , buf )"	2182:3:57724:57755	5056443	2	True				
ANR	5056707	CallExpression	"strcpy ( command_argv [ iargv ] , buf )"		5056443	0					
ANR	5056708	Callee	strcpy		5056443	0					
ANR	5056709	Identifier	strcpy		5056443	0					
ANR	5056710	ArgumentList	command_argv [ iargv ]		5056443	1					
ANR	5056711	Argument	command_argv [ iargv ]		5056443	0					
ANR	5056712	ArrayIndexing	command_argv [ iargv ]		5056443	0					
ANR	5056713	Identifier	command_argv		5056443	0					
ANR	5056714	Identifier	iargv		5056443	1					
ANR	5056715	Argument	buf		5056443	1					
ANR	5056716	Identifier	buf		5056443	0					
ANR	5056717	ExpressionStatement	command_argv [ iargv + 1 ] = NULL	2183:3:57760:57790	5056443	3	True				
ANR	5056718	AssignmentExpression	command_argv [ iargv + 1 ] = NULL		5056443	0		=			
ANR	5056719	ArrayIndexing	command_argv [ iargv + 1 ]		5056443	0					
ANR	5056720	Identifier	command_argv		5056443	0					
ANR	5056721	AdditiveExpression	iargv + 1		5056443	1		+			
ANR	5056722	Identifier	iargv		5056443	0					
ANR	5056723	PrimaryExpression	1		5056443	1					
ANR	5056724	Identifier	NULL		5056443	1					
ANR	5056725	ReturnStatement	return command_argv ;	2185:3:57799:57818	5056443	4	True				
ANR	5056726	Identifier	command_argv		5056443	0					
ANR	5056727	ExpressionStatement	ibuf ++	2188:2:57829:57835	5056443	7	True				
ANR	5056728	PostIncDecOperationExpression	ibuf ++		5056443	0					
ANR	5056729	Identifier	ibuf		5056443	0					
ANR	5056730	IncDec	++		5056443	1					
ANR	5056731	ReturnType	char * *		5056443	1					
ANR	5056732	Identifier	read_command		5056443	2					
ANR	5056733	ParameterList			5056443	3					
ANR	5056734	CFGEntryNode	ENTRY		5056443		True				
ANR	5056735	CFGExitNode	EXIT		5056443		True				
ANR	5056736	Symbol	malloc		5056443						
ANR	5056737	Symbol	argv_size		5056443						
ANR	5056738	Symbol	* buf		5056443						
ANR	5056739	Symbol	NULL		5056443						
ANR	5056740	Symbol	read		5056443						
ANR	5056741	Symbol	command_argv		5056443						
ANR	5056742	Symbol	* iargv		5056443						
ANR	5056743	Symbol	realloc		5056443						
ANR	5056744	Symbol	result		5056443						
ANR	5056745	Symbol	buf		5056443						
ANR	5056746	Symbol	ibuf		5056443						
ANR	5056747	Symbol	iargv		5056443						
ANR	5056748	Symbol	* ibuf		5056443						
ANR	5056749	Symbol	* command_argv		5056443						
ANR	5056750	Function	process_request	2196:0:58061:59126							
ANR	5056751	FunctionDef	process_request (char * * input_line)		5056750	0					
ANR	5056752	CompoundStatement		2197:0:58103:59126	5056750	0					
ANR	5056753	ExpressionStatement	HANDLE ( initialize_from_file )	2198:1:58106:58134	5056750	0	True				
ANR	5056754	CallExpression	HANDLE ( initialize_from_file )		5056750	0					
ANR	5056755	Callee	HANDLE		5056750	0					
ANR	5056756	Identifier	HANDLE		5056750	0					
ANR	5056757	ArgumentList	initialize_from_file		5056750	1					
ANR	5056758	Argument	initialize_from_file		5056750	0					
ANR	5056759	Identifier	initialize_from_file		5056750	0					
ANR	5056760	ReturnType	void		5056750	1					
ANR	5056761	Identifier	process_request		5056750	2					
ANR	5056762	ParameterList	char * * input_line		5056750	3					
ANR	5056763	Parameter	char * * input_line	2196:22:58083:58099	5056750	0	True				
ANR	5056764	ParameterType	char * *		5056750	0					
ANR	5056765	Identifier	input_line		5056750	1					
ANR	5056766	CFGEntryNode	ENTRY		5056750		True				
ANR	5056767	CFGExitNode	EXIT		5056750		True				
ANR	5056768	Symbol	input_line		5056750						
ANR	5056769	Symbol	initialize_from_file		5056750						
ANR	5056770	Function	is_a_batchable_set	2238:0:59381:60043							
ANR	5056771	FunctionDef	"is_a_batchable_set (const vector < Request * > & list , const Request * b)"		5056770	0					
ANR	5056772	CompoundStatement		2238:74:59455:60043	5056770	0					
ANR	5056773	IdentifierDeclStatement	const Request * a = list . front ( ) ;	2239:1:59458:59489	5056770	0	True				
ANR	5056774	IdentifierDecl	* a = list . front ( )		5056770	0					
ANR	5056775	IdentifierDeclType	const Request *		5056770	0					
ANR	5056776	Identifier	a		5056770	1					
ANR	5056777	AssignmentExpression	* a = list . front ( )		5056770	2		=			
ANR	5056778	Identifier	a		5056770	0					
ANR	5056779	CallExpression	list . front ( )		5056770	1					
ANR	5056780	Callee	list . front		5056770	0					
ANR	5056781	MemberAccess	list . front		5056770	0					
ANR	5056782	Identifier	list		5056770	0					
ANR	5056783	Identifier	front		5056770	1					
ANR	5056784	ArgumentList			5056770	1					
ANR	5056785	IfStatement	if ( a == NULL || b == NULL )		5056770	1					
ANR	5056786	Condition	a == NULL || b == NULL	2240:6:59497:59518	5056770	0	True				
ANR	5056787	OrExpression	a == NULL || b == NULL		5056770	0		||			
ANR	5056788	EqualityExpression	a == NULL		5056770	0		==			
ANR	5056789	Identifier	a		5056770	0					
ANR	5056790	Identifier	NULL		5056770	1					
ANR	5056791	EqualityExpression	b == NULL		5056770	1		==			
ANR	5056792	Identifier	b		5056770	0					
ANR	5056793	Identifier	NULL		5056770	1					
ANR	5056794	CompoundStatement		3:31:66:66	5056770	1					
ANR	5056795	ExpressionStatement	"internal_error ( ""is_a_batchable_set passed a NULL pointer"" )"	2241:2:59526:59584	5056770	0	True				
ANR	5056796	CallExpression	"internal_error ( ""is_a_batchable_set passed a NULL pointer"" )"		5056770	0					
ANR	5056797	Callee	internal_error		5056770	0					
ANR	5056798	Identifier	internal_error		5056770	0					
ANR	5056799	ArgumentList	"""is_a_batchable_set passed a NULL pointer"""		5056770	1					
ANR	5056800	Argument	"""is_a_batchable_set passed a NULL pointer"""		5056770	0					
ANR	5056801	PrimaryExpression	"""is_a_batchable_set passed a NULL pointer"""		5056770	0					
ANR	5056802	IfStatement	if ( a -> bhandler == NULL && b -> bhandler == NULL )		5056770	2					
ANR	5056803	Condition	a -> bhandler == NULL && b -> bhandler == NULL	2243:4:59593:59634	5056770	0	True				
ANR	5056804	AndExpression	a -> bhandler == NULL && b -> bhandler == NULL		5056770	0		&&			
ANR	5056805	EqualityExpression	a -> bhandler == NULL		5056770	0		==			
ANR	5056806	PtrMemberAccess	a -> bhandler		5056770	0					
ANR	5056807	Identifier	a		5056770	0					
ANR	5056808	Identifier	bhandler		5056770	1					
ANR	5056809	Identifier	NULL		5056770	1					
ANR	5056810	EqualityExpression	b -> bhandler == NULL		5056770	1		==			
ANR	5056811	PtrMemberAccess	b -> bhandler		5056770	0					
ANR	5056812	Identifier	b		5056770	0					
ANR	5056813	Identifier	bhandler		5056770	1					
ANR	5056814	Identifier	NULL		5056770	1					
ANR	5056815	CompoundStatement		6:48:181:181	5056770	1					
ANR	5056816	ExpressionStatement	"internal_error ( ""is_a_batchable_set passed all NULL bhandler"" )"	2244:2:59641:59702	5056770	0	True				
ANR	5056817	CallExpression	"internal_error ( ""is_a_batchable_set passed all NULL bhandler"" )"		5056770	0					
ANR	5056818	Callee	internal_error		5056770	0					
ANR	5056819	Identifier	internal_error		5056770	0					
ANR	5056820	ArgumentList	"""is_a_batchable_set passed all NULL bhandler"""		5056770	1					
ANR	5056821	Argument	"""is_a_batchable_set passed all NULL bhandler"""		5056770	0					
ANR	5056822	PrimaryExpression	"""is_a_batchable_set passed all NULL bhandler"""		5056770	0					
ANR	5056823	IfStatement	if ( a -> bhandler != b -> bhandler )		5056770	3					
ANR	5056824	Condition	a -> bhandler != b -> bhandler	2246:4:59711:59736	5056770	0	True				
ANR	5056825	EqualityExpression	a -> bhandler != b -> bhandler		5056770	0		!=			
ANR	5056826	PtrMemberAccess	a -> bhandler		5056770	0					
ANR	5056827	Identifier	a		5056770	0					
ANR	5056828	Identifier	bhandler		5056770	1					
ANR	5056829	PtrMemberAccess	b -> bhandler		5056770	1					
ANR	5056830	Identifier	b		5056770	0					
ANR	5056831	Identifier	bhandler		5056770	1					
ANR	5056832	CompoundStatement		9:32:283:283	5056770	1					
ANR	5056833	ReturnStatement	return false ;	2247:2:59779:59791	5056770	0	True				
ANR	5056834	Identifier	false		5056770	0					
ANR	5056835	IfStatement	if ( a -> proxy != b -> proxy )		5056770	4					
ANR	5056836	Condition	a -> proxy != b -> proxy	2249:4:59800:59819	5056770	0	True				
ANR	5056837	EqualityExpression	a -> proxy != b -> proxy		5056770	0		!=			
ANR	5056838	PtrMemberAccess	a -> proxy		5056770	0					
ANR	5056839	Identifier	a		5056770	0					
ANR	5056840	Identifier	proxy		5056770	1					
ANR	5056841	PtrMemberAccess	b -> proxy		5056770	1					
ANR	5056842	Identifier	b		5056770	0					
ANR	5056843	Identifier	proxy		5056770	1					
ANR	5056844	CompoundStatement		12:26:366:366	5056770	1					
ANR	5056845	ReturnStatement	return false ;	2250:2:59858:59870	5056770	0	True				
ANR	5056846	Identifier	false		5056770	0					
ANR	5056847	IfStatement	if ( a -> requestcomp != b -> requestcomp )		5056770	5					
ANR	5056848	Condition	a -> requestcomp != b -> requestcomp	2252:4:59879:59910	5056770	0	True				
ANR	5056849	EqualityExpression	a -> requestcomp != b -> requestcomp		5056770	0		!=			
ANR	5056850	PtrMemberAccess	a -> requestcomp		5056770	0					
ANR	5056851	Identifier	a		5056770	0					
ANR	5056852	Identifier	requestcomp		5056770	1					
ANR	5056853	PtrMemberAccess	b -> requestcomp		5056770	1					
ANR	5056854	Identifier	b		5056770	0					
ANR	5056855	Identifier	requestcomp		5056770	1					
ANR	5056856	CompoundStatement		15:38:457:457	5056770	1					
ANR	5056857	ReturnStatement	return false ;	2253:2:59954:59966	5056770	0	True				
ANR	5056858	Identifier	false		5056770	0					
ANR	5056859	IfStatement	if ( a -> requestcomp )		5056770	6					
ANR	5056860	Condition	a -> requestcomp	2255:4:59975:59988	5056770	0	True				
ANR	5056861	PtrMemberAccess	a -> requestcomp		5056770	0					
ANR	5056862	Identifier	a		5056770	0					
ANR	5056863	Identifier	requestcomp		5056770	1					
ANR	5056864	CompoundStatement		18:20:535:535	5056770	1					
ANR	5056865	ReturnStatement	"return a -> requestcomp ( list , b ) ;"	2256:2:59995:60024	5056770	0	True				
ANR	5056866	CallExpression	"a -> requestcomp ( list , b )"		5056770	0					
ANR	5056867	Callee	a -> requestcomp		5056770	0					
ANR	5056868	PtrMemberAccess	a -> requestcomp		5056770	0					
ANR	5056869	Identifier	a		5056770	0					
ANR	5056870	Identifier	requestcomp		5056770	1					
ANR	5056871	ArgumentList	list		5056770	1					
ANR	5056872	Argument	list		5056770	0					
ANR	5056873	Identifier	list		5056770	0					
ANR	5056874	Argument	b		5056770	1					
ANR	5056875	Identifier	b		5056770	0					
ANR	5056876	ReturnStatement	return true ;	2258:1:60030:60041	5056770	7	True				
ANR	5056877	Identifier	true		5056770	0					
ANR	5056878	ReturnType	bool		5056770	1					
ANR	5056879	Identifier	is_a_batchable_set		5056770	2					
ANR	5056880	ParameterList	"const vector < Request * > & list , const Request * b"		5056770	3					
ANR	5056881	Parameter	const vector < Request * > & list	2238:25:59406:59433	5056770	0	True				
ANR	5056882	ParameterType	const vector < Request * > &		5056770	0					
ANR	5056883	Identifier	list		5056770	1					
ANR	5056884	Parameter	const Request * b	2238:55:59436:59451	5056770	1	True				
ANR	5056885	ParameterType	const Request *		5056770	0					
ANR	5056886	Identifier	b		5056770	1					
ANR	5056887	CFGEntryNode	ENTRY		5056770		True				
ANR	5056888	CFGExitNode	EXIT		5056770		True				
ANR	5056889	Symbol	b -> proxy		5056770						
ANR	5056890	Symbol	a		5056770						
ANR	5056891	Symbol	b		5056770						
ANR	5056892	Symbol	NULL		5056770						
ANR	5056893	Symbol	list . front		5056770						
ANR	5056894	Symbol	false		5056770						
ANR	5056895	Symbol	b -> requestcomp		5056770						
ANR	5056896	Symbol	* a		5056770						
ANR	5056897	Symbol	list		5056770						
ANR	5056898	Symbol	* b		5056770						
ANR	5056899	Symbol	a -> proxy		5056770						
ANR	5056900	Symbol	true		5056770						
ANR	5056901	Symbol	a -> bhandler		5056770						
ANR	5056902	Symbol	a -> requestcomp		5056770						
ANR	5056903	Symbol	b -> bhandler		5056770						
ANR	5056904	DeclStmt									
ANR	5056905	Decl							Request	Request *	req
ANR	5056906	DeclStmt									
ANR	5056907	Decl							vector < Request * >	vector < Request * >	rv
ANR	5056908	DeclStmt									
ANR	5056909	Decl							deque < Request * >	deque < Request * >	ReqDeque
ANR	5056910	DeclStmt									
ANR	5056911	Decl							int	int	size
ANR	5056912	DeclStmt									
ANR	5056913	Decl							ReqDeque :: iterator	ReqDeque :: iterator	it
ANR	5056914	DeclStmt									
ANR	5056915	Decl							char	char *	msg
ANR	5056916	DeclStmt									
ANR	5056917	Decl							vector < Request * > :: iterator	vector < Request * > :: iterator	it
ANR	5056918	DeclStmt									
ANR	5056919	Decl							int	int	i
ANR	5056920	DeclStmt									
ANR	5056921	Decl							glite :: ce :: cream_client_api :: util :: creamApiLogger	glite :: ce :: cream_client_api :: util :: creamApiLogger *	logger_instance
ANR	5056922	DeclStmt									
ANR	5056923	Decl							log4cpp :: Category	log4cpp :: Category *	log_dev
ANR	5056924	DeclStmt									
ANR	5056925	Decl							char	char * *	in
