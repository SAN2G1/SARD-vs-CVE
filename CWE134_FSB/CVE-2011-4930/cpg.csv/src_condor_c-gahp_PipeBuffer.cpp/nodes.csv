command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2630016	File	data/converged/CVE-2011-4930_htcondor/src_condor_c-gahp_PipeBuffer.cpp								
ANR	2630017	Function	PipeBuffer :: PipeBuffer	26:0:921:1145							
ANR	2630018	FunctionDef	PipeBuffer :: PipeBuffer (int _pipe_end)		2630017	0					
ANR	2630019	CompoundStatement		26:39:960:1145	2630017	0					
ANR	2630020	ExpressionStatement	pipe_end = _pipe_end	27:1:963:983	2630017	0	True				
ANR	2630021	AssignmentExpression	pipe_end = _pipe_end		2630017	0		=			
ANR	2630022	Identifier	pipe_end		2630017	0					
ANR	2630023	Identifier	_pipe_end		2630017	1					
ANR	2630024	ExpressionStatement	buffer . reserve ( 5000 )	28:2:987:1008	2630017	1	True				
ANR	2630025	CallExpression	buffer . reserve ( 5000 )		2630017	0					
ANR	2630026	Callee	buffer . reserve		2630017	0					
ANR	2630027	MemberAccess	buffer . reserve		2630017	0					
ANR	2630028	Identifier	buffer		2630017	0					
ANR	2630029	Identifier	reserve		2630017	1					
ANR	2630030	ArgumentList	5000		2630017	1					
ANR	2630031	Argument	5000		2630017	0					
ANR	2630032	PrimaryExpression	5000		2630017	0					
ANR	2630033	ExpressionStatement	error = false	29:1:1011:1024	2630017	2	True				
ANR	2630034	AssignmentExpression	error = false		2630017	0		=			
ANR	2630035	Identifier	error		2630017	0					
ANR	2630036	Identifier	false		2630017	1					
ANR	2630037	ExpressionStatement	eof = false	30:1:1027:1038	2630017	3	True				
ANR	2630038	AssignmentExpression	eof = false		2630017	0		=			
ANR	2630039	Identifier	eof		2630017	0					
ANR	2630040	Identifier	false		2630017	1					
ANR	2630041	ExpressionStatement	last_char_was_escape = false	31:1:1041:1069	2630017	4	True				
ANR	2630042	AssignmentExpression	last_char_was_escape = false		2630017	0		=			
ANR	2630043	Identifier	last_char_was_escape		2630017	0					
ANR	2630044	Identifier	false		2630017	1					
ANR	2630045	ExpressionStatement	readahead_length = 0	32:1:1072:1092	2630017	5	True				
ANR	2630046	AssignmentExpression	readahead_length = 0		2630017	0		=			
ANR	2630047	Identifier	readahead_length		2630017	0					
ANR	2630048	PrimaryExpression	0		2630017	1					
ANR	2630049	ExpressionStatement	readahead_index = 0	33:1:1095:1114	2630017	6	True				
ANR	2630050	AssignmentExpression	readahead_index = 0		2630017	0		=			
ANR	2630051	Identifier	readahead_index		2630017	0					
ANR	2630052	PrimaryExpression	0		2630017	1					
ANR	2630053	ExpressionStatement	readahead_buffer [ 0 ] = '\\0'	34:1:1117:1143	2630017	7	True				
ANR	2630054	AssignmentExpression	readahead_buffer [ 0 ] = '\\0'		2630017	0		=			
ANR	2630055	ArrayIndexing	readahead_buffer [ 0 ]		2630017	0					
ANR	2630056	Identifier	readahead_buffer		2630017	0					
ANR	2630057	PrimaryExpression	0		2630017	1					
ANR	2630058	PrimaryExpression	'\\0'		2630017	1					
ANR	2630059	Identifier	PipeBuffer :: PipeBuffer		2630017	1					
ANR	2630060	ParameterList	int _pipe_end		2630017	2					
ANR	2630061	Parameter	int _pipe_end	26:24:945:957	2630017	0	True				
ANR	2630062	ParameterType	int		2630017	0					
ANR	2630063	Identifier	_pipe_end		2630017	1					
ANR	2630064	CFGEntryNode	ENTRY		2630017		True				
ANR	2630065	CFGExitNode	EXIT		2630017		True				
ANR	2630066	Symbol	* readahead_buffer		2630017						
ANR	2630067	Symbol	pipe_end		2630017						
ANR	2630068	Symbol	last_char_was_escape		2630017						
ANR	2630069	Symbol	_pipe_end		2630017						
ANR	2630070	Symbol	false		2630017						
ANR	2630071	Symbol	readahead_index		2630017						
ANR	2630072	Symbol	readahead_buffer		2630017						
ANR	2630073	Symbol	buffer		2630017						
ANR	2630074	Symbol	readahead_length		2630017						
ANR	2630075	Symbol	error		2630017						
ANR	2630076	Symbol	eof		2630017						
ANR	2630077	Function	PipeBuffer :: PipeBuffer	37:0:1148:1351							
ANR	2630078	FunctionDef	PipeBuffer :: PipeBuffer ()		2630077	0					
ANR	2630079	CompoundStatement		37:25:1173:1351	2630077	0					
ANR	2630080	ExpressionStatement	pipe_end = - 1	38:1:1176:1189	2630077	0	True				
ANR	2630081	AssignmentExpression	pipe_end = - 1		2630077	0		=			
ANR	2630082	Identifier	pipe_end		2630077	0					
ANR	2630083	UnaryOperationExpression	- 1		2630077	1					
ANR	2630084	UnaryOperator	-		2630077	0					
ANR	2630085	PrimaryExpression	1		2630077	1					
ANR	2630086	ExpressionStatement	buffer . reserve ( 5000 )	39:2:1193:1214	2630077	1	True				
ANR	2630087	CallExpression	buffer . reserve ( 5000 )		2630077	0					
ANR	2630088	Callee	buffer . reserve		2630077	0					
ANR	2630089	MemberAccess	buffer . reserve		2630077	0					
ANR	2630090	Identifier	buffer		2630077	0					
ANR	2630091	Identifier	reserve		2630077	1					
ANR	2630092	ArgumentList	5000		2630077	1					
ANR	2630093	Argument	5000		2630077	0					
ANR	2630094	PrimaryExpression	5000		2630077	0					
ANR	2630095	ExpressionStatement	error = false	40:1:1217:1230	2630077	2	True				
ANR	2630096	AssignmentExpression	error = false		2630077	0		=			
ANR	2630097	Identifier	error		2630077	0					
ANR	2630098	Identifier	false		2630077	1					
ANR	2630099	ExpressionStatement	eof = false	41:1:1233:1244	2630077	3	True				
ANR	2630100	AssignmentExpression	eof = false		2630077	0		=			
ANR	2630101	Identifier	eof		2630077	0					
ANR	2630102	Identifier	false		2630077	1					
ANR	2630103	ExpressionStatement	last_char_was_escape = false	42:1:1247:1275	2630077	4	True				
ANR	2630104	AssignmentExpression	last_char_was_escape = false		2630077	0		=			
ANR	2630105	Identifier	last_char_was_escape		2630077	0					
ANR	2630106	Identifier	false		2630077	1					
ANR	2630107	ExpressionStatement	readahead_length = 0	43:1:1278:1298	2630077	5	True				
ANR	2630108	AssignmentExpression	readahead_length = 0		2630077	0		=			
ANR	2630109	Identifier	readahead_length		2630077	0					
ANR	2630110	PrimaryExpression	0		2630077	1					
ANR	2630111	ExpressionStatement	readahead_index = 0	44:1:1301:1320	2630077	6	True				
ANR	2630112	AssignmentExpression	readahead_index = 0		2630077	0		=			
ANR	2630113	Identifier	readahead_index		2630077	0					
ANR	2630114	PrimaryExpression	0		2630077	1					
ANR	2630115	ExpressionStatement	readahead_buffer [ 0 ] = '\\0'	45:1:1323:1349	2630077	7	True				
ANR	2630116	AssignmentExpression	readahead_buffer [ 0 ] = '\\0'		2630077	0		=			
ANR	2630117	ArrayIndexing	readahead_buffer [ 0 ]		2630077	0					
ANR	2630118	Identifier	readahead_buffer		2630077	0					
ANR	2630119	PrimaryExpression	0		2630077	1					
ANR	2630120	PrimaryExpression	'\\0'		2630077	1					
ANR	2630121	Identifier	PipeBuffer :: PipeBuffer		2630077	1					
ANR	2630122	ParameterList			2630077	2					
ANR	2630123	CFGEntryNode	ENTRY		2630077		True				
ANR	2630124	CFGExitNode	EXIT		2630077		True				
ANR	2630125	Symbol	* readahead_buffer		2630077						
ANR	2630126	Symbol	pipe_end		2630077						
ANR	2630127	Symbol	last_char_was_escape		2630077						
ANR	2630128	Symbol	false		2630077						
ANR	2630129	Symbol	readahead_index		2630077						
ANR	2630130	Symbol	readahead_buffer		2630077						
ANR	2630131	Symbol	buffer		2630077						
ANR	2630132	Symbol	readahead_length		2630077						
ANR	2630133	Symbol	error		2630077						
ANR	2630134	Symbol	eof		2630077						
ANR	2630135	Function	PipeBuffer :: GetNextLine	48:0:1354:2565							
ANR	2630136	FunctionDef	PipeBuffer :: GetNextLine ()		2630135	0					
ANR	2630137	CompoundStatement		49:27:1395:2565	2630135	0					
ANR	2630138	IfStatement	if ( readahead_length == 0 )		2630135	0					
ANR	2630139	Condition	readahead_length == 0	51:5:1403:1423	2630135	0	True				
ANR	2630140	EqualityExpression	readahead_length == 0		2630135	0		==			
ANR	2630141	Identifier	readahead_length		2630135	0					
ANR	2630142	PrimaryExpression	0		2630135	1					
ANR	2630143	CompoundStatement		3:28:30:30	2630135	1					
ANR	2630144	ExpressionStatement	"readahead_length = daemonCore -> Read_Pipe ( pipe_end , readahead_buffer , PIPE_BUFFER_READAHEAD_SIZE )"	54:2:1485:1581	2630135	0	True				
ANR	2630145	AssignmentExpression	"readahead_length = daemonCore -> Read_Pipe ( pipe_end , readahead_buffer , PIPE_BUFFER_READAHEAD_SIZE )"		2630135	0		=			
ANR	2630146	Identifier	readahead_length		2630135	0					
ANR	2630147	CallExpression	"daemonCore -> Read_Pipe ( pipe_end , readahead_buffer , PIPE_BUFFER_READAHEAD_SIZE )"		2630135	1					
ANR	2630148	Callee	daemonCore -> Read_Pipe		2630135	0					
ANR	2630149	PtrMemberAccess	daemonCore -> Read_Pipe		2630135	0					
ANR	2630150	Identifier	daemonCore		2630135	0					
ANR	2630151	Identifier	Read_Pipe		2630135	1					
ANR	2630152	ArgumentList	pipe_end		2630135	1					
ANR	2630153	Argument	pipe_end		2630135	0					
ANR	2630154	Identifier	pipe_end		2630135	0					
ANR	2630155	Argument	readahead_buffer		2630135	1					
ANR	2630156	Identifier	readahead_buffer		2630135	0					
ANR	2630157	Argument	PIPE_BUFFER_READAHEAD_SIZE		2630135	2					
ANR	2630158	Identifier	PIPE_BUFFER_READAHEAD_SIZE		2630135	0					
ANR	2630159	IfStatement	if ( readahead_length < 0 )		2630135	1					
ANR	2630160	Condition	readahead_length < 0	55:6:1589:1608	2630135	0	True				
ANR	2630161	RelationalExpression	readahead_length < 0		2630135	0		<			
ANR	2630162	Identifier	readahead_length		2630135	0					
ANR	2630163	PrimaryExpression	0		2630135	1					
ANR	2630164	CompoundStatement		7:28:215:215	2630135	1					
ANR	2630165	ExpressionStatement	error = true	56:3:1616:1628	2630135	0	True				
ANR	2630166	AssignmentExpression	error = true		2630135	0		=			
ANR	2630167	Identifier	error		2630135	0					
ANR	2630168	Identifier	true		2630135	1					
ANR	2630169	ExpressionStatement	"dprintf ( D_ALWAYS , ""error reading from DaemonCore pipe %d\\n"" , pipe_end )"	57:3:1633:1704	2630135	1	True				
ANR	2630170	CallExpression	"dprintf ( D_ALWAYS , ""error reading from DaemonCore pipe %d\\n"" , pipe_end )"		2630135	0					
ANR	2630171	Callee	dprintf		2630135	0					
ANR	2630172	Identifier	dprintf		2630135	0					
ANR	2630173	ArgumentList	D_ALWAYS		2630135	1					
ANR	2630174	Argument	D_ALWAYS		2630135	0					
ANR	2630175	Identifier	D_ALWAYS		2630135	0					
ANR	2630176	Argument	"""error reading from DaemonCore pipe %d\\n"""		2630135	1					
ANR	2630177	PrimaryExpression	"""error reading from DaemonCore pipe %d\\n"""		2630135	0					
ANR	2630178	Argument	pipe_end		2630135	2					
ANR	2630179	Identifier	pipe_end		2630135	0					
ANR	2630180	ReturnStatement	return NULL ;	58:3:1709:1720	2630135	2	True				
ANR	2630181	Identifier	NULL		2630135	0					
ANR	2630182	IfStatement	if ( readahead_length == 0 )		2630135	2					
ANR	2630183	Condition	readahead_length == 0	60:6:1732:1752	2630135	0	True				
ANR	2630184	EqualityExpression	readahead_length == 0		2630135	0		==			
ANR	2630185	Identifier	readahead_length		2630135	0					
ANR	2630186	PrimaryExpression	0		2630135	1					
ANR	2630187	CompoundStatement		12:29:359:359	2630135	1					
ANR	2630188	ExpressionStatement	eof = true	61:3:1760:1770	2630135	0	True				
ANR	2630189	AssignmentExpression	eof = true		2630135	0		=			
ANR	2630190	Identifier	eof		2630135	0					
ANR	2630191	Identifier	true		2630135	1					
ANR	2630192	ExpressionStatement	"dprintf ( D_ALWAYS , ""EOF reached on DaemonCore pipe %d\\n"" , pipe_end )"	62:3:1775:1841	2630135	1	True				
ANR	2630193	CallExpression	"dprintf ( D_ALWAYS , ""EOF reached on DaemonCore pipe %d\\n"" , pipe_end )"		2630135	0					
ANR	2630194	Callee	dprintf		2630135	0					
ANR	2630195	Identifier	dprintf		2630135	0					
ANR	2630196	ArgumentList	D_ALWAYS		2630135	1					
ANR	2630197	Argument	D_ALWAYS		2630135	0					
ANR	2630198	Identifier	D_ALWAYS		2630135	0					
ANR	2630199	Argument	"""EOF reached on DaemonCore pipe %d\\n"""		2630135	1					
ANR	2630200	PrimaryExpression	"""EOF reached on DaemonCore pipe %d\\n"""		2630135	0					
ANR	2630201	Argument	pipe_end		2630135	2					
ANR	2630202	Identifier	pipe_end		2630135	0					
ANR	2630203	ReturnStatement	return NULL ;	63:3:1846:1857	2630135	2	True				
ANR	2630204	Identifier	NULL		2630135	0					
ANR	2630205	ExpressionStatement	readahead_index = 0	67:2:1940:1959	2630135	3	True				
ANR	2630206	AssignmentExpression	readahead_index = 0		2630135	0		=			
ANR	2630207	Identifier	readahead_index		2630135	0					
ANR	2630208	PrimaryExpression	0		2630135	1					
ANR	2630209	WhileStatement	while ( readahead_index != readahead_length )		2630135	1					
ANR	2630210	Condition	readahead_index != readahead_length	70:8:1973:2007	2630135	0	True				
ANR	2630211	EqualityExpression	readahead_index != readahead_length		2630135	0		!=			
ANR	2630212	Identifier	readahead_index		2630135	0					
ANR	2630213	Identifier	readahead_length		2630135	1					
ANR	2630214	CompoundStatement		24:2:619:663	2630135	1					
ANR	2630215	IdentifierDeclStatement	char c = readahead_buffer [ readahead_index ++ ] ;	72:2:2015:2059	2630135	0	True				
ANR	2630216	IdentifierDecl	c = readahead_buffer [ readahead_index ++ ]		2630135	0					
ANR	2630217	IdentifierDeclType	char		2630135	0					
ANR	2630218	Identifier	c		2630135	1					
ANR	2630219	AssignmentExpression	c = readahead_buffer [ readahead_index ++ ]		2630135	2		=			
ANR	2630220	Identifier	c		2630135	0					
ANR	2630221	ArrayIndexing	readahead_buffer [ readahead_index ++ ]		2630135	1					
ANR	2630222	Identifier	readahead_buffer		2630135	0					
ANR	2630223	PostIncDecOperationExpression	readahead_index ++		2630135	1					
ANR	2630224	Identifier	readahead_index		2630135	0					
ANR	2630225	IncDec	++		2630135	1					
ANR	2630226	IfStatement	if ( c == '\\n' && ! last_char_was_escape )		2630135	1					
ANR	2630227	Condition	c == '\\n' && ! last_char_was_escape	74:6:2068:2101	2630135	0	True				
ANR	2630228	AndExpression	c == '\\n' && ! last_char_was_escape		2630135	0		&&			
ANR	2630229	EqualityExpression	c == '\\n'		2630135	0		==			
ANR	2630230	Identifier	c		2630135	0					
ANR	2630231	PrimaryExpression	'\\n'		2630135	1					
ANR	2630232	UnaryOperationExpression	! last_char_was_escape		2630135	1					
ANR	2630233	UnaryOperator	!		2630135	0					
ANR	2630234	Identifier	last_char_was_escape		2630135	1					
ANR	2630235	CompoundStatement		28:3:746:791	2630135	1					
ANR	2630236	IdentifierDeclStatement	std :: string * result = new std :: string ( buffer ) ;	76:3:2142:2187	2630135	0	True				
ANR	2630237	IdentifierDecl	* result = new std :: string ( buffer )		2630135	0					
ANR	2630238	IdentifierDeclType	std :: string *		2630135	0					
ANR	2630239	Identifier	result		2630135	1					
ANR	2630240	AssignmentExpression	* result = new std :: string ( buffer )		2630135	2		=			
ANR	2630241	Identifier	buffer		2630135	0					
ANR	2630242	Identifier	buffer		2630135	1					
ANR	2630243	ExpressionStatement	"buffer = """""	77:3:2192:2203	2630135	1	True				
ANR	2630244	AssignmentExpression	"buffer = """""		2630135	0		=			
ANR	2630245	Identifier	buffer		2630135	0					
ANR	2630246	PrimaryExpression	""""""		2630135	1					
ANR	2630247	ReturnStatement	return result ;	78:3:2208:2221	2630135	2	True				
ANR	2630248	Identifier	result		2630135	0					
ANR	2630249	ElseStatement	else		2630135	0					
ANR	2630250	IfStatement	if ( c == '\\r' && ! last_char_was_escape )		2630135	0					
ANR	2630251	Condition	c == '\\r' && ! last_char_was_escape	79:13:2236:2269	2630135	0	True				
ANR	2630252	AndExpression	c == '\\r' && ! last_char_was_escape		2630135	0		&&			
ANR	2630253	EqualityExpression	c == '\\r'		2630135	0		==			
ANR	2630254	Identifier	c		2630135	0					
ANR	2630255	PrimaryExpression	'\\r'		2630135	1					
ANR	2630256	UnaryOperationExpression	! last_char_was_escape		2630135	1					
ANR	2630257	UnaryOperator	!		2630135	0					
ANR	2630258	Identifier	last_char_was_escape		2630135	1					
ANR	2630259	CompoundStatement		31:49:876:876	2630135	1					
ANR	2630260	ElseStatement	else		2630135	0					
ANR	2630261	CompoundStatement		33:9:904:904	2630135	0					
ANR	2630262	ExpressionStatement	buffer += c	82:3:2305:2316	2630135	0	True				
ANR	2630263	AssignmentExpression	buffer += c		2630135	0		+=			
ANR	2630264	Identifier	buffer		2630135	0					
ANR	2630265	Identifier	c		2630135	1					
ANR	2630266	IfStatement	if ( c == '\\\\' )		2630135	1					
ANR	2630267	Condition	c == '\\\\'	84:7:2326:2334	2630135	0	True				
ANR	2630268	EqualityExpression	c == '\\\\'		2630135	0		==			
ANR	2630269	Identifier	c		2630135	0					
ANR	2630270	PrimaryExpression	'\\\\'		2630135	1					
ANR	2630271	CompoundStatement		36:18:941:941	2630135	1					
ANR	2630272	ExpressionStatement	last_char_was_escape = ! last_char_was_escape	85:4:2343:2387	2630135	0	True				
ANR	2630273	AssignmentExpression	last_char_was_escape = ! last_char_was_escape		2630135	0		=			
ANR	2630274	Identifier	last_char_was_escape		2630135	0					
ANR	2630275	UnaryOperationExpression	! last_char_was_escape		2630135	1					
ANR	2630276	UnaryOperator	!		2630135	0					
ANR	2630277	Identifier	last_char_was_escape		2630135	1					
ANR	2630278	ElseStatement	else		2630135	0					
ANR	2630279	CompoundStatement		39:8:1006:1006	2630135	0					
ANR	2630280	ExpressionStatement	last_char_was_escape = false	88:4:2408:2436	2630135	0	True				
ANR	2630281	AssignmentExpression	last_char_was_escape = false		2630135	0		=			
ANR	2630282	Identifier	last_char_was_escape		2630135	0					
ANR	2630283	Identifier	false		2630135	1					
ANR	2630284	ExpressionStatement	readahead_length = 0	94:1:2529:2549	2630135	2	True				
ANR	2630285	AssignmentExpression	readahead_length = 0		2630135	0		=			
ANR	2630286	Identifier	readahead_length		2630135	0					
ANR	2630287	PrimaryExpression	0		2630135	1					
ANR	2630288	ReturnStatement	return NULL ;	95:1:2552:2563	2630135	3	True				
ANR	2630289	Identifier	NULL		2630135	0					
ANR	2630290	ReturnType	std :: string *		2630135	1					
ANR	2630291	Identifier	PipeBuffer :: GetNextLine		2630135	2					
ANR	2630292	ParameterList			2630135	3					
ANR	2630293	CFGEntryNode	ENTRY		2630135		True				
ANR	2630294	CFGExitNode	EXIT		2630135		True				
ANR	2630295	Symbol	NULL		2630135						
ANR	2630296	Symbol	c		2630135						
ANR	2630297	Symbol	* readahead_buffer		2630135						
ANR	2630298	Symbol	pipe_end		2630135						
ANR	2630299	Symbol	last_char_was_escape		2630135						
ANR	2630300	Symbol	PIPE_BUFFER_READAHEAD_SIZE		2630135						
ANR	2630301	Symbol	D_ALWAYS		2630135						
ANR	2630302	Symbol	readahead_index		2630135						
ANR	2630303	Symbol	false		2630135						
ANR	2630304	Symbol	readahead_buffer		2630135						
ANR	2630305	Symbol	readahead_length		2630135						
ANR	2630306	Symbol	error		2630135						
ANR	2630307	Symbol	result		2630135						
ANR	2630308	Symbol	daemonCore -> Read_Pipe		2630135						
ANR	2630309	Symbol	* daemonCore		2630135						
ANR	2630310	Symbol	daemonCore		2630135						
ANR	2630311	Symbol	true		2630135						
ANR	2630312	Symbol	buffer		2630135						
ANR	2630313	Symbol	eof		2630135						
ANR	2630314	Function	PipeBuffer :: Write	98:0:2568:3115							
ANR	2630315	FunctionDef	PipeBuffer :: Write (const char * towrite)		2630314	0					
ANR	2630316	CompoundStatement		99:41:2613:3115	2630314	0					
ANR	2630317	IfStatement	if ( towrite )		2630314	0					
ANR	2630318	Condition	towrite	101:5:2622:2628	2630314	0	True				
ANR	2630319	Identifier	towrite		2630314	0					
ANR	2630320	ExpressionStatement	buffer += towrite	102:2:2633:2650	2630314	1	True				
ANR	2630321	AssignmentExpression	buffer += towrite		2630314	0		+=			
ANR	2630322	Identifier	buffer		2630314	0					
ANR	2630323	Identifier	towrite		2630314	1					
ANR	2630324	IdentifierDeclStatement	int len = buffer . length ( ) ;	104:1:2654:2679	2630314	1	True				
ANR	2630325	IdentifierDecl	len = buffer . length ( )		2630314	0					
ANR	2630326	IdentifierDeclType	int		2630314	0					
ANR	2630327	Identifier	len		2630314	1					
ANR	2630328	AssignmentExpression	len = buffer . length ( )		2630314	2		=			
ANR	2630329	Identifier	len		2630314	0					
ANR	2630330	CallExpression	buffer . length ( )		2630314	1					
ANR	2630331	Callee	buffer . length		2630314	0					
ANR	2630332	MemberAccess	buffer . length		2630314	0					
ANR	2630333	Identifier	buffer		2630314	0					
ANR	2630334	Identifier	length		2630314	1					
ANR	2630335	ArgumentList			2630314	1					
ANR	2630336	IfStatement	if ( len == 0 )		2630314	2					
ANR	2630337	Condition	len == 0	105:5:2686:2693	2630314	0	True				
ANR	2630338	EqualityExpression	len == 0		2630314	0		==			
ANR	2630339	Identifier	len		2630314	0					
ANR	2630340	PrimaryExpression	0		2630314	1					
ANR	2630341	ReturnStatement	return 0 ;	106:2:2698:2706	2630314	1	True				
ANR	2630342	PrimaryExpression	0		2630314	0					
ANR	2630343	IdentifierDeclStatement	"int numwritten = daemonCore -> Write_Pipe ( pipe_end , buffer . c_str ( ) , len ) ;"	108:1:2710:2781	2630314	3	True				
ANR	2630344	IdentifierDecl	"numwritten = daemonCore -> Write_Pipe ( pipe_end , buffer . c_str ( ) , len )"		2630314	0					
ANR	2630345	IdentifierDeclType	int		2630314	0					
ANR	2630346	Identifier	numwritten		2630314	1					
ANR	2630347	AssignmentExpression	"numwritten = daemonCore -> Write_Pipe ( pipe_end , buffer . c_str ( ) , len )"		2630314	2		=			
ANR	2630348	Identifier	numwritten		2630314	0					
ANR	2630349	CallExpression	"daemonCore -> Write_Pipe ( pipe_end , buffer . c_str ( ) , len )"		2630314	1					
ANR	2630350	Callee	daemonCore -> Write_Pipe		2630314	0					
ANR	2630351	PtrMemberAccess	daemonCore -> Write_Pipe		2630314	0					
ANR	2630352	Identifier	daemonCore		2630314	0					
ANR	2630353	Identifier	Write_Pipe		2630314	1					
ANR	2630354	ArgumentList	pipe_end		2630314	1					
ANR	2630355	Argument	pipe_end		2630314	0					
ANR	2630356	Identifier	pipe_end		2630314	0					
ANR	2630357	Argument	buffer . c_str ( )		2630314	1					
ANR	2630358	CallExpression	buffer . c_str ( )		2630314	0					
ANR	2630359	Callee	buffer . c_str		2630314	0					
ANR	2630360	MemberAccess	buffer . c_str		2630314	0					
ANR	2630361	Identifier	buffer		2630314	0					
ANR	2630362	Identifier	c_str		2630314	1					
ANR	2630363	ArgumentList			2630314	1					
ANR	2630364	Argument	len		2630314	2					
ANR	2630365	Identifier	len		2630314	0					
ANR	2630366	IfStatement	if ( numwritten > 0 )		2630314	4					
ANR	2630367	Condition	numwritten > 0	109:5:2788:2801	2630314	0	True				
ANR	2630368	RelationalExpression	numwritten > 0		2630314	0		>			
ANR	2630369	Identifier	numwritten		2630314	0					
ANR	2630370	PrimaryExpression	0		2630314	1					
ANR	2630371	CompoundStatement		11:21:190:190	2630314	1					
ANR	2630372	ExpressionStatement	"buffer . erase ( 0 , numwritten )"	111:2:2833:2861	2630314	0	True				
ANR	2630373	CallExpression	"buffer . erase ( 0 , numwritten )"		2630314	0					
ANR	2630374	Callee	buffer . erase		2630314	0					
ANR	2630375	MemberAccess	buffer . erase		2630314	0					
ANR	2630376	Identifier	buffer		2630314	0					
ANR	2630377	Identifier	erase		2630314	1					
ANR	2630378	ArgumentList	0		2630314	1					
ANR	2630379	Argument	0		2630314	0					
ANR	2630380	PrimaryExpression	0		2630314	0					
ANR	2630381	Argument	numwritten		2630314	1					
ANR	2630382	Identifier	numwritten		2630314	0					
ANR	2630383	ReturnStatement	return numwritten ;	112:2:2865:2882	2630314	1	True				
ANR	2630384	Identifier	numwritten		2630314	0					
ANR	2630385	ElseStatement	else		2630314	0					
ANR	2630386	IfStatement	if ( numwritten == 0 )		2630314	0					
ANR	2630387	Condition	numwritten == 0	113:13:2897:2911	2630314	0	True				
ANR	2630388	EqualityExpression	numwritten == 0		2630314	0		==			
ANR	2630389	Identifier	numwritten		2630314	0					
ANR	2630390	PrimaryExpression	0		2630314	1					
ANR	2630391	CompoundStatement		15:31:301:301	2630314	1					
ANR	2630392	ReturnStatement	return 0 ;	114:2:2919:2927	2630314	0	True				
ANR	2630393	PrimaryExpression	0		2630314	0					
ANR	2630394	ElseStatement	else		2630314	0					
ANR	2630395	CompoundStatement		17:8:323:323	2630314	0					
ANR	2630396	IfStatement	if ( errno == EAGAIN || errno == EWOULDBLOCK )		2630314	0					
ANR	2630397	Condition	errno == EAGAIN || errno == EWOULDBLOCK	116:6:2945:2983	2630314	0	True				
ANR	2630398	OrExpression	errno == EAGAIN || errno == EWOULDBLOCK		2630314	0		||			
ANR	2630399	EqualityExpression	errno == EAGAIN		2630314	0		==			
ANR	2630400	Identifier	errno		2630314	0					
ANR	2630401	Identifier	EAGAIN		2630314	1					
ANR	2630402	EqualityExpression	errno == EWOULDBLOCK		2630314	1		==			
ANR	2630403	Identifier	errno		2630314	0					
ANR	2630404	Identifier	EWOULDBLOCK		2630314	1					
ANR	2630405	ReturnStatement	return 0 ;	117:3:2989:2997	2630314	1	True				
ANR	2630406	PrimaryExpression	0		2630314	0					
ANR	2630407	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error %d writing to DaemonCore pipe %d\\n"" , errno , pipe_end )"	119:2:3002:3081	2630314	1	True				
ANR	2630408	CallExpression	"dprintf ( D_ALWAYS , ""Error %d writing to DaemonCore pipe %d\\n"" , errno , pipe_end )"		2630314	0					
ANR	2630409	Callee	dprintf		2630314	0					
ANR	2630410	Identifier	dprintf		2630314	0					
ANR	2630411	ArgumentList	D_ALWAYS		2630314	1					
ANR	2630412	Argument	D_ALWAYS		2630314	0					
ANR	2630413	Identifier	D_ALWAYS		2630314	0					
ANR	2630414	Argument	"""Error %d writing to DaemonCore pipe %d\\n"""		2630314	1					
ANR	2630415	PrimaryExpression	"""Error %d writing to DaemonCore pipe %d\\n"""		2630314	0					
ANR	2630416	Argument	errno		2630314	2					
ANR	2630417	Identifier	errno		2630314	0					
ANR	2630418	Argument	pipe_end		2630314	3					
ANR	2630419	Identifier	pipe_end		2630314	0					
ANR	2630420	ExpressionStatement	error = true	120:2:3085:3097	2630314	2	True				
ANR	2630421	AssignmentExpression	error = true		2630314	0		=			
ANR	2630422	Identifier	error		2630314	0					
ANR	2630423	Identifier	true		2630314	1					
ANR	2630424	ReturnStatement	return - 1 ;	121:2:3101:3110	2630314	3	True				
ANR	2630425	UnaryOperationExpression	- 1		2630314	0					
ANR	2630426	UnaryOperator	-		2630314	0					
ANR	2630427	PrimaryExpression	1		2630314	1					
ANR	2630428	ReturnType	int		2630314	1					
ANR	2630429	Identifier	PipeBuffer :: Write		2630314	2					
ANR	2630430	ParameterList	const char * towrite		2630314	3					
ANR	2630431	Parameter	const char * towrite	99:19:2591:2610	2630314	0	True				
ANR	2630432	ParameterType	const char *		2630314	0					
ANR	2630433	Identifier	towrite		2630314	1					
ANR	2630434	CFGEntryNode	ENTRY		2630314		True				
ANR	2630435	CFGExitNode	EXIT		2630314		True				
ANR	2630436	Symbol	buffer . c_str		2630314						
ANR	2630437	Symbol	errno		2630314						
ANR	2630438	Symbol	pipe_end		2630314						
ANR	2630439	Symbol	EAGAIN		2630314						
ANR	2630440	Symbol	D_ALWAYS		2630314						
ANR	2630441	Symbol	error		2630314						
ANR	2630442	Symbol	numwritten		2630314						
ANR	2630443	Symbol	len		2630314						
ANR	2630444	Symbol	* daemonCore		2630314						
ANR	2630445	Symbol	daemonCore		2630314						
ANR	2630446	Symbol	buffer . length		2630314						
ANR	2630447	Symbol	true		2630314						
ANR	2630448	Symbol	EWOULDBLOCK		2630314						
ANR	2630449	Symbol	towrite		2630314						
ANR	2630450	Symbol	buffer		2630314						
ANR	2630451	Symbol	daemonCore -> Write_Pipe		2630314						
ANR	2630452	Function	PipeBuffer :: IsEmpty	125:0:3118:3178							
ANR	2630453	FunctionDef	PipeBuffer :: IsEmpty ()		2630452	0					
ANR	2630454	CompoundStatement		126:22:3144:3178	2630452	0					
ANR	2630455	ReturnStatement	return ( buffer . length ( ) == 0 ) ;	127:1:3147:3176	2630452	0	True				
ANR	2630456	EqualityExpression	buffer . length ( ) == 0		2630452	0		==			
ANR	2630457	CallExpression	buffer . length ( )		2630452	0					
ANR	2630458	Callee	buffer . length		2630452	0					
ANR	2630459	MemberAccess	buffer . length		2630452	0					
ANR	2630460	Identifier	buffer		2630452	0					
ANR	2630461	Identifier	length		2630452	1					
ANR	2630462	ArgumentList			2630452	1					
ANR	2630463	PrimaryExpression	0		2630452	1					
ANR	2630464	ReturnType	int		2630452	1					
ANR	2630465	Identifier	PipeBuffer :: IsEmpty		2630452	2					
ANR	2630466	ParameterList			2630452	3					
ANR	2630467	CFGEntryNode	ENTRY		2630452		True				
ANR	2630468	CFGExitNode	EXIT		2630452		True				
ANR	2630469	Symbol	buffer . length		2630452						
ANR	2630470	Symbol	buffer		2630452						
