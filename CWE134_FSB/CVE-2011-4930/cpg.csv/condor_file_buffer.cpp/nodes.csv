command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	911780	File	data/converged/CVE-2011-4930_htcondor/condor_file_buffer.cpp								
ANR	911781	ClassDef	CondorChunk	30:0:1032:1647							
ANR	911782	Function	CondorChunk	32:1:1061:1212							
ANR	911783	FunctionDef	"CondorChunk (off_t b , off_t s , off_t m)"		911782	0					
ANR	911784	CompoundStatement		32:41:1101:1212	911782	0					
ANR	911785	ExpressionStatement	begin = b	33:2:1105:1114	911782	0	True				
ANR	911786	AssignmentExpression	begin = b		911782	0		=			
ANR	911787	Identifier	begin		911782	0					
ANR	911788	Identifier	b		911782	1					
ANR	911789	ExpressionStatement	size = s	34:2:1118:1126	911782	1	True				
ANR	911790	AssignmentExpression	size = s		911782	0		=			
ANR	911791	Identifier	size		911782	0					
ANR	911792	Identifier	s		911782	1					
ANR	911793	ExpressionStatement	last_used = 0	35:2:1130:1143	911782	2	True				
ANR	911794	AssignmentExpression	last_used = 0		911782	0		=			
ANR	911795	Identifier	last_used		911782	0					
ANR	911796	PrimaryExpression	0		911782	1					
ANR	911797	ExpressionStatement	dirty = 0	36:2:1147:1156	911782	3	True				
ANR	911798	AssignmentExpression	dirty = 0		911782	0		=			
ANR	911799	Identifier	dirty		911782	0					
ANR	911800	PrimaryExpression	0		911782	1					
ANR	911801	ExpressionStatement	next = 0	37:2:1160:1168	911782	4	True				
ANR	911802	AssignmentExpression	next = 0		911782	0		=			
ANR	911803	Identifier	next		911782	0					
ANR	911804	PrimaryExpression	0		911782	1					
ANR	911805	ExpressionStatement	data = new char [ size ]	38:2:1172:1193	911782	5	True				
ANR	911806	AssignmentExpression	data = new char [ size ]		911782	0		=			
ANR	911807	Identifier	data		911782	0					
ANR	911808	Identifier	size		911782	1					
ANR	911809	ExpressionStatement	max_size = m	39:2:1197:1209	911782	6	True				
ANR	911810	AssignmentExpression	max_size = m		911782	0		=			
ANR	911811	Identifier	max_size		911782	0					
ANR	911812	Identifier	m		911782	1					
ANR	911813	Identifier	CondorChunk		911782	1					
ANR	911814	ParameterList	"off_t b , off_t s , off_t m"		911782	2					
ANR	911815	Parameter	off_t b	32:14:1074:1080	911782	0	True				
ANR	911816	ParameterType	off_t		911782	0					
ANR	911817	Identifier	b		911782	1					
ANR	911818	Parameter	off_t s	32:23:1083:1089	911782	1	True				
ANR	911819	ParameterType	off_t		911782	0					
ANR	911820	Identifier	s		911782	1					
ANR	911821	Parameter	off_t m	32:32:1092:1098	911782	2	True				
ANR	911822	ParameterType	off_t		911782	0					
ANR	911823	Identifier	m		911782	1					
ANR	911824	CFGEntryNode	ENTRY		911782		True				
ANR	911825	CFGExitNode	EXIT		911782		True				
ANR	911826	Symbol	dirty		911782						
ANR	911827	Symbol	next		911782						
ANR	911828	Symbol	b		911782						
ANR	911829	Symbol	s		911782						
ANR	911830	Symbol	size		911782						
ANR	911831	Symbol	data		911782						
ANR	911832	Symbol	last_used		911782						
ANR	911833	Symbol	m		911782						
ANR	911834	Symbol	begin		911782						
ANR	911835	Symbol	max_size		911782						
ANR	911836	Function	~CondorChunk	42:1:1216:1252							
ANR	911837	FunctionDef	~CondorChunk ()		911836	1					
ANR	911838	CompoundStatement		42:16:1231:1252	911836	0					
ANR	911839	Statement	delete	43:2:1235:1240	911836	0	True				
ANR	911840	Statement	[	43:9:1242:1242	911836	1	True				
ANR	911841	Statement	]	43:10:1243:1243	911836	2	True				
ANR	911842	ExpressionStatement	data	43:12:1245:1249	911836	3	True				
ANR	911843	Identifier	data		911836	0					
ANR	911844	Identifier	~CondorChunk		911836	1					
ANR	911845	ParameterList			911836	2					
ANR	911846	CFGEntryNode	ENTRY		911836		True				
ANR	911847	CFGExitNode	EXIT		911836		True				
ANR	911848	DeclStmt									
ANR	911849	Decl							off_t	off_t	begin
ANR	911850	DeclStmt									
ANR	911851	Decl							off_t	off_t	size
ANR	911852	DeclStmt									
ANR	911853	Decl							off_t	off_t	max_size
ANR	911854	DeclStmt									
ANR	911855	Decl							int	int	last_used
ANR	911856	DeclStmt									
ANR	911857	Decl							char	char *	data
ANR	911858	DeclStmt									
ANR	911859	Decl							int	int	dirty
ANR	911860	DeclStmt									
ANR	911861	Decl							CondorChunk	CondorChunk *	next
ANR	911862	Function	combine	67:0:1707:2331							
ANR	911863	FunctionDef	"combine (CondorChunk * a , CondorChunk * b)"		911862	0					
ANR	911864	CompoundStatement		68:0:1770:2331	911862	0					
ANR	911865	IdentifierDeclStatement	"off_t begin , end ;"	69:1:1773:1789	911862	0	True				
ANR	911866	IdentifierDecl	begin		911862	0					
ANR	911867	IdentifierDeclType	off_t		911862	0					
ANR	911868	Identifier	begin		911862	1					
ANR	911869	IdentifierDecl	end		911862	1					
ANR	911870	IdentifierDeclType	off_t		911862	0					
ANR	911871	Identifier	end		911862	1					
ANR	911872	IdentifierDeclStatement	CondorChunk * r ;	70:1:1792:1806	911862	1	True				
ANR	911873	IdentifierDecl	* r		911862	0					
ANR	911874	IdentifierDeclType	CondorChunk *		911862	0					
ANR	911875	Identifier	r		911862	1					
ANR	911876	ExpressionStatement	"begin = MIN ( a -> begin , b -> begin )"	72:1:1810:1840	911862	2	True				
ANR	911877	AssignmentExpression	"begin = MIN ( a -> begin , b -> begin )"		911862	0		=			
ANR	911878	Identifier	begin		911862	0					
ANR	911879	CallExpression	"MIN ( a -> begin , b -> begin )"		911862	1					
ANR	911880	Callee	MIN		911862	0					
ANR	911881	Identifier	MIN		911862	0					
ANR	911882	ArgumentList	a -> begin		911862	1					
ANR	911883	Argument	a -> begin		911862	0					
ANR	911884	PtrMemberAccess	a -> begin		911862	0					
ANR	911885	Identifier	a		911862	0					
ANR	911886	Identifier	begin		911862	1					
ANR	911887	Argument	b -> begin		911862	1					
ANR	911888	PtrMemberAccess	b -> begin		911862	0					
ANR	911889	Identifier	b		911862	0					
ANR	911890	Identifier	begin		911862	1					
ANR	911891	ExpressionStatement	"end = MAX ( a -> begin + a -> size , b -> begin + b -> size )"	73:1:1843:1887	911862	3	True				
ANR	911892	AssignmentExpression	"end = MAX ( a -> begin + a -> size , b -> begin + b -> size )"		911862	0		=			
ANR	911893	Identifier	end		911862	0					
ANR	911894	CallExpression	"MAX ( a -> begin + a -> size , b -> begin + b -> size )"		911862	1					
ANR	911895	Callee	MAX		911862	0					
ANR	911896	Identifier	MAX		911862	0					
ANR	911897	ArgumentList	a -> begin + a -> size		911862	1					
ANR	911898	Argument	a -> begin + a -> size		911862	0					
ANR	911899	AdditiveExpression	a -> begin + a -> size		911862	0		+			
ANR	911900	PtrMemberAccess	a -> begin		911862	0					
ANR	911901	Identifier	a		911862	0					
ANR	911902	Identifier	begin		911862	1					
ANR	911903	PtrMemberAccess	a -> size		911862	1					
ANR	911904	Identifier	a		911862	0					
ANR	911905	Identifier	size		911862	1					
ANR	911906	Argument	b -> begin + b -> size		911862	1					
ANR	911907	AdditiveExpression	b -> begin + b -> size		911862	0		+			
ANR	911908	PtrMemberAccess	b -> begin		911862	0					
ANR	911909	Identifier	b		911862	0					
ANR	911910	Identifier	begin		911862	1					
ANR	911911	PtrMemberAccess	b -> size		911862	1					
ANR	911912	Identifier	b		911862	0					
ANR	911913	Identifier	size		911862	1					
ANR	911914	ExpressionStatement	"r = new CondorChunk ( begin , end - begin , a -> max_size )"	75:1:1891:1939	911862	4	True				
ANR	911915	AssignmentExpression	"r = new CondorChunk ( begin , end - begin , a -> max_size )"		911862	0		=			
ANR	911916	Identifier	r		911862	0					
ANR	911917	Expression	"begin , end - begin , a -> max_size"		911862	1					
ANR	911918	Identifier	begin		911862	0					
ANR	911919	Expression	"end - begin , a -> max_size"		911862	1					
ANR	911920	AdditiveExpression	end - begin		911862	0		-			
ANR	911921	Identifier	end		911862	0					
ANR	911922	Identifier	begin		911862	1					
ANR	911923	PtrMemberAccess	a -> max_size		911862	1					
ANR	911924	Identifier	a		911862	0					
ANR	911925	Identifier	max_size		911862	1					
ANR	911926	ExpressionStatement	r -> dirty = a -> dirty || b -> dirty	77:1:1943:1974	911862	5	True				
ANR	911927	AssignmentExpression	r -> dirty = a -> dirty || b -> dirty		911862	0		=			
ANR	911928	PtrMemberAccess	r -> dirty		911862	0					
ANR	911929	Identifier	r		911862	0					
ANR	911930	Identifier	dirty		911862	1					
ANR	911931	OrExpression	a -> dirty || b -> dirty		911862	1		||			
ANR	911932	PtrMemberAccess	a -> dirty		911862	0					
ANR	911933	Identifier	a		911862	0					
ANR	911934	Identifier	dirty		911862	1					
ANR	911935	PtrMemberAccess	b -> dirty		911862	1					
ANR	911936	Identifier	b		911862	0					
ANR	911937	Identifier	dirty		911862	1					
ANR	911938	ExpressionStatement	"r -> last_used = MAX ( a -> last_used , b -> last_used )"	78:1:1977:2025	911862	6	True				
ANR	911939	AssignmentExpression	"r -> last_used = MAX ( a -> last_used , b -> last_used )"		911862	0		=			
ANR	911940	PtrMemberAccess	r -> last_used		911862	0					
ANR	911941	Identifier	r		911862	0					
ANR	911942	Identifier	last_used		911862	1					
ANR	911943	CallExpression	"MAX ( a -> last_used , b -> last_used )"		911862	1					
ANR	911944	Callee	MAX		911862	0					
ANR	911945	Identifier	MAX		911862	0					
ANR	911946	ArgumentList	a -> last_used		911862	1					
ANR	911947	Argument	a -> last_used		911862	0					
ANR	911948	PtrMemberAccess	a -> last_used		911862	0					
ANR	911949	Identifier	a		911862	0					
ANR	911950	Identifier	last_used		911862	1					
ANR	911951	Argument	b -> last_used		911862	1					
ANR	911952	PtrMemberAccess	b -> last_used		911862	0					
ANR	911953	Identifier	b		911862	0					
ANR	911954	Identifier	last_used		911862	1					
ANR	911955	IfStatement	if ( a -> dirty && ! b -> dirty )		911862	7					
ANR	911956	Condition	a -> dirty && ! b -> dirty	80:5:2033:2053	911862	0	True				
ANR	911957	AndExpression	a -> dirty && ! b -> dirty		911862	0		&&			
ANR	911958	PtrMemberAccess	a -> dirty		911862	0					
ANR	911959	Identifier	a		911862	0					
ANR	911960	Identifier	dirty		911862	1					
ANR	911961	UnaryOperationExpression	! b -> dirty		911862	1					
ANR	911962	UnaryOperator	!		911862	0					
ANR	911963	PtrMemberAccess	b -> dirty		911862	1					
ANR	911964	Identifier	b		911862	0					
ANR	911965	Identifier	dirty		911862	1					
ANR	911966	CompoundStatement		13:29:286:286	911862	1					
ANR	911967	ExpressionStatement	"memcpy ( & r -> data [ b -> begin - begin ] , b -> data , b -> size )"	81:2:2061:2113	911862	0	True				
ANR	911968	CallExpression	"memcpy ( & r -> data [ b -> begin - begin ] , b -> data , b -> size )"		911862	0					
ANR	911969	Callee	memcpy		911862	0					
ANR	911970	Identifier	memcpy		911862	0					
ANR	911971	ArgumentList	& r -> data [ b -> begin - begin ]		911862	1					
ANR	911972	Argument	& r -> data [ b -> begin - begin ]		911862	0					
ANR	911973	UnaryOperationExpression	& r -> data [ b -> begin - begin ]		911862	0					
ANR	911974	UnaryOperator	&		911862	0					
ANR	911975	ArrayIndexing	r -> data [ b -> begin - begin ]		911862	1					
ANR	911976	PtrMemberAccess	r -> data		911862	0					
ANR	911977	Identifier	r		911862	0					
ANR	911978	Identifier	data		911862	1					
ANR	911979	AdditiveExpression	b -> begin - begin		911862	1		-			
ANR	911980	PtrMemberAccess	b -> begin		911862	0					
ANR	911981	Identifier	b		911862	0					
ANR	911982	Identifier	begin		911862	1					
ANR	911983	Identifier	begin		911862	1					
ANR	911984	Argument	b -> data		911862	1					
ANR	911985	PtrMemberAccess	b -> data		911862	0					
ANR	911986	Identifier	b		911862	0					
ANR	911987	Identifier	data		911862	1					
ANR	911988	Argument	b -> size		911862	2					
ANR	911989	PtrMemberAccess	b -> size		911862	0					
ANR	911990	Identifier	b		911862	0					
ANR	911991	Identifier	size		911862	1					
ANR	911992	ExpressionStatement	"memcpy ( & r -> data [ a -> begin - begin ] , a -> data , a -> size )"	82:2:2117:2169	911862	1	True				
ANR	911993	CallExpression	"memcpy ( & r -> data [ a -> begin - begin ] , a -> data , a -> size )"		911862	0					
ANR	911994	Callee	memcpy		911862	0					
ANR	911995	Identifier	memcpy		911862	0					
ANR	911996	ArgumentList	& r -> data [ a -> begin - begin ]		911862	1					
ANR	911997	Argument	& r -> data [ a -> begin - begin ]		911862	0					
ANR	911998	UnaryOperationExpression	& r -> data [ a -> begin - begin ]		911862	0					
ANR	911999	UnaryOperator	&		911862	0					
ANR	912000	ArrayIndexing	r -> data [ a -> begin - begin ]		911862	1					
ANR	912001	PtrMemberAccess	r -> data		911862	0					
ANR	912002	Identifier	r		911862	0					
ANR	912003	Identifier	data		911862	1					
ANR	912004	AdditiveExpression	a -> begin - begin		911862	1		-			
ANR	912005	PtrMemberAccess	a -> begin		911862	0					
ANR	912006	Identifier	a		911862	0					
ANR	912007	Identifier	begin		911862	1					
ANR	912008	Identifier	begin		911862	1					
ANR	912009	Argument	a -> data		911862	1					
ANR	912010	PtrMemberAccess	a -> data		911862	0					
ANR	912011	Identifier	a		911862	0					
ANR	912012	Identifier	data		911862	1					
ANR	912013	Argument	a -> size		911862	2					
ANR	912014	PtrMemberAccess	a -> size		911862	0					
ANR	912015	Identifier	a		911862	0					
ANR	912016	Identifier	size		911862	1					
ANR	912017	ElseStatement	else		911862	0					
ANR	912018	CompoundStatement		16:8:408:408	911862	0					
ANR	912019	ExpressionStatement	"memcpy ( & r -> data [ a -> begin - begin ] , a -> data , a -> size )"	84:2:2183:2235	911862	0	True				
ANR	912020	CallExpression	"memcpy ( & r -> data [ a -> begin - begin ] , a -> data , a -> size )"		911862	0					
ANR	912021	Callee	memcpy		911862	0					
ANR	912022	Identifier	memcpy		911862	0					
ANR	912023	ArgumentList	& r -> data [ a -> begin - begin ]		911862	1					
ANR	912024	Argument	& r -> data [ a -> begin - begin ]		911862	0					
ANR	912025	UnaryOperationExpression	& r -> data [ a -> begin - begin ]		911862	0					
ANR	912026	UnaryOperator	&		911862	0					
ANR	912027	ArrayIndexing	r -> data [ a -> begin - begin ]		911862	1					
ANR	912028	PtrMemberAccess	r -> data		911862	0					
ANR	912029	Identifier	r		911862	0					
ANR	912030	Identifier	data		911862	1					
ANR	912031	AdditiveExpression	a -> begin - begin		911862	1		-			
ANR	912032	PtrMemberAccess	a -> begin		911862	0					
ANR	912033	Identifier	a		911862	0					
ANR	912034	Identifier	begin		911862	1					
ANR	912035	Identifier	begin		911862	1					
ANR	912036	Argument	a -> data		911862	1					
ANR	912037	PtrMemberAccess	a -> data		911862	0					
ANR	912038	Identifier	a		911862	0					
ANR	912039	Identifier	data		911862	1					
ANR	912040	Argument	a -> size		911862	2					
ANR	912041	PtrMemberAccess	a -> size		911862	0					
ANR	912042	Identifier	a		911862	0					
ANR	912043	Identifier	size		911862	1					
ANR	912044	ExpressionStatement	"memcpy ( & r -> data [ b -> begin - begin ] , b -> data , b -> size )"	85:2:2239:2291	911862	1	True				
ANR	912045	CallExpression	"memcpy ( & r -> data [ b -> begin - begin ] , b -> data , b -> size )"		911862	0					
ANR	912046	Callee	memcpy		911862	0					
ANR	912047	Identifier	memcpy		911862	0					
ANR	912048	ArgumentList	& r -> data [ b -> begin - begin ]		911862	1					
ANR	912049	Argument	& r -> data [ b -> begin - begin ]		911862	0					
ANR	912050	UnaryOperationExpression	& r -> data [ b -> begin - begin ]		911862	0					
ANR	912051	UnaryOperator	&		911862	0					
ANR	912052	ArrayIndexing	r -> data [ b -> begin - begin ]		911862	1					
ANR	912053	PtrMemberAccess	r -> data		911862	0					
ANR	912054	Identifier	r		911862	0					
ANR	912055	Identifier	data		911862	1					
ANR	912056	AdditiveExpression	b -> begin - begin		911862	1		-			
ANR	912057	PtrMemberAccess	b -> begin		911862	0					
ANR	912058	Identifier	b		911862	0					
ANR	912059	Identifier	begin		911862	1					
ANR	912060	Identifier	begin		911862	1					
ANR	912061	Argument	b -> data		911862	1					
ANR	912062	PtrMemberAccess	b -> data		911862	0					
ANR	912063	Identifier	b		911862	0					
ANR	912064	Identifier	data		911862	1					
ANR	912065	Argument	b -> size		911862	2					
ANR	912066	PtrMemberAccess	b -> size		911862	0					
ANR	912067	Identifier	b		911862	0					
ANR	912068	Identifier	size		911862	1					
ANR	912069	Statement	delete	88:1:2298:2303	911862	8	True				
ANR	912070	ExpressionStatement	a	88:8:2305:2306	911862	9	True				
ANR	912071	Identifier	a		911862	0					
ANR	912072	Statement	delete	89:1:2309:2314	911862	10	True				
ANR	912073	ExpressionStatement	b	89:8:2316:2317	911862	11	True				
ANR	912074	Identifier	b		911862	0					
ANR	912075	ReturnStatement	return r ;	91:1:2321:2329	911862	12	True				
ANR	912076	Identifier	r		911862	0					
ANR	912077	ReturnType	static CondorChunk *		911862	1					
ANR	912078	Identifier	combine		911862	2					
ANR	912079	ParameterList	"CondorChunk * a , CondorChunk * b"		911862	3					
ANR	912080	Parameter	CondorChunk * a	67:30:1737:1750	911862	0	True				
ANR	912081	ParameterType	CondorChunk *		911862	0					
ANR	912082	Identifier	a		911862	1					
ANR	912083	Parameter	CondorChunk * b	67:46:1753:1766	911862	1	True				
ANR	912084	ParameterType	CondorChunk *		911862	0					
ANR	912085	Identifier	b		911862	1					
ANR	912086	CFGEntryNode	ENTRY		911862		True				
ANR	912087	CFGExitNode	EXIT		911862		True				
ANR	912088	Symbol	a -> size		911862						
ANR	912089	Symbol	a -> last_used		911862						
ANR	912090	Symbol	a		911862						
ANR	912091	Symbol	b -> last_used		911862						
ANR	912092	Symbol	b		911862						
ANR	912093	Symbol	a -> dirty		911862						
ANR	912094	Symbol	MAX		911862						
ANR	912095	Symbol	b -> size		911862						
ANR	912096	Symbol	b -> begin		911862						
ANR	912097	Symbol	* a		911862						
ANR	912098	Symbol	* b		911862						
ANR	912099	Symbol	a -> data		911862						
ANR	912100	Symbol	a -> begin		911862						
ANR	912101	Symbol	b -> dirty		911862						
ANR	912102	Symbol	r		911862						
ANR	912103	Symbol	MIN		911862						
ANR	912104	Symbol	r -> last_used		911862						
ANR	912105	Symbol	b -> data		911862						
ANR	912106	Symbol	r -> dirty		911862						
ANR	912107	Symbol	end		911862						
ANR	912108	Symbol	a -> max_size		911862						
ANR	912109	Symbol	* r		911862						
ANR	912110	Symbol	begin		911862						
ANR	912111	Symbol	r -> data		911862						
ANR	912112	Function	overlaps	98:0:2398:2601							
ANR	912113	FunctionDef	"overlaps (CondorChunk * a , CondorChunk * b)"		912112	0					
ANR	912114	CompoundStatement		99:0:2453:2601	912112	0					
ANR	912115	ReturnStatement	return ( ( a -> begin >= b -> begin ) && ( a -> begin < ( b -> begin + b -> size ) ) ) || ( ( b -> begin >= a -> begin ) && ( b -> begin < ( a -> begin + a -> size ) ) ) ;	100:1:2456:2599	912112	0	True				
ANR	912116	OrExpression	( ( a -> begin >= b -> begin ) && ( a -> begin < ( b -> begin + b -> size ) ) ) || ( ( b -> begin >= a -> begin ) && ( b -> begin < ( a -> begin + a -> size ) ) )		912112	0		||			
ANR	912117	AndExpression	( a -> begin >= b -> begin ) && ( a -> begin < ( b -> begin + b -> size ) )		912112	0		&&			
ANR	912118	RelationalExpression	a -> begin >= b -> begin		912112	0		>=			
ANR	912119	PtrMemberAccess	a -> begin		912112	0					
ANR	912120	Identifier	a		912112	0					
ANR	912121	Identifier	begin		912112	1					
ANR	912122	PtrMemberAccess	b -> begin		912112	1					
ANR	912123	Identifier	b		912112	0					
ANR	912124	Identifier	begin		912112	1					
ANR	912125	RelationalExpression	a -> begin < ( b -> begin + b -> size )		912112	1		<			
ANR	912126	PtrMemberAccess	a -> begin		912112	0					
ANR	912127	Identifier	a		912112	0					
ANR	912128	Identifier	begin		912112	1					
ANR	912129	AdditiveExpression	b -> begin + b -> size		912112	1		+			
ANR	912130	PtrMemberAccess	b -> begin		912112	0					
ANR	912131	Identifier	b		912112	0					
ANR	912132	Identifier	begin		912112	1					
ANR	912133	PtrMemberAccess	b -> size		912112	1					
ANR	912134	Identifier	b		912112	0					
ANR	912135	Identifier	size		912112	1					
ANR	912136	AndExpression	( b -> begin >= a -> begin ) && ( b -> begin < ( a -> begin + a -> size ) )		912112	1		&&			
ANR	912137	RelationalExpression	b -> begin >= a -> begin		912112	0		>=			
ANR	912138	PtrMemberAccess	b -> begin		912112	0					
ANR	912139	Identifier	b		912112	0					
ANR	912140	Identifier	begin		912112	1					
ANR	912141	PtrMemberAccess	a -> begin		912112	1					
ANR	912142	Identifier	a		912112	0					
ANR	912143	Identifier	begin		912112	1					
ANR	912144	RelationalExpression	b -> begin < ( a -> begin + a -> size )		912112	1		<			
ANR	912145	PtrMemberAccess	b -> begin		912112	0					
ANR	912146	Identifier	b		912112	0					
ANR	912147	Identifier	begin		912112	1					
ANR	912148	AdditiveExpression	a -> begin + a -> size		912112	1		+			
ANR	912149	PtrMemberAccess	a -> begin		912112	0					
ANR	912150	Identifier	a		912112	0					
ANR	912151	Identifier	begin		912112	1					
ANR	912152	PtrMemberAccess	a -> size		912112	1					
ANR	912153	Identifier	a		912112	0					
ANR	912154	Identifier	size		912112	1					
ANR	912155	ReturnType	static int		912112	1					
ANR	912156	Identifier	overlaps		912112	2					
ANR	912157	ParameterList	"CondorChunk * a , CondorChunk * b"		912112	3					
ANR	912158	Parameter	CondorChunk * a	98:21:2419:2432	912112	0	True				
ANR	912159	ParameterType	CondorChunk *		912112	0					
ANR	912160	Identifier	a		912112	1					
ANR	912161	Parameter	CondorChunk * b	98:37:2435:2448	912112	1	True				
ANR	912162	ParameterType	CondorChunk *		912112	0					
ANR	912163	Identifier	b		912112	1					
ANR	912164	CFGEntryNode	ENTRY		912112		True				
ANR	912165	CFGExitNode	EXIT		912112		True				
ANR	912166	Symbol	a -> size		912112						
ANR	912167	Symbol	a		912112						
ANR	912168	Symbol	a -> begin		912112						
ANR	912169	Symbol	b		912112						
ANR	912170	Symbol	b -> size		912112						
ANR	912171	Symbol	b -> begin		912112						
ANR	912172	Symbol	* a		912112						
ANR	912173	Symbol	* b		912112						
ANR	912174	Function	adjacent	114:0:2674:2817							
ANR	912175	FunctionDef	"adjacent (CondorChunk * a , CondorChunk * b)"		912174	0					
ANR	912176	CompoundStatement		115:0:2728:2817	912174	0					
ANR	912177	ReturnStatement	return ( ( a -> begin + a -> size ) == b -> begin ) || ( ( b -> begin + b -> size ) == a -> begin ) ;	116:1:2731:2815	912174	0	True				
ANR	912178	OrExpression	( ( a -> begin + a -> size ) == b -> begin ) || ( ( b -> begin + b -> size ) == a -> begin )		912174	0		||			
ANR	912179	EqualityExpression	( a -> begin + a -> size ) == b -> begin		912174	0		==			
ANR	912180	AdditiveExpression	a -> begin + a -> size		912174	0		+			
ANR	912181	PtrMemberAccess	a -> begin		912174	0					
ANR	912182	Identifier	a		912174	0					
ANR	912183	Identifier	begin		912174	1					
ANR	912184	PtrMemberAccess	a -> size		912174	1					
ANR	912185	Identifier	a		912174	0					
ANR	912186	Identifier	size		912174	1					
ANR	912187	PtrMemberAccess	b -> begin		912174	1					
ANR	912188	Identifier	b		912174	0					
ANR	912189	Identifier	begin		912174	1					
ANR	912190	EqualityExpression	( b -> begin + b -> size ) == a -> begin		912174	1		==			
ANR	912191	AdditiveExpression	b -> begin + b -> size		912174	0		+			
ANR	912192	PtrMemberAccess	b -> begin		912174	0					
ANR	912193	Identifier	b		912174	0					
ANR	912194	Identifier	begin		912174	1					
ANR	912195	PtrMemberAccess	b -> size		912174	1					
ANR	912196	Identifier	b		912174	0					
ANR	912197	Identifier	size		912174	1					
ANR	912198	PtrMemberAccess	a -> begin		912174	1					
ANR	912199	Identifier	a		912174	0					
ANR	912200	Identifier	begin		912174	1					
ANR	912201	ReturnType	static int		912174	1					
ANR	912202	Identifier	adjacent		912174	2					
ANR	912203	ParameterList	"CondorChunk * a , CondorChunk * b"		912174	3					
ANR	912204	Parameter	CondorChunk * a	114:21:2695:2708	912174	0	True				
ANR	912205	ParameterType	CondorChunk *		912174	0					
ANR	912206	Identifier	a		912174	1					
ANR	912207	Parameter	CondorChunk * b	114:37:2711:2724	912174	1	True				
ANR	912208	ParameterType	CondorChunk *		912174	0					
ANR	912209	Identifier	b		912174	1					
ANR	912210	CFGEntryNode	ENTRY		912174		True				
ANR	912211	CFGExitNode	EXIT		912174		True				
ANR	912212	Symbol	a -> size		912174						
ANR	912213	Symbol	a		912174						
ANR	912214	Symbol	a -> begin		912174						
ANR	912215	Symbol	b		912174						
ANR	912216	Symbol	b -> size		912174						
ANR	912217	Symbol	b -> begin		912174						
ANR	912218	Symbol	* a		912174						
ANR	912219	Symbol	* b		912174						
ANR	912220	Function	contains	127:0:2882:3010							
ANR	912221	FunctionDef	"contains (CondorChunk * c , off_t position)"		912220	0					
ANR	912222	CompoundStatement		128:0:2936:3010	912220	0					
ANR	912223	ReturnStatement	return ( c -> begin <= position ) && ( ( c -> begin + c -> size ) > position ) ;	129:1:2939:3008	912220	0	True				
ANR	912224	AndExpression	( c -> begin <= position ) && ( ( c -> begin + c -> size ) > position )		912220	0		&&			
ANR	912225	RelationalExpression	c -> begin <= position		912220	0		<=			
ANR	912226	PtrMemberAccess	c -> begin		912220	0					
ANR	912227	Identifier	c		912220	0					
ANR	912228	Identifier	begin		912220	1					
ANR	912229	Identifier	position		912220	1					
ANR	912230	RelationalExpression	( c -> begin + c -> size ) > position		912220	1		>			
ANR	912231	AdditiveExpression	c -> begin + c -> size		912220	0		+			
ANR	912232	PtrMemberAccess	c -> begin		912220	0					
ANR	912233	Identifier	c		912220	0					
ANR	912234	Identifier	begin		912220	1					
ANR	912235	PtrMemberAccess	c -> size		912220	1					
ANR	912236	Identifier	c		912220	0					
ANR	912237	Identifier	size		912220	1					
ANR	912238	Identifier	position		912220	1					
ANR	912239	ReturnType	static int		912220	1					
ANR	912240	Identifier	contains		912220	2					
ANR	912241	ParameterList	"CondorChunk * c , off_t position"		912220	3					
ANR	912242	Parameter	CondorChunk * c	127:21:2903:2916	912220	0	True				
ANR	912243	ParameterType	CondorChunk *		912220	0					
ANR	912244	Identifier	c		912220	1					
ANR	912245	Parameter	off_t position	127:37:2919:2932	912220	1	True				
ANR	912246	ParameterType	off_t		912220	0					
ANR	912247	Identifier	position		912220	1					
ANR	912248	CFGEntryNode	ENTRY		912220		True				
ANR	912249	CFGExitNode	EXIT		912220		True				
ANR	912250	Symbol	c		912220						
ANR	912251	Symbol	c -> size		912220						
ANR	912252	Symbol	position		912220						
ANR	912253	Symbol	c -> begin		912220						
ANR	912254	Symbol	* c		912220						
ANR	912255	Function	should_combine	143:0:3232:3431							
ANR	912256	FunctionDef	"should_combine (CondorChunk * a , CondorChunk * b)"		912255	0					
ANR	912257	CompoundStatement		144:0:3292:3431	912255	0					
ANR	912258	ReturnStatement	"return overlaps ( a , b ) || ( a -> dirty && b -> dirty && ( ( a -> size + b -> size ) <= a -> max_size ) && adjacent ( a , b ) ) ;"	145:1:3295:3429	912255	0	True				
ANR	912259	OrExpression	"overlaps ( a , b ) || ( a -> dirty && b -> dirty && ( ( a -> size + b -> size ) <= a -> max_size ) && adjacent ( a , b ) )"		912255	0		||			
ANR	912260	CallExpression	"overlaps ( a , b )"		912255	0					
ANR	912261	Callee	overlaps		912255	0					
ANR	912262	Identifier	overlaps		912255	0					
ANR	912263	ArgumentList	a		912255	1					
ANR	912264	Argument	a		912255	0					
ANR	912265	Identifier	a		912255	0					
ANR	912266	Argument	b		912255	1					
ANR	912267	Identifier	b		912255	0					
ANR	912268	AndExpression	"a -> dirty && b -> dirty && ( ( a -> size + b -> size ) <= a -> max_size ) && adjacent ( a , b )"		912255	1		&&			
ANR	912269	PtrMemberAccess	a -> dirty		912255	0					
ANR	912270	Identifier	a		912255	0					
ANR	912271	Identifier	dirty		912255	1					
ANR	912272	AndExpression	"b -> dirty && ( ( a -> size + b -> size ) <= a -> max_size ) && adjacent ( a , b )"		912255	1		&&			
ANR	912273	PtrMemberAccess	b -> dirty		912255	0					
ANR	912274	Identifier	b		912255	0					
ANR	912275	Identifier	dirty		912255	1					
ANR	912276	AndExpression	"( ( a -> size + b -> size ) <= a -> max_size ) && adjacent ( a , b )"		912255	1		&&			
ANR	912277	RelationalExpression	( a -> size + b -> size ) <= a -> max_size		912255	0		<=			
ANR	912278	AdditiveExpression	a -> size + b -> size		912255	0		+			
ANR	912279	PtrMemberAccess	a -> size		912255	0					
ANR	912280	Identifier	a		912255	0					
ANR	912281	Identifier	size		912255	1					
ANR	912282	PtrMemberAccess	b -> size		912255	1					
ANR	912283	Identifier	b		912255	0					
ANR	912284	Identifier	size		912255	1					
ANR	912285	PtrMemberAccess	a -> max_size		912255	1					
ANR	912286	Identifier	a		912255	0					
ANR	912287	Identifier	max_size		912255	1					
ANR	912288	CallExpression	"adjacent ( a , b )"		912255	1					
ANR	912289	Callee	adjacent		912255	0					
ANR	912290	Identifier	adjacent		912255	0					
ANR	912291	ArgumentList	a		912255	1					
ANR	912292	Argument	a		912255	0					
ANR	912293	Identifier	a		912255	0					
ANR	912294	Argument	b		912255	1					
ANR	912295	Identifier	b		912255	0					
ANR	912296	ReturnType	static int		912255	1					
ANR	912297	Identifier	should_combine		912255	2					
ANR	912298	ParameterList	"CondorChunk * a , CondorChunk * b"		912255	3					
ANR	912299	Parameter	CondorChunk * a	143:27:3259:3272	912255	0	True				
ANR	912300	ParameterType	CondorChunk *		912255	0					
ANR	912301	Identifier	a		912255	1					
ANR	912302	Parameter	CondorChunk * b	143:43:3275:3288	912255	1	True				
ANR	912303	ParameterType	CondorChunk *		912255	0					
ANR	912304	Identifier	b		912255	1					
ANR	912305	CFGEntryNode	ENTRY		912255		True				
ANR	912306	CFGExitNode	EXIT		912255		True				
ANR	912307	Symbol	a -> size		912255						
ANR	912308	Symbol	a		912255						
ANR	912309	Symbol	b -> dirty		912255						
ANR	912310	Symbol	b		912255						
ANR	912311	Symbol	a -> dirty		912255						
ANR	912312	Symbol	b -> size		912255						
ANR	912313	Symbol	overlaps		912255						
ANR	912314	Symbol	adjacent		912255						
ANR	912315	Symbol	a -> max_size		912255						
ANR	912316	Symbol	* a		912255						
ANR	912317	Symbol	* b		912255						
ANR	912318	Function	absorb	164:0:3573:3886							
ANR	912319	FunctionDef	"absorb (CondorChunk * head , CondorChunk * c)"		912318	0					
ANR	912320	CompoundStatement		165:0:3638:3886	912318	0					
ANR	912321	IdentifierDeclStatement	"CondorChunk * next , * combined ;"	166:1:3641:3669	912318	0	True				
ANR	912322	IdentifierDecl	* next		912318	0					
ANR	912323	IdentifierDeclType	CondorChunk *		912318	0					
ANR	912324	Identifier	next		912318	1					
ANR	912325	IdentifierDecl	* combined		912318	1					
ANR	912326	IdentifierDeclType	CondorChunk *		912318	0					
ANR	912327	Identifier	combined		912318	1					
ANR	912328	IfStatement	if ( ! head )		912318	1					
ANR	912329	Condition	! head	168:4:3676:3680	912318	0	True				
ANR	912330	UnaryOperationExpression	! head		912318	0					
ANR	912331	UnaryOperator	!		912318	0					
ANR	912332	Identifier	head		912318	1					
ANR	912333	ReturnStatement	return c ;	168:11:3683:3691	912318	1	True				
ANR	912334	Identifier	c		912318	0					
ANR	912335	IfStatement	"if ( should_combine ( head , c ) )"		912318	2					
ANR	912336	Condition	"should_combine ( head , c )"	170:5:3699:3723	912318	0	True				
ANR	912337	CallExpression	"should_combine ( head , c )"		912318	0					
ANR	912338	Callee	should_combine		912318	0					
ANR	912339	Identifier	should_combine		912318	0					
ANR	912340	ArgumentList	head		912318	1					
ANR	912341	Argument	head		912318	0					
ANR	912342	Identifier	head		912318	0					
ANR	912343	Argument	c		912318	1					
ANR	912344	Identifier	c		912318	0					
ANR	912345	CompoundStatement		6:33:88:88	912318	1					
ANR	912346	ExpressionStatement	next = head -> next	171:2:3731:3748	912318	0	True				
ANR	912347	AssignmentExpression	next = head -> next		912318	0		=			
ANR	912348	Identifier	next		912318	0					
ANR	912349	PtrMemberAccess	head -> next		912318	1					
ANR	912350	Identifier	head		912318	0					
ANR	912351	Identifier	next		912318	1					
ANR	912352	ExpressionStatement	"combined = combine ( head , c )"	172:2:3752:3781	912318	1	True				
ANR	912353	AssignmentExpression	"combined = combine ( head , c )"		912318	0		=			
ANR	912354	Identifier	combined		912318	0					
ANR	912355	CallExpression	"combine ( head , c )"		912318	1					
ANR	912356	Callee	combine		912318	0					
ANR	912357	Identifier	combine		912318	0					
ANR	912358	ArgumentList	head		912318	1					
ANR	912359	Argument	head		912318	0					
ANR	912360	Identifier	head		912318	0					
ANR	912361	Argument	c		912318	1					
ANR	912362	Identifier	c		912318	0					
ANR	912363	ReturnStatement	"return absorb ( next , combined ) ;"	173:2:3785:3816	912318	2	True				
ANR	912364	CallExpression	"absorb ( next , combined )"		912318	0					
ANR	912365	Callee	absorb		912318	0					
ANR	912366	Identifier	absorb		912318	0					
ANR	912367	ArgumentList	next		912318	1					
ANR	912368	Argument	next		912318	0					
ANR	912369	Identifier	next		912318	0					
ANR	912370	Argument	combined		912318	1					
ANR	912371	Identifier	combined		912318	0					
ANR	912372	ElseStatement	else		912318	0					
ANR	912373	CompoundStatement		10:8:187:187	912318	0					
ANR	912374	ExpressionStatement	"head -> next = absorb ( head -> next , c )"	175:2:3830:3866	912318	0	True				
ANR	912375	AssignmentExpression	"head -> next = absorb ( head -> next , c )"		912318	0		=			
ANR	912376	PtrMemberAccess	head -> next		912318	0					
ANR	912377	Identifier	head		912318	0					
ANR	912378	Identifier	next		912318	1					
ANR	912379	CallExpression	"absorb ( head -> next , c )"		912318	1					
ANR	912380	Callee	absorb		912318	0					
ANR	912381	Identifier	absorb		912318	0					
ANR	912382	ArgumentList	head -> next		912318	1					
ANR	912383	Argument	head -> next		912318	0					
ANR	912384	PtrMemberAccess	head -> next		912318	0					
ANR	912385	Identifier	head		912318	0					
ANR	912386	Identifier	next		912318	1					
ANR	912387	Argument	c		912318	1					
ANR	912388	Identifier	c		912318	0					
ANR	912389	ReturnStatement	return head ;	176:2:3870:3881	912318	1	True				
ANR	912390	Identifier	head		912318	0					
ANR	912391	ReturnType	static CondorChunk *		912318	1					
ANR	912392	Identifier	absorb		912318	2					
ANR	912393	ParameterList	"CondorChunk * head , CondorChunk * c"		912318	3					
ANR	912394	Parameter	CondorChunk * head	164:29:3602:3618	912318	0	True				
ANR	912395	ParameterType	CondorChunk *		912318	0					
ANR	912396	Identifier	head		912318	1					
ANR	912397	Parameter	CondorChunk * c	164:48:3621:3634	912318	1	True				
ANR	912398	ParameterType	CondorChunk *		912318	0					
ANR	912399	Identifier	c		912318	1					
ANR	912400	CFGEntryNode	ENTRY		912318		True				
ANR	912401	CFGExitNode	EXIT		912318		True				
ANR	912402	Symbol	head		912318						
ANR	912403	Symbol	next		912318						
ANR	912404	Symbol	c		912318						
ANR	912405	Symbol	should_combine		912318						
ANR	912406	Symbol	head -> next		912318						
ANR	912407	Symbol	* head		912318						
ANR	912408	Symbol	combined		912318						
ANR	912409	Symbol	absorb		912318						
ANR	912410	Symbol	combine		912318						
ANR	912411	Function	CondorFileBuffer :: CondorFileBuffer	185:0:4004:4181							
ANR	912412	FunctionDef	"CondorFileBuffer :: CondorFileBuffer (CondorFile * o , int bs , int bbs)"		912411	0					
ANR	912413	CompoundStatement		186:0:4073:4181	912411	0					
ANR	912414	ExpressionStatement	original = o	187:1:4076:4088	912411	0	True				
ANR	912415	AssignmentExpression	original = o		912411	0		=			
ANR	912416	Identifier	original		912411	0					
ANR	912417	Identifier	o		912411	1					
ANR	912418	ExpressionStatement	head = 0	188:1:4091:4099	912411	1	True				
ANR	912419	AssignmentExpression	head = 0		912411	0		=			
ANR	912420	Identifier	head		912411	0					
ANR	912421	PrimaryExpression	0		912411	1					
ANR	912422	ExpressionStatement	time = 0	189:1:4102:4110	912411	2	True				
ANR	912423	AssignmentExpression	time = 0		912411	0		=			
ANR	912424	Identifier	time		912411	0					
ANR	912425	PrimaryExpression	0		912411	1					
ANR	912426	ExpressionStatement	size = 0	190:1:4113:4121	912411	3	True				
ANR	912427	AssignmentExpression	size = 0		912411	0		=			
ANR	912428	Identifier	size		912411	0					
ANR	912429	PrimaryExpression	0		912411	1					
ANR	912430	ExpressionStatement	buffer_size = bs	191:1:4124:4140	912411	4	True				
ANR	912431	AssignmentExpression	buffer_size = bs		912411	0		=			
ANR	912432	Identifier	buffer_size		912411	0					
ANR	912433	Identifier	bs		912411	1					
ANR	912434	ExpressionStatement	buffer_block_size = bbs	192:1:4143:4166	912411	5	True				
ANR	912435	AssignmentExpression	buffer_block_size = bbs		912411	0		=			
ANR	912436	Identifier	buffer_block_size		912411	0					
ANR	912437	Identifier	bbs		912411	1					
ANR	912438	ExpressionStatement	url = NULL	193:1:4169:4179	912411	6	True				
ANR	912439	AssignmentExpression	url = NULL		912411	0		=			
ANR	912440	Identifier	url		912411	0					
ANR	912441	Identifier	NULL		912411	1					
ANR	912442	Identifier	CondorFileBuffer :: CondorFileBuffer		912411	1					
ANR	912443	ParameterList	"CondorFile * o , int bs , int bbs"		912411	2					
ANR	912444	Parameter	CondorFile * o	185:36:4040:4052	912411	0	True				
ANR	912445	ParameterType	CondorFile *		912411	0					
ANR	912446	Identifier	o		912411	1					
ANR	912447	Parameter	int bs	185:51:4055:4060	912411	1	True				
ANR	912448	ParameterType	int		912411	0					
ANR	912449	Identifier	bs		912411	1					
ANR	912450	Parameter	int bbs	185:59:4063:4069	912411	2	True				
ANR	912451	ParameterType	int		912411	0					
ANR	912452	Identifier	bbs		912411	1					
ANR	912453	CFGEntryNode	ENTRY		912411		True				
ANR	912454	CFGExitNode	EXIT		912411		True				
ANR	912455	Symbol	head		912411						
ANR	912456	Symbol	bs		912411						
ANR	912457	Symbol	bbs		912411						
ANR	912458	Symbol	original		912411						
ANR	912459	Symbol	NULL		912411						
ANR	912460	Symbol	size		912411						
ANR	912461	Symbol	buffer_block_size		912411						
ANR	912462	Symbol	buffer_size		912411						
ANR	912463	Symbol	time		912411						
ANR	912464	Symbol	url		912411						
ANR	912465	Symbol	o		912411						
ANR	912466	Function	CondorFileBuffer :: ~CondorFileBuffer	196:0:4184:4256							
ANR	912467	FunctionDef	CondorFileBuffer :: ~CondorFileBuffer ()		912466	0					
ANR	912468	CompoundStatement		197:0:4222:4256	912466	0					
ANR	912469	Statement	delete	198:1:4225:4230	912466	0	True				
ANR	912470	ExpressionStatement	original	198:8:4232:4240	912466	1	True				
ANR	912471	Identifier	original		912466	0					
ANR	912472	ExpressionStatement	free ( url )	199:1:4243:4254	912466	2	True				
ANR	912473	CallExpression	free ( url )		912466	0					
ANR	912474	Callee	free		912466	0					
ANR	912475	Identifier	free		912466	0					
ANR	912476	ArgumentList	url		912466	1					
ANR	912477	Argument	url		912466	0					
ANR	912478	Identifier	url		912466	0					
ANR	912479	Identifier	CondorFileBuffer :: ~CondorFileBuffer		912466	1					
ANR	912480	ParameterList			912466	2					
ANR	912481	CFGEntryNode	ENTRY		912466		True				
ANR	912482	CFGExitNode	EXIT		912466		True				
ANR	912483	Symbol	url		912466						
ANR	912484	Function	CondorFileBuffer :: open	202:0:4259:6032							
ANR	912485	FunctionDef	"CondorFileBuffer :: open (const char * url_in , int flags , int mode)"		912484	0					
ANR	912486	CompoundStatement		203:0:4329:6032	912484	0					
ANR	912487	IdentifierDeclStatement	char * junk = ( char * ) malloc ( strlen ( url_in ) + 1 ) ;	204:1:4332:4377	912484	0	True				
ANR	912488	IdentifierDecl	* junk = ( char * ) malloc ( strlen ( url_in ) + 1 )		912484	0					
ANR	912489	IdentifierDeclType	char *		912484	0					
ANR	912490	Identifier	junk		912484	1					
ANR	912491	AssignmentExpression	* junk = ( char * ) malloc ( strlen ( url_in ) + 1 )		912484	2		=			
ANR	912492	Identifier	junk		912484	0					
ANR	912493	CastExpression	( char * ) malloc ( strlen ( url_in ) + 1 )		912484	1					
ANR	912494	CastTarget	char *		912484	0					
ANR	912495	CallExpression	malloc ( strlen ( url_in ) + 1 )		912484	1					
ANR	912496	Callee	malloc		912484	0					
ANR	912497	Identifier	malloc		912484	0					
ANR	912498	ArgumentList	strlen ( url_in ) + 1		912484	1					
ANR	912499	Argument	strlen ( url_in ) + 1		912484	0					
ANR	912500	AdditiveExpression	strlen ( url_in ) + 1		912484	0		+			
ANR	912501	CallExpression	strlen ( url_in )		912484	0					
ANR	912502	Callee	strlen		912484	0					
ANR	912503	Identifier	strlen		912484	0					
ANR	912504	ArgumentList	url_in		912484	1					
ANR	912505	Argument	url_in		912484	0					
ANR	912506	Identifier	url_in		912484	0					
ANR	912507	PrimaryExpression	1		912484	1					
ANR	912508	IdentifierDeclStatement	char * sub_url = ( char * ) malloc ( strlen ( url_in ) + 1 ) ;	205:1:4380:4428	912484	1	True				
ANR	912509	IdentifierDecl	* sub_url = ( char * ) malloc ( strlen ( url_in ) + 1 )		912484	0					
ANR	912510	IdentifierDeclType	char *		912484	0					
ANR	912511	Identifier	sub_url		912484	1					
ANR	912512	AssignmentExpression	* sub_url = ( char * ) malloc ( strlen ( url_in ) + 1 )		912484	2		=			
ANR	912513	Identifier	sub_url		912484	0					
ANR	912514	CastExpression	( char * ) malloc ( strlen ( url_in ) + 1 )		912484	1					
ANR	912515	CastTarget	char *		912484	0					
ANR	912516	CallExpression	malloc ( strlen ( url_in ) + 1 )		912484	1					
ANR	912517	Callee	malloc		912484	0					
ANR	912518	Identifier	malloc		912484	0					
ANR	912519	ArgumentList	strlen ( url_in ) + 1		912484	1					
ANR	912520	Argument	strlen ( url_in ) + 1		912484	0					
ANR	912521	AdditiveExpression	strlen ( url_in ) + 1		912484	0		+			
ANR	912522	CallExpression	strlen ( url_in )		912484	0					
ANR	912523	Callee	strlen		912484	0					
ANR	912524	Identifier	strlen		912484	0					
ANR	912525	ArgumentList	url_in		912484	1					
ANR	912526	Argument	url_in		912484	0					
ANR	912527	Identifier	url_in		912484	0					
ANR	912528	PrimaryExpression	1		912484	1					
ANR	912529	IdentifierDeclStatement	int result ;	207:1:4432:4442	912484	2	True				
ANR	912530	IdentifierDecl	result		912484	0					
ANR	912531	IdentifierDeclType	int		912484	0					
ANR	912532	Identifier	result		912484	1					
ANR	912533	ExpressionStatement	free ( url )	209:1:4446:4457	912484	3	True				
ANR	912534	CallExpression	free ( url )		912484	0					
ANR	912535	Callee	free		912484	0					
ANR	912536	Identifier	free		912484	0					
ANR	912537	ArgumentList	url		912484	1					
ANR	912538	Argument	url		912484	0					
ANR	912539	Identifier	url		912484	0					
ANR	912540	ExpressionStatement	url = strdup ( url_in )	210:1:4460:4480	912484	4	True				
ANR	912541	AssignmentExpression	url = strdup ( url_in )		912484	0		=			
ANR	912542	Identifier	url		912484	0					
ANR	912543	CallExpression	strdup ( url_in )		912484	1					
ANR	912544	Callee	strdup		912484	0					
ANR	912545	Identifier	strdup		912484	0					
ANR	912546	ArgumentList	url_in		912484	1					
ANR	912547	Argument	url_in		912484	0					
ANR	912548	Identifier	url_in		912484	0					
ANR	912549	ExpressionStatement	"result = sscanf ( url , ""%[^:]:%[\\x1-\\x7F]"" , junk , sub_url )"	215:1:4648:4706	912484	5	True				
ANR	912550	AssignmentExpression	"result = sscanf ( url , ""%[^:]:%[\\x1-\\x7F]"" , junk , sub_url )"		912484	0		=			
ANR	912551	Identifier	result		912484	0					
ANR	912552	CallExpression	"sscanf ( url , ""%[^:]:%[\\x1-\\x7F]"" , junk , sub_url )"		912484	1					
ANR	912553	Callee	sscanf		912484	0					
ANR	912554	Identifier	sscanf		912484	0					
ANR	912555	ArgumentList	url		912484	1					
ANR	912556	Argument	url		912484	0					
ANR	912557	Identifier	url		912484	0					
ANR	912558	Argument	"""%[^:]:%[\\x1-\\x7F]"""		912484	1					
ANR	912559	PrimaryExpression	"""%[^:]:%[\\x1-\\x7F]"""		912484	0					
ANR	912560	Argument	junk		912484	2					
ANR	912561	Identifier	junk		912484	0					
ANR	912562	Argument	sub_url		912484	3					
ANR	912563	Identifier	sub_url		912484	0					
ANR	912564	ExpressionStatement	free ( junk )	219:1:4785:4797	912484	6	True				
ANR	912565	CallExpression	free ( junk )		912484	0					
ANR	912566	Callee	free		912484	0					
ANR	912567	Identifier	free		912484	0					
ANR	912568	ArgumentList	junk		912484	1					
ANR	912569	Argument	junk		912484	0					
ANR	912570	Identifier	junk		912484	0					
ANR	912571	ExpressionStatement	junk = NULL	220:1:4800:4811	912484	7	True				
ANR	912572	AssignmentExpression	junk = NULL		912484	0		=			
ANR	912573	Identifier	junk		912484	0					
ANR	912574	Identifier	NULL		912484	1					
ANR	912575	IfStatement	if ( result != 2 )		912484	8					
ANR	912576	Condition	result != 2	222:4:4818:4826	912484	0	True				
ANR	912577	EqualityExpression	result != 2		912484	0		!=			
ANR	912578	Identifier	result		912484	0					
ANR	912579	PrimaryExpression	2		912484	1					
ANR	912580	CompoundStatement		20:15:499:499	912484	1					
ANR	912581	ExpressionStatement	"_condor_warning ( CONDOR_WARNING_KIND_BADURL , ""Couldn't understand url '%s'"" , url_in )"	223:2:4833:4915	912484	0	True				
ANR	912582	CallExpression	"_condor_warning ( CONDOR_WARNING_KIND_BADURL , ""Couldn't understand url '%s'"" , url_in )"		912484	0					
ANR	912583	Callee	_condor_warning		912484	0					
ANR	912584	Identifier	_condor_warning		912484	0					
ANR	912585	ArgumentList	CONDOR_WARNING_KIND_BADURL		912484	1					
ANR	912586	Argument	CONDOR_WARNING_KIND_BADURL		912484	0					
ANR	912587	Identifier	CONDOR_WARNING_KIND_BADURL		912484	0					
ANR	912588	Argument	"""Couldn't understand url '%s'"""		912484	1					
ANR	912589	PrimaryExpression	"""Couldn't understand url '%s'"""		912484	0					
ANR	912590	Argument	url_in		912484	2					
ANR	912591	Identifier	url_in		912484	0					
ANR	912592	ExpressionStatement	free ( sub_url )	224:2:4919:4932	912484	1	True				
ANR	912593	CallExpression	free ( sub_url )		912484	0					
ANR	912594	Callee	free		912484	0					
ANR	912595	Identifier	free		912484	0					
ANR	912596	ArgumentList	sub_url		912484	1					
ANR	912597	Argument	sub_url		912484	0					
ANR	912598	Identifier	sub_url		912484	0					
ANR	912599	ExpressionStatement	errno = EINVAL	225:2:4936:4950	912484	2	True				
ANR	912600	AssignmentExpression	errno = EINVAL		912484	0		=			
ANR	912601	Identifier	errno		912484	0					
ANR	912602	Identifier	EINVAL		912484	1					
ANR	912603	ReturnStatement	return - 1 ;	226:2:4954:4963	912484	3	True				
ANR	912604	UnaryOperationExpression	- 1		912484	0					
ANR	912605	UnaryOperator	-		912484	0					
ANR	912606	PrimaryExpression	1		912484	1					
ANR	912607	IfStatement	if ( sub_url [ 0 ] == '(' )		912484	9					
ANR	912608	Condition	sub_url [ 0 ] == '('	229:4:4973:4987	912484	0	True				
ANR	912609	EqualityExpression	sub_url [ 0 ] == '('		912484	0		==			
ANR	912610	ArrayIndexing	sub_url [ 0 ]		912484	0					
ANR	912611	Identifier	sub_url		912484	0					
ANR	912612	PrimaryExpression	0		912484	1					
ANR	912613	PrimaryExpression	'('		912484	1					
ANR	912614	CompoundStatement		28:2:664:710	912484	1					
ANR	912615	IdentifierDeclStatement	char * path = ( char * ) malloc ( strlen ( sub_url ) + 1 ) ;	230:2:4994:5040	912484	0	True				
ANR	912616	IdentifierDecl	* path = ( char * ) malloc ( strlen ( sub_url ) + 1 )		912484	0					
ANR	912617	IdentifierDeclType	char *		912484	0					
ANR	912618	Identifier	path		912484	1					
ANR	912619	AssignmentExpression	* path = ( char * ) malloc ( strlen ( sub_url ) + 1 )		912484	2		=			
ANR	912620	Identifier	path		912484	0					
ANR	912621	CastExpression	( char * ) malloc ( strlen ( sub_url ) + 1 )		912484	1					
ANR	912622	CastTarget	char *		912484	0					
ANR	912623	CallExpression	malloc ( strlen ( sub_url ) + 1 )		912484	1					
ANR	912624	Callee	malloc		912484	0					
ANR	912625	Identifier	malloc		912484	0					
ANR	912626	ArgumentList	strlen ( sub_url ) + 1		912484	1					
ANR	912627	Argument	strlen ( sub_url ) + 1		912484	0					
ANR	912628	AdditiveExpression	strlen ( sub_url ) + 1		912484	0		+			
ANR	912629	CallExpression	strlen ( sub_url )		912484	0					
ANR	912630	Callee	strlen		912484	0					
ANR	912631	Identifier	strlen		912484	0					
ANR	912632	ArgumentList	sub_url		912484	1					
ANR	912633	Argument	sub_url		912484	0					
ANR	912634	Identifier	sub_url		912484	0					
ANR	912635	PrimaryExpression	1		912484	1					
ANR	912636	ExpressionStatement	"result = sscanf ( sub_url , ""(%d,%d)%[\\x1-\\x7F]"" , & buffer_size , & buffer_block_size , path )"	235:2:5211:5293	912484	1	True				
ANR	912637	AssignmentExpression	"result = sscanf ( sub_url , ""(%d,%d)%[\\x1-\\x7F]"" , & buffer_size , & buffer_block_size , path )"		912484	0		=			
ANR	912638	Identifier	result		912484	0					
ANR	912639	CallExpression	"sscanf ( sub_url , ""(%d,%d)%[\\x1-\\x7F]"" , & buffer_size , & buffer_block_size , path )"		912484	1					
ANR	912640	Callee	sscanf		912484	0					
ANR	912641	Identifier	sscanf		912484	0					
ANR	912642	ArgumentList	sub_url		912484	1					
ANR	912643	Argument	sub_url		912484	0					
ANR	912644	Identifier	sub_url		912484	0					
ANR	912645	Argument	"""(%d,%d)%[\\x1-\\x7F]"""		912484	1					
ANR	912646	PrimaryExpression	"""(%d,%d)%[\\x1-\\x7F]"""		912484	0					
ANR	912647	Argument	& buffer_size		912484	2					
ANR	912648	UnaryOperationExpression	& buffer_size		912484	0					
ANR	912649	UnaryOperator	&		912484	0					
ANR	912650	Identifier	buffer_size		912484	1					
ANR	912651	Argument	& buffer_block_size		912484	3					
ANR	912652	UnaryOperationExpression	& buffer_block_size		912484	0					
ANR	912653	UnaryOperator	&		912484	0					
ANR	912654	Identifier	buffer_block_size		912484	1					
ANR	912655	Argument	path		912484	4					
ANR	912656	Identifier	path		912484	0					
ANR	912657	IfStatement	if ( result != 3 )		912484	2					
ANR	912658	Condition	result != 3	240:5:5404:5412	912484	0	True				
ANR	912659	EqualityExpression	result != 3		912484	0		!=			
ANR	912660	Identifier	result		912484	0					
ANR	912661	PrimaryExpression	3		912484	1					
ANR	912662	CompoundStatement		38:16:1085:1085	912484	1					
ANR	912663	ExpressionStatement	"_condor_warning ( CONDOR_WARNING_KIND_BADURL , ""Couldn't understand url '%s'"" , sub_url )"	241:3:5420:5503	912484	0	True				
ANR	912664	CallExpression	"_condor_warning ( CONDOR_WARNING_KIND_BADURL , ""Couldn't understand url '%s'"" , sub_url )"		912484	0					
ANR	912665	Callee	_condor_warning		912484	0					
ANR	912666	Identifier	_condor_warning		912484	0					
ANR	912667	ArgumentList	CONDOR_WARNING_KIND_BADURL		912484	1					
ANR	912668	Argument	CONDOR_WARNING_KIND_BADURL		912484	0					
ANR	912669	Identifier	CONDOR_WARNING_KIND_BADURL		912484	0					
ANR	912670	Argument	"""Couldn't understand url '%s'"""		912484	1					
ANR	912671	PrimaryExpression	"""Couldn't understand url '%s'"""		912484	0					
ANR	912672	Argument	sub_url		912484	2					
ANR	912673	Identifier	sub_url		912484	0					
ANR	912674	ExpressionStatement	errno = EINVAL	242:3:5508:5522	912484	1	True				
ANR	912675	AssignmentExpression	errno = EINVAL		912484	0		=			
ANR	912676	Identifier	errno		912484	0					
ANR	912677	Identifier	EINVAL		912484	1					
ANR	912678	ExpressionStatement	free ( path )	243:3:5527:5539	912484	2	True				
ANR	912679	CallExpression	free ( path )		912484	0					
ANR	912680	Callee	free		912484	0					
ANR	912681	Identifier	free		912484	0					
ANR	912682	ArgumentList	path		912484	1					
ANR	912683	Argument	path		912484	0					
ANR	912684	Identifier	path		912484	0					
ANR	912685	ExpressionStatement	free ( sub_url )	244:3:5544:5559	912484	3	True				
ANR	912686	CallExpression	free ( sub_url )		912484	0					
ANR	912687	Callee	free		912484	0					
ANR	912688	Identifier	free		912484	0					
ANR	912689	ArgumentList	sub_url		912484	1					
ANR	912690	Argument	sub_url		912484	0					
ANR	912691	Identifier	sub_url		912484	0					
ANR	912692	ReturnStatement	return - 1 ;	245:3:5564:5573	912484	4	True				
ANR	912693	UnaryOperationExpression	- 1		912484	0					
ANR	912694	UnaryOperator	-		912484	0					
ANR	912695	PrimaryExpression	1		912484	1					
ANR	912696	IfStatement	if ( buffer_size < 0 || buffer_block_size < 0 || buffer_size < buffer_block_size )		912484	3					
ANR	912697	Condition	buffer_size < 0 || buffer_block_size < 0 || buffer_size < buffer_block_size	247:6:5585:5653	912484	0	True				
ANR	912698	OrExpression	buffer_size < 0 || buffer_block_size < 0 || buffer_size < buffer_block_size		912484	0		||			
ANR	912699	RelationalExpression	buffer_size < 0		912484	0		<			
ANR	912700	Identifier	buffer_size		912484	0					
ANR	912701	PrimaryExpression	0		912484	1					
ANR	912702	OrExpression	buffer_block_size < 0 || buffer_size < buffer_block_size		912484	1		||			
ANR	912703	RelationalExpression	buffer_block_size < 0		912484	0		<			
ANR	912704	Identifier	buffer_block_size		912484	0					
ANR	912705	PrimaryExpression	0		912484	1					
ANR	912706	RelationalExpression	buffer_size < buffer_block_size		912484	1		<			
ANR	912707	Identifier	buffer_size		912484	0					
ANR	912708	Identifier	buffer_block_size		912484	1					
ANR	912709	CompoundStatement		45:78:1327:1327	912484	1					
ANR	912710	ExpressionStatement	"_condor_warning ( CONDOR_WARNING_KIND_NOTICE , ""Invalid buffer configuration: (%d,%d)"" , buffer_size , buffer_block_size )"	248:3:5662:5776	912484	0	True				
ANR	912711	CallExpression	"_condor_warning ( CONDOR_WARNING_KIND_NOTICE , ""Invalid buffer configuration: (%d,%d)"" , buffer_size , buffer_block_size )"		912484	0					
ANR	912712	Callee	_condor_warning		912484	0					
ANR	912713	Identifier	_condor_warning		912484	0					
ANR	912714	ArgumentList	CONDOR_WARNING_KIND_NOTICE		912484	1					
ANR	912715	Argument	CONDOR_WARNING_KIND_NOTICE		912484	0					
ANR	912716	Identifier	CONDOR_WARNING_KIND_NOTICE		912484	0					
ANR	912717	Argument	"""Invalid buffer configuration: (%d,%d)"""		912484	1					
ANR	912718	PrimaryExpression	"""Invalid buffer configuration: (%d,%d)"""		912484	0					
ANR	912719	Argument	buffer_size		912484	2					
ANR	912720	Identifier	buffer_size		912484	0					
ANR	912721	Argument	buffer_block_size		912484	3					
ANR	912722	Identifier	buffer_block_size		912484	0					
ANR	912723	ExpressionStatement	errno = EINVAL	249:3:5781:5795	912484	1	True				
ANR	912724	AssignmentExpression	errno = EINVAL		912484	0		=			
ANR	912725	Identifier	errno		912484	0					
ANR	912726	Identifier	EINVAL		912484	1					
ANR	912727	ExpressionStatement	free ( path )	250:3:5800:5812	912484	2	True				
ANR	912728	CallExpression	free ( path )		912484	0					
ANR	912729	Callee	free		912484	0					
ANR	912730	Identifier	free		912484	0					
ANR	912731	ArgumentList	path		912484	1					
ANR	912732	Argument	path		912484	0					
ANR	912733	Identifier	path		912484	0					
ANR	912734	ExpressionStatement	free ( sub_url )	251:3:5817:5832	912484	3	True				
ANR	912735	CallExpression	free ( sub_url )		912484	0					
ANR	912736	Callee	free		912484	0					
ANR	912737	Identifier	free		912484	0					
ANR	912738	ArgumentList	sub_url		912484	1					
ANR	912739	Argument	sub_url		912484	0					
ANR	912740	Identifier	sub_url		912484	0					
ANR	912741	ReturnStatement	return - 1 ;	252:3:5837:5846	912484	4	True				
ANR	912742	UnaryOperationExpression	- 1		912484	0					
ANR	912743	UnaryOperator	-		912484	0					
ANR	912744	PrimaryExpression	1		912484	1					
ANR	912745	ExpressionStatement	free ( sub_url )	254:2:5854:5869	912484	4	True				
ANR	912746	CallExpression	free ( sub_url )		912484	0					
ANR	912747	Callee	free		912484	0					
ANR	912748	Identifier	free		912484	0					
ANR	912749	ArgumentList	sub_url		912484	1					
ANR	912750	Argument	sub_url		912484	0					
ANR	912751	Identifier	sub_url		912484	0					
ANR	912752	ExpressionStatement	sub_url = strdup ( path )	255:2:5873:5895	912484	5	True				
ANR	912753	AssignmentExpression	sub_url = strdup ( path )		912484	0		=			
ANR	912754	Identifier	sub_url		912484	0					
ANR	912755	CallExpression	strdup ( path )		912484	1					
ANR	912756	Callee	strdup		912484	0					
ANR	912757	Identifier	strdup		912484	0					
ANR	912758	ArgumentList	path		912484	1					
ANR	912759	Argument	path		912484	0					
ANR	912760	Identifier	path		912484	0					
ANR	912761	ExpressionStatement	free ( path )	256:2:5899:5911	912484	6	True				
ANR	912762	CallExpression	free ( path )		912484	0					
ANR	912763	Callee	free		912484	0					
ANR	912764	Identifier	free		912484	0					
ANR	912765	ArgumentList	path		912484	1					
ANR	912766	Argument	path		912484	0					
ANR	912767	Identifier	path		912484	0					
ANR	912768	ExpressionStatement	"result = original -> open ( sub_url , flags , mode )"	259:1:5918:5965	912484	10	True				
ANR	912769	AssignmentExpression	"result = original -> open ( sub_url , flags , mode )"		912484	0		=			
ANR	912770	Identifier	result		912484	0					
ANR	912771	CallExpression	"original -> open ( sub_url , flags , mode )"		912484	1					
ANR	912772	Callee	original -> open		912484	0					
ANR	912773	PtrMemberAccess	original -> open		912484	0					
ANR	912774	Identifier	original		912484	0					
ANR	912775	Identifier	open		912484	1					
ANR	912776	ArgumentList	sub_url		912484	1					
ANR	912777	Argument	sub_url		912484	0					
ANR	912778	Identifier	sub_url		912484	0					
ANR	912779	Argument	flags		912484	1					
ANR	912780	Identifier	flags		912484	0					
ANR	912781	Argument	mode		912484	2					
ANR	912782	Identifier	mode		912484	0					
ANR	912783	ExpressionStatement	free ( sub_url )	260:1:5968:5983	912484	11	True				
ANR	912784	CallExpression	free ( sub_url )		912484	0					
ANR	912785	Callee	free		912484	0					
ANR	912786	Identifier	free		912484	0					
ANR	912787	ArgumentList	sub_url		912484	1					
ANR	912788	Argument	sub_url		912484	0					
ANR	912789	Identifier	sub_url		912484	0					
ANR	912790	ExpressionStatement	size = original -> get_size ( )	261:2:5987:6014	912484	12	True				
ANR	912791	AssignmentExpression	size = original -> get_size ( )		912484	0		=			
ANR	912792	Identifier	size		912484	0					
ANR	912793	CallExpression	original -> get_size ( )		912484	1					
ANR	912794	Callee	original -> get_size		912484	0					
ANR	912795	PtrMemberAccess	original -> get_size		912484	0					
ANR	912796	Identifier	original		912484	0					
ANR	912797	Identifier	get_size		912484	1					
ANR	912798	ArgumentList			912484	1					
ANR	912799	ReturnStatement	return result ;	262:1:6017:6030	912484	13	True				
ANR	912800	Identifier	result		912484	0					
ANR	912801	ReturnType	int		912484	1					
ANR	912802	Identifier	CondorFileBuffer :: open		912484	2					
ANR	912803	ParameterList	"const char * url_in , int flags , int mode"		912484	3					
ANR	912804	Parameter	const char * url_in	202:28:4287:4304	912484	0	True				
ANR	912805	ParameterType	const char *		912484	0					
ANR	912806	Identifier	url_in		912484	1					
ANR	912807	Parameter	int flags	202:48:4307:4315	912484	1	True				
ANR	912808	ParameterType	int		912484	0					
ANR	912809	Identifier	flags		912484	1					
ANR	912810	Parameter	int mode	202:59:4318:4325	912484	2	True				
ANR	912811	ParameterType	int		912484	0					
ANR	912812	Identifier	mode		912484	1					
ANR	912813	CFGEntryNode	ENTRY		912484		True				
ANR	912814	CFGExitNode	EXIT		912484		True				
ANR	912815	Symbol	buffer_block_size		912484						
ANR	912816	Symbol	& buffer_block_size		912484						
ANR	912817	Symbol	buffer_size		912484						
ANR	912818	Symbol	flags		912484						
ANR	912819	Symbol	* original		912484						
ANR	912820	Symbol	CONDOR_WARNING_KIND_BADURL		912484						
ANR	912821	Symbol	mode		912484						
ANR	912822	Symbol	result		912484						
ANR	912823	Symbol	strlen		912484						
ANR	912824	Symbol	path		912484						
ANR	912825	Symbol	original -> open		912484						
ANR	912826	Symbol	url_in		912484						
ANR	912827	Symbol	sub_url		912484						
ANR	912828	Symbol	malloc		912484						
ANR	912829	Symbol	errno		912484						
ANR	912830	Symbol	NULL		912484						
ANR	912831	Symbol	original		912484						
ANR	912832	Symbol	& buffer_size		912484						
ANR	912833	Symbol	url		912484						
ANR	912834	Symbol	EINVAL		912484						
ANR	912835	Symbol	size		912484						
ANR	912836	Symbol	sscanf		912484						
ANR	912837	Symbol	junk		912484						
ANR	912838	Symbol	strdup		912484						
ANR	912839	Symbol	CONDOR_WARNING_KIND_NOTICE		912484						
ANR	912840	Symbol	* sub_url		912484						
ANR	912841	Symbol	original -> get_size		912484						
ANR	912842	Function	CondorFileBuffer :: close	265:0:6035:6105							
ANR	912843	FunctionDef	CondorFileBuffer :: close ()		912842	0					
ANR	912844	CompoundStatement		266:0:6065:6105	912842	0					
ANR	912845	ExpressionStatement	flush ( 1 )	267:1:6068:6076	912842	0	True				
ANR	912846	CallExpression	flush ( 1 )		912842	0					
ANR	912847	Callee	flush		912842	0					
ANR	912848	Identifier	flush		912842	0					
ANR	912849	ArgumentList	1		912842	1					
ANR	912850	Argument	1		912842	0					
ANR	912851	PrimaryExpression	1		912842	0					
ANR	912852	ReturnStatement	return original -> close ( ) ;	268:1:6079:6103	912842	1	True				
ANR	912853	CallExpression	original -> close ( )		912842	0					
ANR	912854	Callee	original -> close		912842	0					
ANR	912855	PtrMemberAccess	original -> close		912842	0					
ANR	912856	Identifier	original		912842	0					
ANR	912857	Identifier	close		912842	1					
ANR	912858	ArgumentList			912842	1					
ANR	912859	ReturnType	int		912842	1					
ANR	912860	Identifier	CondorFileBuffer :: close		912842	2					
ANR	912861	ParameterList			912842	3					
ANR	912862	CFGEntryNode	ENTRY		912842		True				
ANR	912863	CFGExitNode	EXIT		912842		True				
ANR	912864	Symbol	original		912842						
ANR	912865	Symbol	* original		912842						
ANR	912866	Symbol	original -> close		912842						
ANR	912867	Function	CondorFileBuffer :: read	276:0:6241:8089							
ANR	912868	FunctionDef	"CondorFileBuffer :: read (off_t offset , char * data , int length)"		912867	0					
ANR	912869	CompoundStatement		277:0:6306:8089	912867	0					
ANR	912870	IdentifierDeclStatement	CondorChunk * c = 0 ;	278:1:6309:6325	912867	0	True				
ANR	912871	IdentifierDecl	* c = 0		912867	0					
ANR	912872	IdentifierDeclType	CondorChunk *		912867	0					
ANR	912873	Identifier	c		912867	1					
ANR	912874	AssignmentExpression	* c = 0		912867	2		=			
ANR	912875	Identifier	c		912867	0					
ANR	912876	PrimaryExpression	0		912867	1					
ANR	912877	IdentifierDeclStatement	off_t piece = 0 ;	279:1:6328:6341	912867	1	True				
ANR	912878	IdentifierDecl	piece = 0		912867	0					
ANR	912879	IdentifierDeclType	off_t		912867	0					
ANR	912880	Identifier	piece		912867	1					
ANR	912881	AssignmentExpression	piece = 0		912867	2		=			
ANR	912882	Identifier	piece		912867	0					
ANR	912883	PrimaryExpression	0		912867	1					
ANR	912884	IdentifierDeclStatement	int bytes_read = 0 ;	280:1:6344:6360	912867	2	True				
ANR	912885	IdentifierDecl	bytes_read = 0		912867	0					
ANR	912886	IdentifierDeclType	int		912867	0					
ANR	912887	Identifier	bytes_read		912867	1					
ANR	912888	AssignmentExpression	bytes_read = 0		912867	2		=			
ANR	912889	Identifier	bytes_read		912867	0					
ANR	912890	PrimaryExpression	0		912867	1					
ANR	912891	IdentifierDeclStatement	off_t hole_top ;	281:1:6363:6377	912867	3	True				
ANR	912892	IdentifierDecl	hole_top		912867	0					
ANR	912893	IdentifierDeclType	off_t		912867	0					
ANR	912894	Identifier	hole_top		912867	1					
ANR	912895	IfStatement	if ( ( offset + length ) > size )		912867	4					
ANR	912896	Condition	( offset + length ) > size	286:4:6480:6499	912867	0	True				
ANR	912897	RelationalExpression	( offset + length ) > size		912867	0		>			
ANR	912898	AdditiveExpression	offset + length		912867	0		+			
ANR	912899	Identifier	offset		912867	0					
ANR	912900	Identifier	length		912867	1					
ANR	912901	Identifier	size		912867	1					
ANR	912902	CompoundStatement		10:26:195:195	912867	1					
ANR	912903	ExpressionStatement	length = size - offset	287:2:6506:6526	912867	0	True				
ANR	912904	AssignmentExpression	length = size - offset		912867	0		=			
ANR	912905	Identifier	length		912867	0					
ANR	912906	AdditiveExpression	size - offset		912867	1		-			
ANR	912907	Identifier	size		912867	0					
ANR	912908	Identifier	offset		912867	1					
ANR	912909	WhileStatement	while ( length > 0 )		912867	5					
ANR	912910	Condition	length > 0	290:7:6539:6546	912867	0	True				
ANR	912911	RelationalExpression	length > 0		912867	0		>			
ANR	912912	Identifier	length		912867	0					
ANR	912913	PrimaryExpression	0		912867	1					
ANR	912914	CompoundStatement		14:17:242:242	912867	1					
ANR	912915	ExpressionStatement	"hole_top = MIN ( size , offset + length )"	295:2:6659:6696	912867	0	True				
ANR	912916	AssignmentExpression	"hole_top = MIN ( size , offset + length )"		912867	0		=			
ANR	912917	Identifier	hole_top		912867	0					
ANR	912918	CallExpression	"MIN ( size , offset + length )"		912867	1					
ANR	912919	Callee	MIN		912867	0					
ANR	912920	Identifier	MIN		912867	0					
ANR	912921	ArgumentList	size		912867	1					
ANR	912922	Argument	size		912867	0					
ANR	912923	Identifier	size		912867	0					
ANR	912924	Argument	offset + length		912867	1					
ANR	912925	AdditiveExpression	offset + length		912867	0		+			
ANR	912926	Identifier	offset		912867	0					
ANR	912927	Identifier	length		912867	1					
ANR	912928	ForStatement	for ( c = head ; c ; c = c -> next )		912867	1					
ANR	912929	ForInit	c = head ;	301:7:6828:6834	912867	0	True				
ANR	912930	AssignmentExpression	c = head		912867	0		=			
ANR	912931	Identifier	c		912867	0					
ANR	912932	Identifier	head		912867	1					
ANR	912933	Condition	c	301:15:6836:6836	912867	1	True				
ANR	912934	Identifier	c		912867	0					
ANR	912935	AssignmentExpression	c = c -> next	301:18:6839:6847	912867	2	True	=			
ANR	912936	Identifier	c		912867	0					
ANR	912937	PtrMemberAccess	c -> next		912867	1					
ANR	912938	Identifier	c		912867	0					
ANR	912939	Identifier	next		912867	1					
ANR	912940	CompoundStatement		25:30:544:544	912867	3					
ANR	912941	IfStatement	"if ( contains ( c , offset ) )"		912867	0					
ANR	912942	Condition	"contains ( c , offset )"	302:7:6860:6877	912867	0	True				
ANR	912943	CallExpression	"contains ( c , offset )"		912867	0					
ANR	912944	Callee	contains		912867	0					
ANR	912945	Identifier	contains		912867	0					
ANR	912946	ArgumentList	c		912867	1					
ANR	912947	Argument	c		912867	0					
ANR	912948	Identifier	c		912867	0					
ANR	912949	Argument	offset		912867	1					
ANR	912950	Identifier	offset		912867	0					
ANR	912951	CompoundStatement		26:28:574:574	912867	1					
ANR	912952	ExpressionStatement	"piece = MIN ( c -> begin + c -> size - offset , length )"	303:4:6887:6930	912867	0	True				
ANR	912953	AssignmentExpression	"piece = MIN ( c -> begin + c -> size - offset , length )"		912867	0		=			
ANR	912954	Identifier	piece		912867	0					
ANR	912955	CallExpression	"MIN ( c -> begin + c -> size - offset , length )"		912867	1					
ANR	912956	Callee	MIN		912867	0					
ANR	912957	Identifier	MIN		912867	0					
ANR	912958	ArgumentList	c -> begin + c -> size - offset		912867	1					
ANR	912959	Argument	c -> begin + c -> size - offset		912867	0					
ANR	912960	AdditiveExpression	c -> begin + c -> size - offset		912867	0		+			
ANR	912961	PtrMemberAccess	c -> begin		912867	0					
ANR	912962	Identifier	c		912867	0					
ANR	912963	Identifier	begin		912867	1					
ANR	912964	AdditiveExpression	c -> size - offset		912867	1		-			
ANR	912965	PtrMemberAccess	c -> size		912867	0					
ANR	912966	Identifier	c		912867	0					
ANR	912967	Identifier	size		912867	1					
ANR	912968	Identifier	offset		912867	1					
ANR	912969	Argument	length		912867	1					
ANR	912970	Identifier	length		912867	0					
ANR	912971	ExpressionStatement	"memcpy ( data , & c -> data [ offset - c -> begin ] , piece )"	304:4:6936:6980	912867	1	True				
ANR	912972	CallExpression	"memcpy ( data , & c -> data [ offset - c -> begin ] , piece )"		912867	0					
ANR	912973	Callee	memcpy		912867	0					
ANR	912974	Identifier	memcpy		912867	0					
ANR	912975	ArgumentList	data		912867	1					
ANR	912976	Argument	data		912867	0					
ANR	912977	Identifier	data		912867	0					
ANR	912978	Argument	& c -> data [ offset - c -> begin ]		912867	1					
ANR	912979	UnaryOperationExpression	& c -> data [ offset - c -> begin ]		912867	0					
ANR	912980	UnaryOperator	&		912867	0					
ANR	912981	ArrayIndexing	c -> data [ offset - c -> begin ]		912867	1					
ANR	912982	PtrMemberAccess	c -> data		912867	0					
ANR	912983	Identifier	c		912867	0					
ANR	912984	Identifier	data		912867	1					
ANR	912985	AdditiveExpression	offset - c -> begin		912867	1		-			
ANR	912986	Identifier	offset		912867	0					
ANR	912987	PtrMemberAccess	c -> begin		912867	1					
ANR	912988	Identifier	c		912867	0					
ANR	912989	Identifier	begin		912867	1					
ANR	912990	Argument	piece		912867	2					
ANR	912991	Identifier	piece		912867	0					
ANR	912992	ExpressionStatement	offset += piece	305:4:6986:7001	912867	2	True				
ANR	912993	AssignmentExpression	offset += piece		912867	0		+=			
ANR	912994	Identifier	offset		912867	0					
ANR	912995	Identifier	piece		912867	1					
ANR	912996	ExpressionStatement	data += piece	306:4:7007:7020	912867	3	True				
ANR	912997	AssignmentExpression	data += piece		912867	0		+=			
ANR	912998	Identifier	data		912867	0					
ANR	912999	Identifier	piece		912867	1					
ANR	913000	ExpressionStatement	length -= piece	307:4:7026:7041	912867	4	True				
ANR	913001	AssignmentExpression	length -= piece		912867	0		-=			
ANR	913002	Identifier	length		912867	0					
ANR	913003	Identifier	piece		912867	1					
ANR	913004	ExpressionStatement	bytes_read += piece	308:4:7047:7066	912867	5	True				
ANR	913005	AssignmentExpression	bytes_read += piece		912867	0		+=			
ANR	913006	Identifier	bytes_read		912867	0					
ANR	913007	Identifier	piece		912867	1					
ANR	913008	ExpressionStatement	c -> last_used = time ++	309:4:7072:7093	912867	6	True				
ANR	913009	AssignmentExpression	c -> last_used = time ++		912867	0		=			
ANR	913010	PtrMemberAccess	c -> last_used		912867	0					
ANR	913011	Identifier	c		912867	0					
ANR	913012	Identifier	last_used		912867	1					
ANR	913013	PostIncDecOperationExpression	time ++		912867	1					
ANR	913014	Identifier	time		912867	0					
ANR	913015	IncDec	++		912867	1					
ANR	913016	BreakStatement	break ;	310:4:7099:7104	912867	7	True				
ANR	913017	ElseStatement	else		912867	0					
ANR	913018	CompoundStatement		35:10:809:809	912867	0					
ANR	913019	IfStatement	if ( ( c -> begin < hole_top ) && ( c -> begin > offset ) )		912867	0					
ANR	913020	Condition	( c -> begin < hole_top ) && ( c -> begin > offset )	312:7:7125:7162	912867	0	True				
ANR	913021	AndExpression	( c -> begin < hole_top ) && ( c -> begin > offset )		912867	0		&&			
ANR	913022	RelationalExpression	c -> begin < hole_top		912867	0		<			
ANR	913023	PtrMemberAccess	c -> begin		912867	0					
ANR	913024	Identifier	c		912867	0					
ANR	913025	Identifier	begin		912867	1					
ANR	913026	Identifier	hole_top		912867	1					
ANR	913027	RelationalExpression	c -> begin > offset		912867	1		>			
ANR	913028	PtrMemberAccess	c -> begin		912867	0					
ANR	913029	Identifier	c		912867	0					
ANR	913030	Identifier	begin		912867	1					
ANR	913031	Identifier	offset		912867	1					
ANR	913032	CompoundStatement		36:47:858:858	912867	1					
ANR	913033	ExpressionStatement	hole_top = c -> begin	313:5:7172:7191	912867	0	True				
ANR	913034	AssignmentExpression	hole_top = c -> begin		912867	0		=			
ANR	913035	Identifier	hole_top		912867	0					
ANR	913036	PtrMemberAccess	c -> begin		912867	1					
ANR	913037	Identifier	c		912867	0					
ANR	913038	Identifier	begin		912867	1					
ANR	913039	IfStatement	if ( c )		912867	2					
ANR	913040	Condition	c	320:5:7250:7250	912867	0	True				
ANR	913041	Identifier	c		912867	0					
ANR	913042	ContinueStatement	continue ;	320:8:7253:7261	912867	1	True				
ANR	913043	ExpressionStatement	piece = hole_top - offset	327:2:7485:7508	912867	3	True				
ANR	913044	AssignmentExpression	piece = hole_top - offset		912867	0		=			
ANR	913045	Identifier	piece		912867	0					
ANR	913046	AdditiveExpression	hole_top - offset		912867	1		-			
ANR	913047	Identifier	hole_top		912867	0					
ANR	913048	Identifier	offset		912867	1					
ANR	913049	IfStatement	if ( offset < size && offset >= original -> get_size ( ) )		912867	4					
ANR	913050	Condition	offset < size && offset >= original -> get_size ( )	329:6:7517:7559	912867	0	True				
ANR	913051	AndExpression	offset < size && offset >= original -> get_size ( )		912867	0		&&			
ANR	913052	RelationalExpression	offset < size		912867	0		<			
ANR	913053	Identifier	offset		912867	0					
ANR	913054	Identifier	size		912867	1					
ANR	913055	RelationalExpression	offset >= original -> get_size ( )		912867	1		>=			
ANR	913056	Identifier	offset		912867	0					
ANR	913057	CallExpression	original -> get_size ( )		912867	1					
ANR	913058	Callee	original -> get_size		912867	0					
ANR	913059	PtrMemberAccess	original -> get_size		912867	0					
ANR	913060	Identifier	original		912867	0					
ANR	913061	Identifier	get_size		912867	1					
ANR	913062	ArgumentList			912867	1					
ANR	913063	CompoundStatement		53:52:1256:1256	912867	1					
ANR	913064	ExpressionStatement	"memset ( data , 0 , piece )"	330:3:7568:7588	912867	0	True				
ANR	913065	CallExpression	"memset ( data , 0 , piece )"		912867	0					
ANR	913066	Callee	memset		912867	0					
ANR	913067	Identifier	memset		912867	0					
ANR	913068	ArgumentList	data		912867	1					
ANR	913069	Argument	data		912867	0					
ANR	913070	Identifier	data		912867	0					
ANR	913071	Argument	0		912867	1					
ANR	913072	PrimaryExpression	0		912867	0					
ANR	913073	Argument	piece		912867	2					
ANR	913074	Identifier	piece		912867	0					
ANR	913075	ExpressionStatement	offset += piece	331:3:7593:7608	912867	1	True				
ANR	913076	AssignmentExpression	offset += piece		912867	0		+=			
ANR	913077	Identifier	offset		912867	0					
ANR	913078	Identifier	piece		912867	1					
ANR	913079	ExpressionStatement	data += piece	332:3:7613:7626	912867	2	True				
ANR	913080	AssignmentExpression	data += piece		912867	0		+=			
ANR	913081	Identifier	data		912867	0					
ANR	913082	Identifier	piece		912867	1					
ANR	913083	ExpressionStatement	length -= piece	333:3:7631:7646	912867	3	True				
ANR	913084	AssignmentExpression	length -= piece		912867	0		-=			
ANR	913085	Identifier	length		912867	0					
ANR	913086	Identifier	piece		912867	1					
ANR	913087	ExpressionStatement	bytes_read += piece	334:3:7651:7670	912867	4	True				
ANR	913088	AssignmentExpression	bytes_read += piece		912867	0		+=			
ANR	913089	Identifier	bytes_read		912867	0					
ANR	913090	Identifier	piece		912867	1					
ANR	913091	ContinueStatement	continue ;	335:3:7675:7683	912867	5	True				
ANR	913092	ExpressionStatement	"c = new CondorChunk ( offset , buffer_block_size , buffer_block_size )"	340:2:7754:7817	912867	5	True				
ANR	913093	AssignmentExpression	"c = new CondorChunk ( offset , buffer_block_size , buffer_block_size )"		912867	0		=			
ANR	913094	Identifier	c		912867	0					
ANR	913095	Expression	"offset , buffer_block_size , buffer_block_size"		912867	1					
ANR	913096	Identifier	offset		912867	0					
ANR	913097	Expression	"buffer_block_size , buffer_block_size"		912867	1					
ANR	913098	Identifier	buffer_block_size		912867	0					
ANR	913099	Identifier	buffer_block_size		912867	1					
ANR	913100	ExpressionStatement	"piece = original -> read ( offset , c -> data , c -> size )"	341:2:7821:7867	912867	6	True				
ANR	913101	AssignmentExpression	"piece = original -> read ( offset , c -> data , c -> size )"		912867	0		=			
ANR	913102	Identifier	piece		912867	0					
ANR	913103	CallExpression	"original -> read ( offset , c -> data , c -> size )"		912867	1					
ANR	913104	Callee	original -> read		912867	0					
ANR	913105	PtrMemberAccess	original -> read		912867	0					
ANR	913106	Identifier	original		912867	0					
ANR	913107	Identifier	read		912867	1					
ANR	913108	ArgumentList	offset		912867	1					
ANR	913109	Argument	offset		912867	0					
ANR	913110	Identifier	offset		912867	0					
ANR	913111	Argument	c -> data		912867	1					
ANR	913112	PtrMemberAccess	c -> data		912867	0					
ANR	913113	Identifier	c		912867	0					
ANR	913114	Identifier	data		912867	1					
ANR	913115	Argument	c -> size		912867	2					
ANR	913116	PtrMemberAccess	c -> size		912867	0					
ANR	913117	Identifier	c		912867	0					
ANR	913118	Identifier	size		912867	1					
ANR	913119	IfStatement	if ( piece < 0 )		912867	7					
ANR	913120	Condition	piece < 0	342:5:7874:7880	912867	0	True				
ANR	913121	RelationalExpression	piece < 0		912867	0		<			
ANR	913122	Identifier	piece		912867	0					
ANR	913123	PrimaryExpression	0		912867	1					
ANR	913124	CompoundStatement		66:14:1576:1576	912867	1					
ANR	913125	Statement	delete	343:3:7888:7893	912867	0	True				
ANR	913126	ExpressionStatement	c	343:10:7895:7896	912867	1	True				
ANR	913127	Identifier	c		912867	0					
ANR	913128	IfStatement	if ( bytes_read == 0 )		912867	2					
ANR	913129	Condition	bytes_read == 0	344:6:7904:7916	912867	0	True				
ANR	913130	EqualityExpression	bytes_read == 0		912867	0		==			
ANR	913131	Identifier	bytes_read		912867	0					
ANR	913132	PrimaryExpression	0		912867	1					
ANR	913133	ExpressionStatement	bytes_read = - 1	344:21:7919:7932	912867	1	True				
ANR	913134	AssignmentExpression	bytes_read = - 1		912867	0		=			
ANR	913135	Identifier	bytes_read		912867	0					
ANR	913136	UnaryOperationExpression	- 1		912867	1					
ANR	913137	UnaryOperator	-		912867	0					
ANR	913138	PrimaryExpression	1		912867	1					
ANR	913139	BreakStatement	break ;	345:3:7937:7942	912867	3	True				
ANR	913140	ElseStatement	else		912867	0					
ANR	913141	IfStatement	if ( piece == 0 )		912867	0					
ANR	913142	Condition	piece == 0	346:12:7956:7963	912867	0	True				
ANR	913143	EqualityExpression	piece == 0		912867	0		==			
ANR	913144	Identifier	piece		912867	0					
ANR	913145	PrimaryExpression	0		912867	1					
ANR	913146	CompoundStatement		70:22:1659:1659	912867	1					
ANR	913147	Statement	delete	347:3:7971:7976	912867	0	True				
ANR	913148	ExpressionStatement	c	347:10:7978:7979	912867	1	True				
ANR	913149	Identifier	c		912867	0					
ANR	913150	BreakStatement	break ;	348:3:7984:7989	912867	2	True				
ANR	913151	ElseStatement	else		912867	0					
ANR	913152	CompoundStatement		73:9:1693:1693	912867	0					
ANR	913153	ExpressionStatement	c -> size = piece	350:3:8005:8020	912867	0	True				
ANR	913154	AssignmentExpression	c -> size = piece		912867	0		=			
ANR	913155	PtrMemberAccess	c -> size		912867	0					
ANR	913156	Identifier	c		912867	0					
ANR	913157	Identifier	size		912867	1					
ANR	913158	Identifier	piece		912867	1					
ANR	913159	ExpressionStatement	"head = absorb ( head , c )"	351:3:8025:8049	912867	1	True				
ANR	913160	AssignmentExpression	"head = absorb ( head , c )"		912867	0		=			
ANR	913161	Identifier	head		912867	0					
ANR	913162	CallExpression	"absorb ( head , c )"		912867	1					
ANR	913163	Callee	absorb		912867	0					
ANR	913164	Identifier	absorb		912867	0					
ANR	913165	ArgumentList	head		912867	1					
ANR	913166	Argument	head		912867	0					
ANR	913167	Identifier	head		912867	0					
ANR	913168	Argument	c		912867	1					
ANR	913169	Identifier	c		912867	0					
ANR	913170	ExpressionStatement	trim ( )	355:1:8060:8066	912867	6	True				
ANR	913171	CallExpression	trim ( )		912867	0					
ANR	913172	Callee	trim		912867	0					
ANR	913173	Identifier	trim		912867	0					
ANR	913174	ArgumentList			912867	1					
ANR	913175	ReturnStatement	return bytes_read ;	357:1:8070:8087	912867	7	True				
ANR	913176	Identifier	bytes_read		912867	0					
ANR	913177	ReturnType	int		912867	1					
ANR	913178	Identifier	CondorFileBuffer :: read		912867	2					
ANR	913179	ParameterList	"off_t offset , char * data , int length"		912867	3					
ANR	913180	Parameter	off_t offset	276:27:6268:6279	912867	0	True				
ANR	913181	ParameterType	off_t		912867	0					
ANR	913182	Identifier	offset		912867	1					
ANR	913183	Parameter	char * data	276:41:6282:6291	912867	1	True				
ANR	913184	ParameterType	char *		912867	0					
ANR	913185	Identifier	data		912867	1					
ANR	913186	Parameter	int length	276:53:6294:6303	912867	2	True				
ANR	913187	ParameterType	int		912867	0					
ANR	913188	Identifier	length		912867	1					
ANR	913189	CFGEntryNode	ENTRY		912867		True				
ANR	913190	CFGExitNode	EXIT		912867		True				
ANR	913191	Symbol	c		912867						
ANR	913192	Symbol	hole_top		912867						
ANR	913193	Symbol	original		912867						
ANR	913194	Symbol	offset		912867						
ANR	913195	Symbol	data		912867						
ANR	913196	Symbol	buffer_block_size		912867						
ANR	913197	Symbol	c -> last_used		912867						
ANR	913198	Symbol	length		912867						
ANR	913199	Symbol	c -> size		912867						
ANR	913200	Symbol	bytes_read		912867						
ANR	913201	Symbol	* original		912867						
ANR	913202	Symbol	c -> begin		912867						
ANR	913203	Symbol	original -> read		912867						
ANR	913204	Symbol	absorb		912867						
ANR	913205	Symbol	* c		912867						
ANR	913206	Symbol	c -> data		912867						
ANR	913207	Symbol	head		912867						
ANR	913208	Symbol	c -> next		912867						
ANR	913209	Symbol	contains		912867						
ANR	913210	Symbol	MIN		912867						
ANR	913211	Symbol	size		912867						
ANR	913212	Symbol	piece		912867						
ANR	913213	Symbol	time		912867						
ANR	913214	Symbol	original -> get_size		912867						
ANR	913215	Function	CondorFileBuffer :: write	366:0:8259:8588							
ANR	913216	FunctionDef	"CondorFileBuffer :: write (off_t offset , char * data , int length)"		913215	0					
ANR	913217	CompoundStatement		367:0:8325:8588	913215	0					
ANR	913218	IdentifierDeclStatement	CondorChunk * c = 0 ;	368:1:8328:8344	913215	0	True				
ANR	913219	IdentifierDecl	* c = 0		913215	0					
ANR	913220	IdentifierDeclType	CondorChunk *		913215	0					
ANR	913221	Identifier	c		913215	1					
ANR	913222	AssignmentExpression	* c = 0		913215	2		=			
ANR	913223	Identifier	c		913215	0					
ANR	913224	PrimaryExpression	0		913215	1					
ANR	913225	ExpressionStatement	"c = new CondorChunk ( offset , length , buffer_block_size )"	370:1:8348:8400	913215	1	True				
ANR	913226	AssignmentExpression	"c = new CondorChunk ( offset , length , buffer_block_size )"		913215	0		=			
ANR	913227	Identifier	c		913215	0					
ANR	913228	Expression	"offset , length , buffer_block_size"		913215	1					
ANR	913229	Identifier	offset		913215	0					
ANR	913230	Expression	"length , buffer_block_size"		913215	1					
ANR	913231	Identifier	length		913215	0					
ANR	913232	Identifier	buffer_block_size		913215	1					
ANR	913233	ExpressionStatement	"memcpy ( c -> data , data , length )"	371:1:8403:8430	913215	2	True				
ANR	913234	CallExpression	"memcpy ( c -> data , data , length )"		913215	0					
ANR	913235	Callee	memcpy		913215	0					
ANR	913236	Identifier	memcpy		913215	0					
ANR	913237	ArgumentList	c -> data		913215	1					
ANR	913238	Argument	c -> data		913215	0					
ANR	913239	PtrMemberAccess	c -> data		913215	0					
ANR	913240	Identifier	c		913215	0					
ANR	913241	Identifier	data		913215	1					
ANR	913242	Argument	data		913215	1					
ANR	913243	Identifier	data		913215	0					
ANR	913244	Argument	length		913215	2					
ANR	913245	Identifier	length		913215	0					
ANR	913246	ExpressionStatement	c -> dirty = 1	372:1:8433:8445	913215	3	True				
ANR	913247	AssignmentExpression	c -> dirty = 1		913215	0		=			
ANR	913248	PtrMemberAccess	c -> dirty		913215	0					
ANR	913249	Identifier	c		913215	0					
ANR	913250	Identifier	dirty		913215	1					
ANR	913251	PrimaryExpression	1		913215	1					
ANR	913252	ExpressionStatement	c -> last_used = time ++	373:1:8448:8469	913215	4	True				
ANR	913253	AssignmentExpression	c -> last_used = time ++		913215	0		=			
ANR	913254	PtrMemberAccess	c -> last_used		913215	0					
ANR	913255	Identifier	c		913215	0					
ANR	913256	Identifier	last_used		913215	1					
ANR	913257	PostIncDecOperationExpression	time ++		913215	1					
ANR	913258	Identifier	time		913215	0					
ANR	913259	IncDec	++		913215	1					
ANR	913260	ExpressionStatement	"head = absorb ( head , c )"	375:1:8473:8497	913215	5	True				
ANR	913261	AssignmentExpression	"head = absorb ( head , c )"		913215	0		=			
ANR	913262	Identifier	head		913215	0					
ANR	913263	CallExpression	"absorb ( head , c )"		913215	1					
ANR	913264	Callee	absorb		913215	0					
ANR	913265	Identifier	absorb		913215	0					
ANR	913266	ArgumentList	head		913215	1					
ANR	913267	Argument	head		913215	0					
ANR	913268	Identifier	head		913215	0					
ANR	913269	Argument	c		913215	1					
ANR	913270	Identifier	c		913215	0					
ANR	913271	ExpressionStatement	trim ( )	377:1:8501:8507	913215	6	True				
ANR	913272	CallExpression	trim ( )		913215	0					
ANR	913273	Callee	trim		913215	0					
ANR	913274	Identifier	trim		913215	0					
ANR	913275	ArgumentList			913215	1					
ANR	913276	IfStatement	if ( ( offset + length ) > get_size ( ) )		913215	7					
ANR	913277	Condition	( offset + length ) > get_size ( )	379:4:8514:8539	913215	0	True				
ANR	913278	RelationalExpression	( offset + length ) > get_size ( )		913215	0		>			
ANR	913279	AdditiveExpression	offset + length		913215	0		+			
ANR	913280	Identifier	offset		913215	0					
ANR	913281	Identifier	length		913215	1					
ANR	913282	CallExpression	get_size ( )		913215	1					
ANR	913283	Callee	get_size		913215	0					
ANR	913284	Identifier	get_size		913215	0					
ANR	913285	ArgumentList			913215	1					
ANR	913286	CompoundStatement		13:32:216:216	913215	1					
ANR	913287	ExpressionStatement	size = offset + length	380:2:8546:8566	913215	0	True				
ANR	913288	AssignmentExpression	size = offset + length		913215	0		=			
ANR	913289	Identifier	size		913215	0					
ANR	913290	AdditiveExpression	offset + length		913215	1		+			
ANR	913291	Identifier	offset		913215	0					
ANR	913292	Identifier	length		913215	1					
ANR	913293	ReturnStatement	return length ;	383:1:8573:8586	913215	8	True				
ANR	913294	Identifier	length		913215	0					
ANR	913295	ReturnType	int		913215	1					
ANR	913296	Identifier	CondorFileBuffer :: write		913215	2					
ANR	913297	ParameterList	"off_t offset , char * data , int length"		913215	3					
ANR	913298	Parameter	off_t offset	366:28:8287:8298	913215	0	True				
ANR	913299	ParameterType	off_t		913215	0					
ANR	913300	Identifier	offset		913215	1					
ANR	913301	Parameter	char * data	366:42:8301:8310	913215	1	True				
ANR	913302	ParameterType	char *		913215	0					
ANR	913303	Identifier	data		913215	1					
ANR	913304	Parameter	int length	366:54:8313:8322	913215	2	True				
ANR	913305	ParameterType	int		913215	0					
ANR	913306	Identifier	length		913215	1					
ANR	913307	CFGEntryNode	ENTRY		913215		True				
ANR	913308	CFGExitNode	EXIT		913215		True				
ANR	913309	Symbol	c		913215						
ANR	913310	Symbol	offset		913215						
ANR	913311	Symbol	data		913215						
ANR	913312	Symbol	buffer_block_size		913215						
ANR	913313	Symbol	c -> last_used		913215						
ANR	913314	Symbol	length		913215						
ANR	913315	Symbol	absorb		913215						
ANR	913316	Symbol	* c		913215						
ANR	913317	Symbol	c -> data		913215						
ANR	913318	Symbol	head		913215						
ANR	913319	Symbol	size		913215						
ANR	913320	Symbol	c -> dirty		913215						
ANR	913321	Symbol	time		913215						
ANR	913322	Symbol	get_size		913215						
ANR	913323	Function	CondorFileBuffer :: fcntl	386:0:8591:8675							
ANR	913324	FunctionDef	"CondorFileBuffer :: fcntl (int cmd , int arg)"		913323	0					
ANR	913325	CompoundStatement		387:0:8639:8675	913323	0					
ANR	913326	ReturnStatement	"return original -> fcntl ( cmd , arg ) ;"	388:1:8642:8673	913323	0	True				
ANR	913327	CallExpression	"original -> fcntl ( cmd , arg )"		913323	0					
ANR	913328	Callee	original -> fcntl		913323	0					
ANR	913329	PtrMemberAccess	original -> fcntl		913323	0					
ANR	913330	Identifier	original		913323	0					
ANR	913331	Identifier	fcntl		913323	1					
ANR	913332	ArgumentList	cmd		913323	1					
ANR	913333	Argument	cmd		913323	0					
ANR	913334	Identifier	cmd		913323	0					
ANR	913335	Argument	arg		913323	1					
ANR	913336	Identifier	arg		913323	0					
ANR	913337	ReturnType	int		913323	1					
ANR	913338	Identifier	CondorFileBuffer :: fcntl		913323	2					
ANR	913339	ParameterList	"int cmd , int arg"		913323	3					
ANR	913340	Parameter	int cmd	386:29:8620:8626	913323	0	True				
ANR	913341	ParameterType	int		913323	0					
ANR	913342	Identifier	cmd		913323	1					
ANR	913343	Parameter	int arg	386:38:8629:8635	913323	1	True				
ANR	913344	ParameterType	int		913323	0					
ANR	913345	Identifier	arg		913323	1					
ANR	913346	CFGEntryNode	ENTRY		913323		True				
ANR	913347	CFGExitNode	EXIT		913323		True				
ANR	913348	Symbol	original -> fcntl		913323						
ANR	913349	Symbol	original		913323						
ANR	913350	Symbol	arg		913323						
ANR	913351	Symbol	cmd		913323						
ANR	913352	Symbol	* original		913323						
ANR	913353	Function	CondorFileBuffer :: ioctl	391:0:8678:8763							
ANR	913354	FunctionDef	"CondorFileBuffer :: ioctl (int cmd , long arg)"		913353	0					
ANR	913355	CompoundStatement		392:0:8727:8763	913353	0					
ANR	913356	ReturnStatement	"return original -> ioctl ( cmd , arg ) ;"	393:1:8730:8761	913353	0	True				
ANR	913357	CallExpression	"original -> ioctl ( cmd , arg )"		913353	0					
ANR	913358	Callee	original -> ioctl		913353	0					
ANR	913359	PtrMemberAccess	original -> ioctl		913353	0					
ANR	913360	Identifier	original		913353	0					
ANR	913361	Identifier	ioctl		913353	1					
ANR	913362	ArgumentList	cmd		913353	1					
ANR	913363	Argument	cmd		913353	0					
ANR	913364	Identifier	cmd		913353	0					
ANR	913365	Argument	arg		913353	1					
ANR	913366	Identifier	arg		913353	0					
ANR	913367	ReturnType	int		913353	1					
ANR	913368	Identifier	CondorFileBuffer :: ioctl		913353	2					
ANR	913369	ParameterList	"int cmd , long arg"		913353	3					
ANR	913370	Parameter	int cmd	391:29:8707:8713	913353	0	True				
ANR	913371	ParameterType	int		913353	0					
ANR	913372	Identifier	cmd		913353	1					
ANR	913373	Parameter	long arg	391:38:8716:8723	913353	1	True				
ANR	913374	ParameterType	long		913353	0					
ANR	913375	Identifier	arg		913353	1					
ANR	913376	CFGEntryNode	ENTRY		913353		True				
ANR	913377	CFGExitNode	EXIT		913353		True				
ANR	913378	Symbol	original		913353						
ANR	913379	Symbol	arg		913353						
ANR	913380	Symbol	cmd		913353						
ANR	913381	Symbol	* original		913353						
ANR	913382	Symbol	original -> ioctl		913353						
ANR	913383	Function	CondorFileBuffer :: ftruncate	396:0:8766:8881							
ANR	913384	FunctionDef	CondorFileBuffer :: ftruncate (size_t length)		913383	0					
ANR	913385	CompoundStatement		397:0:8815:8881	913383	0					
ANR	913386	ExpressionStatement	flush ( 1 )	398:1:8818:8826	913383	0	True				
ANR	913387	CallExpression	flush ( 1 )		913383	0					
ANR	913388	Callee	flush		913383	0					
ANR	913389	Identifier	flush		913383	0					
ANR	913390	ArgumentList	1		913383	1					
ANR	913391	Argument	1		913383	0					
ANR	913392	PrimaryExpression	1		913383	0					
ANR	913393	ExpressionStatement	size = length	399:1:8829:8842	913383	1	True				
ANR	913394	AssignmentExpression	size = length		913383	0		=			
ANR	913395	Identifier	size		913383	0					
ANR	913396	Identifier	length		913383	1					
ANR	913397	ReturnStatement	return original -> ftruncate ( length ) ;	400:1:8845:8879	913383	2	True				
ANR	913398	CallExpression	original -> ftruncate ( length )		913383	0					
ANR	913399	Callee	original -> ftruncate		913383	0					
ANR	913400	PtrMemberAccess	original -> ftruncate		913383	0					
ANR	913401	Identifier	original		913383	0					
ANR	913402	Identifier	ftruncate		913383	1					
ANR	913403	ArgumentList	length		913383	1					
ANR	913404	Argument	length		913383	0					
ANR	913405	Identifier	length		913383	0					
ANR	913406	ReturnType	int		913383	1					
ANR	913407	Identifier	CondorFileBuffer :: ftruncate		913383	2					
ANR	913408	ParameterList	size_t length		913383	3					
ANR	913409	Parameter	size_t length	396:33:8799:8811	913383	0	True				
ANR	913410	ParameterType	size_t		913383	0					
ANR	913411	Identifier	length		913383	1					
ANR	913412	CFGEntryNode	ENTRY		913383		True				
ANR	913413	CFGExitNode	EXIT		913383		True				
ANR	913414	Symbol	original		913383						
ANR	913415	Symbol	size		913383						
ANR	913416	Symbol	original -> ftruncate		913383						
ANR	913417	Symbol	length		913383						
ANR	913418	Symbol	* original		913383						
ANR	913419	Function	CondorFileBuffer :: fsync	403:0:8884:8953							
ANR	913420	FunctionDef	CondorFileBuffer :: fsync ()		913419	0					
ANR	913421	CompoundStatement		404:0:8914:8953	913419	0					
ANR	913422	ExpressionStatement	flush ( )	405:1:8917:8924	913419	0	True				
ANR	913423	CallExpression	flush ( )		913419	0					
ANR	913424	Callee	flush		913419	0					
ANR	913425	Identifier	flush		913419	0					
ANR	913426	ArgumentList			913419	1					
ANR	913427	ReturnStatement	return original -> fsync ( ) ;	406:1:8927:8951	913419	1	True				
ANR	913428	CallExpression	original -> fsync ( )		913419	0					
ANR	913429	Callee	original -> fsync		913419	0					
ANR	913430	PtrMemberAccess	original -> fsync		913419	0					
ANR	913431	Identifier	original		913419	0					
ANR	913432	Identifier	fsync		913419	1					
ANR	913433	ArgumentList			913419	1					
ANR	913434	ReturnType	int		913419	1					
ANR	913435	Identifier	CondorFileBuffer :: fsync		913419	2					
ANR	913436	ParameterList			913419	3					
ANR	913437	CFGEntryNode	ENTRY		913419		True				
ANR	913438	CFGExitNode	EXIT		913419		True				
ANR	913439	Symbol	original -> fsync		913419						
ANR	913440	Symbol	original		913419						
ANR	913441	Symbol	* original		913419						
ANR	913442	Function	CondorFileBuffer :: flush	409:0:8956:9010							
ANR	913443	FunctionDef	CondorFileBuffer :: flush ()		913442	0					
ANR	913444	CompoundStatement		410:0:8986:9010	913442	0					
ANR	913445	ExpressionStatement	flush ( 0 )	411:1:8989:8997	913442	0	True				
ANR	913446	CallExpression	flush ( 0 )		913442	0					
ANR	913447	Callee	flush		913442	0					
ANR	913448	Identifier	flush		913442	0					
ANR	913449	ArgumentList	0		913442	1					
ANR	913450	Argument	0		913442	0					
ANR	913451	PrimaryExpression	0		913442	0					
ANR	913452	ReturnStatement	return 0 ;	412:1:9000:9008	913442	1	True				
ANR	913453	PrimaryExpression	0		913442	0					
ANR	913454	ReturnType	int		913442	1					
ANR	913455	Identifier	CondorFileBuffer :: flush		913442	2					
ANR	913456	ParameterList			913442	3					
ANR	913457	CFGEntryNode	ENTRY		913442		True				
ANR	913458	CFGExitNode	EXIT		913442		True				
ANR	913459	Function	CondorFileBuffer :: fstat	415:0:9013:9177							
ANR	913460	FunctionDef	CondorFileBuffer :: fstat (struct stat * buf)		913459	0					
ANR	913461	CompoundStatement		416:0:9059:9177	913459	0					
ANR	913462	IdentifierDeclStatement	int ret ;	417:1:9062:9069	913459	0	True				
ANR	913463	IdentifierDecl	ret		913459	0					
ANR	913464	IdentifierDeclType	int		913459	0					
ANR	913465	Identifier	ret		913459	1					
ANR	913466	ExpressionStatement	ret = original -> fstat ( buf )	419:1:9073:9099	913459	1	True				
ANR	913467	AssignmentExpression	ret = original -> fstat ( buf )		913459	0		=			
ANR	913468	Identifier	ret		913459	0					
ANR	913469	CallExpression	original -> fstat ( buf )		913459	1					
ANR	913470	Callee	original -> fstat		913459	0					
ANR	913471	PtrMemberAccess	original -> fstat		913459	0					
ANR	913472	Identifier	original		913459	0					
ANR	913473	Identifier	fstat		913459	1					
ANR	913474	ArgumentList	buf		913459	1					
ANR	913475	Argument	buf		913459	0					
ANR	913476	Identifier	buf		913459	0					
ANR	913477	IfStatement	if ( ret != 0 )		913459	2					
ANR	913478	Condition	ret != 0	420:5:9106:9113	913459	0	True				
ANR	913479	EqualityExpression	ret != 0		913459	0		!=			
ANR	913480	Identifier	ret		913459	0					
ANR	913481	PrimaryExpression	0		913459	1					
ANR	913482	CompoundStatement		5:15:56:56	913459	1					
ANR	913483	ReturnStatement	return ret ;	421:2:9120:9130	913459	0	True				
ANR	913484	Identifier	ret		913459	0					
ANR	913485	ExpressionStatement	buf -> st_size = get_size ( )	423:1:9136:9161	913459	3	True				
ANR	913486	AssignmentExpression	buf -> st_size = get_size ( )		913459	0		=			
ANR	913487	PtrMemberAccess	buf -> st_size		913459	0					
ANR	913488	Identifier	buf		913459	0					
ANR	913489	Identifier	st_size		913459	1					
ANR	913490	CallExpression	get_size ( )		913459	1					
ANR	913491	Callee	get_size		913459	0					
ANR	913492	Identifier	get_size		913459	0					
ANR	913493	ArgumentList			913459	1					
ANR	913494	ReturnStatement	return ret ;	425:1:9165:9175	913459	4	True				
ANR	913495	Identifier	ret		913459	0					
ANR	913496	ReturnType	int		913459	1					
ANR	913497	Identifier	CondorFileBuffer :: fstat		913459	2					
ANR	913498	ParameterList	struct stat * buf		913459	3					
ANR	913499	Parameter	struct stat * buf	415:28:9041:9056	913459	0	True				
ANR	913500	ParameterType	struct stat *		913459	0					
ANR	913501	Identifier	buf		913459	1					
ANR	913502	CFGEntryNode	ENTRY		913459		True				
ANR	913503	CFGExitNode	EXIT		913459		True				
ANR	913504	Symbol	ret		913459						
ANR	913505	Symbol	buf		913459						
ANR	913506	Symbol	* buf		913459						
ANR	913507	Symbol	original		913459						
ANR	913508	Symbol	buf -> st_size		913459						
ANR	913509	Symbol	original -> fstat		913459						
ANR	913510	Symbol	* original		913459						
ANR	913511	Symbol	get_size		913459						
ANR	913512	Function	CondorFileBuffer :: is_readable	428:0:9180:9251							
ANR	913513	FunctionDef	CondorFileBuffer :: is_readable ()		913512	0					
ANR	913514	CompoundStatement		429:0:9216:9251	913512	0					
ANR	913515	ReturnStatement	return original -> is_readable ( ) ;	430:1:9219:9249	913512	0	True				
ANR	913516	CallExpression	original -> is_readable ( )		913512	0					
ANR	913517	Callee	original -> is_readable		913512	0					
ANR	913518	PtrMemberAccess	original -> is_readable		913512	0					
ANR	913519	Identifier	original		913512	0					
ANR	913520	Identifier	is_readable		913512	1					
ANR	913521	ArgumentList			913512	1					
ANR	913522	ReturnType	int		913512	1					
ANR	913523	Identifier	CondorFileBuffer :: is_readable		913512	2					
ANR	913524	ParameterList			913512	3					
ANR	913525	CFGEntryNode	ENTRY		913512		True				
ANR	913526	CFGExitNode	EXIT		913512		True				
ANR	913527	Symbol	original		913512						
ANR	913528	Symbol	* original		913512						
ANR	913529	Symbol	original -> is_readable		913512						
ANR	913530	Function	CondorFileBuffer :: is_writeable	433:0:9254:9327							
ANR	913531	FunctionDef	CondorFileBuffer :: is_writeable ()		913530	0					
ANR	913532	CompoundStatement		434:0:9291:9327	913530	0					
ANR	913533	ReturnStatement	return original -> is_writeable ( ) ;	435:1:9294:9325	913530	0	True				
ANR	913534	CallExpression	original -> is_writeable ( )		913530	0					
ANR	913535	Callee	original -> is_writeable		913530	0					
ANR	913536	PtrMemberAccess	original -> is_writeable		913530	0					
ANR	913537	Identifier	original		913530	0					
ANR	913538	Identifier	is_writeable		913530	1					
ANR	913539	ArgumentList			913530	1					
ANR	913540	ReturnType	int		913530	1					
ANR	913541	Identifier	CondorFileBuffer :: is_writeable		913530	2					
ANR	913542	ParameterList			913530	3					
ANR	913543	CFGEntryNode	ENTRY		913530		True				
ANR	913544	CFGExitNode	EXIT		913530		True				
ANR	913545	Symbol	original		913530						
ANR	913546	Symbol	original -> is_writeable		913530						
ANR	913547	Symbol	* original		913530						
ANR	913548	Function	CondorFileBuffer :: is_seekable	438:0:9330:9401							
ANR	913549	FunctionDef	CondorFileBuffer :: is_seekable ()		913548	0					
ANR	913550	CompoundStatement		439:0:9366:9401	913548	0					
ANR	913551	ReturnStatement	return original -> is_seekable ( ) ;	440:1:9369:9399	913548	0	True				
ANR	913552	CallExpression	original -> is_seekable ( )		913548	0					
ANR	913553	Callee	original -> is_seekable		913548	0					
ANR	913554	PtrMemberAccess	original -> is_seekable		913548	0					
ANR	913555	Identifier	original		913548	0					
ANR	913556	Identifier	is_seekable		913548	1					
ANR	913557	ArgumentList			913548	1					
ANR	913558	ReturnType	int		913548	1					
ANR	913559	Identifier	CondorFileBuffer :: is_seekable		913548	2					
ANR	913560	ParameterList			913548	3					
ANR	913561	CFGEntryNode	ENTRY		913548		True				
ANR	913562	CFGExitNode	EXIT		913548		True				
ANR	913563	Symbol	original		913548						
ANR	913564	Symbol	original -> is_seekable		913548						
ANR	913565	Symbol	* original		913548						
ANR	913566	Function	CondorFileBuffer :: get_size	443:0:9404:9455							
ANR	913567	FunctionDef	CondorFileBuffer :: get_size ()		913566	0					
ANR	913568	CompoundStatement		444:0:9439:9455	913566	0					
ANR	913569	ReturnStatement	return size ;	445:1:9442:9453	913566	0	True				
ANR	913570	Identifier	size		913566	0					
ANR	913571	ReturnType	off_t		913566	1					
ANR	913572	Identifier	CondorFileBuffer :: get_size		913566	2					
ANR	913573	ParameterList			913566	3					
ANR	913574	CFGEntryNode	ENTRY		913566		True				
ANR	913575	CFGExitNode	EXIT		913566		True				
ANR	913576	Symbol	size		913566						
ANR	913577	Function	CondorFileBuffer :: get_url	448:0:9458:9525							
ANR	913578	FunctionDef	CondorFileBuffer :: get_url ()		913577	0					
ANR	913579	CompoundStatement		449:0:9499:9525	913577	0					
ANR	913580	ReturnStatement	"return url ? url : """" ;"	450:1:9502:9523	913577	0	True				
ANR	913581	ConditionalExpression	"url ? url : """""		913577	0					
ANR	913582	Condition	url		913577	0					
ANR	913583	Identifier	url		913577	0					
ANR	913584	Identifier	url		913577	1					
ANR	913585	PrimaryExpression	""""""		913577	2					
ANR	913586	ReturnType	char const *		913577	1					
ANR	913587	Identifier	CondorFileBuffer :: get_url		913577	2					
ANR	913588	ParameterList			913577	3					
ANR	913589	CFGEntryNode	ENTRY		913577		True				
ANR	913590	CFGExitNode	EXIT		913577		True				
ANR	913591	Symbol	url		913577						
ANR	913592	Function	CondorFileBuffer :: get_unmapped_fd	453:0:9528:9607							
ANR	913593	FunctionDef	CondorFileBuffer :: get_unmapped_fd ()		913592	0					
ANR	913594	CompoundStatement		454:0:9568:9607	913592	0					
ANR	913595	ReturnStatement	return original -> get_unmapped_fd ( ) ;	455:1:9571:9605	913592	0	True				
ANR	913596	CallExpression	original -> get_unmapped_fd ( )		913592	0					
ANR	913597	Callee	original -> get_unmapped_fd		913592	0					
ANR	913598	PtrMemberAccess	original -> get_unmapped_fd		913592	0					
ANR	913599	Identifier	original		913592	0					
ANR	913600	Identifier	get_unmapped_fd		913592	1					
ANR	913601	ArgumentList			913592	1					
ANR	913602	ReturnType	int		913592	1					
ANR	913603	Identifier	CondorFileBuffer :: get_unmapped_fd		913592	2					
ANR	913604	ParameterList			913592	3					
ANR	913605	CFGEntryNode	ENTRY		913592		True				
ANR	913606	CFGExitNode	EXIT		913592		True				
ANR	913607	Symbol	original		913592						
ANR	913608	Symbol	original -> get_unmapped_fd		913592						
ANR	913609	Symbol	* original		913592						
ANR	913610	Function	CondorFileBuffer :: is_file_local	458:0:9610:9685							
ANR	913611	FunctionDef	CondorFileBuffer :: is_file_local ()		913610	0					
ANR	913612	CompoundStatement		459:0:9648:9685	913610	0					
ANR	913613	ReturnStatement	return original -> is_file_local ( ) ;	460:1:9651:9683	913610	0	True				
ANR	913614	CallExpression	original -> is_file_local ( )		913610	0					
ANR	913615	Callee	original -> is_file_local		913610	0					
ANR	913616	PtrMemberAccess	original -> is_file_local		913610	0					
ANR	913617	Identifier	original		913610	0					
ANR	913618	Identifier	is_file_local		913610	1					
ANR	913619	ArgumentList			913610	1					
ANR	913620	ReturnType	int		913610	1					
ANR	913621	Identifier	CondorFileBuffer :: is_file_local		913610	2					
ANR	913622	ParameterList			913610	3					
ANR	913623	CFGEntryNode	ENTRY		913610		True				
ANR	913624	CFGExitNode	EXIT		913610		True				
ANR	913625	Symbol	original		913610						
ANR	913626	Symbol	original -> is_file_local		913610						
ANR	913627	Symbol	* original		913610						
ANR	913628	Function	CondorFileBuffer :: trim	468:0:9817:10154							
ANR	913629	FunctionDef	CondorFileBuffer :: trim ()		913628	0					
ANR	913630	CompoundStatement		469:0:9847:10154	913628	0					
ANR	913631	IdentifierDeclStatement	"CondorChunk * best_chunk , * i ;"	470:1:9850:9876	913628	0	True				
ANR	913632	IdentifierDecl	* best_chunk		913628	0					
ANR	913633	IdentifierDeclType	CondorChunk *		913628	0					
ANR	913634	Identifier	best_chunk		913628	1					
ANR	913635	IdentifierDecl	* i		913628	1					
ANR	913636	IdentifierDeclType	CondorChunk *		913628	0					
ANR	913637	Identifier	i		913628	1					
ANR	913638	IdentifierDeclStatement	off_t space_used ;	471:1:9879:9895	913628	1	True				
ANR	913639	IdentifierDecl	space_used		913628	0					
ANR	913640	IdentifierDeclType	off_t		913628	0					
ANR	913641	Identifier	space_used		913628	1					
ANR	913642	WhileStatement	while ( 1 )		913628	2					
ANR	913643	Condition	1	473:7:9905:9905	913628	0	True				
ANR	913644	PrimaryExpression	1		913628	0					
ANR	913645	CompoundStatement		5:10:60:60	913628	1					
ANR	913646	ExpressionStatement	space_used = 0	474:2:9912:9926	913628	0	True				
ANR	913647	AssignmentExpression	space_used = 0		913628	0		=			
ANR	913648	Identifier	space_used		913628	0					
ANR	913649	PrimaryExpression	0		913628	1					
ANR	913650	ExpressionStatement	best_chunk = head	475:2:9930:9947	913628	1	True				
ANR	913651	AssignmentExpression	best_chunk = head		913628	0		=			
ANR	913652	Identifier	best_chunk		913628	0					
ANR	913653	Identifier	head		913628	1					
ANR	913654	ForStatement	for ( i = head ; i ; i = i -> next )		913628	2					
ANR	913655	ForInit	i = head ;	477:7:9957:9963	913628	0	True				
ANR	913656	AssignmentExpression	i = head		913628	0		=			
ANR	913657	Identifier	i		913628	0					
ANR	913658	Identifier	head		913628	1					
ANR	913659	Condition	i	477:15:9965:9965	913628	1	True				
ANR	913660	Identifier	i		913628	0					
ANR	913661	AssignmentExpression	i = i -> next	477:18:9968:9976	913628	2	True	=			
ANR	913662	Identifier	i		913628	0					
ANR	913663	PtrMemberAccess	i -> next		913628	1					
ANR	913664	Identifier	i		913628	0					
ANR	913665	Identifier	next		913628	1					
ANR	913666	CompoundStatement		9:30:132:132	913628	3					
ANR	913667	IfStatement	if ( i -> last_used < best_chunk -> last_used )		913628	0					
ANR	913668	Condition	i -> last_used < best_chunk -> last_used	478:7:9989:10024	913628	0	True				
ANR	913669	RelationalExpression	i -> last_used < best_chunk -> last_used		913628	0		<			
ANR	913670	PtrMemberAccess	i -> last_used		913628	0					
ANR	913671	Identifier	i		913628	0					
ANR	913672	Identifier	last_used		913628	1					
ANR	913673	PtrMemberAccess	best_chunk -> last_used		913628	1					
ANR	913674	Identifier	best_chunk		913628	0					
ANR	913675	Identifier	last_used		913628	1					
ANR	913676	CompoundStatement		10:46:180:180	913628	1					
ANR	913677	ExpressionStatement	best_chunk = i	479:4:10034:10048	913628	0	True				
ANR	913678	AssignmentExpression	best_chunk = i		913628	0		=			
ANR	913679	Identifier	best_chunk		913628	0					
ANR	913680	Identifier	i		913628	1					
ANR	913681	ExpressionStatement	space_used += i -> size	481:3:10058:10079	913628	1	True				
ANR	913682	AssignmentExpression	space_used += i -> size		913628	0		+=			
ANR	913683	Identifier	space_used		913628	0					
ANR	913684	PtrMemberAccess	i -> size		913628	1					
ANR	913685	Identifier	i		913628	0					
ANR	913686	Identifier	size		913628	1					
ANR	913687	IfStatement	if ( space_used <= buffer_size )		913628	3					
ANR	913688	Condition	space_used <= buffer_size	484:6:10092:10116	913628	0	True				
ANR	913689	RelationalExpression	space_used <= buffer_size		913628	0		<=			
ANR	913690	Identifier	space_used		913628	0					
ANR	913691	Identifier	buffer_size		913628	1					
ANR	913692	ReturnStatement	return ;	484:33:10119:10125	913628	1	True				
ANR	913693	ExpressionStatement	evict ( best_chunk )	486:2:10130:10149	913628	4	True				
ANR	913694	CallExpression	evict ( best_chunk )		913628	0					
ANR	913695	Callee	evict		913628	0					
ANR	913696	Identifier	evict		913628	0					
ANR	913697	ArgumentList	best_chunk		913628	1					
ANR	913698	Argument	best_chunk		913628	0					
ANR	913699	Identifier	best_chunk		913628	0					
ANR	913700	ReturnType	void		913628	1					
ANR	913701	Identifier	CondorFileBuffer :: trim		913628	2					
ANR	913702	ParameterList			913628	3					
ANR	913703	CFGEntryNode	ENTRY		913628		True				
ANR	913704	CFGExitNode	EXIT		913628		True				
ANR	913705	Symbol	head		913628						
ANR	913706	Symbol	best_chunk -> last_used		913628						
ANR	913707	Symbol	space_used		913628						
ANR	913708	Symbol	* i		913628						
ANR	913709	Symbol	best_chunk		913628						
ANR	913710	Symbol	buffer_size		913628						
ANR	913711	Symbol	i		913628						
ANR	913712	Symbol	i -> next		913628						
ANR	913713	Symbol	* best_chunk		913628						
ANR	913714	Symbol	i -> last_used		913628						
ANR	913715	Symbol	i -> size		913628						
ANR	913716	Function	CondorFileBuffer :: flush	490:0:10157:10369							
ANR	913717	FunctionDef	CondorFileBuffer :: flush (int deallocate)		913716	0					
ANR	913718	CompoundStatement		491:0:10204:10369	913716	0					
ANR	913719	IdentifierDeclStatement	"CondorChunk * c , * n ;"	492:1:10207:10224	913716	0	True				
ANR	913720	IdentifierDecl	* c		913716	0					
ANR	913721	IdentifierDeclType	CondorChunk *		913716	0					
ANR	913722	Identifier	c		913716	1					
ANR	913723	IdentifierDecl	* n		913716	1					
ANR	913724	IdentifierDeclType	CondorChunk *		913716	0					
ANR	913725	Identifier	n		913716	1					
ANR	913726	ExpressionStatement	c = head	494:1:10228:10234	913716	1	True				
ANR	913727	AssignmentExpression	c = head		913716	0		=			
ANR	913728	Identifier	c		913716	0					
ANR	913729	Identifier	head		913716	1					
ANR	913730	WhileStatement	while ( c )		913716	2					
ANR	913731	Condition	c	495:7:10243:10243	913716	0	True				
ANR	913732	Identifier	c		913716	0					
ANR	913733	CompoundStatement		5:10:41:41	913716	1					
ANR	913734	ExpressionStatement	clean ( c )	496:2:10250:10258	913716	0	True				
ANR	913735	CallExpression	clean ( c )		913716	0					
ANR	913736	Callee	clean		913716	0					
ANR	913737	Identifier	clean		913716	0					
ANR	913738	ArgumentList	c		913716	1					
ANR	913739	Argument	c		913716	0					
ANR	913740	Identifier	c		913716	0					
ANR	913741	ExpressionStatement	n = c -> next	497:2:10262:10273	913716	1	True				
ANR	913742	AssignmentExpression	n = c -> next		913716	0		=			
ANR	913743	Identifier	n		913716	0					
ANR	913744	PtrMemberAccess	c -> next		913716	1					
ANR	913745	Identifier	c		913716	0					
ANR	913746	Identifier	next		913716	1					
ANR	913747	IfStatement	if ( deallocate )		913716	2					
ANR	913748	Condition	deallocate	498:5:10280:10289	913716	0	True				
ANR	913749	Identifier	deallocate		913716	0					
ANR	913750	CompoundStatement		8:17:87:87	913716	1					
ANR	913751	Statement	delete	499:3:10297:10302	913716	0	True				
ANR	913752	ExpressionStatement	c	499:10:10304:10305	913716	1	True				
ANR	913753	Identifier	c		913716	0					
ANR	913754	ExpressionStatement	c = n	501:2:10313:10318	913716	3	True				
ANR	913755	AssignmentExpression	c = n		913716	0		=			
ANR	913756	Identifier	c		913716	0					
ANR	913757	Identifier	n		913716	1					
ANR	913758	IfStatement	if ( deallocate )		913716	3					
ANR	913759	Condition	deallocate	504:4:10328:10337	913716	0	True				
ANR	913760	Identifier	deallocate		913716	0					
ANR	913761	ExpressionStatement	head = 0	504:16:10340:10346	913716	1	True				
ANR	913762	AssignmentExpression	head = 0		913716	0		=			
ANR	913763	Identifier	head		913716	0					
ANR	913764	PrimaryExpression	0		913716	1					
ANR	913765	ExpressionStatement	original -> flush ( )	506:1:10350:10367	913716	4	True				
ANR	913766	CallExpression	original -> flush ( )		913716	0					
ANR	913767	Callee	original -> flush		913716	0					
ANR	913768	PtrMemberAccess	original -> flush		913716	0					
ANR	913769	Identifier	original		913716	0					
ANR	913770	Identifier	flush		913716	1					
ANR	913771	ArgumentList			913716	1					
ANR	913772	ReturnType	void		913716	1					
ANR	913773	Identifier	CondorFileBuffer :: flush		913716	2					
ANR	913774	ParameterList	int deallocate		913716	3					
ANR	913775	Parameter	int deallocate	490:30:10187:10200	913716	0	True				
ANR	913776	ParameterType	int		913716	0					
ANR	913777	Identifier	deallocate		913716	1					
ANR	913778	CFGEntryNode	ENTRY		913716		True				
ANR	913779	CFGExitNode	EXIT		913716		True				
ANR	913780	Symbol	head		913716						
ANR	913781	Symbol	c -> next		913716						
ANR	913782	Symbol	c		913716						
ANR	913783	Symbol	original		913716						
ANR	913784	Symbol	deallocate		913716						
ANR	913785	Symbol	* c		913716						
ANR	913786	Symbol	n		913716						
ANR	913787	Function	CondorFileBuffer :: clean	513:0:10423:10706							
ANR	913788	FunctionDef	CondorFileBuffer :: clean (CondorChunk * c)		913787	0					
ANR	913789	CompoundStatement		514:0:10470:10706	913787	0					
ANR	913790	IdentifierDeclStatement	off_t result ;	515:1:10473:10485	913787	0	True				
ANR	913791	IdentifierDecl	result		913787	0					
ANR	913792	IdentifierDeclType	off_t		913787	0					
ANR	913793	Identifier	result		913787	1					
ANR	913794	IfStatement	if ( c && c -> dirty )		913787	1					
ANR	913795	Condition	c && c -> dirty	517:4:10492:10504	913787	0	True				
ANR	913796	AndExpression	c && c -> dirty		913787	0		&&			
ANR	913797	Identifier	c		913787	0					
ANR	913798	PtrMemberAccess	c -> dirty		913787	1					
ANR	913799	Identifier	c		913787	0					
ANR	913800	Identifier	dirty		913787	1					
ANR	913801	CompoundStatement		4:19:36:36	913787	1					
ANR	913802	ExpressionStatement	"result = original -> write ( c -> begin , c -> data , c -> size )"	518:2:10511:10561	913787	0	True				
ANR	913803	AssignmentExpression	"result = original -> write ( c -> begin , c -> data , c -> size )"		913787	0		=			
ANR	913804	Identifier	result		913787	0					
ANR	913805	CallExpression	"original -> write ( c -> begin , c -> data , c -> size )"		913787	1					
ANR	913806	Callee	original -> write		913787	0					
ANR	913807	PtrMemberAccess	original -> write		913787	0					
ANR	913808	Identifier	original		913787	0					
ANR	913809	Identifier	write		913787	1					
ANR	913810	ArgumentList	c -> begin		913787	1					
ANR	913811	Argument	c -> begin		913787	0					
ANR	913812	PtrMemberAccess	c -> begin		913787	0					
ANR	913813	Identifier	c		913787	0					
ANR	913814	Identifier	begin		913787	1					
ANR	913815	Argument	c -> data		913787	1					
ANR	913816	PtrMemberAccess	c -> data		913787	0					
ANR	913817	Identifier	c		913787	0					
ANR	913818	Identifier	data		913787	1					
ANR	913819	Argument	c -> size		913787	2					
ANR	913820	PtrMemberAccess	c -> size		913787	0					
ANR	913821	Identifier	c		913787	0					
ANR	913822	Identifier	size		913787	1					
ANR	913823	IfStatement	if ( result != c -> size )		913787	1					
ANR	913824	Condition	result != c -> size	519:5:10568:10582	913787	0	True				
ANR	913825	EqualityExpression	result != c -> size		913787	0		!=			
ANR	913826	Identifier	result		913787	0					
ANR	913827	PtrMemberAccess	c -> size		913787	1					
ANR	913828	Identifier	c		913787	0					
ANR	913829	Identifier	size		913787	1					
ANR	913830	ExpressionStatement	"_condor_error_retry ( ""Unable to write buffered data to %s! (%s)"" , original -> get_url ( ) , strerror ( errno ) )"	519:22:10585:10685	913787	1	True				
ANR	913831	CallExpression	"_condor_error_retry ( ""Unable to write buffered data to %s! (%s)"" , original -> get_url ( ) , strerror ( errno ) )"		913787	0					
ANR	913832	Callee	_condor_error_retry		913787	0					
ANR	913833	Identifier	_condor_error_retry		913787	0					
ANR	913834	ArgumentList	"""Unable to write buffered data to %s! (%s)"""		913787	1					
ANR	913835	Argument	"""Unable to write buffered data to %s! (%s)"""		913787	0					
ANR	913836	PrimaryExpression	"""Unable to write buffered data to %s! (%s)"""		913787	0					
ANR	913837	Argument	original -> get_url ( )		913787	1					
ANR	913838	CallExpression	original -> get_url ( )		913787	0					
ANR	913839	Callee	original -> get_url		913787	0					
ANR	913840	PtrMemberAccess	original -> get_url		913787	0					
ANR	913841	Identifier	original		913787	0					
ANR	913842	Identifier	get_url		913787	1					
ANR	913843	ArgumentList			913787	1					
ANR	913844	Argument	strerror ( errno )		913787	2					
ANR	913845	CallExpression	strerror ( errno )		913787	0					
ANR	913846	Callee	strerror		913787	0					
ANR	913847	Identifier	strerror		913787	0					
ANR	913848	ArgumentList	errno		913787	1					
ANR	913849	Argument	errno		913787	0					
ANR	913850	Identifier	errno		913787	0					
ANR	913851	ExpressionStatement	c -> dirty = 0	520:2:10689:10701	913787	2	True				
ANR	913852	AssignmentExpression	c -> dirty = 0		913787	0		=			
ANR	913853	PtrMemberAccess	c -> dirty		913787	0					
ANR	913854	Identifier	c		913787	0					
ANR	913855	Identifier	dirty		913787	1					
ANR	913856	PrimaryExpression	0		913787	1					
ANR	913857	ReturnType	void		913787	1					
ANR	913858	Identifier	CondorFileBuffer :: clean		913787	2					
ANR	913859	ParameterList	CondorChunk * c		913787	3					
ANR	913860	Parameter	CondorChunk * c	513:30:10453:10466	913787	0	True				
ANR	913861	ParameterType	CondorChunk *		913787	0					
ANR	913862	Identifier	c		913787	1					
ANR	913863	CFGEntryNode	ENTRY		913787		True				
ANR	913864	CFGExitNode	EXIT		913787		True				
ANR	913865	Symbol	errno		913787						
ANR	913866	Symbol	c		913787						
ANR	913867	Symbol	original		913787						
ANR	913868	Symbol	c -> size		913787						
ANR	913869	Symbol	* original		913787						
ANR	913870	Symbol	c -> begin		913787						
ANR	913871	Symbol	* c		913787						
ANR	913872	Symbol	c -> data		913787						
ANR	913873	Symbol	result		913787						
ANR	913874	Symbol	original -> write		913787						
ANR	913875	Symbol	strerror		913787						
ANR	913876	Symbol	c -> dirty		913787						
ANR	913877	Symbol	original -> get_url		913787						
ANR	913878	Function	CondorFileBuffer :: evict	528:0:10767:11017							
ANR	913879	FunctionDef	CondorFileBuffer :: evict (CondorChunk * c)		913878	0					
ANR	913880	CompoundStatement		529:0:10814:11017	913878	0					
ANR	913881	IdentifierDeclStatement	CondorChunk * i ;	530:1:10817:10831	913878	0	True				
ANR	913882	IdentifierDecl	* i		913878	0					
ANR	913883	IdentifierDeclType	CondorChunk *		913878	0					
ANR	913884	Identifier	i		913878	1					
ANR	913885	ExpressionStatement	clean ( c )	532:1:10835:10843	913878	1	True				
ANR	913886	CallExpression	clean ( c )		913878	0					
ANR	913887	Callee	clean		913878	0					
ANR	913888	Identifier	clean		913878	0					
ANR	913889	ArgumentList	c		913878	1					
ANR	913890	Argument	c		913878	0					
ANR	913891	Identifier	c		913878	0					
ANR	913892	IfStatement	if ( c == head )		913878	2					
ANR	913893	Condition	c == head	534:5:10851:10857	913878	0	True				
ANR	913894	EqualityExpression	c == head		913878	0		==			
ANR	913895	Identifier	c		913878	0					
ANR	913896	Identifier	head		913878	1					
ANR	913897	CompoundStatement		6:15:46:46	913878	1					
ANR	913898	ExpressionStatement	head = c -> next	535:2:10865:10879	913878	0	True				
ANR	913899	AssignmentExpression	head = c -> next		913878	0		=			
ANR	913900	Identifier	head		913878	0					
ANR	913901	PtrMemberAccess	c -> next		913878	1					
ANR	913902	Identifier	c		913878	0					
ANR	913903	Identifier	next		913878	1					
ANR	913904	Statement	delete	536:2:10883:10888	913878	1	True				
ANR	913905	ExpressionStatement	c	536:9:10890:10891	913878	2	True				
ANR	913906	Identifier	c		913878	0					
ANR	913907	ElseStatement	else		913878	0					
ANR	913908	CompoundStatement		9:8:86:86	913878	0					
ANR	913909	ForStatement	for ( i = head ; i ; i = i -> next )		913878	0					
ANR	913910	ForInit	i = head ;	538:7:10910:10916	913878	0	True				
ANR	913911	AssignmentExpression	i = head		913878	0		=			
ANR	913912	Identifier	i		913878	0					
ANR	913913	Identifier	head		913878	1					
ANR	913914	Condition	i	538:15:10918:10918	913878	1	True				
ANR	913915	Identifier	i		913878	0					
ANR	913916	AssignmentExpression	i = i -> next	538:18:10921:10929	913878	2	True	=			
ANR	913917	Identifier	i		913878	0					
ANR	913918	PtrMemberAccess	i -> next		913878	1					
ANR	913919	Identifier	i		913878	0					
ANR	913920	Identifier	next		913878	1					
ANR	913921	CompoundStatement		10:30:118:118	913878	3					
ANR	913922	IfStatement	if ( i -> next == c )		913878	0					
ANR	913923	Condition	i -> next == c	539:7:10942:10951	913878	0	True				
ANR	913924	EqualityExpression	i -> next == c		913878	0		==			
ANR	913925	PtrMemberAccess	i -> next		913878	0					
ANR	913926	Identifier	i		913878	0					
ANR	913927	Identifier	next		913878	1					
ANR	913928	Identifier	c		913878	1					
ANR	913929	CompoundStatement		11:20:140:140	913878	1					
ANR	913930	ExpressionStatement	i -> next = c -> next	540:4:10961:10978	913878	0	True				
ANR	913931	AssignmentExpression	i -> next = c -> next		913878	0		=			
ANR	913932	PtrMemberAccess	i -> next		913878	0					
ANR	913933	Identifier	i		913878	0					
ANR	913934	Identifier	next		913878	1					
ANR	913935	PtrMemberAccess	c -> next		913878	1					
ANR	913936	Identifier	c		913878	0					
ANR	913937	Identifier	next		913878	1					
ANR	913938	Statement	delete	541:4:10984:10989	913878	1	True				
ANR	913939	ExpressionStatement	c	541:11:10991:10992	913878	2	True				
ANR	913940	Identifier	c		913878	0					
ANR	913941	BreakStatement	break ;	542:4:10998:11003	913878	3	True				
ANR	913942	ReturnType	void		913878	1					
ANR	913943	Identifier	CondorFileBuffer :: evict		913878	2					
ANR	913944	ParameterList	CondorChunk * c		913878	3					
ANR	913945	Parameter	CondorChunk * c	528:30:10797:10810	913878	0	True				
ANR	913946	ParameterType	CondorChunk *		913878	0					
ANR	913947	Identifier	c		913878	1					
ANR	913948	CFGEntryNode	ENTRY		913878		True				
ANR	913949	CFGExitNode	EXIT		913878		True				
ANR	913950	Symbol	head		913878						
ANR	913951	Symbol	c -> next		913878						
ANR	913952	Symbol	c		913878						
ANR	913953	Symbol	* i		913878						
ANR	913954	Symbol	i		913878						
ANR	913955	Symbol	i -> next		913878						
ANR	913956	Symbol	* c		913878						
