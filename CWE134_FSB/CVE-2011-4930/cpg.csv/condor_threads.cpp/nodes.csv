command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	975450	File	data/converged/CVE-2011-4930_htcondor/condor_threads.cpp								
ANR	975451	DeclStmt									
ANR	975452	Decl							CRITICAL_SECTION	CRITICAL_SECTION	pthread_mutex_t
ANR	975453	DeclStmt									
ANR	975454	Decl							DWORD	DWORD	pthread_t
ANR	975455	DeclStmt									
ANR	975456	Decl							int	int	pthread_mutexattr_t
ANR	975457	DeclStmt									
ANR	975458	Decl							int	int	pthread_condattr_t
ANR	975459	DeclStmt									
ANR	975460	Decl							int	int	pthread_key_t
ANR	975461	Function	pthread_self	68:0:2051:2115							
ANR	975462	FunctionDef	pthread_self ()		975461	0					
ANR	975463	CompoundStatement		70:0:2083:2115	975461	0					
ANR	975464	ReturnStatement	return GetCurrentThreadId ( ) ;	71:1:2086:2113	975461	0	True				
ANR	975465	CallExpression	GetCurrentThreadId ( )		975461	0					
ANR	975466	Callee	GetCurrentThreadId		975461	0					
ANR	975467	Identifier	GetCurrentThreadId		975461	0					
ANR	975468	ArgumentList			975461	1					
ANR	975469	ReturnType	static pthread_t		975461	1					
ANR	975470	Identifier	pthread_self		975461	2					
ANR	975471	ParameterList			975461	3					
ANR	975472	CFGEntryNode	ENTRY		975461		True				
ANR	975473	CFGExitNode	EXIT		975461		True				
ANR	975474	Symbol	GetCurrentThreadId		975461						
ANR	975475	Function	pthread_equal	74:0:2118:2199							
ANR	975476	FunctionDef	"pthread_equal (pthread_t t1 , pthread_t t2)"		975475	0					
ANR	975477	CompoundStatement		76:0:2171:2199	975475	0					
ANR	975478	ReturnStatement	return t1 == t2 ? 1 : 0 ;	77:1:2174:2197	975475	0	True				
ANR	975479	ConditionalExpression	t1 == t2 ? 1 : 0		975475	0					
ANR	975480	Condition	t1 == t2		975475	0					
ANR	975481	EqualityExpression	t1 == t2		975475	0		==			
ANR	975482	Identifier	t1		975475	0					
ANR	975483	Identifier	t2		975475	1					
ANR	975484	PrimaryExpression	1		975475	1					
ANR	975485	PrimaryExpression	0		975475	2					
ANR	975486	ReturnType	static int		975475	1					
ANR	975487	Identifier	pthread_equal		975475	2					
ANR	975488	ParameterList	"pthread_t t1 , pthread_t t2"		975475	3					
ANR	975489	Parameter	pthread_t t1	75:14:2143:2154	975475	0	True				
ANR	975490	ParameterType	pthread_t		975475	0					
ANR	975491	Identifier	t1		975475	1					
ANR	975492	Parameter	pthread_t t2	75:28:2157:2168	975475	1	True				
ANR	975493	ParameterType	pthread_t		975475	0					
ANR	975494	Identifier	t2		975475	1					
ANR	975495	CFGEntryNode	ENTRY		975475		True				
ANR	975496	CFGExitNode	EXIT		975475		True				
ANR	975497	Symbol	t1		975475						
ANR	975498	Symbol	t2		975475						
ANR	975499	Function	pthread_mutex_destroy	94:0:2419:2514							
ANR	975500	FunctionDef	pthread_mutex_destroy (pthread_mutex_t * mv)		975499	0					
ANR	975501	CompoundStatement		96:0:2473:2514	975499	0					
ANR	975502	ExpressionStatement	DeleteCriticalSection ( mv )	97:1:2476:2501	975499	0	True				
ANR	975503	CallExpression	DeleteCriticalSection ( mv )		975499	0					
ANR	975504	Callee	DeleteCriticalSection		975499	0					
ANR	975505	Identifier	DeleteCriticalSection		975499	0					
ANR	975506	ArgumentList	mv		975499	1					
ANR	975507	Argument	mv		975499	0					
ANR	975508	Identifier	mv		975499	0					
ANR	975509	ReturnStatement	return 0 ;	98:1:2504:2512	975499	1	True				
ANR	975510	PrimaryExpression	0		975499	0					
ANR	975511	ReturnType	static int		975499	1					
ANR	975512	Identifier	pthread_mutex_destroy		975499	2					
ANR	975513	ParameterList	pthread_mutex_t * mv		975499	3					
ANR	975514	Parameter	pthread_mutex_t * mv	95:22:2452:2470	975499	0	True				
ANR	975515	ParameterType	pthread_mutex_t *		975499	0					
ANR	975516	Identifier	mv		975499	1					
ANR	975517	CFGEntryNode	ENTRY		975499		True				
ANR	975518	CFGExitNode	EXIT		975499		True				
ANR	975519	Symbol	mv		975499						
ANR	975520	Function	pthread_mutex_lock	101:0:2517:2610							
ANR	975521	FunctionDef	pthread_mutex_lock (pthread_mutex_t * mv)		975520	0					
ANR	975522	CompoundStatement		103:0:2570:2610	975520	0					
ANR	975523	ExpressionStatement	EnterCriticalSection ( mv )	104:1:2573:2597	975520	0	True				
ANR	975524	CallExpression	EnterCriticalSection ( mv )		975520	0					
ANR	975525	Callee	EnterCriticalSection		975520	0					
ANR	975526	Identifier	EnterCriticalSection		975520	0					
ANR	975527	ArgumentList	mv		975520	1					
ANR	975528	Argument	mv		975520	0					
ANR	975529	Identifier	mv		975520	0					
ANR	975530	ReturnStatement	return 0 ;	105:1:2600:2608	975520	1	True				
ANR	975531	PrimaryExpression	0		975520	0					
ANR	975532	ReturnType	static int		975520	1					
ANR	975533	Identifier	pthread_mutex_lock		975520	2					
ANR	975534	ParameterList	pthread_mutex_t * mv		975520	3					
ANR	975535	Parameter	pthread_mutex_t * mv	102:20:2549:2567	975520	0	True				
ANR	975536	ParameterType	pthread_mutex_t *		975520	0					
ANR	975537	Identifier	mv		975520	1					
ANR	975538	CFGEntryNode	ENTRY		975520		True				
ANR	975539	CFGExitNode	EXIT		975520		True				
ANR	975540	Symbol	mv		975520						
ANR	975541	Function	pthread_mutex_unlock	108:0:2613:2706							
ANR	975542	FunctionDef	pthread_mutex_unlock (pthread_mutex_t * mv)		975541	0					
ANR	975543	CompoundStatement		110:0:2666:2706	975541	0					
ANR	975544	ExpressionStatement	LeaveCriticalSection ( mv )	111:1:2669:2693	975541	0	True				
ANR	975545	CallExpression	LeaveCriticalSection ( mv )		975541	0					
ANR	975546	Callee	LeaveCriticalSection		975541	0					
ANR	975547	Identifier	LeaveCriticalSection		975541	0					
ANR	975548	ArgumentList	mv		975541	1					
ANR	975549	Argument	mv		975541	0					
ANR	975550	Identifier	mv		975541	0					
ANR	975551	ReturnStatement	return 0 ;	112:1:2696:2704	975541	1	True				
ANR	975552	PrimaryExpression	0		975541	0					
ANR	975553	ReturnType	static int		975541	1					
ANR	975554	Identifier	pthread_mutex_unlock		975541	2					
ANR	975555	ParameterList	pthread_mutex_t * mv		975541	3					
ANR	975556	Parameter	pthread_mutex_t * mv	109:21:2645:2663	975541	0	True				
ANR	975557	ParameterType	pthread_mutex_t *		975541	0					
ANR	975558	Identifier	mv		975541	1					
ANR	975559	CFGEntryNode	ENTRY		975541		True				
ANR	975560	CFGExitNode	EXIT		975541		True				
ANR	975561	Symbol	mv		975541						
ANR	975562	ClassDef	<unnamed>	115:7:2716:2778							
ANR	975563	ClassDef	<unnamed>	122:8:2790:3034							
ANR	975564	DeclStmt									
ANR	975565	Decl							u_int	u_int	waiters_count_
ANR	975566	DeclStmt									
ANR	975567	Decl							CRITICAL_SECTION	CRITICAL_SECTION	waiters_count_lock_
ANR	975568	DeclStmt									
ANR	975569	Decl							HANDLE	HANDLE [ MAX_EVENTS ]	events_
ANR	975570	DeclStmt									
ANR	975571	Decl									pthread_cond_t
ANR	975572	Function	pthread_cond_wait	163:0:4053:5258							
ANR	975573	FunctionDef	"pthread_cond_wait (pthread_cond_t * cv , pthread_mutex_t * external_mutex)"		975572	0					
ANR	975574	CompoundStatement		166:0:4156:5258	975572	0					
ANR	975575	ExpressionStatement	EnterCriticalSection ( & cv -> waiters_count_lock_ )	168:2:4188:4235	975572	0	True				
ANR	975576	CallExpression	EnterCriticalSection ( & cv -> waiters_count_lock_ )		975572	0					
ANR	975577	Callee	EnterCriticalSection		975572	0					
ANR	975578	Identifier	EnterCriticalSection		975572	0					
ANR	975579	ArgumentList	& cv -> waiters_count_lock_		975572	1					
ANR	975580	Argument	& cv -> waiters_count_lock_		975572	0					
ANR	975581	UnaryOperationExpression	& cv -> waiters_count_lock_		975572	0					
ANR	975582	UnaryOperator	&		975572	0					
ANR	975583	PtrMemberAccess	cv -> waiters_count_lock_		975572	1					
ANR	975584	Identifier	cv		975572	0					
ANR	975585	Identifier	waiters_count_lock_		975572	1					
ANR	975586	ExpressionStatement	cv -> waiters_count_ ++	169:2:4239:4259	975572	1	True				
ANR	975587	PostIncDecOperationExpression	cv -> waiters_count_ ++		975572	0					
ANR	975588	PtrMemberAccess	cv -> waiters_count_		975572	0					
ANR	975589	Identifier	cv		975572	0					
ANR	975590	Identifier	waiters_count_		975572	1					
ANR	975591	IncDec	++		975572	1					
ANR	975592	ExpressionStatement	LeaveCriticalSection ( & cv -> waiters_count_lock_ )	170:2:4263:4310	975572	2	True				
ANR	975593	CallExpression	LeaveCriticalSection ( & cv -> waiters_count_lock_ )		975572	0					
ANR	975594	Callee	LeaveCriticalSection		975572	0					
ANR	975595	Identifier	LeaveCriticalSection		975572	0					
ANR	975596	ArgumentList	& cv -> waiters_count_lock_		975572	1					
ANR	975597	Argument	& cv -> waiters_count_lock_		975572	0					
ANR	975598	UnaryOperationExpression	& cv -> waiters_count_lock_		975572	0					
ANR	975599	UnaryOperator	&		975572	0					
ANR	975600	PtrMemberAccess	cv -> waiters_count_lock_		975572	1					
ANR	975601	Identifier	cv		975572	0					
ANR	975602	Identifier	waiters_count_lock_		975572	1					
ANR	975603	ExpressionStatement	LeaveCriticalSection ( external_mutex )	175:2:4487:4524	975572	3	True				
ANR	975604	CallExpression	LeaveCriticalSection ( external_mutex )		975572	0					
ANR	975605	Callee	LeaveCriticalSection		975572	0					
ANR	975606	Identifier	LeaveCriticalSection		975572	0					
ANR	975607	ArgumentList	external_mutex		975572	1					
ANR	975608	Argument	external_mutex		975572	0					
ANR	975609	Identifier	external_mutex		975572	0					
ANR	975610	IdentifierDeclStatement	"int result = WaitForMultipleObjects ( 2 , cv -> events_ , FALSE , INFINITE ) ;"	179:2:4664:4733	975572	4	True				
ANR	975611	IdentifierDecl	"result = WaitForMultipleObjects ( 2 , cv -> events_ , FALSE , INFINITE )"		975572	0					
ANR	975612	IdentifierDeclType	int		975572	0					
ANR	975613	Identifier	result		975572	1					
ANR	975614	AssignmentExpression	"result = WaitForMultipleObjects ( 2 , cv -> events_ , FALSE , INFINITE )"		975572	2		=			
ANR	975615	Identifier	result		975572	0					
ANR	975616	CallExpression	"WaitForMultipleObjects ( 2 , cv -> events_ , FALSE , INFINITE )"		975572	1					
ANR	975617	Callee	WaitForMultipleObjects		975572	0					
ANR	975618	Identifier	WaitForMultipleObjects		975572	0					
ANR	975619	ArgumentList	2		975572	1					
ANR	975620	Argument	2		975572	0					
ANR	975621	PrimaryExpression	2		975572	0					
ANR	975622	Argument	cv -> events_		975572	1					
ANR	975623	PtrMemberAccess	cv -> events_		975572	0					
ANR	975624	Identifier	cv		975572	0					
ANR	975625	Identifier	events_		975572	1					
ANR	975626	Argument	FALSE		975572	2					
ANR	975627	Identifier	FALSE		975572	0					
ANR	975628	Argument	INFINITE		975572	3					
ANR	975629	Identifier	INFINITE		975572	0					
ANR	975630	ExpressionStatement	EnterCriticalSection ( & cv -> waiters_count_lock_ )	181:2:4738:4785	975572	5	True				
ANR	975631	CallExpression	EnterCriticalSection ( & cv -> waiters_count_lock_ )		975572	0					
ANR	975632	Callee	EnterCriticalSection		975572	0					
ANR	975633	Identifier	EnterCriticalSection		975572	0					
ANR	975634	ArgumentList	& cv -> waiters_count_lock_		975572	1					
ANR	975635	Argument	& cv -> waiters_count_lock_		975572	0					
ANR	975636	UnaryOperationExpression	& cv -> waiters_count_lock_		975572	0					
ANR	975637	UnaryOperator	&		975572	0					
ANR	975638	PtrMemberAccess	cv -> waiters_count_lock_		975572	1					
ANR	975639	Identifier	cv		975572	0					
ANR	975640	Identifier	waiters_count_lock_		975572	1					
ANR	975641	ExpressionStatement	cv -> waiters_count_ --	182:2:4789:4809	975572	6	True				
ANR	975642	PostIncDecOperationExpression	cv -> waiters_count_ --		975572	0					
ANR	975643	PtrMemberAccess	cv -> waiters_count_		975572	0					
ANR	975644	Identifier	cv		975572	0					
ANR	975645	Identifier	waiters_count_		975572	1					
ANR	975646	IncDec	--		975572	1					
ANR	975647	IdentifierDeclStatement	int last_waiter = result == WAIT_OBJECT_0 + BROADCAST && cv -> waiters_count_ == 0 ;	183:2:4813:4902	975572	7	True				
ANR	975648	IdentifierDecl	last_waiter = result == WAIT_OBJECT_0 + BROADCAST && cv -> waiters_count_ == 0		975572	0					
ANR	975649	IdentifierDeclType	int		975572	0					
ANR	975650	Identifier	last_waiter		975572	1					
ANR	975651	AssignmentExpression	last_waiter = result == WAIT_OBJECT_0 + BROADCAST && cv -> waiters_count_ == 0		975572	2		=			
ANR	975652	Identifier	last_waiter		975572	0					
ANR	975653	AndExpression	result == WAIT_OBJECT_0 + BROADCAST && cv -> waiters_count_ == 0		975572	1		&&			
ANR	975654	EqualityExpression	result == WAIT_OBJECT_0 + BROADCAST		975572	0		==			
ANR	975655	Identifier	result		975572	0					
ANR	975656	AdditiveExpression	WAIT_OBJECT_0 + BROADCAST		975572	1		+			
ANR	975657	Identifier	WAIT_OBJECT_0		975572	0					
ANR	975658	Identifier	BROADCAST		975572	1					
ANR	975659	EqualityExpression	cv -> waiters_count_ == 0		975572	1		==			
ANR	975660	PtrMemberAccess	cv -> waiters_count_		975572	0					
ANR	975661	Identifier	cv		975572	0					
ANR	975662	Identifier	waiters_count_		975572	1					
ANR	975663	PrimaryExpression	0		975572	1					
ANR	975664	ExpressionStatement	LeaveCriticalSection ( & cv -> waiters_count_lock_ )	186:2:4906:4953	975572	8	True				
ANR	975665	CallExpression	LeaveCriticalSection ( & cv -> waiters_count_lock_ )		975572	0					
ANR	975666	Callee	LeaveCriticalSection		975572	0					
ANR	975667	Identifier	LeaveCriticalSection		975572	0					
ANR	975668	ArgumentList	& cv -> waiters_count_lock_		975572	1					
ANR	975669	Argument	& cv -> waiters_count_lock_		975572	0					
ANR	975670	UnaryOperationExpression	& cv -> waiters_count_lock_		975572	0					
ANR	975671	UnaryOperator	&		975572	0					
ANR	975672	PtrMemberAccess	cv -> waiters_count_lock_		975572	1					
ANR	975673	Identifier	cv		975572	0					
ANR	975674	Identifier	waiters_count_lock_		975572	1					
ANR	975675	IfStatement	if ( last_waiter )		975572	9					
ANR	975676	Condition	last_waiter	189:6:5012:5022	975572	0	True				
ANR	975677	Identifier	last_waiter		975572	0					
ANR	975678	ExpressionStatement	ResetEvent ( cv -> events_ [ BROADCAST ] )	192:4:5128:5163	975572	1	True				
ANR	975679	CallExpression	ResetEvent ( cv -> events_ [ BROADCAST ] )		975572	0					
ANR	975680	Callee	ResetEvent		975572	0					
ANR	975681	Identifier	ResetEvent		975572	0					
ANR	975682	ArgumentList	cv -> events_ [ BROADCAST ]		975572	1					
ANR	975683	Argument	cv -> events_ [ BROADCAST ]		975572	0					
ANR	975684	ArrayIndexing	cv -> events_ [ BROADCAST ]		975572	0					
ANR	975685	PtrMemberAccess	cv -> events_		975572	0					
ANR	975686	Identifier	cv		975572	0					
ANR	975687	Identifier	events_		975572	1					
ANR	975688	Identifier	BROADCAST		975572	1					
ANR	975689	ExpressionStatement	EnterCriticalSection ( external_mutex )	195:2:5206:5243	975572	10	True				
ANR	975690	CallExpression	EnterCriticalSection ( external_mutex )		975572	0					
ANR	975691	Callee	EnterCriticalSection		975572	0					
ANR	975692	Identifier	EnterCriticalSection		975572	0					
ANR	975693	ArgumentList	external_mutex		975572	1					
ANR	975694	Argument	external_mutex		975572	0					
ANR	975695	Identifier	external_mutex		975572	0					
ANR	975696	ReturnStatement	return 0 ;	197:2:5248:5256	975572	11	True				
ANR	975697	PrimaryExpression	0		975572	0					
ANR	975698	ReturnType	static int		975572	1					
ANR	975699	Identifier	pthread_cond_wait		975572	2					
ANR	975700	ParameterList	"pthread_cond_t * cv , pthread_mutex_t * external_mutex"		975572	3					
ANR	975701	Parameter	pthread_cond_t * cv	164:19:4084:4101	975572	0	True				
ANR	975702	ParameterType	pthread_cond_t *		975572	0					
ANR	975703	Identifier	cv		975572	1					
ANR	975704	Parameter	pthread_mutex_t * external_mutex	165:19:4123:4153	975572	1	True				
ANR	975705	ParameterType	pthread_mutex_t *		975572	0					
ANR	975706	Identifier	external_mutex		975572	1					
ANR	975707	CFGEntryNode	ENTRY		975572		True				
ANR	975708	CFGExitNode	EXIT		975572		True				
ANR	975709	Symbol	cv -> waiters_count_		975572						
ANR	975710	Symbol	* BROADCAST		975572						
ANR	975711	Symbol	external_mutex		975572						
ANR	975712	Symbol	INFINITE		975572						
ANR	975713	Symbol	& cv -> waiters_count_lock_		975572						
ANR	975714	Symbol	result		975572						
ANR	975715	Symbol	cv		975572						
ANR	975716	Symbol	last_waiter		975572						
ANR	975717	Symbol	WAIT_OBJECT_0		975572						
ANR	975718	Symbol	BROADCAST		975572						
ANR	975719	Symbol	* cv		975572						
ANR	975720	Symbol	FALSE		975572						
ANR	975721	Symbol	* cv -> events_		975572						
ANR	975722	Symbol	cv -> events_		975572						
ANR	975723	Symbol	* * cv		975572						
ANR	975724	Symbol	WaitForMultipleObjects		975572						
ANR	975725	Function	pthread_cond_broadcast	200:0:5261:5567							
ANR	975726	FunctionDef	pthread_cond_broadcast (pthread_cond_t * cv)		975725	0					
ANR	975727	CompoundStatement		202:0:5317:5567	975725	0					
ANR	975728	ExpressionStatement	EnterCriticalSection ( & cv -> waiters_count_lock_ )	204:2:5349:5396	975725	0	True				
ANR	975729	CallExpression	EnterCriticalSection ( & cv -> waiters_count_lock_ )		975725	0					
ANR	975730	Callee	EnterCriticalSection		975725	0					
ANR	975731	Identifier	EnterCriticalSection		975725	0					
ANR	975732	ArgumentList	& cv -> waiters_count_lock_		975725	1					
ANR	975733	Argument	& cv -> waiters_count_lock_		975725	0					
ANR	975734	UnaryOperationExpression	& cv -> waiters_count_lock_		975725	0					
ANR	975735	UnaryOperator	&		975725	0					
ANR	975736	PtrMemberAccess	cv -> waiters_count_lock_		975725	1					
ANR	975737	Identifier	cv		975725	0					
ANR	975738	Identifier	waiters_count_lock_		975725	1					
ANR	975739	IdentifierDeclStatement	int have_waiters = cv -> waiters_count_ > 0 ;	205:2:5400:5441	975725	1	True				
ANR	975740	IdentifierDecl	have_waiters = cv -> waiters_count_ > 0		975725	0					
ANR	975741	IdentifierDeclType	int		975725	0					
ANR	975742	Identifier	have_waiters		975725	1					
ANR	975743	AssignmentExpression	have_waiters = cv -> waiters_count_ > 0		975725	2		=			
ANR	975744	Identifier	have_waiters		975725	0					
ANR	975745	RelationalExpression	cv -> waiters_count_ > 0		975725	1		>			
ANR	975746	PtrMemberAccess	cv -> waiters_count_		975725	0					
ANR	975747	Identifier	cv		975725	0					
ANR	975748	Identifier	waiters_count_		975725	1					
ANR	975749	PrimaryExpression	0		975725	1					
ANR	975750	ExpressionStatement	LeaveCriticalSection ( & cv -> waiters_count_lock_ )	206:2:5445:5492	975725	2	True				
ANR	975751	CallExpression	LeaveCriticalSection ( & cv -> waiters_count_lock_ )		975725	0					
ANR	975752	Callee	LeaveCriticalSection		975725	0					
ANR	975753	Identifier	LeaveCriticalSection		975725	0					
ANR	975754	ArgumentList	& cv -> waiters_count_lock_		975725	1					
ANR	975755	Argument	& cv -> waiters_count_lock_		975725	0					
ANR	975756	UnaryOperationExpression	& cv -> waiters_count_lock_		975725	0					
ANR	975757	UnaryOperator	&		975725	0					
ANR	975758	PtrMemberAccess	cv -> waiters_count_lock_		975725	1					
ANR	975759	Identifier	cv		975725	0					
ANR	975760	Identifier	waiters_count_lock_		975725	1					
ANR	975761	IfStatement	if ( have_waiters )		975725	3					
ANR	975762	Condition	have_waiters	208:6:5501:5512	975725	0	True				
ANR	975763	Identifier	have_waiters		975725	0					
ANR	975764	ExpressionStatement	SetEvent ( cv -> events_ [ BROADCAST ] )	209:4:5519:5552	975725	1	True				
ANR	975765	CallExpression	SetEvent ( cv -> events_ [ BROADCAST ] )		975725	0					
ANR	975766	Callee	SetEvent		975725	0					
ANR	975767	Identifier	SetEvent		975725	0					
ANR	975768	ArgumentList	cv -> events_ [ BROADCAST ]		975725	1					
ANR	975769	Argument	cv -> events_ [ BROADCAST ]		975725	0					
ANR	975770	ArrayIndexing	cv -> events_ [ BROADCAST ]		975725	0					
ANR	975771	PtrMemberAccess	cv -> events_		975725	0					
ANR	975772	Identifier	cv		975725	0					
ANR	975773	Identifier	events_		975725	1					
ANR	975774	Identifier	BROADCAST		975725	1					
ANR	975775	ReturnStatement	return 0 ;	211:2:5557:5565	975725	4	True				
ANR	975776	PrimaryExpression	0		975725	0					
ANR	975777	ReturnType	static int		975725	1					
ANR	975778	Identifier	pthread_cond_broadcast		975725	2					
ANR	975779	ParameterList	pthread_cond_t * cv		975725	3					
ANR	975780	Parameter	pthread_cond_t * cv	201:24:5297:5314	975725	0	True				
ANR	975781	ParameterType	pthread_cond_t *		975725	0					
ANR	975782	Identifier	cv		975725	1					
ANR	975783	CFGEntryNode	ENTRY		975725		True				
ANR	975784	CFGExitNode	EXIT		975725		True				
ANR	975785	Symbol	cv -> waiters_count_		975725						
ANR	975786	Symbol	cv		975725						
ANR	975787	Symbol	* BROADCAST		975725						
ANR	975788	Symbol	BROADCAST		975725						
ANR	975789	Symbol	* cv		975725						
ANR	975790	Symbol	have_waiters		975725						
ANR	975791	Symbol	* cv -> events_		975725						
ANR	975792	Symbol	* * cv		975725						
ANR	975793	Symbol	cv -> events_		975725						
ANR	975794	Symbol	& cv -> waiters_count_lock_		975725						
ANR	975795	Function	pthread_cond_signal	214:0:5570:5870							
ANR	975796	FunctionDef	pthread_cond_signal (pthread_cond_t * cv)		975795	0					
ANR	975797	CompoundStatement		216:0:5623:5870	975795	0					
ANR	975798	ExpressionStatement	EnterCriticalSection ( & cv -> waiters_count_lock_ )	218:2:5655:5702	975795	0	True				
ANR	975799	CallExpression	EnterCriticalSection ( & cv -> waiters_count_lock_ )		975795	0					
ANR	975800	Callee	EnterCriticalSection		975795	0					
ANR	975801	Identifier	EnterCriticalSection		975795	0					
ANR	975802	ArgumentList	& cv -> waiters_count_lock_		975795	1					
ANR	975803	Argument	& cv -> waiters_count_lock_		975795	0					
ANR	975804	UnaryOperationExpression	& cv -> waiters_count_lock_		975795	0					
ANR	975805	UnaryOperator	&		975795	0					
ANR	975806	PtrMemberAccess	cv -> waiters_count_lock_		975795	1					
ANR	975807	Identifier	cv		975795	0					
ANR	975808	Identifier	waiters_count_lock_		975795	1					
ANR	975809	IdentifierDeclStatement	int have_waiters = cv -> waiters_count_ > 0 ;	219:2:5706:5747	975795	1	True				
ANR	975810	IdentifierDecl	have_waiters = cv -> waiters_count_ > 0		975795	0					
ANR	975811	IdentifierDeclType	int		975795	0					
ANR	975812	Identifier	have_waiters		975795	1					
ANR	975813	AssignmentExpression	have_waiters = cv -> waiters_count_ > 0		975795	2		=			
ANR	975814	Identifier	have_waiters		975795	0					
ANR	975815	RelationalExpression	cv -> waiters_count_ > 0		975795	1		>			
ANR	975816	PtrMemberAccess	cv -> waiters_count_		975795	0					
ANR	975817	Identifier	cv		975795	0					
ANR	975818	Identifier	waiters_count_		975795	1					
ANR	975819	PrimaryExpression	0		975795	1					
ANR	975820	ExpressionStatement	LeaveCriticalSection ( & cv -> waiters_count_lock_ )	220:2:5751:5798	975795	2	True				
ANR	975821	CallExpression	LeaveCriticalSection ( & cv -> waiters_count_lock_ )		975795	0					
ANR	975822	Callee	LeaveCriticalSection		975795	0					
ANR	975823	Identifier	LeaveCriticalSection		975795	0					
ANR	975824	ArgumentList	& cv -> waiters_count_lock_		975795	1					
ANR	975825	Argument	& cv -> waiters_count_lock_		975795	0					
ANR	975826	UnaryOperationExpression	& cv -> waiters_count_lock_		975795	0					
ANR	975827	UnaryOperator	&		975795	0					
ANR	975828	PtrMemberAccess	cv -> waiters_count_lock_		975795	1					
ANR	975829	Identifier	cv		975795	0					
ANR	975830	Identifier	waiters_count_lock_		975795	1					
ANR	975831	IfStatement	if ( have_waiters )		975795	3					
ANR	975832	Condition	have_waiters	222:6:5807:5818	975795	0	True				
ANR	975833	Identifier	have_waiters		975795	0					
ANR	975834	ExpressionStatement	SetEvent ( cv -> events_ [ SIGNAL ] )	223:4:5825:5855	975795	1	True				
ANR	975835	CallExpression	SetEvent ( cv -> events_ [ SIGNAL ] )		975795	0					
ANR	975836	Callee	SetEvent		975795	0					
ANR	975837	Identifier	SetEvent		975795	0					
ANR	975838	ArgumentList	cv -> events_ [ SIGNAL ]		975795	1					
ANR	975839	Argument	cv -> events_ [ SIGNAL ]		975795	0					
ANR	975840	ArrayIndexing	cv -> events_ [ SIGNAL ]		975795	0					
ANR	975841	PtrMemberAccess	cv -> events_		975795	0					
ANR	975842	Identifier	cv		975795	0					
ANR	975843	Identifier	events_		975795	1					
ANR	975844	Identifier	SIGNAL		975795	1					
ANR	975845	ReturnStatement	return 0 ;	225:2:5860:5868	975795	4	True				
ANR	975846	PrimaryExpression	0		975795	0					
ANR	975847	ReturnType	static int		975795	1					
ANR	975848	Identifier	pthread_cond_signal		975795	2					
ANR	975849	ParameterList	pthread_cond_t * cv		975795	3					
ANR	975850	Parameter	pthread_cond_t * cv	215:21:5603:5620	975795	0	True				
ANR	975851	ParameterType	pthread_cond_t *		975795	0					
ANR	975852	Identifier	cv		975795	1					
ANR	975853	CFGEntryNode	ENTRY		975795		True				
ANR	975854	CFGExitNode	EXIT		975795		True				
ANR	975855	Symbol	SIGNAL		975795						
ANR	975856	Symbol	cv -> waiters_count_		975795						
ANR	975857	Symbol	cv		975795						
ANR	975858	Symbol	* cv		975795						
ANR	975859	Symbol	have_waiters		975795						
ANR	975860	Symbol	* cv -> events_		975795						
ANR	975861	Symbol	cv -> events_		975795						
ANR	975862	Symbol	* * cv		975795						
ANR	975863	Symbol	& cv -> waiters_count_lock_		975795						
ANR	975864	Symbol	* SIGNAL		975795						
ANR	975865	DeclStmt									
ANR	975866	Decl							int	int	ThreadImplementation :: m_CurrentTid
ANR	975867	DeclStmt									
ANR	975868	Decl							ThreadImplementation	ThreadImplementation *	TI
ANR	975869	Function	WorkerThread :: WorkerThread	251:0:6508:6705							
ANR	975870	FunctionDef	WorkerThread :: WorkerThread ()		975869	0					
ANR	975871	CompoundStatement		252:0:6537:6705	975869	0					
ANR	975872	ExpressionStatement	name_ = NULL	253:1:6540:6552	975869	0	True				
ANR	975873	AssignmentExpression	name_ = NULL		975869	0		=			
ANR	975874	Identifier	name_		975869	0					
ANR	975875	Identifier	NULL		975869	1					
ANR	975876	ExpressionStatement	routine_ = NULL	254:1:6555:6570	975869	1	True				
ANR	975877	AssignmentExpression	routine_ = NULL		975869	0		=			
ANR	975878	Identifier	routine_		975869	0					
ANR	975879	Identifier	NULL		975869	1					
ANR	975880	ExpressionStatement	arg_ = NULL	255:1:6573:6584	975869	2	True				
ANR	975881	AssignmentExpression	arg_ = NULL		975869	0		=			
ANR	975882	Identifier	arg_		975869	0					
ANR	975883	Identifier	NULL		975869	1					
ANR	975884	ExpressionStatement	user_pointer_ = NULL	256:1:6587:6607	975869	3	True				
ANR	975885	AssignmentExpression	user_pointer_ = NULL		975869	0		=			
ANR	975886	Identifier	user_pointer_		975869	0					
ANR	975887	Identifier	NULL		975869	1					
ANR	975888	ExpressionStatement	tid_ = 0	257:1:6610:6618	975869	4	True				
ANR	975889	AssignmentExpression	tid_ = 0		975869	0		=			
ANR	975890	Identifier	tid_		975869	0					
ANR	975891	PrimaryExpression	0		975869	1					
ANR	975892	ExpressionStatement	enable_parallel_flag_ = false	258:1:6621:6650	975869	5	True				
ANR	975893	AssignmentExpression	enable_parallel_flag_ = false		975869	0		=			
ANR	975894	Identifier	enable_parallel_flag_		975869	0					
ANR	975895	Identifier	false		975869	1					
ANR	975896	ExpressionStatement	parallel_mode_count_ = 0	259:1:6653:6677	975869	6	True				
ANR	975897	AssignmentExpression	parallel_mode_count_ = 0		975869	0		=			
ANR	975898	Identifier	parallel_mode_count_		975869	0					
ANR	975899	PrimaryExpression	0		975869	1					
ANR	975900	ExpressionStatement	status_ = THREAD_UNBORN	260:1:6680:6703	975869	7	True				
ANR	975901	AssignmentExpression	status_ = THREAD_UNBORN		975869	0		=			
ANR	975902	Identifier	status_		975869	0					
ANR	975903	Identifier	THREAD_UNBORN		975869	1					
ANR	975904	Identifier	WorkerThread :: WorkerThread		975869	1					
ANR	975905	ParameterList			975869	2					
ANR	975906	CFGEntryNode	ENTRY		975869		True				
ANR	975907	CFGExitNode	EXIT		975869		True				
ANR	975908	Symbol	THREAD_UNBORN		975869						
ANR	975909	Symbol	status_		975869						
ANR	975910	Symbol	NULL		975869						
ANR	975911	Symbol	arg_		975869						
ANR	975912	Symbol	tid_		975869						
ANR	975913	Symbol	false		975869						
ANR	975914	Symbol	enable_parallel_flag_		975869						
ANR	975915	Symbol	user_pointer_		975869						
ANR	975916	Symbol	name_		975869						
ANR	975917	Symbol	routine_		975869						
ANR	975918	Symbol	parallel_mode_count_		975869						
ANR	975919	Function	WorkerThread :: WorkerThread	263:0:6708:7022							
ANR	975920	FunctionDef	"WorkerThread :: WorkerThread (const char * name , condor_thread_func_t routine , void * arg)"		975919	0					
ANR	975921	CompoundStatement		264:0:6794:7022	975919	0					
ANR	975922	ExpressionStatement	name_ = NULL	265:1:6797:6809	975919	0	True				
ANR	975923	AssignmentExpression	name_ = NULL		975919	0		=			
ANR	975924	Identifier	name_		975919	0					
ANR	975925	Identifier	NULL		975919	1					
ANR	975926	ExpressionStatement	routine_ = NULL	266:1:6812:6827	975919	1	True				
ANR	975927	AssignmentExpression	routine_ = NULL		975919	0		=			
ANR	975928	Identifier	routine_		975919	0					
ANR	975929	Identifier	NULL		975919	1					
ANR	975930	ExpressionStatement	arg_ = NULL	267:1:6830:6841	975919	2	True				
ANR	975931	AssignmentExpression	arg_ = NULL		975919	0		=			
ANR	975932	Identifier	arg_		975919	0					
ANR	975933	Identifier	NULL		975919	1					
ANR	975934	ExpressionStatement	user_pointer_ = NULL	268:1:6844:6864	975919	3	True				
ANR	975935	AssignmentExpression	user_pointer_ = NULL		975919	0		=			
ANR	975936	Identifier	user_pointer_		975919	0					
ANR	975937	Identifier	NULL		975919	1					
ANR	975938	ExpressionStatement	tid_ = 0	269:1:6867:6875	975919	4	True				
ANR	975939	AssignmentExpression	tid_ = 0		975919	0		=			
ANR	975940	Identifier	tid_		975919	0					
ANR	975941	PrimaryExpression	0		975919	1					
ANR	975942	ExpressionStatement	enable_parallel_flag_ = false	270:1:6878:6907	975919	5	True				
ANR	975943	AssignmentExpression	enable_parallel_flag_ = false		975919	0		=			
ANR	975944	Identifier	enable_parallel_flag_		975919	0					
ANR	975945	Identifier	false		975919	1					
ANR	975946	ExpressionStatement	parallel_mode_count_ = 0	271:1:6910:6934	975919	6	True				
ANR	975947	AssignmentExpression	parallel_mode_count_ = 0		975919	0		=			
ANR	975948	Identifier	parallel_mode_count_		975919	0					
ANR	975949	PrimaryExpression	0		975919	1					
ANR	975950	ExpressionStatement	status_ = THREAD_UNBORN	272:1:6937:6960	975919	7	True				
ANR	975951	AssignmentExpression	status_ = THREAD_UNBORN		975919	0		=			
ANR	975952	Identifier	status_		975919	0					
ANR	975953	Identifier	THREAD_UNBORN		975919	1					
ANR	975954	ExpressionStatement	name_ = strnewp ( name )	275:1:6965:6986	975919	8	True				
ANR	975955	AssignmentExpression	name_ = strnewp ( name )		975919	0		=			
ANR	975956	Identifier	name_		975919	0					
ANR	975957	CallExpression	strnewp ( name )		975919	1					
ANR	975958	Callee	strnewp		975919	0					
ANR	975959	Identifier	strnewp		975919	0					
ANR	975960	ArgumentList	name		975919	1					
ANR	975961	Argument	name		975919	0					
ANR	975962	Identifier	name		975919	0					
ANR	975963	ExpressionStatement	routine_ = routine	276:1:6989:7007	975919	9	True				
ANR	975964	AssignmentExpression	routine_ = routine		975919	0		=			
ANR	975965	Identifier	routine_		975919	0					
ANR	975966	Identifier	routine		975919	1					
ANR	975967	ExpressionStatement	arg_ = arg	277:1:7010:7020	975919	10	True				
ANR	975968	AssignmentExpression	arg_ = arg		975919	0		=			
ANR	975969	Identifier	arg_		975919	0					
ANR	975970	Identifier	arg		975919	1					
ANR	975971	Identifier	WorkerThread :: WorkerThread		975919	1					
ANR	975972	ParameterList	"const char * name , condor_thread_func_t routine , void * arg"		975919	2					
ANR	975973	Parameter	const char * name	263:27:6735:6750	975919	0	True				
ANR	975974	ParameterType	const char *		975919	0					
ANR	975975	Identifier	name		975919	1					
ANR	975976	Parameter	condor_thread_func_t routine	263:45:6753:6780	975919	1	True				
ANR	975977	ParameterType	condor_thread_func_t		975919	0					
ANR	975978	Identifier	routine		975919	1					
ANR	975979	Parameter	void * arg	263:75:6783:6791	975919	2	True				
ANR	975980	ParameterType	void *		975919	0					
ANR	975981	Identifier	arg		975919	1					
ANR	975982	CFGEntryNode	ENTRY		975919		True				
ANR	975983	CFGExitNode	EXIT		975919		True				
ANR	975984	Symbol	THREAD_UNBORN		975919						
ANR	975985	Symbol	status_		975919						
ANR	975986	Symbol	NULL		975919						
ANR	975987	Symbol	arg_		975919						
ANR	975988	Symbol	tid_		975919						
ANR	975989	Symbol	false		975919						
ANR	975990	Symbol	enable_parallel_flag_		975919						
ANR	975991	Symbol	name_		975919						
ANR	975992	Symbol	routine_		975919						
ANR	975993	Symbol	parallel_mode_count_		975919						
ANR	975994	Symbol	routine		975919						
ANR	975995	Symbol	arg		975919						
ANR	975996	Symbol	name		975919						
ANR	975997	Symbol	strnewp		975919						
ANR	975998	Symbol	user_pointer_		975919						
ANR	975999	Function	WorkerThread :: ~WorkerThread	282:0:7047:7279							
ANR	976000	FunctionDef	WorkerThread :: ~WorkerThread ()		975999	0					
ANR	976001	CompoundStatement		283:0:7077:7279	975999	0					
ANR	976002	IfStatement	if ( name_ )		975999	0					
ANR	976003	Condition	name_	285:5:7117:7121	975999	0	True				
ANR	976004	Identifier	name_		975999	0					
ANR	976005	Statement	delete	285:12:7124:7129	975999	1	True				
ANR	976006	Statement	[	285:19:7131:7131	975999	1	True				
ANR	976007	Statement	]	285:20:7132:7132	975999	2	True				
ANR	976008	ExpressionStatement	name_	285:22:7134:7139	975999	3	True				
ANR	976009	Identifier	name_		975999	0					
ANR	976010	IfStatement	if ( user_pointer_ )		975999	4					
ANR	976011	Condition	user_pointer_	286:5:7146:7158	975999	0	True				
ANR	976012	Identifier	user_pointer_		975999	0					
ANR	976013	Statement	delete	286:20:7161:7166	975999	1	True				
ANR	976014	ExpressionStatement	( Service * ) user_pointer_	286:27:7168:7192	975999	5	True				
ANR	976015	CastExpression	( Service * ) user_pointer_		975999	0					
ANR	976016	CastTarget	Service *		975999	0					
ANR	976017	Identifier	user_pointer_		975999	1					
ANR	976018	IfStatement	if ( tid_ && TI )		975999	6					
ANR	976019	Condition	tid_ && TI	289:6:7236:7246	975999	0	True				
ANR	976020	AndExpression	tid_ && TI		975999	0		&&			
ANR	976021	Identifier	tid_		975999	0					
ANR	976022	Identifier	TI		975999	1					
ANR	976023	CompoundStatement		7:20:172:172	975999	1					
ANR	976024	ExpressionStatement	TI -> remove_tid ( tid_ )	290:2:7254:7274	975999	0	True				
ANR	976025	CallExpression	TI -> remove_tid ( tid_ )		975999	0					
ANR	976026	Callee	TI -> remove_tid		975999	0					
ANR	976027	PtrMemberAccess	TI -> remove_tid		975999	0					
ANR	976028	Identifier	TI		975999	0					
ANR	976029	Identifier	remove_tid		975999	1					
ANR	976030	ArgumentList	tid_		975999	1					
ANR	976031	Argument	tid_		975999	0					
ANR	976032	Identifier	tid_		975999	0					
ANR	976033	Identifier	WorkerThread :: ~WorkerThread		975999	1					
ANR	976034	ParameterList			975999	2					
ANR	976035	CFGEntryNode	ENTRY		975999		True				
ANR	976036	CFGExitNode	EXIT		975999		True				
ANR	976037	Symbol	TI		975999						
ANR	976038	Symbol	tid_		975999						
ANR	976039	Symbol	user_pointer_		975999						
ANR	976040	Symbol	name_		975999						
ANR	976041	Function	WorkerThread :: create	294:0:7282:7548							
ANR	976042	FunctionDef	"WorkerThread :: create (const char * name , condor_thread_func_t routine , void * arg)"		976041	0					
ANR	976043	CompoundStatement		296:0:7382:7548	976041	0					
ANR	976044	IdentifierDeclStatement	"WorkerThread * newthread_rawptr = new WorkerThread ( name , routine , arg ) ;"	297:1:7385:7452	976041	0	True				
ANR	976045	IdentifierDecl	"* newthread_rawptr = new WorkerThread ( name , routine , arg )"		976041	0					
ANR	976046	IdentifierDeclType	WorkerThread *		976041	0					
ANR	976047	Identifier	newthread_rawptr		976041	1					
ANR	976048	AssignmentExpression	"* newthread_rawptr = new WorkerThread ( name , routine , arg )"		976041	2		=			
ANR	976049	Identifier	newthread_rawptr		976041	0					
ANR	976050	Expression	"name , routine , arg"		976041	1					
ANR	976051	Identifier	name		976041	0					
ANR	976052	Expression	"routine , arg"		976041	1					
ANR	976053	Identifier	routine		976041	0					
ANR	976054	Identifier	arg		976041	1					
ANR	976055	ExpressionStatement	ASSERT ( newthread_rawptr )	298:1:7455:7479	976041	1	True				
ANR	976056	CallExpression	ASSERT ( newthread_rawptr )		976041	0					
ANR	976057	Callee	ASSERT		976041	0					
ANR	976058	Identifier	ASSERT		976041	0					
ANR	976059	ArgumentList	newthread_rawptr		976041	1					
ANR	976060	Argument	newthread_rawptr		976041	0					
ANR	976061	Identifier	newthread_rawptr		976041	0					
ANR	976062	IdentifierDeclStatement	WorkerThreadPtr_t newthread ( newthread_rawptr ) ;	299:1:7482:7527	976041	2	True				
ANR	976063	IdentifierDecl	newthread ( newthread_rawptr )		976041	0					
ANR	976064	IdentifierDeclType	WorkerThreadPtr_t		976041	0					
ANR	976065	Identifier	newthread		976041	1					
ANR	976066	Identifier	newthread_rawptr		976041	2					
ANR	976067	ReturnStatement	return newthread ;	300:1:7530:7546	976041	3	True				
ANR	976068	Identifier	newthread		976041	0					
ANR	976069	ReturnType	WorkerThreadPtr_t		976041	1					
ANR	976070	Identifier	WorkerThread :: create		976041	2					
ANR	976071	ParameterList	"const char * name , condor_thread_func_t routine , void * arg"		976041	3					
ANR	976072	Parameter	const char * name	295:21:7322:7337	976041	0	True				
ANR	976073	ParameterType	const char *		976041	0					
ANR	976074	Identifier	name		976041	1					
ANR	976075	Parameter	condor_thread_func_t routine	295:39:7340:7367	976041	1	True				
ANR	976076	ParameterType	condor_thread_func_t		976041	0					
ANR	976077	Identifier	routine		976041	1					
ANR	976078	Parameter	void * arg	295:69:7370:7378	976041	2	True				
ANR	976079	ParameterType	void *		976041	0					
ANR	976080	Identifier	arg		976041	1					
ANR	976081	CFGEntryNode	ENTRY		976041		True				
ANR	976082	CFGExitNode	EXIT		976041		True				
ANR	976083	Symbol	routine		976041						
ANR	976084	Symbol	newthread_rawptr		976041						
ANR	976085	Symbol	arg		976041						
ANR	976086	Symbol	name		976041						
ANR	976087	Symbol	newthread		976041						
ANR	976088	Function	WorkerThread :: get_status_string	304:0:7607:7850							
ANR	976089	FunctionDef	WorkerThread :: get_status_string (thread_status_t s)		976088	0					
ANR	976090	CompoundStatement		306:0:7670:7850	976088	0					
ANR	976091	SwitchStatement	switch ( s )		976088	0					
ANR	976092	Condition	s	307:10:7682:7682	976088	0	True				
ANR	976093	Identifier	s		976088	0					
ANR	976094	CompoundStatement		2:14:15:15	976088	1					
ANR	976095	Statement	THREADSTATUS	308:2:7690:7701	976088	0	True				
ANR	976096	Statement	(	308:14:7702:7702	976088	1	True				
ANR	976097	Statement	UNBORN	308:16:7704:7709	976088	2	True				
ANR	976098	Statement	)	308:23:7711:7711	976088	3	True				
ANR	976099	Statement	THREADSTATUS	309:2:7715:7726	976088	4	True				
ANR	976100	Statement	(	309:14:7727:7727	976088	5	True				
ANR	976101	Statement	READY	309:16:7729:7733	976088	6	True				
ANR	976102	Statement	)	309:22:7735:7735	976088	7	True				
ANR	976103	Statement	THREADSTATUS	310:2:7739:7750	976088	8	True				
ANR	976104	Statement	(	310:14:7751:7751	976088	9	True				
ANR	976105	Statement	RUNNING	310:16:7753:7759	976088	10	True				
ANR	976106	Statement	)	310:24:7761:7761	976088	11	True				
ANR	976107	Statement	THREADSTATUS	311:2:7765:7776	976088	12	True				
ANR	976108	Statement	(	311:14:7777:7777	976088	13	True				
ANR	976109	Statement	WAITING	311:16:7779:7785	976088	14	True				
ANR	976110	Statement	)	311:24:7787:7787	976088	15	True				
ANR	976111	Statement	THREADSTATUS	312:2:7791:7802	976088	16	True				
ANR	976112	Statement	(	312:14:7803:7803	976088	17	True				
ANR	976113	Statement	COMPLETED	312:16:7805:7813	976088	18	True				
ANR	976114	Statement	)	312:26:7815:7815	976088	19	True				
ANR	976115	Label	default :	313:1:7818:7825	976088	20	True				
ANR	976116	Identifier	default		976088	0					
ANR	976117	ReturnStatement	"return ""Unknown"" ;"	314:2:7829:7845	976088	21	True				
ANR	976118	PrimaryExpression	"""Unknown"""		976088	0					
ANR	976119	ReturnType	const char *		976088	1					
ANR	976120	Identifier	WorkerThread :: get_status_string		976088	2					
ANR	976121	ParameterList	thread_status_t s		976088	3					
ANR	976122	Parameter	thread_status_t s	305:32:7651:7667	976088	0	True				
ANR	976123	ParameterType	thread_status_t		976088	0					
ANR	976124	Identifier	s		976088	1					
ANR	976125	CFGEntryNode	ENTRY		976088		True				
ANR	976126	CFGExitNode	EXIT		976088		True				
ANR	976127	Symbol	s		976088						
ANR	976128	Function	ThreadImplementation :: get_main_thread_ptr	321:0:7928:8463							
ANR	976129	FunctionDef	ThreadImplementation :: get_main_thread_ptr ()		976128	0					
ANR	976130	CompoundStatement		323:0:7997:8463	976128	0					
ANR	976131	Statement	static	324:1:8000:8005	976128	0	True				
ANR	976132	IdentifierDeclStatement	bool already_been_here = false ;	324:8:8007:8037	976128	1	True				
ANR	976133	IdentifierDecl	already_been_here = false		976128	0					
ANR	976134	IdentifierDeclType	bool		976128	0					
ANR	976135	Identifier	already_been_here		976128	1					
ANR	976136	AssignmentExpression	already_been_here = false		976128	2		=			
ANR	976137	Identifier	false		976128	0					
ANR	976138	Identifier	false		976128	1					
ANR	976139	Statement	static	325:1:8040:8045	976128	2	True				
ANR	976140	IdentifierDeclStatement	WorkerThreadPtr_t main_thread_ptr ;	325:8:8047:8080	976128	3	True				
ANR	976141	IdentifierDecl	main_thread_ptr		976128	0					
ANR	976142	IdentifierDeclType	WorkerThreadPtr_t		976128	0					
ANR	976143	Identifier	main_thread_ptr		976128	1					
ANR	976144	IfStatement	if ( main_thread_ptr . is_null ( ) )		976128	4					
ANR	976145	Condition	main_thread_ptr . is_null ( )	328:6:8159:8183	976128	0	True				
ANR	976146	CallExpression	main_thread_ptr . is_null ( )		976128	0					
ANR	976147	Callee	main_thread_ptr . is_null		976128	0					
ANR	976148	MemberAccess	main_thread_ptr . is_null		976128	0					
ANR	976149	Identifier	main_thread_ptr		976128	0					
ANR	976150	Identifier	is_null		976128	1					
ANR	976151	ArgumentList			976128	1					
ANR	976152	CompoundStatement		8:2:234:305	976128	1					
ANR	976153	ExpressionStatement	ASSERT ( already_been_here == false )	329:2:8191:8228	976128	0	True				
ANR	976154	CallExpression	ASSERT ( already_been_here == false )		976128	0					
ANR	976155	Callee	ASSERT		976128	0					
ANR	976156	Identifier	ASSERT		976128	0					
ANR	976157	ArgumentList	already_been_here == false		976128	1					
ANR	976158	Argument	already_been_here == false		976128	0					
ANR	976159	EqualityExpression	already_been_here == false		976128	0		==			
ANR	976160	Identifier	already_been_here		976128	0					
ANR	976161	Identifier	false		976128	1					
ANR	976162	IdentifierDeclStatement	"WorkerThreadPtr_t main_thread_tmp ( new WorkerThread ( ""Main Thread"" , NULL ) ) ;"	330:2:8232:8303	976128	1	True				
ANR	976163	IdentifierDecl	"main_thread_tmp ( new WorkerThread ( ""Main Thread"" , NULL ) )"		976128	0					
ANR	976164	IdentifierDeclType	WorkerThreadPtr_t		976128	0					
ANR	976165	Identifier	main_thread_tmp		976128	1					
ANR	976166	Expression	"""Main Thread"" , NULL"		976128	2					
ANR	976167	PrimaryExpression	"""Main Thread"""		976128	0					
ANR	976168	Identifier	NULL		976128	1					
ANR	976169	ExpressionStatement	main_thread_ptr = main_thread_tmp	331:2:8307:8340	976128	2	True				
ANR	976170	AssignmentExpression	main_thread_ptr = main_thread_tmp		976128	0		=			
ANR	976171	Identifier	main_thread_ptr		976128	0					
ANR	976172	Identifier	main_thread_tmp		976128	1					
ANR	976173	ExpressionStatement	already_been_here = true	332:2:8344:8368	976128	3	True				
ANR	976174	AssignmentExpression	already_been_here = true		976128	0		=			
ANR	976175	Identifier	already_been_here		976128	0					
ANR	976176	Identifier	true		976128	1					
ANR	976177	ExpressionStatement	main_thread_ptr -> tid_ = 1	333:2:8372:8397	976128	4	True				
ANR	976178	AssignmentExpression	main_thread_ptr -> tid_ = 1		976128	0		=			
ANR	976179	PtrMemberAccess	main_thread_ptr -> tid_		976128	0					
ANR	976180	Identifier	main_thread_ptr		976128	0					
ANR	976181	Identifier	tid_		976128	1					
ANR	976182	PrimaryExpression	1		976128	1					
ANR	976183	ReturnStatement	return main_thread_ptr ;	336:1:8439:8461	976128	5	True				
ANR	976184	Identifier	main_thread_ptr		976128	0					
ANR	976185	ReturnType	const WorkerThreadPtr_t		976128	1					
ANR	976186	Identifier	ThreadImplementation :: get_main_thread_ptr		976128	2					
ANR	976187	ParameterList			976128	3					
ANR	976188	CFGEntryNode	ENTRY		976128		True				
ANR	976189	CFGExitNode	EXIT		976128		True				
ANR	976190	Symbol	main_thread_tmp		976128						
ANR	976191	Symbol	already_been_here		976128						
ANR	976192	Symbol	main_thread_ptr		976128						
ANR	976193	Symbol	main_thread_ptr . is_null		976128						
ANR	976194	Symbol	false		976128						
ANR	976195	Symbol	true		976128						
ANR	976196	Symbol	main_thread_ptr -> tid_		976128						
ANR	976197	Symbol	* main_thread_ptr		976128						
ANR	976198	Function	operator ==	341:0:8489:8595							
ANR	976199	FunctionDef	"operator == (const ThreadInfo & lhs , const ThreadInfo & rhs)"		976198	0					
ANR	976200	CompoundStatement		342:0:8552:8595	976198	0					
ANR	976201	ReturnStatement	return ( & lhs == & rhs ? true : false ) ;	343:1:8555:8593	976198	0	True				
ANR	976202	ConditionalExpression	& lhs == & rhs ? true : false		976198	0					
ANR	976203	Condition	& lhs == & rhs		976198	0					
ANR	976204	EqualityExpression	& lhs == & rhs		976198	0		==			
ANR	976205	UnaryOperationExpression	& lhs		976198	0					
ANR	976206	UnaryOperator	&		976198	0					
ANR	976207	Identifier	lhs		976198	1					
ANR	976208	UnaryOperationExpression	& rhs		976198	1					
ANR	976209	UnaryOperator	&		976198	0					
ANR	976210	Identifier	rhs		976198	1					
ANR	976211	Identifier	true		976198	1					
ANR	976212	Identifier	false		976198	2					
ANR	976213	ReturnType	bool		976198	1					
ANR	976214	Identifier	operator ==		976198	2					
ANR	976215	ParameterList	"const ThreadInfo & lhs , const ThreadInfo & rhs"		976198	3					
ANR	976216	Parameter	const ThreadInfo & lhs	341:17:8506:8526	976198	0	True				
ANR	976217	ParameterType	const ThreadInfo &		976198	0					
ANR	976218	Identifier	lhs		976198	1					
ANR	976219	Parameter	const ThreadInfo & rhs	341:40:8529:8549	976198	1	True				
ANR	976220	ParameterType	const ThreadInfo &		976198	0					
ANR	976221	Identifier	rhs		976198	1					
ANR	976222	CFGEntryNode	ENTRY		976198		True				
ANR	976223	CFGExitNode	EXIT		976198		True				
ANR	976224	Symbol	& rhs		976198						
ANR	976225	Symbol	lhs		976198						
ANR	976226	Symbol	false		976198						
ANR	976227	Symbol	true		976198						
ANR	976228	Symbol	& lhs		976198						
ANR	976229	Symbol	rhs		976198						
ANR	976230	Function	operator ==	355:0:8733:8877							
ANR	976231	FunctionDef	"operator == (const ThreadInfo & lhs , const ThreadInfo & rhs)"		976230	0					
ANR	976232	CompoundStatement		356:0:8796:8877	976230	0					
ANR	976233	ReturnStatement	"return ( pthread_equal ( lhs . get_pthread ( ) , rhs . get_pthread ( ) ) ? true : false ) ;"	357:1:8799:8875	976230	0	True				
ANR	976234	ConditionalExpression	"pthread_equal ( lhs . get_pthread ( ) , rhs . get_pthread ( ) ) ? true : false"		976230	0					
ANR	976235	Condition	"pthread_equal ( lhs . get_pthread ( ) , rhs . get_pthread ( ) )"		976230	0					
ANR	976236	CallExpression	"pthread_equal ( lhs . get_pthread ( ) , rhs . get_pthread ( ) )"		976230	0					
ANR	976237	Callee	pthread_equal		976230	0					
ANR	976238	Identifier	pthread_equal		976230	0					
ANR	976239	ArgumentList	lhs . get_pthread ( )		976230	1					
ANR	976240	Argument	lhs . get_pthread ( )		976230	0					
ANR	976241	CallExpression	lhs . get_pthread ( )		976230	0					
ANR	976242	Callee	lhs . get_pthread		976230	0					
ANR	976243	MemberAccess	lhs . get_pthread		976230	0					
ANR	976244	Identifier	lhs		976230	0					
ANR	976245	Identifier	get_pthread		976230	1					
ANR	976246	ArgumentList			976230	1					
ANR	976247	Argument	rhs . get_pthread ( )		976230	1					
ANR	976248	CallExpression	rhs . get_pthread ( )		976230	0					
ANR	976249	Callee	rhs . get_pthread		976230	0					
ANR	976250	MemberAccess	rhs . get_pthread		976230	0					
ANR	976251	Identifier	rhs		976230	0					
ANR	976252	Identifier	get_pthread		976230	1					
ANR	976253	ArgumentList			976230	1					
ANR	976254	Identifier	true		976230	1					
ANR	976255	Identifier	false		976230	2					
ANR	976256	ReturnType	bool		976230	1					
ANR	976257	Identifier	operator ==		976230	2					
ANR	976258	ParameterList	"const ThreadInfo & lhs , const ThreadInfo & rhs"		976230	3					
ANR	976259	Parameter	const ThreadInfo & lhs	355:17:8750:8770	976230	0	True				
ANR	976260	ParameterType	const ThreadInfo &		976230	0					
ANR	976261	Identifier	lhs		976230	1					
ANR	976262	Parameter	const ThreadInfo & rhs	355:40:8773:8793	976230	1	True				
ANR	976263	ParameterType	const ThreadInfo &		976230	0					
ANR	976264	Identifier	rhs		976230	1					
ANR	976265	CFGEntryNode	ENTRY		976230		True				
ANR	976266	CFGExitNode	EXIT		976230		True				
ANR	976267	Symbol	lhs		976230						
ANR	976268	Symbol	lhs . get_pthread		976230						
ANR	976269	Symbol	rhs . get_pthread		976230						
ANR	976270	Symbol	true		976230						
ANR	976271	Symbol	false		976230						
ANR	976272	Symbol	rhs		976230						
ANR	976273	Symbol	pthread_equal		976230						
ANR	976274	Function	WorkerThread :: set_status	360:0:8880:12256							
ANR	976275	FunctionDef	WorkerThread :: set_status (thread_status_t newstatus)		976274	0					
ANR	976276	CompoundStatement		362:0:8937:12256	976274	0					
ANR	976277	Statement	static	363:1:8940:8945	976274	0	True				
ANR	976278	IdentifierDeclStatement	int previous_ready_tid = 0 ;	363:8:8947:8973	976274	1	True				
ANR	976279	IdentifierDecl	previous_ready_tid = 0		976274	0					
ANR	976280	IdentifierDeclType	int		976274	0					
ANR	976281	Identifier	previous_ready_tid		976274	1					
ANR	976282	AssignmentExpression	previous_ready_tid = 0		976274	2		=			
ANR	976283	Identifier	previous_ready_tid		976274	0					
ANR	976284	PrimaryExpression	0		976274	1					
ANR	976285	Statement	static	364:1:8976:8981	976274	2	True				
ANR	976286	IdentifierDeclStatement	int previous_running_tid = 0 ;	364:8:8983:9011	976274	3	True				
ANR	976287	IdentifierDecl	previous_running_tid = 0		976274	0					
ANR	976288	IdentifierDeclType	int		976274	0					
ANR	976289	Identifier	previous_running_tid		976274	1					
ANR	976290	AssignmentExpression	previous_running_tid = 0		976274	2		=			
ANR	976291	Identifier	previous_running_tid		976274	0					
ANR	976292	PrimaryExpression	0		976274	1					
ANR	976293	Statement	static	365:1:9014:9019	976274	4	True				
ANR	976294	IdentifierDeclStatement	char previous_ready_message [ 200 ] ;	365:8:9021:9053	976274	5	True				
ANR	976295	IdentifierDecl	previous_ready_message [ 200 ]		976274	0					
ANR	976296	IdentifierDeclType	char [ 200 ]		976274	0					
ANR	976297	Identifier	previous_ready_message		976274	1					
ANR	976298	PrimaryExpression	200		976274	2					
ANR	976299	IdentifierDeclStatement	bool same_thread_running = false ;	366:1:9056:9088	976274	6	True				
ANR	976300	IdentifierDecl	same_thread_running = false		976274	0					
ANR	976301	IdentifierDeclType	bool		976274	0					
ANR	976302	Identifier	same_thread_running		976274	1					
ANR	976303	AssignmentExpression	same_thread_running = false		976274	2		=			
ANR	976304	Identifier	false		976274	0					
ANR	976305	Identifier	false		976274	1					
ANR	976306	IfStatement	if ( status_ == THREAD_COMPLETED )		976274	7					
ANR	976307	Condition	status_ == THREAD_COMPLETED	374:6:9321:9347	976274	0	True				
ANR	976308	EqualityExpression	status_ == THREAD_COMPLETED		976274	0		==			
ANR	976309	Identifier	status_		976274	0					
ANR	976310	Identifier	THREAD_COMPLETED		976274	1					
ANR	976311	CompoundStatement		13:37:414:414	976274	1					
ANR	976312	ReturnStatement	return ;	375:2:9358:9364	976274	0	True				
ANR	976313	IfStatement	if ( status_ == newstatus )		976274	8					
ANR	976314	Condition	status_ == newstatus	379:6:9439:9458	976274	0	True				
ANR	976315	EqualityExpression	status_ == newstatus		976274	0		==			
ANR	976316	Identifier	status_		976274	0					
ANR	976317	Identifier	newstatus		976274	1					
ANR	976318	CompoundStatement		18:29:524:524	976274	1					
ANR	976319	ReturnStatement	return ;	380:2:9466:9472	976274	0	True				
ANR	976320	IdentifierDeclStatement	int mytid = get_tid ( ) ;	383:1:9479:9500	976274	9	True				
ANR	976321	IdentifierDecl	mytid = get_tid ( )		976274	0					
ANR	976322	IdentifierDeclType	int		976274	0					
ANR	976323	Identifier	mytid		976274	1					
ANR	976324	AssignmentExpression	mytid = get_tid ( )		976274	2		=			
ANR	976325	Identifier	mytid		976274	0					
ANR	976326	CallExpression	get_tid ( )		976274	1					
ANR	976327	Callee	get_tid		976274	0					
ANR	976328	Identifier	get_tid		976274	0					
ANR	976329	ArgumentList			976274	1					
ANR	976330	IdentifierDeclStatement	thread_status_t currentstatus = status_ ;	384:1:9503:9542	976274	10	True				
ANR	976331	IdentifierDecl	currentstatus = status_		976274	0					
ANR	976332	IdentifierDeclType	thread_status_t		976274	0					
ANR	976333	Identifier	currentstatus		976274	1					
ANR	976334	AssignmentExpression	currentstatus = status_		976274	2		=			
ANR	976335	Identifier	status_		976274	0					
ANR	976336	Identifier	status_		976274	1					
ANR	976337	ExpressionStatement	status_ = newstatus	387:1:9569:9588	976274	11	True				
ANR	976338	AssignmentExpression	status_ = newstatus		976274	0		=			
ANR	976339	Identifier	status_		976274	0					
ANR	976340	Identifier	newstatus		976274	1					
ANR	976341	IfStatement	if ( ! TI )		976274	12					
ANR	976342	Condition	! TI	391:6:9713:9715	976274	0	True				
ANR	976343	UnaryOperationExpression	! TI		976274	0					
ANR	976344	UnaryOperator	!		976274	0					
ANR	976345	Identifier	TI		976274	1					
ANR	976346	CompoundStatement		30:12:781:781	976274	1					
ANR	976347	ReturnStatement	return ;	392:2:9723:9729	976274	0	True				
ANR	976348	ExpressionStatement	pthread_mutex_lock ( & ( TI -> set_status_lock ) )	404:1:10194:10236	976274	13	True				
ANR	976349	CallExpression	pthread_mutex_lock ( & ( TI -> set_status_lock ) )		976274	0					
ANR	976350	Callee	pthread_mutex_lock		976274	0					
ANR	976351	Identifier	pthread_mutex_lock		976274	0					
ANR	976352	ArgumentList	& ( TI -> set_status_lock )		976274	1					
ANR	976353	Argument	& ( TI -> set_status_lock )		976274	0					
ANR	976354	UnaryOperationExpression	& ( TI -> set_status_lock )		976274	0					
ANR	976355	UnaryOperator	&		976274	0					
ANR	976356	PtrMemberAccess	TI -> set_status_lock		976274	1					
ANR	976357	Identifier	TI		976274	0					
ANR	976358	Identifier	set_status_lock		976274	1					
ANR	976359	IfStatement	if ( previous_running_tid > 0 && newstatus == THREAD_RUNNING && mytid != previous_running_tid )		976274	14					
ANR	976360	Condition	previous_running_tid > 0 && newstatus == THREAD_RUNNING && mytid != previous_running_tid	407:6:10306:10397	976274	0	True				
ANR	976361	AndExpression	previous_running_tid > 0 && newstatus == THREAD_RUNNING && mytid != previous_running_tid		976274	0		&&			
ANR	976362	RelationalExpression	previous_running_tid > 0		976274	0		>			
ANR	976363	Identifier	previous_running_tid		976274	0					
ANR	976364	PrimaryExpression	0		976274	1					
ANR	976365	AndExpression	newstatus == THREAD_RUNNING && mytid != previous_running_tid		976274	1		&&			
ANR	976366	EqualityExpression	newstatus == THREAD_RUNNING		976274	0		==			
ANR	976367	Identifier	newstatus		976274	0					
ANR	976368	Identifier	THREAD_RUNNING		976274	1					
ANR	976369	EqualityExpression	mytid != previous_running_tid		976274	1		!=			
ANR	976370	Identifier	mytid		976274	0					
ANR	976371	Identifier	previous_running_tid		976274	1					
ANR	976372	CompoundStatement		49:2:1469:1544	976274	1					
ANR	976373	IdentifierDeclStatement	WorkerThreadPtr_t context = CondorThreads :: get_handle ( previous_running_tid ) ;	410:2:10407:10482	976274	0	True				
ANR	976374	IdentifierDecl	context = CondorThreads :: get_handle ( previous_running_tid )		976274	0					
ANR	976375	IdentifierDeclType	WorkerThreadPtr_t		976274	0					
ANR	976376	Identifier	context		976274	1					
ANR	976377	AssignmentExpression	context = CondorThreads :: get_handle ( previous_running_tid )		976274	2		=			
ANR	976378	Identifier	context		976274	0					
ANR	976379	CallExpression	CondorThreads :: get_handle ( previous_running_tid )		976274	1					
ANR	976380	Callee	CondorThreads :: get_handle		976274	0					
ANR	976381	Identifier	CondorThreads :: get_handle		976274	0					
ANR	976382	ArgumentList	previous_running_tid		976274	1					
ANR	976383	Argument	previous_running_tid		976274	0					
ANR	976384	Identifier	previous_running_tid		976274	0					
ANR	976385	IfStatement	if ( ! context . is_null ( ) )		976274	1					
ANR	976386	Condition	! context . is_null ( )	411:7:10491:10508	976274	0	True				
ANR	976387	UnaryOperationExpression	! context . is_null ( )		976274	0					
ANR	976388	UnaryOperator	!		976274	0					
ANR	976389	CallExpression	context . is_null ( )		976274	1					
ANR	976390	Callee	context . is_null		976274	0					
ANR	976391	MemberAccess	context . is_null		976274	0					
ANR	976392	Identifier	context		976274	0					
ANR	976393	Identifier	is_null		976274	1					
ANR	976394	ArgumentList			976274	1					
ANR	976395	CompoundStatement		50:28:1574:1574	976274	1					
ANR	976396	IfStatement	if ( context -> status_ == THREAD_RUNNING )		976274	0					
ANR	976397	Condition	context -> status_ == THREAD_RUNNING	412:8:10522:10555	976274	0	True				
ANR	976398	EqualityExpression	context -> status_ == THREAD_RUNNING		976274	0		==			
ANR	976399	PtrMemberAccess	context -> status_		976274	0					
ANR	976400	Identifier	context		976274	0					
ANR	976401	Identifier	status_		976274	1					
ANR	976402	Identifier	THREAD_RUNNING		976274	1					
ANR	976403	CompoundStatement		51:45:1621:1621	976274	1					
ANR	976404	ExpressionStatement	context -> status_ = THREAD_READY	413:4:10565:10596	976274	0	True				
ANR	976405	AssignmentExpression	context -> status_ = THREAD_READY		976274	0		=			
ANR	976406	PtrMemberAccess	context -> status_		976274	0					
ANR	976407	Identifier	context		976274	0					
ANR	976408	Identifier	status_		976274	1					
ANR	976409	Identifier	THREAD_READY		976274	1					
ANR	976410	ExpressionStatement	"dprintf ( D_THREADS , ""Thread %d (%s) status change from %s to %s\\n"" , previous_running_tid , context -> get_name ( ) , get_status_string ( THREAD_RUNNING ) , get_status_string ( THREAD_READY ) )"	414:4:10602:10792	976274	1	True				
ANR	976411	CallExpression	"dprintf ( D_THREADS , ""Thread %d (%s) status change from %s to %s\\n"" , previous_running_tid , context -> get_name ( ) , get_status_string ( THREAD_RUNNING ) , get_status_string ( THREAD_READY ) )"		976274	0					
ANR	976412	Callee	dprintf		976274	0					
ANR	976413	Identifier	dprintf		976274	0					
ANR	976414	ArgumentList	D_THREADS		976274	1					
ANR	976415	Argument	D_THREADS		976274	0					
ANR	976416	Identifier	D_THREADS		976274	0					
ANR	976417	Argument	"""Thread %d (%s) status change from %s to %s\\n"""		976274	1					
ANR	976418	PrimaryExpression	"""Thread %d (%s) status change from %s to %s\\n"""		976274	0					
ANR	976419	Argument	previous_running_tid		976274	2					
ANR	976420	Identifier	previous_running_tid		976274	0					
ANR	976421	Argument	context -> get_name ( )		976274	3					
ANR	976422	CallExpression	context -> get_name ( )		976274	0					
ANR	976423	Callee	context -> get_name		976274	0					
ANR	976424	PtrMemberAccess	context -> get_name		976274	0					
ANR	976425	Identifier	context		976274	0					
ANR	976426	Identifier	get_name		976274	1					
ANR	976427	ArgumentList			976274	1					
ANR	976428	Argument	get_status_string ( THREAD_RUNNING )		976274	4					
ANR	976429	CallExpression	get_status_string ( THREAD_RUNNING )		976274	0					
ANR	976430	Callee	get_status_string		976274	0					
ANR	976431	Identifier	get_status_string		976274	0					
ANR	976432	ArgumentList	THREAD_RUNNING		976274	1					
ANR	976433	Argument	THREAD_RUNNING		976274	0					
ANR	976434	Identifier	THREAD_RUNNING		976274	0					
ANR	976435	Argument	get_status_string ( THREAD_READY )		976274	5					
ANR	976436	CallExpression	get_status_string ( THREAD_READY )		976274	0					
ANR	976437	Callee	get_status_string		976274	0					
ANR	976438	Identifier	get_status_string		976274	0					
ANR	976439	ArgumentList	THREAD_READY		976274	1					
ANR	976440	Argument	THREAD_READY		976274	0					
ANR	976441	Identifier	THREAD_READY		976274	0					
ANR	976442	IfStatement	if ( ( currentstatus == THREAD_RUNNING && newstatus == THREAD_READY ) )		976274	15					
ANR	976443	Condition	currentstatus == THREAD_RUNNING && newstatus == THREAD_READY	422:6:10813:10874	976274	0	True				
ANR	976444	AndExpression	currentstatus == THREAD_RUNNING && newstatus == THREAD_READY		976274	0		&&			
ANR	976445	EqualityExpression	currentstatus == THREAD_RUNNING		976274	0		==			
ANR	976446	Identifier	currentstatus		976274	0					
ANR	976447	Identifier	THREAD_RUNNING		976274	1					
ANR	976448	EqualityExpression	newstatus == THREAD_READY		976274	1		==			
ANR	976449	Identifier	newstatus		976274	0					
ANR	976450	Identifier	THREAD_READY		976274	1					
ANR	976451	CompoundStatement		62:1:1940:1940	976274	1					
ANR	976452	ExpressionStatement	"snprintf ( previous_ready_message , sizeof ( previous_ready_message ) , ""Thread %d (%s) status change from %s to %s\\n"" , mytid , get_name ( ) , get_status_string ( currentstatus ) , get_status_string ( newstatus ) )"	424:2:10882:11079	976274	0	True				
ANR	976453	CallExpression	"snprintf ( previous_ready_message , sizeof ( previous_ready_message ) , ""Thread %d (%s) status change from %s to %s\\n"" , mytid , get_name ( ) , get_status_string ( currentstatus ) , get_status_string ( newstatus ) )"		976274	0					
ANR	976454	Callee	snprintf		976274	0					
ANR	976455	Identifier	snprintf		976274	0					
ANR	976456	ArgumentList	previous_ready_message		976274	1					
ANR	976457	Argument	previous_ready_message		976274	0					
ANR	976458	Identifier	previous_ready_message		976274	0					
ANR	976459	Argument	sizeof ( previous_ready_message )		976274	1					
ANR	976460	SizeofExpression	sizeof ( previous_ready_message )		976274	0					
ANR	976461	Sizeof	sizeof		976274	0					
ANR	976462	SizeofOperand	previous_ready_message		976274	1					
ANR	976463	Argument	"""Thread %d (%s) status change from %s to %s\\n"""		976274	2					
ANR	976464	PrimaryExpression	"""Thread %d (%s) status change from %s to %s\\n"""		976274	0					
ANR	976465	Argument	mytid		976274	3					
ANR	976466	Identifier	mytid		976274	0					
ANR	976467	Argument	get_name ( )		976274	4					
ANR	976468	CallExpression	get_name ( )		976274	0					
ANR	976469	Callee	get_name		976274	0					
ANR	976470	Identifier	get_name		976274	0					
ANR	976471	ArgumentList			976274	1					
ANR	976472	Argument	get_status_string ( currentstatus )		976274	5					
ANR	976473	CallExpression	get_status_string ( currentstatus )		976274	0					
ANR	976474	Callee	get_status_string		976274	0					
ANR	976475	Identifier	get_status_string		976274	0					
ANR	976476	ArgumentList	currentstatus		976274	1					
ANR	976477	Argument	currentstatus		976274	0					
ANR	976478	Identifier	currentstatus		976274	0					
ANR	976479	Argument	get_status_string ( newstatus )		976274	6					
ANR	976480	CallExpression	get_status_string ( newstatus )		976274	0					
ANR	976481	Callee	get_status_string		976274	0					
ANR	976482	Identifier	get_status_string		976274	0					
ANR	976483	ArgumentList	newstatus		976274	1					
ANR	976484	Argument	newstatus		976274	0					
ANR	976485	Identifier	newstatus		976274	0					
ANR	976486	ExpressionStatement	previous_ready_tid = mytid	427:2:11083:11109	976274	1	True				
ANR	976487	AssignmentExpression	previous_ready_tid = mytid		976274	0		=			
ANR	976488	Identifier	previous_ready_tid		976274	0					
ANR	976489	Identifier	mytid		976274	1					
ANR	976490	ElseStatement	else		976274	0					
ANR	976491	IfStatement	if ( currentstatus == THREAD_READY && newstatus == THREAD_RUNNING )		976274	0					
ANR	976492	Condition	currentstatus == THREAD_READY && newstatus == THREAD_RUNNING	430:6:11128:11187	976274	0	True				
ANR	976493	AndExpression	currentstatus == THREAD_READY && newstatus == THREAD_RUNNING		976274	0		&&			
ANR	976494	EqualityExpression	currentstatus == THREAD_READY		976274	0		==			
ANR	976495	Identifier	currentstatus		976274	0					
ANR	976496	Identifier	THREAD_READY		976274	1					
ANR	976497	EqualityExpression	newstatus == THREAD_RUNNING		976274	1		==			
ANR	976498	Identifier	newstatus		976274	0					
ANR	976499	Identifier	THREAD_RUNNING		976274	1					
ANR	976500	CompoundStatement		70:1:2255:2255	976274	1					
ANR	976501	IfStatement	if ( ( mytid != previous_ready_tid ) )		976274	0					
ANR	976502	Condition	mytid != previous_ready_tid	432:7:11202:11230	976274	0	True				
ANR	976503	EqualityExpression	mytid != previous_ready_tid		976274	0		!=			
ANR	976504	Identifier	mytid		976274	0					
ANR	976505	Identifier	previous_ready_tid		976274	1					
ANR	976506	CompoundStatement		71:38:2295:2295	976274	1					
ANR	976507	IfStatement	if ( previous_ready_tid )		976274	0					
ANR	976508	Condition	previous_ready_tid	433:8:11243:11260	976274	0	True				
ANR	976509	Identifier	previous_ready_tid		976274	0					
ANR	976510	CompoundStatement		72:29:2326:2326	976274	1					
ANR	976511	ExpressionStatement	"dprintf ( D_THREADS , ""%s\\n"" , previous_ready_message )"	434:4:11270:11318	976274	0	True				
ANR	976512	CallExpression	"dprintf ( D_THREADS , ""%s\\n"" , previous_ready_message )"		976274	0					
ANR	976513	Callee	dprintf		976274	0					
ANR	976514	Identifier	dprintf		976274	0					
ANR	976515	ArgumentList	D_THREADS		976274	1					
ANR	976516	Argument	D_THREADS		976274	0					
ANR	976517	Identifier	D_THREADS		976274	0					
ANR	976518	Argument	"""%s\\n"""		976274	1					
ANR	976519	PrimaryExpression	"""%s\\n"""		976274	0					
ANR	976520	Argument	previous_ready_message		976274	2					
ANR	976521	Identifier	previous_ready_message		976274	0					
ANR	976522	ExpressionStatement	"dprintf ( D_THREADS , ""Thread %d (%s) status change from %s to %s\\n"" , mytid , get_name ( ) , get_status_string ( currentstatus ) , get_status_string ( newstatus ) )"	436:3:11330:11484	976274	1	True				
ANR	976523	CallExpression	"dprintf ( D_THREADS , ""Thread %d (%s) status change from %s to %s\\n"" , mytid , get_name ( ) , get_status_string ( currentstatus ) , get_status_string ( newstatus ) )"		976274	0					
ANR	976524	Callee	dprintf		976274	0					
ANR	976525	Identifier	dprintf		976274	0					
ANR	976526	ArgumentList	D_THREADS		976274	1					
ANR	976527	Argument	D_THREADS		976274	0					
ANR	976528	Identifier	D_THREADS		976274	0					
ANR	976529	Argument	"""Thread %d (%s) status change from %s to %s\\n"""		976274	1					
ANR	976530	PrimaryExpression	"""Thread %d (%s) status change from %s to %s\\n"""		976274	0					
ANR	976531	Argument	mytid		976274	2					
ANR	976532	Identifier	mytid		976274	0					
ANR	976533	Argument	get_name ( )		976274	3					
ANR	976534	CallExpression	get_name ( )		976274	0					
ANR	976535	Callee	get_name		976274	0					
ANR	976536	Identifier	get_name		976274	0					
ANR	976537	ArgumentList			976274	1					
ANR	976538	Argument	get_status_string ( currentstatus )		976274	4					
ANR	976539	CallExpression	get_status_string ( currentstatus )		976274	0					
ANR	976540	Callee	get_status_string		976274	0					
ANR	976541	Identifier	get_status_string		976274	0					
ANR	976542	ArgumentList	currentstatus		976274	1					
ANR	976543	Argument	currentstatus		976274	0					
ANR	976544	Identifier	currentstatus		976274	0					
ANR	976545	Argument	get_status_string ( newstatus )		976274	5					
ANR	976546	CallExpression	get_status_string ( newstatus )		976274	0					
ANR	976547	Callee	get_status_string		976274	0					
ANR	976548	Identifier	get_status_string		976274	0					
ANR	976549	ArgumentList	newstatus		976274	1					
ANR	976550	Argument	newstatus		976274	0					
ANR	976551	Identifier	newstatus		976274	0					
ANR	976552	ElseStatement	else		976274	0					
ANR	976553	CompoundStatement		78:9:2557:2557	976274	0					
ANR	976554	ExpressionStatement	same_thread_running = true	440:3:11500:11526	976274	0	True				
ANR	976555	AssignmentExpression	same_thread_running = true		976274	0		=			
ANR	976556	Identifier	same_thread_running		976274	0					
ANR	976557	Identifier	true		976274	1					
ANR	976558	ExpressionStatement	previous_ready_tid = 0	442:2:11534:11556	976274	1	True				
ANR	976559	AssignmentExpression	previous_ready_tid = 0		976274	0		=			
ANR	976560	Identifier	previous_ready_tid		976274	0					
ANR	976561	PrimaryExpression	0		976274	1					
ANR	976562	ElseStatement	else		976274	0					
ANR	976563	CompoundStatement		84:1:2631:2631	976274	0					
ANR	976564	IfStatement	if ( previous_ready_tid )		976274	0					
ANR	976565	Condition	previous_ready_tid	446:7:11578:11595	976274	0	True				
ANR	976566	Identifier	previous_ready_tid		976274	0					
ANR	976567	CompoundStatement		85:28:2661:2661	976274	1					
ANR	976568	ExpressionStatement	"dprintf ( D_THREADS , ""%s\\n"" , previous_ready_message )"	447:3:11604:11652	976274	0	True				
ANR	976569	CallExpression	"dprintf ( D_THREADS , ""%s\\n"" , previous_ready_message )"		976274	0					
ANR	976570	Callee	dprintf		976274	0					
ANR	976571	Identifier	dprintf		976274	0					
ANR	976572	ArgumentList	D_THREADS		976274	1					
ANR	976573	Argument	D_THREADS		976274	0					
ANR	976574	Identifier	D_THREADS		976274	0					
ANR	976575	Argument	"""%s\\n"""		976274	1					
ANR	976576	PrimaryExpression	"""%s\\n"""		976274	0					
ANR	976577	Argument	previous_ready_message		976274	2					
ANR	976578	Identifier	previous_ready_message		976274	0					
ANR	976579	ExpressionStatement	previous_ready_tid = 0	449:2:11662:11684	976274	1	True				
ANR	976580	AssignmentExpression	previous_ready_tid = 0		976274	0		=			
ANR	976581	Identifier	previous_ready_tid		976274	0					
ANR	976582	PrimaryExpression	0		976274	1					
ANR	976583	ExpressionStatement	"dprintf ( D_THREADS , ""Thread %d (%s) status change from %s to %s\\n"" , mytid , get_name ( ) , get_status_string ( currentstatus ) , get_status_string ( newstatus ) )"	450:2:11688:11840	976274	2	True				
ANR	976584	CallExpression	"dprintf ( D_THREADS , ""Thread %d (%s) status change from %s to %s\\n"" , mytid , get_name ( ) , get_status_string ( currentstatus ) , get_status_string ( newstatus ) )"		976274	0					
ANR	976585	Callee	dprintf		976274	0					
ANR	976586	Identifier	dprintf		976274	0					
ANR	976587	ArgumentList	D_THREADS		976274	1					
ANR	976588	Argument	D_THREADS		976274	0					
ANR	976589	Identifier	D_THREADS		976274	0					
ANR	976590	Argument	"""Thread %d (%s) status change from %s to %s\\n"""		976274	1					
ANR	976591	PrimaryExpression	"""Thread %d (%s) status change from %s to %s\\n"""		976274	0					
ANR	976592	Argument	mytid		976274	2					
ANR	976593	Identifier	mytid		976274	0					
ANR	976594	Argument	get_name ( )		976274	3					
ANR	976595	CallExpression	get_name ( )		976274	0					
ANR	976596	Callee	get_name		976274	0					
ANR	976597	Identifier	get_name		976274	0					
ANR	976598	ArgumentList			976274	1					
ANR	976599	Argument	get_status_string ( currentstatus )		976274	4					
ANR	976600	CallExpression	get_status_string ( currentstatus )		976274	0					
ANR	976601	Callee	get_status_string		976274	0					
ANR	976602	Identifier	get_status_string		976274	0					
ANR	976603	ArgumentList	currentstatus		976274	1					
ANR	976604	Argument	currentstatus		976274	0					
ANR	976605	Identifier	currentstatus		976274	0					
ANR	976606	Argument	get_status_string ( newstatus )		976274	5					
ANR	976607	CallExpression	get_status_string ( newstatus )		976274	0					
ANR	976608	Callee	get_status_string		976274	0					
ANR	976609	Identifier	get_status_string		976274	0					
ANR	976610	ArgumentList	newstatus		976274	1					
ANR	976611	Argument	newstatus		976274	0					
ANR	976612	Identifier	newstatus		976274	0					
ANR	976613	IfStatement	if ( newstatus == THREAD_RUNNING )		976274	16					
ANR	976614	Condition	newstatus == THREAD_RUNNING	455:6:11852:11878	976274	0	True				
ANR	976615	EqualityExpression	newstatus == THREAD_RUNNING		976274	0		==			
ANR	976616	Identifier	newstatus		976274	0					
ANR	976617	Identifier	THREAD_RUNNING		976274	1					
ANR	976618	CompoundStatement		94:36:2944:2944	976274	1					
ANR	976619	ExpressionStatement	previous_running_tid = mytid	456:2:11886:11914	976274	0	True				
ANR	976620	AssignmentExpression	previous_running_tid = mytid		976274	0		=			
ANR	976621	Identifier	previous_running_tid		976274	0					
ANR	976622	Identifier	mytid		976274	1					
ANR	976623	ExpressionStatement	pthread_mutex_unlock ( & ( TI -> set_status_lock ) )	459:1:11921:11965	976274	17	True				
ANR	976624	CallExpression	pthread_mutex_unlock ( & ( TI -> set_status_lock ) )		976274	0					
ANR	976625	Callee	pthread_mutex_unlock		976274	0					
ANR	976626	Identifier	pthread_mutex_unlock		976274	0					
ANR	976627	ArgumentList	& ( TI -> set_status_lock )		976274	1					
ANR	976628	Argument	& ( TI -> set_status_lock )		976274	0					
ANR	976629	UnaryOperationExpression	& ( TI -> set_status_lock )		976274	0					
ANR	976630	UnaryOperator	&		976274	0					
ANR	976631	PtrMemberAccess	TI -> set_status_lock		976274	1					
ANR	976632	Identifier	TI		976274	0					
ANR	976633	Identifier	set_status_lock		976274	1					
ANR	976634	IfStatement	if ( newstatus == THREAD_RUNNING && same_thread_running == false )		976274	18					
ANR	976635	Condition	newstatus == THREAD_RUNNING && same_thread_running == false	461:6:11974:12032	976274	0	True				
ANR	976636	AndExpression	newstatus == THREAD_RUNNING && same_thread_running == false		976274	0		&&			
ANR	976637	EqualityExpression	newstatus == THREAD_RUNNING		976274	0		==			
ANR	976638	Identifier	newstatus		976274	0					
ANR	976639	Identifier	THREAD_RUNNING		976274	1					
ANR	976640	EqualityExpression	same_thread_running == false		976274	1		==			
ANR	976641	Identifier	same_thread_running		976274	0					
ANR	976642	Identifier	false		976274	1					
ANR	976643	CompoundStatement		101:1:3099:3099	976274	1					
ANR	976644	IfStatement	if ( TI -> switch_callback )		976274	0					
ANR	976645	Condition	TI -> switch_callback	465:7:12180:12198	976274	0	True				
ANR	976646	PtrMemberAccess	TI -> switch_callback		976274	0					
ANR	976647	Identifier	TI		976274	0					
ANR	976648	Identifier	switch_callback		976274	1					
ANR	976649	CompoundStatement		104:29:3264:3264	976274	1					
ANR	976650	ExpressionStatement	( * ( TI -> switch_callback ) ) ( user_pointer_ )	466:3:12207:12246	976274	0	True				
ANR	976651	CallExpression	( * ( TI -> switch_callback ) ) ( user_pointer_ )		976274	0					
ANR	976652	Callee	* ( TI -> switch_callback )		976274	0					
ANR	976653	UnaryOperationExpression	* ( TI -> switch_callback )		976274	0					
ANR	976654	UnaryOperator	*		976274	0					
ANR	976655	PtrMemberAccess	TI -> switch_callback		976274	1					
ANR	976656	Identifier	TI		976274	0					
ANR	976657	Identifier	switch_callback		976274	1					
ANR	976658	ArgumentList	user_pointer_		976274	1					
ANR	976659	Argument	user_pointer_		976274	0					
ANR	976660	Identifier	user_pointer_		976274	0					
ANR	976661	ReturnType	void		976274	1					
ANR	976662	Identifier	WorkerThread :: set_status		976274	2					
ANR	976663	ParameterList	thread_status_t newstatus		976274	3					
ANR	976664	Parameter	thread_status_t newstatus	361:25:8910:8934	976274	0	True				
ANR	976665	ParameterType	thread_status_t		976274	0					
ANR	976666	Identifier	newstatus		976274	1					
ANR	976667	CFGEntryNode	ENTRY		976274		True				
ANR	976668	CFGExitNode	EXIT		976274		True				
ANR	976669	Symbol	status_		976274						
ANR	976670	Symbol	previous_ready_message		976274						
ANR	976671	Symbol	newstatus		976274						
ANR	976672	Symbol	D_THREADS		976274						
ANR	976673	Symbol	previous_ready_tid		976274						
ANR	976674	Symbol	get_status_string		976274						
ANR	976675	Symbol	context . is_null		976274						
ANR	976676	Symbol	context		976274						
ANR	976677	Symbol	get_name		976274						
ANR	976678	Symbol	mytid		976274						
ANR	976679	Symbol	CondorThreads :: get_handle		976274						
ANR	976680	Symbol	context -> get_name		976274						
ANR	976681	Symbol	currentstatus		976274						
ANR	976682	Symbol	THREAD_RUNNING		976274						
ANR	976683	Symbol	THREAD_READY		976274						
ANR	976684	Symbol	false		976274						
ANR	976685	Symbol	& TI -> set_status_lock		976274						
ANR	976686	Symbol	get_tid		976274						
ANR	976687	Symbol	* context		976274						
ANR	976688	Symbol	THREAD_COMPLETED		976274						
ANR	976689	Symbol	TI		976274						
ANR	976690	Symbol	previous_running_tid		976274						
ANR	976691	Symbol	context -> status_		976274						
ANR	976692	Symbol	same_thread_running		976274						
ANR	976693	Symbol	true		976274						
ANR	976694	Symbol	* TI		976274						
ANR	976695	Symbol	TI -> switch_callback		976274						
ANR	976696	Symbol	user_pointer_		976274						
ANR	976697	Function	ThreadImplementation :: hashFuncThreadInfo	472:0:12260:13066							
ANR	976698	FunctionDef	ThreadImplementation :: hashFuncThreadInfo (const ThreadInfo & mythread)		976697	0					
ANR	976699	CompoundStatement		474:0:12343:13066	976697	0					
ANR	976700	IdentifierDeclStatement	unsigned int hash = 0 ;	479:1:12611:12632	976697	0	True				
ANR	976701	IdentifierDecl	hash = 0		976697	0					
ANR	976702	IdentifierDeclType	unsigned int		976697	0					
ANR	976703	Identifier	hash		976697	1					
ANR	976704	AssignmentExpression	hash = 0		976697	2		=			
ANR	976705	Identifier	hash		976697	0					
ANR	976706	PrimaryExpression	0		976697	1					
ANR	976707	IdentifierDeclStatement	unsigned int j = sizeof ( pthread_t ) ;	481:1:12636:12670	976697	1	True				
ANR	976708	IdentifierDecl	j = sizeof ( pthread_t )		976697	0					
ANR	976709	IdentifierDeclType	unsigned int		976697	0					
ANR	976710	Identifier	j		976697	1					
ANR	976711	AssignmentExpression	j = sizeof ( pthread_t )		976697	2		=			
ANR	976712	Identifier	j		976697	0					
ANR	976713	SizeofExpression	sizeof ( pthread_t )		976697	1					
ANR	976714	Sizeof	sizeof		976697	0					
ANR	976715	SizeofOperand	pthread_t		976697	1					
ANR	976716	IdentifierDeclStatement	int i = 0 ;	482:1:12673:12682	976697	2	True				
ANR	976717	IdentifierDecl	i = 0		976697	0					
ANR	976718	IdentifierDeclType	int		976697	0					
ANR	976719	Identifier	i		976697	1					
ANR	976720	AssignmentExpression	i = 0		976697	2		=			
ANR	976721	Identifier	i		976697	0					
ANR	976722	PrimaryExpression	0		976697	1					
ANR	976723	IdentifierDeclStatement	pthread_t thread = mythread . get_pthread ( ) ;	483:1:12685:12726	976697	3	True				
ANR	976724	IdentifierDecl	thread = mythread . get_pthread ( )		976697	0					
ANR	976725	IdentifierDeclType	pthread_t		976697	0					
ANR	976726	Identifier	thread		976697	1					
ANR	976727	AssignmentExpression	thread = mythread . get_pthread ( )		976697	2		=			
ANR	976728	Identifier	thread		976697	0					
ANR	976729	CallExpression	mythread . get_pthread ( )		976697	1					
ANR	976730	Callee	mythread . get_pthread		976697	0					
ANR	976731	MemberAccess	mythread . get_pthread		976697	0					
ANR	976732	Identifier	mythread		976697	0					
ANR	976733	Identifier	get_pthread		976697	1					
ANR	976734	ArgumentList			976697	1					
ANR	976735	IdentifierDeclStatement	unsigned int * buf = ( unsigned int * ) & thread ;	484:1:12729:12772	976697	4	True				
ANR	976736	IdentifierDecl	* buf = ( unsigned int * ) & thread		976697	0					
ANR	976737	IdentifierDeclType	unsigned int *		976697	0					
ANR	976738	Identifier	buf		976697	1					
ANR	976739	AssignmentExpression	* buf = ( unsigned int * ) & thread		976697	2		=			
ANR	976740	Identifier	buf		976697	0					
ANR	976741	CastExpression	( unsigned int * ) & thread		976697	1					
ANR	976742	CastTarget	unsigned int *		976697	0					
ANR	976743	UnaryOperationExpression	& thread		976697	1					
ANR	976744	UnaryOperator	&		976697	0					
ANR	976745	Identifier	thread		976697	1					
ANR	976746	WhileStatement	while ( j >= sizeof ( unsigned int ) )		976697	5					
ANR	976747	Condition	j >= sizeof ( unsigned int )	488:8:12825:12849	976697	0	True				
ANR	976748	RelationalExpression	j >= sizeof ( unsigned int )		976697	0		>=			
ANR	976749	Identifier	j		976697	0					
ANR	976750	SizeofExpression	sizeof ( unsigned int )		976697	1					
ANR	976751	Sizeof	sizeof		976697	0					
ANR	976752	SizeofOperand	unsigned int		976697	1					
ANR	976753	CompoundStatement		15:36:509:509	976697	1					
ANR	976754	ExpressionStatement	hash += buf [ i ]	489:2:12857:12871	976697	0	True				
ANR	976755	AssignmentExpression	hash += buf [ i ]		976697	0		+=			
ANR	976756	Identifier	hash		976697	0					
ANR	976757	ArrayIndexing	buf [ i ]		976697	1					
ANR	976758	Identifier	buf		976697	0					
ANR	976759	Identifier	i		976697	1					
ANR	976760	ExpressionStatement	i ++	490:2:12875:12878	976697	1	True				
ANR	976761	PostIncDecOperationExpression	i ++		976697	0					
ANR	976762	Identifier	i		976697	0					
ANR	976763	IncDec	++		976697	1					
ANR	976764	ExpressionStatement	j -= sizeof ( unsigned int )	491:2:12882:12907	976697	2	True				
ANR	976765	AssignmentExpression	j -= sizeof ( unsigned int )		976697	0		-=			
ANR	976766	Identifier	j		976697	0					
ANR	976767	SizeofExpression	sizeof ( unsigned int )		976697	1					
ANR	976768	Sizeof	sizeof		976697	0					
ANR	976769	SizeofOperand	unsigned int		976697	1					
ANR	976770	IdentifierDeclStatement	unsigned char * n = ( unsigned char * ) & buf [ i ] ;	495:1:12954:12998	976697	6	True				
ANR	976771	IdentifierDecl	* n = ( unsigned char * ) & buf [ i ]		976697	0					
ANR	976772	IdentifierDeclType	unsigned char *		976697	0					
ANR	976773	Identifier	n		976697	1					
ANR	976774	AssignmentExpression	* n = ( unsigned char * ) & buf [ i ]		976697	2		=			
ANR	976775	Identifier	n		976697	0					
ANR	976776	CastExpression	( unsigned char * ) & buf [ i ]		976697	1					
ANR	976777	CastTarget	unsigned char *		976697	0					
ANR	976778	UnaryOperationExpression	& buf [ i ]		976697	1					
ANR	976779	UnaryOperator	&		976697	0					
ANR	976780	ArrayIndexing	buf [ i ]		976697	1					
ANR	976781	Identifier	buf		976697	0					
ANR	976782	Identifier	i		976697	1					
ANR	976783	ForStatement	"for ( i = 0 ; j > 0 ; j -- , i ++ )"		976697	7					
ANR	976784	ForInit	i = 0 ;	496:6:13006:13009	976697	0	True				
ANR	976785	AssignmentExpression	i = 0		976697	0		=			
ANR	976786	Identifier	i		976697	0					
ANR	976787	PrimaryExpression	0		976697	1					
ANR	976788	Condition	j > 0	496:12:13012:13016	976697	1	True				
ANR	976789	RelationalExpression	j > 0		976697	0		>			
ANR	976790	Identifier	j		976697	0					
ANR	976791	PrimaryExpression	0		976697	1					
ANR	976792	Expression	"j -- , i ++"	496:19:13019:13026	976697	2	True				
ANR	976793	PostIncDecOperationExpression	j --		976697	0					
ANR	976794	Identifier	j		976697	0					
ANR	976795	IncDec	--		976697	1					
ANR	976796	PostIncDecOperationExpression	i ++		976697	1					
ANR	976797	Identifier	i		976697	0					
ANR	976798	IncDec	++		976697	1					
ANR	976799	CompoundStatement		23:30:686:686	976697	3					
ANR	976800	ExpressionStatement	hash += n [ i ]	497:2:13034:13046	976697	0	True				
ANR	976801	AssignmentExpression	hash += n [ i ]		976697	0		+=			
ANR	976802	Identifier	hash		976697	0					
ANR	976803	ArrayIndexing	n [ i ]		976697	1					
ANR	976804	Identifier	n		976697	0					
ANR	976805	Identifier	i		976697	1					
ANR	976806	ReturnStatement	return hash ;	500:1:13053:13064	976697	8	True				
ANR	976807	Identifier	hash		976697	0					
ANR	976808	ReturnType	unsigned int		976697	1					
ANR	976809	Identifier	ThreadImplementation :: hashFuncThreadInfo		976697	2					
ANR	976810	ParameterList	const ThreadInfo & mythread		976697	3					
ANR	976811	Parameter	const ThreadInfo & mythread	473:41:12314:12340	976697	0	True				
ANR	976812	ParameterType	const ThreadInfo &		976697	0					
ANR	976813	Identifier	mythread		976697	1					
ANR	976814	CFGEntryNode	ENTRY		976697		True				
ANR	976815	CFGExitNode	EXIT		976697		True				
ANR	976816	Symbol	& thread		976697						
ANR	976817	Symbol	buf		976697						
ANR	976818	Symbol	* buf		976697						
ANR	976819	Symbol	* i		976697						
ANR	976820	Symbol	mythread		976697						
ANR	976821	Symbol	mythread . get_pthread		976697						
ANR	976822	Symbol	* n		976697						
ANR	976823	Symbol	i		976697						
ANR	976824	Symbol	j		976697						
ANR	976825	Symbol	thread		976697						
ANR	976826	Symbol	hash		976697						
ANR	976827	Symbol	n		976697						
ANR	976828	Function	ThreadImplementation :: yield	504:0:13070:13417							
ANR	976829	FunctionDef	ThreadImplementation :: yield ()		976828	0					
ANR	976830	CompoundStatement		506:0:13104:13417	976828	0					
ANR	976831	IfStatement	if ( get_handle ( ) -> status_ == WorkerThread :: THREAD_RUNNING )		976828	0					
ANR	976832	Condition	get_handle ( ) -> status_ == WorkerThread :: THREAD_RUNNING	508:6:13140:13192	976828	0	True				
ANR	976833	EqualityExpression	get_handle ( ) -> status_ == WorkerThread :: THREAD_RUNNING		976828	0		==			
ANR	976834	PtrMemberAccess	get_handle ( ) -> status_		976828	0					
ANR	976835	CallExpression	get_handle ( )		976828	0					
ANR	976836	Callee	get_handle		976828	0					
ANR	976837	Identifier	get_handle		976828	0					
ANR	976838	ArgumentList			976828	1					
ANR	976839	Identifier	status_		976828	1					
ANR	976840	Identifier	WorkerThread :: THREAD_RUNNING		976828	1					
ANR	976841	CompoundStatement		3:62:91:91	976828	1					
ANR	976842	ExpressionStatement	get_handle ( ) -> set_status ( WorkerThread :: THREAD_READY )	509:2:13200:13254	976828	0	True				
ANR	976843	CallExpression	get_handle ( ) -> set_status ( WorkerThread :: THREAD_READY )		976828	0					
ANR	976844	Callee	get_handle ( ) -> set_status		976828	0					
ANR	976845	PtrMemberAccess	get_handle ( ) -> set_status		976828	0					
ANR	976846	CallExpression	get_handle ( )		976828	0					
ANR	976847	Callee	get_handle		976828	0					
ANR	976848	Identifier	get_handle		976828	0					
ANR	976849	ArgumentList			976828	1					
ANR	976850	Identifier	set_status		976828	1					
ANR	976851	ArgumentList	WorkerThread :: THREAD_READY		976828	1					
ANR	976852	Argument	WorkerThread :: THREAD_READY		976828	0					
ANR	976853	Identifier	WorkerThread :: THREAD_READY		976828	0					
ANR	976854	ExpressionStatement	mutex_biglock_unlock ( )	511:1:13260:13282	976828	1	True				
ANR	976855	CallExpression	mutex_biglock_unlock ( )		976828	0					
ANR	976856	Callee	mutex_biglock_unlock		976828	0					
ANR	976857	Identifier	mutex_biglock_unlock		976828	0					
ANR	976858	ArgumentList			976828	1					
ANR	976859	ExpressionStatement	mutex_biglock_lock ( )	514:1:13324:13344	976828	2	True				
ANR	976860	CallExpression	mutex_biglock_lock ( )		976828	0					
ANR	976861	Callee	mutex_biglock_lock		976828	0					
ANR	976862	Identifier	mutex_biglock_lock		976828	0					
ANR	976863	ArgumentList			976828	1					
ANR	976864	ExpressionStatement	get_handle ( ) -> set_status ( WorkerThread :: THREAD_RUNNING )	515:1:13347:13403	976828	3	True				
ANR	976865	CallExpression	get_handle ( ) -> set_status ( WorkerThread :: THREAD_RUNNING )		976828	0					
ANR	976866	Callee	get_handle ( ) -> set_status		976828	0					
ANR	976867	PtrMemberAccess	get_handle ( ) -> set_status		976828	0					
ANR	976868	CallExpression	get_handle ( )		976828	0					
ANR	976869	Callee	get_handle		976828	0					
ANR	976870	Identifier	get_handle		976828	0					
ANR	976871	ArgumentList			976828	1					
ANR	976872	Identifier	set_status		976828	1					
ANR	976873	ArgumentList	WorkerThread :: THREAD_RUNNING		976828	1					
ANR	976874	Argument	WorkerThread :: THREAD_RUNNING		976828	0					
ANR	976875	Identifier	WorkerThread :: THREAD_RUNNING		976828	0					
ANR	976876	ReturnStatement	return 0 ;	517:1:13407:13415	976828	4	True				
ANR	976877	PrimaryExpression	0		976828	0					
ANR	976878	ReturnType	int		976828	1					
ANR	976879	Identifier	ThreadImplementation :: yield		976828	2					
ANR	976880	ParameterList			976828	3					
ANR	976881	CFGEntryNode	ENTRY		976828		True				
ANR	976882	CFGExitNode	EXIT		976828		True				
ANR	976883	Symbol	WorkerThread :: THREAD_READY		976828						
ANR	976884	Symbol	* get_handle		976828						
ANR	976885	Symbol	WorkerThread :: THREAD_RUNNING		976828						
ANR	976886	Symbol	get_handle		976828						
ANR	976887	Symbol	get_handle ( ) -> status_		976828						
ANR	976888	Function	ThreadImplementation :: mutex_biglock_lock	520:11:13431:13818							
ANR	976889	FunctionDef	ThreadImplementation :: mutex_biglock_lock ()		976888	0					
ANR	976890	CompoundStatement		522:0:13479:13818	976888	0					
ANR	976891	IfStatement	if ( ! TI )		976888	0					
ANR	976892	Condition	! TI	526:5:13596:13599	976888	0	True				
ANR	976893	UnaryOperationExpression	! TI		976888	0					
ANR	976894	UnaryOperator	!		976888	0					
ANR	976895	Identifier	TI		976888	1					
ANR	976896	ReturnStatement	return ;	526:12:13603:13609	976888	1	True				
ANR	976897	ExpressionStatement	pthread_mutex_lock ( & ( TI -> big_lock ) )	531:1:13779:13814	976888	1	True				
ANR	976898	CallExpression	pthread_mutex_lock ( & ( TI -> big_lock ) )		976888	0					
ANR	976899	Callee	pthread_mutex_lock		976888	0					
ANR	976900	Identifier	pthread_mutex_lock		976888	0					
ANR	976901	ArgumentList	& ( TI -> big_lock )		976888	1					
ANR	976902	Argument	& ( TI -> big_lock )		976888	0					
ANR	976903	UnaryOperationExpression	& ( TI -> big_lock )		976888	0					
ANR	976904	UnaryOperator	&		976888	0					
ANR	976905	PtrMemberAccess	TI -> big_lock		976888	1					
ANR	976906	Identifier	TI		976888	0					
ANR	976907	Identifier	big_lock		976888	1					
ANR	976908	ReturnType	void		976888	1					
ANR	976909	Identifier	ThreadImplementation :: mutex_biglock_lock		976888	2					
ANR	976910	ParameterList			976888	3					
ANR	976911	CFGEntryNode	ENTRY		976888		True				
ANR	976912	CFGExitNode	EXIT		976888		True				
ANR	976913	Symbol	& TI -> big_lock		976888						
ANR	976914	Symbol	TI		976888						
ANR	976915	Function	ThreadImplementation :: mutex_biglock_unlock	535:11:13832:14223							
ANR	976916	FunctionDef	ThreadImplementation :: mutex_biglock_unlock ()		976915	0					
ANR	976917	CompoundStatement		537:0:13882:14223	976915	0					
ANR	976918	IfStatement	if ( ! TI )		976915	0					
ANR	976919	Condition	! TI	541:5:14000:14003	976915	0	True				
ANR	976920	UnaryOperationExpression	! TI		976915	0					
ANR	976921	UnaryOperator	!		976915	0					
ANR	976922	Identifier	TI		976915	1					
ANR	976923	ReturnStatement	return ;	541:12:14007:14013	976915	1	True				
ANR	976924	ExpressionStatement	pthread_mutex_unlock ( & ( TI -> big_lock ) )	546:1:14183:14220	976915	1	True				
ANR	976925	CallExpression	pthread_mutex_unlock ( & ( TI -> big_lock ) )		976915	0					
ANR	976926	Callee	pthread_mutex_unlock		976915	0					
ANR	976927	Identifier	pthread_mutex_unlock		976915	0					
ANR	976928	ArgumentList	& ( TI -> big_lock )		976915	1					
ANR	976929	Argument	& ( TI -> big_lock )		976915	0					
ANR	976930	UnaryOperationExpression	& ( TI -> big_lock )		976915	0					
ANR	976931	UnaryOperator	&		976915	0					
ANR	976932	PtrMemberAccess	TI -> big_lock		976915	1					
ANR	976933	Identifier	TI		976915	0					
ANR	976934	Identifier	big_lock		976915	1					
ANR	976935	ReturnType	void		976915	1					
ANR	976936	Identifier	ThreadImplementation :: mutex_biglock_unlock		976915	2					
ANR	976937	ParameterList			976915	3					
ANR	976938	CFGEntryNode	ENTRY		976915		True				
ANR	976939	CFGExitNode	EXIT		976915		True				
ANR	976940	Symbol	& TI -> big_lock		976915						
ANR	976941	Symbol	TI		976915						
ANR	976942	Function	ThreadImplementation :: mutex_handle_lock	549:11:14237:14648							
ANR	976943	FunctionDef	ThreadImplementation :: mutex_handle_lock ()		976942	0					
ANR	976944	CompoundStatement		551:0:14284:14648	976942	0					
ANR	976945	IfStatement	if ( TI )		976942	0					
ANR	976946	Condition	TI	558:6:14595:14596	976942	0	True				
ANR	976947	Identifier	TI		976942	0					
ANR	976948	ExpressionStatement	pthread_mutex_lock ( & ( TI -> get_handle_lock ) )	559:2:14603:14645	976942	1	True				
ANR	976949	CallExpression	pthread_mutex_lock ( & ( TI -> get_handle_lock ) )		976942	0					
ANR	976950	Callee	pthread_mutex_lock		976942	0					
ANR	976951	Identifier	pthread_mutex_lock		976942	0					
ANR	976952	ArgumentList	& ( TI -> get_handle_lock )		976942	1					
ANR	976953	Argument	& ( TI -> get_handle_lock )		976942	0					
ANR	976954	UnaryOperationExpression	& ( TI -> get_handle_lock )		976942	0					
ANR	976955	UnaryOperator	&		976942	0					
ANR	976956	PtrMemberAccess	TI -> get_handle_lock		976942	1					
ANR	976957	Identifier	TI		976942	0					
ANR	976958	Identifier	get_handle_lock		976942	1					
ANR	976959	ReturnType	void		976942	1					
ANR	976960	Identifier	ThreadImplementation :: mutex_handle_lock		976942	2					
ANR	976961	ParameterList			976942	3					
ANR	976962	CFGEntryNode	ENTRY		976942		True				
ANR	976963	CFGExitNode	EXIT		976942		True				
ANR	976964	Symbol	TI		976942						
ANR	976965	Symbol	& TI -> get_handle_lock		976942						
ANR	976966	Function	ThreadImplementation :: mutex_handle_unlock	562:11:14662:15077							
ANR	976967	FunctionDef	ThreadImplementation :: mutex_handle_unlock ()		976966	0					
ANR	976968	CompoundStatement		564:0:14711:15077	976966	0					
ANR	976969	IfStatement	if ( TI )		976966	0					
ANR	976970	Condition	TI	571:6:15022:15023	976966	0	True				
ANR	976971	Identifier	TI		976966	0					
ANR	976972	ExpressionStatement	pthread_mutex_unlock ( & ( TI -> get_handle_lock ) )	572:2:15030:15074	976966	1	True				
ANR	976973	CallExpression	pthread_mutex_unlock ( & ( TI -> get_handle_lock ) )		976966	0					
ANR	976974	Callee	pthread_mutex_unlock		976966	0					
ANR	976975	Identifier	pthread_mutex_unlock		976966	0					
ANR	976976	ArgumentList	& ( TI -> get_handle_lock )		976966	1					
ANR	976977	Argument	& ( TI -> get_handle_lock )		976966	0					
ANR	976978	UnaryOperationExpression	& ( TI -> get_handle_lock )		976966	0					
ANR	976979	UnaryOperator	&		976966	0					
ANR	976980	PtrMemberAccess	TI -> get_handle_lock		976966	1					
ANR	976981	Identifier	TI		976966	0					
ANR	976982	Identifier	get_handle_lock		976966	1					
ANR	976983	ReturnType	void		976966	1					
ANR	976984	Identifier	ThreadImplementation :: mutex_handle_unlock		976966	2					
ANR	976985	ParameterList			976966	3					
ANR	976986	CFGEntryNode	ENTRY		976966		True				
ANR	976987	CFGExitNode	EXIT		976966		True				
ANR	976988	Symbol	TI		976966						
ANR	976989	Symbol	& TI -> get_handle_lock		976966						
ANR	976990	Function	ThreadImplementation :: pool_add	575:0:15080:16646							
ANR	976991	FunctionDef	"ThreadImplementation :: pool_add (condor_thread_func_t routine , void * arg , int * pTid , const char * pDescrip)"		976990	0					
ANR	976992	CompoundStatement		578:0:15191:16646	976990	0					
ANR	976993	ExpressionStatement	"dprintf ( D_THREADS , ""Queing work to thread pool - w=%d tbusy=%d tmax=%d\\n"" , work_queue . Length ( ) , num_threads_busy_ , num_threads_ )"	583:1:15350:15478	976990	0	True				
ANR	976994	CallExpression	"dprintf ( D_THREADS , ""Queing work to thread pool - w=%d tbusy=%d tmax=%d\\n"" , work_queue . Length ( ) , num_threads_busy_ , num_threads_ )"		976990	0					
ANR	976995	Callee	dprintf		976990	0					
ANR	976996	Identifier	dprintf		976990	0					
ANR	976997	ArgumentList	D_THREADS		976990	1					
ANR	976998	Argument	D_THREADS		976990	0					
ANR	976999	Identifier	D_THREADS		976990	0					
ANR	977000	Argument	"""Queing work to thread pool - w=%d tbusy=%d tmax=%d\\n"""		976990	1					
ANR	977001	PrimaryExpression	"""Queing work to thread pool - w=%d tbusy=%d tmax=%d\\n"""		976990	0					
ANR	977002	Argument	work_queue . Length ( )		976990	2					
ANR	977003	CallExpression	work_queue . Length ( )		976990	0					
ANR	977004	Callee	work_queue . Length		976990	0					
ANR	977005	MemberAccess	work_queue . Length		976990	0					
ANR	977006	Identifier	work_queue		976990	0					
ANR	977007	Identifier	Length		976990	1					
ANR	977008	ArgumentList			976990	1					
ANR	977009	Argument	num_threads_busy_		976990	3					
ANR	977010	Identifier	num_threads_busy_		976990	0					
ANR	977011	Argument	num_threads_		976990	4					
ANR	977012	Identifier	num_threads_		976990	0					
ANR	977013	WhileStatement	while ( num_threads_busy_ >= num_threads_ )		976990	1					
ANR	977014	Condition	num_threads_busy_ >= num_threads_	585:9:15489:15521	976990	0	True				
ANR	977015	RelationalExpression	num_threads_busy_ >= num_threads_		976990	0		>=			
ANR	977016	Identifier	num_threads_busy_		976990	0					
ANR	977017	Identifier	num_threads_		976990	1					
ANR	977018	CompoundStatement		8:45:333:333	976990	1					
ANR	977019	ExpressionStatement	"dprintf ( D_ALWAYS , ""WARNING: thread pool full - w=%d tbusy=%d tmax=%d\\n"" , work_queue . Length ( ) , num_threads_busy_ , num_threads_ )"	586:2:15529:15655	976990	0	True				
ANR	977020	CallExpression	"dprintf ( D_ALWAYS , ""WARNING: thread pool full - w=%d tbusy=%d tmax=%d\\n"" , work_queue . Length ( ) , num_threads_busy_ , num_threads_ )"		976990	0					
ANR	977021	Callee	dprintf		976990	0					
ANR	977022	Identifier	dprintf		976990	0					
ANR	977023	ArgumentList	D_ALWAYS		976990	1					
ANR	977024	Argument	D_ALWAYS		976990	0					
ANR	977025	Identifier	D_ALWAYS		976990	0					
ANR	977026	Argument	"""WARNING: thread pool full - w=%d tbusy=%d tmax=%d\\n"""		976990	1					
ANR	977027	PrimaryExpression	"""WARNING: thread pool full - w=%d tbusy=%d tmax=%d\\n"""		976990	0					
ANR	977028	Argument	work_queue . Length ( )		976990	2					
ANR	977029	CallExpression	work_queue . Length ( )		976990	0					
ANR	977030	Callee	work_queue . Length		976990	0					
ANR	977031	MemberAccess	work_queue . Length		976990	0					
ANR	977032	Identifier	work_queue		976990	0					
ANR	977033	Identifier	Length		976990	1					
ANR	977034	ArgumentList			976990	1					
ANR	977035	Argument	num_threads_busy_		976990	3					
ANR	977036	Identifier	num_threads_busy_		976990	0					
ANR	977037	Argument	num_threads_		976990	4					
ANR	977038	Identifier	num_threads_		976990	0					
ANR	977039	ExpressionStatement	"pthread_cond_wait ( & workers_avail_cond , & big_lock )"	588:2:15659:15707	976990	1	True				
ANR	977040	CallExpression	"pthread_cond_wait ( & workers_avail_cond , & big_lock )"		976990	0					
ANR	977041	Callee	pthread_cond_wait		976990	0					
ANR	977042	Identifier	pthread_cond_wait		976990	0					
ANR	977043	ArgumentList	& workers_avail_cond		976990	1					
ANR	977044	Argument	& workers_avail_cond		976990	0					
ANR	977045	UnaryOperationExpression	& workers_avail_cond		976990	0					
ANR	977046	UnaryOperator	&		976990	0					
ANR	977047	Identifier	workers_avail_cond		976990	1					
ANR	977048	Argument	& big_lock		976990	1					
ANR	977049	UnaryOperationExpression	& big_lock		976990	0					
ANR	977050	UnaryOperator	&		976990	0					
ANR	977051	Identifier	big_lock		976990	1					
ANR	977052	IdentifierDeclStatement	"WorkerThreadPtr_t newthread = WorkerThread :: create ( pDescrip ? pDescrip : ""Unnamed"" , routine , arg ) ;"	592:1:15715:15813	976990	2	True				
ANR	977053	IdentifierDecl	"newthread = WorkerThread :: create ( pDescrip ? pDescrip : ""Unnamed"" , routine , arg )"		976990	0					
ANR	977054	IdentifierDeclType	WorkerThreadPtr_t		976990	0					
ANR	977055	Identifier	newthread		976990	1					
ANR	977056	AssignmentExpression	"newthread = WorkerThread :: create ( pDescrip ? pDescrip : ""Unnamed"" , routine , arg )"		976990	2		=			
ANR	977057	Identifier	newthread		976990	0					
ANR	977058	CallExpression	"WorkerThread :: create ( pDescrip ? pDescrip : ""Unnamed"" , routine , arg )"		976990	1					
ANR	977059	Callee	WorkerThread :: create		976990	0					
ANR	977060	Identifier	WorkerThread :: create		976990	0					
ANR	977061	ArgumentList	"pDescrip ? pDescrip : ""Unnamed"""		976990	1					
ANR	977062	Argument	"pDescrip ? pDescrip : ""Unnamed"""		976990	0					
ANR	977063	ConditionalExpression	"pDescrip ? pDescrip : ""Unnamed"""		976990	0					
ANR	977064	Condition	pDescrip		976990	0					
ANR	977065	Identifier	pDescrip		976990	0					
ANR	977066	Identifier	pDescrip		976990	1					
ANR	977067	PrimaryExpression	"""Unnamed"""		976990	2					
ANR	977068	Argument	routine		976990	1					
ANR	977069	Identifier	routine		976990	0					
ANR	977070	Argument	arg		976990	2					
ANR	977071	Identifier	arg		976990	0					
ANR	977072	ExpressionStatement	mutex_handle_lock ( )	596:1:15868:15887	976990	3	True				
ANR	977073	CallExpression	mutex_handle_lock ( )		976990	0					
ANR	977074	Callee	mutex_handle_lock		976990	0					
ANR	977075	Identifier	mutex_handle_lock		976990	0					
ANR	977076	ArgumentList			976990	1					
ANR	977077	DoStatement	do		976990	4					
ANR	977078	CompoundStatement		20:4:701:701	976990	0					
ANR	977079	ExpressionStatement	next_tid_ ++	598:2:15897:15908	976990	0	True				
ANR	977080	PostIncDecOperationExpression	next_tid_ ++		976990	0					
ANR	977081	Identifier	next_tid_		976990	0					
ANR	977082	IncDec	++		976990	1					
ANR	977083	IfStatement	if ( next_tid_ == 1 )		976990	1					
ANR	977084	Condition	next_tid_ == 1	599:7:15917:15930	976990	0	True				
ANR	977085	EqualityExpression	next_tid_ == 1		976990	0		==			
ANR	977086	Identifier	next_tid_		976990	0					
ANR	977087	PrimaryExpression	1		976990	1					
ANR	977088	ExpressionStatement	next_tid_ ++	599:24:15934:15945	976990	1	True				
ANR	977089	PostIncDecOperationExpression	next_tid_ ++		976990	0					
ANR	977090	Identifier	next_tid_		976990	0					
ANR	977091	IncDec	++		976990	1					
ANR	977092	IfStatement	if ( next_tid_ == INT_MAX )		976990	2					
ANR	977093	Condition	next_tid_ == INT_MAX	600:7:15982:16001	976990	0	True				
ANR	977094	EqualityExpression	next_tid_ == INT_MAX		976990	0		==			
ANR	977095	Identifier	next_tid_		976990	0					
ANR	977096	Identifier	INT_MAX		976990	1					
ANR	977097	ExpressionStatement	next_tid_ = 2	600:30:16005:16018	976990	1	True				
ANR	977098	AssignmentExpression	next_tid_ = 2		976990	0		=			
ANR	977099	Identifier	next_tid_		976990	0					
ANR	977100	PrimaryExpression	2		976990	1					
ANR	977101	Condition	hashTidToWorker . exists ( next_tid_ ) == 0	601:11:16046:16083	976990	1	True				
ANR	977102	EqualityExpression	hashTidToWorker . exists ( next_tid_ ) == 0		976990	0		==			
ANR	977103	CallExpression	hashTidToWorker . exists ( next_tid_ )		976990	0					
ANR	977104	Callee	hashTidToWorker . exists		976990	0					
ANR	977105	MemberAccess	hashTidToWorker . exists		976990	0					
ANR	977106	Identifier	hashTidToWorker		976990	0					
ANR	977107	Identifier	exists		976990	1					
ANR	977108	ArgumentList	next_tid_		976990	1					
ANR	977109	Argument	next_tid_		976990	0					
ANR	977110	Identifier	next_tid_		976990	0					
ANR	977111	PrimaryExpression	0		976990	1					
ANR	977112	IdentifierDeclStatement	int mytid = next_tid_ ;	602:1:16090:16111	976990	5	True				
ANR	977113	IdentifierDecl	mytid = next_tid_		976990	0					
ANR	977114	IdentifierDeclType	int		976990	0					
ANR	977115	Identifier	mytid		976990	1					
ANR	977116	AssignmentExpression	mytid = next_tid_		976990	2		=			
ANR	977117	Identifier	next_tid_		976990	0					
ANR	977118	Identifier	next_tid_		976990	1					
ANR	977119	ExpressionStatement	"hashTidToWorker . insert ( mytid , newthread )"	603:1:16114:16153	976990	6	True				
ANR	977120	CallExpression	"hashTidToWorker . insert ( mytid , newthread )"		976990	0					
ANR	977121	Callee	hashTidToWorker . insert		976990	0					
ANR	977122	MemberAccess	hashTidToWorker . insert		976990	0					
ANR	977123	Identifier	hashTidToWorker		976990	0					
ANR	977124	Identifier	insert		976990	1					
ANR	977125	ArgumentList	mytid		976990	1					
ANR	977126	Argument	mytid		976990	0					
ANR	977127	Identifier	mytid		976990	0					
ANR	977128	Argument	newthread		976990	1					
ANR	977129	Identifier	newthread		976990	0					
ANR	977130	ExpressionStatement	mutex_handle_unlock ( )	604:1:16156:16177	976990	7	True				
ANR	977131	CallExpression	mutex_handle_unlock ( )		976990	0					
ANR	977132	Callee	mutex_handle_unlock		976990	0					
ANR	977133	Identifier	mutex_handle_unlock		976990	0					
ANR	977134	ArgumentList			976990	1					
ANR	977135	ExpressionStatement	newthread -> tid_ = mytid	606:1:16182:16205	976990	8	True				
ANR	977136	AssignmentExpression	newthread -> tid_ = mytid		976990	0		=			
ANR	977137	PtrMemberAccess	newthread -> tid_		976990	0					
ANR	977138	Identifier	newthread		976990	0					
ANR	977139	Identifier	tid_		976990	1					
ANR	977140	Identifier	mytid		976990	1					
ANR	977141	IfStatement	if ( pTid )		976990	9					
ANR	977142	Condition	pTid	607:5:16212:16215	976990	0	True				
ANR	977143	Identifier	pTid		976990	0					
ANR	977144	CompoundStatement		30:11:1026:1026	976990	1					
ANR	977145	ExpressionStatement	* pTid = mytid	608:2:16222:16235	976990	0	True				
ANR	977146	AssignmentExpression	* pTid = mytid		976990	0		=			
ANR	977147	UnaryOperationExpression	* pTid		976990	0					
ANR	977148	UnaryOperator	*		976990	0					
ANR	977149	Identifier	pTid		976990	1					
ANR	977150	Identifier	mytid		976990	1					
ANR	977151	ExpressionStatement	work_queue . enqueue ( newthread )	612:1:16264:16293	976990	10	True				
ANR	977152	CallExpression	work_queue . enqueue ( newthread )		976990	0					
ANR	977153	Callee	work_queue . enqueue		976990	0					
ANR	977154	MemberAccess	work_queue . enqueue		976990	0					
ANR	977155	Identifier	work_queue		976990	0					
ANR	977156	Identifier	enqueue		976990	1					
ANR	977157	ArgumentList	newthread		976990	1					
ANR	977158	Argument	newthread		976990	0					
ANR	977159	Identifier	newthread		976990	0					
ANR	977160	ExpressionStatement	"dprintf ( D_THREADS , ""Thread %s tid=%d status set to %s\\n"" , newthread -> get_name ( ) , newthread -> get_tid ( ) , newthread -> get_status_string ( newthread -> get_status ( ) ) )"	614:1:16297:16458	976990	11	True				
ANR	977161	CallExpression	"dprintf ( D_THREADS , ""Thread %s tid=%d status set to %s\\n"" , newthread -> get_name ( ) , newthread -> get_tid ( ) , newthread -> get_status_string ( newthread -> get_status ( ) ) )"		976990	0					
ANR	977162	Callee	dprintf		976990	0					
ANR	977163	Identifier	dprintf		976990	0					
ANR	977164	ArgumentList	D_THREADS		976990	1					
ANR	977165	Argument	D_THREADS		976990	0					
ANR	977166	Identifier	D_THREADS		976990	0					
ANR	977167	Argument	"""Thread %s tid=%d status set to %s\\n"""		976990	1					
ANR	977168	PrimaryExpression	"""Thread %s tid=%d status set to %s\\n"""		976990	0					
ANR	977169	Argument	newthread -> get_name ( )		976990	2					
ANR	977170	CallExpression	newthread -> get_name ( )		976990	0					
ANR	977171	Callee	newthread -> get_name		976990	0					
ANR	977172	PtrMemberAccess	newthread -> get_name		976990	0					
ANR	977173	Identifier	newthread		976990	0					
ANR	977174	Identifier	get_name		976990	1					
ANR	977175	ArgumentList			976990	1					
ANR	977176	Argument	newthread -> get_tid ( )		976990	3					
ANR	977177	CallExpression	newthread -> get_tid ( )		976990	0					
ANR	977178	Callee	newthread -> get_tid		976990	0					
ANR	977179	PtrMemberAccess	newthread -> get_tid		976990	0					
ANR	977180	Identifier	newthread		976990	0					
ANR	977181	Identifier	get_tid		976990	1					
ANR	977182	ArgumentList			976990	1					
ANR	977183	Argument	newthread -> get_status_string ( newthread -> get_status ( ) )		976990	4					
ANR	977184	CallExpression	newthread -> get_status_string ( newthread -> get_status ( ) )		976990	0					
ANR	977185	Callee	newthread -> get_status_string		976990	0					
ANR	977186	PtrMemberAccess	newthread -> get_status_string		976990	0					
ANR	977187	Identifier	newthread		976990	0					
ANR	977188	Identifier	get_status_string		976990	1					
ANR	977189	ArgumentList	newthread -> get_status ( )		976990	1					
ANR	977190	Argument	newthread -> get_status ( )		976990	0					
ANR	977191	CallExpression	newthread -> get_status ( )		976990	0					
ANR	977192	Callee	newthread -> get_status		976990	0					
ANR	977193	PtrMemberAccess	newthread -> get_status		976990	0					
ANR	977194	Identifier	newthread		976990	0					
ANR	977195	Identifier	get_status		976990	1					
ANR	977196	ArgumentList			976990	1					
ANR	977197	IfStatement	if ( work_queue . Length ( ) == 1 )		976990	12					
ANR	977198	Condition	work_queue . Length ( ) == 1	620:6:16542:16565	976990	0	True				
ANR	977199	EqualityExpression	work_queue . Length ( ) == 1		976990	0		==			
ANR	977200	CallExpression	work_queue . Length ( )		976990	0					
ANR	977201	Callee	work_queue . Length		976990	0					
ANR	977202	MemberAccess	work_queue . Length		976990	0					
ANR	977203	Identifier	work_queue		976990	0					
ANR	977204	Identifier	Length		976990	1					
ANR	977205	ArgumentList			976990	1					
ANR	977206	PrimaryExpression	1		976990	1					
ANR	977207	CompoundStatement		43:33:1377:1377	976990	1					
ANR	977208	ExpressionStatement	pthread_cond_broadcast ( & work_queue_cond )	621:2:16573:16613	976990	0	True				
ANR	977209	CallExpression	pthread_cond_broadcast ( & work_queue_cond )		976990	0					
ANR	977210	Callee	pthread_cond_broadcast		976990	0					
ANR	977211	Identifier	pthread_cond_broadcast		976990	0					
ANR	977212	ArgumentList	& work_queue_cond		976990	1					
ANR	977213	Argument	& work_queue_cond		976990	0					
ANR	977214	UnaryOperationExpression	& work_queue_cond		976990	0					
ANR	977215	UnaryOperator	&		976990	0					
ANR	977216	Identifier	work_queue_cond		976990	1					
ANR	977217	ExpressionStatement	yield ( )	624:1:16621:16628	976990	13	True				
ANR	977218	CallExpression	yield ( )		976990	0					
ANR	977219	Callee	yield		976990	0					
ANR	977220	Identifier	yield		976990	0					
ANR	977221	ArgumentList			976990	1					
ANR	977222	ReturnStatement	return mytid ;	626:1:16632:16644	976990	14	True				
ANR	977223	Identifier	mytid		976990	0					
ANR	977224	ReturnType	int		976990	1					
ANR	977225	Identifier	ThreadImplementation :: pool_add		976990	2					
ANR	977226	ParameterList	"condor_thread_func_t routine , void * arg , int * pTid , const char * pDescrip"		976990	3					
ANR	977227	Parameter	condor_thread_func_t routine	576:31:15115:15142	976990	0	True				
ANR	977228	ParameterType	condor_thread_func_t		976990	0					
ANR	977229	Identifier	routine		976990	1					
ANR	977230	Parameter	void * arg	576:61:15145:15153	976990	1	True				
ANR	977231	ParameterType	void *		976990	0					
ANR	977232	Identifier	arg		976990	1					
ANR	977233	Parameter	int * pTid	577:2:15158:15166	976990	2	True				
ANR	977234	ParameterType	int *		976990	0					
ANR	977235	Identifier	pTid		976990	1					
ANR	977236	Parameter	const char * pDescrip	577:13:15169:15188	976990	3	True				
ANR	977237	ParameterType	const char *		976990	0					
ANR	977238	Identifier	pDescrip		976990	1					
ANR	977239	CFGEntryNode	ENTRY		976990		True				
ANR	977240	CFGExitNode	EXIT		976990		True				
ANR	977241	Symbol	& big_lock		976990						
ANR	977242	Symbol	newthread -> tid_		976990						
ANR	977243	Symbol	newthread -> get_name		976990						
ANR	977244	Symbol	D_THREADS		976990						
ANR	977245	Symbol	pTid		976990						
ANR	977246	Symbol	newthread -> get_status		976990						
ANR	977247	Symbol	work_queue . Length		976990						
ANR	977248	Symbol	hashTidToWorker		976990						
ANR	977249	Symbol	newthread		976990						
ANR	977250	Symbol	pDescrip		976990						
ANR	977251	Symbol	routine		976990						
ANR	977252	Symbol	& work_queue_cond		976990						
ANR	977253	Symbol	arg		976990						
ANR	977254	Symbol	* pTid		976990						
ANR	977255	Symbol	INT_MAX		976990						
ANR	977256	Symbol	hashTidToWorker . exists		976990						
ANR	977257	Symbol	mytid		976990						
ANR	977258	Symbol	newthread -> get_status_string		976990						
ANR	977259	Symbol	D_ALWAYS		976990						
ANR	977260	Symbol	* newthread		976990						
ANR	977261	Symbol	next_tid_		976990						
ANR	977262	Symbol	num_threads_busy_		976990						
ANR	977263	Symbol	num_threads_		976990						
ANR	977264	Symbol	work_queue		976990						
ANR	977265	Symbol	& workers_avail_cond		976990						
ANR	977266	Symbol	newthread -> get_tid		976990						
ANR	977267	Symbol	WorkerThread :: create		976990						
ANR	977268	Function	ThreadImplementation :: get_handle	629:0:16649:17879							
ANR	977269	FunctionDef	ThreadImplementation :: get_handle (int tid)		977268	0					
ANR	977270	CompoundStatement		631:0:16716:17879	977268	0					
ANR	977271	Statement	static	632:1:16719:16724	977268	0	True				
ANR	977272	IdentifierDeclStatement	bool inserted_main_thread = false ;	632:8:16726:16759	977268	1	True				
ANR	977273	IdentifierDecl	inserted_main_thread = false		977268	0					
ANR	977274	IdentifierDeclType	bool		977268	0					
ANR	977275	Identifier	inserted_main_thread		977268	1					
ANR	977276	AssignmentExpression	inserted_main_thread = false		977268	2		=			
ANR	977277	Identifier	false		977268	0					
ANR	977278	Identifier	false		977268	1					
ANR	977279	Statement	static	633:1:16762:16767	977268	2	True				
ANR	977280	IdentifierDeclStatement	"WorkerThreadPtr_t zombie = WorkerThread :: create ( ""zombie"" , NULL ) ;"	633:8:16769:16831	977268	3	True				
ANR	977281	IdentifierDecl	"zombie = WorkerThread :: create ( ""zombie"" , NULL )"		977268	0					
ANR	977282	IdentifierDeclType	WorkerThreadPtr_t		977268	0					
ANR	977283	Identifier	zombie		977268	1					
ANR	977284	AssignmentExpression	"zombie = WorkerThread :: create ( ""zombie"" , NULL )"		977268	2		=			
ANR	977285	Identifier	zombie		977268	0					
ANR	977286	CallExpression	"WorkerThread :: create ( ""zombie"" , NULL )"		977268	1					
ANR	977287	Callee	WorkerThread :: create		977268	0					
ANR	977288	Identifier	WorkerThread :: create		977268	0					
ANR	977289	ArgumentList	"""zombie"""		977268	1					
ANR	977290	Argument	"""zombie"""		977268	0					
ANR	977291	PrimaryExpression	"""zombie"""		977268	0					
ANR	977292	Argument	NULL		977268	1					
ANR	977293	Identifier	NULL		977268	0					
ANR	977294	IfStatement	if ( ! TI )		977268	4					
ANR	977295	Condition	! TI	635:6:16840:16842	977268	0	True				
ANR	977296	UnaryOperationExpression	! TI		977268	0					
ANR	977297	UnaryOperator	!		977268	0					
ANR	977298	Identifier	TI		977268	1					
ANR	977299	CompoundStatement		5:13:130:130	977268	1					
ANR	977300	ExpressionStatement	tid = 1	636:2:16851:16858	977268	0	True				
ANR	977301	AssignmentExpression	tid = 1		977268	0		=			
ANR	977302	Identifier	tid		977268	0					
ANR	977303	PrimaryExpression	1		977268	1					
ANR	977304	IfStatement	if ( tid == 1 )		977268	5					
ANR	977305	Condition	tid == 1	639:6:16870:16877	977268	0	True				
ANR	977306	EqualityExpression	tid == 1		977268	0		==			
ANR	977307	Identifier	tid		977268	0					
ANR	977308	PrimaryExpression	1		977268	1					
ANR	977309	CompoundStatement		9:17:164:164	977268	1					
ANR	977310	ReturnStatement	return get_main_thread_ptr ( ) ;	640:2:16887:16915	977268	0	True				
ANR	977311	CallExpression	get_main_thread_ptr ( )		977268	0					
ANR	977312	Callee	get_main_thread_ptr		977268	0					
ANR	977313	Identifier	get_main_thread_ptr		977268	0					
ANR	977314	ArgumentList			977268	1					
ANR	977315	IfStatement	if ( tid < 0 )		977268	6					
ANR	977316	Condition	tid < 0	643:6:16927:16933	977268	0	True				
ANR	977317	RelationalExpression	tid < 0		977268	0		<			
ANR	977318	Identifier	tid		977268	0					
ANR	977319	PrimaryExpression	0		977268	1					
ANR	977320	CompoundStatement		13:16:220:220	977268	1					
ANR	977321	ExpressionStatement	tid = 0	644:2:16941:16948	977268	0	True				
ANR	977322	AssignmentExpression	tid = 0		977268	0		=			
ANR	977323	Identifier	tid		977268	0					
ANR	977324	PrimaryExpression	0		977268	1					
ANR	977325	IdentifierDeclStatement	WorkerThreadPtr_t worker ;	647:1:16955:16979	977268	7	True				
ANR	977326	IdentifierDecl	worker		977268	0					
ANR	977327	IdentifierDeclType	WorkerThreadPtr_t		977268	0					
ANR	977328	Identifier	worker		977268	1					
ANR	977329	ExpressionStatement	mutex_handle_lock ( )	649:1:16983:17002	977268	8	True				
ANR	977330	CallExpression	mutex_handle_lock ( )		977268	0					
ANR	977331	Callee	mutex_handle_lock		977268	0					
ANR	977332	Identifier	mutex_handle_lock		977268	0					
ANR	977333	ArgumentList			977268	1					
ANR	977334	IfStatement	if ( tid )		977268	9					
ANR	977335	Condition	tid	651:6:17011:17013	977268	0	True				
ANR	977336	Identifier	tid		977268	0					
ANR	977337	CompoundStatement		21:12:300:300	977268	1					
ANR	977338	ExpressionStatement	"TI -> hashTidToWorker . lookup ( tid , worker )"	652:2:17021:17059	977268	0	True				
ANR	977339	CallExpression	"TI -> hashTidToWorker . lookup ( tid , worker )"		977268	0					
ANR	977340	Callee	TI -> hashTidToWorker . lookup		977268	0					
ANR	977341	MemberAccess	TI -> hashTidToWorker . lookup		977268	0					
ANR	977342	PtrMemberAccess	TI -> hashTidToWorker		977268	0					
ANR	977343	Identifier	TI		977268	0					
ANR	977344	Identifier	hashTidToWorker		977268	1					
ANR	977345	Identifier	lookup		977268	1					
ANR	977346	ArgumentList	tid		977268	1					
ANR	977347	Argument	tid		977268	0					
ANR	977348	Identifier	tid		977268	0					
ANR	977349	Argument	worker		977268	1					
ANR	977350	Identifier	worker		977268	0					
ANR	977351	ElseStatement	else		977268	0					
ANR	977352	CompoundStatement		24:2:356:387	977268	0					
ANR	977353	IdentifierDeclStatement	ThreadInfo ti ( pthread_self ( ) ) ;	654:2:17073:17104	977268	0	True				
ANR	977354	IdentifierDecl	ti ( pthread_self ( ) )		977268	0					
ANR	977355	IdentifierDeclType	ThreadInfo		977268	0					
ANR	977356	Identifier	ti		977268	1					
ANR	977357	CallExpression	pthread_self ( )		977268	2					
ANR	977358	Callee	pthread_self		977268	0					
ANR	977359	Identifier	pthread_self		977268	0					
ANR	977360	ArgumentList			977268	1					
ANR	977361	ExpressionStatement	"TI -> hashThreadToWorker . lookup ( ti , worker )"	655:2:17108:17148	977268	1	True				
ANR	977362	CallExpression	"TI -> hashThreadToWorker . lookup ( ti , worker )"		977268	0					
ANR	977363	Callee	TI -> hashThreadToWorker . lookup		977268	0					
ANR	977364	MemberAccess	TI -> hashThreadToWorker . lookup		977268	0					
ANR	977365	PtrMemberAccess	TI -> hashThreadToWorker		977268	0					
ANR	977366	Identifier	TI		977268	0					
ANR	977367	Identifier	hashThreadToWorker		977268	1					
ANR	977368	Identifier	lookup		977268	1					
ANR	977369	ArgumentList	ti		977268	1					
ANR	977370	Argument	ti		977268	0					
ANR	977371	Identifier	ti		977268	0					
ANR	977372	Argument	worker		977268	1					
ANR	977373	Identifier	worker		977268	0					
ANR	977374	IfStatement	if ( worker . is_null ( ) )		977268	2					
ANR	977375	Condition	worker . is_null ( )	657:7:17158:17173	977268	0	True				
ANR	977376	CallExpression	worker . is_null ( )		977268	0					
ANR	977377	Callee	worker . is_null		977268	0					
ANR	977378	MemberAccess	worker . is_null		977268	0					
ANR	977379	Identifier	worker		977268	0					
ANR	977380	Identifier	is_null		977268	1					
ANR	977381	ArgumentList			977268	1					
ANR	977382	CompoundStatement		27:26:460:460	977268	1					
ANR	977383	IfStatement	if ( inserted_main_thread == false )		977268	0					
ANR	977384	Condition	inserted_main_thread == false	662:8:17399:17427	977268	0	True				
ANR	977385	EqualityExpression	inserted_main_thread == false		977268	0		==			
ANR	977386	Identifier	inserted_main_thread		977268	0					
ANR	977387	Identifier	false		977268	1					
ANR	977388	CompoundStatement		32:40:714:714	977268	1					
ANR	977389	ExpressionStatement	worker = get_main_thread_ptr ( )	663:4:17437:17467	977268	0	True				
ANR	977390	AssignmentExpression	worker = get_main_thread_ptr ( )		977268	0		=			
ANR	977391	Identifier	worker		977268	0					
ANR	977392	CallExpression	get_main_thread_ptr ( )		977268	1					
ANR	977393	Callee	get_main_thread_ptr		977268	0					
ANR	977394	Identifier	get_main_thread_ptr		977268	0					
ANR	977395	ArgumentList			977268	1					
ANR	977396	ExpressionStatement	"TI -> hashThreadToWorker . insert ( ti , worker )"	664:4:17473:17513	977268	1	True				
ANR	977397	CallExpression	"TI -> hashThreadToWorker . insert ( ti , worker )"		977268	0					
ANR	977398	Callee	TI -> hashThreadToWorker . insert		977268	0					
ANR	977399	MemberAccess	TI -> hashThreadToWorker . insert		977268	0					
ANR	977400	PtrMemberAccess	TI -> hashThreadToWorker		977268	0					
ANR	977401	Identifier	TI		977268	0					
ANR	977402	Identifier	hashThreadToWorker		977268	1					
ANR	977403	Identifier	insert		977268	1					
ANR	977404	ArgumentList	ti		977268	1					
ANR	977405	Argument	ti		977268	0					
ANR	977406	Identifier	ti		977268	0					
ANR	977407	Argument	worker		977268	1					
ANR	977408	Identifier	worker		977268	0					
ANR	977409	ExpressionStatement	inserted_main_thread = true	665:4:17519:17546	977268	2	True				
ANR	977410	AssignmentExpression	inserted_main_thread = true		977268	0		=			
ANR	977411	Identifier	inserted_main_thread		977268	0					
ANR	977412	Identifier	true		977268	1					
ANR	977413	ElseStatement	else		977268	0					
ANR	977414	CompoundStatement		36:10:841:841	977268	0					
ANR	977415	ExpressionStatement	worker = zombie	671:4:17808:17823	977268	0	True				
ANR	977416	AssignmentExpression	worker = zombie		977268	0		=			
ANR	977417	Identifier	worker		977268	0					
ANR	977418	Identifier	zombie		977268	1					
ANR	977419	ExpressionStatement	mutex_handle_unlock ( )	676:1:17839:17860	977268	10	True				
ANR	977420	CallExpression	mutex_handle_unlock ( )		977268	0					
ANR	977421	Callee	mutex_handle_unlock		977268	0					
ANR	977422	Identifier	mutex_handle_unlock		977268	0					
ANR	977423	ArgumentList			977268	1					
ANR	977424	ReturnStatement	return worker ;	678:1:17864:17877	977268	11	True				
ANR	977425	Identifier	worker		977268	0					
ANR	977426	ReturnType	const WorkerThreadPtr_t		977268	1					
ANR	977427	Identifier	ThreadImplementation :: get_handle		977268	2					
ANR	977428	ParameterList	int tid		977268	3					
ANR	977429	Parameter	int tid	630:33:16707:16713	977268	0	True				
ANR	977430	ParameterType	int		977268	0					
ANR	977431	Identifier	tid		977268	1					
ANR	977432	CFGEntryNode	ENTRY		977268		True				
ANR	977433	CFGExitNode	EXIT		977268		True				
ANR	977434	Symbol	NULL		977268						
ANR	977435	Symbol	false		977268						
ANR	977436	Symbol	worker . is_null		977268						
ANR	977437	Symbol	TI -> hashTidToWorker		977268						
ANR	977438	Symbol	tid		977268						
ANR	977439	Symbol	inserted_main_thread		977268						
ANR	977440	Symbol	TI		977268						
ANR	977441	Symbol	ti		977268						
ANR	977442	Symbol	get_main_thread_ptr		977268						
ANR	977443	Symbol	zombie		977268						
ANR	977444	Symbol	* TI		977268						
ANR	977445	Symbol	true		977268						
ANR	977446	Symbol	TI -> hashThreadToWorker		977268						
ANR	977447	Symbol	worker		977268						
ANR	977448	Symbol	WorkerThread :: create		977268						
ANR	977449	Function	ThreadImplementation :: set_switch_callback	681:0:17882:17994							
ANR	977450	FunctionDef	ThreadImplementation :: set_switch_callback (condor_thread_switch_callback_t func)		977449	0					
ANR	977451	CompoundStatement		683:0:17967:17994	977449	0					
ANR	977452	ExpressionStatement	switch_callback = func	684:1:17970:17992	977449	0	True				
ANR	977453	AssignmentExpression	switch_callback = func		977449	0		=			
ANR	977454	Identifier	switch_callback		977449	0					
ANR	977455	Identifier	func		977449	1					
ANR	977456	ReturnType	void		977449	1					
ANR	977457	Identifier	ThreadImplementation :: set_switch_callback		977449	2					
ANR	977458	ParameterList	condor_thread_switch_callback_t func		977449	3					
ANR	977459	Parameter	condor_thread_switch_callback_t func	682:42:17929:17964	977449	0	True				
ANR	977460	ParameterType	condor_thread_switch_callback_t		977449	0					
ANR	977461	Identifier	func		977449	1					
ANR	977462	CFGEntryNode	ENTRY		977449		True				
ANR	977463	CFGExitNode	EXIT		977449		True				
ANR	977464	Symbol	func		977449						
ANR	977465	Symbol	switch_callback		977449						
ANR	977466	Function	ThreadImplementation :: get_tid	687:0:17997:18249							
ANR	977467	FunctionDef	ThreadImplementation :: get_tid ()		977466	0					
ANR	977468	CompoundStatement		689:0:18033:18249	977466	0					
ANR	977469	IdentifierDeclStatement	int return_val = 0 ;	690:1:18036:18054	977466	0	True				
ANR	977470	IdentifierDecl	return_val = 0		977466	0					
ANR	977471	IdentifierDeclType	int		977466	0					
ANR	977472	Identifier	return_val		977466	1					
ANR	977473	AssignmentExpression	return_val = 0		977466	2		=			
ANR	977474	Identifier	return_val		977466	0					
ANR	977475	PrimaryExpression	0		977466	1					
ANR	977476	ExpressionStatement	return_val = m_CurrentTid	693:1:18071:18096	977466	1	True				
ANR	977477	AssignmentExpression	return_val = m_CurrentTid		977466	0		=			
ANR	977478	Identifier	return_val		977466	0					
ANR	977479	Identifier	m_CurrentTid		977466	1					
ANR	977480	ReturnStatement	return return_val ;	701:1:18230:18247	977466	2	True				
ANR	977481	Identifier	return_val		977466	0					
ANR	977482	ReturnType	int		977466	1					
ANR	977483	Identifier	ThreadImplementation :: get_tid		977466	2					
ANR	977484	ParameterList			977466	3					
ANR	977485	CFGEntryNode	ENTRY		977466		True				
ANR	977486	CFGExitNode	EXIT		977466		True				
ANR	977487	Symbol	m_CurrentTid		977466						
ANR	977488	Symbol	return_val		977466						
ANR	977489	Function	ThreadImplementation :: setCurrentTid	704:0:18252:18586							
ANR	977490	FunctionDef	ThreadImplementation :: setCurrentTid (int tid)		977489	0					
ANR	977491	CompoundStatement		706:0:18302:18586	977489	0					
ANR	977492	ExpressionStatement	m_CurrentTid = tid	708:1:18318:18336	977489	0	True				
ANR	977493	AssignmentExpression	m_CurrentTid = tid		977489	0		=			
ANR	977494	Identifier	m_CurrentTid		977489	0					
ANR	977495	Identifier	tid		977489	1					
ANR	977496	ReturnType	void		977489	1					
ANR	977497	Identifier	ThreadImplementation :: setCurrentTid		977489	2					
ANR	977498	ParameterList	int tid		977489	3					
ANR	977499	Parameter	int tid	705:36:18293:18299	977489	0	True				
ANR	977500	ParameterType	int		977489	0					
ANR	977501	Identifier	tid		977489	1					
ANR	977502	CFGEntryNode	ENTRY		977489		True				
ANR	977503	CFGExitNode	EXIT		977489		True				
ANR	977504	Symbol	m_CurrentTid		977489						
ANR	977505	Symbol	tid		977489						
ANR	977506	DeclStmt									
ANR	977507	Decl							WorkerThreadPtr_t	WorkerThreadPtr_t	item
ANR	977508	DeclStmt									
ANR	977509	Decl							pthread_t	pthread_t	pthread_info
ANR	977510	DeclStmt									
ANR	977511	Decl							ThreadInfo	ThreadInfo ( pthread_info )	ti
ANR	977512	Function	free_CurrentTidKey	792:0:20740:20803							
ANR	977513	FunctionDef	free_CurrentTidKey (void * tidp)		977512	0					
ANR	977514	CompoundStatement		793:0:20776:20803	977512	0					
ANR	977515	IfStatement	if ( tidp )		977512	0					
ANR	977516	Condition	tidp	794:6:20784:20787	977512	0	True				
ANR	977517	Identifier	tidp		977512	0					
ANR	977518	ExpressionStatement	free ( tidp )	794:13:20791:20801	977512	1	True				
ANR	977519	CallExpression	free ( tidp )		977512	0					
ANR	977520	Callee	free		977512	0					
ANR	977521	Identifier	free		977512	0					
ANR	977522	ArgumentList	tidp		977512	1					
ANR	977523	Argument	tidp		977512	0					
ANR	977524	Identifier	tidp		977512	0					
ANR	977525	ReturnType	void		977512	1					
ANR	977526	Identifier	free_CurrentTidKey		977512	2					
ANR	977527	ParameterList	void * tidp		977512	3					
ANR	977528	Parameter	void * tidp	792:24:20764:20773	977512	0	True				
ANR	977529	ParameterType	void *		977512	0					
ANR	977530	Identifier	tidp		977512	1					
ANR	977531	CFGEntryNode	ENTRY		977512		True				
ANR	977532	CFGExitNode	EXIT		977512		True				
ANR	977533	Symbol	tidp		977512						
ANR	977534	Function	ThreadImplementation :: initCurrentTid	798:0:20813:20958							
ANR	977535	FunctionDef	ThreadImplementation :: initCurrentTid ()		977534	0					
ANR	977536	CompoundStatement		800:0:20857:20958	977534	0					
ANR	977537	ExpressionStatement	"pthread_key_create ( & m_CurrentTidKey , free_CurrentTidKey )"	802:1:20874:20930	977534	0	True				
ANR	977538	CallExpression	"pthread_key_create ( & m_CurrentTidKey , free_CurrentTidKey )"		977534	0					
ANR	977539	Callee	pthread_key_create		977534	0					
ANR	977540	Identifier	pthread_key_create		977534	0					
ANR	977541	ArgumentList	& m_CurrentTidKey		977534	1					
ANR	977542	Argument	& m_CurrentTidKey		977534	0					
ANR	977543	UnaryOperationExpression	& m_CurrentTidKey		977534	0					
ANR	977544	UnaryOperator	&		977534	0					
ANR	977545	Identifier	m_CurrentTidKey		977534	1					
ANR	977546	Argument	free_CurrentTidKey		977534	1					
ANR	977547	Identifier	free_CurrentTidKey		977534	0					
ANR	977548	ExpressionStatement	setCurrentTid ( 0 )	804:1:20940:20956	977534	1	True				
ANR	977549	CallExpression	setCurrentTid ( 0 )		977534	0					
ANR	977550	Callee	setCurrentTid		977534	0					
ANR	977551	Identifier	setCurrentTid		977534	0					
ANR	977552	ArgumentList	0		977534	1					
ANR	977553	Argument	0		977534	0					
ANR	977554	PrimaryExpression	0		977534	0					
ANR	977555	ReturnType	void		977534	1					
ANR	977556	Identifier	ThreadImplementation :: initCurrentTid		977534	2					
ANR	977557	ParameterList			977534	3					
ANR	977558	CFGEntryNode	ENTRY		977534		True				
ANR	977559	CFGExitNode	EXIT		977534		True				
ANR	977560	Symbol	& m_CurrentTidKey		977534						
ANR	977561	Symbol	free_CurrentTidKey		977534						
ANR	977562	Function	ThreadImplementation :: ThreadImplementation	807:0:20961:21564							
ANR	977563	FunctionDef	ThreadImplementation :: ThreadImplementation ()		977562	0					
ANR	977564	CompoundStatement		809:0:21078:21564	977562	0					
ANR	977565	ExpressionStatement	num_threads_ = 0	810:1:21081:21097	977562	0	True				
ANR	977566	AssignmentExpression	num_threads_ = 0		977562	0		=			
ANR	977567	Identifier	num_threads_		977562	0					
ANR	977568	PrimaryExpression	0		977562	1					
ANR	977569	ExpressionStatement	num_threads_busy_ = 0	811:1:21100:21121	977562	1	True				
ANR	977570	AssignmentExpression	num_threads_busy_ = 0		977562	0		=			
ANR	977571	Identifier	num_threads_busy_		977562	0					
ANR	977572	PrimaryExpression	0		977562	1					
ANR	977573	ExpressionStatement	next_tid_ = 0	812:1:21124:21137	977562	2	True				
ANR	977574	AssignmentExpression	next_tid_ = 0		977562	0		=			
ANR	977575	Identifier	next_tid_		977562	0					
ANR	977576	PrimaryExpression	0		977562	1					
ANR	977577	ExpressionStatement	switch_callback = NULL	813:1:21140:21162	977562	3	True				
ANR	977578	AssignmentExpression	switch_callback = NULL		977562	0		=			
ANR	977579	Identifier	switch_callback		977562	0					
ANR	977580	Identifier	NULL		977562	1					
ANR	977581	IdentifierDeclStatement	pthread_mutexattr_t mutex_attrs ;	814:1:21165:21196	977562	4	True				
ANR	977582	IdentifierDecl	mutex_attrs		977562	0					
ANR	977583	IdentifierDeclType	pthread_mutexattr_t		977562	0					
ANR	977584	Identifier	mutex_attrs		977562	1					
ANR	977585	ExpressionStatement	pthread_mutexattr_init ( & mutex_attrs )	815:1:21199:21235	977562	5	True				
ANR	977586	CallExpression	pthread_mutexattr_init ( & mutex_attrs )		977562	0					
ANR	977587	Callee	pthread_mutexattr_init		977562	0					
ANR	977588	Identifier	pthread_mutexattr_init		977562	0					
ANR	977589	ArgumentList	& mutex_attrs		977562	1					
ANR	977590	Argument	& mutex_attrs		977562	0					
ANR	977591	UnaryOperationExpression	& mutex_attrs		977562	0					
ANR	977592	UnaryOperator	&		977562	0					
ANR	977593	Identifier	mutex_attrs		977562	1					
ANR	977594	ExpressionStatement	"pthread_mutexattr_settype ( & mutex_attrs , PTHREAD_MUTEX_RECURSIVE_NP )"	816:1:21238:21304	977562	6	True				
ANR	977595	CallExpression	"pthread_mutexattr_settype ( & mutex_attrs , PTHREAD_MUTEX_RECURSIVE_NP )"		977562	0					
ANR	977596	Callee	pthread_mutexattr_settype		977562	0					
ANR	977597	Identifier	pthread_mutexattr_settype		977562	0					
ANR	977598	ArgumentList	& mutex_attrs		977562	1					
ANR	977599	Argument	& mutex_attrs		977562	0					
ANR	977600	UnaryOperationExpression	& mutex_attrs		977562	0					
ANR	977601	UnaryOperator	&		977562	0					
ANR	977602	Identifier	mutex_attrs		977562	1					
ANR	977603	Argument	PTHREAD_MUTEX_RECURSIVE_NP		977562	1					
ANR	977604	Identifier	PTHREAD_MUTEX_RECURSIVE_NP		977562	0					
ANR	977605	ExpressionStatement	"pthread_mutex_init ( & big_lock , & mutex_attrs )"	817:1:21307:21349	977562	7	True				
ANR	977606	CallExpression	"pthread_mutex_init ( & big_lock , & mutex_attrs )"		977562	0					
ANR	977607	Callee	pthread_mutex_init		977562	0					
ANR	977608	Identifier	pthread_mutex_init		977562	0					
ANR	977609	ArgumentList	& big_lock		977562	1					
ANR	977610	Argument	& big_lock		977562	0					
ANR	977611	UnaryOperationExpression	& big_lock		977562	0					
ANR	977612	UnaryOperator	&		977562	0					
ANR	977613	Identifier	big_lock		977562	1					
ANR	977614	Argument	& mutex_attrs		977562	1					
ANR	977615	UnaryOperationExpression	& mutex_attrs		977562	0					
ANR	977616	UnaryOperator	&		977562	0					
ANR	977617	Identifier	mutex_attrs		977562	1					
ANR	977618	ExpressionStatement	"pthread_mutex_init ( & get_handle_lock , & mutex_attrs )"	818:1:21352:21401	977562	8	True				
ANR	977619	CallExpression	"pthread_mutex_init ( & get_handle_lock , & mutex_attrs )"		977562	0					
ANR	977620	Callee	pthread_mutex_init		977562	0					
ANR	977621	Identifier	pthread_mutex_init		977562	0					
ANR	977622	ArgumentList	& get_handle_lock		977562	1					
ANR	977623	Argument	& get_handle_lock		977562	0					
ANR	977624	UnaryOperationExpression	& get_handle_lock		977562	0					
ANR	977625	UnaryOperator	&		977562	0					
ANR	977626	Identifier	get_handle_lock		977562	1					
ANR	977627	Argument	& mutex_attrs		977562	1					
ANR	977628	UnaryOperationExpression	& mutex_attrs		977562	0					
ANR	977629	UnaryOperator	&		977562	0					
ANR	977630	Identifier	mutex_attrs		977562	1					
ANR	977631	ExpressionStatement	"pthread_mutex_init ( & set_status_lock , & mutex_attrs )"	819:1:21404:21453	977562	9	True				
ANR	977632	CallExpression	"pthread_mutex_init ( & set_status_lock , & mutex_attrs )"		977562	0					
ANR	977633	Callee	pthread_mutex_init		977562	0					
ANR	977634	Identifier	pthread_mutex_init		977562	0					
ANR	977635	ArgumentList	& set_status_lock		977562	1					
ANR	977636	Argument	& set_status_lock		977562	0					
ANR	977637	UnaryOperationExpression	& set_status_lock		977562	0					
ANR	977638	UnaryOperator	&		977562	0					
ANR	977639	Identifier	set_status_lock		977562	1					
ANR	977640	Argument	& mutex_attrs		977562	1					
ANR	977641	UnaryOperationExpression	& mutex_attrs		977562	0					
ANR	977642	UnaryOperator	&		977562	0					
ANR	977643	Identifier	mutex_attrs		977562	1					
ANR	977644	ExpressionStatement	"pthread_cond_init ( & work_queue_cond , NULL )"	820:1:21456:21496	977562	10	True				
ANR	977645	CallExpression	"pthread_cond_init ( & work_queue_cond , NULL )"		977562	0					
ANR	977646	Callee	pthread_cond_init		977562	0					
ANR	977647	Identifier	pthread_cond_init		977562	0					
ANR	977648	ArgumentList	& work_queue_cond		977562	1					
ANR	977649	Argument	& work_queue_cond		977562	0					
ANR	977650	UnaryOperationExpression	& work_queue_cond		977562	0					
ANR	977651	UnaryOperator	&		977562	0					
ANR	977652	Identifier	work_queue_cond		977562	1					
ANR	977653	Argument	NULL		977562	1					
ANR	977654	Identifier	NULL		977562	0					
ANR	977655	ExpressionStatement	"pthread_cond_init ( & workers_avail_cond , NULL )"	821:1:21499:21542	977562	11	True				
ANR	977656	CallExpression	"pthread_cond_init ( & workers_avail_cond , NULL )"		977562	0					
ANR	977657	Callee	pthread_cond_init		977562	0					
ANR	977658	Identifier	pthread_cond_init		977562	0					
ANR	977659	ArgumentList	& workers_avail_cond		977562	1					
ANR	977660	Argument	& workers_avail_cond		977562	0					
ANR	977661	UnaryOperationExpression	& workers_avail_cond		977562	0					
ANR	977662	UnaryOperator	&		977562	0					
ANR	977663	Identifier	workers_avail_cond		977562	1					
ANR	977664	Argument	NULL		977562	1					
ANR	977665	Identifier	NULL		977562	0					
ANR	977666	ExpressionStatement	initCurrentTid ( )	822:1:21546:21562	977562	12	True				
ANR	977667	CallExpression	initCurrentTid ( )		977562	0					
ANR	977668	Callee	initCurrentTid		977562	0					
ANR	977669	Identifier	initCurrentTid		977562	0					
ANR	977670	ArgumentList			977562	1					
ANR	977671	Identifier	ThreadImplementation :: ThreadImplementation		977562	1					
ANR	977672	ParameterList			977562	2					
ANR	977673	CFGEntryNode	ENTRY		977562		True				
ANR	977674	CFGExitNode	EXIT		977562		True				
ANR	977675	Symbol	& big_lock		977562						
ANR	977676	Symbol	NULL		977562						
ANR	977677	Symbol	& set_status_lock		977562						
ANR	977678	Symbol	& mutex_attrs		977562						
ANR	977679	Symbol	PTHREAD_MUTEX_RECURSIVE_NP		977562						
ANR	977680	Symbol	next_tid_		977562						
ANR	977681	Symbol	num_threads_busy_		977562						
ANR	977682	Symbol	& work_queue_cond		977562						
ANR	977683	Symbol	num_threads_		977562						
ANR	977684	Symbol	& get_handle_lock		977562						
ANR	977685	Symbol	& workers_avail_cond		977562						
ANR	977686	Symbol	mutex_attrs		977562						
ANR	977687	Symbol	switch_callback		977562						
ANR	977688	Function	ThreadImplementation :: ~ThreadImplementation	825:0:21567:21912							
ANR	977689	FunctionDef	ThreadImplementation :: ~ThreadImplementation ()		977688	0					
ANR	977690	CompoundStatement		826:0:21613:21912	977688	0					
ANR	977691	ExpressionStatement	pthread_mutex_destroy ( & big_lock )	829:1:21700:21732	977688	0	True				
ANR	977692	CallExpression	pthread_mutex_destroy ( & big_lock )		977688	0					
ANR	977693	Callee	pthread_mutex_destroy		977688	0					
ANR	977694	Identifier	pthread_mutex_destroy		977688	0					
ANR	977695	ArgumentList	& big_lock		977688	1					
ANR	977696	Argument	& big_lock		977688	0					
ANR	977697	UnaryOperationExpression	& big_lock		977688	0					
ANR	977698	UnaryOperator	&		977688	0					
ANR	977699	Identifier	big_lock		977688	1					
ANR	977700	ExpressionStatement	pthread_mutex_destroy ( & get_handle_lock )	830:1:21735:21774	977688	1	True				
ANR	977701	CallExpression	pthread_mutex_destroy ( & get_handle_lock )		977688	0					
ANR	977702	Callee	pthread_mutex_destroy		977688	0					
ANR	977703	Identifier	pthread_mutex_destroy		977688	0					
ANR	977704	ArgumentList	& get_handle_lock		977688	1					
ANR	977705	Argument	& get_handle_lock		977688	0					
ANR	977706	UnaryOperationExpression	& get_handle_lock		977688	0					
ANR	977707	UnaryOperator	&		977688	0					
ANR	977708	Identifier	get_handle_lock		977688	1					
ANR	977709	ExpressionStatement	pthread_mutex_destroy ( & set_status_lock )	831:1:21777:21816	977688	2	True				
ANR	977710	CallExpression	pthread_mutex_destroy ( & set_status_lock )		977688	0					
ANR	977711	Callee	pthread_mutex_destroy		977688	0					
ANR	977712	Identifier	pthread_mutex_destroy		977688	0					
ANR	977713	ArgumentList	& set_status_lock		977688	1					
ANR	977714	Argument	& set_status_lock		977688	0					
ANR	977715	UnaryOperationExpression	& set_status_lock		977688	0					
ANR	977716	UnaryOperator	&		977688	0					
ANR	977717	Identifier	set_status_lock		977688	1					
ANR	977718	ExpressionStatement	pthread_key_delete ( m_CurrentTidKey )	833:1:21833:21868	977688	3	True				
ANR	977719	CallExpression	pthread_key_delete ( m_CurrentTidKey )		977688	0					
ANR	977720	Callee	pthread_key_delete		977688	0					
ANR	977721	Identifier	pthread_key_delete		977688	0					
ANR	977722	ArgumentList	m_CurrentTidKey		977688	1					
ANR	977723	Argument	m_CurrentTidKey		977688	0					
ANR	977724	Identifier	m_CurrentTidKey		977688	0					
ANR	977725	Identifier	ThreadImplementation :: ~ThreadImplementation		977688	1					
ANR	977726	ParameterList			977688	2					
ANR	977727	CFGEntryNode	ENTRY		977688		True				
ANR	977728	CFGExitNode	EXIT		977688		True				
ANR	977729	Symbol	& big_lock		977688						
ANR	977730	Symbol	m_CurrentTidKey		977688						
ANR	977731	Symbol	& get_handle_lock		977688						
ANR	977732	Symbol	& set_status_lock		977688						
ANR	977733	Function	ThreadImplementation :: pool_init	838:0:21915:23247							
ANR	977734	FunctionDef	ThreadImplementation :: pool_init ()		977733	0					
ANR	977735	CompoundStatement		840:0:21954:23247	977733	0					
ANR	977736	IdentifierDeclStatement	int i ;	841:1:21957:21962	977733	0	True				
ANR	977737	IdentifierDecl	i		977733	0					
ANR	977738	IdentifierDeclType	int		977733	0					
ANR	977739	Identifier	i		977733	1					
ANR	977740	IfStatement	"if ( strcmp ( get_mySubSystem ( ) -> getName ( ) , ""COLLECTOR"" ) == 0 )"		977733	1					
ANR	977741	Condition	"strcmp ( get_mySubSystem ( ) -> getName ( ) , ""COLLECTOR"" ) == 0"	844:6:22034:22084	977733	0	True				
ANR	977742	EqualityExpression	"strcmp ( get_mySubSystem ( ) -> getName ( ) , ""COLLECTOR"" ) == 0"		977733	0		==			
ANR	977743	CallExpression	"strcmp ( get_mySubSystem ( ) -> getName ( ) , ""COLLECTOR"" )"		977733	0					
ANR	977744	Callee	strcmp		977733	0					
ANR	977745	Identifier	strcmp		977733	0					
ANR	977746	ArgumentList	get_mySubSystem ( ) -> getName ( )		977733	1					
ANR	977747	Argument	get_mySubSystem ( ) -> getName ( )		977733	0					
ANR	977748	CallExpression	get_mySubSystem ( ) -> getName ( )		977733	0					
ANR	977749	Callee	get_mySubSystem ( ) -> getName		977733	0					
ANR	977750	PtrMemberAccess	get_mySubSystem ( ) -> getName		977733	0					
ANR	977751	CallExpression	get_mySubSystem ( )		977733	0					
ANR	977752	Callee	get_mySubSystem		977733	0					
ANR	977753	Identifier	get_mySubSystem		977733	0					
ANR	977754	ArgumentList			977733	1					
ANR	977755	Identifier	getName		977733	1					
ANR	977756	ArgumentList			977733	1					
ANR	977757	Argument	"""COLLECTOR"""		977733	1					
ANR	977758	PrimaryExpression	"""COLLECTOR"""		977733	0					
ANR	977759	PrimaryExpression	0		977733	1					
ANR	977760	CompoundStatement		5:60:133:133	977733	1					
ANR	977761	ExpressionStatement	"num_threads_ = param_integer ( ""THREAD_WORKER_POOL_SIZE"" , 0 , 0 )"	845:2:22092:22151	977733	0	True				
ANR	977762	AssignmentExpression	"num_threads_ = param_integer ( ""THREAD_WORKER_POOL_SIZE"" , 0 , 0 )"		977733	0		=			
ANR	977763	Identifier	num_threads_		977733	0					
ANR	977764	CallExpression	"param_integer ( ""THREAD_WORKER_POOL_SIZE"" , 0 , 0 )"		977733	1					
ANR	977765	Callee	param_integer		977733	0					
ANR	977766	Identifier	param_integer		977733	0					
ANR	977767	ArgumentList	"""THREAD_WORKER_POOL_SIZE"""		977733	1					
ANR	977768	Argument	"""THREAD_WORKER_POOL_SIZE"""		977733	0					
ANR	977769	PrimaryExpression	"""THREAD_WORKER_POOL_SIZE"""		977733	0					
ANR	977770	Argument	0		977733	1					
ANR	977771	PrimaryExpression	0		977733	0					
ANR	977772	Argument	0		977733	2					
ANR	977773	PrimaryExpression	0		977733	0					
ANR	977774	ElseStatement	else		977733	0					
ANR	977775	CompoundStatement		7:8:206:206	977733	0					
ANR	977776	ExpressionStatement	num_threads_ = 0	847:2:22165:22181	977733	0	True				
ANR	977777	AssignmentExpression	num_threads_ = 0		977733	0		=			
ANR	977778	Identifier	num_threads_		977733	0					
ANR	977779	PrimaryExpression	0		977733	1					
ANR	977780	IfStatement	if ( num_threads_ == 0 )		977733	2					
ANR	977781	Condition	num_threads_ == 0	850:6:22193:22209	977733	0	True				
ANR	977782	EqualityExpression	num_threads_ == 0		977733	0		==			
ANR	977783	Identifier	num_threads_		977733	0					
ANR	977784	PrimaryExpression	0		977733	1					
ANR	977785	CompoundStatement		11:26:258:258	977733	1					
ANR	977786	ReturnStatement	return num_threads_ ;	852:2:22277:22296	977733	0	True				
ANR	977787	Identifier	num_threads_		977733	0					
ANR	977788	ExpressionStatement	mutex_biglock_lock ( )	858:1:22445:22465	977733	3	True				
ANR	977789	CallExpression	mutex_biglock_lock ( )		977733	0					
ANR	977790	Callee	mutex_biglock_lock		977733	0					
ANR	977791	Identifier	mutex_biglock_lock		977733	0					
ANR	977792	ArgumentList			977733	1					
ANR	977793	IdentifierDeclStatement	bool sane = ( get_main_thread_ptr ( ) . get ( ) == get_handle ( ) . get ( ) ) ;	864:1:22681:22747	977733	4	True				
ANR	977794	IdentifierDecl	sane = ( get_main_thread_ptr ( ) . get ( ) == get_handle ( ) . get ( ) )		977733	0					
ANR	977795	IdentifierDeclType	bool		977733	0					
ANR	977796	Identifier	sane		977733	1					
ANR	977797	AssignmentExpression	sane = ( get_main_thread_ptr ( ) . get ( ) == get_handle ( ) . get ( ) )		977733	2		=			
ANR	977798	Identifier	sane		977733	0					
ANR	977799	EqualityExpression	get_main_thread_ptr ( ) . get ( ) == get_handle ( ) . get ( )		977733	1		==			
ANR	977800	CallExpression	get_main_thread_ptr ( ) . get ( )		977733	0					
ANR	977801	Callee	get_main_thread_ptr ( ) . get		977733	0					
ANR	977802	MemberAccess	get_main_thread_ptr ( ) . get		977733	0					
ANR	977803	CallExpression	get_main_thread_ptr ( )		977733	0					
ANR	977804	Callee	get_main_thread_ptr		977733	0					
ANR	977805	Identifier	get_main_thread_ptr		977733	0					
ANR	977806	ArgumentList			977733	1					
ANR	977807	Identifier	get		977733	1					
ANR	977808	ArgumentList			977733	1					
ANR	977809	CallExpression	get_handle ( ) . get ( )		977733	1					
ANR	977810	Callee	get_handle ( ) . get		977733	0					
ANR	977811	MemberAccess	get_handle ( ) . get		977733	0					
ANR	977812	CallExpression	get_handle ( )		977733	0					
ANR	977813	Callee	get_handle		977733	0					
ANR	977814	Identifier	get_handle		977733	0					
ANR	977815	ArgumentList			977733	1					
ANR	977816	Identifier	get		977733	1					
ANR	977817	ArgumentList			977733	1					
ANR	977818	IfStatement	if ( ! sane )		977733	5					
ANR	977819	Condition	! sane	865:5:22754:22758	977733	0	True				
ANR	977820	UnaryOperationExpression	! sane		977733	0					
ANR	977821	UnaryOperator	!		977733	0					
ANR	977822	Identifier	sane		977733	1					
ANR	977823	CompoundStatement		26:12:806:806	977733	1					
ANR	977824	ExpressionStatement	"EXCEPT ( ""Thread pool not initialized in the main thread"" )"	866:2:22765:22821	977733	0	True				
ANR	977825	CallExpression	"EXCEPT ( ""Thread pool not initialized in the main thread"" )"		977733	0					
ANR	977826	Callee	EXCEPT		977733	0					
ANR	977827	Identifier	EXCEPT		977733	0					
ANR	977828	ArgumentList	"""Thread pool not initialized in the main thread"""		977733	1					
ANR	977829	Argument	"""Thread pool not initialized in the main thread"""		977733	0					
ANR	977830	PrimaryExpression	"""Thread pool not initialized in the main thread"""		977733	0					
ANR	977831	ForStatement	for ( i = 0 ; i < num_threads_ ; i ++ )		977733	6					
ANR	977832	ForInit	i = 0 ;	870:6:22887:22890	977733	0	True				
ANR	977833	AssignmentExpression	i = 0		977733	0		=			
ANR	977834	Identifier	i		977733	0					
ANR	977835	PrimaryExpression	0		977733	1					
ANR	977836	Condition	i < num_threads_	870:11:22892:22907	977733	1	True				
ANR	977837	RelationalExpression	i < num_threads_		977733	0		<			
ANR	977838	Identifier	i		977733	0					
ANR	977839	Identifier	num_threads_		977733	1					
ANR	977840	PostIncDecOperationExpression	i ++	870:29:22910:22912	977733	2	True				
ANR	977841	Identifier	i		977733	0					
ANR	977842	IncDec	++		977733	1					
ANR	977843	CompoundStatement		31:35:961:961	977733	3					
ANR	977844	ExpressionStatement	"_beginthread ( ThreadImplementation :: threadStart , 0 , NULL )"	872:2:22933:22987	977733	0	True				
ANR	977845	CallExpression	"_beginthread ( ThreadImplementation :: threadStart , 0 , NULL )"		977733	0					
ANR	977846	Callee	_beginthread		977733	0					
ANR	977847	Identifier	_beginthread		977733	0					
ANR	977848	ArgumentList	ThreadImplementation :: threadStart		977733	1					
ANR	977849	Argument	ThreadImplementation :: threadStart		977733	0					
ANR	977850	Identifier	ThreadImplementation :: threadStart		977733	0					
ANR	977851	Argument	0		977733	1					
ANR	977852	PrimaryExpression	0		977733	0					
ANR	977853	Argument	NULL		977733	2					
ANR	977854	Identifier	NULL		977733	0					
ANR	977855	IfStatement	if ( num_threads_ > 0 )		977733	7					
ANR	977856	Condition	num_threads_ > 0	881:6:23180:23195	977733	0	True				
ANR	977857	RelationalExpression	num_threads_ > 0		977733	0		>			
ANR	977858	Identifier	num_threads_		977733	0					
ANR	977859	PrimaryExpression	0		977733	1					
ANR	977860	CompoundStatement		42:25:1244:1244	977733	1					
ANR	977861	ExpressionStatement	setCurrentTid ( 1 )	882:2:23203:23219	977733	0	True				
ANR	977862	CallExpression	setCurrentTid ( 1 )		977733	0					
ANR	977863	Callee	setCurrentTid		977733	0					
ANR	977864	Identifier	setCurrentTid		977733	0					
ANR	977865	ArgumentList	1		977733	1					
ANR	977866	Argument	1		977733	0					
ANR	977867	PrimaryExpression	1		977733	0					
ANR	977868	ReturnStatement	return num_threads_ ;	885:1:23226:23245	977733	8	True				
ANR	977869	Identifier	num_threads_		977733	0					
ANR	977870	ReturnType	int		977733	1					
ANR	977871	Identifier	ThreadImplementation :: pool_init		977733	2					
ANR	977872	ParameterList			977733	3					
ANR	977873	CFGEntryNode	ENTRY		977733		True				
ANR	977874	CFGExitNode	EXIT		977733		True				
ANR	977875	Symbol	strcmp		977733						
ANR	977876	Symbol	get_main_thread_ptr ( ) . get		977733						
ANR	977877	Symbol	NULL		977733						
ANR	977878	Symbol	get_mySubSystem ( ) -> getName		977733						
ANR	977879	Symbol	ThreadImplementation :: threadStart		977733						
ANR	977880	Symbol	* get_mySubSystem		977733						
ANR	977881	Symbol	i		977733						
ANR	977882	Symbol	sane		977733						
ANR	977883	Symbol	num_threads_		977733						
ANR	977884	Symbol	get_main_thread_ptr		977733						
ANR	977885	Symbol	get_handle		977733						
ANR	977886	Symbol	get_handle ( ) . get		977733						
ANR	977887	Symbol	param_integer		977733						
ANR	977888	Symbol	get_mySubSystem		977733						
ANR	977889	Function	ThreadImplementation :: start_thread_safe_block	888:0:23250:24440							
ANR	977890	FunctionDef	ThreadImplementation :: start_thread_safe_block ()		977889	0					
ANR	977891	CompoundStatement		890:0:23303:24440	977889	0					
ANR	977892	IdentifierDeclStatement	WorkerThreadPtr_t context = get_handle ( ) ;	895:1:23480:23520	977889	0	True				
ANR	977893	IdentifierDecl	context = get_handle ( )		977889	0					
ANR	977894	IdentifierDeclType	WorkerThreadPtr_t		977889	0					
ANR	977895	Identifier	context		977889	1					
ANR	977896	AssignmentExpression	context = get_handle ( )		977889	2		=			
ANR	977897	Identifier	context		977889	0					
ANR	977898	CallExpression	get_handle ( )		977889	1					
ANR	977899	Callee	get_handle		977889	0					
ANR	977900	Identifier	get_handle		977889	0					
ANR	977901	ArgumentList			977889	1					
ANR	977902	IfStatement	if ( ! context -> enable_parallel_flag_ )		977889	1					
ANR	977903	Condition	! context -> enable_parallel_flag_	898:5:23570:23600	977889	0	True				
ANR	977904	UnaryOperationExpression	! context -> enable_parallel_flag_		977889	0					
ANR	977905	UnaryOperator	!		977889	0					
ANR	977906	PtrMemberAccess	context -> enable_parallel_flag_		977889	1					
ANR	977907	Identifier	context		977889	0					
ANR	977908	Identifier	enable_parallel_flag_		977889	1					
ANR	977909	CompoundStatement		9:38:299:299	977889	1					
ANR	977910	ReturnStatement	return 1 ;	900:2:23666:23674	977889	0	True				
ANR	977911	PrimaryExpression	1		977889	0					
ANR	977912	ExpressionStatement	context -> parallel_mode_count_ += 1	908:1:23940:23974	977889	2	True				
ANR	977913	AssignmentExpression	context -> parallel_mode_count_ += 1		977889	0		+=			
ANR	977914	PtrMemberAccess	context -> parallel_mode_count_		977889	0					
ANR	977915	Identifier	context		977889	0					
ANR	977916	Identifier	parallel_mode_count_		977889	1					
ANR	977917	PrimaryExpression	1		977889	1					
ANR	977918	IfStatement	if ( context -> parallel_mode_count_ < 1 )		977889	3					
ANR	977919	Condition	context -> parallel_mode_count_ < 1	911:6:24049:24081	977889	0	True				
ANR	977920	RelationalExpression	context -> parallel_mode_count_ < 1		977889	0		<			
ANR	977921	PtrMemberAccess	context -> parallel_mode_count_		977889	0					
ANR	977922	Identifier	context		977889	0					
ANR	977923	Identifier	parallel_mode_count_		977889	1					
ANR	977924	PrimaryExpression	1		977889	1					
ANR	977925	CompoundStatement		22:42:781:781	977889	1					
ANR	977926	ExpressionStatement	"EXCEPT ( ""Thread %d has thread safe block mismatch"" , context -> tid_ )"	912:2:24091:24155	977889	0	True				
ANR	977927	CallExpression	"EXCEPT ( ""Thread %d has thread safe block mismatch"" , context -> tid_ )"		977889	0					
ANR	977928	Callee	EXCEPT		977889	0					
ANR	977929	Identifier	EXCEPT		977889	0					
ANR	977930	ArgumentList	"""Thread %d has thread safe block mismatch"""		977889	1					
ANR	977931	Argument	"""Thread %d has thread safe block mismatch"""		977889	0					
ANR	977932	PrimaryExpression	"""Thread %d has thread safe block mismatch"""		977889	0					
ANR	977933	Argument	context -> tid_		977889	1					
ANR	977934	PtrMemberAccess	context -> tid_		977889	0					
ANR	977935	Identifier	context		977889	0					
ANR	977936	Identifier	tid_		977889	1					
ANR	977937	IfStatement	if ( context -> parallel_mode_count_ == 1 )		977889	4					
ANR	977938	Condition	context -> parallel_mode_count_ == 1	916:6:24170:24203	977889	0	True				
ANR	977939	EqualityExpression	context -> parallel_mode_count_ == 1		977889	0		==			
ANR	977940	PtrMemberAccess	context -> parallel_mode_count_		977889	0					
ANR	977941	Identifier	context		977889	0					
ANR	977942	Identifier	parallel_mode_count_		977889	1					
ANR	977943	PrimaryExpression	1		977889	1					
ANR	977944	CompoundStatement		27:43:903:903	977889	1					
ANR	977945	ExpressionStatement	mutex_biglock_unlock ( )	918:2:24253:24275	977889	0	True				
ANR	977946	CallExpression	mutex_biglock_unlock ( )		977889	0					
ANR	977947	Callee	mutex_biglock_unlock		977889	0					
ANR	977948	Identifier	mutex_biglock_unlock		977889	0					
ANR	977949	ArgumentList			977889	1					
ANR	977950	ExpressionStatement	mutex_biglock_unlock ( )	925:1:24404:24426	977889	5	True				
ANR	977951	CallExpression	mutex_biglock_unlock ( )		977889	0					
ANR	977952	Callee	mutex_biglock_unlock		977889	0					
ANR	977953	Identifier	mutex_biglock_unlock		977889	0					
ANR	977954	ArgumentList			977889	1					
ANR	977955	ReturnStatement	return 0 ;	927:1:24430:24438	977889	6	True				
ANR	977956	PrimaryExpression	0		977889	0					
ANR	977957	ReturnType	int		977889	1					
ANR	977958	Identifier	ThreadImplementation :: start_thread_safe_block		977889	2					
ANR	977959	ParameterList			977889	3					
ANR	977960	CFGEntryNode	ENTRY		977889		True				
ANR	977961	CFGExitNode	EXIT		977889		True				
ANR	977962	Symbol	context -> tid_		977889						
ANR	977963	Symbol	get_handle		977889						
ANR	977964	Symbol	context -> parallel_mode_count_		977889						
ANR	977965	Symbol	context		977889						
ANR	977966	Symbol	context -> enable_parallel_flag_		977889						
ANR	977967	Symbol	* context		977889						
ANR	977968	Function	ThreadImplementation :: stop_thread_safe_block	930:0:24443:25631							
ANR	977969	FunctionDef	ThreadImplementation :: stop_thread_safe_block ()		977968	0					
ANR	977970	CompoundStatement		932:0:24495:25631	977968	0					
ANR	977971	IdentifierDeclStatement	WorkerThreadPtr_t context = get_handle ( ) ;	937:1:24685:24725	977968	0	True				
ANR	977972	IdentifierDecl	context = get_handle ( )		977968	0					
ANR	977973	IdentifierDeclType	WorkerThreadPtr_t		977968	0					
ANR	977974	Identifier	context		977968	1					
ANR	977975	AssignmentExpression	context = get_handle ( )		977968	2		=			
ANR	977976	Identifier	context		977968	0					
ANR	977977	CallExpression	get_handle ( )		977968	1					
ANR	977978	Callee	get_handle		977968	0					
ANR	977979	Identifier	get_handle		977968	0					
ANR	977980	ArgumentList			977968	1					
ANR	977981	IfStatement	if ( ! context -> enable_parallel_flag_ )		977968	1					
ANR	977982	Condition	! context -> enable_parallel_flag_	940:5:24775:24805	977968	0	True				
ANR	977983	UnaryOperationExpression	! context -> enable_parallel_flag_		977968	0					
ANR	977984	UnaryOperator	!		977968	0					
ANR	977985	PtrMemberAccess	context -> enable_parallel_flag_		977968	1					
ANR	977986	Identifier	context		977968	0					
ANR	977987	Identifier	enable_parallel_flag_		977968	1					
ANR	977988	CompoundStatement		9:38:312:312	977968	1					
ANR	977989	ReturnStatement	return 1 ;	942:2:24871:24879	977968	0	True				
ANR	977990	PrimaryExpression	1		977968	0					
ANR	977991	ExpressionStatement	context -> parallel_mode_count_ -= 1	948:1:25077:25111	977968	2	True				
ANR	977992	AssignmentExpression	context -> parallel_mode_count_ -= 1		977968	0		-=			
ANR	977993	PtrMemberAccess	context -> parallel_mode_count_		977968	0					
ANR	977994	Identifier	context		977968	0					
ANR	977995	Identifier	parallel_mode_count_		977968	1					
ANR	977996	PrimaryExpression	1		977968	1					
ANR	977997	IfStatement	if ( context -> parallel_mode_count_ < 0 )		977968	3					
ANR	977998	Condition	context -> parallel_mode_count_ < 0	951:6:25186:25218	977968	0	True				
ANR	977999	RelationalExpression	context -> parallel_mode_count_ < 0		977968	0		<			
ANR	978000	PtrMemberAccess	context -> parallel_mode_count_		977968	0					
ANR	978001	Identifier	context		977968	0					
ANR	978002	Identifier	parallel_mode_count_		977968	1					
ANR	978003	PrimaryExpression	0		977968	1					
ANR	978004	CompoundStatement		20:42:726:726	977968	1					
ANR	978005	ExpressionStatement	"EXCEPT ( ""Thread %d has thread safe block mismatch"" , context -> tid_ )"	952:2:25226:25290	977968	0	True				
ANR	978006	CallExpression	"EXCEPT ( ""Thread %d has thread safe block mismatch"" , context -> tid_ )"		977968	0					
ANR	978007	Callee	EXCEPT		977968	0					
ANR	978008	Identifier	EXCEPT		977968	0					
ANR	978009	ArgumentList	"""Thread %d has thread safe block mismatch"""		977968	1					
ANR	978010	Argument	"""Thread %d has thread safe block mismatch"""		977968	0					
ANR	978011	PrimaryExpression	"""Thread %d has thread safe block mismatch"""		977968	0					
ANR	978012	Argument	context -> tid_		977968	1					
ANR	978013	PtrMemberAccess	context -> tid_		977968	0					
ANR	978014	Identifier	context		977968	0					
ANR	978015	Identifier	tid_		977968	1					
ANR	978016	IfStatement	if ( context -> parallel_mode_count_ == 0 )		977968	4					
ANR	978017	Condition	context -> parallel_mode_count_ == 0	955:6:25302:25335	977968	0	True				
ANR	978018	EqualityExpression	context -> parallel_mode_count_ == 0		977968	0		==			
ANR	978019	PtrMemberAccess	context -> parallel_mode_count_		977968	0					
ANR	978020	Identifier	context		977968	0					
ANR	978021	Identifier	parallel_mode_count_		977968	1					
ANR	978022	PrimaryExpression	0		977968	1					
ANR	978023	CompoundStatement		24:43:843:843	977968	1					
ANR	978024	ExpressionStatement	context -> set_status ( WorkerThread :: THREAD_READY )	956:2:25343:25392	977968	0	True				
ANR	978025	CallExpression	context -> set_status ( WorkerThread :: THREAD_READY )		977968	0					
ANR	978026	Callee	context -> set_status		977968	0					
ANR	978027	PtrMemberAccess	context -> set_status		977968	0					
ANR	978028	Identifier	context		977968	0					
ANR	978029	Identifier	set_status		977968	1					
ANR	978030	ArgumentList	WorkerThread :: THREAD_READY		977968	1					
ANR	978031	Argument	WorkerThread :: THREAD_READY		977968	0					
ANR	978032	Identifier	WorkerThread :: THREAD_READY		977968	0					
ANR	978033	ExpressionStatement	mutex_biglock_lock ( )	958:2:25438:25458	977968	1	True				
ANR	978034	CallExpression	mutex_biglock_lock ( )		977968	0					
ANR	978035	Callee	mutex_biglock_lock		977968	0					
ANR	978036	Identifier	mutex_biglock_lock		977968	0					
ANR	978037	ArgumentList			977968	1					
ANR	978038	ExpressionStatement	mutex_biglock_lock ( )	962:1:25472:25492	977968	5	True				
ANR	978039	CallExpression	mutex_biglock_lock ( )		977968	0					
ANR	978040	Callee	mutex_biglock_lock		977968	0					
ANR	978041	Identifier	mutex_biglock_lock		977968	0					
ANR	978042	ArgumentList			977968	1					
ANR	978043	ExpressionStatement	get_handle ( ) -> set_status ( WorkerThread :: THREAD_RUNNING )	964:1:25561:25617	977968	6	True				
ANR	978044	CallExpression	get_handle ( ) -> set_status ( WorkerThread :: THREAD_RUNNING )		977968	0					
ANR	978045	Callee	get_handle ( ) -> set_status		977968	0					
ANR	978046	PtrMemberAccess	get_handle ( ) -> set_status		977968	0					
ANR	978047	CallExpression	get_handle ( )		977968	0					
ANR	978048	Callee	get_handle		977968	0					
ANR	978049	Identifier	get_handle		977968	0					
ANR	978050	ArgumentList			977968	1					
ANR	978051	Identifier	set_status		977968	1					
ANR	978052	ArgumentList	WorkerThread :: THREAD_RUNNING		977968	1					
ANR	978053	Argument	WorkerThread :: THREAD_RUNNING		977968	0					
ANR	978054	Identifier	WorkerThread :: THREAD_RUNNING		977968	0					
ANR	978055	ReturnStatement	return 0 ;	966:1:25621:25629	977968	7	True				
ANR	978056	PrimaryExpression	0		977968	0					
ANR	978057	ReturnType	int		977968	1					
ANR	978058	Identifier	ThreadImplementation :: stop_thread_safe_block		977968	2					
ANR	978059	ParameterList			977968	3					
ANR	978060	CFGEntryNode	ENTRY		977968		True				
ANR	978061	CFGExitNode	EXIT		977968		True				
ANR	978062	Symbol	WorkerThread :: THREAD_READY		977968						
ANR	978063	Symbol	context -> tid_		977968						
ANR	978064	Symbol	get_handle		977968						
ANR	978065	Symbol	context -> parallel_mode_count_		977968						
ANR	978066	Symbol	WorkerThread :: THREAD_RUNNING		977968						
ANR	978067	Symbol	context		977968						
ANR	978068	Symbol	context -> enable_parallel_flag_		977968						
ANR	978069	Symbol	* context		977968						
ANR	978070	Function	ThreadImplementation :: remove_tid	969:0:25634:25813							
ANR	978071	FunctionDef	ThreadImplementation :: remove_tid (int tid)		978070	0					
ANR	978072	CompoundStatement		971:0:25681:25813	978070	0					
ANR	978073	IfStatement	if ( tid < 2 )		978070	0					
ANR	978074	Condition	tid < 2	973:5:25711:25717	978070	0	True				
ANR	978075	RelationalExpression	tid < 2		978070	0		<			
ANR	978076	Identifier	tid		978070	0					
ANR	978077	PrimaryExpression	2		978070	1					
ANR	978078	CompoundStatement		3:15:39:39	978070	1					
ANR	978079	ReturnStatement	return ;	974:2:25725:25731	978070	0	True				
ANR	978080	ExpressionStatement	mutex_handle_lock ( )	977:1:25738:25757	978070	1	True				
ANR	978081	CallExpression	mutex_handle_lock ( )		978070	0					
ANR	978082	Callee	mutex_handle_lock		978070	0					
ANR	978083	Identifier	mutex_handle_lock		978070	0					
ANR	978084	ArgumentList			978070	1					
ANR	978085	ExpressionStatement	hashTidToWorker . remove ( tid )	978:1:25760:25787	978070	2	True				
ANR	978086	CallExpression	hashTidToWorker . remove ( tid )		978070	0					
ANR	978087	Callee	hashTidToWorker . remove		978070	0					
ANR	978088	MemberAccess	hashTidToWorker . remove		978070	0					
ANR	978089	Identifier	hashTidToWorker		978070	0					
ANR	978090	Identifier	remove		978070	1					
ANR	978091	ArgumentList	tid		978070	1					
ANR	978092	Argument	tid		978070	0					
ANR	978093	Identifier	tid		978070	0					
ANR	978094	ExpressionStatement	mutex_handle_unlock ( )	979:1:25790:25811	978070	3	True				
ANR	978095	CallExpression	mutex_handle_unlock ( )		978070	0					
ANR	978096	Callee	mutex_handle_unlock		978070	0					
ANR	978097	Identifier	mutex_handle_unlock		978070	0					
ANR	978098	ArgumentList			978070	1					
ANR	978099	ReturnType	void		978070	1					
ANR	978100	Identifier	ThreadImplementation :: remove_tid		978070	2					
ANR	978101	ParameterList	int tid		978070	3					
ANR	978102	Parameter	int tid	970:33:25672:25678	978070	0	True				
ANR	978103	ParameterType	int		978070	0					
ANR	978104	Identifier	tid		978070	1					
ANR	978105	CFGEntryNode	ENTRY		978070		True				
ANR	978106	CFGExitNode	EXIT		978070		True				
ANR	978107	Symbol	hashTidToWorker		978070						
ANR	978108	Symbol	tid		978070						
ANR	978109	Function	WorkerThread :: set_status	986:0:25897:26123							
ANR	978110	FunctionDef	WorkerThread :: set_status (thread_status_t newstatus)		978109	0					
ANR	978111	CompoundStatement		988:0:25954:26123	978109	0					
ANR	978112	IfStatement	if ( status_ == THREAD_COMPLETED )		978109	0					
ANR	978113	Condition	status_ == THREAD_COMPLETED	990:6:26029:26055	978109	0	True				
ANR	978114	EqualityExpression	status_ == THREAD_COMPLETED		978109	0		==			
ANR	978115	Identifier	status_		978109	0					
ANR	978116	Identifier	THREAD_COMPLETED		978109	1					
ANR	978117	CompoundStatement		3:37:105:105	978109	1					
ANR	978118	ReturnStatement	return ;	991:2:26066:26072	978109	0	True				
ANR	978119	ExpressionStatement	status_ = newstatus	995:1:26102:26121	978109	1	True				
ANR	978120	AssignmentExpression	status_ = newstatus		978109	0		=			
ANR	978121	Identifier	status_		978109	0					
ANR	978122	Identifier	newstatus		978109	1					
ANR	978123	ReturnType	void		978109	1					
ANR	978124	Identifier	WorkerThread :: set_status		978109	2					
ANR	978125	ParameterList	thread_status_t newstatus		978109	3					
ANR	978126	Parameter	thread_status_t newstatus	987:25:25927:25951	978109	0	True				
ANR	978127	ParameterType	thread_status_t		978109	0					
ANR	978128	Identifier	newstatus		978109	1					
ANR	978129	CFGEntryNode	ENTRY		978109		True				
ANR	978130	CFGExitNode	EXIT		978109		True				
ANR	978131	Symbol	status_		978109						
ANR	978132	Symbol	newstatus		978109						
ANR	978133	Symbol	THREAD_COMPLETED		978109						
ANR	978134	Function	ThreadImplementation :: ThreadImplementation	1004:0:26229:26357							
ANR	978135	FunctionDef	ThreadImplementation :: ThreadImplementation ()		978134	0					
ANR	978136	CompoundStatement		1006:0:26346:26357	978134	0					
ANR	978137	ReturnStatement	return ;	1007:1:26349:26355	978134	0	True				
ANR	978138	Identifier	ThreadImplementation :: ThreadImplementation		978134	1					
ANR	978139	ParameterList			978134	2					
ANR	978140	CFGEntryNode	ENTRY		978134		True				
ANR	978141	CFGExitNode	EXIT		978134		True				
ANR	978142	Function	ThreadImplementation :: ~ThreadImplementation	1010:0:26360:26417							
ANR	978143	FunctionDef	ThreadImplementation :: ~ThreadImplementation ()		978142	0					
ANR	978144	CompoundStatement		1011:0:26406:26417	978142	0					
ANR	978145	ReturnStatement	return ;	1012:1:26409:26415	978142	0	True				
ANR	978146	Identifier	ThreadImplementation :: ~ThreadImplementation		978142	1					
ANR	978147	ParameterList			978142	2					
ANR	978148	CFGEntryNode	ENTRY		978142		True				
ANR	978149	CFGExitNode	EXIT		978142		True				
ANR	978150	Function	ThreadImplementation :: start_thread_safe_block	1015:0:26420:26486							
ANR	978151	FunctionDef	ThreadImplementation :: start_thread_safe_block ()		978150	0					
ANR	978152	CompoundStatement		1016:0:26472:26486	978150	0					
ANR	978153	ReturnStatement	return - 1 ;	1017:1:26475:26484	978150	0	True				
ANR	978154	UnaryOperationExpression	- 1		978150	0					
ANR	978155	UnaryOperator	-		978150	0					
ANR	978156	PrimaryExpression	1		978150	1					
ANR	978157	ReturnType	int		978150	1					
ANR	978158	Identifier	ThreadImplementation :: start_thread_safe_block		978150	2					
ANR	978159	ParameterList			978150	3					
ANR	978160	CFGEntryNode	ENTRY		978150		True				
ANR	978161	CFGExitNode	EXIT		978150		True				
ANR	978162	Function	ThreadImplementation :: stop_thread_safe_block	1020:0:26489:26554							
ANR	978163	FunctionDef	ThreadImplementation :: stop_thread_safe_block ()		978162	0					
ANR	978164	CompoundStatement		1021:0:26540:26554	978162	0					
ANR	978165	ReturnStatement	return - 1 ;	1022:1:26543:26552	978162	0	True				
ANR	978166	UnaryOperationExpression	- 1		978162	0					
ANR	978167	UnaryOperator	-		978162	0					
ANR	978168	PrimaryExpression	1		978162	1					
ANR	978169	ReturnType	int		978162	1					
ANR	978170	Identifier	ThreadImplementation :: stop_thread_safe_block		978162	2					
ANR	978171	ParameterList			978162	3					
ANR	978172	CFGEntryNode	ENTRY		978162		True				
ANR	978173	CFGExitNode	EXIT		978162		True				
ANR	978174	Function	ThreadImplementation :: yield	1025:0:26557:26606							
ANR	978175	FunctionDef	ThreadImplementation :: yield ()		978174	0					
ANR	978176	CompoundStatement		1026:0:26592:26606	978174	0					
ANR	978177	ReturnStatement	return - 1 ;	1027:1:26595:26604	978174	0	True				
ANR	978178	UnaryOperationExpression	- 1		978174	0					
ANR	978179	UnaryOperator	-		978174	0					
ANR	978180	PrimaryExpression	1		978174	1					
ANR	978181	ReturnType	int		978174	1					
ANR	978182	Identifier	ThreadImplementation :: yield		978174	2					
ANR	978183	ParameterList			978174	3					
ANR	978184	CFGEntryNode	ENTRY		978174		True				
ANR	978185	CFGExitNode	EXIT		978174		True				
ANR	978186	Function	ThreadImplementation :: get_tid	1030:0:26609:26659							
ANR	978187	FunctionDef	ThreadImplementation :: get_tid ()		978186	0					
ANR	978188	CompoundStatement		1031:0:26645:26659	978186	0					
ANR	978189	ReturnStatement	return - 1 ;	1032:1:26648:26657	978186	0	True				
ANR	978190	UnaryOperationExpression	- 1		978186	0					
ANR	978191	UnaryOperator	-		978186	0					
ANR	978192	PrimaryExpression	1		978186	1					
ANR	978193	ReturnType	int		978186	1					
ANR	978194	Identifier	ThreadImplementation :: get_tid		978186	2					
ANR	978195	ParameterList			978186	3					
ANR	978196	CFGEntryNode	ENTRY		978186		True				
ANR	978197	CFGExitNode	EXIT		978186		True				
ANR	978198	Function	ThreadImplementation :: pool_init	1040:0:26757:26809							
ANR	978199	FunctionDef	ThreadImplementation :: pool_init ()		978198	0					
ANR	978200	CompoundStatement		1041:0:26795:26809	978198	0					
ANR	978201	ReturnStatement	return - 1 ;	1042:1:26798:26807	978198	0	True				
ANR	978202	UnaryOperationExpression	- 1		978198	0					
ANR	978203	UnaryOperator	-		978198	0					
ANR	978204	PrimaryExpression	1		978198	1					
ANR	978205	ReturnType	int		978198	1					
ANR	978206	Identifier	ThreadImplementation :: pool_init		978198	2					
ANR	978207	ParameterList			978198	3					
ANR	978208	CFGEntryNode	ENTRY		978198		True				
ANR	978209	CFGExitNode	EXIT		978198		True				
ANR	978210	Function	CondorThreads :: pool_init	1064:0:27189:27501							
ANR	978211	FunctionDef	CondorThreads :: pool_init ()		978210	0					
ANR	978212	CompoundStatement		1066:0:27221:27501	978210	0					
ANR	978213	Statement	static	1067:1:27224:27229	978210	0	True				
ANR	978214	IdentifierDeclStatement	bool already_been_here = false ;	1067:8:27231:27261	978210	1	True				
ANR	978215	IdentifierDecl	already_been_here = false		978210	0					
ANR	978216	IdentifierDeclType	bool		978210	0					
ANR	978217	Identifier	already_been_here		978210	1					
ANR	978218	AssignmentExpression	already_been_here = false		978210	2		=			
ANR	978219	Identifier	false		978210	0					
ANR	978220	Identifier	false		978210	1					
ANR	978221	IfStatement	if ( already_been_here )		978210	2					
ANR	978222	Condition	already_been_here	1070:6:27300:27316	978210	0	True				
ANR	978223	Identifier	already_been_here		978210	0					
ANR	978224	ReturnStatement	return - 2 ;	1070:26:27320:27329	978210	1	True				
ANR	978225	UnaryOperationExpression	- 2		978210	0					
ANR	978226	UnaryOperator	-		978210	0					
ANR	978227	PrimaryExpression	2		978210	1					
ANR	978228	ExpressionStatement	already_been_here = true	1071:1:27332:27356	978210	3	True				
ANR	978229	AssignmentExpression	already_been_here = true		978210	0		=			
ANR	978230	Identifier	already_been_here		978210	0					
ANR	978231	Identifier	true		978210	1					
ANR	978232	Statement	TI	1073:1:27360:27361	978210	4	True				
ANR	978233	Statement	=	1073:4:27363:27363	978210	5	True				
ANR	978234	Statement	new	1073:6:27365:27367	978210	6	True				
ANR	978235	ExpressionStatement	ThreadImplementation	1073:10:27369:27389	978210	7	True				
ANR	978236	Identifier	ThreadImplementation		978210	0					
ANR	978237	IdentifierDeclStatement	int numThreads = TI -> pool_init ( ) ;	1074:1:27392:27424	978210	8	True				
ANR	978238	IdentifierDecl	numThreads = TI -> pool_init ( )		978210	0					
ANR	978239	IdentifierDeclType	int		978210	0					
ANR	978240	Identifier	numThreads		978210	1					
ANR	978241	AssignmentExpression	numThreads = TI -> pool_init ( )		978210	2		=			
ANR	978242	Identifier	numThreads		978210	0					
ANR	978243	CallExpression	TI -> pool_init ( )		978210	1					
ANR	978244	Callee	TI -> pool_init		978210	0					
ANR	978245	PtrMemberAccess	TI -> pool_init		978210	0					
ANR	978246	Identifier	TI		978210	0					
ANR	978247	Identifier	pool_init		978210	1					
ANR	978248	ArgumentList			978210	1					
ANR	978249	IfStatement	if ( numThreads < 1 )		978210	9					
ANR	978250	Condition	numThreads < 1	1075:6:27432:27445	978210	0	True				
ANR	978251	RelationalExpression	numThreads < 1		978210	0		<			
ANR	978252	Identifier	numThreads		978210	0					
ANR	978253	PrimaryExpression	1		978210	1					
ANR	978254	CompoundStatement		10:23:227:227	978210	1					
ANR	978255	Statement	delete	1076:2:27453:27458	978210	0	True				
ANR	978256	ExpressionStatement	TI	1076:9:27460:27462	978210	1	True				
ANR	978257	Identifier	TI		978210	0					
ANR	978258	ExpressionStatement	TI = NULL	1077:2:27466:27475	978210	2	True				
ANR	978259	AssignmentExpression	TI = NULL		978210	0		=			
ANR	978260	Identifier	TI		978210	0					
ANR	978261	Identifier	NULL		978210	1					
ANR	978262	ReturnStatement	return numThreads ;	1080:1:27482:27499	978210	10	True				
ANR	978263	Identifier	numThreads		978210	0					
ANR	978264	ReturnType	int		978210	1					
ANR	978265	Identifier	CondorThreads :: pool_init		978210	2					
ANR	978266	ParameterList			978210	3					
ANR	978267	CFGEntryNode	ENTRY		978210		True				
ANR	978268	CFGExitNode	EXIT		978210		True				
ANR	978269	Symbol	already_been_here		978210						
ANR	978270	Symbol	NULL		978210						
ANR	978271	Symbol	TI		978210						
ANR	978272	Symbol	false		978210						
ANR	978273	Symbol	true		978210						
ANR	978274	Symbol	* TI		978210						
ANR	978275	Symbol	TI -> pool_init		978210						
ANR	978276	Symbol	numThreads		978210						
ANR	978277	Function	CondorThreads :: pool_size	1083:0:27504:27626							
ANR	978278	FunctionDef	CondorThreads :: pool_size ()		978277	0					
ANR	978279	CompoundStatement		1085:0:27535:27626	978277	0					
ANR	978280	IdentifierDeclStatement	int size ;	1086:1:27538:27546	978277	0	True				
ANR	978281	IdentifierDecl	size		978277	0					
ANR	978282	IdentifierDeclType	int		978277	0					
ANR	978283	Identifier	size		978277	1					
ANR	978284	IfStatement	if ( TI )		978277	1					
ANR	978285	Condition	TI	1088:5:27554:27555	978277	0	True				
ANR	978286	Identifier	TI		978277	0					
ANR	978287	CompoundStatement		4:9:22:22	978277	1					
ANR	978288	ExpressionStatement	size = TI -> pool_size ( )	1089:2:27562:27584	978277	0	True				
ANR	978289	AssignmentExpression	size = TI -> pool_size ( )		978277	0		=			
ANR	978290	Identifier	size		978277	0					
ANR	978291	CallExpression	TI -> pool_size ( )		978277	1					
ANR	978292	Callee	TI -> pool_size		978277	0					
ANR	978293	PtrMemberAccess	TI -> pool_size		978277	0					
ANR	978294	Identifier	TI		978277	0					
ANR	978295	Identifier	pool_size		978277	1					
ANR	978296	ArgumentList			978277	1					
ANR	978297	ElseStatement	else		978277	0					
ANR	978298	CompoundStatement		6:8:58:58	978277	0					
ANR	978299	ExpressionStatement	size = 0	1091:2:27598:27606	978277	0	True				
ANR	978300	AssignmentExpression	size = 0		978277	0		=			
ANR	978301	Identifier	size		978277	0					
ANR	978302	PrimaryExpression	0		978277	1					
ANR	978303	ReturnStatement	return size ;	1094:1:27613:27624	978277	2	True				
ANR	978304	Identifier	size		978277	0					
ANR	978305	ReturnType	int		978277	1					
ANR	978306	Identifier	CondorThreads :: pool_size		978277	2					
ANR	978307	ParameterList			978277	3					
ANR	978308	CFGEntryNode	ENTRY		978277		True				
ANR	978309	CFGExitNode	EXIT		978277		True				
ANR	978310	Symbol	size		978277						
ANR	978311	Symbol	TI		978277						
ANR	978312	Symbol	* TI		978277						
ANR	978313	Symbol	TI -> pool_size		978277						
ANR	978314	Function	CondorThreads :: pool_add	1097:0:27629:28001							
ANR	978315	FunctionDef	"CondorThreads :: pool_add (condor_thread_func_t routine , void * arg , int * tid , const char * descrip)"		978314	0					
ANR	978316	CompoundStatement		1100:0:27734:28001	978314	0					
ANR	978317	IfStatement	if ( ! TI )		978314	0					
ANR	978318	Condition	! TI	1105:6:27851:27853	978314	0	True				
ANR	978319	UnaryOperationExpression	! TI		978314	0					
ANR	978320	UnaryOperator	!		978314	0					
ANR	978321	Identifier	TI		978314	1					
ANR	978322	CompoundStatement		6:12:122:122	978314	1					
ANR	978323	IfStatement	if ( tid )		978314	0					
ANR	978324	Condition	tid	1106:7:27866:27868	978314	0	True				
ANR	978325	Identifier	tid		978314	0					
ANR	978326	CompoundStatement		7:14:138:138	978314	1					
ANR	978327	ExpressionStatement	* tid = 0	1107:3:27878:27886	978314	0	True				
ANR	978328	AssignmentExpression	* tid = 0		978314	0		=			
ANR	978329	UnaryOperationExpression	* tid		978314	0					
ANR	978330	UnaryOperator	*		978314	0					
ANR	978331	Identifier	tid		978314	1					
ANR	978332	PrimaryExpression	0		978314	1					
ANR	978333	ExpressionStatement	( * ( routine ) ) ( arg )	1109:2:27894:27911	978314	1	True				
ANR	978334	CallExpression	( * ( routine ) ) ( arg )		978314	0					
ANR	978335	Callee	* ( routine )		978314	0					
ANR	978336	UnaryOperationExpression	* ( routine )		978314	0					
ANR	978337	UnaryOperator	*		978314	0					
ANR	978338	Identifier	routine		978314	1					
ANR	978339	ArgumentList	arg		978314	1					
ANR	978340	Argument	arg		978314	0					
ANR	978341	Identifier	arg		978314	0					
ANR	978342	ReturnStatement	return 0 ;	1110:2:27940:27948	978314	2	True				
ANR	978343	PrimaryExpression	0		978314	0					
ANR	978344	ReturnStatement	"return TI -> pool_add ( routine , arg , tid , descrip ) ;"	1113:1:27955:27999	978314	1	True				
ANR	978345	CallExpression	"TI -> pool_add ( routine , arg , tid , descrip )"		978314	0					
ANR	978346	Callee	TI -> pool_add		978314	0					
ANR	978347	PtrMemberAccess	TI -> pool_add		978314	0					
ANR	978348	Identifier	TI		978314	0					
ANR	978349	Identifier	pool_add		978314	1					
ANR	978350	ArgumentList	routine		978314	1					
ANR	978351	Argument	routine		978314	0					
ANR	978352	Identifier	routine		978314	0					
ANR	978353	Argument	arg		978314	1					
ANR	978354	Identifier	arg		978314	0					
ANR	978355	Argument	tid		978314	2					
ANR	978356	Identifier	tid		978314	0					
ANR	978357	Argument	descrip		978314	3					
ANR	978358	Identifier	descrip		978314	0					
ANR	978359	ReturnType	int		978314	1					
ANR	978360	Identifier	CondorThreads :: pool_add		978314	2					
ANR	978361	ParameterList	"condor_thread_func_t routine , void * arg , int * tid , const char * descrip"		978314	3					
ANR	978362	Parameter	condor_thread_func_t routine	1098:24:27658:27685	978314	0	True				
ANR	978363	ParameterType	condor_thread_func_t		978314	0					
ANR	978364	Identifier	routine		978314	1					
ANR	978365	Parameter	void * arg	1098:54:27688:27696	978314	1	True				
ANR	978366	ParameterType	void *		978314	0					
ANR	978367	Identifier	arg		978314	1					
ANR	978368	Parameter	int * tid	1098:65:27699:27706	978314	2	True				
ANR	978369	ParameterType	int *		978314	0					
ANR	978370	Identifier	tid		978314	1					
ANR	978371	Parameter	const char * descrip	1099:4:27713:27731	978314	3	True				
ANR	978372	ParameterType	const char *		978314	0					
ANR	978373	Identifier	descrip		978314	1					
ANR	978374	CFGEntryNode	ENTRY		978314		True				
ANR	978375	CFGExitNode	EXIT		978314		True				
ANR	978376	Symbol	TI -> pool_add		978314						
ANR	978377	Symbol	routine		978314						
ANR	978378	Symbol	descrip		978314						
ANR	978379	Symbol	TI		978314						
ANR	978380	Symbol	arg		978314						
ANR	978381	Symbol	* TI		978314						
ANR	978382	Symbol	* tid		978314						
ANR	978383	Symbol	tid		978314						
ANR	978384	Function	CondorThreads :: start_thread_safe_block	1116:0:28004:28111							
ANR	978385	FunctionDef	CondorThreads :: start_thread_safe_block ()		978384	0					
ANR	978386	CompoundStatement		1118:0:28049:28111	978384	0					
ANR	978387	IfStatement	if ( ! TI )		978384	0					
ANR	978388	Condition	! TI	1119:5:28056:28058	978384	0	True				
ANR	978389	UnaryOperationExpression	! TI		978384	0					
ANR	978390	UnaryOperator	!		978384	0					
ANR	978391	Identifier	TI		978384	1					
ANR	978392	ReturnStatement	return - 1 ;	1119:10:28061:28070	978384	1	True				
ANR	978393	UnaryOperationExpression	- 1		978384	0					
ANR	978394	UnaryOperator	-		978384	0					
ANR	978395	PrimaryExpression	1		978384	1					
ANR	978396	ReturnStatement	return TI -> start_thread_safe_block ( ) ;	1120:1:28073:28109	978384	1	True				
ANR	978397	CallExpression	TI -> start_thread_safe_block ( )		978384	0					
ANR	978398	Callee	TI -> start_thread_safe_block		978384	0					
ANR	978399	PtrMemberAccess	TI -> start_thread_safe_block		978384	0					
ANR	978400	Identifier	TI		978384	0					
ANR	978401	Identifier	start_thread_safe_block		978384	1					
ANR	978402	ArgumentList			978384	1					
ANR	978403	ReturnType	int		978384	1					
ANR	978404	Identifier	CondorThreads :: start_thread_safe_block		978384	2					
ANR	978405	ParameterList			978384	3					
ANR	978406	CFGEntryNode	ENTRY		978384		True				
ANR	978407	CFGExitNode	EXIT		978384		True				
ANR	978408	Symbol	TI		978384						
ANR	978409	Symbol	* TI		978384						
ANR	978410	Symbol	TI -> start_thread_safe_block		978384						
ANR	978411	Function	CondorThreads :: stop_thread_safe_block	1123:0:28114:28219							
ANR	978412	FunctionDef	CondorThreads :: stop_thread_safe_block ()		978411	0					
ANR	978413	CompoundStatement		1125:0:28158:28219	978411	0					
ANR	978414	IfStatement	if ( ! TI )		978411	0					
ANR	978415	Condition	! TI	1126:5:28165:28167	978411	0	True				
ANR	978416	UnaryOperationExpression	! TI		978411	0					
ANR	978417	UnaryOperator	!		978411	0					
ANR	978418	Identifier	TI		978411	1					
ANR	978419	ReturnStatement	return - 1 ;	1126:10:28170:28179	978411	1	True				
ANR	978420	UnaryOperationExpression	- 1		978411	0					
ANR	978421	UnaryOperator	-		978411	0					
ANR	978422	PrimaryExpression	1		978411	1					
ANR	978423	ReturnStatement	return TI -> stop_thread_safe_block ( ) ;	1127:1:28182:28217	978411	1	True				
ANR	978424	CallExpression	TI -> stop_thread_safe_block ( )		978411	0					
ANR	978425	Callee	TI -> stop_thread_safe_block		978411	0					
ANR	978426	PtrMemberAccess	TI -> stop_thread_safe_block		978411	0					
ANR	978427	Identifier	TI		978411	0					
ANR	978428	Identifier	stop_thread_safe_block		978411	1					
ANR	978429	ArgumentList			978411	1					
ANR	978430	ReturnType	int		978411	1					
ANR	978431	Identifier	CondorThreads :: stop_thread_safe_block		978411	2					
ANR	978432	ParameterList			978411	3					
ANR	978433	CFGEntryNode	ENTRY		978411		True				
ANR	978434	CFGExitNode	EXIT		978411		True				
ANR	978435	Symbol	TI		978411						
ANR	978436	Symbol	TI -> stop_thread_safe_block		978411						
ANR	978437	Symbol	* TI		978411						
ANR	978438	Function	CondorThreads :: yield	1130:0:28222:28294							
ANR	978439	FunctionDef	CondorThreads :: yield ()		978438	0					
ANR	978440	CompoundStatement		1132:0:28250:28294	978438	0					
ANR	978441	IfStatement	if ( ! TI )		978438	0					
ANR	978442	Condition	! TI	1133:5:28257:28259	978438	0	True				
ANR	978443	UnaryOperationExpression	! TI		978438	0					
ANR	978444	UnaryOperator	!		978438	0					
ANR	978445	Identifier	TI		978438	1					
ANR	978446	ReturnStatement	return - 1 ;	1133:10:28262:28271	978438	1	True				
ANR	978447	UnaryOperationExpression	- 1		978438	0					
ANR	978448	UnaryOperator	-		978438	0					
ANR	978449	PrimaryExpression	1		978438	1					
ANR	978450	ReturnStatement	return TI -> yield ( ) ;	1134:1:28274:28292	978438	1	True				
ANR	978451	CallExpression	TI -> yield ( )		978438	0					
ANR	978452	Callee	TI -> yield		978438	0					
ANR	978453	PtrMemberAccess	TI -> yield		978438	0					
ANR	978454	Identifier	TI		978438	0					
ANR	978455	Identifier	yield		978438	1					
ANR	978456	ArgumentList			978438	1					
ANR	978457	ReturnType	int		978438	1					
ANR	978458	Identifier	CondorThreads :: yield		978438	2					
ANR	978459	ParameterList			978438	3					
ANR	978460	CFGEntryNode	ENTRY		978438		True				
ANR	978461	CFGExitNode	EXIT		978438		True				
ANR	978462	Symbol	TI		978438						
ANR	978463	Symbol	* TI		978438						
ANR	978464	Symbol	TI -> yield		978438						
ANR	978465	Function	CondorThreads :: set_switch_callback	1137:0:28297:28428							
ANR	978466	FunctionDef	CondorThreads :: set_switch_callback (condor_thread_switch_callback_t func)		978465	0					
ANR	978467	CompoundStatement		1139:0:28376:28428	978465	0					
ANR	978468	IfStatement	if ( ! TI )		978465	0					
ANR	978469	Condition	! TI	1140:5:28383:28385	978465	0	True				
ANR	978470	UnaryOperationExpression	! TI		978465	0					
ANR	978471	UnaryOperator	!		978465	0					
ANR	978472	Identifier	TI		978465	1					
ANR	978473	ReturnStatement	return ;	1140:10:28388:28394	978465	1	True				
ANR	978474	ExpressionStatement	TI -> set_switch_callback ( func )	1141:1:28397:28426	978465	1	True				
ANR	978475	CallExpression	TI -> set_switch_callback ( func )		978465	0					
ANR	978476	Callee	TI -> set_switch_callback		978465	0					
ANR	978477	PtrMemberAccess	TI -> set_switch_callback		978465	0					
ANR	978478	Identifier	TI		978465	0					
ANR	978479	Identifier	set_switch_callback		978465	1					
ANR	978480	ArgumentList	func		978465	1					
ANR	978481	Argument	func		978465	0					
ANR	978482	Identifier	func		978465	0					
ANR	978483	ReturnType	void		978465	1					
ANR	978484	Identifier	CondorThreads :: set_switch_callback		978465	2					
ANR	978485	ParameterList	condor_thread_switch_callback_t func		978465	3					
ANR	978486	Parameter	condor_thread_switch_callback_t func	1138:35:28338:28373	978465	0	True				
ANR	978487	ParameterType	condor_thread_switch_callback_t		978465	0					
ANR	978488	Identifier	func		978465	1					
ANR	978489	CFGEntryNode	ENTRY		978465		True				
ANR	978490	CFGExitNode	EXIT		978465		True				
ANR	978491	Symbol	func		978465						
ANR	978492	Symbol	TI		978465						
ANR	978493	Function	CondorThreads :: get_tid	1144:0:28431:28507							
ANR	978494	FunctionDef	CondorThreads :: get_tid ()		978493	0					
ANR	978495	CompoundStatement		1146:0:28461:28507	978493	0					
ANR	978496	IfStatement	if ( ! TI )		978493	0					
ANR	978497	Condition	! TI	1147:5:28468:28470	978493	0	True				
ANR	978498	UnaryOperationExpression	! TI		978493	0					
ANR	978499	UnaryOperator	!		978493	0					
ANR	978500	Identifier	TI		978493	1					
ANR	978501	ReturnStatement	return - 1 ;	1147:10:28473:28482	978493	1	True				
ANR	978502	UnaryOperationExpression	- 1		978493	0					
ANR	978503	UnaryOperator	-		978493	0					
ANR	978504	PrimaryExpression	1		978493	1					
ANR	978505	ReturnStatement	return TI -> get_tid ( ) ;	1148:1:28485:28505	978493	1	True				
ANR	978506	CallExpression	TI -> get_tid ( )		978493	0					
ANR	978507	Callee	TI -> get_tid		978493	0					
ANR	978508	PtrMemberAccess	TI -> get_tid		978493	0					
ANR	978509	Identifier	TI		978493	0					
ANR	978510	Identifier	get_tid		978493	1					
ANR	978511	ArgumentList			978493	1					
ANR	978512	ReturnType	int		978493	1					
ANR	978513	Identifier	CondorThreads :: get_tid		978493	2					
ANR	978514	ParameterList			978493	3					
ANR	978515	CFGEntryNode	ENTRY		978493		True				
ANR	978516	CFGExitNode	EXIT		978493		True				
ANR	978517	Symbol	TI		978493						
ANR	978518	Symbol	* TI		978493						
ANR	978519	Symbol	TI -> get_tid		978493						
ANR	978520	Function	CondorThreads :: get_handle	1151:0:28510:28671							
ANR	978521	FunctionDef	CondorThreads :: get_handle (int tid)		978520	0					
ANR	978522	CompoundStatement		1153:0:28570:28671	978520	0					
ANR	978523	ReturnStatement	return ThreadImplementation :: get_handle ( tid ) ;	1155:1:28625:28669	978520	0	True				
ANR	978524	CallExpression	ThreadImplementation :: get_handle ( tid )		978520	0					
ANR	978525	Callee	ThreadImplementation :: get_handle		978520	0					
ANR	978526	Identifier	ThreadImplementation :: get_handle		978520	0					
ANR	978527	ArgumentList	tid		978520	1					
ANR	978528	Argument	tid		978520	0					
ANR	978529	Identifier	tid		978520	0					
ANR	978530	ReturnType	const WorkerThreadPtr_t		978520	1					
ANR	978531	Identifier	CondorThreads :: get_handle		978520	2					
ANR	978532	ParameterList	int tid		978520	3					
ANR	978533	Parameter	int tid	1152:26:28561:28567	978520	0	True				
ANR	978534	ParameterType	int		978520	0					
ANR	978535	Identifier	tid		978520	1					
ANR	978536	CFGEntryNode	ENTRY		978520		True				
ANR	978537	CFGExitNode	EXIT		978520		True				
ANR	978538	Symbol	ThreadImplementation :: get_handle		978520						
ANR	978539	Symbol	tid		978520						
ANR	978540	Function	CondorThreads_pool_size	1160:1:28737:28809							
ANR	978541	FunctionDef	CondorThreads_pool_size ()		978540	0					
ANR	978542	CompoundStatement		1161:1:28769:28809	978540	0					
ANR	978543	ReturnStatement	return CondorThreads :: pool_size ( ) ;	1162:2:28773:28806	978540	0	True				
ANR	978544	CallExpression	CondorThreads :: pool_size ( )		978540	0					
ANR	978545	Callee	CondorThreads :: pool_size		978540	0					
ANR	978546	Identifier	CondorThreads :: pool_size		978540	0					
ANR	978547	ArgumentList			978540	1					
ANR	978548	ReturnType	int		978540	1					
ANR	978549	Identifier	CondorThreads_pool_size		978540	2					
ANR	978550	ParameterList			978540	3					
ANR	978551	CFGEntryNode	ENTRY		978540		True				
ANR	978552	CFGExitNode	EXIT		978540		True				
ANR	978553	Symbol	CondorThreads :: pool_size		978540						
ANR	978554	Function	CondorThreads_gettid	1165:1:28813:28880							
ANR	978555	FunctionDef	CondorThreads_gettid ()		978554	0					
ANR	978556	CompoundStatement		1166:1:28841:28880	978554	0					
ANR	978557	ReturnStatement	return CondorThreads :: get_tid ( ) ;	1167:2:28845:28876	978554	0	True				
ANR	978558	CallExpression	CondorThreads :: get_tid ( )		978554	0					
ANR	978559	Callee	CondorThreads :: get_tid		978554	0					
ANR	978560	Identifier	CondorThreads :: get_tid		978554	0					
ANR	978561	ArgumentList			978554	1					
ANR	978562	ReturnType	int		978554	1					
ANR	978563	Identifier	CondorThreads_gettid		978554	2					
ANR	978564	ParameterList			978554	3					
ANR	978565	CFGEntryNode	ENTRY		978554		True				
ANR	978566	CFGExitNode	EXIT		978554		True				
ANR	978567	Symbol	CondorThreads :: get_tid		978554						
