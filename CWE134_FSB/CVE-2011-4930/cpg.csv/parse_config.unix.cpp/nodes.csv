command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1966840	File	data/converged/CVE-2011-4930_htcondor/parse_config.unix.cpp								
ANR	1966841	Function	open_config_stream	46:0:1303:1518							
ANR	1966842	FunctionDef	"open_config_stream (config_file * cf , const char * filename , FILE * F)"		1966841	0					
ANR	1966843	CompoundStatement		47:0:1375:1518	1966841	0					
ANR	1966844	ExpressionStatement	cf -> line_num = 0	48:4:1381:1397	1966841	0	True				
ANR	1966845	AssignmentExpression	cf -> line_num = 0		1966841	0		=			
ANR	1966846	PtrMemberAccess	cf -> line_num		1966841	0					
ANR	1966847	Identifier	cf		1966841	0					
ANR	1966848	Identifier	line_num		1966841	1					
ANR	1966849	PrimaryExpression	0		1966841	1					
ANR	1966850	ExpressionStatement	cf -> bytes_read = 0	49:4:1403:1421	1966841	1	True				
ANR	1966851	AssignmentExpression	cf -> bytes_read = 0		1966841	0		=			
ANR	1966852	PtrMemberAccess	cf -> bytes_read		1966841	0					
ANR	1966853	Identifier	cf		1966841	0					
ANR	1966854	Identifier	bytes_read		1966841	1					
ANR	1966855	PrimaryExpression	0		1966841	1					
ANR	1966856	ExpressionStatement	cf -> prev_value_extra_lines = 0	50:4:1427:1457	1966841	2	True				
ANR	1966857	AssignmentExpression	cf -> prev_value_extra_lines = 0		1966841	0		=			
ANR	1966858	PtrMemberAccess	cf -> prev_value_extra_lines		1966841	0					
ANR	1966859	Identifier	cf		1966841	0					
ANR	1966860	Identifier	prev_value_extra_lines		1966841	1					
ANR	1966861	PrimaryExpression	0		1966841	1					
ANR	1966862	ExpressionStatement	cf -> filename = filename	51:4:1463:1486	1966841	3	True				
ANR	1966863	AssignmentExpression	cf -> filename = filename		1966841	0		=			
ANR	1966864	PtrMemberAccess	cf -> filename		1966841	0					
ANR	1966865	Identifier	cf		1966841	0					
ANR	1966866	Identifier	filename		1966841	1					
ANR	1966867	Identifier	filename		1966841	1					
ANR	1966868	ExpressionStatement	cf -> F = F	52:4:1492:1501	1966841	4	True				
ANR	1966869	AssignmentExpression	cf -> F = F		1966841	0		=			
ANR	1966870	PtrMemberAccess	cf -> F		1966841	0					
ANR	1966871	Identifier	cf		1966841	0					
ANR	1966872	Identifier	F		1966841	1					
ANR	1966873	Identifier	F		1966841	1					
ANR	1966874	ReturnStatement	return 0 ;	54:4:1508:1516	1966841	5	True				
ANR	1966875	PrimaryExpression	0		1966841	0					
ANR	1966876	ReturnType	int		1966841	1					
ANR	1966877	Identifier	open_config_stream		1966841	2					
ANR	1966878	ParameterList	"config_file * cf , const char * filename , FILE * F"		1966841	3					
ANR	1966879	Parameter	config_file * cf	46:23:1326:1340	1966841	0	True				
ANR	1966880	ParameterType	config_file *		1966841	0					
ANR	1966881	Identifier	cf		1966841	1					
ANR	1966882	Parameter	const char * filename	46:40:1343:1362	1966841	1	True				
ANR	1966883	ParameterType	const char *		1966841	0					
ANR	1966884	Identifier	filename		1966841	1					
ANR	1966885	Parameter	FILE * F	46:62:1365:1372	1966841	2	True				
ANR	1966886	ParameterType	FILE *		1966841	0					
ANR	1966887	Identifier	F		1966841	1					
ANR	1966888	CFGEntryNode	ENTRY		1966841		True				
ANR	1966889	CFGExitNode	EXIT		1966841		True				
ANR	1966890	Symbol	cf		1966841						
ANR	1966891	Symbol	filename		1966841						
ANR	1966892	Symbol	cf -> prev_value_extra_lines		1966841						
ANR	1966893	Symbol	cf -> filename		1966841						
ANR	1966894	Symbol	F		1966841						
ANR	1966895	Symbol	cf -> line_num		1966841						
ANR	1966896	Symbol	* cf		1966841						
ANR	1966897	Symbol	cf -> F		1966841						
ANR	1966898	Symbol	cf -> bytes_read		1966841						
ANR	1966899	Function	open_config_file	57:0:1521:1844							
ANR	1966900	FunctionDef	"open_config_file (config_file * cf , const char * filename)"		1966899	0					
ANR	1966901	CompoundStatement		58:0:1581:1844	1966899	0					
ANR	1966902	IdentifierDeclStatement	"FILE * F = fopen ( filename , ""r"" ) ;"	59:4:1587:1617	1966899	0	True				
ANR	1966903	IdentifierDecl	"* F = fopen ( filename , ""r"" )"		1966899	0					
ANR	1966904	IdentifierDeclType	FILE *		1966899	0					
ANR	1966905	Identifier	F		1966899	1					
ANR	1966906	AssignmentExpression	"* F = fopen ( filename , ""r"" )"		1966899	2		=			
ANR	1966907	Identifier	F		1966899	0					
ANR	1966908	CallExpression	"fopen ( filename , ""r"" )"		1966899	1					
ANR	1966909	Callee	fopen		1966899	0					
ANR	1966910	Identifier	fopen		1966899	0					
ANR	1966911	ArgumentList	filename		1966899	1					
ANR	1966912	Argument	filename		1966899	0					
ANR	1966913	Identifier	filename		1966899	0					
ANR	1966914	Argument	"""r"""		1966899	1					
ANR	1966915	PrimaryExpression	"""r"""		1966899	0					
ANR	1966916	IdentifierDeclStatement	int r ;	60:4:1623:1628	1966899	1	True				
ANR	1966917	IdentifierDecl	r		1966899	0					
ANR	1966918	IdentifierDeclType	int		1966899	0					
ANR	1966919	Identifier	r		1966899	1					
ANR	1966920	IfStatement	if ( F == NULL )		1966899	2					
ANR	1966921	Condition	F == NULL	62:8:1639:1647	1966899	0	True				
ANR	1966922	EqualityExpression	F == NULL		1966899	0		==			
ANR	1966923	Identifier	F		1966899	0					
ANR	1966924	Identifier	NULL		1966899	1					
ANR	1966925	CompoundStatement		5:19:68:68	1966899	1					
ANR	1966926	ExpressionStatement	"fatal_error_exit ( 1 , ""open_config_file(): fopen(%s) failed: %s"" , filename , strerror ( errno ) )"	63:8:1660:1775	1966899	0	True				
ANR	1966927	CallExpression	"fatal_error_exit ( 1 , ""open_config_file(): fopen(%s) failed: %s"" , filename , strerror ( errno ) )"		1966899	0					
ANR	1966928	Callee	fatal_error_exit		1966899	0					
ANR	1966929	Identifier	fatal_error_exit		1966899	0					
ANR	1966930	ArgumentList	1		1966899	1					
ANR	1966931	Argument	1		1966899	0					
ANR	1966932	PrimaryExpression	1		1966899	0					
ANR	1966933	Argument	"""open_config_file(): fopen(%s) failed: %s"""		1966899	1					
ANR	1966934	PrimaryExpression	"""open_config_file(): fopen(%s) failed: %s"""		1966899	0					
ANR	1966935	Argument	filename		1966899	2					
ANR	1966936	Identifier	filename		1966899	0					
ANR	1966937	Argument	strerror ( errno )		1966899	3					
ANR	1966938	CallExpression	strerror ( errno )		1966899	0					
ANR	1966939	Callee	strerror		1966899	0					
ANR	1966940	Identifier	strerror		1966899	0					
ANR	1966941	ArgumentList	errno		1966899	1					
ANR	1966942	Argument	errno		1966899	0					
ANR	1966943	Identifier	errno		1966899	0					
ANR	1966944	ExpressionStatement	"r = open_config_stream ( cf , filename , F )"	67:4:1788:1827	1966899	3	True				
ANR	1966945	AssignmentExpression	"r = open_config_stream ( cf , filename , F )"		1966899	0		=			
ANR	1966946	Identifier	r		1966899	0					
ANR	1966947	CallExpression	"open_config_stream ( cf , filename , F )"		1966899	1					
ANR	1966948	Callee	open_config_stream		1966899	0					
ANR	1966949	Identifier	open_config_stream		1966899	0					
ANR	1966950	ArgumentList	cf		1966899	1					
ANR	1966951	Argument	cf		1966899	0					
ANR	1966952	Identifier	cf		1966899	0					
ANR	1966953	Argument	filename		1966899	1					
ANR	1966954	Identifier	filename		1966899	0					
ANR	1966955	Argument	F		1966899	2					
ANR	1966956	Identifier	F		1966899	0					
ANR	1966957	ReturnStatement	return r ;	69:4:1834:1842	1966899	4	True				
ANR	1966958	Identifier	r		1966899	0					
ANR	1966959	ReturnType	int		1966899	1					
ANR	1966960	Identifier	open_config_file		1966899	2					
ANR	1966961	ParameterList	"config_file * cf , const char * filename"		1966899	3					
ANR	1966962	Parameter	config_file * cf	57:21:1542:1556	1966899	0	True				
ANR	1966963	ParameterType	config_file *		1966899	0					
ANR	1966964	Identifier	cf		1966899	1					
ANR	1966965	Parameter	const char * filename	57:38:1559:1578	1966899	1	True				
ANR	1966966	ParameterType	const char *		1966899	0					
ANR	1966967	Identifier	filename		1966899	1					
ANR	1966968	CFGEntryNode	ENTRY		1966899		True				
ANR	1966969	CFGExitNode	EXIT		1966899		True				
ANR	1966970	Symbol	strerror		1966899						
ANR	1966971	Symbol	fopen		1966899						
ANR	1966972	Symbol	r		1966899						
ANR	1966973	Symbol	errno		1966899						
ANR	1966974	Symbol	cf		1966899						
ANR	1966975	Symbol	filename		1966899						
ANR	1966976	Symbol	NULL		1966899						
ANR	1966977	Symbol	F		1966899						
ANR	1966978	Symbol	open_config_stream		1966899						
ANR	1966979	Function	close_config_stream	72:0:1847:1920							
ANR	1966980	FunctionDef	close_config_stream (config_file * cf)		1966979	0					
ANR	1966981	CompoundStatement		73:0:1888:1920	1966979	0					
ANR	1966982	ExpressionStatement	cf -> F = 0	74:4:1894:1903	1966979	0	True				
ANR	1966983	AssignmentExpression	cf -> F = 0		1966979	0		=			
ANR	1966984	PtrMemberAccess	cf -> F		1966979	0					
ANR	1966985	Identifier	cf		1966979	0					
ANR	1966986	Identifier	F		1966979	1					
ANR	1966987	PrimaryExpression	0		1966979	1					
ANR	1966988	ReturnStatement	return 0 ;	76:4:1910:1918	1966979	1	True				
ANR	1966989	PrimaryExpression	0		1966979	0					
ANR	1966990	ReturnType	int		1966979	1					
ANR	1966991	Identifier	close_config_stream		1966979	2					
ANR	1966992	ParameterList	config_file * cf		1966979	3					
ANR	1966993	Parameter	config_file * cf	72:24:1871:1885	1966979	0	True				
ANR	1966994	ParameterType	config_file *		1966979	0					
ANR	1966995	Identifier	cf		1966979	1					
ANR	1966996	CFGEntryNode	ENTRY		1966979		True				
ANR	1966997	CFGExitNode	EXIT		1966979		True				
ANR	1966998	Symbol	cf		1966979						
ANR	1966999	Symbol	* cf		1966979						
ANR	1967000	Symbol	cf -> F		1966979						
ANR	1967001	Function	close_config_file	79:0:1923:2170							
ANR	1967002	FunctionDef	close_config_file (config_file * cf)		1967001	0					
ANR	1967003	CompoundStatement		80:0:1962:2170	1967001	0					
ANR	1967004	IdentifierDeclStatement	int r = fclose ( cf -> F ) ;	81:4:1968:1989	1967001	0	True				
ANR	1967005	IdentifierDecl	r = fclose ( cf -> F )		1967001	0					
ANR	1967006	IdentifierDeclType	int		1967001	0					
ANR	1967007	Identifier	r		1967001	1					
ANR	1967008	AssignmentExpression	r = fclose ( cf -> F )		1967001	2		=			
ANR	1967009	Identifier	r		1967001	0					
ANR	1967010	CallExpression	fclose ( cf -> F )		1967001	1					
ANR	1967011	Callee	fclose		1967001	0					
ANR	1967012	Identifier	fclose		1967001	0					
ANR	1967013	ArgumentList	cf -> F		1967001	1					
ANR	1967014	Argument	cf -> F		1967001	0					
ANR	1967015	PtrMemberAccess	cf -> F		1967001	0					
ANR	1967016	Identifier	cf		1967001	0					
ANR	1967017	Identifier	F		1967001	1					
ANR	1967018	IfStatement	if ( r )		1967001	1					
ANR	1967019	Condition	r	82:8:1999:1999	1967001	0	True				
ANR	1967020	Identifier	r		1967001	0					
ANR	1967021	CompoundStatement		3:11:39:39	1967001	1					
ANR	1967022	ExpressionStatement	"fatal_error_exit ( 1 , ""close_config_file(): fclose(%s): %s"" , cf -> filename , strerror ( errno ) )"	83:8:2012:2126	1967001	0	True				
ANR	1967023	CallExpression	"fatal_error_exit ( 1 , ""close_config_file(): fclose(%s): %s"" , cf -> filename , strerror ( errno ) )"		1967001	0					
ANR	1967024	Callee	fatal_error_exit		1967001	0					
ANR	1967025	Identifier	fatal_error_exit		1967001	0					
ANR	1967026	ArgumentList	1		1967001	1					
ANR	1967027	Argument	1		1967001	0					
ANR	1967028	PrimaryExpression	1		1967001	0					
ANR	1967029	Argument	"""close_config_file(): fclose(%s): %s"""		1967001	1					
ANR	1967030	PrimaryExpression	"""close_config_file(): fclose(%s): %s"""		1967001	0					
ANR	1967031	Argument	cf -> filename		1967001	2					
ANR	1967032	PtrMemberAccess	cf -> filename		1967001	0					
ANR	1967033	Identifier	cf		1967001	0					
ANR	1967034	Identifier	filename		1967001	1					
ANR	1967035	Argument	strerror ( errno )		1967001	3					
ANR	1967036	CallExpression	strerror ( errno )		1967001	0					
ANR	1967037	Callee	strerror		1967001	0					
ANR	1967038	Identifier	strerror		1967001	0					
ANR	1967039	ArgumentList	errno		1967001	1					
ANR	1967040	Argument	errno		1967001	0					
ANR	1967041	Identifier	errno		1967001	0					
ANR	1967042	ReturnStatement	return close_config_stream ( cf ) ;	86:4:2138:2168	1967001	2	True				
ANR	1967043	CallExpression	close_config_stream ( cf )		1967001	0					
ANR	1967044	Callee	close_config_stream		1967001	0					
ANR	1967045	Identifier	close_config_stream		1967001	0					
ANR	1967046	ArgumentList	cf		1967001	1					
ANR	1967047	Argument	cf		1967001	0					
ANR	1967048	Identifier	cf		1967001	0					
ANR	1967049	ReturnType	int		1967001	1					
ANR	1967050	Identifier	close_config_file		1967001	2					
ANR	1967051	ParameterList	config_file * cf		1967001	3					
ANR	1967052	Parameter	config_file * cf	79:22:1945:1959	1967001	0	True				
ANR	1967053	ParameterType	config_file *		1967001	0					
ANR	1967054	Identifier	cf		1967001	1					
ANR	1967055	CFGEntryNode	ENTRY		1967001		True				
ANR	1967056	CFGExitNode	EXIT		1967001		True				
ANR	1967057	Symbol	strerror		1967001						
ANR	1967058	Symbol	r		1967001						
ANR	1967059	Symbol	errno		1967001						
ANR	1967060	Symbol	cf		1967001						
ANR	1967061	Symbol	close_config_stream		1967001						
ANR	1967062	Symbol	cf -> filename		1967001						
ANR	1967063	Symbol	fclose		1967001						
ANR	1967064	Symbol	* cf		1967001						
ANR	1967065	Symbol	cf -> F		1967001						
ANR	1967066	Function	next_cf_value	89:0:2173:7115							
ANR	1967067	FunctionDef	"next_cf_value (config_file * cf , char * * key , char * * value)"		1967066	0					
ANR	1967068	CompoundStatement		90:0:2234:7115	1967066	0					
ANR	1967069	IdentifierDeclStatement	char line_buf [ MAX_CONFIG_LINE ] ;	91:4:2240:2270	1967066	0	True				
ANR	1967070	IdentifierDecl	line_buf [ MAX_CONFIG_LINE ]		1967066	0					
ANR	1967071	IdentifierDeclType	char [ MAX_CONFIG_LINE ]		1967066	0					
ANR	1967072	Identifier	line_buf		1967066	1					
ANR	1967073	Identifier	MAX_CONFIG_LINE		1967066	2					
ANR	1967074	IdentifierDeclStatement	char * sep_ptr ;	92:4:2276:2289	1967066	1	True				
ANR	1967075	IdentifierDecl	* sep_ptr		1967066	0					
ANR	1967076	IdentifierDeclType	char *		1967066	0					
ANR	1967077	Identifier	sep_ptr		1967066	1					
ANR	1967078	IdentifierDeclStatement	char * first_nonwhitespace_ptr ;	93:4:2295:2324	1967066	2	True				
ANR	1967079	IdentifierDecl	* first_nonwhitespace_ptr		1967066	0					
ANR	1967080	IdentifierDeclType	char *		1967066	0					
ANR	1967081	Identifier	first_nonwhitespace_ptr		1967066	1					
ANR	1967082	IdentifierDeclStatement	size_t line_len ;	94:4:2330:2345	1967066	3	True				
ANR	1967083	IdentifierDecl	line_len		1967066	0					
ANR	1967084	IdentifierDeclType	size_t		1967066	0					
ANR	1967085	Identifier	line_len		1967066	1					
ANR	1967086	WhileStatement	while ( 1 )		1967066	4					
ANR	1967087	Condition	1	96:11:2359:2359	1967066	0	True				
ANR	1967088	PrimaryExpression	1		1967066	0					
ANR	1967089	CompoundStatement		7:14:127:127	1967066	1					
ANR	1967090	IfStatement	"if ( fgets ( line_buf , sizeof line_buf , cf -> F ) == NULL )"		1967066	0					
ANR	1967091	Condition	"fgets ( line_buf , sizeof line_buf , cf -> F ) == NULL"	97:12:2376:2422	1967066	0	True				
ANR	1967092	EqualityExpression	"fgets ( line_buf , sizeof line_buf , cf -> F ) == NULL"		1967066	0		==			
ANR	1967093	CallExpression	"fgets ( line_buf , sizeof line_buf , cf -> F )"		1967066	0					
ANR	1967094	Callee	fgets		1967066	0					
ANR	1967095	Identifier	fgets		1967066	0					
ANR	1967096	ArgumentList	line_buf		1967066	1					
ANR	1967097	Argument	line_buf		1967066	0					
ANR	1967098	Identifier	line_buf		1967066	0					
ANR	1967099	Argument	sizeof line_buf		1967066	1					
ANR	1967100	SizeofExpression	sizeof line_buf		1967066	0					
ANR	1967101	Sizeof	sizeof		1967066	0					
ANR	1967102	Identifier	line_buf		1967066	1					
ANR	1967103	Argument	cf -> F		1967066	2					
ANR	1967104	PtrMemberAccess	cf -> F		1967066	0					
ANR	1967105	Identifier	cf		1967066	0					
ANR	1967106	Identifier	F		1967066	1					
ANR	1967107	Identifier	NULL		1967066	1					
ANR	1967108	CompoundStatement		8:61:190:190	1967066	1					
ANR	1967109	IfStatement	if ( feof ( cf -> F ) )		1967066	0					
ANR	1967110	Condition	feof ( cf -> F )	98:16:2443:2453	1967066	0	True				
ANR	1967111	CallExpression	feof ( cf -> F )		1967066	0					
ANR	1967112	Callee	feof		1967066	0					
ANR	1967113	Identifier	feof		1967066	0					
ANR	1967114	ArgumentList	cf -> F		1967066	1					
ANR	1967115	Argument	cf -> F		1967066	0					
ANR	1967116	PtrMemberAccess	cf -> F		1967066	0					
ANR	1967117	Identifier	cf		1967066	0					
ANR	1967118	Identifier	F		1967066	1					
ANR	1967119	CompoundStatement		9:29:221:221	1967066	1					
ANR	1967120	ReturnStatement	return 0 ;	99:16:2474:2482	1967066	0	True				
ANR	1967121	PrimaryExpression	0		1967066	0					
ANR	1967122	IfStatement	if ( cf -> prev_value_extra_lines > 0 )		1967066	1					
ANR	1967123	Condition	cf -> prev_value_extra_lines > 0	103:12:2521:2550	1967066	0	True				
ANR	1967124	RelationalExpression	cf -> prev_value_extra_lines > 0		1967066	0		>			
ANR	1967125	PtrMemberAccess	cf -> prev_value_extra_lines		1967066	0					
ANR	1967126	Identifier	cf		1967066	0					
ANR	1967127	Identifier	prev_value_extra_lines		1967066	1					
ANR	1967128	PrimaryExpression	0		1967066	1					
ANR	1967129	CompoundStatement		14:44:318:318	1967066	1					
ANR	1967130	ExpressionStatement	cf -> line_num += cf -> prev_value_extra_lines	104:12:2567:2609	1967066	0	True				
ANR	1967131	AssignmentExpression	cf -> line_num += cf -> prev_value_extra_lines		1967066	0		+=			
ANR	1967132	PtrMemberAccess	cf -> line_num		1967066	0					
ANR	1967133	Identifier	cf		1967066	0					
ANR	1967134	Identifier	line_num		1967066	1					
ANR	1967135	PtrMemberAccess	cf -> prev_value_extra_lines		1967066	1					
ANR	1967136	Identifier	cf		1967066	0					
ANR	1967137	Identifier	prev_value_extra_lines		1967066	1					
ANR	1967138	ExpressionStatement	cf -> prev_value_extra_lines = 0	105:12:2623:2653	1967066	1	True				
ANR	1967139	AssignmentExpression	cf -> prev_value_extra_lines = 0		1967066	0		=			
ANR	1967140	PtrMemberAccess	cf -> prev_value_extra_lines		1967066	0					
ANR	1967141	Identifier	cf		1967066	0					
ANR	1967142	Identifier	prev_value_extra_lines		1967066	1					
ANR	1967143	PrimaryExpression	0		1967066	1					
ANR	1967144	ExpressionStatement	++ cf -> line_num	107:8:2673:2687	1967066	2	True				
ANR	1967145	UnaryExpression	++ cf -> line_num		1967066	0					
ANR	1967146	IncDec	++		1967066	0					
ANR	1967147	PtrMemberAccess	cf -> line_num		1967066	1					
ANR	1967148	Identifier	cf		1967066	0					
ANR	1967149	Identifier	line_num		1967066	1					
ANR	1967150	ExpressionStatement	line_len = strlen ( line_buf )	109:8:2698:2725	1967066	3	True				
ANR	1967151	AssignmentExpression	line_len = strlen ( line_buf )		1967066	0		=			
ANR	1967152	Identifier	line_len		1967066	0					
ANR	1967153	CallExpression	strlen ( line_buf )		1967066	1					
ANR	1967154	Callee	strlen		1967066	0					
ANR	1967155	Identifier	strlen		1967066	0					
ANR	1967156	ArgumentList	line_buf		1967066	1					
ANR	1967157	Argument	line_buf		1967066	0					
ANR	1967158	Identifier	line_buf		1967066	0					
ANR	1967159	ExpressionStatement	cf -> bytes_read += line_len	110:8:2735:2761	1967066	4	True				
ANR	1967160	AssignmentExpression	cf -> bytes_read += line_len		1967066	0		+=			
ANR	1967161	PtrMemberAccess	cf -> bytes_read		1967066	0					
ANR	1967162	Identifier	cf		1967066	0					
ANR	1967163	Identifier	bytes_read		1967066	1					
ANR	1967164	Identifier	line_len		1967066	1					
ANR	1967165	IfStatement	if ( cf -> bytes_read > MAX_CONFIG_FILE_SIZE )		1967066	5					
ANR	1967166	Condition	cf -> bytes_read > MAX_CONFIG_FILE_SIZE	112:12:2776:2812	1967066	0	True				
ANR	1967167	RelationalExpression	cf -> bytes_read > MAX_CONFIG_FILE_SIZE		1967066	0		>			
ANR	1967168	PtrMemberAccess	cf -> bytes_read		1967066	0					
ANR	1967169	Identifier	cf		1967066	0					
ANR	1967170	Identifier	bytes_read		1967066	1					
ANR	1967171	Identifier	MAX_CONFIG_FILE_SIZE		1967066	1					
ANR	1967172	CompoundStatement		23:51:580:580	1967066	1					
ANR	1967173	ExpressionStatement	"fatal_error_exit ( 1 , ""configuration file is too large in file: %s"" , cf -> filename )"	113:12:2829:2967	1967066	0	True				
ANR	1967174	CallExpression	"fatal_error_exit ( 1 , ""configuration file is too large in file: %s"" , cf -> filename )"		1967066	0					
ANR	1967175	Callee	fatal_error_exit		1967066	0					
ANR	1967176	Identifier	fatal_error_exit		1967066	0					
ANR	1967177	ArgumentList	1		1967066	1					
ANR	1967178	Argument	1		1967066	0					
ANR	1967179	PrimaryExpression	1		1967066	0					
ANR	1967180	Argument	"""configuration file is too large in file: %s"""		1967066	1					
ANR	1967181	PrimaryExpression	"""configuration file is too large in file: %s"""		1967066	0					
ANR	1967182	Argument	cf -> filename		1967066	2					
ANR	1967183	PtrMemberAccess	cf -> filename		1967066	0					
ANR	1967184	Identifier	cf		1967066	0					
ANR	1967185	Identifier	filename		1967066	1					
ANR	1967186	IfStatement	if ( line_len == MAX_CONFIG_LINE - 1 && line_buf [ line_len - 1 ] != '\\n' )		1967066	6					
ANR	1967187	Condition	line_len == MAX_CONFIG_LINE - 1 && line_buf [ line_len - 1 ] != '\\n'	119:12:3030:3106	1967066	0	True				
ANR	1967188	AndExpression	line_len == MAX_CONFIG_LINE - 1 && line_buf [ line_len - 1 ] != '\\n'		1967066	0		&&			
ANR	1967189	EqualityExpression	line_len == MAX_CONFIG_LINE - 1		1967066	0		==			
ANR	1967190	Identifier	line_len		1967066	0					
ANR	1967191	AdditiveExpression	MAX_CONFIG_LINE - 1		1967066	1		-			
ANR	1967192	Identifier	MAX_CONFIG_LINE		1967066	0					
ANR	1967193	PrimaryExpression	1		1967066	1					
ANR	1967194	EqualityExpression	line_buf [ line_len - 1 ] != '\\n'		1967066	1		!=			
ANR	1967195	ArrayIndexing	line_buf [ line_len - 1 ]		1967066	0					
ANR	1967196	Identifier	line_buf		1967066	0					
ANR	1967197	AdditiveExpression	line_len - 1		1967066	1		-			
ANR	1967198	Identifier	line_len		1967066	0					
ANR	1967199	PrimaryExpression	1		1967066	1					
ANR	1967200	PrimaryExpression	'\\n'		1967066	1					
ANR	1967201	CompoundStatement		31:47:874:874	1967066	1					
ANR	1967202	ExpressionStatement	"fatal_error_exit ( 1 , ""next_cf_value(): line too long in file: %s:%d"" , cf -> filename , cf -> line_num )"	121:12:3123:3277	1967066	0	True				
ANR	1967203	CallExpression	"fatal_error_exit ( 1 , ""next_cf_value(): line too long in file: %s:%d"" , cf -> filename , cf -> line_num )"		1967066	0					
ANR	1967204	Callee	fatal_error_exit		1967066	0					
ANR	1967205	Identifier	fatal_error_exit		1967066	0					
ANR	1967206	ArgumentList	1		1967066	1					
ANR	1967207	Argument	1		1967066	0					
ANR	1967208	PrimaryExpression	1		1967066	0					
ANR	1967209	Argument	"""next_cf_value(): line too long in file: %s:%d"""		1967066	1					
ANR	1967210	PrimaryExpression	"""next_cf_value(): line too long in file: %s:%d"""		1967066	0					
ANR	1967211	Argument	cf -> filename		1967066	2					
ANR	1967212	PtrMemberAccess	cf -> filename		1967066	0					
ANR	1967213	Identifier	cf		1967066	0					
ANR	1967214	Identifier	filename		1967066	1					
ANR	1967215	Argument	cf -> line_num		1967066	3					
ANR	1967216	PtrMemberAccess	cf -> line_num		1967066	0					
ANR	1967217	Identifier	cf		1967066	0					
ANR	1967218	Identifier	line_num		1967066	1					
ANR	1967219	IfStatement	if ( line_buf [ line_len - 1 ] == '\\n' )		1967066	7					
ANR	1967220	Condition	line_buf [ line_len - 1 ] == '\\n'	127:12:3348:3377	1967066	0	True				
ANR	1967221	EqualityExpression	line_buf [ line_len - 1 ] == '\\n'		1967066	0		==			
ANR	1967222	ArrayIndexing	line_buf [ line_len - 1 ]		1967066	0					
ANR	1967223	Identifier	line_buf		1967066	0					
ANR	1967224	AdditiveExpression	line_len - 1		1967066	1		-			
ANR	1967225	Identifier	line_len		1967066	0					
ANR	1967226	PrimaryExpression	1		1967066	1					
ANR	1967227	PrimaryExpression	'\\n'		1967066	1					
ANR	1967228	CompoundStatement		38:44:1145:1145	1967066	1					
ANR	1967229	ExpressionStatement	line_buf [ line_len - 1 ] = '\\0'	128:12:3394:3423	1967066	0	True				
ANR	1967230	AssignmentExpression	line_buf [ line_len - 1 ] = '\\0'		1967066	0		=			
ANR	1967231	ArrayIndexing	line_buf [ line_len - 1 ]		1967066	0					
ANR	1967232	Identifier	line_buf		1967066	0					
ANR	1967233	AdditiveExpression	line_len - 1		1967066	1		-			
ANR	1967234	Identifier	line_len		1967066	0					
ANR	1967235	PrimaryExpression	1		1967066	1					
ANR	1967236	PrimaryExpression	'\\0'		1967066	1					
ANR	1967237	ExpressionStatement	-- line_len	129:12:3437:3447	1967066	1	True				
ANR	1967238	UnaryExpression	-- line_len		1967066	0					
ANR	1967239	IncDec	--		1967066	0					
ANR	1967240	Identifier	line_len		1967066	1					
ANR	1967241	ExpressionStatement	first_nonwhitespace_ptr = line_buf	133:8:3516:3550	1967066	8	True				
ANR	1967242	AssignmentExpression	first_nonwhitespace_ptr = line_buf		1967066	0		=			
ANR	1967243	Identifier	first_nonwhitespace_ptr		1967066	0					
ANR	1967244	Identifier	line_buf		1967066	1					
ANR	1967245	WhileStatement	while ( * first_nonwhitespace_ptr && isspace ( * first_nonwhitespace_ptr ) )		1967066	9					
ANR	1967246	Condition	* first_nonwhitespace_ptr && isspace ( * first_nonwhitespace_ptr )	134:15:3567:3642	1967066	0	True				
ANR	1967247	AndExpression	* first_nonwhitespace_ptr && isspace ( * first_nonwhitespace_ptr )		1967066	0		&&			
ANR	1967248	UnaryOperationExpression	* first_nonwhitespace_ptr		1967066	0					
ANR	1967249	UnaryOperator	*		1967066	0					
ANR	1967250	Identifier	first_nonwhitespace_ptr		1967066	1					
ANR	1967251	CallExpression	isspace ( * first_nonwhitespace_ptr )		1967066	1					
ANR	1967252	Callee	isspace		1967066	0					
ANR	1967253	Identifier	isspace		1967066	0					
ANR	1967254	ArgumentList	* first_nonwhitespace_ptr		1967066	1					
ANR	1967255	Argument	* first_nonwhitespace_ptr		1967066	0					
ANR	1967256	UnaryOperationExpression	* first_nonwhitespace_ptr		1967066	0					
ANR	1967257	UnaryOperator	*		1967066	0					
ANR	1967258	Identifier	first_nonwhitespace_ptr		1967066	1					
ANR	1967259	CompoundStatement		46:53:1410:1410	1967066	1					
ANR	1967260	ExpressionStatement	++ first_nonwhitespace_ptr	136:12:3659:3684	1967066	0	True				
ANR	1967261	UnaryExpression	++ first_nonwhitespace_ptr		1967066	0					
ANR	1967262	IncDec	++		1967066	0					
ANR	1967263	Identifier	first_nonwhitespace_ptr		1967066	1					
ANR	1967264	IfStatement	if ( ! * first_nonwhitespace_ptr || * first_nonwhitespace_ptr == '#' )		1967066	10					
ANR	1967265	Condition	! * first_nonwhitespace_ptr || * first_nonwhitespace_ptr == '#'	140:12:3802:3861	1967066	0	True				
ANR	1967266	OrExpression	! * first_nonwhitespace_ptr || * first_nonwhitespace_ptr == '#'		1967066	0		||			
ANR	1967267	UnaryOperationExpression	! * first_nonwhitespace_ptr		1967066	0					
ANR	1967268	UnaryOperator	!		1967066	0					
ANR	1967269	UnaryOperationExpression	* first_nonwhitespace_ptr		1967066	1					
ANR	1967270	UnaryOperator	*		1967066	0					
ANR	1967271	Identifier	first_nonwhitespace_ptr		1967066	1					
ANR	1967272	EqualityExpression	* first_nonwhitespace_ptr == '#'		1967066	1		==			
ANR	1967273	UnaryOperationExpression	* first_nonwhitespace_ptr		1967066	0					
ANR	1967274	UnaryOperator	*		1967066	0					
ANR	1967275	Identifier	first_nonwhitespace_ptr		1967066	1					
ANR	1967276	PrimaryExpression	'#'		1967066	1					
ANR	1967277	CompoundStatement		51:74:1629:1629	1967066	1					
ANR	1967278	ContinueStatement	continue ;	141:12:3878:3886	1967066	0	True				
ANR	1967279	IfStatement	"if ( ( sep_ptr = strchr ( first_nonwhitespace_ptr , '=' ) ) )"		1967066	11					
ANR	1967280	Condition	"sep_ptr = strchr ( first_nonwhitespace_ptr , '=' )"	144:12:3911:3958	1967066	0	True				
ANR	1967281	AssignmentExpression	"sep_ptr = strchr ( first_nonwhitespace_ptr , '=' )"		1967066	0		=			
ANR	1967282	Identifier	sep_ptr		1967066	0					
ANR	1967283	CallExpression	"strchr ( first_nonwhitespace_ptr , '=' )"		1967066	1					
ANR	1967284	Callee	strchr		1967066	0					
ANR	1967285	Identifier	strchr		1967066	0					
ANR	1967286	ArgumentList	first_nonwhitespace_ptr		1967066	1					
ANR	1967287	Argument	first_nonwhitespace_ptr		1967066	0					
ANR	1967288	Identifier	first_nonwhitespace_ptr		1967066	0					
ANR	1967289	Argument	'='		1967066	1					
ANR	1967290	PrimaryExpression	'='		1967066	0					
ANR	1967291	CompoundStatement		55:62:1726:1726	1967066	1					
ANR	1967292	ExpressionStatement	"* key = trim_whitespace ( first_nonwhitespace_ptr , sep_ptr )"	146:12:4029:4085	1967066	0	True				
ANR	1967293	AssignmentExpression	"* key = trim_whitespace ( first_nonwhitespace_ptr , sep_ptr )"		1967066	0		=			
ANR	1967294	UnaryOperationExpression	* key		1967066	0					
ANR	1967295	UnaryOperator	*		1967066	0					
ANR	1967296	Identifier	key		1967066	1					
ANR	1967297	CallExpression	"trim_whitespace ( first_nonwhitespace_ptr , sep_ptr )"		1967066	1					
ANR	1967298	Callee	trim_whitespace		1967066	0					
ANR	1967299	Identifier	trim_whitespace		1967066	0					
ANR	1967300	ArgumentList	first_nonwhitespace_ptr		1967066	1					
ANR	1967301	Argument	first_nonwhitespace_ptr		1967066	0					
ANR	1967302	Identifier	first_nonwhitespace_ptr		1967066	0					
ANR	1967303	Argument	sep_ptr		1967066	1					
ANR	1967304	Identifier	sep_ptr		1967066	0					
ANR	1967305	ExpressionStatement	"* value = trim_whitespace ( sep_ptr + 1 , line_buf + line_len )"	147:12:4099:4157	1967066	1	True				
ANR	1967306	AssignmentExpression	"* value = trim_whitespace ( sep_ptr + 1 , line_buf + line_len )"		1967066	0		=			
ANR	1967307	UnaryOperationExpression	* value		1967066	0					
ANR	1967308	UnaryOperator	*		1967066	0					
ANR	1967309	Identifier	value		1967066	1					
ANR	1967310	CallExpression	"trim_whitespace ( sep_ptr + 1 , line_buf + line_len )"		1967066	1					
ANR	1967311	Callee	trim_whitespace		1967066	0					
ANR	1967312	Identifier	trim_whitespace		1967066	0					
ANR	1967313	ArgumentList	sep_ptr + 1		1967066	1					
ANR	1967314	Argument	sep_ptr + 1		1967066	0					
ANR	1967315	AdditiveExpression	sep_ptr + 1		1967066	0		+			
ANR	1967316	Identifier	sep_ptr		1967066	0					
ANR	1967317	PrimaryExpression	1		1967066	1					
ANR	1967318	Argument	line_buf + line_len		1967066	1					
ANR	1967319	AdditiveExpression	line_buf + line_len		1967066	0		+			
ANR	1967320	Identifier	line_buf		1967066	0					
ANR	1967321	Identifier	line_len		1967066	1					
ANR	1967322	ElseStatement	else		1967066	0					
ANR	1967323	IfStatement	"if ( ( sep_ptr = strchr ( first_nonwhitespace_ptr , '<' ) ) )"		1967066	0					
ANR	1967324	Condition	"sep_ptr = strchr ( first_nonwhitespace_ptr , '<' )"	149:19:4179:4226	1967066	0	True				
ANR	1967325	AssignmentExpression	"sep_ptr = strchr ( first_nonwhitespace_ptr , '<' )"		1967066	0		=			
ANR	1967326	Identifier	sep_ptr		1967066	0					
ANR	1967327	CallExpression	"strchr ( first_nonwhitespace_ptr , '<' )"		1967066	1					
ANR	1967328	Callee	strchr		1967066	0					
ANR	1967329	Identifier	strchr		1967066	0					
ANR	1967330	ArgumentList	first_nonwhitespace_ptr		1967066	1					
ANR	1967331	Argument	first_nonwhitespace_ptr		1967066	0					
ANR	1967332	Identifier	first_nonwhitespace_ptr		1967066	0					
ANR	1967333	Argument	'<'		1967066	1					
ANR	1967334	PrimaryExpression	'<'		1967066	0					
ANR	1967335	CompoundStatement		69:12:2278:2293	1967066	1					
ANR	1967336	IdentifierDeclStatement	size_t len ;	153:12:4370:4380	1967066	0	True				
ANR	1967337	IdentifierDecl	len		1967066	0					
ANR	1967338	IdentifierDeclType	size_t		1967066	0					
ANR	1967339	Identifier	len		1967066	1					
ANR	1967340	IdentifierDeclStatement	char * endp ;	154:12:4394:4404	1967066	1	True				
ANR	1967341	IdentifierDecl	* endp		1967066	0					
ANR	1967342	IdentifierDeclType	char *		1967066	0					
ANR	1967343	Identifier	endp		1967066	1					
ANR	1967344	IdentifierDeclStatement	char * remaining_line ;	155:12:4418:4438	1967066	2	True				
ANR	1967345	IdentifierDecl	* remaining_line		1967066	0					
ANR	1967346	IdentifierDeclType	char *		1967066	0					
ANR	1967347	Identifier	remaining_line		1967066	1					
ANR	1967348	IdentifierDeclStatement	char * read_buf ;	156:12:4452:4466	1967066	3	True				
ANR	1967349	IdentifierDecl	* read_buf		1967066	0					
ANR	1967350	IdentifierDeclType	char *		1967066	0					
ANR	1967351	Identifier	read_buf		1967066	1					
ANR	1967352	IdentifierDeclStatement	size_t value_length ;	157:12:4480:4499	1967066	4	True				
ANR	1967353	IdentifierDecl	value_length		1967066	0					
ANR	1967354	IdentifierDeclType	size_t		1967066	0					
ANR	1967355	Identifier	value_length		1967066	1					
ANR	1967356	IdentifierDeclStatement	size_t num_read ;	158:12:4513:4528	1967066	5	True				
ANR	1967357	IdentifierDecl	num_read		1967066	0					
ANR	1967358	IdentifierDeclType	size_t		1967066	0					
ANR	1967359	Identifier	num_read		1967066	1					
ANR	1967360	ExpressionStatement	"* key = trim_whitespace ( first_nonwhitespace_ptr , sep_ptr )"	160:12:4543:4599	1967066	6	True				
ANR	1967361	AssignmentExpression	"* key = trim_whitespace ( first_nonwhitespace_ptr , sep_ptr )"		1967066	0		=			
ANR	1967362	UnaryOperationExpression	* key		1967066	0					
ANR	1967363	UnaryOperator	*		1967066	0					
ANR	1967364	Identifier	key		1967066	1					
ANR	1967365	CallExpression	"trim_whitespace ( first_nonwhitespace_ptr , sep_ptr )"		1967066	1					
ANR	1967366	Callee	trim_whitespace		1967066	0					
ANR	1967367	Identifier	trim_whitespace		1967066	0					
ANR	1967368	ArgumentList	first_nonwhitespace_ptr		1967066	1					
ANR	1967369	Argument	first_nonwhitespace_ptr		1967066	0					
ANR	1967370	Identifier	first_nonwhitespace_ptr		1967066	0					
ANR	1967371	Argument	sep_ptr		1967066	1					
ANR	1967372	Identifier	sep_ptr		1967066	0					
ANR	1967373	ExpressionStatement	errno = 0	161:12:4613:4622	1967066	7	True				
ANR	1967374	AssignmentExpression	errno = 0		1967066	0		=			
ANR	1967375	Identifier	errno		1967066	0					
ANR	1967376	PrimaryExpression	0		1967066	1					
ANR	1967377	ExpressionStatement	"len = strtoul ( sep_ptr + 1 , & endp , 10 )"	162:12:4636:4673	1967066	8	True				
ANR	1967378	AssignmentExpression	"len = strtoul ( sep_ptr + 1 , & endp , 10 )"		1967066	0		=			
ANR	1967379	Identifier	len		1967066	0					
ANR	1967380	CallExpression	"strtoul ( sep_ptr + 1 , & endp , 10 )"		1967066	1					
ANR	1967381	Callee	strtoul		1967066	0					
ANR	1967382	Identifier	strtoul		1967066	0					
ANR	1967383	ArgumentList	sep_ptr + 1		1967066	1					
ANR	1967384	Argument	sep_ptr + 1		1967066	0					
ANR	1967385	AdditiveExpression	sep_ptr + 1		1967066	0		+			
ANR	1967386	Identifier	sep_ptr		1967066	0					
ANR	1967387	PrimaryExpression	1		1967066	1					
ANR	1967388	Argument	& endp		1967066	1					
ANR	1967389	UnaryOperationExpression	& endp		1967066	0					
ANR	1967390	UnaryOperator	&		1967066	0					
ANR	1967391	Identifier	endp		1967066	1					
ANR	1967392	Argument	10		1967066	2					
ANR	1967393	PrimaryExpression	10		1967066	0					
ANR	1967394	IfStatement	if ( errno != 0 )		1967066	9					
ANR	1967395	Condition	errno != 0	164:16:4692:4701	1967066	0	True				
ANR	1967396	EqualityExpression	errno != 0		1967066	0		!=			
ANR	1967397	Identifier	errno		1967066	0					
ANR	1967398	PrimaryExpression	0		1967066	1					
ANR	1967399	CompoundStatement		75:28:2469:2469	1967066	1					
ANR	1967400	ExpressionStatement	"fatal_error_exit ( 1 , ""next_cf_value(): value length too large in file: %s:%d"" , cf -> filename , cf -> line_num )"	165:16:4722:4893	1967066	0	True				
ANR	1967401	CallExpression	"fatal_error_exit ( 1 , ""next_cf_value(): value length too large in file: %s:%d"" , cf -> filename , cf -> line_num )"		1967066	0					
ANR	1967402	Callee	fatal_error_exit		1967066	0					
ANR	1967403	Identifier	fatal_error_exit		1967066	0					
ANR	1967404	ArgumentList	1		1967066	1					
ANR	1967405	Argument	1		1967066	0					
ANR	1967406	PrimaryExpression	1		1967066	0					
ANR	1967407	Argument	"""next_cf_value(): value length too large in file: %s:%d"""		1967066	1					
ANR	1967408	PrimaryExpression	"""next_cf_value(): value length too large in file: %s:%d"""		1967066	0					
ANR	1967409	Argument	cf -> filename		1967066	2					
ANR	1967410	PtrMemberAccess	cf -> filename		1967066	0					
ANR	1967411	Identifier	cf		1967066	0					
ANR	1967412	Identifier	filename		1967066	1					
ANR	1967413	Argument	cf -> line_num		1967066	3					
ANR	1967414	PtrMemberAccess	cf -> line_num		1967066	0					
ANR	1967415	Identifier	cf		1967066	0					
ANR	1967416	Identifier	line_num		1967066	1					
ANR	1967417	IfStatement	if ( sep_ptr + 1 == endp )		1967066	10					
ANR	1967418	Condition	sep_ptr + 1 == endp	170:16:4926:4944	1967066	0	True				
ANR	1967419	EqualityExpression	sep_ptr + 1 == endp		1967066	0		==			
ANR	1967420	AdditiveExpression	sep_ptr + 1		1967066	0		+			
ANR	1967421	Identifier	sep_ptr		1967066	0					
ANR	1967422	PrimaryExpression	1		1967066	1					
ANR	1967423	Identifier	endp		1967066	1					
ANR	1967424	CompoundStatement		81:37:2712:2712	1967066	1					
ANR	1967425	ExpressionStatement	"fatal_error_exit ( 1 , ""next_cf_value(): value length not numeric in file: %s:%d"" , cf -> filename , cf -> line_num )"	171:16:4965:5138	1967066	0	True				
ANR	1967426	CallExpression	"fatal_error_exit ( 1 , ""next_cf_value(): value length not numeric in file: %s:%d"" , cf -> filename , cf -> line_num )"		1967066	0					
ANR	1967427	Callee	fatal_error_exit		1967066	0					
ANR	1967428	Identifier	fatal_error_exit		1967066	0					
ANR	1967429	ArgumentList	1		1967066	1					
ANR	1967430	Argument	1		1967066	0					
ANR	1967431	PrimaryExpression	1		1967066	0					
ANR	1967432	Argument	"""next_cf_value(): value length not numeric in file: %s:%d"""		1967066	1					
ANR	1967433	PrimaryExpression	"""next_cf_value(): value length not numeric in file: %s:%d"""		1967066	0					
ANR	1967434	Argument	cf -> filename		1967066	2					
ANR	1967435	PtrMemberAccess	cf -> filename		1967066	0					
ANR	1967436	Identifier	cf		1967066	0					
ANR	1967437	Identifier	filename		1967066	1					
ANR	1967438	Argument	cf -> line_num		1967066	3					
ANR	1967439	PtrMemberAccess	cf -> line_num		1967066	0					
ANR	1967440	Identifier	cf		1967066	0					
ANR	1967441	Identifier	line_num		1967066	1					
ANR	1967442	ExpressionStatement	"remaining_line = trim_whitespace ( endp , line_buf + line_len )"	176:12:5167:5226	1967066	11	True				
ANR	1967443	AssignmentExpression	"remaining_line = trim_whitespace ( endp , line_buf + line_len )"		1967066	0		=			
ANR	1967444	Identifier	remaining_line		1967066	0					
ANR	1967445	CallExpression	"trim_whitespace ( endp , line_buf + line_len )"		1967066	1					
ANR	1967446	Callee	trim_whitespace		1967066	0					
ANR	1967447	Identifier	trim_whitespace		1967066	0					
ANR	1967448	ArgumentList	endp		1967066	1					
ANR	1967449	Argument	endp		1967066	0					
ANR	1967450	Identifier	endp		1967066	0					
ANR	1967451	Argument	line_buf + line_len		1967066	1					
ANR	1967452	AdditiveExpression	line_buf + line_len		1967066	0		+			
ANR	1967453	Identifier	line_buf		1967066	0					
ANR	1967454	Identifier	line_len		1967066	1					
ANR	1967455	IfStatement	if ( remaining_line [ 0 ] != '>' || remaining_line [ 1 ] != '\\0' )		1967066	12					
ANR	1967456	Condition	remaining_line [ 0 ] != '>' || remaining_line [ 1 ] != '\\0'	177:16:5244:5296	1967066	0	True				
ANR	1967457	OrExpression	remaining_line [ 0 ] != '>' || remaining_line [ 1 ] != '\\0'		1967066	0		||			
ANR	1967458	EqualityExpression	remaining_line [ 0 ] != '>'		1967066	0		!=			
ANR	1967459	ArrayIndexing	remaining_line [ 0 ]		1967066	0					
ANR	1967460	Identifier	remaining_line		1967066	0					
ANR	1967461	PrimaryExpression	0		1967066	1					
ANR	1967462	PrimaryExpression	'>'		1967066	1					
ANR	1967463	EqualityExpression	remaining_line [ 1 ] != '\\0'		1967066	1		!=			
ANR	1967464	ArrayIndexing	remaining_line [ 1 ]		1967066	0					
ANR	1967465	Identifier	remaining_line		1967066	0					
ANR	1967466	PrimaryExpression	1		1967066	1					
ANR	1967467	PrimaryExpression	'\\0'		1967066	1					
ANR	1967468	CompoundStatement		88:71:3064:3064	1967066	1					
ANR	1967469	ExpressionStatement	free ( remaining_line )	178:16:5317:5337	1967066	0	True				
ANR	1967470	CallExpression	free ( remaining_line )		1967066	0					
ANR	1967471	Callee	free		1967066	0					
ANR	1967472	Identifier	free		1967066	0					
ANR	1967473	ArgumentList	remaining_line		1967066	1					
ANR	1967474	Argument	remaining_line		1967066	0					
ANR	1967475	Identifier	remaining_line		1967066	0					
ANR	1967476	ExpressionStatement	"fatal_error_exit ( 1 , ""next_cf_value(): invalid line in file: %s:%d"" , cf -> filename , cf -> line_num )"	179:16:5355:5516	1967066	1	True				
ANR	1967477	CallExpression	"fatal_error_exit ( 1 , ""next_cf_value(): invalid line in file: %s:%d"" , cf -> filename , cf -> line_num )"		1967066	0					
ANR	1967478	Callee	fatal_error_exit		1967066	0					
ANR	1967479	Identifier	fatal_error_exit		1967066	0					
ANR	1967480	ArgumentList	1		1967066	1					
ANR	1967481	Argument	1		1967066	0					
ANR	1967482	PrimaryExpression	1		1967066	0					
ANR	1967483	Argument	"""next_cf_value(): invalid line in file: %s:%d"""		1967066	1					
ANR	1967484	PrimaryExpression	"""next_cf_value(): invalid line in file: %s:%d"""		1967066	0					
ANR	1967485	Argument	cf -> filename		1967066	2					
ANR	1967486	PtrMemberAccess	cf -> filename		1967066	0					
ANR	1967487	Identifier	cf		1967066	0					
ANR	1967488	Identifier	filename		1967066	1					
ANR	1967489	Argument	cf -> line_num		1967066	3					
ANR	1967490	PtrMemberAccess	cf -> line_num		1967066	0					
ANR	1967491	Identifier	cf		1967066	0					
ANR	1967492	Identifier	line_num		1967066	1					
ANR	1967493	ExpressionStatement	free ( remaining_line )	184:12:5545:5565	1967066	13	True				
ANR	1967494	CallExpression	free ( remaining_line )		1967066	0					
ANR	1967495	Callee	free		1967066	0					
ANR	1967496	Identifier	free		1967066	0					
ANR	1967497	ArgumentList	remaining_line		1967066	1					
ANR	1967498	Argument	remaining_line		1967066	0					
ANR	1967499	Identifier	remaining_line		1967066	0					
ANR	1967500	ExpressionStatement	remaining_line = 0	185:12:5579:5597	1967066	14	True				
ANR	1967501	AssignmentExpression	remaining_line = 0		1967066	0		=			
ANR	1967502	Identifier	remaining_line		1967066	0					
ANR	1967503	PrimaryExpression	0		1967066	1					
ANR	1967504	IfStatement	if ( len > MAX_CONFIG_VALUE_LENGTH )		1967066	15					
ANR	1967505	Condition	len > MAX_CONFIG_VALUE_LENGTH	187:16:5616:5644	1967066	0	True				
ANR	1967506	RelationalExpression	len > MAX_CONFIG_VALUE_LENGTH		1967066	0		>			
ANR	1967507	Identifier	len		1967066	0					
ANR	1967508	Identifier	MAX_CONFIG_VALUE_LENGTH		1967066	1					
ANR	1967509	CompoundStatement		98:47:3412:3412	1967066	1					
ANR	1967510	ExpressionStatement	"fatal_error_exit ( 1 , ""next_cf_value(): value length too large in file: %s:%d"" , cf -> filename , cf -> line_num )"	188:16:5665:5836	1967066	0	True				
ANR	1967511	CallExpression	"fatal_error_exit ( 1 , ""next_cf_value(): value length too large in file: %s:%d"" , cf -> filename , cf -> line_num )"		1967066	0					
ANR	1967512	Callee	fatal_error_exit		1967066	0					
ANR	1967513	Identifier	fatal_error_exit		1967066	0					
ANR	1967514	ArgumentList	1		1967066	1					
ANR	1967515	Argument	1		1967066	0					
ANR	1967516	PrimaryExpression	1		1967066	0					
ANR	1967517	Argument	"""next_cf_value(): value length too large in file: %s:%d"""		1967066	1					
ANR	1967518	PrimaryExpression	"""next_cf_value(): value length too large in file: %s:%d"""		1967066	0					
ANR	1967519	Argument	cf -> filename		1967066	2					
ANR	1967520	PtrMemberAccess	cf -> filename		1967066	0					
ANR	1967521	Identifier	cf		1967066	0					
ANR	1967522	Identifier	filename		1967066	1					
ANR	1967523	Argument	cf -> line_num		1967066	3					
ANR	1967524	PtrMemberAccess	cf -> line_num		1967066	0					
ANR	1967525	Identifier	cf		1967066	0					
ANR	1967526	Identifier	line_num		1967066	1					
ANR	1967527	ExpressionStatement	value_length = len	194:12:5934:5952	1967066	16	True				
ANR	1967528	AssignmentExpression	value_length = len		1967066	0		=			
ANR	1967529	Identifier	value_length		1967066	0					
ANR	1967530	Identifier	len		1967066	1					
ANR	1967531	ExpressionStatement	read_buf = ( char * ) malloc ( value_length + 1 )	195:12:5966:6009	1967066	17	True				
ANR	1967532	AssignmentExpression	read_buf = ( char * ) malloc ( value_length + 1 )		1967066	0		=			
ANR	1967533	Identifier	read_buf		1967066	0					
ANR	1967534	CastExpression	( char * ) malloc ( value_length + 1 )		1967066	1					
ANR	1967535	CastTarget	char *		1967066	0					
ANR	1967536	CallExpression	malloc ( value_length + 1 )		1967066	1					
ANR	1967537	Callee	malloc		1967066	0					
ANR	1967538	Identifier	malloc		1967066	0					
ANR	1967539	ArgumentList	value_length + 1		1967066	1					
ANR	1967540	Argument	value_length + 1		1967066	0					
ANR	1967541	AdditiveExpression	value_length + 1		1967066	0		+			
ANR	1967542	Identifier	value_length		1967066	0					
ANR	1967543	PrimaryExpression	1		1967066	1					
ANR	1967544	IfStatement	if ( ! read_buf )		1967066	18					
ANR	1967545	Condition	! read_buf	196:16:6027:6035	1967066	0	True				
ANR	1967546	UnaryOperationExpression	! read_buf		1967066	0					
ANR	1967547	UnaryOperator	!		1967066	0					
ANR	1967548	Identifier	read_buf		1967066	1					
ANR	1967549	CompoundStatement		107:27:3803:3803	1967066	1					
ANR	1967550	ExpressionStatement	"fatal_error_exit ( 1 , ""next_cf_value(): malloc failed in file: %s:%d"" , cf -> filename , cf -> line_num )"	197:16:6056:6218	1967066	0	True				
ANR	1967551	CallExpression	"fatal_error_exit ( 1 , ""next_cf_value(): malloc failed in file: %s:%d"" , cf -> filename , cf -> line_num )"		1967066	0					
ANR	1967552	Callee	fatal_error_exit		1967066	0					
ANR	1967553	Identifier	fatal_error_exit		1967066	0					
ANR	1967554	ArgumentList	1		1967066	1					
ANR	1967555	Argument	1		1967066	0					
ANR	1967556	PrimaryExpression	1		1967066	0					
ANR	1967557	Argument	"""next_cf_value(): malloc failed in file: %s:%d"""		1967066	1					
ANR	1967558	PrimaryExpression	"""next_cf_value(): malloc failed in file: %s:%d"""		1967066	0					
ANR	1967559	Argument	cf -> filename		1967066	2					
ANR	1967560	PtrMemberAccess	cf -> filename		1967066	0					
ANR	1967561	Identifier	cf		1967066	0					
ANR	1967562	Identifier	filename		1967066	1					
ANR	1967563	Argument	cf -> line_num		1967066	3					
ANR	1967564	PtrMemberAccess	cf -> line_num		1967066	0					
ANR	1967565	Identifier	cf		1967066	0					
ANR	1967566	Identifier	line_num		1967066	1					
ANR	1967567	ExpressionStatement	"num_read = fread ( read_buf , value_length , 1 , cf -> F )"	202:12:6247:6297	1967066	19	True				
ANR	1967568	AssignmentExpression	"num_read = fread ( read_buf , value_length , 1 , cf -> F )"		1967066	0		=			
ANR	1967569	Identifier	num_read		1967066	0					
ANR	1967570	CallExpression	"fread ( read_buf , value_length , 1 , cf -> F )"		1967066	1					
ANR	1967571	Callee	fread		1967066	0					
ANR	1967572	Identifier	fread		1967066	0					
ANR	1967573	ArgumentList	read_buf		1967066	1					
ANR	1967574	Argument	read_buf		1967066	0					
ANR	1967575	Identifier	read_buf		1967066	0					
ANR	1967576	Argument	value_length		1967066	1					
ANR	1967577	Identifier	value_length		1967066	0					
ANR	1967578	Argument	1		1967066	2					
ANR	1967579	PrimaryExpression	1		1967066	0					
ANR	1967580	Argument	cf -> F		1967066	3					
ANR	1967581	PtrMemberAccess	cf -> F		1967066	0					
ANR	1967582	Identifier	cf		1967066	0					
ANR	1967583	Identifier	F		1967066	1					
ANR	1967584	IfStatement	if ( num_read != 1 )		1967066	20					
ANR	1967585	Condition	num_read != 1	204:16:6316:6328	1967066	0	True				
ANR	1967586	EqualityExpression	num_read != 1		1967066	0		!=			
ANR	1967587	Identifier	num_read		1967066	0					
ANR	1967588	PrimaryExpression	1		1967066	1					
ANR	1967589	CompoundStatement		115:31:4096:4096	1967066	1					
ANR	1967590	ExpressionStatement	"fatal_error_exit ( 1 , ""next_cf_value(): fread read too little in file: %s:%d"" , cf -> filename , cf -> line_num )"	205:16:6349:6519	1967066	0	True				
ANR	1967591	CallExpression	"fatal_error_exit ( 1 , ""next_cf_value(): fread read too little in file: %s:%d"" , cf -> filename , cf -> line_num )"		1967066	0					
ANR	1967592	Callee	fatal_error_exit		1967066	0					
ANR	1967593	Identifier	fatal_error_exit		1967066	0					
ANR	1967594	ArgumentList	1		1967066	1					
ANR	1967595	Argument	1		1967066	0					
ANR	1967596	PrimaryExpression	1		1967066	0					
ANR	1967597	Argument	"""next_cf_value(): fread read too little in file: %s:%d"""		1967066	1					
ANR	1967598	PrimaryExpression	"""next_cf_value(): fread read too little in file: %s:%d"""		1967066	0					
ANR	1967599	Argument	cf -> filename		1967066	2					
ANR	1967600	PtrMemberAccess	cf -> filename		1967066	0					
ANR	1967601	Identifier	cf		1967066	0					
ANR	1967602	Identifier	filename		1967066	1					
ANR	1967603	Argument	cf -> line_num		1967066	3					
ANR	1967604	PtrMemberAccess	cf -> line_num		1967066	0					
ANR	1967605	Identifier	cf		1967066	0					
ANR	1967606	Identifier	line_num		1967066	1					
ANR	1967607	ExpressionStatement	read_buf [ value_length ] = '\\0'	210:12:6548:6577	1967066	21	True				
ANR	1967608	AssignmentExpression	read_buf [ value_length ] = '\\0'		1967066	0		=			
ANR	1967609	ArrayIndexing	read_buf [ value_length ]		1967066	0					
ANR	1967610	Identifier	read_buf		1967066	0					
ANR	1967611	Identifier	value_length		1967066	1					
ANR	1967612	PrimaryExpression	'\\0'		1967066	1					
ANR	1967613	ExpressionStatement	* value = read_buf	212:12:6592:6609	1967066	22	True				
ANR	1967614	AssignmentExpression	* value = read_buf		1967066	0		=			
ANR	1967615	UnaryOperationExpression	* value		1967066	0					
ANR	1967616	UnaryOperator	*		1967066	0					
ANR	1967617	Identifier	value		1967066	1					
ANR	1967618	Identifier	read_buf		1967066	1					
ANR	1967619	ExpressionStatement	sep_ptr = * value	215:12:6703:6719	1967066	23	True				
ANR	1967620	AssignmentExpression	sep_ptr = * value		1967066	0		=			
ANR	1967621	Identifier	sep_ptr		1967066	0					
ANR	1967622	UnaryOperationExpression	* value		1967066	1					
ANR	1967623	UnaryOperator	*		1967066	0					
ANR	1967624	Identifier	value		1967066	1					
ANR	1967625	WhileStatement	"while ( ( sep_ptr = strchr ( sep_ptr , '\\n' ) ) )"		1967066	24					
ANR	1967626	Condition	"sep_ptr = strchr ( sep_ptr , '\\n' )"	216:19:6740:6772	1967066	0	True				
ANR	1967627	AssignmentExpression	"sep_ptr = strchr ( sep_ptr , '\\n' )"		1967066	0		=			
ANR	1967628	Identifier	sep_ptr		1967066	0					
ANR	1967629	CallExpression	"strchr ( sep_ptr , '\\n' )"		1967066	1					
ANR	1967630	Callee	strchr		1967066	0					
ANR	1967631	Identifier	strchr		1967066	0					
ANR	1967632	ArgumentList	sep_ptr		1967066	1					
ANR	1967633	Argument	sep_ptr		1967066	0					
ANR	1967634	Identifier	sep_ptr		1967066	0					
ANR	1967635	Argument	'\\n'		1967066	1					
ANR	1967636	PrimaryExpression	'\\n'		1967066	0					
ANR	1967637	CompoundStatement		127:54:4540:4540	1967066	1					
ANR	1967638	ExpressionStatement	++ cf -> prev_value_extra_lines	217:16:6793:6821	1967066	0	True				
ANR	1967639	UnaryExpression	++ cf -> prev_value_extra_lines		1967066	0					
ANR	1967640	IncDec	++		1967066	0					
ANR	1967641	PtrMemberAccess	cf -> prev_value_extra_lines		1967066	1					
ANR	1967642	Identifier	cf		1967066	0					
ANR	1967643	Identifier	prev_value_extra_lines		1967066	1					
ANR	1967644	ExpressionStatement	++ sep_ptr	218:16:6839:6848	1967066	1	True				
ANR	1967645	UnaryExpression	++ sep_ptr		1967066	0					
ANR	1967646	IncDec	++		1967066	0					
ANR	1967647	Identifier	sep_ptr		1967066	1					
ANR	1967648	ExpressionStatement	cf -> bytes_read += value_length	221:12:6877:6907	1967066	25	True				
ANR	1967649	AssignmentExpression	cf -> bytes_read += value_length		1967066	0		+=			
ANR	1967650	PtrMemberAccess	cf -> bytes_read		1967066	0					
ANR	1967651	Identifier	cf		1967066	0					
ANR	1967652	Identifier	bytes_read		1967066	1					
ANR	1967653	Identifier	value_length		1967066	1					
ANR	1967654	ElseStatement	else		1967066	0					
ANR	1967655	CompoundStatement		133:15:4689:4689	1967066	0					
ANR	1967656	ExpressionStatement	"* key = trim_whitespace ( first_nonwhitespace_ptr , line_buf + line_len )"	223:12:6938:7054	1967066	0	True				
ANR	1967657	AssignmentExpression	"* key = trim_whitespace ( first_nonwhitespace_ptr , line_buf + line_len )"		1967066	0		=			
ANR	1967658	UnaryOperationExpression	* key		1967066	0					
ANR	1967659	UnaryOperator	*		1967066	0					
ANR	1967660	Identifier	key		1967066	1					
ANR	1967661	CallExpression	"trim_whitespace ( first_nonwhitespace_ptr , line_buf + line_len )"		1967066	1					
ANR	1967662	Callee	trim_whitespace		1967066	0					
ANR	1967663	Identifier	trim_whitespace		1967066	0					
ANR	1967664	ArgumentList	first_nonwhitespace_ptr		1967066	1					
ANR	1967665	Argument	first_nonwhitespace_ptr		1967066	0					
ANR	1967666	Identifier	first_nonwhitespace_ptr		1967066	0					
ANR	1967667	Argument	line_buf + line_len		1967066	1					
ANR	1967668	AdditiveExpression	line_buf + line_len		1967066	0		+			
ANR	1967669	Identifier	line_buf		1967066	0					
ANR	1967670	Identifier	line_len		1967066	1					
ANR	1967671	ExpressionStatement	* value = 0	226:12:7068:7078	1967066	1	True				
ANR	1967672	AssignmentExpression	* value = 0		1967066	0		=			
ANR	1967673	UnaryOperationExpression	* value		1967066	0					
ANR	1967674	UnaryOperator	*		1967066	0					
ANR	1967675	Identifier	value		1967066	1					
ANR	1967676	PrimaryExpression	0		1967066	1					
ANR	1967677	ReturnStatement	return 1 ;	229:8:7099:7107	1967066	12	True				
ANR	1967678	PrimaryExpression	1		1967066	0					
ANR	1967679	ReturnType	int		1967066	1					
ANR	1967680	Identifier	next_cf_value		1967066	2					
ANR	1967681	ParameterList	"config_file * cf , char * * key , char * * value"		1967066	3					
ANR	1967682	Parameter	config_file * cf	89:18:2191:2205	1967066	0	True				
ANR	1967683	ParameterType	config_file *		1967066	0					
ANR	1967684	Identifier	cf		1967066	1					
ANR	1967685	Parameter	char * * key	89:35:2208:2217	1967066	1	True				
ANR	1967686	ParameterType	char * *		1967066	0					
ANR	1967687	Identifier	key		1967066	1					
ANR	1967688	Parameter	char * * value	89:47:2220:2231	1967066	2	True				
ANR	1967689	ParameterType	char * *		1967066	0					
ANR	1967690	Identifier	value		1967066	1					
ANR	1967691	CFGEntryNode	ENTRY		1967066		True				
ANR	1967692	CFGExitNode	EXIT		1967066		True				
ANR	1967693	Symbol	cf -> prev_value_extra_lines		1967066						
ANR	1967694	Symbol	read_buf		1967066						
ANR	1967695	Symbol	num_read		1967066						
ANR	1967696	Symbol	MAX_CONFIG_VALUE_LENGTH		1967066						
ANR	1967697	Symbol	strchr		1967066						
ANR	1967698	Symbol	* key		1967066						
ANR	1967699	Symbol	* cf		1967066						
ANR	1967700	Symbol	trim_whitespace		1967066						
ANR	1967701	Symbol	fgets		1967066						
ANR	1967702	Symbol	cf -> bytes_read		1967066						
ANR	1967703	Symbol	* remaining_line		1967066						
ANR	1967704	Symbol	* value_length		1967066						
ANR	1967705	Symbol	sep_ptr		1967066						
ANR	1967706	Symbol	strlen		1967066						
ANR	1967707	Symbol	line_len		1967066						
ANR	1967708	Symbol	len		1967066						
ANR	1967709	Symbol	value_length		1967066						
ANR	1967710	Symbol	first_nonwhitespace_ptr		1967066						
ANR	1967711	Symbol	strtoul		1967066						
ANR	1967712	Symbol	cf -> line_num		1967066						
ANR	1967713	Symbol	endp		1967066						
ANR	1967714	Symbol	cf -> F		1967066						
ANR	1967715	Symbol	remaining_line		1967066						
ANR	1967716	Symbol	value		1967066						
ANR	1967717	Symbol	key		1967066						
ANR	1967718	Symbol	malloc		1967066						
ANR	1967719	Symbol	errno		1967066						
ANR	1967720	Symbol	cf		1967066						
ANR	1967721	Symbol	NULL		1967066						
ANR	1967722	Symbol	& endp		1967066						
ANR	1967723	Symbol	* line_buf		1967066						
ANR	1967724	Symbol	MAX_CONFIG_FILE_SIZE		1967066						
ANR	1967725	Symbol	isspace		1967066						
ANR	1967726	Symbol	* read_buf		1967066						
ANR	1967727	Symbol	fread		1967066						
ANR	1967728	Symbol	* first_nonwhitespace_ptr		1967066						
ANR	1967729	Symbol	cf -> filename		1967066						
ANR	1967730	Symbol	MAX_CONFIG_LINE		1967066						
ANR	1967731	Symbol	line_buf		1967066						
ANR	1967732	Symbol	* value		1967066						
ANR	1967733	Symbol	* line_len		1967066						
ANR	1967734	Symbol	feof		1967066						
