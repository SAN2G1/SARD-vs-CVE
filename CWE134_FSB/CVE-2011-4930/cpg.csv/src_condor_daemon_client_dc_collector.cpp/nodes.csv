command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3001310	File	data/converged/CVE-2011-4930_htcondor/src_condor_daemon_client_dc_collector.cpp								
ANR	3001311	Function	DCCollector :: DCCollector	34:0:1111:1291							
ANR	3001312	FunctionDef	"DCCollector :: DCCollector (const char * dcName , UpdateType uType)"		3001311	0					
ANR	3001313	CompoundStatement		36:0:1217:1291	3001311	0					
ANR	3001314	ExpressionStatement	up_type = uType	37:1:1220:1235	3001311	0	True				
ANR	3001315	AssignmentExpression	up_type = uType		3001311	0		=			
ANR	3001316	Identifier	up_type		3001311	0					
ANR	3001317	Identifier	uType		3001311	1					
ANR	3001318	ExpressionStatement	init ( true )	38:1:1238:1250	3001311	1	True				
ANR	3001319	CallExpression	init ( true )		3001311	0					
ANR	3001320	Callee	init		3001311	0					
ANR	3001321	Identifier	init		3001311	0					
ANR	3001322	ArgumentList	true		3001311	1					
ANR	3001323	Argument	true		3001311	0					
ANR	3001324	Identifier	true		3001311	0					
ANR	3001325	ExpressionStatement	adSeqMan = new DCCollectorAdSeqMan ( )	39:1:1253:1289	3001311	2	True				
ANR	3001326	AssignmentExpression	adSeqMan = new DCCollectorAdSeqMan ( )		3001311	0		=			
ANR	3001327	Identifier	adSeqMan		3001311	0					
ANR	3001328	UnaryExpression	new DCCollectorAdSeqMan ( )		3001311	1					
ANR	3001329	Identifier	DCCollector :: DCCollector		3001311	1					
ANR	3001330	ParameterList	"const char * dcName , UpdateType uType"		3001311	2					
ANR	3001331	Parameter	const char * dcName	34:26:1137:1154	3001311	0	True				
ANR	3001332	ParameterType	const char *		3001311	0					
ANR	3001333	Identifier	dcName		3001311	1					
ANR	3001334	Parameter	UpdateType uType	34:46:1157:1172	3001311	1	True				
ANR	3001335	ParameterType	UpdateType		3001311	0					
ANR	3001336	Identifier	uType		3001311	1					
ANR	3001337	CFGEntryNode	ENTRY		3001311		True				
ANR	3001338	CFGExitNode	EXIT		3001311		True				
ANR	3001339	Symbol	dcName		3001311						
ANR	3001340	Symbol	uType		3001311						
ANR	3001341	Symbol	up_type		3001311						
ANR	3001342	Symbol	true		3001311						
ANR	3001343	Symbol	adSeqMan		3001311						
ANR	3001344	Function	DCCollector :: init	43:0:1295:1676							
ANR	3001345	FunctionDef	DCCollector :: init (bool needs_reconfig)		3001344	0					
ANR	3001346	CompoundStatement		45:0:1341:1676	3001344	0					
ANR	3001347	ExpressionStatement	pending_update_list = NULL	46:1:1344:1370	3001344	0	True				
ANR	3001348	AssignmentExpression	pending_update_list = NULL		3001344	0		=			
ANR	3001349	Identifier	pending_update_list		3001344	0					
ANR	3001350	Identifier	NULL		3001344	1					
ANR	3001351	ExpressionStatement	update_rsock = NULL	47:1:1373:1392	3001344	1	True				
ANR	3001352	AssignmentExpression	update_rsock = NULL		3001344	0		=			
ANR	3001353	Identifier	update_rsock		3001344	0					
ANR	3001354	Identifier	NULL		3001344	1					
ANR	3001355	ExpressionStatement	tcp_collector_host = NULL	48:1:1395:1420	3001344	2	True				
ANR	3001356	AssignmentExpression	tcp_collector_host = NULL		3001344	0		=			
ANR	3001357	Identifier	tcp_collector_host		3001344	0					
ANR	3001358	Identifier	NULL		3001344	1					
ANR	3001359	ExpressionStatement	tcp_collector_addr = NULL	49:1:1423:1448	3001344	3	True				
ANR	3001360	AssignmentExpression	tcp_collector_addr = NULL		3001344	0		=			
ANR	3001361	Identifier	tcp_collector_addr		3001344	0					
ANR	3001362	Identifier	NULL		3001344	1					
ANR	3001363	ExpressionStatement	tcp_collector_port = 0	50:1:1451:1473	3001344	4	True				
ANR	3001364	AssignmentExpression	tcp_collector_port = 0		3001344	0		=			
ANR	3001365	Identifier	tcp_collector_port		3001344	0					
ANR	3001366	PrimaryExpression	0		3001344	1					
ANR	3001367	ExpressionStatement	use_tcp = false	51:1:1476:1491	3001344	5	True				
ANR	3001368	AssignmentExpression	use_tcp = false		3001344	0		=			
ANR	3001369	Identifier	use_tcp		3001344	0					
ANR	3001370	Identifier	false		3001344	1					
ANR	3001371	ExpressionStatement	use_nonblocking_update = true	52:1:1494:1523	3001344	6	True				
ANR	3001372	AssignmentExpression	use_nonblocking_update = true		3001344	0		=			
ANR	3001373	Identifier	use_nonblocking_update		3001344	0					
ANR	3001374	Identifier	true		3001344	1					
ANR	3001375	ExpressionStatement	udp_update_destination = NULL	53:1:1526:1555	3001344	7	True				
ANR	3001376	AssignmentExpression	udp_update_destination = NULL		3001344	0		=			
ANR	3001377	Identifier	udp_update_destination		3001344	0					
ANR	3001378	Identifier	NULL		3001344	1					
ANR	3001379	ExpressionStatement	tcp_update_destination = NULL	54:1:1558:1587	3001344	8	True				
ANR	3001380	AssignmentExpression	tcp_update_destination = NULL		3001344	0		=			
ANR	3001381	Identifier	tcp_update_destination		3001344	0					
ANR	3001382	Identifier	NULL		3001344	1					
ANR	3001383	ExpressionStatement	startTime = time ( NULL )	55:1:1590:1614	3001344	9	True				
ANR	3001384	AssignmentExpression	startTime = time ( NULL )		3001344	0		=			
ANR	3001385	Identifier	startTime		3001344	0					
ANR	3001386	CallExpression	time ( NULL )		3001344	1					
ANR	3001387	Callee	time		3001344	0					
ANR	3001388	Identifier	time		3001344	0					
ANR	3001389	ArgumentList	NULL		3001344	1					
ANR	3001390	Argument	NULL		3001344	0					
ANR	3001391	Identifier	NULL		3001344	0					
ANR	3001392	ExpressionStatement	adSeqMan = NULL	56:1:1617:1632	3001344	10	True				
ANR	3001393	AssignmentExpression	adSeqMan = NULL		3001344	0		=			
ANR	3001394	Identifier	adSeqMan		3001344	0					
ANR	3001395	Identifier	NULL		3001344	1					
ANR	3001396	IfStatement	if ( needs_reconfig )		3001344	11					
ANR	3001397	Condition	needs_reconfig	58:5:1640:1653	3001344	0	True				
ANR	3001398	Identifier	needs_reconfig		3001344	0					
ANR	3001399	CompoundStatement		14:22:315:315	3001344	1					
ANR	3001400	ExpressionStatement	reconfig ( )	59:2:1661:1671	3001344	0	True				
ANR	3001401	CallExpression	reconfig ( )		3001344	0					
ANR	3001402	Callee	reconfig		3001344	0					
ANR	3001403	Identifier	reconfig		3001344	0					
ANR	3001404	ArgumentList			3001344	1					
ANR	3001405	ReturnType	void		3001344	1					
ANR	3001406	Identifier	DCCollector :: init		3001344	2					
ANR	3001407	ParameterList	bool needs_reconfig		3001344	3					
ANR	3001408	Parameter	bool needs_reconfig	44:19:1319:1337	3001344	0	True				
ANR	3001409	ParameterType	bool		3001344	0					
ANR	3001410	Identifier	needs_reconfig		3001344	1					
ANR	3001411	CFGEntryNode	ENTRY		3001344		True				
ANR	3001412	CFGExitNode	EXIT		3001344		True				
ANR	3001413	Symbol	pending_update_list		3001344						
ANR	3001414	Symbol	NULL		3001344						
ANR	3001415	Symbol	false		3001344						
ANR	3001416	Symbol	tcp_collector_addr		3001344						
ANR	3001417	Symbol	tcp_update_destination		3001344						
ANR	3001418	Symbol	update_rsock		3001344						
ANR	3001419	Symbol	tcp_collector_host		3001344						
ANR	3001420	Symbol	udp_update_destination		3001344						
ANR	3001421	Symbol	true		3001344						
ANR	3001422	Symbol	adSeqMan		3001344						
ANR	3001423	Symbol	startTime		3001344						
ANR	3001424	Symbol	use_tcp		3001344						
ANR	3001425	Symbol	use_nonblocking_update		3001344						
ANR	3001426	Symbol	time		3001344						
ANR	3001427	Symbol	tcp_collector_port		3001344						
ANR	3001428	Symbol	needs_reconfig		3001344						
ANR	3001429	Function	DCCollector :: DCCollector	64:0:1680:1784							
ANR	3001430	FunctionDef	DCCollector :: DCCollector (const DCCollector & copy)		3001429	0					
ANR	3001431	CompoundStatement		65:0:1747:1784	3001429	0					
ANR	3001432	ExpressionStatement	init ( false )	66:1:1750:1763	3001429	0	True				
ANR	3001433	CallExpression	init ( false )		3001429	0					
ANR	3001434	Callee	init		3001429	0					
ANR	3001435	Identifier	init		3001429	0					
ANR	3001436	ArgumentList	false		3001429	1					
ANR	3001437	Argument	false		3001429	0					
ANR	3001438	Identifier	false		3001429	0					
ANR	3001439	ExpressionStatement	deepCopy ( copy )	67:1:1766:1782	3001429	1	True				
ANR	3001440	CallExpression	deepCopy ( copy )		3001429	0					
ANR	3001441	Callee	deepCopy		3001429	0					
ANR	3001442	Identifier	deepCopy		3001429	0					
ANR	3001443	ArgumentList	copy		3001429	1					
ANR	3001444	Argument	copy		3001429	0					
ANR	3001445	Identifier	copy		3001429	0					
ANR	3001446	Identifier	DCCollector :: DCCollector		3001429	1					
ANR	3001447	ParameterList	const DCCollector & copy		3001429	2					
ANR	3001448	Parameter	const DCCollector & copy	64:26:1706:1728	3001429	0	True				
ANR	3001449	ParameterType	const DCCollector &		3001429	0					
ANR	3001450	Identifier	copy		3001429	1					
ANR	3001451	CFGEntryNode	ENTRY		3001429		True				
ANR	3001452	CFGExitNode	EXIT		3001429		True				
ANR	3001453	Symbol	false		3001429						
ANR	3001454	Symbol	copy		3001429						
ANR	3001455	Function	operator =	72:13:1814:1947							
ANR	3001456	FunctionDef	operator = (const DCCollector & copy)		3001455	0					
ANR	3001457	CompoundStatement		73:0:1853:1947	3001455	0					
ANR	3001458	IfStatement	if ( & copy != this )		3001455	0					
ANR	3001459	Condition	& copy != this	75:8:1888:1900	3001455	0	True				
ANR	3001460	EqualityExpression	& copy != this		3001455	0		!=			
ANR	3001461	UnaryOperationExpression	& copy		3001455	0					
ANR	3001462	UnaryOperator	&		3001455	0					
ANR	3001463	Identifier	copy		3001455	1					
ANR	3001464	Identifier	this		3001455	1					
ANR	3001465	CompoundStatement		3:23:49:49	3001455	1					
ANR	3001466	ExpressionStatement	deepCopy ( copy )	76:2:1907:1923	3001455	0	True				
ANR	3001467	CallExpression	deepCopy ( copy )		3001455	0					
ANR	3001468	Callee	deepCopy		3001455	0					
ANR	3001469	Identifier	deepCopy		3001455	0					
ANR	3001470	ArgumentList	copy		3001455	1					
ANR	3001471	Argument	copy		3001455	0					
ANR	3001472	Identifier	copy		3001455	0					
ANR	3001473	ReturnStatement	return * this ;	79:4:1933:1945	3001455	1	True				
ANR	3001474	UnaryOperationExpression	* this		3001455	0					
ANR	3001475	UnaryOperator	*		3001455	0					
ANR	3001476	Identifier	this		3001455	1					
ANR	3001477	Identifier	operator =		3001455	1					
ANR	3001478	ParameterList	const DCCollector & copy		3001455	2					
ANR	3001479	Parameter	const DCCollector & copy	72:26:1827:1849	3001455	0	True				
ANR	3001480	ParameterType	const DCCollector &		3001455	0					
ANR	3001481	Identifier	copy		3001455	1					
ANR	3001482	CFGEntryNode	ENTRY		3001455		True				
ANR	3001483	CFGExitNode	EXIT		3001455		True				
ANR	3001484	Symbol	* this		3001455						
ANR	3001485	Symbol	& copy		3001455						
ANR	3001486	Symbol	this		3001455						
ANR	3001487	Symbol	copy		3001455						
ANR	3001488	Function	DCCollector :: deepCopy	83:0:1951:3624							
ANR	3001489	FunctionDef	DCCollector :: deepCopy (const DCCollector & copy)		3001488	0					
ANR	3001490	CompoundStatement		85:0:2005:3624	3001488	0					
ANR	3001491	IfStatement	if ( update_rsock )		3001488	0					
ANR	3001492	Condition	update_rsock	86:5:2012:2023	3001488	0	True				
ANR	3001493	Identifier	update_rsock		3001488	0					
ANR	3001494	CompoundStatement		2:20:21:21	3001488	1					
ANR	3001495	Statement	delete	87:2:2031:2036	3001488	0	True				
ANR	3001496	ExpressionStatement	update_rsock	87:9:2038:2050	3001488	1	True				
ANR	3001497	Identifier	update_rsock		3001488	0					
ANR	3001498	ExpressionStatement	update_rsock = NULL	88:2:2054:2073	3001488	2	True				
ANR	3001499	AssignmentExpression	update_rsock = NULL		3001488	0		=			
ANR	3001500	Identifier	update_rsock		3001488	0					
ANR	3001501	Identifier	NULL		3001488	1					
ANR	3001502	IfStatement	if ( tcp_collector_host )		3001488	1					
ANR	3001503	Condition	tcp_collector_host	103:5:2706:2723	3001488	0	True				
ANR	3001504	Identifier	tcp_collector_host		3001488	0					
ANR	3001505	CompoundStatement		19:26:721:721	3001488	1					
ANR	3001506	Statement	delete	104:2:2731:2736	3001488	0	True				
ANR	3001507	Statement	[	104:9:2738:2738	3001488	1	True				
ANR	3001508	Statement	]	104:10:2739:2739	3001488	2	True				
ANR	3001509	ExpressionStatement	tcp_collector_host	104:12:2741:2759	3001488	3	True				
ANR	3001510	Identifier	tcp_collector_host		3001488	0					
ANR	3001511	ExpressionStatement	tcp_collector_host = strnewp ( copy . tcp_collector_host )	106:1:2765:2820	3001488	2	True				
ANR	3001512	AssignmentExpression	tcp_collector_host = strnewp ( copy . tcp_collector_host )		3001488	0		=			
ANR	3001513	Identifier	tcp_collector_host		3001488	0					
ANR	3001514	CallExpression	strnewp ( copy . tcp_collector_host )		3001488	1					
ANR	3001515	Callee	strnewp		3001488	0					
ANR	3001516	Identifier	strnewp		3001488	0					
ANR	3001517	ArgumentList	copy . tcp_collector_host		3001488	1					
ANR	3001518	Argument	copy . tcp_collector_host		3001488	0					
ANR	3001519	MemberAccess	copy . tcp_collector_host		3001488	0					
ANR	3001520	Identifier	copy		3001488	0					
ANR	3001521	Identifier	tcp_collector_host		3001488	1					
ANR	3001522	IfStatement	if ( tcp_collector_addr )		3001488	3					
ANR	3001523	Condition	tcp_collector_addr	108:5:2828:2845	3001488	0	True				
ANR	3001524	Identifier	tcp_collector_addr		3001488	0					
ANR	3001525	CompoundStatement		24:26:843:843	3001488	1					
ANR	3001526	Statement	delete	109:2:2853:2858	3001488	0	True				
ANR	3001527	Statement	[	109:9:2860:2860	3001488	1	True				
ANR	3001528	Statement	]	109:10:2861:2861	3001488	2	True				
ANR	3001529	ExpressionStatement	tcp_collector_addr	109:12:2863:2881	3001488	3	True				
ANR	3001530	Identifier	tcp_collector_addr		3001488	0					
ANR	3001531	ExpressionStatement	tcp_collector_addr = strnewp ( copy . tcp_collector_addr )	111:1:2887:2942	3001488	4	True				
ANR	3001532	AssignmentExpression	tcp_collector_addr = strnewp ( copy . tcp_collector_addr )		3001488	0		=			
ANR	3001533	Identifier	tcp_collector_addr		3001488	0					
ANR	3001534	CallExpression	strnewp ( copy . tcp_collector_addr )		3001488	1					
ANR	3001535	Callee	strnewp		3001488	0					
ANR	3001536	Identifier	strnewp		3001488	0					
ANR	3001537	ArgumentList	copy . tcp_collector_addr		3001488	1					
ANR	3001538	Argument	copy . tcp_collector_addr		3001488	0					
ANR	3001539	MemberAccess	copy . tcp_collector_addr		3001488	0					
ANR	3001540	Identifier	copy		3001488	0					
ANR	3001541	Identifier	tcp_collector_addr		3001488	1					
ANR	3001542	ExpressionStatement	tcp_collector_port = copy . tcp_collector_port	113:1:2946:2990	3001488	5	True				
ANR	3001543	AssignmentExpression	tcp_collector_port = copy . tcp_collector_port		3001488	0		=			
ANR	3001544	Identifier	tcp_collector_port		3001488	0					
ANR	3001545	MemberAccess	copy . tcp_collector_port		3001488	1					
ANR	3001546	Identifier	copy		3001488	0					
ANR	3001547	Identifier	tcp_collector_port		3001488	1					
ANR	3001548	ExpressionStatement	use_tcp = copy . use_tcp	115:1:2994:3016	3001488	6	True				
ANR	3001549	AssignmentExpression	use_tcp = copy . use_tcp		3001488	0		=			
ANR	3001550	Identifier	use_tcp		3001488	0					
ANR	3001551	MemberAccess	copy . use_tcp		3001488	1					
ANR	3001552	Identifier	copy		3001488	0					
ANR	3001553	Identifier	use_tcp		3001488	1					
ANR	3001554	ExpressionStatement	use_nonblocking_update = copy . use_nonblocking_update	116:1:3019:3071	3001488	7	True				
ANR	3001555	AssignmentExpression	use_nonblocking_update = copy . use_nonblocking_update		3001488	0		=			
ANR	3001556	Identifier	use_nonblocking_update		3001488	0					
ANR	3001557	MemberAccess	copy . use_nonblocking_update		3001488	1					
ANR	3001558	Identifier	copy		3001488	0					
ANR	3001559	Identifier	use_nonblocking_update		3001488	1					
ANR	3001560	ExpressionStatement	up_type = copy . up_type	118:1:3075:3097	3001488	8	True				
ANR	3001561	AssignmentExpression	up_type = copy . up_type		3001488	0		=			
ANR	3001562	Identifier	up_type		3001488	0					
ANR	3001563	MemberAccess	copy . up_type		3001488	1					
ANR	3001564	Identifier	copy		3001488	0					
ANR	3001565	Identifier	up_type		3001488	1					
ANR	3001566	IfStatement	if ( udp_update_destination )		3001488	9					
ANR	3001567	Condition	udp_update_destination	120:5:3105:3126	3001488	0	True				
ANR	3001568	Identifier	udp_update_destination		3001488	0					
ANR	3001569	CompoundStatement		36:30:1124:1124	3001488	1					
ANR	3001570	Statement	delete	121:8:3140:3145	3001488	0	True				
ANR	3001571	Statement	[	121:15:3147:3147	3001488	1	True				
ANR	3001572	Statement	]	121:16:3148:3148	3001488	2	True				
ANR	3001573	ExpressionStatement	udp_update_destination	121:18:3150:3172	3001488	3	True				
ANR	3001574	Identifier	udp_update_destination		3001488	0					
ANR	3001575	ExpressionStatement	udp_update_destination = strnewp ( copy . udp_update_destination )	123:1:3181:3244	3001488	10	True				
ANR	3001576	AssignmentExpression	udp_update_destination = strnewp ( copy . udp_update_destination )		3001488	0		=			
ANR	3001577	Identifier	udp_update_destination		3001488	0					
ANR	3001578	CallExpression	strnewp ( copy . udp_update_destination )		3001488	1					
ANR	3001579	Callee	strnewp		3001488	0					
ANR	3001580	Identifier	strnewp		3001488	0					
ANR	3001581	ArgumentList	copy . udp_update_destination		3001488	1					
ANR	3001582	Argument	copy . udp_update_destination		3001488	0					
ANR	3001583	MemberAccess	copy . udp_update_destination		3001488	0					
ANR	3001584	Identifier	copy		3001488	0					
ANR	3001585	Identifier	udp_update_destination		3001488	1					
ANR	3001586	IfStatement	if ( tcp_update_destination )		3001488	11					
ANR	3001587	Condition	tcp_update_destination	125:8:3255:3276	3001488	0	True				
ANR	3001588	Identifier	tcp_update_destination		3001488	0					
ANR	3001589	CompoundStatement		41:33:1274:1274	3001488	1					
ANR	3001590	Statement	delete	126:8:3290:3295	3001488	0	True				
ANR	3001591	Statement	[	126:15:3297:3297	3001488	1	True				
ANR	3001592	Statement	]	126:16:3298:3298	3001488	2	True				
ANR	3001593	ExpressionStatement	tcp_update_destination	126:18:3300:3322	3001488	3	True				
ANR	3001594	Identifier	tcp_update_destination		3001488	0					
ANR	3001595	ExpressionStatement	tcp_update_destination = strnewp ( copy . tcp_update_destination )	129:4:3332:3395	3001488	12	True				
ANR	3001596	AssignmentExpression	tcp_update_destination = strnewp ( copy . tcp_update_destination )		3001488	0		=			
ANR	3001597	Identifier	tcp_update_destination		3001488	0					
ANR	3001598	CallExpression	strnewp ( copy . tcp_update_destination )		3001488	1					
ANR	3001599	Callee	strnewp		3001488	0					
ANR	3001600	Identifier	strnewp		3001488	0					
ANR	3001601	ArgumentList	copy . tcp_update_destination		3001488	1					
ANR	3001602	Argument	copy . tcp_update_destination		3001488	0					
ANR	3001603	MemberAccess	copy . tcp_update_destination		3001488	0					
ANR	3001604	Identifier	copy		3001488	0					
ANR	3001605	Identifier	tcp_update_destination		3001488	1					
ANR	3001606	ExpressionStatement	startTime = copy . startTime	132:1:3404:3430	3001488	13	True				
ANR	3001607	AssignmentExpression	startTime = copy . startTime		3001488	0		=			
ANR	3001608	Identifier	startTime		3001488	0					
ANR	3001609	MemberAccess	copy . startTime		3001488	1					
ANR	3001610	Identifier	copy		3001488	0					
ANR	3001611	Identifier	startTime		3001488	1					
ANR	3001612	IfStatement	if ( adSeqMan )		3001488	14					
ANR	3001613	Condition	adSeqMan	134:5:3438:3445	3001488	0	True				
ANR	3001614	Identifier	adSeqMan		3001488	0					
ANR	3001615	CompoundStatement		50:16:1443:1443	3001488	1					
ANR	3001616	Statement	delete	135:2:3453:3458	3001488	0	True				
ANR	3001617	ExpressionStatement	adSeqMan	135:9:3460:3468	3001488	1	True				
ANR	3001618	Identifier	adSeqMan		3001488	0					
ANR	3001619	ExpressionStatement	adSeqMan = NULL	136:2:3472:3487	3001488	2	True				
ANR	3001620	AssignmentExpression	adSeqMan = NULL		3001488	0		=			
ANR	3001621	Identifier	adSeqMan		3001488	0					
ANR	3001622	Identifier	NULL		3001488	1					
ANR	3001623	IfStatement	if ( copy . adSeqMan )		3001488	15					
ANR	3001624	Condition	copy . adSeqMan	138:5:3497:3509	3001488	0	True				
ANR	3001625	MemberAccess	copy . adSeqMan		3001488	0					
ANR	3001626	Identifier	copy		3001488	0					
ANR	3001627	Identifier	adSeqMan		3001488	1					
ANR	3001628	CompoundStatement		54:21:1507:1507	3001488	1					
ANR	3001629	ExpressionStatement	adSeqMan = new DCCollectorAdSeqMan ( * copy . adSeqMan )	139:2:3517:3569	3001488	0	True				
ANR	3001630	AssignmentExpression	adSeqMan = new DCCollectorAdSeqMan ( * copy . adSeqMan )		3001488	0		=			
ANR	3001631	Identifier	adSeqMan		3001488	0					
ANR	3001632	UnaryOperationExpression	* copy . adSeqMan		3001488	1					
ANR	3001633	UnaryOperator	*		3001488	0					
ANR	3001634	MemberAccess	copy . adSeqMan		3001488	1					
ANR	3001635	Identifier	copy		3001488	0					
ANR	3001636	Identifier	adSeqMan		3001488	1					
ANR	3001637	ElseStatement	else		3001488	0					
ANR	3001638	CompoundStatement		56:8:1573:1573	3001488	0					
ANR	3001639	ExpressionStatement	adSeqMan = new DCCollectorAdSeqMan ( )	141:2:3583:3619	3001488	0	True				
ANR	3001640	AssignmentExpression	adSeqMan = new DCCollectorAdSeqMan ( )		3001488	0		=			
ANR	3001641	Identifier	adSeqMan		3001488	0					
ANR	3001642	UnaryExpression	new DCCollectorAdSeqMan ( )		3001488	1					
ANR	3001643	ReturnType	void		3001488	1					
ANR	3001644	Identifier	DCCollector :: deepCopy		3001488	2					
ANR	3001645	ParameterList	const DCCollector & copy		3001488	3					
ANR	3001646	Parameter	const DCCollector & copy	84:23:1979:2001	3001488	0	True				
ANR	3001647	ParameterType	const DCCollector &		3001488	0					
ANR	3001648	Identifier	copy		3001488	1					
ANR	3001649	CFGEntryNode	ENTRY		3001488		True				
ANR	3001650	CFGExitNode	EXIT		3001488		True				
ANR	3001651	Symbol	tcp_collector_addr		3001488						
ANR	3001652	Symbol	copy . up_type		3001488						
ANR	3001653	Symbol	update_rsock		3001488						
ANR	3001654	Symbol	up_type		3001488						
ANR	3001655	Symbol	strnewp		3001488						
ANR	3001656	Symbol	adSeqMan		3001488						
ANR	3001657	Symbol	startTime		3001488						
ANR	3001658	Symbol	copy		3001488						
ANR	3001659	Symbol	use_tcp		3001488						
ANR	3001660	Symbol	tcp_collector_port		3001488						
ANR	3001661	Symbol	copy . tcp_collector_port		3001488						
ANR	3001662	Symbol	copy . startTime		3001488						
ANR	3001663	Symbol	NULL		3001488						
ANR	3001664	Symbol	* copy . adSeqMan		3001488						
ANR	3001665	Symbol	tcp_update_destination		3001488						
ANR	3001666	Symbol	copy . tcp_update_destination		3001488						
ANR	3001667	Symbol	tcp_collector_host		3001488						
ANR	3001668	Symbol	udp_update_destination		3001488						
ANR	3001669	Symbol	copy . udp_update_destination		3001488						
ANR	3001670	Symbol	copy . tcp_collector_addr		3001488						
ANR	3001671	Symbol	* copy		3001488						
ANR	3001672	Symbol	copy . adSeqMan		3001488						
ANR	3001673	Symbol	copy . tcp_collector_host		3001488						
ANR	3001674	Symbol	copy . use_nonblocking_update		3001488						
ANR	3001675	Symbol	copy . use_tcp		3001488						
ANR	3001676	Symbol	use_nonblocking_update		3001488						
ANR	3001677	Function	DCCollector :: reconfig	146:0:3628:4966							
ANR	3001678	FunctionDef	DCCollector :: reconfig ()		3001677	0					
ANR	3001679	CompoundStatement		148:0:3663:4966	3001677	0					
ANR	3001680	IdentifierDeclStatement	char * tmp ;	149:1:3666:3675	3001677	0	True				
ANR	3001681	IdentifierDecl	* tmp		3001677	0					
ANR	3001682	IdentifierDeclType	char *		3001677	0					
ANR	3001683	Identifier	tmp		3001677	1					
ANR	3001684	ExpressionStatement	"tmp = param ( ""TCP_COLLECTOR_HOST"" )"	150:1:3678:3713	3001677	1	True				
ANR	3001685	AssignmentExpression	"tmp = param ( ""TCP_COLLECTOR_HOST"" )"		3001677	0		=			
ANR	3001686	Identifier	tmp		3001677	0					
ANR	3001687	CallExpression	"param ( ""TCP_COLLECTOR_HOST"" )"		3001677	1					
ANR	3001688	Callee	param		3001677	0					
ANR	3001689	Identifier	param		3001677	0					
ANR	3001690	ArgumentList	"""TCP_COLLECTOR_HOST"""		3001677	1					
ANR	3001691	Argument	"""TCP_COLLECTOR_HOST"""		3001677	0					
ANR	3001692	PrimaryExpression	"""TCP_COLLECTOR_HOST"""		3001677	0					
ANR	3001693	IfStatement	if ( tmp )		3001677	2					
ANR	3001694	Condition	tmp	151:5:3720:3722	3001677	0	True				
ANR	3001695	Identifier	tmp		3001677	0					
ANR	3001696	CompoundStatement		4:11:62:62	3001677	1					
ANR	3001697	ExpressionStatement	use_tcp = true	152:2:3730:3744	3001677	0	True				
ANR	3001698	AssignmentExpression	use_tcp = true		3001677	0		=			
ANR	3001699	Identifier	use_tcp		3001677	0					
ANR	3001700	Identifier	true		3001677	1					
ANR	3001701	IfStatement	if ( tcp_collector_host )		3001677	1					
ANR	3001702	Condition	tcp_collector_host	153:6:3752:3769	3001677	0	True				
ANR	3001703	Identifier	tcp_collector_host		3001677	0					
ANR	3001704	CompoundStatement		6:27:109:109	3001677	1					
ANR	3001705	IfStatement	"if ( strcmp ( tcp_collector_host , tmp ) )"		3001677	0					
ANR	3001706	Condition	"strcmp ( tcp_collector_host , tmp )"	154:7:3782:3812	3001677	0	True				
ANR	3001707	CallExpression	"strcmp ( tcp_collector_host , tmp )"		3001677	0					
ANR	3001708	Callee	strcmp		3001677	0					
ANR	3001709	Identifier	strcmp		3001677	0					
ANR	3001710	ArgumentList	tcp_collector_host		3001677	1					
ANR	3001711	Argument	tcp_collector_host		3001677	0					
ANR	3001712	Identifier	tcp_collector_host		3001677	0					
ANR	3001713	Argument	tmp		3001677	1					
ANR	3001714	Identifier	tmp		3001677	0					
ANR	3001715	CompoundStatement		7:41:152:152	3001677	1					
ANR	3001716	IfStatement	if ( update_rsock )		3001677	0					
ANR	3001717	Condition	update_rsock	156:8:3873:3884	3001677	0	True				
ANR	3001718	Identifier	update_rsock		3001677	0					
ANR	3001719	CompoundStatement		9:23:224:224	3001677	1					
ANR	3001720	Statement	delete	157:5:3895:3900	3001677	0	True				
ANR	3001721	ExpressionStatement	update_rsock	157:11:3901:3917	3001677	1	True				
ANR	3001722	Identifier	update_rsock		3001677	0					
ANR	3001723	ExpressionStatement	update_rsock = NULL	158:5:3924:3943	3001677	2	True				
ANR	3001724	AssignmentExpression	update_rsock = NULL		3001677	0		=			
ANR	3001725	Identifier	update_rsock		3001677	0					
ANR	3001726	Identifier	NULL		3001677	1					
ANR	3001727	Statement	delete	160:4:3955:3960	3001677	1	True				
ANR	3001728	Statement	[	160:11:3962:3962	3001677	2	True				
ANR	3001729	Statement	]	160:12:3963:3963	3001677	3	True				
ANR	3001730	ExpressionStatement	tcp_collector_host	160:14:3965:3983	3001677	4	True				
ANR	3001731	Identifier	tcp_collector_host		3001677	0					
ANR	3001732	ExpressionStatement	tcp_collector_host = strnewp ( tmp )	161:4:3989:4024	3001677	5	True				
ANR	3001733	AssignmentExpression	tcp_collector_host = strnewp ( tmp )		3001677	0		=			
ANR	3001734	Identifier	tcp_collector_host		3001677	0					
ANR	3001735	CallExpression	strnewp ( tmp )		3001677	1					
ANR	3001736	Callee	strnewp		3001677	0					
ANR	3001737	Identifier	strnewp		3001677	0					
ANR	3001738	ArgumentList	tmp		3001677	1					
ANR	3001739	Argument	tmp		3001677	0					
ANR	3001740	Identifier	tmp		3001677	0					
ANR	3001741	ElseStatement	else		3001677	0					
ANR	3001742	CompoundStatement		16:9:376:376	3001677	0					
ANR	3001743	ExpressionStatement	tcp_collector_host = strnewp ( tmp )	165:3:4085:4120	3001677	0	True				
ANR	3001744	AssignmentExpression	tcp_collector_host = strnewp ( tmp )		3001677	0		=			
ANR	3001745	Identifier	tcp_collector_host		3001677	0					
ANR	3001746	CallExpression	strnewp ( tmp )		3001677	1					
ANR	3001747	Callee	strnewp		3001677	0					
ANR	3001748	Identifier	strnewp		3001677	0					
ANR	3001749	ArgumentList	tmp		3001677	1					
ANR	3001750	Argument	tmp		3001677	0					
ANR	3001751	Identifier	tmp		3001677	0					
ANR	3001752	ExpressionStatement	free ( tmp )	167:2:4128:4139	3001677	2	True				
ANR	3001753	CallExpression	free ( tmp )		3001677	0					
ANR	3001754	Callee	free		3001677	0					
ANR	3001755	Identifier	free		3001677	0					
ANR	3001756	ArgumentList	tmp		3001677	1					
ANR	3001757	Argument	tmp		3001677	0					
ANR	3001758	Identifier	tmp		3001677	0					
ANR	3001759	ExpressionStatement	"use_nonblocking_update = param_boolean ( ""NONBLOCKING_COLLECTOR_UPDATE"" , true )"	170:1:4146:4221	3001677	3	True				
ANR	3001760	AssignmentExpression	"use_nonblocking_update = param_boolean ( ""NONBLOCKING_COLLECTOR_UPDATE"" , true )"		3001677	0		=			
ANR	3001761	Identifier	use_nonblocking_update		3001677	0					
ANR	3001762	CallExpression	"param_boolean ( ""NONBLOCKING_COLLECTOR_UPDATE"" , true )"		3001677	1					
ANR	3001763	Callee	param_boolean		3001677	0					
ANR	3001764	Identifier	param_boolean		3001677	0					
ANR	3001765	ArgumentList	"""NONBLOCKING_COLLECTOR_UPDATE"""		3001677	1					
ANR	3001766	Argument	"""NONBLOCKING_COLLECTOR_UPDATE"""		3001677	0					
ANR	3001767	PrimaryExpression	"""NONBLOCKING_COLLECTOR_UPDATE"""		3001677	0					
ANR	3001768	Argument	true		3001677	1					
ANR	3001769	Identifier	true		3001677	0					
ANR	3001770	IfStatement	if ( ! _addr )		3001677	4					
ANR	3001771	Condition	! _addr	172:5:4229:4235	3001677	0	True				
ANR	3001772	UnaryOperationExpression	! _addr		3001677	0					
ANR	3001773	UnaryOperator	!		3001677	0					
ANR	3001774	Identifier	_addr		3001677	1					
ANR	3001775	CompoundStatement		25:15:575:575	3001677	1					
ANR	3001776	ExpressionStatement	locate ( )	173:2:4243:4251	3001677	0	True				
ANR	3001777	CallExpression	locate ( )		3001677	0					
ANR	3001778	Callee	locate		3001677	0					
ANR	3001779	Identifier	locate		3001677	0					
ANR	3001780	ArgumentList			3001677	1					
ANR	3001781	IfStatement	if ( ! _is_configured )		3001677	1					
ANR	3001782	Condition	! _is_configured	174:6:4259:4274	3001677	0	True				
ANR	3001783	UnaryOperationExpression	! _is_configured		3001677	0					
ANR	3001784	UnaryOperator	!		3001677	0					
ANR	3001785	Identifier	_is_configured		3001677	1					
ANR	3001786	CompoundStatement		27:25:614:614	3001677	1					
ANR	3001787	Statement	dprintf	175:3:4283:4289	3001677	0	True				
ANR	3001788	Statement	(	175:10:4290:4290	3001677	1	True				
ANR	3001789	Statement	D_FULLDEBUG	175:12:4292:4302	3001677	2	True				
ANR	3001790	Statement	","	175:23:4303:4303	3001677	3	True				
ANR	3001791	Statement	"""COLLECTOR address not defined in """	175:25:4305:4339	3001677	4	True				
ANR	3001792	Statement	"""config file, not doing updates\\n"""	176:6:4347:4380	3001677	5	True				
ANR	3001793	Statement	)	176:41:4382:4382	3001677	6	True				
ANR	3001794	ExpressionStatement		176:42:4383:4383	3001677	7	True				
ANR	3001795	ReturnStatement	return ;	177:3:4388:4394	3001677	8	True				
ANR	3001796	ExpressionStatement	blacklisted . setTimeslice ( 0.01 )	185:1:4645:4675	3001677	5	True				
ANR	3001797	CallExpression	blacklisted . setTimeslice ( 0.01 )		3001677	0					
ANR	3001798	Callee	blacklisted . setTimeslice		3001677	0					
ANR	3001799	MemberAccess	blacklisted . setTimeslice		3001677	0					
ANR	3001800	Identifier	blacklisted		3001677	0					
ANR	3001801	Identifier	setTimeslice		3001677	1					
ANR	3001802	ArgumentList	0.01		3001677	1					
ANR	3001803	Argument	0.01		3001677	0					
ANR	3001804	PrimaryExpression	0.01		3001677	0					
ANR	3001805	IdentifierDeclStatement	"int avoid_time = param_integer ( ""DEAD_COLLECTOR_MAX_AVOIDANCE_TIME"" , 3600 ) ;"	187:1:4751:4823	3001677	6	True				
ANR	3001806	IdentifierDecl	"avoid_time = param_integer ( ""DEAD_COLLECTOR_MAX_AVOIDANCE_TIME"" , 3600 )"		3001677	0					
ANR	3001807	IdentifierDeclType	int		3001677	0					
ANR	3001808	Identifier	avoid_time		3001677	1					
ANR	3001809	AssignmentExpression	"avoid_time = param_integer ( ""DEAD_COLLECTOR_MAX_AVOIDANCE_TIME"" , 3600 )"		3001677	2		=			
ANR	3001810	Identifier	avoid_time		3001677	0					
ANR	3001811	CallExpression	"param_integer ( ""DEAD_COLLECTOR_MAX_AVOIDANCE_TIME"" , 3600 )"		3001677	1					
ANR	3001812	Callee	param_integer		3001677	0					
ANR	3001813	Identifier	param_integer		3001677	0					
ANR	3001814	ArgumentList	"""DEAD_COLLECTOR_MAX_AVOIDANCE_TIME"""		3001677	1					
ANR	3001815	Argument	"""DEAD_COLLECTOR_MAX_AVOIDANCE_TIME"""		3001677	0					
ANR	3001816	PrimaryExpression	"""DEAD_COLLECTOR_MAX_AVOIDANCE_TIME"""		3001677	0					
ANR	3001817	Argument	3600		3001677	1					
ANR	3001818	PrimaryExpression	3600		3001677	0					
ANR	3001819	ExpressionStatement	blacklisted . setMaxInterval ( avoid_time )	188:1:4826:4864	3001677	7	True				
ANR	3001820	CallExpression	blacklisted . setMaxInterval ( avoid_time )		3001677	0					
ANR	3001821	Callee	blacklisted . setMaxInterval		3001677	0					
ANR	3001822	MemberAccess	blacklisted . setMaxInterval		3001677	0					
ANR	3001823	Identifier	blacklisted		3001677	0					
ANR	3001824	Identifier	setMaxInterval		3001677	1					
ANR	3001825	ArgumentList	avoid_time		3001677	1					
ANR	3001826	Argument	avoid_time		3001677	0					
ANR	3001827	Identifier	avoid_time		3001677	0					
ANR	3001828	ExpressionStatement	blacklisted . setInitialInterval ( 0 )	189:1:4867:4900	3001677	8	True				
ANR	3001829	CallExpression	blacklisted . setInitialInterval ( 0 )		3001677	0					
ANR	3001830	Callee	blacklisted . setInitialInterval		3001677	0					
ANR	3001831	MemberAccess	blacklisted . setInitialInterval		3001677	0					
ANR	3001832	Identifier	blacklisted		3001677	0					
ANR	3001833	Identifier	setInitialInterval		3001677	1					
ANR	3001834	ArgumentList	0		3001677	1					
ANR	3001835	Argument	0		3001677	0					
ANR	3001836	PrimaryExpression	0		3001677	0					
ANR	3001837	ExpressionStatement	parseTCPInfo ( )	191:1:4904:4918	3001677	9	True				
ANR	3001838	CallExpression	parseTCPInfo ( )		3001677	0					
ANR	3001839	Callee	parseTCPInfo		3001677	0					
ANR	3001840	Identifier	parseTCPInfo		3001677	0					
ANR	3001841	ArgumentList			3001677	1					
ANR	3001842	ExpressionStatement	initDestinationStrings ( )	192:1:4921:4945	3001677	10	True				
ANR	3001843	CallExpression	initDestinationStrings ( )		3001677	0					
ANR	3001844	Callee	initDestinationStrings		3001677	0					
ANR	3001845	Identifier	initDestinationStrings		3001677	0					
ANR	3001846	ArgumentList			3001677	1					
ANR	3001847	ExpressionStatement	displayResults ( )	193:1:4948:4964	3001677	11	True				
ANR	3001848	CallExpression	displayResults ( )		3001677	0					
ANR	3001849	Callee	displayResults		3001677	0					
ANR	3001850	Identifier	displayResults		3001677	0					
ANR	3001851	ArgumentList			3001677	1					
ANR	3001852	ReturnType	void		3001677	1					
ANR	3001853	Identifier	DCCollector :: reconfig		3001677	2					
ANR	3001854	ParameterList			3001677	3					
ANR	3001855	CFGEntryNode	ENTRY		3001677		True				
ANR	3001856	CFGExitNode	EXIT		3001677		True				
ANR	3001857	Symbol	strcmp		3001677						
ANR	3001858	Symbol	_is_configured		3001677						
ANR	3001859	Symbol	NULL		3001677						
ANR	3001860	Symbol	param_boolean		3001677						
ANR	3001861	Symbol	blacklisted		3001677						
ANR	3001862	Symbol	avoid_time		3001677						
ANR	3001863	Symbol	tcp_collector_host		3001677						
ANR	3001864	Symbol	update_rsock		3001677						
ANR	3001865	Symbol	param		3001677						
ANR	3001866	Symbol	tmp		3001677						
ANR	3001867	Symbol	true		3001677						
ANR	3001868	Symbol	_addr		3001677						
ANR	3001869	Symbol	strnewp		3001677						
ANR	3001870	Symbol	param_integer		3001677						
ANR	3001871	Symbol	use_tcp		3001677						
ANR	3001872	Symbol	use_nonblocking_update		3001677						
ANR	3001873	Function	DCCollector :: parseTCPInfo	197:0:4970:6852							
ANR	3001874	FunctionDef	DCCollector :: parseTCPInfo ()		3001873	0					
ANR	3001875	CompoundStatement		199:0:5009:6852	3001873	0					
ANR	3001876	SwitchStatement	switch ( up_type )		3001873	0					
ANR	3001877	Condition	up_type	200:9:5020:5026	3001873	0	True				
ANR	3001878	Identifier	up_type		3001873	0					
ANR	3001879	CompoundStatement		11:2:134:178	3001873	1					
ANR	3001880	Label	case TCP :	201:1:5033:5041	3001873	0	True				
ANR	3001881	Identifier	TCP		3001873	0					
ANR	3001882	ExpressionStatement	use_tcp = true	202:2:5045:5059	3001873	1	True				
ANR	3001883	AssignmentExpression	use_tcp = true		3001873	0		=			
ANR	3001884	Identifier	use_tcp		3001873	0					
ANR	3001885	Identifier	true		3001873	1					
ANR	3001886	BreakStatement	break ;	203:2:5063:5068	3001873	2	True				
ANR	3001887	Label	case UDP :	204:1:5071:5079	3001873	3	True				
ANR	3001888	Identifier	UDP		3001873	0					
ANR	3001889	ExpressionStatement	use_tcp = false	205:2:5083:5098	3001873	4	True				
ANR	3001890	AssignmentExpression	use_tcp = false		3001873	0		=			
ANR	3001891	Identifier	use_tcp		3001873	0					
ANR	3001892	Identifier	false		3001873	1					
ANR	3001893	BreakStatement	break ;	206:2:5102:5107	3001873	5	True				
ANR	3001894	Label	case CONFIG :	207:1:5110:5121	3001873	6	True				
ANR	3001895	Identifier	CONFIG		3001873	0					
ANR	3001896	ExpressionStatement	use_tcp = false	208:2:5125:5140	3001873	7	True				
ANR	3001897	AssignmentExpression	use_tcp = false		3001873	0		=			
ANR	3001898	Identifier	use_tcp		3001873	0					
ANR	3001899	Identifier	false		3001873	1					
ANR	3001900	IdentifierDeclStatement	"char * tmp = param ( ""TCP_UPDATE_COLLECTORS"" ) ;"	209:2:5144:5188	3001873	8	True				
ANR	3001901	IdentifierDecl	"* tmp = param ( ""TCP_UPDATE_COLLECTORS"" )"		3001873	0					
ANR	3001902	IdentifierDeclType	char *		3001873	0					
ANR	3001903	Identifier	tmp		3001873	1					
ANR	3001904	AssignmentExpression	"* tmp = param ( ""TCP_UPDATE_COLLECTORS"" )"		3001873	2		=			
ANR	3001905	Identifier	tmp		3001873	0					
ANR	3001906	CallExpression	"param ( ""TCP_UPDATE_COLLECTORS"" )"		3001873	1					
ANR	3001907	Callee	param		3001873	0					
ANR	3001908	Identifier	param		3001873	0					
ANR	3001909	ArgumentList	"""TCP_UPDATE_COLLECTORS"""		3001873	1					
ANR	3001910	Argument	"""TCP_UPDATE_COLLECTORS"""		3001873	0					
ANR	3001911	PrimaryExpression	"""TCP_UPDATE_COLLECTORS"""		3001873	0					
ANR	3001912	IfStatement	if ( tmp )		3001873	9					
ANR	3001913	Condition	tmp	210:6:5196:5198	3001873	0	True				
ANR	3001914	Identifier	tmp		3001873	0					
ANR	3001915	CompoundStatement		13:3:197:222	3001873	1					
ANR	3001916	IdentifierDeclStatement	StringList tcp_collectors ;	211:3:5207:5232	3001873	0	True				
ANR	3001917	IdentifierDecl	tcp_collectors		3001873	0					
ANR	3001918	IdentifierDeclType	StringList		3001873	0					
ANR	3001919	Identifier	tcp_collectors		3001873	1					
ANR	3001920	ExpressionStatement	tcp_collectors . initializeFromString ( tmp )	213:3:5238:5280	3001873	1	True				
ANR	3001921	CallExpression	tcp_collectors . initializeFromString ( tmp )		3001873	0					
ANR	3001922	Callee	tcp_collectors . initializeFromString		3001873	0					
ANR	3001923	MemberAccess	tcp_collectors . initializeFromString		3001873	0					
ANR	3001924	Identifier	tcp_collectors		3001873	0					
ANR	3001925	Identifier	initializeFromString		3001873	1					
ANR	3001926	ArgumentList	tmp		3001873	1					
ANR	3001927	Argument	tmp		3001873	0					
ANR	3001928	Identifier	tmp		3001873	0					
ANR	3001929	ExpressionStatement	free ( tmp )	214:3:5285:5296	3001873	2	True				
ANR	3001930	CallExpression	free ( tmp )		3001873	0					
ANR	3001931	Callee	free		3001873	0					
ANR	3001932	Identifier	free		3001873	0					
ANR	3001933	ArgumentList	tmp		3001873	1					
ANR	3001934	Argument	tmp		3001873	0					
ANR	3001935	Identifier	tmp		3001873	0					
ANR	3001936	IfStatement	if ( _name && tcp_collectors . contains_anycase_withwildcard ( _name ) )		3001873	3					
ANR	3001937	Condition	_name && tcp_collectors . contains_anycase_withwildcard ( _name )	215:8:5306:5370	3001873	0	True				
ANR	3001938	AndExpression	_name && tcp_collectors . contains_anycase_withwildcard ( _name )		3001873	0		&&			
ANR	3001939	Identifier	_name		3001873	0					
ANR	3001940	CallExpression	tcp_collectors . contains_anycase_withwildcard ( _name )		3001873	1					
ANR	3001941	Callee	tcp_collectors . contains_anycase_withwildcard		3001873	0					
ANR	3001942	MemberAccess	tcp_collectors . contains_anycase_withwildcard		3001873	0					
ANR	3001943	Identifier	tcp_collectors		3001873	0					
ANR	3001944	Identifier	contains_anycase_withwildcard		3001873	1					
ANR	3001945	ArgumentList	_name		3001873	1					
ANR	3001946	Argument	_name		3001873	0					
ANR	3001947	Identifier	_name		3001873	0					
ANR	3001948	CompoundStatement		19:3:367:367	3001873	1					
ANR	3001949	ExpressionStatement	use_tcp = true	218:4:5384:5398	3001873	0	True				
ANR	3001950	AssignmentExpression	use_tcp = true		3001873	0		=			
ANR	3001951	Identifier	use_tcp		3001873	0					
ANR	3001952	Identifier	true		3001873	1					
ANR	3001953	BreakStatement	break ;	219:4:5404:5409	3001873	1	True				
ANR	3001954	ExpressionStatement	"use_tcp = param_boolean ( ""UPDATE_COLLECTOR_WITH_TCP"" , use_tcp )"	222:2:5422:5485	3001873	10	True				
ANR	3001955	AssignmentExpression	"use_tcp = param_boolean ( ""UPDATE_COLLECTOR_WITH_TCP"" , use_tcp )"		3001873	0		=			
ANR	3001956	Identifier	use_tcp		3001873	0					
ANR	3001957	CallExpression	"param_boolean ( ""UPDATE_COLLECTOR_WITH_TCP"" , use_tcp )"		3001873	1					
ANR	3001958	Callee	param_boolean		3001873	0					
ANR	3001959	Identifier	param_boolean		3001873	0					
ANR	3001960	ArgumentList	"""UPDATE_COLLECTOR_WITH_TCP"""		3001873	1					
ANR	3001961	Argument	"""UPDATE_COLLECTOR_WITH_TCP"""		3001873	0					
ANR	3001962	PrimaryExpression	"""UPDATE_COLLECTOR_WITH_TCP"""		3001873	0					
ANR	3001963	Argument	use_tcp		3001873	1					
ANR	3001964	Identifier	use_tcp		3001873	0					
ANR	3001965	IfStatement	if ( ! hasUDPCommandPort ( ) )		3001873	11					
ANR	3001966	Condition	! hasUDPCommandPort ( )	223:6:5493:5512	3001873	0	True				
ANR	3001967	UnaryOperationExpression	! hasUDPCommandPort ( )		3001873	0					
ANR	3001968	UnaryOperator	!		3001873	0					
ANR	3001969	CallExpression	hasUDPCommandPort ( )		3001873	1					
ANR	3001970	Callee	hasUDPCommandPort		3001873	0					
ANR	3001971	Identifier	hasUDPCommandPort		3001873	0					
ANR	3001972	ArgumentList			3001873	1					
ANR	3001973	CompoundStatement		25:29:506:506	3001873	1					
ANR	3001974	ExpressionStatement	use_tcp = true	224:3:5521:5535	3001873	0	True				
ANR	3001975	AssignmentExpression	use_tcp = true		3001873	0		=			
ANR	3001976	Identifier	use_tcp		3001873	0					
ANR	3001977	Identifier	true		3001873	1					
ANR	3001978	BreakStatement	break ;	226:2:5543:5548	3001873	12	True				
ANR	3001979	IfStatement	if ( tcp_collector_addr )		3001873	1					
ANR	3001980	Condition	tcp_collector_addr	229:5:5559:5576	3001873	0	True				
ANR	3001981	Identifier	tcp_collector_addr		3001873	0					
ANR	3001982	CompoundStatement		31:26:570:570	3001873	1					
ANR	3001983	Statement	delete	230:2:5584:5589	3001873	0	True				
ANR	3001984	Statement	[	230:9:5591:5591	3001873	1	True				
ANR	3001985	Statement	]	230:10:5592:5592	3001873	2	True				
ANR	3001986	ExpressionStatement	tcp_collector_addr	230:12:5594:5612	3001873	3	True				
ANR	3001987	Identifier	tcp_collector_addr		3001873	0					
ANR	3001988	ExpressionStatement	tcp_collector_addr = NULL	231:2:5616:5641	3001873	4	True				
ANR	3001989	AssignmentExpression	tcp_collector_addr = NULL		3001873	0		=			
ANR	3001990	Identifier	tcp_collector_addr		3001873	0					
ANR	3001991	Identifier	NULL		3001873	1					
ANR	3001992	IfStatement	if ( ! tcp_collector_host )		3001873	2					
ANR	3001993	Condition	! tcp_collector_host	234:5:5652:5671	3001873	0	True				
ANR	3001994	UnaryOperationExpression	! tcp_collector_host		3001873	0					
ANR	3001995	UnaryOperator	!		3001873	0					
ANR	3001996	Identifier	tcp_collector_host		3001873	1					
ANR	3001997	CompoundStatement		36:28:665:665	3001873	1					
ANR	3001998	ExpressionStatement	tcp_collector_port = _port	237:2:5769:5795	3001873	0	True				
ANR	3001999	AssignmentExpression	tcp_collector_port = _port		3001873	0		=			
ANR	3002000	Identifier	tcp_collector_port		3001873	0					
ANR	3002001	Identifier	_port		3001873	1					
ANR	3002002	ExpressionStatement	tcp_collector_addr = strnewp ( _addr )	238:2:5799:5836	3001873	1	True				
ANR	3002003	AssignmentExpression	tcp_collector_addr = strnewp ( _addr )		3001873	0		=			
ANR	3002004	Identifier	tcp_collector_addr		3001873	0					
ANR	3002005	CallExpression	strnewp ( _addr )		3001873	1					
ANR	3002006	Callee	strnewp		3001873	0					
ANR	3002007	Identifier	strnewp		3001873	0					
ANR	3002008	ArgumentList	_addr		3001873	1					
ANR	3002009	Argument	_addr		3001873	0					
ANR	3002010	Identifier	_addr		3001873	0					
ANR	3002011	ElseStatement	else		3001873	0					
ANR	3002012	CompoundStatement		54:2:1345:1363	3001873	0					
ANR	3002013	IfStatement	if ( is_valid_sinful ( tcp_collector_host ) )		3001873	0					
ANR	3002014	Condition	is_valid_sinful ( tcp_collector_host )	243:6:6019:6053	3001873	0	True				
ANR	3002015	CallExpression	is_valid_sinful ( tcp_collector_host )		3001873	0					
ANR	3002016	Callee	is_valid_sinful		3001873	0					
ANR	3002017	Identifier	is_valid_sinful		3001873	0					
ANR	3002018	ArgumentList	tcp_collector_host		3001873	1					
ANR	3002019	Argument	tcp_collector_host		3001873	0					
ANR	3002020	Identifier	tcp_collector_host		3001873	0					
ANR	3002021	CompoundStatement		45:44:1047:1047	3001873	1					
ANR	3002022	ExpressionStatement	tcp_collector_addr = strnewp ( tcp_collector_host )	244:3:6062:6112	3001873	0	True				
ANR	3002023	AssignmentExpression	tcp_collector_addr = strnewp ( tcp_collector_host )		3001873	0		=			
ANR	3002024	Identifier	tcp_collector_addr		3001873	0					
ANR	3002025	CallExpression	strnewp ( tcp_collector_host )		3001873	1					
ANR	3002026	Callee	strnewp		3001873	0					
ANR	3002027	Identifier	strnewp		3001873	0					
ANR	3002028	ArgumentList	tcp_collector_host		3001873	1					
ANR	3002029	Argument	tcp_collector_host		3001873	0					
ANR	3002030	Identifier	tcp_collector_host		3001873	0					
ANR	3002031	ExpressionStatement	tcp_collector_port = string_to_port ( tcp_collector_host )	245:3:6117:6174	3001873	1	True				
ANR	3002032	AssignmentExpression	tcp_collector_port = string_to_port ( tcp_collector_host )		3001873	0		=			
ANR	3002033	Identifier	tcp_collector_port		3001873	0					
ANR	3002034	CallExpression	string_to_port ( tcp_collector_host )		3001873	1					
ANR	3002035	Callee	string_to_port		3001873	0					
ANR	3002036	Identifier	string_to_port		3001873	0					
ANR	3002037	ArgumentList	tcp_collector_host		3001873	1					
ANR	3002038	Argument	tcp_collector_host		3001873	0					
ANR	3002039	Identifier	tcp_collector_host		3001873	0					
ANR	3002040	ReturnStatement	return ;	246:3:6179:6185	3001873	2	True				
ANR	3002041	IdentifierDeclStatement	char * host = strnewp ( tcp_collector_host ) ;	251:2:6309:6351	3001873	1	True				
ANR	3002042	IdentifierDecl	* host = strnewp ( tcp_collector_host )		3001873	0					
ANR	3002043	IdentifierDeclType	char *		3001873	0					
ANR	3002044	Identifier	host		3001873	1					
ANR	3002045	AssignmentExpression	* host = strnewp ( tcp_collector_host )		3001873	2		=			
ANR	3002046	Identifier	host		3001873	0					
ANR	3002047	CallExpression	strnewp ( tcp_collector_host )		3001873	1					
ANR	3002048	Callee	strnewp		3001873	0					
ANR	3002049	Identifier	strnewp		3001873	0					
ANR	3002050	ArgumentList	tcp_collector_host		3001873	1					
ANR	3002051	Argument	tcp_collector_host		3001873	0					
ANR	3002052	Identifier	tcp_collector_host		3001873	0					
ANR	3002053	IdentifierDeclStatement	char * colon = NULL ;	252:2:6355:6373	3001873	2	True				
ANR	3002054	IdentifierDecl	* colon = NULL		3001873	0					
ANR	3002055	IdentifierDeclType	char *		3001873	0					
ANR	3002056	Identifier	colon		3001873	1					
ANR	3002057	AssignmentExpression	* colon = NULL		3001873	2		=			
ANR	3002058	Identifier	NULL		3001873	0					
ANR	3002059	Identifier	NULL		3001873	1					
ANR	3002060	IfStatement	"if ( ! ( colon = strchr ( host , ':' ) ) )"		3001873	3					
ANR	3002061	Condition	"! ( colon = strchr ( host , ':' ) )"	253:6:6381:6408	3001873	0	True				
ANR	3002062	UnaryOperationExpression	"! ( colon = strchr ( host , ':' ) )"		3001873	0					
ANR	3002063	UnaryOperator	!		3001873	0					
ANR	3002064	AssignmentExpression	"colon = strchr ( host , ':' )"		3001873	1		=			
ANR	3002065	Identifier	colon		3001873	0					
ANR	3002066	CallExpression	"strchr ( host , ':' )"		3001873	1					
ANR	3002067	Callee	strchr		3001873	0					
ANR	3002068	Identifier	strchr		3001873	0					
ANR	3002069	ArgumentList	host		3001873	1					
ANR	3002070	Argument	host		3001873	0					
ANR	3002071	Identifier	host		3001873	0					
ANR	3002072	Argument	':'		3001873	1					
ANR	3002073	PrimaryExpression	':'		3001873	0					
ANR	3002074	CompoundStatement		55:37:1402:1402	3001873	1					
ANR	3002075	ExpressionStatement	tcp_collector_port = COLLECTOR_PORT	256:3:6506:6541	3001873	0	True				
ANR	3002076	AssignmentExpression	tcp_collector_port = COLLECTOR_PORT		3001873	0		=			
ANR	3002077	Identifier	tcp_collector_port		3001873	0					
ANR	3002078	Identifier	COLLECTOR_PORT		3001873	1					
ANR	3002079	ExpressionStatement	tcp_collector_addr = strnewp ( tcp_collector_host )	257:3:6546:6596	3001873	1	True				
ANR	3002080	AssignmentExpression	tcp_collector_addr = strnewp ( tcp_collector_host )		3001873	0		=			
ANR	3002081	Identifier	tcp_collector_addr		3001873	0					
ANR	3002082	CallExpression	strnewp ( tcp_collector_host )		3001873	1					
ANR	3002083	Callee	strnewp		3001873	0					
ANR	3002084	Identifier	strnewp		3001873	0					
ANR	3002085	ArgumentList	tcp_collector_host		3001873	1					
ANR	3002086	Argument	tcp_collector_host		3001873	0					
ANR	3002087	Identifier	tcp_collector_host		3001873	0					
ANR	3002088	ElseStatement	else		3001873	0					
ANR	3002089	CompoundStatement		60:9:1597:1597	3001873	0					
ANR	3002090	ExpressionStatement	* colon = '\\0'	261:3:6720:6733	3001873	0	True				
ANR	3002091	AssignmentExpression	* colon = '\\0'		3001873	0		=			
ANR	3002092	UnaryOperationExpression	* colon		3001873	0					
ANR	3002093	UnaryOperator	*		3001873	0					
ANR	3002094	Identifier	colon		3001873	1					
ANR	3002095	PrimaryExpression	'\\0'		3001873	1					
ANR	3002096	ExpressionStatement	tcp_collector_addr = strnewp ( host )	262:3:6738:6774	3001873	1	True				
ANR	3002097	AssignmentExpression	tcp_collector_addr = strnewp ( host )		3001873	0		=			
ANR	3002098	Identifier	tcp_collector_addr		3001873	0					
ANR	3002099	CallExpression	strnewp ( host )		3001873	1					
ANR	3002100	Callee	strnewp		3001873	0					
ANR	3002101	Identifier	strnewp		3001873	0					
ANR	3002102	ArgumentList	host		3001873	1					
ANR	3002103	Argument	host		3001873	0					
ANR	3002104	Identifier	host		3001873	0					
ANR	3002105	ExpressionStatement	colon ++	263:3:6779:6786	3001873	2	True				
ANR	3002106	PostIncDecOperationExpression	colon ++		3001873	0					
ANR	3002107	Identifier	colon		3001873	0					
ANR	3002108	IncDec	++		3001873	1					
ANR	3002109	ExpressionStatement	tcp_collector_port = atoi ( colon )	264:3:6791:6825	3001873	3	True				
ANR	3002110	AssignmentExpression	tcp_collector_port = atoi ( colon )		3001873	0		=			
ANR	3002111	Identifier	tcp_collector_port		3001873	0					
ANR	3002112	CallExpression	atoi ( colon )		3001873	1					
ANR	3002113	Callee	atoi		3001873	0					
ANR	3002114	Identifier	atoi		3001873	0					
ANR	3002115	ArgumentList	colon		3001873	1					
ANR	3002116	Argument	colon		3001873	0					
ANR	3002117	Identifier	colon		3001873	0					
ANR	3002118	Statement	delete	266:2:6833:6838	3001873	4	True				
ANR	3002119	Statement	[	266:9:6840:6840	3001873	5	True				
ANR	3002120	Statement	]	266:10:6841:6841	3001873	6	True				
ANR	3002121	ExpressionStatement	host	266:12:6843:6847	3001873	7	True				
ANR	3002122	Identifier	host		3001873	0					
ANR	3002123	ReturnType	void		3001873	1					
ANR	3002124	Identifier	DCCollector :: parseTCPInfo		3001873	2					
ANR	3002125	ParameterList			3001873	3					
ANR	3002126	CFGEntryNode	ENTRY		3001873		True				
ANR	3002127	CFGExitNode	EXIT		3001873		True				
ANR	3002128	Symbol	_name		3001873						
ANR	3002129	Symbol	tcp_collector_addr		3001873						
ANR	3002130	Symbol	is_valid_sinful		3001873						
ANR	3002131	Symbol	strchr		3001873						
ANR	3002132	Symbol	_port		3001873						
ANR	3002133	Symbol	tcp_collectors		3001873						
ANR	3002134	Symbol	param		3001873						
ANR	3002135	Symbol	tmp		3001873						
ANR	3002136	Symbol	up_type		3001873						
ANR	3002137	Symbol	host		3001873						
ANR	3002138	Symbol	strnewp		3001873						
ANR	3002139	Symbol	use_tcp		3001873						
ANR	3002140	Symbol	COLLECTOR_PORT		3001873						
ANR	3002141	Symbol	tcp_collector_port		3001873						
ANR	3002142	Symbol	atoi		3001873						
ANR	3002143	Symbol	NULL		3001873						
ANR	3002144	Symbol	false		3001873						
ANR	3002145	Symbol	param_boolean		3001873						
ANR	3002146	Symbol	string_to_port		3001873						
ANR	3002147	Symbol	* colon		3001873						
ANR	3002148	Symbol	tcp_collectors . contains_anycase_withwildcard		3001873						
ANR	3002149	Symbol	tcp_collector_host		3001873						
ANR	3002150	Symbol	true		3001873						
ANR	3002151	Symbol	_addr		3001873						
ANR	3002152	Symbol	colon		3001873						
ANR	3002153	Symbol	hasUDPCommandPort		3001873						
ANR	3002154	Function	DCCollector :: sendUpdate	271:0:6856:9830							
ANR	3002155	FunctionDef	"DCCollector :: sendUpdate (int cmd , ClassAd * ad1 , ClassAd * ad2 , bool nonblocking)"		3002154	0					
ANR	3002156	CompoundStatement		273:0:6943:9830	3002154	0					
ANR	3002157	IfStatement	if ( ! _is_configured )		3002154	0					
ANR	3002158	Condition	! _is_configured	274:5:6950:6965	3002154	0	True				
ANR	3002159	UnaryOperationExpression	! _is_configured		3002154	0					
ANR	3002160	UnaryOperator	!		3002154	0					
ANR	3002161	Identifier	_is_configured		3002154	1					
ANR	3002162	CompoundStatement		2:24:25:25	3002154	1					
ANR	3002163	ReturnStatement	return true ;	276:2:7017:7028	3002154	0	True				
ANR	3002164	Identifier	true		3002154	0					
ANR	3002165	IfStatement	if ( ! use_nonblocking_update || ! daemonCoreSockAdapter . isEnabled ( ) )		3002154	1					
ANR	3002166	Condition	! use_nonblocking_update || ! daemonCoreSockAdapter . isEnabled ( )	279:4:7038:7098	3002154	0	True				
ANR	3002167	OrExpression	! use_nonblocking_update || ! daemonCoreSockAdapter . isEnabled ( )		3002154	0		||			
ANR	3002168	UnaryOperationExpression	! use_nonblocking_update		3002154	0					
ANR	3002169	UnaryOperator	!		3002154	0					
ANR	3002170	Identifier	use_nonblocking_update		3002154	1					
ANR	3002171	UnaryOperationExpression	! daemonCoreSockAdapter . isEnabled ( )		3002154	1					
ANR	3002172	UnaryOperator	!		3002154	0					
ANR	3002173	CallExpression	daemonCoreSockAdapter . isEnabled ( )		3002154	1					
ANR	3002174	Callee	daemonCoreSockAdapter . isEnabled		3002154	0					
ANR	3002175	MemberAccess	daemonCoreSockAdapter . isEnabled		3002154	0					
ANR	3002176	Identifier	daemonCoreSockAdapter		3002154	0					
ANR	3002177	Identifier	isEnabled		3002154	1					
ANR	3002178	ArgumentList			3002154	1					
ANR	3002179	CompoundStatement		7:67:157:157	3002154	1					
ANR	3002180	ExpressionStatement	nonblocking = false	283:2:7285:7304	3002154	0	True				
ANR	3002181	AssignmentExpression	nonblocking = false		3002154	0		=			
ANR	3002182	Identifier	nonblocking		3002154	0					
ANR	3002183	Identifier	false		3002154	1					
ANR	3002184	IfStatement	if ( ad1 )		3002154	2					
ANR	3002185	Condition	ad1	287:6:7376:7378	3002154	0	True				
ANR	3002186	Identifier	ad1		3002154	0					
ANR	3002187	CompoundStatement		15:12:438:438	3002154	1					
ANR	3002188	ExpressionStatement	"ad1 -> Assign ( ATTR_DAEMON_START_TIME , ( long ) startTime )"	288:2:7386:7437	3002154	0	True				
ANR	3002189	CallExpression	"ad1 -> Assign ( ATTR_DAEMON_START_TIME , ( long ) startTime )"		3002154	0					
ANR	3002190	Callee	ad1 -> Assign		3002154	0					
ANR	3002191	PtrMemberAccess	ad1 -> Assign		3002154	0					
ANR	3002192	Identifier	ad1		3002154	0					
ANR	3002193	Identifier	Assign		3002154	1					
ANR	3002194	ArgumentList	ATTR_DAEMON_START_TIME		3002154	1					
ANR	3002195	Argument	ATTR_DAEMON_START_TIME		3002154	0					
ANR	3002196	Identifier	ATTR_DAEMON_START_TIME		3002154	0					
ANR	3002197	Argument	( long ) startTime		3002154	1					
ANR	3002198	CastExpression	( long ) startTime		3002154	0					
ANR	3002199	CastTarget	long		3002154	0					
ANR	3002200	Identifier	startTime		3002154	1					
ANR	3002201	IfStatement	if ( ad2 )		3002154	3					
ANR	3002202	Condition	ad2	290:6:7448:7450	3002154	0	True				
ANR	3002203	Identifier	ad2		3002154	0					
ANR	3002204	CompoundStatement		18:12:510:510	3002154	1					
ANR	3002205	ExpressionStatement	"ad2 -> Assign ( ATTR_DAEMON_START_TIME , ( long ) startTime )"	291:2:7458:7509	3002154	0	True				
ANR	3002206	CallExpression	"ad2 -> Assign ( ATTR_DAEMON_START_TIME , ( long ) startTime )"		3002154	0					
ANR	3002207	Callee	ad2 -> Assign		3002154	0					
ANR	3002208	PtrMemberAccess	ad2 -> Assign		3002154	0					
ANR	3002209	Identifier	ad2		3002154	0					
ANR	3002210	Identifier	Assign		3002154	1					
ANR	3002211	ArgumentList	ATTR_DAEMON_START_TIME		3002154	1					
ANR	3002212	Argument	ATTR_DAEMON_START_TIME		3002154	0					
ANR	3002213	Identifier	ATTR_DAEMON_START_TIME		3002154	0					
ANR	3002214	Argument	( long ) startTime		3002154	1					
ANR	3002215	CastExpression	( long ) startTime		3002154	0					
ANR	3002216	CastTarget	long		3002154	0					
ANR	3002217	Identifier	startTime		3002154	1					
ANR	3002218	IfStatement	if ( ad1 )		3002154	4					
ANR	3002219	Condition	ad1	293:6:7520:7522	3002154	0	True				
ANR	3002220	Identifier	ad1		3002154	0					
ANR	3002221	CompoundStatement		22:2:586:629	3002154	1					
ANR	3002222	IdentifierDeclStatement	unsigned seq = adSeqMan -> getSequence ( ad1 ) ;	294:2:7530:7573	3002154	0	True				
ANR	3002223	IdentifierDecl	seq = adSeqMan -> getSequence ( ad1 )		3002154	0					
ANR	3002224	IdentifierDeclType	unsigned		3002154	0					
ANR	3002225	Identifier	seq		3002154	1					
ANR	3002226	AssignmentExpression	seq = adSeqMan -> getSequence ( ad1 )		3002154	2		=			
ANR	3002227	Identifier	seq		3002154	0					
ANR	3002228	CallExpression	adSeqMan -> getSequence ( ad1 )		3002154	1					
ANR	3002229	Callee	adSeqMan -> getSequence		3002154	0					
ANR	3002230	PtrMemberAccess	adSeqMan -> getSequence		3002154	0					
ANR	3002231	Identifier	adSeqMan		3002154	0					
ANR	3002232	Identifier	getSequence		3002154	1					
ANR	3002233	ArgumentList	ad1		3002154	1					
ANR	3002234	Argument	ad1		3002154	0					
ANR	3002235	Identifier	ad1		3002154	0					
ANR	3002236	ExpressionStatement	"ad1 -> Assign ( ATTR_UPDATE_SEQUENCE_NUMBER , seq )"	295:2:7577:7621	3002154	1	True				
ANR	3002237	CallExpression	"ad1 -> Assign ( ATTR_UPDATE_SEQUENCE_NUMBER , seq )"		3002154	0					
ANR	3002238	Callee	ad1 -> Assign		3002154	0					
ANR	3002239	PtrMemberAccess	ad1 -> Assign		3002154	0					
ANR	3002240	Identifier	ad1		3002154	0					
ANR	3002241	Identifier	Assign		3002154	1					
ANR	3002242	ArgumentList	ATTR_UPDATE_SEQUENCE_NUMBER		3002154	1					
ANR	3002243	Argument	ATTR_UPDATE_SEQUENCE_NUMBER		3002154	0					
ANR	3002244	Identifier	ATTR_UPDATE_SEQUENCE_NUMBER		3002154	0					
ANR	3002245	Argument	seq		3002154	1					
ANR	3002246	Identifier	seq		3002154	0					
ANR	3002247	IfStatement	if ( ad2 )		3002154	5					
ANR	3002248	Condition	ad2	297:6:7632:7634	3002154	0	True				
ANR	3002249	Identifier	ad2		3002154	0					
ANR	3002250	CompoundStatement		26:2:698:741	3002154	1					
ANR	3002251	IdentifierDeclStatement	unsigned seq = adSeqMan -> getSequence ( ad2 ) ;	298:2:7642:7685	3002154	0	True				
ANR	3002252	IdentifierDecl	seq = adSeqMan -> getSequence ( ad2 )		3002154	0					
ANR	3002253	IdentifierDeclType	unsigned		3002154	0					
ANR	3002254	Identifier	seq		3002154	1					
ANR	3002255	AssignmentExpression	seq = adSeqMan -> getSequence ( ad2 )		3002154	2		=			
ANR	3002256	Identifier	seq		3002154	0					
ANR	3002257	CallExpression	adSeqMan -> getSequence ( ad2 )		3002154	1					
ANR	3002258	Callee	adSeqMan -> getSequence		3002154	0					
ANR	3002259	PtrMemberAccess	adSeqMan -> getSequence		3002154	0					
ANR	3002260	Identifier	adSeqMan		3002154	0					
ANR	3002261	Identifier	getSequence		3002154	1					
ANR	3002262	ArgumentList	ad2		3002154	1					
ANR	3002263	Argument	ad2		3002154	0					
ANR	3002264	Identifier	ad2		3002154	0					
ANR	3002265	ExpressionStatement	"ad2 -> Assign ( ATTR_UPDATE_SEQUENCE_NUMBER , seq )"	299:2:7689:7733	3002154	1	True				
ANR	3002266	CallExpression	"ad2 -> Assign ( ATTR_UPDATE_SEQUENCE_NUMBER , seq )"		3002154	0					
ANR	3002267	Callee	ad2 -> Assign		3002154	0					
ANR	3002268	PtrMemberAccess	ad2 -> Assign		3002154	0					
ANR	3002269	Identifier	ad2		3002154	0					
ANR	3002270	Identifier	Assign		3002154	1					
ANR	3002271	ArgumentList	ATTR_UPDATE_SEQUENCE_NUMBER		3002154	1					
ANR	3002272	Argument	ATTR_UPDATE_SEQUENCE_NUMBER		3002154	0					
ANR	3002273	Identifier	ATTR_UPDATE_SEQUENCE_NUMBER		3002154	0					
ANR	3002274	Argument	seq		3002154	1					
ANR	3002275	Identifier	seq		3002154	0					
ANR	3002276	IfStatement	if ( ad1 && ad2 )		3002154	6					
ANR	3002277	Condition	ad1 && ad2	304:6:7865:7874	3002154	0	True				
ANR	3002278	AndExpression	ad1 && ad2		3002154	0		&&			
ANR	3002279	Identifier	ad1		3002154	0					
ANR	3002280	Identifier	ad2		3002154	1					
ANR	3002281	CompoundStatement		32:19:934:934	3002154	1					
ANR	3002282	ExpressionStatement	"ad2 -> CopyAttribute ( ATTR_MY_ADDRESS , ad1 )"	305:2:7882:7921	3002154	0	True				
ANR	3002283	CallExpression	"ad2 -> CopyAttribute ( ATTR_MY_ADDRESS , ad1 )"		3002154	0					
ANR	3002284	Callee	ad2 -> CopyAttribute		3002154	0					
ANR	3002285	PtrMemberAccess	ad2 -> CopyAttribute		3002154	0					
ANR	3002286	Identifier	ad2		3002154	0					
ANR	3002287	Identifier	CopyAttribute		3002154	1					
ANR	3002288	ArgumentList	ATTR_MY_ADDRESS		3002154	1					
ANR	3002289	Argument	ATTR_MY_ADDRESS		3002154	0					
ANR	3002290	Identifier	ATTR_MY_ADDRESS		3002154	0					
ANR	3002291	Argument	ad1		3002154	1					
ANR	3002292	Identifier	ad1		3002154	0					
ANR	3002293	IfStatement	if ( ad1 )		3002154	7					
ANR	3002294	Condition	ad1	310:8:8100:8102	3002154	0	True				
ANR	3002295	Identifier	ad1		3002154	0					
ANR	3002296	CompoundStatement		38:13:1161:1161	3002154	1					
ANR	3002297	ExpressionStatement	"ad1 -> Assign ( ATTR_DETECTED_CPUS , param_integer ( ""DETECTED_CORES"" , 0 ) )"	311:8:8115:8182	3002154	0	True				
ANR	3002298	CallExpression	"ad1 -> Assign ( ATTR_DETECTED_CPUS , param_integer ( ""DETECTED_CORES"" , 0 ) )"		3002154	0					
ANR	3002299	Callee	ad1 -> Assign		3002154	0					
ANR	3002300	PtrMemberAccess	ad1 -> Assign		3002154	0					
ANR	3002301	Identifier	ad1		3002154	0					
ANR	3002302	Identifier	Assign		3002154	1					
ANR	3002303	ArgumentList	ATTR_DETECTED_CPUS		3002154	1					
ANR	3002304	Argument	ATTR_DETECTED_CPUS		3002154	0					
ANR	3002305	Identifier	ATTR_DETECTED_CPUS		3002154	0					
ANR	3002306	Argument	"param_integer ( ""DETECTED_CORES"" , 0 )"		3002154	1					
ANR	3002307	CallExpression	"param_integer ( ""DETECTED_CORES"" , 0 )"		3002154	0					
ANR	3002308	Callee	param_integer		3002154	0					
ANR	3002309	Identifier	param_integer		3002154	0					
ANR	3002310	ArgumentList	"""DETECTED_CORES"""		3002154	1					
ANR	3002311	Argument	"""DETECTED_CORES"""		3002154	0					
ANR	3002312	PrimaryExpression	"""DETECTED_CORES"""		3002154	0					
ANR	3002313	Argument	0		3002154	1					
ANR	3002314	PrimaryExpression	0		3002154	0					
ANR	3002315	ExpressionStatement	"ad1 -> Assign ( ATTR_DETECTED_MEMORY , param_integer ( ""DETECTED_MEMORY"" , 0 ) )"	312:8:8192:8262	3002154	1	True				
ANR	3002316	CallExpression	"ad1 -> Assign ( ATTR_DETECTED_MEMORY , param_integer ( ""DETECTED_MEMORY"" , 0 ) )"		3002154	0					
ANR	3002317	Callee	ad1 -> Assign		3002154	0					
ANR	3002318	PtrMemberAccess	ad1 -> Assign		3002154	0					
ANR	3002319	Identifier	ad1		3002154	0					
ANR	3002320	Identifier	Assign		3002154	1					
ANR	3002321	ArgumentList	ATTR_DETECTED_MEMORY		3002154	1					
ANR	3002322	Argument	ATTR_DETECTED_MEMORY		3002154	0					
ANR	3002323	Identifier	ATTR_DETECTED_MEMORY		3002154	0					
ANR	3002324	Argument	"param_integer ( ""DETECTED_MEMORY"" , 0 )"		3002154	1					
ANR	3002325	CallExpression	"param_integer ( ""DETECTED_MEMORY"" , 0 )"		3002154	0					
ANR	3002326	Callee	param_integer		3002154	0					
ANR	3002327	Identifier	param_integer		3002154	0					
ANR	3002328	ArgumentList	"""DETECTED_MEMORY"""		3002154	1					
ANR	3002329	Argument	"""DETECTED_MEMORY"""		3002154	0					
ANR	3002330	PrimaryExpression	"""DETECTED_MEMORY"""		3002154	0					
ANR	3002331	Argument	0		3002154	1					
ANR	3002332	PrimaryExpression	0		3002154	0					
ANR	3002333	IfStatement	if ( ad2 )		3002154	8					
ANR	3002334	Condition	ad2	314:8:8278:8280	3002154	0	True				
ANR	3002335	Identifier	ad2		3002154	0					
ANR	3002336	CompoundStatement		42:13:1339:1339	3002154	1					
ANR	3002337	ExpressionStatement	"ad2 -> Assign ( ATTR_DETECTED_CPUS , param_integer ( ""DETECTED_CORES"" , 0 ) )"	315:8:8293:8360	3002154	0	True				
ANR	3002338	CallExpression	"ad2 -> Assign ( ATTR_DETECTED_CPUS , param_integer ( ""DETECTED_CORES"" , 0 ) )"		3002154	0					
ANR	3002339	Callee	ad2 -> Assign		3002154	0					
ANR	3002340	PtrMemberAccess	ad2 -> Assign		3002154	0					
ANR	3002341	Identifier	ad2		3002154	0					
ANR	3002342	Identifier	Assign		3002154	1					
ANR	3002343	ArgumentList	ATTR_DETECTED_CPUS		3002154	1					
ANR	3002344	Argument	ATTR_DETECTED_CPUS		3002154	0					
ANR	3002345	Identifier	ATTR_DETECTED_CPUS		3002154	0					
ANR	3002346	Argument	"param_integer ( ""DETECTED_CORES"" , 0 )"		3002154	1					
ANR	3002347	CallExpression	"param_integer ( ""DETECTED_CORES"" , 0 )"		3002154	0					
ANR	3002348	Callee	param_integer		3002154	0					
ANR	3002349	Identifier	param_integer		3002154	0					
ANR	3002350	ArgumentList	"""DETECTED_CORES"""		3002154	1					
ANR	3002351	Argument	"""DETECTED_CORES"""		3002154	0					
ANR	3002352	PrimaryExpression	"""DETECTED_CORES"""		3002154	0					
ANR	3002353	Argument	0		3002154	1					
ANR	3002354	PrimaryExpression	0		3002154	0					
ANR	3002355	ExpressionStatement	"ad2 -> Assign ( ATTR_DETECTED_MEMORY , param_integer ( ""DETECTED_MEMORY"" , 0 ) )"	316:8:8370:8440	3002154	1	True				
ANR	3002356	CallExpression	"ad2 -> Assign ( ATTR_DETECTED_MEMORY , param_integer ( ""DETECTED_MEMORY"" , 0 ) )"		3002154	0					
ANR	3002357	Callee	ad2 -> Assign		3002154	0					
ANR	3002358	PtrMemberAccess	ad2 -> Assign		3002154	0					
ANR	3002359	Identifier	ad2		3002154	0					
ANR	3002360	Identifier	Assign		3002154	1					
ANR	3002361	ArgumentList	ATTR_DETECTED_MEMORY		3002154	1					
ANR	3002362	Argument	ATTR_DETECTED_MEMORY		3002154	0					
ANR	3002363	Identifier	ATTR_DETECTED_MEMORY		3002154	0					
ANR	3002364	Argument	"param_integer ( ""DETECTED_MEMORY"" , 0 )"		3002154	1					
ANR	3002365	CallExpression	"param_integer ( ""DETECTED_MEMORY"" , 0 )"		3002154	0					
ANR	3002366	Callee	param_integer		3002154	0					
ANR	3002367	Identifier	param_integer		3002154	0					
ANR	3002368	ArgumentList	"""DETECTED_MEMORY"""		3002154	1					
ANR	3002369	Argument	"""DETECTED_MEMORY"""		3002154	0					
ANR	3002370	PrimaryExpression	"""DETECTED_MEMORY"""		3002154	0					
ANR	3002371	Argument	0		3002154	1					
ANR	3002372	PrimaryExpression	0		3002154	0					
ANR	3002373	IfStatement	if ( _port == 0 )		3002154	9					
ANR	3002374	Condition	_port == 0	323:5:8667:8676	3002154	0	True				
ANR	3002375	EqualityExpression	_port == 0		3002154	0		==			
ANR	3002376	Identifier	_port		3002154	0					
ANR	3002377	PrimaryExpression	0		3002154	1					
ANR	3002378	CompoundStatement		51:18:1736:1736	3002154	1					
ANR	3002379	Statement	dprintf	324:2:8684:8690	3002154	0	True				
ANR	3002380	Statement	(	324:9:8691:8691	3002154	1	True				
ANR	3002381	Statement	D_HOSTNAME	324:11:8693:8702	3002154	2	True				
ANR	3002382	Statement	","	324:21:8703:8703	3002154	3	True				
ANR	3002383	Statement	"""About to update collector with port 0, """	324:23:8705:8745	3002154	4	True				
ANR	3002384	Statement	"""attempting to re-read address file\\n"""	325:5:8752:8789	3002154	5	True				
ANR	3002385	Statement	)	325:44:8791:8791	3002154	6	True				
ANR	3002386	ExpressionStatement		325:45:8792:8792	3002154	7	True				
ANR	3002387	IfStatement	if ( readAddressFile ( _subsys ) )		3002154	8					
ANR	3002388	Condition	readAddressFile ( _subsys )	326:6:8800:8823	3002154	0	True				
ANR	3002389	CallExpression	readAddressFile ( _subsys )		3002154	0					
ANR	3002390	Callee	readAddressFile		3002154	0					
ANR	3002391	Identifier	readAddressFile		3002154	0					
ANR	3002392	ArgumentList	_subsys		3002154	1					
ANR	3002393	Argument	_subsys		3002154	0					
ANR	3002394	Identifier	_subsys		3002154	0					
ANR	3002395	CompoundStatement		54:33:1883:1883	3002154	1					
ANR	3002396	ExpressionStatement	_port = string_to_port ( _addr )	327:3:8832:8863	3002154	0	True				
ANR	3002397	AssignmentExpression	_port = string_to_port ( _addr )		3002154	0		=			
ANR	3002398	Identifier	_port		3002154	0					
ANR	3002399	CallExpression	string_to_port ( _addr )		3002154	1					
ANR	3002400	Callee	string_to_port		3002154	0					
ANR	3002401	Identifier	string_to_port		3002154	0					
ANR	3002402	ArgumentList	_addr		3002154	1					
ANR	3002403	Argument	_addr		3002154	0					
ANR	3002404	Identifier	_addr		3002154	0					
ANR	3002405	ExpressionStatement	tcp_collector_port = _port	328:3:8868:8894	3002154	1	True				
ANR	3002406	AssignmentExpression	tcp_collector_port = _port		3002154	0		=			
ANR	3002407	Identifier	tcp_collector_port		3002154	0					
ANR	3002408	Identifier	_port		3002154	1					
ANR	3002409	IfStatement	if ( tcp_collector_addr )		3002154	2					
ANR	3002410	Condition	tcp_collector_addr	329:7:8903:8920	3002154	0	True				
ANR	3002411	Identifier	tcp_collector_addr		3002154	0					
ANR	3002412	CompoundStatement		57:28:1980:1980	3002154	1					
ANR	3002413	Statement	delete	330:4:8930:8935	3002154	0	True				
ANR	3002414	Statement	[	330:11:8937:8937	3002154	1	True				
ANR	3002415	Statement	]	330:12:8938:8938	3002154	2	True				
ANR	3002416	ExpressionStatement	tcp_collector_addr	330:14:8940:8958	3002154	3	True				
ANR	3002417	Identifier	tcp_collector_addr		3002154	0					
ANR	3002418	ExpressionStatement	tcp_collector_addr = strnewp ( _addr )	332:3:8968:9005	3002154	3	True				
ANR	3002419	AssignmentExpression	tcp_collector_addr = strnewp ( _addr )		3002154	0		=			
ANR	3002420	Identifier	tcp_collector_addr		3002154	0					
ANR	3002421	CallExpression	strnewp ( _addr )		3002154	1					
ANR	3002422	Callee	strnewp		3002154	0					
ANR	3002423	Identifier	strnewp		3002154	0					
ANR	3002424	ArgumentList	_addr		3002154	1					
ANR	3002425	Argument	_addr		3002154	0					
ANR	3002426	Identifier	_addr		3002154	0					
ANR	3002427	ExpressionStatement	parseTCPInfo ( )	333:3:9010:9024	3002154	4	True				
ANR	3002428	CallExpression	parseTCPInfo ( )		3002154	0					
ANR	3002429	Callee	parseTCPInfo		3002154	0					
ANR	3002430	Identifier	parseTCPInfo		3002154	0					
ANR	3002431	ArgumentList			3002154	1					
ANR	3002432	ExpressionStatement	"dprintf ( D_HOSTNAME , ""Using port %d based on address \\""%s\\""\\n"" , _port , _addr )"	334:3:9047:9131	3002154	5	True				
ANR	3002433	CallExpression	"dprintf ( D_HOSTNAME , ""Using port %d based on address \\""%s\\""\\n"" , _port , _addr )"		3002154	0					
ANR	3002434	Callee	dprintf		3002154	0					
ANR	3002435	Identifier	dprintf		3002154	0					
ANR	3002436	ArgumentList	D_HOSTNAME		3002154	1					
ANR	3002437	Argument	D_HOSTNAME		3002154	0					
ANR	3002438	Identifier	D_HOSTNAME		3002154	0					
ANR	3002439	Argument	"""Using port %d based on address \\""%s\\""\\n"""		3002154	1					
ANR	3002440	PrimaryExpression	"""Using port %d based on address \\""%s\\""\\n"""		3002154	0					
ANR	3002441	Argument	_port		3002154	2					
ANR	3002442	Identifier	_port		3002154	0					
ANR	3002443	Argument	_addr		3002154	3					
ANR	3002444	Identifier	_addr		3002154	0					
ANR	3002445	IfStatement	if ( _port <= 0 )		3002154	10					
ANR	3002446	Condition	_port <= 0	339:5:9146:9155	3002154	0	True				
ANR	3002447	RelationalExpression	_port <= 0		3002154	0		<=			
ANR	3002448	Identifier	_port		3002154	0					
ANR	3002449	PrimaryExpression	0		3002154	1					
ANR	3002450	CompoundStatement		69:2:2273:2289	3002154	1					
ANR	3002451	IdentifierDeclStatement	MyString err_msg ;	341:2:9217:9233	3002154	0	True				
ANR	3002452	IdentifierDecl	err_msg		3002154	0					
ANR	3002453	IdentifierDeclType	MyString		3002154	0					
ANR	3002454	Identifier	err_msg		3002154	1					
ANR	3002455	ExpressionStatement	"err_msg . sprintf ( ""Can't send update: invalid collector port (%d)"" , _port )"	342:2:9237:9319	3002154	1	True				
ANR	3002456	CallExpression	"err_msg . sprintf ( ""Can't send update: invalid collector port (%d)"" , _port )"		3002154	0					
ANR	3002457	Callee	err_msg . sprintf		3002154	0					
ANR	3002458	MemberAccess	err_msg . sprintf		3002154	0					
ANR	3002459	Identifier	err_msg		3002154	0					
ANR	3002460	Identifier	sprintf		3002154	1					
ANR	3002461	ArgumentList	"""Can't send update: invalid collector port (%d)"""		3002154	1					
ANR	3002462	Argument	"""Can't send update: invalid collector port (%d)"""		3002154	0					
ANR	3002463	PrimaryExpression	"""Can't send update: invalid collector port (%d)"""		3002154	0					
ANR	3002464	Argument	_port		3002154	1					
ANR	3002465	Identifier	_port		3002154	0					
ANR	3002466	ExpressionStatement	"newError ( CA_COMMUNICATION_ERROR , err_msg . Value ( ) )"	344:2:9323:9374	3002154	2	True				
ANR	3002467	CallExpression	"newError ( CA_COMMUNICATION_ERROR , err_msg . Value ( ) )"		3002154	0					
ANR	3002468	Callee	newError		3002154	0					
ANR	3002469	Identifier	newError		3002154	0					
ANR	3002470	ArgumentList	CA_COMMUNICATION_ERROR		3002154	1					
ANR	3002471	Argument	CA_COMMUNICATION_ERROR		3002154	0					
ANR	3002472	Identifier	CA_COMMUNICATION_ERROR		3002154	0					
ANR	3002473	Argument	err_msg . Value ( )		3002154	1					
ANR	3002474	CallExpression	err_msg . Value ( )		3002154	0					
ANR	3002475	Callee	err_msg . Value		3002154	0					
ANR	3002476	MemberAccess	err_msg . Value		3002154	0					
ANR	3002477	Identifier	err_msg		3002154	0					
ANR	3002478	Identifier	Value		3002154	1					
ANR	3002479	ArgumentList			3002154	1					
ANR	3002480	ReturnStatement	return false ;	345:2:9378:9390	3002154	3	True				
ANR	3002481	Identifier	false		3002154	0					
ANR	3002482	IfStatement	if ( cmd == UPDATE_COLLECTOR_AD || cmd == INVALIDATE_COLLECTOR_ADS )		3002154	11					
ANR	3002483	Condition	cmd == UPDATE_COLLECTOR_AD || cmd == INVALIDATE_COLLECTOR_ADS	348:5:9401:9461	3002154	0	True				
ANR	3002484	OrExpression	cmd == UPDATE_COLLECTOR_AD || cmd == INVALIDATE_COLLECTOR_ADS		3002154	0		||			
ANR	3002485	EqualityExpression	cmd == UPDATE_COLLECTOR_AD		3002154	0		==			
ANR	3002486	Identifier	cmd		3002154	0					
ANR	3002487	Identifier	UPDATE_COLLECTOR_AD		3002154	1					
ANR	3002488	EqualityExpression	cmd == INVALIDATE_COLLECTOR_ADS		3002154	1		==			
ANR	3002489	Identifier	cmd		3002154	0					
ANR	3002490	Identifier	INVALIDATE_COLLECTOR_ADS		3002154	1					
ANR	3002491	CompoundStatement		76:69:2521:2521	3002154	1					
ANR	3002492	ReturnStatement	"return sendUDPUpdate ( cmd , ad1 , ad2 , nonblocking ) ;"	352:2:9647:9697	3002154	0	True				
ANR	3002493	CallExpression	"sendUDPUpdate ( cmd , ad1 , ad2 , nonblocking )"		3002154	0					
ANR	3002494	Callee	sendUDPUpdate		3002154	0					
ANR	3002495	Identifier	sendUDPUpdate		3002154	0					
ANR	3002496	ArgumentList	cmd		3002154	1					
ANR	3002497	Argument	cmd		3002154	0					
ANR	3002498	Identifier	cmd		3002154	0					
ANR	3002499	Argument	ad1		3002154	1					
ANR	3002500	Identifier	ad1		3002154	0					
ANR	3002501	Argument	ad2		3002154	2					
ANR	3002502	Identifier	ad2		3002154	0					
ANR	3002503	Argument	nonblocking		3002154	3					
ANR	3002504	Identifier	nonblocking		3002154	0					
ANR	3002505	IfStatement	if ( use_tcp )		3002154	12					
ANR	3002506	Condition	use_tcp	355:5:9708:9714	3002154	0	True				
ANR	3002507	Identifier	use_tcp		3002154	0					
ANR	3002508	CompoundStatement		83:15:2774:2774	3002154	1					
ANR	3002509	ReturnStatement	"return sendTCPUpdate ( cmd , ad1 , ad2 , nonblocking ) ;"	356:2:9722:9772	3002154	0	True				
ANR	3002510	CallExpression	"sendTCPUpdate ( cmd , ad1 , ad2 , nonblocking )"		3002154	0					
ANR	3002511	Callee	sendTCPUpdate		3002154	0					
ANR	3002512	Identifier	sendTCPUpdate		3002154	0					
ANR	3002513	ArgumentList	cmd		3002154	1					
ANR	3002514	Argument	cmd		3002154	0					
ANR	3002515	Identifier	cmd		3002154	0					
ANR	3002516	Argument	ad1		3002154	1					
ANR	3002517	Identifier	ad1		3002154	0					
ANR	3002518	Argument	ad2		3002154	2					
ANR	3002519	Identifier	ad2		3002154	0					
ANR	3002520	Argument	nonblocking		3002154	3					
ANR	3002521	Identifier	nonblocking		3002154	0					
ANR	3002522	ReturnStatement	"return sendUDPUpdate ( cmd , ad1 , ad2 , nonblocking ) ;"	358:1:9778:9828	3002154	13	True				
ANR	3002523	CallExpression	"sendUDPUpdate ( cmd , ad1 , ad2 , nonblocking )"		3002154	0					
ANR	3002524	Callee	sendUDPUpdate		3002154	0					
ANR	3002525	Identifier	sendUDPUpdate		3002154	0					
ANR	3002526	ArgumentList	cmd		3002154	1					
ANR	3002527	Argument	cmd		3002154	0					
ANR	3002528	Identifier	cmd		3002154	0					
ANR	3002529	Argument	ad1		3002154	1					
ANR	3002530	Identifier	ad1		3002154	0					
ANR	3002531	Argument	ad2		3002154	2					
ANR	3002532	Identifier	ad2		3002154	0					
ANR	3002533	Argument	nonblocking		3002154	3					
ANR	3002534	Identifier	nonblocking		3002154	0					
ANR	3002535	ReturnType	bool		3002154	1					
ANR	3002536	Identifier	DCCollector :: sendUpdate		3002154	2					
ANR	3002537	ParameterList	"int cmd , ClassAd * ad1 , ClassAd * ad2 , bool nonblocking"		3002154	3					
ANR	3002538	Parameter	int cmd	272:25:6886:6892	3002154	0	True				
ANR	3002539	ParameterType	int		3002154	0					
ANR	3002540	Identifier	cmd		3002154	1					
ANR	3002541	Parameter	ClassAd * ad1	272:34:6895:6906	3002154	1	True				
ANR	3002542	ParameterType	ClassAd *		3002154	0					
ANR	3002543	Identifier	ad1		3002154	1					
ANR	3002544	Parameter	ClassAd * ad2	272:48:6909:6920	3002154	2	True				
ANR	3002545	ParameterType	ClassAd *		3002154	0					
ANR	3002546	Identifier	ad2		3002154	1					
ANR	3002547	Parameter	bool nonblocking	272:62:6923:6938	3002154	3	True				
ANR	3002548	ParameterType	bool		3002154	0					
ANR	3002549	Identifier	nonblocking		3002154	1					
ANR	3002550	CFGEntryNode	ENTRY		3002154		True				
ANR	3002551	CFGExitNode	EXIT		3002154		True				
ANR	3002552	Symbol	ATTR_DETECTED_MEMORY		3002154						
ANR	3002553	Symbol	sendTCPUpdate		3002154						
ANR	3002554	Symbol	sendUDPUpdate		3002154						
ANR	3002555	Symbol	tcp_collector_addr		3002154						
ANR	3002556	Symbol	_port		3002154						
ANR	3002557	Symbol	readAddressFile		3002154						
ANR	3002558	Symbol	daemonCoreSockAdapter		3002154						
ANR	3002559	Symbol	adSeqMan -> getSequence		3002154						
ANR	3002560	Symbol	adSeqMan		3002154						
ANR	3002561	Symbol	strnewp		3002154						
ANR	3002562	Symbol	startTime		3002154						
ANR	3002563	Symbol	UPDATE_COLLECTOR_AD		3002154						
ANR	3002564	Symbol	use_tcp		3002154						
ANR	3002565	Symbol	ATTR_MY_ADDRESS		3002154						
ANR	3002566	Symbol	seq		3002154						
ANR	3002567	Symbol	tcp_collector_port		3002154						
ANR	3002568	Symbol	CA_COMMUNICATION_ERROR		3002154						
ANR	3002569	Symbol	_subsys		3002154						
ANR	3002570	Symbol	D_HOSTNAME		3002154						
ANR	3002571	Symbol	_is_configured		3002154						
ANR	3002572	Symbol	nonblocking		3002154						
ANR	3002573	Symbol	INVALIDATE_COLLECTOR_ADS		3002154						
ANR	3002574	Symbol	ATTR_DETECTED_CPUS		3002154						
ANR	3002575	Symbol	false		3002154						
ANR	3002576	Symbol	ATTR_UPDATE_SEQUENCE_NUMBER		3002154						
ANR	3002577	Symbol	string_to_port		3002154						
ANR	3002578	Symbol	ad2		3002154						
ANR	3002579	Symbol	ad1		3002154						
ANR	3002580	Symbol	err_msg . Value		3002154						
ANR	3002581	Symbol	* adSeqMan		3002154						
ANR	3002582	Symbol	daemonCoreSockAdapter . isEnabled		3002154						
ANR	3002583	Symbol	err_msg		3002154						
ANR	3002584	Symbol	true		3002154						
ANR	3002585	Symbol	_addr		3002154						
ANR	3002586	Symbol	ATTR_DAEMON_START_TIME		3002154						
ANR	3002587	Symbol	param_integer		3002154						
ANR	3002588	Symbol	cmd		3002154						
ANR	3002589	Symbol	use_nonblocking_update		3002154						
ANR	3002590	Function	DCCollector :: finishUpdate	363:0:9835:10637							
ANR	3002591	FunctionDef	"DCCollector :: finishUpdate (DCCollector * self , Sock * sock , ClassAd * ad1 , ClassAd * ad2)"		3002590	0					
ANR	3002592	CompoundStatement		365:0:9927:10637	3002590	0					
ANR	3002593	ExpressionStatement	sock -> encode ( )	370:1:10097:10111	3002590	0	True				
ANR	3002594	CallExpression	sock -> encode ( )		3002590	0					
ANR	3002595	Callee	sock -> encode		3002590	0					
ANR	3002596	PtrMemberAccess	sock -> encode		3002590	0					
ANR	3002597	Identifier	sock		3002590	0					
ANR	3002598	Identifier	encode		3002590	1					
ANR	3002599	ArgumentList			3002590	1					
ANR	3002600	IfStatement	if ( ad1 && ! ad1 -> put ( * sock ) )		3002590	1					
ANR	3002601	Condition	ad1 && ! ad1 -> put ( * sock )	371:5:10118:10141	3002590	0	True				
ANR	3002602	AndExpression	ad1 && ! ad1 -> put ( * sock )		3002590	0		&&			
ANR	3002603	Identifier	ad1		3002590	0					
ANR	3002604	UnaryOperationExpression	! ad1 -> put ( * sock )		3002590	1					
ANR	3002605	UnaryOperator	!		3002590	0					
ANR	3002606	CallExpression	ad1 -> put ( * sock )		3002590	1					
ANR	3002607	Callee	ad1 -> put		3002590	0					
ANR	3002608	PtrMemberAccess	ad1 -> put		3002590	0					
ANR	3002609	Identifier	ad1		3002590	0					
ANR	3002610	Identifier	put		3002590	1					
ANR	3002611	ArgumentList	* sock		3002590	1					
ANR	3002612	Argument	* sock		3002590	0					
ANR	3002613	UnaryOperationExpression	* sock		3002590	0					
ANR	3002614	UnaryOperator	*		3002590	0					
ANR	3002615	Identifier	sock		3002590	1					
ANR	3002616	CompoundStatement		7:32:217:217	3002590	1					
ANR	3002617	IfStatement	if ( self )		3002590	0					
ANR	3002618	Condition	self	372:5:10152:10155	3002590	0	True				
ANR	3002619	Identifier	self		3002590	0					
ANR	3002620	CompoundStatement		8:11:230:230	3002590	1					
ANR	3002621	ExpressionStatement	"self -> newError ( CA_COMMUNICATION_ERROR , ""Failed to send ClassAd #1 to collector"" )"	373:3:10163:10264	3002590	0	True				
ANR	3002622	CallExpression	"self -> newError ( CA_COMMUNICATION_ERROR , ""Failed to send ClassAd #1 to collector"" )"		3002590	0					
ANR	3002623	Callee	self -> newError		3002590	0					
ANR	3002624	PtrMemberAccess	self -> newError		3002590	0					
ANR	3002625	Identifier	self		3002590	0					
ANR	3002626	Identifier	newError		3002590	1					
ANR	3002627	ArgumentList	CA_COMMUNICATION_ERROR		3002590	1					
ANR	3002628	Argument	CA_COMMUNICATION_ERROR		3002590	0					
ANR	3002629	Identifier	CA_COMMUNICATION_ERROR		3002590	0					
ANR	3002630	Argument	"""Failed to send ClassAd #1 to collector"""		3002590	1					
ANR	3002631	PrimaryExpression	"""Failed to send ClassAd #1 to collector"""		3002590	0					
ANR	3002632	ReturnStatement	return false ;	376:2:10272:10284	3002590	1	True				
ANR	3002633	Identifier	false		3002590	0					
ANR	3002634	IfStatement	if ( ad2 && ! ad2 -> put ( * sock ) )		3002590	2					
ANR	3002635	Condition	ad2 && ! ad2 -> put ( * sock )	378:5:10294:10317	3002590	0	True				
ANR	3002636	AndExpression	ad2 && ! ad2 -> put ( * sock )		3002590	0		&&			
ANR	3002637	Identifier	ad2		3002590	0					
ANR	3002638	UnaryOperationExpression	! ad2 -> put ( * sock )		3002590	1					
ANR	3002639	UnaryOperator	!		3002590	0					
ANR	3002640	CallExpression	ad2 -> put ( * sock )		3002590	1					
ANR	3002641	Callee	ad2 -> put		3002590	0					
ANR	3002642	PtrMemberAccess	ad2 -> put		3002590	0					
ANR	3002643	Identifier	ad2		3002590	0					
ANR	3002644	Identifier	put		3002590	1					
ANR	3002645	ArgumentList	* sock		3002590	1					
ANR	3002646	Argument	* sock		3002590	0					
ANR	3002647	UnaryOperationExpression	* sock		3002590	0					
ANR	3002648	UnaryOperator	*		3002590	0					
ANR	3002649	Identifier	sock		3002590	1					
ANR	3002650	CompoundStatement		14:32:393:393	3002590	1					
ANR	3002651	IfStatement	if ( self )		3002590	0					
ANR	3002652	Condition	self	379:5:10328:10331	3002590	0	True				
ANR	3002653	Identifier	self		3002590	0					
ANR	3002654	CompoundStatement		15:11:406:406	3002590	1					
ANR	3002655	ExpressionStatement	"self -> newError ( CA_COMMUNICATION_ERROR , ""Failed to send ClassAd #2 to collector"" )"	380:3:10339:10434	3002590	0	True				
ANR	3002656	CallExpression	"self -> newError ( CA_COMMUNICATION_ERROR , ""Failed to send ClassAd #2 to collector"" )"		3002590	0					
ANR	3002657	Callee	self -> newError		3002590	0					
ANR	3002658	PtrMemberAccess	self -> newError		3002590	0					
ANR	3002659	Identifier	self		3002590	0					
ANR	3002660	Identifier	newError		3002590	1					
ANR	3002661	ArgumentList	CA_COMMUNICATION_ERROR		3002590	1					
ANR	3002662	Argument	CA_COMMUNICATION_ERROR		3002590	0					
ANR	3002663	Identifier	CA_COMMUNICATION_ERROR		3002590	0					
ANR	3002664	Argument	"""Failed to send ClassAd #2 to collector"""		3002590	1					
ANR	3002665	PrimaryExpression	"""Failed to send ClassAd #2 to collector"""		3002590	0					
ANR	3002666	ReturnStatement	return false ;	382:3:10439:10451	3002590	1	True				
ANR	3002667	Identifier	false		3002590	0					
ANR	3002668	IfStatement	if ( ! sock -> end_of_message ( ) )		3002590	3					
ANR	3002669	Condition	! sock -> end_of_message ( )	385:5:10465:10488	3002590	0	True				
ANR	3002670	UnaryOperationExpression	! sock -> end_of_message ( )		3002590	0					
ANR	3002671	UnaryOperator	!		3002590	0					
ANR	3002672	CallExpression	sock -> end_of_message ( )		3002590	1					
ANR	3002673	Callee	sock -> end_of_message		3002590	0					
ANR	3002674	PtrMemberAccess	sock -> end_of_message		3002590	0					
ANR	3002675	Identifier	sock		3002590	0					
ANR	3002676	Identifier	end_of_message		3002590	1					
ANR	3002677	ArgumentList			3002590	1					
ANR	3002678	CompoundStatement		21:32:564:564	3002590	1					
ANR	3002679	IfStatement	if ( self )		3002590	0					
ANR	3002680	Condition	self	386:5:10499:10502	3002590	0	True				
ANR	3002681	Identifier	self		3002590	0					
ANR	3002682	CompoundStatement		22:11:577:577	3002590	1					
ANR	3002683	ExpressionStatement	"self -> newError ( CA_COMMUNICATION_ERROR , ""Failed to send EOM to collector"" )"	387:3:10510:10598	3002590	0	True				
ANR	3002684	CallExpression	"self -> newError ( CA_COMMUNICATION_ERROR , ""Failed to send EOM to collector"" )"		3002590	0					
ANR	3002685	Callee	self -> newError		3002590	0					
ANR	3002686	PtrMemberAccess	self -> newError		3002590	0					
ANR	3002687	Identifier	self		3002590	0					
ANR	3002688	Identifier	newError		3002590	1					
ANR	3002689	ArgumentList	CA_COMMUNICATION_ERROR		3002590	1					
ANR	3002690	Argument	CA_COMMUNICATION_ERROR		3002590	0					
ANR	3002691	Identifier	CA_COMMUNICATION_ERROR		3002590	0					
ANR	3002692	Argument	"""Failed to send EOM to collector"""		3002590	1					
ANR	3002693	PrimaryExpression	"""Failed to send EOM to collector"""		3002590	0					
ANR	3002694	ReturnStatement	return false ;	390:2:10606:10618	3002590	1	True				
ANR	3002695	Identifier	false		3002590	0					
ANR	3002696	ReturnStatement	return true ;	392:1:10624:10635	3002590	4	True				
ANR	3002697	Identifier	true		3002590	0					
ANR	3002698	ReturnType	bool		3002590	1					
ANR	3002699	Identifier	DCCollector :: finishUpdate		3002590	2					
ANR	3002700	ParameterList	"DCCollector * self , Sock * sock , ClassAd * ad1 , ClassAd * ad2"		3002590	3					
ANR	3002701	Parameter	DCCollector * self	364:27:9867:9883	3002590	0	True				
ANR	3002702	ParameterType	DCCollector *		3002590	0					
ANR	3002703	Identifier	self		3002590	1					
ANR	3002704	Parameter	Sock * sock	364:46:9886:9895	3002590	1	True				
ANR	3002705	ParameterType	Sock *		3002590	0					
ANR	3002706	Identifier	sock		3002590	1					
ANR	3002707	Parameter	ClassAd * ad1	364:58:9898:9909	3002590	2	True				
ANR	3002708	ParameterType	ClassAd *		3002590	0					
ANR	3002709	Identifier	ad1		3002590	1					
ANR	3002710	Parameter	ClassAd * ad2	364:72:9912:9923	3002590	3	True				
ANR	3002711	ParameterType	ClassAd *		3002590	0					
ANR	3002712	Identifier	ad2		3002590	1					
ANR	3002713	CFGEntryNode	ENTRY		3002590		True				
ANR	3002714	CFGExitNode	EXIT		3002590		True				
ANR	3002715	Symbol	ad2 -> put		3002590						
ANR	3002716	Symbol	sock -> end_of_message		3002590						
ANR	3002717	Symbol	ad1 -> put		3002590						
ANR	3002718	Symbol	* ad2		3002590						
ANR	3002719	Symbol	* ad1		3002590						
ANR	3002720	Symbol	false		3002590						
ANR	3002721	Symbol	ad2		3002590						
ANR	3002722	Symbol	ad1		3002590						
ANR	3002723	Symbol	sock		3002590						
ANR	3002724	Symbol	true		3002590						
ANR	3002725	Symbol	self		3002590						
ANR	3002726	Symbol	* sock		3002590						
ANR	3002727	Symbol	CA_COMMUNICATION_ERROR		3002590						
ANR	3002728	ClassDef	UpdateData	395:0:10640:13316							
ANR	3002729	DeclStmt									
ANR	3002730	Decl							ClassAd	ClassAd *	ad1
ANR	3002731	DeclStmt									
ANR	3002732	Decl							ClassAd	ClassAd *	ad2
ANR	3002733	DeclStmt									
ANR	3002734	Decl							DCCollector	DCCollector *	dc_collector
ANR	3002735	DeclStmt									
ANR	3002736	Decl							UpdateData	UpdateData *	next_in_list
ANR	3002737	Function	UpdateData	402:1:10754:11362							
ANR	3002738	FunctionDef	"UpdateData (ClassAd * cad1 , ClassAd * cad2 , DCCollector * dc_collect)"		3002737	4					
ANR	3002739	CompoundStatement		402:67:10820:11362	3002737	0					
ANR	3002740	ExpressionStatement	this -> ad1 = NULL	403:2:10824:10840	3002737	0	True				
ANR	3002741	AssignmentExpression	this -> ad1 = NULL		3002737	0		=			
ANR	3002742	PtrMemberAccess	this -> ad1		3002737	0					
ANR	3002743	Identifier	this		3002737	0					
ANR	3002744	Identifier	ad1		3002737	1					
ANR	3002745	Identifier	NULL		3002737	1					
ANR	3002746	ExpressionStatement	this -> ad2 = NULL	404:2:10844:10860	3002737	1	True				
ANR	3002747	AssignmentExpression	this -> ad2 = NULL		3002737	0		=			
ANR	3002748	PtrMemberAccess	this -> ad2		3002737	0					
ANR	3002749	Identifier	this		3002737	0					
ANR	3002750	Identifier	ad2		3002737	1					
ANR	3002751	Identifier	NULL		3002737	1					
ANR	3002752	ExpressionStatement	this -> dc_collector = dc_collect	405:2:10864:10895	3002737	2	True				
ANR	3002753	AssignmentExpression	this -> dc_collector = dc_collect		3002737	0		=			
ANR	3002754	PtrMemberAccess	this -> dc_collector		3002737	0					
ANR	3002755	Identifier	this		3002737	0					
ANR	3002756	Identifier	dc_collector		3002737	1					
ANR	3002757	Identifier	dc_collect		3002737	1					
ANR	3002758	ExpressionStatement	next_in_list = dc_collect -> pending_update_list	412:2:11166:11212	3002737	3	True				
ANR	3002759	AssignmentExpression	next_in_list = dc_collect -> pending_update_list		3002737	0		=			
ANR	3002760	Identifier	next_in_list		3002737	0					
ANR	3002761	PtrMemberAccess	dc_collect -> pending_update_list		3002737	1					
ANR	3002762	Identifier	dc_collect		3002737	0					
ANR	3002763	Identifier	pending_update_list		3002737	1					
ANR	3002764	ExpressionStatement	dc_collect -> pending_update_list = this	413:2:11216:11254	3002737	4	True				
ANR	3002765	AssignmentExpression	dc_collect -> pending_update_list = this		3002737	0		=			
ANR	3002766	PtrMemberAccess	dc_collect -> pending_update_list		3002737	0					
ANR	3002767	Identifier	dc_collect		3002737	0					
ANR	3002768	Identifier	pending_update_list		3002737	1					
ANR	3002769	Identifier	this		3002737	1					
ANR	3002770	IfStatement	if ( cad1 )		3002737	5					
ANR	3002771	Condition	cad1	415:5:11262:11265	3002737	0	True				
ANR	3002772	Identifier	cad1		3002737	0					
ANR	3002773	CompoundStatement		14:11:447:447	3002737	1					
ANR	3002774	ExpressionStatement	this -> ad1 = new ClassAd ( * cad1 )	416:3:11273:11303	3002737	0	True				
ANR	3002775	AssignmentExpression	this -> ad1 = new ClassAd ( * cad1 )		3002737	0		=			
ANR	3002776	PtrMemberAccess	this -> ad1		3002737	0					
ANR	3002777	Identifier	this		3002737	0					
ANR	3002778	Identifier	ad1		3002737	1					
ANR	3002779	UnaryOperationExpression	* cad1		3002737	1					
ANR	3002780	UnaryOperator	*		3002737	0					
ANR	3002781	Identifier	cad1		3002737	1					
ANR	3002782	IfStatement	if ( cad2 )		3002737	6					
ANR	3002783	Condition	cad2	418:5:11314:11317	3002737	0	True				
ANR	3002784	Identifier	cad2		3002737	0					
ANR	3002785	CompoundStatement		17:11:499:499	3002737	1					
ANR	3002786	ExpressionStatement	this -> ad2 = new ClassAd ( * cad2 )	419:3:11325:11355	3002737	0	True				
ANR	3002787	AssignmentExpression	this -> ad2 = new ClassAd ( * cad2 )		3002737	0		=			
ANR	3002788	PtrMemberAccess	this -> ad2		3002737	0					
ANR	3002789	Identifier	this		3002737	0					
ANR	3002790	Identifier	ad2		3002737	1					
ANR	3002791	UnaryOperationExpression	* cad2		3002737	1					
ANR	3002792	UnaryOperator	*		3002737	0					
ANR	3002793	Identifier	cad2		3002737	1					
ANR	3002794	Identifier	UpdateData		3002737	1					
ANR	3002795	ParameterList	"ClassAd * cad1 , ClassAd * cad2 , DCCollector * dc_collect"		3002737	2					
ANR	3002796	Parameter	ClassAd * cad1	402:12:10765:10777	3002737	0	True				
ANR	3002797	ParameterType	ClassAd *		3002737	0					
ANR	3002798	Identifier	cad1		3002737	1					
ANR	3002799	Parameter	ClassAd * cad2	402:27:10780:10792	3002737	1	True				
ANR	3002800	ParameterType	ClassAd *		3002737	0					
ANR	3002801	Identifier	cad2		3002737	1					
ANR	3002802	Parameter	DCCollector * dc_collect	402:42:10795:10817	3002737	2	True				
ANR	3002803	ParameterType	DCCollector *		3002737	0					
ANR	3002804	Identifier	dc_collect		3002737	1					
ANR	3002805	CFGEntryNode	ENTRY		3002737		True				
ANR	3002806	CFGExitNode	EXIT		3002737		True				
ANR	3002807	Symbol	cad2		3002737						
ANR	3002808	Symbol	NULL		3002737						
ANR	3002809	Symbol	dc_collect		3002737						
ANR	3002810	Symbol	cad1		3002737						
ANR	3002811	Symbol	this		3002737						
ANR	3002812	Symbol	* dc_collect		3002737						
ANR	3002813	Symbol	this -> dc_collector		3002737						
ANR	3002814	Symbol	* this		3002737						
ANR	3002815	Symbol	next_in_list		3002737						
ANR	3002816	Symbol	dc_collect -> pending_update_list		3002737						
ANR	3002817	Symbol	this -> ad2		3002737						
ANR	3002818	Symbol	this -> ad1		3002737						
ANR	3002819	Symbol	* cad1		3002737						
ANR	3002820	Symbol	* cad2		3002737						
ANR	3002821	Function	~UpdateData	422:1:11365:11696							
ANR	3002822	FunctionDef	~UpdateData ()		3002821	5					
ANR	3002823	CompoundStatement		422:15:11379:11696	3002821	0					
ANR	3002824	IfStatement	if ( ad1 )		3002821	0					
ANR	3002825	Condition	ad1	423:5:11386:11388	3002821	0	True				
ANR	3002826	Identifier	ad1		3002821	0					
ANR	3002827	CompoundStatement		2:10:11:11	3002821	1					
ANR	3002828	Statement	delete	424:3:11396:11401	3002821	0	True				
ANR	3002829	ExpressionStatement	ad1	424:10:11403:11406	3002821	1	True				
ANR	3002830	Identifier	ad1		3002821	0					
ANR	3002831	IfStatement	if ( ad2 )		3002821	1					
ANR	3002832	Condition	ad2	426:5:11417:11419	3002821	0	True				
ANR	3002833	Identifier	ad2		3002821	0					
ANR	3002834	CompoundStatement		5:10:42:42	3002821	1					
ANR	3002835	Statement	delete	427:3:11427:11432	3002821	0	True				
ANR	3002836	ExpressionStatement	ad2	427:10:11434:11437	3002821	1	True				
ANR	3002837	Identifier	ad2		3002821	0					
ANR	3002838	IfStatement	if ( dc_collector )		3002821	2					
ANR	3002839	Condition	dc_collector	430:5:11501:11512	3002821	0	True				
ANR	3002840	Identifier	dc_collector		3002821	0					
ANR	3002841	CompoundStatement		10:3:140:192	3002821	1					
ANR	3002842	IdentifierDeclStatement	UpdateData * * ud = & dc_collector -> pending_update_list ;	431:3:11520:11572	3002821	0	True				
ANR	3002843	IdentifierDecl	* * ud = & dc_collector -> pending_update_list		3002821	0					
ANR	3002844	IdentifierDeclType	UpdateData * *		3002821	0					
ANR	3002845	Identifier	ud		3002821	1					
ANR	3002846	AssignmentExpression	* * ud = & dc_collector -> pending_update_list		3002821	2		=			
ANR	3002847	Identifier	ud		3002821	0					
ANR	3002848	UnaryOperationExpression	& dc_collector -> pending_update_list		3002821	1					
ANR	3002849	UnaryOperator	&		3002821	0					
ANR	3002850	PtrMemberAccess	dc_collector -> pending_update_list		3002821	1					
ANR	3002851	Identifier	dc_collector		3002821	0					
ANR	3002852	Identifier	pending_update_list		3002821	1					
ANR	3002853	WhileStatement	while ( * ud )		3002821	1					
ANR	3002854	Condition	* ud	432:9:11583:11585	3002821	0	True				
ANR	3002855	UnaryOperationExpression	* ud		3002821	0					
ANR	3002856	UnaryOperator	*		3002821	0					
ANR	3002857	Identifier	ud		3002821	1					
ANR	3002858	CompoundStatement		11:14:208:208	3002821	1					
ANR	3002859	IfStatement	if ( * ud == this )		3002821	0					
ANR	3002860	Condition	* ud == this	433:7:11597:11607	3002821	0	True				
ANR	3002861	EqualityExpression	* ud == this		3002821	0		==			
ANR	3002862	UnaryOperationExpression	* ud		3002821	0					
ANR	3002863	UnaryOperator	*		3002821	0					
ANR	3002864	Identifier	ud		3002821	1					
ANR	3002865	Identifier	this		3002821	1					
ANR	3002866	CompoundStatement		12:20:230:230	3002821	1					
ANR	3002867	ExpressionStatement	* ud = next_in_list	434:5:11617:11635	3002821	0	True				
ANR	3002868	AssignmentExpression	* ud = next_in_list		3002821	0		=			
ANR	3002869	UnaryOperationExpression	* ud		3002821	0					
ANR	3002870	UnaryOperator	*		3002821	0					
ANR	3002871	Identifier	ud		3002821	1					
ANR	3002872	Identifier	next_in_list		3002821	1					
ANR	3002873	BreakStatement	break ;	435:5:11642:11647	3002821	1	True				
ANR	3002874	ExpressionStatement	ud = & ( * ud ) -> next_in_list	437:4:11659:11684	3002821	1	True				
ANR	3002875	AssignmentExpression	ud = & ( * ud ) -> next_in_list		3002821	0		=			
ANR	3002876	Identifier	ud		3002821	0					
ANR	3002877	UnaryOperationExpression	& ( * ud ) -> next_in_list		3002821	1					
ANR	3002878	UnaryOperator	&		3002821	0					
ANR	3002879	PtrMemberAccess	( * ud ) -> next_in_list		3002821	1					
ANR	3002880	UnaryOperationExpression	* ud		3002821	0					
ANR	3002881	UnaryOperator	*		3002821	0					
ANR	3002882	Identifier	ud		3002821	1					
ANR	3002883	Identifier	next_in_list		3002821	1					
ANR	3002884	Identifier	~UpdateData		3002821	1					
ANR	3002885	ParameterList			3002821	2					
ANR	3002886	CFGEntryNode	ENTRY		3002821		True				
ANR	3002887	CFGExitNode	EXIT		3002821		True				
ANR	3002888	Symbol	next_in_list		3002821						
ANR	3002889	Symbol	* ud		3002821						
ANR	3002890	Symbol	dc_collector		3002821						
ANR	3002891	Symbol	this		3002821						
ANR	3002892	Symbol	& dc_collector -> pending_update_list		3002821						
ANR	3002893	Symbol	& ( * ud ) -> next_in_list		3002821						
ANR	3002894	Symbol	ad2		3002821						
ANR	3002895	Symbol	ad1		3002821						
ANR	3002896	Symbol	ud		3002821						
ANR	3002897	Function	DCCollectorGoingAway	441:1:11699:11997							
ANR	3002898	FunctionDef	DCCollectorGoingAway ()		3002897	6					
ANR	3002899	CompoundStatement		441:29:11727:11997	3002897	0					
ANR	3002900	ExpressionStatement	dc_collector = NULL	446:2:11909:11928	3002897	0	True				
ANR	3002901	AssignmentExpression	dc_collector = NULL		3002897	0		=			
ANR	3002902	Identifier	dc_collector		3002897	0					
ANR	3002903	Identifier	NULL		3002897	1					
ANR	3002904	IfStatement	if ( next_in_list )		3002897	1					
ANR	3002905	Condition	next_in_list	447:5:11935:11946	3002897	0	True				
ANR	3002906	Identifier	next_in_list		3002897	0					
ANR	3002907	CompoundStatement		7:19:221:221	3002897	1					
ANR	3002908	ExpressionStatement	next_in_list -> DCCollectorGoingAway ( )	448:3:11954:11990	3002897	0	True				
ANR	3002909	CallExpression	next_in_list -> DCCollectorGoingAway ( )		3002897	0					
ANR	3002910	Callee	next_in_list -> DCCollectorGoingAway		3002897	0					
ANR	3002911	PtrMemberAccess	next_in_list -> DCCollectorGoingAway		3002897	0					
ANR	3002912	Identifier	next_in_list		3002897	0					
ANR	3002913	Identifier	DCCollectorGoingAway		3002897	1					
ANR	3002914	ArgumentList			3002897	1					
ANR	3002915	ReturnType	void		3002897	1					
ANR	3002916	Identifier	DCCollectorGoingAway		3002897	2					
ANR	3002917	ParameterList			3002897	3					
ANR	3002918	CFGEntryNode	ENTRY		3002897		True				
ANR	3002919	CFGExitNode	EXIT		3002897		True				
ANR	3002920	Symbol	NULL		3002897						
ANR	3002921	Symbol	next_in_list		3002897						
ANR	3002922	Symbol	dc_collector		3002897						
ANR	3002923	DeclStmt									
ANR	3002924	Decl							UpdateData	UpdateData *	ud
ANR	3002925	DeclStmt									
ANR	3002926	Decl							char const	char const *	who
ANR	3002927	DeclStmt									
ANR	3002928	Decl							char const	char const *	who
ANR	3002929	Function	DCCollector :: sendUDPUpdate	488:0:13320:14552							
ANR	3002930	FunctionDef	"DCCollector :: sendUDPUpdate (int cmd , ClassAd * ad1 , ClassAd * ad2 , bool nonblocking)"		3002929	0					
ANR	3002931	CompoundStatement		490:0:13409:14552	3002929	0					
ANR	3002932	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Attempting to send update via UDP to collector %s\\n"" , udp_update_destination )"	497:1:13727:13836	3002929	0	True				
ANR	3002933	CallExpression	"dprintf ( D_FULLDEBUG , ""Attempting to send update via UDP to collector %s\\n"" , udp_update_destination )"		3002929	0					
ANR	3002934	Callee	dprintf		3002929	0					
ANR	3002935	Identifier	dprintf		3002929	0					
ANR	3002936	ArgumentList	D_FULLDEBUG		3002929	1					
ANR	3002937	Argument	D_FULLDEBUG		3002929	0					
ANR	3002938	Identifier	D_FULLDEBUG		3002929	0					
ANR	3002939	Argument	"""Attempting to send update via UDP to collector %s\\n"""		3002929	1					
ANR	3002940	PrimaryExpression	"""Attempting to send update via UDP to collector %s\\n"""		3002929	0					
ANR	3002941	Argument	udp_update_destination		3002929	2					
ANR	3002942	Identifier	udp_update_destination		3002929	0					
ANR	3002943	IdentifierDeclStatement	bool raw_protocol = false ;	501:1:13840:13865	3002929	1	True				
ANR	3002944	IdentifierDecl	raw_protocol = false		3002929	0					
ANR	3002945	IdentifierDeclType	bool		3002929	0					
ANR	3002946	Identifier	raw_protocol		3002929	1					
ANR	3002947	AssignmentExpression	raw_protocol = false		3002929	2		=			
ANR	3002948	Identifier	false		3002929	0					
ANR	3002949	Identifier	false		3002929	1					
ANR	3002950	IfStatement	if ( cmd == UPDATE_COLLECTOR_AD || cmd == INVALIDATE_COLLECTOR_ADS )		3002929	2					
ANR	3002951	Condition	cmd == UPDATE_COLLECTOR_AD || cmd == INVALIDATE_COLLECTOR_ADS	502:5:13872:13932	3002929	0	True				
ANR	3002952	OrExpression	cmd == UPDATE_COLLECTOR_AD || cmd == INVALIDATE_COLLECTOR_ADS		3002929	0		||			
ANR	3002953	EqualityExpression	cmd == UPDATE_COLLECTOR_AD		3002929	0		==			
ANR	3002954	Identifier	cmd		3002929	0					
ANR	3002955	Identifier	UPDATE_COLLECTOR_AD		3002929	1					
ANR	3002956	EqualityExpression	cmd == INVALIDATE_COLLECTOR_ADS		3002929	1		==			
ANR	3002957	Identifier	cmd		3002929	0					
ANR	3002958	Identifier	INVALIDATE_COLLECTOR_ADS		3002929	1					
ANR	3002959	CompoundStatement		13:69:526:526	3002929	1					
ANR	3002960	ExpressionStatement	raw_protocol = true	505:2:14025:14044	3002929	0	True				
ANR	3002961	AssignmentExpression	raw_protocol = true		3002929	0		=			
ANR	3002962	Identifier	raw_protocol		3002929	0					
ANR	3002963	Identifier	true		3002929	1					
ANR	3002964	IfStatement	if ( nonblocking )		3002929	3					
ANR	3002965	Condition	nonblocking	508:4:14054:14064	3002929	0	True				
ANR	3002966	Identifier	nonblocking		3002929	0					
ANR	3002967	CompoundStatement		20:2:661:706	3002929	1					
ANR	3002968	IdentifierDeclStatement	"UpdateData * ud = new UpdateData ( ad1 , ad2 , this ) ;"	509:2:14071:14116	3002929	0	True				
ANR	3002969	IdentifierDecl	"* ud = new UpdateData ( ad1 , ad2 , this )"		3002929	0					
ANR	3002970	IdentifierDeclType	UpdateData *		3002929	0					
ANR	3002971	Identifier	ud		3002929	1					
ANR	3002972	AssignmentExpression	"* ud = new UpdateData ( ad1 , ad2 , this )"		3002929	2		=			
ANR	3002973	Identifier	ud		3002929	0					
ANR	3002974	Expression	"ad1 , ad2 , this"		3002929	1					
ANR	3002975	Identifier	ad1		3002929	0					
ANR	3002976	Expression	"ad2 , this"		3002929	1					
ANR	3002977	Identifier	ad2		3002929	0					
ANR	3002978	Identifier	this		3002929	1					
ANR	3002979	ExpressionStatement	"startCommand_nonblocking ( cmd , Sock :: safe_sock , 20 , NULL , UpdateData :: startUpdateCallback , ud , NULL , raw_protocol )"	510:2:14120:14234	3002929	1	True				
ANR	3002980	CallExpression	"startCommand_nonblocking ( cmd , Sock :: safe_sock , 20 , NULL , UpdateData :: startUpdateCallback , ud , NULL , raw_protocol )"		3002929	0					
ANR	3002981	Callee	startCommand_nonblocking		3002929	0					
ANR	3002982	Identifier	startCommand_nonblocking		3002929	0					
ANR	3002983	ArgumentList	cmd		3002929	1					
ANR	3002984	Argument	cmd		3002929	0					
ANR	3002985	Identifier	cmd		3002929	0					
ANR	3002986	Argument	Sock :: safe_sock		3002929	1					
ANR	3002987	Identifier	Sock :: safe_sock		3002929	0					
ANR	3002988	Argument	20		3002929	2					
ANR	3002989	PrimaryExpression	20		3002929	0					
ANR	3002990	Argument	NULL		3002929	3					
ANR	3002991	Identifier	NULL		3002929	0					
ANR	3002992	Argument	UpdateData :: startUpdateCallback		3002929	4					
ANR	3002993	Identifier	UpdateData :: startUpdateCallback		3002929	0					
ANR	3002994	Argument	ud		3002929	5					
ANR	3002995	Identifier	ud		3002929	0					
ANR	3002996	Argument	NULL		3002929	6					
ANR	3002997	Identifier	NULL		3002929	0					
ANR	3002998	Argument	raw_protocol		3002929	7					
ANR	3002999	Identifier	raw_protocol		3002929	0					
ANR	3003000	ReturnStatement	return true ;	511:2:14238:14249	3002929	2	True				
ANR	3003001	Identifier	true		3002929	0					
ANR	3003002	IdentifierDeclStatement	"Sock * ssock = startCommand ( cmd , Sock :: safe_sock , 20 , NULL , NULL , raw_protocol ) ;"	514:1:14256:14334	3002929	4	True				
ANR	3003003	IdentifierDecl	"* ssock = startCommand ( cmd , Sock :: safe_sock , 20 , NULL , NULL , raw_protocol )"		3002929	0					
ANR	3003004	IdentifierDeclType	Sock *		3002929	0					
ANR	3003005	Identifier	ssock		3002929	1					
ANR	3003006	AssignmentExpression	"* ssock = startCommand ( cmd , Sock :: safe_sock , 20 , NULL , NULL , raw_protocol )"		3002929	2		=			
ANR	3003007	Identifier	ssock		3002929	0					
ANR	3003008	CallExpression	"startCommand ( cmd , Sock :: safe_sock , 20 , NULL , NULL , raw_protocol )"		3002929	1					
ANR	3003009	Callee	startCommand		3002929	0					
ANR	3003010	Identifier	startCommand		3002929	0					
ANR	3003011	ArgumentList	cmd		3002929	1					
ANR	3003012	Argument	cmd		3002929	0					
ANR	3003013	Identifier	cmd		3002929	0					
ANR	3003014	Argument	Sock :: safe_sock		3002929	1					
ANR	3003015	Identifier	Sock :: safe_sock		3002929	0					
ANR	3003016	Argument	20		3002929	2					
ANR	3003017	PrimaryExpression	20		3002929	0					
ANR	3003018	Argument	NULL		3002929	3					
ANR	3003019	Identifier	NULL		3002929	0					
ANR	3003020	Argument	NULL		3002929	4					
ANR	3003021	Identifier	NULL		3002929	0					
ANR	3003022	Argument	raw_protocol		3002929	5					
ANR	3003023	Identifier	raw_protocol		3002929	0					
ANR	3003024	IfStatement	if ( ! ssock )		3002929	5					
ANR	3003025	Condition	! ssock	515:4:14340:14345	3002929	0	True				
ANR	3003026	UnaryOperationExpression	! ssock		3002929	0					
ANR	3003027	UnaryOperator	!		3002929	0					
ANR	3003028	Identifier	ssock		3002929	1					
ANR	3003029	CompoundStatement		26:12:938:938	3002929	1					
ANR	3003030	ExpressionStatement	"newError ( CA_COMMUNICATION_ERROR , ""Failed to send UDP update command to collector"" )"	516:2:14352:14442	3002929	0	True				
ANR	3003031	CallExpression	"newError ( CA_COMMUNICATION_ERROR , ""Failed to send UDP update command to collector"" )"		3002929	0					
ANR	3003032	Callee	newError		3002929	0					
ANR	3003033	Identifier	newError		3002929	0					
ANR	3003034	ArgumentList	CA_COMMUNICATION_ERROR		3002929	1					
ANR	3003035	Argument	CA_COMMUNICATION_ERROR		3002929	0					
ANR	3003036	Identifier	CA_COMMUNICATION_ERROR		3002929	0					
ANR	3003037	Argument	"""Failed to send UDP update command to collector"""		3002929	1					
ANR	3003038	PrimaryExpression	"""Failed to send UDP update command to collector"""		3002929	0					
ANR	3003039	ReturnStatement	return false ;	518:2:14446:14458	3002929	1	True				
ANR	3003040	Identifier	false		3002929	0					
ANR	3003041	IdentifierDeclStatement	"bool success = finishUpdate ( this , ssock , ad1 , ad2 ) ;"	521:1:14465:14517	3002929	6	True				
ANR	3003042	IdentifierDecl	"success = finishUpdate ( this , ssock , ad1 , ad2 )"		3002929	0					
ANR	3003043	IdentifierDeclType	bool		3002929	0					
ANR	3003044	Identifier	success		3002929	1					
ANR	3003045	AssignmentExpression	"success = finishUpdate ( this , ssock , ad1 , ad2 )"		3002929	2		=			
ANR	3003046	Identifier	success		3002929	0					
ANR	3003047	CallExpression	"finishUpdate ( this , ssock , ad1 , ad2 )"		3002929	1					
ANR	3003048	Callee	finishUpdate		3002929	0					
ANR	3003049	Identifier	finishUpdate		3002929	0					
ANR	3003050	ArgumentList	this		3002929	1					
ANR	3003051	Argument	this		3002929	0					
ANR	3003052	Identifier	this		3002929	0					
ANR	3003053	Argument	ssock		3002929	1					
ANR	3003054	Identifier	ssock		3002929	0					
ANR	3003055	Argument	ad1		3002929	2					
ANR	3003056	Identifier	ad1		3002929	0					
ANR	3003057	Argument	ad2		3002929	3					
ANR	3003058	Identifier	ad2		3002929	0					
ANR	3003059	Statement	delete	522:1:14520:14525	3002929	7	True				
ANR	3003060	ExpressionStatement	ssock	522:8:14527:14532	3002929	8	True				
ANR	3003061	Identifier	ssock		3002929	0					
ANR	3003062	ReturnStatement	return success ;	524:1:14536:14550	3002929	9	True				
ANR	3003063	Identifier	success		3002929	0					
ANR	3003064	ReturnType	bool		3002929	1					
ANR	3003065	Identifier	DCCollector :: sendUDPUpdate		3002929	2					
ANR	3003066	ParameterList	"int cmd , ClassAd * ad1 , ClassAd * ad2 , bool nonblocking"		3002929	3					
ANR	3003067	Parameter	int cmd	489:28:13353:13359	3002929	0	True				
ANR	3003068	ParameterType	int		3002929	0					
ANR	3003069	Identifier	cmd		3002929	1					
ANR	3003070	Parameter	ClassAd * ad1	489:37:13362:13373	3002929	1	True				
ANR	3003071	ParameterType	ClassAd *		3002929	0					
ANR	3003072	Identifier	ad1		3002929	1					
ANR	3003073	Parameter	ClassAd * ad2	489:51:13376:13387	3002929	2	True				
ANR	3003074	ParameterType	ClassAd *		3002929	0					
ANR	3003075	Identifier	ad2		3002929	1					
ANR	3003076	Parameter	bool nonblocking	489:65:13390:13405	3002929	3	True				
ANR	3003077	ParameterType	bool		3002929	0					
ANR	3003078	Identifier	nonblocking		3002929	1					
ANR	3003079	CFGEntryNode	ENTRY		3002929		True				
ANR	3003080	CFGExitNode	EXIT		3002929		True				
ANR	3003081	Symbol	NULL		3002929						
ANR	3003082	Symbol	nonblocking		3002929						
ANR	3003083	Symbol	INVALIDATE_COLLECTOR_ADS		3002929						
ANR	3003084	Symbol	Sock :: safe_sock		3002929						
ANR	3003085	Symbol	false		3002929						
ANR	3003086	Symbol	this		3002929						
ANR	3003087	Symbol	D_FULLDEBUG		3002929						
ANR	3003088	Symbol	startCommand		3002929						
ANR	3003089	Symbol	ad2		3002929						
ANR	3003090	Symbol	ad1		3002929						
ANR	3003091	Symbol	ud		3002929						
ANR	3003092	Symbol	udp_update_destination		3002929						
ANR	3003093	Symbol	finishUpdate		3002929						
ANR	3003094	Symbol	success		3002929						
ANR	3003095	Symbol	true		3002929						
ANR	3003096	Symbol	raw_protocol		3002929						
ANR	3003097	Symbol	UpdateData :: startUpdateCallback		3002929						
ANR	3003098	Symbol	cmd		3002929						
ANR	3003099	Symbol	UPDATE_COLLECTOR_AD		3002929						
ANR	3003100	Symbol	ssock		3002929						
ANR	3003101	Symbol	CA_COMMUNICATION_ERROR		3002929						
ANR	3003102	Function	DCCollector :: sendTCPUpdate	528:0:14556:16217							
ANR	3003103	FunctionDef	"DCCollector :: sendTCPUpdate (int cmd , ClassAd * ad1 , ClassAd * ad2 , bool nonblocking)"		3003102	0					
ANR	3003104	CompoundStatement		530:0:14645:16217	3003102	0					
ANR	3003105	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Attempting to send update via TCP to collector %s\\n"" , tcp_update_destination )"	531:1:14648:14757	3003102	0	True				
ANR	3003106	CallExpression	"dprintf ( D_FULLDEBUG , ""Attempting to send update via TCP to collector %s\\n"" , tcp_update_destination )"		3003102	0					
ANR	3003107	Callee	dprintf		3003102	0					
ANR	3003108	Identifier	dprintf		3003102	0					
ANR	3003109	ArgumentList	D_FULLDEBUG		3003102	1					
ANR	3003110	Argument	D_FULLDEBUG		3003102	0					
ANR	3003111	Identifier	D_FULLDEBUG		3003102	0					
ANR	3003112	Argument	"""Attempting to send update via TCP to collector %s\\n"""		3003102	1					
ANR	3003113	PrimaryExpression	"""Attempting to send update via TCP to collector %s\\n"""		3003102	0					
ANR	3003114	Argument	tcp_update_destination		3003102	2					
ANR	3003115	Identifier	tcp_update_destination		3003102	0					
ANR	3003116	IfStatement	if ( ! update_rsock )		3003102	1					
ANR	3003117	Condition	! update_rsock	535:5:14765:14778	3003102	0	True				
ANR	3003118	UnaryOperationExpression	! update_rsock		3003102	0					
ANR	3003119	UnaryOperator	!		3003102	0					
ANR	3003120	Identifier	update_rsock		3003102	1					
ANR	3003121	CompoundStatement		6:22:136:136	3003102	1					
ANR	3003122	ReturnStatement	"return initiateTCPUpdate ( cmd , ad1 , ad2 , nonblocking ) ;"	545:2:15292:15346	3003102	0	True				
ANR	3003123	CallExpression	"initiateTCPUpdate ( cmd , ad1 , ad2 , nonblocking )"		3003102	0					
ANR	3003124	Callee	initiateTCPUpdate		3003102	0					
ANR	3003125	Identifier	initiateTCPUpdate		3003102	0					
ANR	3003126	ArgumentList	cmd		3003102	1					
ANR	3003127	Argument	cmd		3003102	0					
ANR	3003128	Identifier	cmd		3003102	0					
ANR	3003129	Argument	ad1		3003102	1					
ANR	3003130	Identifier	ad1		3003102	0					
ANR	3003131	Argument	ad2		3003102	2					
ANR	3003132	Identifier	ad2		3003102	0					
ANR	3003133	Argument	nonblocking		3003102	3					
ANR	3003134	Identifier	nonblocking		3003102	0					
ANR	3003135	ExpressionStatement	update_rsock -> encode ( )	557:1:15882:15904	3003102	2	True				
ANR	3003136	CallExpression	update_rsock -> encode ( )		3003102	0					
ANR	3003137	Callee	update_rsock -> encode		3003102	0					
ANR	3003138	PtrMemberAccess	update_rsock -> encode		3003102	0					
ANR	3003139	Identifier	update_rsock		3003102	0					
ANR	3003140	Identifier	encode		3003102	1					
ANR	3003141	ArgumentList			3003102	1					
ANR	3003142	ExpressionStatement	update_rsock -> put ( cmd )	558:1:15907:15931	3003102	3	True				
ANR	3003143	CallExpression	update_rsock -> put ( cmd )		3003102	0					
ANR	3003144	Callee	update_rsock -> put		3003102	0					
ANR	3003145	PtrMemberAccess	update_rsock -> put		3003102	0					
ANR	3003146	Identifier	update_rsock		3003102	0					
ANR	3003147	Identifier	put		3003102	1					
ANR	3003148	ArgumentList	cmd		3003102	1					
ANR	3003149	Argument	cmd		3003102	0					
ANR	3003150	Identifier	cmd		3003102	0					
ANR	3003151	IfStatement	"if ( finishUpdate ( this , update_rsock , ad1 , ad2 ) )"		3003102	4					
ANR	3003152	Condition	"finishUpdate ( this , update_rsock , ad1 , ad2 )"	559:5:15938:15979	3003102	0	True				
ANR	3003153	CallExpression	"finishUpdate ( this , update_rsock , ad1 , ad2 )"		3003102	0					
ANR	3003154	Callee	finishUpdate		3003102	0					
ANR	3003155	Identifier	finishUpdate		3003102	0					
ANR	3003156	ArgumentList	this		3003102	1					
ANR	3003157	Argument	this		3003102	0					
ANR	3003158	Identifier	this		3003102	0					
ANR	3003159	Argument	update_rsock		3003102	1					
ANR	3003160	Identifier	update_rsock		3003102	0					
ANR	3003161	Argument	ad1		3003102	2					
ANR	3003162	Identifier	ad1		3003102	0					
ANR	3003163	Argument	ad2		3003102	3					
ANR	3003164	Identifier	ad2		3003102	0					
ANR	3003165	CompoundStatement		30:50:1337:1337	3003102	1					
ANR	3003166	ReturnStatement	return true ;	560:2:15987:15998	3003102	0	True				
ANR	3003167	Identifier	true		3003102	0					
ANR	3003168	Statement	dprintf	562:1:16004:16010	3003102	5	True				
ANR	3003169	Statement	(	562:8:16011:16011	3003102	6	True				
ANR	3003170	Statement	D_FULLDEBUG	562:10:16013:16023	3003102	7	True				
ANR	3003171	Statement	","	562:21:16024:16024	3003102	8	True				
ANR	3003172	Statement	"""Couldn't reuse TCP socket to update collector, """	563:4:16031:16079	3003102	9	True				
ANR	3003173	Statement	"""starting new connection\\n"""	564:4:16085:16111	3003102	10	True				
ANR	3003174	Statement	)	564:32:16113:16113	3003102	11	True				
ANR	3003175	ExpressionStatement		564:33:16114:16114	3003102	12	True				
ANR	3003176	Statement	delete	565:1:16117:16122	3003102	13	True				
ANR	3003177	ExpressionStatement	update_rsock	565:8:16124:16136	3003102	14	True				
ANR	3003178	Identifier	update_rsock		3003102	0					
ANR	3003179	ExpressionStatement	update_rsock = NULL	566:1:16139:16158	3003102	15	True				
ANR	3003180	AssignmentExpression	update_rsock = NULL		3003102	0		=			
ANR	3003181	Identifier	update_rsock		3003102	0					
ANR	3003182	Identifier	NULL		3003102	1					
ANR	3003183	ReturnStatement	"return initiateTCPUpdate ( cmd , ad1 , ad2 , nonblocking ) ;"	567:1:16161:16215	3003102	16	True				
ANR	3003184	CallExpression	"initiateTCPUpdate ( cmd , ad1 , ad2 , nonblocking )"		3003102	0					
ANR	3003185	Callee	initiateTCPUpdate		3003102	0					
ANR	3003186	Identifier	initiateTCPUpdate		3003102	0					
ANR	3003187	ArgumentList	cmd		3003102	1					
ANR	3003188	Argument	cmd		3003102	0					
ANR	3003189	Identifier	cmd		3003102	0					
ANR	3003190	Argument	ad1		3003102	1					
ANR	3003191	Identifier	ad1		3003102	0					
ANR	3003192	Argument	ad2		3003102	2					
ANR	3003193	Identifier	ad2		3003102	0					
ANR	3003194	Argument	nonblocking		3003102	3					
ANR	3003195	Identifier	nonblocking		3003102	0					
ANR	3003196	ReturnType	bool		3003102	1					
ANR	3003197	Identifier	DCCollector :: sendTCPUpdate		3003102	2					
ANR	3003198	ParameterList	"int cmd , ClassAd * ad1 , ClassAd * ad2 , bool nonblocking"		3003102	3					
ANR	3003199	Parameter	int cmd	529:28:14589:14595	3003102	0	True				
ANR	3003200	ParameterType	int		3003102	0					
ANR	3003201	Identifier	cmd		3003102	1					
ANR	3003202	Parameter	ClassAd * ad1	529:37:14598:14609	3003102	1	True				
ANR	3003203	ParameterType	ClassAd *		3003102	0					
ANR	3003204	Identifier	ad1		3003102	1					
ANR	3003205	Parameter	ClassAd * ad2	529:51:14612:14623	3003102	2	True				
ANR	3003206	ParameterType	ClassAd *		3003102	0					
ANR	3003207	Identifier	ad2		3003102	1					
ANR	3003208	Parameter	bool nonblocking	529:65:14626:14641	3003102	3	True				
ANR	3003209	ParameterType	bool		3003102	0					
ANR	3003210	Identifier	nonblocking		3003102	1					
ANR	3003211	CFGEntryNode	ENTRY		3003102		True				
ANR	3003212	CFGExitNode	EXIT		3003102		True				
ANR	3003213	Symbol	tcp_update_destination		3003102						
ANR	3003214	Symbol	update_rsock		3003102						
ANR	3003215	Symbol	NULL		3003102						
ANR	3003216	Symbol	nonblocking		3003102						
ANR	3003217	Symbol	finishUpdate		3003102						
ANR	3003218	Symbol	this		3003102						
ANR	3003219	Symbol	true		3003102						
ANR	3003220	Symbol	D_FULLDEBUG		3003102						
ANR	3003221	Symbol	cmd		3003102						
ANR	3003222	Symbol	initiateTCPUpdate		3003102						
ANR	3003223	Symbol	ad2		3003102						
ANR	3003224	Symbol	ad1		3003102						
ANR	3003225	Function	DCCollector :: initiateTCPUpdate	572:0:16222:16902							
ANR	3003226	FunctionDef	"DCCollector :: initiateTCPUpdate (int cmd , ClassAd * ad1 , ClassAd * ad2 , bool nonblocking)"		3003225	0					
ANR	3003227	CompoundStatement		574:0:16315:16902	3003225	0					
ANR	3003228	IfStatement	if ( update_rsock )		3003225	0					
ANR	3003229	Condition	update_rsock	575:5:16322:16333	3003225	0	True				
ANR	3003230	Identifier	update_rsock		3003225	0					
ANR	3003231	CompoundStatement		2:20:21:21	3003225	1					
ANR	3003232	Statement	delete	576:2:16341:16346	3003225	0	True				
ANR	3003233	ExpressionStatement	update_rsock	576:9:16348:16360	3003225	1	True				
ANR	3003234	Identifier	update_rsock		3003225	0					
ANR	3003235	ExpressionStatement	update_rsock = NULL	577:2:16364:16383	3003225	2	True				
ANR	3003236	AssignmentExpression	update_rsock = NULL		3003225	0		=			
ANR	3003237	Identifier	update_rsock		3003225	0					
ANR	3003238	Identifier	NULL		3003225	1					
ANR	3003239	IfStatement	if ( nonblocking )		3003225	1					
ANR	3003240	Condition	nonblocking	579:4:16392:16402	3003225	0	True				
ANR	3003241	Identifier	nonblocking		3003225	0					
ANR	3003242	CompoundStatement		7:2:93:138	3003225	1					
ANR	3003243	IdentifierDeclStatement	"UpdateData * ud = new UpdateData ( ad1 , ad2 , this ) ;"	580:2:16409:16454	3003225	0	True				
ANR	3003244	IdentifierDecl	"* ud = new UpdateData ( ad1 , ad2 , this )"		3003225	0					
ANR	3003245	IdentifierDeclType	UpdateData *		3003225	0					
ANR	3003246	Identifier	ud		3003225	1					
ANR	3003247	AssignmentExpression	"* ud = new UpdateData ( ad1 , ad2 , this )"		3003225	2		=			
ANR	3003248	Identifier	ud		3003225	0					
ANR	3003249	Expression	"ad1 , ad2 , this"		3003225	1					
ANR	3003250	Identifier	ad1		3003225	0					
ANR	3003251	Expression	"ad2 , this"		3003225	1					
ANR	3003252	Identifier	ad2		3003225	0					
ANR	3003253	Identifier	this		3003225	1					
ANR	3003254	ExpressionStatement	"startCommand_nonblocking ( cmd , Sock :: reli_sock , 20 , NULL , UpdateData :: startUpdateCallback , ud )"	581:2:16458:16552	3003225	1	True				
ANR	3003255	CallExpression	"startCommand_nonblocking ( cmd , Sock :: reli_sock , 20 , NULL , UpdateData :: startUpdateCallback , ud )"		3003225	0					
ANR	3003256	Callee	startCommand_nonblocking		3003225	0					
ANR	3003257	Identifier	startCommand_nonblocking		3003225	0					
ANR	3003258	ArgumentList	cmd		3003225	1					
ANR	3003259	Argument	cmd		3003225	0					
ANR	3003260	Identifier	cmd		3003225	0					
ANR	3003261	Argument	Sock :: reli_sock		3003225	1					
ANR	3003262	Identifier	Sock :: reli_sock		3003225	0					
ANR	3003263	Argument	20		3003225	2					
ANR	3003264	PrimaryExpression	20		3003225	0					
ANR	3003265	Argument	NULL		3003225	3					
ANR	3003266	Identifier	NULL		3003225	0					
ANR	3003267	Argument	UpdateData :: startUpdateCallback		3003225	4					
ANR	3003268	Identifier	UpdateData :: startUpdateCallback		3003225	0					
ANR	3003269	Argument	ud		3003225	5					
ANR	3003270	Identifier	ud		3003225	0					
ANR	3003271	ReturnStatement	return true ;	582:2:16556:16567	3003225	2	True				
ANR	3003272	Identifier	true		3003225	0					
ANR	3003273	IdentifierDeclStatement	"Sock * sock = startCommand ( cmd , Sock :: reli_sock , 20 ) ;"	584:1:16573:16624	3003225	2	True				
ANR	3003274	IdentifierDecl	"* sock = startCommand ( cmd , Sock :: reli_sock , 20 )"		3003225	0					
ANR	3003275	IdentifierDeclType	Sock *		3003225	0					
ANR	3003276	Identifier	sock		3003225	1					
ANR	3003277	AssignmentExpression	"* sock = startCommand ( cmd , Sock :: reli_sock , 20 )"		3003225	2		=			
ANR	3003278	Identifier	sock		3003225	0					
ANR	3003279	CallExpression	"startCommand ( cmd , Sock :: reli_sock , 20 )"		3003225	1					
ANR	3003280	Callee	startCommand		3003225	0					
ANR	3003281	Identifier	startCommand		3003225	0					
ANR	3003282	ArgumentList	cmd		3003225	1					
ANR	3003283	Argument	cmd		3003225	0					
ANR	3003284	Identifier	cmd		3003225	0					
ANR	3003285	Argument	Sock :: reli_sock		3003225	1					
ANR	3003286	Identifier	Sock :: reli_sock		3003225	0					
ANR	3003287	Argument	20		3003225	2					
ANR	3003288	PrimaryExpression	20		3003225	0					
ANR	3003289	IfStatement	if ( ! sock )		3003225	3					
ANR	3003290	Condition	! sock	585:4:16630:16634	3003225	0	True				
ANR	3003291	UnaryOperationExpression	! sock		3003225	0					
ANR	3003292	UnaryOperator	!		3003225	0					
ANR	3003293	Identifier	sock		3003225	1					
ANR	3003294	CompoundStatement		12:11:321:321	3003225	1					
ANR	3003295	ExpressionStatement	"newError ( CA_COMMUNICATION_ERROR , ""Failed to send TCP update command to collector"" )"	586:2:16641:16731	3003225	0	True				
ANR	3003296	CallExpression	"newError ( CA_COMMUNICATION_ERROR , ""Failed to send TCP update command to collector"" )"		3003225	0					
ANR	3003297	Callee	newError		3003225	0					
ANR	3003298	Identifier	newError		3003225	0					
ANR	3003299	ArgumentList	CA_COMMUNICATION_ERROR		3003225	1					
ANR	3003300	Argument	CA_COMMUNICATION_ERROR		3003225	0					
ANR	3003301	Identifier	CA_COMMUNICATION_ERROR		3003225	0					
ANR	3003302	Argument	"""Failed to send TCP update command to collector"""		3003225	1					
ANR	3003303	PrimaryExpression	"""Failed to send TCP update command to collector"""		3003225	0					
ANR	3003304	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to send update to %s.\\n"" , idStr ( ) )"	588:2:16735:16793	3003225	1	True				
ANR	3003305	CallExpression	"dprintf ( D_ALWAYS , ""Failed to send update to %s.\\n"" , idStr ( ) )"		3003225	0					
ANR	3003306	Callee	dprintf		3003225	0					
ANR	3003307	Identifier	dprintf		3003225	0					
ANR	3003308	ArgumentList	D_ALWAYS		3003225	1					
ANR	3003309	Argument	D_ALWAYS		3003225	0					
ANR	3003310	Identifier	D_ALWAYS		3003225	0					
ANR	3003311	Argument	"""Failed to send update to %s.\\n"""		3003225	1					
ANR	3003312	PrimaryExpression	"""Failed to send update to %s.\\n"""		3003225	0					
ANR	3003313	Argument	idStr ( )		3003225	2					
ANR	3003314	CallExpression	idStr ( )		3003225	0					
ANR	3003315	Callee	idStr		3003225	0					
ANR	3003316	Identifier	idStr		3003225	0					
ANR	3003317	ArgumentList			3003225	1					
ANR	3003318	ReturnStatement	return false ;	589:2:16797:16809	3003225	2	True				
ANR	3003319	Identifier	false		3003225	0					
ANR	3003320	ExpressionStatement	update_rsock = ( ReliSock * ) sock	591:1:16815:16846	3003225	4	True				
ANR	3003321	AssignmentExpression	update_rsock = ( ReliSock * ) sock		3003225	0		=			
ANR	3003322	Identifier	update_rsock		3003225	0					
ANR	3003323	CastExpression	( ReliSock * ) sock		3003225	1					
ANR	3003324	CastTarget	ReliSock *		3003225	0					
ANR	3003325	Identifier	sock		3003225	1					
ANR	3003326	ReturnStatement	"return finishUpdate ( this , update_rsock , ad1 , ad2 ) ;"	592:1:16849:16900	3003225	5	True				
ANR	3003327	CallExpression	"finishUpdate ( this , update_rsock , ad1 , ad2 )"		3003225	0					
ANR	3003328	Callee	finishUpdate		3003225	0					
ANR	3003329	Identifier	finishUpdate		3003225	0					
ANR	3003330	ArgumentList	this		3003225	1					
ANR	3003331	Argument	this		3003225	0					
ANR	3003332	Identifier	this		3003225	0					
ANR	3003333	Argument	update_rsock		3003225	1					
ANR	3003334	Identifier	update_rsock		3003225	0					
ANR	3003335	Argument	ad1		3003225	2					
ANR	3003336	Identifier	ad1		3003225	0					
ANR	3003337	Argument	ad2		3003225	3					
ANR	3003338	Identifier	ad2		3003225	0					
ANR	3003339	ReturnType	bool		3003225	1					
ANR	3003340	Identifier	DCCollector :: initiateTCPUpdate		3003225	2					
ANR	3003341	ParameterList	"int cmd , ClassAd * ad1 , ClassAd * ad2 , bool nonblocking"		3003225	3					
ANR	3003342	Parameter	int cmd	573:32:16259:16265	3003225	0	True				
ANR	3003343	ParameterType	int		3003225	0					
ANR	3003344	Identifier	cmd		3003225	1					
ANR	3003345	Parameter	ClassAd * ad1	573:41:16268:16279	3003225	1	True				
ANR	3003346	ParameterType	ClassAd *		3003225	0					
ANR	3003347	Identifier	ad1		3003225	1					
ANR	3003348	Parameter	ClassAd * ad2	573:55:16282:16293	3003225	2	True				
ANR	3003349	ParameterType	ClassAd *		3003225	0					
ANR	3003350	Identifier	ad2		3003225	1					
ANR	3003351	Parameter	bool nonblocking	573:69:16296:16311	3003225	3	True				
ANR	3003352	ParameterType	bool		3003225	0					
ANR	3003353	Identifier	nonblocking		3003225	1					
ANR	3003354	CFGEntryNode	ENTRY		3003225		True				
ANR	3003355	CFGExitNode	EXIT		3003225		True				
ANR	3003356	Symbol	idStr		3003225						
ANR	3003357	Symbol	Sock :: reli_sock		3003225						
ANR	3003358	Symbol	NULL		3003225						
ANR	3003359	Symbol	nonblocking		3003225						
ANR	3003360	Symbol	this		3003225						
ANR	3003361	Symbol	D_ALWAYS		3003225						
ANR	3003362	Symbol	false		3003225						
ANR	3003363	Symbol	startCommand		3003225						
ANR	3003364	Symbol	ad2		3003225						
ANR	3003365	Symbol	ad1		3003225						
ANR	3003366	Symbol	ud		3003225						
ANR	3003367	Symbol	sock		3003225						
ANR	3003368	Symbol	update_rsock		3003225						
ANR	3003369	Symbol	finishUpdate		3003225						
ANR	3003370	Symbol	true		3003225						
ANR	3003371	Symbol	UpdateData :: startUpdateCallback		3003225						
ANR	3003372	Symbol	cmd		3003225						
ANR	3003373	Symbol	CA_COMMUNICATION_ERROR		3003225						
ANR	3003374	Function	DCCollector :: displayResults	596:0:16906:17065							
ANR	3003375	FunctionDef	DCCollector :: displayResults ()		3003374	0					
ANR	3003376	CompoundStatement		598:0:16947:17065	3003374	0					
ANR	3003377	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Will use %s to update collector %s\\n"" , use_tcp ? ""TCP"" : ""UDP"" , updateDestination ( ) )"	599:1:16950:17063	3003374	0	True				
ANR	3003378	CallExpression	"dprintf ( D_FULLDEBUG , ""Will use %s to update collector %s\\n"" , use_tcp ? ""TCP"" : ""UDP"" , updateDestination ( ) )"		3003374	0					
ANR	3003379	Callee	dprintf		3003374	0					
ANR	3003380	Identifier	dprintf		3003374	0					
ANR	3003381	ArgumentList	D_FULLDEBUG		3003374	1					
ANR	3003382	Argument	D_FULLDEBUG		3003374	0					
ANR	3003383	Identifier	D_FULLDEBUG		3003374	0					
ANR	3003384	Argument	"""Will use %s to update collector %s\\n"""		3003374	1					
ANR	3003385	PrimaryExpression	"""Will use %s to update collector %s\\n"""		3003374	0					
ANR	3003386	Argument	"use_tcp ? ""TCP"" : ""UDP"""		3003374	2					
ANR	3003387	ConditionalExpression	"use_tcp ? ""TCP"" : ""UDP"""		3003374	0					
ANR	3003388	Condition	use_tcp		3003374	0					
ANR	3003389	Identifier	use_tcp		3003374	0					
ANR	3003390	PrimaryExpression	"""TCP"""		3003374	1					
ANR	3003391	PrimaryExpression	"""UDP"""		3003374	2					
ANR	3003392	Argument	updateDestination ( )		3003374	3					
ANR	3003393	CallExpression	updateDestination ( )		3003374	0					
ANR	3003394	Callee	updateDestination		3003374	0					
ANR	3003395	Identifier	updateDestination		3003374	0					
ANR	3003396	ArgumentList			3003374	1					
ANR	3003397	ReturnType	void		3003374	1					
ANR	3003398	Identifier	DCCollector :: displayResults		3003374	2					
ANR	3003399	ParameterList			3003374	3					
ANR	3003400	CFGEntryNode	ENTRY		3003374		True				
ANR	3003401	CFGExitNode	EXIT		3003374		True				
ANR	3003402	Symbol	updateDestination		3003374						
ANR	3003403	Symbol	D_FULLDEBUG		3003374						
ANR	3003404	Symbol	use_tcp		3003374						
ANR	3003405	Function	DCCollector :: updateDestination	606:0:17179:17318							
ANR	3003406	FunctionDef	DCCollector :: updateDestination ()		3003405	0					
ANR	3003407	CompoundStatement		608:0:17230:17318	3003405	0					
ANR	3003408	IfStatement	if ( use_tcp )		3003405	0					
ANR	3003409	Condition	use_tcp	609:5:17237:17243	3003405	0	True				
ANR	3003410	Identifier	use_tcp		3003405	0					
ANR	3003411	CompoundStatement		2:15:16:16	3003405	1					
ANR	3003412	ReturnStatement	return tcp_update_destination ;	610:2:17252:17281	3003405	0	True				
ANR	3003413	Identifier	tcp_update_destination		3003405	0					
ANR	3003414	ReturnStatement	return udp_update_destination ;	612:1:17287:17316	3003405	1	True				
ANR	3003415	Identifier	udp_update_destination		3003405	0					
ANR	3003416	ReturnType	const char *		3003405	1					
ANR	3003417	Identifier	DCCollector :: updateDestination		3003405	2					
ANR	3003418	ParameterList			3003405	3					
ANR	3003419	CFGEntryNode	ENTRY		3003405		True				
ANR	3003420	CFGExitNode	EXIT		3003405		True				
ANR	3003421	Symbol	tcp_update_destination		3003405						
ANR	3003422	Symbol	udp_update_destination		3003405						
ANR	3003423	Symbol	use_tcp		3003405						
ANR	3003424	Function	DCCollector :: initDestinationStrings	616:0:17322:19025							
ANR	3003425	FunctionDef	DCCollector :: initDestinationStrings ()		3003424	0					
ANR	3003426	CompoundStatement		618:0:17371:19025	3003424	0					
ANR	3003427	IfStatement	if ( udp_update_destination )		3003424	0					
ANR	3003428	Condition	udp_update_destination	619:5:17378:17399	3003424	0	True				
ANR	3003429	Identifier	udp_update_destination		3003424	0					
ANR	3003430	CompoundStatement		2:30:31:31	3003424	1					
ANR	3003431	Statement	delete	620:2:17407:17412	3003424	0	True				
ANR	3003432	Statement	[	620:9:17414:17414	3003424	1	True				
ANR	3003433	Statement	]	620:10:17415:17415	3003424	2	True				
ANR	3003434	ExpressionStatement	udp_update_destination	620:12:17417:17439	3003424	3	True				
ANR	3003435	Identifier	udp_update_destination		3003424	0					
ANR	3003436	ExpressionStatement	udp_update_destination = NULL	621:2:17443:17472	3003424	4	True				
ANR	3003437	AssignmentExpression	udp_update_destination = NULL		3003424	0		=			
ANR	3003438	Identifier	udp_update_destination		3003424	0					
ANR	3003439	Identifier	NULL		3003424	1					
ANR	3003440	IfStatement	if ( tcp_update_destination )		3003424	1					
ANR	3003441	Condition	tcp_update_destination	623:5:17482:17503	3003424	0	True				
ANR	3003442	Identifier	tcp_update_destination		3003424	0					
ANR	3003443	CompoundStatement		6:30:135:135	3003424	1					
ANR	3003444	Statement	delete	624:2:17511:17516	3003424	0	True				
ANR	3003445	Statement	[	624:9:17518:17518	3003424	1	True				
ANR	3003446	Statement	]	624:10:17519:17519	3003424	2	True				
ANR	3003447	ExpressionStatement	tcp_update_destination	624:12:17521:17543	3003424	3	True				
ANR	3003448	Identifier	tcp_update_destination		3003424	0					
ANR	3003449	ExpressionStatement	tcp_update_destination = NULL	625:2:17547:17576	3003424	4	True				
ANR	3003450	AssignmentExpression	tcp_update_destination = NULL		3003424	0		=			
ANR	3003451	Identifier	tcp_update_destination		3003424	0					
ANR	3003452	Identifier	NULL		3003424	1					
ANR	3003453	IdentifierDeclStatement	MyString dest ;	628:1:17583:17596	3003424	2	True				
ANR	3003454	IdentifierDecl	dest		3003424	0					
ANR	3003455	IdentifierDeclType	MyString		3003424	0					
ANR	3003456	Identifier	dest		3003424	1					
ANR	3003457	IfStatement	if ( _full_hostname )		3003424	3					
ANR	3003458	Condition	_full_hostname	633:5:17791:17804	3003424	0	True				
ANR	3003459	Identifier	_full_hostname		3003424	0					
ANR	3003460	CompoundStatement		16:22:436:436	3003424	1					
ANR	3003461	ExpressionStatement	dest = _full_hostname	634:2:17812:17833	3003424	0	True				
ANR	3003462	AssignmentExpression	dest = _full_hostname		3003424	0		=			
ANR	3003463	Identifier	dest		3003424	0					
ANR	3003464	Identifier	_full_hostname		3003424	1					
ANR	3003465	ExpressionStatement	dest += ' '	635:2:17837:17848	3003424	1	True				
ANR	3003466	AssignmentExpression	dest += ' '		3003424	0		+=			
ANR	3003467	Identifier	dest		3003424	0					
ANR	3003468	PrimaryExpression	' '		3003424	1					
ANR	3003469	ExpressionStatement	dest += _addr	636:2:17852:17865	3003424	2	True				
ANR	3003470	AssignmentExpression	dest += _addr		3003424	0		+=			
ANR	3003471	Identifier	dest		3003424	0					
ANR	3003472	Identifier	_addr		3003424	1					
ANR	3003473	ElseStatement	else		3003424	0					
ANR	3003474	CompoundStatement		20:8:503:503	3003424	0					
ANR	3003475	ExpressionStatement	dest = _addr	638:2:17879:17891	3003424	0	True				
ANR	3003476	AssignmentExpression	dest = _addr		3003424	0		=			
ANR	3003477	Identifier	dest		3003424	0					
ANR	3003478	Identifier	_addr		3003424	1					
ANR	3003479	ExpressionStatement	udp_update_destination = strnewp ( dest . Value ( ) )	640:1:17897:17945	3003424	4	True				
ANR	3003480	AssignmentExpression	udp_update_destination = strnewp ( dest . Value ( ) )		3003424	0		=			
ANR	3003481	Identifier	udp_update_destination		3003424	0					
ANR	3003482	CallExpression	strnewp ( dest . Value ( ) )		3003424	1					
ANR	3003483	Callee	strnewp		3003424	0					
ANR	3003484	Identifier	strnewp		3003424	0					
ANR	3003485	ArgumentList	dest . Value ( )		3003424	1					
ANR	3003486	Argument	dest . Value ( )		3003424	0					
ANR	3003487	CallExpression	dest . Value ( )		3003424	0					
ANR	3003488	Callee	dest . Value		3003424	0					
ANR	3003489	MemberAccess	dest . Value		3003424	0					
ANR	3003490	Identifier	dest		3003424	0					
ANR	3003491	Identifier	Value		3003424	1					
ANR	3003492	ArgumentList			3003424	1					
ANR	3003493	IfStatement	if ( ! tcp_collector_host )		3003424	5					
ANR	3003494	Condition	! tcp_collector_host	646:5:18112:18131	3003424	0	True				
ANR	3003495	UnaryOperationExpression	! tcp_collector_host		3003424	0					
ANR	3003496	UnaryOperator	!		3003424	0					
ANR	3003497	Identifier	tcp_collector_host		3003424	1					
ANR	3003498	CompoundStatement		29:28:763:763	3003424	1					
ANR	3003499	ExpressionStatement	tcp_update_destination = strnewp ( udp_update_destination )	650:2:18321:18379	3003424	0	True				
ANR	3003500	AssignmentExpression	tcp_update_destination = strnewp ( udp_update_destination )		3003424	0		=			
ANR	3003501	Identifier	tcp_update_destination		3003424	0					
ANR	3003502	CallExpression	strnewp ( udp_update_destination )		3003424	1					
ANR	3003503	Callee	strnewp		3003424	0					
ANR	3003504	Identifier	strnewp		3003424	0					
ANR	3003505	ArgumentList	udp_update_destination		3003424	1					
ANR	3003506	Argument	udp_update_destination		3003424	0					
ANR	3003507	Identifier	udp_update_destination		3003424	0					
ANR	3003508	ElseStatement	else		3003424	0					
ANR	3003509	IfStatement	if ( is_valid_sinful ( tcp_collector_host ) )		3003424	0					
ANR	3003510	Condition	is_valid_sinful ( tcp_collector_host )	652:12:18394:18428	3003424	0	True				
ANR	3003511	CallExpression	is_valid_sinful ( tcp_collector_host )		3003424	0					
ANR	3003512	Callee	is_valid_sinful		3003424	0					
ANR	3003513	Identifier	is_valid_sinful		3003424	0					
ANR	3003514	ArgumentList	tcp_collector_host		3003424	1					
ANR	3003515	Argument	tcp_collector_host		3003424	0					
ANR	3003516	Identifier	tcp_collector_host		3003424	0					
ANR	3003517	CompoundStatement		35:50:1060:1060	3003424	1					
ANR	3003518	ExpressionStatement	tcp_update_destination = strnewp ( tcp_collector_host )	655:2:18546:18600	3003424	0	True				
ANR	3003519	AssignmentExpression	tcp_update_destination = strnewp ( tcp_collector_host )		3003424	0		=			
ANR	3003520	Identifier	tcp_update_destination		3003424	0					
ANR	3003521	CallExpression	strnewp ( tcp_collector_host )		3003424	1					
ANR	3003522	Callee	strnewp		3003424	0					
ANR	3003523	Identifier	strnewp		3003424	0					
ANR	3003524	ArgumentList	tcp_collector_host		3003424	1					
ANR	3003525	Argument	tcp_collector_host		3003424	0					
ANR	3003526	Identifier	tcp_collector_host		3003424	0					
ANR	3003527	ElseStatement	else		3003424	0					
ANR	3003528	CompoundStatement		47:2:1488:1500	3003424	0					
ANR	3003529	ExpressionStatement	dest = tcp_collector_addr	663:2:18831:18856	3003424	0	True				
ANR	3003530	AssignmentExpression	dest = tcp_collector_addr		3003424	0		=			
ANR	3003531	Identifier	dest		3003424	0					
ANR	3003532	Identifier	tcp_collector_addr		3003424	1					
ANR	3003533	IdentifierDeclStatement	char buf [ 64 ] ;	664:2:18860:18872	3003424	1	True				
ANR	3003534	IdentifierDecl	buf [ 64 ]		3003424	0					
ANR	3003535	IdentifierDeclType	char [ 64 ]		3003424	0					
ANR	3003536	Identifier	buf		3003424	1					
ANR	3003537	PrimaryExpression	64		3003424	2					
ANR	3003538	ExpressionStatement	"sprintf ( buf , ""%d"" , tcp_collector_port )"	665:2:18876:18916	3003424	2	True				
ANR	3003539	CallExpression	"sprintf ( buf , ""%d"" , tcp_collector_port )"		3003424	0					
ANR	3003540	Callee	sprintf		3003424	0					
ANR	3003541	Identifier	sprintf		3003424	0					
ANR	3003542	ArgumentList	buf		3003424	1					
ANR	3003543	Argument	buf		3003424	0					
ANR	3003544	Identifier	buf		3003424	0					
ANR	3003545	Argument	"""%d"""		3003424	1					
ANR	3003546	PrimaryExpression	"""%d"""		3003424	0					
ANR	3003547	Argument	tcp_collector_port		3003424	2					
ANR	3003548	Identifier	tcp_collector_port		3003424	0					
ANR	3003549	ExpressionStatement	"dest += "" (port: """	666:2:18920:18938	3003424	3	True				
ANR	3003550	AssignmentExpression	"dest += "" (port: """		3003424	0		+=			
ANR	3003551	Identifier	dest		3003424	0					
ANR	3003552	PrimaryExpression	""" (port: """		3003424	1					
ANR	3003553	ExpressionStatement	dest += buf	667:2:18942:18953	3003424	4	True				
ANR	3003554	AssignmentExpression	dest += buf		3003424	0		+=			
ANR	3003555	Identifier	dest		3003424	0					
ANR	3003556	Identifier	buf		3003424	1					
ANR	3003557	ExpressionStatement	dest += ')'	668:2:18957:18968	3003424	5	True				
ANR	3003558	AssignmentExpression	dest += ')'		3003424	0		+=			
ANR	3003559	Identifier	dest		3003424	0					
ANR	3003560	PrimaryExpression	')'		3003424	1					
ANR	3003561	ExpressionStatement	tcp_update_destination = strnewp ( dest . Value ( ) )	669:2:18972:19020	3003424	6	True				
ANR	3003562	AssignmentExpression	tcp_update_destination = strnewp ( dest . Value ( ) )		3003424	0		=			
ANR	3003563	Identifier	tcp_update_destination		3003424	0					
ANR	3003564	CallExpression	strnewp ( dest . Value ( ) )		3003424	1					
ANR	3003565	Callee	strnewp		3003424	0					
ANR	3003566	Identifier	strnewp		3003424	0					
ANR	3003567	ArgumentList	dest . Value ( )		3003424	1					
ANR	3003568	Argument	dest . Value ( )		3003424	0					
ANR	3003569	CallExpression	dest . Value ( )		3003424	0					
ANR	3003570	Callee	dest . Value		3003424	0					
ANR	3003571	MemberAccess	dest . Value		3003424	0					
ANR	3003572	Identifier	dest		3003424	0					
ANR	3003573	Identifier	Value		3003424	1					
ANR	3003574	ArgumentList			3003424	1					
ANR	3003575	ReturnType	void		3003424	1					
ANR	3003576	Identifier	DCCollector :: initDestinationStrings		3003424	2					
ANR	3003577	ParameterList			3003424	3					
ANR	3003578	CFGEntryNode	ENTRY		3003424		True				
ANR	3003579	CFGExitNode	EXIT		3003424		True				
ANR	3003580	Symbol	NULL		3003424						
ANR	3003581	Symbol	dest . Value		3003424						
ANR	3003582	Symbol	is_valid_sinful		3003424						
ANR	3003583	Symbol	tcp_collector_addr		3003424						
ANR	3003584	Symbol	dest		3003424						
ANR	3003585	Symbol	tcp_update_destination		3003424						
ANR	3003586	Symbol	buf		3003424						
ANR	3003587	Symbol	udp_update_destination		3003424						
ANR	3003588	Symbol	tcp_collector_host		3003424						
ANR	3003589	Symbol	_full_hostname		3003424						
ANR	3003590	Symbol	_addr		3003424						
ANR	3003591	Symbol	strnewp		3003424						
ANR	3003592	Symbol	tcp_collector_port		3003424						
ANR	3003593	Function	DCCollectorAdSeq :: DCCollectorAdSeq	679:0:19114:19507							
ANR	3003594	FunctionDef	"DCCollectorAdSeq :: DCCollectorAdSeq (const char * inName , const char * inMyType , const char * inMachine)"		3003593	0					
ANR	3003595	CompoundStatement		682:0:19234:19507	3003593	0					
ANR	3003596	IfStatement	if ( inName )		3003593	0					
ANR	3003597	Condition	inName	684:6:19262:19267	3003593	0	True				
ANR	3003598	Identifier	inName		3003593	0					
ANR	3003599	CompoundStatement		3:15:36:36	3003593	1					
ANR	3003600	ExpressionStatement	Name = strdup ( inName )	685:2:19275:19298	3003593	0	True				
ANR	3003601	AssignmentExpression	Name = strdup ( inName )		3003593	0		=			
ANR	3003602	Identifier	Name		3003593	0					
ANR	3003603	CallExpression	strdup ( inName )		3003593	1					
ANR	3003604	Callee	strdup		3003593	0					
ANR	3003605	Identifier	strdup		3003593	0					
ANR	3003606	ArgumentList	inName		3003593	1					
ANR	3003607	Argument	inName		3003593	0					
ANR	3003608	Identifier	inName		3003593	0					
ANR	3003609	ElseStatement	else		3003593	0					
ANR	3003610	CompoundStatement		5:8:73:73	3003593	0					
ANR	3003611	ExpressionStatement	Name = NULL	687:2:19312:19323	3003593	0	True				
ANR	3003612	AssignmentExpression	Name = NULL		3003593	0		=			
ANR	3003613	Identifier	Name		3003593	0					
ANR	3003614	Identifier	NULL		3003593	1					
ANR	3003615	IfStatement	if ( inMyType )		3003593	1					
ANR	3003616	Condition	inMyType	689:6:19334:19341	3003593	0	True				
ANR	3003617	Identifier	inMyType		3003593	0					
ANR	3003618	CompoundStatement		8:17:110:110	3003593	1					
ANR	3003619	ExpressionStatement	MyType = strdup ( inMyType )	690:2:19349:19376	3003593	0	True				
ANR	3003620	AssignmentExpression	MyType = strdup ( inMyType )		3003593	0		=			
ANR	3003621	Identifier	MyType		3003593	0					
ANR	3003622	CallExpression	strdup ( inMyType )		3003593	1					
ANR	3003623	Callee	strdup		3003593	0					
ANR	3003624	Identifier	strdup		3003593	0					
ANR	3003625	ArgumentList	inMyType		3003593	1					
ANR	3003626	Argument	inMyType		3003593	0					
ANR	3003627	Identifier	inMyType		3003593	0					
ANR	3003628	ElseStatement	else		3003593	0					
ANR	3003629	CompoundStatement		10:8:151:151	3003593	0					
ANR	3003630	ExpressionStatement	MyType = NULL	692:2:19390:19403	3003593	0	True				
ANR	3003631	AssignmentExpression	MyType = NULL		3003593	0		=			
ANR	3003632	Identifier	MyType		3003593	0					
ANR	3003633	Identifier	NULL		3003593	1					
ANR	3003634	IfStatement	if ( inMachine )		3003593	2					
ANR	3003635	Condition	inMachine	694:6:19414:19422	3003593	0	True				
ANR	3003636	Identifier	inMachine		3003593	0					
ANR	3003637	CompoundStatement		13:18:191:191	3003593	1					
ANR	3003638	ExpressionStatement	Machine = strdup ( inMachine )	695:2:19430:19459	3003593	0	True				
ANR	3003639	AssignmentExpression	Machine = strdup ( inMachine )		3003593	0		=			
ANR	3003640	Identifier	Machine		3003593	0					
ANR	3003641	CallExpression	strdup ( inMachine )		3003593	1					
ANR	3003642	Callee	strdup		3003593	0					
ANR	3003643	Identifier	strdup		3003593	0					
ANR	3003644	ArgumentList	inMachine		3003593	1					
ANR	3003645	Argument	inMachine		3003593	0					
ANR	3003646	Identifier	inMachine		3003593	0					
ANR	3003647	ElseStatement	else		3003593	0					
ANR	3003648	CompoundStatement		15:8:234:234	3003593	0					
ANR	3003649	ExpressionStatement	Machine = NULL	697:2:19473:19487	3003593	0	True				
ANR	3003650	AssignmentExpression	Machine = NULL		3003593	0		=			
ANR	3003651	Identifier	Machine		3003593	0					
ANR	3003652	Identifier	NULL		3003593	1					
ANR	3003653	ExpressionStatement	sequence = 0	699:1:19493:19505	3003593	3	True				
ANR	3003654	AssignmentExpression	sequence = 0		3003593	0		=			
ANR	3003655	Identifier	sequence		3003593	0					
ANR	3003656	PrimaryExpression	0		3003593	1					
ANR	3003657	Identifier	DCCollectorAdSeq :: DCCollectorAdSeq		3003593	1					
ANR	3003658	ParameterList	"const char * inName , const char * inMyType , const char * inMachine"		3003593	2					
ANR	3003659	Parameter	const char * inName	679:36:19150:19167	3003593	0	True				
ANR	3003660	ParameterType	const char *		3003593	0					
ANR	3003661	Identifier	inName		3003593	1					
ANR	3003662	Parameter	const char * inMyType	680:9:19179:19198	3003593	1	True				
ANR	3003663	ParameterType	const char *		3003593	0					
ANR	3003664	Identifier	inMyType		3003593	1					
ANR	3003665	Parameter	const char * inMachine	681:9:19210:19230	3003593	2	True				
ANR	3003666	ParameterType	const char *		3003593	0					
ANR	3003667	Identifier	inMachine		3003593	1					
ANR	3003668	CFGEntryNode	ENTRY		3003593		True				
ANR	3003669	CFGExitNode	EXIT		3003593		True				
ANR	3003670	Symbol	MyType		3003593						
ANR	3003671	Symbol	sequence		3003593						
ANR	3003672	Symbol	NULL		3003593						
ANR	3003673	Symbol	inMyType		3003593						
ANR	3003674	Symbol	strdup		3003593						
ANR	3003675	Symbol	inMachine		3003593						
ANR	3003676	Symbol	Machine		3003593						
ANR	3003677	Symbol	inName		3003593						
ANR	3003678	Symbol	Name		3003593						
ANR	3003679	Function	DCCollectorAdSeq :: DCCollectorAdSeq	703:0:19557:20003							
ANR	3003680	FunctionDef	DCCollectorAdSeq :: DCCollectorAdSeq (const DCCollectorAdSeq & ref)		3003679	0					
ANR	3003681	CompoundStatement		704:0:19623:20003	3003679	0					
ANR	3003682	IdentifierDeclStatement	const char * tmp ;	705:1:19626:19641	3003679	0	True				
ANR	3003683	IdentifierDecl	* tmp		3003679	0					
ANR	3003684	IdentifierDeclType	const char *		3003679	0					
ANR	3003685	Identifier	tmp		3003679	1					
ANR	3003686	ExpressionStatement	tmp = ref . getName ( )	707:1:19645:19665	3003679	1	True				
ANR	3003687	AssignmentExpression	tmp = ref . getName ( )		3003679	0		=			
ANR	3003688	Identifier	tmp		3003679	0					
ANR	3003689	CallExpression	ref . getName ( )		3003679	1					
ANR	3003690	Callee	ref . getName		3003679	0					
ANR	3003691	MemberAccess	ref . getName		3003679	0					
ANR	3003692	Identifier	ref		3003679	0					
ANR	3003693	Identifier	getName		3003679	1					
ANR	3003694	ArgumentList			3003679	1					
ANR	3003695	IfStatement	if ( tmp )		3003679	2					
ANR	3003696	Condition	tmp	708:6:19673:19675	3003679	0	True				
ANR	3003697	Identifier	tmp		3003679	0					
ANR	3003698	CompoundStatement		5:12:55:55	3003679	1					
ANR	3003699	ExpressionStatement	this -> Name = strdup ( tmp )	709:2:19683:19709	3003679	0	True				
ANR	3003700	AssignmentExpression	this -> Name = strdup ( tmp )		3003679	0		=			
ANR	3003701	PtrMemberAccess	this -> Name		3003679	0					
ANR	3003702	Identifier	this		3003679	0					
ANR	3003703	Identifier	Name		3003679	1					
ANR	3003704	CallExpression	strdup ( tmp )		3003679	1					
ANR	3003705	Callee	strdup		3003679	0					
ANR	3003706	Identifier	strdup		3003679	0					
ANR	3003707	ArgumentList	tmp		3003679	1					
ANR	3003708	Argument	tmp		3003679	0					
ANR	3003709	Identifier	tmp		3003679	0					
ANR	3003710	ElseStatement	else		3003679	0					
ANR	3003711	CompoundStatement		7:8:95:95	3003679	0					
ANR	3003712	ExpressionStatement	this -> Name = NULL	711:2:19723:19740	3003679	0	True				
ANR	3003713	AssignmentExpression	this -> Name = NULL		3003679	0		=			
ANR	3003714	PtrMemberAccess	this -> Name		3003679	0					
ANR	3003715	Identifier	this		3003679	0					
ANR	3003716	Identifier	Name		3003679	1					
ANR	3003717	Identifier	NULL		3003679	1					
ANR	3003718	ExpressionStatement	tmp = ref . getMyType ( )	714:1:19747:19769	3003679	3	True				
ANR	3003719	AssignmentExpression	tmp = ref . getMyType ( )		3003679	0		=			
ANR	3003720	Identifier	tmp		3003679	0					
ANR	3003721	CallExpression	ref . getMyType ( )		3003679	1					
ANR	3003722	Callee	ref . getMyType		3003679	0					
ANR	3003723	MemberAccess	ref . getMyType		3003679	0					
ANR	3003724	Identifier	ref		3003679	0					
ANR	3003725	Identifier	getMyType		3003679	1					
ANR	3003726	ArgumentList			3003679	1					
ANR	3003727	IfStatement	if ( tmp )		3003679	4					
ANR	3003728	Condition	tmp	715:6:19777:19779	3003679	0	True				
ANR	3003729	Identifier	tmp		3003679	0					
ANR	3003730	CompoundStatement		12:12:159:159	3003679	1					
ANR	3003731	ExpressionStatement	this -> MyType = strdup ( tmp )	716:2:19787:19815	3003679	0	True				
ANR	3003732	AssignmentExpression	this -> MyType = strdup ( tmp )		3003679	0		=			
ANR	3003733	PtrMemberAccess	this -> MyType		3003679	0					
ANR	3003734	Identifier	this		3003679	0					
ANR	3003735	Identifier	MyType		3003679	1					
ANR	3003736	CallExpression	strdup ( tmp )		3003679	1					
ANR	3003737	Callee	strdup		3003679	0					
ANR	3003738	Identifier	strdup		3003679	0					
ANR	3003739	ArgumentList	tmp		3003679	1					
ANR	3003740	Argument	tmp		3003679	0					
ANR	3003741	Identifier	tmp		3003679	0					
ANR	3003742	ElseStatement	else		3003679	0					
ANR	3003743	CompoundStatement		14:8:201:201	3003679	0					
ANR	3003744	ExpressionStatement	this -> MyType = NULL	718:2:19829:19848	3003679	0	True				
ANR	3003745	AssignmentExpression	this -> MyType = NULL		3003679	0		=			
ANR	3003746	PtrMemberAccess	this -> MyType		3003679	0					
ANR	3003747	Identifier	this		3003679	0					
ANR	3003748	Identifier	MyType		3003679	1					
ANR	3003749	Identifier	NULL		3003679	1					
ANR	3003750	ExpressionStatement	tmp = ref . getMachine ( )	721:1:19855:19878	3003679	5	True				
ANR	3003751	AssignmentExpression	tmp = ref . getMachine ( )		3003679	0		=			
ANR	3003752	Identifier	tmp		3003679	0					
ANR	3003753	CallExpression	ref . getMachine ( )		3003679	1					
ANR	3003754	Callee	ref . getMachine		3003679	0					
ANR	3003755	MemberAccess	ref . getMachine		3003679	0					
ANR	3003756	Identifier	ref		3003679	0					
ANR	3003757	Identifier	getMachine		3003679	1					
ANR	3003758	ArgumentList			3003679	1					
ANR	3003759	IfStatement	if ( tmp )		3003679	6					
ANR	3003760	Condition	tmp	722:6:19886:19888	3003679	0	True				
ANR	3003761	Identifier	tmp		3003679	0					
ANR	3003762	CompoundStatement		19:12:268:268	3003679	1					
ANR	3003763	ExpressionStatement	this -> Machine = strdup ( tmp )	723:2:19896:19925	3003679	0	True				
ANR	3003764	AssignmentExpression	this -> Machine = strdup ( tmp )		3003679	0		=			
ANR	3003765	PtrMemberAccess	this -> Machine		3003679	0					
ANR	3003766	Identifier	this		3003679	0					
ANR	3003767	Identifier	Machine		3003679	1					
ANR	3003768	CallExpression	strdup ( tmp )		3003679	1					
ANR	3003769	Callee	strdup		3003679	0					
ANR	3003770	Identifier	strdup		3003679	0					
ANR	3003771	ArgumentList	tmp		3003679	1					
ANR	3003772	Argument	tmp		3003679	0					
ANR	3003773	Identifier	tmp		3003679	0					
ANR	3003774	ElseStatement	else		3003679	0					
ANR	3003775	CompoundStatement		21:8:311:311	3003679	0					
ANR	3003776	ExpressionStatement	this -> Machine = NULL	725:2:19939:19959	3003679	0	True				
ANR	3003777	AssignmentExpression	this -> Machine = NULL		3003679	0		=			
ANR	3003778	PtrMemberAccess	this -> Machine		3003679	0					
ANR	3003779	Identifier	this		3003679	0					
ANR	3003780	Identifier	Machine		3003679	1					
ANR	3003781	Identifier	NULL		3003679	1					
ANR	3003782	ExpressionStatement	this -> sequence = ref . getSequence ( )	728:1:19966:20001	3003679	7	True				
ANR	3003783	AssignmentExpression	this -> sequence = ref . getSequence ( )		3003679	0		=			
ANR	3003784	PtrMemberAccess	this -> sequence		3003679	0					
ANR	3003785	Identifier	this		3003679	0					
ANR	3003786	Identifier	sequence		3003679	1					
ANR	3003787	CallExpression	ref . getSequence ( )		3003679	1					
ANR	3003788	Callee	ref . getSequence		3003679	0					
ANR	3003789	MemberAccess	ref . getSequence		3003679	0					
ANR	3003790	Identifier	ref		3003679	0					
ANR	3003791	Identifier	getSequence		3003679	1					
ANR	3003792	ArgumentList			3003679	1					
ANR	3003793	Identifier	DCCollectorAdSeq :: DCCollectorAdSeq		3003679	1					
ANR	3003794	ParameterList	const DCCollectorAdSeq & ref		3003679	2					
ANR	3003795	Parameter	const DCCollectorAdSeq & ref	703:36:19593:19619	3003679	0	True				
ANR	3003796	ParameterType	const DCCollectorAdSeq &		3003679	0					
ANR	3003797	Identifier	ref		3003679	1					
ANR	3003798	CFGEntryNode	ENTRY		3003679		True				
ANR	3003799	CFGExitNode	EXIT		3003679		True				
ANR	3003800	Symbol	NULL		3003679						
ANR	3003801	Symbol	this		3003679						
ANR	3003802	Symbol	this -> Machine		3003679						
ANR	3003803	Symbol	this -> Name		3003679						
ANR	3003804	Symbol	* this		3003679						
ANR	3003805	Symbol	ref . getMyType		3003679						
ANR	3003806	Symbol	this -> sequence		3003679						
ANR	3003807	Symbol	ref		3003679						
ANR	3003808	Symbol	ref . getName		3003679						
ANR	3003809	Symbol	ref . getMachine		3003679						
ANR	3003810	Symbol	tmp		3003679						
ANR	3003811	Symbol	ref . getSequence		3003679						
ANR	3003812	Symbol	strdup		3003679						
ANR	3003813	Symbol	this -> MyType		3003679						
ANR	3003814	Function	DCCollectorAdSeq :: ~DCCollectorAdSeq	732:0:20047:20236							
ANR	3003815	FunctionDef	DCCollectorAdSeq :: ~DCCollectorAdSeq ()		3003814	0					
ANR	3003816	CompoundStatement		733:0:20091:20236	3003814	0					
ANR	3003817	IfStatement	if ( Name )		3003814	0					
ANR	3003818	Condition	Name	735:6:20130:20133	3003814	0	True				
ANR	3003819	Identifier	Name		3003814	0					
ANR	3003820	CompoundStatement		3:13:45:45	3003814	1					
ANR	3003821	ExpressionStatement	free ( Name )	736:2:20141:20153	3003814	0	True				
ANR	3003822	CallExpression	free ( Name )		3003814	0					
ANR	3003823	Callee	free		3003814	0					
ANR	3003824	Identifier	free		3003814	0					
ANR	3003825	ArgumentList	Name		3003814	1					
ANR	3003826	Argument	Name		3003814	0					
ANR	3003827	Identifier	Name		3003814	0					
ANR	3003828	IfStatement	if ( MyType )		3003814	1					
ANR	3003829	Condition	MyType	738:6:20164:20169	3003814	0	True				
ANR	3003830	Identifier	MyType		3003814	0					
ANR	3003831	CompoundStatement		6:15:81:81	3003814	1					
ANR	3003832	ExpressionStatement	free ( MyType )	739:2:20177:20191	3003814	0	True				
ANR	3003833	CallExpression	free ( MyType )		3003814	0					
ANR	3003834	Callee	free		3003814	0					
ANR	3003835	Identifier	free		3003814	0					
ANR	3003836	ArgumentList	MyType		3003814	1					
ANR	3003837	Argument	MyType		3003814	0					
ANR	3003838	Identifier	MyType		3003814	0					
ANR	3003839	IfStatement	if ( Machine )		3003814	2					
ANR	3003840	Condition	Machine	741:6:20202:20208	3003814	0	True				
ANR	3003841	Identifier	Machine		3003814	0					
ANR	3003842	CompoundStatement		9:16:120:120	3003814	1					
ANR	3003843	ExpressionStatement	free ( Machine )	742:2:20216:20231	3003814	0	True				
ANR	3003844	CallExpression	free ( Machine )		3003814	0					
ANR	3003845	Callee	free		3003814	0					
ANR	3003846	Identifier	free		3003814	0					
ANR	3003847	ArgumentList	Machine		3003814	1					
ANR	3003848	Argument	Machine		3003814	0					
ANR	3003849	Identifier	Machine		3003814	0					
ANR	3003850	Identifier	DCCollectorAdSeq :: ~DCCollectorAdSeq		3003814	1					
ANR	3003851	ParameterList			3003814	2					
ANR	3003852	CFGEntryNode	ENTRY		3003814		True				
ANR	3003853	CFGExitNode	EXIT		3003814		True				
ANR	3003854	Symbol	MyType		3003814						
ANR	3003855	Symbol	Machine		3003814						
ANR	3003856	Symbol	Name		3003814						
ANR	3003857	Function	DCCollectorAdSeq :: Match	747:0:20257:20995							
ANR	3003858	FunctionDef	"DCCollectorAdSeq :: Match (const char * inName , const char * inMyType , const char * inMachine)"		3003857	0					
ANR	3003859	CompoundStatement		751:0:20373:20995	3003857	0					
ANR	3003860	IfStatement	if ( inName )		3003857	0					
ANR	3003861	Condition	inName	753:6:20454:20459	3003857	0	True				
ANR	3003862	Identifier	inName		3003857	0					
ANR	3003863	CompoundStatement		3:15:89:89	3003857	1					
ANR	3003864	IfStatement	if ( ! Name )		3003857	0					
ANR	3003865	Condition	! Name	754:7:20472:20477	3003857	0	True				
ANR	3003866	UnaryOperationExpression	! Name		3003857	0					
ANR	3003867	UnaryOperator	!		3003857	0					
ANR	3003868	Identifier	Name		3003857	1					
ANR	3003869	CompoundStatement		4:16:107:107	3003857	1					
ANR	3003870	ReturnStatement	return false ;	755:3:20486:20498	3003857	0	True				
ANR	3003871	Identifier	false		3003857	0					
ANR	3003872	IfStatement	"if ( strcmp ( Name , inName ) )"		3003857	1					
ANR	3003873	Condition	"strcmp ( Name , inName )"	757:7:20511:20532	3003857	0	True				
ANR	3003874	CallExpression	"strcmp ( Name , inName )"		3003857	0					
ANR	3003875	Callee	strcmp		3003857	0					
ANR	3003876	Identifier	strcmp		3003857	0					
ANR	3003877	ArgumentList	Name		3003857	1					
ANR	3003878	Argument	Name		3003857	0					
ANR	3003879	Identifier	Name		3003857	0					
ANR	3003880	Argument	inName		3003857	1					
ANR	3003881	Identifier	inName		3003857	0					
ANR	3003882	CompoundStatement		7:32:162:162	3003857	1					
ANR	3003883	ReturnStatement	return false ;	758:3:20541:20553	3003857	0	True				
ANR	3003884	Identifier	false		3003857	0					
ANR	3003885	ElseStatement	else		3003857	0					
ANR	3003886	IfStatement	if ( Name )		3003857	0					
ANR	3003887	Condition	Name	760:13:20572:20575	3003857	0	True				
ANR	3003888	Identifier	Name		3003857	0					
ANR	3003889	CompoundStatement		11:1:206:206	3003857	1					
ANR	3003890	ReturnStatement	return false ;	762:2:20584:20596	3003857	0	True				
ANR	3003891	Identifier	false		3003857	0					
ANR	3003892	IfStatement	if ( inMyType )		3003857	1					
ANR	3003893	Condition	inMyType	765:6:20608:20615	3003857	0	True				
ANR	3003894	Identifier	inMyType		3003857	0					
ANR	3003895	CompoundStatement		15:17:245:245	3003857	1					
ANR	3003896	IfStatement	if ( ! MyType )		3003857	0					
ANR	3003897	Condition	! MyType	766:7:20628:20635	3003857	0	True				
ANR	3003898	UnaryOperationExpression	! MyType		3003857	0					
ANR	3003899	UnaryOperator	!		3003857	0					
ANR	3003900	Identifier	MyType		3003857	1					
ANR	3003901	CompoundStatement		16:18:265:265	3003857	1					
ANR	3003902	ReturnStatement	return false ;	767:3:20644:20656	3003857	0	True				
ANR	3003903	Identifier	false		3003857	0					
ANR	3003904	IfStatement	"if ( strcmp ( MyType , inMyType ) )"		3003857	1					
ANR	3003905	Condition	"strcmp ( MyType , inMyType )"	769:7:20669:20694	3003857	0	True				
ANR	3003906	CallExpression	"strcmp ( MyType , inMyType )"		3003857	0					
ANR	3003907	Callee	strcmp		3003857	0					
ANR	3003908	Identifier	strcmp		3003857	0					
ANR	3003909	ArgumentList	MyType		3003857	1					
ANR	3003910	Argument	MyType		3003857	0					
ANR	3003911	Identifier	MyType		3003857	0					
ANR	3003912	Argument	inMyType		3003857	1					
ANR	3003913	Identifier	inMyType		3003857	0					
ANR	3003914	CompoundStatement		19:36:324:324	3003857	1					
ANR	3003915	ReturnStatement	return false ;	770:3:20703:20715	3003857	0	True				
ANR	3003916	Identifier	false		3003857	0					
ANR	3003917	ElseStatement	else		3003857	0					
ANR	3003918	IfStatement	if ( MyType )		3003857	0					
ANR	3003919	Condition	MyType	772:13:20734:20739	3003857	0	True				
ANR	3003920	Identifier	MyType		3003857	0					
ANR	3003921	CompoundStatement		23:1:370:370	3003857	1					
ANR	3003922	ReturnStatement	return false ;	774:2:20748:20760	3003857	0	True				
ANR	3003923	Identifier	false		3003857	0					
ANR	3003924	IfStatement	if ( inMachine )		3003857	2					
ANR	3003925	Condition	inMachine	777:6:20772:20780	3003857	0	True				
ANR	3003926	Identifier	inMachine		3003857	0					
ANR	3003927	CompoundStatement		27:18:410:410	3003857	1					
ANR	3003928	IfStatement	if ( ! Machine )		3003857	0					
ANR	3003929	Condition	! Machine	778:7:20793:20801	3003857	0	True				
ANR	3003930	UnaryOperationExpression	! Machine		3003857	0					
ANR	3003931	UnaryOperator	!		3003857	0					
ANR	3003932	Identifier	Machine		3003857	1					
ANR	3003933	CompoundStatement		28:19:431:431	3003857	1					
ANR	3003934	ReturnStatement	return false ;	779:3:20810:20822	3003857	0	True				
ANR	3003935	Identifier	false		3003857	0					
ANR	3003936	IfStatement	"if ( strcmp ( Machine , inMachine ) )"		3003857	1					
ANR	3003937	Condition	"strcmp ( Machine , inMachine )"	781:7:20835:20862	3003857	0	True				
ANR	3003938	CallExpression	"strcmp ( Machine , inMachine )"		3003857	0					
ANR	3003939	Callee	strcmp		3003857	0					
ANR	3003940	Identifier	strcmp		3003857	0					
ANR	3003941	ArgumentList	Machine		3003857	1					
ANR	3003942	Argument	Machine		3003857	0					
ANR	3003943	Identifier	Machine		3003857	0					
ANR	3003944	Argument	inMachine		3003857	1					
ANR	3003945	Identifier	inMachine		3003857	0					
ANR	3003946	CompoundStatement		31:38:492:492	3003857	1					
ANR	3003947	ReturnStatement	return false ;	782:3:20871:20883	3003857	0	True				
ANR	3003948	Identifier	false		3003857	0					
ANR	3003949	ElseStatement	else		3003857	0					
ANR	3003950	IfStatement	if ( Machine )		3003857	0					
ANR	3003951	Condition	Machine	784:13:20902:20908	3003857	0	True				
ANR	3003952	Identifier	Machine		3003857	0					
ANR	3003953	CompoundStatement		35:1:539:539	3003857	1					
ANR	3003954	ReturnStatement	return false ;	786:2:20917:20929	3003857	0	True				
ANR	3003955	Identifier	false		3003857	0					
ANR	3003956	ReturnStatement	return true ;	790:1:20982:20993	3003857	3	True				
ANR	3003957	Identifier	true		3003857	0					
ANR	3003958	ReturnType	bool		3003857	1					
ANR	3003959	Identifier	DCCollectorAdSeq :: Match		3003857	2					
ANR	3003960	ParameterList	"const char * inName , const char * inMyType , const char * inMachine"		3003857	3					
ANR	3003961	Parameter	const char * inName	748:25:20287:20304	3003857	0	True				
ANR	3003962	ParameterType	const char *		3003857	0					
ANR	3003963	Identifier	inName		3003857	1					
ANR	3003964	Parameter	const char * inMyType	749:7:20314:20333	3003857	1	True				
ANR	3003965	ParameterType	const char *		3003857	0					
ANR	3003966	Identifier	inMyType		3003857	1					
ANR	3003967	Parameter	const char * inMachine	750:7:20343:20363	3003857	2	True				
ANR	3003968	ParameterType	const char *		3003857	0					
ANR	3003969	Identifier	inMachine		3003857	1					
ANR	3003970	CFGEntryNode	ENTRY		3003857		True				
ANR	3003971	CFGExitNode	EXIT		3003857		True				
ANR	3003972	Symbol	strcmp		3003857						
ANR	3003973	Symbol	MyType		3003857						
ANR	3003974	Symbol	inMyType		3003857						
ANR	3003975	Symbol	false		3003857						
ANR	3003976	Symbol	true		3003857						
ANR	3003977	Symbol	inMachine		3003857						
ANR	3003978	Symbol	Machine		3003857						
ANR	3003979	Symbol	inName		3003857						
ANR	3003980	Symbol	Name		3003857						
ANR	3003981	Function	DCCollectorAdSeq :: getSequenceAndIncrement	794:0:21025:21106							
ANR	3003982	FunctionDef	DCCollectorAdSeq :: getSequenceAndIncrement ()		3003981	0					
ANR	3003983	CompoundStatement		796:0:21084:21106	3003981	0					
ANR	3003984	ReturnStatement	return sequence ++ ;	797:1:21087:21104	3003981	0	True				
ANR	3003985	PostIncDecOperationExpression	sequence ++		3003981	0					
ANR	3003986	Identifier	sequence		3003981	0					
ANR	3003987	IncDec	++		3003981	1					
ANR	3003988	ReturnType	unsigned		3003981	1					
ANR	3003989	Identifier	DCCollectorAdSeq :: getSequenceAndIncrement		3003981	2					
ANR	3003990	ParameterList			3003981	3					
ANR	3003991	CFGEntryNode	ENTRY		3003981		True				
ANR	3003992	CFGExitNode	EXIT		3003981		True				
ANR	3003993	Symbol	sequence		3003981						
ANR	3003994	Function	DCCollectorAdSeqMan :: DCCollectorAdSeqMan	806:0:21213:21278							
ANR	3003995	FunctionDef	DCCollectorAdSeqMan :: DCCollectorAdSeqMan ()		3003994	0					
ANR	3003996	CompoundStatement		807:0:21263:21278	3003994	0					
ANR	3003997	ExpressionStatement	numAds = 0	808:1:21266:21276	3003994	0	True				
ANR	3003998	AssignmentExpression	numAds = 0		3003994	0		=			
ANR	3003999	Identifier	numAds		3003994	0					
ANR	3004000	PrimaryExpression	0		3003994	1					
ANR	3004001	Identifier	DCCollectorAdSeqMan :: DCCollectorAdSeqMan		3003994	1					
ANR	3004002	ParameterList			3003994	2					
ANR	3004003	CFGEntryNode	ENTRY		3003994		True				
ANR	3004004	CFGExitNode	EXIT		3003994		True				
ANR	3004005	Symbol	numAds		3003994						
ANR	3004006	Function	DCCollectorAdSeqMan :: DCCollectorAdSeqMan	812:0:21331:21832							
ANR	3004007	FunctionDef	"DCCollectorAdSeqMan :: DCCollectorAdSeqMan (const DCCollectorAdSeqMan & ref , bool copy_list)"		3004006	0					
ANR	3004008	CompoundStatement		814:0:21434:21832	3004006	0					
ANR	3004009	ExpressionStatement	numAds = 0	815:1:21437:21447	3004006	0	True				
ANR	3004010	AssignmentExpression	numAds = 0		3004006	0		=			
ANR	3004011	Identifier	numAds		3004006	0					
ANR	3004012	PrimaryExpression	0		3004006	1					
ANR	3004013	IfStatement	if ( ! copy_list )		3004006	1					
ANR	3004014	Condition	! copy_list	816:6:21455:21465	3004006	0	True				
ANR	3004015	UnaryOperationExpression	! copy_list		3004006	0					
ANR	3004016	UnaryOperator	!		3004006	0					
ANR	3004017	Identifier	copy_list		3004006	1					
ANR	3004018	CompoundStatement		3:20:34:34	3004006	1					
ANR	3004019	ReturnStatement	return ;	817:2:21473:21479	3004006	0	True				
ANR	3004020	IdentifierDeclStatement	int count = ref . getNumAds ( ) ;	821:1:21509:21537	3004006	2	True				
ANR	3004021	IdentifierDecl	count = ref . getNumAds ( )		3004006	0					
ANR	3004022	IdentifierDeclType	int		3004006	0					
ANR	3004023	Identifier	count		3004006	1					
ANR	3004024	AssignmentExpression	count = ref . getNumAds ( )		3004006	2		=			
ANR	3004025	Identifier	count		3004006	0					
ANR	3004026	CallExpression	ref . getNumAds ( )		3004006	1					
ANR	3004027	Callee	ref . getNumAds		3004006	0					
ANR	3004028	MemberAccess	ref . getNumAds		3004006	0					
ANR	3004029	Identifier	ref		3004006	0					
ANR	3004030	Identifier	getNumAds		3004006	1					
ANR	3004031	ArgumentList			3004006	1					
ANR	3004032	IdentifierDeclStatement	const ExtArray < DCCollectorAdSeq * > & copy_array = ref . getSeqInfo ( ) ;	822:1:21540:21608	3004006	3	True				
ANR	3004033	IdentifierDecl	& copy_array = ref . getSeqInfo ( )		3004006	0					
ANR	3004034	IdentifierDeclType	const ExtArray < DCCollectorAdSeq * > &		3004006	0					
ANR	3004035	Identifier	copy_array		3004006	1					
ANR	3004036	AssignmentExpression	& copy_array = ref . getSeqInfo ( )		3004006	2		=			
ANR	3004037	Identifier	copy_array		3004006	0					
ANR	3004038	CallExpression	ref . getSeqInfo ( )		3004006	1					
ANR	3004039	Callee	ref . getSeqInfo		3004006	0					
ANR	3004040	MemberAccess	ref . getSeqInfo		3004006	0					
ANR	3004041	Identifier	ref		3004006	0					
ANR	3004042	Identifier	getSeqInfo		3004006	1					
ANR	3004043	ArgumentList			3004006	1					
ANR	3004044	IdentifierDeclStatement	int adNum ;	826:1:21642:21652	3004006	4	True				
ANR	3004045	IdentifierDecl	adNum		3004006	0					
ANR	3004046	IdentifierDeclType	int		3004006	0					
ANR	3004047	Identifier	adNum		3004006	1					
ANR	3004048	ForStatement	for ( adNum = 0 ; adNum < count ; adNum ++ )		3004006	5					
ANR	3004049	ForInit	adNum = 0 ;	827:6:21660:21669	3004006	0	True				
ANR	3004050	AssignmentExpression	adNum = 0		3004006	0		=			
ANR	3004051	Identifier	adNum		3004006	0					
ANR	3004052	PrimaryExpression	0		3004006	1					
ANR	3004053	Condition	adNum < count	827:18:21672:21684	3004006	1	True				
ANR	3004054	RelationalExpression	adNum < count		3004006	0		<			
ANR	3004055	Identifier	adNum		3004006	0					
ANR	3004056	Identifier	count		3004006	1					
ANR	3004057	PostIncDecOperationExpression	adNum ++	827:34:21688:21694	3004006	2	True				
ANR	3004058	Identifier	adNum		3004006	0					
ANR	3004059	IncDec	++		3004006	1					
ANR	3004060	CompoundStatement		15:2:267:344	3004006	3					
ANR	3004061	IdentifierDeclStatement	DCCollectorAdSeq * newAdSeq = new DCCollectorAdSeq ( * ( copy_array [ adNum ] ) ) ;	828:2:21702:21779	3004006	0	True				
ANR	3004062	IdentifierDecl	* newAdSeq = new DCCollectorAdSeq ( * ( copy_array [ adNum ] ) )		3004006	0					
ANR	3004063	IdentifierDeclType	DCCollectorAdSeq *		3004006	0					
ANR	3004064	Identifier	newAdSeq		3004006	1					
ANR	3004065	AssignmentExpression	* newAdSeq = new DCCollectorAdSeq ( * ( copy_array [ adNum ] ) )		3004006	2		=			
ANR	3004066	Identifier	newAdSeq		3004006	0					
ANR	3004067	UnaryOperationExpression	* ( copy_array [ adNum ] )		3004006	1					
ANR	3004068	UnaryOperator	*		3004006	0					
ANR	3004069	ArrayIndexing	copy_array [ adNum ]		3004006	1					
ANR	3004070	Identifier	copy_array		3004006	0					
ANR	3004071	Identifier	adNum		3004006	1					
ANR	3004072	ExpressionStatement	this -> adSeqInfo [ this -> numAds ++ ] = newAdSeq	830:2:21783:21825	3004006	1	True				
ANR	3004073	AssignmentExpression	this -> adSeqInfo [ this -> numAds ++ ] = newAdSeq		3004006	0		=			
ANR	3004074	ArrayIndexing	this -> adSeqInfo [ this -> numAds ++ ]		3004006	0					
ANR	3004075	PtrMemberAccess	this -> adSeqInfo		3004006	0					
ANR	3004076	Identifier	this		3004006	0					
ANR	3004077	Identifier	adSeqInfo		3004006	1					
ANR	3004078	PostIncDecOperationExpression	this -> numAds ++		3004006	1					
ANR	3004079	PtrMemberAccess	this -> numAds		3004006	0					
ANR	3004080	Identifier	this		3004006	0					
ANR	3004081	Identifier	numAds		3004006	1					
ANR	3004082	IncDec	++		3004006	1					
ANR	3004083	Identifier	newAdSeq		3004006	1					
ANR	3004084	Identifier	DCCollectorAdSeqMan :: DCCollectorAdSeqMan		3004006	1					
ANR	3004085	ParameterList	"const DCCollectorAdSeqMan & ref , bool copy_list"		3004006	2					
ANR	3004086	Parameter	const DCCollectorAdSeqMan & ref	812:42:21373:21402	3004006	0	True				
ANR	3004087	ParameterType	const DCCollectorAdSeqMan &		3004006	0					
ANR	3004088	Identifier	ref		3004006	1					
ANR	3004089	Parameter	bool copy_list	813:12:21417:21430	3004006	1	True				
ANR	3004090	ParameterType	bool		3004006	0					
ANR	3004091	Identifier	copy_list		3004006	1					
ANR	3004092	CFGEntryNode	ENTRY		3004006		True				
ANR	3004093	CFGExitNode	EXIT		3004006		True				
ANR	3004094	Symbol	ref . getSeqInfo		3004006						
ANR	3004095	Symbol	adNum		3004006						
ANR	3004096	Symbol	this -> numAds		3004006						
ANR	3004097	Symbol	count		3004006						
ANR	3004098	Symbol	this		3004006						
ANR	3004099	Symbol	* copy_array		3004006						
ANR	3004100	Symbol	* * copy_array		3004006						
ANR	3004101	Symbol	* adNum		3004006						
ANR	3004102	Symbol	* this		3004006						
ANR	3004103	Symbol	* * adNum		3004006						
ANR	3004104	Symbol	ref		3004006						
ANR	3004105	Symbol	numAds		3004006						
ANR	3004106	Symbol	copy_list		3004006						
ANR	3004107	Symbol	* ( copy_array [ adNum ] )		3004006						
ANR	3004108	Symbol	* this -> adSeqInfo		3004006						
ANR	3004109	Symbol	ref . getNumAds		3004006						
ANR	3004110	Symbol	newAdSeq		3004006						
ANR	3004111	Symbol	* * this		3004006						
ANR	3004112	Symbol	this -> adSeqInfo		3004006						
ANR	3004113	Symbol	copy_array		3004006						
ANR	3004114	Function	DCCollectorAdSeqMan :: ~DCCollectorAdSeqMan	836:0:21884:22030							
ANR	3004115	FunctionDef	DCCollectorAdSeqMan :: ~DCCollectorAdSeqMan ()		3004114	0					
ANR	3004116	CompoundStatement		837:0:21934:22030	3004114	0					
ANR	3004117	IdentifierDeclStatement	int adNum ;	838:1:21937:21949	3004114	0	True				
ANR	3004118	IdentifierDecl	adNum		3004114	0					
ANR	3004119	IdentifierDeclType	int		3004114	0					
ANR	3004120	Identifier	adNum		3004114	1					
ANR	3004121	ForStatement	for ( adNum = 0 ; adNum < numAds ; adNum ++ )		3004114	1					
ANR	3004122	ForInit	adNum = 0 ;	840:7:21959:21968	3004114	0	True				
ANR	3004123	AssignmentExpression	adNum = 0		3004114	0		=			
ANR	3004124	Identifier	adNum		3004114	0					
ANR	3004125	PrimaryExpression	0		3004114	1					
ANR	3004126	Condition	adNum < numAds	840:19:21971:21984	3004114	1	True				
ANR	3004127	RelationalExpression	adNum < numAds		3004114	0		<			
ANR	3004128	Identifier	adNum		3004114	0					
ANR	3004129	Identifier	numAds		3004114	1					
ANR	3004130	PostIncDecOperationExpression	adNum ++	840:36:21988:21994	3004114	2	True				
ANR	3004131	Identifier	adNum		3004114	0					
ANR	3004132	IncDec	++		3004114	1					
ANR	3004133	CompoundStatement		4:46:63:63	3004114	3					
ANR	3004134	Statement	delete	841:2:22002:22007	3004114	0	True				
ANR	3004135	ExpressionStatement	adSeqInfo [ adNum ]	841:9:22009:22025	3004114	1	True				
ANR	3004136	ArrayIndexing	adSeqInfo [ adNum ]		3004114	0					
ANR	3004137	Identifier	adSeqInfo		3004114	0					
ANR	3004138	Identifier	adNum		3004114	1					
ANR	3004139	Identifier	DCCollectorAdSeqMan :: ~DCCollectorAdSeqMan		3004114	1					
ANR	3004140	ParameterList			3004114	2					
ANR	3004141	CFGEntryNode	ENTRY		3004114		True				
ANR	3004142	CFGExitNode	EXIT		3004114		True				
ANR	3004143	Symbol	numAds		3004114						
ANR	3004144	Symbol	adNum		3004114						
ANR	3004145	Symbol	adSeqInfo		3004114						
ANR	3004146	Function	DCCollectorAdSeqMan :: getSequence	846:0:22060:23061							
ANR	3004147	FunctionDef	DCCollectorAdSeqMan :: getSequence (const ClassAd * ad)		3004146	0					
ANR	3004148	CompoundStatement		848:0:22123:23061	3004146	0					
ANR	3004149	IdentifierDeclStatement	int adNum ;	849:1:22126:22139	3004146	0	True				
ANR	3004150	IdentifierDecl	adNum		3004146	0					
ANR	3004151	IdentifierDeclType	int		3004146	0					
ANR	3004152	Identifier	adNum		3004146	1					
ANR	3004153	IdentifierDeclStatement	char * name = NULL ;	850:1:22142:22162	3004146	1	True				
ANR	3004154	IdentifierDecl	* name = NULL		3004146	0					
ANR	3004155	IdentifierDeclType	char *		3004146	0					
ANR	3004156	Identifier	name		3004146	1					
ANR	3004157	AssignmentExpression	* name = NULL		3004146	2		=			
ANR	3004158	Identifier	NULL		3004146	0					
ANR	3004159	Identifier	NULL		3004146	1					
ANR	3004160	IdentifierDeclStatement	char * myType = NULL ;	851:1:22165:22187	3004146	2	True				
ANR	3004161	IdentifierDecl	* myType = NULL		3004146	0					
ANR	3004162	IdentifierDeclType	char *		3004146	0					
ANR	3004163	Identifier	myType		3004146	1					
ANR	3004164	AssignmentExpression	* myType = NULL		3004146	2		=			
ANR	3004165	Identifier	NULL		3004146	0					
ANR	3004166	Identifier	NULL		3004146	1					
ANR	3004167	IdentifierDeclStatement	char * machine = NULL ;	852:1:22190:22213	3004146	3	True				
ANR	3004168	IdentifierDecl	* machine = NULL		3004146	0					
ANR	3004169	IdentifierDeclType	char *		3004146	0					
ANR	3004170	Identifier	machine		3004146	1					
ANR	3004171	AssignmentExpression	* machine = NULL		3004146	2		=			
ANR	3004172	Identifier	NULL		3004146	0					
ANR	3004173	Identifier	NULL		3004146	1					
ANR	3004174	IdentifierDeclStatement	DCCollectorAdSeq * adSeq = NULL ;	853:1:22216:22246	3004146	4	True				
ANR	3004175	IdentifierDecl	* adSeq = NULL		3004146	0					
ANR	3004176	IdentifierDeclType	DCCollectorAdSeq *		3004146	0					
ANR	3004177	Identifier	adSeq		3004146	1					
ANR	3004178	AssignmentExpression	* adSeq = NULL		3004146	2		=			
ANR	3004179	Identifier	NULL		3004146	0					
ANR	3004180	Identifier	NULL		3004146	1					
ANR	3004181	ExpressionStatement	"ad -> LookupString ( ATTR_NAME , & name )"	856:1:22298:22334	3004146	5	True				
ANR	3004182	CallExpression	"ad -> LookupString ( ATTR_NAME , & name )"		3004146	0					
ANR	3004183	Callee	ad -> LookupString		3004146	0					
ANR	3004184	PtrMemberAccess	ad -> LookupString		3004146	0					
ANR	3004185	Identifier	ad		3004146	0					
ANR	3004186	Identifier	LookupString		3004146	1					
ANR	3004187	ArgumentList	ATTR_NAME		3004146	1					
ANR	3004188	Argument	ATTR_NAME		3004146	0					
ANR	3004189	Identifier	ATTR_NAME		3004146	0					
ANR	3004190	Argument	& name		3004146	1					
ANR	3004191	UnaryOperationExpression	& name		3004146	0					
ANR	3004192	UnaryOperator	&		3004146	0					
ANR	3004193	Identifier	name		3004146	1					
ANR	3004194	ExpressionStatement	"ad -> LookupString ( ATTR_MY_TYPE , & myType )"	857:1:22337:22378	3004146	6	True				
ANR	3004195	CallExpression	"ad -> LookupString ( ATTR_MY_TYPE , & myType )"		3004146	0					
ANR	3004196	Callee	ad -> LookupString		3004146	0					
ANR	3004197	PtrMemberAccess	ad -> LookupString		3004146	0					
ANR	3004198	Identifier	ad		3004146	0					
ANR	3004199	Identifier	LookupString		3004146	1					
ANR	3004200	ArgumentList	ATTR_MY_TYPE		3004146	1					
ANR	3004201	Argument	ATTR_MY_TYPE		3004146	0					
ANR	3004202	Identifier	ATTR_MY_TYPE		3004146	0					
ANR	3004203	Argument	& myType		3004146	1					
ANR	3004204	UnaryOperationExpression	& myType		3004146	0					
ANR	3004205	UnaryOperator	&		3004146	0					
ANR	3004206	Identifier	myType		3004146	1					
ANR	3004207	ExpressionStatement	"ad -> LookupString ( ATTR_MACHINE , & machine )"	858:1:22381:22423	3004146	7	True				
ANR	3004208	CallExpression	"ad -> LookupString ( ATTR_MACHINE , & machine )"		3004146	0					
ANR	3004209	Callee	ad -> LookupString		3004146	0					
ANR	3004210	PtrMemberAccess	ad -> LookupString		3004146	0					
ANR	3004211	Identifier	ad		3004146	0					
ANR	3004212	Identifier	LookupString		3004146	1					
ANR	3004213	ArgumentList	ATTR_MACHINE		3004146	1					
ANR	3004214	Argument	ATTR_MACHINE		3004146	0					
ANR	3004215	Identifier	ATTR_MACHINE		3004146	0					
ANR	3004216	Argument	& machine		3004146	1					
ANR	3004217	UnaryOperationExpression	& machine		3004146	0					
ANR	3004218	UnaryOperator	&		3004146	0					
ANR	3004219	Identifier	machine		3004146	1					
ANR	3004220	ForStatement	for ( adNum = 0 ; adNum < numAds ; adNum ++ )		3004146	8					
ANR	3004221	ForInit	adNum = 0 ;	861:7:22491:22500	3004146	0	True				
ANR	3004222	AssignmentExpression	adNum = 0		3004146	0		=			
ANR	3004223	Identifier	adNum		3004146	0					
ANR	3004224	PrimaryExpression	0		3004146	1					
ANR	3004225	Condition	adNum < numAds	861:19:22503:22516	3004146	1	True				
ANR	3004226	RelationalExpression	adNum < numAds		3004146	0		<			
ANR	3004227	Identifier	adNum		3004146	0					
ANR	3004228	Identifier	numAds		3004146	1					
ANR	3004229	PostIncDecOperationExpression	adNum ++	861:36:22520:22526	3004146	2	True				
ANR	3004230	Identifier	adNum		3004146	0					
ANR	3004231	IncDec	++		3004146	1					
ANR	3004232	CompoundStatement		14:46:406:406	3004146	3					
ANR	3004233	IfStatement	"if ( adSeqInfo [ adNum ] -> Match ( name , myType , machine ) )"		3004146	0					
ANR	3004234	Condition	"adSeqInfo [ adNum ] -> Match ( name , myType , machine )"	862:7:22539:22586	3004146	0	True				
ANR	3004235	CallExpression	"adSeqInfo [ adNum ] -> Match ( name , myType , machine )"		3004146	0					
ANR	3004236	Callee	adSeqInfo [ adNum ] -> Match		3004146	0					
ANR	3004237	PtrMemberAccess	adSeqInfo [ adNum ] -> Match		3004146	0					
ANR	3004238	ArrayIndexing	adSeqInfo [ adNum ]		3004146	0					
ANR	3004239	Identifier	adSeqInfo		3004146	0					
ANR	3004240	Identifier	adNum		3004146	1					
ANR	3004241	Identifier	Match		3004146	1					
ANR	3004242	ArgumentList	name		3004146	1					
ANR	3004243	Argument	name		3004146	0					
ANR	3004244	Identifier	name		3004146	0					
ANR	3004245	Argument	myType		3004146	1					
ANR	3004246	Identifier	myType		3004146	0					
ANR	3004247	Argument	machine		3004146	2					
ANR	3004248	Identifier	machine		3004146	0					
ANR	3004249	CompoundStatement		15:58:466:466	3004146	1					
ANR	3004250	ExpressionStatement	adSeq = adSeqInfo [ adNum ]	863:3:22595:22619	3004146	0	True				
ANR	3004251	AssignmentExpression	adSeq = adSeqInfo [ adNum ]		3004146	0		=			
ANR	3004252	Identifier	adSeq		3004146	0					
ANR	3004253	ArrayIndexing	adSeqInfo [ adNum ]		3004146	1					
ANR	3004254	Identifier	adSeqInfo		3004146	0					
ANR	3004255	Identifier	adNum		3004146	1					
ANR	3004256	BreakStatement	break ;	864:3:22624:22629	3004146	1	True				
ANR	3004257	IfStatement	if ( ! adSeq )		3004146	9					
ANR	3004258	Condition	! adSeq	869:6:22695:22701	3004146	0	True				
ANR	3004259	UnaryOperationExpression	! adSeq		3004146	0					
ANR	3004260	UnaryOperator	!		3004146	0					
ANR	3004261	Identifier	adSeq		3004146	1					
ANR	3004262	CompoundStatement		22:16:581:581	3004146	1					
ANR	3004263	ExpressionStatement	"adSeq = new DCCollectorAdSeq ( name , myType , machine )"	870:2:22709:22763	3004146	0	True				
ANR	3004264	AssignmentExpression	"adSeq = new DCCollectorAdSeq ( name , myType , machine )"		3004146	0		=			
ANR	3004265	Identifier	adSeq		3004146	0					
ANR	3004266	Expression	"name , myType , machine"		3004146	1					
ANR	3004267	Identifier	name		3004146	0					
ANR	3004268	Expression	"myType , machine"		3004146	1					
ANR	3004269	Identifier	myType		3004146	0					
ANR	3004270	Identifier	machine		3004146	1					
ANR	3004271	ExpressionStatement	adSeqInfo [ numAds ++ ] = adSeq	871:2:22767:22794	3004146	1	True				
ANR	3004272	AssignmentExpression	adSeqInfo [ numAds ++ ] = adSeq		3004146	0		=			
ANR	3004273	ArrayIndexing	adSeqInfo [ numAds ++ ]		3004146	0					
ANR	3004274	Identifier	adSeqInfo		3004146	0					
ANR	3004275	PostIncDecOperationExpression	numAds ++		3004146	1					
ANR	3004276	Identifier	numAds		3004146	0					
ANR	3004277	IncDec	++		3004146	1					
ANR	3004278	Identifier	adSeq		3004146	1					
ANR	3004279	IfStatement	if ( name )		3004146	10					
ANR	3004280	Condition	name	875:6:22828:22831	3004146	0	True				
ANR	3004281	Identifier	name		3004146	0					
ANR	3004282	CompoundStatement		28:13:711:711	3004146	1					
ANR	3004283	ExpressionStatement	free ( name )	876:2:22839:22851	3004146	0	True				
ANR	3004284	CallExpression	free ( name )		3004146	0					
ANR	3004285	Callee	free		3004146	0					
ANR	3004286	Identifier	free		3004146	0					
ANR	3004287	ArgumentList	name		3004146	1					
ANR	3004288	Argument	name		3004146	0					
ANR	3004289	Identifier	name		3004146	0					
ANR	3004290	ExpressionStatement	name = NULL	877:2:22855:22866	3004146	1	True				
ANR	3004291	AssignmentExpression	name = NULL		3004146	0		=			
ANR	3004292	Identifier	name		3004146	0					
ANR	3004293	Identifier	NULL		3004146	1					
ANR	3004294	IfStatement	if ( myType )		3004146	11					
ANR	3004295	Condition	myType	879:6:22877:22882	3004146	0	True				
ANR	3004296	Identifier	myType		3004146	0					
ANR	3004297	CompoundStatement		32:15:762:762	3004146	1					
ANR	3004298	ExpressionStatement	free ( myType )	880:2:22890:22904	3004146	0	True				
ANR	3004299	CallExpression	free ( myType )		3004146	0					
ANR	3004300	Callee	free		3004146	0					
ANR	3004301	Identifier	free		3004146	0					
ANR	3004302	ArgumentList	myType		3004146	1					
ANR	3004303	Argument	myType		3004146	0					
ANR	3004304	Identifier	myType		3004146	0					
ANR	3004305	ExpressionStatement	myType = NULL	881:2:22908:22921	3004146	1	True				
ANR	3004306	AssignmentExpression	myType = NULL		3004146	0		=			
ANR	3004307	Identifier	myType		3004146	0					
ANR	3004308	Identifier	NULL		3004146	1					
ANR	3004309	IfStatement	if ( machine )		3004146	12					
ANR	3004310	Condition	machine	883:6:22932:22938	3004146	0	True				
ANR	3004311	Identifier	machine		3004146	0					
ANR	3004312	CompoundStatement		36:16:818:818	3004146	1					
ANR	3004313	ExpressionStatement	free ( machine )	884:2:22946:22961	3004146	0	True				
ANR	3004314	CallExpression	free ( machine )		3004146	0					
ANR	3004315	Callee	free		3004146	0					
ANR	3004316	Identifier	free		3004146	0					
ANR	3004317	ArgumentList	machine		3004146	1					
ANR	3004318	Argument	machine		3004146	0					
ANR	3004319	Identifier	machine		3004146	0					
ANR	3004320	ExpressionStatement	machine = NULL	885:2:22965:22979	3004146	1	True				
ANR	3004321	AssignmentExpression	machine = NULL		3004146	0		=			
ANR	3004322	Identifier	machine		3004146	0					
ANR	3004323	Identifier	NULL		3004146	1					
ANR	3004324	ReturnStatement	return adSeq -> getSequenceAndIncrement ( ) ;	889:1:23019:23059	3004146	13	True				
ANR	3004325	CallExpression	adSeq -> getSequenceAndIncrement ( )		3004146	0					
ANR	3004326	Callee	adSeq -> getSequenceAndIncrement		3004146	0					
ANR	3004327	PtrMemberAccess	adSeq -> getSequenceAndIncrement		3004146	0					
ANR	3004328	Identifier	adSeq		3004146	0					
ANR	3004329	Identifier	getSequenceAndIncrement		3004146	1					
ANR	3004330	ArgumentList			3004146	1					
ANR	3004331	ReturnType	unsigned		3004146	1					
ANR	3004332	Identifier	DCCollectorAdSeqMan :: getSequence		3004146	2					
ANR	3004333	ParameterList	const ClassAd * ad		3004146	3					
ANR	3004334	Parameter	const ClassAd * ad	847:34:22103:22119	3004146	0	True				
ANR	3004335	ParameterType	const ClassAd *		3004146	0					
ANR	3004336	Identifier	ad		3004146	1					
ANR	3004337	CFGEntryNode	ENTRY		3004146		True				
ANR	3004338	CFGExitNode	EXIT		3004146		True				
ANR	3004339	Symbol	adSeqInfo [ adNum ] -> Match		3004146						
ANR	3004340	Symbol	* adSeq		3004146						
ANR	3004341	Symbol	ad		3004146						
ANR	3004342	Symbol	NULL		3004146						
ANR	3004343	Symbol	ATTR_NAME		3004146						
ANR	3004344	Symbol	adSeq -> getSequenceAndIncrement		3004146						
ANR	3004345	Symbol	ATTR_MY_TYPE		3004146						
ANR	3004346	Symbol	* adSeqInfo		3004146						
ANR	3004347	Symbol	& myType		3004146						
ANR	3004348	Symbol	adNum		3004146						
ANR	3004349	Symbol	& name		3004146						
ANR	3004350	Symbol	* adNum		3004146						
ANR	3004351	Symbol	ATTR_MACHINE		3004146						
ANR	3004352	Symbol	* * adNum		3004146						
ANR	3004353	Symbol	& machine		3004146						
ANR	3004354	Symbol	numAds		3004146						
ANR	3004355	Symbol	machine		3004146						
ANR	3004356	Symbol	myType		3004146						
ANR	3004357	Symbol	adSeqInfo		3004146						
ANR	3004358	Symbol	name		3004146						
ANR	3004359	Symbol	adSeq		3004146						
ANR	3004360	Symbol	* * adSeqInfo		3004146						
ANR	3004361	Function	DCCollector :: ~DCCollector	892:0:23064:23658							
ANR	3004362	FunctionDef	DCCollector :: ~DCCollector ()		3004361	0					
ANR	3004363	CompoundStatement		893:0:23098:23658	3004361	0					
ANR	3004364	IfStatement	if ( update_rsock )		3004361	0					
ANR	3004365	Condition	update_rsock	894:5:23105:23116	3004361	0	True				
ANR	3004366	Identifier	update_rsock		3004361	0					
ANR	3004367	CompoundStatement		2:20:21:21	3004361	1					
ANR	3004368	Statement	delete	895:2:23124:23129	3004361	0	True				
ANR	3004369	ExpressionStatement	update_rsock	895:8:23130:23146	3004361	1	True				
ANR	3004370	Identifier	update_rsock		3004361	0					
ANR	3004371	IfStatement	if ( adSeqMan )		3004361	1					
ANR	3004372	Condition	adSeqMan	897:5:23156:23163	3004361	0	True				
ANR	3004373	Identifier	adSeqMan		3004361	0					
ANR	3004374	CompoundStatement		5:16:68:68	3004361	1					
ANR	3004375	Statement	delete	898:2:23171:23176	3004361	0	True				
ANR	3004376	ExpressionStatement	adSeqMan	898:8:23177:23189	3004361	1	True				
ANR	3004377	Identifier	adSeqMan		3004361	0					
ANR	3004378	IfStatement	if ( tcp_collector_addr )		3004361	2					
ANR	3004379	Condition	tcp_collector_addr	900:5:23199:23216	3004361	0	True				
ANR	3004380	Identifier	tcp_collector_addr		3004361	0					
ANR	3004381	CompoundStatement		8:26:121:121	3004361	1					
ANR	3004382	Statement	delete	901:2:23224:23229	3004361	0	True				
ANR	3004383	Statement	[	901:9:23231:23231	3004361	1	True				
ANR	3004384	Statement	]	901:10:23232:23232	3004361	2	True				
ANR	3004385	ExpressionStatement	tcp_collector_addr	901:12:23234:23252	3004361	3	True				
ANR	3004386	Identifier	tcp_collector_addr		3004361	0					
ANR	3004387	IfStatement	if ( tcp_collector_host )		3004361	3					
ANR	3004388	Condition	tcp_collector_host	903:5:23262:23279	3004361	0	True				
ANR	3004389	Identifier	tcp_collector_host		3004361	0					
ANR	3004390	CompoundStatement		11:26:184:184	3004361	1					
ANR	3004391	Statement	delete	904:2:23287:23292	3004361	0	True				
ANR	3004392	Statement	[	904:9:23294:23294	3004361	1	True				
ANR	3004393	Statement	]	904:10:23295:23295	3004361	2	True				
ANR	3004394	ExpressionStatement	tcp_collector_host	904:12:23297:23315	3004361	3	True				
ANR	3004395	Identifier	tcp_collector_host		3004361	0					
ANR	3004396	IfStatement	if ( udp_update_destination )		3004361	4					
ANR	3004397	Condition	udp_update_destination	906:5:23325:23346	3004361	0	True				
ANR	3004398	Identifier	udp_update_destination		3004361	0					
ANR	3004399	CompoundStatement		14:30:251:251	3004361	1					
ANR	3004400	Statement	delete	907:2:23354:23359	3004361	0	True				
ANR	3004401	Statement	[	907:9:23361:23361	3004361	1	True				
ANR	3004402	Statement	]	907:10:23362:23362	3004361	2	True				
ANR	3004403	ExpressionStatement	udp_update_destination	907:12:23364:23386	3004361	3	True				
ANR	3004404	Identifier	udp_update_destination		3004361	0					
ANR	3004405	IfStatement	if ( tcp_update_destination )		3004361	5					
ANR	3004406	Condition	tcp_update_destination	909:5:23396:23417	3004361	0	True				
ANR	3004407	Identifier	tcp_update_destination		3004361	0					
ANR	3004408	CompoundStatement		17:30:322:322	3004361	1					
ANR	3004409	Statement	delete	910:2:23425:23430	3004361	0	True				
ANR	3004410	Statement	[	910:9:23432:23432	3004361	1	True				
ANR	3004411	Statement	]	910:10:23433:23433	3004361	2	True				
ANR	3004412	ExpressionStatement	tcp_update_destination	910:12:23435:23457	3004361	3	True				
ANR	3004413	Identifier	tcp_update_destination		3004361	0					
ANR	3004414	IfStatement	if ( pending_update_list )		3004361	6					
ANR	3004415	Condition	pending_update_list	915:4:23585:23603	3004361	0	True				
ANR	3004416	Identifier	pending_update_list		3004361	0					
ANR	3004417	CompoundStatement		23:25:507:507	3004361	1					
ANR	3004418	ExpressionStatement	pending_update_list -> DCCollectorGoingAway ( )	916:2:23610:23653	3004361	0	True				
ANR	3004419	CallExpression	pending_update_list -> DCCollectorGoingAway ( )		3004361	0					
ANR	3004420	Callee	pending_update_list -> DCCollectorGoingAway		3004361	0					
ANR	3004421	PtrMemberAccess	pending_update_list -> DCCollectorGoingAway		3004361	0					
ANR	3004422	Identifier	pending_update_list		3004361	0					
ANR	3004423	Identifier	DCCollectorGoingAway		3004361	1					
ANR	3004424	ArgumentList			3004361	1					
ANR	3004425	Identifier	DCCollector :: ~DCCollector		3004361	1					
ANR	3004426	ParameterList			3004361	2					
ANR	3004427	CFGEntryNode	ENTRY		3004361		True				
ANR	3004428	CFGExitNode	EXIT		3004361		True				
ANR	3004429	Symbol	tcp_update_destination		3004361						
ANR	3004430	Symbol	pending_update_list		3004361						
ANR	3004431	Symbol	update_rsock		3004361						
ANR	3004432	Symbol	tcp_collector_host		3004361						
ANR	3004433	Symbol	udp_update_destination		3004361						
ANR	3004434	Symbol	adSeqMan		3004361						
ANR	3004435	Symbol	tcp_collector_addr		3004361						
ANR	3004436	Function	DCCollector :: isBlacklisted	920:0:23661:23733							
ANR	3004437	FunctionDef	DCCollector :: isBlacklisted ()		3004436	0					
ANR	3004438	CompoundStatement		921:29:23695:23733	3004436	0					
ANR	3004439	ReturnStatement	return ! blacklisted . isTimeToRun ( ) ;	922:1:23698:23731	3004436	0	True				
ANR	3004440	UnaryOperationExpression	! blacklisted . isTimeToRun ( )		3004436	0					
ANR	3004441	UnaryOperator	!		3004436	0					
ANR	3004442	CallExpression	blacklisted . isTimeToRun ( )		3004436	1					
ANR	3004443	Callee	blacklisted . isTimeToRun		3004436	0					
ANR	3004444	MemberAccess	blacklisted . isTimeToRun		3004436	0					
ANR	3004445	Identifier	blacklisted		3004436	0					
ANR	3004446	Identifier	isTimeToRun		3004436	1					
ANR	3004447	ArgumentList			3004436	1					
ANR	3004448	ReturnType	bool		3004436	1					
ANR	3004449	Identifier	DCCollector :: isBlacklisted		3004436	2					
ANR	3004450	ParameterList			3004436	3					
ANR	3004451	CFGEntryNode	ENTRY		3004436		True				
ANR	3004452	CFGExitNode	EXIT		3004436		True				
ANR	3004453	Symbol	blacklisted		3004436						
ANR	3004454	Symbol	blacklisted . isTimeToRun		3004436						
ANR	3004455	Function	DCCollector :: blacklistMonitorQueryStarted	925:0:23736:23819							
ANR	3004456	FunctionDef	DCCollector :: blacklistMonitorQueryStarted ()		3004455	0					
ANR	3004457	CompoundStatement		926:44:23785:23819	3004455	0					
ANR	3004458	ExpressionStatement	blacklisted . setStartTimeNow ( )	927:1:23788:23817	3004455	0	True				
ANR	3004459	CallExpression	blacklisted . setStartTimeNow ( )		3004455	0					
ANR	3004460	Callee	blacklisted . setStartTimeNow		3004455	0					
ANR	3004461	MemberAccess	blacklisted . setStartTimeNow		3004455	0					
ANR	3004462	Identifier	blacklisted		3004455	0					
ANR	3004463	Identifier	setStartTimeNow		3004455	1					
ANR	3004464	ArgumentList			3004455	1					
ANR	3004465	ReturnType	void		3004455	1					
ANR	3004466	Identifier	DCCollector :: blacklistMonitorQueryStarted		3004455	2					
ANR	3004467	ParameterList			3004455	3					
ANR	3004468	CFGEntryNode	ENTRY		3004455		True				
ANR	3004469	CFGExitNode	EXIT		3004455		True				
ANR	3004470	Symbol	blacklisted		3004455						
ANR	3004471	Function	DCCollector :: blacklistMonitorQueryFinished	930:0:23822:24225							
ANR	3004472	FunctionDef	DCCollector :: blacklistMonitorQueryFinished (bool success)		3004471	0					
ANR	3004473	CompoundStatement		931:59:23886:24225	3004471	0					
ANR	3004474	IfStatement	if ( success )		3004471	0					
ANR	3004475	Condition	success	932:5:23893:23899	3004471	0	True				
ANR	3004476	Identifier	success		3004471	0					
ANR	3004477	CompoundStatement		2:15:16:16	3004471	1					
ANR	3004478	ExpressionStatement	blacklisted . reset ( )	933:2:23907:23926	3004471	0	True				
ANR	3004479	CallExpression	blacklisted . reset ( )		3004471	0					
ANR	3004480	Callee	blacklisted . reset		3004471	0					
ANR	3004481	MemberAccess	blacklisted . reset		3004471	0					
ANR	3004482	Identifier	blacklisted		3004471	0					
ANR	3004483	Identifier	reset		3004471	1					
ANR	3004484	ArgumentList			3004471	1					
ANR	3004485	ElseStatement	else		3004471	0					
ANR	3004486	CompoundStatement		8:2:89:140	3004471	0					
ANR	3004487	ExpressionStatement	blacklisted . setFinishTimeNow ( )	936:2:23941:23971	3004471	0	True				
ANR	3004488	CallExpression	blacklisted . setFinishTimeNow ( )		3004471	0					
ANR	3004489	Callee	blacklisted . setFinishTimeNow		3004471	0					
ANR	3004490	MemberAccess	blacklisted . setFinishTimeNow		3004471	0					
ANR	3004491	Identifier	blacklisted		3004471	0					
ANR	3004492	Identifier	setFinishTimeNow		3004471	1					
ANR	3004493	ArgumentList			3004471	1					
ANR	3004494	IdentifierDeclStatement	unsigned int delta = blacklisted . getTimeToNextRun ( ) ;	938:2:23976:24027	3004471	1	True				
ANR	3004495	IdentifierDecl	delta = blacklisted . getTimeToNextRun ( )		3004471	0					
ANR	3004496	IdentifierDeclType	unsigned int		3004471	0					
ANR	3004497	Identifier	delta		3004471	1					
ANR	3004498	AssignmentExpression	delta = blacklisted . getTimeToNextRun ( )		3004471	2		=			
ANR	3004499	Identifier	delta		3004471	0					
ANR	3004500	CallExpression	blacklisted . getTimeToNextRun ( )		3004471	1					
ANR	3004501	Callee	blacklisted . getTimeToNextRun		3004471	0					
ANR	3004502	MemberAccess	blacklisted . getTimeToNextRun		3004471	0					
ANR	3004503	Identifier	blacklisted		3004471	0					
ANR	3004504	Identifier	getTimeToNextRun		3004471	1					
ANR	3004505	ArgumentList			3004471	1					
ANR	3004506	IfStatement	if ( delta > 0 )		3004471	2					
ANR	3004507	Condition	delta > 0	939:6:24035:24043	3004471	0	True				
ANR	3004508	RelationalExpression	delta > 0		3004471	0		>			
ANR	3004509	Identifier	delta		3004471	0					
ANR	3004510	PrimaryExpression	0		3004471	1					
ANR	3004511	CompoundStatement		9:18:160:160	3004471	1					
ANR	3004512	Statement	dprintf	940:3:24052:24058	3004471	0	True				
ANR	3004513	Statement	(	940:10:24059:24059	3004471	1	True				
ANR	3004514	Statement	D_ALWAYS	940:12:24061:24068	3004471	2	True				
ANR	3004515	Statement	","	940:20:24069:24069	3004471	3	True				
ANR	3004516	Statement	"""Will avoid querying collector %s %s for %us """	940:22:24071:24116	3004471	4	True				
ANR	3004517	Statement	"""if an alternative succeeds.\\n"""	941:12:24130:24160	3004471	5	True				
ANR	3004518	Statement	","	941:43:24161:24161	3004471	6	True				
ANR	3004519	Statement	name	942:12:24175:24178	3004471	7	True				
ANR	3004520	Statement	(	942:16:24179:24179	3004471	8	True				
ANR	3004521	Statement	)	942:17:24180:24180	3004471	9	True				
ANR	3004522	Statement	","	942:18:24181:24181	3004471	10	True				
ANR	3004523	Statement	addr	943:6:24189:24192	3004471	11	True				
ANR	3004524	Statement	(	943:10:24193:24193	3004471	12	True				
ANR	3004525	Statement	)	943:11:24194:24194	3004471	13	True				
ANR	3004526	Statement	","	943:12:24195:24195	3004471	14	True				
ANR	3004527	Statement	delta	944:12:24209:24213	3004471	15	True				
ANR	3004528	Statement	)	944:18:24215:24215	3004471	16	True				
ANR	3004529	ExpressionStatement		944:19:24216:24216	3004471	17	True				
ANR	3004530	ReturnType	void		3004471	1					
ANR	3004531	Identifier	DCCollector :: blacklistMonitorQueryFinished		3004471	2					
ANR	3004532	ParameterList	bool success		3004471	3					
ANR	3004533	Parameter	bool success	931:44:23871:23882	3004471	0	True				
ANR	3004534	ParameterType	bool		3004471	0					
ANR	3004535	Identifier	success		3004471	1					
ANR	3004536	CFGEntryNode	ENTRY		3004471		True				
ANR	3004537	CFGExitNode	EXIT		3004471		True				
ANR	3004538	Symbol	blacklisted . getTimeToNextRun		3004471						
ANR	3004539	Symbol	blacklisted		3004471						
ANR	3004540	Symbol	success		3004471						
ANR	3004541	Symbol	delta		3004471						
