command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2686013	File	data/converged/CVE-2011-4930_htcondor/src_condor_ckpt_server_fileindex2.cpp								
ANR	2686014	Function	FileIndex :: FileIndex	29:0:953:1091							
ANR	2686015	FunctionDef	FileIndex :: FileIndex ()		2686014	0					
ANR	2686016	CompoundStatement		30:0:976:1091	2686014	0					
ANR	2686017	IdentifierDeclStatement	int index ;	31:2:980:989	2686014	0	True				
ANR	2686018	IdentifierDecl	index		2686014	0					
ANR	2686019	IdentifierDeclType	int		2686014	0					
ANR	2686020	Identifier	index		2686014	1					
ANR	2686021	ExpressionStatement	capacity_used = 0.0	33:2:994:1013	2686014	1	True				
ANR	2686022	AssignmentExpression	capacity_used = 0.0		2686014	0		=			
ANR	2686023	Identifier	capacity_used		2686014	0					
ANR	2686024	PrimaryExpression	0.0		2686014	1					
ANR	2686025	ForStatement	for ( index = 0 ; index < MAX_HASH_SIZE ; index ++ )		2686014	2					
ANR	2686026	ForInit	index = 0 ;	34:7:1022:1029	2686014	0	True				
ANR	2686027	AssignmentExpression	index = 0		2686014	0		=			
ANR	2686028	Identifier	index		2686014	0					
ANR	2686029	PrimaryExpression	0		2686014	1					
ANR	2686030	Condition	index < MAX_HASH_SIZE	34:16:1031:1049	2686014	1	True				
ANR	2686031	RelationalExpression	index < MAX_HASH_SIZE		2686014	0		<			
ANR	2686032	Identifier	index		2686014	0					
ANR	2686033	Identifier	MAX_HASH_SIZE		2686014	1					
ANR	2686034	PostIncDecOperationExpression	index ++	34:37:1052:1058	2686014	2	True				
ANR	2686035	Identifier	index		2686014	0					
ANR	2686036	IncDec	++		2686014	1					
ANR	2686037	ExpressionStatement	hash_table [ index ] = NULL	35:4:1065:1089	2686014	3	True				
ANR	2686038	AssignmentExpression	hash_table [ index ] = NULL		2686014	0		=			
ANR	2686039	ArrayIndexing	hash_table [ index ]		2686014	0					
ANR	2686040	Identifier	hash_table		2686014	0					
ANR	2686041	Identifier	index		2686014	1					
ANR	2686042	Identifier	NULL		2686014	1					
ANR	2686043	Identifier	FileIndex :: FileIndex		2686014	1					
ANR	2686044	ParameterList			2686014	2					
ANR	2686045	CFGEntryNode	ENTRY		2686014		True				
ANR	2686046	CFGExitNode	EXIT		2686014		True				
ANR	2686047	Symbol	hash_table		2686014						
ANR	2686048	Symbol	NULL		2686014						
ANR	2686049	Symbol	MAX_HASH_SIZE		2686014						
ANR	2686050	Symbol	* index		2686014						
ANR	2686051	Symbol	* hash_table		2686014						
ANR	2686052	Symbol	index		2686014						
ANR	2686053	Symbol	capacity_used		2686014						
ANR	2686054	Function	FileIndex :: ~FileIndex	39:0:1095:1139							
ANR	2686055	FunctionDef	FileIndex :: ~FileIndex ()		2686054	0					
ANR	2686056	CompoundStatement		40:0:1119:1139	2686054	0					
ANR	2686057	ExpressionStatement	DestroyIndex ( )	41:2:1123:1137	2686054	0	True				
ANR	2686058	CallExpression	DestroyIndex ( )		2686054	0					
ANR	2686059	Callee	DestroyIndex		2686054	0					
ANR	2686060	Identifier	DestroyIndex		2686054	0					
ANR	2686061	ArgumentList			2686054	1					
ANR	2686062	Identifier	FileIndex :: ~FileIndex		2686054	1					
ANR	2686063	ParameterList			2686054	2					
ANR	2686064	CFGEntryNode	ENTRY		2686054		True				
ANR	2686065	CFGExitNode	EXIT		2686054		True				
ANR	2686066	Function	FileIndex :: Hash	45:0:1143:1360							
ANR	2686067	FunctionDef	FileIndex :: Hash (struct in_addr machine_IP)		2686066	0					
ANR	2686068	CompoundStatement		46:0:1190:1360	2686066	0					
ANR	2686069	IdentifierDeclStatement	int val ;	47:2:1194:1203	2686066	0	True				
ANR	2686070	IdentifierDecl	val		2686066	0					
ANR	2686071	IdentifierDeclType	int		2686066	0					
ANR	2686072	Identifier	val		2686066	1					
ANR	2686073	IdentifierDeclStatement	unsigned char * c_ptr ;	48:2:1207:1227	2686066	1	True				
ANR	2686074	IdentifierDecl	* c_ptr		2686066	0					
ANR	2686075	IdentifierDeclType	unsigned char *		2686066	0					
ANR	2686076	Identifier	c_ptr		2686066	1					
ANR	2686077	ExpressionStatement	c_ptr = ( unsigned char * ) & machine_IP . s_addr	50:2:1232:1275	2686066	2	True				
ANR	2686078	AssignmentExpression	c_ptr = ( unsigned char * ) & machine_IP . s_addr		2686066	0		=			
ANR	2686079	Identifier	c_ptr		2686066	0					
ANR	2686080	CastExpression	( unsigned char * ) & machine_IP . s_addr		2686066	1					
ANR	2686081	CastTarget	unsigned char *		2686066	0					
ANR	2686082	UnaryOperationExpression	& machine_IP . s_addr		2686066	1					
ANR	2686083	UnaryOperator	&		2686066	0					
ANR	2686084	MemberAccess	machine_IP . s_addr		2686066	1					
ANR	2686085	Identifier	machine_IP		2686066	0					
ANR	2686086	Identifier	s_addr		2686066	1					
ANR	2686087	ExpressionStatement	val = * c_ptr + * ( c_ptr + 1 ) + * ( c_ptr + 2 ) + * ( c_ptr + 3 )	51:2:1279:1330	2686066	3	True				
ANR	2686088	AssignmentExpression	val = * c_ptr + * ( c_ptr + 1 ) + * ( c_ptr + 2 ) + * ( c_ptr + 3 )		2686066	0		=			
ANR	2686089	Identifier	val		2686066	0					
ANR	2686090	AdditiveExpression	* c_ptr + * ( c_ptr + 1 ) + * ( c_ptr + 2 ) + * ( c_ptr + 3 )		2686066	1		+			
ANR	2686091	UnaryOperationExpression	* c_ptr		2686066	0					
ANR	2686092	UnaryOperator	*		2686066	0					
ANR	2686093	Identifier	c_ptr		2686066	1					
ANR	2686094	AdditiveExpression	* ( c_ptr + 1 ) + * ( c_ptr + 2 ) + * ( c_ptr + 3 )		2686066	1		+			
ANR	2686095	UnaryOperationExpression	* ( c_ptr + 1 )		2686066	0					
ANR	2686096	UnaryOperator	*		2686066	0					
ANR	2686097	AdditiveExpression	c_ptr + 1		2686066	1		+			
ANR	2686098	Identifier	c_ptr		2686066	0					
ANR	2686099	PrimaryExpression	1		2686066	1					
ANR	2686100	AdditiveExpression	* ( c_ptr + 2 ) + * ( c_ptr + 3 )		2686066	1		+			
ANR	2686101	UnaryOperationExpression	* ( c_ptr + 2 )		2686066	0					
ANR	2686102	UnaryOperator	*		2686066	0					
ANR	2686103	AdditiveExpression	c_ptr + 2		2686066	1		+			
ANR	2686104	Identifier	c_ptr		2686066	0					
ANR	2686105	PrimaryExpression	2		2686066	1					
ANR	2686106	UnaryOperationExpression	* ( c_ptr + 3 )		2686066	1					
ANR	2686107	UnaryOperator	*		2686066	0					
ANR	2686108	AdditiveExpression	c_ptr + 3		2686066	1		+			
ANR	2686109	Identifier	c_ptr		2686066	0					
ANR	2686110	PrimaryExpression	3		2686066	1					
ANR	2686111	ReturnStatement	return val % MAX_HASH_SIZE ;	52:2:1334:1358	2686066	4	True				
ANR	2686112	MultiplicativeExpression	val % MAX_HASH_SIZE		2686066	0		%			
ANR	2686113	Identifier	val		2686066	0					
ANR	2686114	Identifier	MAX_HASH_SIZE		2686066	1					
ANR	2686115	ReturnType	int		2686066	1					
ANR	2686116	Identifier	FileIndex :: Hash		2686066	2					
ANR	2686117	ParameterList	struct in_addr machine_IP		2686066	3					
ANR	2686118	Parameter	struct in_addr machine_IP	45:20:1163:1187	2686066	0	True				
ANR	2686119	ParameterType	struct in_addr		2686066	0					
ANR	2686120	Identifier	machine_IP		2686066	1					
ANR	2686121	CFGEntryNode	ENTRY		2686066		True				
ANR	2686122	CFGExitNode	EXIT		2686066		True				
ANR	2686123	Symbol	val		2686066						
ANR	2686124	Symbol	machine_IP		2686066						
ANR	2686125	Symbol	MAX_HASH_SIZE		2686066						
ANR	2686126	Symbol	& machine_IP		2686066						
ANR	2686127	Symbol	* ( c_ptr + 1 )		2686066						
ANR	2686128	Symbol	* ( c_ptr + 2 )		2686066						
ANR	2686129	Symbol	* ( c_ptr + 3 )		2686066						
ANR	2686130	Symbol	* c_ptr		2686066						
ANR	2686131	Symbol	c_ptr		2686066						
ANR	2686132	Symbol	& machine_IP . s_addr		2686066						
ANR	2686133	Function	FileIndex :: FindOrAddMachine	56:0:1364:2902							
ANR	2686134	FunctionDef	"FileIndex :: FindOrAddMachine (struct in_addr machine_IP , int AddFlag)"		2686133	0					
ANR	2686135	CompoundStatement		58:0:1499:2902	2686133	0					
ANR	2686136	IdentifierDeclStatement	int hash_bucket ;	59:2:1503:1528	2686133	0	True				
ANR	2686137	IdentifierDecl	hash_bucket		2686133	0					
ANR	2686138	IdentifierDeclType	int		2686133	0					
ANR	2686139	Identifier	hash_bucket		2686133	1					
ANR	2686140	IdentifierDeclStatement	int temp ;	60:2:1532:1550	2686133	1	True				
ANR	2686141	IdentifierDecl	temp		2686133	0					
ANR	2686142	IdentifierDeclType	int		2686133	0					
ANR	2686143	Identifier	temp		2686133	1					
ANR	2686144	IdentifierDeclStatement	machine_node * trail = NULL ;	61:2:1554:1578	2686133	2	True				
ANR	2686145	IdentifierDecl	* trail = NULL		2686133	0					
ANR	2686146	IdentifierDeclType	machine_node *		2686133	0					
ANR	2686147	Identifier	trail		2686133	1					
ANR	2686148	AssignmentExpression	* trail = NULL		2686133	2		=			
ANR	2686149	Identifier	NULL		2686133	0					
ANR	2686150	Identifier	NULL		2686133	1					
ANR	2686151	IdentifierDeclStatement	machine_node * ptr ;	62:2:1582:1599	2686133	3	True				
ANR	2686152	IdentifierDecl	* ptr		2686133	0					
ANR	2686153	IdentifierDeclType	machine_node *		2686133	0					
ANR	2686154	Identifier	ptr		2686133	1					
ANR	2686155	IdentifierDeclStatement	char pathname [ MAX_PATHNAME_LENGTH ] ;	63:2:1603:1646	2686133	4	True				
ANR	2686156	IdentifierDecl	pathname [ MAX_PATHNAME_LENGTH ]		2686133	0					
ANR	2686157	IdentifierDeclType	char [ MAX_PATHNAME_LENGTH ]		2686133	0					
ANR	2686158	Identifier	pathname		2686133	1					
ANR	2686159	Identifier	MAX_PATHNAME_LENGTH		2686133	2					
ANR	2686160	ExpressionStatement	hash_bucket = Hash ( machine_IP )	65:2:1651:1681	2686133	5	True				
ANR	2686161	AssignmentExpression	hash_bucket = Hash ( machine_IP )		2686133	0		=			
ANR	2686162	Identifier	hash_bucket		2686133	0					
ANR	2686163	CallExpression	Hash ( machine_IP )		2686133	1					
ANR	2686164	Callee	Hash		2686133	0					
ANR	2686165	Identifier	Hash		2686133	0					
ANR	2686166	ArgumentList	machine_IP		2686133	1					
ANR	2686167	Argument	machine_IP		2686133	0					
ANR	2686168	Identifier	machine_IP		2686133	0					
ANR	2686169	ExpressionStatement	ptr = hash_table [ hash_bucket ]	66:2:1685:1714	2686133	6	True				
ANR	2686170	AssignmentExpression	ptr = hash_table [ hash_bucket ]		2686133	0		=			
ANR	2686171	Identifier	ptr		2686133	0					
ANR	2686172	ArrayIndexing	hash_table [ hash_bucket ]		2686133	1					
ANR	2686173	Identifier	hash_table		2686133	0					
ANR	2686174	Identifier	hash_bucket		2686133	1					
ANR	2686175	WhileStatement	while ( ( ptr != NULL ) && ( ptr -> machine_IP . s_addr != machine_IP . s_addr ) )		2686133	7					
ANR	2686176	Condition	( ptr != NULL ) && ( ptr -> machine_IP . s_addr != machine_IP . s_addr )	67:9:1725:1786	2686133	0	True				
ANR	2686177	AndExpression	( ptr != NULL ) && ( ptr -> machine_IP . s_addr != machine_IP . s_addr )		2686133	0		&&			
ANR	2686178	EqualityExpression	ptr != NULL		2686133	0		!=			
ANR	2686179	Identifier	ptr		2686133	0					
ANR	2686180	Identifier	NULL		2686133	1					
ANR	2686181	EqualityExpression	ptr -> machine_IP . s_addr != machine_IP . s_addr		2686133	1		!=			
ANR	2686182	MemberAccess	ptr -> machine_IP . s_addr		2686133	0					
ANR	2686183	PtrMemberAccess	ptr -> machine_IP		2686133	0					
ANR	2686184	Identifier	ptr		2686133	0					
ANR	2686185	Identifier	machine_IP		2686133	1					
ANR	2686186	Identifier	s_addr		2686133	1					
ANR	2686187	MemberAccess	machine_IP . s_addr		2686133	1					
ANR	2686188	Identifier	machine_IP		2686133	0					
ANR	2686189	Identifier	s_addr		2686133	1					
ANR	2686190	CompoundStatement		11:4:293:293	2686133	1					
ANR	2686191	ExpressionStatement	trail = ptr	69:6:1801:1812	2686133	0	True				
ANR	2686192	AssignmentExpression	trail = ptr		2686133	0		=			
ANR	2686193	Identifier	trail		2686133	0					
ANR	2686194	Identifier	ptr		2686133	1					
ANR	2686195	ExpressionStatement	temp = ( ptr -> machine_IP . s_addr < machine_IP . s_addr )	70:6:1820:1871	2686133	1	True				
ANR	2686196	AssignmentExpression	temp = ( ptr -> machine_IP . s_addr < machine_IP . s_addr )		2686133	0		=			
ANR	2686197	Identifier	temp		2686133	0					
ANR	2686198	RelationalExpression	ptr -> machine_IP . s_addr < machine_IP . s_addr		2686133	1		<			
ANR	2686199	MemberAccess	ptr -> machine_IP . s_addr		2686133	0					
ANR	2686200	PtrMemberAccess	ptr -> machine_IP		2686133	0					
ANR	2686201	Identifier	ptr		2686133	0					
ANR	2686202	Identifier	machine_IP		2686133	1					
ANR	2686203	Identifier	s_addr		2686133	1					
ANR	2686204	MemberAccess	machine_IP . s_addr		2686133	1					
ANR	2686205	Identifier	machine_IP		2686133	0					
ANR	2686206	Identifier	s_addr		2686133	1					
ANR	2686207	IfStatement	if ( temp )		2686133	2					
ANR	2686208	Condition	temp	71:10:1883:1886	2686133	0	True				
ANR	2686209	Identifier	temp		2686133	0					
ANR	2686210	ExpressionStatement	ptr = ptr -> right	72:8:1897:1913	2686133	1	True				
ANR	2686211	AssignmentExpression	ptr = ptr -> right		2686133	0		=			
ANR	2686212	Identifier	ptr		2686133	0					
ANR	2686213	PtrMemberAccess	ptr -> right		2686133	1					
ANR	2686214	Identifier	ptr		2686133	0					
ANR	2686215	Identifier	right		2686133	1					
ANR	2686216	ElseStatement	else		2686133	0					
ANR	2686217	ExpressionStatement	ptr = ptr -> left	74:8:1934:1949	2686133	0	True				
ANR	2686218	AssignmentExpression	ptr = ptr -> left		2686133	0		=			
ANR	2686219	Identifier	ptr		2686133	0					
ANR	2686220	PtrMemberAccess	ptr -> left		2686133	1					
ANR	2686221	Identifier	ptr		2686133	0					
ANR	2686222	Identifier	left		2686133	1					
ANR	2686223	IfStatement	if ( AddFlag == ADD )		2686133	8					
ANR	2686224	Condition	AddFlag == ADD	76:6:1963:1976	2686133	0	True				
ANR	2686225	EqualityExpression	AddFlag == ADD		2686133	0		==			
ANR	2686226	Identifier	AddFlag		2686133	0					
ANR	2686227	Identifier	ADD		2686133	1					
ANR	2686228	CompoundStatement		20:4:483:483	2686133	1					
ANR	2686229	IfStatement	if ( ptr == NULL )		2686133	0					
ANR	2686230	Condition	ptr == NULL	78:10:1995:2005	2686133	0	True				
ANR	2686231	EqualityExpression	ptr == NULL		2686133	0		==			
ANR	2686232	Identifier	ptr		2686133	0					
ANR	2686233	Identifier	NULL		2686133	1					
ANR	2686234	CompoundStatement		22:8:516:516	2686133	1					
ANR	2686235	Statement	ptr	80:10:2028:2030	2686133	0	True				
ANR	2686236	Statement	=	80:14:2032:2032	2686133	1	True				
ANR	2686237	Statement	new	80:16:2034:2036	2686133	2	True				
ANR	2686238	ExpressionStatement	machine_node	80:20:2038:2050	2686133	3	True				
ANR	2686239	Identifier	machine_node		2686133	0					
ANR	2686240	IfStatement	if ( ptr == NULL )		2686133	4					
ANR	2686241	Condition	ptr == NULL	81:14:2066:2076	2686133	0	True				
ANR	2686242	EqualityExpression	ptr == NULL		2686133	0		==			
ANR	2686243	Identifier	ptr		2686133	0					
ANR	2686244	Identifier	NULL		2686133	1					
ANR	2686245	CompoundStatement		25:12:591:591	2686133	1					
ANR	2686246	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: cannot allocate sufficient dynamic memory\\n"" )"	83:14:2107:2178	2686133	0	True				
ANR	2686247	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: cannot allocate sufficient dynamic memory\\n"" )"		2686133	0					
ANR	2686248	Callee	dprintf		2686133	0					
ANR	2686249	Identifier	dprintf		2686133	0					
ANR	2686250	ArgumentList	D_ALWAYS		2686133	1					
ANR	2686251	Argument	D_ALWAYS		2686133	0					
ANR	2686252	Identifier	D_ALWAYS		2686133	0					
ANR	2686253	Argument	"""ERROR: cannot allocate sufficient dynamic memory\\n"""		2686133	1					
ANR	2686254	PrimaryExpression	"""ERROR: cannot allocate sufficient dynamic memory\\n"""		2686133	0					
ANR	2686255	ExpressionStatement	exit ( DYNAMIC_ALLOCATION )	84:14:2194:2218	2686133	1	True				
ANR	2686256	CallExpression	exit ( DYNAMIC_ALLOCATION )		2686133	0					
ANR	2686257	Callee	exit		2686133	0					
ANR	2686258	Identifier	exit		2686133	0					
ANR	2686259	ArgumentList	DYNAMIC_ALLOCATION		2686133	1					
ANR	2686260	Argument	DYNAMIC_ALLOCATION		2686133	0					
ANR	2686261	Identifier	DYNAMIC_ALLOCATION		2686133	0					
ANR	2686262	ExpressionStatement	ptr -> left = NULL	86:10:2244:2260	2686133	5	True				
ANR	2686263	AssignmentExpression	ptr -> left = NULL		2686133	0		=			
ANR	2686264	PtrMemberAccess	ptr -> left		2686133	0					
ANR	2686265	Identifier	ptr		2686133	0					
ANR	2686266	Identifier	left		2686133	1					
ANR	2686267	Identifier	NULL		2686133	1					
ANR	2686268	ExpressionStatement	ptr -> right = NULL	87:10:2272:2289	2686133	6	True				
ANR	2686269	AssignmentExpression	ptr -> right = NULL		2686133	0		=			
ANR	2686270	PtrMemberAccess	ptr -> right		2686133	0					
ANR	2686271	Identifier	ptr		2686133	0					
ANR	2686272	Identifier	right		2686133	1					
ANR	2686273	Identifier	NULL		2686133	1					
ANR	2686274	ExpressionStatement	ptr -> machine_IP = machine_IP	88:10:2301:2329	2686133	7	True				
ANR	2686275	AssignmentExpression	ptr -> machine_IP = machine_IP		2686133	0		=			
ANR	2686276	PtrMemberAccess	ptr -> machine_IP		2686133	0					
ANR	2686277	Identifier	ptr		2686133	0					
ANR	2686278	Identifier	machine_IP		2686133	1					
ANR	2686279	Identifier	machine_IP		2686133	1					
ANR	2686280	ExpressionStatement	ptr -> owner_root = NULL	89:10:2341:2363	2686133	8	True				
ANR	2686281	AssignmentExpression	ptr -> owner_root = NULL		2686133	0		=			
ANR	2686282	PtrMemberAccess	ptr -> owner_root		2686133	0					
ANR	2686283	Identifier	ptr		2686133	0					
ANR	2686284	Identifier	owner_root		2686133	1					
ANR	2686285	Identifier	NULL		2686133	1					
ANR	2686286	IfStatement	if ( trail == NULL )		2686133	9					
ANR	2686287	Condition	trail == NULL	90:14:2379:2391	2686133	0	True				
ANR	2686288	EqualityExpression	trail == NULL		2686133	0		==			
ANR	2686289	Identifier	trail		2686133	0					
ANR	2686290	Identifier	NULL		2686133	1					
ANR	2686291	ExpressionStatement	hash_table [ hash_bucket ] = ptr	91:12:2406:2435	2686133	1	True				
ANR	2686292	AssignmentExpression	hash_table [ hash_bucket ] = ptr		2686133	0		=			
ANR	2686293	ArrayIndexing	hash_table [ hash_bucket ]		2686133	0					
ANR	2686294	Identifier	hash_table		2686133	0					
ANR	2686295	Identifier	hash_bucket		2686133	1					
ANR	2686296	Identifier	ptr		2686133	1					
ANR	2686297	ElseStatement	else		2686133	0					
ANR	2686298	IfStatement	if ( temp )		2686133	0					
ANR	2686299	Condition	temp	92:19:2456:2459	2686133	0	True				
ANR	2686300	Identifier	temp		2686133	0					
ANR	2686301	ExpressionStatement	trail -> right = ptr	93:12:2474:2492	2686133	1	True				
ANR	2686302	AssignmentExpression	trail -> right = ptr		2686133	0		=			
ANR	2686303	PtrMemberAccess	trail -> right		2686133	0					
ANR	2686304	Identifier	trail		2686133	0					
ANR	2686305	Identifier	right		2686133	1					
ANR	2686306	Identifier	ptr		2686133	1					
ANR	2686307	ElseStatement	else		2686133	0					
ANR	2686308	ExpressionStatement	trail -> left = ptr	95:12:2521:2538	2686133	0	True				
ANR	2686309	AssignmentExpression	trail -> left = ptr		2686133	0		=			
ANR	2686310	PtrMemberAccess	trail -> left		2686133	0					
ANR	2686311	Identifier	trail		2686133	0					
ANR	2686312	Identifier	left		2686133	1					
ANR	2686313	Identifier	ptr		2686133	1					
ANR	2686314	ExpressionStatement	"sprintf ( pathname , ""%s%s"" , LOCAL_DRIVE_PREFIX , inet_ntoa ( machine_IP ) )"	96:10:2550:2618	2686133	10	True				
ANR	2686315	CallExpression	"sprintf ( pathname , ""%s%s"" , LOCAL_DRIVE_PREFIX , inet_ntoa ( machine_IP ) )"		2686133	0					
ANR	2686316	Callee	sprintf		2686133	0					
ANR	2686317	Identifier	sprintf		2686133	0					
ANR	2686318	ArgumentList	pathname		2686133	1					
ANR	2686319	Argument	pathname		2686133	0					
ANR	2686320	Identifier	pathname		2686133	0					
ANR	2686321	Argument	"""%s%s"""		2686133	1					
ANR	2686322	PrimaryExpression	"""%s%s"""		2686133	0					
ANR	2686323	Argument	LOCAL_DRIVE_PREFIX		2686133	2					
ANR	2686324	Identifier	LOCAL_DRIVE_PREFIX		2686133	0					
ANR	2686325	Argument	inet_ntoa ( machine_IP )		2686133	3					
ANR	2686326	CallExpression	inet_ntoa ( machine_IP )		2686133	0					
ANR	2686327	Callee	inet_ntoa		2686133	0					
ANR	2686328	Identifier	inet_ntoa		2686133	0					
ANR	2686329	ArgumentList	machine_IP		2686133	1					
ANR	2686330	Argument	machine_IP		2686133	0					
ANR	2686331	Identifier	machine_IP		2686133	0					
ANR	2686332	ExpressionStatement	errno = 0	97:3:2623:2632	2686133	11	True				
ANR	2686333	AssignmentExpression	errno = 0		2686133	0		=			
ANR	2686334	Identifier	errno		2686133	0					
ANR	2686335	PrimaryExpression	0		2686133	1					
ANR	2686336	IfStatement	"if ( mkdir ( pathname , ( mode_t ) INT_MAX ) != 0 )"		2686133	12					
ANR	2686337	Condition	"mkdir ( pathname , ( mode_t ) INT_MAX ) != 0"	98:14:2648:2685	2686133	0	True				
ANR	2686338	EqualityExpression	"mkdir ( pathname , ( mode_t ) INT_MAX ) != 0"		2686133	0		!=			
ANR	2686339	CallExpression	"mkdir ( pathname , ( mode_t ) INT_MAX )"		2686133	0					
ANR	2686340	Callee	mkdir		2686133	0					
ANR	2686341	Identifier	mkdir		2686133	0					
ANR	2686342	ArgumentList	pathname		2686133	1					
ANR	2686343	Argument	pathname		2686133	0					
ANR	2686344	Identifier	pathname		2686133	0					
ANR	2686345	Argument	( mode_t ) INT_MAX		2686133	1					
ANR	2686346	CastExpression	( mode_t ) INT_MAX		2686133	0					
ANR	2686347	CastTarget	mode_t		2686133	0					
ANR	2686348	Identifier	INT_MAX		2686133	1					
ANR	2686349	PrimaryExpression	0		2686133	1					
ANR	2686350	IfStatement	if ( errno != EEXIST )		2686133	1					
ANR	2686351	Condition	errno != EEXIST	99:16:2704:2718	2686133	0	True				
ANR	2686352	EqualityExpression	errno != EEXIST		2686133	0		!=			
ANR	2686353	Identifier	errno		2686133	0					
ANR	2686354	Identifier	EEXIST		2686133	1					
ANR	2686355	CompoundStatement		43:14:1235:1235	2686133	1					
ANR	2686356	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: cannot make directory '%s'\\n"" , pathname )"	101:16:2753:2819	2686133	0	True				
ANR	2686357	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: cannot make directory '%s'\\n"" , pathname )"		2686133	0					
ANR	2686358	Callee	dprintf		2686133	0					
ANR	2686359	Identifier	dprintf		2686133	0					
ANR	2686360	ArgumentList	D_ALWAYS		2686133	1					
ANR	2686361	Argument	D_ALWAYS		2686133	0					
ANR	2686362	Identifier	D_ALWAYS		2686133	0					
ANR	2686363	Argument	"""ERROR: cannot make directory '%s'\\n"""		2686133	1					
ANR	2686364	PrimaryExpression	"""ERROR: cannot make directory '%s'\\n"""		2686133	0					
ANR	2686365	Argument	pathname		2686133	2					
ANR	2686366	Identifier	pathname		2686133	0					
ANR	2686367	ExpressionStatement	exit ( MKDIR_ERROR )	102:16:2837:2854	2686133	1	True				
ANR	2686368	CallExpression	exit ( MKDIR_ERROR )		2686133	0					
ANR	2686369	Callee	exit		2686133	0					
ANR	2686370	Identifier	exit		2686133	0					
ANR	2686371	ArgumentList	MKDIR_ERROR		2686133	1					
ANR	2686372	Argument	MKDIR_ERROR		2686133	0					
ANR	2686373	Identifier	MKDIR_ERROR		2686133	0					
ANR	2686374	ReturnStatement	return ptr ;	106:2:2890:2900	2686133	9	True				
ANR	2686375	Identifier	ptr		2686133	0					
ANR	2686376	ReturnType	machine_node *		2686133	1					
ANR	2686377	Identifier	FileIndex :: FindOrAddMachine		2686133	2					
ANR	2686378	ParameterList	"struct in_addr machine_IP , int AddFlag"		2686133	3					
ANR	2686379	Parameter	struct in_addr machine_IP	56:42:1406:1430	2686133	0	True				
ANR	2686380	ParameterType	struct in_addr		2686133	0					
ANR	2686381	Identifier	machine_IP		2686133	1					
ANR	2686382	Parameter	int AddFlag	57:42:1475:1496	2686133	1	True				
ANR	2686383	ParameterType	int		2686133	0					
ANR	2686384	Identifier	AddFlag		2686133	1					
ANR	2686385	CFGEntryNode	ENTRY		2686133		True				
ANR	2686386	CFGExitNode	EXIT		2686133		True				
ANR	2686387	Symbol	ADD		2686133						
ANR	2686388	Symbol	EEXIST		2686133						
ANR	2686389	Symbol	hash_table		2686133						
ANR	2686390	Symbol	hash_bucket		2686133						
ANR	2686391	Symbol	LOCAL_DRIVE_PREFIX		2686133						
ANR	2686392	Symbol	MKDIR_ERROR		2686133						
ANR	2686393	Symbol	* hash_table		2686133						
ANR	2686394	Symbol	ptr -> machine_IP		2686133						
ANR	2686395	Symbol	ptr -> left		2686133						
ANR	2686396	Symbol	Hash		2686133						
ANR	2686397	Symbol	trail		2686133						
ANR	2686398	Symbol	DYNAMIC_ALLOCATION		2686133						
ANR	2686399	Symbol	* ptr		2686133						
ANR	2686400	Symbol	INT_MAX		2686133						
ANR	2686401	Symbol	machine_IP . s_addr		2686133						
ANR	2686402	Symbol	ptr -> right		2686133						
ANR	2686403	Symbol	mkdir		2686133						
ANR	2686404	Symbol	temp		2686133						
ANR	2686405	Symbol	errno		2686133						
ANR	2686406	Symbol	NULL		2686133						
ANR	2686407	Symbol	machine_IP		2686133						
ANR	2686408	Symbol	D_ALWAYS		2686133						
ANR	2686409	Symbol	* trail		2686133						
ANR	2686410	Symbol	inet_ntoa		2686133						
ANR	2686411	Symbol	ptr		2686133						
ANR	2686412	Symbol	pathname		2686133						
ANR	2686413	Symbol	trail -> right		2686133						
ANR	2686414	Symbol	AddFlag		2686133						
ANR	2686415	Symbol	* hash_bucket		2686133						
ANR	2686416	Symbol	ptr -> owner_root		2686133						
ANR	2686417	Symbol	trail -> left		2686133						
ANR	2686418	Symbol	ptr -> machine_IP . s_addr		2686133						
ANR	2686419	Function	FileIndex :: FindOrAddOwner	110:0:2906:4455							
ANR	2686420	FunctionDef	"FileIndex :: FindOrAddOwner (machine_node * m , const char * owner_name , int AddFlag)"		2686419	0					
ANR	2686421	CompoundStatement		113:0:3086:4455	2686419	0					
ANR	2686422	IdentifierDeclStatement	owner_node * trail = NULL ;	114:2:3090:3112	2686419	0	True				
ANR	2686423	IdentifierDecl	* trail = NULL		2686419	0					
ANR	2686424	IdentifierDeclType	owner_node *		2686419	0					
ANR	2686425	Identifier	trail		2686419	1					
ANR	2686426	AssignmentExpression	* trail = NULL		2686419	2		=			
ANR	2686427	Identifier	NULL		2686419	0					
ANR	2686428	Identifier	NULL		2686419	1					
ANR	2686429	IdentifierDeclStatement	owner_node * ptr ;	115:2:3116:3131	2686419	1	True				
ANR	2686430	IdentifierDecl	* ptr		2686419	0					
ANR	2686431	IdentifierDeclType	owner_node *		2686419	0					
ANR	2686432	Identifier	ptr		2686419	1					
ANR	2686433	IdentifierDeclStatement	int temp ;	116:2:3135:3151	2686419	2	True				
ANR	2686434	IdentifierDecl	temp		2686419	0					
ANR	2686435	IdentifierDeclType	int		2686419	0					
ANR	2686436	Identifier	temp		2686419	1					
ANR	2686437	IdentifierDeclStatement	char pathname [ MAX_PATHNAME_LENGTH ] ;	117:2:3155:3196	2686419	3	True				
ANR	2686438	IdentifierDecl	pathname [ MAX_PATHNAME_LENGTH ]		2686419	0					
ANR	2686439	IdentifierDeclType	char [ MAX_PATHNAME_LENGTH ]		2686419	0					
ANR	2686440	Identifier	pathname		2686419	1					
ANR	2686441	Identifier	MAX_PATHNAME_LENGTH		2686419	2					
ANR	2686442	ExpressionStatement	ptr = m -> owner_root	119:2:3201:3220	2686419	4	True				
ANR	2686443	AssignmentExpression	ptr = m -> owner_root		2686419	0		=			
ANR	2686444	Identifier	ptr		2686419	0					
ANR	2686445	PtrMemberAccess	m -> owner_root		2686419	1					
ANR	2686446	Identifier	m		2686419	0					
ANR	2686447	Identifier	owner_root		2686419	1					
ANR	2686448	WhileStatement	"while ( ( ptr != NULL ) && ( ( temp = strncmp ( owner_name , ptr -> owner_name , MAX_NAME_LENGTH ) ) != 0 ) )"		2686419	5					
ANR	2686449	Condition	"( ptr != NULL ) && ( ( temp = strncmp ( owner_name , ptr -> owner_name , MAX_NAME_LENGTH ) ) != 0 )"	120:9:3231:3355	2686419	0	True				
ANR	2686450	AndExpression	"( ptr != NULL ) && ( ( temp = strncmp ( owner_name , ptr -> owner_name , MAX_NAME_LENGTH ) ) != 0 )"		2686419	0		&&			
ANR	2686451	EqualityExpression	ptr != NULL		2686419	0		!=			
ANR	2686452	Identifier	ptr		2686419	0					
ANR	2686453	Identifier	NULL		2686419	1					
ANR	2686454	EqualityExpression	"( temp = strncmp ( owner_name , ptr -> owner_name , MAX_NAME_LENGTH ) ) != 0"		2686419	1		!=			
ANR	2686455	AssignmentExpression	"temp = strncmp ( owner_name , ptr -> owner_name , MAX_NAME_LENGTH )"		2686419	0		=			
ANR	2686456	Identifier	temp		2686419	0					
ANR	2686457	CallExpression	"strncmp ( owner_name , ptr -> owner_name , MAX_NAME_LENGTH )"		2686419	1					
ANR	2686458	Callee	strncmp		2686419	0					
ANR	2686459	Identifier	strncmp		2686419	0					
ANR	2686460	ArgumentList	owner_name		2686419	1					
ANR	2686461	Argument	owner_name		2686419	0					
ANR	2686462	Identifier	owner_name		2686419	0					
ANR	2686463	Argument	ptr -> owner_name		2686419	1					
ANR	2686464	PtrMemberAccess	ptr -> owner_name		2686419	0					
ANR	2686465	Identifier	ptr		2686419	0					
ANR	2686466	Identifier	owner_name		2686419	1					
ANR	2686467	Argument	MAX_NAME_LENGTH		2686419	2					
ANR	2686468	Identifier	MAX_NAME_LENGTH		2686419	0					
ANR	2686469	PrimaryExpression	0		2686419	1					
ANR	2686470	CompoundStatement		10:4:275:275	2686419	1					
ANR	2686471	ExpressionStatement	trail = ptr	123:6:3370:3381	2686419	0	True				
ANR	2686472	AssignmentExpression	trail = ptr		2686419	0		=			
ANR	2686473	Identifier	trail		2686419	0					
ANR	2686474	Identifier	ptr		2686419	1					
ANR	2686475	IfStatement	if ( temp < 0 )		2686419	1					
ANR	2686476	Condition	temp < 0	124:10:3393:3400	2686419	0	True				
ANR	2686477	RelationalExpression	temp < 0		2686419	0		<			
ANR	2686478	Identifier	temp		2686419	0					
ANR	2686479	PrimaryExpression	0		2686419	1					
ANR	2686480	ExpressionStatement	ptr = ptr -> left	125:8:3411:3426	2686419	1	True				
ANR	2686481	AssignmentExpression	ptr = ptr -> left		2686419	0		=			
ANR	2686482	Identifier	ptr		2686419	0					
ANR	2686483	PtrMemberAccess	ptr -> left		2686419	1					
ANR	2686484	Identifier	ptr		2686419	0					
ANR	2686485	Identifier	left		2686419	1					
ANR	2686486	ElseStatement	else		2686419	0					
ANR	2686487	ExpressionStatement	ptr = ptr -> right	127:8:3447:3463	2686419	0	True				
ANR	2686488	AssignmentExpression	ptr = ptr -> right		2686419	0		=			
ANR	2686489	Identifier	ptr		2686419	0					
ANR	2686490	PtrMemberAccess	ptr -> right		2686419	1					
ANR	2686491	Identifier	ptr		2686419	0					
ANR	2686492	Identifier	right		2686419	1					
ANR	2686493	IfStatement	if ( AddFlag == ADD )		2686419	6					
ANR	2686494	Condition	AddFlag == ADD	129:6:3477:3490	2686419	0	True				
ANR	2686495	EqualityExpression	AddFlag == ADD		2686419	0		==			
ANR	2686496	Identifier	AddFlag		2686419	0					
ANR	2686497	Identifier	ADD		2686419	1					
ANR	2686498	CompoundStatement		18:4:410:410	2686419	1					
ANR	2686499	IfStatement	if ( ptr == NULL )		2686419	0					
ANR	2686500	Condition	ptr == NULL	131:10:3509:3519	2686419	0	True				
ANR	2686501	EqualityExpression	ptr == NULL		2686419	0		==			
ANR	2686502	Identifier	ptr		2686419	0					
ANR	2686503	Identifier	NULL		2686419	1					
ANR	2686504	CompoundStatement		20:8:443:443	2686419	1					
ANR	2686505	Statement	ptr	133:10:3542:3544	2686419	0	True				
ANR	2686506	Statement	=	133:14:3546:3546	2686419	1	True				
ANR	2686507	Statement	new	133:16:3548:3550	2686419	2	True				
ANR	2686508	ExpressionStatement	owner_node	133:20:3552:3562	2686419	3	True				
ANR	2686509	Identifier	owner_node		2686419	0					
ANR	2686510	IfStatement	if ( ptr == NULL )		2686419	4					
ANR	2686511	Condition	ptr == NULL	134:14:3578:3588	2686419	0	True				
ANR	2686512	EqualityExpression	ptr == NULL		2686419	0		==			
ANR	2686513	Identifier	ptr		2686419	0					
ANR	2686514	Identifier	NULL		2686419	1					
ANR	2686515	CompoundStatement		23:12:516:516	2686419	1					
ANR	2686516	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: cannot allocate sufficient dynamic memory\\n"" )"	136:14:3619:3690	2686419	0	True				
ANR	2686517	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: cannot allocate sufficient dynamic memory\\n"" )"		2686419	0					
ANR	2686518	Callee	dprintf		2686419	0					
ANR	2686519	Identifier	dprintf		2686419	0					
ANR	2686520	ArgumentList	D_ALWAYS		2686419	1					
ANR	2686521	Argument	D_ALWAYS		2686419	0					
ANR	2686522	Identifier	D_ALWAYS		2686419	0					
ANR	2686523	Argument	"""ERROR: cannot allocate sufficient dynamic memory\\n"""		2686419	1					
ANR	2686524	PrimaryExpression	"""ERROR: cannot allocate sufficient dynamic memory\\n"""		2686419	0					
ANR	2686525	ExpressionStatement	exit ( DYNAMIC_ALLOCATION )	137:14:3706:3730	2686419	1	True				
ANR	2686526	CallExpression	exit ( DYNAMIC_ALLOCATION )		2686419	0					
ANR	2686527	Callee	exit		2686419	0					
ANR	2686528	Identifier	exit		2686419	0					
ANR	2686529	ArgumentList	DYNAMIC_ALLOCATION		2686419	1					
ANR	2686530	Argument	DYNAMIC_ALLOCATION		2686419	0					
ANR	2686531	Identifier	DYNAMIC_ALLOCATION		2686419	0					
ANR	2686532	ExpressionStatement	ptr -> left = NULL	139:10:3756:3772	2686419	5	True				
ANR	2686533	AssignmentExpression	ptr -> left = NULL		2686419	0		=			
ANR	2686534	PtrMemberAccess	ptr -> left		2686419	0					
ANR	2686535	Identifier	ptr		2686419	0					
ANR	2686536	Identifier	left		2686419	1					
ANR	2686537	Identifier	NULL		2686419	1					
ANR	2686538	ExpressionStatement	ptr -> right = NULL	140:10:3784:3801	2686419	6	True				
ANR	2686539	AssignmentExpression	ptr -> right = NULL		2686419	0		=			
ANR	2686540	PtrMemberAccess	ptr -> right		2686419	0					
ANR	2686541	Identifier	ptr		2686419	0					
ANR	2686542	Identifier	right		2686419	1					
ANR	2686543	Identifier	NULL		2686419	1					
ANR	2686544	ExpressionStatement	"strncpy ( ptr -> owner_name , owner_name , MAX_NAME_LENGTH )"	141:10:3813:3866	2686419	7	True				
ANR	2686545	CallExpression	"strncpy ( ptr -> owner_name , owner_name , MAX_NAME_LENGTH )"		2686419	0					
ANR	2686546	Callee	strncpy		2686419	0					
ANR	2686547	Identifier	strncpy		2686419	0					
ANR	2686548	ArgumentList	ptr -> owner_name		2686419	1					
ANR	2686549	Argument	ptr -> owner_name		2686419	0					
ANR	2686550	PtrMemberAccess	ptr -> owner_name		2686419	0					
ANR	2686551	Identifier	ptr		2686419	0					
ANR	2686552	Identifier	owner_name		2686419	1					
ANR	2686553	Argument	owner_name		2686419	1					
ANR	2686554	Identifier	owner_name		2686419	0					
ANR	2686555	Argument	MAX_NAME_LENGTH		2686419	2					
ANR	2686556	Identifier	MAX_NAME_LENGTH		2686419	0					
ANR	2686557	ExpressionStatement	ptr -> file_root = NULL	142:10:3878:3899	2686419	8	True				
ANR	2686558	AssignmentExpression	ptr -> file_root = NULL		2686419	0		=			
ANR	2686559	PtrMemberAccess	ptr -> file_root		2686419	0					
ANR	2686560	Identifier	ptr		2686419	0					
ANR	2686561	Identifier	file_root		2686419	1					
ANR	2686562	Identifier	NULL		2686419	1					
ANR	2686563	IfStatement	if ( trail == NULL )		2686419	9					
ANR	2686564	Condition	trail == NULL	143:14:3915:3927	2686419	0	True				
ANR	2686565	EqualityExpression	trail == NULL		2686419	0		==			
ANR	2686566	Identifier	trail		2686419	0					
ANR	2686567	Identifier	NULL		2686419	1					
ANR	2686568	ExpressionStatement	m -> owner_root = ptr	144:12:3942:3961	2686419	1	True				
ANR	2686569	AssignmentExpression	m -> owner_root = ptr		2686419	0		=			
ANR	2686570	PtrMemberAccess	m -> owner_root		2686419	0					
ANR	2686571	Identifier	m		2686419	0					
ANR	2686572	Identifier	owner_root		2686419	1					
ANR	2686573	Identifier	ptr		2686419	1					
ANR	2686574	ElseStatement	else		2686419	0					
ANR	2686575	IfStatement	if ( temp < 0 )		2686419	0					
ANR	2686576	Condition	temp < 0	145:19:3982:3989	2686419	0	True				
ANR	2686577	RelationalExpression	temp < 0		2686419	0		<			
ANR	2686578	Identifier	temp		2686419	0					
ANR	2686579	PrimaryExpression	0		2686419	1					
ANR	2686580	ExpressionStatement	trail -> left = ptr	146:12:4004:4021	2686419	1	True				
ANR	2686581	AssignmentExpression	trail -> left = ptr		2686419	0		=			
ANR	2686582	PtrMemberAccess	trail -> left		2686419	0					
ANR	2686583	Identifier	trail		2686419	0					
ANR	2686584	Identifier	left		2686419	1					
ANR	2686585	Identifier	ptr		2686419	1					
ANR	2686586	ElseStatement	else		2686419	0					
ANR	2686587	ExpressionStatement	trail -> right = ptr	148:12:4050:4068	2686419	0	True				
ANR	2686588	AssignmentExpression	trail -> right = ptr		2686419	0		=			
ANR	2686589	PtrMemberAccess	trail -> right		2686419	0					
ANR	2686590	Identifier	trail		2686419	0					
ANR	2686591	Identifier	right		2686419	1					
ANR	2686592	Identifier	ptr		2686419	1					
ANR	2686593	ExpressionStatement	"sprintf ( pathname , ""%s%s/%s"" , LOCAL_DRIVE_PREFIX , inet_ntoa ( m -> machine_IP ) , owner_name )"	149:10:4080:4171	2686419	10	True				
ANR	2686594	CallExpression	"sprintf ( pathname , ""%s%s/%s"" , LOCAL_DRIVE_PREFIX , inet_ntoa ( m -> machine_IP ) , owner_name )"		2686419	0					
ANR	2686595	Callee	sprintf		2686419	0					
ANR	2686596	Identifier	sprintf		2686419	0					
ANR	2686597	ArgumentList	pathname		2686419	1					
ANR	2686598	Argument	pathname		2686419	0					
ANR	2686599	Identifier	pathname		2686419	0					
ANR	2686600	Argument	"""%s%s/%s"""		2686419	1					
ANR	2686601	PrimaryExpression	"""%s%s/%s"""		2686419	0					
ANR	2686602	Argument	LOCAL_DRIVE_PREFIX		2686419	2					
ANR	2686603	Identifier	LOCAL_DRIVE_PREFIX		2686419	0					
ANR	2686604	Argument	inet_ntoa ( m -> machine_IP )		2686419	3					
ANR	2686605	CallExpression	inet_ntoa ( m -> machine_IP )		2686419	0					
ANR	2686606	Callee	inet_ntoa		2686419	0					
ANR	2686607	Identifier	inet_ntoa		2686419	0					
ANR	2686608	ArgumentList	m -> machine_IP		2686419	1					
ANR	2686609	Argument	m -> machine_IP		2686419	0					
ANR	2686610	PtrMemberAccess	m -> machine_IP		2686419	0					
ANR	2686611	Identifier	m		2686419	0					
ANR	2686612	Identifier	machine_IP		2686419	1					
ANR	2686613	Argument	owner_name		2686419	4					
ANR	2686614	Identifier	owner_name		2686419	0					
ANR	2686615	ExpressionStatement	errno = 0	151:3:4176:4185	2686419	11	True				
ANR	2686616	AssignmentExpression	errno = 0		2686419	0		=			
ANR	2686617	Identifier	errno		2686419	0					
ANR	2686618	PrimaryExpression	0		2686419	1					
ANR	2686619	IfStatement	"if ( mkdir ( pathname , ( mode_t ) INT_MAX ) != 0 )"		2686419	12					
ANR	2686620	Condition	"mkdir ( pathname , ( mode_t ) INT_MAX ) != 0"	152:14:4201:4238	2686419	0	True				
ANR	2686621	EqualityExpression	"mkdir ( pathname , ( mode_t ) INT_MAX ) != 0"		2686419	0		!=			
ANR	2686622	CallExpression	"mkdir ( pathname , ( mode_t ) INT_MAX )"		2686419	0					
ANR	2686623	Callee	mkdir		2686419	0					
ANR	2686624	Identifier	mkdir		2686419	0					
ANR	2686625	ArgumentList	pathname		2686419	1					
ANR	2686626	Argument	pathname		2686419	0					
ANR	2686627	Identifier	pathname		2686419	0					
ANR	2686628	Argument	( mode_t ) INT_MAX		2686419	1					
ANR	2686629	CastExpression	( mode_t ) INT_MAX		2686419	0					
ANR	2686630	CastTarget	mode_t		2686419	0					
ANR	2686631	Identifier	INT_MAX		2686419	1					
ANR	2686632	PrimaryExpression	0		2686419	1					
ANR	2686633	IfStatement	if ( errno != EEXIST )		2686419	1					
ANR	2686634	Condition	errno != EEXIST	153:16:4257:4271	2686419	0	True				
ANR	2686635	EqualityExpression	errno != EEXIST		2686419	0		!=			
ANR	2686636	Identifier	errno		2686419	0					
ANR	2686637	Identifier	EEXIST		2686419	1					
ANR	2686638	CompoundStatement		42:14:1201:1201	2686419	1					
ANR	2686639	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: cannot make directory '%s'\\n"" , pathname )"	155:16:4306:4372	2686419	0	True				
ANR	2686640	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: cannot make directory '%s'\\n"" , pathname )"		2686419	0					
ANR	2686641	Callee	dprintf		2686419	0					
ANR	2686642	Identifier	dprintf		2686419	0					
ANR	2686643	ArgumentList	D_ALWAYS		2686419	1					
ANR	2686644	Argument	D_ALWAYS		2686419	0					
ANR	2686645	Identifier	D_ALWAYS		2686419	0					
ANR	2686646	Argument	"""ERROR: cannot make directory '%s'\\n"""		2686419	1					
ANR	2686647	PrimaryExpression	"""ERROR: cannot make directory '%s'\\n"""		2686419	0					
ANR	2686648	Argument	pathname		2686419	2					
ANR	2686649	Identifier	pathname		2686419	0					
ANR	2686650	ExpressionStatement	exit ( MKDIR_ERROR )	156:16:4390:4407	2686419	1	True				
ANR	2686651	CallExpression	exit ( MKDIR_ERROR )		2686419	0					
ANR	2686652	Callee	exit		2686419	0					
ANR	2686653	Identifier	exit		2686419	0					
ANR	2686654	ArgumentList	MKDIR_ERROR		2686419	1					
ANR	2686655	Argument	MKDIR_ERROR		2686419	0					
ANR	2686656	Identifier	MKDIR_ERROR		2686419	0					
ANR	2686657	ReturnStatement	return ptr ;	160:2:4443:4453	2686419	7	True				
ANR	2686658	Identifier	ptr		2686419	0					
ANR	2686659	ReturnType	owner_node *		2686419	1					
ANR	2686660	Identifier	FileIndex :: FindOrAddOwner		2686419	2					
ANR	2686661	ParameterList	"machine_node * m , const char * owner_name , int AddFlag"		2686419	3					
ANR	2686662	Parameter	machine_node * m	110:38:2944:2958	2686419	0	True				
ANR	2686663	ParameterType	machine_node *		2686419	0					
ANR	2686664	Identifier	m		2686419	1					
ANR	2686665	Parameter	const char * owner_name	111:38:2999:3022	2686419	1	True				
ANR	2686666	ParameterType	const char *		2686419	0					
ANR	2686667	Identifier	owner_name		2686419	1					
ANR	2686668	Parameter	int AddFlag	112:38:3063:3083	2686419	2	True				
ANR	2686669	ParameterType	int		2686419	0					
ANR	2686670	Identifier	AddFlag		2686419	1					
ANR	2686671	CFGEntryNode	ENTRY		2686419		True				
ANR	2686672	CFGExitNode	EXIT		2686419		True				
ANR	2686673	Symbol	ADD		2686419						
ANR	2686674	Symbol	EEXIST		2686419						
ANR	2686675	Symbol	ptr -> owner_name		2686419						
ANR	2686676	Symbol	LOCAL_DRIVE_PREFIX		2686419						
ANR	2686677	Symbol	MKDIR_ERROR		2686419						
ANR	2686678	Symbol	m -> owner_root		2686419						
ANR	2686679	Symbol	ptr -> left		2686419						
ANR	2686680	Symbol	trail		2686419						
ANR	2686681	Symbol	strncmp		2686419						
ANR	2686682	Symbol	DYNAMIC_ALLOCATION		2686419						
ANR	2686683	Symbol	* ptr		2686419						
ANR	2686684	Symbol	INT_MAX		2686419						
ANR	2686685	Symbol	ptr -> right		2686419						
ANR	2686686	Symbol	mkdir		2686419						
ANR	2686687	Symbol	temp		2686419						
ANR	2686688	Symbol	errno		2686419						
ANR	2686689	Symbol	owner_name		2686419						
ANR	2686690	Symbol	NULL		2686419						
ANR	2686691	Symbol	D_ALWAYS		2686419						
ANR	2686692	Symbol	* trail		2686419						
ANR	2686693	Symbol	inet_ntoa		2686419						
ANR	2686694	Symbol	m		2686419						
ANR	2686695	Symbol	MAX_NAME_LENGTH		2686419						
ANR	2686696	Symbol	ptr		2686419						
ANR	2686697	Symbol	pathname		2686419						
ANR	2686698	Symbol	trail -> right		2686419						
ANR	2686699	Symbol	AddFlag		2686419						
ANR	2686700	Symbol	* m		2686419						
ANR	2686701	Symbol	m -> machine_IP		2686419						
ANR	2686702	Symbol	trail -> left		2686419						
ANR	2686703	Symbol	ptr -> file_root		2686419						
ANR	2686704	Function	FileIndex :: FindOrAddFile	164:0:4459:5376							
ANR	2686705	FunctionDef	"FileIndex :: FindOrAddFile (file_node * & file_root , const char * file_name , int AddFlag)"		2686704	0					
ANR	2686706	CompoundStatement		167:0:4578:5376	2686704	0					
ANR	2686707	IdentifierDeclStatement	file_node * trail = NULL ;	168:2:4582:4603	2686704	0	True				
ANR	2686708	IdentifierDecl	* trail = NULL		2686704	0					
ANR	2686709	IdentifierDeclType	file_node *		2686704	0					
ANR	2686710	Identifier	trail		2686704	1					
ANR	2686711	AssignmentExpression	* trail = NULL		2686704	2		=			
ANR	2686712	Identifier	NULL		2686704	0					
ANR	2686713	Identifier	NULL		2686704	1					
ANR	2686714	IdentifierDeclStatement	file_node * ptr ;	169:2:4607:4621	2686704	1	True				
ANR	2686715	IdentifierDecl	* ptr		2686704	0					
ANR	2686716	IdentifierDeclType	file_node *		2686704	0					
ANR	2686717	Identifier	ptr		2686704	1					
ANR	2686718	IdentifierDeclStatement	int temp ;	170:2:4625:4640	2686704	2	True				
ANR	2686719	IdentifierDecl	temp		2686704	0					
ANR	2686720	IdentifierDeclType	int		2686704	0					
ANR	2686721	Identifier	temp		2686704	1					
ANR	2686722	ExpressionStatement	ptr = file_root	172:2:4645:4660	2686704	3	True				
ANR	2686723	AssignmentExpression	ptr = file_root		2686704	0		=			
ANR	2686724	Identifier	ptr		2686704	0					
ANR	2686725	Identifier	file_root		2686704	1					
ANR	2686726	WhileStatement	"while ( ( ptr != NULL ) && ( ( temp = strncmp ( file_name , ptr -> file_name , MAX_CONDOR_FILENAME_LENGTH ) ) != 0 ) )"		2686704	4					
ANR	2686727	Condition	"( ptr != NULL ) && ( ( temp = strncmp ( file_name , ptr -> file_name , MAX_CONDOR_FILENAME_LENGTH ) ) != 0 )"	173:9:4671:4770	2686704	0	True				
ANR	2686728	AndExpression	"( ptr != NULL ) && ( ( temp = strncmp ( file_name , ptr -> file_name , MAX_CONDOR_FILENAME_LENGTH ) ) != 0 )"		2686704	0		&&			
ANR	2686729	EqualityExpression	ptr != NULL		2686704	0		!=			
ANR	2686730	Identifier	ptr		2686704	0					
ANR	2686731	Identifier	NULL		2686704	1					
ANR	2686732	EqualityExpression	"( temp = strncmp ( file_name , ptr -> file_name , MAX_CONDOR_FILENAME_LENGTH ) ) != 0"		2686704	1		!=			
ANR	2686733	AssignmentExpression	"temp = strncmp ( file_name , ptr -> file_name , MAX_CONDOR_FILENAME_LENGTH )"		2686704	0		=			
ANR	2686734	Identifier	temp		2686704	0					
ANR	2686735	CallExpression	"strncmp ( file_name , ptr -> file_name , MAX_CONDOR_FILENAME_LENGTH )"		2686704	1					
ANR	2686736	Callee	strncmp		2686704	0					
ANR	2686737	Identifier	strncmp		2686704	0					
ANR	2686738	ArgumentList	file_name		2686704	1					
ANR	2686739	Argument	file_name		2686704	0					
ANR	2686740	Identifier	file_name		2686704	0					
ANR	2686741	Argument	ptr -> file_name		2686704	1					
ANR	2686742	PtrMemberAccess	ptr -> file_name		2686704	0					
ANR	2686743	Identifier	ptr		2686704	0					
ANR	2686744	Identifier	file_name		2686704	1					
ANR	2686745	Argument	MAX_CONDOR_FILENAME_LENGTH		2686704	2					
ANR	2686746	Identifier	MAX_CONDOR_FILENAME_LENGTH		2686704	0					
ANR	2686747	PrimaryExpression	0		2686704	1					
ANR	2686748	CompoundStatement		9:4:198:198	2686704	1					
ANR	2686749	ExpressionStatement	trail = ptr	176:6:4785:4796	2686704	0	True				
ANR	2686750	AssignmentExpression	trail = ptr		2686704	0		=			
ANR	2686751	Identifier	trail		2686704	0					
ANR	2686752	Identifier	ptr		2686704	1					
ANR	2686753	IfStatement	if ( temp < 0 )		2686704	1					
ANR	2686754	Condition	temp < 0	177:10:4808:4815	2686704	0	True				
ANR	2686755	RelationalExpression	temp < 0		2686704	0		<			
ANR	2686756	Identifier	temp		2686704	0					
ANR	2686757	PrimaryExpression	0		2686704	1					
ANR	2686758	ExpressionStatement	ptr = ptr -> left	178:1:4819:4834	2686704	1	True				
ANR	2686759	AssignmentExpression	ptr = ptr -> left		2686704	0		=			
ANR	2686760	Identifier	ptr		2686704	0					
ANR	2686761	PtrMemberAccess	ptr -> left		2686704	1					
ANR	2686762	Identifier	ptr		2686704	0					
ANR	2686763	Identifier	left		2686704	1					
ANR	2686764	ElseStatement	else		2686704	0					
ANR	2686765	ExpressionStatement	ptr = ptr -> right	180:1:4848:4864	2686704	0	True				
ANR	2686766	AssignmentExpression	ptr = ptr -> right		2686704	0		=			
ANR	2686767	Identifier	ptr		2686704	0					
ANR	2686768	PtrMemberAccess	ptr -> right		2686704	1					
ANR	2686769	Identifier	ptr		2686704	0					
ANR	2686770	Identifier	right		2686704	1					
ANR	2686771	IfStatement	if ( AddFlag == ADD )		2686704	5					
ANR	2686772	Condition	AddFlag == ADD	182:6:4878:4891	2686704	0	True				
ANR	2686773	EqualityExpression	AddFlag == ADD		2686704	0		==			
ANR	2686774	Identifier	AddFlag		2686704	0					
ANR	2686775	Identifier	ADD		2686704	1					
ANR	2686776	CompoundStatement		17:4:319:319	2686704	1					
ANR	2686777	IfStatement	if ( ptr == NULL )		2686704	0					
ANR	2686778	Condition	ptr == NULL	184:10:4910:4920	2686704	0	True				
ANR	2686779	EqualityExpression	ptr == NULL		2686704	0		==			
ANR	2686780	Identifier	ptr		2686704	0					
ANR	2686781	Identifier	NULL		2686704	1					
ANR	2686782	CompoundStatement		19:1:345:345	2686704	1					
ANR	2686783	Statement	ptr	186:3:4929:4931	2686704	0	True				
ANR	2686784	Statement	=	186:7:4933:4933	2686704	1	True				
ANR	2686785	Statement	new	186:9:4935:4937	2686704	2	True				
ANR	2686786	ExpressionStatement	file_node	186:13:4939:4948	2686704	3	True				
ANR	2686787	Identifier	file_node		2686704	0					
ANR	2686788	IfStatement	if ( ptr == NULL )		2686704	4					
ANR	2686789	Condition	ptr == NULL	187:7:4957:4967	2686704	0	True				
ANR	2686790	EqualityExpression	ptr == NULL		2686704	0		==			
ANR	2686791	Identifier	ptr		2686704	0					
ANR	2686792	Identifier	NULL		2686704	1					
ANR	2686793	CompoundStatement		22:5:396:396	2686704	1					
ANR	2686794	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: cannot allocate sufficient dynamic memory\\n"" )"	189:4:4981:5052	2686704	0	True				
ANR	2686795	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: cannot allocate sufficient dynamic memory\\n"" )"		2686704	0					
ANR	2686796	Callee	dprintf		2686704	0					
ANR	2686797	Identifier	dprintf		2686704	0					
ANR	2686798	ArgumentList	D_ALWAYS		2686704	1					
ANR	2686799	Argument	D_ALWAYS		2686704	0					
ANR	2686800	Identifier	D_ALWAYS		2686704	0					
ANR	2686801	Argument	"""ERROR: cannot allocate sufficient dynamic memory\\n"""		2686704	1					
ANR	2686802	PrimaryExpression	"""ERROR: cannot allocate sufficient dynamic memory\\n"""		2686704	0					
ANR	2686803	ExpressionStatement	exit ( DYNAMIC_ALLOCATION )	190:7:5061:5085	2686704	1	True				
ANR	2686804	CallExpression	exit ( DYNAMIC_ALLOCATION )		2686704	0					
ANR	2686805	Callee	exit		2686704	0					
ANR	2686806	Identifier	exit		2686704	0					
ANR	2686807	ArgumentList	DYNAMIC_ALLOCATION		2686704	1					
ANR	2686808	Argument	DYNAMIC_ALLOCATION		2686704	0					
ANR	2686809	Identifier	DYNAMIC_ALLOCATION		2686704	0					
ANR	2686810	ExpressionStatement	ptr -> left = NULL	192:3:5097:5113	2686704	5	True				
ANR	2686811	AssignmentExpression	ptr -> left = NULL		2686704	0		=			
ANR	2686812	PtrMemberAccess	ptr -> left		2686704	0					
ANR	2686813	Identifier	ptr		2686704	0					
ANR	2686814	Identifier	left		2686704	1					
ANR	2686815	Identifier	NULL		2686704	1					
ANR	2686816	ExpressionStatement	ptr -> right = NULL	193:3:5118:5135	2686704	6	True				
ANR	2686817	AssignmentExpression	ptr -> right = NULL		2686704	0		=			
ANR	2686818	PtrMemberAccess	ptr -> right		2686704	0					
ANR	2686819	Identifier	ptr		2686704	0					
ANR	2686820	Identifier	right		2686704	1					
ANR	2686821	Identifier	NULL		2686704	1					
ANR	2686822	ExpressionStatement	"strncpy ( ptr -> file_name , file_name , MAX_CONDOR_FILENAME_LENGTH )"	194:3:5140:5202	2686704	7	True				
ANR	2686823	CallExpression	"strncpy ( ptr -> file_name , file_name , MAX_CONDOR_FILENAME_LENGTH )"		2686704	0					
ANR	2686824	Callee	strncpy		2686704	0					
ANR	2686825	Identifier	strncpy		2686704	0					
ANR	2686826	ArgumentList	ptr -> file_name		2686704	1					
ANR	2686827	Argument	ptr -> file_name		2686704	0					
ANR	2686828	PtrMemberAccess	ptr -> file_name		2686704	0					
ANR	2686829	Identifier	ptr		2686704	0					
ANR	2686830	Identifier	file_name		2686704	1					
ANR	2686831	Argument	file_name		2686704	1					
ANR	2686832	Identifier	file_name		2686704	0					
ANR	2686833	Argument	MAX_CONDOR_FILENAME_LENGTH		2686704	2					
ANR	2686834	Identifier	MAX_CONDOR_FILENAME_LENGTH		2686704	0					
ANR	2686835	ExpressionStatement	ptr -> file_data = NULL	195:3:5207:5228	2686704	8	True				
ANR	2686836	AssignmentExpression	ptr -> file_data = NULL		2686704	0		=			
ANR	2686837	PtrMemberAccess	ptr -> file_data		2686704	0					
ANR	2686838	Identifier	ptr		2686704	0					
ANR	2686839	Identifier	file_data		2686704	1					
ANR	2686840	Identifier	NULL		2686704	1					
ANR	2686841	IfStatement	if ( trail == NULL )		2686704	9					
ANR	2686842	Condition	trail == NULL	196:7:5237:5249	2686704	0	True				
ANR	2686843	EqualityExpression	trail == NULL		2686704	0		==			
ANR	2686844	Identifier	trail		2686704	0					
ANR	2686845	Identifier	NULL		2686704	1					
ANR	2686846	ExpressionStatement	file_root = ptr	197:5:5257:5272	2686704	1	True				
ANR	2686847	AssignmentExpression	file_root = ptr		2686704	0		=			
ANR	2686848	Identifier	file_root		2686704	0					
ANR	2686849	Identifier	ptr		2686704	1					
ANR	2686850	ElseStatement	else		2686704	0					
ANR	2686851	IfStatement	if ( temp < 0 )		2686704	0					
ANR	2686852	Condition	temp < 0	198:12:5286:5293	2686704	0	True				
ANR	2686853	RelationalExpression	temp < 0		2686704	0		<			
ANR	2686854	Identifier	temp		2686704	0					
ANR	2686855	PrimaryExpression	0		2686704	1					
ANR	2686856	ExpressionStatement	trail -> left = ptr	199:5:5301:5318	2686704	1	True				
ANR	2686857	AssignmentExpression	trail -> left = ptr		2686704	0		=			
ANR	2686858	PtrMemberAccess	trail -> left		2686704	0					
ANR	2686859	Identifier	trail		2686704	0					
ANR	2686860	Identifier	left		2686704	1					
ANR	2686861	Identifier	ptr		2686704	1					
ANR	2686862	ElseStatement	else		2686704	0					
ANR	2686863	ExpressionStatement	trail -> right = ptr	201:5:5333:5351	2686704	0	True				
ANR	2686864	AssignmentExpression	trail -> right = ptr		2686704	0		=			
ANR	2686865	PtrMemberAccess	trail -> right		2686704	0					
ANR	2686866	Identifier	trail		2686704	0					
ANR	2686867	Identifier	right		2686704	1					
ANR	2686868	Identifier	ptr		2686704	1					
ANR	2686869	ReturnStatement	return ptr ;	204:2:5364:5374	2686704	6	True				
ANR	2686870	Identifier	ptr		2686704	0					
ANR	2686871	ReturnType	file_node *		2686704	1					
ANR	2686872	Identifier	FileIndex :: FindOrAddFile		2686704	2					
ANR	2686873	ParameterList	"file_node * & file_root , const char * file_name , int AddFlag"		2686704	3					
ANR	2686874	Parameter	file_node * & file_root	164:36:4495:4515	2686704	0	True				
ANR	2686875	ParameterType	file_node * &		2686704	0					
ANR	2686876	Identifier	file_root		2686704	1					
ANR	2686877	Parameter	const char * file_name	165:8:4526:4546	2686704	1	True				
ANR	2686878	ParameterType	const char *		2686704	0					
ANR	2686879	Identifier	file_name		2686704	1					
ANR	2686880	Parameter	int AddFlag	166:8:4557:4575	2686704	2	True				
ANR	2686881	ParameterType	int		2686704	0					
ANR	2686882	Identifier	AddFlag		2686704	1					
ANR	2686883	CFGEntryNode	ENTRY		2686704		True				
ANR	2686884	CFGExitNode	EXIT		2686704		True				
ANR	2686885	Symbol	ADD		2686704						
ANR	2686886	Symbol	ptr -> file_data		2686704						
ANR	2686887	Symbol	temp		2686704						
ANR	2686888	Symbol	NULL		2686704						
ANR	2686889	Symbol	ptr -> file_name		2686704						
ANR	2686890	Symbol	file_name		2686704						
ANR	2686891	Symbol	MAX_CONDOR_FILENAME_LENGTH		2686704						
ANR	2686892	Symbol	D_ALWAYS		2686704						
ANR	2686893	Symbol	* trail		2686704						
ANR	2686894	Symbol	ptr -> left		2686704						
ANR	2686895	Symbol	file_root		2686704						
ANR	2686896	Symbol	ptr		2686704						
ANR	2686897	Symbol	trail -> right		2686704						
ANR	2686898	Symbol	AddFlag		2686704						
ANR	2686899	Symbol	trail		2686704						
ANR	2686900	Symbol	strncmp		2686704						
ANR	2686901	Symbol	DYNAMIC_ALLOCATION		2686704						
ANR	2686902	Symbol	* ptr		2686704						
ANR	2686903	Symbol	ptr -> right		2686704						
ANR	2686904	Symbol	trail -> left		2686704						
ANR	2686905	Function	FileIndex :: Exists	208:0:5380:5997							
ANR	2686906	FunctionDef	"FileIndex :: Exists (struct in_addr machine_IP , const char * owner_name , const char * file_name)"		2686905	0					
ANR	2686907	CompoundStatement		211:0:5526:5997	2686905	0					
ANR	2686908	IdentifierDeclStatement	machine_node * m ;	212:2:5530:5545	2686905	0	True				
ANR	2686909	IdentifierDecl	* m		2686905	0					
ANR	2686910	IdentifierDeclType	machine_node *		2686905	0					
ANR	2686911	Identifier	m		2686905	1					
ANR	2686912	IdentifierDeclStatement	owner_node * o ;	213:2:5549:5564	2686905	1	True				
ANR	2686913	IdentifierDecl	* o		2686905	0					
ANR	2686914	IdentifierDeclType	owner_node *		2686905	0					
ANR	2686915	Identifier	o		2686905	1					
ANR	2686916	IdentifierDeclStatement	file_node * f ;	214:2:5568:5583	2686905	2	True				
ANR	2686917	IdentifierDecl	* f		2686905	0					
ANR	2686918	IdentifierDeclType	file_node *		2686905	0					
ANR	2686919	Identifier	f		2686905	1					
ANR	2686920	ExpressionStatement	"m = FindOrAddMachine ( machine_IP , 0 )"	216:2:5588:5623	2686905	3	True				
ANR	2686921	AssignmentExpression	"m = FindOrAddMachine ( machine_IP , 0 )"		2686905	0		=			
ANR	2686922	Identifier	m		2686905	0					
ANR	2686923	CallExpression	"FindOrAddMachine ( machine_IP , 0 )"		2686905	1					
ANR	2686924	Callee	FindOrAddMachine		2686905	0					
ANR	2686925	Identifier	FindOrAddMachine		2686905	0					
ANR	2686926	ArgumentList	machine_IP		2686905	1					
ANR	2686927	Argument	machine_IP		2686905	0					
ANR	2686928	Identifier	machine_IP		2686905	0					
ANR	2686929	Argument	0		2686905	1					
ANR	2686930	PrimaryExpression	0		2686905	0					
ANR	2686931	IfStatement	if ( m == NULL )		2686905	4					
ANR	2686932	Condition	m == NULL	217:6:5631:5639	2686905	0	True				
ANR	2686933	EqualityExpression	m == NULL		2686905	0		==			
ANR	2686934	Identifier	m		2686905	0					
ANR	2686935	Identifier	NULL		2686905	1					
ANR	2686936	ReturnStatement	return DOES_NOT_EXIST ;	218:4:5646:5667	2686905	1	True				
ANR	2686937	Identifier	DOES_NOT_EXIST		2686905	0					
ANR	2686938	ExpressionStatement	"o = FindOrAddOwner ( m , owner_name , 0 )"	219:2:5671:5707	2686905	5	True				
ANR	2686939	AssignmentExpression	"o = FindOrAddOwner ( m , owner_name , 0 )"		2686905	0		=			
ANR	2686940	Identifier	o		2686905	0					
ANR	2686941	CallExpression	"FindOrAddOwner ( m , owner_name , 0 )"		2686905	1					
ANR	2686942	Callee	FindOrAddOwner		2686905	0					
ANR	2686943	Identifier	FindOrAddOwner		2686905	0					
ANR	2686944	ArgumentList	m		2686905	1					
ANR	2686945	Argument	m		2686905	0					
ANR	2686946	Identifier	m		2686905	0					
ANR	2686947	Argument	owner_name		2686905	1					
ANR	2686948	Identifier	owner_name		2686905	0					
ANR	2686949	Argument	0		2686905	2					
ANR	2686950	PrimaryExpression	0		2686905	0					
ANR	2686951	IfStatement	if ( o == NULL )		2686905	6					
ANR	2686952	Condition	o == NULL	220:6:5715:5723	2686905	0	True				
ANR	2686953	EqualityExpression	o == NULL		2686905	0		==			
ANR	2686954	Identifier	o		2686905	0					
ANR	2686955	Identifier	NULL		2686905	1					
ANR	2686956	ReturnStatement	return DOES_NOT_EXIST ;	221:4:5730:5751	2686905	1	True				
ANR	2686957	Identifier	DOES_NOT_EXIST		2686905	0					
ANR	2686958	ExpressionStatement	"f = FindOrAddFile ( o -> file_root , file_name , 0 )"	222:2:5755:5800	2686905	7	True				
ANR	2686959	AssignmentExpression	"f = FindOrAddFile ( o -> file_root , file_name , 0 )"		2686905	0		=			
ANR	2686960	Identifier	f		2686905	0					
ANR	2686961	CallExpression	"FindOrAddFile ( o -> file_root , file_name , 0 )"		2686905	1					
ANR	2686962	Callee	FindOrAddFile		2686905	0					
ANR	2686963	Identifier	FindOrAddFile		2686905	0					
ANR	2686964	ArgumentList	o -> file_root		2686905	1					
ANR	2686965	Argument	o -> file_root		2686905	0					
ANR	2686966	PtrMemberAccess	o -> file_root		2686905	0					
ANR	2686967	Identifier	o		2686905	0					
ANR	2686968	Identifier	file_root		2686905	1					
ANR	2686969	Argument	file_name		2686905	1					
ANR	2686970	Identifier	file_name		2686905	0					
ANR	2686971	Argument	0		2686905	2					
ANR	2686972	PrimaryExpression	0		2686905	0					
ANR	2686973	IfStatement	if ( f == NULL )		2686905	8					
ANR	2686974	Condition	f == NULL	223:6:5808:5816	2686905	0	True				
ANR	2686975	EqualityExpression	f == NULL		2686905	0		==			
ANR	2686976	Identifier	f		2686905	0					
ANR	2686977	Identifier	NULL		2686905	1					
ANR	2686978	ReturnStatement	return DOES_NOT_EXIST ;	224:4:5823:5844	2686905	1	True				
ANR	2686979	Identifier	DOES_NOT_EXIST		2686905	0					
ANR	2686980	IfStatement	if ( f -> file_data == NULL )		2686905	9					
ANR	2686981	Condition	f -> file_data == NULL	225:6:5852:5871	2686905	0	True				
ANR	2686982	EqualityExpression	f -> file_data == NULL		2686905	0		==			
ANR	2686983	PtrMemberAccess	f -> file_data		2686905	0					
ANR	2686984	Identifier	f		2686905	0					
ANR	2686985	Identifier	file_data		2686905	1					
ANR	2686986	Identifier	NULL		2686905	1					
ANR	2686987	CompoundStatement		16:4:351:351	2686905	1					
ANR	2686988	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: IMDS index is inconsistent\\n"" )"	227:6:5886:5942	2686905	0	True				
ANR	2686989	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: IMDS index is inconsistent\\n"" )"		2686905	0					
ANR	2686990	Callee	dprintf		2686905	0					
ANR	2686991	Identifier	dprintf		2686905	0					
ANR	2686992	ArgumentList	D_ALWAYS		2686905	1					
ANR	2686993	Argument	D_ALWAYS		2686905	0					
ANR	2686994	Identifier	D_ALWAYS		2686905	0					
ANR	2686995	Argument	"""ERROR: IMDS index is inconsistent\\n"""		2686905	1					
ANR	2686996	PrimaryExpression	"""ERROR: IMDS index is inconsistent\\n"""		2686905	0					
ANR	2686997	ExpressionStatement	exit ( IMDS_INDEX_ERROR )	228:6:5950:5972	2686905	1	True				
ANR	2686998	CallExpression	exit ( IMDS_INDEX_ERROR )		2686905	0					
ANR	2686999	Callee	exit		2686905	0					
ANR	2687000	Identifier	exit		2686905	0					
ANR	2687001	ArgumentList	IMDS_INDEX_ERROR		2686905	1					
ANR	2687002	Argument	IMDS_INDEX_ERROR		2686905	0					
ANR	2687003	Identifier	IMDS_INDEX_ERROR		2686905	0					
ANR	2687004	ReturnStatement	return EXISTS ;	230:2:5982:5995	2686905	10	True				
ANR	2687005	Identifier	EXISTS		2686905	0					
ANR	2687006	ReturnType	int		2686905	1					
ANR	2687007	Identifier	FileIndex :: Exists		2686905	2					
ANR	2687008	ParameterList	"struct in_addr machine_IP , const char * owner_name , const char * file_name"		2686905	3					
ANR	2687009	Parameter	struct in_addr machine_IP	208:22:5402:5426	2686905	0	True				
ANR	2687010	ParameterType	struct in_addr		2686905	0					
ANR	2687011	Identifier	machine_IP		2686905	1					
ANR	2687012	Parameter	const char * owner_name	209:22:5451:5475	2686905	1	True				
ANR	2687013	ParameterType	const char *		2686905	0					
ANR	2687014	Identifier	owner_name		2686905	1					
ANR	2687015	Parameter	const char * file_name	210:22:5500:5523	2686905	2	True				
ANR	2687016	ParameterType	const char *		2686905	0					
ANR	2687017	Identifier	file_name		2686905	1					
ANR	2687018	CFGEntryNode	ENTRY		2686905		True				
ANR	2687019	CFGExitNode	EXIT		2686905		True				
ANR	2687020	Symbol	owner_name		2686905						
ANR	2687021	Symbol	NULL		2686905						
ANR	2687022	Symbol	FindOrAddMachine		2686905						
ANR	2687023	Symbol	EXISTS		2686905						
ANR	2687024	Symbol	machine_IP		2686905						
ANR	2687025	Symbol	file_name		2686905						
ANR	2687026	Symbol	f		2686905						
ANR	2687027	Symbol	o -> file_root		2686905						
ANR	2687028	Symbol	FindOrAddFile		2686905						
ANR	2687029	Symbol	D_ALWAYS		2686905						
ANR	2687030	Symbol	FindOrAddOwner		2686905						
ANR	2687031	Symbol	m		2686905						
ANR	2687032	Symbol	o		2686905						
ANR	2687033	Symbol	DOES_NOT_EXIST		2686905						
ANR	2687034	Symbol	* f		2686905						
ANR	2687035	Symbol	f -> file_data		2686905						
ANR	2687036	Symbol	* o		2686905						
ANR	2687037	Symbol	IMDS_INDEX_ERROR		2686905						
ANR	2687038	Function	FileIndex :: DestroyFileTree	234:0:6001:6224							
ANR	2687039	FunctionDef	FileIndex :: DestroyFileTree (file_node * & file_root)		2687038	0					
ANR	2687040	CompoundStatement		235:0:6056:6224	2687038	0					
ANR	2687041	IfStatement	if ( file_root != NULL )		2687038	0					
ANR	2687042	Condition	file_root != NULL	236:6:6064:6080	2687038	0	True				
ANR	2687043	EqualityExpression	file_root != NULL		2687038	0		!=			
ANR	2687044	Identifier	file_root		2687038	0					
ANR	2687045	Identifier	NULL		2687038	1					
ANR	2687046	CompoundStatement		3:4:30:30	2687038	1					
ANR	2687047	ExpressionStatement	DestroyFileTree ( file_root -> left )	238:6:6095:6127	2687038	0	True				
ANR	2687048	CallExpression	DestroyFileTree ( file_root -> left )		2687038	0					
ANR	2687049	Callee	DestroyFileTree		2687038	0					
ANR	2687050	Identifier	DestroyFileTree		2687038	0					
ANR	2687051	ArgumentList	file_root -> left		2687038	1					
ANR	2687052	Argument	file_root -> left		2687038	0					
ANR	2687053	PtrMemberAccess	file_root -> left		2687038	0					
ANR	2687054	Identifier	file_root		2687038	0					
ANR	2687055	Identifier	left		2687038	1					
ANR	2687056	ExpressionStatement	DestroyFileTree ( file_root -> right )	239:6:6135:6168	2687038	1	True				
ANR	2687057	CallExpression	DestroyFileTree ( file_root -> right )		2687038	0					
ANR	2687058	Callee	DestroyFileTree		2687038	0					
ANR	2687059	Identifier	DestroyFileTree		2687038	0					
ANR	2687060	ArgumentList	file_root -> right		2687038	1					
ANR	2687061	Argument	file_root -> right		2687038	0					
ANR	2687062	PtrMemberAccess	file_root -> right		2687038	0					
ANR	2687063	Identifier	file_root		2687038	0					
ANR	2687064	Identifier	right		2687038	1					
ANR	2687065	Statement	delete	240:6:6176:6181	2687038	2	True				
ANR	2687066	ExpressionStatement	file_root	240:13:6183:6192	2687038	3	True				
ANR	2687067	Identifier	file_root		2687038	0					
ANR	2687068	ExpressionStatement	file_root = NULL	241:6:6200:6216	2687038	4	True				
ANR	2687069	AssignmentExpression	file_root = NULL		2687038	0		=			
ANR	2687070	Identifier	file_root		2687038	0					
ANR	2687071	Identifier	NULL		2687038	1					
ANR	2687072	ReturnType	void		2687038	1					
ANR	2687073	Identifier	FileIndex :: DestroyFileTree		2687038	2					
ANR	2687074	ParameterList	file_node * & file_root		2687038	3					
ANR	2687075	Parameter	file_node * & file_root	234:32:6033:6053	2687038	0	True				
ANR	2687076	ParameterType	file_node * &		2687038	0					
ANR	2687077	Identifier	file_root		2687038	1					
ANR	2687078	CFGEntryNode	ENTRY		2687038		True				
ANR	2687079	CFGExitNode	EXIT		2687038		True				
ANR	2687080	Symbol	* file_root		2687038						
ANR	2687081	Symbol	NULL		2687038						
ANR	2687082	Symbol	file_root -> right		2687038						
ANR	2687083	Symbol	file_root -> left		2687038						
ANR	2687084	Symbol	file_root		2687038						
ANR	2687085	Function	FileIndex :: DestroyOwnerTree	246:0:6228:6507							
ANR	2687086	FunctionDef	FileIndex :: DestroyOwnerTree (owner_node * & owner_root)		2687085	0					
ANR	2687087	CompoundStatement		247:0:6286:6507	2687085	0					
ANR	2687088	IfStatement	if ( owner_root != NULL )		2687085	0					
ANR	2687089	Condition	owner_root != NULL	248:6:6294:6311	2687085	0	True				
ANR	2687090	EqualityExpression	owner_root != NULL		2687085	0		!=			
ANR	2687091	Identifier	owner_root		2687085	0					
ANR	2687092	Identifier	NULL		2687085	1					
ANR	2687093	CompoundStatement		3:4:31:31	2687085	1					
ANR	2687094	ExpressionStatement	DestroyOwnerTree ( owner_root -> left )	250:6:6326:6360	2687085	0	True				
ANR	2687095	CallExpression	DestroyOwnerTree ( owner_root -> left )		2687085	0					
ANR	2687096	Callee	DestroyOwnerTree		2687085	0					
ANR	2687097	Identifier	DestroyOwnerTree		2687085	0					
ANR	2687098	ArgumentList	owner_root -> left		2687085	1					
ANR	2687099	Argument	owner_root -> left		2687085	0					
ANR	2687100	PtrMemberAccess	owner_root -> left		2687085	0					
ANR	2687101	Identifier	owner_root		2687085	0					
ANR	2687102	Identifier	left		2687085	1					
ANR	2687103	ExpressionStatement	DestroyOwnerTree ( owner_root -> right )	251:6:6368:6403	2687085	1	True				
ANR	2687104	CallExpression	DestroyOwnerTree ( owner_root -> right )		2687085	0					
ANR	2687105	Callee	DestroyOwnerTree		2687085	0					
ANR	2687106	Identifier	DestroyOwnerTree		2687085	0					
ANR	2687107	ArgumentList	owner_root -> right		2687085	1					
ANR	2687108	Argument	owner_root -> right		2687085	0					
ANR	2687109	PtrMemberAccess	owner_root -> right		2687085	0					
ANR	2687110	Identifier	owner_root		2687085	0					
ANR	2687111	Identifier	right		2687085	1					
ANR	2687112	ExpressionStatement	DestroyFileTree ( owner_root -> file_root )	252:6:6411:6449	2687085	2	True				
ANR	2687113	CallExpression	DestroyFileTree ( owner_root -> file_root )		2687085	0					
ANR	2687114	Callee	DestroyFileTree		2687085	0					
ANR	2687115	Identifier	DestroyFileTree		2687085	0					
ANR	2687116	ArgumentList	owner_root -> file_root		2687085	1					
ANR	2687117	Argument	owner_root -> file_root		2687085	0					
ANR	2687118	PtrMemberAccess	owner_root -> file_root		2687085	0					
ANR	2687119	Identifier	owner_root		2687085	0					
ANR	2687120	Identifier	file_root		2687085	1					
ANR	2687121	Statement	delete	253:6:6457:6462	2687085	3	True				
ANR	2687122	ExpressionStatement	owner_root	253:13:6464:6474	2687085	4	True				
ANR	2687123	Identifier	owner_root		2687085	0					
ANR	2687124	ExpressionStatement	owner_root = NULL	254:6:6482:6499	2687085	5	True				
ANR	2687125	AssignmentExpression	owner_root = NULL		2687085	0		=			
ANR	2687126	Identifier	owner_root		2687085	0					
ANR	2687127	Identifier	NULL		2687085	1					
ANR	2687128	ReturnType	void		2687085	1					
ANR	2687129	Identifier	FileIndex :: DestroyOwnerTree		2687085	2					
ANR	2687130	ParameterList	owner_node * & owner_root		2687085	3					
ANR	2687131	Parameter	owner_node * & owner_root	246:33:6261:6283	2687085	0	True				
ANR	2687132	ParameterType	owner_node * &		2687085	0					
ANR	2687133	Identifier	owner_root		2687085	1					
ANR	2687134	CFGEntryNode	ENTRY		2687085		True				
ANR	2687135	CFGExitNode	EXIT		2687085		True				
ANR	2687136	Symbol	NULL		2687085						
ANR	2687137	Symbol	owner_root -> file_root		2687085						
ANR	2687138	Symbol	* owner_root		2687085						
ANR	2687139	Symbol	owner_root		2687085						
ANR	2687140	Symbol	owner_root -> right		2687085						
ANR	2687141	Symbol	owner_root -> left		2687085						
ANR	2687142	Function	FileIndex :: DestroyMachineTree	259:0:6511:6814							
ANR	2687143	FunctionDef	FileIndex :: DestroyMachineTree (machine_node * & machine_root)		2687142	0					
ANR	2687144	CompoundStatement		260:0:6575:6814	2687142	0					
ANR	2687145	IfStatement	if ( machine_root != NULL )		2687142	0					
ANR	2687146	Condition	machine_root != NULL	261:6:6583:6602	2687142	0	True				
ANR	2687147	EqualityExpression	machine_root != NULL		2687142	0		!=			
ANR	2687148	Identifier	machine_root		2687142	0					
ANR	2687149	Identifier	NULL		2687142	1					
ANR	2687150	CompoundStatement		3:4:33:33	2687142	1					
ANR	2687151	ExpressionStatement	DestroyMachineTree ( machine_root -> left )	263:6:6617:6655	2687142	0	True				
ANR	2687152	CallExpression	DestroyMachineTree ( machine_root -> left )		2687142	0					
ANR	2687153	Callee	DestroyMachineTree		2687142	0					
ANR	2687154	Identifier	DestroyMachineTree		2687142	0					
ANR	2687155	ArgumentList	machine_root -> left		2687142	1					
ANR	2687156	Argument	machine_root -> left		2687142	0					
ANR	2687157	PtrMemberAccess	machine_root -> left		2687142	0					
ANR	2687158	Identifier	machine_root		2687142	0					
ANR	2687159	Identifier	left		2687142	1					
ANR	2687160	ExpressionStatement	DestroyMachineTree ( machine_root -> right )	264:6:6663:6702	2687142	1	True				
ANR	2687161	CallExpression	DestroyMachineTree ( machine_root -> right )		2687142	0					
ANR	2687162	Callee	DestroyMachineTree		2687142	0					
ANR	2687163	Identifier	DestroyMachineTree		2687142	0					
ANR	2687164	ArgumentList	machine_root -> right		2687142	1					
ANR	2687165	Argument	machine_root -> right		2687142	0					
ANR	2687166	PtrMemberAccess	machine_root -> right		2687142	0					
ANR	2687167	Identifier	machine_root		2687142	0					
ANR	2687168	Identifier	right		2687142	1					
ANR	2687169	ExpressionStatement	DestroyOwnerTree ( machine_root -> owner_root )	265:6:6710:6752	2687142	2	True				
ANR	2687170	CallExpression	DestroyOwnerTree ( machine_root -> owner_root )		2687142	0					
ANR	2687171	Callee	DestroyOwnerTree		2687142	0					
ANR	2687172	Identifier	DestroyOwnerTree		2687142	0					
ANR	2687173	ArgumentList	machine_root -> owner_root		2687142	1					
ANR	2687174	Argument	machine_root -> owner_root		2687142	0					
ANR	2687175	PtrMemberAccess	machine_root -> owner_root		2687142	0					
ANR	2687176	Identifier	machine_root		2687142	0					
ANR	2687177	Identifier	owner_root		2687142	1					
ANR	2687178	Statement	delete	266:6:6760:6765	2687142	3	True				
ANR	2687179	ExpressionStatement	machine_root	266:13:6767:6779	2687142	4	True				
ANR	2687180	Identifier	machine_root		2687142	0					
ANR	2687181	ExpressionStatement	machine_root = NULL	267:6:6787:6806	2687142	5	True				
ANR	2687182	AssignmentExpression	machine_root = NULL		2687142	0		=			
ANR	2687183	Identifier	machine_root		2687142	0					
ANR	2687184	Identifier	NULL		2687142	1					
ANR	2687185	ReturnType	void		2687142	1					
ANR	2687186	Identifier	FileIndex :: DestroyMachineTree		2687142	2					
ANR	2687187	ParameterList	machine_node * & machine_root		2687142	3					
ANR	2687188	Parameter	machine_node * & machine_root	259:35:6546:6572	2687142	0	True				
ANR	2687189	ParameterType	machine_node * &		2687142	0					
ANR	2687190	Identifier	machine_root		2687142	1					
ANR	2687191	CFGEntryNode	ENTRY		2687142		True				
ANR	2687192	CFGExitNode	EXIT		2687142		True				
ANR	2687193	Symbol	NULL		2687142						
ANR	2687194	Symbol	* machine_root		2687142						
ANR	2687195	Symbol	machine_root -> right		2687142						
ANR	2687196	Symbol	machine_root		2687142						
ANR	2687197	Symbol	machine_root -> owner_root		2687142						
ANR	2687198	Symbol	machine_root -> left		2687142						
ANR	2687199	Function	FileIndex :: DestroyIndex	272:0:6818:6959							
ANR	2687200	FunctionDef	FileIndex :: DestroyIndex ()		2687199	0					
ANR	2687201	CompoundStatement		273:0:6849:6959	2687199	0					
ANR	2687202	IdentifierDeclStatement	int bucket ;	274:2:6853:6863	2687199	0	True				
ANR	2687203	IdentifierDecl	bucket		2687199	0					
ANR	2687204	IdentifierDeclType	int		2687199	0					
ANR	2687205	Identifier	bucket		2687199	1					
ANR	2687206	ForStatement	for ( bucket = 0 ; bucket < MAX_HASH_SIZE ; bucket ++ )		2687199	1					
ANR	2687207	ForInit	bucket = 0 ;	276:7:6873:6881	2687199	0	True				
ANR	2687208	AssignmentExpression	bucket = 0		2687199	0		=			
ANR	2687209	Identifier	bucket		2687199	0					
ANR	2687210	PrimaryExpression	0		2687199	1					
ANR	2687211	Condition	bucket < MAX_HASH_SIZE	276:17:6883:6902	2687199	1	True				
ANR	2687212	RelationalExpression	bucket < MAX_HASH_SIZE		2687199	0		<			
ANR	2687213	Identifier	bucket		2687199	0					
ANR	2687214	Identifier	MAX_HASH_SIZE		2687199	1					
ANR	2687215	PostIncDecOperationExpression	bucket ++	276:39:6905:6912	2687199	2	True				
ANR	2687216	Identifier	bucket		2687199	0					
ANR	2687217	IncDec	++		2687199	1					
ANR	2687218	ExpressionStatement	DestroyMachineTree ( hash_table [ bucket ] )	277:4:6919:6957	2687199	3	True				
ANR	2687219	CallExpression	DestroyMachineTree ( hash_table [ bucket ] )		2687199	0					
ANR	2687220	Callee	DestroyMachineTree		2687199	0					
ANR	2687221	Identifier	DestroyMachineTree		2687199	0					
ANR	2687222	ArgumentList	hash_table [ bucket ]		2687199	1					
ANR	2687223	Argument	hash_table [ bucket ]		2687199	0					
ANR	2687224	ArrayIndexing	hash_table [ bucket ]		2687199	0					
ANR	2687225	Identifier	hash_table		2687199	0					
ANR	2687226	Identifier	bucket		2687199	1					
ANR	2687227	ReturnType	void		2687199	1					
ANR	2687228	Identifier	FileIndex :: DestroyIndex		2687199	2					
ANR	2687229	ParameterList			2687199	3					
ANR	2687230	CFGEntryNode	ENTRY		2687199		True				
ANR	2687231	CFGExitNode	EXIT		2687199		True				
ANR	2687232	Symbol	bucket		2687199						
ANR	2687233	Symbol	hash_table		2687199						
ANR	2687234	Symbol	* bucket		2687199						
ANR	2687235	Symbol	MAX_HASH_SIZE		2687199						
ANR	2687236	Symbol	* hash_table		2687199						
ANR	2687237	Function	FileIndex :: AddNewFile	281:0:6963:7362							
ANR	2687238	FunctionDef	"FileIndex :: AddNewFile (struct in_addr machine_IP , const char * owner_name , const char * file_name , file_info_node * file_info_ptr)"		2687237	0					
ANR	2687239	CompoundStatement		285:0:7118:7362	2687237	0					
ANR	2687240	IdentifierDeclStatement	machine_node * m ;	286:2:7122:7137	2687237	0	True				
ANR	2687241	IdentifierDecl	* m		2687237	0					
ANR	2687242	IdentifierDeclType	machine_node *		2687237	0					
ANR	2687243	Identifier	m		2687237	1					
ANR	2687244	IdentifierDeclStatement	owner_node * o ;	287:2:7141:7156	2687237	1	True				
ANR	2687245	IdentifierDecl	* o		2687237	0					
ANR	2687246	IdentifierDeclType	owner_node *		2687237	0					
ANR	2687247	Identifier	o		2687237	1					
ANR	2687248	IdentifierDeclStatement	file_node * f ;	288:2:7160:7175	2687237	2	True				
ANR	2687249	IdentifierDecl	* f		2687237	0					
ANR	2687250	IdentifierDeclType	file_node *		2687237	0					
ANR	2687251	Identifier	f		2687237	1					
ANR	2687252	ExpressionStatement	"m = FindOrAddMachine ( machine_IP , ADD )"	290:2:7180:7217	2687237	3	True				
ANR	2687253	AssignmentExpression	"m = FindOrAddMachine ( machine_IP , ADD )"		2687237	0		=			
ANR	2687254	Identifier	m		2687237	0					
ANR	2687255	CallExpression	"FindOrAddMachine ( machine_IP , ADD )"		2687237	1					
ANR	2687256	Callee	FindOrAddMachine		2687237	0					
ANR	2687257	Identifier	FindOrAddMachine		2687237	0					
ANR	2687258	ArgumentList	machine_IP		2687237	1					
ANR	2687259	Argument	machine_IP		2687237	0					
ANR	2687260	Identifier	machine_IP		2687237	0					
ANR	2687261	Argument	ADD		2687237	1					
ANR	2687262	Identifier	ADD		2687237	0					
ANR	2687263	ExpressionStatement	"o = FindOrAddOwner ( m , owner_name , ADD )"	291:2:7221:7259	2687237	4	True				
ANR	2687264	AssignmentExpression	"o = FindOrAddOwner ( m , owner_name , ADD )"		2687237	0		=			
ANR	2687265	Identifier	o		2687237	0					
ANR	2687266	CallExpression	"FindOrAddOwner ( m , owner_name , ADD )"		2687237	1					
ANR	2687267	Callee	FindOrAddOwner		2687237	0					
ANR	2687268	Identifier	FindOrAddOwner		2687237	0					
ANR	2687269	ArgumentList	m		2687237	1					
ANR	2687270	Argument	m		2687237	0					
ANR	2687271	Identifier	m		2687237	0					
ANR	2687272	Argument	owner_name		2687237	1					
ANR	2687273	Identifier	owner_name		2687237	0					
ANR	2687274	Argument	ADD		2687237	2					
ANR	2687275	Identifier	ADD		2687237	0					
ANR	2687276	ExpressionStatement	"f = FindOrAddFile ( o -> file_root , file_name , ADD )"	292:2:7263:7310	2687237	5	True				
ANR	2687277	AssignmentExpression	"f = FindOrAddFile ( o -> file_root , file_name , ADD )"		2687237	0		=			
ANR	2687278	Identifier	f		2687237	0					
ANR	2687279	CallExpression	"FindOrAddFile ( o -> file_root , file_name , ADD )"		2687237	1					
ANR	2687280	Callee	FindOrAddFile		2687237	0					
ANR	2687281	Identifier	FindOrAddFile		2687237	0					
ANR	2687282	ArgumentList	o -> file_root		2687237	1					
ANR	2687283	Argument	o -> file_root		2687237	0					
ANR	2687284	PtrMemberAccess	o -> file_root		2687237	0					
ANR	2687285	Identifier	o		2687237	0					
ANR	2687286	Identifier	file_root		2687237	1					
ANR	2687287	Argument	file_name		2687237	1					
ANR	2687288	Identifier	file_name		2687237	0					
ANR	2687289	Argument	ADD		2687237	2					
ANR	2687290	Identifier	ADD		2687237	0					
ANR	2687291	ExpressionStatement	f -> file_data = file_info_ptr	293:2:7314:7342	2687237	6	True				
ANR	2687292	AssignmentExpression	f -> file_data = file_info_ptr		2687237	0		=			
ANR	2687293	PtrMemberAccess	f -> file_data		2687237	0					
ANR	2687294	Identifier	f		2687237	0					
ANR	2687295	Identifier	file_data		2687237	1					
ANR	2687296	Identifier	file_info_ptr		2687237	1					
ANR	2687297	ReturnStatement	return CREATED ;	294:2:7346:7360	2687237	7	True				
ANR	2687298	Identifier	CREATED		2687237	0					
ANR	2687299	ReturnType	int		2687237	1					
ANR	2687300	Identifier	FileIndex :: AddNewFile		2687237	2					
ANR	2687301	ParameterList	"struct in_addr machine_IP , const char * owner_name , const char * file_name , file_info_node * file_info_ptr"		2687237	3					
ANR	2687302	Parameter	struct in_addr machine_IP	281:26:6989:7014	2687237	0	True				
ANR	2687303	ParameterType	struct in_addr		2687237	0					
ANR	2687304	Identifier	machine_IP		2687237	1					
ANR	2687305	Parameter	const char * owner_name	282:5:7022:7047	2687237	1	True				
ANR	2687306	ParameterType	const char *		2687237	0					
ANR	2687307	Identifier	owner_name		2687237	1					
ANR	2687308	Parameter	const char * file_name	283:5:7055:7079	2687237	2	True				
ANR	2687309	ParameterType	const char *		2687237	0					
ANR	2687310	Identifier	file_name		2687237	1					
ANR	2687311	Parameter	file_info_node * file_info_ptr	284:5:7087:7115	2687237	3	True				
ANR	2687312	ParameterType	file_info_node *		2687237	0					
ANR	2687313	Identifier	file_info_ptr		2687237	1					
ANR	2687314	CFGEntryNode	ENTRY		2687237		True				
ANR	2687315	CFGExitNode	EXIT		2687237		True				
ANR	2687316	Symbol	ADD		2687237						
ANR	2687317	Symbol	owner_name		2687237						
ANR	2687318	Symbol	FindOrAddMachine		2687237						
ANR	2687319	Symbol	machine_IP		2687237						
ANR	2687320	Symbol	file_name		2687237						
ANR	2687321	Symbol	f		2687237						
ANR	2687322	Symbol	o -> file_root		2687237						
ANR	2687323	Symbol	FindOrAddFile		2687237						
ANR	2687324	Symbol	file_info_ptr		2687237						
ANR	2687325	Symbol	FindOrAddOwner		2687237						
ANR	2687326	Symbol	m		2687237						
ANR	2687327	Symbol	o		2687237						
ANR	2687328	Symbol	* f		2687237						
ANR	2687329	Symbol	CREATED		2687237						
ANR	2687330	Symbol	f -> file_data		2687237						
ANR	2687331	Symbol	* o		2687237						
ANR	2687332	Function	FileIndex :: GetFileNode	298:0:7366:7803							
ANR	2687333	FunctionDef	"FileIndex :: GetFileNode (struct in_addr machine_IP , const char * owner_name , const char * file_name)"		2687332	0					
ANR	2687334	CompoundStatement		301:0:7492:7803	2687332	0					
ANR	2687335	IdentifierDeclStatement	machine_node * m ;	302:2:7496:7511	2687332	0	True				
ANR	2687336	IdentifierDecl	* m		2687332	0					
ANR	2687337	IdentifierDeclType	machine_node *		2687332	0					
ANR	2687338	Identifier	m		2687332	1					
ANR	2687339	IdentifierDeclStatement	owner_node * o ;	303:2:7515:7530	2687332	1	True				
ANR	2687340	IdentifierDecl	* o		2687332	0					
ANR	2687341	IdentifierDeclType	owner_node *		2687332	0					
ANR	2687342	Identifier	o		2687332	1					
ANR	2687343	IdentifierDeclStatement	file_node * f ;	304:2:7534:7549	2687332	2	True				
ANR	2687344	IdentifierDecl	* f		2687332	0					
ANR	2687345	IdentifierDeclType	file_node *		2687332	0					
ANR	2687346	Identifier	f		2687332	1					
ANR	2687347	ExpressionStatement	"m = FindOrAddMachine ( machine_IP , 0 )"	306:2:7554:7589	2687332	3	True				
ANR	2687348	AssignmentExpression	"m = FindOrAddMachine ( machine_IP , 0 )"		2687332	0		=			
ANR	2687349	Identifier	m		2687332	0					
ANR	2687350	CallExpression	"FindOrAddMachine ( machine_IP , 0 )"		2687332	1					
ANR	2687351	Callee	FindOrAddMachine		2687332	0					
ANR	2687352	Identifier	FindOrAddMachine		2687332	0					
ANR	2687353	ArgumentList	machine_IP		2687332	1					
ANR	2687354	Argument	machine_IP		2687332	0					
ANR	2687355	Identifier	machine_IP		2687332	0					
ANR	2687356	Argument	0		2687332	1					
ANR	2687357	PrimaryExpression	0		2687332	0					
ANR	2687358	IfStatement	if ( m == NULL )		2687332	4					
ANR	2687359	Condition	m == NULL	307:6:7597:7605	2687332	0	True				
ANR	2687360	EqualityExpression	m == NULL		2687332	0		==			
ANR	2687361	Identifier	m		2687332	0					
ANR	2687362	Identifier	NULL		2687332	1					
ANR	2687363	ReturnStatement	return NULL ;	308:4:7612:7623	2687332	1	True				
ANR	2687364	Identifier	NULL		2687332	0					
ANR	2687365	ExpressionStatement	"o = FindOrAddOwner ( m , owner_name , 0 )"	309:2:7627:7663	2687332	5	True				
ANR	2687366	AssignmentExpression	"o = FindOrAddOwner ( m , owner_name , 0 )"		2687332	0		=			
ANR	2687367	Identifier	o		2687332	0					
ANR	2687368	CallExpression	"FindOrAddOwner ( m , owner_name , 0 )"		2687332	1					
ANR	2687369	Callee	FindOrAddOwner		2687332	0					
ANR	2687370	Identifier	FindOrAddOwner		2687332	0					
ANR	2687371	ArgumentList	m		2687332	1					
ANR	2687372	Argument	m		2687332	0					
ANR	2687373	Identifier	m		2687332	0					
ANR	2687374	Argument	owner_name		2687332	1					
ANR	2687375	Identifier	owner_name		2687332	0					
ANR	2687376	Argument	0		2687332	2					
ANR	2687377	PrimaryExpression	0		2687332	0					
ANR	2687378	IfStatement	if ( o == NULL )		2687332	6					
ANR	2687379	Condition	o == NULL	310:6:7671:7679	2687332	0	True				
ANR	2687380	EqualityExpression	o == NULL		2687332	0		==			
ANR	2687381	Identifier	o		2687332	0					
ANR	2687382	Identifier	NULL		2687332	1					
ANR	2687383	ReturnStatement	return NULL ;	311:4:7686:7697	2687332	1	True				
ANR	2687384	Identifier	NULL		2687332	0					
ANR	2687385	ExpressionStatement	"f = FindOrAddFile ( o -> file_root , file_name , 0 )"	312:2:7701:7746	2687332	7	True				
ANR	2687386	AssignmentExpression	"f = FindOrAddFile ( o -> file_root , file_name , 0 )"		2687332	0		=			
ANR	2687387	Identifier	f		2687332	0					
ANR	2687388	CallExpression	"FindOrAddFile ( o -> file_root , file_name , 0 )"		2687332	1					
ANR	2687389	Callee	FindOrAddFile		2687332	0					
ANR	2687390	Identifier	FindOrAddFile		2687332	0					
ANR	2687391	ArgumentList	o -> file_root		2687332	1					
ANR	2687392	Argument	o -> file_root		2687332	0					
ANR	2687393	PtrMemberAccess	o -> file_root		2687332	0					
ANR	2687394	Identifier	o		2687332	0					
ANR	2687395	Identifier	file_root		2687332	1					
ANR	2687396	Argument	file_name		2687332	1					
ANR	2687397	Identifier	file_name		2687332	0					
ANR	2687398	Argument	0		2687332	2					
ANR	2687399	PrimaryExpression	0		2687332	0					
ANR	2687400	IfStatement	if ( f == NULL )		2687332	8					
ANR	2687401	Condition	f == NULL	313:6:7754:7762	2687332	0	True				
ANR	2687402	EqualityExpression	f == NULL		2687332	0		==			
ANR	2687403	Identifier	f		2687332	0					
ANR	2687404	Identifier	NULL		2687332	1					
ANR	2687405	ReturnStatement	return NULL ;	314:4:7769:7780	2687332	1	True				
ANR	2687406	Identifier	NULL		2687332	0					
ANR	2687407	ElseStatement	else		2687332	0					
ANR	2687408	ReturnStatement	return f ;	316:4:7793:7801	2687332	0	True				
ANR	2687409	Identifier	f		2687332	0					
ANR	2687410	ReturnType	file_node *		2687332	1					
ANR	2687411	Identifier	FileIndex :: GetFileNode		2687332	2					
ANR	2687412	ParameterList	"struct in_addr machine_IP , const char * owner_name , const char * file_name"		2687332	3					
ANR	2687413	Parameter	struct in_addr machine_IP	298:34:7400:7424	2687332	0	True				
ANR	2687414	ParameterType	struct in_addr		2687332	0					
ANR	2687415	Identifier	machine_IP		2687332	1					
ANR	2687416	Parameter	const char * owner_name	299:6:7433:7457	2687332	1	True				
ANR	2687417	ParameterType	const char *		2687332	0					
ANR	2687418	Identifier	owner_name		2687332	1					
ANR	2687419	Parameter	const char * file_name	300:6:7466:7489	2687332	2	True				
ANR	2687420	ParameterType	const char *		2687332	0					
ANR	2687421	Identifier	file_name		2687332	1					
ANR	2687422	CFGEntryNode	ENTRY		2687332		True				
ANR	2687423	CFGExitNode	EXIT		2687332		True				
ANR	2687424	Symbol	owner_name		2687332						
ANR	2687425	Symbol	NULL		2687332						
ANR	2687426	Symbol	FindOrAddMachine		2687332						
ANR	2687427	Symbol	machine_IP		2687332						
ANR	2687428	Symbol	file_name		2687332						
ANR	2687429	Symbol	f		2687332						
ANR	2687430	Symbol	o -> file_root		2687332						
ANR	2687431	Symbol	FindOrAddFile		2687332						
ANR	2687432	Symbol	* o		2687332						
ANR	2687433	Symbol	FindOrAddOwner		2687332						
ANR	2687434	Symbol	m		2687332						
ANR	2687435	Symbol	o		2687332						
ANR	2687436	Function	FileIndex :: GetFileInfo	320:0:7807:8087							
ANR	2687437	FunctionDef	"FileIndex :: GetFileInfo (struct in_addr machine_IP , const char * owner_name , const char * file_name)"		2687436	0					
ANR	2687438	CompoundStatement		323:0:7948:8087	2687436	0					
ANR	2687439	IdentifierDeclStatement	file_node * f ;	324:2:7952:7964	2687436	0	True				
ANR	2687440	IdentifierDecl	* f		2687436	0					
ANR	2687441	IdentifierDeclType	file_node *		2687436	0					
ANR	2687442	Identifier	f		2687436	1					
ANR	2687443	ExpressionStatement	"f = GetFileNode ( machine_IP , owner_name , file_name )"	326:2:7969:8019	2687436	1	True				
ANR	2687444	AssignmentExpression	"f = GetFileNode ( machine_IP , owner_name , file_name )"		2687436	0		=			
ANR	2687445	Identifier	f		2687436	0					
ANR	2687446	CallExpression	"GetFileNode ( machine_IP , owner_name , file_name )"		2687436	1					
ANR	2687447	Callee	GetFileNode		2687436	0					
ANR	2687448	Identifier	GetFileNode		2687436	0					
ANR	2687449	ArgumentList	machine_IP		2687436	1					
ANR	2687450	Argument	machine_IP		2687436	0					
ANR	2687451	Identifier	machine_IP		2687436	0					
ANR	2687452	Argument	owner_name		2687436	1					
ANR	2687453	Identifier	owner_name		2687436	0					
ANR	2687454	Argument	file_name		2687436	2					
ANR	2687455	Identifier	file_name		2687436	0					
ANR	2687456	IfStatement	if ( f == NULL )		2687436	2					
ANR	2687457	Condition	f == NULL	327:6:8027:8035	2687436	0	True				
ANR	2687458	EqualityExpression	f == NULL		2687436	0		==			
ANR	2687459	Identifier	f		2687436	0					
ANR	2687460	Identifier	NULL		2687436	1					
ANR	2687461	ReturnStatement	return NULL ;	328:4:8042:8053	2687436	1	True				
ANR	2687462	Identifier	NULL		2687436	0					
ANR	2687463	ElseStatement	else		2687436	0					
ANR	2687464	ReturnStatement	return f -> file_data ;	330:4:8066:8085	2687436	0	True				
ANR	2687465	PtrMemberAccess	f -> file_data		2687436	0					
ANR	2687466	Identifier	f		2687436	0					
ANR	2687467	Identifier	file_data		2687436	1					
ANR	2687468	ReturnType	file_info_node *		2687436	1					
ANR	2687469	Identifier	FileIndex :: GetFileInfo		2687436	2					
ANR	2687470	ParameterList	"struct in_addr machine_IP , const char * owner_name , const char * file_name"		2687436	3					
ANR	2687471	Parameter	struct in_addr machine_IP	320:39:7846:7870	2687436	0	True				
ANR	2687472	ParameterType	struct in_addr		2687436	0					
ANR	2687473	Identifier	machine_IP		2687436	1					
ANR	2687474	Parameter	const char * owner_name	321:11:7884:7908	2687436	1	True				
ANR	2687475	ParameterType	const char *		2687436	0					
ANR	2687476	Identifier	owner_name		2687436	1					
ANR	2687477	Parameter	const char * file_name	322:11:7922:7945	2687436	2	True				
ANR	2687478	ParameterType	const char *		2687436	0					
ANR	2687479	Identifier	file_name		2687436	1					
ANR	2687480	CFGEntryNode	ENTRY		2687436		True				
ANR	2687481	CFGExitNode	EXIT		2687436		True				
ANR	2687482	Symbol	* f		2687436						
ANR	2687483	Symbol	owner_name		2687436						
ANR	2687484	Symbol	NULL		2687436						
ANR	2687485	Symbol	machine_IP		2687436						
ANR	2687486	Symbol	file_name		2687436						
ANR	2687487	Symbol	f		2687436						
ANR	2687488	Symbol	f -> file_data		2687436						
ANR	2687489	Symbol	GetFileNode		2687436						
ANR	2687490	Function	FileIndex :: RenameFile	334:0:8091:8611							
ANR	2687491	FunctionDef	"FileIndex :: RenameFile (struct in_addr machine_IP , const char * owner_name , const char * file_name , const char * new_file_name , file_info_node * file_info_ptr)"		2687490	0					
ANR	2687492	CompoundStatement		339:0:8294:8611	2687490	0					
ANR	2687493	IdentifierDeclStatement	int A_code ;	340:1:8297:8307	2687490	0	True				
ANR	2687494	IdentifierDecl	A_code		2687490	0					
ANR	2687495	IdentifierDeclType	int		2687490	0					
ANR	2687496	Identifier	A_code		2687490	1					
ANR	2687497	IfStatement	"if ( Exists ( machine_IP , owner_name , file_name ) != EXISTS )"		2687490	1					
ANR	2687498	Condition	"Exists ( machine_IP , owner_name , file_name ) != EXISTS"	342:5:8316:8366	2687490	0	True				
ANR	2687499	EqualityExpression	"Exists ( machine_IP , owner_name , file_name ) != EXISTS"		2687490	0		!=			
ANR	2687500	CallExpression	"Exists ( machine_IP , owner_name , file_name )"		2687490	0					
ANR	2687501	Callee	Exists		2687490	0					
ANR	2687502	Identifier	Exists		2687490	0					
ANR	2687503	ArgumentList	machine_IP		2687490	1					
ANR	2687504	Argument	machine_IP		2687490	0					
ANR	2687505	Identifier	machine_IP		2687490	0					
ANR	2687506	Argument	owner_name		2687490	1					
ANR	2687507	Identifier	owner_name		2687490	0					
ANR	2687508	Argument	file_name		2687490	2					
ANR	2687509	Identifier	file_name		2687490	0					
ANR	2687510	Identifier	EXISTS		2687490	1					
ANR	2687511	ReturnStatement	return DOES_NOT_EXIST ;	343:2:8371:8392	2687490	1	True				
ANR	2687512	Identifier	DOES_NOT_EXIST		2687490	0					
ANR	2687513	ExpressionStatement	"A_code = AddNewFile ( machine_IP , owner_name , new_file_name , file_info_ptr )"	344:1:8395:8468	2687490	2	True				
ANR	2687514	AssignmentExpression	"A_code = AddNewFile ( machine_IP , owner_name , new_file_name , file_info_ptr )"		2687490	0		=			
ANR	2687515	Identifier	A_code		2687490	0					
ANR	2687516	CallExpression	"AddNewFile ( machine_IP , owner_name , new_file_name , file_info_ptr )"		2687490	1					
ANR	2687517	Callee	AddNewFile		2687490	0					
ANR	2687518	Identifier	AddNewFile		2687490	0					
ANR	2687519	ArgumentList	machine_IP		2687490	1					
ANR	2687520	Argument	machine_IP		2687490	0					
ANR	2687521	Identifier	machine_IP		2687490	0					
ANR	2687522	Argument	owner_name		2687490	1					
ANR	2687523	Identifier	owner_name		2687490	0					
ANR	2687524	Argument	new_file_name		2687490	2					
ANR	2687525	Identifier	new_file_name		2687490	0					
ANR	2687526	Argument	file_info_ptr		2687490	3					
ANR	2687527	Identifier	file_info_ptr		2687490	0					
ANR	2687528	IfStatement	if ( A_code == EXISTS )		2687490	3					
ANR	2687529	Condition	A_code == EXISTS	345:5:8475:8490	2687490	0	True				
ANR	2687530	EqualityExpression	A_code == EXISTS		2687490	0		==			
ANR	2687531	Identifier	A_code		2687490	0					
ANR	2687532	Identifier	EXISTS		2687490	1					
ANR	2687533	ReturnStatement	return FILE_ALREADY_EXISTS ;	346:2:8495:8521	2687490	1	True				
ANR	2687534	Identifier	FILE_ALREADY_EXISTS		2687490	0					
ANR	2687535	ExpressionStatement	"( void ) DeleteFile ( machine_IP , owner_name , file_name )"	347:1:8524:8576	2687490	4	True				
ANR	2687536	CastExpression	"( void ) DeleteFile ( machine_IP , owner_name , file_name )"		2687490	0					
ANR	2687537	CastTarget	void		2687490	0					
ANR	2687538	CallExpression	"DeleteFile ( machine_IP , owner_name , file_name )"		2687490	1					
ANR	2687539	Callee	DeleteFile		2687490	0					
ANR	2687540	Identifier	DeleteFile		2687490	0					
ANR	2687541	ArgumentList	machine_IP		2687490	1					
ANR	2687542	Argument	machine_IP		2687490	0					
ANR	2687543	Identifier	machine_IP		2687490	0					
ANR	2687544	Argument	owner_name		2687490	1					
ANR	2687545	Identifier	owner_name		2687490	0					
ANR	2687546	Argument	file_name		2687490	2					
ANR	2687547	Identifier	file_name		2687490	0					
ANR	2687548	ReturnStatement	return 0 ;	349:1:8601:8609	2687490	5	True				
ANR	2687549	PrimaryExpression	0		2687490	0					
ANR	2687550	ReturnType	int		2687490	1					
ANR	2687551	Identifier	FileIndex :: RenameFile		2687490	2					
ANR	2687552	ParameterList	"struct in_addr machine_IP , const char * owner_name , const char * file_name , const char * new_file_name , file_info_node * file_info_ptr"		2687490	3					
ANR	2687553	Parameter	struct in_addr machine_IP	334:26:8117:8142	2687490	0	True				
ANR	2687554	ParameterType	struct in_addr		2687490	0					
ANR	2687555	Identifier	machine_IP		2687490	1					
ANR	2687556	Parameter	const char * owner_name	335:8:8153:8178	2687490	1	True				
ANR	2687557	ParameterType	const char *		2687490	0					
ANR	2687558	Identifier	owner_name		2687490	1					
ANR	2687559	Parameter	const char * file_name	336:8:8189:8213	2687490	2	True				
ANR	2687560	ParameterType	const char *		2687490	0					
ANR	2687561	Identifier	file_name		2687490	1					
ANR	2687562	Parameter	const char * new_file_name	337:8:8224:8252	2687490	3	True				
ANR	2687563	ParameterType	const char *		2687490	0					
ANR	2687564	Identifier	new_file_name		2687490	1					
ANR	2687565	Parameter	file_info_node * file_info_ptr	338:8:8263:8291	2687490	4	True				
ANR	2687566	ParameterType	file_info_node *		2687490	0					
ANR	2687567	Identifier	file_info_ptr		2687490	1					
ANR	2687568	CFGEntryNode	ENTRY		2687490		True				
ANR	2687569	CFGExitNode	EXIT		2687490		True				
ANR	2687570	Symbol	DOES_NOT_EXIST		2687490						
ANR	2687571	Symbol	owner_name		2687490						
ANR	2687572	Symbol	new_file_name		2687490						
ANR	2687573	Symbol	EXISTS		2687490						
ANR	2687574	Symbol	machine_IP		2687490						
ANR	2687575	Symbol	file_name		2687490						
ANR	2687576	Symbol	Exists		2687490						
ANR	2687577	Symbol	FILE_ALREADY_EXISTS		2687490						
ANR	2687578	Symbol	file_info_ptr		2687490						
ANR	2687579	Symbol	A_code		2687490						
ANR	2687580	Symbol	AddNewFile		2687490						
ANR	2687581	Function	FileIndex :: DeleteFile	353:0:8615:14257							
ANR	2687582	FunctionDef	"FileIndex :: DeleteFile (struct in_addr machine_IP , const char * owner_name , const char * file_name)"		2687581	0					
ANR	2687583	CompoundStatement		356:0:8737:14257	2687581	0					
ANR	2687584	IdentifierDeclStatement	machine_node * machine_trail = NULL ;	357:1:8740:8772	2687581	0	True				
ANR	2687585	IdentifierDecl	* machine_trail = NULL		2687581	0					
ANR	2687586	IdentifierDeclType	machine_node *		2687581	0					
ANR	2687587	Identifier	machine_trail		2687581	1					
ANR	2687588	AssignmentExpression	* machine_trail = NULL		2687581	2		=			
ANR	2687589	Identifier	NULL		2687581	0					
ANR	2687590	Identifier	NULL		2687581	1					
ANR	2687591	IdentifierDeclStatement	machine_node * machine_ptr ;	358:1:8775:8800	2687581	1	True				
ANR	2687592	IdentifierDecl	* machine_ptr		2687581	0					
ANR	2687593	IdentifierDeclType	machine_node *		2687581	0					
ANR	2687594	Identifier	machine_ptr		2687581	1					
ANR	2687595	IdentifierDeclStatement	int m_temp ;	359:1:8803:8823	2687581	2	True				
ANR	2687596	IdentifierDecl	m_temp		2687581	0					
ANR	2687597	IdentifierDeclType	int		2687581	0					
ANR	2687598	Identifier	m_temp		2687581	1					
ANR	2687599	IdentifierDeclStatement	machine_node * machine_rep_trail = NULL ;	360:1:8826:8862	2687581	3	True				
ANR	2687600	IdentifierDecl	* machine_rep_trail = NULL		2687581	0					
ANR	2687601	IdentifierDeclType	machine_node *		2687581	0					
ANR	2687602	Identifier	machine_rep_trail		2687581	1					
ANR	2687603	AssignmentExpression	* machine_rep_trail = NULL		2687581	2		=			
ANR	2687604	Identifier	NULL		2687581	0					
ANR	2687605	Identifier	NULL		2687581	1					
ANR	2687606	IdentifierDeclStatement	machine_node * machine_rep_ptr ;	361:1:8865:8894	2687581	4	True				
ANR	2687607	IdentifierDecl	* machine_rep_ptr		2687581	0					
ANR	2687608	IdentifierDeclType	machine_node *		2687581	0					
ANR	2687609	Identifier	machine_rep_ptr		2687581	1					
ANR	2687610	IdentifierDeclStatement	owner_node * owner_trail = NULL ;	362:1:8897:8927	2687581	5	True				
ANR	2687611	IdentifierDecl	* owner_trail = NULL		2687581	0					
ANR	2687612	IdentifierDeclType	owner_node *		2687581	0					
ANR	2687613	Identifier	owner_trail		2687581	1					
ANR	2687614	AssignmentExpression	* owner_trail = NULL		2687581	2		=			
ANR	2687615	Identifier	NULL		2687581	0					
ANR	2687616	Identifier	NULL		2687581	1					
ANR	2687617	IdentifierDeclStatement	owner_node * owner_ptr ;	363:1:8930:8953	2687581	6	True				
ANR	2687618	IdentifierDecl	* owner_ptr		2687581	0					
ANR	2687619	IdentifierDeclType	owner_node *		2687581	0					
ANR	2687620	Identifier	owner_ptr		2687581	1					
ANR	2687621	IdentifierDeclStatement	int o_temp ;	364:1:8956:8976	2687581	7	True				
ANR	2687622	IdentifierDecl	o_temp		2687581	0					
ANR	2687623	IdentifierDeclType	int		2687581	0					
ANR	2687624	Identifier	o_temp		2687581	1					
ANR	2687625	IdentifierDeclStatement	owner_node * owner_rep_trail = NULL ;	365:1:8979:9013	2687581	8	True				
ANR	2687626	IdentifierDecl	* owner_rep_trail = NULL		2687581	0					
ANR	2687627	IdentifierDeclType	owner_node *		2687581	0					
ANR	2687628	Identifier	owner_rep_trail		2687581	1					
ANR	2687629	AssignmentExpression	* owner_rep_trail = NULL		2687581	2		=			
ANR	2687630	Identifier	NULL		2687581	0					
ANR	2687631	Identifier	NULL		2687581	1					
ANR	2687632	IdentifierDeclStatement	owner_node * owner_rep_ptr ;	366:1:9016:9043	2687581	9	True				
ANR	2687633	IdentifierDecl	* owner_rep_ptr		2687581	0					
ANR	2687634	IdentifierDeclType	owner_node *		2687581	0					
ANR	2687635	Identifier	owner_rep_ptr		2687581	1					
ANR	2687636	IdentifierDeclStatement	file_node * file_trail = NULL ;	367:1:9046:9075	2687581	10	True				
ANR	2687637	IdentifierDecl	* file_trail = NULL		2687581	0					
ANR	2687638	IdentifierDeclType	file_node *		2687581	0					
ANR	2687639	Identifier	file_trail		2687581	1					
ANR	2687640	AssignmentExpression	* file_trail = NULL		2687581	2		=			
ANR	2687641	Identifier	NULL		2687581	0					
ANR	2687642	Identifier	NULL		2687581	1					
ANR	2687643	IdentifierDeclStatement	file_node * file_ptr ;	368:1:9078:9100	2687581	11	True				
ANR	2687644	IdentifierDecl	* file_ptr		2687581	0					
ANR	2687645	IdentifierDeclType	file_node *		2687581	0					
ANR	2687646	Identifier	file_ptr		2687581	1					
ANR	2687647	IdentifierDeclStatement	int f_temp ;	369:1:9103:9123	2687581	12	True				
ANR	2687648	IdentifierDecl	f_temp		2687581	0					
ANR	2687649	IdentifierDeclType	int		2687581	0					
ANR	2687650	Identifier	f_temp		2687581	1					
ANR	2687651	IdentifierDeclStatement	file_node * file_rep_trail = NULL ;	370:1:9126:9159	2687581	13	True				
ANR	2687652	IdentifierDecl	* file_rep_trail = NULL		2687581	0					
ANR	2687653	IdentifierDeclType	file_node *		2687581	0					
ANR	2687654	Identifier	file_rep_trail		2687581	1					
ANR	2687655	AssignmentExpression	* file_rep_trail = NULL		2687581	2		=			
ANR	2687656	Identifier	NULL		2687581	0					
ANR	2687657	Identifier	NULL		2687581	1					
ANR	2687658	IdentifierDeclStatement	file_node * file_rep_ptr ;	371:1:9162:9188	2687581	14	True				
ANR	2687659	IdentifierDecl	* file_rep_ptr		2687581	0					
ANR	2687660	IdentifierDeclType	file_node *		2687581	0					
ANR	2687661	Identifier	file_rep_ptr		2687581	1					
ANR	2687662	IdentifierDeclStatement	int hash_bucket ;	372:1:9191:9216	2687581	15	True				
ANR	2687663	IdentifierDecl	hash_bucket		2687581	0					
ANR	2687664	IdentifierDeclType	int		2687581	0					
ANR	2687665	Identifier	hash_bucket		2687581	1					
ANR	2687666	IdentifierDeclStatement	int retCode = 0 ;	374:1:9261:9284	2687581	16	True				
ANR	2687667	IdentifierDecl	retCode = 0		2687581	0					
ANR	2687668	IdentifierDeclType	int		2687581	0					
ANR	2687669	Identifier	retCode		2687581	1					
ANR	2687670	AssignmentExpression	retCode = 0		2687581	2		=			
ANR	2687671	Identifier	retCode		2687581	0					
ANR	2687672	PrimaryExpression	0		2687581	1					
ANR	2687673	IdentifierDeclStatement	char machine_name [ MAX_MACHINE_NAME_LENGTH ] ;	375:1:9287:9338	2687581	17	True				
ANR	2687674	IdentifierDecl	machine_name [ MAX_MACHINE_NAME_LENGTH ]		2687581	0					
ANR	2687675	IdentifierDeclType	char [ MAX_MACHINE_NAME_LENGTH ]		2687581	0					
ANR	2687676	Identifier	machine_name		2687581	1					
ANR	2687677	Identifier	MAX_MACHINE_NAME_LENGTH		2687581	2					
ANR	2687678	IdentifierDeclStatement	char pathname [ MAX_PATHNAME_LENGTH ] ;	376:1:9341:9384	2687581	18	True				
ANR	2687679	IdentifierDecl	pathname [ MAX_PATHNAME_LENGTH ]		2687581	0					
ANR	2687680	IdentifierDeclType	char [ MAX_PATHNAME_LENGTH ]		2687581	0					
ANR	2687681	Identifier	pathname		2687581	1					
ANR	2687682	Identifier	MAX_PATHNAME_LENGTH		2687581	2					
ANR	2687683	ExpressionStatement	hash_bucket = Hash ( machine_IP )	378:1:9389:9419	2687581	19	True				
ANR	2687684	AssignmentExpression	hash_bucket = Hash ( machine_IP )		2687581	0		=			
ANR	2687685	Identifier	hash_bucket		2687581	0					
ANR	2687686	CallExpression	Hash ( machine_IP )		2687581	1					
ANR	2687687	Callee	Hash		2687581	0					
ANR	2687688	Identifier	Hash		2687581	0					
ANR	2687689	ArgumentList	machine_IP		2687581	1					
ANR	2687690	Argument	machine_IP		2687581	0					
ANR	2687691	Identifier	machine_IP		2687581	0					
ANR	2687692	ExpressionStatement	machine_ptr = hash_table [ hash_bucket ]	379:1:9422:9459	2687581	20	True				
ANR	2687693	AssignmentExpression	machine_ptr = hash_table [ hash_bucket ]		2687581	0		=			
ANR	2687694	Identifier	machine_ptr		2687581	0					
ANR	2687695	ArrayIndexing	hash_table [ hash_bucket ]		2687581	1					
ANR	2687696	Identifier	hash_table		2687581	0					
ANR	2687697	Identifier	hash_bucket		2687581	1					
ANR	2687698	WhileStatement	while ( ( machine_ptr != NULL ) && ( machine_ptr -> machine_IP . s_addr != machine_IP . s_addr ) )		2687581	21					
ANR	2687699	Condition	( machine_ptr != NULL ) && ( machine_ptr -> machine_IP . s_addr != machine_IP . s_addr )	380:8:9469:9552	2687581	0	True				
ANR	2687700	AndExpression	( machine_ptr != NULL ) && ( machine_ptr -> machine_IP . s_addr != machine_IP . s_addr )		2687581	0		&&			
ANR	2687701	EqualityExpression	machine_ptr != NULL		2687581	0		!=			
ANR	2687702	Identifier	machine_ptr		2687581	0					
ANR	2687703	Identifier	NULL		2687581	1					
ANR	2687704	EqualityExpression	machine_ptr -> machine_IP . s_addr != machine_IP . s_addr		2687581	1		!=			
ANR	2687705	MemberAccess	machine_ptr -> machine_IP . s_addr		2687581	0					
ANR	2687706	PtrMemberAccess	machine_ptr -> machine_IP		2687581	0					
ANR	2687707	Identifier	machine_ptr		2687581	0					
ANR	2687708	Identifier	machine_IP		2687581	1					
ANR	2687709	Identifier	s_addr		2687581	1					
ANR	2687710	MemberAccess	machine_IP . s_addr		2687581	1					
ANR	2687711	Identifier	machine_IP		2687581	0					
ANR	2687712	Identifier	s_addr		2687581	1					
ANR	2687713	CompoundStatement		26:60:817:817	2687581	1					
ANR	2687714	ExpressionStatement	machine_trail = machine_ptr	382:2:9559:9586	2687581	0	True				
ANR	2687715	AssignmentExpression	machine_trail = machine_ptr		2687581	0		=			
ANR	2687716	Identifier	machine_trail		2687581	0					
ANR	2687717	Identifier	machine_ptr		2687581	1					
ANR	2687718	ExpressionStatement	m_temp = ( machine_IP . s_addr < machine_ptr -> machine_IP . s_addr )	383:2:9590:9651	2687581	1	True				
ANR	2687719	AssignmentExpression	m_temp = ( machine_IP . s_addr < machine_ptr -> machine_IP . s_addr )		2687581	0		=			
ANR	2687720	Identifier	m_temp		2687581	0					
ANR	2687721	RelationalExpression	machine_IP . s_addr < machine_ptr -> machine_IP . s_addr		2687581	1		<			
ANR	2687722	MemberAccess	machine_IP . s_addr		2687581	0					
ANR	2687723	Identifier	machine_IP		2687581	0					
ANR	2687724	Identifier	s_addr		2687581	1					
ANR	2687725	MemberAccess	machine_ptr -> machine_IP . s_addr		2687581	1					
ANR	2687726	PtrMemberAccess	machine_ptr -> machine_IP		2687581	0					
ANR	2687727	Identifier	machine_ptr		2687581	0					
ANR	2687728	Identifier	machine_IP		2687581	1					
ANR	2687729	Identifier	s_addr		2687581	1					
ANR	2687730	IfStatement	if ( m_temp )		2687581	2					
ANR	2687731	Condition	m_temp	384:6:9659:9664	2687581	0	True				
ANR	2687732	Identifier	m_temp		2687581	0					
ANR	2687733	ExpressionStatement	machine_ptr = machine_ptr -> left	385:3:9670:9701	2687581	1	True				
ANR	2687734	AssignmentExpression	machine_ptr = machine_ptr -> left		2687581	0		=			
ANR	2687735	Identifier	machine_ptr		2687581	0					
ANR	2687736	PtrMemberAccess	machine_ptr -> left		2687581	1					
ANR	2687737	Identifier	machine_ptr		2687581	0					
ANR	2687738	Identifier	left		2687581	1					
ANR	2687739	ElseStatement	else		2687581	0					
ANR	2687740	ExpressionStatement	machine_ptr = machine_ptr -> right	387:3:9713:9745	2687581	0	True				
ANR	2687741	AssignmentExpression	machine_ptr = machine_ptr -> right		2687581	0		=			
ANR	2687742	Identifier	machine_ptr		2687581	0					
ANR	2687743	PtrMemberAccess	machine_ptr -> right		2687581	1					
ANR	2687744	Identifier	machine_ptr		2687581	0					
ANR	2687745	Identifier	right		2687581	1					
ANR	2687746	IfStatement	if ( machine_ptr == NULL )		2687581	22					
ANR	2687747	Condition	machine_ptr == NULL	389:5:9758:9776	2687581	0	True				
ANR	2687748	EqualityExpression	machine_ptr == NULL		2687581	0		==			
ANR	2687749	Identifier	machine_ptr		2687581	0					
ANR	2687750	Identifier	NULL		2687581	1					
ANR	2687751	CompoundStatement		34:26:1041:1041	2687581	1					
ANR	2687752	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: IMDS inconsistency; file exists but cannot be found\\n"" )"	390:2:9783:9864	2687581	0	True				
ANR	2687753	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: IMDS inconsistency; file exists but cannot be found\\n"" )"		2687581	0					
ANR	2687754	Callee	dprintf		2687581	0					
ANR	2687755	Identifier	dprintf		2687581	0					
ANR	2687756	ArgumentList	D_ALWAYS		2687581	1					
ANR	2687757	Argument	D_ALWAYS		2687581	0					
ANR	2687758	Identifier	D_ALWAYS		2687581	0					
ANR	2687759	Argument	"""ERROR: IMDS inconsistency; file exists but cannot be found\\n"""		2687581	1					
ANR	2687760	PrimaryExpression	"""ERROR: IMDS inconsistency; file exists but cannot be found\\n"""		2687581	0					
ANR	2687761	ExpressionStatement	exit ( IMDS_INDEX_ERROR )	391:2:9868:9890	2687581	1	True				
ANR	2687762	CallExpression	exit ( IMDS_INDEX_ERROR )		2687581	0					
ANR	2687763	Callee	exit		2687581	0					
ANR	2687764	Identifier	exit		2687581	0					
ANR	2687765	ArgumentList	IMDS_INDEX_ERROR		2687581	1					
ANR	2687766	Argument	IMDS_INDEX_ERROR		2687581	0					
ANR	2687767	Identifier	IMDS_INDEX_ERROR		2687581	0					
ANR	2687768	ExpressionStatement	owner_ptr = machine_ptr -> owner_root	393:1:9899:9934	2687581	23	True				
ANR	2687769	AssignmentExpression	owner_ptr = machine_ptr -> owner_root		2687581	0		=			
ANR	2687770	Identifier	owner_ptr		2687581	0					
ANR	2687771	PtrMemberAccess	machine_ptr -> owner_root		2687581	1					
ANR	2687772	Identifier	machine_ptr		2687581	0					
ANR	2687773	Identifier	owner_root		2687581	1					
ANR	2687774	WhileStatement	"while ( ( owner_ptr != NULL ) && ( ( o_temp = strncmp ( owner_name , owner_ptr -> owner_name , MAX_NAME_LENGTH ) ) != 0 ) )"		2687581	24					
ANR	2687775	Condition	"( owner_ptr != NULL ) && ( ( o_temp = strncmp ( owner_name , owner_ptr -> owner_name , MAX_NAME_LENGTH ) ) != 0 )"	394:8:9944:10073	2687581	0	True				
ANR	2687776	AndExpression	"( owner_ptr != NULL ) && ( ( o_temp = strncmp ( owner_name , owner_ptr -> owner_name , MAX_NAME_LENGTH ) ) != 0 )"		2687581	0		&&			
ANR	2687777	EqualityExpression	owner_ptr != NULL		2687581	0		!=			
ANR	2687778	Identifier	owner_ptr		2687581	0					
ANR	2687779	Identifier	NULL		2687581	1					
ANR	2687780	EqualityExpression	"( o_temp = strncmp ( owner_name , owner_ptr -> owner_name , MAX_NAME_LENGTH ) ) != 0"		2687581	1		!=			
ANR	2687781	AssignmentExpression	"o_temp = strncmp ( owner_name , owner_ptr -> owner_name , MAX_NAME_LENGTH )"		2687581	0		=			
ANR	2687782	Identifier	o_temp		2687581	0					
ANR	2687783	CallExpression	"strncmp ( owner_name , owner_ptr -> owner_name , MAX_NAME_LENGTH )"		2687581	1					
ANR	2687784	Callee	strncmp		2687581	0					
ANR	2687785	Identifier	strncmp		2687581	0					
ANR	2687786	ArgumentList	owner_name		2687581	1					
ANR	2687787	Argument	owner_name		2687581	0					
ANR	2687788	Identifier	owner_name		2687581	0					
ANR	2687789	Argument	owner_ptr -> owner_name		2687581	1					
ANR	2687790	PtrMemberAccess	owner_ptr -> owner_name		2687581	0					
ANR	2687791	Identifier	owner_ptr		2687581	0					
ANR	2687792	Identifier	owner_name		2687581	1					
ANR	2687793	Argument	MAX_NAME_LENGTH		2687581	2					
ANR	2687794	Identifier	MAX_NAME_LENGTH		2687581	0					
ANR	2687795	PrimaryExpression	0		2687581	1					
ANR	2687796	CompoundStatement		41:40:1338:1338	2687581	1					
ANR	2687797	ExpressionStatement	owner_trail = owner_ptr	397:2:10080:10103	2687581	0	True				
ANR	2687798	AssignmentExpression	owner_trail = owner_ptr		2687581	0		=			
ANR	2687799	Identifier	owner_trail		2687581	0					
ANR	2687800	Identifier	owner_ptr		2687581	1					
ANR	2687801	IfStatement	if ( o_temp < 0 )		2687581	1					
ANR	2687802	Condition	o_temp < 0	398:6:10111:10120	2687581	0	True				
ANR	2687803	RelationalExpression	o_temp < 0		2687581	0		<			
ANR	2687804	Identifier	o_temp		2687581	0					
ANR	2687805	PrimaryExpression	0		2687581	1					
ANR	2687806	ExpressionStatement	owner_ptr = owner_ptr -> left	399:3:10126:10153	2687581	1	True				
ANR	2687807	AssignmentExpression	owner_ptr = owner_ptr -> left		2687581	0		=			
ANR	2687808	Identifier	owner_ptr		2687581	0					
ANR	2687809	PtrMemberAccess	owner_ptr -> left		2687581	1					
ANR	2687810	Identifier	owner_ptr		2687581	0					
ANR	2687811	Identifier	left		2687581	1					
ANR	2687812	ElseStatement	else		2687581	0					
ANR	2687813	ExpressionStatement	owner_ptr = owner_ptr -> right	401:3:10165:10193	2687581	0	True				
ANR	2687814	AssignmentExpression	owner_ptr = owner_ptr -> right		2687581	0		=			
ANR	2687815	Identifier	owner_ptr		2687581	0					
ANR	2687816	PtrMemberAccess	owner_ptr -> right		2687581	1					
ANR	2687817	Identifier	owner_ptr		2687581	0					
ANR	2687818	Identifier	right		2687581	1					
ANR	2687819	IfStatement	if ( owner_ptr == NULL )		2687581	25					
ANR	2687820	Condition	owner_ptr == NULL	403:5:10206:10222	2687581	0	True				
ANR	2687821	EqualityExpression	owner_ptr == NULL		2687581	0		==			
ANR	2687822	Identifier	owner_ptr		2687581	0					
ANR	2687823	Identifier	NULL		2687581	1					
ANR	2687824	CompoundStatement		48:24:1487:1487	2687581	1					
ANR	2687825	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: IMDS inconsistency; file exists but cannot be found\\n"" )"	404:2:10229:10310	2687581	0	True				
ANR	2687826	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: IMDS inconsistency; file exists but cannot be found\\n"" )"		2687581	0					
ANR	2687827	Callee	dprintf		2687581	0					
ANR	2687828	Identifier	dprintf		2687581	0					
ANR	2687829	ArgumentList	D_ALWAYS		2687581	1					
ANR	2687830	Argument	D_ALWAYS		2687581	0					
ANR	2687831	Identifier	D_ALWAYS		2687581	0					
ANR	2687832	Argument	"""ERROR: IMDS inconsistency; file exists but cannot be found\\n"""		2687581	1					
ANR	2687833	PrimaryExpression	"""ERROR: IMDS inconsistency; file exists but cannot be found\\n"""		2687581	0					
ANR	2687834	ExpressionStatement	exit ( IMDS_INDEX_ERROR )	405:2:10314:10336	2687581	1	True				
ANR	2687835	CallExpression	exit ( IMDS_INDEX_ERROR )		2687581	0					
ANR	2687836	Callee	exit		2687581	0					
ANR	2687837	Identifier	exit		2687581	0					
ANR	2687838	ArgumentList	IMDS_INDEX_ERROR		2687581	1					
ANR	2687839	Argument	IMDS_INDEX_ERROR		2687581	0					
ANR	2687840	Identifier	IMDS_INDEX_ERROR		2687581	0					
ANR	2687841	ExpressionStatement	file_ptr = owner_ptr -> file_root	407:1:10345:10376	2687581	26	True				
ANR	2687842	AssignmentExpression	file_ptr = owner_ptr -> file_root		2687581	0		=			
ANR	2687843	Identifier	file_ptr		2687581	0					
ANR	2687844	PtrMemberAccess	owner_ptr -> file_root		2687581	1					
ANR	2687845	Identifier	owner_ptr		2687581	0					
ANR	2687846	Identifier	file_root		2687581	1					
ANR	2687847	WhileStatement	"while ( ( file_ptr != NULL ) && ( ( f_temp = strncmp ( file_name , file_ptr -> file_name , MAX_CONDOR_FILENAME_LENGTH ) ) != 0 ) )"		2687581	27					
ANR	2687848	Condition	"( file_ptr != NULL ) && ( ( f_temp = strncmp ( file_name , file_ptr -> file_name , MAX_CONDOR_FILENAME_LENGTH ) ) != 0 )"	408:8:10386:10531	2687581	0	True				
ANR	2687849	AndExpression	"( file_ptr != NULL ) && ( ( f_temp = strncmp ( file_name , file_ptr -> file_name , MAX_CONDOR_FILENAME_LENGTH ) ) != 0 )"		2687581	0		&&			
ANR	2687850	EqualityExpression	file_ptr != NULL		2687581	0		!=			
ANR	2687851	Identifier	file_ptr		2687581	0					
ANR	2687852	Identifier	NULL		2687581	1					
ANR	2687853	EqualityExpression	"( f_temp = strncmp ( file_name , file_ptr -> file_name , MAX_CONDOR_FILENAME_LENGTH ) ) != 0"		2687581	1		!=			
ANR	2687854	AssignmentExpression	"f_temp = strncmp ( file_name , file_ptr -> file_name , MAX_CONDOR_FILENAME_LENGTH )"		2687581	0		=			
ANR	2687855	Identifier	f_temp		2687581	0					
ANR	2687856	CallExpression	"strncmp ( file_name , file_ptr -> file_name , MAX_CONDOR_FILENAME_LENGTH )"		2687581	1					
ANR	2687857	Callee	strncmp		2687581	0					
ANR	2687858	Identifier	strncmp		2687581	0					
ANR	2687859	ArgumentList	file_name		2687581	1					
ANR	2687860	Argument	file_name		2687581	0					
ANR	2687861	Identifier	file_name		2687581	0					
ANR	2687862	Argument	file_ptr -> file_name		2687581	1					
ANR	2687863	PtrMemberAccess	file_ptr -> file_name		2687581	0					
ANR	2687864	Identifier	file_ptr		2687581	0					
ANR	2687865	Identifier	file_name		2687581	1					
ANR	2687866	Argument	MAX_CONDOR_FILENAME_LENGTH		2687581	2					
ANR	2687867	Identifier	MAX_CONDOR_FILENAME_LENGTH		2687581	0					
ANR	2687868	PrimaryExpression	0		2687581	1					
ANR	2687869	CompoundStatement		56:17:1796:1796	2687581	1					
ANR	2687870	ExpressionStatement	file_trail = file_ptr	412:2:10538:10559	2687581	0	True				
ANR	2687871	AssignmentExpression	file_trail = file_ptr		2687581	0		=			
ANR	2687872	Identifier	file_trail		2687581	0					
ANR	2687873	Identifier	file_ptr		2687581	1					
ANR	2687874	IfStatement	if ( f_temp < 0 )		2687581	1					
ANR	2687875	Condition	f_temp < 0	413:6:10567:10576	2687581	0	True				
ANR	2687876	RelationalExpression	f_temp < 0		2687581	0		<			
ANR	2687877	Identifier	f_temp		2687581	0					
ANR	2687878	PrimaryExpression	0		2687581	1					
ANR	2687879	ExpressionStatement	file_ptr = file_ptr -> left	414:3:10582:10607	2687581	1	True				
ANR	2687880	AssignmentExpression	file_ptr = file_ptr -> left		2687581	0		=			
ANR	2687881	Identifier	file_ptr		2687581	0					
ANR	2687882	PtrMemberAccess	file_ptr -> left		2687581	1					
ANR	2687883	Identifier	file_ptr		2687581	0					
ANR	2687884	Identifier	left		2687581	1					
ANR	2687885	ElseStatement	else		2687581	0					
ANR	2687886	ExpressionStatement	file_ptr = file_ptr -> right	416:3:10619:10645	2687581	0	True				
ANR	2687887	AssignmentExpression	file_ptr = file_ptr -> right		2687581	0		=			
ANR	2687888	Identifier	file_ptr		2687581	0					
ANR	2687889	PtrMemberAccess	file_ptr -> right		2687581	1					
ANR	2687890	Identifier	file_ptr		2687581	0					
ANR	2687891	Identifier	right		2687581	1					
ANR	2687892	IfStatement	if ( file_ptr == NULL )		2687581	28					
ANR	2687893	Condition	file_ptr == NULL	418:5:10658:10673	2687581	0	True				
ANR	2687894	EqualityExpression	file_ptr == NULL		2687581	0		==			
ANR	2687895	Identifier	file_ptr		2687581	0					
ANR	2687896	Identifier	NULL		2687581	1					
ANR	2687897	CompoundStatement		63:23:1938:1938	2687581	1					
ANR	2687898	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: IMDS inconsistency; file exists but cannot be found\\n"" )"	419:2:10680:10761	2687581	0	True				
ANR	2687899	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: IMDS inconsistency; file exists but cannot be found\\n"" )"		2687581	0					
ANR	2687900	Callee	dprintf		2687581	0					
ANR	2687901	Identifier	dprintf		2687581	0					
ANR	2687902	ArgumentList	D_ALWAYS		2687581	1					
ANR	2687903	Argument	D_ALWAYS		2687581	0					
ANR	2687904	Identifier	D_ALWAYS		2687581	0					
ANR	2687905	Argument	"""ERROR: IMDS inconsistency; file exists but cannot be found\\n"""		2687581	1					
ANR	2687906	PrimaryExpression	"""ERROR: IMDS inconsistency; file exists but cannot be found\\n"""		2687581	0					
ANR	2687907	ExpressionStatement	exit ( IMDS_INDEX_ERROR )	420:2:10765:10787	2687581	1	True				
ANR	2687908	CallExpression	exit ( IMDS_INDEX_ERROR )		2687581	0					
ANR	2687909	Callee	exit		2687581	0					
ANR	2687910	Identifier	exit		2687581	0					
ANR	2687911	ArgumentList	IMDS_INDEX_ERROR		2687581	1					
ANR	2687912	Argument	IMDS_INDEX_ERROR		2687581	0					
ANR	2687913	Identifier	IMDS_INDEX_ERROR		2687581	0					
ANR	2687914	ExpressionStatement	"file_ptr -> file_data -> data . machine_IP . to_ip_string ( machine_name , sizeof ( machine_name ) )"	423:1:10797:10882	2687581	29	True				
ANR	2687915	CallExpression	"file_ptr -> file_data -> data . machine_IP . to_ip_string ( machine_name , sizeof ( machine_name ) )"		2687581	0					
ANR	2687916	Callee	file_ptr -> file_data -> data . machine_IP . to_ip_string		2687581	0					
ANR	2687917	MemberAccess	file_ptr -> file_data -> data . machine_IP . to_ip_string		2687581	0					
ANR	2687918	MemberAccess	file_ptr -> file_data -> data . machine_IP		2687581	0					
ANR	2687919	PtrMemberAccess	file_ptr -> file_data -> data		2687581	0					
ANR	2687920	PtrMemberAccess	file_ptr -> file_data		2687581	0					
ANR	2687921	Identifier	file_ptr		2687581	0					
ANR	2687922	Identifier	file_data		2687581	1					
ANR	2687923	Identifier	data		2687581	1					
ANR	2687924	Identifier	machine_IP		2687581	1					
ANR	2687925	Identifier	to_ip_string		2687581	1					
ANR	2687926	ArgumentList	machine_name		2687581	1					
ANR	2687927	Argument	machine_name		2687581	0					
ANR	2687928	Identifier	machine_name		2687581	0					
ANR	2687929	Argument	sizeof ( machine_name )		2687581	1					
ANR	2687930	SizeofExpression	sizeof ( machine_name )		2687581	0					
ANR	2687931	Sizeof	sizeof		2687581	0					
ANR	2687932	SizeofOperand	machine_name		2687581	1					
ANR	2687933	ExpressionStatement	"sprintf ( pathname , ""%s%s/%s/%s"" , LOCAL_DRIVE_PREFIX , machine_name , owner_name , file_name )"	425:1:10886:10978	2687581	30	True				
ANR	2687934	CallExpression	"sprintf ( pathname , ""%s%s/%s/%s"" , LOCAL_DRIVE_PREFIX , machine_name , owner_name , file_name )"		2687581	0					
ANR	2687935	Callee	sprintf		2687581	0					
ANR	2687936	Identifier	sprintf		2687581	0					
ANR	2687937	ArgumentList	pathname		2687581	1					
ANR	2687938	Argument	pathname		2687581	0					
ANR	2687939	Identifier	pathname		2687581	0					
ANR	2687940	Argument	"""%s%s/%s/%s"""		2687581	1					
ANR	2687941	PrimaryExpression	"""%s%s/%s/%s"""		2687581	0					
ANR	2687942	Argument	LOCAL_DRIVE_PREFIX		2687581	2					
ANR	2687943	Identifier	LOCAL_DRIVE_PREFIX		2687581	0					
ANR	2687944	Argument	machine_name		2687581	3					
ANR	2687945	Identifier	machine_name		2687581	0					
ANR	2687946	Argument	owner_name		2687581	4					
ANR	2687947	Identifier	owner_name		2687581	0					
ANR	2687948	Argument	file_name		2687581	5					
ANR	2687949	Identifier	file_name		2687581	0					
ANR	2687950	ExpressionStatement	"dprintf ( D_ALWAYS , ""    Deleting file: %s\\n"" , pathname )"	427:1:10981:11035	2687581	31	True				
ANR	2687951	CallExpression	"dprintf ( D_ALWAYS , ""    Deleting file: %s\\n"" , pathname )"		2687581	0					
ANR	2687952	Callee	dprintf		2687581	0					
ANR	2687953	Identifier	dprintf		2687581	0					
ANR	2687954	ArgumentList	D_ALWAYS		2687581	1					
ANR	2687955	Argument	D_ALWAYS		2687581	0					
ANR	2687956	Identifier	D_ALWAYS		2687581	0					
ANR	2687957	Argument	"""    Deleting file: %s\\n"""		2687581	1					
ANR	2687958	PrimaryExpression	"""    Deleting file: %s\\n"""		2687581	0					
ANR	2687959	Argument	pathname		2687581	2					
ANR	2687960	Identifier	pathname		2687581	0					
ANR	2687961	IfStatement	if ( unlink ( pathname ) )		2687581	32					
ANR	2687962	Condition	unlink ( pathname )	428:5:11042:11057	2687581	0	True				
ANR	2687963	CallExpression	unlink ( pathname )		2687581	0					
ANR	2687964	Callee	unlink		2687581	0					
ANR	2687965	Identifier	unlink		2687581	0					
ANR	2687966	ArgumentList	pathname		2687581	1					
ANR	2687967	Argument	pathname		2687581	0					
ANR	2687968	Identifier	pathname		2687581	0					
ANR	2687969	CompoundStatement		73:23:2322:2322	2687581	1					
ANR	2687970	ExpressionStatement	retCode = CANNOT_DELETE_FILE	429:2:11064:11092	2687581	0	True				
ANR	2687971	AssignmentExpression	retCode = CANNOT_DELETE_FILE		2687581	0		=			
ANR	2687972	Identifier	retCode		2687581	0					
ANR	2687973	Identifier	CANNOT_DELETE_FILE		2687581	1					
ANR	2687974	ExpressionStatement	file_rep_ptr = file_ptr -> left	432:1:11099:11128	2687581	33	True				
ANR	2687975	AssignmentExpression	file_rep_ptr = file_ptr -> left		2687581	0		=			
ANR	2687976	Identifier	file_rep_ptr		2687581	0					
ANR	2687977	PtrMemberAccess	file_ptr -> left		2687581	1					
ANR	2687978	Identifier	file_ptr		2687581	0					
ANR	2687979	Identifier	left		2687581	1					
ANR	2687980	IfStatement	if ( file_rep_ptr == NULL )		2687581	34					
ANR	2687981	Condition	file_rep_ptr == NULL	433:5:11135:11154	2687581	0	True				
ANR	2687982	EqualityExpression	file_rep_ptr == NULL		2687581	0		==			
ANR	2687983	Identifier	file_rep_ptr		2687581	0					
ANR	2687984	Identifier	NULL		2687581	1					
ANR	2687985	CompoundStatement		78:27:2419:2419	2687581	1					
ANR	2687986	IfStatement	if ( file_trail == NULL )		2687581	0					
ANR	2687987	Condition	file_trail == NULL	434:6:11165:11182	2687581	0	True				
ANR	2687988	EqualityExpression	file_trail == NULL		2687581	0		==			
ANR	2687989	Identifier	file_trail		2687581	0					
ANR	2687990	Identifier	NULL		2687581	1					
ANR	2687991	ExpressionStatement	owner_ptr -> file_root = file_ptr -> right	435:3:11188:11226	2687581	1	True				
ANR	2687992	AssignmentExpression	owner_ptr -> file_root = file_ptr -> right		2687581	0		=			
ANR	2687993	PtrMemberAccess	owner_ptr -> file_root		2687581	0					
ANR	2687994	Identifier	owner_ptr		2687581	0					
ANR	2687995	Identifier	file_root		2687581	1					
ANR	2687996	PtrMemberAccess	file_ptr -> right		2687581	1					
ANR	2687997	Identifier	file_ptr		2687581	0					
ANR	2687998	Identifier	right		2687581	1					
ANR	2687999	ElseStatement	else		2687581	0					
ANR	2688000	IfStatement	if ( file_trail -> left == file_ptr )		2687581	0					
ANR	2688001	Condition	file_trail -> left == file_ptr	436:11:11239:11266	2687581	0	True				
ANR	2688002	EqualityExpression	file_trail -> left == file_ptr		2687581	0		==			
ANR	2688003	PtrMemberAccess	file_trail -> left		2687581	0					
ANR	2688004	Identifier	file_trail		2687581	0					
ANR	2688005	Identifier	left		2687581	1					
ANR	2688006	Identifier	file_ptr		2687581	1					
ANR	2688007	ExpressionStatement	file_trail -> left = file_ptr -> right	437:3:11272:11306	2687581	1	True				
ANR	2688008	AssignmentExpression	file_trail -> left = file_ptr -> right		2687581	0		=			
ANR	2688009	PtrMemberAccess	file_trail -> left		2687581	0					
ANR	2688010	Identifier	file_trail		2687581	0					
ANR	2688011	Identifier	left		2687581	1					
ANR	2688012	PtrMemberAccess	file_ptr -> right		2687581	1					
ANR	2688013	Identifier	file_ptr		2687581	0					
ANR	2688014	Identifier	right		2687581	1					
ANR	2688015	ElseStatement	else		2687581	0					
ANR	2688016	ExpressionStatement	file_trail -> right = file_ptr -> right	439:3:11318:11353	2687581	0	True				
ANR	2688017	AssignmentExpression	file_trail -> right = file_ptr -> right		2687581	0		=			
ANR	2688018	PtrMemberAccess	file_trail -> right		2687581	0					
ANR	2688019	Identifier	file_trail		2687581	0					
ANR	2688020	Identifier	right		2687581	1					
ANR	2688021	PtrMemberAccess	file_ptr -> right		2687581	1					
ANR	2688022	Identifier	file_ptr		2687581	0					
ANR	2688023	Identifier	right		2687581	1					
ANR	2688024	ElseStatement	else		2687581	0					
ANR	2688025	CompoundStatement		85:11:2628:2628	2687581	0					
ANR	2688026	WhileStatement	while ( file_rep_ptr -> right != NULL )		2687581	0					
ANR	2688027	Condition	file_rep_ptr -> right != NULL	441:9:11377:11403	2687581	0	True				
ANR	2688028	EqualityExpression	file_rep_ptr -> right != NULL		2687581	0		!=			
ANR	2688029	PtrMemberAccess	file_rep_ptr -> right		2687581	0					
ANR	2688030	Identifier	file_rep_ptr		2687581	0					
ANR	2688031	Identifier	right		2687581	1					
ANR	2688032	Identifier	NULL		2687581	1					
ANR	2688033	CompoundStatement		86:38:2668:2668	2687581	1					
ANR	2688034	ExpressionStatement	file_rep_trail = file_rep_ptr	442:3:11411:11440	2687581	0	True				
ANR	2688035	AssignmentExpression	file_rep_trail = file_rep_ptr		2687581	0		=			
ANR	2688036	Identifier	file_rep_trail		2687581	0					
ANR	2688037	Identifier	file_rep_ptr		2687581	1					
ANR	2688038	ExpressionStatement	file_rep_ptr = file_rep_ptr -> right	443:3:11445:11479	2687581	1	True				
ANR	2688039	AssignmentExpression	file_rep_ptr = file_rep_ptr -> right		2687581	0		=			
ANR	2688040	Identifier	file_rep_ptr		2687581	0					
ANR	2688041	PtrMemberAccess	file_rep_ptr -> right		2687581	1					
ANR	2688042	Identifier	file_rep_ptr		2687581	0					
ANR	2688043	Identifier	right		2687581	1					
ANR	2688044	IfStatement	if ( file_rep_trail == NULL )		2687581	1					
ANR	2688045	Condition	file_rep_trail == NULL	445:6:11491:11512	2687581	0	True				
ANR	2688046	EqualityExpression	file_rep_trail == NULL		2687581	0		==			
ANR	2688047	Identifier	file_rep_trail		2687581	0					
ANR	2688048	Identifier	NULL		2687581	1					
ANR	2688049	ExpressionStatement	file_rep_ptr -> right = file_ptr -> right	446:3:11518:11555	2687581	1	True				
ANR	2688050	AssignmentExpression	file_rep_ptr -> right = file_ptr -> right		2687581	0		=			
ANR	2688051	PtrMemberAccess	file_rep_ptr -> right		2687581	0					
ANR	2688052	Identifier	file_rep_ptr		2687581	0					
ANR	2688053	Identifier	right		2687581	1					
ANR	2688054	PtrMemberAccess	file_ptr -> right		2687581	1					
ANR	2688055	Identifier	file_ptr		2687581	0					
ANR	2688056	Identifier	right		2687581	1					
ANR	2688057	ElseStatement	else		2687581	0					
ANR	2688058	CompoundStatement		92:7:2826:2826	2687581	0					
ANR	2688059	ExpressionStatement	file_rep_trail -> right = file_rep_ptr -> left	448:3:11569:11611	2687581	0	True				
ANR	2688060	AssignmentExpression	file_rep_trail -> right = file_rep_ptr -> left		2687581	0		=			
ANR	2688061	PtrMemberAccess	file_rep_trail -> right		2687581	0					
ANR	2688062	Identifier	file_rep_trail		2687581	0					
ANR	2688063	Identifier	right		2687581	1					
ANR	2688064	PtrMemberAccess	file_rep_ptr -> left		2687581	1					
ANR	2688065	Identifier	file_rep_ptr		2687581	0					
ANR	2688066	Identifier	left		2687581	1					
ANR	2688067	ExpressionStatement	file_rep_ptr -> left = file_ptr -> left	449:3:11616:11651	2687581	1	True				
ANR	2688068	AssignmentExpression	file_rep_ptr -> left = file_ptr -> left		2687581	0		=			
ANR	2688069	PtrMemberAccess	file_rep_ptr -> left		2687581	0					
ANR	2688070	Identifier	file_rep_ptr		2687581	0					
ANR	2688071	Identifier	left		2687581	1					
ANR	2688072	PtrMemberAccess	file_ptr -> left		2687581	1					
ANR	2688073	Identifier	file_ptr		2687581	0					
ANR	2688074	Identifier	left		2687581	1					
ANR	2688075	ExpressionStatement	file_rep_ptr -> right = file_ptr -> right	450:3:11656:11693	2687581	2	True				
ANR	2688076	AssignmentExpression	file_rep_ptr -> right = file_ptr -> right		2687581	0		=			
ANR	2688077	PtrMemberAccess	file_rep_ptr -> right		2687581	0					
ANR	2688078	Identifier	file_rep_ptr		2687581	0					
ANR	2688079	Identifier	right		2687581	1					
ANR	2688080	PtrMemberAccess	file_ptr -> right		2687581	1					
ANR	2688081	Identifier	file_ptr		2687581	0					
ANR	2688082	Identifier	right		2687581	1					
ANR	2688083	IfStatement	if ( file_trail == NULL )		2687581	2					
ANR	2688084	Condition	file_trail == NULL	452:6:11705:11722	2687581	0	True				
ANR	2688085	EqualityExpression	file_trail == NULL		2687581	0		==			
ANR	2688086	Identifier	file_trail		2687581	0					
ANR	2688087	Identifier	NULL		2687581	1					
ANR	2688088	ExpressionStatement	owner_ptr -> file_root = file_rep_ptr	453:3:11728:11763	2687581	1	True				
ANR	2688089	AssignmentExpression	owner_ptr -> file_root = file_rep_ptr		2687581	0		=			
ANR	2688090	PtrMemberAccess	owner_ptr -> file_root		2687581	0					
ANR	2688091	Identifier	owner_ptr		2687581	0					
ANR	2688092	Identifier	file_root		2687581	1					
ANR	2688093	Identifier	file_rep_ptr		2687581	1					
ANR	2688094	ElseStatement	else		2687581	0					
ANR	2688095	IfStatement	if ( file_trail -> left == file_ptr )		2687581	0					
ANR	2688096	Condition	file_trail -> left == file_ptr	454:11:11776:11803	2687581	0	True				
ANR	2688097	EqualityExpression	file_trail -> left == file_ptr		2687581	0		==			
ANR	2688098	PtrMemberAccess	file_trail -> left		2687581	0					
ANR	2688099	Identifier	file_trail		2687581	0					
ANR	2688100	Identifier	left		2687581	1					
ANR	2688101	Identifier	file_ptr		2687581	1					
ANR	2688102	ExpressionStatement	file_trail -> left = file_rep_ptr	455:3:11809:11840	2687581	1	True				
ANR	2688103	AssignmentExpression	file_trail -> left = file_rep_ptr		2687581	0		=			
ANR	2688104	PtrMemberAccess	file_trail -> left		2687581	0					
ANR	2688105	Identifier	file_trail		2687581	0					
ANR	2688106	Identifier	left		2687581	1					
ANR	2688107	Identifier	file_rep_ptr		2687581	1					
ANR	2688108	ElseStatement	else		2687581	0					
ANR	2688109	ExpressionStatement	file_trail -> right = file_rep_ptr	457:3:11852:11884	2687581	0	True				
ANR	2688110	AssignmentExpression	file_trail -> right = file_rep_ptr		2687581	0		=			
ANR	2688111	PtrMemberAccess	file_trail -> right		2687581	0					
ANR	2688112	Identifier	file_trail		2687581	0					
ANR	2688113	Identifier	right		2687581	1					
ANR	2688114	Identifier	file_rep_ptr		2687581	1					
ANR	2688115	Statement	delete	459:1:11893:11898	2687581	35	True				
ANR	2688116	ExpressionStatement	file_ptr	459:8:11900:11908	2687581	36	True				
ANR	2688117	Identifier	file_ptr		2687581	0					
ANR	2688118	IfStatement	if ( owner_ptr -> file_root == NULL )		2687581	37					
ANR	2688119	Condition	owner_ptr -> file_root == NULL	460:5:11915:11942	2687581	0	True				
ANR	2688120	EqualityExpression	owner_ptr -> file_root == NULL		2687581	0		==			
ANR	2688121	PtrMemberAccess	owner_ptr -> file_root		2687581	0					
ANR	2688122	Identifier	owner_ptr		2687581	0					
ANR	2688123	Identifier	file_root		2687581	1					
ANR	2688124	Identifier	NULL		2687581	1					
ANR	2688125	CompoundStatement		105:35:3207:3207	2687581	1					
ANR	2688126	ExpressionStatement	owner_rep_ptr = owner_ptr -> left	461:2:11949:11980	2687581	0	True				
ANR	2688127	AssignmentExpression	owner_rep_ptr = owner_ptr -> left		2687581	0		=			
ANR	2688128	Identifier	owner_rep_ptr		2687581	0					
ANR	2688129	PtrMemberAccess	owner_ptr -> left		2687581	1					
ANR	2688130	Identifier	owner_ptr		2687581	0					
ANR	2688131	Identifier	left		2687581	1					
ANR	2688132	IfStatement	if ( owner_rep_ptr == NULL )		2687581	1					
ANR	2688133	Condition	owner_rep_ptr == NULL	462:6:11988:12008	2687581	0	True				
ANR	2688134	EqualityExpression	owner_rep_ptr == NULL		2687581	0		==			
ANR	2688135	Identifier	owner_rep_ptr		2687581	0					
ANR	2688136	Identifier	NULL		2687581	1					
ANR	2688137	CompoundStatement		107:29:3273:3273	2687581	1					
ANR	2688138	IfStatement	if ( owner_trail == NULL )		2687581	0					
ANR	2688139	Condition	owner_trail == NULL	463:7:12020:12038	2687581	0	True				
ANR	2688140	EqualityExpression	owner_trail == NULL		2687581	0		==			
ANR	2688141	Identifier	owner_trail		2687581	0					
ANR	2688142	Identifier	NULL		2687581	1					
ANR	2688143	ExpressionStatement	machine_ptr -> owner_root = owner_ptr -> right	464:4:12045:12087	2687581	1	True				
ANR	2688144	AssignmentExpression	machine_ptr -> owner_root = owner_ptr -> right		2687581	0		=			
ANR	2688145	PtrMemberAccess	machine_ptr -> owner_root		2687581	0					
ANR	2688146	Identifier	machine_ptr		2687581	0					
ANR	2688147	Identifier	owner_root		2687581	1					
ANR	2688148	PtrMemberAccess	owner_ptr -> right		2687581	1					
ANR	2688149	Identifier	owner_ptr		2687581	0					
ANR	2688150	Identifier	right		2687581	1					
ANR	2688151	ElseStatement	else		2687581	0					
ANR	2688152	IfStatement	if ( owner_trail -> left == owner_ptr )		2687581	0					
ANR	2688153	Condition	owner_trail -> left == owner_ptr	465:12:12101:12130	2687581	0	True				
ANR	2688154	EqualityExpression	owner_trail -> left == owner_ptr		2687581	0		==			
ANR	2688155	PtrMemberAccess	owner_trail -> left		2687581	0					
ANR	2688156	Identifier	owner_trail		2687581	0					
ANR	2688157	Identifier	left		2687581	1					
ANR	2688158	Identifier	owner_ptr		2687581	1					
ANR	2688159	ExpressionStatement	owner_trail -> left = owner_ptr -> right	466:4:12137:12173	2687581	1	True				
ANR	2688160	AssignmentExpression	owner_trail -> left = owner_ptr -> right		2687581	0		=			
ANR	2688161	PtrMemberAccess	owner_trail -> left		2687581	0					
ANR	2688162	Identifier	owner_trail		2687581	0					
ANR	2688163	Identifier	left		2687581	1					
ANR	2688164	PtrMemberAccess	owner_ptr -> right		2687581	1					
ANR	2688165	Identifier	owner_ptr		2687581	0					
ANR	2688166	Identifier	right		2687581	1					
ANR	2688167	ElseStatement	else		2687581	0					
ANR	2688168	ExpressionStatement	owner_trail -> right = owner_ptr -> right	468:4:12187:12224	2687581	0	True				
ANR	2688169	AssignmentExpression	owner_trail -> right = owner_ptr -> right		2687581	0		=			
ANR	2688170	PtrMemberAccess	owner_trail -> right		2687581	0					
ANR	2688171	Identifier	owner_trail		2687581	0					
ANR	2688172	Identifier	right		2687581	1					
ANR	2688173	PtrMemberAccess	owner_ptr -> right		2687581	1					
ANR	2688174	Identifier	owner_ptr		2687581	0					
ANR	2688175	Identifier	right		2687581	1					
ANR	2688176	ElseStatement	else		2687581	0					
ANR	2688177	CompoundStatement		115:7:3499:3499	2687581	0					
ANR	2688178	WhileStatement	while ( owner_rep_ptr -> right != NULL )		2687581	0					
ANR	2688179	Condition	owner_rep_ptr -> right != NULL	471:10:12249:12276	2687581	0	True				
ANR	2688180	EqualityExpression	owner_rep_ptr -> right != NULL		2687581	0		!=			
ANR	2688181	PtrMemberAccess	owner_rep_ptr -> right		2687581	0					
ANR	2688182	Identifier	owner_rep_ptr		2687581	0					
ANR	2688183	Identifier	right		2687581	1					
ANR	2688184	Identifier	NULL		2687581	1					
ANR	2688185	CompoundStatement		116:40:3541:3541	2687581	1					
ANR	2688186	ExpressionStatement	owner_rep_trail = owner_rep_ptr	472:4:12285:12316	2687581	0	True				
ANR	2688187	AssignmentExpression	owner_rep_trail = owner_rep_ptr		2687581	0		=			
ANR	2688188	Identifier	owner_rep_trail		2687581	0					
ANR	2688189	Identifier	owner_rep_ptr		2687581	1					
ANR	2688190	ExpressionStatement	owner_rep_ptr = owner_rep_ptr -> right	473:4:12322:12358	2687581	1	True				
ANR	2688191	AssignmentExpression	owner_rep_ptr = owner_rep_ptr -> right		2687581	0		=			
ANR	2688192	Identifier	owner_rep_ptr		2687581	0					
ANR	2688193	PtrMemberAccess	owner_rep_ptr -> right		2687581	1					
ANR	2688194	Identifier	owner_rep_ptr		2687581	0					
ANR	2688195	Identifier	right		2687581	1					
ANR	2688196	IfStatement	if ( owner_rep_trail == NULL )		2687581	1					
ANR	2688197	Condition	owner_rep_trail == NULL	475:7:12372:12394	2687581	0	True				
ANR	2688198	EqualityExpression	owner_rep_trail == NULL		2687581	0		==			
ANR	2688199	Identifier	owner_rep_trail		2687581	0					
ANR	2688200	Identifier	NULL		2687581	1					
ANR	2688201	ExpressionStatement	owner_rep_ptr -> right = owner_ptr -> right	476:4:12401:12440	2687581	1	True				
ANR	2688202	AssignmentExpression	owner_rep_ptr -> right = owner_ptr -> right		2687581	0		=			
ANR	2688203	PtrMemberAccess	owner_rep_ptr -> right		2687581	0					
ANR	2688204	Identifier	owner_rep_ptr		2687581	0					
ANR	2688205	Identifier	right		2687581	1					
ANR	2688206	PtrMemberAccess	owner_ptr -> right		2687581	1					
ANR	2688207	Identifier	owner_ptr		2687581	0					
ANR	2688208	Identifier	right		2687581	1					
ANR	2688209	ElseStatement	else		2687581	0					
ANR	2688210	CompoundStatement		122:8:3712:3712	2687581	0					
ANR	2688211	ExpressionStatement	owner_rep_trail -> right = owner_rep_ptr -> left	478:4:12456:12500	2687581	0	True				
ANR	2688212	AssignmentExpression	owner_rep_trail -> right = owner_rep_ptr -> left		2687581	0		=			
ANR	2688213	PtrMemberAccess	owner_rep_trail -> right		2687581	0					
ANR	2688214	Identifier	owner_rep_trail		2687581	0					
ANR	2688215	Identifier	right		2687581	1					
ANR	2688216	PtrMemberAccess	owner_rep_ptr -> left		2687581	1					
ANR	2688217	Identifier	owner_rep_ptr		2687581	0					
ANR	2688218	Identifier	left		2687581	1					
ANR	2688219	ExpressionStatement	owner_rep_ptr -> left = owner_ptr -> left	479:4:12506:12543	2687581	1	True				
ANR	2688220	AssignmentExpression	owner_rep_ptr -> left = owner_ptr -> left		2687581	0		=			
ANR	2688221	PtrMemberAccess	owner_rep_ptr -> left		2687581	0					
ANR	2688222	Identifier	owner_rep_ptr		2687581	0					
ANR	2688223	Identifier	left		2687581	1					
ANR	2688224	PtrMemberAccess	owner_ptr -> left		2687581	1					
ANR	2688225	Identifier	owner_ptr		2687581	0					
ANR	2688226	Identifier	left		2687581	1					
ANR	2688227	ExpressionStatement	owner_rep_ptr -> right = owner_ptr -> right	480:4:12549:12588	2687581	2	True				
ANR	2688228	AssignmentExpression	owner_rep_ptr -> right = owner_ptr -> right		2687581	0		=			
ANR	2688229	PtrMemberAccess	owner_rep_ptr -> right		2687581	0					
ANR	2688230	Identifier	owner_rep_ptr		2687581	0					
ANR	2688231	Identifier	right		2687581	1					
ANR	2688232	PtrMemberAccess	owner_ptr -> right		2687581	1					
ANR	2688233	Identifier	owner_ptr		2687581	0					
ANR	2688234	Identifier	right		2687581	1					
ANR	2688235	IfStatement	if ( owner_trail == NULL )		2687581	2					
ANR	2688236	Condition	owner_trail == NULL	482:7:12602:12620	2687581	0	True				
ANR	2688237	EqualityExpression	owner_trail == NULL		2687581	0		==			
ANR	2688238	Identifier	owner_trail		2687581	0					
ANR	2688239	Identifier	NULL		2687581	1					
ANR	2688240	ExpressionStatement	machine_ptr -> owner_root = owner_rep_ptr	483:4:12627:12666	2687581	1	True				
ANR	2688241	AssignmentExpression	machine_ptr -> owner_root = owner_rep_ptr		2687581	0		=			
ANR	2688242	PtrMemberAccess	machine_ptr -> owner_root		2687581	0					
ANR	2688243	Identifier	machine_ptr		2687581	0					
ANR	2688244	Identifier	owner_root		2687581	1					
ANR	2688245	Identifier	owner_rep_ptr		2687581	1					
ANR	2688246	ElseStatement	else		2687581	0					
ANR	2688247	IfStatement	if ( owner_trail -> left == owner_ptr )		2687581	0					
ANR	2688248	Condition	owner_trail -> left == owner_ptr	484:12:12680:12709	2687581	0	True				
ANR	2688249	EqualityExpression	owner_trail -> left == owner_ptr		2687581	0		==			
ANR	2688250	PtrMemberAccess	owner_trail -> left		2687581	0					
ANR	2688251	Identifier	owner_trail		2687581	0					
ANR	2688252	Identifier	left		2687581	1					
ANR	2688253	Identifier	owner_ptr		2687581	1					
ANR	2688254	ExpressionStatement	owner_trail -> left = owner_rep_ptr	485:4:12716:12749	2687581	1	True				
ANR	2688255	AssignmentExpression	owner_trail -> left = owner_rep_ptr		2687581	0		=			
ANR	2688256	PtrMemberAccess	owner_trail -> left		2687581	0					
ANR	2688257	Identifier	owner_trail		2687581	0					
ANR	2688258	Identifier	left		2687581	1					
ANR	2688259	Identifier	owner_rep_ptr		2687581	1					
ANR	2688260	ElseStatement	else		2687581	0					
ANR	2688261	ExpressionStatement	owner_trail -> right = owner_rep_ptr	487:4:12763:12797	2687581	0	True				
ANR	2688262	AssignmentExpression	owner_trail -> right = owner_rep_ptr		2687581	0		=			
ANR	2688263	PtrMemberAccess	owner_trail -> right		2687581	0					
ANR	2688264	Identifier	owner_trail		2687581	0					
ANR	2688265	Identifier	right		2687581	1					
ANR	2688266	Identifier	owner_rep_ptr		2687581	1					
ANR	2688267	Statement	delete	489:2:12805:12810	2687581	2	True				
ANR	2688268	ExpressionStatement	owner_ptr	489:9:12812:12821	2687581	3	True				
ANR	2688269	Identifier	owner_ptr		2687581	0					
ANR	2688270	IfStatement	if ( machine_ptr -> owner_root == NULL )		2687581	4					
ANR	2688271	Condition	machine_ptr -> owner_root == NULL	490:6:12829:12859	2687581	0	True				
ANR	2688272	EqualityExpression	machine_ptr -> owner_root == NULL		2687581	0		==			
ANR	2688273	PtrMemberAccess	machine_ptr -> owner_root		2687581	0					
ANR	2688274	Identifier	machine_ptr		2687581	0					
ANR	2688275	Identifier	owner_root		2687581	1					
ANR	2688276	Identifier	NULL		2687581	1					
ANR	2688277	CompoundStatement		135:39:4124:4124	2687581	1					
ANR	2688278	ExpressionStatement	"sprintf ( pathname , ""%s%s/%s"" , LOCAL_DRIVE_PREFIX , machine_name , owner_name )"	491:3:12867:12947	2687581	0	True				
ANR	2688279	CallExpression	"sprintf ( pathname , ""%s%s/%s"" , LOCAL_DRIVE_PREFIX , machine_name , owner_name )"		2687581	0					
ANR	2688280	Callee	sprintf		2687581	0					
ANR	2688281	Identifier	sprintf		2687581	0					
ANR	2688282	ArgumentList	pathname		2687581	1					
ANR	2688283	Argument	pathname		2687581	0					
ANR	2688284	Identifier	pathname		2687581	0					
ANR	2688285	Argument	"""%s%s/%s"""		2687581	1					
ANR	2688286	PrimaryExpression	"""%s%s/%s"""		2687581	0					
ANR	2688287	Argument	LOCAL_DRIVE_PREFIX		2687581	2					
ANR	2688288	Identifier	LOCAL_DRIVE_PREFIX		2687581	0					
ANR	2688289	Argument	machine_name		2687581	3					
ANR	2688290	Identifier	machine_name		2687581	0					
ANR	2688291	Argument	owner_name		2687581	4					
ANR	2688292	Identifier	owner_name		2687581	0					
ANR	2688293	IfStatement	if ( rmdir ( pathname ) != 0 )		2687581	1					
ANR	2688294	Condition	rmdir ( pathname ) != 0	493:7:12956:12975	2687581	0	True				
ANR	2688295	EqualityExpression	rmdir ( pathname ) != 0		2687581	0		!=			
ANR	2688296	CallExpression	rmdir ( pathname )		2687581	0					
ANR	2688297	Callee	rmdir		2687581	0					
ANR	2688298	Identifier	rmdir		2687581	0					
ANR	2688299	ArgumentList	pathname		2687581	1					
ANR	2688300	Argument	pathname		2687581	0					
ANR	2688301	Identifier	pathname		2687581	0					
ANR	2688302	PrimaryExpression	0		2687581	1					
ANR	2688303	ExpressionStatement		494:44:13022:13022	2687581	1	True				
ANR	2688304	ExpressionStatement	machine_rep_ptr = machine_ptr -> left	495:3:13027:13062	2687581	2	True				
ANR	2688305	AssignmentExpression	machine_rep_ptr = machine_ptr -> left		2687581	0		=			
ANR	2688306	Identifier	machine_rep_ptr		2687581	0					
ANR	2688307	PtrMemberAccess	machine_ptr -> left		2687581	1					
ANR	2688308	Identifier	machine_ptr		2687581	0					
ANR	2688309	Identifier	left		2687581	1					
ANR	2688310	IfStatement	if ( machine_rep_ptr == NULL )		2687581	3					
ANR	2688311	Condition	machine_rep_ptr == NULL	496:7:13071:13093	2687581	0	True				
ANR	2688312	EqualityExpression	machine_rep_ptr == NULL		2687581	0		==			
ANR	2688313	Identifier	machine_rep_ptr		2687581	0					
ANR	2688314	Identifier	NULL		2687581	1					
ANR	2688315	CompoundStatement		141:32:4358:4358	2687581	1					
ANR	2688316	IfStatement	if ( machine_trail == NULL )		2687581	0					
ANR	2688317	Condition	machine_trail == NULL	497:8:13106:13126	2687581	0	True				
ANR	2688318	EqualityExpression	machine_trail == NULL		2687581	0		==			
ANR	2688319	Identifier	machine_trail		2687581	0					
ANR	2688320	Identifier	NULL		2687581	1					
ANR	2688321	ExpressionStatement	hash_table [ hash_bucket ] = machine_ptr -> right	498:5:13134:13178	2687581	1	True				
ANR	2688322	AssignmentExpression	hash_table [ hash_bucket ] = machine_ptr -> right		2687581	0		=			
ANR	2688323	ArrayIndexing	hash_table [ hash_bucket ]		2687581	0					
ANR	2688324	Identifier	hash_table		2687581	0					
ANR	2688325	Identifier	hash_bucket		2687581	1					
ANR	2688326	PtrMemberAccess	machine_ptr -> right		2687581	1					
ANR	2688327	Identifier	machine_ptr		2687581	0					
ANR	2688328	Identifier	right		2687581	1					
ANR	2688329	ElseStatement	else		2687581	0					
ANR	2688330	IfStatement	if ( machine_trail -> left == machine_ptr )		2687581	0					
ANR	2688331	Condition	machine_trail -> left == machine_ptr	499:13:13193:13226	2687581	0	True				
ANR	2688332	EqualityExpression	machine_trail -> left == machine_ptr		2687581	0		==			
ANR	2688333	PtrMemberAccess	machine_trail -> left		2687581	0					
ANR	2688334	Identifier	machine_trail		2687581	0					
ANR	2688335	Identifier	left		2687581	1					
ANR	2688336	Identifier	machine_ptr		2687581	1					
ANR	2688337	ExpressionStatement	machine_trail -> left = machine_ptr -> right	500:5:13234:13274	2687581	1	True				
ANR	2688338	AssignmentExpression	machine_trail -> left = machine_ptr -> right		2687581	0		=			
ANR	2688339	PtrMemberAccess	machine_trail -> left		2687581	0					
ANR	2688340	Identifier	machine_trail		2687581	0					
ANR	2688341	Identifier	left		2687581	1					
ANR	2688342	PtrMemberAccess	machine_ptr -> right		2687581	1					
ANR	2688343	Identifier	machine_ptr		2687581	0					
ANR	2688344	Identifier	right		2687581	1					
ANR	2688345	ElseStatement	else		2687581	0					
ANR	2688346	ExpressionStatement	machine_trail -> right = machine_ptr -> right	502:5:13290:13331	2687581	0	True				
ANR	2688347	AssignmentExpression	machine_trail -> right = machine_ptr -> right		2687581	0		=			
ANR	2688348	PtrMemberAccess	machine_trail -> right		2687581	0					
ANR	2688349	Identifier	machine_trail		2687581	0					
ANR	2688350	Identifier	right		2687581	1					
ANR	2688351	PtrMemberAccess	machine_ptr -> right		2687581	1					
ANR	2688352	Identifier	machine_ptr		2687581	0					
ANR	2688353	Identifier	right		2687581	1					
ANR	2688354	ElseStatement	else		2687581	0					
ANR	2688355	CompoundStatement		148:10:4605:4605	2687581	0					
ANR	2688356	WhileStatement	while ( machine_rep_ptr -> right != NULL )		2687581	0					
ANR	2688357	Condition	machine_rep_ptr -> right != NULL	504:11:13356:13385	2687581	0	True				
ANR	2688358	EqualityExpression	machine_rep_ptr -> right != NULL		2687581	0		!=			
ANR	2688359	PtrMemberAccess	machine_rep_ptr -> right		2687581	0					
ANR	2688360	Identifier	machine_rep_ptr		2687581	0					
ANR	2688361	Identifier	right		2687581	1					
ANR	2688362	Identifier	NULL		2687581	1					
ANR	2688363	CompoundStatement		149:43:4650:4650	2687581	1					
ANR	2688364	ExpressionStatement	machine_rep_trail = machine_rep_ptr	505:5:13395:13430	2687581	0	True				
ANR	2688365	AssignmentExpression	machine_rep_trail = machine_rep_ptr		2687581	0		=			
ANR	2688366	Identifier	machine_rep_trail		2687581	0					
ANR	2688367	Identifier	machine_rep_ptr		2687581	1					
ANR	2688368	ExpressionStatement	machine_rep_ptr = machine_rep_ptr -> right	506:5:13437:13477	2687581	1	True				
ANR	2688369	AssignmentExpression	machine_rep_ptr = machine_rep_ptr -> right		2687581	0		=			
ANR	2688370	Identifier	machine_rep_ptr		2687581	0					
ANR	2688371	PtrMemberAccess	machine_rep_ptr -> right		2687581	1					
ANR	2688372	Identifier	machine_rep_ptr		2687581	0					
ANR	2688373	Identifier	right		2687581	1					
ANR	2688374	IfStatement	if ( machine_rep_trail == NULL )		2687581	1					
ANR	2688375	Condition	machine_rep_trail == NULL	508:8:13493:13517	2687581	0	True				
ANR	2688376	EqualityExpression	machine_rep_trail == NULL		2687581	0		==			
ANR	2688377	Identifier	machine_rep_trail		2687581	0					
ANR	2688378	Identifier	NULL		2687581	1					
ANR	2688379	ExpressionStatement	machine_rep_ptr -> right = machine_ptr -> right	509:5:13525:13568	2687581	1	True				
ANR	2688380	AssignmentExpression	machine_rep_ptr -> right = machine_ptr -> right		2687581	0		=			
ANR	2688381	PtrMemberAccess	machine_rep_ptr -> right		2687581	0					
ANR	2688382	Identifier	machine_rep_ptr		2687581	0					
ANR	2688383	Identifier	right		2687581	1					
ANR	2688384	PtrMemberAccess	machine_ptr -> right		2687581	1					
ANR	2688385	Identifier	machine_ptr		2687581	0					
ANR	2688386	Identifier	right		2687581	1					
ANR	2688387	ElseStatement	else		2687581	0					
ANR	2688388	CompoundStatement		155:9:4841:4841	2687581	0					
ANR	2688389	ExpressionStatement	machine_rep_trail -> right = machine_rep_ptr -> left	511:5:13586:13634	2687581	0	True				
ANR	2688390	AssignmentExpression	machine_rep_trail -> right = machine_rep_ptr -> left		2687581	0		=			
ANR	2688391	PtrMemberAccess	machine_rep_trail -> right		2687581	0					
ANR	2688392	Identifier	machine_rep_trail		2687581	0					
ANR	2688393	Identifier	right		2687581	1					
ANR	2688394	PtrMemberAccess	machine_rep_ptr -> left		2687581	1					
ANR	2688395	Identifier	machine_rep_ptr		2687581	0					
ANR	2688396	Identifier	left		2687581	1					
ANR	2688397	ExpressionStatement	machine_rep_ptr -> left = machine_ptr -> left	512:5:13641:13682	2687581	1	True				
ANR	2688398	AssignmentExpression	machine_rep_ptr -> left = machine_ptr -> left		2687581	0		=			
ANR	2688399	PtrMemberAccess	machine_rep_ptr -> left		2687581	0					
ANR	2688400	Identifier	machine_rep_ptr		2687581	0					
ANR	2688401	Identifier	left		2687581	1					
ANR	2688402	PtrMemberAccess	machine_ptr -> left		2687581	1					
ANR	2688403	Identifier	machine_ptr		2687581	0					
ANR	2688404	Identifier	left		2687581	1					
ANR	2688405	ExpressionStatement	machine_rep_ptr -> right = machine_ptr -> right	513:5:13689:13732	2687581	2	True				
ANR	2688406	AssignmentExpression	machine_rep_ptr -> right = machine_ptr -> right		2687581	0		=			
ANR	2688407	PtrMemberAccess	machine_rep_ptr -> right		2687581	0					
ANR	2688408	Identifier	machine_rep_ptr		2687581	0					
ANR	2688409	Identifier	right		2687581	1					
ANR	2688410	PtrMemberAccess	machine_ptr -> right		2687581	1					
ANR	2688411	Identifier	machine_ptr		2687581	0					
ANR	2688412	Identifier	right		2687581	1					
ANR	2688413	IfStatement	if ( machine_trail == NULL )		2687581	2					
ANR	2688414	Condition	machine_trail == NULL	515:8:13748:13768	2687581	0	True				
ANR	2688415	EqualityExpression	machine_trail == NULL		2687581	0		==			
ANR	2688416	Identifier	machine_trail		2687581	0					
ANR	2688417	Identifier	NULL		2687581	1					
ANR	2688418	ExpressionStatement	hash_table [ hash_bucket ] = machine_rep_ptr	516:5:13776:13817	2687581	1	True				
ANR	2688419	AssignmentExpression	hash_table [ hash_bucket ] = machine_rep_ptr		2687581	0		=			
ANR	2688420	ArrayIndexing	hash_table [ hash_bucket ]		2687581	0					
ANR	2688421	Identifier	hash_table		2687581	0					
ANR	2688422	Identifier	hash_bucket		2687581	1					
ANR	2688423	Identifier	machine_rep_ptr		2687581	1					
ANR	2688424	ElseStatement	else		2687581	0					
ANR	2688425	IfStatement	if ( machine_trail -> left == machine_ptr )		2687581	0					
ANR	2688426	Condition	machine_trail -> left == machine_ptr	517:13:13832:13865	2687581	0	True				
ANR	2688427	EqualityExpression	machine_trail -> left == machine_ptr		2687581	0		==			
ANR	2688428	PtrMemberAccess	machine_trail -> left		2687581	0					
ANR	2688429	Identifier	machine_trail		2687581	0					
ANR	2688430	Identifier	left		2687581	1					
ANR	2688431	Identifier	machine_ptr		2687581	1					
ANR	2688432	ExpressionStatement	machine_trail -> left = machine_rep_ptr	518:5:13873:13910	2687581	1	True				
ANR	2688433	AssignmentExpression	machine_trail -> left = machine_rep_ptr		2687581	0		=			
ANR	2688434	PtrMemberAccess	machine_trail -> left		2687581	0					
ANR	2688435	Identifier	machine_trail		2687581	0					
ANR	2688436	Identifier	left		2687581	1					
ANR	2688437	Identifier	machine_rep_ptr		2687581	1					
ANR	2688438	ElseStatement	else		2687581	0					
ANR	2688439	ExpressionStatement	machine_trail -> right = machine_rep_ptr	520:5:13926:13964	2687581	0	True				
ANR	2688440	AssignmentExpression	machine_trail -> right = machine_rep_ptr		2687581	0		=			
ANR	2688441	PtrMemberAccess	machine_trail -> right		2687581	0					
ANR	2688442	Identifier	machine_trail		2687581	0					
ANR	2688443	Identifier	right		2687581	1					
ANR	2688444	Identifier	machine_rep_ptr		2687581	1					
ANR	2688445	Statement	delete	522:3:13974:13979	2687581	4	True				
ANR	2688446	ExpressionStatement	machine_ptr	522:10:13981:13992	2687581	5	True				
ANR	2688447	Identifier	machine_ptr		2687581	0					
ANR	2688448	IfStatement	if ( ( hash_table [ hash_bucket ] == NULL ) && ( retCode != CANNOT_DELETE_DIRECTORY ) )		2687581	6					
ANR	2688449	Condition	( hash_table [ hash_bucket ] == NULL ) && ( retCode != CANNOT_DELETE_DIRECTORY )	523:7:14001:14078	2687581	0	True				
ANR	2688450	AndExpression	( hash_table [ hash_bucket ] == NULL ) && ( retCode != CANNOT_DELETE_DIRECTORY )		2687581	0		&&			
ANR	2688451	EqualityExpression	hash_table [ hash_bucket ] == NULL		2687581	0		==			
ANR	2688452	ArrayIndexing	hash_table [ hash_bucket ]		2687581	0					
ANR	2688453	Identifier	hash_table		2687581	0					
ANR	2688454	Identifier	hash_bucket		2687581	1					
ANR	2688455	Identifier	NULL		2687581	1					
ANR	2688456	EqualityExpression	retCode != CANNOT_DELETE_DIRECTORY		2687581	1		!=			
ANR	2688457	Identifier	retCode		2687581	0					
ANR	2688458	Identifier	CANNOT_DELETE_DIRECTORY		2687581	1					
ANR	2688459	CompoundStatement		169:42:5343:5343	2687581	1					
ANR	2688460	ExpressionStatement	"sprintf ( pathname , ""%s%s"" , LOCAL_DRIVE_PREFIX , machine_name )"	525:4:14087:14146	2687581	0	True				
ANR	2688461	CallExpression	"sprintf ( pathname , ""%s%s"" , LOCAL_DRIVE_PREFIX , machine_name )"		2687581	0					
ANR	2688462	Callee	sprintf		2687581	0					
ANR	2688463	Identifier	sprintf		2687581	0					
ANR	2688464	ArgumentList	pathname		2687581	1					
ANR	2688465	Argument	pathname		2687581	0					
ANR	2688466	Identifier	pathname		2687581	0					
ANR	2688467	Argument	"""%s%s"""		2687581	1					
ANR	2688468	PrimaryExpression	"""%s%s"""		2687581	0					
ANR	2688469	Argument	LOCAL_DRIVE_PREFIX		2687581	2					
ANR	2688470	Identifier	LOCAL_DRIVE_PREFIX		2687581	0					
ANR	2688471	Argument	machine_name		2687581	3					
ANR	2688472	Identifier	machine_name		2687581	0					
ANR	2688473	IfStatement	if ( rmdir ( pathname ) != 0 )		2687581	1					
ANR	2688474	Condition	rmdir ( pathname ) != 0	526:8:14156:14175	2687581	0	True				
ANR	2688475	EqualityExpression	rmdir ( pathname ) != 0		2687581	0		!=			
ANR	2688476	CallExpression	rmdir ( pathname )		2687581	0					
ANR	2688477	Callee	rmdir		2687581	0					
ANR	2688478	Identifier	rmdir		2687581	0					
ANR	2688479	ArgumentList	pathname		2687581	1					
ANR	2688480	Argument	pathname		2687581	0					
ANR	2688481	Identifier	pathname		2687581	0					
ANR	2688482	PrimaryExpression	0		2687581	1					
ANR	2688483	ExpressionStatement		527:45:14223:14223	2687581	1	True				
ANR	2688484	ReturnStatement	return retCode ;	531:1:14241:14255	2687581	38	True				
ANR	2688485	Identifier	retCode		2687581	0					
ANR	2688486	ReturnType	int		2687581	1					
ANR	2688487	Identifier	FileIndex :: DeleteFile		2687581	2					
ANR	2688488	ParameterList	"struct in_addr machine_IP , const char * owner_name , const char * file_name"		2687581	3					
ANR	2688489	Parameter	struct in_addr machine_IP	353:26:8641:8665	2687581	0	True				
ANR	2688490	ParameterType	struct in_addr		2687581	0					
ANR	2688491	Identifier	machine_IP		2687581	1					
ANR	2688492	Parameter	const char * owner_name	354:8:8676:8700	2687581	1	True				
ANR	2688493	ParameterType	const char *		2687581	0					
ANR	2688494	Identifier	owner_name		2687581	1					
ANR	2688495	Parameter	const char * file_name	355:8:8711:8734	2687581	2	True				
ANR	2688496	ParameterType	const char *		2687581	0					
ANR	2688497	Identifier	file_name		2687581	1					
ANR	2688498	CFGEntryNode	ENTRY		2687581		True				
ANR	2688499	CFGExitNode	EXIT		2687581		True				
ANR	2688500	Symbol	owner_ptr -> file_root		2687581						
ANR	2688501	Symbol	hash_bucket		2687581						
ANR	2688502	Symbol	file_ptr		2687581						
ANR	2688503	Symbol	machine_rep_ptr -> right		2687581						
ANR	2688504	Symbol	rmdir		2687581						
ANR	2688505	Symbol	machine_name		2687581						
ANR	2688506	Symbol	Hash		2687581						
ANR	2688507	Symbol	owner_rep_ptr -> left		2687581						
ANR	2688508	Symbol	owner_trail -> right		2687581						
ANR	2688509	Symbol	strncmp		2687581						
ANR	2688510	Symbol	file_ptr -> file_data -> data . machine_IP		2687581						
ANR	2688511	Symbol	machine_ptr -> owner_root		2687581						
ANR	2688512	Symbol	* * file_ptr		2687581						
ANR	2688513	Symbol	file_ptr -> file_name		2687581						
ANR	2688514	Symbol	file_rep_trail -> right		2687581						
ANR	2688515	Symbol	m_temp		2687581						
ANR	2688516	Symbol	machine_IP . s_addr		2687581						
ANR	2688517	Symbol	IMDS_INDEX_ERROR		2687581						
ANR	2688518	Symbol	* file_trail		2687581						
ANR	2688519	Symbol	owner_rep_ptr		2687581						
ANR	2688520	Symbol	owner_name		2687581						
ANR	2688521	Symbol	NULL		2687581						
ANR	2688522	Symbol	* file_rep_ptr		2687581						
ANR	2688523	Symbol	machine_IP		2687581						
ANR	2688524	Symbol	file_rep_trail		2687581						
ANR	2688525	Symbol	MAX_CONDOR_FILENAME_LENGTH		2687581						
ANR	2688526	Symbol	* owner_ptr		2687581						
ANR	2688527	Symbol	* file_ptr		2687581						
ANR	2688528	Symbol	owner_rep_trail		2687581						
ANR	2688529	Symbol	file_trail -> right		2687581						
ANR	2688530	Symbol	pathname		2687581						
ANR	2688531	Symbol	machine_ptr -> left		2687581						
ANR	2688532	Symbol	machine_trail		2687581						
ANR	2688533	Symbol	* file_rep_trail		2687581						
ANR	2688534	Symbol	machine_rep_trail		2687581						
ANR	2688535	Symbol	owner_ptr -> right		2687581						
ANR	2688536	Symbol	* hash_bucket		2687581						
ANR	2688537	Symbol	* machine_ptr		2687581						
ANR	2688538	Symbol	machine_rep_ptr		2687581						
ANR	2688539	Symbol	owner_trail		2687581						
ANR	2688540	Symbol	CANNOT_DELETE_DIRECTORY		2687581						
ANR	2688541	Symbol	machine_rep_ptr -> left		2687581						
ANR	2688542	Symbol	hash_table		2687581						
ANR	2688543	Symbol	owner_rep_trail -> right		2687581						
ANR	2688544	Symbol	machine_ptr -> machine_IP		2687581						
ANR	2688545	Symbol	LOCAL_DRIVE_PREFIX		2687581						
ANR	2688546	Symbol	owner_rep_ptr -> right		2687581						
ANR	2688547	Symbol	* hash_table		2687581						
ANR	2688548	Symbol	file_ptr -> file_data -> data		2687581						
ANR	2688549	Symbol	retCode		2687581						
ANR	2688550	Symbol	file_trail -> left		2687581						
ANR	2688551	Symbol	file_rep_ptr -> left		2687581						
ANR	2688552	Symbol	owner_trail -> left		2687581						
ANR	2688553	Symbol	file_ptr -> file_data		2687581						
ANR	2688554	Symbol	* owner_rep_ptr		2687581						
ANR	2688555	Symbol	* machine_rep_ptr		2687581						
ANR	2688556	Symbol	machine_trail -> left		2687581						
ANR	2688557	Symbol	machine_trail -> right		2687581						
ANR	2688558	Symbol	owner_ptr -> owner_name		2687581						
ANR	2688559	Symbol	file_rep_ptr -> right		2687581						
ANR	2688560	Symbol	file_ptr -> left		2687581						
ANR	2688561	Symbol	file_trail		2687581						
ANR	2688562	Symbol	file_rep_ptr		2687581						
ANR	2688563	Symbol	file_name		2687581						
ANR	2688564	Symbol	D_ALWAYS		2687581						
ANR	2688565	Symbol	owner_ptr -> left		2687581						
ANR	2688566	Symbol	* file_ptr -> file_data		2687581						
ANR	2688567	Symbol	machine_ptr -> machine_IP . s_addr		2687581						
ANR	2688568	Symbol	* owner_rep_trail		2687581						
ANR	2688569	Symbol	* machine_trail		2687581						
ANR	2688570	Symbol	MAX_NAME_LENGTH		2687581						
ANR	2688571	Symbol	owner_ptr		2687581						
ANR	2688572	Symbol	machine_ptr		2687581						
ANR	2688573	Symbol	f_temp		2687581						
ANR	2688574	Symbol	machine_ptr -> right		2687581						
ANR	2688575	Symbol	unlink		2687581						
ANR	2688576	Symbol	file_ptr -> right		2687581						
ANR	2688577	Symbol	CANNOT_DELETE_FILE		2687581						
ANR	2688578	Symbol	* owner_trail		2687581						
ANR	2688579	Symbol	o_temp		2687581						
ANR	2688580	Symbol	* machine_rep_trail		2687581						
ANR	2688581	Symbol	machine_rep_trail -> right		2687581						
ANR	2688582	Function	FileIndex :: RemoveFile	535:0:14261:14521							
ANR	2688583	FunctionDef	"FileIndex :: RemoveFile (struct in_addr machine_IP , const char * owner_name , const char * file_name)"		2688582	0					
ANR	2688584	CompoundStatement		538:0:14377:14521	2688582	0					
ANR	2688585	IfStatement	"if ( Exists ( machine_IP , owner_name , file_name ) != EXISTS )"		2688582	0					
ANR	2688586	Condition	"Exists ( machine_IP , owner_name , file_name ) != EXISTS"	539:6:14385:14435	2688582	0	True				
ANR	2688587	EqualityExpression	"Exists ( machine_IP , owner_name , file_name ) != EXISTS"		2688582	0		!=			
ANR	2688588	CallExpression	"Exists ( machine_IP , owner_name , file_name )"		2688582	0					
ANR	2688589	Callee	Exists		2688582	0					
ANR	2688590	Identifier	Exists		2688582	0					
ANR	2688591	ArgumentList	machine_IP		2688582	1					
ANR	2688592	Argument	machine_IP		2688582	0					
ANR	2688593	Identifier	machine_IP		2688582	0					
ANR	2688594	Argument	owner_name		2688582	1					
ANR	2688595	Identifier	owner_name		2688582	0					
ANR	2688596	Argument	file_name		2688582	2					
ANR	2688597	Identifier	file_name		2688582	0					
ANR	2688598	Identifier	EXISTS		2688582	1					
ANR	2688599	ReturnStatement	return DOES_NOT_EXIST ;	540:4:14442:14463	2688582	1	True				
ANR	2688600	Identifier	DOES_NOT_EXIST		2688582	0					
ANR	2688601	ReturnStatement	"return DeleteFile ( machine_IP , owner_name , file_name ) ;"	541:2:14467:14519	2688582	1	True				
ANR	2688602	CallExpression	"DeleteFile ( machine_IP , owner_name , file_name )"		2688582	0					
ANR	2688603	Callee	DeleteFile		2688582	0					
ANR	2688604	Identifier	DeleteFile		2688582	0					
ANR	2688605	ArgumentList	machine_IP		2688582	1					
ANR	2688606	Argument	machine_IP		2688582	0					
ANR	2688607	Identifier	machine_IP		2688582	0					
ANR	2688608	Argument	owner_name		2688582	1					
ANR	2688609	Identifier	owner_name		2688582	0					
ANR	2688610	Argument	file_name		2688582	2					
ANR	2688611	Identifier	file_name		2688582	0					
ANR	2688612	ReturnType	int		2688582	1					
ANR	2688613	Identifier	FileIndex :: RemoveFile		2688582	2					
ANR	2688614	ParameterList	"struct in_addr machine_IP , const char * owner_name , const char * file_name"		2688582	3					
ANR	2688615	Parameter	struct in_addr machine_IP	535:26:14287:14311	2688582	0	True				
ANR	2688616	ParameterType	struct in_addr		2688582	0					
ANR	2688617	Identifier	machine_IP		2688582	1					
ANR	2688618	Parameter	const char * owner_name	536:5:14319:14343	2688582	1	True				
ANR	2688619	ParameterType	const char *		2688582	0					
ANR	2688620	Identifier	owner_name		2688582	1					
ANR	2688621	Parameter	const char * file_name	537:5:14351:14374	2688582	2	True				
ANR	2688622	ParameterType	const char *		2688582	0					
ANR	2688623	Identifier	file_name		2688582	1					
ANR	2688624	CFGEntryNode	ENTRY		2688582		True				
ANR	2688625	CFGExitNode	EXIT		2688582		True				
ANR	2688626	Symbol	DOES_NOT_EXIST		2688582						
ANR	2688627	Symbol	owner_name		2688582						
ANR	2688628	Symbol	EXISTS		2688582						
ANR	2688629	Symbol	machine_IP		2688582						
ANR	2688630	Symbol	file_name		2688582						
ANR	2688631	Symbol	Exists		2688582						
ANR	2688632	Symbol	DeleteFile		2688582						
ANR	2688633	Function	FileIndex :: FIDump	545:0:14525:15214							
ANR	2688634	FunctionDef	FileIndex :: FIDump (file_node * f_ptr)		2688633	0					
ANR	2688635	CompoundStatement		546:0:14566:15214	2688633	0					
ANR	2688636	IfStatement	if ( f_ptr != NULL )		2688633	0					
ANR	2688637	Condition	f_ptr != NULL	547:6:14574:14586	2688633	0	True				
ANR	2688638	EqualityExpression	f_ptr != NULL		2688633	0		!=			
ANR	2688639	Identifier	f_ptr		2688633	0					
ANR	2688640	Identifier	NULL		2688633	1					
ANR	2688641	CompoundStatement		3:4:26:26	2688633	1					
ANR	2688642	ExpressionStatement	FIDump ( f_ptr -> left )	549:6:14601:14620	2688633	0	True				
ANR	2688643	CallExpression	FIDump ( f_ptr -> left )		2688633	0					
ANR	2688644	Callee	FIDump		2688633	0					
ANR	2688645	Identifier	FIDump		2688633	0					
ANR	2688646	ArgumentList	f_ptr -> left		2688633	1					
ANR	2688647	Argument	f_ptr -> left		2688633	0					
ANR	2688648	PtrMemberAccess	f_ptr -> left		2688633	0					
ANR	2688649	Identifier	f_ptr		2688633	0					
ANR	2688650	Identifier	left		2688633	1					
ANR	2688651	ExpressionStatement	"cout << ""\\t\\t\\tFile Name: "" << f_ptr -> file_data -> data . file_name << endl"	550:6:14628:14699	2688633	1	True				
ANR	2688652	ShiftExpression	"cout << ""\\t\\t\\tFile Name: "" << f_ptr -> file_data -> data . file_name << endl"		2688633	0		<<			
ANR	2688653	Identifier	cout		2688633	0					
ANR	2688654	ShiftExpression	"""\\t\\t\\tFile Name: "" << f_ptr -> file_data -> data . file_name << endl"		2688633	1		<<			
ANR	2688655	PrimaryExpression	"""\\t\\t\\tFile Name: """		2688633	0					
ANR	2688656	ShiftExpression	f_ptr -> file_data -> data . file_name << endl		2688633	1		<<			
ANR	2688657	MemberAccess	f_ptr -> file_data -> data . file_name		2688633	0					
ANR	2688658	PtrMemberAccess	f_ptr -> file_data -> data		2688633	0					
ANR	2688659	PtrMemberAccess	f_ptr -> file_data		2688633	0					
ANR	2688660	Identifier	f_ptr		2688633	0					
ANR	2688661	Identifier	file_data		2688633	1					
ANR	2688662	Identifier	data		2688633	1					
ANR	2688663	Identifier	file_name		2688633	1					
ANR	2688664	Identifier	endl		2688633	1					
ANR	2688665	ExpressionStatement	"cout << ""\\t\\t\\tFile Size: "" << f_ptr -> file_data -> data . size << endl"	551:6:14707:14773	2688633	2	True				
ANR	2688666	ShiftExpression	"cout << ""\\t\\t\\tFile Size: "" << f_ptr -> file_data -> data . size << endl"		2688633	0		<<			
ANR	2688667	Identifier	cout		2688633	0					
ANR	2688668	ShiftExpression	"""\\t\\t\\tFile Size: "" << f_ptr -> file_data -> data . size << endl"		2688633	1		<<			
ANR	2688669	PrimaryExpression	"""\\t\\t\\tFile Size: """		2688633	0					
ANR	2688670	ShiftExpression	f_ptr -> file_data -> data . size << endl		2688633	1		<<			
ANR	2688671	MemberAccess	f_ptr -> file_data -> data . size		2688633	0					
ANR	2688672	PtrMemberAccess	f_ptr -> file_data -> data		2688633	0					
ANR	2688673	PtrMemberAccess	f_ptr -> file_data		2688633	0					
ANR	2688674	Identifier	f_ptr		2688633	0					
ANR	2688675	Identifier	file_data		2688633	1					
ANR	2688676	Identifier	data		2688633	1					
ANR	2688677	Identifier	size		2688633	1					
ANR	2688678	Identifier	endl		2688633	1					
ANR	2688679	ExpressionStatement	"cout << ""\\t\\t\\tStatus:    """	552:6:14781:14808	2688633	3	True				
ANR	2688680	ShiftExpression	"cout << ""\\t\\t\\tStatus:    """		2688633	0		<<			
ANR	2688681	Identifier	cout		2688633	0					
ANR	2688682	PrimaryExpression	"""\\t\\t\\tStatus:    """		2688633	1					
ANR	2688683	SwitchStatement	switch ( f_ptr -> file_data -> data . state )		2688633	4					
ANR	2688684	Condition	f_ptr -> file_data -> data . state	553:14:14824:14851	2688633	0	True				
ANR	2688685	MemberAccess	f_ptr -> file_data -> data . state		2688633	0					
ANR	2688686	PtrMemberAccess	f_ptr -> file_data -> data		2688633	0					
ANR	2688687	PtrMemberAccess	f_ptr -> file_data		2688633	0					
ANR	2688688	Identifier	f_ptr		2688633	0					
ANR	2688689	Identifier	file_data		2688633	1					
ANR	2688690	Identifier	data		2688633	1					
ANR	2688691	Identifier	state		2688633	1					
ANR	2688692	CompoundStatement		9:1:288:288	2688633	1					
ANR	2688693	Label	case NOT_PRESENT :	555:1:14858:14874	2688633	0	True				
ANR	2688694	Identifier	NOT_PRESENT		2688633	0					
ANR	2688695	ExpressionStatement	"cout << ""not present on server"" << endl"	556:3:14880:14919	2688633	1	True				
ANR	2688696	ShiftExpression	"cout << ""not present on server"" << endl"		2688633	0		<<			
ANR	2688697	Identifier	cout		2688633	0					
ANR	2688698	ShiftExpression	"""not present on server"" << endl"		2688633	1		<<			
ANR	2688699	PrimaryExpression	"""not present on server"""		2688633	0					
ANR	2688700	Identifier	endl		2688633	1					
ANR	2688701	BreakStatement	break ;	557:3:14924:14929	2688633	2	True				
ANR	2688702	Label	case ON_SERVER :	558:1:14932:14946	2688633	3	True				
ANR	2688703	Identifier	ON_SERVER		2688633	0					
ANR	2688704	ExpressionStatement	"cout << ""on checkpoint server"" << endl"	559:3:14951:14989	2688633	4	True				
ANR	2688705	ShiftExpression	"cout << ""on checkpoint server"" << endl"		2688633	0		<<			
ANR	2688706	Identifier	cout		2688633	0					
ANR	2688707	ShiftExpression	"""on checkpoint server"" << endl"		2688633	1		<<			
ANR	2688708	PrimaryExpression	"""on checkpoint server"""		2688633	0					
ANR	2688709	Identifier	endl		2688633	1					
ANR	2688710	BreakStatement	break ;	560:3:14994:14999	2688633	5	True				
ANR	2688711	Label	case LOADING :	561:1:15002:15014	2688633	6	True				
ANR	2688712	Identifier	LOADING		2688633	0					
ANR	2688713	ExpressionStatement	"cout << ""loading"" << endl"	562:3:15019:15044	2688633	7	True				
ANR	2688714	ShiftExpression	"cout << ""loading"" << endl"		2688633	0		<<			
ANR	2688715	Identifier	cout		2688633	0					
ANR	2688716	ShiftExpression	"""loading"" << endl"		2688633	1		<<			
ANR	2688717	PrimaryExpression	"""loading"""		2688633	0					
ANR	2688718	Identifier	endl		2688633	1					
ANR	2688719	BreakStatement	break ;	563:3:15049:15054	2688633	8	True				
ANR	2688720	Label	case XMITTING :	564:1:15057:15070	2688633	9	True				
ANR	2688721	Identifier	XMITTING		2688633	0					
ANR	2688722	ExpressionStatement	"cout << ""transmitting"" << endl"	565:3:15075:15105	2688633	10	True				
ANR	2688723	ShiftExpression	"cout << ""transmitting"" << endl"		2688633	0		<<			
ANR	2688724	Identifier	cout		2688633	0					
ANR	2688725	ShiftExpression	"""transmitting"" << endl"		2688633	1		<<			
ANR	2688726	PrimaryExpression	"""transmitting"""		2688633	0					
ANR	2688727	Identifier	endl		2688633	1					
ANR	2688728	BreakStatement	break ;	566:3:15110:15115	2688633	11	True				
ANR	2688729	Label	default :	567:1:15118:15125	2688633	12	True				
ANR	2688730	Identifier	default		2688633	0					
ANR	2688731	ExpressionStatement	"cout << ""unknown"" << endl"	568:3:15130:15155	2688633	13	True				
ANR	2688732	ShiftExpression	"cout << ""unknown"" << endl"		2688633	0		<<			
ANR	2688733	Identifier	cout		2688633	0					
ANR	2688734	ShiftExpression	"""unknown"" << endl"		2688633	1		<<			
ANR	2688735	PrimaryExpression	"""unknown"""		2688633	0					
ANR	2688736	Identifier	endl		2688633	1					
ANR	2688737	ExpressionStatement	cout << endl	570:6:15166:15178	2688633	5	True				
ANR	2688738	ShiftExpression	cout << endl		2688633	0		<<			
ANR	2688739	Identifier	cout		2688633	0					
ANR	2688740	Identifier	endl		2688633	1					
ANR	2688741	ExpressionStatement	FIDump ( f_ptr -> right )	571:6:15186:15206	2688633	6	True				
ANR	2688742	CallExpression	FIDump ( f_ptr -> right )		2688633	0					
ANR	2688743	Callee	FIDump		2688633	0					
ANR	2688744	Identifier	FIDump		2688633	0					
ANR	2688745	ArgumentList	f_ptr -> right		2688633	1					
ANR	2688746	Argument	f_ptr -> right		2688633	0					
ANR	2688747	PtrMemberAccess	f_ptr -> right		2688633	0					
ANR	2688748	Identifier	f_ptr		2688633	0					
ANR	2688749	Identifier	right		2688633	1					
ANR	2688750	ReturnType	void		2688633	1					
ANR	2688751	Identifier	FileIndex :: FIDump		2688633	2					
ANR	2688752	ParameterList	file_node * f_ptr		2688633	3					
ANR	2688753	Parameter	file_node * f_ptr	545:23:14548:14563	2688633	0	True				
ANR	2688754	ParameterType	file_node *		2688633	0					
ANR	2688755	Identifier	f_ptr		2688633	1					
ANR	2688756	CFGEntryNode	ENTRY		2688633		True				
ANR	2688757	CFGExitNode	EXIT		2688633		True				
ANR	2688758	Symbol	NULL		2688633						
ANR	2688759	Symbol	f_ptr -> file_data		2688633						
ANR	2688760	Symbol	* * f_ptr		2688633						
ANR	2688761	Symbol	f_ptr -> left		2688633						
ANR	2688762	Symbol	* f_ptr		2688633						
ANR	2688763	Symbol	f_ptr -> file_data -> data		2688633						
ANR	2688764	Symbol	f_ptr -> right		2688633						
ANR	2688765	Symbol	* f_ptr -> file_data		2688633						
ANR	2688766	Symbol	f_ptr -> file_data -> data . state		2688633						
ANR	2688767	Symbol	f_ptr		2688633						
ANR	2688768	Function	FileIndex :: OIDump	576:0:15218:15440							
ANR	2688769	FunctionDef	FileIndex :: OIDump (owner_node * o_ptr)		2688768	0					
ANR	2688770	CompoundStatement		577:0:15260:15440	2688768	0					
ANR	2688771	IfStatement	if ( o_ptr != NULL )		2688768	0					
ANR	2688772	Condition	o_ptr != NULL	578:6:15268:15280	2688768	0	True				
ANR	2688773	EqualityExpression	o_ptr != NULL		2688768	0		!=			
ANR	2688774	Identifier	o_ptr		2688768	0					
ANR	2688775	Identifier	NULL		2688768	1					
ANR	2688776	CompoundStatement		3:4:26:26	2688768	1					
ANR	2688777	ExpressionStatement	OIDump ( o_ptr -> left )	580:6:15295:15314	2688768	0	True				
ANR	2688778	CallExpression	OIDump ( o_ptr -> left )		2688768	0					
ANR	2688779	Callee	OIDump		2688768	0					
ANR	2688780	Identifier	OIDump		2688768	0					
ANR	2688781	ArgumentList	o_ptr -> left		2688768	1					
ANR	2688782	Argument	o_ptr -> left		2688768	0					
ANR	2688783	PtrMemberAccess	o_ptr -> left		2688768	0					
ANR	2688784	Identifier	o_ptr		2688768	0					
ANR	2688785	Identifier	left		2688768	1					
ANR	2688786	ExpressionStatement	"cout << ""\\t\\tOwner: "" << o_ptr -> owner_name << endl"	581:6:15322:15372	2688768	1	True				
ANR	2688787	ShiftExpression	"cout << ""\\t\\tOwner: "" << o_ptr -> owner_name << endl"		2688768	0		<<			
ANR	2688788	Identifier	cout		2688768	0					
ANR	2688789	ShiftExpression	"""\\t\\tOwner: "" << o_ptr -> owner_name << endl"		2688768	1		<<			
ANR	2688790	PrimaryExpression	"""\\t\\tOwner: """		2688768	0					
ANR	2688791	ShiftExpression	o_ptr -> owner_name << endl		2688768	1		<<			
ANR	2688792	PtrMemberAccess	o_ptr -> owner_name		2688768	0					
ANR	2688793	Identifier	o_ptr		2688768	0					
ANR	2688794	Identifier	owner_name		2688768	1					
ANR	2688795	Identifier	endl		2688768	1					
ANR	2688796	ExpressionStatement	FIDump ( o_ptr -> file_root )	582:6:15380:15404	2688768	2	True				
ANR	2688797	CallExpression	FIDump ( o_ptr -> file_root )		2688768	0					
ANR	2688798	Callee	FIDump		2688768	0					
ANR	2688799	Identifier	FIDump		2688768	0					
ANR	2688800	ArgumentList	o_ptr -> file_root		2688768	1					
ANR	2688801	Argument	o_ptr -> file_root		2688768	0					
ANR	2688802	PtrMemberAccess	o_ptr -> file_root		2688768	0					
ANR	2688803	Identifier	o_ptr		2688768	0					
ANR	2688804	Identifier	file_root		2688768	1					
ANR	2688805	ExpressionStatement	OIDump ( o_ptr -> right )	583:6:15412:15432	2688768	3	True				
ANR	2688806	CallExpression	OIDump ( o_ptr -> right )		2688768	0					
ANR	2688807	Callee	OIDump		2688768	0					
ANR	2688808	Identifier	OIDump		2688768	0					
ANR	2688809	ArgumentList	o_ptr -> right		2688768	1					
ANR	2688810	Argument	o_ptr -> right		2688768	0					
ANR	2688811	PtrMemberAccess	o_ptr -> right		2688768	0					
ANR	2688812	Identifier	o_ptr		2688768	0					
ANR	2688813	Identifier	right		2688768	1					
ANR	2688814	ReturnType	void		2688768	1					
ANR	2688815	Identifier	FileIndex :: OIDump		2688768	2					
ANR	2688816	ParameterList	owner_node * o_ptr		2688768	3					
ANR	2688817	Parameter	owner_node * o_ptr	576:23:15241:15257	2688768	0	True				
ANR	2688818	ParameterType	owner_node *		2688768	0					
ANR	2688819	Identifier	o_ptr		2688768	1					
ANR	2688820	CFGEntryNode	ENTRY		2688768		True				
ANR	2688821	CFGExitNode	EXIT		2688768		True				
ANR	2688822	Symbol	o_ptr -> right		2688768						
ANR	2688823	Symbol	* o_ptr		2688768						
ANR	2688824	Symbol	NULL		2688768						
ANR	2688825	Symbol	o_ptr		2688768						
ANR	2688826	Symbol	o_ptr -> file_root		2688768						
ANR	2688827	Symbol	o_ptr -> left		2688768						
ANR	2688828	Function	FileIndex :: MIDump	589:0:15445:15681							
ANR	2688829	FunctionDef	FileIndex :: MIDump (machine_node * m_ptr)		2688828	0					
ANR	2688830	CompoundStatement		590:0:15489:15681	2688828	0					
ANR	2688831	IfStatement	if ( m_ptr != NULL )		2688828	0					
ANR	2688832	Condition	m_ptr != NULL	591:6:15497:15509	2688828	0	True				
ANR	2688833	EqualityExpression	m_ptr != NULL		2688828	0		!=			
ANR	2688834	Identifier	m_ptr		2688828	0					
ANR	2688835	Identifier	NULL		2688828	1					
ANR	2688836	CompoundStatement		3:4:26:26	2688828	1					
ANR	2688837	ExpressionStatement	MIDump ( m_ptr -> left )	593:6:15524:15543	2688828	0	True				
ANR	2688838	CallExpression	MIDump ( m_ptr -> left )		2688828	0					
ANR	2688839	Callee	MIDump		2688828	0					
ANR	2688840	Identifier	MIDump		2688828	0					
ANR	2688841	ArgumentList	m_ptr -> left		2688828	1					
ANR	2688842	Argument	m_ptr -> left		2688828	0					
ANR	2688843	PtrMemberAccess	m_ptr -> left		2688828	0					
ANR	2688844	Identifier	m_ptr		2688828	0					
ANR	2688845	Identifier	left		2688828	1					
ANR	2688846	ExpressionStatement	"cout << ""\\tMachine: "" << inet_ntoa ( m_ptr -> machine_IP ) << endl"	594:6:15551:15612	2688828	1	True				
ANR	2688847	ShiftExpression	"cout << ""\\tMachine: "" << inet_ntoa ( m_ptr -> machine_IP ) << endl"		2688828	0		<<			
ANR	2688848	Identifier	cout		2688828	0					
ANR	2688849	ShiftExpression	"""\\tMachine: "" << inet_ntoa ( m_ptr -> machine_IP ) << endl"		2688828	1		<<			
ANR	2688850	PrimaryExpression	"""\\tMachine: """		2688828	0					
ANR	2688851	ShiftExpression	inet_ntoa ( m_ptr -> machine_IP ) << endl		2688828	1		<<			
ANR	2688852	CallExpression	inet_ntoa ( m_ptr -> machine_IP )		2688828	0					
ANR	2688853	Callee	inet_ntoa		2688828	0					
ANR	2688854	Identifier	inet_ntoa		2688828	0					
ANR	2688855	ArgumentList	m_ptr -> machine_IP		2688828	1					
ANR	2688856	Argument	m_ptr -> machine_IP		2688828	0					
ANR	2688857	PtrMemberAccess	m_ptr -> machine_IP		2688828	0					
ANR	2688858	Identifier	m_ptr		2688828	0					
ANR	2688859	Identifier	machine_IP		2688828	1					
ANR	2688860	Identifier	endl		2688828	1					
ANR	2688861	ExpressionStatement	OIDump ( m_ptr -> owner_root )	595:6:15620:15645	2688828	2	True				
ANR	2688862	CallExpression	OIDump ( m_ptr -> owner_root )		2688828	0					
ANR	2688863	Callee	OIDump		2688828	0					
ANR	2688864	Identifier	OIDump		2688828	0					
ANR	2688865	ArgumentList	m_ptr -> owner_root		2688828	1					
ANR	2688866	Argument	m_ptr -> owner_root		2688828	0					
ANR	2688867	PtrMemberAccess	m_ptr -> owner_root		2688828	0					
ANR	2688868	Identifier	m_ptr		2688828	0					
ANR	2688869	Identifier	owner_root		2688828	1					
ANR	2688870	ExpressionStatement	MIDump ( m_ptr -> right )	596:6:15653:15673	2688828	3	True				
ANR	2688871	CallExpression	MIDump ( m_ptr -> right )		2688828	0					
ANR	2688872	Callee	MIDump		2688828	0					
ANR	2688873	Identifier	MIDump		2688828	0					
ANR	2688874	ArgumentList	m_ptr -> right		2688828	1					
ANR	2688875	Argument	m_ptr -> right		2688828	0					
ANR	2688876	PtrMemberAccess	m_ptr -> right		2688828	0					
ANR	2688877	Identifier	m_ptr		2688828	0					
ANR	2688878	Identifier	right		2688828	1					
ANR	2688879	ReturnType	void		2688828	1					
ANR	2688880	Identifier	FileIndex :: MIDump		2688828	2					
ANR	2688881	ParameterList	machine_node * m_ptr		2688828	3					
ANR	2688882	Parameter	machine_node * m_ptr	589:23:15468:15486	2688828	0	True				
ANR	2688883	ParameterType	machine_node *		2688828	0					
ANR	2688884	Identifier	m_ptr		2688828	1					
ANR	2688885	CFGEntryNode	ENTRY		2688828		True				
ANR	2688886	CFGExitNode	EXIT		2688828		True				
ANR	2688887	Symbol	m_ptr		2688828						
ANR	2688888	Symbol	m_ptr -> right		2688828						
ANR	2688889	Symbol	NULL		2688828						
ANR	2688890	Symbol	m_ptr -> left		2688828						
ANR	2688891	Symbol	* m_ptr		2688828						
ANR	2688892	Symbol	m_ptr -> owner_root		2688828						
ANR	2688893	Symbol	m_ptr -> machine_IP		2688828						
ANR	2688894	Function	FileIndex :: IndexDump	601:0:15685:16117							
ANR	2688895	FunctionDef	FileIndex :: IndexDump ()		2688894	0					
ANR	2688896	CompoundStatement		602:0:15713:16117	2688894	0					
ANR	2688897	IdentifierDeclStatement	int count ;	603:2:15717:15726	2688894	0	True				
ANR	2688898	IdentifierDecl	count		2688894	0					
ANR	2688899	IdentifierDeclType	int		2688894	0					
ANR	2688900	Identifier	count		2688894	1					
ANR	2688901	ExpressionStatement	"MakeLine ( '=' , '-' )"	605:2:15731:15749	2688894	1	True				
ANR	2688902	CallExpression	"MakeLine ( '=' , '-' )"		2688894	0					
ANR	2688903	Callee	MakeLine		2688894	0					
ANR	2688904	Identifier	MakeLine		2688894	0					
ANR	2688905	ArgumentList	'='		2688894	1					
ANR	2688906	Argument	'='		2688894	0					
ANR	2688907	PrimaryExpression	'='		2688894	0					
ANR	2688908	Argument	'-'		2688894	1					
ANR	2688909	PrimaryExpression	'-'		2688894	0					
ANR	2688910	ExpressionStatement	"cout << ""Start of File Index Dump"" << endl"	606:2:15753:15795	2688894	2	True				
ANR	2688911	ShiftExpression	"cout << ""Start of File Index Dump"" << endl"		2688894	0		<<			
ANR	2688912	Identifier	cout		2688894	0					
ANR	2688913	ShiftExpression	"""Start of File Index Dump"" << endl"		2688894	1		<<			
ANR	2688914	PrimaryExpression	"""Start of File Index Dump"""		2688894	0					
ANR	2688915	Identifier	endl		2688894	1					
ANR	2688916	ExpressionStatement	"MakeLine ( '-' , '-' )"	607:2:15799:15817	2688894	3	True				
ANR	2688917	CallExpression	"MakeLine ( '-' , '-' )"		2688894	0					
ANR	2688918	Callee	MakeLine		2688894	0					
ANR	2688919	Identifier	MakeLine		2688894	0					
ANR	2688920	ArgumentList	'-'		2688894	1					
ANR	2688921	Argument	'-'		2688894	0					
ANR	2688922	PrimaryExpression	'-'		2688894	0					
ANR	2688923	Argument	'-'		2688894	1					
ANR	2688924	PrimaryExpression	'-'		2688894	0					
ANR	2688925	ForStatement	for ( count = 0 ; count < MAX_HASH_SIZE ; count ++ )		2688894	4					
ANR	2688926	ForInit	count = 0 ;	608:7:15826:15833	2688894	0	True				
ANR	2688927	AssignmentExpression	count = 0		2688894	0		=			
ANR	2688928	Identifier	count		2688894	0					
ANR	2688929	PrimaryExpression	0		2688894	1					
ANR	2688930	Condition	count < MAX_HASH_SIZE	608:16:15835:15853	2688894	1	True				
ANR	2688931	RelationalExpression	count < MAX_HASH_SIZE		2688894	0		<			
ANR	2688932	Identifier	count		2688894	0					
ANR	2688933	Identifier	MAX_HASH_SIZE		2688894	1					
ANR	2688934	PostIncDecOperationExpression	count ++	608:37:15856:15862	2688894	2	True				
ANR	2688935	Identifier	count		2688894	0					
ANR	2688936	IncDec	++		2688894	1					
ANR	2688937	IfStatement	if ( hash_table [ count ] != NULL )		2688894	3					
ANR	2688938	Condition	hash_table [ count ] != NULL	609:8:15873:15897	2688894	0	True				
ANR	2688939	EqualityExpression	hash_table [ count ] != NULL		2688894	0		!=			
ANR	2688940	ArrayIndexing	hash_table [ count ]		2688894	0					
ANR	2688941	Identifier	hash_table		2688894	0					
ANR	2688942	Identifier	count		2688894	1					
ANR	2688943	Identifier	NULL		2688894	1					
ANR	2688944	CompoundStatement		9:6:192:192	2688894	1					
ANR	2688945	ExpressionStatement	"cout << endl << ""*** Bucket #"" << count << "": ***"" << endl"	611:1:15909:15967	2688894	0	True				
ANR	2688946	ShiftExpression	"cout << endl << ""*** Bucket #"" << count << "": ***"" << endl"		2688894	0		<<			
ANR	2688947	Identifier	cout		2688894	0					
ANR	2688948	ShiftExpression	"endl << ""*** Bucket #"" << count << "": ***"" << endl"		2688894	1		<<			
ANR	2688949	Identifier	endl		2688894	0					
ANR	2688950	ShiftExpression	"""*** Bucket #"" << count << "": ***"" << endl"		2688894	1		<<			
ANR	2688951	PrimaryExpression	"""*** Bucket #"""		2688894	0					
ANR	2688952	ShiftExpression	"count << "": ***"" << endl"		2688894	1		<<			
ANR	2688953	Identifier	count		2688894	0					
ANR	2688954	ShiftExpression	""": ***"" << endl"		2688894	1		<<			
ANR	2688955	PrimaryExpression	""": ***"""		2688894	0					
ANR	2688956	Identifier	endl		2688894	1					
ANR	2688957	ExpressionStatement	MIDump ( hash_table [ count ] )	612:1:15970:15995	2688894	1	True				
ANR	2688958	CallExpression	MIDump ( hash_table [ count ] )		2688894	0					
ANR	2688959	Callee	MIDump		2688894	0					
ANR	2688960	Identifier	MIDump		2688894	0					
ANR	2688961	ArgumentList	hash_table [ count ]		2688894	1					
ANR	2688962	Argument	hash_table [ count ]		2688894	0					
ANR	2688963	ArrayIndexing	hash_table [ count ]		2688894	0					
ANR	2688964	Identifier	hash_table		2688894	0					
ANR	2688965	Identifier	count		2688894	1					
ANR	2688966	ExpressionStatement	"MakeLine ( '-' , '-' )"	614:2:16007:16025	2688894	5	True				
ANR	2688967	CallExpression	"MakeLine ( '-' , '-' )"		2688894	0					
ANR	2688968	Callee	MakeLine		2688894	0					
ANR	2688969	Identifier	MakeLine		2688894	0					
ANR	2688970	ArgumentList	'-'		2688894	1					
ANR	2688971	Argument	'-'		2688894	0					
ANR	2688972	PrimaryExpression	'-'		2688894	0					
ANR	2688973	Argument	'-'		2688894	1					
ANR	2688974	PrimaryExpression	'-'		2688894	0					
ANR	2688975	ExpressionStatement	"cout << ""End of File Index Dump"" << endl"	615:2:16029:16069	2688894	6	True				
ANR	2688976	ShiftExpression	"cout << ""End of File Index Dump"" << endl"		2688894	0		<<			
ANR	2688977	Identifier	cout		2688894	0					
ANR	2688978	ShiftExpression	"""End of File Index Dump"" << endl"		2688894	1		<<			
ANR	2688979	PrimaryExpression	"""End of File Index Dump"""		2688894	0					
ANR	2688980	Identifier	endl		2688894	1					
ANR	2688981	ExpressionStatement	"MakeLine ( '=' , '-' )"	616:2:16073:16091	2688894	7	True				
ANR	2688982	CallExpression	"MakeLine ( '=' , '-' )"		2688894	0					
ANR	2688983	Callee	MakeLine		2688894	0					
ANR	2688984	Identifier	MakeLine		2688894	0					
ANR	2688985	ArgumentList	'='		2688894	1					
ANR	2688986	Argument	'='		2688894	0					
ANR	2688987	PrimaryExpression	'='		2688894	0					
ANR	2688988	Argument	'-'		2688894	1					
ANR	2688989	PrimaryExpression	'-'		2688894	0					
ANR	2688990	ExpressionStatement	cout << endl << endl	617:2:16095:16115	2688894	8	True				
ANR	2688991	ShiftExpression	cout << endl << endl		2688894	0		<<			
ANR	2688992	Identifier	cout		2688894	0					
ANR	2688993	ShiftExpression	endl << endl		2688894	1		<<			
ANR	2688994	Identifier	endl		2688894	0					
ANR	2688995	Identifier	endl		2688894	1					
ANR	2688996	ReturnType	void		2688894	1					
ANR	2688997	Identifier	FileIndex :: IndexDump		2688894	2					
ANR	2688998	ParameterList			2688894	3					
ANR	2688999	CFGEntryNode	ENTRY		2688894		True				
ANR	2689000	CFGExitNode	EXIT		2688894		True				
ANR	2689001	Symbol	* count		2688894						
ANR	2689002	Symbol	hash_table		2688894						
ANR	2689003	Symbol	NULL		2688894						
ANR	2689004	Symbol	MAX_HASH_SIZE		2688894						
ANR	2689005	Symbol	count		2688894						
ANR	2689006	Symbol	* hash_table		2688894						
