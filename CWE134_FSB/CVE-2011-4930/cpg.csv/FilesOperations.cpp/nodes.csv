command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	198600	File	data/converged/CVE-2011-4930_htcondor/FilesOperations.cpp								
ANR	198601	Function	FilesOperations :: rotateFile	38:0:1402:2018							
ANR	198602	FunctionDef	"FilesOperations :: rotateFile (const char * filePath , const char * temporaryFilesExtension)"		198601	0					
ANR	198603	CompoundStatement		41:0:1508:2018	198601	0					
ANR	198604	Statement	dprintf	42:4:1514:1520	198601	0	True				
ANR	198605	Statement	(	42:11:1521:1521	198601	1	True				
ANR	198606	Statement	D_ALWAYS	42:13:1523:1530	198601	2	True				
ANR	198607	Statement	","	42:21:1531:1531	198601	3	True				
ANR	198608	Statement	"""FilesOperations::rotateFile %s with extension %s """	42:23:1533:1583	198601	4	True				
ANR	198609	Statement	"""started\\n"""	43:8:1593:1603	198601	5	True				
ANR	198610	Statement	","	43:19:1604:1604	198601	6	True				
ANR	198611	Statement	filePath	44:13:1619:1626	198601	7	True				
ANR	198612	Statement	","	44:21:1627:1627	198601	8	True				
ANR	198613	Statement	temporaryFilesExtension	44:23:1629:1651	198601	9	True				
ANR	198614	Statement	)	44:47:1653:1653	198601	10	True				
ANR	198615	ExpressionStatement		44:48:1654:1654	198601	11	True				
ANR	198616	IdentifierDeclStatement	MyString temporaryFilePath = filePath ;	45:4:1660:1697	198601	12	True				
ANR	198617	IdentifierDecl	temporaryFilePath = filePath		198601	0					
ANR	198618	IdentifierDeclType	MyString		198601	0					
ANR	198619	Identifier	temporaryFilePath		198601	1					
ANR	198620	AssignmentExpression	temporaryFilePath = filePath		198601	2		=			
ANR	198621	Identifier	filePath		198601	0					
ANR	198622	Identifier	filePath		198601	1					
ANR	198623	ExpressionStatement	"temporaryFilePath += ""."""	47:4:1704:1728	198601	13	True				
ANR	198624	AssignmentExpression	"temporaryFilePath += ""."""		198601	0		+=			
ANR	198625	Identifier	temporaryFilePath		198601	0					
ANR	198626	PrimaryExpression	"""."""		198601	1					
ANR	198627	ExpressionStatement	temporaryFilePath += temporaryFilesExtension	48:4:1734:1778	198601	14	True				
ANR	198628	AssignmentExpression	temporaryFilePath += temporaryFilesExtension		198601	0		+=			
ANR	198629	Identifier	temporaryFilePath		198601	0					
ANR	198630	Identifier	temporaryFilesExtension		198601	1					
ANR	198631	IfStatement	"if ( rotate_file ( temporaryFilePath . Value ( ) , filePath ) < 0 )"		198601	15					
ANR	198632	Condition	"rotate_file ( temporaryFilePath . Value ( ) , filePath ) < 0"	50:8:1789:1843	198601	0	True				
ANR	198633	RelationalExpression	"rotate_file ( temporaryFilePath . Value ( ) , filePath ) < 0"		198601	0		<			
ANR	198634	CallExpression	"rotate_file ( temporaryFilePath . Value ( ) , filePath )"		198601	0					
ANR	198635	Callee	rotate_file		198601	0					
ANR	198636	Identifier	rotate_file		198601	0					
ANR	198637	ArgumentList	temporaryFilePath . Value ( )		198601	1					
ANR	198638	Argument	temporaryFilePath . Value ( )		198601	0					
ANR	198639	CallExpression	temporaryFilePath . Value ( )		198601	0					
ANR	198640	Callee	temporaryFilePath . Value		198601	0					
ANR	198641	MemberAccess	temporaryFilePath . Value		198601	0					
ANR	198642	Identifier	temporaryFilePath		198601	0					
ANR	198643	Identifier	Value		198601	1					
ANR	198644	ArgumentList			198601	1					
ANR	198645	Argument	filePath		198601	1					
ANR	198646	Identifier	filePath		198601	0					
ANR	198647	PrimaryExpression	0		198601	1					
ANR	198648	CompoundStatement		10:66:338:338	198601	1					
ANR	198649	Statement	dprintf	51:8:1857:1863	198601	0	True				
ANR	198650	Statement	(	51:15:1864:1864	198601	1	True				
ANR	198651	Statement	D_ALWAYS	51:17:1866:1873	198601	2	True				
ANR	198652	Statement	","	51:25:1874:1874	198601	3	True				
ANR	198653	Statement	"""FilesOperations::rotateFile """	51:27:1876:1905	198601	4	True				
ANR	198654	Statement	"""cannot rotate file %s\\n"""	52:27:1934:1958	198601	5	True				
ANR	198655	Statement	","	52:52:1959:1959	198601	6	True				
ANR	198656	Statement	filePath	52:54:1961:1968	198601	7	True				
ANR	198657	Statement	)	52:63:1970:1970	198601	8	True				
ANR	198658	ExpressionStatement		52:64:1971:1971	198601	9	True				
ANR	198659	ReturnStatement	return false ;	53:8:1981:1993	198601	10	True				
ANR	198660	Identifier	false		198601	0					
ANR	198661	ReturnStatement	return true ;	55:4:2005:2016	198601	16	True				
ANR	198662	Identifier	true		198601	0					
ANR	198663	ReturnType	bool		198601	1					
ANR	198664	Identifier	FilesOperations :: rotateFile		198601	2					
ANR	198665	ParameterList	"const char * filePath , const char * temporaryFilesExtension"		198601	3					
ANR	198666	Parameter	const char * filePath	39:29:1436:1455	198601	0	True				
ANR	198667	ParameterType	const char *		198601	0					
ANR	198668	Identifier	filePath		198601	1					
ANR	198669	Parameter	const char * temporaryFilesExtension	40:11:1470:1504	198601	1	True				
ANR	198670	ParameterType	const char *		198601	0					
ANR	198671	Identifier	temporaryFilesExtension		198601	1					
ANR	198672	CFGEntryNode	ENTRY		198601		True				
ANR	198673	CFGExitNode	EXIT		198601		True				
ANR	198674	Symbol	temporaryFilePath . Value		198601						
ANR	198675	Symbol	filePath		198601						
ANR	198676	Symbol	temporaryFilePath		198601						
ANR	198677	Symbol	false		198601						
ANR	198678	Symbol	true		198601						
ANR	198679	Symbol	rotate_file		198601						
ANR	198680	Symbol	temporaryFilesExtension		198601						
ANR	198681	Function	FilesOperations :: copyFile	64:0:2358:2996							
ANR	198682	FunctionDef	"FilesOperations :: copyFile (const char * filePath , const char * temporaryFilesExtension)"		198681	0					
ANR	198683	CompoundStatement		67:0:2459:2996	198681	0					
ANR	198684	Statement	dprintf	68:4:2465:2471	198681	0	True				
ANR	198685	Statement	(	68:11:2472:2472	198681	1	True				
ANR	198686	Statement	D_ALWAYS	68:13:2474:2481	198681	2	True				
ANR	198687	Statement	","	68:21:2482:2482	198681	3	True				
ANR	198688	Statement	"""FilesOperations::copyFile %s with extension %s """	68:23:2484:2532	198681	4	True				
ANR	198689	Statement	"""started\\n"""	69:8:2542:2552	198681	5	True				
ANR	198690	Statement	","	69:19:2553:2553	198681	6	True				
ANR	198691	Statement	filePath	69:21:2555:2562	198681	7	True				
ANR	198692	Statement	","	69:29:2563:2563	198681	8	True				
ANR	198693	Statement	temporaryFilesExtension	69:31:2565:2587	198681	9	True				
ANR	198694	Statement	)	69:55:2589:2589	198681	10	True				
ANR	198695	ExpressionStatement		69:56:2590:2590	198681	11	True				
ANR	198696	IdentifierDeclStatement	MyString temporaryFilePath = filePath ;	70:4:2596:2633	198681	12	True				
ANR	198697	IdentifierDecl	temporaryFilePath = filePath		198681	0					
ANR	198698	IdentifierDeclType	MyString		198681	0					
ANR	198699	Identifier	temporaryFilePath		198681	1					
ANR	198700	AssignmentExpression	temporaryFilePath = filePath		198681	2		=			
ANR	198701	Identifier	filePath		198681	0					
ANR	198702	Identifier	filePath		198681	1					
ANR	198703	ExpressionStatement	"temporaryFilePath += ""."""	72:4:2640:2664	198681	13	True				
ANR	198704	AssignmentExpression	"temporaryFilePath += ""."""		198681	0		+=			
ANR	198705	Identifier	temporaryFilePath		198681	0					
ANR	198706	PrimaryExpression	"""."""		198681	1					
ANR	198707	ExpressionStatement	temporaryFilePath += temporaryFilesExtension	73:4:2670:2714	198681	14	True				
ANR	198708	AssignmentExpression	temporaryFilePath += temporaryFilesExtension		198681	0		+=			
ANR	198709	Identifier	temporaryFilePath		198681	0					
ANR	198710	Identifier	temporaryFilesExtension		198681	1					
ANR	198711	IfStatement	"if ( copy_file ( filePath , temporaryFilePath . Value ( ) ) )"		198681	15					
ANR	198712	Condition	"copy_file ( filePath , temporaryFilePath . Value ( ) )"	75:8:2725:2773	198681	0	True				
ANR	198713	CallExpression	"copy_file ( filePath , temporaryFilePath . Value ( ) )"		198681	0					
ANR	198714	Callee	copy_file		198681	0					
ANR	198715	Identifier	copy_file		198681	0					
ANR	198716	ArgumentList	filePath		198681	1					
ANR	198717	Argument	filePath		198681	0					
ANR	198718	Identifier	filePath		198681	0					
ANR	198719	Argument	temporaryFilePath . Value ( )		198681	1					
ANR	198720	CallExpression	temporaryFilePath . Value ( )		198681	0					
ANR	198721	Callee	temporaryFilePath . Value		198681	0					
ANR	198722	MemberAccess	temporaryFilePath . Value		198681	0					
ANR	198723	Identifier	temporaryFilePath		198681	0					
ANR	198724	Identifier	Value		198681	1					
ANR	198725	ArgumentList			198681	1					
ANR	198726	CompoundStatement		9:60:317:317	198681	1					
ANR	198727	Statement	dprintf	76:8:2787:2793	198681	0	True				
ANR	198728	Statement	(	76:15:2794:2794	198681	1	True				
ANR	198729	Statement	D_ALWAYS	76:17:2796:2803	198681	2	True				
ANR	198730	Statement	","	76:25:2804:2804	198681	3	True				
ANR	198731	Statement	"""FilesOperations::copyFile """	76:27:2806:2833	198681	4	True				
ANR	198732	Statement	"""unable to copy %s to %s\\n"""	77:27:2862:2888	198681	5	True				
ANR	198733	Statement	","	77:54:2889:2889	198681	6	True				
ANR	198734	Statement	filePath	78:20:2911:2918	198681	7	True				
ANR	198735	Statement	","	78:28:2919:2919	198681	8	True				
ANR	198736	Statement	temporaryFilePath	78:30:2921:2937	198681	9	True				
ANR	198737	Statement	.	78:47:2938:2938	198681	10	True				
ANR	198738	Statement	Value	78:48:2939:2943	198681	11	True				
ANR	198739	Statement	(	78:53:2944:2944	198681	12	True				
ANR	198740	Statement	)	78:55:2946:2946	198681	13	True				
ANR	198741	Statement	)	78:57:2948:2948	198681	14	True				
ANR	198742	ExpressionStatement		78:58:2949:2949	198681	15	True				
ANR	198743	ReturnStatement	return false ;	79:8:2959:2971	198681	16	True				
ANR	198744	Identifier	false		198681	0					
ANR	198745	ReturnStatement	return true ;	81:4:2983:2994	198681	16	True				
ANR	198746	Identifier	true		198681	0					
ANR	198747	ReturnType	bool		198681	1					
ANR	198748	Identifier	FilesOperations :: copyFile		198681	2					
ANR	198749	ParameterList	"const char * filePath , const char * temporaryFilesExtension"		198681	3					
ANR	198750	Parameter	const char * filePath	65:27:2390:2409	198681	0	True				
ANR	198751	ParameterType	const char *		198681	0					
ANR	198752	Identifier	filePath		198681	1					
ANR	198753	Parameter	const char * temporaryFilesExtension	66:9:2422:2456	198681	1	True				
ANR	198754	ParameterType	const char *		198681	0					
ANR	198755	Identifier	temporaryFilesExtension		198681	1					
ANR	198756	CFGEntryNode	ENTRY		198681		True				
ANR	198757	CFGExitNode	EXIT		198681		True				
ANR	198758	Symbol	temporaryFilePath . Value		198681						
ANR	198759	Symbol	filePath		198681						
ANR	198760	Symbol	temporaryFilePath		198681						
ANR	198761	Symbol	false		198681						
ANR	198762	Symbol	true		198681						
ANR	198763	Symbol	temporaryFilesExtension		198681						
ANR	198764	Symbol	copy_file		198681						
ANR	198765	Function	FilesOperations :: unlinkFile	91:0:3394:4312							
ANR	198766	FunctionDef	"FilesOperations :: unlinkFile (const char * filePath , const char * temporaryFilesExtension)"		198765	0					
ANR	198767	CompoundStatement		94:0:3500:4312	198765	0					
ANR	198768	Statement	dprintf	95:4:3506:3512	198765	0	True				
ANR	198769	Statement	(	95:11:3513:3513	198765	1	True				
ANR	198770	Statement	D_ALWAYS	95:13:3515:3522	198765	2	True				
ANR	198771	Statement	","	95:21:3523:3523	198765	3	True				
ANR	198772	Statement	"""FilesOperations::unlinkFile %s with extension %s """	95:23:3525:3575	198765	4	True				
ANR	198773	Statement	"""started\\n"""	96:8:3585:3595	198765	5	True				
ANR	198774	Statement	","	96:19:3596:3596	198765	6	True				
ANR	198775	Statement	filePath	96:21:3598:3605	198765	7	True				
ANR	198776	Statement	","	96:29:3606:3606	198765	8	True				
ANR	198777	Statement	temporaryFilesExtension	96:31:3608:3630	198765	9	True				
ANR	198778	Statement	)	96:55:3632:3632	198765	10	True				
ANR	198779	ExpressionStatement		96:56:3633:3633	198765	11	True				
ANR	198780	IdentifierDeclStatement	MyString temporaryFilePath = filePath ;	97:1:3636:3673	198765	12	True				
ANR	198781	IdentifierDecl	temporaryFilePath = filePath		198765	0					
ANR	198782	IdentifierDeclType	MyString		198765	0					
ANR	198783	Identifier	temporaryFilePath		198765	1					
ANR	198784	AssignmentExpression	temporaryFilePath = filePath		198765	2		=			
ANR	198785	Identifier	filePath		198765	0					
ANR	198786	Identifier	filePath		198765	1					
ANR	198787	ExpressionStatement	"temporaryFilePath += ""."""	99:4:3680:3704	198765	13	True				
ANR	198788	AssignmentExpression	"temporaryFilePath += ""."""		198765	0		+=			
ANR	198789	Identifier	temporaryFilePath		198765	0					
ANR	198790	PrimaryExpression	"""."""		198765	1					
ANR	198791	ExpressionStatement	temporaryFilePath += temporaryFilesExtension	100:4:3710:3754	198765	14	True				
ANR	198792	AssignmentExpression	temporaryFilePath += temporaryFilesExtension		198765	0		+=			
ANR	198793	Identifier	temporaryFilePath		198765	0					
ANR	198794	Identifier	temporaryFilesExtension		198765	1					
ANR	198795	IdentifierDeclStatement	StatWrapper statWrapper ( temporaryFilePath ) ;	102:1:3758:3802	198765	15	True				
ANR	198796	IdentifierDecl	statWrapper ( temporaryFilePath )		198765	0					
ANR	198797	IdentifierDeclType	StatWrapper		198765	0					
ANR	198798	Identifier	statWrapper		198765	1					
ANR	198799	Identifier	temporaryFilePath		198765	2					
ANR	198800	IfStatement	if ( statWrapper . GetRc ( ) && statWrapper . GetErrno ( ) == ENOENT )		198765	16					
ANR	198801	Condition	statWrapper . GetRc ( ) && statWrapper . GetErrno ( ) == ENOENT	104:6:3812:3868	198765	0	True				
ANR	198802	AndExpression	statWrapper . GetRc ( ) && statWrapper . GetErrno ( ) == ENOENT		198765	0		&&			
ANR	198803	CallExpression	statWrapper . GetRc ( )		198765	0					
ANR	198804	Callee	statWrapper . GetRc		198765	0					
ANR	198805	MemberAccess	statWrapper . GetRc		198765	0					
ANR	198806	Identifier	statWrapper		198765	0					
ANR	198807	Identifier	GetRc		198765	1					
ANR	198808	ArgumentList			198765	1					
ANR	198809	EqualityExpression	statWrapper . GetErrno ( ) == ENOENT		198765	1		==			
ANR	198810	CallExpression	statWrapper . GetErrno ( )		198765	0					
ANR	198811	Callee	statWrapper . GetErrno		198765	0					
ANR	198812	MemberAccess	statWrapper . GetErrno		198765	0					
ANR	198813	Identifier	statWrapper		198765	0					
ANR	198814	Identifier	GetErrno		198765	1					
ANR	198815	ArgumentList			198765	1					
ANR	198816	Identifier	ENOENT		198765	1					
ANR	198817	CompoundStatement		11:66:371:371	198765	1					
ANR	198818	Statement	dprintf	105:2:3876:3882	198765	0	True				
ANR	198819	Statement	(	105:9:3883:3883	198765	1	True				
ANR	198820	Statement	D_ALWAYS	105:11:3885:3892	198765	2	True				
ANR	198821	Statement	","	105:19:3893:3893	198765	3	True				
ANR	198822	Statement	"""FilesOperations::unlinkFile the specified file %s"""	105:21:3895:3945	198765	4	True				
ANR	198823	Statement	"""does not exist\\n"""	106:9:3956:3973	198765	5	True				
ANR	198824	Statement	","	106:27:3974:3974	198765	6	True				
ANR	198825	Statement	temporaryFilePath	106:29:3976:3992	198765	7	True				
ANR	198826	Statement	.	106:46:3993:3993	198765	8	True				
ANR	198827	Statement	Value	106:47:3994:3998	198765	9	True				
ANR	198828	Statement	(	106:52:3999:3999	198765	10	True				
ANR	198829	Statement	)	106:54:4001:4001	198765	11	True				
ANR	198830	Statement	)	106:56:4003:4003	198765	12	True				
ANR	198831	ExpressionStatement		106:57:4004:4004	198765	13	True				
ANR	198832	ReturnStatement	return true ;	107:2:4008:4019	198765	14	True				
ANR	198833	Identifier	true		198765	0					
ANR	198834	IfStatement	if ( unlink ( temporaryFilePath . Value ( ) ) != 0 )		198765	17					
ANR	198835	Condition	unlink ( temporaryFilePath . Value ( ) ) != 0	110:5:4034:4074	198765	0	True				
ANR	198836	EqualityExpression	unlink ( temporaryFilePath . Value ( ) ) != 0		198765	0		!=			
ANR	198837	CallExpression	unlink ( temporaryFilePath . Value ( ) )		198765	0					
ANR	198838	Callee	unlink		198765	0					
ANR	198839	Identifier	unlink		198765	0					
ANR	198840	ArgumentList	temporaryFilePath . Value ( )		198765	1					
ANR	198841	Argument	temporaryFilePath . Value ( )		198765	0					
ANR	198842	CallExpression	temporaryFilePath . Value ( )		198765	0					
ANR	198843	Callee	temporaryFilePath . Value		198765	0					
ANR	198844	MemberAccess	temporaryFilePath . Value		198765	0					
ANR	198845	Identifier	temporaryFilePath		198765	0					
ANR	198846	Identifier	Value		198765	1					
ANR	198847	ArgumentList			198765	1					
ANR	198848	PrimaryExpression	0		198765	1					
ANR	198849	CompoundStatement		17:49:577:577	198765	1					
ANR	198850	Statement	dprintf	111:8:4088:4094	198765	0	True				
ANR	198851	Statement	(	111:15:4095:4095	198765	1	True				
ANR	198852	Statement	D_ALWAYS	111:17:4097:4104	198765	2	True				
ANR	198853	Statement	","	111:25:4105:4105	198765	3	True				
ANR	198854	Statement	"""FilesOperations::unlinkFile unable """	111:27:4107:4143	198765	4	True				
ANR	198855	Statement	"""to unlink %s, reason: %s\\n"""	112:27:4172:4199	198765	5	True				
ANR	198856	Statement	","	112:55:4200:4200	198765	6	True				
ANR	198857	Statement	temporaryFilePath	113:19:4221:4237	198765	7	True				
ANR	198858	Statement	.	113:36:4238:4238	198765	8	True				
ANR	198859	Statement	Value	113:37:4239:4243	198765	9	True				
ANR	198860	Statement	(	113:42:4244:4244	198765	10	True				
ANR	198861	Statement	)	113:44:4246:4246	198765	11	True				
ANR	198862	Statement	","	113:45:4247:4247	198765	12	True				
ANR	198863	Statement	strerror	113:47:4249:4256	198765	13	True				
ANR	198864	Statement	(	113:55:4257:4257	198765	14	True				
ANR	198865	Statement	errno	113:56:4258:4262	198765	15	True				
ANR	198866	Statement	)	113:61:4263:4263	198765	16	True				
ANR	198867	Statement	)	113:62:4264:4264	198765	17	True				
ANR	198868	ExpressionStatement		113:63:4265:4265	198765	18	True				
ANR	198869	ReturnStatement	return false ;	114:8:4275:4287	198765	19	True				
ANR	198870	Identifier	false		198765	0					
ANR	198871	ReturnStatement	return true ;	116:4:4299:4310	198765	18	True				
ANR	198872	Identifier	true		198765	0					
ANR	198873	ReturnType	bool		198765	1					
ANR	198874	Identifier	FilesOperations :: unlinkFile		198765	2					
ANR	198875	ParameterList	"const char * filePath , const char * temporaryFilesExtension"		198765	3					
ANR	198876	Parameter	const char * filePath	92:29:3428:3447	198765	0	True				
ANR	198877	ParameterType	const char *		198765	0					
ANR	198878	Identifier	filePath		198765	1					
ANR	198879	Parameter	const char * temporaryFilesExtension	93:11:3462:3496	198765	1	True				
ANR	198880	ParameterType	const char *		198765	0					
ANR	198881	Identifier	temporaryFilesExtension		198765	1					
ANR	198882	CFGEntryNode	ENTRY		198765		True				
ANR	198883	CFGExitNode	EXIT		198765		True				
ANR	198884	Symbol	statWrapper . GetRc		198765						
ANR	198885	Symbol	temporaryFilePath . Value		198765						
ANR	198886	Symbol	statWrapper		198765						
ANR	198887	Symbol	unlink		198765						
ANR	198888	Symbol	filePath		198765						
ANR	198889	Symbol	temporaryFilePath		198765						
ANR	198890	Symbol	true		198765						
ANR	198891	Symbol	false		198765						
ANR	198892	Symbol	ENOENT		198765						
ANR	198893	Symbol	temporaryFilesExtension		198765						
ANR	198894	Symbol	statWrapper . GetErrno		198765						
ANR	198895	Function	FilesOperations :: safeManipulateFile	132:0:4944:6260							
ANR	198896	FunctionDef	"FilesOperations :: safeManipulateFile (const char * filePath , const char * temporaryFilesExtension , ManipulationFunction manipulation)"		198895	0					
ANR	198897	CompoundStatement		136:0:5129:6260	198895	0					
ANR	198898	IdentifierDeclStatement	int retryTimes = 0 ;	137:4:5135:5153	198895	0	True				
ANR	198899	IdentifierDecl	retryTimes = 0		198895	0					
ANR	198900	IdentifierDeclType	int		198895	0					
ANR	198901	Identifier	retryTimes		198895	1					
ANR	198902	AssignmentExpression	retryTimes = 0		198895	2		=			
ANR	198903	Identifier	retryTimes		198895	0					
ANR	198904	PrimaryExpression	0		198895	1					
ANR	198905	WhileStatement	"while ( retryTimes < IO_RETRY_TIMES && ( * manipulation ) ( filePath , temporaryFilesExtension ) == false )"		198895	1					
ANR	198906	Condition	"retryTimes < IO_RETRY_TIMES && ( * manipulation ) ( filePath , temporaryFilesExtension ) == false"	139:11:5167:5293	198895	0	True				
ANR	198907	AndExpression	"retryTimes < IO_RETRY_TIMES && ( * manipulation ) ( filePath , temporaryFilesExtension ) == false"		198895	0		&&			
ANR	198908	RelationalExpression	retryTimes < IO_RETRY_TIMES		198895	0		<			
ANR	198909	Identifier	retryTimes		198895	0					
ANR	198910	Identifier	IO_RETRY_TIMES		198895	1					
ANR	198911	EqualityExpression	"( * manipulation ) ( filePath , temporaryFilesExtension ) == false"		198895	1		==			
ANR	198912	CallExpression	"( * manipulation ) ( filePath , temporaryFilesExtension )"		198895	0					
ANR	198913	Callee	* manipulation		198895	0					
ANR	198914	UnaryOperationExpression	* manipulation		198895	0					
ANR	198915	UnaryOperator	*		198895	0					
ANR	198916	Identifier	manipulation		198895	1					
ANR	198917	ArgumentList	filePath		198895	1					
ANR	198918	Argument	filePath		198895	0					
ANR	198919	Identifier	filePath		198895	0					
ANR	198920	Argument	temporaryFilesExtension		198895	1					
ANR	198921	Identifier	temporaryFilesExtension		198895	0					
ANR	198922	Identifier	false		198895	1					
ANR	198923	CompoundStatement		6:63:167:167	198895	1					
ANR	198924	ExpressionStatement	retryTimes ++	142:8:5307:5320	198895	0	True				
ANR	198925	PostIncDecOperationExpression	retryTimes ++		198895	0					
ANR	198926	Identifier	retryTimes		198895	0					
ANR	198927	IncDec	++		198895	1					
ANR	198928	IfStatement	if ( retryTimes == IO_RETRY_TIMES )		198895	2					
ANR	198929	Condition	retryTimes == IO_RETRY_TIMES	144:8:5336:5363	198895	0	True				
ANR	198930	EqualityExpression	retryTimes == IO_RETRY_TIMES		198895	0		==			
ANR	198931	Identifier	retryTimes		198895	0					
ANR	198932	Identifier	IO_RETRY_TIMES		198895	1					
ANR	198933	CompoundStatement		9:38:236:236	198895	1					
ANR	198934	Statement	dprintf	145:8:5376:5382	198895	0	True				
ANR	198935	Statement	(	145:15:5383:5383	198895	1	True				
ANR	198936	Statement	D_ALWAYS	145:17:5385:5392	198895	2	True				
ANR	198937	Statement	","	145:25:5393:5393	198895	3	True				
ANR	198938	Statement	"""FilesOperations::safeManipulateFile failed with """	145:27:5395:5444	198895	4	True				
ANR	198939	Statement	"""%s.%s %d times\\n"""	146:9:5455:5472	198895	5	True				
ANR	198940	Statement	","	146:27:5473:5473	198895	6	True				
ANR	198941	Statement	filePath	146:29:5475:5482	198895	7	True				
ANR	198942	Statement	","	146:37:5483:5483	198895	8	True				
ANR	198943	Statement	temporaryFilesExtension	147:16:5501:5523	198895	9	True				
ANR	198944	Statement	","	147:39:5524:5524	198895	10	True				
ANR	198945	Statement	IO_RETRY_TIMES	147:41:5526:5539	198895	11	True				
ANR	198946	Statement	)	147:56:5541:5541	198895	12	True				
ANR	198947	ExpressionStatement		147:57:5542:5542	198895	13	True				
ANR	198948	ReturnStatement	return false ;	148:8:5552:5564	198895	14	True				
ANR	198949	Identifier	false		198895	0					
ANR	198950	ReturnStatement	return true ;	166:4:6247:6258	198895	3	True				
ANR	198951	Identifier	true		198895	0					
ANR	198952	ReturnType	bool		198895	1					
ANR	198953	Identifier	FilesOperations :: safeManipulateFile		198895	2					
ANR	198954	ParameterList	"const char * filePath , const char * temporaryFilesExtension , ManipulationFunction manipulation"		198895	3					
ANR	198955	Parameter	const char * filePath	133:37:4986:5005	198895	0	True				
ANR	198956	ParameterType	const char *		198895	0					
ANR	198957	Identifier	filePath		198895	1					
ANR	198958	Parameter	const char * temporaryFilesExtension	134:15:5023:5057	198895	1	True				
ANR	198959	ParameterType	const char *		198895	0					
ANR	198960	Identifier	temporaryFilesExtension		198895	1					
ANR	198961	Parameter	ManipulationFunction manipulation	135:33:5093:5125	198895	2	True				
ANR	198962	ParameterType	ManipulationFunction		198895	0					
ANR	198963	Identifier	manipulation		198895	1					
ANR	198964	CFGEntryNode	ENTRY		198895		True				
ANR	198965	CFGExitNode	EXIT		198895		True				
ANR	198966	Symbol	retryTimes		198895						
ANR	198967	Symbol	IO_RETRY_TIMES		198895						
ANR	198968	Symbol	filePath		198895						
ANR	198969	Symbol	* manipulation		198895						
ANR	198970	Symbol	false		198895						
ANR	198971	Symbol	true		198895						
ANR	198972	Symbol	temporaryFilesExtension		198895						
ANR	198973	Symbol	manipulation		198895						
ANR	198974	Function	FilesOperations :: safeRotateFile	169:0:6263:6459							
ANR	198975	FunctionDef	"FilesOperations :: safeRotateFile (const char * filePath , const char * temporaryFilesExtension)"		198974	0					
ANR	198976	CompoundStatement		172:0:6377:6459	198974	0					
ANR	198977	ReturnStatement	"return safeManipulateFile ( filePath , temporaryFilesExtension , & rotateFile ) ;"	173:4:6383:6457	198974	0	True				
ANR	198978	CallExpression	"safeManipulateFile ( filePath , temporaryFilesExtension , & rotateFile )"		198974	0					
ANR	198979	Callee	safeManipulateFile		198974	0					
ANR	198980	Identifier	safeManipulateFile		198974	0					
ANR	198981	ArgumentList	filePath		198974	1					
ANR	198982	Argument	filePath		198974	0					
ANR	198983	Identifier	filePath		198974	0					
ANR	198984	Argument	temporaryFilesExtension		198974	1					
ANR	198985	Identifier	temporaryFilesExtension		198974	0					
ANR	198986	Argument	& rotateFile		198974	2					
ANR	198987	UnaryOperationExpression	& rotateFile		198974	0					
ANR	198988	UnaryOperator	&		198974	0					
ANR	198989	Identifier	rotateFile		198974	1					
ANR	198990	ReturnType	bool		198974	1					
ANR	198991	Identifier	FilesOperations :: safeRotateFile		198974	2					
ANR	198992	ParameterList	"const char * filePath , const char * temporaryFilesExtension"		198974	3					
ANR	198993	Parameter	const char * filePath	170:33:6301:6320	198974	0	True				
ANR	198994	ParameterType	const char *		198974	0					
ANR	198995	Identifier	filePath		198974	1					
ANR	198996	Parameter	const char * temporaryFilesExtension	171:15:6339:6373	198974	1	True				
ANR	198997	ParameterType	const char *		198974	0					
ANR	198998	Identifier	temporaryFilesExtension		198974	1					
ANR	198999	CFGEntryNode	ENTRY		198974		True				
ANR	199000	CFGExitNode	EXIT		198974		True				
ANR	199001	Symbol	filePath		198974						
ANR	199002	Symbol	safeManipulateFile		198974						
ANR	199003	Symbol	& rotateFile		198974						
ANR	199004	Symbol	temporaryFilesExtension		198974						
ANR	199005	Function	FilesOperations :: safeCopyFile	176:0:6462:6654							
ANR	199006	FunctionDef	"FilesOperations :: safeCopyFile (const char * filePath , const char * temporaryFilesExtension)"		199005	0					
ANR	199007	CompoundStatement		179:0:6575:6654	199005	0					
ANR	199008	ReturnStatement	"return safeManipulateFile ( filePath , temporaryFilesExtension , & copyFile ) ;"	180:3:6580:6652	199005	0	True				
ANR	199009	CallExpression	"safeManipulateFile ( filePath , temporaryFilesExtension , & copyFile )"		199005	0					
ANR	199010	Callee	safeManipulateFile		199005	0					
ANR	199011	Identifier	safeManipulateFile		199005	0					
ANR	199012	ArgumentList	filePath		199005	1					
ANR	199013	Argument	filePath		199005	0					
ANR	199014	Identifier	filePath		199005	0					
ANR	199015	Argument	temporaryFilesExtension		199005	1					
ANR	199016	Identifier	temporaryFilesExtension		199005	0					
ANR	199017	Argument	& copyFile		199005	2					
ANR	199018	UnaryOperationExpression	& copyFile		199005	0					
ANR	199019	UnaryOperator	&		199005	0					
ANR	199020	Identifier	copyFile		199005	1					
ANR	199021	ReturnType	bool		199005	1					
ANR	199022	Identifier	FilesOperations :: safeCopyFile		199005	2					
ANR	199023	ParameterList	"const char * filePath , const char * temporaryFilesExtension"		199005	3					
ANR	199024	Parameter	const char * filePath	177:31:6498:6517	199005	0	True				
ANR	199025	ParameterType	const char *		199005	0					
ANR	199026	Identifier	filePath		199005	1					
ANR	199027	Parameter	const char * temporaryFilesExtension	178:16:6537:6571	199005	1	True				
ANR	199028	ParameterType	const char *		199005	0					
ANR	199029	Identifier	temporaryFilesExtension		199005	1					
ANR	199030	CFGEntryNode	ENTRY		199005		True				
ANR	199031	CFGExitNode	EXIT		199005		True				
ANR	199032	Symbol	filePath		199005						
ANR	199033	Symbol	safeManipulateFile		199005						
ANR	199034	Symbol	temporaryFilesExtension		199005						
ANR	199035	Symbol	& copyFile		199005						
ANR	199036	Function	FilesOperations :: safeUnlinkFile	183:0:6657:6848							
ANR	199037	FunctionDef	"FilesOperations :: safeUnlinkFile (const char * filePath , const char * temporaryFilesExtension)"		199036	0					
ANR	199038	CompoundStatement		186:0:6767:6848	199036	0					
ANR	199039	ReturnStatement	"return safeManipulateFile ( filePath , temporaryFilesExtension , & unlinkFile ) ;"	187:3:6772:6846	199036	0	True				
ANR	199040	CallExpression	"safeManipulateFile ( filePath , temporaryFilesExtension , & unlinkFile )"		199036	0					
ANR	199041	Callee	safeManipulateFile		199036	0					
ANR	199042	Identifier	safeManipulateFile		199036	0					
ANR	199043	ArgumentList	filePath		199036	1					
ANR	199044	Argument	filePath		199036	0					
ANR	199045	Identifier	filePath		199036	0					
ANR	199046	Argument	temporaryFilesExtension		199036	1					
ANR	199047	Identifier	temporaryFilesExtension		199036	0					
ANR	199048	Argument	& unlinkFile		199036	2					
ANR	199049	UnaryOperationExpression	& unlinkFile		199036	0					
ANR	199050	UnaryOperator	&		199036	0					
ANR	199051	Identifier	unlinkFile		199036	1					
ANR	199052	ReturnType	bool		199036	1					
ANR	199053	Identifier	FilesOperations :: safeUnlinkFile		199036	2					
ANR	199054	ParameterList	"const char * filePath , const char * temporaryFilesExtension"		199036	3					
ANR	199055	Parameter	const char * filePath	184:33:6695:6714	199036	0	True				
ANR	199056	ParameterType	const char *		199036	0					
ANR	199057	Identifier	filePath		199036	1					
ANR	199058	Parameter	const char * temporaryFilesExtension	185:12:6729:6763	199036	1	True				
ANR	199059	ParameterType	const char *		199036	0					
ANR	199060	Identifier	temporaryFilesExtension		199036	1					
ANR	199061	CFGEntryNode	ENTRY		199036		True				
ANR	199062	CFGExitNode	EXIT		199036		True				
ANR	199063	Symbol	filePath		199036						
ANR	199064	Symbol	safeManipulateFile		199036						
ANR	199065	Symbol	temporaryFilesExtension		199036						
ANR	199066	Symbol	& unlinkFile		199036						
