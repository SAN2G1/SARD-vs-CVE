command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1189958	File	data/converged/CVE-2011-4930_htcondor/dc_lease_manager_lease.cpp								
ANR	1189959	Function	DCLeaseManagerLease :: DCLeaseManagerLease	35:1:1154:1445							
ANR	1189960	FunctionDef	DCLeaseManagerLease :: DCLeaseManagerLease (time_t now)		1189959	0					
ANR	1189961	CompoundStatement		40:0:1308:1445	1189959	0					
ANR	1189962	ExpressionStatement	m_lease_ad = NULL	41:1:1311:1328	1189959	0	True				
ANR	1189963	AssignmentExpression	m_lease_ad = NULL		1189959	0		=			
ANR	1189964	Identifier	m_lease_ad		1189959	0					
ANR	1189965	Identifier	NULL		1189959	1					
ANR	1189966	ExpressionStatement	m_lease_duration = 0	42:1:1331:1351	1189959	1	True				
ANR	1189967	AssignmentExpression	m_lease_duration = 0		1189959	0		=			
ANR	1189968	Identifier	m_lease_duration		1189959	0					
ANR	1189969	PrimaryExpression	0		1189959	1					
ANR	1189970	ExpressionStatement	m_release_lease_when_done = true	43:1:1354:1386	1189959	2	True				
ANR	1189971	AssignmentExpression	m_release_lease_when_done = true		1189959	0		=			
ANR	1189972	Identifier	m_release_lease_when_done		1189959	0					
ANR	1189973	Identifier	true		1189959	1					
ANR	1189974	ExpressionStatement	m_mark = false	44:1:1389:1403	1189959	3	True				
ANR	1189975	AssignmentExpression	m_mark = false		1189959	0		=			
ANR	1189976	Identifier	m_mark		1189959	0					
ANR	1189977	Identifier	false		1189959	1					
ANR	1189978	ExpressionStatement	m_dead = false	45:1:1406:1420	1189959	4	True				
ANR	1189979	AssignmentExpression	m_dead = false		1189959	0		=			
ANR	1189980	Identifier	m_dead		1189959	0					
ANR	1189981	Identifier	false		1189959	1					
ANR	1189982	ExpressionStatement	setLeaseStart ( now )	46:1:1423:1443	1189959	5	True				
ANR	1189983	CallExpression	setLeaseStart ( now )		1189959	0					
ANR	1189984	Callee	setLeaseStart		1189959	0					
ANR	1189985	Identifier	setLeaseStart		1189959	0					
ANR	1189986	ArgumentList	now		1189959	1					
ANR	1189987	Argument	now		1189959	0					
ANR	1189988	Identifier	now		1189959	0					
ANR	1189989	ReturnType	include < stdio . h >		1189959	1					
ANR	1189990	Identifier	DCLeaseManagerLease :: DCLeaseManagerLease		1189959	2					
ANR	1189991	ParameterList	time_t now		1189959	3					
ANR	1189992	Parameter	time_t now	39:42:1295:1304	1189959	0	True				
ANR	1189993	ParameterType	time_t		1189959	0					
ANR	1189994	Identifier	now		1189959	1					
ANR	1189995	CFGEntryNode	ENTRY		1189959		True				
ANR	1189996	CFGExitNode	EXIT		1189959		True				
ANR	1189997	Symbol	m_lease_ad		1189959						
ANR	1189998	Symbol	m_lease_duration		1189959						
ANR	1189999	Symbol	m_release_lease_when_done		1189959						
ANR	1190000	Symbol	m_mark		1189959						
ANR	1190001	Symbol	NULL		1189959						
ANR	1190002	Symbol	now		1189959						
ANR	1190003	Symbol	true		1189959						
ANR	1190004	Symbol	false		1189959						
ANR	1190005	Symbol	m_dead		1189959						
ANR	1190006	Function	DCLeaseManagerLease :: DCLeaseManagerLease	49:0:1448:1884							
ANR	1190007	FunctionDef	"DCLeaseManagerLease :: DCLeaseManagerLease (const DCLeaseManagerLease & lease , time_t now)"		1190006	0					
ANR	1190008	CompoundStatement		51:0:1549:1884	1190006	0					
ANR	1190009	ExpressionStatement	m_mark = false	52:1:1552:1566	1190006	0	True				
ANR	1190010	AssignmentExpression	m_mark = false		1190006	0		=			
ANR	1190011	Identifier	m_mark		1190006	0					
ANR	1190012	Identifier	false		1190006	1					
ANR	1190013	ExpressionStatement	m_dead = false	53:1:1569:1583	1190006	1	True				
ANR	1190014	AssignmentExpression	m_dead = false		1190006	0		=			
ANR	1190015	Identifier	m_dead		1190006	0					
ANR	1190016	Identifier	false		1190006	1					
ANR	1190017	IfStatement	if ( lease . leaseAd ( ) )		1190006	2					
ANR	1190018	Condition	lease . leaseAd ( )	54:6:1591:1606	1190006	0	True				
ANR	1190019	CallExpression	lease . leaseAd ( )		1190006	0					
ANR	1190020	Callee	lease . leaseAd		1190006	0					
ANR	1190021	MemberAccess	lease . leaseAd		1190006	0					
ANR	1190022	Identifier	lease		1190006	0					
ANR	1190023	Identifier	leaseAd		1190006	1					
ANR	1190024	ArgumentList			1190006	1					
ANR	1190025	CompoundStatement		4:25:60:60	1190006	1					
ANR	1190026	ExpressionStatement	this -> m_lease_ad = new classad :: ClassAd ( * ( lease . leaseAd ( ) ) )	55:2:1614:1676	1190006	0	True				
ANR	1190027	AssignmentExpression	this -> m_lease_ad = new classad :: ClassAd ( * ( lease . leaseAd ( ) ) )		1190006	0		=			
ANR	1190028	PtrMemberAccess	this -> m_lease_ad		1190006	0					
ANR	1190029	Identifier	this		1190006	0					
ANR	1190030	Identifier	m_lease_ad		1190006	1					
ANR	1190031	UnaryOperationExpression	* ( lease . leaseAd ( ) )		1190006	1					
ANR	1190032	UnaryOperator	*		1190006	0					
ANR	1190033	CallExpression	lease . leaseAd ( )		1190006	1					
ANR	1190034	Callee	lease . leaseAd		1190006	0					
ANR	1190035	MemberAccess	lease . leaseAd		1190006	0					
ANR	1190036	Identifier	lease		1190006	0					
ANR	1190037	Identifier	leaseAd		1190006	1					
ANR	1190038	ArgumentList			1190006	1					
ANR	1190039	ElseStatement	else		1190006	0					
ANR	1190040	CompoundStatement		6:8:136:136	1190006	0					
ANR	1190041	ExpressionStatement	this -> m_lease_ad = NULL	57:2:1690:1713	1190006	0	True				
ANR	1190042	AssignmentExpression	this -> m_lease_ad = NULL		1190006	0		=			
ANR	1190043	PtrMemberAccess	this -> m_lease_ad		1190006	0					
ANR	1190044	Identifier	this		1190006	0					
ANR	1190045	Identifier	m_lease_ad		1190006	1					
ANR	1190046	Identifier	NULL		1190006	1					
ANR	1190047	ExpressionStatement	setLeaseId ( lease . leaseId ( ) )	59:1:1719:1748	1190006	3	True				
ANR	1190048	CallExpression	setLeaseId ( lease . leaseId ( ) )		1190006	0					
ANR	1190049	Callee	setLeaseId		1190006	0					
ANR	1190050	Identifier	setLeaseId		1190006	0					
ANR	1190051	ArgumentList	lease . leaseId ( )		1190006	1					
ANR	1190052	Argument	lease . leaseId ( )		1190006	0					
ANR	1190053	CallExpression	lease . leaseId ( )		1190006	0					
ANR	1190054	Callee	lease . leaseId		1190006	0					
ANR	1190055	MemberAccess	lease . leaseId		1190006	0					
ANR	1190056	Identifier	lease		1190006	0					
ANR	1190057	Identifier	leaseId		1190006	1					
ANR	1190058	ArgumentList			1190006	1					
ANR	1190059	ExpressionStatement	setLeaseDuration ( lease . leaseDuration ( ) )	60:1:1751:1793	1190006	4	True				
ANR	1190060	CallExpression	setLeaseDuration ( lease . leaseDuration ( ) )		1190006	0					
ANR	1190061	Callee	setLeaseDuration		1190006	0					
ANR	1190062	Identifier	setLeaseDuration		1190006	0					
ANR	1190063	ArgumentList	lease . leaseDuration ( )		1190006	1					
ANR	1190064	Argument	lease . leaseDuration ( )		1190006	0					
ANR	1190065	CallExpression	lease . leaseDuration ( )		1190006	0					
ANR	1190066	Callee	lease . leaseDuration		1190006	0					
ANR	1190067	MemberAccess	lease . leaseDuration		1190006	0					
ANR	1190068	Identifier	lease		1190006	0					
ANR	1190069	Identifier	leaseDuration		1190006	1					
ANR	1190070	ArgumentList			1190006	1					
ANR	1190071	ExpressionStatement	this -> m_release_lease_when_done = lease . releaseLeaseWhenDone ( )	61:1:1796:1859	1190006	5	True				
ANR	1190072	AssignmentExpression	this -> m_release_lease_when_done = lease . releaseLeaseWhenDone ( )		1190006	0		=			
ANR	1190073	PtrMemberAccess	this -> m_release_lease_when_done		1190006	0					
ANR	1190074	Identifier	this		1190006	0					
ANR	1190075	Identifier	m_release_lease_when_done		1190006	1					
ANR	1190076	CallExpression	lease . releaseLeaseWhenDone ( )		1190006	1					
ANR	1190077	Callee	lease . releaseLeaseWhenDone		1190006	0					
ANR	1190078	MemberAccess	lease . releaseLeaseWhenDone		1190006	0					
ANR	1190079	Identifier	lease		1190006	0					
ANR	1190080	Identifier	releaseLeaseWhenDone		1190006	1					
ANR	1190081	ArgumentList			1190006	1					
ANR	1190082	ExpressionStatement	setLeaseStart ( now )	62:1:1862:1882	1190006	6	True				
ANR	1190083	CallExpression	setLeaseStart ( now )		1190006	0					
ANR	1190084	Callee	setLeaseStart		1190006	0					
ANR	1190085	Identifier	setLeaseStart		1190006	0					
ANR	1190086	ArgumentList	now		1190006	1					
ANR	1190087	Argument	now		1190006	0					
ANR	1190088	Identifier	now		1190006	0					
ANR	1190089	Identifier	DCLeaseManagerLease :: DCLeaseManagerLease		1190006	1					
ANR	1190090	ParameterList	"const DCLeaseManagerLease & lease , time_t now"		1190006	2					
ANR	1190091	Parameter	const DCLeaseManagerLease & lease	49:42:1490:1521	1190006	0	True				
ANR	1190092	ParameterType	const DCLeaseManagerLease &		1190006	0					
ANR	1190093	Identifier	lease		1190006	1					
ANR	1190094	Parameter	time_t now	50:12:1536:1545	1190006	1	True				
ANR	1190095	ParameterType	time_t		1190006	0					
ANR	1190096	Identifier	now		1190006	1					
ANR	1190097	CFGEntryNode	ENTRY		1190006		True				
ANR	1190098	CFGExitNode	EXIT		1190006		True				
ANR	1190099	Symbol	lease . leaseAd		1190006						
ANR	1190100	Symbol	this -> m_lease_ad		1190006						
ANR	1190101	Symbol	* ( lease . leaseAd ( ) )		1190006						
ANR	1190102	Symbol	NULL		1190006						
ANR	1190103	Symbol	* lease		1190006						
ANR	1190104	Symbol	false		1190006						
ANR	1190105	Symbol	this		1190006						
ANR	1190106	Symbol	this -> m_release_lease_when_done		1190006						
ANR	1190107	Symbol	* this		1190006						
ANR	1190108	Symbol	* lease . leaseAd		1190006						
ANR	1190109	Symbol	m_mark		1190006						
ANR	1190110	Symbol	lease . releaseLeaseWhenDone		1190006						
ANR	1190111	Symbol	lease . leaseDuration		1190006						
ANR	1190112	Symbol	now		1190006						
ANR	1190113	Symbol	lease . leaseId		1190006						
ANR	1190114	Symbol	lease		1190006						
ANR	1190115	Symbol	m_dead		1190006						
ANR	1190116	Function	DCLeaseManagerLease :: DCLeaseManagerLease	65:0:1887:2057							
ANR	1190117	FunctionDef	"DCLeaseManagerLease :: DCLeaseManagerLease (classad :: ClassAd * ad , time_t now)"		1190116	0					
ANR	1190118	CompoundStatement		69:0:1972:2057	1190116	0					
ANR	1190119	ExpressionStatement	m_mark = false	70:1:1975:1989	1190116	0	True				
ANR	1190120	AssignmentExpression	m_mark = false		1190116	0		=			
ANR	1190121	Identifier	m_mark		1190116	0					
ANR	1190122	Identifier	false		1190116	1					
ANR	1190123	ExpressionStatement	m_dead = false	71:1:1992:2006	1190116	1	True				
ANR	1190124	AssignmentExpression	m_dead = false		1190116	0		=			
ANR	1190125	Identifier	m_dead		1190116	0					
ANR	1190126	Identifier	false		1190116	1					
ANR	1190127	ExpressionStatement	m_lease_ad = NULL	72:1:2009:2026	1190116	2	True				
ANR	1190128	AssignmentExpression	m_lease_ad = NULL		1190116	0		=			
ANR	1190129	Identifier	m_lease_ad		1190116	0					
ANR	1190130	Identifier	NULL		1190116	1					
ANR	1190131	ExpressionStatement	"initFromClassAd ( ad , now )"	73:1:2029:2055	1190116	3	True				
ANR	1190132	CallExpression	"initFromClassAd ( ad , now )"		1190116	0					
ANR	1190133	Callee	initFromClassAd		1190116	0					
ANR	1190134	Identifier	initFromClassAd		1190116	0					
ANR	1190135	ArgumentList	ad		1190116	1					
ANR	1190136	Argument	ad		1190116	0					
ANR	1190137	Identifier	ad		1190116	0					
ANR	1190138	Argument	now		1190116	1					
ANR	1190139	Identifier	now		1190116	0					
ANR	1190140	Identifier	DCLeaseManagerLease :: DCLeaseManagerLease		1190116	1					
ANR	1190141	ParameterList	"classad :: ClassAd * ad , time_t now"		1190116	2					
ANR	1190142	Parameter	classad :: ClassAd * ad	66:1:1930:1950	1190116	0	True				
ANR	1190143	ParameterType	classad :: ClassAd *		1190116	0					
ANR	1190144	Identifier	ad		1190116	1					
ANR	1190145	Parameter	time_t now	67:1:1954:1967	1190116	1	True				
ANR	1190146	ParameterType	time_t		1190116	0					
ANR	1190147	Identifier	now		1190116	1					
ANR	1190148	CFGEntryNode	ENTRY		1190116		True				
ANR	1190149	CFGExitNode	EXIT		1190116		True				
ANR	1190150	Symbol	m_mark		1190116						
ANR	1190151	Symbol	m_lease_ad		1190116						
ANR	1190152	Symbol	ad		1190116						
ANR	1190153	Symbol	NULL		1190116						
ANR	1190154	Symbol	now		1190116						
ANR	1190155	Symbol	false		1190116						
ANR	1190156	Symbol	m_dead		1190116						
ANR	1190157	Function	DCLeaseManagerLease :: DCLeaseManagerLease	76:0:2060:2233							
ANR	1190158	FunctionDef	"DCLeaseManagerLease :: DCLeaseManagerLease (const classad :: ClassAd & ad , time_t now)"		1190157	0					
ANR	1190159	CompoundStatement		80:0:2148:2233	1190157	0					
ANR	1190160	ExpressionStatement	m_mark = false	81:1:2151:2165	1190157	0	True				
ANR	1190161	AssignmentExpression	m_mark = false		1190157	0		=			
ANR	1190162	Identifier	m_mark		1190157	0					
ANR	1190163	Identifier	false		1190157	1					
ANR	1190164	ExpressionStatement	m_dead = false	82:1:2168:2182	1190157	1	True				
ANR	1190165	AssignmentExpression	m_dead = false		1190157	0		=			
ANR	1190166	Identifier	m_dead		1190157	0					
ANR	1190167	Identifier	false		1190157	1					
ANR	1190168	ExpressionStatement	m_lease_ad = NULL	83:1:2185:2202	1190157	2	True				
ANR	1190169	AssignmentExpression	m_lease_ad = NULL		1190157	0		=			
ANR	1190170	Identifier	m_lease_ad		1190157	0					
ANR	1190171	Identifier	NULL		1190157	1					
ANR	1190172	ExpressionStatement	"initFromClassAd ( ad , now )"	84:1:2205:2231	1190157	3	True				
ANR	1190173	CallExpression	"initFromClassAd ( ad , now )"		1190157	0					
ANR	1190174	Callee	initFromClassAd		1190157	0					
ANR	1190175	Identifier	initFromClassAd		1190157	0					
ANR	1190176	ArgumentList	ad		1190157	1					
ANR	1190177	Argument	ad		1190157	0					
ANR	1190178	Identifier	ad		1190157	0					
ANR	1190179	Argument	now		1190157	1					
ANR	1190180	Identifier	now		1190157	0					
ANR	1190181	Identifier	DCLeaseManagerLease :: DCLeaseManagerLease		1190157	1					
ANR	1190182	ParameterList	"const classad :: ClassAd & ad , time_t now"		1190157	2					
ANR	1190183	Parameter	const classad :: ClassAd & ad	77:0:2102:2127	1190157	0	True				
ANR	1190184	ParameterType	const classad :: ClassAd &		1190157	0					
ANR	1190185	Identifier	ad		1190157	1					
ANR	1190186	Parameter	time_t now	78:1:2131:2143	1190157	1	True				
ANR	1190187	ParameterType	time_t		1190157	0					
ANR	1190188	Identifier	now		1190157	1					
ANR	1190189	CFGEntryNode	ENTRY		1190157		True				
ANR	1190190	CFGExitNode	EXIT		1190157		True				
ANR	1190191	Symbol	m_mark		1190157						
ANR	1190192	Symbol	m_lease_ad		1190157						
ANR	1190193	Symbol	ad		1190157						
ANR	1190194	Symbol	NULL		1190157						
ANR	1190195	Symbol	now		1190157						
ANR	1190196	Symbol	false		1190157						
ANR	1190197	Symbol	m_dead		1190157						
ANR	1190198	Function	DCLeaseManagerLease :: DCLeaseManagerLease	87:0:2236:2575							
ANR	1190199	FunctionDef	"DCLeaseManagerLease :: DCLeaseManagerLease (const string & lease_id , int lease_duration , bool release_when_done , time_t now)"		1190198	0					
ANR	1190200	CompoundStatement		92:0:2374:2575	1190198	0					
ANR	1190201	ExpressionStatement	m_mark = false	93:1:2377:2391	1190198	0	True				
ANR	1190202	AssignmentExpression	m_mark = false		1190198	0		=			
ANR	1190203	Identifier	m_mark		1190198	0					
ANR	1190204	Identifier	false		1190198	1					
ANR	1190205	ExpressionStatement	m_dead = false	94:1:2394:2408	1190198	1	True				
ANR	1190206	AssignmentExpression	m_dead = false		1190198	0		=			
ANR	1190207	Identifier	m_dead		1190198	0					
ANR	1190208	Identifier	false		1190198	1					
ANR	1190209	ExpressionStatement	this -> m_lease_ad = NULL	95:1:2411:2434	1190198	2	True				
ANR	1190210	AssignmentExpression	this -> m_lease_ad = NULL		1190198	0		=			
ANR	1190211	PtrMemberAccess	this -> m_lease_ad		1190198	0					
ANR	1190212	Identifier	this		1190198	0					
ANR	1190213	Identifier	m_lease_ad		1190198	1					
ANR	1190214	Identifier	NULL		1190198	1					
ANR	1190215	ExpressionStatement	setLeaseId ( lease_id )	96:1:2437:2459	1190198	3	True				
ANR	1190216	CallExpression	setLeaseId ( lease_id )		1190198	0					
ANR	1190217	Callee	setLeaseId		1190198	0					
ANR	1190218	Identifier	setLeaseId		1190198	0					
ANR	1190219	ArgumentList	lease_id		1190198	1					
ANR	1190220	Argument	lease_id		1190198	0					
ANR	1190221	Identifier	lease_id		1190198	0					
ANR	1190222	ExpressionStatement	setLeaseDuration ( lease_duration )	97:1:2462:2496	1190198	4	True				
ANR	1190223	CallExpression	setLeaseDuration ( lease_duration )		1190198	0					
ANR	1190224	Callee	setLeaseDuration		1190198	0					
ANR	1190225	Identifier	setLeaseDuration		1190198	0					
ANR	1190226	ArgumentList	lease_duration		1190198	1					
ANR	1190227	Argument	lease_duration		1190198	0					
ANR	1190228	Identifier	lease_duration		1190198	0					
ANR	1190229	ExpressionStatement	this -> m_release_lease_when_done = release_when_done	98:1:2499:2550	1190198	5	True				
ANR	1190230	AssignmentExpression	this -> m_release_lease_when_done = release_when_done		1190198	0		=			
ANR	1190231	PtrMemberAccess	this -> m_release_lease_when_done		1190198	0					
ANR	1190232	Identifier	this		1190198	0					
ANR	1190233	Identifier	m_release_lease_when_done		1190198	1					
ANR	1190234	Identifier	release_when_done		1190198	1					
ANR	1190235	ExpressionStatement	setLeaseStart ( now )	99:1:2553:2573	1190198	6	True				
ANR	1190236	CallExpression	setLeaseStart ( now )		1190198	0					
ANR	1190237	Callee	setLeaseStart		1190198	0					
ANR	1190238	Identifier	setLeaseStart		1190198	0					
ANR	1190239	ArgumentList	now		1190198	1					
ANR	1190240	Argument	now		1190198	0					
ANR	1190241	Identifier	now		1190198	0					
ANR	1190242	Identifier	DCLeaseManagerLease :: DCLeaseManagerLease		1190198	1					
ANR	1190243	ParameterList	"const string & lease_id , int lease_duration , bool release_when_done , time_t now"		1190198	2					
ANR	1190244	Parameter	const string & lease_id	88:1:2279:2301	1190198	0	True				
ANR	1190245	ParameterType	const string &		1190198	0					
ANR	1190246	Identifier	lease_id		1190198	1					
ANR	1190247	Parameter	int lease_duration	89:1:2305:2326	1190198	1	True				
ANR	1190248	ParameterType	int		1190198	0					
ANR	1190249	Identifier	lease_duration		1190198	1					
ANR	1190250	Parameter	bool release_when_done	90:1:2330:2354	1190198	2	True				
ANR	1190251	ParameterType	bool		1190198	0					
ANR	1190252	Identifier	release_when_done		1190198	1					
ANR	1190253	Parameter	time_t now	91:1:2358:2370	1190198	3	True				
ANR	1190254	ParameterType	time_t		1190198	0					
ANR	1190255	Identifier	now		1190198	1					
ANR	1190256	CFGEntryNode	ENTRY		1190198		True				
ANR	1190257	CFGExitNode	EXIT		1190198		True				
ANR	1190258	Symbol	release_when_done		1190198						
ANR	1190259	Symbol	this -> m_lease_ad		1190198						
ANR	1190260	Symbol	* this		1190198						
ANR	1190261	Symbol	m_mark		1190198						
ANR	1190262	Symbol	NULL		1190198						
ANR	1190263	Symbol	now		1190198						
ANR	1190264	Symbol	lease_duration		1190198						
ANR	1190265	Symbol	false		1190198						
ANR	1190266	Symbol	this		1190198						
ANR	1190267	Symbol	this -> m_release_lease_when_done		1190198						
ANR	1190268	Symbol	lease_id		1190198						
ANR	1190269	Symbol	m_dead		1190198						
ANR	1190270	Function	DCLeaseManagerLease :: ~DCLeaseManagerLease	102:0:2578:2675							
ANR	1190271	FunctionDef	DCLeaseManagerLease :: ~DCLeaseManagerLease ()		1190270	0					
ANR	1190272	CompoundStatement		103:0:2628:2675	1190270	0					
ANR	1190273	IfStatement	if ( m_lease_ad )		1190270	0					
ANR	1190274	Condition	m_lease_ad	104:6:2636:2645	1190270	0	True				
ANR	1190275	Identifier	m_lease_ad		1190270	0					
ANR	1190276	CompoundStatement		2:19:20:20	1190270	1					
ANR	1190277	Statement	delete	105:2:2653:2658	1190270	0	True				
ANR	1190278	ExpressionStatement	m_lease_ad	105:9:2660:2670	1190270	1	True				
ANR	1190279	Identifier	m_lease_ad		1190270	0					
ANR	1190280	Identifier	DCLeaseManagerLease :: ~DCLeaseManagerLease		1190270	1					
ANR	1190281	ParameterList			1190270	2					
ANR	1190282	CFGEntryNode	ENTRY		1190270		True				
ANR	1190283	CFGExitNode	EXIT		1190270		True				
ANR	1190284	Symbol	m_lease_ad		1190270						
ANR	1190285	Function	DCLeaseManagerLease :: setLeaseStart	109:0:2678:2811							
ANR	1190286	FunctionDef	DCLeaseManagerLease :: setLeaseStart (time_t now)		1190285	0					
ANR	1190287	CompoundStatement		111:0:2731:2811	1190285	0					
ANR	1190288	IfStatement	if ( ! now )		1190285	0					
ANR	1190289	Condition	! now	112:6:2739:2742	1190285	0	True				
ANR	1190290	UnaryOperationExpression	! now		1190285	0					
ANR	1190291	UnaryOperator	!		1190285	0					
ANR	1190292	Identifier	now		1190285	1					
ANR	1190293	CompoundStatement		2:13:14:14	1190285	1					
ANR	1190294	ExpressionStatement	now = time ( NULL )	113:2:2750:2768	1190285	0	True				
ANR	1190295	AssignmentExpression	now = time ( NULL )		1190285	0		=			
ANR	1190296	Identifier	now		1190285	0					
ANR	1190297	CallExpression	time ( NULL )		1190285	1					
ANR	1190298	Callee	time		1190285	0					
ANR	1190299	Identifier	time		1190285	0					
ANR	1190300	ArgumentList	NULL		1190285	1					
ANR	1190301	Argument	NULL		1190285	0					
ANR	1190302	Identifier	NULL		1190285	0					
ANR	1190303	ExpressionStatement	this -> m_lease_time = now	115:1:2774:2798	1190285	1	True				
ANR	1190304	AssignmentExpression	this -> m_lease_time = now		1190285	0		=			
ANR	1190305	PtrMemberAccess	this -> m_lease_time		1190285	0					
ANR	1190306	Identifier	this		1190285	0					
ANR	1190307	Identifier	m_lease_time		1190285	1					
ANR	1190308	Identifier	now		1190285	1					
ANR	1190309	ReturnStatement	return 0 ;	116:1:2801:2809	1190285	2	True				
ANR	1190310	PrimaryExpression	0		1190285	0					
ANR	1190311	ReturnType	int		1190285	1					
ANR	1190312	Identifier	DCLeaseManagerLease :: setLeaseStart		1190285	2					
ANR	1190313	ParameterList	time_t now		1190285	3					
ANR	1190314	Parameter	time_t now	110:36:2718:2727	1190285	0	True				
ANR	1190315	ParameterType	time_t		1190285	0					
ANR	1190316	Identifier	now		1190285	1					
ANR	1190317	CFGEntryNode	ENTRY		1190285		True				
ANR	1190318	CFGExitNode	EXIT		1190285		True				
ANR	1190319	Symbol	* this		1190285						
ANR	1190320	Symbol	NULL		1190285						
ANR	1190321	Symbol	now		1190285						
ANR	1190322	Symbol	this		1190285						
ANR	1190323	Symbol	time		1190285						
ANR	1190324	Symbol	this -> m_lease_time		1190285						
ANR	1190325	Function	DCLeaseManagerLease :: initFromClassAd	119:0:2814:2966							
ANR	1190326	FunctionDef	"DCLeaseManagerLease :: initFromClassAd (const classad :: ClassAd & ad , time_t now)"		1190325	0					
ANR	1190327	CompoundStatement		124:0:2904:2966	1190325	0					
ANR	1190328	ReturnStatement	"return initFromClassAd ( new classad :: ClassAd ( ad ) , now ) ;"	125:1:2907:2964	1190325	0	True				
ANR	1190329	CallExpression	"initFromClassAd ( new classad :: ClassAd ( ad ) , now )"		1190325	0					
ANR	1190330	Callee	initFromClassAd		1190325	0					
ANR	1190331	Identifier	initFromClassAd		1190325	0					
ANR	1190332	ArgumentList	ad		1190325	1					
ANR	1190333	Argument	ad		1190325	0					
ANR	1190334	Identifier	ad		1190325	0					
ANR	1190335	Argument	now		1190325	1					
ANR	1190336	Identifier	now		1190325	0					
ANR	1190337	ReturnType	int		1190325	1					
ANR	1190338	Identifier	DCLeaseManagerLease :: initFromClassAd		1190325	2					
ANR	1190339	ParameterList	"const classad :: ClassAd & ad , time_t now"		1190325	3					
ANR	1190340	Parameter	const classad :: ClassAd & ad	121:1:2857:2882	1190325	0	True				
ANR	1190341	ParameterType	const classad :: ClassAd &		1190325	0					
ANR	1190342	Identifier	ad		1190325	1					
ANR	1190343	Parameter	time_t now	122:1:2886:2899	1190325	1	True				
ANR	1190344	ParameterType	time_t		1190325	0					
ANR	1190345	Identifier	now		1190325	1					
ANR	1190346	CFGEntryNode	ENTRY		1190325		True				
ANR	1190347	CFGExitNode	EXIT		1190325		True				
ANR	1190348	Symbol	ad		1190325						
ANR	1190349	Symbol	now		1190325						
ANR	1190350	Symbol	initFromClassAd		1190325						
ANR	1190351	Function	DCLeaseManagerLease :: initFromClassAd	128:0:2969:3619							
ANR	1190352	FunctionDef	"DCLeaseManagerLease :: initFromClassAd (classad :: ClassAd * ad , time_t now)"		1190351	0					
ANR	1190353	CompoundStatement		133:0:3052:3619	1190351	0					
ANR	1190354	IdentifierDeclStatement	int status = 0 ;	134:1:3055:3070	1190351	0	True				
ANR	1190355	IdentifierDecl	status = 0		1190351	0					
ANR	1190356	IdentifierDeclType	int		1190351	0					
ANR	1190357	Identifier	status		1190351	1					
ANR	1190358	AssignmentExpression	status = 0		1190351	2		=			
ANR	1190359	Identifier	status		1190351	0					
ANR	1190360	PrimaryExpression	0		1190351	1					
ANR	1190361	IfStatement	if ( m_lease_ad && ( m_lease_ad != ad ) )		1190351	1					
ANR	1190362	Condition	m_lease_ad && ( m_lease_ad != ad )	135:6:3078:3110	1190351	0	True				
ANR	1190363	AndExpression	m_lease_ad && ( m_lease_ad != ad )		1190351	0		&&			
ANR	1190364	Identifier	m_lease_ad		1190351	0					
ANR	1190365	EqualityExpression	m_lease_ad != ad		1190351	1		!=			
ANR	1190366	Identifier	m_lease_ad		1190351	0					
ANR	1190367	Identifier	ad		1190351	1					
ANR	1190368	CompoundStatement		3:42:61:61	1190351	1					
ANR	1190369	Statement	delete	136:2:3118:3123	1190351	0	True				
ANR	1190370	ExpressionStatement	m_lease_ad	136:9:3125:3135	1190351	1	True				
ANR	1190371	Identifier	m_lease_ad		1190351	0					
ANR	1190372	ExpressionStatement	m_lease_ad = NULL	137:2:3139:3156	1190351	2	True				
ANR	1190373	AssignmentExpression	m_lease_ad = NULL		1190351	0		=			
ANR	1190374	Identifier	m_lease_ad		1190351	0					
ANR	1190375	Identifier	NULL		1190351	1					
ANR	1190376	IfStatement	if ( ! ad )		1190351	2					
ANR	1190377	Condition	! ad	139:6:3167:3169	1190351	0	True				
ANR	1190378	UnaryOperationExpression	! ad		1190351	0					
ANR	1190379	UnaryOperator	!		1190351	0					
ANR	1190380	Identifier	ad		1190351	1					
ANR	1190381	CompoundStatement		7:12:120:120	1190351	1					
ANR	1190382	ReturnStatement	return 0 ;	140:2:3177:3185	1190351	0	True				
ANR	1190383	PrimaryExpression	0		1190351	0					
ANR	1190384	ExpressionStatement	m_lease_ad = ad	143:1:3192:3207	1190351	3	True				
ANR	1190385	AssignmentExpression	m_lease_ad = ad		1190351	0		=			
ANR	1190386	Identifier	m_lease_ad		1190351	0					
ANR	1190387	Identifier	ad		1190351	1					
ANR	1190388	IfStatement	"if ( ! m_lease_ad -> EvaluateAttrString ( ""LeaseId"" , m_lease_id ) )"		1190351	4					
ANR	1190389	Condition	"! m_lease_ad -> EvaluateAttrString ( ""LeaseId"" , m_lease_id )"	144:6:3215:3270	1190351	0	True				
ANR	1190390	UnaryOperationExpression	"! m_lease_ad -> EvaluateAttrString ( ""LeaseId"" , m_lease_id )"		1190351	0					
ANR	1190391	UnaryOperator	!		1190351	0					
ANR	1190392	CallExpression	"m_lease_ad -> EvaluateAttrString ( ""LeaseId"" , m_lease_id )"		1190351	1					
ANR	1190393	Callee	m_lease_ad -> EvaluateAttrString		1190351	0					
ANR	1190394	PtrMemberAccess	m_lease_ad -> EvaluateAttrString		1190351	0					
ANR	1190395	Identifier	m_lease_ad		1190351	0					
ANR	1190396	Identifier	EvaluateAttrString		1190351	1					
ANR	1190397	ArgumentList	"""LeaseId"""		1190351	1					
ANR	1190398	Argument	"""LeaseId"""		1190351	0					
ANR	1190399	PrimaryExpression	"""LeaseId"""		1190351	0					
ANR	1190400	Argument	m_lease_id		1190351	1					
ANR	1190401	Identifier	m_lease_id		1190351	0					
ANR	1190402	CompoundStatement		12:65:221:221	1190351	1					
ANR	1190403	ExpressionStatement	status = 1	145:2:3278:3288	1190351	0	True				
ANR	1190404	AssignmentExpression	status = 1		1190351	0		=			
ANR	1190405	Identifier	status		1190351	0					
ANR	1190406	PrimaryExpression	1		1190351	1					
ANR	1190407	ExpressionStatement	"m_lease_id = """""	146:2:3292:3307	1190351	1	True				
ANR	1190408	AssignmentExpression	"m_lease_id = """""		1190351	0		=			
ANR	1190409	Identifier	m_lease_id		1190351	0					
ANR	1190410	PrimaryExpression	""""""		1190351	1					
ANR	1190411	IfStatement	"if ( ! m_lease_ad -> EvaluateAttrInt ( ""LeaseDuration"" , m_lease_duration ) )"		1190351	5					
ANR	1190412	Condition	"! m_lease_ad -> EvaluateAttrInt ( ""LeaseDuration"" , m_lease_duration )"	148:6:3318:3382	1190351	0	True				
ANR	1190413	UnaryOperationExpression	"! m_lease_ad -> EvaluateAttrInt ( ""LeaseDuration"" , m_lease_duration )"		1190351	0					
ANR	1190414	UnaryOperator	!		1190351	0					
ANR	1190415	CallExpression	"m_lease_ad -> EvaluateAttrInt ( ""LeaseDuration"" , m_lease_duration )"		1190351	1					
ANR	1190416	Callee	m_lease_ad -> EvaluateAttrInt		1190351	0					
ANR	1190417	PtrMemberAccess	m_lease_ad -> EvaluateAttrInt		1190351	0					
ANR	1190418	Identifier	m_lease_ad		1190351	0					
ANR	1190419	Identifier	EvaluateAttrInt		1190351	1					
ANR	1190420	ArgumentList	"""LeaseDuration"""		1190351	1					
ANR	1190421	Argument	"""LeaseDuration"""		1190351	0					
ANR	1190422	PrimaryExpression	"""LeaseDuration"""		1190351	0					
ANR	1190423	Argument	m_lease_duration		1190351	1					
ANR	1190424	Identifier	m_lease_duration		1190351	0					
ANR	1190425	CompoundStatement		16:74:333:333	1190351	1					
ANR	1190426	ExpressionStatement	status = 1	149:2:3390:3400	1190351	0	True				
ANR	1190427	AssignmentExpression	status = 1		1190351	0		=			
ANR	1190428	Identifier	status		1190351	0					
ANR	1190429	PrimaryExpression	1		1190351	1					
ANR	1190430	ExpressionStatement	m_lease_duration = 0	150:2:3404:3424	1190351	1	True				
ANR	1190431	AssignmentExpression	m_lease_duration = 0		1190351	0		=			
ANR	1190432	Identifier	m_lease_duration		1190351	0					
ANR	1190433	PrimaryExpression	0		1190351	1					
ANR	1190434	IfStatement	"if ( ! m_lease_ad -> EvaluateAttrBool ( ""ReleaseWhenDone"" , m_release_lease_when_done ) )"		1190351	6					
ANR	1190435	Condition	"! m_lease_ad -> EvaluateAttrBool ( ""ReleaseWhenDone"" , m_release_lease_when_done )"	152:6:3435:3521	1190351	0	True				
ANR	1190436	UnaryOperationExpression	"! m_lease_ad -> EvaluateAttrBool ( ""ReleaseWhenDone"" , m_release_lease_when_done )"		1190351	0					
ANR	1190437	UnaryOperator	!		1190351	0					
ANR	1190438	CallExpression	"m_lease_ad -> EvaluateAttrBool ( ""ReleaseWhenDone"" , m_release_lease_when_done )"		1190351	1					
ANR	1190439	Callee	m_lease_ad -> EvaluateAttrBool		1190351	0					
ANR	1190440	PtrMemberAccess	m_lease_ad -> EvaluateAttrBool		1190351	0					
ANR	1190441	Identifier	m_lease_ad		1190351	0					
ANR	1190442	Identifier	EvaluateAttrBool		1190351	1					
ANR	1190443	ArgumentList	"""ReleaseWhenDone"""		1190351	1					
ANR	1190444	Argument	"""ReleaseWhenDone"""		1190351	0					
ANR	1190445	PrimaryExpression	"""ReleaseWhenDone"""		1190351	0					
ANR	1190446	Argument	m_release_lease_when_done		1190351	1					
ANR	1190447	Identifier	m_release_lease_when_done		1190351	0					
ANR	1190448	CompoundStatement		21:40:472:472	1190351	1					
ANR	1190449	ExpressionStatement	status = 1	154:2:3529:3539	1190351	0	True				
ANR	1190450	AssignmentExpression	status = 1		1190351	0		=			
ANR	1190451	Identifier	status		1190351	0					
ANR	1190452	PrimaryExpression	1		1190351	1					
ANR	1190453	ExpressionStatement	m_release_lease_when_done = true	155:2:3543:3575	1190351	1	True				
ANR	1190454	AssignmentExpression	m_release_lease_when_done = true		1190351	0		=			
ANR	1190455	Identifier	m_release_lease_when_done		1190351	0					
ANR	1190456	Identifier	true		1190351	1					
ANR	1190457	ExpressionStatement	setLeaseStart ( now )	157:1:3581:3601	1190351	7	True				
ANR	1190458	CallExpression	setLeaseStart ( now )		1190351	0					
ANR	1190459	Callee	setLeaseStart		1190351	0					
ANR	1190460	Identifier	setLeaseStart		1190351	0					
ANR	1190461	ArgumentList	now		1190351	1					
ANR	1190462	Argument	now		1190351	0					
ANR	1190463	Identifier	now		1190351	0					
ANR	1190464	ReturnStatement	return status ;	158:1:3604:3617	1190351	8	True				
ANR	1190465	Identifier	status		1190351	0					
ANR	1190466	ReturnType	int		1190351	1					
ANR	1190467	Identifier	DCLeaseManagerLease :: initFromClassAd		1190351	2					
ANR	1190468	ParameterList	"classad :: ClassAd * ad , time_t now"		1190351	3					
ANR	1190469	Parameter	classad :: ClassAd * ad	130:1:3012:3031	1190351	0	True				
ANR	1190470	ParameterType	classad :: ClassAd *		1190351	0					
ANR	1190471	Identifier	ad		1190351	1					
ANR	1190472	Parameter	time_t now	131:1:3035:3047	1190351	1	True				
ANR	1190473	ParameterType	time_t		1190351	0					
ANR	1190474	Identifier	now		1190351	1					
ANR	1190475	CFGEntryNode	ENTRY		1190351		True				
ANR	1190476	CFGExitNode	EXIT		1190351		True				
ANR	1190477	Symbol	m_lease_ad -> EvaluateAttrString		1190351						
ANR	1190478	Symbol	m_lease_ad -> EvaluateAttrInt		1190351						
ANR	1190479	Symbol	m_release_lease_when_done		1190351						
ANR	1190480	Symbol	ad		1190351						
ANR	1190481	Symbol	NULL		1190351						
ANR	1190482	Symbol	m_lease_ad		1190351						
ANR	1190483	Symbol	m_lease_duration		1190351						
ANR	1190484	Symbol	* m_lease_ad		1190351						
ANR	1190485	Symbol	now		1190351						
ANR	1190486	Symbol	m_lease_ad -> EvaluateAttrBool		1190351						
ANR	1190487	Symbol	true		1190351						
ANR	1190488	Symbol	m_lease_id		1190351						
ANR	1190489	Symbol	status		1190351						
ANR	1190490	Function	DCLeaseManagerLease :: copyUpdates	161:0:3622:4468							
ANR	1190491	FunctionDef	DCLeaseManagerLease :: copyUpdates (const DCLeaseManagerLease & lease)		1190490	0					
ANR	1190492	CompoundStatement		163:0:3695:4468	1190490	0					
ANR	1190493	ExpressionStatement	setLeaseDuration ( lease . leaseDuration ( ) )	168:1:3755:3797	1190490	0	True				
ANR	1190494	CallExpression	setLeaseDuration ( lease . leaseDuration ( ) )		1190490	0					
ANR	1190495	Callee	setLeaseDuration		1190490	0					
ANR	1190496	Identifier	setLeaseDuration		1190490	0					
ANR	1190497	ArgumentList	lease . leaseDuration ( )		1190490	1					
ANR	1190498	Argument	lease . leaseDuration ( )		1190490	0					
ANR	1190499	CallExpression	lease . leaseDuration ( )		1190490	0					
ANR	1190500	Callee	lease . leaseDuration		1190490	0					
ANR	1190501	MemberAccess	lease . leaseDuration		1190490	0					
ANR	1190502	Identifier	lease		1190490	0					
ANR	1190503	Identifier	leaseDuration		1190490	1					
ANR	1190504	ArgumentList			1190490	1					
ANR	1190505	ExpressionStatement	this -> m_release_lease_when_done = lease . releaseLeaseWhenDone ( )	169:1:3800:3863	1190490	1	True				
ANR	1190506	AssignmentExpression	this -> m_release_lease_when_done = lease . releaseLeaseWhenDone ( )		1190490	0		=			
ANR	1190507	PtrMemberAccess	this -> m_release_lease_when_done		1190490	0					
ANR	1190508	Identifier	this		1190490	0					
ANR	1190509	Identifier	m_release_lease_when_done		1190490	1					
ANR	1190510	CallExpression	lease . releaseLeaseWhenDone ( )		1190490	1					
ANR	1190511	Callee	lease . releaseLeaseWhenDone		1190490	0					
ANR	1190512	MemberAccess	lease . releaseLeaseWhenDone		1190490	0					
ANR	1190513	Identifier	lease		1190490	0					
ANR	1190514	Identifier	releaseLeaseWhenDone		1190490	1					
ANR	1190515	ArgumentList			1190490	1					
ANR	1190516	ExpressionStatement	setLeaseStart ( lease . leaseTime ( ) )	170:1:3866:3900	1190490	2	True				
ANR	1190517	CallExpression	setLeaseStart ( lease . leaseTime ( ) )		1190490	0					
ANR	1190518	Callee	setLeaseStart		1190490	0					
ANR	1190519	Identifier	setLeaseStart		1190490	0					
ANR	1190520	ArgumentList	lease . leaseTime ( )		1190490	1					
ANR	1190521	Argument	lease . leaseTime ( )		1190490	0					
ANR	1190522	CallExpression	lease . leaseTime ( )		1190490	0					
ANR	1190523	Callee	lease . leaseTime		1190490	0					
ANR	1190524	MemberAccess	lease . leaseTime		1190490	0					
ANR	1190525	Identifier	lease		1190490	0					
ANR	1190526	Identifier	leaseTime		1190490	1					
ANR	1190527	ArgumentList			1190490	1					
ANR	1190528	ExpressionStatement	setMark ( lease . getMark ( ) )	171:1:3903:3929	1190490	3	True				
ANR	1190529	CallExpression	setMark ( lease . getMark ( ) )		1190490	0					
ANR	1190530	Callee	setMark		1190490	0					
ANR	1190531	Identifier	setMark		1190490	0					
ANR	1190532	ArgumentList	lease . getMark ( )		1190490	1					
ANR	1190533	Argument	lease . getMark ( )		1190490	0					
ANR	1190534	CallExpression	lease . getMark ( )		1190490	0					
ANR	1190535	Callee	lease . getMark		1190490	0					
ANR	1190536	MemberAccess	lease . getMark		1190490	0					
ANR	1190537	Identifier	lease		1190490	0					
ANR	1190538	Identifier	getMark		1190490	1					
ANR	1190539	ArgumentList			1190490	1					
ANR	1190540	ExpressionStatement	setDead ( lease . isDead ( ) )	172:1:3932:3957	1190490	4	True				
ANR	1190541	CallExpression	setDead ( lease . isDead ( ) )		1190490	0					
ANR	1190542	Callee	setDead		1190490	0					
ANR	1190543	Identifier	setDead		1190490	0					
ANR	1190544	ArgumentList	lease . isDead ( )		1190490	1					
ANR	1190545	Argument	lease . isDead ( )		1190490	0					
ANR	1190546	CallExpression	lease . isDead ( )		1190490	0					
ANR	1190547	Callee	lease . isDead		1190490	0					
ANR	1190548	MemberAccess	lease . isDead		1190490	0					
ANR	1190549	Identifier	lease		1190490	0					
ANR	1190550	Identifier	isDead		1190490	1					
ANR	1190551	ArgumentList			1190490	1					
ANR	1190552	IfStatement	if ( lease . leaseAd ( ) )		1190490	5					
ANR	1190553	Condition	lease . leaseAd ( )	175:6:4033:4048	1190490	0	True				
ANR	1190554	CallExpression	lease . leaseAd ( )		1190490	0					
ANR	1190555	Callee	lease . leaseAd		1190490	0					
ANR	1190556	MemberAccess	lease . leaseAd		1190490	0					
ANR	1190557	Identifier	lease		1190490	0					
ANR	1190558	Identifier	leaseAd		1190490	1					
ANR	1190559	ArgumentList			1190490	1					
ANR	1190560	CompoundStatement		13:25:356:356	1190490	1					
ANR	1190561	IfStatement	if ( this -> m_lease_ad )		1190490	0					
ANR	1190562	Condition	this -> m_lease_ad	176:7:4061:4076	1190490	0	True				
ANR	1190563	PtrMemberAccess	this -> m_lease_ad		1190490	0					
ANR	1190564	Identifier	this		1190490	0					
ANR	1190565	Identifier	m_lease_ad		1190490	1					
ANR	1190566	CompoundStatement		14:26:384:384	1190490	1					
ANR	1190567	Statement	delete	177:3:4085:4090	1190490	0	True				
ANR	1190568	ExpressionStatement	m_lease_ad	177:10:4092:4102	1190490	1	True				
ANR	1190569	Identifier	m_lease_ad		1190490	0					
ANR	1190570	ExpressionStatement	this -> m_lease_ad = new classad :: ClassAd ( * ( lease . leaseAd ( ) ) )	179:2:4110:4172	1190490	1	True				
ANR	1190571	AssignmentExpression	this -> m_lease_ad = new classad :: ClassAd ( * ( lease . leaseAd ( ) ) )		1190490	0		=			
ANR	1190572	PtrMemberAccess	this -> m_lease_ad		1190490	0					
ANR	1190573	Identifier	this		1190490	0					
ANR	1190574	Identifier	m_lease_ad		1190490	1					
ANR	1190575	UnaryOperationExpression	* ( lease . leaseAd ( ) )		1190490	1					
ANR	1190576	UnaryOperator	*		1190490	0					
ANR	1190577	CallExpression	lease . leaseAd ( )		1190490	1					
ANR	1190578	Callee	lease . leaseAd		1190490	0					
ANR	1190579	MemberAccess	lease . leaseAd		1190490	0					
ANR	1190580	Identifier	lease		1190490	0					
ANR	1190581	Identifier	leaseAd		1190490	1					
ANR	1190582	ArgumentList			1190490	1					
ANR	1190583	ElseStatement	else		1190490	0					
ANR	1190584	IfStatement	if ( this -> m_lease_ad )		1190490	0					
ANR	1190585	Condition	this -> m_lease_ad	182:11:4236:4251	1190490	0	True				
ANR	1190586	PtrMemberAccess	this -> m_lease_ad		1190490	0					
ANR	1190587	Identifier	this		1190490	0					
ANR	1190588	Identifier	m_lease_ad		1190490	1					
ANR	1190589	CompoundStatement		20:30:559:559	1190490	1					
ANR	1190590	ExpressionStatement	"this -> m_lease_ad -> InsertAttr ( ""LeaseDuration"" , this -> m_lease_duration )"	183:2:4259:4341	1190490	0	True				
ANR	1190591	CallExpression	"this -> m_lease_ad -> InsertAttr ( ""LeaseDuration"" , this -> m_lease_duration )"		1190490	0					
ANR	1190592	Callee	this -> m_lease_ad -> InsertAttr		1190490	0					
ANR	1190593	PtrMemberAccess	this -> m_lease_ad -> InsertAttr		1190490	0					
ANR	1190594	PtrMemberAccess	this -> m_lease_ad		1190490	0					
ANR	1190595	Identifier	this		1190490	0					
ANR	1190596	Identifier	m_lease_ad		1190490	1					
ANR	1190597	Identifier	InsertAttr		1190490	1					
ANR	1190598	ArgumentList	"""LeaseDuration"""		1190490	1					
ANR	1190599	Argument	"""LeaseDuration"""		1190490	0					
ANR	1190600	PrimaryExpression	"""LeaseDuration"""		1190490	0					
ANR	1190601	Argument	this -> m_lease_duration		1190490	1					
ANR	1190602	PtrMemberAccess	this -> m_lease_duration		1190490	0					
ANR	1190603	Identifier	this		1190490	0					
ANR	1190604	Identifier	m_lease_duration		1190490	1					
ANR	1190605	ExpressionStatement	"this -> m_lease_ad -> InsertAttr ( ""ReleaseWhenDone"" , this -> m_release_lease_when_done )"	185:2:4345:4438	1190490	1	True				
ANR	1190606	CallExpression	"this -> m_lease_ad -> InsertAttr ( ""ReleaseWhenDone"" , this -> m_release_lease_when_done )"		1190490	0					
ANR	1190607	Callee	this -> m_lease_ad -> InsertAttr		1190490	0					
ANR	1190608	PtrMemberAccess	this -> m_lease_ad -> InsertAttr		1190490	0					
ANR	1190609	PtrMemberAccess	this -> m_lease_ad		1190490	0					
ANR	1190610	Identifier	this		1190490	0					
ANR	1190611	Identifier	m_lease_ad		1190490	1					
ANR	1190612	Identifier	InsertAttr		1190490	1					
ANR	1190613	ArgumentList	"""ReleaseWhenDone"""		1190490	1					
ANR	1190614	Argument	"""ReleaseWhenDone"""		1190490	0					
ANR	1190615	PrimaryExpression	"""ReleaseWhenDone"""		1190490	0					
ANR	1190616	Argument	this -> m_release_lease_when_done		1190490	1					
ANR	1190617	PtrMemberAccess	this -> m_release_lease_when_done		1190490	0					
ANR	1190618	Identifier	this		1190490	0					
ANR	1190619	Identifier	m_release_lease_when_done		1190490	1					
ANR	1190620	ReturnStatement	return 0 ;	190:1:4458:4466	1190490	6	True				
ANR	1190621	PrimaryExpression	0		1190490	0					
ANR	1190622	ReturnType	int		1190490	1					
ANR	1190623	Identifier	DCLeaseManagerLease :: copyUpdates		1190490	2					
ANR	1190624	ParameterList	const DCLeaseManagerLease & lease		1190490	3					
ANR	1190625	Parameter	const DCLeaseManagerLease & lease	162:34:3660:3691	1190490	0	True				
ANR	1190626	ParameterType	const DCLeaseManagerLease &		1190490	0					
ANR	1190627	Identifier	lease		1190490	1					
ANR	1190628	CFGEntryNode	ENTRY		1190490		True				
ANR	1190629	CFGExitNode	EXIT		1190490		True				
ANR	1190630	Symbol	lease . leaseAd		1190490						
ANR	1190631	Symbol	this -> m_lease_ad		1190490						
ANR	1190632	Symbol	* ( lease . leaseAd ( ) )		1190490						
ANR	1190633	Symbol	lease . leaseTime		1190490						
ANR	1190634	Symbol	* lease		1190490						
ANR	1190635	Symbol	this		1190490						
ANR	1190636	Symbol	lease . getMark		1190490						
ANR	1190637	Symbol	this -> m_release_lease_when_done		1190490						
ANR	1190638	Symbol	* this		1190490						
ANR	1190639	Symbol	* lease . leaseAd		1190490						
ANR	1190640	Symbol	lease . releaseLeaseWhenDone		1190490						
ANR	1190641	Symbol	lease . isDead		1190490						
ANR	1190642	Symbol	lease . leaseDuration		1190490						
ANR	1190643	Symbol	this -> m_lease_duration		1190490						
ANR	1190644	Symbol	lease		1190490						
ANR	1190645	Function	DCLeaseManagerLease :: setLeaseId	193:0:4471:4578							
ANR	1190646	FunctionDef	DCLeaseManagerLease :: setLeaseId (const string & lease_id)		1190645	0					
ANR	1190647	CompoundStatement		196:0:4535:4578	1190645	0					
ANR	1190648	ExpressionStatement	this -> m_lease_id = lease_id	197:1:4538:4565	1190645	0	True				
ANR	1190649	AssignmentExpression	this -> m_lease_id = lease_id		1190645	0		=			
ANR	1190650	PtrMemberAccess	this -> m_lease_id		1190645	0					
ANR	1190651	Identifier	this		1190645	0					
ANR	1190652	Identifier	m_lease_id		1190645	1					
ANR	1190653	Identifier	lease_id		1190645	1					
ANR	1190654	ReturnStatement	return 0 ;	198:1:4568:4576	1190645	1	True				
ANR	1190655	PrimaryExpression	0		1190645	0					
ANR	1190656	ReturnType	int		1190645	1					
ANR	1190657	Identifier	DCLeaseManagerLease :: setLeaseId		1190645	2					
ANR	1190658	ParameterList	const string & lease_id		1190645	3					
ANR	1190659	Parameter	const string & lease_id	195:1:4509:4531	1190645	0	True				
ANR	1190660	ParameterType	const string &		1190645	0					
ANR	1190661	Identifier	lease_id		1190645	1					
ANR	1190662	CFGEntryNode	ENTRY		1190645		True				
ANR	1190663	CFGExitNode	EXIT		1190645		True				
ANR	1190664	Symbol	* this		1190645						
ANR	1190665	Symbol	this		1190645						
ANR	1190666	Symbol	this -> m_lease_id		1190645						
ANR	1190667	Symbol	lease_id		1190645						
ANR	1190668	Function	DCLeaseManagerLease :: setLeaseDuration	201:0:4581:4693							
ANR	1190669	FunctionDef	DCLeaseManagerLease :: setLeaseDuration (int duration)		1190668	0					
ANR	1190670	CompoundStatement		204:0:4644:4693	1190668	0					
ANR	1190671	ExpressionStatement	this -> m_lease_duration = duration	205:1:4647:4680	1190668	0	True				
ANR	1190672	AssignmentExpression	this -> m_lease_duration = duration		1190668	0		=			
ANR	1190673	PtrMemberAccess	this -> m_lease_duration		1190668	0					
ANR	1190674	Identifier	this		1190668	0					
ANR	1190675	Identifier	m_lease_duration		1190668	1					
ANR	1190676	Identifier	duration		1190668	1					
ANR	1190677	ReturnStatement	return 0 ;	206:1:4683:4691	1190668	1	True				
ANR	1190678	PrimaryExpression	0		1190668	0					
ANR	1190679	ReturnType	int		1190668	1					
ANR	1190680	Identifier	DCLeaseManagerLease :: setLeaseDuration		1190668	2					
ANR	1190681	ParameterList	int duration		1190668	3					
ANR	1190682	Parameter	int duration	203:1:4625:4640	1190668	0	True				
ANR	1190683	ParameterType	int		1190668	0					
ANR	1190684	Identifier	duration		1190668	1					
ANR	1190685	CFGEntryNode	ENTRY		1190668		True				
ANR	1190686	CFGExitNode	EXIT		1190668		True				
ANR	1190687	Symbol	duration		1190668						
ANR	1190688	Symbol	* this		1190668						
ANR	1190689	Symbol	this		1190668						
ANR	1190690	Symbol	this -> m_lease_duration		1190668						
ANR	1190691	ClassDef	LeaseIoBuf	209:0:4696:4922							
ANR	1190692	ClassDef	<unnamed>	211:1:4716:4898							
ANR	1190693	DeclStmt									
ANR	1190694	Decl							char	char [ 256 ]	m_lease_id
ANR	1190695	DeclStmt									
ANR	1190696	Decl							char	char [ 2048 ]	m_lease_ad
ANR	1190697	DeclStmt									
ANR	1190698	Decl							int	int	m_lease_duration
ANR	1190699	DeclStmt									
ANR	1190700	Decl							int	int	m_lease_time
ANR	1190701	DeclStmt									
ANR	1190702	Decl							bool	bool	m_release_lease_when_done
ANR	1190703	DeclStmt									
ANR	1190704	Decl							bool	bool	m_mark
ANR	1190705	DeclStmt									
ANR	1190706	Decl							bool	bool	m_dead
ANR	1190707	DeclStmt									
ANR	1190708	Decl									m_fields
ANR	1190709	DeclStmt									
ANR	1190710	Decl							char	char [ 4096 ]	m_static
ANR	1190711	Function	DCLeaseManagerLease :: fwrite	224:0:4926:5660							
ANR	1190712	FunctionDef	DCLeaseManagerLease :: fwrite (FILE * fp)		1190711	0					
ANR	1190713	CompoundStatement		226:0:4977:5660	1190711	0					
ANR	1190714	IdentifierDeclStatement	classad :: ClassAdUnParser unparser ;	227:1:4980:5013	1190711	0	True				
ANR	1190715	IdentifierDecl	unparser		1190711	0					
ANR	1190716	IdentifierDeclType	classad :: ClassAdUnParser		1190711	0					
ANR	1190717	Identifier	unparser		1190711	1					
ANR	1190718	IdentifierDeclStatement	LeaseIoBuf buf ;	228:1:5016:5034	1190711	1	True				
ANR	1190719	IdentifierDecl	buf		1190711	0					
ANR	1190720	IdentifierDeclType	LeaseIoBuf		1190711	0					
ANR	1190721	Identifier	buf		1190711	1					
ANR	1190722	IdentifierDeclStatement	string str ;	229:1:5037:5052	1190711	2	True				
ANR	1190723	IdentifierDecl	str		1190711	0					
ANR	1190724	IdentifierDeclType	string		1190711	0					
ANR	1190725	Identifier	str		1190711	1					
ANR	1190726	ExpressionStatement	"memset ( & buf , 0 , sizeof ( buf ) )"	231:1:5056:5086	1190711	3	True				
ANR	1190727	CallExpression	"memset ( & buf , 0 , sizeof ( buf ) )"		1190711	0					
ANR	1190728	Callee	memset		1190711	0					
ANR	1190729	Identifier	memset		1190711	0					
ANR	1190730	ArgumentList	& buf		1190711	1					
ANR	1190731	Argument	& buf		1190711	0					
ANR	1190732	UnaryOperationExpression	& buf		1190711	0					
ANR	1190733	UnaryOperator	&		1190711	0					
ANR	1190734	Identifier	buf		1190711	1					
ANR	1190735	Argument	0		1190711	1					
ANR	1190736	PrimaryExpression	0		1190711	0					
ANR	1190737	Argument	sizeof ( buf )		1190711	2					
ANR	1190738	SizeofExpression	sizeof ( buf )		1190711	0					
ANR	1190739	Sizeof	sizeof		1190711	0					
ANR	1190740	SizeofOperand	buf		1190711	1					
ANR	1190741	ExpressionStatement	"strncpy ( buf . m_fields . m_lease_id , this -> m_lease_id . c_str ( ) , sizeof ( buf . m_fields . m_lease_id ) - 1 )"	233:1:5090:5193	1190711	4	True				
ANR	1190742	CallExpression	"strncpy ( buf . m_fields . m_lease_id , this -> m_lease_id . c_str ( ) , sizeof ( buf . m_fields . m_lease_id ) - 1 )"		1190711	0					
ANR	1190743	Callee	strncpy		1190711	0					
ANR	1190744	Identifier	strncpy		1190711	0					
ANR	1190745	ArgumentList	buf . m_fields . m_lease_id		1190711	1					
ANR	1190746	Argument	buf . m_fields . m_lease_id		1190711	0					
ANR	1190747	MemberAccess	buf . m_fields . m_lease_id		1190711	0					
ANR	1190748	MemberAccess	buf . m_fields		1190711	0					
ANR	1190749	Identifier	buf		1190711	0					
ANR	1190750	Identifier	m_fields		1190711	1					
ANR	1190751	Identifier	m_lease_id		1190711	1					
ANR	1190752	Argument	this -> m_lease_id . c_str ( )		1190711	1					
ANR	1190753	CallExpression	this -> m_lease_id . c_str ( )		1190711	0					
ANR	1190754	Callee	this -> m_lease_id . c_str		1190711	0					
ANR	1190755	MemberAccess	this -> m_lease_id . c_str		1190711	0					
ANR	1190756	PtrMemberAccess	this -> m_lease_id		1190711	0					
ANR	1190757	Identifier	this		1190711	0					
ANR	1190758	Identifier	m_lease_id		1190711	1					
ANR	1190759	Identifier	c_str		1190711	1					
ANR	1190760	ArgumentList			1190711	1					
ANR	1190761	Argument	sizeof ( buf . m_fields . m_lease_id ) - 1		1190711	2					
ANR	1190762	AdditiveExpression	sizeof ( buf . m_fields . m_lease_id ) - 1		1190711	0		-			
ANR	1190763	SizeofExpression	sizeof ( buf . m_fields . m_lease_id )		1190711	0					
ANR	1190764	Sizeof	sizeof		1190711	0					
ANR	1190765	MemberAccess	buf . m_fields . m_lease_id		1190711	1					
ANR	1190766	MemberAccess	buf . m_fields		1190711	0					
ANR	1190767	Identifier	buf		1190711	0					
ANR	1190768	Identifier	m_fields		1190711	1					
ANR	1190769	Identifier	m_lease_id		1190711	1					
ANR	1190770	PrimaryExpression	1		1190711	1					
ANR	1190771	ExpressionStatement	"unparser . Unparse ( str , this -> m_lease_ad )"	237:1:5197:5238	1190711	5	True				
ANR	1190772	CallExpression	"unparser . Unparse ( str , this -> m_lease_ad )"		1190711	0					
ANR	1190773	Callee	unparser . Unparse		1190711	0					
ANR	1190774	MemberAccess	unparser . Unparse		1190711	0					
ANR	1190775	Identifier	unparser		1190711	0					
ANR	1190776	Identifier	Unparse		1190711	1					
ANR	1190777	ArgumentList	str		1190711	1					
ANR	1190778	Argument	str		1190711	0					
ANR	1190779	Identifier	str		1190711	0					
ANR	1190780	Argument	this -> m_lease_ad		1190711	1					
ANR	1190781	PtrMemberAccess	this -> m_lease_ad		1190711	0					
ANR	1190782	Identifier	this		1190711	0					
ANR	1190783	Identifier	m_lease_ad		1190711	1					
ANR	1190784	ExpressionStatement	"strncpy ( buf . m_fields . m_lease_ad , str . c_str ( ) , sizeof ( buf . m_fields . m_lease_ad ) - 1 )"	238:1:5241:5331	1190711	6	True				
ANR	1190785	CallExpression	"strncpy ( buf . m_fields . m_lease_ad , str . c_str ( ) , sizeof ( buf . m_fields . m_lease_ad ) - 1 )"		1190711	0					
ANR	1190786	Callee	strncpy		1190711	0					
ANR	1190787	Identifier	strncpy		1190711	0					
ANR	1190788	ArgumentList	buf . m_fields . m_lease_ad		1190711	1					
ANR	1190789	Argument	buf . m_fields . m_lease_ad		1190711	0					
ANR	1190790	MemberAccess	buf . m_fields . m_lease_ad		1190711	0					
ANR	1190791	MemberAccess	buf . m_fields		1190711	0					
ANR	1190792	Identifier	buf		1190711	0					
ANR	1190793	Identifier	m_fields		1190711	1					
ANR	1190794	Identifier	m_lease_ad		1190711	1					
ANR	1190795	Argument	str . c_str ( )		1190711	1					
ANR	1190796	CallExpression	str . c_str ( )		1190711	0					
ANR	1190797	Callee	str . c_str		1190711	0					
ANR	1190798	MemberAccess	str . c_str		1190711	0					
ANR	1190799	Identifier	str		1190711	0					
ANR	1190800	Identifier	c_str		1190711	1					
ANR	1190801	ArgumentList			1190711	1					
ANR	1190802	Argument	sizeof ( buf . m_fields . m_lease_ad ) - 1		1190711	2					
ANR	1190803	AdditiveExpression	sizeof ( buf . m_fields . m_lease_ad ) - 1		1190711	0		-			
ANR	1190804	SizeofExpression	sizeof ( buf . m_fields . m_lease_ad )		1190711	0					
ANR	1190805	Sizeof	sizeof		1190711	0					
ANR	1190806	MemberAccess	buf . m_fields . m_lease_ad		1190711	1					
ANR	1190807	MemberAccess	buf . m_fields		1190711	0					
ANR	1190808	Identifier	buf		1190711	0					
ANR	1190809	Identifier	m_fields		1190711	1					
ANR	1190810	Identifier	m_lease_ad		1190711	1					
ANR	1190811	PrimaryExpression	1		1190711	1					
ANR	1190812	ExpressionStatement	buf . m_fields . m_lease_duration = this -> m_lease_duration	242:1:5335:5391	1190711	7	True				
ANR	1190813	AssignmentExpression	buf . m_fields . m_lease_duration = this -> m_lease_duration		1190711	0		=			
ANR	1190814	MemberAccess	buf . m_fields . m_lease_duration		1190711	0					
ANR	1190815	MemberAccess	buf . m_fields		1190711	0					
ANR	1190816	Identifier	buf		1190711	0					
ANR	1190817	Identifier	m_fields		1190711	1					
ANR	1190818	Identifier	m_lease_duration		1190711	1					
ANR	1190819	PtrMemberAccess	this -> m_lease_duration		1190711	1					
ANR	1190820	Identifier	this		1190711	0					
ANR	1190821	Identifier	m_lease_duration		1190711	1					
ANR	1190822	ExpressionStatement	buf . m_fields . m_lease_time = this -> m_lease_time	243:1:5394:5443	1190711	8	True				
ANR	1190823	AssignmentExpression	buf . m_fields . m_lease_time = this -> m_lease_time		1190711	0		=			
ANR	1190824	MemberAccess	buf . m_fields . m_lease_time		1190711	0					
ANR	1190825	MemberAccess	buf . m_fields		1190711	0					
ANR	1190826	Identifier	buf		1190711	0					
ANR	1190827	Identifier	m_fields		1190711	1					
ANR	1190828	Identifier	m_lease_time		1190711	1					
ANR	1190829	PtrMemberAccess	this -> m_lease_time		1190711	1					
ANR	1190830	Identifier	this		1190711	0					
ANR	1190831	Identifier	m_lease_time		1190711	1					
ANR	1190832	ExpressionStatement	buf . m_fields . m_release_lease_when_done = this -> m_release_lease_when_done	244:1:5446:5518	1190711	9	True				
ANR	1190833	AssignmentExpression	buf . m_fields . m_release_lease_when_done = this -> m_release_lease_when_done		1190711	0		=			
ANR	1190834	MemberAccess	buf . m_fields . m_release_lease_when_done		1190711	0					
ANR	1190835	MemberAccess	buf . m_fields		1190711	0					
ANR	1190836	Identifier	buf		1190711	0					
ANR	1190837	Identifier	m_fields		1190711	1					
ANR	1190838	Identifier	m_release_lease_when_done		1190711	1					
ANR	1190839	PtrMemberAccess	this -> m_release_lease_when_done		1190711	1					
ANR	1190840	Identifier	this		1190711	0					
ANR	1190841	Identifier	m_release_lease_when_done		1190711	1					
ANR	1190842	ExpressionStatement	buf . m_fields . m_mark = this -> m_mark	245:1:5521:5560	1190711	10	True				
ANR	1190843	AssignmentExpression	buf . m_fields . m_mark = this -> m_mark		1190711	0		=			
ANR	1190844	MemberAccess	buf . m_fields . m_mark		1190711	0					
ANR	1190845	MemberAccess	buf . m_fields		1190711	0					
ANR	1190846	Identifier	buf		1190711	0					
ANR	1190847	Identifier	m_fields		1190711	1					
ANR	1190848	Identifier	m_mark		1190711	1					
ANR	1190849	PtrMemberAccess	this -> m_mark		1190711	1					
ANR	1190850	Identifier	this		1190711	0					
ANR	1190851	Identifier	m_mark		1190711	1					
ANR	1190852	ExpressionStatement	buf . m_fields . m_dead = this -> m_dead	246:1:5563:5602	1190711	11	True				
ANR	1190853	AssignmentExpression	buf . m_fields . m_dead = this -> m_dead		1190711	0		=			
ANR	1190854	MemberAccess	buf . m_fields . m_dead		1190711	0					
ANR	1190855	MemberAccess	buf . m_fields		1190711	0					
ANR	1190856	Identifier	buf		1190711	0					
ANR	1190857	Identifier	m_fields		1190711	1					
ANR	1190858	Identifier	m_dead		1190711	1					
ANR	1190859	PtrMemberAccess	this -> m_dead		1190711	1					
ANR	1190860	Identifier	this		1190711	0					
ANR	1190861	Identifier	m_dead		1190711	1					
ANR	1190862	Statement	return	248:1:5606:5611	1190711	12	True				
ANR	1190863	Statement	(	248:8:5613:5613	1190711	13	True				
ANR	1190864	Statement	::	248:10:5615:5616	1190711	14	True				
ANR	1190865	Statement	fwrite	248:12:5617:5622	1190711	15	True				
ANR	1190866	Statement	(	248:18:5623:5623	1190711	16	True				
ANR	1190867	Statement	&	248:20:5625:5625	1190711	17	True				
ANR	1190868	Statement	buf	248:21:5626:5628	1190711	18	True				
ANR	1190869	Statement	","	248:24:5629:5629	1190711	19	True				
ANR	1190870	Statement	sizeof	248:26:5631:5636	1190711	20	True				
ANR	1190871	Statement	(	248:32:5637:5637	1190711	21	True				
ANR	1190872	Statement	buf	248:33:5638:5640	1190711	22	True				
ANR	1190873	Statement	)	248:36:5641:5641	1190711	23	True				
ANR	1190874	Statement	","	248:37:5642:5642	1190711	24	True				
ANR	1190875	Statement	1	248:39:5644:5644	1190711	25	True				
ANR	1190876	Statement	","	248:40:5645:5645	1190711	26	True				
ANR	1190877	Statement	fp	248:42:5647:5648	1190711	27	True				
ANR	1190878	Statement	)	248:45:5650:5650	1190711	28	True				
ANR	1190879	Statement	==	248:47:5652:5653	1190711	29	True				
ANR	1190880	Statement	1	248:50:5655:5655	1190711	30	True				
ANR	1190881	Statement	)	248:52:5657:5657	1190711	31	True				
ANR	1190882	ExpressionStatement		248:53:5658:5658	1190711	32	True				
ANR	1190883	ReturnType	bool		1190711	1					
ANR	1190884	Identifier	DCLeaseManagerLease :: fwrite		1190711	2					
ANR	1190885	ParameterList	FILE * fp		1190711	3					
ANR	1190886	Parameter	FILE * fp	225:29:4960:4967	1190711	0	True				
ANR	1190887	ParameterType	FILE *		1190711	0					
ANR	1190888	Identifier	fp		1190711	1					
ANR	1190889	CFGEntryNode	ENTRY		1190711		True				
ANR	1190890	CFGExitNode	EXIT		1190711		True				
ANR	1190891	Symbol	this -> m_lease_ad		1190711						
ANR	1190892	Symbol	this -> m_dead		1190711						
ANR	1190893	Symbol	buf . m_fields . m_lease_ad		1190711						
ANR	1190894	Symbol	this		1190711						
ANR	1190895	Symbol	str . c_str		1190711						
ANR	1190896	Symbol	fp		1190711						
ANR	1190897	Symbol	buf . m_fields . m_release_lease_when_done		1190711						
ANR	1190898	Symbol	this -> m_mark		1190711						
ANR	1190899	Symbol	this -> m_release_lease_when_done		1190711						
ANR	1190900	Symbol	this -> m_lease_time		1190711						
ANR	1190901	Symbol	buf . m_fields . m_mark		1190711						
ANR	1190902	Symbol	str		1190711						
ANR	1190903	Symbol	* this		1190711						
ANR	1190904	Symbol	this -> m_lease_id . c_str		1190711						
ANR	1190905	Symbol	buf		1190711						
ANR	1190906	Symbol	buf . m_fields . m_lease_time		1190711						
ANR	1190907	Symbol	buf . m_fields		1190711						
ANR	1190908	Symbol	this -> m_lease_id		1190711						
ANR	1190909	Symbol	buf . m_fields . m_dead		1190711						
ANR	1190910	Symbol	unparser		1190711						
ANR	1190911	Symbol	this -> m_lease_duration		1190711						
ANR	1190912	Symbol	buf . m_fields . m_lease_duration		1190711						
ANR	1190913	Symbol	& buf		1190711						
ANR	1190914	Symbol	buf . m_fields . m_lease_id		1190711						
ANR	1190915	Function	DCLeaseManagerLease :: fread	251:0:5663:6307							
ANR	1190916	FunctionDef	DCLeaseManagerLease :: fread (FILE * fp)		1190915	0					
ANR	1190917	CompoundStatement		253:0:5707:6307	1190915	0					
ANR	1190918	IdentifierDeclStatement	classad :: ClassAdParser parser ;	254:1:5710:5739	1190915	0	True				
ANR	1190919	IdentifierDecl	parser		1190915	0					
ANR	1190920	IdentifierDeclType	classad :: ClassAdParser		1190915	0					
ANR	1190921	Identifier	parser		1190915	1					
ANR	1190922	IdentifierDeclStatement	LeaseIoBuf buf ;	255:1:5742:5759	1190915	1	True				
ANR	1190923	IdentifierDecl	buf		1190915	0					
ANR	1190924	IdentifierDeclType	LeaseIoBuf		1190915	0					
ANR	1190925	Identifier	buf		1190915	1					
ANR	1190926	IdentifierDeclStatement	string str ;	256:1:5762:5776	1190915	2	True				
ANR	1190927	IdentifierDecl	str		1190915	0					
ANR	1190928	IdentifierDeclType	string		1190915	0					
ANR	1190929	Identifier	str		1190915	1					
ANR	1190930	Statement	if	258:1:5780:5781	1190915	3	True				
ANR	1190931	Statement	(	258:4:5783:5783	1190915	4	True				
ANR	1190932	Statement	::	258:6:5785:5786	1190915	5	True				
ANR	1190933	Statement	fread	258:8:5787:5791	1190915	6	True				
ANR	1190934	Statement	(	258:13:5792:5792	1190915	7	True				
ANR	1190935	Statement	&	258:15:5794:5794	1190915	8	True				
ANR	1190936	Statement	buf	258:16:5795:5797	1190915	9	True				
ANR	1190937	Statement	","	258:19:5798:5798	1190915	10	True				
ANR	1190938	Statement	sizeof	258:21:5800:5805	1190915	11	True				
ANR	1190939	Statement	(	258:27:5806:5806	1190915	12	True				
ANR	1190940	Statement	buf	258:28:5807:5809	1190915	13	True				
ANR	1190941	Statement	)	258:31:5810:5810	1190915	14	True				
ANR	1190942	Statement	","	258:32:5811:5811	1190915	15	True				
ANR	1190943	Statement	1	258:34:5813:5813	1190915	16	True				
ANR	1190944	Statement	","	258:35:5814:5814	1190915	17	True				
ANR	1190945	Statement	fp	258:37:5816:5817	1190915	18	True				
ANR	1190946	Statement	)	258:40:5819:5819	1190915	19	True				
ANR	1190947	Statement	!=	258:42:5821:5822	1190915	20	True				
ANR	1190948	Statement	1	258:45:5824:5824	1190915	21	True				
ANR	1190949	Statement	)	258:47:5826:5826	1190915	22	True				
ANR	1190950	CompoundStatement		6:49:120:120	1190915	23					
ANR	1190951	ReturnStatement	return false ;	259:2:5832:5844	1190915	0	True				
ANR	1190952	Identifier	false		1190915	0					
ANR	1190953	ExpressionStatement	this -> m_lease_id = buf . m_fields . m_lease_id	262:1:5851:5893	1190915	24	True				
ANR	1190954	AssignmentExpression	this -> m_lease_id = buf . m_fields . m_lease_id		1190915	0		=			
ANR	1190955	PtrMemberAccess	this -> m_lease_id		1190915	0					
ANR	1190956	Identifier	this		1190915	0					
ANR	1190957	Identifier	m_lease_id		1190915	1					
ANR	1190958	MemberAccess	buf . m_fields . m_lease_id		1190915	1					
ANR	1190959	MemberAccess	buf . m_fields		1190915	0					
ANR	1190960	Identifier	buf		1190915	0					
ANR	1190961	Identifier	m_fields		1190915	1					
ANR	1190962	Identifier	m_lease_id		1190915	1					
ANR	1190963	ExpressionStatement	"this -> m_lease_ad = parser . ParseClassAd ( buf . m_fields . m_lease_ad , true )"	263:1:5896:5967	1190915	25	True				
ANR	1190964	AssignmentExpression	"this -> m_lease_ad = parser . ParseClassAd ( buf . m_fields . m_lease_ad , true )"		1190915	0		=			
ANR	1190965	PtrMemberAccess	this -> m_lease_ad		1190915	0					
ANR	1190966	Identifier	this		1190915	0					
ANR	1190967	Identifier	m_lease_ad		1190915	1					
ANR	1190968	CallExpression	"parser . ParseClassAd ( buf . m_fields . m_lease_ad , true )"		1190915	1					
ANR	1190969	Callee	parser . ParseClassAd		1190915	0					
ANR	1190970	MemberAccess	parser . ParseClassAd		1190915	0					
ANR	1190971	Identifier	parser		1190915	0					
ANR	1190972	Identifier	ParseClassAd		1190915	1					
ANR	1190973	ArgumentList	buf . m_fields . m_lease_ad		1190915	1					
ANR	1190974	Argument	buf . m_fields . m_lease_ad		1190915	0					
ANR	1190975	MemberAccess	buf . m_fields . m_lease_ad		1190915	0					
ANR	1190976	MemberAccess	buf . m_fields		1190915	0					
ANR	1190977	Identifier	buf		1190915	0					
ANR	1190978	Identifier	m_fields		1190915	1					
ANR	1190979	Identifier	m_lease_ad		1190915	1					
ANR	1190980	Argument	true		1190915	1					
ANR	1190981	Identifier	true		1190915	0					
ANR	1190982	IfStatement	if ( NULL == this -> m_lease_ad )		1190915	26					
ANR	1190983	Condition	NULL == this -> m_lease_ad	264:6:5975:5998	1190915	0	True				
ANR	1190984	EqualityExpression	NULL == this -> m_lease_ad		1190915	0		==			
ANR	1190985	Identifier	NULL		1190915	0					
ANR	1190986	PtrMemberAccess	this -> m_lease_ad		1190915	1					
ANR	1190987	Identifier	this		1190915	0					
ANR	1190988	Identifier	m_lease_ad		1190915	1					
ANR	1190989	CompoundStatement		12:33:294:294	1190915	1					
ANR	1190990	ReturnStatement	return false ;	265:2:6006:6018	1190915	0	True				
ANR	1190991	Identifier	false		1190915	0					
ANR	1190992	ExpressionStatement	this -> m_lease_duration = buf . m_fields . m_lease_duration	268:1:6025:6081	1190915	27	True				
ANR	1190993	AssignmentExpression	this -> m_lease_duration = buf . m_fields . m_lease_duration		1190915	0		=			
ANR	1190994	PtrMemberAccess	this -> m_lease_duration		1190915	0					
ANR	1190995	Identifier	this		1190915	0					
ANR	1190996	Identifier	m_lease_duration		1190915	1					
ANR	1190997	MemberAccess	buf . m_fields . m_lease_duration		1190915	1					
ANR	1190998	MemberAccess	buf . m_fields		1190915	0					
ANR	1190999	Identifier	buf		1190915	0					
ANR	1191000	Identifier	m_fields		1190915	1					
ANR	1191001	Identifier	m_lease_duration		1190915	1					
ANR	1191002	ExpressionStatement	this -> m_lease_time = buf . m_fields . m_lease_time	269:1:6084:6133	1190915	28	True				
ANR	1191003	AssignmentExpression	this -> m_lease_time = buf . m_fields . m_lease_time		1190915	0		=			
ANR	1191004	PtrMemberAccess	this -> m_lease_time		1190915	0					
ANR	1191005	Identifier	this		1190915	0					
ANR	1191006	Identifier	m_lease_time		1190915	1					
ANR	1191007	MemberAccess	buf . m_fields . m_lease_time		1190915	1					
ANR	1191008	MemberAccess	buf . m_fields		1190915	0					
ANR	1191009	Identifier	buf		1190915	0					
ANR	1191010	Identifier	m_fields		1190915	1					
ANR	1191011	Identifier	m_lease_time		1190915	1					
ANR	1191012	ExpressionStatement	this -> m_release_lease_when_done = buf . m_fields . m_release_lease_when_done	270:1:6136:6208	1190915	29	True				
ANR	1191013	AssignmentExpression	this -> m_release_lease_when_done = buf . m_fields . m_release_lease_when_done		1190915	0		=			
ANR	1191014	PtrMemberAccess	this -> m_release_lease_when_done		1190915	0					
ANR	1191015	Identifier	this		1190915	0					
ANR	1191016	Identifier	m_release_lease_when_done		1190915	1					
ANR	1191017	MemberAccess	buf . m_fields . m_release_lease_when_done		1190915	1					
ANR	1191018	MemberAccess	buf . m_fields		1190915	0					
ANR	1191019	Identifier	buf		1190915	0					
ANR	1191020	Identifier	m_fields		1190915	1					
ANR	1191021	Identifier	m_release_lease_when_done		1190915	1					
ANR	1191022	ExpressionStatement	this -> m_mark = buf . m_fields . m_mark	271:1:6211:6249	1190915	30	True				
ANR	1191023	AssignmentExpression	this -> m_mark = buf . m_fields . m_mark		1190915	0		=			
ANR	1191024	PtrMemberAccess	this -> m_mark		1190915	0					
ANR	1191025	Identifier	this		1190915	0					
ANR	1191026	Identifier	m_mark		1190915	1					
ANR	1191027	MemberAccess	buf . m_fields . m_mark		1190915	1					
ANR	1191028	MemberAccess	buf . m_fields		1190915	0					
ANR	1191029	Identifier	buf		1190915	0					
ANR	1191030	Identifier	m_fields		1190915	1					
ANR	1191031	Identifier	m_mark		1190915	1					
ANR	1191032	ExpressionStatement	this -> m_dead = buf . m_fields . m_dead	272:1:6252:6290	1190915	31	True				
ANR	1191033	AssignmentExpression	this -> m_dead = buf . m_fields . m_dead		1190915	0		=			
ANR	1191034	PtrMemberAccess	this -> m_dead		1190915	0					
ANR	1191035	Identifier	this		1190915	0					
ANR	1191036	Identifier	m_dead		1190915	1					
ANR	1191037	MemberAccess	buf . m_fields . m_dead		1190915	1					
ANR	1191038	MemberAccess	buf . m_fields		1190915	0					
ANR	1191039	Identifier	buf		1190915	0					
ANR	1191040	Identifier	m_fields		1190915	1					
ANR	1191041	Identifier	m_dead		1190915	1					
ANR	1191042	ReturnStatement	return true ;	274:1:6294:6305	1190915	32	True				
ANR	1191043	Identifier	true		1190915	0					
ANR	1191044	ReturnType	bool		1190915	1					
ANR	1191045	Identifier	DCLeaseManagerLease :: fread		1190915	2					
ANR	1191046	ParameterList	FILE * fp		1190915	3					
ANR	1191047	Parameter	FILE * fp	252:28:5696:5703	1190915	0	True				
ANR	1191048	ParameterType	FILE *		1190915	0					
ANR	1191049	Identifier	fp		1190915	1					
ANR	1191050	CFGEntryNode	ENTRY		1190915		True				
ANR	1191051	CFGExitNode	EXIT		1190915		True				
ANR	1191052	Symbol	this -> m_dead		1190915						
ANR	1191053	Symbol	fp		1190915						
ANR	1191054	Symbol	this -> m_release_lease_when_done		1190915						
ANR	1191055	Symbol	buf . m_fields . m_mark		1190915						
ANR	1191056	Symbol	this -> m_lease_id		1190915						
ANR	1191057	Symbol	buf . m_fields . m_dead		1190915						
ANR	1191058	Symbol	this -> m_lease_duration		1190915						
ANR	1191059	Symbol	buf . m_fields . m_lease_duration		1190915						
ANR	1191060	Symbol	buf . m_fields . m_lease_id		1190915						
ANR	1191061	Symbol	this -> m_lease_ad		1190915						
ANR	1191062	Symbol	NULL		1190915						
ANR	1191063	Symbol	buf . m_fields . m_lease_ad		1190915						
ANR	1191064	Symbol	false		1190915						
ANR	1191065	Symbol	this		1190915						
ANR	1191066	Symbol	buf . m_fields . m_release_lease_when_done		1190915						
ANR	1191067	Symbol	this -> m_mark		1190915						
ANR	1191068	Symbol	this -> m_lease_time		1190915						
ANR	1191069	Symbol	parser . ParseClassAd		1190915						
ANR	1191070	Symbol	str		1190915						
ANR	1191071	Symbol	* this		1190915						
ANR	1191072	Symbol	buf		1190915						
ANR	1191073	Symbol	parser		1190915						
ANR	1191074	Symbol	buf . m_fields . m_lease_time		1190915						
ANR	1191075	Symbol	buf . m_fields		1190915						
ANR	1191076	Symbol	true		1190915						
ANR	1191077	Function	DCLeaseManagerLease_freeList	280:0:6361:6613							
ANR	1191078	FunctionDef	DCLeaseManagerLease_freeList (list < DCLeaseManagerLease * > & lease_list)		1191077	0					
ANR	1191079	CompoundStatement		282:0:6437:6613	1191077	0					
ANR	1191080	IdentifierDeclStatement	int count = 0 ;	283:1:6440:6454	1191077	0	True				
ANR	1191081	IdentifierDecl	count = 0		1191077	0					
ANR	1191082	IdentifierDeclType	int		1191077	0					
ANR	1191083	Identifier	count		1191077	1					
ANR	1191084	AssignmentExpression	count = 0		1191077	2		=			
ANR	1191085	Identifier	count		1191077	0					
ANR	1191086	PrimaryExpression	0		1191077	1					
ANR	1191087	WhileStatement	while ( lease_list . size ( ) )		1191077	1					
ANR	1191088	Condition	lease_list . size ( )	284:8:6464:6480	1191077	0	True				
ANR	1191089	CallExpression	lease_list . size ( )		1191077	0					
ANR	1191090	Callee	lease_list . size		1191077	0					
ANR	1191091	MemberAccess	lease_list . size		1191077	0					
ANR	1191092	Identifier	lease_list		1191077	0					
ANR	1191093	Identifier	size		1191077	1					
ANR	1191094	ArgumentList			1191077	1					
ANR	1191095	CompoundStatement		4:2:50:101	1191077	1					
ANR	1191096	IdentifierDeclStatement	DCLeaseManagerLease * lease = * ( lease_list . begin ( ) ) ;	285:2:6488:6539	1191077	0	True				
ANR	1191097	IdentifierDecl	* lease = * ( lease_list . begin ( ) )		1191077	0					
ANR	1191098	IdentifierDeclType	DCLeaseManagerLease *		1191077	0					
ANR	1191099	Identifier	lease		1191077	1					
ANR	1191100	AssignmentExpression	* lease = * ( lease_list . begin ( ) )		1191077	2		=			
ANR	1191101	Identifier	lease		1191077	0					
ANR	1191102	UnaryOperationExpression	* ( lease_list . begin ( ) )		1191077	1					
ANR	1191103	UnaryOperator	*		1191077	0					
ANR	1191104	CallExpression	lease_list . begin ( )		1191077	1					
ANR	1191105	Callee	lease_list . begin		1191077	0					
ANR	1191106	MemberAccess	lease_list . begin		1191077	0					
ANR	1191107	Identifier	lease_list		1191077	0					
ANR	1191108	Identifier	begin		1191077	1					
ANR	1191109	ArgumentList			1191077	1					
ANR	1191110	Statement	delete	286:2:6543:6548	1191077	1	True				
ANR	1191111	ExpressionStatement	lease	286:9:6550:6555	1191077	2	True				
ANR	1191112	Identifier	lease		1191077	0					
ANR	1191113	ExpressionStatement	lease_list . pop_front ( )	287:2:6559:6582	1191077	3	True				
ANR	1191114	CallExpression	lease_list . pop_front ( )		1191077	0					
ANR	1191115	Callee	lease_list . pop_front		1191077	0					
ANR	1191116	MemberAccess	lease_list . pop_front		1191077	0					
ANR	1191117	Identifier	lease_list		1191077	0					
ANR	1191118	Identifier	pop_front		1191077	1					
ANR	1191119	ArgumentList			1191077	1					
ANR	1191120	ExpressionStatement	count ++	288:2:6586:6593	1191077	4	True				
ANR	1191121	PostIncDecOperationExpression	count ++		1191077	0					
ANR	1191122	Identifier	count		1191077	0					
ANR	1191123	IncDec	++		1191077	1					
ANR	1191124	ReturnStatement	return count ;	290:1:6599:6611	1191077	2	True				
ANR	1191125	Identifier	count		1191077	0					
ANR	1191126	ReturnType	int		1191077	1					
ANR	1191127	Identifier	DCLeaseManagerLease_freeList		1191077	2					
ANR	1191128	ParameterList	list < DCLeaseManagerLease * > & lease_list		1191077	3					
ANR	1191129	Parameter	list < DCLeaseManagerLease * > & lease_list	281:30:6395:6433	1191077	0	True				
ANR	1191130	ParameterType	list < DCLeaseManagerLease * > &		1191077	0					
ANR	1191131	Identifier	lease_list		1191077	1					
ANR	1191132	CFGEntryNode	ENTRY		1191077		True				
ANR	1191133	CFGExitNode	EXIT		1191077		True				
ANR	1191134	Symbol	lease_list		1191077						
ANR	1191135	Symbol	lease_list . begin		1191077						
ANR	1191136	Symbol	* lease_list . begin		1191077						
ANR	1191137	Symbol	* lease_list		1191077						
ANR	1191138	Symbol	* ( lease_list . begin ( ) )		1191077						
ANR	1191139	Symbol	count		1191077						
ANR	1191140	Symbol	lease_list . size		1191077						
ANR	1191141	Symbol	lease		1191077						
ANR	1191142	Function	DCLeaseManagerLease_copyList	293:0:6616:7009							
ANR	1191143	FunctionDef	"DCLeaseManagerLease_copyList (const list < const DCLeaseManagerLease * > & source_list , list < const DCLeaseManagerLease * > & dest_list)"		1191142	0					
ANR	1191144	CompoundStatement		297:0:6754:7009	1191142	0					
ANR	1191145	IdentifierDeclStatement	int count = 0 ;	298:1:6757:6771	1191142	0	True				
ANR	1191146	IdentifierDecl	count = 0		1191142	0					
ANR	1191147	IdentifierDeclType	int		1191142	0					
ANR	1191148	Identifier	count		1191142	1					
ANR	1191149	AssignmentExpression	count = 0		1191142	2		=			
ANR	1191150	Identifier	count		1191142	0					
ANR	1191151	PrimaryExpression	0		1191142	1					
ANR	1191152	IdentifierDeclStatement	list < const DCLeaseManagerLease * > :: const_iterator iter ;	300:1:6775:6829	1191142	1	True				
ANR	1191153	IdentifierDecl	iter		1191142	0					
ANR	1191154	IdentifierDeclType	list < const DCLeaseManagerLease * > :: const_iterator		1191142	0					
ANR	1191155	Identifier	iter		1191142	1					
ANR	1191156	ForStatement	for ( iter = source_list . begin ( ) ; iter != source_list . end ( ) ; iter ++ )		1191142	2					
ANR	1191157	ForInit	iter = source_list . begin ( ) ;	301:6:6837:6863	1191142	0	True				
ANR	1191158	AssignmentExpression	iter = source_list . begin ( )		1191142	0		=			
ANR	1191159	Identifier	iter		1191142	0					
ANR	1191160	CallExpression	source_list . begin ( )		1191142	1					
ANR	1191161	Callee	source_list . begin		1191142	0					
ANR	1191162	MemberAccess	source_list . begin		1191142	0					
ANR	1191163	Identifier	source_list		1191142	0					
ANR	1191164	Identifier	begin		1191142	1					
ANR	1191165	ArgumentList			1191142	1					
ANR	1191166	Condition	iter != source_list . end ( )	301:34:6865:6889	1191142	1	True				
ANR	1191167	EqualityExpression	iter != source_list . end ( )		1191142	0		!=			
ANR	1191168	Identifier	iter		1191142	0					
ANR	1191169	CallExpression	source_list . end ( )		1191142	1					
ANR	1191170	Callee	source_list . end		1191142	0					
ANR	1191171	MemberAccess	source_list . end		1191142	0					
ANR	1191172	Identifier	source_list		1191142	0					
ANR	1191173	Identifier	end		1191142	1					
ANR	1191174	ArgumentList			1191142	1					
ANR	1191175	PostIncDecOperationExpression	iter ++	301:61:6892:6897	1191142	2	True				
ANR	1191176	Identifier	iter		1191142	0					
ANR	1191177	IncDec	++		1191142	1					
ANR	1191178	CompoundStatement		6:2:150:190	1191142	3					
ANR	1191179	IdentifierDeclStatement	const DCLeaseManagerLease * lease = * iter ;	302:2:6905:6945	1191142	0	True				
ANR	1191180	IdentifierDecl	* lease = * iter		1191142	0					
ANR	1191181	IdentifierDeclType	const DCLeaseManagerLease *		1191142	0					
ANR	1191182	Identifier	lease		1191142	1					
ANR	1191183	AssignmentExpression	* lease = * iter		1191142	2		=			
ANR	1191184	Identifier	lease		1191142	0					
ANR	1191185	UnaryOperationExpression	* iter		1191142	1					
ANR	1191186	UnaryOperator	*		1191142	0					
ANR	1191187	Identifier	iter		1191142	1					
ANR	1191188	ExpressionStatement	dest_list . push_back ( lease )	303:2:6949:6977	1191142	1	True				
ANR	1191189	CallExpression	dest_list . push_back ( lease )		1191142	0					
ANR	1191190	Callee	dest_list . push_back		1191142	0					
ANR	1191191	MemberAccess	dest_list . push_back		1191142	0					
ANR	1191192	Identifier	dest_list		1191142	0					
ANR	1191193	Identifier	push_back		1191142	1					
ANR	1191194	ArgumentList	lease		1191142	1					
ANR	1191195	Argument	lease		1191142	0					
ANR	1191196	Identifier	lease		1191142	0					
ANR	1191197	ExpressionStatement	count ++	304:2:6981:6988	1191142	2	True				
ANR	1191198	PostIncDecOperationExpression	count ++		1191142	0					
ANR	1191199	Identifier	count		1191142	0					
ANR	1191200	IncDec	++		1191142	1					
ANR	1191201	ReturnStatement	return count ;	307:1:6995:7007	1191142	3	True				
ANR	1191202	Identifier	count		1191142	0					
ANR	1191203	ReturnType	int		1191142	1					
ANR	1191204	Identifier	DCLeaseManagerLease_copyList		1191142	2					
ANR	1191205	ParameterList	"const list < const DCLeaseManagerLease * > & source_list , list < const DCLeaseManagerLease * > & dest_list"		1191142	3					
ANR	1191206	Parameter	const list < const DCLeaseManagerLease * > & source_list	295:1:6651:6702	1191142	0	True				
ANR	1191207	ParameterType	const list < const DCLeaseManagerLease * > &		1191142	0					
ANR	1191208	Identifier	source_list		1191142	1					
ANR	1191209	Parameter	list < const DCLeaseManagerLease * > & dest_list	296:1:6706:6750	1191142	1	True				
ANR	1191210	ParameterType	list < const DCLeaseManagerLease * > &		1191142	0					
ANR	1191211	Identifier	dest_list		1191142	1					
ANR	1191212	CFGEntryNode	ENTRY		1191142		True				
ANR	1191213	CFGExitNode	EXIT		1191142		True				
ANR	1191214	Symbol	* iter		1191142						
ANR	1191215	Symbol	source_list		1191142						
ANR	1191216	Symbol	dest_list		1191142						
ANR	1191217	Symbol	source_list . begin		1191142						
ANR	1191218	Symbol	count		1191142						
ANR	1191219	Symbol	iter		1191142						
ANR	1191220	Symbol	lease		1191142						
ANR	1191221	Symbol	source_list . end		1191142						
ANR	1191222	Function	DCLeaseManagerLease_copyList	310:0:7012:7382							
ANR	1191223	FunctionDef	"DCLeaseManagerLease_copyList (const list < DCLeaseManagerLease * > & source_list , list < DCLeaseManagerLease * > & dest_list)"		1191222	0					
ANR	1191224	CompoundStatement		314:0:7139:7382	1191222	0					
ANR	1191225	IdentifierDeclStatement	int count = 0 ;	315:1:7142:7156	1191222	0	True				
ANR	1191226	IdentifierDecl	count = 0		1191222	0					
ANR	1191227	IdentifierDeclType	int		1191222	0					
ANR	1191228	Identifier	count		1191222	1					
ANR	1191229	AssignmentExpression	count = 0		1191222	2		=			
ANR	1191230	Identifier	count		1191222	0					
ANR	1191231	PrimaryExpression	0		1191222	1					
ANR	1191232	IdentifierDeclStatement	list < DCLeaseManagerLease * > :: const_iterator iter ;	317:1:7160:7208	1191222	1	True				
ANR	1191233	IdentifierDecl	iter		1191222	0					
ANR	1191234	IdentifierDeclType	list < DCLeaseManagerLease * > :: const_iterator		1191222	0					
ANR	1191235	Identifier	iter		1191222	1					
ANR	1191236	ForStatement	for ( iter = source_list . begin ( ) ; iter != source_list . end ( ) ; iter ++ )		1191222	2					
ANR	1191237	ForInit	iter = source_list . begin ( ) ;	318:6:7216:7242	1191222	0	True				
ANR	1191238	AssignmentExpression	iter = source_list . begin ( )		1191222	0		=			
ANR	1191239	Identifier	iter		1191222	0					
ANR	1191240	CallExpression	source_list . begin ( )		1191222	1					
ANR	1191241	Callee	source_list . begin		1191222	0					
ANR	1191242	MemberAccess	source_list . begin		1191222	0					
ANR	1191243	Identifier	source_list		1191222	0					
ANR	1191244	Identifier	begin		1191222	1					
ANR	1191245	ArgumentList			1191222	1					
ANR	1191246	Condition	iter != source_list . end ( )	318:34:7244:7268	1191222	1	True				
ANR	1191247	EqualityExpression	iter != source_list . end ( )		1191222	0		!=			
ANR	1191248	Identifier	iter		1191222	0					
ANR	1191249	CallExpression	source_list . end ( )		1191222	1					
ANR	1191250	Callee	source_list . end		1191222	0					
ANR	1191251	MemberAccess	source_list . end		1191222	0					
ANR	1191252	Identifier	source_list		1191222	0					
ANR	1191253	Identifier	end		1191222	1					
ANR	1191254	ArgumentList			1191222	1					
ANR	1191255	PostIncDecOperationExpression	iter ++	318:61:7271:7276	1191222	2	True				
ANR	1191256	Identifier	iter		1191222	0					
ANR	1191257	IncDec	++		1191222	1					
ANR	1191258	CompoundStatement		6:2:144:178	1191222	3					
ANR	1191259	IdentifierDeclStatement	DCLeaseManagerLease * lease = * iter ;	319:2:7284:7318	1191222	0	True				
ANR	1191260	IdentifierDecl	* lease = * iter		1191222	0					
ANR	1191261	IdentifierDeclType	DCLeaseManagerLease *		1191222	0					
ANR	1191262	Identifier	lease		1191222	1					
ANR	1191263	AssignmentExpression	* lease = * iter		1191222	2		=			
ANR	1191264	Identifier	lease		1191222	0					
ANR	1191265	UnaryOperationExpression	* iter		1191222	1					
ANR	1191266	UnaryOperator	*		1191222	0					
ANR	1191267	Identifier	iter		1191222	1					
ANR	1191268	ExpressionStatement	dest_list . push_back ( lease )	320:2:7322:7350	1191222	1	True				
ANR	1191269	CallExpression	dest_list . push_back ( lease )		1191222	0					
ANR	1191270	Callee	dest_list . push_back		1191222	0					
ANR	1191271	MemberAccess	dest_list . push_back		1191222	0					
ANR	1191272	Identifier	dest_list		1191222	0					
ANR	1191273	Identifier	push_back		1191222	1					
ANR	1191274	ArgumentList	lease		1191222	1					
ANR	1191275	Argument	lease		1191222	0					
ANR	1191276	Identifier	lease		1191222	0					
ANR	1191277	ExpressionStatement	count ++	321:2:7354:7361	1191222	2	True				
ANR	1191278	PostIncDecOperationExpression	count ++		1191222	0					
ANR	1191279	Identifier	count		1191222	0					
ANR	1191280	IncDec	++		1191222	1					
ANR	1191281	ReturnStatement	return count ;	324:1:7368:7380	1191222	3	True				
ANR	1191282	Identifier	count		1191222	0					
ANR	1191283	ReturnType	int		1191222	1					
ANR	1191284	Identifier	DCLeaseManagerLease_copyList		1191222	2					
ANR	1191285	ParameterList	"const list < DCLeaseManagerLease * > & source_list , list < DCLeaseManagerLease * > & dest_list"		1191222	3					
ANR	1191286	Parameter	const list < DCLeaseManagerLease * > & source_list	312:1:7047:7092	1191222	0	True				
ANR	1191287	ParameterType	const list < DCLeaseManagerLease * > &		1191222	0					
ANR	1191288	Identifier	source_list		1191222	1					
ANR	1191289	Parameter	list < DCLeaseManagerLease * > & dest_list	313:1:7096:7135	1191222	1	True				
ANR	1191290	ParameterType	list < DCLeaseManagerLease * > &		1191222	0					
ANR	1191291	Identifier	dest_list		1191222	1					
ANR	1191292	CFGEntryNode	ENTRY		1191222		True				
ANR	1191293	CFGExitNode	EXIT		1191222		True				
ANR	1191294	Symbol	* iter		1191222						
ANR	1191295	Symbol	source_list		1191222						
ANR	1191296	Symbol	dest_list		1191222						
ANR	1191297	Symbol	source_list . begin		1191222						
ANR	1191298	Symbol	count		1191222						
ANR	1191299	Symbol	iter		1191222						
ANR	1191300	Symbol	lease		1191222						
ANR	1191301	Symbol	source_list . end		1191222						
ANR	1191302	Function	DCLeaseManagerLease_removeLeases	327:0:7385:8127							
ANR	1191303	FunctionDef	"DCLeaseManagerLease_removeLeases (list < DCLeaseManagerLease * > & lease_list , const list < const DCLeaseManagerLease * > & remove_list)"		1191302	0					
ANR	1191304	CompoundStatement		332:0:7525:8127	1191302	0					
ANR	1191305	IdentifierDeclStatement	int errors = 0 ;	333:1:7528:7543	1191302	0	True				
ANR	1191306	IdentifierDecl	errors = 0		1191302	0					
ANR	1191307	IdentifierDeclType	int		1191302	0					
ANR	1191308	Identifier	errors		1191302	1					
ANR	1191309	AssignmentExpression	errors = 0		1191302	2		=			
ANR	1191310	Identifier	errors		1191302	0					
ANR	1191311	PrimaryExpression	0		1191302	1					
ANR	1191312	IdentifierDeclStatement	list < const DCLeaseManagerLease * > :: const_iterator iter ;	335:1:7547:7601	1191302	1	True				
ANR	1191313	IdentifierDecl	iter		1191302	0					
ANR	1191314	IdentifierDeclType	list < const DCLeaseManagerLease * > :: const_iterator		1191302	0					
ANR	1191315	Identifier	iter		1191302	1					
ANR	1191316	ForStatement	for ( iter = remove_list . begin ( ) ; iter != remove_list . end ( ) ; iter ++ )		1191302	2					
ANR	1191317	ForInit	iter = remove_list . begin ( ) ;	336:6:7609:7636	1191302	0	True				
ANR	1191318	AssignmentExpression	iter = remove_list . begin ( )		1191302	0		=			
ANR	1191319	Identifier	iter		1191302	0					
ANR	1191320	CallExpression	remove_list . begin ( )		1191302	1					
ANR	1191321	Callee	remove_list . begin		1191302	0					
ANR	1191322	MemberAccess	remove_list . begin		1191302	0					
ANR	1191323	Identifier	remove_list		1191302	0					
ANR	1191324	Identifier	begin		1191302	1					
ANR	1191325	ArgumentList			1191302	1					
ANR	1191326	Condition	iter != remove_list . end ( )	336:35:7638:7663	1191302	1	True				
ANR	1191327	EqualityExpression	iter != remove_list . end ( )		1191302	0		!=			
ANR	1191328	Identifier	iter		1191302	0					
ANR	1191329	CallExpression	remove_list . end ( )		1191302	1					
ANR	1191330	Callee	remove_list . end		1191302	0					
ANR	1191331	MemberAccess	remove_list . end		1191302	0					
ANR	1191332	Identifier	remove_list		1191302	0					
ANR	1191333	Identifier	end		1191302	1					
ANR	1191334	ArgumentList			1191302	1					
ANR	1191335	PostIncDecOperationExpression	iter ++	336:63:7666:7671	1191302	2	True				
ANR	1191336	Identifier	iter		1191302	0					
ANR	1191337	IncDec	++		1191302	1					
ANR	1191338	CompoundStatement		7:2:198:218	1191302	3					
ANR	1191339	IdentifierDeclStatement	const DCLeaseManagerLease * remove = * iter ;	337:2:7679:7720	1191302	0	True				
ANR	1191340	IdentifierDecl	* remove = * iter		1191302	0					
ANR	1191341	IdentifierDeclType	const DCLeaseManagerLease *		1191302	0					
ANR	1191342	Identifier	remove		1191302	1					
ANR	1191343	AssignmentExpression	* remove = * iter		1191302	2		=			
ANR	1191344	Identifier	remove		1191302	0					
ANR	1191345	UnaryOperationExpression	* iter		1191302	1					
ANR	1191346	UnaryOperator	*		1191302	0					
ANR	1191347	Identifier	iter		1191302	1					
ANR	1191348	IdentifierDeclStatement	bool matched = false ;	338:2:7724:7744	1191302	1	True				
ANR	1191349	IdentifierDecl	matched = false		1191302	0					
ANR	1191350	IdentifierDeclType	bool		1191302	0					
ANR	1191351	Identifier	matched		1191302	1					
ANR	1191352	AssignmentExpression	matched = false		1191302	2		=			
ANR	1191353	Identifier	false		1191302	0					
ANR	1191354	Identifier	false		1191302	1					
ANR	1191355	ForStatement	for ( list < DCLeaseManagerLease * > :: iterator iter2 = lease_list . begin ( ) ; iter2 != lease_list . end ( ) ; iter2 ++ )		1191302	2					
ANR	1191356	ForInit	list < DCLeaseManagerLease * > :: iterator iter2 = lease_list . begin ( ) ;	339:7:7753:7817	1191302	0	True				
ANR	1191357	IdentifierDeclStatement	list < DCLeaseManagerLease * > :: iterator iter2 = lease_list . begin ( ) ;		1191302	0					
ANR	1191358	IdentifierDecl	iter2 = lease_list . begin ( )		1191302	0					
ANR	1191359	IdentifierDeclType	list < DCLeaseManagerLease * > :: iterator		1191302	0					
ANR	1191360	Identifier	iter2		1191302	1					
ANR	1191361	AssignmentExpression	iter2 = lease_list . begin ( )		1191302	2		=			
ANR	1191362	Identifier	iter2		1191302	0					
ANR	1191363	CallExpression	lease_list . begin ( )		1191302	1					
ANR	1191364	Callee	lease_list . begin		1191302	0					
ANR	1191365	MemberAccess	lease_list . begin		1191302	0					
ANR	1191366	Identifier	lease_list		1191302	0					
ANR	1191367	Identifier	begin		1191302	1					
ANR	1191368	ArgumentList			1191302	1					
ANR	1191369	Condition	iter2 != lease_list . end ( )	340:4:7823:7847	1191302	1	True				
ANR	1191370	EqualityExpression	iter2 != lease_list . end ( )		1191302	0		!=			
ANR	1191371	Identifier	iter2		1191302	0					
ANR	1191372	CallExpression	lease_list . end ( )		1191302	1					
ANR	1191373	Callee	lease_list . end		1191302	0					
ANR	1191374	MemberAccess	lease_list . end		1191302	0					
ANR	1191375	Identifier	lease_list		1191302	0					
ANR	1191376	Identifier	end		1191302	1					
ANR	1191377	ArgumentList			1191302	1					
ANR	1191378	PostIncDecOperationExpression	iter2 ++	341:4:7854:7860	1191302	2	True				
ANR	1191379	Identifier	iter2		1191302	0					
ANR	1191380	IncDec	++		1191302	1					
ANR	1191381	CompoundStatement		11:3:343:378	1191302	3					
ANR	1191382	IdentifierDeclStatement	DCLeaseManagerLease * lease = * iter2 ;	342:3:7869:7904	1191302	0	True				
ANR	1191383	IdentifierDecl	* lease = * iter2		1191302	0					
ANR	1191384	IdentifierDeclType	DCLeaseManagerLease *		1191302	0					
ANR	1191385	Identifier	lease		1191302	1					
ANR	1191386	AssignmentExpression	* lease = * iter2		1191302	2		=			
ANR	1191387	Identifier	lease		1191302	0					
ANR	1191388	UnaryOperationExpression	* iter2		1191302	1					
ANR	1191389	UnaryOperator	*		1191302	0					
ANR	1191390	Identifier	iter2		1191302	1					
ANR	1191391	IfStatement	if ( remove -> leaseId ( ) == lease -> leaseId ( ) )		1191302	1					
ANR	1191392	Condition	remove -> leaseId ( ) == lease -> leaseId ( )	343:8:7914:7950	1191302	0	True				
ANR	1191393	EqualityExpression	remove -> leaseId ( ) == lease -> leaseId ( )		1191302	0		==			
ANR	1191394	CallExpression	remove -> leaseId ( )		1191302	0					
ANR	1191395	Callee	remove -> leaseId		1191302	0					
ANR	1191396	PtrMemberAccess	remove -> leaseId		1191302	0					
ANR	1191397	Identifier	remove		1191302	0					
ANR	1191398	Identifier	leaseId		1191302	1					
ANR	1191399	ArgumentList			1191302	1					
ANR	1191400	CallExpression	lease -> leaseId ( )		1191302	1					
ANR	1191401	Callee	lease -> leaseId		1191302	0					
ANR	1191402	PtrMemberAccess	lease -> leaseId		1191302	0					
ANR	1191403	Identifier	lease		1191302	0					
ANR	1191404	Identifier	leaseId		1191302	1					
ANR	1191405	ArgumentList			1191302	1					
ANR	1191406	CompoundStatement		12:48:428:428	1191302	1					
ANR	1191407	ExpressionStatement	matched = true	344:4:7960:7974	1191302	0	True				
ANR	1191408	AssignmentExpression	matched = true		1191302	0		=			
ANR	1191409	Identifier	matched		1191302	0					
ANR	1191410	Identifier	true		1191302	1					
ANR	1191411	ExpressionStatement	lease_list . erase ( iter2 )	345:4:7980:8005	1191302	1	True				
ANR	1191412	CallExpression	lease_list . erase ( iter2 )		1191302	0					
ANR	1191413	Callee	lease_list . erase		1191302	0					
ANR	1191414	MemberAccess	lease_list . erase		1191302	0					
ANR	1191415	Identifier	lease_list		1191302	0					
ANR	1191416	Identifier	erase		1191302	1					
ANR	1191417	ArgumentList	iter2		1191302	1					
ANR	1191418	Argument	iter2		1191302	0					
ANR	1191419	Identifier	iter2		1191302	0					
ANR	1191420	Statement	delete	346:4:8037:8042	1191302	2	True				
ANR	1191421	ExpressionStatement	lease	346:11:8044:8049	1191302	3	True				
ANR	1191422	Identifier	lease		1191302	0					
ANR	1191423	BreakStatement	break ;	347:4:8055:8060	1191302	4	True				
ANR	1191424	IfStatement	if ( ! matched )		1191302	3					
ANR	1191425	Condition	! matched	350:7:8078:8085	1191302	0	True				
ANR	1191426	UnaryOperationExpression	! matched		1191302	0					
ANR	1191427	UnaryOperator	!		1191302	0					
ANR	1191428	Identifier	matched		1191302	1					
ANR	1191429	CompoundStatement		19:18:563:563	1191302	1					
ANR	1191430	ExpressionStatement	errors ++	351:3:8094:8102	1191302	0	True				
ANR	1191431	PostIncDecOperationExpression	errors ++		1191302	0					
ANR	1191432	Identifier	errors		1191302	0					
ANR	1191433	IncDec	++		1191302	1					
ANR	1191434	ReturnStatement	return errors ;	354:1:8112:8125	1191302	3	True				
ANR	1191435	Identifier	errors		1191302	0					
ANR	1191436	ReturnType	int		1191302	1					
ANR	1191437	Identifier	DCLeaseManagerLease_removeLeases		1191302	2					
ANR	1191438	ParameterList	"list < DCLeaseManagerLease * > & lease_list , const list < const DCLeaseManagerLease * > & remove_list"		1191302	3					
ANR	1191439	Parameter	list < DCLeaseManagerLease * > & lease_list	329:1:7424:7465	1191302	0	True				
ANR	1191440	ParameterType	list < DCLeaseManagerLease * > &		1191302	0					
ANR	1191441	Identifier	lease_list		1191302	1					
ANR	1191442	Parameter	const list < const DCLeaseManagerLease * > & remove_list	330:1:7469:7520	1191302	1	True				
ANR	1191443	ParameterType	const list < const DCLeaseManagerLease * > &		1191302	0					
ANR	1191444	Identifier	remove_list		1191302	1					
ANR	1191445	CFGEntryNode	ENTRY		1191302		True				
ANR	1191446	CFGExitNode	EXIT		1191302		True				
ANR	1191447	Symbol	remove -> leaseId		1191302						
ANR	1191448	Symbol	lease_list		1191302						
ANR	1191449	Symbol	lease_list . begin		1191302						
ANR	1191450	Symbol	lease_list . end		1191302						
ANR	1191451	Symbol	remove_list		1191302						
ANR	1191452	Symbol	remove_list . begin		1191302						
ANR	1191453	Symbol	* lease		1191302						
ANR	1191454	Symbol	iter2		1191302						
ANR	1191455	Symbol	false		1191302						
ANR	1191456	Symbol	iter		1191302						
ANR	1191457	Symbol	remove		1191302						
ANR	1191458	Symbol	* iter		1191302						
ANR	1191459	Symbol	lease -> leaseId		1191302						
ANR	1191460	Symbol	true		1191302						
ANR	1191461	Symbol	* remove		1191302						
ANR	1191462	Symbol	matched		1191302						
ANR	1191463	Symbol	* iter2		1191302						
ANR	1191464	Symbol	lease		1191302						
ANR	1191465	Symbol	errors		1191302						
ANR	1191466	Symbol	remove_list . end		1191302						
ANR	1191467	Function	DCLeaseManagerLease_updateLeases	357:0:8130:8818							
ANR	1191468	FunctionDef	"DCLeaseManagerLease_updateLeases (list < DCLeaseManagerLease * > & lease_list , const list < const DCLeaseManagerLease * > & update_list)"		1191467	0					
ANR	1191469	CompoundStatement		362:0:8270:8818	1191467	0					
ANR	1191470	IdentifierDeclStatement	int errors = 0 ;	363:1:8273:8288	1191467	0	True				
ANR	1191471	IdentifierDecl	errors = 0		1191467	0					
ANR	1191472	IdentifierDeclType	int		1191467	0					
ANR	1191473	Identifier	errors		1191467	1					
ANR	1191474	AssignmentExpression	errors = 0		1191467	2		=			
ANR	1191475	Identifier	errors		1191467	0					
ANR	1191476	PrimaryExpression	0		1191467	1					
ANR	1191477	IdentifierDeclStatement	list < const DCLeaseManagerLease * > :: const_iterator iter ;	365:1:8292:8346	1191467	1	True				
ANR	1191478	IdentifierDecl	iter		1191467	0					
ANR	1191479	IdentifierDeclType	list < const DCLeaseManagerLease * > :: const_iterator		1191467	0					
ANR	1191480	Identifier	iter		1191467	1					
ANR	1191481	ForStatement	for ( iter = update_list . begin ( ) ; iter != update_list . end ( ) ; iter ++ )		1191467	2					
ANR	1191482	ForInit	iter = update_list . begin ( ) ;	366:6:8354:8381	1191467	0	True				
ANR	1191483	AssignmentExpression	iter = update_list . begin ( )		1191467	0		=			
ANR	1191484	Identifier	iter		1191467	0					
ANR	1191485	CallExpression	update_list . begin ( )		1191467	1					
ANR	1191486	Callee	update_list . begin		1191467	0					
ANR	1191487	MemberAccess	update_list . begin		1191467	0					
ANR	1191488	Identifier	update_list		1191467	0					
ANR	1191489	Identifier	begin		1191467	1					
ANR	1191490	ArgumentList			1191467	1					
ANR	1191491	Condition	iter != update_list . end ( )	366:35:8383:8408	1191467	1	True				
ANR	1191492	EqualityExpression	iter != update_list . end ( )		1191467	0		!=			
ANR	1191493	Identifier	iter		1191467	0					
ANR	1191494	CallExpression	update_list . end ( )		1191467	1					
ANR	1191495	Callee	update_list . end		1191467	0					
ANR	1191496	MemberAccess	update_list . end		1191467	0					
ANR	1191497	Identifier	update_list		1191467	0					
ANR	1191498	Identifier	end		1191467	1					
ANR	1191499	ArgumentList			1191467	1					
ANR	1191500	PostIncDecOperationExpression	iter ++	366:63:8411:8416	1191467	2	True				
ANR	1191501	Identifier	iter		1191467	0					
ANR	1191502	IncDec	++		1191467	1					
ANR	1191503	CompoundStatement		7:2:198:218	1191467	3					
ANR	1191504	IdentifierDeclStatement	const DCLeaseManagerLease * update = * iter ;	367:2:8424:8465	1191467	0	True				
ANR	1191505	IdentifierDecl	* update = * iter		1191467	0					
ANR	1191506	IdentifierDeclType	const DCLeaseManagerLease *		1191467	0					
ANR	1191507	Identifier	update		1191467	1					
ANR	1191508	AssignmentExpression	* update = * iter		1191467	2		=			
ANR	1191509	Identifier	update		1191467	0					
ANR	1191510	UnaryOperationExpression	* iter		1191467	1					
ANR	1191511	UnaryOperator	*		1191467	0					
ANR	1191512	Identifier	iter		1191467	1					
ANR	1191513	IdentifierDeclStatement	bool matched = false ;	368:2:8469:8489	1191467	1	True				
ANR	1191514	IdentifierDecl	matched = false		1191467	0					
ANR	1191515	IdentifierDeclType	bool		1191467	0					
ANR	1191516	Identifier	matched		1191467	1					
ANR	1191517	AssignmentExpression	matched = false		1191467	2		=			
ANR	1191518	Identifier	false		1191467	0					
ANR	1191519	Identifier	false		1191467	1					
ANR	1191520	ForStatement	for ( list < DCLeaseManagerLease * > :: iterator iter2 = lease_list . begin ( ) ; iter2 != lease_list . end ( ) ; iter2 ++ )		1191467	2					
ANR	1191521	ForInit	list < DCLeaseManagerLease * > :: iterator iter2 = lease_list . begin ( ) ;	369:7:8498:8562	1191467	0	True				
ANR	1191522	IdentifierDeclStatement	list < DCLeaseManagerLease * > :: iterator iter2 = lease_list . begin ( ) ;		1191467	0					
ANR	1191523	IdentifierDecl	iter2 = lease_list . begin ( )		1191467	0					
ANR	1191524	IdentifierDeclType	list < DCLeaseManagerLease * > :: iterator		1191467	0					
ANR	1191525	Identifier	iter2		1191467	1					
ANR	1191526	AssignmentExpression	iter2 = lease_list . begin ( )		1191467	2		=			
ANR	1191527	Identifier	iter2		1191467	0					
ANR	1191528	CallExpression	lease_list . begin ( )		1191467	1					
ANR	1191529	Callee	lease_list . begin		1191467	0					
ANR	1191530	MemberAccess	lease_list . begin		1191467	0					
ANR	1191531	Identifier	lease_list		1191467	0					
ANR	1191532	Identifier	begin		1191467	1					
ANR	1191533	ArgumentList			1191467	1					
ANR	1191534	Condition	iter2 != lease_list . end ( )	370:4:8568:8592	1191467	1	True				
ANR	1191535	EqualityExpression	iter2 != lease_list . end ( )		1191467	0		!=			
ANR	1191536	Identifier	iter2		1191467	0					
ANR	1191537	CallExpression	lease_list . end ( )		1191467	1					
ANR	1191538	Callee	lease_list . end		1191467	0					
ANR	1191539	MemberAccess	lease_list . end		1191467	0					
ANR	1191540	Identifier	lease_list		1191467	0					
ANR	1191541	Identifier	end		1191467	1					
ANR	1191542	ArgumentList			1191467	1					
ANR	1191543	PostIncDecOperationExpression	iter2 ++	371:4:8599:8605	1191467	2	True				
ANR	1191544	Identifier	iter2		1191467	0					
ANR	1191545	IncDec	++		1191467	1					
ANR	1191546	CompoundStatement		11:3:343:378	1191467	3					
ANR	1191547	IdentifierDeclStatement	DCLeaseManagerLease * lease = * iter2 ;	372:3:8614:8649	1191467	0	True				
ANR	1191548	IdentifierDecl	* lease = * iter2		1191467	0					
ANR	1191549	IdentifierDeclType	DCLeaseManagerLease *		1191467	0					
ANR	1191550	Identifier	lease		1191467	1					
ANR	1191551	AssignmentExpression	* lease = * iter2		1191467	2		=			
ANR	1191552	Identifier	lease		1191467	0					
ANR	1191553	UnaryOperationExpression	* iter2		1191467	1					
ANR	1191554	UnaryOperator	*		1191467	0					
ANR	1191555	Identifier	iter2		1191467	1					
ANR	1191556	IfStatement	if ( update -> idMatch ( * lease ) )		1191467	1					
ANR	1191557	Condition	update -> idMatch ( * lease )	373:8:8659:8681	1191467	0	True				
ANR	1191558	CallExpression	update -> idMatch ( * lease )		1191467	0					
ANR	1191559	Callee	update -> idMatch		1191467	0					
ANR	1191560	PtrMemberAccess	update -> idMatch		1191467	0					
ANR	1191561	Identifier	update		1191467	0					
ANR	1191562	Identifier	idMatch		1191467	1					
ANR	1191563	ArgumentList	* lease		1191467	1					
ANR	1191564	Argument	* lease		1191467	0					
ANR	1191565	UnaryOperationExpression	* lease		1191467	0					
ANR	1191566	UnaryOperator	*		1191467	0					
ANR	1191567	Identifier	lease		1191467	1					
ANR	1191568	CompoundStatement		12:34:414:414	1191467	1					
ANR	1191569	ExpressionStatement	matched = true	374:4:8691:8705	1191467	0	True				
ANR	1191570	AssignmentExpression	matched = true		1191467	0		=			
ANR	1191571	Identifier	matched		1191467	0					
ANR	1191572	Identifier	true		1191467	1					
ANR	1191573	ExpressionStatement	lease -> copyUpdates ( * update )	375:4:8711:8740	1191467	1	True				
ANR	1191574	CallExpression	lease -> copyUpdates ( * update )		1191467	0					
ANR	1191575	Callee	lease -> copyUpdates		1191467	0					
ANR	1191576	PtrMemberAccess	lease -> copyUpdates		1191467	0					
ANR	1191577	Identifier	lease		1191467	0					
ANR	1191578	Identifier	copyUpdates		1191467	1					
ANR	1191579	ArgumentList	* update		1191467	1					
ANR	1191580	Argument	* update		1191467	0					
ANR	1191581	UnaryOperationExpression	* update		1191467	0					
ANR	1191582	UnaryOperator	*		1191467	0					
ANR	1191583	Identifier	update		1191467	1					
ANR	1191584	BreakStatement	break ;	376:4:8746:8751	1191467	2	True				
ANR	1191585	IfStatement	if ( ! matched )		1191467	3					
ANR	1191586	Condition	! matched	379:7:8769:8776	1191467	0	True				
ANR	1191587	UnaryOperationExpression	! matched		1191467	0					
ANR	1191588	UnaryOperator	!		1191467	0					
ANR	1191589	Identifier	matched		1191467	1					
ANR	1191590	CompoundStatement		18:18:509:509	1191467	1					
ANR	1191591	ExpressionStatement	errors ++	380:3:8785:8793	1191467	0	True				
ANR	1191592	PostIncDecOperationExpression	errors ++		1191467	0					
ANR	1191593	Identifier	errors		1191467	0					
ANR	1191594	IncDec	++		1191467	1					
ANR	1191595	ReturnStatement	return errors ;	383:1:8803:8816	1191467	3	True				
ANR	1191596	Identifier	errors		1191467	0					
ANR	1191597	ReturnType	int		1191467	1					
ANR	1191598	Identifier	DCLeaseManagerLease_updateLeases		1191467	2					
ANR	1191599	ParameterList	"list < DCLeaseManagerLease * > & lease_list , const list < const DCLeaseManagerLease * > & update_list"		1191467	3					
ANR	1191600	Parameter	list < DCLeaseManagerLease * > & lease_list	359:1:8169:8210	1191467	0	True				
ANR	1191601	ParameterType	list < DCLeaseManagerLease * > &		1191467	0					
ANR	1191602	Identifier	lease_list		1191467	1					
ANR	1191603	Parameter	const list < const DCLeaseManagerLease * > & update_list	360:1:8214:8265	1191467	1	True				
ANR	1191604	ParameterType	const list < const DCLeaseManagerLease * > &		1191467	0					
ANR	1191605	Identifier	update_list		1191467	1					
ANR	1191606	CFGEntryNode	ENTRY		1191467		True				
ANR	1191607	CFGExitNode	EXIT		1191467		True				
ANR	1191608	Symbol	lease_list		1191467						
ANR	1191609	Symbol	lease_list . begin		1191467						
ANR	1191610	Symbol	lease_list . end		1191467						
ANR	1191611	Symbol	* lease		1191467						
ANR	1191612	Symbol	iter2		1191467						
ANR	1191613	Symbol	* update		1191467						
ANR	1191614	Symbol	false		1191467						
ANR	1191615	Symbol	iter		1191467						
ANR	1191616	Symbol	update		1191467						
ANR	1191617	Symbol	update -> idMatch		1191467						
ANR	1191618	Symbol	* iter		1191467						
ANR	1191619	Symbol	true		1191467						
ANR	1191620	Symbol	update_list		1191467						
ANR	1191621	Symbol	matched		1191467						
ANR	1191622	Symbol	* iter2		1191467						
ANR	1191623	Symbol	update_list . begin		1191467						
ANR	1191624	Symbol	lease		1191467						
ANR	1191625	Symbol	update_list . end		1191467						
ANR	1191626	Symbol	errors		1191467						
ANR	1191627	Function	DCLeaseManagerLease_markLeases	386:0:8821:9114							
ANR	1191628	FunctionDef	"DCLeaseManagerLease_markLeases (list < DCLeaseManagerLease * > & lease_list , bool mark)"		1191627	0					
ANR	1191629	CompoundStatement		391:0:8920:9114	1191627	0					
ANR	1191630	ForStatement	for ( list < DCLeaseManagerLease * > :: iterator iter = lease_list . begin ( ) ; iter != lease_list . end ( ) ; iter ++ )		1191627	0					
ANR	1191631	ForInit	list < DCLeaseManagerLease * > :: iterator iter = lease_list . begin ( ) ;	392:6:8928:8991	1191627	0	True				
ANR	1191632	IdentifierDeclStatement	list < DCLeaseManagerLease * > :: iterator iter = lease_list . begin ( ) ;		1191627	0					
ANR	1191633	IdentifierDecl	iter = lease_list . begin ( )		1191627	0					
ANR	1191634	IdentifierDeclType	list < DCLeaseManagerLease * > :: iterator		1191627	0					
ANR	1191635	Identifier	iter		1191627	1					
ANR	1191636	AssignmentExpression	iter = lease_list . begin ( )		1191627	2		=			
ANR	1191637	Identifier	iter		1191627	0					
ANR	1191638	CallExpression	lease_list . begin ( )		1191627	1					
ANR	1191639	Callee	lease_list . begin		1191627	0					
ANR	1191640	MemberAccess	lease_list . begin		1191627	0					
ANR	1191641	Identifier	lease_list		1191627	0					
ANR	1191642	Identifier	begin		1191627	1					
ANR	1191643	ArgumentList			1191627	1					
ANR	1191644	Condition	iter != lease_list . end ( )	393:3:8996:9019	1191627	1	True				
ANR	1191645	EqualityExpression	iter != lease_list . end ( )		1191627	0		!=			
ANR	1191646	Identifier	iter		1191627	0					
ANR	1191647	CallExpression	lease_list . end ( )		1191627	1					
ANR	1191648	Callee	lease_list . end		1191627	0					
ANR	1191649	MemberAccess	lease_list . end		1191627	0					
ANR	1191650	Identifier	lease_list		1191627	0					
ANR	1191651	Identifier	end		1191627	1					
ANR	1191652	ArgumentList			1191627	1					
ANR	1191653	PostIncDecOperationExpression	iter ++	394:3:9025:9030	1191627	2	True				
ANR	1191654	Identifier	iter		1191627	0					
ANR	1191655	IncDec	++		1191627	1					
ANR	1191656	CompoundStatement		5:2:117:151	1191627	3					
ANR	1191657	IdentifierDeclStatement	DCLeaseManagerLease * lease = * iter ;	395:2:9038:9072	1191627	0	True				
ANR	1191658	IdentifierDecl	* lease = * iter		1191627	0					
ANR	1191659	IdentifierDeclType	DCLeaseManagerLease *		1191627	0					
ANR	1191660	Identifier	lease		1191627	1					
ANR	1191661	AssignmentExpression	* lease = * iter		1191627	2		=			
ANR	1191662	Identifier	lease		1191627	0					
ANR	1191663	UnaryOperationExpression	* iter		1191627	1					
ANR	1191664	UnaryOperator	*		1191627	0					
ANR	1191665	Identifier	iter		1191627	1					
ANR	1191666	ExpressionStatement	lease -> setMark ( mark )	396:2:9076:9098	1191627	1	True				
ANR	1191667	CallExpression	lease -> setMark ( mark )		1191627	0					
ANR	1191668	Callee	lease -> setMark		1191627	0					
ANR	1191669	PtrMemberAccess	lease -> setMark		1191627	0					
ANR	1191670	Identifier	lease		1191627	0					
ANR	1191671	Identifier	setMark		1191627	1					
ANR	1191672	ArgumentList	mark		1191627	1					
ANR	1191673	Argument	mark		1191627	0					
ANR	1191674	Identifier	mark		1191627	0					
ANR	1191675	ReturnStatement	return 0 ;	398:1:9104:9112	1191627	1	True				
ANR	1191676	PrimaryExpression	0		1191627	0					
ANR	1191677	ReturnType	int		1191627	1					
ANR	1191678	Identifier	DCLeaseManagerLease_markLeases		1191627	2					
ANR	1191679	ParameterList	"list < DCLeaseManagerLease * > & lease_list , bool mark"		1191627	3					
ANR	1191680	Parameter	list < DCLeaseManagerLease * > & lease_list	388:1:8858:8897	1191627	0	True				
ANR	1191681	ParameterType	list < DCLeaseManagerLease * > &		1191627	0					
ANR	1191682	Identifier	lease_list		1191627	1					
ANR	1191683	Parameter	bool mark	389:1:8901:8915	1191627	1	True				
ANR	1191684	ParameterType	bool		1191627	0					
ANR	1191685	Identifier	mark		1191627	1					
ANR	1191686	CFGEntryNode	ENTRY		1191627		True				
ANR	1191687	CFGExitNode	EXIT		1191627		True				
ANR	1191688	Symbol	* iter		1191627						
ANR	1191689	Symbol	lease_list		1191627						
ANR	1191690	Symbol	lease_list . begin		1191627						
ANR	1191691	Symbol	lease_list . end		1191627						
ANR	1191692	Symbol	iter		1191627						
ANR	1191693	Symbol	lease		1191627						
ANR	1191694	Symbol	mark		1191627						
ANR	1191695	Function	DCLeaseManagerLease_removeMarkedLeases	401:0:9117:9702							
ANR	1191696	FunctionDef	"DCLeaseManagerLease_removeMarkedLeases (list < DCLeaseManagerLease * > & lease_list , bool mark)"		1191695	0					
ANR	1191697	CompoundStatement		406:0:9224:9702	1191695	0					
ANR	1191698	IdentifierDeclStatement	list < const DCLeaseManagerLease * > remove_list ;	407:1:9227:9272	1191695	0	True				
ANR	1191699	IdentifierDecl	remove_list		1191695	0					
ANR	1191700	IdentifierDeclType	list < const DCLeaseManagerLease * >		1191695	0					
ANR	1191701	Identifier	remove_list		1191695	1					
ANR	1191702	IdentifierDeclStatement	list < const DCLeaseManagerLease * > const_list = DCLeaseManagerLease_getConstList ( lease_list ) ;	408:1:9275:9370	1191695	1	True				
ANR	1191703	IdentifierDecl	const_list = DCLeaseManagerLease_getConstList ( lease_list )		1191695	0					
ANR	1191704	IdentifierDeclType	list < const DCLeaseManagerLease * >		1191695	0					
ANR	1191705	Identifier	const_list		1191695	1					
ANR	1191706	AssignmentExpression	const_list = DCLeaseManagerLease_getConstList ( lease_list )		1191695	2		=			
ANR	1191707	Identifier	const_list		1191695	0					
ANR	1191708	CallExpression	DCLeaseManagerLease_getConstList ( lease_list )		1191695	1					
ANR	1191709	Callee	DCLeaseManagerLease_getConstList		1191695	0					
ANR	1191710	Identifier	DCLeaseManagerLease_getConstList		1191695	0					
ANR	1191711	ArgumentList	lease_list		1191695	1					
ANR	1191712	Argument	lease_list		1191695	0					
ANR	1191713	Identifier	lease_list		1191695	0					
ANR	1191714	ExpressionStatement	"DCLeaseManagerLease_getMarkedLeases ( const_list , mark , remove_list )"	410:1:9373:9441	1191695	2	True				
ANR	1191715	CallExpression	"DCLeaseManagerLease_getMarkedLeases ( const_list , mark , remove_list )"		1191695	0					
ANR	1191716	Callee	DCLeaseManagerLease_getMarkedLeases		1191695	0					
ANR	1191717	Identifier	DCLeaseManagerLease_getMarkedLeases		1191695	0					
ANR	1191718	ArgumentList	const_list		1191695	1					
ANR	1191719	Argument	const_list		1191695	0					
ANR	1191720	Identifier	const_list		1191695	0					
ANR	1191721	Argument	mark		1191695	1					
ANR	1191722	Identifier	mark		1191695	0					
ANR	1191723	Argument	remove_list		1191695	2					
ANR	1191724	Identifier	remove_list		1191695	0					
ANR	1191725	IdentifierDeclStatement	list < const DCLeaseManagerLease * > :: iterator iter ;	412:1:9445:9493	1191695	3	True				
ANR	1191726	IdentifierDecl	iter		1191695	0					
ANR	1191727	IdentifierDeclType	list < const DCLeaseManagerLease * > :: iterator		1191695	0					
ANR	1191728	Identifier	iter		1191695	1					
ANR	1191729	ForStatement	for ( iter = remove_list . begin ( ) ; iter != remove_list . end ( ) ; iter ++ )		1191695	4					
ANR	1191730	ForInit	iter = remove_list . begin ( ) ;	413:6:9501:9527	1191695	0	True				
ANR	1191731	AssignmentExpression	iter = remove_list . begin ( )		1191695	0		=			
ANR	1191732	Identifier	iter		1191695	0					
ANR	1191733	CallExpression	remove_list . begin ( )		1191695	1					
ANR	1191734	Callee	remove_list . begin		1191695	0					
ANR	1191735	MemberAccess	remove_list . begin		1191695	0					
ANR	1191736	Identifier	remove_list		1191695	0					
ANR	1191737	Identifier	begin		1191695	1					
ANR	1191738	ArgumentList			1191695	1					
ANR	1191739	Condition	iter != remove_list . end ( )	413:34:9529:9553	1191695	1	True				
ANR	1191740	EqualityExpression	iter != remove_list . end ( )		1191695	0		!=			
ANR	1191741	Identifier	iter		1191695	0					
ANR	1191742	CallExpression	remove_list . end ( )		1191695	1					
ANR	1191743	Callee	remove_list . end		1191695	0					
ANR	1191744	MemberAccess	remove_list . end		1191695	0					
ANR	1191745	Identifier	remove_list		1191695	0					
ANR	1191746	Identifier	end		1191695	1					
ANR	1191747	ArgumentList			1191695	1					
ANR	1191748	PostIncDecOperationExpression	iter ++	413:61:9556:9561	1191695	2	True				
ANR	1191749	Identifier	iter		1191695	0					
ANR	1191750	IncDec	++		1191695	1					
ANR	1191751	CompoundStatement		8:70:340:340	1191695	3					
ANR	1191752	Statement	DCLeaseManagerLease	414:2:9569:9587	1191695	0	True				
ANR	1191753	Statement	*	414:22:9589:9589	1191695	1	True				
ANR	1191754	Statement	lease	414:23:9590:9594	1191695	2	True				
ANR	1191755	Statement	=	414:29:9596:9596	1191695	3	True				
ANR	1191756	Statement	const_cast	414:31:9598:9607	1191695	4	True				
ANR	1191757	Statement	<	414:41:9608:9608	1191695	5	True				
ANR	1191758	Statement	DCLeaseManagerLease	414:42:9609:9627	1191695	6	True				
ANR	1191759	Statement	*	414:61:9628:9628	1191695	7	True				
ANR	1191760	Statement	>	414:62:9629:9629	1191695	8	True				
ANR	1191761	ExpressionStatement	* iter	414:63:9630:9639	1191695	9	True				
ANR	1191762	UnaryOperationExpression	* iter		1191695	0					
ANR	1191763	UnaryOperator	*		1191695	0					
ANR	1191764	Identifier	iter		1191695	1					
ANR	1191765	ExpressionStatement	lease_list . remove ( lease )	415:2:9643:9669	1191695	10	True				
ANR	1191766	CallExpression	lease_list . remove ( lease )		1191695	0					
ANR	1191767	Callee	lease_list . remove		1191695	0					
ANR	1191768	MemberAccess	lease_list . remove		1191695	0					
ANR	1191769	Identifier	lease_list		1191695	0					
ANR	1191770	Identifier	remove		1191695	1					
ANR	1191771	ArgumentList	lease		1191695	1					
ANR	1191772	Argument	lease		1191695	0					
ANR	1191773	Identifier	lease		1191695	0					
ANR	1191774	Statement	delete	416:2:9673:9678	1191695	11	True				
ANR	1191775	ExpressionStatement	lease	416:9:9680:9685	1191695	12	True				
ANR	1191776	Identifier	lease		1191695	0					
ANR	1191777	ReturnStatement	return 0 ;	419:1:9692:9700	1191695	5	True				
ANR	1191778	PrimaryExpression	0		1191695	0					
ANR	1191779	ReturnType	int		1191695	1					
ANR	1191780	Identifier	DCLeaseManagerLease_removeMarkedLeases		1191695	2					
ANR	1191781	ParameterList	"list < DCLeaseManagerLease * > & lease_list , bool mark"		1191695	3					
ANR	1191782	Parameter	list < DCLeaseManagerLease * > & lease_list	403:1:9162:9201	1191695	0	True				
ANR	1191783	ParameterType	list < DCLeaseManagerLease * > &		1191695	0					
ANR	1191784	Identifier	lease_list		1191695	1					
ANR	1191785	Parameter	bool mark	404:1:9205:9219	1191695	1	True				
ANR	1191786	ParameterType	bool		1191695	0					
ANR	1191787	Identifier	mark		1191695	1					
ANR	1191788	CFGEntryNode	ENTRY		1191695		True				
ANR	1191789	CFGExitNode	EXIT		1191695		True				
ANR	1191790	Symbol	lease_list		1191695						
ANR	1191791	Symbol	DCLeaseManagerLease_getConstList		1191695						
ANR	1191792	Symbol	remove_list		1191695						
ANR	1191793	Symbol	remove_list . begin		1191695						
ANR	1191794	Symbol	iter		1191695						
ANR	1191795	Symbol	const_list		1191695						
ANR	1191796	Symbol	lease		1191695						
ANR	1191797	Symbol	mark		1191695						
ANR	1191798	Symbol	remove_list . end		1191695						
ANR	1191799	Function	DCLeaseManagerLease_countMarkedLeases	422:0:9705:10089							
ANR	1191800	FunctionDef	"DCLeaseManagerLease_countMarkedLeases (const list < const DCLeaseManagerLease * > & lease_list , bool mark)"		1191799	0					
ANR	1191801	CompoundStatement		427:0:9822:10089	1191799	0					
ANR	1191802	IdentifierDeclStatement	int count = 0 ;	428:1:9825:9839	1191799	0	True				
ANR	1191803	IdentifierDecl	count = 0		1191799	0					
ANR	1191804	IdentifierDeclType	int		1191799	0					
ANR	1191805	Identifier	count		1191799	1					
ANR	1191806	AssignmentExpression	count = 0		1191799	2		=			
ANR	1191807	Identifier	count		1191799	0					
ANR	1191808	PrimaryExpression	0		1191799	1					
ANR	1191809	IdentifierDeclStatement	list < const DCLeaseManagerLease * > :: const_iterator iter ;	429:1:9842:9896	1191799	1	True				
ANR	1191810	IdentifierDecl	iter		1191799	0					
ANR	1191811	IdentifierDeclType	list < const DCLeaseManagerLease * > :: const_iterator		1191799	0					
ANR	1191812	Identifier	iter		1191799	1					
ANR	1191813	ForStatement	for ( iter = lease_list . begin ( ) ; iter != lease_list . end ( ) ; iter ++ )		1191799	2					
ANR	1191814	ForInit	iter = lease_list . begin ( ) ;	430:6:9904:9929	1191799	0	True				
ANR	1191815	AssignmentExpression	iter = lease_list . begin ( )		1191799	0		=			
ANR	1191816	Identifier	iter		1191799	0					
ANR	1191817	CallExpression	lease_list . begin ( )		1191799	1					
ANR	1191818	Callee	lease_list . begin		1191799	0					
ANR	1191819	MemberAccess	lease_list . begin		1191799	0					
ANR	1191820	Identifier	lease_list		1191799	0					
ANR	1191821	Identifier	begin		1191799	1					
ANR	1191822	ArgumentList			1191799	1					
ANR	1191823	Condition	iter != lease_list . end ( )	431:3:9934:9957	1191799	1	True				
ANR	1191824	EqualityExpression	iter != lease_list . end ( )		1191799	0		!=			
ANR	1191825	Identifier	iter		1191799	0					
ANR	1191826	CallExpression	lease_list . end ( )		1191799	1					
ANR	1191827	Callee	lease_list . end		1191799	0					
ANR	1191828	MemberAccess	lease_list . end		1191799	0					
ANR	1191829	Identifier	lease_list		1191799	0					
ANR	1191830	Identifier	end		1191799	1					
ANR	1191831	ArgumentList			1191799	1					
ANR	1191832	PostIncDecOperationExpression	iter ++	432:3:9963:9968	1191799	2	True				
ANR	1191833	Identifier	iter		1191799	0					
ANR	1191834	IncDec	++		1191799	1					
ANR	1191835	CompoundStatement		7:2:153:193	1191799	3					
ANR	1191836	IdentifierDeclStatement	const DCLeaseManagerLease * lease = * iter ;	433:2:9976:10016	1191799	0	True				
ANR	1191837	IdentifierDecl	* lease = * iter		1191799	0					
ANR	1191838	IdentifierDeclType	const DCLeaseManagerLease *		1191799	0					
ANR	1191839	Identifier	lease		1191799	1					
ANR	1191840	AssignmentExpression	* lease = * iter		1191799	2		=			
ANR	1191841	Identifier	lease		1191799	0					
ANR	1191842	UnaryOperationExpression	* iter		1191799	1					
ANR	1191843	UnaryOperator	*		1191799	0					
ANR	1191844	Identifier	iter		1191799	1					
ANR	1191845	IfStatement	if ( mark == lease -> getMark ( ) )		1191799	1					
ANR	1191846	Condition	mark == lease -> getMark ( )	434:7:10025:10049	1191799	0	True				
ANR	1191847	EqualityExpression	mark == lease -> getMark ( )		1191799	0		==			
ANR	1191848	Identifier	mark		1191799	0					
ANR	1191849	CallExpression	lease -> getMark ( )		1191799	1					
ANR	1191850	Callee	lease -> getMark		1191799	0					
ANR	1191851	PtrMemberAccess	lease -> getMark		1191799	0					
ANR	1191852	Identifier	lease		1191799	0					
ANR	1191853	Identifier	getMark		1191799	1					
ANR	1191854	ArgumentList			1191799	1					
ANR	1191855	CompoundStatement		8:35:230:230	1191799	1					
ANR	1191856	ExpressionStatement	count ++	435:3:10058:10065	1191799	0	True				
ANR	1191857	PostIncDecOperationExpression	count ++		1191799	0					
ANR	1191858	Identifier	count		1191799	0					
ANR	1191859	IncDec	++		1191799	1					
ANR	1191860	ReturnStatement	return count ;	438:1:10075:10087	1191799	3	True				
ANR	1191861	Identifier	count		1191799	0					
ANR	1191862	ReturnType	int		1191799	1					
ANR	1191863	Identifier	DCLeaseManagerLease_countMarkedLeases		1191799	2					
ANR	1191864	ParameterList	"const list < const DCLeaseManagerLease * > & lease_list , bool mark"		1191799	3					
ANR	1191865	Parameter	const list < const DCLeaseManagerLease * > & lease_list	424:1:9749:9799	1191799	0	True				
ANR	1191866	ParameterType	const list < const DCLeaseManagerLease * > &		1191799	0					
ANR	1191867	Identifier	lease_list		1191799	1					
ANR	1191868	Parameter	bool mark	425:1:9803:9817	1191799	1	True				
ANR	1191869	ParameterType	bool		1191799	0					
ANR	1191870	Identifier	mark		1191799	1					
ANR	1191871	CFGEntryNode	ENTRY		1191799		True				
ANR	1191872	CFGExitNode	EXIT		1191799		True				
ANR	1191873	Symbol	* iter		1191799						
ANR	1191874	Symbol	lease_list		1191799						
ANR	1191875	Symbol	lease_list . begin		1191799						
ANR	1191876	Symbol	lease_list . end		1191799						
ANR	1191877	Symbol	* lease		1191799						
ANR	1191878	Symbol	count		1191799						
ANR	1191879	Symbol	iter		1191799						
ANR	1191880	Symbol	lease -> getMark		1191799						
ANR	1191881	Symbol	lease		1191799						
ANR	1191882	Symbol	mark		1191799						
ANR	1191883	Function	DCLeaseManagerLease_getMarkedLeases	441:0:10092:10575							
ANR	1191884	FunctionDef	"DCLeaseManagerLease_getMarkedLeases (const list < const DCLeaseManagerLease * > & lease_list , bool mark , list < const DCLeaseManagerLease * > & marked_lease_list)"		1191883	0					
ANR	1191885	CompoundStatement		447:0:10266:10575	1191883	0					
ANR	1191886	IdentifierDeclStatement	int count = 0 ;	448:1:10269:10283	1191883	0	True				
ANR	1191887	IdentifierDecl	count = 0		1191883	0					
ANR	1191888	IdentifierDeclType	int		1191883	0					
ANR	1191889	Identifier	count		1191883	1					
ANR	1191890	AssignmentExpression	count = 0		1191883	2		=			
ANR	1191891	Identifier	count		1191883	0					
ANR	1191892	PrimaryExpression	0		1191883	1					
ANR	1191893	IdentifierDeclStatement	list < const DCLeaseManagerLease * > :: const_iterator iter ;	449:1:10286:10340	1191883	1	True				
ANR	1191894	IdentifierDecl	iter		1191883	0					
ANR	1191895	IdentifierDeclType	list < const DCLeaseManagerLease * > :: const_iterator		1191883	0					
ANR	1191896	Identifier	iter		1191883	1					
ANR	1191897	ForStatement	for ( iter = lease_list . begin ( ) ; iter != lease_list . end ( ) ; iter ++ )		1191883	2					
ANR	1191898	ForInit	iter = lease_list . begin ( ) ;	450:6:10348:10374	1191883	0	True				
ANR	1191899	AssignmentExpression	iter = lease_list . begin ( )		1191883	0		=			
ANR	1191900	Identifier	iter		1191883	0					
ANR	1191901	CallExpression	lease_list . begin ( )		1191883	1					
ANR	1191902	Callee	lease_list . begin		1191883	0					
ANR	1191903	MemberAccess	lease_list . begin		1191883	0					
ANR	1191904	Identifier	lease_list		1191883	0					
ANR	1191905	Identifier	begin		1191883	1					
ANR	1191906	ArgumentList			1191883	1					
ANR	1191907	Condition	iter != lease_list . end ( )	451:3:10379:10402	1191883	1	True				
ANR	1191908	EqualityExpression	iter != lease_list . end ( )		1191883	0		!=			
ANR	1191909	Identifier	iter		1191883	0					
ANR	1191910	CallExpression	lease_list . end ( )		1191883	1					
ANR	1191911	Callee	lease_list . end		1191883	0					
ANR	1191912	MemberAccess	lease_list . end		1191883	0					
ANR	1191913	Identifier	lease_list		1191883	0					
ANR	1191914	Identifier	end		1191883	1					
ANR	1191915	ArgumentList			1191883	1					
ANR	1191916	PostIncDecOperationExpression	iter ++	452:3:10408:10414	1191883	2	True				
ANR	1191917	Identifier	iter		1191883	0					
ANR	1191918	IncDec	++		1191883	1					
ANR	1191919	CompoundStatement		7:2:155:195	1191883	3					
ANR	1191920	IdentifierDeclStatement	const DCLeaseManagerLease * lease = * iter ;	453:2:10422:10462	1191883	0	True				
ANR	1191921	IdentifierDecl	* lease = * iter		1191883	0					
ANR	1191922	IdentifierDeclType	const DCLeaseManagerLease *		1191883	0					
ANR	1191923	Identifier	lease		1191883	1					
ANR	1191924	AssignmentExpression	* lease = * iter		1191883	2		=			
ANR	1191925	Identifier	lease		1191883	0					
ANR	1191926	UnaryOperationExpression	* iter		1191883	1					
ANR	1191927	UnaryOperator	*		1191883	0					
ANR	1191928	Identifier	iter		1191883	1					
ANR	1191929	IfStatement	if ( lease -> getMark ( ) == mark )		1191883	1					
ANR	1191930	Condition	lease -> getMark ( ) == mark	454:7:10471:10494	1191883	0	True				
ANR	1191931	EqualityExpression	lease -> getMark ( ) == mark		1191883	0		==			
ANR	1191932	CallExpression	lease -> getMark ( )		1191883	0					
ANR	1191933	Callee	lease -> getMark		1191883	0					
ANR	1191934	PtrMemberAccess	lease -> getMark		1191883	0					
ANR	1191935	Identifier	lease		1191883	0					
ANR	1191936	Identifier	getMark		1191883	1					
ANR	1191937	ArgumentList			1191883	1					
ANR	1191938	Identifier	mark		1191883	1					
ANR	1191939	CompoundStatement		8:34:231:231	1191883	1					
ANR	1191940	ExpressionStatement	marked_lease_list . push_back ( lease )	455:3:10503:10539	1191883	0	True				
ANR	1191941	CallExpression	marked_lease_list . push_back ( lease )		1191883	0					
ANR	1191942	Callee	marked_lease_list . push_back		1191883	0					
ANR	1191943	MemberAccess	marked_lease_list . push_back		1191883	0					
ANR	1191944	Identifier	marked_lease_list		1191883	0					
ANR	1191945	Identifier	push_back		1191883	1					
ANR	1191946	ArgumentList	lease		1191883	1					
ANR	1191947	Argument	lease		1191883	0					
ANR	1191948	Identifier	lease		1191883	0					
ANR	1191949	ExpressionStatement	count ++	456:3:10544:10551	1191883	1	True				
ANR	1191950	PostIncDecOperationExpression	count ++		1191883	0					
ANR	1191951	Identifier	count		1191883	0					
ANR	1191952	IncDec	++		1191883	1					
ANR	1191953	ReturnStatement	return count ;	459:1:10561:10573	1191883	3	True				
ANR	1191954	Identifier	count		1191883	0					
ANR	1191955	ReturnType	int		1191883	1					
ANR	1191956	Identifier	DCLeaseManagerLease_getMarkedLeases		1191883	2					
ANR	1191957	ParameterList	"const list < const DCLeaseManagerLease * > & lease_list , bool mark , list < const DCLeaseManagerLease * > & marked_lease_list"		1191883	3					
ANR	1191958	Parameter	const list < const DCLeaseManagerLease * > & lease_list	443:1:10134:10184	1191883	0	True				
ANR	1191959	ParameterType	const list < const DCLeaseManagerLease * > &		1191883	0					
ANR	1191960	Identifier	lease_list		1191883	1					
ANR	1191961	Parameter	bool mark	444:1:10188:10204	1191883	1	True				
ANR	1191962	ParameterType	bool		1191883	0					
ANR	1191963	Identifier	mark		1191883	1					
ANR	1191964	Parameter	list < const DCLeaseManagerLease * > & marked_lease_list	445:1:10208:10261	1191883	2	True				
ANR	1191965	ParameterType	list < const DCLeaseManagerLease * > &		1191883	0					
ANR	1191966	Identifier	marked_lease_list		1191883	1					
ANR	1191967	CFGEntryNode	ENTRY		1191883		True				
ANR	1191968	CFGExitNode	EXIT		1191883		True				
ANR	1191969	Symbol	marked_lease_list		1191883						
ANR	1191970	Symbol	* iter		1191883						
ANR	1191971	Symbol	lease_list		1191883						
ANR	1191972	Symbol	lease_list . begin		1191883						
ANR	1191973	Symbol	lease_list . end		1191883						
ANR	1191974	Symbol	* lease		1191883						
ANR	1191975	Symbol	count		1191883						
ANR	1191976	Symbol	iter		1191883						
ANR	1191977	Symbol	lease -> getMark		1191883						
ANR	1191978	Symbol	lease		1191883						
ANR	1191979	Symbol	mark		1191883						
ANR	1191980	Function	DCLeaseManagerLease_getConstList	462:0:10578:10925							
ANR	1191981	FunctionDef	DCLeaseManagerLease_getConstList (const list < DCLeaseManagerLease * > & non_const_list)		1191980	0					
ANR	1191982	CompoundStatement		466:0:10702:10925	1191980	0					
ANR	1191983	IdentifierDeclStatement	list < DCLeaseManagerLease * > LeaseList ;	467:9:10713:10752	1191980	0	True				
ANR	1191984	IdentifierDecl	LeaseList		1191980	0					
ANR	1191985	IdentifierDeclType	list < DCLeaseManagerLease * >		1191980	0					
ANR	1191986	Identifier	LeaseList		1191980	1					
ANR	1191987	IdentifierDeclStatement	list < const DCLeaseManagerLease * > ConstList ;	468:9:10763:10806	1191980	1	True				
ANR	1191988	IdentifierDecl	ConstList		1191980	0					
ANR	1191989	IdentifierDeclType	list < const DCLeaseManagerLease * >		1191980	0					
ANR	1191990	Identifier	ConstList		1191980	1					
ANR	1191991	IdentifierDeclStatement	const ConstList * const_list = ( const ConstList * ) & non_const_list ;	470:1:10810:10875	1191980	2	True				
ANR	1191992	IdentifierDecl	* const_list = ( const ConstList * ) & non_const_list		1191980	0					
ANR	1191993	IdentifierDeclType	const ConstList *		1191980	0					
ANR	1191994	Identifier	const_list		1191980	1					
ANR	1191995	AssignmentExpression	* const_list = ( const ConstList * ) & non_const_list		1191980	2		=			
ANR	1191996	Identifier	const_list		1191980	0					
ANR	1191997	CastExpression	( const ConstList * ) & non_const_list		1191980	1					
ANR	1191998	CastTarget	const ConstList *		1191980	0					
ANR	1191999	UnaryOperationExpression	& non_const_list		1191980	1					
ANR	1192000	UnaryOperator	&		1191980	0					
ANR	1192001	Identifier	non_const_list		1191980	1					
ANR	1192002	Statement	return	471:1:10878:10883	1191980	3	True				
ANR	1192003	Statement	*	471:8:10885:10885	1191980	4	True				
ANR	1192004	Statement	(	471:9:10886:10886	1191980	5	True				
ANR	1192005	Statement	const_cast	471:10:10887:10896	1191980	6	True				
ANR	1192006	Statement	<	471:20:10897:10897	1191980	7	True				
ANR	1192007	Statement	ConstList	471:21:10898:10906	1191980	8	True				
ANR	1192008	Statement	*	471:31:10908:10908	1191980	9	True				
ANR	1192009	Statement	>	471:32:10909:10909	1191980	10	True				
ANR	1192010	Statement	(	471:33:10910:10910	1191980	11	True				
ANR	1192011	Statement	const_list	471:34:10911:10920	1191980	12	True				
ANR	1192012	Statement	)	471:44:10921:10921	1191980	13	True				
ANR	1192013	Statement	)	471:45:10922:10922	1191980	14	True				
ANR	1192014	ExpressionStatement		471:46:10923:10923	1191980	15	True				
ANR	1192015	ReturnType	list < const DCLeaseManagerLease * > &		1191980	1					
ANR	1192016	Identifier	DCLeaseManagerLease_getConstList		1191980	2					
ANR	1192017	ParameterList	const list < DCLeaseManagerLease * > & non_const_list		1191980	3					
ANR	1192018	Parameter	const list < DCLeaseManagerLease * > & non_const_list	464:1:10649:10697	1191980	0	True				
ANR	1192019	ParameterType	const list < DCLeaseManagerLease * > &		1191980	0					
ANR	1192020	Identifier	non_const_list		1191980	1					
ANR	1192021	CFGEntryNode	ENTRY		1191980		True				
ANR	1192022	CFGExitNode	EXIT		1191980		True				
ANR	1192023	Symbol	& non_const_list		1191980						
ANR	1192024	Symbol	const_list		1191980						
ANR	1192025	Symbol	non_const_list		1191980						
ANR	1192026	Symbol	LeaseList		1191980						
ANR	1192027	Symbol	ConstList		1191980						
ANR	1192028	Function	DCLeaseManagerLease_fwriteList	474:0:10928:11313							
ANR	1192029	FunctionDef	"DCLeaseManagerLease_fwriteList (const list < const DCLeaseManagerLease * > & lease_list , FILE * fp)"		1192028	0					
ANR	1192030	CompoundStatement		479:0:11039:11313	1192028	0					
ANR	1192031	IdentifierDeclStatement	int count = 0 ;	480:1:11042:11056	1192028	0	True				
ANR	1192032	IdentifierDecl	count = 0		1192028	0					
ANR	1192033	IdentifierDeclType	int		1192028	0					
ANR	1192034	Identifier	count		1192028	1					
ANR	1192035	AssignmentExpression	count = 0		1192028	2		=			
ANR	1192036	Identifier	count		1192028	0					
ANR	1192037	PrimaryExpression	0		1192028	1					
ANR	1192038	IdentifierDeclStatement	list < const DCLeaseManagerLease * > :: const_iterator iter ;	481:1:11059:11113	1192028	1	True				
ANR	1192039	IdentifierDecl	iter		1192028	0					
ANR	1192040	IdentifierDeclType	list < const DCLeaseManagerLease * > :: const_iterator		1192028	0					
ANR	1192041	Identifier	iter		1192028	1					
ANR	1192042	ForStatement	for ( iter = lease_list . begin ( ) ; iter != lease_list . end ( ) ; iter ++ )		1192028	2					
ANR	1192043	ForInit	iter = lease_list . begin ( ) ;	482:6:11121:11147	1192028	0	True				
ANR	1192044	AssignmentExpression	iter = lease_list . begin ( )		1192028	0		=			
ANR	1192045	Identifier	iter		1192028	0					
ANR	1192046	CallExpression	lease_list . begin ( )		1192028	1					
ANR	1192047	Callee	lease_list . begin		1192028	0					
ANR	1192048	MemberAccess	lease_list . begin		1192028	0					
ANR	1192049	Identifier	lease_list		1192028	0					
ANR	1192050	Identifier	begin		1192028	1					
ANR	1192051	ArgumentList			1192028	1					
ANR	1192052	Condition	iter != lease_list . end ( )	483:3:11152:11175	1192028	1	True				
ANR	1192053	EqualityExpression	iter != lease_list . end ( )		1192028	0		!=			
ANR	1192054	Identifier	iter		1192028	0					
ANR	1192055	CallExpression	lease_list . end ( )		1192028	1					
ANR	1192056	Callee	lease_list . end		1192028	0					
ANR	1192057	MemberAccess	lease_list . end		1192028	0					
ANR	1192058	Identifier	lease_list		1192028	0					
ANR	1192059	Identifier	end		1192028	1					
ANR	1192060	ArgumentList			1192028	1					
ANR	1192061	PostIncDecOperationExpression	iter ++	484:3:11181:11187	1192028	2	True				
ANR	1192062	Identifier	iter		1192028	0					
ANR	1192063	IncDec	++		1192028	1					
ANR	1192064	CompoundStatement		7:2:155:195	1192028	3					
ANR	1192065	IdentifierDeclStatement	const DCLeaseManagerLease * lease = * iter ;	485:2:11195:11235	1192028	0	True				
ANR	1192066	IdentifierDecl	* lease = * iter		1192028	0					
ANR	1192067	IdentifierDeclType	const DCLeaseManagerLease *		1192028	0					
ANR	1192068	Identifier	lease		1192028	1					
ANR	1192069	AssignmentExpression	* lease = * iter		1192028	2		=			
ANR	1192070	Identifier	lease		1192028	0					
ANR	1192071	UnaryOperationExpression	* iter		1192028	1					
ANR	1192072	UnaryOperator	*		1192028	0					
ANR	1192073	Identifier	iter		1192028	1					
ANR	1192074	IfStatement	if ( ! lease -> fwrite ( fp ) )		1192028	1					
ANR	1192075	Condition	! lease -> fwrite ( fp )	486:7:11244:11264	1192028	0	True				
ANR	1192076	UnaryOperationExpression	! lease -> fwrite ( fp )		1192028	0					
ANR	1192077	UnaryOperator	!		1192028	0					
ANR	1192078	CallExpression	lease -> fwrite ( fp )		1192028	1					
ANR	1192079	Callee	lease -> fwrite		1192028	0					
ANR	1192080	PtrMemberAccess	lease -> fwrite		1192028	0					
ANR	1192081	Identifier	lease		1192028	0					
ANR	1192082	Identifier	fwrite		1192028	1					
ANR	1192083	ArgumentList	fp		1192028	1					
ANR	1192084	Argument	fp		1192028	0					
ANR	1192085	Identifier	fp		1192028	0					
ANR	1192086	CompoundStatement		8:31:228:228	1192028	1					
ANR	1192087	BreakStatement	break ;	487:3:11273:11278	1192028	0	True				
ANR	1192088	ExpressionStatement	count ++	489:2:11286:11293	1192028	2	True				
ANR	1192089	PostIncDecOperationExpression	count ++		1192028	0					
ANR	1192090	Identifier	count		1192028	0					
ANR	1192091	IncDec	++		1192028	1					
ANR	1192092	ReturnStatement	return count ;	491:1:11299:11311	1192028	3	True				
ANR	1192093	Identifier	count		1192028	0					
ANR	1192094	ReturnType	int		1192028	1					
ANR	1192095	Identifier	DCLeaseManagerLease_fwriteList		1192028	2					
ANR	1192096	ParameterList	"const list < const DCLeaseManagerLease * > & lease_list , FILE * fp"		1192028	3					
ANR	1192097	Parameter	const list < const DCLeaseManagerLease * > & lease_list	476:1:10965:11015	1192028	0	True				
ANR	1192098	ParameterType	const list < const DCLeaseManagerLease * > &		1192028	0					
ANR	1192099	Identifier	lease_list		1192028	1					
ANR	1192100	Parameter	FILE * fp	477:1:11019:11034	1192028	1	True				
ANR	1192101	ParameterType	FILE *		1192028	0					
ANR	1192102	Identifier	fp		1192028	1					
ANR	1192103	CFGEntryNode	ENTRY		1192028		True				
ANR	1192104	CFGExitNode	EXIT		1192028		True				
ANR	1192105	Symbol	* iter		1192028						
ANR	1192106	Symbol	lease_list		1192028						
ANR	1192107	Symbol	lease_list . begin		1192028						
ANR	1192108	Symbol	lease_list . end		1192028						
ANR	1192109	Symbol	* lease		1192028						
ANR	1192110	Symbol	lease -> fwrite		1192028						
ANR	1192111	Symbol	count		1192028						
ANR	1192112	Symbol	iter		1192028						
ANR	1192113	Symbol	fp		1192028						
ANR	1192114	Symbol	lease		1192028						
ANR	1192115	Function	DCLeaseManagerLease_freadList	494:0:11316:11643							
ANR	1192116	FunctionDef	"DCLeaseManagerLease_freadList (list < DCLeaseManagerLease * > & lease_list , FILE * fp)"		1192115	0					
ANR	1192117	CompoundStatement		499:0:11413:11643	1192115	0					
ANR	1192118	IdentifierDeclStatement	int count = 0 ;	500:1:11416:11430	1192115	0	True				
ANR	1192119	IdentifierDecl	count = 0		1192115	0					
ANR	1192120	IdentifierDeclType	int		1192115	0					
ANR	1192121	Identifier	count		1192115	1					
ANR	1192122	AssignmentExpression	count = 0		1192115	2		=			
ANR	1192123	Identifier	count		1192115	0					
ANR	1192124	PrimaryExpression	0		1192115	1					
ANR	1192125	WhileStatement	while ( 1 )		1192115	1					
ANR	1192126	Condition	1	501:8:11440:11440	1192115	0	True				
ANR	1192127	PrimaryExpression	1		1192115	0					
ANR	1192128	CompoundStatement		4:2:34:89	1192115	1					
ANR	1192129	IdentifierDeclStatement	DCLeaseManagerLease * lease = new DCLeaseManagerLease ( ) ;	502:2:11448:11503	1192115	0	True				
ANR	1192130	IdentifierDecl	* lease = new DCLeaseManagerLease ( )		1192115	0					
ANR	1192131	IdentifierDeclType	DCLeaseManagerLease *		1192115	0					
ANR	1192132	Identifier	lease		1192115	1					
ANR	1192133	AssignmentExpression	* lease = new DCLeaseManagerLease ( )		1192115	2		=			
ANR	1192134	Identifier	lease		1192115	0					
ANR	1192135	UnaryExpression	new DCLeaseManagerLease ( )		1192115	1					
ANR	1192136	IfStatement	if ( lease -> fread ( fp ) )		1192115	1					
ANR	1192137	Condition	lease -> fread ( fp )	503:7:11512:11529	1192115	0	True				
ANR	1192138	CallExpression	lease -> fread ( fp )		1192115	0					
ANR	1192139	Callee	lease -> fread		1192115	0					
ANR	1192140	PtrMemberAccess	lease -> fread		1192115	0					
ANR	1192141	Identifier	lease		1192115	0					
ANR	1192142	Identifier	fread		1192115	1					
ANR	1192143	ArgumentList	fp		1192115	1					
ANR	1192144	Argument	fp		1192115	0					
ANR	1192145	Identifier	fp		1192115	0					
ANR	1192146	CompoundStatement		5:28:119:119	1192115	1					
ANR	1192147	ExpressionStatement	lease_list . push_back ( lease )	504:3:11538:11567	1192115	0	True				
ANR	1192148	CallExpression	lease_list . push_back ( lease )		1192115	0					
ANR	1192149	Callee	lease_list . push_back		1192115	0					
ANR	1192150	MemberAccess	lease_list . push_back		1192115	0					
ANR	1192151	Identifier	lease_list		1192115	0					
ANR	1192152	Identifier	push_back		1192115	1					
ANR	1192153	ArgumentList	lease		1192115	1					
ANR	1192154	Argument	lease		1192115	0					
ANR	1192155	Identifier	lease		1192115	0					
ANR	1192156	ExpressionStatement	count ++	505:3:11572:11579	1192115	1	True				
ANR	1192157	PostIncDecOperationExpression	count ++		1192115	0					
ANR	1192158	Identifier	count		1192115	0					
ANR	1192159	IncDec	++		1192115	1					
ANR	1192160	ElseStatement	else		1192115	0					
ANR	1192161	CompoundStatement		9:7:178:178	1192115	0					
ANR	1192162	Statement	delete	508:3:11597:11602	1192115	0	True				
ANR	1192163	ExpressionStatement	lease	508:10:11604:11609	1192115	1	True				
ANR	1192164	Identifier	lease		1192115	0					
ANR	1192165	BreakStatement	break ;	509:3:11614:11619	1192115	2	True				
ANR	1192166	ReturnStatement	return count ;	512:1:11629:11641	1192115	2	True				
ANR	1192167	Identifier	count		1192115	0					
ANR	1192168	ReturnType	int		1192115	1					
ANR	1192169	Identifier	DCLeaseManagerLease_freadList		1192115	2					
ANR	1192170	ParameterList	"list < DCLeaseManagerLease * > & lease_list , FILE * fp"		1192115	3					
ANR	1192171	Parameter	list < DCLeaseManagerLease * > & lease_list	496:1:11352:11391	1192115	0	True				
ANR	1192172	ParameterType	list < DCLeaseManagerLease * > &		1192115	0					
ANR	1192173	Identifier	lease_list		1192115	1					
ANR	1192174	Parameter	FILE * fp	497:1:11395:11408	1192115	1	True				
ANR	1192175	ParameterType	FILE *		1192115	0					
ANR	1192176	Identifier	fp		1192115	1					
ANR	1192177	CFGEntryNode	ENTRY		1192115		True				
ANR	1192178	CFGExitNode	EXIT		1192115		True				
ANR	1192179	Symbol	lease_list		1192115						
ANR	1192180	Symbol	* lease		1192115						
ANR	1192181	Symbol	count		1192115						
ANR	1192182	Symbol	lease -> fread		1192115						
ANR	1192183	Symbol	fp		1192115						
ANR	1192184	Symbol	lease		1192115						
