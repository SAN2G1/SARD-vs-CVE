command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5229435	File	data/converged/CVE-2011-4930_htcondor/starter_main.cpp								
ANR	5229436	DeclStmt									
ANR	5229437	Decl							List < UserProc >	List < UserProc >	listuserproc
ANR	5229438	DeclStmt									
ANR	5229439	Decl							void	"void ( const STARTUP_INFO * s , int flags )"	display_startup_info
ANR	5229440	DeclStmt									
ANR	5229441	Decl							const pid_t	const pid_t	ANY_PID
ANR	5229442	DeclStmt									
ANR	5229443	Decl							StdUnivSock	StdUnivSock *	SyscallStream
ANR	5229444	DeclStmt									
ANR	5229445	Decl							List < UserProc >	List < UserProc >	UProcList
ANR	5229446	DeclStmt									
ANR	5229447	Decl							char	char *	Execute
ANR	5229448	DeclStmt									
ANR	5229449	Decl							int	int	ExecTransferAttempts
ANR	5229450	DeclStmt									
ANR	5229451	Decl							char	char *	UidDomain
ANR	5229452	DeclStmt									
ANR	5229453	Decl							bool	bool	TrustUidDomain
ANR	5229454	DeclStmt									
ANR	5229455	Decl							Alarm	Alarm	MyAlarm
ANR	5229456	DeclStmt									
ANR	5229457	Decl							char	char *	InitiatingHost
ANR	5229458	DeclStmt									
ANR	5229459	Decl							char	char *	ThisHost
ANR	5229460	DeclStmt									
ANR	5229461	Decl							extern State	extern State [ ]	StateTab
ANR	5229462	DeclStmt									
ANR	5229463	Decl							extern Transition	extern Transition [ ]	TransTab
ANR	5229464	DeclStmt									
ANR	5229465	Decl							extern int	extern int [ ]	EventSigs
ANR	5229466	DeclStmt									
ANR	5229467	Decl							extern NameTable	extern NameTable	ProcStates
ANR	5229468	DeclStmt									
ANR	5229469	Decl							extern NameTable	extern NameTable	PvmMsgNames
ANR	5229470	DeclStmt									
ANR	5229471	Decl							extern int	extern int	shadow_tid
ANR	5229472	DeclStmt									
ANR	5229473	Decl							int	int ( UserProc * proc )	update_one
ANR	5229474	DeclStmt									
ANR	5229475	Decl							void	void ( UserProc * proc )	send_final_status
ANR	5229476	DeclStmt									
ANR	5229477	Decl							void	void ( )	resume_all
ANR	5229478	DeclStmt									
ANR	5229479	Decl							void	void ( )	req_exit_all
ANR	5229480	DeclStmt									
ANR	5229481	Decl							void	void ( )	req_ckpt_exit_all
ANR	5229482	DeclStmt									
ANR	5229483	Decl							int	int ( int fd )	needed_fd
ANR	5229484	DeclStmt									
ANR	5229485	Decl							void	"void ( uid_t & requested_uid , gid_t & requested_gid )"	determine_user_ids
ANR	5229486	DeclStmt									
ANR	5229487	Decl							void	void ( )	init_environment_info
ANR	5229488	DeclStmt									
ANR	5229489	Decl							void	"void ( uid_t & requested_uid , gid_t & requested_gid )"	determine_user_ids
ANR	5229490	DeclStmt									
ANR	5229491	Decl							StateMachine	StateMachine *	condor_starter_ptr
ANR	5229492	Function	printClassAd	102:0:2930:3167							
ANR	5229493	FunctionDef	printClassAd ()		5229492	0					
ANR	5229494	CompoundStatement		104:0:2956:3167	5229492	0					
ANR	5229495	ExpressionStatement	"printf ( ""%s = False\\n"" , ATTR_IS_DAEMON_CORE )"	105:1:2959:3004	5229492	0	True				
ANR	5229496	CallExpression	"printf ( ""%s = False\\n"" , ATTR_IS_DAEMON_CORE )"		5229492	0					
ANR	5229497	Callee	printf		5229492	0					
ANR	5229498	Identifier	printf		5229492	0					
ANR	5229499	ArgumentList	"""%s = False\\n"""		5229492	1					
ANR	5229500	Argument	"""%s = False\\n"""		5229492	0					
ANR	5229501	PrimaryExpression	"""%s = False\\n"""		5229492	0					
ANR	5229502	Argument	ATTR_IS_DAEMON_CORE		5229492	1					
ANR	5229503	Identifier	ATTR_IS_DAEMON_CORE		5229492	0					
ANR	5229504	ExpressionStatement	"printf ( ""%s = True\\n"" , ATTR_HAS_REMOTE_SYSCALLS )"	106:1:3007:3056	5229492	1	True				
ANR	5229505	CallExpression	"printf ( ""%s = True\\n"" , ATTR_HAS_REMOTE_SYSCALLS )"		5229492	0					
ANR	5229506	Callee	printf		5229492	0					
ANR	5229507	Identifier	printf		5229492	0					
ANR	5229508	ArgumentList	"""%s = True\\n"""		5229492	1					
ANR	5229509	Argument	"""%s = True\\n"""		5229492	0					
ANR	5229510	PrimaryExpression	"""%s = True\\n"""		5229492	0					
ANR	5229511	Argument	ATTR_HAS_REMOTE_SYSCALLS		5229492	1					
ANR	5229512	Identifier	ATTR_HAS_REMOTE_SYSCALLS		5229492	0					
ANR	5229513	ExpressionStatement	"printf ( ""%s = True\\n"" , ATTR_HAS_CHECKPOINTING )"	107:1:3059:3106	5229492	2	True				
ANR	5229514	CallExpression	"printf ( ""%s = True\\n"" , ATTR_HAS_CHECKPOINTING )"		5229492	0					
ANR	5229515	Callee	printf		5229492	0					
ANR	5229516	Identifier	printf		5229492	0					
ANR	5229517	ArgumentList	"""%s = True\\n"""		5229492	1					
ANR	5229518	Argument	"""%s = True\\n"""		5229492	0					
ANR	5229519	PrimaryExpression	"""%s = True\\n"""		5229492	0					
ANR	5229520	Argument	ATTR_HAS_CHECKPOINTING		5229492	1					
ANR	5229521	Identifier	ATTR_HAS_CHECKPOINTING		5229492	0					
ANR	5229522	ExpressionStatement	"printf ( ""%s = \\""%s\\""\\n"" , ATTR_VERSION , CondorVersion ( ) )"	108:1:3109:3165	5229492	3	True				
ANR	5229523	CallExpression	"printf ( ""%s = \\""%s\\""\\n"" , ATTR_VERSION , CondorVersion ( ) )"		5229492	0					
ANR	5229524	Callee	printf		5229492	0					
ANR	5229525	Identifier	printf		5229492	0					
ANR	5229526	ArgumentList	"""%s = \\""%s\\""\\n"""		5229492	1					
ANR	5229527	Argument	"""%s = \\""%s\\""\\n"""		5229492	0					
ANR	5229528	PrimaryExpression	"""%s = \\""%s\\""\\n"""		5229492	0					
ANR	5229529	Argument	ATTR_VERSION		5229492	1					
ANR	5229530	Identifier	ATTR_VERSION		5229492	0					
ANR	5229531	Argument	CondorVersion ( )		5229492	2					
ANR	5229532	CallExpression	CondorVersion ( )		5229492	0					
ANR	5229533	Callee	CondorVersion		5229492	0					
ANR	5229534	Identifier	CondorVersion		5229492	0					
ANR	5229535	ArgumentList			5229492	1					
ANR	5229536	ReturnType	void		5229492	1					
ANR	5229537	Identifier	printClassAd		5229492	2					
ANR	5229538	ParameterList			5229492	3					
ANR	5229539	CFGEntryNode	ENTRY		5229492		True				
ANR	5229540	CFGExitNode	EXIT		5229492		True				
ANR	5229541	Symbol	ATTR_VERSION		5229492						
ANR	5229542	Symbol	CondorVersion		5229492						
ANR	5229543	Symbol	ATTR_IS_DAEMON_CORE		5229492						
ANR	5229544	Symbol	ATTR_HAS_CHECKPOINTING		5229492						
ANR	5229545	Symbol	ATTR_HAS_REMOTE_SYSCALLS		5229492						
ANR	5229546	Function	main	117:0:3377:4225							
ANR	5229547	FunctionDef	"main (int argc , char * argv [ ])"		5229546	0					
ANR	5229548	CompoundStatement		119:0:3412:4225	5229546	0					
ANR	5229549	ExpressionStatement	"set_mySubSystem ( ""STARTER"" , SUBSYSTEM_TYPE_STARTER )"	120:1:3415:3467	5229546	0	True				
ANR	5229550	CallExpression	"set_mySubSystem ( ""STARTER"" , SUBSYSTEM_TYPE_STARTER )"		5229546	0					
ANR	5229551	Callee	set_mySubSystem		5229546	0					
ANR	5229552	Identifier	set_mySubSystem		5229546	0					
ANR	5229553	ArgumentList	"""STARTER"""		5229546	1					
ANR	5229554	Argument	"""STARTER"""		5229546	0					
ANR	5229555	PrimaryExpression	"""STARTER"""		5229546	0					
ANR	5229556	Argument	SUBSYSTEM_TYPE_STARTER		5229546	1					
ANR	5229557	Identifier	SUBSYSTEM_TYPE_STARTER		5229546	0					
ANR	5229558	ExpressionStatement	"myDistro -> Init ( argc , argv )"	122:1:3471:3499	5229546	1	True				
ANR	5229559	CallExpression	"myDistro -> Init ( argc , argv )"		5229546	0					
ANR	5229560	Callee	myDistro -> Init		5229546	0					
ANR	5229561	PtrMemberAccess	myDistro -> Init		5229546	0					
ANR	5229562	Identifier	myDistro		5229546	0					
ANR	5229563	Identifier	Init		5229546	1					
ANR	5229564	ArgumentList	argc		5229546	1					
ANR	5229565	Argument	argc		5229546	0					
ANR	5229566	Identifier	argc		5229546	0					
ANR	5229567	Argument	argv		5229546	1					
ANR	5229568	Identifier	argv		5229546	0					
ANR	5229569	IfStatement	"if ( argc == 2 && strncasecmp ( argv [ 1 ] , ""-cl"" , 3 ) == MATCH )"		5229546	2					
ANR	5229570	Condition	"argc == 2 && strncasecmp ( argv [ 1 ] , ""-cl"" , 3 ) == MATCH"	123:5:3506:3557	5229546	0	True				
ANR	5229571	AndExpression	"argc == 2 && strncasecmp ( argv [ 1 ] , ""-cl"" , 3 ) == MATCH"		5229546	0		&&			
ANR	5229572	EqualityExpression	argc == 2		5229546	0		==			
ANR	5229573	Identifier	argc		5229546	0					
ANR	5229574	PrimaryExpression	2		5229546	1					
ANR	5229575	EqualityExpression	"strncasecmp ( argv [ 1 ] , ""-cl"" , 3 ) == MATCH"		5229546	1		==			
ANR	5229576	CallExpression	"strncasecmp ( argv [ 1 ] , ""-cl"" , 3 )"		5229546	0					
ANR	5229577	Callee	strncasecmp		5229546	0					
ANR	5229578	Identifier	strncasecmp		5229546	0					
ANR	5229579	ArgumentList	argv [ 1 ]		5229546	1					
ANR	5229580	Argument	argv [ 1 ]		5229546	0					
ANR	5229581	ArrayIndexing	argv [ 1 ]		5229546	0					
ANR	5229582	Identifier	argv		5229546	0					
ANR	5229583	PrimaryExpression	1		5229546	1					
ANR	5229584	Argument	"""-cl"""		5229546	1					
ANR	5229585	PrimaryExpression	"""-cl"""		5229546	0					
ANR	5229586	Argument	3		5229546	2					
ANR	5229587	PrimaryExpression	3		5229546	0					
ANR	5229588	Identifier	MATCH		5229546	1					
ANR	5229589	CompoundStatement		5:60:148:148	5229546	1					
ANR	5229590	ExpressionStatement	printClassAd ( )	124:2:3565:3579	5229546	0	True				
ANR	5229591	CallExpression	printClassAd ( )		5229546	0					
ANR	5229592	Callee	printClassAd		5229546	0					
ANR	5229593	Identifier	printClassAd		5229546	0					
ANR	5229594	ArgumentList			5229546	1					
ANR	5229595	ExpressionStatement	exit ( 0 )	125:2:3583:3592	5229546	1	True				
ANR	5229596	CallExpression	exit ( 0 )		5229546	0					
ANR	5229597	Callee	exit		5229546	0					
ANR	5229598	Identifier	exit		5229546	0					
ANR	5229599	ArgumentList	0		5229546	1					
ANR	5229600	Argument	0		5229546	0					
ANR	5229601	PrimaryExpression	0		5229546	0					
ANR	5229602	IdentifierDeclStatement	"StateMachine condor_starter ( StateTab , TransTab , EventSigs , START , END ) ;"	128:1:3599:3671	5229546	3	True				
ANR	5229603	IdentifierDecl	"condor_starter ( StateTab , TransTab , EventSigs , START , END )"		5229546	0					
ANR	5229604	IdentifierDeclType	StateMachine		5229546	0					
ANR	5229605	Identifier	condor_starter		5229546	1					
ANR	5229606	Expression	"StateTab , TransTab , EventSigs , START , END"		5229546	2					
ANR	5229607	Identifier	StateTab		5229546	0					
ANR	5229608	Expression	"TransTab , EventSigs , START , END"		5229546	1					
ANR	5229609	Identifier	TransTab		5229546	0					
ANR	5229610	Expression	"EventSigs , START , END"		5229546	1					
ANR	5229611	Identifier	EventSigs		5229546	0					
ANR	5229612	Expression	"START , END"		5229546	1					
ANR	5229613	Identifier	START		5229546	0					
ANR	5229614	Identifier	END		5229546	1					
ANR	5229615	Statement	define	130:1:3675:3680	5229546	4	True				
ANR	5229616	Statement	DEBUGGING	130:8:3682:3690	5229546	5	True				
ANR	5229617	Statement	FALSE	130:18:3692:3696	5229546	6	True				
ANR	5229618	ExpressionStatement	wait_for_debugger ( TRUE )	132:1:3713:3738	5229546	7	True				
ANR	5229619	CallExpression	wait_for_debugger ( TRUE )		5229546	0					
ANR	5229620	Callee	wait_for_debugger		5229546	0					
ANR	5229621	Identifier	wait_for_debugger		5229546	0					
ANR	5229622	ArgumentList	TRUE		5229546	1					
ANR	5229623	Argument	TRUE		5229546	0					
ANR	5229624	Identifier	TRUE		5229546	0					
ANR	5229625	ExpressionStatement	"install_sig_handler ( SIGPIPE , SIG_IGN )"	138:1:3804:3842	5229546	8	True				
ANR	5229626	CallExpression	"install_sig_handler ( SIGPIPE , SIG_IGN )"		5229546	0					
ANR	5229627	Callee	install_sig_handler		5229546	0					
ANR	5229628	Identifier	install_sig_handler		5229546	0					
ANR	5229629	ArgumentList	SIGPIPE		5229546	1					
ANR	5229630	Argument	SIGPIPE		5229546	0					
ANR	5229631	Identifier	SIGPIPE		5229546	0					
ANR	5229632	Argument	SIG_IGN		5229546	1					
ANR	5229633	Identifier	SIG_IGN		5229546	0					
ANR	5229634	IfStatement	"if ( argc == 2 && strcmp ( argv [ 1 ] , ""-dot"" ) == MATCH )"		5229546	9					
ANR	5229635	Condition	"argc == 2 && strcmp ( argv [ 1 ] , ""-dot"" ) == MATCH"	141:5:3857:3901	5229546	0	True				
ANR	5229636	AndExpression	"argc == 2 && strcmp ( argv [ 1 ] , ""-dot"" ) == MATCH"		5229546	0		&&			
ANR	5229637	EqualityExpression	argc == 2		5229546	0		==			
ANR	5229638	Identifier	argc		5229546	0					
ANR	5229639	PrimaryExpression	2		5229546	1					
ANR	5229640	EqualityExpression	"strcmp ( argv [ 1 ] , ""-dot"" ) == MATCH"		5229546	1		==			
ANR	5229641	CallExpression	"strcmp ( argv [ 1 ] , ""-dot"" )"		5229546	0					
ANR	5229642	Callee	strcmp		5229546	0					
ANR	5229643	Identifier	strcmp		5229546	0					
ANR	5229644	ArgumentList	argv [ 1 ]		5229546	1					
ANR	5229645	Argument	argv [ 1 ]		5229546	0					
ANR	5229646	ArrayIndexing	argv [ 1 ]		5229546	0					
ANR	5229647	Identifier	argv		5229546	0					
ANR	5229648	PrimaryExpression	1		5229546	1					
ANR	5229649	Argument	"""-dot"""		5229546	1					
ANR	5229650	PrimaryExpression	"""-dot"""		5229546	0					
ANR	5229651	Identifier	MATCH		5229546	1					
ANR	5229652	CompoundStatement		23:52:491:491	5229546	1					
ANR	5229653	ExpressionStatement	condor_starter . dot_print ( stdout )	142:2:3908:3940	5229546	0	True				
ANR	5229654	CallExpression	condor_starter . dot_print ( stdout )		5229546	0					
ANR	5229655	Callee	condor_starter . dot_print		5229546	0					
ANR	5229656	MemberAccess	condor_starter . dot_print		5229546	0					
ANR	5229657	Identifier	condor_starter		5229546	0					
ANR	5229658	Identifier	dot_print		5229546	1					
ANR	5229659	ArgumentList	stdout		5229546	1					
ANR	5229660	Argument	stdout		5229546	0					
ANR	5229661	Identifier	stdout		5229546	0					
ANR	5229662	ExpressionStatement	exit ( 0 )	143:2:3944:3951	5229546	1	True				
ANR	5229663	CallExpression	exit ( 0 )		5229546	0					
ANR	5229664	Callee	exit		5229546	0					
ANR	5229665	Identifier	exit		5229546	0					
ANR	5229666	ArgumentList	0		5229546	1					
ANR	5229667	Argument	0		5229546	0					
ANR	5229668	PrimaryExpression	0		5229546	0					
ANR	5229669	ExpressionStatement	set_posix_environment ( )	146:1:3958:3981	5229546	10	True				
ANR	5229670	CallExpression	set_posix_environment ( )		5229546	0					
ANR	5229671	Callee	set_posix_environment		5229546	0					
ANR	5229672	Identifier	set_posix_environment		5229546	0					
ANR	5229673	ArgumentList			5229546	1					
ANR	5229674	ExpressionStatement	"initial_bookeeping ( argc , argv )"	147:1:3984:4016	5229546	11	True				
ANR	5229675	CallExpression	"initial_bookeeping ( argc , argv )"		5229546	0					
ANR	5229676	Callee	initial_bookeeping		5229546	0					
ANR	5229677	Identifier	initial_bookeeping		5229546	0					
ANR	5229678	ArgumentList	argc		5229546	1					
ANR	5229679	Argument	argc		5229546	0					
ANR	5229680	Identifier	argc		5229546	0					
ANR	5229681	Argument	argv		5229546	1					
ANR	5229682	Identifier	argv		5229546	0					
ANR	5229683	ExpressionStatement	condor_starter_ptr = & ( condor_starter )	149:1:4020:4058	5229546	12	True				
ANR	5229684	AssignmentExpression	condor_starter_ptr = & ( condor_starter )		5229546	0		=			
ANR	5229685	Identifier	condor_starter_ptr		5229546	0					
ANR	5229686	UnaryOperationExpression	& ( condor_starter )		5229546	1					
ANR	5229687	UnaryOperator	&		5229546	0					
ANR	5229688	Identifier	condor_starter		5229546	1					
ANR	5229689	ExpressionStatement	condor_starter . execute ( )	151:1:4090:4114	5229546	13	True				
ANR	5229690	CallExpression	condor_starter . execute ( )		5229546	0					
ANR	5229691	Callee	condor_starter . execute		5229546	0					
ANR	5229692	MemberAccess	condor_starter . execute		5229546	0					
ANR	5229693	Identifier	condor_starter		5229546	0					
ANR	5229694	Identifier	execute		5229546	1					
ANR	5229695	ArgumentList			5229546	1					
ANR	5229696	ExpressionStatement	free ( UidDomain )	152:4:4120:4135	5229546	14	True				
ANR	5229697	CallExpression	free ( UidDomain )		5229546	0					
ANR	5229698	Callee	free		5229546	0					
ANR	5229699	Identifier	free		5229546	0					
ANR	5229700	ArgumentList	UidDomain		5229546	1					
ANR	5229701	Argument	UidDomain		5229546	0					
ANR	5229702	Identifier	UidDomain		5229546	0					
ANR	5229703	ExpressionStatement	"dprintf ( D_ALWAYS , ""********* STARTER terminating normally **********\\n"" )"	153:1:4138:4212	5229546	15	True				
ANR	5229704	CallExpression	"dprintf ( D_ALWAYS , ""********* STARTER terminating normally **********\\n"" )"		5229546	0					
ANR	5229705	Callee	dprintf		5229546	0					
ANR	5229706	Identifier	dprintf		5229546	0					
ANR	5229707	ArgumentList	D_ALWAYS		5229546	1					
ANR	5229708	Argument	D_ALWAYS		5229546	0					
ANR	5229709	Identifier	D_ALWAYS		5229546	0					
ANR	5229710	Argument	"""********* STARTER terminating normally **********\\n"""		5229546	1					
ANR	5229711	PrimaryExpression	"""********* STARTER terminating normally **********\\n"""		5229546	0					
ANR	5229712	ReturnStatement	return 0 ;	154:1:4215:4223	5229546	16	True				
ANR	5229713	PrimaryExpression	0		5229546	0					
ANR	5229714	ReturnType	int		5229546	1					
ANR	5229715	Identifier	main		5229546	2					
ANR	5229716	ParameterList	"int argc , char * argv [ ]"		5229546	3					
ANR	5229717	Parameter	int argc	118:6:3387:3394	5229546	0	True				
ANR	5229718	ParameterType	int		5229546	0					
ANR	5229719	Identifier	argc		5229546	1					
ANR	5229720	Parameter	char * argv [ ]	118:16:3397:3408	5229546	1	True				
ANR	5229721	ParameterType	char * [ ]		5229546	0					
ANR	5229722	Identifier	argv		5229546	1					
ANR	5229723	CFGEntryNode	ENTRY		5229546		True				
ANR	5229724	CFGExitNode	EXIT		5229546		True				
ANR	5229725	Symbol	argc		5229546						
ANR	5229726	Symbol	strcmp		5229546						
ANR	5229727	Symbol	stdout		5229546						
ANR	5229728	Symbol	strncasecmp		5229546						
ANR	5229729	Symbol	UidDomain		5229546						
ANR	5229730	Symbol	D_ALWAYS		5229546						
ANR	5229731	Symbol	TRUE		5229546						
ANR	5229732	Symbol	SIG_IGN		5229546						
ANR	5229733	Symbol	* argv		5229546						
ANR	5229734	Symbol	argv		5229546						
ANR	5229735	Symbol	SUBSYSTEM_TYPE_STARTER		5229546						
ANR	5229736	Symbol	& condor_starter		5229546						
ANR	5229737	Symbol	myDistro		5229546						
ANR	5229738	Symbol	condor_starter		5229546						
ANR	5229739	Symbol	SIGPIPE		5229546						
ANR	5229740	Symbol	MATCH		5229546						
ANR	5229741	Symbol	condor_starter_ptr		5229546						
ANR	5229742	Function	init	161:0:4303:4460							
ANR	5229743	FunctionDef	init ()		5229742	0					
ANR	5229744	CompoundStatement		163:0:4314:4460	5229742	0					
ANR	5229745	ExpressionStatement	move_to_execute_directory ( )	164:1:4317:4344	5229742	0	True				
ANR	5229746	CallExpression	move_to_execute_directory ( )		5229742	0					
ANR	5229747	Callee	move_to_execute_directory		5229742	0					
ANR	5229748	Identifier	move_to_execute_directory		5229742	0					
ANR	5229749	ArgumentList			5229742	1					
ANR	5229750	ExpressionStatement	init_environment_info ( )	165:1:4347:4370	5229742	1	True				
ANR	5229751	CallExpression	init_environment_info ( )		5229742	0					
ANR	5229752	Callee	init_environment_info		5229742	0					
ANR	5229753	Identifier	init_environment_info		5229742	0					
ANR	5229754	ArgumentList			5229742	1					
ANR	5229755	ExpressionStatement	sysapi_set_resource_limits ( 1 << 29 )	166:1:4373:4406	5229742	2	True				
ANR	5229756	CallExpression	sysapi_set_resource_limits ( 1 << 29 )		5229742	0					
ANR	5229757	Callee	sysapi_set_resource_limits		5229742	0					
ANR	5229758	Identifier	sysapi_set_resource_limits		5229742	0					
ANR	5229759	ArgumentList	1 << 29		5229742	1					
ANR	5229760	Argument	1 << 29		5229742	0					
ANR	5229761	ShiftExpression	1 << 29		5229742	0		<<			
ANR	5229762	PrimaryExpression	1		5229742	0					
ANR	5229763	PrimaryExpression	29		5229742	1					
ANR	5229764	ExpressionStatement	close_unused_file_descriptors ( )	167:1:4409:4440	5229742	3	True				
ANR	5229765	CallExpression	close_unused_file_descriptors ( )		5229742	0					
ANR	5229766	Callee	close_unused_file_descriptors		5229742	0					
ANR	5229767	Identifier	close_unused_file_descriptors		5229742	0					
ANR	5229768	ArgumentList			5229742	1					
ANR	5229769	ReturnStatement	return DEFAULT ;	169:1:4444:4458	5229742	4	True				
ANR	5229770	Identifier	DEFAULT		5229742	0					
ANR	5229771	ReturnType	int		5229742	1					
ANR	5229772	Identifier	init		5229742	2					
ANR	5229773	ParameterList			5229742	3					
ANR	5229774	CFGEntryNode	ENTRY		5229742		True				
ANR	5229775	CFGExitNode	EXIT		5229742		True				
ANR	5229776	Symbol	DEFAULT		5229742						
ANR	5229777	Function	susp_self	176:0:4519:4661							
ANR	5229778	FunctionDef	susp_self ()		5229777	0					
ANR	5229779	CompoundStatement		178:0:4535:4661	5229777	0					
ANR	5229780	ExpressionStatement	"dprintf ( D_ALWAYS , ""Suspending self\\n"" )"	179:1:4538:4578	5229777	0	True				
ANR	5229781	CallExpression	"dprintf ( D_ALWAYS , ""Suspending self\\n"" )"		5229777	0					
ANR	5229782	Callee	dprintf		5229777	0					
ANR	5229783	Identifier	dprintf		5229777	0					
ANR	5229784	ArgumentList	D_ALWAYS		5229777	1					
ANR	5229785	Argument	D_ALWAYS		5229777	0					
ANR	5229786	Identifier	D_ALWAYS		5229777	0					
ANR	5229787	Argument	"""Suspending self\\n"""		5229777	1					
ANR	5229788	PrimaryExpression	"""Suspending self\\n"""		5229777	0					
ANR	5229789	ExpressionStatement	"kill ( getpid ( ) , SIGSTOP )"	180:1:4581:4606	5229777	1	True				
ANR	5229790	CallExpression	"kill ( getpid ( ) , SIGSTOP )"		5229777	0					
ANR	5229791	Callee	kill		5229777	0					
ANR	5229792	Identifier	kill		5229777	0					
ANR	5229793	ArgumentList	getpid ( )		5229777	1					
ANR	5229794	Argument	getpid ( )		5229777	0					
ANR	5229795	CallExpression	getpid ( )		5229777	0					
ANR	5229796	Callee	getpid		5229777	0					
ANR	5229797	Identifier	getpid		5229777	0					
ANR	5229798	ArgumentList			5229777	1					
ANR	5229799	Argument	SIGSTOP		5229777	1					
ANR	5229800	Identifier	SIGSTOP		5229777	0					
ANR	5229801	ExpressionStatement	"dprintf ( D_ALWAYS , ""Resuming self\\n"" )"	181:1:4609:4647	5229777	2	True				
ANR	5229802	CallExpression	"dprintf ( D_ALWAYS , ""Resuming self\\n"" )"		5229777	0					
ANR	5229803	Callee	dprintf		5229777	0					
ANR	5229804	Identifier	dprintf		5229777	0					
ANR	5229805	ArgumentList	D_ALWAYS		5229777	1					
ANR	5229806	Argument	D_ALWAYS		5229777	0					
ANR	5229807	Identifier	D_ALWAYS		5229777	0					
ANR	5229808	Argument	"""Resuming self\\n"""		5229777	1					
ANR	5229809	PrimaryExpression	"""Resuming self\\n"""		5229777	0					
ANR	5229810	ReturnStatement	return ( 0 ) ;	182:1:4650:4659	5229777	3	True				
ANR	5229811	PrimaryExpression	0		5229777	0					
ANR	5229812	ReturnType	int		5229777	1					
ANR	5229813	Identifier	susp_self		5229777	2					
ANR	5229814	ParameterList			5229777	3					
ANR	5229815	CFGEntryNode	ENTRY		5229777		True				
ANR	5229816	CFGExitNode	EXIT		5229777		True				
ANR	5229817	Symbol	SIGSTOP		5229777						
ANR	5229818	Symbol	D_ALWAYS		5229777						
ANR	5229819	Symbol	getpid		5229777						
ANR	5229820	Function	usage	189:0:4762:4903							
ANR	5229821	FunctionDef	usage (char * my_name)		5229820	0					
ANR	5229822	CompoundStatement		191:0:4790:4903	5229820	0					
ANR	5229823	ExpressionStatement	"dprintf ( D_ALWAYS , ""Usage: %s ( -pipe | initiating_host) [<STARTD_IP:STARTD_PORT>]\\n"" , my_name )"	192:1:4793:4889	5229820	0	True				
ANR	5229824	CallExpression	"dprintf ( D_ALWAYS , ""Usage: %s ( -pipe | initiating_host) [<STARTD_IP:STARTD_PORT>]\\n"" , my_name )"		5229820	0					
ANR	5229825	Callee	dprintf		5229820	0					
ANR	5229826	Identifier	dprintf		5229820	0					
ANR	5229827	ArgumentList	D_ALWAYS		5229820	1					
ANR	5229828	Argument	D_ALWAYS		5229820	0					
ANR	5229829	Identifier	D_ALWAYS		5229820	0					
ANR	5229830	Argument	"""Usage: %s ( -pipe | initiating_host) [<STARTD_IP:STARTD_PORT>]\\n"""		5229820	1					
ANR	5229831	PrimaryExpression	"""Usage: %s ( -pipe | initiating_host) [<STARTD_IP:STARTD_PORT>]\\n"""		5229820	0					
ANR	5229832	Argument	my_name		5229820	2					
ANR	5229833	Identifier	my_name		5229820	0					
ANR	5229834	ExpressionStatement	exit ( 0 )	193:1:4892:4901	5229820	1	True				
ANR	5229835	CallExpression	exit ( 0 )		5229820	0					
ANR	5229836	Callee	exit		5229820	0					
ANR	5229837	Identifier	exit		5229820	0					
ANR	5229838	ArgumentList	0		5229820	1					
ANR	5229839	Argument	0		5229820	0					
ANR	5229840	PrimaryExpression	0		5229820	0					
ANR	5229841	ReturnType	void		5229820	1					
ANR	5229842	Identifier	usage		5229820	2					
ANR	5229843	ParameterList	char * my_name		5229820	3					
ANR	5229844	Parameter	char * my_name	190:7:4774:4786	5229820	0	True				
ANR	5229845	ParameterType	char *		5229820	0					
ANR	5229846	Identifier	my_name		5229820	1					
ANR	5229847	CFGEntryNode	ENTRY		5229820		True				
ANR	5229848	CFGExitNode	EXIT		5229820		True				
ANR	5229849	Symbol	my_name		5229820						
ANR	5229850	Symbol	D_ALWAYS		5229820						
ANR	5229851	Function	wait_for_debugger	201:0:5100:5587							
ANR	5229852	FunctionDef	wait_for_debugger (int do_wait)		5229851	0					
ANR	5229853	CompoundStatement		202:0:5138:5587	5229851	0					
ANR	5229854	IdentifierDeclStatement	sigset_t sigset ;	203:1:5141:5156	5229851	0	True				
ANR	5229855	IdentifierDecl	sigset		5229851	0					
ANR	5229856	IdentifierDeclType	sigset_t		5229851	0					
ANR	5229857	Identifier	sigset		5229851	1					
ANR	5229858	ExpressionStatement	sigemptyset ( & sigset )	212:1:5460:5482	5229851	1	True				
ANR	5229859	CallExpression	sigemptyset ( & sigset )		5229851	0					
ANR	5229860	Callee	sigemptyset		5229851	0					
ANR	5229861	Identifier	sigemptyset		5229851	0					
ANR	5229862	ArgumentList	& sigset		5229851	1					
ANR	5229863	Argument	& sigset		5229851	0					
ANR	5229864	UnaryOperationExpression	& sigset		5229851	0					
ANR	5229865	UnaryOperator	&		5229851	0					
ANR	5229866	Identifier	sigset		5229851	1					
ANR	5229867	ExpressionStatement	"sigaddset ( & sigset , SIGTRAP )"	213:1:5485:5514	5229851	2	True				
ANR	5229868	CallExpression	"sigaddset ( & sigset , SIGTRAP )"		5229851	0					
ANR	5229869	Callee	sigaddset		5229851	0					
ANR	5229870	Identifier	sigaddset		5229851	0					
ANR	5229871	ArgumentList	& sigset		5229851	1					
ANR	5229872	Argument	& sigset		5229851	0					
ANR	5229873	UnaryOperationExpression	& sigset		5229851	0					
ANR	5229874	UnaryOperator	&		5229851	0					
ANR	5229875	Identifier	sigset		5229851	1					
ANR	5229876	Argument	SIGTRAP		5229851	1					
ANR	5229877	Identifier	SIGTRAP		5229851	0					
ANR	5229878	ExpressionStatement	"sigprocmask ( SIG_UNBLOCK , & sigset , 0 )"	214:1:5517:5555	5229851	3	True				
ANR	5229879	CallExpression	"sigprocmask ( SIG_UNBLOCK , & sigset , 0 )"		5229851	0					
ANR	5229880	Callee	sigprocmask		5229851	0					
ANR	5229881	Identifier	sigprocmask		5229851	0					
ANR	5229882	ArgumentList	SIG_UNBLOCK		5229851	1					
ANR	5229883	Argument	SIG_UNBLOCK		5229851	0					
ANR	5229884	Identifier	SIG_UNBLOCK		5229851	0					
ANR	5229885	Argument	& sigset		5229851	1					
ANR	5229886	UnaryOperationExpression	& sigset		5229851	0					
ANR	5229887	UnaryOperator	&		5229851	0					
ANR	5229888	Identifier	sigset		5229851	1					
ANR	5229889	Argument	0		5229851	2					
ANR	5229890	PrimaryExpression	0		5229851	0					
ANR	5229891	WhileStatement	while ( do_wait )		5229851	4					
ANR	5229892	Condition	do_wait	217:8:5573:5579	5229851	0	True				
ANR	5229893	Identifier	do_wait		5229851	0					
ANR	5229894	ExpressionStatement		218:2:5585:5585	5229851	1	True				
ANR	5229895	ReturnType	void		5229851	1					
ANR	5229896	Identifier	wait_for_debugger		5229851	2					
ANR	5229897	ParameterList	int do_wait		5229851	3					
ANR	5229898	Parameter	int do_wait	201:24:5124:5134	5229851	0	True				
ANR	5229899	ParameterType	int		5229851	0					
ANR	5229900	Identifier	do_wait		5229851	1					
ANR	5229901	CFGEntryNode	ENTRY		5229851		True				
ANR	5229902	CFGExitNode	EXIT		5229851		True				
ANR	5229903	Symbol	do_wait		5229851						
ANR	5229904	Symbol	& sigset		5229851						
ANR	5229905	Symbol	sigset		5229851						
ANR	5229906	Symbol	SIG_UNBLOCK		5229851						
ANR	5229907	Symbol	SIGTRAP		5229851						
ANR	5229908	Function	init_shadow_connections	228:0:5901:6249							
ANR	5229909	FunctionDef	init_shadow_connections ()		5229908	0					
ANR	5229910	CompoundStatement		230:0:5932:6249	5229908	0					
ANR	5229911	ExpressionStatement	"( void ) dup2 ( 1 , RSC_SOCK )"	231:1:5935:5961	5229908	0	True				
ANR	5229912	CastExpression	"( void ) dup2 ( 1 , RSC_SOCK )"		5229908	0					
ANR	5229913	CastTarget	void		5229908	0					
ANR	5229914	CallExpression	"dup2 ( 1 , RSC_SOCK )"		5229908	1					
ANR	5229915	Callee	dup2		5229908	0					
ANR	5229916	Identifier	dup2		5229908	0					
ANR	5229917	ArgumentList	1		5229908	1					
ANR	5229918	Argument	1		5229908	0					
ANR	5229919	PrimaryExpression	1		5229908	0					
ANR	5229920	Argument	RSC_SOCK		5229908	1					
ANR	5229921	Identifier	RSC_SOCK		5229908	0					
ANR	5229922	ExpressionStatement	"( void ) dup2 ( 2 , CLIENT_LOG )"	232:1:5964:5992	5229908	1	True				
ANR	5229923	CastExpression	"( void ) dup2 ( 2 , CLIENT_LOG )"		5229908	0					
ANR	5229924	CastTarget	void		5229908	0					
ANR	5229925	CallExpression	"dup2 ( 2 , CLIENT_LOG )"		5229908	1					
ANR	5229926	Callee	dup2		5229908	0					
ANR	5229927	Identifier	dup2		5229908	0					
ANR	5229928	ArgumentList	2		5229908	1					
ANR	5229929	Argument	2		5229908	0					
ANR	5229930	PrimaryExpression	2		5229908	0					
ANR	5229931	Argument	CLIENT_LOG		5229908	1					
ANR	5229932	Identifier	CLIENT_LOG		5229908	0					
ANR	5229933	ExpressionStatement	SyscallStream = init_syscall_connection ( FALSE )	233:1:5995:6042	5229908	2	True				
ANR	5229934	AssignmentExpression	SyscallStream = init_syscall_connection ( FALSE )		5229908	0		=			
ANR	5229935	Identifier	SyscallStream		5229908	0					
ANR	5229936	CallExpression	init_syscall_connection ( FALSE )		5229908	1					
ANR	5229937	Callee	init_syscall_connection		5229908	0					
ANR	5229938	Identifier	init_syscall_connection		5229908	0					
ANR	5229939	ArgumentList	FALSE		5229908	1					
ANR	5229940	Argument	FALSE		5229908	0					
ANR	5229941	Identifier	FALSE		5229908	0					
ANR	5229942	ExpressionStatement	SyscallStream -> timeout ( 300 )	237:1:6220:6247	5229908	3	True				
ANR	5229943	CallExpression	SyscallStream -> timeout ( 300 )		5229908	0					
ANR	5229944	Callee	SyscallStream -> timeout		5229908	0					
ANR	5229945	PtrMemberAccess	SyscallStream -> timeout		5229908	0					
ANR	5229946	Identifier	SyscallStream		5229908	0					
ANR	5229947	Identifier	timeout		5229908	1					
ANR	5229948	ArgumentList	300		5229908	1					
ANR	5229949	Argument	300		5229908	0					
ANR	5229950	PrimaryExpression	300		5229908	0					
ANR	5229951	ReturnType	void		5229908	1					
ANR	5229952	Identifier	init_shadow_connections		5229908	2					
ANR	5229953	ParameterList			5229908	3					
ANR	5229954	CFGEntryNode	ENTRY		5229908		True				
ANR	5229955	CFGExitNode	EXIT		5229908		True				
ANR	5229956	Symbol	CLIENT_LOG		5229908						
ANR	5229957	Symbol	init_syscall_connection		5229908						
ANR	5229958	Symbol	SyscallStream		5229908						
ANR	5229959	Symbol	RSC_SOCK		5229908						
ANR	5229960	Symbol	FALSE		5229908						
ANR	5229961	Function	move_to_execute_directory	243:0:6318:6485							
ANR	5229962	FunctionDef	move_to_execute_directory ()		5229961	0					
ANR	5229963	CompoundStatement		245:0:6351:6485	5229961	0					
ANR	5229964	IfStatement	if ( chdir ( Execute ) )		5229961	0					
ANR	5229965	Condition	chdir ( Execute )	246:5:6358:6371	5229961	0	True				
ANR	5229966	CallExpression	chdir ( Execute )		5229961	0					
ANR	5229967	Callee	chdir		5229961	0					
ANR	5229968	Identifier	chdir		5229961	0					
ANR	5229969	ArgumentList	Execute		5229961	1					
ANR	5229970	Argument	Execute		5229961	0					
ANR	5229971	Identifier	Execute		5229961	0					
ANR	5229972	CompoundStatement		2:22:23:23	5229961	1					
ANR	5229973	ExpressionStatement	"EXCEPT ( ""chdir(%s)"" , Execute )"	247:2:6379:6409	5229961	0	True				
ANR	5229974	CallExpression	"EXCEPT ( ""chdir(%s)"" , Execute )"		5229961	0					
ANR	5229975	Callee	EXCEPT		5229961	0					
ANR	5229976	Identifier	EXCEPT		5229961	0					
ANR	5229977	ArgumentList	"""chdir(%s)"""		5229961	1					
ANR	5229978	Argument	"""chdir(%s)"""		5229961	0					
ANR	5229979	PrimaryExpression	"""chdir(%s)"""		5229961	0					
ANR	5229980	Argument	Execute		5229961	1					
ANR	5229981	Identifier	Execute		5229961	0					
ANR	5229982	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Done moving to directory \\""%s\\""\\n"" , Execute )"	249:1:6415:6483	5229961	1	True				
ANR	5229983	CallExpression	"dprintf ( D_FULLDEBUG , ""Done moving to directory \\""%s\\""\\n"" , Execute )"		5229961	0					
ANR	5229984	Callee	dprintf		5229961	0					
ANR	5229985	Identifier	dprintf		5229961	0					
ANR	5229986	ArgumentList	D_FULLDEBUG		5229961	1					
ANR	5229987	Argument	D_FULLDEBUG		5229961	0					
ANR	5229988	Identifier	D_FULLDEBUG		5229961	0					
ANR	5229989	Argument	"""Done moving to directory \\""%s\\""\\n"""		5229961	1					
ANR	5229990	PrimaryExpression	"""Done moving to directory \\""%s\\""\\n"""		5229961	0					
ANR	5229991	Argument	Execute		5229961	2					
ANR	5229992	Identifier	Execute		5229961	0					
ANR	5229993	ReturnType	void		5229961	1					
ANR	5229994	Identifier	move_to_execute_directory		5229961	2					
ANR	5229995	ParameterList			5229961	3					
ANR	5229996	CFGEntryNode	ENTRY		5229961		True				
ANR	5229997	CFGExitNode	EXIT		5229961		True				
ANR	5229998	Symbol	Execute		5229961						
ANR	5229999	Symbol	D_FULLDEBUG		5229961						
ANR	5230000	Symbol	chdir		5229961						
ANR	5230001	Function	close_unused_file_descriptors	258:0:6715:7525							
ANR	5230002	FunctionDef	close_unused_file_descriptors ()		5230001	0					
ANR	5230003	CompoundStatement		260:0:6752:7525	5230001	0					
ANR	5230004	IdentifierDeclStatement	long open_max ;	261:1:6755:6769	5230001	0	True				
ANR	5230005	IdentifierDecl	open_max		5230001	0					
ANR	5230006	IdentifierDeclType	long		5230001	0					
ANR	5230007	Identifier	open_max		5230001	1					
ANR	5230008	IdentifierDeclStatement	long i ;	262:1:6772:6779	5230001	1	True				
ANR	5230009	IdentifierDecl	i		5230001	0					
ANR	5230010	IdentifierDeclType	long		5230001	0					
ANR	5230011	Identifier	i		5230001	1					
ANR	5230012	IdentifierDeclStatement	"std :: map < int , bool > open_fds ;"	263:1:6782:6809	5230001	2	True				
ANR	5230013	IdentifierDecl	open_fds		5230001	0					
ANR	5230014	IdentifierDeclType	"std :: map < int , bool >"		5230001	0					
ANR	5230015	Identifier	open_fds		5230001	1					
ANR	5230016	IdentifierDeclStatement	bool need_open = false ;	264:1:6812:6834	5230001	3	True				
ANR	5230017	IdentifierDecl	need_open = false		5230001	0					
ANR	5230018	IdentifierDeclType	bool		5230001	0					
ANR	5230019	Identifier	need_open		5230001	1					
ANR	5230020	AssignmentExpression	need_open = false		5230001	2		=			
ANR	5230021	Identifier	false		5230001	0					
ANR	5230022	Identifier	false		5230001	1					
ANR	5230023	ExpressionStatement	errno = 0	268:1:6905:6914	5230001	4	True				
ANR	5230024	AssignmentExpression	errno = 0		5230001	0		=			
ANR	5230025	Identifier	errno		5230001	0					
ANR	5230026	PrimaryExpression	0		5230001	1					
ANR	5230027	IfStatement	if ( ( open_max = sysconf ( _SC_OPEN_MAX ) ) == - 1 )		5230001	5					
ANR	5230028	Condition	( open_max = sysconf ( _SC_OPEN_MAX ) ) == - 1	269:5:6921:6958	5230001	0	True				
ANR	5230029	EqualityExpression	( open_max = sysconf ( _SC_OPEN_MAX ) ) == - 1		5230001	0		==			
ANR	5230030	AssignmentExpression	open_max = sysconf ( _SC_OPEN_MAX )		5230001	0		=			
ANR	5230031	Identifier	open_max		5230001	0					
ANR	5230032	CallExpression	sysconf ( _SC_OPEN_MAX )		5230001	1					
ANR	5230033	Callee	sysconf		5230001	0					
ANR	5230034	Identifier	sysconf		5230001	0					
ANR	5230035	ArgumentList	_SC_OPEN_MAX		5230001	1					
ANR	5230036	Argument	_SC_OPEN_MAX		5230001	0					
ANR	5230037	Identifier	_SC_OPEN_MAX		5230001	0					
ANR	5230038	UnaryOperationExpression	- 1		5230001	1					
ANR	5230039	UnaryOperator	-		5230001	0					
ANR	5230040	PrimaryExpression	1		5230001	1					
ANR	5230041	CompoundStatement		10:46:209:209	5230001	1					
ANR	5230042	IfStatement	if ( errno == 0 )		5230001	0					
ANR	5230043	Condition	errno == 0	270:6:6970:6979	5230001	0	True				
ANR	5230044	EqualityExpression	errno == 0		5230001	0		==			
ANR	5230045	Identifier	errno		5230001	0					
ANR	5230046	PrimaryExpression	0		5230001	1					
ANR	5230047	CompoundStatement		11:19:230:230	5230001	1					
ANR	5230048	ExpressionStatement	open_max = RSC_SOCK	271:3:6988:7007	5230001	0	True				
ANR	5230049	AssignmentExpression	open_max = RSC_SOCK		5230001	0		=			
ANR	5230050	Identifier	open_max		5230001	0					
ANR	5230051	Identifier	RSC_SOCK		5230001	1					
ANR	5230052	ExpressionStatement	"dprintf ( D_ALWAYS , ""OPEN_MAX is indeterminite, using %d\\n"" , RSC_SOCK )"	272:3:7012:7098	5230001	1	True				
ANR	5230053	CallExpression	"dprintf ( D_ALWAYS , ""OPEN_MAX is indeterminite, using %d\\n"" , RSC_SOCK )"		5230001	0					
ANR	5230054	Callee	dprintf		5230001	0					
ANR	5230055	Identifier	dprintf		5230001	0					
ANR	5230056	ArgumentList	D_ALWAYS		5230001	1					
ANR	5230057	Argument	D_ALWAYS		5230001	0					
ANR	5230058	Identifier	D_ALWAYS		5230001	0					
ANR	5230059	Argument	"""OPEN_MAX is indeterminite, using %d\\n"""		5230001	1					
ANR	5230060	PrimaryExpression	"""OPEN_MAX is indeterminite, using %d\\n"""		5230001	0					
ANR	5230061	Argument	RSC_SOCK		5230001	2					
ANR	5230062	Identifier	RSC_SOCK		5230001	0					
ANR	5230063	ElseStatement	else		5230001	0					
ANR	5230064	CompoundStatement		15:9:356:356	5230001	0					
ANR	5230065	ExpressionStatement	"EXCEPT ( ""_SC_OPEN_MAX not recognized"" )"	275:3:7114:7153	5230001	0	True				
ANR	5230066	CallExpression	"EXCEPT ( ""_SC_OPEN_MAX not recognized"" )"		5230001	0					
ANR	5230067	Callee	EXCEPT		5230001	0					
ANR	5230068	Identifier	EXCEPT		5230001	0					
ANR	5230069	ArgumentList	"""_SC_OPEN_MAX not recognized"""		5230001	1					
ANR	5230070	Argument	"""_SC_OPEN_MAX not recognized"""		5230001	0					
ANR	5230071	PrimaryExpression	"""_SC_OPEN_MAX not recognized"""		5230001	0					
ANR	5230072	ExpressionStatement	need_open = debug_open_fds ( open_fds )	279:1:7164:7200	5230001	6	True				
ANR	5230073	AssignmentExpression	need_open = debug_open_fds ( open_fds )		5230001	0		=			
ANR	5230074	Identifier	need_open		5230001	0					
ANR	5230075	CallExpression	debug_open_fds ( open_fds )		5230001	1					
ANR	5230076	Callee	debug_open_fds		5230001	0					
ANR	5230077	Identifier	debug_open_fds		5230001	0					
ANR	5230078	ArgumentList	open_fds		5230001	1					
ANR	5230079	Argument	open_fds		5230001	0					
ANR	5230080	Identifier	open_fds		5230001	0					
ANR	5230081	ForStatement	for ( i = 0 ; i < open_max ; i ++ )		5230001	7					
ANR	5230082	ForInit	i = 0 ;	282:6:7261:7264	5230001	0	True				
ANR	5230083	AssignmentExpression	i = 0		5230001	0		=			
ANR	5230084	Identifier	i		5230001	0					
ANR	5230085	PrimaryExpression	0		5230001	1					
ANR	5230086	Condition	i < open_max	282:11:7266:7275	5230001	1	True				
ANR	5230087	RelationalExpression	i < open_max		5230001	0		<			
ANR	5230088	Identifier	i		5230001	0					
ANR	5230089	Identifier	open_max		5230001	1					
ANR	5230090	PostIncDecOperationExpression	i ++	282:23:7278:7280	5230001	2	True				
ANR	5230091	Identifier	i		5230001	0					
ANR	5230092	IncDec	++		5230001	1					
ANR	5230093	CompoundStatement		24:2:535:554	5230001	3					
ANR	5230094	IdentifierDeclStatement	bool is_log = false ;	283:2:7288:7307	5230001	0	True				
ANR	5230095	IdentifierDecl	is_log = false		5230001	0					
ANR	5230096	IdentifierDeclType	bool		5230001	0					
ANR	5230097	Identifier	is_log		5230001	1					
ANR	5230098	AssignmentExpression	is_log = false		5230001	2		=			
ANR	5230099	Identifier	false		5230001	0					
ANR	5230100	Identifier	false		5230001	1					
ANR	5230101	IfStatement	if ( need_open )		5230001	1					
ANR	5230102	Condition	need_open	284:5:7314:7322	5230001	0	True				
ANR	5230103	Identifier	need_open		5230001	0					
ANR	5230104	CompoundStatement		26:2:574:574	5230001	1					
ANR	5230105	IfStatement	if ( open_fds . find ( i ) != open_fds . end ( ) )		5230001	0					
ANR	5230106	Condition	open_fds . find ( i ) != open_fds . end ( )	286:6:7335:7368	5230001	0	True				
ANR	5230107	EqualityExpression	open_fds . find ( i ) != open_fds . end ( )		5230001	0		!=			
ANR	5230108	CallExpression	open_fds . find ( i )		5230001	0					
ANR	5230109	Callee	open_fds . find		5230001	0					
ANR	5230110	MemberAccess	open_fds . find		5230001	0					
ANR	5230111	Identifier	open_fds		5230001	0					
ANR	5230112	Identifier	find		5230001	1					
ANR	5230113	ArgumentList	i		5230001	1					
ANR	5230114	Argument	i		5230001	0					
ANR	5230115	Identifier	i		5230001	0					
ANR	5230116	CallExpression	open_fds . end ( )		5230001	1					
ANR	5230117	Callee	open_fds . end		5230001	0					
ANR	5230118	MemberAccess	open_fds . end		5230001	0					
ANR	5230119	Identifier	open_fds		5230001	0					
ANR	5230120	Identifier	end		5230001	1					
ANR	5230121	ArgumentList			5230001	1					
ANR	5230122	CompoundStatement		27:42:618:618	5230001	1					
ANR	5230123	ExpressionStatement	is_log = true	287:4:7377:7390	5230001	0	True				
ANR	5230124	AssignmentExpression	is_log = true		5230001	0		=			
ANR	5230125	Identifier	is_log		5230001	0					
ANR	5230126	Identifier	true		5230001	1					
ANR	5230127	IfStatement	if ( ! is_log && ! needed_fd ( i ) )		5230001	2					
ANR	5230128	Condition	! is_log && ! needed_fd ( i )	291:5:7407:7430	5230001	0	True				
ANR	5230129	AndExpression	! is_log && ! needed_fd ( i )		5230001	0		&&			
ANR	5230130	UnaryOperationExpression	! is_log		5230001	0					
ANR	5230131	UnaryOperator	!		5230001	0					
ANR	5230132	Identifier	is_log		5230001	1					
ANR	5230133	UnaryOperationExpression	! needed_fd ( i )		5230001	1					
ANR	5230134	UnaryOperator	!		5230001	0					
ANR	5230135	CallExpression	needed_fd ( i )		5230001	1					
ANR	5230136	Callee	needed_fd		5230001	0					
ANR	5230137	Identifier	needed_fd		5230001	0					
ANR	5230138	ArgumentList	i		5230001	1					
ANR	5230139	Argument	i		5230001	0					
ANR	5230140	Identifier	i		5230001	0					
ANR	5230141	CompoundStatement		32:31:680:680	5230001	1					
ANR	5230142	ExpressionStatement	( void ) close ( i )	292:3:7438:7455	5230001	0	True				
ANR	5230143	CastExpression	( void ) close ( i )		5230001	0					
ANR	5230144	CastTarget	void		5230001	0					
ANR	5230145	CallExpression	close ( i )		5230001	1					
ANR	5230146	Callee	close		5230001	0					
ANR	5230147	Identifier	close		5230001	0					
ANR	5230148	ArgumentList	i		5230001	1					
ANR	5230149	Argument	i		5230001	0					
ANR	5230150	Identifier	i		5230001	0					
ANR	5230151	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Done closing file descriptors\\n"" )"	296:1:7466:7523	5230001	8	True				
ANR	5230152	CallExpression	"dprintf ( D_FULLDEBUG , ""Done closing file descriptors\\n"" )"		5230001	0					
ANR	5230153	Callee	dprintf		5230001	0					
ANR	5230154	Identifier	dprintf		5230001	0					
ANR	5230155	ArgumentList	D_FULLDEBUG		5230001	1					
ANR	5230156	Argument	D_FULLDEBUG		5230001	0					
ANR	5230157	Identifier	D_FULLDEBUG		5230001	0					
ANR	5230158	Argument	"""Done closing file descriptors\\n"""		5230001	1					
ANR	5230159	PrimaryExpression	"""Done closing file descriptors\\n"""		5230001	0					
ANR	5230160	ReturnType	void		5230001	1					
ANR	5230161	Identifier	close_unused_file_descriptors		5230001	2					
ANR	5230162	ParameterList			5230001	3					
ANR	5230163	CFGEntryNode	ENTRY		5230001		True				
ANR	5230164	CFGExitNode	EXIT		5230001		True				
ANR	5230165	Symbol	is_log		5230001						
ANR	5230166	Symbol	errno		5230001						
ANR	5230167	Symbol	open_fds . find		5230001						
ANR	5230168	Symbol	false		5230001						
ANR	5230169	Symbol	D_ALWAYS		5230001						
ANR	5230170	Symbol	i		5230001						
ANR	5230171	Symbol	_SC_OPEN_MAX		5230001						
ANR	5230172	Symbol	D_FULLDEBUG		5230001						
ANR	5230173	Symbol	open_fds		5230001						
ANR	5230174	Symbol	debug_open_fds		5230001						
ANR	5230175	Symbol	need_open		5230001						
ANR	5230176	Symbol	true		5230001						
ANR	5230177	Symbol	RSC_SOCK		5230001						
ANR	5230178	Symbol	open_fds . end		5230001						
ANR	5230179	Symbol	sysconf		5230001						
ANR	5230180	Symbol	needed_fd		5230001						
ANR	5230181	Symbol	open_max		5230001						
ANR	5230182	Function	init_params	303:0:7631:8345							
ANR	5230183	FunctionDef	init_params ()		5230182	0					
ANR	5230184	CompoundStatement		305:0:7650:8345	5230182	0					
ANR	5230185	IfStatement	"if ( ( Execute = param ( ""EXECUTE"" ) ) == NULL )"		5230182	0					
ANR	5230186	Condition	"( Execute = param ( ""EXECUTE"" ) ) == NULL"	306:5:7657:7690	5230182	0	True				
ANR	5230187	EqualityExpression	"( Execute = param ( ""EXECUTE"" ) ) == NULL"		5230182	0		==			
ANR	5230188	AssignmentExpression	"Execute = param ( ""EXECUTE"" )"		5230182	0		=			
ANR	5230189	Identifier	Execute		5230182	0					
ANR	5230190	CallExpression	"param ( ""EXECUTE"" )"		5230182	1					
ANR	5230191	Callee	param		5230182	0					
ANR	5230192	Identifier	param		5230182	0					
ANR	5230193	ArgumentList	"""EXECUTE"""		5230182	1					
ANR	5230194	Argument	"""EXECUTE"""		5230182	0					
ANR	5230195	PrimaryExpression	"""EXECUTE"""		5230182	0					
ANR	5230196	Identifier	NULL		5230182	1					
ANR	5230197	CompoundStatement		2:42:43:43	5230182	1					
ANR	5230198	ExpressionStatement	"EXCEPT ( ""Execute directory not specified in config file"" )"	307:2:7698:7756	5230182	0	True				
ANR	5230199	CallExpression	"EXCEPT ( ""Execute directory not specified in config file"" )"		5230182	0					
ANR	5230200	Callee	EXCEPT		5230182	0					
ANR	5230201	Identifier	EXCEPT		5230182	0					
ANR	5230202	ArgumentList	"""Execute directory not specified in config file"""		5230182	1					
ANR	5230203	Argument	"""Execute directory not specified in config file"""		5230182	0					
ANR	5230204	PrimaryExpression	"""Execute directory not specified in config file"""		5230182	0					
ANR	5230205	ExpressionStatement	"UidDomain = param ( ""UID_DOMAIN"" )"	311:1:7816:7849	5230182	1	True				
ANR	5230206	AssignmentExpression	"UidDomain = param ( ""UID_DOMAIN"" )"		5230182	0		=			
ANR	5230207	Identifier	UidDomain		5230182	0					
ANR	5230208	CallExpression	"param ( ""UID_DOMAIN"" )"		5230182	1					
ANR	5230209	Callee	param		5230182	0					
ANR	5230210	Identifier	param		5230182	0					
ANR	5230211	ArgumentList	"""UID_DOMAIN"""		5230182	1					
ANR	5230212	Argument	"""UID_DOMAIN"""		5230182	0					
ANR	5230213	PrimaryExpression	"""UID_DOMAIN"""		5230182	0					
ANR	5230214	IfStatement	if ( UidDomain == NULL || UidDomain [ 0 ] == '\\0' )		5230182	2					
ANR	5230215	Condition	UidDomain == NULL || UidDomain [ 0 ] == '\\0'	314:5:7906:7946	5230182	0	True				
ANR	5230216	OrExpression	UidDomain == NULL || UidDomain [ 0 ] == '\\0'		5230182	0		||			
ANR	5230217	EqualityExpression	UidDomain == NULL		5230182	0		==			
ANR	5230218	Identifier	UidDomain		5230182	0					
ANR	5230219	Identifier	NULL		5230182	1					
ANR	5230220	EqualityExpression	UidDomain [ 0 ] == '\\0'		5230182	1		==			
ANR	5230221	ArrayIndexing	UidDomain [ 0 ]		5230182	0					
ANR	5230222	Identifier	UidDomain		5230182	0					
ANR	5230223	PrimaryExpression	0		5230182	1					
ANR	5230224	PrimaryExpression	'\\0'		5230182	1					
ANR	5230225	CompoundStatement		10:49:299:299	5230182	1					
ANR	5230226	ExpressionStatement	"UidDomain = ""Unknown"""	315:2:7954:7975	5230182	0	True				
ANR	5230227	AssignmentExpression	"UidDomain = ""Unknown"""		5230182	0		=			
ANR	5230228	Identifier	UidDomain		5230182	0					
ANR	5230229	PrimaryExpression	"""Unknown"""		5230182	1					
ANR	5230230	IfStatement	if ( UidDomain [ 0 ] == '*' )		5230182	3					
ANR	5230231	Condition	UidDomain [ 0 ] == '*'	319:5:8047:8065	5230182	0	True				
ANR	5230232	EqualityExpression	UidDomain [ 0 ] == '*'		5230182	0		==			
ANR	5230233	ArrayIndexing	UidDomain [ 0 ]		5230182	0					
ANR	5230234	Identifier	UidDomain		5230182	0					
ANR	5230235	PrimaryExpression	0		5230182	1					
ANR	5230236	PrimaryExpression	'*'		5230182	1					
ANR	5230237	CompoundStatement		15:27:418:418	5230182	1					
ANR	5230238	ExpressionStatement	UidDomain [ 0 ] = '\\0'	320:2:8073:8092	5230182	0	True				
ANR	5230239	AssignmentExpression	UidDomain [ 0 ] = '\\0'		5230182	0		=			
ANR	5230240	ArrayIndexing	UidDomain [ 0 ]		5230182	0					
ANR	5230241	Identifier	UidDomain		5230182	0					
ANR	5230242	PrimaryExpression	0		5230182	1					
ANR	5230243	PrimaryExpression	'\\0'		5230182	1					
ANR	5230244	ExpressionStatement	"TrustUidDomain = param_boolean_crufty ( ""TRUST_UID_DOMAIN"" , false )"	323:1:8099:8163	5230182	4	True				
ANR	5230245	AssignmentExpression	"TrustUidDomain = param_boolean_crufty ( ""TRUST_UID_DOMAIN"" , false )"		5230182	0		=			
ANR	5230246	Identifier	TrustUidDomain		5230182	0					
ANR	5230247	CallExpression	"param_boolean_crufty ( ""TRUST_UID_DOMAIN"" , false )"		5230182	1					
ANR	5230248	Callee	param_boolean_crufty		5230182	0					
ANR	5230249	Identifier	param_boolean_crufty		5230182	0					
ANR	5230250	ArgumentList	"""TRUST_UID_DOMAIN"""		5230182	1					
ANR	5230251	Argument	"""TRUST_UID_DOMAIN"""		5230182	0					
ANR	5230252	PrimaryExpression	"""TRUST_UID_DOMAIN"""		5230182	0					
ANR	5230253	Argument	false		5230182	1					
ANR	5230254	Identifier	false		5230182	0					
ANR	5230255	ExpressionStatement	"ExecTransferAttempts = param_integer ( ""EXEC_TRANSFER_ATTEMPTS"" , 3 , 1 )"	327:1:8273:8343	5230182	5	True				
ANR	5230256	AssignmentExpression	"ExecTransferAttempts = param_integer ( ""EXEC_TRANSFER_ATTEMPTS"" , 3 , 1 )"		5230182	0		=			
ANR	5230257	Identifier	ExecTransferAttempts		5230182	0					
ANR	5230258	CallExpression	"param_integer ( ""EXEC_TRANSFER_ATTEMPTS"" , 3 , 1 )"		5230182	1					
ANR	5230259	Callee	param_integer		5230182	0					
ANR	5230260	Identifier	param_integer		5230182	0					
ANR	5230261	ArgumentList	"""EXEC_TRANSFER_ATTEMPTS"""		5230182	1					
ANR	5230262	Argument	"""EXEC_TRANSFER_ATTEMPTS"""		5230182	0					
ANR	5230263	PrimaryExpression	"""EXEC_TRANSFER_ATTEMPTS"""		5230182	0					
ANR	5230264	Argument	3		5230182	1					
ANR	5230265	PrimaryExpression	3		5230182	0					
ANR	5230266	Argument	1		5230182	2					
ANR	5230267	PrimaryExpression	1		5230182	0					
ANR	5230268	ReturnType	void		5230182	1					
ANR	5230269	Identifier	init_params		5230182	2					
ANR	5230270	ParameterList			5230182	3					
ANR	5230271	CFGEntryNode	ENTRY		5230182		True				
ANR	5230272	CFGExitNode	EXIT		5230182		True				
ANR	5230273	Symbol	* UidDomain		5230182						
ANR	5230274	Symbol	NULL		5230182						
ANR	5230275	Symbol	TrustUidDomain		5230182						
ANR	5230276	Symbol	Execute		5230182						
ANR	5230277	Symbol	param		5230182						
ANR	5230278	Symbol	ExecTransferAttempts		5230182						
ANR	5230279	Symbol	UidDomain		5230182						
ANR	5230280	Symbol	false		5230182						
ANR	5230281	Symbol	param_boolean_crufty		5230182						
ANR	5230282	Symbol	param_integer		5230182						
ANR	5230283	Function	get_proc	335:0:8554:8768							
ANR	5230284	FunctionDef	get_proc ()		5230283	0					
ANR	5230285	CompoundStatement		337:0:8569:8768	5230283	0					
ANR	5230286	IdentifierDeclStatement	UserProc * new_process ;	338:1:8572:8593	5230283	0	True				
ANR	5230287	IdentifierDecl	* new_process		5230283	0					
ANR	5230288	IdentifierDeclType	UserProc *		5230283	0					
ANR	5230289	Identifier	new_process		5230283	1					
ANR	5230290	ExpressionStatement	"dprintf ( D_ALWAYS , ""Entering get_proc()\\n"" )"	340:1:8597:8641	5230283	1	True				
ANR	5230291	CallExpression	"dprintf ( D_ALWAYS , ""Entering get_proc()\\n"" )"		5230283	0					
ANR	5230292	Callee	dprintf		5230283	0					
ANR	5230293	Identifier	dprintf		5230283	0					
ANR	5230294	ArgumentList	D_ALWAYS		5230283	1					
ANR	5230295	Argument	D_ALWAYS		5230283	0					
ANR	5230296	Identifier	D_ALWAYS		5230283	0					
ANR	5230297	Argument	"""Entering get_proc()\\n"""		5230283	1					
ANR	5230298	PrimaryExpression	"""Entering get_proc()\\n"""		5230283	0					
ANR	5230299	IfStatement	if ( ( new_process = get_job_info ( ) ) )		5230283	2					
ANR	5230300	Condition	new_process = get_job_info ( )	342:5:8649:8676	5230283	0	True				
ANR	5230301	AssignmentExpression	new_process = get_job_info ( )		5230283	0		=			
ANR	5230302	Identifier	new_process		5230283	0					
ANR	5230303	CallExpression	get_job_info ( )		5230283	1					
ANR	5230304	Callee	get_job_info		5230283	0					
ANR	5230305	Identifier	get_job_info		5230283	0					
ANR	5230306	ArgumentList			5230283	1					
ANR	5230307	CompoundStatement		6:36:110:110	5230283	1					
ANR	5230308	ExpressionStatement	UProcList . Append ( new_process )	343:2:8684:8715	5230283	0	True				
ANR	5230309	CallExpression	UProcList . Append ( new_process )		5230283	0					
ANR	5230310	Callee	UProcList . Append		5230283	0					
ANR	5230311	MemberAccess	UProcList . Append		5230283	0					
ANR	5230312	Identifier	UProcList		5230283	0					
ANR	5230313	Identifier	Append		5230283	1					
ANR	5230314	ArgumentList	new_process		5230283	1					
ANR	5230315	Argument	new_process		5230283	0					
ANR	5230316	Identifier	new_process		5230283	0					
ANR	5230317	ReturnStatement	return SUCCESS ;	344:2:8719:8733	5230283	1	True				
ANR	5230318	Identifier	SUCCESS		5230283	0					
ANR	5230319	ElseStatement	else		5230283	0					
ANR	5230320	CompoundStatement		9:8:173:173	5230283	0					
ANR	5230321	ReturnStatement	return TRY_LATER ;	346:2:8747:8763	5230283	0	True				
ANR	5230322	Identifier	TRY_LATER		5230283	0					
ANR	5230323	ReturnType	int		5230283	1					
ANR	5230324	Identifier	get_proc		5230283	2					
ANR	5230325	ParameterList			5230283	3					
ANR	5230326	CFGEntryNode	ENTRY		5230283		True				
ANR	5230327	CFGExitNode	EXIT		5230283		True				
ANR	5230328	Symbol	TRY_LATER		5230283						
ANR	5230329	Symbol	SUCCESS		5230283						
ANR	5230330	Symbol	UProcList		5230283						
ANR	5230331	Symbol	D_ALWAYS		5230283						
ANR	5230332	Symbol	new_process		5230283						
ANR	5230333	Symbol	get_job_info		5230283						
ANR	5230334	Function	get_exec	354:0:8874:9082							
ANR	5230335	FunctionDef	get_exec ()		5230334	0					
ANR	5230336	CompoundStatement		356:0:8889:9082	5230334	0					
ANR	5230337	IdentifierDeclStatement	UserProc * new_process ;	357:1:8892:8913	5230334	0	True				
ANR	5230338	IdentifierDecl	* new_process		5230334	0					
ANR	5230339	IdentifierDeclType	UserProc *		5230334	0					
ANR	5230340	Identifier	new_process		5230334	1					
ANR	5230341	ExpressionStatement	"dprintf ( D_ALWAYS , ""Entering get_exec()\\n"" )"	359:1:8917:8961	5230334	1	True				
ANR	5230342	CallExpression	"dprintf ( D_ALWAYS , ""Entering get_exec()\\n"" )"		5230334	0					
ANR	5230343	Callee	dprintf		5230334	0					
ANR	5230344	Identifier	dprintf		5230334	0					
ANR	5230345	ArgumentList	D_ALWAYS		5230334	1					
ANR	5230346	Argument	D_ALWAYS		5230334	0					
ANR	5230347	Identifier	D_ALWAYS		5230334	0					
ANR	5230348	Argument	"""Entering get_exec()\\n"""		5230334	1					
ANR	5230349	PrimaryExpression	"""Entering get_exec()\\n"""		5230334	0					
ANR	5230350	ExpressionStatement	new_process = UProcList . Current ( )	362:1:8966:8999	5230334	2	True				
ANR	5230351	AssignmentExpression	new_process = UProcList . Current ( )		5230334	0		=			
ANR	5230352	Identifier	new_process		5230334	0					
ANR	5230353	CallExpression	UProcList . Current ( )		5230334	1					
ANR	5230354	Callee	UProcList . Current		5230334	0					
ANR	5230355	MemberAccess	UProcList . Current		5230334	0					
ANR	5230356	Identifier	UProcList		5230334	0					
ANR	5230357	Identifier	Current		5230334	1					
ANR	5230358	ArgumentList			5230334	1					
ANR	5230359	IfStatement	if ( new_process -> fetch_ckpt ( ) != TRUE )		5230334	3					
ANR	5230360	Condition	new_process -> fetch_ckpt ( ) != TRUE	363:5:9006:9038	5230334	0	True				
ANR	5230361	EqualityExpression	new_process -> fetch_ckpt ( ) != TRUE		5230334	0		!=			
ANR	5230362	CallExpression	new_process -> fetch_ckpt ( )		5230334	0					
ANR	5230363	Callee	new_process -> fetch_ckpt		5230334	0					
ANR	5230364	PtrMemberAccess	new_process -> fetch_ckpt		5230334	0					
ANR	5230365	Identifier	new_process		5230334	0					
ANR	5230366	Identifier	fetch_ckpt		5230334	1					
ANR	5230367	ArgumentList			5230334	1					
ANR	5230368	Identifier	TRUE		5230334	1					
ANR	5230369	CompoundStatement		8:41:152:152	5230334	1					
ANR	5230370	ReturnStatement	return FAILURE ;	364:2:9046:9060	5230334	0	True				
ANR	5230371	Identifier	FAILURE		5230334	0					
ANR	5230372	ReturnStatement	return SUCCESS ;	366:1:9066:9080	5230334	4	True				
ANR	5230373	Identifier	SUCCESS		5230334	0					
ANR	5230374	ReturnType	int		5230334	1					
ANR	5230375	Identifier	get_exec		5230334	2					
ANR	5230376	ParameterList			5230334	3					
ANR	5230377	CFGEntryNode	ENTRY		5230334		True				
ANR	5230378	CFGExitNode	EXIT		5230334		True				
ANR	5230379	Symbol	new_process -> fetch_ckpt		5230334						
ANR	5230380	Symbol	SUCCESS		5230334						
ANR	5230381	Symbol	* new_process		5230334						
ANR	5230382	Symbol	UProcList		5230334						
ANR	5230383	Symbol	D_ALWAYS		5230334						
ANR	5230384	Symbol	TRUE		5230334						
ANR	5230385	Symbol	new_process		5230334						
ANR	5230386	Symbol	FAILURE		5230334						
ANR	5230387	Symbol	UProcList . Current		5230334						
ANR	5230388	Function	req_vacate	375:0:9283:9445							
ANR	5230389	FunctionDef	req_vacate ()		5230388	0					
ANR	5230390	CompoundStatement		377:0:9300:9445	5230388	0					
ANR	5230391	ExpressionStatement	MyAlarm . cancel ( )	379:1:9304:9320	5230388	0	True				
ANR	5230392	CallExpression	MyAlarm . cancel ( )		5230388	0					
ANR	5230393	Callee	MyAlarm . cancel		5230388	0					
ANR	5230394	MemberAccess	MyAlarm . cancel		5230388	0					
ANR	5230395	Identifier	MyAlarm		5230388	0					
ANR	5230396	Identifier	cancel		5230388	1					
ANR	5230397	ArgumentList			5230388	1					
ANR	5230398	ExpressionStatement	req_ckpt_exit_all ( )	382:1:9411:9430	5230388	1	True				
ANR	5230399	CallExpression	req_ckpt_exit_all ( )		5230388	0					
ANR	5230400	Callee	req_ckpt_exit_all		5230388	0					
ANR	5230401	Identifier	req_ckpt_exit_all		5230388	0					
ANR	5230402	ArgumentList			5230388	1					
ANR	5230403	ReturnStatement	return ( 0 ) ;	384:1:9434:9443	5230388	2	True				
ANR	5230404	PrimaryExpression	0		5230388	0					
ANR	5230405	ReturnType	int		5230388	1					
ANR	5230406	Identifier	req_vacate		5230388	2					
ANR	5230407	ParameterList			5230388	3					
ANR	5230408	CFGEntryNode	ENTRY		5230388		True				
ANR	5230409	CFGExitNode	EXIT		5230388		True				
ANR	5230410	Symbol	MyAlarm		5230388						
ANR	5230411	Function	req_die	392:0:9647:9756							
ANR	5230412	FunctionDef	req_die ()		5230411	0					
ANR	5230413	CompoundStatement		394:0:9661:9756	5230411	0					
ANR	5230414	ExpressionStatement	MyAlarm . cancel ( )	395:1:9664:9680	5230411	0	True				
ANR	5230415	CallExpression	MyAlarm . cancel ( )		5230411	0					
ANR	5230416	Callee	MyAlarm . cancel		5230411	0					
ANR	5230417	MemberAccess	MyAlarm . cancel		5230411	0					
ANR	5230418	Identifier	MyAlarm		5230411	0					
ANR	5230419	Identifier	cancel		5230411	1					
ANR	5230420	ArgumentList			5230411	1					
ANR	5230421	ExpressionStatement	req_exit_all ( )	396:1:9727:9741	5230411	1	True				
ANR	5230422	CallExpression	req_exit_all ( )		5230411	0					
ANR	5230423	Callee	req_exit_all		5230411	0					
ANR	5230424	Identifier	req_exit_all		5230411	0					
ANR	5230425	ArgumentList			5230411	1					
ANR	5230426	ReturnStatement	return ( 0 ) ;	398:1:9745:9754	5230411	2	True				
ANR	5230427	PrimaryExpression	0		5230411	0					
ANR	5230428	ReturnType	int		5230411	1					
ANR	5230429	Identifier	req_die		5230411	2					
ANR	5230430	ParameterList			5230411	3					
ANR	5230431	CFGEntryNode	ENTRY		5230411		True				
ANR	5230432	CFGExitNode	EXIT		5230411		True				
ANR	5230433	Symbol	MyAlarm		5230411						
ANR	5230434	Function	req_ckpt_exit_all	406:0:9826:10280							
ANR	5230435	FunctionDef	req_ckpt_exit_all ()		5230434	0					
ANR	5230436	CompoundStatement		408:0:9851:10280	5230434	0					
ANR	5230437	IdentifierDeclStatement	UserProc * proc ;	409:1:9854:9868	5230434	0	True				
ANR	5230438	IdentifierDecl	* proc		5230434	0					
ANR	5230439	IdentifierDeclType	UserProc *		5230434	0					
ANR	5230440	Identifier	proc		5230434	1					
ANR	5230441	ExpressionStatement	UProcList . Rewind ( )	412:1:9925:9943	5230434	1	True				
ANR	5230442	CallExpression	UProcList . Rewind ( )		5230434	0					
ANR	5230443	Callee	UProcList . Rewind		5230434	0					
ANR	5230444	MemberAccess	UProcList . Rewind		5230434	0					
ANR	5230445	Identifier	UProcList		5230434	0					
ANR	5230446	Identifier	Rewind		5230434	1					
ANR	5230447	ArgumentList			5230434	1					
ANR	5230448	WhileStatement	while ( ( proc = UProcList . Next ( ) ) )		5230434	2					
ANR	5230449	Condition	proc = UProcList . Next ( )	413:8:9953:9977	5230434	0	True				
ANR	5230450	AssignmentExpression	proc = UProcList . Next ( )		5230434	0		=			
ANR	5230451	Identifier	proc		5230434	0					
ANR	5230452	CallExpression	UProcList . Next ( )		5230434	1					
ANR	5230453	Callee	UProcList . Next		5230434	0					
ANR	5230454	MemberAccess	UProcList . Next		5230434	0					
ANR	5230455	Identifier	UProcList		5230434	0					
ANR	5230456	Identifier	Next		5230434	1					
ANR	5230457	ArgumentList			5230434	1					
ANR	5230458	CompoundStatement		6:36:129:129	5230434	1					
ANR	5230459	ExpressionStatement	"dprintf ( D_ALWAYS , ""req_ckpt_exit_all: Proc %d in state %s\\n"" , proc -> get_id ( ) , ProcStates . get_name ( proc -> get_state ( ) ) )"	414:2:9985:10115	5230434	0	True				
ANR	5230460	CallExpression	"dprintf ( D_ALWAYS , ""req_ckpt_exit_all: Proc %d in state %s\\n"" , proc -> get_id ( ) , ProcStates . get_name ( proc -> get_state ( ) ) )"		5230434	0					
ANR	5230461	Callee	dprintf		5230434	0					
ANR	5230462	Identifier	dprintf		5230434	0					
ANR	5230463	ArgumentList	D_ALWAYS		5230434	1					
ANR	5230464	Argument	D_ALWAYS		5230434	0					
ANR	5230465	Identifier	D_ALWAYS		5230434	0					
ANR	5230466	Argument	"""req_ckpt_exit_all: Proc %d in state %s\\n"""		5230434	1					
ANR	5230467	PrimaryExpression	"""req_ckpt_exit_all: Proc %d in state %s\\n"""		5230434	0					
ANR	5230468	Argument	proc -> get_id ( )		5230434	2					
ANR	5230469	CallExpression	proc -> get_id ( )		5230434	0					
ANR	5230470	Callee	proc -> get_id		5230434	0					
ANR	5230471	PtrMemberAccess	proc -> get_id		5230434	0					
ANR	5230472	Identifier	proc		5230434	0					
ANR	5230473	Identifier	get_id		5230434	1					
ANR	5230474	ArgumentList			5230434	1					
ANR	5230475	Argument	ProcStates . get_name ( proc -> get_state ( ) )		5230434	3					
ANR	5230476	CallExpression	ProcStates . get_name ( proc -> get_state ( ) )		5230434	0					
ANR	5230477	Callee	ProcStates . get_name		5230434	0					
ANR	5230478	MemberAccess	ProcStates . get_name		5230434	0					
ANR	5230479	Identifier	ProcStates		5230434	0					
ANR	5230480	Identifier	get_name		5230434	1					
ANR	5230481	ArgumentList	proc -> get_state ( )		5230434	1					
ANR	5230482	Argument	proc -> get_state ( )		5230434	0					
ANR	5230483	CallExpression	proc -> get_state ( )		5230434	0					
ANR	5230484	Callee	proc -> get_state		5230434	0					
ANR	5230485	PtrMemberAccess	proc -> get_state		5230434	0					
ANR	5230486	Identifier	proc		5230434	0					
ANR	5230487	Identifier	get_state		5230434	1					
ANR	5230488	ArgumentList			5230434	1					
ANR	5230489	IfStatement	if ( proc -> is_running ( ) || proc -> is_suspended ( ) )		5230434	1					
ANR	5230490	Condition	proc -> is_running ( ) || proc -> is_suspended ( )	417:6:10123:10164	5230434	0	True				
ANR	5230491	OrExpression	proc -> is_running ( ) || proc -> is_suspended ( )		5230434	0		||			
ANR	5230492	CallExpression	proc -> is_running ( )		5230434	0					
ANR	5230493	Callee	proc -> is_running		5230434	0					
ANR	5230494	PtrMemberAccess	proc -> is_running		5230434	0					
ANR	5230495	Identifier	proc		5230434	0					
ANR	5230496	Identifier	is_running		5230434	1					
ANR	5230497	ArgumentList			5230434	1					
ANR	5230498	CallExpression	proc -> is_suspended ( )		5230434	1					
ANR	5230499	Callee	proc -> is_suspended		5230434	0					
ANR	5230500	PtrMemberAccess	proc -> is_suspended		5230434	0					
ANR	5230501	Identifier	proc		5230434	0					
ANR	5230502	Identifier	is_suspended		5230434	1					
ANR	5230503	ArgumentList			5230434	1					
ANR	5230504	CompoundStatement		10:51:316:316	5230434	1					
ANR	5230505	ExpressionStatement	"dprintf ( D_ALWAYS , ""Requesting Exit on proc #%d\\n"" , proc -> get_id ( ) )"	418:3:10173:10246	5230434	0	True				
ANR	5230506	CallExpression	"dprintf ( D_ALWAYS , ""Requesting Exit on proc #%d\\n"" , proc -> get_id ( ) )"		5230434	0					
ANR	5230507	Callee	dprintf		5230434	0					
ANR	5230508	Identifier	dprintf		5230434	0					
ANR	5230509	ArgumentList	D_ALWAYS		5230434	1					
ANR	5230510	Argument	D_ALWAYS		5230434	0					
ANR	5230511	Identifier	D_ALWAYS		5230434	0					
ANR	5230512	Argument	"""Requesting Exit on proc #%d\\n"""		5230434	1					
ANR	5230513	PrimaryExpression	"""Requesting Exit on proc #%d\\n"""		5230434	0					
ANR	5230514	Argument	proc -> get_id ( )		5230434	2					
ANR	5230515	CallExpression	proc -> get_id ( )		5230434	0					
ANR	5230516	Callee	proc -> get_id		5230434	0					
ANR	5230517	PtrMemberAccess	proc -> get_id		5230434	0					
ANR	5230518	Identifier	proc		5230434	0					
ANR	5230519	Identifier	get_id		5230434	1					
ANR	5230520	ArgumentList			5230434	1					
ANR	5230521	ExpressionStatement	proc -> request_exit ( )	420:3:10251:10271	5230434	1	True				
ANR	5230522	CallExpression	proc -> request_exit ( )		5230434	0					
ANR	5230523	Callee	proc -> request_exit		5230434	0					
ANR	5230524	PtrMemberAccess	proc -> request_exit		5230434	0					
ANR	5230525	Identifier	proc		5230434	0					
ANR	5230526	Identifier	request_exit		5230434	1					
ANR	5230527	ArgumentList			5230434	1					
ANR	5230528	ReturnType	void		5230434	1					
ANR	5230529	Identifier	req_ckpt_exit_all		5230434	2					
ANR	5230530	ParameterList			5230434	3					
ANR	5230531	CFGEntryNode	ENTRY		5230434		True				
ANR	5230532	CFGExitNode	EXIT		5230434		True				
ANR	5230533	Symbol	proc -> get_state		5230434						
ANR	5230534	Symbol	proc		5230434						
ANR	5230535	Symbol	ProcStates		5230434						
ANR	5230536	Symbol	UProcList . Next		5230434						
ANR	5230537	Symbol	ProcStates . get_name		5230434						
ANR	5230538	Symbol	proc -> is_running		5230434						
ANR	5230539	Symbol	UProcList		5230434						
ANR	5230540	Symbol	D_ALWAYS		5230434						
ANR	5230541	Symbol	proc -> is_suspended		5230434						
ANR	5230542	Symbol	proc -> get_id		5230434						
ANR	5230543	Symbol	* proc		5230434						
ANR	5230544	Function	req_exit_all	428:0:10331:10824							
ANR	5230545	FunctionDef	req_exit_all ()		5230544	0					
ANR	5230546	CompoundStatement		430:0:10351:10824	5230544	0					
ANR	5230547	IdentifierDeclStatement	UserProc * proc ;	431:1:10354:10368	5230544	0	True				
ANR	5230548	IdentifierDecl	* proc		5230544	0					
ANR	5230549	IdentifierDeclType	UserProc *		5230544	0					
ANR	5230550	Identifier	proc		5230544	1					
ANR	5230551	ExpressionStatement	UProcList . Rewind ( )	434:1:10411:10429	5230544	1	True				
ANR	5230552	CallExpression	UProcList . Rewind ( )		5230544	0					
ANR	5230553	Callee	UProcList . Rewind		5230544	0					
ANR	5230554	MemberAccess	UProcList . Rewind		5230544	0					
ANR	5230555	Identifier	UProcList		5230544	0					
ANR	5230556	Identifier	Rewind		5230544	1					
ANR	5230557	ArgumentList			5230544	1					
ANR	5230558	WhileStatement	while ( ( proc = UProcList . Next ( ) ) )		5230544	2					
ANR	5230559	Condition	proc = UProcList . Next ( )	435:8:10439:10463	5230544	0	True				
ANR	5230560	AssignmentExpression	proc = UProcList . Next ( )		5230544	0		=			
ANR	5230561	Identifier	proc		5230544	0					
ANR	5230562	CallExpression	UProcList . Next ( )		5230544	1					
ANR	5230563	Callee	UProcList . Next		5230544	0					
ANR	5230564	MemberAccess	UProcList . Next		5230544	0					
ANR	5230565	Identifier	UProcList		5230544	0					
ANR	5230566	Identifier	Next		5230544	1					
ANR	5230567	ArgumentList			5230544	1					
ANR	5230568	CompoundStatement		6:36:115:115	5230544	1					
ANR	5230569	IfStatement	if ( proc -> get_class ( ) != CONDOR_UNIVERSE_PVMD )		5230544	0					
ANR	5230570	Condition	proc -> get_class ( ) != CONDOR_UNIVERSE_PVMD	436:7:10476:10516	5230544	0	True				
ANR	5230571	EqualityExpression	proc -> get_class ( ) != CONDOR_UNIVERSE_PVMD		5230544	0		!=			
ANR	5230572	CallExpression	proc -> get_class ( )		5230544	0					
ANR	5230573	Callee	proc -> get_class		5230544	0					
ANR	5230574	PtrMemberAccess	proc -> get_class		5230544	0					
ANR	5230575	Identifier	proc		5230544	0					
ANR	5230576	Identifier	get_class		5230544	1					
ANR	5230577	ArgumentList			5230544	1					
ANR	5230578	Identifier	CONDOR_UNIVERSE_PVMD		5230544	1					
ANR	5230579	CompoundStatement		7:51:168:168	5230544	1					
ANR	5230580	ExpressionStatement	"dprintf ( D_ALWAYS , ""req_exit_all: Proc %d in state %s\\n"" , proc -> get_id ( ) , ProcStates . get_name ( proc -> get_state ( ) ) )"	437:3:10525:10650	5230544	0	True				
ANR	5230581	CallExpression	"dprintf ( D_ALWAYS , ""req_exit_all: Proc %d in state %s\\n"" , proc -> get_id ( ) , ProcStates . get_name ( proc -> get_state ( ) ) )"		5230544	0					
ANR	5230582	Callee	dprintf		5230544	0					
ANR	5230583	Identifier	dprintf		5230544	0					
ANR	5230584	ArgumentList	D_ALWAYS		5230544	1					
ANR	5230585	Argument	D_ALWAYS		5230544	0					
ANR	5230586	Identifier	D_ALWAYS		5230544	0					
ANR	5230587	Argument	"""req_exit_all: Proc %d in state %s\\n"""		5230544	1					
ANR	5230588	PrimaryExpression	"""req_exit_all: Proc %d in state %s\\n"""		5230544	0					
ANR	5230589	Argument	proc -> get_id ( )		5230544	2					
ANR	5230590	CallExpression	proc -> get_id ( )		5230544	0					
ANR	5230591	Callee	proc -> get_id		5230544	0					
ANR	5230592	PtrMemberAccess	proc -> get_id		5230544	0					
ANR	5230593	Identifier	proc		5230544	0					
ANR	5230594	Identifier	get_id		5230544	1					
ANR	5230595	ArgumentList			5230544	1					
ANR	5230596	Argument	ProcStates . get_name ( proc -> get_state ( ) )		5230544	3					
ANR	5230597	CallExpression	ProcStates . get_name ( proc -> get_state ( ) )		5230544	0					
ANR	5230598	Callee	ProcStates . get_name		5230544	0					
ANR	5230599	MemberAccess	ProcStates . get_name		5230544	0					
ANR	5230600	Identifier	ProcStates		5230544	0					
ANR	5230601	Identifier	get_name		5230544	1					
ANR	5230602	ArgumentList	proc -> get_state ( )		5230544	1					
ANR	5230603	Argument	proc -> get_state ( )		5230544	0					
ANR	5230604	CallExpression	proc -> get_state ( )		5230544	0					
ANR	5230605	Callee	proc -> get_state		5230544	0					
ANR	5230606	PtrMemberAccess	proc -> get_state		5230544	0					
ANR	5230607	Identifier	proc		5230544	0					
ANR	5230608	Identifier	get_state		5230544	1					
ANR	5230609	ArgumentList			5230544	1					
ANR	5230610	IfStatement	if ( proc -> is_running ( ) || proc -> is_suspended ( ) )		5230544	1					
ANR	5230611	Condition	proc -> is_running ( ) || proc -> is_suspended ( )	440:7:10659:10700	5230544	0	True				
ANR	5230612	OrExpression	proc -> is_running ( ) || proc -> is_suspended ( )		5230544	0		||			
ANR	5230613	CallExpression	proc -> is_running ( )		5230544	0					
ANR	5230614	Callee	proc -> is_running		5230544	0					
ANR	5230615	PtrMemberAccess	proc -> is_running		5230544	0					
ANR	5230616	Identifier	proc		5230544	0					
ANR	5230617	Identifier	is_running		5230544	1					
ANR	5230618	ArgumentList			5230544	1					
ANR	5230619	CallExpression	proc -> is_suspended ( )		5230544	1					
ANR	5230620	Callee	proc -> is_suspended		5230544	0					
ANR	5230621	PtrMemberAccess	proc -> is_suspended		5230544	0					
ANR	5230622	Identifier	proc		5230544	0					
ANR	5230623	Identifier	is_suspended		5230544	1					
ANR	5230624	ArgumentList			5230544	1					
ANR	5230625	CompoundStatement		11:52:352:352	5230544	1					
ANR	5230626	ExpressionStatement	"dprintf ( D_ALWAYS , ""Requesting Exit on proc #%d\\n"" , proc -> get_id ( ) )"	441:4:10710:10783	5230544	0	True				
ANR	5230627	CallExpression	"dprintf ( D_ALWAYS , ""Requesting Exit on proc #%d\\n"" , proc -> get_id ( ) )"		5230544	0					
ANR	5230628	Callee	dprintf		5230544	0					
ANR	5230629	Identifier	dprintf		5230544	0					
ANR	5230630	ArgumentList	D_ALWAYS		5230544	1					
ANR	5230631	Argument	D_ALWAYS		5230544	0					
ANR	5230632	Identifier	D_ALWAYS		5230544	0					
ANR	5230633	Argument	"""Requesting Exit on proc #%d\\n"""		5230544	1					
ANR	5230634	PrimaryExpression	"""Requesting Exit on proc #%d\\n"""		5230544	0					
ANR	5230635	Argument	proc -> get_id ( )		5230544	2					
ANR	5230636	CallExpression	proc -> get_id ( )		5230544	0					
ANR	5230637	Callee	proc -> get_id		5230544	0					
ANR	5230638	PtrMemberAccess	proc -> get_id		5230544	0					
ANR	5230639	Identifier	proc		5230544	0					
ANR	5230640	Identifier	get_id		5230544	1					
ANR	5230641	ArgumentList			5230544	1					
ANR	5230642	ExpressionStatement	proc -> kill_forcibly ( )	443:4:10789:10810	5230544	1	True				
ANR	5230643	CallExpression	proc -> kill_forcibly ( )		5230544	0					
ANR	5230644	Callee	proc -> kill_forcibly		5230544	0					
ANR	5230645	PtrMemberAccess	proc -> kill_forcibly		5230544	0					
ANR	5230646	Identifier	proc		5230544	0					
ANR	5230647	Identifier	kill_forcibly		5230544	1					
ANR	5230648	ArgumentList			5230544	1					
ANR	5230649	ReturnType	void		5230544	1					
ANR	5230650	Identifier	req_exit_all		5230544	2					
ANR	5230651	ParameterList			5230544	3					
ANR	5230652	CFGEntryNode	ENTRY		5230544		True				
ANR	5230653	CFGExitNode	EXIT		5230544		True				
ANR	5230654	Symbol	proc		5230544						
ANR	5230655	Symbol	UProcList . Next		5230544						
ANR	5230656	Symbol	proc -> get_class		5230544						
ANR	5230657	Symbol	proc -> is_running		5230544						
ANR	5230658	Symbol	CONDOR_UNIVERSE_PVMD		5230544						
ANR	5230659	Symbol	D_ALWAYS		5230544						
ANR	5230660	Symbol	proc -> get_id		5230544						
ANR	5230661	Symbol	* proc		5230544						
ANR	5230662	Symbol	proc -> get_state		5230544						
ANR	5230663	Symbol	ProcStates		5230544						
ANR	5230664	Symbol	ProcStates . get_name		5230544						
ANR	5230665	Symbol	UProcList		5230544						
ANR	5230666	Symbol	proc -> is_suspended		5230544						
ANR	5230667	Function	terminate_all	452:0:10872:11359							
ANR	5230668	FunctionDef	terminate_all ()		5230667	0					
ANR	5230669	CompoundStatement		454:0:10892:11359	5230667	0					
ANR	5230670	IdentifierDeclStatement	UserProc * proc ;	455:1:10895:10909	5230667	0	True				
ANR	5230671	IdentifierDecl	* proc		5230667	0					
ANR	5230672	IdentifierDeclType	UserProc *		5230667	0					
ANR	5230673	Identifier	proc		5230667	1					
ANR	5230674	ExpressionStatement	UProcList . Rewind ( )	459:1:10978:10996	5230667	1	True				
ANR	5230675	CallExpression	UProcList . Rewind ( )		5230667	0					
ANR	5230676	Callee	UProcList . Rewind		5230667	0					
ANR	5230677	MemberAccess	UProcList . Rewind		5230667	0					
ANR	5230678	Identifier	UProcList		5230667	0					
ANR	5230679	Identifier	Rewind		5230667	1					
ANR	5230680	ArgumentList			5230667	1					
ANR	5230681	WhileStatement	while ( ( proc = UProcList . Next ( ) ) )		5230667	2					
ANR	5230682	Condition	proc = UProcList . Next ( )	460:8:11006:11030	5230667	0	True				
ANR	5230683	AssignmentExpression	proc = UProcList . Next ( )		5230667	0		=			
ANR	5230684	Identifier	proc		5230667	0					
ANR	5230685	CallExpression	UProcList . Next ( )		5230667	1					
ANR	5230686	Callee	UProcList . Next		5230667	0					
ANR	5230687	MemberAccess	UProcList . Next		5230667	0					
ANR	5230688	Identifier	UProcList		5230667	0					
ANR	5230689	Identifier	Next		5230667	1					
ANR	5230690	ArgumentList			5230667	1					
ANR	5230691	CompoundStatement		7:36:141:141	5230667	1					
ANR	5230692	IfStatement	if ( proc -> is_running ( ) || proc -> is_suspended ( ) )		5230667	0					
ANR	5230693	Condition	proc -> is_running ( ) || proc -> is_suspended ( )	461:6:11042:11083	5230667	0	True				
ANR	5230694	OrExpression	proc -> is_running ( ) || proc -> is_suspended ( )		5230667	0		||			
ANR	5230695	CallExpression	proc -> is_running ( )		5230667	0					
ANR	5230696	Callee	proc -> is_running		5230667	0					
ANR	5230697	PtrMemberAccess	proc -> is_running		5230667	0					
ANR	5230698	Identifier	proc		5230667	0					
ANR	5230699	Identifier	is_running		5230667	1					
ANR	5230700	ArgumentList			5230667	1					
ANR	5230701	CallExpression	proc -> is_suspended ( )		5230667	1					
ANR	5230702	Callee	proc -> is_suspended		5230667	0					
ANR	5230703	PtrMemberAccess	proc -> is_suspended		5230667	0					
ANR	5230704	Identifier	proc		5230667	0					
ANR	5230705	Identifier	is_suspended		5230667	1					
ANR	5230706	ArgumentList			5230667	1					
ANR	5230707	CompoundStatement		8:51:194:194	5230667	1					
ANR	5230708	ReturnStatement	return DO_WAIT ;	462:3:11092:11106	5230667	0	True				
ANR	5230709	Identifier	DO_WAIT		5230667	0					
ANR	5230710	IfStatement	if ( proc -> exited_abnormally ( ) )		5230667	1					
ANR	5230711	Condition	proc -> exited_abnormally ( )	467:6:11224:11248	5230667	0	True				
ANR	5230712	CallExpression	proc -> exited_abnormally ( )		5230667	0					
ANR	5230713	Callee	proc -> exited_abnormally		5230667	0					
ANR	5230714	PtrMemberAccess	proc -> exited_abnormally		5230667	0					
ANR	5230715	Identifier	proc		5230667	0					
ANR	5230716	Identifier	exited_abnormally		5230667	1					
ANR	5230717	ArgumentList			5230667	1					
ANR	5230718	CompoundStatement		14:34:359:359	5230667	1					
ANR	5230719	ExpressionStatement	proc -> store_core ( )	468:3:11257:11275	5230667	0	True				
ANR	5230720	CallExpression	proc -> store_core ( )		5230667	0					
ANR	5230721	Callee	proc -> store_core		5230667	0					
ANR	5230722	PtrMemberAccess	proc -> store_core		5230667	0					
ANR	5230723	Identifier	proc		5230667	0					
ANR	5230724	Identifier	store_core		5230667	1					
ANR	5230725	ArgumentList			5230667	1					
ANR	5230726	ReturnStatement	return DEFAULT ;	469:3:11280:11294	5230667	1	True				
ANR	5230727	Identifier	DEFAULT		5230667	0					
ANR	5230728	ExpressionStatement	MyAlarm . cancel ( )	474:1:11323:11339	5230667	3	True				
ANR	5230729	CallExpression	MyAlarm . cancel ( )		5230667	0					
ANR	5230730	Callee	MyAlarm . cancel		5230667	0					
ANR	5230731	MemberAccess	MyAlarm . cancel		5230667	0					
ANR	5230732	Identifier	MyAlarm		5230667	0					
ANR	5230733	Identifier	cancel		5230667	1					
ANR	5230734	ArgumentList			5230667	1					
ANR	5230735	ReturnStatement	return DEFAULT ;	476:1:11343:11357	5230667	4	True				
ANR	5230736	Identifier	DEFAULT		5230667	0					
ANR	5230737	ReturnType	int		5230667	1					
ANR	5230738	Identifier	terminate_all		5230667	2					
ANR	5230739	ParameterList			5230667	3					
ANR	5230740	CFGEntryNode	ENTRY		5230667		True				
ANR	5230741	CFGExitNode	EXIT		5230667		True				
ANR	5230742	Symbol	DO_WAIT		5230667						
ANR	5230743	Symbol	proc		5230667						
ANR	5230744	Symbol	UProcList . Next		5230667						
ANR	5230745	Symbol	proc -> is_running		5230667						
ANR	5230746	Symbol	MyAlarm		5230667						
ANR	5230747	Symbol	UProcList		5230667						
ANR	5230748	Symbol	proc -> exited_abnormally		5230667						
ANR	5230749	Symbol	proc -> is_suspended		5230667						
ANR	5230750	Symbol	DEFAULT		5230667						
ANR	5230751	Symbol	* proc		5230667						
ANR	5230752	Function	dispose_all	483:0:11446:11762							
ANR	5230753	FunctionDef	dispose_all ()		5230752	0					
ANR	5230754	CompoundStatement		485:0:11464:11762	5230752	0					
ANR	5230755	IdentifierDeclStatement	UserProc * proc ;	486:1:11467:11481	5230752	0	True				
ANR	5230756	IdentifierDecl	* proc		5230752	0					
ANR	5230757	IdentifierDeclType	UserProc *		5230752	0					
ANR	5230758	Identifier	proc		5230752	1					
ANR	5230759	ExpressionStatement	UProcList . Rewind ( )	490:1:11539:11557	5230752	1	True				
ANR	5230760	CallExpression	UProcList . Rewind ( )		5230752	0					
ANR	5230761	Callee	UProcList . Rewind		5230752	0					
ANR	5230762	MemberAccess	UProcList . Rewind		5230752	0					
ANR	5230763	Identifier	UProcList		5230752	0					
ANR	5230764	Identifier	Rewind		5230752	1					
ANR	5230765	ArgumentList			5230752	1					
ANR	5230766	WhileStatement	while ( ( proc = UProcList . Next ( ) ) )		5230752	2					
ANR	5230767	Condition	proc = UProcList . Next ( )	491:8:11567:11591	5230752	0	True				
ANR	5230768	AssignmentExpression	proc = UProcList . Next ( )		5230752	0		=			
ANR	5230769	Identifier	proc		5230752	0					
ANR	5230770	CallExpression	UProcList . Next ( )		5230752	1					
ANR	5230771	Callee	UProcList . Next		5230752	0					
ANR	5230772	MemberAccess	UProcList . Next		5230752	0					
ANR	5230773	Identifier	UProcList		5230752	0					
ANR	5230774	Identifier	Next		5230752	1					
ANR	5230775	ArgumentList			5230752	1					
ANR	5230776	CompoundStatement		7:36:130:130	5230752	1					
ANR	5230777	ExpressionStatement	send_final_status ( proc )	492:2:11599:11624	5230752	0	True				
ANR	5230778	CallExpression	send_final_status ( proc )		5230752	0					
ANR	5230779	Callee	send_final_status		5230752	0					
ANR	5230780	Identifier	send_final_status		5230752	0					
ANR	5230781	ArgumentList	proc		5230752	1					
ANR	5230782	Argument	proc		5230752	0					
ANR	5230783	Identifier	proc		5230752	0					
ANR	5230784	ExpressionStatement	proc -> delete_files ( )	493:2:11628:11648	5230752	1	True				
ANR	5230785	CallExpression	proc -> delete_files ( )		5230752	0					
ANR	5230786	Callee	proc -> delete_files		5230752	0					
ANR	5230787	PtrMemberAccess	proc -> delete_files		5230752	0					
ANR	5230788	Identifier	proc		5230752	0					
ANR	5230789	Identifier	delete_files		5230752	1					
ANR	5230790	ArgumentList			5230752	1					
ANR	5230791	ExpressionStatement	UProcList . DeleteCurrent ( )	494:2:11652:11677	5230752	2	True				
ANR	5230792	CallExpression	UProcList . DeleteCurrent ( )		5230752	0					
ANR	5230793	Callee	UProcList . DeleteCurrent		5230752	0					
ANR	5230794	MemberAccess	UProcList . DeleteCurrent		5230752	0					
ANR	5230795	Identifier	UProcList		5230752	0					
ANR	5230796	Identifier	DeleteCurrent		5230752	1					
ANR	5230797	ArgumentList			5230752	1					
ANR	5230798	Statement	delete	495:2:11681:11686	5230752	3	True				
ANR	5230799	ExpressionStatement	proc	495:9:11688:11692	5230752	4	True				
ANR	5230800	Identifier	proc		5230752	0					
ANR	5230801	ReturnStatement	return DEFAULT ;	498:1:11746:11760	5230752	3	True				
ANR	5230802	Identifier	DEFAULT		5230752	0					
ANR	5230803	ReturnType	int		5230752	1					
ANR	5230804	Identifier	dispose_all		5230752	2					
ANR	5230805	ParameterList			5230752	3					
ANR	5230806	CFGEntryNode	ENTRY		5230752		True				
ANR	5230807	CFGExitNode	EXIT		5230752		True				
ANR	5230808	Symbol	proc		5230752						
ANR	5230809	Symbol	UProcList . Next		5230752						
ANR	5230810	Symbol	UProcList		5230752						
ANR	5230811	Symbol	DEFAULT		5230752						
ANR	5230812	Function	send_final_status	506:0:11859:13234							
ANR	5230813	FunctionDef	send_final_status (UserProc * proc)		5230812	0					
ANR	5230814	CompoundStatement		508:0:11900:13234	5230812	0					
ANR	5230815	IdentifierDeclStatement	void * status ;	510:1:11924:11937	5230812	0	True				
ANR	5230816	IdentifierDecl	* status		5230812	0					
ANR	5230817	IdentifierDeclType	void *		5230812	0					
ANR	5230818	Identifier	status		5230812	1					
ANR	5230819	IdentifierDeclStatement	void * rusage ;	511:1:11940:11953	5230812	1	True				
ANR	5230820	IdentifierDecl	* rusage		5230812	0					
ANR	5230821	IdentifierDeclType	void *		5230812	0					
ANR	5230822	Identifier	rusage		5230812	1					
ANR	5230823	IdentifierDeclStatement	int id ;	512:1:11956:11964	5230812	2	True				
ANR	5230824	IdentifierDecl	id		5230812	0					
ANR	5230825	IdentifierDeclType	int		5230812	0					
ANR	5230826	Identifier	id		5230812	1					
ANR	5230827	IdentifierDeclStatement	int cluster_no = proc -> get_cluster ( ) ;	513:1:11967:12005	5230812	3	True				
ANR	5230828	IdentifierDecl	cluster_no = proc -> get_cluster ( )		5230812	0					
ANR	5230829	IdentifierDeclType	int		5230812	0					
ANR	5230830	Identifier	cluster_no		5230812	1					
ANR	5230831	AssignmentExpression	cluster_no = proc -> get_cluster ( )		5230812	2		=			
ANR	5230832	Identifier	cluster_no		5230812	0					
ANR	5230833	CallExpression	proc -> get_cluster ( )		5230812	1					
ANR	5230834	Callee	proc -> get_cluster		5230812	0					
ANR	5230835	PtrMemberAccess	proc -> get_cluster		5230812	0					
ANR	5230836	Identifier	proc		5230812	0					
ANR	5230837	Identifier	get_cluster		5230812	1					
ANR	5230838	ArgumentList			5230812	1					
ANR	5230839	IdentifierDeclStatement	int proc_no = proc -> get_proc ( ) ;	514:1:12008:12040	5230812	4	True				
ANR	5230840	IdentifierDecl	proc_no = proc -> get_proc ( )		5230812	0					
ANR	5230841	IdentifierDeclType	int		5230812	0					
ANR	5230842	Identifier	proc_no		5230812	1					
ANR	5230843	AssignmentExpression	proc_no = proc -> get_proc ( )		5230812	2		=			
ANR	5230844	Identifier	proc_no		5230812	0					
ANR	5230845	CallExpression	proc -> get_proc ( )		5230812	1					
ANR	5230846	Callee	proc -> get_proc		5230812	0					
ANR	5230847	PtrMemberAccess	proc -> get_proc		5230812	0					
ANR	5230848	Identifier	proc		5230812	0					
ANR	5230849	Identifier	get_proc		5230812	1					
ANR	5230850	ArgumentList			5230812	1					
ANR	5230851	ExpressionStatement	"dprintf ( D_ALWAYS , ""Sending final status for process %d.%d\\n"" , cluster_no , proc_no )"	517:1:12045:12132	5230812	5	True				
ANR	5230852	CallExpression	"dprintf ( D_ALWAYS , ""Sending final status for process %d.%d\\n"" , cluster_no , proc_no )"		5230812	0					
ANR	5230853	Callee	dprintf		5230812	0					
ANR	5230854	Identifier	dprintf		5230812	0					
ANR	5230855	ArgumentList	D_ALWAYS		5230812	1					
ANR	5230856	Argument	D_ALWAYS		5230812	0					
ANR	5230857	Identifier	D_ALWAYS		5230812	0					
ANR	5230858	Argument	"""Sending final status for process %d.%d\\n"""		5230812	1					
ANR	5230859	PrimaryExpression	"""Sending final status for process %d.%d\\n"""		5230812	0					
ANR	5230860	Argument	cluster_no		5230812	2					
ANR	5230861	Identifier	cluster_no		5230812	0					
ANR	5230862	Argument	proc_no		5230812	3					
ANR	5230863	Identifier	proc_no		5230812	0					
ANR	5230864	ExpressionStatement	image_size = proc -> get_image_size ( )	529:1:12534:12569	5230812	6	True				
ANR	5230865	AssignmentExpression	image_size = proc -> get_image_size ( )		5230812	0		=			
ANR	5230866	Identifier	image_size		5230812	0					
ANR	5230867	CallExpression	proc -> get_image_size ( )		5230812	1					
ANR	5230868	Callee	proc -> get_image_size		5230812	0					
ANR	5230869	PtrMemberAccess	proc -> get_image_size		5230812	0					
ANR	5230870	Identifier	proc		5230812	0					
ANR	5230871	Identifier	get_image_size		5230812	1					
ANR	5230872	ArgumentList			5230812	1					
ANR	5230873	IfStatement	if ( image_size > 0 )		5230812	7					
ANR	5230874	Condition	image_size > 0	530:6:12577:12590	5230812	0	True				
ANR	5230875	RelationalExpression	image_size > 0		5230812	0		>			
ANR	5230876	Identifier	image_size		5230812	0					
ANR	5230877	PrimaryExpression	0		5230812	1					
ANR	5230878	CompoundStatement		23:23:693:693	5230812	1					
ANR	5230879	ExpressionStatement	( void ) REMOTE_CONDOR_image_size ( image_size )	531:2:12598:12642	5230812	0	True				
ANR	5230880	CastExpression	( void ) REMOTE_CONDOR_image_size ( image_size )		5230812	0					
ANR	5230881	CastTarget	void		5230812	0					
ANR	5230882	CallExpression	REMOTE_CONDOR_image_size ( image_size )		5230812	1					
ANR	5230883	Callee	REMOTE_CONDOR_image_size		5230812	0					
ANR	5230884	Identifier	REMOTE_CONDOR_image_size		5230812	0					
ANR	5230885	ArgumentList	image_size		5230812	1					
ANR	5230886	Argument	image_size		5230812	0					
ANR	5230887	Identifier	image_size		5230812	0					
ANR	5230888	ExpressionStatement	status = proc -> bsd_exit_status ( )	536:1:12716:12748	5230812	8	True				
ANR	5230889	AssignmentExpression	status = proc -> bsd_exit_status ( )		5230812	0		=			
ANR	5230890	Identifier	status		5230812	0					
ANR	5230891	CallExpression	proc -> bsd_exit_status ( )		5230812	1					
ANR	5230892	Callee	proc -> bsd_exit_status		5230812	0					
ANR	5230893	PtrMemberAccess	proc -> bsd_exit_status		5230812	0					
ANR	5230894	Identifier	proc		5230812	0					
ANR	5230895	Identifier	bsd_exit_status		5230812	1					
ANR	5230896	ArgumentList			5230812	1					
ANR	5230897	IfStatement	if ( proc -> get_class ( ) == CONDOR_UNIVERSE_PVM )		5230812	9					
ANR	5230898	Condition	proc -> get_class ( ) == CONDOR_UNIVERSE_PVM	537:5:12755:12794	5230812	0	True				
ANR	5230899	EqualityExpression	proc -> get_class ( ) == CONDOR_UNIVERSE_PVM		5230812	0		==			
ANR	5230900	CallExpression	proc -> get_class ( )		5230812	0					
ANR	5230901	Callee	proc -> get_class		5230812	0					
ANR	5230902	PtrMemberAccess	proc -> get_class		5230812	0					
ANR	5230903	Identifier	proc		5230812	0					
ANR	5230904	Identifier	get_class		5230812	1					
ANR	5230905	ArgumentList			5230812	1					
ANR	5230906	Identifier	CONDOR_UNIVERSE_PVM		5230812	1					
ANR	5230907	CompoundStatement		30:48:897:897	5230812	1					
ANR	5230908	ExpressionStatement	rusage = proc -> accumulated_rusage ( )	538:2:12802:12837	5230812	0	True				
ANR	5230909	AssignmentExpression	rusage = proc -> accumulated_rusage ( )		5230812	0		=			
ANR	5230910	Identifier	rusage		5230812	0					
ANR	5230911	CallExpression	proc -> accumulated_rusage ( )		5230812	1					
ANR	5230912	Callee	proc -> accumulated_rusage		5230812	0					
ANR	5230913	PtrMemberAccess	proc -> accumulated_rusage		5230812	0					
ANR	5230914	Identifier	proc		5230812	0					
ANR	5230915	Identifier	accumulated_rusage		5230812	1					
ANR	5230916	ArgumentList			5230812	1					
ANR	5230917	ExpressionStatement	id = proc -> get_id ( )	539:2:12863:12882	5230812	1	True				
ANR	5230918	AssignmentExpression	id = proc -> get_id ( )		5230812	0		=			
ANR	5230919	Identifier	id		5230812	0					
ANR	5230920	CallExpression	proc -> get_id ( )		5230812	1					
ANR	5230921	Callee	proc -> get_id		5230812	0					
ANR	5230922	PtrMemberAccess	proc -> get_id		5230812	0					
ANR	5230923	Identifier	proc		5230812	0					
ANR	5230924	Identifier	get_id		5230812	1					
ANR	5230925	ArgumentList			5230812	1					
ANR	5230926	ExpressionStatement	"( void ) REMOTE_CONDOR_subproc_status ( ( int ) id , ( int * ) status , ( struct rusage * ) rusage )"	540:2:12886:12972	5230812	2	True				
ANR	5230927	CastExpression	"( void ) REMOTE_CONDOR_subproc_status ( ( int ) id , ( int * ) status , ( struct rusage * ) rusage )"		5230812	0					
ANR	5230928	CastTarget	void		5230812	0					
ANR	5230929	CallExpression	"REMOTE_CONDOR_subproc_status ( ( int ) id , ( int * ) status , ( struct rusage * ) rusage )"		5230812	1					
ANR	5230930	Callee	REMOTE_CONDOR_subproc_status		5230812	0					
ANR	5230931	Identifier	REMOTE_CONDOR_subproc_status		5230812	0					
ANR	5230932	ArgumentList	( int ) id		5230812	1					
ANR	5230933	Argument	( int ) id		5230812	0					
ANR	5230934	CastExpression	( int ) id		5230812	0					
ANR	5230935	CastTarget	int		5230812	0					
ANR	5230936	Identifier	id		5230812	1					
ANR	5230937	Argument	( int * ) status		5230812	1					
ANR	5230938	CastExpression	( int * ) status		5230812	0					
ANR	5230939	CastTarget	int *		5230812	0					
ANR	5230940	Identifier	status		5230812	1					
ANR	5230941	Argument	( struct rusage * ) rusage		5230812	2					
ANR	5230942	CastExpression	( struct rusage * ) rusage		5230812	0					
ANR	5230943	CastTarget	struct rusage *		5230812	0					
ANR	5230944	Identifier	rusage		5230812	1					
ANR	5230945	ElseStatement	else		5230812	0					
ANR	5230946	CompoundStatement		35:8:1081:1081	5230812	0					
ANR	5230947	ExpressionStatement	rusage = proc -> guaranteed_rusage ( )	543:2:12986:13020	5230812	0	True				
ANR	5230948	AssignmentExpression	rusage = proc -> guaranteed_rusage ( )		5230812	0		=			
ANR	5230949	Identifier	rusage		5230812	0					
ANR	5230950	CallExpression	proc -> guaranteed_rusage ( )		5230812	1					
ANR	5230951	Callee	proc -> guaranteed_rusage		5230812	0					
ANR	5230952	PtrMemberAccess	proc -> guaranteed_rusage		5230812	0					
ANR	5230953	Identifier	proc		5230812	0					
ANR	5230954	Identifier	guaranteed_rusage		5230812	1					
ANR	5230955	ArgumentList			5230812	1					
ANR	5230956	ExpressionStatement	"( void ) REMOTE_CONDOR_reallyexit ( ( int * ) status , ( struct rusage * ) rusage )"	544:2:13058:13127	5230812	1	True				
ANR	5230957	CastExpression	"( void ) REMOTE_CONDOR_reallyexit ( ( int * ) status , ( struct rusage * ) rusage )"		5230812	0					
ANR	5230958	CastTarget	void		5230812	0					
ANR	5230959	CallExpression	"REMOTE_CONDOR_reallyexit ( ( int * ) status , ( struct rusage * ) rusage )"		5230812	1					
ANR	5230960	Callee	REMOTE_CONDOR_reallyexit		5230812	0					
ANR	5230961	Identifier	REMOTE_CONDOR_reallyexit		5230812	0					
ANR	5230962	ArgumentList	( int * ) status		5230812	1					
ANR	5230963	Argument	( int * ) status		5230812	0					
ANR	5230964	CastExpression	( int * ) status		5230812	0					
ANR	5230965	CastTarget	int *		5230812	0					
ANR	5230966	Identifier	status		5230812	1					
ANR	5230967	Argument	( struct rusage * ) rusage		5230812	1					
ANR	5230968	CastExpression	( struct rusage * ) rusage		5230812	0					
ANR	5230969	CastTarget	struct rusage *		5230812	0					
ANR	5230970	Identifier	rusage		5230812	1					
ANR	5230971	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Done sending final status for process %d.%d\\n"" , cluster_no , proc_no )"	547:1:13134:13229	5230812	10	True				
ANR	5230972	CallExpression	"dprintf ( D_FULLDEBUG , ""Done sending final status for process %d.%d\\n"" , cluster_no , proc_no )"		5230812	0					
ANR	5230973	Callee	dprintf		5230812	0					
ANR	5230974	Identifier	dprintf		5230812	0					
ANR	5230975	ArgumentList	D_FULLDEBUG		5230812	1					
ANR	5230976	Argument	D_FULLDEBUG		5230812	0					
ANR	5230977	Identifier	D_FULLDEBUG		5230812	0					
ANR	5230978	Argument	"""Done sending final status for process %d.%d\\n"""		5230812	1					
ANR	5230979	PrimaryExpression	"""Done sending final status for process %d.%d\\n"""		5230812	0					
ANR	5230980	Argument	cluster_no		5230812	2					
ANR	5230981	Identifier	cluster_no		5230812	0					
ANR	5230982	Argument	proc_no		5230812	3					
ANR	5230983	Identifier	proc_no		5230812	0					
ANR	5230984	ReturnType	void		5230812	1					
ANR	5230985	Identifier	send_final_status		5230812	2					
ANR	5230986	ParameterList	UserProc * proc		5230812	3					
ANR	5230987	Parameter	UserProc * proc	507:19:11883:11896	5230812	0	True				
ANR	5230988	ParameterType	UserProc *		5230812	0					
ANR	5230989	Identifier	proc		5230812	1					
ANR	5230990	CFGEntryNode	ENTRY		5230812		True				
ANR	5230991	CFGExitNode	EXIT		5230812		True				
ANR	5230992	Symbol	proc -> get_image_size		5230812						
ANR	5230993	Symbol	rusage		5230812						
ANR	5230994	Symbol	proc		5230812						
ANR	5230995	Symbol	proc -> get_class		5230812						
ANR	5230996	Symbol	image_size		5230812						
ANR	5230997	Symbol	proc_no		5230812						
ANR	5230998	Symbol	CONDOR_UNIVERSE_PVM		5230812						
ANR	5230999	Symbol	D_ALWAYS		5230812						
ANR	5231000	Symbol	proc -> accumulated_rusage		5230812						
ANR	5231001	Symbol	D_FULLDEBUG		5230812						
ANR	5231002	Symbol	proc -> get_id		5230812						
ANR	5231003	Symbol	* proc		5230812						
ANR	5231004	Symbol	proc -> get_proc		5230812						
ANR	5231005	Symbol	proc -> bsd_exit_status		5230812						
ANR	5231006	Symbol	cluster_no		5230812						
ANR	5231007	Symbol	proc -> get_cluster		5230812						
ANR	5231008	Symbol	id		5230812						
ANR	5231009	Symbol	proc -> guaranteed_rusage		5230812						
ANR	5231010	Symbol	status		5230812						
ANR	5231011	Function	reaper	557:0:13352:14162							
ANR	5231012	FunctionDef	reaper ()		5231011	0					
ANR	5231013	CompoundStatement		559:0:13365:14162	5231011	0					
ANR	5231014	IdentifierDeclStatement	int st ;	560:1:13368:13376	5231011	0	True				
ANR	5231015	IdentifierDecl	st		5231011	0					
ANR	5231016	IdentifierDeclType	int		5231011	0					
ANR	5231017	Identifier	st		5231011	1					
ANR	5231018	IdentifierDeclStatement	pid_t pid ;	561:1:13379:13389	5231011	1	True				
ANR	5231019	IdentifierDecl	pid		5231011	0					
ANR	5231020	IdentifierDeclType	pid_t		5231011	0					
ANR	5231021	Identifier	pid		5231011	1					
ANR	5231022	IdentifierDeclStatement	UserProc * proc ;	562:1:13392:13406	5231011	2	True				
ANR	5231023	IdentifierDecl	* proc		5231011	0					
ANR	5231024	IdentifierDeclType	UserProc *		5231011	0					
ANR	5231025	Identifier	proc		5231011	1					
ANR	5231026	IdentifierDeclStatement	int continue_fsa = - 2 ;	563:1:13409:13430	5231011	3	True				
ANR	5231027	IdentifierDecl	continue_fsa = - 2		5231011	0					
ANR	5231028	IdentifierDeclType	int		5231011	0					
ANR	5231029	Identifier	continue_fsa		5231011	1					
ANR	5231030	AssignmentExpression	continue_fsa = - 2		5231011	2		=			
ANR	5231031	Identifier	continue_fsa		5231011	0					
ANR	5231032	UnaryOperationExpression	- 2		5231011	1					
ANR	5231033	UnaryOperator	-		5231011	0					
ANR	5231034	PrimaryExpression	2		5231011	1					
ANR	5231035	ExpressionStatement	MyAlarm . cancel ( )	565:1:13434:13450	5231011	4	True				
ANR	5231036	CallExpression	MyAlarm . cancel ( )		5231011	0					
ANR	5231037	Callee	MyAlarm . cancel		5231011	0					
ANR	5231038	MemberAccess	MyAlarm . cancel		5231011	0					
ANR	5231039	Identifier	MyAlarm		5231011	0					
ANR	5231040	Identifier	cancel		5231011	1					
ANR	5231041	ArgumentList			5231011	1					
ANR	5231042	ForStatement	for ( ; ; )		5231011	5					
ANR	5231043	CompoundStatement		9:10:141:141	5231011	0					
ANR	5231044	ExpressionStatement	"pid = waitpid ( ANY_PID , & st , WNOHANG )"	569:1:13511:13545	5231011	0	True				
ANR	5231045	AssignmentExpression	"pid = waitpid ( ANY_PID , & st , WNOHANG )"		5231011	0		=			
ANR	5231046	Identifier	pid		5231011	0					
ANR	5231047	CallExpression	"waitpid ( ANY_PID , & st , WNOHANG )"		5231011	1					
ANR	5231048	Callee	waitpid		5231011	0					
ANR	5231049	Identifier	waitpid		5231011	0					
ANR	5231050	ArgumentList	ANY_PID		5231011	1					
ANR	5231051	Argument	ANY_PID		5231011	0					
ANR	5231052	Identifier	ANY_PID		5231011	0					
ANR	5231053	Argument	& st		5231011	1					
ANR	5231054	UnaryOperationExpression	& st		5231011	0					
ANR	5231055	UnaryOperator	&		5231011	0					
ANR	5231056	Identifier	st		5231011	1					
ANR	5231057	Argument	WNOHANG		5231011	2					
ANR	5231058	Identifier	WNOHANG		5231011	0					
ANR	5231059	IfStatement	if ( pid == - 1 )		5231011	1					
ANR	5231060	Condition	pid == - 1	571:5:13553:13561	5231011	0	True				
ANR	5231061	EqualityExpression	pid == - 1		5231011	0		==			
ANR	5231062	Identifier	pid		5231011	0					
ANR	5231063	UnaryOperationExpression	- 1		5231011	1					
ANR	5231064	UnaryOperator	-		5231011	0					
ANR	5231065	PrimaryExpression	1		5231011	1					
ANR	5231066	CompoundStatement		13:17:199:199	5231011	1					
ANR	5231067	IfStatement	if ( errno == EINTR )		5231011	0					
ANR	5231068	Condition	errno == EINTR	572:7:13574:13587	5231011	0	True				
ANR	5231069	EqualityExpression	errno == EINTR		5231011	0		==			
ANR	5231070	Identifier	errno		5231011	0					
ANR	5231071	Identifier	EINTR		5231011	1					
ANR	5231072	CompoundStatement		14:24:225:225	5231011	1					
ANR	5231073	ContinueStatement	continue ;	573:3:13596:13604	5231011	0	True				
ANR	5231074	ElseStatement	else		5231011	0					
ANR	5231075	CompoundStatement		16:9:249:249	5231011	0					
ANR	5231076	BreakStatement	break ;	575:3:13620:13625	5231011	0	True				
ANR	5231077	IfStatement	if ( pid == 0 )		5231011	2					
ANR	5231078	Condition	pid == 0	579:5:13640:13647	5231011	0	True				
ANR	5231079	EqualityExpression	pid == 0		5231011	0		==			
ANR	5231080	Identifier	pid		5231011	0					
ANR	5231081	PrimaryExpression	0		5231011	1					
ANR	5231082	CompoundStatement		21:16:285:285	5231011	1					
ANR	5231083	BreakStatement	break ;	580:2:13655:13660	5231011	0	True				
ANR	5231084	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Process %d exited, searching process list...\\n"" , pid )"	584:1:13712:13793	5231011	3	True				
ANR	5231085	CallExpression	"dprintf ( D_FULLDEBUG , ""Process %d exited, searching process list...\\n"" , pid )"		5231011	0					
ANR	5231086	Callee	dprintf		5231011	0					
ANR	5231087	Identifier	dprintf		5231011	0					
ANR	5231088	ArgumentList	D_FULLDEBUG		5231011	1					
ANR	5231089	Argument	D_FULLDEBUG		5231011	0					
ANR	5231090	Identifier	D_FULLDEBUG		5231011	0					
ANR	5231091	Argument	"""Process %d exited, searching process list...\\n"""		5231011	1					
ANR	5231092	PrimaryExpression	"""Process %d exited, searching process list...\\n"""		5231011	0					
ANR	5231093	Argument	pid		5231011	2					
ANR	5231094	Identifier	pid		5231011	0					
ANR	5231095	ExpressionStatement	UProcList . Rewind ( )	588:1:13797:13815	5231011	4	True				
ANR	5231096	CallExpression	UProcList . Rewind ( )		5231011	0					
ANR	5231097	Callee	UProcList . Rewind		5231011	0					
ANR	5231098	MemberAccess	UProcList . Rewind		5231011	0					
ANR	5231099	Identifier	UProcList		5231011	0					
ANR	5231100	Identifier	Rewind		5231011	1					
ANR	5231101	ArgumentList			5231011	1					
ANR	5231102	WhileStatement	while ( ( proc = UProcList . Next ( ) ) )		5231011	5					
ANR	5231103	Condition	proc = UProcList . Next ( )	589:8:13825:13849	5231011	0	True				
ANR	5231104	AssignmentExpression	proc = UProcList . Next ( )		5231011	0		=			
ANR	5231105	Identifier	proc		5231011	0					
ANR	5231106	CallExpression	UProcList . Next ( )		5231011	1					
ANR	5231107	Callee	UProcList . Next		5231011	0					
ANR	5231108	MemberAccess	UProcList . Next		5231011	0					
ANR	5231109	Identifier	UProcList		5231011	0					
ANR	5231110	Identifier	Next		5231011	1					
ANR	5231111	ArgumentList			5231011	1					
ANR	5231112	CompoundStatement		31:36:487:487	5231011	1					
ANR	5231113	IfStatement	if ( proc -> get_pid ( ) == pid )		5231011	0					
ANR	5231114	Condition	proc -> get_pid ( ) == pid	590:6:13861:13882	5231011	0	True				
ANR	5231115	EqualityExpression	proc -> get_pid ( ) == pid		5231011	0		==			
ANR	5231116	CallExpression	proc -> get_pid ( )		5231011	0					
ANR	5231117	Callee	proc -> get_pid		5231011	0					
ANR	5231118	PtrMemberAccess	proc -> get_pid		5231011	0					
ANR	5231119	Identifier	proc		5231011	0					
ANR	5231120	Identifier	get_pid		5231011	1					
ANR	5231121	ArgumentList			5231011	1					
ANR	5231122	Identifier	pid		5231011	1					
ANR	5231123	CompoundStatement		32:31:520:520	5231011	1					
ANR	5231124	BreakStatement	break ;	591:3:13891:13896	5231011	0	True				
ANR	5231125	IfStatement	if ( proc != NULL )		5231011	6					
ANR	5231126	Condition	proc != NULL	596:5:13964:13975	5231011	0	True				
ANR	5231127	EqualityExpression	proc != NULL		5231011	0		!=			
ANR	5231128	Identifier	proc		5231011	0					
ANR	5231129	Identifier	NULL		5231011	1					
ANR	5231130	CompoundStatement		38:20:613:613	5231011	1					
ANR	5231131	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Found object for process %d\\n"" , pid )"	597:2:13983:14043	5231011	0	True				
ANR	5231132	CallExpression	"dprintf ( D_FULLDEBUG , ""Found object for process %d\\n"" , pid )"		5231011	0					
ANR	5231133	Callee	dprintf		5231011	0					
ANR	5231134	Identifier	dprintf		5231011	0					
ANR	5231135	ArgumentList	D_FULLDEBUG		5231011	1					
ANR	5231136	Argument	D_FULLDEBUG		5231011	0					
ANR	5231137	Identifier	D_FULLDEBUG		5231011	0					
ANR	5231138	Argument	"""Found object for process %d\\n"""		5231011	1					
ANR	5231139	PrimaryExpression	"""Found object for process %d\\n"""		5231011	0					
ANR	5231140	Argument	pid		5231011	2					
ANR	5231141	Identifier	pid		5231011	0					
ANR	5231142	ExpressionStatement	continue_fsa = 0	598:2:14048:14064	5231011	1	True				
ANR	5231143	AssignmentExpression	continue_fsa = 0		5231011	0		=			
ANR	5231144	Identifier	continue_fsa		5231011	0					
ANR	5231145	PrimaryExpression	0		5231011	1					
ANR	5231146	ExpressionStatement	proc -> handle_termination ( st )	599:2:14068:14098	5231011	2	True				
ANR	5231147	CallExpression	proc -> handle_termination ( st )		5231011	0					
ANR	5231148	Callee	proc -> handle_termination		5231011	0					
ANR	5231149	PtrMemberAccess	proc -> handle_termination		5231011	0					
ANR	5231150	Identifier	proc		5231011	0					
ANR	5231151	Identifier	handle_termination		5231011	1					
ANR	5231152	ArgumentList	st		5231011	1					
ANR	5231153	Argument	st		5231011	0					
ANR	5231154	Identifier	st		5231011	0					
ANR	5231155	ReturnStatement	return ( continue_fsa ) ;	604:1:14140:14160	5231011	6	True				
ANR	5231156	Identifier	continue_fsa		5231011	0					
ANR	5231157	ReturnType	int		5231011	1					
ANR	5231158	Identifier	reaper		5231011	2					
ANR	5231159	ParameterList			5231011	3					
ANR	5231160	CFGEntryNode	ENTRY		5231011		True				
ANR	5231161	CFGExitNode	EXIT		5231011		True				
ANR	5231162	InfiniteForNode	true		5231011		True				
ANR	5231163	Symbol	st		5231011						
ANR	5231164	Symbol	proc		5231011						
ANR	5231165	Symbol	errno		5231011						
ANR	5231166	Symbol	UProcList . Next		5231011						
ANR	5231167	Symbol	NULL		5231011						
ANR	5231168	Symbol	continue_fsa		5231011						
ANR	5231169	Symbol	MyAlarm		5231011						
ANR	5231170	Symbol	EINTR		5231011						
ANR	5231171	Symbol	pid		5231011						
ANR	5231172	Symbol	& st		5231011						
ANR	5231173	Symbol	D_FULLDEBUG		5231011						
ANR	5231174	Symbol	* proc		5231011						
ANR	5231175	Symbol	UProcList		5231011						
ANR	5231176	Symbol	WNOHANG		5231011						
ANR	5231177	Symbol	ANY_PID		5231011						
ANR	5231178	Symbol	proc -> get_pid		5231011						
ANR	5231179	Symbol	waitpid		5231011						
ANR	5231180	Function	susp_ckpt_timer	611:0:14243:14342							
ANR	5231181	FunctionDef	susp_ckpt_timer ()		5231180	0					
ANR	5231182	CompoundStatement		613:0:14265:14342	5231180	0					
ANR	5231183	ExpressionStatement	MyAlarm . cancel ( )	614:1:14268:14284	5231180	0	True				
ANR	5231184	CallExpression	MyAlarm . cancel ( )		5231180	0					
ANR	5231185	Callee	MyAlarm . cancel		5231180	0					
ANR	5231186	MemberAccess	MyAlarm . cancel		5231180	0					
ANR	5231187	Identifier	MyAlarm		5231180	0					
ANR	5231188	Identifier	cancel		5231180	1					
ANR	5231189	ArgumentList			5231180	1					
ANR	5231190	ReturnStatement	return ( 0 ) ;	615:1:14331:14340	5231180	1	True				
ANR	5231191	PrimaryExpression	0		5231180	0					
ANR	5231192	ReturnType	int		5231180	1					
ANR	5231193	Identifier	susp_ckpt_timer		5231180	2					
ANR	5231194	ParameterList			5231180	3					
ANR	5231195	CFGEntryNode	ENTRY		5231180		True				
ANR	5231196	CFGExitNode	EXIT		5231180		True				
ANR	5231197	Symbol	MyAlarm		5231180						
ANR	5231198	Function	susp_all	622:0:14415:15927							
ANR	5231199	FunctionDef	susp_all ()		5231198	0					
ANR	5231200	CompoundStatement		624:0:14430:15927	5231198	0					
ANR	5231201	IdentifierDeclStatement	"char * susp_msg = ""TISABH Starter: Suspended user job: "" ;"	625:1:14433:14488	5231198	0	True				
ANR	5231202	IdentifierDecl	"* susp_msg = ""TISABH Starter: Suspended user job: """		5231198	0					
ANR	5231203	IdentifierDeclType	char *		5231198	0					
ANR	5231204	Identifier	susp_msg		5231198	1					
ANR	5231205	AssignmentExpression	"* susp_msg = ""TISABH Starter: Suspended user job: """		5231198	2		=			
ANR	5231206	Identifier	susp_msg		5231198	0					
ANR	5231207	PrimaryExpression	"""TISABH Starter: Suspended user job: """		5231198	1					
ANR	5231208	IdentifierDeclStatement	"char * unsusp_msg = ""TISABH Starter: Unsuspended user job."" ;"	626:1:14491:14549	5231198	1	True				
ANR	5231209	IdentifierDecl	"* unsusp_msg = ""TISABH Starter: Unsuspended user job."""		5231198	0					
ANR	5231210	IdentifierDeclType	char *		5231198	0					
ANR	5231211	Identifier	unsusp_msg		5231198	1					
ANR	5231212	AssignmentExpression	"* unsusp_msg = ""TISABH Starter: Unsuspended user job."""		5231198	2		=			
ANR	5231213	Identifier	unsusp_msg		5231198	0					
ANR	5231214	PrimaryExpression	"""TISABH Starter: Unsuspended user job."""		5231198	1					
ANR	5231215	IdentifierDeclStatement	char msg [ 4096 ] ;	627:1:14552:14566	5231198	2	True				
ANR	5231216	IdentifierDecl	msg [ 4096 ]		5231198	0					
ANR	5231217	IdentifierDeclType	char [ 4096 ]		5231198	0					
ANR	5231218	Identifier	msg		5231198	1					
ANR	5231219	PrimaryExpression	4096		5231198	2					
ANR	5231220	IdentifierDeclStatement	UserProc * proc ;	628:1:14569:14583	5231198	3	True				
ANR	5231221	IdentifierDecl	* proc		5231198	0					
ANR	5231222	IdentifierDeclType	UserProc *		5231198	0					
ANR	5231223	Identifier	proc		5231198	1					
ANR	5231224	IdentifierDeclStatement	int sum ;	629:1:14586:14593	5231198	4	True				
ANR	5231225	IdentifierDecl	sum		5231198	0					
ANR	5231226	IdentifierDeclType	int		5231198	0					
ANR	5231227	Identifier	sum		5231198	1					
ANR	5231228	ExpressionStatement	stop_all ( )	631:1:14597:14607	5231198	5	True				
ANR	5231229	CallExpression	stop_all ( )		5231198	0					
ANR	5231230	Callee	stop_all		5231198	0					
ANR	5231231	Identifier	stop_all		5231198	0					
ANR	5231232	ArgumentList			5231198	1					
ANR	5231233	ExpressionStatement	sum = 0	634:1:14664:14671	5231198	6	True				
ANR	5231234	AssignmentExpression	sum = 0		5231198	0		=			
ANR	5231235	Identifier	sum		5231198	0					
ANR	5231236	PrimaryExpression	0		5231198	1					
ANR	5231237	ExpressionStatement	UProcList . Rewind ( )	635:1:14674:14692	5231198	7	True				
ANR	5231238	CallExpression	UProcList . Rewind ( )		5231198	0					
ANR	5231239	Callee	UProcList . Rewind		5231198	0					
ANR	5231240	MemberAccess	UProcList . Rewind		5231198	0					
ANR	5231241	Identifier	UProcList		5231198	0					
ANR	5231242	Identifier	Rewind		5231198	1					
ANR	5231243	ArgumentList			5231198	1					
ANR	5231244	WhileStatement	while ( ( proc = UProcList . Next ( ) ) )		5231198	8					
ANR	5231245	Condition	proc = UProcList . Next ( )	636:8:14702:14726	5231198	0	True				
ANR	5231246	AssignmentExpression	proc = UProcList . Next ( )		5231198	0		=			
ANR	5231247	Identifier	proc		5231198	0					
ANR	5231248	CallExpression	UProcList . Next ( )		5231198	1					
ANR	5231249	Callee	UProcList . Next		5231198	0					
ANR	5231250	MemberAccess	UProcList . Next		5231198	0					
ANR	5231251	Identifier	UProcList		5231198	0					
ANR	5231252	Identifier	Next		5231198	1					
ANR	5231253	ArgumentList			5231198	1					
ANR	5231254	CompoundStatement		13:36:299:299	5231198	1					
ANR	5231255	IfStatement	if ( proc -> is_suspended ( ) )		5231198	0					
ANR	5231256	Condition	proc -> is_suspended ( )	637:6:14738:14757	5231198	0	True				
ANR	5231257	CallExpression	proc -> is_suspended ( )		5231198	0					
ANR	5231258	Callee	proc -> is_suspended		5231198	0					
ANR	5231259	PtrMemberAccess	proc -> is_suspended		5231198	0					
ANR	5231260	Identifier	proc		5231198	0					
ANR	5231261	Identifier	is_suspended		5231198	1					
ANR	5231262	ArgumentList			5231198	1					
ANR	5231263	CompoundStatement		14:29:330:330	5231198	1					
ANR	5231264	ExpressionStatement	sum += proc -> get_num_pids_suspended ( )	638:3:14766:14803	5231198	0	True				
ANR	5231265	AssignmentExpression	sum += proc -> get_num_pids_suspended ( )		5231198	0		+=			
ANR	5231266	Identifier	sum		5231198	0					
ANR	5231267	CallExpression	proc -> get_num_pids_suspended ( )		5231198	1					
ANR	5231268	Callee	proc -> get_num_pids_suspended		5231198	0					
ANR	5231269	PtrMemberAccess	proc -> get_num_pids_suspended		5231198	0					
ANR	5231270	Identifier	proc		5231198	0					
ANR	5231271	Identifier	get_num_pids_suspended		5231198	1					
ANR	5231272	ArgumentList			5231198	1					
ANR	5231273	ExpressionStatement	"sprintf ( msg , ""%s%d\\n"" , susp_msg , sum )"	654:1:15404:15441	5231198	9	True				
ANR	5231274	CallExpression	"sprintf ( msg , ""%s%d\\n"" , susp_msg , sum )"		5231198	0					
ANR	5231275	Callee	sprintf		5231198	0					
ANR	5231276	Identifier	sprintf		5231198	0					
ANR	5231277	ArgumentList	msg		5231198	1					
ANR	5231278	Argument	msg		5231198	0					
ANR	5231279	Identifier	msg		5231198	0					
ANR	5231280	Argument	"""%s%d\\n"""		5231198	1					
ANR	5231281	PrimaryExpression	"""%s%d\\n"""		5231198	0					
ANR	5231282	Argument	susp_msg		5231198	2					
ANR	5231283	Identifier	susp_msg		5231198	0					
ANR	5231284	Argument	sum		5231198	3					
ANR	5231285	Identifier	sum		5231198	0					
ANR	5231286	ExpressionStatement	"write ( CLIENT_LOG , msg , strlen ( msg ) )"	656:1:15519:15554	5231198	10	True				
ANR	5231287	CallExpression	"write ( CLIENT_LOG , msg , strlen ( msg ) )"		5231198	0					
ANR	5231288	Callee	write		5231198	0					
ANR	5231289	Identifier	write		5231198	0					
ANR	5231290	ArgumentList	CLIENT_LOG		5231198	1					
ANR	5231291	Argument	CLIENT_LOG		5231198	0					
ANR	5231292	Identifier	CLIENT_LOG		5231198	0					
ANR	5231293	Argument	msg		5231198	1					
ANR	5231294	Identifier	msg		5231198	0					
ANR	5231295	Argument	strlen ( msg )		5231198	2					
ANR	5231296	CallExpression	strlen ( msg )		5231198	0					
ANR	5231297	Callee	strlen		5231198	0					
ANR	5231298	Identifier	strlen		5231198	0					
ANR	5231299	ArgumentList	msg		5231198	1					
ANR	5231300	Argument	msg		5231198	0					
ANR	5231301	Identifier	msg		5231198	0					
ANR	5231302	ExpressionStatement	susp_self ( )	658:1:15558:15569	5231198	11	True				
ANR	5231303	CallExpression	susp_self ( )		5231198	0					
ANR	5231304	Callee	susp_self		5231198	0					
ANR	5231305	Identifier	susp_self		5231198	0					
ANR	5231306	ArgumentList			5231198	1					
ANR	5231307	ExpressionStatement	"sprintf ( msg , ""%s\\n"" , unsusp_msg )"	664:1:15751:15783	5231198	12	True				
ANR	5231308	CallExpression	"sprintf ( msg , ""%s\\n"" , unsusp_msg )"		5231198	0					
ANR	5231309	Callee	sprintf		5231198	0					
ANR	5231310	Identifier	sprintf		5231198	0					
ANR	5231311	ArgumentList	msg		5231198	1					
ANR	5231312	Argument	msg		5231198	0					
ANR	5231313	Identifier	msg		5231198	0					
ANR	5231314	Argument	"""%s\\n"""		5231198	1					
ANR	5231315	PrimaryExpression	"""%s\\n"""		5231198	0					
ANR	5231316	Argument	unsusp_msg		5231198	2					
ANR	5231317	Identifier	unsusp_msg		5231198	0					
ANR	5231318	ExpressionStatement	"write ( CLIENT_LOG , msg , strlen ( msg ) )"	666:1:15861:15896	5231198	13	True				
ANR	5231319	CallExpression	"write ( CLIENT_LOG , msg , strlen ( msg ) )"		5231198	0					
ANR	5231320	Callee	write		5231198	0					
ANR	5231321	Identifier	write		5231198	0					
ANR	5231322	ArgumentList	CLIENT_LOG		5231198	1					
ANR	5231323	Argument	CLIENT_LOG		5231198	0					
ANR	5231324	Identifier	CLIENT_LOG		5231198	0					
ANR	5231325	Argument	msg		5231198	1					
ANR	5231326	Identifier	msg		5231198	0					
ANR	5231327	Argument	strlen ( msg )		5231198	2					
ANR	5231328	CallExpression	strlen ( msg )		5231198	0					
ANR	5231329	Callee	strlen		5231198	0					
ANR	5231330	Identifier	strlen		5231198	0					
ANR	5231331	ArgumentList	msg		5231198	1					
ANR	5231332	Argument	msg		5231198	0					
ANR	5231333	Identifier	msg		5231198	0					
ANR	5231334	ExpressionStatement	resume_all ( )	668:1:15900:15912	5231198	14	True				
ANR	5231335	CallExpression	resume_all ( )		5231198	0					
ANR	5231336	Callee	resume_all		5231198	0					
ANR	5231337	Identifier	resume_all		5231198	0					
ANR	5231338	ArgumentList			5231198	1					
ANR	5231339	ReturnStatement	return ( 0 ) ;	670:1:15916:15925	5231198	15	True				
ANR	5231340	PrimaryExpression	0		5231198	0					
ANR	5231341	ReturnType	int		5231198	1					
ANR	5231342	Identifier	susp_all		5231198	2					
ANR	5231343	ParameterList			5231198	3					
ANR	5231344	CFGEntryNode	ENTRY		5231198		True				
ANR	5231345	CFGExitNode	EXIT		5231198		True				
ANR	5231346	Symbol	msg		5231198						
ANR	5231347	Symbol	strlen		5231198						
ANR	5231348	Symbol	proc		5231198						
ANR	5231349	Symbol	UProcList . Next		5231198						
ANR	5231350	Symbol	CLIENT_LOG		5231198						
ANR	5231351	Symbol	susp_msg		5231198						
ANR	5231352	Symbol	unsusp_msg		5231198						
ANR	5231353	Symbol	UProcList		5231198						
ANR	5231354	Symbol	proc -> is_suspended		5231198						
ANR	5231355	Symbol	proc -> get_num_pids_suspended		5231198						
ANR	5231356	Symbol	sum		5231198						
ANR	5231357	Symbol	* proc		5231198						
ANR	5231358	Function	set_quit	677:0:16051:16140							
ANR	5231359	FunctionDef	set_quit ()		5231358	0					
ANR	5231360	CompoundStatement		679:0:16066:16140	5231358	0					
ANR	5231361	ReturnStatement	return ( 0 ) ;	682:1:16129:16138	5231358	0	True				
ANR	5231362	PrimaryExpression	0		5231358	0					
ANR	5231363	ReturnType	int		5231358	1					
ANR	5231364	Identifier	set_quit		5231358	2					
ANR	5231365	ParameterList			5231358	3					
ANR	5231366	CFGEntryNode	ENTRY		5231358		True				
ANR	5231367	CFGExitNode	EXIT		5231358		True				
ANR	5231368	Function	stop_all	688:0:16179:16729							
ANR	5231369	FunctionDef	stop_all ()		5231368	0					
ANR	5231370	CompoundStatement		690:0:16194:16729	5231368	0					
ANR	5231371	IdentifierDeclStatement	UserProc * proc ;	691:1:16197:16211	5231368	0	True				
ANR	5231372	IdentifierDecl	* proc		5231368	0					
ANR	5231373	IdentifierDeclType	UserProc *		5231368	0					
ANR	5231374	Identifier	proc		5231368	1					
ANR	5231375	ExpressionStatement	UProcList . Rewind ( )	695:1:16275:16293	5231368	1	True				
ANR	5231376	CallExpression	UProcList . Rewind ( )		5231368	0					
ANR	5231377	Callee	UProcList . Rewind		5231368	0					
ANR	5231378	MemberAccess	UProcList . Rewind		5231368	0					
ANR	5231379	Identifier	UProcList		5231368	0					
ANR	5231380	Identifier	Rewind		5231368	1					
ANR	5231381	ArgumentList			5231368	1					
ANR	5231382	WhileStatement	while ( ( proc = UProcList . Next ( ) ) )		5231368	2					
ANR	5231383	Condition	proc = UProcList . Next ( )	696:8:16303:16327	5231368	0	True				
ANR	5231384	AssignmentExpression	proc = UProcList . Next ( )		5231368	0		=			
ANR	5231385	Identifier	proc		5231368	0					
ANR	5231386	CallExpression	UProcList . Next ( )		5231368	1					
ANR	5231387	Callee	UProcList . Next		5231368	0					
ANR	5231388	MemberAccess	UProcList . Next		5231368	0					
ANR	5231389	Identifier	UProcList		5231368	0					
ANR	5231390	Identifier	Next		5231368	1					
ANR	5231391	ArgumentList			5231368	1					
ANR	5231392	CompoundStatement		7:36:136:136	5231368	1					
ANR	5231393	IfStatement	if ( proc -> is_running ( ) && proc -> get_class ( ) != CONDOR_UNIVERSE_PVMD )		5231368	0					
ANR	5231394	Condition	proc -> is_running ( ) && proc -> get_class ( ) != CONDOR_UNIVERSE_PVMD	697:6:16339:16401	5231368	0	True				
ANR	5231395	AndExpression	proc -> is_running ( ) && proc -> get_class ( ) != CONDOR_UNIVERSE_PVMD		5231368	0		&&			
ANR	5231396	CallExpression	proc -> is_running ( )		5231368	0					
ANR	5231397	Callee	proc -> is_running		5231368	0					
ANR	5231398	PtrMemberAccess	proc -> is_running		5231368	0					
ANR	5231399	Identifier	proc		5231368	0					
ANR	5231400	Identifier	is_running		5231368	1					
ANR	5231401	ArgumentList			5231368	1					
ANR	5231402	EqualityExpression	proc -> get_class ( ) != CONDOR_UNIVERSE_PVMD		5231368	1		!=			
ANR	5231403	CallExpression	proc -> get_class ( )		5231368	0					
ANR	5231404	Callee	proc -> get_class		5231368	0					
ANR	5231405	PtrMemberAccess	proc -> get_class		5231368	0					
ANR	5231406	Identifier	proc		5231368	0					
ANR	5231407	Identifier	get_class		5231368	1					
ANR	5231408	ArgumentList			5231368	1					
ANR	5231409	Identifier	CONDOR_UNIVERSE_PVMD		5231368	1					
ANR	5231410	CompoundStatement		8:72:210:210	5231368	1					
ANR	5231411	ExpressionStatement	proc -> suspend ( )	698:3:16410:16425	5231368	0	True				
ANR	5231412	CallExpression	proc -> suspend ( )		5231368	0					
ANR	5231413	Callee	proc -> suspend		5231368	0					
ANR	5231414	PtrMemberAccess	proc -> suspend		5231368	0					
ANR	5231415	Identifier	proc		5231368	0					
ANR	5231416	Identifier	suspend		5231368	1					
ANR	5231417	ArgumentList			5231368	1					
ANR	5231418	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\tRequested user job to suspend\\n"" )"	699:3:16430:16486	5231368	1	True				
ANR	5231419	CallExpression	"dprintf ( D_ALWAYS , ""\\tRequested user job to suspend\\n"" )"		5231368	0					
ANR	5231420	Callee	dprintf		5231368	0					
ANR	5231421	Identifier	dprintf		5231368	0					
ANR	5231422	ArgumentList	D_ALWAYS		5231368	1					
ANR	5231423	Argument	D_ALWAYS		5231368	0					
ANR	5231424	Identifier	D_ALWAYS		5231368	0					
ANR	5231425	Argument	"""\\tRequested user job to suspend\\n"""		5231368	1					
ANR	5231426	PrimaryExpression	"""\\tRequested user job to suspend\\n"""		5231368	0					
ANR	5231427	ExpressionStatement	UProcList . Rewind ( )	703:1:16497:16515	5231368	3	True				
ANR	5231428	CallExpression	UProcList . Rewind ( )		5231368	0					
ANR	5231429	Callee	UProcList . Rewind		5231368	0					
ANR	5231430	MemberAccess	UProcList . Rewind		5231368	0					
ANR	5231431	Identifier	UProcList		5231368	0					
ANR	5231432	Identifier	Rewind		5231368	1					
ANR	5231433	ArgumentList			5231368	1					
ANR	5231434	WhileStatement	while ( ( proc = UProcList . Next ( ) ) )		5231368	4					
ANR	5231435	Condition	proc = UProcList . Next ( )	704:8:16525:16549	5231368	0	True				
ANR	5231436	AssignmentExpression	proc = UProcList . Next ( )		5231368	0		=			
ANR	5231437	Identifier	proc		5231368	0					
ANR	5231438	CallExpression	UProcList . Next ( )		5231368	1					
ANR	5231439	Callee	UProcList . Next		5231368	0					
ANR	5231440	MemberAccess	UProcList . Next		5231368	0					
ANR	5231441	Identifier	UProcList		5231368	0					
ANR	5231442	Identifier	Next		5231368	1					
ANR	5231443	ArgumentList			5231368	1					
ANR	5231444	CompoundStatement		15:36:358:358	5231368	1					
ANR	5231445	IfStatement	if ( proc -> is_running ( ) && proc -> get_class ( ) == CONDOR_UNIVERSE_PVMD )		5231368	0					
ANR	5231446	Condition	proc -> is_running ( ) && proc -> get_class ( ) == CONDOR_UNIVERSE_PVMD	705:6:16561:16623	5231368	0	True				
ANR	5231447	AndExpression	proc -> is_running ( ) && proc -> get_class ( ) == CONDOR_UNIVERSE_PVMD		5231368	0		&&			
ANR	5231448	CallExpression	proc -> is_running ( )		5231368	0					
ANR	5231449	Callee	proc -> is_running		5231368	0					
ANR	5231450	PtrMemberAccess	proc -> is_running		5231368	0					
ANR	5231451	Identifier	proc		5231368	0					
ANR	5231452	Identifier	is_running		5231368	1					
ANR	5231453	ArgumentList			5231368	1					
ANR	5231454	EqualityExpression	proc -> get_class ( ) == CONDOR_UNIVERSE_PVMD		5231368	1		==			
ANR	5231455	CallExpression	proc -> get_class ( )		5231368	0					
ANR	5231456	Callee	proc -> get_class		5231368	0					
ANR	5231457	PtrMemberAccess	proc -> get_class		5231368	0					
ANR	5231458	Identifier	proc		5231368	0					
ANR	5231459	Identifier	get_class		5231368	1					
ANR	5231460	ArgumentList			5231368	1					
ANR	5231461	Identifier	CONDOR_UNIVERSE_PVMD		5231368	1					
ANR	5231462	CompoundStatement		16:72:432:432	5231368	1					
ANR	5231463	ExpressionStatement	proc -> suspend ( )	706:3:16632:16647	5231368	0	True				
ANR	5231464	CallExpression	proc -> suspend ( )		5231368	0					
ANR	5231465	Callee	proc -> suspend		5231368	0					
ANR	5231466	PtrMemberAccess	proc -> suspend		5231368	0					
ANR	5231467	Identifier	proc		5231368	0					
ANR	5231468	Identifier	suspend		5231368	1					
ANR	5231469	ArgumentList			5231368	1					
ANR	5231470	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\tRequested user job to suspend\\n"" )"	707:3:16652:16708	5231368	1	True				
ANR	5231471	CallExpression	"dprintf ( D_ALWAYS , ""\\tRequested user job to suspend\\n"" )"		5231368	0					
ANR	5231472	Callee	dprintf		5231368	0					
ANR	5231473	Identifier	dprintf		5231368	0					
ANR	5231474	ArgumentList	D_ALWAYS		5231368	1					
ANR	5231475	Argument	D_ALWAYS		5231368	0					
ANR	5231476	Identifier	D_ALWAYS		5231368	0					
ANR	5231477	Argument	"""\\tRequested user job to suspend\\n"""		5231368	1					
ANR	5231478	PrimaryExpression	"""\\tRequested user job to suspend\\n"""		5231368	0					
ANR	5231479	ReturnStatement	return ( 0 ) ;	710:1:16718:16727	5231368	5	True				
ANR	5231480	PrimaryExpression	0		5231368	0					
ANR	5231481	ReturnType	int		5231368	1					
ANR	5231482	Identifier	stop_all		5231368	2					
ANR	5231483	ParameterList			5231368	3					
ANR	5231484	CFGEntryNode	ENTRY		5231368		True				
ANR	5231485	CFGExitNode	EXIT		5231368		True				
ANR	5231486	Symbol	proc		5231368						
ANR	5231487	Symbol	UProcList . Next		5231368						
ANR	5231488	Symbol	proc -> get_class		5231368						
ANR	5231489	Symbol	proc -> is_running		5231368						
ANR	5231490	Symbol	UProcList		5231368						
ANR	5231491	Symbol	CONDOR_UNIVERSE_PVMD		5231368						
ANR	5231492	Symbol	D_ALWAYS		5231368						
ANR	5231493	Symbol	* proc		5231368						
ANR	5231494	Function	resume_all	716:0:16777:17320							
ANR	5231495	FunctionDef	resume_all ()		5231494	0					
ANR	5231496	CompoundStatement		718:0:16795:17320	5231494	0					
ANR	5231497	IdentifierDeclStatement	UserProc * proc ;	719:1:16798:16812	5231494	0	True				
ANR	5231498	IdentifierDecl	* proc		5231494	0					
ANR	5231499	IdentifierDeclType	UserProc *		5231494	0					
ANR	5231500	Identifier	proc		5231494	1					
ANR	5231501	ExpressionStatement	UProcList . Rewind ( )	723:1:16878:16896	5231494	1	True				
ANR	5231502	CallExpression	UProcList . Rewind ( )		5231494	0					
ANR	5231503	Callee	UProcList . Rewind		5231494	0					
ANR	5231504	MemberAccess	UProcList . Rewind		5231494	0					
ANR	5231505	Identifier	UProcList		5231494	0					
ANR	5231506	Identifier	Rewind		5231494	1					
ANR	5231507	ArgumentList			5231494	1					
ANR	5231508	WhileStatement	while ( ( proc = UProcList . Next ( ) ) )		5231494	2					
ANR	5231509	Condition	proc = UProcList . Next ( )	724:8:16906:16930	5231494	0	True				
ANR	5231510	AssignmentExpression	proc = UProcList . Next ( )		5231494	0		=			
ANR	5231511	Identifier	proc		5231494	0					
ANR	5231512	CallExpression	UProcList . Next ( )		5231494	1					
ANR	5231513	Callee	UProcList . Next		5231494	0					
ANR	5231514	MemberAccess	UProcList . Next		5231494	0					
ANR	5231515	Identifier	UProcList		5231494	0					
ANR	5231516	Identifier	Next		5231494	1					
ANR	5231517	ArgumentList			5231494	1					
ANR	5231518	CompoundStatement		7:36:138:138	5231494	1					
ANR	5231519	IfStatement	if ( proc -> is_suspended ( ) && proc -> get_class ( ) == CONDOR_UNIVERSE_PVMD )		5231494	0					
ANR	5231520	Condition	proc -> is_suspended ( ) && proc -> get_class ( ) == CONDOR_UNIVERSE_PVMD	725:6:16942:17006	5231494	0	True				
ANR	5231521	AndExpression	proc -> is_suspended ( ) && proc -> get_class ( ) == CONDOR_UNIVERSE_PVMD		5231494	0		&&			
ANR	5231522	CallExpression	proc -> is_suspended ( )		5231494	0					
ANR	5231523	Callee	proc -> is_suspended		5231494	0					
ANR	5231524	PtrMemberAccess	proc -> is_suspended		5231494	0					
ANR	5231525	Identifier	proc		5231494	0					
ANR	5231526	Identifier	is_suspended		5231494	1					
ANR	5231527	ArgumentList			5231494	1					
ANR	5231528	EqualityExpression	proc -> get_class ( ) == CONDOR_UNIVERSE_PVMD		5231494	1		==			
ANR	5231529	CallExpression	proc -> get_class ( )		5231494	0					
ANR	5231530	Callee	proc -> get_class		5231494	0					
ANR	5231531	PtrMemberAccess	proc -> get_class		5231494	0					
ANR	5231532	Identifier	proc		5231494	0					
ANR	5231533	Identifier	get_class		5231494	1					
ANR	5231534	ArgumentList			5231494	1					
ANR	5231535	Identifier	CONDOR_UNIVERSE_PVMD		5231494	1					
ANR	5231536	CompoundStatement		8:74:214:214	5231494	1					
ANR	5231537	ExpressionStatement	proc -> resume ( )	726:3:17015:17029	5231494	0	True				
ANR	5231538	CallExpression	proc -> resume ( )		5231494	0					
ANR	5231539	Callee	proc -> resume		5231494	0					
ANR	5231540	PtrMemberAccess	proc -> resume		5231494	0					
ANR	5231541	Identifier	proc		5231494	0					
ANR	5231542	Identifier	resume		5231494	1					
ANR	5231543	ArgumentList			5231494	1					
ANR	5231544	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\tRequested user job to resume\\n"" )"	727:3:17034:17089	5231494	1	True				
ANR	5231545	CallExpression	"dprintf ( D_ALWAYS , ""\\tRequested user job to resume\\n"" )"		5231494	0					
ANR	5231546	Callee	dprintf		5231494	0					
ANR	5231547	Identifier	dprintf		5231494	0					
ANR	5231548	ArgumentList	D_ALWAYS		5231494	1					
ANR	5231549	Argument	D_ALWAYS		5231494	0					
ANR	5231550	Identifier	D_ALWAYS		5231494	0					
ANR	5231551	Argument	"""\\tRequested user job to resume\\n"""		5231494	1					
ANR	5231552	PrimaryExpression	"""\\tRequested user job to resume\\n"""		5231494	0					
ANR	5231553	ExpressionStatement	UProcList . Rewind ( )	731:1:17100:17118	5231494	3	True				
ANR	5231554	CallExpression	UProcList . Rewind ( )		5231494	0					
ANR	5231555	Callee	UProcList . Rewind		5231494	0					
ANR	5231556	MemberAccess	UProcList . Rewind		5231494	0					
ANR	5231557	Identifier	UProcList		5231494	0					
ANR	5231558	Identifier	Rewind		5231494	1					
ANR	5231559	ArgumentList			5231494	1					
ANR	5231560	WhileStatement	while ( ( proc = UProcList . Next ( ) ) )		5231494	4					
ANR	5231561	Condition	proc = UProcList . Next ( )	732:8:17128:17152	5231494	0	True				
ANR	5231562	AssignmentExpression	proc = UProcList . Next ( )		5231494	0		=			
ANR	5231563	Identifier	proc		5231494	0					
ANR	5231564	CallExpression	UProcList . Next ( )		5231494	1					
ANR	5231565	Callee	UProcList . Next		5231494	0					
ANR	5231566	MemberAccess	UProcList . Next		5231494	0					
ANR	5231567	Identifier	UProcList		5231494	0					
ANR	5231568	Identifier	Next		5231494	1					
ANR	5231569	ArgumentList			5231494	1					
ANR	5231570	CompoundStatement		15:36:360:360	5231494	1					
ANR	5231571	IfStatement	if ( proc -> is_suspended ( ) && proc -> get_class ( ) != CONDOR_UNIVERSE_PVMD )		5231494	0					
ANR	5231572	Condition	proc -> is_suspended ( ) && proc -> get_class ( ) != CONDOR_UNIVERSE_PVMD	733:6:17164:17228	5231494	0	True				
ANR	5231573	AndExpression	proc -> is_suspended ( ) && proc -> get_class ( ) != CONDOR_UNIVERSE_PVMD		5231494	0		&&			
ANR	5231574	CallExpression	proc -> is_suspended ( )		5231494	0					
ANR	5231575	Callee	proc -> is_suspended		5231494	0					
ANR	5231576	PtrMemberAccess	proc -> is_suspended		5231494	0					
ANR	5231577	Identifier	proc		5231494	0					
ANR	5231578	Identifier	is_suspended		5231494	1					
ANR	5231579	ArgumentList			5231494	1					
ANR	5231580	EqualityExpression	proc -> get_class ( ) != CONDOR_UNIVERSE_PVMD		5231494	1		!=			
ANR	5231581	CallExpression	proc -> get_class ( )		5231494	0					
ANR	5231582	Callee	proc -> get_class		5231494	0					
ANR	5231583	PtrMemberAccess	proc -> get_class		5231494	0					
ANR	5231584	Identifier	proc		5231494	0					
ANR	5231585	Identifier	get_class		5231494	1					
ANR	5231586	ArgumentList			5231494	1					
ANR	5231587	Identifier	CONDOR_UNIVERSE_PVMD		5231494	1					
ANR	5231588	CompoundStatement		16:74:436:436	5231494	1					
ANR	5231589	ExpressionStatement	proc -> resume ( )	734:3:17237:17251	5231494	0	True				
ANR	5231590	CallExpression	proc -> resume ( )		5231494	0					
ANR	5231591	Callee	proc -> resume		5231494	0					
ANR	5231592	PtrMemberAccess	proc -> resume		5231494	0					
ANR	5231593	Identifier	proc		5231494	0					
ANR	5231594	Identifier	resume		5231494	1					
ANR	5231595	ArgumentList			5231494	1					
ANR	5231596	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\tRequested user job to resume\\n"" )"	735:3:17256:17311	5231494	1	True				
ANR	5231597	CallExpression	"dprintf ( D_ALWAYS , ""\\tRequested user job to resume\\n"" )"		5231494	0					
ANR	5231598	Callee	dprintf		5231494	0					
ANR	5231599	Identifier	dprintf		5231494	0					
ANR	5231600	ArgumentList	D_ALWAYS		5231494	1					
ANR	5231601	Argument	D_ALWAYS		5231494	0					
ANR	5231602	Identifier	D_ALWAYS		5231494	0					
ANR	5231603	Argument	"""\\tRequested user job to resume\\n"""		5231494	1					
ANR	5231604	PrimaryExpression	"""\\tRequested user job to resume\\n"""		5231494	0					
ANR	5231605	ReturnType	void		5231494	1					
ANR	5231606	Identifier	resume_all		5231494	2					
ANR	5231607	ParameterList			5231494	3					
ANR	5231608	CFGEntryNode	ENTRY		5231494		True				
ANR	5231609	CFGExitNode	EXIT		5231494		True				
ANR	5231610	Symbol	proc		5231494						
ANR	5231611	Symbol	UProcList . Next		5231494						
ANR	5231612	Symbol	proc -> get_class		5231494						
ANR	5231613	Symbol	UProcList		5231494						
ANR	5231614	Symbol	CONDOR_UNIVERSE_PVMD		5231494						
ANR	5231615	Symbol	proc -> is_suspended		5231494						
ANR	5231616	Symbol	D_ALWAYS		5231494						
ANR	5231617	Symbol	* proc		5231494						
ANR	5231618	Function	periodic_ckpt_all	743:0:17388:17653							
ANR	5231619	FunctionDef	periodic_ckpt_all ()		5231618	0					
ANR	5231620	CompoundStatement		745:0:17412:17653	5231618	0					
ANR	5231621	IdentifierDeclStatement	UserProc * proc ;	746:1:17415:17429	5231618	0	True				
ANR	5231622	IdentifierDecl	* proc		5231618	0					
ANR	5231623	IdentifierDeclType	UserProc *		5231618	0					
ANR	5231624	Identifier	proc		5231618	1					
ANR	5231625	ExpressionStatement	UProcList . Rewind ( )	748:1:17433:17451	5231618	1	True				
ANR	5231626	CallExpression	UProcList . Rewind ( )		5231618	0					
ANR	5231627	Callee	UProcList . Rewind		5231618	0					
ANR	5231628	MemberAccess	UProcList . Rewind		5231618	0					
ANR	5231629	Identifier	UProcList		5231618	0					
ANR	5231630	Identifier	Rewind		5231618	1					
ANR	5231631	ArgumentList			5231618	1					
ANR	5231632	WhileStatement	while ( ( proc = UProcList . Next ( ) ) )		5231618	2					
ANR	5231633	Condition	proc = UProcList . Next ( )	749:8:17461:17485	5231618	0	True				
ANR	5231634	AssignmentExpression	proc = UProcList . Next ( )		5231618	0		=			
ANR	5231635	Identifier	proc		5231618	0					
ANR	5231636	CallExpression	UProcList . Next ( )		5231618	1					
ANR	5231637	Callee	UProcList . Next		5231618	0					
ANR	5231638	MemberAccess	UProcList . Next		5231618	0					
ANR	5231639	Identifier	UProcList		5231618	0					
ANR	5231640	Identifier	Next		5231618	1					
ANR	5231641	ArgumentList			5231618	1					
ANR	5231642	CompoundStatement		5:36:76:76	5231618	1					
ANR	5231643	IfStatement	if ( proc -> ckpt_enabled ( ) )		5231618	0					
ANR	5231644	Condition	proc -> ckpt_enabled ( )	750:6:17497:17516	5231618	0	True				
ANR	5231645	CallExpression	proc -> ckpt_enabled ( )		5231618	0					
ANR	5231646	Callee	proc -> ckpt_enabled		5231618	0					
ANR	5231647	PtrMemberAccess	proc -> ckpt_enabled		5231618	0					
ANR	5231648	Identifier	proc		5231618	0					
ANR	5231649	Identifier	ckpt_enabled		5231618	1					
ANR	5231650	ArgumentList			5231618	1					
ANR	5231651	CompoundStatement		6:29:107:107	5231618	1					
ANR	5231652	ExpressionStatement	proc -> request_periodic_ckpt ( )	751:3:17525:17554	5231618	0	True				
ANR	5231653	CallExpression	proc -> request_periodic_ckpt ( )		5231618	0					
ANR	5231654	Callee	proc -> request_periodic_ckpt		5231618	0					
ANR	5231655	PtrMemberAccess	proc -> request_periodic_ckpt		5231618	0					
ANR	5231656	Identifier	proc		5231618	0					
ANR	5231657	Identifier	request_periodic_ckpt		5231618	1					
ANR	5231658	ArgumentList			5231618	1					
ANR	5231659	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\tRequested user job to do a periodic checkpoint\\n"" )"	752:3:17559:17632	5231618	1	True				
ANR	5231660	CallExpression	"dprintf ( D_ALWAYS , ""\\tRequested user job to do a periodic checkpoint\\n"" )"		5231618	0					
ANR	5231661	Callee	dprintf		5231618	0					
ANR	5231662	Identifier	dprintf		5231618	0					
ANR	5231663	ArgumentList	D_ALWAYS		5231618	1					
ANR	5231664	Argument	D_ALWAYS		5231618	0					
ANR	5231665	Identifier	D_ALWAYS		5231618	0					
ANR	5231666	Argument	"""\\tRequested user job to do a periodic checkpoint\\n"""		5231618	1					
ANR	5231667	PrimaryExpression	"""\\tRequested user job to do a periodic checkpoint\\n"""		5231618	0					
ANR	5231668	ReturnStatement	return ( 0 ) ;	755:1:17642:17651	5231618	3	True				
ANR	5231669	PrimaryExpression	0		5231618	0					
ANR	5231670	ReturnType	int		5231618	1					
ANR	5231671	Identifier	periodic_ckpt_all		5231618	2					
ANR	5231672	ParameterList			5231618	3					
ANR	5231673	CFGEntryNode	ENTRY		5231618		True				
ANR	5231674	CFGExitNode	EXIT		5231618		True				
ANR	5231675	Symbol	proc		5231618						
ANR	5231676	Symbol	UProcList . Next		5231618						
ANR	5231677	Symbol	proc -> ckpt_enabled		5231618						
ANR	5231678	Symbol	UProcList		5231618						
ANR	5231679	Symbol	D_ALWAYS		5231618						
ANR	5231680	Symbol	* proc		5231618						
ANR	5231681	Function	spawn_all	761:0:17730:18123							
ANR	5231682	FunctionDef	spawn_all ()		5231681	0					
ANR	5231683	CompoundStatement		763:0:17746:18123	5231681	0					
ANR	5231684	IdentifierDeclStatement	UserProc * proc ;	764:1:17749:17763	5231681	0	True				
ANR	5231685	IdentifierDecl	* proc		5231681	0					
ANR	5231686	IdentifierDeclType	UserProc *		5231681	0					
ANR	5231687	Identifier	proc		5231681	1					
ANR	5231688	ExpressionStatement	UProcList . Rewind ( )	768:1:17828:17846	5231681	1	True				
ANR	5231689	CallExpression	UProcList . Rewind ( )		5231681	0					
ANR	5231690	Callee	UProcList . Rewind		5231681	0					
ANR	5231691	MemberAccess	UProcList . Rewind		5231681	0					
ANR	5231692	Identifier	UProcList		5231681	0					
ANR	5231693	Identifier	Rewind		5231681	1					
ANR	5231694	ArgumentList			5231681	1					
ANR	5231695	WhileStatement	while ( ( proc = UProcList . Next ( ) ) )		5231681	2					
ANR	5231696	Condition	proc = UProcList . Next ( )	769:8:17856:17880	5231681	0	True				
ANR	5231697	AssignmentExpression	proc = UProcList . Next ( )		5231681	0		=			
ANR	5231698	Identifier	proc		5231681	0					
ANR	5231699	CallExpression	UProcList . Next ( )		5231681	1					
ANR	5231700	Callee	UProcList . Next		5231681	0					
ANR	5231701	MemberAccess	UProcList . Next		5231681	0					
ANR	5231702	Identifier	UProcList		5231681	0					
ANR	5231703	Identifier	Next		5231681	1					
ANR	5231704	ArgumentList			5231681	1					
ANR	5231705	CompoundStatement		7:36:137:137	5231681	1					
ANR	5231706	IfStatement	if ( proc -> is_runnable ( ) )		5231681	0					
ANR	5231707	Condition	proc -> is_runnable ( )	770:6:17892:17910	5231681	0	True				
ANR	5231708	CallExpression	proc -> is_runnable ( )		5231681	0					
ANR	5231709	Callee	proc -> is_runnable		5231681	0					
ANR	5231710	PtrMemberAccess	proc -> is_runnable		5231681	0					
ANR	5231711	Identifier	proc		5231681	0					
ANR	5231712	Identifier	is_runnable		5231681	1					
ANR	5231713	ArgumentList			5231681	1					
ANR	5231714	CompoundStatement		8:28:167:167	5231681	1					
ANR	5231715	ExpressionStatement	proc -> execute ( )	771:3:17919:17934	5231681	0	True				
ANR	5231716	CallExpression	proc -> execute ( )		5231681	0					
ANR	5231717	Callee	proc -> execute		5231681	0					
ANR	5231718	PtrMemberAccess	proc -> execute		5231681	0					
ANR	5231719	Identifier	proc		5231681	0					
ANR	5231720	Identifier	execute		5231681	1					
ANR	5231721	ArgumentList			5231681	1					
ANR	5231722	ElseStatement	else		5231681	0					
ANR	5231723	CompoundStatement		10:9:198:198	5231681	0					
ANR	5231724	ExpressionStatement	"dprintf ( D_ALWAYS , ""Proc %d not runnable in state %d\\n"" , proc -> get_id ( ) , proc -> get_state ( ) )"	773:3:17950:18048	5231681	0	True				
ANR	5231725	CallExpression	"dprintf ( D_ALWAYS , ""Proc %d not runnable in state %d\\n"" , proc -> get_id ( ) , proc -> get_state ( ) )"		5231681	0					
ANR	5231726	Callee	dprintf		5231681	0					
ANR	5231727	Identifier	dprintf		5231681	0					
ANR	5231728	ArgumentList	D_ALWAYS		5231681	1					
ANR	5231729	Argument	D_ALWAYS		5231681	0					
ANR	5231730	Identifier	D_ALWAYS		5231681	0					
ANR	5231731	Argument	"""Proc %d not runnable in state %d\\n"""		5231681	1					
ANR	5231732	PrimaryExpression	"""Proc %d not runnable in state %d\\n"""		5231681	0					
ANR	5231733	Argument	proc -> get_id ( )		5231681	2					
ANR	5231734	CallExpression	proc -> get_id ( )		5231681	0					
ANR	5231735	Callee	proc -> get_id		5231681	0					
ANR	5231736	PtrMemberAccess	proc -> get_id		5231681	0					
ANR	5231737	Identifier	proc		5231681	0					
ANR	5231738	Identifier	get_id		5231681	1					
ANR	5231739	ArgumentList			5231681	1					
ANR	5231740	Argument	proc -> get_state ( )		5231681	3					
ANR	5231741	CallExpression	proc -> get_state ( )		5231681	0					
ANR	5231742	Callee	proc -> get_state		5231681	0					
ANR	5231743	PtrMemberAccess	proc -> get_state		5231681	0					
ANR	5231744	Identifier	proc		5231681	0					
ANR	5231745	Identifier	get_state		5231681	1					
ANR	5231746	ArgumentList			5231681	1					
ANR	5231747	IfStatement	if ( proc -> is_suspended ( ) )		5231681	1					
ANR	5231748	Condition	proc -> is_suspended ( )	776:6:18060:18079	5231681	0	True				
ANR	5231749	CallExpression	proc -> is_suspended ( )		5231681	0					
ANR	5231750	Callee	proc -> is_suspended		5231681	0					
ANR	5231751	PtrMemberAccess	proc -> is_suspended		5231681	0					
ANR	5231752	Identifier	proc		5231681	0					
ANR	5231753	Identifier	is_suspended		5231681	1					
ANR	5231754	ArgumentList			5231681	1					
ANR	5231755	CompoundStatement		14:29:336:336	5231681	1					
ANR	5231756	ExpressionStatement	proc -> resume ( )	777:3:18088:18102	5231681	0	True				
ANR	5231757	CallExpression	proc -> resume ( )		5231681	0					
ANR	5231758	Callee	proc -> resume		5231681	0					
ANR	5231759	PtrMemberAccess	proc -> resume		5231681	0					
ANR	5231760	Identifier	proc		5231681	0					
ANR	5231761	Identifier	resume		5231681	1					
ANR	5231762	ArgumentList			5231681	1					
ANR	5231763	ReturnStatement	return ( 0 ) ;	780:1:18112:18121	5231681	3	True				
ANR	5231764	PrimaryExpression	0		5231681	0					
ANR	5231765	ReturnType	int		5231681	1					
ANR	5231766	Identifier	spawn_all		5231681	2					
ANR	5231767	ParameterList			5231681	3					
ANR	5231768	CFGEntryNode	ENTRY		5231681		True				
ANR	5231769	CFGExitNode	EXIT		5231681		True				
ANR	5231770	Symbol	proc -> get_state		5231681						
ANR	5231771	Symbol	proc		5231681						
ANR	5231772	Symbol	UProcList . Next		5231681						
ANR	5231773	Symbol	proc -> is_runnable		5231681						
ANR	5231774	Symbol	UProcList		5231681						
ANR	5231775	Symbol	D_ALWAYS		5231681						
ANR	5231776	Symbol	proc -> is_suspended		5231681						
ANR	5231777	Symbol	proc -> get_id		5231681						
ANR	5231778	Symbol	* proc		5231681						
ANR	5231779	Function	test_connection	789:0:18414:18741							
ANR	5231780	FunctionDef	test_connection ()		5231779	0					
ANR	5231781	CompoundStatement		791:0:18436:18741	5231779	0					
ANR	5231782	IfStatement	"if ( write ( CLIENT_LOG , ""\\0\\n"" , 2 ) == - 1 )"		5231779	0					
ANR	5231783	Condition	"write ( CLIENT_LOG , ""\\0\\n"" , 2 ) == - 1"	792:6:18444:18475	5231779	0	True				
ANR	5231784	EqualityExpression	"write ( CLIENT_LOG , ""\\0\\n"" , 2 ) == - 1"		5231779	0		==			
ANR	5231785	CallExpression	"write ( CLIENT_LOG , ""\\0\\n"" , 2 )"		5231779	0					
ANR	5231786	Callee	write		5231779	0					
ANR	5231787	Identifier	write		5231779	0					
ANR	5231788	ArgumentList	CLIENT_LOG		5231779	1					
ANR	5231789	Argument	CLIENT_LOG		5231779	0					
ANR	5231790	Identifier	CLIENT_LOG		5231779	0					
ANR	5231791	Argument	"""\\0\\n"""		5231779	1					
ANR	5231792	PrimaryExpression	"""\\0\\n"""		5231779	0					
ANR	5231793	Argument	2		5231779	2					
ANR	5231794	PrimaryExpression	2		5231779	0					
ANR	5231795	UnaryOperationExpression	- 1		5231779	1					
ANR	5231796	UnaryOperator	-		5231779	0					
ANR	5231797	PrimaryExpression	1		5231779	1					
ANR	5231798	CompoundStatement		2:41:42:42	5231779	1					
ANR	5231799	IfStatement	"if ( param_boolean_crufty ( ""STARTER_LOCAL_LOGGING"" , false ) )"		5231779	0					
ANR	5231800	Condition	"param_boolean_crufty ( ""STARTER_LOCAL_LOGGING"" , false )"	794:6:18490:18543	5231779	0	True				
ANR	5231801	CallExpression	"param_boolean_crufty ( ""STARTER_LOCAL_LOGGING"" , false )"		5231779	0					
ANR	5231802	Callee	param_boolean_crufty		5231779	0					
ANR	5231803	Identifier	param_boolean_crufty		5231779	0					
ANR	5231804	ArgumentList	"""STARTER_LOCAL_LOGGING"""		5231779	1					
ANR	5231805	Argument	"""STARTER_LOCAL_LOGGING"""		5231779	0					
ANR	5231806	PrimaryExpression	"""STARTER_LOCAL_LOGGING"""		5231779	0					
ANR	5231807	Argument	false		5231779	1					
ANR	5231808	Identifier	false		5231779	0					
ANR	5231809	CompoundStatement		4:63:110:110	5231779	1					
ANR	5231810	ExpressionStatement	"dprintf ( D_ALWAYS , ""Lost our connection to the shadow! Exiting.\\n"" )"	795:3:18552:18620	5231779	0	True				
ANR	5231811	CallExpression	"dprintf ( D_ALWAYS , ""Lost our connection to the shadow! Exiting.\\n"" )"		5231779	0					
ANR	5231812	Callee	dprintf		5231779	0					
ANR	5231813	Identifier	dprintf		5231779	0					
ANR	5231814	ArgumentList	D_ALWAYS		5231779	1					
ANR	5231815	Argument	D_ALWAYS		5231779	0					
ANR	5231816	Identifier	D_ALWAYS		5231779	0					
ANR	5231817	Argument	"""Lost our connection to the shadow! Exiting.\\n"""		5231779	1					
ANR	5231818	PrimaryExpression	"""Lost our connection to the shadow! Exiting.\\n"""		5231779	0					
ANR	5231819	ExpressionStatement	set_root_priv ( )	799:2:18677:18692	5231779	1	True				
ANR	5231820	CallExpression	set_root_priv ( )		5231779	0					
ANR	5231821	Callee	set_root_priv		5231779	0					
ANR	5231822	Identifier	set_root_priv		5231779	0					
ANR	5231823	ArgumentList			5231779	1					
ANR	5231824	ExpressionStatement	"kill ( - ( getpid ( ) ) , SIGKILL )"	800:2:18696:18724	5231779	2	True				
ANR	5231825	CallExpression	"kill ( - ( getpid ( ) ) , SIGKILL )"		5231779	0					
ANR	5231826	Callee	kill		5231779	0					
ANR	5231827	Identifier	kill		5231779	0					
ANR	5231828	ArgumentList	- ( getpid ( ) )		5231779	1					
ANR	5231829	Argument	- ( getpid ( ) )		5231779	0					
ANR	5231830	UnaryOperationExpression	- ( getpid ( ) )		5231779	0					
ANR	5231831	UnaryOperator	-		5231779	0					
ANR	5231832	CallExpression	getpid ( )		5231779	1					
ANR	5231833	Callee	getpid		5231779	0					
ANR	5231834	Identifier	getpid		5231779	0					
ANR	5231835	ArgumentList			5231779	1					
ANR	5231836	Argument	SIGKILL		5231779	1					
ANR	5231837	Identifier	SIGKILL		5231779	0					
ANR	5231838	ReturnStatement	return 0 ;	803:1:18731:18739	5231779	1	True				
ANR	5231839	PrimaryExpression	0		5231779	0					
ANR	5231840	ReturnType	int		5231779	1					
ANR	5231841	Identifier	test_connection		5231779	2					
ANR	5231842	ParameterList			5231779	3					
ANR	5231843	CFGEntryNode	ENTRY		5231779		True				
ANR	5231844	CFGExitNode	EXIT		5231779		True				
ANR	5231845	Symbol	CLIENT_LOG		5231779						
ANR	5231846	Symbol	false		5231779						
ANR	5231847	Symbol	D_ALWAYS		5231779						
ANR	5231848	Symbol	param_boolean_crufty		5231779						
ANR	5231849	Symbol	write		5231779						
ANR	5231850	Symbol	getpid		5231779						
ANR	5231851	Symbol	SIGKILL		5231779						
ANR	5231852	Function	supervise_all	814:0:19064:19706							
ANR	5231853	FunctionDef	supervise_all ()		5231852	0					
ANR	5231854	CompoundStatement		816:0:19084:19706	5231852	0					
ANR	5231855	IdentifierDeclStatement	UserProc * proc ;	817:1:19087:19101	5231852	0	True				
ANR	5231856	IdentifierDecl	* proc		5231852	0					
ANR	5231857	IdentifierDeclType	UserProc *		5231852	0					
ANR	5231858	Identifier	proc		5231852	1					
ANR	5231859	IdentifierDeclStatement	int periodic_checkpointing = FALSE ;	818:1:19104:19140	5231852	1	True				
ANR	5231860	IdentifierDecl	periodic_checkpointing = FALSE		5231852	0					
ANR	5231861	IdentifierDeclType	int		5231852	0					
ANR	5231862	Identifier	periodic_checkpointing		5231852	1					
ANR	5231863	AssignmentExpression	periodic_checkpointing = FALSE		5231852	2		=			
ANR	5231864	Identifier	FALSE		5231852	0					
ANR	5231865	Identifier	FALSE		5231852	1					
ANR	5231866	Statement	static	819:1:19143:19148	5231852	2	True				
ANR	5231867	IdentifierDeclStatement	Transition * tr = 0 ;	819:8:19150:19168	5231852	3	True				
ANR	5231868	IdentifierDecl	* tr = 0		5231852	0					
ANR	5231869	IdentifierDeclType	Transition *		5231852	0					
ANR	5231870	Identifier	tr		5231852	1					
ANR	5231871	AssignmentExpression	* tr = 0		5231852	2		=			
ANR	5231872	Identifier	tr		5231852	0					
ANR	5231873	PrimaryExpression	0		5231852	1					
ANR	5231874	ExpressionStatement	UProcList . Rewind ( )	824:1:19238:19256	5231852	4	True				
ANR	5231875	CallExpression	UProcList . Rewind ( )		5231852	0					
ANR	5231876	Callee	UProcList . Rewind		5231852	0					
ANR	5231877	MemberAccess	UProcList . Rewind		5231852	0					
ANR	5231878	Identifier	UProcList		5231852	0					
ANR	5231879	Identifier	Rewind		5231852	1					
ANR	5231880	ArgumentList			5231852	1					
ANR	5231881	WhileStatement	while ( ( proc = UProcList . Next ( ) ) )		5231852	5					
ANR	5231882	Condition	proc = UProcList . Next ( )	825:8:19266:19290	5231852	0	True				
ANR	5231883	AssignmentExpression	proc = UProcList . Next ( )		5231852	0		=			
ANR	5231884	Identifier	proc		5231852	0					
ANR	5231885	CallExpression	UProcList . Next ( )		5231852	1					
ANR	5231886	Callee	UProcList . Next		5231852	0					
ANR	5231887	MemberAccess	UProcList . Next		5231852	0					
ANR	5231888	Identifier	UProcList		5231852	0					
ANR	5231889	Identifier	Next		5231852	1					
ANR	5231890	ArgumentList			5231852	1					
ANR	5231891	CompoundStatement		10:36:209:209	5231852	1					
ANR	5231892	IfStatement	if ( proc -> ckpt_enabled ( ) )		5231852	0					
ANR	5231893	Condition	proc -> ckpt_enabled ( )	826:6:19302:19321	5231852	0	True				
ANR	5231894	CallExpression	proc -> ckpt_enabled ( )		5231852	0					
ANR	5231895	Callee	proc -> ckpt_enabled		5231852	0					
ANR	5231896	PtrMemberAccess	proc -> ckpt_enabled		5231852	0					
ANR	5231897	Identifier	proc		5231852	0					
ANR	5231898	Identifier	ckpt_enabled		5231852	1					
ANR	5231899	ArgumentList			5231852	1					
ANR	5231900	CompoundStatement		11:29:240:240	5231852	1					
ANR	5231901	ExpressionStatement	periodic_checkpointing = TRUE	827:3:19330:19359	5231852	0	True				
ANR	5231902	AssignmentExpression	periodic_checkpointing = TRUE		5231852	0		=			
ANR	5231903	Identifier	periodic_checkpointing		5231852	0					
ANR	5231904	Identifier	TRUE		5231852	1					
ANR	5231905	BreakStatement	break ;	828:3:19364:19369	5231852	1	True				
ANR	5231906	IfStatement	if ( tr == 0 )		5231852	6					
ANR	5231907	Condition	tr == 0	832:5:19384:19390	5231852	0	True				
ANR	5231908	EqualityExpression	tr == 0		5231852	0		==			
ANR	5231909	Identifier	tr		5231852	0					
ANR	5231910	PrimaryExpression	0		5231852	1					
ANR	5231911	CompoundStatement		17:14:308:308	5231852	1					
ANR	5231912	ExpressionStatement	tr = condor_starter_ptr -> find_transition ( ALARM )	833:2:19397:19446	5231852	0	True				
ANR	5231913	AssignmentExpression	tr = condor_starter_ptr -> find_transition ( ALARM )		5231852	0		=			
ANR	5231914	Identifier	tr		5231852	0					
ANR	5231915	CallExpression	condor_starter_ptr -> find_transition ( ALARM )		5231852	1					
ANR	5231916	Callee	condor_starter_ptr -> find_transition		5231852	0					
ANR	5231917	PtrMemberAccess	condor_starter_ptr -> find_transition		5231852	0					
ANR	5231918	Identifier	condor_starter_ptr		5231852	0					
ANR	5231919	Identifier	find_transition		5231852	1					
ANR	5231920	ArgumentList	ALARM		5231852	1					
ANR	5231921	Argument	ALARM		5231852	0					
ANR	5231922	Identifier	ALARM		5231852	0					
ANR	5231923	IfStatement	if ( tr )		5231852	1					
ANR	5231924	Condition	tr	834:7:19455:19456	5231852	0	True				
ANR	5231925	Identifier	tr		5231852	0					
ANR	5231926	CompoundStatement		19:12:375:375	5231852	1					
ANR	5231927	ExpressionStatement	condor_starter_ptr -> dont_print_transition ( tr )	835:3:19465:19512	5231852	0	True				
ANR	5231928	CallExpression	condor_starter_ptr -> dont_print_transition ( tr )		5231852	0					
ANR	5231929	Callee	condor_starter_ptr -> dont_print_transition		5231852	0					
ANR	5231930	PtrMemberAccess	condor_starter_ptr -> dont_print_transition		5231852	0					
ANR	5231931	Identifier	condor_starter_ptr		5231852	0					
ANR	5231932	Identifier	dont_print_transition		5231852	1					
ANR	5231933	ArgumentList	tr		5231852	1					
ANR	5231934	Argument	tr		5231852	0					
ANR	5231935	Identifier	tr		5231852	0					
ANR	5231936	ForStatement	for ( ; ; )		5231852	7					
ANR	5231937	CompoundStatement		24:9:446:446	5231852	0					
ANR	5231938	ExpressionStatement	MyAlarm . set ( 300 )	841:2:19601:19617	5231852	0	True				
ANR	5231939	CallExpression	MyAlarm . set ( 300 )		5231852	0					
ANR	5231940	Callee	MyAlarm . set		5231852	0					
ANR	5231941	MemberAccess	MyAlarm . set		5231852	0					
ANR	5231942	Identifier	MyAlarm		5231852	0					
ANR	5231943	Identifier	set		5231852	1					
ANR	5231944	ArgumentList	300		5231852	1					
ANR	5231945	Argument	300		5231852	0					
ANR	5231946	PrimaryExpression	300		5231852	0					
ANR	5231947	ExpressionStatement	pause ( )	844:2:19651:19658	5231852	1	True				
ANR	5231948	CallExpression	pause ( )		5231852	0					
ANR	5231949	Callee	pause		5231852	0					
ANR	5231950	Identifier	pause		5231852	0					
ANR	5231951	ArgumentList			5231852	1					
ANR	5231952	ReturnStatement	return NO_EVENT ;	848:1:19689:19704	5231852	8	True				
ANR	5231953	Identifier	NO_EVENT		5231852	0					
ANR	5231954	ReturnType	int		5231852	1					
ANR	5231955	Identifier	supervise_all		5231852	2					
ANR	5231956	ParameterList			5231852	3					
ANR	5231957	CFGEntryNode	ENTRY		5231852		True				
ANR	5231958	CFGExitNode	EXIT		5231852		True				
ANR	5231959	InfiniteForNode	true		5231852		True				
ANR	5231960	Symbol	proc		5231852						
ANR	5231961	Symbol	UProcList . Next		5231852						
ANR	5231962	Symbol	proc -> ckpt_enabled		5231852						
ANR	5231963	Symbol	NO_EVENT		5231852						
ANR	5231964	Symbol	MyAlarm		5231852						
ANR	5231965	Symbol	ALARM		5231852						
ANR	5231966	Symbol	TRUE		5231852						
ANR	5231967	Symbol	* condor_starter_ptr		5231852						
ANR	5231968	Symbol	* proc		5231852						
ANR	5231969	Symbol	condor_starter_ptr -> find_transition		5231852						
ANR	5231970	Symbol	periodic_checkpointing		5231852						
ANR	5231971	Symbol	UProcList		5231852						
ANR	5231972	Symbol	FALSE		5231852						
ANR	5231973	Symbol	tr		5231852						
ANR	5231974	Symbol	condor_starter_ptr		5231852						
ANR	5231975	Function	proc_exit	855:0:19851:20331							
ANR	5231976	FunctionDef	proc_exit ()		5231975	0					
ANR	5231977	CompoundStatement		857:0:19867:20331	5231975	0					
ANR	5231978	IdentifierDeclStatement	UserProc * proc ;	858:1:19870:19884	5231975	0	True				
ANR	5231979	IdentifierDecl	* proc		5231975	0					
ANR	5231980	IdentifierDeclType	UserProc *		5231975	0					
ANR	5231981	Identifier	proc		5231975	1					
ANR	5231982	IdentifierDeclStatement	PROC_STATE state ;	859:1:19887:19903	5231975	1	True				
ANR	5231983	IdentifierDecl	state		5231975	0					
ANR	5231984	IdentifierDeclType	PROC_STATE		5231975	0					
ANR	5231985	Identifier	state		5231975	1					
ANR	5231986	ExpressionStatement	proc = UProcList . Current ( )	862:1:19953:19979	5231975	2	True				
ANR	5231987	AssignmentExpression	proc = UProcList . Current ( )		5231975	0		=			
ANR	5231988	Identifier	proc		5231975	0					
ANR	5231989	CallExpression	UProcList . Current ( )		5231975	1					
ANR	5231990	Callee	UProcList . Current		5231975	0					
ANR	5231991	MemberAccess	UProcList . Current		5231975	0					
ANR	5231992	Identifier	UProcList		5231975	0					
ANR	5231993	Identifier	Current		5231975	1					
ANR	5231994	ArgumentList			5231975	1					
ANR	5231995	SwitchStatement	switch ( state = proc -> get_state ( ) )		5231975	3					
ANR	5231996	Condition	state = proc -> get_state ( )	864:9:19991:20015	5231975	0	True				
ANR	5231997	AssignmentExpression	state = proc -> get_state ( )		5231975	0		=			
ANR	5231998	Identifier	state		5231975	0					
ANR	5231999	CallExpression	proc -> get_state ( )		5231975	1					
ANR	5232000	Callee	proc -> get_state		5231975	0					
ANR	5232001	PtrMemberAccess	proc -> get_state		5231975	0					
ANR	5232002	Identifier	proc		5231975	0					
ANR	5232003	Identifier	get_state		5231975	1					
ANR	5232004	ArgumentList			5231975	1					
ANR	5232005	CompoundStatement		8:37:151:151	5231975	1					
ANR	5232006	Label	case CHECKPOINTING :	866:3:20025:20043	5231975	0	True				
ANR	5232007	Identifier	CHECKPOINTING		5231975	0					
ANR	5232008	ReturnStatement	return CKPT_EXIT ;	867:2:20047:20063	5231975	1	True				
ANR	5232009	Identifier	CKPT_EXIT		5231975	0					
ANR	5232010	Label	case ABNORMAL_EXIT :	869:3:20120:20138	5231975	2	True				
ANR	5232011	Identifier	ABNORMAL_EXIT		5231975	0					
ANR	5232012	ReturnStatement	return HAS_CORE ;	870:2:20142:20157	5231975	3	True				
ANR	5232013	Identifier	HAS_CORE		5231975	0					
ANR	5232014	Label	case NON_RUNNABLE :	872:3:20163:20180	5231975	4	True				
ANR	5232015	Identifier	NON_RUNNABLE		5231975	0					
ANR	5232016	Label	case NORMAL_EXIT :	873:3:20185:20201	5231975	5	True				
ANR	5232017	Identifier	NORMAL_EXIT		5231975	0					
ANR	5232018	ReturnStatement	return NO_CORE ;	874:2:20205:20219	5231975	6	True				
ANR	5232019	Identifier	NO_CORE		5231975	0					
ANR	5232020	Label	default :	876:3:20225:20232	5231975	7	True				
ANR	5232021	Identifier	default		5231975	0					
ANR	5232022	ExpressionStatement	"EXCEPT ( ""Unexpected proc state (%d)\\n"" , state )"	877:2:20236:20283	5231975	8	True				
ANR	5232023	CallExpression	"EXCEPT ( ""Unexpected proc state (%d)\\n"" , state )"		5231975	0					
ANR	5232024	Callee	EXCEPT		5231975	0					
ANR	5232025	Identifier	EXCEPT		5231975	0					
ANR	5232026	ArgumentList	"""Unexpected proc state (%d)\\n"""		5231975	1					
ANR	5232027	Argument	"""Unexpected proc state (%d)\\n"""		5231975	0					
ANR	5232028	PrimaryExpression	"""Unexpected proc state (%d)\\n"""		5231975	0					
ANR	5232029	Argument	state		5231975	1					
ANR	5232030	Identifier	state		5231975	0					
ANR	5232031	ReturnStatement	return DEFAULT ;	881:1:20315:20329	5231975	4	True				
ANR	5232032	Identifier	DEFAULT		5231975	0					
ANR	5232033	ReturnType	int		5231975	1					
ANR	5232034	Identifier	proc_exit		5231975	2					
ANR	5232035	ParameterList			5231975	3					
ANR	5232036	CFGEntryNode	ENTRY		5231975		True				
ANR	5232037	CFGExitNode	EXIT		5231975		True				
ANR	5232038	Symbol	proc -> get_state		5231975						
ANR	5232039	Symbol	proc		5231975						
ANR	5232040	Symbol	HAS_CORE		5231975						
ANR	5232041	Symbol	NO_CORE		5231975						
ANR	5232042	Symbol	UProcList		5231975						
ANR	5232043	Symbol	CKPT_EXIT		5231975						
ANR	5232044	Symbol	state		5231975						
ANR	5232045	Symbol	DEFAULT		5231975						
ANR	5232046	Symbol	UProcList . Current		5231975						
ANR	5232047	Symbol	* proc		5231975						
ANR	5232048	Function	dispose_one	887:0:20385:20719							
ANR	5232049	FunctionDef	dispose_one ()		5232048	0					
ANR	5232050	CompoundStatement		889:0:20403:20719	5232048	0					
ANR	5232051	IdentifierDeclStatement	UserProc * proc ;	890:1:20406:20420	5232048	0	True				
ANR	5232052	IdentifierDecl	* proc		5232048	0					
ANR	5232053	IdentifierDeclType	UserProc *		5232048	0					
ANR	5232054	Identifier	proc		5232048	1					
ANR	5232055	ExpressionStatement	proc = UProcList . Current ( )	893:1:20470:20496	5232048	1	True				
ANR	5232056	AssignmentExpression	proc = UProcList . Current ( )		5232048	0		=			
ANR	5232057	Identifier	proc		5232048	0					
ANR	5232058	CallExpression	UProcList . Current ( )		5232048	1					
ANR	5232059	Callee	UProcList . Current		5232048	0					
ANR	5232060	MemberAccess	UProcList . Current		5232048	0					
ANR	5232061	Identifier	UProcList		5232048	0					
ANR	5232062	Identifier	Current		5232048	1					
ANR	5232063	ArgumentList			5232048	1					
ANR	5232064	ExpressionStatement	send_final_status ( proc )	896:1:20534:20559	5232048	2	True				
ANR	5232065	CallExpression	send_final_status ( proc )		5232048	0					
ANR	5232066	Callee	send_final_status		5232048	0					
ANR	5232067	Identifier	send_final_status		5232048	0					
ANR	5232068	ArgumentList	proc		5232048	1					
ANR	5232069	Argument	proc		5232048	0					
ANR	5232070	Identifier	proc		5232048	0					
ANR	5232071	ExpressionStatement	proc -> delete_files ( )	899:1:20594:20614	5232048	3	True				
ANR	5232072	CallExpression	proc -> delete_files ( )		5232048	0					
ANR	5232073	Callee	proc -> delete_files		5232048	0					
ANR	5232074	PtrMemberAccess	proc -> delete_files		5232048	0					
ANR	5232075	Identifier	proc		5232048	0					
ANR	5232076	Identifier	delete_files		5232048	1					
ANR	5232077	ArgumentList			5232048	1					
ANR	5232078	ExpressionStatement	UProcList . DeleteCurrent ( )	901:1:20619:20644	5232048	4	True				
ANR	5232079	CallExpression	UProcList . DeleteCurrent ( )		5232048	0					
ANR	5232080	Callee	UProcList . DeleteCurrent		5232048	0					
ANR	5232081	MemberAccess	UProcList . DeleteCurrent		5232048	0					
ANR	5232082	Identifier	UProcList		5232048	0					
ANR	5232083	Identifier	DeleteCurrent		5232048	1					
ANR	5232084	ArgumentList			5232048	1					
ANR	5232085	Statement	delete	902:1:20647:20652	5232048	5	True				
ANR	5232086	ExpressionStatement	proc	902:8:20654:20658	5232048	6	True				
ANR	5232087	Identifier	proc		5232048	0					
ANR	5232088	ReturnStatement	return ( 0 ) ;	903:1:20708:20717	5232048	7	True				
ANR	5232089	PrimaryExpression	0		5232048	0					
ANR	5232090	ReturnType	int		5232048	1					
ANR	5232091	Identifier	dispose_one		5232048	2					
ANR	5232092	ParameterList			5232048	3					
ANR	5232093	CFGEntryNode	ENTRY		5232048		True				
ANR	5232094	CFGExitNode	EXIT		5232048		True				
ANR	5232095	Symbol	proc		5232048						
ANR	5232096	Symbol	UProcList		5232048						
ANR	5232097	Symbol	UProcList . Current		5232048						
ANR	5232098	Function	make_runnable	909:0:20773:20978							
ANR	5232099	FunctionDef	make_runnable ()		5232098	0					
ANR	5232100	CompoundStatement		911:0:20793:20978	5232098	0					
ANR	5232101	IdentifierDeclStatement	UserProc * proc ;	912:1:20796:20810	5232098	0	True				
ANR	5232102	IdentifierDecl	* proc		5232098	0					
ANR	5232103	IdentifierDeclType	UserProc *		5232098	0					
ANR	5232104	Identifier	proc		5232098	1					
ANR	5232105	ExpressionStatement	proc = UProcList . Current ( )	915:1:20860:20886	5232098	1	True				
ANR	5232106	AssignmentExpression	proc = UProcList . Current ( )		5232098	0		=			
ANR	5232107	Identifier	proc		5232098	0					
ANR	5232108	CallExpression	UProcList . Current ( )		5232098	1					
ANR	5232109	Callee	UProcList . Current		5232098	0					
ANR	5232110	MemberAccess	UProcList . Current		5232098	0					
ANR	5232111	Identifier	UProcList		5232098	0					
ANR	5232112	Identifier	Current		5232098	1					
ANR	5232113	ArgumentList			5232098	1					
ANR	5232114	ExpressionStatement	proc -> make_runnable ( )	918:1:20924:20945	5232098	2	True				
ANR	5232115	CallExpression	proc -> make_runnable ( )		5232098	0					
ANR	5232116	Callee	proc -> make_runnable		5232098	0					
ANR	5232117	PtrMemberAccess	proc -> make_runnable		5232098	0					
ANR	5232118	Identifier	proc		5232098	0					
ANR	5232119	Identifier	make_runnable		5232098	1					
ANR	5232120	ArgumentList			5232098	1					
ANR	5232121	ExpressionStatement	proc -> execute ( )	919:1:20948:20963	5232098	3	True				
ANR	5232122	CallExpression	proc -> execute ( )		5232098	0					
ANR	5232123	Callee	proc -> execute		5232098	0					
ANR	5232124	PtrMemberAccess	proc -> execute		5232098	0					
ANR	5232125	Identifier	proc		5232098	0					
ANR	5232126	Identifier	execute		5232098	1					
ANR	5232127	ArgumentList			5232098	1					
ANR	5232128	ReturnStatement	return ( 0 ) ;	921:1:20967:20976	5232098	4	True				
ANR	5232129	PrimaryExpression	0		5232098	0					
ANR	5232130	ReturnType	int		5232098	1					
ANR	5232131	Identifier	make_runnable		5232098	2					
ANR	5232132	ParameterList			5232098	3					
ANR	5232133	CFGEntryNode	ENTRY		5232098		True				
ANR	5232134	CFGExitNode	EXIT		5232098		True				
ANR	5232135	Symbol	proc		5232098						
ANR	5232136	Symbol	UProcList		5232098						
ANR	5232137	Symbol	UProcList . Current		5232098						
ANR	5232138	Function	send_core	928:0:21124:21274							
ANR	5232139	FunctionDef	send_core ()		5232138	0					
ANR	5232140	CompoundStatement		929:0:21140:21274	5232138	0					
ANR	5232141	IdentifierDeclStatement	UserProc * proc ;	930:1:21143:21157	5232138	0	True				
ANR	5232142	IdentifierDecl	* proc		5232138	0					
ANR	5232143	IdentifierDeclType	UserProc *		5232138	0					
ANR	5232144	Identifier	proc		5232138	1					
ANR	5232145	ExpressionStatement	proc = UProcList . Current ( )	933:1:21207:21233	5232138	1	True				
ANR	5232146	AssignmentExpression	proc = UProcList . Current ( )		5232138	0		=			
ANR	5232147	Identifier	proc		5232138	0					
ANR	5232148	CallExpression	UProcList . Current ( )		5232138	1					
ANR	5232149	Callee	UProcList . Current		5232138	0					
ANR	5232150	MemberAccess	UProcList . Current		5232138	0					
ANR	5232151	Identifier	UProcList		5232138	0					
ANR	5232152	Identifier	Current		5232138	1					
ANR	5232153	ArgumentList			5232138	1					
ANR	5232154	ExpressionStatement	proc -> store_core ( )	934:1:21236:21254	5232138	2	True				
ANR	5232155	CallExpression	proc -> store_core ( )		5232138	0					
ANR	5232156	Callee	proc -> store_core		5232138	0					
ANR	5232157	PtrMemberAccess	proc -> store_core		5232138	0					
ANR	5232158	Identifier	proc		5232138	0					
ANR	5232159	Identifier	store_core		5232138	1					
ANR	5232160	ArgumentList			5232138	1					
ANR	5232161	ReturnStatement	return DEFAULT ;	936:1:21258:21272	5232138	3	True				
ANR	5232162	Identifier	DEFAULT		5232138	0					
ANR	5232163	ReturnType	int		5232138	1					
ANR	5232164	Identifier	send_core		5232138	2					
ANR	5232165	ParameterList			5232138	3					
ANR	5232166	CFGEntryNode	ENTRY		5232138		True				
ANR	5232167	CFGExitNode	EXIT		5232138		True				
ANR	5232168	Symbol	proc		5232138						
ANR	5232169	Symbol	UProcList		5232138						
ANR	5232170	Symbol	DEFAULT		5232138						
ANR	5232171	Symbol	UProcList . Current		5232138						
ANR	5232172	Function	asynch_wait	945:0:21471:21558							
ANR	5232173	FunctionDef	asynch_wait ()		5232172	0					
ANR	5232174	CompoundStatement		947:0:21489:21558	5232172	0					
ANR	5232175	ForStatement	for ( ; ; )		5232172	0					
ANR	5232176	CompoundStatement		2:9:10:10	5232172	0					
ANR	5232177	ExpressionStatement	pause ( )	949:2:21504:21511	5232172	0	True				
ANR	5232178	CallExpression	pause ( )		5232172	0					
ANR	5232179	Callee	pause		5232172	0					
ANR	5232180	Identifier	pause		5232172	0					
ANR	5232181	ArgumentList			5232172	1					
ANR	5232182	ReturnStatement	return NO_EVENT ;	952:1:21541:21556	5232172	1	True				
ANR	5232183	Identifier	NO_EVENT		5232172	0					
ANR	5232184	ReturnType	int		5232172	1					
ANR	5232185	Identifier	asynch_wait		5232172	2					
ANR	5232186	ParameterList			5232172	3					
ANR	5232187	CFGEntryNode	ENTRY		5232172		True				
ANR	5232188	CFGExitNode	EXIT		5232172		True				
ANR	5232189	InfiniteForNode	true		5232172		True				
ANR	5232190	Symbol	NO_EVENT		5232172						
ANR	5232191	Function	update_cpu	961:0:21773:22167							
ANR	5232192	FunctionDef	update_cpu ()		5232191	0					
ANR	5232193	CompoundStatement		963:0:21790:22167	5232191	0					
ANR	5232194	ExpressionStatement	proc = UProcList . Current ( )	972:1:22037:22063	5232191	0	True				
ANR	5232195	AssignmentExpression	proc = UProcList . Current ( )		5232191	0		=			
ANR	5232196	Identifier	proc		5232191	0					
ANR	5232197	CallExpression	UProcList . Current ( )		5232191	1					
ANR	5232198	Callee	UProcList . Current		5232191	0					
ANR	5232199	MemberAccess	UProcList . Current		5232191	0					
ANR	5232200	Identifier	UProcList		5232191	0					
ANR	5232201	Identifier	Current		5232191	1					
ANR	5232202	ArgumentList			5232191	1					
ANR	5232203	ExpressionStatement	rusage = proc -> accumulated_rusage ( )	974:1:22067:22102	5232191	1	True				
ANR	5232204	AssignmentExpression	rusage = proc -> accumulated_rusage ( )		5232191	0		=			
ANR	5232205	Identifier	rusage		5232191	0					
ANR	5232206	CallExpression	proc -> accumulated_rusage ( )		5232191	1					
ANR	5232207	Callee	proc -> accumulated_rusage		5232191	0					
ANR	5232208	PtrMemberAccess	proc -> accumulated_rusage		5232191	0					
ANR	5232209	Identifier	proc		5232191	0					
ANR	5232210	Identifier	accumulated_rusage		5232191	1					
ANR	5232211	ArgumentList			5232191	1					
ANR	5232212	ExpressionStatement	( void ) REMOTE_CONDOR_send_rusage ( rusage )	975:1:22105:22146	5232191	2	True				
ANR	5232213	CastExpression	( void ) REMOTE_CONDOR_send_rusage ( rusage )		5232191	0					
ANR	5232214	CastTarget	void		5232191	0					
ANR	5232215	CallExpression	REMOTE_CONDOR_send_rusage ( rusage )		5232191	1					
ANR	5232216	Callee	REMOTE_CONDOR_send_rusage		5232191	0					
ANR	5232217	Identifier	REMOTE_CONDOR_send_rusage		5232191	0					
ANR	5232218	ArgumentList	rusage		5232191	1					
ANR	5232219	Argument	rusage		5232191	0					
ANR	5232220	Identifier	rusage		5232191	0					
ANR	5232221	ReturnStatement	return ( 0 ) ;	977:1:22156:22165	5232191	3	True				
ANR	5232222	PrimaryExpression	0		5232191	0					
ANR	5232223	ReturnType	int		5232191	1					
ANR	5232224	Identifier	update_cpu		5232191	2					
ANR	5232225	ParameterList			5232191	3					
ANR	5232226	CFGEntryNode	ENTRY		5232191		True				
ANR	5232227	CFGExitNode	EXIT		5232191		True				
ANR	5232228	Symbol	rusage		5232191						
ANR	5232229	Symbol	proc		5232191						
ANR	5232230	Symbol	UProcList		5232191						
ANR	5232231	Symbol	proc -> accumulated_rusage		5232191						
ANR	5232232	Symbol	UProcList . Current		5232191						
ANR	5232233	Symbol	* proc		5232191						
ANR	5232234	Function	get_job_info	987:0:22363:23732							
ANR	5232235	FunctionDef	get_job_info ()		5232234	0					
ANR	5232236	CompoundStatement		989:0:22389:23732	5232234	0					
ANR	5232237	IdentifierDeclStatement	UserProc * u_proc ;	990:1:22392:22409	5232234	0	True				
ANR	5232238	IdentifierDecl	* u_proc		5232234	0					
ANR	5232239	IdentifierDeclType	UserProc *		5232234	0					
ANR	5232240	Identifier	u_proc		5232234	1					
ANR	5232241	IdentifierDeclStatement	STARTUP_INFO s ;	991:1:22412:22426	5232234	1	True				
ANR	5232242	IdentifierDecl	s		5232234	0					
ANR	5232243	IdentifierDeclType	STARTUP_INFO		5232234	0					
ANR	5232244	Identifier	s		5232234	1					
ANR	5232245	ExpressionStatement	"memset ( ( char * ) & s , 0 , sizeof ( STARTUP_INFO ) )"	998:1:22562:22605	5232234	2	True				
ANR	5232246	CallExpression	"memset ( ( char * ) & s , 0 , sizeof ( STARTUP_INFO ) )"		5232234	0					
ANR	5232247	Callee	memset		5232234	0					
ANR	5232248	Identifier	memset		5232234	0					
ANR	5232249	ArgumentList	( char * ) & s		5232234	1					
ANR	5232250	Argument	( char * ) & s		5232234	0					
ANR	5232251	CastExpression	( char * ) & s		5232234	0					
ANR	5232252	CastTarget	char *		5232234	0					
ANR	5232253	UnaryOperationExpression	& s		5232234	1					
ANR	5232254	UnaryOperator	&		5232234	0					
ANR	5232255	Identifier	s		5232234	1					
ANR	5232256	Argument	0		5232234	1					
ANR	5232257	PrimaryExpression	0		5232234	0					
ANR	5232258	Argument	sizeof ( STARTUP_INFO )		5232234	2					
ANR	5232259	SizeofExpression	sizeof ( STARTUP_INFO )		5232234	0					
ANR	5232260	Sizeof	sizeof		5232234	0					
ANR	5232261	SizeofOperand	STARTUP_INFO		5232234	1					
ANR	5232262	ExpressionStatement	"dprintf ( D_ALWAYS , ""Entering get_job_info()\\n"" )"	1000:1:22609:22657	5232234	3	True				
ANR	5232263	CallExpression	"dprintf ( D_ALWAYS , ""Entering get_job_info()\\n"" )"		5232234	0					
ANR	5232264	Callee	dprintf		5232234	0					
ANR	5232265	Identifier	dprintf		5232234	0					
ANR	5232266	ArgumentList	D_ALWAYS		5232234	1					
ANR	5232267	Argument	D_ALWAYS		5232234	0					
ANR	5232268	Identifier	D_ALWAYS		5232234	0					
ANR	5232269	Argument	"""Entering get_job_info()\\n"""		5232234	1					
ANR	5232270	PrimaryExpression	"""Entering get_job_info()\\n"""		5232234	0					
ANR	5232271	ExpressionStatement	"memset ( & s , 0 , sizeof ( s ) )"	1002:1:22661:22687	5232234	4	True				
ANR	5232272	CallExpression	"memset ( & s , 0 , sizeof ( s ) )"		5232234	0					
ANR	5232273	Callee	memset		5232234	0					
ANR	5232274	Identifier	memset		5232234	0					
ANR	5232275	ArgumentList	& s		5232234	1					
ANR	5232276	Argument	& s		5232234	0					
ANR	5232277	UnaryOperationExpression	& s		5232234	0					
ANR	5232278	UnaryOperator	&		5232234	0					
ANR	5232279	Identifier	s		5232234	1					
ANR	5232280	Argument	0		5232234	1					
ANR	5232281	PrimaryExpression	0		5232234	0					
ANR	5232282	Argument	sizeof ( s )		5232234	2					
ANR	5232283	SizeofExpression	sizeof ( s )		5232234	0					
ANR	5232284	Sizeof	sizeof		5232234	0					
ANR	5232285	SizeofOperand	s		5232234	1					
ANR	5232286	ExpressionStatement	REMOTE_CONDOR_startup_info_request ( & s )	1003:1:22690:22730	5232234	5	True				
ANR	5232287	CallExpression	REMOTE_CONDOR_startup_info_request ( & s )		5232234	0					
ANR	5232288	Callee	REMOTE_CONDOR_startup_info_request		5232234	0					
ANR	5232289	Identifier	REMOTE_CONDOR_startup_info_request		5232234	0					
ANR	5232290	ArgumentList	& s		5232234	1					
ANR	5232291	Argument	& s		5232234	0					
ANR	5232292	UnaryOperationExpression	& s		5232234	0					
ANR	5232293	UnaryOperator	&		5232234	0					
ANR	5232294	Identifier	s		5232234	1					
ANR	5232295	ExpressionStatement	"display_startup_info ( & s , D_ALWAYS )"	1004:1:22733:22769	5232234	6	True				
ANR	5232296	CallExpression	"display_startup_info ( & s , D_ALWAYS )"		5232234	0					
ANR	5232297	Callee	display_startup_info		5232234	0					
ANR	5232298	Identifier	display_startup_info		5232234	0					
ANR	5232299	ArgumentList	& s		5232234	1					
ANR	5232300	Argument	& s		5232234	0					
ANR	5232301	UnaryOperationExpression	& s		5232234	0					
ANR	5232302	UnaryOperator	&		5232234	0					
ANR	5232303	Identifier	s		5232234	1					
ANR	5232304	Argument	D_ALWAYS		5232234	1					
ANR	5232305	Identifier	D_ALWAYS		5232234	0					
ANR	5232306	ExpressionStatement	"determine_user_ids ( s . uid , s . gid )"	1006:1:22773:22807	5232234	7	True				
ANR	5232307	CallExpression	"determine_user_ids ( s . uid , s . gid )"		5232234	0					
ANR	5232308	Callee	determine_user_ids		5232234	0					
ANR	5232309	Identifier	determine_user_ids		5232234	0					
ANR	5232310	ArgumentList	s . uid		5232234	1					
ANR	5232311	Argument	s . uid		5232234	0					
ANR	5232312	MemberAccess	s . uid		5232234	0					
ANR	5232313	Identifier	s		5232234	0					
ANR	5232314	Identifier	uid		5232234	1					
ANR	5232315	Argument	s . gid		5232234	1					
ANR	5232316	MemberAccess	s . gid		5232234	0					
ANR	5232317	Identifier	s		5232234	0					
ANR	5232318	Identifier	gid		5232234	1					
ANR	5232319	ExpressionStatement	"dprintf ( D_ALWAYS , ""User uid set to %d\\n"" , s . uid )"	1008:1:22811:22861	5232234	8	True				
ANR	5232320	CallExpression	"dprintf ( D_ALWAYS , ""User uid set to %d\\n"" , s . uid )"		5232234	0					
ANR	5232321	Callee	dprintf		5232234	0					
ANR	5232322	Identifier	dprintf		5232234	0					
ANR	5232323	ArgumentList	D_ALWAYS		5232234	1					
ANR	5232324	Argument	D_ALWAYS		5232234	0					
ANR	5232325	Identifier	D_ALWAYS		5232234	0					
ANR	5232326	Argument	"""User uid set to %d\\n"""		5232234	1					
ANR	5232327	PrimaryExpression	"""User uid set to %d\\n"""		5232234	0					
ANR	5232328	Argument	s . uid		5232234	2					
ANR	5232329	MemberAccess	s . uid		5232234	0					
ANR	5232330	Identifier	s		5232234	0					
ANR	5232331	Identifier	uid		5232234	1					
ANR	5232332	ExpressionStatement	"dprintf ( D_ALWAYS , ""User uid set to %d\\n"" , s . gid )"	1009:1:22864:22914	5232234	9	True				
ANR	5232333	CallExpression	"dprintf ( D_ALWAYS , ""User uid set to %d\\n"" , s . gid )"		5232234	0					
ANR	5232334	Callee	dprintf		5232234	0					
ANR	5232335	Identifier	dprintf		5232234	0					
ANR	5232336	ArgumentList	D_ALWAYS		5232234	1					
ANR	5232337	Argument	D_ALWAYS		5232234	0					
ANR	5232338	Identifier	D_ALWAYS		5232234	0					
ANR	5232339	Argument	"""User uid set to %d\\n"""		5232234	1					
ANR	5232340	PrimaryExpression	"""User uid set to %d\\n"""		5232234	0					
ANR	5232341	Argument	s . gid		5232234	2					
ANR	5232342	MemberAccess	s . gid		5232234	0					
ANR	5232343	Identifier	s		5232234	0					
ANR	5232344	Identifier	gid		5232234	1					
ANR	5232345	ExpressionStatement	"set_user_ids ( s . uid , s . gid )"	1011:1:22918:22946	5232234	10	True				
ANR	5232346	CallExpression	"set_user_ids ( s . uid , s . gid )"		5232234	0					
ANR	5232347	Callee	set_user_ids		5232234	0					
ANR	5232348	Identifier	set_user_ids		5232234	0					
ANR	5232349	ArgumentList	s . uid		5232234	1					
ANR	5232350	Argument	s . uid		5232234	0					
ANR	5232351	MemberAccess	s . uid		5232234	0					
ANR	5232352	Identifier	s		5232234	0					
ANR	5232353	Identifier	uid		5232234	1					
ANR	5232354	Argument	s . gid		5232234	1					
ANR	5232355	MemberAccess	s . gid		5232234	0					
ANR	5232356	Identifier	s		5232234	0					
ANR	5232357	Identifier	gid		5232234	1					
ANR	5232358	SwitchStatement	switch ( s . job_class )		5232234	11					
ANR	5232359	Condition	s . job_class	1013:9:22958:22968	5232234	0	True				
ANR	5232360	MemberAccess	s . job_class		5232234	0					
ANR	5232361	Identifier	s		5232234	0					
ANR	5232362	Identifier	job_class		5232234	1					
ANR	5232363	CompoundStatement		25:23:582:582	5232234	1					
ANR	5232364	Label	case CONDOR_UNIVERSE_PVMD :	1015:2:22982:23007	5232234	0	True				
ANR	5232365	Identifier	CONDOR_UNIVERSE_PVMD		5232234	0					
ANR	5232366	ExpressionStatement	u_proc = new PVMdProc ( s )	1016:3:23012:23038	5232234	1	True				
ANR	5232367	AssignmentExpression	u_proc = new PVMdProc ( s )		5232234	0		=			
ANR	5232368	Identifier	u_proc		5232234	0					
ANR	5232369	Identifier	s		5232234	1					
ANR	5232370	BreakStatement	break ;	1017:3:23043:23048	5232234	2	True				
ANR	5232371	Label	case CONDOR_UNIVERSE_PVM :	1018:2:23052:23076	5232234	3	True				
ANR	5232372	Identifier	CONDOR_UNIVERSE_PVM		5232234	0					
ANR	5232373	ExpressionStatement	u_proc = new PVMUserProc ( s )	1019:3:23081:23110	5232234	4	True				
ANR	5232374	AssignmentExpression	u_proc = new PVMUserProc ( s )		5232234	0		=			
ANR	5232375	Identifier	u_proc		5232234	0					
ANR	5232376	Identifier	s		5232234	1					
ANR	5232377	BreakStatement	break ;	1020:3:23115:23120	5232234	5	True				
ANR	5232378	Label	default :	1022:2:23131:23138	5232234	6	True				
ANR	5232379	Identifier	default		5232234	0					
ANR	5232380	IfStatement	if ( s . cmd )		5232234	7					
ANR	5232381	Condition	s . cmd	1023:6:23146:23150	5232234	0	True				
ANR	5232382	MemberAccess	s . cmd		5232234	0					
ANR	5232383	Identifier	s		5232234	0					
ANR	5232384	Identifier	cmd		5232234	1					
ANR	5232385	ExpressionStatement	u_proc = new UserProc ( s )	1024:4:23157:23183	5232234	1	True				
ANR	5232386	AssignmentExpression	u_proc = new UserProc ( s )		5232234	0		=			
ANR	5232387	Identifier	u_proc		5232234	0					
ANR	5232388	Identifier	s		5232234	1					
ANR	5232389	BreakStatement	break ;	1025:3:23188:23193	5232234	8	True				
ANR	5232390	ExpressionStatement	u_proc -> display ( )	1028:1:23200:23217	5232234	12	True				
ANR	5232391	CallExpression	u_proc -> display ( )		5232234	0					
ANR	5232392	Callee	u_proc -> display		5232234	0					
ANR	5232393	PtrMemberAccess	u_proc -> display		5232234	0					
ANR	5232394	Identifier	u_proc		5232234	0					
ANR	5232395	Identifier	display		5232234	1					
ANR	5232396	ArgumentList			5232234	1					
ANR	5232397	IfStatement	if ( s . cmd )		5232234	13					
ANR	5232398	Condition	s . cmd	1036:5:23589:23593	5232234	0	True				
ANR	5232399	MemberAccess	s . cmd		5232234	0					
ANR	5232400	Identifier	s		5232234	0					
ANR	5232401	Identifier	cmd		5232234	1					
ANR	5232402	ExpressionStatement	free ( s . cmd )	1036:13:23597:23608	5232234	1	True				
ANR	5232403	CallExpression	free ( s . cmd )		5232234	0					
ANR	5232404	Callee	free		5232234	0					
ANR	5232405	Identifier	free		5232234	0					
ANR	5232406	ArgumentList	s . cmd		5232234	1					
ANR	5232407	Argument	s . cmd		5232234	0					
ANR	5232408	MemberAccess	s . cmd		5232234	0					
ANR	5232409	Identifier	s		5232234	0					
ANR	5232410	Identifier	cmd		5232234	1					
ANR	5232411	IfStatement	if ( s . args_v1or2 )		5232234	14					
ANR	5232412	Condition	s . args_v1or2	1037:5:23615:23626	5232234	0	True				
ANR	5232413	MemberAccess	s . args_v1or2		5232234	0					
ANR	5232414	Identifier	s		5232234	0					
ANR	5232415	Identifier	args_v1or2		5232234	1					
ANR	5232416	ExpressionStatement	free ( s . args_v1or2 )	1037:19:23629:23647	5232234	1	True				
ANR	5232417	CallExpression	free ( s . args_v1or2 )		5232234	0					
ANR	5232418	Callee	free		5232234	0					
ANR	5232419	Identifier	free		5232234	0					
ANR	5232420	ArgumentList	s . args_v1or2		5232234	1					
ANR	5232421	Argument	s . args_v1or2		5232234	0					
ANR	5232422	MemberAccess	s . args_v1or2		5232234	0					
ANR	5232423	Identifier	s		5232234	0					
ANR	5232424	Identifier	args_v1or2		5232234	1					
ANR	5232425	IfStatement	if ( s . env_v1or2 )		5232234	15					
ANR	5232426	Condition	s . env_v1or2	1038:5:23654:23664	5232234	0	True				
ANR	5232427	MemberAccess	s . env_v1or2		5232234	0					
ANR	5232428	Identifier	s		5232234	0					
ANR	5232429	Identifier	env_v1or2		5232234	1					
ANR	5232430	ExpressionStatement	free ( s . env_v1or2 )	1038:19:23668:23686	5232234	1	True				
ANR	5232431	CallExpression	free ( s . env_v1or2 )		5232234	0					
ANR	5232432	Callee	free		5232234	0					
ANR	5232433	Identifier	free		5232234	0					
ANR	5232434	ArgumentList	s . env_v1or2		5232234	1					
ANR	5232435	Argument	s . env_v1or2		5232234	0					
ANR	5232436	MemberAccess	s . env_v1or2		5232234	0					
ANR	5232437	Identifier	s		5232234	0					
ANR	5232438	Identifier	env_v1or2		5232234	1					
ANR	5232439	IfStatement	if ( s . iwd )		5232234	16					
ANR	5232440	Condition	s . iwd	1039:5:23693:23697	5232234	0	True				
ANR	5232441	MemberAccess	s . iwd		5232234	0					
ANR	5232442	Identifier	s		5232234	0					
ANR	5232443	Identifier	iwd		5232234	1					
ANR	5232444	ExpressionStatement	free ( s . iwd )	1039:13:23701:23713	5232234	1	True				
ANR	5232445	CallExpression	free ( s . iwd )		5232234	0					
ANR	5232446	Callee	free		5232234	0					
ANR	5232447	Identifier	free		5232234	0					
ANR	5232448	ArgumentList	s . iwd		5232234	1					
ANR	5232449	Argument	s . iwd		5232234	0					
ANR	5232450	MemberAccess	s . iwd		5232234	0					
ANR	5232451	Identifier	s		5232234	0					
ANR	5232452	Identifier	iwd		5232234	1					
ANR	5232453	ReturnStatement	return u_proc ;	1041:1:23717:23730	5232234	17	True				
ANR	5232454	Identifier	u_proc		5232234	0					
ANR	5232455	ReturnType	UserProc *		5232234	1					
ANR	5232456	Identifier	get_job_info		5232234	2					
ANR	5232457	ParameterList			5232234	3					
ANR	5232458	CFGEntryNode	ENTRY		5232234		True				
ANR	5232459	CFGExitNode	EXIT		5232234		True				
ANR	5232460	Symbol	s . uid		5232234						
ANR	5232461	Symbol	s		5232234						
ANR	5232462	Symbol	s . gid		5232234						
ANR	5232463	Symbol	s . job_class		5232234						
ANR	5232464	Symbol	s . cmd		5232234						
ANR	5232465	Symbol	u_proc		5232234						
ANR	5232466	Symbol	s . iwd		5232234						
ANR	5232467	Symbol	D_ALWAYS		5232234						
ANR	5232468	Symbol	& s		5232234						
ANR	5232469	Symbol	s . env_v1or2		5232234						
ANR	5232470	Symbol	s . args_v1or2		5232234						
ANR	5232471	Function	cleanup	1054:0:24245:24818							
ANR	5232472	FunctionDef	cleanup ()		5232471	0					
ANR	5232473	CompoundStatement		1056:0:24259:24818	5232471	0					
ANR	5232474	IdentifierDeclStatement	UserProc * proc ;	1057:1:24262:24276	5232471	0	True				
ANR	5232475	IdentifierDecl	* proc		5232471	0					
ANR	5232476	IdentifierDeclType	UserProc *		5232471	0					
ANR	5232477	Identifier	proc		5232471	1					
ANR	5232478	ExpressionStatement	UProcList . Rewind ( )	1059:1:24280:24298	5232471	1	True				
ANR	5232479	CallExpression	UProcList . Rewind ( )		5232471	0					
ANR	5232480	Callee	UProcList . Rewind		5232471	0					
ANR	5232481	MemberAccess	UProcList . Rewind		5232471	0					
ANR	5232482	Identifier	UProcList		5232471	0					
ANR	5232483	Identifier	Rewind		5232471	1					
ANR	5232484	ArgumentList			5232471	1					
ANR	5232485	WhileStatement	while ( ( proc = UProcList . Next ( ) ) )		5232471	2					
ANR	5232486	Condition	proc = UProcList . Next ( )	1060:8:24308:24332	5232471	0	True				
ANR	5232487	AssignmentExpression	proc = UProcList . Next ( )		5232471	0		=			
ANR	5232488	Identifier	proc		5232471	0					
ANR	5232489	CallExpression	UProcList . Next ( )		5232471	1					
ANR	5232490	Callee	UProcList . Next		5232471	0					
ANR	5232491	MemberAccess	UProcList . Next		5232471	0					
ANR	5232492	Identifier	UProcList		5232471	0					
ANR	5232493	Identifier	Next		5232471	1					
ANR	5232494	ArgumentList			5232471	1					
ANR	5232495	CompoundStatement		5:36:76:76	5232471	1					
ANR	5232496	IfStatement	if ( proc -> get_class ( ) != CONDOR_UNIVERSE_PVMD )		5232471	0					
ANR	5232497	Condition	proc -> get_class ( ) != CONDOR_UNIVERSE_PVMD	1061:7:24345:24385	5232471	0	True				
ANR	5232498	EqualityExpression	proc -> get_class ( ) != CONDOR_UNIVERSE_PVMD		5232471	0		!=			
ANR	5232499	CallExpression	proc -> get_class ( )		5232471	0					
ANR	5232500	Callee	proc -> get_class		5232471	0					
ANR	5232501	PtrMemberAccess	proc -> get_class		5232471	0					
ANR	5232502	Identifier	proc		5232471	0					
ANR	5232503	Identifier	get_class		5232471	1					
ANR	5232504	ArgumentList			5232471	1					
ANR	5232505	Identifier	CONDOR_UNIVERSE_PVMD		5232471	1					
ANR	5232506	CompoundStatement		6:51:129:129	5232471	1					
ANR	5232507	ExpressionStatement	proc -> kill_forcibly ( )	1062:3:24394:24415	5232471	0	True				
ANR	5232508	CallExpression	proc -> kill_forcibly ( )		5232471	0					
ANR	5232509	Callee	proc -> kill_forcibly		5232471	0					
ANR	5232510	PtrMemberAccess	proc -> kill_forcibly		5232471	0					
ANR	5232511	Identifier	proc		5232471	0					
ANR	5232512	Identifier	kill_forcibly		5232471	1					
ANR	5232513	ArgumentList			5232471	1					
ANR	5232514	ExpressionStatement	proc -> delete_files ( )	1063:3:24420:24440	5232471	1	True				
ANR	5232515	CallExpression	proc -> delete_files ( )		5232471	0					
ANR	5232516	Callee	proc -> delete_files		5232471	0					
ANR	5232517	PtrMemberAccess	proc -> delete_files		5232471	0					
ANR	5232518	Identifier	proc		5232471	0					
ANR	5232519	Identifier	delete_files		5232471	1					
ANR	5232520	ArgumentList			5232471	1					
ANR	5232521	ExpressionStatement	UProcList . DeleteCurrent ( )	1064:3:24445:24470	5232471	2	True				
ANR	5232522	CallExpression	UProcList . DeleteCurrent ( )		5232471	0					
ANR	5232523	Callee	UProcList . DeleteCurrent		5232471	0					
ANR	5232524	MemberAccess	UProcList . DeleteCurrent		5232471	0					
ANR	5232525	Identifier	UProcList		5232471	0					
ANR	5232526	Identifier	DeleteCurrent		5232471	1					
ANR	5232527	ArgumentList			5232471	1					
ANR	5232528	Statement	delete	1065:3:24475:24480	5232471	3	True				
ANR	5232529	ExpressionStatement	proc	1065:10:24482:24486	5232471	4	True				
ANR	5232530	Identifier	proc		5232471	0					
ANR	5232531	ExpressionStatement	UProcList . Rewind ( )	1068:1:24543:24561	5232471	3	True				
ANR	5232532	CallExpression	UProcList . Rewind ( )		5232471	0					
ANR	5232533	Callee	UProcList . Rewind		5232471	0					
ANR	5232534	MemberAccess	UProcList . Rewind		5232471	0					
ANR	5232535	Identifier	UProcList		5232471	0					
ANR	5232536	Identifier	Rewind		5232471	1					
ANR	5232537	ArgumentList			5232471	1					
ANR	5232538	WhileStatement	while ( ( proc = UProcList . Next ( ) ) )		5232471	4					
ANR	5232539	Condition	proc = UProcList . Next ( )	1069:9:24572:24596	5232471	0	True				
ANR	5232540	AssignmentExpression	proc = UProcList . Next ( )		5232471	0		=			
ANR	5232541	Identifier	proc		5232471	0					
ANR	5232542	CallExpression	UProcList . Next ( )		5232471	1					
ANR	5232543	Callee	UProcList . Next		5232471	0					
ANR	5232544	MemberAccess	UProcList . Next		5232471	0					
ANR	5232545	Identifier	UProcList		5232471	0					
ANR	5232546	Identifier	Next		5232471	1					
ANR	5232547	ArgumentList			5232471	1					
ANR	5232548	CompoundStatement		14:37:340:340	5232471	1					
ANR	5232549	IfStatement	if ( proc -> get_class ( ) == CONDOR_UNIVERSE_PVMD )		5232471	0					
ANR	5232550	Condition	proc -> get_class ( ) == CONDOR_UNIVERSE_PVMD	1070:7:24609:24649	5232471	0	True				
ANR	5232551	EqualityExpression	proc -> get_class ( ) == CONDOR_UNIVERSE_PVMD		5232471	0		==			
ANR	5232552	CallExpression	proc -> get_class ( )		5232471	0					
ANR	5232553	Callee	proc -> get_class		5232471	0					
ANR	5232554	PtrMemberAccess	proc -> get_class		5232471	0					
ANR	5232555	Identifier	proc		5232471	0					
ANR	5232556	Identifier	get_class		5232471	1					
ANR	5232557	ArgumentList			5232471	1					
ANR	5232558	Identifier	CONDOR_UNIVERSE_PVMD		5232471	1					
ANR	5232559	CompoundStatement		15:51:393:393	5232471	1					
ANR	5232560	ExpressionStatement	proc -> kill_forcibly ( )	1071:3:24658:24679	5232471	0	True				
ANR	5232561	CallExpression	proc -> kill_forcibly ( )		5232471	0					
ANR	5232562	Callee	proc -> kill_forcibly		5232471	0					
ANR	5232563	PtrMemberAccess	proc -> kill_forcibly		5232471	0					
ANR	5232564	Identifier	proc		5232471	0					
ANR	5232565	Identifier	kill_forcibly		5232471	1					
ANR	5232566	ArgumentList			5232471	1					
ANR	5232567	ExpressionStatement	proc -> delete_files ( )	1072:3:24684:24704	5232471	1	True				
ANR	5232568	CallExpression	proc -> delete_files ( )		5232471	0					
ANR	5232569	Callee	proc -> delete_files		5232471	0					
ANR	5232570	PtrMemberAccess	proc -> delete_files		5232471	0					
ANR	5232571	Identifier	proc		5232471	0					
ANR	5232572	Identifier	delete_files		5232471	1					
ANR	5232573	ArgumentList			5232471	1					
ANR	5232574	ExpressionStatement	UProcList . DeleteCurrent ( )	1073:3:24709:24734	5232471	2	True				
ANR	5232575	CallExpression	UProcList . DeleteCurrent ( )		5232471	0					
ANR	5232576	Callee	UProcList . DeleteCurrent		5232471	0					
ANR	5232577	MemberAccess	UProcList . DeleteCurrent		5232471	0					
ANR	5232578	Identifier	UProcList		5232471	0					
ANR	5232579	Identifier	DeleteCurrent		5232471	1					
ANR	5232580	ArgumentList			5232471	1					
ANR	5232581	Statement	delete	1074:3:24739:24744	5232471	3	True				
ANR	5232582	ExpressionStatement	proc	1074:10:24746:24750	5232471	4	True				
ANR	5232583	Identifier	proc		5232471	0					
ANR	5232584	ReturnStatement	return ( 0 ) ;	1077:1:24807:24816	5232471	5	True				
ANR	5232585	PrimaryExpression	0		5232471	0					
ANR	5232586	ReturnType	int		5232471	1					
ANR	5232587	Identifier	cleanup		5232471	2					
ANR	5232588	ParameterList			5232471	3					
ANR	5232589	CFGEntryNode	ENTRY		5232471		True				
ANR	5232590	CFGExitNode	EXIT		5232471		True				
ANR	5232591	Symbol	proc		5232471						
ANR	5232592	Symbol	UProcList . Next		5232471						
ANR	5232593	Symbol	proc -> get_class		5232471						
ANR	5232594	Symbol	UProcList		5232471						
ANR	5232595	Symbol	CONDOR_UNIVERSE_PVMD		5232471						
ANR	5232596	Symbol	* proc		5232471						
ANR	5232597	DeclStmt									
ANR	5232598	Decl							sigset_t	sigset_t	mask
ANR	5232599	DeclStmt									
ANR	5232600	Decl							int	int	AvoidNFS
ANR	5232601	DeclStmt									
ANR	5232602	Decl							int	int	SyscallInProgress
ANR	5232603	DeclStmt									
ANR	5232604	Decl							int	int	CkptWanted
ANR	5232605	DeclStmt									
ANR	5232606	Decl							int	int	KillWanted
ANR	5232607	DeclStmt									
ANR	5232608	Decl							void	void ( )	do_kill
ANR	5232609	DeclStmt									
ANR	5232610	Decl							void	void ( )	ckpt
ANR	5232611	Function	do_kill	1133:0:26079:26094							
ANR	5232612	FunctionDef	do_kill ()		5232611	0					
ANR	5232613	CompoundStatement		1133:14:26093:26094	5232611	0					
ANR	5232614	ReturnType	void		5232611	1					
ANR	5232615	Identifier	do_kill		5232611	2					
ANR	5232616	ParameterList			5232611	3					
ANR	5232617	CFGEntryNode	ENTRY		5232611		True				
ANR	5232618	CFGExitNode	EXIT		5232611		True				
ANR	5232619	Function	ckpt	1134:0:26096:26108							
ANR	5232620	FunctionDef	ckpt ()		5232619	0					
ANR	5232621	CompoundStatement		1134:11:26107:26108	5232619	0					
ANR	5232622	ReturnType	void		5232619	1					
ANR	5232623	Identifier	ckpt		5232619	2					
ANR	5232624	ParameterList			5232619	3					
ANR	5232625	CFGEntryNode	ENTRY		5232619		True				
ANR	5232626	CFGExitNode	EXIT		5232619		True				
ANR	5232627	Function	_updateckpt	1135:11:26121:26177							
ANR	5232628	FunctionDef	"_updateckpt (char * foo , char * bar , char * glarch)"		5232627	0					
ANR	5232629	CompoundStatement		1135:66:26176:26177	5232627	0					
ANR	5232630	ReturnType	void		5232627	1					
ANR	5232631	Identifier	_updateckpt		5232627	2					
ANR	5232632	ParameterList	"char * foo , char * bar , char * glarch"		5232627	3					
ANR	5232633	Parameter	char * foo	1135:29:26139:26147	5232627	0	True				
ANR	5232634	ParameterType	char *		5232627	0					
ANR	5232635	Identifier	foo		5232627	1					
ANR	5232636	Parameter	char * bar	1135:40:26150:26158	5232627	1	True				
ANR	5232637	ParameterType	char *		5232627	0					
ANR	5232638	Identifier	bar		5232627	1					
ANR	5232639	Parameter	char * glarch	1135:51:26161:26172	5232627	2	True				
ANR	5232640	ParameterType	char *		5232627	0					
ANR	5232641	Identifier	glarch		5232627	1					
ANR	5232642	CFGEntryNode	ENTRY		5232627		True				
ANR	5232643	CFGExitNode	EXIT		5232627		True				
ANR	5232644	Symbol	bar		5232627						
ANR	5232645	Symbol	foo		5232627						
ANR	5232646	Symbol	glarch		5232627						
ANR	5232647	Function	needed_fd	1144:0:26349:26642							
ANR	5232648	FunctionDef	needed_fd (int fd)		5232647	0					
ANR	5232649	CompoundStatement		1146:0:26373:26642	5232647	0					
ANR	5232650	SwitchStatement	switch ( fd )		5232647	0					
ANR	5232651	Condition	fd	1147:9:26384:26385	5232647	0	True				
ANR	5232652	Identifier	fd		5232647	0					
ANR	5232653	CompoundStatement		2:14:15:15	5232647	1					
ANR	5232654	Label	case 2 :	1149:3:26395:26401	5232647	0	True				
ANR	5232655	Label	case CLIENT_LOG :	1150:3:26406:26421	5232647	1	True				
ANR	5232656	Identifier	CLIENT_LOG		5232647	0					
ANR	5232657	ReturnStatement	return TRUE ;	1151:4:26427:26438	5232647	2	True				
ANR	5232658	Identifier	TRUE		5232647	0					
ANR	5232659	Label	case REQ_SOCK :	1153:3:26444:26457	5232647	3	True				
ANR	5232660	Identifier	REQ_SOCK		5232647	0					
ANR	5232661	ReturnStatement	return FALSE ;	1154:4:26512:26524	5232647	4	True				
ANR	5232662	Identifier	FALSE		5232647	0					
ANR	5232663	Label	case RSC_SOCK :	1156:3:26530:26543	5232647	5	True				
ANR	5232664	Identifier	RSC_SOCK		5232647	0					
ANR	5232665	ReturnStatement	return TRUE ;	1157:4:26595:26606	5232647	6	True				
ANR	5232666	Identifier	TRUE		5232647	0					
ANR	5232667	Label	default :	1159:3:26612:26619	5232647	7	True				
ANR	5232668	Identifier	default		5232647	0					
ANR	5232669	ReturnStatement	return FALSE ;	1160:4:26625:26637	5232647	8	True				
ANR	5232670	Identifier	FALSE		5232647	0					
ANR	5232671	ReturnType	int		5232647	1					
ANR	5232672	Identifier	needed_fd		5232647	2					
ANR	5232673	ParameterList	int fd		5232647	3					
ANR	5232674	Parameter	int fd	1145:11:26364:26369	5232647	0	True				
ANR	5232675	ParameterType	int		5232647	0					
ANR	5232676	Identifier	fd		5232647	1					
ANR	5232677	CFGEntryNode	ENTRY		5232647		True				
ANR	5232678	CFGExitNode	EXIT		5232647		True				
ANR	5232679	Symbol	TRUE		5232647						
ANR	5232680	Symbol	FALSE		5232647						
ANR	5232681	Symbol	fd		5232647						
ANR	5232682	Function	init_environment_info	1168:0:26766:27780							
ANR	5232683	FunctionDef	init_environment_info ()		5232682	0					
ANR	5232684	CompoundStatement		1170:0:26795:27780	5232682	0					
ANR	5232685	IdentifierDeclStatement	char * my_fs_domain ;	1171:1:26798:26818	5232682	0	True				
ANR	5232686	IdentifierDecl	* my_fs_domain		5232682	0					
ANR	5232687	IdentifierDeclType	char *		5232682	0					
ANR	5232688	Identifier	my_fs_domain		5232682	1					
ANR	5232689	IdentifierDeclStatement	char * my_uid_domain ;	1172:1:26821:26841	5232682	1	True				
ANR	5232690	IdentifierDecl	* my_uid_domain		5232682	0					
ANR	5232691	IdentifierDeclType	char *		5232682	0					
ANR	5232692	Identifier	my_uid_domain		5232682	1					
ANR	5232693	IdentifierDeclStatement	char * ckpt_server_host ;	1173:1:26844:26867	5232682	2	True				
ANR	5232694	IdentifierDecl	* ckpt_server_host		5232682	0					
ANR	5232695	IdentifierDeclType	char *		5232682	0					
ANR	5232696	Identifier	ckpt_server_host		5232682	1					
ANR	5232697	IdentifierDeclStatement	"char * arch , * opsys ;"	1174:1:26870:26889	5232682	3	True				
ANR	5232698	IdentifierDecl	* arch		5232682	0					
ANR	5232699	IdentifierDeclType	char *		5232682	0					
ANR	5232700	Identifier	arch		5232682	1					
ANR	5232701	IdentifierDecl	* opsys		5232682	1					
ANR	5232702	IdentifierDeclType	char *		5232682	0					
ANR	5232703	Identifier	opsys		5232682	1					
ANR	5232704	IdentifierDeclStatement	const char * ckptpltfrm ;	1175:1:26892:26915	5232682	4	True				
ANR	5232705	IdentifierDecl	* ckptpltfrm		5232682	0					
ANR	5232706	IdentifierDeclType	const char *		5232682	0					
ANR	5232707	Identifier	ckptpltfrm		5232682	1					
ANR	5232708	ExpressionStatement	"my_fs_domain = param ( ""FILESYSTEM_DOMAIN"" )"	1177:1:26919:26962	5232682	5	True				
ANR	5232709	AssignmentExpression	"my_fs_domain = param ( ""FILESYSTEM_DOMAIN"" )"		5232682	0		=			
ANR	5232710	Identifier	my_fs_domain		5232682	0					
ANR	5232711	CallExpression	"param ( ""FILESYSTEM_DOMAIN"" )"		5232682	1					
ANR	5232712	Callee	param		5232682	0					
ANR	5232713	Identifier	param		5232682	0					
ANR	5232714	ArgumentList	"""FILESYSTEM_DOMAIN"""		5232682	1					
ANR	5232715	Argument	"""FILESYSTEM_DOMAIN"""		5232682	0					
ANR	5232716	PrimaryExpression	"""FILESYSTEM_DOMAIN"""		5232682	0					
ANR	5232717	IfStatement	if ( my_fs_domain )		5232682	6					
ANR	5232718	Condition	my_fs_domain	1178:5:26969:26980	5232682	0	True				
ANR	5232719	Identifier	my_fs_domain		5232682	0					
ANR	5232720	CompoundStatement		9:20:188:188	5232682	1					
ANR	5232721	ExpressionStatement	REMOTE_CONDOR_register_fs_domain ( my_fs_domain )	1179:2:26988:27036	5232682	0	True				
ANR	5232722	CallExpression	REMOTE_CONDOR_register_fs_domain ( my_fs_domain )		5232682	0					
ANR	5232723	Callee	REMOTE_CONDOR_register_fs_domain		5232682	0					
ANR	5232724	Identifier	REMOTE_CONDOR_register_fs_domain		5232682	0					
ANR	5232725	ArgumentList	my_fs_domain		5232682	1					
ANR	5232726	Argument	my_fs_domain		5232682	0					
ANR	5232727	Identifier	my_fs_domain		5232682	0					
ANR	5232728	ExpressionStatement	free ( my_fs_domain )	1180:2:27040:27058	5232682	1	True				
ANR	5232729	CallExpression	free ( my_fs_domain )		5232682	0					
ANR	5232730	Callee	free		5232682	0					
ANR	5232731	Identifier	free		5232682	0					
ANR	5232732	ArgumentList	my_fs_domain		5232682	1					
ANR	5232733	Argument	my_fs_domain		5232682	0					
ANR	5232734	Identifier	my_fs_domain		5232682	0					
ANR	5232735	ExpressionStatement	"my_uid_domain = param ( ""UID_DOMAIN"" )"	1183:1:27065:27102	5232682	7	True				
ANR	5232736	AssignmentExpression	"my_uid_domain = param ( ""UID_DOMAIN"" )"		5232682	0		=			
ANR	5232737	Identifier	my_uid_domain		5232682	0					
ANR	5232738	CallExpression	"param ( ""UID_DOMAIN"" )"		5232682	1					
ANR	5232739	Callee	param		5232682	0					
ANR	5232740	Identifier	param		5232682	0					
ANR	5232741	ArgumentList	"""UID_DOMAIN"""		5232682	1					
ANR	5232742	Argument	"""UID_DOMAIN"""		5232682	0					
ANR	5232743	PrimaryExpression	"""UID_DOMAIN"""		5232682	0					
ANR	5232744	IfStatement	if ( my_uid_domain )		5232682	8					
ANR	5232745	Condition	my_uid_domain	1184:5:27109:27121	5232682	0	True				
ANR	5232746	Identifier	my_uid_domain		5232682	0					
ANR	5232747	CompoundStatement		15:21:329:329	5232682	1					
ANR	5232748	ExpressionStatement	REMOTE_CONDOR_register_uid_domain ( my_uid_domain )	1185:2:27129:27179	5232682	0	True				
ANR	5232749	CallExpression	REMOTE_CONDOR_register_uid_domain ( my_uid_domain )		5232682	0					
ANR	5232750	Callee	REMOTE_CONDOR_register_uid_domain		5232682	0					
ANR	5232751	Identifier	REMOTE_CONDOR_register_uid_domain		5232682	0					
ANR	5232752	ArgumentList	my_uid_domain		5232682	1					
ANR	5232753	Argument	my_uid_domain		5232682	0					
ANR	5232754	Identifier	my_uid_domain		5232682	0					
ANR	5232755	ExpressionStatement	free ( my_uid_domain )	1186:2:27183:27202	5232682	1	True				
ANR	5232756	CallExpression	free ( my_uid_domain )		5232682	0					
ANR	5232757	Callee	free		5232682	0					
ANR	5232758	Identifier	free		5232682	0					
ANR	5232759	ArgumentList	my_uid_domain		5232682	1					
ANR	5232760	Argument	my_uid_domain		5232682	0					
ANR	5232761	Identifier	my_uid_domain		5232682	0					
ANR	5232762	ExpressionStatement	ckptpltfrm = sysapi_ckptpltfrm ( )	1189:1:27209:27241	5232682	9	True				
ANR	5232763	AssignmentExpression	ckptpltfrm = sysapi_ckptpltfrm ( )		5232682	0		=			
ANR	5232764	Identifier	ckptpltfrm		5232682	0					
ANR	5232765	CallExpression	sysapi_ckptpltfrm ( )		5232682	1					
ANR	5232766	Callee	sysapi_ckptpltfrm		5232682	0					
ANR	5232767	Identifier	sysapi_ckptpltfrm		5232682	0					
ANR	5232768	ArgumentList			5232682	1					
ANR	5232769	ExpressionStatement	"REMOTE_CONDOR_register_ckpt_platform ( ckptpltfrm , strlen ( ckptpltfrm ) + 1 )"	1191:1:27317:27390	5232682	10	True				
ANR	5232770	CallExpression	"REMOTE_CONDOR_register_ckpt_platform ( ckptpltfrm , strlen ( ckptpltfrm ) + 1 )"		5232682	0					
ANR	5232771	Callee	REMOTE_CONDOR_register_ckpt_platform		5232682	0					
ANR	5232772	Identifier	REMOTE_CONDOR_register_ckpt_platform		5232682	0					
ANR	5232773	ArgumentList	ckptpltfrm		5232682	1					
ANR	5232774	Argument	ckptpltfrm		5232682	0					
ANR	5232775	Identifier	ckptpltfrm		5232682	0					
ANR	5232776	Argument	strlen ( ckptpltfrm ) + 1		5232682	1					
ANR	5232777	AdditiveExpression	strlen ( ckptpltfrm ) + 1		5232682	0		+			
ANR	5232778	CallExpression	strlen ( ckptpltfrm )		5232682	0					
ANR	5232779	Callee	strlen		5232682	0					
ANR	5232780	Identifier	strlen		5232682	0					
ANR	5232781	ArgumentList	ckptpltfrm		5232682	1					
ANR	5232782	Argument	ckptpltfrm		5232682	0					
ANR	5232783	Identifier	ckptpltfrm		5232682	0					
ANR	5232784	PrimaryExpression	1		5232682	1					
ANR	5232785	ExpressionStatement	"ckpt_server_host = param ( ""CKPT_SERVER_HOST"" )"	1194:1:27416:27462	5232682	11	True				
ANR	5232786	AssignmentExpression	"ckpt_server_host = param ( ""CKPT_SERVER_HOST"" )"		5232682	0		=			
ANR	5232787	Identifier	ckpt_server_host		5232682	0					
ANR	5232788	CallExpression	"param ( ""CKPT_SERVER_HOST"" )"		5232682	1					
ANR	5232789	Callee	param		5232682	0					
ANR	5232790	Identifier	param		5232682	0					
ANR	5232791	ArgumentList	"""CKPT_SERVER_HOST"""		5232682	1					
ANR	5232792	Argument	"""CKPT_SERVER_HOST"""		5232682	0					
ANR	5232793	PrimaryExpression	"""CKPT_SERVER_HOST"""		5232682	0					
ANR	5232794	IfStatement	if ( ckpt_server_host )		5232682	12					
ANR	5232795	Condition	ckpt_server_host	1195:5:27469:27484	5232682	0	True				
ANR	5232796	Identifier	ckpt_server_host		5232682	0					
ANR	5232797	CompoundStatement		26:24:692:692	5232682	1					
ANR	5232798	ExpressionStatement	REMOTE_CONDOR_register_ckpt_server ( ckpt_server_host )	1196:2:27492:27546	5232682	0	True				
ANR	5232799	CallExpression	REMOTE_CONDOR_register_ckpt_server ( ckpt_server_host )		5232682	0					
ANR	5232800	Callee	REMOTE_CONDOR_register_ckpt_server		5232682	0					
ANR	5232801	Identifier	REMOTE_CONDOR_register_ckpt_server		5232682	0					
ANR	5232802	ArgumentList	ckpt_server_host		5232682	1					
ANR	5232803	Argument	ckpt_server_host		5232682	0					
ANR	5232804	Identifier	ckpt_server_host		5232682	0					
ANR	5232805	ExpressionStatement	free ( ckpt_server_host )	1197:2:27550:27572	5232682	1	True				
ANR	5232806	CallExpression	free ( ckpt_server_host )		5232682	0					
ANR	5232807	Callee	free		5232682	0					
ANR	5232808	Identifier	free		5232682	0					
ANR	5232809	ArgumentList	ckpt_server_host		5232682	1					
ANR	5232810	Argument	ckpt_server_host		5232682	0					
ANR	5232811	Identifier	ckpt_server_host		5232682	0					
ANR	5232812	ExpressionStatement	"arch = param ( ""ARCH"" )"	1200:1:27579:27601	5232682	13	True				
ANR	5232813	AssignmentExpression	"arch = param ( ""ARCH"" )"		5232682	0		=			
ANR	5232814	Identifier	arch		5232682	0					
ANR	5232815	CallExpression	"param ( ""ARCH"" )"		5232682	1					
ANR	5232816	Callee	param		5232682	0					
ANR	5232817	Identifier	param		5232682	0					
ANR	5232818	ArgumentList	"""ARCH"""		5232682	1					
ANR	5232819	Argument	"""ARCH"""		5232682	0					
ANR	5232820	PrimaryExpression	"""ARCH"""		5232682	0					
ANR	5232821	IfStatement	if ( arch )		5232682	14					
ANR	5232822	Condition	arch	1201:5:27608:27611	5232682	0	True				
ANR	5232823	Identifier	arch		5232682	0					
ANR	5232824	CompoundStatement		32:11:818:818	5232682	1					
ANR	5232825	ExpressionStatement	REMOTE_CONDOR_register_arch ( arch )	1202:2:27618:27653	5232682	0	True				
ANR	5232826	CallExpression	REMOTE_CONDOR_register_arch ( arch )		5232682	0					
ANR	5232827	Callee	REMOTE_CONDOR_register_arch		5232682	0					
ANR	5232828	Identifier	REMOTE_CONDOR_register_arch		5232682	0					
ANR	5232829	ArgumentList	arch		5232682	1					
ANR	5232830	Argument	arch		5232682	0					
ANR	5232831	Identifier	arch		5232682	0					
ANR	5232832	ExpressionStatement	free ( arch )	1203:2:27657:27667	5232682	1	True				
ANR	5232833	CallExpression	free ( arch )		5232682	0					
ANR	5232834	Callee	free		5232682	0					
ANR	5232835	Identifier	free		5232682	0					
ANR	5232836	ArgumentList	arch		5232682	1					
ANR	5232837	Argument	arch		5232682	0					
ANR	5232838	Identifier	arch		5232682	0					
ANR	5232839	ExpressionStatement	"opsys = param ( ""OPSYS"" )"	1206:1:27674:27698	5232682	15	True				
ANR	5232840	AssignmentExpression	"opsys = param ( ""OPSYS"" )"		5232682	0		=			
ANR	5232841	Identifier	opsys		5232682	0					
ANR	5232842	CallExpression	"param ( ""OPSYS"" )"		5232682	1					
ANR	5232843	Callee	param		5232682	0					
ANR	5232844	Identifier	param		5232682	0					
ANR	5232845	ArgumentList	"""OPSYS"""		5232682	1					
ANR	5232846	Argument	"""OPSYS"""		5232682	0					
ANR	5232847	PrimaryExpression	"""OPSYS"""		5232682	0					
ANR	5232848	IfStatement	if ( opsys )		5232682	16					
ANR	5232849	Condition	opsys	1207:5:27705:27709	5232682	0	True				
ANR	5232850	Identifier	opsys		5232682	0					
ANR	5232851	CompoundStatement		38:12:916:916	5232682	1					
ANR	5232852	ExpressionStatement	REMOTE_CONDOR_register_opsys ( opsys )	1208:2:27716:27753	5232682	0	True				
ANR	5232853	CallExpression	REMOTE_CONDOR_register_opsys ( opsys )		5232682	0					
ANR	5232854	Callee	REMOTE_CONDOR_register_opsys		5232682	0					
ANR	5232855	Identifier	REMOTE_CONDOR_register_opsys		5232682	0					
ANR	5232856	ArgumentList	opsys		5232682	1					
ANR	5232857	Argument	opsys		5232682	0					
ANR	5232858	Identifier	opsys		5232682	0					
ANR	5232859	ExpressionStatement	free ( opsys )	1209:2:27757:27768	5232682	1	True				
ANR	5232860	CallExpression	free ( opsys )		5232682	0					
ANR	5232861	Callee	free		5232682	0					
ANR	5232862	Identifier	free		5232682	0					
ANR	5232863	ArgumentList	opsys		5232682	1					
ANR	5232864	Argument	opsys		5232682	0					
ANR	5232865	Identifier	opsys		5232682	0					
ANR	5232866	ReturnType	void		5232682	1					
ANR	5232867	Identifier	init_environment_info		5232682	2					
ANR	5232868	ParameterList			5232682	3					
ANR	5232869	CFGEntryNode	ENTRY		5232682		True				
ANR	5232870	CFGExitNode	EXIT		5232682		True				
ANR	5232871	Symbol	sysapi_ckptpltfrm		5232682						
ANR	5232872	Symbol	strlen		5232682						
ANR	5232873	Symbol	ckpt_server_host		5232682						
ANR	5232874	Symbol	param		5232682						
ANR	5232875	Symbol	arch		5232682						
ANR	5232876	Symbol	ckptpltfrm		5232682						
ANR	5232877	Symbol	my_uid_domain		5232682						
ANR	5232878	Symbol	opsys		5232682						
ANR	5232879	Symbol	my_fs_domain		5232682						
