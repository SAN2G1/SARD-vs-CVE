command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2503188	File	data/converged/CVE-2011-4930_htcondor/src_classad_cclassad.cpp								
ANR	2503189	ClassDef	cclassad	32:0:1025:1057							
ANR	2503190	DeclStmt									
ANR	2503191	Decl							ClassAd	ClassAd *	ad
ANR	2503192	Function	cclassad_create	36:0:1061:1361							
ANR	2503193	FunctionDef	cclassad_create (const char * str)		2503192	0					
ANR	2503194	CompoundStatement		37:0:1114:1361	2503192	0					
ANR	2503195	IdentifierDeclStatement	ClassAdParser parser ;	38:1:1117:1137	2503192	0	True				
ANR	2503196	IdentifierDecl	parser		2503192	0					
ANR	2503197	IdentifierDeclType	ClassAdParser		2503192	0					
ANR	2503198	Identifier	parser		2503192	1					
ANR	2503199	IdentifierDeclStatement	struct cclassad * c ;	39:1:1140:1158	2503192	1	True				
ANR	2503200	IdentifierDecl	* c		2503192	0					
ANR	2503201	IdentifierDeclType	struct cclassad *		2503192	0					
ANR	2503202	Identifier	c		2503192	1					
ANR	2503203	ExpressionStatement	c = ( struct cclassad * ) malloc ( sizeof ( * c ) )	41:1:1162:1204	2503192	2	True				
ANR	2503204	AssignmentExpression	c = ( struct cclassad * ) malloc ( sizeof ( * c ) )		2503192	0		=			
ANR	2503205	Identifier	c		2503192	0					
ANR	2503206	CastExpression	( struct cclassad * ) malloc ( sizeof ( * c ) )		2503192	1					
ANR	2503207	CastTarget	struct cclassad *		2503192	0					
ANR	2503208	CallExpression	malloc ( sizeof ( * c ) )		2503192	1					
ANR	2503209	Callee	malloc		2503192	0					
ANR	2503210	Identifier	malloc		2503192	0					
ANR	2503211	ArgumentList	sizeof ( * c )		2503192	1					
ANR	2503212	Argument	sizeof ( * c )		2503192	0					
ANR	2503213	SizeofExpression	sizeof ( * c )		2503192	0					
ANR	2503214	Sizeof	sizeof		2503192	0					
ANR	2503215	UnaryOperationExpression	* c		2503192	1					
ANR	2503216	UnaryOperator	*		2503192	0					
ANR	2503217	Identifier	c		2503192	1					
ANR	2503218	IfStatement	if ( ! c )		2503192	3					
ANR	2503219	Condition	! c	42:4:1210:1211	2503192	0	True				
ANR	2503220	UnaryOperationExpression	! c		2503192	0					
ANR	2503221	UnaryOperator	!		2503192	0					
ANR	2503222	Identifier	c		2503192	1					
ANR	2503223	ReturnStatement	return 0 ;	42:8:1214:1222	2503192	1	True				
ANR	2503224	PrimaryExpression	0		2503192	0					
ANR	2503225	IfStatement	if ( str )		2503192	4					
ANR	2503226	Condition	str	44:4:1229:1231	2503192	0	True				
ANR	2503227	Identifier	str		2503192	0					
ANR	2503228	CompoundStatement		8:9:119:119	2503192	1					
ANR	2503229	ExpressionStatement	c -> ad = parser . ParseClassAd ( str )	45:2:1238:1270	2503192	0	True				
ANR	2503230	AssignmentExpression	c -> ad = parser . ParseClassAd ( str )		2503192	0		=			
ANR	2503231	PtrMemberAccess	c -> ad		2503192	0					
ANR	2503232	Identifier	c		2503192	0					
ANR	2503233	Identifier	ad		2503192	1					
ANR	2503234	CallExpression	parser . ParseClassAd ( str )		2503192	1					
ANR	2503235	Callee	parser . ParseClassAd		2503192	0					
ANR	2503236	MemberAccess	parser . ParseClassAd		2503192	0					
ANR	2503237	Identifier	parser		2503192	0					
ANR	2503238	Identifier	ParseClassAd		2503192	1					
ANR	2503239	ArgumentList	str		2503192	1					
ANR	2503240	Argument	str		2503192	0					
ANR	2503241	Identifier	str		2503192	0					
ANR	2503242	ElseStatement	else		2503192	0					
ANR	2503243	CompoundStatement		10:8:165:165	2503192	0					
ANR	2503244	Statement	c	47:2:1284:1284	2503192	0	True				
ANR	2503245	Statement	->	47:3:1285:1286	2503192	1	True				
ANR	2503246	Statement	ad	47:5:1287:1288	2503192	2	True				
ANR	2503247	Statement	=	47:8:1290:1290	2503192	3	True				
ANR	2503248	Statement	new	47:10:1292:1294	2503192	4	True				
ANR	2503249	ExpressionStatement	ClassAd	47:14:1296:1303	2503192	5	True				
ANR	2503250	Identifier	ClassAd		2503192	0					
ANR	2503251	IfStatement	if ( ! c -> ad )		2503192	5					
ANR	2503252	Condition	! c -> ad	50:4:1313:1318	2503192	0	True				
ANR	2503253	UnaryOperationExpression	! c -> ad		2503192	0					
ANR	2503254	UnaryOperator	!		2503192	0					
ANR	2503255	PtrMemberAccess	c -> ad		2503192	1					
ANR	2503256	Identifier	c		2503192	0					
ANR	2503257	Identifier	ad		2503192	1					
ANR	2503258	CompoundStatement		14:12:206:206	2503192	1					
ANR	2503259	ExpressionStatement	free ( c )	51:2:1325:1332	2503192	0	True				
ANR	2503260	CallExpression	free ( c )		2503192	0					
ANR	2503261	Callee	free		2503192	0					
ANR	2503262	Identifier	free		2503192	0					
ANR	2503263	ArgumentList	c		2503192	1					
ANR	2503264	Argument	c		2503192	0					
ANR	2503265	Identifier	c		2503192	0					
ANR	2503266	ReturnStatement	return 0 ;	52:2:1336:1344	2503192	1	True				
ANR	2503267	PrimaryExpression	0		2503192	0					
ANR	2503268	ReturnStatement	return c ;	55:1:1351:1359	2503192	6	True				
ANR	2503269	Identifier	c		2503192	0					
ANR	2503270	ReturnType	struct cclassad *		2503192	1					
ANR	2503271	Identifier	cclassad_create		2503192	2					
ANR	2503272	ParameterList	const char * str		2503192	3					
ANR	2503273	Parameter	const char * str	36:35:1096:1110	2503192	0	True				
ANR	2503274	ParameterType	const char *		2503192	0					
ANR	2503275	Identifier	str		2503192	1					
ANR	2503276	CFGEntryNode	ENTRY		2503192		True				
ANR	2503277	CFGExitNode	EXIT		2503192		True				
ANR	2503278	Symbol	str		2503192						
ANR	2503279	Symbol	malloc		2503192						
ANR	2503280	Symbol	c		2503192						
ANR	2503281	Symbol	parser		2503192						
ANR	2503282	Symbol	* c		2503192						
ANR	2503283	Symbol	parser . ParseClassAd		2503192						
ANR	2503284	Symbol	c -> ad		2503192						
ANR	2503285	Function	cclassad_delete	58:0:1364:1458							
ANR	2503286	FunctionDef	cclassad_delete (struct cclassad * c)		2503285	0					
ANR	2503287	CompoundStatement		59:0:1407:1458	2503285	0					
ANR	2503288	IfStatement	if ( c )		2503285	0					
ANR	2503289	Condition	c	60:4:1413:1413	2503285	0	True				
ANR	2503290	Identifier	c		2503285	0					
ANR	2503291	CompoundStatement		2:7:8:8	2503285	1					
ANR	2503292	IfStatement	if ( c -> ad )		2503285	0					
ANR	2503293	Condition	c -> ad	61:5:1423:1427	2503285	0	True				
ANR	2503294	PtrMemberAccess	c -> ad		2503285	0					
ANR	2503295	Identifier	c		2503285	0					
ANR	2503296	Identifier	ad		2503285	1					
ANR	2503297	Statement	delete	61:12:1430:1435	2503285	1	True				
ANR	2503298	ExpressionStatement	c -> ad	61:19:1437:1442	2503285	1	True				
ANR	2503299	PtrMemberAccess	c -> ad		2503285	0					
ANR	2503300	Identifier	c		2503285	0					
ANR	2503301	Identifier	ad		2503285	1					
ANR	2503302	ExpressionStatement	free ( c )	62:2:1446:1453	2503285	2	True				
ANR	2503303	CallExpression	free ( c )		2503285	0					
ANR	2503304	Callee	free		2503285	0					
ANR	2503305	Identifier	free		2503285	0					
ANR	2503306	ArgumentList	c		2503285	1					
ANR	2503307	Argument	c		2503285	0					
ANR	2503308	Identifier	c		2503285	0					
ANR	2503309	ReturnType	void		2503285	1					
ANR	2503310	Identifier	cclassad_delete		2503285	2					
ANR	2503311	ParameterList	struct cclassad * c		2503285	3					
ANR	2503312	Parameter	struct cclassad * c	58:22:1386:1403	2503285	0	True				
ANR	2503313	ParameterType	struct cclassad *		2503285	0					
ANR	2503314	Identifier	c		2503285	1					
ANR	2503315	CFGEntryNode	ENTRY		2503285		True				
ANR	2503316	CFGExitNode	EXIT		2503285		True				
ANR	2503317	Symbol	c		2503285						
ANR	2503318	Symbol	* c		2503285						
ANR	2503319	Symbol	c -> ad		2503285						
ANR	2503320	Function	cclassad_unparse	66:0:1461:1604							
ANR	2503321	FunctionDef	cclassad_unparse (struct cclassad * c)		2503320	0					
ANR	2503322	CompoundStatement		67:0:1507:1604	2503320	0					
ANR	2503323	IdentifierDeclStatement	ClassAdUnParser unparser ;	68:1:1510:1534	2503320	0	True				
ANR	2503324	IdentifierDecl	unparser		2503320	0					
ANR	2503325	IdentifierDeclType	ClassAdUnParser		2503320	0					
ANR	2503326	Identifier	unparser		2503320	1					
ANR	2503327	IdentifierDeclStatement	string s ;	69:1:1537:1545	2503320	1	True				
ANR	2503328	IdentifierDecl	s		2503320	0					
ANR	2503329	IdentifierDeclType	string		2503320	0					
ANR	2503330	Identifier	s		2503320	1					
ANR	2503331	ExpressionStatement	"unparser . Unparse ( s , c -> ad )"	71:1:1549:1574	2503320	2	True				
ANR	2503332	CallExpression	"unparser . Unparse ( s , c -> ad )"		2503320	0					
ANR	2503333	Callee	unparser . Unparse		2503320	0					
ANR	2503334	MemberAccess	unparser . Unparse		2503320	0					
ANR	2503335	Identifier	unparser		2503320	0					
ANR	2503336	Identifier	Unparse		2503320	1					
ANR	2503337	ArgumentList	s		2503320	1					
ANR	2503338	Argument	s		2503320	0					
ANR	2503339	Identifier	s		2503320	0					
ANR	2503340	Argument	c -> ad		2503320	1					
ANR	2503341	PtrMemberAccess	c -> ad		2503320	0					
ANR	2503342	Identifier	c		2503320	0					
ANR	2503343	Identifier	ad		2503320	1					
ANR	2503344	ReturnStatement	return strdup ( s . c_str ( ) ) ;	73:1:1578:1602	2503320	3	True				
ANR	2503345	CallExpression	strdup ( s . c_str ( ) )		2503320	0					
ANR	2503346	Callee	strdup		2503320	0					
ANR	2503347	Identifier	strdup		2503320	0					
ANR	2503348	ArgumentList	s . c_str ( )		2503320	1					
ANR	2503349	Argument	s . c_str ( )		2503320	0					
ANR	2503350	CallExpression	s . c_str ( )		2503320	0					
ANR	2503351	Callee	s . c_str		2503320	0					
ANR	2503352	MemberAccess	s . c_str		2503320	0					
ANR	2503353	Identifier	s		2503320	0					
ANR	2503354	Identifier	c_str		2503320	1					
ANR	2503355	ArgumentList			2503320	1					
ANR	2503356	ReturnType	char *		2503320	1					
ANR	2503357	Identifier	cclassad_unparse		2503320	2					
ANR	2503358	ParameterList	struct cclassad * c		2503320	3					
ANR	2503359	Parameter	struct cclassad * c	66:25:1486:1503	2503320	0	True				
ANR	2503360	ParameterType	struct cclassad *		2503320	0					
ANR	2503361	Identifier	c		2503320	1					
ANR	2503362	CFGEntryNode	ENTRY		2503320		True				
ANR	2503363	CFGExitNode	EXIT		2503320		True				
ANR	2503364	Symbol	c		2503320						
ANR	2503365	Symbol	s		2503320						
ANR	2503366	Symbol	unparser		2503320						
ANR	2503367	Symbol	s . c_str		2503320						
ANR	2503368	Symbol	strdup		2503320						
ANR	2503369	Symbol	* c		2503320						
ANR	2503370	Symbol	c -> ad		2503320						
ANR	2503371	Function	cclassad_unparse_xml	76:0:1607:1757							
ANR	2503372	FunctionDef	cclassad_unparse_xml (struct cclassad * c)		2503371	0					
ANR	2503373	CompoundStatement		77:0:1657:1757	2503371	0					
ANR	2503374	IdentifierDeclStatement	ClassAdXMLUnParser unparser ;	78:1:1660:1687	2503371	0	True				
ANR	2503375	IdentifierDecl	unparser		2503371	0					
ANR	2503376	IdentifierDeclType	ClassAdXMLUnParser		2503371	0					
ANR	2503377	Identifier	unparser		2503371	1					
ANR	2503378	IdentifierDeclStatement	string s ;	79:1:1690:1698	2503371	1	True				
ANR	2503379	IdentifierDecl	s		2503371	0					
ANR	2503380	IdentifierDeclType	string		2503371	0					
ANR	2503381	Identifier	s		2503371	1					
ANR	2503382	ExpressionStatement	"unparser . Unparse ( s , c -> ad )"	81:1:1702:1727	2503371	2	True				
ANR	2503383	CallExpression	"unparser . Unparse ( s , c -> ad )"		2503371	0					
ANR	2503384	Callee	unparser . Unparse		2503371	0					
ANR	2503385	MemberAccess	unparser . Unparse		2503371	0					
ANR	2503386	Identifier	unparser		2503371	0					
ANR	2503387	Identifier	Unparse		2503371	1					
ANR	2503388	ArgumentList	s		2503371	1					
ANR	2503389	Argument	s		2503371	0					
ANR	2503390	Identifier	s		2503371	0					
ANR	2503391	Argument	c -> ad		2503371	1					
ANR	2503392	PtrMemberAccess	c -> ad		2503371	0					
ANR	2503393	Identifier	c		2503371	0					
ANR	2503394	Identifier	ad		2503371	1					
ANR	2503395	ReturnStatement	return strdup ( s . c_str ( ) ) ;	83:1:1731:1755	2503371	3	True				
ANR	2503396	CallExpression	strdup ( s . c_str ( ) )		2503371	0					
ANR	2503397	Callee	strdup		2503371	0					
ANR	2503398	Identifier	strdup		2503371	0					
ANR	2503399	ArgumentList	s . c_str ( )		2503371	1					
ANR	2503400	Argument	s . c_str ( )		2503371	0					
ANR	2503401	CallExpression	s . c_str ( )		2503371	0					
ANR	2503402	Callee	s . c_str		2503371	0					
ANR	2503403	MemberAccess	s . c_str		2503371	0					
ANR	2503404	Identifier	s		2503371	0					
ANR	2503405	Identifier	c_str		2503371	1					
ANR	2503406	ArgumentList			2503371	1					
ANR	2503407	ReturnType	char *		2503371	1					
ANR	2503408	Identifier	cclassad_unparse_xml		2503371	2					
ANR	2503409	ParameterList	struct cclassad * c		2503371	3					
ANR	2503410	Parameter	struct cclassad * c	76:29:1636:1653	2503371	0	True				
ANR	2503411	ParameterType	struct cclassad *		2503371	0					
ANR	2503412	Identifier	c		2503371	1					
ANR	2503413	CFGEntryNode	ENTRY		2503371		True				
ANR	2503414	CFGExitNode	EXIT		2503371		True				
ANR	2503415	Symbol	c		2503371						
ANR	2503416	Symbol	s		2503371						
ANR	2503417	Symbol	unparser		2503371						
ANR	2503418	Symbol	s . c_str		2503371						
ANR	2503419	Symbol	strdup		2503371						
ANR	2503420	Symbol	* c		2503371						
ANR	2503421	Symbol	c -> ad		2503371						
ANR	2503422	Function	cclassad_match	86:0:1760:2230							
ANR	2503423	FunctionDef	"cclassad_match (struct cclassad * a , struct cclassad * b)"		2503422	0					
ANR	2503424	CompoundStatement		87:0:1821:2230	2503422	0					
ANR	2503425	IdentifierDeclStatement	char * expr ;	88:1:1824:1834	2503422	0	True				
ANR	2503426	IdentifierDecl	* expr		2503422	0					
ANR	2503427	IdentifierDeclType	char *		2503422	0					
ANR	2503428	Identifier	expr		2503422	1					
ANR	2503429	IdentifierDeclStatement	int result ;	89:1:1837:1847	2503422	1	True				
ANR	2503430	IdentifierDecl	result		2503422	0					
ANR	2503431	IdentifierDeclType	int		2503422	0					
ANR	2503432	Identifier	result		2503422	1					
ANR	2503433	IfStatement	"if ( ! cclassad_evaluate_to_expr ( a , ""requirements"" , & expr ) )"		2503422	2					
ANR	2503434	Condition	"! cclassad_evaluate_to_expr ( a , ""requirements"" , & expr )"	91:4:1855:1904	2503422	0	True				
ANR	2503435	UnaryOperationExpression	"! cclassad_evaluate_to_expr ( a , ""requirements"" , & expr )"		2503422	0					
ANR	2503436	UnaryOperator	!		2503422	0					
ANR	2503437	CallExpression	"cclassad_evaluate_to_expr ( a , ""requirements"" , & expr )"		2503422	1					
ANR	2503438	Callee	cclassad_evaluate_to_expr		2503422	0					
ANR	2503439	Identifier	cclassad_evaluate_to_expr		2503422	0					
ANR	2503440	ArgumentList	a		2503422	1					
ANR	2503441	Argument	a		2503422	0					
ANR	2503442	Identifier	a		2503422	0					
ANR	2503443	Argument	"""requirements"""		2503422	1					
ANR	2503444	PrimaryExpression	"""requirements"""		2503422	0					
ANR	2503445	Argument	& expr		2503422	2					
ANR	2503446	UnaryOperationExpression	& expr		2503422	0					
ANR	2503447	UnaryOperator	&		2503422	0					
ANR	2503448	Identifier	expr		2503422	1					
ANR	2503449	CompoundStatement		5:56:85:85	2503422	1					
ANR	2503450	ReturnStatement	return 0 ;	92:2:1911:1919	2503422	0	True				
ANR	2503451	PrimaryExpression	0		2503422	0					
ANR	2503452	IfStatement	"if ( ! cclassad_evaluate_to_bool ( b , expr , & result ) )"		2503422	3					
ANR	2503453	Condition	"! cclassad_evaluate_to_bool ( b , expr , & result )"	95:4:1929:1970	2503422	0	True				
ANR	2503454	UnaryOperationExpression	"! cclassad_evaluate_to_bool ( b , expr , & result )"		2503422	0					
ANR	2503455	UnaryOperator	!		2503422	0					
ANR	2503456	CallExpression	"cclassad_evaluate_to_bool ( b , expr , & result )"		2503422	1					
ANR	2503457	Callee	cclassad_evaluate_to_bool		2503422	0					
ANR	2503458	Identifier	cclassad_evaluate_to_bool		2503422	0					
ANR	2503459	ArgumentList	b		2503422	1					
ANR	2503460	Argument	b		2503422	0					
ANR	2503461	Identifier	b		2503422	0					
ANR	2503462	Argument	expr		2503422	1					
ANR	2503463	Identifier	expr		2503422	0					
ANR	2503464	Argument	& result		2503422	2					
ANR	2503465	UnaryOperationExpression	& result		2503422	0					
ANR	2503466	UnaryOperator	&		2503422	0					
ANR	2503467	Identifier	result		2503422	1					
ANR	2503468	CompoundStatement		9:48:151:151	2503422	1					
ANR	2503469	IfStatement	if ( ! result )		2503422	0					
ANR	2503470	Condition	! result	96:5:1980:1986	2503422	0	True				
ANR	2503471	UnaryOperationExpression	! result		2503422	0					
ANR	2503472	UnaryOperator	!		2503422	0					
ANR	2503473	Identifier	result		2503422	1					
ANR	2503474	CompoundStatement		10:14:167:167	2503422	1					
ANR	2503475	ExpressionStatement	free ( expr )	97:3:1994:2004	2503422	0	True				
ANR	2503476	CallExpression	free ( expr )		2503422	0					
ANR	2503477	Callee	free		2503422	0					
ANR	2503478	Identifier	free		2503422	0					
ANR	2503479	ArgumentList	expr		2503422	1					
ANR	2503480	Argument	expr		2503422	0					
ANR	2503481	Identifier	expr		2503422	0					
ANR	2503482	ReturnStatement	return 0 ;	98:3:2009:2017	2503422	1	True				
ANR	2503483	PrimaryExpression	0		2503422	0					
ANR	2503484	ExpressionStatement	free ( expr )	101:1:2027:2037	2503422	4	True				
ANR	2503485	CallExpression	free ( expr )		2503422	0					
ANR	2503486	Callee	free		2503422	0					
ANR	2503487	Identifier	free		2503422	0					
ANR	2503488	ArgumentList	expr		2503422	1					
ANR	2503489	Argument	expr		2503422	0					
ANR	2503490	Identifier	expr		2503422	0					
ANR	2503491	IfStatement	"if ( ! cclassad_evaluate_to_expr ( b , ""requirements"" , & expr ) )"		2503422	5					
ANR	2503492	Condition	"! cclassad_evaluate_to_expr ( b , ""requirements"" , & expr )"	103:4:2044:2093	2503422	0	True				
ANR	2503493	UnaryOperationExpression	"! cclassad_evaluate_to_expr ( b , ""requirements"" , & expr )"		2503422	0					
ANR	2503494	UnaryOperator	!		2503422	0					
ANR	2503495	CallExpression	"cclassad_evaluate_to_expr ( b , ""requirements"" , & expr )"		2503422	1					
ANR	2503496	Callee	cclassad_evaluate_to_expr		2503422	0					
ANR	2503497	Identifier	cclassad_evaluate_to_expr		2503422	0					
ANR	2503498	ArgumentList	b		2503422	1					
ANR	2503499	Argument	b		2503422	0					
ANR	2503500	Identifier	b		2503422	0					
ANR	2503501	Argument	"""requirements"""		2503422	1					
ANR	2503502	PrimaryExpression	"""requirements"""		2503422	0					
ANR	2503503	Argument	& expr		2503422	2					
ANR	2503504	UnaryOperationExpression	& expr		2503422	0					
ANR	2503505	UnaryOperator	&		2503422	0					
ANR	2503506	Identifier	expr		2503422	1					
ANR	2503507	CompoundStatement		17:56:274:274	2503422	1					
ANR	2503508	ReturnStatement	return 0 ;	104:2:2100:2108	2503422	0	True				
ANR	2503509	PrimaryExpression	0		2503422	0					
ANR	2503510	IfStatement	"if ( ! cclassad_evaluate_to_bool ( a , expr , & result ) )"		2503422	6					
ANR	2503511	Condition	"! cclassad_evaluate_to_bool ( a , expr , & result )"	107:4:2118:2159	2503422	0	True				
ANR	2503512	UnaryOperationExpression	"! cclassad_evaluate_to_bool ( a , expr , & result )"		2503422	0					
ANR	2503513	UnaryOperator	!		2503422	0					
ANR	2503514	CallExpression	"cclassad_evaluate_to_bool ( a , expr , & result )"		2503422	1					
ANR	2503515	Callee	cclassad_evaluate_to_bool		2503422	0					
ANR	2503516	Identifier	cclassad_evaluate_to_bool		2503422	0					
ANR	2503517	ArgumentList	a		2503422	1					
ANR	2503518	Argument	a		2503422	0					
ANR	2503519	Identifier	a		2503422	0					
ANR	2503520	Argument	expr		2503422	1					
ANR	2503521	Identifier	expr		2503422	0					
ANR	2503522	Argument	& result		2503422	2					
ANR	2503523	UnaryOperationExpression	& result		2503422	0					
ANR	2503524	UnaryOperator	&		2503422	0					
ANR	2503525	Identifier	result		2503422	1					
ANR	2503526	CompoundStatement		21:48:340:340	2503422	1					
ANR	2503527	ExpressionStatement	free ( expr )	108:2:2166:2176	2503422	0	True				
ANR	2503528	CallExpression	free ( expr )		2503422	0					
ANR	2503529	Callee	free		2503422	0					
ANR	2503530	Identifier	free		2503422	0					
ANR	2503531	ArgumentList	expr		2503422	1					
ANR	2503532	Argument	expr		2503422	0					
ANR	2503533	Identifier	expr		2503422	0					
ANR	2503534	IfStatement	if ( ! result )		2503422	1					
ANR	2503535	Condition	! result	109:5:2183:2189	2503422	0	True				
ANR	2503536	UnaryOperationExpression	! result		2503422	0					
ANR	2503537	UnaryOperator	!		2503422	0					
ANR	2503538	Identifier	result		2503422	1					
ANR	2503539	ReturnStatement	return 0 ;	109:14:2192:2200	2503422	1	True				
ANR	2503540	PrimaryExpression	0		2503422	0					
ANR	2503541	ExpressionStatement	free ( expr )	111:1:2206:2216	2503422	7	True				
ANR	2503542	CallExpression	free ( expr )		2503422	0					
ANR	2503543	Callee	free		2503422	0					
ANR	2503544	Identifier	free		2503422	0					
ANR	2503545	ArgumentList	expr		2503422	1					
ANR	2503546	Argument	expr		2503422	0					
ANR	2503547	Identifier	expr		2503422	0					
ANR	2503548	ReturnStatement	return 1 ;	113:1:2220:2228	2503422	8	True				
ANR	2503549	PrimaryExpression	1		2503422	0					
ANR	2503550	ReturnType	int		2503422	1					
ANR	2503551	Identifier	cclassad_match		2503422	2					
ANR	2503552	ParameterList	"struct cclassad * a , struct cclassad * b"		2503422	3					
ANR	2503553	Parameter	struct cclassad * a	86:20:1780:1797	2503422	0	True				
ANR	2503554	ParameterType	struct cclassad *		2503422	0					
ANR	2503555	Identifier	a		2503422	1					
ANR	2503556	Parameter	struct cclassad * b	86:40:1800:1817	2503422	1	True				
ANR	2503557	ParameterType	struct cclassad *		2503422	0					
ANR	2503558	Identifier	b		2503422	1					
ANR	2503559	CFGEntryNode	ENTRY		2503422		True				
ANR	2503560	CFGExitNode	EXIT		2503422		True				
ANR	2503561	Symbol	result		2503422						
ANR	2503562	Symbol	a		2503422						
ANR	2503563	Symbol	b		2503422						
ANR	2503564	Symbol	& expr		2503422						
ANR	2503565	Symbol	& result		2503422						
ANR	2503566	Symbol	expr		2503422						
ANR	2503567	Symbol	cclassad_evaluate_to_bool		2503422						
ANR	2503568	Symbol	cclassad_evaluate_to_expr		2503422						
ANR	2503569	Function	cclassad_insert_expr	116:0:2233:2565							
ANR	2503570	FunctionDef	"cclassad_insert_expr (struct cclassad * c , const char * attr , const char * value)"		2503569	0					
ANR	2503571	CompoundStatement		117:0:2317:2565	2503569	0					
ANR	2503572	IdentifierDeclStatement	ClassAdParser parser ;	118:1:2320:2340	2503569	0	True				
ANR	2503573	IdentifierDecl	parser		2503569	0					
ANR	2503574	IdentifierDeclType	ClassAdParser		2503569	0					
ANR	2503575	Identifier	parser		2503569	1					
ANR	2503576	IdentifierDeclStatement	string strattr ( attr ) ;	119:1:2343:2363	2503569	1	True				
ANR	2503577	IdentifierDecl	strattr ( attr )		2503569	0					
ANR	2503578	IdentifierDeclType	string		2503569	0					
ANR	2503579	Identifier	strattr		2503569	1					
ANR	2503580	Identifier	attr		2503569	2					
ANR	2503581	IdentifierDeclStatement	string strexpr ( value ) ;	120:1:2366:2387	2503569	2	True				
ANR	2503582	IdentifierDecl	strexpr ( value )		2503569	0					
ANR	2503583	IdentifierDeclType	string		2503569	0					
ANR	2503584	Identifier	strexpr		2503569	1					
ANR	2503585	Identifier	value		2503569	2					
ANR	2503586	IdentifierDeclStatement	ExprTree * e = 0 ;	121:1:2390:2403	2503569	3	True				
ANR	2503587	IdentifierDecl	* e = 0		2503569	0					
ANR	2503588	IdentifierDeclType	ExprTree *		2503569	0					
ANR	2503589	Identifier	e		2503569	1					
ANR	2503590	AssignmentExpression	* e = 0		2503569	2		=			
ANR	2503591	Identifier	e		2503569	0					
ANR	2503592	PrimaryExpression	0		2503569	1					
ANR	2503593	ExpressionStatement	e = parser . ParseExpression ( strexpr )	123:1:2407:2442	2503569	4	True				
ANR	2503594	AssignmentExpression	e = parser . ParseExpression ( strexpr )		2503569	0		=			
ANR	2503595	Identifier	e		2503569	0					
ANR	2503596	CallExpression	parser . ParseExpression ( strexpr )		2503569	1					
ANR	2503597	Callee	parser . ParseExpression		2503569	0					
ANR	2503598	MemberAccess	parser . ParseExpression		2503569	0					
ANR	2503599	Identifier	parser		2503569	0					
ANR	2503600	Identifier	ParseExpression		2503569	1					
ANR	2503601	ArgumentList	strexpr		2503569	1					
ANR	2503602	Argument	strexpr		2503569	0					
ANR	2503603	Identifier	strexpr		2503569	0					
ANR	2503604	IfStatement	if ( e )		2503569	5					
ANR	2503605	Condition	e	124:4:2448:2448	2503569	0	True				
ANR	2503606	Identifier	e		2503569	0					
ANR	2503607	CompoundStatement		8:7:133:133	2503569	1					
ANR	2503608	IfStatement	"if ( c -> ad -> Insert ( strattr , e ) )"		2503569	0					
ANR	2503609	Condition	"c -> ad -> Insert ( strattr , e )"	125:5:2458:2481	2503569	0	True				
ANR	2503610	CallExpression	"c -> ad -> Insert ( strattr , e )"		2503569	0					
ANR	2503611	Callee	c -> ad -> Insert		2503569	0					
ANR	2503612	PtrMemberAccess	c -> ad -> Insert		2503569	0					
ANR	2503613	PtrMemberAccess	c -> ad		2503569	0					
ANR	2503614	Identifier	c		2503569	0					
ANR	2503615	Identifier	ad		2503569	1					
ANR	2503616	Identifier	Insert		2503569	1					
ANR	2503617	ArgumentList	strattr		2503569	1					
ANR	2503618	Argument	strattr		2503569	0					
ANR	2503619	Identifier	strattr		2503569	0					
ANR	2503620	Argument	e		2503569	1					
ANR	2503621	Identifier	e		2503569	0					
ANR	2503622	CompoundStatement		9:31:166:166	2503569	1					
ANR	2503623	ReturnStatement	return 1 ;	126:3:2489:2497	2503569	0	True				
ANR	2503624	PrimaryExpression	1		2503569	0					
ANR	2503625	ElseStatement	else		2503569	0					
ANR	2503626	CompoundStatement		11:9:190:190	2503569	0					
ANR	2503627	Statement	delete	128:3:2513:2518	2503569	0	True				
ANR	2503628	ExpressionStatement	e	128:10:2520:2521	2503569	1	True				
ANR	2503629	Identifier	e		2503569	0					
ANR	2503630	ReturnStatement	return 0 ;	129:3:2526:2534	2503569	2	True				
ANR	2503631	PrimaryExpression	0		2503569	0					
ANR	2503632	ElseStatement	else		2503569	0					
ANR	2503633	CompoundStatement		15:8:230:230	2503569	0					
ANR	2503634	ReturnStatement	return 0 ;	132:2:2552:2560	2503569	0	True				
ANR	2503635	PrimaryExpression	0		2503569	0					
ANR	2503636	ReturnType	int		2503569	1					
ANR	2503637	Identifier	cclassad_insert_expr		2503569	2					
ANR	2503638	ParameterList	"struct cclassad * c , const char * attr , const char * value"		2503569	3					
ANR	2503639	Parameter	struct cclassad * c	116:26:2259:2276	2503569	0	True				
ANR	2503640	ParameterType	struct cclassad *		2503569	0					
ANR	2503641	Identifier	c		2503569	1					
ANR	2503642	Parameter	const char * attr	116:46:2279:2294	2503569	1	True				
ANR	2503643	ParameterType	const char *		2503569	0					
ANR	2503644	Identifier	attr		2503569	1					
ANR	2503645	Parameter	const char * value	116:64:2297:2313	2503569	2	True				
ANR	2503646	ParameterType	const char *		2503569	0					
ANR	2503647	Identifier	value		2503569	1					
ANR	2503648	CFGEntryNode	ENTRY		2503569		True				
ANR	2503649	CFGExitNode	EXIT		2503569		True				
ANR	2503650	Symbol	c		2503569						
ANR	2503651	Symbol	parser . ParseExpression		2503569						
ANR	2503652	Symbol	e		2503569						
ANR	2503653	Symbol	* c -> ad		2503569						
ANR	2503654	Symbol	* * c		2503569						
ANR	2503655	Symbol	c -> ad -> Insert		2503569						
ANR	2503656	Symbol	* c		2503569						
ANR	2503657	Symbol	c -> ad		2503569						
ANR	2503658	Symbol	strattr		2503569						
ANR	2503659	Symbol	strexpr		2503569						
ANR	2503660	Symbol	parser		2503569						
ANR	2503661	Symbol	attr		2503569						
ANR	2503662	Symbol	value		2503569						
ANR	2503663	Function	cclassad_insert_string	136:0:2568:2749							
ANR	2503664	FunctionDef	"cclassad_insert_string (struct cclassad * c , const char * attr , const char * value)"		2503663	0					
ANR	2503665	CompoundStatement		137:0:2654:2749	2503663	0					
ANR	2503666	IdentifierDeclStatement	string strattr ( attr ) ;	138:1:2657:2677	2503663	0	True				
ANR	2503667	IdentifierDecl	strattr ( attr )		2503663	0					
ANR	2503668	IdentifierDeclType	string		2503663	0					
ANR	2503669	Identifier	strattr		2503663	1					
ANR	2503670	Identifier	attr		2503663	2					
ANR	2503671	IdentifierDeclStatement	string strvalue ( value ) ;	139:1:2680:2702	2503663	1	True				
ANR	2503672	IdentifierDecl	strvalue ( value )		2503663	0					
ANR	2503673	IdentifierDeclType	string		2503663	0					
ANR	2503674	Identifier	strvalue		2503663	1					
ANR	2503675	Identifier	value		2503663	2					
ANR	2503676	ReturnStatement	"return c -> ad -> InsertAttr ( strattr , strvalue ) ;"	140:1:2705:2747	2503663	2	True				
ANR	2503677	CallExpression	"c -> ad -> InsertAttr ( strattr , strvalue )"		2503663	0					
ANR	2503678	Callee	c -> ad -> InsertAttr		2503663	0					
ANR	2503679	PtrMemberAccess	c -> ad -> InsertAttr		2503663	0					
ANR	2503680	PtrMemberAccess	c -> ad		2503663	0					
ANR	2503681	Identifier	c		2503663	0					
ANR	2503682	Identifier	ad		2503663	1					
ANR	2503683	Identifier	InsertAttr		2503663	1					
ANR	2503684	ArgumentList	strattr		2503663	1					
ANR	2503685	Argument	strattr		2503663	0					
ANR	2503686	Identifier	strattr		2503663	0					
ANR	2503687	Argument	strvalue		2503663	1					
ANR	2503688	Identifier	strvalue		2503663	0					
ANR	2503689	ReturnType	int		2503663	1					
ANR	2503690	Identifier	cclassad_insert_string		2503663	2					
ANR	2503691	ParameterList	"struct cclassad * c , const char * attr , const char * value"		2503663	3					
ANR	2503692	Parameter	struct cclassad * c	136:28:2596:2613	2503663	0	True				
ANR	2503693	ParameterType	struct cclassad *		2503663	0					
ANR	2503694	Identifier	c		2503663	1					
ANR	2503695	Parameter	const char * attr	136:48:2616:2631	2503663	1	True				
ANR	2503696	ParameterType	const char *		2503663	0					
ANR	2503697	Identifier	attr		2503663	1					
ANR	2503698	Parameter	const char * value	136:66:2634:2650	2503663	2	True				
ANR	2503699	ParameterType	const char *		2503663	0					
ANR	2503700	Identifier	value		2503663	1					
ANR	2503701	CFGEntryNode	ENTRY		2503663		True				
ANR	2503702	CFGExitNode	EXIT		2503663		True				
ANR	2503703	Symbol	strattr		2503663						
ANR	2503704	Symbol	c		2503663						
ANR	2503705	Symbol	c -> ad -> InsertAttr		2503663						
ANR	2503706	Symbol	* c -> ad		2503663						
ANR	2503707	Symbol	* * c		2503663						
ANR	2503708	Symbol	attr		2503663						
ANR	2503709	Symbol	value		2503663						
ANR	2503710	Symbol	* c		2503663						
ANR	2503711	Symbol	strvalue		2503663						
ANR	2503712	Symbol	c -> ad		2503663						
ANR	2503713	Function	cclassad_insert_int	143:0:2752:2894							
ANR	2503714	FunctionDef	"cclassad_insert_int (struct cclassad * c , const char * attr , int value)"		2503713	0					
ANR	2503715	CompoundStatement		144:0:2827:2894	2503713	0					
ANR	2503716	IdentifierDeclStatement	string strattr ( attr ) ;	145:1:2830:2850	2503713	0	True				
ANR	2503717	IdentifierDecl	strattr ( attr )		2503713	0					
ANR	2503718	IdentifierDeclType	string		2503713	0					
ANR	2503719	Identifier	strattr		2503713	1					
ANR	2503720	Identifier	attr		2503713	2					
ANR	2503721	ReturnStatement	"return c -> ad -> InsertAttr ( strattr , value ) ;"	146:1:2853:2892	2503713	1	True				
ANR	2503722	CallExpression	"c -> ad -> InsertAttr ( strattr , value )"		2503713	0					
ANR	2503723	Callee	c -> ad -> InsertAttr		2503713	0					
ANR	2503724	PtrMemberAccess	c -> ad -> InsertAttr		2503713	0					
ANR	2503725	PtrMemberAccess	c -> ad		2503713	0					
ANR	2503726	Identifier	c		2503713	0					
ANR	2503727	Identifier	ad		2503713	1					
ANR	2503728	Identifier	InsertAttr		2503713	1					
ANR	2503729	ArgumentList	strattr		2503713	1					
ANR	2503730	Argument	strattr		2503713	0					
ANR	2503731	Identifier	strattr		2503713	0					
ANR	2503732	Argument	value		2503713	1					
ANR	2503733	Identifier	value		2503713	0					
ANR	2503734	ReturnType	int		2503713	1					
ANR	2503735	Identifier	cclassad_insert_int		2503713	2					
ANR	2503736	ParameterList	"struct cclassad * c , const char * attr , int value"		2503713	3					
ANR	2503737	Parameter	struct cclassad * c	143:25:2777:2794	2503713	0	True				
ANR	2503738	ParameterType	struct cclassad *		2503713	0					
ANR	2503739	Identifier	c		2503713	1					
ANR	2503740	Parameter	const char * attr	143:45:2797:2812	2503713	1	True				
ANR	2503741	ParameterType	const char *		2503713	0					
ANR	2503742	Identifier	attr		2503713	1					
ANR	2503743	Parameter	int value	143:63:2815:2823	2503713	2	True				
ANR	2503744	ParameterType	int		2503713	0					
ANR	2503745	Identifier	value		2503713	1					
ANR	2503746	CFGEntryNode	ENTRY		2503713		True				
ANR	2503747	CFGExitNode	EXIT		2503713		True				
ANR	2503748	Symbol	strattr		2503713						
ANR	2503749	Symbol	c		2503713						
ANR	2503750	Symbol	c -> ad -> InsertAttr		2503713						
ANR	2503751	Symbol	* c -> ad		2503713						
ANR	2503752	Symbol	* * c		2503713						
ANR	2503753	Symbol	attr		2503713						
ANR	2503754	Symbol	value		2503713						
ANR	2503755	Symbol	* c		2503713						
ANR	2503756	Symbol	c -> ad		2503713						
ANR	2503757	Function	cclassad_insert_double	149:0:2897:3045							
ANR	2503758	FunctionDef	"cclassad_insert_double (struct cclassad * c , const char * attr , double value)"		2503757	0					
ANR	2503759	CompoundStatement		150:0:2978:3045	2503757	0					
ANR	2503760	IdentifierDeclStatement	string strattr ( attr ) ;	151:1:2981:3001	2503757	0	True				
ANR	2503761	IdentifierDecl	strattr ( attr )		2503757	0					
ANR	2503762	IdentifierDeclType	string		2503757	0					
ANR	2503763	Identifier	strattr		2503757	1					
ANR	2503764	Identifier	attr		2503757	2					
ANR	2503765	ReturnStatement	"return c -> ad -> InsertAttr ( strattr , value ) ;"	152:1:3004:3043	2503757	1	True				
ANR	2503766	CallExpression	"c -> ad -> InsertAttr ( strattr , value )"		2503757	0					
ANR	2503767	Callee	c -> ad -> InsertAttr		2503757	0					
ANR	2503768	PtrMemberAccess	c -> ad -> InsertAttr		2503757	0					
ANR	2503769	PtrMemberAccess	c -> ad		2503757	0					
ANR	2503770	Identifier	c		2503757	0					
ANR	2503771	Identifier	ad		2503757	1					
ANR	2503772	Identifier	InsertAttr		2503757	1					
ANR	2503773	ArgumentList	strattr		2503757	1					
ANR	2503774	Argument	strattr		2503757	0					
ANR	2503775	Identifier	strattr		2503757	0					
ANR	2503776	Argument	value		2503757	1					
ANR	2503777	Identifier	value		2503757	0					
ANR	2503778	ReturnType	int		2503757	1					
ANR	2503779	Identifier	cclassad_insert_double		2503757	2					
ANR	2503780	ParameterList	"struct cclassad * c , const char * attr , double value"		2503757	3					
ANR	2503781	Parameter	struct cclassad * c	149:28:2925:2942	2503757	0	True				
ANR	2503782	ParameterType	struct cclassad *		2503757	0					
ANR	2503783	Identifier	c		2503757	1					
ANR	2503784	Parameter	const char * attr	149:48:2945:2960	2503757	1	True				
ANR	2503785	ParameterType	const char *		2503757	0					
ANR	2503786	Identifier	attr		2503757	1					
ANR	2503787	Parameter	double value	149:66:2963:2974	2503757	2	True				
ANR	2503788	ParameterType	double		2503757	0					
ANR	2503789	Identifier	value		2503757	1					
ANR	2503790	CFGEntryNode	ENTRY		2503757		True				
ANR	2503791	CFGExitNode	EXIT		2503757		True				
ANR	2503792	Symbol	strattr		2503757						
ANR	2503793	Symbol	c		2503757						
ANR	2503794	Symbol	c -> ad -> InsertAttr		2503757						
ANR	2503795	Symbol	* c -> ad		2503757						
ANR	2503796	Symbol	* * c		2503757						
ANR	2503797	Symbol	attr		2503757						
ANR	2503798	Symbol	value		2503757						
ANR	2503799	Symbol	* c		2503757						
ANR	2503800	Symbol	c -> ad		2503757						
ANR	2503801	Function	cclassad_insert_bool	155:0:3048:3191							
ANR	2503802	FunctionDef	"cclassad_insert_bool (struct cclassad * c , const char * attr , int value)"		2503801	0					
ANR	2503803	CompoundStatement		156:0:3124:3191	2503801	0					
ANR	2503804	IdentifierDeclStatement	string strattr ( attr ) ;	157:1:3127:3147	2503801	0	True				
ANR	2503805	IdentifierDecl	strattr ( attr )		2503801	0					
ANR	2503806	IdentifierDeclType	string		2503801	0					
ANR	2503807	Identifier	strattr		2503801	1					
ANR	2503808	Identifier	attr		2503801	2					
ANR	2503809	ReturnStatement	"return c -> ad -> InsertAttr ( strattr , value ) ;"	158:1:3150:3189	2503801	1	True				
ANR	2503810	CallExpression	"c -> ad -> InsertAttr ( strattr , value )"		2503801	0					
ANR	2503811	Callee	c -> ad -> InsertAttr		2503801	0					
ANR	2503812	PtrMemberAccess	c -> ad -> InsertAttr		2503801	0					
ANR	2503813	PtrMemberAccess	c -> ad		2503801	0					
ANR	2503814	Identifier	c		2503801	0					
ANR	2503815	Identifier	ad		2503801	1					
ANR	2503816	Identifier	InsertAttr		2503801	1					
ANR	2503817	ArgumentList	strattr		2503801	1					
ANR	2503818	Argument	strattr		2503801	0					
ANR	2503819	Identifier	strattr		2503801	0					
ANR	2503820	Argument	value		2503801	1					
ANR	2503821	Identifier	value		2503801	0					
ANR	2503822	ReturnType	int		2503801	1					
ANR	2503823	Identifier	cclassad_insert_bool		2503801	2					
ANR	2503824	ParameterList	"struct cclassad * c , const char * attr , int value"		2503801	3					
ANR	2503825	Parameter	struct cclassad * c	155:26:3074:3091	2503801	0	True				
ANR	2503826	ParameterType	struct cclassad *		2503801	0					
ANR	2503827	Identifier	c		2503801	1					
ANR	2503828	Parameter	const char * attr	155:46:3094:3109	2503801	1	True				
ANR	2503829	ParameterType	const char *		2503801	0					
ANR	2503830	Identifier	attr		2503801	1					
ANR	2503831	Parameter	int value	155:64:3112:3120	2503801	2	True				
ANR	2503832	ParameterType	int		2503801	0					
ANR	2503833	Identifier	value		2503801	1					
ANR	2503834	CFGEntryNode	ENTRY		2503801		True				
ANR	2503835	CFGExitNode	EXIT		2503801		True				
ANR	2503836	Symbol	strattr		2503801						
ANR	2503837	Symbol	c		2503801						
ANR	2503838	Symbol	c -> ad -> InsertAttr		2503801						
ANR	2503839	Symbol	* c -> ad		2503801						
ANR	2503840	Symbol	* * c		2503801						
ANR	2503841	Symbol	attr		2503801						
ANR	2503842	Symbol	value		2503801						
ANR	2503843	Symbol	* c		2503801						
ANR	2503844	Symbol	c -> ad		2503801						
ANR	2503845	Function	cclassad_remove	162:0:3195:3312							
ANR	2503846	FunctionDef	"cclassad_remove (struct cclassad * c , const char * attr)"		2503845	0					
ANR	2503847	CompoundStatement		163:0:3255:3312	2503845	0					
ANR	2503848	IdentifierDeclStatement	string strattr ( attr ) ;	164:1:3258:3278	2503845	0	True				
ANR	2503849	IdentifierDecl	strattr ( attr )		2503845	0					
ANR	2503850	IdentifierDeclType	string		2503845	0					
ANR	2503851	Identifier	strattr		2503845	1					
ANR	2503852	Identifier	attr		2503845	2					
ANR	2503853	ReturnStatement	return c -> ad -> Delete ( strattr ) ;	165:1:3281:3310	2503845	1	True				
ANR	2503854	CallExpression	c -> ad -> Delete ( strattr )		2503845	0					
ANR	2503855	Callee	c -> ad -> Delete		2503845	0					
ANR	2503856	PtrMemberAccess	c -> ad -> Delete		2503845	0					
ANR	2503857	PtrMemberAccess	c -> ad		2503845	0					
ANR	2503858	Identifier	c		2503845	0					
ANR	2503859	Identifier	ad		2503845	1					
ANR	2503860	Identifier	Delete		2503845	1					
ANR	2503861	ArgumentList	strattr		2503845	1					
ANR	2503862	Argument	strattr		2503845	0					
ANR	2503863	Identifier	strattr		2503845	0					
ANR	2503864	ReturnType	int		2503845	1					
ANR	2503865	Identifier	cclassad_remove		2503845	2					
ANR	2503866	ParameterList	"struct cclassad * c , const char * attr"		2503845	3					
ANR	2503867	Parameter	struct cclassad * c	162:21:3216:3233	2503845	0	True				
ANR	2503868	ParameterType	struct cclassad *		2503845	0					
ANR	2503869	Identifier	c		2503845	1					
ANR	2503870	Parameter	const char * attr	162:41:3236:3251	2503845	1	True				
ANR	2503871	ParameterType	const char *		2503845	0					
ANR	2503872	Identifier	attr		2503845	1					
ANR	2503873	CFGEntryNode	ENTRY		2503845		True				
ANR	2503874	CFGExitNode	EXIT		2503845		True				
ANR	2503875	Symbol	strattr		2503845						
ANR	2503876	Symbol	c		2503845						
ANR	2503877	Symbol	c -> ad -> Delete		2503845						
ANR	2503878	Symbol	* c -> ad		2503845						
ANR	2503879	Symbol	* * c		2503845						
ANR	2503880	Symbol	attr		2503845						
ANR	2503881	Symbol	* c		2503845						
ANR	2503882	Symbol	c -> ad		2503845						
ANR	2503883	Function	cclassad_evaluate_to_expr	168:0:3315:3624							
ANR	2503884	FunctionDef	"cclassad_evaluate_to_expr (struct cclassad * c , const char * expr , char * * result)"		2503883	0					
ANR	2503885	CompoundStatement		169:0:3400:3624	2503883	0					
ANR	2503886	IdentifierDeclStatement	string exprstring ( expr ) ;	170:1:3403:3426	2503883	0	True				
ANR	2503887	IdentifierDecl	exprstring ( expr )		2503883	0					
ANR	2503888	IdentifierDeclType	string		2503883	0					
ANR	2503889	Identifier	exprstring		2503883	1					
ANR	2503890	Identifier	expr		2503883	2					
ANR	2503891	IdentifierDeclStatement	Value value ;	171:1:3429:3440	2503883	1	True				
ANR	2503892	IdentifierDecl	value		2503883	0					
ANR	2503893	IdentifierDeclType	Value		2503883	0					
ANR	2503894	Identifier	value		2503883	1					
ANR	2503895	IfStatement	"if ( c -> ad -> EvaluateExpr ( exprstring , value ) )"		2503883	2					
ANR	2503896	Condition	"c -> ad -> EvaluateExpr ( exprstring , value )"	173:4:3447:3483	2503883	0	True				
ANR	2503897	CallExpression	"c -> ad -> EvaluateExpr ( exprstring , value )"		2503883	0					
ANR	2503898	Callee	c -> ad -> EvaluateExpr		2503883	0					
ANR	2503899	PtrMemberAccess	c -> ad -> EvaluateExpr		2503883	0					
ANR	2503900	PtrMemberAccess	c -> ad		2503883	0					
ANR	2503901	Identifier	c		2503883	0					
ANR	2503902	Identifier	ad		2503883	1					
ANR	2503903	Identifier	EvaluateExpr		2503883	1					
ANR	2503904	ArgumentList	exprstring		2503883	1					
ANR	2503905	Argument	exprstring		2503883	0					
ANR	2503906	Identifier	exprstring		2503883	0					
ANR	2503907	Argument	value		2503883	1					
ANR	2503908	Identifier	value		2503883	0					
ANR	2503909	CompoundStatement		7:2:117:125	2503883	1					
ANR	2503910	IdentifierDeclStatement	ClassAdUnParser unparser ;	174:2:3490:3514	2503883	0	True				
ANR	2503911	IdentifierDecl	unparser		2503883	0					
ANR	2503912	IdentifierDeclType	ClassAdUnParser		2503883	0					
ANR	2503913	Identifier	unparser		2503883	1					
ANR	2503914	IdentifierDeclStatement	string s ;	175:2:3518:3526	2503883	1	True				
ANR	2503915	IdentifierDecl	s		2503883	0					
ANR	2503916	IdentifierDeclType	string		2503883	0					
ANR	2503917	Identifier	s		2503883	1					
ANR	2503918	ExpressionStatement	"unparser . Unparse ( s , value )"	176:2:3530:3555	2503883	2	True				
ANR	2503919	CallExpression	"unparser . Unparse ( s , value )"		2503883	0					
ANR	2503920	Callee	unparser . Unparse		2503883	0					
ANR	2503921	MemberAccess	unparser . Unparse		2503883	0					
ANR	2503922	Identifier	unparser		2503883	0					
ANR	2503923	Identifier	Unparse		2503883	1					
ANR	2503924	ArgumentList	s		2503883	1					
ANR	2503925	Argument	s		2503883	0					
ANR	2503926	Identifier	s		2503883	0					
ANR	2503927	Argument	value		2503883	1					
ANR	2503928	Identifier	value		2503883	0					
ANR	2503929	ExpressionStatement	* result = strdup ( s . c_str ( ) )	177:2:3559:3586	2503883	3	True				
ANR	2503930	AssignmentExpression	* result = strdup ( s . c_str ( ) )		2503883	0		=			
ANR	2503931	UnaryOperationExpression	* result		2503883	0					
ANR	2503932	UnaryOperator	*		2503883	0					
ANR	2503933	Identifier	result		2503883	1					
ANR	2503934	CallExpression	strdup ( s . c_str ( ) )		2503883	1					
ANR	2503935	Callee	strdup		2503883	0					
ANR	2503936	Identifier	strdup		2503883	0					
ANR	2503937	ArgumentList	s . c_str ( )		2503883	1					
ANR	2503938	Argument	s . c_str ( )		2503883	0					
ANR	2503939	CallExpression	s . c_str ( )		2503883	0					
ANR	2503940	Callee	s . c_str		2503883	0					
ANR	2503941	MemberAccess	s . c_str		2503883	0					
ANR	2503942	Identifier	s		2503883	0					
ANR	2503943	Identifier	c_str		2503883	1					
ANR	2503944	ArgumentList			2503883	1					
ANR	2503945	ReturnStatement	return * result != 0 ;	178:2:3590:3607	2503883	4	True				
ANR	2503946	EqualityExpression	* result != 0		2503883	0		!=			
ANR	2503947	UnaryOperationExpression	* result		2503883	0					
ANR	2503948	UnaryOperator	*		2503883	0					
ANR	2503949	Identifier	result		2503883	1					
ANR	2503950	PrimaryExpression	0		2503883	1					
ANR	2503951	ReturnStatement	return 0 ;	181:1:3614:3622	2503883	3	True				
ANR	2503952	PrimaryExpression	0		2503883	0					
ANR	2503953	ReturnType	int		2503883	1					
ANR	2503954	Identifier	cclassad_evaluate_to_expr		2503883	2					
ANR	2503955	ParameterList	"struct cclassad * c , const char * expr , char * * result"		2503883	3					
ANR	2503956	Parameter	struct cclassad * c	168:31:3346:3363	2503883	0	True				
ANR	2503957	ParameterType	struct cclassad *		2503883	0					
ANR	2503958	Identifier	c		2503883	1					
ANR	2503959	Parameter	const char * expr	168:51:3366:3381	2503883	1	True				
ANR	2503960	ParameterType	const char *		2503883	0					
ANR	2503961	Identifier	expr		2503883	1					
ANR	2503962	Parameter	char * * result	168:69:3384:3396	2503883	2	True				
ANR	2503963	ParameterType	char * *		2503883	0					
ANR	2503964	Identifier	result		2503883	1					
ANR	2503965	CFGEntryNode	ENTRY		2503883		True				
ANR	2503966	CFGExitNode	EXIT		2503883		True				
ANR	2503967	Symbol	c		2503883						
ANR	2503968	Symbol	* c -> ad		2503883						
ANR	2503969	Symbol	c -> ad -> EvaluateExpr		2503883						
ANR	2503970	Symbol	* * c		2503883						
ANR	2503971	Symbol	exprstring		2503883						
ANR	2503972	Symbol	s . c_str		2503883						
ANR	2503973	Symbol	* c		2503883						
ANR	2503974	Symbol	c -> ad		2503883						
ANR	2503975	Symbol	result		2503883						
ANR	2503976	Symbol	s		2503883						
ANR	2503977	Symbol	* result		2503883						
ANR	2503978	Symbol	expr		2503883						
ANR	2503979	Symbol	unparser		2503883						
ANR	2503980	Symbol	strdup		2503883						
ANR	2503981	Symbol	value		2503883						
ANR	2503982	Function	cclassad_evaluate_to_string	184:0:3627:3917							
ANR	2503983	FunctionDef	"cclassad_evaluate_to_string (struct cclassad * c , const char * expr , char * * result)"		2503982	0					
ANR	2503984	CompoundStatement		185:0:3714:3917	2503982	0					
ANR	2503985	IdentifierDeclStatement	string exprstring ( expr ) ;	186:1:3717:3740	2503982	0	True				
ANR	2503986	IdentifierDecl	exprstring ( expr )		2503982	0					
ANR	2503987	IdentifierDeclType	string		2503982	0					
ANR	2503988	Identifier	exprstring		2503982	1					
ANR	2503989	Identifier	expr		2503982	2					
ANR	2503990	IdentifierDeclStatement	Value value ;	187:1:3743:3754	2503982	1	True				
ANR	2503991	IdentifierDecl	value		2503982	0					
ANR	2503992	IdentifierDeclType	Value		2503982	0					
ANR	2503993	Identifier	value		2503982	1					
ANR	2503994	IfStatement	"if ( c -> ad -> EvaluateExpr ( exprstring , value ) )"		2503982	2					
ANR	2503995	Condition	"c -> ad -> EvaluateExpr ( exprstring , value )"	189:4:3761:3797	2503982	0	True				
ANR	2503996	CallExpression	"c -> ad -> EvaluateExpr ( exprstring , value )"		2503982	0					
ANR	2503997	Callee	c -> ad -> EvaluateExpr		2503982	0					
ANR	2503998	PtrMemberAccess	c -> ad -> EvaluateExpr		2503982	0					
ANR	2503999	PtrMemberAccess	c -> ad		2503982	0					
ANR	2504000	Identifier	c		2503982	0					
ANR	2504001	Identifier	ad		2503982	1					
ANR	2504002	Identifier	EvaluateExpr		2503982	1					
ANR	2504003	ArgumentList	exprstring		2503982	1					
ANR	2504004	Argument	exprstring		2503982	0					
ANR	2504005	Identifier	exprstring		2503982	0					
ANR	2504006	Argument	value		2503982	1					
ANR	2504007	Identifier	value		2503982	0					
ANR	2504008	CompoundStatement		6:2:89:97	2503982	1					
ANR	2504009	IdentifierDeclStatement	string s ;	190:2:3804:3812	2503982	0	True				
ANR	2504010	IdentifierDecl	s		2503982	0					
ANR	2504011	IdentifierDeclType	string		2503982	0					
ANR	2504012	Identifier	s		2503982	1					
ANR	2504013	IfStatement	if ( value . IsStringValue ( s ) )		2503982	1					
ANR	2504014	Condition	value . IsStringValue ( s )	191:5:3819:3840	2503982	0	True				
ANR	2504015	CallExpression	value . IsStringValue ( s )		2503982	0					
ANR	2504016	Callee	value . IsStringValue		2503982	0					
ANR	2504017	MemberAccess	value . IsStringValue		2503982	0					
ANR	2504018	Identifier	value		2503982	0					
ANR	2504019	Identifier	IsStringValue		2503982	1					
ANR	2504020	ArgumentList	s		2503982	1					
ANR	2504021	Argument	s		2503982	0					
ANR	2504022	Identifier	s		2503982	0					
ANR	2504023	CompoundStatement		7:29:128:128	2503982	1					
ANR	2504024	ExpressionStatement	* result = strdup ( s . c_str ( ) )	192:3:3848:3875	2503982	0	True				
ANR	2504025	AssignmentExpression	* result = strdup ( s . c_str ( ) )		2503982	0		=			
ANR	2504026	UnaryOperationExpression	* result		2503982	0					
ANR	2504027	UnaryOperator	*		2503982	0					
ANR	2504028	Identifier	result		2503982	1					
ANR	2504029	CallExpression	strdup ( s . c_str ( ) )		2503982	1					
ANR	2504030	Callee	strdup		2503982	0					
ANR	2504031	Identifier	strdup		2503982	0					
ANR	2504032	ArgumentList	s . c_str ( )		2503982	1					
ANR	2504033	Argument	s . c_str ( )		2503982	0					
ANR	2504034	CallExpression	s . c_str ( )		2503982	0					
ANR	2504035	Callee	s . c_str		2503982	0					
ANR	2504036	MemberAccess	s . c_str		2503982	0					
ANR	2504037	Identifier	s		2503982	0					
ANR	2504038	Identifier	c_str		2503982	1					
ANR	2504039	ArgumentList			2503982	1					
ANR	2504040	ReturnStatement	return * result != 0 ;	193:3:3880:3897	2503982	1	True				
ANR	2504041	EqualityExpression	* result != 0		2503982	0		!=			
ANR	2504042	UnaryOperationExpression	* result		2503982	0					
ANR	2504043	UnaryOperator	*		2503982	0					
ANR	2504044	Identifier	result		2503982	1					
ANR	2504045	PrimaryExpression	0		2503982	1					
ANR	2504046	ReturnStatement	return 0 ;	196:1:3907:3915	2503982	3	True				
ANR	2504047	PrimaryExpression	0		2503982	0					
ANR	2504048	ReturnType	int		2503982	1					
ANR	2504049	Identifier	cclassad_evaluate_to_string		2503982	2					
ANR	2504050	ParameterList	"struct cclassad * c , const char * expr , char * * result"		2503982	3					
ANR	2504051	Parameter	struct cclassad * c	184:33:3660:3677	2503982	0	True				
ANR	2504052	ParameterType	struct cclassad *		2503982	0					
ANR	2504053	Identifier	c		2503982	1					
ANR	2504054	Parameter	const char * expr	184:53:3680:3695	2503982	1	True				
ANR	2504055	ParameterType	const char *		2503982	0					
ANR	2504056	Identifier	expr		2503982	1					
ANR	2504057	Parameter	char * * result	184:71:3698:3710	2503982	2	True				
ANR	2504058	ParameterType	char * *		2503982	0					
ANR	2504059	Identifier	result		2503982	1					
ANR	2504060	CFGEntryNode	ENTRY		2503982		True				
ANR	2504061	CFGExitNode	EXIT		2503982		True				
ANR	2504062	Symbol	c		2503982						
ANR	2504063	Symbol	* c -> ad		2503982						
ANR	2504064	Symbol	c -> ad -> EvaluateExpr		2503982						
ANR	2504065	Symbol	* * c		2503982						
ANR	2504066	Symbol	exprstring		2503982						
ANR	2504067	Symbol	s . c_str		2503982						
ANR	2504068	Symbol	* c		2503982						
ANR	2504069	Symbol	c -> ad		2503982						
ANR	2504070	Symbol	result		2503982						
ANR	2504071	Symbol	s		2503982						
ANR	2504072	Symbol	* result		2503982						
ANR	2504073	Symbol	expr		2503982						
ANR	2504074	Symbol	value . IsStringValue		2503982						
ANR	2504075	Symbol	strdup		2503982						
ANR	2504076	Symbol	value		2503982						
ANR	2504077	Function	cclassad_evaluate_to_int	199:0:3920:4159							
ANR	2504078	FunctionDef	"cclassad_evaluate_to_int (struct cclassad * c , const char * expr , int * result)"		2504077	0					
ANR	2504079	CompoundStatement		200:0:4002:4159	2504077	0					
ANR	2504080	IdentifierDeclStatement	string exprstring ( expr ) ;	201:1:4005:4028	2504077	0	True				
ANR	2504081	IdentifierDecl	exprstring ( expr )		2504077	0					
ANR	2504082	IdentifierDeclType	string		2504077	0					
ANR	2504083	Identifier	exprstring		2504077	1					
ANR	2504084	Identifier	expr		2504077	2					
ANR	2504085	IdentifierDeclStatement	Value value ;	202:1:4031:4042	2504077	1	True				
ANR	2504086	IdentifierDecl	value		2504077	0					
ANR	2504087	IdentifierDeclType	Value		2504077	0					
ANR	2504088	Identifier	value		2504077	1					
ANR	2504089	IfStatement	"if ( c -> ad -> EvaluateExpr ( exprstring , value ) )"		2504077	2					
ANR	2504090	Condition	"c -> ad -> EvaluateExpr ( exprstring , value )"	204:4:4049:4085	2504077	0	True				
ANR	2504091	CallExpression	"c -> ad -> EvaluateExpr ( exprstring , value )"		2504077	0					
ANR	2504092	Callee	c -> ad -> EvaluateExpr		2504077	0					
ANR	2504093	PtrMemberAccess	c -> ad -> EvaluateExpr		2504077	0					
ANR	2504094	PtrMemberAccess	c -> ad		2504077	0					
ANR	2504095	Identifier	c		2504077	0					
ANR	2504096	Identifier	ad		2504077	1					
ANR	2504097	Identifier	EvaluateExpr		2504077	1					
ANR	2504098	ArgumentList	exprstring		2504077	1					
ANR	2504099	Argument	exprstring		2504077	0					
ANR	2504100	Identifier	exprstring		2504077	0					
ANR	2504101	Argument	value		2504077	1					
ANR	2504102	Identifier	value		2504077	0					
ANR	2504103	CompoundStatement		5:43:85:85	2504077	1					
ANR	2504104	IfStatement	if ( value . IsIntegerValue ( * result ) )		2504077	0					
ANR	2504105	Condition	value . IsIntegerValue ( * result )	205:5:4095:4123	2504077	0	True				
ANR	2504106	CallExpression	value . IsIntegerValue ( * result )		2504077	0					
ANR	2504107	Callee	value . IsIntegerValue		2504077	0					
ANR	2504108	MemberAccess	value . IsIntegerValue		2504077	0					
ANR	2504109	Identifier	value		2504077	0					
ANR	2504110	Identifier	IsIntegerValue		2504077	1					
ANR	2504111	ArgumentList	* result		2504077	1					
ANR	2504112	Argument	* result		2504077	0					
ANR	2504113	UnaryOperationExpression	* result		2504077	0					
ANR	2504114	UnaryOperator	*		2504077	0					
ANR	2504115	Identifier	result		2504077	1					
ANR	2504116	CompoundStatement		6:36:123:123	2504077	1					
ANR	2504117	ReturnStatement	return 1 ;	206:3:4131:4139	2504077	0	True				
ANR	2504118	PrimaryExpression	1		2504077	0					
ANR	2504119	ReturnStatement	return 0 ;	209:1:4149:4157	2504077	3	True				
ANR	2504120	PrimaryExpression	0		2504077	0					
ANR	2504121	ReturnType	int		2504077	1					
ANR	2504122	Identifier	cclassad_evaluate_to_int		2504077	2					
ANR	2504123	ParameterList	"struct cclassad * c , const char * expr , int * result"		2504077	3					
ANR	2504124	Parameter	struct cclassad * c	199:30:3950:3967	2504077	0	True				
ANR	2504125	ParameterType	struct cclassad *		2504077	0					
ANR	2504126	Identifier	c		2504077	1					
ANR	2504127	Parameter	const char * expr	199:50:3970:3985	2504077	1	True				
ANR	2504128	ParameterType	const char *		2504077	0					
ANR	2504129	Identifier	expr		2504077	1					
ANR	2504130	Parameter	int * result	199:68:3988:3998	2504077	2	True				
ANR	2504131	ParameterType	int *		2504077	0					
ANR	2504132	Identifier	result		2504077	1					
ANR	2504133	CFGEntryNode	ENTRY		2504077		True				
ANR	2504134	CFGExitNode	EXIT		2504077		True				
ANR	2504135	Symbol	result		2504077						
ANR	2504136	Symbol	c		2504077						
ANR	2504137	Symbol	value . IsIntegerValue		2504077						
ANR	2504138	Symbol	* c -> ad		2504077						
ANR	2504139	Symbol	* result		2504077						
ANR	2504140	Symbol	c -> ad -> EvaluateExpr		2504077						
ANR	2504141	Symbol	* * c		2504077						
ANR	2504142	Symbol	expr		2504077						
ANR	2504143	Symbol	exprstring		2504077						
ANR	2504144	Symbol	value		2504077						
ANR	2504145	Symbol	* c		2504077						
ANR	2504146	Symbol	c -> ad		2504077						
ANR	2504147	Function	cclassad_evaluate_to_double	212:0:4162:4404							
ANR	2504148	FunctionDef	"cclassad_evaluate_to_double (struct cclassad * c , const char * expr , double * result)"		2504147	0					
ANR	2504149	CompoundStatement		213:0:4250:4404	2504147	0					
ANR	2504150	IdentifierDeclStatement	string exprstring ( expr ) ;	214:1:4253:4276	2504147	0	True				
ANR	2504151	IdentifierDecl	exprstring ( expr )		2504147	0					
ANR	2504152	IdentifierDeclType	string		2504147	0					
ANR	2504153	Identifier	exprstring		2504147	1					
ANR	2504154	Identifier	expr		2504147	2					
ANR	2504155	IdentifierDeclStatement	Value value ;	215:1:4279:4290	2504147	1	True				
ANR	2504156	IdentifierDecl	value		2504147	0					
ANR	2504157	IdentifierDeclType	Value		2504147	0					
ANR	2504158	Identifier	value		2504147	1					
ANR	2504159	IfStatement	"if ( c -> ad -> EvaluateExpr ( exprstring , value ) )"		2504147	2					
ANR	2504160	Condition	"c -> ad -> EvaluateExpr ( exprstring , value )"	217:4:4297:4333	2504147	0	True				
ANR	2504161	CallExpression	"c -> ad -> EvaluateExpr ( exprstring , value )"		2504147	0					
ANR	2504162	Callee	c -> ad -> EvaluateExpr		2504147	0					
ANR	2504163	PtrMemberAccess	c -> ad -> EvaluateExpr		2504147	0					
ANR	2504164	PtrMemberAccess	c -> ad		2504147	0					
ANR	2504165	Identifier	c		2504147	0					
ANR	2504166	Identifier	ad		2504147	1					
ANR	2504167	Identifier	EvaluateExpr		2504147	1					
ANR	2504168	ArgumentList	exprstring		2504147	1					
ANR	2504169	Argument	exprstring		2504147	0					
ANR	2504170	Identifier	exprstring		2504147	0					
ANR	2504171	Argument	value		2504147	1					
ANR	2504172	Identifier	value		2504147	0					
ANR	2504173	CompoundStatement		5:43:85:85	2504147	1					
ANR	2504174	IfStatement	if ( value . IsRealValue ( * result ) )		2504147	0					
ANR	2504175	Condition	value . IsRealValue ( * result )	218:5:4343:4368	2504147	0	True				
ANR	2504176	CallExpression	value . IsRealValue ( * result )		2504147	0					
ANR	2504177	Callee	value . IsRealValue		2504147	0					
ANR	2504178	MemberAccess	value . IsRealValue		2504147	0					
ANR	2504179	Identifier	value		2504147	0					
ANR	2504180	Identifier	IsRealValue		2504147	1					
ANR	2504181	ArgumentList	* result		2504147	1					
ANR	2504182	Argument	* result		2504147	0					
ANR	2504183	UnaryOperationExpression	* result		2504147	0					
ANR	2504184	UnaryOperator	*		2504147	0					
ANR	2504185	Identifier	result		2504147	1					
ANR	2504186	CompoundStatement		6:33:120:120	2504147	1					
ANR	2504187	ReturnStatement	return 1 ;	219:3:4376:4384	2504147	0	True				
ANR	2504188	PrimaryExpression	1		2504147	0					
ANR	2504189	ReturnStatement	return 0 ;	222:1:4394:4402	2504147	3	True				
ANR	2504190	PrimaryExpression	0		2504147	0					
ANR	2504191	ReturnType	int		2504147	1					
ANR	2504192	Identifier	cclassad_evaluate_to_double		2504147	2					
ANR	2504193	ParameterList	"struct cclassad * c , const char * expr , double * result"		2504147	3					
ANR	2504194	Parameter	struct cclassad * c	212:33:4195:4212	2504147	0	True				
ANR	2504195	ParameterType	struct cclassad *		2504147	0					
ANR	2504196	Identifier	c		2504147	1					
ANR	2504197	Parameter	const char * expr	212:53:4215:4230	2504147	1	True				
ANR	2504198	ParameterType	const char *		2504147	0					
ANR	2504199	Identifier	expr		2504147	1					
ANR	2504200	Parameter	double * result	212:71:4233:4246	2504147	2	True				
ANR	2504201	ParameterType	double *		2504147	0					
ANR	2504202	Identifier	result		2504147	1					
ANR	2504203	CFGEntryNode	ENTRY		2504147		True				
ANR	2504204	CFGExitNode	EXIT		2504147		True				
ANR	2504205	Symbol	result		2504147						
ANR	2504206	Symbol	c		2504147						
ANR	2504207	Symbol	* c -> ad		2504147						
ANR	2504208	Symbol	* result		2504147						
ANR	2504209	Symbol	c -> ad -> EvaluateExpr		2504147						
ANR	2504210	Symbol	* * c		2504147						
ANR	2504211	Symbol	expr		2504147						
ANR	2504212	Symbol	exprstring		2504147						
ANR	2504213	Symbol	value		2504147						
ANR	2504214	Symbol	* c		2504147						
ANR	2504215	Symbol	value . IsRealValue		2504147						
ANR	2504216	Symbol	c -> ad		2504147						
ANR	2504217	Function	cclassad_evaluate_to_bool	225:0:4407:4667							
ANR	2504218	FunctionDef	"cclassad_evaluate_to_bool (struct cclassad * c , const char * expr , int * result)"		2504217	0					
ANR	2504219	CompoundStatement		226:0:4490:4667	2504217	0					
ANR	2504220	IdentifierDeclStatement	string exprstring ( expr ) ;	227:1:4493:4516	2504217	0	True				
ANR	2504221	IdentifierDecl	exprstring ( expr )		2504217	0					
ANR	2504222	IdentifierDeclType	string		2504217	0					
ANR	2504223	Identifier	exprstring		2504217	1					
ANR	2504224	Identifier	expr		2504217	2					
ANR	2504225	IdentifierDeclStatement	Value value ;	228:1:4519:4530	2504217	1	True				
ANR	2504226	IdentifierDecl	value		2504217	0					
ANR	2504227	IdentifierDeclType	Value		2504217	0					
ANR	2504228	Identifier	value		2504217	1					
ANR	2504229	IfStatement	"if ( c -> ad -> EvaluateExpr ( exprstring , value ) )"		2504217	2					
ANR	2504230	Condition	"c -> ad -> EvaluateExpr ( exprstring , value )"	230:4:4537:4573	2504217	0	True				
ANR	2504231	CallExpression	"c -> ad -> EvaluateExpr ( exprstring , value )"		2504217	0					
ANR	2504232	Callee	c -> ad -> EvaluateExpr		2504217	0					
ANR	2504233	PtrMemberAccess	c -> ad -> EvaluateExpr		2504217	0					
ANR	2504234	PtrMemberAccess	c -> ad		2504217	0					
ANR	2504235	Identifier	c		2504217	0					
ANR	2504236	Identifier	ad		2504217	1					
ANR	2504237	Identifier	EvaluateExpr		2504217	1					
ANR	2504238	ArgumentList	exprstring		2504217	1					
ANR	2504239	Argument	exprstring		2504217	0					
ANR	2504240	Identifier	exprstring		2504217	0					
ANR	2504241	Argument	value		2504217	1					
ANR	2504242	Identifier	value		2504217	0					
ANR	2504243	CompoundStatement		6:2:89:95	2504217	1					
ANR	2504244	IdentifierDeclStatement	bool b ;	231:2:4580:4586	2504217	0	True				
ANR	2504245	IdentifierDecl	b		2504217	0					
ANR	2504246	IdentifierDeclType	bool		2504217	0					
ANR	2504247	Identifier	b		2504217	1					
ANR	2504248	IfStatement	if ( value . IsBooleanValue ( b ) )		2504217	1					
ANR	2504249	Condition	value . IsBooleanValue ( b )	232:5:4593:4615	2504217	0	True				
ANR	2504250	CallExpression	value . IsBooleanValue ( b )		2504217	0					
ANR	2504251	Callee	value . IsBooleanValue		2504217	0					
ANR	2504252	MemberAccess	value . IsBooleanValue		2504217	0					
ANR	2504253	Identifier	value		2504217	0					
ANR	2504254	Identifier	IsBooleanValue		2504217	1					
ANR	2504255	ArgumentList	b		2504217	1					
ANR	2504256	Argument	b		2504217	0					
ANR	2504257	Identifier	b		2504217	0					
ANR	2504258	CompoundStatement		7:30:127:127	2504217	1					
ANR	2504259	ExpressionStatement	* result = b	233:3:4623:4634	2504217	0	True				
ANR	2504260	AssignmentExpression	* result = b		2504217	0		=			
ANR	2504261	UnaryOperationExpression	* result		2504217	0					
ANR	2504262	UnaryOperator	*		2504217	0					
ANR	2504263	Identifier	result		2504217	1					
ANR	2504264	Identifier	b		2504217	1					
ANR	2504265	ReturnStatement	return 1 ;	234:3:4639:4647	2504217	1	True				
ANR	2504266	PrimaryExpression	1		2504217	0					
ANR	2504267	ReturnStatement	return 0 ;	237:1:4657:4665	2504217	3	True				
ANR	2504268	PrimaryExpression	0		2504217	0					
ANR	2504269	ReturnType	int		2504217	1					
ANR	2504270	Identifier	cclassad_evaluate_to_bool		2504217	2					
ANR	2504271	ParameterList	"struct cclassad * c , const char * expr , int * result"		2504217	3					
ANR	2504272	Parameter	struct cclassad * c	225:31:4438:4455	2504217	0	True				
ANR	2504273	ParameterType	struct cclassad *		2504217	0					
ANR	2504274	Identifier	c		2504217	1					
ANR	2504275	Parameter	const char * expr	225:51:4458:4473	2504217	1	True				
ANR	2504276	ParameterType	const char *		2504217	0					
ANR	2504277	Identifier	expr		2504217	1					
ANR	2504278	Parameter	int * result	225:69:4476:4486	2504217	2	True				
ANR	2504279	ParameterType	int *		2504217	0					
ANR	2504280	Identifier	result		2504217	1					
ANR	2504281	CFGEntryNode	ENTRY		2504217		True				
ANR	2504282	CFGExitNode	EXIT		2504217		True				
ANR	2504283	Symbol	b		2504217						
ANR	2504284	Symbol	c		2504217						
ANR	2504285	Symbol	* c -> ad		2504217						
ANR	2504286	Symbol	c -> ad -> EvaluateExpr		2504217						
ANR	2504287	Symbol	* * c		2504217						
ANR	2504288	Symbol	exprstring		2504217						
ANR	2504289	Symbol	* c		2504217						
ANR	2504290	Symbol	c -> ad		2504217						
ANR	2504291	Symbol	result		2504217						
ANR	2504292	Symbol	value . IsBooleanValue		2504217						
ANR	2504293	Symbol	* result		2504217						
ANR	2504294	Symbol	expr		2504217						
ANR	2504295	Symbol	value		2504217						
