command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2533300	File	data/converged/CVE-2011-4930_htcondor/src_classad_compress.cpp								
ANR	2533301	Function	ClassAdBin :: ClassAdBin	27:0:897:965							
ANR	2533302	FunctionDef	ClassAdBin :: ClassAdBin ()		2533301	0					
ANR	2533303	CompoundStatement		28:0:923:965	2533301	0					
ANR	2533304	ExpressionStatement	count = 0	29:4:929:938	2533301	0	True				
ANR	2533305	AssignmentExpression	count = 0		2533301	0		=			
ANR	2533306	Identifier	count		2533301	0					
ANR	2533307	PrimaryExpression	0		2533301	1					
ANR	2533308	ExpressionStatement	ad = new ClassAd ( )	30:4:944:963	2533301	1	True				
ANR	2533309	AssignmentExpression	ad = new ClassAd ( )		2533301	0		=			
ANR	2533310	Identifier	ad		2533301	0					
ANR	2533311	UnaryExpression	new ClassAd ( )		2533301	1					
ANR	2533312	Identifier	ClassAdBin :: ClassAdBin		2533301	1					
ANR	2533313	ParameterList			2533301	2					
ANR	2533314	CFGEntryNode	ENTRY		2533301		True				
ANR	2533315	CFGExitNode	EXIT		2533301		True				
ANR	2533316	Symbol	ad		2533301						
ANR	2533317	Symbol	count		2533301						
ANR	2533318	Function	ClassAdBin :: ~ClassAdBin	33:0:968:1012							
ANR	2533319	FunctionDef	ClassAdBin :: ~ClassAdBin ()		2533318	0					
ANR	2533320	CompoundStatement		34:0:995:1012	2533318	0					
ANR	2533321	Statement	delete	35:4:1001:1006	2533318	0	True				
ANR	2533322	ExpressionStatement	ad	35:11:1008:1010	2533318	1	True				
ANR	2533323	Identifier	ad		2533318	0					
ANR	2533324	Identifier	ClassAdBin :: ~ClassAdBin		2533318	1					
ANR	2533325	ParameterList			2533318	2					
ANR	2533326	CFGEntryNode	ENTRY		2533318		True				
ANR	2533327	CFGExitNode	EXIT		2533318		True				
ANR	2533328	Function	MakeSignature	38:0:1015:1519							
ANR	2533329	FunctionDef	"MakeSignature (const ClassAd * ad , const References & refs , string & sig)"		2533328	0					
ANR	2533330	CompoundStatement		40:0:1092:1519	2533328	0					
ANR	2533331	IdentifierDeclStatement	References :: iterator itr ;	41:4:1098:1125	2533328	0	True				
ANR	2533332	IdentifierDecl	itr		2533328	0					
ANR	2533333	IdentifierDeclType	References :: iterator		2533328	0					
ANR	2533334	Identifier	itr		2533328	1					
ANR	2533335	IdentifierDeclStatement	ExprTree * expr ;	42:4:1131:1160	2533328	1	True				
ANR	2533336	IdentifierDecl	* expr		2533328	0					
ANR	2533337	IdentifierDeclType	ExprTree *		2533328	0					
ANR	2533338	Identifier	expr		2533328	1					
ANR	2533339	IdentifierDeclStatement	Value val ;	43:4:1166:1193	2533328	2	True				
ANR	2533340	IdentifierDecl	val		2533328	0					
ANR	2533341	IdentifierDeclType	Value		2533328	0					
ANR	2533342	Identifier	val		2533328	1					
ANR	2533343	IdentifierDeclStatement	ClassAdUnParser unp ;	44:4:1199:1226	2533328	3	True				
ANR	2533344	IdentifierDecl	unp		2533328	0					
ANR	2533345	IdentifierDeclType	ClassAdUnParser		2533328	0					
ANR	2533346	Identifier	unp		2533328	1					
ANR	2533347	ExpressionStatement	"sig = """""	46:4:1233:1241	2533328	4	True				
ANR	2533348	AssignmentExpression	"sig = """""		2533328	0		=			
ANR	2533349	Identifier	sig		2533328	0					
ANR	2533350	PrimaryExpression	""""""		2533328	1					
ANR	2533351	ForStatement	for ( itr = refs . begin ( ) ; itr != refs . end ( ) ; itr ++ )		2533328	5					
ANR	2533352	ForInit	itr = refs . begin ( ) ;	47:9:1252:1269	2533328	0	True				
ANR	2533353	AssignmentExpression	itr = refs . begin ( )		2533328	0		=			
ANR	2533354	Identifier	itr		2533328	0					
ANR	2533355	CallExpression	refs . begin ( )		2533328	1					
ANR	2533356	Callee	refs . begin		2533328	0					
ANR	2533357	MemberAccess	refs . begin		2533328	0					
ANR	2533358	Identifier	refs		2533328	0					
ANR	2533359	Identifier	begin		2533328	1					
ANR	2533360	ArgumentList			2533328	1					
ANR	2533361	Condition	itr != refs . end ( )	47:28:1271:1287	2533328	1	True				
ANR	2533362	EqualityExpression	itr != refs . end ( )		2533328	0		!=			
ANR	2533363	Identifier	itr		2533328	0					
ANR	2533364	CallExpression	refs . end ( )		2533328	1					
ANR	2533365	Callee	refs . end		2533328	0					
ANR	2533366	MemberAccess	refs . end		2533328	0					
ANR	2533367	Identifier	refs		2533328	0					
ANR	2533368	Identifier	end		2533328	1					
ANR	2533369	ArgumentList			2533328	1					
ANR	2533370	PostIncDecOperationExpression	itr ++	47:47:1290:1294	2533328	2	True				
ANR	2533371	Identifier	itr		2533328	0					
ANR	2533372	IncDec	++		2533328	1					
ANR	2533373	CompoundStatement		8:55:205:205	2533328	3					
ANR	2533374	IfStatement	if ( ( expr = ad -> Lookup ( * itr ) ) && expr -> GetKind ( ) == ExprTree :: LITERAL_NODE )		2533328	0					
ANR	2533375	Condition	( expr = ad -> Lookup ( * itr ) ) && expr -> GetKind ( ) == ExprTree :: LITERAL_NODE	48:11:1311:1374	2533328	0	True				
ANR	2533376	AndExpression	( expr = ad -> Lookup ( * itr ) ) && expr -> GetKind ( ) == ExprTree :: LITERAL_NODE		2533328	0		&&			
ANR	2533377	AssignmentExpression	expr = ad -> Lookup ( * itr )		2533328	0		=			
ANR	2533378	Identifier	expr		2533328	0					
ANR	2533379	CallExpression	ad -> Lookup ( * itr )		2533328	1					
ANR	2533380	Callee	ad -> Lookup		2533328	0					
ANR	2533381	PtrMemberAccess	ad -> Lookup		2533328	0					
ANR	2533382	Identifier	ad		2533328	0					
ANR	2533383	Identifier	Lookup		2533328	1					
ANR	2533384	ArgumentList	* itr		2533328	1					
ANR	2533385	Argument	* itr		2533328	0					
ANR	2533386	UnaryOperationExpression	* itr		2533328	0					
ANR	2533387	UnaryOperator	*		2533328	0					
ANR	2533388	Identifier	itr		2533328	1					
ANR	2533389	EqualityExpression	expr -> GetKind ( ) == ExprTree :: LITERAL_NODE		2533328	1		==			
ANR	2533390	CallExpression	expr -> GetKind ( )		2533328	0					
ANR	2533391	Callee	expr -> GetKind		2533328	0					
ANR	2533392	PtrMemberAccess	expr -> GetKind		2533328	0					
ANR	2533393	Identifier	expr		2533328	0					
ANR	2533394	Identifier	GetKind		2533328	1					
ANR	2533395	ArgumentList			2533328	1					
ANR	2533396	Identifier	ExprTree :: LITERAL_NODE		2533328	1					
ANR	2533397	CompoundStatement		9:76:283:283	2533328	1					
ANR	2533398	ExpressionStatement	"unp . Unparse ( sig , expr )"	49:12:1390:1414	2533328	0	True				
ANR	2533399	CallExpression	"unp . Unparse ( sig , expr )"		2533328	0					
ANR	2533400	Callee	unp . Unparse		2533328	0					
ANR	2533401	MemberAccess	unp . Unparse		2533328	0					
ANR	2533402	Identifier	unp		2533328	0					
ANR	2533403	Identifier	Unparse		2533328	1					
ANR	2533404	ArgumentList	sig		2533328	1					
ANR	2533405	Argument	sig		2533328	0					
ANR	2533406	Identifier	sig		2533328	0					
ANR	2533407	Argument	expr		2533328	1					
ANR	2533408	Identifier	expr		2533328	0					
ANR	2533409	ElseStatement	else		2533328	0					
ANR	2533410	CompoundStatement		11:15:338:338	2533328	0					
ANR	2533411	ReturnStatement	return ( false ) ;	51:12:1445:1460	2533328	0	True				
ANR	2533412	Identifier	false		2533328	0					
ANR	2533413	ExpressionStatement	"sig += "":"""	53:8:1480:1490	2533328	1	True				
ANR	2533414	AssignmentExpression	"sig += "":"""		2533328	0		+=			
ANR	2533415	Identifier	sig		2533328	0					
ANR	2533416	PrimaryExpression	""":"""		2533328	1					
ANR	2533417	ReturnStatement	return ( true ) ;	56:4:1503:1517	2533328	6	True				
ANR	2533418	Identifier	true		2533328	0					
ANR	2533419	ReturnType	bool		2533328	1					
ANR	2533420	Identifier	MakeSignature		2533328	2					
ANR	2533421	ParameterList	"const ClassAd * ad , const References & refs , string & sig"		2533328	3					
ANR	2533422	Parameter	const ClassAd * ad	39:15:1035:1051	2533328	0	True				
ANR	2533423	ParameterType	const ClassAd *		2533328	0					
ANR	2533424	Identifier	ad		2533328	1					
ANR	2533425	Parameter	const References & refs	39:34:1054:1075	2533328	1	True				
ANR	2533426	ParameterType	const References &		2533328	0					
ANR	2533427	Identifier	refs		2533328	1					
ANR	2533428	Parameter	string & sig	39:58:1078:1088	2533328	2	True				
ANR	2533429	ParameterType	string &		2533328	0					
ANR	2533430	Identifier	sig		2533328	1					
ANR	2533431	CFGEntryNode	ENTRY		2533328		True				
ANR	2533432	CFGExitNode	EXIT		2533328		True				
ANR	2533433	Symbol	val		2533328						
ANR	2533434	Symbol	expr -> GetKind		2533328						
ANR	2533435	Symbol	ad		2533328						
ANR	2533436	Symbol	refs . end		2533328						
ANR	2533437	Symbol	itr		2533328						
ANR	2533438	Symbol	ad -> Lookup		2533328						
ANR	2533439	Symbol	ExprTree :: LITERAL_NODE		2533328						
ANR	2533440	Symbol	false		2533328						
ANR	2533441	Symbol	* ad		2533328						
ANR	2533442	Symbol	* itr		2533328						
ANR	2533443	Symbol	sig		2533328						
ANR	2533444	Symbol	refs		2533328						
ANR	2533445	Symbol	* expr		2533328						
ANR	2533446	Symbol	unp		2533328						
ANR	2533447	Symbol	true		2533328						
ANR	2533448	Symbol	expr		2533328						
ANR	2533449	Symbol	refs . begin		2533328						
ANR	2533450	Function	Compress	60:0:1523:2940							
ANR	2533451	FunctionDef	"Compress (ClassAdCollectionServer * server , LocalCollectionQuery * query , const References & refs , CompressedAds & comp , list < ClassAd * > & rest)"		2533450	0					
ANR	2533452	CompoundStatement		63:0:1672:2940	2533450	0					
ANR	2533453	IdentifierDeclStatement	"string key , sig ;"	64:4:1678:1714	2533450	0	True				
ANR	2533454	IdentifierDecl	key		2533450	0					
ANR	2533455	IdentifierDeclType	string		2533450	0					
ANR	2533456	Identifier	key		2533450	1					
ANR	2533457	IdentifierDecl	sig		2533450	1					
ANR	2533458	IdentifierDeclType	string		2533450	0					
ANR	2533459	Identifier	sig		2533450	1					
ANR	2533460	IdentifierDeclStatement	References :: const_iterator ritr ;	65:4:1720:1752	2533450	1	True				
ANR	2533461	IdentifierDecl	ritr		2533450	0					
ANR	2533462	IdentifierDeclType	References :: const_iterator		2533450	0					
ANR	2533463	Identifier	ritr		2533450	1					
ANR	2533464	IdentifierDeclStatement	ClassAd * ad ;	66:4:1758:1789	2533450	2	True				
ANR	2533465	IdentifierDecl	* ad		2533450	0					
ANR	2533466	IdentifierDeclType	ClassAd *		2533450	0					
ANR	2533467	Identifier	ad		2533450	1					
ANR	2533468	IdentifierDeclStatement	CompressedAds :: iterator citr ;	67:4:1795:1827	2533450	3	True				
ANR	2533469	IdentifierDecl	citr		2533450	0					
ANR	2533470	IdentifierDeclType	CompressedAds :: iterator		2533450	0					
ANR	2533471	Identifier	citr		2533450	1					
ANR	2533472	IdentifierDeclStatement	ClassAdBin * bin ;	68:4:1833:1865	2533450	4	True				
ANR	2533473	IdentifierDecl	* bin		2533450	0					
ANR	2533474	IdentifierDeclType	ClassAdBin *		2533450	0					
ANR	2533475	Identifier	bin		2533450	1					
ANR	2533476	ExpressionStatement	query -> ToFirst ( )	70:4:1872:1889	2533450	5	True				
ANR	2533477	CallExpression	query -> ToFirst ( )		2533450	0					
ANR	2533478	Callee	query -> ToFirst		2533450	0					
ANR	2533479	PtrMemberAccess	query -> ToFirst		2533450	0					
ANR	2533480	Identifier	query		2533450	0					
ANR	2533481	Identifier	ToFirst		2533450	1					
ANR	2533482	ArgumentList			2533450	1					
ANR	2533483	ExpressionStatement	query -> Current ( key )	71:4:1895:1916	2533450	6	True				
ANR	2533484	CallExpression	query -> Current ( key )		2533450	0					
ANR	2533485	Callee	query -> Current		2533450	0					
ANR	2533486	PtrMemberAccess	query -> Current		2533450	0					
ANR	2533487	Identifier	query		2533450	0					
ANR	2533488	Identifier	Current		2533450	1					
ANR	2533489	ArgumentList	key		2533450	1					
ANR	2533490	Argument	key		2533450	0					
ANR	2533491	Identifier	key		2533450	0					
ANR	2533492	WhileStatement	while ( ! query -> IsAfterLast ( ) )		2533450	7					
ANR	2533493	Condition	! query -> IsAfterLast ( )	72:11:1929:1950	2533450	0	True				
ANR	2533494	UnaryOperationExpression	! query -> IsAfterLast ( )		2533450	0					
ANR	2533495	UnaryOperator	!		2533450	0					
ANR	2533496	CallExpression	query -> IsAfterLast ( )		2533450	1					
ANR	2533497	Callee	query -> IsAfterLast		2533450	0					
ANR	2533498	PtrMemberAccess	query -> IsAfterLast		2533450	0					
ANR	2533499	Identifier	query		2533450	0					
ANR	2533500	Identifier	IsAfterLast		2533450	1					
ANR	2533501	ArgumentList			2533450	1					
ANR	2533502	CompoundStatement		10:36:281:281	2533450	1					
ANR	2533503	IfStatement	if ( ! ( ad = server -> GetClassAd ( key ) ) )		2533450	0					
ANR	2533504	Condition	! ( ad = server -> GetClassAd ( key ) )	74:12:1990:2024	2533450	0	True				
ANR	2533505	UnaryOperationExpression	! ( ad = server -> GetClassAd ( key ) )		2533450	0					
ANR	2533506	UnaryOperator	!		2533450	0					
ANR	2533507	AssignmentExpression	ad = server -> GetClassAd ( key )		2533450	1		=			
ANR	2533508	Identifier	ad		2533450	0					
ANR	2533509	CallExpression	server -> GetClassAd ( key )		2533450	1					
ANR	2533510	Callee	server -> GetClassAd		2533450	0					
ANR	2533511	PtrMemberAccess	server -> GetClassAd		2533450	0					
ANR	2533512	Identifier	server		2533450	0					
ANR	2533513	Identifier	GetClassAd		2533450	1					
ANR	2533514	ArgumentList	key		2533450	1					
ANR	2533515	Argument	key		2533450	0					
ANR	2533516	Identifier	key		2533450	0					
ANR	2533517	CompoundStatement		12:50:355:355	2533450	1					
ANR	2533518	ReturnStatement	return ( false ) ;	75:12:2042:2057	2533450	0	True				
ANR	2533519	Identifier	false		2533450	0					
ANR	2533520	IfStatement	"if ( ! MakeSignature ( ad , refs , sig ) )"		2533450	1					
ANR	2533521	Condition	"! MakeSignature ( ad , refs , sig )"	79:12:2125:2155	2533450	0	True				
ANR	2533522	UnaryOperationExpression	"! MakeSignature ( ad , refs , sig )"		2533450	0					
ANR	2533523	UnaryOperator	!		2533450	0					
ANR	2533524	CallExpression	"MakeSignature ( ad , refs , sig )"		2533450	1					
ANR	2533525	Callee	MakeSignature		2533450	0					
ANR	2533526	Identifier	MakeSignature		2533450	0					
ANR	2533527	ArgumentList	ad		2533450	1					
ANR	2533528	Argument	ad		2533450	0					
ANR	2533529	Identifier	ad		2533450	0					
ANR	2533530	Argument	refs		2533450	1					
ANR	2533531	Identifier	refs		2533450	0					
ANR	2533532	Argument	sig		2533450	2					
ANR	2533533	Identifier	sig		2533450	0					
ANR	2533534	CompoundStatement		17:46:486:486	2533450	1					
ANR	2533535	ExpressionStatement	rest . push_back ( ( ClassAd * ) ad -> Copy ( ) )	81:12:2232:2272	2533450	0	True				
ANR	2533536	CallExpression	rest . push_back ( ( ClassAd * ) ad -> Copy ( ) )		2533450	0					
ANR	2533537	Callee	rest . push_back		2533450	0					
ANR	2533538	MemberAccess	rest . push_back		2533450	0					
ANR	2533539	Identifier	rest		2533450	0					
ANR	2533540	Identifier	push_back		2533450	1					
ANR	2533541	ArgumentList	( ClassAd * ) ad -> Copy ( )		2533450	1					
ANR	2533542	Argument	( ClassAd * ) ad -> Copy ( )		2533450	0					
ANR	2533543	CastExpression	( ClassAd * ) ad -> Copy ( )		2533450	0					
ANR	2533544	CastTarget	ClassAd *		2533450	0					
ANR	2533545	CallExpression	ad -> Copy ( )		2533450	1					
ANR	2533546	Callee	ad -> Copy		2533450	0					
ANR	2533547	PtrMemberAccess	ad -> Copy		2533450	0					
ANR	2533548	Identifier	ad		2533450	0					
ANR	2533549	Identifier	Copy		2533450	1					
ANR	2533550	ArgumentList			2533450	1					
ANR	2533551	IfStatement	if ( ( citr = comp . find ( sig ) ) == comp . end ( ) )		2533450	2					
ANR	2533552	Condition	( citr = comp . find ( sig ) ) == comp . end ( )	85:12:2320:2361	2533450	0	True				
ANR	2533553	EqualityExpression	( citr = comp . find ( sig ) ) == comp . end ( )		2533450	0		==			
ANR	2533554	AssignmentExpression	citr = comp . find ( sig )		2533450	0		=			
ANR	2533555	Identifier	citr		2533450	0					
ANR	2533556	CallExpression	comp . find ( sig )		2533450	1					
ANR	2533557	Callee	comp . find		2533450	0					
ANR	2533558	MemberAccess	comp . find		2533450	0					
ANR	2533559	Identifier	comp		2533450	0					
ANR	2533560	Identifier	find		2533450	1					
ANR	2533561	ArgumentList	sig		2533450	1					
ANR	2533562	Argument	sig		2533450	0					
ANR	2533563	Identifier	sig		2533450	0					
ANR	2533564	CallExpression	comp . end ( )		2533450	1					
ANR	2533565	Callee	comp . end		2533450	0					
ANR	2533566	MemberAccess	comp . end		2533450	0					
ANR	2533567	Identifier	comp		2533450	0					
ANR	2533568	Identifier	end		2533450	1					
ANR	2533569	ArgumentList			2533450	1					
ANR	2533570	CompoundStatement		23:57:692:692	2533450	1					
ANR	2533571	Statement	bin	87:12:2418:2420	2533450	0	True				
ANR	2533572	Statement	=	87:16:2422:2422	2533450	1	True				
ANR	2533573	Statement	new	87:18:2424:2426	2533450	2	True				
ANR	2533574	ExpressionStatement	ClassAdBin	87:22:2428:2438	2533450	3	True				
ANR	2533575	Identifier	ClassAdBin		2533450	0					
ANR	2533576	ExpressionStatement	bin -> count = 1	88:12:2452:2466	2533450	4	True				
ANR	2533577	AssignmentExpression	bin -> count = 1		2533450	0		=			
ANR	2533578	PtrMemberAccess	bin -> count		2533450	0					
ANR	2533579	Identifier	bin		2533450	0					
ANR	2533580	Identifier	count		2533450	1					
ANR	2533581	PrimaryExpression	1		2533450	1					
ANR	2533582	ForStatement	for ( ritr = refs . begin ( ) ; ritr != refs . end ( ) ; ritr ++ )		2533450	5					
ANR	2533583	ForInit	ritr = refs . begin ( ) ;	91:17:2531:2549	2533450	0	True				
ANR	2533584	AssignmentExpression	ritr = refs . begin ( )		2533450	0		=			
ANR	2533585	Identifier	ritr		2533450	0					
ANR	2533586	CallExpression	refs . begin ( )		2533450	1					
ANR	2533587	Callee	refs . begin		2533450	0					
ANR	2533588	MemberAccess	refs . begin		2533450	0					
ANR	2533589	Identifier	refs		2533450	0					
ANR	2533590	Identifier	begin		2533450	1					
ANR	2533591	ArgumentList			2533450	1					
ANR	2533592	Condition	ritr != refs . end ( )	91:37:2551:2567	2533450	1	True				
ANR	2533593	EqualityExpression	ritr != refs . end ( )		2533450	0		!=			
ANR	2533594	Identifier	ritr		2533450	0					
ANR	2533595	CallExpression	refs . end ( )		2533450	1					
ANR	2533596	Callee	refs . end		2533450	0					
ANR	2533597	MemberAccess	refs . end		2533450	0					
ANR	2533598	Identifier	refs		2533450	0					
ANR	2533599	Identifier	end		2533450	1					
ANR	2533600	ArgumentList			2533450	1					
ANR	2533601	PostIncDecOperationExpression	ritr ++	91:56:2570:2575	2533450	2	True				
ANR	2533602	Identifier	ritr		2533450	0					
ANR	2533603	IncDec	++		2533450	1					
ANR	2533604	CompoundStatement		29:65:906:906	2533450	3					
ANR	2533605	ExpressionStatement	"bin -> ad -> Insert ( * ritr , ad -> Lookup ( * ritr ) -> Copy ( ) )"	92:16:2597:2651	2533450	0	True				
ANR	2533606	CallExpression	"bin -> ad -> Insert ( * ritr , ad -> Lookup ( * ritr ) -> Copy ( ) )"		2533450	0					
ANR	2533607	Callee	bin -> ad -> Insert		2533450	0					
ANR	2533608	PtrMemberAccess	bin -> ad -> Insert		2533450	0					
ANR	2533609	PtrMemberAccess	bin -> ad		2533450	0					
ANR	2533610	Identifier	bin		2533450	0					
ANR	2533611	Identifier	ad		2533450	1					
ANR	2533612	Identifier	Insert		2533450	1					
ANR	2533613	ArgumentList	* ritr		2533450	1					
ANR	2533614	Argument	* ritr		2533450	0					
ANR	2533615	UnaryOperationExpression	* ritr		2533450	0					
ANR	2533616	UnaryOperator	*		2533450	0					
ANR	2533617	Identifier	ritr		2533450	1					
ANR	2533618	Argument	ad -> Lookup ( * ritr ) -> Copy ( )		2533450	1					
ANR	2533619	CallExpression	ad -> Lookup ( * ritr ) -> Copy ( )		2533450	0					
ANR	2533620	Callee	ad -> Lookup ( * ritr ) -> Copy		2533450	0					
ANR	2533621	PtrMemberAccess	ad -> Lookup ( * ritr ) -> Copy		2533450	0					
ANR	2533622	CallExpression	ad -> Lookup ( * ritr )		2533450	0					
ANR	2533623	Callee	ad -> Lookup		2533450	0					
ANR	2533624	PtrMemberAccess	ad -> Lookup		2533450	0					
ANR	2533625	Identifier	ad		2533450	0					
ANR	2533626	Identifier	Lookup		2533450	1					
ANR	2533627	ArgumentList	* ritr		2533450	1					
ANR	2533628	Argument	* ritr		2533450	0					
ANR	2533629	UnaryOperationExpression	* ritr		2533450	0					
ANR	2533630	UnaryOperator	*		2533450	0					
ANR	2533631	Identifier	ritr		2533450	1					
ANR	2533632	Identifier	Copy		2533450	1					
ANR	2533633	ArgumentList			2533450	1					
ANR	2533634	ExpressionStatement	comp [ sig ] = bin	96:3:2704:2719	2533450	6	True				
ANR	2533635	AssignmentExpression	comp [ sig ] = bin		2533450	0		=			
ANR	2533636	ArrayIndexing	comp [ sig ]		2533450	0					
ANR	2533637	Identifier	comp		2533450	0					
ANR	2533638	Identifier	sig		2533450	1					
ANR	2533639	Identifier	bin		2533450	1					
ANR	2533640	ElseStatement	else		2533450	0					
ANR	2533641	CompoundStatement		35:15:1063:1063	2533450	0					
ANR	2533642	ExpressionStatement	bin = citr -> second	99:12:2797:2815	2533450	0	True				
ANR	2533643	AssignmentExpression	bin = citr -> second		2533450	0		=			
ANR	2533644	Identifier	bin		2533450	0					
ANR	2533645	PtrMemberAccess	citr -> second		2533450	1					
ANR	2533646	Identifier	citr		2533450	0					
ANR	2533647	Identifier	second		2533450	1					
ANR	2533648	ExpressionStatement	bin -> count ++	100:12:2829:2841	2533450	1	True				
ANR	2533649	PostIncDecOperationExpression	bin -> count ++		2533450	0					
ANR	2533650	PtrMemberAccess	bin -> count		2533450	0					
ANR	2533651	Identifier	bin		2533450	0					
ANR	2533652	Identifier	count		2533450	1					
ANR	2533653	IncDec	++		2533450	1					
ANR	2533654	ExpressionStatement	query -> Next ( key )	104:8:2893:2911	2533450	3	True				
ANR	2533655	CallExpression	query -> Next ( key )		2533450	0					
ANR	2533656	Callee	query -> Next		2533450	0					
ANR	2533657	PtrMemberAccess	query -> Next		2533450	0					
ANR	2533658	Identifier	query		2533450	0					
ANR	2533659	Identifier	Next		2533450	1					
ANR	2533660	ArgumentList	key		2533450	1					
ANR	2533661	Argument	key		2533450	0					
ANR	2533662	Identifier	key		2533450	0					
ANR	2533663	ReturnStatement	return ( true ) ;	107:4:2924:2938	2533450	8	True				
ANR	2533664	Identifier	true		2533450	0					
ANR	2533665	ReturnType	bool		2533450	1					
ANR	2533666	Identifier	Compress		2533450	2					
ANR	2533667	ParameterList	"ClassAdCollectionServer * server , LocalCollectionQuery * query , const References & refs , CompressedAds & comp , list < ClassAd * > & rest"		2533450	3					
ANR	2533668	Parameter	ClassAdCollectionServer * server	61:10:1538:1568	2533450	0	True				
ANR	2533669	ParameterType	ClassAdCollectionServer *		2533450	0					
ANR	2533670	Identifier	server		2533450	1					
ANR	2533671	Parameter	LocalCollectionQuery * query	61:43:1571:1597	2533450	1	True				
ANR	2533672	ParameterType	LocalCollectionQuery *		2533450	0					
ANR	2533673	Identifier	query		2533450	1					
ANR	2533674	Parameter	const References & refs	62:4:1604:1625	2533450	2	True				
ANR	2533675	ParameterType	const References &		2533450	0					
ANR	2533676	Identifier	refs		2533450	1					
ANR	2533677	Parameter	CompressedAds & comp	62:28:1628:1646	2533450	3	True				
ANR	2533678	ParameterType	CompressedAds &		2533450	0					
ANR	2533679	Identifier	comp		2533450	1					
ANR	2533680	Parameter	list < ClassAd * > & rest	62:49:1649:1668	2533450	4	True				
ANR	2533681	ParameterType	list < ClassAd * > &		2533450	0					
ANR	2533682	Identifier	rest		2533450	1					
ANR	2533683	CFGEntryNode	ENTRY		2533450		True				
ANR	2533684	CFGExitNode	EXIT		2533450		True				
ANR	2533685	Symbol	ritr		2533450						
ANR	2533686	Symbol	server		2533450						
ANR	2533687	Symbol	* server		2533450						
ANR	2533688	Symbol	refs . end		2533450						
ANR	2533689	Symbol	bin		2533450						
ANR	2533690	Symbol	ad -> Lookup		2533450						
ANR	2533691	Symbol	* citr		2533450						
ANR	2533692	Symbol	* ritr		2533450						
ANR	2533693	Symbol	citr		2533450						
ANR	2533694	Symbol	* ad		2533450						
ANR	2533695	Symbol	* * ad		2533450						
ANR	2533696	Symbol	* ad -> Lookup		2533450						
ANR	2533697	Symbol	* bin		2533450						
ANR	2533698	Symbol	sig		2533450						
ANR	2533699	Symbol	* comp		2533450						
ANR	2533700	Symbol	server -> GetClassAd		2533450						
ANR	2533701	Symbol	* query		2533450						
ANR	2533702	Symbol	bin -> count		2533450						
ANR	2533703	Symbol	refs . begin		2533450						
ANR	2533704	Symbol	citr -> second		2533450						
ANR	2533705	Symbol	key		2533450						
ANR	2533706	Symbol	comp		2533450						
ANR	2533707	Symbol	rest		2533450						
ANR	2533708	Symbol	query -> IsAfterLast		2533450						
ANR	2533709	Symbol	ad -> Lookup ( * ritr ) -> Copy		2533450						
ANR	2533710	Symbol	ad		2533450						
ANR	2533711	Symbol	query		2533450						
ANR	2533712	Symbol	false		2533450						
ANR	2533713	Symbol	MakeSignature		2533450						
ANR	2533714	Symbol	bin -> ad		2533450						
ANR	2533715	Symbol	refs		2533450						
ANR	2533716	Symbol	comp . find		2533450						
ANR	2533717	Symbol	comp . end		2533450						
ANR	2533718	Symbol	true		2533450						
ANR	2533719	Symbol	ad -> Copy		2533450						
ANR	2533720	Symbol	* sig		2533450						
