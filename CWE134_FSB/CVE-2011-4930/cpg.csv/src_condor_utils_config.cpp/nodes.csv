command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4680328	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_config.cpp								
ANR	4680329	DeclStmt									
ANR	4680330	Decl							char	"char * ( FILE * , int )"	getline_implementation
ANR	4680331	DeclStmt									
ANR	4680332	Decl							int	int	ConfigLineNo
ANR	4680333	Function	condor_isidchar	54:0:1997:2248							
ANR	4680334	FunctionDef	condor_isidchar (int c)		4680333	0					
ANR	4680335	CompoundStatement		56:0:2024:2248	4680333	0					
ANR	4680336	IfStatement	"if ( ( 'a' <= c && c <= 'z' ) || ( 'A' <= c && c <= 'Z' ) || ( '0' <= c && c <= '9' ) || ( strchr ( ""_./"" , c ) != NULL ) )"		4680333	0					
ANR	4680337	Condition	"( 'a' <= c && c <= 'z' ) || ( 'A' <= c && c <= 'Z' ) || ( '0' <= c && c <= '9' ) || ( strchr ( ""_./"" , c ) != NULL )"	57:5:2031:2213	4680333	0	True				
ANR	4680338	OrExpression	"( 'a' <= c && c <= 'z' ) || ( 'A' <= c && c <= 'Z' ) || ( '0' <= c && c <= '9' ) || ( strchr ( ""_./"" , c ) != NULL )"		4680333	0		||			
ANR	4680339	AndExpression	'a' <= c && c <= 'z'		4680333	0		&&			
ANR	4680340	RelationalExpression	'a' <= c		4680333	0		<=			
ANR	4680341	PrimaryExpression	'a'		4680333	0					
ANR	4680342	Identifier	c		4680333	1					
ANR	4680343	RelationalExpression	c <= 'z'		4680333	1		<=			
ANR	4680344	Identifier	c		4680333	0					
ANR	4680345	PrimaryExpression	'z'		4680333	1					
ANR	4680346	OrExpression	"( 'A' <= c && c <= 'Z' ) || ( '0' <= c && c <= '9' ) || ( strchr ( ""_./"" , c ) != NULL )"		4680333	1		||			
ANR	4680347	AndExpression	'A' <= c && c <= 'Z'		4680333	0		&&			
ANR	4680348	RelationalExpression	'A' <= c		4680333	0		<=			
ANR	4680349	PrimaryExpression	'A'		4680333	0					
ANR	4680350	Identifier	c		4680333	1					
ANR	4680351	RelationalExpression	c <= 'Z'		4680333	1		<=			
ANR	4680352	Identifier	c		4680333	0					
ANR	4680353	PrimaryExpression	'Z'		4680333	1					
ANR	4680354	OrExpression	"( '0' <= c && c <= '9' ) || ( strchr ( ""_./"" , c ) != NULL )"		4680333	1		||			
ANR	4680355	AndExpression	'0' <= c && c <= '9'		4680333	0		&&			
ANR	4680356	RelationalExpression	'0' <= c		4680333	0		<=			
ANR	4680357	PrimaryExpression	'0'		4680333	0					
ANR	4680358	Identifier	c		4680333	1					
ANR	4680359	RelationalExpression	c <= '9'		4680333	1		<=			
ANR	4680360	Identifier	c		4680333	0					
ANR	4680361	PrimaryExpression	'9'		4680333	1					
ANR	4680362	EqualityExpression	"strchr ( ""_./"" , c ) != NULL"		4680333	1		!=			
ANR	4680363	CallExpression	"strchr ( ""_./"" , c )"		4680333	0					
ANR	4680364	Callee	strchr		4680333	0					
ANR	4680365	Identifier	strchr		4680333	0					
ANR	4680366	ArgumentList	"""_./"""		4680333	1					
ANR	4680367	Argument	"""_./"""		4680333	0					
ANR	4680368	PrimaryExpression	"""_./"""		4680333	0					
ANR	4680369	Argument	c		4680333	1					
ANR	4680370	Identifier	c		4680333	0					
ANR	4680371	Identifier	NULL		4680333	1					
ANR	4680372	CompoundStatement		7:1:193:193	4680333	1					
ANR	4680373	ReturnStatement	return 1 ;	63:2:2222:2230	4680333	0	True				
ANR	4680374	PrimaryExpression	1		4680333	0					
ANR	4680375	ReturnStatement	return 0 ;	66:1:2238:2246	4680333	1	True				
ANR	4680376	PrimaryExpression	0		4680333	0					
ANR	4680377	ReturnType	int		4680333	1					
ANR	4680378	Identifier	condor_isidchar		4680333	2					
ANR	4680379	ParameterList	int c		4680333	3					
ANR	4680380	Parameter	int c	55:16:2017:2021	4680333	0	True				
ANR	4680381	ParameterType	int		4680333	0					
ANR	4680382	Identifier	c		4680333	1					
ANR	4680383	CFGEntryNode	ENTRY		4680333		True				
ANR	4680384	CFGExitNode	EXIT		4680333		True				
ANR	4680385	Symbol	c		4680333						
ANR	4680386	Symbol	NULL		4680333						
ANR	4680387	Symbol	strchr		4680333						
ANR	4680388	Function	is_valid_param_name	80:0:2530:2750							
ANR	4680389	FunctionDef	is_valid_param_name (const char * name)		4680388	0					
ANR	4680390	CompoundStatement		81:0:2572:2750	4680388	0					
ANR	4680391	WhileStatement	while ( * name )		4680388	0					
ANR	4680392	Condition	* name	84:8:2679:2683	4680388	0	True				
ANR	4680393	UnaryOperationExpression	* name		4680388	0					
ANR	4680394	UnaryOperator	*		4680388	0					
ANR	4680395	Identifier	name		4680388	1					
ANR	4680396	CompoundStatement		4:16:114:114	4680388	1					
ANR	4680397	IfStatement	if ( ! ISIDCHAR ( * name ++ ) )		4680388	0					
ANR	4680398	Condition	! ISIDCHAR ( * name ++ )	85:6:2695:2712	4680388	0	True				
ANR	4680399	UnaryOperationExpression	! ISIDCHAR ( * name ++ )		4680388	0					
ANR	4680400	UnaryOperator	!		4680388	0					
ANR	4680401	CallExpression	ISIDCHAR ( * name ++ )		4680388	1					
ANR	4680402	Callee	ISIDCHAR		4680388	0					
ANR	4680403	Identifier	ISIDCHAR		4680388	0					
ANR	4680404	ArgumentList	* name ++		4680388	1					
ANR	4680405	Argument	* name ++		4680388	0					
ANR	4680406	UnaryOperationExpression	* name ++		4680388	0					
ANR	4680407	UnaryOperator	*		4680388	0					
ANR	4680408	PostIncDecOperationExpression	name ++		4680388	1					
ANR	4680409	Identifier	name		4680388	0					
ANR	4680410	IncDec	++		4680388	1					
ANR	4680411	CompoundStatement		5:27:143:143	4680388	1					
ANR	4680412	ReturnStatement	return 0 ;	86:3:2721:2729	4680388	0	True				
ANR	4680413	PrimaryExpression	0		4680388	0					
ANR	4680414	ReturnStatement	return 1 ;	90:1:2740:2748	4680388	1	True				
ANR	4680415	PrimaryExpression	1		4680388	0					
ANR	4680416	ReturnType	int		4680388	1					
ANR	4680417	Identifier	is_valid_param_name		4680388	2					
ANR	4680418	ParameterList	const char * name		4680388	3					
ANR	4680419	Parameter	const char * name	80:24:2554:2569	4680388	0	True				
ANR	4680420	ParameterType	const char *		4680388	0					
ANR	4680421	Identifier	name		4680388	1					
ANR	4680422	CFGEntryNode	ENTRY		4680388		True				
ANR	4680423	CFGExitNode	EXIT		4680388		True				
ANR	4680424	Symbol	* name		4680388						
ANR	4680425	Symbol	ISIDCHAR		4680388						
ANR	4680426	Symbol	name		4680388						
ANR	4680427	Symbol	* name ++		4680388						
ANR	4680428	Function	parse_param_name_from_config	93:0:2753:3167							
ANR	4680429	FunctionDef	parse_param_name_from_config (const char * config)		4680428	0					
ANR	4680430	CompoundStatement		94:0:2809:3167	4680428	0					
ANR	4680431	IdentifierDeclStatement	"char * name , * tmp ;"	95:1:2812:2828	4680428	0	True				
ANR	4680432	IdentifierDecl	* name		4680428	0					
ANR	4680433	IdentifierDeclType	char *		4680428	0					
ANR	4680434	Identifier	name		4680428	1					
ANR	4680435	IdentifierDecl	* tmp		4680428	1					
ANR	4680436	IdentifierDeclType	char *		4680428	0					
ANR	4680437	Identifier	tmp		4680428	1					
ANR	4680438	IfStatement	if ( ! ( name = strdup ( config ) ) )		4680428	1					
ANR	4680439	Condition	! ( name = strdup ( config ) )	97:5:2836:2859	4680428	0	True				
ANR	4680440	UnaryOperationExpression	! ( name = strdup ( config ) )		4680428	0					
ANR	4680441	UnaryOperator	!		4680428	0					
ANR	4680442	AssignmentExpression	name = strdup ( config )		4680428	1		=			
ANR	4680443	Identifier	name		4680428	0					
ANR	4680444	CallExpression	strdup ( config )		4680428	1					
ANR	4680445	Callee	strdup		4680428	0					
ANR	4680446	Identifier	strdup		4680428	0					
ANR	4680447	ArgumentList	config		4680428	1					
ANR	4680448	Argument	config		4680428	0					
ANR	4680449	Identifier	config		4680428	0					
ANR	4680450	CompoundStatement		4:31:52:52	4680428	1					
ANR	4680451	ExpressionStatement	"EXCEPT ( ""Out of memory!"" )"	98:2:2866:2890	4680428	0	True				
ANR	4680452	CallExpression	"EXCEPT ( ""Out of memory!"" )"		4680428	0					
ANR	4680453	Callee	EXCEPT		4680428	0					
ANR	4680454	Identifier	EXCEPT		4680428	0					
ANR	4680455	ArgumentList	"""Out of memory!"""		4680428	1					
ANR	4680456	Argument	"""Out of memory!"""		4680428	0					
ANR	4680457	PrimaryExpression	"""Out of memory!"""		4680428	0					
ANR	4680458	ExpressionStatement	"tmp = strchr ( name , '=' )"	101:1:2897:2920	4680428	2	True				
ANR	4680459	AssignmentExpression	"tmp = strchr ( name , '=' )"		4680428	0		=			
ANR	4680460	Identifier	tmp		4680428	0					
ANR	4680461	CallExpression	"strchr ( name , '=' )"		4680428	1					
ANR	4680462	Callee	strchr		4680428	0					
ANR	4680463	Identifier	strchr		4680428	0					
ANR	4680464	ArgumentList	name		4680428	1					
ANR	4680465	Argument	name		4680428	0					
ANR	4680466	Identifier	name		4680428	0					
ANR	4680467	Argument	'='		4680428	1					
ANR	4680468	PrimaryExpression	'='		4680428	0					
ANR	4680469	IfStatement	if ( ! tmp )		4680428	3					
ANR	4680470	Condition	! tmp	102:5:2927:2930	4680428	0	True				
ANR	4680471	UnaryOperationExpression	! tmp		4680428	0					
ANR	4680472	UnaryOperator	!		4680428	0					
ANR	4680473	Identifier	tmp		4680428	1					
ANR	4680474	CompoundStatement		9:11:123:123	4680428	1					
ANR	4680475	ExpressionStatement	"tmp = strchr ( name , ':' )"	103:2:2937:2960	4680428	0	True				
ANR	4680476	AssignmentExpression	"tmp = strchr ( name , ':' )"		4680428	0		=			
ANR	4680477	Identifier	tmp		4680428	0					
ANR	4680478	CallExpression	"strchr ( name , ':' )"		4680428	1					
ANR	4680479	Callee	strchr		4680428	0					
ANR	4680480	Identifier	strchr		4680428	0					
ANR	4680481	ArgumentList	name		4680428	1					
ANR	4680482	Argument	name		4680428	0					
ANR	4680483	Identifier	name		4680428	0					
ANR	4680484	Argument	':'		4680428	1					
ANR	4680485	PrimaryExpression	':'		4680428	0					
ANR	4680486	IfStatement	if ( ! tmp )		4680428	4					
ANR	4680487	Condition	! tmp	105:5:2970:2973	4680428	0	True				
ANR	4680488	UnaryOperationExpression	! tmp		4680428	0					
ANR	4680489	UnaryOperator	!		4680428	0					
ANR	4680490	Identifier	tmp		4680428	1					
ANR	4680491	CompoundStatement		12:11:166:166	4680428	1					
ANR	4680492	ReturnStatement	return NULL ;	107:2:3046:3057	4680428	0	True				
ANR	4680493	Identifier	NULL		4680428	0					
ANR	4680494	ExpressionStatement	* tmp = ' '	111:1:3088:3098	4680428	5	True				
ANR	4680495	AssignmentExpression	* tmp = ' '		4680428	0		=			
ANR	4680496	UnaryOperationExpression	* tmp		4680428	0					
ANR	4680497	UnaryOperator	*		4680428	0					
ANR	4680498	Identifier	tmp		4680428	1					
ANR	4680499	PrimaryExpression	' '		4680428	1					
ANR	4680500	WhileStatement	while ( isspace ( * tmp ) )		4680428	6					
ANR	4680501	Condition	isspace ( * tmp )	112:8:3108:3120	4680428	0	True				
ANR	4680502	CallExpression	isspace ( * tmp )		4680428	0					
ANR	4680503	Callee	isspace		4680428	0					
ANR	4680504	Identifier	isspace		4680428	0					
ANR	4680505	ArgumentList	* tmp		4680428	1					
ANR	4680506	Argument	* tmp		4680428	0					
ANR	4680507	UnaryOperationExpression	* tmp		4680428	0					
ANR	4680508	UnaryOperator	*		4680428	0					
ANR	4680509	Identifier	tmp		4680428	1					
ANR	4680510	CompoundStatement		19:23:313:313	4680428	1					
ANR	4680511	ExpressionStatement	* tmp = '\\0'	113:2:3127:3138	4680428	0	True				
ANR	4680512	AssignmentExpression	* tmp = '\\0'		4680428	0		=			
ANR	4680513	UnaryOperationExpression	* tmp		4680428	0					
ANR	4680514	UnaryOperator	*		4680428	0					
ANR	4680515	Identifier	tmp		4680428	1					
ANR	4680516	PrimaryExpression	'\\0'		4680428	1					
ANR	4680517	ExpressionStatement	tmp --	114:2:3142:3147	4680428	1	True				
ANR	4680518	PostIncDecOperationExpression	tmp --		4680428	0					
ANR	4680519	Identifier	tmp		4680428	0					
ANR	4680520	IncDec	--		4680428	1					
ANR	4680521	ReturnStatement	return name ;	117:1:3154:3165	4680428	7	True				
ANR	4680522	Identifier	name		4680428	0					
ANR	4680523	ReturnType	char *		4680428	1					
ANR	4680524	Identifier	parse_param_name_from_config		4680428	2					
ANR	4680525	ParameterList	const char * config		4680428	3					
ANR	4680526	Parameter	const char * config	93:36:2789:2806	4680428	0	True				
ANR	4680527	ParameterType	const char *		4680428	0					
ANR	4680528	Identifier	config		4680428	1					
ANR	4680529	CFGEntryNode	ENTRY		4680428		True				
ANR	4680530	CFGExitNode	EXIT		4680428		True				
ANR	4680531	Symbol	* tmp		4680428						
ANR	4680532	Symbol	NULL		4680428						
ANR	4680533	Symbol	tmp		4680428						
ANR	4680534	Symbol	name		4680428						
ANR	4680535	Symbol	isspace		4680428						
ANR	4680536	Symbol	strchr		4680428						
ANR	4680537	Symbol	strdup		4680428						
ANR	4680538	Symbol	config		4680428						
ANR	4680539	Function	is_piped_command	120:0:3170:3420							
ANR	4680540	FunctionDef	is_piped_command (const char * filename)		4680539	0					
ANR	4680541	CompoundStatement		122:0:3215:3420	4680539	0					
ANR	4680542	IdentifierDeclStatement	bool retVal = false ;	123:1:3218:3237	4680539	0	True				
ANR	4680543	IdentifierDecl	retVal = false		4680539	0					
ANR	4680544	IdentifierDeclType	bool		4680539	0					
ANR	4680545	Identifier	retVal		4680539	1					
ANR	4680546	AssignmentExpression	retVal = false		4680539	2		=			
ANR	4680547	Identifier	false		4680539	0					
ANR	4680548	Identifier	false		4680539	1					
ANR	4680549	IdentifierDeclStatement	"char const * pdest = strchr ( filename , '|' ) ;"	125:1:3241:3284	4680539	1	True				
ANR	4680550	IdentifierDecl	"* pdest = strchr ( filename , '|' )"		4680539	0					
ANR	4680551	IdentifierDeclType	char const *		4680539	0					
ANR	4680552	Identifier	pdest		4680539	1					
ANR	4680553	AssignmentExpression	"* pdest = strchr ( filename , '|' )"		4680539	2		=			
ANR	4680554	Identifier	pdest		4680539	0					
ANR	4680555	CallExpression	"strchr ( filename , '|' )"		4680539	1					
ANR	4680556	Callee	strchr		4680539	0					
ANR	4680557	Identifier	strchr		4680539	0					
ANR	4680558	ArgumentList	filename		4680539	1					
ANR	4680559	Argument	filename		4680539	0					
ANR	4680560	Identifier	filename		4680539	0					
ANR	4680561	Argument	'|'		4680539	1					
ANR	4680562	PrimaryExpression	'|'		4680539	0					
ANR	4680563	IfStatement	if ( pdest != NULL )		4680539	2					
ANR	4680564	Condition	pdest != NULL	126:6:3292:3304	4680539	0	True				
ANR	4680565	EqualityExpression	pdest != NULL		4680539	0		!=			
ANR	4680566	Identifier	pdest		4680539	0					
ANR	4680567	Identifier	NULL		4680539	1					
ANR	4680568	CompoundStatement		5:22:92:92	4680539	1					
ANR	4680569	ExpressionStatement	retVal = true	128:2:3385:3398	4680539	0	True				
ANR	4680570	AssignmentExpression	retVal = true		4680539	0		=			
ANR	4680571	Identifier	retVal		4680539	0					
ANR	4680572	Identifier	true		4680539	1					
ANR	4680573	ReturnStatement	return retVal ;	131:1:3405:3418	4680539	3	True				
ANR	4680574	Identifier	retVal		4680539	0					
ANR	4680575	ReturnType	bool		4680539	1					
ANR	4680576	Identifier	is_piped_command		4680539	2					
ANR	4680577	ParameterList	const char * filename		4680539	3					
ANR	4680578	Parameter	const char * filename	121:17:3193:3212	4680539	0	True				
ANR	4680579	ParameterType	const char *		4680539	0					
ANR	4680580	Identifier	filename		4680539	1					
ANR	4680581	CFGEntryNode	ENTRY		4680539		True				
ANR	4680582	CFGExitNode	EXIT		4680539		True				
ANR	4680583	Symbol	filename		4680539						
ANR	4680584	Symbol	NULL		4680539						
ANR	4680585	Symbol	false		4680539						
ANR	4680586	Symbol	true		4680539						
ANR	4680587	Symbol	strchr		4680539						
ANR	4680588	Symbol	pdest		4680539						
ANR	4680589	Symbol	retVal		4680539						
ANR	4680590	Function	is_valid_command	136:0:3509:3710							
ANR	4680591	FunctionDef	is_valid_command (const char * cmdToExecute)		4680590	0					
ANR	4680592	CompoundStatement		138:0:3558:3710	4680590	0					
ANR	4680593	IdentifierDeclStatement	bool retVal = false ;	139:1:3561:3580	4680590	0	True				
ANR	4680594	IdentifierDecl	retVal = false		4680590	0					
ANR	4680595	IdentifierDeclType	bool		4680590	0					
ANR	4680596	Identifier	retVal		4680590	1					
ANR	4680597	AssignmentExpression	retVal = false		4680590	2		=			
ANR	4680598	Identifier	false		4680590	0					
ANR	4680599	Identifier	false		4680590	1					
ANR	4680600	IdentifierDeclStatement	int cmdStrLength = strlen ( cmdToExecute ) ;	141:1:3584:3623	4680590	1	True				
ANR	4680601	IdentifierDecl	cmdStrLength = strlen ( cmdToExecute )		4680590	0					
ANR	4680602	IdentifierDeclType	int		4680590	0					
ANR	4680603	Identifier	cmdStrLength		4680590	1					
ANR	4680604	AssignmentExpression	cmdStrLength = strlen ( cmdToExecute )		4680590	2		=			
ANR	4680605	Identifier	cmdStrLength		4680590	0					
ANR	4680606	CallExpression	strlen ( cmdToExecute )		4680590	1					
ANR	4680607	Callee	strlen		4680590	0					
ANR	4680608	Identifier	strlen		4680590	0					
ANR	4680609	ArgumentList	cmdToExecute		4680590	1					
ANR	4680610	Argument	cmdToExecute		4680590	0					
ANR	4680611	Identifier	cmdToExecute		4680590	0					
ANR	4680612	IfStatement	if ( cmdToExecute [ cmdStrLength - 1 ] == '|' )		4680590	2					
ANR	4680613	Condition	cmdToExecute [ cmdStrLength - 1 ] == '|'	142:6:3631:3667	4680590	0	True				
ANR	4680614	EqualityExpression	cmdToExecute [ cmdStrLength - 1 ] == '|'		4680590	0		==			
ANR	4680615	ArrayIndexing	cmdToExecute [ cmdStrLength - 1 ]		4680590	0					
ANR	4680616	Identifier	cmdToExecute		4680590	0					
ANR	4680617	AdditiveExpression	cmdStrLength - 1		4680590	1		-			
ANR	4680618	Identifier	cmdStrLength		4680590	0					
ANR	4680619	PrimaryExpression	1		4680590	1					
ANR	4680620	PrimaryExpression	'|'		4680590	1					
ANR	4680621	CompoundStatement		5:46:112:112	4680590	1					
ANR	4680622	ExpressionStatement	retVal = true	143:2:3675:3688	4680590	0	True				
ANR	4680623	AssignmentExpression	retVal = true		4680590	0		=			
ANR	4680624	Identifier	retVal		4680590	0					
ANR	4680625	Identifier	true		4680590	1					
ANR	4680626	ReturnStatement	return retVal ;	146:1:3695:3708	4680590	3	True				
ANR	4680627	Identifier	retVal		4680590	0					
ANR	4680628	ReturnType	bool		4680590	1					
ANR	4680629	Identifier	is_valid_command		4680590	2					
ANR	4680630	ParameterList	const char * cmdToExecute		4680590	3					
ANR	4680631	Parameter	const char * cmdToExecute	137:17:3532:3555	4680590	0	True				
ANR	4680632	ParameterType	const char *		4680590	0					
ANR	4680633	Identifier	cmdToExecute		4680590	1					
ANR	4680634	CFGEntryNode	ENTRY		4680590		True				
ANR	4680635	CFGExitNode	EXIT		4680590		True				
ANR	4680636	Symbol	strlen		4680590						
ANR	4680637	Symbol	false		4680590						
ANR	4680638	Symbol	cmdStrLength		4680590						
ANR	4680639	Symbol	true		4680590						
ANR	4680640	Symbol	* cmdToExecute		4680590						
ANR	4680641	Symbol	* cmdStrLength		4680590						
ANR	4680642	Symbol	cmdToExecute		4680590						
ANR	4680643	Symbol	retVal		4680590						
ANR	4680644	Function	Read_config	150:0:3714:10065							
ANR	4680645	FunctionDef	"Read_config (const char * config_source , BUCKET * * table , int table_size , int expand_flag , bool check_runtime_security , ExtraParamTable * extra_info)"		4680644	0					
ANR	4680646	CompoundStatement		155:0:3878:10065	4680644	0					
ANR	4680647	IdentifierDeclStatement	FILE * conf_fp = NULL ;	156:3:3883:3903	4680644	0	True				
ANR	4680648	IdentifierDecl	* conf_fp = NULL		4680644	0					
ANR	4680649	IdentifierDeclType	FILE *		4680644	0					
ANR	4680650	Identifier	conf_fp		4680644	1					
ANR	4680651	AssignmentExpression	* conf_fp = NULL		4680644	2		=			
ANR	4680652	Identifier	NULL		4680644	0					
ANR	4680653	Identifier	NULL		4680644	1					
ANR	4680654	IdentifierDeclStatement	char * name = NULL ;	157:1:3906:3923	4680644	1	True				
ANR	4680655	IdentifierDecl	* name = NULL		4680644	0					
ANR	4680656	IdentifierDeclType	char *		4680644	0					
ANR	4680657	Identifier	name		4680644	1					
ANR	4680658	AssignmentExpression	* name = NULL		4680644	2		=			
ANR	4680659	Identifier	NULL		4680644	0					
ANR	4680660	Identifier	NULL		4680644	1					
ANR	4680661	IdentifierDeclStatement	char * value = NULL ;	158:1:3926:3944	4680644	2	True				
ANR	4680662	IdentifierDecl	* value = NULL		4680644	0					
ANR	4680663	IdentifierDeclType	char *		4680644	0					
ANR	4680664	Identifier	value		4680644	1					
ANR	4680665	AssignmentExpression	* value = NULL		4680644	2		=			
ANR	4680666	Identifier	NULL		4680644	0					
ANR	4680667	Identifier	NULL		4680644	1					
ANR	4680668	IdentifierDeclStatement	char * rhs = NULL ;	159:1:3947:3963	4680644	3	True				
ANR	4680669	IdentifierDecl	* rhs = NULL		4680644	0					
ANR	4680670	IdentifierDeclType	char *		4680644	0					
ANR	4680671	Identifier	rhs		4680644	1					
ANR	4680672	AssignmentExpression	* rhs = NULL		4680644	2		=			
ANR	4680673	Identifier	NULL		4680644	0					
ANR	4680674	Identifier	NULL		4680644	1					
ANR	4680675	IdentifierDeclStatement	char * ptr = NULL ;	160:1:3966:3982	4680644	4	True				
ANR	4680676	IdentifierDecl	* ptr = NULL		4680644	0					
ANR	4680677	IdentifierDeclType	char *		4680644	0					
ANR	4680678	Identifier	ptr		4680644	1					
ANR	4680679	AssignmentExpression	* ptr = NULL		4680644	2		=			
ANR	4680680	Identifier	NULL		4680644	0					
ANR	4680681	Identifier	NULL		4680644	1					
ANR	4680682	IdentifierDeclStatement	char op ;	161:1:3985:3992	4680644	5	True				
ANR	4680683	IdentifierDecl	op		4680644	0					
ANR	4680684	IdentifierDeclType	char		4680644	0					
ANR	4680685	Identifier	op		4680644	1					
ANR	4680686	IdentifierDeclStatement	int retval = 0 ;	162:1:3995:4010	4680644	6	True				
ANR	4680687	IdentifierDecl	retval = 0		4680644	0					
ANR	4680688	IdentifierDeclType	int		4680644	0					
ANR	4680689	Identifier	retval		4680644	1					
ANR	4680690	AssignmentExpression	retval = 0		4680644	2		=			
ANR	4680691	Identifier	retval		4680644	0					
ANR	4680692	PrimaryExpression	0		4680644	1					
ANR	4680693	IdentifierDeclStatement	bool is_pipe_cmd = false ;	163:1:4013:4037	4680644	7	True				
ANR	4680694	IdentifierDecl	is_pipe_cmd = false		4680644	0					
ANR	4680695	IdentifierDeclType	bool		4680644	0					
ANR	4680696	Identifier	is_pipe_cmd		4680644	1					
ANR	4680697	AssignmentExpression	is_pipe_cmd = false		4680644	2		=			
ANR	4680698	Identifier	false		4680644	0					
ANR	4680699	Identifier	false		4680644	1					
ANR	4680700	IdentifierDeclStatement	bool firstRead = true ;	164:1:4040:4061	4680644	8	True				
ANR	4680701	IdentifierDecl	firstRead = true		4680644	0					
ANR	4680702	IdentifierDeclType	bool		4680644	0					
ANR	4680703	Identifier	firstRead		4680644	1					
ANR	4680704	AssignmentExpression	firstRead = true		4680644	2		=			
ANR	4680705	Identifier	true		4680644	0					
ANR	4680706	Identifier	true		4680644	1					
ANR	4680707	ExpressionStatement	ConfigLineNo = 0	166:1:4065:4081	4680644	9	True				
ANR	4680708	AssignmentExpression	ConfigLineNo = 0		4680644	0		=			
ANR	4680709	Identifier	ConfigLineNo		4680644	0					
ANR	4680710	PrimaryExpression	0		4680644	1					
ANR	4680711	IfStatement	if ( is_piped_command ( config_source ) )		4680644	10					
ANR	4680712	Condition	is_piped_command ( config_source )	170:6:4208:4238	4680644	0	True				
ANR	4680713	CallExpression	is_piped_command ( config_source )		4680644	0					
ANR	4680714	Callee	is_piped_command		4680644	0					
ANR	4680715	Identifier	is_piped_command		4680644	0					
ANR	4680716	ArgumentList	config_source		4680644	1					
ANR	4680717	Argument	config_source		4680644	0					
ANR	4680718	Identifier	config_source		4680644	0					
ANR	4680719	CompoundStatement		16:40:363:363	4680644	1					
ANR	4680720	ExpressionStatement	is_pipe_cmd = true	171:2:4246:4264	4680644	0	True				
ANR	4680721	AssignmentExpression	is_pipe_cmd = true		4680644	0		=			
ANR	4680722	Identifier	is_pipe_cmd		4680644	0					
ANR	4680723	Identifier	true		4680644	1					
ANR	4680724	IfStatement	if ( is_valid_command ( config_source ) )		4680644	1					
ANR	4680725	Condition	is_valid_command ( config_source )	172:7:4273:4303	4680644	0	True				
ANR	4680726	CallExpression	is_valid_command ( config_source )		4680644	0					
ANR	4680727	Callee	is_valid_command		4680644	0					
ANR	4680728	Identifier	is_valid_command		4680644	0					
ANR	4680729	ArgumentList	config_source		4680644	1					
ANR	4680730	Argument	config_source		4680644	0					
ANR	4680731	Identifier	config_source		4680644	0					
ANR	4680732	CompoundStatement		25:3:659:679	4680644	1					
ANR	4680733	IdentifierDeclStatement	char * cmdToExecute = strdup ( config_source ) ;	175:3:4420:4464	4680644	0	True				
ANR	4680734	IdentifierDecl	* cmdToExecute = strdup ( config_source )		4680644	0					
ANR	4680735	IdentifierDeclType	char *		4680644	0					
ANR	4680736	Identifier	cmdToExecute		4680644	1					
ANR	4680737	AssignmentExpression	* cmdToExecute = strdup ( config_source )		4680644	2		=			
ANR	4680738	Identifier	cmdToExecute		4680644	0					
ANR	4680739	CallExpression	strdup ( config_source )		4680644	1					
ANR	4680740	Callee	strdup		4680644	0					
ANR	4680741	Identifier	strdup		4680644	0					
ANR	4680742	ArgumentList	config_source		4680644	1					
ANR	4680743	Argument	config_source		4680644	0					
ANR	4680744	Identifier	config_source		4680644	0					
ANR	4680745	ExpressionStatement	cmdToExecute [ strlen ( cmdToExecute ) - 1 ] = '\\0'	176:3:4469:4512	4680644	1	True				
ANR	4680746	AssignmentExpression	cmdToExecute [ strlen ( cmdToExecute ) - 1 ] = '\\0'		4680644	0		=			
ANR	4680747	ArrayIndexing	cmdToExecute [ strlen ( cmdToExecute ) - 1 ]		4680644	0					
ANR	4680748	Identifier	cmdToExecute		4680644	0					
ANR	4680749	AdditiveExpression	strlen ( cmdToExecute ) - 1		4680644	1		-			
ANR	4680750	CallExpression	strlen ( cmdToExecute )		4680644	0					
ANR	4680751	Callee	strlen		4680644	0					
ANR	4680752	Identifier	strlen		4680644	0					
ANR	4680753	ArgumentList	cmdToExecute		4680644	1					
ANR	4680754	Argument	cmdToExecute		4680644	0					
ANR	4680755	Identifier	cmdToExecute		4680644	0					
ANR	4680756	PrimaryExpression	1		4680644	1					
ANR	4680757	PrimaryExpression	'\\0'		4680644	1					
ANR	4680758	IdentifierDeclStatement	ArgList argList ;	178:3:4518:4533	4680644	2	True				
ANR	4680759	IdentifierDecl	argList		4680644	0					
ANR	4680760	IdentifierDeclType	ArgList		4680644	0					
ANR	4680761	Identifier	argList		4680644	1					
ANR	4680762	IdentifierDeclStatement	MyString args_errors ;	179:3:4538:4558	4680644	3	True				
ANR	4680763	IdentifierDecl	args_errors		4680644	0					
ANR	4680764	IdentifierDeclType	MyString		4680644	0					
ANR	4680765	Identifier	args_errors		4680644	1					
ANR	4680766	IfStatement	"if ( ! argList . AppendArgsV1RawOrV2Quoted ( cmdToExecute , & args_errors ) )"		4680644	4					
ANR	4680767	Condition	"! argList . AppendArgsV1RawOrV2Quoted ( cmdToExecute , & args_errors )"	180:6:4566:4627	4680644	0	True				
ANR	4680768	UnaryOperationExpression	"! argList . AppendArgsV1RawOrV2Quoted ( cmdToExecute , & args_errors )"		4680644	0					
ANR	4680769	UnaryOperator	!		4680644	0					
ANR	4680770	CallExpression	"argList . AppendArgsV1RawOrV2Quoted ( cmdToExecute , & args_errors )"		4680644	1					
ANR	4680771	Callee	argList . AppendArgsV1RawOrV2Quoted		4680644	0					
ANR	4680772	MemberAccess	argList . AppendArgsV1RawOrV2Quoted		4680644	0					
ANR	4680773	Identifier	argList		4680644	0					
ANR	4680774	Identifier	AppendArgsV1RawOrV2Quoted		4680644	1					
ANR	4680775	ArgumentList	cmdToExecute		4680644	1					
ANR	4680776	Argument	cmdToExecute		4680644	0					
ANR	4680777	Identifier	cmdToExecute		4680644	0					
ANR	4680778	Argument	& args_errors		4680644	1					
ANR	4680779	UnaryOperationExpression	& args_errors		4680644	0					
ANR	4680780	UnaryOperator	&		4680644	0					
ANR	4680781	Identifier	args_errors		4680644	1					
ANR	4680782	CompoundStatement		26:70:751:751	4680644	1					
ANR	4680783	ExpressionStatement	"printf ( ""Can't append cmd %s(%s)\\n"" , cmdToExecute , args_errors . Value ( ) )"	181:4:4636:4706	4680644	0	True				
ANR	4680784	CallExpression	"printf ( ""Can't append cmd %s(%s)\\n"" , cmdToExecute , args_errors . Value ( ) )"		4680644	0					
ANR	4680785	Callee	printf		4680644	0					
ANR	4680786	Identifier	printf		4680644	0					
ANR	4680787	ArgumentList	"""Can't append cmd %s(%s)\\n"""		4680644	1					
ANR	4680788	Argument	"""Can't append cmd %s(%s)\\n"""		4680644	0					
ANR	4680789	PrimaryExpression	"""Can't append cmd %s(%s)\\n"""		4680644	0					
ANR	4680790	Argument	cmdToExecute		4680644	1					
ANR	4680791	Identifier	cmdToExecute		4680644	0					
ANR	4680792	Argument	args_errors . Value ( )		4680644	2					
ANR	4680793	CallExpression	args_errors . Value ( )		4680644	0					
ANR	4680794	Callee	args_errors . Value		4680644	0					
ANR	4680795	MemberAccess	args_errors . Value		4680644	0					
ANR	4680796	Identifier	args_errors		4680644	0					
ANR	4680797	Identifier	Value		4680644	1					
ANR	4680798	ArgumentList			4680644	1					
ANR	4680799	ExpressionStatement	free ( cmdToExecute )	182:4:4712:4732	4680644	1	True				
ANR	4680800	CallExpression	free ( cmdToExecute )		4680644	0					
ANR	4680801	Callee	free		4680644	0					
ANR	4680802	Identifier	free		4680644	0					
ANR	4680803	ArgumentList	cmdToExecute		4680644	1					
ANR	4680804	Argument	cmdToExecute		4680644	0					
ANR	4680805	Identifier	cmdToExecute		4680644	0					
ANR	4680806	ReturnStatement	return - 1 ;	183:4:4738:4747	4680644	2	True				
ANR	4680807	UnaryOperationExpression	- 1		4680644	0					
ANR	4680808	UnaryOperator	-		4680644	0					
ANR	4680809	PrimaryExpression	1		4680644	1					
ANR	4680810	ExpressionStatement	"conf_fp = my_popen ( argList , ""r"" , FALSE )"	185:3:4757:4796	4680644	5	True				
ANR	4680811	AssignmentExpression	"conf_fp = my_popen ( argList , ""r"" , FALSE )"		4680644	0		=			
ANR	4680812	Identifier	conf_fp		4680644	0					
ANR	4680813	CallExpression	"my_popen ( argList , ""r"" , FALSE )"		4680644	1					
ANR	4680814	Callee	my_popen		4680644	0					
ANR	4680815	Identifier	my_popen		4680644	0					
ANR	4680816	ArgumentList	argList		4680644	1					
ANR	4680817	Argument	argList		4680644	0					
ANR	4680818	Identifier	argList		4680644	0					
ANR	4680819	Argument	"""r"""		4680644	1					
ANR	4680820	PrimaryExpression	"""r"""		4680644	0					
ANR	4680821	Argument	FALSE		4680644	2					
ANR	4680822	Identifier	FALSE		4680644	0					
ANR	4680823	IfStatement	if ( conf_fp == NULL )		4680644	6					
ANR	4680824	Condition	conf_fp == NULL	186:7:4805:4819	4680644	0	True				
ANR	4680825	EqualityExpression	conf_fp == NULL		4680644	0		==			
ANR	4680826	Identifier	conf_fp		4680644	0					
ANR	4680827	Identifier	NULL		4680644	1					
ANR	4680828	CompoundStatement		32:25:944:944	4680644	1					
ANR	4680829	ExpressionStatement	"printf ( ""Can't open cmd %s\\n"" , cmdToExecute )"	187:4:4829:4872	4680644	0	True				
ANR	4680830	CallExpression	"printf ( ""Can't open cmd %s\\n"" , cmdToExecute )"		4680644	0					
ANR	4680831	Callee	printf		4680644	0					
ANR	4680832	Identifier	printf		4680644	0					
ANR	4680833	ArgumentList	"""Can't open cmd %s\\n"""		4680644	1					
ANR	4680834	Argument	"""Can't open cmd %s\\n"""		4680644	0					
ANR	4680835	PrimaryExpression	"""Can't open cmd %s\\n"""		4680644	0					
ANR	4680836	Argument	cmdToExecute		4680644	1					
ANR	4680837	Identifier	cmdToExecute		4680644	0					
ANR	4680838	ExpressionStatement	free ( cmdToExecute )	188:4:4878:4898	4680644	1	True				
ANR	4680839	CallExpression	free ( cmdToExecute )		4680644	0					
ANR	4680840	Callee	free		4680644	0					
ANR	4680841	Identifier	free		4680644	0					
ANR	4680842	ArgumentList	cmdToExecute		4680644	1					
ANR	4680843	Argument	cmdToExecute		4680644	0					
ANR	4680844	Identifier	cmdToExecute		4680644	0					
ANR	4680845	ReturnStatement	return - 1 ;	189:4:4904:4913	4680644	2	True				
ANR	4680846	UnaryOperationExpression	- 1		4680644	0					
ANR	4680847	UnaryOperator	-		4680644	0					
ANR	4680848	PrimaryExpression	1		4680644	1					
ANR	4680849	ExpressionStatement	free ( cmdToExecute )	191:3:4923:4943	4680644	7	True				
ANR	4680850	CallExpression	free ( cmdToExecute )		4680644	0					
ANR	4680851	Callee	free		4680644	0					
ANR	4680852	Identifier	free		4680644	0					
ANR	4680853	ArgumentList	cmdToExecute		4680644	1					
ANR	4680854	Argument	cmdToExecute		4680644	0					
ANR	4680855	Identifier	cmdToExecute		4680644	0					
ANR	4680856	ElseStatement	else		4680644	0					
ANR	4680857	CompoundStatement		38:9:1075:1075	4680644	0					
ANR	4680858	Statement	printf	193:3:4959:4964	4680644	0	True				
ANR	4680859	Statement	(	193:9:4965:4965	4680644	1	True				
ANR	4680860	Statement	"""Specified cmd, %s, not a valid command to execute.  It must have a '|' """	193:10:4966:5038	4680644	2	True				
ANR	4680861	Statement	"""character at the end.\\n"""	194:7:5047:5071	4680644	3	True				
ANR	4680862	Statement	","	194:32:5072:5072	4680644	4	True				
ANR	4680863	Statement	config_source	194:34:5074:5086	4680644	5	True				
ANR	4680864	Statement	)	194:47:5087:5087	4680644	6	True				
ANR	4680865	ExpressionStatement		194:48:5088:5088	4680644	7	True				
ANR	4680866	ReturnStatement	return ( - 1 ) ;	195:3:5093:5105	4680644	8	True				
ANR	4680867	UnaryOperationExpression	- 1		4680644	0					
ANR	4680868	UnaryOperator	-		4680644	0					
ANR	4680869	PrimaryExpression	1		4680644	1					
ANR	4680870	ElseStatement	else		4680644	0					
ANR	4680871	CompoundStatement		43:8:1240:1240	4680644	0					
ANR	4680872	ExpressionStatement	is_pipe_cmd = false	198:2:5123:5142	4680644	0	True				
ANR	4680873	AssignmentExpression	is_pipe_cmd = false		4680644	0		=			
ANR	4680874	Identifier	is_pipe_cmd		4680644	0					
ANR	4680875	Identifier	false		4680644	1					
ANR	4680876	ExpressionStatement	"conf_fp = safe_fopen_wrapper_follow ( config_source , ""r"" )"	199:2:5146:5201	4680644	1	True				
ANR	4680877	AssignmentExpression	"conf_fp = safe_fopen_wrapper_follow ( config_source , ""r"" )"		4680644	0		=			
ANR	4680878	Identifier	conf_fp		4680644	0					
ANR	4680879	CallExpression	"safe_fopen_wrapper_follow ( config_source , ""r"" )"		4680644	1					
ANR	4680880	Callee	safe_fopen_wrapper_follow		4680644	0					
ANR	4680881	Identifier	safe_fopen_wrapper_follow		4680644	0					
ANR	4680882	ArgumentList	config_source		4680644	1					
ANR	4680883	Argument	config_source		4680644	0					
ANR	4680884	Identifier	config_source		4680644	0					
ANR	4680885	Argument	"""r"""		4680644	1					
ANR	4680886	PrimaryExpression	"""r"""		4680644	0					
ANR	4680887	IfStatement	if ( conf_fp == NULL )		4680644	2					
ANR	4680888	Condition	conf_fp == NULL	200:6:5209:5223	4680644	0	True				
ANR	4680889	EqualityExpression	conf_fp == NULL		4680644	0		==			
ANR	4680890	Identifier	conf_fp		4680644	0					
ANR	4680891	Identifier	NULL		4680644	1					
ANR	4680892	CompoundStatement		46:24:1348:1348	4680644	1					
ANR	4680893	ExpressionStatement	"printf ( ""Can't open file %s\\n"" , config_source )"	201:3:5232:5277	4680644	0	True				
ANR	4680894	CallExpression	"printf ( ""Can't open file %s\\n"" , config_source )"		4680644	0					
ANR	4680895	Callee	printf		4680644	0					
ANR	4680896	Identifier	printf		4680644	0					
ANR	4680897	ArgumentList	"""Can't open file %s\\n"""		4680644	1					
ANR	4680898	Argument	"""Can't open file %s\\n"""		4680644	0					
ANR	4680899	PrimaryExpression	"""Can't open file %s\\n"""		4680644	0					
ANR	4680900	Argument	config_source		4680644	1					
ANR	4680901	Identifier	config_source		4680644	0					
ANR	4680902	ReturnStatement	return ( - 1 ) ;	202:3:5282:5294	4680644	1	True				
ANR	4680903	UnaryOperationExpression	- 1		4680644	0					
ANR	4680904	UnaryOperator	-		4680644	0					
ANR	4680905	PrimaryExpression	1		4680644	1					
ANR	4680906	IfStatement	if ( check_runtime_security )		4680644	11					
ANR	4680907	Condition	check_runtime_security	206:5:5309:5330	4680644	0	True				
ANR	4680908	Identifier	check_runtime_security		4680644	0					
ANR	4680909	CompoundStatement		65:2:1802:1834	4680644	1					
ANR	4680910	IfStatement	if ( is_pipe_cmd )		4680644	0					
ANR	4680911	Condition	is_pipe_cmd	209:7:5417:5427	4680644	0	True				
ANR	4680912	Identifier	is_pipe_cmd		4680644	0					
ANR	4680913	CompoundStatement		55:21:1552:1552	4680644	1					
ANR	4680914	Statement	fprintf	210:3:5436:5442	4680644	0	True				
ANR	4680915	Statement	(	210:10:5443:5443	4680644	1	True				
ANR	4680916	Statement	stderr	210:12:5445:5450	4680644	2	True				
ANR	4680917	Statement	","	210:18:5451:5451	4680644	3	True				
ANR	4680918	Statement	"""Configuration Error File <%s>: runtime config """	210:20:5453:5500	4680644	4	True				
ANR	4680919	Statement	"""not allowed to come from a pipe command\\n"""	211:6:5508:5550	4680644	5	True				
ANR	4680920	Statement	","	211:49:5551:5551	4680644	6	True				
ANR	4680921	Statement	config_source	212:6:5559:5571	4680644	7	True				
ANR	4680922	Statement	)	212:20:5573:5573	4680644	8	True				
ANR	4680923	ExpressionStatement		212:21:5574:5574	4680644	9	True				
ANR	4680924	ExpressionStatement	retval = - 1	213:3:5579:5590	4680644	10	True				
ANR	4680925	AssignmentExpression	retval = - 1		4680644	0		=			
ANR	4680926	Identifier	retval		4680644	0					
ANR	4680927	UnaryOperationExpression	- 1		4680644	1					
ANR	4680928	UnaryOperator	-		4680644	0					
ANR	4680929	PrimaryExpression	1		4680644	1					
ANR	4680930	GotoStatement	goto cleanup ;	214:3:5595:5607	4680644	11	True				
ANR	4680931	Identifier	cleanup		4680644	0					
ANR	4680932	IdentifierDeclStatement	int fd = fileno ( conf_fp ) ;	216:2:5615:5639	4680644	1	True				
ANR	4680933	IdentifierDecl	fd = fileno ( conf_fp )		4680644	0					
ANR	4680934	IdentifierDeclType	int		4680644	0					
ANR	4680935	Identifier	fd		4680644	1					
ANR	4680936	AssignmentExpression	fd = fileno ( conf_fp )		4680644	2		=			
ANR	4680937	Identifier	fd		4680644	0					
ANR	4680938	CallExpression	fileno ( conf_fp )		4680644	1					
ANR	4680939	Callee	fileno		4680644	0					
ANR	4680940	Identifier	fileno		4680644	0					
ANR	4680941	ArgumentList	conf_fp		4680644	1					
ANR	4680942	Argument	conf_fp		4680644	0					
ANR	4680943	Identifier	conf_fp		4680644	0					
ANR	4680944	IdentifierDeclStatement	struct stat statbuf ;	217:2:5643:5662	4680644	2	True				
ANR	4680945	IdentifierDecl	statbuf		4680644	0					
ANR	4680946	IdentifierDeclType	struct stat		4680644	0					
ANR	4680947	Identifier	statbuf		4680644	1					
ANR	4680948	IdentifierDeclStatement	uid_t f_uid ;	218:2:5666:5677	4680644	3	True				
ANR	4680949	IdentifierDecl	f_uid		4680644	0					
ANR	4680950	IdentifierDeclType	uid_t		4680644	0					
ANR	4680951	Identifier	f_uid		4680644	1					
ANR	4680952	IdentifierDeclStatement	"int rval = fstat ( fd , & statbuf ) ;"	219:2:5681:5713	4680644	4	True				
ANR	4680953	IdentifierDecl	"rval = fstat ( fd , & statbuf )"		4680644	0					
ANR	4680954	IdentifierDeclType	int		4680644	0					
ANR	4680955	Identifier	rval		4680644	1					
ANR	4680956	AssignmentExpression	"rval = fstat ( fd , & statbuf )"		4680644	2		=			
ANR	4680957	Identifier	rval		4680644	0					
ANR	4680958	CallExpression	"fstat ( fd , & statbuf )"		4680644	1					
ANR	4680959	Callee	fstat		4680644	0					
ANR	4680960	Identifier	fstat		4680644	0					
ANR	4680961	ArgumentList	fd		4680644	1					
ANR	4680962	Argument	fd		4680644	0					
ANR	4680963	Identifier	fd		4680644	0					
ANR	4680964	Argument	& statbuf		4680644	1					
ANR	4680965	UnaryOperationExpression	& statbuf		4680644	0					
ANR	4680966	UnaryOperator	&		4680644	0					
ANR	4680967	Identifier	statbuf		4680644	1					
ANR	4680968	IfStatement	if ( rval < 0 )		4680644	5					
ANR	4680969	Condition	rval < 0	220:6:5721:5728	4680644	0	True				
ANR	4680970	RelationalExpression	rval < 0		4680644	0		<			
ANR	4680971	Identifier	rval		4680644	0					
ANR	4680972	PrimaryExpression	0		4680644	1					
ANR	4680973	CompoundStatement		66:17:1853:1853	4680644	1					
ANR	4680974	ExpressionStatement	"fprintf ( stderr , ""Configuration Error File <%s>, fstat() failed: %s (errno: %d)\\n"" , config_source , strerror ( errno ) , errno )"	221:3:5737:5866	4680644	0	True				
ANR	4680975	CallExpression	"fprintf ( stderr , ""Configuration Error File <%s>, fstat() failed: %s (errno: %d)\\n"" , config_source , strerror ( errno ) , errno )"		4680644	0					
ANR	4680976	Callee	fprintf		4680644	0					
ANR	4680977	Identifier	fprintf		4680644	0					
ANR	4680978	ArgumentList	stderr		4680644	1					
ANR	4680979	Argument	stderr		4680644	0					
ANR	4680980	Identifier	stderr		4680644	0					
ANR	4680981	Argument	"""Configuration Error File <%s>, fstat() failed: %s (errno: %d)\\n"""		4680644	1					
ANR	4680982	PrimaryExpression	"""Configuration Error File <%s>, fstat() failed: %s (errno: %d)\\n"""		4680644	0					
ANR	4680983	Argument	config_source		4680644	2					
ANR	4680984	Identifier	config_source		4680644	0					
ANR	4680985	Argument	strerror ( errno )		4680644	3					
ANR	4680986	CallExpression	strerror ( errno )		4680644	0					
ANR	4680987	Callee	strerror		4680644	0					
ANR	4680988	Identifier	strerror		4680644	0					
ANR	4680989	ArgumentList	errno		4680644	1					
ANR	4680990	Argument	errno		4680644	0					
ANR	4680991	Identifier	errno		4680644	0					
ANR	4680992	Argument	errno		4680644	4					
ANR	4680993	Identifier	errno		4680644	0					
ANR	4680994	ExpressionStatement	retval = - 1	223:3:5871:5882	4680644	1	True				
ANR	4680995	AssignmentExpression	retval = - 1		4680644	0		=			
ANR	4680996	Identifier	retval		4680644	0					
ANR	4680997	UnaryOperationExpression	- 1		4680644	1					
ANR	4680998	UnaryOperator	-		4680644	0					
ANR	4680999	PrimaryExpression	1		4680644	1					
ANR	4681000	GotoStatement	goto cleanup ;	224:3:5887:5899	4680644	2	True				
ANR	4681001	Identifier	cleanup		4680644	0					
ANR	4681002	ExpressionStatement	f_uid = statbuf . st_uid	226:2:5907:5929	4680644	6	True				
ANR	4681003	AssignmentExpression	f_uid = statbuf . st_uid		4680644	0		=			
ANR	4681004	Identifier	f_uid		4680644	0					
ANR	4681005	MemberAccess	statbuf . st_uid		4680644	1					
ANR	4681006	Identifier	statbuf		4680644	0					
ANR	4681007	Identifier	st_uid		4680644	1					
ANR	4681008	IfStatement	if ( can_switch_ids ( ) )		4680644	7					
ANR	4681009	Condition	can_switch_ids ( )	227:6:5937:5952	4680644	0	True				
ANR	4681010	CallExpression	can_switch_ids ( )		4680644	0					
ANR	4681011	Callee	can_switch_ids		4680644	0					
ANR	4681012	Identifier	can_switch_ids		4680644	0					
ANR	4681013	ArgumentList			4680644	1					
ANR	4681014	CompoundStatement		73:25:2077:2077	4680644	1					
ANR	4681015	IfStatement	if ( f_uid != 0 )		4680644	0					
ANR	4681016	Condition	f_uid != 0	229:7:6023:6032	4680644	0	True				
ANR	4681017	EqualityExpression	f_uid != 0		4680644	0		!=			
ANR	4681018	Identifier	f_uid		4680644	0					
ANR	4681019	PrimaryExpression	0		4680644	1					
ANR	4681020	CompoundStatement		75:20:2157:2157	4680644	1					
ANR	4681021	Statement	fprintf	230:4:6042:6048	4680644	0	True				
ANR	4681022	Statement	(	230:11:6049:6049	4680644	1	True				
ANR	4681023	Statement	stderr	230:13:6051:6056	4680644	2	True				
ANR	4681024	Statement	","	230:19:6057:6057	4680644	3	True				
ANR	4681025	Statement	"""Configuration Error File <%s>, """	230:21:6059:6091	4680644	4	True				
ANR	4681026	Statement	"""running as root yet runtime config file owned """	231:7:6100:6147	4680644	5	True				
ANR	4681027	Statement	"""by uid %d, not 0!\\n"""	232:7:6156:6176	4680644	6	True				
ANR	4681028	Statement	","	232:28:6177:6177	4680644	7	True				
ANR	4681029	Statement	config_source	232:30:6179:6191	4680644	8	True				
ANR	4681030	Statement	","	232:43:6192:6192	4680644	9	True				
ANR	4681031	Statement	(	232:45:6194:6194	4680644	10	True				
ANR	4681032	Statement	int	232:46:6195:6197	4680644	11	True				
ANR	4681033	Statement	)	232:49:6198:6198	4680644	12	True				
ANR	4681034	Statement	f_uid	232:50:6199:6203	4680644	13	True				
ANR	4681035	Statement	)	232:56:6205:6205	4680644	14	True				
ANR	4681036	ExpressionStatement		232:57:6206:6206	4680644	15	True				
ANR	4681037	ExpressionStatement	retval = - 1	233:4:6212:6223	4680644	16	True				
ANR	4681038	AssignmentExpression	retval = - 1		4680644	0		=			
ANR	4681039	Identifier	retval		4680644	0					
ANR	4681040	UnaryOperationExpression	- 1		4680644	1					
ANR	4681041	UnaryOperator	-		4680644	0					
ANR	4681042	PrimaryExpression	1		4680644	1					
ANR	4681043	GotoStatement	goto cleanup ;	234:4:6229:6241	4680644	17	True				
ANR	4681044	Identifier	cleanup		4680644	0					
ANR	4681045	ElseStatement	else		4680644	0					
ANR	4681046	CompoundStatement		82:9:2378:2378	4680644	0					
ANR	4681047	IfStatement	if ( f_uid != get_my_uid ( ) )		4680644	0					
ANR	4681048	Condition	f_uid != get_my_uid ( )	238:7:6325:6345	4680644	0	True				
ANR	4681049	EqualityExpression	f_uid != get_my_uid ( )		4680644	0		!=			
ANR	4681050	Identifier	f_uid		4680644	0					
ANR	4681051	CallExpression	get_my_uid ( )		4680644	1					
ANR	4681052	Callee	get_my_uid		4680644	0					
ANR	4681053	Identifier	get_my_uid		4680644	0					
ANR	4681054	ArgumentList			4680644	1					
ANR	4681055	CompoundStatement		84:31:2470:2470	4680644	1					
ANR	4681056	Statement	fprintf	239:4:6355:6361	4680644	0	True				
ANR	4681057	Statement	(	239:11:6362:6362	4680644	1	True				
ANR	4681058	Statement	stderr	239:13:6364:6369	4680644	2	True				
ANR	4681059	Statement	","	239:19:6370:6370	4680644	3	True				
ANR	4681060	Statement	"""Configuration Error File <%s>, """	239:21:6372:6404	4680644	4	True				
ANR	4681061	Statement	"""running as uid %d yet runtime config file owned """	240:7:6413:6462	4680644	5	True				
ANR	4681062	Statement	"""by uid %d!\\n"""	241:7:6471:6484	4680644	6	True				
ANR	4681063	Statement	","	241:21:6485:6485	4680644	7	True				
ANR	4681064	Statement	config_source	241:23:6487:6499	4680644	8	True				
ANR	4681065	Statement	","	241:36:6500:6500	4680644	9	True				
ANR	4681066	Statement	(	241:38:6502:6502	4680644	10	True				
ANR	4681067	Statement	int	241:39:6503:6505	4680644	11	True				
ANR	4681068	Statement	)	241:42:6506:6506	4680644	12	True				
ANR	4681069	Statement	get_my_uid	241:43:6507:6516	4680644	13	True				
ANR	4681070	Statement	(	241:53:6517:6517	4680644	14	True				
ANR	4681071	Statement	)	241:54:6518:6518	4680644	15	True				
ANR	4681072	Statement	","	241:55:6519:6519	4680644	16	True				
ANR	4681073	Statement	(	242:7:6528:6528	4680644	17	True				
ANR	4681074	Statement	int	242:8:6529:6531	4680644	18	True				
ANR	4681075	Statement	)	242:11:6532:6532	4680644	19	True				
ANR	4681076	Statement	f_uid	242:12:6533:6537	4680644	20	True				
ANR	4681077	Statement	)	242:18:6539:6539	4680644	21	True				
ANR	4681078	ExpressionStatement		242:19:6540:6540	4680644	22	True				
ANR	4681079	ExpressionStatement	retval = - 1	243:4:6546:6557	4680644	23	True				
ANR	4681080	AssignmentExpression	retval = - 1		4680644	0		=			
ANR	4681081	Identifier	retval		4680644	0					
ANR	4681082	UnaryOperationExpression	- 1		4680644	1					
ANR	4681083	UnaryOperator	-		4680644	0					
ANR	4681084	PrimaryExpression	1		4680644	1					
ANR	4681085	GotoStatement	goto cleanup ;	244:4:6563:6575	4680644	24	True				
ANR	4681086	Identifier	cleanup		4680644	0					
ANR	4681087	WhileStatement	while ( true )		4680644	12					
ANR	4681088	Condition	true	250:7:6650:6653	4680644	0	True				
ANR	4681089	Identifier	true		4680644	0					
ANR	4681090	CompoundStatement		96:13:2777:2777	4680644	1					
ANR	4681091	ExpressionStatement	"name = getline_implementation ( conf_fp , 128 )"	251:2:6660:6703	4680644	0	True				
ANR	4681092	AssignmentExpression	"name = getline_implementation ( conf_fp , 128 )"		4680644	0		=			
ANR	4681093	Identifier	name		4680644	0					
ANR	4681094	CallExpression	"getline_implementation ( conf_fp , 128 )"		4680644	1					
ANR	4681095	Callee	getline_implementation		4680644	0					
ANR	4681096	Identifier	getline_implementation		4680644	0					
ANR	4681097	ArgumentList	conf_fp		4680644	1					
ANR	4681098	Argument	conf_fp		4680644	0					
ANR	4681099	Identifier	conf_fp		4680644	0					
ANR	4681100	Argument	128		4680644	1					
ANR	4681101	PrimaryExpression	128		4680644	0					
ANR	4681102	IfStatement	if ( name == NULL )		4680644	1					
ANR	4681103	Condition	name == NULL	253:6:6776:6787	4680644	0	True				
ANR	4681104	EqualityExpression	name == NULL		4680644	0		==			
ANR	4681105	Identifier	name		4680644	0					
ANR	4681106	Identifier	NULL		4680644	1					
ANR	4681107	CompoundStatement		99:20:2911:2911	4680644	1					
ANR	4681108	IfStatement	if ( firstRead )		4680644	0					
ANR	4681109	Condition	firstRead	254:7:6799:6807	4680644	0	True				
ANR	4681110	Identifier	firstRead		4680644	0					
ANR	4681111	CompoundStatement		100:18:2931:2931	4680644	1					
ANR	4681112	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""WARNING: Config source is empty: %s\\n"" , config_source )"	255:4:6816:6898	4680644	0	True				
ANR	4681113	CallExpression	"dprintf ( D_FULLDEBUG , ""WARNING: Config source is empty: %s\\n"" , config_source )"		4680644	0					
ANR	4681114	Callee	dprintf		4680644	0					
ANR	4681115	Identifier	dprintf		4680644	0					
ANR	4681116	ArgumentList	D_FULLDEBUG		4680644	1					
ANR	4681117	Argument	D_FULLDEBUG		4680644	0					
ANR	4681118	Identifier	D_FULLDEBUG		4680644	0					
ANR	4681119	Argument	"""WARNING: Config source is empty: %s\\n"""		4680644	1					
ANR	4681120	PrimaryExpression	"""WARNING: Config source is empty: %s\\n"""		4680644	0					
ANR	4681121	Argument	config_source		4680644	2					
ANR	4681122	Identifier	config_source		4680644	0					
ANR	4681123	BreakStatement	break ;	258:3:6908:6913	4680644	1	True				
ANR	4681124	ExpressionStatement	firstRead = false	260:2:6921:6938	4680644	2	True				
ANR	4681125	AssignmentExpression	firstRead = false		4680644	0		=			
ANR	4681126	Identifier	firstRead		4680644	0					
ANR	4681127	Identifier	false		4680644	1					
ANR	4681128	IfStatement	if ( * name == '#' || blankline ( name ) )		4680644	3					
ANR	4681129	Condition	* name == '#' || blankline ( name )	263:6:6976:7006	4680644	0	True				
ANR	4681130	OrExpression	* name == '#' || blankline ( name )		4680644	0		||			
ANR	4681131	EqualityExpression	* name == '#'		4680644	0		==			
ANR	4681132	UnaryOperationExpression	* name		4680644	0					
ANR	4681133	UnaryOperator	*		4680644	0					
ANR	4681134	Identifier	name		4680644	1					
ANR	4681135	PrimaryExpression	'#'		4680644	1					
ANR	4681136	CallExpression	blankline ( name )		4680644	1					
ANR	4681137	Callee	blankline		4680644	0					
ANR	4681138	Identifier	blankline		4680644	0					
ANR	4681139	ArgumentList	name		4680644	1					
ANR	4681140	Argument	name		4680644	0					
ANR	4681141	Identifier	name		4680644	0					
ANR	4681142	ContinueStatement	continue ;	264:3:7013:7021	4680644	1	True				
ANR	4681143	ExpressionStatement	ptr = name	266:2:7026:7036	4680644	4	True				
ANR	4681144	AssignmentExpression	ptr = name		4680644	0		=			
ANR	4681145	Identifier	ptr		4680644	0					
ANR	4681146	Identifier	name		4680644	1					
ANR	4681147	WhileStatement	while ( * ptr )		4680644	5					
ANR	4681148	Condition	* ptr	272:9:7158:7161	4680644	0	True				
ANR	4681149	UnaryOperationExpression	* ptr		4680644	0					
ANR	4681150	UnaryOperator	*		4680644	0					
ANR	4681151	Identifier	ptr		4680644	1					
ANR	4681152	CompoundStatement		118:16:3286:3286	4680644	1					
ANR	4681153	IfStatement	if ( isspace ( * ptr ) || ISOP ( * ptr ) )		4680644	0					
ANR	4681154	Condition	isspace ( * ptr ) || ISOP ( * ptr )	273:7:7174:7200	4680644	0	True				
ANR	4681155	OrExpression	isspace ( * ptr ) || ISOP ( * ptr )		4680644	0		||			
ANR	4681156	CallExpression	isspace ( * ptr )		4680644	0					
ANR	4681157	Callee	isspace		4680644	0					
ANR	4681158	Identifier	isspace		4680644	0					
ANR	4681159	ArgumentList	* ptr		4680644	1					
ANR	4681160	Argument	* ptr		4680644	0					
ANR	4681161	UnaryOperationExpression	* ptr		4680644	0					
ANR	4681162	UnaryOperator	*		4680644	0					
ANR	4681163	Identifier	ptr		4680644	1					
ANR	4681164	CallExpression	ISOP ( * ptr )		4680644	1					
ANR	4681165	Callee	ISOP		4680644	0					
ANR	4681166	Identifier	ISOP		4680644	0					
ANR	4681167	ArgumentList	* ptr		4680644	1					
ANR	4681168	Argument	* ptr		4680644	0					
ANR	4681169	UnaryOperationExpression	* ptr		4680644	0					
ANR	4681170	UnaryOperator	*		4680644	0					
ANR	4681171	Identifier	ptr		4680644	1					
ANR	4681172	CompoundStatement		119:37:3325:3325	4680644	1					
ANR	4681173	BreakStatement	break ;	275:5:7259:7264	4680644	0	True				
ANR	4681174	ElseStatement	else		4680644	0					
ANR	4681175	CompoundStatement		122:10:3397:3397	4680644	0					
ANR	4681176	ExpressionStatement	ptr ++	277:5:7283:7288	4680644	0	True				
ANR	4681177	PostIncDecOperationExpression	ptr ++		4680644	0					
ANR	4681178	Identifier	ptr		4680644	0					
ANR	4681179	IncDec	++		4680644	1					
ANR	4681180	IfStatement	if ( ! * ptr )		4680644	6					
ANR	4681181	Condition	! * ptr	281:6:7306:7310	4680644	0	True				
ANR	4681182	UnaryOperationExpression	! * ptr		4680644	0					
ANR	4681183	UnaryOperator	!		4680644	0					
ANR	4681184	UnaryOperationExpression	* ptr		4680644	1					
ANR	4681185	UnaryOperator	*		4680644	0					
ANR	4681186	Identifier	ptr		4680644	1					
ANR	4681187	CompoundStatement		127:14:3435:3435	4680644	1					
ANR	4681188	IfStatement	if ( name && name [ 0 ] && name [ 0 ] == '[' )		4680644	0					
ANR	4681189	Condition	name && name [ 0 ] && name [ 0 ] == '['	283:8:7381:7413	4680644	0	True				
ANR	4681190	AndExpression	name && name [ 0 ] && name [ 0 ] == '['		4680644	0		&&			
ANR	4681191	Identifier	name		4680644	0					
ANR	4681192	AndExpression	name [ 0 ] && name [ 0 ] == '['		4680644	1		&&			
ANR	4681193	ArrayIndexing	name [ 0 ]		4680644	0					
ANR	4681194	Identifier	name		4680644	0					
ANR	4681195	PrimaryExpression	0		4680644	1					
ANR	4681196	EqualityExpression	name [ 0 ] == '['		4680644	1		==			
ANR	4681197	ArrayIndexing	name [ 0 ]		4680644	0					
ANR	4681198	Identifier	name		4680644	0					
ANR	4681199	PrimaryExpression	0		4680644	1					
ANR	4681200	PrimaryExpression	'['		4680644	1					
ANR	4681201	CompoundStatement		129:44:3538:3538	4680644	1					
ANR	4681202	ContinueStatement	continue ;	287:4:7596:7604	4680644	0	True				
ANR	4681203	ElseStatement	else		4680644	0					
ANR	4681204	CompoundStatement		134:10:3737:3737	4680644	0					
ANR	4681205	ExpressionStatement	retval = - 1	290:4:7672:7683	4680644	0	True				
ANR	4681206	AssignmentExpression	retval = - 1		4680644	0		=			
ANR	4681207	Identifier	retval		4680644	0					
ANR	4681208	UnaryOperationExpression	- 1		4680644	1					
ANR	4681209	UnaryOperator	-		4680644	0					
ANR	4681210	PrimaryExpression	1		4680644	1					
ANR	4681211	GotoStatement	goto cleanup ;	291:4:7689:7701	4680644	1	True				
ANR	4681212	Identifier	cleanup		4680644	0					
ANR	4681213	IfStatement	if ( ISOP ( * ptr ) )		4680644	7					
ANR	4681214	Condition	ISOP ( * ptr )	295:6:7719:7728	4680644	0	True				
ANR	4681215	CallExpression	ISOP ( * ptr )		4680644	0					
ANR	4681216	Callee	ISOP		4680644	0					
ANR	4681217	Identifier	ISOP		4680644	0					
ANR	4681218	ArgumentList	* ptr		4680644	1					
ANR	4681219	Argument	* ptr		4680644	0					
ANR	4681220	UnaryOperationExpression	* ptr		4680644	0					
ANR	4681221	UnaryOperator	*		4680644	0					
ANR	4681222	Identifier	ptr		4680644	1					
ANR	4681223	CompoundStatement		141:19:3853:3853	4680644	1					
ANR	4681224	ExpressionStatement	op = * ptr	296:3:7737:7746	4680644	0	True				
ANR	4681225	AssignmentExpression	op = * ptr		4680644	0		=			
ANR	4681226	Identifier	op		4680644	0					
ANR	4681227	UnaryOperationExpression	* ptr		4680644	1					
ANR	4681228	UnaryOperator	*		4680644	0					
ANR	4681229	Identifier	ptr		4680644	1					
ANR	4681230	ExpressionStatement	* ptr ++ = '\\0'	298:3:7786:7799	4680644	1	True				
ANR	4681231	AssignmentExpression	* ptr ++ = '\\0'		4680644	0		=			
ANR	4681232	UnaryOperationExpression	* ptr ++		4680644	0					
ANR	4681233	UnaryOperator	*		4680644	0					
ANR	4681234	PostIncDecOperationExpression	ptr ++		4680644	1					
ANR	4681235	Identifier	ptr		4680644	0					
ANR	4681236	IncDec	++		4680644	1					
ANR	4681237	PrimaryExpression	'\\0'		4680644	1					
ANR	4681238	ElseStatement	else		4680644	0					
ANR	4681239	CompoundStatement		146:9:3973:3973	4680644	0					
ANR	4681240	ExpressionStatement	* ptr ++ = '\\0'	301:3:7857:7870	4680644	0	True				
ANR	4681241	AssignmentExpression	* ptr ++ = '\\0'		4680644	0		=			
ANR	4681242	UnaryOperationExpression	* ptr ++		4680644	0					
ANR	4681243	UnaryOperator	*		4680644	0					
ANR	4681244	PostIncDecOperationExpression	ptr ++		4680644	1					
ANR	4681245	Identifier	ptr		4680644	0					
ANR	4681246	IncDec	++		4680644	1					
ANR	4681247	PrimaryExpression	'\\0'		4680644	1					
ANR	4681248	WhileStatement	while ( * ptr && ! ISOP ( * ptr ) )		4680644	1					
ANR	4681249	Condition	* ptr && ! ISOP ( * ptr )	302:10:7882:7900	4680644	0	True				
ANR	4681250	AndExpression	* ptr && ! ISOP ( * ptr )		4680644	0		&&			
ANR	4681251	UnaryOperationExpression	* ptr		4680644	0					
ANR	4681252	UnaryOperator	*		4680644	0					
ANR	4681253	Identifier	ptr		4680644	1					
ANR	4681254	UnaryOperationExpression	! ISOP ( * ptr )		4680644	1					
ANR	4681255	UnaryOperator	!		4680644	0					
ANR	4681256	CallExpression	ISOP ( * ptr )		4680644	1					
ANR	4681257	Callee	ISOP		4680644	0					
ANR	4681258	Identifier	ISOP		4680644	0					
ANR	4681259	ArgumentList	* ptr		4680644	1					
ANR	4681260	Argument	* ptr		4680644	0					
ANR	4681261	UnaryOperationExpression	* ptr		4680644	0					
ANR	4681262	UnaryOperator	*		4680644	0					
ANR	4681263	Identifier	ptr		4680644	1					
ANR	4681264	CompoundStatement		148:32:4025:4025	4680644	1					
ANR	4681265	ExpressionStatement	ptr ++	303:4:7910:7915	4680644	0	True				
ANR	4681266	PostIncDecOperationExpression	ptr ++		4680644	0					
ANR	4681267	Identifier	ptr		4680644	0					
ANR	4681268	IncDec	++		4680644	1					
ANR	4681269	IfStatement	if ( ! * ptr )		4680644	2					
ANR	4681270	Condition	! * ptr	306:7:7930:7934	4680644	0	True				
ANR	4681271	UnaryOperationExpression	! * ptr		4680644	0					
ANR	4681272	UnaryOperator	!		4680644	0					
ANR	4681273	UnaryOperationExpression	* ptr		4680644	1					
ANR	4681274	UnaryOperator	*		4680644	0					
ANR	4681275	Identifier	ptr		4680644	1					
ANR	4681276	CompoundStatement		152:15:4059:4059	4680644	1					
ANR	4681277	ExpressionStatement	retval = - 1	307:4:7944:7955	4680644	0	True				
ANR	4681278	AssignmentExpression	retval = - 1		4680644	0		=			
ANR	4681279	Identifier	retval		4680644	0					
ANR	4681280	UnaryOperationExpression	- 1		4680644	1					
ANR	4681281	UnaryOperator	-		4680644	0					
ANR	4681282	PrimaryExpression	1		4680644	1					
ANR	4681283	GotoStatement	goto cleanup ;	308:4:7961:7973	4680644	1	True				
ANR	4681284	Identifier	cleanup		4680644	0					
ANR	4681285	ExpressionStatement	op = * ptr ++	311:3:7984:7995	4680644	3	True				
ANR	4681286	AssignmentExpression	op = * ptr ++		4680644	0		=			
ANR	4681287	Identifier	op		4680644	0					
ANR	4681288	UnaryOperationExpression	* ptr ++		4680644	1					
ANR	4681289	UnaryOperator	*		4680644	0					
ANR	4681290	PostIncDecOperationExpression	ptr ++		4680644	1					
ANR	4681291	Identifier	ptr		4680644	0					
ANR	4681292	IncDec	++		4680644	1					
ANR	4681293	WhileStatement	while ( * ptr && isspace ( * ptr ) )		4680644	8					
ANR	4681294	Condition	* ptr && isspace ( * ptr )	315:9:8052:8072	4680644	0	True				
ANR	4681295	AndExpression	* ptr && isspace ( * ptr )		4680644	0		&&			
ANR	4681296	UnaryOperationExpression	* ptr		4680644	0					
ANR	4681297	UnaryOperator	*		4680644	0					
ANR	4681298	Identifier	ptr		4680644	1					
ANR	4681299	CallExpression	isspace ( * ptr )		4680644	1					
ANR	4681300	Callee	isspace		4680644	0					
ANR	4681301	Identifier	isspace		4680644	0					
ANR	4681302	ArgumentList	* ptr		4680644	1					
ANR	4681303	Argument	* ptr		4680644	0					
ANR	4681304	UnaryOperationExpression	* ptr		4680644	0					
ANR	4681305	UnaryOperator	*		4680644	0					
ANR	4681306	Identifier	ptr		4680644	1					
ANR	4681307	CompoundStatement		161:33:4197:4197	4680644	1					
ANR	4681308	ExpressionStatement	ptr ++	316:3:8081:8086	4680644	0	True				
ANR	4681309	PostIncDecOperationExpression	ptr ++		4680644	0					
ANR	4681310	Identifier	ptr		4680644	0					
ANR	4681311	IncDec	++		4680644	1					
ANR	4681312	ExpressionStatement	rhs = ptr	319:2:8095:8104	4680644	9	True				
ANR	4681313	AssignmentExpression	rhs = ptr		4680644	0		=			
ANR	4681314	Identifier	rhs		4680644	0					
ANR	4681315	Identifier	ptr		4680644	1					
ANR	4681316	ExpressionStatement	"name = expand_macro ( name , table , table_size )"	324:2:8198:8244	4680644	10	True				
ANR	4681317	AssignmentExpression	"name = expand_macro ( name , table , table_size )"		4680644	0		=			
ANR	4681318	Identifier	name		4680644	0					
ANR	4681319	CallExpression	"expand_macro ( name , table , table_size )"		4680644	1					
ANR	4681320	Callee	expand_macro		4680644	0					
ANR	4681321	Identifier	expand_macro		4680644	0					
ANR	4681322	ArgumentList	name		4680644	1					
ANR	4681323	Argument	name		4680644	0					
ANR	4681324	Identifier	name		4680644	0					
ANR	4681325	Argument	table		4680644	1					
ANR	4681326	Identifier	table		4680644	0					
ANR	4681327	Argument	table_size		4680644	2					
ANR	4681328	Identifier	table_size		4680644	0					
ANR	4681329	IfStatement	if ( name == NULL )		4680644	11					
ANR	4681330	Condition	name == NULL	325:6:8252:8263	4680644	0	True				
ANR	4681331	EqualityExpression	name == NULL		4680644	0		==			
ANR	4681332	Identifier	name		4680644	0					
ANR	4681333	Identifier	NULL		4680644	1					
ANR	4681334	CompoundStatement		171:21:4388:4388	4680644	1					
ANR	4681335	ExpressionStatement	retval = - 1	326:3:8272:8283	4680644	0	True				
ANR	4681336	AssignmentExpression	retval = - 1		4680644	0		=			
ANR	4681337	Identifier	retval		4680644	0					
ANR	4681338	UnaryOperationExpression	- 1		4680644	1					
ANR	4681339	UnaryOperator	-		4680644	0					
ANR	4681340	PrimaryExpression	1		4680644	1					
ANR	4681341	GotoStatement	goto cleanup ;	327:3:8288:8300	4680644	1	True				
ANR	4681342	Identifier	cleanup		4680644	0					
ANR	4681343	IfStatement	if ( ! is_valid_param_name ( name ) )		4680644	12					
ANR	4681344	Condition	! is_valid_param_name ( name )	332:6:8410:8435	4680644	0	True				
ANR	4681345	UnaryOperationExpression	! is_valid_param_name ( name )		4680644	0					
ANR	4681346	UnaryOperator	!		4680644	0					
ANR	4681347	CallExpression	is_valid_param_name ( name )		4680644	1					
ANR	4681348	Callee	is_valid_param_name		4680644	0					
ANR	4681349	Identifier	is_valid_param_name		4680644	0					
ANR	4681350	ArgumentList	name		4680644	1					
ANR	4681351	Argument	name		4680644	0					
ANR	4681352	Identifier	name		4680644	0					
ANR	4681353	CompoundStatement		178:35:4560:4560	4680644	1					
ANR	4681354	ExpressionStatement	"fprintf ( stderr , ""Configuration Error File <%s>, Line %d: Illegal Identifier: <%s>\\n"" , config_source , ConfigLineNo , name )"	333:3:8444:8578	4680644	0	True				
ANR	4681355	CallExpression	"fprintf ( stderr , ""Configuration Error File <%s>, Line %d: Illegal Identifier: <%s>\\n"" , config_source , ConfigLineNo , name )"		4680644	0					
ANR	4681356	Callee	fprintf		4680644	0					
ANR	4681357	Identifier	fprintf		4680644	0					
ANR	4681358	ArgumentList	stderr		4680644	1					
ANR	4681359	Argument	stderr		4680644	0					
ANR	4681360	Identifier	stderr		4680644	0					
ANR	4681361	Argument	"""Configuration Error File <%s>, Line %d: Illegal Identifier: <%s>\\n"""		4680644	1					
ANR	4681362	PrimaryExpression	"""Configuration Error File <%s>, Line %d: Illegal Identifier: <%s>\\n"""		4680644	0					
ANR	4681363	Argument	config_source		4680644	2					
ANR	4681364	Identifier	config_source		4680644	0					
ANR	4681365	Argument	ConfigLineNo		4680644	3					
ANR	4681366	Identifier	ConfigLineNo		4680644	0					
ANR	4681367	Argument	name		4680644	4					
ANR	4681368	Identifier	name		4680644	0					
ANR	4681369	ExpressionStatement	retval = - 1	336:3:8583:8594	4680644	1	True				
ANR	4681370	AssignmentExpression	retval = - 1		4680644	0		=			
ANR	4681371	Identifier	retval		4680644	0					
ANR	4681372	UnaryOperationExpression	- 1		4680644	1					
ANR	4681373	UnaryOperator	-		4680644	0					
ANR	4681374	PrimaryExpression	1		4680644	1					
ANR	4681375	GotoStatement	goto cleanup ;	337:3:8599:8611	4680644	2	True				
ANR	4681376	Identifier	cleanup		4680644	0					
ANR	4681377	IfStatement	if ( expand_flag == EXPAND_IMMEDIATE )		4680644	13					
ANR	4681378	Condition	expand_flag == EXPAND_IMMEDIATE	340:6:8624:8654	4680644	0	True				
ANR	4681379	EqualityExpression	expand_flag == EXPAND_IMMEDIATE		4680644	0		==			
ANR	4681380	Identifier	expand_flag		4680644	0					
ANR	4681381	Identifier	EXPAND_IMMEDIATE		4680644	1					
ANR	4681382	CompoundStatement		186:40:4779:4779	4680644	1					
ANR	4681383	ExpressionStatement	"value = expand_macro ( rhs , table , table_size )"	341:3:8663:8709	4680644	0	True				
ANR	4681384	AssignmentExpression	"value = expand_macro ( rhs , table , table_size )"		4680644	0		=			
ANR	4681385	Identifier	value		4680644	0					
ANR	4681386	CallExpression	"expand_macro ( rhs , table , table_size )"		4680644	1					
ANR	4681387	Callee	expand_macro		4680644	0					
ANR	4681388	Identifier	expand_macro		4680644	0					
ANR	4681389	ArgumentList	rhs		4680644	1					
ANR	4681390	Argument	rhs		4680644	0					
ANR	4681391	Identifier	rhs		4680644	0					
ANR	4681392	Argument	table		4680644	1					
ANR	4681393	Identifier	table		4680644	0					
ANR	4681394	Argument	table_size		4680644	2					
ANR	4681395	Identifier	table_size		4680644	0					
ANR	4681396	IfStatement	if ( value == NULL )		4680644	1					
ANR	4681397	Condition	value == NULL	342:7:8718:8730	4680644	0	True				
ANR	4681398	EqualityExpression	value == NULL		4680644	0		==			
ANR	4681399	Identifier	value		4680644	0					
ANR	4681400	Identifier	NULL		4680644	1					
ANR	4681401	CompoundStatement		188:23:4855:4855	4680644	1					
ANR	4681402	ExpressionStatement	retval = - 1	343:4:8740:8751	4680644	0	True				
ANR	4681403	AssignmentExpression	retval = - 1		4680644	0		=			
ANR	4681404	Identifier	retval		4680644	0					
ANR	4681405	UnaryOperationExpression	- 1		4680644	1					
ANR	4681406	UnaryOperator	-		4680644	0					
ANR	4681407	PrimaryExpression	1		4680644	1					
ANR	4681408	GotoStatement	goto cleanup ;	344:4:8757:8769	4680644	1	True				
ANR	4681409	Identifier	cleanup		4680644	0					
ANR	4681410	ElseStatement	else		4680644	0					
ANR	4681411	CompoundStatement		192:10:4907:4907	4680644	0					
ANR	4681412	ExpressionStatement	"value = expand_macro ( rhs , table , table_size , name )"	348:3:8828:8880	4680644	0	True				
ANR	4681413	AssignmentExpression	"value = expand_macro ( rhs , table , table_size , name )"		4680644	0		=			
ANR	4681414	Identifier	value		4680644	0					
ANR	4681415	CallExpression	"expand_macro ( rhs , table , table_size , name )"		4680644	1					
ANR	4681416	Callee	expand_macro		4680644	0					
ANR	4681417	Identifier	expand_macro		4680644	0					
ANR	4681418	ArgumentList	rhs		4680644	1					
ANR	4681419	Argument	rhs		4680644	0					
ANR	4681420	Identifier	rhs		4680644	0					
ANR	4681421	Argument	table		4680644	1					
ANR	4681422	Identifier	table		4680644	0					
ANR	4681423	Argument	table_size		4680644	2					
ANR	4681424	Identifier	table_size		4680644	0					
ANR	4681425	Argument	name		4680644	3					
ANR	4681426	Identifier	name		4680644	0					
ANR	4681427	IfStatement	if ( value == NULL )		4680644	1					
ANR	4681428	Condition	value == NULL	349:7:8889:8901	4680644	0	True				
ANR	4681429	EqualityExpression	value == NULL		4680644	0		==			
ANR	4681430	Identifier	value		4680644	0					
ANR	4681431	Identifier	NULL		4680644	1					
ANR	4681432	CompoundStatement		195:23:5026:5026	4680644	1					
ANR	4681433	ExpressionStatement	retval = - 1	350:4:8911:8922	4680644	0	True				
ANR	4681434	AssignmentExpression	retval = - 1		4680644	0		=			
ANR	4681435	Identifier	retval		4680644	0					
ANR	4681436	UnaryOperationExpression	- 1		4680644	1					
ANR	4681437	UnaryOperator	-		4680644	0					
ANR	4681438	PrimaryExpression	1		4680644	1					
ANR	4681439	GotoStatement	goto cleanup ;	351:4:8928:8940	4680644	1	True				
ANR	4681440	Identifier	cleanup		4680644	0					
ANR	4681441	IfStatement	if ( op == ':' || op == '=' )		4680644	14					
ANR	4681442	Condition	op == ':' || op == '='	355:6:8960:8981	4680644	0	True				
ANR	4681443	OrExpression	op == ':' || op == '='		4680644	0		||			
ANR	4681444	EqualityExpression	op == ':'		4680644	0		==			
ANR	4681445	Identifier	op		4680644	0					
ANR	4681446	PrimaryExpression	':'		4680644	1					
ANR	4681447	EqualityExpression	op == '='		4680644	1		==			
ANR	4681448	Identifier	op		4680644	0					
ANR	4681449	PrimaryExpression	'='		4680644	1					
ANR	4681450	CompoundStatement		201:31:5106:5106	4680644	1					
ANR	4681451	ExpressionStatement	"insert ( name , value , table , table_size )"	364:3:9275:9315	4680644	0	True				
ANR	4681452	CallExpression	"insert ( name , value , table , table_size )"		4680644	0					
ANR	4681453	Callee	insert		4680644	0					
ANR	4681454	Identifier	insert		4680644	0					
ANR	4681455	ArgumentList	name		4680644	1					
ANR	4681456	Argument	name		4680644	0					
ANR	4681457	Identifier	name		4680644	0					
ANR	4681458	Argument	value		4680644	1					
ANR	4681459	Identifier	value		4680644	0					
ANR	4681460	Argument	table		4680644	2					
ANR	4681461	Identifier	table		4680644	0					
ANR	4681462	Argument	table_size		4680644	3					
ANR	4681463	Identifier	table_size		4680644	0					
ANR	4681464	IfStatement	if ( extra_info != NULL )		4680644	1					
ANR	4681465	Condition	extra_info != NULL	365:7:9324:9341	4680644	0	True				
ANR	4681466	EqualityExpression	extra_info != NULL		4680644	0		!=			
ANR	4681467	Identifier	extra_info		4680644	0					
ANR	4681468	Identifier	NULL		4680644	1					
ANR	4681469	CompoundStatement		211:27:5465:5465	4680644	1					
ANR	4681470	ExpressionStatement	"extra_info -> AddFileParam ( name , config_source , ConfigLineNo )"	366:4:9350:9409	4680644	0	True				
ANR	4681471	CallExpression	"extra_info -> AddFileParam ( name , config_source , ConfigLineNo )"		4680644	0					
ANR	4681472	Callee	extra_info -> AddFileParam		4680644	0					
ANR	4681473	PtrMemberAccess	extra_info -> AddFileParam		4680644	0					
ANR	4681474	Identifier	extra_info		4680644	0					
ANR	4681475	Identifier	AddFileParam		4680644	1					
ANR	4681476	ArgumentList	name		4680644	1					
ANR	4681477	Argument	name		4680644	0					
ANR	4681478	Identifier	name		4680644	0					
ANR	4681479	Argument	config_source		4680644	1					
ANR	4681480	Identifier	config_source		4680644	0					
ANR	4681481	Argument	ConfigLineNo		4680644	2					
ANR	4681482	Identifier	ConfigLineNo		4680644	0					
ANR	4681483	ElseStatement	else		4680644	0					
ANR	4681484	CompoundStatement		214:9:5546:5546	4680644	0					
ANR	4681485	ExpressionStatement	"fprintf ( stderr , ""Configuration Error File <%s>, Line %d: Syntax Error\\n"" , config_source , ConfigLineNo )"	369:3:9430:9542	4680644	0	True				
ANR	4681486	CallExpression	"fprintf ( stderr , ""Configuration Error File <%s>, Line %d: Syntax Error\\n"" , config_source , ConfigLineNo )"		4680644	0					
ANR	4681487	Callee	fprintf		4680644	0					
ANR	4681488	Identifier	fprintf		4680644	0					
ANR	4681489	ArgumentList	stderr		4680644	1					
ANR	4681490	Argument	stderr		4680644	0					
ANR	4681491	Identifier	stderr		4680644	0					
ANR	4681492	Argument	"""Configuration Error File <%s>, Line %d: Syntax Error\\n"""		4680644	1					
ANR	4681493	PrimaryExpression	"""Configuration Error File <%s>, Line %d: Syntax Error\\n"""		4680644	0					
ANR	4681494	Argument	config_source		4680644	2					
ANR	4681495	Identifier	config_source		4680644	0					
ANR	4681496	Argument	ConfigLineNo		4680644	3					
ANR	4681497	Identifier	ConfigLineNo		4680644	0					
ANR	4681498	ExpressionStatement	retval = - 1	372:3:9547:9558	4680644	1	True				
ANR	4681499	AssignmentExpression	retval = - 1		4680644	0		=			
ANR	4681500	Identifier	retval		4680644	0					
ANR	4681501	UnaryOperationExpression	- 1		4680644	1					
ANR	4681502	UnaryOperator	-		4680644	0					
ANR	4681503	PrimaryExpression	1		4680644	1					
ANR	4681504	GotoStatement	goto cleanup ;	373:3:9563:9575	4680644	2	True				
ANR	4681505	Identifier	cleanup		4680644	0					
ANR	4681506	ExpressionStatement	FREE ( name )	376:2:9584:9596	4680644	15	True				
ANR	4681507	CallExpression	FREE ( name )		4680644	0					
ANR	4681508	Callee	FREE		4680644	0					
ANR	4681509	Identifier	FREE		4680644	0					
ANR	4681510	ArgumentList	name		4680644	1					
ANR	4681511	Argument	name		4680644	0					
ANR	4681512	Identifier	name		4680644	0					
ANR	4681513	ExpressionStatement	name = NULL	377:2:9600:9611	4680644	16	True				
ANR	4681514	AssignmentExpression	name = NULL		4680644	0		=			
ANR	4681515	Identifier	name		4680644	0					
ANR	4681516	Identifier	NULL		4680644	1					
ANR	4681517	ExpressionStatement	FREE ( value )	378:2:9615:9628	4680644	17	True				
ANR	4681518	CallExpression	FREE ( value )		4680644	0					
ANR	4681519	Callee	FREE		4680644	0					
ANR	4681520	Identifier	FREE		4680644	0					
ANR	4681521	ArgumentList	value		4680644	1					
ANR	4681522	Argument	value		4680644	0					
ANR	4681523	Identifier	value		4680644	0					
ANR	4681524	ExpressionStatement	value = NULL	379:2:9632:9644	4680644	18	True				
ANR	4681525	AssignmentExpression	value = NULL		4680644	0		=			
ANR	4681526	Identifier	value		4680644	0					
ANR	4681527	Identifier	NULL		4680644	1					
ANR	4681528	Label	cleanup :	382:1:9651:9658	4680644	13	True				
ANR	4681529	Identifier	cleanup		4680644	0					
ANR	4681530	IfStatement	if ( conf_fp )		4680644	14					
ANR	4681531	Condition	conf_fp	383:6:9666:9672	4680644	0	True				
ANR	4681532	Identifier	conf_fp		4680644	0					
ANR	4681533	CompoundStatement		229:16:5797:5797	4680644	1					
ANR	4681534	IfStatement	if ( is_pipe_cmd )		4680644	0					
ANR	4681535	Condition	is_pipe_cmd	384:7:9685:9695	4680644	0	True				
ANR	4681536	Identifier	is_pipe_cmd		4680644	0					
ANR	4681537	CompoundStatement		231:3:5825:5861	4680644	1					
ANR	4681538	IdentifierDeclStatement	int exit_code = my_pclose ( conf_fp ) ;	385:3:9704:9740	4680644	0	True				
ANR	4681539	IdentifierDecl	exit_code = my_pclose ( conf_fp )		4680644	0					
ANR	4681540	IdentifierDeclType	int		4680644	0					
ANR	4681541	Identifier	exit_code		4680644	1					
ANR	4681542	AssignmentExpression	exit_code = my_pclose ( conf_fp )		4680644	2		=			
ANR	4681543	Identifier	exit_code		4680644	0					
ANR	4681544	CallExpression	my_pclose ( conf_fp )		4680644	1					
ANR	4681545	Callee	my_pclose		4680644	0					
ANR	4681546	Identifier	my_pclose		4680644	0					
ANR	4681547	ArgumentList	conf_fp		4680644	1					
ANR	4681548	Argument	conf_fp		4680644	0					
ANR	4681549	Identifier	conf_fp		4680644	0					
ANR	4681550	IfStatement	if ( retval == 0 && exit_code != 0 )		4680644	1					
ANR	4681551	Condition	retval == 0 && exit_code != 0	386:8:9750:9778	4680644	0	True				
ANR	4681552	AndExpression	retval == 0 && exit_code != 0		4680644	0		&&			
ANR	4681553	EqualityExpression	retval == 0		4680644	0		==			
ANR	4681554	Identifier	retval		4680644	0					
ANR	4681555	PrimaryExpression	0		4680644	1					
ANR	4681556	EqualityExpression	exit_code != 0		4680644	1		!=			
ANR	4681557	Identifier	exit_code		4680644	0					
ANR	4681558	PrimaryExpression	0		4680644	1					
ANR	4681559	CompoundStatement		232:40:5903:5903	4680644	1					
ANR	4681560	Statement	fprintf	387:4:9788:9794	4680644	0	True				
ANR	4681561	Statement	(	387:11:9795:9795	4680644	1	True				
ANR	4681562	Statement	stderr	387:13:9797:9802	4680644	2	True				
ANR	4681563	Statement	","	387:19:9803:9803	4680644	3	True				
ANR	4681564	Statement	"""Configuration Error File <%s>: """	387:21:9805:9837	4680644	4	True				
ANR	4681565	Statement	"""command terminated with exit code %d\\n"""	388:7:9846:9885	4680644	5	True				
ANR	4681566	Statement	","	388:47:9886:9886	4680644	6	True				
ANR	4681567	Statement	config_source	389:7:9895:9907	4680644	7	True				
ANR	4681568	Statement	","	389:20:9908:9908	4680644	8	True				
ANR	4681569	Statement	exit_code	389:22:9910:9918	4680644	9	True				
ANR	4681570	Statement	)	389:32:9920:9920	4680644	10	True				
ANR	4681571	ExpressionStatement		389:33:9921:9921	4680644	11	True				
ANR	4681572	ExpressionStatement	retval = - 1	390:4:9927:9938	4680644	12	True				
ANR	4681573	AssignmentExpression	retval = - 1		4680644	0		=			
ANR	4681574	Identifier	retval		4680644	0					
ANR	4681575	UnaryOperationExpression	- 1		4680644	1					
ANR	4681576	UnaryOperator	-		4680644	0					
ANR	4681577	PrimaryExpression	1		4680644	1					
ANR	4681578	ElseStatement	else		4680644	0					
ANR	4681579	CompoundStatement		238:9:6075:6075	4680644	0					
ANR	4681580	ExpressionStatement	fclose ( conf_fp )	393:3:9959:9976	4680644	0	True				
ANR	4681581	CallExpression	fclose ( conf_fp )		4680644	0					
ANR	4681582	Callee	fclose		4680644	0					
ANR	4681583	Identifier	fclose		4680644	0					
ANR	4681584	ArgumentList	conf_fp		4680644	1					
ANR	4681585	Argument	conf_fp		4680644	0					
ANR	4681586	Identifier	conf_fp		4680644	0					
ANR	4681587	IfStatement	if ( name )		4680644	15					
ANR	4681588	Condition	name	396:4:9989:9992	4680644	0	True				
ANR	4681589	Identifier	name		4680644	0					
ANR	4681590	CompoundStatement		242:10:6116:6116	4680644	1					
ANR	4681591	ExpressionStatement	FREE ( name )	397:2:9999:10011	4680644	0	True				
ANR	4681592	CallExpression	FREE ( name )		4680644	0					
ANR	4681593	Callee	FREE		4680644	0					
ANR	4681594	Identifier	FREE		4680644	0					
ANR	4681595	ArgumentList	name		4680644	1					
ANR	4681596	Argument	name		4680644	0					
ANR	4681597	Identifier	name		4680644	0					
ANR	4681598	IfStatement	if ( value )		4680644	16					
ANR	4681599	Condition	value	399:4:10020:10024	4680644	0	True				
ANR	4681600	Identifier	value		4680644	0					
ANR	4681601	CompoundStatement		245:11:6148:6148	4680644	1					
ANR	4681602	ExpressionStatement	FREE ( value )	400:2:10031:10044	4680644	0	True				
ANR	4681603	CallExpression	FREE ( value )		4680644	0					
ANR	4681604	Callee	FREE		4680644	0					
ANR	4681605	Identifier	FREE		4680644	0					
ANR	4681606	ArgumentList	value		4680644	1					
ANR	4681607	Argument	value		4680644	0					
ANR	4681608	Identifier	value		4680644	0					
ANR	4681609	ReturnStatement	return retval ;	402:1:10050:10063	4680644	17	True				
ANR	4681610	Identifier	retval		4680644	0					
ANR	4681611	ReturnType	int		4680644	1					
ANR	4681612	Identifier	Read_config		4680644	2					
ANR	4681613	ParameterList	"const char * config_source , BUCKET * * table , int table_size , int expand_flag , bool check_runtime_security , ExtraParamTable * extra_info"		4680644	3					
ANR	4681614	Parameter	const char * config_source	151:13:3731:3755	4680644	0	True				
ANR	4681615	ParameterType	const char *		4680644	0					
ANR	4681616	Identifier	config_source		4680644	1					
ANR	4681617	Parameter	BUCKET * * table	151:40:3758:3771	4680644	1	True				
ANR	4681618	ParameterType	BUCKET * *		4680644	0					
ANR	4681619	Identifier	table		4680644	1					
ANR	4681620	Parameter	int table_size	152:4:3779:3792	4680644	2	True				
ANR	4681621	ParameterType	int		4680644	0					
ANR	4681622	Identifier	table_size		4680644	1					
ANR	4681623	Parameter	int expand_flag	152:20:3795:3809	4680644	3	True				
ANR	4681624	ParameterType	int		4680644	0					
ANR	4681625	Identifier	expand_flag		4680644	1					
ANR	4681626	Parameter	bool check_runtime_security	153:4:3816:3842	4680644	4	True				
ANR	4681627	ParameterType	bool		4680644	0					
ANR	4681628	Identifier	check_runtime_security		4680644	1					
ANR	4681629	Parameter	ExtraParamTable * extra_info	154:4:3849:3875	4680644	5	True				
ANR	4681630	ParameterType	ExtraParamTable *		4680644	0					
ANR	4681631	Identifier	extra_info		4680644	1					
ANR	4681632	CFGEntryNode	ENTRY		4680644		True				
ANR	4681633	CFGExitNode	EXIT		4680644		True				
ANR	4681634	Symbol	argList		4680644						
ANR	4681635	Symbol	table_size		4680644						
ANR	4681636	Symbol	firstRead		4680644						
ANR	4681637	Symbol	cmdToExecute		4680644						
ANR	4681638	Symbol	argList . AppendArgsV1RawOrV2Quoted		4680644						
ANR	4681639	Symbol	strlen		4680644						
ANR	4681640	Symbol	can_switch_ids		4680644						
ANR	4681641	Symbol	expand_flag		4680644						
ANR	4681642	Symbol	* ptr		4680644						
ANR	4681643	Symbol	& statbuf		4680644						
ANR	4681644	Symbol	get_my_uid		4680644						
ANR	4681645	Symbol	errno		4680644						
ANR	4681646	Symbol	EXPAND_IMMEDIATE		4680644						
ANR	4681647	Symbol	NULL		4680644						
ANR	4681648	Symbol	args_errors . Value		4680644						
ANR	4681649	Symbol	isspace		4680644						
ANR	4681650	Symbol	ISOP		4680644						
ANR	4681651	Symbol	D_FULLDEBUG		4680644						
ANR	4681652	Symbol	stderr		4680644						
ANR	4681653	Symbol	retval		4680644						
ANR	4681654	Symbol	check_runtime_security		4680644						
ANR	4681655	Symbol	strerror		4680644						
ANR	4681656	Symbol	expand_macro		4680644						
ANR	4681657	Symbol	fileno		4680644						
ANR	4681658	Symbol	name		4680644						
ANR	4681659	Symbol	true		4680644						
ANR	4681660	Symbol	statbuf . st_uid		4680644						
ANR	4681661	Symbol	getline_implementation		4680644						
ANR	4681662	Symbol	exit_code		4680644						
ANR	4681663	Symbol	* cmdToExecute		4680644						
ANR	4681664	Symbol	f_uid		4680644						
ANR	4681665	Symbol	my_pclose		4680644						
ANR	4681666	Symbol	fd		4680644						
ANR	4681667	Symbol	is_valid_command		4680644						
ANR	4681668	Symbol	my_popen		4680644						
ANR	4681669	Symbol	rval		4680644						
ANR	4681670	Symbol	args_errors		4680644						
ANR	4681671	Symbol	config_source		4680644						
ANR	4681672	Symbol	value		4680644						
ANR	4681673	Symbol	safe_fopen_wrapper_follow		4680644						
ANR	4681674	Symbol	table		4680644						
ANR	4681675	Symbol	* name		4680644						
ANR	4681676	Symbol	op		4680644						
ANR	4681677	Symbol	is_pipe_cmd		4680644						
ANR	4681678	Symbol	* ptr ++		4680644						
ANR	4681679	Symbol	false		4680644						
ANR	4681680	Symbol	fstat		4680644						
ANR	4681681	Symbol	& args_errors		4680644						
ANR	4681682	Symbol	ptr		4680644						
ANR	4681683	Symbol	is_valid_param_name		4680644						
ANR	4681684	Symbol	blankline		4680644						
ANR	4681685	Symbol	extra_info		4680644						
ANR	4681686	Symbol	ConfigLineNo		4680644						
ANR	4681687	Symbol	* strlen		4680644						
ANR	4681688	Symbol	statbuf		4680644						
ANR	4681689	Symbol	conf_fp		4680644						
ANR	4681690	Symbol	is_piped_command		4680644						
ANR	4681691	Symbol	FALSE		4680644						
ANR	4681692	Symbol	strdup		4680644						
ANR	4681693	Symbol	rhs		4680644						
ANR	4681694	Function	condor_hash	410:0:10157:10424							
ANR	4681695	FunctionDef	"condor_hash (register const char * string , register int size)"		4681694	0					
ANR	4681696	CompoundStatement		412:0:10223:10424	4681694	0					
ANR	4681697	Statement	register	413:1:10226:10233	4681694	0	True				
ANR	4681698	IdentifierDeclStatement	unsigned int answer ;	413:10:10235:10255	4681694	1	True				
ANR	4681699	IdentifierDecl	answer		4681694	0					
ANR	4681700	IdentifierDeclType	unsigned int		4681694	0					
ANR	4681701	Identifier	answer		4681694	1					
ANR	4681702	ExpressionStatement	answer = 1	415:1:10259:10269	4681694	2	True				
ANR	4681703	AssignmentExpression	answer = 1		4681694	0		=			
ANR	4681704	Identifier	answer		4681694	0					
ANR	4681705	PrimaryExpression	1		4681694	1					
ANR	4681706	ForStatement	for ( ; * string ; string ++ )		4681694	3					
ANR	4681707	Condition	* string	417:8:10280:10286	4681694	0	True				
ANR	4681708	UnaryOperationExpression	* string		4681694	0					
ANR	4681709	UnaryOperator	*		4681694	0					
ANR	4681710	Identifier	string		4681694	1					
ANR	4681711	PostIncDecOperationExpression	string ++	417:17:10289:10296	4681694	1	True				
ANR	4681712	Identifier	string		4681694	0					
ANR	4681713	IncDec	++		4681694	1					
ANR	4681714	CompoundStatement		6:28:76:76	4681694	2					
ANR	4681715	ExpressionStatement	answer <<= 1	418:2:10304:10316	4681694	0	True				
ANR	4681716	AssignmentExpression	answer <<= 1		4681694	0		<<=			
ANR	4681717	Identifier	answer		4681694	0					
ANR	4681718	PrimaryExpression	1		4681694	1					
ANR	4681719	ExpressionStatement	answer += ( int ) * string	419:2:10320:10342	4681694	1	True				
ANR	4681720	AssignmentExpression	answer += ( int ) * string		4681694	0		+=			
ANR	4681721	Identifier	answer		4681694	0					
ANR	4681722	CastExpression	( int ) * string		4681694	1					
ANR	4681723	CastTarget	int		4681694	0					
ANR	4681724	UnaryOperationExpression	* string		4681694	1					
ANR	4681725	UnaryOperator	*		4681694	0					
ANR	4681726	Identifier	string		4681694	1					
ANR	4681727	ExpressionStatement	answer >>= 1	421:1:10348:10360	4681694	4	True				
ANR	4681728	AssignmentExpression	answer >>= 1		4681694	0		>>=			
ANR	4681729	Identifier	answer		4681694	0					
ANR	4681730	PrimaryExpression	1		4681694	1					
ANR	4681731	ExpressionStatement	answer %= size	422:1:10392:10406	4681694	5	True				
ANR	4681732	AssignmentExpression	answer %= size		4681694	0		%=			
ANR	4681733	Identifier	answer		4681694	0					
ANR	4681734	Identifier	size		4681694	1					
ANR	4681735	ReturnStatement	return answer ;	423:1:10409:10422	4681694	6	True				
ANR	4681736	Identifier	answer		4681694	0					
ANR	4681737	ReturnType	int		4681694	1					
ANR	4681738	Identifier	condor_hash		4681694	2					
ANR	4681739	ParameterList	"register const char * string , register int size"		4681694	3					
ANR	4681740	Parameter	register const char * string	411:13:10174:10200	4681694	0	True				
ANR	4681741	ParameterType	register const char *		4681694	0					
ANR	4681742	Identifier	string		4681694	1					
ANR	4681743	Parameter	register int size	411:42:10203:10219	4681694	1	True				
ANR	4681744	ParameterType	register int		4681694	0					
ANR	4681745	Identifier	size		4681694	1					
ANR	4681746	CFGEntryNode	ENTRY		4681694		True				
ANR	4681747	CFGExitNode	EXIT		4681694		True				
ANR	4681748	Symbol	string		4681694						
ANR	4681749	Symbol	size		4681694						
ANR	4681750	Symbol	answer		4681694						
ANR	4681751	Symbol	* string		4681694						
ANR	4681752	Function	insert	429:0:10499:11229							
ANR	4681753	FunctionDef	"insert (const char * name , const char * value , BUCKET * * table , int table_size)"		4681752	0					
ANR	4681754	CompoundStatement		431:0:10582:11229	4681752	0					
ANR	4681755	Statement	register	432:1:10585:10592	4681752	0	True				
ANR	4681756	IdentifierDeclStatement	BUCKET * ptr ;	432:10:10594:10605	4681752	1	True				
ANR	4681757	IdentifierDecl	* ptr		4681752	0					
ANR	4681758	IdentifierDeclType	BUCKET *		4681752	0					
ANR	4681759	Identifier	ptr		4681752	1					
ANR	4681760	IdentifierDeclStatement	int loc ;	433:1:10608:10616	4681752	2	True				
ANR	4681761	IdentifierDecl	loc		4681752	0					
ANR	4681762	IdentifierDeclType	int		4681752	0					
ANR	4681763	Identifier	loc		4681752	1					
ANR	4681764	IdentifierDeclStatement	BUCKET * bucket ;	434:1:10619:10633	4681752	3	True				
ANR	4681765	IdentifierDecl	* bucket		4681752	0					
ANR	4681766	IdentifierDeclType	BUCKET *		4681752	0					
ANR	4681767	Identifier	bucket		4681752	1					
ANR	4681768	IdentifierDeclStatement	char tmp_name [ MAX_PARAM_LEN ] ;	435:1:10636:10666	4681752	4	True				
ANR	4681769	IdentifierDecl	tmp_name [ MAX_PARAM_LEN ]		4681752	0					
ANR	4681770	IdentifierDeclType	char [ MAX_PARAM_LEN ]		4681752	0					
ANR	4681771	Identifier	tmp_name		4681752	1					
ANR	4681772	Identifier	MAX_PARAM_LEN		4681752	2					
ANR	4681773	ExpressionStatement	"snprintf ( tmp_name , MAX_PARAM_LEN , ""%s"" , name )"	438:1:10714:10760	4681752	5	True				
ANR	4681774	CallExpression	"snprintf ( tmp_name , MAX_PARAM_LEN , ""%s"" , name )"		4681752	0					
ANR	4681775	Callee	snprintf		4681752	0					
ANR	4681776	Identifier	snprintf		4681752	0					
ANR	4681777	ArgumentList	tmp_name		4681752	1					
ANR	4681778	Argument	tmp_name		4681752	0					
ANR	4681779	Identifier	tmp_name		4681752	0					
ANR	4681780	Argument	MAX_PARAM_LEN		4681752	1					
ANR	4681781	Identifier	MAX_PARAM_LEN		4681752	0					
ANR	4681782	Argument	"""%s"""		4681752	2					
ANR	4681783	PrimaryExpression	"""%s"""		4681752	0					
ANR	4681784	Argument	name		4681752	3					
ANR	4681785	Identifier	name		4681752	0					
ANR	4681786	ExpressionStatement	tmp_name [ MAX_PARAM_LEN - 1 ] = '\\0'	439:1:10763:10795	4681752	6	True				
ANR	4681787	AssignmentExpression	tmp_name [ MAX_PARAM_LEN - 1 ] = '\\0'		4681752	0		=			
ANR	4681788	ArrayIndexing	tmp_name [ MAX_PARAM_LEN - 1 ]		4681752	0					
ANR	4681789	Identifier	tmp_name		4681752	0					
ANR	4681790	AdditiveExpression	MAX_PARAM_LEN - 1		4681752	1		-			
ANR	4681791	Identifier	MAX_PARAM_LEN		4681752	0					
ANR	4681792	PrimaryExpression	1		4681752	1					
ANR	4681793	PrimaryExpression	'\\0'		4681752	1					
ANR	4681794	ExpressionStatement	strlwr ( tmp_name )	440:1:10798:10816	4681752	7	True				
ANR	4681795	CallExpression	strlwr ( tmp_name )		4681752	0					
ANR	4681796	Callee	strlwr		4681752	0					
ANR	4681797	Identifier	strlwr		4681752	0					
ANR	4681798	ArgumentList	tmp_name		4681752	1					
ANR	4681799	Argument	tmp_name		4681752	0					
ANR	4681800	Identifier	tmp_name		4681752	0					
ANR	4681801	ExpressionStatement	"loc = condor_hash ( tmp_name , table_size )"	441:1:10819:10860	4681752	8	True				
ANR	4681802	AssignmentExpression	"loc = condor_hash ( tmp_name , table_size )"		4681752	0		=			
ANR	4681803	Identifier	loc		4681752	0					
ANR	4681804	CallExpression	"condor_hash ( tmp_name , table_size )"		4681752	1					
ANR	4681805	Callee	condor_hash		4681752	0					
ANR	4681806	Identifier	condor_hash		4681752	0					
ANR	4681807	ArgumentList	tmp_name		4681752	1					
ANR	4681808	Argument	tmp_name		4681752	0					
ANR	4681809	Identifier	tmp_name		4681752	0					
ANR	4681810	Argument	table_size		4681752	1					
ANR	4681811	Identifier	table_size		4681752	0					
ANR	4681812	ForStatement	for ( ptr = table [ loc ] ; ptr ; ptr = ptr -> next )		4681752	9					
ANR	4681813	ForInit	ptr = table [ loc ] ;	442:6:10868:10882	4681752	0	True				
ANR	4681814	AssignmentExpression	ptr = table [ loc ]		4681752	0		=			
ANR	4681815	Identifier	ptr		4681752	0					
ANR	4681816	ArrayIndexing	table [ loc ]		4681752	1					
ANR	4681817	Identifier	table		4681752	0					
ANR	4681818	Identifier	loc		4681752	1					
ANR	4681819	Condition	ptr	442:22:10884:10886	4681752	1	True				
ANR	4681820	Identifier	ptr		4681752	0					
ANR	4681821	AssignmentExpression	ptr = ptr -> next	442:27:10889:10901	4681752	2	True	=			
ANR	4681822	Identifier	ptr		4681752	0					
ANR	4681823	PtrMemberAccess	ptr -> next		4681752	1					
ANR	4681824	Identifier	ptr		4681752	0					
ANR	4681825	Identifier	next		4681752	1					
ANR	4681826	CompoundStatement		12:43:322:322	4681752	3					
ANR	4681827	IfStatement	"if ( strcmp ( tmp_name , ptr -> name ) == 0 )"		4681752	0					
ANR	4681828	Condition	"strcmp ( tmp_name , ptr -> name ) == 0"	443:6:10913:10943	4681752	0	True				
ANR	4681829	EqualityExpression	"strcmp ( tmp_name , ptr -> name ) == 0"		4681752	0		==			
ANR	4681830	CallExpression	"strcmp ( tmp_name , ptr -> name )"		4681752	0					
ANR	4681831	Callee	strcmp		4681752	0					
ANR	4681832	Identifier	strcmp		4681752	0					
ANR	4681833	ArgumentList	tmp_name		4681752	1					
ANR	4681834	Argument	tmp_name		4681752	0					
ANR	4681835	Identifier	tmp_name		4681752	0					
ANR	4681836	Argument	ptr -> name		4681752	1					
ANR	4681837	PtrMemberAccess	ptr -> name		4681752	0					
ANR	4681838	Identifier	ptr		4681752	0					
ANR	4681839	Identifier	name		4681752	1					
ANR	4681840	PrimaryExpression	0		4681752	1					
ANR	4681841	CompoundStatement		13:40:364:364	4681752	1					
ANR	4681842	ExpressionStatement	FREE ( ptr -> value )	444:3:10952:10970	4681752	0	True				
ANR	4681843	CallExpression	FREE ( ptr -> value )		4681752	0					
ANR	4681844	Callee	FREE		4681752	0					
ANR	4681845	Identifier	FREE		4681752	0					
ANR	4681846	ArgumentList	ptr -> value		4681752	1					
ANR	4681847	Argument	ptr -> value		4681752	0					
ANR	4681848	PtrMemberAccess	ptr -> value		4681752	0					
ANR	4681849	Identifier	ptr		4681752	0					
ANR	4681850	Identifier	value		4681752	1					
ANR	4681851	ExpressionStatement	ptr -> value = strdup ( value )	445:3:10975:11003	4681752	1	True				
ANR	4681852	AssignmentExpression	ptr -> value = strdup ( value )		4681752	0		=			
ANR	4681853	PtrMemberAccess	ptr -> value		4681752	0					
ANR	4681854	Identifier	ptr		4681752	0					
ANR	4681855	Identifier	value		4681752	1					
ANR	4681856	CallExpression	strdup ( value )		4681752	1					
ANR	4681857	Callee	strdup		4681752	0					
ANR	4681858	Identifier	strdup		4681752	0					
ANR	4681859	ArgumentList	value		4681752	1					
ANR	4681860	Argument	value		4681752	0					
ANR	4681861	Identifier	value		4681752	0					
ANR	4681862	ReturnStatement	return ;	446:3:11008:11014	4681752	2	True				
ANR	4681863	ExpressionStatement	bucket = ( BUCKET * ) MALLOC ( sizeof ( BUCKET ) )	451:1:11043:11086	4681752	10	True				
ANR	4681864	AssignmentExpression	bucket = ( BUCKET * ) MALLOC ( sizeof ( BUCKET ) )		4681752	0		=			
ANR	4681865	Identifier	bucket		4681752	0					
ANR	4681866	CastExpression	( BUCKET * ) MALLOC ( sizeof ( BUCKET ) )		4681752	1					
ANR	4681867	CastTarget	BUCKET *		4681752	0					
ANR	4681868	CallExpression	MALLOC ( sizeof ( BUCKET ) )		4681752	1					
ANR	4681869	Callee	MALLOC		4681752	0					
ANR	4681870	Identifier	MALLOC		4681752	0					
ANR	4681871	ArgumentList	sizeof ( BUCKET )		4681752	1					
ANR	4681872	Argument	sizeof ( BUCKET )		4681752	0					
ANR	4681873	SizeofExpression	sizeof ( BUCKET )		4681752	0					
ANR	4681874	Sizeof	sizeof		4681752	0					
ANR	4681875	SizeofOperand	BUCKET		4681752	1					
ANR	4681876	ExpressionStatement	bucket -> name = strdup ( tmp_name )	452:1:11089:11122	4681752	11	True				
ANR	4681877	AssignmentExpression	bucket -> name = strdup ( tmp_name )		4681752	0		=			
ANR	4681878	PtrMemberAccess	bucket -> name		4681752	0					
ANR	4681879	Identifier	bucket		4681752	0					
ANR	4681880	Identifier	name		4681752	1					
ANR	4681881	CallExpression	strdup ( tmp_name )		4681752	1					
ANR	4681882	Callee	strdup		4681752	0					
ANR	4681883	Identifier	strdup		4681752	0					
ANR	4681884	ArgumentList	tmp_name		4681752	1					
ANR	4681885	Argument	tmp_name		4681752	0					
ANR	4681886	Identifier	tmp_name		4681752	0					
ANR	4681887	ExpressionStatement	bucket -> value = strdup ( value )	453:1:11125:11156	4681752	12	True				
ANR	4681888	AssignmentExpression	bucket -> value = strdup ( value )		4681752	0		=			
ANR	4681889	PtrMemberAccess	bucket -> value		4681752	0					
ANR	4681890	Identifier	bucket		4681752	0					
ANR	4681891	Identifier	value		4681752	1					
ANR	4681892	CallExpression	strdup ( value )		4681752	1					
ANR	4681893	Callee	strdup		4681752	0					
ANR	4681894	Identifier	strdup		4681752	0					
ANR	4681895	ArgumentList	value		4681752	1					
ANR	4681896	Argument	value		4681752	0					
ANR	4681897	Identifier	value		4681752	0					
ANR	4681898	ExpressionStatement	bucket -> used = 0	454:1:11159:11175	4681752	13	True				
ANR	4681899	AssignmentExpression	bucket -> used = 0		4681752	0		=			
ANR	4681900	PtrMemberAccess	bucket -> used		4681752	0					
ANR	4681901	Identifier	bucket		4681752	0					
ANR	4681902	Identifier	used		4681752	1					
ANR	4681903	PrimaryExpression	0		4681752	1					
ANR	4681904	ExpressionStatement	bucket -> next = table [ loc ]	455:1:11178:11205	4681752	14	True				
ANR	4681905	AssignmentExpression	bucket -> next = table [ loc ]		4681752	0		=			
ANR	4681906	PtrMemberAccess	bucket -> next		4681752	0					
ANR	4681907	Identifier	bucket		4681752	0					
ANR	4681908	Identifier	next		4681752	1					
ANR	4681909	ArrayIndexing	table [ loc ]		4681752	1					
ANR	4681910	Identifier	table		4681752	0					
ANR	4681911	Identifier	loc		4681752	1					
ANR	4681912	ExpressionStatement	table [ loc ] = bucket	456:1:11208:11227	4681752	15	True				
ANR	4681913	AssignmentExpression	table [ loc ] = bucket		4681752	0		=			
ANR	4681914	ArrayIndexing	table [ loc ]		4681752	0					
ANR	4681915	Identifier	table		4681752	0					
ANR	4681916	Identifier	loc		4681752	1					
ANR	4681917	Identifier	bucket		4681752	1					
ANR	4681918	ReturnType	void		4681752	1					
ANR	4681919	Identifier	insert		4681752	2					
ANR	4681920	ParameterList	"const char * name , const char * value , BUCKET * * table , int table_size"		4681752	3					
ANR	4681921	Parameter	const char * name	430:8:10512:10527	4681752	0	True				
ANR	4681922	ParameterType	const char *		4681752	0					
ANR	4681923	Identifier	name		4681752	1					
ANR	4681924	Parameter	const char * value	430:26:10530:10546	4681752	1	True				
ANR	4681925	ParameterType	const char *		4681752	0					
ANR	4681926	Identifier	value		4681752	1					
ANR	4681927	Parameter	BUCKET * * table	430:45:10549:10562	4681752	2	True				
ANR	4681928	ParameterType	BUCKET * *		4681752	0					
ANR	4681929	Identifier	table		4681752	1					
ANR	4681930	Parameter	int table_size	430:61:10565:10578	4681752	3	True				
ANR	4681931	ParameterType	int		4681752	0					
ANR	4681932	Identifier	table_size		4681752	1					
ANR	4681933	CFGEntryNode	ENTRY		4681752		True				
ANR	4681934	CFGExitNode	EXIT		4681752		True				
ANR	4681935	Symbol	table_size		4681752						
ANR	4681936	Symbol	loc		4681752						
ANR	4681937	Symbol	ptr -> name		4681752						
ANR	4681938	Symbol	bucket -> name		4681752						
ANR	4681939	Symbol	bucket -> value		4681752						
ANR	4681940	Symbol	ptr -> value		4681752						
ANR	4681941	Symbol	* MAX_PARAM_LEN		4681752						
ANR	4681942	Symbol	* ptr		4681752						
ANR	4681943	Symbol	value		4681752						
ANR	4681944	Symbol	table		4681752						
ANR	4681945	Symbol	* tmp_name		4681752						
ANR	4681946	Symbol	strcmp		4681752						
ANR	4681947	Symbol	bucket -> next		4681752						
ANR	4681948	Symbol	bucket -> used		4681752						
ANR	4681949	Symbol	condor_hash		4681752						
ANR	4681950	Symbol	* table		4681752						
ANR	4681951	Symbol	* loc		4681752						
ANR	4681952	Symbol	MAX_PARAM_LEN		4681752						
ANR	4681953	Symbol	ptr		4681752						
ANR	4681954	Symbol	tmp_name		4681752						
ANR	4681955	Symbol	bucket		4681752						
ANR	4681956	Symbol	* bucket		4681752						
ANR	4681957	Symbol	MALLOC		4681752						
ANR	4681958	Symbol	name		4681752						
ANR	4681959	Symbol	strdup		4681752						
ANR	4681960	Symbol	ptr -> next		4681752						
ANR	4681961	Function	set_macro_used	462:0:11278:11749							
ANR	4681962	FunctionDef	"set_macro_used (const char * name , int used , BUCKET * table [ ] , int table_size)"		4681961	0					
ANR	4681963	CompoundStatement		464:0:11363:11749	4681961	0					
ANR	4681964	Statement	register	465:1:11366:11373	4681961	0	True				
ANR	4681965	IdentifierDeclStatement	BUCKET * ptr ;	465:10:11375:11386	4681961	1	True				
ANR	4681966	IdentifierDecl	* ptr		4681961	0					
ANR	4681967	IdentifierDeclType	BUCKET *		4681961	0					
ANR	4681968	Identifier	ptr		4681961	1					
ANR	4681969	IdentifierDeclStatement	int loc ;	466:1:11389:11397	4681961	2	True				
ANR	4681970	IdentifierDecl	loc		4681961	0					
ANR	4681971	IdentifierDeclType	int		4681961	0					
ANR	4681972	Identifier	loc		4681961	1					
ANR	4681973	IdentifierDeclStatement	char tmp_name [ MAX_PARAM_LEN ] ;	467:1:11400:11430	4681961	3	True				
ANR	4681974	IdentifierDecl	tmp_name [ MAX_PARAM_LEN ]		4681961	0					
ANR	4681975	IdentifierDeclType	char [ MAX_PARAM_LEN ]		4681961	0					
ANR	4681976	Identifier	tmp_name		4681961	1					
ANR	4681977	Identifier	MAX_PARAM_LEN		4681961	2					
ANR	4681978	ExpressionStatement	"snprintf ( tmp_name , MAX_PARAM_LEN , ""%s"" , name )"	470:1:11475:11521	4681961	4	True				
ANR	4681979	CallExpression	"snprintf ( tmp_name , MAX_PARAM_LEN , ""%s"" , name )"		4681961	0					
ANR	4681980	Callee	snprintf		4681961	0					
ANR	4681981	Identifier	snprintf		4681961	0					
ANR	4681982	ArgumentList	tmp_name		4681961	1					
ANR	4681983	Argument	tmp_name		4681961	0					
ANR	4681984	Identifier	tmp_name		4681961	0					
ANR	4681985	Argument	MAX_PARAM_LEN		4681961	1					
ANR	4681986	Identifier	MAX_PARAM_LEN		4681961	0					
ANR	4681987	Argument	"""%s"""		4681961	2					
ANR	4681988	PrimaryExpression	"""%s"""		4681961	0					
ANR	4681989	Argument	name		4681961	3					
ANR	4681990	Identifier	name		4681961	0					
ANR	4681991	ExpressionStatement	tmp_name [ MAX_PARAM_LEN - 1 ] = '\\0'	471:1:11524:11556	4681961	5	True				
ANR	4681992	AssignmentExpression	tmp_name [ MAX_PARAM_LEN - 1 ] = '\\0'		4681961	0		=			
ANR	4681993	ArrayIndexing	tmp_name [ MAX_PARAM_LEN - 1 ]		4681961	0					
ANR	4681994	Identifier	tmp_name		4681961	0					
ANR	4681995	AdditiveExpression	MAX_PARAM_LEN - 1		4681961	1		-			
ANR	4681996	Identifier	MAX_PARAM_LEN		4681961	0					
ANR	4681997	PrimaryExpression	1		4681961	1					
ANR	4681998	PrimaryExpression	'\\0'		4681961	1					
ANR	4681999	ExpressionStatement	strlwr ( tmp_name )	472:1:11559:11577	4681961	6	True				
ANR	4682000	CallExpression	strlwr ( tmp_name )		4681961	0					
ANR	4682001	Callee	strlwr		4681961	0					
ANR	4682002	Identifier	strlwr		4681961	0					
ANR	4682003	ArgumentList	tmp_name		4681961	1					
ANR	4682004	Argument	tmp_name		4681961	0					
ANR	4682005	Identifier	tmp_name		4681961	0					
ANR	4682006	ExpressionStatement	"loc = condor_hash ( tmp_name , table_size )"	473:1:11580:11621	4681961	7	True				
ANR	4682007	AssignmentExpression	"loc = condor_hash ( tmp_name , table_size )"		4681961	0		=			
ANR	4682008	Identifier	loc		4681961	0					
ANR	4682009	CallExpression	"condor_hash ( tmp_name , table_size )"		4681961	1					
ANR	4682010	Callee	condor_hash		4681961	0					
ANR	4682011	Identifier	condor_hash		4681961	0					
ANR	4682012	ArgumentList	tmp_name		4681961	1					
ANR	4682013	Argument	tmp_name		4681961	0					
ANR	4682014	Identifier	tmp_name		4681961	0					
ANR	4682015	Argument	table_size		4681961	1					
ANR	4682016	Identifier	table_size		4681961	0					
ANR	4682017	ForStatement	for ( ptr = table [ loc ] ; ptr ; ptr = ptr -> next )		4681961	8					
ANR	4682018	ForInit	ptr = table [ loc ] ;	474:6:11629:11643	4681961	0	True				
ANR	4682019	AssignmentExpression	ptr = table [ loc ]		4681961	0		=			
ANR	4682020	Identifier	ptr		4681961	0					
ANR	4682021	ArrayIndexing	table [ loc ]		4681961	1					
ANR	4682022	Identifier	table		4681961	0					
ANR	4682023	Identifier	loc		4681961	1					
ANR	4682024	Condition	ptr	474:22:11645:11647	4681961	1	True				
ANR	4682025	Identifier	ptr		4681961	0					
ANR	4682026	AssignmentExpression	ptr = ptr -> next	474:27:11650:11662	4681961	2	True	=			
ANR	4682027	Identifier	ptr		4681961	0					
ANR	4682028	PtrMemberAccess	ptr -> next		4681961	1					
ANR	4682029	Identifier	ptr		4681961	0					
ANR	4682030	Identifier	next		4681961	1					
ANR	4682031	CompoundStatement		11:43:302:302	4681961	3					
ANR	4682032	IfStatement	"if ( strcmp ( tmp_name , ptr -> name ) == 0 )"		4681961	0					
ANR	4682033	Condition	"strcmp ( tmp_name , ptr -> name ) == 0"	475:6:11674:11704	4681961	0	True				
ANR	4682034	EqualityExpression	"strcmp ( tmp_name , ptr -> name ) == 0"		4681961	0		==			
ANR	4682035	CallExpression	"strcmp ( tmp_name , ptr -> name )"		4681961	0					
ANR	4682036	Callee	strcmp		4681961	0					
ANR	4682037	Identifier	strcmp		4681961	0					
ANR	4682038	ArgumentList	tmp_name		4681961	1					
ANR	4682039	Argument	tmp_name		4681961	0					
ANR	4682040	Identifier	tmp_name		4681961	0					
ANR	4682041	Argument	ptr -> name		4681961	1					
ANR	4682042	PtrMemberAccess	ptr -> name		4681961	0					
ANR	4682043	Identifier	ptr		4681961	0					
ANR	4682044	Identifier	name		4681961	1					
ANR	4682045	PrimaryExpression	0		4681961	1					
ANR	4682046	CompoundStatement		12:40:344:344	4681961	1					
ANR	4682047	ExpressionStatement	ptr -> used = used	476:3:11713:11729	4681961	0	True				
ANR	4682048	AssignmentExpression	ptr -> used = used		4681961	0		=			
ANR	4682049	PtrMemberAccess	ptr -> used		4681961	0					
ANR	4682050	Identifier	ptr		4681961	0					
ANR	4682051	Identifier	used		4681961	1					
ANR	4682052	Identifier	used		4681961	1					
ANR	4682053	ReturnStatement	return ;	477:3:11734:11740	4681961	1	True				
ANR	4682054	ReturnType	void		4681961	1					
ANR	4682055	Identifier	set_macro_used		4681961	2					
ANR	4682056	ParameterList	"const char * name , int used , BUCKET * table [ ] , int table_size"		4681961	3					
ANR	4682057	Parameter	const char * name	463:17:11301:11316	4681961	0	True				
ANR	4682058	ParameterType	const char *		4681961	0					
ANR	4682059	Identifier	name		4681961	1					
ANR	4682060	Parameter	int used	463:35:11319:11326	4681961	1	True				
ANR	4682061	ParameterType	int		4681961	0					
ANR	4682062	Identifier	used		4681961	1					
ANR	4682063	Parameter	BUCKET * table [ ]	463:45:11329:11343	4681961	2	True				
ANR	4682064	ParameterType	BUCKET * [ ]		4681961	0					
ANR	4682065	Identifier	table		4681961	1					
ANR	4682066	Parameter	int table_size	463:62:11346:11359	4681961	3	True				
ANR	4682067	ParameterType	int		4681961	0					
ANR	4682068	Identifier	table_size		4681961	1					
ANR	4682069	CFGEntryNode	ENTRY		4681961		True				
ANR	4682070	CFGExitNode	EXIT		4681961		True				
ANR	4682071	Symbol	strcmp		4681961						
ANR	4682072	Symbol	table_size		4681961						
ANR	4682073	Symbol	loc		4681961						
ANR	4682074	Symbol	condor_hash		4681961						
ANR	4682075	Symbol	ptr -> name		4681961						
ANR	4682076	Symbol	* table		4681961						
ANR	4682077	Symbol	ptr -> used		4681961						
ANR	4682078	Symbol	* loc		4681961						
ANR	4682079	Symbol	used		4681961						
ANR	4682080	Symbol	MAX_PARAM_LEN		4681961						
ANR	4682081	Symbol	ptr		4681961						
ANR	4682082	Symbol	tmp_name		4681961						
ANR	4682083	Symbol	* MAX_PARAM_LEN		4681961						
ANR	4682084	Symbol	name		4681961						
ANR	4682085	Symbol	* ptr		4681961						
ANR	4682086	Symbol	table		4681961						
ANR	4682087	Symbol	* tmp_name		4681961						
ANR	4682088	Symbol	ptr -> next		4681961						
ANR	4682089	Function	getline	489:0:12113:12193							
ANR	4682090	FunctionDef	getline (FILE * fp)		4682089	0					
ANR	4682091	CompoundStatement		491:0:12140:12193	4682089	0					
ANR	4682092	ReturnStatement	"return getline_implementation ( fp , _POSIX_ARG_MAX ) ;"	492:1:12143:12191	4682089	0	True				
ANR	4682093	CallExpression	"getline_implementation ( fp , _POSIX_ARG_MAX )"		4682089	0					
ANR	4682094	Callee	getline_implementation		4682089	0					
ANR	4682095	Identifier	getline_implementation		4682089	0					
ANR	4682096	ArgumentList	fp		4682089	1					
ANR	4682097	Argument	fp		4682089	0					
ANR	4682098	Identifier	fp		4682089	0					
ANR	4682099	Argument	_POSIX_ARG_MAX		4682089	1					
ANR	4682100	Identifier	_POSIX_ARG_MAX		4682089	0					
ANR	4682101	ReturnType	char *		4682089	1					
ANR	4682102	Identifier	getline		4682089	2					
ANR	4682103	ParameterList	FILE * fp		4682089	3					
ANR	4682104	Parameter	FILE * fp	490:9:12129:12136	4682089	0	True				
ANR	4682105	ParameterType	FILE *		4682089	0					
ANR	4682106	Identifier	fp		4682089	1					
ANR	4682107	CFGEntryNode	ENTRY		4682089		True				
ANR	4682108	CFGExitNode	EXIT		4682089		True				
ANR	4682109	Symbol	_POSIX_ARG_MAX		4682089						
ANR	4682110	Symbol	getline_implementation		4682089						
ANR	4682111	Symbol	fp		4682089						
ANR	4682112	Function	getline_implementation	494:0:12195:14578							
ANR	4682113	FunctionDef	"getline_implementation (FILE * fp , int requested_bufsize)"		4682112	0					
ANR	4682114	CompoundStatement		496:0:12267:14578	4682112	0					
ANR	4682115	Statement	static	497:1:12270:12275	4682112	0	True				
ANR	4682116	IdentifierDeclStatement	char * buf = NULL ;	497:8:12277:12293	4682112	1	True				
ANR	4682117	IdentifierDecl	* buf = NULL		4682112	0					
ANR	4682118	IdentifierDeclType	char *		4682112	0					
ANR	4682119	Identifier	buf		4682112	1					
ANR	4682120	AssignmentExpression	* buf = NULL		4682112	2		=			
ANR	4682121	Identifier	NULL		4682112	0					
ANR	4682122	Identifier	NULL		4682112	1					
ANR	4682123	Statement	static	498:1:12296:12301	4682112	2	True				
ANR	4682124	IdentifierDeclStatement	unsigned int buflen = 0 ;	498:8:12303:12326	4682112	3	True				
ANR	4682125	IdentifierDecl	buflen = 0		4682112	0					
ANR	4682126	IdentifierDeclType	unsigned int		4682112	0					
ANR	4682127	Identifier	buflen		4682112	1					
ANR	4682128	AssignmentExpression	buflen = 0		4682112	2		=			
ANR	4682129	Identifier	buflen		4682112	0					
ANR	4682130	PrimaryExpression	0		4682112	1					
ANR	4682131	IdentifierDeclStatement	char * end_ptr ;	499:1:12329:12342	4682112	4	True				
ANR	4682132	IdentifierDecl	* end_ptr		4682112	0					
ANR	4682133	IdentifierDeclType	char *		4682112	0					
ANR	4682134	Identifier	end_ptr		4682112	1					
ANR	4682135	IdentifierDeclStatement	char * line_ptr ;	500:1:12380:12397	4682112	5	True				
ANR	4682136	IdentifierDecl	* line_ptr		4682112	0					
ANR	4682137	IdentifierDeclType	char *		4682112	0					
ANR	4682138	Identifier	line_ptr		4682112	1					
ANR	4682139	IfStatement	if ( feof ( fp ) )		4682112	6					
ANR	4682140	Condition	feof ( fp )	502:5:12405:12412	4682112	0	True				
ANR	4682141	CallExpression	feof ( fp )		4682112	0					
ANR	4682142	Callee	feof		4682112	0					
ANR	4682143	Identifier	feof		4682112	0					
ANR	4682144	ArgumentList	fp		4682112	1					
ANR	4682145	Argument	fp		4682112	0					
ANR	4682146	Identifier	fp		4682112	0					
ANR	4682147	CompoundStatement		7:16:148:148	4682112	1					
ANR	4682148	IfStatement	if ( buf )		4682112	0					
ANR	4682149	Condition	buf	505:7:12507:12509	4682112	0	True				
ANR	4682150	Identifier	buf		4682112	0					
ANR	4682151	CompoundStatement		10:13:245:245	4682112	1					
ANR	4682152	ExpressionStatement	free ( buf )	506:3:12518:12527	4682112	0	True				
ANR	4682153	CallExpression	free ( buf )		4682112	0					
ANR	4682154	Callee	free		4682112	0					
ANR	4682155	Identifier	free		4682112	0					
ANR	4682156	ArgumentList	buf		4682112	1					
ANR	4682157	Argument	buf		4682112	0					
ANR	4682158	Identifier	buf		4682112	0					
ANR	4682159	ExpressionStatement	buf = NULL	507:3:12532:12542	4682112	1	True				
ANR	4682160	AssignmentExpression	buf = NULL		4682112	0		=			
ANR	4682161	Identifier	buf		4682112	0					
ANR	4682162	Identifier	NULL		4682112	1					
ANR	4682163	ExpressionStatement	buflen = 0	508:3:12547:12557	4682112	2	True				
ANR	4682164	AssignmentExpression	buflen = 0		4682112	0		=			
ANR	4682165	Identifier	buflen		4682112	0					
ANR	4682166	PrimaryExpression	0		4682112	1					
ANR	4682167	ReturnStatement	return NULL ;	510:2:12565:12576	4682112	1	True				
ANR	4682168	Identifier	NULL		4682112	0					
ANR	4682169	IfStatement	if ( buflen < ( unsigned int ) requested_bufsize )		4682112	7					
ANR	4682170	Condition	buflen < ( unsigned int ) requested_bufsize	513:6:12588:12627	4682112	0	True				
ANR	4682171	RelationalExpression	buflen < ( unsigned int ) requested_bufsize		4682112	0		<			
ANR	4682172	Identifier	buflen		4682112	0					
ANR	4682173	CastExpression	( unsigned int ) requested_bufsize		4682112	1					
ANR	4682174	CastTarget	unsigned int		4682112	0					
ANR	4682175	Identifier	requested_bufsize		4682112	1					
ANR	4682176	CompoundStatement		18:49:363:363	4682112	1					
ANR	4682177	IfStatement	if ( buf )		4682112	0					
ANR	4682178	Condition	buf	514:7:12640:12642	4682112	0	True				
ANR	4682179	Identifier	buf		4682112	0					
ANR	4682180	ExpressionStatement	free ( buf )	514:13:12646:12655	4682112	1	True				
ANR	4682181	CallExpression	free ( buf )		4682112	0					
ANR	4682182	Callee	free		4682112	0					
ANR	4682183	Identifier	free		4682112	0					
ANR	4682184	ArgumentList	buf		4682112	1					
ANR	4682185	Argument	buf		4682112	0					
ANR	4682186	Identifier	buf		4682112	0					
ANR	4682187	ExpressionStatement	buf = ( char * ) malloc ( requested_bufsize )	515:2:12659:12698	4682112	1	True				
ANR	4682188	AssignmentExpression	buf = ( char * ) malloc ( requested_bufsize )		4682112	0		=			
ANR	4682189	Identifier	buf		4682112	0					
ANR	4682190	CastExpression	( char * ) malloc ( requested_bufsize )		4682112	1					
ANR	4682191	CastTarget	char *		4682112	0					
ANR	4682192	CallExpression	malloc ( requested_bufsize )		4682112	1					
ANR	4682193	Callee	malloc		4682112	0					
ANR	4682194	Identifier	malloc		4682112	0					
ANR	4682195	ArgumentList	requested_bufsize		4682112	1					
ANR	4682196	Argument	requested_bufsize		4682112	0					
ANR	4682197	Identifier	requested_bufsize		4682112	0					
ANR	4682198	ExpressionStatement	buflen = requested_bufsize	516:2:12702:12728	4682112	2	True				
ANR	4682199	AssignmentExpression	buflen = requested_bufsize		4682112	0		=			
ANR	4682200	Identifier	buflen		4682112	0					
ANR	4682201	Identifier	requested_bufsize		4682112	1					
ANR	4682202	ExpressionStatement	buf [ 0 ] = '\\0'	518:1:12734:12747	4682112	8	True				
ANR	4682203	AssignmentExpression	buf [ 0 ] = '\\0'		4682112	0		=			
ANR	4682204	ArrayIndexing	buf [ 0 ]		4682112	0					
ANR	4682205	Identifier	buf		4682112	0					
ANR	4682206	PrimaryExpression	0		4682112	1					
ANR	4682207	PrimaryExpression	'\\0'		4682112	1					
ANR	4682208	ExpressionStatement	end_ptr = buf	519:1:12750:12763	4682112	9	True				
ANR	4682209	AssignmentExpression	end_ptr = buf		4682112	0		=			
ANR	4682210	Identifier	end_ptr		4682112	0					
ANR	4682211	Identifier	buf		4682112	1					
ANR	4682212	ExpressionStatement	line_ptr = buf	520:1:12766:12780	4682112	10	True				
ANR	4682213	AssignmentExpression	line_ptr = buf		4682112	0		=			
ANR	4682214	Identifier	line_ptr		4682112	0					
ANR	4682215	Identifier	buf		4682112	1					
ANR	4682216	ForStatement	for ( ; ; )		4682112	11					
ANR	4682217	CompoundStatement		77:2:1941:1961	4682112	0					
ANR	4682218	IdentifierDeclStatement	int len = buflen - ( end_ptr - buf ) ;	524:2:12868:12903	4682112	0	True				
ANR	4682219	IdentifierDecl	len = buflen - ( end_ptr - buf )		4682112	0					
ANR	4682220	IdentifierDeclType	int		4682112	0					
ANR	4682221	Identifier	len		4682112	1					
ANR	4682222	AssignmentExpression	len = buflen - ( end_ptr - buf )		4682112	2		=			
ANR	4682223	Identifier	len		4682112	0					
ANR	4682224	AdditiveExpression	buflen - ( end_ptr - buf )		4682112	1		-			
ANR	4682225	Identifier	buflen		4682112	0					
ANR	4682226	AdditiveExpression	end_ptr - buf		4682112	1		-			
ANR	4682227	Identifier	end_ptr		4682112	0					
ANR	4682228	Identifier	buf		4682112	1					
ANR	4682229	IfStatement	if ( len <= 5 )		4682112	1					
ANR	4682230	Condition	len <= 5	525:6:12911:12918	4682112	0	True				
ANR	4682231	RelationalExpression	len <= 5		4682112	0		<=			
ANR	4682232	Identifier	len		4682112	0					
ANR	4682233	PrimaryExpression	5		4682112	1					
ANR	4682234	CompoundStatement		32:3:715:765	4682112	1					
ANR	4682235	IdentifierDeclStatement	"char * newbuf = ( char * ) realloc ( buf , 4096 + buflen ) ;"	527:3:12983:13033	4682112	0	True				
ANR	4682236	IdentifierDecl	"* newbuf = ( char * ) realloc ( buf , 4096 + buflen )"		4682112	0					
ANR	4682237	IdentifierDeclType	char *		4682112	0					
ANR	4682238	Identifier	newbuf		4682112	1					
ANR	4682239	AssignmentExpression	"* newbuf = ( char * ) realloc ( buf , 4096 + buflen )"		4682112	2		=			
ANR	4682240	Identifier	newbuf		4682112	0					
ANR	4682241	CastExpression	"( char * ) realloc ( buf , 4096 + buflen )"		4682112	1					
ANR	4682242	CastTarget	char *		4682112	0					
ANR	4682243	CallExpression	"realloc ( buf , 4096 + buflen )"		4682112	1					
ANR	4682244	Callee	realloc		4682112	0					
ANR	4682245	Identifier	realloc		4682112	0					
ANR	4682246	ArgumentList	buf		4682112	1					
ANR	4682247	Argument	buf		4682112	0					
ANR	4682248	Identifier	buf		4682112	0					
ANR	4682249	Argument	4096 + buflen		4682112	1					
ANR	4682250	AdditiveExpression	4096 + buflen		4682112	0		+			
ANR	4682251	PrimaryExpression	4096		4682112	0					
ANR	4682252	Identifier	buflen		4682112	1					
ANR	4682253	IfStatement	if ( newbuf )		4682112	1					
ANR	4682254	Condition	newbuf	528:8:13043:13048	4682112	0	True				
ANR	4682255	Identifier	newbuf		4682112	0					
ANR	4682256	CompoundStatement		33:17:784:784	4682112	1					
ANR	4682257	ExpressionStatement	end_ptr = ( end_ptr - buf ) + newbuf	529:4:13058:13092	4682112	0	True				
ANR	4682258	AssignmentExpression	end_ptr = ( end_ptr - buf ) + newbuf		4682112	0		=			
ANR	4682259	Identifier	end_ptr		4682112	0					
ANR	4682260	AdditiveExpression	( end_ptr - buf ) + newbuf		4682112	1		+			
ANR	4682261	AdditiveExpression	end_ptr - buf		4682112	0		-			
ANR	4682262	Identifier	end_ptr		4682112	0					
ANR	4682263	Identifier	buf		4682112	1					
ANR	4682264	Identifier	newbuf		4682112	1					
ANR	4682265	ExpressionStatement	line_ptr = ( line_ptr - buf ) + newbuf	530:4:13098:13134	4682112	1	True				
ANR	4682266	AssignmentExpression	line_ptr = ( line_ptr - buf ) + newbuf		4682112	0		=			
ANR	4682267	Identifier	line_ptr		4682112	0					
ANR	4682268	AdditiveExpression	( line_ptr - buf ) + newbuf		4682112	1		+			
ANR	4682269	AdditiveExpression	line_ptr - buf		4682112	0		-			
ANR	4682270	Identifier	line_ptr		4682112	0					
ANR	4682271	Identifier	buf		4682112	1					
ANR	4682272	Identifier	newbuf		4682112	1					
ANR	4682273	ExpressionStatement	buf = newbuf	531:4:13140:13152	4682112	2	True				
ANR	4682274	AssignmentExpression	buf = newbuf		4682112	0		=			
ANR	4682275	Identifier	buf		4682112	0					
ANR	4682276	Identifier	newbuf		4682112	1					
ANR	4682277	ExpressionStatement	buflen += 4096	532:4:13205:13219	4682112	3	True				
ANR	4682278	AssignmentExpression	buflen += 4096		4682112	0		+=			
ANR	4682279	Identifier	buflen		4682112	0					
ANR	4682280	PrimaryExpression	4096		4682112	1					
ANR	4682281	ExpressionStatement	len += 4096	533:4:13225:13236	4682112	4	True				
ANR	4682282	AssignmentExpression	len += 4096		4682112	0		+=			
ANR	4682283	Identifier	len		4682112	0					
ANR	4682284	PrimaryExpression	4096		4682112	1					
ANR	4682285	ElseStatement	else		4682112	0					
ANR	4682286	CompoundStatement		39:10:980:980	4682112	0					
ANR	4682287	ExpressionStatement	"EXCEPT ( ""Out of memory - config file line too long"" )"	536:4:13303:13356	4682112	0	True				
ANR	4682288	CallExpression	"EXCEPT ( ""Out of memory - config file line too long"" )"		4682112	0					
ANR	4682289	Callee	EXCEPT		4682112	0					
ANR	4682290	Identifier	EXCEPT		4682112	0					
ANR	4682291	ArgumentList	"""Out of memory - config file line too long"""		4682112	1					
ANR	4682292	Argument	"""Out of memory - config file line too long"""		4682112	0					
ANR	4682293	PrimaryExpression	"""Out of memory - config file line too long"""		4682112	0					
ANR	4682294	IfStatement	"if ( fgets ( end_ptr , len , fp ) == NULL )"		4682112	2					
ANR	4682295	Condition	"fgets ( end_ptr , len , fp ) == NULL"	540:6:13374:13402	4682112	0	True				
ANR	4682296	EqualityExpression	"fgets ( end_ptr , len , fp ) == NULL"		4682112	0		==			
ANR	4682297	CallExpression	"fgets ( end_ptr , len , fp )"		4682112	0					
ANR	4682298	Callee	fgets		4682112	0					
ANR	4682299	Identifier	fgets		4682112	0					
ANR	4682300	ArgumentList	end_ptr		4682112	1					
ANR	4682301	Argument	end_ptr		4682112	0					
ANR	4682302	Identifier	end_ptr		4682112	0					
ANR	4682303	Argument	len		4682112	1					
ANR	4682304	Identifier	len		4682112	0					
ANR	4682305	Argument	fp		4682112	2					
ANR	4682306	Identifier	fp		4682112	0					
ANR	4682307	Identifier	NULL		4682112	1					
ANR	4682308	CompoundStatement		45:38:1138:1138	4682112	1					
ANR	4682309	IfStatement	if ( buf [ 0 ] == '\\0' )		4682112	0					
ANR	4682310	Condition	buf [ 0 ] == '\\0'	541:7:13415:13428	4682112	0	True				
ANR	4682311	EqualityExpression	buf [ 0 ] == '\\0'		4682112	0		==			
ANR	4682312	ArrayIndexing	buf [ 0 ]		4682112	0					
ANR	4682313	Identifier	buf		4682112	0					
ANR	4682314	PrimaryExpression	0		4682112	1					
ANR	4682315	PrimaryExpression	'\\0'		4682112	1					
ANR	4682316	CompoundStatement		46:24:1164:1164	4682112	1					
ANR	4682317	ReturnStatement	return NULL ;	542:4:13438:13449	4682112	0	True				
ANR	4682318	Identifier	NULL		4682112	0					
ANR	4682319	ElseStatement	else		4682112	0					
ANR	4682320	CompoundStatement		48:10:1193:1193	4682112	0					
ANR	4682321	ReturnStatement	return buf ;	544:4:13467:13477	4682112	0	True				
ANR	4682322	Identifier	buf		4682112	0					
ANR	4682323	IfStatement	if ( * end_ptr == '\\0' )		4682112	3					
ANR	4682324	Condition	* end_ptr == '\\0'	549:7:13569:13584	4682112	0	True				
ANR	4682325	EqualityExpression	* end_ptr == '\\0'		4682112	0		==			
ANR	4682326	UnaryOperationExpression	* end_ptr		4682112	0					
ANR	4682327	UnaryOperator	*		4682112	0					
ANR	4682328	Identifier	end_ptr		4682112	1					
ANR	4682329	PrimaryExpression	'\\0'		4682112	1					
ANR	4682330	CompoundStatement		54:26:1320:1320	4682112	1					
ANR	4682331	ContinueStatement	continue ;	550:3:13593:13601	4682112	0	True				
ANR	4682332	ExpressionStatement	end_ptr += strlen ( end_ptr )	553:2:13610:13636	4682112	4	True				
ANR	4682333	AssignmentExpression	end_ptr += strlen ( end_ptr )		4682112	0		+=			
ANR	4682334	Identifier	end_ptr		4682112	0					
ANR	4682335	CallExpression	strlen ( end_ptr )		4682112	1					
ANR	4682336	Callee	strlen		4682112	0					
ANR	4682337	Identifier	strlen		4682112	0					
ANR	4682338	ArgumentList	end_ptr		4682112	1					
ANR	4682339	Argument	end_ptr		4682112	0					
ANR	4682340	Identifier	end_ptr		4682112	0					
ANR	4682341	IfStatement	if ( end_ptr [ - 1 ] != '\\n' )		4682112	5					
ANR	4682342	Condition	end_ptr [ - 1 ] != '\\n'	554:6:13644:13662	4682112	0	True				
ANR	4682343	EqualityExpression	end_ptr [ - 1 ] != '\\n'		4682112	0		!=			
ANR	4682344	ArrayIndexing	end_ptr [ - 1 ]		4682112	0					
ANR	4682345	Identifier	end_ptr		4682112	0					
ANR	4682346	UnaryOperationExpression	- 1		4682112	1					
ANR	4682347	UnaryOperator	-		4682112	0					
ANR	4682348	PrimaryExpression	1		4682112	1					
ANR	4682349	PrimaryExpression	'\\n'		4682112	1					
ANR	4682350	CompoundStatement		59:28:1398:1398	4682112	1					
ANR	4682351	ContinueStatement	continue ;	558:3:13841:13849	4682112	0	True				
ANR	4682352	ExpressionStatement	ConfigLineNo ++	561:2:13905:13919	4682112	6	True				
ANR	4682353	PostIncDecOperationExpression	ConfigLineNo ++		4682112	0					
ANR	4682354	Identifier	ConfigLineNo		4682112	0					
ANR	4682355	IncDec	++		4682112	1					
ANR	4682356	WhileStatement	while ( end_ptr > line_ptr && isspace ( end_ptr [ - 1 ] ) )		4682112	7					
ANR	4682357	Condition	end_ptr > line_ptr && isspace ( end_ptr [ - 1 ] )	567:9:14077:14118	4682112	0	True				
ANR	4682358	AndExpression	end_ptr > line_ptr && isspace ( end_ptr [ - 1 ] )		4682112	0		&&			
ANR	4682359	RelationalExpression	end_ptr > line_ptr		4682112	0		>			
ANR	4682360	Identifier	end_ptr		4682112	0					
ANR	4682361	Identifier	line_ptr		4682112	1					
ANR	4682362	CallExpression	isspace ( end_ptr [ - 1 ] )		4682112	1					
ANR	4682363	Callee	isspace		4682112	0					
ANR	4682364	Identifier	isspace		4682112	0					
ANR	4682365	ArgumentList	end_ptr [ - 1 ]		4682112	1					
ANR	4682366	Argument	end_ptr [ - 1 ]		4682112	0					
ANR	4682367	ArrayIndexing	end_ptr [ - 1 ]		4682112	0					
ANR	4682368	Identifier	end_ptr		4682112	0					
ANR	4682369	UnaryOperationExpression	- 1		4682112	1					
ANR	4682370	UnaryOperator	-		4682112	0					
ANR	4682371	PrimaryExpression	1		4682112	1					
ANR	4682372	CompoundStatement		72:54:1854:1854	4682112	1					
ANR	4682373	ExpressionStatement	* ( -- end_ptr ) = '\\0'	568:3:14127:14146	4682112	0	True				
ANR	4682374	AssignmentExpression	* ( -- end_ptr ) = '\\0'		4682112	0		=			
ANR	4682375	UnaryOperationExpression	* ( -- end_ptr )		4682112	0					
ANR	4682376	UnaryOperator	*		4682112	0					
ANR	4682377	UnaryExpression	-- end_ptr		4682112	1					
ANR	4682378	IncDec	--		4682112	0					
ANR	4682379	Identifier	end_ptr		4682112	1					
ANR	4682380	PrimaryExpression	'\\0'		4682112	1					
ANR	4682381	IdentifierDeclStatement	char * ptr = line_ptr ;	572:2:14209:14229	4682112	8	True				
ANR	4682382	IdentifierDecl	* ptr = line_ptr		4682112	0					
ANR	4682383	IdentifierDeclType	char *		4682112	0					
ANR	4682384	Identifier	ptr		4682112	1					
ANR	4682385	AssignmentExpression	* ptr = line_ptr		4682112	2		=			
ANR	4682386	Identifier	line_ptr		4682112	0					
ANR	4682387	Identifier	line_ptr		4682112	1					
ANR	4682388	WhileStatement	while ( isspace ( * ptr ) )		4682112	9					
ANR	4682389	Condition	isspace ( * ptr )	573:9:14240:14252	4682112	0	True				
ANR	4682390	CallExpression	isspace ( * ptr )		4682112	0					
ANR	4682391	Callee	isspace		4682112	0					
ANR	4682392	Identifier	isspace		4682112	0					
ANR	4682393	ArgumentList	* ptr		4682112	1					
ANR	4682394	Argument	* ptr		4682112	0					
ANR	4682395	UnaryOperationExpression	* ptr		4682112	0					
ANR	4682396	UnaryOperator	*		4682112	0					
ANR	4682397	Identifier	ptr		4682112	1					
ANR	4682398	CompoundStatement		78:25:1988:1988	4682112	1					
ANR	4682399	ExpressionStatement	ptr ++	574:3:14261:14266	4682112	0	True				
ANR	4682400	PostIncDecOperationExpression	ptr ++		4682112	0					
ANR	4682401	Identifier	ptr		4682112	0					
ANR	4682402	IncDec	++		4682112	1					
ANR	4682403	IfStatement	if ( ptr != line_ptr )		4682112	10					
ANR	4682404	Condition	ptr != line_ptr	576:6:14278:14292	4682112	0	True				
ANR	4682405	EqualityExpression	ptr != line_ptr		4682112	0		!=			
ANR	4682406	Identifier	ptr		4682112	0					
ANR	4682407	Identifier	line_ptr		4682112	1					
ANR	4682408	CompoundStatement		81:24:2028:2028	4682112	1					
ANR	4682409	ExpressionStatement	"( void ) memmove ( line_ptr , ptr , end_ptr - ptr + 1 )"	577:3:14301:14346	4682112	0	True				
ANR	4682410	CastExpression	"( void ) memmove ( line_ptr , ptr , end_ptr - ptr + 1 )"		4682112	0					
ANR	4682411	CastTarget	void		4682112	0					
ANR	4682412	CallExpression	"memmove ( line_ptr , ptr , end_ptr - ptr + 1 )"		4682112	1					
ANR	4682413	Callee	memmove		4682112	0					
ANR	4682414	Identifier	memmove		4682112	0					
ANR	4682415	ArgumentList	line_ptr		4682112	1					
ANR	4682416	Argument	line_ptr		4682112	0					
ANR	4682417	Identifier	line_ptr		4682112	0					
ANR	4682418	Argument	ptr		4682112	1					
ANR	4682419	Identifier	ptr		4682112	0					
ANR	4682420	Argument	end_ptr - ptr + 1		4682112	2					
ANR	4682421	AdditiveExpression	end_ptr - ptr + 1		4682112	0		-			
ANR	4682422	Identifier	end_ptr		4682112	0					
ANR	4682423	AdditiveExpression	ptr + 1		4682112	1		+			
ANR	4682424	Identifier	ptr		4682112	0					
ANR	4682425	PrimaryExpression	1		4682112	1					
ANR	4682426	ExpressionStatement	end_ptr = ( end_ptr - ptr ) + line_ptr	578:3:14351:14387	4682112	1	True				
ANR	4682427	AssignmentExpression	end_ptr = ( end_ptr - ptr ) + line_ptr		4682112	0		=			
ANR	4682428	Identifier	end_ptr		4682112	0					
ANR	4682429	AdditiveExpression	( end_ptr - ptr ) + line_ptr		4682112	1		+			
ANR	4682430	AdditiveExpression	end_ptr - ptr		4682112	0		-			
ANR	4682431	Identifier	end_ptr		4682112	0					
ANR	4682432	Identifier	ptr		4682112	1					
ANR	4682433	Identifier	line_ptr		4682112	1					
ANR	4682434	IfStatement	if ( end_ptr > buf && end_ptr [ - 1 ] == '\\\\' )		4682112	11					
ANR	4682435	Condition	end_ptr > buf && end_ptr [ - 1 ] == '\\\\'	581:6:14400:14435	4682112	0	True				
ANR	4682436	AndExpression	end_ptr > buf && end_ptr [ - 1 ] == '\\\\'		4682112	0		&&			
ANR	4682437	RelationalExpression	end_ptr > buf		4682112	0		>			
ANR	4682438	Identifier	end_ptr		4682112	0					
ANR	4682439	Identifier	buf		4682112	1					
ANR	4682440	EqualityExpression	end_ptr [ - 1 ] == '\\\\'		4682112	1		==			
ANR	4682441	ArrayIndexing	end_ptr [ - 1 ]		4682112	0					
ANR	4682442	Identifier	end_ptr		4682112	0					
ANR	4682443	UnaryOperationExpression	- 1		4682112	1					
ANR	4682444	UnaryOperator	-		4682112	0					
ANR	4682445	PrimaryExpression	1		4682112	1					
ANR	4682446	PrimaryExpression	'\\\\'		4682112	1					
ANR	4682447	CompoundStatement		86:45:2171:2171	4682112	1					
ANR	4682448	ExpressionStatement	* ( -- end_ptr ) = '\\0'	583:3:14500:14519	4682112	0	True				
ANR	4682449	AssignmentExpression	* ( -- end_ptr ) = '\\0'		4682112	0		=			
ANR	4682450	UnaryOperationExpression	* ( -- end_ptr )		4682112	0					
ANR	4682451	UnaryOperator	*		4682112	0					
ANR	4682452	UnaryExpression	-- end_ptr		4682112	1					
ANR	4682453	IncDec	--		4682112	0					
ANR	4682454	Identifier	end_ptr		4682112	1					
ANR	4682455	PrimaryExpression	'\\0'		4682112	1					
ANR	4682456	ExpressionStatement	line_ptr = end_ptr	584:3:14524:14542	4682112	1	True				
ANR	4682457	AssignmentExpression	line_ptr = end_ptr		4682112	0		=			
ANR	4682458	Identifier	line_ptr		4682112	0					
ANR	4682459	Identifier	end_ptr		4682112	1					
ANR	4682460	ContinueStatement	continue ;	585:3:14547:14555	4682112	2	True				
ANR	4682461	ReturnStatement	return buf ;	587:2:14563:14573	4682112	12	True				
ANR	4682462	Identifier	buf		4682112	0					
ANR	4682463	ReturnType	static char *		4682112	1					
ANR	4682464	Identifier	getline_implementation		4682112	2					
ANR	4682465	ParameterList	"FILE * fp , int requested_bufsize"		4682112	3					
ANR	4682466	Parameter	FILE * fp	495:24:12233:12240	4682112	0	True				
ANR	4682467	ParameterType	FILE *		4682112	0					
ANR	4682468	Identifier	fp		4682112	1					
ANR	4682469	Parameter	int requested_bufsize	495:34:12243:12263	4682112	1	True				
ANR	4682470	ParameterType	int		4682112	0					
ANR	4682471	Identifier	requested_bufsize		4682112	1					
ANR	4682472	CFGEntryNode	ENTRY		4682112		True				
ANR	4682473	CFGExitNode	EXIT		4682112		True				
ANR	4682474	InfiniteForNode	true		4682112		True				
ANR	4682475	Symbol	malloc		4682112						
ANR	4682476	Symbol	* buf		4682112						
ANR	4682477	Symbol	NULL		4682112						
ANR	4682478	Symbol	newbuf		4682112						
ANR	4682479	Symbol	isspace		4682112						
ANR	4682480	Symbol	fp		4682112						
ANR	4682481	Symbol	requested_bufsize		4682112						
ANR	4682482	Symbol	realloc		4682112						
ANR	4682483	Symbol	* end_ptr		4682112						
ANR	4682484	Symbol	* ( -- end_ptr )		4682112						
ANR	4682485	Symbol	fgets		4682112						
ANR	4682486	Symbol	ptr		4682112						
ANR	4682487	Symbol	strlen		4682112						
ANR	4682488	Symbol	buf		4682112						
ANR	4682489	Symbol	end_ptr		4682112						
ANR	4682490	Symbol	len		4682112						
ANR	4682491	Symbol	ConfigLineNo		4682112						
ANR	4682492	Symbol	* ptr		4682112						
ANR	4682493	Symbol	buflen		4682112						
ANR	4682494	Symbol	feof		4682112						
ANR	4682495	Symbol	line_ptr		4682112						
ANR	4682496	Function	string_to_long	595:0:14712:15041							
ANR	4682497	FunctionDef	"string_to_long (const char * s , long * valuep)"		4682496	0					
ANR	4682498	CompoundStatement		597:0:14762:15041	4682496	0					
ANR	4682499	IfStatement	if ( ! s )		4682496	0					
ANR	4682500	Condition	! s	599:6:14810:14811	4682496	0	True				
ANR	4682501	UnaryOperationExpression	! s		4682496	0					
ANR	4682502	UnaryOperator	!		4682496	0					
ANR	4682503	Identifier	s		4682496	1					
ANR	4682504	CompoundStatement		3:11:52:52	4682496	1					
ANR	4682505	ReturnStatement	return - 1 ;	600:2:14819:14828	4682496	0	True				
ANR	4682506	UnaryOperationExpression	- 1		4682496	0					
ANR	4682507	UnaryOperator	-		4682496	0					
ANR	4682508	PrimaryExpression	1		4682496	1					
ANR	4682509	IdentifierDeclStatement	char * endp ;	604:1:14885:14895	4682496	1	True				
ANR	4682510	IdentifierDecl	* endp		4682496	0					
ANR	4682511	IdentifierDeclType	char *		4682496	0					
ANR	4682512	Identifier	endp		4682496	1					
ANR	4682513	IdentifierDeclStatement	"long value = strtol ( s , & endp , 10 ) ;"	605:1:14898:14933	4682496	2	True				
ANR	4682514	IdentifierDecl	"value = strtol ( s , & endp , 10 )"		4682496	0					
ANR	4682515	IdentifierDeclType	long		4682496	0					
ANR	4682516	Identifier	value		4682496	1					
ANR	4682517	AssignmentExpression	"value = strtol ( s , & endp , 10 )"		4682496	2		=			
ANR	4682518	Identifier	value		4682496	0					
ANR	4682519	CallExpression	"strtol ( s , & endp , 10 )"		4682496	1					
ANR	4682520	Callee	strtol		4682496	0					
ANR	4682521	Identifier	strtol		4682496	0					
ANR	4682522	ArgumentList	s		4682496	1					
ANR	4682523	Argument	s		4682496	0					
ANR	4682524	Identifier	s		4682496	0					
ANR	4682525	Argument	& endp		4682496	1					
ANR	4682526	UnaryOperationExpression	& endp		4682496	0					
ANR	4682527	UnaryOperator	&		4682496	0					
ANR	4682528	Identifier	endp		4682496	1					
ANR	4682529	Argument	10		4682496	2					
ANR	4682530	PrimaryExpression	10		4682496	0					
ANR	4682531	IfStatement	if ( ( const char * ) endp == s )		4682496	3					
ANR	4682532	Condition	( const char * ) endp == s	606:6:14941:14963	4682496	0	True				
ANR	4682533	EqualityExpression	( const char * ) endp == s		4682496	0		==			
ANR	4682534	CastExpression	( const char * ) endp		4682496	0					
ANR	4682535	CastTarget	const char *		4682496	0					
ANR	4682536	Identifier	endp		4682496	1					
ANR	4682537	Identifier	s		4682496	1					
ANR	4682538	CompoundStatement		10:32:204:204	4682496	1					
ANR	4682539	ReturnStatement	return - 2 ;	607:2:14971:14980	4682496	0	True				
ANR	4682540	UnaryOperationExpression	- 2		4682496	0					
ANR	4682541	UnaryOperator	-		4682496	0					
ANR	4682542	PrimaryExpression	2		4682496	1					
ANR	4682543	ExpressionStatement	* valuep = value	611:1:15013:15028	4682496	4	True				
ANR	4682544	AssignmentExpression	* valuep = value		4682496	0		=			
ANR	4682545	UnaryOperationExpression	* valuep		4682496	0					
ANR	4682546	UnaryOperator	*		4682496	0					
ANR	4682547	Identifier	valuep		4682496	1					
ANR	4682548	Identifier	value		4682496	1					
ANR	4682549	ReturnStatement	return 0 ;	612:1:15031:15039	4682496	5	True				
ANR	4682550	PrimaryExpression	0		4682496	0					
ANR	4682551	ReturnType	int		4682496	1					
ANR	4682552	Identifier	string_to_long		4682496	2					
ANR	4682553	ParameterList	"const char * s , long * valuep"		4682496	3					
ANR	4682554	Parameter	const char * s	596:16:14732:14744	4682496	0	True				
ANR	4682555	ParameterType	const char *		4682496	0					
ANR	4682556	Identifier	s		4682496	1					
ANR	4682557	Parameter	long * valuep	596:31:14747:14758	4682496	1	True				
ANR	4682558	ParameterType	long *		4682496	0					
ANR	4682559	Identifier	valuep		4682496	1					
ANR	4682560	CFGEntryNode	ENTRY		4682496		True				
ANR	4682561	CFGExitNode	EXIT		4682496		True				
ANR	4682562	Symbol	s		4682496						
ANR	4682563	Symbol	& endp		4682496						
ANR	4682564	Symbol	strtol		4682496						
ANR	4682565	Symbol	valuep		4682496						
ANR	4682566	Symbol	endp		4682496						
ANR	4682567	Symbol	* valuep		4682496						
ANR	4682568	Symbol	value		4682496						
ANR	4682569	Function	expand_macro	625:0:15540:19351							
ANR	4682570	FunctionDef	"expand_macro (const char * value , BUCKET * * table , int table_size , char * self , bool use_default_param_table)"		4682569	0					
ANR	4682571	CompoundStatement		631:0:15675:19351	4682569	0					
ANR	4682572	IdentifierDeclStatement	char * tmp = strdup ( value ) ;	632:1:15678:15705	4682569	0	True				
ANR	4682573	IdentifierDecl	* tmp = strdup ( value )		4682569	0					
ANR	4682574	IdentifierDeclType	char *		4682569	0					
ANR	4682575	Identifier	tmp		4682569	1					
ANR	4682576	AssignmentExpression	* tmp = strdup ( value )		4682569	2		=			
ANR	4682577	Identifier	tmp		4682569	0					
ANR	4682578	CallExpression	strdup ( value )		4682569	1					
ANR	4682579	Callee	strdup		4682569	0					
ANR	4682580	Identifier	strdup		4682569	0					
ANR	4682581	ArgumentList	value		4682569	1					
ANR	4682582	Argument	value		4682569	0					
ANR	4682583	Identifier	value		4682569	0					
ANR	4682584	IdentifierDeclStatement	"char * left , * name , * right ;"	633:1:15708:15733	4682569	1	True				
ANR	4682585	IdentifierDecl	* left		4682569	0					
ANR	4682586	IdentifierDeclType	char *		4682569	0					
ANR	4682587	Identifier	left		4682569	1					
ANR	4682588	IdentifierDecl	* name		4682569	1					
ANR	4682589	IdentifierDeclType	char *		4682569	0					
ANR	4682590	Identifier	name		4682569	1					
ANR	4682591	IdentifierDecl	* right		4682569	2					
ANR	4682592	IdentifierDeclType	char *		4682569	0					
ANR	4682593	Identifier	right		4682569	1					
ANR	4682594	IdentifierDeclStatement	const char * tvalue ;	634:1:15736:15754	4682569	2	True				
ANR	4682595	IdentifierDecl	* tvalue		4682569	0					
ANR	4682596	IdentifierDeclType	const char *		4682569	0					
ANR	4682597	Identifier	tvalue		4682569	1					
ANR	4682598	IdentifierDeclStatement	char * rval ;	635:1:15757:15767	4682569	3	True				
ANR	4682599	IdentifierDecl	* rval		4682569	0					
ANR	4682600	IdentifierDeclType	char *		4682569	0					
ANR	4682601	Identifier	rval		4682569	1					
ANR	4682602	IdentifierDeclStatement	bool all_done = false ;	637:1:15771:15792	4682569	4	True				
ANR	4682603	IdentifierDecl	all_done = false		4682569	0					
ANR	4682604	IdentifierDeclType	bool		4682569	0					
ANR	4682605	Identifier	all_done		4682569	1					
ANR	4682606	AssignmentExpression	all_done = false		4682569	2		=			
ANR	4682607	Identifier	false		4682569	0					
ANR	4682608	Identifier	false		4682569	1					
ANR	4682609	WhileStatement	while ( ! all_done )		4682569	5					
ANR	4682610	Condition	! all_done	638:8:15802:15810	4682569	0	True				
ANR	4682611	UnaryOperationExpression	! all_done		4682569	0					
ANR	4682612	UnaryOperator	!		4682569	0					
ANR	4682613	Identifier	all_done		4682569	1					
ANR	4682614	CompoundStatement		8:20:138:138	4682569	1					
ANR	4682615	ExpressionStatement	all_done = true	639:2:15852:15867	4682569	0	True				
ANR	4682616	AssignmentExpression	all_done = true		4682569	0		=			
ANR	4682617	Identifier	all_done		4682569	0					
ANR	4682618	Identifier	true		4682569	1					
ANR	4682619	IfStatement	"if ( ! self && find_special_config_macro ( ""$ENV"" , true , tmp , & left , & name , & right ) )"		4682569	1					
ANR	4682620	Condition	"! self && find_special_config_macro ( ""$ENV"" , true , tmp , & left , & name , & right )"	641:6:15876:15948	4682569	0	True				
ANR	4682621	AndExpression	"! self && find_special_config_macro ( ""$ENV"" , true , tmp , & left , & name , & right )"		4682569	0		&&			
ANR	4682622	UnaryOperationExpression	! self		4682569	0					
ANR	4682623	UnaryOperator	!		4682569	0					
ANR	4682624	Identifier	self		4682569	1					
ANR	4682625	CallExpression	"find_special_config_macro ( ""$ENV"" , true , tmp , & left , & name , & right )"		4682569	1					
ANR	4682626	Callee	find_special_config_macro		4682569	0					
ANR	4682627	Identifier	find_special_config_macro		4682569	0					
ANR	4682628	ArgumentList	"""$ENV"""		4682569	1					
ANR	4682629	Argument	"""$ENV"""		4682569	0					
ANR	4682630	PrimaryExpression	"""$ENV"""		4682569	0					
ANR	4682631	Argument	true		4682569	1					
ANR	4682632	Identifier	true		4682569	0					
ANR	4682633	Argument	tmp		4682569	2					
ANR	4682634	Identifier	tmp		4682569	0					
ANR	4682635	Argument	& left		4682569	3					
ANR	4682636	UnaryOperationExpression	& left		4682569	0					
ANR	4682637	UnaryOperator	&		4682569	0					
ANR	4682638	Identifier	left		4682569	1					
ANR	4682639	Argument	& name		4682569	4					
ANR	4682640	UnaryOperationExpression	& name		4682569	0					
ANR	4682641	UnaryOperator	&		4682569	0					
ANR	4682642	Identifier	name		4682569	1					
ANR	4682643	Argument	& right		4682569	5					
ANR	4682644	UnaryOperationExpression	& right		4682569	0					
ANR	4682645	UnaryOperator	&		4682569	0					
ANR	4682646	Identifier	right		4682569	1					
ANR	4682647	CompoundStatement		12:2:279:279	4682569	1					
ANR	4682648	ExpressionStatement	all_done = false	643:3:15960:15976	4682569	0	True				
ANR	4682649	AssignmentExpression	all_done = false		4682569	0		=			
ANR	4682650	Identifier	all_done		4682569	0					
ANR	4682651	Identifier	false		4682569	1					
ANR	4682652	ExpressionStatement	tvalue = getenv ( name )	644:3:15981:16002	4682569	1	True				
ANR	4682653	AssignmentExpression	tvalue = getenv ( name )		4682569	0		=			
ANR	4682654	Identifier	tvalue		4682569	0					
ANR	4682655	CallExpression	getenv ( name )		4682569	1					
ANR	4682656	Callee	getenv		4682569	0					
ANR	4682657	Identifier	getenv		4682569	0					
ANR	4682658	ArgumentList	name		4682569	1					
ANR	4682659	Argument	name		4682569	0					
ANR	4682660	Identifier	name		4682569	0					
ANR	4682661	IfStatement	if ( tvalue == NULL )		4682569	2					
ANR	4682662	Condition	tvalue == NULL	645:7:16011:16024	4682569	0	True				
ANR	4682663	EqualityExpression	tvalue == NULL		4682569	0		==			
ANR	4682664	Identifier	tvalue		4682569	0					
ANR	4682665	Identifier	NULL		4682569	1					
ANR	4682666	CompoundStatement		15:24:352:352	4682569	1					
ANR	4682667	ExpressionStatement	"EXCEPT ( ""Can't find %s in environment!"" , name )"	646:4:16034:16078	4682569	0	True				
ANR	4682668	CallExpression	"EXCEPT ( ""Can't find %s in environment!"" , name )"		4682569	0					
ANR	4682669	Callee	EXCEPT		4682569	0					
ANR	4682670	Identifier	EXCEPT		4682569	0					
ANR	4682671	ArgumentList	"""Can't find %s in environment!"""		4682569	1					
ANR	4682672	Argument	"""Can't find %s in environment!"""		4682569	0					
ANR	4682673	PrimaryExpression	"""Can't find %s in environment!"""		4682569	0					
ANR	4682674	Argument	name		4682569	1					
ANR	4682675	Identifier	name		4682569	0					
ANR	4682676	ExpressionStatement	rval = ( char * ) MALLOC ( ( unsigned ) ( strlen ( left ) + strlen ( tvalue ) + strlen ( right ) + 1 ) )	649:3:16089:16187	4682569	3	True				
ANR	4682677	AssignmentExpression	rval = ( char * ) MALLOC ( ( unsigned ) ( strlen ( left ) + strlen ( tvalue ) + strlen ( right ) + 1 ) )		4682569	0		=			
ANR	4682678	Identifier	rval		4682569	0					
ANR	4682679	CastExpression	( char * ) MALLOC ( ( unsigned ) ( strlen ( left ) + strlen ( tvalue ) + strlen ( right ) + 1 ) )		4682569	1					
ANR	4682680	CastTarget	char *		4682569	0					
ANR	4682681	CallExpression	MALLOC ( ( unsigned ) ( strlen ( left ) + strlen ( tvalue ) + strlen ( right ) + 1 ) )		4682569	1					
ANR	4682682	Callee	MALLOC		4682569	0					
ANR	4682683	Identifier	MALLOC		4682569	0					
ANR	4682684	ArgumentList	( unsigned ) ( strlen ( left ) + strlen ( tvalue ) + strlen ( right ) + 1 )		4682569	1					
ANR	4682685	Argument	( unsigned ) ( strlen ( left ) + strlen ( tvalue ) + strlen ( right ) + 1 )		4682569	0					
ANR	4682686	CastExpression	( unsigned ) ( strlen ( left ) + strlen ( tvalue ) + strlen ( right ) + 1 )		4682569	0					
ANR	4682687	CastTarget	unsigned		4682569	0					
ANR	4682688	AdditiveExpression	strlen ( left ) + strlen ( tvalue ) + strlen ( right ) + 1		4682569	1		+			
ANR	4682689	CallExpression	strlen ( left )		4682569	0					
ANR	4682690	Callee	strlen		4682569	0					
ANR	4682691	Identifier	strlen		4682569	0					
ANR	4682692	ArgumentList	left		4682569	1					
ANR	4682693	Argument	left		4682569	0					
ANR	4682694	Identifier	left		4682569	0					
ANR	4682695	AdditiveExpression	strlen ( tvalue ) + strlen ( right ) + 1		4682569	1		+			
ANR	4682696	CallExpression	strlen ( tvalue )		4682569	0					
ANR	4682697	Callee	strlen		4682569	0					
ANR	4682698	Identifier	strlen		4682569	0					
ANR	4682699	ArgumentList	tvalue		4682569	1					
ANR	4682700	Argument	tvalue		4682569	0					
ANR	4682701	Identifier	tvalue		4682569	0					
ANR	4682702	AdditiveExpression	strlen ( right ) + 1		4682569	1		+			
ANR	4682703	CallExpression	strlen ( right )		4682569	0					
ANR	4682704	Callee	strlen		4682569	0					
ANR	4682705	Identifier	strlen		4682569	0					
ANR	4682706	ArgumentList	right		4682569	1					
ANR	4682707	Argument	right		4682569	0					
ANR	4682708	Identifier	right		4682569	0					
ANR	4682709	PrimaryExpression	1		4682569	1					
ANR	4682710	ExpressionStatement	"( void ) sprintf ( rval , ""%s%s%s"" , left , tvalue , right )"	651:3:16192:16244	4682569	4	True				
ANR	4682711	CastExpression	"( void ) sprintf ( rval , ""%s%s%s"" , left , tvalue , right )"		4682569	0					
ANR	4682712	CastTarget	void		4682569	0					
ANR	4682713	CallExpression	"sprintf ( rval , ""%s%s%s"" , left , tvalue , right )"		4682569	1					
ANR	4682714	Callee	sprintf		4682569	0					
ANR	4682715	Identifier	sprintf		4682569	0					
ANR	4682716	ArgumentList	rval		4682569	1					
ANR	4682717	Argument	rval		4682569	0					
ANR	4682718	Identifier	rval		4682569	0					
ANR	4682719	Argument	"""%s%s%s"""		4682569	1					
ANR	4682720	PrimaryExpression	"""%s%s%s"""		4682569	0					
ANR	4682721	Argument	left		4682569	2					
ANR	4682722	Identifier	left		4682569	0					
ANR	4682723	Argument	tvalue		4682569	3					
ANR	4682724	Identifier	tvalue		4682569	0					
ANR	4682725	Argument	right		4682569	4					
ANR	4682726	Identifier	right		4682569	0					
ANR	4682727	ExpressionStatement	FREE ( tmp )	652:3:16249:16260	4682569	5	True				
ANR	4682728	CallExpression	FREE ( tmp )		4682569	0					
ANR	4682729	Callee	FREE		4682569	0					
ANR	4682730	Identifier	FREE		4682569	0					
ANR	4682731	ArgumentList	tmp		4682569	1					
ANR	4682732	Argument	tmp		4682569	0					
ANR	4682733	Identifier	tmp		4682569	0					
ANR	4682734	ExpressionStatement	tmp = rval	653:3:16265:16275	4682569	6	True				
ANR	4682735	AssignmentExpression	tmp = rval		4682569	0		=			
ANR	4682736	Identifier	tmp		4682569	0					
ANR	4682737	Identifier	rval		4682569	1					
ANR	4682738	IfStatement	"if ( ! self && find_special_config_macro ( ""$RANDOM_CHOICE"" , false , tmp , & left , & name , & right ) )"		4682569	2					
ANR	4682739	Condition	"! self && find_special_config_macro ( ""$RANDOM_CHOICE"" , false , tmp , & left , & name , & right )"	656:6:16288:16375	4682569	0	True				
ANR	4682740	AndExpression	"! self && find_special_config_macro ( ""$RANDOM_CHOICE"" , false , tmp , & left , & name , & right )"		4682569	0		&&			
ANR	4682741	UnaryOperationExpression	! self		4682569	0					
ANR	4682742	UnaryOperator	!		4682569	0					
ANR	4682743	Identifier	self		4682569	1					
ANR	4682744	CallExpression	"find_special_config_macro ( ""$RANDOM_CHOICE"" , false , tmp , & left , & name , & right )"		4682569	1					
ANR	4682745	Callee	find_special_config_macro		4682569	0					
ANR	4682746	Identifier	find_special_config_macro		4682569	0					
ANR	4682747	ArgumentList	"""$RANDOM_CHOICE"""		4682569	1					
ANR	4682748	Argument	"""$RANDOM_CHOICE"""		4682569	0					
ANR	4682749	PrimaryExpression	"""$RANDOM_CHOICE"""		4682569	0					
ANR	4682750	Argument	false		4682569	1					
ANR	4682751	Identifier	false		4682569	0					
ANR	4682752	Argument	tmp		4682569	2					
ANR	4682753	Identifier	tmp		4682569	0					
ANR	4682754	Argument	& left		4682569	3					
ANR	4682755	UnaryOperationExpression	& left		4682569	0					
ANR	4682756	UnaryOperator	&		4682569	0					
ANR	4682757	Identifier	left		4682569	1					
ANR	4682758	Argument	& name		4682569	4					
ANR	4682759	UnaryOperationExpression	& name		4682569	0					
ANR	4682760	UnaryOperator	&		4682569	0					
ANR	4682761	Identifier	name		4682569	1					
ANR	4682762	Argument	& right		4682569	5					
ANR	4682763	UnaryOperationExpression	& right		4682569	0					
ANR	4682764	UnaryOperator	&		4682569	0					
ANR	4682765	Identifier	right		4682569	1					
ANR	4682766	CompoundStatement		31:3:765:799	4682569	1					
ANR	4682767	ExpressionStatement	all_done = false	659:3:16387:16403	4682569	0	True				
ANR	4682768	AssignmentExpression	all_done = false		4682569	0		=			
ANR	4682769	Identifier	all_done		4682569	0					
ANR	4682770	Identifier	false		4682569	1					
ANR	4682771	IdentifierDeclStatement	"StringList entries ( name , "","" ) ;"	660:3:16408:16436	4682569	1	True				
ANR	4682772	IdentifierDecl	"entries ( name , "","" )"		4682569	0					
ANR	4682773	IdentifierDeclType	StringList		4682569	0					
ANR	4682774	Identifier	entries		4682569	1					
ANR	4682775	Expression	"name , "","""		4682569	2					
ANR	4682776	Identifier	name		4682569	0					
ANR	4682777	PrimaryExpression	""","""		4682569	1					
ANR	4682778	IdentifierDeclStatement	int num_entries = entries . number ( ) ;	661:3:16441:16475	4682569	2	True				
ANR	4682779	IdentifierDecl	num_entries = entries . number ( )		4682569	0					
ANR	4682780	IdentifierDeclType	int		4682569	0					
ANR	4682781	Identifier	num_entries		4682569	1					
ANR	4682782	AssignmentExpression	num_entries = entries . number ( )		4682569	2		=			
ANR	4682783	Identifier	num_entries		4682569	0					
ANR	4682784	CallExpression	entries . number ( )		4682569	1					
ANR	4682785	Callee	entries . number		4682569	0					
ANR	4682786	MemberAccess	entries . number		4682569	0					
ANR	4682787	Identifier	entries		4682569	0					
ANR	4682788	Identifier	number		4682569	1					
ANR	4682789	ArgumentList			4682569	1					
ANR	4682790	ExpressionStatement	tvalue = NULL	662:3:16480:16493	4682569	3	True				
ANR	4682791	AssignmentExpression	tvalue = NULL		4682569	0		=			
ANR	4682792	Identifier	tvalue		4682569	0					
ANR	4682793	Identifier	NULL		4682569	1					
ANR	4682794	IfStatement	if ( num_entries > 0 )		4682569	4					
ANR	4682795	Condition	num_entries > 0	663:8:16503:16517	4682569	0	True				
ANR	4682796	RelationalExpression	num_entries > 0		4682569	0		>			
ANR	4682797	Identifier	num_entries		4682569	0					
ANR	4682798	PrimaryExpression	0		4682569	1					
ANR	4682799	CompoundStatement		35:4:910:919	4682569	1					
ANR	4682800	IdentifierDeclStatement	int rand_entry = ( get_random_int ( ) % num_entries ) + 1 ;	664:4:16527:16580	4682569	0	True				
ANR	4682801	IdentifierDecl	rand_entry = ( get_random_int ( ) % num_entries ) + 1		4682569	0					
ANR	4682802	IdentifierDeclType	int		4682569	0					
ANR	4682803	Identifier	rand_entry		4682569	1					
ANR	4682804	AssignmentExpression	rand_entry = ( get_random_int ( ) % num_entries ) + 1		4682569	2		=			
ANR	4682805	Identifier	rand_entry		4682569	0					
ANR	4682806	AdditiveExpression	( get_random_int ( ) % num_entries ) + 1		4682569	1		+			
ANR	4682807	MultiplicativeExpression	get_random_int ( ) % num_entries		4682569	0		%			
ANR	4682808	CallExpression	get_random_int ( )		4682569	0					
ANR	4682809	Callee	get_random_int		4682569	0					
ANR	4682810	Identifier	get_random_int		4682569	0					
ANR	4682811	ArgumentList			4682569	1					
ANR	4682812	Identifier	num_entries		4682569	1					
ANR	4682813	PrimaryExpression	1		4682569	1					
ANR	4682814	IdentifierDeclStatement	int i = 0 ;	665:4:16586:16595	4682569	1	True				
ANR	4682815	IdentifierDecl	i = 0		4682569	0					
ANR	4682816	IdentifierDeclType	int		4682569	0					
ANR	4682817	Identifier	i		4682569	1					
ANR	4682818	AssignmentExpression	i = 0		4682569	2		=			
ANR	4682819	Identifier	i		4682569	0					
ANR	4682820	PrimaryExpression	0		4682569	1					
ANR	4682821	ExpressionStatement	entries . rewind ( )	666:4:16601:16617	4682569	2	True				
ANR	4682822	CallExpression	entries . rewind ( )		4682569	0					
ANR	4682823	Callee	entries . rewind		4682569	0					
ANR	4682824	MemberAccess	entries . rewind		4682569	0					
ANR	4682825	Identifier	entries		4682569	0					
ANR	4682826	Identifier	rewind		4682569	1					
ANR	4682827	ArgumentList			4682569	1					
ANR	4682828	WhileStatement	while ( ( i < rand_entry ) && ( tvalue = entries . next ( ) ) )		4682569	3					
ANR	4682829	Condition	( i < rand_entry ) && ( tvalue = entries . next ( ) )	667:12:16631:16673	4682569	0	True				
ANR	4682830	AndExpression	( i < rand_entry ) && ( tvalue = entries . next ( ) )		4682569	0		&&			
ANR	4682831	RelationalExpression	i < rand_entry		4682569	0		<			
ANR	4682832	Identifier	i		4682569	0					
ANR	4682833	Identifier	rand_entry		4682569	1					
ANR	4682834	AssignmentExpression	tvalue = entries . next ( )		4682569	1		=			
ANR	4682835	Identifier	tvalue		4682569	0					
ANR	4682836	CallExpression	entries . next ( )		4682569	1					
ANR	4682837	Callee	entries . next		4682569	0					
ANR	4682838	MemberAccess	entries . next		4682569	0					
ANR	4682839	Identifier	entries		4682569	0					
ANR	4682840	Identifier	next		4682569	1					
ANR	4682841	ArgumentList			4682569	1					
ANR	4682842	CompoundStatement		37:58:1001:1001	4682569	1					
ANR	4682843	ExpressionStatement	i ++	668:5:16684:16687	4682569	0	True				
ANR	4682844	PostIncDecOperationExpression	i ++		4682569	0					
ANR	4682845	Identifier	i		4682569	0					
ANR	4682846	IncDec	++		4682569	1					
ANR	4682847	IfStatement	if ( tvalue == NULL )		4682569	5					
ANR	4682848	Condition	tvalue == NULL	671:7:16707:16720	4682569	0	True				
ANR	4682849	EqualityExpression	tvalue == NULL		4682569	0		==			
ANR	4682850	Identifier	tvalue		4682569	0					
ANR	4682851	Identifier	NULL		4682569	1					
ANR	4682852	CompoundStatement		41:24:1048:1048	4682569	1					
ANR	4682853	ExpressionStatement	"EXCEPT ( ""$RANDOM_CHOICE() macro in config file empty!"" )"	672:4:16730:16785	4682569	0	True				
ANR	4682854	CallExpression	"EXCEPT ( ""$RANDOM_CHOICE() macro in config file empty!"" )"		4682569	0					
ANR	4682855	Callee	EXCEPT		4682569	0					
ANR	4682856	Identifier	EXCEPT		4682569	0					
ANR	4682857	ArgumentList	"""$RANDOM_CHOICE() macro in config file empty!"""		4682569	1					
ANR	4682858	Argument	"""$RANDOM_CHOICE() macro in config file empty!"""		4682569	0					
ANR	4682859	PrimaryExpression	"""$RANDOM_CHOICE() macro in config file empty!"""		4682569	0					
ANR	4682860	ExpressionStatement	rval = ( char * ) MALLOC ( ( unsigned ) ( strlen ( left ) + strlen ( tvalue ) + strlen ( right ) + 1 ) )	675:3:16796:16894	4682569	6	True				
ANR	4682861	AssignmentExpression	rval = ( char * ) MALLOC ( ( unsigned ) ( strlen ( left ) + strlen ( tvalue ) + strlen ( right ) + 1 ) )		4682569	0		=			
ANR	4682862	Identifier	rval		4682569	0					
ANR	4682863	CastExpression	( char * ) MALLOC ( ( unsigned ) ( strlen ( left ) + strlen ( tvalue ) + strlen ( right ) + 1 ) )		4682569	1					
ANR	4682864	CastTarget	char *		4682569	0					
ANR	4682865	CallExpression	MALLOC ( ( unsigned ) ( strlen ( left ) + strlen ( tvalue ) + strlen ( right ) + 1 ) )		4682569	1					
ANR	4682866	Callee	MALLOC		4682569	0					
ANR	4682867	Identifier	MALLOC		4682569	0					
ANR	4682868	ArgumentList	( unsigned ) ( strlen ( left ) + strlen ( tvalue ) + strlen ( right ) + 1 )		4682569	1					
ANR	4682869	Argument	( unsigned ) ( strlen ( left ) + strlen ( tvalue ) + strlen ( right ) + 1 )		4682569	0					
ANR	4682870	CastExpression	( unsigned ) ( strlen ( left ) + strlen ( tvalue ) + strlen ( right ) + 1 )		4682569	0					
ANR	4682871	CastTarget	unsigned		4682569	0					
ANR	4682872	AdditiveExpression	strlen ( left ) + strlen ( tvalue ) + strlen ( right ) + 1		4682569	1		+			
ANR	4682873	CallExpression	strlen ( left )		4682569	0					
ANR	4682874	Callee	strlen		4682569	0					
ANR	4682875	Identifier	strlen		4682569	0					
ANR	4682876	ArgumentList	left		4682569	1					
ANR	4682877	Argument	left		4682569	0					
ANR	4682878	Identifier	left		4682569	0					
ANR	4682879	AdditiveExpression	strlen ( tvalue ) + strlen ( right ) + 1		4682569	1		+			
ANR	4682880	CallExpression	strlen ( tvalue )		4682569	0					
ANR	4682881	Callee	strlen		4682569	0					
ANR	4682882	Identifier	strlen		4682569	0					
ANR	4682883	ArgumentList	tvalue		4682569	1					
ANR	4682884	Argument	tvalue		4682569	0					
ANR	4682885	Identifier	tvalue		4682569	0					
ANR	4682886	AdditiveExpression	strlen ( right ) + 1		4682569	1		+			
ANR	4682887	CallExpression	strlen ( right )		4682569	0					
ANR	4682888	Callee	strlen		4682569	0					
ANR	4682889	Identifier	strlen		4682569	0					
ANR	4682890	ArgumentList	right		4682569	1					
ANR	4682891	Argument	right		4682569	0					
ANR	4682892	Identifier	right		4682569	0					
ANR	4682893	PrimaryExpression	1		4682569	1					
ANR	4682894	ExpressionStatement	"( void ) sprintf ( rval , ""%s%s%s"" , left , tvalue , right )"	677:3:16899:16951	4682569	7	True				
ANR	4682895	CastExpression	"( void ) sprintf ( rval , ""%s%s%s"" , left , tvalue , right )"		4682569	0					
ANR	4682896	CastTarget	void		4682569	0					
ANR	4682897	CallExpression	"sprintf ( rval , ""%s%s%s"" , left , tvalue , right )"		4682569	1					
ANR	4682898	Callee	sprintf		4682569	0					
ANR	4682899	Identifier	sprintf		4682569	0					
ANR	4682900	ArgumentList	rval		4682569	1					
ANR	4682901	Argument	rval		4682569	0					
ANR	4682902	Identifier	rval		4682569	0					
ANR	4682903	Argument	"""%s%s%s"""		4682569	1					
ANR	4682904	PrimaryExpression	"""%s%s%s"""		4682569	0					
ANR	4682905	Argument	left		4682569	2					
ANR	4682906	Identifier	left		4682569	0					
ANR	4682907	Argument	tvalue		4682569	3					
ANR	4682908	Identifier	tvalue		4682569	0					
ANR	4682909	Argument	right		4682569	4					
ANR	4682910	Identifier	right		4682569	0					
ANR	4682911	ExpressionStatement	FREE ( tmp )	678:3:16956:16967	4682569	8	True				
ANR	4682912	CallExpression	FREE ( tmp )		4682569	0					
ANR	4682913	Callee	FREE		4682569	0					
ANR	4682914	Identifier	FREE		4682569	0					
ANR	4682915	ArgumentList	tmp		4682569	1					
ANR	4682916	Argument	tmp		4682569	0					
ANR	4682917	Identifier	tmp		4682569	0					
ANR	4682918	ExpressionStatement	tmp = rval	679:3:16972:16982	4682569	9	True				
ANR	4682919	AssignmentExpression	tmp = rval		4682569	0		=			
ANR	4682920	Identifier	tmp		4682569	0					
ANR	4682921	Identifier	rval		4682569	1					
ANR	4682922	IfStatement	"if ( ! self && find_special_config_macro ( ""$RANDOM_INTEGER"" , false , tmp , & left , & name , & right ) )"		4682569	3					
ANR	4682923	Condition	"! self && find_special_config_macro ( ""$RANDOM_INTEGER"" , false , tmp , & left , & name , & right )"	682:6:16995:17083	4682569	0	True				
ANR	4682924	AndExpression	"! self && find_special_config_macro ( ""$RANDOM_INTEGER"" , false , tmp , & left , & name , & right )"		4682569	0		&&			
ANR	4682925	UnaryOperationExpression	! self		4682569	0					
ANR	4682926	UnaryOperator	!		4682569	0					
ANR	4682927	Identifier	self		4682569	1					
ANR	4682928	CallExpression	"find_special_config_macro ( ""$RANDOM_INTEGER"" , false , tmp , & left , & name , & right )"		4682569	1					
ANR	4682929	Callee	find_special_config_macro		4682569	0					
ANR	4682930	Identifier	find_special_config_macro		4682569	0					
ANR	4682931	ArgumentList	"""$RANDOM_INTEGER"""		4682569	1					
ANR	4682932	Argument	"""$RANDOM_INTEGER"""		4682569	0					
ANR	4682933	PrimaryExpression	"""$RANDOM_INTEGER"""		4682569	0					
ANR	4682934	Argument	false		4682569	1					
ANR	4682935	Identifier	false		4682569	0					
ANR	4682936	Argument	tmp		4682569	2					
ANR	4682937	Identifier	tmp		4682569	0					
ANR	4682938	Argument	& left		4682569	3					
ANR	4682939	UnaryOperationExpression	& left		4682569	0					
ANR	4682940	UnaryOperator	&		4682569	0					
ANR	4682941	Identifier	left		4682569	1					
ANR	4682942	Argument	& name		4682569	4					
ANR	4682943	UnaryOperationExpression	& name		4682569	0					
ANR	4682944	UnaryOperator	&		4682569	0					
ANR	4682945	Identifier	name		4682569	1					
ANR	4682946	Argument	& right		4682569	5					
ANR	4682947	UnaryOperationExpression	& right		4682569	0					
ANR	4682948	UnaryOperator	&		4682569	0					
ANR	4682949	Identifier	right		4682569	1					
ANR	4682950	CompoundStatement		93:3:2413:2426	4682569	1					
ANR	4682951	ExpressionStatement	all_done = false	685:3:17095:17111	4682569	0	True				
ANR	4682952	AssignmentExpression	all_done = false		4682569	0		=			
ANR	4682953	Identifier	all_done		4682569	0					
ANR	4682954	Identifier	false		4682569	1					
ANR	4682955	IdentifierDeclStatement	"StringList entries ( name , "","" ) ;"	686:3:17116:17145	4682569	1	True				
ANR	4682956	IdentifierDecl	"entries ( name , "","" )"		4682569	0					
ANR	4682957	IdentifierDeclType	StringList		4682569	0					
ANR	4682958	Identifier	entries		4682569	1					
ANR	4682959	Expression	"name , "","""		4682569	2					
ANR	4682960	Identifier	name		4682569	0					
ANR	4682961	PrimaryExpression	""","""		4682569	1					
ANR	4682962	ExpressionStatement	entries . rewind ( )	688:3:17151:17167	4682569	2	True				
ANR	4682963	CallExpression	entries . rewind ( )		4682569	0					
ANR	4682964	Callee	entries . rewind		4682569	0					
ANR	4682965	MemberAccess	entries . rewind		4682569	0					
ANR	4682966	Identifier	entries		4682569	0					
ANR	4682967	Identifier	rewind		4682569	1					
ANR	4682968	ArgumentList			4682569	1					
ANR	4682969	IdentifierDeclStatement	const char * tmp2 ;	689:3:17172:17188	4682569	3	True				
ANR	4682970	IdentifierDecl	* tmp2		4682569	0					
ANR	4682971	IdentifierDeclType	const char *		4682569	0					
ANR	4682972	Identifier	tmp2		4682569	1					
ANR	4682973	ExpressionStatement	tmp2 = entries . next ( )	691:3:17194:17215	4682569	4	True				
ANR	4682974	AssignmentExpression	tmp2 = entries . next ( )		4682569	0		=			
ANR	4682975	Identifier	tmp2		4682569	0					
ANR	4682976	CallExpression	entries . next ( )		4682569	1					
ANR	4682977	Callee	entries . next		4682569	0					
ANR	4682978	MemberAccess	entries . next		4682569	0					
ANR	4682979	Identifier	entries		4682569	0					
ANR	4682980	Identifier	next		4682569	1					
ANR	4682981	ArgumentList			4682569	1					
ANR	4682982	IdentifierDeclStatement	long min_value = 0 ;	692:3:17220:17236	4682569	5	True				
ANR	4682983	IdentifierDecl	min_value = 0		4682569	0					
ANR	4682984	IdentifierDeclType	long		4682569	0					
ANR	4682985	Identifier	min_value		4682569	1					
ANR	4682986	AssignmentExpression	min_value = 0		4682569	2		=			
ANR	4682987	Identifier	min_value		4682569	0					
ANR	4682988	PrimaryExpression	0		4682569	1					
ANR	4682989	IfStatement	"if ( string_to_long ( tmp2 , & min_value ) < 0 )"		4682569	6					
ANR	4682990	Condition	"string_to_long ( tmp2 , & min_value ) < 0"	693:8:17246:17283	4682569	0	True				
ANR	4682991	RelationalExpression	"string_to_long ( tmp2 , & min_value ) < 0"		4682569	0		<			
ANR	4682992	CallExpression	"string_to_long ( tmp2 , & min_value )"		4682569	0					
ANR	4682993	Callee	string_to_long		4682569	0					
ANR	4682994	Identifier	string_to_long		4682569	0					
ANR	4682995	ArgumentList	tmp2		4682569	1					
ANR	4682996	Argument	tmp2		4682569	0					
ANR	4682997	Identifier	tmp2		4682569	0					
ANR	4682998	Argument	& min_value		4682569	1					
ANR	4682999	UnaryOperationExpression	& min_value		4682569	0					
ANR	4683000	UnaryOperator	&		4682569	0					
ANR	4683001	Identifier	min_value		4682569	1					
ANR	4683002	PrimaryExpression	0		4682569	1					
ANR	4683003	CompoundStatement		63:49:1611:1611	4682569	1					
ANR	4683004	ExpressionStatement	"EXCEPT ( ""$RANDOM_INTEGER() config macro: invalid min!"" )"	694:4:17293:17349	4682569	0	True				
ANR	4683005	CallExpression	"EXCEPT ( ""$RANDOM_INTEGER() config macro: invalid min!"" )"		4682569	0					
ANR	4683006	Callee	EXCEPT		4682569	0					
ANR	4683007	Identifier	EXCEPT		4682569	0					
ANR	4683008	ArgumentList	"""$RANDOM_INTEGER() config macro: invalid min!"""		4682569	1					
ANR	4683009	Argument	"""$RANDOM_INTEGER() config macro: invalid min!"""		4682569	0					
ANR	4683010	PrimaryExpression	"""$RANDOM_INTEGER() config macro: invalid min!"""		4682569	0					
ANR	4683011	ExpressionStatement	tmp2 = entries . next ( )	697:3:17360:17381	4682569	7	True				
ANR	4683012	AssignmentExpression	tmp2 = entries . next ( )		4682569	0		=			
ANR	4683013	Identifier	tmp2		4682569	0					
ANR	4683014	CallExpression	entries . next ( )		4682569	1					
ANR	4683015	Callee	entries . next		4682569	0					
ANR	4683016	MemberAccess	entries . next		4682569	0					
ANR	4683017	Identifier	entries		4682569	0					
ANR	4683018	Identifier	next		4682569	1					
ANR	4683019	ArgumentList			4682569	1					
ANR	4683020	IdentifierDeclStatement	long max_value = 0 ;	698:3:17386:17402	4682569	8	True				
ANR	4683021	IdentifierDecl	max_value = 0		4682569	0					
ANR	4683022	IdentifierDeclType	long		4682569	0					
ANR	4683023	Identifier	max_value		4682569	1					
ANR	4683024	AssignmentExpression	max_value = 0		4682569	2		=			
ANR	4683025	Identifier	max_value		4682569	0					
ANR	4683026	PrimaryExpression	0		4682569	1					
ANR	4683027	IfStatement	"if ( string_to_long ( tmp2 , & max_value ) < 0 )"		4682569	9					
ANR	4683028	Condition	"string_to_long ( tmp2 , & max_value ) < 0"	699:8:17412:17449	4682569	0	True				
ANR	4683029	RelationalExpression	"string_to_long ( tmp2 , & max_value ) < 0"		4682569	0		<			
ANR	4683030	CallExpression	"string_to_long ( tmp2 , & max_value )"		4682569	0					
ANR	4683031	Callee	string_to_long		4682569	0					
ANR	4683032	Identifier	string_to_long		4682569	0					
ANR	4683033	ArgumentList	tmp2		4682569	1					
ANR	4683034	Argument	tmp2		4682569	0					
ANR	4683035	Identifier	tmp2		4682569	0					
ANR	4683036	Argument	& max_value		4682569	1					
ANR	4683037	UnaryOperationExpression	& max_value		4682569	0					
ANR	4683038	UnaryOperator	&		4682569	0					
ANR	4683039	Identifier	max_value		4682569	1					
ANR	4683040	PrimaryExpression	0		4682569	1					
ANR	4683041	CompoundStatement		69:49:1777:1777	4682569	1					
ANR	4683042	ExpressionStatement	"EXCEPT ( ""$RANDOM_INTEGER() config macro: invalid max!"" )"	700:4:17459:17515	4682569	0	True				
ANR	4683043	CallExpression	"EXCEPT ( ""$RANDOM_INTEGER() config macro: invalid max!"" )"		4682569	0					
ANR	4683044	Callee	EXCEPT		4682569	0					
ANR	4683045	Identifier	EXCEPT		4682569	0					
ANR	4683046	ArgumentList	"""$RANDOM_INTEGER() config macro: invalid max!"""		4682569	1					
ANR	4683047	Argument	"""$RANDOM_INTEGER() config macro: invalid max!"""		4682569	0					
ANR	4683048	PrimaryExpression	"""$RANDOM_INTEGER() config macro: invalid max!"""		4682569	0					
ANR	4683049	ExpressionStatement	tmp2 = entries . next ( )	703:3:17526:17547	4682569	10	True				
ANR	4683050	AssignmentExpression	tmp2 = entries . next ( )		4682569	0		=			
ANR	4683051	Identifier	tmp2		4682569	0					
ANR	4683052	CallExpression	entries . next ( )		4682569	1					
ANR	4683053	Callee	entries . next		4682569	0					
ANR	4683054	MemberAccess	entries . next		4682569	0					
ANR	4683055	Identifier	entries		4682569	0					
ANR	4683056	Identifier	next		4682569	1					
ANR	4683057	ArgumentList			4682569	1					
ANR	4683058	IdentifierDeclStatement	long step = 1 ;	704:3:17552:17565	4682569	11	True				
ANR	4683059	IdentifierDecl	step = 1		4682569	0					
ANR	4683060	IdentifierDeclType	long		4682569	0					
ANR	4683061	Identifier	step		4682569	1					
ANR	4683062	AssignmentExpression	step = 1		4682569	2		=			
ANR	4683063	Identifier	step		4682569	0					
ANR	4683064	PrimaryExpression	1		4682569	1					
ANR	4683065	IfStatement	"if ( string_to_long ( tmp2 , & step ) < - 1 )"		4682569	12					
ANR	4683066	Condition	"string_to_long ( tmp2 , & step ) < - 1"	705:8:17575:17608	4682569	0	True				
ANR	4683067	RelationalExpression	"string_to_long ( tmp2 , & step ) < - 1"		4682569	0		<			
ANR	4683068	CallExpression	"string_to_long ( tmp2 , & step )"		4682569	0					
ANR	4683069	Callee	string_to_long		4682569	0					
ANR	4683070	Identifier	string_to_long		4682569	0					
ANR	4683071	ArgumentList	tmp2		4682569	1					
ANR	4683072	Argument	tmp2		4682569	0					
ANR	4683073	Identifier	tmp2		4682569	0					
ANR	4683074	Argument	& step		4682569	1					
ANR	4683075	UnaryOperationExpression	& step		4682569	0					
ANR	4683076	UnaryOperator	&		4682569	0					
ANR	4683077	Identifier	step		4682569	1					
ANR	4683078	UnaryOperationExpression	- 1		4682569	1					
ANR	4683079	UnaryOperator	-		4682569	0					
ANR	4683080	PrimaryExpression	1		4682569	1					
ANR	4683081	CompoundStatement		75:45:1936:1936	4682569	1					
ANR	4683082	ExpressionStatement	"EXCEPT ( ""$RANDOM_INTEGER() config macro: invalid step!"" )"	706:4:17618:17675	4682569	0	True				
ANR	4683083	CallExpression	"EXCEPT ( ""$RANDOM_INTEGER() config macro: invalid step!"" )"		4682569	0					
ANR	4683084	Callee	EXCEPT		4682569	0					
ANR	4683085	Identifier	EXCEPT		4682569	0					
ANR	4683086	ArgumentList	"""$RANDOM_INTEGER() config macro: invalid step!"""		4682569	1					
ANR	4683087	Argument	"""$RANDOM_INTEGER() config macro: invalid step!"""		4682569	0					
ANR	4683088	PrimaryExpression	"""$RANDOM_INTEGER() config macro: invalid step!"""		4682569	0					
ANR	4683089	IfStatement	if ( step < 1 )		4682569	13					
ANR	4683090	Condition	step < 1	709:8:17691:17698	4682569	0	True				
ANR	4683091	RelationalExpression	step < 1		4682569	0		<			
ANR	4683092	Identifier	step		4682569	0					
ANR	4683093	PrimaryExpression	1		4682569	1					
ANR	4683094	CompoundStatement		79:19:2026:2026	4682569	1					
ANR	4683095	ExpressionStatement	"EXCEPT ( ""$RANDOM_INTEGER() config macro: invalid step!"" )"	710:4:17708:17765	4682569	0	True				
ANR	4683096	CallExpression	"EXCEPT ( ""$RANDOM_INTEGER() config macro: invalid step!"" )"		4682569	0					
ANR	4683097	Callee	EXCEPT		4682569	0					
ANR	4683098	Identifier	EXCEPT		4682569	0					
ANR	4683099	ArgumentList	"""$RANDOM_INTEGER() config macro: invalid step!"""		4682569	1					
ANR	4683100	Argument	"""$RANDOM_INTEGER() config macro: invalid step!"""		4682569	0					
ANR	4683101	PrimaryExpression	"""$RANDOM_INTEGER() config macro: invalid step!"""		4682569	0					
ANR	4683102	IfStatement	if ( min_value > max_value )		4682569	14					
ANR	4683103	Condition	min_value > max_value	712:8:17780:17800	4682569	0	True				
ANR	4683104	RelationalExpression	min_value > max_value		4682569	0		>			
ANR	4683105	Identifier	min_value		4682569	0					
ANR	4683106	Identifier	max_value		4682569	1					
ANR	4683107	CompoundStatement		82:32:2128:2128	4682569	1					
ANR	4683108	ExpressionStatement	"EXCEPT ( ""$RANDOM_INTEGER() config macro: min > max!"" )"	713:4:17810:17864	4682569	0	True				
ANR	4683109	CallExpression	"EXCEPT ( ""$RANDOM_INTEGER() config macro: min > max!"" )"		4682569	0					
ANR	4683110	Callee	EXCEPT		4682569	0					
ANR	4683111	Identifier	EXCEPT		4682569	0					
ANR	4683112	ArgumentList	"""$RANDOM_INTEGER() config macro: min > max!"""		4682569	1					
ANR	4683113	Argument	"""$RANDOM_INTEGER() config macro: min > max!"""		4682569	0					
ANR	4683114	PrimaryExpression	"""$RANDOM_INTEGER() config macro: min > max!"""		4682569	0					
ANR	4683115	IdentifierDeclStatement	long range = step + max_value - min_value ;	717:3:17907:17948	4682569	15	True				
ANR	4683116	IdentifierDecl	range = step + max_value - min_value		4682569	0					
ANR	4683117	IdentifierDeclType	long		4682569	0					
ANR	4683118	Identifier	range		4682569	1					
ANR	4683119	AssignmentExpression	range = step + max_value - min_value		4682569	2		=			
ANR	4683120	Identifier	range		4682569	0					
ANR	4683121	AdditiveExpression	step + max_value - min_value		4682569	1		+			
ANR	4683122	Identifier	step		4682569	0					
ANR	4683123	AdditiveExpression	max_value - min_value		4682569	1		-			
ANR	4683124	Identifier	max_value		4682569	0					
ANR	4683125	Identifier	min_value		4682569	1					
ANR	4683126	IdentifierDeclStatement	long num = range / step ;	718:3:17953:17977	4682569	16	True				
ANR	4683127	IdentifierDecl	num = range / step		4682569	0					
ANR	4683128	IdentifierDeclType	long		4682569	0					
ANR	4683129	Identifier	num		4682569	1					
ANR	4683130	AssignmentExpression	num = range / step		4682569	2		=			
ANR	4683131	Identifier	num		4682569	0					
ANR	4683132	MultiplicativeExpression	range / step		4682569	1		/			
ANR	4683133	Identifier	range		4682569	0					
ANR	4683134	Identifier	step		4682569	1					
ANR	4683135	IdentifierDeclStatement	long random_value = min_value + ( get_random_int ( ) % num ) * step ;	719:3:17982:18049	4682569	17	True				
ANR	4683136	IdentifierDecl	random_value = min_value + ( get_random_int ( ) % num ) * step		4682569	0					
ANR	4683137	IdentifierDeclType	long		4682569	0					
ANR	4683138	Identifier	random_value		4682569	1					
ANR	4683139	AssignmentExpression	random_value = min_value + ( get_random_int ( ) % num ) * step		4682569	2		=			
ANR	4683140	Identifier	random_value		4682569	0					
ANR	4683141	AdditiveExpression	min_value + ( get_random_int ( ) % num ) * step		4682569	1		+			
ANR	4683142	Identifier	min_value		4682569	0					
ANR	4683143	MultiplicativeExpression	( get_random_int ( ) % num ) * step		4682569	1		*			
ANR	4683144	MultiplicativeExpression	get_random_int ( ) % num		4682569	0		%			
ANR	4683145	CallExpression	get_random_int ( )		4682569	0					
ANR	4683146	Callee	get_random_int		4682569	0					
ANR	4683147	Identifier	get_random_int		4682569	0					
ANR	4683148	ArgumentList			4682569	1					
ANR	4683149	Identifier	num		4682569	1					
ANR	4683150	Identifier	step		4682569	1					
ANR	4683151	IdentifierDeclStatement	char buf [ 128 ] ;	723:3:18089:18102	4682569	18	True				
ANR	4683152	IdentifierDecl	buf [ 128 ]		4682569	0					
ANR	4683153	IdentifierDeclType	char [ 128 ]		4682569	0					
ANR	4683154	Identifier	buf		4682569	1					
ANR	4683155	PrimaryExpression	128		4682569	2					
ANR	4683156	ExpressionStatement	"snprintf ( buf , sizeof ( buf ) - 1 , ""%ld"" , random_value )"	724:3:18107:18158	4682569	19	True				
ANR	4683157	CallExpression	"snprintf ( buf , sizeof ( buf ) - 1 , ""%ld"" , random_value )"		4682569	0					
ANR	4683158	Callee	snprintf		4682569	0					
ANR	4683159	Identifier	snprintf		4682569	0					
ANR	4683160	ArgumentList	buf		4682569	1					
ANR	4683161	Argument	buf		4682569	0					
ANR	4683162	Identifier	buf		4682569	0					
ANR	4683163	Argument	sizeof ( buf ) - 1		4682569	1					
ANR	4683164	AdditiveExpression	sizeof ( buf ) - 1		4682569	0		-			
ANR	4683165	SizeofExpression	sizeof ( buf )		4682569	0					
ANR	4683166	Sizeof	sizeof		4682569	0					
ANR	4683167	SizeofOperand	buf		4682569	1					
ANR	4683168	PrimaryExpression	1		4682569	1					
ANR	4683169	Argument	"""%ld"""		4682569	2					
ANR	4683170	PrimaryExpression	"""%ld"""		4682569	0					
ANR	4683171	Argument	random_value		4682569	3					
ANR	4683172	Identifier	random_value		4682569	0					
ANR	4683173	ExpressionStatement	buf [ sizeof ( buf ) - 1 ] = '\\0'	725:3:18163:18188	4682569	20	True				
ANR	4683174	AssignmentExpression	buf [ sizeof ( buf ) - 1 ] = '\\0'		4682569	0		=			
ANR	4683175	ArrayIndexing	buf [ sizeof ( buf ) - 1 ]		4682569	0					
ANR	4683176	Identifier	buf		4682569	0					
ANR	4683177	AdditiveExpression	sizeof ( buf ) - 1		4682569	1		-			
ANR	4683178	SizeofExpression	sizeof ( buf )		4682569	0					
ANR	4683179	Sizeof	sizeof		4682569	0					
ANR	4683180	SizeofOperand	buf		4682569	1					
ANR	4683181	PrimaryExpression	1		4682569	1					
ANR	4683182	PrimaryExpression	'\\0'		4682569	1					
ANR	4683183	ExpressionStatement	rval = ( char * ) MALLOC ( ( unsigned ) ( strlen ( left ) + strlen ( buf ) + strlen ( right ) + 1 ) )	726:3:18193:18288	4682569	21	True				
ANR	4683184	AssignmentExpression	rval = ( char * ) MALLOC ( ( unsigned ) ( strlen ( left ) + strlen ( buf ) + strlen ( right ) + 1 ) )		4682569	0		=			
ANR	4683185	Identifier	rval		4682569	0					
ANR	4683186	CastExpression	( char * ) MALLOC ( ( unsigned ) ( strlen ( left ) + strlen ( buf ) + strlen ( right ) + 1 ) )		4682569	1					
ANR	4683187	CastTarget	char *		4682569	0					
ANR	4683188	CallExpression	MALLOC ( ( unsigned ) ( strlen ( left ) + strlen ( buf ) + strlen ( right ) + 1 ) )		4682569	1					
ANR	4683189	Callee	MALLOC		4682569	0					
ANR	4683190	Identifier	MALLOC		4682569	0					
ANR	4683191	ArgumentList	( unsigned ) ( strlen ( left ) + strlen ( buf ) + strlen ( right ) + 1 )		4682569	1					
ANR	4683192	Argument	( unsigned ) ( strlen ( left ) + strlen ( buf ) + strlen ( right ) + 1 )		4682569	0					
ANR	4683193	CastExpression	( unsigned ) ( strlen ( left ) + strlen ( buf ) + strlen ( right ) + 1 )		4682569	0					
ANR	4683194	CastTarget	unsigned		4682569	0					
ANR	4683195	AdditiveExpression	strlen ( left ) + strlen ( buf ) + strlen ( right ) + 1		4682569	1		+			
ANR	4683196	CallExpression	strlen ( left )		4682569	0					
ANR	4683197	Callee	strlen		4682569	0					
ANR	4683198	Identifier	strlen		4682569	0					
ANR	4683199	ArgumentList	left		4682569	1					
ANR	4683200	Argument	left		4682569	0					
ANR	4683201	Identifier	left		4682569	0					
ANR	4683202	AdditiveExpression	strlen ( buf ) + strlen ( right ) + 1		4682569	1		+			
ANR	4683203	CallExpression	strlen ( buf )		4682569	0					
ANR	4683204	Callee	strlen		4682569	0					
ANR	4683205	Identifier	strlen		4682569	0					
ANR	4683206	ArgumentList	buf		4682569	1					
ANR	4683207	Argument	buf		4682569	0					
ANR	4683208	Identifier	buf		4682569	0					
ANR	4683209	AdditiveExpression	strlen ( right ) + 1		4682569	1		+			
ANR	4683210	CallExpression	strlen ( right )		4682569	0					
ANR	4683211	Callee	strlen		4682569	0					
ANR	4683212	Identifier	strlen		4682569	0					
ANR	4683213	ArgumentList	right		4682569	1					
ANR	4683214	Argument	right		4682569	0					
ANR	4683215	Identifier	right		4682569	0					
ANR	4683216	PrimaryExpression	1		4682569	1					
ANR	4683217	ExpressionStatement	"( void ) sprintf ( rval , ""%s%s%s"" , left , buf , right )"	728:3:18293:18342	4682569	22	True				
ANR	4683218	CastExpression	"( void ) sprintf ( rval , ""%s%s%s"" , left , buf , right )"		4682569	0					
ANR	4683219	CastTarget	void		4682569	0					
ANR	4683220	CallExpression	"sprintf ( rval , ""%s%s%s"" , left , buf , right )"		4682569	1					
ANR	4683221	Callee	sprintf		4682569	0					
ANR	4683222	Identifier	sprintf		4682569	0					
ANR	4683223	ArgumentList	rval		4682569	1					
ANR	4683224	Argument	rval		4682569	0					
ANR	4683225	Identifier	rval		4682569	0					
ANR	4683226	Argument	"""%s%s%s"""		4682569	1					
ANR	4683227	PrimaryExpression	"""%s%s%s"""		4682569	0					
ANR	4683228	Argument	left		4682569	2					
ANR	4683229	Identifier	left		4682569	0					
ANR	4683230	Argument	buf		4682569	3					
ANR	4683231	Identifier	buf		4682569	0					
ANR	4683232	Argument	right		4682569	4					
ANR	4683233	Identifier	right		4682569	0					
ANR	4683234	ExpressionStatement	FREE ( tmp )	729:3:18347:18358	4682569	23	True				
ANR	4683235	CallExpression	FREE ( tmp )		4682569	0					
ANR	4683236	Callee	FREE		4682569	0					
ANR	4683237	Identifier	FREE		4682569	0					
ANR	4683238	ArgumentList	tmp		4682569	1					
ANR	4683239	Argument	tmp		4682569	0					
ANR	4683240	Identifier	tmp		4682569	0					
ANR	4683241	ExpressionStatement	tmp = rval	730:3:18363:18373	4682569	24	True				
ANR	4683242	AssignmentExpression	tmp = rval		4682569	0		=			
ANR	4683243	Identifier	tmp		4682569	0					
ANR	4683244	Identifier	rval		4682569	1					
ANR	4683245	IfStatement	"if ( find_config_macro ( tmp , & left , & name , & right , self ) )"		4682569	4					
ANR	4683246	Condition	"find_config_macro ( tmp , & left , & name , & right , self )"	733:6:18386:18435	4682569	0	True				
ANR	4683247	CallExpression	"find_config_macro ( tmp , & left , & name , & right , self )"		4682569	0					
ANR	4683248	Callee	find_config_macro		4682569	0					
ANR	4683249	Identifier	find_config_macro		4682569	0					
ANR	4683250	ArgumentList	tmp		4682569	1					
ANR	4683251	Argument	tmp		4682569	0					
ANR	4683252	Identifier	tmp		4682569	0					
ANR	4683253	Argument	& left		4682569	1					
ANR	4683254	UnaryOperationExpression	& left		4682569	0					
ANR	4683255	UnaryOperator	&		4682569	0					
ANR	4683256	Identifier	left		4682569	1					
ANR	4683257	Argument	& name		4682569	2					
ANR	4683258	UnaryOperationExpression	& name		4682569	0					
ANR	4683259	UnaryOperator	&		4682569	0					
ANR	4683260	Identifier	name		4682569	1					
ANR	4683261	Argument	& right		4682569	3					
ANR	4683262	UnaryOperationExpression	& right		4682569	0					
ANR	4683263	UnaryOperator	&		4682569	0					
ANR	4683264	Identifier	right		4682569	1					
ANR	4683265	Argument	self		4682569	4					
ANR	4683266	Identifier	self		4682569	0					
ANR	4683267	CompoundStatement		103:59:2763:2763	4682569	1					
ANR	4683268	ExpressionStatement	all_done = false	734:3:18444:18460	4682569	0	True				
ANR	4683269	AssignmentExpression	all_done = false		4682569	0		=			
ANR	4683270	Identifier	all_done		4682569	0					
ANR	4683271	Identifier	false		4682569	1					
ANR	4683272	ExpressionStatement	"tvalue = lookup_macro ( name , table , table_size )"	735:3:18465:18513	4682569	1	True				
ANR	4683273	AssignmentExpression	"tvalue = lookup_macro ( name , table , table_size )"		4682569	0		=			
ANR	4683274	Identifier	tvalue		4682569	0					
ANR	4683275	CallExpression	"lookup_macro ( name , table , table_size )"		4682569	1					
ANR	4683276	Callee	lookup_macro		4682569	0					
ANR	4683277	Identifier	lookup_macro		4682569	0					
ANR	4683278	ArgumentList	name		4682569	1					
ANR	4683279	Argument	name		4682569	0					
ANR	4683280	Identifier	name		4682569	0					
ANR	4683281	Argument	table		4682569	1					
ANR	4683282	Identifier	table		4682569	0					
ANR	4683283	Argument	table_size		4682569	2					
ANR	4683284	Identifier	table_size		4682569	0					
ANR	4683285	IfStatement	if ( ! self && use_default_param_table && tvalue == NULL )		4682569	2					
ANR	4683286	Condition	! self && use_default_param_table && tvalue == NULL	740:7:18690:18739	4682569	0	True				
ANR	4683287	AndExpression	! self && use_default_param_table && tvalue == NULL		4682569	0		&&			
ANR	4683288	UnaryOperationExpression	! self		4682569	0					
ANR	4683289	UnaryOperator	!		4682569	0					
ANR	4683290	Identifier	self		4682569	1					
ANR	4683291	AndExpression	use_default_param_table && tvalue == NULL		4682569	1		&&			
ANR	4683292	Identifier	use_default_param_table		4682569	0					
ANR	4683293	EqualityExpression	tvalue == NULL		4682569	1		==			
ANR	4683294	Identifier	tvalue		4682569	0					
ANR	4683295	Identifier	NULL		4682569	1					
ANR	4683296	CompoundStatement		110:60:3067:3067	4682569	1					
ANR	4683297	ExpressionStatement	tvalue = param_default_string ( name )	741:4:18749:18784	4682569	0	True				
ANR	4683298	AssignmentExpression	tvalue = param_default_string ( name )		4682569	0		=			
ANR	4683299	Identifier	tvalue		4682569	0					
ANR	4683300	CallExpression	param_default_string ( name )		4682569	1					
ANR	4683301	Callee	param_default_string		4682569	0					
ANR	4683302	Identifier	param_default_string		4682569	0					
ANR	4683303	ArgumentList	name		4682569	1					
ANR	4683304	Argument	name		4682569	0					
ANR	4683305	Identifier	name		4682569	0					
ANR	4683306	IfStatement	if ( tvalue == NULL )		4682569	3					
ANR	4683307	Condition	tvalue == NULL	743:7:18798:18811	4682569	0	True				
ANR	4683308	EqualityExpression	tvalue == NULL		4682569	0		==			
ANR	4683309	Identifier	tvalue		4682569	0					
ANR	4683310	Identifier	NULL		4682569	1					
ANR	4683311	CompoundStatement		113:24:3139:3139	4682569	1					
ANR	4683312	ExpressionStatement	"tvalue = """""	744:4:18821:18832	4682569	0	True				
ANR	4683313	AssignmentExpression	"tvalue = """""		4682569	0		=			
ANR	4683314	Identifier	tvalue		4682569	0					
ANR	4683315	PrimaryExpression	""""""		4682569	1					
ANR	4683316	ExpressionStatement	rval = ( char * ) MALLOC ( ( unsigned ) ( strlen ( left ) + strlen ( tvalue ) + strlen ( right ) + 1 ) )	747:3:18843:18941	4682569	4	True				
ANR	4683317	AssignmentExpression	rval = ( char * ) MALLOC ( ( unsigned ) ( strlen ( left ) + strlen ( tvalue ) + strlen ( right ) + 1 ) )		4682569	0		=			
ANR	4683318	Identifier	rval		4682569	0					
ANR	4683319	CastExpression	( char * ) MALLOC ( ( unsigned ) ( strlen ( left ) + strlen ( tvalue ) + strlen ( right ) + 1 ) )		4682569	1					
ANR	4683320	CastTarget	char *		4682569	0					
ANR	4683321	CallExpression	MALLOC ( ( unsigned ) ( strlen ( left ) + strlen ( tvalue ) + strlen ( right ) + 1 ) )		4682569	1					
ANR	4683322	Callee	MALLOC		4682569	0					
ANR	4683323	Identifier	MALLOC		4682569	0					
ANR	4683324	ArgumentList	( unsigned ) ( strlen ( left ) + strlen ( tvalue ) + strlen ( right ) + 1 )		4682569	1					
ANR	4683325	Argument	( unsigned ) ( strlen ( left ) + strlen ( tvalue ) + strlen ( right ) + 1 )		4682569	0					
ANR	4683326	CastExpression	( unsigned ) ( strlen ( left ) + strlen ( tvalue ) + strlen ( right ) + 1 )		4682569	0					
ANR	4683327	CastTarget	unsigned		4682569	0					
ANR	4683328	AdditiveExpression	strlen ( left ) + strlen ( tvalue ) + strlen ( right ) + 1		4682569	1		+			
ANR	4683329	CallExpression	strlen ( left )		4682569	0					
ANR	4683330	Callee	strlen		4682569	0					
ANR	4683331	Identifier	strlen		4682569	0					
ANR	4683332	ArgumentList	left		4682569	1					
ANR	4683333	Argument	left		4682569	0					
ANR	4683334	Identifier	left		4682569	0					
ANR	4683335	AdditiveExpression	strlen ( tvalue ) + strlen ( right ) + 1		4682569	1		+			
ANR	4683336	CallExpression	strlen ( tvalue )		4682569	0					
ANR	4683337	Callee	strlen		4682569	0					
ANR	4683338	Identifier	strlen		4682569	0					
ANR	4683339	ArgumentList	tvalue		4682569	1					
ANR	4683340	Argument	tvalue		4682569	0					
ANR	4683341	Identifier	tvalue		4682569	0					
ANR	4683342	AdditiveExpression	strlen ( right ) + 1		4682569	1		+			
ANR	4683343	CallExpression	strlen ( right )		4682569	0					
ANR	4683344	Callee	strlen		4682569	0					
ANR	4683345	Identifier	strlen		4682569	0					
ANR	4683346	ArgumentList	right		4682569	1					
ANR	4683347	Argument	right		4682569	0					
ANR	4683348	Identifier	right		4682569	0					
ANR	4683349	PrimaryExpression	1		4682569	1					
ANR	4683350	ExpressionStatement	"( void ) sprintf ( rval , ""%s%s%s"" , left , tvalue , right )"	749:3:18946:18998	4682569	5	True				
ANR	4683351	CastExpression	"( void ) sprintf ( rval , ""%s%s%s"" , left , tvalue , right )"		4682569	0					
ANR	4683352	CastTarget	void		4682569	0					
ANR	4683353	CallExpression	"sprintf ( rval , ""%s%s%s"" , left , tvalue , right )"		4682569	1					
ANR	4683354	Callee	sprintf		4682569	0					
ANR	4683355	Identifier	sprintf		4682569	0					
ANR	4683356	ArgumentList	rval		4682569	1					
ANR	4683357	Argument	rval		4682569	0					
ANR	4683358	Identifier	rval		4682569	0					
ANR	4683359	Argument	"""%s%s%s"""		4682569	1					
ANR	4683360	PrimaryExpression	"""%s%s%s"""		4682569	0					
ANR	4683361	Argument	left		4682569	2					
ANR	4683362	Identifier	left		4682569	0					
ANR	4683363	Argument	tvalue		4682569	3					
ANR	4683364	Identifier	tvalue		4682569	0					
ANR	4683365	Argument	right		4682569	4					
ANR	4683366	Identifier	right		4682569	0					
ANR	4683367	ExpressionStatement	FREE ( tmp )	750:3:19003:19014	4682569	6	True				
ANR	4683368	CallExpression	FREE ( tmp )		4682569	0					
ANR	4683369	Callee	FREE		4682569	0					
ANR	4683370	Identifier	FREE		4682569	0					
ANR	4683371	ArgumentList	tmp		4682569	1					
ANR	4683372	Argument	tmp		4682569	0					
ANR	4683373	Identifier	tmp		4682569	0					
ANR	4683374	ExpressionStatement	tmp = rval	751:3:19019:19029	4682569	7	True				
ANR	4683375	AssignmentExpression	tmp = rval		4682569	0		=			
ANR	4683376	Identifier	tmp		4682569	0					
ANR	4683377	Identifier	rval		4682569	1					
ANR	4683378	IfStatement	if ( ! self )		4682569	6					
ANR	4683379	Condition	! self	756:5:19092:19096	4682569	0	True				
ANR	4683380	UnaryOperationExpression	! self		4682569	0					
ANR	4683381	UnaryOperator	!		4682569	0					
ANR	4683382	Identifier	self		4682569	1					
ANR	4683383	WhileStatement	"while ( find_config_macro ( tmp , & left , & name , & right , DOLLAR_ID ) )"		4682569	1					
ANR	4683384	Condition	"find_config_macro ( tmp , & left , & name , & right , DOLLAR_ID )"	757:8:19107:19161	4682569	0	True				
ANR	4683385	CallExpression	"find_config_macro ( tmp , & left , & name , & right , DOLLAR_ID )"		4682569	0					
ANR	4683386	Callee	find_config_macro		4682569	0					
ANR	4683387	Identifier	find_config_macro		4682569	0					
ANR	4683388	ArgumentList	tmp		4682569	1					
ANR	4683389	Argument	tmp		4682569	0					
ANR	4683390	Identifier	tmp		4682569	0					
ANR	4683391	Argument	& left		4682569	1					
ANR	4683392	UnaryOperationExpression	& left		4682569	0					
ANR	4683393	UnaryOperator	&		4682569	0					
ANR	4683394	Identifier	left		4682569	1					
ANR	4683395	Argument	& name		4682569	2					
ANR	4683396	UnaryOperationExpression	& name		4682569	0					
ANR	4683397	UnaryOperator	&		4682569	0					
ANR	4683398	Identifier	name		4682569	1					
ANR	4683399	Argument	& right		4682569	3					
ANR	4683400	UnaryOperationExpression	& right		4682569	0					
ANR	4683401	UnaryOperator	&		4682569	0					
ANR	4683402	Identifier	right		4682569	1					
ANR	4683403	Argument	DOLLAR_ID		4682569	4					
ANR	4683404	Identifier	DOLLAR_ID		4682569	0					
ANR	4683405	CompoundStatement		127:66:3489:3489	4682569	1					
ANR	4683406	ExpressionStatement	rval = ( char * ) MALLOC ( ( unsigned ) ( strlen ( left ) + 1 + strlen ( right ) + 1 ) )	758:2:19169:19253	4682569	0	True				
ANR	4683407	AssignmentExpression	rval = ( char * ) MALLOC ( ( unsigned ) ( strlen ( left ) + 1 + strlen ( right ) + 1 ) )		4682569	0		=			
ANR	4683408	Identifier	rval		4682569	0					
ANR	4683409	CastExpression	( char * ) MALLOC ( ( unsigned ) ( strlen ( left ) + 1 + strlen ( right ) + 1 ) )		4682569	1					
ANR	4683410	CastTarget	char *		4682569	0					
ANR	4683411	CallExpression	MALLOC ( ( unsigned ) ( strlen ( left ) + 1 + strlen ( right ) + 1 ) )		4682569	1					
ANR	4683412	Callee	MALLOC		4682569	0					
ANR	4683413	Identifier	MALLOC		4682569	0					
ANR	4683414	ArgumentList	( unsigned ) ( strlen ( left ) + 1 + strlen ( right ) + 1 )		4682569	1					
ANR	4683415	Argument	( unsigned ) ( strlen ( left ) + 1 + strlen ( right ) + 1 )		4682569	0					
ANR	4683416	CastExpression	( unsigned ) ( strlen ( left ) + 1 + strlen ( right ) + 1 )		4682569	0					
ANR	4683417	CastTarget	unsigned		4682569	0					
ANR	4683418	AdditiveExpression	strlen ( left ) + 1 + strlen ( right ) + 1		4682569	1		+			
ANR	4683419	CallExpression	strlen ( left )		4682569	0					
ANR	4683420	Callee	strlen		4682569	0					
ANR	4683421	Identifier	strlen		4682569	0					
ANR	4683422	ArgumentList	left		4682569	1					
ANR	4683423	Argument	left		4682569	0					
ANR	4683424	Identifier	left		4682569	0					
ANR	4683425	AdditiveExpression	1 + strlen ( right ) + 1		4682569	1		+			
ANR	4683426	PrimaryExpression	1		4682569	0					
ANR	4683427	AdditiveExpression	strlen ( right ) + 1		4682569	1		+			
ANR	4683428	CallExpression	strlen ( right )		4682569	0					
ANR	4683429	Callee	strlen		4682569	0					
ANR	4683430	Identifier	strlen		4682569	0					
ANR	4683431	ArgumentList	right		4682569	1					
ANR	4683432	Argument	right		4682569	0					
ANR	4683433	Identifier	right		4682569	0					
ANR	4683434	PrimaryExpression	1		4682569	1					
ANR	4683435	ExpressionStatement	"( void ) sprintf ( rval , ""%s$%s"" , left , right )"	760:2:19257:19300	4682569	1	True				
ANR	4683436	CastExpression	"( void ) sprintf ( rval , ""%s$%s"" , left , right )"		4682569	0					
ANR	4683437	CastTarget	void		4682569	0					
ANR	4683438	CallExpression	"sprintf ( rval , ""%s$%s"" , left , right )"		4682569	1					
ANR	4683439	Callee	sprintf		4682569	0					
ANR	4683440	Identifier	sprintf		4682569	0					
ANR	4683441	ArgumentList	rval		4682569	1					
ANR	4683442	Argument	rval		4682569	0					
ANR	4683443	Identifier	rval		4682569	0					
ANR	4683444	Argument	"""%s$%s"""		4682569	1					
ANR	4683445	PrimaryExpression	"""%s$%s"""		4682569	0					
ANR	4683446	Argument	left		4682569	2					
ANR	4683447	Identifier	left		4682569	0					
ANR	4683448	Argument	right		4682569	3					
ANR	4683449	Identifier	right		4682569	0					
ANR	4683450	ExpressionStatement	FREE ( tmp )	761:2:19304:19315	4682569	2	True				
ANR	4683451	CallExpression	FREE ( tmp )		4682569	0					
ANR	4683452	Callee	FREE		4682569	0					
ANR	4683453	Identifier	FREE		4682569	0					
ANR	4683454	ArgumentList	tmp		4682569	1					
ANR	4683455	Argument	tmp		4682569	0					
ANR	4683456	Identifier	tmp		4682569	0					
ANR	4683457	ExpressionStatement	tmp = rval	762:2:19319:19329	4682569	3	True				
ANR	4683458	AssignmentExpression	tmp = rval		4682569	0		=			
ANR	4683459	Identifier	tmp		4682569	0					
ANR	4683460	Identifier	rval		4682569	1					
ANR	4683461	ReturnStatement	return ( tmp ) ;	765:1:19336:19349	4682569	7	True				
ANR	4683462	Identifier	tmp		4682569	0					
ANR	4683463	ReturnType	char *		4682569	1					
ANR	4683464	Identifier	expand_macro		4682569	2					
ANR	4683465	ParameterList	"const char * value , BUCKET * * table , int table_size , char * self , bool use_default_param_table"		4682569	3					
ANR	4683466	Parameter	const char * value	626:14:15561:15577	4682569	0	True				
ANR	4683467	ParameterType	const char *		4682569	0					
ANR	4683468	Identifier	value		4682569	1					
ANR	4683469	Parameter	BUCKET * * table	627:5:15585:15598	4682569	1	True				
ANR	4683470	ParameterType	BUCKET * *		4682569	0					
ANR	4683471	Identifier	table		4682569	1					
ANR	4683472	Parameter	int table_size	628:5:15606:15619	4682569	2	True				
ANR	4683473	ParameterType	int		4682569	0					
ANR	4683474	Identifier	table_size		4682569	1					
ANR	4683475	Parameter	char * self	629:5:15627:15636	4682569	3	True				
ANR	4683476	ParameterType	char *		4682569	0					
ANR	4683477	Identifier	self		4682569	1					
ANR	4683478	Parameter	bool use_default_param_table	630:5:15644:15671	4682569	4	True				
ANR	4683479	ParameterType	bool		4682569	0					
ANR	4683480	Identifier	use_default_param_table		4682569	1					
ANR	4683481	CFGEntryNode	ENTRY		4682569		True				
ANR	4683482	CFGExitNode	EXIT		4682569		True				
ANR	4683483	Symbol	table_size		4682569						
ANR	4683484	Symbol	num		4682569						
ANR	4683485	Symbol	all_done		4682569						
ANR	4683486	Symbol	get_random_int		4682569						
ANR	4683487	Symbol	range		4682569						
ANR	4683488	Symbol	random_value		4682569						
ANR	4683489	Symbol	& name		4682569						
ANR	4683490	Symbol	& left		4682569						
ANR	4683491	Symbol	tmp2		4682569						
ANR	4683492	Symbol	DOLLAR_ID		4682569						
ANR	4683493	Symbol	strlen		4682569						
ANR	4683494	Symbol	entries . next		4682569						
ANR	4683495	Symbol	tmp		4682569						
ANR	4683496	Symbol	find_special_config_macro		4682569						
ANR	4683497	Symbol	& max_value		4682569						
ANR	4683498	Symbol	& step		4682569						
ANR	4683499	Symbol	find_config_macro		4682569						
ANR	4683500	Symbol	rval		4682569						
ANR	4683501	Symbol	use_default_param_table		4682569						
ANR	4683502	Symbol	value		4682569						
ANR	4683503	Symbol	& right		4682569						
ANR	4683504	Symbol	table		4682569						
ANR	4683505	Symbol	getenv		4682569						
ANR	4683506	Symbol	& min_value		4682569						
ANR	4683507	Symbol	* buf		4682569						
ANR	4683508	Symbol	tvalue		4682569						
ANR	4683509	Symbol	NULL		4682569						
ANR	4683510	Symbol	false		4682569						
ANR	4683511	Symbol	string_to_long		4682569						
ANR	4683512	Symbol	i		4682569						
ANR	4683513	Symbol	rand_entry		4682569						
ANR	4683514	Symbol	right		4682569						
ANR	4683515	Symbol	entries . number		4682569						
ANR	4683516	Symbol	min_value		4682569						
ANR	4683517	Symbol	entries		4682569						
ANR	4683518	Symbol	buf		4682569						
ANR	4683519	Symbol	MALLOC		4682569						
ANR	4683520	Symbol	left		4682569						
ANR	4683521	Symbol	name		4682569						
ANR	4683522	Symbol	true		4682569						
ANR	4683523	Symbol	param_default_string		4682569						
ANR	4683524	Symbol	self		4682569						
ANR	4683525	Symbol	step		4682569						
ANR	4683526	Symbol	strdup		4682569						
ANR	4683527	Symbol	lookup_macro		4682569						
ANR	4683528	Symbol	num_entries		4682569						
ANR	4683529	Symbol	max_value		4682569						
ANR	4683530	Function	hash_iter_scoot_to_next_bucket	773:0:19613:19832							
ANR	4683531	FunctionDef	hash_iter_scoot_to_next_bucket (HASHITER p)		4683530	0					
ANR	4683532	CompoundStatement		775:0:19668:19832	4683530	0					
ANR	4683533	WhileStatement	while ( p -> current == NULL )		4683530	0					
ANR	4683534	Condition	p -> current == NULL	776:7:19677:19694	4683530	0	True				
ANR	4683535	EqualityExpression	p -> current == NULL		4683530	0		==			
ANR	4683536	PtrMemberAccess	p -> current		4683530	0					
ANR	4683537	Identifier	p		4683530	0					
ANR	4683538	Identifier	current		4683530	1					
ANR	4683539	Identifier	NULL		4683530	1					
ANR	4683540	CompoundStatement		2:27:28:28	4683530	1					
ANR	4683541	ExpressionStatement	( p -> index ) ++	777:2:19701:19713	4683530	0	True				
ANR	4683542	PostIncDecOperationExpression	( p -> index ) ++		4683530	0					
ANR	4683543	PtrMemberAccess	p -> index		4683530	0					
ANR	4683544	Identifier	p		4683530	0					
ANR	4683545	Identifier	index		4683530	1					
ANR	4683546	IncDec	++		4683530	1					
ANR	4683547	IfStatement	if ( p -> index >= p -> table_size )		4683530	1					
ANR	4683548	Condition	p -> index >= p -> table_size	778:5:19720:19744	4683530	0	True				
ANR	4683549	RelationalExpression	p -> index >= p -> table_size		4683530	0		>=			
ANR	4683550	PtrMemberAccess	p -> index		4683530	0					
ANR	4683551	Identifier	p		4683530	0					
ANR	4683552	Identifier	index		4683530	1					
ANR	4683553	PtrMemberAccess	p -> table_size		4683530	1					
ANR	4683554	Identifier	p		4683530	0					
ANR	4683555	Identifier	table_size		4683530	1					
ANR	4683556	CompoundStatement		4:32:78:78	4683530	1					
ANR	4683557	ReturnStatement	return ;	780:3:19782:19788	4683530	0	True				
ANR	4683558	ExpressionStatement	p -> current = p -> table [ p -> index ]	782:2:19796:19827	4683530	2	True				
ANR	4683559	AssignmentExpression	p -> current = p -> table [ p -> index ]		4683530	0		=			
ANR	4683560	PtrMemberAccess	p -> current		4683530	0					
ANR	4683561	Identifier	p		4683530	0					
ANR	4683562	Identifier	current		4683530	1					
ANR	4683563	ArrayIndexing	p -> table [ p -> index ]		4683530	1					
ANR	4683564	PtrMemberAccess	p -> table		4683530	0					
ANR	4683565	Identifier	p		4683530	0					
ANR	4683566	Identifier	table		4683530	1					
ANR	4683567	PtrMemberAccess	p -> index		4683530	1					
ANR	4683568	Identifier	p		4683530	0					
ANR	4683569	Identifier	index		4683530	1					
ANR	4683570	ReturnType	static void		4683530	1					
ANR	4683571	Identifier	hash_iter_scoot_to_next_bucket		4683530	2					
ANR	4683572	ParameterList	HASHITER p		4683530	3					
ANR	4683573	Parameter	HASHITER p	774:31:19656:19665	4683530	0	True				
ANR	4683574	ParameterType	HASHITER		4683530	0					
ANR	4683575	Identifier	p		4683530	1					
ANR	4683576	CFGEntryNode	ENTRY		4683530		True				
ANR	4683577	CFGExitNode	EXIT		4683530		True				
ANR	4683578	Symbol	p		4683530						
ANR	4683579	Symbol	p -> current		4683530						
ANR	4683580	Symbol	* p -> index		4683530						
ANR	4683581	Symbol	NULL		4683530						
ANR	4683582	Symbol	* p -> table		4683530						
ANR	4683583	Symbol	* p		4683530						
ANR	4683584	Symbol	* * p		4683530						
ANR	4683585	Symbol	p -> table_size		4683530						
ANR	4683586	Symbol	p -> table		4683530						
ANR	4683587	Symbol	p -> index		4683530						
ANR	4683588	Function	hash_iter_begin	786:0:19835:20146							
ANR	4683589	FunctionDef	"hash_iter_begin (BUCKET * * table , int table_size)"		4683588	0					
ANR	4683590	CompoundStatement		788:0:19894:20146	4683588	0					
ANR	4683591	ExpressionStatement	ASSERT ( table != NULL )	789:1:19897:19918	4683588	0	True				
ANR	4683592	CallExpression	ASSERT ( table != NULL )		4683588	0					
ANR	4683593	Callee	ASSERT		4683588	0					
ANR	4683594	Identifier	ASSERT		4683588	0					
ANR	4683595	ArgumentList	table != NULL		4683588	1					
ANR	4683596	Argument	table != NULL		4683588	0					
ANR	4683597	EqualityExpression	table != NULL		4683588	0		!=			
ANR	4683598	Identifier	table		4683588	0					
ANR	4683599	Identifier	NULL		4683588	1					
ANR	4683600	ExpressionStatement	ASSERT ( table_size > 0 )	790:1:19921:19943	4683588	1	True				
ANR	4683601	CallExpression	ASSERT ( table_size > 0 )		4683588	0					
ANR	4683602	Callee	ASSERT		4683588	0					
ANR	4683603	Identifier	ASSERT		4683588	0					
ANR	4683604	ArgumentList	table_size > 0		4683588	1					
ANR	4683605	Argument	table_size > 0		4683588	0					
ANR	4683606	RelationalExpression	table_size > 0		4683588	0		>			
ANR	4683607	Identifier	table_size		4683588	0					
ANR	4683608	PrimaryExpression	0		4683588	1					
ANR	4683609	IdentifierDeclStatement	hash_iter * p = ( hash_iter * ) MALLOC ( sizeof ( hash_iter ) ) ;	791:1:19946:20000	4683588	2	True				
ANR	4683610	IdentifierDecl	* p = ( hash_iter * ) MALLOC ( sizeof ( hash_iter ) )		4683588	0					
ANR	4683611	IdentifierDeclType	hash_iter *		4683588	0					
ANR	4683612	Identifier	p		4683588	1					
ANR	4683613	AssignmentExpression	* p = ( hash_iter * ) MALLOC ( sizeof ( hash_iter ) )		4683588	2		=			
ANR	4683614	Identifier	p		4683588	0					
ANR	4683615	CastExpression	( hash_iter * ) MALLOC ( sizeof ( hash_iter ) )		4683588	1					
ANR	4683616	CastTarget	hash_iter *		4683588	0					
ANR	4683617	CallExpression	MALLOC ( sizeof ( hash_iter ) )		4683588	1					
ANR	4683618	Callee	MALLOC		4683588	0					
ANR	4683619	Identifier	MALLOC		4683588	0					
ANR	4683620	ArgumentList	sizeof ( hash_iter )		4683588	1					
ANR	4683621	Argument	sizeof ( hash_iter )		4683588	0					
ANR	4683622	SizeofExpression	sizeof ( hash_iter )		4683588	0					
ANR	4683623	Sizeof	sizeof		4683588	0					
ANR	4683624	SizeofOperand	hash_iter		4683588	1					
ANR	4683625	ExpressionStatement	p -> table = table	792:1:20003:20019	4683588	3	True				
ANR	4683626	AssignmentExpression	p -> table = table		4683588	0		=			
ANR	4683627	PtrMemberAccess	p -> table		4683588	0					
ANR	4683628	Identifier	p		4683588	0					
ANR	4683629	Identifier	table		4683588	1					
ANR	4683630	Identifier	table		4683588	1					
ANR	4683631	ExpressionStatement	p -> table_size = table_size	793:1:20022:20048	4683588	4	True				
ANR	4683632	AssignmentExpression	p -> table_size = table_size		4683588	0		=			
ANR	4683633	PtrMemberAccess	p -> table_size		4683588	0					
ANR	4683634	Identifier	p		4683588	0					
ANR	4683635	Identifier	table_size		4683588	1					
ANR	4683636	Identifier	table_size		4683588	1					
ANR	4683637	ExpressionStatement	p -> index = 0	794:1:20051:20063	4683588	5	True				
ANR	4683638	AssignmentExpression	p -> index = 0		4683588	0		=			
ANR	4683639	PtrMemberAccess	p -> index		4683588	0					
ANR	4683640	Identifier	p		4683588	0					
ANR	4683641	Identifier	index		4683588	1					
ANR	4683642	PrimaryExpression	0		4683588	1					
ANR	4683643	ExpressionStatement	p -> current = p -> table [ p -> index ]	795:1:20066:20097	4683588	6	True				
ANR	4683644	AssignmentExpression	p -> current = p -> table [ p -> index ]		4683588	0		=			
ANR	4683645	PtrMemberAccess	p -> current		4683588	0					
ANR	4683646	Identifier	p		4683588	0					
ANR	4683647	Identifier	current		4683588	1					
ANR	4683648	ArrayIndexing	p -> table [ p -> index ]		4683588	1					
ANR	4683649	PtrMemberAccess	p -> table		4683588	0					
ANR	4683650	Identifier	p		4683588	0					
ANR	4683651	Identifier	table		4683588	1					
ANR	4683652	PtrMemberAccess	p -> index		4683588	1					
ANR	4683653	Identifier	p		4683588	0					
ANR	4683654	Identifier	index		4683588	1					
ANR	4683655	ExpressionStatement	hash_iter_scoot_to_next_bucket ( p )	796:1:20100:20133	4683588	7	True				
ANR	4683656	CallExpression	hash_iter_scoot_to_next_bucket ( p )		4683588	0					
ANR	4683657	Callee	hash_iter_scoot_to_next_bucket		4683588	0					
ANR	4683658	Identifier	hash_iter_scoot_to_next_bucket		4683588	0					
ANR	4683659	ArgumentList	p		4683588	1					
ANR	4683660	Argument	p		4683588	0					
ANR	4683661	Identifier	p		4683588	0					
ANR	4683662	ReturnStatement	return p ;	797:1:20136:20144	4683588	8	True				
ANR	4683663	Identifier	p		4683588	0					
ANR	4683664	ReturnType	HASHITER		4683588	1					
ANR	4683665	Identifier	hash_iter_begin		4683588	2					
ANR	4683666	ParameterList	"BUCKET * * table , int table_size"		4683588	3					
ANR	4683667	Parameter	BUCKET * * table	787:16:19861:19875	4683588	0	True				
ANR	4683668	ParameterType	BUCKET * *		4683588	0					
ANR	4683669	Identifier	table		4683588	1					
ANR	4683670	Parameter	int table_size	787:33:19878:19891	4683588	1	True				
ANR	4683671	ParameterType	int		4683588	0					
ANR	4683672	Identifier	table_size		4683588	1					
ANR	4683673	CFGEntryNode	ENTRY		4683588		True				
ANR	4683674	CFGExitNode	EXIT		4683588		True				
ANR	4683675	Symbol	table_size		4683588						
ANR	4683676	Symbol	p -> current		4683588						
ANR	4683677	Symbol	NULL		4683588						
ANR	4683678	Symbol	* p -> table		4683588						
ANR	4683679	Symbol	p -> index		4683588						
ANR	4683680	Symbol	p		4683588						
ANR	4683681	Symbol	* p -> index		4683588						
ANR	4683682	Symbol	MALLOC		4683588						
ANR	4683683	Symbol	* p		4683588						
ANR	4683684	Symbol	* * p		4683588						
ANR	4683685	Symbol	table		4683588						
ANR	4683686	Symbol	p -> table		4683588						
ANR	4683687	Symbol	p -> table_size		4683588						
ANR	4683688	Function	hash_iter_done	800:0:20149:20314							
ANR	4683689	FunctionDef	hash_iter_done (HASHITER iter)		4683688	0					
ANR	4683690	CompoundStatement		802:0:20183:20314	4683688	0					
ANR	4683691	ExpressionStatement	ASSERT ( iter )	803:1:20186:20198	4683688	0	True				
ANR	4683692	CallExpression	ASSERT ( iter )		4683688	0					
ANR	4683693	Callee	ASSERT		4683688	0					
ANR	4683694	Identifier	ASSERT		4683688	0					
ANR	4683695	ArgumentList	iter		4683688	1					
ANR	4683696	Argument	iter		4683688	0					
ANR	4683697	Identifier	iter		4683688	0					
ANR	4683698	ExpressionStatement	ASSERT ( iter -> table )	804:1:20201:20220	4683688	1	True				
ANR	4683699	CallExpression	ASSERT ( iter -> table )		4683688	0					
ANR	4683700	Callee	ASSERT		4683688	0					
ANR	4683701	Identifier	ASSERT		4683688	0					
ANR	4683702	ArgumentList	iter -> table		4683688	1					
ANR	4683703	Argument	iter -> table		4683688	0					
ANR	4683704	PtrMemberAccess	iter -> table		4683688	0					
ANR	4683705	Identifier	iter		4683688	0					
ANR	4683706	Identifier	table		4683688	1					
ANR	4683707	ReturnStatement	return iter -> current == NULL ;	805:1:20284:20312	4683688	2	True				
ANR	4683708	EqualityExpression	iter -> current == NULL		4683688	0		==			
ANR	4683709	PtrMemberAccess	iter -> current		4683688	0					
ANR	4683710	Identifier	iter		4683688	0					
ANR	4683711	Identifier	current		4683688	1					
ANR	4683712	Identifier	NULL		4683688	1					
ANR	4683713	ReturnType	int		4683688	1					
ANR	4683714	Identifier	hash_iter_done		4683688	2					
ANR	4683715	ParameterList	HASHITER iter		4683688	3					
ANR	4683716	Parameter	HASHITER iter	801:15:20168:20180	4683688	0	True				
ANR	4683717	ParameterType	HASHITER		4683688	0					
ANR	4683718	Identifier	iter		4683688	1					
ANR	4683719	CFGEntryNode	ENTRY		4683688		True				
ANR	4683720	CFGExitNode	EXIT		4683688		True				
ANR	4683721	Symbol	* iter		4683688						
ANR	4683722	Symbol	NULL		4683688						
ANR	4683723	Symbol	iter		4683688						
ANR	4683724	Symbol	iter -> table		4683688						
ANR	4683725	Symbol	iter -> current		4683688						
ANR	4683726	Function	hash_iter_next	808:0:20317:20605							
ANR	4683727	FunctionDef	hash_iter_next (HASHITER iter)		4683726	0					
ANR	4683728	CompoundStatement		810:0:20352:20605	4683726	0					
ANR	4683729	ExpressionStatement	ASSERT ( iter )	811:1:20355:20367	4683726	0	True				
ANR	4683730	CallExpression	ASSERT ( iter )		4683726	0					
ANR	4683731	Callee	ASSERT		4683726	0					
ANR	4683732	Identifier	ASSERT		4683726	0					
ANR	4683733	ArgumentList	iter		4683726	1					
ANR	4683734	Argument	iter		4683726	0					
ANR	4683735	Identifier	iter		4683726	0					
ANR	4683736	ExpressionStatement	ASSERT ( iter -> table )	812:1:20370:20389	4683726	1	True				
ANR	4683737	CallExpression	ASSERT ( iter -> table )		4683726	0					
ANR	4683738	Callee	ASSERT		4683726	0					
ANR	4683739	Identifier	ASSERT		4683726	0					
ANR	4683740	ArgumentList	iter -> table		4683726	1					
ANR	4683741	Argument	iter -> table		4683726	0					
ANR	4683742	PtrMemberAccess	iter -> table		4683726	0					
ANR	4683743	Identifier	iter		4683726	0					
ANR	4683744	Identifier	table		4683726	1					
ANR	4683745	IfStatement	if ( hash_iter_done ( iter ) )		4683726	2					
ANR	4683746	Condition	hash_iter_done ( iter )	813:4:20456:20475	4683726	0	True				
ANR	4683747	CallExpression	hash_iter_done ( iter )		4683726	0					
ANR	4683748	Callee	hash_iter_done		4683726	0					
ANR	4683749	Identifier	hash_iter_done		4683726	0					
ANR	4683750	ArgumentList	iter		4683726	1					
ANR	4683751	Argument	iter		4683726	0					
ANR	4683752	Identifier	iter		4683726	0					
ANR	4683753	CompoundStatement		4:26:125:125	4683726	1					
ANR	4683754	ReturnStatement	return 0 ;	814:2:20482:20490	4683726	0	True				
ANR	4683755	PrimaryExpression	0		4683726	0					
ANR	4683756	ExpressionStatement	iter -> current = iter -> current -> next	816:1:20496:20531	4683726	3	True				
ANR	4683757	AssignmentExpression	iter -> current = iter -> current -> next		4683726	0		=			
ANR	4683758	PtrMemberAccess	iter -> current		4683726	0					
ANR	4683759	Identifier	iter		4683726	0					
ANR	4683760	Identifier	current		4683726	1					
ANR	4683761	PtrMemberAccess	iter -> current -> next		4683726	1					
ANR	4683762	PtrMemberAccess	iter -> current		4683726	0					
ANR	4683763	Identifier	iter		4683726	0					
ANR	4683764	Identifier	current		4683726	1					
ANR	4683765	Identifier	next		4683726	1					
ANR	4683766	ExpressionStatement	hash_iter_scoot_to_next_bucket ( iter )	817:1:20534:20570	4683726	4	True				
ANR	4683767	CallExpression	hash_iter_scoot_to_next_bucket ( iter )		4683726	0					
ANR	4683768	Callee	hash_iter_scoot_to_next_bucket		4683726	0					
ANR	4683769	Identifier	hash_iter_scoot_to_next_bucket		4683726	0					
ANR	4683770	ArgumentList	iter		4683726	1					
ANR	4683771	Argument	iter		4683726	0					
ANR	4683772	Identifier	iter		4683726	0					
ANR	4683773	ReturnStatement	return ( iter -> current ) ? 1 : 0 ;	818:1:20573:20603	4683726	5	True				
ANR	4683774	ConditionalExpression	( iter -> current ) ? 1 : 0		4683726	0					
ANR	4683775	Condition	iter -> current		4683726	0					
ANR	4683776	PtrMemberAccess	iter -> current		4683726	0					
ANR	4683777	Identifier	iter		4683726	0					
ANR	4683778	Identifier	current		4683726	1					
ANR	4683779	PrimaryExpression	1		4683726	1					
ANR	4683780	PrimaryExpression	0		4683726	2					
ANR	4683781	ReturnType	int		4683726	1					
ANR	4683782	Identifier	hash_iter_next		4683726	2					
ANR	4683783	ParameterList	HASHITER iter		4683726	3					
ANR	4683784	Parameter	HASHITER iter	809:15:20337:20349	4683726	0	True				
ANR	4683785	ParameterType	HASHITER		4683726	0					
ANR	4683786	Identifier	iter		4683726	1					
ANR	4683787	CFGEntryNode	ENTRY		4683726		True				
ANR	4683788	CFGExitNode	EXIT		4683726		True				
ANR	4683789	Symbol	* iter		4683726						
ANR	4683790	Symbol	* iter -> current		4683726						
ANR	4683791	Symbol	iter -> current -> next		4683726						
ANR	4683792	Symbol	iter		4683726						
ANR	4683793	Symbol	iter -> table		4683726						
ANR	4683794	Symbol	iter -> current		4683726						
ANR	4683795	Symbol	* * iter		4683726						
ANR	4683796	Symbol	hash_iter_done		4683726						
ANR	4683797	Function	hash_iter_key	821:0:20608:20809							
ANR	4683798	FunctionDef	hash_iter_key (HASHITER iter)		4683797	0					
ANR	4683799	CompoundStatement		823:0:20645:20809	4683797	0					
ANR	4683800	ExpressionStatement	ASSERT ( iter )	824:1:20648:20660	4683797	0	True				
ANR	4683801	CallExpression	ASSERT ( iter )		4683797	0					
ANR	4683802	Callee	ASSERT		4683797	0					
ANR	4683803	Identifier	ASSERT		4683797	0					
ANR	4683804	ArgumentList	iter		4683797	1					
ANR	4683805	Argument	iter		4683797	0					
ANR	4683806	Identifier	iter		4683797	0					
ANR	4683807	ExpressionStatement	ASSERT ( iter -> table )	825:1:20663:20682	4683797	1	True				
ANR	4683808	CallExpression	ASSERT ( iter -> table )		4683797	0					
ANR	4683809	Callee	ASSERT		4683797	0					
ANR	4683810	Identifier	ASSERT		4683797	0					
ANR	4683811	ArgumentList	iter -> table		4683797	1					
ANR	4683812	Argument	iter -> table		4683797	0					
ANR	4683813	PtrMemberAccess	iter -> table		4683797	0					
ANR	4683814	Identifier	iter		4683797	0					
ANR	4683815	Identifier	table		4683797	1					
ANR	4683816	ExpressionStatement	ASSERT ( ! hash_iter_done ( iter ) )	826:1:20746:20778	4683797	2	True				
ANR	4683817	CallExpression	ASSERT ( ! hash_iter_done ( iter ) )		4683797	0					
ANR	4683818	Callee	ASSERT		4683797	0					
ANR	4683819	Identifier	ASSERT		4683797	0					
ANR	4683820	ArgumentList	! hash_iter_done ( iter )		4683797	1					
ANR	4683821	Argument	! hash_iter_done ( iter )		4683797	0					
ANR	4683822	UnaryOperationExpression	! hash_iter_done ( iter )		4683797	0					
ANR	4683823	UnaryOperator	!		4683797	0					
ANR	4683824	CallExpression	hash_iter_done ( iter )		4683797	1					
ANR	4683825	Callee	hash_iter_done		4683797	0					
ANR	4683826	Identifier	hash_iter_done		4683797	0					
ANR	4683827	ArgumentList	iter		4683797	1					
ANR	4683828	Argument	iter		4683797	0					
ANR	4683829	Identifier	iter		4683797	0					
ANR	4683830	ReturnStatement	return iter -> current -> name ;	827:1:20781:20807	4683797	3	True				
ANR	4683831	PtrMemberAccess	iter -> current -> name		4683797	0					
ANR	4683832	PtrMemberAccess	iter -> current		4683797	0					
ANR	4683833	Identifier	iter		4683797	0					
ANR	4683834	Identifier	current		4683797	1					
ANR	4683835	Identifier	name		4683797	1					
ANR	4683836	ReturnType	char *		4683797	1					
ANR	4683837	Identifier	hash_iter_key		4683797	2					
ANR	4683838	ParameterList	HASHITER iter		4683797	3					
ANR	4683839	Parameter	HASHITER iter	822:14:20630:20642	4683797	0	True				
ANR	4683840	ParameterType	HASHITER		4683797	0					
ANR	4683841	Identifier	iter		4683797	1					
ANR	4683842	CFGEntryNode	ENTRY		4683797		True				
ANR	4683843	CFGExitNode	EXIT		4683797		True				
ANR	4683844	Symbol	* iter		4683797						
ANR	4683845	Symbol	* iter -> current		4683797						
ANR	4683846	Symbol	iter		4683797						
ANR	4683847	Symbol	iter -> table		4683797						
ANR	4683848	Symbol	* * iter		4683797						
ANR	4683849	Symbol	iter -> current		4683797						
ANR	4683850	Symbol	hash_iter_done		4683797						
ANR	4683851	Symbol	iter -> current -> name		4683797						
ANR	4683852	Function	hash_iter_value	830:0:20812:21016							
ANR	4683853	FunctionDef	hash_iter_value (HASHITER iter)		4683852	0					
ANR	4683854	CompoundStatement		832:0:20851:21016	4683852	0					
ANR	4683855	ExpressionStatement	ASSERT ( iter )	833:1:20854:20866	4683852	0	True				
ANR	4683856	CallExpression	ASSERT ( iter )		4683852	0					
ANR	4683857	Callee	ASSERT		4683852	0					
ANR	4683858	Identifier	ASSERT		4683852	0					
ANR	4683859	ArgumentList	iter		4683852	1					
ANR	4683860	Argument	iter		4683852	0					
ANR	4683861	Identifier	iter		4683852	0					
ANR	4683862	ExpressionStatement	ASSERT ( iter -> table )	834:1:20869:20888	4683852	1	True				
ANR	4683863	CallExpression	ASSERT ( iter -> table )		4683852	0					
ANR	4683864	Callee	ASSERT		4683852	0					
ANR	4683865	Identifier	ASSERT		4683852	0					
ANR	4683866	ArgumentList	iter -> table		4683852	1					
ANR	4683867	Argument	iter -> table		4683852	0					
ANR	4683868	PtrMemberAccess	iter -> table		4683852	0					
ANR	4683869	Identifier	iter		4683852	0					
ANR	4683870	Identifier	table		4683852	1					
ANR	4683871	ExpressionStatement	ASSERT ( ! hash_iter_done ( iter ) )	835:1:20952:20984	4683852	2	True				
ANR	4683872	CallExpression	ASSERT ( ! hash_iter_done ( iter ) )		4683852	0					
ANR	4683873	Callee	ASSERT		4683852	0					
ANR	4683874	Identifier	ASSERT		4683852	0					
ANR	4683875	ArgumentList	! hash_iter_done ( iter )		4683852	1					
ANR	4683876	Argument	! hash_iter_done ( iter )		4683852	0					
ANR	4683877	UnaryOperationExpression	! hash_iter_done ( iter )		4683852	0					
ANR	4683878	UnaryOperator	!		4683852	0					
ANR	4683879	CallExpression	hash_iter_done ( iter )		4683852	1					
ANR	4683880	Callee	hash_iter_done		4683852	0					
ANR	4683881	Identifier	hash_iter_done		4683852	0					
ANR	4683882	ArgumentList	iter		4683852	1					
ANR	4683883	Argument	iter		4683852	0					
ANR	4683884	Identifier	iter		4683852	0					
ANR	4683885	ReturnStatement	return iter -> current -> value ;	836:1:20987:21014	4683852	3	True				
ANR	4683886	PtrMemberAccess	iter -> current -> value		4683852	0					
ANR	4683887	PtrMemberAccess	iter -> current		4683852	0					
ANR	4683888	Identifier	iter		4683852	0					
ANR	4683889	Identifier	current		4683852	1					
ANR	4683890	Identifier	value		4683852	1					
ANR	4683891	ReturnType	char *		4683852	1					
ANR	4683892	Identifier	hash_iter_value		4683852	2					
ANR	4683893	ParameterList	HASHITER iter		4683852	3					
ANR	4683894	Parameter	HASHITER iter	831:16:20836:20848	4683852	0	True				
ANR	4683895	ParameterType	HASHITER		4683852	0					
ANR	4683896	Identifier	iter		4683852	1					
ANR	4683897	CFGEntryNode	ENTRY		4683852		True				
ANR	4683898	CFGExitNode	EXIT		4683852		True				
ANR	4683899	Symbol	* iter		4683852						
ANR	4683900	Symbol	* iter -> current		4683852						
ANR	4683901	Symbol	iter -> current -> value		4683852						
ANR	4683902	Symbol	iter		4683852						
ANR	4683903	Symbol	iter -> table		4683852						
ANR	4683904	Symbol	iter -> current		4683852						
ANR	4683905	Symbol	* * iter		4683852						
ANR	4683906	Symbol	hash_iter_done		4683852						
ANR	4683907	Function	hash_iter_used_value	839:0:21019:21223							
ANR	4683908	FunctionDef	hash_iter_used_value (HASHITER iter)		4683907	0					
ANR	4683909	CompoundStatement		841:0:21059:21223	4683907	0					
ANR	4683910	ExpressionStatement	ASSERT ( iter )	842:1:21062:21074	4683907	0	True				
ANR	4683911	CallExpression	ASSERT ( iter )		4683907	0					
ANR	4683912	Callee	ASSERT		4683907	0					
ANR	4683913	Identifier	ASSERT		4683907	0					
ANR	4683914	ArgumentList	iter		4683907	1					
ANR	4683915	Argument	iter		4683907	0					
ANR	4683916	Identifier	iter		4683907	0					
ANR	4683917	ExpressionStatement	ASSERT ( iter -> table )	843:1:21077:21096	4683907	1	True				
ANR	4683918	CallExpression	ASSERT ( iter -> table )		4683907	0					
ANR	4683919	Callee	ASSERT		4683907	0					
ANR	4683920	Identifier	ASSERT		4683907	0					
ANR	4683921	ArgumentList	iter -> table		4683907	1					
ANR	4683922	Argument	iter -> table		4683907	0					
ANR	4683923	PtrMemberAccess	iter -> table		4683907	0					
ANR	4683924	Identifier	iter		4683907	0					
ANR	4683925	Identifier	table		4683907	1					
ANR	4683926	ExpressionStatement	ASSERT ( ! hash_iter_done ( iter ) )	844:1:21160:21192	4683907	2	True				
ANR	4683927	CallExpression	ASSERT ( ! hash_iter_done ( iter ) )		4683907	0					
ANR	4683928	Callee	ASSERT		4683907	0					
ANR	4683929	Identifier	ASSERT		4683907	0					
ANR	4683930	ArgumentList	! hash_iter_done ( iter )		4683907	1					
ANR	4683931	Argument	! hash_iter_done ( iter )		4683907	0					
ANR	4683932	UnaryOperationExpression	! hash_iter_done ( iter )		4683907	0					
ANR	4683933	UnaryOperator	!		4683907	0					
ANR	4683934	CallExpression	hash_iter_done ( iter )		4683907	1					
ANR	4683935	Callee	hash_iter_done		4683907	0					
ANR	4683936	Identifier	hash_iter_done		4683907	0					
ANR	4683937	ArgumentList	iter		4683907	1					
ANR	4683938	Argument	iter		4683907	0					
ANR	4683939	Identifier	iter		4683907	0					
ANR	4683940	ReturnStatement	return iter -> current -> used ;	845:1:21195:21221	4683907	3	True				
ANR	4683941	PtrMemberAccess	iter -> current -> used		4683907	0					
ANR	4683942	PtrMemberAccess	iter -> current		4683907	0					
ANR	4683943	Identifier	iter		4683907	0					
ANR	4683944	Identifier	current		4683907	1					
ANR	4683945	Identifier	used		4683907	1					
ANR	4683946	ReturnType	int		4683907	1					
ANR	4683947	Identifier	hash_iter_used_value		4683907	2					
ANR	4683948	ParameterList	HASHITER iter		4683907	3					
ANR	4683949	Parameter	HASHITER iter	840:21:21044:21056	4683907	0	True				
ANR	4683950	ParameterType	HASHITER		4683907	0					
ANR	4683951	Identifier	iter		4683907	1					
ANR	4683952	CFGEntryNode	ENTRY		4683907		True				
ANR	4683953	CFGExitNode	EXIT		4683907		True				
ANR	4683954	Symbol	* iter		4683907						
ANR	4683955	Symbol	* iter -> current		4683907						
ANR	4683956	Symbol	iter -> current -> used		4683907						
ANR	4683957	Symbol	iter		4683907						
ANR	4683958	Symbol	iter -> table		4683907						
ANR	4683959	Symbol	* * iter		4683907						
ANR	4683960	Symbol	iter -> current		4683907						
ANR	4683961	Symbol	hash_iter_done		4683907						
ANR	4683962	Function	hash_iter_delete	848:0:21226:21437							
ANR	4683963	FunctionDef	hash_iter_delete (HASHITER * iter)		4683962	0					
ANR	4683964	CompoundStatement		850:0:21266:21437	4683962	0					
ANR	4683965	ExpressionStatement	ASSERT ( iter )	851:1:21269:21281	4683962	0	True				
ANR	4683966	CallExpression	ASSERT ( iter )		4683962	0					
ANR	4683967	Callee	ASSERT		4683962	0					
ANR	4683968	Identifier	ASSERT		4683962	0					
ANR	4683969	ArgumentList	iter		4683962	1					
ANR	4683970	Argument	iter		4683962	0					
ANR	4683971	Identifier	iter		4683962	0					
ANR	4683972	ExpressionStatement	ASSERT ( iter [ 0 ] )	852:1:21284:21299	4683962	1	True				
ANR	4683973	CallExpression	ASSERT ( iter [ 0 ] )		4683962	0					
ANR	4683974	Callee	ASSERT		4683962	0					
ANR	4683975	Identifier	ASSERT		4683962	0					
ANR	4683976	ArgumentList	iter [ 0 ]		4683962	1					
ANR	4683977	Argument	iter [ 0 ]		4683962	0					
ANR	4683978	ArrayIndexing	iter [ 0 ]		4683962	0					
ANR	4683979	Identifier	iter		4683962	0					
ANR	4683980	PrimaryExpression	0		4683962	1					
ANR	4683981	ExpressionStatement	ASSERT ( iter [ 0 ] -> table )	853:1:21302:21324	4683962	2	True				
ANR	4683982	CallExpression	ASSERT ( iter [ 0 ] -> table )		4683962	0					
ANR	4683983	Callee	ASSERT		4683962	0					
ANR	4683984	Identifier	ASSERT		4683962	0					
ANR	4683985	ArgumentList	iter [ 0 ] -> table		4683962	1					
ANR	4683986	Argument	iter [ 0 ] -> table		4683962	0					
ANR	4683987	PtrMemberAccess	iter [ 0 ] -> table		4683962	0					
ANR	4683988	ArrayIndexing	iter [ 0 ]		4683962	0					
ANR	4683989	Identifier	iter		4683962	0					
ANR	4683990	PrimaryExpression	0		4683962	1					
ANR	4683991	Identifier	table		4683962	1					
ANR	4683992	ExpressionStatement	iter [ 0 ] -> table = NULL	854:1:21388:21409	4683962	3	True				
ANR	4683993	AssignmentExpression	iter [ 0 ] -> table = NULL		4683962	0		=			
ANR	4683994	PtrMemberAccess	iter [ 0 ] -> table		4683962	0					
ANR	4683995	ArrayIndexing	iter [ 0 ]		4683962	0					
ANR	4683996	Identifier	iter		4683962	0					
ANR	4683997	PrimaryExpression	0		4683962	1					
ANR	4683998	Identifier	table		4683962	1					
ANR	4683999	Identifier	NULL		4683962	1					
ANR	4684000	ExpressionStatement	free ( * iter )	855:1:21412:21423	4683962	4	True				
ANR	4684001	CallExpression	free ( * iter )		4683962	0					
ANR	4684002	Callee	free		4683962	0					
ANR	4684003	Identifier	free		4683962	0					
ANR	4684004	ArgumentList	* iter		4683962	1					
ANR	4684005	Argument	* iter		4683962	0					
ANR	4684006	UnaryOperationExpression	* iter		4683962	0					
ANR	4684007	UnaryOperator	*		4683962	0					
ANR	4684008	Identifier	iter		4683962	1					
ANR	4684009	ExpressionStatement	* iter = 0	856:1:21426:21435	4683962	5	True				
ANR	4684010	AssignmentExpression	* iter = 0		4683962	0		=			
ANR	4684011	UnaryOperationExpression	* iter		4683962	0					
ANR	4684012	UnaryOperator	*		4683962	0					
ANR	4684013	Identifier	iter		4683962	1					
ANR	4684014	PrimaryExpression	0		4683962	1					
ANR	4684015	ReturnType	void		4683962	1					
ANR	4684016	Identifier	hash_iter_delete		4683962	2					
ANR	4684017	ParameterList	HASHITER * iter		4683962	3					
ANR	4684018	Parameter	HASHITER * iter	849:17:21249:21263	4683962	0	True				
ANR	4684019	ParameterType	HASHITER *		4683962	0					
ANR	4684020	Identifier	iter		4683962	1					
ANR	4684021	CFGEntryNode	ENTRY		4683962		True				
ANR	4684022	CFGExitNode	EXIT		4683962		True				
ANR	4684023	Symbol	* iter		4683962						
ANR	4684024	Symbol	iter [ 0 ] -> table		4683962						
ANR	4684025	Symbol	NULL		4683962						
ANR	4684026	Symbol	iter		4683962						
ANR	4684027	Symbol	* * iter		4683962						
ANR	4684028	Function	find_special_config_macro	863:0:21527:22606							
ANR	4684029	FunctionDef	"find_special_config_macro (const char * prefix , bool only_id_chars , register char * value , register char * * leftp , register char * * namep , register char * * rightp)"		4684028	0					
ANR	4684030	CompoundStatement		866:0:21694:22606	4684028	0					
ANR	4684031	IdentifierDeclStatement	"char * left , * left_end , * name , * right ;"	867:1:21697:21733	4684028	0	True				
ANR	4684032	IdentifierDecl	* left		4684028	0					
ANR	4684033	IdentifierDeclType	char *		4684028	0					
ANR	4684034	Identifier	left		4684028	1					
ANR	4684035	IdentifierDecl	* left_end		4684028	1					
ANR	4684036	IdentifierDeclType	char *		4684028	0					
ANR	4684037	Identifier	left_end		4684028	1					
ANR	4684038	IdentifierDecl	* name		4684028	2					
ANR	4684039	IdentifierDeclType	char *		4684028	0					
ANR	4684040	Identifier	name		4684028	1					
ANR	4684041	IdentifierDecl	* right		4684028	3					
ANR	4684042	IdentifierDeclType	char *		4684028	0					
ANR	4684043	Identifier	right		4684028	1					
ANR	4684044	IdentifierDeclStatement	char * tvalue ;	868:1:21736:21748	4684028	1	True				
ANR	4684045	IdentifierDecl	* tvalue		4684028	0					
ANR	4684046	IdentifierDeclType	char *		4684028	0					
ANR	4684047	Identifier	tvalue		4684028	1					
ANR	4684048	IdentifierDeclStatement	int prefix_len ;	869:1:21751:21765	4684028	2	True				
ANR	4684049	IdentifierDecl	prefix_len		4684028	0					
ANR	4684050	IdentifierDeclType	int		4684028	0					
ANR	4684051	Identifier	prefix_len		4684028	1					
ANR	4684052	IfStatement	if ( prefix == NULL )		4684028	3					
ANR	4684053	Condition	prefix == NULL	871:6:21774:21787	4684028	0	True				
ANR	4684054	EqualityExpression	prefix == NULL		4684028	0		==			
ANR	4684055	Identifier	prefix		4684028	0					
ANR	4684056	Identifier	NULL		4684028	1					
ANR	4684057	CompoundStatement		6:23:96:96	4684028	1					
ANR	4684058	ReturnStatement	return ( 0 ) ;	872:2:21795:21806	4684028	0	True				
ANR	4684059	PrimaryExpression	0		4684028	0					
ANR	4684060	ExpressionStatement	prefix_len = strlen ( prefix )	875:1:21813:21840	4684028	4	True				
ANR	4684061	AssignmentExpression	prefix_len = strlen ( prefix )		4684028	0		=			
ANR	4684062	Identifier	prefix_len		4684028	0					
ANR	4684063	CallExpression	strlen ( prefix )		4684028	1					
ANR	4684064	Callee	strlen		4684028	0					
ANR	4684065	Identifier	strlen		4684028	0					
ANR	4684066	ArgumentList	prefix		4684028	1					
ANR	4684067	Argument	prefix		4684028	0					
ANR	4684068	Identifier	prefix		4684028	0					
ANR	4684069	ExpressionStatement	tvalue = value	876:1:21843:21857	4684028	5	True				
ANR	4684070	AssignmentExpression	tvalue = value		4684028	0		=			
ANR	4684071	Identifier	tvalue		4684028	0					
ANR	4684072	Identifier	value		4684028	1					
ANR	4684073	ExpressionStatement	left = value	877:1:21860:21872	4684028	6	True				
ANR	4684074	AssignmentExpression	left = value		4684028	0		=			
ANR	4684075	Identifier	left		4684028	0					
ANR	4684076	Identifier	value		4684028	1					
ANR	4684077	WhileStatement	while ( 1 )		4684028	7					
ANR	4684078	Condition	1	880:8:21943:21943	4684028	0	True				
ANR	4684079	PrimaryExpression	1		4684028	0					
ANR	4684080	CompoundStatement		15:11:251:251	4684028	1					
ANR	4684081	Label	tryagain :	881:0:21948:21956	4684028	0	True				
ANR	4684082	Identifier	tryagain		4684028	0					
ANR	4684083	IfStatement	if ( tvalue )		4684028	1					
ANR	4684084	Condition	tvalue	882:6:21964:21969	4684028	0	True				
ANR	4684085	Identifier	tvalue		4684028	0					
ANR	4684086	CompoundStatement		17:14:277:277	4684028	1					
ANR	4684087	Statement	value	883:3:21977:21981	4684028	0	True				
ANR	4684088	Statement	=	883:9:21983:21983	4684028	1	True				
ANR	4684089	Statement	const_cast	883:11:21985:21994	4684028	2	True				
ANR	4684090	Statement	<	883:21:21995:21995	4684028	3	True				
ANR	4684091	Statement	char	883:22:21996:21999	4684028	4	True				
ANR	4684092	Statement	*	883:27:22001:22001	4684028	5	True				
ANR	4684093	Statement	>	883:28:22002:22002	4684028	6	True				
ANR	4684094	ExpressionStatement	"strstr ( tvalue , prefix )"	883:29:22003:22028	4684028	7	True				
ANR	4684095	CallExpression	"strstr ( tvalue , prefix )"		4684028	0					
ANR	4684096	Callee	strstr		4684028	0					
ANR	4684097	Identifier	strstr		4684028	0					
ANR	4684098	ArgumentList	tvalue		4684028	1					
ANR	4684099	Argument	tvalue		4684028	0					
ANR	4684100	Identifier	tvalue		4684028	0					
ANR	4684101	Argument	prefix		4684028	1					
ANR	4684102	Identifier	prefix		4684028	0					
ANR	4684103	IfStatement	if ( value == NULL )		4684028	2					
ANR	4684104	Condition	value == NULL	886:6:22043:22055	4684028	0	True				
ANR	4684105	EqualityExpression	value == NULL		4684028	0		==			
ANR	4684106	Identifier	value		4684028	0					
ANR	4684107	Identifier	NULL		4684028	1					
ANR	4684108	CompoundStatement		21:22:364:364	4684028	1					
ANR	4684109	ReturnStatement	return ( 0 ) ;	887:3:22064:22075	4684028	0	True				
ANR	4684110	PrimaryExpression	0		4684028	0					
ANR	4684111	ExpressionStatement	value += prefix_len	890:2:22084:22103	4684028	3	True				
ANR	4684112	AssignmentExpression	value += prefix_len		4684028	0		+=			
ANR	4684113	Identifier	value		4684028	0					
ANR	4684114	Identifier	prefix_len		4684028	1					
ANR	4684115	IfStatement	if ( * value == '(' )		4684028	4					
ANR	4684116	Condition	* value == '('	891:6:22111:22123	4684028	0	True				
ANR	4684117	EqualityExpression	* value == '('		4684028	0		==			
ANR	4684118	UnaryOperationExpression	* value		4684028	0					
ANR	4684119	UnaryOperator	*		4684028	0					
ANR	4684120	Identifier	value		4684028	1					
ANR	4684121	PrimaryExpression	'('		4684028	1					
ANR	4684122	CompoundStatement		26:22:432:432	4684028	1					
ANR	4684123	ExpressionStatement	left_end = value - prefix_len	892:3:22132:22161	4684028	0	True				
ANR	4684124	AssignmentExpression	left_end = value - prefix_len		4684028	0		=			
ANR	4684125	Identifier	left_end		4684028	0					
ANR	4684126	AdditiveExpression	value - prefix_len		4684028	1		-			
ANR	4684127	Identifier	value		4684028	0					
ANR	4684128	Identifier	prefix_len		4684028	1					
ANR	4684129	ExpressionStatement	name = ++ value	893:3:22166:22180	4684028	1	True				
ANR	4684130	AssignmentExpression	name = ++ value		4684028	0		=			
ANR	4684131	Identifier	name		4684028	0					
ANR	4684132	UnaryExpression	++ value		4684028	1					
ANR	4684133	IncDec	++		4684028	0					
ANR	4684134	Identifier	value		4684028	1					
ANR	4684135	WhileStatement	while ( * value && * value != ')' )		4684028	2					
ANR	4684136	Condition	* value && * value != ')'	894:10:22192:22214	4684028	0	True				
ANR	4684137	AndExpression	* value && * value != ')'		4684028	0		&&			
ANR	4684138	UnaryOperationExpression	* value		4684028	0					
ANR	4684139	UnaryOperator	*		4684028	0					
ANR	4684140	Identifier	value		4684028	1					
ANR	4684141	EqualityExpression	* value != ')'		4684028	1		!=			
ANR	4684142	UnaryOperationExpression	* value		4684028	0					
ANR	4684143	UnaryOperator	*		4684028	0					
ANR	4684144	Identifier	value		4684028	1					
ANR	4684145	PrimaryExpression	')'		4684028	1					
ANR	4684146	CompoundStatement		30:4:529:546	4684028	1					
ANR	4684147	IdentifierDeclStatement	char c = * value ++ ;	895:4:22224:22241	4684028	0	True				
ANR	4684148	IdentifierDecl	c = * value ++		4684028	0					
ANR	4684149	IdentifierDeclType	char		4684028	0					
ANR	4684150	Identifier	c		4684028	1					
ANR	4684151	AssignmentExpression	c = * value ++		4684028	2		=			
ANR	4684152	Identifier	c		4684028	0					
ANR	4684153	UnaryOperationExpression	* value ++		4684028	1					
ANR	4684154	UnaryOperator	*		4684028	0					
ANR	4684155	PostIncDecOperationExpression	value ++		4684028	1					
ANR	4684156	Identifier	value		4684028	0					
ANR	4684157	IncDec	++		4684028	1					
ANR	4684158	IfStatement	if ( ! ISIDCHAR ( c ) && only_id_chars )		4684028	1					
ANR	4684159	Condition	! ISIDCHAR ( c ) && only_id_chars	896:8:22251:22279	4684028	0	True				
ANR	4684160	AndExpression	! ISIDCHAR ( c ) && only_id_chars		4684028	0		&&			
ANR	4684161	UnaryOperationExpression	! ISIDCHAR ( c )		4684028	0					
ANR	4684162	UnaryOperator	!		4684028	0					
ANR	4684163	CallExpression	ISIDCHAR ( c )		4684028	1					
ANR	4684164	Callee	ISIDCHAR		4684028	0					
ANR	4684165	Identifier	ISIDCHAR		4684028	0					
ANR	4684166	ArgumentList	c		4684028	1					
ANR	4684167	Argument	c		4684028	0					
ANR	4684168	Identifier	c		4684028	0					
ANR	4684169	Identifier	only_id_chars		4684028	1					
ANR	4684170	CompoundStatement		31:40:588:588	4684028	1					
ANR	4684171	ExpressionStatement	tvalue = name	897:5:22290:22303	4684028	0	True				
ANR	4684172	AssignmentExpression	tvalue = name		4684028	0		=			
ANR	4684173	Identifier	tvalue		4684028	0					
ANR	4684174	Identifier	name		4684028	1					
ANR	4684175	GotoStatement	goto tryagain ;	898:5:22310:22323	4684028	1	True				
ANR	4684176	Identifier	tryagain		4684028	0					
ANR	4684177	IfStatement	if ( * value == ')' )		4684028	3					
ANR	4684178	Condition	* value == ')'	902:7:22344:22356	4684028	0	True				
ANR	4684179	EqualityExpression	* value == ')'		4684028	0		==			
ANR	4684180	UnaryOperationExpression	* value		4684028	0					
ANR	4684181	UnaryOperator	*		4684028	0					
ANR	4684182	Identifier	value		4684028	1					
ANR	4684183	PrimaryExpression	')'		4684028	1					
ANR	4684184	CompoundStatement		37:23:665:665	4684028	1					
ANR	4684185	ExpressionStatement	right = value	903:4:22366:22379	4684028	0	True				
ANR	4684186	AssignmentExpression	right = value		4684028	0		=			
ANR	4684187	Identifier	right		4684028	0					
ANR	4684188	Identifier	value		4684028	1					
ANR	4684189	BreakStatement	break ;	904:4:22385:22390	4684028	1	True				
ANR	4684190	ElseStatement	else		4684028	0					
ANR	4684191	CompoundStatement		40:10:707:707	4684028	0					
ANR	4684192	ExpressionStatement	tvalue = name	906:4:22408:22421	4684028	0	True				
ANR	4684193	AssignmentExpression	tvalue = name		4684028	0		=			
ANR	4684194	Identifier	tvalue		4684028	0					
ANR	4684195	Identifier	name		4684028	1					
ANR	4684196	GotoStatement	goto tryagain ;	907:4:22427:22440	4684028	1	True				
ANR	4684197	Identifier	tryagain		4684028	0					
ANR	4684198	ElseStatement	else		4684028	0					
ANR	4684199	CompoundStatement		44:9:761:761	4684028	0					
ANR	4684200	ExpressionStatement	tvalue = value	910:3:22461:22475	4684028	0	True				
ANR	4684201	AssignmentExpression	tvalue = value		4684028	0		=			
ANR	4684202	Identifier	tvalue		4684028	0					
ANR	4684203	Identifier	value		4684028	1					
ANR	4684204	GotoStatement	goto tryagain ;	911:3:22480:22493	4684028	1	True				
ANR	4684205	Identifier	tryagain		4684028	0					
ANR	4684206	ExpressionStatement	* left_end = '\\0'	915:1:22504:22520	4684028	8	True				
ANR	4684207	AssignmentExpression	* left_end = '\\0'		4684028	0		=			
ANR	4684208	UnaryOperationExpression	* left_end		4684028	0					
ANR	4684209	UnaryOperator	*		4684028	0					
ANR	4684210	Identifier	left_end		4684028	1					
ANR	4684211	PrimaryExpression	'\\0'		4684028	1					
ANR	4684212	ExpressionStatement	* right ++ = '\\0'	916:1:22523:22538	4684028	9	True				
ANR	4684213	AssignmentExpression	* right ++ = '\\0'		4684028	0		=			
ANR	4684214	UnaryOperationExpression	* right ++		4684028	0					
ANR	4684215	UnaryOperator	*		4684028	0					
ANR	4684216	PostIncDecOperationExpression	right ++		4684028	1					
ANR	4684217	Identifier	right		4684028	0					
ANR	4684218	IncDec	++		4684028	1					
ANR	4684219	PrimaryExpression	'\\0'		4684028	1					
ANR	4684220	ExpressionStatement	* leftp = left	918:1:22542:22555	4684028	10	True				
ANR	4684221	AssignmentExpression	* leftp = left		4684028	0		=			
ANR	4684222	UnaryOperationExpression	* leftp		4684028	0					
ANR	4684223	UnaryOperator	*		4684028	0					
ANR	4684224	Identifier	leftp		4684028	1					
ANR	4684225	Identifier	left		4684028	1					
ANR	4684226	ExpressionStatement	* namep = name	919:1:22558:22571	4684028	11	True				
ANR	4684227	AssignmentExpression	* namep = name		4684028	0		=			
ANR	4684228	UnaryOperationExpression	* namep		4684028	0					
ANR	4684229	UnaryOperator	*		4684028	0					
ANR	4684230	Identifier	namep		4684028	1					
ANR	4684231	Identifier	name		4684028	1					
ANR	4684232	ExpressionStatement	* rightp = right	920:1:22574:22589	4684028	12	True				
ANR	4684233	AssignmentExpression	* rightp = right		4684028	0		=			
ANR	4684234	UnaryOperationExpression	* rightp		4684028	0					
ANR	4684235	UnaryOperator	*		4684028	0					
ANR	4684236	Identifier	rightp		4684028	1					
ANR	4684237	Identifier	right		4684028	1					
ANR	4684238	ReturnStatement	return ( 1 ) ;	922:1:22593:22604	4684028	13	True				
ANR	4684239	PrimaryExpression	1		4684028	0					
ANR	4684240	ReturnType	int		4684028	1					
ANR	4684241	Identifier	find_special_config_macro		4684028	2					
ANR	4684242	ParameterList	"const char * prefix , bool only_id_chars , register char * value , register char * * leftp , register char * * namep , register char * * rightp"		4684028	3					
ANR	4684243	Parameter	const char * prefix	864:27:21558:21575	4684028	0	True				
ANR	4684244	ParameterType	const char *		4684028	0					
ANR	4684245	Identifier	prefix		4684028	1					
ANR	4684246	Parameter	bool only_id_chars	864:47:21578:21595	4684028	1	True				
ANR	4684247	ParameterType	bool		4684028	0					
ANR	4684248	Identifier	only_id_chars		4684028	1					
ANR	4684249	Parameter	register char * value	864:67:21598:21617	4684028	2	True				
ANR	4684250	ParameterType	register char *		4684028	0					
ANR	4684251	Identifier	value		4684028	1					
ANR	4684252	Parameter	register char * * leftp	865:2:21623:21643	4684028	3	True				
ANR	4684253	ParameterType	register char * *		4684028	0					
ANR	4684254	Identifier	leftp		4684028	1					
ANR	4684255	Parameter	register char * * namep	865:25:21646:21666	4684028	4	True				
ANR	4684256	ParameterType	register char * *		4684028	0					
ANR	4684257	Identifier	namep		4684028	1					
ANR	4684258	Parameter	register char * * rightp	865:48:21669:21690	4684028	5	True				
ANR	4684259	ParameterType	register char * *		4684028	0					
ANR	4684260	Identifier	rightp		4684028	1					
ANR	4684261	CFGEntryNode	ENTRY		4684028		True				
ANR	4684262	CFGExitNode	EXIT		4684028		True				
ANR	4684263	Symbol	tvalue		4684028						
ANR	4684264	Symbol	NULL		4684028						
ANR	4684265	Symbol	c		4684028						
ANR	4684266	Symbol	prefix		4684028						
ANR	4684267	Symbol	leftp		4684028						
ANR	4684268	Symbol	prefix_len		4684028						
ANR	4684269	Symbol	* value ++		4684028						
ANR	4684270	Symbol	only_id_chars		4684028						
ANR	4684271	Symbol	right		4684028						
ANR	4684272	Symbol	strlen		4684028						
ANR	4684273	Symbol	ISIDCHAR		4684028						
ANR	4684274	Symbol	* leftp		4684028						
ANR	4684275	Symbol	left_end		4684028						
ANR	4684276	Symbol	* namep		4684028						
ANR	4684277	Symbol	* rightp		4684028						
ANR	4684278	Symbol	rightp		4684028						
ANR	4684279	Symbol	left		4684028						
ANR	4684280	Symbol	* left_end		4684028						
ANR	4684281	Symbol	* value		4684028						
ANR	4684282	Symbol	name		4684028						
ANR	4684283	Symbol	* right ++		4684028						
ANR	4684284	Symbol	value		4684028						
ANR	4684285	Symbol	namep		4684028						
ANR	4684286	Function	find_config_macro	926:0:22664:26393							
ANR	4684287	FunctionDef	"find_config_macro (register char * value , register char * * leftp , register char * * namep , register char * * rightp , const char * self , bool getdollardollar , int search_pos)"		4684286	0					
ANR	4684288	CompoundStatement		931:0:22845:26393	4684286	0					
ANR	4684289	IdentifierDeclStatement	"char * left , * left_end , * name , * right ;"	932:1:22848:22884	4684286	0	True				
ANR	4684290	IdentifierDecl	* left		4684286	0					
ANR	4684291	IdentifierDeclType	char *		4684286	0					
ANR	4684292	Identifier	left		4684286	1					
ANR	4684293	IdentifierDecl	* left_end		4684286	1					
ANR	4684294	IdentifierDeclType	char *		4684286	0					
ANR	4684295	Identifier	left_end		4684286	1					
ANR	4684296	IdentifierDecl	* name		4684286	2					
ANR	4684297	IdentifierDeclType	char *		4684286	0					
ANR	4684298	Identifier	name		4684286	1					
ANR	4684299	IdentifierDecl	* right		4684286	3					
ANR	4684300	IdentifierDeclType	char *		4684286	0					
ANR	4684301	Identifier	right		4684286	1					
ANR	4684302	IdentifierDeclStatement	char * tvalue ;	933:1:22887:22899	4684286	1	True				
ANR	4684303	IdentifierDecl	* tvalue		4684286	0					
ANR	4684304	IdentifierDeclType	char *		4684286	0					
ANR	4684305	Identifier	tvalue		4684286	1					
ANR	4684306	ExpressionStatement	tvalue = value + search_pos	935:1:22903:22930	4684286	2	True				
ANR	4684307	AssignmentExpression	tvalue = value + search_pos		4684286	0		=			
ANR	4684308	Identifier	tvalue		4684286	0					
ANR	4684309	AdditiveExpression	value + search_pos		4684286	1		+			
ANR	4684310	Identifier	value		4684286	0					
ANR	4684311	Identifier	search_pos		4684286	1					
ANR	4684312	ExpressionStatement	left = value	936:1:22933:22945	4684286	3	True				
ANR	4684313	AssignmentExpression	left = value		4684286	0		=			
ANR	4684314	Identifier	left		4684286	0					
ANR	4684315	Identifier	value		4684286	1					
ANR	4684316	ForStatement	for ( ; ; )		4684286	4					
ANR	4684317	CompoundStatement		8:9:111:111	4684286	0					
ANR	4684318	Label	tryagain :	939:0:22959:22967	4684286	0	True				
ANR	4684319	Identifier	tryagain		4684286	0					
ANR	4684320	IfStatement	if ( tvalue )		4684286	1					
ANR	4684321	Condition	tvalue	940:6:22975:22980	4684286	0	True				
ANR	4684322	Identifier	tvalue		4684286	0					
ANR	4684323	CompoundStatement		10:14:137:137	4684286	1					
ANR	4684324	Statement	value	941:3:22988:22992	4684286	0	True				
ANR	4684325	Statement	=	941:9:22994:22994	4684286	1	True				
ANR	4684326	Statement	const_cast	941:11:22996:23005	4684286	2	True				
ANR	4684327	Statement	<	941:21:23006:23006	4684286	3	True				
ANR	4684328	Statement	char	941:22:23007:23010	4684286	4	True				
ANR	4684329	Statement	*	941:27:23012:23012	4684286	5	True				
ANR	4684330	Statement	>	941:28:23013:23013	4684286	6	True				
ANR	4684331	ExpressionStatement	"strchr ( tvalue , '$' )"	941:29:23014:23037	4684286	7	True				
ANR	4684332	CallExpression	"strchr ( tvalue , '$' )"		4684286	0					
ANR	4684333	Callee	strchr		4684286	0					
ANR	4684334	Identifier	strchr		4684286	0					
ANR	4684335	ArgumentList	tvalue		4684286	1					
ANR	4684336	Argument	tvalue		4684286	0					
ANR	4684337	Identifier	tvalue		4684286	0					
ANR	4684338	Argument	'$'		4684286	1					
ANR	4684339	PrimaryExpression	'$'		4684286	0					
ANR	4684340	IfStatement	if ( value == NULL )		4684286	2					
ANR	4684341	Condition	value == NULL	944:6:23052:23064	4684286	0	True				
ANR	4684342	EqualityExpression	value == NULL		4684286	0		==			
ANR	4684343	Identifier	value		4684286	0					
ANR	4684344	Identifier	NULL		4684286	1					
ANR	4684345	CompoundStatement		14:22:222:222	4684286	1					
ANR	4684346	ReturnStatement	return ( 0 ) ;	945:3:23073:23084	4684286	0	True				
ANR	4684347	PrimaryExpression	0		4684286	0					
ANR	4684348	IfStatement	if ( getdollardollar )		4684286	3					
ANR	4684349	Condition	getdollardollar	954:7:23386:23400	4684286	0	True				
ANR	4684350	Identifier	getdollardollar		4684286	0					
ANR	4684351	CompoundStatement		24:25:558:558	4684286	1					
ANR	4684352	IfStatement	if ( * ++ value != '$' )		4684286	0					
ANR	4684353	Condition	* ++ value != '$'	955:8:23414:23428	4684286	0	True				
ANR	4684354	EqualityExpression	* ++ value != '$'		4684286	0		!=			
ANR	4684355	UnaryOperationExpression	* ++ value		4684286	0					
ANR	4684356	UnaryOperator	*		4684286	0					
ANR	4684357	UnaryExpression	++ value		4684286	1					
ANR	4684358	IncDec	++		4684286	0					
ANR	4684359	Identifier	value		4684286	1					
ANR	4684360	PrimaryExpression	'$'		4684286	1					
ANR	4684361	CompoundStatement		25:26:586:586	4684286	1					
ANR	4684362	ExpressionStatement	tvalue = value	957:4:23468:23482	4684286	0	True				
ANR	4684363	AssignmentExpression	tvalue = value		4684286	0		=			
ANR	4684364	Identifier	tvalue		4684286	0					
ANR	4684365	Identifier	value		4684286	1					
ANR	4684366	GotoStatement	goto tryagain ;	958:4:23488:23501	4684286	1	True				
ANR	4684367	Identifier	tryagain		4684286	0					
ANR	4684368	ElseStatement	else		4684286	0					
ANR	4684369	CompoundStatement		30:9:671:671	4684286	0					
ANR	4684370	IfStatement	if ( ( * ( value + sizeof ( char ) ) ) == '$' )		4684286	0					
ANR	4684371	Condition	( * ( value + sizeof ( char ) ) ) == '$'	963:8:23599:23630	4684286	0	True				
ANR	4684372	EqualityExpression	( * ( value + sizeof ( char ) ) ) == '$'		4684286	0		==			
ANR	4684373	UnaryOperationExpression	* ( value + sizeof ( char ) )		4684286	0					
ANR	4684374	UnaryOperator	*		4684286	0					
ANR	4684375	AdditiveExpression	value + sizeof ( char )		4684286	1		+			
ANR	4684376	Identifier	value		4684286	0					
ANR	4684377	SizeofExpression	sizeof ( char )		4684286	1					
ANR	4684378	Sizeof	sizeof		4684286	0					
ANR	4684379	SizeofOperand	char		4684286	1					
ANR	4684380	PrimaryExpression	'$'		4684286	1					
ANR	4684381	CompoundStatement		33:43:788:788	4684286	1					
ANR	4684382	ExpressionStatement	value ++	964:4:23640:23647	4684286	0	True				
ANR	4684383	PostIncDecOperationExpression	value ++		4684286	0					
ANR	4684384	Identifier	value		4684286	0					
ANR	4684385	IncDec	++		4684286	1					
ANR	4684386	ExpressionStatement	value ++	965:4:23671:23678	4684286	1	True				
ANR	4684387	PostIncDecOperationExpression	value ++		4684286	0					
ANR	4684388	Identifier	value		4684286	0					
ANR	4684389	IncDec	++		4684286	1					
ANR	4684390	ExpressionStatement	tvalue = value	966:4:23704:23718	4684286	2	True				
ANR	4684391	AssignmentExpression	tvalue = value		4684286	0		=			
ANR	4684392	Identifier	tvalue		4684286	0					
ANR	4684393	Identifier	value		4684286	1					
ANR	4684394	GotoStatement	goto tryagain ;	967:4:23724:23737	4684286	3	True				
ANR	4684395	Identifier	tryagain		4684286	0					
ANR	4684396	IfStatement	if ( * ++ value == '(' )		4684286	4					
ANR	4684397	Condition	* ++ value == '('	971:6:23755:23769	4684286	0	True				
ANR	4684398	EqualityExpression	* ++ value == '('		4684286	0		==			
ANR	4684399	UnaryOperationExpression	* ++ value		4684286	0					
ANR	4684400	UnaryOperator	*		4684286	0					
ANR	4684401	UnaryExpression	++ value		4684286	1					
ANR	4684402	IncDec	++		4684286	0					
ANR	4684403	Identifier	value		4684286	1					
ANR	4684404	PrimaryExpression	'('		4684286	1					
ANR	4684405	CompoundStatement		41:24:927:927	4684286	1					
ANR	4684406	IfStatement	if ( getdollardollar && * value != '\\0' && value [ 1 ] == '[' )		4684286	0					
ANR	4684407	Condition	getdollardollar && * value != '\\0' && value [ 1 ] == '['	972:7:23782:23833	4684286	0	True				
ANR	4684408	AndExpression	getdollardollar && * value != '\\0' && value [ 1 ] == '['		4684286	0		&&			
ANR	4684409	Identifier	getdollardollar		4684286	0					
ANR	4684410	AndExpression	* value != '\\0' && value [ 1 ] == '['		4684286	1		&&			
ANR	4684411	EqualityExpression	* value != '\\0'		4684286	0		!=			
ANR	4684412	UnaryOperationExpression	* value		4684286	0					
ANR	4684413	UnaryOperator	*		4684286	0					
ANR	4684414	Identifier	value		4684286	1					
ANR	4684415	PrimaryExpression	'\\0'		4684286	1					
ANR	4684416	EqualityExpression	value [ 1 ] == '['		4684286	1		==			
ANR	4684417	ArrayIndexing	value [ 1 ]		4684286	0					
ANR	4684418	Identifier	value		4684286	0					
ANR	4684419	PrimaryExpression	1		4684286	1					
ANR	4684420	PrimaryExpression	'['		4684286	1					
ANR	4684421	CompoundStatement		49:4:1254:1293	4684286	1					
ANR	4684422	IdentifierDeclStatement	"char * end_marker = strstr ( value , ""])"" ) ;"	979:4:24100:24139	4684286	0	True				
ANR	4684423	IdentifierDecl	"* end_marker = strstr ( value , ""])"" )"		4684286	0					
ANR	4684424	IdentifierDeclType	char *		4684286	0					
ANR	4684425	Identifier	end_marker		4684286	1					
ANR	4684426	AssignmentExpression	"* end_marker = strstr ( value , ""])"" )"		4684286	2		=			
ANR	4684427	Identifier	end_marker		4684286	0					
ANR	4684428	CallExpression	"strstr ( value , ""])"" )"		4684286	1					
ANR	4684429	Callee	strstr		4684286	0					
ANR	4684430	Identifier	strstr		4684286	0					
ANR	4684431	ArgumentList	value		4684286	1					
ANR	4684432	Argument	value		4684286	0					
ANR	4684433	Identifier	value		4684286	0					
ANR	4684434	Argument	"""])"""		4684286	1					
ANR	4684435	PrimaryExpression	"""])"""		4684286	0					
ANR	4684436	IfStatement	if ( end_marker == NULL )		4684286	1					
ANR	4684437	Condition	end_marker == NULL	980:8:24149:24166	4684286	0	True				
ANR	4684438	EqualityExpression	end_marker == NULL		4684286	0		==			
ANR	4684439	Identifier	end_marker		4684286	0					
ANR	4684440	Identifier	NULL		4684286	1					
ANR	4684441	CompoundStatement		50:29:1324:1324	4684286	1					
ANR	4684442	ExpressionStatement	tvalue = value	981:5:24177:24191	4684286	0	True				
ANR	4684443	AssignmentExpression	tvalue = value		4684286	0		=			
ANR	4684444	Identifier	tvalue		4684286	0					
ANR	4684445	Identifier	value		4684286	1					
ANR	4684446	GotoStatement	goto tryagain ;	982:5:24198:24211	4684286	1	True				
ANR	4684447	Identifier	tryagain		4684286	0					
ANR	4684448	ExpressionStatement	left_end = value - 2	985:4:24224:24244	4684286	2	True				
ANR	4684449	AssignmentExpression	left_end = value - 2		4684286	0		=			
ANR	4684450	Identifier	left_end		4684286	0					
ANR	4684451	AdditiveExpression	value - 2		4684286	1		-			
ANR	4684452	Identifier	value		4684286	0					
ANR	4684453	PrimaryExpression	2		4684286	1					
ANR	4684454	ExpressionStatement	name = ++ value	986:4:24250:24264	4684286	3	True				
ANR	4684455	AssignmentExpression	name = ++ value		4684286	0		=			
ANR	4684456	Identifier	name		4684286	0					
ANR	4684457	UnaryExpression	++ value		4684286	1					
ANR	4684458	IncDec	++		4684286	0					
ANR	4684459	Identifier	value		4684286	1					
ANR	4684460	ExpressionStatement	right = end_marker + 1	987:4:24270:24292	4684286	4	True				
ANR	4684461	AssignmentExpression	right = end_marker + 1		4684286	0		=			
ANR	4684462	Identifier	right		4684286	0					
ANR	4684463	AdditiveExpression	end_marker + 1		4684286	1		+			
ANR	4684464	Identifier	end_marker		4684286	0					
ANR	4684465	PrimaryExpression	1		4684286	1					
ANR	4684466	BreakStatement	break ;	988:4:24298:24303	4684286	5	True				
ANR	4684467	ElseStatement	else		4684286	0					
ANR	4684468	CompoundStatement		60:10:1470:1470	4684286	0					
ANR	4684469	IfStatement	if ( getdollardollar )		4684286	0					
ANR	4684470	Condition	getdollardollar	998:9:24633:24647	4684286	0	True				
ANR	4684471	Identifier	getdollardollar		4684286	0					
ANR	4684472	CompoundStatement		68:27:1805:1805	4684286	1					
ANR	4684473	ExpressionStatement	left_end = value - 2	999:5:24658:24678	4684286	0	True				
ANR	4684474	AssignmentExpression	left_end = value - 2		4684286	0		=			
ANR	4684475	Identifier	left_end		4684286	0					
ANR	4684476	AdditiveExpression	value - 2		4684286	1		-			
ANR	4684477	Identifier	value		4684286	0					
ANR	4684478	PrimaryExpression	2		4684286	1					
ANR	4684479	ElseStatement	else		4684286	0					
ANR	4684480	CompoundStatement		70:11:1845:1845	4684286	0					
ANR	4684481	ExpressionStatement	left_end = value - 1	1001:5:24698:24718	4684286	0	True				
ANR	4684482	AssignmentExpression	left_end = value - 1		4684286	0		=			
ANR	4684483	Identifier	left_end		4684286	0					
ANR	4684484	AdditiveExpression	value - 1		4684286	1		-			
ANR	4684485	Identifier	value		4684286	0					
ANR	4684486	PrimaryExpression	1		4684286	1					
ANR	4684487	ExpressionStatement	name = ++ value	1003:4:24730:24744	4684286	1	True				
ANR	4684488	AssignmentExpression	name = ++ value		4684286	0		=			
ANR	4684489	Identifier	name		4684286	0					
ANR	4684490	UnaryExpression	++ value		4684286	1					
ANR	4684491	IncDec	++		4684286	0					
ANR	4684492	Identifier	value		4684286	1					
ANR	4684493	WhileStatement	while ( * value && * value != ')' )		4684286	2					
ANR	4684494	Condition	* value && * value != ')'	1004:11:24757:24779	4684286	0	True				
ANR	4684495	AndExpression	* value && * value != ')'		4684286	0		&&			
ANR	4684496	UnaryOperationExpression	* value		4684286	0					
ANR	4684497	UnaryOperator	*		4684286	0					
ANR	4684498	Identifier	value		4684286	1					
ANR	4684499	EqualityExpression	* value != ')'		4684286	1		!=			
ANR	4684500	UnaryOperationExpression	* value		4684286	0					
ANR	4684501	UnaryOperator	*		4684286	0					
ANR	4684502	Identifier	value		4684286	1					
ANR	4684503	PrimaryExpression	')'		4684286	1					
ANR	4684504	CompoundStatement		75:5:1944:1961	4684286	1					
ANR	4684505	IdentifierDeclStatement	char c = * value ++ ;	1005:5:24790:24807	4684286	0	True				
ANR	4684506	IdentifierDecl	c = * value ++		4684286	0					
ANR	4684507	IdentifierDeclType	char		4684286	0					
ANR	4684508	Identifier	c		4684286	1					
ANR	4684509	AssignmentExpression	c = * value ++		4684286	2		=			
ANR	4684510	Identifier	c		4684286	0					
ANR	4684511	UnaryOperationExpression	* value ++		4684286	1					
ANR	4684512	UnaryOperator	*		4684286	0					
ANR	4684513	PostIncDecOperationExpression	value ++		4684286	1					
ANR	4684514	Identifier	value		4684286	0					
ANR	4684515	IncDec	++		4684286	1					
ANR	4684516	IfStatement	if ( getdollardollar )		4684286	1					
ANR	4684517	Condition	getdollardollar	1006:9:24818:24832	4684286	0	True				
ANR	4684518	Identifier	getdollardollar		4684286	0					
ANR	4684519	CompoundStatement		76:27:1990:1990	4684286	1					
ANR	4684520	IfStatement	if ( ! ISDDCHAR ( c ) )		4684286	0					
ANR	4684521	Condition	! ISDDCHAR ( c )	1007:10:24848:24859	4684286	0	True				
ANR	4684522	UnaryOperationExpression	! ISDDCHAR ( c )		4684286	0					
ANR	4684523	UnaryOperator	!		4684286	0					
ANR	4684524	CallExpression	ISDDCHAR ( c )		4684286	1					
ANR	4684525	Callee	ISDDCHAR		4684286	0					
ANR	4684526	Identifier	ISDDCHAR		4684286	0					
ANR	4684527	ArgumentList	c		4684286	1					
ANR	4684528	Argument	c		4684286	0					
ANR	4684529	Identifier	c		4684286	0					
ANR	4684530	CompoundStatement		77:25:2017:2017	4684286	1					
ANR	4684531	ExpressionStatement	tvalue = name	1008:7:24872:24885	4684286	0	True				
ANR	4684532	AssignmentExpression	tvalue = name		4684286	0		=			
ANR	4684533	Identifier	tvalue		4684286	0					
ANR	4684534	Identifier	name		4684286	1					
ANR	4684535	GotoStatement	goto tryagain ;	1009:7:24894:24907	4684286	1	True				
ANR	4684536	Identifier	tryagain		4684286	0					
ANR	4684537	ElseStatement	else		4684286	0					
ANR	4684538	CompoundStatement		81:12:2083:2083	4684286	0					
ANR	4684539	IfStatement	if ( ! ISIDCHAR ( c ) )		4684286	0					
ANR	4684540	Condition	! ISIDCHAR ( c )	1012:10:24941:24952	4684286	0	True				
ANR	4684541	UnaryOperationExpression	! ISIDCHAR ( c )		4684286	0					
ANR	4684542	UnaryOperator	!		4684286	0					
ANR	4684543	CallExpression	ISIDCHAR ( c )		4684286	1					
ANR	4684544	Callee	ISIDCHAR		4684286	0					
ANR	4684545	Identifier	ISIDCHAR		4684286	0					
ANR	4684546	ArgumentList	c		4684286	1					
ANR	4684547	Argument	c		4684286	0					
ANR	4684548	Identifier	c		4684286	0					
ANR	4684549	CompoundStatement		82:25:2110:2110	4684286	1					
ANR	4684550	ExpressionStatement	tvalue = name	1013:7:24965:24978	4684286	0	True				
ANR	4684551	AssignmentExpression	tvalue = name		4684286	0		=			
ANR	4684552	Identifier	tvalue		4684286	0					
ANR	4684553	Identifier	name		4684286	1					
ANR	4684554	GotoStatement	goto tryagain ;	1014:7:24987:25000	4684286	1	True				
ANR	4684555	Identifier	tryagain		4684286	0					
ANR	4684556	IfStatement	if ( * value == ')' )		4684286	3					
ANR	4684557	Condition	* value == ')'	1019:8:25032:25044	4684286	0	True				
ANR	4684558	EqualityExpression	* value == ')'		4684286	0		==			
ANR	4684559	UnaryOperationExpression	* value		4684286	0					
ANR	4684560	UnaryOperator	*		4684286	0					
ANR	4684561	Identifier	value		4684286	1					
ANR	4684562	PrimaryExpression	')'		4684286	1					
ANR	4684563	CompoundStatement		95:5:2481:2505	4684286	1					
ANR	4684564	IdentifierDeclStatement	int namelen = value - name ;	1025:5:25327:25351	4684286	0	True				
ANR	4684565	IdentifierDecl	namelen = value - name		4684286	0					
ANR	4684566	IdentifierDeclType	int		4684286	0					
ANR	4684567	Identifier	namelen		4684286	1					
ANR	4684568	AssignmentExpression	namelen = value - name		4684286	2		=			
ANR	4684569	Identifier	namelen		4684286	0					
ANR	4684570	AdditiveExpression	value - name		4684286	1		-			
ANR	4684571	Identifier	value		4684286	0					
ANR	4684572	Identifier	name		4684286	1					
ANR	4684573	IfStatement	"if ( ! self || ( strncasecmp ( name , self , namelen ) == MATCH && self [ namelen ] == '\\0' ) )"		4684286	1					
ANR	4684574	Condition	"! self || ( strncasecmp ( name , self , namelen ) == MATCH && self [ namelen ] == '\\0' )"	1026:9:25362:25442	4684286	0	True				
ANR	4684575	OrExpression	"! self || ( strncasecmp ( name , self , namelen ) == MATCH && self [ namelen ] == '\\0' )"		4684286	0		||			
ANR	4684576	UnaryOperationExpression	! self		4684286	0					
ANR	4684577	UnaryOperator	!		4684286	0					
ANR	4684578	Identifier	self		4684286	1					
ANR	4684579	AndExpression	"strncasecmp ( name , self , namelen ) == MATCH && self [ namelen ] == '\\0'"		4684286	1		&&			
ANR	4684580	EqualityExpression	"strncasecmp ( name , self , namelen ) == MATCH"		4684286	0		==			
ANR	4684581	CallExpression	"strncasecmp ( name , self , namelen )"		4684286	0					
ANR	4684582	Callee	strncasecmp		4684286	0					
ANR	4684583	Identifier	strncasecmp		4684286	0					
ANR	4684584	ArgumentList	name		4684286	1					
ANR	4684585	Argument	name		4684286	0					
ANR	4684586	Identifier	name		4684286	0					
ANR	4684587	Argument	self		4684286	1					
ANR	4684588	Identifier	self		4684286	0					
ANR	4684589	Argument	namelen		4684286	2					
ANR	4684590	Identifier	namelen		4684286	0					
ANR	4684591	Identifier	MATCH		4684286	1					
ANR	4684592	EqualityExpression	self [ namelen ] == '\\0'		4684286	1		==			
ANR	4684593	ArrayIndexing	self [ namelen ]		4684286	0					
ANR	4684594	Identifier	self		4684286	0					
ANR	4684595	Identifier	namelen		4684286	1					
ANR	4684596	PrimaryExpression	'\\0'		4684286	1					
ANR	4684597	CompoundStatement		96:93:2600:2600	4684286	1					
ANR	4684598	IfStatement	"if ( ! self && strncasecmp ( name , DOLLAR_ID , namelen ) == MATCH )"		4684286	0					
ANR	4684599	Condition	"! self && strncasecmp ( name , DOLLAR_ID , namelen ) == MATCH"	1037:11:25963:26015	4684286	0	True				
ANR	4684600	AndExpression	"! self && strncasecmp ( name , DOLLAR_ID , namelen ) == MATCH"		4684286	0		&&			
ANR	4684601	UnaryOperationExpression	! self		4684286	0					
ANR	4684602	UnaryOperator	!		4684286	0					
ANR	4684603	Identifier	self		4684286	1					
ANR	4684604	EqualityExpression	"strncasecmp ( name , DOLLAR_ID , namelen ) == MATCH"		4684286	1		==			
ANR	4684605	CallExpression	"strncasecmp ( name , DOLLAR_ID , namelen )"		4684286	0					
ANR	4684606	Callee	strncasecmp		4684286	0					
ANR	4684607	Identifier	strncasecmp		4684286	0					
ANR	4684608	ArgumentList	name		4684286	1					
ANR	4684609	Argument	name		4684286	0					
ANR	4684610	Identifier	name		4684286	0					
ANR	4684611	Argument	DOLLAR_ID		4684286	1					
ANR	4684612	Identifier	DOLLAR_ID		4684286	0					
ANR	4684613	Argument	namelen		4684286	2					
ANR	4684614	Identifier	namelen		4684286	0					
ANR	4684615	Identifier	MATCH		4684286	1					
ANR	4684616	CompoundStatement		107:67:3173:3173	4684286	1					
ANR	4684617	ExpressionStatement	tvalue = name	1038:7:26028:26041	4684286	0	True				
ANR	4684618	AssignmentExpression	tvalue = name		4684286	0		=			
ANR	4684619	Identifier	tvalue		4684286	0					
ANR	4684620	Identifier	name		4684286	1					
ANR	4684621	GotoStatement	goto tryagain ;	1039:7:26050:26063	4684286	1	True				
ANR	4684622	Identifier	tryagain		4684286	0					
ANR	4684623	ExpressionStatement	right = value	1041:6:26079:26092	4684286	1	True				
ANR	4684624	AssignmentExpression	right = value		4684286	0		=			
ANR	4684625	Identifier	right		4684286	0					
ANR	4684626	Identifier	value		4684286	1					
ANR	4684627	BreakStatement	break ;	1042:6:26100:26105	4684286	2	True				
ANR	4684628	ElseStatement	else		4684286	0					
ANR	4684629	CompoundStatement		113:12:3273:3273	4684286	0					
ANR	4684630	ExpressionStatement	tvalue = name	1044:6:26127:26140	4684286	0	True				
ANR	4684631	AssignmentExpression	tvalue = name		4684286	0		=			
ANR	4684632	Identifier	tvalue		4684286	0					
ANR	4684633	Identifier	name		4684286	1					
ANR	4684634	GotoStatement	goto tryagain ;	1045:6:26148:26161	4684286	1	True				
ANR	4684635	Identifier	tryagain		4684286	0					
ANR	4684636	ElseStatement	else		4684286	0					
ANR	4684637	CompoundStatement		117:11:3335:3335	4684286	0					
ANR	4684638	ExpressionStatement	tvalue = name	1048:5:26188:26201	4684286	0	True				
ANR	4684639	AssignmentExpression	tvalue = name		4684286	0		=			
ANR	4684640	Identifier	tvalue		4684286	0					
ANR	4684641	Identifier	name		4684286	1					
ANR	4684642	GotoStatement	goto tryagain ;	1049:5:26208:26221	4684286	1	True				
ANR	4684643	Identifier	tryagain		4684286	0					
ANR	4684644	ElseStatement	else		4684286	0					
ANR	4684645	CompoundStatement		122:9:3397:3397	4684286	0					
ANR	4684646	ExpressionStatement	tvalue = value	1053:3:26248:26262	4684286	0	True				
ANR	4684647	AssignmentExpression	tvalue = value		4684286	0		=			
ANR	4684648	Identifier	tvalue		4684286	0					
ANR	4684649	Identifier	value		4684286	1					
ANR	4684650	GotoStatement	goto tryagain ;	1054:3:26267:26280	4684286	1	True				
ANR	4684651	Identifier	tryagain		4684286	0					
ANR	4684652	ExpressionStatement	* left_end = '\\0'	1058:1:26291:26307	4684286	5	True				
ANR	4684653	AssignmentExpression	* left_end = '\\0'		4684286	0		=			
ANR	4684654	UnaryOperationExpression	* left_end		4684286	0					
ANR	4684655	UnaryOperator	*		4684286	0					
ANR	4684656	Identifier	left_end		4684286	1					
ANR	4684657	PrimaryExpression	'\\0'		4684286	1					
ANR	4684658	ExpressionStatement	* right ++ = '\\0'	1059:1:26310:26325	4684286	6	True				
ANR	4684659	AssignmentExpression	* right ++ = '\\0'		4684286	0		=			
ANR	4684660	UnaryOperationExpression	* right ++		4684286	0					
ANR	4684661	UnaryOperator	*		4684286	0					
ANR	4684662	PostIncDecOperationExpression	right ++		4684286	1					
ANR	4684663	Identifier	right		4684286	0					
ANR	4684664	IncDec	++		4684286	1					
ANR	4684665	PrimaryExpression	'\\0'		4684286	1					
ANR	4684666	ExpressionStatement	* leftp = left	1061:1:26329:26342	4684286	7	True				
ANR	4684667	AssignmentExpression	* leftp = left		4684286	0		=			
ANR	4684668	UnaryOperationExpression	* leftp		4684286	0					
ANR	4684669	UnaryOperator	*		4684286	0					
ANR	4684670	Identifier	leftp		4684286	1					
ANR	4684671	Identifier	left		4684286	1					
ANR	4684672	ExpressionStatement	* namep = name	1062:1:26345:26358	4684286	8	True				
ANR	4684673	AssignmentExpression	* namep = name		4684286	0		=			
ANR	4684674	UnaryOperationExpression	* namep		4684286	0					
ANR	4684675	UnaryOperator	*		4684286	0					
ANR	4684676	Identifier	namep		4684286	1					
ANR	4684677	Identifier	name		4684286	1					
ANR	4684678	ExpressionStatement	* rightp = right	1063:1:26361:26376	4684286	9	True				
ANR	4684679	AssignmentExpression	* rightp = right		4684286	0		=			
ANR	4684680	UnaryOperationExpression	* rightp		4684286	0					
ANR	4684681	UnaryOperator	*		4684286	0					
ANR	4684682	Identifier	rightp		4684286	1					
ANR	4684683	Identifier	right		4684286	1					
ANR	4684684	ReturnStatement	return ( 1 ) ;	1065:1:26380:26391	4684286	10	True				
ANR	4684685	PrimaryExpression	1		4684286	0					
ANR	4684686	ReturnType	int		4684286	1					
ANR	4684687	Identifier	find_config_macro		4684286	2					
ANR	4684688	ParameterList	"register char * value , register char * * leftp , register char * * namep , register char * * rightp , const char * self , bool getdollardollar , int search_pos"		4684286	3					
ANR	4684689	Parameter	register char * value	927:19:22687:22706	4684286	0	True				
ANR	4684690	ParameterType	register char *		4684286	0					
ANR	4684691	Identifier	value		4684286	1					
ANR	4684692	Parameter	register char * * leftp	927:41:22709:22729	4684286	1	True				
ANR	4684693	ParameterType	register char * *		4684286	0					
ANR	4684694	Identifier	leftp		4684286	1					
ANR	4684695	Parameter	register char * * namep	928:3:22736:22756	4684286	2	True				
ANR	4684696	ParameterType	register char * *		4684286	0					
ANR	4684697	Identifier	namep		4684286	1					
ANR	4684698	Parameter	register char * * rightp	928:26:22759:22780	4684286	3	True				
ANR	4684699	ParameterType	register char * *		4684286	0					
ANR	4684700	Identifier	rightp		4684286	1					
ANR	4684701	Parameter	const char * self	929:3:22786:22801	4684286	4	True				
ANR	4684702	ParameterType	const char *		4684286	0					
ANR	4684703	Identifier	self		4684286	1					
ANR	4684704	Parameter	bool getdollardollar	930:3:22807:22826	4684286	5	True				
ANR	4684705	ParameterType	bool		4684286	0					
ANR	4684706	Identifier	getdollardollar		4684286	1					
ANR	4684707	Parameter	int search_pos	930:25:22829:22842	4684286	6	True				
ANR	4684708	ParameterType	int		4684286	0					
ANR	4684709	Identifier	search_pos		4684286	1					
ANR	4684710	CFGEntryNode	ENTRY		4684286		True				
ANR	4684711	CFGExitNode	EXIT		4684286		True				
ANR	4684712	InfiniteForNode	true		4684286		True				
ANR	4684713	Symbol	ISDDCHAR		4684286						
ANR	4684714	Symbol	* ++ value		4684286						
ANR	4684715	Symbol	strncasecmp		4684286						
ANR	4684716	Symbol	namelen		4684286						
ANR	4684717	Symbol	end_marker		4684286						
ANR	4684718	Symbol	* ( value + sizeof ( char ) )		4684286						
ANR	4684719	Symbol	DOLLAR_ID		4684286						
ANR	4684720	Symbol	search_pos		4684286						
ANR	4684721	Symbol	ISIDCHAR		4684286						
ANR	4684722	Symbol	* leftp		4684286						
ANR	4684723	Symbol	left_end		4684286						
ANR	4684724	Symbol	* namep		4684286						
ANR	4684725	Symbol	rightp		4684286						
ANR	4684726	Symbol	getdollardollar		4684286						
ANR	4684727	Symbol	* left_end		4684286						
ANR	4684728	Symbol	* right ++		4684286						
ANR	4684729	Symbol	value		4684286						
ANR	4684730	Symbol	tvalue		4684286						
ANR	4684731	Symbol	NULL		4684286						
ANR	4684732	Symbol	c		4684286						
ANR	4684733	Symbol	* self		4684286						
ANR	4684734	Symbol	leftp		4684286						
ANR	4684735	Symbol	* value ++		4684286						
ANR	4684736	Symbol	right		4684286						
ANR	4684737	Symbol	* rightp		4684286						
ANR	4684738	Symbol	left		4684286						
ANR	4684739	Symbol	strstr		4684286						
ANR	4684740	Symbol	* value		4684286						
ANR	4684741	Symbol	* namelen		4684286						
ANR	4684742	Symbol	name		4684286						
ANR	4684743	Symbol	self		4684286						
ANR	4684744	Symbol	namep		4684286						
ANR	4684745	Symbol	MATCH		4684286						
ANR	4684746	Function	lookup_macro_lower	1075:0:26542:26839							
ANR	4684747	FunctionDef	"lookup_macro_lower (const char * name , BUCKET * * table , int table_size)"		4684746	0					
ANR	4684748	CompoundStatement		1077:0:26620:26839	4684746	0					
ANR	4684749	IdentifierDeclStatement	int loc ;	1078:1:26623:26633	4684746	0	True				
ANR	4684750	IdentifierDecl	loc		4684746	0					
ANR	4684751	IdentifierDeclType	int		4684746	0					
ANR	4684752	Identifier	loc		4684746	1					
ANR	4684753	Statement	register	1079:1:26636:26643	4684746	1	True				
ANR	4684754	IdentifierDeclStatement	BUCKET * ptr ;	1079:10:26645:26656	4684746	2	True				
ANR	4684755	IdentifierDecl	* ptr		4684746	0					
ANR	4684756	IdentifierDeclType	BUCKET *		4684746	0					
ANR	4684757	Identifier	ptr		4684746	1					
ANR	4684758	ExpressionStatement	"loc = condor_hash ( name , table_size )"	1081:1:26660:26697	4684746	3	True				
ANR	4684759	AssignmentExpression	"loc = condor_hash ( name , table_size )"		4684746	0		=			
ANR	4684760	Identifier	loc		4684746	0					
ANR	4684761	CallExpression	"condor_hash ( name , table_size )"		4684746	1					
ANR	4684762	Callee	condor_hash		4684746	0					
ANR	4684763	Identifier	condor_hash		4684746	0					
ANR	4684764	ArgumentList	name		4684746	1					
ANR	4684765	Argument	name		4684746	0					
ANR	4684766	Identifier	name		4684746	0					
ANR	4684767	Argument	table_size		4684746	1					
ANR	4684768	Identifier	table_size		4684746	0					
ANR	4684769	ForStatement	for ( ptr = table [ loc ] ; ptr ; ptr = ptr -> next )		4684746	4					
ANR	4684770	ForInit	ptr = table [ loc ] ;	1082:6:26705:26719	4684746	0	True				
ANR	4684771	AssignmentExpression	ptr = table [ loc ]		4684746	0		=			
ANR	4684772	Identifier	ptr		4684746	0					
ANR	4684773	ArrayIndexing	table [ loc ]		4684746	1					
ANR	4684774	Identifier	table		4684746	0					
ANR	4684775	Identifier	loc		4684746	1					
ANR	4684776	Condition	ptr	1082:22:26721:26723	4684746	1	True				
ANR	4684777	Identifier	ptr		4684746	0					
ANR	4684778	AssignmentExpression	ptr = ptr -> next	1082:27:26726:26738	4684746	2	True	=			
ANR	4684779	Identifier	ptr		4684746	0					
ANR	4684780	PtrMemberAccess	ptr -> next		4684746	1					
ANR	4684781	Identifier	ptr		4684746	0					
ANR	4684782	Identifier	next		4684746	1					
ANR	4684783	CompoundStatement		6:43:121:121	4684746	3					
ANR	4684784	IfStatement	"if ( ! strcmp ( name , ptr -> name ) )"		4684746	0					
ANR	4684785	Condition	"! strcmp ( name , ptr -> name )"	1083:6:26750:26772	4684746	0	True				
ANR	4684786	UnaryOperationExpression	"! strcmp ( name , ptr -> name )"		4684746	0					
ANR	4684787	UnaryOperator	!		4684746	0					
ANR	4684788	CallExpression	"strcmp ( name , ptr -> name )"		4684746	1					
ANR	4684789	Callee	strcmp		4684746	0					
ANR	4684790	Identifier	strcmp		4684746	0					
ANR	4684791	ArgumentList	name		4684746	1					
ANR	4684792	Argument	name		4684746	0					
ANR	4684793	Identifier	name		4684746	0					
ANR	4684794	Argument	ptr -> name		4684746	1					
ANR	4684795	PtrMemberAccess	ptr -> name		4684746	0					
ANR	4684796	Identifier	ptr		4684746	0					
ANR	4684797	Identifier	name		4684746	1					
ANR	4684798	CompoundStatement		7:32:155:155	4684746	1					
ANR	4684799	ExpressionStatement	ptr -> used = 1	1084:3:26781:26794	4684746	0	True				
ANR	4684800	AssignmentExpression	ptr -> used = 1		4684746	0		=			
ANR	4684801	PtrMemberAccess	ptr -> used		4684746	0					
ANR	4684802	Identifier	ptr		4684746	0					
ANR	4684803	Identifier	used		4684746	1					
ANR	4684804	PrimaryExpression	1		4684746	1					
ANR	4684805	ReturnStatement	return ptr -> value ;	1085:3:26799:26816	4684746	1	True				
ANR	4684806	PtrMemberAccess	ptr -> value		4684746	0					
ANR	4684807	Identifier	ptr		4684746	0					
ANR	4684808	Identifier	value		4684746	1					
ANR	4684809	ReturnStatement	return NULL ;	1088:1:26826:26837	4684746	5	True				
ANR	4684810	Identifier	NULL		4684746	0					
ANR	4684811	ReturnType	char *		4684746	1					
ANR	4684812	Identifier	lookup_macro_lower		4684746	2					
ANR	4684813	ParameterList	"const char * name , BUCKET * * table , int table_size"		4684746	3					
ANR	4684814	Parameter	const char * name	1076:20:26569:26584	4684746	0	True				
ANR	4684815	ParameterType	const char *		4684746	0					
ANR	4684816	Identifier	name		4684746	1					
ANR	4684817	Parameter	BUCKET * * table	1076:38:26587:26600	4684746	1	True				
ANR	4684818	ParameterType	BUCKET * *		4684746	0					
ANR	4684819	Identifier	table		4684746	1					
ANR	4684820	Parameter	int table_size	1076:54:26603:26616	4684746	2	True				
ANR	4684821	ParameterType	int		4684746	0					
ANR	4684822	Identifier	table_size		4684746	1					
ANR	4684823	CFGEntryNode	ENTRY		4684746		True				
ANR	4684824	CFGExitNode	EXIT		4684746		True				
ANR	4684825	Symbol	strcmp		4684746						
ANR	4684826	Symbol	table_size		4684746						
ANR	4684827	Symbol	loc		4684746						
ANR	4684828	Symbol	NULL		4684746						
ANR	4684829	Symbol	condor_hash		4684746						
ANR	4684830	Symbol	ptr -> name		4684746						
ANR	4684831	Symbol	* table		4684746						
ANR	4684832	Symbol	ptr -> used		4684746						
ANR	4684833	Symbol	* loc		4684746						
ANR	4684834	Symbol	ptr -> value		4684746						
ANR	4684835	Symbol	ptr		4684746						
ANR	4684836	Symbol	name		4684746						
ANR	4684837	Symbol	* ptr		4684746						
ANR	4684838	Symbol	table		4684746						
ANR	4684839	Symbol	ptr -> next		4684746						
ANR	4684840	Function	lookup_macro	1090:0:26841:27222							
ANR	4684841	FunctionDef	"lookup_macro (const char * name , BUCKET * * table , int table_size)"		4684840	0					
ANR	4684842	CompoundStatement		1092:0:26913:27222	4684840	0					
ANR	4684843	IdentifierDeclStatement	char tmp_name [ MAX_PARAM_LEN ] ;	1093:1:26916:26948	4684840	0	True				
ANR	4684844	IdentifierDecl	tmp_name [ MAX_PARAM_LEN ]		4684840	0					
ANR	4684845	IdentifierDeclType	char [ MAX_PARAM_LEN ]		4684840	0					
ANR	4684846	Identifier	tmp_name		4684840	1					
ANR	4684847	Identifier	MAX_PARAM_LEN		4684840	2					
ANR	4684848	ExpressionStatement	"snprintf ( tmp_name , MAX_PARAM_LEN , ""%s"" , name )"	1097:1:27067:27109	4684840	1	True				
ANR	4684849	CallExpression	"snprintf ( tmp_name , MAX_PARAM_LEN , ""%s"" , name )"		4684840	0					
ANR	4684850	Callee	snprintf		4684840	0					
ANR	4684851	Identifier	snprintf		4684840	0					
ANR	4684852	ArgumentList	tmp_name		4684840	1					
ANR	4684853	Argument	tmp_name		4684840	0					
ANR	4684854	Identifier	tmp_name		4684840	0					
ANR	4684855	Argument	MAX_PARAM_LEN		4684840	1					
ANR	4684856	Identifier	MAX_PARAM_LEN		4684840	0					
ANR	4684857	Argument	"""%s"""		4684840	2					
ANR	4684858	PrimaryExpression	"""%s"""		4684840	0					
ANR	4684859	Argument	name		4684840	3					
ANR	4684860	Identifier	name		4684840	0					
ANR	4684861	ExpressionStatement	tmp_name [ MAX_PARAM_LEN - 1 ] = '\\0'	1098:1:27112:27144	4684840	2	True				
ANR	4684862	AssignmentExpression	tmp_name [ MAX_PARAM_LEN - 1 ] = '\\0'		4684840	0		=			
ANR	4684863	ArrayIndexing	tmp_name [ MAX_PARAM_LEN - 1 ]		4684840	0					
ANR	4684864	Identifier	tmp_name		4684840	0					
ANR	4684865	AdditiveExpression	MAX_PARAM_LEN - 1		4684840	1		-			
ANR	4684866	Identifier	MAX_PARAM_LEN		4684840	0					
ANR	4684867	PrimaryExpression	1		4684840	1					
ANR	4684868	PrimaryExpression	'\\0'		4684840	1					
ANR	4684869	ExpressionStatement	strlwr ( tmp_name )	1099:1:27147:27165	4684840	3	True				
ANR	4684870	CallExpression	strlwr ( tmp_name )		4684840	0					
ANR	4684871	Callee	strlwr		4684840	0					
ANR	4684872	Identifier	strlwr		4684840	0					
ANR	4684873	ArgumentList	tmp_name		4684840	1					
ANR	4684874	Argument	tmp_name		4684840	0					
ANR	4684875	Identifier	tmp_name		4684840	0					
ANR	4684876	ReturnStatement	"return lookup_macro_lower ( tmp_name , table , table_size ) ;"	1100:1:27168:27220	4684840	4	True				
ANR	4684877	CallExpression	"lookup_macro_lower ( tmp_name , table , table_size )"		4684840	0					
ANR	4684878	Callee	lookup_macro_lower		4684840	0					
ANR	4684879	Identifier	lookup_macro_lower		4684840	0					
ANR	4684880	ArgumentList	tmp_name		4684840	1					
ANR	4684881	Argument	tmp_name		4684840	0					
ANR	4684882	Identifier	tmp_name		4684840	0					
ANR	4684883	Argument	table		4684840	1					
ANR	4684884	Identifier	table		4684840	0					
ANR	4684885	Argument	table_size		4684840	2					
ANR	4684886	Identifier	table_size		4684840	0					
ANR	4684887	ReturnType	char *		4684840	1					
ANR	4684888	Identifier	lookup_macro		4684840	2					
ANR	4684889	ParameterList	"const char * name , BUCKET * * table , int table_size"		4684840	3					
ANR	4684890	Parameter	const char * name	1091:14:26862:26877	4684840	0	True				
ANR	4684891	ParameterType	const char *		4684840	0					
ANR	4684892	Identifier	name		4684840	1					
ANR	4684893	Parameter	BUCKET * * table	1091:32:26880:26893	4684840	1	True				
ANR	4684894	ParameterType	BUCKET * *		4684840	0					
ANR	4684895	Identifier	table		4684840	1					
ANR	4684896	Parameter	int table_size	1091:48:26896:26909	4684840	2	True				
ANR	4684897	ParameterType	int		4684840	0					
ANR	4684898	Identifier	table_size		4684840	1					
ANR	4684899	CFGEntryNode	ENTRY		4684840		True				
ANR	4684900	CFGExitNode	EXIT		4684840		True				
ANR	4684901	Symbol	table_size		4684840						
ANR	4684902	Symbol	lookup_macro_lower		4684840						
ANR	4684903	Symbol	name		4684840						
ANR	4684904	Symbol	MAX_PARAM_LEN		4684840						
ANR	4684905	Symbol	table		4684840						
ANR	4684906	Symbol	tmp_name		4684840						
ANR	4684907	Symbol	* MAX_PARAM_LEN		4684840						
ANR	4684908	Symbol	* tmp_name		4684840						
