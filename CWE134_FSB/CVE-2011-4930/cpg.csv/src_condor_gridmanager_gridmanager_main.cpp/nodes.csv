command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3311066	File	data/converged/CVE-2011-4930_htcondor/src_condor_gridmanager_gridmanager_main.cpp								
ANR	3311067	DeclStmt									
ANR	3311068	Decl							char	char *	myUserName
ANR	3311069	DeclStmt									
ANR	3311070	Decl							int	"int ( char * * buf , int * bufpos , int * buflen )"	display_dprintf_header
ANR	3311071	Function	usage	37:0:1170:1390							
ANR	3311072	FunctionDef	usage (char * name)		3311071	0					
ANR	3311073	CompoundStatement		39:0:1195:1390	3311071	0					
ANR	3311074	ExpressionStatement	"dprintf ( D_ALWAYS , ""Usage: %s [-f] [-b] [-t] [-p <port>] [-s <schedd addr>] [-o <owern@uid-domain>] [-C <job constraint>] [-S <scratch dir>]\\n"" , condor_basename ( name ) )"	40:1:1198:1373	3311071	0	True				
ANR	3311075	CallExpression	"dprintf ( D_ALWAYS , ""Usage: %s [-f] [-b] [-t] [-p <port>] [-s <schedd addr>] [-o <owern@uid-domain>] [-C <job constraint>] [-S <scratch dir>]\\n"" , condor_basename ( name ) )"		3311071	0					
ANR	3311076	Callee	dprintf		3311071	0					
ANR	3311077	Identifier	dprintf		3311071	0					
ANR	3311078	ArgumentList	D_ALWAYS		3311071	1					
ANR	3311079	Argument	D_ALWAYS		3311071	0					
ANR	3311080	Identifier	D_ALWAYS		3311071	0					
ANR	3311081	Argument	"""Usage: %s [-f] [-b] [-t] [-p <port>] [-s <schedd addr>] [-o <owern@uid-domain>] [-C <job constraint>] [-S <scratch dir>]\\n"""		3311071	1					
ANR	3311082	PrimaryExpression	"""Usage: %s [-f] [-b] [-t] [-p <port>] [-s <schedd addr>] [-o <owern@uid-domain>] [-C <job constraint>] [-S <scratch dir>]\\n"""		3311071	0					
ANR	3311083	Argument	condor_basename ( name )		3311071	2					
ANR	3311084	CallExpression	condor_basename ( name )		3311071	0					
ANR	3311085	Callee	condor_basename		3311071	0					
ANR	3311086	Identifier	condor_basename		3311071	0					
ANR	3311087	ArgumentList	name		3311071	1					
ANR	3311088	Argument	name		3311071	0					
ANR	3311089	Identifier	name		3311071	0					
ANR	3311090	ExpressionStatement	DC_Exit ( 1 )	43:1:1376:1388	3311071	1	True				
ANR	3311091	CallExpression	DC_Exit ( 1 )		3311071	0					
ANR	3311092	Callee	DC_Exit		3311071	0					
ANR	3311093	Identifier	DC_Exit		3311071	0					
ANR	3311094	ArgumentList	1		3311071	1					
ANR	3311095	Argument	1		3311071	0					
ANR	3311096	PrimaryExpression	1		3311071	0					
ANR	3311097	ReturnType	void		3311071	1					
ANR	3311098	Identifier	usage		3311071	2					
ANR	3311099	ParameterList	char * name		3311071	3					
ANR	3311100	Parameter	char * name	38:7:1182:1191	3311071	0	True				
ANR	3311101	ParameterType	char *		3311071	0					
ANR	3311102	Identifier	name		3311071	1					
ANR	3311103	CFGEntryNode	ENTRY		3311071		True				
ANR	3311104	CFGExitNode	EXIT		3311071		True				
ANR	3311105	Symbol	name		3311071						
ANR	3311106	Symbol	D_ALWAYS		3311071						
ANR	3311107	Symbol	condor_basename		3311071						
ANR	3311108	DeclStmt									
ANR	3311109	Decl							int	int	i
ANR	3311110	Function	main_config	106:0:2596:2630							
ANR	3311111	FunctionDef	main_config ()		3311110	0					
ANR	3311112	CompoundStatement		108:0:2615:2630	3311110	0					
ANR	3311113	ExpressionStatement	Reconfig ( )	109:1:2618:2628	3311110	0	True				
ANR	3311114	CallExpression	Reconfig ( )		3311110	0					
ANR	3311115	Callee	Reconfig		3311110	0					
ANR	3311116	Identifier	Reconfig		3311110	0					
ANR	3311117	ArgumentList			3311110	1					
ANR	3311118	ReturnType	void		3311110	1					
ANR	3311119	Identifier	main_config		3311110	2					
ANR	3311120	ParameterList			3311110	3					
ANR	3311121	CFGEntryNode	ENTRY		3311110		True				
ANR	3311122	CFGExitNode	EXIT		3311110		True				
ANR	3311123	Function	main_shutdown_fast	112:0:2633:2674							
ANR	3311124	FunctionDef	main_shutdown_fast ()		3311123	0					
ANR	3311125	CompoundStatement		114:0:2659:2674	3311123	0					
ANR	3311126	ExpressionStatement	DC_Exit ( 0 )	115:1:2662:2672	3311123	0	True				
ANR	3311127	CallExpression	DC_Exit ( 0 )		3311123	0					
ANR	3311128	Callee	DC_Exit		3311123	0					
ANR	3311129	Identifier	DC_Exit		3311123	0					
ANR	3311130	ArgumentList	0		3311123	1					
ANR	3311131	Argument	0		3311123	0					
ANR	3311132	PrimaryExpression	0		3311123	0					
ANR	3311133	ReturnType	void		3311123	1					
ANR	3311134	Identifier	main_shutdown_fast		3311123	2					
ANR	3311135	ParameterList			3311123	3					
ANR	3311136	CFGEntryNode	ENTRY		3311123		True				
ANR	3311137	CFGExitNode	EXIT		3311123		True				
ANR	3311138	Function	main_shutdown_graceful	118:0:2677:2722							
ANR	3311139	FunctionDef	main_shutdown_graceful ()		3311138	0					
ANR	3311140	CompoundStatement		120:0:2707:2722	3311138	0					
ANR	3311141	ExpressionStatement	DC_Exit ( 0 )	121:1:2710:2720	3311138	0	True				
ANR	3311142	CallExpression	DC_Exit ( 0 )		3311138	0					
ANR	3311143	Callee	DC_Exit		3311138	0					
ANR	3311144	Identifier	DC_Exit		3311138	0					
ANR	3311145	ArgumentList	0		3311138	1					
ANR	3311146	Argument	0		3311138	0					
ANR	3311147	PrimaryExpression	0		3311138	0					
ANR	3311148	ReturnType	void		3311138	1					
ANR	3311149	Identifier	main_shutdown_graceful		3311138	2					
ANR	3311150	ParameterList			3311138	3					
ANR	3311151	CFGEntryNode	ENTRY		3311138		True				
ANR	3311152	CFGExitNode	EXIT		3311138		True				
ANR	3311153	Function	main_pre_dc_init	124:0:2725:3905							
ANR	3311154	FunctionDef	"main_pre_dc_init (int argc , char * argv [ ])"		3311153	0					
ANR	3311155	CompoundStatement		126:0:2773:3905	3311153	0					
ANR	3311156	IdentifierDeclStatement	int i = 1 ;	129:1:2890:2899	3311153	0	True				
ANR	3311157	IdentifierDecl	i = 1		3311153	0					
ANR	3311158	IdentifierDeclType	int		3311153	0					
ANR	3311159	Identifier	i		3311153	1					
ANR	3311160	AssignmentExpression	i = 1		3311153	2		=			
ANR	3311161	Identifier	i		3311153	0					
ANR	3311162	PrimaryExpression	1		3311153	1					
ANR	3311163	WhileStatement	while ( i < argc )		3311153	1					
ANR	3311164	Condition	i < argc	130:9:2910:2917	3311153	0	True				
ANR	3311165	RelationalExpression	i < argc		3311153	0		<			
ANR	3311166	Identifier	i		3311153	0					
ANR	3311167	Identifier	argc		3311153	1					
ANR	3311168	CompoundStatement		5:20:147:147	3311153	1					
ANR	3311169	IfStatement	"if ( ! strcmp ( argv [ i ] , ""-o"" ) )"		3311153	0					
ANR	3311170	Condition	"! strcmp ( argv [ i ] , ""-o"" )"	131:7:2930:2953	3311153	0	True				
ANR	3311171	UnaryOperationExpression	"! strcmp ( argv [ i ] , ""-o"" )"		3311153	0					
ANR	3311172	UnaryOperator	!		3311153	0					
ANR	3311173	CallExpression	"strcmp ( argv [ i ] , ""-o"" )"		3311153	1					
ANR	3311174	Callee	strcmp		3311153	0					
ANR	3311175	Identifier	strcmp		3311153	0					
ANR	3311176	ArgumentList	argv [ i ]		3311153	1					
ANR	3311177	Argument	argv [ i ]		3311153	0					
ANR	3311178	ArrayIndexing	argv [ i ]		3311153	0					
ANR	3311179	Identifier	argv		3311153	0					
ANR	3311180	Identifier	i		3311153	1					
ANR	3311181	Argument	"""-o"""		3311153	1					
ANR	3311182	PrimaryExpression	"""-o"""		3311153	0					
ANR	3311183	CompoundStatement		6:34:183:183	3311153	1					
ANR	3311184	IfStatement	if ( argc <= i + 1 )		3311153	0					
ANR	3311185	Condition	argc <= i + 1	135:8:3117:3129	3311153	0	True				
ANR	3311186	RelationalExpression	argc <= i + 1		3311153	0		<=			
ANR	3311187	Identifier	argc		3311153	0					
ANR	3311188	AdditiveExpression	i + 1		3311153	1		+			
ANR	3311189	Identifier	i		3311153	0					
ANR	3311190	PrimaryExpression	1		3311153	1					
ANR	3311191	CompoundStatement		10:24:359:359	3311153	1					
ANR	3311192	ExpressionStatement	usage ( argv [ 0 ] )	136:4:3139:3155	3311153	0	True				
ANR	3311193	CallExpression	usage ( argv [ 0 ] )		3311153	0					
ANR	3311194	Callee	usage		3311153	0					
ANR	3311195	Identifier	usage		3311153	0					
ANR	3311196	ArgumentList	argv [ 0 ]		3311153	1					
ANR	3311197	Argument	argv [ 0 ]		3311153	0					
ANR	3311198	ArrayIndexing	argv [ 0 ]		3311153	0					
ANR	3311199	Identifier	argv		3311153	0					
ANR	3311200	PrimaryExpression	0		3311153	1					
ANR	3311201	ExpressionStatement	myUserName = strdup ( argv [ i + 1 ] )	138:3:3165:3199	3311153	1	True				
ANR	3311202	AssignmentExpression	myUserName = strdup ( argv [ i + 1 ] )		3311153	0		=			
ANR	3311203	Identifier	myUserName		3311153	0					
ANR	3311204	CallExpression	strdup ( argv [ i + 1 ] )		3311153	1					
ANR	3311205	Callee	strdup		3311153	0					
ANR	3311206	Identifier	strdup		3311153	0					
ANR	3311207	ArgumentList	argv [ i + 1 ]		3311153	1					
ANR	3311208	Argument	argv [ i + 1 ]		3311153	0					
ANR	3311209	ArrayIndexing	argv [ i + 1 ]		3311153	0					
ANR	3311210	Identifier	argv		3311153	0					
ANR	3311211	AdditiveExpression	i + 1		3311153	1		+			
ANR	3311212	Identifier	i		3311153	0					
ANR	3311213	PrimaryExpression	1		3311153	1					
ANR	3311214	BreakStatement	break ;	139:3:3204:3209	3311153	2	True				
ANR	3311215	ExpressionStatement	i ++	141:2:3217:3220	3311153	1	True				
ANR	3311216	PostIncDecOperationExpression	i ++		3311153	0					
ANR	3311217	Identifier	i		3311153	0					
ANR	3311218	IncDec	++		3311153	1					
ANR	3311219	IfStatement	if ( myUserName )		3311153	2					
ANR	3311220	Condition	myUserName	144:6:3232:3241	3311153	0	True				
ANR	3311221	Identifier	myUserName		3311153	0					
ANR	3311222	CompoundStatement		21:2:513:548	3311153	1					
ANR	3311223	IdentifierDeclStatement	char * owner = strdup ( myUserName ) ;	145:2:3249:3283	3311153	0	True				
ANR	3311224	IdentifierDecl	* owner = strdup ( myUserName )		3311153	0					
ANR	3311225	IdentifierDeclType	char *		3311153	0					
ANR	3311226	Identifier	owner		3311153	1					
ANR	3311227	AssignmentExpression	* owner = strdup ( myUserName )		3311153	2		=			
ANR	3311228	Identifier	owner		3311153	0					
ANR	3311229	CallExpression	strdup ( myUserName )		3311153	1					
ANR	3311230	Callee	strdup		3311153	0					
ANR	3311231	Identifier	strdup		3311153	0					
ANR	3311232	ArgumentList	myUserName		3311153	1					
ANR	3311233	Argument	myUserName		3311153	0					
ANR	3311234	Identifier	myUserName		3311153	0					
ANR	3311235	IdentifierDeclStatement	"char * domain = strchr ( owner , '@' ) ;"	146:2:3287:3322	3311153	1	True				
ANR	3311236	IdentifierDecl	"* domain = strchr ( owner , '@' )"		3311153	0					
ANR	3311237	IdentifierDeclType	char *		3311153	0					
ANR	3311238	Identifier	domain		3311153	1					
ANR	3311239	AssignmentExpression	"* domain = strchr ( owner , '@' )"		3311153	2		=			
ANR	3311240	Identifier	domain		3311153	0					
ANR	3311241	CallExpression	"strchr ( owner , '@' )"		3311153	1					
ANR	3311242	Callee	strchr		3311153	0					
ANR	3311243	Identifier	strchr		3311153	0					
ANR	3311244	ArgumentList	owner		3311153	1					
ANR	3311245	Argument	owner		3311153	0					
ANR	3311246	Identifier	owner		3311153	0					
ANR	3311247	Argument	'@'		3311153	1					
ANR	3311248	PrimaryExpression	'@'		3311153	0					
ANR	3311249	IfStatement	if ( domain )		3311153	2					
ANR	3311250	Condition	domain	147:7:3331:3336	3311153	0	True				
ANR	3311251	Identifier	domain		3311153	0					
ANR	3311252	CompoundStatement		22:16:566:566	3311153	1					
ANR	3311253	ExpressionStatement	* domain = '\\0'	148:3:3345:3359	3311153	0	True				
ANR	3311254	AssignmentExpression	* domain = '\\0'		3311153	0		=			
ANR	3311255	UnaryOperationExpression	* domain		3311153	0					
ANR	3311256	UnaryOperator	*		3311153	0					
ANR	3311257	Identifier	domain		3311153	1					
ANR	3311258	PrimaryExpression	'\\0'		3311153	1					
ANR	3311259	ExpressionStatement	domain = domain + 1	149:3:3364:3383	3311153	1	True				
ANR	3311260	AssignmentExpression	domain = domain + 1		3311153	0		=			
ANR	3311261	Identifier	domain		3311153	0					
ANR	3311262	AdditiveExpression	domain + 1		3311153	1		+			
ANR	3311263	Identifier	domain		3311153	0					
ANR	3311264	PrimaryExpression	1		3311153	1					
ANR	3311265	IfStatement	"if ( ! init_user_ids ( owner , domain ) )"		3311153	3					
ANR	3311266	Condition	"! init_user_ids ( owner , domain )"	151:7:3396:3424	3311153	0	True				
ANR	3311267	UnaryOperationExpression	"! init_user_ids ( owner , domain )"		3311153	0					
ANR	3311268	UnaryOperator	!		3311153	0					
ANR	3311269	CallExpression	"init_user_ids ( owner , domain )"		3311153	1					
ANR	3311270	Callee	init_user_ids		3311153	0					
ANR	3311271	Identifier	init_user_ids		3311153	0					
ANR	3311272	ArgumentList	owner		3311153	1					
ANR	3311273	Argument	owner		3311153	0					
ANR	3311274	Identifier	owner		3311153	0					
ANR	3311275	Argument	domain		3311153	1					
ANR	3311276	Identifier	domain		3311153	0					
ANR	3311277	CompoundStatement		26:38:653:653	3311153	1					
ANR	3311278	ExpressionStatement	"dprintf ( D_ALWAYS , ""init_user_ids() failed!\\n"" )"	152:3:3432:3478	3311153	0	True				
ANR	3311279	CallExpression	"dprintf ( D_ALWAYS , ""init_user_ids() failed!\\n"" )"		3311153	0					
ANR	3311280	Callee	dprintf		3311153	0					
ANR	3311281	Identifier	dprintf		3311153	0					
ANR	3311282	ArgumentList	D_ALWAYS		3311153	1					
ANR	3311283	Argument	D_ALWAYS		3311153	0					
ANR	3311284	Identifier	D_ALWAYS		3311153	0					
ANR	3311285	Argument	"""init_user_ids() failed!\\n"""		3311153	1					
ANR	3311286	PrimaryExpression	"""init_user_ids() failed!\\n"""		3311153	0					
ANR	3311287	ExpressionStatement	set_user_priv ( )	156:2:3589:3604	3311153	4	True				
ANR	3311288	CallExpression	set_user_priv ( )		3311153	0					
ANR	3311289	Callee	set_user_priv		3311153	0					
ANR	3311290	Identifier	set_user_priv		3311153	0					
ANR	3311291	ArgumentList			3311153	1					
ANR	3311292	ExpressionStatement	free ( owner )	160:2:3744:3757	3311153	5	True				
ANR	3311293	CallExpression	free ( owner )		3311153	0					
ANR	3311294	Callee	free		3311153	0					
ANR	3311295	Identifier	free		3311153	0					
ANR	3311296	ArgumentList	owner		3311153	1					
ANR	3311297	Argument	owner		3311153	0					
ANR	3311298	Identifier	owner		3311153	0					
ANR	3311299	ElseStatement	else		3311153	0					
ANR	3311300	IfStatement	if ( is_root ( ) )		3311153	0					
ANR	3311301	Condition	is_root ( )	161:13:3772:3780	3311153	0	True				
ANR	3311302	CallExpression	is_root ( )		3311153	0					
ANR	3311303	Callee	is_root		3311153	0					
ANR	3311304	Identifier	is_root		3311153	0					
ANR	3311305	ArgumentList			3311153	1					
ANR	3311306	CompoundStatement		36:25:1010:1010	3311153	1					
ANR	3311307	ExpressionStatement	"dprintf ( D_ALWAYS , ""Don't know what user to run as!\\n"" )"	162:2:3788:3844	3311153	0	True				
ANR	3311308	CallExpression	"dprintf ( D_ALWAYS , ""Don't know what user to run as!\\n"" )"		3311153	0					
ANR	3311309	Callee	dprintf		3311153	0					
ANR	3311310	Identifier	dprintf		3311153	0					
ANR	3311311	ArgumentList	D_ALWAYS		3311153	1					
ANR	3311312	Argument	D_ALWAYS		3311153	0					
ANR	3311313	Identifier	D_ALWAYS		3311153	0					
ANR	3311314	Argument	"""Don't know what user to run as!\\n"""		3311153	1					
ANR	3311315	PrimaryExpression	"""Don't know what user to run as!\\n"""		3311153	0					
ANR	3311316	ExpressionStatement	DC_Exit ( 1 )	163:2:3848:3860	3311153	1	True				
ANR	3311317	CallExpression	DC_Exit ( 1 )		3311153	0					
ANR	3311318	Callee	DC_Exit		3311153	0					
ANR	3311319	Identifier	DC_Exit		3311153	0					
ANR	3311320	ArgumentList	1		3311153	1					
ANR	3311321	Argument	1		3311153	0					
ANR	3311322	PrimaryExpression	1		3311153	0					
ANR	3311323	ElseStatement	else		3311153	0					
ANR	3311324	CompoundStatement		39:8:1096:1096	3311153	0					
ANR	3311325	ExpressionStatement	myUserName = my_username ( )	165:2:3874:3900	3311153	0	True				
ANR	3311326	AssignmentExpression	myUserName = my_username ( )		3311153	0		=			
ANR	3311327	Identifier	myUserName		3311153	0					
ANR	3311328	CallExpression	my_username ( )		3311153	1					
ANR	3311329	Callee	my_username		3311153	0					
ANR	3311330	Identifier	my_username		3311153	0					
ANR	3311331	ArgumentList			3311153	1					
ANR	3311332	ReturnType	void		3311153	1					
ANR	3311333	Identifier	main_pre_dc_init		3311153	2					
ANR	3311334	ParameterList	"int argc , char * argv [ ]"		3311153	3					
ANR	3311335	Parameter	int argc	125:18:2748:2755	3311153	0	True				
ANR	3311336	ParameterType	int		3311153	0					
ANR	3311337	Identifier	argc		3311153	1					
ANR	3311338	Parameter	char * argv [ ]	125:28:2758:2769	3311153	1	True				
ANR	3311339	ParameterType	char * [ ]		3311153	0					
ANR	3311340	Identifier	argv		3311153	1					
ANR	3311341	CFGEntryNode	ENTRY		3311153		True				
ANR	3311342	CFGExitNode	EXIT		3311153		True				
ANR	3311343	Symbol	argc		3311153						
ANR	3311344	Symbol	strcmp		3311153						
ANR	3311345	Symbol	owner		3311153						
ANR	3311346	Symbol	D_ALWAYS		3311153						
ANR	3311347	Symbol	i		3311153						
ANR	3311348	Symbol	strchr		3311153						
ANR	3311349	Symbol	* argv		3311153						
ANR	3311350	Symbol	is_root		3311153						
ANR	3311351	Symbol	my_username		3311153						
ANR	3311352	Symbol	argv		3311153						
ANR	3311353	Symbol	myUserName		3311153						
ANR	3311354	Symbol	* i		3311153						
ANR	3311355	Symbol	* domain		3311153						
ANR	3311356	Symbol	domain		3311153						
ANR	3311357	Symbol	strdup		3311153						
ANR	3311358	Symbol	init_user_ids		3311153						
ANR	3311359	Function	main	169:0:3908:4253							
ANR	3311360	FunctionDef	"main (int argc , char * * argv)"		3311359	0					
ANR	3311361	CompoundStatement		171:0:3942:4253	3311359	0					
ANR	3311362	ExpressionStatement	"set_mySubSystem ( ""GRIDMANAGER"" , SUBSYSTEM_TYPE_DAEMON )"	172:1:3945:4000	3311359	0	True				
ANR	3311363	CallExpression	"set_mySubSystem ( ""GRIDMANAGER"" , SUBSYSTEM_TYPE_DAEMON )"		3311359	0					
ANR	3311364	Callee	set_mySubSystem		3311359	0					
ANR	3311365	Identifier	set_mySubSystem		3311359	0					
ANR	3311366	ArgumentList	"""GRIDMANAGER"""		3311359	1					
ANR	3311367	Argument	"""GRIDMANAGER"""		3311359	0					
ANR	3311368	PrimaryExpression	"""GRIDMANAGER"""		3311359	0					
ANR	3311369	Argument	SUBSYSTEM_TYPE_DAEMON		3311359	1					
ANR	3311370	Identifier	SUBSYSTEM_TYPE_DAEMON		3311359	0					
ANR	3311371	ExpressionStatement	dc_main_init = main_init	174:1:4026:4050	3311359	1	True				
ANR	3311372	AssignmentExpression	dc_main_init = main_init		3311359	0		=			
ANR	3311373	Identifier	dc_main_init		3311359	0					
ANR	3311374	Identifier	main_init		3311359	1					
ANR	3311375	ExpressionStatement	dc_main_config = main_config	175:1:4053:4081	3311359	2	True				
ANR	3311376	AssignmentExpression	dc_main_config = main_config		3311359	0		=			
ANR	3311377	Identifier	dc_main_config		3311359	0					
ANR	3311378	Identifier	main_config		3311359	1					
ANR	3311379	ExpressionStatement	dc_main_shutdown_fast = main_shutdown_fast	176:1:4084:4126	3311359	3	True				
ANR	3311380	AssignmentExpression	dc_main_shutdown_fast = main_shutdown_fast		3311359	0		=			
ANR	3311381	Identifier	dc_main_shutdown_fast		3311359	0					
ANR	3311382	Identifier	main_shutdown_fast		3311359	1					
ANR	3311383	ExpressionStatement	dc_main_shutdown_graceful = main_shutdown_graceful	177:1:4129:4179	3311359	4	True				
ANR	3311384	AssignmentExpression	dc_main_shutdown_graceful = main_shutdown_graceful		3311359	0		=			
ANR	3311385	Identifier	dc_main_shutdown_graceful		3311359	0					
ANR	3311386	Identifier	main_shutdown_graceful		3311359	1					
ANR	3311387	ExpressionStatement	dc_main_pre_dc_init = main_pre_dc_init	178:1:4182:4220	3311359	5	True				
ANR	3311388	AssignmentExpression	dc_main_pre_dc_init = main_pre_dc_init		3311359	0		=			
ANR	3311389	Identifier	dc_main_pre_dc_init		3311359	0					
ANR	3311390	Identifier	main_pre_dc_init		3311359	1					
ANR	3311391	ReturnStatement	"return dc_main ( argc , argv ) ;"	179:1:4223:4251	3311359	6	True				
ANR	3311392	CallExpression	"dc_main ( argc , argv )"		3311359	0					
ANR	3311393	Callee	dc_main		3311359	0					
ANR	3311394	Identifier	dc_main		3311359	0					
ANR	3311395	ArgumentList	argc		3311359	1					
ANR	3311396	Argument	argc		3311359	0					
ANR	3311397	Identifier	argc		3311359	0					
ANR	3311398	Argument	argv		3311359	1					
ANR	3311399	Identifier	argv		3311359	0					
ANR	3311400	ReturnType	int		3311359	1					
ANR	3311401	Identifier	main		3311359	2					
ANR	3311402	ParameterList	"int argc , char * * argv"		3311359	3					
ANR	3311403	Parameter	int argc	170:6:3918:3925	3311359	0	True				
ANR	3311404	ParameterType	int		3311359	0					
ANR	3311405	Identifier	argc		3311359	1					
ANR	3311406	Parameter	char * * argv	170:16:3928:3938	3311359	1	True				
ANR	3311407	ParameterType	char * *		3311359	0					
ANR	3311408	Identifier	argv		3311359	1					
ANR	3311409	CFGEntryNode	ENTRY		3311359		True				
ANR	3311410	CFGExitNode	EXIT		3311359		True				
ANR	3311411	Symbol	argc		3311359						
ANR	3311412	Symbol	dc_main_pre_dc_init		3311359						
ANR	3311413	Symbol	main_pre_dc_init		3311359						
ANR	3311414	Symbol	main_shutdown_fast		3311359						
ANR	3311415	Symbol	argv		3311359						
ANR	3311416	Symbol	dc_main_init		3311359						
ANR	3311417	Symbol	SUBSYSTEM_TYPE_DAEMON		3311359						
ANR	3311418	Symbol	main_init		3311359						
ANR	3311419	Symbol	dc_main_shutdown_fast		3311359						
ANR	3311420	Symbol	dc_main		3311359						
ANR	3311421	Symbol	dc_main_config		3311359						
ANR	3311422	Symbol	main_config		3311359						
ANR	3311423	Symbol	dc_main_shutdown_graceful		3311359						
ANR	3311424	Symbol	main_shutdown_graceful		3311359						
ANR	3311425	Function	display_dprintf_header	185:0:4355:4568							
ANR	3311426	FunctionDef	"display_dprintf_header (char * * buf , int * bufpos , int * buflen)"		3311425	0					
ANR	3311427	CompoundStatement		187:0:4418:4568	3311425	0					
ANR	3311428	Statement	static	188:1:4421:4426	3311425	0	True				
ANR	3311429	IdentifierDeclStatement	pid_t mypid = 0 ;	188:8:4428:4443	3311425	1	True				
ANR	3311430	IdentifierDecl	mypid = 0		3311425	0					
ANR	3311431	IdentifierDeclType	pid_t		3311425	0					
ANR	3311432	Identifier	mypid		3311425	1					
ANR	3311433	AssignmentExpression	mypid = 0		3311425	2		=			
ANR	3311434	Identifier	mypid		3311425	0					
ANR	3311435	PrimaryExpression	0		3311425	1					
ANR	3311436	IfStatement	if ( ! mypid )		3311425	2					
ANR	3311437	Condition	! mypid	190:5:4451:4456	3311425	0	True				
ANR	3311438	UnaryOperationExpression	! mypid		3311425	0					
ANR	3311439	UnaryOperator	!		3311425	0					
ANR	3311440	Identifier	mypid		3311425	1					
ANR	3311441	CompoundStatement		4:13:40:40	3311425	1					
ANR	3311442	ExpressionStatement	mypid = daemonCore -> getpid ( )	191:2:4463:4491	3311425	0	True				
ANR	3311443	AssignmentExpression	mypid = daemonCore -> getpid ( )		3311425	0		=			
ANR	3311444	Identifier	mypid		3311425	0					
ANR	3311445	CallExpression	daemonCore -> getpid ( )		3311425	1					
ANR	3311446	Callee	daemonCore -> getpid		3311425	0					
ANR	3311447	PtrMemberAccess	daemonCore -> getpid		3311425	0					
ANR	3311448	Identifier	daemonCore		3311425	0					
ANR	3311449	Identifier	getpid		3311425	1					
ANR	3311450	ArgumentList			3311425	1					
ANR	3311451	ReturnStatement	"return sprintf_realloc ( buf , bufpos , buflen , ""[%ld] "" , ( long ) mypid ) ;"	194:1:4498:4566	3311425	3	True				
ANR	3311452	CallExpression	"sprintf_realloc ( buf , bufpos , buflen , ""[%ld] "" , ( long ) mypid )"		3311425	0					
ANR	3311453	Callee	sprintf_realloc		3311425	0					
ANR	3311454	Identifier	sprintf_realloc		3311425	0					
ANR	3311455	ArgumentList	buf		3311425	1					
ANR	3311456	Argument	buf		3311425	0					
ANR	3311457	Identifier	buf		3311425	0					
ANR	3311458	Argument	bufpos		3311425	1					
ANR	3311459	Identifier	bufpos		3311425	0					
ANR	3311460	Argument	buflen		3311425	2					
ANR	3311461	Identifier	buflen		3311425	0					
ANR	3311462	Argument	"""[%ld] """		3311425	3					
ANR	3311463	PrimaryExpression	"""[%ld] """		3311425	0					
ANR	3311464	Argument	( long ) mypid		3311425	4					
ANR	3311465	CastExpression	( long ) mypid		3311425	0					
ANR	3311466	CastTarget	long		3311425	0					
ANR	3311467	Identifier	mypid		3311425	1					
ANR	3311468	ReturnType	int		3311425	1					
ANR	3311469	Identifier	display_dprintf_header		3311425	2					
ANR	3311470	ParameterList	"char * * buf , int * bufpos , int * buflen"		3311425	3					
ANR	3311471	Parameter	char * * buf	186:23:4382:4391	3311425	0	True				
ANR	3311472	ParameterType	char * *		3311425	0					
ANR	3311473	Identifier	buf		3311425	1					
ANR	3311474	Parameter	int * bufpos	186:34:4393:4403	3311425	1	True				
ANR	3311475	ParameterType	int *		3311425	0					
ANR	3311476	Identifier	bufpos		3311425	1					
ANR	3311477	Parameter	int * buflen	186:46:4405:4415	3311425	2	True				
ANR	3311478	ParameterType	int *		3311425	0					
ANR	3311479	Identifier	buflen		3311425	1					
ANR	3311480	CFGEntryNode	ENTRY		3311425		True				
ANR	3311481	CFGExitNode	EXIT		3311425		True				
ANR	3311482	Symbol	buf		3311425						
ANR	3311483	Symbol	* daemonCore		3311425						
ANR	3311484	Symbol	mypid		3311425						
ANR	3311485	Symbol	daemonCore		3311425						
ANR	3311486	Symbol	sprintf_realloc		3311425						
ANR	3311487	Symbol	daemonCore -> getpid		3311425						
ANR	3311488	Symbol	buflen		3311425						
ANR	3311489	Symbol	bufpos		3311425						
