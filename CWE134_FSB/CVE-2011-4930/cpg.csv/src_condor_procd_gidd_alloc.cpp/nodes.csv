command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3612803	File	data/converged/CVE-2011-4930_htcondor/src_condor_procd_gidd_alloc.cpp								
ANR	3612804	DeclStmt									
ANR	3612805	Decl							char	char [ ERR_STRLEN + 1 ]	err_str
ANR	3612806	Function	err_sprintf	47:0:1952:2085							
ANR	3612807	FunctionDef	err_sprintf (const char * fmt)		3612806	0					
ANR	3612808	CompoundStatement		49:0:1991:2085	3612806	0					
ANR	3612809	IdentifierDeclStatement	va_list ap ;	50:1:1994:2004	3612806	0	True				
ANR	3612810	IdentifierDecl	ap		3612806	0					
ANR	3612811	IdentifierDeclType	va_list		3612806	0					
ANR	3612812	Identifier	ap		3612806	1					
ANR	3612813	ExpressionStatement	"va_start ( ap , fmt )"	51:1:2007:2024	3612806	1	True				
ANR	3612814	CallExpression	"va_start ( ap , fmt )"		3612806	0					
ANR	3612815	Callee	va_start		3612806	0					
ANR	3612816	Identifier	va_start		3612806	0					
ANR	3612817	ArgumentList	ap		3612806	1					
ANR	3612818	Argument	ap		3612806	0					
ANR	3612819	Identifier	ap		3612806	0					
ANR	3612820	Argument	fmt		3612806	1					
ANR	3612821	Identifier	fmt		3612806	0					
ANR	3612822	ExpressionStatement	"vsnprintf ( err_str , ERR_STRLEN + 1 , fmt , ap )"	52:1:2027:2070	3612806	2	True				
ANR	3612823	CallExpression	"vsnprintf ( err_str , ERR_STRLEN + 1 , fmt , ap )"		3612806	0					
ANR	3612824	Callee	vsnprintf		3612806	0					
ANR	3612825	Identifier	vsnprintf		3612806	0					
ANR	3612826	ArgumentList	err_str		3612806	1					
ANR	3612827	Argument	err_str		3612806	0					
ANR	3612828	Identifier	err_str		3612806	0					
ANR	3612829	Argument	ERR_STRLEN + 1		3612806	1					
ANR	3612830	AdditiveExpression	ERR_STRLEN + 1		3612806	0		+			
ANR	3612831	Identifier	ERR_STRLEN		3612806	0					
ANR	3612832	PrimaryExpression	1		3612806	1					
ANR	3612833	Argument	fmt		3612806	2					
ANR	3612834	Identifier	fmt		3612806	0					
ANR	3612835	Argument	ap		3612806	3					
ANR	3612836	Identifier	ap		3612806	0					
ANR	3612837	ExpressionStatement	va_end ( ap )	53:1:2073:2083	3612806	3	True				
ANR	3612838	CallExpression	va_end ( ap )		3612806	0					
ANR	3612839	Callee	va_end		3612806	0					
ANR	3612840	Identifier	va_end		3612806	0					
ANR	3612841	ArgumentList	ap		3612806	1					
ANR	3612842	Argument	ap		3612806	0					
ANR	3612843	Identifier	ap		3612806	0					
ANR	3612844	ReturnType	void		3612806	1					
ANR	3612845	Identifier	err_sprintf		3612806	2					
ANR	3612846	ParameterList	const char * fmt		3612806	3					
ANR	3612847	Parameter	const char * fmt	48:12:1969:1983	3612806	0	True				
ANR	3612848	ParameterType	const char *		3612806	0					
ANR	3612849	Identifier	fmt		3612806	1					
ANR	3612850	CFGEntryNode	ENTRY		3612806		True				
ANR	3612851	CFGExitNode	EXIT		3612806		True				
ANR	3612852	Symbol	ERR_STRLEN		3612806						
ANR	3612853	Symbol	err_str		3612806						
ANR	3612854	Symbol	fmt		3612806						
ANR	3612855	Symbol	ap		3612806						
ANR	3612856	Function	statuspath	61:0:2263:2788							
ANR	3612857	FunctionDef	statuspath (char * pid)		3612856	0					
ANR	3612858	CompoundStatement		63:0:2298:2788	3612856	0					
ANR	3612859	IdentifierDeclStatement	"char proc [ ] = ""/proc/"" ;"	64:1:2301:2323	3612856	0	True				
ANR	3612860	IdentifierDecl	"proc [ ] = ""/proc/"""		3612856	0					
ANR	3612861	IdentifierDeclType	char [ ]		3612856	0					
ANR	3612862	Identifier	proc		3612856	1					
ANR	3612863	AssignmentExpression	"proc [ ] = ""/proc/"""		3612856	2		=			
ANR	3612864	Identifier	proc		3612856	0					
ANR	3612865	PrimaryExpression	"""/proc/"""		3612856	1					
ANR	3612866	IdentifierDeclStatement	"char status [ ] = ""/status"" ;"	65:1:2326:2351	3612856	1	True				
ANR	3612867	IdentifierDecl	"status [ ] = ""/status"""		3612856	0					
ANR	3612868	IdentifierDeclType	char [ ]		3612856	0					
ANR	3612869	Identifier	status		3612856	1					
ANR	3612870	AssignmentExpression	"status [ ] = ""/status"""		3612856	2		=			
ANR	3612871	Identifier	status		3612856	0					
ANR	3612872	PrimaryExpression	"""/status"""		3612856	1					
ANR	3612873	IdentifierDeclStatement	int proclen = sizeof ( proc ) - 1 ;	66:1:2354:2384	3612856	2	True				
ANR	3612874	IdentifierDecl	proclen = sizeof ( proc ) - 1		3612856	0					
ANR	3612875	IdentifierDeclType	int		3612856	0					
ANR	3612876	Identifier	proclen		3612856	1					
ANR	3612877	AssignmentExpression	proclen = sizeof ( proc ) - 1		3612856	2		=			
ANR	3612878	Identifier	proclen		3612856	0					
ANR	3612879	AdditiveExpression	sizeof ( proc ) - 1		3612856	1		-			
ANR	3612880	SizeofExpression	sizeof ( proc )		3612856	0					
ANR	3612881	Sizeof	sizeof		3612856	0					
ANR	3612882	SizeofOperand	proc		3612856	1					
ANR	3612883	PrimaryExpression	1		3612856	1					
ANR	3612884	IdentifierDeclStatement	int pidlen = strlen ( pid ) ;	67:1:2387:2411	3612856	3	True				
ANR	3612885	IdentifierDecl	pidlen = strlen ( pid )		3612856	0					
ANR	3612886	IdentifierDeclType	int		3612856	0					
ANR	3612887	Identifier	pidlen		3612856	1					
ANR	3612888	AssignmentExpression	pidlen = strlen ( pid )		3612856	2		=			
ANR	3612889	Identifier	pidlen		3612856	0					
ANR	3612890	CallExpression	strlen ( pid )		3612856	1					
ANR	3612891	Callee	strlen		3612856	0					
ANR	3612892	Identifier	strlen		3612856	0					
ANR	3612893	ArgumentList	pid		3612856	1					
ANR	3612894	Argument	pid		3612856	0					
ANR	3612895	Identifier	pid		3612856	0					
ANR	3612896	IdentifierDeclStatement	int statuslen = sizeof ( status ) - 1 ;	68:1:2414:2448	3612856	4	True				
ANR	3612897	IdentifierDecl	statuslen = sizeof ( status ) - 1		3612856	0					
ANR	3612898	IdentifierDeclType	int		3612856	0					
ANR	3612899	Identifier	statuslen		3612856	1					
ANR	3612900	AssignmentExpression	statuslen = sizeof ( status ) - 1		3612856	2		=			
ANR	3612901	Identifier	statuslen		3612856	0					
ANR	3612902	AdditiveExpression	sizeof ( status ) - 1		3612856	1		-			
ANR	3612903	SizeofExpression	sizeof ( status )		3612856	0					
ANR	3612904	Sizeof	sizeof		3612856	0					
ANR	3612905	SizeofOperand	status		3612856	1					
ANR	3612906	PrimaryExpression	1		3612856	1					
ANR	3612907	IdentifierDeclStatement	char * path = ( char * ) malloc ( proclen + pidlen + statuslen + 1 ) ;	70:1:2452:2512	3612856	5	True				
ANR	3612908	IdentifierDecl	* path = ( char * ) malloc ( proclen + pidlen + statuslen + 1 )		3612856	0					
ANR	3612909	IdentifierDeclType	char *		3612856	0					
ANR	3612910	Identifier	path		3612856	1					
ANR	3612911	AssignmentExpression	* path = ( char * ) malloc ( proclen + pidlen + statuslen + 1 )		3612856	2		=			
ANR	3612912	Identifier	path		3612856	0					
ANR	3612913	CastExpression	( char * ) malloc ( proclen + pidlen + statuslen + 1 )		3612856	1					
ANR	3612914	CastTarget	char *		3612856	0					
ANR	3612915	CallExpression	malloc ( proclen + pidlen + statuslen + 1 )		3612856	1					
ANR	3612916	Callee	malloc		3612856	0					
ANR	3612917	Identifier	malloc		3612856	0					
ANR	3612918	ArgumentList	proclen + pidlen + statuslen + 1		3612856	1					
ANR	3612919	Argument	proclen + pidlen + statuslen + 1		3612856	0					
ANR	3612920	AdditiveExpression	proclen + pidlen + statuslen + 1		3612856	0		+			
ANR	3612921	Identifier	proclen		3612856	0					
ANR	3612922	AdditiveExpression	pidlen + statuslen + 1		3612856	1		+			
ANR	3612923	Identifier	pidlen		3612856	0					
ANR	3612924	AdditiveExpression	statuslen + 1		3612856	1		+			
ANR	3612925	Identifier	statuslen		3612856	0					
ANR	3612926	PrimaryExpression	1		3612856	1					
ANR	3612927	IfStatement	if ( path == NULL )		3612856	6					
ANR	3612928	Condition	path == NULL	71:5:2519:2530	3612856	0	True				
ANR	3612929	EqualityExpression	path == NULL		3612856	0		==			
ANR	3612930	Identifier	path		3612856	0					
ANR	3612931	Identifier	NULL		3612856	1					
ANR	3612932	CompoundStatement		9:19:234:234	3612856	1					
ANR	3612933	ExpressionStatement	"err_sprintf ( ""malloc failure: %s"" , strerror ( errno ) )"	72:2:2537:2587	3612856	0	True				
ANR	3612934	CallExpression	"err_sprintf ( ""malloc failure: %s"" , strerror ( errno ) )"		3612856	0					
ANR	3612935	Callee	err_sprintf		3612856	0					
ANR	3612936	Identifier	err_sprintf		3612856	0					
ANR	3612937	ArgumentList	"""malloc failure: %s"""		3612856	1					
ANR	3612938	Argument	"""malloc failure: %s"""		3612856	0					
ANR	3612939	PrimaryExpression	"""malloc failure: %s"""		3612856	0					
ANR	3612940	Argument	strerror ( errno )		3612856	1					
ANR	3612941	CallExpression	strerror ( errno )		3612856	0					
ANR	3612942	Callee	strerror		3612856	0					
ANR	3612943	Identifier	strerror		3612856	0					
ANR	3612944	ArgumentList	errno		3612856	1					
ANR	3612945	Argument	errno		3612856	0					
ANR	3612946	Identifier	errno		3612856	0					
ANR	3612947	ReturnStatement	return NULL ;	73:2:2591:2602	3612856	1	True				
ANR	3612948	Identifier	NULL		3612856	0					
ANR	3612949	ExpressionStatement	"memcpy ( path , proc , proclen )"	76:1:2609:2636	3612856	7	True				
ANR	3612950	CallExpression	"memcpy ( path , proc , proclen )"		3612856	0					
ANR	3612951	Callee	memcpy		3612856	0					
ANR	3612952	Identifier	memcpy		3612856	0					
ANR	3612953	ArgumentList	path		3612856	1					
ANR	3612954	Argument	path		3612856	0					
ANR	3612955	Identifier	path		3612856	0					
ANR	3612956	Argument	proc		3612856	1					
ANR	3612957	Identifier	proc		3612856	0					
ANR	3612958	Argument	proclen		3612856	2					
ANR	3612959	Identifier	proclen		3612856	0					
ANR	3612960	ExpressionStatement	"memcpy ( path + proclen , pid , pidlen )"	77:1:2639:2674	3612856	8	True				
ANR	3612961	CallExpression	"memcpy ( path + proclen , pid , pidlen )"		3612856	0					
ANR	3612962	Callee	memcpy		3612856	0					
ANR	3612963	Identifier	memcpy		3612856	0					
ANR	3612964	ArgumentList	path + proclen		3612856	1					
ANR	3612965	Argument	path + proclen		3612856	0					
ANR	3612966	AdditiveExpression	path + proclen		3612856	0		+			
ANR	3612967	Identifier	path		3612856	0					
ANR	3612968	Identifier	proclen		3612856	1					
ANR	3612969	Argument	pid		3612856	1					
ANR	3612970	Identifier	pid		3612856	0					
ANR	3612971	Argument	pidlen		3612856	2					
ANR	3612972	Identifier	pidlen		3612856	0					
ANR	3612973	ExpressionStatement	"memcpy ( path + proclen + pidlen , status , statuslen )"	78:1:2677:2727	3612856	9	True				
ANR	3612974	CallExpression	"memcpy ( path + proclen + pidlen , status , statuslen )"		3612856	0					
ANR	3612975	Callee	memcpy		3612856	0					
ANR	3612976	Identifier	memcpy		3612856	0					
ANR	3612977	ArgumentList	path + proclen + pidlen		3612856	1					
ANR	3612978	Argument	path + proclen + pidlen		3612856	0					
ANR	3612979	AdditiveExpression	path + proclen + pidlen		3612856	0		+			
ANR	3612980	Identifier	path		3612856	0					
ANR	3612981	AdditiveExpression	proclen + pidlen		3612856	1		+			
ANR	3612982	Identifier	proclen		3612856	0					
ANR	3612983	Identifier	pidlen		3612856	1					
ANR	3612984	Argument	status		3612856	1					
ANR	3612985	Identifier	status		3612856	0					
ANR	3612986	Argument	statuslen		3612856	2					
ANR	3612987	Identifier	statuslen		3612856	0					
ANR	3612988	ExpressionStatement	path [ proclen + pidlen + statuslen ] = '\\0'	79:1:2730:2771	3612856	10	True				
ANR	3612989	AssignmentExpression	path [ proclen + pidlen + statuslen ] = '\\0'		3612856	0		=			
ANR	3612990	ArrayIndexing	path [ proclen + pidlen + statuslen ]		3612856	0					
ANR	3612991	Identifier	path		3612856	0					
ANR	3612992	AdditiveExpression	proclen + pidlen + statuslen		3612856	1		+			
ANR	3612993	Identifier	proclen		3612856	0					
ANR	3612994	AdditiveExpression	pidlen + statuslen		3612856	1		+			
ANR	3612995	Identifier	pidlen		3612856	0					
ANR	3612996	Identifier	statuslen		3612856	1					
ANR	3612997	PrimaryExpression	'\\0'		3612856	1					
ANR	3612998	ReturnStatement	return path ;	81:1:2775:2786	3612856	11	True				
ANR	3612999	Identifier	path		3612856	0					
ANR	3613000	ReturnType	static char *		3612856	1					
ANR	3613001	Identifier	statuspath		3612856	2					
ANR	3613002	ParameterList	char * pid		3612856	3					
ANR	3613003	Parameter	char * pid	62:11:2287:2295	3612856	0	True				
ANR	3613004	ParameterType	char *		3612856	0					
ANR	3613005	Identifier	pid		3612856	1					
ANR	3613006	CFGEntryNode	ENTRY		3612856		True				
ANR	3613007	CFGExitNode	EXIT		3612856		True				
ANR	3613008	Symbol	malloc		3612856						
ANR	3613009	Symbol	proc		3612856						
ANR	3613010	Symbol	errno		3612856						
ANR	3613011	Symbol	NULL		3612856						
ANR	3613012	Symbol	* statuslen		3612856						
ANR	3613013	Symbol	* proclen		3612856						
ANR	3613014	Symbol	pid		3612856						
ANR	3613015	Symbol	* pidlen		3612856						
ANR	3613016	Symbol	strerror		3612856						
ANR	3613017	Symbol	strlen		3612856						
ANR	3613018	Symbol	path		3612856						
ANR	3613019	Symbol	proclen		3612856						
ANR	3613020	Symbol	statuslen		3612856						
ANR	3613021	Symbol	* path		3612856						
ANR	3613022	Symbol	status		3612856						
ANR	3613023	Symbol	pidlen		3612856						
ANR	3613024	ClassDef	gidnode	86:8:2846:2909							
ANR	3613025	DeclStmt									
ANR	3613026	Decl							gid_t	gid_t	gid
ANR	3613027	DeclStmt									
ANR	3613028	Decl							struct gidnode	struct gidnode *	next
ANR	3613029	DeclStmt									
ANR	3613030	Decl							gidnode	gidnode	gidnode_t
ANR	3613031	ClassDef	<unnamed>	93:8:2979:3029							
ANR	3613032	DeclStmt									
ANR	3613033	Decl							gidnode_t	gidnode_t *	head
ANR	3613034	DeclStmt									
ANR	3613035	Decl							int	int	count
ANR	3613036	DeclStmt									
ANR	3613037	Decl									gidlist_t
ANR	3613038	Function	listinit	100:0:3061:3139							
ANR	3613039	FunctionDef	listinit (gidlist_t * list)		3613038	0					
ANR	3613040	CompoundStatement		101:26:3099:3139	3613038	0					
ANR	3613041	ExpressionStatement	list -> head = NULL	102:1:3102:3119	3613038	0	True				
ANR	3613042	AssignmentExpression	list -> head = NULL		3613038	0		=			
ANR	3613043	PtrMemberAccess	list -> head		3613038	0					
ANR	3613044	Identifier	list		3613038	0					
ANR	3613045	Identifier	head		3613038	1					
ANR	3613046	Identifier	NULL		3613038	1					
ANR	3613047	ExpressionStatement	list -> count = 0	103:1:3122:3137	3613038	1	True				
ANR	3613048	AssignmentExpression	list -> count = 0		3613038	0		=			
ANR	3613049	PtrMemberAccess	list -> count		3613038	0					
ANR	3613050	Identifier	list		3613038	0					
ANR	3613051	Identifier	count		3613038	1					
ANR	3613052	PrimaryExpression	0		3613038	1					
ANR	3613053	ReturnType	static void		3613038	1					
ANR	3613054	Identifier	listinit		3613038	2					
ANR	3613055	ParameterList	gidlist_t * list		3613038	3					
ANR	3613056	Parameter	gidlist_t * list	101:9:3082:3096	3613038	0	True				
ANR	3613057	ParameterType	gidlist_t *		3613038	0					
ANR	3613058	Identifier	list		3613038	1					
ANR	3613059	CFGEntryNode	ENTRY		3613038		True				
ANR	3613060	CFGExitNode	EXIT		3613038		True				
ANR	3613061	Symbol	list -> head		3613038						
ANR	3613062	Symbol	NULL		3613038						
ANR	3613063	Symbol	* list		3613038						
ANR	3613064	Symbol	list		3613038						
ANR	3613065	Symbol	list -> count		3613038						
ANR	3613066	Function	listadd	108:0:3210:3499							
ANR	3613067	FunctionDef	"listadd (gidlist_t * list , gid_t gid)"		3613066	0					
ANR	3613068	CompoundStatement		110:0:3257:3499	3613066	0					
ANR	3613069	IdentifierDeclStatement	gidnode_t * node = ( gidnode_t * ) malloc ( sizeof ( gidnode_t ) ) ;	111:1:3260:3315	3613066	0	True				
ANR	3613070	IdentifierDecl	* node = ( gidnode_t * ) malloc ( sizeof ( gidnode_t ) )		3613066	0					
ANR	3613071	IdentifierDeclType	gidnode_t *		3613066	0					
ANR	3613072	Identifier	node		3613066	1					
ANR	3613073	AssignmentExpression	* node = ( gidnode_t * ) malloc ( sizeof ( gidnode_t ) )		3613066	2		=			
ANR	3613074	Identifier	node		3613066	0					
ANR	3613075	CastExpression	( gidnode_t * ) malloc ( sizeof ( gidnode_t ) )		3613066	1					
ANR	3613076	CastTarget	gidnode_t *		3613066	0					
ANR	3613077	CallExpression	malloc ( sizeof ( gidnode_t ) )		3613066	1					
ANR	3613078	Callee	malloc		3613066	0					
ANR	3613079	Identifier	malloc		3613066	0					
ANR	3613080	ArgumentList	sizeof ( gidnode_t )		3613066	1					
ANR	3613081	Argument	sizeof ( gidnode_t )		3613066	0					
ANR	3613082	SizeofExpression	sizeof ( gidnode_t )		3613066	0					
ANR	3613083	Sizeof	sizeof		3613066	0					
ANR	3613084	SizeofOperand	gidnode_t		3613066	1					
ANR	3613085	IfStatement	if ( node == NULL )		3613066	1					
ANR	3613086	Condition	node == NULL	112:5:3322:3333	3613066	0	True				
ANR	3613087	EqualityExpression	node == NULL		3613066	0		==			
ANR	3613088	Identifier	node		3613066	0					
ANR	3613089	Identifier	NULL		3613066	1					
ANR	3613090	CompoundStatement		3:19:78:78	3613066	1					
ANR	3613091	ExpressionStatement	"err_sprintf ( ""malloc failure: %s"" , strerror ( errno ) )"	113:2:3340:3390	3613066	0	True				
ANR	3613092	CallExpression	"err_sprintf ( ""malloc failure: %s"" , strerror ( errno ) )"		3613066	0					
ANR	3613093	Callee	err_sprintf		3613066	0					
ANR	3613094	Identifier	err_sprintf		3613066	0					
ANR	3613095	ArgumentList	"""malloc failure: %s"""		3613066	1					
ANR	3613096	Argument	"""malloc failure: %s"""		3613066	0					
ANR	3613097	PrimaryExpression	"""malloc failure: %s"""		3613066	0					
ANR	3613098	Argument	strerror ( errno )		3613066	1					
ANR	3613099	CallExpression	strerror ( errno )		3613066	0					
ANR	3613100	Callee	strerror		3613066	0					
ANR	3613101	Identifier	strerror		3613066	0					
ANR	3613102	ArgumentList	errno		3613066	1					
ANR	3613103	Argument	errno		3613066	0					
ANR	3613104	Identifier	errno		3613066	0					
ANR	3613105	ReturnStatement	return - 1 ;	114:2:3394:3403	3613066	1	True				
ANR	3613106	UnaryOperationExpression	- 1		3613066	0					
ANR	3613107	UnaryOperator	-		3613066	0					
ANR	3613108	PrimaryExpression	1		3613066	1					
ANR	3613109	ExpressionStatement	node -> gid = gid	116:1:3409:3424	3613066	2	True				
ANR	3613110	AssignmentExpression	node -> gid = gid		3613066	0		=			
ANR	3613111	PtrMemberAccess	node -> gid		3613066	0					
ANR	3613112	Identifier	node		3613066	0					
ANR	3613113	Identifier	gid		3613066	1					
ANR	3613114	Identifier	gid		3613066	1					
ANR	3613115	ExpressionStatement	node -> next = list -> head	117:1:3427:3450	3613066	3	True				
ANR	3613116	AssignmentExpression	node -> next = list -> head		3613066	0		=			
ANR	3613117	PtrMemberAccess	node -> next		3613066	0					
ANR	3613118	Identifier	node		3613066	0					
ANR	3613119	Identifier	next		3613066	1					
ANR	3613120	PtrMemberAccess	list -> head		3613066	1					
ANR	3613121	Identifier	list		3613066	0					
ANR	3613122	Identifier	head		3613066	1					
ANR	3613123	ExpressionStatement	list -> head = node	118:1:3453:3470	3613066	4	True				
ANR	3613124	AssignmentExpression	list -> head = node		3613066	0		=			
ANR	3613125	PtrMemberAccess	list -> head		3613066	0					
ANR	3613126	Identifier	list		3613066	0					
ANR	3613127	Identifier	head		3613066	1					
ANR	3613128	Identifier	node		3613066	1					
ANR	3613129	ExpressionStatement	list -> count ++	119:1:3473:3486	3613066	5	True				
ANR	3613130	PostIncDecOperationExpression	list -> count ++		3613066	0					
ANR	3613131	PtrMemberAccess	list -> count		3613066	0					
ANR	3613132	Identifier	list		3613066	0					
ANR	3613133	Identifier	count		3613066	1					
ANR	3613134	IncDec	++		3613066	1					
ANR	3613135	ReturnStatement	return 0 ;	120:1:3489:3497	3613066	6	True				
ANR	3613136	PrimaryExpression	0		3613066	0					
ANR	3613137	ReturnType	static int		3613066	1					
ANR	3613138	Identifier	listadd		3613066	2					
ANR	3613139	ParameterList	"gidlist_t * list , gid_t gid"		3613066	3					
ANR	3613140	Parameter	gidlist_t * list	109:8:3229:3243	3613066	0	True				
ANR	3613141	ParameterType	gidlist_t *		3613066	0					
ANR	3613142	Identifier	list		3613066	1					
ANR	3613143	Parameter	gid_t gid	109:25:3246:3254	3613066	1	True				
ANR	3613144	ParameterType	gid_t		3613066	0					
ANR	3613145	Identifier	gid		3613066	1					
ANR	3613146	CFGEntryNode	ENTRY		3613066		True				
ANR	3613147	CFGExitNode	EXIT		3613066		True				
ANR	3613148	Symbol	malloc		3613066						
ANR	3613149	Symbol	errno		3613066						
ANR	3613150	Symbol	gid		3613066						
ANR	3613151	Symbol	NULL		3613066						
ANR	3613152	Symbol	node -> gid		3613066						
ANR	3613153	Symbol	node -> next		3613066						
ANR	3613154	Symbol	list		3613066						
ANR	3613155	Symbol	list -> count		3613066						
ANR	3613156	Symbol	strerror		3613066						
ANR	3613157	Symbol	list -> head		3613066						
ANR	3613158	Symbol	node		3613066						
ANR	3613159	Symbol	* list		3613066						
ANR	3613160	Symbol	* node		3613066						
ANR	3613161	Function	listfree	125:0:3553:3712							
ANR	3613162	FunctionDef	listfree (gidlist_t * list)		3613161	0					
ANR	3613163	CompoundStatement		127:0:3591:3712	3613161	0					
ANR	3613164	IdentifierDeclStatement	gidnode_t * node = list -> head ;	128:1:3594:3622	3613161	0	True				
ANR	3613165	IdentifierDecl	* node = list -> head		3613161	0					
ANR	3613166	IdentifierDeclType	gidnode_t *		3613161	0					
ANR	3613167	Identifier	node		3613161	1					
ANR	3613168	AssignmentExpression	* node = list -> head		3613161	2		=			
ANR	3613169	Identifier	node		3613161	0					
ANR	3613170	PtrMemberAccess	list -> head		3613161	1					
ANR	3613171	Identifier	list		3613161	0					
ANR	3613172	Identifier	head		3613161	1					
ANR	3613173	WhileStatement	while ( node != NULL )		3613161	1					
ANR	3613174	Condition	node != NULL	129:8:3632:3643	3613161	0	True				
ANR	3613175	EqualityExpression	node != NULL		3613161	0		!=			
ANR	3613176	Identifier	node		3613161	0					
ANR	3613177	Identifier	NULL		3613161	1					
ANR	3613178	CompoundStatement		4:2:58:86	3613161	1					
ANR	3613179	IdentifierDeclStatement	gidnode_t * next = node -> next ;	130:2:3650:3678	3613161	0	True				
ANR	3613180	IdentifierDecl	* next = node -> next		3613161	0					
ANR	3613181	IdentifierDeclType	gidnode_t *		3613161	0					
ANR	3613182	Identifier	next		3613161	1					
ANR	3613183	AssignmentExpression	* next = node -> next		3613161	2		=			
ANR	3613184	Identifier	next		3613161	0					
ANR	3613185	PtrMemberAccess	node -> next		3613161	1					
ANR	3613186	Identifier	node		3613161	0					
ANR	3613187	Identifier	next		3613161	1					
ANR	3613188	ExpressionStatement	free ( node )	131:2:3682:3692	3613161	1	True				
ANR	3613189	CallExpression	free ( node )		3613161	0					
ANR	3613190	Callee	free		3613161	0					
ANR	3613191	Identifier	free		3613161	0					
ANR	3613192	ArgumentList	node		3613161	1					
ANR	3613193	Argument	node		3613161	0					
ANR	3613194	Identifier	node		3613161	0					
ANR	3613195	ExpressionStatement	node = next	132:2:3696:3707	3613161	2	True				
ANR	3613196	AssignmentExpression	node = next		3613161	0		=			
ANR	3613197	Identifier	node		3613161	0					
ANR	3613198	Identifier	next		3613161	1					
ANR	3613199	ReturnType	static void		3613161	1					
ANR	3613200	Identifier	listfree		3613161	2					
ANR	3613201	ParameterList	gidlist_t * list		3613161	3					
ANR	3613202	Parameter	gidlist_t * list	126:9:3574:3588	3613161	0	True				
ANR	3613203	ParameterType	gidlist_t *		3613161	0					
ANR	3613204	Identifier	list		3613161	1					
ANR	3613205	CFGEntryNode	ENTRY		3613161		True				
ANR	3613206	CFGExitNode	EXIT		3613161		True				
ANR	3613207	Symbol	list -> head		3613161						
ANR	3613208	Symbol	next		3613161						
ANR	3613209	Symbol	node		3613161						
ANR	3613210	Symbol	NULL		3613161						
ANR	3613211	Symbol	* list		3613161						
ANR	3613212	Symbol	* node		3613161						
ANR	3613213	Symbol	node -> next		3613161						
ANR	3613214	Symbol	list		3613161						
ANR	3613215	Function	getgids	140:0:3912:5213							
ANR	3613216	FunctionDef	"getgids (char * pid , gidlist_t * list)"		3613215	0					
ANR	3613217	CompoundStatement		142:0:3959:5213	3613215	0					
ANR	3613218	IdentifierDeclStatement	char * path = statuspath ( pid ) ;	143:1:3962:3990	3613215	0	True				
ANR	3613219	IdentifierDecl	* path = statuspath ( pid )		3613215	0					
ANR	3613220	IdentifierDeclType	char *		3613215	0					
ANR	3613221	Identifier	path		3613215	1					
ANR	3613222	AssignmentExpression	* path = statuspath ( pid )		3613215	2		=			
ANR	3613223	Identifier	path		3613215	0					
ANR	3613224	CallExpression	statuspath ( pid )		3613215	1					
ANR	3613225	Callee	statuspath		3613215	0					
ANR	3613226	Identifier	statuspath		3613215	0					
ANR	3613227	ArgumentList	pid		3613215	1					
ANR	3613228	Argument	pid		3613215	0					
ANR	3613229	Identifier	pid		3613215	0					
ANR	3613230	IfStatement	if ( path == NULL )		3613215	1					
ANR	3613231	Condition	path == NULL	144:5:3997:4008	3613215	0	True				
ANR	3613232	EqualityExpression	path == NULL		3613215	0		==			
ANR	3613233	Identifier	path		3613215	0					
ANR	3613234	Identifier	NULL		3613215	1					
ANR	3613235	CompoundStatement		3:19:51:51	3613215	1					
ANR	3613236	ReturnStatement	return - 1 ;	145:2:4015:4024	3613215	0	True				
ANR	3613237	UnaryOperationExpression	- 1		3613215	0					
ANR	3613238	UnaryOperator	-		3613215	0					
ANR	3613239	PrimaryExpression	1		3613215	1					
ANR	3613240	IdentifierDeclStatement	"FILE * fp = fopen ( path , ""r"" ) ;"	148:1:4031:4058	3613215	2	True				
ANR	3613241	IdentifierDecl	"* fp = fopen ( path , ""r"" )"		3613215	0					
ANR	3613242	IdentifierDeclType	FILE *		3613215	0					
ANR	3613243	Identifier	fp		3613215	1					
ANR	3613244	AssignmentExpression	"* fp = fopen ( path , ""r"" )"		3613215	2		=			
ANR	3613245	Identifier	fp		3613215	0					
ANR	3613246	CallExpression	"fopen ( path , ""r"" )"		3613215	1					
ANR	3613247	Callee	fopen		3613215	0					
ANR	3613248	Identifier	fopen		3613215	0					
ANR	3613249	ArgumentList	path		3613215	1					
ANR	3613250	Argument	path		3613215	0					
ANR	3613251	Identifier	path		3613215	0					
ANR	3613252	Argument	"""r"""		3613215	1					
ANR	3613253	PrimaryExpression	"""r"""		3613215	0					
ANR	3613254	IfStatement	if ( fp == NULL )		3613215	3					
ANR	3613255	Condition	fp == NULL	149:5:4065:4074	3613215	0	True				
ANR	3613256	EqualityExpression	fp == NULL		3613215	0		==			
ANR	3613257	Identifier	fp		3613215	0					
ANR	3613258	Identifier	NULL		3613215	1					
ANR	3613259	CompoundStatement		8:17:117:117	3613215	1					
ANR	3613260	ExpressionStatement	"err_sprintf ( ""fopen failure on %s: %s"" , path , strerror ( errno ) )"	150:2:4081:4142	3613215	0	True				
ANR	3613261	CallExpression	"err_sprintf ( ""fopen failure on %s: %s"" , path , strerror ( errno ) )"		3613215	0					
ANR	3613262	Callee	err_sprintf		3613215	0					
ANR	3613263	Identifier	err_sprintf		3613215	0					
ANR	3613264	ArgumentList	"""fopen failure on %s: %s"""		3613215	1					
ANR	3613265	Argument	"""fopen failure on %s: %s"""		3613215	0					
ANR	3613266	PrimaryExpression	"""fopen failure on %s: %s"""		3613215	0					
ANR	3613267	Argument	path		3613215	1					
ANR	3613268	Identifier	path		3613215	0					
ANR	3613269	Argument	strerror ( errno )		3613215	2					
ANR	3613270	CallExpression	strerror ( errno )		3613215	0					
ANR	3613271	Callee	strerror		3613215	0					
ANR	3613272	Identifier	strerror		3613215	0					
ANR	3613273	ArgumentList	errno		3613215	1					
ANR	3613274	Argument	errno		3613215	0					
ANR	3613275	Identifier	errno		3613215	0					
ANR	3613276	ExpressionStatement	free ( path )	151:2:4146:4156	3613215	1	True				
ANR	3613277	CallExpression	free ( path )		3613215	0					
ANR	3613278	Callee	free		3613215	0					
ANR	3613279	Identifier	free		3613215	0					
ANR	3613280	ArgumentList	path		3613215	1					
ANR	3613281	Argument	path		3613215	0					
ANR	3613282	Identifier	path		3613215	0					
ANR	3613283	ReturnStatement	return - 1 ;	152:2:4160:4169	3613215	2	True				
ANR	3613284	UnaryOperationExpression	- 1		3613215	0					
ANR	3613285	UnaryOperator	-		3613215	0					
ANR	3613286	PrimaryExpression	1		3613215	1					
ANR	3613287	IdentifierDeclStatement	int found = 0 ;	155:1:4176:4189	3613215	4	True				
ANR	3613288	IdentifierDecl	found = 0		3613215	0					
ANR	3613289	IdentifierDeclType	int		3613215	0					
ANR	3613290	Identifier	found		3613215	1					
ANR	3613291	AssignmentExpression	found = 0		3613215	2		=			
ANR	3613292	Identifier	found		3613215	0					
ANR	3613293	PrimaryExpression	0		3613215	1					
ANR	3613294	IdentifierDeclStatement	"char grps [ ] = ""Groups:\\t"" ;"	156:1:4192:4217	3613215	5	True				
ANR	3613295	IdentifierDecl	"grps [ ] = ""Groups:\\t"""		3613215	0					
ANR	3613296	IdentifierDeclType	char [ ]		3613215	0					
ANR	3613297	Identifier	grps		3613215	1					
ANR	3613298	AssignmentExpression	"grps [ ] = ""Groups:\\t"""		3613215	2		=			
ANR	3613299	Identifier	grps		3613215	0					
ANR	3613300	PrimaryExpression	"""Groups:\\t"""		3613215	1					
ANR	3613301	IdentifierDeclStatement	int grpslen = sizeof ( grps ) - 1 ;	157:1:4220:4250	3613215	6	True				
ANR	3613302	IdentifierDecl	grpslen = sizeof ( grps ) - 1		3613215	0					
ANR	3613303	IdentifierDeclType	int		3613215	0					
ANR	3613304	Identifier	grpslen		3613215	1					
ANR	3613305	AssignmentExpression	grpslen = sizeof ( grps ) - 1		3613215	2		=			
ANR	3613306	Identifier	grpslen		3613215	0					
ANR	3613307	AdditiveExpression	sizeof ( grps ) - 1		3613215	1		-			
ANR	3613308	SizeofExpression	sizeof ( grps )		3613215	0					
ANR	3613309	Sizeof	sizeof		3613215	0					
ANR	3613310	SizeofOperand	grps		3613215	1					
ANR	3613311	PrimaryExpression	1		3613215	1					
ANR	3613312	IdentifierDeclStatement	char line [ 1024 ] ;	158:1:4253:4268	3613215	7	True				
ANR	3613313	IdentifierDecl	line [ 1024 ]		3613215	0					
ANR	3613314	IdentifierDeclType	char [ 1024 ]		3613215	0					
ANR	3613315	Identifier	line		3613215	1					
ANR	3613316	PrimaryExpression	1024		3613215	2					
ANR	3613317	WhileStatement	"while ( fgets ( line , sizeof ( line ) , fp ) )"		3613215	8					
ANR	3613318	Condition	"fgets ( line , sizeof ( line ) , fp )"	159:8:4278:4306	3613215	0	True				
ANR	3613319	CallExpression	"fgets ( line , sizeof ( line ) , fp )"		3613215	0					
ANR	3613320	Callee	fgets		3613215	0					
ANR	3613321	Identifier	fgets		3613215	0					
ANR	3613322	ArgumentList	line		3613215	1					
ANR	3613323	Argument	line		3613215	0					
ANR	3613324	Identifier	line		3613215	0					
ANR	3613325	Argument	sizeof ( line )		3613215	1					
ANR	3613326	SizeofExpression	sizeof ( line )		3613215	0					
ANR	3613327	Sizeof	sizeof		3613215	0					
ANR	3613328	SizeofOperand	line		3613215	1					
ANR	3613329	Argument	fp		3613215	2					
ANR	3613330	Identifier	fp		3613215	0					
ANR	3613331	CompoundStatement		18:39:349:349	3613215	1					
ANR	3613332	IfStatement	"if ( strncmp ( line , grps , grpslen ) == 0 )"		3613215	0					
ANR	3613333	Condition	"strncmp ( line , grps , grpslen ) == 0"	160:6:4317:4349	3613215	0	True				
ANR	3613334	EqualityExpression	"strncmp ( line , grps , grpslen ) == 0"		3613215	0		==			
ANR	3613335	CallExpression	"strncmp ( line , grps , grpslen )"		3613215	0					
ANR	3613336	Callee	strncmp		3613215	0					
ANR	3613337	Identifier	strncmp		3613215	0					
ANR	3613338	ArgumentList	line		3613215	1					
ANR	3613339	Argument	line		3613215	0					
ANR	3613340	Identifier	line		3613215	0					
ANR	3613341	Argument	grps		3613215	1					
ANR	3613342	Identifier	grps		3613215	0					
ANR	3613343	Argument	grpslen		3613215	2					
ANR	3613344	Identifier	grpslen		3613215	0					
ANR	3613345	PrimaryExpression	0		3613215	1					
ANR	3613346	CompoundStatement		19:41:392:392	3613215	1					
ANR	3613347	ExpressionStatement	found = 1	161:3:4357:4366	3613215	0	True				
ANR	3613348	AssignmentExpression	found = 1		3613215	0		=			
ANR	3613349	Identifier	found		3613215	0					
ANR	3613350	PrimaryExpression	1		3613215	1					
ANR	3613351	BreakStatement	break ;	162:3:4371:4376	3613215	1	True				
ANR	3613352	IfStatement	if ( ! found )		3613215	9					
ANR	3613353	Condition	! found	166:5:4391:4396	3613215	0	True				
ANR	3613354	UnaryOperationExpression	! found		3613215	0					
ANR	3613355	UnaryOperator	!		3613215	0					
ANR	3613356	Identifier	found		3613215	1					
ANR	3613357	CompoundStatement		25:13:439:439	3613215	1					
ANR	3613358	IfStatement	if ( feof ( fp ) )		3613215	0					
ANR	3613359	Condition	feof ( fp )	167:6:4407:4414	3613215	0	True				
ANR	3613360	CallExpression	feof ( fp )		3613215	0					
ANR	3613361	Callee	feof		3613215	0					
ANR	3613362	Identifier	feof		3613215	0					
ANR	3613363	ArgumentList	fp		3613215	1					
ANR	3613364	Argument	fp		3613215	0					
ANR	3613365	Identifier	fp		3613215	0					
ANR	3613366	CompoundStatement		26:16:457:457	3613215	1					
ANR	3613367	ExpressionStatement	"err_sprintf ( ""groups not found in %s"" , path )"	168:3:4422:4465	3613215	0	True				
ANR	3613368	CallExpression	"err_sprintf ( ""groups not found in %s"" , path )"		3613215	0					
ANR	3613369	Callee	err_sprintf		3613215	0					
ANR	3613370	Identifier	err_sprintf		3613215	0					
ANR	3613371	ArgumentList	"""groups not found in %s"""		3613215	1					
ANR	3613372	Argument	"""groups not found in %s"""		3613215	0					
ANR	3613373	PrimaryExpression	"""groups not found in %s"""		3613215	0					
ANR	3613374	Argument	path		3613215	1					
ANR	3613375	Identifier	path		3613215	0					
ANR	3613376	ElseStatement	else		3613215	0					
ANR	3613377	CompoundStatement		29:7:518:518	3613215	0					
ANR	3613378	ExpressionStatement	"err_sprintf ( ""fgets error on %s: %s"" , path , strerror ( errno ) )"	171:3:4483:4572	3613215	0	True				
ANR	3613379	CallExpression	"err_sprintf ( ""fgets error on %s: %s"" , path , strerror ( errno ) )"		3613215	0					
ANR	3613380	Callee	err_sprintf		3613215	0					
ANR	3613381	Identifier	err_sprintf		3613215	0					
ANR	3613382	ArgumentList	"""fgets error on %s: %s"""		3613215	1					
ANR	3613383	Argument	"""fgets error on %s: %s"""		3613215	0					
ANR	3613384	PrimaryExpression	"""fgets error on %s: %s"""		3613215	0					
ANR	3613385	Argument	path		3613215	1					
ANR	3613386	Identifier	path		3613215	0					
ANR	3613387	Argument	strerror ( errno )		3613215	2					
ANR	3613388	CallExpression	strerror ( errno )		3613215	0					
ANR	3613389	Callee	strerror		3613215	0					
ANR	3613390	Identifier	strerror		3613215	0					
ANR	3613391	ArgumentList	errno		3613215	1					
ANR	3613392	Argument	errno		3613215	0					
ANR	3613393	Identifier	errno		3613215	0					
ANR	3613394	ExpressionStatement	free ( path )	175:2:4580:4590	3613215	1	True				
ANR	3613395	CallExpression	free ( path )		3613215	0					
ANR	3613396	Callee	free		3613215	0					
ANR	3613397	Identifier	free		3613215	0					
ANR	3613398	ArgumentList	path		3613215	1					
ANR	3613399	Argument	path		3613215	0					
ANR	3613400	Identifier	path		3613215	0					
ANR	3613401	ExpressionStatement	fclose ( fp )	176:2:4594:4604	3613215	2	True				
ANR	3613402	CallExpression	fclose ( fp )		3613215	0					
ANR	3613403	Callee	fclose		3613215	0					
ANR	3613404	Identifier	fclose		3613215	0					
ANR	3613405	ArgumentList	fp		3613215	1					
ANR	3613406	Argument	fp		3613215	0					
ANR	3613407	Identifier	fp		3613215	0					
ANR	3613408	ReturnStatement	return - 1 ;	177:2:4608:4617	3613215	3	True				
ANR	3613409	UnaryOperationExpression	- 1		3613215	0					
ANR	3613410	UnaryOperator	-		3613215	0					
ANR	3613411	PrimaryExpression	1		3613215	1					
ANR	3613412	ExpressionStatement	fclose ( fp )	179:1:4623:4633	3613215	10	True				
ANR	3613413	CallExpression	fclose ( fp )		3613215	0					
ANR	3613414	Callee	fclose		3613215	0					
ANR	3613415	Identifier	fclose		3613215	0					
ANR	3613416	ArgumentList	fp		3613215	1					
ANR	3613417	Argument	fp		3613215	0					
ANR	3613418	Identifier	fp		3613215	0					
ANR	3613419	IdentifierDeclStatement	int linelen = strlen ( line ) ;	181:1:4637:4663	3613215	11	True				
ANR	3613420	IdentifierDecl	linelen = strlen ( line )		3613215	0					
ANR	3613421	IdentifierDeclType	int		3613215	0					
ANR	3613422	Identifier	linelen		3613215	1					
ANR	3613423	AssignmentExpression	linelen = strlen ( line )		3613215	2		=			
ANR	3613424	Identifier	linelen		3613215	0					
ANR	3613425	CallExpression	strlen ( line )		3613215	1					
ANR	3613426	Callee	strlen		3613215	0					
ANR	3613427	Identifier	strlen		3613215	0					
ANR	3613428	ArgumentList	line		3613215	1					
ANR	3613429	Argument	line		3613215	0					
ANR	3613430	Identifier	line		3613215	0					
ANR	3613431	IfStatement	if ( line [ linelen - 1 ] != '\\n' )		3613215	12					
ANR	3613432	Condition	line [ linelen - 1 ] != '\\n'	182:5:4670:4694	3613215	0	True				
ANR	3613433	EqualityExpression	line [ linelen - 1 ] != '\\n'		3613215	0		!=			
ANR	3613434	ArrayIndexing	line [ linelen - 1 ]		3613215	0					
ANR	3613435	Identifier	line		3613215	0					
ANR	3613436	AdditiveExpression	linelen - 1		3613215	1		-			
ANR	3613437	Identifier	linelen		3613215	0					
ANR	3613438	PrimaryExpression	1		3613215	1					
ANR	3613439	PrimaryExpression	'\\n'		3613215	1					
ANR	3613440	CompoundStatement		41:32:737:737	3613215	1					
ANR	3613441	ExpressionStatement	"err_sprintf ( ""partial read of groups line in %s"" , path )"	183:2:4701:4755	3613215	0	True				
ANR	3613442	CallExpression	"err_sprintf ( ""partial read of groups line in %s"" , path )"		3613215	0					
ANR	3613443	Callee	err_sprintf		3613215	0					
ANR	3613444	Identifier	err_sprintf		3613215	0					
ANR	3613445	ArgumentList	"""partial read of groups line in %s"""		3613215	1					
ANR	3613446	Argument	"""partial read of groups line in %s"""		3613215	0					
ANR	3613447	PrimaryExpression	"""partial read of groups line in %s"""		3613215	0					
ANR	3613448	Argument	path		3613215	1					
ANR	3613449	Identifier	path		3613215	0					
ANR	3613450	ExpressionStatement	free ( path )	184:2:4759:4769	3613215	1	True				
ANR	3613451	CallExpression	free ( path )		3613215	0					
ANR	3613452	Callee	free		3613215	0					
ANR	3613453	Identifier	free		3613215	0					
ANR	3613454	ArgumentList	path		3613215	1					
ANR	3613455	Argument	path		3613215	0					
ANR	3613456	Identifier	path		3613215	0					
ANR	3613457	ReturnStatement	return - 1 ;	185:2:4773:4782	3613215	2	True				
ANR	3613458	UnaryOperationExpression	- 1		3613215	0					
ANR	3613459	UnaryOperator	-		3613215	0					
ANR	3613460	PrimaryExpression	1		3613215	1					
ANR	3613461	ExpressionStatement	listinit ( list )	188:1:4789:4803	3613215	13	True				
ANR	3613462	CallExpression	listinit ( list )		3613215	0					
ANR	3613463	Callee	listinit		3613215	0					
ANR	3613464	Identifier	listinit		3613215	0					
ANR	3613465	ArgumentList	list		3613215	1					
ANR	3613466	Argument	list		3613215	0					
ANR	3613467	Identifier	list		3613215	0					
ANR	3613468	IdentifierDeclStatement	char * ptr = line + grpslen ;	189:1:4806:4832	3613215	14	True				
ANR	3613469	IdentifierDecl	* ptr = line + grpslen		3613215	0					
ANR	3613470	IdentifierDeclType	char *		3613215	0					
ANR	3613471	Identifier	ptr		3613215	1					
ANR	3613472	AssignmentExpression	* ptr = line + grpslen		3613215	2		=			
ANR	3613473	Identifier	ptr		3613215	0					
ANR	3613474	AdditiveExpression	line + grpslen		3613215	1		+			
ANR	3613475	Identifier	line		3613215	0					
ANR	3613476	Identifier	grpslen		3613215	1					
ANR	3613477	WhileStatement	while ( * ptr != '\\n' )		3613215	15					
ANR	3613478	Condition	* ptr != '\\n'	190:8:4842:4853	3613215	0	True				
ANR	3613479	EqualityExpression	* ptr != '\\n'		3613215	0		!=			
ANR	3613480	UnaryOperationExpression	* ptr		3613215	0					
ANR	3613481	UnaryOperator	*		3613215	0					
ANR	3613482	Identifier	ptr		3613215	1					
ANR	3613483	PrimaryExpression	'\\n'		3613215	1					
ANR	3613484	CompoundStatement		51:2:913:954	3613215	1					
ANR	3613485	IdentifierDeclStatement	char * end ;	191:2:4860:4869	3613215	0	True				
ANR	3613486	IdentifierDecl	* end		3613215	0					
ANR	3613487	IdentifierDeclType	char *		3613215	0					
ANR	3613488	Identifier	end		3613215	1					
ANR	3613489	IdentifierDeclStatement	"gid_t gid = ( gid_t ) strtoul ( ptr , & end , 10 ) ;"	192:2:4873:4914	3613215	1	True				
ANR	3613490	IdentifierDecl	"gid = ( gid_t ) strtoul ( ptr , & end , 10 )"		3613215	0					
ANR	3613491	IdentifierDeclType	gid_t		3613215	0					
ANR	3613492	Identifier	gid		3613215	1					
ANR	3613493	AssignmentExpression	"gid = ( gid_t ) strtoul ( ptr , & end , 10 )"		3613215	2		=			
ANR	3613494	Identifier	gid		3613215	0					
ANR	3613495	CastExpression	"( gid_t ) strtoul ( ptr , & end , 10 )"		3613215	1					
ANR	3613496	CastTarget	gid_t		3613215	0					
ANR	3613497	CallExpression	"strtoul ( ptr , & end , 10 )"		3613215	1					
ANR	3613498	Callee	strtoul		3613215	0					
ANR	3613499	Identifier	strtoul		3613215	0					
ANR	3613500	ArgumentList	ptr		3613215	1					
ANR	3613501	Argument	ptr		3613215	0					
ANR	3613502	Identifier	ptr		3613215	0					
ANR	3613503	Argument	& end		3613215	1					
ANR	3613504	UnaryOperationExpression	& end		3613215	0					
ANR	3613505	UnaryOperator	&		3613215	0					
ANR	3613506	Identifier	end		3613215	1					
ANR	3613507	Argument	10		3613215	2					
ANR	3613508	PrimaryExpression	10		3613215	0					
ANR	3613509	IfStatement	if ( ( end == ptr ) || ( * end != ' ' ) )		3613215	2					
ANR	3613510	Condition	( end == ptr ) || ( * end != ' ' )	193:6:4922:4950	3613215	0	True				
ANR	3613511	OrExpression	( end == ptr ) || ( * end != ' ' )		3613215	0		||			
ANR	3613512	EqualityExpression	end == ptr		3613215	0		==			
ANR	3613513	Identifier	end		3613215	0					
ANR	3613514	Identifier	ptr		3613215	1					
ANR	3613515	EqualityExpression	* end != ' '		3613215	1		!=			
ANR	3613516	UnaryOperationExpression	* end		3613215	0					
ANR	3613517	UnaryOperator	*		3613215	0					
ANR	3613518	Identifier	end		3613215	1					
ANR	3613519	PrimaryExpression	' '		3613215	1					
ANR	3613520	CompoundStatement		52:37:993:993	3613215	1					
ANR	3613521	ExpressionStatement	"err_sprintf ( ""unexpected format for groups in %s"" , path )"	194:3:4958:5028	3613215	0	True				
ANR	3613522	CallExpression	"err_sprintf ( ""unexpected format for groups in %s"" , path )"		3613215	0					
ANR	3613523	Callee	err_sprintf		3613215	0					
ANR	3613524	Identifier	err_sprintf		3613215	0					
ANR	3613525	ArgumentList	"""unexpected format for groups in %s"""		3613215	1					
ANR	3613526	Argument	"""unexpected format for groups in %s"""		3613215	0					
ANR	3613527	PrimaryExpression	"""unexpected format for groups in %s"""		3613215	0					
ANR	3613528	Argument	path		3613215	1					
ANR	3613529	Identifier	path		3613215	0					
ANR	3613530	ExpressionStatement	free ( path )	196:3:5033:5043	3613215	1	True				
ANR	3613531	CallExpression	free ( path )		3613215	0					
ANR	3613532	Callee	free		3613215	0					
ANR	3613533	Identifier	free		3613215	0					
ANR	3613534	ArgumentList	path		3613215	1					
ANR	3613535	Argument	path		3613215	0					
ANR	3613536	Identifier	path		3613215	0					
ANR	3613537	ExpressionStatement	listfree ( list )	197:3:5048:5062	3613215	2	True				
ANR	3613538	CallExpression	listfree ( list )		3613215	0					
ANR	3613539	Callee	listfree		3613215	0					
ANR	3613540	Identifier	listfree		3613215	0					
ANR	3613541	ArgumentList	list		3613215	1					
ANR	3613542	Argument	list		3613215	0					
ANR	3613543	Identifier	list		3613215	0					
ANR	3613544	ReturnStatement	return - 1 ;	198:3:5067:5076	3613215	3	True				
ANR	3613545	UnaryOperationExpression	- 1		3613215	0					
ANR	3613546	UnaryOperator	-		3613215	0					
ANR	3613547	PrimaryExpression	1		3613215	1					
ANR	3613548	IfStatement	"if ( listadd ( list , gid ) == - 1 )"		3613215	3					
ANR	3613549	Condition	"listadd ( list , gid ) == - 1"	200:6:5088:5111	3613215	0	True				
ANR	3613550	EqualityExpression	"listadd ( list , gid ) == - 1"		3613215	0		==			
ANR	3613551	CallExpression	"listadd ( list , gid )"		3613215	0					
ANR	3613552	Callee	listadd		3613215	0					
ANR	3613553	Identifier	listadd		3613215	0					
ANR	3613554	ArgumentList	list		3613215	1					
ANR	3613555	Argument	list		3613215	0					
ANR	3613556	Identifier	list		3613215	0					
ANR	3613557	Argument	gid		3613215	1					
ANR	3613558	Identifier	gid		3613215	0					
ANR	3613559	UnaryOperationExpression	- 1		3613215	1					
ANR	3613560	UnaryOperator	-		3613215	0					
ANR	3613561	PrimaryExpression	1		3613215	1					
ANR	3613562	CompoundStatement		59:32:1154:1154	3613215	1					
ANR	3613563	ExpressionStatement	free ( path )	201:3:5119:5129	3613215	0	True				
ANR	3613564	CallExpression	free ( path )		3613215	0					
ANR	3613565	Callee	free		3613215	0					
ANR	3613566	Identifier	free		3613215	0					
ANR	3613567	ArgumentList	path		3613215	1					
ANR	3613568	Argument	path		3613215	0					
ANR	3613569	Identifier	path		3613215	0					
ANR	3613570	ExpressionStatement	listfree ( list )	202:3:5134:5148	3613215	1	True				
ANR	3613571	CallExpression	listfree ( list )		3613215	0					
ANR	3613572	Callee	listfree		3613215	0					
ANR	3613573	Identifier	listfree		3613215	0					
ANR	3613574	ArgumentList	list		3613215	1					
ANR	3613575	Argument	list		3613215	0					
ANR	3613576	Identifier	list		3613215	0					
ANR	3613577	ReturnStatement	return - 1 ;	203:3:5153:5162	3613215	2	True				
ANR	3613578	UnaryOperationExpression	- 1		3613215	0					
ANR	3613579	UnaryOperator	-		3613215	0					
ANR	3613580	PrimaryExpression	1		3613215	1					
ANR	3613581	ExpressionStatement	ptr = end + 1	205:2:5170:5183	3613215	4	True				
ANR	3613582	AssignmentExpression	ptr = end + 1		3613215	0		=			
ANR	3613583	Identifier	ptr		3613215	0					
ANR	3613584	AdditiveExpression	end + 1		3613215	1		+			
ANR	3613585	Identifier	end		3613215	0					
ANR	3613586	PrimaryExpression	1		3613215	1					
ANR	3613587	ExpressionStatement	free ( path )	207:1:5189:5199	3613215	16	True				
ANR	3613588	CallExpression	free ( path )		3613215	0					
ANR	3613589	Callee	free		3613215	0					
ANR	3613590	Identifier	free		3613215	0					
ANR	3613591	ArgumentList	path		3613215	1					
ANR	3613592	Argument	path		3613215	0					
ANR	3613593	Identifier	path		3613215	0					
ANR	3613594	ReturnStatement	return 0 ;	209:1:5203:5211	3613215	17	True				
ANR	3613595	PrimaryExpression	0		3613215	0					
ANR	3613596	ReturnType	static int		3613215	1					
ANR	3613597	Identifier	getgids		3613215	2					
ANR	3613598	ParameterList	"char * pid , gidlist_t * list"		3613215	3					
ANR	3613599	Parameter	char * pid	141:8:3931:3939	3613215	0	True				
ANR	3613600	ParameterType	char *		3613215	0					
ANR	3613601	Identifier	pid		3613215	1					
ANR	3613602	Parameter	gidlist_t * list	141:19:3942:3956	3613215	1	True				
ANR	3613603	ParameterType	gidlist_t *		3613215	0					
ANR	3613604	Identifier	list		3613215	1					
ANR	3613605	CFGEntryNode	ENTRY		3613215		True				
ANR	3613606	CFGExitNode	EXIT		3613215		True				
ANR	3613607	Symbol	* linelen		3613215						
ANR	3613608	Symbol	statuspath		3613215						
ANR	3613609	Symbol	gid		3613215						
ANR	3613610	Symbol	line		3613215						
ANR	3613611	Symbol	& end		3613215						
ANR	3613612	Symbol	pid		3613215						
ANR	3613613	Symbol	fp		3613215						
ANR	3613614	Symbol	* line		3613215						
ANR	3613615	Symbol	fgets		3613215						
ANR	3613616	Symbol	path		3613215						
ANR	3613617	Symbol	strncmp		3613215						
ANR	3613618	Symbol	strlen		3613215						
ANR	3613619	Symbol	found		3613215						
ANR	3613620	Symbol	* ptr		3613215						
ANR	3613621	Symbol	strtoul		3613215						
ANR	3613622	Symbol	end		3613215						
ANR	3613623	Symbol	listadd		3613215						
ANR	3613624	Symbol	grps		3613215						
ANR	3613625	Symbol	fopen		3613215						
ANR	3613626	Symbol	errno		3613215						
ANR	3613627	Symbol	NULL		3613215						
ANR	3613628	Symbol	linelen		3613215						
ANR	3613629	Symbol	list		3613215						
ANR	3613630	Symbol	grpslen		3613215						
ANR	3613631	Symbol	ptr		3613215						
ANR	3613632	Symbol	strerror		3613215						
ANR	3613633	Symbol	feof		3613215						
ANR	3613634	Symbol	* end		3613215						
ANR	3613635	Function	giduse_probe	212:0:5216:5888							
ANR	3613636	FunctionDef	"giduse_probe (gid_t first , int count , int * used)"		3613635	0					
ANR	3613637	CompoundStatement		214:0:5268:5888	3613635	0					
ANR	3613638	IdentifierDeclStatement	int i ;	215:1:5271:5276	3613635	0	True				
ANR	3613639	IdentifierDecl	i		3613635	0					
ANR	3613640	IdentifierDeclType	int		3613635	0					
ANR	3613641	Identifier	i		3613635	1					
ANR	3613642	IdentifierDeclStatement	"DIR * dir = opendir ( ""/proc"" ) ;"	217:1:5280:5307	3613635	1	True				
ANR	3613643	IdentifierDecl	"* dir = opendir ( ""/proc"" )"		3613635	0					
ANR	3613644	IdentifierDeclType	DIR *		3613635	0					
ANR	3613645	Identifier	dir		3613635	1					
ANR	3613646	AssignmentExpression	"* dir = opendir ( ""/proc"" )"		3613635	2		=			
ANR	3613647	Identifier	dir		3613635	0					
ANR	3613648	CallExpression	"opendir ( ""/proc"" )"		3613635	1					
ANR	3613649	Callee	opendir		3613635	0					
ANR	3613650	Identifier	opendir		3613635	0					
ANR	3613651	ArgumentList	"""/proc"""		3613635	1					
ANR	3613652	Argument	"""/proc"""		3613635	0					
ANR	3613653	PrimaryExpression	"""/proc"""		3613635	0					
ANR	3613654	IfStatement	if ( dir == NULL )		3613635	2					
ANR	3613655	Condition	dir == NULL	218:5:5314:5324	3613635	0	True				
ANR	3613656	EqualityExpression	dir == NULL		3613635	0		==			
ANR	3613657	Identifier	dir		3613635	0					
ANR	3613658	Identifier	NULL		3613635	1					
ANR	3613659	CompoundStatement		5:18:58:58	3613635	1					
ANR	3613660	ExpressionStatement	"err_sprintf ( ""opendir failure on /proc: %s"" , strerror ( errno ) )"	219:2:5331:5391	3613635	0	True				
ANR	3613661	CallExpression	"err_sprintf ( ""opendir failure on /proc: %s"" , strerror ( errno ) )"		3613635	0					
ANR	3613662	Callee	err_sprintf		3613635	0					
ANR	3613663	Identifier	err_sprintf		3613635	0					
ANR	3613664	ArgumentList	"""opendir failure on /proc: %s"""		3613635	1					
ANR	3613665	Argument	"""opendir failure on /proc: %s"""		3613635	0					
ANR	3613666	PrimaryExpression	"""opendir failure on /proc: %s"""		3613635	0					
ANR	3613667	Argument	strerror ( errno )		3613635	1					
ANR	3613668	CallExpression	strerror ( errno )		3613635	0					
ANR	3613669	Callee	strerror		3613635	0					
ANR	3613670	Identifier	strerror		3613635	0					
ANR	3613671	ArgumentList	errno		3613635	1					
ANR	3613672	Argument	errno		3613635	0					
ANR	3613673	Identifier	errno		3613635	0					
ANR	3613674	ReturnStatement	return - 1 ;	220:2:5395:5404	3613635	1	True				
ANR	3613675	UnaryOperationExpression	- 1		3613635	0					
ANR	3613676	UnaryOperator	-		3613635	0					
ANR	3613677	PrimaryExpression	1		3613635	1					
ANR	3613678	ForStatement	for ( i = 0 ; i < count ; i ++ )		3613635	3					
ANR	3613679	ForInit	i = 0 ;	223:6:5416:5421	3613635	0	True				
ANR	3613680	AssignmentExpression	i = 0		3613635	0		=			
ANR	3613681	Identifier	i		3613635	0					
ANR	3613682	PrimaryExpression	0		3613635	1					
ANR	3613683	Condition	i < count	223:13:5423:5431	3613635	1	True				
ANR	3613684	RelationalExpression	i < count		3613635	0		<			
ANR	3613685	Identifier	i		3613635	0					
ANR	3613686	Identifier	count		3613635	1					
ANR	3613687	PostIncDecOperationExpression	i ++	223:24:5434:5436	3613635	2	True				
ANR	3613688	Identifier	i		3613635	0					
ANR	3613689	IncDec	++		3613635	1					
ANR	3613690	CompoundStatement		10:29:170:170	3613635	3					
ANR	3613691	ExpressionStatement	used [ i ] = 0	224:2:5443:5454	3613635	0	True				
ANR	3613692	AssignmentExpression	used [ i ] = 0		3613635	0		=			
ANR	3613693	ArrayIndexing	used [ i ]		3613635	0					
ANR	3613694	Identifier	used		3613635	0					
ANR	3613695	Identifier	i		3613635	1					
ANR	3613696	PrimaryExpression	0		3613635	1					
ANR	3613697	WhileStatement	while ( 1 )		3613635	4					
ANR	3613698	Condition	1	227:8:5468:5468	3613635	0	True				
ANR	3613699	PrimaryExpression	1		3613635	0					
ANR	3613700	CompoundStatement		30:2:407:434	3613635	1					
ANR	3613701	IdentifierDeclStatement	struct dirent * de = readdir ( dir ) ;	229:2:5476:5508	3613635	0	True				
ANR	3613702	IdentifierDecl	* de = readdir ( dir )		3613635	0					
ANR	3613703	IdentifierDeclType	struct dirent *		3613635	0					
ANR	3613704	Identifier	de		3613635	1					
ANR	3613705	AssignmentExpression	* de = readdir ( dir )		3613635	2		=			
ANR	3613706	Identifier	de		3613635	0					
ANR	3613707	CallExpression	readdir ( dir )		3613635	1					
ANR	3613708	Callee	readdir		3613635	0					
ANR	3613709	Identifier	readdir		3613635	0					
ANR	3613710	ArgumentList	dir		3613635	1					
ANR	3613711	Argument	dir		3613635	0					
ANR	3613712	Identifier	dir		3613635	0					
ANR	3613713	IfStatement	if ( de == NULL )		3613635	1					
ANR	3613714	Condition	de == NULL	230:6:5516:5525	3613635	0	True				
ANR	3613715	EqualityExpression	de == NULL		3613635	0		==			
ANR	3613716	Identifier	de		3613635	0					
ANR	3613717	Identifier	NULL		3613635	1					
ANR	3613718	CompoundStatement		17:18:259:259	3613635	1					
ANR	3613719	BreakStatement	break ;	231:3:5533:5538	3613635	0	True				
ANR	3613720	IfStatement	if ( ! isdigit ( de -> d_name [ 0 ] ) )		3613635	2					
ANR	3613721	Condition	! isdigit ( de -> d_name [ 0 ] )	234:6:5551:5573	3613635	0	True				
ANR	3613722	UnaryOperationExpression	! isdigit ( de -> d_name [ 0 ] )		3613635	0					
ANR	3613723	UnaryOperator	!		3613635	0					
ANR	3613724	CallExpression	isdigit ( de -> d_name [ 0 ] )		3613635	1					
ANR	3613725	Callee	isdigit		3613635	0					
ANR	3613726	Identifier	isdigit		3613635	0					
ANR	3613727	ArgumentList	de -> d_name [ 0 ]		3613635	1					
ANR	3613728	Argument	de -> d_name [ 0 ]		3613635	0					
ANR	3613729	ArrayIndexing	de -> d_name [ 0 ]		3613635	0					
ANR	3613730	PtrMemberAccess	de -> d_name		3613635	0					
ANR	3613731	Identifier	de		3613635	0					
ANR	3613732	Identifier	d_name		3613635	1					
ANR	3613733	PrimaryExpression	0		3613635	1					
ANR	3613734	CompoundStatement		21:31:307:307	3613635	1					
ANR	3613735	ContinueStatement	continue ;	235:3:5581:5589	3613635	0	True				
ANR	3613736	IdentifierDeclStatement	gidlist_t list ;	238:2:5598:5612	3613635	3	True				
ANR	3613737	IdentifierDecl	list		3613635	0					
ANR	3613738	IdentifierDeclType	gidlist_t		3613635	0					
ANR	3613739	Identifier	list		3613635	1					
ANR	3613740	IfStatement	"if ( getgids ( de -> d_name , & list ) == - 1 )"		3613635	4					
ANR	3613741	Condition	"getgids ( de -> d_name , & list ) == - 1"	239:6:5620:5651	3613635	0	True				
ANR	3613742	EqualityExpression	"getgids ( de -> d_name , & list ) == - 1"		3613635	0		==			
ANR	3613743	CallExpression	"getgids ( de -> d_name , & list )"		3613635	0					
ANR	3613744	Callee	getgids		3613635	0					
ANR	3613745	Identifier	getgids		3613635	0					
ANR	3613746	ArgumentList	de -> d_name		3613635	1					
ANR	3613747	Argument	de -> d_name		3613635	0					
ANR	3613748	PtrMemberAccess	de -> d_name		3613635	0					
ANR	3613749	Identifier	de		3613635	0					
ANR	3613750	Identifier	d_name		3613635	1					
ANR	3613751	Argument	& list		3613635	1					
ANR	3613752	UnaryOperationExpression	& list		3613635	0					
ANR	3613753	UnaryOperator	&		3613635	0					
ANR	3613754	Identifier	list		3613635	1					
ANR	3613755	UnaryOperationExpression	- 1		3613635	1					
ANR	3613756	UnaryOperator	-		3613635	0					
ANR	3613757	PrimaryExpression	1		3613635	1					
ANR	3613758	CompoundStatement		26:40:385:385	3613635	1					
ANR	3613759	ContinueStatement	continue ;	240:3:5659:5667	3613635	0	True				
ANR	3613760	IdentifierDeclStatement	gidnode_t * node = list . head ;	243:2:5676:5703	3613635	5	True				
ANR	3613761	IdentifierDecl	* node = list . head		3613635	0					
ANR	3613762	IdentifierDeclType	gidnode_t *		3613635	0					
ANR	3613763	Identifier	node		3613635	1					
ANR	3613764	AssignmentExpression	* node = list . head		3613635	2		=			
ANR	3613765	Identifier	node		3613635	0					
ANR	3613766	MemberAccess	list . head		3613635	1					
ANR	3613767	Identifier	list		3613635	0					
ANR	3613768	Identifier	head		3613635	1					
ANR	3613769	WhileStatement	while ( node != NULL )		3613635	6					
ANR	3613770	Condition	node != NULL	244:9:5714:5725	3613635	0	True				
ANR	3613771	EqualityExpression	node != NULL		3613635	0		!=			
ANR	3613772	Identifier	node		3613635	0					
ANR	3613773	Identifier	NULL		3613635	1					
ANR	3613774	CompoundStatement		31:23:459:459	3613635	1					
ANR	3613775	ExpressionStatement	i = node -> gid - first	245:3:5733:5754	3613635	0	True				
ANR	3613776	AssignmentExpression	i = node -> gid - first		3613635	0		=			
ANR	3613777	Identifier	i		3613635	0					
ANR	3613778	AdditiveExpression	node -> gid - first		3613635	1		-			
ANR	3613779	PtrMemberAccess	node -> gid		3613635	0					
ANR	3613780	Identifier	node		3613635	0					
ANR	3613781	Identifier	gid		3613635	1					
ANR	3613782	Identifier	first		3613635	1					
ANR	3613783	IfStatement	if ( ( i >= 0 ) && ( i < count ) )		3613635	1					
ANR	3613784	Condition	( i >= 0 ) && ( i < count )	246:7:5763:5785	3613635	0	True				
ANR	3613785	AndExpression	( i >= 0 ) && ( i < count )		3613635	0		&&			
ANR	3613786	RelationalExpression	i >= 0		3613635	0		>=			
ANR	3613787	Identifier	i		3613635	0					
ANR	3613788	PrimaryExpression	0		3613635	1					
ANR	3613789	RelationalExpression	i < count		3613635	1		<			
ANR	3613790	Identifier	i		3613635	0					
ANR	3613791	Identifier	count		3613635	1					
ANR	3613792	CompoundStatement		33:32:519:519	3613635	1					
ANR	3613793	ExpressionStatement	used [ i ] ++	247:4:5794:5803	3613635	0	True				
ANR	3613794	PostIncDecOperationExpression	used [ i ] ++		3613635	0					
ANR	3613795	ArrayIndexing	used [ i ]		3613635	0					
ANR	3613796	Identifier	used		3613635	0					
ANR	3613797	Identifier	i		3613635	1					
ANR	3613798	IncDec	++		3613635	1					
ANR	3613799	ExpressionStatement	node = node -> next	249:3:5813:5830	3613635	2	True				
ANR	3613800	AssignmentExpression	node = node -> next		3613635	0		=			
ANR	3613801	Identifier	node		3613635	0					
ANR	3613802	PtrMemberAccess	node -> next		3613635	1					
ANR	3613803	Identifier	node		3613635	0					
ANR	3613804	Identifier	next		3613635	1					
ANR	3613805	ExpressionStatement	listfree ( & list )	252:2:5839:5854	3613635	7	True				
ANR	3613806	CallExpression	listfree ( & list )		3613635	0					
ANR	3613807	Callee	listfree		3613635	0					
ANR	3613808	Identifier	listfree		3613635	0					
ANR	3613809	ArgumentList	& list		3613635	1					
ANR	3613810	Argument	& list		3613635	0					
ANR	3613811	UnaryOperationExpression	& list		3613635	0					
ANR	3613812	UnaryOperator	&		3613635	0					
ANR	3613813	Identifier	list		3613635	1					
ANR	3613814	ExpressionStatement	closedir ( dir )	255:1:5861:5874	3613635	5	True				
ANR	3613815	CallExpression	closedir ( dir )		3613635	0					
ANR	3613816	Callee	closedir		3613635	0					
ANR	3613817	Identifier	closedir		3613635	0					
ANR	3613818	ArgumentList	dir		3613635	1					
ANR	3613819	Argument	dir		3613635	0					
ANR	3613820	Identifier	dir		3613635	0					
ANR	3613821	ReturnStatement	return 0 ;	257:1:5878:5886	3613635	6	True				
ANR	3613822	PrimaryExpression	0		3613635	0					
ANR	3613823	ReturnType	int		3613635	1					
ANR	3613824	Identifier	giduse_probe		3613635	2					
ANR	3613825	ParameterList	"gid_t first , int count , int * used"		3613635	3					
ANR	3613826	Parameter	gid_t first	213:13:5233:5243	3613635	0	True				
ANR	3613827	ParameterType	gid_t		3613635	0					
ANR	3613828	Identifier	first		3613635	1					
ANR	3613829	Parameter	int count	213:26:5246:5254	3613635	1	True				
ANR	3613830	ParameterType	int		3613635	0					
ANR	3613831	Identifier	count		3613635	1					
ANR	3613832	Parameter	int * used	213:37:5257:5265	3613635	2	True				
ANR	3613833	ParameterType	int *		3613635	0					
ANR	3613834	Identifier	used		3613635	1					
ANR	3613835	CFGEntryNode	ENTRY		3613635		True				
ANR	3613836	CFGExitNode	EXIT		3613635		True				
ANR	3613837	Symbol	de		3613635						
ANR	3613838	Symbol	de -> d_name		3613635						
ANR	3613839	Symbol	getgids		3613635						
ANR	3613840	Symbol	used		3613635						
ANR	3613841	Symbol	node -> gid		3613635						
ANR	3613842	Symbol	dir		3613635						
ANR	3613843	Symbol	list . head		3613635						
ANR	3613844	Symbol	readdir		3613635						
ANR	3613845	Symbol	& list		3613635						
ANR	3613846	Symbol	* used		3613635						
ANR	3613847	Symbol	* de -> d_name		3613635						
ANR	3613848	Symbol	* node		3613635						
ANR	3613849	Symbol	isdigit		3613635						
ANR	3613850	Symbol	errno		3613635						
ANR	3613851	Symbol	NULL		3613635						
ANR	3613852	Symbol	* de		3613635						
ANR	3613853	Symbol	count		3613635						
ANR	3613854	Symbol	i		3613635						
ANR	3613855	Symbol	node -> next		3613635						
ANR	3613856	Symbol	list		3613635						
ANR	3613857	Symbol	* * de		3613635						
ANR	3613858	Symbol	strerror		3613635						
ANR	3613859	Symbol	node		3613635						
ANR	3613860	Symbol	* i		3613635						
ANR	3613861	Symbol	opendir		3613635						
ANR	3613862	Symbol	first		3613635						
ANR	3613863	Function	parsegid	261:0:5892:6072							
ANR	3613864	FunctionDef	parsegid (char * str)		3613863	0					
ANR	3613865	CompoundStatement		263:0:5925:6072	3613863	0					
ANR	3613866	IfStatement	if ( ! isdigit ( str [ 0 ] ) )		3613863	0					
ANR	3613867	Condition	! isdigit ( str [ 0 ] )	264:5:5932:5947	3613863	0	True				
ANR	3613868	UnaryOperationExpression	! isdigit ( str [ 0 ] )		3613863	0					
ANR	3613869	UnaryOperator	!		3613863	0					
ANR	3613870	CallExpression	isdigit ( str [ 0 ] )		3613863	1					
ANR	3613871	Callee	isdigit		3613863	0					
ANR	3613872	Identifier	isdigit		3613863	0					
ANR	3613873	ArgumentList	str [ 0 ]		3613863	1					
ANR	3613874	Argument	str [ 0 ]		3613863	0					
ANR	3613875	ArrayIndexing	str [ 0 ]		3613863	0					
ANR	3613876	Identifier	str		3613863	0					
ANR	3613877	PrimaryExpression	0		3613863	1					
ANR	3613878	CompoundStatement		2:23:24:24	3613863	1					
ANR	3613879	ReturnStatement	return 0 ;	265:2:5954:5962	3613863	0	True				
ANR	3613880	PrimaryExpression	0		3613863	0					
ANR	3613881	IdentifierDeclStatement	char * end ;	267:1:5968:5977	3613863	1	True				
ANR	3613882	IdentifierDecl	* end		3613863	0					
ANR	3613883	IdentifierDeclType	char *		3613863	0					
ANR	3613884	Identifier	end		3613863	1					
ANR	3613885	IdentifierDeclStatement	"gid_t gid = ( gid_t ) strtoul ( str , & end , 10 ) ;"	268:1:5980:6021	3613863	2	True				
ANR	3613886	IdentifierDecl	"gid = ( gid_t ) strtoul ( str , & end , 10 )"		3613863	0					
ANR	3613887	IdentifierDeclType	gid_t		3613863	0					
ANR	3613888	Identifier	gid		3613863	1					
ANR	3613889	AssignmentExpression	"gid = ( gid_t ) strtoul ( str , & end , 10 )"		3613863	2		=			
ANR	3613890	Identifier	gid		3613863	0					
ANR	3613891	CastExpression	"( gid_t ) strtoul ( str , & end , 10 )"		3613863	1					
ANR	3613892	CastTarget	gid_t		3613863	0					
ANR	3613893	CallExpression	"strtoul ( str , & end , 10 )"		3613863	1					
ANR	3613894	Callee	strtoul		3613863	0					
ANR	3613895	Identifier	strtoul		3613863	0					
ANR	3613896	ArgumentList	str		3613863	1					
ANR	3613897	Argument	str		3613863	0					
ANR	3613898	Identifier	str		3613863	0					
ANR	3613899	Argument	& end		3613863	1					
ANR	3613900	UnaryOperationExpression	& end		3613863	0					
ANR	3613901	UnaryOperator	&		3613863	0					
ANR	3613902	Identifier	end		3613863	1					
ANR	3613903	Argument	10		3613863	2					
ANR	3613904	PrimaryExpression	10		3613863	0					
ANR	3613905	IfStatement	if ( * end != '\\0' )		3613863	3					
ANR	3613906	Condition	* end != '\\0'	269:5:6028:6039	3613863	0	True				
ANR	3613907	EqualityExpression	* end != '\\0'		3613863	0		!=			
ANR	3613908	UnaryOperationExpression	* end		3613863	0					
ANR	3613909	UnaryOperator	*		3613863	0					
ANR	3613910	Identifier	end		3613863	1					
ANR	3613911	PrimaryExpression	'\\0'		3613863	1					
ANR	3613912	CompoundStatement		7:19:116:116	3613863	1					
ANR	3613913	ReturnStatement	return 0 ;	270:2:6046:6054	3613863	0	True				
ANR	3613914	PrimaryExpression	0		3613863	0					
ANR	3613915	ReturnStatement	return gid ;	272:1:6060:6070	3613863	4	True				
ANR	3613916	Identifier	gid		3613863	0					
ANR	3613917	ReturnType	static gid_t		3613863	1					
ANR	3613918	Identifier	parsegid		3613863	2					
ANR	3613919	ParameterList	char * str		3613863	3					
ANR	3613920	Parameter	char * str	262:9:5914:5922	3613863	0	True				
ANR	3613921	ParameterType	char *		3613863	0					
ANR	3613922	Identifier	str		3613863	1					
ANR	3613923	CFGEntryNode	ENTRY		3613863		True				
ANR	3613924	CFGExitNode	EXIT		3613863		True				
ANR	3613925	Symbol	str		3613863						
ANR	3613926	Symbol	gid		3613863						
ANR	3613927	Symbol	& end		3613863						
ANR	3613928	Symbol	strtoul		3613863						
ANR	3613929	Symbol	end		3613863						
ANR	3613930	Symbol	* end		3613863						
ANR	3613931	Symbol	* str		3613863						
ANR	3613932	Symbol	isdigit		3613863						
ANR	3613933	Function	main	275:0:6075:7459							
ANR	3613934	FunctionDef	"main (int argc , char * argv [ ])"		3613933	0					
ANR	3613935	CompoundStatement		277:0:6108:7459	3613933	0					
ANR	3613936	IdentifierDeclStatement	int i ;	278:1:6111:6116	3613933	0	True				
ANR	3613937	IdentifierDecl	i		3613933	0					
ANR	3613938	IdentifierDeclType	int		3613933	0					
ANR	3613939	Identifier	i		3613933	1					
ANR	3613940	IfStatement	if ( argc != 3 )		3613933	1					
ANR	3613941	Condition	argc != 3	280:5:6124:6132	3613933	0	True				
ANR	3613942	EqualityExpression	argc != 3		3613933	0		!=			
ANR	3613943	Identifier	argc		3613933	0					
ANR	3613944	PrimaryExpression	3		3613933	1					
ANR	3613945	CompoundStatement		4:16:26:26	3613933	1					
ANR	3613946	ExpressionStatement	"fprintf ( stderr , ""usage: gidd_alloc <min_gid> <max_gid>\\n"" )"	281:2:6139:6197	3613933	0	True				
ANR	3613947	CallExpression	"fprintf ( stderr , ""usage: gidd_alloc <min_gid> <max_gid>\\n"" )"		3613933	0					
ANR	3613948	Callee	fprintf		3613933	0					
ANR	3613949	Identifier	fprintf		3613933	0					
ANR	3613950	ArgumentList	stderr		3613933	1					
ANR	3613951	Argument	stderr		3613933	0					
ANR	3613952	Identifier	stderr		3613933	0					
ANR	3613953	Argument	"""usage: gidd_alloc <min_gid> <max_gid>\\n"""		3613933	1					
ANR	3613954	PrimaryExpression	"""usage: gidd_alloc <min_gid> <max_gid>\\n"""		3613933	0					
ANR	3613955	ReturnStatement	return 1 ;	282:2:6201:6209	3613933	1	True				
ANR	3613956	PrimaryExpression	1		3613933	0					
ANR	3613957	IdentifierDeclStatement	gid_t min = parsegid ( argv [ 1 ] ) ;	284:1:6215:6244	3613933	2	True				
ANR	3613958	IdentifierDecl	min = parsegid ( argv [ 1 ] )		3613933	0					
ANR	3613959	IdentifierDeclType	gid_t		3613933	0					
ANR	3613960	Identifier	min		3613933	1					
ANR	3613961	AssignmentExpression	min = parsegid ( argv [ 1 ] )		3613933	2		=			
ANR	3613962	Identifier	min		3613933	0					
ANR	3613963	CallExpression	parsegid ( argv [ 1 ] )		3613933	1					
ANR	3613964	Callee	parsegid		3613933	0					
ANR	3613965	Identifier	parsegid		3613933	0					
ANR	3613966	ArgumentList	argv [ 1 ]		3613933	1					
ANR	3613967	Argument	argv [ 1 ]		3613933	0					
ANR	3613968	ArrayIndexing	argv [ 1 ]		3613933	0					
ANR	3613969	Identifier	argv		3613933	0					
ANR	3613970	PrimaryExpression	1		3613933	1					
ANR	3613971	IfStatement	if ( min == 0 )		3613933	3					
ANR	3613972	Condition	min == 0	285:5:6251:6258	3613933	0	True				
ANR	3613973	EqualityExpression	min == 0		3613933	0		==			
ANR	3613974	Identifier	min		3613933	0					
ANR	3613975	PrimaryExpression	0		3613933	1					
ANR	3613976	CompoundStatement		9:15:152:152	3613933	1					
ANR	3613977	ExpressionStatement	"fprintf ( stderr , ""invalid value for minimum GID: %s\\n"" , argv [ 1 ] )"	286:2:6265:6348	3613933	0	True				
ANR	3613978	CallExpression	"fprintf ( stderr , ""invalid value for minimum GID: %s\\n"" , argv [ 1 ] )"		3613933	0					
ANR	3613979	Callee	fprintf		3613933	0					
ANR	3613980	Identifier	fprintf		3613933	0					
ANR	3613981	ArgumentList	stderr		3613933	1					
ANR	3613982	Argument	stderr		3613933	0					
ANR	3613983	Identifier	stderr		3613933	0					
ANR	3613984	Argument	"""invalid value for minimum GID: %s\\n"""		3613933	1					
ANR	3613985	PrimaryExpression	"""invalid value for minimum GID: %s\\n"""		3613933	0					
ANR	3613986	Argument	argv [ 1 ]		3613933	2					
ANR	3613987	ArrayIndexing	argv [ 1 ]		3613933	0					
ANR	3613988	Identifier	argv		3613933	0					
ANR	3613989	PrimaryExpression	1		3613933	1					
ANR	3613990	ReturnStatement	return 1 ;	289:2:6352:6360	3613933	1	True				
ANR	3613991	PrimaryExpression	1		3613933	0					
ANR	3613992	IdentifierDeclStatement	gid_t max = parsegid ( argv [ 2 ] ) ;	291:1:6366:6395	3613933	4	True				
ANR	3613993	IdentifierDecl	max = parsegid ( argv [ 2 ] )		3613933	0					
ANR	3613994	IdentifierDeclType	gid_t		3613933	0					
ANR	3613995	Identifier	max		3613933	1					
ANR	3613996	AssignmentExpression	max = parsegid ( argv [ 2 ] )		3613933	2		=			
ANR	3613997	Identifier	max		3613933	0					
ANR	3613998	CallExpression	parsegid ( argv [ 2 ] )		3613933	1					
ANR	3613999	Callee	parsegid		3613933	0					
ANR	3614000	Identifier	parsegid		3613933	0					
ANR	3614001	ArgumentList	argv [ 2 ]		3613933	1					
ANR	3614002	Argument	argv [ 2 ]		3613933	0					
ANR	3614003	ArrayIndexing	argv [ 2 ]		3613933	0					
ANR	3614004	Identifier	argv		3613933	0					
ANR	3614005	PrimaryExpression	2		3613933	1					
ANR	3614006	IfStatement	if ( max == 0 )		3613933	5					
ANR	3614007	Condition	max == 0	292:5:6402:6409	3613933	0	True				
ANR	3614008	EqualityExpression	max == 0		3613933	0		==			
ANR	3614009	Identifier	max		3613933	0					
ANR	3614010	PrimaryExpression	0		3613933	1					
ANR	3614011	CompoundStatement		16:15:303:303	3613933	1					
ANR	3614012	ExpressionStatement	"fprintf ( stderr , ""invalid value for maximum GID: %s\\n"" , argv [ 2 ] )"	293:2:6416:6499	3613933	0	True				
ANR	3614013	CallExpression	"fprintf ( stderr , ""invalid value for maximum GID: %s\\n"" , argv [ 2 ] )"		3613933	0					
ANR	3614014	Callee	fprintf		3613933	0					
ANR	3614015	Identifier	fprintf		3613933	0					
ANR	3614016	ArgumentList	stderr		3613933	1					
ANR	3614017	Argument	stderr		3613933	0					
ANR	3614018	Identifier	stderr		3613933	0					
ANR	3614019	Argument	"""invalid value for maximum GID: %s\\n"""		3613933	1					
ANR	3614020	PrimaryExpression	"""invalid value for maximum GID: %s\\n"""		3613933	0					
ANR	3614021	Argument	argv [ 2 ]		3613933	2					
ANR	3614022	ArrayIndexing	argv [ 2 ]		3613933	0					
ANR	3614023	Identifier	argv		3613933	0					
ANR	3614024	PrimaryExpression	2		3613933	1					
ANR	3614025	ReturnStatement	return 1 ;	296:2:6503:6511	3613933	1	True				
ANR	3614026	PrimaryExpression	1		3613933	0					
ANR	3614027	IfStatement	if ( min > max )		3613933	6					
ANR	3614028	Condition	min > max	298:5:6521:6529	3613933	0	True				
ANR	3614029	RelationalExpression	min > max		3613933	0		>			
ANR	3614030	Identifier	min		3613933	0					
ANR	3614031	Identifier	max		3613933	1					
ANR	3614032	CompoundStatement		22:16:423:423	3613933	1					
ANR	3614033	ExpressionStatement	"fprintf ( stderr , ""invalid GID range given: %u - %u\\n"" , ( unsigned ) min , ( unsigned ) max )"	299:2:6536:6649	3613933	0	True				
ANR	3614034	CallExpression	"fprintf ( stderr , ""invalid GID range given: %u - %u\\n"" , ( unsigned ) min , ( unsigned ) max )"		3613933	0					
ANR	3614035	Callee	fprintf		3613933	0					
ANR	3614036	Identifier	fprintf		3613933	0					
ANR	3614037	ArgumentList	stderr		3613933	1					
ANR	3614038	Argument	stderr		3613933	0					
ANR	3614039	Identifier	stderr		3613933	0					
ANR	3614040	Argument	"""invalid GID range given: %u - %u\\n"""		3613933	1					
ANR	3614041	PrimaryExpression	"""invalid GID range given: %u - %u\\n"""		3613933	0					
ANR	3614042	Argument	( unsigned ) min		3613933	2					
ANR	3614043	CastExpression	( unsigned ) min		3613933	0					
ANR	3614044	CastTarget	unsigned		3613933	0					
ANR	3614045	Identifier	min		3613933	1					
ANR	3614046	Argument	( unsigned ) max		3613933	3					
ANR	3614047	CastExpression	( unsigned ) max		3613933	0					
ANR	3614048	CastTarget	unsigned		3613933	0					
ANR	3614049	Identifier	max		3613933	1					
ANR	3614050	ReturnStatement	return 1 ;	303:2:6653:6661	3613933	1	True				
ANR	3614051	PrimaryExpression	1		3613933	0					
ANR	3614052	IdentifierDeclStatement	int count = max - min + 1 ;	306:1:6668:6693	3613933	7	True				
ANR	3614053	IdentifierDecl	count = max - min + 1		3613933	0					
ANR	3614054	IdentifierDeclType	int		3613933	0					
ANR	3614055	Identifier	count		3613933	1					
ANR	3614056	AssignmentExpression	count = max - min + 1		3613933	2		=			
ANR	3614057	Identifier	count		3613933	0					
ANR	3614058	AdditiveExpression	max - min + 1		3613933	1		-			
ANR	3614059	Identifier	max		3613933	0					
ANR	3614060	AdditiveExpression	min + 1		3613933	1		+			
ANR	3614061	Identifier	min		3613933	0					
ANR	3614062	PrimaryExpression	1		3613933	1					
ANR	3614063	IdentifierDeclStatement	int used [ count ] ;	307:1:6696:6711	3613933	8	True				
ANR	3614064	IdentifierDecl	used [ count ]		3613933	0					
ANR	3614065	IdentifierDeclType	int [ count ]		3613933	0					
ANR	3614066	Identifier	used		3613933	1					
ANR	3614067	Identifier	count		3613933	2					
ANR	3614068	IfStatement	"if ( giduse_probe ( min , count , used ) == 1 )"		3613933	9					
ANR	3614069	Condition	"giduse_probe ( min , count , used ) == 1"	308:5:6718:6752	3613933	0	True				
ANR	3614070	EqualityExpression	"giduse_probe ( min , count , used ) == 1"		3613933	0		==			
ANR	3614071	CallExpression	"giduse_probe ( min , count , used )"		3613933	0					
ANR	3614072	Callee	giduse_probe		3613933	0					
ANR	3614073	Identifier	giduse_probe		3613933	0					
ANR	3614074	ArgumentList	min		3613933	1					
ANR	3614075	Argument	min		3613933	0					
ANR	3614076	Identifier	min		3613933	0					
ANR	3614077	Argument	count		3613933	1					
ANR	3614078	Identifier	count		3613933	0					
ANR	3614079	Argument	used		3613933	2					
ANR	3614080	Identifier	used		3613933	0					
ANR	3614081	PrimaryExpression	1		3613933	1					
ANR	3614082	CompoundStatement		32:42:646:646	3613933	1					
ANR	3614083	ExpressionStatement	"fprintf ( stderr , ""giduse_probe error: %s"" , err_str )"	309:2:6759:6809	3613933	0	True				
ANR	3614084	CallExpression	"fprintf ( stderr , ""giduse_probe error: %s"" , err_str )"		3613933	0					
ANR	3614085	Callee	fprintf		3613933	0					
ANR	3614086	Identifier	fprintf		3613933	0					
ANR	3614087	ArgumentList	stderr		3613933	1					
ANR	3614088	Argument	stderr		3613933	0					
ANR	3614089	Identifier	stderr		3613933	0					
ANR	3614090	Argument	"""giduse_probe error: %s"""		3613933	1					
ANR	3614091	PrimaryExpression	"""giduse_probe error: %s"""		3613933	0					
ANR	3614092	Argument	err_str		3613933	2					
ANR	3614093	Identifier	err_str		3613933	0					
ANR	3614094	ReturnStatement	return 1 ;	310:2:6813:6821	3613933	1	True				
ANR	3614095	PrimaryExpression	1		3613933	0					
ANR	3614096	IdentifierDeclStatement	gid_t gid = 0 ;	313:1:6828:6841	3613933	10	True				
ANR	3614097	IdentifierDecl	gid = 0		3613933	0					
ANR	3614098	IdentifierDeclType	gid_t		3613933	0					
ANR	3614099	Identifier	gid		3613933	1					
ANR	3614100	AssignmentExpression	gid = 0		3613933	2		=			
ANR	3614101	Identifier	gid		3613933	0					
ANR	3614102	PrimaryExpression	0		3613933	1					
ANR	3614103	ForStatement	for ( i = 0 ; i < count ; i ++ )		3613933	11					
ANR	3614104	ForInit	i = 0 ;	314:6:6849:6854	3613933	0	True				
ANR	3614105	AssignmentExpression	i = 0		3613933	0		=			
ANR	3614106	Identifier	i		3613933	0					
ANR	3614107	PrimaryExpression	0		3613933	1					
ANR	3614108	Condition	i < count	314:13:6856:6864	3613933	1	True				
ANR	3614109	RelationalExpression	i < count		3613933	0		<			
ANR	3614110	Identifier	i		3613933	0					
ANR	3614111	Identifier	count		3613933	1					
ANR	3614112	PostIncDecOperationExpression	i ++	314:24:6867:6869	3613933	2	True				
ANR	3614113	Identifier	i		3613933	0					
ANR	3614114	IncDec	++		3613933	1					
ANR	3614115	CompoundStatement		38:29:763:763	3613933	3					
ANR	3614116	IfStatement	if ( used [ i ] == 0 )		3613933	0					
ANR	3614117	Condition	used [ i ] == 0	315:6:6880:6891	3613933	0	True				
ANR	3614118	EqualityExpression	used [ i ] == 0		3613933	0		==			
ANR	3614119	ArrayIndexing	used [ i ]		3613933	0					
ANR	3614120	Identifier	used		3613933	0					
ANR	3614121	Identifier	i		3613933	1					
ANR	3614122	PrimaryExpression	0		3613933	1					
ANR	3614123	CompoundStatement		39:20:785:785	3613933	1					
ANR	3614124	ExpressionStatement	gid = min + i	316:3:6899:6912	3613933	0	True				
ANR	3614125	AssignmentExpression	gid = min + i		3613933	0		=			
ANR	3614126	Identifier	gid		3613933	0					
ANR	3614127	AdditiveExpression	min + i		3613933	1		+			
ANR	3614128	Identifier	min		3613933	0					
ANR	3614129	Identifier	i		3613933	1					
ANR	3614130	BreakStatement	break ;	317:3:6917:6922	3613933	1	True				
ANR	3614131	IfStatement	if ( gid == 0 )		3613933	12					
ANR	3614132	Condition	gid == 0	320:5:6936:6943	3613933	0	True				
ANR	3614133	EqualityExpression	gid == 0		3613933	0		==			
ANR	3614134	Identifier	gid		3613933	0					
ANR	3614135	PrimaryExpression	0		3613933	1					
ANR	3614136	CompoundStatement		44:15:837:837	3613933	1					
ANR	3614137	ExpressionStatement	"fprintf ( stderr , ""no GIDs available\\n"" )"	321:2:6950:6988	3613933	0	True				
ANR	3614138	CallExpression	"fprintf ( stderr , ""no GIDs available\\n"" )"		3613933	0					
ANR	3614139	Callee	fprintf		3613933	0					
ANR	3614140	Identifier	fprintf		3613933	0					
ANR	3614141	ArgumentList	stderr		3613933	1					
ANR	3614142	Argument	stderr		3613933	0					
ANR	3614143	Identifier	stderr		3613933	0					
ANR	3614144	Argument	"""no GIDs available\\n"""		3613933	1					
ANR	3614145	PrimaryExpression	"""no GIDs available\\n"""		3613933	0					
ANR	3614146	ReturnStatement	return 1 ;	322:2:6992:7000	3613933	1	True				
ANR	3614147	PrimaryExpression	1		3613933	0					
ANR	3614148	IfStatement	"if ( setgroups ( 1 , & gid ) == - 1 )"		3613933	13					
ANR	3614149	Condition	"setgroups ( 1 , & gid ) == - 1"	325:5:7011:7034	3613933	0	True				
ANR	3614150	EqualityExpression	"setgroups ( 1 , & gid ) == - 1"		3613933	0		==			
ANR	3614151	CallExpression	"setgroups ( 1 , & gid )"		3613933	0					
ANR	3614152	Callee	setgroups		3613933	0					
ANR	3614153	Identifier	setgroups		3613933	0					
ANR	3614154	ArgumentList	1		3613933	1					
ANR	3614155	Argument	1		3613933	0					
ANR	3614156	PrimaryExpression	1		3613933	0					
ANR	3614157	Argument	& gid		3613933	1					
ANR	3614158	UnaryOperationExpression	& gid		3613933	0					
ANR	3614159	UnaryOperator	&		3613933	0					
ANR	3614160	Identifier	gid		3613933	1					
ANR	3614161	UnaryOperationExpression	- 1		3613933	1					
ANR	3614162	UnaryOperator	-		3613933	0					
ANR	3614163	PrimaryExpression	1		3613933	1					
ANR	3614164	CompoundStatement		49:31:928:928	3613933	1					
ANR	3614165	ExpressionStatement	"fprintf ( stderr , ""setgroups failure: %s\\n"" , strerror ( errno ) )"	326:2:7041:7100	3613933	0	True				
ANR	3614166	CallExpression	"fprintf ( stderr , ""setgroups failure: %s\\n"" , strerror ( errno ) )"		3613933	0					
ANR	3614167	Callee	fprintf		3613933	0					
ANR	3614168	Identifier	fprintf		3613933	0					
ANR	3614169	ArgumentList	stderr		3613933	1					
ANR	3614170	Argument	stderr		3613933	0					
ANR	3614171	Identifier	stderr		3613933	0					
ANR	3614172	Argument	"""setgroups failure: %s\\n"""		3613933	1					
ANR	3614173	PrimaryExpression	"""setgroups failure: %s\\n"""		3613933	0					
ANR	3614174	Argument	strerror ( errno )		3613933	2					
ANR	3614175	CallExpression	strerror ( errno )		3613933	0					
ANR	3614176	Callee	strerror		3613933	0					
ANR	3614177	Identifier	strerror		3613933	0					
ANR	3614178	ArgumentList	errno		3613933	1					
ANR	3614179	Argument	errno		3613933	0					
ANR	3614180	Identifier	errno		3613933	0					
ANR	3614181	ReturnStatement	return 1 ;	327:2:7104:7112	3613933	1	True				
ANR	3614182	PrimaryExpression	1		3613933	0					
ANR	3614183	IdentifierDeclStatement	int n ;	330:1:7119:7124	3613933	14	True				
ANR	3614184	IdentifierDecl	n		3613933	0					
ANR	3614185	IdentifierDeclType	int		3613933	0					
ANR	3614186	Identifier	n		3613933	1					
ANR	3614187	IfStatement	"if ( giduse_probe ( gid , 1 , & n ) == - 1 )"		3613933	15					
ANR	3614188	Condition	"giduse_probe ( gid , 1 , & n ) == - 1"	331:5:7131:7160	3613933	0	True				
ANR	3614189	EqualityExpression	"giduse_probe ( gid , 1 , & n ) == - 1"		3613933	0		==			
ANR	3614190	CallExpression	"giduse_probe ( gid , 1 , & n )"		3613933	0					
ANR	3614191	Callee	giduse_probe		3613933	0					
ANR	3614192	Identifier	giduse_probe		3613933	0					
ANR	3614193	ArgumentList	gid		3613933	1					
ANR	3614194	Argument	gid		3613933	0					
ANR	3614195	Identifier	gid		3613933	0					
ANR	3614196	Argument	1		3613933	1					
ANR	3614197	PrimaryExpression	1		3613933	0					
ANR	3614198	Argument	& n		3613933	2					
ANR	3614199	UnaryOperationExpression	& n		3613933	0					
ANR	3614200	UnaryOperator	&		3613933	0					
ANR	3614201	Identifier	n		3613933	1					
ANR	3614202	UnaryOperationExpression	- 1		3613933	1					
ANR	3614203	UnaryOperator	-		3613933	0					
ANR	3614204	PrimaryExpression	1		3613933	1					
ANR	3614205	CompoundStatement		55:37:1054:1054	3613933	1					
ANR	3614206	ExpressionStatement	"fprintf ( stderr , ""giduse_probe error checking GID %u: %s\\n"" , ( unsigned ) gid , err_str )"	332:2:7167:7280	3613933	0	True				
ANR	3614207	CallExpression	"fprintf ( stderr , ""giduse_probe error checking GID %u: %s\\n"" , ( unsigned ) gid , err_str )"		3613933	0					
ANR	3614208	Callee	fprintf		3613933	0					
ANR	3614209	Identifier	fprintf		3613933	0					
ANR	3614210	ArgumentList	stderr		3613933	1					
ANR	3614211	Argument	stderr		3613933	0					
ANR	3614212	Identifier	stderr		3613933	0					
ANR	3614213	Argument	"""giduse_probe error checking GID %u: %s\\n"""		3613933	1					
ANR	3614214	PrimaryExpression	"""giduse_probe error checking GID %u: %s\\n"""		3613933	0					
ANR	3614215	Argument	( unsigned ) gid		3613933	2					
ANR	3614216	CastExpression	( unsigned ) gid		3613933	0					
ANR	3614217	CastTarget	unsigned		3613933	0					
ANR	3614218	Identifier	gid		3613933	1					
ANR	3614219	Argument	err_str		3613933	3					
ANR	3614220	Identifier	err_str		3613933	0					
ANR	3614221	ReturnStatement	return 1 ;	336:2:7284:7292	3613933	1	True				
ANR	3614222	PrimaryExpression	1		3613933	0					
ANR	3614223	IfStatement	if ( n != 1 )		3613933	16					
ANR	3614224	Condition	n != 1	338:5:7302:7307	3613933	0	True				
ANR	3614225	EqualityExpression	n != 1		3613933	0		!=			
ANR	3614226	Identifier	n		3613933	0					
ANR	3614227	PrimaryExpression	1		3613933	1					
ANR	3614228	CompoundStatement		62:13:1201:1201	3613933	1					
ANR	3614229	ExpressionStatement	"fprintf ( stderr , ""collision on GID %u\\n"" , ( unsigned ) gid )"	339:2:7314:7369	3613933	0	True				
ANR	3614230	CallExpression	"fprintf ( stderr , ""collision on GID %u\\n"" , ( unsigned ) gid )"		3613933	0					
ANR	3614231	Callee	fprintf		3613933	0					
ANR	3614232	Identifier	fprintf		3613933	0					
ANR	3614233	ArgumentList	stderr		3613933	1					
ANR	3614234	Argument	stderr		3613933	0					
ANR	3614235	Identifier	stderr		3613933	0					
ANR	3614236	Argument	"""collision on GID %u\\n"""		3613933	1					
ANR	3614237	PrimaryExpression	"""collision on GID %u\\n"""		3613933	0					
ANR	3614238	Argument	( unsigned ) gid		3613933	2					
ANR	3614239	CastExpression	( unsigned ) gid		3613933	0					
ANR	3614240	CastTarget	unsigned		3613933	0					
ANR	3614241	Identifier	gid		3613933	1					
ANR	3614242	ReturnStatement	return 1 ;	340:2:7373:7381	3613933	1	True				
ANR	3614243	PrimaryExpression	1		3613933	0					
ANR	3614244	ExpressionStatement	"printf ( ""%u\\n"" , ( unsigned ) gid )"	343:1:7388:7417	3613933	17	True				
ANR	3614245	CallExpression	"printf ( ""%u\\n"" , ( unsigned ) gid )"		3613933	0					
ANR	3614246	Callee	printf		3613933	0					
ANR	3614247	Identifier	printf		3613933	0					
ANR	3614248	ArgumentList	"""%u\\n"""		3613933	1					
ANR	3614249	Argument	"""%u\\n"""		3613933	0					
ANR	3614250	PrimaryExpression	"""%u\\n"""		3613933	0					
ANR	3614251	Argument	( unsigned ) gid		3613933	1					
ANR	3614252	CastExpression	( unsigned ) gid		3613933	0					
ANR	3614253	CastTarget	unsigned		3613933	0					
ANR	3614254	Identifier	gid		3613933	1					
ANR	3614255	ExpressionStatement	fclose ( stdout )	344:1:7420:7434	3613933	18	True				
ANR	3614256	CallExpression	fclose ( stdout )		3613933	0					
ANR	3614257	Callee	fclose		3613933	0					
ANR	3614258	Identifier	fclose		3613933	0					
ANR	3614259	ArgumentList	stdout		3613933	1					
ANR	3614260	Argument	stdout		3613933	0					
ANR	3614261	Identifier	stdout		3613933	0					
ANR	3614262	ExpressionStatement	pause ( )	346:1:7438:7445	3613933	19	True				
ANR	3614263	CallExpression	pause ( )		3613933	0					
ANR	3614264	Callee	pause		3613933	0					
ANR	3614265	Identifier	pause		3613933	0					
ANR	3614266	ArgumentList			3613933	1					
ANR	3614267	ReturnStatement	return 0 ;	348:1:7449:7457	3613933	20	True				
ANR	3614268	PrimaryExpression	0		3613933	0					
ANR	3614269	ReturnType	int		3613933	1					
ANR	3614270	Identifier	main		3613933	2					
ANR	3614271	ParameterList	"int argc , char * argv [ ]"		3613933	3					
ANR	3614272	Parameter	int argc	276:5:6084:6091	3613933	0	True				
ANR	3614273	ParameterType	int		3613933	0					
ANR	3614274	Identifier	argc		3613933	1					
ANR	3614275	Parameter	char * argv [ ]	276:15:6094:6105	3613933	1	True				
ANR	3614276	ParameterType	char * [ ]		3613933	0					
ANR	3614277	Identifier	argv		3613933	1					
ANR	3614278	CFGEntryNode	ENTRY		3613933		True				
ANR	3614279	CFGExitNode	EXIT		3613933		True				
ANR	3614280	Symbol	argc		3613933						
ANR	3614281	Symbol	giduse_probe		3613933						
ANR	3614282	Symbol	errno		3613933						
ANR	3614283	Symbol	parsegid		3613933						
ANR	3614284	Symbol	gid		3613933						
ANR	3614285	Symbol	stdout		3613933						
ANR	3614286	Symbol	max		3613933						
ANR	3614287	Symbol	err_str		3613933						
ANR	3614288	Symbol	count		3613933						
ANR	3614289	Symbol	i		3613933						
ANR	3614290	Symbol	* argv		3613933						
ANR	3614291	Symbol	used		3613933						
ANR	3614292	Symbol	stderr		3613933						
ANR	3614293	Symbol	argv		3613933						
ANR	3614294	Symbol	n		3613933						
ANR	3614295	Symbol	& gid		3613933						
ANR	3614296	Symbol	strerror		3613933						
ANR	3614297	Symbol	min		3613933						
ANR	3614298	Symbol	* i		3613933						
ANR	3614299	Symbol	setgroups		3613933						
ANR	3614300	Symbol	& n		3613933						
ANR	3614301	Symbol	* used		3613933						
