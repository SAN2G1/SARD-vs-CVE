command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4902185	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_stringSpace.cpp								
ANR	4902186	Function	StringSpace :: StringSpace	28:0:965:1437							
ANR	4902187	FunctionDef	StringSpace :: StringSpace (int initial_size)		4902186	0					
ANR	4902188	CompoundStatement		30:0:1010:1437	4902186	0					
ANR	4902189	IdentifierDeclStatement	SSStringEnt filler ;	31:1:1013:1031	4902186	0	True				
ANR	4902190	IdentifierDecl	filler		4902186	0					
ANR	4902191	IdentifierDeclType	SSStringEnt		4902186	0					
ANR	4902192	Identifier	filler		4902186	1					
ANR	4902193	ExpressionStatement	"stringSpace = new HashTable < YourSensitiveString , int > ( ( int ) ( 1.25 * initial_size ) , & YourSensitiveString :: hashFunction )"	32:1:1034:1157	4902186	1	True				
ANR	4902194	AssignmentExpression	"stringSpace = new HashTable < YourSensitiveString , int > ( ( int ) ( 1.25 * initial_size ) , & YourSensitiveString :: hashFunction )"		4902186	0		=			
ANR	4902195	Identifier	stringSpace		4902186	0					
ANR	4902196	Expression	"( int ) ( 1.25 * initial_size ) , & YourSensitiveString :: hashFunction"		4902186	1					
ANR	4902197	CastExpression	( int ) ( 1.25 * initial_size )		4902186	0					
ANR	4902198	CastTarget	int		4902186	0					
ANR	4902199	MultiplicativeExpression	1.25 * initial_size		4902186	1		*			
ANR	4902200	PrimaryExpression	1.25		4902186	0					
ANR	4902201	Identifier	initial_size		4902186	1					
ANR	4902202	UnaryOperationExpression	& YourSensitiveString :: hashFunction		4902186	1					
ANR	4902203	UnaryOperator	&		4902186	0					
ANR	4902204	Identifier	YourSensitiveString :: hashFunction		4902186	1					
ANR	4902205	ExpressionStatement	filler . inUse = false	37:1:1193:1217	4902186	2	True				
ANR	4902206	AssignmentExpression	filler . inUse = false		4902186	0		=			
ANR	4902207	MemberAccess	filler . inUse		4902186	0					
ANR	4902208	Identifier	filler		4902186	0					
ANR	4902209	Identifier	inUse		4902186	1					
ANR	4902210	Identifier	false		4902186	1					
ANR	4902211	ExpressionStatement	filler . string = NULL	38:1:1220:1243	4902186	3	True				
ANR	4902212	AssignmentExpression	filler . string = NULL		4902186	0		=			
ANR	4902213	MemberAccess	filler . string		4902186	0					
ANR	4902214	Identifier	filler		4902186	0					
ANR	4902215	Identifier	string		4902186	1					
ANR	4902216	Identifier	NULL		4902186	1					
ANR	4902217	ExpressionStatement	filler . refCount = 0	39:1:1246:1266	4902186	4	True				
ANR	4902218	AssignmentExpression	filler . refCount = 0		4902186	0		=			
ANR	4902219	MemberAccess	filler . refCount		4902186	0					
ANR	4902220	Identifier	filler		4902186	0					
ANR	4902221	Identifier	refCount		4902186	1					
ANR	4902222	PrimaryExpression	0		4902186	1					
ANR	4902223	ExpressionStatement	strTable . fill ( filler )	40:1:1269:1291	4902186	5	True				
ANR	4902224	CallExpression	strTable . fill ( filler )		4902186	0					
ANR	4902225	Callee	strTable . fill		4902186	0					
ANR	4902226	MemberAccess	strTable . fill		4902186	0					
ANR	4902227	Identifier	strTable		4902186	0					
ANR	4902228	Identifier	fill		4902186	1					
ANR	4902229	ArgumentList	filler		4902186	1					
ANR	4902230	Argument	filler		4902186	0					
ANR	4902231	Identifier	filler		4902186	0					
ANR	4902232	ExpressionStatement	first_free_slot = 0	43:1:1335:1354	4902186	6	True				
ANR	4902233	AssignmentExpression	first_free_slot = 0		4902186	0		=			
ANR	4902234	Identifier	first_free_slot		4902186	0					
ANR	4902235	PrimaryExpression	0		4902186	1					
ANR	4902236	ExpressionStatement	highest_used_slot = - 1	44:1:1357:1379	4902186	7	True				
ANR	4902237	AssignmentExpression	highest_used_slot = - 1		4902186	0		=			
ANR	4902238	Identifier	highest_used_slot		4902186	0					
ANR	4902239	UnaryOperationExpression	- 1		4902186	1					
ANR	4902240	UnaryOperator	-		4902186	0					
ANR	4902241	PrimaryExpression	1		4902186	1					
ANR	4902242	ExpressionStatement	number_of_slots_filled = 0	45:1:1382:1408	4902186	8	True				
ANR	4902243	AssignmentExpression	number_of_slots_filled = 0		4902186	0		=			
ANR	4902244	Identifier	number_of_slots_filled		4902186	0					
ANR	4902245	PrimaryExpression	0		4902186	1					
ANR	4902246	ReturnStatement	return ;	47:1:1429:1435	4902186	9	True				
ANR	4902247	Identifier	StringSpace :: StringSpace		4902186	1					
ANR	4902248	ParameterList	int initial_size		4902186	2					
ANR	4902249	Parameter	int initial_size	29:13:992:1007	4902186	0	True				
ANR	4902250	ParameterType	int		4902186	0					
ANR	4902251	Identifier	initial_size		4902186	1					
ANR	4902252	CFGEntryNode	ENTRY		4902186		True				
ANR	4902253	CFGExitNode	EXIT		4902186		True				
ANR	4902254	Symbol	NULL		4902186						
ANR	4902255	Symbol	number_of_slots_filled		4902186						
ANR	4902256	Symbol	false		4902186						
ANR	4902257	Symbol	filler . refCount		4902186						
ANR	4902258	Symbol	initial_size		4902186						
ANR	4902259	Symbol	& YourSensitiveString :: hashFunction		4902186						
ANR	4902260	Symbol	strTable		4902186						
ANR	4902261	Symbol	highest_used_slot		4902186						
ANR	4902262	Symbol	filler . inUse		4902186						
ANR	4902263	Symbol	first_free_slot		4902186						
ANR	4902264	Symbol	filler		4902186						
ANR	4902265	Symbol	stringSpace		4902186						
ANR	4902266	Symbol	filler . string		4902186						
ANR	4902267	Function	StringSpace :: ~StringSpace	51:0:1441:1514							
ANR	4902268	FunctionDef	StringSpace :: ~StringSpace ()		4902267	0					
ANR	4902269	CompoundStatement		53:0:1471:1514	4902267	0					
ANR	4902270	ExpressionStatement	purge ( )	54:1:1474:1482	4902267	0	True				
ANR	4902271	CallExpression	purge ( )		4902267	0					
ANR	4902272	Callee	purge		4902267	0					
ANR	4902273	Identifier	purge		4902267	0					
ANR	4902274	ArgumentList			4902267	1					
ANR	4902275	Statement	delete	55:1:1485:1490	4902267	1	True				
ANR	4902276	ExpressionStatement	stringSpace	55:8:1492:1503	4902267	2	True				
ANR	4902277	Identifier	stringSpace		4902267	0					
ANR	4902278	ReturnStatement	return ;	56:1:1506:1512	4902267	3	True				
ANR	4902279	Identifier	StringSpace :: ~StringSpace		4902267	1					
ANR	4902280	ParameterList			4902267	2					
ANR	4902281	CFGEntryNode	ENTRY		4902267		True				
ANR	4902282	CFGExitNode	EXIT		4902267		True				
ANR	4902283	Function	StringSpace :: purge	60:0:1518:1958							
ANR	4902284	FunctionDef	StringSpace :: purge ()		4902283	0					
ANR	4902285	CompoundStatement		62:0:1546:1958	4902283	0					
ANR	4902286	IdentifierDeclStatement	int i ;	64:1:1590:1595	4902283	0	True				
ANR	4902287	IdentifierDecl	i		4902283	0					
ANR	4902288	IdentifierDeclType	int		4902283	0					
ANR	4902289	Identifier	i		4902283	1					
ANR	4902290	ForStatement	for ( i = 0 ; i <= highest_used_slot ; i ++ )		4902283	1					
ANR	4902291	ForInit	i = 0 ;	65:6:1603:1608	4902283	0	True				
ANR	4902292	AssignmentExpression	i = 0		4902283	0		=			
ANR	4902293	Identifier	i		4902283	0					
ANR	4902294	PrimaryExpression	0		4902283	1					
ANR	4902295	Condition	i <= highest_used_slot	65:13:1610:1631	4902283	1	True				
ANR	4902296	RelationalExpression	i <= highest_used_slot		4902283	0		<=			
ANR	4902297	Identifier	i		4902283	0					
ANR	4902298	Identifier	highest_used_slot		4902283	1					
ANR	4902299	PostIncDecOperationExpression	i ++	65:37:1634:1636	4902283	2	True				
ANR	4902300	Identifier	i		4902283	0					
ANR	4902301	IncDec	++		4902283	1					
ANR	4902302	CompoundStatement		5:1:94:94	4902283	3					
ANR	4902303	IfStatement	if ( strTable [ i ] . inUse && strTable [ i ] . string )		4902283	0					
ANR	4902304	Condition	strTable [ i ] . inUse && strTable [ i ] . string	67:6:1649:1687	4902283	0	True				
ANR	4902305	AndExpression	strTable [ i ] . inUse && strTable [ i ] . string		4902283	0		&&			
ANR	4902306	MemberAccess	strTable [ i ] . inUse		4902283	0					
ANR	4902307	ArrayIndexing	strTable [ i ]		4902283	0					
ANR	4902308	Identifier	strTable		4902283	0					
ANR	4902309	Identifier	i		4902283	1					
ANR	4902310	Identifier	inUse		4902283	1					
ANR	4902311	MemberAccess	strTable [ i ] . string		4902283	1					
ANR	4902312	ArrayIndexing	strTable [ i ]		4902283	0					
ANR	4902313	Identifier	strTable		4902283	0					
ANR	4902314	Identifier	i		4902283	1					
ANR	4902315	Identifier	string		4902283	1					
ANR	4902316	CompoundStatement		7:2:145:145	4902283	1					
ANR	4902317	ExpressionStatement	free ( strTable [ i ] . string )	69:3:1697:1722	4902283	0	True				
ANR	4902318	CallExpression	free ( strTable [ i ] . string )		4902283	0					
ANR	4902319	Callee	free		4902283	0					
ANR	4902320	Identifier	free		4902283	0					
ANR	4902321	ArgumentList	strTable [ i ] . string		4902283	1					
ANR	4902322	Argument	strTable [ i ] . string		4902283	0					
ANR	4902323	MemberAccess	strTable [ i ] . string		4902283	0					
ANR	4902324	ArrayIndexing	strTable [ i ]		4902283	0					
ANR	4902325	Identifier	strTable		4902283	0					
ANR	4902326	Identifier	i		4902283	1					
ANR	4902327	Identifier	string		4902283	1					
ANR	4902328	ExpressionStatement	strTable [ i ] . string = NULL	70:3:1727:1752	4902283	1	True				
ANR	4902329	AssignmentExpression	strTable [ i ] . string = NULL		4902283	0		=			
ANR	4902330	MemberAccess	strTable [ i ] . string		4902283	0					
ANR	4902331	ArrayIndexing	strTable [ i ]		4902283	0					
ANR	4902332	Identifier	strTable		4902283	0					
ANR	4902333	Identifier	i		4902283	1					
ANR	4902334	Identifier	string		4902283	1					
ANR	4902335	Identifier	NULL		4902283	1					
ANR	4902336	ExpressionStatement	strTable [ i ] . inUse = false	71:3:1757:1782	4902283	2	True				
ANR	4902337	AssignmentExpression	strTable [ i ] . inUse = false		4902283	0		=			
ANR	4902338	MemberAccess	strTable [ i ] . inUse		4902283	0					
ANR	4902339	ArrayIndexing	strTable [ i ]		4902283	0					
ANR	4902340	Identifier	strTable		4902283	0					
ANR	4902341	Identifier	i		4902283	1					
ANR	4902342	Identifier	inUse		4902283	1					
ANR	4902343	Identifier	false		4902283	1					
ANR	4902344	ExpressionStatement	strTable [ i ] . refCount = 0	72:3:1787:1811	4902283	3	True				
ANR	4902345	AssignmentExpression	strTable [ i ] . refCount = 0		4902283	0		=			
ANR	4902346	MemberAccess	strTable [ i ] . refCount		4902283	0					
ANR	4902347	ArrayIndexing	strTable [ i ]		4902283	0					
ANR	4902348	Identifier	strTable		4902283	0					
ANR	4902349	Identifier	i		4902283	1					
ANR	4902350	Identifier	refCount		4902283	1					
ANR	4902351	PrimaryExpression	0		4902283	1					
ANR	4902352	ExpressionStatement	first_free_slot = 0	76:1:1822:1841	4902283	2	True				
ANR	4902353	AssignmentExpression	first_free_slot = 0		4902283	0		=			
ANR	4902354	Identifier	first_free_slot		4902283	0					
ANR	4902355	PrimaryExpression	0		4902283	1					
ANR	4902356	ExpressionStatement	highest_used_slot = - 1	77:1:1844:1866	4902283	3	True				
ANR	4902357	AssignmentExpression	highest_used_slot = - 1		4902283	0		=			
ANR	4902358	Identifier	highest_used_slot		4902283	0					
ANR	4902359	UnaryOperationExpression	- 1		4902283	1					
ANR	4902360	UnaryOperator	-		4902283	0					
ANR	4902361	PrimaryExpression	1		4902283	1					
ANR	4902362	ExpressionStatement	number_of_slots_filled = 0	78:1:1869:1895	4902283	4	True				
ANR	4902363	AssignmentExpression	number_of_slots_filled = 0		4902283	0		=			
ANR	4902364	Identifier	number_of_slots_filled		4902283	0					
ANR	4902365	PrimaryExpression	0		4902283	1					
ANR	4902366	ExpressionStatement	stringSpace -> clear ( )	81:1:1927:1947	4902283	5	True				
ANR	4902367	CallExpression	stringSpace -> clear ( )		4902283	0					
ANR	4902368	Callee	stringSpace -> clear		4902283	0					
ANR	4902369	PtrMemberAccess	stringSpace -> clear		4902283	0					
ANR	4902370	Identifier	stringSpace		4902283	0					
ANR	4902371	Identifier	clear		4902283	1					
ANR	4902372	ArgumentList			4902283	1					
ANR	4902373	ReturnStatement	return ;	82:1:1950:1956	4902283	6	True				
ANR	4902374	ReturnType	void		4902283	1					
ANR	4902375	Identifier	StringSpace :: purge		4902283	2					
ANR	4902376	ParameterList			4902283	3					
ANR	4902377	CFGEntryNode	ENTRY		4902283		True				
ANR	4902378	CFGExitNode	EXIT		4902283		True				
ANR	4902379	Symbol	NULL		4902283						
ANR	4902380	Symbol	number_of_slots_filled		4902283						
ANR	4902381	Symbol	false		4902283						
ANR	4902382	Symbol	i		4902283						
ANR	4902383	Symbol	strTable [ i ] . refCount		4902283						
ANR	4902384	Symbol	strTable		4902283						
ANR	4902385	Symbol	* i		4902283						
ANR	4902386	Symbol	highest_used_slot		4902283						
ANR	4902387	Symbol	first_free_slot		4902283						
ANR	4902388	Symbol	* strTable		4902283						
ANR	4902389	Symbol	strTable [ i ] . string		4902283						
ANR	4902390	Symbol	strTable [ i ] . inUse		4902283						
ANR	4902391	Symbol	stringSpace		4902283						
ANR	4902392	Function	StringSpace :: getCanonical	85:0:1961:3158							
ANR	4902393	FunctionDef	StringSpace :: getCanonical (const char * & str)		4902392	0					
ANR	4902394	CompoundStatement		87:0:2011:3158	4902392	0					
ANR	4902395	IfStatement	if ( ! str )		4902392	0					
ANR	4902396	Condition	! str	89:5:2035:2038	4902392	0	True				
ANR	4902397	UnaryOperationExpression	! str		4902392	0					
ANR	4902398	UnaryOperator	!		4902392	0					
ANR	4902399	Identifier	str		4902392	1					
ANR	4902400	ReturnStatement	return - 1 ;	89:11:2041:2050	4902392	1	True				
ANR	4902401	UnaryOperationExpression	- 1		4902392	0					
ANR	4902402	UnaryOperator	-		4902392	0					
ANR	4902403	PrimaryExpression	1		4902392	1					
ANR	4902404	IdentifierDeclStatement	YourSensitiveString yourStr ( str ) ;	91:1:2054:2086	4902392	1	True				
ANR	4902405	IdentifierDecl	yourStr ( str )		4902392	0					
ANR	4902406	IdentifierDeclType	YourSensitiveString		4902392	0					
ANR	4902407	Identifier	yourStr		4902392	1					
ANR	4902408	Identifier	str		4902392	2					
ANR	4902409	IdentifierDeclStatement	int index ;	92:1:2089:2098	4902392	2	True				
ANR	4902410	IdentifierDecl	index		4902392	0					
ANR	4902411	IdentifierDeclType	int		4902392	0					
ANR	4902412	Identifier	index		4902392	1					
ANR	4902413	IfStatement	"if ( stringSpace -> lookup ( yourStr , index ) == 0 )"		4902392	3					
ANR	4902414	Condition	"stringSpace -> lookup ( yourStr , index ) == 0"	95:5:2143:2183	4902392	0	True				
ANR	4902415	EqualityExpression	"stringSpace -> lookup ( yourStr , index ) == 0"		4902392	0		==			
ANR	4902416	CallExpression	"stringSpace -> lookup ( yourStr , index )"		4902392	0					
ANR	4902417	Callee	stringSpace -> lookup		4902392	0					
ANR	4902418	PtrMemberAccess	stringSpace -> lookup		4902392	0					
ANR	4902419	Identifier	stringSpace		4902392	0					
ANR	4902420	Identifier	lookup		4902392	1					
ANR	4902421	ArgumentList	yourStr		4902392	1					
ANR	4902422	Argument	yourStr		4902392	0					
ANR	4902423	Identifier	yourStr		4902392	0					
ANR	4902424	Argument	index		4902392	1					
ANR	4902425	Identifier	index		4902392	0					
ANR	4902426	PrimaryExpression	0		4902392	1					
ANR	4902427	CompoundStatement		10:1:176:176	4902392	1					
ANR	4902428	ExpressionStatement	strTable [ index ] . refCount ++	98:2:2223:2249	4902392	0	True				
ANR	4902429	PostIncDecOperationExpression	strTable [ index ] . refCount ++		4902392	0					
ANR	4902430	MemberAccess	strTable [ index ] . refCount		4902392	0					
ANR	4902431	ArrayIndexing	strTable [ index ]		4902392	0					
ANR	4902432	Identifier	strTable		4902392	0					
ANR	4902433	Identifier	index		4902392	1					
ANR	4902434	Identifier	refCount		4902392	1					
ANR	4902435	IncDec	++		4902392	1					
ANR	4902436	ReturnStatement	return index ;	99:2:2253:2265	4902392	1	True				
ANR	4902437	Identifier	index		4902392	0					
ANR	4902438	ExpressionStatement	index = first_free_slot	103:4:2316:2339	4902392	4	True				
ANR	4902439	AssignmentExpression	index = first_free_slot		4902392	0		=			
ANR	4902440	Identifier	index		4902392	0					
ANR	4902441	Identifier	first_free_slot		4902392	1					
ANR	4902442	ExpressionStatement	strTable [ index ] . string = strdup ( str )	104:1:2342:2379	4902392	5	True				
ANR	4902443	AssignmentExpression	strTable [ index ] . string = strdup ( str )		4902392	0		=			
ANR	4902444	MemberAccess	strTable [ index ] . string		4902392	0					
ANR	4902445	ArrayIndexing	strTable [ index ]		4902392	0					
ANR	4902446	Identifier	strTable		4902392	0					
ANR	4902447	Identifier	index		4902392	1					
ANR	4902448	Identifier	string		4902392	1					
ANR	4902449	CallExpression	strdup ( str )		4902392	1					
ANR	4902450	Callee	strdup		4902392	0					
ANR	4902451	Identifier	strdup		4902392	0					
ANR	4902452	ArgumentList	str		4902392	1					
ANR	4902453	Argument	str		4902392	0					
ANR	4902454	Identifier	str		4902392	0					
ANR	4902455	ExpressionStatement	strTable [ index ] . inUse = true	105:1:2382:2416	4902392	6	True				
ANR	4902456	AssignmentExpression	strTable [ index ] . inUse = true		4902392	0		=			
ANR	4902457	MemberAccess	strTable [ index ] . inUse		4902392	0					
ANR	4902458	ArrayIndexing	strTable [ index ]		4902392	0					
ANR	4902459	Identifier	strTable		4902392	0					
ANR	4902460	Identifier	index		4902392	1					
ANR	4902461	Identifier	inUse		4902392	1					
ANR	4902462	Identifier	true		4902392	1					
ANR	4902463	ExpressionStatement	strTable [ index ] . refCount = 1	106:4:2422:2453	4902392	7	True				
ANR	4902464	AssignmentExpression	strTable [ index ] . refCount = 1		4902392	0		=			
ANR	4902465	MemberAccess	strTable [ index ] . refCount		4902392	0					
ANR	4902466	ArrayIndexing	strTable [ index ]		4902392	0					
ANR	4902467	Identifier	strTable		4902392	0					
ANR	4902468	Identifier	index		4902392	1					
ANR	4902469	Identifier	refCount		4902392	1					
ANR	4902470	PrimaryExpression	1		4902392	1					
ANR	4902471	ExpressionStatement	number_of_slots_filled ++	107:1:2456:2480	4902392	8	True				
ANR	4902472	PostIncDecOperationExpression	number_of_slots_filled ++		4902392	0					
ANR	4902473	Identifier	number_of_slots_filled		4902392	0					
ANR	4902474	IncDec	++		4902392	1					
ANR	4902475	WhileStatement	while ( strTable [ first_free_slot ] . inUse )		4902392	9					
ANR	4902476	Condition	strTable [ first_free_slot ] . inUse	112:8:2648:2678	4902392	0	True				
ANR	4902477	MemberAccess	strTable [ first_free_slot ] . inUse		4902392	0					
ANR	4902478	ArrayIndexing	strTable [ first_free_slot ]		4902392	0					
ANR	4902479	Identifier	strTable		4902392	0					
ANR	4902480	Identifier	first_free_slot		4902392	1					
ANR	4902481	Identifier	inUse		4902392	1					
ANR	4902482	CompoundStatement		26:41:669:669	4902392	1					
ANR	4902483	ExpressionStatement	first_free_slot ++	113:2:2685:2702	4902392	0	True				
ANR	4902484	PostIncDecOperationExpression	first_free_slot ++		4902392	0					
ANR	4902485	Identifier	first_free_slot		4902392	0					
ANR	4902486	IncDec	++		4902392	1					
ANR	4902487	IfStatement	if ( first_free_slot >= highest_used_slot )		4902392	10					
ANR	4902488	Condition	first_free_slot >= highest_used_slot	117:5:2827:2862	4902392	0	True				
ANR	4902489	RelationalExpression	first_free_slot >= highest_used_slot		4902392	0		>=			
ANR	4902490	Identifier	first_free_slot		4902392	0					
ANR	4902491	Identifier	highest_used_slot		4902392	1					
ANR	4902492	CompoundStatement		31:43:853:853	4902392	1					
ANR	4902493	ExpressionStatement	highest_used_slot = first_free_slot - 1	120:2:2950:2989	4902392	0	True				
ANR	4902494	AssignmentExpression	highest_used_slot = first_free_slot - 1		4902392	0		=			
ANR	4902495	Identifier	highest_used_slot		4902392	0					
ANR	4902496	AdditiveExpression	first_free_slot - 1		4902392	1		-			
ANR	4902497	Identifier	first_free_slot		4902392	0					
ANR	4902498	PrimaryExpression	1		4902392	1					
ANR	4902499	ExpressionStatement	yourStr = strTable [ index ] . string	124:1:3026:3058	4902392	11	True				
ANR	4902500	AssignmentExpression	yourStr = strTable [ index ] . string		4902392	0		=			
ANR	4902501	Identifier	yourStr		4902392	0					
ANR	4902502	MemberAccess	strTable [ index ] . string		4902392	1					
ANR	4902503	ArrayIndexing	strTable [ index ]		4902392	0					
ANR	4902504	Identifier	strTable		4902392	0					
ANR	4902505	Identifier	index		4902392	1					
ANR	4902506	Identifier	string		4902392	1					
ANR	4902507	IfStatement	"if ( stringSpace -> insert ( yourStr , index ) == 0 )"		4902392	12					
ANR	4902508	Condition	"stringSpace -> insert ( yourStr , index ) == 0"	125:8:3068:3108	4902392	0	True				
ANR	4902509	EqualityExpression	"stringSpace -> insert ( yourStr , index ) == 0"		4902392	0		==			
ANR	4902510	CallExpression	"stringSpace -> insert ( yourStr , index )"		4902392	0					
ANR	4902511	Callee	stringSpace -> insert		4902392	0					
ANR	4902512	PtrMemberAccess	stringSpace -> insert		4902392	0					
ANR	4902513	Identifier	stringSpace		4902392	0					
ANR	4902514	Identifier	insert		4902392	1					
ANR	4902515	ArgumentList	yourStr		4902392	1					
ANR	4902516	Argument	yourStr		4902392	0					
ANR	4902517	Identifier	yourStr		4902392	0					
ANR	4902518	Argument	index		4902392	1					
ANR	4902519	Identifier	index		4902392	0					
ANR	4902520	PrimaryExpression	0		4902392	1					
ANR	4902521	ReturnStatement	return index ;	125:51:3111:3123	4902392	1	True				
ANR	4902522	Identifier	index		4902392	0					
ANR	4902523	ReturnStatement	return - 1 ;	128:1:3147:3156	4902392	13	True				
ANR	4902524	UnaryOperationExpression	- 1		4902392	0					
ANR	4902525	UnaryOperator	-		4902392	0					
ANR	4902526	PrimaryExpression	1		4902392	1					
ANR	4902527	ReturnType	int		4902392	1					
ANR	4902528	Identifier	StringSpace :: getCanonical		4902392	2					
ANR	4902529	ParameterList	const char * & str		4902392	3					
ANR	4902530	Parameter	const char * & str	86:14:1993:2008	4902392	0	True				
ANR	4902531	ParameterType	const char * &		4902392	0					
ANR	4902532	Identifier	str		4902392	1					
ANR	4902533	CFGEntryNode	ENTRY		4902392		True				
ANR	4902534	CFGExitNode	EXIT		4902392		True				
ANR	4902535	Symbol	strTable [ index ] . inUse		4902392						
ANR	4902536	Symbol	number_of_slots_filled		4902392						
ANR	4902537	Symbol	* index		4902392						
ANR	4902538	Symbol	strTable [ first_free_slot ] . inUse		4902392						
ANR	4902539	Symbol	index		4902392						
ANR	4902540	Symbol	strTable [ index ] . refCount		4902392						
ANR	4902541	Symbol	str		4902392						
ANR	4902542	Symbol	stringSpace -> lookup		4902392						
ANR	4902543	Symbol	strTable		4902392						
ANR	4902544	Symbol	highest_used_slot		4902392						
ANR	4902545	Symbol	first_free_slot		4902392						
ANR	4902546	Symbol	true		4902392						
ANR	4902547	Symbol	* strTable		4902392						
ANR	4902548	Symbol	strTable [ index ] . string		4902392						
ANR	4902549	Symbol	stringSpace		4902392						
ANR	4902550	Symbol	strdup		4902392						
ANR	4902551	Symbol	* first_free_slot		4902392						
ANR	4902552	Symbol	* stringSpace		4902392						
ANR	4902553	Symbol	stringSpace -> insert		4902392						
ANR	4902554	Symbol	yourStr		4902392						
ANR	4902555	Function	StringSpace :: getCanonical	132:0:3162:3344							
ANR	4902556	FunctionDef	"StringSpace :: getCanonical (const char * & str , SSString & canonical)"		4902555	0					
ANR	4902557	CompoundStatement		134:0:3233:3344	4902555	0					
ANR	4902558	ExpressionStatement	canonical . context = ( ( canonical . index = getCanonical ( str ) ) != - 1 ) ? this : 0	135:1:3236:3317	4902555	0	True				
ANR	4902559	AssignmentExpression	canonical . context = ( ( canonical . index = getCanonical ( str ) ) != - 1 ) ? this : 0		4902555	0		=			
ANR	4902560	MemberAccess	canonical . context		4902555	0					
ANR	4902561	Identifier	canonical		4902555	0					
ANR	4902562	Identifier	context		4902555	1					
ANR	4902563	ConditionalExpression	( ( canonical . index = getCanonical ( str ) ) != - 1 ) ? this : 0		4902555	1					
ANR	4902564	Condition	( canonical . index = getCanonical ( str ) ) != - 1		4902555	0					
ANR	4902565	EqualityExpression	( canonical . index = getCanonical ( str ) ) != - 1		4902555	0		!=			
ANR	4902566	AssignmentExpression	canonical . index = getCanonical ( str )		4902555	0		=			
ANR	4902567	MemberAccess	canonical . index		4902555	0					
ANR	4902568	Identifier	canonical		4902555	0					
ANR	4902569	Identifier	index		4902555	1					
ANR	4902570	CallExpression	getCanonical ( str )		4902555	1					
ANR	4902571	Callee	getCanonical		4902555	0					
ANR	4902572	Identifier	getCanonical		4902555	0					
ANR	4902573	ArgumentList	str		4902555	1					
ANR	4902574	Argument	str		4902555	0					
ANR	4902575	Identifier	str		4902555	0					
ANR	4902576	UnaryOperationExpression	- 1		4902555	1					
ANR	4902577	UnaryOperator	-		4902555	0					
ANR	4902578	PrimaryExpression	1		4902555	1					
ANR	4902579	Identifier	this		4902555	1					
ANR	4902580	PrimaryExpression	0		4902555	2					
ANR	4902581	ReturnStatement	return canonical . index ;	137:1:3320:3342	4902555	1	True				
ANR	4902582	MemberAccess	canonical . index		4902555	0					
ANR	4902583	Identifier	canonical		4902555	0					
ANR	4902584	Identifier	index		4902555	1					
ANR	4902585	ReturnType	int		4902555	1					
ANR	4902586	Identifier	StringSpace :: getCanonical		4902555	2					
ANR	4902587	ParameterList	"const char * & str , SSString & canonical"		4902555	3					
ANR	4902588	Parameter	const char * & str	133:14:3194:3209	4902555	0	True				
ANR	4902589	ParameterType	const char * &		4902555	0					
ANR	4902590	Identifier	str		4902555	1					
ANR	4902591	Parameter	SSString & canonical	133:32:3212:3230	4902555	1	True				
ANR	4902592	ParameterType	SSString &		4902555	0					
ANR	4902593	Identifier	canonical		4902555	1					
ANR	4902594	CFGEntryNode	ENTRY		4902555		True				
ANR	4902595	CFGExitNode	EXIT		4902555		True				
ANR	4902596	Symbol	str		4902555						
ANR	4902597	Symbol	canonical . context		4902555						
ANR	4902598	Symbol	getCanonical		4902555						
ANR	4902599	Symbol	this		4902555						
ANR	4902600	Symbol	canonical		4902555						
ANR	4902601	Symbol	canonical . index		4902555						
ANR	4902602	Function	StringSpace :: getCanonical	141:0:3348:3507							
ANR	4902603	FunctionDef	"StringSpace :: getCanonical (const char * & str , SSString * & canonical)"		4902602	0					
ANR	4902604	CompoundStatement		143:0:3420:3507	4902602	0					
ANR	4902605	Statement	if	144:1:3423:3424	4902602	0	True				
ANR	4902606	Statement	(	144:4:3426:3426	4902602	1	True				
ANR	4902607	Statement	!	144:5:3427:3427	4902602	2	True				
ANR	4902608	Statement	(	144:6:3428:3428	4902602	3	True				
ANR	4902609	Statement	canonical	144:7:3429:3437	4902602	4	True				
ANR	4902610	Statement	=	144:17:3439:3439	4902602	5	True				
ANR	4902611	Statement	new	144:19:3441:3443	4902602	6	True				
ANR	4902612	Statement	SSString	144:23:3445:3452	4902602	7	True				
ANR	4902613	Statement	)	144:31:3453:3453	4902602	8	True				
ANR	4902614	Statement	)	144:32:3454:3454	4902602	9	True				
ANR	4902615	ReturnStatement	return - 1 ;	144:34:3456:3465	4902602	10	True				
ANR	4902616	UnaryOperationExpression	- 1		4902602	0					
ANR	4902617	UnaryOperator	-		4902602	0					
ANR	4902618	PrimaryExpression	1		4902602	1					
ANR	4902619	ReturnStatement	"return getCanonical ( str , * canonical ) ;"	145:1:3468:3505	4902602	11	True				
ANR	4902620	CallExpression	"getCanonical ( str , * canonical )"		4902602	0					
ANR	4902621	Callee	getCanonical		4902602	0					
ANR	4902622	Identifier	getCanonical		4902602	0					
ANR	4902623	ArgumentList	str		4902602	1					
ANR	4902624	Argument	str		4902602	0					
ANR	4902625	Identifier	str		4902602	0					
ANR	4902626	Argument	* canonical		4902602	1					
ANR	4902627	UnaryOperationExpression	* canonical		4902602	0					
ANR	4902628	UnaryOperator	*		4902602	0					
ANR	4902629	Identifier	canonical		4902602	1					
ANR	4902630	ReturnType	int		4902602	1					
ANR	4902631	Identifier	StringSpace :: getCanonical		4902602	2					
ANR	4902632	ParameterList	"const char * & str , SSString * & canonical"		4902602	3					
ANR	4902633	Parameter	const char * & str	142:14:3380:3395	4902602	0	True				
ANR	4902634	ParameterType	const char * &		4902602	0					
ANR	4902635	Identifier	str		4902602	1					
ANR	4902636	Parameter	SSString * & canonical	142:32:3398:3417	4902602	1	True				
ANR	4902637	ParameterType	SSString * &		4902602	0					
ANR	4902638	Identifier	canonical		4902602	1					
ANR	4902639	CFGEntryNode	ENTRY		4902602		True				
ANR	4902640	CFGExitNode	EXIT		4902602		True				
ANR	4902641	Symbol	str		4902602						
ANR	4902642	Symbol	getCanonical		4902602						
ANR	4902643	Symbol	canonical		4902602						
ANR	4902644	Symbol	* canonical		4902602						
ANR	4902645	Function	StringSpace :: disposeByIndex	149:0:3511:3837							
ANR	4902646	FunctionDef	StringSpace :: disposeByIndex (int index)		4902645	0					
ANR	4902647	CompoundStatement		151:0:3556:3837	4902645	0					
ANR	4902648	IdentifierDeclStatement	SSString * str ;	155:1:3735:3748	4902645	0	True				
ANR	4902649	IdentifierDecl	* str		4902645	0					
ANR	4902650	IdentifierDeclType	SSString *		4902645	0					
ANR	4902651	Identifier	str		4902645	1					
ANR	4902652	Statement	str	157:1:3752:3754	4902645	1	True				
ANR	4902653	Statement	=	157:5:3756:3756	4902645	2	True				
ANR	4902654	Statement	new	157:7:3758:3760	4902645	3	True				
ANR	4902655	ExpressionStatement	SSString	157:11:3762:3770	4902645	4	True				
ANR	4902656	Identifier	SSString		4902645	0					
ANR	4902657	ExpressionStatement	str -> context = this	158:1:3773:3792	4902645	5	True				
ANR	4902658	AssignmentExpression	str -> context = this		4902645	0		=			
ANR	4902659	PtrMemberAccess	str -> context		4902645	0					
ANR	4902660	Identifier	str		4902645	0					
ANR	4902661	Identifier	context		4902645	1					
ANR	4902662	Identifier	this		4902645	1					
ANR	4902663	ExpressionStatement	str -> index = index	159:1:3795:3813	4902645	6	True				
ANR	4902664	AssignmentExpression	str -> index = index		4902645	0		=			
ANR	4902665	PtrMemberAccess	str -> index		4902645	0					
ANR	4902666	Identifier	str		4902645	0					
ANR	4902667	Identifier	index		4902645	1					
ANR	4902668	Identifier	index		4902645	1					
ANR	4902669	Statement	delete	160:1:3816:3821	4902645	7	True				
ANR	4902670	ExpressionStatement	str	160:8:3823:3826	4902645	8	True				
ANR	4902671	Identifier	str		4902645	0					
ANR	4902672	ReturnStatement	return ;	161:1:3829:3835	4902645	9	True				
ANR	4902673	ReturnType	void		4902645	1					
ANR	4902674	Identifier	StringSpace :: disposeByIndex		4902645	2					
ANR	4902675	ParameterList	int index		4902645	3					
ANR	4902676	Parameter	int index	150:15:3545:3553	4902645	0	True				
ANR	4902677	ParameterType	int		4902645	0					
ANR	4902678	Identifier	index		4902645	1					
ANR	4902679	CFGEntryNode	ENTRY		4902645		True				
ANR	4902680	CFGExitNode	EXIT		4902645		True				
ANR	4902681	Symbol	str		4902645						
ANR	4902682	Symbol	str -> context		4902645						
ANR	4902683	Symbol	this		4902645						
ANR	4902684	Symbol	index		4902645						
ANR	4902685	Symbol	* str		4902645						
ANR	4902686	Symbol	str -> index		4902645						
ANR	4902687	Function	StringSpace :: dispose	165:0:3841:3955							
ANR	4902688	FunctionDef	StringSpace :: dispose (const char * str)		4902687	0					
ANR	4902689	CompoundStatement		167:0:3885:3955	4902687	0					
ANR	4902690	IdentifierDeclStatement	int i = getCanonical ( str ) ;	168:1:3888:3913	4902687	0	True				
ANR	4902691	IdentifierDecl	i = getCanonical ( str )		4902687	0					
ANR	4902692	IdentifierDeclType	int		4902687	0					
ANR	4902693	Identifier	i		4902687	1					
ANR	4902694	AssignmentExpression	i = getCanonical ( str )		4902687	2		=			
ANR	4902695	Identifier	i		4902687	0					
ANR	4902696	CallExpression	getCanonical ( str )		4902687	1					
ANR	4902697	Callee	getCanonical		4902687	0					
ANR	4902698	Identifier	getCanonical		4902687	0					
ANR	4902699	ArgumentList	str		4902687	1					
ANR	4902700	Argument	str		4902687	0					
ANR	4902701	Identifier	str		4902687	0					
ANR	4902702	ExpressionStatement	disposeByIndex ( i )	169:1:3916:3933	4902687	1	True				
ANR	4902703	CallExpression	disposeByIndex ( i )		4902687	0					
ANR	4902704	Callee	disposeByIndex		4902687	0					
ANR	4902705	Identifier	disposeByIndex		4902687	0					
ANR	4902706	ArgumentList	i		4902687	1					
ANR	4902707	Argument	i		4902687	0					
ANR	4902708	Identifier	i		4902687	0					
ANR	4902709	ExpressionStatement	disposeByIndex ( i )	170:1:3936:3953	4902687	2	True				
ANR	4902710	CallExpression	disposeByIndex ( i )		4902687	0					
ANR	4902711	Callee	disposeByIndex		4902687	0					
ANR	4902712	Identifier	disposeByIndex		4902687	0					
ANR	4902713	ArgumentList	i		4902687	1					
ANR	4902714	Argument	i		4902687	0					
ANR	4902715	Identifier	i		4902687	0					
ANR	4902716	ReturnType	void		4902687	1					
ANR	4902717	Identifier	StringSpace :: dispose		4902687	2					
ANR	4902718	ParameterList	const char * str		4902687	3					
ANR	4902719	Parameter	const char * str	166:8:3868:3882	4902687	0	True				
ANR	4902720	ParameterType	const char *		4902687	0					
ANR	4902721	Identifier	str		4902687	1					
ANR	4902722	CFGEntryNode	ENTRY		4902687		True				
ANR	4902723	CFGExitNode	EXIT		4902687		True				
ANR	4902724	Symbol	str		4902687						
ANR	4902725	Symbol	getCanonical		4902687						
ANR	4902726	Symbol	i		4902687						
ANR	4902727	Function	SSString :: SSString	174:0:3959:4022							
ANR	4902728	FunctionDef	SSString :: SSString ()		4902727	0					
ANR	4902729	CompoundStatement		176:0:3982:4022	4902727	0					
ANR	4902730	ExpressionStatement	context = NULL	177:1:3985:3999	4902727	0	True				
ANR	4902731	AssignmentExpression	context = NULL		4902727	0		=			
ANR	4902732	Identifier	context		4902727	0					
ANR	4902733	Identifier	NULL		4902727	1					
ANR	4902734	ExpressionStatement	index = 0	178:1:4002:4011	4902727	1	True				
ANR	4902735	AssignmentExpression	index = 0		4902727	0		=			
ANR	4902736	Identifier	index		4902727	0					
ANR	4902737	PrimaryExpression	0		4902727	1					
ANR	4902738	ReturnStatement	return ;	179:1:4014:4020	4902727	2	True				
ANR	4902739	Identifier	SSString :: SSString		4902727	1					
ANR	4902740	ParameterList			4902727	2					
ANR	4902741	CFGEntryNode	ENTRY		4902727		True				
ANR	4902742	CFGExitNode	EXIT		4902727		True				
ANR	4902743	Symbol	NULL		4902727						
ANR	4902744	Symbol	context		4902727						
ANR	4902745	Symbol	index		4902727						
ANR	4902746	Function	SSString :: SSString	183:0:4026:4111							
ANR	4902747	FunctionDef	SSString :: SSString (const SSString & sstr)		4902746	0					
ANR	4902748	CompoundStatement		185:0:4069:4111	4902746	0					
ANR	4902749	ExpressionStatement	context = NULL	186:1:4072:4086	4902746	0	True				
ANR	4902750	AssignmentExpression	context = NULL		4902746	0		=			
ANR	4902751	Identifier	context		4902746	0					
ANR	4902752	Identifier	NULL		4902746	1					
ANR	4902753	ExpressionStatement	copy ( sstr )	187:1:4089:4100	4902746	1	True				
ANR	4902754	CallExpression	copy ( sstr )		4902746	0					
ANR	4902755	Callee	copy		4902746	0					
ANR	4902756	Identifier	copy		4902746	0					
ANR	4902757	ArgumentList	sstr		4902746	1					
ANR	4902758	Argument	sstr		4902746	0					
ANR	4902759	Identifier	sstr		4902746	0					
ANR	4902760	ReturnStatement	return ;	188:1:4103:4109	4902746	2	True				
ANR	4902761	Identifier	SSString :: SSString		4902746	1					
ANR	4902762	ParameterList	const SSString & sstr		4902746	2					
ANR	4902763	Parameter	const SSString & sstr	184:10:4047:4066	4902746	0	True				
ANR	4902764	ParameterType	const SSString &		4902746	0					
ANR	4902765	Identifier	sstr		4902746	1					
ANR	4902766	CFGEntryNode	ENTRY		4902746		True				
ANR	4902767	CFGExitNode	EXIT		4902746		True				
ANR	4902768	Symbol	NULL		4902746						
ANR	4902769	Symbol	sstr		4902746						
ANR	4902770	Symbol	context		4902746						
ANR	4902771	Function	SSString :: ~SSString	192:0:4115:4161							
ANR	4902772	FunctionDef	SSString :: ~SSString ()		4902771	0					
ANR	4902773	CompoundStatement		194:0:4138:4161	4902771	0					
ANR	4902774	ExpressionStatement	dispose ( )	195:1:4141:4150	4902771	0	True				
ANR	4902775	CallExpression	dispose ( )		4902771	0					
ANR	4902776	Callee	dispose		4902771	0					
ANR	4902777	Identifier	dispose		4902771	0					
ANR	4902778	ArgumentList			4902771	1					
ANR	4902779	ReturnStatement	return ;	196:1:4153:4159	4902771	1	True				
ANR	4902780	Identifier	SSString :: ~SSString		4902771	1					
ANR	4902781	ParameterList			4902771	2					
ANR	4902782	CFGEntryNode	ENTRY		4902771		True				
ANR	4902783	CFGExitNode	EXIT		4902771		True				
ANR	4902784	Function	SSString :: copy	200:0:4165:4410							
ANR	4902785	FunctionDef	SSString :: copy (const SSString & sstr)		4902784	0					
ANR	4902786	CompoundStatement		202:0:4208:4410	4902784	0					
ANR	4902787	ExpressionStatement	dispose ( )	204:1:4244:4254	4902784	0	True				
ANR	4902788	CallExpression	dispose ( )		4902784	0					
ANR	4902789	Callee	dispose		4902784	0					
ANR	4902790	Identifier	dispose		4902784	0					
ANR	4902791	ArgumentList			4902784	1					
ANR	4902792	ExpressionStatement	index = sstr . index	206:4:4261:4279	4902784	1	True				
ANR	4902793	AssignmentExpression	index = sstr . index		4902784	0		=			
ANR	4902794	Identifier	index		4902784	0					
ANR	4902795	MemberAccess	sstr . index		4902784	1					
ANR	4902796	Identifier	sstr		4902784	0					
ANR	4902797	Identifier	index		4902784	1					
ANR	4902798	ExpressionStatement	context = sstr . context	207:4:4285:4307	4902784	2	True				
ANR	4902799	AssignmentExpression	context = sstr . context		4902784	0		=			
ANR	4902800	Identifier	context		4902784	0					
ANR	4902801	MemberAccess	sstr . context		4902784	1					
ANR	4902802	Identifier	sstr		4902784	0					
ANR	4902803	Identifier	context		4902784	1					
ANR	4902804	IfStatement	if ( context )		4902784	3					
ANR	4902805	Condition	context	210:8:4348:4354	4902784	0	True				
ANR	4902806	Identifier	context		4902784	0					
ANR	4902807	CompoundStatement		9:17:148:148	4902784	1					
ANR	4902808	ExpressionStatement	context -> strTable [ index ] . refCount ++	211:2:4361:4396	4902784	0	True				
ANR	4902809	PostIncDecOperationExpression	context -> strTable [ index ] . refCount ++		4902784	0					
ANR	4902810	MemberAccess	context -> strTable [ index ] . refCount		4902784	0					
ANR	4902811	ArrayIndexing	context -> strTable [ index ]		4902784	0					
ANR	4902812	PtrMemberAccess	context -> strTable		4902784	0					
ANR	4902813	Identifier	context		4902784	0					
ANR	4902814	Identifier	strTable		4902784	1					
ANR	4902815	Identifier	index		4902784	1					
ANR	4902816	Identifier	refCount		4902784	1					
ANR	4902817	IncDec	++		4902784	1					
ANR	4902818	ReturnStatement	return ;	213:1:4402:4408	4902784	4	True				
ANR	4902819	ReturnType	void		4902784	1					
ANR	4902820	Identifier	SSString :: copy		4902784	2					
ANR	4902821	ParameterList	const SSString & sstr		4902784	3					
ANR	4902822	Parameter	const SSString & sstr	201:16:4186:4205	4902784	0	True				
ANR	4902823	ParameterType	const SSString &		4902784	0					
ANR	4902824	Identifier	sstr		4902784	1					
ANR	4902825	CFGEntryNode	ENTRY		4902784		True				
ANR	4902826	CFGExitNode	EXIT		4902784		True				
ANR	4902827	Symbol	sstr . context		4902784						
ANR	4902828	Symbol	* context -> strTable		4902784						
ANR	4902829	Symbol	* index		4902784						
ANR	4902830	Symbol	sstr		4902784						
ANR	4902831	Symbol	context		4902784						
ANR	4902832	Symbol	context -> strTable [ index ] . refCount		4902784						
ANR	4902833	Symbol	index		4902784						
ANR	4902834	Symbol	* * context		4902784						
ANR	4902835	Symbol	sstr . index		4902784						
ANR	4902836	Symbol	context -> strTable		4902784						
ANR	4902837	Symbol	* context		4902784						
ANR	4902838	Function	operator =	217:10:4440:4507							
ANR	4902839	FunctionDef	operator = (const SSString & str)		4902838	0					
ANR	4902840	CompoundStatement		218:0:4473:4507	4902838	0					
ANR	4902841	ExpressionStatement	copy ( str )	219:1:4476:4487	4902838	0	True				
ANR	4902842	CallExpression	copy ( str )		4902838	0					
ANR	4902843	Callee	copy		4902838	0					
ANR	4902844	Identifier	copy		4902838	0					
ANR	4902845	ArgumentList	str		4902838	1					
ANR	4902846	Argument	str		4902838	0					
ANR	4902847	Identifier	str		4902838	0					
ANR	4902848	ReturnStatement	return ( * this ) ;	220:1:4490:4505	4902838	1	True				
ANR	4902849	UnaryOperationExpression	* this		4902838	0					
ANR	4902850	UnaryOperator	*		4902838	0					
ANR	4902851	Identifier	this		4902838	1					
ANR	4902852	Identifier	operator =		4902838	1					
ANR	4902853	ParameterList	const SSString & str		4902838	2					
ANR	4902854	Parameter	const SSString & str	217:21:4451:4469	4902838	0	True				
ANR	4902855	ParameterType	const SSString &		4902838	0					
ANR	4902856	Identifier	str		4902838	1					
ANR	4902857	CFGEntryNode	ENTRY		4902838		True				
ANR	4902858	CFGExitNode	EXIT		4902838		True				
ANR	4902859	Symbol	str		4902838						
ANR	4902860	Symbol	* this		4902838						
ANR	4902861	Symbol	this		4902838						
ANR	4902862	Function	operator ==	223:0:4510:4727							
ANR	4902863	FunctionDef	"operator == (const SSString & s1 , const SSString & s2)"		4902862	0					
ANR	4902864	CompoundStatement		224:0:4567:4727	4902862	0					
ANR	4902865	IdentifierDeclStatement	bool are_equal ;	225:1:4570:4584	4902862	0	True				
ANR	4902866	IdentifierDecl	are_equal		4902862	0					
ANR	4902867	IdentifierDeclType	bool		4902862	0					
ANR	4902868	Identifier	are_equal		4902862	1					
ANR	4902869	IfStatement	if ( s1 . context == s2 . context && s1 . index == s2 . index )		4902862	1					
ANR	4902870	Condition	s1 . context == s2 . context && s1 . index == s2 . index	227:8:4595:4649	4902862	0	True				
ANR	4902871	AndExpression	s1 . context == s2 . context && s1 . index == s2 . index		4902862	0		&&			
ANR	4902872	EqualityExpression	s1 . context == s2 . context		4902862	0		==			
ANR	4902873	MemberAccess	s1 . context		4902862	0					
ANR	4902874	Identifier	s1		4902862	0					
ANR	4902875	Identifier	context		4902862	1					
ANR	4902876	MemberAccess	s2 . context		4902862	1					
ANR	4902877	Identifier	s2		4902862	0					
ANR	4902878	Identifier	context		4902862	1					
ANR	4902879	EqualityExpression	s1 . index == s2 . index		4902862	1		==			
ANR	4902880	MemberAccess	s1 . index		4902862	0					
ANR	4902881	Identifier	s1		4902862	0					
ANR	4902882	Identifier	index		4902862	1					
ANR	4902883	MemberAccess	s2 . index		4902862	1					
ANR	4902884	Identifier	s2		4902862	0					
ANR	4902885	Identifier	index		4902862	1					
ANR	4902886	CompoundStatement		5:32:84:84	4902862	1					
ANR	4902887	ExpressionStatement	are_equal = true	229:2:4656:4672	4902862	0	True				
ANR	4902888	AssignmentExpression	are_equal = true		4902862	0		=			
ANR	4902889	Identifier	are_equal		4902862	0					
ANR	4902890	Identifier	true		4902862	1					
ANR	4902891	ElseStatement	else		4902862	0					
ANR	4902892	CompoundStatement		7:8:114:114	4902862	0					
ANR	4902893	ExpressionStatement	are_equal = false	231:2:4686:4703	4902862	0	True				
ANR	4902894	AssignmentExpression	are_equal = false		4902862	0		=			
ANR	4902895	Identifier	are_equal		4902862	0					
ANR	4902896	Identifier	false		4902862	1					
ANR	4902897	ReturnStatement	return are_equal ;	233:1:4709:4725	4902862	2	True				
ANR	4902898	Identifier	are_equal		4902862	0					
ANR	4902899	ReturnType	bool		4902862	1					
ANR	4902900	Identifier	operator ==		4902862	2					
ANR	4902901	ParameterList	"const SSString & s1 , const SSString & s2"		4902862	3					
ANR	4902902	Parameter	const SSString & s1	223:17:4527:4544	4902862	0	True				
ANR	4902903	ParameterType	const SSString &		4902862	0					
ANR	4902904	Identifier	s1		4902862	1					
ANR	4902905	Parameter	const SSString & s2	223:37:4547:4564	4902862	1	True				
ANR	4902906	ParameterType	const SSString &		4902862	0					
ANR	4902907	Identifier	s2		4902862	1					
ANR	4902908	CFGEntryNode	ENTRY		4902862		True				
ANR	4902909	CFGExitNode	EXIT		4902862		True				
ANR	4902910	Symbol	s1 . context		4902862						
ANR	4902911	Symbol	are_equal		4902862						
ANR	4902912	Symbol	s2 . context		4902862						
ANR	4902913	Symbol	true		4902862						
ANR	4902914	Symbol	false		4902862						
ANR	4902915	Symbol	s2 . index		4902862						
ANR	4902916	Symbol	s1		4902862						
ANR	4902917	Symbol	s2		4902862						
ANR	4902918	Symbol	s1 . index		4902862						
ANR	4902919	Function	operator !=	237:0:4731:4964							
ANR	4902920	FunctionDef	"operator != (const SSString & s1 , const SSString & s2)"		4902919	0					
ANR	4902921	CompoundStatement		238:0:4788:4964	4902919	0					
ANR	4902922	IdentifierDeclStatement	bool are_not_equal ;	239:1:4791:4809	4902919	0	True				
ANR	4902923	IdentifierDecl	are_not_equal		4902919	0					
ANR	4902924	IdentifierDeclType	bool		4902919	0					
ANR	4902925	Identifier	are_not_equal		4902919	1					
ANR	4902926	IfStatement	if ( s1 . context != s2 . context || s1 . index != s2 . index )		4902919	1					
ANR	4902927	Condition	s1 . context != s2 . context || s1 . index != s2 . index	241:8:4820:4874	4902919	0	True				
ANR	4902928	OrExpression	s1 . context != s2 . context || s1 . index != s2 . index		4902919	0		||			
ANR	4902929	EqualityExpression	s1 . context != s2 . context		4902919	0		!=			
ANR	4902930	MemberAccess	s1 . context		4902919	0					
ANR	4902931	Identifier	s1		4902919	0					
ANR	4902932	Identifier	context		4902919	1					
ANR	4902933	MemberAccess	s2 . context		4902919	1					
ANR	4902934	Identifier	s2		4902919	0					
ANR	4902935	Identifier	context		4902919	1					
ANR	4902936	EqualityExpression	s1 . index != s2 . index		4902919	1		!=			
ANR	4902937	MemberAccess	s1 . index		4902919	0					
ANR	4902938	Identifier	s1		4902919	0					
ANR	4902939	Identifier	index		4902919	1					
ANR	4902940	MemberAccess	s2 . index		4902919	1					
ANR	4902941	Identifier	s2		4902919	0					
ANR	4902942	Identifier	index		4902919	1					
ANR	4902943	CompoundStatement		5:32:88:88	4902919	1					
ANR	4902944	ExpressionStatement	are_not_equal = true	243:2:4881:4901	4902919	0	True				
ANR	4902945	AssignmentExpression	are_not_equal = true		4902919	0		=			
ANR	4902946	Identifier	are_not_equal		4902919	0					
ANR	4902947	Identifier	true		4902919	1					
ANR	4902948	ElseStatement	else		4902919	0					
ANR	4902949	CompoundStatement		7:8:122:122	4902919	0					
ANR	4902950	ExpressionStatement	are_not_equal = false	245:2:4915:4936	4902919	0	True				
ANR	4902951	AssignmentExpression	are_not_equal = false		4902919	0		=			
ANR	4902952	Identifier	are_not_equal		4902919	0					
ANR	4902953	Identifier	false		4902919	1					
ANR	4902954	ReturnStatement	return are_not_equal ;	247:1:4942:4962	4902919	2	True				
ANR	4902955	Identifier	are_not_equal		4902919	0					
ANR	4902956	ReturnType	bool		4902919	1					
ANR	4902957	Identifier	operator !=		4902919	2					
ANR	4902958	ParameterList	"const SSString & s1 , const SSString & s2"		4902919	3					
ANR	4902959	Parameter	const SSString & s1	237:17:4748:4765	4902919	0	True				
ANR	4902960	ParameterType	const SSString &		4902919	0					
ANR	4902961	Identifier	s1		4902919	1					
ANR	4902962	Parameter	const SSString & s2	237:37:4768:4785	4902919	1	True				
ANR	4902963	ParameterType	const SSString &		4902919	0					
ANR	4902964	Identifier	s2		4902919	1					
ANR	4902965	CFGEntryNode	ENTRY		4902919		True				
ANR	4902966	CFGExitNode	EXIT		4902919		True				
ANR	4902967	Symbol	s1 . context		4902919						
ANR	4902968	Symbol	s2 . context		4902919						
ANR	4902969	Symbol	are_not_equal		4902919						
ANR	4902970	Symbol	true		4902919						
ANR	4902971	Symbol	false		4902919						
ANR	4902972	Symbol	s2 . index		4902919						
ANR	4902973	Symbol	s1		4902919						
ANR	4902974	Symbol	s2		4902919						
ANR	4902975	Symbol	s1 . index		4902919						
ANR	4902976	Function	SSString :: dispose	250:0:4967:6121							
ANR	4902977	FunctionDef	SSString :: dispose ()		4902976	0					
ANR	4902978	CompoundStatement		252:0:4994:6121	4902976	0					
ANR	4902979	IfStatement	if ( context && ( -- context -> strTable [ index ] . refCount ) == 0 )		4902976	0					
ANR	4902980	Condition	context && ( -- context -> strTable [ index ] . refCount ) == 0	254:8:5079:5131	4902976	0	True				
ANR	4902981	AndExpression	context && ( -- context -> strTable [ index ] . refCount ) == 0		4902976	0		&&			
ANR	4902982	Identifier	context		4902976	0					
ANR	4902983	EqualityExpression	( -- context -> strTable [ index ] . refCount ) == 0		4902976	1		==			
ANR	4902984	UnaryExpression	-- context -> strTable [ index ] . refCount		4902976	0					
ANR	4902985	IncDec	--		4902976	0					
ANR	4902986	MemberAccess	context -> strTable [ index ] . refCount		4902976	1					
ANR	4902987	ArrayIndexing	context -> strTable [ index ]		4902976	0					
ANR	4902988	PtrMemberAccess	context -> strTable		4902976	0					
ANR	4902989	Identifier	context		4902976	0					
ANR	4902990	Identifier	strTable		4902976	1					
ANR	4902991	Identifier	index		4902976	1					
ANR	4902992	Identifier	refCount		4902976	1					
ANR	4902993	PrimaryExpression	0		4902976	1					
ANR	4902994	CompoundStatement		5:2:147:205	4902976	1					
ANR	4902995	IdentifierDeclStatement	YourSensitiveString str ( context -> strTable [ index ] . string ) ;	256:2:5142:5200	4902976	0	True				
ANR	4902996	IdentifierDecl	str ( context -> strTable [ index ] . string )		4902976	0					
ANR	4902997	IdentifierDeclType	YourSensitiveString		4902976	0					
ANR	4902998	Identifier	str		4902976	1					
ANR	4902999	MemberAccess	context -> strTable [ index ] . string		4902976	2					
ANR	4903000	ArrayIndexing	context -> strTable [ index ]		4902976	0					
ANR	4903001	PtrMemberAccess	context -> strTable		4902976	0					
ANR	4903002	Identifier	context		4902976	0					
ANR	4903003	Identifier	strTable		4902976	1					
ANR	4903004	Identifier	index		4902976	1					
ANR	4903005	Identifier	string		4902976	1					
ANR	4903006	ExpressionStatement	context -> stringSpace -> remove ( str )	257:2:5204:5239	4902976	1	True				
ANR	4903007	CallExpression	context -> stringSpace -> remove ( str )		4902976	0					
ANR	4903008	Callee	context -> stringSpace -> remove		4902976	0					
ANR	4903009	PtrMemberAccess	context -> stringSpace -> remove		4902976	0					
ANR	4903010	PtrMemberAccess	context -> stringSpace		4902976	0					
ANR	4903011	Identifier	context		4902976	0					
ANR	4903012	Identifier	stringSpace		4902976	1					
ANR	4903013	Identifier	remove		4902976	1					
ANR	4903014	ArgumentList	str		4902976	1					
ANR	4903015	Argument	str		4902976	0					
ANR	4903016	Identifier	str		4902976	0					
ANR	4903017	ExpressionStatement	free ( context -> strTable [ index ] . string )	259:2:5244:5282	4902976	2	True				
ANR	4903018	CallExpression	free ( context -> strTable [ index ] . string )		4902976	0					
ANR	4903019	Callee	free		4902976	0					
ANR	4903020	Identifier	free		4902976	0					
ANR	4903021	ArgumentList	context -> strTable [ index ] . string		4902976	1					
ANR	4903022	Argument	context -> strTable [ index ] . string		4902976	0					
ANR	4903023	MemberAccess	context -> strTable [ index ] . string		4902976	0					
ANR	4903024	ArrayIndexing	context -> strTable [ index ]		4902976	0					
ANR	4903025	PtrMemberAccess	context -> strTable		4902976	0					
ANR	4903026	Identifier	context		4902976	0					
ANR	4903027	Identifier	strTable		4902976	1					
ANR	4903028	Identifier	index		4902976	1					
ANR	4903029	Identifier	string		4902976	1					
ANR	4903030	ExpressionStatement	context -> strTable [ index ] . string = NULL	260:2:5286:5324	4902976	3	True				
ANR	4903031	AssignmentExpression	context -> strTable [ index ] . string = NULL		4902976	0		=			
ANR	4903032	MemberAccess	context -> strTable [ index ] . string		4902976	0					
ANR	4903033	ArrayIndexing	context -> strTable [ index ]		4902976	0					
ANR	4903034	PtrMemberAccess	context -> strTable		4902976	0					
ANR	4903035	Identifier	context		4902976	0					
ANR	4903036	Identifier	strTable		4902976	1					
ANR	4903037	Identifier	index		4902976	1					
ANR	4903038	Identifier	string		4902976	1					
ANR	4903039	Identifier	NULL		4902976	1					
ANR	4903040	ExpressionStatement	context -> strTable [ index ] . inUse = false	261:2:5328:5366	4902976	4	True				
ANR	4903041	AssignmentExpression	context -> strTable [ index ] . inUse = false		4902976	0		=			
ANR	4903042	MemberAccess	context -> strTable [ index ] . inUse		4902976	0					
ANR	4903043	ArrayIndexing	context -> strTable [ index ]		4902976	0					
ANR	4903044	PtrMemberAccess	context -> strTable		4902976	0					
ANR	4903045	Identifier	context		4902976	0					
ANR	4903046	Identifier	strTable		4902976	1					
ANR	4903047	Identifier	index		4902976	1					
ANR	4903048	Identifier	inUse		4902976	1					
ANR	4903049	Identifier	false		4902976	1					
ANR	4903050	ExpressionStatement	context -> number_of_slots_filled --	264:2:5429:5462	4902976	5	True				
ANR	4903051	PostIncDecOperationExpression	context -> number_of_slots_filled --		4902976	0					
ANR	4903052	PtrMemberAccess	context -> number_of_slots_filled		4902976	0					
ANR	4903053	Identifier	context		4902976	0					
ANR	4903054	Identifier	number_of_slots_filled		4902976	1					
ANR	4903055	IncDec	--		4902976	1					
ANR	4903056	IfStatement	if ( context -> number_of_slots_filled < 0 )		4902976	6					
ANR	4903057	Condition	context -> number_of_slots_filled < 0	265:6:5470:5504	4902976	0	True				
ANR	4903058	RelationalExpression	context -> number_of_slots_filled < 0		4902976	0		<			
ANR	4903059	PtrMemberAccess	context -> number_of_slots_filled		4902976	0					
ANR	4903060	Identifier	context		4902976	0					
ANR	4903061	Identifier	number_of_slots_filled		4902976	1					
ANR	4903062	PrimaryExpression	0		4902976	1					
ANR	4903063	CompoundStatement		14:43:512:512	4902976	1					
ANR	4903064	ExpressionStatement	"EXCEPT ( ""StringSpace is algorithmically bad: number_of_slots_filled = %d!\\n"" , context -> number_of_slots_filled )"	266:3:5512:5628	4902976	0	True				
ANR	4903065	CallExpression	"EXCEPT ( ""StringSpace is algorithmically bad: number_of_slots_filled = %d!\\n"" , context -> number_of_slots_filled )"		4902976	0					
ANR	4903066	Callee	EXCEPT		4902976	0					
ANR	4903067	Identifier	EXCEPT		4902976	0					
ANR	4903068	ArgumentList	"""StringSpace is algorithmically bad: number_of_slots_filled = %d!\\n"""		4902976	1					
ANR	4903069	Argument	"""StringSpace is algorithmically bad: number_of_slots_filled = %d!\\n"""		4902976	0					
ANR	4903070	PrimaryExpression	"""StringSpace is algorithmically bad: number_of_slots_filled = %d!\\n"""		4902976	0					
ANR	4903071	Argument	context -> number_of_slots_filled		4902976	1					
ANR	4903072	PtrMemberAccess	context -> number_of_slots_filled		4902976	0					
ANR	4903073	Identifier	context		4902976	0					
ANR	4903074	Identifier	number_of_slots_filled		4902976	1					
ANR	4903075	IfStatement	if ( context -> first_free_slot >= index )		4902976	7					
ANR	4903076	Condition	context -> first_free_slot >= index	269:6:5640:5672	4902976	0	True				
ANR	4903077	RelationalExpression	context -> first_free_slot >= index		4902976	0		>=			
ANR	4903078	PtrMemberAccess	context -> first_free_slot		4902976	0					
ANR	4903079	Identifier	context		4902976	0					
ANR	4903080	Identifier	first_free_slot		4902976	1					
ANR	4903081	Identifier	index		4902976	1					
ANR	4903082	CompoundStatement		18:41:680:680	4902976	1					
ANR	4903083	ExpressionStatement	context -> first_free_slot = index	270:3:5680:5712	4902976	0	True				
ANR	4903084	AssignmentExpression	context -> first_free_slot = index		4902976	0		=			
ANR	4903085	PtrMemberAccess	context -> first_free_slot		4902976	0					
ANR	4903086	Identifier	context		4902976	0					
ANR	4903087	Identifier	first_free_slot		4902976	1					
ANR	4903088	Identifier	index		4902976	1					
ANR	4903089	IfStatement	if ( context -> highest_used_slot == index )		4902976	8					
ANR	4903090	Condition	context -> highest_used_slot == index	274:6:5814:5848	4902976	0	True				
ANR	4903091	EqualityExpression	context -> highest_used_slot == index		4902976	0		==			
ANR	4903092	PtrMemberAccess	context -> highest_used_slot		4902976	0					
ANR	4903093	Identifier	context		4902976	0					
ANR	4903094	Identifier	highest_used_slot		4902976	1					
ANR	4903095	Identifier	index		4902976	1					
ANR	4903096	CompoundStatement		23:43:856:856	4902976	1					
ANR	4903097	DoStatement	do		4902976	0					
ANR	4903098	CompoundStatement		24:6:864:864	4902976	0					
ANR	4903099	ExpressionStatement	context -> highest_used_slot --	276:4:5865:5893	4902976	0	True				
ANR	4903100	PostIncDecOperationExpression	context -> highest_used_slot --		4902976	0					
ANR	4903101	PtrMemberAccess	context -> highest_used_slot		4902976	0					
ANR	4903102	Identifier	context		4902976	0					
ANR	4903103	Identifier	highest_used_slot		4902976	1					
ANR	4903104	IncDec	--		4902976	1					
ANR	4903105	IfStatement	if ( context -> highest_used_slot >= 0 && context -> strTable [ context -> highest_used_slot ] . inUse )		4902976	1					
ANR	4903106	Condition	context -> highest_used_slot >= 0 && context -> strTable [ context -> highest_used_slot ] . inUse	277:14:5909:6016	4902976	0	True				
ANR	4903107	AndExpression	context -> highest_used_slot >= 0 && context -> strTable [ context -> highest_used_slot ] . inUse		4902976	0		&&			
ANR	4903108	RelationalExpression	context -> highest_used_slot >= 0		4902976	0		>=			
ANR	4903109	PtrMemberAccess	context -> highest_used_slot		4902976	0					
ANR	4903110	Identifier	context		4902976	0					
ANR	4903111	Identifier	highest_used_slot		4902976	1					
ANR	4903112	PrimaryExpression	0		4902976	1					
ANR	4903113	MemberAccess	context -> strTable [ context -> highest_used_slot ] . inUse		4902976	1					
ANR	4903114	ArrayIndexing	context -> strTable [ context -> highest_used_slot ]		4902976	0					
ANR	4903115	PtrMemberAccess	context -> strTable		4902976	0					
ANR	4903116	Identifier	context		4902976	0					
ANR	4903117	Identifier	strTable		4902976	1					
ANR	4903118	PtrMemberAccess	context -> highest_used_slot		4902976	1					
ANR	4903119	Identifier	context		4902976	0					
ANR	4903120	Identifier	highest_used_slot		4902976	1					
ANR	4903121	Identifier	inUse		4902976	1					
ANR	4903122	CompoundStatement		27:64:1024:1024	4902976	1					
ANR	4903123	BreakStatement	break ;	279:5:6026:6031	4902976	0	True				
ANR	4903124	Condition	context -> highest_used_slot >= - 1	281:12:6052:6083	4902976	1	True				
ANR	4903125	RelationalExpression	context -> highest_used_slot >= - 1		4902976	0		>=			
ANR	4903126	PtrMemberAccess	context -> highest_used_slot		4902976	0					
ANR	4903127	Identifier	context		4902976	0					
ANR	4903128	Identifier	highest_used_slot		4902976	1					
ANR	4903129	UnaryOperationExpression	- 1		4902976	1					
ANR	4903130	UnaryOperator	-		4902976	0					
ANR	4903131	PrimaryExpression	1		4902976	1					
ANR	4903132	ExpressionStatement	context = NULL	285:1:6096:6110	4902976	1	True				
ANR	4903133	AssignmentExpression	context = NULL		4902976	0		=			
ANR	4903134	Identifier	context		4902976	0					
ANR	4903135	Identifier	NULL		4902976	1					
ANR	4903136	ReturnStatement	return ;	286:1:6113:6119	4902976	2	True				
ANR	4903137	ReturnType	void		4902976	1					
ANR	4903138	Identifier	SSString :: dispose		4902976	2					
ANR	4903139	ParameterList			4902976	3					
ANR	4903140	CFGEntryNode	ENTRY		4902976		True				
ANR	4903141	CFGExitNode	EXIT		4902976		True				
ANR	4903142	Symbol	context -> stringSpace		4902976						
ANR	4903143	Symbol	NULL		4902976						
ANR	4903144	Symbol	* context -> strTable		4902976						
ANR	4903145	Symbol	* index		4902976						
ANR	4903146	Symbol	false		4902976						
ANR	4903147	Symbol	* * context		4902976						
ANR	4903148	Symbol	index		4902976						
ANR	4903149	Symbol	context -> strTable		4902976						
ANR	4903150	Symbol	* context		4902976						
ANR	4903151	Symbol	context -> strTable [ index ] . string		4902976						
ANR	4903152	Symbol	str		4902976						
ANR	4903153	Symbol	context -> number_of_slots_filled		4902976						
ANR	4903154	Symbol	context -> strTable [ context -> highest_used_slot ] . inUse		4902976						
ANR	4903155	Symbol	context -> strTable [ index ] . inUse		4902976						
ANR	4903156	Symbol	* context -> highest_used_slot		4902976						
ANR	4903157	Symbol	context -> first_free_slot		4902976						
ANR	4903158	Symbol	context		4902976						
ANR	4903159	Symbol	context -> strTable [ index ] . refCount		4902976						
ANR	4903160	Symbol	context -> highest_used_slot		4902976						
ANR	4903161	Function	StringSpace :: dump	289:0:6135:6792							
ANR	4903162	FunctionDef	StringSpace :: dump ()		4903161	0					
ANR	4903163	CompoundStatement		291:0:6166:6792	4903161	0					
ANR	4903164	IdentifierDeclStatement	int number_printed ;	292:1:6169:6187	4903161	0	True				
ANR	4903165	IdentifierDecl	number_printed		4903161	0					
ANR	4903166	IdentifierDeclType	int		4903161	0					
ANR	4903167	Identifier	number_printed		4903161	1					
ANR	4903168	ExpressionStatement	number_printed = 0	294:1:6191:6209	4903161	1	True				
ANR	4903169	AssignmentExpression	number_printed = 0		4903161	0		=			
ANR	4903170	Identifier	number_printed		4903161	0					
ANR	4903171	PrimaryExpression	0		4903161	1					
ANR	4903172	ExpressionStatement	"printf ( ""String space dump:  %d strings\\n"" , number_of_slots_filled )"	295:1:6212:6279	4903161	2	True				
ANR	4903173	CallExpression	"printf ( ""String space dump:  %d strings\\n"" , number_of_slots_filled )"		4903161	0					
ANR	4903174	Callee	printf		4903161	0					
ANR	4903175	Identifier	printf		4903161	0					
ANR	4903176	ArgumentList	"""String space dump:  %d strings\\n"""		4903161	1					
ANR	4903177	Argument	"""String space dump:  %d strings\\n"""		4903161	0					
ANR	4903178	PrimaryExpression	"""String space dump:  %d strings\\n"""		4903161	0					
ANR	4903179	Argument	number_of_slots_filled		4903161	1					
ANR	4903180	Identifier	number_of_slots_filled		4903161	0					
ANR	4903181	ForStatement	for ( int i = 0 ; i <= highest_used_slot ; i ++ )		4903161	3					
ANR	4903182	ForInit	int i = 0 ;	296:6:6287:6296	4903161	0	True				
ANR	4903183	IdentifierDeclStatement	int i = 0 ;		4903161	0					
ANR	4903184	IdentifierDecl	i = 0		4903161	0					
ANR	4903185	IdentifierDeclType	int		4903161	0					
ANR	4903186	Identifier	i		4903161	1					
ANR	4903187	AssignmentExpression	i = 0		4903161	2		=			
ANR	4903188	Identifier	i		4903161	0					
ANR	4903189	PrimaryExpression	0		4903161	1					
ANR	4903190	Condition	i <= highest_used_slot	296:17:6298:6319	4903161	1	True				
ANR	4903191	RelationalExpression	i <= highest_used_slot		4903161	0		<=			
ANR	4903192	Identifier	i		4903161	0					
ANR	4903193	Identifier	highest_used_slot		4903161	1					
ANR	4903194	PostIncDecOperationExpression	i ++	296:41:6322:6324	4903161	2	True				
ANR	4903195	Identifier	i		4903161	0					
ANR	4903196	IncDec	++		4903161	1					
ANR	4903197	CompoundStatement		7:1:161:161	4903161	3					
ANR	4903198	IfStatement	if ( strTable [ i ] . inUse )		4903161	0					
ANR	4903199	Condition	strTable [ i ] . inUse	298:6:6336:6352	4903161	0	True				
ANR	4903200	MemberAccess	strTable [ i ] . inUse		4903161	0					
ANR	4903201	ArrayIndexing	strTable [ i ]		4903161	0					
ANR	4903202	Identifier	strTable		4903161	0					
ANR	4903203	Identifier	i		4903161	1					
ANR	4903204	Identifier	inUse		4903161	1					
ANR	4903205	CompoundStatement		8:25:188:188	4903161	1					
ANR	4903206	ExpressionStatement	number_printed ++	299:3:6360:6376	4903161	0	True				
ANR	4903207	PostIncDecOperationExpression	number_printed ++		4903161	0					
ANR	4903208	Identifier	number_printed		4903161	0					
ANR	4903209	IncDec	++		4903161	1					
ANR	4903210	ExpressionStatement	"printf ( ""#%03d "" , i )"	300:3:6381:6400	4903161	1	True				
ANR	4903211	CallExpression	"printf ( ""#%03d "" , i )"		4903161	0					
ANR	4903212	Callee	printf		4903161	0					
ANR	4903213	Identifier	printf		4903161	0					
ANR	4903214	ArgumentList	"""#%03d """		4903161	1					
ANR	4903215	Argument	"""#%03d """		4903161	0					
ANR	4903216	PrimaryExpression	"""#%03d """		4903161	0					
ANR	4903217	Argument	i		4903161	1					
ANR	4903218	Identifier	i		4903161	0					
ANR	4903219	IfStatement	if ( strTable [ i ] . string == NULL )		4903161	2					
ANR	4903220	Condition	strTable [ i ] . string == NULL	301:7:6409:6434	4903161	0	True				
ANR	4903221	EqualityExpression	strTable [ i ] . string == NULL		4903161	0		==			
ANR	4903222	MemberAccess	strTable [ i ] . string		4903161	0					
ANR	4903223	ArrayIndexing	strTable [ i ]		4903161	0					
ANR	4903224	Identifier	strTable		4903161	0					
ANR	4903225	Identifier	i		4903161	1					
ANR	4903226	Identifier	string		4903161	1					
ANR	4903227	Identifier	NULL		4903161	1					
ANR	4903228	CompoundStatement		11:35:270:270	4903161	1					
ANR	4903229	ExpressionStatement	"printf ( ""(disposed) (%d)\\n"" , strTable [ i ] . refCount )"	302:4:6443:6493	4903161	0	True				
ANR	4903230	CallExpression	"printf ( ""(disposed) (%d)\\n"" , strTable [ i ] . refCount )"		4903161	0					
ANR	4903231	Callee	printf		4903161	0					
ANR	4903232	Identifier	printf		4903161	0					
ANR	4903233	ArgumentList	"""(disposed) (%d)\\n"""		4903161	1					
ANR	4903234	Argument	"""(disposed) (%d)\\n"""		4903161	0					
ANR	4903235	PrimaryExpression	"""(disposed) (%d)\\n"""		4903161	0					
ANR	4903236	Argument	strTable [ i ] . refCount		4903161	1					
ANR	4903237	MemberAccess	strTable [ i ] . refCount		4903161	0					
ANR	4903238	ArrayIndexing	strTable [ i ]		4903161	0					
ANR	4903239	Identifier	strTable		4903161	0					
ANR	4903240	Identifier	i		4903161	1					
ANR	4903241	Identifier	refCount		4903161	1					
ANR	4903242	ElseStatement	else		4903161	0					
ANR	4903243	CompoundStatement		13:10:338:338	4903161	0					
ANR	4903244	ExpressionStatement	"printf ( ""%s (%d)\\n"" , strTable [ i ] . string , strTable [ i ] . refCount )"	304:4:6511:6573	4903161	0	True				
ANR	4903245	CallExpression	"printf ( ""%s (%d)\\n"" , strTable [ i ] . string , strTable [ i ] . refCount )"		4903161	0					
ANR	4903246	Callee	printf		4903161	0					
ANR	4903247	Identifier	printf		4903161	0					
ANR	4903248	ArgumentList	"""%s (%d)\\n"""		4903161	1					
ANR	4903249	Argument	"""%s (%d)\\n"""		4903161	0					
ANR	4903250	PrimaryExpression	"""%s (%d)\\n"""		4903161	0					
ANR	4903251	Argument	strTable [ i ] . string		4903161	1					
ANR	4903252	MemberAccess	strTable [ i ] . string		4903161	0					
ANR	4903253	ArrayIndexing	strTable [ i ]		4903161	0					
ANR	4903254	Identifier	strTable		4903161	0					
ANR	4903255	Identifier	i		4903161	1					
ANR	4903256	Identifier	string		4903161	1					
ANR	4903257	Argument	strTable [ i ] . refCount		4903161	2					
ANR	4903258	MemberAccess	strTable [ i ] . refCount		4903161	0					
ANR	4903259	ArrayIndexing	strTable [ i ]		4903161	0					
ANR	4903260	Identifier	strTable		4903161	0					
ANR	4903261	Identifier	i		4903161	1					
ANR	4903262	Identifier	refCount		4903161	1					
ANR	4903263	IfStatement	if ( number_printed != number_of_slots_filled )		4903161	4					
ANR	4903264	Condition	number_printed != number_of_slots_filled	308:5:6592:6631	4903161	0	True				
ANR	4903265	EqualityExpression	number_printed != number_of_slots_filled		4903161	0		!=			
ANR	4903266	Identifier	number_printed		4903161	0					
ANR	4903267	Identifier	number_of_slots_filled		4903161	1					
ANR	4903268	CompoundStatement		18:47:467:467	4903161	1					
ANR	4903269	ExpressionStatement	"printf ( ""Number of slots expected (%d) is not accurate--should be %d.\\n"" , number_of_slots_filled , number_printed )"	309:2:6638:6756	4903161	0	True				
ANR	4903270	CallExpression	"printf ( ""Number of slots expected (%d) is not accurate--should be %d.\\n"" , number_of_slots_filled , number_printed )"		4903161	0					
ANR	4903271	Callee	printf		4903161	0					
ANR	4903272	Identifier	printf		4903161	0					
ANR	4903273	ArgumentList	"""Number of slots expected (%d) is not accurate--should be %d.\\n"""		4903161	1					
ANR	4903274	Argument	"""Number of slots expected (%d) is not accurate--should be %d.\\n"""		4903161	0					
ANR	4903275	PrimaryExpression	"""Number of slots expected (%d) is not accurate--should be %d.\\n"""		4903161	0					
ANR	4903276	Argument	number_of_slots_filled		4903161	1					
ANR	4903277	Identifier	number_of_slots_filled		4903161	0					
ANR	4903278	Argument	number_printed		4903161	2					
ANR	4903279	Identifier	number_printed		4903161	0					
ANR	4903280	ExpressionStatement	"printf ( ""\\nDone\\n"" )"	312:1:6762:6781	4903161	5	True				
ANR	4903281	CallExpression	"printf ( ""\\nDone\\n"" )"		4903161	0					
ANR	4903282	Callee	printf		4903161	0					
ANR	4903283	Identifier	printf		4903161	0					
ANR	4903284	ArgumentList	"""\\nDone\\n"""		4903161	1					
ANR	4903285	Argument	"""\\nDone\\n"""		4903161	0					
ANR	4903286	PrimaryExpression	"""\\nDone\\n"""		4903161	0					
ANR	4903287	ReturnStatement	return ;	313:1:6784:6790	4903161	6	True				
ANR	4903288	ReturnType	void		4903161	1					
ANR	4903289	Identifier	StringSpace :: dump		4903161	2					
ANR	4903290	ParameterList			4903161	3					
ANR	4903291	CFGEntryNode	ENTRY		4903161		True				
ANR	4903292	CFGExitNode	EXIT		4903161		True				
ANR	4903293	Symbol	strTable [ i ] . refCount		4903161						
ANR	4903294	Symbol	strTable		4903161						
ANR	4903295	Symbol	* i		4903161						
ANR	4903296	Symbol	NULL		4903161						
ANR	4903297	Symbol	highest_used_slot		4903161						
ANR	4903298	Symbol	number_of_slots_filled		4903161						
ANR	4903299	Symbol	number_printed		4903161						
ANR	4903300	Symbol	i		4903161						
ANR	4903301	Symbol	* strTable		4903161						
ANR	4903302	Symbol	strTable [ i ] . inUse		4903161						
ANR	4903303	Symbol	strTable [ i ] . string		4903161						
ANR	4903304	Function	StringSpace :: checkFor	316:0:6795:7041							
ANR	4903305	FunctionDef	StringSpace :: checkFor (char * str)		4903304	0					
ANR	4903306	CompoundStatement		318:0:6870:7041	4903304	0					
ANR	4903307	IdentifierDeclStatement	int canonical_index ;	319:1:6873:6892	4903304	0	True				
ANR	4903308	IdentifierDecl	canonical_index		4903304	0					
ANR	4903309	IdentifierDeclType	int		4903304	0					
ANR	4903310	Identifier	canonical_index		4903304	1					
ANR	4903311	IdentifierDeclStatement	YourSensitiveString yourStr ( str ) ;	320:1:6895:6927	4903304	1	True				
ANR	4903312	IdentifierDecl	yourStr ( str )		4903304	0					
ANR	4903313	IdentifierDeclType	YourSensitiveString		4903304	0					
ANR	4903314	Identifier	yourStr		4903304	1					
ANR	4903315	Identifier	str		4903304	2					
ANR	4903316	IfStatement	"if ( stringSpace -> lookup ( yourStr , canonical_index ) != 0 )"		4903304	2					
ANR	4903317	Condition	"stringSpace -> lookup ( yourStr , canonical_index ) != 0"	321:5:6934:6984	4903304	0	True				
ANR	4903318	EqualityExpression	"stringSpace -> lookup ( yourStr , canonical_index ) != 0"		4903304	0		!=			
ANR	4903319	CallExpression	"stringSpace -> lookup ( yourStr , canonical_index )"		4903304	0					
ANR	4903320	Callee	stringSpace -> lookup		4903304	0					
ANR	4903321	PtrMemberAccess	stringSpace -> lookup		4903304	0					
ANR	4903322	Identifier	stringSpace		4903304	0					
ANR	4903323	Identifier	lookup		4903304	1					
ANR	4903324	ArgumentList	yourStr		4903304	1					
ANR	4903325	Argument	yourStr		4903304	0					
ANR	4903326	Identifier	yourStr		4903304	0					
ANR	4903327	Argument	canonical_index		4903304	1					
ANR	4903328	Identifier	canonical_index		4903304	0					
ANR	4903329	PrimaryExpression	0		4903304	1					
ANR	4903330	CompoundStatement		4:58:116:116	4903304	1					
ANR	4903331	ExpressionStatement	canonical_index = - 1	322:2:6991:7011	4903304	0	True				
ANR	4903332	AssignmentExpression	canonical_index = - 1		4903304	0		=			
ANR	4903333	Identifier	canonical_index		4903304	0					
ANR	4903334	UnaryOperationExpression	- 1		4903304	1					
ANR	4903335	UnaryOperator	-		4903304	0					
ANR	4903336	PrimaryExpression	1		4903304	1					
ANR	4903337	ReturnStatement	return canonical_index ;	324:1:7017:7039	4903304	3	True				
ANR	4903338	Identifier	canonical_index		4903304	0					
ANR	4903339	ReturnType	int		4903304	1					
ANR	4903340	Identifier	StringSpace :: checkFor		4903304	2					
ANR	4903341	ParameterList	char * str		4903304	3					
ANR	4903342	Parameter	char * str	317:23:6823:6831	4903304	0	True				
ANR	4903343	ParameterType	char *		4903304	0					
ANR	4903344	Identifier	str		4903304	1					
ANR	4903345	CFGEntryNode	ENTRY		4903304		True				
ANR	4903346	CFGExitNode	EXIT		4903304		True				
ANR	4903347	Symbol	str		4903304						
ANR	4903348	Symbol	stringSpace -> lookup		4903304						
ANR	4903349	Symbol	stringSpace		4903304						
ANR	4903350	Symbol	canonical_index		4903304						
ANR	4903351	Symbol	* stringSpace		4903304						
ANR	4903352	Symbol	yourStr		4903304						
