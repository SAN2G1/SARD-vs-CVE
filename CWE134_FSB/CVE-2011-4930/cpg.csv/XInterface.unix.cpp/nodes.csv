command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	599980	File	data/converged/CVE-2011-4930_htcondor/XInterface.unix.cpp								
ANR	599981	DeclStmt									
ANR	599982	Decl							const char	const char *	UtmpName
ANR	599983	DeclStmt									
ANR	599984	Decl							const char	const char *	AltUtmpName
ANR	599985	DeclStmt									
ANR	599986	Decl							const char	const char *	UtmpName
ANR	599987	DeclStmt									
ANR	599988	Decl							const char	const char *	AltUtmpName
ANR	599989	DeclStmt									
ANR	599990	Decl							extern void	extern void ( )	PollActivity
ANR	599991	DeclStmt									
ANR	599992	Decl							bool	bool	g_connected
ANR	599993	DeclStmt									
ANR	599994	Decl							jmp_buf	jmp_buf	jmp
ANR	599995	Function	CatchFalseAlarm	64:0:1858:2077							
ANR	599996	FunctionDef	"CatchFalseAlarm (Display * display , XErrorEvent * err)"		599995	0					
ANR	599997	CompoundStatement		66:0:1922:2077	599995	0					
ANR	599998	IdentifierDeclStatement	char msg [ 80 ] ;	67:1:1925:1937	599995	0	True				
ANR	599999	IdentifierDecl	msg [ 80 ]		599995	0					
ANR	600000	IdentifierDeclType	char [ 80 ]		599995	0					
ANR	600001	Identifier	msg		599995	1					
ANR	600002	PrimaryExpression	80		599995	2					
ANR	600003	ExpressionStatement	"XGetErrorText ( display , err -> error_code , msg , 80 )"	68:1:1940:1988	599995	1	True				
ANR	600004	CallExpression	"XGetErrorText ( display , err -> error_code , msg , 80 )"		599995	0					
ANR	600005	Callee	XGetErrorText		599995	0					
ANR	600006	Identifier	XGetErrorText		599995	0					
ANR	600007	ArgumentList	display		599995	1					
ANR	600008	Argument	display		599995	0					
ANR	600009	Identifier	display		599995	0					
ANR	600010	Argument	err -> error_code		599995	1					
ANR	600011	PtrMemberAccess	err -> error_code		599995	0					
ANR	600012	Identifier	err		599995	0					
ANR	600013	Identifier	error_code		599995	1					
ANR	600014	Argument	msg		599995	2					
ANR	600015	Identifier	msg		599995	0					
ANR	600016	Argument	80		599995	3					
ANR	600017	PrimaryExpression	80		599995	0					
ANR	600018	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Caught Error code(%d): %s\\n"" , err -> error_code , msg )"	69:1:1991:2064	599995	2	True				
ANR	600019	CallExpression	"dprintf ( D_FULLDEBUG , ""Caught Error code(%d): %s\\n"" , err -> error_code , msg )"		599995	0					
ANR	600020	Callee	dprintf		599995	0					
ANR	600021	Identifier	dprintf		599995	0					
ANR	600022	ArgumentList	D_FULLDEBUG		599995	1					
ANR	600023	Argument	D_FULLDEBUG		599995	0					
ANR	600024	Identifier	D_FULLDEBUG		599995	0					
ANR	600025	Argument	"""Caught Error code(%d): %s\\n"""		599995	1					
ANR	600026	PrimaryExpression	"""Caught Error code(%d): %s\\n"""		599995	0					
ANR	600027	Argument	err -> error_code		599995	2					
ANR	600028	PtrMemberAccess	err -> error_code		599995	0					
ANR	600029	Identifier	err		599995	0					
ANR	600030	Identifier	error_code		599995	1					
ANR	600031	Argument	msg		599995	3					
ANR	600032	Identifier	msg		599995	0					
ANR	600033	ReturnStatement	return 0 ;	70:1:2067:2075	599995	3	True				
ANR	600034	PrimaryExpression	0		599995	0					
ANR	600035	ReturnType	static int		599995	1					
ANR	600036	Identifier	CatchFalseAlarm		599995	2					
ANR	600037	ParameterList	"Display * display , XErrorEvent * err"		599995	3					
ANR	600038	Parameter	Display * display	65:16:1886:1901	599995	0	True				
ANR	600039	ParameterType	Display *		599995	0					
ANR	600040	Identifier	display		599995	1					
ANR	600041	Parameter	XErrorEvent * err	65:34:1904:1919	599995	1	True				
ANR	600042	ParameterType	XErrorEvent *		599995	0					
ANR	600043	Identifier	err		599995	1					
ANR	600044	CFGEntryNode	ENTRY		599995		True				
ANR	600045	CFGExitNode	EXIT		599995		True				
ANR	600046	Symbol	msg		599995						
ANR	600047	Symbol	* err		599995						
ANR	600048	Symbol	err -> error_code		599995						
ANR	600049	Symbol	err		599995						
ANR	600050	Symbol	display		599995						
ANR	600051	Symbol	D_FULLDEBUG		599995						
ANR	600052	Function	CatchIOFalseAlarm	73:0:2080:2345							
ANR	600053	FunctionDef	"CatchIOFalseAlarm (Display * display , XErrorEvent * err)"		600052	0					
ANR	600054	CompoundStatement		75:0:2146:2345	600052	0					
ANR	600055	IdentifierDeclStatement	char msg [ 80 ] ;	76:1:2149:2161	600052	0	True				
ANR	600056	IdentifierDecl	msg [ 80 ]		600052	0					
ANR	600057	IdentifierDeclType	char [ 80 ]		600052	0					
ANR	600058	Identifier	msg		600052	1					
ANR	600059	PrimaryExpression	80		600052	2					
ANR	600060	ExpressionStatement	g_connected = false	77:1:2164:2183	600052	1	True				
ANR	600061	AssignmentExpression	g_connected = false		600052	0		=			
ANR	600062	Identifier	g_connected		600052	0					
ANR	600063	Identifier	false		600052	1					
ANR	600064	ExpressionStatement	"XGetErrorText ( display , err -> error_code , msg , 80 )"	79:1:2189:2237	600052	2	True				
ANR	600065	CallExpression	"XGetErrorText ( display , err -> error_code , msg , 80 )"		600052	0					
ANR	600066	Callee	XGetErrorText		600052	0					
ANR	600067	Identifier	XGetErrorText		600052	0					
ANR	600068	ArgumentList	display		600052	1					
ANR	600069	Argument	display		600052	0					
ANR	600070	Identifier	display		600052	0					
ANR	600071	Argument	err -> error_code		600052	1					
ANR	600072	PtrMemberAccess	err -> error_code		600052	0					
ANR	600073	Identifier	err		600052	0					
ANR	600074	Identifier	error_code		600052	1					
ANR	600075	Argument	msg		600052	2					
ANR	600076	Identifier	msg		600052	0					
ANR	600077	Argument	80		600052	3					
ANR	600078	PrimaryExpression	80		600052	0					
ANR	600079	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Caught Error code(%d): %s\\n"" , err -> error_code , msg )"	80:1:2240:2313	600052	3	True				
ANR	600080	CallExpression	"dprintf ( D_FULLDEBUG , ""Caught Error code(%d): %s\\n"" , err -> error_code , msg )"		600052	0					
ANR	600081	Callee	dprintf		600052	0					
ANR	600082	Identifier	dprintf		600052	0					
ANR	600083	ArgumentList	D_FULLDEBUG		600052	1					
ANR	600084	Argument	D_FULLDEBUG		600052	0					
ANR	600085	Identifier	D_FULLDEBUG		600052	0					
ANR	600086	Argument	"""Caught Error code(%d): %s\\n"""		600052	1					
ANR	600087	PrimaryExpression	"""Caught Error code(%d): %s\\n"""		600052	0					
ANR	600088	Argument	err -> error_code		600052	2					
ANR	600089	PtrMemberAccess	err -> error_code		600052	0					
ANR	600090	Identifier	err		600052	0					
ANR	600091	Identifier	error_code		600052	1					
ANR	600092	Argument	msg		600052	3					
ANR	600093	Identifier	msg		600052	0					
ANR	600094	ExpressionStatement	"longjmp ( jmp , 0 )"	82:1:2317:2332	600052	4	True				
ANR	600095	CallExpression	"longjmp ( jmp , 0 )"		600052	0					
ANR	600096	Callee	longjmp		600052	0					
ANR	600097	Identifier	longjmp		600052	0					
ANR	600098	ArgumentList	jmp		600052	1					
ANR	600099	Argument	jmp		600052	0					
ANR	600100	Identifier	jmp		600052	0					
ANR	600101	Argument	0		600052	1					
ANR	600102	PrimaryExpression	0		600052	0					
ANR	600103	ReturnStatement	return 0 ;	83:1:2335:2343	600052	5	True				
ANR	600104	PrimaryExpression	0		600052	0					
ANR	600105	ReturnType	static int		600052	1					
ANR	600106	Identifier	CatchIOFalseAlarm		600052	2					
ANR	600107	ParameterList	"Display * display , XErrorEvent * err"		600052	3					
ANR	600108	Parameter	Display * display	74:18:2110:2125	600052	0	True				
ANR	600109	ParameterType	Display *		600052	0					
ANR	600110	Identifier	display		600052	1					
ANR	600111	Parameter	XErrorEvent * err	74:36:2128:2143	600052	1	True				
ANR	600112	ParameterType	XErrorEvent *		600052	0					
ANR	600113	Identifier	err		600052	1					
ANR	600114	CFGEntryNode	ENTRY		600052		True				
ANR	600115	CFGExitNode	EXIT		600052		True				
ANR	600116	Symbol	msg		600052						
ANR	600117	Symbol	* err		600052						
ANR	600118	Symbol	err -> error_code		600052						
ANR	600119	Symbol	err		600052						
ANR	600120	Symbol	display		600052						
ANR	600121	Symbol	false		600052						
ANR	600122	Symbol	D_FULLDEBUG		600052						
ANR	600123	Symbol	jmp		600052						
ANR	600124	Symbol	g_connected		600052						
ANR	600125	Function	XInterface :: NextEntry	89:0:2477:3372							
ANR	600126	FunctionDef	XInterface :: NextEntry ()		600125	0					
ANR	600127	CompoundStatement		91:0:2505:3372	600125	0					
ANR	600128	IdentifierDeclStatement	char * tmp ;	92:1:2508:2517	600125	0	True				
ANR	600129	IdentifierDecl	* tmp		600125	0					
ANR	600130	IdentifierDeclType	char *		600125	0					
ANR	600131	Identifier	tmp		600125	1					
ANR	600132	Statement	static	93:1:2520:2525	600125	1	True				
ANR	600133	IdentifierDeclStatement	int slot = 0 ;	93:8:2527:2539	600125	2	True				
ANR	600134	IdentifierDecl	slot = 0		600125	0					
ANR	600135	IdentifierDeclType	int		600125	0					
ANR	600136	Identifier	slot		600125	1					
ANR	600137	AssignmentExpression	slot = 0		600125	2		=			
ANR	600138	Identifier	slot		600125	0					
ANR	600139	PrimaryExpression	0		600125	1					
ANR	600140	IfStatement	if ( ! _tried_root )		600125	3					
ANR	600141	Condition	! _tried_root	95:4:2547:2558	600125	0	True				
ANR	600142	UnaryOperationExpression	! _tried_root		600125	0					
ANR	600143	UnaryOperator	!		600125	0					
ANR	600144	Identifier	_tried_root		600125	1					
ANR	600145	CompoundStatement		6:1:56:56	600125	1					
ANR	600146	ExpressionStatement	"TryUser ( ""root"" )"	97:2:2566:2581	600125	0	True				
ANR	600147	CallExpression	"TryUser ( ""root"" )"		600125	0					
ANR	600148	Callee	TryUser		600125	0					
ANR	600149	Identifier	TryUser		600125	0					
ANR	600150	ArgumentList	"""root"""		600125	1					
ANR	600151	Argument	"""root"""		600125	0					
ANR	600152	PrimaryExpression	"""root"""		600125	0					
ANR	600153	ExpressionStatement	_tried_root = true	98:2:2585:2603	600125	1	True				
ANR	600154	AssignmentExpression	_tried_root = true		600125	0		=			
ANR	600155	Identifier	_tried_root		600125	0					
ANR	600156	Identifier	true		600125	1					
ANR	600157	ElseStatement	else		600125	0					
ANR	600158	IfStatement	if ( ! _tried_utmp )		600125	0					
ANR	600159	Condition	! _tried_utmp	100:9:2617:2628	600125	0	True				
ANR	600160	UnaryOperationExpression	! _tried_utmp		600125	0					
ANR	600161	UnaryOperator	!		600125	0					
ANR	600162	Identifier	_tried_utmp		600125	1					
ANR	600163	CompoundStatement		11:1:126:126	600125	1					
ANR	600164	IfStatement	if ( slot > logged_on_users -> getlast ( ) )		600125	0					
ANR	600165	Condition	slot > logged_on_users -> getlast ( )	102:7:2641:2673	600125	0	True				
ANR	600166	RelationalExpression	slot > logged_on_users -> getlast ( )		600125	0		>			
ANR	600167	Identifier	slot		600125	0					
ANR	600168	CallExpression	logged_on_users -> getlast ( )		600125	1					
ANR	600169	Callee	logged_on_users -> getlast		600125	0					
ANR	600170	PtrMemberAccess	logged_on_users -> getlast		600125	0					
ANR	600171	Identifier	logged_on_users		600125	0					
ANR	600172	Identifier	getlast		600125	1					
ANR	600173	ArgumentList			600125	1					
ANR	600174	CompoundStatement		12:43:171:171	600125	1					
ANR	600175	ExpressionStatement	_tried_utmp = true	103:3:2682:2700	600125	0	True				
ANR	600176	AssignmentExpression	_tried_utmp = true		600125	0		=			
ANR	600177	Identifier	_tried_utmp		600125	0					
ANR	600178	Identifier	true		600125	1					
ANR	600179	ExpressionStatement	slot = 0	104:3:2705:2713	600125	1	True				
ANR	600180	AssignmentExpression	slot = 0		600125	0		=			
ANR	600181	Identifier	slot		600125	0					
ANR	600182	PrimaryExpression	0		600125	1					
ANR	600183	Statement	dprintf	106:3:2808:2814	600125	2	True				
ANR	600184	Statement	(	106:10:2815:2815	600125	3	True				
ANR	600185	Statement	D_FULLDEBUG	106:11:2816:2826	600125	4	True				
ANR	600186	Statement	","	106:22:2827:2827	600125	5	True				
ANR	600187	Statement	"""Tryed all utmp users, """	106:24:2829:2852	600125	6	True				
ANR	600188	Statement	"""now moving to XAUTHORITY_USERS param.\\n"""	107:4:2858:2898	600125	7	True				
ANR	600189	Statement	)	107:45:2899:2899	600125	8	True				
ANR	600190	ExpressionStatement		107:46:2900:2900	600125	9	True				
ANR	600191	ReturnStatement	return 0 ;	108:3:2905:2913	600125	10	True				
ANR	600192	PrimaryExpression	0		600125	0					
ANR	600193	ExpressionStatement	TryUser ( ( * logged_on_users ) [ slot ] )	111:2:2943:2976	600125	1	True				
ANR	600194	CallExpression	TryUser ( ( * logged_on_users ) [ slot ] )		600125	0					
ANR	600195	Callee	TryUser		600125	0					
ANR	600196	Identifier	TryUser		600125	0					
ANR	600197	ArgumentList	( * logged_on_users ) [ slot ]		600125	1					
ANR	600198	Argument	( * logged_on_users ) [ slot ]		600125	0					
ANR	600199	ArrayIndexing	( * logged_on_users ) [ slot ]		600125	0					
ANR	600200	UnaryOperationExpression	* logged_on_users		600125	0					
ANR	600201	UnaryOperator	*		600125	0					
ANR	600202	Identifier	logged_on_users		600125	1					
ANR	600203	Identifier	slot		600125	1					
ANR	600204	ExpressionStatement	slot ++	112:2:2980:2986	600125	2	True				
ANR	600205	PostIncDecOperationExpression	slot ++		600125	0					
ANR	600206	Identifier	slot		600125	0					
ANR	600207	IncDec	++		600125	1					
ANR	600208	ElseStatement	else		600125	0					
ANR	600209	CompoundStatement		25:1:511:511	600125	0					
ANR	600210	IfStatement	if ( _xauth_users == NULL )		600125	0					
ANR	600211	Condition	_xauth_users == NULL	116:5:3024:3043	600125	0	True				
ANR	600212	EqualityExpression	_xauth_users == NULL		600125	0		==			
ANR	600213	Identifier	_xauth_users		600125	0					
ANR	600214	Identifier	NULL		600125	1					
ANR	600215	CompoundStatement		27:2:542:542	600125	1					
ANR	600216	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""No XAUTHORITY_USERS specified.\\n"" )"	118:3:3053:3109	600125	0	True				
ANR	600217	CallExpression	"dprintf ( D_FULLDEBUG , ""No XAUTHORITY_USERS specified.\\n"" )"		600125	0					
ANR	600218	Callee	dprintf		600125	0					
ANR	600219	Identifier	dprintf		600125	0					
ANR	600220	ArgumentList	D_FULLDEBUG		600125	1					
ANR	600221	Argument	D_FULLDEBUG		600125	0					
ANR	600222	Identifier	D_FULLDEBUG		600125	0					
ANR	600223	Argument	"""No XAUTHORITY_USERS specified.\\n"""		600125	1					
ANR	600224	PrimaryExpression	"""No XAUTHORITY_USERS specified.\\n"""		600125	0					
ANR	600225	ReturnStatement	return - 1 ;	119:3:3114:3123	600125	1	True				
ANR	600226	UnaryOperationExpression	- 1		600125	0					
ANR	600227	UnaryOperator	-		600125	0					
ANR	600228	PrimaryExpression	1		600125	1					
ANR	600229	ElseStatement	else		600125	0					
ANR	600230	CompoundStatement		32:2:654:654	600125	0					
ANR	600231	IfStatement	if ( ( tmp = _xauth_users -> next ( ) ) )		600125	0					
ANR	600232	Condition	tmp = _xauth_users -> next ( )	123:6:3168:3195	600125	0	True				
ANR	600233	AssignmentExpression	tmp = _xauth_users -> next ( )		600125	0		=			
ANR	600234	Identifier	tmp		600125	0					
ANR	600235	CallExpression	_xauth_users -> next ( )		600125	1					
ANR	600236	Callee	_xauth_users -> next		600125	0					
ANR	600237	PtrMemberAccess	_xauth_users -> next		600125	0					
ANR	600238	Identifier	_xauth_users		600125	0					
ANR	600239	Identifier	next		600125	1					
ANR	600240	ArgumentList			600125	1					
ANR	600241	CompoundStatement		34:3:695:695	600125	1					
ANR	600242	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Will try XAUTHORITY_USER '%s'\\n"" , tmp )"	125:4:3207:3273	600125	0	True				
ANR	600243	CallExpression	"dprintf ( D_FULLDEBUG , ""Will try XAUTHORITY_USER '%s'\\n"" , tmp )"		600125	0					
ANR	600244	Callee	dprintf		600125	0					
ANR	600245	Identifier	dprintf		600125	0					
ANR	600246	ArgumentList	D_FULLDEBUG		600125	1					
ANR	600247	Argument	D_FULLDEBUG		600125	0					
ANR	600248	Identifier	D_FULLDEBUG		600125	0					
ANR	600249	Argument	"""Will try XAUTHORITY_USER '%s'\\n"""		600125	1					
ANR	600250	PrimaryExpression	"""Will try XAUTHORITY_USER '%s'\\n"""		600125	0					
ANR	600251	Argument	tmp		600125	2					
ANR	600252	Identifier	tmp		600125	0					
ANR	600253	ExpressionStatement	TryUser ( tmp )	127:4:3279:3291	600125	1	True				
ANR	600254	CallExpression	TryUser ( tmp )		600125	0					
ANR	600255	Callee	TryUser		600125	0					
ANR	600256	Identifier	TryUser		600125	0					
ANR	600257	ArgumentList	tmp		600125	1					
ANR	600258	Argument	tmp		600125	0					
ANR	600259	Identifier	tmp		600125	0					
ANR	600260	ElseStatement	else		600125	0					
ANR	600261	CompoundStatement		40:3:803:803	600125	0					
ANR	600262	ReturnStatement	return - 1 ;	131:4:3315:3324	600125	0	True				
ANR	600263	UnaryOperationExpression	- 1		600125	0					
ANR	600264	UnaryOperator	-		600125	0					
ANR	600265	PrimaryExpression	1		600125	1					
ANR	600266	ReturnStatement	return 0 ;	135:1:3361:3369	600125	4	True				
ANR	600267	PrimaryExpression	0		600125	0					
ANR	600268	ReturnType	int		600125	1					
ANR	600269	Identifier	XInterface :: NextEntry		600125	2					
ANR	600270	ParameterList			600125	3					
ANR	600271	CFGEntryNode	ENTRY		600125		True				
ANR	600272	CFGExitNode	EXIT		600125		True				
ANR	600273	Symbol	* * logged_on_users		600125						
ANR	600274	Symbol	NULL		600125						
ANR	600275	Symbol	_xauth_users		600125						
ANR	600276	Symbol	* logged_on_users		600125						
ANR	600277	Symbol	logged_on_users		600125						
ANR	600278	Symbol	D_FULLDEBUG		600125						
ANR	600279	Symbol	slot		600125						
ANR	600280	Symbol	_tried_utmp		600125						
ANR	600281	Symbol	* slot		600125						
ANR	600282	Symbol	_xauth_users -> next		600125						
ANR	600283	Symbol	logged_on_users -> getlast		600125						
ANR	600284	Symbol	* _xauth_users		600125						
ANR	600285	Symbol	_tried_root		600125						
ANR	600286	Symbol	tmp		600125						
ANR	600287	Symbol	true		600125						
ANR	600288	Function	XInterface :: TryUser	138:0:3375:4061							
ANR	600289	FunctionDef	XInterface :: TryUser (const char * user)		600288	0					
ANR	600290	CompoundStatement		140:0:3418:4061	600288	0					
ANR	600291	Statement	static	141:1:3421:3426	600288	0	True				
ANR	600292	IdentifierDeclStatement	char env [ 1024 ] ;	141:8:3428:3442	600288	1	True				
ANR	600293	IdentifierDecl	env [ 1024 ]		600288	0					
ANR	600294	IdentifierDeclType	char [ 1024 ]		600288	0					
ANR	600295	Identifier	env		600288	1					
ANR	600296	PrimaryExpression	1024		600288	2					
ANR	600297	Statement	static	142:1:3445:3450	600288	2	True				
ANR	600298	IdentifierDeclStatement	bool need_uninit = false ;	142:8:3452:3476	600288	3	True				
ANR	600299	IdentifierDecl	need_uninit = false		600288	0					
ANR	600300	IdentifierDeclType	bool		600288	0					
ANR	600301	Identifier	need_uninit		600288	1					
ANR	600302	AssignmentExpression	need_uninit = false		600288	2		=			
ANR	600303	Identifier	false		600288	0					
ANR	600304	Identifier	false		600288	1					
ANR	600305	IdentifierDeclStatement	passwd * passwd_entry ;	143:1:3479:3499	600288	4	True				
ANR	600306	IdentifierDecl	* passwd_entry		600288	0					
ANR	600307	IdentifierDeclType	passwd *		600288	0					
ANR	600308	Identifier	passwd_entry		600288	1					
ANR	600309	ExpressionStatement	passwd_entry = getpwnam ( user )	145:1:3503:3532	600288	5	True				
ANR	600310	AssignmentExpression	passwd_entry = getpwnam ( user )		600288	0		=			
ANR	600311	Identifier	passwd_entry		600288	0					
ANR	600312	CallExpression	getpwnam ( user )		600288	1					
ANR	600313	Callee	getpwnam		600288	0					
ANR	600314	Identifier	getpwnam		600288	0					
ANR	600315	ArgumentList	user		600288	1					
ANR	600316	Argument	user		600288	0					
ANR	600317	Identifier	user		600288	0					
ANR	600318	IfStatement	if ( passwd_entry == NULL )		600288	6					
ANR	600319	Condition	passwd_entry == NULL	146:4:3538:3557	600288	0	True				
ANR	600320	EqualityExpression	passwd_entry == NULL		600288	0		==			
ANR	600321	Identifier	passwd_entry		600288	0					
ANR	600322	Identifier	NULL		600288	1					
ANR	600323	CompoundStatement		7:26:141:141	600288	1					
ANR	600324	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Current user cannot be found in passwd file.\\n"" )"	148:2:3623:3700	600288	0	True				
ANR	600325	CallExpression	"dprintf ( D_FULLDEBUG , ""Current user cannot be found in passwd file.\\n"" )"		600288	0					
ANR	600326	Callee	dprintf		600288	0					
ANR	600327	Identifier	dprintf		600288	0					
ANR	600328	ArgumentList	D_FULLDEBUG		600288	1					
ANR	600329	Argument	D_FULLDEBUG		600288	0					
ANR	600330	Identifier	D_FULLDEBUG		600288	0					
ANR	600331	Argument	"""Current user cannot be found in passwd file.\\n"""		600288	1					
ANR	600332	PrimaryExpression	"""Current user cannot be found in passwd file.\\n"""		600288	0					
ANR	600333	ReturnStatement	return ;	150:2:3704:3710	600288	1	True				
ANR	600334	ElseStatement	else		600288	0					
ANR	600335	CompoundStatement		12:8:301:301	600288	0					
ANR	600336	ExpressionStatement	fflush ( stdout )	152:2:3724:3738	600288	0	True				
ANR	600337	CallExpression	fflush ( stdout )		600288	0					
ANR	600338	Callee	fflush		600288	0					
ANR	600339	Identifier	fflush		600288	0					
ANR	600340	ArgumentList	stdout		600288	1					
ANR	600341	Argument	stdout		600288	0					
ANR	600342	Identifier	stdout		600288	0					
ANR	600343	ExpressionStatement	"sprintf ( env , ""XAUTHORITY=%s/.Xauthority"" , passwd_entry -> pw_dir )"	153:2:3742:3805	600288	1	True				
ANR	600344	CallExpression	"sprintf ( env , ""XAUTHORITY=%s/.Xauthority"" , passwd_entry -> pw_dir )"		600288	0					
ANR	600345	Callee	sprintf		600288	0					
ANR	600346	Identifier	sprintf		600288	0					
ANR	600347	ArgumentList	env		600288	1					
ANR	600348	Argument	env		600288	0					
ANR	600349	Identifier	env		600288	0					
ANR	600350	Argument	"""XAUTHORITY=%s/.Xauthority"""		600288	1					
ANR	600351	PrimaryExpression	"""XAUTHORITY=%s/.Xauthority"""		600288	0					
ANR	600352	Argument	passwd_entry -> pw_dir		600288	2					
ANR	600353	PtrMemberAccess	passwd_entry -> pw_dir		600288	0					
ANR	600354	Identifier	passwd_entry		600288	0					
ANR	600355	Identifier	pw_dir		600288	1					
ANR	600356	IfStatement	if ( putenv ( env ) != 0 )		600288	2					
ANR	600357	Condition	putenv ( env ) != 0	154:5:3812:3827	600288	0	True				
ANR	600358	EqualityExpression	putenv ( env ) != 0		600288	0		!=			
ANR	600359	CallExpression	putenv ( env )		600288	0					
ANR	600360	Callee	putenv		600288	0					
ANR	600361	Identifier	putenv		600288	0					
ANR	600362	ArgumentList	env		600288	1					
ANR	600363	Argument	env		600288	0					
ANR	600364	Identifier	env		600288	0					
ANR	600365	PrimaryExpression	0		600288	1					
ANR	600366	CompoundStatement		15:23:411:411	600288	1					
ANR	600367	ExpressionStatement	"EXCEPT ( ""Putenv failed!."" )"	155:3:3835:3860	600288	0	True				
ANR	600368	CallExpression	"EXCEPT ( ""Putenv failed!."" )"		600288	0					
ANR	600369	Callee	EXCEPT		600288	0					
ANR	600370	Identifier	EXCEPT		600288	0					
ANR	600371	ArgumentList	"""Putenv failed!."""		600288	1					
ANR	600372	Argument	"""Putenv failed!."""		600288	0					
ANR	600373	PrimaryExpression	"""Putenv failed!."""		600288	0					
ANR	600374	IfStatement	if ( need_uninit )		600288	3					
ANR	600375	Condition	need_uninit	158:6:3872:3882	600288	0	True				
ANR	600376	Identifier	need_uninit		600288	0					
ANR	600377	CompoundStatement		19:20:467:467	600288	1					
ANR	600378	ExpressionStatement	uninit_user_ids ( )	159:2:3890:3907	600288	0	True				
ANR	600379	CallExpression	uninit_user_ids ( )		600288	0					
ANR	600380	Callee	uninit_user_ids		600288	0					
ANR	600381	Identifier	uninit_user_ids		600288	0					
ANR	600382	ArgumentList			600288	1					
ANR	600383	ElseStatement	else		600288	0					
ANR	600384	CompoundStatement		21:8:498:498	600288	0					
ANR	600385	ExpressionStatement	need_uninit = true	161:2:3921:3939	600288	0	True				
ANR	600386	AssignmentExpression	need_uninit = true		600288	0		=			
ANR	600387	Identifier	need_uninit		600288	0					
ANR	600388	Identifier	true		600288	1					
ANR	600389	ExpressionStatement	"init_user_ids ( user , NULL )"	164:1:3946:3973	600288	4	True				
ANR	600390	CallExpression	"init_user_ids ( user , NULL )"		600288	0					
ANR	600391	Callee	init_user_ids		600288	0					
ANR	600392	Identifier	init_user_ids		600288	0					
ANR	600393	ArgumentList	user		600288	1					
ANR	600394	Argument	user		600288	0					
ANR	600395	Identifier	user		600288	0					
ANR	600396	Argument	NULL		600288	1					
ANR	600397	Identifier	NULL		600288	0					
ANR	600398	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Using %s's .Xauthority: \\n"" , passwd_entry -> pw_name )"	166:1:3977:4056	600288	5	True				
ANR	600399	CallExpression	"dprintf ( D_FULLDEBUG , ""Using %s's .Xauthority: \\n"" , passwd_entry -> pw_name )"		600288	0					
ANR	600400	Callee	dprintf		600288	0					
ANR	600401	Identifier	dprintf		600288	0					
ANR	600402	ArgumentList	D_FULLDEBUG		600288	1					
ANR	600403	Argument	D_FULLDEBUG		600288	0					
ANR	600404	Identifier	D_FULLDEBUG		600288	0					
ANR	600405	Argument	"""Using %s's .Xauthority: \\n"""		600288	1					
ANR	600406	PrimaryExpression	"""Using %s's .Xauthority: \\n"""		600288	0					
ANR	600407	Argument	passwd_entry -> pw_name		600288	2					
ANR	600408	PtrMemberAccess	passwd_entry -> pw_name		600288	0					
ANR	600409	Identifier	passwd_entry		600288	0					
ANR	600410	Identifier	pw_name		600288	1					
ANR	600411	ReturnType	void		600288	1					
ANR	600412	Identifier	XInterface :: TryUser		600288	2					
ANR	600413	ParameterList	const char * user		600288	3					
ANR	600414	Parameter	const char * user	139:20:3400:3415	600288	0	True				
ANR	600415	ParameterType	const char *		600288	0					
ANR	600416	Identifier	user		600288	1					
ANR	600417	CFGEntryNode	ENTRY		600288		True				
ANR	600418	CFGExitNode	EXIT		600288		True				
ANR	600419	Symbol	NULL		600288						
ANR	600420	Symbol	stdout		600288						
ANR	600421	Symbol	passwd_entry		600288						
ANR	600422	Symbol	false		600288						
ANR	600423	Symbol	D_FULLDEBUG		600288						
ANR	600424	Symbol	env		600288						
ANR	600425	Symbol	passwd_entry -> pw_name		600288						
ANR	600426	Symbol	need_uninit		600288						
ANR	600427	Symbol	true		600288						
ANR	600428	Symbol	passwd_entry -> pw_dir		600288						
ANR	600429	Symbol	putenv		600288						
ANR	600430	Symbol	user		600288						
ANR	600431	Symbol	* passwd_entry		600288						
ANR	600432	Symbol	getpwnam		600288						
ANR	600433	Function	XInterface :: XInterface	172:0:4066:4858							
ANR	600434	FunctionDef	XInterface :: XInterface (int id)		600433	0					
ANR	600435	CompoundStatement		173:0:4097:4858	600433	0					
ANR	600436	IdentifierDeclStatement	char * tmp ;	174:1:4100:4109	600433	0	True				
ANR	600437	IdentifierDecl	* tmp		600433	0					
ANR	600438	IdentifierDeclType	char *		600433	0					
ANR	600439	Identifier	tmp		600433	1					
ANR	600440	ExpressionStatement	_daemon_core_timer = id	175:1:4112:4135	600433	1	True				
ANR	600441	AssignmentExpression	_daemon_core_timer = id		600433	0		=			
ANR	600442	Identifier	_daemon_core_timer		600433	0					
ANR	600443	Identifier	id		600433	1					
ANR	600444	ExpressionStatement	logged_on_users = 0	176:1:4138:4157	600433	2	True				
ANR	600445	AssignmentExpression	logged_on_users = 0		600433	0		=			
ANR	600446	Identifier	logged_on_users		600433	0					
ANR	600447	PrimaryExpression	0		600433	1					
ANR	600448	ExpressionStatement	_display_name = NULL	177:1:4160:4180	600433	3	True				
ANR	600449	AssignmentExpression	_display_name = NULL		600433	0		=			
ANR	600450	Identifier	_display_name		600433	0					
ANR	600451	Identifier	NULL		600433	1					
ANR	600452	ExpressionStatement	set_root_priv ( )	182:1:4271:4286	600433	4	True				
ANR	600453	CallExpression	set_root_priv ( )		600433	0					
ANR	600454	Callee	set_root_priv		600433	0					
ANR	600455	Identifier	set_root_priv		600433	0					
ANR	600456	ArgumentList			600433	1					
ANR	600457	IfStatement	if ( geteuid ( ) != 0 )		600433	5					
ANR	600458	Condition	geteuid ( ) != 0	184:5:4295:4308	600433	0	True				
ANR	600459	EqualityExpression	geteuid ( ) != 0		600433	0		!=			
ANR	600460	CallExpression	geteuid ( )		600433	0					
ANR	600461	Callee	geteuid		600433	0					
ANR	600462	Identifier	geteuid		600433	0					
ANR	600463	ArgumentList			600433	1					
ANR	600464	PrimaryExpression	0		600433	1					
ANR	600465	CompoundStatement		12:22:214:214	600433	1					
ANR	600466	Statement	dprintf	185:2:4316:4322	600433	0	True				
ANR	600467	Statement	(	185:9:4323:4323	600433	1	True				
ANR	600468	Statement	D_FULLDEBUG	185:10:4324:4334	600433	2	True				
ANR	600469	Statement	","	185:21:4335:4335	600433	3	True				
ANR	600470	Statement	"""NOTE: Daemon can't use Xauthority if not"""	185:23:4337:4378	600433	4	True				
ANR	600471	Statement	""" running as root.\\n"""	186:4:4384:4404	600433	5	True				
ANR	600472	Statement	)	186:25:4405:4405	600433	6	True				
ANR	600473	ExpressionStatement		186:26:4406:4406	600433	7	True				
ANR	600474	ExpressionStatement	set_condor_priv ( )	189:1:4414:4431	600433	6	True				
ANR	600475	CallExpression	set_condor_priv ( )		600433	0					
ANR	600476	Callee	set_condor_priv		600433	0					
ANR	600477	Identifier	set_condor_priv		600433	0					
ANR	600478	ArgumentList			600433	1					
ANR	600479	ExpressionStatement	g_connected = false	191:1:4435:4454	600433	7	True				
ANR	600480	AssignmentExpression	g_connected = false		600433	0		=			
ANR	600481	Identifier	g_connected		600433	0					
ANR	600482	Identifier	false		600433	1					
ANR	600483	ExpressionStatement	"tmp = param ( ""XAUTHORITY_USERS"" )"	193:1:4458:4491	600433	8	True				
ANR	600484	AssignmentExpression	"tmp = param ( ""XAUTHORITY_USERS"" )"		600433	0		=			
ANR	600485	Identifier	tmp		600433	0					
ANR	600486	CallExpression	"param ( ""XAUTHORITY_USERS"" )"		600433	1					
ANR	600487	Callee	param		600433	0					
ANR	600488	Identifier	param		600433	0					
ANR	600489	ArgumentList	"""XAUTHORITY_USERS"""		600433	1					
ANR	600490	Argument	"""XAUTHORITY_USERS"""		600433	0					
ANR	600491	PrimaryExpression	"""XAUTHORITY_USERS"""		600433	0					
ANR	600492	IfStatement	if ( tmp != NULL )		600433	9					
ANR	600493	Condition	tmp != NULL	194:4:4497:4507	600433	0	True				
ANR	600494	EqualityExpression	tmp != NULL		600433	0		!=			
ANR	600495	Identifier	tmp		600433	0					
ANR	600496	Identifier	NULL		600433	1					
ANR	600497	CompoundStatement		22:17:412:412	600433	1					
ANR	600498	ExpressionStatement	_xauth_users = new StringList ( )	195:2:4514:4545	600433	0	True				
ANR	600499	AssignmentExpression	_xauth_users = new StringList ( )		600433	0		=			
ANR	600500	Identifier	_xauth_users		600433	0					
ANR	600501	UnaryExpression	new StringList ( )		600433	1					
ANR	600502	ExpressionStatement	_xauth_users -> initializeFromString ( tmp )	196:2:4549:4590	600433	1	True				
ANR	600503	CallExpression	_xauth_users -> initializeFromString ( tmp )		600433	0					
ANR	600504	Callee	_xauth_users -> initializeFromString		600433	0					
ANR	600505	PtrMemberAccess	_xauth_users -> initializeFromString		600433	0					
ANR	600506	Identifier	_xauth_users		600433	0					
ANR	600507	Identifier	initializeFromString		600433	1					
ANR	600508	ArgumentList	tmp		600433	1					
ANR	600509	Argument	tmp		600433	0					
ANR	600510	Identifier	tmp		600433	0					
ANR	600511	ExpressionStatement	free ( tmp )	197:2:4594:4605	600433	2	True				
ANR	600512	CallExpression	free ( tmp )		600433	0					
ANR	600513	Callee	free		600433	0					
ANR	600514	Identifier	free		600433	0					
ANR	600515	ArgumentList	tmp		600433	1					
ANR	600516	Argument	tmp		600433	0					
ANR	600517	Identifier	tmp		600433	0					
ANR	600518	ElseStatement	else		600433	0					
ANR	600519	CompoundStatement		26:8:517:517	600433	0					
ANR	600520	ExpressionStatement	_xauth_users = NULL	199:2:4619:4638	600433	0	True				
ANR	600521	AssignmentExpression	_xauth_users = NULL		600433	0		=			
ANR	600522	Identifier	_xauth_users		600433	0					
ANR	600523	Identifier	NULL		600433	1					
ANR	600524	ExpressionStatement	"_display_name = param ( ""X_CONSOLE_DISPLAY"" )"	202:1:4645:4689	600433	10	True				
ANR	600525	AssignmentExpression	"_display_name = param ( ""X_CONSOLE_DISPLAY"" )"		600433	0		=			
ANR	600526	Identifier	_display_name		600433	0					
ANR	600527	CallExpression	"param ( ""X_CONSOLE_DISPLAY"" )"		600433	1					
ANR	600528	Callee	param		600433	0					
ANR	600529	Identifier	param		600433	0					
ANR	600530	ArgumentList	"""X_CONSOLE_DISPLAY"""		600433	1					
ANR	600531	Argument	"""X_CONSOLE_DISPLAY"""		600433	0					
ANR	600532	PrimaryExpression	"""X_CONSOLE_DISPLAY"""		600433	0					
ANR	600533	IfStatement	if ( _display_name == NULL )		600433	11					
ANR	600534	Condition	_display_name == NULL	205:5:4768:4788	600433	0	True				
ANR	600535	EqualityExpression	_display_name == NULL		600433	0		==			
ANR	600536	Identifier	_display_name		600433	0					
ANR	600537	Identifier	NULL		600433	1					
ANR	600538	CompoundStatement		33:28:693:693	600433	1					
ANR	600539	ExpressionStatement	_display_name = strdup ( DEFAULT_DISPLAY_NAME )	206:3:4796:4840	600433	0	True				
ANR	600540	AssignmentExpression	_display_name = strdup ( DEFAULT_DISPLAY_NAME )		600433	0		=			
ANR	600541	Identifier	_display_name		600433	0					
ANR	600542	CallExpression	strdup ( DEFAULT_DISPLAY_NAME )		600433	1					
ANR	600543	Callee	strdup		600433	0					
ANR	600544	Identifier	strdup		600433	0					
ANR	600545	ArgumentList	DEFAULT_DISPLAY_NAME		600433	1					
ANR	600546	Argument	DEFAULT_DISPLAY_NAME		600433	0					
ANR	600547	Identifier	DEFAULT_DISPLAY_NAME		600433	0					
ANR	600548	ExpressionStatement	Connect ( )	209:1:4847:4856	600433	12	True				
ANR	600549	CallExpression	Connect ( )		600433	0					
ANR	600550	Callee	Connect		600433	0					
ANR	600551	Identifier	Connect		600433	0					
ANR	600552	ArgumentList			600433	1					
ANR	600553	Identifier	XInterface :: XInterface		600433	1					
ANR	600554	ParameterList	int id		600433	2					
ANR	600555	Parameter	int id	172:23:4089:4094	600433	0	True				
ANR	600556	ParameterType	int		600433	0					
ANR	600557	Identifier	id		600433	1					
ANR	600558	CFGEntryNode	ENTRY		600433		True				
ANR	600559	CFGExitNode	EXIT		600433		True				
ANR	600560	Symbol	NULL		600433						
ANR	600561	Symbol	_display_name		600433						
ANR	600562	Symbol	_xauth_users		600433						
ANR	600563	Symbol	_daemon_core_timer		600433						
ANR	600564	Symbol	false		600433						
ANR	600565	Symbol	logged_on_users		600433						
ANR	600566	Symbol	DEFAULT_DISPLAY_NAME		600433						
ANR	600567	Symbol	geteuid		600433						
ANR	600568	Symbol	g_connected		600433						
ANR	600569	Symbol	param		600433						
ANR	600570	Symbol	tmp		600433						
ANR	600571	Symbol	id		600433						
ANR	600572	Symbol	strdup		600433						
ANR	600573	Function	XInterface :: ~XInterface	212:0:4861:5160							
ANR	600574	FunctionDef	XInterface :: ~XInterface ()		600573	0					
ANR	600575	CompoundStatement		213:0:4887:5160	600573	0					
ANR	600576	IfStatement	if ( _xauth_users != NULL )		600573	0					
ANR	600577	Condition	_xauth_users != NULL	214:4:4893:4912	600573	0	True				
ANR	600578	EqualityExpression	_xauth_users != NULL		600573	0		!=			
ANR	600579	Identifier	_xauth_users		600573	0					
ANR	600580	Identifier	NULL		600573	1					
ANR	600581	CompoundStatement		2:26:27:27	600573	1					
ANR	600582	Statement	delete	215:2:4919:4924	600573	0	True				
ANR	600583	ExpressionStatement	_xauth_users	215:9:4926:4938	600573	1	True				
ANR	600584	Identifier	_xauth_users		600573	0					
ANR	600585	IfStatement	if ( _display_name != NULL )		600573	1					
ANR	600586	Condition	_display_name != NULL	218:4:4948:4968	600573	0	True				
ANR	600587	EqualityExpression	_display_name != NULL		600573	0		!=			
ANR	600588	Identifier	_display_name		600573	0					
ANR	600589	Identifier	NULL		600573	1					
ANR	600590	CompoundStatement		6:27:83:83	600573	1					
ANR	600591	ExpressionStatement	free ( _display_name )	219:3:4976:4995	600573	0	True				
ANR	600592	CallExpression	free ( _display_name )		600573	0					
ANR	600593	Callee	free		600573	0					
ANR	600594	Identifier	free		600573	0					
ANR	600595	ArgumentList	_display_name		600573	1					
ANR	600596	Argument	_display_name		600573	0					
ANR	600597	Identifier	_display_name		600573	0					
ANR	600598	IfStatement	if ( logged_on_users )		600573	2					
ANR	600599	Condition	logged_on_users	222:6:5007:5021	600573	0	True				
ANR	600600	Identifier	logged_on_users		600573	0					
ANR	600601	CompoundStatement		10:24:137:137	600573	1					
ANR	600602	ForStatement	for ( int foo = 0 ; foo <= logged_on_users -> getlast ( ) ; foo ++ )		600573	0					
ANR	600603	ForInit	int foo = 0 ;	223:7:5034:5044	600573	0	True				
ANR	600604	IdentifierDeclStatement	int foo = 0 ;		600573	0					
ANR	600605	IdentifierDecl	foo = 0		600573	0					
ANR	600606	IdentifierDeclType	int		600573	0					
ANR	600607	Identifier	foo		600573	1					
ANR	600608	AssignmentExpression	foo = 0		600573	2		=			
ANR	600609	Identifier	foo		600573	0					
ANR	600610	PrimaryExpression	0		600573	1					
ANR	600611	Condition	foo <= logged_on_users -> getlast ( )	223:19:5046:5078	600573	1	True				
ANR	600612	RelationalExpression	foo <= logged_on_users -> getlast ( )		600573	0		<=			
ANR	600613	Identifier	foo		600573	0					
ANR	600614	CallExpression	logged_on_users -> getlast ( )		600573	1					
ANR	600615	Callee	logged_on_users -> getlast		600573	0					
ANR	600616	PtrMemberAccess	logged_on_users -> getlast		600573	0					
ANR	600617	Identifier	logged_on_users		600573	0					
ANR	600618	Identifier	getlast		600573	1					
ANR	600619	ArgumentList			600573	1					
ANR	600620	PostIncDecOperationExpression	foo ++	223:54:5081:5085	600573	2	True				
ANR	600621	Identifier	foo		600573	0					
ANR	600622	IncDec	++		600573	1					
ANR	600623	CompoundStatement		11:61:200:200	600573	3					
ANR	600624	Statement	delete	224:3:5093:5098	600573	0	True				
ANR	600625	Statement	[	224:9:5099:5099	600573	1	True				
ANR	600626	Statement	]	224:10:5100:5100	600573	2	True				
ANR	600627	ExpressionStatement	( * logged_on_users ) [ foo ]	224:12:5102:5125	600573	3	True				
ANR	600628	ArrayIndexing	( * logged_on_users ) [ foo ]		600573	0					
ANR	600629	UnaryOperationExpression	* logged_on_users		600573	0					
ANR	600630	UnaryOperator	*		600573	0					
ANR	600631	Identifier	logged_on_users		600573	1					
ANR	600632	Identifier	foo		600573	1					
ANR	600633	Statement	delete	226:2:5133:5138	600573	1	True				
ANR	600634	ExpressionStatement	logged_on_users	226:9:5140:5155	600573	2	True				
ANR	600635	Identifier	logged_on_users		600573	0					
ANR	600636	Identifier	XInterface :: ~XInterface		600573	1					
ANR	600637	ParameterList			600573	2					
ANR	600638	CFGEntryNode	ENTRY		600573		True				
ANR	600639	CFGExitNode	EXIT		600573		True				
ANR	600640	Symbol	logged_on_users -> getlast		600573						
ANR	600641	Symbol	NULL		600573						
ANR	600642	Symbol	_xauth_users		600573						
ANR	600643	Symbol	_display_name		600573						
ANR	600644	Symbol	* logged_on_users		600573						
ANR	600645	Symbol	foo		600573						
ANR	600646	Symbol	logged_on_users		600573						
ANR	600647	Function	XInterface :: Connect	230:0:5163:8159							
ANR	600648	FunctionDef	XInterface :: Connect ()		600647	0					
ANR	600649	CompoundStatement		232:0:5190:8159	600647	0					
ANR	600650	IdentifierDeclStatement	int rtn ;	233:1:5193:5200	600647	0	True				
ANR	600651	IdentifierDecl	rtn		600647	0					
ANR	600652	IdentifierDeclType	int		600647	0					
ANR	600653	Identifier	rtn		600647	1					
ANR	600654	IdentifierDeclStatement	Window root ;	234:1:5203:5214	600647	1	True				
ANR	600655	IdentifierDecl	root		600647	0					
ANR	600656	IdentifierDeclType	Window		600647	0					
ANR	600657	Identifier	root		600647	1					
ANR	600658	IdentifierDeclStatement	int s ;	235:1:5217:5222	600647	2	True				
ANR	600659	IdentifierDecl	s		600647	0					
ANR	600660	IdentifierDeclType	int		600647	0					
ANR	600661	Identifier	s		600647	1					
ANR	600662	IdentifierDeclStatement	struct utmpx utmp_entry ;	238:1:5242:5265	600647	3	True				
ANR	600663	IdentifierDecl	utmp_entry		600647	0					
ANR	600664	IdentifierDeclType	struct utmpx		600647	0					
ANR	600665	Identifier	utmp_entry		600647	1					
ANR	600666	IfStatement	if ( logged_on_users )		600647	4					
ANR	600667	Condition	logged_on_users	243:6:5312:5326	600647	0	True				
ANR	600668	Identifier	logged_on_users		600647	0					
ANR	600669	CompoundStatement		12:24:139:139	600647	1					
ANR	600670	ForStatement	for ( int foo = 0 ; foo <= logged_on_users -> getlast ( ) ; foo ++ )		600647	0					
ANR	600671	ForInit	int foo = 0 ;	244:7:5339:5349	600647	0	True				
ANR	600672	IdentifierDeclStatement	int foo = 0 ;		600647	0					
ANR	600673	IdentifierDecl	foo = 0		600647	0					
ANR	600674	IdentifierDeclType	int		600647	0					
ANR	600675	Identifier	foo		600647	1					
ANR	600676	AssignmentExpression	foo = 0		600647	2		=			
ANR	600677	Identifier	foo		600647	0					
ANR	600678	PrimaryExpression	0		600647	1					
ANR	600679	Condition	foo <= logged_on_users -> getlast ( )	244:19:5351:5383	600647	1	True				
ANR	600680	RelationalExpression	foo <= logged_on_users -> getlast ( )		600647	0		<=			
ANR	600681	Identifier	foo		600647	0					
ANR	600682	CallExpression	logged_on_users -> getlast ( )		600647	1					
ANR	600683	Callee	logged_on_users -> getlast		600647	0					
ANR	600684	PtrMemberAccess	logged_on_users -> getlast		600647	0					
ANR	600685	Identifier	logged_on_users		600647	0					
ANR	600686	Identifier	getlast		600647	1					
ANR	600687	ArgumentList			600647	1					
ANR	600688	PostIncDecOperationExpression	foo ++	244:54:5386:5390	600647	2	True				
ANR	600689	Identifier	foo		600647	0					
ANR	600690	IncDec	++		600647	1					
ANR	600691	CompoundStatement		13:61:202:202	600647	3					
ANR	600692	Statement	delete	245:3:5398:5403	600647	0	True				
ANR	600693	Statement	[	245:9:5404:5404	600647	1	True				
ANR	600694	Statement	]	245:10:5405:5405	600647	2	True				
ANR	600695	ExpressionStatement	( * logged_on_users ) [ foo ]	245:12:5407:5430	600647	3	True				
ANR	600696	ArrayIndexing	( * logged_on_users ) [ foo ]		600647	0					
ANR	600697	UnaryOperationExpression	* logged_on_users		600647	0					
ANR	600698	UnaryOperator	*		600647	0					
ANR	600699	Identifier	logged_on_users		600647	1					
ANR	600700	Identifier	foo		600647	1					
ANR	600701	Statement	delete	247:2:5438:5443	600647	1	True				
ANR	600702	ExpressionStatement	logged_on_users	247:9:5445:5460	600647	2	True				
ANR	600703	Identifier	logged_on_users		600647	0					
ANR	600704	Statement	logged_on_users	250:1:5467:5481	600647	5	True				
ANR	600705	Statement	=	250:17:5483:5483	600647	6	True				
ANR	600706	Statement	new	250:19:5485:5487	600647	7	True				
ANR	600707	Statement	ExtArray	250:23:5489:5496	600647	8	True				
ANR	600708	Statement	<	250:31:5497:5497	600647	9	True				
ANR	600709	Statement	char	250:33:5499:5502	600647	10	True				
ANR	600710	Statement	*	250:38:5504:5504	600647	11	True				
ANR	600711	Statement	>	250:40:5506:5506	600647	12	True				
ANR	600712	ExpressionStatement		250:41:5507:5507	600647	13	True				
ANR	600713	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""XInterface::Connect\\n"" )"	253:1:5512:5557	600647	14	True				
ANR	600714	CallExpression	"dprintf ( D_FULLDEBUG , ""XInterface::Connect\\n"" )"		600647	0					
ANR	600715	Callee	dprintf		600647	0					
ANR	600716	Identifier	dprintf		600647	0					
ANR	600717	ArgumentList	D_FULLDEBUG		600647	1					
ANR	600718	Argument	D_FULLDEBUG		600647	0					
ANR	600719	Identifier	D_FULLDEBUG		600647	0					
ANR	600720	Argument	"""XInterface::Connect\\n"""		600647	1					
ANR	600721	PrimaryExpression	"""XInterface::Connect\\n"""		600647	0					
ANR	600722	IfStatement	"if ( ( utmp_fp = safe_fopen_wrapper ( UtmpName , ""r"" ) ) == NULL )"		600647	15					
ANR	600723	Condition	"( utmp_fp = safe_fopen_wrapper ( UtmpName , ""r"" ) ) == NULL"	255:5:5605:5654	600647	0	True				
ANR	600724	EqualityExpression	"( utmp_fp = safe_fopen_wrapper ( UtmpName , ""r"" ) ) == NULL"		600647	0		==			
ANR	600725	AssignmentExpression	"utmp_fp = safe_fopen_wrapper ( UtmpName , ""r"" )"		600647	0		=			
ANR	600726	Identifier	utmp_fp		600647	0					
ANR	600727	CallExpression	"safe_fopen_wrapper ( UtmpName , ""r"" )"		600647	1					
ANR	600728	Callee	safe_fopen_wrapper		600647	0					
ANR	600729	Identifier	safe_fopen_wrapper		600647	0					
ANR	600730	ArgumentList	UtmpName		600647	1					
ANR	600731	Argument	UtmpName		600647	0					
ANR	600732	Identifier	UtmpName		600647	0					
ANR	600733	Argument	"""r"""		600647	1					
ANR	600734	PrimaryExpression	"""r"""		600647	0					
ANR	600735	Identifier	NULL		600647	1					
ANR	600736	CompoundStatement		24:57:466:466	600647	1					
ANR	600737	IfStatement	"if ( ( utmp_fp = safe_fopen_wrapper ( AltUtmpName , ""r"" ) ) == NULL )"		600647	0					
ANR	600738	Condition	"( utmp_fp = safe_fopen_wrapper ( AltUtmpName , ""r"" ) ) == NULL"	256:6:5665:5717	600647	0	True				
ANR	600739	EqualityExpression	"( utmp_fp = safe_fopen_wrapper ( AltUtmpName , ""r"" ) ) == NULL"		600647	0		==			
ANR	600740	AssignmentExpression	"utmp_fp = safe_fopen_wrapper ( AltUtmpName , ""r"" )"		600647	0		=			
ANR	600741	Identifier	utmp_fp		600647	0					
ANR	600742	CallExpression	"safe_fopen_wrapper ( AltUtmpName , ""r"" )"		600647	1					
ANR	600743	Callee	safe_fopen_wrapper		600647	0					
ANR	600744	Identifier	safe_fopen_wrapper		600647	0					
ANR	600745	ArgumentList	AltUtmpName		600647	1					
ANR	600746	Argument	AltUtmpName		600647	0					
ANR	600747	Identifier	AltUtmpName		600647	0					
ANR	600748	Argument	"""r"""		600647	1					
ANR	600749	PrimaryExpression	"""r"""		600647	0					
ANR	600750	Identifier	NULL		600647	1					
ANR	600751	CompoundStatement		25:61:529:529	600647	1					
ANR	600752	ExpressionStatement	"EXCEPT ( ""fopen of \\""%s\\"" (and \\""%s\\"") failed!"" , UtmpName , AltUtmpName )"	257:3:5747:5820	600647	0	True				
ANR	600753	CallExpression	"EXCEPT ( ""fopen of \\""%s\\"" (and \\""%s\\"") failed!"" , UtmpName , AltUtmpName )"		600647	0					
ANR	600754	Callee	EXCEPT		600647	0					
ANR	600755	Identifier	EXCEPT		600647	0					
ANR	600756	ArgumentList	"""fopen of \\""%s\\"" (and \\""%s\\"") failed!"""		600647	1					
ANR	600757	Argument	"""fopen of \\""%s\\"" (and \\""%s\\"") failed!"""		600647	0					
ANR	600758	PrimaryExpression	"""fopen of \\""%s\\"" (and \\""%s\\"") failed!"""		600647	0					
ANR	600759	Argument	UtmpName		600647	1					
ANR	600760	Identifier	UtmpName		600647	0					
ANR	600761	Argument	AltUtmpName		600647	2					
ANR	600762	Identifier	AltUtmpName		600647	0					
ANR	600763	Statement	while	262:1:5918:5922	600647	16	True				
ANR	600764	Statement	(	262:6:5923:5923	600647	17	True				
ANR	600765	Statement	fread	262:7:5924:5928	600647	18	True				
ANR	600766	Statement	(	262:12:5929:5929	600647	19	True				
ANR	600767	Statement	(	262:13:5930:5930	600647	20	True				
ANR	600768	Statement	char	262:14:5931:5934	600647	21	True				
ANR	600769	Statement	*	262:19:5936:5936	600647	22	True				
ANR	600770	Statement	)	262:20:5937:5937	600647	23	True				
ANR	600771	Statement	&	262:21:5938:5938	600647	24	True				
ANR	600772	Statement	utmp_entry	262:22:5939:5948	600647	25	True				
ANR	600773	Statement	","	262:32:5949:5949	600647	26	True				
ANR	600774	Statement	sizeof	264:2:5968:5973	600647	27	True				
ANR	600775	Statement	(	264:8:5974:5974	600647	28	True				
ANR	600776	Statement	struct	264:10:5976:5981	600647	29	True				
ANR	600777	Statement	utmpx	264:17:5983:5987	600647	30	True				
ANR	600778	Statement	)	264:23:5989:5989	600647	31	True				
ANR	600779	Statement	","	264:24:5990:5990	600647	32	True				
ANR	600780	Statement	1	268:2:6032:6032	600647	33	True				
ANR	600781	Statement	","	268:3:6033:6033	600647	34	True				
ANR	600782	Statement	utmp_fp	268:5:6035:6041	600647	35	True				
ANR	600783	Statement	)	268:12:6042:6042	600647	36	True				
ANR	600784	Statement	)	268:13:6043:6043	600647	37	True				
ANR	600785	CompoundStatement		37:15:854:854	600647	38					
ANR	600786	IfStatement	if ( utmp_entry . ut_type == USER_PROCESS )		600647	0					
ANR	600787	Condition	utmp_entry . ut_type == USER_PROCESS	270:6:6054:6087	600647	0	True				
ANR	600788	EqualityExpression	utmp_entry . ut_type == USER_PROCESS		600647	0		==			
ANR	600789	MemberAccess	utmp_entry . ut_type		600647	0					
ANR	600790	Identifier	utmp_entry		600647	0					
ANR	600791	Identifier	ut_type		600647	1					
ANR	600792	Identifier	USER_PROCESS		600647	1					
ANR	600793	CompoundStatement		40:3:904:926	600647	1					
ANR	600794	IdentifierDeclStatement	bool _found_it = false ;	271:3:6095:6117	600647	0	True				
ANR	600795	IdentifierDecl	_found_it = false		600647	0					
ANR	600796	IdentifierDeclType	bool		600647	0					
ANR	600797	Identifier	_found_it		600647	1					
ANR	600798	AssignmentExpression	_found_it = false		600647	2		=			
ANR	600799	Identifier	false		600647	0					
ANR	600800	Identifier	false		600647	1					
ANR	600801	ForStatement	for ( int i = 0 ; ( i <= logged_on_users -> getlast ( ) ) && ( ! _found_it ) ; i ++ )		600647	1					
ANR	600802	ForInit	int i = 0 ;	272:8:6127:6134	600647	0	True				
ANR	600803	IdentifierDeclStatement	int i = 0 ;		600647	0					
ANR	600804	IdentifierDecl	i = 0		600647	0					
ANR	600805	IdentifierDeclType	int		600647	0					
ANR	600806	Identifier	i		600647	1					
ANR	600807	AssignmentExpression	i = 0		600647	2		=			
ANR	600808	Identifier	i		600647	0					
ANR	600809	PrimaryExpression	0		600647	1					
ANR	600810	Condition	( i <= logged_on_users -> getlast ( ) ) && ( ! _found_it )	272:17:6136:6183	600647	1	True				
ANR	600811	AndExpression	( i <= logged_on_users -> getlast ( ) ) && ( ! _found_it )		600647	0		&&			
ANR	600812	RelationalExpression	i <= logged_on_users -> getlast ( )		600647	0		<=			
ANR	600813	Identifier	i		600647	0					
ANR	600814	CallExpression	logged_on_users -> getlast ( )		600647	1					
ANR	600815	Callee	logged_on_users -> getlast		600647	0					
ANR	600816	PtrMemberAccess	logged_on_users -> getlast		600647	0					
ANR	600817	Identifier	logged_on_users		600647	0					
ANR	600818	Identifier	getlast		600647	1					
ANR	600819	ArgumentList			600647	1					
ANR	600820	UnaryOperationExpression	! _found_it		600647	1					
ANR	600821	UnaryOperator	!		600647	0					
ANR	600822	Identifier	_found_it		600647	1					
ANR	600823	PostIncDecOperationExpression	i ++	272:67:6186:6188	600647	2	True				
ANR	600824	Identifier	i		600647	0					
ANR	600825	IncDec	++		600647	1					
ANR	600826	CompoundStatement		41:72:1000:1000	600647	3					
ANR	600827	IfStatement	"if ( ! strcmp ( utmp_entry . ut_user , ( * logged_on_users ) [ i ] ) )"		600647	0					
ANR	600828	Condition	"! strcmp ( utmp_entry . ut_user , ( * logged_on_users ) [ i ] )"	273:8:6201:6250	600647	0	True				
ANR	600829	UnaryOperationExpression	"! strcmp ( utmp_entry . ut_user , ( * logged_on_users ) [ i ] )"		600647	0					
ANR	600830	UnaryOperator	!		600647	0					
ANR	600831	CallExpression	"strcmp ( utmp_entry . ut_user , ( * logged_on_users ) [ i ] )"		600647	1					
ANR	600832	Callee	strcmp		600647	0					
ANR	600833	Identifier	strcmp		600647	0					
ANR	600834	ArgumentList	utmp_entry . ut_user		600647	1					
ANR	600835	Argument	utmp_entry . ut_user		600647	0					
ANR	600836	MemberAccess	utmp_entry . ut_user		600647	0					
ANR	600837	Identifier	utmp_entry		600647	0					
ANR	600838	Identifier	ut_user		600647	1					
ANR	600839	Argument	( * logged_on_users ) [ i ]		600647	1					
ANR	600840	ArrayIndexing	( * logged_on_users ) [ i ]		600647	0					
ANR	600841	UnaryOperationExpression	* logged_on_users		600647	0					
ANR	600842	UnaryOperator	*		600647	0					
ANR	600843	Identifier	logged_on_users		600647	1					
ANR	600844	Identifier	i		600647	1					
ANR	600845	CompoundStatement		42:60:1062:1062	600647	1					
ANR	600846	ExpressionStatement	_found_it = true	274:5:6260:6276	600647	0	True				
ANR	600847	AssignmentExpression	_found_it = true		600647	0		=			
ANR	600848	Identifier	_found_it		600647	0					
ANR	600849	Identifier	true		600647	1					
ANR	600850	IfStatement	if ( ! _found_it )		600647	2					
ANR	600851	Condition	! _found_it	277:7:6296:6306	600647	0	True				
ANR	600852	UnaryOperationExpression	! _found_it		600647	0					
ANR	600853	UnaryOperator	!		600647	0					
ANR	600854	Identifier	_found_it		600647	1					
ANR	600855	CompoundStatement		46:20:1118:1118	600647	1					
ANR	600856	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""User %s is logged in.\\n"" , utmp_entry . ut_user )"	278:4:6315:6388	600647	0	True				
ANR	600857	CallExpression	"dprintf ( D_FULLDEBUG , ""User %s is logged in.\\n"" , utmp_entry . ut_user )"		600647	0					
ANR	600858	Callee	dprintf		600647	0					
ANR	600859	Identifier	dprintf		600647	0					
ANR	600860	ArgumentList	D_FULLDEBUG		600647	1					
ANR	600861	Argument	D_FULLDEBUG		600647	0					
ANR	600862	Identifier	D_FULLDEBUG		600647	0					
ANR	600863	Argument	"""User %s is logged in.\\n"""		600647	1					
ANR	600864	PrimaryExpression	"""User %s is logged in.\\n"""		600647	0					
ANR	600865	Argument	utmp_entry . ut_user		600647	2					
ANR	600866	MemberAccess	utmp_entry . ut_user		600647	0					
ANR	600867	Identifier	utmp_entry		600647	0					
ANR	600868	Identifier	ut_user		600647	1					
ANR	600869	ExpressionStatement	( * logged_on_users ) [ logged_on_users -> getlast ( ) + 1 ] = strnewp ( utmp_entry . ut_user )	280:4:6394:6479	600647	1	True				
ANR	600870	AssignmentExpression	( * logged_on_users ) [ logged_on_users -> getlast ( ) + 1 ] = strnewp ( utmp_entry . ut_user )		600647	0		=			
ANR	600871	ArrayIndexing	( * logged_on_users ) [ logged_on_users -> getlast ( ) + 1 ]		600647	0					
ANR	600872	UnaryOperationExpression	* logged_on_users		600647	0					
ANR	600873	UnaryOperator	*		600647	0					
ANR	600874	Identifier	logged_on_users		600647	1					
ANR	600875	AdditiveExpression	logged_on_users -> getlast ( ) + 1		600647	1		+			
ANR	600876	CallExpression	logged_on_users -> getlast ( )		600647	0					
ANR	600877	Callee	logged_on_users -> getlast		600647	0					
ANR	600878	PtrMemberAccess	logged_on_users -> getlast		600647	0					
ANR	600879	Identifier	logged_on_users		600647	0					
ANR	600880	Identifier	getlast		600647	1					
ANR	600881	ArgumentList			600647	1					
ANR	600882	PrimaryExpression	1		600647	1					
ANR	600883	CallExpression	strnewp ( utmp_entry . ut_user )		600647	1					
ANR	600884	Callee	strnewp		600647	0					
ANR	600885	Identifier	strnewp		600647	0					
ANR	600886	ArgumentList	utmp_entry . ut_user		600647	1					
ANR	600887	Argument	utmp_entry . ut_user		600647	0					
ANR	600888	MemberAccess	utmp_entry . ut_user		600647	0					
ANR	600889	Identifier	utmp_entry		600647	0					
ANR	600890	Identifier	ut_user		600647	1					
ANR	600891	IdentifierDeclStatement	int fclose_ret = fclose ( utmp_fp ) ;	285:1:6494:6528	600647	39	True				
ANR	600892	IdentifierDecl	fclose_ret = fclose ( utmp_fp )		600647	0					
ANR	600893	IdentifierDeclType	int		600647	0					
ANR	600894	Identifier	fclose_ret		600647	1					
ANR	600895	AssignmentExpression	fclose_ret = fclose ( utmp_fp )		600647	2		=			
ANR	600896	Identifier	fclose_ret		600647	0					
ANR	600897	CallExpression	fclose ( utmp_fp )		600647	1					
ANR	600898	Callee	fclose		600647	0					
ANR	600899	Identifier	fclose		600647	0					
ANR	600900	ArgumentList	utmp_fp		600647	1					
ANR	600901	Argument	utmp_fp		600647	0					
ANR	600902	Identifier	utmp_fp		600647	0					
ANR	600903	IfStatement	if ( fclose_ret )		600647	40					
ANR	600904	Condition	fclose_ret	286:6:6536:6545	600647	0	True				
ANR	600905	Identifier	fclose_ret		600647	0					
ANR	600906	CompoundStatement		55:19:1358:1358	600647	1					
ANR	600907	Statement	EXCEPT	287:2:6553:6558	600647	0	True				
ANR	600908	Statement	(	287:8:6559:6559	600647	1	True				
ANR	600909	Statement	"""fclose of \\""%s\\"" (or \\""%s\\"") failed!\\n"""	287:9:6560:6599	600647	2	True				
ANR	600910	Statement	"""This message brought to you by the fatal error %d"""	288:3:6604:6654	600647	3	True				
ANR	600911	Statement	","	288:54:6655:6655	600647	4	True				
ANR	600912	Statement	UtmpName	289:3:6660:6667	600647	5	True				
ANR	600913	Statement	","	289:11:6668:6668	600647	6	True				
ANR	600914	Statement	AltUtmpName	289:13:6670:6680	600647	7	True				
ANR	600915	Statement	","	289:24:6681:6681	600647	8	True				
ANR	600916	Statement	errno	289:26:6683:6687	600647	9	True				
ANR	600917	Statement	)	289:31:6688:6688	600647	10	True				
ANR	600918	ExpressionStatement		289:32:6689:6689	600647	11	True				
ANR	600919	ExpressionStatement	set_root_priv ( )	293:1:6697:6712	600647	41	True				
ANR	600920	CallExpression	set_root_priv ( )		600647	0					
ANR	600921	Callee	set_root_priv		600647	0					
ANR	600922	Identifier	set_root_priv		600647	0					
ANR	600923	ArgumentList			600647	1					
ANR	600924	ExpressionStatement	_tried_root = false	295:1:6716:6735	600647	42	True				
ANR	600925	AssignmentExpression	_tried_root = false		600647	0		=			
ANR	600926	Identifier	_tried_root		600647	0					
ANR	600927	Identifier	false		600647	1					
ANR	600928	ExpressionStatement	_tried_utmp = false	296:1:6738:6757	600647	43	True				
ANR	600929	AssignmentExpression	_tried_utmp = false		600647	0		=			
ANR	600930	Identifier	_tried_utmp		600647	0					
ANR	600931	Identifier	false		600647	1					
ANR	600932	IfStatement	if ( _xauth_users != NULL )		600647	44					
ANR	600933	Condition	_xauth_users != NULL	297:4:6763:6782	600647	0	True				
ANR	600934	EqualityExpression	_xauth_users != NULL		600647	0		!=			
ANR	600935	Identifier	_xauth_users		600647	0					
ANR	600936	Identifier	NULL		600647	1					
ANR	600937	CompoundStatement		66:26:1594:1594	600647	1					
ANR	600938	ExpressionStatement	_xauth_users -> rewind ( )	298:2:6789:6811	600647	0	True				
ANR	600939	CallExpression	_xauth_users -> rewind ( )		600647	0					
ANR	600940	Callee	_xauth_users -> rewind		600647	0					
ANR	600941	PtrMemberAccess	_xauth_users -> rewind		600647	0					
ANR	600942	Identifier	_xauth_users		600647	0					
ANR	600943	Identifier	rewind		600647	1					
ANR	600944	ArgumentList			600647	1					
ANR	600945	WhileStatement	while ( ! ( _display = XOpenDisplay ( _display_name ) ) )		600647	45					
ANR	600946	Condition	! ( _display = XOpenDisplay ( _display_name ) )	302:7:6825:6866	600647	0	True				
ANR	600947	UnaryOperationExpression	! ( _display = XOpenDisplay ( _display_name ) )		600647	0					
ANR	600948	UnaryOperator	!		600647	0					
ANR	600949	AssignmentExpression	_display = XOpenDisplay ( _display_name )		600647	1		=			
ANR	600950	Identifier	_display		600647	0					
ANR	600951	CallExpression	XOpenDisplay ( _display_name )		600647	1					
ANR	600952	Callee	XOpenDisplay		600647	0					
ANR	600953	Identifier	XOpenDisplay		600647	0					
ANR	600954	ArgumentList	_display_name		600647	1					
ANR	600955	Argument	_display_name		600647	0					
ANR	600956	Identifier	_display_name		600647	0					
ANR	600957	CompoundStatement		72:1:1679:1679	600647	1					
ANR	600958	ExpressionStatement	set_condor_priv ( )	304:2:6874:6891	600647	0	True				
ANR	600959	CallExpression	set_condor_priv ( )		600647	0					
ANR	600960	Callee	set_condor_priv		600647	0					
ANR	600961	Identifier	set_condor_priv		600647	0					
ANR	600962	ArgumentList			600647	1					
ANR	600963	ExpressionStatement	rtn = NextEntry ( )	306:2:6897:6914	600647	1	True				
ANR	600964	AssignmentExpression	rtn = NextEntry ( )		600647	0		=			
ANR	600965	Identifier	rtn		600647	0					
ANR	600966	CallExpression	NextEntry ( )		600647	1					
ANR	600967	Callee	NextEntry		600647	0					
ANR	600968	Identifier	NextEntry		600647	0					
ANR	600969	ArgumentList			600647	1					
ANR	600970	IfStatement	if ( rtn == - 1 )		600647	2					
ANR	600971	Condition	rtn == - 1	308:5:6922:6930	600647	0	True				
ANR	600972	EqualityExpression	rtn == - 1		600647	0		==			
ANR	600973	Identifier	rtn		600647	0					
ANR	600974	UnaryOperationExpression	- 1		600647	1					
ANR	600975	UnaryOperator	-		600647	0					
ANR	600976	PrimaryExpression	1		600647	1					
ANR	600977	CompoundStatement		78:2:1744:1744	600647	1					
ANR	600978	Statement	dprintf	310:3:6940:6946	600647	0	True				
ANR	600979	Statement	(	310:10:6947:6947	600647	1	True				
ANR	600980	Statement	D_FULLDEBUG	310:11:6948:6958	600647	2	True				
ANR	600981	Statement	","	310:22:6959:6959	600647	3	True				
ANR	600982	Statement	"""Exausted all possible attempts to """	310:24:6961:6996	600647	4	True				
ANR	600983	Statement	"""connect to X server, will try again in 60 seconds.\\n"""	311:4:7002:7055	600647	5	True				
ANR	600984	Statement	)	311:58:7056:7056	600647	6	True				
ANR	600985	ExpressionStatement		311:59:7057:7057	600647	7	True				
ANR	600986	ExpressionStatement	"daemonCore -> Reset_Timer ( _daemon_core_timer , 60 , 60 )"	312:3:7062:7115	600647	8	True				
ANR	600987	CallExpression	"daemonCore -> Reset_Timer ( _daemon_core_timer , 60 , 60 )"		600647	0					
ANR	600988	Callee	daemonCore -> Reset_Timer		600647	0					
ANR	600989	PtrMemberAccess	daemonCore -> Reset_Timer		600647	0					
ANR	600990	Identifier	daemonCore		600647	0					
ANR	600991	Identifier	Reset_Timer		600647	1					
ANR	600992	ArgumentList	_daemon_core_timer		600647	1					
ANR	600993	Argument	_daemon_core_timer		600647	0					
ANR	600994	Identifier	_daemon_core_timer		600647	0					
ANR	600995	Argument	60		600647	1					
ANR	600996	PrimaryExpression	60		600647	0					
ANR	600997	Argument	60		600647	2					
ANR	600998	PrimaryExpression	60		600647	0					
ANR	600999	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Reset timer: %d\\n"" , _daemon_core_timer )"	313:3:7120:7181	600647	9	True				
ANR	601000	CallExpression	"dprintf ( D_FULLDEBUG , ""Reset timer: %d\\n"" , _daemon_core_timer )"		600647	0					
ANR	601001	Callee	dprintf		600647	0					
ANR	601002	Identifier	dprintf		600647	0					
ANR	601003	ArgumentList	D_FULLDEBUG		600647	1					
ANR	601004	Argument	D_FULLDEBUG		600647	0					
ANR	601005	Identifier	D_FULLDEBUG		600647	0					
ANR	601006	Argument	"""Reset timer: %d\\n"""		600647	1					
ANR	601007	PrimaryExpression	"""Reset timer: %d\\n"""		600647	0					
ANR	601008	Argument	_daemon_core_timer		600647	2					
ANR	601009	Identifier	_daemon_core_timer		600647	0					
ANR	601010	ExpressionStatement	g_connected = false	315:3:7188:7207	600647	10	True				
ANR	601011	AssignmentExpression	g_connected = false		600647	0		=			
ANR	601012	Identifier	g_connected		600647	0					
ANR	601013	Identifier	false		600647	1					
ANR	601014	ExpressionStatement	set_condor_priv ( )	316:3:7212:7229	600647	11	True				
ANR	601015	CallExpression	set_condor_priv ( )		600647	0					
ANR	601016	Callee	set_condor_priv		600647	0					
ANR	601017	Identifier	set_condor_priv		600647	0					
ANR	601018	ArgumentList			600647	1					
ANR	601019	ReturnStatement	return false ;	317:3:7234:7246	600647	12	True				
ANR	601020	Identifier	false		600647	0					
ANR	601021	ExpressionStatement	set_user_priv ( )	321:2:7320:7335	600647	3	True				
ANR	601022	CallExpression	set_user_priv ( )		600647	0					
ANR	601023	Callee	set_user_priv		600647	0					
ANR	601024	Identifier	set_user_priv		600647	0					
ANR	601025	ArgumentList			600647	1					
ANR	601026	ExpressionStatement	"dprintf ( D_ALWAYS , ""Connected to X server: %s\\n"" , _display_name )"	324:1:7342:7405	600647	46	True				
ANR	601027	CallExpression	"dprintf ( D_ALWAYS , ""Connected to X server: %s\\n"" , _display_name )"		600647	0					
ANR	601028	Callee	dprintf		600647	0					
ANR	601029	Identifier	dprintf		600647	0					
ANR	601030	ArgumentList	D_ALWAYS		600647	1					
ANR	601031	Argument	D_ALWAYS		600647	0					
ANR	601032	Identifier	D_ALWAYS		600647	0					
ANR	601033	Argument	"""Connected to X server: %s\\n"""		600647	1					
ANR	601034	PrimaryExpression	"""Connected to X server: %s\\n"""		600647	0					
ANR	601035	Argument	_display_name		600647	2					
ANR	601036	Identifier	_display_name		600647	0					
ANR	601037	ExpressionStatement	g_connected = true	325:1:7408:7426	600647	47	True				
ANR	601038	AssignmentExpression	g_connected = true		600647	0		=			
ANR	601039	Identifier	g_connected		600647	0					
ANR	601040	Identifier	true		600647	1					
ANR	601041	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Reset timer: %d\\n"" , _daemon_core_timer )"	327:1:7430:7491	600647	48	True				
ANR	601042	CallExpression	"dprintf ( D_FULLDEBUG , ""Reset timer: %d\\n"" , _daemon_core_timer )"		600647	0					
ANR	601043	Callee	dprintf		600647	0					
ANR	601044	Identifier	dprintf		600647	0					
ANR	601045	ArgumentList	D_FULLDEBUG		600647	1					
ANR	601046	Argument	D_FULLDEBUG		600647	0					
ANR	601047	Identifier	D_FULLDEBUG		600647	0					
ANR	601048	Argument	"""Reset timer: %d\\n"""		600647	1					
ANR	601049	PrimaryExpression	"""Reset timer: %d\\n"""		600647	0					
ANR	601050	Argument	_daemon_core_timer		600647	2					
ANR	601051	Identifier	_daemon_core_timer		600647	0					
ANR	601052	ExpressionStatement	"daemonCore -> Reset_Timer ( _daemon_core_timer , 5 , 5 )"	328:1:7494:7545	600647	49	True				
ANR	601053	CallExpression	"daemonCore -> Reset_Timer ( _daemon_core_timer , 5 , 5 )"		600647	0					
ANR	601054	Callee	daemonCore -> Reset_Timer		600647	0					
ANR	601055	PtrMemberAccess	daemonCore -> Reset_Timer		600647	0					
ANR	601056	Identifier	daemonCore		600647	0					
ANR	601057	Identifier	Reset_Timer		600647	1					
ANR	601058	ArgumentList	_daemon_core_timer		600647	1					
ANR	601059	Argument	_daemon_core_timer		600647	0					
ANR	601060	Identifier	_daemon_core_timer		600647	0					
ANR	601061	Argument	5		600647	1					
ANR	601062	PrimaryExpression	5		600647	0					
ANR	601063	Argument	5		600647	2					
ANR	601064	PrimaryExpression	5		600647	0					
ANR	601065	ExpressionStatement	XSetErrorHandler ( ( XErrorHandler ) CatchFalseAlarm )	331:1:7613:7662	600647	50	True				
ANR	601066	CallExpression	XSetErrorHandler ( ( XErrorHandler ) CatchFalseAlarm )		600647	0					
ANR	601067	Callee	XSetErrorHandler		600647	0					
ANR	601068	Identifier	XSetErrorHandler		600647	0					
ANR	601069	ArgumentList	( XErrorHandler ) CatchFalseAlarm		600647	1					
ANR	601070	Argument	( XErrorHandler ) CatchFalseAlarm		600647	0					
ANR	601071	CastExpression	( XErrorHandler ) CatchFalseAlarm		600647	0					
ANR	601072	CastTarget	XErrorHandler		600647	0					
ANR	601073	Identifier	CatchFalseAlarm		600647	1					
ANR	601074	ExpressionStatement	XSetIOErrorHandler ( ( XIOErrorHandler ) CatchIOFalseAlarm )	332:1:7665:7720	600647	51	True				
ANR	601075	CallExpression	XSetIOErrorHandler ( ( XIOErrorHandler ) CatchIOFalseAlarm )		600647	0					
ANR	601076	Callee	XSetIOErrorHandler		600647	0					
ANR	601077	Identifier	XSetIOErrorHandler		600647	0					
ANR	601078	ArgumentList	( XIOErrorHandler ) CatchIOFalseAlarm		600647	1					
ANR	601079	Argument	( XIOErrorHandler ) CatchIOFalseAlarm		600647	0					
ANR	601080	CastExpression	( XIOErrorHandler ) CatchIOFalseAlarm		600647	0					
ANR	601081	CastTarget	XIOErrorHandler		600647	0					
ANR	601082	Identifier	CatchIOFalseAlarm		600647	1					
ANR	601083	ForStatement	for ( s = 0 ; s < ScreenCount ( _display ) ; s ++ )		600647	52					
ANR	601084	ForInit	s = 0 ;	335:5:7784:7789	600647	0	True				
ANR	601085	AssignmentExpression	s = 0		600647	0		=			
ANR	601086	Identifier	s		600647	0					
ANR	601087	PrimaryExpression	0		600647	1					
ANR	601088	Condition	s < ScreenCount ( _display )	335:12:7791:7815	600647	1	True				
ANR	601089	RelationalExpression	s < ScreenCount ( _display )		600647	0		<			
ANR	601090	Identifier	s		600647	0					
ANR	601091	CallExpression	ScreenCount ( _display )		600647	1					
ANR	601092	Callee	ScreenCount		600647	0					
ANR	601093	Identifier	ScreenCount		600647	0					
ANR	601094	ArgumentList	_display		600647	1					
ANR	601095	Argument	_display		600647	0					
ANR	601096	Identifier	_display		600647	0					
ANR	601097	PostIncDecOperationExpression	s ++	335:39:7818:7820	600647	2	True				
ANR	601098	Identifier	s		600647	0					
ANR	601099	IncDec	++		600647	1					
ANR	601100	CompoundStatement		105:1:2633:2633	600647	3					
ANR	601101	ExpressionStatement	"root = RootWindowOfScreen ( ScreenOfDisplay ( _display , s ) )"	337:2:7828:7883	600647	0	True				
ANR	601102	AssignmentExpression	"root = RootWindowOfScreen ( ScreenOfDisplay ( _display , s ) )"		600647	0		=			
ANR	601103	Identifier	root		600647	0					
ANR	601104	CallExpression	"RootWindowOfScreen ( ScreenOfDisplay ( _display , s ) )"		600647	1					
ANR	601105	Callee	RootWindowOfScreen		600647	0					
ANR	601106	Identifier	RootWindowOfScreen		600647	0					
ANR	601107	ArgumentList	"ScreenOfDisplay ( _display , s )"		600647	1					
ANR	601108	Argument	"ScreenOfDisplay ( _display , s )"		600647	0					
ANR	601109	CallExpression	"ScreenOfDisplay ( _display , s )"		600647	0					
ANR	601110	Callee	ScreenOfDisplay		600647	0					
ANR	601111	Identifier	ScreenOfDisplay		600647	0					
ANR	601112	ArgumentList	_display		600647	1					
ANR	601113	Argument	_display		600647	0					
ANR	601114	Identifier	_display		600647	0					
ANR	601115	Argument	s		600647	1					
ANR	601116	Identifier	s		600647	0					
ANR	601117	ExpressionStatement	SelectEvents ( root )	338:2:7887:7905	600647	1	True				
ANR	601118	CallExpression	SelectEvents ( root )		600647	0					
ANR	601119	Callee	SelectEvents		600647	0					
ANR	601120	Identifier	SelectEvents		600647	0					
ANR	601121	ArgumentList	root		600647	1					
ANR	601122	Argument	root		600647	0					
ANR	601123	Identifier	root		600647	0					
ANR	601124	ExpressionStatement	_pointer_root = DefaultRootWindow ( _display )	342:1:7937:7980	600647	53	True				
ANR	601125	AssignmentExpression	_pointer_root = DefaultRootWindow ( _display )		600647	0		=			
ANR	601126	Identifier	_pointer_root		600647	0					
ANR	601127	CallExpression	DefaultRootWindow ( _display )		600647	1					
ANR	601128	Callee	DefaultRootWindow		600647	0					
ANR	601129	Identifier	DefaultRootWindow		600647	0					
ANR	601130	ArgumentList	_display		600647	1					
ANR	601131	Argument	_display		600647	0					
ANR	601132	Identifier	_display		600647	0					
ANR	601133	ExpressionStatement	"_pointer_screen = ScreenOfDisplay ( _display , DefaultScreen ( _display ) )"	343:1:7983:8051	600647	54	True				
ANR	601134	AssignmentExpression	"_pointer_screen = ScreenOfDisplay ( _display , DefaultScreen ( _display ) )"		600647	0		=			
ANR	601135	Identifier	_pointer_screen		600647	0					
ANR	601136	CallExpression	"ScreenOfDisplay ( _display , DefaultScreen ( _display ) )"		600647	1					
ANR	601137	Callee	ScreenOfDisplay		600647	0					
ANR	601138	Identifier	ScreenOfDisplay		600647	0					
ANR	601139	ArgumentList	_display		600647	1					
ANR	601140	Argument	_display		600647	0					
ANR	601141	Identifier	_display		600647	0					
ANR	601142	Argument	DefaultScreen ( _display )		600647	1					
ANR	601143	CallExpression	DefaultScreen ( _display )		600647	0					
ANR	601144	Callee	DefaultScreen		600647	0					
ANR	601145	Identifier	DefaultScreen		600647	0					
ANR	601146	ArgumentList	_display		600647	1					
ANR	601147	Argument	_display		600647	0					
ANR	601148	Identifier	_display		600647	0					
ANR	601149	ExpressionStatement	_pointer_prev_x = - 1	344:1:8054:8074	600647	55	True				
ANR	601150	AssignmentExpression	_pointer_prev_x = - 1		600647	0		=			
ANR	601151	Identifier	_pointer_prev_x		600647	0					
ANR	601152	UnaryOperationExpression	- 1		600647	1					
ANR	601153	UnaryOperator	-		600647	0					
ANR	601154	PrimaryExpression	1		600647	1					
ANR	601155	ExpressionStatement	_pointer_prev_y = - 1	345:1:8077:8097	600647	56	True				
ANR	601156	AssignmentExpression	_pointer_prev_y = - 1		600647	0		=			
ANR	601157	Identifier	_pointer_prev_y		600647	0					
ANR	601158	UnaryOperationExpression	- 1		600647	1					
ANR	601159	UnaryOperator	-		600647	0					
ANR	601160	PrimaryExpression	1		600647	1					
ANR	601161	ExpressionStatement	_pointer_prev_mask = 0	346:1:8100:8122	600647	57	True				
ANR	601162	AssignmentExpression	_pointer_prev_mask = 0		600647	0		=			
ANR	601163	Identifier	_pointer_prev_mask		600647	0					
ANR	601164	PrimaryExpression	0		600647	1					
ANR	601165	ExpressionStatement	set_condor_priv ( )	348:1:8126:8143	600647	58	True				
ANR	601166	CallExpression	set_condor_priv ( )		600647	0					
ANR	601167	Callee	set_condor_priv		600647	0					
ANR	601168	Identifier	set_condor_priv		600647	0					
ANR	601169	ArgumentList			600647	1					
ANR	601170	ReturnStatement	return true ;	349:1:8146:8157	600647	59	True				
ANR	601171	Identifier	true		600647	0					
ANR	601172	ReturnType	bool		600647	1					
ANR	601173	Identifier	XInterface :: Connect		600647	2					
ANR	601174	ParameterList			600647	3					
ANR	601175	CFGEntryNode	ENTRY		600647		True				
ANR	601176	CFGExitNode	EXIT		600647		True				
ANR	601177	Symbol	* * logged_on_users		600647						
ANR	601178	Symbol	_pointer_screen		600647						
ANR	601179	Symbol	g_connected		600647						
ANR	601180	Symbol	NextEntry		600647						
ANR	601181	Symbol	CatchFalseAlarm		600647						
ANR	601182	Symbol	_pointer_prev_mask		600647						
ANR	601183	Symbol	* logged_on_users -> getlast		600647						
ANR	601184	Symbol	utmp_entry . ut_type		600647						
ANR	601185	Symbol	USER_PROCESS		600647						
ANR	601186	Symbol	strcmp		600647						
ANR	601187	Symbol	CatchIOFalseAlarm		600647						
ANR	601188	Symbol	NULL		600647						
ANR	601189	Symbol	AltUtmpName		600647						
ANR	601190	Symbol	_display_name		600647						
ANR	601191	Symbol	ScreenCount		600647						
ANR	601192	Symbol	D_FULLDEBUG		600647						
ANR	601193	Symbol	RootWindowOfScreen		600647						
ANR	601194	Symbol	UtmpName		600647						
ANR	601195	Symbol	logged_on_users -> getlast		600647						
ANR	601196	Symbol	fclose_ret		600647						
ANR	601197	Symbol	_found_it		600647						
ANR	601198	Symbol	_pointer_prev_x		600647						
ANR	601199	Symbol	_pointer_prev_y		600647						
ANR	601200	Symbol	_display		600647						
ANR	601201	Symbol	true		600647						
ANR	601202	Symbol	XOpenDisplay		600647						
ANR	601203	Symbol	foo		600647						
ANR	601204	Symbol	logged_on_users		600647						
ANR	601205	Symbol	_tried_utmp		600647						
ANR	601206	Symbol	root		600647						
ANR	601207	Symbol	daemonCore		600647						
ANR	601208	Symbol	DefaultScreen		600647						
ANR	601209	Symbol	strnewp		600647						
ANR	601210	Symbol	DefaultRootWindow		600647						
ANR	601211	Symbol	_pointer_root		600647						
ANR	601212	Symbol	safe_fopen_wrapper		600647						
ANR	601213	Symbol	_xauth_users		600647						
ANR	601214	Symbol	_daemon_core_timer		600647						
ANR	601215	Symbol	* logged_on_users		600647						
ANR	601216	Symbol	utmp_entry . ut_user		600647						
ANR	601217	Symbol	fclose		600647						
ANR	601218	Symbol	false		600647						
ANR	601219	Symbol	D_ALWAYS		600647						
ANR	601220	Symbol	i		600647						
ANR	601221	Symbol	ScreenOfDisplay		600647						
ANR	601222	Symbol	rtn		600647						
ANR	601223	Symbol	_tried_root		600647						
ANR	601224	Symbol	s		600647						
ANR	601225	Symbol	* i		600647						
ANR	601226	Symbol	utmp_fp		600647						
ANR	601227	Symbol	utmp_entry		600647						
ANR	601228	Function	XInterface :: CheckActivity	352:0:8162:8458							
ANR	601229	FunctionDef	XInterface :: CheckActivity ()		601228	0					
ANR	601230	CompoundStatement		354:0:8195:8458	601228	0					
ANR	601231	ExpressionStatement	setjmp ( jmp )	355:1:8198:8209	601228	0	True				
ANR	601232	CallExpression	setjmp ( jmp )		601228	0					
ANR	601233	Callee	setjmp		601228	0					
ANR	601234	Identifier	setjmp		601228	0					
ANR	601235	ArgumentList	jmp		601228	1					
ANR	601236	Argument	jmp		601228	0					
ANR	601237	Identifier	jmp		601228	0					
ANR	601238	IfStatement	if ( ! g_connected )		601228	1					
ANR	601239	Condition	! g_connected	356:4:8215:8226	601228	0	True				
ANR	601240	UnaryOperationExpression	! g_connected		601228	0					
ANR	601241	UnaryOperator	!		601228	0					
ANR	601242	Identifier	g_connected		601228	1					
ANR	601243	CompoundStatement		4:1:34:34	601228	1					
ANR	601244	IfStatement	if ( Connect ( ) == false )		601228	0					
ANR	601245	Condition	Connect ( ) == false	359:6:8291:8308	601228	0	True				
ANR	601246	EqualityExpression	Connect ( ) == false		601228	0		==			
ANR	601247	CallExpression	Connect ( )		601228	0					
ANR	601248	Callee	Connect		601228	0					
ANR	601249	Identifier	Connect		601228	0					
ANR	601250	ArgumentList			601228	1					
ANR	601251	Identifier	false		601228	1					
ANR	601252	CompoundStatement		7:2:118:118	601228	1					
ANR	601253	ReturnStatement	return false ;	361:3:8319:8331	601228	0	True				
ANR	601254	Identifier	false		601228	0					
ANR	601255	IfStatement	if ( ProcessEvents ( ) )		601228	2					
ANR	601256	Condition	ProcessEvents ( )	365:4:8346:8360	601228	0	True				
ANR	601257	CallExpression	ProcessEvents ( )		601228	0					
ANR	601258	Callee	ProcessEvents		601228	0					
ANR	601259	Identifier	ProcessEvents		601228	0					
ANR	601260	ArgumentList			601228	1					
ANR	601261	CompoundStatement		13:1:168:168	601228	1					
ANR	601262	ReturnStatement	return true ;	367:2:8368:8379	601228	0	True				
ANR	601263	Identifier	true		601228	0					
ANR	601264	ElseStatement	else		601228	0					
ANR	601265	IfStatement	if ( QueryPointer ( ) )		601228	0					
ANR	601266	Condition	QueryPointer ( )	369:9:8393:8406	601228	0	True				
ANR	601267	CallExpression	QueryPointer ( )		601228	0					
ANR	601268	Callee	QueryPointer		601228	0					
ANR	601269	Identifier	QueryPointer		601228	0					
ANR	601270	ArgumentList			601228	1					
ANR	601271	CompoundStatement		17:1:214:214	601228	1					
ANR	601272	ReturnStatement	return true ;	371:2:8414:8425	601228	0	True				
ANR	601273	Identifier	true		601228	0					
ANR	601274	ElseStatement	else		601228	0					
ANR	601275	CompoundStatement		21:1:241:241	601228	0					
ANR	601276	ReturnStatement	return false ;	375:2:8441:8453	601228	0	True				
ANR	601277	Identifier	false		601228	0					
ANR	601278	ReturnType	bool		601228	1					
ANR	601279	Identifier	XInterface :: CheckActivity		601228	2					
ANR	601280	ParameterList			601228	3					
ANR	601281	CFGEntryNode	ENTRY		601228		True				
ANR	601282	CFGExitNode	EXIT		601228		True				
ANR	601283	Symbol	QueryPointer		601228						
ANR	601284	Symbol	ProcessEvents		601228						
ANR	601285	Symbol	Connect		601228						
ANR	601286	Symbol	false		601228						
ANR	601287	Symbol	true		601228						
ANR	601288	Symbol	jmp		601228						
ANR	601289	Symbol	g_connected		601228						
ANR	601290	Function	XInterface :: ProcessEvents	380:0:8462:8968							
ANR	601291	FunctionDef	XInterface :: ProcessEvents ()		601290	0					
ANR	601292	CompoundStatement		382:0:8496:8968	601290	0					
ANR	601293	IdentifierDeclStatement	XEvent event ;	383:1:8499:8511	601290	0	True				
ANR	601294	IdentifierDecl	event		601290	0					
ANR	601295	IdentifierDeclType	XEvent		601290	0					
ANR	601296	Identifier	event		601290	1					
ANR	601297	WhileStatement	while ( XPending ( _display ) )		601290	1					
ANR	601298	Condition	XPending ( _display )	385:7:8522:8539	601290	0	True				
ANR	601299	CallExpression	XPending ( _display )		601290	0					
ANR	601300	Callee	XPending		601290	0					
ANR	601301	Identifier	XPending		601290	0					
ANR	601302	ArgumentList	_display		601290	1					
ANR	601303	Argument	_display		601290	0					
ANR	601304	Identifier	_display		601290	0					
ANR	601305	CompoundStatement		5:1:46:46	601290	1					
ANR	601306	IfStatement	"if ( XCheckMaskEvent ( _display , SubstructureNotifyMask , & event ) )"		601290	0					
ANR	601307	Condition	"XCheckMaskEvent ( _display , SubstructureNotifyMask , & event )"	387:5:8550:8606	601290	0	True				
ANR	601308	CallExpression	"XCheckMaskEvent ( _display , SubstructureNotifyMask , & event )"		601290	0					
ANR	601309	Callee	XCheckMaskEvent		601290	0					
ANR	601310	Identifier	XCheckMaskEvent		601290	0					
ANR	601311	ArgumentList	_display		601290	1					
ANR	601312	Argument	_display		601290	0					
ANR	601313	Identifier	_display		601290	0					
ANR	601314	Argument	SubstructureNotifyMask		601290	1					
ANR	601315	Identifier	SubstructureNotifyMask		601290	0					
ANR	601316	Argument	& event		601290	2					
ANR	601317	UnaryOperationExpression	& event		601290	0					
ANR	601318	UnaryOperator	&		601290	0					
ANR	601319	Identifier	event		601290	1					
ANR	601320	CompoundStatement		7:2:114:114	601290	1					
ANR	601321	IfStatement	if ( event . type == CreateNotify )		601290	0					
ANR	601322	Condition	event . type == CreateNotify	389:6:8619:8644	601290	0	True				
ANR	601323	EqualityExpression	event . type == CreateNotify		601290	0		==			
ANR	601324	MemberAccess	event . type		601290	0					
ANR	601325	Identifier	event		601290	0					
ANR	601326	Identifier	type		601290	1					
ANR	601327	Identifier	CreateNotify		601290	1					
ANR	601328	CompoundStatement		9:3:153:153	601290	1					
ANR	601329	ExpressionStatement	SelectEvents ( event . xcreatewindow . window )	391:3:8655:8695	601290	0	True				
ANR	601330	CallExpression	SelectEvents ( event . xcreatewindow . window )		601290	0					
ANR	601331	Callee	SelectEvents		601290	0					
ANR	601332	Identifier	SelectEvents		601290	0					
ANR	601333	ArgumentList	event . xcreatewindow . window		601290	1					
ANR	601334	Argument	event . xcreatewindow . window		601290	0					
ANR	601335	MemberAccess	event . xcreatewindow . window		601290	0					
ANR	601336	MemberAccess	event . xcreatewindow		601290	0					
ANR	601337	Identifier	event		601290	0					
ANR	601338	Identifier	xcreatewindow		601290	1					
ANR	601339	Identifier	window		601290	1					
ANR	601340	ElseStatement	else		601290	0					
ANR	601341	CompoundStatement		14:2:218:218	601290	0					
ANR	601342	ExpressionStatement	"XNextEvent ( _display , & event )"	396:3:8720:8748	601290	0	True				
ANR	601343	CallExpression	"XNextEvent ( _display , & event )"		601290	0					
ANR	601344	Callee	XNextEvent		601290	0					
ANR	601345	Identifier	XNextEvent		601290	0					
ANR	601346	ArgumentList	_display		601290	1					
ANR	601347	Argument	_display		601290	0					
ANR	601348	Identifier	_display		601290	0					
ANR	601349	Argument	& event		601290	1					
ANR	601350	UnaryOperationExpression	& event		601290	0					
ANR	601351	UnaryOperator	&		601290	0					
ANR	601352	Identifier	event		601290	1					
ANR	601353	IfStatement	if ( ( event . type == KeyPress || event . type == ButtonPress || event . type == ButtonRelease || event . type == MotionNotify ) && ! event . xany . send_event )		601290	2					
ANR	601354	Condition	( event . type == KeyPress || event . type == ButtonPress || event . type == ButtonRelease || event . type == MotionNotify ) && ! event . xany . send_event	399:5:8762:8906	601290	0	True				
ANR	601355	AndExpression	( event . type == KeyPress || event . type == ButtonPress || event . type == ButtonRelease || event . type == MotionNotify ) && ! event . xany . send_event		601290	0		&&			
ANR	601356	OrExpression	event . type == KeyPress || event . type == ButtonPress || event . type == ButtonRelease || event . type == MotionNotify		601290	0		||			
ANR	601357	EqualityExpression	event . type == KeyPress		601290	0		==			
ANR	601358	MemberAccess	event . type		601290	0					
ANR	601359	Identifier	event		601290	0					
ANR	601360	Identifier	type		601290	1					
ANR	601361	Identifier	KeyPress		601290	1					
ANR	601362	OrExpression	event . type == ButtonPress || event . type == ButtonRelease || event . type == MotionNotify		601290	1		||			
ANR	601363	EqualityExpression	event . type == ButtonPress		601290	0		==			
ANR	601364	MemberAccess	event . type		601290	0					
ANR	601365	Identifier	event		601290	0					
ANR	601366	Identifier	type		601290	1					
ANR	601367	Identifier	ButtonPress		601290	1					
ANR	601368	OrExpression	event . type == ButtonRelease || event . type == MotionNotify		601290	1		||			
ANR	601369	EqualityExpression	event . type == ButtonRelease		601290	0		==			
ANR	601370	MemberAccess	event . type		601290	0					
ANR	601371	Identifier	event		601290	0					
ANR	601372	Identifier	type		601290	1					
ANR	601373	Identifier	ButtonRelease		601290	1					
ANR	601374	EqualityExpression	event . type == MotionNotify		601290	1		==			
ANR	601375	MemberAccess	event . type		601290	0					
ANR	601376	Identifier	event		601290	0					
ANR	601377	Identifier	type		601290	1					
ANR	601378	Identifier	MotionNotify		601290	1					
ANR	601379	UnaryOperationExpression	! event . xany . send_event		601290	1					
ANR	601380	UnaryOperator	!		601290	0					
ANR	601381	MemberAccess	event . xany . send_event		601290	1					
ANR	601382	MemberAccess	event . xany		601290	0					
ANR	601383	Identifier	event		601290	0					
ANR	601384	Identifier	xany		601290	1					
ANR	601385	Identifier	send_event		601290	1					
ANR	601386	CompoundStatement		21:1:414:414	601290	1					
ANR	601387	ExpressionStatement	time ( & _last_event )	403:2:8915:8933	601290	0	True				
ANR	601388	CallExpression	time ( & _last_event )		601290	0					
ANR	601389	Callee	time		601290	0					
ANR	601390	Identifier	time		601290	0					
ANR	601391	ArgumentList	& _last_event		601290	1					
ANR	601392	Argument	& _last_event		601290	0					
ANR	601393	UnaryOperationExpression	& _last_event		601290	0					
ANR	601394	UnaryOperator	&		601290	0					
ANR	601395	Identifier	_last_event		601290	1					
ANR	601396	ReturnStatement	return true ;	404:2:8937:8948	601290	1	True				
ANR	601397	Identifier	true		601290	0					
ANR	601398	ReturnStatement	return false ;	406:1:8954:8966	601290	3	True				
ANR	601399	Identifier	false		601290	0					
ANR	601400	ReturnType	bool		601290	1					
ANR	601401	Identifier	XInterface :: ProcessEvents		601290	2					
ANR	601402	ParameterList			601290	3					
ANR	601403	CFGEntryNode	ENTRY		601290		True				
ANR	601404	CFGExitNode	EXIT		601290		True				
ANR	601405	Symbol	event . xcreatewindow . window		601290						
ANR	601406	Symbol	KeyPress		601290						
ANR	601407	Symbol	CreateNotify		601290						
ANR	601408	Symbol	XCheckMaskEvent		601290						
ANR	601409	Symbol	event . xany		601290						
ANR	601410	Symbol	ButtonPress		601290						
ANR	601411	Symbol	false		601290						
ANR	601412	Symbol	& event		601290						
ANR	601413	Symbol	XPending		601290						
ANR	601414	Symbol	event . xany . send_event		601290						
ANR	601415	Symbol	ButtonRelease		601290						
ANR	601416	Symbol	MotionNotify		601290						
ANR	601417	Symbol	SubstructureNotifyMask		601290						
ANR	601418	Symbol	event . xcreatewindow		601290						
ANR	601419	Symbol	_display		601290						
ANR	601420	Symbol	event . type		601290						
ANR	601421	Symbol	true		601290						
ANR	601422	Symbol	& _last_event		601290						
ANR	601423	Symbol	event		601290						
ANR	601424	Function	XInterface :: SelectEvents	410:0:8972:9819							
ANR	601425	FunctionDef	XInterface :: SelectEvents (Window win)		601424	0					
ANR	601426	CompoundStatement		412:0:9015:9819	601424	0					
ANR	601427	IdentifierDeclStatement	Window root ;	413:1:9018:9029	601424	0	True				
ANR	601428	IdentifierDecl	root		601424	0					
ANR	601429	IdentifierDeclType	Window		601424	0					
ANR	601430	Identifier	root		601424	1					
ANR	601431	IdentifierDeclStatement	Window parent ;	414:1:9032:9045	601424	1	True				
ANR	601432	IdentifierDecl	parent		601424	0					
ANR	601433	IdentifierDeclType	Window		601424	0					
ANR	601434	Identifier	parent		601424	1					
ANR	601435	IdentifierDeclStatement	Window * children ;	415:1:9048:9064	601424	2	True				
ANR	601436	IdentifierDecl	* children		601424	0					
ANR	601437	IdentifierDeclType	Window *		601424	0					
ANR	601438	Identifier	children		601424	1					
ANR	601439	IdentifierDeclStatement	unsigned int num_children = 0 ;	416:1:9067:9096	601424	3	True				
ANR	601440	IdentifierDecl	num_children = 0		601424	0					
ANR	601441	IdentifierDeclType	unsigned int		601424	0					
ANR	601442	Identifier	num_children		601424	1					
ANR	601443	AssignmentExpression	num_children = 0		601424	2		=			
ANR	601444	Identifier	num_children		601424	0					
ANR	601445	PrimaryExpression	0		601424	1					
ANR	601446	IdentifierDeclStatement	unsigned int i ;	417:1:9099:9113	601424	4	True				
ANR	601447	IdentifierDecl	i		601424	0					
ANR	601448	IdentifierDeclType	unsigned int		601424	0					
ANR	601449	Identifier	i		601424	1					
ANR	601450	IdentifierDeclStatement	XWindowAttributes attribs ;	418:1:9116:9141	601424	5	True				
ANR	601451	IdentifierDecl	attribs		601424	0					
ANR	601452	IdentifierDeclType	XWindowAttributes		601424	0					
ANR	601453	Identifier	attribs		601424	1					
ANR	601454	IfStatement	"if ( ! XQueryTree ( _display , win , & root , & parent , & children , & num_children ) )"		601424	6					
ANR	601455	Condition	"! XQueryTree ( _display , win , & root , & parent , & children , & num_children )"	420:4:9148:9215	601424	0	True				
ANR	601456	UnaryOperationExpression	"! XQueryTree ( _display , win , & root , & parent , & children , & num_children )"		601424	0					
ANR	601457	UnaryOperator	!		601424	0					
ANR	601458	CallExpression	"XQueryTree ( _display , win , & root , & parent , & children , & num_children )"		601424	1					
ANR	601459	Callee	XQueryTree		601424	0					
ANR	601460	Identifier	XQueryTree		601424	0					
ANR	601461	ArgumentList	_display		601424	1					
ANR	601462	Argument	_display		601424	0					
ANR	601463	Identifier	_display		601424	0					
ANR	601464	Argument	win		601424	1					
ANR	601465	Identifier	win		601424	0					
ANR	601466	Argument	& root		601424	2					
ANR	601467	UnaryOperationExpression	& root		601424	0					
ANR	601468	UnaryOperator	&		601424	0					
ANR	601469	Identifier	root		601424	1					
ANR	601470	Argument	& parent		601424	3					
ANR	601471	UnaryOperationExpression	& parent		601424	0					
ANR	601472	UnaryOperator	&		601424	0					
ANR	601473	Identifier	parent		601424	1					
ANR	601474	Argument	& children		601424	4					
ANR	601475	UnaryOperationExpression	& children		601424	0					
ANR	601476	UnaryOperator	&		601424	0					
ANR	601477	Identifier	children		601424	1					
ANR	601478	Argument	& num_children		601424	5					
ANR	601479	UnaryOperationExpression	& num_children		601424	0					
ANR	601480	UnaryOperator	&		601424	0					
ANR	601481	Identifier	num_children		601424	1					
ANR	601482	CompoundStatement		10:1:203:203	601424	1					
ANR	601483	ReturnStatement	return ;	422:2:9223:9229	601424	0	True				
ANR	601484	IfStatement	if ( parent == None )		601424	7					
ANR	601485	Condition	parent == None	425:4:9240:9253	601424	0	True				
ANR	601486	EqualityExpression	parent == None		601424	0		==			
ANR	601487	Identifier	parent		601424	0					
ANR	601488	Identifier	None		601424	1					
ANR	601489	CompoundStatement		15:1:285:285	601424	1					
ANR	601490	ExpressionStatement	attribs . all_event_masks = attribs . do_not_propagate_mask = KeyPressMask	427:2:9305:9379	601424	0	True				
ANR	601491	AssignmentExpression	attribs . all_event_masks = attribs . do_not_propagate_mask = KeyPressMask		601424	0		=			
ANR	601492	MemberAccess	attribs . all_event_masks		601424	0					
ANR	601493	Identifier	attribs		601424	0					
ANR	601494	Identifier	all_event_masks		601424	1					
ANR	601495	AssignmentExpression	attribs . do_not_propagate_mask = KeyPressMask		601424	1		=			
ANR	601496	MemberAccess	attribs . do_not_propagate_mask		601424	0					
ANR	601497	Identifier	attribs		601424	0					
ANR	601498	Identifier	do_not_propagate_mask		601424	1					
ANR	601499	Identifier	KeyPressMask		601424	1					
ANR	601500	ElseStatement	else		601424	0					
ANR	601501	IfStatement	"if ( XGetWindowAttributes ( _display , win , & attribs ) == 0 )"		601424	0					
ANR	601502	Condition	"XGetWindowAttributes ( _display , win , & attribs ) == 0"	430:9:9393:9442	601424	0	True				
ANR	601503	EqualityExpression	"XGetWindowAttributes ( _display , win , & attribs ) == 0"		601424	0		==			
ANR	601504	CallExpression	"XGetWindowAttributes ( _display , win , & attribs )"		601424	0					
ANR	601505	Callee	XGetWindowAttributes		601424	0					
ANR	601506	Identifier	XGetWindowAttributes		601424	0					
ANR	601507	ArgumentList	_display		601424	1					
ANR	601508	Argument	_display		601424	0					
ANR	601509	Identifier	_display		601424	0					
ANR	601510	Argument	win		601424	1					
ANR	601511	Identifier	win		601424	0					
ANR	601512	Argument	& attribs		601424	2					
ANR	601513	UnaryOperationExpression	& attribs		601424	0					
ANR	601514	UnaryOperator	&		601424	0					
ANR	601515	Identifier	attribs		601424	1					
ANR	601516	PrimaryExpression	0		601424	1					
ANR	601517	CompoundStatement		20:1:430:430	601424	1					
ANR	601518	ExpressionStatement	"dprintf ( D_ALWAYS , ""XGetWindowAttributes() failed.\\n"" )"	432:2:9450:9503	601424	0	True				
ANR	601519	CallExpression	"dprintf ( D_ALWAYS , ""XGetWindowAttributes() failed.\\n"" )"		601424	0					
ANR	601520	Callee	dprintf		601424	0					
ANR	601521	Identifier	dprintf		601424	0					
ANR	601522	ArgumentList	D_ALWAYS		601424	1					
ANR	601523	Argument	D_ALWAYS		601424	0					
ANR	601524	Identifier	D_ALWAYS		601424	0					
ANR	601525	Argument	"""XGetWindowAttributes() failed.\\n"""		601424	1					
ANR	601526	PrimaryExpression	"""XGetWindowAttributes() failed.\\n"""		601424	0					
ANR	601527	ReturnStatement	return ;	433:2:9507:9513	601424	1	True				
ANR	601528	ElseStatement	else		601424	0					
ANR	601529	CompoundStatement		25:1:509:509	601424	0					
ANR	601530	ExpressionStatement	"XSelectInput ( _display , win , SubstructureNotifyMask | ( ( attribs . all_event_masks | attribs . do_not_propagate_mask ) & KeyPressMask ) )"	437:2:9529:9670	601424	0	True				
ANR	601531	CallExpression	"XSelectInput ( _display , win , SubstructureNotifyMask | ( ( attribs . all_event_masks | attribs . do_not_propagate_mask ) & KeyPressMask ) )"		601424	0					
ANR	601532	Callee	XSelectInput		601424	0					
ANR	601533	Identifier	XSelectInput		601424	0					
ANR	601534	ArgumentList	_display		601424	1					
ANR	601535	Argument	_display		601424	0					
ANR	601536	Identifier	_display		601424	0					
ANR	601537	Argument	win		601424	1					
ANR	601538	Identifier	win		601424	0					
ANR	601539	Argument	SubstructureNotifyMask | ( ( attribs . all_event_masks | attribs . do_not_propagate_mask ) & KeyPressMask )		601424	2					
ANR	601540	InclusiveOrExpression	SubstructureNotifyMask | ( ( attribs . all_event_masks | attribs . do_not_propagate_mask ) & KeyPressMask )		601424	0		|			
ANR	601541	Identifier	SubstructureNotifyMask		601424	0					
ANR	601542	BitAndExpression	( attribs . all_event_masks | attribs . do_not_propagate_mask ) & KeyPressMask		601424	1		&			
ANR	601543	InclusiveOrExpression	attribs . all_event_masks | attribs . do_not_propagate_mask		601424	0		|			
ANR	601544	MemberAccess	attribs . all_event_masks		601424	0					
ANR	601545	Identifier	attribs		601424	0					
ANR	601546	Identifier	all_event_masks		601424	1					
ANR	601547	MemberAccess	attribs . do_not_propagate_mask		601424	1					
ANR	601548	Identifier	attribs		601424	0					
ANR	601549	Identifier	do_not_propagate_mask		601424	1					
ANR	601550	Identifier	KeyPressMask		601424	1					
ANR	601551	ForStatement	for ( i = 0 ; i < num_children ; i ++ )		601424	8					
ANR	601552	ForInit	i = 0 ;	444:5:9707:9712	601424	0	True				
ANR	601553	AssignmentExpression	i = 0		601424	0		=			
ANR	601554	Identifier	i		601424	0					
ANR	601555	PrimaryExpression	0		601424	1					
ANR	601556	Condition	i < num_children	444:12:9714:9729	601424	1	True				
ANR	601557	RelationalExpression	i < num_children		601424	0		<			
ANR	601558	Identifier	i		601424	0					
ANR	601559	Identifier	num_children		601424	1					
ANR	601560	PostIncDecOperationExpression	i ++	444:30:9732:9734	601424	2	True				
ANR	601561	Identifier	i		601424	0					
ANR	601562	IncDec	++		601424	1					
ANR	601563	CompoundStatement		34:1:722:722	601424	3					
ANR	601564	ExpressionStatement	SelectEvents ( children [ i ] )	446:2:9742:9767	601424	0	True				
ANR	601565	CallExpression	SelectEvents ( children [ i ] )		601424	0					
ANR	601566	Callee	SelectEvents		601424	0					
ANR	601567	Identifier	SelectEvents		601424	0					
ANR	601568	ArgumentList	children [ i ]		601424	1					
ANR	601569	Argument	children [ i ]		601424	0					
ANR	601570	ArrayIndexing	children [ i ]		601424	0					
ANR	601571	Identifier	children		601424	0					
ANR	601572	Identifier	i		601424	1					
ANR	601573	IfStatement	if ( num_children > 0 )		601424	9					
ANR	601574	Condition	num_children > 0	448:4:9776:9791	601424	0	True				
ANR	601575	RelationalExpression	num_children > 0		601424	0		>			
ANR	601576	Identifier	num_children		601424	0					
ANR	601577	PrimaryExpression	0		601424	1					
ANR	601578	CompoundStatement		38:1:779:779	601424	1					
ANR	601579	ExpressionStatement	XFree ( children )	450:2:9799:9814	601424	0	True				
ANR	601580	CallExpression	XFree ( children )		601424	0					
ANR	601581	Callee	XFree		601424	0					
ANR	601582	Identifier	XFree		601424	0					
ANR	601583	ArgumentList	children		601424	1					
ANR	601584	Argument	children		601424	0					
ANR	601585	Identifier	children		601424	0					
ANR	601586	ReturnType	void		601424	1					
ANR	601587	Identifier	XInterface :: SelectEvents		601424	2					
ANR	601588	ParameterList	Window win		601424	3					
ANR	601589	Parameter	Window win	411:25:9003:9012	601424	0	True				
ANR	601590	ParameterType	Window		601424	0					
ANR	601591	Identifier	win		601424	1					
ANR	601592	CFGEntryNode	ENTRY		601424		True				
ANR	601593	CFGExitNode	EXIT		601424		True				
ANR	601594	Symbol	KeyPressMask		601424						
ANR	601595	Symbol	attribs . all_event_masks		601424						
ANR	601596	Symbol	parent		601424						
ANR	601597	Symbol	& children		601424						
ANR	601598	Symbol	attribs . do_not_propagate_mask		601424						
ANR	601599	Symbol	D_ALWAYS		601424						
ANR	601600	Symbol	i		601424						
ANR	601601	Symbol	& root		601424						
ANR	601602	Symbol	& num_children		601424						
ANR	601603	Symbol	XGetWindowAttributes		601424						
ANR	601604	Symbol	attribs		601424						
ANR	601605	Symbol	XQueryTree		601424						
ANR	601606	Symbol	* children		601424						
ANR	601607	Symbol	* i		601424						
ANR	601608	Symbol	SubstructureNotifyMask		601424						
ANR	601609	Symbol	children		601424						
ANR	601610	Symbol	root		601424						
ANR	601611	Symbol	num_children		601424						
ANR	601612	Symbol	_display		601424						
ANR	601613	Symbol	& parent		601424						
ANR	601614	Symbol	& attribs		601424						
ANR	601615	Symbol	win		601424						
ANR	601616	Symbol	None		601424						
ANR	601617	Function	XInterface :: QueryPointer	454:0:9822:10759							
ANR	601618	FunctionDef	XInterface :: QueryPointer ()		601617	0					
ANR	601619	CompoundStatement		456:0:9854:10759	601617	0					
ANR	601620	IdentifierDeclStatement	Window dummy_win ;	457:1:9857:9873	601617	0	True				
ANR	601621	IdentifierDecl	dummy_win		601617	0					
ANR	601622	IdentifierDeclType	Window		601617	0					
ANR	601623	Identifier	dummy_win		601617	1					
ANR	601624	IdentifierDeclStatement	int dummy ;	458:1:9876:9885	601617	1	True				
ANR	601625	IdentifierDecl	dummy		601617	0					
ANR	601626	IdentifierDeclType	int		601617	0					
ANR	601627	Identifier	dummy		601617	1					
ANR	601628	IdentifierDeclStatement	unsigned int mask ;	459:1:9888:9905	601617	2	True				
ANR	601629	IdentifierDecl	mask		601617	0					
ANR	601630	IdentifierDeclType	unsigned int		601617	0					
ANR	601631	Identifier	mask		601617	1					
ANR	601632	IdentifierDeclStatement	int root_x ;	460:1:9908:9918	601617	3	True				
ANR	601633	IdentifierDecl	root_x		601617	0					
ANR	601634	IdentifierDeclType	int		601617	0					
ANR	601635	Identifier	root_x		601617	1					
ANR	601636	IdentifierDeclStatement	int root_y ;	461:1:9921:9931	601617	4	True				
ANR	601637	IdentifierDecl	root_y		601617	0					
ANR	601638	IdentifierDeclType	int		601617	0					
ANR	601639	Identifier	root_y		601617	1					
ANR	601640	IdentifierDeclStatement	int i ;	462:1:9934:9939	601617	5	True				
ANR	601641	IdentifierDecl	i		601617	0					
ANR	601642	IdentifierDeclType	int		601617	0					
ANR	601643	Identifier	i		601617	1					
ANR	601644	IdentifierDeclStatement	time_t now ;	463:1:9942:9952	601617	6	True				
ANR	601645	IdentifierDecl	now		601617	0					
ANR	601646	IdentifierDeclType	time_t		601617	0					
ANR	601647	Identifier	now		601617	1					
ANR	601648	IdentifierDeclStatement	bool found = false ;	464:1:9955:9973	601617	7	True				
ANR	601649	IdentifierDecl	found = false		601617	0					
ANR	601650	IdentifierDeclType	bool		601617	0					
ANR	601651	Identifier	found		601617	1					
ANR	601652	AssignmentExpression	found = false		601617	2		=			
ANR	601653	Identifier	false		601617	0					
ANR	601654	Identifier	false		601617	1					
ANR	601655	IfStatement	"if ( ! XQueryPointer ( _display , _pointer_root , & _pointer_root , & dummy_win , & root_x , & root_y , & dummy , & dummy , & mask ) )"		601617	8					
ANR	601656	Condition	"! XQueryPointer ( _display , _pointer_root , & _pointer_root , & dummy_win , & root_x , & root_y , & dummy , & dummy , & mask )"	466:4:9980:10093	601617	0	True				
ANR	601657	UnaryOperationExpression	"! XQueryPointer ( _display , _pointer_root , & _pointer_root , & dummy_win , & root_x , & root_y , & dummy , & dummy , & mask )"		601617	0					
ANR	601658	UnaryOperator	!		601617	0					
ANR	601659	CallExpression	"XQueryPointer ( _display , _pointer_root , & _pointer_root , & dummy_win , & root_x , & root_y , & dummy , & dummy , & mask )"		601617	1					
ANR	601660	Callee	XQueryPointer		601617	0					
ANR	601661	Identifier	XQueryPointer		601617	0					
ANR	601662	ArgumentList	_display		601617	1					
ANR	601663	Argument	_display		601617	0					
ANR	601664	Identifier	_display		601617	0					
ANR	601665	Argument	_pointer_root		601617	1					
ANR	601666	Identifier	_pointer_root		601617	0					
ANR	601667	Argument	& _pointer_root		601617	2					
ANR	601668	UnaryOperationExpression	& _pointer_root		601617	0					
ANR	601669	UnaryOperator	&		601617	0					
ANR	601670	Identifier	_pointer_root		601617	1					
ANR	601671	Argument	& dummy_win		601617	3					
ANR	601672	UnaryOperationExpression	& dummy_win		601617	0					
ANR	601673	UnaryOperator	&		601617	0					
ANR	601674	Identifier	dummy_win		601617	1					
ANR	601675	Argument	& root_x		601617	4					
ANR	601676	UnaryOperationExpression	& root_x		601617	0					
ANR	601677	UnaryOperator	&		601617	0					
ANR	601678	Identifier	root_x		601617	1					
ANR	601679	Argument	& root_y		601617	5					
ANR	601680	UnaryOperationExpression	& root_y		601617	0					
ANR	601681	UnaryOperator	&		601617	0					
ANR	601682	Identifier	root_y		601617	1					
ANR	601683	Argument	& dummy		601617	6					
ANR	601684	UnaryOperationExpression	& dummy		601617	0					
ANR	601685	UnaryOperator	&		601617	0					
ANR	601686	Identifier	dummy		601617	1					
ANR	601687	Argument	& dummy		601617	7					
ANR	601688	UnaryOperationExpression	& dummy		601617	0					
ANR	601689	UnaryOperator	&		601617	0					
ANR	601690	Identifier	dummy		601617	1					
ANR	601691	Argument	& mask		601617	8					
ANR	601692	UnaryOperationExpression	& mask		601617	0					
ANR	601693	UnaryOperator	&		601617	0					
ANR	601694	Identifier	mask		601617	1					
ANR	601695	CompoundStatement		13:1:242:242	601617	1					
ANR	601696	ForStatement	for ( i = 0 ; i < ScreenCount ( _display ) ; i ++ )		601617	0					
ANR	601697	ForInit	i = 0 ;	470:6:10145:10150	601617	0	True				
ANR	601698	AssignmentExpression	i = 0		601617	0		=			
ANR	601699	Identifier	i		601617	0					
ANR	601700	PrimaryExpression	0		601617	1					
ANR	601701	Condition	i < ScreenCount ( _display )	470:13:10152:10176	601617	1	True				
ANR	601702	RelationalExpression	i < ScreenCount ( _display )		601617	0		<			
ANR	601703	Identifier	i		601617	0					
ANR	601704	CallExpression	ScreenCount ( _display )		601617	1					
ANR	601705	Callee	ScreenCount		601617	0					
ANR	601706	Identifier	ScreenCount		601617	0					
ANR	601707	ArgumentList	_display		601617	1					
ANR	601708	Argument	_display		601617	0					
ANR	601709	Identifier	_display		601617	0					
ANR	601710	PostIncDecOperationExpression	i ++	470:40:10179:10181	601617	2	True				
ANR	601711	Identifier	i		601617	0					
ANR	601712	IncDec	++		601617	1					
ANR	601713	CompoundStatement		16:2:331:331	601617	3					
ANR	601714	IfStatement	"if ( _pointer_root == RootWindow ( _display , i ) )"		601617	0					
ANR	601715	Condition	"_pointer_root == RootWindow ( _display , i )"	472:6:10194:10233	601617	0	True				
ANR	601716	EqualityExpression	"_pointer_root == RootWindow ( _display , i )"		601617	0		==			
ANR	601717	Identifier	_pointer_root		601617	0					
ANR	601718	CallExpression	"RootWindow ( _display , i )"		601617	1					
ANR	601719	Callee	RootWindow		601617	0					
ANR	601720	Identifier	RootWindow		601617	0					
ANR	601721	ArgumentList	_display		601617	1					
ANR	601722	Argument	_display		601617	0					
ANR	601723	Identifier	_display		601617	0					
ANR	601724	Argument	i		601617	1					
ANR	601725	Identifier	i		601617	0					
ANR	601726	CompoundStatement		18:3:384:384	601617	1					
ANR	601727	ExpressionStatement	"_pointer_screen = ScreenOfDisplay ( _display , i )"	474:4:10245:10291	601617	0	True				
ANR	601728	AssignmentExpression	"_pointer_screen = ScreenOfDisplay ( _display , i )"		601617	0		=			
ANR	601729	Identifier	_pointer_screen		601617	0					
ANR	601730	CallExpression	"ScreenOfDisplay ( _display , i )"		601617	1					
ANR	601731	Callee	ScreenOfDisplay		601617	0					
ANR	601732	Identifier	ScreenOfDisplay		601617	0					
ANR	601733	ArgumentList	_display		601617	1					
ANR	601734	Argument	_display		601617	0					
ANR	601735	Identifier	_display		601617	0					
ANR	601736	Argument	i		601617	1					
ANR	601737	Identifier	i		601617	0					
ANR	601738	ExpressionStatement	found = true	475:4:10297:10309	601617	1	True				
ANR	601739	AssignmentExpression	found = true		601617	0		=			
ANR	601740	Identifier	found		601617	0					
ANR	601741	Identifier	true		601617	1					
ANR	601742	BreakStatement	break ;	476:4:10315:10320	601617	2	True				
ANR	601743	IfStatement	if ( ! found )		601617	1					
ANR	601744	Condition	! found	479:5:10336:10341	601617	0	True				
ANR	601745	UnaryOperationExpression	! found		601617	0					
ANR	601746	UnaryOperator	!		601617	0					
ANR	601747	Identifier	found		601617	1					
ANR	601748	CompoundStatement		25:2:491:491	601617	1					
ANR	601749	ExpressionStatement	"dprintf ( D_ALWAYS , ""Lost connection to X server.\\n"" )"	481:3:10351:10402	601617	0	True				
ANR	601750	CallExpression	"dprintf ( D_ALWAYS , ""Lost connection to X server.\\n"" )"		601617	0					
ANR	601751	Callee	dprintf		601617	0					
ANR	601752	Identifier	dprintf		601617	0					
ANR	601753	ArgumentList	D_ALWAYS		601617	1					
ANR	601754	Argument	D_ALWAYS		601617	0					
ANR	601755	Identifier	D_ALWAYS		601617	0					
ANR	601756	Argument	"""Lost connection to X server.\\n"""		601617	1					
ANR	601757	PrimaryExpression	"""Lost connection to X server.\\n"""		601617	0					
ANR	601758	ExpressionStatement	g_connected = false	482:3:10407:10426	601617	1	True				
ANR	601759	AssignmentExpression	g_connected = false		601617	0		=			
ANR	601760	Identifier	g_connected		601617	0					
ANR	601761	Identifier	false		601617	1					
ANR	601762	IfStatement	if ( root_x == _pointer_prev_x && root_y == _pointer_prev_y && mask == _pointer_prev_mask )		601617	9					
ANR	601763	Condition	root_x == _pointer_prev_x && root_y == _pointer_prev_y && mask == _pointer_prev_mask	486:4:10440:10528	601617	0	True				
ANR	601764	AndExpression	root_x == _pointer_prev_x && root_y == _pointer_prev_y && mask == _pointer_prev_mask		601617	0		&&			
ANR	601765	EqualityExpression	root_x == _pointer_prev_x		601617	0		==			
ANR	601766	Identifier	root_x		601617	0					
ANR	601767	Identifier	_pointer_prev_x		601617	1					
ANR	601768	AndExpression	root_y == _pointer_prev_y && mask == _pointer_prev_mask		601617	1		&&			
ANR	601769	EqualityExpression	root_y == _pointer_prev_y		601617	0		==			
ANR	601770	Identifier	root_y		601617	0					
ANR	601771	Identifier	_pointer_prev_y		601617	1					
ANR	601772	EqualityExpression	mask == _pointer_prev_mask		601617	1		==			
ANR	601773	Identifier	mask		601617	0					
ANR	601774	Identifier	_pointer_prev_mask		601617	1					
ANR	601775	CompoundStatement		33:1:677:677	601617	1					
ANR	601776	ReturnStatement	return false ;	490:2:10564:10576	601617	0	True				
ANR	601777	Identifier	false		601617	0					
ANR	601778	ElseStatement	else		601617	0					
ANR	601779	CompoundStatement		38:1:733:733	601617	0					
ANR	601780	ExpressionStatement	time ( & now )	495:2:10623:10633	601617	0	True				
ANR	601781	CallExpression	time ( & now )		601617	0					
ANR	601782	Callee	time		601617	0					
ANR	601783	Identifier	time		601617	0					
ANR	601784	ArgumentList	& now		601617	1					
ANR	601785	Argument	& now		601617	0					
ANR	601786	UnaryOperationExpression	& now		601617	0					
ANR	601787	UnaryOperator	&		601617	0					
ANR	601788	Identifier	now		601617	1					
ANR	601789	ExpressionStatement	_last_event = now	496:2:10637:10654	601617	1	True				
ANR	601790	AssignmentExpression	_last_event = now		601617	0		=			
ANR	601791	Identifier	_last_event		601617	0					
ANR	601792	Identifier	now		601617	1					
ANR	601793	ExpressionStatement	_pointer_prev_x = root_x	497:2:10658:10682	601617	2	True				
ANR	601794	AssignmentExpression	_pointer_prev_x = root_x		601617	0		=			
ANR	601795	Identifier	_pointer_prev_x		601617	0					
ANR	601796	Identifier	root_x		601617	1					
ANR	601797	ExpressionStatement	_pointer_prev_y = root_y	498:2:10686:10710	601617	3	True				
ANR	601798	AssignmentExpression	_pointer_prev_y = root_y		601617	0		=			
ANR	601799	Identifier	_pointer_prev_y		601617	0					
ANR	601800	Identifier	root_y		601617	1					
ANR	601801	ExpressionStatement	_pointer_prev_mask = mask	499:2:10714:10739	601617	4	True				
ANR	601802	AssignmentExpression	_pointer_prev_mask = mask		601617	0		=			
ANR	601803	Identifier	_pointer_prev_mask		601617	0					
ANR	601804	Identifier	mask		601617	1					
ANR	601805	ReturnStatement	return true ;	500:2:10743:10754	601617	5	True				
ANR	601806	Identifier	true		601617	0					
ANR	601807	ReturnType	bool		601617	1					
ANR	601808	Identifier	XInterface :: QueryPointer		601617	2					
ANR	601809	ParameterList			601617	3					
ANR	601810	CFGEntryNode	ENTRY		601617		True				
ANR	601811	CFGExitNode	EXIT		601617		True				
ANR	601812	Symbol	root_x		601617						
ANR	601813	Symbol	root_y		601617						
ANR	601814	Symbol	_pointer_screen		601617						
ANR	601815	Symbol	dummy_win		601617						
ANR	601816	Symbol	RootWindow		601617						
ANR	601817	Symbol	g_connected		601617						
ANR	601818	Symbol	dummy		601617						
ANR	601819	Symbol	& dummy		601617						
ANR	601820	Symbol	found		601617						
ANR	601821	Symbol	_pointer_prev_mask		601617						
ANR	601822	Symbol	now		601617						
ANR	601823	Symbol	& root_x		601617						
ANR	601824	Symbol	& root_y		601617						
ANR	601825	Symbol	_pointer_root		601617						
ANR	601826	Symbol	mask		601617						
ANR	601827	Symbol	& _pointer_root		601617						
ANR	601828	Symbol	false		601617						
ANR	601829	Symbol	& mask		601617						
ANR	601830	Symbol	& dummy_win		601617						
ANR	601831	Symbol	ScreenCount		601617						
ANR	601832	Symbol	D_ALWAYS		601617						
ANR	601833	Symbol	i		601617						
ANR	601834	Symbol	ScreenOfDisplay		601617						
ANR	601835	Symbol	XQueryPointer		601617						
ANR	601836	Symbol	_last_event		601617						
ANR	601837	Symbol	_pointer_prev_x		601617						
ANR	601838	Symbol	_pointer_prev_y		601617						
ANR	601839	Symbol	_display		601617						
ANR	601840	Symbol	true		601617						
ANR	601841	Symbol	& now		601617						
