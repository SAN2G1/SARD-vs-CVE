command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1246699	File	data/converged/CVE-2011-4930_htcondor/defrag.cpp								
ANR	1246700	Function	Defrag :: Defrag	39:0:1240:1583							
ANR	1246701	FunctionDef	Defrag :: Defrag ()		1246700	0					
ANR	1246702	CompoundStatement		52:0:1581:1583	1246700	0					
ANR	1246703	Identifier	Defrag :: Defrag		1246700	1					
ANR	1246704	ParameterList			1246700	2					
ANR	1246705	CFGEntryNode	ENTRY		1246700		True				
ANR	1246706	CFGExitNode	EXIT		1246700		True				
ANR	1246707	Function	Defrag :: ~Defrag	55:0:1586:1615							
ANR	1246708	FunctionDef	Defrag :: ~Defrag ()		1246707	0					
ANR	1246709	CompoundStatement		56:0:1604:1615	1246707	0					
ANR	1246710	ExpressionStatement	stop ( )	57:1:1607:1613	1246707	0	True				
ANR	1246711	CallExpression	stop ( )		1246707	0					
ANR	1246712	Callee	stop		1246707	0					
ANR	1246713	Identifier	stop		1246707	0					
ANR	1246714	ArgumentList			1246707	1					
ANR	1246715	Identifier	Defrag :: ~Defrag		1246707	1					
ANR	1246716	ParameterList			1246707	2					
ANR	1246717	CFGEntryNode	ENTRY		1246707		True				
ANR	1246718	CFGExitNode	EXIT		1246707		True				
ANR	1246719	Function	Defrag :: init	60:0:1618:1668							
ANR	1246720	FunctionDef	Defrag :: init ()		1246719	0					
ANR	1246721	CompoundStatement		61:0:1638:1668	1246719	0					
ANR	1246722	ExpressionStatement	m_stats . Init ( )	62:1:1641:1655	1246719	0	True				
ANR	1246723	CallExpression	m_stats . Init ( )		1246719	0					
ANR	1246724	Callee	m_stats . Init		1246719	0					
ANR	1246725	MemberAccess	m_stats . Init		1246719	0					
ANR	1246726	Identifier	m_stats		1246719	0					
ANR	1246727	Identifier	Init		1246719	1					
ANR	1246728	ArgumentList			1246719	1					
ANR	1246729	ExpressionStatement	config ( )	63:1:1658:1666	1246719	1	True				
ANR	1246730	CallExpression	config ( )		1246719	0					
ANR	1246731	Callee	config		1246719	0					
ANR	1246732	Identifier	config		1246719	0					
ANR	1246733	ArgumentList			1246719	1					
ANR	1246734	ReturnType	void		1246719	1					
ANR	1246735	Identifier	Defrag :: init		1246719	2					
ANR	1246736	ParameterList			1246719	3					
ANR	1246737	CFGEntryNode	ENTRY		1246719		True				
ANR	1246738	CFGExitNode	EXIT		1246719		True				
ANR	1246739	Symbol	m_stats		1246719						
ANR	1246740	Function	Defrag :: config	66:0:1671:5733							
ANR	1246741	FunctionDef	Defrag :: config ()		1246740	0					
ANR	1246742	CompoundStatement		67:0:1693:5733	1246740	0					
ANR	1246743	ExpressionStatement	"ASSERT ( param ( m_state_file , ""DEFRAG_STATE_FILE"" ) )"	69:1:1697:1746	1246740	0	True				
ANR	1246744	CallExpression	"ASSERT ( param ( m_state_file , ""DEFRAG_STATE_FILE"" ) )"		1246740	0					
ANR	1246745	Callee	ASSERT		1246740	0					
ANR	1246746	Identifier	ASSERT		1246740	0					
ANR	1246747	ArgumentList	"param ( m_state_file , ""DEFRAG_STATE_FILE"" )"		1246740	1					
ANR	1246748	Argument	"param ( m_state_file , ""DEFRAG_STATE_FILE"" )"		1246740	0					
ANR	1246749	CallExpression	"param ( m_state_file , ""DEFRAG_STATE_FILE"" )"		1246740	0					
ANR	1246750	Callee	param		1246740	0					
ANR	1246751	Identifier	param		1246740	0					
ANR	1246752	ArgumentList	m_state_file		1246740	1					
ANR	1246753	Argument	m_state_file		1246740	0					
ANR	1246754	Identifier	m_state_file		1246740	0					
ANR	1246755	Argument	"""DEFRAG_STATE_FILE"""		1246740	1					
ANR	1246756	PrimaryExpression	"""DEFRAG_STATE_FILE"""		1246740	0					
ANR	1246757	IfStatement	if ( m_last_poll == 0 )		1246740	1					
ANR	1246758	Condition	m_last_poll == 0	70:5:1753:1766	1246740	0	True				
ANR	1246759	EqualityExpression	m_last_poll == 0		1246740	0		==			
ANR	1246760	Identifier	m_last_poll		1246740	0					
ANR	1246761	PrimaryExpression	0		1246740	1					
ANR	1246762	CompoundStatement		4:22:76:76	1246740	1					
ANR	1246763	ExpressionStatement	loadState ( )	71:2:1774:1785	1246740	0	True				
ANR	1246764	CallExpression	loadState ( )		1246740	0					
ANR	1246765	Callee	loadState		1246740	0					
ANR	1246766	Identifier	loadState		1246740	0					
ANR	1246767	ArgumentList			1246740	1					
ANR	1246768	IdentifierDeclStatement	int old_polling_interval = m_polling_interval ;	74:1:1792:1837	1246740	2	True				
ANR	1246769	IdentifierDecl	old_polling_interval = m_polling_interval		1246740	0					
ANR	1246770	IdentifierDeclType	int		1246740	0					
ANR	1246771	Identifier	old_polling_interval		1246740	1					
ANR	1246772	AssignmentExpression	old_polling_interval = m_polling_interval		1246740	2		=			
ANR	1246773	Identifier	m_polling_interval		1246740	0					
ANR	1246774	Identifier	m_polling_interval		1246740	1					
ANR	1246775	ExpressionStatement	"m_polling_interval = param_integer ( ""DEFRAG_INTERVAL"" , 600 )"	75:1:1840:1897	1246740	3	True				
ANR	1246776	AssignmentExpression	"m_polling_interval = param_integer ( ""DEFRAG_INTERVAL"" , 600 )"		1246740	0		=			
ANR	1246777	Identifier	m_polling_interval		1246740	0					
ANR	1246778	CallExpression	"param_integer ( ""DEFRAG_INTERVAL"" , 600 )"		1246740	1					
ANR	1246779	Callee	param_integer		1246740	0					
ANR	1246780	Identifier	param_integer		1246740	0					
ANR	1246781	ArgumentList	"""DEFRAG_INTERVAL"""		1246740	1					
ANR	1246782	Argument	"""DEFRAG_INTERVAL"""		1246740	0					
ANR	1246783	PrimaryExpression	"""DEFRAG_INTERVAL"""		1246740	0					
ANR	1246784	Argument	600		1246740	1					
ANR	1246785	PrimaryExpression	600		1246740	0					
ANR	1246786	IfStatement	if ( m_polling_interval <= 0 )		1246740	4					
ANR	1246787	Condition	m_polling_interval <= 0	76:5:1904:1926	1246740	0	True				
ANR	1246788	RelationalExpression	m_polling_interval <= 0		1246740	0		<=			
ANR	1246789	Identifier	m_polling_interval		1246740	0					
ANR	1246790	PrimaryExpression	0		1246740	1					
ANR	1246791	CompoundStatement		10:31:236:236	1246740	1					
ANR	1246792	Statement	dprintf	77:2:1934:1940	1246740	0	True				
ANR	1246793	Statement	(	77:9:1941:1941	1246740	1	True				
ANR	1246794	Statement	D_ALWAYS	77:10:1942:1949	1246740	2	True				
ANR	1246795	Statement	","	77:18:1950:1950	1246740	3	True				
ANR	1246796	Statement	"""DEFRAG_INTERVAL=%d, so no pool defragmentation """	78:4:1956:2004	1246740	4	True				
ANR	1246797	Statement	"""will be done.\\n"""	79:4:2010:2026	1246740	5	True				
ANR	1246798	Statement	","	79:21:2027:2027	1246740	6	True				
ANR	1246799	Statement	m_polling_interval	79:23:2029:2046	1246740	7	True				
ANR	1246800	Statement	)	79:41:2047:2047	1246740	8	True				
ANR	1246801	ExpressionStatement		79:42:2048:2048	1246740	9	True				
ANR	1246802	IfStatement	if ( m_polling_timer != - 1 )		1246740	10					
ANR	1246803	Condition	m_polling_timer != - 1	80:6:2056:2076	1246740	0	True				
ANR	1246804	EqualityExpression	m_polling_timer != - 1		1246740	0		!=			
ANR	1246805	Identifier	m_polling_timer		1246740	0					
ANR	1246806	UnaryOperationExpression	- 1		1246740	1					
ANR	1246807	UnaryOperator	-		1246740	0					
ANR	1246808	PrimaryExpression	1		1246740	1					
ANR	1246809	CompoundStatement		14:30:386:386	1246740	1					
ANR	1246810	ExpressionStatement	daemonCore -> Cancel_Timer ( m_polling_timer )	81:3:2085:2126	1246740	0	True				
ANR	1246811	CallExpression	daemonCore -> Cancel_Timer ( m_polling_timer )		1246740	0					
ANR	1246812	Callee	daemonCore -> Cancel_Timer		1246740	0					
ANR	1246813	PtrMemberAccess	daemonCore -> Cancel_Timer		1246740	0					
ANR	1246814	Identifier	daemonCore		1246740	0					
ANR	1246815	Identifier	Cancel_Timer		1246740	1					
ANR	1246816	ArgumentList	m_polling_timer		1246740	1					
ANR	1246817	Argument	m_polling_timer		1246740	0					
ANR	1246818	Identifier	m_polling_timer		1246740	0					
ANR	1246819	ExpressionStatement	m_polling_timer = - 1	82:3:2131:2151	1246740	1	True				
ANR	1246820	AssignmentExpression	m_polling_timer = - 1		1246740	0		=			
ANR	1246821	Identifier	m_polling_timer		1246740	0					
ANR	1246822	UnaryOperationExpression	- 1		1246740	1					
ANR	1246823	UnaryOperator	-		1246740	0					
ANR	1246824	PrimaryExpression	1		1246740	1					
ANR	1246825	ElseStatement	else		1246740	0					
ANR	1246826	IfStatement	if ( m_polling_timer >= 0 )		1246740	0					
ANR	1246827	Condition	m_polling_timer >= 0	85:10:2170:2189	1246740	0	True				
ANR	1246828	RelationalExpression	m_polling_timer >= 0		1246740	0		>=			
ANR	1246829	Identifier	m_polling_timer		1246740	0					
ANR	1246830	PrimaryExpression	0		1246740	1					
ANR	1246831	CompoundStatement		19:33:499:499	1246740	1					
ANR	1246832	IfStatement	if ( old_polling_interval != m_polling_interval )		1246740	0					
ANR	1246833	Condition	old_polling_interval != m_polling_interval	86:6:2201:2242	1246740	0	True				
ANR	1246834	EqualityExpression	old_polling_interval != m_polling_interval		1246740	0		!=			
ANR	1246835	Identifier	old_polling_interval		1246740	0					
ANR	1246836	Identifier	m_polling_interval		1246740	1					
ANR	1246837	CompoundStatement		20:51:552:552	1246740	1					
ANR	1246838	ExpressionStatement	"daemonCore -> Reset_Timer_Period ( m_polling_timer , m_polling_interval )"	87:3:2251:2327	1246740	0	True				
ANR	1246839	CallExpression	"daemonCore -> Reset_Timer_Period ( m_polling_timer , m_polling_interval )"		1246740	0					
ANR	1246840	Callee	daemonCore -> Reset_Timer_Period		1246740	0					
ANR	1246841	PtrMemberAccess	daemonCore -> Reset_Timer_Period		1246740	0					
ANR	1246842	Identifier	daemonCore		1246740	0					
ANR	1246843	Identifier	Reset_Timer_Period		1246740	1					
ANR	1246844	ArgumentList	m_polling_timer		1246740	1					
ANR	1246845	Argument	m_polling_timer		1246740	0					
ANR	1246846	Identifier	m_polling_timer		1246740	0					
ANR	1246847	Argument	m_polling_interval		1246740	1					
ANR	1246848	Identifier	m_polling_interval		1246740	0					
ANR	1246849	ElseStatement	else		1246740	0					
ANR	1246850	CompoundStatement		28:2:679:697	1246740	0					
ANR	1246851	IdentifierDeclStatement	time_t now = time ( NULL ) ;	93:2:2346:2369	1246740	0	True				
ANR	1246852	IdentifierDecl	now = time ( NULL )		1246740	0					
ANR	1246853	IdentifierDeclType	time_t		1246740	0					
ANR	1246854	Identifier	now		1246740	1					
ANR	1246855	AssignmentExpression	now = time ( NULL )		1246740	2		=			
ANR	1246856	Identifier	now		1246740	0					
ANR	1246857	CallExpression	time ( NULL )		1246740	1					
ANR	1246858	Callee	time		1246740	0					
ANR	1246859	Identifier	time		1246740	0					
ANR	1246860	ArgumentList	NULL		1246740	1					
ANR	1246861	Argument	NULL		1246740	0					
ANR	1246862	Identifier	NULL		1246740	0					
ANR	1246863	IdentifierDeclStatement	int first_time = 0 ;	94:2:2373:2391	1246740	1	True				
ANR	1246864	IdentifierDecl	first_time = 0		1246740	0					
ANR	1246865	IdentifierDeclType	int		1246740	0					
ANR	1246866	Identifier	first_time		1246740	1					
ANR	1246867	AssignmentExpression	first_time = 0		1246740	2		=			
ANR	1246868	Identifier	first_time		1246740	0					
ANR	1246869	PrimaryExpression	0		1246740	1					
ANR	1246870	IfStatement	if ( m_last_poll != 0 && now - m_last_poll < m_polling_interval && m_last_poll <= now )		1246740	2					
ANR	1246871	Condition	m_last_poll != 0 && now - m_last_poll < m_polling_interval && m_last_poll <= now	95:6:2399:2476	1246740	0	True				
ANR	1246872	AndExpression	m_last_poll != 0 && now - m_last_poll < m_polling_interval && m_last_poll <= now		1246740	0		&&			
ANR	1246873	EqualityExpression	m_last_poll != 0		1246740	0		!=			
ANR	1246874	Identifier	m_last_poll		1246740	0					
ANR	1246875	PrimaryExpression	0		1246740	1					
ANR	1246876	AndExpression	now - m_last_poll < m_polling_interval && m_last_poll <= now		1246740	1		&&			
ANR	1246877	RelationalExpression	now - m_last_poll < m_polling_interval		1246740	0		<			
ANR	1246878	AdditiveExpression	now - m_last_poll		1246740	0		-			
ANR	1246879	Identifier	now		1246740	0					
ANR	1246880	Identifier	m_last_poll		1246740	1					
ANR	1246881	Identifier	m_polling_interval		1246740	1					
ANR	1246882	RelationalExpression	m_last_poll <= now		1246740	1		<=			
ANR	1246883	Identifier	m_last_poll		1246740	0					
ANR	1246884	Identifier	now		1246740	1					
ANR	1246885	CompoundStatement		29:87:786:786	1246740	1					
ANR	1246886	ExpressionStatement	first_time = m_polling_interval - ( now - m_last_poll )	96:3:2485:2536	1246740	0	True				
ANR	1246887	AssignmentExpression	first_time = m_polling_interval - ( now - m_last_poll )		1246740	0		=			
ANR	1246888	Identifier	first_time		1246740	0					
ANR	1246889	AdditiveExpression	m_polling_interval - ( now - m_last_poll )		1246740	1		-			
ANR	1246890	Identifier	m_polling_interval		1246740	0					
ANR	1246891	AdditiveExpression	now - m_last_poll		1246740	1		-			
ANR	1246892	Identifier	now		1246740	0					
ANR	1246893	Identifier	m_last_poll		1246740	1					
ANR	1246894	ExpressionStatement	"m_polling_timer = daemonCore -> Register_Timer ( first_time , m_polling_interval , ( TimerHandlercpp ) & Defrag :: poll , ""Defrag::poll"" , this )"	98:2:2544:2691	1246740	3	True				
ANR	1246895	AssignmentExpression	"m_polling_timer = daemonCore -> Register_Timer ( first_time , m_polling_interval , ( TimerHandlercpp ) & Defrag :: poll , ""Defrag::poll"" , this )"		1246740	0		=			
ANR	1246896	Identifier	m_polling_timer		1246740	0					
ANR	1246897	CallExpression	"daemonCore -> Register_Timer ( first_time , m_polling_interval , ( TimerHandlercpp ) & Defrag :: poll , ""Defrag::poll"" , this )"		1246740	1					
ANR	1246898	Callee	daemonCore -> Register_Timer		1246740	0					
ANR	1246899	PtrMemberAccess	daemonCore -> Register_Timer		1246740	0					
ANR	1246900	Identifier	daemonCore		1246740	0					
ANR	1246901	Identifier	Register_Timer		1246740	1					
ANR	1246902	ArgumentList	first_time		1246740	1					
ANR	1246903	Argument	first_time		1246740	0					
ANR	1246904	Identifier	first_time		1246740	0					
ANR	1246905	Argument	m_polling_interval		1246740	1					
ANR	1246906	Identifier	m_polling_interval		1246740	0					
ANR	1246907	Argument	( TimerHandlercpp ) & Defrag :: poll		1246740	2					
ANR	1246908	CastExpression	( TimerHandlercpp ) & Defrag :: poll		1246740	0					
ANR	1246909	CastTarget	TimerHandlercpp		1246740	0					
ANR	1246910	UnaryOperationExpression	& Defrag :: poll		1246740	1					
ANR	1246911	UnaryOperator	&		1246740	0					
ANR	1246912	Identifier	Defrag :: poll		1246740	1					
ANR	1246913	Argument	"""Defrag::poll"""		1246740	3					
ANR	1246914	PrimaryExpression	"""Defrag::poll"""		1246740	0					
ANR	1246915	Argument	this		1246740	4					
ANR	1246916	Identifier	this		1246740	0					
ANR	1246917	IfStatement	if ( old_polling_interval != m_polling_interval && m_polling_interval > 0 )		1246740	5					
ANR	1246918	Condition	old_polling_interval != m_polling_interval && m_polling_interval > 0	105:5:2701:2768	1246740	0	True				
ANR	1246919	AndExpression	old_polling_interval != m_polling_interval && m_polling_interval > 0		1246740	0		&&			
ANR	1246920	EqualityExpression	old_polling_interval != m_polling_interval		1246740	0		!=			
ANR	1246921	Identifier	old_polling_interval		1246740	0					
ANR	1246922	Identifier	m_polling_interval		1246740	1					
ANR	1246923	RelationalExpression	m_polling_interval > 0		1246740	1		>			
ANR	1246924	Identifier	m_polling_interval		1246740	0					
ANR	1246925	PrimaryExpression	0		1246740	1					
ANR	1246926	CompoundStatement		40:1:1079:1079	1246740	1					
ANR	1246927	Statement	dprintf	107:2:2777:2783	1246740	0	True				
ANR	1246928	Statement	(	107:9:2784:2784	1246740	1	True				
ANR	1246929	Statement	D_ALWAYS	107:10:2785:2792	1246740	2	True				
ANR	1246930	Statement	","	107:18:2793:2793	1246740	3	True				
ANR	1246931	Statement	"""Will evaluate defragmentation policy every DEFRAG_INTERVAL="""	108:4:2799:2859	1246740	4	True				
ANR	1246932	Statement	"""%d seconds.\\n"""	109:4:2865:2879	1246740	5	True				
ANR	1246933	Statement	","	109:19:2880:2880	1246740	6	True				
ANR	1246934	Statement	m_polling_interval	109:21:2882:2899	1246740	7	True				
ANR	1246935	Statement	)	109:39:2900:2900	1246740	8	True				
ANR	1246936	ExpressionStatement		109:40:2901:2901	1246740	9	True				
ANR	1246937	ExpressionStatement	"m_draining_per_hour = param_double ( ""DEFRAG_DRAINING_MACHINES_PER_HOUR"" , 0 , 0 )"	112:1:2908:2983	1246740	6	True				
ANR	1246938	AssignmentExpression	"m_draining_per_hour = param_double ( ""DEFRAG_DRAINING_MACHINES_PER_HOUR"" , 0 , 0 )"		1246740	0		=			
ANR	1246939	Identifier	m_draining_per_hour		1246740	0					
ANR	1246940	CallExpression	"param_double ( ""DEFRAG_DRAINING_MACHINES_PER_HOUR"" , 0 , 0 )"		1246740	1					
ANR	1246941	Callee	param_double		1246740	0					
ANR	1246942	Identifier	param_double		1246740	0					
ANR	1246943	ArgumentList	"""DEFRAG_DRAINING_MACHINES_PER_HOUR"""		1246740	1					
ANR	1246944	Argument	"""DEFRAG_DRAINING_MACHINES_PER_HOUR"""		1246740	0					
ANR	1246945	PrimaryExpression	"""DEFRAG_DRAINING_MACHINES_PER_HOUR"""		1246740	0					
ANR	1246946	Argument	0		1246740	1					
ANR	1246947	PrimaryExpression	0		1246740	0					
ANR	1246948	Argument	0		1246740	2					
ANR	1246949	PrimaryExpression	0		1246740	0					
ANR	1246950	IdentifierDeclStatement	double rate = m_draining_per_hour / 3600.0 * m_polling_interval ;	114:1:2987:3046	1246740	7	True				
ANR	1246951	IdentifierDecl	rate = m_draining_per_hour / 3600.0 * m_polling_interval		1246740	0					
ANR	1246952	IdentifierDeclType	double		1246740	0					
ANR	1246953	Identifier	rate		1246740	1					
ANR	1246954	AssignmentExpression	rate = m_draining_per_hour / 3600.0 * m_polling_interval		1246740	2		=			
ANR	1246955	Identifier	rate		1246740	0					
ANR	1246956	MultiplicativeExpression	m_draining_per_hour / 3600.0 * m_polling_interval		1246740	1		/			
ANR	1246957	Identifier	m_draining_per_hour		1246740	0					
ANR	1246958	MultiplicativeExpression	3600.0 * m_polling_interval		1246740	1		*			
ANR	1246959	PrimaryExpression	3600.0		1246740	0					
ANR	1246960	Identifier	m_polling_interval		1246740	1					
ANR	1246961	ExpressionStatement	m_draining_per_poll = ( int ) floor ( rate + 0.00001 )	115:1:3049:3097	1246740	8	True				
ANR	1246962	AssignmentExpression	m_draining_per_poll = ( int ) floor ( rate + 0.00001 )		1246740	0		=			
ANR	1246963	Identifier	m_draining_per_poll		1246740	0					
ANR	1246964	CastExpression	( int ) floor ( rate + 0.00001 )		1246740	1					
ANR	1246965	CastTarget	int		1246740	0					
ANR	1246966	CallExpression	floor ( rate + 0.00001 )		1246740	1					
ANR	1246967	Callee	floor		1246740	0					
ANR	1246968	Identifier	floor		1246740	0					
ANR	1246969	ArgumentList	rate + 0.00001		1246740	1					
ANR	1246970	Argument	rate + 0.00001		1246740	0					
ANR	1246971	AdditiveExpression	rate + 0.00001		1246740	0		+			
ANR	1246972	Identifier	rate		1246740	0					
ANR	1246973	PrimaryExpression	0.00001		1246740	1					
ANR	1246974	IfStatement	if ( m_draining_per_poll < 0 )		1246740	9					
ANR	1246975	Condition	m_draining_per_poll < 0	116:5:3104:3126	1246740	0	True				
ANR	1246976	RelationalExpression	m_draining_per_poll < 0		1246740	0		<			
ANR	1246977	Identifier	m_draining_per_poll		1246740	0					
ANR	1246978	PrimaryExpression	0		1246740	1					
ANR	1246979	ExpressionStatement	m_draining_per_poll = 0	116:31:3130:3153	1246740	1	True				
ANR	1246980	AssignmentExpression	m_draining_per_poll = 0		1246740	0		=			
ANR	1246981	Identifier	m_draining_per_poll		1246740	0					
ANR	1246982	PrimaryExpression	0		1246740	1					
ANR	1246983	IdentifierDeclStatement	double error_per_hour = ( rate - m_draining_per_poll ) / m_polling_interval * 3600.0 ;	118:1:3157:3235	1246740	10	True				
ANR	1246984	IdentifierDecl	error_per_hour = ( rate - m_draining_per_poll ) / m_polling_interval * 3600.0		1246740	0					
ANR	1246985	IdentifierDeclType	double		1246740	0					
ANR	1246986	Identifier	error_per_hour		1246740	1					
ANR	1246987	AssignmentExpression	error_per_hour = ( rate - m_draining_per_poll ) / m_polling_interval * 3600.0		1246740	2		=			
ANR	1246988	Identifier	error_per_hour		1246740	0					
ANR	1246989	MultiplicativeExpression	( rate - m_draining_per_poll ) / m_polling_interval * 3600.0		1246740	1		/			
ANR	1246990	AdditiveExpression	rate - m_draining_per_poll		1246740	0		-			
ANR	1246991	Identifier	rate		1246740	0					
ANR	1246992	Identifier	m_draining_per_poll		1246740	1					
ANR	1246993	MultiplicativeExpression	m_polling_interval * 3600.0		1246740	1		*			
ANR	1246994	Identifier	m_polling_interval		1246740	0					
ANR	1246995	PrimaryExpression	3600.0		1246740	1					
ANR	1246996	ExpressionStatement	m_draining_per_poll_hour = ( int ) floor ( error_per_hour + 0.00001 )	119:1:3238:3301	1246740	11	True				
ANR	1246997	AssignmentExpression	m_draining_per_poll_hour = ( int ) floor ( error_per_hour + 0.00001 )		1246740	0		=			
ANR	1246998	Identifier	m_draining_per_poll_hour		1246740	0					
ANR	1246999	CastExpression	( int ) floor ( error_per_hour + 0.00001 )		1246740	1					
ANR	1247000	CastTarget	int		1246740	0					
ANR	1247001	CallExpression	floor ( error_per_hour + 0.00001 )		1246740	1					
ANR	1247002	Callee	floor		1246740	0					
ANR	1247003	Identifier	floor		1246740	0					
ANR	1247004	ArgumentList	error_per_hour + 0.00001		1246740	1					
ANR	1247005	Argument	error_per_hour + 0.00001		1246740	0					
ANR	1247006	AdditiveExpression	error_per_hour + 0.00001		1246740	0		+			
ANR	1247007	Identifier	error_per_hour		1246740	0					
ANR	1247008	PrimaryExpression	0.00001		1246740	1					
ANR	1247009	IfStatement	if ( m_draining_per_hour < 0 || m_polling_interval > 3600 )		1246740	12					
ANR	1247010	Condition	m_draining_per_hour < 0 || m_polling_interval > 3600	120:5:3308:3359	1246740	0	True				
ANR	1247011	OrExpression	m_draining_per_hour < 0 || m_polling_interval > 3600		1246740	0		||			
ANR	1247012	RelationalExpression	m_draining_per_hour < 0		1246740	0		<			
ANR	1247013	Identifier	m_draining_per_hour		1246740	0					
ANR	1247014	PrimaryExpression	0		1246740	1					
ANR	1247015	RelationalExpression	m_polling_interval > 3600		1246740	1		>			
ANR	1247016	Identifier	m_polling_interval		1246740	0					
ANR	1247017	PrimaryExpression	3600		1246740	1					
ANR	1247018	CompoundStatement		54:60:1669:1669	1246740	1					
ANR	1247019	ExpressionStatement	m_draining_per_hour = 0	121:2:3367:3390	1246740	0	True				
ANR	1247020	AssignmentExpression	m_draining_per_hour = 0		1246740	0		=			
ANR	1247021	Identifier	m_draining_per_hour		1246740	0					
ANR	1247022	PrimaryExpression	0		1246740	1					
ANR	1247023	IdentifierDeclStatement	double error_per_day = ( error_per_hour - m_draining_per_poll_hour ) * 24.0 ;	124:1:3397:3468	1246740	13	True				
ANR	1247024	IdentifierDecl	error_per_day = ( error_per_hour - m_draining_per_poll_hour ) * 24.0		1246740	0					
ANR	1247025	IdentifierDeclType	double		1246740	0					
ANR	1247026	Identifier	error_per_day		1246740	1					
ANR	1247027	AssignmentExpression	error_per_day = ( error_per_hour - m_draining_per_poll_hour ) * 24.0		1246740	2		=			
ANR	1247028	Identifier	error_per_day		1246740	0					
ANR	1247029	MultiplicativeExpression	( error_per_hour - m_draining_per_poll_hour ) * 24.0		1246740	1		*			
ANR	1247030	AdditiveExpression	error_per_hour - m_draining_per_poll_hour		1246740	0		-			
ANR	1247031	Identifier	error_per_hour		1246740	0					
ANR	1247032	Identifier	m_draining_per_poll_hour		1246740	1					
ANR	1247033	PrimaryExpression	24.0		1246740	1					
ANR	1247034	ExpressionStatement	m_draining_per_poll_day = ( int ) floor ( error_per_day + 0.5 )	125:1:3471:3528	1246740	14	True				
ANR	1247035	AssignmentExpression	m_draining_per_poll_day = ( int ) floor ( error_per_day + 0.5 )		1246740	0		=			
ANR	1247036	Identifier	m_draining_per_poll_day		1246740	0					
ANR	1247037	CastExpression	( int ) floor ( error_per_day + 0.5 )		1246740	1					
ANR	1247038	CastTarget	int		1246740	0					
ANR	1247039	CallExpression	floor ( error_per_day + 0.5 )		1246740	1					
ANR	1247040	Callee	floor		1246740	0					
ANR	1247041	Identifier	floor		1246740	0					
ANR	1247042	ArgumentList	error_per_day + 0.5		1246740	1					
ANR	1247043	Argument	error_per_day + 0.5		1246740	0					
ANR	1247044	AdditiveExpression	error_per_day + 0.5		1246740	0		+			
ANR	1247045	Identifier	error_per_day		1246740	0					
ANR	1247046	PrimaryExpression	0.5		1246740	1					
ANR	1247047	IfStatement	if ( m_draining_per_poll_day < 0 || m_polling_interval > 3600 * 24 )		1246740	15					
ANR	1247048	Condition	m_draining_per_poll_day < 0 || m_polling_interval > 3600 * 24	126:5:3535:3593	1246740	0	True				
ANR	1247049	OrExpression	m_draining_per_poll_day < 0 || m_polling_interval > 3600 * 24		1246740	0		||			
ANR	1247050	RelationalExpression	m_draining_per_poll_day < 0		1246740	0		<			
ANR	1247051	Identifier	m_draining_per_poll_day		1246740	0					
ANR	1247052	PrimaryExpression	0		1246740	1					
ANR	1247053	RelationalExpression	m_polling_interval > 3600 * 24		1246740	1		>			
ANR	1247054	Identifier	m_polling_interval		1246740	0					
ANR	1247055	MultiplicativeExpression	3600 * 24		1246740	1		*			
ANR	1247056	PrimaryExpression	3600		1246740	0					
ANR	1247057	PrimaryExpression	24		1246740	1					
ANR	1247058	CompoundStatement		60:67:1903:1903	1246740	1					
ANR	1247059	ExpressionStatement	m_draining_per_poll_day = 0	127:2:3601:3628	1246740	0	True				
ANR	1247060	AssignmentExpression	m_draining_per_poll_day = 0		1246740	0		=			
ANR	1247061	Identifier	m_draining_per_poll_day		1246740	0					
ANR	1247062	PrimaryExpression	0		1246740	1					
ANR	1247063	ExpressionStatement	"dprintf ( D_ALWAYS , ""polling interval %ds, DEFRAG_DRAINING_MACHINES_PER_HOUR = %f/hour = %d/interval + %d/hour + %d/day\\n"" , m_polling_interval , m_draining_per_hour , m_draining_per_poll , m_draining_per_poll_hour , m_draining_per_poll_day )"	129:1:3634:3870	1246740	16	True				
ANR	1247064	CallExpression	"dprintf ( D_ALWAYS , ""polling interval %ds, DEFRAG_DRAINING_MACHINES_PER_HOUR = %f/hour = %d/interval + %d/hour + %d/day\\n"" , m_polling_interval , m_draining_per_hour , m_draining_per_poll , m_draining_per_poll_hour , m_draining_per_poll_day )"		1246740	0					
ANR	1247065	Callee	dprintf		1246740	0					
ANR	1247066	Identifier	dprintf		1246740	0					
ANR	1247067	ArgumentList	D_ALWAYS		1246740	1					
ANR	1247068	Argument	D_ALWAYS		1246740	0					
ANR	1247069	Identifier	D_ALWAYS		1246740	0					
ANR	1247070	Argument	"""polling interval %ds, DEFRAG_DRAINING_MACHINES_PER_HOUR = %f/hour = %d/interval + %d/hour + %d/day\\n"""		1246740	1					
ANR	1247071	PrimaryExpression	"""polling interval %ds, DEFRAG_DRAINING_MACHINES_PER_HOUR = %f/hour = %d/interval + %d/hour + %d/day\\n"""		1246740	0					
ANR	1247072	Argument	m_polling_interval		1246740	2					
ANR	1247073	Identifier	m_polling_interval		1246740	0					
ANR	1247074	Argument	m_draining_per_hour		1246740	3					
ANR	1247075	Identifier	m_draining_per_hour		1246740	0					
ANR	1247076	Argument	m_draining_per_poll		1246740	4					
ANR	1247077	Identifier	m_draining_per_poll		1246740	0					
ANR	1247078	Argument	m_draining_per_poll_hour		1246740	5					
ANR	1247079	Identifier	m_draining_per_poll_hour		1246740	0					
ANR	1247080	Argument	m_draining_per_poll_day		1246740	6					
ANR	1247081	Identifier	m_draining_per_poll_day		1246740	0					
ANR	1247082	ExpressionStatement	"m_max_draining = param_integer ( ""DEFRAG_MAX_CONCURRENT_DRAINING"" , - 1 , - 1 )"	133:1:3874:3944	1246740	17	True				
ANR	1247083	AssignmentExpression	"m_max_draining = param_integer ( ""DEFRAG_MAX_CONCURRENT_DRAINING"" , - 1 , - 1 )"		1246740	0		=			
ANR	1247084	Identifier	m_max_draining		1246740	0					
ANR	1247085	CallExpression	"param_integer ( ""DEFRAG_MAX_CONCURRENT_DRAINING"" , - 1 , - 1 )"		1246740	1					
ANR	1247086	Callee	param_integer		1246740	0					
ANR	1247087	Identifier	param_integer		1246740	0					
ANR	1247088	ArgumentList	"""DEFRAG_MAX_CONCURRENT_DRAINING"""		1246740	1					
ANR	1247089	Argument	"""DEFRAG_MAX_CONCURRENT_DRAINING"""		1246740	0					
ANR	1247090	PrimaryExpression	"""DEFRAG_MAX_CONCURRENT_DRAINING"""		1246740	0					
ANR	1247091	Argument	- 1		1246740	1					
ANR	1247092	UnaryOperationExpression	- 1		1246740	0					
ANR	1247093	UnaryOperator	-		1246740	0					
ANR	1247094	PrimaryExpression	1		1246740	1					
ANR	1247095	Argument	- 1		1246740	2					
ANR	1247096	UnaryOperationExpression	- 1		1246740	0					
ANR	1247097	UnaryOperator	-		1246740	0					
ANR	1247098	PrimaryExpression	1		1246740	1					
ANR	1247099	ExpressionStatement	"m_max_whole_machines = param_integer ( ""DEFRAG_MAX_WHOLE_MACHINES"" , - 1 , - 1 )"	134:1:3947:4018	1246740	18	True				
ANR	1247100	AssignmentExpression	"m_max_whole_machines = param_integer ( ""DEFRAG_MAX_WHOLE_MACHINES"" , - 1 , - 1 )"		1246740	0		=			
ANR	1247101	Identifier	m_max_whole_machines		1246740	0					
ANR	1247102	CallExpression	"param_integer ( ""DEFRAG_MAX_WHOLE_MACHINES"" , - 1 , - 1 )"		1246740	1					
ANR	1247103	Callee	param_integer		1246740	0					
ANR	1247104	Identifier	param_integer		1246740	0					
ANR	1247105	ArgumentList	"""DEFRAG_MAX_WHOLE_MACHINES"""		1246740	1					
ANR	1247106	Argument	"""DEFRAG_MAX_WHOLE_MACHINES"""		1246740	0					
ANR	1247107	PrimaryExpression	"""DEFRAG_MAX_WHOLE_MACHINES"""		1246740	0					
ANR	1247108	Argument	- 1		1246740	1					
ANR	1247109	UnaryOperationExpression	- 1		1246740	0					
ANR	1247110	UnaryOperator	-		1246740	0					
ANR	1247111	PrimaryExpression	1		1246740	1					
ANR	1247112	Argument	- 1		1246740	2					
ANR	1247113	UnaryOperationExpression	- 1		1246740	0					
ANR	1247114	UnaryOperator	-		1246740	0					
ANR	1247115	PrimaryExpression	1		1246740	1					
ANR	1247116	ExpressionStatement	"ASSERT ( param ( m_defrag_requirements , ""DEFRAG_REQUIREMENTS"" ) )"	136:1:4022:4082	1246740	19	True				
ANR	1247117	CallExpression	"ASSERT ( param ( m_defrag_requirements , ""DEFRAG_REQUIREMENTS"" ) )"		1246740	0					
ANR	1247118	Callee	ASSERT		1246740	0					
ANR	1247119	Identifier	ASSERT		1246740	0					
ANR	1247120	ArgumentList	"param ( m_defrag_requirements , ""DEFRAG_REQUIREMENTS"" )"		1246740	1					
ANR	1247121	Argument	"param ( m_defrag_requirements , ""DEFRAG_REQUIREMENTS"" )"		1246740	0					
ANR	1247122	CallExpression	"param ( m_defrag_requirements , ""DEFRAG_REQUIREMENTS"" )"		1246740	0					
ANR	1247123	Callee	param		1246740	0					
ANR	1247124	Identifier	param		1246740	0					
ANR	1247125	ArgumentList	m_defrag_requirements		1246740	1					
ANR	1247126	Argument	m_defrag_requirements		1246740	0					
ANR	1247127	Identifier	m_defrag_requirements		1246740	0					
ANR	1247128	Argument	"""DEFRAG_REQUIREMENTS"""		1246740	1					
ANR	1247129	PrimaryExpression	"""DEFRAG_REQUIREMENTS"""		1246740	0					
ANR	1247130	ExpressionStatement	"validateExpr ( m_defrag_requirements . c_str ( ) , ""DEFRAG_REQUIREMENTS"" )"	137:1:4085:4153	1246740	20	True				
ANR	1247131	CallExpression	"validateExpr ( m_defrag_requirements . c_str ( ) , ""DEFRAG_REQUIREMENTS"" )"		1246740	0					
ANR	1247132	Callee	validateExpr		1246740	0					
ANR	1247133	Identifier	validateExpr		1246740	0					
ANR	1247134	ArgumentList	m_defrag_requirements . c_str ( )		1246740	1					
ANR	1247135	Argument	m_defrag_requirements . c_str ( )		1246740	0					
ANR	1247136	CallExpression	m_defrag_requirements . c_str ( )		1246740	0					
ANR	1247137	Callee	m_defrag_requirements . c_str		1246740	0					
ANR	1247138	MemberAccess	m_defrag_requirements . c_str		1246740	0					
ANR	1247139	Identifier	m_defrag_requirements		1246740	0					
ANR	1247140	Identifier	c_str		1246740	1					
ANR	1247141	ArgumentList			1246740	1					
ANR	1247142	Argument	"""DEFRAG_REQUIREMENTS"""		1246740	1					
ANR	1247143	PrimaryExpression	"""DEFRAG_REQUIREMENTS"""		1246740	0					
ANR	1247144	ExpressionStatement	"ASSERT ( param ( m_whole_machine_expr , ""DEFRAG_WHOLE_MACHINE_EXPR"" ) )"	139:1:4157:4222	1246740	21	True				
ANR	1247145	CallExpression	"ASSERT ( param ( m_whole_machine_expr , ""DEFRAG_WHOLE_MACHINE_EXPR"" ) )"		1246740	0					
ANR	1247146	Callee	ASSERT		1246740	0					
ANR	1247147	Identifier	ASSERT		1246740	0					
ANR	1247148	ArgumentList	"param ( m_whole_machine_expr , ""DEFRAG_WHOLE_MACHINE_EXPR"" )"		1246740	1					
ANR	1247149	Argument	"param ( m_whole_machine_expr , ""DEFRAG_WHOLE_MACHINE_EXPR"" )"		1246740	0					
ANR	1247150	CallExpression	"param ( m_whole_machine_expr , ""DEFRAG_WHOLE_MACHINE_EXPR"" )"		1246740	0					
ANR	1247151	Callee	param		1246740	0					
ANR	1247152	Identifier	param		1246740	0					
ANR	1247153	ArgumentList	m_whole_machine_expr		1246740	1					
ANR	1247154	Argument	m_whole_machine_expr		1246740	0					
ANR	1247155	Identifier	m_whole_machine_expr		1246740	0					
ANR	1247156	Argument	"""DEFRAG_WHOLE_MACHINE_EXPR"""		1246740	1					
ANR	1247157	PrimaryExpression	"""DEFRAG_WHOLE_MACHINE_EXPR"""		1246740	0					
ANR	1247158	ExpressionStatement	"validateExpr ( m_whole_machine_expr . c_str ( ) , ""DEFRAG_WHOLE_MACHINE_EXPR"" )"	140:1:4225:4298	1246740	22	True				
ANR	1247159	CallExpression	"validateExpr ( m_whole_machine_expr . c_str ( ) , ""DEFRAG_WHOLE_MACHINE_EXPR"" )"		1246740	0					
ANR	1247160	Callee	validateExpr		1246740	0					
ANR	1247161	Identifier	validateExpr		1246740	0					
ANR	1247162	ArgumentList	m_whole_machine_expr . c_str ( )		1246740	1					
ANR	1247163	Argument	m_whole_machine_expr . c_str ( )		1246740	0					
ANR	1247164	CallExpression	m_whole_machine_expr . c_str ( )		1246740	0					
ANR	1247165	Callee	m_whole_machine_expr . c_str		1246740	0					
ANR	1247166	MemberAccess	m_whole_machine_expr . c_str		1246740	0					
ANR	1247167	Identifier	m_whole_machine_expr		1246740	0					
ANR	1247168	Identifier	c_str		1246740	1					
ANR	1247169	ArgumentList			1246740	1					
ANR	1247170	Argument	"""DEFRAG_WHOLE_MACHINE_EXPR"""		1246740	1					
ANR	1247171	PrimaryExpression	"""DEFRAG_WHOLE_MACHINE_EXPR"""		1246740	0					
ANR	1247172	ExpressionStatement	"ASSERT ( param ( m_draining_schedule_str , ""DEFRAG_DRAINING_SCHEDULE"" ) )"	142:1:4302:4369	1246740	23	True				
ANR	1247173	CallExpression	"ASSERT ( param ( m_draining_schedule_str , ""DEFRAG_DRAINING_SCHEDULE"" ) )"		1246740	0					
ANR	1247174	Callee	ASSERT		1246740	0					
ANR	1247175	Identifier	ASSERT		1246740	0					
ANR	1247176	ArgumentList	"param ( m_draining_schedule_str , ""DEFRAG_DRAINING_SCHEDULE"" )"		1246740	1					
ANR	1247177	Argument	"param ( m_draining_schedule_str , ""DEFRAG_DRAINING_SCHEDULE"" )"		1246740	0					
ANR	1247178	CallExpression	"param ( m_draining_schedule_str , ""DEFRAG_DRAINING_SCHEDULE"" )"		1246740	0					
ANR	1247179	Callee	param		1246740	0					
ANR	1247180	Identifier	param		1246740	0					
ANR	1247181	ArgumentList	m_draining_schedule_str		1246740	1					
ANR	1247182	Argument	m_draining_schedule_str		1246740	0					
ANR	1247183	Identifier	m_draining_schedule_str		1246740	0					
ANR	1247184	Argument	"""DEFRAG_DRAINING_SCHEDULE"""		1246740	1					
ANR	1247185	PrimaryExpression	"""DEFRAG_DRAINING_SCHEDULE"""		1246740	0					
ANR	1247186	IfStatement	if ( m_draining_schedule_str . empty ( ) )		1246740	24					
ANR	1247187	Condition	m_draining_schedule_str . empty ( )	143:5:4376:4406	1246740	0	True				
ANR	1247188	CallExpression	m_draining_schedule_str . empty ( )		1246740	0					
ANR	1247189	Callee	m_draining_schedule_str . empty		1246740	0					
ANR	1247190	MemberAccess	m_draining_schedule_str . empty		1246740	0					
ANR	1247191	Identifier	m_draining_schedule_str		1246740	0					
ANR	1247192	Identifier	empty		1246740	1					
ANR	1247193	ArgumentList			1246740	1					
ANR	1247194	CompoundStatement		77:39:2716:2716	1246740	1					
ANR	1247195	ExpressionStatement	m_draining_schedule = DRAIN_GRACEFUL	144:2:4414:4450	1246740	0	True				
ANR	1247196	AssignmentExpression	m_draining_schedule = DRAIN_GRACEFUL		1246740	0		=			
ANR	1247197	Identifier	m_draining_schedule		1246740	0					
ANR	1247198	Identifier	DRAIN_GRACEFUL		1246740	1					
ANR	1247199	ExpressionStatement	"m_draining_schedule_str = ""graceful"""	145:2:4454:4490	1246740	1	True				
ANR	1247200	AssignmentExpression	"m_draining_schedule_str = ""graceful"""		1246740	0		=			
ANR	1247201	Identifier	m_draining_schedule_str		1246740	0					
ANR	1247202	PrimaryExpression	"""graceful"""		1246740	1					
ANR	1247203	ElseStatement	else		1246740	0					
ANR	1247204	CompoundStatement		81:6:2807:2807	1246740	0					
ANR	1247205	ExpressionStatement	m_draining_schedule = getDrainingScheduleNum ( m_draining_schedule_str . c_str ( ) )	148:2:4505:4582	1246740	0	True				
ANR	1247206	AssignmentExpression	m_draining_schedule = getDrainingScheduleNum ( m_draining_schedule_str . c_str ( ) )		1246740	0		=			
ANR	1247207	Identifier	m_draining_schedule		1246740	0					
ANR	1247208	CallExpression	getDrainingScheduleNum ( m_draining_schedule_str . c_str ( ) )		1246740	1					
ANR	1247209	Callee	getDrainingScheduleNum		1246740	0					
ANR	1247210	Identifier	getDrainingScheduleNum		1246740	0					
ANR	1247211	ArgumentList	m_draining_schedule_str . c_str ( )		1246740	1					
ANR	1247212	Argument	m_draining_schedule_str . c_str ( )		1246740	0					
ANR	1247213	CallExpression	m_draining_schedule_str . c_str ( )		1246740	0					
ANR	1247214	Callee	m_draining_schedule_str . c_str		1246740	0					
ANR	1247215	MemberAccess	m_draining_schedule_str . c_str		1246740	0					
ANR	1247216	Identifier	m_draining_schedule_str		1246740	0					
ANR	1247217	Identifier	c_str		1246740	1					
ANR	1247218	ArgumentList			1246740	1					
ANR	1247219	IfStatement	if ( m_draining_schedule < 0 )		1246740	1					
ANR	1247220	Condition	m_draining_schedule < 0	149:6:4590:4612	1246740	0	True				
ANR	1247221	RelationalExpression	m_draining_schedule < 0		1246740	0		<			
ANR	1247222	Identifier	m_draining_schedule		1246740	0					
ANR	1247223	PrimaryExpression	0		1246740	1					
ANR	1247224	CompoundStatement		83:32:2922:2922	1246740	1					
ANR	1247225	ExpressionStatement	"EXCEPT ( ""Invalid draining schedule: %s\\n"" , m_draining_schedule_str . c_str ( ) )"	150:3:4621:4694	1246740	0	True				
ANR	1247226	CallExpression	"EXCEPT ( ""Invalid draining schedule: %s\\n"" , m_draining_schedule_str . c_str ( ) )"		1246740	0					
ANR	1247227	Callee	EXCEPT		1246740	0					
ANR	1247228	Identifier	EXCEPT		1246740	0					
ANR	1247229	ArgumentList	"""Invalid draining schedule: %s\\n"""		1246740	1					
ANR	1247230	Argument	"""Invalid draining schedule: %s\\n"""		1246740	0					
ANR	1247231	PrimaryExpression	"""Invalid draining schedule: %s\\n"""		1246740	0					
ANR	1247232	Argument	m_draining_schedule_str . c_str ( )		1246740	1					
ANR	1247233	CallExpression	m_draining_schedule_str . c_str ( )		1246740	0					
ANR	1247234	Callee	m_draining_schedule_str . c_str		1246740	0					
ANR	1247235	MemberAccess	m_draining_schedule_str . c_str		1246740	0					
ANR	1247236	Identifier	m_draining_schedule_str		1246740	0					
ANR	1247237	Identifier	c_str		1246740	1					
ANR	1247238	ArgumentList			1246740	1					
ANR	1247239	IdentifierDeclStatement	MyString rank ;	154:1:4705:4718	1246740	25	True				
ANR	1247240	IdentifierDecl	rank		1246740	0					
ANR	1247241	IdentifierDeclType	MyString		1246740	0					
ANR	1247242	Identifier	rank		1246740	1					
ANR	1247243	ExpressionStatement	"param ( rank , ""DEFRAG_RANK"" )"	155:1:4721:4746	1246740	26	True				
ANR	1247244	CallExpression	"param ( rank , ""DEFRAG_RANK"" )"		1246740	0					
ANR	1247245	Callee	param		1246740	0					
ANR	1247246	Identifier	param		1246740	0					
ANR	1247247	ArgumentList	rank		1246740	1					
ANR	1247248	Argument	rank		1246740	0					
ANR	1247249	Identifier	rank		1246740	0					
ANR	1247250	Argument	"""DEFRAG_RANK"""		1246740	1					
ANR	1247251	PrimaryExpression	"""DEFRAG_RANK"""		1246740	0					
ANR	1247252	IfStatement	if ( rank . IsEmpty ( ) )		1246740	27					
ANR	1247253	Condition	rank . IsEmpty ( )	156:5:4753:4766	1246740	0	True				
ANR	1247254	CallExpression	rank . IsEmpty ( )		1246740	0					
ANR	1247255	Callee	rank . IsEmpty		1246740	0					
ANR	1247256	MemberAccess	rank . IsEmpty		1246740	0					
ANR	1247257	Identifier	rank		1246740	0					
ANR	1247258	Identifier	IsEmpty		1246740	1					
ANR	1247259	ArgumentList			1246740	1					
ANR	1247260	CompoundStatement		90:22:3076:3076	1246740	1					
ANR	1247261	ExpressionStatement	m_rank_ad . Delete ( ATTR_RANK )	157:2:4774:4801	1246740	0	True				
ANR	1247262	CallExpression	m_rank_ad . Delete ( ATTR_RANK )		1246740	0					
ANR	1247263	Callee	m_rank_ad . Delete		1246740	0					
ANR	1247264	MemberAccess	m_rank_ad . Delete		1246740	0					
ANR	1247265	Identifier	m_rank_ad		1246740	0					
ANR	1247266	Identifier	Delete		1246740	1					
ANR	1247267	ArgumentList	ATTR_RANK		1246740	1					
ANR	1247268	Argument	ATTR_RANK		1246740	0					
ANR	1247269	Identifier	ATTR_RANK		1246740	0					
ANR	1247270	ElseStatement	else		1246740	0					
ANR	1247271	CompoundStatement		93:6:3118:3118	1246740	0					
ANR	1247272	IfStatement	"if ( ! m_rank_ad . AssignExpr ( ATTR_RANK , rank . Value ( ) ) )"		1246740	0					
ANR	1247273	Condition	"! m_rank_ad . AssignExpr ( ATTR_RANK , rank . Value ( ) )"	160:6:4820:4864	1246740	0	True				
ANR	1247274	UnaryOperationExpression	"! m_rank_ad . AssignExpr ( ATTR_RANK , rank . Value ( ) )"		1246740	0					
ANR	1247275	UnaryOperator	!		1246740	0					
ANR	1247276	CallExpression	"m_rank_ad . AssignExpr ( ATTR_RANK , rank . Value ( ) )"		1246740	1					
ANR	1247277	Callee	m_rank_ad . AssignExpr		1246740	0					
ANR	1247278	MemberAccess	m_rank_ad . AssignExpr		1246740	0					
ANR	1247279	Identifier	m_rank_ad		1246740	0					
ANR	1247280	Identifier	AssignExpr		1246740	1					
ANR	1247281	ArgumentList	ATTR_RANK		1246740	1					
ANR	1247282	Argument	ATTR_RANK		1246740	0					
ANR	1247283	Identifier	ATTR_RANK		1246740	0					
ANR	1247284	Argument	rank . Value ( )		1246740	1					
ANR	1247285	CallExpression	rank . Value ( )		1246740	0					
ANR	1247286	Callee	rank . Value		1246740	0					
ANR	1247287	MemberAccess	rank . Value		1246740	0					
ANR	1247288	Identifier	rank		1246740	0					
ANR	1247289	Identifier	Value		1246740	1					
ANR	1247290	ArgumentList			1246740	1					
ANR	1247291	CompoundStatement		94:54:3174:3174	1246740	1					
ANR	1247292	ExpressionStatement	"EXCEPT ( ""Invalid expression for DEFRAG_RANK: %s\\n"" , rank . Value ( ) )"	161:3:4873:4944	1246740	0	True				
ANR	1247293	CallExpression	"EXCEPT ( ""Invalid expression for DEFRAG_RANK: %s\\n"" , rank . Value ( ) )"		1246740	0					
ANR	1247294	Callee	EXCEPT		1246740	0					
ANR	1247295	Identifier	EXCEPT		1246740	0					
ANR	1247296	ArgumentList	"""Invalid expression for DEFRAG_RANK: %s\\n"""		1246740	1					
ANR	1247297	Argument	"""Invalid expression for DEFRAG_RANK: %s\\n"""		1246740	0					
ANR	1247298	PrimaryExpression	"""Invalid expression for DEFRAG_RANK: %s\\n"""		1246740	0					
ANR	1247299	Argument	rank . Value ( )		1246740	1					
ANR	1247300	CallExpression	rank . Value ( )		1246740	0					
ANR	1247301	Callee	rank . Value		1246740	0					
ANR	1247302	MemberAccess	rank . Value		1246740	0					
ANR	1247303	Identifier	rank		1246740	0					
ANR	1247304	Identifier	Value		1246740	1					
ANR	1247305	ArgumentList			1246740	1					
ANR	1247306	IdentifierDeclStatement	"int update_interval = param_integer ( ""DEFRAG_UPDATE_INTERVAL"" , 600 ) ;"	166:1:4955:5021	1246740	28	True				
ANR	1247307	IdentifierDecl	"update_interval = param_integer ( ""DEFRAG_UPDATE_INTERVAL"" , 600 )"		1246740	0					
ANR	1247308	IdentifierDeclType	int		1246740	0					
ANR	1247309	Identifier	update_interval		1246740	1					
ANR	1247310	AssignmentExpression	"update_interval = param_integer ( ""DEFRAG_UPDATE_INTERVAL"" , 600 )"		1246740	2		=			
ANR	1247311	Identifier	update_interval		1246740	0					
ANR	1247312	CallExpression	"param_integer ( ""DEFRAG_UPDATE_INTERVAL"" , 600 )"		1246740	1					
ANR	1247313	Callee	param_integer		1246740	0					
ANR	1247314	Identifier	param_integer		1246740	0					
ANR	1247315	ArgumentList	"""DEFRAG_UPDATE_INTERVAL"""		1246740	1					
ANR	1247316	Argument	"""DEFRAG_UPDATE_INTERVAL"""		1246740	0					
ANR	1247317	PrimaryExpression	"""DEFRAG_UPDATE_INTERVAL"""		1246740	0					
ANR	1247318	Argument	600		1246740	1					
ANR	1247319	PrimaryExpression	600		1246740	0					
ANR	1247320	IfStatement	if ( m_public_ad_update_interval != update_interval )		1246740	29					
ANR	1247321	Condition	m_public_ad_update_interval != update_interval	167:4:5027:5072	1246740	0	True				
ANR	1247322	EqualityExpression	m_public_ad_update_interval != update_interval		1246740	0		!=			
ANR	1247323	Identifier	m_public_ad_update_interval		1246740	0					
ANR	1247324	Identifier	update_interval		1246740	1					
ANR	1247325	CompoundStatement		101:52:3381:3381	1246740	1					
ANR	1247326	ExpressionStatement	m_public_ad_update_interval = update_interval	168:2:5079:5124	1246740	0	True				
ANR	1247327	AssignmentExpression	m_public_ad_update_interval = update_interval		1246740	0		=			
ANR	1247328	Identifier	m_public_ad_update_interval		1246740	0					
ANR	1247329	Identifier	update_interval		1246740	1					
ANR	1247330	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Setting update interval to %d\\n"" , m_public_ad_update_interval )"	170:2:5129:5216	1246740	1	True				
ANR	1247331	CallExpression	"dprintf ( D_FULLDEBUG , ""Setting update interval to %d\\n"" , m_public_ad_update_interval )"		1246740	0					
ANR	1247332	Callee	dprintf		1246740	0					
ANR	1247333	Identifier	dprintf		1246740	0					
ANR	1247334	ArgumentList	D_FULLDEBUG		1246740	1					
ANR	1247335	Argument	D_FULLDEBUG		1246740	0					
ANR	1247336	Identifier	D_FULLDEBUG		1246740	0					
ANR	1247337	Argument	"""Setting update interval to %d\\n"""		1246740	1					
ANR	1247338	PrimaryExpression	"""Setting update interval to %d\\n"""		1246740	0					
ANR	1247339	Argument	m_public_ad_update_interval		1246740	2					
ANR	1247340	Identifier	m_public_ad_update_interval		1246740	0					
ANR	1247341	IfStatement	if ( m_public_ad_update_timer >= 0 )		1246740	2					
ANR	1247342	Condition	m_public_ad_update_timer >= 0	173:5:5224:5252	1246740	0	True				
ANR	1247343	RelationalExpression	m_public_ad_update_timer >= 0		1246740	0		>=			
ANR	1247344	Identifier	m_public_ad_update_timer		1246740	0					
ANR	1247345	PrimaryExpression	0		1246740	1					
ANR	1247346	CompoundStatement		107:36:3561:3561	1246740	1					
ANR	1247347	ExpressionStatement	"daemonCore -> Reset_Timer_Period ( m_public_ad_update_timer , m_public_ad_update_interval )"	174:3:5260:5354	1246740	0	True				
ANR	1247348	CallExpression	"daemonCore -> Reset_Timer_Period ( m_public_ad_update_timer , m_public_ad_update_interval )"		1246740	0					
ANR	1247349	Callee	daemonCore -> Reset_Timer_Period		1246740	0					
ANR	1247350	PtrMemberAccess	daemonCore -> Reset_Timer_Period		1246740	0					
ANR	1247351	Identifier	daemonCore		1246740	0					
ANR	1247352	Identifier	Reset_Timer_Period		1246740	1					
ANR	1247353	ArgumentList	m_public_ad_update_timer		1246740	1					
ANR	1247354	Argument	m_public_ad_update_timer		1246740	0					
ANR	1247355	Identifier	m_public_ad_update_timer		1246740	0					
ANR	1247356	Argument	m_public_ad_update_interval		1246740	1					
ANR	1247357	Identifier	m_public_ad_update_interval		1246740	0					
ANR	1247358	ElseStatement	else		1246740	0					
ANR	1247359	CompoundStatement		112:7:3673:3673	1246740	0					
ANR	1247360	ExpressionStatement	"m_public_ad_update_timer = daemonCore -> Register_Timer ( 0 , m_public_ad_update_interval , ( TimerHandlercpp ) & Defrag :: updateCollector , ""Defrag::updateCollector"" , this )"	179:3:5372:5554	1246740	0	True				
ANR	1247361	AssignmentExpression	"m_public_ad_update_timer = daemonCore -> Register_Timer ( 0 , m_public_ad_update_interval , ( TimerHandlercpp ) & Defrag :: updateCollector , ""Defrag::updateCollector"" , this )"		1246740	0		=			
ANR	1247362	Identifier	m_public_ad_update_timer		1246740	0					
ANR	1247363	CallExpression	"daemonCore -> Register_Timer ( 0 , m_public_ad_update_interval , ( TimerHandlercpp ) & Defrag :: updateCollector , ""Defrag::updateCollector"" , this )"		1246740	1					
ANR	1247364	Callee	daemonCore -> Register_Timer		1246740	0					
ANR	1247365	PtrMemberAccess	daemonCore -> Register_Timer		1246740	0					
ANR	1247366	Identifier	daemonCore		1246740	0					
ANR	1247367	Identifier	Register_Timer		1246740	1					
ANR	1247368	ArgumentList	0		1246740	1					
ANR	1247369	Argument	0		1246740	0					
ANR	1247370	PrimaryExpression	0		1246740	0					
ANR	1247371	Argument	m_public_ad_update_interval		1246740	1					
ANR	1247372	Identifier	m_public_ad_update_interval		1246740	0					
ANR	1247373	Argument	( TimerHandlercpp ) & Defrag :: updateCollector		1246740	2					
ANR	1247374	CastExpression	( TimerHandlercpp ) & Defrag :: updateCollector		1246740	0					
ANR	1247375	CastTarget	TimerHandlercpp		1246740	0					
ANR	1247376	UnaryOperationExpression	& Defrag :: updateCollector		1246740	1					
ANR	1247377	UnaryOperator	&		1246740	0					
ANR	1247378	Identifier	Defrag :: updateCollector		1246740	1					
ANR	1247379	Argument	"""Defrag::updateCollector"""		1246740	3					
ANR	1247380	PrimaryExpression	"""Defrag::updateCollector"""		1246740	0					
ANR	1247381	Argument	this		1246740	4					
ANR	1247382	Identifier	this		1246740	0					
ANR	1247383	ExpressionStatement	"param ( m_defrag_name , ""DEFRAG_NAME"" )"	188:1:5565:5599	1246740	30	True				
ANR	1247384	CallExpression	"param ( m_defrag_name , ""DEFRAG_NAME"" )"		1246740	0					
ANR	1247385	Callee	param		1246740	0					
ANR	1247386	Identifier	param		1246740	0					
ANR	1247387	ArgumentList	m_defrag_name		1246740	1					
ANR	1247388	Argument	m_defrag_name		1246740	0					
ANR	1247389	Identifier	m_defrag_name		1246740	0					
ANR	1247390	Argument	"""DEFRAG_NAME"""		1246740	1					
ANR	1247391	PrimaryExpression	"""DEFRAG_NAME"""		1246740	0					
ANR	1247392	IdentifierDeclStatement	int stats_quantum = m_polling_interval ;	190:1:5603:5641	1246740	31	True				
ANR	1247393	IdentifierDecl	stats_quantum = m_polling_interval		1246740	0					
ANR	1247394	IdentifierDeclType	int		1246740	0					
ANR	1247395	Identifier	stats_quantum		1246740	1					
ANR	1247396	AssignmentExpression	stats_quantum = m_polling_interval		1246740	2		=			
ANR	1247397	Identifier	m_polling_interval		1246740	0					
ANR	1247398	Identifier	m_polling_interval		1246740	1					
ANR	1247399	IdentifierDeclStatement	int stats_window = 10 * stats_quantum ;	191:1:5644:5679	1246740	32	True				
ANR	1247400	IdentifierDecl	stats_window = 10 * stats_quantum		1246740	0					
ANR	1247401	IdentifierDeclType	int		1246740	0					
ANR	1247402	Identifier	stats_window		1246740	1					
ANR	1247403	AssignmentExpression	stats_window = 10 * stats_quantum		1246740	2		=			
ANR	1247404	Identifier	stats_window		1246740	0					
ANR	1247405	MultiplicativeExpression	10 * stats_quantum		1246740	1		*			
ANR	1247406	PrimaryExpression	10		1246740	0					
ANR	1247407	Identifier	stats_quantum		1246740	1					
ANR	1247408	ExpressionStatement	"m_stats . SetWindowSize ( stats_window , stats_quantum )"	192:1:5682:5731	1246740	33	True				
ANR	1247409	CallExpression	"m_stats . SetWindowSize ( stats_window , stats_quantum )"		1246740	0					
ANR	1247410	Callee	m_stats . SetWindowSize		1246740	0					
ANR	1247411	MemberAccess	m_stats . SetWindowSize		1246740	0					
ANR	1247412	Identifier	m_stats		1246740	0					
ANR	1247413	Identifier	SetWindowSize		1246740	1					
ANR	1247414	ArgumentList	stats_window		1246740	1					
ANR	1247415	Argument	stats_window		1246740	0					
ANR	1247416	Identifier	stats_window		1246740	0					
ANR	1247417	Argument	stats_quantum		1246740	1					
ANR	1247418	Identifier	stats_quantum		1246740	0					
ANR	1247419	ReturnType	void		1246740	1					
ANR	1247420	Identifier	Defrag :: config		1246740	2					
ANR	1247421	ParameterList			1246740	3					
ANR	1247422	CFGEntryNode	ENTRY		1246740		True				
ANR	1247423	CFGExitNode	EXIT		1246740		True				
ANR	1247424	Symbol	m_draining_schedule_str . c_str		1246740						
ANR	1247425	Symbol	param_double		1246740						
ANR	1247426	Symbol	m_rank_ad . AssignExpr		1246740						
ANR	1247427	Symbol	stats_quantum		1246740						
ANR	1247428	Symbol	m_draining_per_poll_hour		1246740						
ANR	1247429	Symbol	m_state_file		1246740						
ANR	1247430	Symbol	first_time		1246740						
ANR	1247431	Symbol	error_per_hour		1246740						
ANR	1247432	Symbol	rank		1246740						
ANR	1247433	Symbol	rank . Value		1246740						
ANR	1247434	Symbol	& Defrag :: updateCollector		1246740						
ANR	1247435	Symbol	NULL		1246740						
ANR	1247436	Symbol	m_draining_schedule		1246740						
ANR	1247437	Symbol	m_public_ad_update_interval		1246740						
ANR	1247438	Symbol	& Defrag :: poll		1246740						
ANR	1247439	Symbol	ATTR_RANK		1246740						
ANR	1247440	Symbol	this		1246740						
ANR	1247441	Symbol	D_FULLDEBUG		1246740						
ANR	1247442	Symbol	old_polling_interval		1246740						
ANR	1247443	Symbol	DRAIN_GRACEFUL		1246740						
ANR	1247444	Symbol	* daemonCore		1246740						
ANR	1247445	Symbol	update_interval		1246740						
ANR	1247446	Symbol	daemonCore -> Register_Timer		1246740						
ANR	1247447	Symbol	param_integer		1246740						
ANR	1247448	Symbol	m_rank_ad		1246740						
ANR	1247449	Symbol	getDrainingScheduleNum		1246740						
ANR	1247450	Symbol	m_defrag_requirements . c_str		1246740						
ANR	1247451	Symbol	m_draining_per_poll		1246740						
ANR	1247452	Symbol	error_per_day		1246740						
ANR	1247453	Symbol	param		1246740						
ANR	1247454	Symbol	rate		1246740						
ANR	1247455	Symbol	m_last_poll		1246740						
ANR	1247456	Symbol	m_polling_interval		1246740						
ANR	1247457	Symbol	m_draining_per_poll_day		1246740						
ANR	1247458	Symbol	daemonCore		1246740						
ANR	1247459	Symbol	now		1246740						
ANR	1247460	Symbol	m_whole_machine_expr . c_str		1246740						
ANR	1247461	Symbol	m_polling_timer		1246740						
ANR	1247462	Symbol	floor		1246740						
ANR	1247463	Symbol	m_max_draining		1246740						
ANR	1247464	Symbol	m_draining_schedule_str		1246740						
ANR	1247465	Symbol	m_stats		1246740						
ANR	1247466	Symbol	rank . IsEmpty		1246740						
ANR	1247467	Symbol	D_ALWAYS		1246740						
ANR	1247468	Symbol	m_defrag_requirements		1246740						
ANR	1247469	Symbol	m_draining_schedule_str . empty		1246740						
ANR	1247470	Symbol	m_public_ad_update_timer		1246740						
ANR	1247471	Symbol	m_draining_per_hour		1246740						
ANR	1247472	Symbol	m_max_whole_machines		1246740						
ANR	1247473	Symbol	m_whole_machine_expr		1246740						
ANR	1247474	Symbol	stats_window		1246740						
ANR	1247475	Symbol	m_defrag_name		1246740						
ANR	1247476	Symbol	time		1246740						
ANR	1247477	Function	Defrag :: stop	195:0:5736:5861							
ANR	1247478	FunctionDef	Defrag :: stop ()		1247477	0					
ANR	1247479	CompoundStatement		196:0:5756:5861	1247477	0					
ANR	1247480	IfStatement	if ( m_polling_timer != - 1 )		1247477	0					
ANR	1247481	Condition	m_polling_timer != - 1	197:5:5763:5783	1247477	0	True				
ANR	1247482	EqualityExpression	m_polling_timer != - 1		1247477	0		!=			
ANR	1247483	Identifier	m_polling_timer		1247477	0					
ANR	1247484	UnaryOperationExpression	- 1		1247477	1					
ANR	1247485	UnaryOperator	-		1247477	0					
ANR	1247486	PrimaryExpression	1		1247477	1					
ANR	1247487	CompoundStatement		2:29:30:30	1247477	1					
ANR	1247488	ExpressionStatement	daemonCore -> Cancel_Timer ( m_polling_timer )	198:2:5791:5832	1247477	0	True				
ANR	1247489	CallExpression	daemonCore -> Cancel_Timer ( m_polling_timer )		1247477	0					
ANR	1247490	Callee	daemonCore -> Cancel_Timer		1247477	0					
ANR	1247491	PtrMemberAccess	daemonCore -> Cancel_Timer		1247477	0					
ANR	1247492	Identifier	daemonCore		1247477	0					
ANR	1247493	Identifier	Cancel_Timer		1247477	1					
ANR	1247494	ArgumentList	m_polling_timer		1247477	1					
ANR	1247495	Argument	m_polling_timer		1247477	0					
ANR	1247496	Identifier	m_polling_timer		1247477	0					
ANR	1247497	ExpressionStatement	m_polling_timer = - 1	199:2:5836:5856	1247477	1	True				
ANR	1247498	AssignmentExpression	m_polling_timer = - 1		1247477	0		=			
ANR	1247499	Identifier	m_polling_timer		1247477	0					
ANR	1247500	UnaryOperationExpression	- 1		1247477	1					
ANR	1247501	UnaryOperator	-		1247477	0					
ANR	1247502	PrimaryExpression	1		1247477	1					
ANR	1247503	ReturnType	void		1247477	1					
ANR	1247504	Identifier	Defrag :: stop		1247477	2					
ANR	1247505	ParameterList			1247477	3					
ANR	1247506	CFGEntryNode	ENTRY		1247477		True				
ANR	1247507	CFGExitNode	EXIT		1247477		True				
ANR	1247508	Symbol	daemonCore		1247477						
ANR	1247509	Symbol	m_polling_timer		1247477						
ANR	1247510	Function	StartdSortFunc	203:0:5864:6112							
ANR	1247511	FunctionDef	"StartdSortFunc (ClassAd * ad1 , ClassAd * ad2 , void * data)"		1247510	0					
ANR	1247512	CompoundStatement		204:0:5928:6112	1247510	0					
ANR	1247513	IdentifierDeclStatement	ClassAd * rank_ad = ( ClassAd * ) data ;	205:1:5931:5965	1247510	0	True				
ANR	1247514	IdentifierDecl	* rank_ad = ( ClassAd * ) data		1247510	0					
ANR	1247515	IdentifierDeclType	ClassAd *		1247510	0					
ANR	1247516	Identifier	rank_ad		1247510	1					
ANR	1247517	AssignmentExpression	* rank_ad = ( ClassAd * ) data		1247510	2		=			
ANR	1247518	Identifier	rank_ad		1247510	0					
ANR	1247519	CastExpression	( ClassAd * ) data		1247510	1					
ANR	1247520	CastTarget	ClassAd *		1247510	0					
ANR	1247521	Identifier	data		1247510	1					
ANR	1247522	IdentifierDeclStatement	float rank1 = 0 ;	207:1:5969:5984	1247510	1	True				
ANR	1247523	IdentifierDecl	rank1 = 0		1247510	0					
ANR	1247524	IdentifierDeclType	float		1247510	0					
ANR	1247525	Identifier	rank1		1247510	1					
ANR	1247526	AssignmentExpression	rank1 = 0		1247510	2		=			
ANR	1247527	Identifier	rank1		1247510	0					
ANR	1247528	PrimaryExpression	0		1247510	1					
ANR	1247529	IdentifierDeclStatement	float rank2 = 0 ;	208:1:5987:6002	1247510	2	True				
ANR	1247530	IdentifierDecl	rank2 = 0		1247510	0					
ANR	1247531	IdentifierDeclType	float		1247510	0					
ANR	1247532	Identifier	rank2		1247510	1					
ANR	1247533	AssignmentExpression	rank2 = 0		1247510	2		=			
ANR	1247534	Identifier	rank2		1247510	0					
ANR	1247535	PrimaryExpression	0		1247510	1					
ANR	1247536	ExpressionStatement	"rank_ad -> EvalFloat ( ATTR_RANK , ad1 , rank1 )"	209:1:6005:6044	1247510	3	True				
ANR	1247537	CallExpression	"rank_ad -> EvalFloat ( ATTR_RANK , ad1 , rank1 )"		1247510	0					
ANR	1247538	Callee	rank_ad -> EvalFloat		1247510	0					
ANR	1247539	PtrMemberAccess	rank_ad -> EvalFloat		1247510	0					
ANR	1247540	Identifier	rank_ad		1247510	0					
ANR	1247541	Identifier	EvalFloat		1247510	1					
ANR	1247542	ArgumentList	ATTR_RANK		1247510	1					
ANR	1247543	Argument	ATTR_RANK		1247510	0					
ANR	1247544	Identifier	ATTR_RANK		1247510	0					
ANR	1247545	Argument	ad1		1247510	1					
ANR	1247546	Identifier	ad1		1247510	0					
ANR	1247547	Argument	rank1		1247510	2					
ANR	1247548	Identifier	rank1		1247510	0					
ANR	1247549	ExpressionStatement	"rank_ad -> EvalFloat ( ATTR_RANK , ad2 , rank2 )"	210:1:6047:6086	1247510	4	True				
ANR	1247550	CallExpression	"rank_ad -> EvalFloat ( ATTR_RANK , ad2 , rank2 )"		1247510	0					
ANR	1247551	Callee	rank_ad -> EvalFloat		1247510	0					
ANR	1247552	PtrMemberAccess	rank_ad -> EvalFloat		1247510	0					
ANR	1247553	Identifier	rank_ad		1247510	0					
ANR	1247554	Identifier	EvalFloat		1247510	1					
ANR	1247555	ArgumentList	ATTR_RANK		1247510	1					
ANR	1247556	Argument	ATTR_RANK		1247510	0					
ANR	1247557	Identifier	ATTR_RANK		1247510	0					
ANR	1247558	Argument	ad2		1247510	1					
ANR	1247559	Identifier	ad2		1247510	0					
ANR	1247560	Argument	rank2		1247510	2					
ANR	1247561	Identifier	rank2		1247510	0					
ANR	1247562	ReturnStatement	return rank1 > rank2 ;	212:1:6090:6110	1247510	5	True				
ANR	1247563	RelationalExpression	rank1 > rank2		1247510	0		>			
ANR	1247564	Identifier	rank1		1247510	0					
ANR	1247565	Identifier	rank2		1247510	1					
ANR	1247566	ReturnType	static int		1247510	1					
ANR	1247567	Identifier	StartdSortFunc		1247510	2					
ANR	1247568	ParameterList	"ClassAd * ad1 , ClassAd * ad2 , void * data"		1247510	3					
ANR	1247569	Parameter	ClassAd * ad1	203:26:5890:5901	1247510	0	True				
ANR	1247570	ParameterType	ClassAd *		1247510	0					
ANR	1247571	Identifier	ad1		1247510	1					
ANR	1247572	Parameter	ClassAd * ad2	203:39:5903:5914	1247510	1	True				
ANR	1247573	ParameterType	ClassAd *		1247510	0					
ANR	1247574	Identifier	ad2		1247510	1					
ANR	1247575	Parameter	void * data	203:52:5916:5925	1247510	2	True				
ANR	1247576	ParameterType	void *		1247510	0					
ANR	1247577	Identifier	data		1247510	1					
ANR	1247578	CFGEntryNode	ENTRY		1247510		True				
ANR	1247579	CFGExitNode	EXIT		1247510		True				
ANR	1247580	Symbol	rank1		1247510						
ANR	1247581	Symbol	rank2		1247510						
ANR	1247582	Symbol	data		1247510						
ANR	1247583	Symbol	ATTR_RANK		1247510						
ANR	1247584	Symbol	rank_ad		1247510						
ANR	1247585	Symbol	ad2		1247510						
ANR	1247586	Symbol	ad1		1247510						
ANR	1247587	Function	Defrag :: validateExpr	215:0:6115:6420							
ANR	1247588	FunctionDef	"Defrag :: validateExpr (char const * constraint , char const * constraint_source)"		1247587	0					
ANR	1247589	CompoundStatement		216:0:6195:6420	1247587	0					
ANR	1247590	IdentifierDeclStatement	ExprTree * requirements = NULL ;	217:1:6198:6227	1247587	0	True				
ANR	1247591	IdentifierDecl	* requirements = NULL		1247587	0					
ANR	1247592	IdentifierDeclType	ExprTree *		1247587	0					
ANR	1247593	Identifier	requirements		1247587	1					
ANR	1247594	AssignmentExpression	* requirements = NULL		1247587	2		=			
ANR	1247595	Identifier	NULL		1247587	0					
ANR	1247596	Identifier	NULL		1247587	1					
ANR	1247597	IfStatement	"if ( ParseClassAdRvalExpr ( constraint , requirements ) != 0 || requirements == NULL )"		1247587	1					
ANR	1247598	Condition	"ParseClassAdRvalExpr ( constraint , requirements ) != 0 || requirements == NULL"	219:5:6235:6307	1247587	0	True				
ANR	1247599	OrExpression	"ParseClassAdRvalExpr ( constraint , requirements ) != 0 || requirements == NULL"		1247587	0		||			
ANR	1247600	EqualityExpression	"ParseClassAdRvalExpr ( constraint , requirements ) != 0"		1247587	0		!=			
ANR	1247601	CallExpression	"ParseClassAdRvalExpr ( constraint , requirements )"		1247587	0					
ANR	1247602	Callee	ParseClassAdRvalExpr		1247587	0					
ANR	1247603	Identifier	ParseClassAdRvalExpr		1247587	0					
ANR	1247604	ArgumentList	constraint		1247587	1					
ANR	1247605	Argument	constraint		1247587	0					
ANR	1247606	Identifier	constraint		1247587	0					
ANR	1247607	Argument	requirements		1247587	1					
ANR	1247608	Identifier	requirements		1247587	0					
ANR	1247609	PrimaryExpression	0		1247587	1					
ANR	1247610	EqualityExpression	requirements == NULL		1247587	1		==			
ANR	1247611	Identifier	requirements		1247587	0					
ANR	1247612	Identifier	NULL		1247587	1					
ANR	1247613	CompoundStatement		5:1:116:116	1247587	1					
ANR	1247614	ExpressionStatement	"EXCEPT ( ""Invalid expression for %s: %s\\n"" , constraint_source , constraint )"	221:2:6316:6393	1247587	0	True				
ANR	1247615	CallExpression	"EXCEPT ( ""Invalid expression for %s: %s\\n"" , constraint_source , constraint )"		1247587	0					
ANR	1247616	Callee	EXCEPT		1247587	0					
ANR	1247617	Identifier	EXCEPT		1247587	0					
ANR	1247618	ArgumentList	"""Invalid expression for %s: %s\\n"""		1247587	1					
ANR	1247619	Argument	"""Invalid expression for %s: %s\\n"""		1247587	0					
ANR	1247620	PrimaryExpression	"""Invalid expression for %s: %s\\n"""		1247587	0					
ANR	1247621	Argument	constraint_source		1247587	1					
ANR	1247622	Identifier	constraint_source		1247587	0					
ANR	1247623	Argument	constraint		1247587	2					
ANR	1247624	Identifier	constraint		1247587	0					
ANR	1247625	Statement	delete	224:1:6399:6404	1247587	2	True				
ANR	1247626	ExpressionStatement	requirements	224:8:6406:6418	1247587	3	True				
ANR	1247627	Identifier	requirements		1247587	0					
ANR	1247628	ReturnType	void		1247587	1					
ANR	1247629	Identifier	Defrag :: validateExpr		1247587	2					
ANR	1247630	ParameterList	"char const * constraint , char const * constraint_source"		1247587	3					
ANR	1247631	Parameter	char const * constraint	215:26:6141:6162	1247587	0	True				
ANR	1247632	ParameterType	char const *		1247587	0					
ANR	1247633	Identifier	constraint		1247587	1					
ANR	1247634	Parameter	char const * constraint_source	215:49:6164:6192	1247587	1	True				
ANR	1247635	ParameterType	char const *		1247587	0					
ANR	1247636	Identifier	constraint_source		1247587	1					
ANR	1247637	CFGEntryNode	ENTRY		1247587		True				
ANR	1247638	CFGExitNode	EXIT		1247587		True				
ANR	1247639	Symbol	requirements		1247587						
ANR	1247640	Symbol	NULL		1247587						
ANR	1247641	Symbol	constraint_source		1247587						
ANR	1247642	Symbol	ParseClassAdRvalExpr		1247587						
ANR	1247643	Symbol	constraint		1247587						
ANR	1247644	Function	Defrag :: queryMachines	227:0:6423:7134							
ANR	1247645	FunctionDef	"Defrag :: queryMachines (char const * constraint , char const * constraint_source , ClassAdList & startdAds)"		1247644	0					
ANR	1247646	CompoundStatement		228:0:6527:7134	1247644	0					
ANR	1247647	IdentifierDeclStatement	CondorQuery startdQuery ( STARTD_AD ) ;	229:1:6530:6564	1247644	0	True				
ANR	1247648	IdentifierDecl	startdQuery ( STARTD_AD )		1247644	0					
ANR	1247649	IdentifierDeclType	CondorQuery		1247644	0					
ANR	1247650	Identifier	startdQuery		1247644	1					
ANR	1247651	Identifier	STARTD_AD		1247644	2					
ANR	1247652	ExpressionStatement	"validateExpr ( constraint , constraint_source )"	231:1:6568:6610	1247644	1	True				
ANR	1247653	CallExpression	"validateExpr ( constraint , constraint_source )"		1247644	0					
ANR	1247654	Callee	validateExpr		1247644	0					
ANR	1247655	Identifier	validateExpr		1247644	0					
ANR	1247656	ArgumentList	constraint		1247644	1					
ANR	1247657	Argument	constraint		1247644	0					
ANR	1247658	Identifier	constraint		1247644	0					
ANR	1247659	Argument	constraint_source		1247644	1					
ANR	1247660	Identifier	constraint_source		1247644	0					
ANR	1247661	ExpressionStatement	startdQuery . addANDConstraint ( constraint )	232:1:6613:6653	1247644	2	True				
ANR	1247662	CallExpression	startdQuery . addANDConstraint ( constraint )		1247644	0					
ANR	1247663	Callee	startdQuery . addANDConstraint		1247644	0					
ANR	1247664	MemberAccess	startdQuery . addANDConstraint		1247644	0					
ANR	1247665	Identifier	startdQuery		1247644	0					
ANR	1247666	Identifier	addANDConstraint		1247644	1					
ANR	1247667	ArgumentList	constraint		1247644	1					
ANR	1247668	Argument	constraint		1247644	0					
ANR	1247669	Identifier	constraint		1247644	0					
ANR	1247670	IdentifierDeclStatement	CollectorList * collects = daemonCore -> getCollectorList ( ) ;	234:1:6657:6713	1247644	3	True				
ANR	1247671	IdentifierDecl	* collects = daemonCore -> getCollectorList ( )		1247644	0					
ANR	1247672	IdentifierDeclType	CollectorList *		1247644	0					
ANR	1247673	Identifier	collects		1247644	1					
ANR	1247674	AssignmentExpression	* collects = daemonCore -> getCollectorList ( )		1247644	2		=			
ANR	1247675	Identifier	collects		1247644	0					
ANR	1247676	CallExpression	daemonCore -> getCollectorList ( )		1247644	1					
ANR	1247677	Callee	daemonCore -> getCollectorList		1247644	0					
ANR	1247678	PtrMemberAccess	daemonCore -> getCollectorList		1247644	0					
ANR	1247679	Identifier	daemonCore		1247644	0					
ANR	1247680	Identifier	getCollectorList		1247644	1					
ANR	1247681	ArgumentList			1247644	1					
ANR	1247682	ExpressionStatement	ASSERT ( collects )	235:1:6716:6734	1247644	4	True				
ANR	1247683	CallExpression	ASSERT ( collects )		1247644	0					
ANR	1247684	Callee	ASSERT		1247644	0					
ANR	1247685	Identifier	ASSERT		1247644	0					
ANR	1247686	ArgumentList	collects		1247644	1					
ANR	1247687	Argument	collects		1247644	0					
ANR	1247688	Identifier	collects		1247644	0					
ANR	1247689	IdentifierDeclStatement	QueryResult result ;	237:1:6738:6756	1247644	5	True				
ANR	1247690	IdentifierDecl	result		1247644	0					
ANR	1247691	IdentifierDeclType	QueryResult		1247644	0					
ANR	1247692	Identifier	result		1247644	1					
ANR	1247693	ExpressionStatement	"result = collects -> query ( startdQuery , startdAds )"	238:1:6759:6806	1247644	6	True				
ANR	1247694	AssignmentExpression	"result = collects -> query ( startdQuery , startdAds )"		1247644	0		=			
ANR	1247695	Identifier	result		1247644	0					
ANR	1247696	CallExpression	"collects -> query ( startdQuery , startdAds )"		1247644	1					
ANR	1247697	Callee	collects -> query		1247644	0					
ANR	1247698	PtrMemberAccess	collects -> query		1247644	0					
ANR	1247699	Identifier	collects		1247644	0					
ANR	1247700	Identifier	query		1247644	1					
ANR	1247701	ArgumentList	startdQuery		1247644	1					
ANR	1247702	Argument	startdQuery		1247644	0					
ANR	1247703	Identifier	startdQuery		1247644	0					
ANR	1247704	Argument	startdAds		1247644	1					
ANR	1247705	Identifier	startdAds		1247644	0					
ANR	1247706	IfStatement	if ( result != Q_OK )		1247644	7					
ANR	1247707	Condition	result != Q_OK	239:5:6813:6826	1247644	0	True				
ANR	1247708	EqualityExpression	result != Q_OK		1247644	0		!=			
ANR	1247709	Identifier	result		1247644	0					
ANR	1247710	Identifier	Q_OK		1247644	1					
ANR	1247711	CompoundStatement		12:22:302:302	1247644	1					
ANR	1247712	Statement	dprintf	240:2:6834:6840	1247644	0	True				
ANR	1247713	Statement	(	240:9:6841:6841	1247644	1	True				
ANR	1247714	Statement	D_ALWAYS	240:10:6842:6849	1247644	2	True				
ANR	1247715	Statement	","	240:18:6850:6850	1247644	3	True				
ANR	1247716	Statement	"""Couldn't fetch startd ads using constraint """	241:4:6856:6900	1247644	4	True				
ANR	1247717	Statement	"""%s=%s: %s\\n"""	242:4:6906:6918	1247644	5	True				
ANR	1247718	Statement	","	242:17:6919:6919	1247644	6	True				
ANR	1247719	Statement	constraint_source	243:4:6925:6941	1247644	7	True				
ANR	1247720	Statement	","	243:21:6942:6942	1247644	8	True				
ANR	1247721	Statement	constraint	243:22:6943:6952	1247644	9	True				
ANR	1247722	Statement	","	243:32:6953:6953	1247644	10	True				
ANR	1247723	Statement	getStrQueryResult	243:34:6955:6971	1247644	11	True				
ANR	1247724	Statement	(	243:51:6972:6972	1247644	12	True				
ANR	1247725	Statement	result	243:52:6973:6978	1247644	13	True				
ANR	1247726	Statement	)	243:58:6979:6979	1247644	14	True				
ANR	1247727	Statement	)	243:59:6980:6980	1247644	15	True				
ANR	1247728	ExpressionStatement		243:60:6981:6981	1247644	16	True				
ANR	1247729	ReturnStatement	return false ;	244:2:6985:6997	1247644	17	True				
ANR	1247730	Identifier	false		1247644	0					
ANR	1247731	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Got %d startd ads matching %s=%s\\n"" , startdAds . MyLength ( ) , constraint_source , constraint )"	247:1:7004:7117	1247644	8	True				
ANR	1247732	CallExpression	"dprintf ( D_FULLDEBUG , ""Got %d startd ads matching %s=%s\\n"" , startdAds . MyLength ( ) , constraint_source , constraint )"		1247644	0					
ANR	1247733	Callee	dprintf		1247644	0					
ANR	1247734	Identifier	dprintf		1247644	0					
ANR	1247735	ArgumentList	D_FULLDEBUG		1247644	1					
ANR	1247736	Argument	D_FULLDEBUG		1247644	0					
ANR	1247737	Identifier	D_FULLDEBUG		1247644	0					
ANR	1247738	Argument	"""Got %d startd ads matching %s=%s\\n"""		1247644	1					
ANR	1247739	PrimaryExpression	"""Got %d startd ads matching %s=%s\\n"""		1247644	0					
ANR	1247740	Argument	startdAds . MyLength ( )		1247644	2					
ANR	1247741	CallExpression	startdAds . MyLength ( )		1247644	0					
ANR	1247742	Callee	startdAds . MyLength		1247644	0					
ANR	1247743	MemberAccess	startdAds . MyLength		1247644	0					
ANR	1247744	Identifier	startdAds		1247644	0					
ANR	1247745	Identifier	MyLength		1247644	1					
ANR	1247746	ArgumentList			1247644	1					
ANR	1247747	Argument	constraint_source		1247644	3					
ANR	1247748	Identifier	constraint_source		1247644	0					
ANR	1247749	Argument	constraint		1247644	4					
ANR	1247750	Identifier	constraint		1247644	0					
ANR	1247751	ReturnStatement	return true ;	250:1:7121:7132	1247644	9	True				
ANR	1247752	Identifier	true		1247644	0					
ANR	1247753	ReturnType	bool		1247644	1					
ANR	1247754	Identifier	Defrag :: queryMachines		1247644	2					
ANR	1247755	ParameterList	"char const * constraint , char const * constraint_source , ClassAdList & startdAds"		1247644	3					
ANR	1247756	Parameter	char const * constraint	227:27:6450:6471	1247644	0	True				
ANR	1247757	ParameterType	char const *		1247644	0					
ANR	1247758	Identifier	constraint		1247644	1					
ANR	1247759	Parameter	char const * constraint_source	227:50:6473:6501	1247644	1	True				
ANR	1247760	ParameterType	char const *		1247644	0					
ANR	1247761	Identifier	constraint_source		1247644	1					
ANR	1247762	Parameter	ClassAdList & startdAds	227:80:6503:6524	1247644	2	True				
ANR	1247763	ParameterType	ClassAdList &		1247644	0					
ANR	1247764	Identifier	startdAds		1247644	1					
ANR	1247765	CFGEntryNode	ENTRY		1247644		True				
ANR	1247766	CFGExitNode	EXIT		1247644		True				
ANR	1247767	Symbol	daemonCore -> getCollectorList		1247644						
ANR	1247768	Symbol	false		1247644						
ANR	1247769	Symbol	D_FULLDEBUG		1247644						
ANR	1247770	Symbol	Q_OK		1247644						
ANR	1247771	Symbol	result		1247644						
ANR	1247772	Symbol	* collects		1247644						
ANR	1247773	Symbol	startdAds		1247644						
ANR	1247774	Symbol	collects -> query		1247644						
ANR	1247775	Symbol	startdAds . MyLength		1247644						
ANR	1247776	Symbol	constraint_source		1247644						
ANR	1247777	Symbol	* daemonCore		1247644						
ANR	1247778	Symbol	daemonCore		1247644						
ANR	1247779	Symbol	true		1247644						
ANR	1247780	Symbol	constraint		1247644						
ANR	1247781	Symbol	startdQuery		1247644						
ANR	1247782	Symbol	collects		1247644						
ANR	1247783	Function	Defrag :: queryDrainingCost	253:0:7137:9343							
ANR	1247784	FunctionDef	Defrag :: queryDrainingCost ()		1247783	0					
ANR	1247785	CompoundStatement		255:0:7170:9343	1247783	0					
ANR	1247786	IdentifierDeclStatement	ClassAdList startdAds ;	256:1:7173:7194	1247783	0	True				
ANR	1247787	IdentifierDecl	startdAds		1247783	0					
ANR	1247788	IdentifierDeclType	ClassAdList		1247783	0					
ANR	1247789	Identifier	startdAds		1247783	1					
ANR	1247790	IdentifierDeclStatement	CondorQuery startdQuery ( STARTD_AD ) ;	257:1:7197:7231	1247783	1	True				
ANR	1247791	IdentifierDecl	startdQuery ( STARTD_AD )		1247783	0					
ANR	1247792	IdentifierDeclType	CondorQuery		1247783	0					
ANR	1247793	Identifier	startdQuery		1247783	1					
ANR	1247794	Identifier	STARTD_AD		1247783	2					
ANR	1247795	IdentifierDeclStatement	char const * desired_attrs [ 6 ] ;	258:1:7234:7262	1247783	2	True				
ANR	1247796	IdentifierDecl	* desired_attrs [ 6 ]		1247783	0					
ANR	1247797	IdentifierDeclType	char const * [ 6 ]		1247783	0					
ANR	1247798	Identifier	desired_attrs		1247783	1					
ANR	1247799	PrimaryExpression	6		1247783	2					
ANR	1247800	ExpressionStatement	desired_attrs [ 0 ] = ATTR_TOTAL_MACHINE_DRAINING_UNCLAIMED_TIME	259:1:7265:7326	1247783	3	True				
ANR	1247801	AssignmentExpression	desired_attrs [ 0 ] = ATTR_TOTAL_MACHINE_DRAINING_UNCLAIMED_TIME		1247783	0		=			
ANR	1247802	ArrayIndexing	desired_attrs [ 0 ]		1247783	0					
ANR	1247803	Identifier	desired_attrs		1247783	0					
ANR	1247804	PrimaryExpression	0		1247783	1					
ANR	1247805	Identifier	ATTR_TOTAL_MACHINE_DRAINING_UNCLAIMED_TIME		1247783	1					
ANR	1247806	ExpressionStatement	desired_attrs [ 1 ] = ATTR_TOTAL_MACHINE_DRAINING_BADPUT	260:1:7329:7382	1247783	4	True				
ANR	1247807	AssignmentExpression	desired_attrs [ 1 ] = ATTR_TOTAL_MACHINE_DRAINING_BADPUT		1247783	0		=			
ANR	1247808	ArrayIndexing	desired_attrs [ 1 ]		1247783	0					
ANR	1247809	Identifier	desired_attrs		1247783	0					
ANR	1247810	PrimaryExpression	1		1247783	1					
ANR	1247811	Identifier	ATTR_TOTAL_MACHINE_DRAINING_BADPUT		1247783	1					
ANR	1247812	ExpressionStatement	desired_attrs [ 2 ] = ATTR_DAEMON_START_TIME	261:1:7385:7426	1247783	5	True				
ANR	1247813	AssignmentExpression	desired_attrs [ 2 ] = ATTR_DAEMON_START_TIME		1247783	0		=			
ANR	1247814	ArrayIndexing	desired_attrs [ 2 ]		1247783	0					
ANR	1247815	Identifier	desired_attrs		1247783	0					
ANR	1247816	PrimaryExpression	2		1247783	1					
ANR	1247817	Identifier	ATTR_DAEMON_START_TIME		1247783	1					
ANR	1247818	ExpressionStatement	desired_attrs [ 3 ] = ATTR_TOTAL_CPUS	262:1:7429:7463	1247783	6	True				
ANR	1247819	AssignmentExpression	desired_attrs [ 3 ] = ATTR_TOTAL_CPUS		1247783	0		=			
ANR	1247820	ArrayIndexing	desired_attrs [ 3 ]		1247783	0					
ANR	1247821	Identifier	desired_attrs		1247783	0					
ANR	1247822	PrimaryExpression	3		1247783	1					
ANR	1247823	Identifier	ATTR_TOTAL_CPUS		1247783	1					
ANR	1247824	ExpressionStatement	desired_attrs [ 4 ] = ATTR_LAST_HEARD_FROM	263:1:7466:7505	1247783	7	True				
ANR	1247825	AssignmentExpression	desired_attrs [ 4 ] = ATTR_LAST_HEARD_FROM		1247783	0		=			
ANR	1247826	ArrayIndexing	desired_attrs [ 4 ]		1247783	0					
ANR	1247827	Identifier	desired_attrs		1247783	0					
ANR	1247828	PrimaryExpression	4		1247783	1					
ANR	1247829	Identifier	ATTR_LAST_HEARD_FROM		1247783	1					
ANR	1247830	ExpressionStatement	desired_attrs [ 5 ] = NULL	264:1:7508:7531	1247783	8	True				
ANR	1247831	AssignmentExpression	desired_attrs [ 5 ] = NULL		1247783	0		=			
ANR	1247832	ArrayIndexing	desired_attrs [ 5 ]		1247783	0					
ANR	1247833	Identifier	desired_attrs		1247783	0					
ANR	1247834	PrimaryExpression	5		1247783	1					
ANR	1247835	Identifier	NULL		1247783	1					
ANR	1247836	ExpressionStatement	startdQuery . setDesiredAttrs ( desired_attrs )	266:1:7535:7577	1247783	9	True				
ANR	1247837	CallExpression	startdQuery . setDesiredAttrs ( desired_attrs )		1247783	0					
ANR	1247838	Callee	startdQuery . setDesiredAttrs		1247783	0					
ANR	1247839	MemberAccess	startdQuery . setDesiredAttrs		1247783	0					
ANR	1247840	Identifier	startdQuery		1247783	0					
ANR	1247841	Identifier	setDesiredAttrs		1247783	1					
ANR	1247842	ArgumentList	desired_attrs		1247783	1					
ANR	1247843	Argument	desired_attrs		1247783	0					
ANR	1247844	Identifier	desired_attrs		1247783	0					
ANR	1247845	IdentifierDeclStatement	std :: string query ;	267:1:7580:7597	1247783	10	True				
ANR	1247846	IdentifierDecl	query		1247783	0					
ANR	1247847	IdentifierDeclType	std :: string		1247783	0					
ANR	1247848	Identifier	query		1247783	1					
ANR	1247849	ExpressionStatement	"sprintf ( query , ""%s==1 && (%s =!= undefined || %s =!= undefined)"" , ATTR_SLOT_ID , ATTR_TOTAL_MACHINE_DRAINING_UNCLAIMED_TIME , ATTR_TOTAL_MACHINE_DRAINING_BADPUT )"	269:1:7633:7800	1247783	11	True				
ANR	1247850	CallExpression	"sprintf ( query , ""%s==1 && (%s =!= undefined || %s =!= undefined)"" , ATTR_SLOT_ID , ATTR_TOTAL_MACHINE_DRAINING_UNCLAIMED_TIME , ATTR_TOTAL_MACHINE_DRAINING_BADPUT )"		1247783	0					
ANR	1247851	Callee	sprintf		1247783	0					
ANR	1247852	Identifier	sprintf		1247783	0					
ANR	1247853	ArgumentList	query		1247783	1					
ANR	1247854	Argument	query		1247783	0					
ANR	1247855	Identifier	query		1247783	0					
ANR	1247856	Argument	"""%s==1 && (%s =!= undefined || %s =!= undefined)"""		1247783	1					
ANR	1247857	PrimaryExpression	"""%s==1 && (%s =!= undefined || %s =!= undefined)"""		1247783	0					
ANR	1247858	Argument	ATTR_SLOT_ID		1247783	2					
ANR	1247859	Identifier	ATTR_SLOT_ID		1247783	0					
ANR	1247860	Argument	ATTR_TOTAL_MACHINE_DRAINING_UNCLAIMED_TIME		1247783	3					
ANR	1247861	Identifier	ATTR_TOTAL_MACHINE_DRAINING_UNCLAIMED_TIME		1247783	0					
ANR	1247862	Argument	ATTR_TOTAL_MACHINE_DRAINING_BADPUT		1247783	4					
ANR	1247863	Identifier	ATTR_TOTAL_MACHINE_DRAINING_BADPUT		1247783	0					
ANR	1247864	ExpressionStatement	startdQuery . addANDConstraint ( query . c_str ( ) )	273:1:7803:7846	1247783	12	True				
ANR	1247865	CallExpression	startdQuery . addANDConstraint ( query . c_str ( ) )		1247783	0					
ANR	1247866	Callee	startdQuery . addANDConstraint		1247783	0					
ANR	1247867	MemberAccess	startdQuery . addANDConstraint		1247783	0					
ANR	1247868	Identifier	startdQuery		1247783	0					
ANR	1247869	Identifier	addANDConstraint		1247783	1					
ANR	1247870	ArgumentList	query . c_str ( )		1247783	1					
ANR	1247871	Argument	query . c_str ( )		1247783	0					
ANR	1247872	CallExpression	query . c_str ( )		1247783	0					
ANR	1247873	Callee	query . c_str		1247783	0					
ANR	1247874	MemberAccess	query . c_str		1247783	0					
ANR	1247875	Identifier	query		1247783	0					
ANR	1247876	Identifier	c_str		1247783	1					
ANR	1247877	ArgumentList			1247783	1					
ANR	1247878	IdentifierDeclStatement	CollectorList * collects = daemonCore -> getCollectorList ( ) ;	275:1:7850:7906	1247783	13	True				
ANR	1247879	IdentifierDecl	* collects = daemonCore -> getCollectorList ( )		1247783	0					
ANR	1247880	IdentifierDeclType	CollectorList *		1247783	0					
ANR	1247881	Identifier	collects		1247783	1					
ANR	1247882	AssignmentExpression	* collects = daemonCore -> getCollectorList ( )		1247783	2		=			
ANR	1247883	Identifier	collects		1247783	0					
ANR	1247884	CallExpression	daemonCore -> getCollectorList ( )		1247783	1					
ANR	1247885	Callee	daemonCore -> getCollectorList		1247783	0					
ANR	1247886	PtrMemberAccess	daemonCore -> getCollectorList		1247783	0					
ANR	1247887	Identifier	daemonCore		1247783	0					
ANR	1247888	Identifier	getCollectorList		1247783	1					
ANR	1247889	ArgumentList			1247783	1					
ANR	1247890	ExpressionStatement	ASSERT ( collects )	276:1:7909:7927	1247783	14	True				
ANR	1247891	CallExpression	ASSERT ( collects )		1247783	0					
ANR	1247892	Callee	ASSERT		1247783	0					
ANR	1247893	Identifier	ASSERT		1247783	0					
ANR	1247894	ArgumentList	collects		1247783	1					
ANR	1247895	Argument	collects		1247783	0					
ANR	1247896	Identifier	collects		1247783	0					
ANR	1247897	IdentifierDeclStatement	QueryResult result ;	278:1:7931:7949	1247783	15	True				
ANR	1247898	IdentifierDecl	result		1247783	0					
ANR	1247899	IdentifierDeclType	QueryResult		1247783	0					
ANR	1247900	Identifier	result		1247783	1					
ANR	1247901	ExpressionStatement	"result = collects -> query ( startdQuery , startdAds )"	279:1:7952:7999	1247783	16	True				
ANR	1247902	AssignmentExpression	"result = collects -> query ( startdQuery , startdAds )"		1247783	0		=			
ANR	1247903	Identifier	result		1247783	0					
ANR	1247904	CallExpression	"collects -> query ( startdQuery , startdAds )"		1247783	1					
ANR	1247905	Callee	collects -> query		1247783	0					
ANR	1247906	PtrMemberAccess	collects -> query		1247783	0					
ANR	1247907	Identifier	collects		1247783	0					
ANR	1247908	Identifier	query		1247783	1					
ANR	1247909	ArgumentList	startdQuery		1247783	1					
ANR	1247910	Argument	startdQuery		1247783	0					
ANR	1247911	Identifier	startdQuery		1247783	0					
ANR	1247912	Argument	startdAds		1247783	1					
ANR	1247913	Identifier	startdAds		1247783	0					
ANR	1247914	IfStatement	if ( result != Q_OK )		1247783	17					
ANR	1247915	Condition	result != Q_OK	280:5:8006:8019	1247783	0	True				
ANR	1247916	EqualityExpression	result != Q_OK		1247783	0		!=			
ANR	1247917	Identifier	result		1247783	0					
ANR	1247918	Identifier	Q_OK		1247783	1					
ANR	1247919	CompoundStatement		26:22:852:852	1247783	1					
ANR	1247920	ExpressionStatement	"dprintf ( D_ALWAYS , ""Couldn't fetch startd ads: %s\\n"" , getStrQueryResult ( result ) )"	281:2:8027:8114	1247783	0	True				
ANR	1247921	CallExpression	"dprintf ( D_ALWAYS , ""Couldn't fetch startd ads: %s\\n"" , getStrQueryResult ( result ) )"		1247783	0					
ANR	1247922	Callee	dprintf		1247783	0					
ANR	1247923	Identifier	dprintf		1247783	0					
ANR	1247924	ArgumentList	D_ALWAYS		1247783	1					
ANR	1247925	Argument	D_ALWAYS		1247783	0					
ANR	1247926	Identifier	D_ALWAYS		1247783	0					
ANR	1247927	Argument	"""Couldn't fetch startd ads: %s\\n"""		1247783	1					
ANR	1247928	PrimaryExpression	"""Couldn't fetch startd ads: %s\\n"""		1247783	0					
ANR	1247929	Argument	getStrQueryResult ( result )		1247783	2					
ANR	1247930	CallExpression	getStrQueryResult ( result )		1247783	0					
ANR	1247931	Callee	getStrQueryResult		1247783	0					
ANR	1247932	Identifier	getStrQueryResult		1247783	0					
ANR	1247933	ArgumentList	result		1247783	1					
ANR	1247934	Argument	result		1247783	0					
ANR	1247935	Identifier	result		1247783	0					
ANR	1247936	ReturnStatement	return ;	284:2:8118:8124	1247783	1	True				
ANR	1247937	IdentifierDeclStatement	double avg_badput = 0.0 ;	287:1:8131:8154	1247783	18	True				
ANR	1247938	IdentifierDecl	avg_badput = 0.0		1247783	0					
ANR	1247939	IdentifierDeclType	double		1247783	0					
ANR	1247940	Identifier	avg_badput		1247783	1					
ANR	1247941	AssignmentExpression	avg_badput = 0.0		1247783	2		=			
ANR	1247942	Identifier	avg_badput		1247783	0					
ANR	1247943	PrimaryExpression	0.0		1247783	1					
ANR	1247944	IdentifierDeclStatement	double avg_unclaimed = 0.0 ;	288:1:8157:8183	1247783	19	True				
ANR	1247945	IdentifierDecl	avg_unclaimed = 0.0		1247783	0					
ANR	1247946	IdentifierDeclType	double		1247783	0					
ANR	1247947	Identifier	avg_unclaimed		1247783	1					
ANR	1247948	AssignmentExpression	avg_unclaimed = 0.0		1247783	2		=			
ANR	1247949	Identifier	avg_unclaimed		1247783	0					
ANR	1247950	PrimaryExpression	0.0		1247783	1					
ANR	1247951	IdentifierDeclStatement	int total_cpus = 0 ;	289:1:8186:8204	1247783	20	True				
ANR	1247952	IdentifierDecl	total_cpus = 0		1247783	0					
ANR	1247953	IdentifierDeclType	int		1247783	0					
ANR	1247954	Identifier	total_cpus		1247783	1					
ANR	1247955	AssignmentExpression	total_cpus = 0		1247783	2		=			
ANR	1247956	Identifier	total_cpus		1247783	0					
ANR	1247957	PrimaryExpression	0		1247783	1					
ANR	1247958	ExpressionStatement	startdAds . Open ( )	291:1:8208:8224	1247783	21	True				
ANR	1247959	CallExpression	startdAds . Open ( )		1247783	0					
ANR	1247960	Callee	startdAds . Open		1247783	0					
ANR	1247961	MemberAccess	startdAds . Open		1247783	0					
ANR	1247962	Identifier	startdAds		1247783	0					
ANR	1247963	Identifier	Open		1247783	1					
ANR	1247964	ArgumentList			1247783	1					
ANR	1247965	IdentifierDeclStatement	ClassAd * startd_ad ;	292:1:8227:8245	1247783	22	True				
ANR	1247966	IdentifierDecl	* startd_ad		1247783	0					
ANR	1247967	IdentifierDeclType	ClassAd *		1247783	0					
ANR	1247968	Identifier	startd_ad		1247783	1					
ANR	1247969	WhileStatement	while ( ( startd_ad = startdAds . Next ( ) ) )		1247783	23					
ANR	1247970	Condition	startd_ad = startdAds . Next ( )	293:8:8255:8282	1247783	0	True				
ANR	1247971	AssignmentExpression	startd_ad = startdAds . Next ( )		1247783	0		=			
ANR	1247972	Identifier	startd_ad		1247783	0					
ANR	1247973	CallExpression	startdAds . Next ( )		1247783	1					
ANR	1247974	Callee	startdAds . Next		1247783	0					
ANR	1247975	MemberAccess	startdAds . Next		1247783	0					
ANR	1247976	Identifier	startdAds		1247783	0					
ANR	1247977	Identifier	Next		1247783	1					
ANR	1247978	ArgumentList			1247783	1					
ANR	1247979	CompoundStatement		51:2:1556:1594	1247783	1					
ANR	1247980	IdentifierDeclStatement	int unclaimed = 0 ;	294:2:8290:8307	1247783	0	True				
ANR	1247981	IdentifierDecl	unclaimed = 0		1247783	0					
ANR	1247982	IdentifierDeclType	int		1247783	0					
ANR	1247983	Identifier	unclaimed		1247783	1					
ANR	1247984	AssignmentExpression	unclaimed = 0		1247783	2		=			
ANR	1247985	Identifier	unclaimed		1247783	0					
ANR	1247986	PrimaryExpression	0		1247783	1					
ANR	1247987	IdentifierDeclStatement	int badput = 0 ;	295:2:8311:8325	1247783	1	True				
ANR	1247988	IdentifierDecl	badput = 0		1247783	0					
ANR	1247989	IdentifierDeclType	int		1247783	0					
ANR	1247990	Identifier	badput		1247783	1					
ANR	1247991	AssignmentExpression	badput = 0		1247783	2		=			
ANR	1247992	Identifier	badput		1247783	0					
ANR	1247993	PrimaryExpression	0		1247783	1					
ANR	1247994	IdentifierDeclStatement	int start_time = 0 ;	296:2:8329:8347	1247783	2	True				
ANR	1247995	IdentifierDecl	start_time = 0		1247783	0					
ANR	1247996	IdentifierDeclType	int		1247783	0					
ANR	1247997	Identifier	start_time		1247783	1					
ANR	1247998	AssignmentExpression	start_time = 0		1247783	2		=			
ANR	1247999	Identifier	start_time		1247783	0					
ANR	1248000	PrimaryExpression	0		1247783	1					
ANR	1248001	IdentifierDeclStatement	int cpus = 0 ;	297:2:8351:8363	1247783	3	True				
ANR	1248002	IdentifierDecl	cpus = 0		1247783	0					
ANR	1248003	IdentifierDeclType	int		1247783	0					
ANR	1248004	Identifier	cpus		1247783	1					
ANR	1248005	AssignmentExpression	cpus = 0		1247783	2		=			
ANR	1248006	Identifier	cpus		1247783	0					
ANR	1248007	PrimaryExpression	0		1247783	1					
ANR	1248008	IdentifierDeclStatement	int last_heard_from = 0 ;	298:2:8367:8390	1247783	4	True				
ANR	1248009	IdentifierDecl	last_heard_from = 0		1247783	0					
ANR	1248010	IdentifierDeclType	int		1247783	0					
ANR	1248011	Identifier	last_heard_from		1247783	1					
ANR	1248012	AssignmentExpression	last_heard_from = 0		1247783	2		=			
ANR	1248013	Identifier	last_heard_from		1247783	0					
ANR	1248014	PrimaryExpression	0		1247783	1					
ANR	1248015	ExpressionStatement	"startd_ad -> LookupInteger ( ATTR_TOTAL_MACHINE_DRAINING_UNCLAIMED_TIME , unclaimed )"	299:2:8394:8472	1247783	5	True				
ANR	1248016	CallExpression	"startd_ad -> LookupInteger ( ATTR_TOTAL_MACHINE_DRAINING_UNCLAIMED_TIME , unclaimed )"		1247783	0					
ANR	1248017	Callee	startd_ad -> LookupInteger		1247783	0					
ANR	1248018	PtrMemberAccess	startd_ad -> LookupInteger		1247783	0					
ANR	1248019	Identifier	startd_ad		1247783	0					
ANR	1248020	Identifier	LookupInteger		1247783	1					
ANR	1248021	ArgumentList	ATTR_TOTAL_MACHINE_DRAINING_UNCLAIMED_TIME		1247783	1					
ANR	1248022	Argument	ATTR_TOTAL_MACHINE_DRAINING_UNCLAIMED_TIME		1247783	0					
ANR	1248023	Identifier	ATTR_TOTAL_MACHINE_DRAINING_UNCLAIMED_TIME		1247783	0					
ANR	1248024	Argument	unclaimed		1247783	1					
ANR	1248025	Identifier	unclaimed		1247783	0					
ANR	1248026	ExpressionStatement	"startd_ad -> LookupInteger ( ATTR_TOTAL_MACHINE_DRAINING_BADPUT , badput )"	300:2:8476:8543	1247783	6	True				
ANR	1248027	CallExpression	"startd_ad -> LookupInteger ( ATTR_TOTAL_MACHINE_DRAINING_BADPUT , badput )"		1247783	0					
ANR	1248028	Callee	startd_ad -> LookupInteger		1247783	0					
ANR	1248029	PtrMemberAccess	startd_ad -> LookupInteger		1247783	0					
ANR	1248030	Identifier	startd_ad		1247783	0					
ANR	1248031	Identifier	LookupInteger		1247783	1					
ANR	1248032	ArgumentList	ATTR_TOTAL_MACHINE_DRAINING_BADPUT		1247783	1					
ANR	1248033	Argument	ATTR_TOTAL_MACHINE_DRAINING_BADPUT		1247783	0					
ANR	1248034	Identifier	ATTR_TOTAL_MACHINE_DRAINING_BADPUT		1247783	0					
ANR	1248035	Argument	badput		1247783	1					
ANR	1248036	Identifier	badput		1247783	0					
ANR	1248037	ExpressionStatement	"startd_ad -> LookupInteger ( ATTR_DAEMON_START_TIME , start_time )"	301:2:8547:8606	1247783	7	True				
ANR	1248038	CallExpression	"startd_ad -> LookupInteger ( ATTR_DAEMON_START_TIME , start_time )"		1247783	0					
ANR	1248039	Callee	startd_ad -> LookupInteger		1247783	0					
ANR	1248040	PtrMemberAccess	startd_ad -> LookupInteger		1247783	0					
ANR	1248041	Identifier	startd_ad		1247783	0					
ANR	1248042	Identifier	LookupInteger		1247783	1					
ANR	1248043	ArgumentList	ATTR_DAEMON_START_TIME		1247783	1					
ANR	1248044	Argument	ATTR_DAEMON_START_TIME		1247783	0					
ANR	1248045	Identifier	ATTR_DAEMON_START_TIME		1247783	0					
ANR	1248046	Argument	start_time		1247783	1					
ANR	1248047	Identifier	start_time		1247783	0					
ANR	1248048	ExpressionStatement	"startd_ad -> LookupInteger ( ATTR_LAST_HEARD_FROM , last_heard_from )"	302:2:8610:8672	1247783	8	True				
ANR	1248049	CallExpression	"startd_ad -> LookupInteger ( ATTR_LAST_HEARD_FROM , last_heard_from )"		1247783	0					
ANR	1248050	Callee	startd_ad -> LookupInteger		1247783	0					
ANR	1248051	PtrMemberAccess	startd_ad -> LookupInteger		1247783	0					
ANR	1248052	Identifier	startd_ad		1247783	0					
ANR	1248053	Identifier	LookupInteger		1247783	1					
ANR	1248054	ArgumentList	ATTR_LAST_HEARD_FROM		1247783	1					
ANR	1248055	Argument	ATTR_LAST_HEARD_FROM		1247783	0					
ANR	1248056	Identifier	ATTR_LAST_HEARD_FROM		1247783	0					
ANR	1248057	Argument	last_heard_from		1247783	1					
ANR	1248058	Identifier	last_heard_from		1247783	0					
ANR	1248059	ExpressionStatement	"startd_ad -> LookupInteger ( ATTR_TOTAL_CPUS , cpus )"	303:2:8676:8722	1247783	9	True				
ANR	1248060	CallExpression	"startd_ad -> LookupInteger ( ATTR_TOTAL_CPUS , cpus )"		1247783	0					
ANR	1248061	Callee	startd_ad -> LookupInteger		1247783	0					
ANR	1248062	PtrMemberAccess	startd_ad -> LookupInteger		1247783	0					
ANR	1248063	Identifier	startd_ad		1247783	0					
ANR	1248064	Identifier	LookupInteger		1247783	1					
ANR	1248065	ArgumentList	ATTR_TOTAL_CPUS		1247783	1					
ANR	1248066	Argument	ATTR_TOTAL_CPUS		1247783	0					
ANR	1248067	Identifier	ATTR_TOTAL_CPUS		1247783	0					
ANR	1248068	Argument	cpus		1247783	1					
ANR	1248069	Identifier	cpus		1247783	0					
ANR	1248070	IdentifierDeclStatement	int age = last_heard_from - start_time ;	305:2:8727:8765	1247783	10	True				
ANR	1248071	IdentifierDecl	age = last_heard_from - start_time		1247783	0					
ANR	1248072	IdentifierDeclType	int		1247783	0					
ANR	1248073	Identifier	age		1247783	1					
ANR	1248074	AssignmentExpression	age = last_heard_from - start_time		1247783	2		=			
ANR	1248075	Identifier	age		1247783	0					
ANR	1248076	AdditiveExpression	last_heard_from - start_time		1247783	1		-			
ANR	1248077	Identifier	last_heard_from		1247783	0					
ANR	1248078	Identifier	start_time		1247783	1					
ANR	1248079	IfStatement	if ( last_heard_from == 0 || start_time == 0 || age <= 0 )		1247783	11					
ANR	1248080	Condition	last_heard_from == 0 || start_time == 0 || age <= 0	306:6:8773:8823	1247783	0	True				
ANR	1248081	OrExpression	last_heard_from == 0 || start_time == 0 || age <= 0		1247783	0		||			
ANR	1248082	EqualityExpression	last_heard_from == 0		1247783	0		==			
ANR	1248083	Identifier	last_heard_from		1247783	0					
ANR	1248084	PrimaryExpression	0		1247783	1					
ANR	1248085	OrExpression	start_time == 0 || age <= 0		1247783	1		||			
ANR	1248086	EqualityExpression	start_time == 0		1247783	0		==			
ANR	1248087	Identifier	start_time		1247783	0					
ANR	1248088	PrimaryExpression	0		1247783	1					
ANR	1248089	RelationalExpression	age <= 0		1247783	1		<=			
ANR	1248090	Identifier	age		1247783	0					
ANR	1248091	PrimaryExpression	0		1247783	1					
ANR	1248092	CompoundStatement		52:60:1656:1656	1247783	1					
ANR	1248093	ContinueStatement	continue ;	307:3:8832:8840	1247783	0	True				
ANR	1248094	ExpressionStatement	avg_badput += ( ( double ) badput ) / age	310:2:8849:8883	1247783	12	True				
ANR	1248095	AssignmentExpression	avg_badput += ( ( double ) badput ) / age		1247783	0		+=			
ANR	1248096	Identifier	avg_badput		1247783	0					
ANR	1248097	MultiplicativeExpression	( ( double ) badput ) / age		1247783	1		/			
ANR	1248098	CastExpression	( double ) badput		1247783	0					
ANR	1248099	CastTarget	double		1247783	0					
ANR	1248100	Identifier	badput		1247783	1					
ANR	1248101	Identifier	age		1247783	1					
ANR	1248102	ExpressionStatement	avg_unclaimed += ( ( double ) unclaimed ) / age	311:2:8887:8927	1247783	13	True				
ANR	1248103	AssignmentExpression	avg_unclaimed += ( ( double ) unclaimed ) / age		1247783	0		+=			
ANR	1248104	Identifier	avg_unclaimed		1247783	0					
ANR	1248105	MultiplicativeExpression	( ( double ) unclaimed ) / age		1247783	1		/			
ANR	1248106	CastExpression	( double ) unclaimed		1247783	0					
ANR	1248107	CastTarget	double		1247783	0					
ANR	1248108	Identifier	unclaimed		1247783	1					
ANR	1248109	Identifier	age		1247783	1					
ANR	1248110	ExpressionStatement	total_cpus += cpus	312:2:8931:8949	1247783	14	True				
ANR	1248111	AssignmentExpression	total_cpus += cpus		1247783	0		+=			
ANR	1248112	Identifier	total_cpus		1247783	0					
ANR	1248113	Identifier	cpus		1247783	1					
ANR	1248114	ExpressionStatement	startdAds . Close ( )	314:1:8955:8972	1247783	24	True				
ANR	1248115	CallExpression	startdAds . Close ( )		1247783	0					
ANR	1248116	Callee	startdAds . Close		1247783	0					
ANR	1248117	MemberAccess	startdAds . Close		1247783	0					
ANR	1248118	Identifier	startdAds		1247783	0					
ANR	1248119	Identifier	Close		1247783	1					
ANR	1248120	ArgumentList			1247783	1					
ANR	1248121	IfStatement	if ( total_cpus > 0 )		1247783	25					
ANR	1248122	Condition	total_cpus > 0	316:5:8980:8993	1247783	0	True				
ANR	1248123	RelationalExpression	total_cpus > 0		1247783	0		>			
ANR	1248124	Identifier	total_cpus		1247783	0					
ANR	1248125	PrimaryExpression	0		1247783	1					
ANR	1248126	CompoundStatement		62:22:1826:1826	1247783	1					
ANR	1248127	ExpressionStatement	avg_badput = avg_badput / total_cpus	317:2:9001:9035	1247783	0	True				
ANR	1248128	AssignmentExpression	avg_badput = avg_badput / total_cpus		1247783	0		=			
ANR	1248129	Identifier	avg_badput		1247783	0					
ANR	1248130	MultiplicativeExpression	avg_badput / total_cpus		1247783	1		/			
ANR	1248131	Identifier	avg_badput		1247783	0					
ANR	1248132	Identifier	total_cpus		1247783	1					
ANR	1248133	ExpressionStatement	avg_unclaimed = avg_unclaimed / total_cpus	318:2:9039:9079	1247783	1	True				
ANR	1248134	AssignmentExpression	avg_unclaimed = avg_unclaimed / total_cpus		1247783	0		=			
ANR	1248135	Identifier	avg_unclaimed		1247783	0					
ANR	1248136	MultiplicativeExpression	avg_unclaimed / total_cpus		1247783	1		/			
ANR	1248137	Identifier	avg_unclaimed		1247783	0					
ANR	1248138	Identifier	total_cpus		1247783	1					
ANR	1248139	ExpressionStatement	"dprintf ( D_ALWAYS , ""Average pool draining badput = %.2f%%\\n"" , avg_badput * 100 )"	321:1:9086:9164	1247783	26	True				
ANR	1248140	CallExpression	"dprintf ( D_ALWAYS , ""Average pool draining badput = %.2f%%\\n"" , avg_badput * 100 )"		1247783	0					
ANR	1248141	Callee	dprintf		1247783	0					
ANR	1248142	Identifier	dprintf		1247783	0					
ANR	1248143	ArgumentList	D_ALWAYS		1247783	1					
ANR	1248144	Argument	D_ALWAYS		1247783	0					
ANR	1248145	Identifier	D_ALWAYS		1247783	0					
ANR	1248146	Argument	"""Average pool draining badput = %.2f%%\\n"""		1247783	1					
ANR	1248147	PrimaryExpression	"""Average pool draining badput = %.2f%%\\n"""		1247783	0					
ANR	1248148	Argument	avg_badput * 100		1247783	2					
ANR	1248149	MultiplicativeExpression	avg_badput * 100		1247783	0		*			
ANR	1248150	Identifier	avg_badput		1247783	0					
ANR	1248151	PrimaryExpression	100		1247783	1					
ANR	1248152	ExpressionStatement	"dprintf ( D_ALWAYS , ""Average pool draining unclaimed = %.2f%%\\n"" , avg_unclaimed * 100 )"	324:1:9168:9252	1247783	27	True				
ANR	1248153	CallExpression	"dprintf ( D_ALWAYS , ""Average pool draining unclaimed = %.2f%%\\n"" , avg_unclaimed * 100 )"		1247783	0					
ANR	1248154	Callee	dprintf		1247783	0					
ANR	1248155	Identifier	dprintf		1247783	0					
ANR	1248156	ArgumentList	D_ALWAYS		1247783	1					
ANR	1248157	Argument	D_ALWAYS		1247783	0					
ANR	1248158	Identifier	D_ALWAYS		1247783	0					
ANR	1248159	Argument	"""Average pool draining unclaimed = %.2f%%\\n"""		1247783	1					
ANR	1248160	PrimaryExpression	"""Average pool draining unclaimed = %.2f%%\\n"""		1247783	0					
ANR	1248161	Argument	avg_unclaimed * 100		1247783	2					
ANR	1248162	MultiplicativeExpression	avg_unclaimed * 100		1247783	0		*			
ANR	1248163	Identifier	avg_unclaimed		1247783	0					
ANR	1248164	PrimaryExpression	100		1247783	1					
ANR	1248165	ExpressionStatement	m_stats . AvgDrainingBadput = avg_badput	327:1:9256:9294	1247783	28	True				
ANR	1248166	AssignmentExpression	m_stats . AvgDrainingBadput = avg_badput		1247783	0		=			
ANR	1248167	MemberAccess	m_stats . AvgDrainingBadput		1247783	0					
ANR	1248168	Identifier	m_stats		1247783	0					
ANR	1248169	Identifier	AvgDrainingBadput		1247783	1					
ANR	1248170	Identifier	avg_badput		1247783	1					
ANR	1248171	ExpressionStatement	m_stats . AvgDrainingUnclaimed = avg_unclaimed	328:1:9297:9341	1247783	29	True				
ANR	1248172	AssignmentExpression	m_stats . AvgDrainingUnclaimed = avg_unclaimed		1247783	0		=			
ANR	1248173	MemberAccess	m_stats . AvgDrainingUnclaimed		1247783	0					
ANR	1248174	Identifier	m_stats		1247783	0					
ANR	1248175	Identifier	AvgDrainingUnclaimed		1247783	1					
ANR	1248176	Identifier	avg_unclaimed		1247783	1					
ANR	1248177	ReturnType	void		1247783	1					
ANR	1248178	Identifier	Defrag :: queryDrainingCost		1247783	2					
ANR	1248179	ParameterList			1247783	3					
ANR	1248180	CFGEntryNode	ENTRY		1247783		True				
ANR	1248181	CFGExitNode	EXIT		1247783		True				
ANR	1248182	Symbol	ATTR_LAST_HEARD_FROM		1247783						
ANR	1248183	Symbol	daemonCore -> getCollectorList		1247783						
ANR	1248184	Symbol	avg_unclaimed		1247783						
ANR	1248185	Symbol	* desired_attrs		1247783						
ANR	1248186	Symbol	query . c_str		1247783						
ANR	1248187	Symbol	unclaimed		1247783						
ANR	1248188	Symbol	total_cpus		1247783						
ANR	1248189	Symbol	last_heard_from		1247783						
ANR	1248190	Symbol	m_stats . AvgDrainingUnclaimed		1247783						
ANR	1248191	Symbol	ATTR_TOTAL_CPUS		1247783						
ANR	1248192	Symbol	result		1247783						
ANR	1248193	Symbol	* collects		1247783						
ANR	1248194	Symbol	startdAds		1247783						
ANR	1248195	Symbol	ATTR_TOTAL_MACHINE_DRAINING_BADPUT		1247783						
ANR	1248196	Symbol	collects -> query		1247783						
ANR	1248197	Symbol	daemonCore		1247783						
ANR	1248198	Symbol	startd_ad		1247783						
ANR	1248199	Symbol	collects		1247783						
ANR	1248200	Symbol	avg_badput		1247783						
ANR	1248201	Symbol	getStrQueryResult		1247783						
ANR	1248202	Symbol	NULL		1247783						
ANR	1248203	Symbol	m_stats		1247783						
ANR	1248204	Symbol	cpus		1247783						
ANR	1248205	Symbol	query		1247783						
ANR	1248206	Symbol	D_ALWAYS		1247783						
ANR	1248207	Symbol	ATTR_TOTAL_MACHINE_DRAINING_UNCLAIMED_TIME		1247783						
ANR	1248208	Symbol	badput		1247783						
ANR	1248209	Symbol	Q_OK		1247783						
ANR	1248210	Symbol	m_stats . AvgDrainingBadput		1247783						
ANR	1248211	Symbol	start_time		1247783						
ANR	1248212	Symbol	desired_attrs		1247783						
ANR	1248213	Symbol	* daemonCore		1247783						
ANR	1248214	Symbol	startdAds . Next		1247783						
ANR	1248215	Symbol	ATTR_DAEMON_START_TIME		1247783						
ANR	1248216	Symbol	startdQuery		1247783						
ANR	1248217	Symbol	ATTR_SLOT_ID		1247783						
ANR	1248218	Symbol	age		1247783						
ANR	1248219	Function	Defrag :: countMachines	331:0:9346:10086							
ANR	1248220	FunctionDef	"Defrag :: countMachines (char const * constraint , char const * constraint_source , MachineSet * machines)"		1248219	0					
ANR	1248221	CompoundStatement		332:0:9448:10086	1248219	0					
ANR	1248222	IdentifierDeclStatement	ClassAdList startdAds ;	333:1:9451:9472	1248219	0	True				
ANR	1248223	IdentifierDecl	startdAds		1248219	0					
ANR	1248224	IdentifierDeclType	ClassAdList		1248219	0					
ANR	1248225	Identifier	startdAds		1248219	1					
ANR	1248226	IdentifierDeclStatement	int count = 0 ;	334:1:9475:9488	1248219	1	True				
ANR	1248227	IdentifierDecl	count = 0		1248219	0					
ANR	1248228	IdentifierDeclType	int		1248219	0					
ANR	1248229	Identifier	count		1248219	1					
ANR	1248230	AssignmentExpression	count = 0		1248219	2		=			
ANR	1248231	Identifier	count		1248219	0					
ANR	1248232	PrimaryExpression	0		1248219	1					
ANR	1248233	IfStatement	"if ( ! queryMachines ( constraint , constraint_source , startdAds ) )"		1248219	2					
ANR	1248234	Condition	"! queryMachines ( constraint , constraint_source , startdAds )"	336:5:9496:9549	1248219	0	True				
ANR	1248235	UnaryOperationExpression	"! queryMachines ( constraint , constraint_source , startdAds )"		1248219	0					
ANR	1248236	UnaryOperator	!		1248219	0					
ANR	1248237	CallExpression	"queryMachines ( constraint , constraint_source , startdAds )"		1248219	1					
ANR	1248238	Callee	queryMachines		1248219	0					
ANR	1248239	Identifier	queryMachines		1248219	0					
ANR	1248240	ArgumentList	constraint		1248219	1					
ANR	1248241	Argument	constraint		1248219	0					
ANR	1248242	Identifier	constraint		1248219	0					
ANR	1248243	Argument	constraint_source		1248219	1					
ANR	1248244	Identifier	constraint_source		1248219	0					
ANR	1248245	Argument	startdAds		1248219	2					
ANR	1248246	Identifier	startdAds		1248219	0					
ANR	1248247	CompoundStatement		5:62:104:104	1248219	1					
ANR	1248248	ReturnStatement	return - 1 ;	337:2:9557:9566	1248219	0	True				
ANR	1248249	UnaryOperationExpression	- 1		1248219	0					
ANR	1248250	UnaryOperator	-		1248219	0					
ANR	1248251	PrimaryExpression	1		1248219	1					
ANR	1248252	IdentifierDeclStatement	MachineSet my_machines ;	340:1:9573:9595	1248219	3	True				
ANR	1248253	IdentifierDecl	my_machines		1248219	0					
ANR	1248254	IdentifierDeclType	MachineSet		1248219	0					
ANR	1248255	Identifier	my_machines		1248219	1					
ANR	1248256	IfStatement	if ( ! machines )		1248219	4					
ANR	1248257	Condition	! machines	341:5:9602:9610	1248219	0	True				
ANR	1248258	UnaryOperationExpression	! machines		1248219	0					
ANR	1248259	UnaryOperator	!		1248219	0					
ANR	1248260	Identifier	machines		1248219	1					
ANR	1248261	CompoundStatement		10:17:165:165	1248219	1					
ANR	1248262	ExpressionStatement	machines = & my_machines	342:2:9618:9641	1248219	0	True				
ANR	1248263	AssignmentExpression	machines = & my_machines		1248219	0		=			
ANR	1248264	Identifier	machines		1248219	0					
ANR	1248265	UnaryOperationExpression	& my_machines		1248219	1					
ANR	1248266	UnaryOperator	&		1248219	0					
ANR	1248267	Identifier	my_machines		1248219	1					
ANR	1248268	ExpressionStatement	startdAds . Open ( )	345:1:9648:9664	1248219	5	True				
ANR	1248269	CallExpression	startdAds . Open ( )		1248219	0					
ANR	1248270	Callee	startdAds . Open		1248219	0					
ANR	1248271	MemberAccess	startdAds . Open		1248219	0					
ANR	1248272	Identifier	startdAds		1248219	0					
ANR	1248273	Identifier	Open		1248219	1					
ANR	1248274	ArgumentList			1248219	1					
ANR	1248275	IdentifierDeclStatement	ClassAd * startd_ad ;	346:1:9667:9685	1248219	6	True				
ANR	1248276	IdentifierDecl	* startd_ad		1248219	0					
ANR	1248277	IdentifierDeclType	ClassAd *		1248219	0					
ANR	1248278	Identifier	startd_ad		1248219	1					
ANR	1248279	WhileStatement	while ( ( startd_ad = startdAds . Next ( ) ) )		1248219	7					
ANR	1248280	Condition	startd_ad = startdAds . Next ( )	347:8:9695:9722	1248219	0	True				
ANR	1248281	AssignmentExpression	startd_ad = startdAds . Next ( )		1248219	0		=			
ANR	1248282	Identifier	startd_ad		1248219	0					
ANR	1248283	CallExpression	startdAds . Next ( )		1248219	1					
ANR	1248284	Callee	startdAds . Next		1248219	0					
ANR	1248285	MemberAccess	startdAds . Next		1248219	0					
ANR	1248286	Identifier	startdAds		1248219	0					
ANR	1248287	Identifier	Next		1248219	1					
ANR	1248288	ArgumentList			1248219	1					
ANR	1248289	CompoundStatement		18:2:304:320	1248219	1					
ANR	1248290	IdentifierDeclStatement	std :: string machine ;	348:2:9730:9749	1248219	0	True				
ANR	1248291	IdentifierDecl	machine		1248219	0					
ANR	1248292	IdentifierDeclType	std :: string		1248219	0					
ANR	1248293	Identifier	machine		1248219	1					
ANR	1248294	IdentifierDeclStatement	std :: string name ;	349:2:9753:9769	1248219	1	True				
ANR	1248295	IdentifierDecl	name		1248219	0					
ANR	1248296	IdentifierDeclType	std :: string		1248219	0					
ANR	1248297	Identifier	name		1248219	1					
ANR	1248298	ExpressionStatement	"startd_ad -> LookupString ( ATTR_NAME , name )"	350:2:9773:9812	1248219	2	True				
ANR	1248299	CallExpression	"startd_ad -> LookupString ( ATTR_NAME , name )"		1248219	0					
ANR	1248300	Callee	startd_ad -> LookupString		1248219	0					
ANR	1248301	PtrMemberAccess	startd_ad -> LookupString		1248219	0					
ANR	1248302	Identifier	startd_ad		1248219	0					
ANR	1248303	Identifier	LookupString		1248219	1					
ANR	1248304	ArgumentList	ATTR_NAME		1248219	1					
ANR	1248305	Argument	ATTR_NAME		1248219	0					
ANR	1248306	Identifier	ATTR_NAME		1248219	0					
ANR	1248307	Argument	name		1248219	1					
ANR	1248308	Identifier	name		1248219	0					
ANR	1248309	ExpressionStatement	"slotNameToDaemonName ( name , machine )"	351:2:9816:9850	1248219	3	True				
ANR	1248310	CallExpression	"slotNameToDaemonName ( name , machine )"		1248219	0					
ANR	1248311	Callee	slotNameToDaemonName		1248219	0					
ANR	1248312	Identifier	slotNameToDaemonName		1248219	0					
ANR	1248313	ArgumentList	name		1248219	1					
ANR	1248314	Argument	name		1248219	0					
ANR	1248315	Identifier	name		1248219	0					
ANR	1248316	Argument	machine		1248219	1					
ANR	1248317	Identifier	machine		1248219	0					
ANR	1248318	IfStatement	if ( machines -> count ( machine ) )		1248219	4					
ANR	1248319	Condition	machines -> count ( machine )	353:6:9859:9882	1248219	0	True				
ANR	1248320	CallExpression	machines -> count ( machine )		1248219	0					
ANR	1248321	Callee	machines -> count		1248219	0					
ANR	1248322	PtrMemberAccess	machines -> count		1248219	0					
ANR	1248323	Identifier	machines		1248219	0					
ANR	1248324	Identifier	count		1248219	1					
ANR	1248325	ArgumentList	machine		1248219	1					
ANR	1248326	Argument	machine		1248219	0					
ANR	1248327	Identifier	machine		1248219	0					
ANR	1248328	CompoundStatement		22:33:437:437	1248219	1					
ANR	1248329	ContinueStatement	continue ;	354:3:9891:9899	1248219	0	True				
ANR	1248330	ExpressionStatement	machines -> insert ( machine )	357:2:9908:9933	1248219	5	True				
ANR	1248331	CallExpression	machines -> insert ( machine )		1248219	0					
ANR	1248332	Callee	machines -> insert		1248219	0					
ANR	1248333	PtrMemberAccess	machines -> insert		1248219	0					
ANR	1248334	Identifier	machines		1248219	0					
ANR	1248335	Identifier	insert		1248219	1					
ANR	1248336	ArgumentList	machine		1248219	1					
ANR	1248337	Argument	machine		1248219	0					
ANR	1248338	Identifier	machine		1248219	0					
ANR	1248339	ExpressionStatement	count ++	358:2:9937:9944	1248219	6	True				
ANR	1248340	PostIncDecOperationExpression	count ++		1248219	0					
ANR	1248341	Identifier	count		1248219	0					
ANR	1248342	IncDec	++		1248219	1					
ANR	1248343	ExpressionStatement	startdAds . Close ( )	360:1:9950:9967	1248219	8	True				
ANR	1248344	CallExpression	startdAds . Close ( )		1248219	0					
ANR	1248345	Callee	startdAds . Close		1248219	0					
ANR	1248346	MemberAccess	startdAds . Close		1248219	0					
ANR	1248347	Identifier	startdAds		1248219	0					
ANR	1248348	Identifier	Close		1248219	1					
ANR	1248349	ArgumentList			1248219	1					
ANR	1248350	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Counted %d machines matching %s=%s\\n"" , count , constraint_source , constraint )"	362:1:9971:10069	1248219	9	True				
ANR	1248351	CallExpression	"dprintf ( D_FULLDEBUG , ""Counted %d machines matching %s=%s\\n"" , count , constraint_source , constraint )"		1248219	0					
ANR	1248352	Callee	dprintf		1248219	0					
ANR	1248353	Identifier	dprintf		1248219	0					
ANR	1248354	ArgumentList	D_FULLDEBUG		1248219	1					
ANR	1248355	Argument	D_FULLDEBUG		1248219	0					
ANR	1248356	Identifier	D_FULLDEBUG		1248219	0					
ANR	1248357	Argument	"""Counted %d machines matching %s=%s\\n"""		1248219	1					
ANR	1248358	PrimaryExpression	"""Counted %d machines matching %s=%s\\n"""		1248219	0					
ANR	1248359	Argument	count		1248219	2					
ANR	1248360	Identifier	count		1248219	0					
ANR	1248361	Argument	constraint_source		1248219	3					
ANR	1248362	Identifier	constraint_source		1248219	0					
ANR	1248363	Argument	constraint		1248219	4					
ANR	1248364	Identifier	constraint		1248219	0					
ANR	1248365	ReturnStatement	return count ;	364:1:10072:10084	1248219	10	True				
ANR	1248366	Identifier	count		1248219	0					
ANR	1248367	ReturnType	int		1248219	1					
ANR	1248368	Identifier	Defrag :: countMachines		1248219	2					
ANR	1248369	ParameterList	"char const * constraint , char const * constraint_source , MachineSet * machines"		1248219	3					
ANR	1248370	Parameter	char const * constraint	331:26:9372:9393	1248219	0	True				
ANR	1248371	ParameterType	char const *		1248219	0					
ANR	1248372	Identifier	constraint		1248219	1					
ANR	1248373	Parameter	char const * constraint_source	331:49:9395:9423	1248219	1	True				
ANR	1248374	ParameterType	char const *		1248219	0					
ANR	1248375	Identifier	constraint_source		1248219	1					
ANR	1248376	Parameter	MachineSet * machines	331:80:9426:9445	1248219	2	True				
ANR	1248377	ParameterType	MachineSet *		1248219	0					
ANR	1248378	Identifier	machines		1248219	1					
ANR	1248379	CFGEntryNode	ENTRY		1248219		True				
ANR	1248380	CFGExitNode	EXIT		1248219		True				
ANR	1248381	Symbol	ATTR_NAME		1248219						
ANR	1248382	Symbol	count		1248219						
ANR	1248383	Symbol	D_FULLDEBUG		1248219						
ANR	1248384	Symbol	queryMachines		1248219						
ANR	1248385	Symbol	machines -> count		1248219						
ANR	1248386	Symbol	my_machines		1248219						
ANR	1248387	Symbol	startdAds		1248219						
ANR	1248388	Symbol	* machines		1248219						
ANR	1248389	Symbol	constraint_source		1248219						
ANR	1248390	Symbol	machine		1248219						
ANR	1248391	Symbol	startdAds . Next		1248219						
ANR	1248392	Symbol	name		1248219						
ANR	1248393	Symbol	constraint		1248219						
ANR	1248394	Symbol	machines		1248219						
ANR	1248395	Symbol	startd_ad		1248219						
ANR	1248396	Symbol	& my_machines		1248219						
ANR	1248397	Function	Defrag :: saveState	367:0:10089:10593							
ANR	1248398	FunctionDef	Defrag :: saveState ()		1248397	0					
ANR	1248399	CompoundStatement		368:0:10114:10593	1248397	0					
ANR	1248400	IdentifierDeclStatement	ClassAd ad ;	369:1:10117:10127	1248397	0	True				
ANR	1248401	IdentifierDecl	ad		1248397	0					
ANR	1248402	IdentifierDeclType	ClassAd		1248397	0					
ANR	1248403	Identifier	ad		1248397	1					
ANR	1248404	ExpressionStatement	"ad . Assign ( ATTR_LAST_POLL , ( int ) m_last_poll )"	370:1:10130:10172	1248397	1	True				
ANR	1248405	CallExpression	"ad . Assign ( ATTR_LAST_POLL , ( int ) m_last_poll )"		1248397	0					
ANR	1248406	Callee	ad . Assign		1248397	0					
ANR	1248407	MemberAccess	ad . Assign		1248397	0					
ANR	1248408	Identifier	ad		1248397	0					
ANR	1248409	Identifier	Assign		1248397	1					
ANR	1248410	ArgumentList	ATTR_LAST_POLL		1248397	1					
ANR	1248411	Argument	ATTR_LAST_POLL		1248397	0					
ANR	1248412	Identifier	ATTR_LAST_POLL		1248397	0					
ANR	1248413	Argument	( int ) m_last_poll		1248397	1					
ANR	1248414	CastExpression	( int ) m_last_poll		1248397	0					
ANR	1248415	CastTarget	int		1248397	0					
ANR	1248416	Identifier	m_last_poll		1248397	1					
ANR	1248417	IdentifierDeclStatement	std :: string new_state_file ;	372:1:10176:10202	1248397	2	True				
ANR	1248418	IdentifierDecl	new_state_file		1248397	0					
ANR	1248419	IdentifierDeclType	std :: string		1248397	0					
ANR	1248420	Identifier	new_state_file		1248397	1					
ANR	1248421	ExpressionStatement	"sprintf ( new_state_file , ""%s.new"" , m_state_file . c_str ( ) )"	373:1:10205:10258	1248397	3	True				
ANR	1248422	CallExpression	"sprintf ( new_state_file , ""%s.new"" , m_state_file . c_str ( ) )"		1248397	0					
ANR	1248423	Callee	sprintf		1248397	0					
ANR	1248424	Identifier	sprintf		1248397	0					
ANR	1248425	ArgumentList	new_state_file		1248397	1					
ANR	1248426	Argument	new_state_file		1248397	0					
ANR	1248427	Identifier	new_state_file		1248397	0					
ANR	1248428	Argument	"""%s.new"""		1248397	1					
ANR	1248429	PrimaryExpression	"""%s.new"""		1248397	0					
ANR	1248430	Argument	m_state_file . c_str ( )		1248397	2					
ANR	1248431	CallExpression	m_state_file . c_str ( )		1248397	0					
ANR	1248432	Callee	m_state_file . c_str		1248397	0					
ANR	1248433	MemberAccess	m_state_file . c_str		1248397	0					
ANR	1248434	Identifier	m_state_file		1248397	0					
ANR	1248435	Identifier	c_str		1248397	1					
ANR	1248436	ArgumentList			1248397	1					
ANR	1248437	IdentifierDeclStatement	FILE * fp ;	374:1:10261:10269	1248397	4	True				
ANR	1248438	IdentifierDecl	* fp		1248397	0					
ANR	1248439	IdentifierDeclType	FILE *		1248397	0					
ANR	1248440	Identifier	fp		1248397	1					
ANR	1248441	IfStatement	"if ( ! ( fp = safe_fopen_wrapper_follow ( new_state_file . c_str ( ) , ""w"" ) ) )"		1248397	5					
ANR	1248442	Condition	"! ( fp = safe_fopen_wrapper_follow ( new_state_file . c_str ( ) , ""w"" ) )"	375:5:10276:10337	1248397	0	True				
ANR	1248443	UnaryOperationExpression	"! ( fp = safe_fopen_wrapper_follow ( new_state_file . c_str ( ) , ""w"" ) )"		1248397	0					
ANR	1248444	UnaryOperator	!		1248397	0					
ANR	1248445	AssignmentExpression	"fp = safe_fopen_wrapper_follow ( new_state_file . c_str ( ) , ""w"" )"		1248397	1		=			
ANR	1248446	Identifier	fp		1248397	0					
ANR	1248447	CallExpression	"safe_fopen_wrapper_follow ( new_state_file . c_str ( ) , ""w"" )"		1248397	1					
ANR	1248448	Callee	safe_fopen_wrapper_follow		1248397	0					
ANR	1248449	Identifier	safe_fopen_wrapper_follow		1248397	0					
ANR	1248450	ArgumentList	new_state_file . c_str ( )		1248397	1					
ANR	1248451	Argument	new_state_file . c_str ( )		1248397	0					
ANR	1248452	CallExpression	new_state_file . c_str ( )		1248397	0					
ANR	1248453	Callee	new_state_file . c_str		1248397	0					
ANR	1248454	MemberAccess	new_state_file . c_str		1248397	0					
ANR	1248455	Identifier	new_state_file		1248397	0					
ANR	1248456	Identifier	c_str		1248397	1					
ANR	1248457	ArgumentList			1248397	1					
ANR	1248458	Argument	"""w"""		1248397	1					
ANR	1248459	PrimaryExpression	"""w"""		1248397	0					
ANR	1248460	CompoundStatement		8:70:226:226	1248397	1					
ANR	1248461	ExpressionStatement	"EXCEPT ( ""failed to save state to %s\\n"" , new_state_file . c_str ( ) )"	376:2:10345:10406	1248397	0	True				
ANR	1248462	CallExpression	"EXCEPT ( ""failed to save state to %s\\n"" , new_state_file . c_str ( ) )"		1248397	0					
ANR	1248463	Callee	EXCEPT		1248397	0					
ANR	1248464	Identifier	EXCEPT		1248397	0					
ANR	1248465	ArgumentList	"""failed to save state to %s\\n"""		1248397	1					
ANR	1248466	Argument	"""failed to save state to %s\\n"""		1248397	0					
ANR	1248467	PrimaryExpression	"""failed to save state to %s\\n"""		1248397	0					
ANR	1248468	Argument	new_state_file . c_str ( )		1248397	1					
ANR	1248469	CallExpression	new_state_file . c_str ( )		1248397	0					
ANR	1248470	Callee	new_state_file . c_str		1248397	0					
ANR	1248471	MemberAccess	new_state_file . c_str		1248397	0					
ANR	1248472	Identifier	new_state_file		1248397	0					
ANR	1248473	Identifier	c_str		1248397	1					
ANR	1248474	ArgumentList			1248397	1					
ANR	1248475	ElseStatement	else		1248397	0					
ANR	1248476	CompoundStatement		11:6:302:302	1248397	0					
ANR	1248477	ExpressionStatement	ad . fPrint ( fp )	379:2:10421:10434	1248397	0	True				
ANR	1248478	CallExpression	ad . fPrint ( fp )		1248397	0					
ANR	1248479	Callee	ad . fPrint		1248397	0					
ANR	1248480	MemberAccess	ad . fPrint		1248397	0					
ANR	1248481	Identifier	ad		1248397	0					
ANR	1248482	Identifier	fPrint		1248397	1					
ANR	1248483	ArgumentList	fp		1248397	1					
ANR	1248484	Argument	fp		1248397	0					
ANR	1248485	Identifier	fp		1248397	0					
ANR	1248486	ExpressionStatement	fclose ( fp )	380:2:10438:10450	1248397	1	True				
ANR	1248487	CallExpression	fclose ( fp )		1248397	0					
ANR	1248488	Callee	fclose		1248397	0					
ANR	1248489	Identifier	fclose		1248397	0					
ANR	1248490	ArgumentList	fp		1248397	1					
ANR	1248491	Argument	fp		1248397	0					
ANR	1248492	Identifier	fp		1248397	0					
ANR	1248493	IfStatement	"if ( rotate_file ( new_state_file . c_str ( ) , m_state_file . c_str ( ) ) != 0 )"		1248397	2					
ANR	1248494	Condition	"rotate_file ( new_state_file . c_str ( ) , m_state_file . c_str ( ) ) != 0"	381:6:10458:10516	1248397	0	True				
ANR	1248495	EqualityExpression	"rotate_file ( new_state_file . c_str ( ) , m_state_file . c_str ( ) ) != 0"		1248397	0		!=			
ANR	1248496	CallExpression	"rotate_file ( new_state_file . c_str ( ) , m_state_file . c_str ( ) )"		1248397	0					
ANR	1248497	Callee	rotate_file		1248397	0					
ANR	1248498	Identifier	rotate_file		1248397	0					
ANR	1248499	ArgumentList	new_state_file . c_str ( )		1248397	1					
ANR	1248500	Argument	new_state_file . c_str ( )		1248397	0					
ANR	1248501	CallExpression	new_state_file . c_str ( )		1248397	0					
ANR	1248502	Callee	new_state_file . c_str		1248397	0					
ANR	1248503	MemberAccess	new_state_file . c_str		1248397	0					
ANR	1248504	Identifier	new_state_file		1248397	0					
ANR	1248505	Identifier	c_str		1248397	1					
ANR	1248506	ArgumentList			1248397	1					
ANR	1248507	Argument	m_state_file . c_str ( )		1248397	1					
ANR	1248508	CallExpression	m_state_file . c_str ( )		1248397	0					
ANR	1248509	Callee	m_state_file . c_str		1248397	0					
ANR	1248510	MemberAccess	m_state_file . c_str		1248397	0					
ANR	1248511	Identifier	m_state_file		1248397	0					
ANR	1248512	Identifier	c_str		1248397	1					
ANR	1248513	ArgumentList			1248397	1					
ANR	1248514	PrimaryExpression	0		1248397	1					
ANR	1248515	CompoundStatement		14:68:405:405	1248397	1					
ANR	1248516	ExpressionStatement	"EXCEPT ( ""failed to save state to %s\\n"" , m_state_file . c_str ( ) )"	382:3:10525:10584	1248397	0	True				
ANR	1248517	CallExpression	"EXCEPT ( ""failed to save state to %s\\n"" , m_state_file . c_str ( ) )"		1248397	0					
ANR	1248518	Callee	EXCEPT		1248397	0					
ANR	1248519	Identifier	EXCEPT		1248397	0					
ANR	1248520	ArgumentList	"""failed to save state to %s\\n"""		1248397	1					
ANR	1248521	Argument	"""failed to save state to %s\\n"""		1248397	0					
ANR	1248522	PrimaryExpression	"""failed to save state to %s\\n"""		1248397	0					
ANR	1248523	Argument	m_state_file . c_str ( )		1248397	1					
ANR	1248524	CallExpression	m_state_file . c_str ( )		1248397	0					
ANR	1248525	Callee	m_state_file . c_str		1248397	0					
ANR	1248526	MemberAccess	m_state_file . c_str		1248397	0					
ANR	1248527	Identifier	m_state_file		1248397	0					
ANR	1248528	Identifier	c_str		1248397	1					
ANR	1248529	ArgumentList			1248397	1					
ANR	1248530	ReturnType	void		1248397	1					
ANR	1248531	Identifier	Defrag :: saveState		1248397	2					
ANR	1248532	ParameterList			1248397	3					
ANR	1248533	CFGEntryNode	ENTRY		1248397		True				
ANR	1248534	CFGExitNode	EXIT		1248397		True				
ANR	1248535	Symbol	new_state_file		1248397						
ANR	1248536	Symbol	ad		1248397						
ANR	1248537	Symbol	m_last_poll		1248397						
ANR	1248538	Symbol	m_state_file		1248397						
ANR	1248539	Symbol	fp		1248397						
ANR	1248540	Symbol	new_state_file . c_str		1248397						
ANR	1248541	Symbol	rotate_file		1248397						
ANR	1248542	Symbol	m_state_file . c_str		1248397						
ANR	1248543	Symbol	safe_fopen_wrapper_follow		1248397						
ANR	1248544	Symbol	ATTR_LAST_POLL		1248397						
ANR	1248545	Function	Defrag :: loadState	387:0:10596:11346							
ANR	1248546	FunctionDef	Defrag :: loadState ()		1248545	0					
ANR	1248547	CompoundStatement		388:0:10621:11346	1248545	0					
ANR	1248548	IdentifierDeclStatement	FILE * fp ;	389:1:10624:10632	1248545	0	True				
ANR	1248549	IdentifierDecl	* fp		1248545	0					
ANR	1248550	IdentifierDeclType	FILE *		1248545	0					
ANR	1248551	Identifier	fp		1248545	1					
ANR	1248552	IfStatement	"if ( ! ( fp = safe_fopen_wrapper_follow ( m_state_file . c_str ( ) , ""r"" ) ) )"		1248545	1					
ANR	1248553	Condition	"! ( fp = safe_fopen_wrapper_follow ( m_state_file . c_str ( ) , ""r"" ) )"	390:5:10639:10698	1248545	0	True				
ANR	1248554	UnaryOperationExpression	"! ( fp = safe_fopen_wrapper_follow ( m_state_file . c_str ( ) , ""r"" ) )"		1248545	0					
ANR	1248555	UnaryOperator	!		1248545	0					
ANR	1248556	AssignmentExpression	"fp = safe_fopen_wrapper_follow ( m_state_file . c_str ( ) , ""r"" )"		1248545	1		=			
ANR	1248557	Identifier	fp		1248545	0					
ANR	1248558	CallExpression	"safe_fopen_wrapper_follow ( m_state_file . c_str ( ) , ""r"" )"		1248545	1					
ANR	1248559	Callee	safe_fopen_wrapper_follow		1248545	0					
ANR	1248560	Identifier	safe_fopen_wrapper_follow		1248545	0					
ANR	1248561	ArgumentList	m_state_file . c_str ( )		1248545	1					
ANR	1248562	Argument	m_state_file . c_str ( )		1248545	0					
ANR	1248563	CallExpression	m_state_file . c_str ( )		1248545	0					
ANR	1248564	Callee	m_state_file . c_str		1248545	0					
ANR	1248565	MemberAccess	m_state_file . c_str		1248545	0					
ANR	1248566	Identifier	m_state_file		1248545	0					
ANR	1248567	Identifier	c_str		1248545	1					
ANR	1248568	ArgumentList			1248545	1					
ANR	1248569	Argument	"""r"""		1248545	1					
ANR	1248570	PrimaryExpression	"""r"""		1248545	0					
ANR	1248571	CompoundStatement		3:68:80:80	1248545	1					
ANR	1248572	IfStatement	if ( errno == ENOENT )		1248545	0					
ANR	1248573	Condition	errno == ENOENT	391:6:10710:10724	1248545	0	True				
ANR	1248574	EqualityExpression	errno == ENOENT		1248545	0		==			
ANR	1248575	Identifier	errno		1248545	0					
ANR	1248576	Identifier	ENOENT		1248545	1					
ANR	1248577	CompoundStatement		4:24:106:106	1248545	1					
ANR	1248578	ExpressionStatement	"dprintf ( D_ALWAYS , ""State file %s does not yet exist.\\n"" , m_state_file . c_str ( ) )"	392:3:10733:10809	1248545	0	True				
ANR	1248579	CallExpression	"dprintf ( D_ALWAYS , ""State file %s does not yet exist.\\n"" , m_state_file . c_str ( ) )"		1248545	0					
ANR	1248580	Callee	dprintf		1248545	0					
ANR	1248581	Identifier	dprintf		1248545	0					
ANR	1248582	ArgumentList	D_ALWAYS		1248545	1					
ANR	1248583	Argument	D_ALWAYS		1248545	0					
ANR	1248584	Identifier	D_ALWAYS		1248545	0					
ANR	1248585	Argument	"""State file %s does not yet exist.\\n"""		1248545	1					
ANR	1248586	PrimaryExpression	"""State file %s does not yet exist.\\n"""		1248545	0					
ANR	1248587	Argument	m_state_file . c_str ( )		1248545	2					
ANR	1248588	CallExpression	m_state_file . c_str ( )		1248545	0					
ANR	1248589	Callee	m_state_file . c_str		1248545	0					
ANR	1248590	MemberAccess	m_state_file . c_str		1248545	0					
ANR	1248591	Identifier	m_state_file		1248545	0					
ANR	1248592	Identifier	c_str		1248545	1					
ANR	1248593	ArgumentList			1248545	1					
ANR	1248594	ElseStatement	else		1248545	0					
ANR	1248595	CompoundStatement		7:7:200:200	1248545	0					
ANR	1248596	ExpressionStatement	"EXCEPT ( ""failed to load state from %s\\n"" , m_state_file . c_str ( ) )"	395:3:10827:10888	1248545	0	True				
ANR	1248597	CallExpression	"EXCEPT ( ""failed to load state from %s\\n"" , m_state_file . c_str ( ) )"		1248545	0					
ANR	1248598	Callee	EXCEPT		1248545	0					
ANR	1248599	Identifier	EXCEPT		1248545	0					
ANR	1248600	ArgumentList	"""failed to load state from %s\\n"""		1248545	1					
ANR	1248601	Argument	"""failed to load state from %s\\n"""		1248545	0					
ANR	1248602	PrimaryExpression	"""failed to load state from %s\\n"""		1248545	0					
ANR	1248603	Argument	m_state_file . c_str ( )		1248545	1					
ANR	1248604	CallExpression	m_state_file . c_str ( )		1248545	0					
ANR	1248605	Callee	m_state_file . c_str		1248545	0					
ANR	1248606	MemberAccess	m_state_file . c_str		1248545	0					
ANR	1248607	Identifier	m_state_file		1248545	0					
ANR	1248608	Identifier	c_str		1248545	1					
ANR	1248609	ArgumentList			1248545	1					
ANR	1248610	ElseStatement	else		1248545	0					
ANR	1248611	CompoundStatement		20:2:534:566	1248545	0					
ANR	1248612	IdentifierDeclStatement	"int isEOF = 0 , errorReadingAd = 0 , adEmpty = 0 ;"	399:2:10907:10947	1248545	0	True				
ANR	1248613	IdentifierDecl	isEOF = 0		1248545	0					
ANR	1248614	IdentifierDeclType	int		1248545	0					
ANR	1248615	Identifier	isEOF		1248545	1					
ANR	1248616	AssignmentExpression	isEOF = 0		1248545	2		=			
ANR	1248617	Identifier	isEOF		1248545	0					
ANR	1248618	PrimaryExpression	0		1248545	1					
ANR	1248619	IdentifierDecl	errorReadingAd = 0		1248545	1					
ANR	1248620	IdentifierDeclType	int		1248545	0					
ANR	1248621	Identifier	errorReadingAd		1248545	1					
ANR	1248622	AssignmentExpression	errorReadingAd = 0		1248545	2		=			
ANR	1248623	Identifier	errorReadingAd		1248545	0					
ANR	1248624	PrimaryExpression	0		1248545	1					
ANR	1248625	IdentifierDecl	adEmpty = 0		1248545	2					
ANR	1248626	IdentifierDeclType	int		1248545	0					
ANR	1248627	Identifier	adEmpty		1248545	1					
ANR	1248628	AssignmentExpression	adEmpty = 0		1248545	2		=			
ANR	1248629	Identifier	adEmpty		1248545	0					
ANR	1248630	PrimaryExpression	0		1248545	1					
ANR	1248631	IdentifierDeclStatement	"ClassAd * ad = new ClassAd ( fp , ""..."" , isEOF , errorReadingAd , adEmpty ) ;"	400:2:10951:11019	1248545	1	True				
ANR	1248632	IdentifierDecl	"* ad = new ClassAd ( fp , ""..."" , isEOF , errorReadingAd , adEmpty )"		1248545	0					
ANR	1248633	IdentifierDeclType	ClassAd *		1248545	0					
ANR	1248634	Identifier	ad		1248545	1					
ANR	1248635	AssignmentExpression	"* ad = new ClassAd ( fp , ""..."" , isEOF , errorReadingAd , adEmpty )"		1248545	2		=			
ANR	1248636	Identifier	ad		1248545	0					
ANR	1248637	Expression	"fp , ""..."" , isEOF , errorReadingAd , adEmpty"		1248545	1					
ANR	1248638	Identifier	fp		1248545	0					
ANR	1248639	Expression	"""..."" , isEOF , errorReadingAd , adEmpty"		1248545	1					
ANR	1248640	PrimaryExpression	"""..."""		1248545	0					
ANR	1248641	Expression	"isEOF , errorReadingAd , adEmpty"		1248545	1					
ANR	1248642	Identifier	isEOF		1248545	0					
ANR	1248643	Expression	"errorReadingAd , adEmpty"		1248545	1					
ANR	1248644	Identifier	errorReadingAd		1248545	0					
ANR	1248645	Identifier	adEmpty		1248545	1					
ANR	1248646	ExpressionStatement	fclose ( fp )	401:2:11023:11035	1248545	2	True				
ANR	1248647	CallExpression	fclose ( fp )		1248545	0					
ANR	1248648	Callee	fclose		1248545	0					
ANR	1248649	Identifier	fclose		1248545	0					
ANR	1248650	ArgumentList	fp		1248545	1					
ANR	1248651	Argument	fp		1248545	0					
ANR	1248652	Identifier	fp		1248545	0					
ANR	1248653	IfStatement	if ( errorReadingAd )		1248545	3					
ANR	1248654	Condition	errorReadingAd	403:6:11044:11057	1248545	0	True				
ANR	1248655	Identifier	errorReadingAd		1248545	0					
ANR	1248656	CompoundStatement		16:23:439:439	1248545	1					
ANR	1248657	ExpressionStatement	"dprintf ( D_ALWAYS , ""WARNING: failed to parse state from %s\\n"" , m_state_file . c_str ( ) )"	404:3:11066:11147	1248545	0	True				
ANR	1248658	CallExpression	"dprintf ( D_ALWAYS , ""WARNING: failed to parse state from %s\\n"" , m_state_file . c_str ( ) )"		1248545	0					
ANR	1248659	Callee	dprintf		1248545	0					
ANR	1248660	Identifier	dprintf		1248545	0					
ANR	1248661	ArgumentList	D_ALWAYS		1248545	1					
ANR	1248662	Argument	D_ALWAYS		1248545	0					
ANR	1248663	Identifier	D_ALWAYS		1248545	0					
ANR	1248664	Argument	"""WARNING: failed to parse state from %s\\n"""		1248545	1					
ANR	1248665	PrimaryExpression	"""WARNING: failed to parse state from %s\\n"""		1248545	0					
ANR	1248666	Argument	m_state_file . c_str ( )		1248545	2					
ANR	1248667	CallExpression	m_state_file . c_str ( )		1248545	0					
ANR	1248668	Callee	m_state_file . c_str		1248545	0					
ANR	1248669	MemberAccess	m_state_file . c_str		1248545	0					
ANR	1248670	Identifier	m_state_file		1248545	0					
ANR	1248671	Identifier	c_str		1248545	1					
ANR	1248672	ArgumentList			1248545	1					
ANR	1248673	IdentifierDeclStatement	int timestamp = ( int ) m_last_poll ;	407:2:11156:11188	1248545	4	True				
ANR	1248674	IdentifierDecl	timestamp = ( int ) m_last_poll		1248545	0					
ANR	1248675	IdentifierDeclType	int		1248545	0					
ANR	1248676	Identifier	timestamp		1248545	1					
ANR	1248677	AssignmentExpression	timestamp = ( int ) m_last_poll		1248545	2		=			
ANR	1248678	Identifier	timestamp		1248545	0					
ANR	1248679	CastExpression	( int ) m_last_poll		1248545	1					
ANR	1248680	CastTarget	int		1248545	0					
ANR	1248681	Identifier	m_last_poll		1248545	1					
ANR	1248682	ExpressionStatement	"ad -> LookupInteger ( ATTR_LAST_POLL , timestamp )"	408:2:11192:11235	1248545	5	True				
ANR	1248683	CallExpression	"ad -> LookupInteger ( ATTR_LAST_POLL , timestamp )"		1248545	0					
ANR	1248684	Callee	ad -> LookupInteger		1248545	0					
ANR	1248685	PtrMemberAccess	ad -> LookupInteger		1248545	0					
ANR	1248686	Identifier	ad		1248545	0					
ANR	1248687	Identifier	LookupInteger		1248545	1					
ANR	1248688	ArgumentList	ATTR_LAST_POLL		1248545	1					
ANR	1248689	Argument	ATTR_LAST_POLL		1248545	0					
ANR	1248690	Identifier	ATTR_LAST_POLL		1248545	0					
ANR	1248691	Argument	timestamp		1248545	1					
ANR	1248692	Identifier	timestamp		1248545	0					
ANR	1248693	ExpressionStatement	m_last_poll = ( time_t ) timestamp	409:2:11239:11270	1248545	6	True				
ANR	1248694	AssignmentExpression	m_last_poll = ( time_t ) timestamp		1248545	0		=			
ANR	1248695	Identifier	m_last_poll		1248545	0					
ANR	1248696	CastExpression	( time_t ) timestamp		1248545	1					
ANR	1248697	CastTarget	time_t		1248545	0					
ANR	1248698	Identifier	timestamp		1248545	1					
ANR	1248699	ExpressionStatement	"dprintf ( D_ALWAYS , ""Last poll: %d\\n"" , ( int ) m_last_poll )"	411:2:11275:11327	1248545	7	True				
ANR	1248700	CallExpression	"dprintf ( D_ALWAYS , ""Last poll: %d\\n"" , ( int ) m_last_poll )"		1248545	0					
ANR	1248701	Callee	dprintf		1248545	0					
ANR	1248702	Identifier	dprintf		1248545	0					
ANR	1248703	ArgumentList	D_ALWAYS		1248545	1					
ANR	1248704	Argument	D_ALWAYS		1248545	0					
ANR	1248705	Identifier	D_ALWAYS		1248545	0					
ANR	1248706	Argument	"""Last poll: %d\\n"""		1248545	1					
ANR	1248707	PrimaryExpression	"""Last poll: %d\\n"""		1248545	0					
ANR	1248708	Argument	( int ) m_last_poll		1248545	2					
ANR	1248709	CastExpression	( int ) m_last_poll		1248545	0					
ANR	1248710	CastTarget	int		1248545	0					
ANR	1248711	Identifier	m_last_poll		1248545	1					
ANR	1248712	Statement	delete	413:2:11332:11337	1248545	8	True				
ANR	1248713	ExpressionStatement	ad	413:9:11339:11341	1248545	9	True				
ANR	1248714	Identifier	ad		1248545	0					
ANR	1248715	ReturnType	void		1248545	1					
ANR	1248716	Identifier	Defrag :: loadState		1248545	2					
ANR	1248717	ParameterList			1248545	3					
ANR	1248718	CFGEntryNode	ENTRY		1248545		True				
ANR	1248719	CFGExitNode	EXIT		1248545		True				
ANR	1248720	Symbol	errno		1248545						
ANR	1248721	Symbol	ad		1248545						
ANR	1248722	Symbol	D_ALWAYS		1248545						
ANR	1248723	Symbol	fp		1248545						
ANR	1248724	Symbol	adEmpty		1248545						
ANR	1248725	Symbol	ENOENT		1248545						
ANR	1248726	Symbol	isEOF		1248545						
ANR	1248727	Symbol	ATTR_LAST_POLL		1248545						
ANR	1248728	Symbol	m_state_file		1248545						
ANR	1248729	Symbol	errorReadingAd		1248545						
ANR	1248730	Symbol	m_last_poll		1248545						
ANR	1248731	Symbol	m_state_file . c_str		1248545						
ANR	1248732	Symbol	safe_fopen_wrapper_follow		1248545						
ANR	1248733	Symbol	timestamp		1248545						
ANR	1248734	Function	Defrag :: slotNameToDaemonName	417:0:11349:11575							
ANR	1248735	FunctionDef	"Defrag :: slotNameToDaemonName (std :: string const & name , std :: string & machine)"		1248734	0					
ANR	1248736	CompoundStatement		418:0:11429:11575	1248734	0					
ANR	1248737	IdentifierDeclStatement	size_t pos = name . find ( '@' ) ;	419:1:11432:11459	1248734	0	True				
ANR	1248738	IdentifierDecl	pos = name . find ( '@' )		1248734	0					
ANR	1248739	IdentifierDeclType	size_t		1248734	0					
ANR	1248740	Identifier	pos		1248734	1					
ANR	1248741	AssignmentExpression	pos = name . find ( '@' )		1248734	2		=			
ANR	1248742	Identifier	pos		1248734	0					
ANR	1248743	CallExpression	name . find ( '@' )		1248734	1					
ANR	1248744	Callee	name . find		1248734	0					
ANR	1248745	MemberAccess	name . find		1248734	0					
ANR	1248746	Identifier	name		1248734	0					
ANR	1248747	Identifier	find		1248734	1					
ANR	1248748	ArgumentList	'@'		1248734	1					
ANR	1248749	Argument	'@'		1248734	0					
ANR	1248750	PrimaryExpression	'@'		1248734	0					
ANR	1248751	IfStatement	if ( pos == std :: string :: npos )		1248734	1					
ANR	1248752	Condition	pos == std :: string :: npos	420:5:11466:11489	1248734	0	True				
ANR	1248753	EqualityExpression	pos == std :: string :: npos		1248734	0		==			
ANR	1248754	Identifier	pos		1248734	0					
ANR	1248755	Identifier	std :: string :: npos		1248734	1					
ANR	1248756	CompoundStatement		3:32:63:63	1248734	1					
ANR	1248757	ExpressionStatement	machine = name	421:2:11497:11511	1248734	0	True				
ANR	1248758	AssignmentExpression	machine = name		1248734	0		=			
ANR	1248759	Identifier	machine		1248734	0					
ANR	1248760	Identifier	name		1248734	1					
ANR	1248761	ElseStatement	else		1248734	0					
ANR	1248762	CompoundStatement		6:6:92:92	1248734	0					
ANR	1248763	ExpressionStatement	"machine . append ( name , pos + 1 , name . size ( ) - pos - 1 )"	424:2:11526:11570	1248734	0	True				
ANR	1248764	CallExpression	"machine . append ( name , pos + 1 , name . size ( ) - pos - 1 )"		1248734	0					
ANR	1248765	Callee	machine . append		1248734	0					
ANR	1248766	MemberAccess	machine . append		1248734	0					
ANR	1248767	Identifier	machine		1248734	0					
ANR	1248768	Identifier	append		1248734	1					
ANR	1248769	ArgumentList	name		1248734	1					
ANR	1248770	Argument	name		1248734	0					
ANR	1248771	Identifier	name		1248734	0					
ANR	1248772	Argument	pos + 1		1248734	1					
ANR	1248773	AdditiveExpression	pos + 1		1248734	0		+			
ANR	1248774	Identifier	pos		1248734	0					
ANR	1248775	PrimaryExpression	1		1248734	1					
ANR	1248776	Argument	name . size ( ) - pos - 1		1248734	2					
ANR	1248777	AdditiveExpression	name . size ( ) - pos - 1		1248734	0		-			
ANR	1248778	CallExpression	name . size ( )		1248734	0					
ANR	1248779	Callee	name . size		1248734	0					
ANR	1248780	MemberAccess	name . size		1248734	0					
ANR	1248781	Identifier	name		1248734	0					
ANR	1248782	Identifier	size		1248734	1					
ANR	1248783	ArgumentList			1248734	1					
ANR	1248784	AdditiveExpression	pos - 1		1248734	1		-			
ANR	1248785	Identifier	pos		1248734	0					
ANR	1248786	PrimaryExpression	1		1248734	1					
ANR	1248787	ReturnType	void		1248734	1					
ANR	1248788	Identifier	Defrag :: slotNameToDaemonName		1248734	2					
ANR	1248789	ParameterList	"std :: string const & name , std :: string & machine"		1248734	3					
ANR	1248790	Parameter	std :: string const & name	417:34:11383:11405	1248734	0	True				
ANR	1248791	ParameterType	std :: string const &		1248734	0					
ANR	1248792	Identifier	name		1248734	1					
ANR	1248793	Parameter	std :: string & machine	417:58:11407:11426	1248734	1	True				
ANR	1248794	ParameterType	std :: string &		1248734	0					
ANR	1248795	Identifier	machine		1248734	1					
ANR	1248796	CFGEntryNode	ENTRY		1248734		True				
ANR	1248797	CFGExitNode	EXIT		1248734		True				
ANR	1248798	Symbol	std :: string :: npos		1248734						
ANR	1248799	Symbol	pos		1248734						
ANR	1248800	Symbol	machine		1248734						
ANR	1248801	Symbol	name		1248734						
ANR	1248802	Symbol	name . size		1248734						
ANR	1248803	Symbol	name . find		1248734						
ANR	1248804	Function	prorate	431:0:11698:12191							
ANR	1248805	FunctionDef	"prorate (int n , int time_remaining , int period , int granularity)"		1248804	0					
ANR	1248806	CompoundStatement		432:0:11770:12191	1248804	0					
ANR	1248807	IdentifierDeclStatement	double frac = ( ( double ) time_remaining ) / period ;	433:1:11773:11818	1248804	0	True				
ANR	1248808	IdentifierDecl	frac = ( ( double ) time_remaining ) / period		1248804	0					
ANR	1248809	IdentifierDeclType	double		1248804	0					
ANR	1248810	Identifier	frac		1248804	1					
ANR	1248811	AssignmentExpression	frac = ( ( double ) time_remaining ) / period		1248804	2		=			
ANR	1248812	Identifier	frac		1248804	0					
ANR	1248813	MultiplicativeExpression	( ( double ) time_remaining ) / period		1248804	1		/			
ANR	1248814	CastExpression	( double ) time_remaining		1248804	0					
ANR	1248815	CastTarget	double		1248804	0					
ANR	1248816	Identifier	time_remaining		1248804	1					
ANR	1248817	Identifier	period		1248804	1					
ANR	1248818	ExpressionStatement	frac += ( ( double ) granularity ) / period	438:1:11937:11973	1248804	1	True				
ANR	1248819	AssignmentExpression	frac += ( ( double ) granularity ) / period		1248804	0		+=			
ANR	1248820	Identifier	frac		1248804	0					
ANR	1248821	MultiplicativeExpression	( ( double ) granularity ) / period		1248804	1		/			
ANR	1248822	CastExpression	( double ) granularity		1248804	0					
ANR	1248823	CastTarget	double		1248804	0					
ANR	1248824	Identifier	granularity		1248804	1					
ANR	1248825	Identifier	period		1248804	1					
ANR	1248826	IdentifierDeclStatement	int answer = ( int ) floor ( n * frac + 0.5 ) ;	440:1:11977:12014	1248804	2	True				
ANR	1248827	IdentifierDecl	answer = ( int ) floor ( n * frac + 0.5 )		1248804	0					
ANR	1248828	IdentifierDeclType	int		1248804	0					
ANR	1248829	Identifier	answer		1248804	1					
ANR	1248830	AssignmentExpression	answer = ( int ) floor ( n * frac + 0.5 )		1248804	2		=			
ANR	1248831	Identifier	answer		1248804	0					
ANR	1248832	CastExpression	( int ) floor ( n * frac + 0.5 )		1248804	1					
ANR	1248833	CastTarget	int		1248804	0					
ANR	1248834	CallExpression	floor ( n * frac + 0.5 )		1248804	1					
ANR	1248835	Callee	floor		1248804	0					
ANR	1248836	Identifier	floor		1248804	0					
ANR	1248837	ArgumentList	n * frac + 0.5		1248804	1					
ANR	1248838	Argument	n * frac + 0.5		1248804	0					
ANR	1248839	AdditiveExpression	n * frac + 0.5		1248804	0		+			
ANR	1248840	MultiplicativeExpression	n * frac		1248804	0		*			
ANR	1248841	Identifier	n		1248804	0					
ANR	1248842	Identifier	frac		1248804	1					
ANR	1248843	PrimaryExpression	0.5		1248804	1					
ANR	1248844	IfStatement	if ( ( n > 0 && answer > n ) || ( n < 0 && answer < n ) )		1248804	3					
ANR	1248845	Condition	( n > 0 && answer > n ) || ( n < 0 && answer < n )	442:5:12022:12067	1248804	0	True				
ANR	1248846	OrExpression	( n > 0 && answer > n ) || ( n < 0 && answer < n )		1248804	0		||			
ANR	1248847	AndExpression	n > 0 && answer > n		1248804	0		&&			
ANR	1248848	RelationalExpression	n > 0		1248804	0		>			
ANR	1248849	Identifier	n		1248804	0					
ANR	1248850	PrimaryExpression	0		1248804	1					
ANR	1248851	RelationalExpression	answer > n		1248804	1		>			
ANR	1248852	Identifier	answer		1248804	0					
ANR	1248853	Identifier	n		1248804	1					
ANR	1248854	AndExpression	n < 0 && answer < n		1248804	1		&&			
ANR	1248855	RelationalExpression	n < 0		1248804	0		<			
ANR	1248856	Identifier	n		1248804	0					
ANR	1248857	PrimaryExpression	0		1248804	1					
ANR	1248858	RelationalExpression	answer < n		1248804	1		<			
ANR	1248859	Identifier	answer		1248804	0					
ANR	1248860	Identifier	n		1248804	1					
ANR	1248861	CompoundStatement		11:54:300:300	1248804	1					
ANR	1248862	ReturnStatement	return n ;	443:2:12075:12083	1248804	0	True				
ANR	1248863	Identifier	n		1248804	0					
ANR	1248864	IfStatement	if ( answer * n < 0 )		1248804	4					
ANR	1248865	Condition	answer * n < 0	445:5:12124:12135	1248804	0	True				
ANR	1248866	RelationalExpression	answer * n < 0		1248804	0		<			
ANR	1248867	MultiplicativeExpression	answer * n		1248804	0		*			
ANR	1248868	Identifier	answer		1248804	0					
ANR	1248869	Identifier	n		1248804	1					
ANR	1248870	PrimaryExpression	0		1248804	1					
ANR	1248871	CompoundStatement		14:20:368:368	1248804	1					
ANR	1248872	ReturnStatement	return 0 ;	446:2:12162:12170	1248804	0	True				
ANR	1248873	PrimaryExpression	0		1248804	0					
ANR	1248874	ReturnStatement	return answer ;	448:1:12176:12189	1248804	5	True				
ANR	1248875	Identifier	answer		1248804	0					
ANR	1248876	ReturnType	static int		1248804	1					
ANR	1248877	Identifier	prorate		1248804	2					
ANR	1248878	ParameterList	"int n , int time_remaining , int period , int granularity"		1248804	3					
ANR	1248879	Parameter	int n	431:19:11717:11721	1248804	0	True				
ANR	1248880	ParameterType	int		1248804	0					
ANR	1248881	Identifier	n		1248804	1					
ANR	1248882	Parameter	int time_remaining	431:25:11723:11740	1248804	1	True				
ANR	1248883	ParameterType	int		1248804	0					
ANR	1248884	Identifier	time_remaining		1248804	1					
ANR	1248885	Parameter	int period	431:44:11742:11751	1248804	2	True				
ANR	1248886	ParameterType	int		1248804	0					
ANR	1248887	Identifier	period		1248804	1					
ANR	1248888	Parameter	int granularity	431:55:11753:11767	1248804	3	True				
ANR	1248889	ParameterType	int		1248804	0					
ANR	1248890	Identifier	granularity		1248804	1					
ANR	1248891	CFGEntryNode	ENTRY		1248804		True				
ANR	1248892	CFGExitNode	EXIT		1248804		True				
ANR	1248893	Symbol	time_remaining		1248804						
ANR	1248894	Symbol	period		1248804						
ANR	1248895	Symbol	answer		1248804						
ANR	1248896	Symbol	granularity		1248804						
ANR	1248897	Symbol	floor		1248804						
ANR	1248898	Symbol	n		1248804						
ANR	1248899	Symbol	frac		1248804						
ANR	1248900	Function	Defrag :: poll	451:0:12194:16851							
ANR	1248901	FunctionDef	Defrag :: poll ()		1248900	0					
ANR	1248902	CompoundStatement		452:0:12214:16851	1248900	0					
ANR	1248903	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Evaluating defragmentation policy.\\n"" )"	453:1:12217:12276	1248900	0	True				
ANR	1248904	CallExpression	"dprintf ( D_FULLDEBUG , ""Evaluating defragmentation policy.\\n"" )"		1248900	0					
ANR	1248905	Callee	dprintf		1248900	0					
ANR	1248906	Identifier	dprintf		1248900	0					
ANR	1248907	ArgumentList	D_FULLDEBUG		1248900	1					
ANR	1248908	Argument	D_FULLDEBUG		1248900	0					
ANR	1248909	Identifier	D_FULLDEBUG		1248900	0					
ANR	1248910	Argument	"""Evaluating defragmentation policy.\\n"""		1248900	1					
ANR	1248911	PrimaryExpression	"""Evaluating defragmentation policy.\\n"""		1248900	0					
ANR	1248912	IdentifierDeclStatement	time_t now = time ( NULL ) ;	461:1:12553:12576	1248900	1	True				
ANR	1248913	IdentifierDecl	now = time ( NULL )		1248900	0					
ANR	1248914	IdentifierDeclType	time_t		1248900	0					
ANR	1248915	Identifier	now		1248900	1					
ANR	1248916	AssignmentExpression	now = time ( NULL )		1248900	2		=			
ANR	1248917	Identifier	now		1248900	0					
ANR	1248918	CallExpression	time ( NULL )		1248900	1					
ANR	1248919	Callee	time		1248900	0					
ANR	1248920	Identifier	time		1248900	0					
ANR	1248921	ArgumentList	NULL		1248900	1					
ANR	1248922	Argument	NULL		1248900	0					
ANR	1248923	Identifier	NULL		1248900	0					
ANR	1248924	IdentifierDeclStatement	time_t prev = m_last_poll ;	462:1:12579:12604	1248900	2	True				
ANR	1248925	IdentifierDecl	prev = m_last_poll		1248900	0					
ANR	1248926	IdentifierDeclType	time_t		1248900	0					
ANR	1248927	Identifier	prev		1248900	1					
ANR	1248928	AssignmentExpression	prev = m_last_poll		1248900	2		=			
ANR	1248929	Identifier	m_last_poll		1248900	0					
ANR	1248930	Identifier	m_last_poll		1248900	1					
ANR	1248931	ExpressionStatement	m_last_poll = now	463:1:12607:12624	1248900	3	True				
ANR	1248932	AssignmentExpression	m_last_poll = now		1248900	0		=			
ANR	1248933	Identifier	m_last_poll		1248900	0					
ANR	1248934	Identifier	now		1248900	1					
ANR	1248935	ExpressionStatement	saveState ( )	464:1:12627:12638	1248900	4	True				
ANR	1248936	CallExpression	saveState ( )		1248900	0					
ANR	1248937	Callee	saveState		1248900	0					
ANR	1248938	Identifier	saveState		1248900	0					
ANR	1248939	ArgumentList			1248900	1					
ANR	1248940	ExpressionStatement	m_stats . Tick ( )	466:1:12642:12656	1248900	5	True				
ANR	1248941	CallExpression	m_stats . Tick ( )		1248900	0					
ANR	1248942	Callee	m_stats . Tick		1248900	0					
ANR	1248943	MemberAccess	m_stats . Tick		1248900	0					
ANR	1248944	Identifier	m_stats		1248900	0					
ANR	1248945	Identifier	Tick		1248900	1					
ANR	1248946	ArgumentList			1248900	1					
ANR	1248947	IdentifierDeclStatement	int num_to_drain = m_draining_per_poll ;	468:1:12660:12698	1248900	6	True				
ANR	1248948	IdentifierDecl	num_to_drain = m_draining_per_poll		1248900	0					
ANR	1248949	IdentifierDeclType	int		1248900	0					
ANR	1248950	Identifier	num_to_drain		1248900	1					
ANR	1248951	AssignmentExpression	num_to_drain = m_draining_per_poll		1248900	2		=			
ANR	1248952	Identifier	m_draining_per_poll		1248900	0					
ANR	1248953	Identifier	m_draining_per_poll		1248900	1					
ANR	1248954	IdentifierDeclStatement	time_t last_hour = ( prev / 3600 ) * 3600 ;	470:1:12702:12742	1248900	7	True				
ANR	1248955	IdentifierDecl	last_hour = ( prev / 3600 ) * 3600		1248900	0					
ANR	1248956	IdentifierDeclType	time_t		1248900	0					
ANR	1248957	Identifier	last_hour		1248900	1					
ANR	1248958	AssignmentExpression	last_hour = ( prev / 3600 ) * 3600		1248900	2		=			
ANR	1248959	Identifier	last_hour		1248900	0					
ANR	1248960	MultiplicativeExpression	( prev / 3600 ) * 3600		1248900	1		*			
ANR	1248961	MultiplicativeExpression	prev / 3600		1248900	0		/			
ANR	1248962	Identifier	prev		1248900	0					
ANR	1248963	PrimaryExpression	3600		1248900	1					
ANR	1248964	PrimaryExpression	3600		1248900	1					
ANR	1248965	IdentifierDeclStatement	time_t current_hour = ( now / 3600 ) * 3600 ;	471:1:12745:12785	1248900	8	True				
ANR	1248966	IdentifierDecl	current_hour = ( now / 3600 ) * 3600		1248900	0					
ANR	1248967	IdentifierDeclType	time_t		1248900	0					
ANR	1248968	Identifier	current_hour		1248900	1					
ANR	1248969	AssignmentExpression	current_hour = ( now / 3600 ) * 3600		1248900	2		=			
ANR	1248970	Identifier	current_hour		1248900	0					
ANR	1248971	MultiplicativeExpression	( now / 3600 ) * 3600		1248900	1		*			
ANR	1248972	MultiplicativeExpression	now / 3600		1248900	0		/			
ANR	1248973	Identifier	now		1248900	0					
ANR	1248974	PrimaryExpression	3600		1248900	1					
ANR	1248975	PrimaryExpression	3600		1248900	1					
ANR	1248976	IdentifierDeclStatement	time_t last_day = ( prev / ( 3600 * 24 ) ) * 3600 * 24 ;	472:1:12788:12836	1248900	9	True				
ANR	1248977	IdentifierDecl	last_day = ( prev / ( 3600 * 24 ) ) * 3600 * 24		1248900	0					
ANR	1248978	IdentifierDeclType	time_t		1248900	0					
ANR	1248979	Identifier	last_day		1248900	1					
ANR	1248980	AssignmentExpression	last_day = ( prev / ( 3600 * 24 ) ) * 3600 * 24		1248900	2		=			
ANR	1248981	Identifier	last_day		1248900	0					
ANR	1248982	MultiplicativeExpression	( prev / ( 3600 * 24 ) ) * 3600 * 24		1248900	1		*			
ANR	1248983	MultiplicativeExpression	prev / ( 3600 * 24 )		1248900	0		/			
ANR	1248984	Identifier	prev		1248900	0					
ANR	1248985	MultiplicativeExpression	3600 * 24		1248900	1		*			
ANR	1248986	PrimaryExpression	3600		1248900	0					
ANR	1248987	PrimaryExpression	24		1248900	1					
ANR	1248988	MultiplicativeExpression	3600 * 24		1248900	1		*			
ANR	1248989	PrimaryExpression	3600		1248900	0					
ANR	1248990	PrimaryExpression	24		1248900	1					
ANR	1248991	IdentifierDeclStatement	time_t current_day = ( now / ( 3600 * 24 ) ) * 3600 * 24 ;	473:1:12839:12887	1248900	10	True				
ANR	1248992	IdentifierDecl	current_day = ( now / ( 3600 * 24 ) ) * 3600 * 24		1248900	0					
ANR	1248993	IdentifierDeclType	time_t		1248900	0					
ANR	1248994	Identifier	current_day		1248900	1					
ANR	1248995	AssignmentExpression	current_day = ( now / ( 3600 * 24 ) ) * 3600 * 24		1248900	2		=			
ANR	1248996	Identifier	current_day		1248900	0					
ANR	1248997	MultiplicativeExpression	( now / ( 3600 * 24 ) ) * 3600 * 24		1248900	1		*			
ANR	1248998	MultiplicativeExpression	now / ( 3600 * 24 )		1248900	0		/			
ANR	1248999	Identifier	now		1248900	0					
ANR	1249000	MultiplicativeExpression	3600 * 24		1248900	1		*			
ANR	1249001	PrimaryExpression	3600		1248900	0					
ANR	1249002	PrimaryExpression	24		1248900	1					
ANR	1249003	MultiplicativeExpression	3600 * 24		1248900	1		*			
ANR	1249004	PrimaryExpression	3600		1248900	0					
ANR	1249005	PrimaryExpression	24		1248900	1					
ANR	1249006	IfStatement	if ( current_hour != last_hour )		1248900	11					
ANR	1249007	Condition	current_hour != last_hour	475:5:12895:12919	1248900	0	True				
ANR	1249008	EqualityExpression	current_hour != last_hour		1248900	0		!=			
ANR	1249009	Identifier	current_hour		1248900	0					
ANR	1249010	Identifier	last_hour		1248900	1					
ANR	1249011	CompoundStatement		24:33:708:708	1248900	1					
ANR	1249012	ExpressionStatement	"num_to_drain += prorate ( m_draining_per_poll_hour , now - current_hour , 3600 , m_polling_interval )"	476:2:12927:13017	1248900	0	True				
ANR	1249013	AssignmentExpression	"num_to_drain += prorate ( m_draining_per_poll_hour , now - current_hour , 3600 , m_polling_interval )"		1248900	0		+=			
ANR	1249014	Identifier	num_to_drain		1248900	0					
ANR	1249015	CallExpression	"prorate ( m_draining_per_poll_hour , now - current_hour , 3600 , m_polling_interval )"		1248900	1					
ANR	1249016	Callee	prorate		1248900	0					
ANR	1249017	Identifier	prorate		1248900	0					
ANR	1249018	ArgumentList	m_draining_per_poll_hour		1248900	1					
ANR	1249019	Argument	m_draining_per_poll_hour		1248900	0					
ANR	1249020	Identifier	m_draining_per_poll_hour		1248900	0					
ANR	1249021	Argument	now - current_hour		1248900	1					
ANR	1249022	AdditiveExpression	now - current_hour		1248900	0		-			
ANR	1249023	Identifier	now		1248900	0					
ANR	1249024	Identifier	current_hour		1248900	1					
ANR	1249025	Argument	3600		1248900	2					
ANR	1249026	PrimaryExpression	3600		1248900	0					
ANR	1249027	Argument	m_polling_interval		1248900	3					
ANR	1249028	Identifier	m_polling_interval		1248900	0					
ANR	1249029	IfStatement	if ( current_day != last_day )		1248900	12					
ANR	1249030	Condition	current_day != last_day	478:5:13027:13049	1248900	0	True				
ANR	1249031	EqualityExpression	current_day != last_day		1248900	0		!=			
ANR	1249032	Identifier	current_day		1248900	0					
ANR	1249033	Identifier	last_day		1248900	1					
ANR	1249034	CompoundStatement		27:31:838:838	1248900	1					
ANR	1249035	ExpressionStatement	"num_to_drain += prorate ( m_draining_per_poll_day , now - current_day , 3600 * 24 , m_polling_interval )"	479:2:13057:13148	1248900	0	True				
ANR	1249036	AssignmentExpression	"num_to_drain += prorate ( m_draining_per_poll_day , now - current_day , 3600 * 24 , m_polling_interval )"		1248900	0		+=			
ANR	1249037	Identifier	num_to_drain		1248900	0					
ANR	1249038	CallExpression	"prorate ( m_draining_per_poll_day , now - current_day , 3600 * 24 , m_polling_interval )"		1248900	1					
ANR	1249039	Callee	prorate		1248900	0					
ANR	1249040	Identifier	prorate		1248900	0					
ANR	1249041	ArgumentList	m_draining_per_poll_day		1248900	1					
ANR	1249042	Argument	m_draining_per_poll_day		1248900	0					
ANR	1249043	Identifier	m_draining_per_poll_day		1248900	0					
ANR	1249044	Argument	now - current_day		1248900	1					
ANR	1249045	AdditiveExpression	now - current_day		1248900	0		-			
ANR	1249046	Identifier	now		1248900	0					
ANR	1249047	Identifier	current_day		1248900	1					
ANR	1249048	Argument	3600 * 24		1248900	2					
ANR	1249049	MultiplicativeExpression	3600 * 24		1248900	0		*			
ANR	1249050	PrimaryExpression	3600		1248900	0					
ANR	1249051	PrimaryExpression	24		1248900	1					
ANR	1249052	Argument	m_polling_interval		1248900	3					
ANR	1249053	Identifier	m_polling_interval		1248900	0					
ANR	1249054	IdentifierDeclStatement	"char const * draining_constraint = ""Draining && Offline=!=True"" ;"	482:1:13155:13217	1248900	13	True				
ANR	1249055	IdentifierDecl	"* draining_constraint = ""Draining && Offline=!=True"""		1248900	0					
ANR	1249056	IdentifierDeclType	char const *		1248900	0					
ANR	1249057	Identifier	draining_constraint		1248900	1					
ANR	1249058	AssignmentExpression	"* draining_constraint = ""Draining && Offline=!=True"""		1248900	2		=			
ANR	1249059	Identifier	draining_constraint		1248900	0					
ANR	1249060	PrimaryExpression	"""Draining && Offline=!=True"""		1248900	1					
ANR	1249061	IdentifierDeclStatement	"int num_draining = countMachines ( draining_constraint , ""<InternalDrainingConstraint>"" ) ;"	483:1:13220:13304	1248900	14	True				
ANR	1249062	IdentifierDecl	"num_draining = countMachines ( draining_constraint , ""<InternalDrainingConstraint>"" )"		1248900	0					
ANR	1249063	IdentifierDeclType	int		1248900	0					
ANR	1249064	Identifier	num_draining		1248900	1					
ANR	1249065	AssignmentExpression	"num_draining = countMachines ( draining_constraint , ""<InternalDrainingConstraint>"" )"		1248900	2		=			
ANR	1249066	Identifier	num_draining		1248900	0					
ANR	1249067	CallExpression	"countMachines ( draining_constraint , ""<InternalDrainingConstraint>"" )"		1248900	1					
ANR	1249068	Callee	countMachines		1248900	0					
ANR	1249069	Identifier	countMachines		1248900	0					
ANR	1249070	ArgumentList	draining_constraint		1248900	1					
ANR	1249071	Argument	draining_constraint		1248900	0					
ANR	1249072	Identifier	draining_constraint		1248900	0					
ANR	1249073	Argument	"""<InternalDrainingConstraint>"""		1248900	1					
ANR	1249074	PrimaryExpression	"""<InternalDrainingConstraint>"""		1248900	0					
ANR	1249075	ExpressionStatement	m_stats . MachinesDraining = num_draining	484:1:13307:13346	1248900	15	True				
ANR	1249076	AssignmentExpression	m_stats . MachinesDraining = num_draining		1248900	0		=			
ANR	1249077	MemberAccess	m_stats . MachinesDraining		1248900	0					
ANR	1249078	Identifier	m_stats		1248900	0					
ANR	1249079	Identifier	MachinesDraining		1248900	1					
ANR	1249080	Identifier	num_draining		1248900	1					
ANR	1249081	IdentifierDeclStatement	MachineSet whole_machines ;	486:1:13350:13375	1248900	16	True				
ANR	1249082	IdentifierDecl	whole_machines		1248900	0					
ANR	1249083	IdentifierDeclType	MachineSet		1248900	0					
ANR	1249084	Identifier	whole_machines		1248900	1					
ANR	1249085	IdentifierDeclStatement	"int num_whole_machines = countMachines ( m_whole_machine_expr . c_str ( ) , ""DEFRAG_WHOLE_MACHINE_EXPR"" , & whole_machines ) ;"	487:1:13378:13490	1248900	17	True				
ANR	1249086	IdentifierDecl	"num_whole_machines = countMachines ( m_whole_machine_expr . c_str ( ) , ""DEFRAG_WHOLE_MACHINE_EXPR"" , & whole_machines )"		1248900	0					
ANR	1249087	IdentifierDeclType	int		1248900	0					
ANR	1249088	Identifier	num_whole_machines		1248900	1					
ANR	1249089	AssignmentExpression	"num_whole_machines = countMachines ( m_whole_machine_expr . c_str ( ) , ""DEFRAG_WHOLE_MACHINE_EXPR"" , & whole_machines )"		1248900	2		=			
ANR	1249090	Identifier	num_whole_machines		1248900	0					
ANR	1249091	CallExpression	"countMachines ( m_whole_machine_expr . c_str ( ) , ""DEFRAG_WHOLE_MACHINE_EXPR"" , & whole_machines )"		1248900	1					
ANR	1249092	Callee	countMachines		1248900	0					
ANR	1249093	Identifier	countMachines		1248900	0					
ANR	1249094	ArgumentList	m_whole_machine_expr . c_str ( )		1248900	1					
ANR	1249095	Argument	m_whole_machine_expr . c_str ( )		1248900	0					
ANR	1249096	CallExpression	m_whole_machine_expr . c_str ( )		1248900	0					
ANR	1249097	Callee	m_whole_machine_expr . c_str		1248900	0					
ANR	1249098	MemberAccess	m_whole_machine_expr . c_str		1248900	0					
ANR	1249099	Identifier	m_whole_machine_expr		1248900	0					
ANR	1249100	Identifier	c_str		1248900	1					
ANR	1249101	ArgumentList			1248900	1					
ANR	1249102	Argument	"""DEFRAG_WHOLE_MACHINE_EXPR"""		1248900	1					
ANR	1249103	PrimaryExpression	"""DEFRAG_WHOLE_MACHINE_EXPR"""		1248900	0					
ANR	1249104	Argument	& whole_machines		1248900	2					
ANR	1249105	UnaryOperationExpression	& whole_machines		1248900	0					
ANR	1249106	UnaryOperator	&		1248900	0					
ANR	1249107	Identifier	whole_machines		1248900	1					
ANR	1249108	ExpressionStatement	m_stats . WholeMachines = num_whole_machines	488:1:13493:13535	1248900	18	True				
ANR	1249109	AssignmentExpression	m_stats . WholeMachines = num_whole_machines		1248900	0		=			
ANR	1249110	MemberAccess	m_stats . WholeMachines		1248900	0					
ANR	1249111	Identifier	m_stats		1248900	0					
ANR	1249112	Identifier	WholeMachines		1248900	1					
ANR	1249113	Identifier	num_whole_machines		1248900	1					
ANR	1249114	ExpressionStatement	"dprintf ( D_ALWAYS , ""There are currently %d draining and %d whole machines.\\n"" , num_draining , num_whole_machines )"	490:1:13539:13651	1248900	19	True				
ANR	1249115	CallExpression	"dprintf ( D_ALWAYS , ""There are currently %d draining and %d whole machines.\\n"" , num_draining , num_whole_machines )"		1248900	0					
ANR	1249116	Callee	dprintf		1248900	0					
ANR	1249117	Identifier	dprintf		1248900	0					
ANR	1249118	ArgumentList	D_ALWAYS		1248900	1					
ANR	1249119	Argument	D_ALWAYS		1248900	0					
ANR	1249120	Identifier	D_ALWAYS		1248900	0					
ANR	1249121	Argument	"""There are currently %d draining and %d whole machines.\\n"""		1248900	1					
ANR	1249122	PrimaryExpression	"""There are currently %d draining and %d whole machines.\\n"""		1248900	0					
ANR	1249123	Argument	num_draining		1248900	2					
ANR	1249124	Identifier	num_draining		1248900	0					
ANR	1249125	Argument	num_whole_machines		1248900	3					
ANR	1249126	Identifier	num_whole_machines		1248900	0					
ANR	1249127	ExpressionStatement	queryDrainingCost ( )	493:1:13655:13674	1248900	20	True				
ANR	1249128	CallExpression	queryDrainingCost ( )		1248900	0					
ANR	1249129	Callee	queryDrainingCost		1248900	0					
ANR	1249130	Identifier	queryDrainingCost		1248900	0					
ANR	1249131	ArgumentList			1248900	1					
ANR	1249132	IfStatement	if ( num_to_drain <= 0 )		1248900	21					
ANR	1249133	Condition	num_to_drain <= 0	495:5:13682:13698	1248900	0	True				
ANR	1249134	RelationalExpression	num_to_drain <= 0		1248900	0		<=			
ANR	1249135	Identifier	num_to_drain		1248900	0					
ANR	1249136	PrimaryExpression	0		1248900	1					
ANR	1249137	CompoundStatement		44:25:1487:1487	1248900	1					
ANR	1249138	ExpressionStatement	"dprintf ( D_ALWAYS , ""Doing nothing, because number to drain in next %ds is calculated to be 0.\\n"" , m_polling_interval )"	496:2:13706:13825	1248900	0	True				
ANR	1249139	CallExpression	"dprintf ( D_ALWAYS , ""Doing nothing, because number to drain in next %ds is calculated to be 0.\\n"" , m_polling_interval )"		1248900	0					
ANR	1249140	Callee	dprintf		1248900	0					
ANR	1249141	Identifier	dprintf		1248900	0					
ANR	1249142	ArgumentList	D_ALWAYS		1248900	1					
ANR	1249143	Argument	D_ALWAYS		1248900	0					
ANR	1249144	Identifier	D_ALWAYS		1248900	0					
ANR	1249145	Argument	"""Doing nothing, because number to drain in next %ds is calculated to be 0.\\n"""		1248900	1					
ANR	1249146	PrimaryExpression	"""Doing nothing, because number to drain in next %ds is calculated to be 0.\\n"""		1248900	0					
ANR	1249147	Argument	m_polling_interval		1248900	2					
ANR	1249148	Identifier	m_polling_interval		1248900	0					
ANR	1249149	ReturnStatement	return ;	498:2:13829:13835	1248900	1	True				
ANR	1249150	IfStatement	if ( ( int ) ceil ( m_draining_per_hour ) <= 0 )		1248900	22					
ANR	1249151	Condition	( int ) ceil ( m_draining_per_hour ) <= 0	501:5:13846:13880	1248900	0	True				
ANR	1249152	RelationalExpression	( int ) ceil ( m_draining_per_hour ) <= 0		1248900	0		<=			
ANR	1249153	CastExpression	( int ) ceil ( m_draining_per_hour )		1248900	0					
ANR	1249154	CastTarget	int		1248900	0					
ANR	1249155	CallExpression	ceil ( m_draining_per_hour )		1248900	1					
ANR	1249156	Callee	ceil		1248900	0					
ANR	1249157	Identifier	ceil		1248900	0					
ANR	1249158	ArgumentList	m_draining_per_hour		1248900	1					
ANR	1249159	Argument	m_draining_per_hour		1248900	0					
ANR	1249160	Identifier	m_draining_per_hour		1248900	0					
ANR	1249161	PrimaryExpression	0		1248900	1					
ANR	1249162	CompoundStatement		50:43:1669:1669	1248900	1					
ANR	1249163	ExpressionStatement	"dprintf ( D_ALWAYS , ""Doing nothing, because DEFRAG_DRAINING_MACHINES_PER_HOUR=%f\\n"" , m_draining_per_hour )"	502:2:13888:13994	1248900	0	True				
ANR	1249164	CallExpression	"dprintf ( D_ALWAYS , ""Doing nothing, because DEFRAG_DRAINING_MACHINES_PER_HOUR=%f\\n"" , m_draining_per_hour )"		1248900	0					
ANR	1249165	Callee	dprintf		1248900	0					
ANR	1249166	Identifier	dprintf		1248900	0					
ANR	1249167	ArgumentList	D_ALWAYS		1248900	1					
ANR	1249168	Argument	D_ALWAYS		1248900	0					
ANR	1249169	Identifier	D_ALWAYS		1248900	0					
ANR	1249170	Argument	"""Doing nothing, because DEFRAG_DRAINING_MACHINES_PER_HOUR=%f\\n"""		1248900	1					
ANR	1249171	PrimaryExpression	"""Doing nothing, because DEFRAG_DRAINING_MACHINES_PER_HOUR=%f\\n"""		1248900	0					
ANR	1249172	Argument	m_draining_per_hour		1248900	2					
ANR	1249173	Identifier	m_draining_per_hour		1248900	0					
ANR	1249174	ReturnStatement	return ;	504:2:13998:14004	1248900	1	True				
ANR	1249175	IfStatement	if ( m_max_draining == 0 )		1248900	23					
ANR	1249176	Condition	m_max_draining == 0	507:5:14015:14033	1248900	0	True				
ANR	1249177	EqualityExpression	m_max_draining == 0		1248900	0		==			
ANR	1249178	Identifier	m_max_draining		1248900	0					
ANR	1249179	PrimaryExpression	0		1248900	1					
ANR	1249180	CompoundStatement		56:27:1822:1822	1248900	1					
ANR	1249181	ExpressionStatement	"dprintf ( D_ALWAYS , ""Doing nothing, because DEFRAG_MAX_CONCURRENT_DRAINING=0\\n"" )"	508:2:14041:14118	1248900	0	True				
ANR	1249182	CallExpression	"dprintf ( D_ALWAYS , ""Doing nothing, because DEFRAG_MAX_CONCURRENT_DRAINING=0\\n"" )"		1248900	0					
ANR	1249183	Callee	dprintf		1248900	0					
ANR	1249184	Identifier	dprintf		1248900	0					
ANR	1249185	ArgumentList	D_ALWAYS		1248900	1					
ANR	1249186	Argument	D_ALWAYS		1248900	0					
ANR	1249187	Identifier	D_ALWAYS		1248900	0					
ANR	1249188	Argument	"""Doing nothing, because DEFRAG_MAX_CONCURRENT_DRAINING=0\\n"""		1248900	1					
ANR	1249189	PrimaryExpression	"""Doing nothing, because DEFRAG_MAX_CONCURRENT_DRAINING=0\\n"""		1248900	0					
ANR	1249190	ReturnStatement	return ;	509:2:14122:14128	1248900	1	True				
ANR	1249191	IfStatement	if ( m_max_whole_machines == 0 )		1248900	24					
ANR	1249192	Condition	m_max_whole_machines == 0	512:5:14139:14163	1248900	0	True				
ANR	1249193	EqualityExpression	m_max_whole_machines == 0		1248900	0		==			
ANR	1249194	Identifier	m_max_whole_machines		1248900	0					
ANR	1249195	PrimaryExpression	0		1248900	1					
ANR	1249196	CompoundStatement		61:33:1952:1952	1248900	1					
ANR	1249197	ExpressionStatement	"dprintf ( D_ALWAYS , ""Doing nothing, because DEFRAG_MAX_WHOLE_MACHINES=0\\n"" )"	513:2:14171:14243	1248900	0	True				
ANR	1249198	CallExpression	"dprintf ( D_ALWAYS , ""Doing nothing, because DEFRAG_MAX_WHOLE_MACHINES=0\\n"" )"		1248900	0					
ANR	1249199	Callee	dprintf		1248900	0					
ANR	1249200	Identifier	dprintf		1248900	0					
ANR	1249201	ArgumentList	D_ALWAYS		1248900	1					
ANR	1249202	Argument	D_ALWAYS		1248900	0					
ANR	1249203	Identifier	D_ALWAYS		1248900	0					
ANR	1249204	Argument	"""Doing nothing, because DEFRAG_MAX_WHOLE_MACHINES=0\\n"""		1248900	1					
ANR	1249205	PrimaryExpression	"""Doing nothing, because DEFRAG_MAX_WHOLE_MACHINES=0\\n"""		1248900	0					
ANR	1249206	ReturnStatement	return ;	514:2:14247:14253	1248900	1	True				
ANR	1249207	IfStatement	if ( m_max_draining >= 0 )		1248900	25					
ANR	1249208	Condition	m_max_draining >= 0	517:5:14264:14282	1248900	0	True				
ANR	1249209	RelationalExpression	m_max_draining >= 0		1248900	0		>=			
ANR	1249210	Identifier	m_max_draining		1248900	0					
ANR	1249211	PrimaryExpression	0		1248900	1					
ANR	1249212	CompoundStatement		66:27:2071:2071	1248900	1					
ANR	1249213	IfStatement	if ( num_draining >= m_max_draining )		1248900	0					
ANR	1249214	Condition	num_draining >= m_max_draining	518:6:14294:14323	1248900	0	True				
ANR	1249215	RelationalExpression	num_draining >= m_max_draining		1248900	0		>=			
ANR	1249216	Identifier	num_draining		1248900	0					
ANR	1249217	Identifier	m_max_draining		1248900	1					
ANR	1249218	CompoundStatement		67:39:2112:2112	1248900	1					
ANR	1249219	ExpressionStatement	"dprintf ( D_ALWAYS , ""Doing nothing, because DEFRAG_MAX_CONCURRENT_DRAINING=%d and there are %d draining machines.\\n"" , m_max_draining , num_draining )"	519:3:14332:14481	1248900	0	True				
ANR	1249220	CallExpression	"dprintf ( D_ALWAYS , ""Doing nothing, because DEFRAG_MAX_CONCURRENT_DRAINING=%d and there are %d draining machines.\\n"" , m_max_draining , num_draining )"		1248900	0					
ANR	1249221	Callee	dprintf		1248900	0					
ANR	1249222	Identifier	dprintf		1248900	0					
ANR	1249223	ArgumentList	D_ALWAYS		1248900	1					
ANR	1249224	Argument	D_ALWAYS		1248900	0					
ANR	1249225	Identifier	D_ALWAYS		1248900	0					
ANR	1249226	Argument	"""Doing nothing, because DEFRAG_MAX_CONCURRENT_DRAINING=%d and there are %d draining machines.\\n"""		1248900	1					
ANR	1249227	PrimaryExpression	"""Doing nothing, because DEFRAG_MAX_CONCURRENT_DRAINING=%d and there are %d draining machines.\\n"""		1248900	0					
ANR	1249228	Argument	m_max_draining		1248900	2					
ANR	1249229	Identifier	m_max_draining		1248900	0					
ANR	1249230	Argument	num_draining		1248900	3					
ANR	1249231	Identifier	num_draining		1248900	0					
ANR	1249232	ReturnStatement	return ;	521:3:14486:14492	1248900	1	True				
ANR	1249233	ElseStatement	else		1248900	0					
ANR	1249234	IfStatement	if ( num_draining < 0 )		1248900	0					
ANR	1249235	Condition	num_draining < 0	523:11:14509:14524	1248900	0	True				
ANR	1249236	RelationalExpression	num_draining < 0		1248900	0		<			
ANR	1249237	Identifier	num_draining		1248900	0					
ANR	1249238	PrimaryExpression	0		1248900	1					
ANR	1249239	CompoundStatement		72:30:2313:2313	1248900	1					
ANR	1249240	ExpressionStatement	"dprintf ( D_ALWAYS , ""Doing nothing, because DEFRAG_MAX_CONCURRENT_DRAINING=%d and the query to count draining machines failed.\\n"" , m_max_draining )"	524:3:14533:14681	1248900	0	True				
ANR	1249241	CallExpression	"dprintf ( D_ALWAYS , ""Doing nothing, because DEFRAG_MAX_CONCURRENT_DRAINING=%d and the query to count draining machines failed.\\n"" , m_max_draining )"		1248900	0					
ANR	1249242	Callee	dprintf		1248900	0					
ANR	1249243	Identifier	dprintf		1248900	0					
ANR	1249244	ArgumentList	D_ALWAYS		1248900	1					
ANR	1249245	Argument	D_ALWAYS		1248900	0					
ANR	1249246	Identifier	D_ALWAYS		1248900	0					
ANR	1249247	Argument	"""Doing nothing, because DEFRAG_MAX_CONCURRENT_DRAINING=%d and the query to count draining machines failed.\\n"""		1248900	1					
ANR	1249248	PrimaryExpression	"""Doing nothing, because DEFRAG_MAX_CONCURRENT_DRAINING=%d and the query to count draining machines failed.\\n"""		1248900	0					
ANR	1249249	Argument	m_max_draining		1248900	2					
ANR	1249250	Identifier	m_max_draining		1248900	0					
ANR	1249251	ReturnStatement	return ;	526:3:14686:14692	1248900	1	True				
ANR	1249252	IfStatement	if ( m_max_whole_machines >= 0 )		1248900	26					
ANR	1249253	Condition	m_max_whole_machines >= 0	530:5:14707:14731	1248900	0	True				
ANR	1249254	RelationalExpression	m_max_whole_machines >= 0		1248900	0		>=			
ANR	1249255	Identifier	m_max_whole_machines		1248900	0					
ANR	1249256	PrimaryExpression	0		1248900	1					
ANR	1249257	CompoundStatement		79:33:2520:2520	1248900	1					
ANR	1249258	IfStatement	if ( num_whole_machines >= m_max_whole_machines )		1248900	0					
ANR	1249259	Condition	num_whole_machines >= m_max_whole_machines	531:6:14743:14784	1248900	0	True				
ANR	1249260	RelationalExpression	num_whole_machines >= m_max_whole_machines		1248900	0		>=			
ANR	1249261	Identifier	num_whole_machines		1248900	0					
ANR	1249262	Identifier	m_max_whole_machines		1248900	1					
ANR	1249263	CompoundStatement		80:51:2573:2573	1248900	1					
ANR	1249264	ExpressionStatement	"dprintf ( D_ALWAYS , ""Doing nothing, because DEFRAG_MAX_WHOLE_MACHINES=%d and there are %d whole machines.\\n"" , m_max_whole_machines , num_whole_machines )"	532:3:14793:14946	1248900	0	True				
ANR	1249265	CallExpression	"dprintf ( D_ALWAYS , ""Doing nothing, because DEFRAG_MAX_WHOLE_MACHINES=%d and there are %d whole machines.\\n"" , m_max_whole_machines , num_whole_machines )"		1248900	0					
ANR	1249266	Callee	dprintf		1248900	0					
ANR	1249267	Identifier	dprintf		1248900	0					
ANR	1249268	ArgumentList	D_ALWAYS		1248900	1					
ANR	1249269	Argument	D_ALWAYS		1248900	0					
ANR	1249270	Identifier	D_ALWAYS		1248900	0					
ANR	1249271	Argument	"""Doing nothing, because DEFRAG_MAX_WHOLE_MACHINES=%d and there are %d whole machines.\\n"""		1248900	1					
ANR	1249272	PrimaryExpression	"""Doing nothing, because DEFRAG_MAX_WHOLE_MACHINES=%d and there are %d whole machines.\\n"""		1248900	0					
ANR	1249273	Argument	m_max_whole_machines		1248900	2					
ANR	1249274	Identifier	m_max_whole_machines		1248900	0					
ANR	1249275	Argument	num_whole_machines		1248900	3					
ANR	1249276	Identifier	num_whole_machines		1248900	0					
ANR	1249277	ReturnStatement	return ;	534:3:14951:14957	1248900	1	True				
ANR	1249278	IfStatement	if ( num_whole_machines < 0 )		1248900	27					
ANR	1249279	Condition	num_whole_machines < 0	542:5:15193:15214	1248900	0	True				
ANR	1249280	RelationalExpression	num_whole_machines < 0		1248900	0		<			
ANR	1249281	Identifier	num_whole_machines		1248900	0					
ANR	1249282	PrimaryExpression	0		1248900	1					
ANR	1249283	CompoundStatement		91:30:3003:3003	1248900	1					
ANR	1249284	ExpressionStatement	"dprintf ( D_ALWAYS , ""Doing nothing, because the query to find whole machines failed.\\n"" )"	543:2:15222:15307	1248900	0	True				
ANR	1249285	CallExpression	"dprintf ( D_ALWAYS , ""Doing nothing, because the query to find whole machines failed.\\n"" )"		1248900	0					
ANR	1249286	Callee	dprintf		1248900	0					
ANR	1249287	Identifier	dprintf		1248900	0					
ANR	1249288	ArgumentList	D_ALWAYS		1248900	1					
ANR	1249289	Argument	D_ALWAYS		1248900	0					
ANR	1249290	Identifier	D_ALWAYS		1248900	0					
ANR	1249291	Argument	"""Doing nothing, because the query to find whole machines failed.\\n"""		1248900	1					
ANR	1249292	PrimaryExpression	"""Doing nothing, because the query to find whole machines failed.\\n"""		1248900	0					
ANR	1249293	ReturnStatement	return ;	544:2:15311:15317	1248900	1	True				
ANR	1249294	ExpressionStatement	"dprintf ( D_ALWAYS , ""Looking for %d machines to drain.\\n"" , num_to_drain )"	547:1:15324:15392	1248900	28	True				
ANR	1249295	CallExpression	"dprintf ( D_ALWAYS , ""Looking for %d machines to drain.\\n"" , num_to_drain )"		1248900	0					
ANR	1249296	Callee	dprintf		1248900	0					
ANR	1249297	Identifier	dprintf		1248900	0					
ANR	1249298	ArgumentList	D_ALWAYS		1248900	1					
ANR	1249299	Argument	D_ALWAYS		1248900	0					
ANR	1249300	Identifier	D_ALWAYS		1248900	0					
ANR	1249301	Argument	"""Looking for %d machines to drain.\\n"""		1248900	1					
ANR	1249302	PrimaryExpression	"""Looking for %d machines to drain.\\n"""		1248900	0					
ANR	1249303	Argument	num_to_drain		1248900	2					
ANR	1249304	Identifier	num_to_drain		1248900	0					
ANR	1249305	IdentifierDeclStatement	ClassAdList startdAds ;	549:1:15396:15417	1248900	29	True				
ANR	1249306	IdentifierDecl	startdAds		1248900	0					
ANR	1249307	IdentifierDeclType	ClassAdList		1248900	0					
ANR	1249308	Identifier	startdAds		1248900	1					
ANR	1249309	IdentifierDeclStatement	std :: string requirements ;	550:1:15420:15444	1248900	30	True				
ANR	1249310	IdentifierDecl	requirements		1248900	0					
ANR	1249311	IdentifierDeclType	std :: string		1248900	0					
ANR	1249312	Identifier	requirements		1248900	1					
ANR	1249313	ExpressionStatement	"sprintf ( requirements , ""(%s) && Draining =!= true"" , m_defrag_requirements . c_str ( ) )"	551:1:15447:15526	1248900	31	True				
ANR	1249314	CallExpression	"sprintf ( requirements , ""(%s) && Draining =!= true"" , m_defrag_requirements . c_str ( ) )"		1248900	0					
ANR	1249315	Callee	sprintf		1248900	0					
ANR	1249316	Identifier	sprintf		1248900	0					
ANR	1249317	ArgumentList	requirements		1248900	1					
ANR	1249318	Argument	requirements		1248900	0					
ANR	1249319	Identifier	requirements		1248900	0					
ANR	1249320	Argument	"""(%s) && Draining =!= true"""		1248900	1					
ANR	1249321	PrimaryExpression	"""(%s) && Draining =!= true"""		1248900	0					
ANR	1249322	Argument	m_defrag_requirements . c_str ( )		1248900	2					
ANR	1249323	CallExpression	m_defrag_requirements . c_str ( )		1248900	0					
ANR	1249324	Callee	m_defrag_requirements . c_str		1248900	0					
ANR	1249325	MemberAccess	m_defrag_requirements . c_str		1248900	0					
ANR	1249326	Identifier	m_defrag_requirements		1248900	0					
ANR	1249327	Identifier	c_str		1248900	1					
ANR	1249328	ArgumentList			1248900	1					
ANR	1249329	IfStatement	"if ( ! queryMachines ( requirements . c_str ( ) , ""DEFRAG_REQUIREMENTS"" , startdAds ) )"		1248900	32					
ANR	1249330	Condition	"! queryMachines ( requirements . c_str ( ) , ""DEFRAG_REQUIREMENTS"" , startdAds )"	552:5:15533:15600	1248900	0	True				
ANR	1249331	UnaryOperationExpression	"! queryMachines ( requirements . c_str ( ) , ""DEFRAG_REQUIREMENTS"" , startdAds )"		1248900	0					
ANR	1249332	UnaryOperator	!		1248900	0					
ANR	1249333	CallExpression	"queryMachines ( requirements . c_str ( ) , ""DEFRAG_REQUIREMENTS"" , startdAds )"		1248900	1					
ANR	1249334	Callee	queryMachines		1248900	0					
ANR	1249335	Identifier	queryMachines		1248900	0					
ANR	1249336	ArgumentList	requirements . c_str ( )		1248900	1					
ANR	1249337	Argument	requirements . c_str ( )		1248900	0					
ANR	1249338	CallExpression	requirements . c_str ( )		1248900	0					
ANR	1249339	Callee	requirements . c_str		1248900	0					
ANR	1249340	MemberAccess	requirements . c_str		1248900	0					
ANR	1249341	Identifier	requirements		1248900	0					
ANR	1249342	Identifier	c_str		1248900	1					
ANR	1249343	ArgumentList			1248900	1					
ANR	1249344	Argument	"""DEFRAG_REQUIREMENTS"""		1248900	1					
ANR	1249345	PrimaryExpression	"""DEFRAG_REQUIREMENTS"""		1248900	0					
ANR	1249346	Argument	startdAds		1248900	2					
ANR	1249347	Identifier	startdAds		1248900	0					
ANR	1249348	CompoundStatement		101:76:3389:3389	1248900	1					
ANR	1249349	ExpressionStatement	"dprintf ( D_ALWAYS , ""Doing nothing, because the query to select machines matching DEFRAG_REQUIREMENTS failed.\\n"" )"	553:2:15608:15718	1248900	0	True				
ANR	1249350	CallExpression	"dprintf ( D_ALWAYS , ""Doing nothing, because the query to select machines matching DEFRAG_REQUIREMENTS failed.\\n"" )"		1248900	0					
ANR	1249351	Callee	dprintf		1248900	0					
ANR	1249352	Identifier	dprintf		1248900	0					
ANR	1249353	ArgumentList	D_ALWAYS		1248900	1					
ANR	1249354	Argument	D_ALWAYS		1248900	0					
ANR	1249355	Identifier	D_ALWAYS		1248900	0					
ANR	1249356	Argument	"""Doing nothing, because the query to select machines matching DEFRAG_REQUIREMENTS failed.\\n"""		1248900	1					
ANR	1249357	PrimaryExpression	"""Doing nothing, because the query to select machines matching DEFRAG_REQUIREMENTS failed.\\n"""		1248900	0					
ANR	1249358	ReturnStatement	return ;	554:2:15722:15728	1248900	1	True				
ANR	1249359	ExpressionStatement	startdAds . Shuffle ( )	557:1:15735:15754	1248900	33	True				
ANR	1249360	CallExpression	startdAds . Shuffle ( )		1248900	0					
ANR	1249361	Callee	startdAds . Shuffle		1248900	0					
ANR	1249362	MemberAccess	startdAds . Shuffle		1248900	0					
ANR	1249363	Identifier	startdAds		1248900	0					
ANR	1249364	Identifier	Shuffle		1248900	1					
ANR	1249365	ArgumentList			1248900	1					
ANR	1249366	ExpressionStatement	"startdAds . Sort ( StartdSortFunc , & m_rank_ad )"	558:1:15757:15798	1248900	34	True				
ANR	1249367	CallExpression	"startdAds . Sort ( StartdSortFunc , & m_rank_ad )"		1248900	0					
ANR	1249368	Callee	startdAds . Sort		1248900	0					
ANR	1249369	MemberAccess	startdAds . Sort		1248900	0					
ANR	1249370	Identifier	startdAds		1248900	0					
ANR	1249371	Identifier	Sort		1248900	1					
ANR	1249372	ArgumentList	StartdSortFunc		1248900	1					
ANR	1249373	Argument	StartdSortFunc		1248900	0					
ANR	1249374	Identifier	StartdSortFunc		1248900	0					
ANR	1249375	Argument	& m_rank_ad		1248900	1					
ANR	1249376	UnaryOperationExpression	& m_rank_ad		1248900	0					
ANR	1249377	UnaryOperator	&		1248900	0					
ANR	1249378	Identifier	m_rank_ad		1248900	1					
ANR	1249379	ExpressionStatement	startdAds . Open ( )	560:1:15802:15818	1248900	35	True				
ANR	1249380	CallExpression	startdAds . Open ( )		1248900	0					
ANR	1249381	Callee	startdAds . Open		1248900	0					
ANR	1249382	MemberAccess	startdAds . Open		1248900	0					
ANR	1249383	Identifier	startdAds		1248900	0					
ANR	1249384	Identifier	Open		1248900	1					
ANR	1249385	ArgumentList			1248900	1					
ANR	1249386	IdentifierDeclStatement	int num_drained = 0 ;	561:1:15821:15840	1248900	36	True				
ANR	1249387	IdentifierDecl	num_drained = 0		1248900	0					
ANR	1249388	IdentifierDeclType	int		1248900	0					
ANR	1249389	Identifier	num_drained		1248900	1					
ANR	1249390	AssignmentExpression	num_drained = 0		1248900	2		=			
ANR	1249391	Identifier	num_drained		1248900	0					
ANR	1249392	PrimaryExpression	0		1248900	1					
ANR	1249393	IdentifierDeclStatement	ClassAd * startd_ad ;	562:1:15843:15861	1248900	37	True				
ANR	1249394	IdentifierDecl	* startd_ad		1248900	0					
ANR	1249395	IdentifierDeclType	ClassAd *		1248900	0					
ANR	1249396	Identifier	startd_ad		1248900	1					
ANR	1249397	IdentifierDeclStatement	MachineSet machines_done ;	563:1:15864:15888	1248900	38	True				
ANR	1249398	IdentifierDecl	machines_done		1248900	0					
ANR	1249399	IdentifierDeclType	MachineSet		1248900	0					
ANR	1249400	Identifier	machines_done		1248900	1					
ANR	1249401	WhileStatement	while ( ( startd_ad = startdAds . Next ( ) ) )		1248900	39					
ANR	1249402	Condition	startd_ad = startdAds . Next ( )	564:8:15898:15925	1248900	0	True				
ANR	1249403	AssignmentExpression	startd_ad = startdAds . Next ( )		1248900	0		=			
ANR	1249404	Identifier	startd_ad		1248900	0					
ANR	1249405	CallExpression	startdAds . Next ( )		1248900	1					
ANR	1249406	Callee	startdAds . Next		1248900	0					
ANR	1249407	MemberAccess	startdAds . Next		1248900	0					
ANR	1249408	Identifier	startdAds		1248900	0					
ANR	1249409	Identifier	Next		1248900	1					
ANR	1249410	ArgumentList			1248900	1					
ANR	1249411	CompoundStatement		115:2:3741:3757	1248900	1					
ANR	1249412	IdentifierDeclStatement	std :: string machine ;	565:2:15933:15952	1248900	0	True				
ANR	1249413	IdentifierDecl	machine		1248900	0					
ANR	1249414	IdentifierDeclType	std :: string		1248900	0					
ANR	1249415	Identifier	machine		1248900	1					
ANR	1249416	IdentifierDeclStatement	std :: string name ;	566:2:15956:15972	1248900	1	True				
ANR	1249417	IdentifierDecl	name		1248900	0					
ANR	1249418	IdentifierDeclType	std :: string		1248900	0					
ANR	1249419	Identifier	name		1248900	1					
ANR	1249420	ExpressionStatement	"startd_ad -> LookupString ( ATTR_NAME , name )"	567:2:15976:16015	1248900	2	True				
ANR	1249421	CallExpression	"startd_ad -> LookupString ( ATTR_NAME , name )"		1248900	0					
ANR	1249422	Callee	startd_ad -> LookupString		1248900	0					
ANR	1249423	PtrMemberAccess	startd_ad -> LookupString		1248900	0					
ANR	1249424	Identifier	startd_ad		1248900	0					
ANR	1249425	Identifier	LookupString		1248900	1					
ANR	1249426	ArgumentList	ATTR_NAME		1248900	1					
ANR	1249427	Argument	ATTR_NAME		1248900	0					
ANR	1249428	Identifier	ATTR_NAME		1248900	0					
ANR	1249429	Argument	name		1248900	1					
ANR	1249430	Identifier	name		1248900	0					
ANR	1249431	ExpressionStatement	"slotNameToDaemonName ( name , machine )"	568:2:16019:16053	1248900	3	True				
ANR	1249432	CallExpression	"slotNameToDaemonName ( name , machine )"		1248900	0					
ANR	1249433	Callee	slotNameToDaemonName		1248900	0					
ANR	1249434	Identifier	slotNameToDaemonName		1248900	0					
ANR	1249435	ArgumentList	name		1248900	1					
ANR	1249436	Argument	name		1248900	0					
ANR	1249437	Identifier	name		1248900	0					
ANR	1249438	Argument	machine		1248900	1					
ANR	1249439	Identifier	machine		1248900	0					
ANR	1249440	IfStatement	if ( machines_done . count ( machine ) )		1248900	4					
ANR	1249441	Condition	machines_done . count ( machine )	570:6:16062:16089	1248900	0	True				
ANR	1249442	CallExpression	machines_done . count ( machine )		1248900	0					
ANR	1249443	Callee	machines_done . count		1248900	0					
ANR	1249444	MemberAccess	machines_done . count		1248900	0					
ANR	1249445	Identifier	machines_done		1248900	0					
ANR	1249446	Identifier	count		1248900	1					
ANR	1249447	ArgumentList	machine		1248900	1					
ANR	1249448	Argument	machine		1248900	0					
ANR	1249449	Identifier	machine		1248900	0					
ANR	1249450	CompoundStatement		119:37:3878:3878	1248900	1					
ANR	1249451	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Skipping %s: already attempted to drain %s in this cycle.\\n"" , name . c_str ( ) , machine . c_str ( ) )"	571:3:16098:16221	1248900	0	True				
ANR	1249452	CallExpression	"dprintf ( D_FULLDEBUG , ""Skipping %s: already attempted to drain %s in this cycle.\\n"" , name . c_str ( ) , machine . c_str ( ) )"		1248900	0					
ANR	1249453	Callee	dprintf		1248900	0					
ANR	1249454	Identifier	dprintf		1248900	0					
ANR	1249455	ArgumentList	D_FULLDEBUG		1248900	1					
ANR	1249456	Argument	D_FULLDEBUG		1248900	0					
ANR	1249457	Identifier	D_FULLDEBUG		1248900	0					
ANR	1249458	Argument	"""Skipping %s: already attempted to drain %s in this cycle.\\n"""		1248900	1					
ANR	1249459	PrimaryExpression	"""Skipping %s: already attempted to drain %s in this cycle.\\n"""		1248900	0					
ANR	1249460	Argument	name . c_str ( )		1248900	2					
ANR	1249461	CallExpression	name . c_str ( )		1248900	0					
ANR	1249462	Callee	name . c_str		1248900	0					
ANR	1249463	MemberAccess	name . c_str		1248900	0					
ANR	1249464	Identifier	name		1248900	0					
ANR	1249465	Identifier	c_str		1248900	1					
ANR	1249466	ArgumentList			1248900	1					
ANR	1249467	Argument	machine . c_str ( )		1248900	3					
ANR	1249468	CallExpression	machine . c_str ( )		1248900	0					
ANR	1249469	Callee	machine . c_str		1248900	0					
ANR	1249470	MemberAccess	machine . c_str		1248900	0					
ANR	1249471	Identifier	machine		1248900	0					
ANR	1249472	Identifier	c_str		1248900	1					
ANR	1249473	ArgumentList			1248900	1					
ANR	1249474	ContinueStatement	continue ;	574:3:16226:16234	1248900	1	True				
ANR	1249475	IfStatement	if ( whole_machines . count ( machine ) )		1248900	5					
ANR	1249476	Condition	whole_machines . count ( machine )	577:6:16247:16275	1248900	0	True				
ANR	1249477	CallExpression	whole_machines . count ( machine )		1248900	0					
ANR	1249478	Callee	whole_machines . count		1248900	0					
ANR	1249479	MemberAccess	whole_machines . count		1248900	0					
ANR	1249480	Identifier	whole_machines		1248900	0					
ANR	1249481	Identifier	count		1248900	1					
ANR	1249482	ArgumentList	machine		1248900	1					
ANR	1249483	Argument	machine		1248900	0					
ANR	1249484	Identifier	machine		1248900	0					
ANR	1249485	CompoundStatement		126:38:4064:4064	1248900	1					
ANR	1249486	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Skipping %s: because it is already running as a whole machine.\\n"" , name . c_str ( ) )"	578:3:16284:16396	1248900	0	True				
ANR	1249487	CallExpression	"dprintf ( D_FULLDEBUG , ""Skipping %s: because it is already running as a whole machine.\\n"" , name . c_str ( ) )"		1248900	0					
ANR	1249488	Callee	dprintf		1248900	0					
ANR	1249489	Identifier	dprintf		1248900	0					
ANR	1249490	ArgumentList	D_FULLDEBUG		1248900	1					
ANR	1249491	Argument	D_FULLDEBUG		1248900	0					
ANR	1249492	Identifier	D_FULLDEBUG		1248900	0					
ANR	1249493	Argument	"""Skipping %s: because it is already running as a whole machine.\\n"""		1248900	1					
ANR	1249494	PrimaryExpression	"""Skipping %s: because it is already running as a whole machine.\\n"""		1248900	0					
ANR	1249495	Argument	name . c_str ( )		1248900	2					
ANR	1249496	CallExpression	name . c_str ( )		1248900	0					
ANR	1249497	Callee	name . c_str		1248900	0					
ANR	1249498	MemberAccess	name . c_str		1248900	0					
ANR	1249499	Identifier	name		1248900	0					
ANR	1249500	Identifier	c_str		1248900	1					
ANR	1249501	ArgumentList			1248900	1					
ANR	1249502	ContinueStatement	continue ;	581:3:16401:16409	1248900	1	True				
ANR	1249503	IfStatement	if ( drain ( startd_ad ) )		1248900	6					
ANR	1249504	Condition	drain ( startd_ad )	584:6:16422:16437	1248900	0	True				
ANR	1249505	CallExpression	drain ( startd_ad )		1248900	0					
ANR	1249506	Callee	drain		1248900	0					
ANR	1249507	Identifier	drain		1248900	0					
ANR	1249508	ArgumentList	startd_ad		1248900	1					
ANR	1249509	Argument	startd_ad		1248900	0					
ANR	1249510	Identifier	startd_ad		1248900	0					
ANR	1249511	CompoundStatement		133:25:4226:4226	1248900	1					
ANR	1249512	ExpressionStatement	machines_done . insert ( machine )	585:3:16446:16475	1248900	0	True				
ANR	1249513	CallExpression	machines_done . insert ( machine )		1248900	0					
ANR	1249514	Callee	machines_done . insert		1248900	0					
ANR	1249515	MemberAccess	machines_done . insert		1248900	0					
ANR	1249516	Identifier	machines_done		1248900	0					
ANR	1249517	Identifier	insert		1248900	1					
ANR	1249518	ArgumentList	machine		1248900	1					
ANR	1249519	Argument	machine		1248900	0					
ANR	1249520	Identifier	machine		1248900	0					
ANR	1249521	IfStatement	if ( ++ num_drained >= num_to_drain )		1248900	1					
ANR	1249522	Condition	++ num_drained >= num_to_drain	587:7:16485:16513	1248900	0	True				
ANR	1249523	RelationalExpression	++ num_drained >= num_to_drain		1248900	0		>=			
ANR	1249524	UnaryExpression	++ num_drained		1248900	0					
ANR	1249525	IncDec	++		1248900	0					
ANR	1249526	Identifier	num_drained		1248900	1					
ANR	1249527	Identifier	num_to_drain		1248900	1					
ANR	1249528	CompoundStatement		136:39:4302:4302	1248900	1					
ANR	1249529	ExpressionStatement	"dprintf ( D_ALWAYS , ""Drained maximum number of machines allowed in this cycle (%d).\\n"" , num_to_drain )"	588:4:16523:16634	1248900	0	True				
ANR	1249530	CallExpression	"dprintf ( D_ALWAYS , ""Drained maximum number of machines allowed in this cycle (%d).\\n"" , num_to_drain )"		1248900	0					
ANR	1249531	Callee	dprintf		1248900	0					
ANR	1249532	Identifier	dprintf		1248900	0					
ANR	1249533	ArgumentList	D_ALWAYS		1248900	1					
ANR	1249534	Argument	D_ALWAYS		1248900	0					
ANR	1249535	Identifier	D_ALWAYS		1248900	0					
ANR	1249536	Argument	"""Drained maximum number of machines allowed in this cycle (%d).\\n"""		1248900	1					
ANR	1249537	PrimaryExpression	"""Drained maximum number of machines allowed in this cycle (%d).\\n"""		1248900	0					
ANR	1249538	Argument	num_to_drain		1248900	2					
ANR	1249539	Identifier	num_to_drain		1248900	0					
ANR	1249540	BreakStatement	break ;	591:4:16640:16645	1248900	1	True				
ANR	1249541	ExpressionStatement	startdAds . Close ( )	595:1:16660:16677	1248900	40	True				
ANR	1249542	CallExpression	startdAds . Close ( )		1248900	0					
ANR	1249543	Callee	startdAds . Close		1248900	0					
ANR	1249544	MemberAccess	startdAds . Close		1248900	0					
ANR	1249545	Identifier	startdAds		1248900	0					
ANR	1249546	Identifier	Close		1248900	1					
ANR	1249547	ArgumentList			1248900	1					
ANR	1249548	ExpressionStatement	"dprintf ( D_ALWAYS , ""Drained %d machines (wanted to drain %d machines).\\n"" , num_drained , num_drained )"	597:1:16681:16781	1248900	41	True				
ANR	1249549	CallExpression	"dprintf ( D_ALWAYS , ""Drained %d machines (wanted to drain %d machines).\\n"" , num_drained , num_drained )"		1248900	0					
ANR	1249550	Callee	dprintf		1248900	0					
ANR	1249551	Identifier	dprintf		1248900	0					
ANR	1249552	ArgumentList	D_ALWAYS		1248900	1					
ANR	1249553	Argument	D_ALWAYS		1248900	0					
ANR	1249554	Identifier	D_ALWAYS		1248900	0					
ANR	1249555	Argument	"""Drained %d machines (wanted to drain %d machines).\\n"""		1248900	1					
ANR	1249556	PrimaryExpression	"""Drained %d machines (wanted to drain %d machines).\\n"""		1248900	0					
ANR	1249557	Argument	num_drained		1248900	2					
ANR	1249558	Identifier	num_drained		1248900	0					
ANR	1249559	Argument	num_drained		1248900	3					
ANR	1249560	Identifier	num_drained		1248900	0					
ANR	1249561	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Done evaluating defragmentation policy.\\n"" )"	600:1:16785:16849	1248900	42	True				
ANR	1249562	CallExpression	"dprintf ( D_FULLDEBUG , ""Done evaluating defragmentation policy.\\n"" )"		1248900	0					
ANR	1249563	Callee	dprintf		1248900	0					
ANR	1249564	Identifier	dprintf		1248900	0					
ANR	1249565	ArgumentList	D_FULLDEBUG		1248900	1					
ANR	1249566	Argument	D_FULLDEBUG		1248900	0					
ANR	1249567	Identifier	D_FULLDEBUG		1248900	0					
ANR	1249568	Argument	"""Done evaluating defragmentation policy.\\n"""		1248900	1					
ANR	1249569	PrimaryExpression	"""Done evaluating defragmentation policy.\\n"""		1248900	0					
ANR	1249570	ReturnType	void		1248900	1					
ANR	1249571	Identifier	Defrag :: poll		1248900	2					
ANR	1249572	ParameterList			1248900	3					
ANR	1249573	CFGEntryNode	ENTRY		1248900		True				
ANR	1249574	CFGExitNode	EXIT		1248900		True				
ANR	1249575	Symbol	num_draining		1248900						
ANR	1249576	Symbol	ATTR_NAME		1248900						
ANR	1249577	Symbol	prev		1248900						
ANR	1249578	Symbol	current_day		1248900						
ANR	1249579	Symbol	startdAds		1248900						
ANR	1249580	Symbol	draining_constraint		1248900						
ANR	1249581	Symbol	m_draining_per_poll_hour		1248900						
ANR	1249582	Symbol	last_hour		1248900						
ANR	1249583	Symbol	requirements . c_str		1248900						
ANR	1249584	Symbol	prorate		1248900						
ANR	1249585	Symbol	countMachines		1248900						
ANR	1249586	Symbol	NULL		1248900						
ANR	1249587	Symbol	D_FULLDEBUG		1248900						
ANR	1249588	Symbol	ceil		1248900						
ANR	1249589	Symbol	m_stats . WholeMachines		1248900						
ANR	1249590	Symbol	name		1248900						
ANR	1249591	Symbol	whole_machines		1248900						
ANR	1249592	Symbol	whole_machines . count		1248900						
ANR	1249593	Symbol	m_defrag_requirements . c_str		1248900						
ANR	1249594	Symbol	m_draining_per_poll		1248900						
ANR	1249595	Symbol	drain		1248900						
ANR	1249596	Symbol	name . c_str		1248900						
ANR	1249597	Symbol	m_last_poll		1248900						
ANR	1249598	Symbol	m_polling_interval		1248900						
ANR	1249599	Symbol	m_draining_per_poll_day		1248900						
ANR	1249600	Symbol	num_drained		1248900						
ANR	1249601	Symbol	now		1248900						
ANR	1249602	Symbol	m_whole_machine_expr . c_str		1248900						
ANR	1249603	Symbol	StartdSortFunc		1248900						
ANR	1249604	Symbol	m_stats . MachinesDraining		1248900						
ANR	1249605	Symbol	startd_ad		1248900						
ANR	1249606	Symbol	m_max_draining		1248900						
ANR	1249607	Symbol	current_hour		1248900						
ANR	1249608	Symbol	requirements		1248900						
ANR	1249609	Symbol	m_stats		1248900						
ANR	1249610	Symbol	num_whole_machines		1248900						
ANR	1249611	Symbol	D_ALWAYS		1248900						
ANR	1249612	Symbol	m_defrag_requirements		1248900						
ANR	1249613	Symbol	& m_rank_ad		1248900						
ANR	1249614	Symbol	queryMachines		1248900						
ANR	1249615	Symbol	machine . c_str		1248900						
ANR	1249616	Symbol	m_draining_per_hour		1248900						
ANR	1249617	Symbol	& whole_machines		1248900						
ANR	1249618	Symbol	m_max_whole_machines		1248900						
ANR	1249619	Symbol	machine		1248900						
ANR	1249620	Symbol	m_whole_machine_expr		1248900						
ANR	1249621	Symbol	startdAds . Next		1248900						
ANR	1249622	Symbol	machines_done		1248900						
ANR	1249623	Symbol	machines_done . count		1248900						
ANR	1249624	Symbol	time		1248900						
ANR	1249625	Symbol	last_day		1248900						
ANR	1249626	Symbol	num_to_drain		1248900						
ANR	1249627	Function	Defrag :: drain	603:0:16854:19186							
ANR	1249628	FunctionDef	Defrag :: drain (ClassAd * startd_ad)		1249627	0					
ANR	1249629	CompoundStatement		605:0:16893:19186	1249627	0					
ANR	1249630	ExpressionStatement	ASSERT ( startd_ad )	606:1:16896:16915	1249627	0	True				
ANR	1249631	CallExpression	ASSERT ( startd_ad )		1249627	0					
ANR	1249632	Callee	ASSERT		1249627	0					
ANR	1249633	Identifier	ASSERT		1249627	0					
ANR	1249634	ArgumentList	startd_ad		1249627	1					
ANR	1249635	Argument	startd_ad		1249627	0					
ANR	1249636	Identifier	startd_ad		1249627	0					
ANR	1249637	IdentifierDeclStatement	std :: string name ;	608:1:16919:16935	1249627	1	True				
ANR	1249638	IdentifierDecl	name		1249627	0					
ANR	1249639	IdentifierDeclType	std :: string		1249627	0					
ANR	1249640	Identifier	name		1249627	1					
ANR	1249641	ExpressionStatement	"startd_ad -> LookupString ( ATTR_NAME , name )"	609:1:16938:16977	1249627	2	True				
ANR	1249642	CallExpression	"startd_ad -> LookupString ( ATTR_NAME , name )"		1249627	0					
ANR	1249643	Callee	startd_ad -> LookupString		1249627	0					
ANR	1249644	PtrMemberAccess	startd_ad -> LookupString		1249627	0					
ANR	1249645	Identifier	startd_ad		1249627	0					
ANR	1249646	Identifier	LookupString		1249627	1					
ANR	1249647	ArgumentList	ATTR_NAME		1249627	1					
ANR	1249648	Argument	ATTR_NAME		1249627	0					
ANR	1249649	Identifier	ATTR_NAME		1249627	0					
ANR	1249650	Argument	name		1249627	1					
ANR	1249651	Identifier	name		1249627	0					
ANR	1249652	ExpressionStatement	"dprintf ( D_ALWAYS , ""Initiating %s draining of %s.\\n"" , m_draining_schedule_str . c_str ( ) , name . c_str ( ) )"	611:1:16981:17081	1249627	3	True				
ANR	1249653	CallExpression	"dprintf ( D_ALWAYS , ""Initiating %s draining of %s.\\n"" , m_draining_schedule_str . c_str ( ) , name . c_str ( ) )"		1249627	0					
ANR	1249654	Callee	dprintf		1249627	0					
ANR	1249655	Identifier	dprintf		1249627	0					
ANR	1249656	ArgumentList	D_ALWAYS		1249627	1					
ANR	1249657	Argument	D_ALWAYS		1249627	0					
ANR	1249658	Identifier	D_ALWAYS		1249627	0					
ANR	1249659	Argument	"""Initiating %s draining of %s.\\n"""		1249627	1					
ANR	1249660	PrimaryExpression	"""Initiating %s draining of %s.\\n"""		1249627	0					
ANR	1249661	Argument	m_draining_schedule_str . c_str ( )		1249627	2					
ANR	1249662	CallExpression	m_draining_schedule_str . c_str ( )		1249627	0					
ANR	1249663	Callee	m_draining_schedule_str . c_str		1249627	0					
ANR	1249664	MemberAccess	m_draining_schedule_str . c_str		1249627	0					
ANR	1249665	Identifier	m_draining_schedule_str		1249627	0					
ANR	1249666	Identifier	c_str		1249627	1					
ANR	1249667	ArgumentList			1249627	1					
ANR	1249668	Argument	name . c_str ( )		1249627	3					
ANR	1249669	CallExpression	name . c_str ( )		1249627	0					
ANR	1249670	Callee	name . c_str		1249627	0					
ANR	1249671	MemberAccess	name . c_str		1249627	0					
ANR	1249672	Identifier	name		1249627	0					
ANR	1249673	Identifier	c_str		1249627	1					
ANR	1249674	ArgumentList			1249627	1					
ANR	1249675	IdentifierDeclStatement	DCStartd startd ( startd_ad ) ;	614:1:17085:17113	1249627	4	True				
ANR	1249676	IdentifierDecl	startd ( startd_ad )		1249627	0					
ANR	1249677	IdentifierDeclType	DCStartd		1249627	0					
ANR	1249678	Identifier	startd		1249627	1					
ANR	1249679	Identifier	startd_ad		1249627	2					
ANR	1249680	IdentifierDeclStatement	int graceful_completion = 0 ;	616:1:17117:17144	1249627	5	True				
ANR	1249681	IdentifierDecl	graceful_completion = 0		1249627	0					
ANR	1249682	IdentifierDeclType	int		1249627	0					
ANR	1249683	Identifier	graceful_completion		1249627	1					
ANR	1249684	AssignmentExpression	graceful_completion = 0		1249627	2		=			
ANR	1249685	Identifier	graceful_completion		1249627	0					
ANR	1249686	PrimaryExpression	0		1249627	1					
ANR	1249687	ExpressionStatement	"startd_ad -> LookupInteger ( ATTR_EXPECTED_MACHINE_GRACEFUL_DRAINING_COMPLETION , graceful_completion )"	617:1:17147:17243	1249627	6	True				
ANR	1249688	CallExpression	"startd_ad -> LookupInteger ( ATTR_EXPECTED_MACHINE_GRACEFUL_DRAINING_COMPLETION , graceful_completion )"		1249627	0					
ANR	1249689	Callee	startd_ad -> LookupInteger		1249627	0					
ANR	1249690	PtrMemberAccess	startd_ad -> LookupInteger		1249627	0					
ANR	1249691	Identifier	startd_ad		1249627	0					
ANR	1249692	Identifier	LookupInteger		1249627	1					
ANR	1249693	ArgumentList	ATTR_EXPECTED_MACHINE_GRACEFUL_DRAINING_COMPLETION		1249627	1					
ANR	1249694	Argument	ATTR_EXPECTED_MACHINE_GRACEFUL_DRAINING_COMPLETION		1249627	0					
ANR	1249695	Identifier	ATTR_EXPECTED_MACHINE_GRACEFUL_DRAINING_COMPLETION		1249627	0					
ANR	1249696	Argument	graceful_completion		1249627	1					
ANR	1249697	Identifier	graceful_completion		1249627	0					
ANR	1249698	IdentifierDeclStatement	int quick_completion = 0 ;	618:1:17246:17270	1249627	7	True				
ANR	1249699	IdentifierDecl	quick_completion = 0		1249627	0					
ANR	1249700	IdentifierDeclType	int		1249627	0					
ANR	1249701	Identifier	quick_completion		1249627	1					
ANR	1249702	AssignmentExpression	quick_completion = 0		1249627	2		=			
ANR	1249703	Identifier	quick_completion		1249627	0					
ANR	1249704	PrimaryExpression	0		1249627	1					
ANR	1249705	ExpressionStatement	"startd_ad -> LookupInteger ( ATTR_EXPECTED_MACHINE_QUICK_DRAINING_COMPLETION , quick_completion )"	619:1:17273:17363	1249627	8	True				
ANR	1249706	CallExpression	"startd_ad -> LookupInteger ( ATTR_EXPECTED_MACHINE_QUICK_DRAINING_COMPLETION , quick_completion )"		1249627	0					
ANR	1249707	Callee	startd_ad -> LookupInteger		1249627	0					
ANR	1249708	PtrMemberAccess	startd_ad -> LookupInteger		1249627	0					
ANR	1249709	Identifier	startd_ad		1249627	0					
ANR	1249710	Identifier	LookupInteger		1249627	1					
ANR	1249711	ArgumentList	ATTR_EXPECTED_MACHINE_QUICK_DRAINING_COMPLETION		1249627	1					
ANR	1249712	Argument	ATTR_EXPECTED_MACHINE_QUICK_DRAINING_COMPLETION		1249627	0					
ANR	1249713	Identifier	ATTR_EXPECTED_MACHINE_QUICK_DRAINING_COMPLETION		1249627	0					
ANR	1249714	Argument	quick_completion		1249627	1					
ANR	1249715	Identifier	quick_completion		1249627	0					
ANR	1249716	IdentifierDeclStatement	int graceful_badput = 0 ;	620:1:17366:17389	1249627	9	True				
ANR	1249717	IdentifierDecl	graceful_badput = 0		1249627	0					
ANR	1249718	IdentifierDeclType	int		1249627	0					
ANR	1249719	Identifier	graceful_badput		1249627	1					
ANR	1249720	AssignmentExpression	graceful_badput = 0		1249627	2		=			
ANR	1249721	Identifier	graceful_badput		1249627	0					
ANR	1249722	PrimaryExpression	0		1249627	1					
ANR	1249723	ExpressionStatement	"startd_ad -> LookupInteger ( ATTR_EXPECTED_MACHINE_GRACEFUL_DRAINING_BADPUT , graceful_badput )"	621:1:17392:17480	1249627	10	True				
ANR	1249724	CallExpression	"startd_ad -> LookupInteger ( ATTR_EXPECTED_MACHINE_GRACEFUL_DRAINING_BADPUT , graceful_badput )"		1249627	0					
ANR	1249725	Callee	startd_ad -> LookupInteger		1249627	0					
ANR	1249726	PtrMemberAccess	startd_ad -> LookupInteger		1249627	0					
ANR	1249727	Identifier	startd_ad		1249627	0					
ANR	1249728	Identifier	LookupInteger		1249627	1					
ANR	1249729	ArgumentList	ATTR_EXPECTED_MACHINE_GRACEFUL_DRAINING_BADPUT		1249627	1					
ANR	1249730	Argument	ATTR_EXPECTED_MACHINE_GRACEFUL_DRAINING_BADPUT		1249627	0					
ANR	1249731	Identifier	ATTR_EXPECTED_MACHINE_GRACEFUL_DRAINING_BADPUT		1249627	0					
ANR	1249732	Argument	graceful_badput		1249627	1					
ANR	1249733	Identifier	graceful_badput		1249627	0					
ANR	1249734	IdentifierDeclStatement	int quick_badput = 0 ;	622:1:17483:17503	1249627	11	True				
ANR	1249735	IdentifierDecl	quick_badput = 0		1249627	0					
ANR	1249736	IdentifierDeclType	int		1249627	0					
ANR	1249737	Identifier	quick_badput		1249627	1					
ANR	1249738	AssignmentExpression	quick_badput = 0		1249627	2		=			
ANR	1249739	Identifier	quick_badput		1249627	0					
ANR	1249740	PrimaryExpression	0		1249627	1					
ANR	1249741	ExpressionStatement	"startd_ad -> LookupInteger ( ATTR_EXPECTED_MACHINE_QUICK_DRAINING_BADPUT , quick_badput )"	623:1:17506:17588	1249627	12	True				
ANR	1249742	CallExpression	"startd_ad -> LookupInteger ( ATTR_EXPECTED_MACHINE_QUICK_DRAINING_BADPUT , quick_badput )"		1249627	0					
ANR	1249743	Callee	startd_ad -> LookupInteger		1249627	0					
ANR	1249744	PtrMemberAccess	startd_ad -> LookupInteger		1249627	0					
ANR	1249745	Identifier	startd_ad		1249627	0					
ANR	1249746	Identifier	LookupInteger		1249627	1					
ANR	1249747	ArgumentList	ATTR_EXPECTED_MACHINE_QUICK_DRAINING_BADPUT		1249627	1					
ANR	1249748	Argument	ATTR_EXPECTED_MACHINE_QUICK_DRAINING_BADPUT		1249627	0					
ANR	1249749	Identifier	ATTR_EXPECTED_MACHINE_QUICK_DRAINING_BADPUT		1249627	0					
ANR	1249750	Argument	quick_badput		1249627	1					
ANR	1249751	Identifier	quick_badput		1249627	0					
ANR	1249752	IdentifierDeclStatement	time_t now = time ( NULL ) ;	625:1:17592:17615	1249627	13	True				
ANR	1249753	IdentifierDecl	now = time ( NULL )		1249627	0					
ANR	1249754	IdentifierDeclType	time_t		1249627	0					
ANR	1249755	Identifier	now		1249627	1					
ANR	1249756	AssignmentExpression	now = time ( NULL )		1249627	2		=			
ANR	1249757	Identifier	now		1249627	0					
ANR	1249758	CallExpression	time ( NULL )		1249627	1					
ANR	1249759	Callee	time		1249627	0					
ANR	1249760	Identifier	time		1249627	0					
ANR	1249761	ArgumentList	NULL		1249627	1					
ANR	1249762	Argument	NULL		1249627	0					
ANR	1249763	Identifier	NULL		1249627	0					
ANR	1249764	IdentifierDeclStatement	std :: string draining_check_expr ;	626:1:17618:17649	1249627	14	True				
ANR	1249765	IdentifierDecl	draining_check_expr		1249627	0					
ANR	1249766	IdentifierDeclType	std :: string		1249627	0					
ANR	1249767	Identifier	draining_check_expr		1249627	1					
ANR	1249768	IdentifierDeclStatement	double badput_growth_tolerance = 1.25 ;	627:1:17652:17689	1249627	15	True				
ANR	1249769	IdentifierDecl	badput_growth_tolerance = 1.25		1249627	0					
ANR	1249770	IdentifierDeclType	double		1249627	0					
ANR	1249771	Identifier	badput_growth_tolerance		1249627	1					
ANR	1249772	AssignmentExpression	badput_growth_tolerance = 1.25		1249627	2		=			
ANR	1249773	Identifier	badput_growth_tolerance		1249627	0					
ANR	1249774	PrimaryExpression	1.25		1249627	1					
ANR	1249775	IdentifierDeclStatement	int negligible_badput = 1200 ;	628:1:17723:17751	1249627	16	True				
ANR	1249776	IdentifierDecl	negligible_badput = 1200		1249627	0					
ANR	1249777	IdentifierDeclType	int		1249627	0					
ANR	1249778	Identifier	negligible_badput		1249627	1					
ANR	1249779	AssignmentExpression	negligible_badput = 1200		1249627	2		=			
ANR	1249780	Identifier	negligible_badput		1249627	0					
ANR	1249781	PrimaryExpression	1200		1249627	1					
ANR	1249782	IdentifierDeclStatement	int negligible_deadline_slippage = 1200 ;	629:1:17754:17793	1249627	17	True				
ANR	1249783	IdentifierDecl	negligible_deadline_slippage = 1200		1249627	0					
ANR	1249784	IdentifierDeclType	int		1249627	0					
ANR	1249785	Identifier	negligible_deadline_slippage		1249627	1					
ANR	1249786	AssignmentExpression	negligible_deadline_slippage = 1200		1249627	2		=			
ANR	1249787	Identifier	negligible_deadline_slippage		1249627	0					
ANR	1249788	PrimaryExpression	1200		1249627	1					
ANR	1249789	IfStatement	if ( m_draining_schedule <= DRAIN_GRACEFUL )		1249627	18					
ANR	1249790	Condition	m_draining_schedule <= DRAIN_GRACEFUL	630:5:17800:17836	1249627	0	True				
ANR	1249791	RelationalExpression	m_draining_schedule <= DRAIN_GRACEFUL		1249627	0		<=			
ANR	1249792	Identifier	m_draining_schedule		1249627	0					
ANR	1249793	Identifier	DRAIN_GRACEFUL		1249627	1					
ANR	1249794	CompoundStatement		26:45:946:946	1249627	1					
ANR	1249795	ExpressionStatement	"dprintf ( D_ALWAYS , ""Expected draining completion time is %ds; expected draining badput is %d cpu-seconds\\n"" , ( int ) ( graceful_completion - now ) , graceful_badput )"	631:2:17844:18002	1249627	0	True				
ANR	1249796	CallExpression	"dprintf ( D_ALWAYS , ""Expected draining completion time is %ds; expected draining badput is %d cpu-seconds\\n"" , ( int ) ( graceful_completion - now ) , graceful_badput )"		1249627	0					
ANR	1249797	Callee	dprintf		1249627	0					
ANR	1249798	Identifier	dprintf		1249627	0					
ANR	1249799	ArgumentList	D_ALWAYS		1249627	1					
ANR	1249800	Argument	D_ALWAYS		1249627	0					
ANR	1249801	Identifier	D_ALWAYS		1249627	0					
ANR	1249802	Argument	"""Expected draining completion time is %ds; expected draining badput is %d cpu-seconds\\n"""		1249627	1					
ANR	1249803	PrimaryExpression	"""Expected draining completion time is %ds; expected draining badput is %d cpu-seconds\\n"""		1249627	0					
ANR	1249804	Argument	( int ) ( graceful_completion - now )		1249627	2					
ANR	1249805	CastExpression	( int ) ( graceful_completion - now )		1249627	0					
ANR	1249806	CastTarget	int		1249627	0					
ANR	1249807	AdditiveExpression	graceful_completion - now		1249627	1		-			
ANR	1249808	Identifier	graceful_completion		1249627	0					
ANR	1249809	Identifier	now		1249627	1					
ANR	1249810	Argument	graceful_badput		1249627	3					
ANR	1249811	Identifier	graceful_badput		1249627	0					
ANR	1249812	ExpressionStatement	"sprintf ( draining_check_expr , ""%s <= %d && %s <= %d"" , ATTR_EXPECTED_MACHINE_GRACEFUL_DRAINING_COMPLETION , graceful_completion + negligible_deadline_slippage , ATTR_EXPECTED_MACHINE_GRACEFUL_DRAINING_BADPUT , ( int ) ( badput_growth_tolerance * graceful_badput ) + negligible_badput )"	633:2:18006:18293	1249627	1	True				
ANR	1249813	CallExpression	"sprintf ( draining_check_expr , ""%s <= %d && %s <= %d"" , ATTR_EXPECTED_MACHINE_GRACEFUL_DRAINING_COMPLETION , graceful_completion + negligible_deadline_slippage , ATTR_EXPECTED_MACHINE_GRACEFUL_DRAINING_BADPUT , ( int ) ( badput_growth_tolerance * graceful_badput ) + negligible_badput )"		1249627	0					
ANR	1249814	Callee	sprintf		1249627	0					
ANR	1249815	Identifier	sprintf		1249627	0					
ANR	1249816	ArgumentList	draining_check_expr		1249627	1					
ANR	1249817	Argument	draining_check_expr		1249627	0					
ANR	1249818	Identifier	draining_check_expr		1249627	0					
ANR	1249819	Argument	"""%s <= %d && %s <= %d"""		1249627	1					
ANR	1249820	PrimaryExpression	"""%s <= %d && %s <= %d"""		1249627	0					
ANR	1249821	Argument	ATTR_EXPECTED_MACHINE_GRACEFUL_DRAINING_COMPLETION		1249627	2					
ANR	1249822	Identifier	ATTR_EXPECTED_MACHINE_GRACEFUL_DRAINING_COMPLETION		1249627	0					
ANR	1249823	Argument	graceful_completion + negligible_deadline_slippage		1249627	3					
ANR	1249824	AdditiveExpression	graceful_completion + negligible_deadline_slippage		1249627	0		+			
ANR	1249825	Identifier	graceful_completion		1249627	0					
ANR	1249826	Identifier	negligible_deadline_slippage		1249627	1					
ANR	1249827	Argument	ATTR_EXPECTED_MACHINE_GRACEFUL_DRAINING_BADPUT		1249627	4					
ANR	1249828	Identifier	ATTR_EXPECTED_MACHINE_GRACEFUL_DRAINING_BADPUT		1249627	0					
ANR	1249829	Argument	( int ) ( badput_growth_tolerance * graceful_badput ) + negligible_badput		1249627	5					
ANR	1249830	AdditiveExpression	( int ) ( badput_growth_tolerance * graceful_badput ) + negligible_badput		1249627	0		+			
ANR	1249831	CastExpression	( int ) ( badput_growth_tolerance * graceful_badput )		1249627	0					
ANR	1249832	CastTarget	int		1249627	0					
ANR	1249833	MultiplicativeExpression	badput_growth_tolerance * graceful_badput		1249627	1		*			
ANR	1249834	Identifier	badput_growth_tolerance		1249627	0					
ANR	1249835	Identifier	graceful_badput		1249627	1					
ANR	1249836	Identifier	negligible_badput		1249627	1					
ANR	1249837	ElseStatement	else		1249627	0					
ANR	1249838	CompoundStatement		35:6:1410:1410	1249627	0					
ANR	1249839	ExpressionStatement	"dprintf ( D_ALWAYS , ""Expected draining completion time is %ds; expected draining badput is %d cpu-seconds\\n"" , ( int ) ( quick_completion - now ) , quick_badput )"	640:2:18370:18522	1249627	0	True				
ANR	1249840	CallExpression	"dprintf ( D_ALWAYS , ""Expected draining completion time is %ds; expected draining badput is %d cpu-seconds\\n"" , ( int ) ( quick_completion - now ) , quick_badput )"		1249627	0					
ANR	1249841	Callee	dprintf		1249627	0					
ANR	1249842	Identifier	dprintf		1249627	0					
ANR	1249843	ArgumentList	D_ALWAYS		1249627	1					
ANR	1249844	Argument	D_ALWAYS		1249627	0					
ANR	1249845	Identifier	D_ALWAYS		1249627	0					
ANR	1249846	Argument	"""Expected draining completion time is %ds; expected draining badput is %d cpu-seconds\\n"""		1249627	1					
ANR	1249847	PrimaryExpression	"""Expected draining completion time is %ds; expected draining badput is %d cpu-seconds\\n"""		1249627	0					
ANR	1249848	Argument	( int ) ( quick_completion - now )		1249627	2					
ANR	1249849	CastExpression	( int ) ( quick_completion - now )		1249627	0					
ANR	1249850	CastTarget	int		1249627	0					
ANR	1249851	AdditiveExpression	quick_completion - now		1249627	1		-			
ANR	1249852	Identifier	quick_completion		1249627	0					
ANR	1249853	Identifier	now		1249627	1					
ANR	1249854	Argument	quick_badput		1249627	3					
ANR	1249855	Identifier	quick_badput		1249627	0					
ANR	1249856	ExpressionStatement	"sprintf ( draining_check_expr , ""%s <= %d && %s <= %d"" , ATTR_EXPECTED_MACHINE_QUICK_DRAINING_COMPLETION , quick_completion + negligible_deadline_slippage , ATTR_EXPECTED_MACHINE_QUICK_DRAINING_BADPUT , ( int ) ( badput_growth_tolerance * quick_badput ) + negligible_badput )"	642:2:18526:18801	1249627	1	True				
ANR	1249857	CallExpression	"sprintf ( draining_check_expr , ""%s <= %d && %s <= %d"" , ATTR_EXPECTED_MACHINE_QUICK_DRAINING_COMPLETION , quick_completion + negligible_deadline_slippage , ATTR_EXPECTED_MACHINE_QUICK_DRAINING_BADPUT , ( int ) ( badput_growth_tolerance * quick_badput ) + negligible_badput )"		1249627	0					
ANR	1249858	Callee	sprintf		1249627	0					
ANR	1249859	Identifier	sprintf		1249627	0					
ANR	1249860	ArgumentList	draining_check_expr		1249627	1					
ANR	1249861	Argument	draining_check_expr		1249627	0					
ANR	1249862	Identifier	draining_check_expr		1249627	0					
ANR	1249863	Argument	"""%s <= %d && %s <= %d"""		1249627	1					
ANR	1249864	PrimaryExpression	"""%s <= %d && %s <= %d"""		1249627	0					
ANR	1249865	Argument	ATTR_EXPECTED_MACHINE_QUICK_DRAINING_COMPLETION		1249627	2					
ANR	1249866	Identifier	ATTR_EXPECTED_MACHINE_QUICK_DRAINING_COMPLETION		1249627	0					
ANR	1249867	Argument	quick_completion + negligible_deadline_slippage		1249627	3					
ANR	1249868	AdditiveExpression	quick_completion + negligible_deadline_slippage		1249627	0		+			
ANR	1249869	Identifier	quick_completion		1249627	0					
ANR	1249870	Identifier	negligible_deadline_slippage		1249627	1					
ANR	1249871	Argument	ATTR_EXPECTED_MACHINE_QUICK_DRAINING_BADPUT		1249627	4					
ANR	1249872	Identifier	ATTR_EXPECTED_MACHINE_QUICK_DRAINING_BADPUT		1249627	0					
ANR	1249873	Argument	( int ) ( badput_growth_tolerance * quick_badput ) + negligible_badput		1249627	5					
ANR	1249874	AdditiveExpression	( int ) ( badput_growth_tolerance * quick_badput ) + negligible_badput		1249627	0		+			
ANR	1249875	CastExpression	( int ) ( badput_growth_tolerance * quick_badput )		1249627	0					
ANR	1249876	CastTarget	int		1249627	0					
ANR	1249877	MultiplicativeExpression	badput_growth_tolerance * quick_badput		1249627	1		*			
ANR	1249878	Identifier	badput_growth_tolerance		1249627	0					
ANR	1249879	Identifier	quick_badput		1249627	1					
ANR	1249880	Identifier	negligible_badput		1249627	1					
ANR	1249881	IdentifierDeclStatement	std :: string request_id ;	649:1:18808:18830	1249627	19	True				
ANR	1249882	IdentifierDecl	request_id		1249627	0					
ANR	1249883	IdentifierDeclType	std :: string		1249627	0					
ANR	1249884	Identifier	request_id		1249627	1					
ANR	1249885	IdentifierDeclStatement	bool resume_on_completion = true ;	650:1:18833:18865	1249627	20	True				
ANR	1249886	IdentifierDecl	resume_on_completion = true		1249627	0					
ANR	1249887	IdentifierDeclType	bool		1249627	0					
ANR	1249888	Identifier	resume_on_completion		1249627	1					
ANR	1249889	AssignmentExpression	resume_on_completion = true		1249627	2		=			
ANR	1249890	Identifier	true		1249627	0					
ANR	1249891	Identifier	true		1249627	1					
ANR	1249892	IdentifierDeclStatement	"bool rval = startd . drainJobs ( m_draining_schedule , resume_on_completion , draining_check_expr . c_str ( ) , request_id ) ;"	651:1:18868:18982	1249627	21	True				
ANR	1249893	IdentifierDecl	"rval = startd . drainJobs ( m_draining_schedule , resume_on_completion , draining_check_expr . c_str ( ) , request_id )"		1249627	0					
ANR	1249894	IdentifierDeclType	bool		1249627	0					
ANR	1249895	Identifier	rval		1249627	1					
ANR	1249896	AssignmentExpression	"rval = startd . drainJobs ( m_draining_schedule , resume_on_completion , draining_check_expr . c_str ( ) , request_id )"		1249627	2		=			
ANR	1249897	Identifier	rval		1249627	0					
ANR	1249898	CallExpression	"startd . drainJobs ( m_draining_schedule , resume_on_completion , draining_check_expr . c_str ( ) , request_id )"		1249627	1					
ANR	1249899	Callee	startd . drainJobs		1249627	0					
ANR	1249900	MemberAccess	startd . drainJobs		1249627	0					
ANR	1249901	Identifier	startd		1249627	0					
ANR	1249902	Identifier	drainJobs		1249627	1					
ANR	1249903	ArgumentList	m_draining_schedule		1249627	1					
ANR	1249904	Argument	m_draining_schedule		1249627	0					
ANR	1249905	Identifier	m_draining_schedule		1249627	0					
ANR	1249906	Argument	resume_on_completion		1249627	1					
ANR	1249907	Identifier	resume_on_completion		1249627	0					
ANR	1249908	Argument	draining_check_expr . c_str ( )		1249627	2					
ANR	1249909	CallExpression	draining_check_expr . c_str ( )		1249627	0					
ANR	1249910	Callee	draining_check_expr . c_str		1249627	0					
ANR	1249911	MemberAccess	draining_check_expr . c_str		1249627	0					
ANR	1249912	Identifier	draining_check_expr		1249627	0					
ANR	1249913	Identifier	c_str		1249627	1					
ANR	1249914	ArgumentList			1249627	1					
ANR	1249915	Argument	request_id		1249627	3					
ANR	1249916	Identifier	request_id		1249627	0					
ANR	1249917	IfStatement	if ( ! rval )		1249627	22					
ANR	1249918	Condition	! rval	652:5:18989:18993	1249627	0	True				
ANR	1249919	UnaryOperationExpression	! rval		1249627	0					
ANR	1249920	UnaryOperator	!		1249627	0					
ANR	1249921	Identifier	rval		1249627	1					
ANR	1249922	CompoundStatement		48:13:2103:2103	1249627	1					
ANR	1249923	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to send request to drain %s: %s\\n"" , startd . name ( ) , startd . error ( ) )"	653:2:19001:19090	1249627	0	True				
ANR	1249924	CallExpression	"dprintf ( D_ALWAYS , ""Failed to send request to drain %s: %s\\n"" , startd . name ( ) , startd . error ( ) )"		1249627	0					
ANR	1249925	Callee	dprintf		1249627	0					
ANR	1249926	Identifier	dprintf		1249627	0					
ANR	1249927	ArgumentList	D_ALWAYS		1249627	1					
ANR	1249928	Argument	D_ALWAYS		1249627	0					
ANR	1249929	Identifier	D_ALWAYS		1249627	0					
ANR	1249930	Argument	"""Failed to send request to drain %s: %s\\n"""		1249627	1					
ANR	1249931	PrimaryExpression	"""Failed to send request to drain %s: %s\\n"""		1249627	0					
ANR	1249932	Argument	startd . name ( )		1249627	2					
ANR	1249933	CallExpression	startd . name ( )		1249627	0					
ANR	1249934	Callee	startd . name		1249627	0					
ANR	1249935	MemberAccess	startd . name		1249627	0					
ANR	1249936	Identifier	startd		1249627	0					
ANR	1249937	Identifier	name		1249627	1					
ANR	1249938	ArgumentList			1249627	1					
ANR	1249939	Argument	startd . error ( )		1249627	3					
ANR	1249940	CallExpression	startd . error ( )		1249627	0					
ANR	1249941	Callee	startd . error		1249627	0					
ANR	1249942	MemberAccess	startd . error		1249627	0					
ANR	1249943	Identifier	startd		1249627	0					
ANR	1249944	Identifier	error		1249627	1					
ANR	1249945	ArgumentList			1249627	1					
ANR	1249946	ExpressionStatement	m_stats . DrainFailures += 1	654:2:19094:19120	1249627	1	True				
ANR	1249947	AssignmentExpression	m_stats . DrainFailures += 1		1249627	0		+=			
ANR	1249948	MemberAccess	m_stats . DrainFailures		1249627	0					
ANR	1249949	Identifier	m_stats		1249627	0					
ANR	1249950	Identifier	DrainFailures		1249627	1					
ANR	1249951	PrimaryExpression	1		1249627	1					
ANR	1249952	ReturnStatement	return false ;	655:2:19124:19136	1249627	2	True				
ANR	1249953	Identifier	false		1249627	0					
ANR	1249954	ExpressionStatement	m_stats . DrainSuccesses += 1	657:1:19142:19169	1249627	23	True				
ANR	1249955	AssignmentExpression	m_stats . DrainSuccesses += 1		1249627	0		+=			
ANR	1249956	MemberAccess	m_stats . DrainSuccesses		1249627	0					
ANR	1249957	Identifier	m_stats		1249627	0					
ANR	1249958	Identifier	DrainSuccesses		1249627	1					
ANR	1249959	PrimaryExpression	1		1249627	1					
ANR	1249960	ReturnStatement	return true ;	659:1:19173:19184	1249627	24	True				
ANR	1249961	Identifier	true		1249627	0					
ANR	1249962	ReturnType	bool		1249627	1					
ANR	1249963	Identifier	Defrag :: drain		1249627	2					
ANR	1249964	ParameterList	ClassAd * startd_ad		1249627	3					
ANR	1249965	Parameter	ClassAd * startd_ad	604:14:16873:16890	1249627	0	True				
ANR	1249966	ParameterType	ClassAd *		1249627	0					
ANR	1249967	Identifier	startd_ad		1249627	1					
ANR	1249968	CFGEntryNode	ENTRY		1249627		True				
ANR	1249969	CFGExitNode	EXIT		1249627		True				
ANR	1249970	Symbol	ATTR_EXPECTED_MACHINE_GRACEFUL_DRAINING_BADPUT		1249627						
ANR	1249971	Symbol	ATTR_NAME		1249627						
ANR	1249972	Symbol	ATTR_EXPECTED_MACHINE_GRACEFUL_DRAINING_COMPLETION		1249627						
ANR	1249973	Symbol	quick_completion		1249627						
ANR	1249974	Symbol	m_draining_schedule_str . c_str		1249627						
ANR	1249975	Symbol	name . c_str		1249627						
ANR	1249976	Symbol	startd		1249627						
ANR	1249977	Symbol	negligible_badput		1249627						
ANR	1249978	Symbol	now		1249627						
ANR	1249979	Symbol	resume_on_completion		1249627						
ANR	1249980	Symbol	rval		1249627						
ANR	1249981	Symbol	startd_ad		1249627						
ANR	1249982	Symbol	startd . drainJobs		1249627						
ANR	1249983	Symbol	m_draining_schedule_str		1249627						
ANR	1249984	Symbol	NULL		1249627						
ANR	1249985	Symbol	draining_check_expr . c_str		1249627						
ANR	1249986	Symbol	m_stats		1249627						
ANR	1249987	Symbol	negligible_deadline_slippage		1249627						
ANR	1249988	Symbol	m_draining_schedule		1249627						
ANR	1249989	Symbol	badput_growth_tolerance		1249627						
ANR	1249990	Symbol	D_ALWAYS		1249627						
ANR	1249991	Symbol	quick_badput		1249627						
ANR	1249992	Symbol	false		1249627						
ANR	1249993	Symbol	DRAIN_GRACEFUL		1249627						
ANR	1249994	Symbol	draining_check_expr		1249627						
ANR	1249995	Symbol	startd . name		1249627						
ANR	1249996	Symbol	startd . error		1249627						
ANR	1249997	Symbol	ATTR_EXPECTED_MACHINE_QUICK_DRAINING_COMPLETION		1249627						
ANR	1249998	Symbol	name		1249627						
ANR	1249999	Symbol	true		1249627						
ANR	1250000	Symbol	ATTR_EXPECTED_MACHINE_QUICK_DRAINING_BADPUT		1249627						
ANR	1250001	Symbol	m_stats . DrainSuccesses		1249627						
ANR	1250002	Symbol	time		1249627						
ANR	1250003	Symbol	graceful_badput		1249627						
ANR	1250004	Symbol	m_stats . DrainFailures		1249627						
ANR	1250005	Symbol	request_id		1249627						
ANR	1250006	Symbol	graceful_completion		1249627						
ANR	1250007	Function	Defrag :: publish	662:0:19189:19541							
ANR	1250008	FunctionDef	Defrag :: publish (ClassAd * ad)		1250007	0					
ANR	1250009	CompoundStatement		664:0:19223:19541	1250007	0					
ANR	1250010	IdentifierDeclStatement	char * valid_name = build_valid_daemon_name ( m_defrag_name . c_str ( ) ) ;	665:1:19226:19291	1250007	0	True				
ANR	1250011	IdentifierDecl	* valid_name = build_valid_daemon_name ( m_defrag_name . c_str ( ) )		1250007	0					
ANR	1250012	IdentifierDeclType	char *		1250007	0					
ANR	1250013	Identifier	valid_name		1250007	1					
ANR	1250014	AssignmentExpression	* valid_name = build_valid_daemon_name ( m_defrag_name . c_str ( ) )		1250007	2		=			
ANR	1250015	Identifier	valid_name		1250007	0					
ANR	1250016	CallExpression	build_valid_daemon_name ( m_defrag_name . c_str ( ) )		1250007	1					
ANR	1250017	Callee	build_valid_daemon_name		1250007	0					
ANR	1250018	Identifier	build_valid_daemon_name		1250007	0					
ANR	1250019	ArgumentList	m_defrag_name . c_str ( )		1250007	1					
ANR	1250020	Argument	m_defrag_name . c_str ( )		1250007	0					
ANR	1250021	CallExpression	m_defrag_name . c_str ( )		1250007	0					
ANR	1250022	Callee	m_defrag_name . c_str		1250007	0					
ANR	1250023	MemberAccess	m_defrag_name . c_str		1250007	0					
ANR	1250024	Identifier	m_defrag_name		1250007	0					
ANR	1250025	Identifier	c_str		1250007	1					
ANR	1250026	ArgumentList			1250007	1					
ANR	1250027	ExpressionStatement	ASSERT ( valid_name )	666:1:19294:19314	1250007	1	True				
ANR	1250028	CallExpression	ASSERT ( valid_name )		1250007	0					
ANR	1250029	Callee	ASSERT		1250007	0					
ANR	1250030	Identifier	ASSERT		1250007	0					
ANR	1250031	ArgumentList	valid_name		1250007	1					
ANR	1250032	Argument	valid_name		1250007	0					
ANR	1250033	Identifier	valid_name		1250007	0					
ANR	1250034	ExpressionStatement	m_daemon_name = valid_name	667:1:19317:19343	1250007	2	True				
ANR	1250035	AssignmentExpression	m_daemon_name = valid_name		1250007	0		=			
ANR	1250036	Identifier	m_daemon_name		1250007	0					
ANR	1250037	Identifier	valid_name		1250007	1					
ANR	1250038	Statement	delete	668:1:19346:19351	1250007	3	True				
ANR	1250039	Statement	[	668:8:19353:19353	1250007	4	True				
ANR	1250040	Statement	]	668:9:19354:19354	1250007	5	True				
ANR	1250041	ExpressionStatement	valid_name	668:11:19356:19366	1250007	6	True				
ANR	1250042	Identifier	valid_name		1250007	0					
ANR	1250043	ExpressionStatement	"ad -> SetMyTypeName ( ""Defrag"" )"	670:1:19370:19397	1250007	7	True				
ANR	1250044	CallExpression	"ad -> SetMyTypeName ( ""Defrag"" )"		1250007	0					
ANR	1250045	Callee	ad -> SetMyTypeName		1250007	0					
ANR	1250046	PtrMemberAccess	ad -> SetMyTypeName		1250007	0					
ANR	1250047	Identifier	ad		1250007	0					
ANR	1250048	Identifier	SetMyTypeName		1250007	1					
ANR	1250049	ArgumentList	"""Defrag"""		1250007	1					
ANR	1250050	Argument	"""Defrag"""		1250007	0					
ANR	1250051	PrimaryExpression	"""Defrag"""		1250007	0					
ANR	1250052	ExpressionStatement	"ad -> SetTargetTypeName ( """" )"	671:1:19400:19425	1250007	8	True				
ANR	1250053	CallExpression	"ad -> SetTargetTypeName ( """" )"		1250007	0					
ANR	1250054	Callee	ad -> SetTargetTypeName		1250007	0					
ANR	1250055	PtrMemberAccess	ad -> SetTargetTypeName		1250007	0					
ANR	1250056	Identifier	ad		1250007	0					
ANR	1250057	Identifier	SetTargetTypeName		1250007	1					
ANR	1250058	ArgumentList	""""""		1250007	1					
ANR	1250059	Argument	""""""		1250007	0					
ANR	1250060	PrimaryExpression	""""""		1250007	0					
ANR	1250061	ExpressionStatement	"ad -> Assign ( ATTR_NAME , m_daemon_name . c_str ( ) )"	673:1:19429:19472	1250007	9	True				
ANR	1250062	CallExpression	"ad -> Assign ( ATTR_NAME , m_daemon_name . c_str ( ) )"		1250007	0					
ANR	1250063	Callee	ad -> Assign		1250007	0					
ANR	1250064	PtrMemberAccess	ad -> Assign		1250007	0					
ANR	1250065	Identifier	ad		1250007	0					
ANR	1250066	Identifier	Assign		1250007	1					
ANR	1250067	ArgumentList	ATTR_NAME		1250007	1					
ANR	1250068	Argument	ATTR_NAME		1250007	0					
ANR	1250069	Identifier	ATTR_NAME		1250007	0					
ANR	1250070	Argument	m_daemon_name . c_str ( )		1250007	1					
ANR	1250071	CallExpression	m_daemon_name . c_str ( )		1250007	0					
ANR	1250072	Callee	m_daemon_name . c_str		1250007	0					
ANR	1250073	MemberAccess	m_daemon_name . c_str		1250007	0					
ANR	1250074	Identifier	m_daemon_name		1250007	0					
ANR	1250075	Identifier	c_str		1250007	1					
ANR	1250076	ArgumentList			1250007	1					
ANR	1250077	ExpressionStatement	m_stats . Tick ( )	675:1:19476:19490	1250007	10	True				
ANR	1250078	CallExpression	m_stats . Tick ( )		1250007	0					
ANR	1250079	Callee	m_stats . Tick		1250007	0					
ANR	1250080	MemberAccess	m_stats . Tick		1250007	0					
ANR	1250081	Identifier	m_stats		1250007	0					
ANR	1250082	Identifier	Tick		1250007	1					
ANR	1250083	ArgumentList			1250007	1					
ANR	1250084	ExpressionStatement	m_stats . Publish ( * ad )	676:1:19493:19513	1250007	11	True				
ANR	1250085	CallExpression	m_stats . Publish ( * ad )		1250007	0					
ANR	1250086	Callee	m_stats . Publish		1250007	0					
ANR	1250087	MemberAccess	m_stats . Publish		1250007	0					
ANR	1250088	Identifier	m_stats		1250007	0					
ANR	1250089	Identifier	Publish		1250007	1					
ANR	1250090	ArgumentList	* ad		1250007	1					
ANR	1250091	Argument	* ad		1250007	0					
ANR	1250092	UnaryOperationExpression	* ad		1250007	0					
ANR	1250093	UnaryOperator	*		1250007	0					
ANR	1250094	Identifier	ad		1250007	1					
ANR	1250095	ExpressionStatement	daemonCore -> publish ( ad )	677:1:19516:19539	1250007	12	True				
ANR	1250096	CallExpression	daemonCore -> publish ( ad )		1250007	0					
ANR	1250097	Callee	daemonCore -> publish		1250007	0					
ANR	1250098	PtrMemberAccess	daemonCore -> publish		1250007	0					
ANR	1250099	Identifier	daemonCore		1250007	0					
ANR	1250100	Identifier	publish		1250007	1					
ANR	1250101	ArgumentList	ad		1250007	1					
ANR	1250102	Argument	ad		1250007	0					
ANR	1250103	Identifier	ad		1250007	0					
ANR	1250104	ReturnType	void		1250007	1					
ANR	1250105	Identifier	Defrag :: publish		1250007	2					
ANR	1250106	ParameterList	ClassAd * ad		1250007	3					
ANR	1250107	Parameter	ClassAd * ad	663:16:19210:19220	1250007	0	True				
ANR	1250108	ParameterType	ClassAd *		1250007	0					
ANR	1250109	Identifier	ad		1250007	1					
ANR	1250110	CFGEntryNode	ENTRY		1250007		True				
ANR	1250111	CFGExitNode	EXIT		1250007		True				
ANR	1250112	Symbol	m_daemon_name		1250007						
ANR	1250113	Symbol	ad		1250007						
ANR	1250114	Symbol	ATTR_NAME		1250007						
ANR	1250115	Symbol	m_daemon_name . c_str		1250007						
ANR	1250116	Symbol	m_stats		1250007						
ANR	1250117	Symbol	valid_name		1250007						
ANR	1250118	Symbol	m_defrag_name . c_str		1250007						
ANR	1250119	Symbol	build_valid_daemon_name		1250007						
ANR	1250120	Symbol	daemonCore		1250007						
ANR	1250121	Symbol	m_defrag_name		1250007						
ANR	1250122	Symbol	* ad		1250007						
ANR	1250123	Function	Defrag :: updateCollector	680:0:19544:19660							
ANR	1250124	FunctionDef	Defrag :: updateCollector ()		1250123	0					
ANR	1250125	CompoundStatement		681:26:19575:19660	1250123	0					
ANR	1250126	ExpressionStatement	publish ( & m_public_ad )	682:1:19578:19599	1250123	0	True				
ANR	1250127	CallExpression	publish ( & m_public_ad )		1250123	0					
ANR	1250128	Callee	publish		1250123	0					
ANR	1250129	Identifier	publish		1250123	0					
ANR	1250130	ArgumentList	& m_public_ad		1250123	1					
ANR	1250131	Argument	& m_public_ad		1250123	0					
ANR	1250132	UnaryOperationExpression	& m_public_ad		1250123	0					
ANR	1250133	UnaryOperator	&		1250123	0					
ANR	1250134	Identifier	m_public_ad		1250123	1					
ANR	1250135	ExpressionStatement	"daemonCore -> sendUpdates ( UPDATE_AD_GENERIC , & m_public_ad )"	683:1:19602:19658	1250123	1	True				
ANR	1250136	CallExpression	"daemonCore -> sendUpdates ( UPDATE_AD_GENERIC , & m_public_ad )"		1250123	0					
ANR	1250137	Callee	daemonCore -> sendUpdates		1250123	0					
ANR	1250138	PtrMemberAccess	daemonCore -> sendUpdates		1250123	0					
ANR	1250139	Identifier	daemonCore		1250123	0					
ANR	1250140	Identifier	sendUpdates		1250123	1					
ANR	1250141	ArgumentList	UPDATE_AD_GENERIC		1250123	1					
ANR	1250142	Argument	UPDATE_AD_GENERIC		1250123	0					
ANR	1250143	Identifier	UPDATE_AD_GENERIC		1250123	0					
ANR	1250144	Argument	& m_public_ad		1250123	1					
ANR	1250145	UnaryOperationExpression	& m_public_ad		1250123	0					
ANR	1250146	UnaryOperator	&		1250123	0					
ANR	1250147	Identifier	m_public_ad		1250123	1					
ANR	1250148	ReturnType	void		1250123	1					
ANR	1250149	Identifier	Defrag :: updateCollector		1250123	2					
ANR	1250150	ParameterList			1250123	3					
ANR	1250151	CFGEntryNode	ENTRY		1250123		True				
ANR	1250152	CFGExitNode	EXIT		1250123		True				
ANR	1250153	Symbol	daemonCore		1250123						
ANR	1250154	Symbol	UPDATE_AD_GENERIC		1250123						
ANR	1250155	Symbol	& m_public_ad		1250123						
ANR	1250156	Function	Defrag :: invalidatePublicAd	686:0:19663:20093							
ANR	1250157	FunctionDef	Defrag :: invalidatePublicAd ()		1250156	0					
ANR	1250158	CompoundStatement		687:29:19697:20093	1250156	0					
ANR	1250159	IdentifierDeclStatement	ClassAd invalidate_ad ;	688:1:19700:19721	1250156	0	True				
ANR	1250160	IdentifierDecl	invalidate_ad		1250156	0					
ANR	1250161	IdentifierDeclType	ClassAd		1250156	0					
ANR	1250162	Identifier	invalidate_ad		1250156	1					
ANR	1250163	IdentifierDeclStatement	std :: string line ;	689:1:19724:19740	1250156	1	True				
ANR	1250164	IdentifierDecl	line		1250156	0					
ANR	1250165	IdentifierDeclType	std :: string		1250156	0					
ANR	1250166	Identifier	line		1250156	1					
ANR	1250167	ExpressionStatement	invalidate_ad . SetMyTypeName ( QUERY_ADTYPE )	691:1:19744:19785	1250156	2	True				
ANR	1250168	CallExpression	invalidate_ad . SetMyTypeName ( QUERY_ADTYPE )		1250156	0					
ANR	1250169	Callee	invalidate_ad . SetMyTypeName		1250156	0					
ANR	1250170	MemberAccess	invalidate_ad . SetMyTypeName		1250156	0					
ANR	1250171	Identifier	invalidate_ad		1250156	0					
ANR	1250172	Identifier	SetMyTypeName		1250156	1					
ANR	1250173	ArgumentList	QUERY_ADTYPE		1250156	1					
ANR	1250174	Argument	QUERY_ADTYPE		1250156	0					
ANR	1250175	Identifier	QUERY_ADTYPE		1250156	0					
ANR	1250176	ExpressionStatement	"invalidate_ad . SetTargetTypeName ( ""Defrag"" )"	692:1:19788:19829	1250156	3	True				
ANR	1250177	CallExpression	"invalidate_ad . SetTargetTypeName ( ""Defrag"" )"		1250156	0					
ANR	1250178	Callee	invalidate_ad . SetTargetTypeName		1250156	0					
ANR	1250179	MemberAccess	invalidate_ad . SetTargetTypeName		1250156	0					
ANR	1250180	Identifier	invalidate_ad		1250156	0					
ANR	1250181	Identifier	SetTargetTypeName		1250156	1					
ANR	1250182	ArgumentList	"""Defrag"""		1250156	1					
ANR	1250183	Argument	"""Defrag"""		1250156	0					
ANR	1250184	PrimaryExpression	"""Defrag"""		1250156	0					
ANR	1250185	ExpressionStatement	"sprintf ( line , ""%s == \\""%s\\"""" , ATTR_NAME , m_daemon_name . c_str ( ) )"	694:1:19833:19895	1250156	4	True				
ANR	1250186	CallExpression	"sprintf ( line , ""%s == \\""%s\\"""" , ATTR_NAME , m_daemon_name . c_str ( ) )"		1250156	0					
ANR	1250187	Callee	sprintf		1250156	0					
ANR	1250188	Identifier	sprintf		1250156	0					
ANR	1250189	ArgumentList	line		1250156	1					
ANR	1250190	Argument	line		1250156	0					
ANR	1250191	Identifier	line		1250156	0					
ANR	1250192	Argument	"""%s == \\""%s\\"""""		1250156	1					
ANR	1250193	PrimaryExpression	"""%s == \\""%s\\"""""		1250156	0					
ANR	1250194	Argument	ATTR_NAME		1250156	2					
ANR	1250195	Identifier	ATTR_NAME		1250156	0					
ANR	1250196	Argument	m_daemon_name . c_str ( )		1250156	3					
ANR	1250197	CallExpression	m_daemon_name . c_str ( )		1250156	0					
ANR	1250198	Callee	m_daemon_name . c_str		1250156	0					
ANR	1250199	MemberAccess	m_daemon_name . c_str		1250156	0					
ANR	1250200	Identifier	m_daemon_name		1250156	0					
ANR	1250201	Identifier	c_str		1250156	1					
ANR	1250202	ArgumentList			1250156	1					
ANR	1250203	ExpressionStatement	"invalidate_ad . AssignExpr ( ATTR_REQUIREMENTS , line . c_str ( ) )"	695:1:19898:19955	1250156	5	True				
ANR	1250204	CallExpression	"invalidate_ad . AssignExpr ( ATTR_REQUIREMENTS , line . c_str ( ) )"		1250156	0					
ANR	1250205	Callee	invalidate_ad . AssignExpr		1250156	0					
ANR	1250206	MemberAccess	invalidate_ad . AssignExpr		1250156	0					
ANR	1250207	Identifier	invalidate_ad		1250156	0					
ANR	1250208	Identifier	AssignExpr		1250156	1					
ANR	1250209	ArgumentList	ATTR_REQUIREMENTS		1250156	1					
ANR	1250210	Argument	ATTR_REQUIREMENTS		1250156	0					
ANR	1250211	Identifier	ATTR_REQUIREMENTS		1250156	0					
ANR	1250212	Argument	line . c_str ( )		1250156	1					
ANR	1250213	CallExpression	line . c_str ( )		1250156	0					
ANR	1250214	Callee	line . c_str		1250156	0					
ANR	1250215	MemberAccess	line . c_str		1250156	0					
ANR	1250216	Identifier	line		1250156	0					
ANR	1250217	Identifier	c_str		1250156	1					
ANR	1250218	ArgumentList			1250156	1					
ANR	1250219	ExpressionStatement	"invalidate_ad . Assign ( ATTR_NAME , m_daemon_name . c_str ( ) )"	696:1:19958:20012	1250156	6	True				
ANR	1250220	CallExpression	"invalidate_ad . Assign ( ATTR_NAME , m_daemon_name . c_str ( ) )"		1250156	0					
ANR	1250221	Callee	invalidate_ad . Assign		1250156	0					
ANR	1250222	MemberAccess	invalidate_ad . Assign		1250156	0					
ANR	1250223	Identifier	invalidate_ad		1250156	0					
ANR	1250224	Identifier	Assign		1250156	1					
ANR	1250225	ArgumentList	ATTR_NAME		1250156	1					
ANR	1250226	Argument	ATTR_NAME		1250156	0					
ANR	1250227	Identifier	ATTR_NAME		1250156	0					
ANR	1250228	Argument	m_daemon_name . c_str ( )		1250156	1					
ANR	1250229	CallExpression	m_daemon_name . c_str ( )		1250156	0					
ANR	1250230	Callee	m_daemon_name . c_str		1250156	0					
ANR	1250231	MemberAccess	m_daemon_name . c_str		1250156	0					
ANR	1250232	Identifier	m_daemon_name		1250156	0					
ANR	1250233	Identifier	c_str		1250156	1					
ANR	1250234	ArgumentList			1250156	1					
ANR	1250235	ExpressionStatement	"daemonCore -> sendUpdates ( INVALIDATE_ADS_GENERIC , & invalidate_ad , NULL , false )"	697:1:20015:20091	1250156	7	True				
ANR	1250236	CallExpression	"daemonCore -> sendUpdates ( INVALIDATE_ADS_GENERIC , & invalidate_ad , NULL , false )"		1250156	0					
ANR	1250237	Callee	daemonCore -> sendUpdates		1250156	0					
ANR	1250238	PtrMemberAccess	daemonCore -> sendUpdates		1250156	0					
ANR	1250239	Identifier	daemonCore		1250156	0					
ANR	1250240	Identifier	sendUpdates		1250156	1					
ANR	1250241	ArgumentList	INVALIDATE_ADS_GENERIC		1250156	1					
ANR	1250242	Argument	INVALIDATE_ADS_GENERIC		1250156	0					
ANR	1250243	Identifier	INVALIDATE_ADS_GENERIC		1250156	0					
ANR	1250244	Argument	& invalidate_ad		1250156	1					
ANR	1250245	UnaryOperationExpression	& invalidate_ad		1250156	0					
ANR	1250246	UnaryOperator	&		1250156	0					
ANR	1250247	Identifier	invalidate_ad		1250156	1					
ANR	1250248	Argument	NULL		1250156	2					
ANR	1250249	Identifier	NULL		1250156	0					
ANR	1250250	Argument	false		1250156	3					
ANR	1250251	Identifier	false		1250156	0					
ANR	1250252	ReturnType	void		1250156	1					
ANR	1250253	Identifier	Defrag :: invalidatePublicAd		1250156	2					
ANR	1250254	ParameterList			1250156	3					
ANR	1250255	CFGEntryNode	ENTRY		1250156		True				
ANR	1250256	CFGExitNode	EXIT		1250156		True				
ANR	1250257	Symbol	m_daemon_name		1250156						
ANR	1250258	Symbol	m_daemon_name . c_str		1250156						
ANR	1250259	Symbol	ATTR_NAME		1250156						
ANR	1250260	Symbol	NULL		1250156						
ANR	1250261	Symbol	line		1250156						
ANR	1250262	Symbol	ATTR_REQUIREMENTS		1250156						
ANR	1250263	Symbol	false		1250156						
ANR	1250264	Symbol	INVALIDATE_ADS_GENERIC		1250156						
ANR	1250265	Symbol	& invalidate_ad		1250156						
ANR	1250266	Symbol	QUERY_ADTYPE		1250156						
ANR	1250267	Symbol	invalidate_ad		1250156						
ANR	1250268	Symbol	daemonCore		1250156						
ANR	1250269	Symbol	line . c_str		1250156						
