command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3621891	File	data/converged/CVE-2011-4930_htcondor/src_condor_procd_proc_family.cpp								
ANR	3621892	DeclStmt									
ANR	3621893	Decl							bool	bool	ProcFamily :: m_cgroup_initialized
ANR	3621894	DeclStmt									
ANR	3621895	Decl							bool	bool	ProcFamily :: m_cgroup_freezer_mounted
ANR	3621896	DeclStmt									
ANR	3621897	Decl							bool	bool	ProcFamily :: m_cgroup_cpuacct_mounted
ANR	3621898	DeclStmt									
ANR	3621899	Decl							bool	bool	ProcFamily :: m_cgroup_memory_mounted
ANR	3621900	DeclStmt									
ANR	3621901	Decl							bool	bool	ProcFamily :: m_cgroup_block_mounted
ANR	3621902	DeclStmt									
ANR	3621903	Decl							long	long	ProcFamily :: clock_tick
ANR	3621904	Function	ProcFamily :: ProcFamily	51:0:1590:2280							
ANR	3621905	FunctionDef	"ProcFamily :: ProcFamily (ProcFamilyMonitor * monitor , pid_t root_pid , birthday_t root_birthday , pid_t watcher_pid , int max_snapshot_interval)"		3621904	0					
ANR	3621906	CompoundStatement		65:0:2125:2280	3621904	0					
ANR	3621907	ExpressionStatement	m_proxy = NULL	67:1:2148:2162	3621904	0	True				
ANR	3621908	AssignmentExpression	m_proxy = NULL		3621904	0		=			
ANR	3621909	Identifier	m_proxy		3621904	0					
ANR	3621910	Identifier	NULL		3621904	1					
ANR	3621911	ExpressionStatement	m_cgroup_string = NULL	70:1:2204:2226	3621904	1	True				
ANR	3621912	AssignmentExpression	m_cgroup_string = NULL		3621904	0		=			
ANR	3621913	Identifier	m_cgroup_string		3621904	0					
ANR	3621914	Identifier	NULL		3621904	1					
ANR	3621915	ExpressionStatement	m_cgroup = NULL	71:1:2229:2244	3621904	2	True				
ANR	3621916	AssignmentExpression	m_cgroup = NULL		3621904	0		=			
ANR	3621917	Identifier	m_cgroup		3621904	0					
ANR	3621918	Identifier	NULL		3621904	1					
ANR	3621919	ExpressionStatement	m_created_cgroup = false	72:1:2247:2271	3621904	3	True				
ANR	3621920	AssignmentExpression	m_created_cgroup = false		3621904	0		=			
ANR	3621921	Identifier	m_created_cgroup		3621904	0					
ANR	3621922	Identifier	false		3621904	1					
ANR	3621923	Identifier	ProcFamily :: ProcFamily		3621904	1					
ANR	3621924	ParameterList	"ProcFamilyMonitor * monitor , pid_t root_pid , birthday_t root_birthday , pid_t watcher_pid , int max_snapshot_interval"		3621904	2					
ANR	3621925	Parameter	ProcFamilyMonitor * monitor	51:23:1613:1638	3621904	0	True				
ANR	3621926	ParameterType	ProcFamilyMonitor *		3621904	0					
ANR	3621927	Identifier	monitor		3621904	1					
ANR	3621928	Parameter	pid_t root_pid	52:23:1664:1690	3621904	1	True				
ANR	3621929	ParameterType	pid_t		3621904	0					
ANR	3621930	Identifier	root_pid		3621904	1					
ANR	3621931	Parameter	birthday_t root_birthday	53:23:1716:1747	3621904	2	True				
ANR	3621932	ParameterType	birthday_t		3621904	0					
ANR	3621933	Identifier	root_birthday		3621904	1					
ANR	3621934	Parameter	pid_t watcher_pid	54:23:1773:1802	3621904	3	True				
ANR	3621935	ParameterType	pid_t		3621904	0					
ANR	3621936	Identifier	watcher_pid		3621904	1					
ANR	3621937	Parameter	int max_snapshot_interval	55:23:1828:1867	3621904	4	True				
ANR	3621938	ParameterType	int		3621904	0					
ANR	3621939	Identifier	max_snapshot_interval		3621904	1					
ANR	3621940	CFGEntryNode	ENTRY		3621904		True				
ANR	3621941	CFGExitNode	EXIT		3621904		True				
ANR	3621942	Symbol	max_snapshot_interval		3621904						
ANR	3621943	Symbol	NULL		3621904						
ANR	3621944	Symbol	m_created_cgroup		3621904						
ANR	3621945	Symbol	watcher_pid		3621904						
ANR	3621946	Symbol	root_birthday		3621904						
ANR	3621947	Symbol	false		3621904						
ANR	3621948	Symbol	monitor		3621904						
ANR	3621949	Symbol	m_cgroup_string		3621904						
ANR	3621950	Symbol	root_pid		3621904						
ANR	3621951	Symbol	m_cgroup		3621904						
ANR	3621952	Symbol	m_proxy		3621904						
ANR	3621953	Function	ProcFamily :: ~ProcFamily	76:0:2283:3031							
ANR	3621954	FunctionDef	ProcFamily :: ~ProcFamily ()		3621953	0					
ANR	3621955	CompoundStatement		77:0:2309:3031	3621953	0					
ANR	3621956	IdentifierDeclStatement	ProcFamilyMember * member = m_member_list ;	80:1:2343:2383	3621953	0	True				
ANR	3621957	IdentifierDecl	* member = m_member_list		3621953	0					
ANR	3621958	IdentifierDeclType	ProcFamilyMember *		3621953	0					
ANR	3621959	Identifier	member		3621953	1					
ANR	3621960	AssignmentExpression	* member = m_member_list		3621953	2		=			
ANR	3621961	Identifier	m_member_list		3621953	0					
ANR	3621962	Identifier	m_member_list		3621953	1					
ANR	3621963	WhileStatement	while ( member != NULL )		3621953	1					
ANR	3621964	Condition	member != NULL	81:8:2393:2406	3621953	0	True				
ANR	3621965	EqualityExpression	member != NULL		3621953	0		!=			
ANR	3621966	Identifier	member		3621953	0					
ANR	3621967	Identifier	NULL		3621953	1					
ANR	3621968	CompoundStatement		6:2:103:149	3621953	1					
ANR	3621969	IdentifierDeclStatement	ProcFamilyMember * next_member = member -> m_next ;	82:2:2413:2459	3621953	0	True				
ANR	3621970	IdentifierDecl	* next_member = member -> m_next		3621953	0					
ANR	3621971	IdentifierDeclType	ProcFamilyMember *		3621953	0					
ANR	3621972	Identifier	next_member		3621953	1					
ANR	3621973	AssignmentExpression	* next_member = member -> m_next		3621953	2		=			
ANR	3621974	Identifier	next_member		3621953	0					
ANR	3621975	PtrMemberAccess	member -> m_next		3621953	1					
ANR	3621976	Identifier	member		3621953	0					
ANR	3621977	Identifier	m_next		3621953	1					
ANR	3621978	Statement	delete	87:2:2611:2616	3621953	1	True				
ANR	3621979	ExpressionStatement	member -> m_proc_info	87:9:2618:2637	3621953	2	True				
ANR	3621980	PtrMemberAccess	member -> m_proc_info		3621953	0					
ANR	3621981	Identifier	member		3621953	0					
ANR	3621982	Identifier	m_proc_info		3621953	1					
ANR	3621983	Statement	delete	88:2:2641:2646	3621953	3	True				
ANR	3621984	ExpressionStatement	member	88:9:2648:2654	3621953	4	True				
ANR	3621985	Identifier	member		3621953	0					
ANR	3621986	ExpressionStatement	member = next_member	89:2:2658:2678	3621953	5	True				
ANR	3621987	AssignmentExpression	member = next_member		3621953	0		=			
ANR	3621988	Identifier	member		3621953	0					
ANR	3621989	Identifier	next_member		3621953	1					
ANR	3621990	IfStatement	if ( m_proxy != NULL )		3621953	2					
ANR	3621991	Condition	m_proxy != NULL	95:5:2758:2772	3621953	0	True				
ANR	3621992	EqualityExpression	m_proxy != NULL		3621953	0		!=			
ANR	3621993	Identifier	m_proxy		3621953	0					
ANR	3621994	Identifier	NULL		3621953	1					
ANR	3621995	CompoundStatement		19:22:465:465	3621953	1					
ANR	3621996	ExpressionStatement	free ( m_proxy )	96:2:2779:2792	3621953	0	True				
ANR	3621997	CallExpression	free ( m_proxy )		3621953	0					
ANR	3621998	Callee	free		3621953	0					
ANR	3621999	Identifier	free		3621953	0					
ANR	3622000	ArgumentList	m_proxy		3621953	1					
ANR	3622001	Argument	m_proxy		3621953	0					
ANR	3622002	Identifier	m_proxy		3621953	0					
ANR	3622003	IfStatement	if ( m_cgroup && m_created_cgroup )		3621953	3					
ANR	3622004	Condition	m_cgroup && m_created_cgroup	100:5:2841:2868	3621953	0	True				
ANR	3622005	AndExpression	m_cgroup && m_created_cgroup		3621953	0		&&			
ANR	3622006	Identifier	m_cgroup		3621953	0					
ANR	3622007	Identifier	m_created_cgroup		3621953	1					
ANR	3622008	CompoundStatement		24:35:561:561	3621953	1					
ANR	3622009	ExpressionStatement	delete_cgroup ( m_cgroup_string )	101:2:2875:2905	3621953	0	True				
ANR	3622010	CallExpression	delete_cgroup ( m_cgroup_string )		3621953	0					
ANR	3622011	Callee	delete_cgroup		3621953	0					
ANR	3622012	Identifier	delete_cgroup		3621953	0					
ANR	3622013	ArgumentList	m_cgroup_string		3621953	1					
ANR	3622014	Argument	m_cgroup_string		3621953	0					
ANR	3622015	Identifier	m_cgroup_string		3621953	0					
ANR	3622016	IfStatement	if ( m_cgroup != NULL )		3621953	4					
ANR	3622017	Condition	m_cgroup != NULL	103:5:2915:2930	3621953	0	True				
ANR	3622018	EqualityExpression	m_cgroup != NULL		3621953	0		!=			
ANR	3622019	Identifier	m_cgroup		3621953	0					
ANR	3622020	Identifier	NULL		3621953	1					
ANR	3622021	CompoundStatement		27:23:623:623	3621953	1					
ANR	3622022	ExpressionStatement	cgroup_free ( & m_cgroup )	104:2:2937:2959	3621953	0	True				
ANR	3622023	CallExpression	cgroup_free ( & m_cgroup )		3621953	0					
ANR	3622024	Callee	cgroup_free		3621953	0					
ANR	3622025	Identifier	cgroup_free		3621953	0					
ANR	3622026	ArgumentList	& m_cgroup		3621953	1					
ANR	3622027	Argument	& m_cgroup		3621953	0					
ANR	3622028	UnaryOperationExpression	& m_cgroup		3621953	0					
ANR	3622029	UnaryOperator	&		3621953	0					
ANR	3622030	Identifier	m_cgroup		3621953	1					
ANR	3622031	IfStatement	if ( m_cgroup_string != NULL )		3621953	5					
ANR	3622032	Condition	m_cgroup_string != NULL	106:5:2969:2991	3621953	0	True				
ANR	3622033	EqualityExpression	m_cgroup_string != NULL		3621953	0		!=			
ANR	3622034	Identifier	m_cgroup_string		3621953	0					
ANR	3622035	Identifier	NULL		3621953	1					
ANR	3622036	CompoundStatement		30:30:684:684	3621953	1					
ANR	3622037	ExpressionStatement	free ( m_cgroup_string )	107:2:2998:3019	3621953	0	True				
ANR	3622038	CallExpression	free ( m_cgroup_string )		3621953	0					
ANR	3622039	Callee	free		3621953	0					
ANR	3622040	Identifier	free		3621953	0					
ANR	3622041	ArgumentList	m_cgroup_string		3621953	1					
ANR	3622042	Argument	m_cgroup_string		3621953	0					
ANR	3622043	Identifier	m_cgroup_string		3621953	0					
ANR	3622044	Identifier	ProcFamily :: ~ProcFamily		3621953	1					
ANR	3622045	ParameterList			3621953	2					
ANR	3622046	CFGEntryNode	ENTRY		3621953		True				
ANR	3622047	CFGExitNode	EXIT		3621953		True				
ANR	3622048	Symbol	m_member_list		3621953						
ANR	3622049	Symbol	NULL		3621953						
ANR	3622050	Symbol	m_created_cgroup		3621953						
ANR	3622051	Symbol	member		3621953						
ANR	3622052	Symbol	* member		3621953						
ANR	3622053	Symbol	next_member		3621953						
ANR	3622054	Symbol	member -> m_next		3621953						
ANR	3622055	Symbol	m_cgroup_string		3621953						
ANR	3622056	Symbol	& m_cgroup		3621953						
ANR	3622057	Symbol	m_cgroup		3621953						
ANR	3622058	Symbol	m_proxy		3621953						
ANR	3622059	Function	ProcFamily :: delete_cgroup	114:0:3067:3787							
ANR	3622060	FunctionDef	ProcFamily :: delete_cgroup (const char * cg_string)		3622059	0					
ANR	3622061	CompoundStatement		116:0:3122:3787	3622059	0					
ANR	3622062	IdentifierDeclStatement	int err ;	117:1:3125:3132	3622059	0	True				
ANR	3622063	IdentifierDecl	err		3622059	0					
ANR	3622064	IdentifierDeclType	int		3622059	0					
ANR	3622065	Identifier	err		3622059	1					
ANR	3622066	IdentifierDeclStatement	struct cgroup * dcg = cgroup_new_cgroup ( m_cgroup_string ) ;	119:1:3136:3191	3622059	1	True				
ANR	3622067	IdentifierDecl	* dcg = cgroup_new_cgroup ( m_cgroup_string )		3622059	0					
ANR	3622068	IdentifierDeclType	struct cgroup *		3622059	0					
ANR	3622069	Identifier	dcg		3622059	1					
ANR	3622070	AssignmentExpression	* dcg = cgroup_new_cgroup ( m_cgroup_string )		3622059	2		=			
ANR	3622071	Identifier	dcg		3622059	0					
ANR	3622072	CallExpression	cgroup_new_cgroup ( m_cgroup_string )		3622059	1					
ANR	3622073	Callee	cgroup_new_cgroup		3622059	0					
ANR	3622074	Identifier	cgroup_new_cgroup		3622059	0					
ANR	3622075	ArgumentList	m_cgroup_string		3622059	1					
ANR	3622076	Argument	m_cgroup_string		3622059	0					
ANR	3622077	Identifier	m_cgroup_string		3622059	0					
ANR	3622078	ExpressionStatement	ASSERT ( dcg != NULL )	120:1:3194:3214	3622059	2	True				
ANR	3622079	CallExpression	ASSERT ( dcg != NULL )		3622059	0					
ANR	3622080	Callee	ASSERT		3622059	0					
ANR	3622081	Identifier	ASSERT		3622059	0					
ANR	3622082	ArgumentList	dcg != NULL		3622059	1					
ANR	3622083	Argument	dcg != NULL		3622059	0					
ANR	3622084	EqualityExpression	dcg != NULL		3622059	0		!=			
ANR	3622085	Identifier	dcg		3622059	0					
ANR	3622086	Identifier	NULL		3622059	1					
ANR	3622087	IfStatement	if ( ( err = cgroup_get_cgroup ( dcg ) ) )		3622059	3					
ANR	3622088	Condition	err = cgroup_get_cgroup ( dcg )	121:5:3221:3250	3622059	0	True				
ANR	3622089	AssignmentExpression	err = cgroup_get_cgroup ( dcg )		3622059	0		=			
ANR	3622090	Identifier	err		3622059	0					
ANR	3622091	CallExpression	cgroup_get_cgroup ( dcg )		3622059	1					
ANR	3622092	Callee	cgroup_get_cgroup		3622059	0					
ANR	3622093	Identifier	cgroup_get_cgroup		3622059	0					
ANR	3622094	ArgumentList	dcg		3622059	1					
ANR	3622095	Argument	dcg		3622059	0					
ANR	3622096	Identifier	dcg		3622059	0					
ANR	3622097	CompoundStatement		6:37:130:130	3622059	1					
ANR	3622098	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""Unable to read cgroup %s for deletion (ProcFamily %u): %u %s\\n"" , cg_string , m_root_pid , err , cgroup_strerror ( err ) )"	122:2:3257:3400	3622059	0	True				
ANR	3622099	CallExpression	"dprintf ( D_PROCFAMILY , ""Unable to read cgroup %s for deletion (ProcFamily %u): %u %s\\n"" , cg_string , m_root_pid , err , cgroup_strerror ( err ) )"		3622059	0					
ANR	3622100	Callee	dprintf		3622059	0					
ANR	3622101	Identifier	dprintf		3622059	0					
ANR	3622102	ArgumentList	D_PROCFAMILY		3622059	1					
ANR	3622103	Argument	D_PROCFAMILY		3622059	0					
ANR	3622104	Identifier	D_PROCFAMILY		3622059	0					
ANR	3622105	Argument	"""Unable to read cgroup %s for deletion (ProcFamily %u): %u %s\\n"""		3622059	1					
ANR	3622106	PrimaryExpression	"""Unable to read cgroup %s for deletion (ProcFamily %u): %u %s\\n"""		3622059	0					
ANR	3622107	Argument	cg_string		3622059	2					
ANR	3622108	Identifier	cg_string		3622059	0					
ANR	3622109	Argument	m_root_pid		3622059	3					
ANR	3622110	Identifier	m_root_pid		3622059	0					
ANR	3622111	Argument	err		3622059	4					
ANR	3622112	Identifier	err		3622059	0					
ANR	3622113	Argument	cgroup_strerror ( err )		3622059	5					
ANR	3622114	CallExpression	cgroup_strerror ( err )		3622059	0					
ANR	3622115	Callee	cgroup_strerror		3622059	0					
ANR	3622116	Identifier	cgroup_strerror		3622059	0					
ANR	3622117	ArgumentList	err		3622059	1					
ANR	3622118	Argument	err		3622059	0					
ANR	3622119	Identifier	err		3622059	0					
ANR	3622120	ElseStatement	else		3622059	0					
ANR	3622121	IfStatement	"if ( ( err = cgroup_delete_cgroup ( dcg , CGFLAG_DELETE_RECURSIVE | CGFLAG_DELETE_IGNORE_MIGRATION ) ) )"		3622059	0					
ANR	3622122	Condition	"err = cgroup_delete_cgroup ( dcg , CGFLAG_DELETE_RECURSIVE | CGFLAG_DELETE_IGNORE_MIGRATION )"	126:10:3415:3505	3622059	0	True				
ANR	3622123	AssignmentExpression	"err = cgroup_delete_cgroup ( dcg , CGFLAG_DELETE_RECURSIVE | CGFLAG_DELETE_IGNORE_MIGRATION )"		3622059	0		=			
ANR	3622124	Identifier	err		3622059	0					
ANR	3622125	CallExpression	"cgroup_delete_cgroup ( dcg , CGFLAG_DELETE_RECURSIVE | CGFLAG_DELETE_IGNORE_MIGRATION )"		3622059	1					
ANR	3622126	Callee	cgroup_delete_cgroup		3622059	0					
ANR	3622127	Identifier	cgroup_delete_cgroup		3622059	0					
ANR	3622128	ArgumentList	dcg		3622059	1					
ANR	3622129	Argument	dcg		3622059	0					
ANR	3622130	Identifier	dcg		3622059	0					
ANR	3622131	Argument	CGFLAG_DELETE_RECURSIVE | CGFLAG_DELETE_IGNORE_MIGRATION		3622059	1					
ANR	3622132	InclusiveOrExpression	CGFLAG_DELETE_RECURSIVE | CGFLAG_DELETE_IGNORE_MIGRATION		3622059	0		|			
ANR	3622133	Identifier	CGFLAG_DELETE_RECURSIVE		3622059	0					
ANR	3622134	Identifier	CGFLAG_DELETE_IGNORE_MIGRATION		3622059	1					
ANR	3622135	CompoundStatement		11:103:385:385	3622059	1					
ANR	3622136	ExpressionStatement	"dprintf ( D_ALWAYS , ""Unable to completely remove cgroup %s for ProcFamily %u. %u %s\\n"" , cg_string , m_root_pid , err , cgroup_strerror ( err ) )"	127:2:3512:3657	3622059	0	True				
ANR	3622137	CallExpression	"dprintf ( D_ALWAYS , ""Unable to completely remove cgroup %s for ProcFamily %u. %u %s\\n"" , cg_string , m_root_pid , err , cgroup_strerror ( err ) )"		3622059	0					
ANR	3622138	Callee	dprintf		3622059	0					
ANR	3622139	Identifier	dprintf		3622059	0					
ANR	3622140	ArgumentList	D_ALWAYS		3622059	1					
ANR	3622141	Argument	D_ALWAYS		3622059	0					
ANR	3622142	Identifier	D_ALWAYS		3622059	0					
ANR	3622143	Argument	"""Unable to completely remove cgroup %s for ProcFamily %u. %u %s\\n"""		3622059	1					
ANR	3622144	PrimaryExpression	"""Unable to completely remove cgroup %s for ProcFamily %u. %u %s\\n"""		3622059	0					
ANR	3622145	Argument	cg_string		3622059	2					
ANR	3622146	Identifier	cg_string		3622059	0					
ANR	3622147	Argument	m_root_pid		3622059	3					
ANR	3622148	Identifier	m_root_pid		3622059	0					
ANR	3622149	Argument	err		3622059	4					
ANR	3622150	Identifier	err		3622059	0					
ANR	3622151	Argument	cgroup_strerror ( err )		3622059	5					
ANR	3622152	CallExpression	cgroup_strerror ( err )		3622059	0					
ANR	3622153	Callee	cgroup_strerror		3622059	0					
ANR	3622154	Identifier	cgroup_strerror		3622059	0					
ANR	3622155	ArgumentList	err		3622059	1					
ANR	3622156	Argument	err		3622059	0					
ANR	3622157	Identifier	err		3622059	0					
ANR	3622158	ElseStatement	else		3622059	0					
ANR	3622159	CompoundStatement		16:8:544:544	3622059	0					
ANR	3622160	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""Deleted cgroup %s for ProcFamily %u\\n"" , cg_string , m_root_pid )"	132:2:3671:3762	3622059	0	True				
ANR	3622161	CallExpression	"dprintf ( D_PROCFAMILY , ""Deleted cgroup %s for ProcFamily %u\\n"" , cg_string , m_root_pid )"		3622059	0					
ANR	3622162	Callee	dprintf		3622059	0					
ANR	3622163	Identifier	dprintf		3622059	0					
ANR	3622164	ArgumentList	D_PROCFAMILY		3622059	1					
ANR	3622165	Argument	D_PROCFAMILY		3622059	0					
ANR	3622166	Identifier	D_PROCFAMILY		3622059	0					
ANR	3622167	Argument	"""Deleted cgroup %s for ProcFamily %u\\n"""		3622059	1					
ANR	3622168	PrimaryExpression	"""Deleted cgroup %s for ProcFamily %u\\n"""		3622059	0					
ANR	3622169	Argument	cg_string		3622059	2					
ANR	3622170	Identifier	cg_string		3622059	0					
ANR	3622171	Argument	m_root_pid		3622059	3					
ANR	3622172	Identifier	m_root_pid		3622059	0					
ANR	3622173	ExpressionStatement	cgroup_free ( & dcg )	136:1:3768:3785	3622059	4	True				
ANR	3622174	CallExpression	cgroup_free ( & dcg )		3622059	0					
ANR	3622175	Callee	cgroup_free		3622059	0					
ANR	3622176	Identifier	cgroup_free		3622059	0					
ANR	3622177	ArgumentList	& dcg		3622059	1					
ANR	3622178	Argument	& dcg		3622059	0					
ANR	3622179	UnaryOperationExpression	& dcg		3622059	0					
ANR	3622180	UnaryOperator	&		3622059	0					
ANR	3622181	Identifier	dcg		3622059	1					
ANR	3622182	ReturnType	void		3622059	1					
ANR	3622183	Identifier	ProcFamily :: delete_cgroup		3622059	2					
ANR	3622184	ParameterList	const char * cg_string		3622059	3					
ANR	3622185	Parameter	const char * cg_string	115:26:3098:3119	3622059	0	True				
ANR	3622186	ParameterType	const char *		3622059	0					
ANR	3622187	Identifier	cg_string		3622059	1					
ANR	3622188	CFGEntryNode	ENTRY		3622059		True				
ANR	3622189	CFGExitNode	EXIT		3622059		True				
ANR	3622190	Symbol	NULL		3622059						
ANR	3622191	Symbol	D_PROCFAMILY		3622059						
ANR	3622192	Symbol	err		3622059						
ANR	3622193	Symbol	cgroup_get_cgroup		3622059						
ANR	3622194	Symbol	cgroup_delete_cgroup		3622059						
ANR	3622195	Symbol	D_ALWAYS		3622059						
ANR	3622196	Symbol	dcg		3622059						
ANR	3622197	Symbol	& dcg		3622059						
ANR	3622198	Symbol	cgroup_new_cgroup		3622059						
ANR	3622199	Symbol	CGFLAG_DELETE_IGNORE_MIGRATION		3622059						
ANR	3622200	Symbol	CGFLAG_DELETE_RECURSIVE		3622059						
ANR	3622201	Symbol	cgroup_strerror		3622059						
ANR	3622202	Symbol	cg_string		3622059						
ANR	3622203	Symbol	m_cgroup_string		3622059						
ANR	3622204	Symbol	m_root_pid		3622059						
ANR	3622205	Function	ProcFamily :: migrate_to_cgroup	139:0:3790:7804							
ANR	3622206	FunctionDef	ProcFamily :: migrate_to_cgroup (pid_t pid)		3622205	0					
ANR	3622207	CompoundStatement		141:0:3835:7804	3622205	0					
ANR	3622208	IdentifierDeclStatement	int err ;	150:1:4213:4220	3622205	0	True				
ANR	3622209	IdentifierDecl	err		3622205	0					
ANR	3622210	IdentifierDeclType	int		3622205	0					
ANR	3622211	Identifier	err		3622205	1					
ANR	3622212	IdentifierDeclStatement	u_int64_t orig_migrate ;	151:1:4223:4245	3622205	1	True				
ANR	3622213	IdentifierDecl	orig_migrate		3622205	0					
ANR	3622214	IdentifierDeclType	u_int64_t		3622205	0					
ANR	3622215	Identifier	orig_migrate		3622205	1					
ANR	3622216	IdentifierDeclStatement	bool changed_orig = false ;	152:1:4248:4273	3622205	2	True				
ANR	3622217	IdentifierDecl	changed_orig = false		3622205	0					
ANR	3622218	IdentifierDeclType	bool		3622205	0					
ANR	3622219	Identifier	changed_orig		3622205	1					
ANR	3622220	AssignmentExpression	changed_orig = false		3622205	2		=			
ANR	3622221	Identifier	false		3622205	0					
ANR	3622222	Identifier	false		3622205	1					
ANR	3622223	IdentifierDeclStatement	char * orig_cgroup_string = NULL ;	153:1:4276:4308	3622205	3	True				
ANR	3622224	IdentifierDecl	* orig_cgroup_string = NULL		3622205	0					
ANR	3622225	IdentifierDeclType	char *		3622205	0					
ANR	3622226	Identifier	orig_cgroup_string		3622205	1					
ANR	3622227	AssignmentExpression	* orig_cgroup_string = NULL		3622205	2		=			
ANR	3622228	Identifier	NULL		3622205	0					
ANR	3622229	Identifier	NULL		3622205	1					
ANR	3622230	IdentifierDeclStatement	struct cgroup * orig_cgroup ;	154:1:4311:4338	3622205	4	True				
ANR	3622231	IdentifierDecl	* orig_cgroup		3622205	0					
ANR	3622232	IdentifierDeclType	struct cgroup *		3622205	0					
ANR	3622233	Identifier	orig_cgroup		3622205	1					
ANR	3622234	IdentifierDeclStatement	struct cgroup_controller * memory_controller ;	155:1:4341:4385	3622205	5	True				
ANR	3622235	IdentifierDecl	* memory_controller		3622205	0					
ANR	3622236	IdentifierDeclType	struct cgroup_controller *		3622205	0					
ANR	3622237	Identifier	memory_controller		3622205	1					
ANR	3622238	IfStatement	"if ( m_cgroup_memory_mounted && ( err = cgroup_get_current_controller_path ( pid , MEMORY_CONTROLLER , & orig_cgroup_string ) ) )"		3622205	6					
ANR	3622239	Condition	"m_cgroup_memory_mounted && ( err = cgroup_get_current_controller_path ( pid , MEMORY_CONTROLLER , & orig_cgroup_string ) )"	156:5:4392:4505	3622205	0	True				
ANR	3622240	AndExpression	"m_cgroup_memory_mounted && ( err = cgroup_get_current_controller_path ( pid , MEMORY_CONTROLLER , & orig_cgroup_string ) )"		3622205	0		&&			
ANR	3622241	Identifier	m_cgroup_memory_mounted		3622205	0					
ANR	3622242	AssignmentExpression	"err = cgroup_get_current_controller_path ( pid , MEMORY_CONTROLLER , & orig_cgroup_string )"		3622205	1		=			
ANR	3622243	Identifier	err		3622205	0					
ANR	3622244	CallExpression	"cgroup_get_current_controller_path ( pid , MEMORY_CONTROLLER , & orig_cgroup_string )"		3622205	1					
ANR	3622245	Callee	cgroup_get_current_controller_path		3622205	0					
ANR	3622246	Identifier	cgroup_get_current_controller_path		3622205	0					
ANR	3622247	ArgumentList	pid		3622205	1					
ANR	3622248	Argument	pid		3622205	0					
ANR	3622249	Identifier	pid		3622205	0					
ANR	3622250	Argument	MEMORY_CONTROLLER		3622205	1					
ANR	3622251	Identifier	MEMORY_CONTROLLER		3622205	0					
ANR	3622252	Argument	& orig_cgroup_string		3622205	2					
ANR	3622253	UnaryOperationExpression	& orig_cgroup_string		3622205	0					
ANR	3622254	UnaryOperator	&		3622205	0					
ANR	3622255	Identifier	orig_cgroup_string		3622205	1					
ANR	3622256	CompoundStatement		16:121:672:672	3622205	1					
ANR	3622257	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""Unable to determine current memory cgroup for PID %u (ProcFamily %u): %u %s\\n"" , pid , m_root_pid , err , cgroup_strerror ( err ) )"	157:2:4512:4664	3622205	0	True				
ANR	3622258	CallExpression	"dprintf ( D_PROCFAMILY , ""Unable to determine current memory cgroup for PID %u (ProcFamily %u): %u %s\\n"" , pid , m_root_pid , err , cgroup_strerror ( err ) )"		3622205	0					
ANR	3622259	Callee	dprintf		3622205	0					
ANR	3622260	Identifier	dprintf		3622205	0					
ANR	3622261	ArgumentList	D_PROCFAMILY		3622205	1					
ANR	3622262	Argument	D_PROCFAMILY		3622205	0					
ANR	3622263	Identifier	D_PROCFAMILY		3622205	0					
ANR	3622264	Argument	"""Unable to determine current memory cgroup for PID %u (ProcFamily %u): %u %s\\n"""		3622205	1					
ANR	3622265	PrimaryExpression	"""Unable to determine current memory cgroup for PID %u (ProcFamily %u): %u %s\\n"""		3622205	0					
ANR	3622266	Argument	pid		3622205	2					
ANR	3622267	Identifier	pid		3622205	0					
ANR	3622268	Argument	m_root_pid		3622205	3					
ANR	3622269	Identifier	m_root_pid		3622205	0					
ANR	3622270	Argument	err		3622205	4					
ANR	3622271	Identifier	err		3622205	0					
ANR	3622272	Argument	cgroup_strerror ( err )		3622205	5					
ANR	3622273	CallExpression	cgroup_strerror ( err )		3622205	0					
ANR	3622274	Callee	cgroup_strerror		3622205	0					
ANR	3622275	Identifier	cgroup_strerror		3622205	0					
ANR	3622276	ArgumentList	err		3622205	1					
ANR	3622277	Argument	err		3622205	0					
ANR	3622278	Identifier	err		3622205	0					
ANR	3622279	ReturnStatement	return 1 ;	160:2:4668:4676	3622205	1	True				
ANR	3622280	PrimaryExpression	1		3622205	0					
ANR	3622281	IfStatement	"if ( m_cgroup_memory_mounted && ( orig_cgroup_string != NULL ) && ( strcmp ( m_cgroup_string , orig_cgroup_string ) ) )"		3622205	7					
ANR	3622282	Condition	"m_cgroup_memory_mounted && ( orig_cgroup_string != NULL ) && ( strcmp ( m_cgroup_string , orig_cgroup_string ) )"	164:5:4844:4947	3622205	0	True				
ANR	3622283	AndExpression	"m_cgroup_memory_mounted && ( orig_cgroup_string != NULL ) && ( strcmp ( m_cgroup_string , orig_cgroup_string ) )"		3622205	0		&&			
ANR	3622284	Identifier	m_cgroup_memory_mounted		3622205	0					
ANR	3622285	AndExpression	"( orig_cgroup_string != NULL ) && ( strcmp ( m_cgroup_string , orig_cgroup_string ) )"		3622205	1		&&			
ANR	3622286	EqualityExpression	orig_cgroup_string != NULL		3622205	0		!=			
ANR	3622287	Identifier	orig_cgroup_string		3622205	0					
ANR	3622288	Identifier	NULL		3622205	1					
ANR	3622289	CallExpression	"strcmp ( m_cgroup_string , orig_cgroup_string )"		3622205	1					
ANR	3622290	Callee	strcmp		3622205	0					
ANR	3622291	Identifier	strcmp		3622205	0					
ANR	3622292	ArgumentList	m_cgroup_string		3622205	1					
ANR	3622293	Argument	m_cgroup_string		3622205	0					
ANR	3622294	Identifier	m_cgroup_string		3622205	0					
ANR	3622295	Argument	orig_cgroup_string		3622205	1					
ANR	3622296	Identifier	orig_cgroup_string		3622205	0					
ANR	3622297	CompoundStatement		24:111:1114:1114	3622205	1					
ANR	3622298	ExpressionStatement	orig_cgroup = cgroup_new_cgroup ( orig_cgroup_string )	168:2:5126:5177	3622205	0	True				
ANR	3622299	AssignmentExpression	orig_cgroup = cgroup_new_cgroup ( orig_cgroup_string )		3622205	0		=			
ANR	3622300	Identifier	orig_cgroup		3622205	0					
ANR	3622301	CallExpression	cgroup_new_cgroup ( orig_cgroup_string )		3622205	1					
ANR	3622302	Callee	cgroup_new_cgroup		3622205	0					
ANR	3622303	Identifier	cgroup_new_cgroup		3622205	0					
ANR	3622304	ArgumentList	orig_cgroup_string		3622205	1					
ANR	3622305	Argument	orig_cgroup_string		3622205	0					
ANR	3622306	Identifier	orig_cgroup_string		3622205	0					
ANR	3622307	ExpressionStatement	ASSERT ( orig_cgroup != NULL )	169:2:5181:5209	3622205	1	True				
ANR	3622308	CallExpression	ASSERT ( orig_cgroup != NULL )		3622205	0					
ANR	3622309	Callee	ASSERT		3622205	0					
ANR	3622310	Identifier	ASSERT		3622205	0					
ANR	3622311	ArgumentList	orig_cgroup != NULL		3622205	1					
ANR	3622312	Argument	orig_cgroup != NULL		3622205	0					
ANR	3622313	EqualityExpression	orig_cgroup != NULL		3622205	0		!=			
ANR	3622314	Identifier	orig_cgroup		3622205	0					
ANR	3622315	Identifier	NULL		3622205	1					
ANR	3622316	IfStatement	if ( ( err = cgroup_get_cgroup ( orig_cgroup ) ) )		3622205	2					
ANR	3622317	Condition	err = cgroup_get_cgroup ( orig_cgroup )	170:6:5217:5254	3622205	0	True				
ANR	3622318	AssignmentExpression	err = cgroup_get_cgroup ( orig_cgroup )		3622205	0		=			
ANR	3622319	Identifier	err		3622205	0					
ANR	3622320	CallExpression	cgroup_get_cgroup ( orig_cgroup )		3622205	1					
ANR	3622321	Callee	cgroup_get_cgroup		3622205	0					
ANR	3622322	Identifier	cgroup_get_cgroup		3622205	0					
ANR	3622323	ArgumentList	orig_cgroup		3622205	1					
ANR	3622324	Argument	orig_cgroup		3622205	0					
ANR	3622325	Identifier	orig_cgroup		3622205	0					
ANR	3622326	CompoundStatement		30:46:1421:1421	3622205	1					
ANR	3622327	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""Unable to read original cgroup %s (ProcFamily %u): %u %s\\n"" , orig_cgroup_string , m_root_pid , err , cgroup_strerror ( err ) )"	171:3:5262:5412	3622205	0	True				
ANR	3622328	CallExpression	"dprintf ( D_PROCFAMILY , ""Unable to read original cgroup %s (ProcFamily %u): %u %s\\n"" , orig_cgroup_string , m_root_pid , err , cgroup_strerror ( err ) )"		3622205	0					
ANR	3622329	Callee	dprintf		3622205	0					
ANR	3622330	Identifier	dprintf		3622205	0					
ANR	3622331	ArgumentList	D_PROCFAMILY		3622205	1					
ANR	3622332	Argument	D_PROCFAMILY		3622205	0					
ANR	3622333	Identifier	D_PROCFAMILY		3622205	0					
ANR	3622334	Argument	"""Unable to read original cgroup %s (ProcFamily %u): %u %s\\n"""		3622205	1					
ANR	3622335	PrimaryExpression	"""Unable to read original cgroup %s (ProcFamily %u): %u %s\\n"""		3622205	0					
ANR	3622336	Argument	orig_cgroup_string		3622205	2					
ANR	3622337	Identifier	orig_cgroup_string		3622205	0					
ANR	3622338	Argument	m_root_pid		3622205	3					
ANR	3622339	Identifier	m_root_pid		3622205	0					
ANR	3622340	Argument	err		3622205	4					
ANR	3622341	Identifier	err		3622205	0					
ANR	3622342	Argument	cgroup_strerror ( err )		3622205	5					
ANR	3622343	CallExpression	cgroup_strerror ( err )		3622205	0					
ANR	3622344	Callee	cgroup_strerror		3622205	0					
ANR	3622345	Identifier	cgroup_strerror		3622205	0					
ANR	3622346	ArgumentList	err		3622205	1					
ANR	3622347	Argument	err		3622205	0					
ANR	3622348	Identifier	err		3622205	0					
ANR	3622349	GotoStatement	goto after_migrate ;	174:3:5417:5435	3622205	1	True				
ANR	3622350	Identifier	after_migrate		3622205	0					
ANR	3622351	IfStatement	"if ( ( memory_controller = cgroup_get_controller ( orig_cgroup , MEMORY_CONTROLLER ) ) == NULL )"		3622205	3					
ANR	3622352	Condition	"( memory_controller = cgroup_get_controller ( orig_cgroup , MEMORY_CONTROLLER ) ) == NULL"	176:6:5447:5529	3622205	0	True				
ANR	3622353	EqualityExpression	"( memory_controller = cgroup_get_controller ( orig_cgroup , MEMORY_CONTROLLER ) ) == NULL"		3622205	0		==			
ANR	3622354	AssignmentExpression	"memory_controller = cgroup_get_controller ( orig_cgroup , MEMORY_CONTROLLER )"		3622205	0		=			
ANR	3622355	Identifier	memory_controller		3622205	0					
ANR	3622356	CallExpression	"cgroup_get_controller ( orig_cgroup , MEMORY_CONTROLLER )"		3622205	1					
ANR	3622357	Callee	cgroup_get_controller		3622205	0					
ANR	3622358	Identifier	cgroup_get_controller		3622205	0					
ANR	3622359	ArgumentList	orig_cgroup		3622205	1					
ANR	3622360	Argument	orig_cgroup		3622205	0					
ANR	3622361	Identifier	orig_cgroup		3622205	0					
ANR	3622362	Argument	MEMORY_CONTROLLER		3622205	1					
ANR	3622363	Identifier	MEMORY_CONTROLLER		3622205	0					
ANR	3622364	Identifier	NULL		3622205	1					
ANR	3622365	CompoundStatement		36:91:1696:1696	3622205	1					
ANR	3622366	ExpressionStatement	cgroup_free ( & orig_cgroup )	177:3:5537:5562	3622205	0	True				
ANR	3622367	CallExpression	cgroup_free ( & orig_cgroup )		3622205	0					
ANR	3622368	Callee	cgroup_free		3622205	0					
ANR	3622369	Identifier	cgroup_free		3622205	0					
ANR	3622370	ArgumentList	& orig_cgroup		3622205	1					
ANR	3622371	Argument	& orig_cgroup		3622205	0					
ANR	3622372	UnaryOperationExpression	& orig_cgroup		3622205	0					
ANR	3622373	UnaryOperator	&		3622205	0					
ANR	3622374	Identifier	orig_cgroup		3622205	1					
ANR	3622375	GotoStatement	goto after_migrate ;	178:3:5567:5585	3622205	1	True				
ANR	3622376	Identifier	after_migrate		3622205	0					
ANR	3622377	IfStatement	"if ( ( err = cgroup_get_value_uint64 ( memory_controller , ""memory.move_charge_at_immigrate"" , & orig_migrate ) ) )"		3622205	4					
ANR	3622378	Condition	"err = cgroup_get_value_uint64 ( memory_controller , ""memory.move_charge_at_immigrate"" , & orig_migrate )"	180:6:5597:5696	3622205	0	True				
ANR	3622379	AssignmentExpression	"err = cgroup_get_value_uint64 ( memory_controller , ""memory.move_charge_at_immigrate"" , & orig_migrate )"		3622205	0		=			
ANR	3622380	Identifier	err		3622205	0					
ANR	3622381	CallExpression	"cgroup_get_value_uint64 ( memory_controller , ""memory.move_charge_at_immigrate"" , & orig_migrate )"		3622205	1					
ANR	3622382	Callee	cgroup_get_value_uint64		3622205	0					
ANR	3622383	Identifier	cgroup_get_value_uint64		3622205	0					
ANR	3622384	ArgumentList	memory_controller		3622205	1					
ANR	3622385	Argument	memory_controller		3622205	0					
ANR	3622386	Identifier	memory_controller		3622205	0					
ANR	3622387	Argument	"""memory.move_charge_at_immigrate"""		3622205	1					
ANR	3622388	PrimaryExpression	"""memory.move_charge_at_immigrate"""		3622205	0					
ANR	3622389	Argument	& orig_migrate		3622205	2					
ANR	3622390	UnaryOperationExpression	& orig_migrate		3622205	0					
ANR	3622391	UnaryOperator	&		3622205	0					
ANR	3622392	Identifier	orig_migrate		3622205	1					
ANR	3622393	CompoundStatement		40:108:1863:1863	3622205	1					
ANR	3622394	IfStatement	if ( err == ECGROUPVALUENOTEXIST )		3622205	0					
ANR	3622395	Condition	err == ECGROUPVALUENOTEXIST	181:7:5708:5734	3622205	0	True				
ANR	3622396	EqualityExpression	err == ECGROUPVALUENOTEXIST		3622205	0		==			
ANR	3622397	Identifier	err		3622205	0					
ANR	3622398	Identifier	ECGROUPVALUENOTEXIST		3622205	1					
ANR	3622399	CompoundStatement		41:36:1901:1901	3622205	1					
ANR	3622400	Statement	dprintf	183:4:5835:5841	3622205	0	True				
ANR	3622401	Statement	(	183:11:5842:5842	3622205	1	True				
ANR	3622402	Statement	D_PROCFAMILY	183:12:5843:5854	3622205	2	True				
ANR	3622403	Statement	","	183:24:5855:5855	3622205	3	True				
ANR	3622404	Statement	"""This kernel does not support memory usage migration; cgroup %s memory statistics"""	184:5:5862:5943	3622205	4	True				
ANR	3622405	Statement	""" will be slightly incorrect (ProcFamily %u)\\n"""	185:5:5950:5996	3622205	5	True				
ANR	3622406	Statement	","	185:52:5997:5997	3622205	6	True				
ANR	3622407	Statement	m_cgroup_string	186:5:6004:6018	3622205	7	True				
ANR	3622408	Statement	","	186:20:6019:6019	3622205	8	True				
ANR	3622409	Statement	m_root_pid	186:22:6021:6030	3622205	9	True				
ANR	3622410	Statement	)	186:32:6031:6031	3622205	10	True				
ANR	3622411	ExpressionStatement		186:33:6032:6032	3622205	11	True				
ANR	3622412	ElseStatement	else		3622205	0					
ANR	3622413	CompoundStatement		47:10:2208:2208	3622205	0					
ANR	3622414	Statement	dprintf	188:4:6050:6056	3622205	0	True				
ANR	3622415	Statement	(	188:11:6057:6057	3622205	1	True				
ANR	3622416	Statement	D_PROCFAMILY	188:12:6058:6069	3622205	2	True				
ANR	3622417	Statement	","	188:24:6070:6070	3622205	3	True				
ANR	3622418	Statement	"""Unable to read cgroup %s memory controller settings for """	189:5:6077:6134	3622205	4	True				
ANR	3622419	Statement	"""migration (ProcFamily %u): %u %s\\n"""	190:5:6141:6176	3622205	5	True				
ANR	3622420	Statement	","	190:41:6177:6177	3622205	6	True				
ANR	3622421	Statement	orig_cgroup_string	191:5:6184:6201	3622205	7	True				
ANR	3622422	Statement	","	191:23:6202:6202	3622205	8	True				
ANR	3622423	Statement	m_root_pid	191:25:6204:6213	3622205	9	True				
ANR	3622424	Statement	","	191:35:6214:6214	3622205	10	True				
ANR	3622425	Statement	err	191:37:6216:6218	3622205	11	True				
ANR	3622426	Statement	","	191:40:6219:6219	3622205	12	True				
ANR	3622427	Statement	cgroup_strerror	191:42:6221:6235	3622205	13	True				
ANR	3622428	Statement	(	191:57:6236:6236	3622205	14	True				
ANR	3622429	Statement	err	191:58:6237:6239	3622205	15	True				
ANR	3622430	Statement	)	191:61:6240:6240	3622205	16	True				
ANR	3622431	Statement	)	191:62:6241:6241	3622205	17	True				
ANR	3622432	ExpressionStatement		191:63:6242:6242	3622205	18	True				
ANR	3622433	ExpressionStatement	cgroup_free ( & orig_cgroup )	193:3:6252:6277	3622205	1	True				
ANR	3622434	CallExpression	cgroup_free ( & orig_cgroup )		3622205	0					
ANR	3622435	Callee	cgroup_free		3622205	0					
ANR	3622436	Identifier	cgroup_free		3622205	0					
ANR	3622437	ArgumentList	& orig_cgroup		3622205	1					
ANR	3622438	Argument	& orig_cgroup		3622205	0					
ANR	3622439	UnaryOperationExpression	& orig_cgroup		3622205	0					
ANR	3622440	UnaryOperator	&		3622205	0					
ANR	3622441	Identifier	orig_cgroup		3622205	1					
ANR	3622442	GotoStatement	goto after_migrate ;	194:3:6282:6300	3622205	2	True				
ANR	3622443	Identifier	after_migrate		3622205	0					
ANR	3622444	IfStatement	if ( orig_migrate != 3 )		3622205	5					
ANR	3622445	Condition	orig_migrate != 3	196:6:6312:6328	3622205	0	True				
ANR	3622446	EqualityExpression	orig_migrate != 3		3622205	0		!=			
ANR	3622447	Identifier	orig_migrate		3622205	0					
ANR	3622448	PrimaryExpression	3		3622205	1					
ANR	3622449	CompoundStatement		56:25:2495:2495	3622205	1					
ANR	3622450	ExpressionStatement	orig_cgroup = cgroup_new_cgroup ( orig_cgroup_string )	197:3:6336:6387	3622205	0	True				
ANR	3622451	AssignmentExpression	orig_cgroup = cgroup_new_cgroup ( orig_cgroup_string )		3622205	0		=			
ANR	3622452	Identifier	orig_cgroup		3622205	0					
ANR	3622453	CallExpression	cgroup_new_cgroup ( orig_cgroup_string )		3622205	1					
ANR	3622454	Callee	cgroup_new_cgroup		3622205	0					
ANR	3622455	Identifier	cgroup_new_cgroup		3622205	0					
ANR	3622456	ArgumentList	orig_cgroup_string		3622205	1					
ANR	3622457	Argument	orig_cgroup_string		3622205	0					
ANR	3622458	Identifier	orig_cgroup_string		3622205	0					
ANR	3622459	ExpressionStatement	"memory_controller = cgroup_add_controller ( orig_cgroup , MEMORY_CONTROLLER )"	198:3:6392:6465	3622205	1	True				
ANR	3622460	AssignmentExpression	"memory_controller = cgroup_add_controller ( orig_cgroup , MEMORY_CONTROLLER )"		3622205	0		=			
ANR	3622461	Identifier	memory_controller		3622205	0					
ANR	3622462	CallExpression	"cgroup_add_controller ( orig_cgroup , MEMORY_CONTROLLER )"		3622205	1					
ANR	3622463	Callee	cgroup_add_controller		3622205	0					
ANR	3622464	Identifier	cgroup_add_controller		3622205	0					
ANR	3622465	ArgumentList	orig_cgroup		3622205	1					
ANR	3622466	Argument	orig_cgroup		3622205	0					
ANR	3622467	Identifier	orig_cgroup		3622205	0					
ANR	3622468	Argument	MEMORY_CONTROLLER		3622205	1					
ANR	3622469	Identifier	MEMORY_CONTROLLER		3622205	0					
ANR	3622470	ExpressionStatement	ASSERT ( memory_controller != NULL )	199:3:6470:6504	3622205	2	True				
ANR	3622471	CallExpression	ASSERT ( memory_controller != NULL )		3622205	0					
ANR	3622472	Callee	ASSERT		3622205	0					
ANR	3622473	Identifier	ASSERT		3622205	0					
ANR	3622474	ArgumentList	memory_controller != NULL		3622205	1					
ANR	3622475	Argument	memory_controller != NULL		3622205	0					
ANR	3622476	EqualityExpression	memory_controller != NULL		3622205	0		!=			
ANR	3622477	Identifier	memory_controller		3622205	0					
ANR	3622478	Identifier	NULL		3622205	1					
ANR	3622479	ExpressionStatement	"cgroup_add_value_uint64 ( memory_controller , ""memory.move_charge_at_immigrate"" , 3 )"	200:3:6549:6629	3622205	3	True				
ANR	3622480	CallExpression	"cgroup_add_value_uint64 ( memory_controller , ""memory.move_charge_at_immigrate"" , 3 )"		3622205	0					
ANR	3622481	Callee	cgroup_add_value_uint64		3622205	0					
ANR	3622482	Identifier	cgroup_add_value_uint64		3622205	0					
ANR	3622483	ArgumentList	memory_controller		3622205	1					
ANR	3622484	Argument	memory_controller		3622205	0					
ANR	3622485	Identifier	memory_controller		3622205	0					
ANR	3622486	Argument	"""memory.move_charge_at_immigrate"""		3622205	1					
ANR	3622487	PrimaryExpression	"""memory.move_charge_at_immigrate"""		3622205	0					
ANR	3622488	Argument	3		3622205	2					
ANR	3622489	PrimaryExpression	3		3622205	0					
ANR	3622490	IfStatement	if ( ( err = cgroup_modify_cgroup ( orig_cgroup ) ) )		3622205	4					
ANR	3622491	Condition	err = cgroup_modify_cgroup ( orig_cgroup )	201:7:6638:6678	3622205	0	True				
ANR	3622492	AssignmentExpression	err = cgroup_modify_cgroup ( orig_cgroup )		3622205	0		=			
ANR	3622493	Identifier	err		3622205	0					
ANR	3622494	CallExpression	cgroup_modify_cgroup ( orig_cgroup )		3622205	1					
ANR	3622495	Callee	cgroup_modify_cgroup		3622205	0					
ANR	3622496	Identifier	cgroup_modify_cgroup		3622205	0					
ANR	3622497	ArgumentList	orig_cgroup		3622205	1					
ANR	3622498	Argument	orig_cgroup		3622205	0					
ANR	3622499	Identifier	orig_cgroup		3622205	0					
ANR	3622500	CompoundStatement		61:50:2845:2845	3622205	1					
ANR	3622501	Statement	dprintf	203:4:6725:6731	3622205	0	True				
ANR	3622502	Statement	(	203:11:6732:6732	3622205	1	True				
ANR	3622503	Statement	D_ALWAYS	203:12:6733:6740	3622205	2	True				
ANR	3622504	Statement	","	203:20:6741:6741	3622205	3	True				
ANR	3622505	Statement	"""Unable to change cgroup %s memory controller settings for migration. """	204:5:6748:6818	3622205	4	True				
ANR	3622506	Statement	"""Some memory accounting will be inaccurate (ProcFamily %u): %u %s\\n"""	205:5:6825:6892	3622205	5	True				
ANR	3622507	Statement	","	205:73:6893:6893	3622205	6	True				
ANR	3622508	Statement	orig_cgroup_string	206:5:6900:6917	3622205	7	True				
ANR	3622509	Statement	","	206:23:6918:6918	3622205	8	True				
ANR	3622510	Statement	m_root_pid	206:25:6920:6929	3622205	9	True				
ANR	3622511	Statement	","	206:35:6930:6930	3622205	10	True				
ANR	3622512	Statement	err	206:37:6932:6934	3622205	11	True				
ANR	3622513	Statement	","	206:40:6935:6935	3622205	12	True				
ANR	3622514	Statement	cgroup_strerror	206:42:6937:6951	3622205	13	True				
ANR	3622515	Statement	(	206:57:6952:6952	3622205	14	True				
ANR	3622516	Statement	err	206:58:6953:6955	3622205	15	True				
ANR	3622517	Statement	)	206:61:6956:6956	3622205	16	True				
ANR	3622518	Statement	)	206:62:6957:6957	3622205	17	True				
ANR	3622519	ExpressionStatement		206:63:6958:6958	3622205	18	True				
ANR	3622520	ElseStatement	else		3622205	0					
ANR	3622521	CompoundStatement		67:10:3134:3134	3622205	0					
ANR	3622522	ExpressionStatement	changed_orig = true	208:4:6976:6995	3622205	0	True				
ANR	3622523	AssignmentExpression	changed_orig = true		3622205	0		=			
ANR	3622524	Identifier	changed_orig		3622205	0					
ANR	3622525	Identifier	true		3622205	1					
ANR	3622526	ExpressionStatement	cgroup_free ( & orig_cgroup )	211:2:7008:7033	3622205	6	True				
ANR	3622527	CallExpression	cgroup_free ( & orig_cgroup )		3622205	0					
ANR	3622528	Callee	cgroup_free		3622205	0					
ANR	3622529	Identifier	cgroup_free		3622205	0					
ANR	3622530	ArgumentList	& orig_cgroup		3622205	1					
ANR	3622531	Argument	& orig_cgroup		3622205	0					
ANR	3622532	UnaryOperationExpression	& orig_cgroup		3622205	0					
ANR	3622533	UnaryOperator	&		3622205	0					
ANR	3622534	Identifier	orig_cgroup		3622205	1					
ANR	3622535	Label	after_migrate :	214:0:7039:7052	3622205	8	True				
ANR	3622536	Identifier	after_migrate		3622205	0					
ANR	3622537	ExpressionStatement	orig_cgroup = NULL	216:1:7056:7074	3622205	9	True				
ANR	3622538	AssignmentExpression	orig_cgroup = NULL		3622205	0		=			
ANR	3622539	Identifier	orig_cgroup		3622205	0					
ANR	3622540	Identifier	NULL		3622205	1					
ANR	3622541	Statement	ASSERT	217:1:7077:7082	3622205	10	True				
ANR	3622542	Statement	(	217:8:7084:7084	3622205	11	True				
ANR	3622543	Statement	m_cgroup_string	217:9:7085:7099	3622205	12	True				
ANR	3622544	Statement	!=	217:25:7101:7102	3622205	13	True				
ANR	3622545	Statement	NULL	217:28:7104:7107	3622205	14	True				
ANR	3622546	Statement	)	217:32:7108:7108	3622205	15	True				
ANR	3622547	ExpressionStatement	"err = cgroup_attach_task_pid ( m_cgroup , pid )"	218:1:7111:7154	3622205	16	True				
ANR	3622548	AssignmentExpression	"err = cgroup_attach_task_pid ( m_cgroup , pid )"		3622205	0		=			
ANR	3622549	Identifier	err		3622205	0					
ANR	3622550	CallExpression	"cgroup_attach_task_pid ( m_cgroup , pid )"		3622205	1					
ANR	3622551	Callee	cgroup_attach_task_pid		3622205	0					
ANR	3622552	Identifier	cgroup_attach_task_pid		3622205	0					
ANR	3622553	ArgumentList	m_cgroup		3622205	1					
ANR	3622554	Argument	m_cgroup		3622205	0					
ANR	3622555	Identifier	m_cgroup		3622205	0					
ANR	3622556	Argument	pid		3622205	1					
ANR	3622557	Identifier	pid		3622205	0					
ANR	3622558	IfStatement	if ( err )		3622205	17					
ANR	3622559	Condition	err	219:5:7161:7163	3622205	0	True				
ANR	3622560	Identifier	err		3622205	0					
ANR	3622561	CompoundStatement		79:10:3330:3330	3622205	1					
ANR	3622562	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""Cannot attach pid %u to cgroup %s for ProcFamily %u: %u %s\\n"" , pid , m_cgroup_string , m_root_pid , err , cgroup_strerror ( err ) )"	220:2:7170:7322	3622205	0	True				
ANR	3622563	CallExpression	"dprintf ( D_PROCFAMILY , ""Cannot attach pid %u to cgroup %s for ProcFamily %u: %u %s\\n"" , pid , m_cgroup_string , m_root_pid , err , cgroup_strerror ( err ) )"		3622205	0					
ANR	3622564	Callee	dprintf		3622205	0					
ANR	3622565	Identifier	dprintf		3622205	0					
ANR	3622566	ArgumentList	D_PROCFAMILY		3622205	1					
ANR	3622567	Argument	D_PROCFAMILY		3622205	0					
ANR	3622568	Identifier	D_PROCFAMILY		3622205	0					
ANR	3622569	Argument	"""Cannot attach pid %u to cgroup %s for ProcFamily %u: %u %s\\n"""		3622205	1					
ANR	3622570	PrimaryExpression	"""Cannot attach pid %u to cgroup %s for ProcFamily %u: %u %s\\n"""		3622205	0					
ANR	3622571	Argument	pid		3622205	2					
ANR	3622572	Identifier	pid		3622205	0					
ANR	3622573	Argument	m_cgroup_string		3622205	3					
ANR	3622574	Identifier	m_cgroup_string		3622205	0					
ANR	3622575	Argument	m_root_pid		3622205	4					
ANR	3622576	Identifier	m_root_pid		3622205	0					
ANR	3622577	Argument	err		3622205	5					
ANR	3622578	Identifier	err		3622205	0					
ANR	3622579	Argument	cgroup_strerror ( err )		3622205	6					
ANR	3622580	CallExpression	cgroup_strerror ( err )		3622205	0					
ANR	3622581	Callee	cgroup_strerror		3622205	0					
ANR	3622582	Identifier	cgroup_strerror		3622205	0					
ANR	3622583	ArgumentList	err		3622205	1					
ANR	3622584	Argument	err		3622205	0					
ANR	3622585	Identifier	err		3622205	0					
ANR	3622586	IfStatement	if ( changed_orig )		3622205	18					
ANR	3622587	Condition	changed_orig	225:5:7333:7344	3622205	0	True				
ANR	3622588	Identifier	changed_orig		3622205	0					
ANR	3622589	CompoundStatement		85:19:3511:3511	3622205	1					
ANR	3622590	IfStatement	if ( ( orig_cgroup = cgroup_new_cgroup ( orig_cgroup_string ) ) )		3622205	0					
ANR	3622591	Condition	orig_cgroup = cgroup_new_cgroup ( orig_cgroup_string )	226:6:7355:7407	3622205	0	True				
ANR	3622592	AssignmentExpression	orig_cgroup = cgroup_new_cgroup ( orig_cgroup_string )		3622205	0		=			
ANR	3622593	Identifier	orig_cgroup		3622205	0					
ANR	3622594	CallExpression	cgroup_new_cgroup ( orig_cgroup_string )		3622205	1					
ANR	3622595	Callee	cgroup_new_cgroup		3622205	0					
ANR	3622596	Identifier	cgroup_new_cgroup		3622205	0					
ANR	3622597	ArgumentList	orig_cgroup_string		3622205	1					
ANR	3622598	Argument	orig_cgroup_string		3622205	0					
ANR	3622599	Identifier	orig_cgroup_string		3622205	0					
ANR	3622600	CompoundStatement		86:61:3574:3574	3622205	1					
ANR	3622601	GotoStatement	goto after_restore ;	227:3:7415:7433	3622205	0	True				
ANR	3622602	Identifier	after_restore		3622205	0					
ANR	3622603	IfStatement	"if ( ( ( memory_controller = cgroup_add_controller ( orig_cgroup , MEMORY_CONTROLLER ) ) != NULL ) && ( ! cgroup_add_value_uint64 ( memory_controller , ""memory.move_charge_at_immigrate"" , orig_migrate ) ) )"		3622205	1					
ANR	3622604	Condition	"( ( memory_controller = cgroup_add_controller ( orig_cgroup , MEMORY_CONTROLLER ) ) != NULL ) && ( ! cgroup_add_value_uint64 ( memory_controller , ""memory.move_charge_at_immigrate"" , orig_migrate ) )"	229:6:7445:7630	3622205	0	True				
ANR	3622605	AndExpression	"( ( memory_controller = cgroup_add_controller ( orig_cgroup , MEMORY_CONTROLLER ) ) != NULL ) && ( ! cgroup_add_value_uint64 ( memory_controller , ""memory.move_charge_at_immigrate"" , orig_migrate ) )"		3622205	0		&&			
ANR	3622606	EqualityExpression	"( memory_controller = cgroup_add_controller ( orig_cgroup , MEMORY_CONTROLLER ) ) != NULL"		3622205	0		!=			
ANR	3622607	AssignmentExpression	"memory_controller = cgroup_add_controller ( orig_cgroup , MEMORY_CONTROLLER )"		3622205	0		=			
ANR	3622608	Identifier	memory_controller		3622205	0					
ANR	3622609	CallExpression	"cgroup_add_controller ( orig_cgroup , MEMORY_CONTROLLER )"		3622205	1					
ANR	3622610	Callee	cgroup_add_controller		3622205	0					
ANR	3622611	Identifier	cgroup_add_controller		3622205	0					
ANR	3622612	ArgumentList	orig_cgroup		3622205	1					
ANR	3622613	Argument	orig_cgroup		3622205	0					
ANR	3622614	Identifier	orig_cgroup		3622205	0					
ANR	3622615	Argument	MEMORY_CONTROLLER		3622205	1					
ANR	3622616	Identifier	MEMORY_CONTROLLER		3622205	0					
ANR	3622617	Identifier	NULL		3622205	1					
ANR	3622618	UnaryOperationExpression	"! cgroup_add_value_uint64 ( memory_controller , ""memory.move_charge_at_immigrate"" , orig_migrate )"		3622205	1					
ANR	3622619	UnaryOperator	!		3622205	0					
ANR	3622620	CallExpression	"cgroup_add_value_uint64 ( memory_controller , ""memory.move_charge_at_immigrate"" , orig_migrate )"		3622205	1					
ANR	3622621	Callee	cgroup_add_value_uint64		3622205	0					
ANR	3622622	Identifier	cgroup_add_value_uint64		3622205	0					
ANR	3622623	ArgumentList	memory_controller		3622205	1					
ANR	3622624	Argument	memory_controller		3622205	0					
ANR	3622625	Identifier	memory_controller		3622205	0					
ANR	3622626	Argument	"""memory.move_charge_at_immigrate"""		3622205	1					
ANR	3622627	PrimaryExpression	"""memory.move_charge_at_immigrate"""		3622205	0					
ANR	3622628	Argument	orig_migrate		3622205	2					
ANR	3622629	Identifier	orig_migrate		3622205	0					
ANR	3622630	CompoundStatement		90:99:3797:3797	3622205	1					
ANR	3622631	ExpressionStatement	cgroup_modify_cgroup ( orig_cgroup )	231:3:7638:7671	3622205	0	True				
ANR	3622632	CallExpression	cgroup_modify_cgroup ( orig_cgroup )		3622205	0					
ANR	3622633	Callee	cgroup_modify_cgroup		3622205	0					
ANR	3622634	Identifier	cgroup_modify_cgroup		3622205	0					
ANR	3622635	ArgumentList	orig_cgroup		3622205	1					
ANR	3622636	Argument	orig_cgroup		3622205	0					
ANR	3622637	Identifier	orig_cgroup		3622205	0					
ANR	3622638	ExpressionStatement	cgroup_free ( & orig_cgroup )	233:2:7679:7704	3622205	2	True				
ANR	3622639	CallExpression	cgroup_free ( & orig_cgroup )		3622205	0					
ANR	3622640	Callee	cgroup_free		3622205	0					
ANR	3622641	Identifier	cgroup_free		3622205	0					
ANR	3622642	ArgumentList	& orig_cgroup		3622205	1					
ANR	3622643	Argument	& orig_cgroup		3622205	0					
ANR	3622644	UnaryOperationExpression	& orig_cgroup		3622205	0					
ANR	3622645	UnaryOperator	&		3622205	0					
ANR	3622646	Identifier	orig_cgroup		3622205	1					
ANR	3622647	Label	after_restore :	236:0:7710:7723	3622205	19	True				
ANR	3622648	Identifier	after_restore		3622205	0					
ANR	3622649	IfStatement	if ( orig_cgroup_string != NULL )		3622205	20					
ANR	3622650	Condition	orig_cgroup_string != NULL	237:5:7730:7755	3622205	0	True				
ANR	3622651	EqualityExpression	orig_cgroup_string != NULL		3622205	0		!=			
ANR	3622652	Identifier	orig_cgroup_string		3622205	0					
ANR	3622653	Identifier	NULL		3622205	1					
ANR	3622654	CompoundStatement		97:33:3922:3922	3622205	1					
ANR	3622655	ExpressionStatement	free ( orig_cgroup_string )	238:2:7762:7786	3622205	0	True				
ANR	3622656	CallExpression	free ( orig_cgroup_string )		3622205	0					
ANR	3622657	Callee	free		3622205	0					
ANR	3622658	Identifier	free		3622205	0					
ANR	3622659	ArgumentList	orig_cgroup_string		3622205	1					
ANR	3622660	Argument	orig_cgroup_string		3622205	0					
ANR	3622661	Identifier	orig_cgroup_string		3622205	0					
ANR	3622662	ReturnStatement	return err ;	240:1:7792:7802	3622205	21	True				
ANR	3622663	Identifier	err		3622205	0					
ANR	3622664	ReturnType	int		3622205	1					
ANR	3622665	Identifier	ProcFamily :: migrate_to_cgroup		3622205	2					
ANR	3622666	ParameterList	pid_t pid		3622205	3					
ANR	3622667	Parameter	pid_t pid	140:30:3824:3832	3622205	0	True				
ANR	3622668	ParameterType	pid_t		3622205	0					
ANR	3622669	Identifier	pid		3622205	1					
ANR	3622670	CFGEntryNode	ENTRY		3622205		True				
ANR	3622671	CFGExitNode	EXIT		3622205		True				
ANR	3622672	Symbol	MEMORY_CONTROLLER		3622205						
ANR	3622673	Symbol	D_PROCFAMILY		3622205						
ANR	3622674	Symbol	cgroup_get_value_uint64		3622205						
ANR	3622675	Symbol	orig_cgroup_string		3622205						
ANR	3622676	Symbol	cgroup_get_controller		3622205						
ANR	3622677	Symbol	orig_migrate		3622205						
ANR	3622678	Symbol	pid		3622205						
ANR	3622679	Symbol	& orig_migrate		3622205						
ANR	3622680	Symbol	cgroup_strerror		3622205						
ANR	3622681	Symbol	cgroup_add_value_uint64		3622205						
ANR	3622682	Symbol	cgroup_get_current_controller_path		3622205						
ANR	3622683	Symbol	strcmp		3622205						
ANR	3622684	Symbol	cgroup_add_controller		3622205						
ANR	3622685	Symbol	NULL		3622205						
ANR	3622686	Symbol	err		3622205						
ANR	3622687	Symbol	cgroup_get_cgroup		3622205						
ANR	3622688	Symbol	false		3622205						
ANR	3622689	Symbol	m_cgroup_memory_mounted		3622205						
ANR	3622690	Symbol	cgroup_new_cgroup		3622205						
ANR	3622691	Symbol	cgroup_attach_task_pid		3622205						
ANR	3622692	Symbol	cgroup_modify_cgroup		3622205						
ANR	3622693	Symbol	m_cgroup		3622205						
ANR	3622694	Symbol	& orig_cgroup		3622205						
ANR	3622695	Symbol	orig_cgroup		3622205						
ANR	3622696	Symbol	changed_orig		3622205						
ANR	3622697	Symbol	& orig_cgroup_string		3622205						
ANR	3622698	Symbol	true		3622205						
ANR	3622699	Symbol	memory_controller		3622205						
ANR	3622700	Symbol	ECGROUPVALUENOTEXIST		3622205						
ANR	3622701	Symbol	m_cgroup_string		3622205						
ANR	3622702	Symbol	m_root_pid		3622205						
ANR	3622703	Function	ProcFamily :: set_cgroup	243:0:7807:13563							
ANR	3622704	FunctionDef	ProcFamily :: set_cgroup (const char * cgroup)		3622703	0					
ANR	3622705	CompoundStatement		245:0:7855:13563	3622703	0					
ANR	3622706	IdentifierDeclStatement	int err ;	246:1:7858:7865	3622703	0	True				
ANR	3622707	IdentifierDecl	err		3622703	0					
ANR	3622708	IdentifierDeclType	int		3622703	0					
ANR	3622709	Identifier	err		3622703	1					
ANR	3622710	IdentifierDeclStatement	"bool has_cgroup = true , changed_cgroup = false ;"	247:1:7868:7914	3622703	1	True				
ANR	3622711	IdentifierDecl	has_cgroup = true		3622703	0					
ANR	3622712	IdentifierDeclType	bool		3622703	0					
ANR	3622713	Identifier	has_cgroup		3622703	1					
ANR	3622714	AssignmentExpression	has_cgroup = true		3622703	2		=			
ANR	3622715	Identifier	true		3622703	0					
ANR	3622716	Identifier	true		3622703	1					
ANR	3622717	IdentifierDecl	changed_cgroup = false		3622703	1					
ANR	3622718	IdentifierDeclType	bool		3622703	0					
ANR	3622719	Identifier	changed_cgroup		3622703	1					
ANR	3622720	AssignmentExpression	changed_cgroup = false		3622703	2		=			
ANR	3622721	Identifier	false		3622703	0					
ANR	3622722	Identifier	false		3622703	1					
ANR	3622723	IfStatement	"if ( ! strcmp ( cgroup , ""/"" ) )"		3622703	2					
ANR	3622724	Condition	"! strcmp ( cgroup , ""/"" )"	249:5:7922:7941	3622703	0	True				
ANR	3622725	UnaryOperationExpression	"! strcmp ( cgroup , ""/"" )"		3622703	0					
ANR	3622726	UnaryOperator	!		3622703	0					
ANR	3622727	CallExpression	"strcmp ( cgroup , ""/"" )"		3622703	1					
ANR	3622728	Callee	strcmp		3622703	0					
ANR	3622729	Identifier	strcmp		3622703	0					
ANR	3622730	ArgumentList	cgroup		3622703	1					
ANR	3622731	Argument	cgroup		3622703	0					
ANR	3622732	Identifier	cgroup		3622703	0					
ANR	3622733	Argument	"""/"""		3622703	1					
ANR	3622734	PrimaryExpression	"""/"""		3622703	0					
ANR	3622735	CompoundStatement		5:27:88:88	3622703	1					
ANR	3622736	Statement	dprintf	250:2:7948:7954	3622703	0	True				
ANR	3622737	Statement	(	250:9:7955:7955	3622703	1	True				
ANR	3622738	Statement	D_ALWAYS	250:10:7956:7963	3622703	2	True				
ANR	3622739	Statement	","	250:18:7964:7964	3622703	3	True				
ANR	3622740	Statement	"""Cowardly refusing to monitor the root cgroup out """	251:3:7969:8019	3622703	4	True				
ANR	3622741	Statement	"""of security concerns.\\n"""	252:3:8024:8048	3622703	5	True				
ANR	3622742	Statement	)	252:28:8049:8049	3622703	6	True				
ANR	3622743	ExpressionStatement		252:29:8050:8050	3622703	7	True				
ANR	3622744	ReturnStatement	return 1 ;	253:2:8054:8062	3622703	8	True				
ANR	3622745	PrimaryExpression	1		3622703	0					
ANR	3622746	IfStatement	if ( m_cgroup_initialized == false )		3622703	3					
ANR	3622747	Condition	m_cgroup_initialized == false	257:5:8116:8144	3622703	0	True				
ANR	3622748	EqualityExpression	m_cgroup_initialized == false		3622703	0		==			
ANR	3622749	Identifier	m_cgroup_initialized		3622703	0					
ANR	3622750	Identifier	false		3622703	1					
ANR	3622751	CompoundStatement		18:2:411:468	3622703	1					
ANR	3622752	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""Initializing cgroup library.\\n"" )"	258:2:8151:8206	3622703	0	True				
ANR	3622753	CallExpression	"dprintf ( D_PROCFAMILY , ""Initializing cgroup library.\\n"" )"		3622703	0					
ANR	3622754	Callee	dprintf		3622703	0					
ANR	3622755	Identifier	dprintf		3622703	0					
ANR	3622756	ArgumentList	D_PROCFAMILY		3622703	1					
ANR	3622757	Argument	D_PROCFAMILY		3622703	0					
ANR	3622758	Identifier	D_PROCFAMILY		3622703	0					
ANR	3622759	Argument	"""Initializing cgroup library.\\n"""		3622703	1					
ANR	3622760	PrimaryExpression	"""Initializing cgroup library.\\n"""		3622703	0					
ANR	3622761	ExpressionStatement	cgroup_init ( )	259:2:8210:8223	3622703	1	True				
ANR	3622762	CallExpression	cgroup_init ( )		3622703	0					
ANR	3622763	Callee	cgroup_init		3622703	0					
ANR	3622764	Identifier	cgroup_init		3622703	0					
ANR	3622765	ArgumentList			3622703	1					
ANR	3622766	IdentifierDeclStatement	void * handle ;	260:2:8227:8239	3622703	2	True				
ANR	3622767	IdentifierDecl	* handle		3622703	0					
ANR	3622768	IdentifierDeclType	void *		3622703	0					
ANR	3622769	Identifier	handle		3622703	1					
ANR	3622770	IdentifierDeclStatement	controller_data info ;	261:2:8243:8263	3622703	3	True				
ANR	3622771	IdentifierDecl	info		3622703	0					
ANR	3622772	IdentifierDeclType	controller_data		3622703	0					
ANR	3622773	Identifier	info		3622703	1					
ANR	3622774	IdentifierDeclStatement	"int ret = cgroup_get_all_controller_begin ( & handle , & info ) ;"	262:2:8267:8324	3622703	4	True				
ANR	3622775	IdentifierDecl	"ret = cgroup_get_all_controller_begin ( & handle , & info )"		3622703	0					
ANR	3622776	IdentifierDeclType	int		3622703	0					
ANR	3622777	Identifier	ret		3622703	1					
ANR	3622778	AssignmentExpression	"ret = cgroup_get_all_controller_begin ( & handle , & info )"		3622703	2		=			
ANR	3622779	Identifier	ret		3622703	0					
ANR	3622780	CallExpression	"cgroup_get_all_controller_begin ( & handle , & info )"		3622703	1					
ANR	3622781	Callee	cgroup_get_all_controller_begin		3622703	0					
ANR	3622782	Identifier	cgroup_get_all_controller_begin		3622703	0					
ANR	3622783	ArgumentList	& handle		3622703	1					
ANR	3622784	Argument	& handle		3622703	0					
ANR	3622785	UnaryOperationExpression	& handle		3622703	0					
ANR	3622786	UnaryOperator	&		3622703	0					
ANR	3622787	Identifier	handle		3622703	1					
ANR	3622788	Argument	& info		3622703	1					
ANR	3622789	UnaryOperationExpression	& info		3622703	0					
ANR	3622790	UnaryOperator	&		3622703	0					
ANR	3622791	Identifier	info		3622703	1					
ANR	3622792	WhileStatement	while ( ret == 0 )		3622703	5					
ANR	3622793	Condition	ret == 0	263:9:8335:8342	3622703	0	True				
ANR	3622794	EqualityExpression	ret == 0		3622703	0		==			
ANR	3622795	Identifier	ret		3622703	0					
ANR	3622796	PrimaryExpression	0		3622703	1					
ANR	3622797	CompoundStatement		19:19:489:489	3622703	1					
ANR	3622798	IfStatement	"if ( strcmp ( info . name , MEMORY_CONTROLLER ) == 0 )"		3622703	0					
ANR	3622799	Condition	"strcmp ( info . name , MEMORY_CONTROLLER ) == 0"	264:7:8354:8394	3622703	0	True				
ANR	3622800	EqualityExpression	"strcmp ( info . name , MEMORY_CONTROLLER ) == 0"		3622703	0		==			
ANR	3622801	CallExpression	"strcmp ( info . name , MEMORY_CONTROLLER )"		3622703	0					
ANR	3622802	Callee	strcmp		3622703	0					
ANR	3622803	Identifier	strcmp		3622703	0					
ANR	3622804	ArgumentList	info . name		3622703	1					
ANR	3622805	Argument	info . name		3622703	0					
ANR	3622806	MemberAccess	info . name		3622703	0					
ANR	3622807	Identifier	info		3622703	0					
ANR	3622808	Identifier	name		3622703	1					
ANR	3622809	Argument	MEMORY_CONTROLLER		3622703	1					
ANR	3622810	Identifier	MEMORY_CONTROLLER		3622703	0					
ANR	3622811	PrimaryExpression	0		3622703	1					
ANR	3622812	CompoundStatement		20:50:541:541	3622703	1					
ANR	3622813	ExpressionStatement	m_cgroup_memory_mounted = ( info . hierarchy != 0 )	265:4:8403:8450	3622703	0	True				
ANR	3622814	AssignmentExpression	m_cgroup_memory_mounted = ( info . hierarchy != 0 )		3622703	0		=			
ANR	3622815	Identifier	m_cgroup_memory_mounted		3622703	0					
ANR	3622816	EqualityExpression	info . hierarchy != 0		3622703	1		!=			
ANR	3622817	MemberAccess	info . hierarchy		3622703	0					
ANR	3622818	Identifier	info		3622703	0					
ANR	3622819	Identifier	hierarchy		3622703	1					
ANR	3622820	PrimaryExpression	0		3622703	1					
ANR	3622821	ElseStatement	else		3622703	0					
ANR	3622822	IfStatement	"if ( strcmp ( info . name , CPUACCT_CONTROLLER ) == 0 )"		3622703	0					
ANR	3622823	Condition	"strcmp ( info . name , CPUACCT_CONTROLLER ) == 0"	266:14:8466:8507	3622703	0	True				
ANR	3622824	EqualityExpression	"strcmp ( info . name , CPUACCT_CONTROLLER ) == 0"		3622703	0		==			
ANR	3622825	CallExpression	"strcmp ( info . name , CPUACCT_CONTROLLER )"		3622703	0					
ANR	3622826	Callee	strcmp		3622703	0					
ANR	3622827	Identifier	strcmp		3622703	0					
ANR	3622828	ArgumentList	info . name		3622703	1					
ANR	3622829	Argument	info . name		3622703	0					
ANR	3622830	MemberAccess	info . name		3622703	0					
ANR	3622831	Identifier	info		3622703	0					
ANR	3622832	Identifier	name		3622703	1					
ANR	3622833	Argument	CPUACCT_CONTROLLER		3622703	1					
ANR	3622834	Identifier	CPUACCT_CONTROLLER		3622703	0					
ANR	3622835	PrimaryExpression	0		3622703	1					
ANR	3622836	CompoundStatement		22:58:654:654	3622703	1					
ANR	3622837	ExpressionStatement	m_cgroup_cpuacct_mounted = ( info . hierarchy != 0 )	267:4:8516:8564	3622703	0	True				
ANR	3622838	AssignmentExpression	m_cgroup_cpuacct_mounted = ( info . hierarchy != 0 )		3622703	0		=			
ANR	3622839	Identifier	m_cgroup_cpuacct_mounted		3622703	0					
ANR	3622840	EqualityExpression	info . hierarchy != 0		3622703	1		!=			
ANR	3622841	MemberAccess	info . hierarchy		3622703	0					
ANR	3622842	Identifier	info		3622703	0					
ANR	3622843	Identifier	hierarchy		3622703	1					
ANR	3622844	PrimaryExpression	0		3622703	1					
ANR	3622845	ElseStatement	else		3622703	0					
ANR	3622846	IfStatement	"if ( strcmp ( info . name , FREEZE_CONTROLLER ) == 0 )"		3622703	0					
ANR	3622847	Condition	"strcmp ( info . name , FREEZE_CONTROLLER ) == 0"	268:14:8580:8620	3622703	0	True				
ANR	3622848	EqualityExpression	"strcmp ( info . name , FREEZE_CONTROLLER ) == 0"		3622703	0		==			
ANR	3622849	CallExpression	"strcmp ( info . name , FREEZE_CONTROLLER )"		3622703	0					
ANR	3622850	Callee	strcmp		3622703	0					
ANR	3622851	Identifier	strcmp		3622703	0					
ANR	3622852	ArgumentList	info . name		3622703	1					
ANR	3622853	Argument	info . name		3622703	0					
ANR	3622854	MemberAccess	info . name		3622703	0					
ANR	3622855	Identifier	info		3622703	0					
ANR	3622856	Identifier	name		3622703	1					
ANR	3622857	Argument	FREEZE_CONTROLLER		3622703	1					
ANR	3622858	Identifier	FREEZE_CONTROLLER		3622703	0					
ANR	3622859	PrimaryExpression	0		3622703	1					
ANR	3622860	CompoundStatement		24:57:767:767	3622703	1					
ANR	3622861	ExpressionStatement	m_cgroup_freezer_mounted = ( info . hierarchy != 0 )	269:4:8629:8677	3622703	0	True				
ANR	3622862	AssignmentExpression	m_cgroup_freezer_mounted = ( info . hierarchy != 0 )		3622703	0		=			
ANR	3622863	Identifier	m_cgroup_freezer_mounted		3622703	0					
ANR	3622864	EqualityExpression	info . hierarchy != 0		3622703	1		!=			
ANR	3622865	MemberAccess	info . hierarchy		3622703	0					
ANR	3622866	Identifier	info		3622703	0					
ANR	3622867	Identifier	hierarchy		3622703	1					
ANR	3622868	PrimaryExpression	0		3622703	1					
ANR	3622869	ElseStatement	else		3622703	0					
ANR	3622870	IfStatement	"if ( strcmp ( info . name , BLOCK_CONTROLLER ) == 0 )"		3622703	0					
ANR	3622871	Condition	"strcmp ( info . name , BLOCK_CONTROLLER ) == 0"	270:14:8693:8732	3622703	0	True				
ANR	3622872	EqualityExpression	"strcmp ( info . name , BLOCK_CONTROLLER ) == 0"		3622703	0		==			
ANR	3622873	CallExpression	"strcmp ( info . name , BLOCK_CONTROLLER )"		3622703	0					
ANR	3622874	Callee	strcmp		3622703	0					
ANR	3622875	Identifier	strcmp		3622703	0					
ANR	3622876	ArgumentList	info . name		3622703	1					
ANR	3622877	Argument	info . name		3622703	0					
ANR	3622878	MemberAccess	info . name		3622703	0					
ANR	3622879	Identifier	info		3622703	0					
ANR	3622880	Identifier	name		3622703	1					
ANR	3622881	Argument	BLOCK_CONTROLLER		3622703	1					
ANR	3622882	Identifier	BLOCK_CONTROLLER		3622703	0					
ANR	3622883	PrimaryExpression	0		3622703	1					
ANR	3622884	CompoundStatement		26:56:879:879	3622703	1					
ANR	3622885	ExpressionStatement	m_cgroup_block_mounted = ( info . hierarchy != 0 )	271:4:8741:8787	3622703	0	True				
ANR	3622886	AssignmentExpression	m_cgroup_block_mounted = ( info . hierarchy != 0 )		3622703	0		=			
ANR	3622887	Identifier	m_cgroup_block_mounted		3622703	0					
ANR	3622888	EqualityExpression	info . hierarchy != 0		3622703	1		!=			
ANR	3622889	MemberAccess	info . hierarchy		3622703	0					
ANR	3622890	Identifier	info		3622703	0					
ANR	3622891	Identifier	hierarchy		3622703	1					
ANR	3622892	PrimaryExpression	0		3622703	1					
ANR	3622893	ExpressionStatement	"ret = cgroup_get_all_controller_next ( & handle , & info )"	273:3:8797:8849	3622703	1	True				
ANR	3622894	AssignmentExpression	"ret = cgroup_get_all_controller_next ( & handle , & info )"		3622703	0		=			
ANR	3622895	Identifier	ret		3622703	0					
ANR	3622896	CallExpression	"cgroup_get_all_controller_next ( & handle , & info )"		3622703	1					
ANR	3622897	Callee	cgroup_get_all_controller_next		3622703	0					
ANR	3622898	Identifier	cgroup_get_all_controller_next		3622703	0					
ANR	3622899	ArgumentList	& handle		3622703	1					
ANR	3622900	Argument	& handle		3622703	0					
ANR	3622901	UnaryOperationExpression	& handle		3622703	0					
ANR	3622902	UnaryOperator	&		3622703	0					
ANR	3622903	Identifier	handle		3622703	1					
ANR	3622904	Argument	& info		3622703	1					
ANR	3622905	UnaryOperationExpression	& info		3622703	0					
ANR	3622906	UnaryOperator	&		3622703	0					
ANR	3622907	Identifier	info		3622703	1					
ANR	3622908	ExpressionStatement	cgroup_get_all_controller_end ( & handle )	275:2:8857:8895	3622703	6	True				
ANR	3622909	CallExpression	cgroup_get_all_controller_end ( & handle )		3622703	0					
ANR	3622910	Callee	cgroup_get_all_controller_end		3622703	0					
ANR	3622911	Identifier	cgroup_get_all_controller_end		3622703	0					
ANR	3622912	ArgumentList	& handle		3622703	1					
ANR	3622913	Argument	& handle		3622703	0					
ANR	3622914	UnaryOperationExpression	& handle		3622703	0					
ANR	3622915	UnaryOperator	&		3622703	0					
ANR	3622916	Identifier	handle		3622703	1					
ANR	3622917	IfStatement	if ( ! m_cgroup_block_mounted )		3622703	7					
ANR	3622918	Condition	! m_cgroup_block_mounted	276:6:8903:8925	3622703	0	True				
ANR	3622919	UnaryOperationExpression	! m_cgroup_block_mounted		3622703	0					
ANR	3622920	UnaryOperator	!		3622703	0					
ANR	3622921	Identifier	m_cgroup_block_mounted		3622703	1					
ANR	3622922	CompoundStatement		32:31:1072:1072	3622703	1					
ANR	3622923	ExpressionStatement	"dprintf ( D_ALWAYS , ""Cgroup controller for I/O statistics is not mounted; accounting will be inaccurate.\\n"" )"	277:3:8933:9039	3622703	0	True				
ANR	3622924	CallExpression	"dprintf ( D_ALWAYS , ""Cgroup controller for I/O statistics is not mounted; accounting will be inaccurate.\\n"" )"		3622703	0					
ANR	3622925	Callee	dprintf		3622703	0					
ANR	3622926	Identifier	dprintf		3622703	0					
ANR	3622927	ArgumentList	D_ALWAYS		3622703	1					
ANR	3622928	Argument	D_ALWAYS		3622703	0					
ANR	3622929	Identifier	D_ALWAYS		3622703	0					
ANR	3622930	Argument	"""Cgroup controller for I/O statistics is not mounted; accounting will be inaccurate.\\n"""		3622703	1					
ANR	3622931	PrimaryExpression	"""Cgroup controller for I/O statistics is not mounted; accounting will be inaccurate.\\n"""		3622703	0					
ANR	3622932	IfStatement	if ( ! m_cgroup_freezer_mounted )		3622703	8					
ANR	3622933	Condition	! m_cgroup_freezer_mounted	279:6:9051:9075	3622703	0	True				
ANR	3622934	UnaryOperationExpression	! m_cgroup_freezer_mounted		3622703	0					
ANR	3622935	UnaryOperator	!		3622703	0					
ANR	3622936	Identifier	m_cgroup_freezer_mounted		3622703	1					
ANR	3622937	CompoundStatement		35:33:1222:1222	3622703	1					
ANR	3622938	ExpressionStatement	"dprintf ( D_ALWAYS , ""Cgroup controller for process management is not mounted; process termination will be inaccurate.\\n"" )"	280:3:9083:9202	3622703	0	True				
ANR	3622939	CallExpression	"dprintf ( D_ALWAYS , ""Cgroup controller for process management is not mounted; process termination will be inaccurate.\\n"" )"		3622703	0					
ANR	3622940	Callee	dprintf		3622703	0					
ANR	3622941	Identifier	dprintf		3622703	0					
ANR	3622942	ArgumentList	D_ALWAYS		3622703	1					
ANR	3622943	Argument	D_ALWAYS		3622703	0					
ANR	3622944	Identifier	D_ALWAYS		3622703	0					
ANR	3622945	Argument	"""Cgroup controller for process management is not mounted; process termination will be inaccurate.\\n"""		3622703	1					
ANR	3622946	PrimaryExpression	"""Cgroup controller for process management is not mounted; process termination will be inaccurate.\\n"""		3622703	0					
ANR	3622947	IfStatement	if ( ! m_cgroup_cpuacct_mounted )		3622703	9					
ANR	3622948	Condition	! m_cgroup_cpuacct_mounted	282:6:9214:9238	3622703	0	True				
ANR	3622949	UnaryOperationExpression	! m_cgroup_cpuacct_mounted		3622703	0					
ANR	3622950	UnaryOperator	!		3622703	0					
ANR	3622951	Identifier	m_cgroup_cpuacct_mounted		3622703	1					
ANR	3622952	CompoundStatement		38:33:1385:1385	3622703	1					
ANR	3622953	ExpressionStatement	"dprintf ( D_ALWAYS , ""Cgroup controller for CPU accounting is not mounted; cpu accounting will be inaccurate.\\n"" )"	283:3:9246:9356	3622703	0	True				
ANR	3622954	CallExpression	"dprintf ( D_ALWAYS , ""Cgroup controller for CPU accounting is not mounted; cpu accounting will be inaccurate.\\n"" )"		3622703	0					
ANR	3622955	Callee	dprintf		3622703	0					
ANR	3622956	Identifier	dprintf		3622703	0					
ANR	3622957	ArgumentList	D_ALWAYS		3622703	1					
ANR	3622958	Argument	D_ALWAYS		3622703	0					
ANR	3622959	Identifier	D_ALWAYS		3622703	0					
ANR	3622960	Argument	"""Cgroup controller for CPU accounting is not mounted; cpu accounting will be inaccurate.\\n"""		3622703	1					
ANR	3622961	PrimaryExpression	"""Cgroup controller for CPU accounting is not mounted; cpu accounting will be inaccurate.\\n"""		3622703	0					
ANR	3622962	IfStatement	if ( ! m_cgroup_memory_mounted )		3622703	10					
ANR	3622963	Condition	! m_cgroup_memory_mounted	285:6:9368:9391	3622703	0	True				
ANR	3622964	UnaryOperationExpression	! m_cgroup_memory_mounted		3622703	0					
ANR	3622965	UnaryOperator	!		3622703	0					
ANR	3622966	Identifier	m_cgroup_memory_mounted		3622703	1					
ANR	3622967	CompoundStatement		41:32:1538:1538	3622703	1					
ANR	3622968	ExpressionStatement	"dprintf ( D_ALWAYS , ""Cgroup controller for memory accounting is not mounted; memory accounting will be inaccurate.\\n"" )"	286:3:9399:9515	3622703	0	True				
ANR	3622969	CallExpression	"dprintf ( D_ALWAYS , ""Cgroup controller for memory accounting is not mounted; memory accounting will be inaccurate.\\n"" )"		3622703	0					
ANR	3622970	Callee	dprintf		3622703	0					
ANR	3622971	Identifier	dprintf		3622703	0					
ANR	3622972	ArgumentList	D_ALWAYS		3622703	1					
ANR	3622973	Argument	D_ALWAYS		3622703	0					
ANR	3622974	Identifier	D_ALWAYS		3622703	0					
ANR	3622975	Argument	"""Cgroup controller for memory accounting is not mounted; memory accounting will be inaccurate.\\n"""		3622703	1					
ANR	3622976	PrimaryExpression	"""Cgroup controller for memory accounting is not mounted; memory accounting will be inaccurate.\\n"""		3622703	0					
ANR	3622977	IfStatement	if ( ret != ECGEOF )		3622703	11					
ANR	3622978	Condition	ret != ECGEOF	288:6:9527:9539	3622703	0	True				
ANR	3622979	EqualityExpression	ret != ECGEOF		3622703	0		!=			
ANR	3622980	Identifier	ret		3622703	0					
ANR	3622981	Identifier	ECGEOF		3622703	1					
ANR	3622982	CompoundStatement		44:21:1686:1686	3622703	1					
ANR	3622983	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error iterating through cgroups mount information: %s\\n"" , cgroup_strerror ( ret ) )"	289:3:9547:9645	3622703	0	True				
ANR	3622984	CallExpression	"dprintf ( D_ALWAYS , ""Error iterating through cgroups mount information: %s\\n"" , cgroup_strerror ( ret ) )"		3622703	0					
ANR	3622985	Callee	dprintf		3622703	0					
ANR	3622986	Identifier	dprintf		3622703	0					
ANR	3622987	ArgumentList	D_ALWAYS		3622703	1					
ANR	3622988	Argument	D_ALWAYS		3622703	0					
ANR	3622989	Identifier	D_ALWAYS		3622703	0					
ANR	3622990	Argument	"""Error iterating through cgroups mount information: %s\\n"""		3622703	1					
ANR	3622991	PrimaryExpression	"""Error iterating through cgroups mount information: %s\\n"""		3622703	0					
ANR	3622992	Argument	cgroup_strerror ( ret )		3622703	2					
ANR	3622993	CallExpression	cgroup_strerror ( ret )		3622703	0					
ANR	3622994	Callee	cgroup_strerror		3622703	0					
ANR	3622995	Identifier	cgroup_strerror		3622703	0					
ANR	3622996	ArgumentList	ret		3622703	1					
ANR	3622997	Argument	ret		3622703	0					
ANR	3622998	Identifier	ret		3622703	0					
ANR	3622999	IfStatement	"if ( ( m_cgroup_string != NULL ) && ! strcmp ( m_cgroup_string , cgroup ) )"		3622703	4					
ANR	3623000	Condition	"( m_cgroup_string != NULL ) && ! strcmp ( m_cgroup_string , cgroup )"	295:5:9712:9772	3622703	0	True				
ANR	3623001	AndExpression	"( m_cgroup_string != NULL ) && ! strcmp ( m_cgroup_string , cgroup )"		3622703	0		&&			
ANR	3623002	EqualityExpression	m_cgroup_string != NULL		3622703	0		!=			
ANR	3623003	Identifier	m_cgroup_string		3622703	0					
ANR	3623004	Identifier	NULL		3622703	1					
ANR	3623005	UnaryOperationExpression	"! strcmp ( m_cgroup_string , cgroup )"		3622703	1					
ANR	3623006	UnaryOperator	!		3622703	0					
ANR	3623007	CallExpression	"strcmp ( m_cgroup_string , cgroup )"		3622703	1					
ANR	3623008	Callee	strcmp		3622703	0					
ANR	3623009	Identifier	strcmp		3622703	0					
ANR	3623010	ArgumentList	m_cgroup_string		3622703	1					
ANR	3623011	Argument	m_cgroup_string		3622703	0					
ANR	3623012	Identifier	m_cgroup_string		3622703	0					
ANR	3623013	Argument	cgroup		3622703	1					
ANR	3623014	Identifier	cgroup		3622703	0					
ANR	3623015	CompoundStatement		51:68:1919:1919	3622703	1					
ANR	3623016	ReturnStatement	return 0 ;	296:2:9779:9787	3622703	0	True				
ANR	3623017	PrimaryExpression	0		3622703	0					
ANR	3623018	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""Setting cgroup to %s for ProcFamily %u.\\n"" , cgroup , m_root_pid )"	299:1:9794:9882	3622703	5	True				
ANR	3623019	CallExpression	"dprintf ( D_PROCFAMILY , ""Setting cgroup to %s for ProcFamily %u.\\n"" , cgroup , m_root_pid )"		3622703	0					
ANR	3623020	Callee	dprintf		3622703	0					
ANR	3623021	Identifier	dprintf		3622703	0					
ANR	3623022	ArgumentList	D_PROCFAMILY		3622703	1					
ANR	3623023	Argument	D_PROCFAMILY		3622703	0					
ANR	3623024	Identifier	D_PROCFAMILY		3622703	0					
ANR	3623025	Argument	"""Setting cgroup to %s for ProcFamily %u.\\n"""		3622703	1					
ANR	3623026	PrimaryExpression	"""Setting cgroup to %s for ProcFamily %u.\\n"""		3622703	0					
ANR	3623027	Argument	cgroup		3622703	2					
ANR	3623028	Identifier	cgroup		3622703	0					
ANR	3623029	Argument	m_root_pid		3622703	3					
ANR	3623030	Identifier	m_root_pid		3622703	0					
ANR	3623031	IfStatement	if ( m_cgroup_string )		3622703	6					
ANR	3623032	Condition	m_cgroup_string	302:5:9890:9904	3622703	0	True				
ANR	3623033	Identifier	m_cgroup_string		3622703	0					
ANR	3623034	CompoundStatement		58:22:2051:2051	3622703	1					
ANR	3623035	IfStatement	if ( m_created_cgroup )		3622703	0					
ANR	3623036	Condition	m_created_cgroup	303:6:9915:9930	3622703	0	True				
ANR	3623037	Identifier	m_created_cgroup		3622703	0					
ANR	3623038	ExpressionStatement	delete_cgroup ( m_cgroup_string )	304:3:9936:9966	3622703	1	True				
ANR	3623039	CallExpression	delete_cgroup ( m_cgroup_string )		3622703	0					
ANR	3623040	Callee	delete_cgroup		3622703	0					
ANR	3623041	Identifier	delete_cgroup		3622703	0					
ANR	3623042	ArgumentList	m_cgroup_string		3622703	1					
ANR	3623043	Argument	m_cgroup_string		3622703	0					
ANR	3623044	Identifier	m_cgroup_string		3622703	0					
ANR	3623045	ExpressionStatement	m_created_cgroup = false	305:2:9970:9994	3622703	1	True				
ANR	3623046	AssignmentExpression	m_created_cgroup = false		3622703	0		=			
ANR	3623047	Identifier	m_created_cgroup		3622703	0					
ANR	3623048	Identifier	false		3622703	1					
ANR	3623049	ExpressionStatement	free ( m_cgroup_string )	306:2:9998:10019	3622703	2	True				
ANR	3623050	CallExpression	free ( m_cgroup_string )		3622703	0					
ANR	3623051	Callee	free		3622703	0					
ANR	3623052	Identifier	free		3622703	0					
ANR	3623053	ArgumentList	m_cgroup_string		3622703	1					
ANR	3623054	Argument	m_cgroup_string		3622703	0					
ANR	3623055	Identifier	m_cgroup_string		3622703	0					
ANR	3623056	IfStatement	if ( m_cgroup )		3622703	7					
ANR	3623057	Condition	m_cgroup	308:5:10029:10036	3622703	0	True				
ANR	3623058	Identifier	m_cgroup		3622703	0					
ANR	3623059	ExpressionStatement	cgroup_free ( & m_cgroup )	309:2:10041:10063	3622703	1	True				
ANR	3623060	CallExpression	cgroup_free ( & m_cgroup )		3622703	0					
ANR	3623061	Callee	cgroup_free		3622703	0					
ANR	3623062	Identifier	cgroup_free		3622703	0					
ANR	3623063	ArgumentList	& m_cgroup		3622703	1					
ANR	3623064	Argument	& m_cgroup		3622703	0					
ANR	3623065	UnaryOperationExpression	& m_cgroup		3622703	0					
ANR	3623066	UnaryOperator	&		3622703	0					
ANR	3623067	Identifier	m_cgroup		3622703	1					
ANR	3623068	IdentifierDeclStatement	size_t cgroup_len = strlen ( cgroup ) ;	311:1:10067:10101	3622703	8	True				
ANR	3623069	IdentifierDecl	cgroup_len = strlen ( cgroup )		3622703	0					
ANR	3623070	IdentifierDeclType	size_t		3622703	0					
ANR	3623071	Identifier	cgroup_len		3622703	1					
ANR	3623072	AssignmentExpression	cgroup_len = strlen ( cgroup )		3622703	2		=			
ANR	3623073	Identifier	cgroup_len		3622703	0					
ANR	3623074	CallExpression	strlen ( cgroup )		3622703	1					
ANR	3623075	Callee	strlen		3622703	0					
ANR	3623076	Identifier	strlen		3622703	0					
ANR	3623077	ArgumentList	cgroup		3622703	1					
ANR	3623078	Argument	cgroup		3622703	0					
ANR	3623079	Identifier	cgroup		3622703	0					
ANR	3623080	ExpressionStatement	m_cgroup_string = ( char * ) malloc ( sizeof ( char ) * ( cgroup_len + 1 ) )	312:1:10104:10165	3622703	9	True				
ANR	3623081	AssignmentExpression	m_cgroup_string = ( char * ) malloc ( sizeof ( char ) * ( cgroup_len + 1 ) )		3622703	0		=			
ANR	3623082	Identifier	m_cgroup_string		3622703	0					
ANR	3623083	CastExpression	( char * ) malloc ( sizeof ( char ) * ( cgroup_len + 1 ) )		3622703	1					
ANR	3623084	CastTarget	char *		3622703	0					
ANR	3623085	CallExpression	malloc ( sizeof ( char ) * ( cgroup_len + 1 ) )		3622703	1					
ANR	3623086	Callee	malloc		3622703	0					
ANR	3623087	Identifier	malloc		3622703	0					
ANR	3623088	ArgumentList	sizeof ( char ) * ( cgroup_len + 1 )		3622703	1					
ANR	3623089	Argument	sizeof ( char ) * ( cgroup_len + 1 )		3622703	0					
ANR	3623090	MultiplicativeExpression	sizeof ( char ) * ( cgroup_len + 1 )		3622703	0		*			
ANR	3623091	SizeofExpression	sizeof ( char )		3622703	0					
ANR	3623092	Sizeof	sizeof		3622703	0					
ANR	3623093	SizeofOperand	char		3622703	1					
ANR	3623094	AdditiveExpression	cgroup_len + 1		3622703	1		+			
ANR	3623095	Identifier	cgroup_len		3622703	0					
ANR	3623096	PrimaryExpression	1		3622703	1					
ANR	3623097	ExpressionStatement	"strcpy ( m_cgroup_string , cgroup )"	313:1:10168:10199	3622703	10	True				
ANR	3623098	CallExpression	"strcpy ( m_cgroup_string , cgroup )"		3622703	0					
ANR	3623099	Callee	strcpy		3622703	0					
ANR	3623100	Identifier	strcpy		3622703	0					
ANR	3623101	ArgumentList	m_cgroup_string		3622703	1					
ANR	3623102	Argument	m_cgroup_string		3622703	0					
ANR	3623103	Identifier	m_cgroup_string		3622703	0					
ANR	3623104	Argument	cgroup		3622703	1					
ANR	3623105	Identifier	cgroup		3622703	0					
ANR	3623106	ExpressionStatement	m_cgroup = cgroup_new_cgroup ( m_cgroup_string )	314:1:10202:10247	3622703	11	True				
ANR	3623107	AssignmentExpression	m_cgroup = cgroup_new_cgroup ( m_cgroup_string )		3622703	0		=			
ANR	3623108	Identifier	m_cgroup		3622703	0					
ANR	3623109	CallExpression	cgroup_new_cgroup ( m_cgroup_string )		3622703	1					
ANR	3623110	Callee	cgroup_new_cgroup		3622703	0					
ANR	3623111	Identifier	cgroup_new_cgroup		3622703	0					
ANR	3623112	ArgumentList	m_cgroup_string		3622703	1					
ANR	3623113	Argument	m_cgroup_string		3622703	0					
ANR	3623114	Identifier	m_cgroup_string		3622703	0					
ANR	3623115	ExpressionStatement	ASSERT ( m_cgroup != NULL )	315:1:10250:10274	3622703	12	True				
ANR	3623116	CallExpression	ASSERT ( m_cgroup != NULL )		3622703	0					
ANR	3623117	Callee	ASSERT		3622703	0					
ANR	3623118	Identifier	ASSERT		3622703	0					
ANR	3623119	ArgumentList	m_cgroup != NULL		3622703	1					
ANR	3623120	Argument	m_cgroup != NULL		3622703	0					
ANR	3623121	EqualityExpression	m_cgroup != NULL		3622703	0		!=			
ANR	3623122	Identifier	m_cgroup		3622703	0					
ANR	3623123	Identifier	NULL		3622703	1					
ANR	3623124	IfStatement	if ( ECGROUPNOTEXIST == cgroup_get_cgroup ( m_cgroup ) )		3622703	13					
ANR	3623125	Condition	ECGROUPNOTEXIST == cgroup_get_cgroup ( m_cgroup )	317:5:10282:10327	3622703	0	True				
ANR	3623126	EqualityExpression	ECGROUPNOTEXIST == cgroup_get_cgroup ( m_cgroup )		3622703	0		==			
ANR	3623127	Identifier	ECGROUPNOTEXIST		3622703	0					
ANR	3623128	CallExpression	cgroup_get_cgroup ( m_cgroup )		3622703	1					
ANR	3623129	Callee	cgroup_get_cgroup		3622703	0					
ANR	3623130	Identifier	cgroup_get_cgroup		3622703	0					
ANR	3623131	ArgumentList	m_cgroup		3622703	1					
ANR	3623132	Argument	m_cgroup		3622703	0					
ANR	3623133	Identifier	m_cgroup		3622703	0					
ANR	3623134	CompoundStatement		73:53:2474:2474	3622703	1					
ANR	3623135	ExpressionStatement	has_cgroup = false	318:2:10334:10352	3622703	0	True				
ANR	3623136	AssignmentExpression	has_cgroup = false		3622703	0		=			
ANR	3623137	Identifier	has_cgroup		3622703	0					
ANR	3623138	Identifier	false		3622703	1					
ANR	3623139	IfStatement	"if ( m_cgroup_cpuacct_mounted && ( ( has_cgroup == false ) || ( cgroup_get_controller ( m_cgroup , CPUACCT_CONTROLLER ) == NULL ) ) )"		3622703	14					
ANR	3623140	Condition	"m_cgroup_cpuacct_mounted && ( ( has_cgroup == false ) || ( cgroup_get_controller ( m_cgroup , CPUACCT_CONTROLLER ) == NULL ) )"	323:5:10511:10626	3622703	0	True				
ANR	3623141	AndExpression	"m_cgroup_cpuacct_mounted && ( ( has_cgroup == false ) || ( cgroup_get_controller ( m_cgroup , CPUACCT_CONTROLLER ) == NULL ) )"		3622703	0		&&			
ANR	3623142	Identifier	m_cgroup_cpuacct_mounted		3622703	0					
ANR	3623143	OrExpression	"( has_cgroup == false ) || ( cgroup_get_controller ( m_cgroup , CPUACCT_CONTROLLER ) == NULL )"		3622703	1		||			
ANR	3623144	EqualityExpression	has_cgroup == false		3622703	0		==			
ANR	3623145	Identifier	has_cgroup		3622703	0					
ANR	3623146	Identifier	false		3622703	1					
ANR	3623147	EqualityExpression	"cgroup_get_controller ( m_cgroup , CPUACCT_CONTROLLER ) == NULL"		3622703	1		==			
ANR	3623148	CallExpression	"cgroup_get_controller ( m_cgroup , CPUACCT_CONTROLLER )"		3622703	0					
ANR	3623149	Callee	cgroup_get_controller		3622703	0					
ANR	3623150	Identifier	cgroup_get_controller		3622703	0					
ANR	3623151	ArgumentList	m_cgroup		3622703	1					
ANR	3623152	Argument	m_cgroup		3622703	0					
ANR	3623153	Identifier	m_cgroup		3622703	0					
ANR	3623154	Argument	CPUACCT_CONTROLLER		3622703	1					
ANR	3623155	Identifier	CPUACCT_CONTROLLER		3622703	0					
ANR	3623156	Identifier	NULL		3622703	1					
ANR	3623157	CompoundStatement		79:123:2773:2773	3622703	1					
ANR	3623158	ExpressionStatement	changed_cgroup = true	324:2:10633:10654	3622703	0	True				
ANR	3623159	AssignmentExpression	changed_cgroup = true		3622703	0		=			
ANR	3623160	Identifier	changed_cgroup		3622703	0					
ANR	3623161	Identifier	true		3622703	1					
ANR	3623162	IfStatement	"if ( cgroup_add_controller ( m_cgroup , CPUACCT_CONTROLLER ) == NULL )"		3622703	1					
ANR	3623163	Condition	"cgroup_add_controller ( m_cgroup , CPUACCT_CONTROLLER ) == NULL"	325:6:10662:10720	3622703	0	True				
ANR	3623164	EqualityExpression	"cgroup_add_controller ( m_cgroup , CPUACCT_CONTROLLER ) == NULL"		3622703	0		==			
ANR	3623165	CallExpression	"cgroup_add_controller ( m_cgroup , CPUACCT_CONTROLLER )"		3622703	0					
ANR	3623166	Callee	cgroup_add_controller		3622703	0					
ANR	3623167	Identifier	cgroup_add_controller		3622703	0					
ANR	3623168	ArgumentList	m_cgroup		3622703	1					
ANR	3623169	Argument	m_cgroup		3622703	0					
ANR	3623170	Identifier	m_cgroup		3622703	0					
ANR	3623171	Argument	CPUACCT_CONTROLLER		3622703	1					
ANR	3623172	Identifier	CPUACCT_CONTROLLER		3622703	0					
ANR	3623173	Identifier	NULL		3622703	1					
ANR	3623174	CompoundStatement		81:67:2867:2867	3622703	1					
ANR	3623175	Statement	dprintf	326:3:10728:10734	3622703	0	True				
ANR	3623176	Statement	(	326:10:10735:10735	3622703	1	True				
ANR	3623177	Statement	D_PROCFAMILY	326:11:10736:10747	3622703	2	True				
ANR	3623178	Statement	","	326:23:10748:10748	3622703	3	True				
ANR	3623179	Statement	"""Unable to initialize cgroup CPU accounting subsystem"""	327:4:10754:10807	3622703	4	True				
ANR	3623180	Statement	""" for %s.\\n"""	328:4:10813:10824	3622703	5	True				
ANR	3623181	Statement	","	328:16:10825:10825	3622703	6	True				
ANR	3623182	Statement	m_cgroup_string	329:4:10831:10845	3622703	7	True				
ANR	3623183	Statement	)	329:19:10846:10846	3622703	8	True				
ANR	3623184	ExpressionStatement		329:20:10847:10847	3622703	9	True				
ANR	3623185	IfStatement	"if ( m_cgroup_memory_mounted && ( ( has_cgroup == false ) || ( cgroup_get_controller ( m_cgroup , MEMORY_CONTROLLER ) == NULL ) ) )"		3622703	15					
ANR	3623186	Condition	"m_cgroup_memory_mounted && ( ( has_cgroup == false ) || ( cgroup_get_controller ( m_cgroup , MEMORY_CONTROLLER ) == NULL ) )"	332:5:10861:10974	3622703	0	True				
ANR	3623187	AndExpression	"m_cgroup_memory_mounted && ( ( has_cgroup == false ) || ( cgroup_get_controller ( m_cgroup , MEMORY_CONTROLLER ) == NULL ) )"		3622703	0		&&			
ANR	3623188	Identifier	m_cgroup_memory_mounted		3622703	0					
ANR	3623189	OrExpression	"( has_cgroup == false ) || ( cgroup_get_controller ( m_cgroup , MEMORY_CONTROLLER ) == NULL )"		3622703	1		||			
ANR	3623190	EqualityExpression	has_cgroup == false		3622703	0		==			
ANR	3623191	Identifier	has_cgroup		3622703	0					
ANR	3623192	Identifier	false		3622703	1					
ANR	3623193	EqualityExpression	"cgroup_get_controller ( m_cgroup , MEMORY_CONTROLLER ) == NULL"		3622703	1		==			
ANR	3623194	CallExpression	"cgroup_get_controller ( m_cgroup , MEMORY_CONTROLLER )"		3622703	0					
ANR	3623195	Callee	cgroup_get_controller		3622703	0					
ANR	3623196	Identifier	cgroup_get_controller		3622703	0					
ANR	3623197	ArgumentList	m_cgroup		3622703	1					
ANR	3623198	Argument	m_cgroup		3622703	0					
ANR	3623199	Identifier	m_cgroup		3622703	0					
ANR	3623200	Argument	MEMORY_CONTROLLER		3622703	1					
ANR	3623201	Identifier	MEMORY_CONTROLLER		3622703	0					
ANR	3623202	Identifier	NULL		3622703	1					
ANR	3623203	CompoundStatement		88:121:3121:3121	3622703	1					
ANR	3623204	ExpressionStatement	changed_cgroup = true	333:2:10981:11002	3622703	0	True				
ANR	3623205	AssignmentExpression	changed_cgroup = true		3622703	0		=			
ANR	3623206	Identifier	changed_cgroup		3622703	0					
ANR	3623207	Identifier	true		3622703	1					
ANR	3623208	IfStatement	"if ( cgroup_add_controller ( m_cgroup , MEMORY_CONTROLLER ) == NULL )"		3622703	1					
ANR	3623209	Condition	"cgroup_add_controller ( m_cgroup , MEMORY_CONTROLLER ) == NULL"	334:6:11010:11067	3622703	0	True				
ANR	3623210	EqualityExpression	"cgroup_add_controller ( m_cgroup , MEMORY_CONTROLLER ) == NULL"		3622703	0		==			
ANR	3623211	CallExpression	"cgroup_add_controller ( m_cgroup , MEMORY_CONTROLLER )"		3622703	0					
ANR	3623212	Callee	cgroup_add_controller		3622703	0					
ANR	3623213	Identifier	cgroup_add_controller		3622703	0					
ANR	3623214	ArgumentList	m_cgroup		3622703	1					
ANR	3623215	Argument	m_cgroup		3622703	0					
ANR	3623216	Identifier	m_cgroup		3622703	0					
ANR	3623217	Argument	MEMORY_CONTROLLER		3622703	1					
ANR	3623218	Identifier	MEMORY_CONTROLLER		3622703	0					
ANR	3623219	Identifier	NULL		3622703	1					
ANR	3623220	CompoundStatement		90:66:3214:3214	3622703	1					
ANR	3623221	Statement	dprintf	335:3:11075:11081	3622703	0	True				
ANR	3623222	Statement	(	335:10:11082:11082	3622703	1	True				
ANR	3623223	Statement	D_PROCFAMILY	335:11:11083:11094	3622703	2	True				
ANR	3623224	Statement	","	335:23:11095:11095	3622703	3	True				
ANR	3623225	Statement	"""Unable to initialize cgroup memory accounting subsystem"""	336:4:11101:11157	3622703	4	True				
ANR	3623226	Statement	""" for %s.\\n"""	337:4:11163:11174	3622703	5	True				
ANR	3623227	Statement	","	337:16:11175:11175	3622703	6	True				
ANR	3623228	Statement	cgroup	338:4:11181:11186	3622703	7	True				
ANR	3623229	Statement	)	338:10:11187:11187	3622703	8	True				
ANR	3623230	ExpressionStatement		338:11:11188:11188	3622703	9	True				
ANR	3623231	IfStatement	"if ( m_cgroup_freezer_mounted && ( ( has_cgroup == false ) || ( cgroup_get_controller ( m_cgroup , FREEZE_CONTROLLER ) == NULL ) ) )"		3622703	16					
ANR	3623232	Condition	"m_cgroup_freezer_mounted && ( ( has_cgroup == false ) || ( cgroup_get_controller ( m_cgroup , FREEZE_CONTROLLER ) == NULL ) )"	341:5:11202:11316	3622703	0	True				
ANR	3623233	AndExpression	"m_cgroup_freezer_mounted && ( ( has_cgroup == false ) || ( cgroup_get_controller ( m_cgroup , FREEZE_CONTROLLER ) == NULL ) )"		3622703	0		&&			
ANR	3623234	Identifier	m_cgroup_freezer_mounted		3622703	0					
ANR	3623235	OrExpression	"( has_cgroup == false ) || ( cgroup_get_controller ( m_cgroup , FREEZE_CONTROLLER ) == NULL )"		3622703	1		||			
ANR	3623236	EqualityExpression	has_cgroup == false		3622703	0		==			
ANR	3623237	Identifier	has_cgroup		3622703	0					
ANR	3623238	Identifier	false		3622703	1					
ANR	3623239	EqualityExpression	"cgroup_get_controller ( m_cgroup , FREEZE_CONTROLLER ) == NULL"		3622703	1		==			
ANR	3623240	CallExpression	"cgroup_get_controller ( m_cgroup , FREEZE_CONTROLLER )"		3622703	0					
ANR	3623241	Callee	cgroup_get_controller		3622703	0					
ANR	3623242	Identifier	cgroup_get_controller		3622703	0					
ANR	3623243	ArgumentList	m_cgroup		3622703	1					
ANR	3623244	Argument	m_cgroup		3622703	0					
ANR	3623245	Identifier	m_cgroup		3622703	0					
ANR	3623246	Argument	FREEZE_CONTROLLER		3622703	1					
ANR	3623247	Identifier	FREEZE_CONTROLLER		3622703	0					
ANR	3623248	Identifier	NULL		3622703	1					
ANR	3623249	CompoundStatement		97:122:3463:3463	3622703	1					
ANR	3623250	ExpressionStatement	changed_cgroup = true	342:2:11323:11344	3622703	0	True				
ANR	3623251	AssignmentExpression	changed_cgroup = true		3622703	0		=			
ANR	3623252	Identifier	changed_cgroup		3622703	0					
ANR	3623253	Identifier	true		3622703	1					
ANR	3623254	IfStatement	"if ( cgroup_add_controller ( m_cgroup , FREEZE_CONTROLLER ) == NULL )"		3622703	1					
ANR	3623255	Condition	"cgroup_add_controller ( m_cgroup , FREEZE_CONTROLLER ) == NULL"	343:6:11352:11409	3622703	0	True				
ANR	3623256	EqualityExpression	"cgroup_add_controller ( m_cgroup , FREEZE_CONTROLLER ) == NULL"		3622703	0		==			
ANR	3623257	CallExpression	"cgroup_add_controller ( m_cgroup , FREEZE_CONTROLLER )"		3622703	0					
ANR	3623258	Callee	cgroup_add_controller		3622703	0					
ANR	3623259	Identifier	cgroup_add_controller		3622703	0					
ANR	3623260	ArgumentList	m_cgroup		3622703	1					
ANR	3623261	Argument	m_cgroup		3622703	0					
ANR	3623262	Identifier	m_cgroup		3622703	0					
ANR	3623263	Argument	FREEZE_CONTROLLER		3622703	1					
ANR	3623264	Identifier	FREEZE_CONTROLLER		3622703	0					
ANR	3623265	Identifier	NULL		3622703	1					
ANR	3623266	CompoundStatement		99:66:3556:3556	3622703	1					
ANR	3623267	Statement	dprintf	344:3:11417:11423	3622703	0	True				
ANR	3623268	Statement	(	344:10:11424:11424	3622703	1	True				
ANR	3623269	Statement	D_PROCFAMILY	344:11:11425:11436	3622703	2	True				
ANR	3623270	Statement	","	344:23:11437:11437	3622703	3	True				
ANR	3623271	Statement	"""Unable to initialize cgroup subsystem for killing """	345:4:11443:11494	3622703	4	True				
ANR	3623272	Statement	"""processes for %s.\\n"""	346:4:11500:11520	3622703	5	True				
ANR	3623273	Statement	","	346:25:11521:11521	3622703	6	True				
ANR	3623274	Statement	m_cgroup_string	347:4:11527:11541	3622703	7	True				
ANR	3623275	Statement	)	347:19:11542:11542	3622703	8	True				
ANR	3623276	ExpressionStatement		347:20:11543:11543	3622703	9	True				
ANR	3623277	IfStatement	"if ( m_cgroup_block_mounted && ( ( has_cgroup == false ) || ( cgroup_get_controller ( m_cgroup , BLOCK_CONTROLLER ) == NULL ) ) )"		3622703	17					
ANR	3623278	Condition	"m_cgroup_block_mounted && ( ( has_cgroup == false ) || ( cgroup_get_controller ( m_cgroup , BLOCK_CONTROLLER ) == NULL ) )"	350:5:11557:11668	3622703	0	True				
ANR	3623279	AndExpression	"m_cgroup_block_mounted && ( ( has_cgroup == false ) || ( cgroup_get_controller ( m_cgroup , BLOCK_CONTROLLER ) == NULL ) )"		3622703	0		&&			
ANR	3623280	Identifier	m_cgroup_block_mounted		3622703	0					
ANR	3623281	OrExpression	"( has_cgroup == false ) || ( cgroup_get_controller ( m_cgroup , BLOCK_CONTROLLER ) == NULL )"		3622703	1		||			
ANR	3623282	EqualityExpression	has_cgroup == false		3622703	0		==			
ANR	3623283	Identifier	has_cgroup		3622703	0					
ANR	3623284	Identifier	false		3622703	1					
ANR	3623285	EqualityExpression	"cgroup_get_controller ( m_cgroup , BLOCK_CONTROLLER ) == NULL"		3622703	1		==			
ANR	3623286	CallExpression	"cgroup_get_controller ( m_cgroup , BLOCK_CONTROLLER )"		3622703	0					
ANR	3623287	Callee	cgroup_get_controller		3622703	0					
ANR	3623288	Identifier	cgroup_get_controller		3622703	0					
ANR	3623289	ArgumentList	m_cgroup		3622703	1					
ANR	3623290	Argument	m_cgroup		3622703	0					
ANR	3623291	Identifier	m_cgroup		3622703	0					
ANR	3623292	Argument	BLOCK_CONTROLLER		3622703	1					
ANR	3623293	Identifier	BLOCK_CONTROLLER		3622703	0					
ANR	3623294	Identifier	NULL		3622703	1					
ANR	3623295	CompoundStatement		106:119:3815:3815	3622703	1					
ANR	3623296	ExpressionStatement	changed_cgroup = true	351:2:11675:11696	3622703	0	True				
ANR	3623297	AssignmentExpression	changed_cgroup = true		3622703	0		=			
ANR	3623298	Identifier	changed_cgroup		3622703	0					
ANR	3623299	Identifier	true		3622703	1					
ANR	3623300	IfStatement	"if ( cgroup_add_controller ( m_cgroup , BLOCK_CONTROLLER ) == NULL )"		3622703	1					
ANR	3623301	Condition	"cgroup_add_controller ( m_cgroup , BLOCK_CONTROLLER ) == NULL"	352:6:11704:11760	3622703	0	True				
ANR	3623302	EqualityExpression	"cgroup_add_controller ( m_cgroup , BLOCK_CONTROLLER ) == NULL"		3622703	0		==			
ANR	3623303	CallExpression	"cgroup_add_controller ( m_cgroup , BLOCK_CONTROLLER )"		3622703	0					
ANR	3623304	Callee	cgroup_add_controller		3622703	0					
ANR	3623305	Identifier	cgroup_add_controller		3622703	0					
ANR	3623306	ArgumentList	m_cgroup		3622703	1					
ANR	3623307	Argument	m_cgroup		3622703	0					
ANR	3623308	Identifier	m_cgroup		3622703	0					
ANR	3623309	Argument	BLOCK_CONTROLLER		3622703	1					
ANR	3623310	Identifier	BLOCK_CONTROLLER		3622703	0					
ANR	3623311	Identifier	NULL		3622703	1					
ANR	3623312	CompoundStatement		108:65:3907:3907	3622703	1					
ANR	3623313	Statement	dprintf	353:3:11768:11774	3622703	0	True				
ANR	3623314	Statement	(	353:10:11775:11775	3622703	1	True				
ANR	3623315	Statement	D_PROCFAMILY	353:11:11776:11787	3622703	2	True				
ANR	3623316	Statement	","	353:23:11788:11788	3622703	3	True				
ANR	3623317	Statement	"""Unable to initialize cgroup subsystem for bloock """	354:3:11793:11843	3622703	4	True				
ANR	3623318	Statement	"""statistics for %s.\\n"""	355:3:11848:11869	3622703	5	True				
ANR	3623319	Statement	","	355:25:11870:11870	3622703	6	True				
ANR	3623320	Statement	m_cgroup_string	356:3:11875:11889	3622703	7	True				
ANR	3623321	Statement	)	356:18:11890:11890	3622703	8	True				
ANR	3623322	ExpressionStatement		356:19:11891:11891	3622703	9	True				
ANR	3623323	IfStatement	if ( has_cgroup == false )		3622703	18					
ANR	3623324	Condition	has_cgroup == false	360:5:11979:11997	3622703	0	True				
ANR	3623325	EqualityExpression	has_cgroup == false		3622703	0		==			
ANR	3623326	Identifier	has_cgroup		3622703	0					
ANR	3623327	Identifier	false		3622703	1					
ANR	3623328	CompoundStatement		116:26:4144:4144	3622703	1					
ANR	3623329	IfStatement	"if ( ( err = cgroup_create_cgroup ( m_cgroup , 0 ) ) )"		3622703	0					
ANR	3623330	Condition	"err = cgroup_create_cgroup ( m_cgroup , 0 )"	361:6:12008:12048	3622703	0	True				
ANR	3623331	AssignmentExpression	"err = cgroup_create_cgroup ( m_cgroup , 0 )"		3622703	0		=			
ANR	3623332	Identifier	err		3622703	0					
ANR	3623333	CallExpression	"cgroup_create_cgroup ( m_cgroup , 0 )"		3622703	1					
ANR	3623334	Callee	cgroup_create_cgroup		3622703	0					
ANR	3623335	Identifier	cgroup_create_cgroup		3622703	0					
ANR	3623336	ArgumentList	m_cgroup		3622703	1					
ANR	3623337	Argument	m_cgroup		3622703	0					
ANR	3623338	Identifier	m_cgroup		3622703	0					
ANR	3623339	Argument	0		3622703	1					
ANR	3623340	PrimaryExpression	0		3622703	0					
ANR	3623341	CompoundStatement		117:49:4195:4195	3622703	1					
ANR	3623342	Statement	dprintf	362:3:12056:12062	3622703	0	True				
ANR	3623343	Statement	(	362:10:12063:12063	3622703	1	True				
ANR	3623344	Statement	D_PROCFAMILY	362:11:12064:12075	3622703	2	True				
ANR	3623345	Statement	","	362:23:12076:12076	3622703	3	True				
ANR	3623346	Statement	"""Unable to create cgroup %s for ProcFamily %u."""	363:4:12082:12128	3622703	4	True				
ANR	3623347	Statement	"""  Cgroup functionality will not work: %s\\n"""	364:4:12134:12177	3622703	5	True				
ANR	3623348	Statement	","	364:48:12178:12178	3622703	6	True				
ANR	3623349	Statement	m_cgroup_string	365:4:12184:12198	3622703	7	True				
ANR	3623350	Statement	","	365:19:12199:12199	3622703	8	True				
ANR	3623351	Statement	m_root_pid	365:21:12201:12210	3622703	9	True				
ANR	3623352	Statement	","	365:31:12211:12211	3622703	10	True				
ANR	3623353	Statement	cgroup_strerror	365:33:12213:12227	3622703	11	True				
ANR	3623354	Statement	(	365:48:12228:12228	3622703	12	True				
ANR	3623355	Statement	err	365:49:12229:12231	3622703	13	True				
ANR	3623356	Statement	)	365:52:12232:12232	3622703	14	True				
ANR	3623357	Statement	)	365:53:12233:12233	3622703	15	True				
ANR	3623358	ExpressionStatement		365:54:12234:12234	3622703	16	True				
ANR	3623359	ElseStatement	else		3622703	0					
ANR	3623360	CompoundStatement		122:9:4389:4389	3622703	0					
ANR	3623361	ExpressionStatement	m_created_cgroup = true	367:3:12250:12273	3622703	0	True				
ANR	3623362	AssignmentExpression	m_created_cgroup = true		3622703	0		=			
ANR	3623363	Identifier	m_created_cgroup		3622703	0					
ANR	3623364	Identifier	true		3622703	1					
ANR	3623365	ElseStatement	else		3622703	0					
ANR	3623366	IfStatement	if ( ( has_cgroup == true ) && ( changed_cgroup == true ) && ( err = cgroup_modify_cgroup ( m_cgroup ) ) )		3622703	0					
ANR	3623367	Condition	( has_cgroup == true ) && ( changed_cgroup == true ) && ( err = cgroup_modify_cgroup ( m_cgroup ) )	369:12:12291:12380	3622703	0	True				
ANR	3623368	AndExpression	( has_cgroup == true ) && ( changed_cgroup == true ) && ( err = cgroup_modify_cgroup ( m_cgroup ) )		3622703	0		&&			
ANR	3623369	EqualityExpression	has_cgroup == true		3622703	0		==			
ANR	3623370	Identifier	has_cgroup		3622703	0					
ANR	3623371	Identifier	true		3622703	1					
ANR	3623372	AndExpression	( changed_cgroup == true ) && ( err = cgroup_modify_cgroup ( m_cgroup ) )		3622703	1		&&			
ANR	3623373	EqualityExpression	changed_cgroup == true		3622703	0		==			
ANR	3623374	Identifier	changed_cgroup		3622703	0					
ANR	3623375	Identifier	true		3622703	1					
ANR	3623376	AssignmentExpression	err = cgroup_modify_cgroup ( m_cgroup )		3622703	1		=			
ANR	3623377	Identifier	err		3622703	0					
ANR	3623378	CallExpression	cgroup_modify_cgroup ( m_cgroup )		3622703	1					
ANR	3623379	Callee	cgroup_modify_cgroup		3622703	0					
ANR	3623380	Identifier	cgroup_modify_cgroup		3622703	0					
ANR	3623381	ArgumentList	m_cgroup		3622703	1					
ANR	3623382	Argument	m_cgroup		3622703	0					
ANR	3623383	Identifier	m_cgroup		3622703	0					
ANR	3623384	CompoundStatement		125:104:4527:4527	3622703	1					
ANR	3623385	Statement	dprintf	370:2:12387:12393	3622703	0	True				
ANR	3623386	Statement	(	370:9:12394:12394	3622703	1	True				
ANR	3623387	Statement	D_PROCFAMILY	370:10:12395:12406	3622703	2	True				
ANR	3623388	Statement	","	370:22:12407:12407	3622703	3	True				
ANR	3623389	Statement	"""Unable to modify cgroup %s for ProcFamily %u."""	371:3:12412:12458	3622703	4	True				
ANR	3623390	Statement	"""  Some cgroup functionality may not work: %u %s\\n"""	372:3:12463:12513	3622703	5	True				
ANR	3623391	Statement	","	372:54:12514:12514	3622703	6	True				
ANR	3623392	Statement	m_cgroup_string	373:3:12519:12533	3622703	7	True				
ANR	3623393	Statement	","	373:18:12534:12534	3622703	8	True				
ANR	3623394	Statement	m_root_pid	373:20:12536:12545	3622703	9	True				
ANR	3623395	Statement	","	373:30:12546:12546	3622703	10	True				
ANR	3623396	Statement	err	373:32:12548:12550	3622703	11	True				
ANR	3623397	Statement	","	373:35:12551:12551	3622703	12	True				
ANR	3623398	Statement	cgroup_strerror	373:37:12553:12567	3622703	13	True				
ANR	3623399	Statement	(	373:52:12568:12568	3622703	14	True				
ANR	3623400	Statement	err	373:53:12569:12571	3622703	15	True				
ANR	3623401	Statement	)	373:56:12572:12572	3622703	16	True				
ANR	3623402	Statement	)	373:57:12573:12573	3622703	17	True				
ANR	3623403	ExpressionStatement		373:58:12574:12574	3622703	18	True				
ANR	3623404	IdentifierDeclStatement	"struct cgroup_controller * mem_controller = cgroup_get_controller ( m_cgroup , MEMORY_CONTROLLER ) ;"	377:1:12640:12734	3622703	19	True				
ANR	3623405	IdentifierDecl	"* mem_controller = cgroup_get_controller ( m_cgroup , MEMORY_CONTROLLER )"		3622703	0					
ANR	3623406	IdentifierDeclType	struct cgroup_controller *		3622703	0					
ANR	3623407	Identifier	mem_controller		3622703	1					
ANR	3623408	AssignmentExpression	"* mem_controller = cgroup_get_controller ( m_cgroup , MEMORY_CONTROLLER )"		3622703	2		=			
ANR	3623409	Identifier	mem_controller		3622703	0					
ANR	3623410	CallExpression	"cgroup_get_controller ( m_cgroup , MEMORY_CONTROLLER )"		3622703	1					
ANR	3623411	Callee	cgroup_get_controller		3622703	0					
ANR	3623412	Identifier	cgroup_get_controller		3622703	0					
ANR	3623413	ArgumentList	m_cgroup		3622703	1					
ANR	3623414	Argument	m_cgroup		3622703	0					
ANR	3623415	Identifier	m_cgroup		3622703	0					
ANR	3623416	Argument	MEMORY_CONTROLLER		3622703	1					
ANR	3623417	Identifier	MEMORY_CONTROLLER		3622703	0					
ANR	3623418	IfStatement	if ( m_cgroup_memory_mounted && m_created_cgroup && ( mem_controller != NULL ) )		3622703	20					
ANR	3623419	Condition	m_cgroup_memory_mounted && m_created_cgroup && ( mem_controller != NULL )	378:5:12741:12811	3622703	0	True				
ANR	3623420	AndExpression	m_cgroup_memory_mounted && m_created_cgroup && ( mem_controller != NULL )		3622703	0		&&			
ANR	3623421	Identifier	m_cgroup_memory_mounted		3622703	0					
ANR	3623422	AndExpression	m_created_cgroup && ( mem_controller != NULL )		3622703	1		&&			
ANR	3623423	Identifier	m_created_cgroup		3622703	0					
ANR	3623424	EqualityExpression	mem_controller != NULL		3622703	1		!=			
ANR	3623425	Identifier	mem_controller		3622703	0					
ANR	3623426	Identifier	NULL		3622703	1					
ANR	3623427	CompoundStatement		134:78:4958:4958	3622703	1					
ANR	3623428	IfStatement	"if ( ( err = cgroup_add_value_bool ( mem_controller , ""memory.use_hierarchy"" , true ) ) )"		3622703	0					
ANR	3623429	Condition	"err = cgroup_add_value_bool ( mem_controller , ""memory.use_hierarchy"" , true )"	379:6:12822:12896	3622703	0	True				
ANR	3623430	AssignmentExpression	"err = cgroup_add_value_bool ( mem_controller , ""memory.use_hierarchy"" , true )"		3622703	0		=			
ANR	3623431	Identifier	err		3622703	0					
ANR	3623432	CallExpression	"cgroup_add_value_bool ( mem_controller , ""memory.use_hierarchy"" , true )"		3622703	1					
ANR	3623433	Callee	cgroup_add_value_bool		3622703	0					
ANR	3623434	Identifier	cgroup_add_value_bool		3622703	0					
ANR	3623435	ArgumentList	mem_controller		3622703	1					
ANR	3623436	Argument	mem_controller		3622703	0					
ANR	3623437	Identifier	mem_controller		3622703	0					
ANR	3623438	Argument	"""memory.use_hierarchy"""		3622703	1					
ANR	3623439	PrimaryExpression	"""memory.use_hierarchy"""		3622703	0					
ANR	3623440	Argument	true		3622703	2					
ANR	3623441	Identifier	true		3622703	0					
ANR	3623442	CompoundStatement		135:83:5043:5043	3622703	1					
ANR	3623443	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""Unable to set hierarchical memory settings for %s (ProcFamily) %u: %u %s\\n"" , m_cgroup_string , m_root_pid , err , cgroup_strerror ( err ) )"	380:3:12904:13067	3622703	0	True				
ANR	3623444	CallExpression	"dprintf ( D_PROCFAMILY , ""Unable to set hierarchical memory settings for %s (ProcFamily) %u: %u %s\\n"" , m_cgroup_string , m_root_pid , err , cgroup_strerror ( err ) )"		3622703	0					
ANR	3623445	Callee	dprintf		3622703	0					
ANR	3623446	Identifier	dprintf		3622703	0					
ANR	3623447	ArgumentList	D_PROCFAMILY		3622703	1					
ANR	3623448	Argument	D_PROCFAMILY		3622703	0					
ANR	3623449	Identifier	D_PROCFAMILY		3622703	0					
ANR	3623450	Argument	"""Unable to set hierarchical memory settings for %s (ProcFamily) %u: %u %s\\n"""		3622703	1					
ANR	3623451	PrimaryExpression	"""Unable to set hierarchical memory settings for %s (ProcFamily) %u: %u %s\\n"""		3622703	0					
ANR	3623452	Argument	m_cgroup_string		3622703	2					
ANR	3623453	Identifier	m_cgroup_string		3622703	0					
ANR	3623454	Argument	m_root_pid		3622703	3					
ANR	3623455	Identifier	m_root_pid		3622703	0					
ANR	3623456	Argument	err		3622703	4					
ANR	3623457	Identifier	err		3622703	0					
ANR	3623458	Argument	cgroup_strerror ( err )		3622703	5					
ANR	3623459	CallExpression	cgroup_strerror ( err )		3622703	0					
ANR	3623460	Callee	cgroup_strerror		3622703	0					
ANR	3623461	Identifier	cgroup_strerror		3622703	0					
ANR	3623462	ArgumentList	err		3622703	1					
ANR	3623463	Argument	err		3622703	0					
ANR	3623464	Identifier	err		3622703	0					
ANR	3623465	ElseStatement	else		3622703	0					
ANR	3623466	CompoundStatement		139:9:5222:5222	3622703	0					
ANR	3623467	IfStatement	if ( ( err = cgroup_modify_cgroup ( m_cgroup ) ) )		3622703	0					
ANR	3623468	Condition	err = cgroup_modify_cgroup ( m_cgroup )	384:7:13087:13124	3622703	0	True				
ANR	3623469	AssignmentExpression	err = cgroup_modify_cgroup ( m_cgroup )		3622703	0		=			
ANR	3623470	Identifier	err		3622703	0					
ANR	3623471	CallExpression	cgroup_modify_cgroup ( m_cgroup )		3622703	1					
ANR	3623472	Callee	cgroup_modify_cgroup		3622703	0					
ANR	3623473	Identifier	cgroup_modify_cgroup		3622703	0					
ANR	3623474	ArgumentList	m_cgroup		3622703	1					
ANR	3623475	Argument	m_cgroup		3622703	0					
ANR	3623476	Identifier	m_cgroup		3622703	0					
ANR	3623477	CompoundStatement		140:47:5271:5271	3622703	1					
ANR	3623478	Statement	dprintf	385:4:13133:13139	3622703	0	True				
ANR	3623479	Statement	(	385:11:13140:13140	3622703	1	True				
ANR	3623480	Statement	D_PROCFAMILY	385:12:13141:13152	3622703	2	True				
ANR	3623481	Statement	","	385:24:13153:13153	3622703	3	True				
ANR	3623482	Statement	"""Unable to enable hierarchical memory accounting for %s """	386:5:13160:13216	3622703	4	True				
ANR	3623483	Statement	"""(ProcFamily %u): %u %s\\n"""	387:5:13223:13248	3622703	5	True				
ANR	3623484	Statement	","	387:31:13249:13249	3622703	6	True				
ANR	3623485	Statement	m_cgroup_string	388:5:13256:13270	3622703	7	True				
ANR	3623486	Statement	","	388:20:13271:13271	3622703	8	True				
ANR	3623487	Statement	m_root_pid	388:22:13273:13282	3622703	9	True				
ANR	3623488	Statement	","	388:32:13283:13283	3622703	10	True				
ANR	3623489	Statement	err	388:34:13285:13287	3622703	11	True				
ANR	3623490	Statement	","	388:37:13288:13288	3622703	12	True				
ANR	3623491	Statement	cgroup_strerror	388:39:13290:13304	3622703	13	True				
ANR	3623492	Statement	(	388:54:13305:13305	3622703	14	True				
ANR	3623493	Statement	err	388:55:13306:13308	3622703	15	True				
ANR	3623494	Statement	)	388:58:13309:13309	3622703	16	True				
ANR	3623495	Statement	)	388:59:13310:13310	3622703	17	True				
ANR	3623496	ExpressionStatement		388:60:13311:13311	3622703	18	True				
ANR	3623497	IdentifierDeclStatement	ProcFamilyMember * member = m_member_list ;	394:1:13402:13442	3622703	21	True				
ANR	3623498	IdentifierDecl	* member = m_member_list		3622703	0					
ANR	3623499	IdentifierDeclType	ProcFamilyMember *		3622703	0					
ANR	3623500	Identifier	member		3622703	1					
ANR	3623501	AssignmentExpression	* member = m_member_list		3622703	2		=			
ANR	3623502	Identifier	m_member_list		3622703	0					
ANR	3623503	Identifier	m_member_list		3622703	1					
ANR	3623504	WhileStatement	while ( member != NULL )		3622703	22					
ANR	3623505	Condition	member != NULL	395:8:13452:13465	3622703	0	True				
ANR	3623506	EqualityExpression	member != NULL		3622703	0		!=			
ANR	3623507	Identifier	member		3622703	0					
ANR	3623508	Identifier	NULL		3622703	1					
ANR	3623509	CompoundStatement		151:24:5612:5612	3622703	1					
ANR	3623510	ExpressionStatement	migrate_to_cgroup ( member -> get_proc_info ( ) -> pid )	396:2:13472:13519	3622703	0	True				
ANR	3623511	CallExpression	migrate_to_cgroup ( member -> get_proc_info ( ) -> pid )		3622703	0					
ANR	3623512	Callee	migrate_to_cgroup		3622703	0					
ANR	3623513	Identifier	migrate_to_cgroup		3622703	0					
ANR	3623514	ArgumentList	member -> get_proc_info ( ) -> pid		3622703	1					
ANR	3623515	Argument	member -> get_proc_info ( ) -> pid		3622703	0					
ANR	3623516	PtrMemberAccess	member -> get_proc_info ( ) -> pid		3622703	0					
ANR	3623517	CallExpression	member -> get_proc_info ( )		3622703	0					
ANR	3623518	Callee	member -> get_proc_info		3622703	0					
ANR	3623519	PtrMemberAccess	member -> get_proc_info		3622703	0					
ANR	3623520	Identifier	member		3622703	0					
ANR	3623521	Identifier	get_proc_info		3622703	1					
ANR	3623522	ArgumentList			3622703	1					
ANR	3623523	Identifier	pid		3622703	1					
ANR	3623524	ExpressionStatement	member = member -> m_next	397:2:13523:13546	3622703	1	True				
ANR	3623525	AssignmentExpression	member = member -> m_next		3622703	0		=			
ANR	3623526	Identifier	member		3622703	0					
ANR	3623527	PtrMemberAccess	member -> m_next		3622703	1					
ANR	3623528	Identifier	member		3622703	0					
ANR	3623529	Identifier	m_next		3622703	1					
ANR	3623530	ReturnStatement	return 0 ;	400:1:13553:13561	3622703	23	True				
ANR	3623531	PrimaryExpression	0		3622703	0					
ANR	3623532	ReturnType	int		3622703	1					
ANR	3623533	Identifier	ProcFamily :: set_cgroup		3622703	2					
ANR	3623534	ParameterList	const char * cgroup		3622703	3					
ANR	3623535	Parameter	const char * cgroup	244:23:7834:7852	3622703	0	True				
ANR	3623536	ParameterType	const char *		3622703	0					
ANR	3623537	Identifier	cgroup		3622703	1					
ANR	3623538	CFGEntryNode	ENTRY		3622703		True				
ANR	3623539	CFGExitNode	EXIT		3622703		True				
ANR	3623540	Symbol	m_cgroup_block_mounted		3622703						
ANR	3623541	Symbol	m_cgroup_initialized		3622703						
ANR	3623542	Symbol	info . hierarchy		3622703						
ANR	3623543	Symbol	FREEZE_CONTROLLER		3622703						
ANR	3623544	Symbol	CPUACCT_CONTROLLER		3622703						
ANR	3623545	Symbol	info . name		3622703						
ANR	3623546	Symbol	strlen		3622703						
ANR	3623547	Symbol	member -> get_proc_info		3622703						
ANR	3623548	Symbol	cgroup_strerror		3622703						
ANR	3623549	Symbol	* * member		3622703						
ANR	3623550	Symbol	info		3622703						
ANR	3623551	Symbol	member -> get_proc_info ( ) -> pid		3622703						
ANR	3623552	Symbol	strcmp		3622703						
ANR	3623553	Symbol	ret		3622703						
ANR	3623554	Symbol	cgroup_add_controller		3622703						
ANR	3623555	Symbol	NULL		3622703						
ANR	3623556	Symbol	& info		3622703						
ANR	3623557	Symbol	m_created_cgroup		3622703						
ANR	3623558	Symbol	cgroup_get_cgroup		3622703						
ANR	3623559	Symbol	m_cgroup_memory_mounted		3622703						
ANR	3623560	Symbol	handle		3622703						
ANR	3623561	Symbol	cgroup_new_cgroup		3622703						
ANR	3623562	Symbol	* member		3622703						
ANR	3623563	Symbol	cgroup		3622703						
ANR	3623564	Symbol	cgroup_get_all_controller_begin		3622703						
ANR	3623565	Symbol	m_cgroup		3622703						
ANR	3623566	Symbol	changed_cgroup		3622703						
ANR	3623567	Symbol	m_cgroup_freezer_mounted		3622703						
ANR	3623568	Symbol	m_cgroup_cpuacct_mounted		3622703						
ANR	3623569	Symbol	true		3622703						
ANR	3623570	Symbol	cgroup_create_cgroup		3622703						
ANR	3623571	Symbol	cgroup_get_all_controller_next		3622703						
ANR	3623572	Symbol	ECGROUPNOTEXIST		3622703						
ANR	3623573	Symbol	D_PROCFAMILY		3622703						
ANR	3623574	Symbol	MEMORY_CONTROLLER		3622703						
ANR	3623575	Symbol	cgroup_get_controller		3622703						
ANR	3623576	Symbol	& handle		3622703						
ANR	3623577	Symbol	cgroup_len		3622703						
ANR	3623578	Symbol	member		3622703						
ANR	3623579	Symbol	ECGEOF		3622703						
ANR	3623580	Symbol	& m_cgroup		3622703						
ANR	3623581	Symbol	m_member_list		3622703						
ANR	3623582	Symbol	malloc		3622703						
ANR	3623583	Symbol	BLOCK_CONTROLLER		3622703						
ANR	3623584	Symbol	err		3622703						
ANR	3623585	Symbol	mem_controller		3622703						
ANR	3623586	Symbol	false		3622703						
ANR	3623587	Symbol	D_ALWAYS		3622703						
ANR	3623588	Symbol	has_cgroup		3622703						
ANR	3623589	Symbol	member -> m_next		3622703						
ANR	3623590	Symbol	cgroup_modify_cgroup		3622703						
ANR	3623591	Symbol	* member -> get_proc_info		3622703						
ANR	3623592	Symbol	cgroup_add_value_bool		3622703						
ANR	3623593	Symbol	m_cgroup_string		3622703						
ANR	3623594	Symbol	m_root_pid		3622703						
ANR	3623595	Function	ProcFamily :: freezer_cgroup	403:0:13566:15268							
ANR	3623596	FunctionDef	ProcFamily :: freezer_cgroup (const char * state)		3623595	0					
ANR	3623597	CompoundStatement		405:0:13617:15268	3623595	0					
ANR	3623598	IdentifierDeclStatement	int err = 0 ;	411:1:13808:13819	3623595	0	True				
ANR	3623599	IdentifierDecl	err = 0		3623595	0					
ANR	3623600	IdentifierDeclType	int		3623595	0					
ANR	3623601	Identifier	err		3623595	1					
ANR	3623602	AssignmentExpression	err = 0		3623595	2		=			
ANR	3623603	Identifier	err		3623595	0					
ANR	3623604	PrimaryExpression	0		3623595	1					
ANR	3623605	IdentifierDeclStatement	struct cgroup_controller * freezer ;	412:1:13822:13855	3623595	1	True				
ANR	3623606	IdentifierDecl	* freezer		3623595	0					
ANR	3623607	IdentifierDeclType	struct cgroup_controller *		3623595	0					
ANR	3623608	Identifier	freezer		3623595	1					
ANR	3623609	IdentifierDeclStatement	struct cgroup * cgroup = cgroup_new_cgroup ( m_cgroup_string ) ;	413:1:13858:13916	3623595	2	True				
ANR	3623610	IdentifierDecl	* cgroup = cgroup_new_cgroup ( m_cgroup_string )		3623595	0					
ANR	3623611	IdentifierDeclType	struct cgroup *		3623595	0					
ANR	3623612	Identifier	cgroup		3623595	1					
ANR	3623613	AssignmentExpression	* cgroup = cgroup_new_cgroup ( m_cgroup_string )		3623595	2		=			
ANR	3623614	Identifier	cgroup		3623595	0					
ANR	3623615	CallExpression	cgroup_new_cgroup ( m_cgroup_string )		3623595	1					
ANR	3623616	Callee	cgroup_new_cgroup		3623595	0					
ANR	3623617	Identifier	cgroup_new_cgroup		3623595	0					
ANR	3623618	ArgumentList	m_cgroup_string		3623595	1					
ANR	3623619	Argument	m_cgroup_string		3623595	0					
ANR	3623620	Identifier	m_cgroup_string		3623595	0					
ANR	3623621	ExpressionStatement	ASSERT ( cgroup != NULL )	414:1:13919:13942	3623595	3	True				
ANR	3623622	CallExpression	ASSERT ( cgroup != NULL )		3623595	0					
ANR	3623623	Callee	ASSERT		3623595	0					
ANR	3623624	Identifier	ASSERT		3623595	0					
ANR	3623625	ArgumentList	cgroup != NULL		3623595	1					
ANR	3623626	Argument	cgroup != NULL		3623595	0					
ANR	3623627	EqualityExpression	cgroup != NULL		3623595	0		!=			
ANR	3623628	Identifier	cgroup		3623595	0					
ANR	3623629	Identifier	NULL		3623595	1					
ANR	3623630	IfStatement	if ( ! m_cgroup_freezer_mounted )		3623595	4					
ANR	3623631	Condition	! m_cgroup_freezer_mounted	416:5:13950:13974	3623595	0	True				
ANR	3623632	UnaryOperationExpression	! m_cgroup_freezer_mounted		3623595	0					
ANR	3623633	UnaryOperator	!		3623595	0					
ANR	3623634	Identifier	m_cgroup_freezer_mounted		3623595	1					
ANR	3623635	CompoundStatement		12:32:359:359	3623595	1					
ANR	3623636	ExpressionStatement	err = 1	417:2:13981:13988	3623595	0	True				
ANR	3623637	AssignmentExpression	err = 1		3623595	0		=			
ANR	3623638	Identifier	err		3623595	0					
ANR	3623639	PrimaryExpression	1		3623595	1					
ANR	3623640	GotoStatement	goto ret ;	418:2:13992:14000	3623595	1	True				
ANR	3623641	Identifier	ret		3623595	0					
ANR	3623642	ExpressionStatement	"freezer = cgroup_add_controller ( cgroup , FREEZE_CONTROLLER )"	421:1:14007:14065	3623595	5	True				
ANR	3623643	AssignmentExpression	"freezer = cgroup_add_controller ( cgroup , FREEZE_CONTROLLER )"		3623595	0		=			
ANR	3623644	Identifier	freezer		3623595	0					
ANR	3623645	CallExpression	"cgroup_add_controller ( cgroup , FREEZE_CONTROLLER )"		3623595	1					
ANR	3623646	Callee	cgroup_add_controller		3623595	0					
ANR	3623647	Identifier	cgroup_add_controller		3623595	0					
ANR	3623648	ArgumentList	cgroup		3623595	1					
ANR	3623649	Argument	cgroup		3623595	0					
ANR	3623650	Identifier	cgroup		3623595	0					
ANR	3623651	Argument	FREEZE_CONTROLLER		3623595	1					
ANR	3623652	Identifier	FREEZE_CONTROLLER		3623595	0					
ANR	3623653	IfStatement	if ( NULL == freezer )		3623595	6					
ANR	3623654	Condition	NULL == freezer	422:5:14072:14086	3623595	0	True				
ANR	3623655	EqualityExpression	NULL == freezer		3623595	0		==			
ANR	3623656	Identifier	NULL		3623595	0					
ANR	3623657	Identifier	freezer		3623595	1					
ANR	3623658	CompoundStatement		18:22:471:471	3623595	1					
ANR	3623659	Statement	dprintf	423:2:14093:14099	3623595	0	True				
ANR	3623660	Statement	(	423:9:14100:14100	3623595	1	True				
ANR	3623661	Statement	D_ALWAYS	423:10:14101:14108	3623595	2	True				
ANR	3623662	Statement	","	423:18:14109:14109	3623595	3	True				
ANR	3623663	Statement	"""Unable to access the freezer subsystem for ProcFamily %u """	424:3:14114:14172	3623595	4	True				
ANR	3623664	Statement	"""for cgroup %s\\n"""	425:3:14177:14193	3623595	5	True				
ANR	3623665	Statement	","	425:20:14194:14194	3623595	6	True				
ANR	3623666	Statement	m_root_pid	426:3:14199:14208	3623595	7	True				
ANR	3623667	Statement	","	426:13:14209:14209	3623595	8	True				
ANR	3623668	Statement	m_cgroup_string	426:15:14211:14225	3623595	9	True				
ANR	3623669	Statement	)	426:30:14226:14226	3623595	10	True				
ANR	3623670	ExpressionStatement		426:31:14227:14227	3623595	11	True				
ANR	3623671	ExpressionStatement	err = 2	427:2:14231:14238	3623595	12	True				
ANR	3623672	AssignmentExpression	err = 2		3623595	0		=			
ANR	3623673	Identifier	err		3623595	0					
ANR	3623674	PrimaryExpression	2		3623595	1					
ANR	3623675	GotoStatement	goto ret ;	428:2:14242:14250	3623595	13	True				
ANR	3623676	Identifier	ret		3623595	0					
ANR	3623677	IfStatement	"if ( ( err = cgroup_add_value_string ( freezer , ""freezer.state"" , state ) ) )"		3623595	7					
ANR	3623678	Condition	"err = cgroup_add_value_string ( freezer , ""freezer.state"" , state )"	431:5:14261:14324	3623595	0	True				
ANR	3623679	AssignmentExpression	"err = cgroup_add_value_string ( freezer , ""freezer.state"" , state )"		3623595	0		=			
ANR	3623680	Identifier	err		3623595	0					
ANR	3623681	CallExpression	"cgroup_add_value_string ( freezer , ""freezer.state"" , state )"		3623595	1					
ANR	3623682	Callee	cgroup_add_value_string		3623595	0					
ANR	3623683	Identifier	cgroup_add_value_string		3623595	0					
ANR	3623684	ArgumentList	freezer		3623595	1					
ANR	3623685	Argument	freezer		3623595	0					
ANR	3623686	Identifier	freezer		3623595	0					
ANR	3623687	Argument	"""freezer.state"""		3623595	1					
ANR	3623688	PrimaryExpression	"""freezer.state"""		3623595	0					
ANR	3623689	Argument	state		3623595	2					
ANR	3623690	Identifier	state		3623595	0					
ANR	3623691	CompoundStatement		27:71:709:709	3623595	1					
ANR	3623692	ExpressionStatement	"dprintf ( D_ALWAYS , ""Unable to write %s to freezer for cgroup %s (ProcFamily %u). %u %s\\n"" , state , m_cgroup_string , m_root_pid , err , cgroup_strerror ( err ) )"	432:2:14331:14489	3623595	0	True				
ANR	3623693	CallExpression	"dprintf ( D_ALWAYS , ""Unable to write %s to freezer for cgroup %s (ProcFamily %u). %u %s\\n"" , state , m_cgroup_string , m_root_pid , err , cgroup_strerror ( err ) )"		3623595	0					
ANR	3623694	Callee	dprintf		3623595	0					
ANR	3623695	Identifier	dprintf		3623595	0					
ANR	3623696	ArgumentList	D_ALWAYS		3623595	1					
ANR	3623697	Argument	D_ALWAYS		3623595	0					
ANR	3623698	Identifier	D_ALWAYS		3623595	0					
ANR	3623699	Argument	"""Unable to write %s to freezer for cgroup %s (ProcFamily %u). %u %s\\n"""		3623595	1					
ANR	3623700	PrimaryExpression	"""Unable to write %s to freezer for cgroup %s (ProcFamily %u). %u %s\\n"""		3623595	0					
ANR	3623701	Argument	state		3623595	2					
ANR	3623702	Identifier	state		3623595	0					
ANR	3623703	Argument	m_cgroup_string		3623595	3					
ANR	3623704	Identifier	m_cgroup_string		3623595	0					
ANR	3623705	Argument	m_root_pid		3623595	4					
ANR	3623706	Identifier	m_root_pid		3623595	0					
ANR	3623707	Argument	err		3623595	5					
ANR	3623708	Identifier	err		3623595	0					
ANR	3623709	Argument	cgroup_strerror ( err )		3623595	6					
ANR	3623710	CallExpression	cgroup_strerror ( err )		3623595	0					
ANR	3623711	Callee	cgroup_strerror		3623595	0					
ANR	3623712	Identifier	cgroup_strerror		3623595	0					
ANR	3623713	ArgumentList	err		3623595	1					
ANR	3623714	Argument	err		3623595	0					
ANR	3623715	Identifier	err		3623595	0					
ANR	3623716	ExpressionStatement	err = 3	435:2:14493:14500	3623595	1	True				
ANR	3623717	AssignmentExpression	err = 3		3623595	0		=			
ANR	3623718	Identifier	err		3623595	0					
ANR	3623719	PrimaryExpression	3		3623595	1					
ANR	3623720	GotoStatement	goto ret ;	436:2:14504:14512	3623595	2	True				
ANR	3623721	Identifier	ret		3623595	0					
ANR	3623722	IfStatement	if ( ( err = cgroup_modify_cgroup ( cgroup ) ) )		3623595	8					
ANR	3623723	Condition	err = cgroup_modify_cgroup ( cgroup )	438:5:14522:14557	3623595	0	True				
ANR	3623724	AssignmentExpression	err = cgroup_modify_cgroup ( cgroup )		3623595	0		=			
ANR	3623725	Identifier	err		3623595	0					
ANR	3623726	CallExpression	cgroup_modify_cgroup ( cgroup )		3623595	1					
ANR	3623727	Callee	cgroup_modify_cgroup		3623595	0					
ANR	3623728	Identifier	cgroup_modify_cgroup		3623595	0					
ANR	3623729	ArgumentList	cgroup		3623595	1					
ANR	3623730	Argument	cgroup		3623595	0					
ANR	3623731	Identifier	cgroup		3623595	0					
ANR	3623732	CompoundStatement		34:43:942:942	3623595	1					
ANR	3623733	IfStatement	if ( ECGROUPVALUENOTEXIST == err )		3623595	0					
ANR	3623734	Condition	ECGROUPVALUENOTEXIST == err	439:6:14568:14594	3623595	0	True				
ANR	3623735	EqualityExpression	ECGROUPVALUENOTEXIST == err		3623595	0		==			
ANR	3623736	Identifier	ECGROUPVALUENOTEXIST		3623595	0					
ANR	3623737	Identifier	err		3623595	1					
ANR	3623738	CompoundStatement		35:35:979:979	3623595	1					
ANR	3623739	Statement	dprintf	440:3:14602:14608	3623595	0	True				
ANR	3623740	Statement	(	440:10:14609:14609	3623595	1	True				
ANR	3623741	Statement	D_ALWAYS	440:11:14610:14617	3623595	2	True				
ANR	3623742	Statement	","	440:19:14618:14618	3623595	3	True				
ANR	3623743	Statement	"""Does not appear condor_procd is allowed to freeze"""	441:4:14624:14674	3623595	4	True				
ANR	3623744	Statement	""" cgroup %s (ProcFamily %u).\\n"""	442:4:14680:14710	3623595	5	True				
ANR	3623745	Statement	","	442:35:14711:14711	3623595	6	True				
ANR	3623746	Statement	m_cgroup_string	443:4:14717:14731	3623595	7	True				
ANR	3623747	Statement	","	443:19:14732:14732	3623595	8	True				
ANR	3623748	Statement	m_root_pid	443:21:14734:14743	3623595	9	True				
ANR	3623749	Statement	)	443:31:14744:14744	3623595	10	True				
ANR	3623750	ExpressionStatement		443:32:14745:14745	3623595	11	True				
ANR	3623751	ElseStatement	else		3623595	0					
ANR	3623752	IfStatement	if ( ( ECGOTHER == err ) && ( EBUSY == cgroup_get_last_errno ( ) ) )		3623595	0					
ANR	3623753	Condition	( ECGOTHER == err ) && ( EBUSY == cgroup_get_last_errno ( ) )	444:13:14760:14814	3623595	0	True				
ANR	3623754	AndExpression	( ECGOTHER == err ) && ( EBUSY == cgroup_get_last_errno ( ) )		3623595	0		&&			
ANR	3623755	EqualityExpression	ECGOTHER == err		3623595	0		==			
ANR	3623756	Identifier	ECGOTHER		3623595	0					
ANR	3623757	Identifier	err		3623595	1					
ANR	3623758	EqualityExpression	EBUSY == cgroup_get_last_errno ( )		3623595	1		==			
ANR	3623759	Identifier	EBUSY		3623595	0					
ANR	3623760	CallExpression	cgroup_get_last_errno ( )		3623595	1					
ANR	3623761	Callee	cgroup_get_last_errno		3623595	0					
ANR	3623762	Identifier	cgroup_get_last_errno		3623595	0					
ANR	3623763	ArgumentList			3623595	1					
ANR	3623764	CompoundStatement		40:70:1199:1199	3623595	1					
ANR	3623765	Statement	dprintf	445:3:14822:14828	3623595	0	True				
ANR	3623766	Statement	(	445:10:14829:14829	3623595	1	True				
ANR	3623767	Statement	D_ALWAYS	445:11:14830:14837	3623595	2	True				
ANR	3623768	Statement	","	445:19:14838:14838	3623595	3	True				
ANR	3623769	Statement	"""Kernel was unable to freeze cgroup %s """	445:21:14840:14879	3623595	4	True				
ANR	3623770	Statement	"""(ProcFamily %u) due to process state; signal delivery """	446:4:14885:14940	3623595	5	True				
ANR	3623771	Statement	"""won't be atomic\\n"""	447:4:14946:14964	3623595	6	True				
ANR	3623772	Statement	","	447:23:14965:14965	3623595	7	True				
ANR	3623773	Statement	m_cgroup_string	447:25:14967:14981	3623595	8	True				
ANR	3623774	Statement	","	447:40:14982:14982	3623595	9	True				
ANR	3623775	Statement	m_root_pid	447:42:14984:14993	3623595	10	True				
ANR	3623776	Statement	)	447:52:14994:14994	3623595	11	True				
ANR	3623777	ExpressionStatement		447:53:14995:14995	3623595	12	True				
ANR	3623778	ExpressionStatement	err = - EBUSY	448:3:15000:15012	3623595	13	True				
ANR	3623779	AssignmentExpression	err = - EBUSY		3623595	0		=			
ANR	3623780	Identifier	err		3623595	0					
ANR	3623781	UnaryOperationExpression	- EBUSY		3623595	1					
ANR	3623782	UnaryOperator	-		3623595	0					
ANR	3623783	Identifier	EBUSY		3623595	1					
ANR	3623784	ElseStatement	else		3623595	0					
ANR	3623785	CompoundStatement		45:9:1405:1405	3623595	0					
ANR	3623786	ExpressionStatement	"dprintf ( D_ALWAYS , ""Unable to commit freezer change %s for cgroup %s (ProcFamily %u). %u %s\\n"" , state , m_cgroup_string , m_root_pid , err , cgroup_strerror ( err ) )"	450:3:15028:15193	3623595	0	True				
ANR	3623787	CallExpression	"dprintf ( D_ALWAYS , ""Unable to commit freezer change %s for cgroup %s (ProcFamily %u). %u %s\\n"" , state , m_cgroup_string , m_root_pid , err , cgroup_strerror ( err ) )"		3623595	0					
ANR	3623788	Callee	dprintf		3623595	0					
ANR	3623789	Identifier	dprintf		3623595	0					
ANR	3623790	ArgumentList	D_ALWAYS		3623595	1					
ANR	3623791	Argument	D_ALWAYS		3623595	0					
ANR	3623792	Identifier	D_ALWAYS		3623595	0					
ANR	3623793	Argument	"""Unable to commit freezer change %s for cgroup %s (ProcFamily %u). %u %s\\n"""		3623595	1					
ANR	3623794	PrimaryExpression	"""Unable to commit freezer change %s for cgroup %s (ProcFamily %u). %u %s\\n"""		3623595	0					
ANR	3623795	Argument	state		3623595	2					
ANR	3623796	Identifier	state		3623595	0					
ANR	3623797	Argument	m_cgroup_string		3623595	3					
ANR	3623798	Identifier	m_cgroup_string		3623595	0					
ANR	3623799	Argument	m_root_pid		3623595	4					
ANR	3623800	Identifier	m_root_pid		3623595	0					
ANR	3623801	Argument	err		3623595	5					
ANR	3623802	Identifier	err		3623595	0					
ANR	3623803	Argument	cgroup_strerror ( err )		3623595	6					
ANR	3623804	CallExpression	cgroup_strerror ( err )		3623595	0					
ANR	3623805	Callee	cgroup_strerror		3623595	0					
ANR	3623806	Identifier	cgroup_strerror		3623595	0					
ANR	3623807	ArgumentList	err		3623595	1					
ANR	3623808	Argument	err		3623595	0					
ANR	3623809	Identifier	err		3623595	0					
ANR	3623810	ExpressionStatement	err = 4	454:2:15201:15208	3623595	1	True				
ANR	3623811	AssignmentExpression	err = 4		3623595	0		=			
ANR	3623812	Identifier	err		3623595	0					
ANR	3623813	PrimaryExpression	4		3623595	1					
ANR	3623814	GotoStatement	goto ret ;	455:2:15212:15220	3623595	2	True				
ANR	3623815	Identifier	ret		3623595	0					
ANR	3623816	Label	ret :	458:1:15227:15230	3623595	9	True				
ANR	3623817	Identifier	ret		3623595	0					
ANR	3623818	ExpressionStatement	cgroup_free ( & cgroup )	459:1:15233:15253	3623595	10	True				
ANR	3623819	CallExpression	cgroup_free ( & cgroup )		3623595	0					
ANR	3623820	Callee	cgroup_free		3623595	0					
ANR	3623821	Identifier	cgroup_free		3623595	0					
ANR	3623822	ArgumentList	& cgroup		3623595	1					
ANR	3623823	Argument	& cgroup		3623595	0					
ANR	3623824	UnaryOperationExpression	& cgroup		3623595	0					
ANR	3623825	UnaryOperator	&		3623595	0					
ANR	3623826	Identifier	cgroup		3623595	1					
ANR	3623827	ReturnStatement	return err ;	460:1:15256:15266	3623595	11	True				
ANR	3623828	Identifier	err		3623595	0					
ANR	3623829	ReturnType	int		3623595	1					
ANR	3623830	Identifier	ProcFamily :: freezer_cgroup		3623595	2					
ANR	3623831	ParameterList	const char * state		3623595	3					
ANR	3623832	Parameter	const char * state	404:27:13597:13614	3623595	0	True				
ANR	3623833	ParameterType	const char *		3623595	0					
ANR	3623834	Identifier	state		3623595	1					
ANR	3623835	CFGEntryNode	ENTRY		3623595		True				
ANR	3623836	CFGExitNode	EXIT		3623595		True				
ANR	3623837	Symbol	cgroup_add_controller		3623595						
ANR	3623838	Symbol	NULL		3623595						
ANR	3623839	Symbol	err		3623595						
ANR	3623840	Symbol	cgroup_add_value_string		3623595						
ANR	3623841	Symbol	D_ALWAYS		3623595						
ANR	3623842	Symbol	cgroup_new_cgroup		3623595						
ANR	3623843	Symbol	FREEZE_CONTROLLER		3623595						
ANR	3623844	Symbol	cgroup		3623595						
ANR	3623845	Symbol	cgroup_modify_cgroup		3623595						
ANR	3623846	Symbol	m_cgroup_freezer_mounted		3623595						
ANR	3623847	Symbol	& cgroup		3623595						
ANR	3623848	Symbol	cgroup_strerror		3623595						
ANR	3623849	Symbol	EBUSY		3623595						
ANR	3623850	Symbol	freezer		3623595						
ANR	3623851	Symbol	state		3623595						
ANR	3623852	Symbol	ECGROUPVALUENOTEXIST		3623595						
ANR	3623853	Symbol	m_cgroup_string		3623595						
ANR	3623854	Symbol	ECGOTHER		3623595						
ANR	3623855	Symbol	m_root_pid		3623595						
ANR	3623856	Symbol	cgroup_get_last_errno		3623595						
ANR	3623857	Function	ProcFamily :: spree_cgroup	463:0:15271:16387							
ANR	3623858	FunctionDef	ProcFamily :: spree_cgroup (int sig)		3623857	0					
ANR	3623859	CompoundStatement		465:0:15309:16387	3623857	0					
ANR	3623860	IdentifierDeclStatement	int err = freezer_cgroup ( FROZEN ) ;	472:1:15565:15597	3623857	0	True				
ANR	3623861	IdentifierDecl	err = freezer_cgroup ( FROZEN )		3623857	0					
ANR	3623862	IdentifierDeclType	int		3623857	0					
ANR	3623863	Identifier	err		3623857	1					
ANR	3623864	AssignmentExpression	err = freezer_cgroup ( FROZEN )		3623857	2		=			
ANR	3623865	Identifier	err		3623857	0					
ANR	3623866	CallExpression	freezer_cgroup ( FROZEN )		3623857	1					
ANR	3623867	Callee	freezer_cgroup		3623857	0					
ANR	3623868	Identifier	freezer_cgroup		3623857	0					
ANR	3623869	ArgumentList	FROZEN		3623857	1					
ANR	3623870	Argument	FROZEN		3623857	0					
ANR	3623871	Identifier	FROZEN		3623857	0					
ANR	3623872	IfStatement	if ( ( err != 0 ) && ( err != - EBUSY ) )		3623857	1					
ANR	3623873	Condition	( err != 0 ) && ( err != - EBUSY )	473:5:15604:15632	3623857	0	True				
ANR	3623874	AndExpression	( err != 0 ) && ( err != - EBUSY )		3623857	0		&&			
ANR	3623875	EqualityExpression	err != 0		3623857	0		!=			
ANR	3623876	Identifier	err		3623857	0					
ANR	3623877	PrimaryExpression	0		3623857	1					
ANR	3623878	EqualityExpression	err != - EBUSY		3623857	1		!=			
ANR	3623879	Identifier	err		3623857	0					
ANR	3623880	UnaryOperationExpression	- EBUSY		3623857	1					
ANR	3623881	UnaryOperator	-		3623857	0					
ANR	3623882	Identifier	EBUSY		3623857	1					
ANR	3623883	CompoundStatement		9:36:325:325	3623857	1					
ANR	3623884	ReturnStatement	return err ;	474:2:15639:15649	3623857	0	True				
ANR	3623885	Identifier	err		3623857	0					
ANR	3623886	ExpressionStatement	ASSERT ( m_cgroup != NULL )	477:1:15656:15681	3623857	2	True				
ANR	3623887	CallExpression	ASSERT ( m_cgroup != NULL )		3623857	0					
ANR	3623888	Callee	ASSERT		3623857	0					
ANR	3623889	Identifier	ASSERT		3623857	0					
ANR	3623890	ArgumentList	m_cgroup != NULL		3623857	1					
ANR	3623891	Argument	m_cgroup != NULL		3623857	0					
ANR	3623892	EqualityExpression	m_cgroup != NULL		3623857	0		!=			
ANR	3623893	Identifier	m_cgroup		3623857	0					
ANR	3623894	Identifier	NULL		3623857	1					
ANR	3623895	ExpressionStatement	cgroup_get_cgroup ( m_cgroup )	478:1:15684:15711	3623857	3	True				
ANR	3623896	CallExpression	cgroup_get_cgroup ( m_cgroup )		3623857	0					
ANR	3623897	Callee	cgroup_get_cgroup		3623857	0					
ANR	3623898	Identifier	cgroup_get_cgroup		3623857	0					
ANR	3623899	ArgumentList	m_cgroup		3623857	1					
ANR	3623900	Argument	m_cgroup		3623857	0					
ANR	3623901	Identifier	m_cgroup		3623857	0					
ANR	3623902	IdentifierDeclStatement	void * * handle = ( void * * ) malloc ( sizeof ( void * ) ) ;	480:1:15715:15761	3623857	4	True				
ANR	3623903	IdentifierDecl	* * handle = ( void * * ) malloc ( sizeof ( void * ) )		3623857	0					
ANR	3623904	IdentifierDeclType	void * *		3623857	0					
ANR	3623905	Identifier	handle		3623857	1					
ANR	3623906	AssignmentExpression	* * handle = ( void * * ) malloc ( sizeof ( void * ) )		3623857	2		=			
ANR	3623907	Identifier	handle		3623857	0					
ANR	3623908	CastExpression	( void * * ) malloc ( sizeof ( void * ) )		3623857	1					
ANR	3623909	CastTarget	void * *		3623857	0					
ANR	3623910	CallExpression	malloc ( sizeof ( void * ) )		3623857	1					
ANR	3623911	Callee	malloc		3623857	0					
ANR	3623912	Identifier	malloc		3623857	0					
ANR	3623913	ArgumentList	sizeof ( void * )		3623857	1					
ANR	3623914	Argument	sizeof ( void * )		3623857	0					
ANR	3623915	SizeofExpression	sizeof ( void * )		3623857	0					
ANR	3623916	Sizeof	sizeof		3623857	0					
ANR	3623917	SizeofOperand	void *		3623857	1					
ANR	3623918	ExpressionStatement	ASSERT ( handle != NULL )	481:1:15764:15787	3623857	5	True				
ANR	3623919	CallExpression	ASSERT ( handle != NULL )		3623857	0					
ANR	3623920	Callee	ASSERT		3623857	0					
ANR	3623921	Identifier	ASSERT		3623857	0					
ANR	3623922	ArgumentList	handle != NULL		3623857	1					
ANR	3623923	Argument	handle != NULL		3623857	0					
ANR	3623924	EqualityExpression	handle != NULL		3623857	0		!=			
ANR	3623925	Identifier	handle		3623857	0					
ANR	3623926	Identifier	NULL		3623857	1					
ANR	3623927	IdentifierDeclStatement	pid_t pid ;	482:1:15790:15799	3623857	6	True				
ANR	3623928	IdentifierDecl	pid		3623857	0					
ANR	3623929	IdentifierDeclType	pid_t		3623857	0					
ANR	3623930	Identifier	pid		3623857	1					
ANR	3623931	ExpressionStatement	ASSERT ( m_cgroup_string != NULL )	483:1:15802:15834	3623857	7	True				
ANR	3623932	CallExpression	ASSERT ( m_cgroup_string != NULL )		3623857	0					
ANR	3623933	Callee	ASSERT		3623857	0					
ANR	3623934	Identifier	ASSERT		3623857	0					
ANR	3623935	ArgumentList	m_cgroup_string != NULL		3623857	1					
ANR	3623936	Argument	m_cgroup_string != NULL		3623857	0					
ANR	3623937	EqualityExpression	m_cgroup_string != NULL		3623857	0		!=			
ANR	3623938	Identifier	m_cgroup_string		3623857	0					
ANR	3623939	Identifier	NULL		3623857	1					
ANR	3623940	ExpressionStatement	"err = cgroup_get_task_begin ( m_cgroup_string , FREEZE_CONTROLLER , handle , & pid )"	484:1:15837:15914	3623857	8	True				
ANR	3623941	AssignmentExpression	"err = cgroup_get_task_begin ( m_cgroup_string , FREEZE_CONTROLLER , handle , & pid )"		3623857	0		=			
ANR	3623942	Identifier	err		3623857	0					
ANR	3623943	CallExpression	"cgroup_get_task_begin ( m_cgroup_string , FREEZE_CONTROLLER , handle , & pid )"		3623857	1					
ANR	3623944	Callee	cgroup_get_task_begin		3623857	0					
ANR	3623945	Identifier	cgroup_get_task_begin		3623857	0					
ANR	3623946	ArgumentList	m_cgroup_string		3623857	1					
ANR	3623947	Argument	m_cgroup_string		3623857	0					
ANR	3623948	Identifier	m_cgroup_string		3623857	0					
ANR	3623949	Argument	FREEZE_CONTROLLER		3623857	1					
ANR	3623950	Identifier	FREEZE_CONTROLLER		3623857	0					
ANR	3623951	Argument	handle		3623857	2					
ANR	3623952	Identifier	handle		3623857	0					
ANR	3623953	Argument	& pid		3623857	3					
ANR	3623954	UnaryOperationExpression	& pid		3623857	0					
ANR	3623955	UnaryOperator	&		3623857	0					
ANR	3623956	Identifier	pid		3623857	1					
ANR	3623957	IfStatement	if ( ( err > 0 ) && ( err != ECGEOF ) )		3623857	9					
ANR	3623958	Condition	( err > 0 ) && ( err != ECGEOF )	485:5:15921:15948	3623857	0	True				
ANR	3623959	AndExpression	( err > 0 ) && ( err != ECGEOF )		3623857	0		&&			
ANR	3623960	RelationalExpression	err > 0		3623857	0		>			
ANR	3623961	Identifier	err		3623857	0					
ANR	3623962	PrimaryExpression	0		3623857	1					
ANR	3623963	EqualityExpression	err != ECGEOF		3623857	1		!=			
ANR	3623964	Identifier	err		3623857	0					
ANR	3623965	Identifier	ECGEOF		3623857	1					
ANR	3623966	ExpressionStatement	handle = NULL	486:2:15953:15966	3623857	1	True				
ANR	3623967	AssignmentExpression	handle = NULL		3623857	0		=			
ANR	3623968	Identifier	handle		3623857	0					
ANR	3623969	Identifier	NULL		3623857	1					
ANR	3623970	WhileStatement	while ( err != ECGEOF )		3623857	10					
ANR	3623971	Condition	err != ECGEOF	487:8:15976:15988	3623857	0	True				
ANR	3623972	EqualityExpression	err != ECGEOF		3623857	0		!=			
ANR	3623973	Identifier	err		3623857	0					
ANR	3623974	Identifier	ECGEOF		3623857	1					
ANR	3623975	CompoundStatement		23:23:681:681	3623857	1					
ANR	3623976	IfStatement	if ( err > 0 )		3623857	0					
ANR	3623977	Condition	err > 0	488:6:15999:16005	3623857	0	True				
ANR	3623978	RelationalExpression	err > 0		3623857	0		>			
ANR	3623979	Identifier	err		3623857	0					
ANR	3623980	PrimaryExpression	0		3623857	1					
ANR	3623981	CompoundStatement		24:15:698:698	3623857	1					
ANR	3623982	ExpressionStatement	"dprintf ( D_ALWAYS , ""Unable to iterate through cgroup %s (ProcFamily %u): %u %s\\n"" , m_cgroup_string , m_root_pid , err , cgroup_strerror ( err ) )"	489:3:16013:16158	3623857	0	True				
ANR	3623983	CallExpression	"dprintf ( D_ALWAYS , ""Unable to iterate through cgroup %s (ProcFamily %u): %u %s\\n"" , m_cgroup_string , m_root_pid , err , cgroup_strerror ( err ) )"		3623857	0					
ANR	3623984	Callee	dprintf		3623857	0					
ANR	3623985	Identifier	dprintf		3623857	0					
ANR	3623986	ArgumentList	D_ALWAYS		3623857	1					
ANR	3623987	Argument	D_ALWAYS		3623857	0					
ANR	3623988	Identifier	D_ALWAYS		3623857	0					
ANR	3623989	Argument	"""Unable to iterate through cgroup %s (ProcFamily %u): %u %s\\n"""		3623857	1					
ANR	3623990	PrimaryExpression	"""Unable to iterate through cgroup %s (ProcFamily %u): %u %s\\n"""		3623857	0					
ANR	3623991	Argument	m_cgroup_string		3623857	2					
ANR	3623992	Identifier	m_cgroup_string		3623857	0					
ANR	3623993	Argument	m_root_pid		3623857	3					
ANR	3623994	Identifier	m_root_pid		3623857	0					
ANR	3623995	Argument	err		3623857	4					
ANR	3623996	Identifier	err		3623857	0					
ANR	3623997	Argument	cgroup_strerror ( err )		3623857	5					
ANR	3623998	CallExpression	cgroup_strerror ( err )		3623857	0					
ANR	3623999	Callee	cgroup_strerror		3623857	0					
ANR	3624000	Identifier	cgroup_strerror		3623857	0					
ANR	3624001	ArgumentList	err		3623857	1					
ANR	3624002	Argument	err		3623857	0					
ANR	3624003	Identifier	err		3623857	0					
ANR	3624004	GotoStatement	goto release ;	492:3:16163:16175	3623857	1	True				
ANR	3624005	Identifier	release		3623857	0					
ANR	3624006	ExpressionStatement	"send_signal ( pid , sig )"	494:2:16183:16204	3623857	1	True				
ANR	3624007	CallExpression	"send_signal ( pid , sig )"		3623857	0					
ANR	3624008	Callee	send_signal		3623857	0					
ANR	3624009	Identifier	send_signal		3623857	0					
ANR	3624010	ArgumentList	pid		3623857	1					
ANR	3624011	Argument	pid		3623857	0					
ANR	3624012	Identifier	pid		3623857	0					
ANR	3624013	Argument	sig		3623857	1					
ANR	3624014	Identifier	sig		3623857	0					
ANR	3624015	ExpressionStatement	"err = cgroup_get_task_next ( handle , & pid )"	495:2:16208:16248	3623857	2	True				
ANR	3624016	AssignmentExpression	"err = cgroup_get_task_next ( handle , & pid )"		3623857	0		=			
ANR	3624017	Identifier	err		3623857	0					
ANR	3624018	CallExpression	"cgroup_get_task_next ( handle , & pid )"		3623857	1					
ANR	3624019	Callee	cgroup_get_task_next		3623857	0					
ANR	3624020	Identifier	cgroup_get_task_next		3623857	0					
ANR	3624021	ArgumentList	handle		3623857	1					
ANR	3624022	Argument	handle		3623857	0					
ANR	3624023	Identifier	handle		3623857	0					
ANR	3624024	Argument	& pid		3623857	1					
ANR	3624025	UnaryOperationExpression	& pid		3623857	0					
ANR	3624026	UnaryOperator	&		3623857	0					
ANR	3624027	Identifier	pid		3623857	1					
ANR	3624028	ExpressionStatement	err = 0	497:1:16254:16261	3623857	11	True				
ANR	3624029	AssignmentExpression	err = 0		3623857	0		=			
ANR	3624030	Identifier	err		3623857	0					
ANR	3624031	PrimaryExpression	0		3623857	1					
ANR	3624032	Label	release :	499:1:16265:16272	3623857	12	True				
ANR	3624033	Identifier	release		3623857	0					
ANR	3624034	IfStatement	if ( handle != NULL )		3623857	13					
ANR	3624035	Condition	handle != NULL	500:5:16279:16292	3623857	0	True				
ANR	3624036	EqualityExpression	handle != NULL		3623857	0		!=			
ANR	3624037	Identifier	handle		3623857	0					
ANR	3624038	Identifier	NULL		3623857	1					
ANR	3624039	CompoundStatement		36:21:985:985	3623857	1					
ANR	3624040	ExpressionStatement	cgroup_get_task_end ( handle )	501:2:16299:16326	3623857	0	True				
ANR	3624041	CallExpression	cgroup_get_task_end ( handle )		3623857	0					
ANR	3624042	Callee	cgroup_get_task_end		3623857	0					
ANR	3624043	Identifier	cgroup_get_task_end		3623857	0					
ANR	3624044	ArgumentList	handle		3623857	1					
ANR	3624045	Argument	handle		3623857	0					
ANR	3624046	Identifier	handle		3623857	0					
ANR	3624047	ExpressionStatement	free ( handle )	502:2:16330:16342	3623857	1	True				
ANR	3624048	CallExpression	free ( handle )		3623857	0					
ANR	3624049	Callee	free		3623857	0					
ANR	3624050	Identifier	free		3623857	0					
ANR	3624051	ArgumentList	handle		3623857	1					
ANR	3624052	Argument	handle		3623857	0					
ANR	3624053	Identifier	handle		3623857	0					
ANR	3624054	ExpressionStatement	freezer_cgroup ( THAWED )	505:1:16349:16371	3623857	14	True				
ANR	3624055	CallExpression	freezer_cgroup ( THAWED )		3623857	0					
ANR	3624056	Callee	freezer_cgroup		3623857	0					
ANR	3624057	Identifier	freezer_cgroup		3623857	0					
ANR	3624058	ArgumentList	THAWED		3623857	1					
ANR	3624059	Argument	THAWED		3623857	0					
ANR	3624060	Identifier	THAWED		3623857	0					
ANR	3624061	ReturnStatement	return err ;	507:1:16375:16385	3623857	15	True				
ANR	3624062	Identifier	err		3623857	0					
ANR	3624063	ReturnType	int		3623857	1					
ANR	3624064	Identifier	ProcFamily :: spree_cgroup		3623857	2					
ANR	3624065	ParameterList	int sig		3623857	3					
ANR	3624066	Parameter	int sig	464:25:15300:15306	3623857	0	True				
ANR	3624067	ParameterType	int		3623857	0					
ANR	3624068	Identifier	sig		3623857	1					
ANR	3624069	CFGEntryNode	ENTRY		3623857		True				
ANR	3624070	CFGExitNode	EXIT		3623857		True				
ANR	3624071	Symbol	malloc		3623857						
ANR	3624072	Symbol	NULL		3623857						
ANR	3624073	Symbol	err		3623857						
ANR	3624074	Symbol	THAWED		3623857						
ANR	3624075	Symbol	D_ALWAYS		3623857						
ANR	3624076	Symbol	handle		3623857						
ANR	3624077	Symbol	pid		3623857						
ANR	3624078	Symbol	FREEZE_CONTROLLER		3623857						
ANR	3624079	Symbol	cgroup_get_task_begin		3623857						
ANR	3624080	Symbol	cgroup_get_task_next		3623857						
ANR	3624081	Symbol	freezer_cgroup		3623857						
ANR	3624082	Symbol	m_cgroup		3623857						
ANR	3624083	Symbol	sig		3623857						
ANR	3624084	Symbol	cgroup_strerror		3623857						
ANR	3624085	Symbol	EBUSY		3623857						
ANR	3624086	Symbol	& pid		3623857						
ANR	3624087	Symbol	FROZEN		3623857						
ANR	3624088	Symbol	m_cgroup_string		3623857						
ANR	3624089	Symbol	ECGEOF		3623857						
ANR	3624090	Symbol	m_root_pid		3623857						
ANR	3624091	Function	ProcFamily :: count_tasks_cgroup	510:0:16390:17177							
ANR	3624092	FunctionDef	ProcFamily :: count_tasks_cgroup ()		3624091	0					
ANR	3624093	CompoundStatement		512:0:16427:17177	3624091	0					
ANR	3624094	IfStatement	if ( ! m_cgroup_cpuacct_mounted )		3624091	0					
ANR	3624095	Condition	! m_cgroup_cpuacct_mounted	513:5:16434:16458	3624091	0	True				
ANR	3624096	UnaryOperationExpression	! m_cgroup_cpuacct_mounted		3624091	0					
ANR	3624097	UnaryOperator	!		3624091	0					
ANR	3624098	Identifier	m_cgroup_cpuacct_mounted		3624091	1					
ANR	3624099	ReturnStatement	return - 1 ;	514:2:16463:16472	3624091	1	True				
ANR	3624100	UnaryOperationExpression	- 1		3624091	0					
ANR	3624101	UnaryOperator	-		3624091	0					
ANR	3624102	PrimaryExpression	1		3624091	1					
ANR	3624103	IdentifierDeclStatement	"int tasks = 0 , err = 0 ;"	516:1:16476:16498	3624091	1	True				
ANR	3624104	IdentifierDecl	tasks = 0		3624091	0					
ANR	3624105	IdentifierDeclType	int		3624091	0					
ANR	3624106	Identifier	tasks		3624091	1					
ANR	3624107	AssignmentExpression	tasks = 0		3624091	2		=			
ANR	3624108	Identifier	tasks		3624091	0					
ANR	3624109	PrimaryExpression	0		3624091	1					
ANR	3624110	IdentifierDecl	err = 0		3624091	1					
ANR	3624111	IdentifierDeclType	int		3624091	0					
ANR	3624112	Identifier	err		3624091	1					
ANR	3624113	AssignmentExpression	err = 0		3624091	2		=			
ANR	3624114	Identifier	err		3624091	0					
ANR	3624115	PrimaryExpression	0		3624091	1					
ANR	3624116	IdentifierDeclStatement	pid_t pid ;	517:1:16501:16510	3624091	2	True				
ANR	3624117	IdentifierDecl	pid		3624091	0					
ANR	3624118	IdentifierDeclType	pid_t		3624091	0					
ANR	3624119	Identifier	pid		3624091	1					
ANR	3624120	IdentifierDeclStatement	void * * handle = ( void * * ) malloc ( sizeof ( void * ) ) ;	518:1:16513:16559	3624091	3	True				
ANR	3624121	IdentifierDecl	* * handle = ( void * * ) malloc ( sizeof ( void * ) )		3624091	0					
ANR	3624122	IdentifierDeclType	void * *		3624091	0					
ANR	3624123	Identifier	handle		3624091	1					
ANR	3624124	AssignmentExpression	* * handle = ( void * * ) malloc ( sizeof ( void * ) )		3624091	2		=			
ANR	3624125	Identifier	handle		3624091	0					
ANR	3624126	CastExpression	( void * * ) malloc ( sizeof ( void * ) )		3624091	1					
ANR	3624127	CastTarget	void * *		3624091	0					
ANR	3624128	CallExpression	malloc ( sizeof ( void * ) )		3624091	1					
ANR	3624129	Callee	malloc		3624091	0					
ANR	3624130	Identifier	malloc		3624091	0					
ANR	3624131	ArgumentList	sizeof ( void * )		3624091	1					
ANR	3624132	Argument	sizeof ( void * )		3624091	0					
ANR	3624133	SizeofExpression	sizeof ( void * )		3624091	0					
ANR	3624134	Sizeof	sizeof		3624091	0					
ANR	3624135	SizeofOperand	void *		3624091	1					
ANR	3624136	ExpressionStatement	ASSERT ( handle != NULL ) * handle = NULL	519:1:16562:16601	3624091	4	True				
ANR	3624137	AssignmentExpression	ASSERT ( handle != NULL ) * handle = NULL		3624091	0		=			
ANR	3624138	MultiplicativeExpression	ASSERT ( handle != NULL ) * handle		3624091	0		*			
ANR	3624139	CallExpression	ASSERT ( handle != NULL )		3624091	0					
ANR	3624140	Callee	ASSERT		3624091	0					
ANR	3624141	Identifier	ASSERT		3624091	0					
ANR	3624142	ArgumentList	handle != NULL		3624091	1					
ANR	3624143	Argument	handle != NULL		3624091	0					
ANR	3624144	EqualityExpression	handle != NULL		3624091	0		!=			
ANR	3624145	Identifier	handle		3624091	0					
ANR	3624146	Identifier	NULL		3624091	1					
ANR	3624147	Identifier	handle		3624091	1					
ANR	3624148	Identifier	NULL		3624091	1					
ANR	3624149	ExpressionStatement	ASSERT ( m_cgroup_string != NULL )	522:1:16605:16637	3624091	5	True				
ANR	3624150	CallExpression	ASSERT ( m_cgroup_string != NULL )		3624091	0					
ANR	3624151	Callee	ASSERT		3624091	0					
ANR	3624152	Identifier	ASSERT		3624091	0					
ANR	3624153	ArgumentList	m_cgroup_string != NULL		3624091	1					
ANR	3624154	Argument	m_cgroup_string != NULL		3624091	0					
ANR	3624155	EqualityExpression	m_cgroup_string != NULL		3624091	0		!=			
ANR	3624156	Identifier	m_cgroup_string		3624091	0					
ANR	3624157	Identifier	NULL		3624091	1					
ANR	3624158	ExpressionStatement	"err = cgroup_get_task_begin ( m_cgroup_string , CPUACCT_CONTROLLER , handle , & pid )"	523:1:16640:16718	3624091	6	True				
ANR	3624159	AssignmentExpression	"err = cgroup_get_task_begin ( m_cgroup_string , CPUACCT_CONTROLLER , handle , & pid )"		3624091	0		=			
ANR	3624160	Identifier	err		3624091	0					
ANR	3624161	CallExpression	"cgroup_get_task_begin ( m_cgroup_string , CPUACCT_CONTROLLER , handle , & pid )"		3624091	1					
ANR	3624162	Callee	cgroup_get_task_begin		3624091	0					
ANR	3624163	Identifier	cgroup_get_task_begin		3624091	0					
ANR	3624164	ArgumentList	m_cgroup_string		3624091	1					
ANR	3624165	Argument	m_cgroup_string		3624091	0					
ANR	3624166	Identifier	m_cgroup_string		3624091	0					
ANR	3624167	Argument	CPUACCT_CONTROLLER		3624091	1					
ANR	3624168	Identifier	CPUACCT_CONTROLLER		3624091	0					
ANR	3624169	Argument	handle		3624091	2					
ANR	3624170	Identifier	handle		3624091	0					
ANR	3624171	Argument	& pid		3624091	3					
ANR	3624172	UnaryOperationExpression	& pid		3624091	0					
ANR	3624173	UnaryOperator	&		3624091	0					
ANR	3624174	Identifier	pid		3624091	1					
ANR	3624175	WhileStatement	while ( err != ECGEOF )		3624091	7					
ANR	3624176	Condition	err != ECGEOF	524:8:16728:16740	3624091	0	True				
ANR	3624177	EqualityExpression	err != ECGEOF		3624091	0		!=			
ANR	3624178	Identifier	err		3624091	0					
ANR	3624179	Identifier	ECGEOF		3624091	1					
ANR	3624180	CompoundStatement		13:23:315:315	3624091	1					
ANR	3624181	IfStatement	if ( err > 0 )		3624091	0					
ANR	3624182	Condition	err > 0	525:6:16751:16757	3624091	0	True				
ANR	3624183	RelationalExpression	err > 0		3624091	0		>			
ANR	3624184	Identifier	err		3624091	0					
ANR	3624185	PrimaryExpression	0		3624091	1					
ANR	3624186	CompoundStatement		14:15:332:332	3624091	1					
ANR	3624187	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""Unable to read cgroup %s memory stats (ProcFamily %u): %u %s.\\n"" , m_cgroup_string , m_root_pid , err , cgroup_strerror ( err ) )"	526:3:16765:16917	3624091	0	True				
ANR	3624188	CallExpression	"dprintf ( D_PROCFAMILY , ""Unable to read cgroup %s memory stats (ProcFamily %u): %u %s.\\n"" , m_cgroup_string , m_root_pid , err , cgroup_strerror ( err ) )"		3624091	0					
ANR	3624189	Callee	dprintf		3624091	0					
ANR	3624190	Identifier	dprintf		3624091	0					
ANR	3624191	ArgumentList	D_PROCFAMILY		3624091	1					
ANR	3624192	Argument	D_PROCFAMILY		3624091	0					
ANR	3624193	Identifier	D_PROCFAMILY		3624091	0					
ANR	3624194	Argument	"""Unable to read cgroup %s memory stats (ProcFamily %u): %u %s.\\n"""		3624091	1					
ANR	3624195	PrimaryExpression	"""Unable to read cgroup %s memory stats (ProcFamily %u): %u %s.\\n"""		3624091	0					
ANR	3624196	Argument	m_cgroup_string		3624091	2					
ANR	3624197	Identifier	m_cgroup_string		3624091	0					
ANR	3624198	Argument	m_root_pid		3624091	3					
ANR	3624199	Identifier	m_root_pid		3624091	0					
ANR	3624200	Argument	err		3624091	4					
ANR	3624201	Identifier	err		3624091	0					
ANR	3624202	Argument	cgroup_strerror ( err )		3624091	5					
ANR	3624203	CallExpression	cgroup_strerror ( err )		3624091	0					
ANR	3624204	Callee	cgroup_strerror		3624091	0					
ANR	3624205	Identifier	cgroup_strerror		3624091	0					
ANR	3624206	ArgumentList	err		3624091	1					
ANR	3624207	Argument	err		3624091	0					
ANR	3624208	Identifier	err		3624091	0					
ANR	3624209	BreakStatement	break ;	529:3:16922:16927	3624091	1	True				
ANR	3624210	ExpressionStatement	tasks ++	531:2:16935:16943	3624091	1	True				
ANR	3624211	PostIncDecOperationExpression	tasks ++		3624091	0					
ANR	3624212	Identifier	tasks		3624091	0					
ANR	3624213	IncDec	++		3624091	1					
ANR	3624214	ExpressionStatement	"err = cgroup_get_task_next ( handle , & pid )"	532:2:16947:16987	3624091	2	True				
ANR	3624215	AssignmentExpression	"err = cgroup_get_task_next ( handle , & pid )"		3624091	0		=			
ANR	3624216	Identifier	err		3624091	0					
ANR	3624217	CallExpression	"cgroup_get_task_next ( handle , & pid )"		3624091	1					
ANR	3624218	Callee	cgroup_get_task_next		3624091	0					
ANR	3624219	Identifier	cgroup_get_task_next		3624091	0					
ANR	3624220	ArgumentList	handle		3624091	1					
ANR	3624221	Argument	handle		3624091	0					
ANR	3624222	Identifier	handle		3624091	0					
ANR	3624223	Argument	& pid		3624091	1					
ANR	3624224	UnaryOperationExpression	& pid		3624091	0					
ANR	3624225	UnaryOperator	&		3624091	0					
ANR	3624226	Identifier	pid		3624091	1					
ANR	3624227	IfStatement	if ( err == ECGEOF )		3624091	8					
ANR	3624228	Condition	err == ECGEOF	535:5:17016:17028	3624091	0	True				
ANR	3624229	EqualityExpression	err == ECGEOF		3624091	0		==			
ANR	3624230	Identifier	err		3624091	0					
ANR	3624231	Identifier	ECGEOF		3624091	1					
ANR	3624232	CompoundStatement		24:20:603:603	3624091	1					
ANR	3624233	ExpressionStatement	err = 0	536:2:17035:17042	3624091	0	True				
ANR	3624234	AssignmentExpression	err = 0		3624091	0		=			
ANR	3624235	Identifier	err		3624091	0					
ANR	3624236	PrimaryExpression	0		3624091	1					
ANR	3624237	IfStatement	if ( * handle )		3624091	9					
ANR	3624238	Condition	* handle	538:5:17052:17058	3624091	0	True				
ANR	3624239	UnaryOperationExpression	* handle		3624091	0					
ANR	3624240	UnaryOperator	*		3624091	0					
ANR	3624241	Identifier	handle		3624091	1					
ANR	3624242	CompoundStatement		27:14:633:633	3624091	1					
ANR	3624243	ExpressionStatement	cgroup_get_task_end ( handle )	539:2:17065:17092	3624091	0	True				
ANR	3624244	CallExpression	cgroup_get_task_end ( handle )		3624091	0					
ANR	3624245	Callee	cgroup_get_task_end		3624091	0					
ANR	3624246	Identifier	cgroup_get_task_end		3624091	0					
ANR	3624247	ArgumentList	handle		3624091	1					
ANR	3624248	Argument	handle		3624091	0					
ANR	3624249	Identifier	handle		3624091	0					
ANR	3624250	IfStatement	if ( handle )		3624091	10					
ANR	3624251	Condition	handle	541:5:17102:17107	3624091	0	True				
ANR	3624252	Identifier	handle		3624091	0					
ANR	3624253	CompoundStatement		30:13:682:682	3624091	1					
ANR	3624254	ExpressionStatement	free ( handle )	542:2:17114:17126	3624091	0	True				
ANR	3624255	CallExpression	free ( handle )		3624091	0					
ANR	3624256	Callee	free		3624091	0					
ANR	3624257	Identifier	free		3624091	0					
ANR	3624258	ArgumentList	handle		3624091	1					
ANR	3624259	Argument	handle		3624091	0					
ANR	3624260	Identifier	handle		3624091	0					
ANR	3624261	IfStatement	if ( err )		3624091	11					
ANR	3624262	Condition	err	544:5:17136:17138	3624091	0	True				
ANR	3624263	Identifier	err		3624091	0					
ANR	3624264	CompoundStatement		33:10:713:713	3624091	1					
ANR	3624265	ReturnStatement	return - err ;	545:2:17145:17156	3624091	0	True				
ANR	3624266	UnaryOperationExpression	- err		3624091	0					
ANR	3624267	UnaryOperator	-		3624091	0					
ANR	3624268	Identifier	err		3624091	1					
ANR	3624269	ReturnStatement	return tasks ;	547:1:17162:17174	3624091	12	True				
ANR	3624270	Identifier	tasks		3624091	0					
ANR	3624271	ReturnType	int		3624091	1					
ANR	3624272	Identifier	ProcFamily :: count_tasks_cgroup		3624091	2					
ANR	3624273	ParameterList			3624091	3					
ANR	3624274	CFGEntryNode	ENTRY		3624091		True				
ANR	3624275	CFGExitNode	EXIT		3624091		True				
ANR	3624276	Symbol	malloc		3624091						
ANR	3624277	Symbol	NULL		3624091						
ANR	3624278	Symbol	D_PROCFAMILY		3624091						
ANR	3624279	Symbol	err		3624091						
ANR	3624280	Symbol	ASSERT		3624091						
ANR	3624281	Symbol	* handle		3624091						
ANR	3624282	Symbol	pid		3624091						
ANR	3624283	Symbol	handle		3624091						
ANR	3624284	Symbol	cgroup_get_task_begin		3624091						
ANR	3624285	Symbol	cgroup_get_task_next		3624091						
ANR	3624286	Symbol	CPUACCT_CONTROLLER		3624091						
ANR	3624287	Symbol	cgroup_strerror		3624091						
ANR	3624288	Symbol	m_cgroup_cpuacct_mounted		3624091						
ANR	3624289	Symbol	& pid		3624091						
ANR	3624290	Symbol	m_cgroup_string		3624091						
ANR	3624291	Symbol	ECGEOF		3624091						
ANR	3624292	Symbol	m_root_pid		3624091						
ANR	3624293	Symbol	tasks		3624091						
ANR	3624294	Function	_check_stat_uint64	553:0:17192:17591							
ANR	3624295	FunctionDef	"_check_stat_uint64 (const struct cgroup_stat stats , const char * name , u_int64_t * result)"		3624294	0					
ANR	3624296	CompoundStatement		553:87:17279:17591	3624294	0					
ANR	3624297	IdentifierDeclStatement	u_int64_t tmp ;	554:1:17282:17295	3624294	0	True				
ANR	3624298	IdentifierDecl	tmp		3624294	0					
ANR	3624299	IdentifierDeclType	u_int64_t		3624294	0					
ANR	3624300	Identifier	tmp		3624294	1					
ANR	3624301	IfStatement	"if ( 0 == strcmp ( name , stats . name ) )"		3624294	1					
ANR	3624302	Condition	"0 == strcmp ( name , stats . name )"	555:5:17302:17330	3624294	0	True				
ANR	3624303	EqualityExpression	"0 == strcmp ( name , stats . name )"		3624294	0		==			
ANR	3624304	PrimaryExpression	0		3624294	0					
ANR	3624305	CallExpression	"strcmp ( name , stats . name )"		3624294	1					
ANR	3624306	Callee	strcmp		3624294	0					
ANR	3624307	Identifier	strcmp		3624294	0					
ANR	3624308	ArgumentList	name		3624294	1					
ANR	3624309	Argument	name		3624294	0					
ANR	3624310	Identifier	name		3624294	0					
ANR	3624311	Argument	stats . name		3624294	1					
ANR	3624312	MemberAccess	stats . name		3624294	0					
ANR	3624313	Identifier	stats		3624294	0					
ANR	3624314	Identifier	name		3624294	1					
ANR	3624315	CompoundStatement		3:36:53:53	3624294	1					
ANR	3624316	ExpressionStatement	errno = 0	556:2:17337:17346	3624294	0	True				
ANR	3624317	AssignmentExpression	errno = 0		3624294	0		=			
ANR	3624318	Identifier	errno		3624294	0					
ANR	3624319	PrimaryExpression	0		3624294	1					
ANR	3624320	ExpressionStatement	"tmp = ( u_int64_t ) strtoll ( stats . value , NULL , 0 )"	557:2:17350:17396	3624294	1	True				
ANR	3624321	AssignmentExpression	"tmp = ( u_int64_t ) strtoll ( stats . value , NULL , 0 )"		3624294	0		=			
ANR	3624322	Identifier	tmp		3624294	0					
ANR	3624323	CastExpression	"( u_int64_t ) strtoll ( stats . value , NULL , 0 )"		3624294	1					
ANR	3624324	CastTarget	u_int64_t		3624294	0					
ANR	3624325	CallExpression	"strtoll ( stats . value , NULL , 0 )"		3624294	1					
ANR	3624326	Callee	strtoll		3624294	0					
ANR	3624327	Identifier	strtoll		3624294	0					
ANR	3624328	ArgumentList	stats . value		3624294	1					
ANR	3624329	Argument	stats . value		3624294	0					
ANR	3624330	MemberAccess	stats . value		3624294	0					
ANR	3624331	Identifier	stats		3624294	0					
ANR	3624332	Identifier	value		3624294	1					
ANR	3624333	Argument	NULL		3624294	1					
ANR	3624334	Identifier	NULL		3624294	0					
ANR	3624335	Argument	0		3624294	2					
ANR	3624336	PrimaryExpression	0		3624294	0					
ANR	3624337	IfStatement	if ( errno == 0 )		3624294	2					
ANR	3624338	Condition	errno == 0	558:6:17404:17413	3624294	0	True				
ANR	3624339	EqualityExpression	errno == 0		3624294	0		==			
ANR	3624340	Identifier	errno		3624294	0					
ANR	3624341	PrimaryExpression	0		3624294	1					
ANR	3624342	CompoundStatement		6:18:136:136	3624294	1					
ANR	3624343	ExpressionStatement	* result = tmp	559:3:17421:17434	3624294	0	True				
ANR	3624344	AssignmentExpression	* result = tmp		3624294	0		=			
ANR	3624345	UnaryOperationExpression	* result		3624294	0					
ANR	3624346	UnaryOperator	*		3624294	0					
ANR	3624347	Identifier	result		3624294	1					
ANR	3624348	Identifier	tmp		3624294	1					
ANR	3624349	ReturnStatement	return true ;	560:3:17439:17450	3624294	1	True				
ANR	3624350	Identifier	true		3624294	0					
ANR	3624351	ElseStatement	else		3624294	0					
ANR	3624352	CompoundStatement		9:9:181:181	3624294	0					
ANR	3624353	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""Invalid cgroup stat %s for %s.\\n"" , stats . value , name )"	562:3:17466:17550	3624294	0	True				
ANR	3624354	CallExpression	"dprintf ( D_PROCFAMILY , ""Invalid cgroup stat %s for %s.\\n"" , stats . value , name )"		3624294	0					
ANR	3624355	Callee	dprintf		3624294	0					
ANR	3624356	Identifier	dprintf		3624294	0					
ANR	3624357	ArgumentList	D_PROCFAMILY		3624294	1					
ANR	3624358	Argument	D_PROCFAMILY		3624294	0					
ANR	3624359	Identifier	D_PROCFAMILY		3624294	0					
ANR	3624360	Argument	"""Invalid cgroup stat %s for %s.\\n"""		3624294	1					
ANR	3624361	PrimaryExpression	"""Invalid cgroup stat %s for %s.\\n"""		3624294	0					
ANR	3624362	Argument	stats . value		3624294	2					
ANR	3624363	MemberAccess	stats . value		3624294	0					
ANR	3624364	Identifier	stats		3624294	0					
ANR	3624365	Identifier	value		3624294	1					
ANR	3624366	Argument	name		3624294	3					
ANR	3624367	Identifier	name		3624294	0					
ANR	3624368	ReturnStatement	return false ;	565:3:17555:17567	3624294	1	True				
ANR	3624369	Identifier	false		3624294	0					
ANR	3624370	ReturnStatement	return false ;	568:1:17577:17589	3624294	2	True				
ANR	3624371	Identifier	false		3624294	0					
ANR	3624372	Identifier	_check_stat_uint64		3624294	1					
ANR	3624373	ParameterList	"const struct cgroup_stat stats , const char * name , u_int64_t * result"		3624294	2					
ANR	3624374	Parameter	const struct cgroup_stat stats	553:19:17211:17240	3624294	0	True				
ANR	3624375	ParameterType	const struct cgroup_stat		3624294	0					
ANR	3624376	Identifier	stats		3624294	1					
ANR	3624377	Parameter	const char * name	553:51:17243:17258	3624294	1	True				
ANR	3624378	ParameterType	const char *		3624294	0					
ANR	3624379	Identifier	name		3624294	1					
ANR	3624380	Parameter	u_int64_t * result	553:69:17261:17277	3624294	2	True				
ANR	3624381	ParameterType	u_int64_t *		3624294	0					
ANR	3624382	Identifier	result		3624294	1					
ANR	3624383	CFGEntryNode	ENTRY		3624294		True				
ANR	3624384	CFGExitNode	EXIT		3624294		True				
ANR	3624385	Symbol	strcmp		3624294						
ANR	3624386	Symbol	errno		3624294						
ANR	3624387	Symbol	NULL		3624294						
ANR	3624388	Symbol	D_PROCFAMILY		3624294						
ANR	3624389	Symbol	false		3624294						
ANR	3624390	Symbol	stats . value		3624294						
ANR	3624391	Symbol	result		3624294						
ANR	3624392	Symbol	stats		3624294						
ANR	3624393	Symbol	* result		3624294						
ANR	3624394	Symbol	tmp		3624294						
ANR	3624395	Symbol	stats . name		3624294						
ANR	3624396	Symbol	strtoll		3624294						
ANR	3624397	Symbol	name		3624294						
ANR	3624398	Symbol	true		3624294						
ANR	3624399	Function	ProcFamily :: update_max_image_size_cgroup	571:0:17594:18737							
ANR	3624400	FunctionDef	ProcFamily :: update_max_image_size_cgroup ()		3624399	0					
ANR	3624401	CompoundStatement		573:0:17642:18737	3624399	0					
ANR	3624402	IfStatement	if ( ! m_cgroup_memory_mounted )		3624399	0					
ANR	3624403	Condition	! m_cgroup_memory_mounted	574:5:17649:17672	3624399	0	True				
ANR	3624404	UnaryOperationExpression	! m_cgroup_memory_mounted		3624399	0					
ANR	3624405	UnaryOperator	!		3624399	0					
ANR	3624406	Identifier	m_cgroup_memory_mounted		3624399	1					
ANR	3624407	CompoundStatement		2:31:32:32	3624399	1					
ANR	3624408	ReturnStatement	return ;	575:2:17679:17685	3624399	0	True				
ANR	3624409	IdentifierDeclStatement	int err ;	578:1:17692:17699	3624399	1	True				
ANR	3624410	IdentifierDecl	err		3624399	0					
ANR	3624411	IdentifierDeclType	int		3624399	0					
ANR	3624412	Identifier	err		3624399	1					
ANR	3624413	IdentifierDeclStatement	u_int64_t max_image ;	579:1:17702:17721	3624399	2	True				
ANR	3624414	IdentifierDecl	max_image		3624399	0					
ANR	3624415	IdentifierDeclType	u_int64_t		3624399	0					
ANR	3624416	Identifier	max_image		3624399	1					
ANR	3624417	IdentifierDeclStatement	struct cgroup * memcg ;	580:1:17724:17744	3624399	3	True				
ANR	3624418	IdentifierDecl	* memcg		3624399	0					
ANR	3624419	IdentifierDeclType	struct cgroup *		3624399	0					
ANR	3624420	Identifier	memcg		3624399	1					
ANR	3624421	IdentifierDeclStatement	struct cgroup_controller * memct ;	581:1:17747:17778	3624399	4	True				
ANR	3624422	IdentifierDecl	* memct		3624399	0					
ANR	3624423	IdentifierDeclType	struct cgroup_controller *		3624399	0					
ANR	3624424	Identifier	memct		3624399	1					
ANR	3624425	IfStatement	if ( ( memcg = cgroup_new_cgroup ( m_cgroup_string ) ) == NULL )		3624399	5					
ANR	3624426	Condition	( memcg = cgroup_new_cgroup ( m_cgroup_string ) ) == NULL	582:5:17785:17836	3624399	0	True				
ANR	3624427	EqualityExpression	( memcg = cgroup_new_cgroup ( m_cgroup_string ) ) == NULL		3624399	0		==			
ANR	3624428	AssignmentExpression	memcg = cgroup_new_cgroup ( m_cgroup_string )		3624399	0		=			
ANR	3624429	Identifier	memcg		3624399	0					
ANR	3624430	CallExpression	cgroup_new_cgroup ( m_cgroup_string )		3624399	1					
ANR	3624431	Callee	cgroup_new_cgroup		3624399	0					
ANR	3624432	Identifier	cgroup_new_cgroup		3624399	0					
ANR	3624433	ArgumentList	m_cgroup_string		3624399	1					
ANR	3624434	Argument	m_cgroup_string		3624399	0					
ANR	3624435	Identifier	m_cgroup_string		3624399	0					
ANR	3624436	Identifier	NULL		3624399	1					
ANR	3624437	CompoundStatement		10:59:196:196	3624399	1					
ANR	3624438	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""Unable to allocate cgroup %s (ProcFamily %u).\\n"" , m_cgroup_string , m_root_pid )"	583:2:17843:17950	3624399	0	True				
ANR	3624439	CallExpression	"dprintf ( D_PROCFAMILY , ""Unable to allocate cgroup %s (ProcFamily %u).\\n"" , m_cgroup_string , m_root_pid )"		3624399	0					
ANR	3624440	Callee	dprintf		3624399	0					
ANR	3624441	Identifier	dprintf		3624399	0					
ANR	3624442	ArgumentList	D_PROCFAMILY		3624399	1					
ANR	3624443	Argument	D_PROCFAMILY		3624399	0					
ANR	3624444	Identifier	D_PROCFAMILY		3624399	0					
ANR	3624445	Argument	"""Unable to allocate cgroup %s (ProcFamily %u).\\n"""		3624399	1					
ANR	3624446	PrimaryExpression	"""Unable to allocate cgroup %s (ProcFamily %u).\\n"""		3624399	0					
ANR	3624447	Argument	m_cgroup_string		3624399	2					
ANR	3624448	Identifier	m_cgroup_string		3624399	0					
ANR	3624449	Argument	m_root_pid		3624399	3					
ANR	3624450	Identifier	m_root_pid		3624399	0					
ANR	3624451	ReturnStatement	return ;	586:2:17954:17960	3624399	1	True				
ANR	3624452	IfStatement	if ( ( err = cgroup_get_cgroup ( memcg ) ) )		3624399	6					
ANR	3624453	Condition	err = cgroup_get_cgroup ( memcg )	588:5:17970:18001	3624399	0	True				
ANR	3624454	AssignmentExpression	err = cgroup_get_cgroup ( memcg )		3624399	0		=			
ANR	3624455	Identifier	err		3624399	0					
ANR	3624456	CallExpression	cgroup_get_cgroup ( memcg )		3624399	1					
ANR	3624457	Callee	cgroup_get_cgroup		3624399	0					
ANR	3624458	Identifier	cgroup_get_cgroup		3624399	0					
ANR	3624459	ArgumentList	memcg		3624399	1					
ANR	3624460	Argument	memcg		3624399	0					
ANR	3624461	Identifier	memcg		3624399	0					
ANR	3624462	CompoundStatement		16:39:361:361	3624399	1					
ANR	3624463	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""Unable to load cgroup %s (ProcFamily %u).\\n"" , m_cgroup_string , m_root_pid )"	589:2:18008:18111	3624399	0	True				
ANR	3624464	CallExpression	"dprintf ( D_PROCFAMILY , ""Unable to load cgroup %s (ProcFamily %u).\\n"" , m_cgroup_string , m_root_pid )"		3624399	0					
ANR	3624465	Callee	dprintf		3624399	0					
ANR	3624466	Identifier	dprintf		3624399	0					
ANR	3624467	ArgumentList	D_PROCFAMILY		3624399	1					
ANR	3624468	Argument	D_PROCFAMILY		3624399	0					
ANR	3624469	Identifier	D_PROCFAMILY		3624399	0					
ANR	3624470	Argument	"""Unable to load cgroup %s (ProcFamily %u).\\n"""		3624399	1					
ANR	3624471	PrimaryExpression	"""Unable to load cgroup %s (ProcFamily %u).\\n"""		3624399	0					
ANR	3624472	Argument	m_cgroup_string		3624399	2					
ANR	3624473	Identifier	m_cgroup_string		3624399	0					
ANR	3624474	Argument	m_root_pid		3624399	3					
ANR	3624475	Identifier	m_root_pid		3624399	0					
ANR	3624476	ExpressionStatement	cgroup_free ( & memcg )	592:2:18115:18134	3624399	1	True				
ANR	3624477	CallExpression	cgroup_free ( & memcg )		3624399	0					
ANR	3624478	Callee	cgroup_free		3624399	0					
ANR	3624479	Identifier	cgroup_free		3624399	0					
ANR	3624480	ArgumentList	& memcg		3624399	1					
ANR	3624481	Argument	& memcg		3624399	0					
ANR	3624482	UnaryOperationExpression	& memcg		3624399	0					
ANR	3624483	UnaryOperator	&		3624399	0					
ANR	3624484	Identifier	memcg		3624399	1					
ANR	3624485	ReturnStatement	return ;	593:2:18138:18144	3624399	2	True				
ANR	3624486	IfStatement	"if ( ( memct = cgroup_get_controller ( memcg , MEMORY_CONTROLLER ) ) == NULL )"		3624399	7					
ANR	3624487	Condition	"( memct = cgroup_get_controller ( memcg , MEMORY_CONTROLLER ) ) == NULL"	595:5:18154:18218	3624399	0	True				
ANR	3624488	EqualityExpression	"( memct = cgroup_get_controller ( memcg , MEMORY_CONTROLLER ) ) == NULL"		3624399	0		==			
ANR	3624489	AssignmentExpression	"memct = cgroup_get_controller ( memcg , MEMORY_CONTROLLER )"		3624399	0		=			
ANR	3624490	Identifier	memct		3624399	0					
ANR	3624491	CallExpression	"cgroup_get_controller ( memcg , MEMORY_CONTROLLER )"		3624399	1					
ANR	3624492	Callee	cgroup_get_controller		3624399	0					
ANR	3624493	Identifier	cgroup_get_controller		3624399	0					
ANR	3624494	ArgumentList	memcg		3624399	1					
ANR	3624495	Argument	memcg		3624399	0					
ANR	3624496	Identifier	memcg		3624399	0					
ANR	3624497	Argument	MEMORY_CONTROLLER		3624399	1					
ANR	3624498	Identifier	MEMORY_CONTROLLER		3624399	0					
ANR	3624499	Identifier	NULL		3624399	1					
ANR	3624500	CompoundStatement		23:72:578:578	3624399	1					
ANR	3624501	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""Unable to load memory controller for cgroup %s (ProcFamily %u).\\n"" , m_cgroup_string , m_root_pid )"	596:2:18225:18350	3624399	0	True				
ANR	3624502	CallExpression	"dprintf ( D_PROCFAMILY , ""Unable to load memory controller for cgroup %s (ProcFamily %u).\\n"" , m_cgroup_string , m_root_pid )"		3624399	0					
ANR	3624503	Callee	dprintf		3624399	0					
ANR	3624504	Identifier	dprintf		3624399	0					
ANR	3624505	ArgumentList	D_PROCFAMILY		3624399	1					
ANR	3624506	Argument	D_PROCFAMILY		3624399	0					
ANR	3624507	Identifier	D_PROCFAMILY		3624399	0					
ANR	3624508	Argument	"""Unable to load memory controller for cgroup %s (ProcFamily %u).\\n"""		3624399	1					
ANR	3624509	PrimaryExpression	"""Unable to load memory controller for cgroup %s (ProcFamily %u).\\n"""		3624399	0					
ANR	3624510	Argument	m_cgroup_string		3624399	2					
ANR	3624511	Identifier	m_cgroup_string		3624399	0					
ANR	3624512	Argument	m_root_pid		3624399	3					
ANR	3624513	Identifier	m_root_pid		3624399	0					
ANR	3624514	ExpressionStatement	cgroup_free ( & memcg )	599:2:18354:18373	3624399	1	True				
ANR	3624515	CallExpression	cgroup_free ( & memcg )		3624399	0					
ANR	3624516	Callee	cgroup_free		3624399	0					
ANR	3624517	Identifier	cgroup_free		3624399	0					
ANR	3624518	ArgumentList	& memcg		3624399	1					
ANR	3624519	Argument	& memcg		3624399	0					
ANR	3624520	UnaryOperationExpression	& memcg		3624399	0					
ANR	3624521	UnaryOperator	&		3624399	0					
ANR	3624522	Identifier	memcg		3624399	1					
ANR	3624523	ReturnStatement	return ;	600:2:18377:18383	3624399	2	True				
ANR	3624524	IfStatement	"if ( ( err = cgroup_get_value_uint64 ( memct , ""memory.memsw.max_usage_in_bytes"" , & max_image ) ) )"		3624399	8					
ANR	3624525	Condition	"err = cgroup_get_value_uint64 ( memct , ""memory.memsw.max_usage_in_bytes"" , & max_image )"	602:5:18393:18477	3624399	0	True				
ANR	3624526	AssignmentExpression	"err = cgroup_get_value_uint64 ( memct , ""memory.memsw.max_usage_in_bytes"" , & max_image )"		3624399	0		=			
ANR	3624527	Identifier	err		3624399	0					
ANR	3624528	CallExpression	"cgroup_get_value_uint64 ( memct , ""memory.memsw.max_usage_in_bytes"" , & max_image )"		3624399	1					
ANR	3624529	Callee	cgroup_get_value_uint64		3624399	0					
ANR	3624530	Identifier	cgroup_get_value_uint64		3624399	0					
ANR	3624531	ArgumentList	memct		3624399	1					
ANR	3624532	Argument	memct		3624399	0					
ANR	3624533	Identifier	memct		3624399	0					
ANR	3624534	Argument	"""memory.memsw.max_usage_in_bytes"""		3624399	1					
ANR	3624535	PrimaryExpression	"""memory.memsw.max_usage_in_bytes"""		3624399	0					
ANR	3624536	Argument	& max_image		3624399	2					
ANR	3624537	UnaryOperationExpression	& max_image		3624399	0					
ANR	3624538	UnaryOperator	&		3624399	0					
ANR	3624539	Identifier	max_image		3624399	1					
ANR	3624540	CompoundStatement		30:92:837:837	3624399	1					
ANR	3624541	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""Unable to load max memory usage for cgroup %s (ProcFamily %u): %u %s\\n"" , m_cgroup_string , m_root_pid , err , cgroup_strerror ( err ) )"	603:2:18484:18641	3624399	0	True				
ANR	3624542	CallExpression	"dprintf ( D_PROCFAMILY , ""Unable to load max memory usage for cgroup %s (ProcFamily %u): %u %s\\n"" , m_cgroup_string , m_root_pid , err , cgroup_strerror ( err ) )"		3624399	0					
ANR	3624543	Callee	dprintf		3624399	0					
ANR	3624544	Identifier	dprintf		3624399	0					
ANR	3624545	ArgumentList	D_PROCFAMILY		3624399	1					
ANR	3624546	Argument	D_PROCFAMILY		3624399	0					
ANR	3624547	Identifier	D_PROCFAMILY		3624399	0					
ANR	3624548	Argument	"""Unable to load max memory usage for cgroup %s (ProcFamily %u): %u %s\\n"""		3624399	1					
ANR	3624549	PrimaryExpression	"""Unable to load max memory usage for cgroup %s (ProcFamily %u): %u %s\\n"""		3624399	0					
ANR	3624550	Argument	m_cgroup_string		3624399	2					
ANR	3624551	Identifier	m_cgroup_string		3624399	0					
ANR	3624552	Argument	m_root_pid		3624399	3					
ANR	3624553	Identifier	m_root_pid		3624399	0					
ANR	3624554	Argument	err		3624399	4					
ANR	3624555	Identifier	err		3624399	0					
ANR	3624556	Argument	cgroup_strerror ( err )		3624399	5					
ANR	3624557	CallExpression	cgroup_strerror ( err )		3624399	0					
ANR	3624558	Callee	cgroup_strerror		3624399	0					
ANR	3624559	Identifier	cgroup_strerror		3624399	0					
ANR	3624560	ArgumentList	err		3624399	1					
ANR	3624561	Argument	err		3624399	0					
ANR	3624562	Identifier	err		3624399	0					
ANR	3624563	ExpressionStatement	cgroup_free ( & memcg )	606:2:18645:18664	3624399	1	True				
ANR	3624564	CallExpression	cgroup_free ( & memcg )		3624399	0					
ANR	3624565	Callee	cgroup_free		3624399	0					
ANR	3624566	Identifier	cgroup_free		3624399	0					
ANR	3624567	ArgumentList	& memcg		3624399	1					
ANR	3624568	Argument	& memcg		3624399	0					
ANR	3624569	UnaryOperationExpression	& memcg		3624399	0					
ANR	3624570	UnaryOperator	&		3624399	0					
ANR	3624571	Identifier	memcg		3624399	1					
ANR	3624572	ReturnStatement	return ;	607:2:18668:18674	3624399	2	True				
ANR	3624573	ExpressionStatement	m_max_image_size = max_image / 1024	609:1:18680:18713	3624399	9	True				
ANR	3624574	AssignmentExpression	m_max_image_size = max_image / 1024		3624399	0		=			
ANR	3624575	Identifier	m_max_image_size		3624399	0					
ANR	3624576	MultiplicativeExpression	max_image / 1024		3624399	1		/			
ANR	3624577	Identifier	max_image		3624399	0					
ANR	3624578	PrimaryExpression	1024		3624399	1					
ANR	3624579	ExpressionStatement	cgroup_free ( & memcg )	610:1:18716:18735	3624399	10	True				
ANR	3624580	CallExpression	cgroup_free ( & memcg )		3624399	0					
ANR	3624581	Callee	cgroup_free		3624399	0					
ANR	3624582	Identifier	cgroup_free		3624399	0					
ANR	3624583	ArgumentList	& memcg		3624399	1					
ANR	3624584	Argument	& memcg		3624399	0					
ANR	3624585	UnaryOperationExpression	& memcg		3624399	0					
ANR	3624586	UnaryOperator	&		3624399	0					
ANR	3624587	Identifier	memcg		3624399	1					
ANR	3624588	ReturnType	void		3624399	1					
ANR	3624589	Identifier	ProcFamily :: update_max_image_size_cgroup		3624399	2					
ANR	3624590	ParameterList			3624399	3					
ANR	3624591	CFGEntryNode	ENTRY		3624399		True				
ANR	3624592	CFGExitNode	EXIT		3624399		True				
ANR	3624593	Symbol	NULL		3624399						
ANR	3624594	Symbol	D_PROCFAMILY		3624399						
ANR	3624595	Symbol	MEMORY_CONTROLLER		3624399						
ANR	3624596	Symbol	err		3624399						
ANR	3624597	Symbol	cgroup_get_value_uint64		3624399						
ANR	3624598	Symbol	cgroup_get_cgroup		3624399						
ANR	3624599	Symbol	cgroup_get_controller		3624399						
ANR	3624600	Symbol	& memcg		3624399						
ANR	3624601	Symbol	m_cgroup_memory_mounted		3624399						
ANR	3624602	Symbol	memct		3624399						
ANR	3624603	Symbol	cgroup_new_cgroup		3624399						
ANR	3624604	Symbol	m_max_image_size		3624399						
ANR	3624605	Symbol	cgroup_strerror		3624399						
ANR	3624606	Symbol	memcg		3624399						
ANR	3624607	Symbol	max_image		3624399						
ANR	3624608	Symbol	m_cgroup_string		3624399						
ANR	3624609	Symbol	m_root_pid		3624399						
ANR	3624610	Symbol	& max_image		3624399						
ANR	3624611	Function	ProcFamily :: aggregate_usage_cgroup_blockio	613:0:18740:20096							
ANR	3624612	FunctionDef	ProcFamily :: aggregate_usage_cgroup_blockio (ProcFamilyUsage * usage)		3624611	0					
ANR	3624613	CompoundStatement		615:0:18811:20096	3624611	0					
ANR	3624614	IfStatement	if ( ! m_cgroup_block_mounted )		3624611	0					
ANR	3624615	Condition	! m_cgroup_block_mounted	617:5:18819:18841	3624611	0	True				
ANR	3624616	UnaryOperationExpression	! m_cgroup_block_mounted		3624611	0					
ANR	3624617	UnaryOperator	!		3624611	0					
ANR	3624618	Identifier	m_cgroup_block_mounted		3624611	1					
ANR	3624619	ReturnStatement	return 1 ;	618:2:18846:18854	3624611	1	True				
ANR	3624620	PrimaryExpression	1		3624611	0					
ANR	3624621	IdentifierDeclStatement	int ret ;	620:1:18858:18865	3624611	1	True				
ANR	3624622	IdentifierDecl	ret		3624611	0					
ANR	3624623	IdentifierDeclType	int		3624611	0					
ANR	3624624	Identifier	ret		3624611	1					
ANR	3624625	IdentifierDeclStatement	void * handle ;	621:1:18868:18880	3624611	2	True				
ANR	3624626	IdentifierDecl	* handle		3624611	0					
ANR	3624627	IdentifierDeclType	void *		3624611	0					
ANR	3624628	Identifier	handle		3624611	1					
ANR	3624629	IdentifierDeclStatement	"char line_contents [ BLOCK_STATS_LINE_MAX ] , sep [ ] = "" "" , * tok_handle , * word , * info [ 3 ] ;"	622:1:18883:18964	3624611	3	True				
ANR	3624630	IdentifierDecl	line_contents [ BLOCK_STATS_LINE_MAX ]		3624611	0					
ANR	3624631	IdentifierDeclType	char [ BLOCK_STATS_LINE_MAX ]		3624611	0					
ANR	3624632	Identifier	line_contents		3624611	1					
ANR	3624633	Identifier	BLOCK_STATS_LINE_MAX		3624611	2					
ANR	3624634	IdentifierDecl	"sep [ ] = "" """		3624611	1					
ANR	3624635	IdentifierDeclType	char [ ]		3624611	0					
ANR	3624636	Identifier	sep		3624611	1					
ANR	3624637	AssignmentExpression	"sep [ ] = "" """		3624611	2		=			
ANR	3624638	Identifier	sep		3624611	0					
ANR	3624639	PrimaryExpression	""" """		3624611	1					
ANR	3624640	IdentifierDecl	* tok_handle		3624611	2					
ANR	3624641	IdentifierDeclType	char *		3624611	0					
ANR	3624642	Identifier	tok_handle		3624611	1					
ANR	3624643	IdentifierDecl	* word		3624611	3					
ANR	3624644	IdentifierDeclType	char *		3624611	0					
ANR	3624645	Identifier	word		3624611	1					
ANR	3624646	IdentifierDecl	* info [ 3 ]		3624611	4					
ANR	3624647	IdentifierDeclType	char * [ 3 ]		3624611	0					
ANR	3624648	Identifier	info		3624611	1					
ANR	3624649	PrimaryExpression	3		3624611	2					
ANR	3624650	IdentifierDeclStatement	"char blkio_stats_name [ ] = ""blkio.io_service_bytes"" ;"	623:1:18967:19017	3624611	4	True				
ANR	3624651	IdentifierDecl	"blkio_stats_name [ ] = ""blkio.io_service_bytes"""		3624611	0					
ANR	3624652	IdentifierDeclType	char [ ]		3624611	0					
ANR	3624653	Identifier	blkio_stats_name		3624611	1					
ANR	3624654	AssignmentExpression	"blkio_stats_name [ ] = ""blkio.io_service_bytes"""		3624611	2		=			
ANR	3624655	Identifier	blkio_stats_name		3624611	0					
ANR	3624656	PrimaryExpression	"""blkio.io_service_bytes"""		3624611	1					
ANR	3624657	IdentifierDeclStatement	short ctr ;	624:1:19020:19029	3624611	5	True				
ANR	3624658	IdentifierDecl	ctr		3624611	0					
ANR	3624659	IdentifierDeclType	short		3624611	0					
ANR	3624660	Identifier	ctr		3624611	1					
ANR	3624661	IdentifierDeclStatement	"long int read_bytes = 0 , write_bytes = 0 ;"	625:1:19032:19068	3624611	6	True				
ANR	3624662	IdentifierDecl	read_bytes = 0		3624611	0					
ANR	3624663	IdentifierDeclType	long int		3624611	0					
ANR	3624664	Identifier	read_bytes		3624611	1					
ANR	3624665	AssignmentExpression	read_bytes = 0		3624611	2		=			
ANR	3624666	Identifier	read_bytes		3624611	0					
ANR	3624667	PrimaryExpression	0		3624611	1					
ANR	3624668	IdentifierDecl	write_bytes = 0		3624611	1					
ANR	3624669	IdentifierDeclType	long int		3624611	0					
ANR	3624670	Identifier	write_bytes		3624611	1					
ANR	3624671	AssignmentExpression	write_bytes = 0		3624611	2		=			
ANR	3624672	Identifier	write_bytes		3624611	0					
ANR	3624673	PrimaryExpression	0		3624611	1					
ANR	3624674	ExpressionStatement	"ret = cgroup_read_value_begin ( BLOCK_CONTROLLER , m_cgroup_string , blkio_stats_name , & handle , line_contents , BLOCK_STATS_LINE_MAX )"	626:1:19071:19230	3624611	7	True				
ANR	3624675	AssignmentExpression	"ret = cgroup_read_value_begin ( BLOCK_CONTROLLER , m_cgroup_string , blkio_stats_name , & handle , line_contents , BLOCK_STATS_LINE_MAX )"		3624611	0		=			
ANR	3624676	Identifier	ret		3624611	0					
ANR	3624677	CallExpression	"cgroup_read_value_begin ( BLOCK_CONTROLLER , m_cgroup_string , blkio_stats_name , & handle , line_contents , BLOCK_STATS_LINE_MAX )"		3624611	1					
ANR	3624678	Callee	cgroup_read_value_begin		3624611	0					
ANR	3624679	Identifier	cgroup_read_value_begin		3624611	0					
ANR	3624680	ArgumentList	BLOCK_CONTROLLER		3624611	1					
ANR	3624681	Argument	BLOCK_CONTROLLER		3624611	0					
ANR	3624682	Identifier	BLOCK_CONTROLLER		3624611	0					
ANR	3624683	Argument	m_cgroup_string		3624611	1					
ANR	3624684	Identifier	m_cgroup_string		3624611	0					
ANR	3624685	Argument	blkio_stats_name		3624611	2					
ANR	3624686	Identifier	blkio_stats_name		3624611	0					
ANR	3624687	Argument	& handle		3624611	3					
ANR	3624688	UnaryOperationExpression	& handle		3624611	0					
ANR	3624689	UnaryOperator	&		3624611	0					
ANR	3624690	Identifier	handle		3624611	1					
ANR	3624691	Argument	line_contents		3624611	4					
ANR	3624692	Identifier	line_contents		3624611	0					
ANR	3624693	Argument	BLOCK_STATS_LINE_MAX		3624611	5					
ANR	3624694	Identifier	BLOCK_STATS_LINE_MAX		3624611	0					
ANR	3624695	WhileStatement	while ( ret == 0 )		3624611	8					
ANR	3624696	Condition	ret == 0	628:8:19240:19247	3624611	0	True				
ANR	3624697	EqualityExpression	ret == 0		3624611	0		==			
ANR	3624698	Identifier	ret		3624611	0					
ANR	3624699	PrimaryExpression	0		3624611	1					
ANR	3624700	CompoundStatement		14:18:438:438	3624611	1					
ANR	3624701	ExpressionStatement	ctr = 0	629:2:19254:19261	3624611	0	True				
ANR	3624702	AssignmentExpression	ctr = 0		3624611	0		=			
ANR	3624703	Identifier	ctr		3624611	0					
ANR	3624704	PrimaryExpression	0		3624611	1					
ANR	3624705	ExpressionStatement	"word = strtok_r ( line_contents , sep , & tok_handle )"	630:2:19265:19313	3624611	1	True				
ANR	3624706	AssignmentExpression	"word = strtok_r ( line_contents , sep , & tok_handle )"		3624611	0		=			
ANR	3624707	Identifier	word		3624611	0					
ANR	3624708	CallExpression	"strtok_r ( line_contents , sep , & tok_handle )"		3624611	1					
ANR	3624709	Callee	strtok_r		3624611	0					
ANR	3624710	Identifier	strtok_r		3624611	0					
ANR	3624711	ArgumentList	line_contents		3624611	1					
ANR	3624712	Argument	line_contents		3624611	0					
ANR	3624713	Identifier	line_contents		3624611	0					
ANR	3624714	Argument	sep		3624611	1					
ANR	3624715	Identifier	sep		3624611	0					
ANR	3624716	Argument	& tok_handle		3624611	2					
ANR	3624717	UnaryOperationExpression	& tok_handle		3624611	0					
ANR	3624718	UnaryOperator	&		3624611	0					
ANR	3624719	Identifier	tok_handle		3624611	1					
ANR	3624720	WhileStatement	while ( word && ctr < 3 )		3624611	2					
ANR	3624721	Condition	word && ctr < 3	631:9:19324:19338	3624611	0	True				
ANR	3624722	AndExpression	word && ctr < 3		3624611	0		&&			
ANR	3624723	Identifier	word		3624611	0					
ANR	3624724	RelationalExpression	ctr < 3		3624611	1		<			
ANR	3624725	Identifier	ctr		3624611	0					
ANR	3624726	PrimaryExpression	3		3624611	1					
ANR	3624727	CompoundStatement		17:26:529:529	3624611	1					
ANR	3624728	ExpressionStatement	info [ ctr ++ ] = word	632:3:19346:19364	3624611	0	True				
ANR	3624729	AssignmentExpression	info [ ctr ++ ] = word		3624611	0		=			
ANR	3624730	ArrayIndexing	info [ ctr ++ ]		3624611	0					
ANR	3624731	Identifier	info		3624611	0					
ANR	3624732	PostIncDecOperationExpression	ctr ++		3624611	1					
ANR	3624733	Identifier	ctr		3624611	0					
ANR	3624734	IncDec	++		3624611	1					
ANR	3624735	Identifier	word		3624611	1					
ANR	3624736	ExpressionStatement	"word = strtok_r ( NULL , sep , & tok_handle )"	633:3:19369:19408	3624611	1	True				
ANR	3624737	AssignmentExpression	"word = strtok_r ( NULL , sep , & tok_handle )"		3624611	0		=			
ANR	3624738	Identifier	word		3624611	0					
ANR	3624739	CallExpression	"strtok_r ( NULL , sep , & tok_handle )"		3624611	1					
ANR	3624740	Callee	strtok_r		3624611	0					
ANR	3624741	Identifier	strtok_r		3624611	0					
ANR	3624742	ArgumentList	NULL		3624611	1					
ANR	3624743	Argument	NULL		3624611	0					
ANR	3624744	Identifier	NULL		3624611	0					
ANR	3624745	Argument	sep		3624611	1					
ANR	3624746	Identifier	sep		3624611	0					
ANR	3624747	Argument	& tok_handle		3624611	2					
ANR	3624748	UnaryOperationExpression	& tok_handle		3624611	0					
ANR	3624749	UnaryOperator	&		3624611	0					
ANR	3624750	Identifier	tok_handle		3624611	1					
ANR	3624751	IfStatement	if ( ctr == 3 )		3624611	3					
ANR	3624752	Condition	ctr == 3	635:6:19420:19427	3624611	0	True				
ANR	3624753	EqualityExpression	ctr == 3		3624611	0		==			
ANR	3624754	Identifier	ctr		3624611	0					
ANR	3624755	PrimaryExpression	3		3624611	1					
ANR	3624756	CompoundStatement		23:3:637:676	3624611	1					
ANR	3624757	ExpressionStatement	errno = 0	636:3:19435:19444	3624611	0	True				
ANR	3624758	AssignmentExpression	errno = 0		3624611	0		=			
ANR	3624759	Identifier	errno		3624611	0					
ANR	3624760	PrimaryExpression	0		3624611	1					
ANR	3624761	IdentifierDeclStatement	"long ctrval = strtol ( info [ 2 ] , NULL , 10 ) ;"	637:3:19449:19488	3624611	1	True				
ANR	3624762	IdentifierDecl	"ctrval = strtol ( info [ 2 ] , NULL , 10 )"		3624611	0					
ANR	3624763	IdentifierDeclType	long		3624611	0					
ANR	3624764	Identifier	ctrval		3624611	1					
ANR	3624765	AssignmentExpression	"ctrval = strtol ( info [ 2 ] , NULL , 10 )"		3624611	2		=			
ANR	3624766	Identifier	ctrval		3624611	0					
ANR	3624767	CallExpression	"strtol ( info [ 2 ] , NULL , 10 )"		3624611	1					
ANR	3624768	Callee	strtol		3624611	0					
ANR	3624769	Identifier	strtol		3624611	0					
ANR	3624770	ArgumentList	info [ 2 ]		3624611	1					
ANR	3624771	Argument	info [ 2 ]		3624611	0					
ANR	3624772	ArrayIndexing	info [ 2 ]		3624611	0					
ANR	3624773	Identifier	info		3624611	0					
ANR	3624774	PrimaryExpression	2		3624611	1					
ANR	3624775	Argument	NULL		3624611	1					
ANR	3624776	Identifier	NULL		3624611	0					
ANR	3624777	Argument	10		3624611	2					
ANR	3624778	PrimaryExpression	10		3624611	0					
ANR	3624779	IfStatement	if ( errno )		3624611	2					
ANR	3624780	Condition	errno	638:7:19497:19501	3624611	0	True				
ANR	3624781	Identifier	errno		3624611	0					
ANR	3624782	CompoundStatement		24:14:692:692	3624611	1					
ANR	3624783	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Error parsing kernel value to a long: %s; %s\\n"" , info [ 2 ] , strerror ( errno ) )"	639:4:19510:19612	3624611	0	True				
ANR	3624784	CallExpression	"dprintf ( D_FULLDEBUG , ""Error parsing kernel value to a long: %s; %s\\n"" , info [ 2 ] , strerror ( errno ) )"		3624611	0					
ANR	3624785	Callee	dprintf		3624611	0					
ANR	3624786	Identifier	dprintf		3624611	0					
ANR	3624787	ArgumentList	D_FULLDEBUG		3624611	1					
ANR	3624788	Argument	D_FULLDEBUG		3624611	0					
ANR	3624789	Identifier	D_FULLDEBUG		3624611	0					
ANR	3624790	Argument	"""Error parsing kernel value to a long: %s; %s\\n"""		3624611	1					
ANR	3624791	PrimaryExpression	"""Error parsing kernel value to a long: %s; %s\\n"""		3624611	0					
ANR	3624792	Argument	info [ 2 ]		3624611	2					
ANR	3624793	ArrayIndexing	info [ 2 ]		3624611	0					
ANR	3624794	Identifier	info		3624611	0					
ANR	3624795	PrimaryExpression	2		3624611	1					
ANR	3624796	Argument	strerror ( errno )		3624611	3					
ANR	3624797	CallExpression	strerror ( errno )		3624611	0					
ANR	3624798	Callee	strerror		3624611	0					
ANR	3624799	Identifier	strerror		3624611	0					
ANR	3624800	ArgumentList	errno		3624611	1					
ANR	3624801	Argument	errno		3624611	0					
ANR	3624802	Identifier	errno		3624611	0					
ANR	3624803	BreakStatement	break ;	641:4:19618:19623	3624611	1	True				
ANR	3624804	IfStatement	"if ( strcmp ( info [ 1 ] , ""Read"" ) == 0 )"		3624611	3					
ANR	3624805	Condition	"strcmp ( info [ 1 ] , ""Read"" ) == 0"	643:7:19637:19664	3624611	0	True				
ANR	3624806	EqualityExpression	"strcmp ( info [ 1 ] , ""Read"" ) == 0"		3624611	0		==			
ANR	3624807	CallExpression	"strcmp ( info [ 1 ] , ""Read"" )"		3624611	0					
ANR	3624808	Callee	strcmp		3624611	0					
ANR	3624809	Identifier	strcmp		3624611	0					
ANR	3624810	ArgumentList	info [ 1 ]		3624611	1					
ANR	3624811	Argument	info [ 1 ]		3624611	0					
ANR	3624812	ArrayIndexing	info [ 1 ]		3624611	0					
ANR	3624813	Identifier	info		3624611	0					
ANR	3624814	PrimaryExpression	1		3624611	1					
ANR	3624815	Argument	"""Read"""		3624611	1					
ANR	3624816	PrimaryExpression	"""Read"""		3624611	0					
ANR	3624817	PrimaryExpression	0		3624611	1					
ANR	3624818	CompoundStatement		29:37:855:855	3624611	1					
ANR	3624819	ExpressionStatement	read_bytes += ctrval	644:4:19673:19693	3624611	0	True				
ANR	3624820	AssignmentExpression	read_bytes += ctrval		3624611	0		+=			
ANR	3624821	Identifier	read_bytes		3624611	0					
ANR	3624822	Identifier	ctrval		3624611	1					
ANR	3624823	ElseStatement	else		3624611	0					
ANR	3624824	IfStatement	"if ( strcmp ( info [ 1 ] , ""Write"" ) == 0 )"		3624611	0					
ANR	3624825	Condition	"strcmp ( info [ 1 ] , ""Write"" ) == 0"	645:14:19709:19737	3624611	0	True				
ANR	3624826	EqualityExpression	"strcmp ( info [ 1 ] , ""Write"" ) == 0"		3624611	0		==			
ANR	3624827	CallExpression	"strcmp ( info [ 1 ] , ""Write"" )"		3624611	0					
ANR	3624828	Callee	strcmp		3624611	0					
ANR	3624829	Identifier	strcmp		3624611	0					
ANR	3624830	ArgumentList	info [ 1 ]		3624611	1					
ANR	3624831	Argument	info [ 1 ]		3624611	0					
ANR	3624832	ArrayIndexing	info [ 1 ]		3624611	0					
ANR	3624833	Identifier	info		3624611	0					
ANR	3624834	PrimaryExpression	1		3624611	1					
ANR	3624835	Argument	"""Write"""		3624611	1					
ANR	3624836	PrimaryExpression	"""Write"""		3624611	0					
ANR	3624837	PrimaryExpression	0		3624611	1					
ANR	3624838	CompoundStatement		31:45:928:928	3624611	1					
ANR	3624839	ExpressionStatement	write_bytes += ctrval	646:4:19746:19767	3624611	0	True				
ANR	3624840	AssignmentExpression	write_bytes += ctrval		3624611	0		+=			
ANR	3624841	Identifier	write_bytes		3624611	0					
ANR	3624842	Identifier	ctrval		3624611	1					
ANR	3624843	ExpressionStatement	"ret = cgroup_read_value_next ( & handle , line_contents , BLOCK_STATS_LINE_MAX )"	649:2:19780:19854	3624611	4	True				
ANR	3624844	AssignmentExpression	"ret = cgroup_read_value_next ( & handle , line_contents , BLOCK_STATS_LINE_MAX )"		3624611	0		=			
ANR	3624845	Identifier	ret		3624611	0					
ANR	3624846	CallExpression	"cgroup_read_value_next ( & handle , line_contents , BLOCK_STATS_LINE_MAX )"		3624611	1					
ANR	3624847	Callee	cgroup_read_value_next		3624611	0					
ANR	3624848	Identifier	cgroup_read_value_next		3624611	0					
ANR	3624849	ArgumentList	& handle		3624611	1					
ANR	3624850	Argument	& handle		3624611	0					
ANR	3624851	UnaryOperationExpression	& handle		3624611	0					
ANR	3624852	UnaryOperator	&		3624611	0					
ANR	3624853	Identifier	handle		3624611	1					
ANR	3624854	Argument	line_contents		3624611	1					
ANR	3624855	Identifier	line_contents		3624611	0					
ANR	3624856	Argument	BLOCK_STATS_LINE_MAX		3624611	2					
ANR	3624857	Identifier	BLOCK_STATS_LINE_MAX		3624611	0					
ANR	3624858	IfStatement	if ( ret != ECGEOF )		3624611	9					
ANR	3624859	Condition	ret != ECGEOF	651:5:19864:19876	3624611	0	True				
ANR	3624860	EqualityExpression	ret != ECGEOF		3624611	0		!=			
ANR	3624861	Identifier	ret		3624611	0					
ANR	3624862	Identifier	ECGEOF		3624611	1					
ANR	3624863	CompoundStatement		37:20:1067:1067	3624611	1					
ANR	3624864	ExpressionStatement	"dprintf ( D_ALWAYS , ""Internal cgroup error when retrieving block statistics: %s\\n"" , cgroup_strerror ( ret ) )"	652:2:19883:19986	3624611	0	True				
ANR	3624865	CallExpression	"dprintf ( D_ALWAYS , ""Internal cgroup error when retrieving block statistics: %s\\n"" , cgroup_strerror ( ret ) )"		3624611	0					
ANR	3624866	Callee	dprintf		3624611	0					
ANR	3624867	Identifier	dprintf		3624611	0					
ANR	3624868	ArgumentList	D_ALWAYS		3624611	1					
ANR	3624869	Argument	D_ALWAYS		3624611	0					
ANR	3624870	Identifier	D_ALWAYS		3624611	0					
ANR	3624871	Argument	"""Internal cgroup error when retrieving block statistics: %s\\n"""		3624611	1					
ANR	3624872	PrimaryExpression	"""Internal cgroup error when retrieving block statistics: %s\\n"""		3624611	0					
ANR	3624873	Argument	cgroup_strerror ( ret )		3624611	2					
ANR	3624874	CallExpression	cgroup_strerror ( ret )		3624611	0					
ANR	3624875	Callee	cgroup_strerror		3624611	0					
ANR	3624876	Identifier	cgroup_strerror		3624611	0					
ANR	3624877	ArgumentList	ret		3624611	1					
ANR	3624878	Argument	ret		3624611	0					
ANR	3624879	Identifier	ret		3624611	0					
ANR	3624880	ReturnStatement	return 1 ;	653:2:19990:19998	3624611	1	True				
ANR	3624881	PrimaryExpression	1		3624611	0					
ANR	3624882	ExpressionStatement	usage -> block_read_bytes = read_bytes	656:1:20005:20041	3624611	10	True				
ANR	3624883	AssignmentExpression	usage -> block_read_bytes = read_bytes		3624611	0		=			
ANR	3624884	PtrMemberAccess	usage -> block_read_bytes		3624611	0					
ANR	3624885	Identifier	usage		3624611	0					
ANR	3624886	Identifier	block_read_bytes		3624611	1					
ANR	3624887	Identifier	read_bytes		3624611	1					
ANR	3624888	ExpressionStatement	usage -> block_write_bytes = write_bytes	657:1:20044:20082	3624611	11	True				
ANR	3624889	AssignmentExpression	usage -> block_write_bytes = write_bytes		3624611	0		=			
ANR	3624890	PtrMemberAccess	usage -> block_write_bytes		3624611	0					
ANR	3624891	Identifier	usage		3624611	0					
ANR	3624892	Identifier	block_write_bytes		3624611	1					
ANR	3624893	Identifier	write_bytes		3624611	1					
ANR	3624894	ReturnStatement	return 0 ;	659:1:20086:20094	3624611	12	True				
ANR	3624895	PrimaryExpression	0		3624611	0					
ANR	3624896	ReturnType	int		3624611	1					
ANR	3624897	Identifier	ProcFamily :: aggregate_usage_cgroup_blockio		3624611	2					
ANR	3624898	ParameterList	ProcFamilyUsage * usage		3624611	3					
ANR	3624899	Parameter	ProcFamilyUsage * usage	614:43:18787:18808	3624611	0	True				
ANR	3624900	ParameterType	ProcFamilyUsage *		3624611	0					
ANR	3624901	Identifier	usage		3624611	1					
ANR	3624902	CFGEntryNode	ENTRY		3624611		True				
ANR	3624903	CFGExitNode	EXIT		3624611		True				
ANR	3624904	Symbol	m_cgroup_block_mounted		3624611						
ANR	3624905	Symbol	usage -> block_read_bytes		3624611						
ANR	3624906	Symbol	usage		3624611						
ANR	3624907	Symbol	& tok_handle		3624611						
ANR	3624908	Symbol	BLOCK_STATS_LINE_MAX		3624611						
ANR	3624909	Symbol	cgroup_strerror		3624611						
ANR	3624910	Symbol	& handle		3624611						
ANR	3624911	Symbol	strtol		3624611						
ANR	3624912	Symbol	ECGEOF		3624611						
ANR	3624913	Symbol	info		3624611						
ANR	3624914	Symbol	sep		3624611						
ANR	3624915	Symbol	ret		3624611						
ANR	3624916	Symbol	ctr		3624611						
ANR	3624917	Symbol	strcmp		3624611						
ANR	3624918	Symbol	BLOCK_CONTROLLER		3624611						
ANR	3624919	Symbol	cgroup_read_value_begin		3624611						
ANR	3624920	Symbol	errno		3624611						
ANR	3624921	Symbol	NULL		3624611						
ANR	3624922	Symbol	write_bytes		3624611						
ANR	3624923	Symbol	ctrval		3624611						
ANR	3624924	Symbol	D_ALWAYS		3624611						
ANR	3624925	Symbol	handle		3624611						
ANR	3624926	Symbol	D_FULLDEBUG		3624611						
ANR	3624927	Symbol	strtok_r		3624611						
ANR	3624928	Symbol	* usage		3624611						
ANR	3624929	Symbol	blkio_stats_name		3624611						
ANR	3624930	Symbol	read_bytes		3624611						
ANR	3624931	Symbol	strerror		3624611						
ANR	3624932	Symbol	line_contents		3624611						
ANR	3624933	Symbol	usage -> block_write_bytes		3624611						
ANR	3624934	Symbol	tok_handle		3624611						
ANR	3624935	Symbol	* info		3624611						
ANR	3624936	Symbol	m_cgroup_string		3624611						
ANR	3624937	Symbol	word		3624611						
ANR	3624938	Symbol	cgroup_read_value_next		3624611						
ANR	3624939	Function	ProcFamily :: aggregate_usage_cgroup	662:0:20099:22413							
ANR	3624940	FunctionDef	ProcFamily :: aggregate_usage_cgroup (ProcFamilyUsage * usage)		3624939	0					
ANR	3624941	CompoundStatement		664:0:20162:22413	3624939	0					
ANR	3624942	IfStatement	if ( ! m_cgroup_memory_mounted || ! m_cgroup_cpuacct_mounted )		3624939	0					
ANR	3624943	Condition	! m_cgroup_memory_mounted || ! m_cgroup_cpuacct_mounted	665:5:20169:20221	3624939	0	True				
ANR	3624944	OrExpression	! m_cgroup_memory_mounted || ! m_cgroup_cpuacct_mounted		3624939	0		||			
ANR	3624945	UnaryOperationExpression	! m_cgroup_memory_mounted		3624939	0					
ANR	3624946	UnaryOperator	!		3624939	0					
ANR	3624947	Identifier	m_cgroup_memory_mounted		3624939	1					
ANR	3624948	UnaryOperationExpression	! m_cgroup_cpuacct_mounted		3624939	1					
ANR	3624949	UnaryOperator	!		3624939	0					
ANR	3624950	Identifier	m_cgroup_cpuacct_mounted		3624939	1					
ANR	3624951	CompoundStatement		2:60:61:61	3624939	1					
ANR	3624952	ReturnStatement	return - 1 ;	666:2:20228:20237	3624939	0	True				
ANR	3624953	UnaryOperationExpression	- 1		3624939	0					
ANR	3624954	UnaryOperator	-		3624939	0					
ANR	3624955	PrimaryExpression	1		3624939	1					
ANR	3624956	IdentifierDeclStatement	int err ;	669:1:20244:20251	3624939	1	True				
ANR	3624957	IdentifierDecl	err		3624939	0					
ANR	3624958	IdentifierDeclType	int		3624939	0					
ANR	3624959	Identifier	err		3624939	1					
ANR	3624960	IdentifierDeclStatement	struct cgroup_stat stats ;	670:1:20254:20278	3624939	2	True				
ANR	3624961	IdentifierDecl	stats		3624939	0					
ANR	3624962	IdentifierDeclType	struct cgroup_stat		3624939	0					
ANR	3624963	Identifier	stats		3624939	1					
ANR	3624964	IdentifierDeclStatement	void * * handle ;	671:1:20281:20294	3624939	3	True				
ANR	3624965	IdentifierDecl	* * handle		3624939	0					
ANR	3624966	IdentifierDeclType	void * *		3624939	0					
ANR	3624967	Identifier	handle		3624939	1					
ANR	3624968	IdentifierDeclStatement	"u_int64_t tmp = 0 , image = 0 ;"	672:1:20297:20325	3624939	4	True				
ANR	3624969	IdentifierDecl	tmp = 0		3624939	0					
ANR	3624970	IdentifierDeclType	u_int64_t		3624939	0					
ANR	3624971	Identifier	tmp		3624939	1					
ANR	3624972	AssignmentExpression	tmp = 0		3624939	2		=			
ANR	3624973	Identifier	tmp		3624939	0					
ANR	3624974	PrimaryExpression	0		3624939	1					
ANR	3624975	IdentifierDecl	image = 0		3624939	1					
ANR	3624976	IdentifierDeclType	u_int64_t		3624939	0					
ANR	3624977	Identifier	image		3624939	1					
ANR	3624978	AssignmentExpression	image = 0		3624939	2		=			
ANR	3624979	Identifier	image		3624939	0					
ANR	3624980	PrimaryExpression	0		3624939	1					
ANR	3624981	IdentifierDeclStatement	bool found_rss ;	673:1:20328:20342	3624939	5	True				
ANR	3624982	IdentifierDecl	found_rss		3624939	0					
ANR	3624983	IdentifierDeclType	bool		3624939	0					
ANR	3624984	Identifier	found_rss		3624939	1					
ANR	3624985	ExpressionStatement	handle = ( void * * ) malloc ( sizeof ( void * ) )	676:1:20364:20403	3624939	6	True				
ANR	3624986	AssignmentExpression	handle = ( void * * ) malloc ( sizeof ( void * ) )		3624939	0		=			
ANR	3624987	Identifier	handle		3624939	0					
ANR	3624988	CastExpression	( void * * ) malloc ( sizeof ( void * ) )		3624939	1					
ANR	3624989	CastTarget	void * *		3624939	0					
ANR	3624990	CallExpression	malloc ( sizeof ( void * ) )		3624939	1					
ANR	3624991	Callee	malloc		3624939	0					
ANR	3624992	Identifier	malloc		3624939	0					
ANR	3624993	ArgumentList	sizeof ( void * )		3624939	1					
ANR	3624994	Argument	sizeof ( void * )		3624939	0					
ANR	3624995	SizeofExpression	sizeof ( void * )		3624939	0					
ANR	3624996	Sizeof	sizeof		3624939	0					
ANR	3624997	SizeofOperand	void *		3624939	1					
ANR	3624998	ExpressionStatement	ASSERT ( handle != NULL )	677:1:20406:20429	3624939	7	True				
ANR	3624999	CallExpression	ASSERT ( handle != NULL )		3624939	0					
ANR	3625000	Callee	ASSERT		3624939	0					
ANR	3625001	Identifier	ASSERT		3624939	0					
ANR	3625002	ArgumentList	handle != NULL		3624939	1					
ANR	3625003	Argument	handle != NULL		3624939	0					
ANR	3625004	EqualityExpression	handle != NULL		3624939	0		!=			
ANR	3625005	Identifier	handle		3624939	0					
ANR	3625006	Identifier	NULL		3624939	1					
ANR	3625007	ExpressionStatement	* handle = NULL	678:1:20432:20446	3624939	8	True				
ANR	3625008	AssignmentExpression	* handle = NULL		3624939	0		=			
ANR	3625009	UnaryOperationExpression	* handle		3624939	0					
ANR	3625010	UnaryOperator	*		3624939	0					
ANR	3625011	Identifier	handle		3624939	1					
ANR	3625012	Identifier	NULL		3624939	1					
ANR	3625013	ExpressionStatement	"err = cgroup_read_stats_begin ( MEMORY_CONTROLLER , m_cgroup_string , handle , & stats )"	680:1:20450:20531	3624939	9	True				
ANR	3625014	AssignmentExpression	"err = cgroup_read_stats_begin ( MEMORY_CONTROLLER , m_cgroup_string , handle , & stats )"		3624939	0		=			
ANR	3625015	Identifier	err		3624939	0					
ANR	3625016	CallExpression	"cgroup_read_stats_begin ( MEMORY_CONTROLLER , m_cgroup_string , handle , & stats )"		3624939	1					
ANR	3625017	Callee	cgroup_read_stats_begin		3624939	0					
ANR	3625018	Identifier	cgroup_read_stats_begin		3624939	0					
ANR	3625019	ArgumentList	MEMORY_CONTROLLER		3624939	1					
ANR	3625020	Argument	MEMORY_CONTROLLER		3624939	0					
ANR	3625021	Identifier	MEMORY_CONTROLLER		3624939	0					
ANR	3625022	Argument	m_cgroup_string		3624939	1					
ANR	3625023	Identifier	m_cgroup_string		3624939	0					
ANR	3625024	Argument	handle		3624939	2					
ANR	3625025	Identifier	handle		3624939	0					
ANR	3625026	Argument	& stats		3624939	3					
ANR	3625027	UnaryOperationExpression	& stats		3624939	0					
ANR	3625028	UnaryOperator	&		3624939	0					
ANR	3625029	Identifier	stats		3624939	1					
ANR	3625030	WhileStatement	while ( err != ECGEOF )		3624939	10					
ANR	3625031	Condition	err != ECGEOF	681:8:20541:20553	3624939	0	True				
ANR	3625032	EqualityExpression	err != ECGEOF		3624939	0		!=			
ANR	3625033	Identifier	err		3624939	0					
ANR	3625034	Identifier	ECGEOF		3624939	1					
ANR	3625035	CompoundStatement		18:23:393:393	3624939	1					
ANR	3625036	IfStatement	if ( err > 0 )		3624939	0					
ANR	3625037	Condition	err > 0	682:6:20564:20570	3624939	0	True				
ANR	3625038	RelationalExpression	err > 0		3624939	0		>			
ANR	3625039	Identifier	err		3624939	0					
ANR	3625040	PrimaryExpression	0		3624939	1					
ANR	3625041	CompoundStatement		19:15:410:410	3624939	1					
ANR	3625042	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""Unable to read cgroup %s memory stats (ProcFamily %u): %u %s.\\n"" , m_cgroup_string , m_root_pid , err , cgroup_strerror ( err ) )"	683:3:20578:20730	3624939	0	True				
ANR	3625043	CallExpression	"dprintf ( D_PROCFAMILY , ""Unable to read cgroup %s memory stats (ProcFamily %u): %u %s.\\n"" , m_cgroup_string , m_root_pid , err , cgroup_strerror ( err ) )"		3624939	0					
ANR	3625044	Callee	dprintf		3624939	0					
ANR	3625045	Identifier	dprintf		3624939	0					
ANR	3625046	ArgumentList	D_PROCFAMILY		3624939	1					
ANR	3625047	Argument	D_PROCFAMILY		3624939	0					
ANR	3625048	Identifier	D_PROCFAMILY		3624939	0					
ANR	3625049	Argument	"""Unable to read cgroup %s memory stats (ProcFamily %u): %u %s.\\n"""		3624939	1					
ANR	3625050	PrimaryExpression	"""Unable to read cgroup %s memory stats (ProcFamily %u): %u %s.\\n"""		3624939	0					
ANR	3625051	Argument	m_cgroup_string		3624939	2					
ANR	3625052	Identifier	m_cgroup_string		3624939	0					
ANR	3625053	Argument	m_root_pid		3624939	3					
ANR	3625054	Identifier	m_root_pid		3624939	0					
ANR	3625055	Argument	err		3624939	4					
ANR	3625056	Identifier	err		3624939	0					
ANR	3625057	Argument	cgroup_strerror ( err )		3624939	5					
ANR	3625058	CallExpression	cgroup_strerror ( err )		3624939	0					
ANR	3625059	Callee	cgroup_strerror		3624939	0					
ANR	3625060	Identifier	cgroup_strerror		3624939	0					
ANR	3625061	ArgumentList	err		3624939	1					
ANR	3625062	Argument	err		3624939	0					
ANR	3625063	Identifier	err		3624939	0					
ANR	3625064	BreakStatement	break ;	686:3:20735:20740	3624939	1	True				
ANR	3625065	IfStatement	"if ( _check_stat_uint64 ( stats , ""total_rss"" , & tmp ) )"		3624939	1					
ANR	3625066	Condition	"_check_stat_uint64 ( stats , ""total_rss"" , & tmp )"	688:6:20752:20795	3624939	0	True				
ANR	3625067	CallExpression	"_check_stat_uint64 ( stats , ""total_rss"" , & tmp )"		3624939	0					
ANR	3625068	Callee	_check_stat_uint64		3624939	0					
ANR	3625069	Identifier	_check_stat_uint64		3624939	0					
ANR	3625070	ArgumentList	stats		3624939	1					
ANR	3625071	Argument	stats		3624939	0					
ANR	3625072	Identifier	stats		3624939	0					
ANR	3625073	Argument	"""total_rss"""		3624939	1					
ANR	3625074	PrimaryExpression	"""total_rss"""		3624939	0					
ANR	3625075	Argument	& tmp		3624939	2					
ANR	3625076	UnaryOperationExpression	& tmp		3624939	0					
ANR	3625077	UnaryOperator	&		3624939	0					
ANR	3625078	Identifier	tmp		3624939	1					
ANR	3625079	CompoundStatement		25:52:635:635	3624939	1					
ANR	3625080	ExpressionStatement	image += tmp	689:3:20803:20815	3624939	0	True				
ANR	3625081	AssignmentExpression	image += tmp		3624939	0		+=			
ANR	3625082	Identifier	image		3624939	0					
ANR	3625083	Identifier	tmp		3624939	1					
ANR	3625084	ExpressionStatement	usage -> total_resident_set_size = tmp / 1024	690:3:20820:20861	3624939	1	True				
ANR	3625085	AssignmentExpression	usage -> total_resident_set_size = tmp / 1024		3624939	0		=			
ANR	3625086	PtrMemberAccess	usage -> total_resident_set_size		3624939	0					
ANR	3625087	Identifier	usage		3624939	0					
ANR	3625088	Identifier	total_resident_set_size		3624939	1					
ANR	3625089	MultiplicativeExpression	tmp / 1024		3624939	1		/			
ANR	3625090	Identifier	tmp		3624939	0					
ANR	3625091	PrimaryExpression	1024		3624939	1					
ANR	3625092	ExpressionStatement	found_rss = true	691:3:20866:20882	3624939	2	True				
ANR	3625093	AssignmentExpression	found_rss = true		3624939	0		=			
ANR	3625094	Identifier	found_rss		3624939	0					
ANR	3625095	Identifier	true		3624939	1					
ANR	3625096	ElseStatement	else		3624939	0					
ANR	3625097	IfStatement	"if ( _check_stat_uint64 ( stats , ""total_mapped_file"" , & tmp ) )"		3624939	0					
ANR	3625098	Condition	"_check_stat_uint64 ( stats , ""total_mapped_file"" , & tmp )"	692:13:20897:20948	3624939	0	True				
ANR	3625099	CallExpression	"_check_stat_uint64 ( stats , ""total_mapped_file"" , & tmp )"		3624939	0					
ANR	3625100	Callee	_check_stat_uint64		3624939	0					
ANR	3625101	Identifier	_check_stat_uint64		3624939	0					
ANR	3625102	ArgumentList	stats		3624939	1					
ANR	3625103	Argument	stats		3624939	0					
ANR	3625104	Identifier	stats		3624939	0					
ANR	3625105	Argument	"""total_mapped_file"""		3624939	1					
ANR	3625106	PrimaryExpression	"""total_mapped_file"""		3624939	0					
ANR	3625107	Argument	& tmp		3624939	2					
ANR	3625108	UnaryOperationExpression	& tmp		3624939	0					
ANR	3625109	UnaryOperator	&		3624939	0					
ANR	3625110	Identifier	tmp		3624939	1					
ANR	3625111	CompoundStatement		29:67:788:788	3624939	1					
ANR	3625112	ExpressionStatement	image += tmp	693:3:20956:20968	3624939	0	True				
ANR	3625113	AssignmentExpression	image += tmp		3624939	0		+=			
ANR	3625114	Identifier	image		3624939	0					
ANR	3625115	Identifier	tmp		3624939	1					
ANR	3625116	ElseStatement	else		3624939	0					
ANR	3625117	IfStatement	"if ( _check_stat_uint64 ( stats , ""total_swap"" , & tmp ) )"		3624939	0					
ANR	3625118	Condition	"_check_stat_uint64 ( stats , ""total_swap"" , & tmp )"	694:13:20983:21027	3624939	0	True				
ANR	3625119	CallExpression	"_check_stat_uint64 ( stats , ""total_swap"" , & tmp )"		3624939	0					
ANR	3625120	Callee	_check_stat_uint64		3624939	0					
ANR	3625121	Identifier	_check_stat_uint64		3624939	0					
ANR	3625122	ArgumentList	stats		3624939	1					
ANR	3625123	Argument	stats		3624939	0					
ANR	3625124	Identifier	stats		3624939	0					
ANR	3625125	Argument	"""total_swap"""		3624939	1					
ANR	3625126	PrimaryExpression	"""total_swap"""		3624939	0					
ANR	3625127	Argument	& tmp		3624939	2					
ANR	3625128	UnaryOperationExpression	& tmp		3624939	0					
ANR	3625129	UnaryOperator	&		3624939	0					
ANR	3625130	Identifier	tmp		3624939	1					
ANR	3625131	CompoundStatement		31:60:867:867	3624939	1					
ANR	3625132	ExpressionStatement	image += tmp	695:3:21035:21047	3624939	0	True				
ANR	3625133	AssignmentExpression	image += tmp		3624939	0		+=			
ANR	3625134	Identifier	image		3624939	0					
ANR	3625135	Identifier	tmp		3624939	1					
ANR	3625136	ExpressionStatement	"err = cgroup_read_stats_next ( handle , & stats )"	697:2:21055:21099	3624939	2	True				
ANR	3625137	AssignmentExpression	"err = cgroup_read_stats_next ( handle , & stats )"		3624939	0		=			
ANR	3625138	Identifier	err		3624939	0					
ANR	3625139	CallExpression	"cgroup_read_stats_next ( handle , & stats )"		3624939	1					
ANR	3625140	Callee	cgroup_read_stats_next		3624939	0					
ANR	3625141	Identifier	cgroup_read_stats_next		3624939	0					
ANR	3625142	ArgumentList	handle		3624939	1					
ANR	3625143	Argument	handle		3624939	0					
ANR	3625144	Identifier	handle		3624939	0					
ANR	3625145	Argument	& stats		3624939	1					
ANR	3625146	UnaryOperationExpression	& stats		3624939	0					
ANR	3625147	UnaryOperator	&		3624939	0					
ANR	3625148	Identifier	stats		3624939	1					
ANR	3625149	IfStatement	if ( * handle != NULL )		3624939	11					
ANR	3625150	Condition	* handle != NULL	699:5:21109:21123	3624939	0	True				
ANR	3625151	EqualityExpression	* handle != NULL		3624939	0		!=			
ANR	3625152	UnaryOperationExpression	* handle		3624939	0					
ANR	3625153	UnaryOperator	*		3624939	0					
ANR	3625154	Identifier	handle		3624939	1					
ANR	3625155	Identifier	NULL		3624939	1					
ANR	3625156	CompoundStatement		36:22:963:963	3624939	1					
ANR	3625157	ExpressionStatement	cgroup_read_stats_end ( handle )	700:2:21130:21159	3624939	0	True				
ANR	3625158	CallExpression	cgroup_read_stats_end ( handle )		3624939	0					
ANR	3625159	Callee	cgroup_read_stats_end		3624939	0					
ANR	3625160	Identifier	cgroup_read_stats_end		3624939	0					
ANR	3625161	ArgumentList	handle		3624939	1					
ANR	3625162	Argument	handle		3624939	0					
ANR	3625163	Identifier	handle		3624939	0					
ANR	3625164	IfStatement	if ( found_rss )		3624939	12					
ANR	3625165	Condition	found_rss	702:5:21169:21177	3624939	0	True				
ANR	3625166	Identifier	found_rss		3624939	0					
ANR	3625167	CompoundStatement		39:16:1017:1017	3624939	1					
ANR	3625168	ExpressionStatement	usage -> total_image_size = image / 1024	703:2:21184:21220	3624939	0	True				
ANR	3625169	AssignmentExpression	usage -> total_image_size = image / 1024		3624939	0		=			
ANR	3625170	PtrMemberAccess	usage -> total_image_size		3624939	0					
ANR	3625171	Identifier	usage		3624939	0					
ANR	3625172	Identifier	total_image_size		3624939	1					
ANR	3625173	MultiplicativeExpression	image / 1024		3624939	1		/			
ANR	3625174	Identifier	image		3624939	0					
ANR	3625175	PrimaryExpression	1024		3624939	1					
ANR	3625176	ElseStatement	else		3624939	0					
ANR	3625177	CompoundStatement		41:8:1067:1067	3624939	0					
ANR	3625178	Statement	dprintf	705:2:21234:21240	3624939	0	True				
ANR	3625179	Statement	(	705:9:21241:21241	3624939	1	True				
ANR	3625180	Statement	D_PROCFAMILY	705:10:21242:21253	3624939	2	True				
ANR	3625181	Statement	","	705:22:21254:21254	3624939	3	True				
ANR	3625182	Statement	"""Unable to find all necesary memory structures for cgroup %s"""	706:3:21259:21319	3624939	4	True				
ANR	3625183	Statement	""" (ProcFamily %u)\\n"""	707:3:21324:21343	3624939	5	True				
ANR	3625184	Statement	","	707:23:21344:21344	3624939	6	True				
ANR	3625185	Statement	m_cgroup_string	708:3:21349:21363	3624939	7	True				
ANR	3625186	Statement	","	708:18:21364:21364	3624939	8	True				
ANR	3625187	Statement	m_root_pid	708:20:21366:21375	3624939	9	True				
ANR	3625188	Statement	)	708:30:21376:21376	3624939	10	True				
ANR	3625189	ExpressionStatement		708:31:21377:21377	3624939	11	True				
ANR	3625190	IfStatement	if ( image > m_max_image_size )		3624939	13					
ANR	3625191	Condition	image > m_max_image_size	711:5:21442:21465	3624939	0	True				
ANR	3625192	RelationalExpression	image > m_max_image_size		3624939	0		>			
ANR	3625193	Identifier	image		3624939	0					
ANR	3625194	Identifier	m_max_image_size		3624939	1					
ANR	3625195	CompoundStatement		48:31:1305:1305	3624939	1					
ANR	3625196	ExpressionStatement	m_max_image_size = image / 1024	712:2:21472:21501	3624939	0	True				
ANR	3625197	AssignmentExpression	m_max_image_size = image / 1024		3624939	0		=			
ANR	3625198	Identifier	m_max_image_size		3624939	0					
ANR	3625199	MultiplicativeExpression	image / 1024		3624939	1		/			
ANR	3625200	Identifier	image		3624939	0					
ANR	3625201	PrimaryExpression	1024		3624939	1					
ANR	3625202	ExpressionStatement	update_max_image_size_cgroup ( )	715:1:21551:21581	3624939	14	True				
ANR	3625203	CallExpression	update_max_image_size_cgroup ( )		3624939	0					
ANR	3625204	Callee	update_max_image_size_cgroup		3624939	0					
ANR	3625205	Identifier	update_max_image_size_cgroup		3624939	0					
ANR	3625206	ArgumentList			3624939	1					
ANR	3625207	ExpressionStatement	* handle = NULL	718:1:21600:21614	3624939	15	True				
ANR	3625208	AssignmentExpression	* handle = NULL		3624939	0		=			
ANR	3625209	UnaryOperationExpression	* handle		3624939	0					
ANR	3625210	UnaryOperator	*		3624939	0					
ANR	3625211	Identifier	handle		3624939	1					
ANR	3625212	Identifier	NULL		3624939	1					
ANR	3625213	ExpressionStatement	"err = cgroup_read_stats_begin ( CPUACCT_CONTROLLER , m_cgroup_string , handle , & stats )"	719:1:21617:21699	3624939	16	True				
ANR	3625214	AssignmentExpression	"err = cgroup_read_stats_begin ( CPUACCT_CONTROLLER , m_cgroup_string , handle , & stats )"		3624939	0		=			
ANR	3625215	Identifier	err		3624939	0					
ANR	3625216	CallExpression	"cgroup_read_stats_begin ( CPUACCT_CONTROLLER , m_cgroup_string , handle , & stats )"		3624939	1					
ANR	3625217	Callee	cgroup_read_stats_begin		3624939	0					
ANR	3625218	Identifier	cgroup_read_stats_begin		3624939	0					
ANR	3625219	ArgumentList	CPUACCT_CONTROLLER		3624939	1					
ANR	3625220	Argument	CPUACCT_CONTROLLER		3624939	0					
ANR	3625221	Identifier	CPUACCT_CONTROLLER		3624939	0					
ANR	3625222	Argument	m_cgroup_string		3624939	1					
ANR	3625223	Identifier	m_cgroup_string		3624939	0					
ANR	3625224	Argument	handle		3624939	2					
ANR	3625225	Identifier	handle		3624939	0					
ANR	3625226	Argument	& stats		3624939	3					
ANR	3625227	UnaryOperationExpression	& stats		3624939	0					
ANR	3625228	UnaryOperator	&		3624939	0					
ANR	3625229	Identifier	stats		3624939	1					
ANR	3625230	WhileStatement	while ( err != ECGEOF )		3624939	17					
ANR	3625231	Condition	err != ECGEOF	720:8:21709:21721	3624939	0	True				
ANR	3625232	EqualityExpression	err != ECGEOF		3624939	0		!=			
ANR	3625233	Identifier	err		3624939	0					
ANR	3625234	Identifier	ECGEOF		3624939	1					
ANR	3625235	CompoundStatement		57:23:1561:1561	3624939	1					
ANR	3625236	IfStatement	if ( err > 0 )		3624939	0					
ANR	3625237	Condition	err > 0	721:6:21732:21738	3624939	0	True				
ANR	3625238	RelationalExpression	err > 0		3624939	0		>			
ANR	3625239	Identifier	err		3624939	0					
ANR	3625240	PrimaryExpression	0		3624939	1					
ANR	3625241	CompoundStatement		58:15:1578:1578	3624939	1					
ANR	3625242	ExpressionStatement	"dprintf ( D_PROCFAMILY , ""Unable to read cgroup %s cpuacct stats (ProcFamily %u): %s.\\n"" , m_cgroup_string , m_root_pid , cgroup_strerror ( err ) )"	722:3:21746:21891	3624939	0	True				
ANR	3625243	CallExpression	"dprintf ( D_PROCFAMILY , ""Unable to read cgroup %s cpuacct stats (ProcFamily %u): %s.\\n"" , m_cgroup_string , m_root_pid , cgroup_strerror ( err ) )"		3624939	0					
ANR	3625244	Callee	dprintf		3624939	0					
ANR	3625245	Identifier	dprintf		3624939	0					
ANR	3625246	ArgumentList	D_PROCFAMILY		3624939	1					
ANR	3625247	Argument	D_PROCFAMILY		3624939	0					
ANR	3625248	Identifier	D_PROCFAMILY		3624939	0					
ANR	3625249	Argument	"""Unable to read cgroup %s cpuacct stats (ProcFamily %u): %s.\\n"""		3624939	1					
ANR	3625250	PrimaryExpression	"""Unable to read cgroup %s cpuacct stats (ProcFamily %u): %s.\\n"""		3624939	0					
ANR	3625251	Argument	m_cgroup_string		3624939	2					
ANR	3625252	Identifier	m_cgroup_string		3624939	0					
ANR	3625253	Argument	m_root_pid		3624939	3					
ANR	3625254	Identifier	m_root_pid		3624939	0					
ANR	3625255	Argument	cgroup_strerror ( err )		3624939	4					
ANR	3625256	CallExpression	cgroup_strerror ( err )		3624939	0					
ANR	3625257	Callee	cgroup_strerror		3624939	0					
ANR	3625258	Identifier	cgroup_strerror		3624939	0					
ANR	3625259	ArgumentList	err		3624939	1					
ANR	3625260	Argument	err		3624939	0					
ANR	3625261	Identifier	err		3624939	0					
ANR	3625262	BreakStatement	break ;	725:3:21896:21901	3624939	1	True				
ANR	3625263	IfStatement	"if ( _check_stat_uint64 ( stats , ""user"" , & tmp ) )"		3624939	1					
ANR	3625264	Condition	"_check_stat_uint64 ( stats , ""user"" , & tmp )"	727:6:21913:21951	3624939	0	True				
ANR	3625265	CallExpression	"_check_stat_uint64 ( stats , ""user"" , & tmp )"		3624939	0					
ANR	3625266	Callee	_check_stat_uint64		3624939	0					
ANR	3625267	Identifier	_check_stat_uint64		3624939	0					
ANR	3625268	ArgumentList	stats		3624939	1					
ANR	3625269	Argument	stats		3624939	0					
ANR	3625270	Identifier	stats		3624939	0					
ANR	3625271	Argument	"""user"""		3624939	1					
ANR	3625272	PrimaryExpression	"""user"""		3624939	0					
ANR	3625273	Argument	& tmp		3624939	2					
ANR	3625274	UnaryOperationExpression	& tmp		3624939	0					
ANR	3625275	UnaryOperator	&		3624939	0					
ANR	3625276	Identifier	tmp		3624939	1					
ANR	3625277	CompoundStatement		64:47:1791:1791	3624939	1					
ANR	3625278	ExpressionStatement	usage -> user_cpu_time = tmp / clock_tick	728:3:21959:21996	3624939	0	True				
ANR	3625279	AssignmentExpression	usage -> user_cpu_time = tmp / clock_tick		3624939	0		=			
ANR	3625280	PtrMemberAccess	usage -> user_cpu_time		3624939	0					
ANR	3625281	Identifier	usage		3624939	0					
ANR	3625282	Identifier	user_cpu_time		3624939	1					
ANR	3625283	MultiplicativeExpression	tmp / clock_tick		3624939	1		/			
ANR	3625284	Identifier	tmp		3624939	0					
ANR	3625285	Identifier	clock_tick		3624939	1					
ANR	3625286	ElseStatement	else		3624939	0					
ANR	3625287	IfStatement	"if ( _check_stat_uint64 ( stats , ""system"" , & tmp ) )"		3624939	0					
ANR	3625288	Condition	"_check_stat_uint64 ( stats , ""system"" , & tmp )"	729:13:22011:22051	3624939	0	True				
ANR	3625289	CallExpression	"_check_stat_uint64 ( stats , ""system"" , & tmp )"		3624939	0					
ANR	3625290	Callee	_check_stat_uint64		3624939	0					
ANR	3625291	Identifier	_check_stat_uint64		3624939	0					
ANR	3625292	ArgumentList	stats		3624939	1					
ANR	3625293	Argument	stats		3624939	0					
ANR	3625294	Identifier	stats		3624939	0					
ANR	3625295	Argument	"""system"""		3624939	1					
ANR	3625296	PrimaryExpression	"""system"""		3624939	0					
ANR	3625297	Argument	& tmp		3624939	2					
ANR	3625298	UnaryOperationExpression	& tmp		3624939	0					
ANR	3625299	UnaryOperator	&		3624939	0					
ANR	3625300	Identifier	tmp		3624939	1					
ANR	3625301	CompoundStatement		66:56:1891:1891	3624939	1					
ANR	3625302	ExpressionStatement	usage -> sys_cpu_time = tmp / clock_tick	730:3:22059:22095	3624939	0	True				
ANR	3625303	AssignmentExpression	usage -> sys_cpu_time = tmp / clock_tick		3624939	0		=			
ANR	3625304	PtrMemberAccess	usage -> sys_cpu_time		3624939	0					
ANR	3625305	Identifier	usage		3624939	0					
ANR	3625306	Identifier	sys_cpu_time		3624939	1					
ANR	3625307	MultiplicativeExpression	tmp / clock_tick		3624939	1		/			
ANR	3625308	Identifier	tmp		3624939	0					
ANR	3625309	Identifier	clock_tick		3624939	1					
ANR	3625310	ExpressionStatement	"err = cgroup_read_stats_next ( handle , & stats )"	732:2:22103:22147	3624939	2	True				
ANR	3625311	AssignmentExpression	"err = cgroup_read_stats_next ( handle , & stats )"		3624939	0		=			
ANR	3625312	Identifier	err		3624939	0					
ANR	3625313	CallExpression	"cgroup_read_stats_next ( handle , & stats )"		3624939	1					
ANR	3625314	Callee	cgroup_read_stats_next		3624939	0					
ANR	3625315	Identifier	cgroup_read_stats_next		3624939	0					
ANR	3625316	ArgumentList	handle		3624939	1					
ANR	3625317	Argument	handle		3624939	0					
ANR	3625318	Identifier	handle		3624939	0					
ANR	3625319	Argument	& stats		3624939	1					
ANR	3625320	UnaryOperationExpression	& stats		3624939	0					
ANR	3625321	UnaryOperator	&		3624939	0					
ANR	3625322	Identifier	stats		3624939	1					
ANR	3625323	IfStatement	if ( * handle != NULL )		3624939	18					
ANR	3625324	Condition	* handle != NULL	734:5:22157:22171	3624939	0	True				
ANR	3625325	EqualityExpression	* handle != NULL		3624939	0		!=			
ANR	3625326	UnaryOperationExpression	* handle		3624939	0					
ANR	3625327	UnaryOperator	*		3624939	0					
ANR	3625328	Identifier	handle		3624939	1					
ANR	3625329	Identifier	NULL		3624939	1					
ANR	3625330	CompoundStatement		71:22:2011:2011	3624939	1					
ANR	3625331	ExpressionStatement	cgroup_read_stats_end ( handle )	735:2:22178:22207	3624939	0	True				
ANR	3625332	CallExpression	cgroup_read_stats_end ( handle )		3624939	0					
ANR	3625333	Callee	cgroup_read_stats_end		3624939	0					
ANR	3625334	Identifier	cgroup_read_stats_end		3624939	0					
ANR	3625335	ArgumentList	handle		3624939	1					
ANR	3625336	Argument	handle		3624939	0					
ANR	3625337	Identifier	handle		3624939	0					
ANR	3625338	ExpressionStatement	free ( handle )	737:1:22213:22225	3624939	19	True				
ANR	3625339	CallExpression	free ( handle )		3624939	0					
ANR	3625340	Callee	free		3624939	0					
ANR	3625341	Identifier	free		3624939	0					
ANR	3625342	ArgumentList	handle		3624939	1					
ANR	3625343	Argument	handle		3624939	0					
ANR	3625344	Identifier	handle		3624939	0					
ANR	3625345	ExpressionStatement	aggregate_usage_cgroup_blockio ( usage )	739:1:22229:22266	3624939	20	True				
ANR	3625346	CallExpression	aggregate_usage_cgroup_blockio ( usage )		3624939	0					
ANR	3625347	Callee	aggregate_usage_cgroup_blockio		3624939	0					
ANR	3625348	Identifier	aggregate_usage_cgroup_blockio		3624939	0					
ANR	3625349	ArgumentList	usage		3624939	1					
ANR	3625350	Argument	usage		3624939	0					
ANR	3625351	Identifier	usage		3624939	0					
ANR	3625352	IfStatement	if ( ( err = count_tasks_cgroup ( ) ) < 0 )		3624939	21					
ANR	3625353	Condition	( err = count_tasks_cgroup ( ) ) < 0	742:5:22312:22343	3624939	0	True				
ANR	3625354	RelationalExpression	( err = count_tasks_cgroup ( ) ) < 0		3624939	0		<			
ANR	3625355	AssignmentExpression	err = count_tasks_cgroup ( )		3624939	0		=			
ANR	3625356	Identifier	err		3624939	0					
ANR	3625357	CallExpression	count_tasks_cgroup ( )		3624939	1					
ANR	3625358	Callee	count_tasks_cgroup		3624939	0					
ANR	3625359	Identifier	count_tasks_cgroup		3624939	0					
ANR	3625360	ArgumentList			3624939	1					
ANR	3625361	PrimaryExpression	0		3624939	1					
ANR	3625362	CompoundStatement		79:39:2183:2183	3624939	1					
ANR	3625363	ReturnStatement	return - err ;	743:2:22350:22361	3624939	0	True				
ANR	3625364	UnaryOperationExpression	- err		3624939	0					
ANR	3625365	UnaryOperator	-		3624939	0					
ANR	3625366	Identifier	err		3624939	1					
ANR	3625367	ElseStatement	else		3624939	0					
ANR	3625368	CompoundStatement		81:8:2208:2208	3624939	0					
ANR	3625369	ExpressionStatement	usage -> num_procs = err	745:2:22375:22397	3624939	0	True				
ANR	3625370	AssignmentExpression	usage -> num_procs = err		3624939	0		=			
ANR	3625371	PtrMemberAccess	usage -> num_procs		3624939	0					
ANR	3625372	Identifier	usage		3624939	0					
ANR	3625373	Identifier	num_procs		3624939	1					
ANR	3625374	Identifier	err		3624939	1					
ANR	3625375	ReturnStatement	return 0 ;	747:1:22403:22411	3624939	22	True				
ANR	3625376	PrimaryExpression	0		3624939	0					
ANR	3625377	ReturnType	int		3624939	1					
ANR	3625378	Identifier	ProcFamily :: aggregate_usage_cgroup		3624939	2					
ANR	3625379	ParameterList	ProcFamilyUsage * usage		3624939	3					
ANR	3625380	Parameter	ProcFamilyUsage * usage	663:35:20138:20159	3624939	0	True				
ANR	3625381	ParameterType	ProcFamilyUsage *		3624939	0					
ANR	3625382	Identifier	usage		3624939	1					
ANR	3625383	CFGEntryNode	ENTRY		3624939		True				
ANR	3625384	CFGExitNode	EXIT		3624939		True				
ANR	3625385	Symbol	usage -> user_cpu_time		3624939						
ANR	3625386	Symbol	cgroup_read_stats_begin		3624939						
ANR	3625387	Symbol	MEMORY_CONTROLLER		3624939						
ANR	3625388	Symbol	D_PROCFAMILY		3624939						
ANR	3625389	Symbol	_check_stat_uint64		3624939						
ANR	3625390	Symbol	usage		3624939						
ANR	3625391	Symbol	usage -> total_resident_set_size		3624939						
ANR	3625392	Symbol	CPUACCT_CONTROLLER		3624939						
ANR	3625393	Symbol	cgroup_strerror		3624939						
ANR	3625394	Symbol	stats		3624939						
ANR	3625395	Symbol	tmp		3624939						
ANR	3625396	Symbol	clock_tick		3624939						
ANR	3625397	Symbol	found_rss		3624939						
ANR	3625398	Symbol	cgroup_read_stats_next		3624939						
ANR	3625399	Symbol	ECGEOF		3624939						
ANR	3625400	Symbol	usage -> num_procs		3624939						
ANR	3625401	Symbol	image		3624939						
ANR	3625402	Symbol	malloc		3624939						
ANR	3625403	Symbol	NULL		3624939						
ANR	3625404	Symbol	err		3624939						
ANR	3625405	Symbol	* handle		3624939						
ANR	3625406	Symbol	m_cgroup_memory_mounted		3624939						
ANR	3625407	Symbol	handle		3624939						
ANR	3625408	Symbol	* usage		3624939						
ANR	3625409	Symbol	m_max_image_size		3624939						
ANR	3625410	Symbol	usage -> sys_cpu_time		3624939						
ANR	3625411	Symbol	m_cgroup_cpuacct_mounted		3624939						
ANR	3625412	Symbol	count_tasks_cgroup		3624939						
ANR	3625413	Symbol	& stats		3624939						
ANR	3625414	Symbol	usage -> total_image_size		3624939						
ANR	3625415	Symbol	true		3624939						
ANR	3625416	Symbol	& tmp		3624939						
ANR	3625417	Symbol	m_cgroup_string		3624939						
ANR	3625418	Symbol	m_root_pid		3624939						
ANR	3625419	Function	ProcFamily :: update_max_image_size	751:0:22423:23491							
ANR	3625420	FunctionDef	ProcFamily :: update_max_image_size (unsigned long children_imgsize)		3625419	0					
ANR	3625421	CompoundStatement		753:0:22503:23491	3625419	0					
ANR	3625422	IdentifierDeclStatement	unsigned long imgsize = children_imgsize ;	757:1:22601:22641	3625419	0	True				
ANR	3625423	IdentifierDecl	imgsize = children_imgsize		3625419	0					
ANR	3625424	IdentifierDeclType	unsigned long		3625419	0					
ANR	3625425	Identifier	imgsize		3625419	1					
ANR	3625426	AssignmentExpression	imgsize = children_imgsize		3625419	2		=			
ANR	3625427	Identifier	children_imgsize		3625419	0					
ANR	3625428	Identifier	children_imgsize		3625419	1					
ANR	3625429	IdentifierDeclStatement	ProcFamilyMember * member = m_member_list ;	758:1:22644:22684	3625419	1	True				
ANR	3625430	IdentifierDecl	* member = m_member_list		3625419	0					
ANR	3625431	IdentifierDeclType	ProcFamilyMember *		3625419	0					
ANR	3625432	Identifier	member		3625419	1					
ANR	3625433	AssignmentExpression	* member = m_member_list		3625419	2		=			
ANR	3625434	Identifier	m_member_list		3625419	0					
ANR	3625435	Identifier	m_member_list		3625419	1					
ANR	3625436	WhileStatement	while ( member != NULL )		3625419	2					
ANR	3625437	Condition	member != NULL	759:8:22694:22707	3625419	0	True				
ANR	3625438	EqualityExpression	member != NULL		3625419	0		!=			
ANR	3625439	Identifier	member		3625419	0					
ANR	3625440	Identifier	NULL		3625419	1					
ANR	3625441	CompoundStatement		7:24:206:206	3625419	1					
ANR	3625442	ExpressionStatement	imgsize += member -> m_proc_info -> rssize	769:2:23170:23208	3625419	0	True				
ANR	3625443	AssignmentExpression	imgsize += member -> m_proc_info -> rssize		3625419	0		+=			
ANR	3625444	Identifier	imgsize		3625419	0					
ANR	3625445	PtrMemberAccess	member -> m_proc_info -> rssize		3625419	1					
ANR	3625446	PtrMemberAccess	member -> m_proc_info		3625419	0					
ANR	3625447	Identifier	member		3625419	0					
ANR	3625448	Identifier	m_proc_info		3625419	1					
ANR	3625449	Identifier	rssize		3625419	1					
ANR	3625450	ExpressionStatement	member = member -> m_next	773:2:23268:23291	3625419	1	True				
ANR	3625451	AssignmentExpression	member = member -> m_next		3625419	0		=			
ANR	3625452	Identifier	member		3625419	0					
ANR	3625453	PtrMemberAccess	member -> m_next		3625419	1					
ANR	3625454	Identifier	member		3625419	0					
ANR	3625455	Identifier	m_next		3625419	1					
ANR	3625456	IfStatement	if ( imgsize > m_max_image_size )		3625419	3					
ANR	3625457	Condition	imgsize > m_max_image_size	778:5:23355:23380	3625419	0	True				
ANR	3625458	RelationalExpression	imgsize > m_max_image_size		3625419	0		>			
ANR	3625459	Identifier	imgsize		3625419	0					
ANR	3625460	Identifier	m_max_image_size		3625419	1					
ANR	3625461	CompoundStatement		26:33:879:879	3625419	1					
ANR	3625462	ExpressionStatement	m_max_image_size = imgsize	779:2:23387:23413	3625419	0	True				
ANR	3625463	AssignmentExpression	m_max_image_size = imgsize		3625419	0		=			
ANR	3625464	Identifier	m_max_image_size		3625419	0					
ANR	3625465	Identifier	imgsize		3625419	1					
ANR	3625466	ReturnStatement	return imgsize ;	784:1:23475:23489	3625419	4	True				
ANR	3625467	Identifier	imgsize		3625419	0					
ANR	3625468	ReturnType	unsigned long		3625419	1					
ANR	3625469	Identifier	ProcFamily :: update_max_image_size		3625419	2					
ANR	3625470	ParameterList	unsigned long children_imgsize		3625419	3					
ANR	3625471	Parameter	unsigned long children_imgsize	752:34:22471:22500	3625419	0	True				
ANR	3625472	ParameterType	unsigned long		3625419	0					
ANR	3625473	Identifier	children_imgsize		3625419	1					
ANR	3625474	CFGEntryNode	ENTRY		3625419		True				
ANR	3625475	CFGExitNode	EXIT		3625419		True				
ANR	3625476	Symbol	m_member_list		3625419						
ANR	3625477	Symbol	m_max_image_size		3625419						
ANR	3625478	Symbol	children_imgsize		3625419						
ANR	3625479	Symbol	NULL		3625419						
ANR	3625480	Symbol	* * member		3625419						
ANR	3625481	Symbol	member -> m_proc_info -> rssize		3625419						
ANR	3625482	Symbol	member -> m_proc_info		3625419						
ANR	3625483	Symbol	* member -> m_proc_info		3625419						
ANR	3625484	Symbol	member		3625419						
ANR	3625485	Symbol	imgsize		3625419						
ANR	3625486	Symbol	* member		3625419						
ANR	3625487	Symbol	member -> m_next		3625419						
ANR	3625488	Function	ProcFamily :: aggregate_usage	787:0:23494:24605							
ANR	3625489	FunctionDef	ProcFamily :: aggregate_usage (ProcFamilyUsage * usage)		3625488	0					
ANR	3625490	CompoundStatement		789:0:23551:24605	3625488	0					
ANR	3625491	ExpressionStatement	ASSERT ( usage != NULL )	790:1:23554:23575	3625488	0	True				
ANR	3625492	CallExpression	ASSERT ( usage != NULL )		3625488	0					
ANR	3625493	Callee	ASSERT		3625488	0					
ANR	3625494	Identifier	ASSERT		3625488	0					
ANR	3625495	ArgumentList	usage != NULL		3625488	1					
ANR	3625496	Argument	usage != NULL		3625488	0					
ANR	3625497	EqualityExpression	usage != NULL		3625488	0		!=			
ANR	3625498	Identifier	usage		3625488	0					
ANR	3625499	Identifier	NULL		3625488	1					
ANR	3625500	IdentifierDeclStatement	ProcFamilyMember * member = m_member_list ;	794:1:23639:23679	3625488	1	True				
ANR	3625501	IdentifierDecl	* member = m_member_list		3625488	0					
ANR	3625502	IdentifierDeclType	ProcFamilyMember *		3625488	0					
ANR	3625503	Identifier	member		3625488	1					
ANR	3625504	AssignmentExpression	* member = m_member_list		3625488	2		=			
ANR	3625505	Identifier	m_member_list		3625488	0					
ANR	3625506	Identifier	m_member_list		3625488	1					
ANR	3625507	WhileStatement	while ( member != NULL )		3625488	2					
ANR	3625508	Condition	member != NULL	795:8:23689:23702	3625488	0	True				
ANR	3625509	EqualityExpression	member != NULL		3625488	0		!=			
ANR	3625510	Identifier	member		3625488	0					
ANR	3625511	Identifier	NULL		3625488	1					
ANR	3625512	CompoundStatement		7:24:153:153	3625488	1					
ANR	3625513	ExpressionStatement	usage -> user_cpu_time += member -> m_proc_info -> user_time	799:2:23724:23778	3625488	0	True				
ANR	3625514	AssignmentExpression	usage -> user_cpu_time += member -> m_proc_info -> user_time		3625488	0		+=			
ANR	3625515	PtrMemberAccess	usage -> user_cpu_time		3625488	0					
ANR	3625516	Identifier	usage		3625488	0					
ANR	3625517	Identifier	user_cpu_time		3625488	1					
ANR	3625518	PtrMemberAccess	member -> m_proc_info -> user_time		3625488	1					
ANR	3625519	PtrMemberAccess	member -> m_proc_info		3625488	0					
ANR	3625520	Identifier	member		3625488	0					
ANR	3625521	Identifier	m_proc_info		3625488	1					
ANR	3625522	Identifier	user_time		3625488	1					
ANR	3625523	ExpressionStatement	usage -> sys_cpu_time += member -> m_proc_info -> sys_time	800:2:23782:23834	3625488	1	True				
ANR	3625524	AssignmentExpression	usage -> sys_cpu_time += member -> m_proc_info -> sys_time		3625488	0		+=			
ANR	3625525	PtrMemberAccess	usage -> sys_cpu_time		3625488	0					
ANR	3625526	Identifier	usage		3625488	0					
ANR	3625527	Identifier	sys_cpu_time		3625488	1					
ANR	3625528	PtrMemberAccess	member -> m_proc_info -> sys_time		3625488	1					
ANR	3625529	PtrMemberAccess	member -> m_proc_info		3625488	0					
ANR	3625530	Identifier	member		3625488	0					
ANR	3625531	Identifier	m_proc_info		3625488	1					
ANR	3625532	Identifier	sys_time		3625488	1					
ANR	3625533	ExpressionStatement	usage -> percent_cpu += member -> m_proc_info -> cpuusage	801:2:23838:23889	3625488	2	True				
ANR	3625534	AssignmentExpression	usage -> percent_cpu += member -> m_proc_info -> cpuusage		3625488	0		+=			
ANR	3625535	PtrMemberAccess	usage -> percent_cpu		3625488	0					
ANR	3625536	Identifier	usage		3625488	0					
ANR	3625537	Identifier	percent_cpu		3625488	1					
ANR	3625538	PtrMemberAccess	member -> m_proc_info -> cpuusage		3625488	1					
ANR	3625539	PtrMemberAccess	member -> m_proc_info		3625488	0					
ANR	3625540	Identifier	member		3625488	0					
ANR	3625541	Identifier	m_proc_info		3625488	1					
ANR	3625542	Identifier	cpuusage		3625488	1					
ANR	3625543	ExpressionStatement	usage -> total_image_size += member -> m_proc_info -> imgsize	805:2:23929:23984	3625488	3	True				
ANR	3625544	AssignmentExpression	usage -> total_image_size += member -> m_proc_info -> imgsize		3625488	0		+=			
ANR	3625545	PtrMemberAccess	usage -> total_image_size		3625488	0					
ANR	3625546	Identifier	usage		3625488	0					
ANR	3625547	Identifier	total_image_size		3625488	1					
ANR	3625548	PtrMemberAccess	member -> m_proc_info -> imgsize		3625488	1					
ANR	3625549	PtrMemberAccess	member -> m_proc_info		3625488	0					
ANR	3625550	Identifier	member		3625488	0					
ANR	3625551	Identifier	m_proc_info		3625488	1					
ANR	3625552	Identifier	imgsize		3625488	1					
ANR	3625553	ExpressionStatement	usage -> total_resident_set_size += member -> m_proc_info -> rssize	806:2:23988:24049	3625488	4	True				
ANR	3625554	AssignmentExpression	usage -> total_resident_set_size += member -> m_proc_info -> rssize		3625488	0		+=			
ANR	3625555	PtrMemberAccess	usage -> total_resident_set_size		3625488	0					
ANR	3625556	Identifier	usage		3625488	0					
ANR	3625557	Identifier	total_resident_set_size		3625488	1					
ANR	3625558	PtrMemberAccess	member -> m_proc_info -> rssize		3625488	1					
ANR	3625559	PtrMemberAccess	member -> m_proc_info		3625488	0					
ANR	3625560	Identifier	member		3625488	0					
ANR	3625561	Identifier	m_proc_info		3625488	1					
ANR	3625562	Identifier	rssize		3625488	1					
ANR	3625563	IfStatement	if ( member -> m_proc_info -> pssize_available )		3625488	5					
ANR	3625564	Condition	member -> m_proc_info -> pssize_available	808:6:24070:24106	3625488	0	True				
ANR	3625565	PtrMemberAccess	member -> m_proc_info -> pssize_available		3625488	0					
ANR	3625566	PtrMemberAccess	member -> m_proc_info		3625488	0					
ANR	3625567	Identifier	member		3625488	0					
ANR	3625568	Identifier	m_proc_info		3625488	1					
ANR	3625569	Identifier	pssize_available		3625488	1					
ANR	3625570	CompoundStatement		20:46:558:558	3625488	1					
ANR	3625571	ExpressionStatement	usage -> total_proportional_set_size_available = true	809:3:24115:24166	3625488	0	True				
ANR	3625572	AssignmentExpression	usage -> total_proportional_set_size_available = true		3625488	0		=			
ANR	3625573	PtrMemberAccess	usage -> total_proportional_set_size_available		3625488	0					
ANR	3625574	Identifier	usage		3625488	0					
ANR	3625575	Identifier	total_proportional_set_size_available		3625488	1					
ANR	3625576	Identifier	true		3625488	1					
ANR	3625577	ExpressionStatement	usage -> total_proportional_set_size += member -> m_proc_info -> pssize	810:3:24171:24236	3625488	1	True				
ANR	3625578	AssignmentExpression	usage -> total_proportional_set_size += member -> m_proc_info -> pssize		3625488	0		+=			
ANR	3625579	PtrMemberAccess	usage -> total_proportional_set_size		3625488	0					
ANR	3625580	Identifier	usage		3625488	0					
ANR	3625581	Identifier	total_proportional_set_size		3625488	1					
ANR	3625582	PtrMemberAccess	member -> m_proc_info -> pssize		3625488	1					
ANR	3625583	PtrMemberAccess	member -> m_proc_info		3625488	0					
ANR	3625584	Identifier	member		3625488	0					
ANR	3625585	Identifier	m_proc_info		3625488	1					
ANR	3625586	Identifier	pssize		3625488	1					
ANR	3625587	ExpressionStatement	usage -> num_procs ++	816:2:24288:24306	3625488	6	True				
ANR	3625588	PostIncDecOperationExpression	usage -> num_procs ++		3625488	0					
ANR	3625589	PtrMemberAccess	usage -> num_procs		3625488	0					
ANR	3625590	Identifier	usage		3625488	0					
ANR	3625591	Identifier	num_procs		3625488	1					
ANR	3625592	IncDec	++		3625488	1					
ANR	3625593	ExpressionStatement	member = member -> m_next	818:2:24311:24334	3625488	7	True				
ANR	3625594	AssignmentExpression	member = member -> m_next		3625488	0		=			
ANR	3625595	Identifier	member		3625488	0					
ANR	3625596	PtrMemberAccess	member -> m_next		3625488	1					
ANR	3625597	Identifier	member		3625488	0					
ANR	3625598	Identifier	m_next		3625488	1					
ANR	3625599	ExpressionStatement	usage -> user_cpu_time += m_exited_user_cpu_time	823:1:24401:24447	3625488	3	True				
ANR	3625600	AssignmentExpression	usage -> user_cpu_time += m_exited_user_cpu_time		3625488	0		+=			
ANR	3625601	PtrMemberAccess	usage -> user_cpu_time		3625488	0					
ANR	3625602	Identifier	usage		3625488	0					
ANR	3625603	Identifier	user_cpu_time		3625488	1					
ANR	3625604	Identifier	m_exited_user_cpu_time		3625488	1					
ANR	3625605	ExpressionStatement	usage -> sys_cpu_time += m_exited_sys_cpu_time	824:1:24450:24494	3625488	4	True				
ANR	3625606	AssignmentExpression	usage -> sys_cpu_time += m_exited_sys_cpu_time		3625488	0		+=			
ANR	3625607	PtrMemberAccess	usage -> sys_cpu_time		3625488	0					
ANR	3625608	Identifier	usage		3625488	0					
ANR	3625609	Identifier	sys_cpu_time		3625488	1					
ANR	3625610	Identifier	m_exited_sys_cpu_time		3625488	1					
ANR	3625611	IfStatement	if ( m_cgroup != NULL )		3625488	5					
ANR	3625612	Condition	m_cgroup != NULL	827:12:24541:24556	3625488	0	True				
ANR	3625613	EqualityExpression	m_cgroup != NULL		3625488	0		!=			
ANR	3625614	Identifier	m_cgroup		3625488	0					
ANR	3625615	Identifier	NULL		3625488	1					
ANR	3625616	CompoundStatement		39:30:1007:1007	3625488	1					
ANR	3625617	ExpressionStatement	aggregate_usage_cgroup ( usage )	828:2:24563:24592	3625488	0	True				
ANR	3625618	CallExpression	aggregate_usage_cgroup ( usage )		3625488	0					
ANR	3625619	Callee	aggregate_usage_cgroup		3625488	0					
ANR	3625620	Identifier	aggregate_usage_cgroup		3625488	0					
ANR	3625621	ArgumentList	usage		3625488	1					
ANR	3625622	Argument	usage		3625488	0					
ANR	3625623	Identifier	usage		3625488	0					
ANR	3625624	ReturnType	void		3625488	1					
ANR	3625625	Identifier	ProcFamily :: aggregate_usage		3625488	2					
ANR	3625626	ParameterList	ProcFamilyUsage * usage		3625488	3					
ANR	3625627	Parameter	ProcFamilyUsage * usage	788:28:23527:23548	3625488	0	True				
ANR	3625628	ParameterType	ProcFamilyUsage *		3625488	0					
ANR	3625629	Identifier	usage		3625488	1					
ANR	3625630	CFGEntryNode	ENTRY		3625488		True				
ANR	3625631	CFGExitNode	EXIT		3625488		True				
ANR	3625632	Symbol	usage -> user_cpu_time		3625488						
ANR	3625633	Symbol	member -> m_proc_info -> cpuusage		3625488						
ANR	3625634	Symbol	usage -> total_proportional_set_size_available		3625488						
ANR	3625635	Symbol	member -> m_proc_info		3625488						
ANR	3625636	Symbol	usage		3625488						
ANR	3625637	Symbol	member -> m_proc_info -> pssize		3625488						
ANR	3625638	Symbol	usage -> total_resident_set_size		3625488						
ANR	3625639	Symbol	member -> m_proc_info -> pssize_available		3625488						
ANR	3625640	Symbol	* * member		3625488						
ANR	3625641	Symbol	* member -> m_proc_info		3625488						
ANR	3625642	Symbol	member		3625488						
ANR	3625643	Symbol	member -> m_proc_info -> sys_time		3625488						
ANR	3625644	Symbol	usage -> num_procs		3625488						
ANR	3625645	Symbol	m_member_list		3625488						
ANR	3625646	Symbol	NULL		3625488						
ANR	3625647	Symbol	member -> m_proc_info -> rssize		3625488						
ANR	3625648	Symbol	usage -> total_proportional_set_size		3625488						
ANR	3625649	Symbol	* member		3625488						
ANR	3625650	Symbol	usage -> percent_cpu		3625488						
ANR	3625651	Symbol	member -> m_next		3625488						
ANR	3625652	Symbol	* usage		3625488						
ANR	3625653	Symbol	m_cgroup		3625488						
ANR	3625654	Symbol	usage -> sys_cpu_time		3625488						
ANR	3625655	Symbol	member -> m_proc_info -> imgsize		3625488						
ANR	3625656	Symbol	m_exited_sys_cpu_time		3625488						
ANR	3625657	Symbol	usage -> total_image_size		3625488						
ANR	3625658	Symbol	true		3625488						
ANR	3625659	Symbol	m_exited_user_cpu_time		3625488						
ANR	3625660	Symbol	member -> m_proc_info -> user_time		3625488						
ANR	3625661	Function	ProcFamily :: signal_root	834:0:24608:24784							
ANR	3625662	FunctionDef	ProcFamily :: signal_root (int sig)		3625661	0					
ANR	3625663	CompoundStatement		836:0:24646:24784	3625661	0					
ANR	3625664	IfStatement	if ( m_proxy != NULL )		3625661	0					
ANR	3625665	Condition	m_proxy != NULL	838:5:24673:24687	3625661	0	True				
ANR	3625666	EqualityExpression	m_proxy != NULL		3625661	0		!=			
ANR	3625667	Identifier	m_proxy		3625661	0					
ANR	3625668	Identifier	NULL		3625661	1					
ANR	3625669	CompoundStatement		3:22:43:43	3625661	1					
ANR	3625670	ExpressionStatement	"glexec_kill ( m_proxy , m_root_pid , sig )"	839:2:24694:24731	3625661	0	True				
ANR	3625671	CallExpression	"glexec_kill ( m_proxy , m_root_pid , sig )"		3625661	0					
ANR	3625672	Callee	glexec_kill		3625661	0					
ANR	3625673	Identifier	glexec_kill		3625661	0					
ANR	3625674	ArgumentList	m_proxy		3625661	1					
ANR	3625675	Argument	m_proxy		3625661	0					
ANR	3625676	Identifier	m_proxy		3625661	0					
ANR	3625677	Argument	m_root_pid		3625661	1					
ANR	3625678	Identifier	m_root_pid		3625661	0					
ANR	3625679	Argument	sig		3625661	2					
ANR	3625680	Identifier	sig		3625661	0					
ANR	3625681	ReturnStatement	return ;	840:2:24735:24741	3625661	1	True				
ANR	3625682	ExpressionStatement	"send_signal ( m_root_pid , sig )"	843:1:24754:24782	3625661	1	True				
ANR	3625683	CallExpression	"send_signal ( m_root_pid , sig )"		3625661	0					
ANR	3625684	Callee	send_signal		3625661	0					
ANR	3625685	Identifier	send_signal		3625661	0					
ANR	3625686	ArgumentList	m_root_pid		3625661	1					
ANR	3625687	Argument	m_root_pid		3625661	0					
ANR	3625688	Identifier	m_root_pid		3625661	0					
ANR	3625689	Argument	sig		3625661	1					
ANR	3625690	Identifier	sig		3625661	0					
ANR	3625691	ReturnType	void		3625661	1					
ANR	3625692	Identifier	ProcFamily :: signal_root		3625661	2					
ANR	3625693	ParameterList	int sig		3625661	3					
ANR	3625694	Parameter	int sig	835:24:24637:24643	3625661	0	True				
ANR	3625695	ParameterType	int		3625661	0					
ANR	3625696	Identifier	sig		3625661	1					
ANR	3625697	CFGEntryNode	ENTRY		3625661		True				
ANR	3625698	CFGExitNode	EXIT		3625661		True				
ANR	3625699	Symbol	sig		3625661						
ANR	3625700	Symbol	NULL		3625661						
ANR	3625701	Symbol	m_root_pid		3625661						
ANR	3625702	Symbol	m_proxy		3625661						
ANR	3625703	Function	ProcFamily :: spree	846:0:24787:25240							
ANR	3625704	FunctionDef	ProcFamily :: spree (int sig)		3625703	0					
ANR	3625705	CompoundStatement		848:0:24819:25240	3625703	0					
ANR	3625706	IfStatement	if ( ( NULL != m_cgroup_string ) && ( 0 == spree_cgroup ( sig ) ) )		3625703	0					
ANR	3625707	Condition	( NULL != m_cgroup_string ) && ( 0 == spree_cgroup ( sig ) )	850:5:24858:24910	3625703	0	True				
ANR	3625708	AndExpression	( NULL != m_cgroup_string ) && ( 0 == spree_cgroup ( sig ) )		3625703	0		&&			
ANR	3625709	EqualityExpression	NULL != m_cgroup_string		3625703	0		!=			
ANR	3625710	Identifier	NULL		3625703	0					
ANR	3625711	Identifier	m_cgroup_string		3625703	1					
ANR	3625712	EqualityExpression	0 == spree_cgroup ( sig )		3625703	1		==			
ANR	3625713	PrimaryExpression	0		3625703	0					
ANR	3625714	CallExpression	spree_cgroup ( sig )		3625703	1					
ANR	3625715	Callee	spree_cgroup		3625703	0					
ANR	3625716	Identifier	spree_cgroup		3625703	0					
ANR	3625717	ArgumentList	sig		3625703	1					
ANR	3625718	Argument	sig		3625703	0					
ANR	3625719	Identifier	sig		3625703	0					
ANR	3625720	CompoundStatement		3:60:93:93	3625703	1					
ANR	3625721	ReturnStatement	return ;	851:2:24917:24923	3625703	0	True				
ANR	3625722	IdentifierDeclStatement	ProcFamilyMember * member ;	855:1:24937:24961	3625703	1	True				
ANR	3625723	IdentifierDecl	* member		3625703	0					
ANR	3625724	IdentifierDeclType	ProcFamilyMember *		3625703	0					
ANR	3625725	Identifier	member		3625703	1					
ANR	3625726	ForStatement	for ( member = m_member_list ; member != NULL ; member = member -> m_next )		3625703	2					
ANR	3625727	ForInit	member = m_member_list ;	856:6:24969:24991	3625703	0	True				
ANR	3625728	AssignmentExpression	member = m_member_list		3625703	0		=			
ANR	3625729	Identifier	member		3625703	0					
ANR	3625730	Identifier	m_member_list		3625703	1					
ANR	3625731	Condition	member != NULL	856:30:24993:25006	3625703	1	True				
ANR	3625732	EqualityExpression	member != NULL		3625703	0		!=			
ANR	3625733	Identifier	member		3625703	0					
ANR	3625734	Identifier	NULL		3625703	1					
ANR	3625735	AssignmentExpression	member = member -> m_next	856:46:25009:25031	3625703	2	True	=			
ANR	3625736	Identifier	member		3625703	0					
ANR	3625737	PtrMemberAccess	member -> m_next		3625703	1					
ANR	3625738	Identifier	member		3625703	0					
ANR	3625739	Identifier	m_next		3625703	1					
ANR	3625740	CompoundStatement		9:71:214:214	3625703	3					
ANR	3625741	IfStatement	if ( m_proxy != NULL )		3625703	0					
ANR	3625742	Condition	m_proxy != NULL	858:6:25062:25076	3625703	0	True				
ANR	3625743	EqualityExpression	m_proxy != NULL		3625703	0		!=			
ANR	3625744	Identifier	m_proxy		3625703	0					
ANR	3625745	Identifier	NULL		3625703	1					
ANR	3625746	CompoundStatement		11:23:259:259	3625703	1					
ANR	3625747	ExpressionStatement	"glexec_kill ( m_proxy , member -> m_proc_info -> pid , sig )"	859:3:25084:25165	3625703	0	True				
ANR	3625748	CallExpression	"glexec_kill ( m_proxy , member -> m_proc_info -> pid , sig )"		3625703	0					
ANR	3625749	Callee	glexec_kill		3625703	0					
ANR	3625750	Identifier	glexec_kill		3625703	0					
ANR	3625751	ArgumentList	m_proxy		3625703	1					
ANR	3625752	Argument	m_proxy		3625703	0					
ANR	3625753	Identifier	m_proxy		3625703	0					
ANR	3625754	Argument	member -> m_proc_info -> pid		3625703	1					
ANR	3625755	PtrMemberAccess	member -> m_proc_info -> pid		3625703	0					
ANR	3625756	PtrMemberAccess	member -> m_proc_info		3625703	0					
ANR	3625757	Identifier	member		3625703	0					
ANR	3625758	Identifier	m_proc_info		3625703	1					
ANR	3625759	Identifier	pid		3625703	1					
ANR	3625760	Argument	sig		3625703	2					
ANR	3625761	Identifier	sig		3625703	0					
ANR	3625762	ContinueStatement	continue ;	862:3:25170:25178	3625703	1	True				
ANR	3625763	ExpressionStatement	"send_signal ( member -> m_proc_info -> pid , sig )"	865:2:25193:25235	3625703	1	True				
ANR	3625764	CallExpression	"send_signal ( member -> m_proc_info -> pid , sig )"		3625703	0					
ANR	3625765	Callee	send_signal		3625703	0					
ANR	3625766	Identifier	send_signal		3625703	0					
ANR	3625767	ArgumentList	member -> m_proc_info -> pid		3625703	1					
ANR	3625768	Argument	member -> m_proc_info -> pid		3625703	0					
ANR	3625769	PtrMemberAccess	member -> m_proc_info -> pid		3625703	0					
ANR	3625770	PtrMemberAccess	member -> m_proc_info		3625703	0					
ANR	3625771	Identifier	member		3625703	0					
ANR	3625772	Identifier	m_proc_info		3625703	1					
ANR	3625773	Identifier	pid		3625703	1					
ANR	3625774	Argument	sig		3625703	1					
ANR	3625775	Identifier	sig		3625703	0					
ANR	3625776	ReturnType	void		3625703	1					
ANR	3625777	Identifier	ProcFamily :: spree		3625703	2					
ANR	3625778	ParameterList	int sig		3625703	3					
ANR	3625779	Parameter	int sig	847:18:24810:24816	3625703	0	True				
ANR	3625780	ParameterType	int		3625703	0					
ANR	3625781	Identifier	sig		3625703	1					
ANR	3625782	CFGEntryNode	ENTRY		3625703		True				
ANR	3625783	CFGExitNode	EXIT		3625703		True				
ANR	3625784	Symbol	m_member_list		3625703						
ANR	3625785	Symbol	spree_cgroup		3625703						
ANR	3625786	Symbol	NULL		3625703						
ANR	3625787	Symbol	member -> m_proc_info		3625703						
ANR	3625788	Symbol	member -> m_next		3625703						
ANR	3625789	Symbol	* member		3625703						
ANR	3625790	Symbol	member -> m_proc_info -> pid		3625703						
ANR	3625791	Symbol	sig		3625703						
ANR	3625792	Symbol	* * member		3625703						
ANR	3625793	Symbol	* member -> m_proc_info		3625703						
ANR	3625794	Symbol	member		3625703						
ANR	3625795	Symbol	m_cgroup_string		3625703						
ANR	3625796	Symbol	m_proxy		3625703						
ANR	3625797	Function	ProcFamily :: add_member	869:0:25243:25816							
ANR	3625798	FunctionDef	ProcFamily :: add_member (procInfo * pi)		3625797	0					
ANR	3625799	CompoundStatement		871:0:25285:25816	3625797	0					
ANR	3625800	Statement	ProcFamilyMember	872:1:25288:25303	3625797	0	True				
ANR	3625801	Statement	*	872:17:25304:25304	3625797	1	True				
ANR	3625802	Statement	member	872:19:25306:25311	3625797	2	True				
ANR	3625803	Statement	=	872:26:25313:25313	3625797	3	True				
ANR	3625804	Statement	new	872:28:25315:25317	3625797	4	True				
ANR	3625805	ExpressionStatement	ProcFamilyMember	872:32:25319:25335	3625797	5	True				
ANR	3625806	Identifier	ProcFamilyMember		3625797	0					
ANR	3625807	ExpressionStatement	member -> m_family = this	873:1:25338:25361	3625797	6	True				
ANR	3625808	AssignmentExpression	member -> m_family = this		3625797	0		=			
ANR	3625809	PtrMemberAccess	member -> m_family		3625797	0					
ANR	3625810	Identifier	member		3625797	0					
ANR	3625811	Identifier	m_family		3625797	1					
ANR	3625812	Identifier	this		3625797	1					
ANR	3625813	ExpressionStatement	member -> m_proc_info = pi	874:1:25364:25388	3625797	7	True				
ANR	3625814	AssignmentExpression	member -> m_proc_info = pi		3625797	0		=			
ANR	3625815	PtrMemberAccess	member -> m_proc_info		3625797	0					
ANR	3625816	Identifier	member		3625797	0					
ANR	3625817	Identifier	m_proc_info		3625797	1					
ANR	3625818	Identifier	pi		3625797	1					
ANR	3625819	ExpressionStatement	member -> m_still_alive = false	875:1:25391:25420	3625797	8	True				
ANR	3625820	AssignmentExpression	member -> m_still_alive = false		3625797	0		=			
ANR	3625821	PtrMemberAccess	member -> m_still_alive		3625797	0					
ANR	3625822	Identifier	member		3625797	0					
ANR	3625823	Identifier	m_still_alive		3625797	1					
ANR	3625824	Identifier	false		3625797	1					
ANR	3625825	ExpressionStatement	member -> m_prev = NULL	879:1:25451:25472	3625797	9	True				
ANR	3625826	AssignmentExpression	member -> m_prev = NULL		3625797	0		=			
ANR	3625827	PtrMemberAccess	member -> m_prev		3625797	0					
ANR	3625828	Identifier	member		3625797	0					
ANR	3625829	Identifier	m_prev		3625797	1					
ANR	3625830	Identifier	NULL		3625797	1					
ANR	3625831	ExpressionStatement	member -> m_next = m_member_list	880:1:25475:25505	3625797	10	True				
ANR	3625832	AssignmentExpression	member -> m_next = m_member_list		3625797	0		=			
ANR	3625833	PtrMemberAccess	member -> m_next		3625797	0					
ANR	3625834	Identifier	member		3625797	0					
ANR	3625835	Identifier	m_next		3625797	1					
ANR	3625836	Identifier	m_member_list		3625797	1					
ANR	3625837	IfStatement	if ( m_member_list != NULL )		3625797	11					
ANR	3625838	Condition	m_member_list != NULL	881:5:25512:25532	3625797	0	True				
ANR	3625839	EqualityExpression	m_member_list != NULL		3625797	0		!=			
ANR	3625840	Identifier	m_member_list		3625797	0					
ANR	3625841	Identifier	NULL		3625797	1					
ANR	3625842	CompoundStatement		11:28:249:249	3625797	1					
ANR	3625843	ExpressionStatement	m_member_list -> m_prev = member	882:2:25539:25569	3625797	0	True				
ANR	3625844	AssignmentExpression	m_member_list -> m_prev = member		3625797	0		=			
ANR	3625845	PtrMemberAccess	m_member_list -> m_prev		3625797	0					
ANR	3625846	Identifier	m_member_list		3625797	0					
ANR	3625847	Identifier	m_prev		3625797	1					
ANR	3625848	Identifier	member		3625797	1					
ANR	3625849	ExpressionStatement	m_member_list = member	884:1:25575:25597	3625797	12	True				
ANR	3625850	AssignmentExpression	m_member_list = member		3625797	0		=			
ANR	3625851	Identifier	m_member_list		3625797	0					
ANR	3625852	Identifier	member		3625797	1					
ANR	3625853	IfStatement	if ( m_cgroup_string != NULL )		3625797	13					
ANR	3625854	Condition	m_cgroup_string != NULL	888:5:25670:25692	3625797	0	True				
ANR	3625855	EqualityExpression	m_cgroup_string != NULL		3625797	0		!=			
ANR	3625856	Identifier	m_cgroup_string		3625797	0					
ANR	3625857	Identifier	NULL		3625797	1					
ANR	3625858	CompoundStatement		18:30:409:409	3625797	1					
ANR	3625859	ExpressionStatement	migrate_to_cgroup ( pi -> pid )	889:2:25699:25725	3625797	0	True				
ANR	3625860	CallExpression	migrate_to_cgroup ( pi -> pid )		3625797	0					
ANR	3625861	Callee	migrate_to_cgroup		3625797	0					
ANR	3625862	Identifier	migrate_to_cgroup		3625797	0					
ANR	3625863	ArgumentList	pi -> pid		3625797	1					
ANR	3625864	Argument	pi -> pid		3625797	0					
ANR	3625865	PtrMemberAccess	pi -> pid		3625797	0					
ANR	3625866	Identifier	pi		3625797	0					
ANR	3625867	Identifier	pid		3625797	1					
ANR	3625868	ExpressionStatement	m_monitor -> add_member ( member )	894:1:25785:25814	3625797	14	True				
ANR	3625869	CallExpression	m_monitor -> add_member ( member )		3625797	0					
ANR	3625870	Callee	m_monitor -> add_member		3625797	0					
ANR	3625871	PtrMemberAccess	m_monitor -> add_member		3625797	0					
ANR	3625872	Identifier	m_monitor		3625797	0					
ANR	3625873	Identifier	add_member		3625797	1					
ANR	3625874	ArgumentList	member		3625797	1					
ANR	3625875	Argument	member		3625797	0					
ANR	3625876	Identifier	member		3625797	0					
ANR	3625877	ReturnType	void		3625797	1					
ANR	3625878	Identifier	ProcFamily :: add_member		3625797	2					
ANR	3625879	ParameterList	procInfo * pi		3625797	3					
ANR	3625880	Parameter	procInfo * pi	870:23:25271:25282	3625797	0	True				
ANR	3625881	ParameterType	procInfo *		3625797	0					
ANR	3625882	Identifier	pi		3625797	1					
ANR	3625883	CFGEntryNode	ENTRY		3625797		True				
ANR	3625884	CFGExitNode	EXIT		3625797		True				
ANR	3625885	Symbol	m_member_list		3625797						
ANR	3625886	Symbol	member -> m_family		3625797						
ANR	3625887	Symbol	NULL		3625797						
ANR	3625888	Symbol	member -> m_proc_info		3625797						
ANR	3625889	Symbol	this		3625797						
ANR	3625890	Symbol	false		3625797						
ANR	3625891	Symbol	member -> m_still_alive		3625797						
ANR	3625892	Symbol	member -> m_prev		3625797						
ANR	3625893	Symbol	* member		3625797						
ANR	3625894	Symbol	member -> m_next		3625797						
ANR	3625895	Symbol	m_monitor		3625797						
ANR	3625896	Symbol	m_member_list -> m_prev		3625797						
ANR	3625897	Symbol	* m_member_list		3625797						
ANR	3625898	Symbol	pi -> pid		3625797						
ANR	3625899	Symbol	member		3625797						
ANR	3625900	Symbol	pi		3625797						
ANR	3625901	Symbol	m_cgroup_string		3625797						
ANR	3625902	Symbol	* pi		3625797						
ANR	3625903	Function	ProcFamily :: remove_exited_processes	897:0:25819:27821							
ANR	3625904	FunctionDef	ProcFamily :: remove_exited_processes ()		3625903	0					
ANR	3625905	CompoundStatement		899:0:25862:27821	3625903	0					
ANR	3625906	IdentifierDeclStatement	ProcFamilyMember * member = m_member_list ;	904:1:26049:26089	3625903	0	True				
ANR	3625907	IdentifierDecl	* member = m_member_list		3625903	0					
ANR	3625908	IdentifierDeclType	ProcFamilyMember *		3625903	0					
ANR	3625909	Identifier	member		3625903	1					
ANR	3625910	AssignmentExpression	* member = m_member_list		3625903	2		=			
ANR	3625911	Identifier	m_member_list		3625903	0					
ANR	3625912	Identifier	m_member_list		3625903	1					
ANR	3625913	IdentifierDeclStatement	ProcFamilyMember * prev = NULL ;	905:1:26092:26121	3625903	1	True				
ANR	3625914	IdentifierDecl	* prev = NULL		3625903	0					
ANR	3625915	IdentifierDeclType	ProcFamilyMember *		3625903	0					
ANR	3625916	Identifier	prev		3625903	1					
ANR	3625917	AssignmentExpression	* prev = NULL		3625903	2		=			
ANR	3625918	Identifier	NULL		3625903	0					
ANR	3625919	Identifier	NULL		3625903	1					
ANR	3625920	IdentifierDeclStatement	ProcFamilyMember * * prev_ptr = & m_member_list ;	906:1:26124:26168	3625903	2	True				
ANR	3625921	IdentifierDecl	* * prev_ptr = & m_member_list		3625903	0					
ANR	3625922	IdentifierDeclType	ProcFamilyMember * *		3625903	0					
ANR	3625923	Identifier	prev_ptr		3625903	1					
ANR	3625924	AssignmentExpression	* * prev_ptr = & m_member_list		3625903	2		=			
ANR	3625925	Identifier	prev_ptr		3625903	0					
ANR	3625926	UnaryOperationExpression	& m_member_list		3625903	1					
ANR	3625927	UnaryOperator	&		3625903	0					
ANR	3625928	Identifier	m_member_list		3625903	1					
ANR	3625929	WhileStatement	while ( member != NULL )		3625903	3					
ANR	3625930	Condition	member != NULL	907:8:26178:26191	3625903	0	True				
ANR	3625931	EqualityExpression	member != NULL		3625903	0		!=			
ANR	3625932	Identifier	member		3625903	0					
ANR	3625933	Identifier	NULL		3625903	1					
ANR	3625934	CompoundStatement		11:2:337:383	3625903	1					
ANR	3625935	IdentifierDeclStatement	ProcFamilyMember * next_member = member -> m_next ;	909:2:26200:26246	3625903	0	True				
ANR	3625936	IdentifierDecl	* next_member = member -> m_next		3625903	0					
ANR	3625937	IdentifierDeclType	ProcFamilyMember *		3625903	0					
ANR	3625938	Identifier	next_member		3625903	1					
ANR	3625939	AssignmentExpression	* next_member = member -> m_next		3625903	2		=			
ANR	3625940	Identifier	next_member		3625903	0					
ANR	3625941	PtrMemberAccess	member -> m_next		3625903	1					
ANR	3625942	Identifier	member		3625903	0					
ANR	3625943	Identifier	m_next		3625903	1					
ANR	3625944	IfStatement	if ( ! member -> m_still_alive )		3625903	1					
ANR	3625945	Condition	! member -> m_still_alive	911:6:26255:26276	3625903	0	True				
ANR	3625946	UnaryOperationExpression	! member -> m_still_alive		3625903	0					
ANR	3625947	UnaryOperator	!		3625903	0					
ANR	3625948	PtrMemberAccess	member -> m_still_alive		3625903	1					
ANR	3625949	Identifier	member		3625903	0					
ANR	3625950	Identifier	m_still_alive		3625903	1					
ANR	3625951	CompoundStatement		13:30:416:416	3625903	1					
ANR	3625952	IfStatement	if ( m_root_pid != 0 )		3625903	0					
ANR	3625953	Condition	m_root_pid != 0	920:7:26555:26569	3625903	0	True				
ANR	3625954	EqualityExpression	m_root_pid != 0		3625903	0		!=			
ANR	3625955	Identifier	m_root_pid		3625903	0					
ANR	3625956	PrimaryExpression	0		3625903	1					
ANR	3625957	CompoundStatement		22:24:709:709	3625903	1					
ANR	3625958	ExpressionStatement	"dprintf ( D_ALWAYS , ""process %u (of family %u) has exited\\n"" , member -> m_proc_info -> pid , m_root_pid )"	921:4:26578:26711	3625903	0	True				
ANR	3625959	CallExpression	"dprintf ( D_ALWAYS , ""process %u (of family %u) has exited\\n"" , member -> m_proc_info -> pid , m_root_pid )"		3625903	0					
ANR	3625960	Callee	dprintf		3625903	0					
ANR	3625961	Identifier	dprintf		3625903	0					
ANR	3625962	ArgumentList	D_ALWAYS		3625903	1					
ANR	3625963	Argument	D_ALWAYS		3625903	0					
ANR	3625964	Identifier	D_ALWAYS		3625903	0					
ANR	3625965	Argument	"""process %u (of family %u) has exited\\n"""		3625903	1					
ANR	3625966	PrimaryExpression	"""process %u (of family %u) has exited\\n"""		3625903	0					
ANR	3625967	Argument	member -> m_proc_info -> pid		3625903	2					
ANR	3625968	PtrMemberAccess	member -> m_proc_info -> pid		3625903	0					
ANR	3625969	PtrMemberAccess	member -> m_proc_info		3625903	0					
ANR	3625970	Identifier	member		3625903	0					
ANR	3625971	Identifier	m_proc_info		3625903	1					
ANR	3625972	Identifier	pid		3625903	1					
ANR	3625973	Argument	m_root_pid		3625903	3					
ANR	3625974	Identifier	m_root_pid		3625903	0					
ANR	3625975	ElseStatement	else		3625903	0					
ANR	3625976	CompoundStatement		28:8:863:863	3625903	0					
ANR	3625977	ExpressionStatement	"dprintf ( D_ALWAYS , ""process %u (not in monitored family) has exited\\n"" , member -> m_proc_info -> pid )"	927:4:26732:26852	3625903	0	True				
ANR	3625978	CallExpression	"dprintf ( D_ALWAYS , ""process %u (not in monitored family) has exited\\n"" , member -> m_proc_info -> pid )"		3625903	0					
ANR	3625979	Callee	dprintf		3625903	0					
ANR	3625980	Identifier	dprintf		3625903	0					
ANR	3625981	ArgumentList	D_ALWAYS		3625903	1					
ANR	3625982	Argument	D_ALWAYS		3625903	0					
ANR	3625983	Identifier	D_ALWAYS		3625903	0					
ANR	3625984	Argument	"""process %u (not in monitored family) has exited\\n"""		3625903	1					
ANR	3625985	PrimaryExpression	"""process %u (not in monitored family) has exited\\n"""		3625903	0					
ANR	3625986	Argument	member -> m_proc_info -> pid		3625903	2					
ANR	3625987	PtrMemberAccess	member -> m_proc_info -> pid		3625903	0					
ANR	3625988	PtrMemberAccess	member -> m_proc_info		3625903	0					
ANR	3625989	Identifier	member		3625903	0					
ANR	3625990	Identifier	m_proc_info		3625903	1					
ANR	3625991	Identifier	pid		3625903	1					
ANR	3625992	ExpressionStatement	m_exited_user_cpu_time += member -> m_proc_info -> user_time	934:3:26908:26968	3625903	1	True				
ANR	3625993	AssignmentExpression	m_exited_user_cpu_time += member -> m_proc_info -> user_time		3625903	0		+=			
ANR	3625994	Identifier	m_exited_user_cpu_time		3625903	0					
ANR	3625995	PtrMemberAccess	member -> m_proc_info -> user_time		3625903	1					
ANR	3625996	PtrMemberAccess	member -> m_proc_info		3625903	0					
ANR	3625997	Identifier	member		3625903	0					
ANR	3625998	Identifier	m_proc_info		3625903	1					
ANR	3625999	Identifier	user_time		3625903	1					
ANR	3626000	ExpressionStatement	m_exited_sys_cpu_time += member -> m_proc_info -> sys_time	936:3:26973:27031	3625903	2	True				
ANR	3626001	AssignmentExpression	m_exited_sys_cpu_time += member -> m_proc_info -> sys_time		3625903	0		+=			
ANR	3626002	Identifier	m_exited_sys_cpu_time		3625903	0					
ANR	3626003	PtrMemberAccess	member -> m_proc_info -> sys_time		3625903	1					
ANR	3626004	PtrMemberAccess	member -> m_proc_info		3625903	0					
ANR	3626005	Identifier	member		3625903	0					
ANR	3626006	Identifier	m_proc_info		3625903	1					
ANR	3626007	Identifier	sys_time		3625903	1					
ANR	3626008	ExpressionStatement	m_monitor -> remove_member ( member )	941:3:27091:27123	3625903	3	True				
ANR	3626009	CallExpression	m_monitor -> remove_member ( member )		3625903	0					
ANR	3626010	Callee	m_monitor -> remove_member		3625903	0					
ANR	3626011	PtrMemberAccess	m_monitor -> remove_member		3625903	0					
ANR	3626012	Identifier	m_monitor		3625903	0					
ANR	3626013	Identifier	remove_member		3625903	1					
ANR	3626014	ArgumentList	member		3625903	1					
ANR	3626015	Argument	member		3625903	0					
ANR	3626016	Identifier	member		3625903	0					
ANR	3626017	ExpressionStatement	* prev_ptr = next_member	946:3:27212:27235	3625903	4	True				
ANR	3626018	AssignmentExpression	* prev_ptr = next_member		3625903	0		=			
ANR	3626019	UnaryOperationExpression	* prev_ptr		3625903	0					
ANR	3626020	UnaryOperator	*		3625903	0					
ANR	3626021	Identifier	prev_ptr		3625903	1					
ANR	3626022	Identifier	next_member		3625903	1					
ANR	3626023	IfStatement	if ( next_member != NULL )		3625903	5					
ANR	3626024	Condition	next_member != NULL	947:7:27244:27262	3625903	0	True				
ANR	3626025	EqualityExpression	next_member != NULL		3625903	0		!=			
ANR	3626026	Identifier	next_member		3625903	0					
ANR	3626027	Identifier	NULL		3625903	1					
ANR	3626028	CompoundStatement		49:28:1402:1402	3625903	1					
ANR	3626029	ExpressionStatement	next_member -> m_prev = prev	948:4:27271:27297	3625903	0	True				
ANR	3626030	AssignmentExpression	next_member -> m_prev = prev		3625903	0		=			
ANR	3626031	PtrMemberAccess	next_member -> m_prev		3625903	0					
ANR	3626032	Identifier	next_member		3625903	0					
ANR	3626033	Identifier	m_prev		3625903	1					
ANR	3626034	Identifier	prev		3625903	1					
ANR	3626035	Statement	delete	954:3:27459:27464	3625903	6	True				
ANR	3626036	ExpressionStatement	member -> m_proc_info	954:10:27466:27485	3625903	7	True				
ANR	3626037	PtrMemberAccess	member -> m_proc_info		3625903	0					
ANR	3626038	Identifier	member		3625903	0					
ANR	3626039	Identifier	m_proc_info		3625903	1					
ANR	3626040	Statement	delete	955:3:27490:27495	3625903	8	True				
ANR	3626041	ExpressionStatement	member	955:10:27497:27503	3625903	9	True				
ANR	3626042	Identifier	member		3625903	0					
ANR	3626043	ElseStatement	else		3625903	0					
ANR	3626044	CompoundStatement		59:7:1653:1653	3625903	0					
ANR	3626045	ExpressionStatement	member -> m_still_alive = false	961:3:27577:27606	3625903	0	True				
ANR	3626046	AssignmentExpression	member -> m_still_alive = false		3625903	0		=			
ANR	3626047	PtrMemberAccess	member -> m_still_alive		3625903	0					
ANR	3626048	Identifier	member		3625903	0					
ANR	3626049	Identifier	m_still_alive		3625903	1					
ANR	3626050	Identifier	false		3625903	1					
ANR	3626051	ExpressionStatement	prev = member	966:3:27693:27706	3625903	1	True				
ANR	3626052	AssignmentExpression	prev = member		3625903	0		=			
ANR	3626053	Identifier	prev		3625903	0					
ANR	3626054	Identifier	member		3625903	1					
ANR	3626055	ExpressionStatement	prev_ptr = & member -> m_next	967:3:27711:27737	3625903	2	True				
ANR	3626056	AssignmentExpression	prev_ptr = & member -> m_next		3625903	0		=			
ANR	3626057	Identifier	prev_ptr		3625903	0					
ANR	3626058	UnaryOperationExpression	& member -> m_next		3625903	1					
ANR	3626059	UnaryOperator	&		3625903	0					
ANR	3626060	PtrMemberAccess	member -> m_next		3625903	1					
ANR	3626061	Identifier	member		3625903	0					
ANR	3626062	Identifier	m_next		3625903	1					
ANR	3626063	ExpressionStatement	member = next_member	972:2:27796:27816	3625903	2	True				
ANR	3626064	AssignmentExpression	member = next_member		3625903	0		=			
ANR	3626065	Identifier	member		3625903	0					
ANR	3626066	Identifier	next_member		3625903	1					
ANR	3626067	ReturnType	void		3625903	1					
ANR	3626068	Identifier	ProcFamily :: remove_exited_processes		3625903	2					
ANR	3626069	ParameterList			3625903	3					
ANR	3626070	CFGEntryNode	ENTRY		3625903		True				
ANR	3626071	CFGExitNode	EXIT		3625903		True				
ANR	3626072	Symbol	& member -> m_next		3625903						
ANR	3626073	Symbol	member -> m_proc_info		3625903						
ANR	3626074	Symbol	prev		3625903						
ANR	3626075	Symbol	member -> m_still_alive		3625903						
ANR	3626076	Symbol	member -> m_proc_info -> pid		3625903						
ANR	3626077	Symbol	* * member		3625903						
ANR	3626078	Symbol	* member -> m_proc_info		3625903						
ANR	3626079	Symbol	member		3625903						
ANR	3626080	Symbol	member -> m_proc_info -> sys_time		3625903						
ANR	3626081	Symbol	m_member_list		3625903						
ANR	3626082	Symbol	next_member -> m_prev		3625903						
ANR	3626083	Symbol	NULL		3625903						
ANR	3626084	Symbol	D_ALWAYS		3625903						
ANR	3626085	Symbol	false		3625903						
ANR	3626086	Symbol	& m_member_list		3625903						
ANR	3626087	Symbol	next_member		3625903						
ANR	3626088	Symbol	* member		3625903						
ANR	3626089	Symbol	member -> m_next		3625903						
ANR	3626090	Symbol	m_monitor		3625903						
ANR	3626091	Symbol	prev_ptr		3625903						
ANR	3626092	Symbol	* prev_ptr		3625903						
ANR	3626093	Symbol	* next_member		3625903						
ANR	3626094	Symbol	m_exited_sys_cpu_time		3625903						
ANR	3626095	Symbol	m_exited_user_cpu_time		3625903						
ANR	3626096	Symbol	m_root_pid		3625903						
ANR	3626097	Symbol	member -> m_proc_info -> user_time		3625903						
ANR	3626098	Function	ProcFamily :: fold_into_parent	976:0:27824:28730							
ANR	3626099	FunctionDef	ProcFamily :: fold_into_parent (ProcFamily * parent)		3626098	0					
ANR	3626100	CompoundStatement		978:0:27878:28730	3626098	0					
ANR	3626101	ExpressionStatement	parent -> m_exited_user_cpu_time += m_exited_user_cpu_time	981:1:27936:27992	3626098	0	True				
ANR	3626102	AssignmentExpression	parent -> m_exited_user_cpu_time += m_exited_user_cpu_time		3626098	0		+=			
ANR	3626103	PtrMemberAccess	parent -> m_exited_user_cpu_time		3626098	0					
ANR	3626104	Identifier	parent		3626098	0					
ANR	3626105	Identifier	m_exited_user_cpu_time		3626098	1					
ANR	3626106	Identifier	m_exited_user_cpu_time		3626098	1					
ANR	3626107	ExpressionStatement	parent -> m_exited_sys_cpu_time += m_exited_sys_cpu_time	982:1:27995:28049	3626098	1	True				
ANR	3626108	AssignmentExpression	parent -> m_exited_sys_cpu_time += m_exited_sys_cpu_time		3626098	0		+=			
ANR	3626109	PtrMemberAccess	parent -> m_exited_sys_cpu_time		3626098	0					
ANR	3626110	Identifier	parent		3626098	0					
ANR	3626111	Identifier	m_exited_sys_cpu_time		3626098	1					
ANR	3626112	Identifier	m_exited_sys_cpu_time		3626098	1					
ANR	3626113	IfStatement	if ( m_member_list == NULL )		3626098	2					
ANR	3626114	Condition	m_member_list == NULL	986:5:28112:28132	3626098	0	True				
ANR	3626115	EqualityExpression	m_member_list == NULL		3626098	0		==			
ANR	3626116	Identifier	m_member_list		3626098	0					
ANR	3626117	Identifier	NULL		3626098	1					
ANR	3626118	CompoundStatement		9:28:256:256	3626098	1					
ANR	3626119	ReturnStatement	return ;	987:2:28139:28145	3626098	0	True				
ANR	3626120	IdentifierDeclStatement	ProcFamilyMember * member = m_member_list ;	993:1:28224:28264	3626098	3	True				
ANR	3626121	IdentifierDecl	* member = m_member_list		3626098	0					
ANR	3626122	IdentifierDeclType	ProcFamilyMember *		3626098	0					
ANR	3626123	Identifier	member		3626098	1					
ANR	3626124	AssignmentExpression	* member = m_member_list		3626098	2		=			
ANR	3626125	Identifier	m_member_list		3626098	0					
ANR	3626126	Identifier	m_member_list		3626098	1					
ANR	3626127	WhileStatement	while ( member -> m_next != NULL )		3626098	4					
ANR	3626128	Condition	member -> m_next != NULL	994:8:28274:28295	3626098	0	True				
ANR	3626129	EqualityExpression	member -> m_next != NULL		3626098	0		!=			
ANR	3626130	PtrMemberAccess	member -> m_next		3626098	0					
ANR	3626131	Identifier	member		3626098	0					
ANR	3626132	Identifier	m_next		3626098	1					
ANR	3626133	Identifier	NULL		3626098	1					
ANR	3626134	CompoundStatement		17:32:419:419	3626098	1					
ANR	3626135	ExpressionStatement	member -> m_family = parent	995:2:28302:28327	3626098	0	True				
ANR	3626136	AssignmentExpression	member -> m_family = parent		3626098	0		=			
ANR	3626137	PtrMemberAccess	member -> m_family		3626098	0					
ANR	3626138	Identifier	member		3626098	0					
ANR	3626139	Identifier	m_family		3626098	1					
ANR	3626140	Identifier	parent		3626098	1					
ANR	3626141	ExpressionStatement	member = member -> m_next	996:2:28331:28354	3626098	1	True				
ANR	3626142	AssignmentExpression	member = member -> m_next		3626098	0		=			
ANR	3626143	Identifier	member		3626098	0					
ANR	3626144	PtrMemberAccess	member -> m_next		3626098	1					
ANR	3626145	Identifier	member		3626098	0					
ANR	3626146	Identifier	m_next		3626098	1					
ANR	3626147	ExpressionStatement	member -> m_family = parent	998:1:28360:28385	3626098	5	True				
ANR	3626148	AssignmentExpression	member -> m_family = parent		3626098	0		=			
ANR	3626149	PtrMemberAccess	member -> m_family		3626098	0					
ANR	3626150	Identifier	member		3626098	0					
ANR	3626151	Identifier	m_family		3626098	1					
ANR	3626152	Identifier	parent		3626098	1					
ANR	3626153	ExpressionStatement	member -> m_next = parent -> m_member_list	1003:1:28461:28499	3626098	6	True				
ANR	3626154	AssignmentExpression	member -> m_next = parent -> m_member_list		3626098	0		=			
ANR	3626155	PtrMemberAccess	member -> m_next		3626098	0					
ANR	3626156	Identifier	member		3626098	0					
ANR	3626157	Identifier	m_next		3626098	1					
ANR	3626158	PtrMemberAccess	parent -> m_member_list		3626098	1					
ANR	3626159	Identifier	parent		3626098	0					
ANR	3626160	Identifier	m_member_list		3626098	1					
ANR	3626161	IfStatement	if ( member -> m_next != NULL )		3626098	7					
ANR	3626162	Condition	member -> m_next != NULL	1004:5:28506:28527	3626098	0	True				
ANR	3626163	EqualityExpression	member -> m_next != NULL		3626098	0		!=			
ANR	3626164	PtrMemberAccess	member -> m_next		3626098	0					
ANR	3626165	Identifier	member		3626098	0					
ANR	3626166	Identifier	m_next		3626098	1					
ANR	3626167	Identifier	NULL		3626098	1					
ANR	3626168	CompoundStatement		27:29:651:651	3626098	1					
ANR	3626169	ExpressionStatement	member -> m_next -> m_prev = member	1005:2:28534:28565	3626098	0	True				
ANR	3626170	AssignmentExpression	member -> m_next -> m_prev = member		3626098	0		=			
ANR	3626171	PtrMemberAccess	member -> m_next -> m_prev		3626098	0					
ANR	3626172	PtrMemberAccess	member -> m_next		3626098	0					
ANR	3626173	Identifier	member		3626098	0					
ANR	3626174	Identifier	m_next		3626098	1					
ANR	3626175	Identifier	m_prev		3626098	1					
ANR	3626176	Identifier	member		3626098	1					
ANR	3626177	ExpressionStatement	parent -> m_member_list = m_member_list	1011:1:28668:28705	3626098	8	True				
ANR	3626178	AssignmentExpression	parent -> m_member_list = m_member_list		3626098	0		=			
ANR	3626179	PtrMemberAccess	parent -> m_member_list		3626098	0					
ANR	3626180	Identifier	parent		3626098	0					
ANR	3626181	Identifier	m_member_list		3626098	1					
ANR	3626182	Identifier	m_member_list		3626098	1					
ANR	3626183	ExpressionStatement	m_member_list = NULL	1012:1:28708:28728	3626098	9	True				
ANR	3626184	AssignmentExpression	m_member_list = NULL		3626098	0		=			
ANR	3626185	Identifier	m_member_list		3626098	0					
ANR	3626186	Identifier	NULL		3626098	1					
ANR	3626187	ReturnType	void		3626098	1					
ANR	3626188	Identifier	ProcFamily :: fold_into_parent		3626098	2					
ANR	3626189	ParameterList	ProcFamily * parent		3626098	3					
ANR	3626190	Parameter	ProcFamily * parent	977:29:27858:27875	3626098	0	True				
ANR	3626191	ParameterType	ProcFamily *		3626098	0					
ANR	3626192	Identifier	parent		3626098	1					
ANR	3626193	CFGEntryNode	ENTRY		3626098		True				
ANR	3626194	CFGExitNode	EXIT		3626098		True				
ANR	3626195	Symbol	m_member_list		3626098						
ANR	3626196	Symbol	parent		3626098						
ANR	3626197	Symbol	member -> m_family		3626098						
ANR	3626198	Symbol	* parent		3626098						
ANR	3626199	Symbol	NULL		3626098						
ANR	3626200	Symbol	member -> m_next		3626098						
ANR	3626201	Symbol	* member		3626098						
ANR	3626202	Symbol	parent -> m_member_list		3626098						
ANR	3626203	Symbol	* * member		3626098						
ANR	3626204	Symbol	parent -> m_exited_sys_cpu_time		3626098						
ANR	3626205	Symbol	* member -> m_next		3626098						
ANR	3626206	Symbol	parent -> m_exited_user_cpu_time		3626098						
ANR	3626207	Symbol	m_exited_sys_cpu_time		3626098						
ANR	3626208	Symbol	member		3626098						
ANR	3626209	Symbol	m_exited_user_cpu_time		3626098						
ANR	3626210	Symbol	member -> m_next -> m_prev		3626098						
ANR	3626211	Function	ProcFamily :: set_proxy	1016:0:28753:28891							
ANR	3626212	FunctionDef	ProcFamily :: set_proxy (char * proxy)		3626211	0					
ANR	3626213	CompoundStatement		1018:0:28793:28891	3626211	0					
ANR	3626214	IfStatement	if ( m_proxy != NULL )		3626211	0					
ANR	3626215	Condition	m_proxy != NULL	1019:5:28800:28814	3626211	0	True				
ANR	3626216	EqualityExpression	m_proxy != NULL		3626211	0		!=			
ANR	3626217	Identifier	m_proxy		3626211	0					
ANR	3626218	Identifier	NULL		3626211	1					
ANR	3626219	CompoundStatement		2:22:23:23	3626211	1					
ANR	3626220	ExpressionStatement	free ( m_proxy )	1020:2:28821:28834	3626211	0	True				
ANR	3626221	CallExpression	free ( m_proxy )		3626211	0					
ANR	3626222	Callee	free		3626211	0					
ANR	3626223	Identifier	free		3626211	0					
ANR	3626224	ArgumentList	m_proxy		3626211	1					
ANR	3626225	Argument	m_proxy		3626211	0					
ANR	3626226	Identifier	m_proxy		3626211	0					
ANR	3626227	ExpressionStatement	m_proxy = strdup ( proxy )	1022:1:28840:28863	3626211	1	True				
ANR	3626228	AssignmentExpression	m_proxy = strdup ( proxy )		3626211	0		=			
ANR	3626229	Identifier	m_proxy		3626211	0					
ANR	3626230	CallExpression	strdup ( proxy )		3626211	1					
ANR	3626231	Callee	strdup		3626211	0					
ANR	3626232	Identifier	strdup		3626211	0					
ANR	3626233	ArgumentList	proxy		3626211	1					
ANR	3626234	Argument	proxy		3626211	0					
ANR	3626235	Identifier	proxy		3626211	0					
ANR	3626236	ExpressionStatement	ASSERT ( m_proxy != NULL )	1023:1:28866:28889	3626211	2	True				
ANR	3626237	CallExpression	ASSERT ( m_proxy != NULL )		3626211	0					
ANR	3626238	Callee	ASSERT		3626211	0					
ANR	3626239	Identifier	ASSERT		3626211	0					
ANR	3626240	ArgumentList	m_proxy != NULL		3626211	1					
ANR	3626241	Argument	m_proxy != NULL		3626211	0					
ANR	3626242	EqualityExpression	m_proxy != NULL		3626211	0		!=			
ANR	3626243	Identifier	m_proxy		3626211	0					
ANR	3626244	Identifier	NULL		3626211	1					
ANR	3626245	ReturnType	void		3626211	1					
ANR	3626246	Identifier	ProcFamily :: set_proxy		3626211	2					
ANR	3626247	ParameterList	char * proxy		3626211	3					
ANR	3626248	Parameter	char * proxy	1017:22:28780:28790	3626211	0	True				
ANR	3626249	ParameterType	char *		3626211	0					
ANR	3626250	Identifier	proxy		3626211	1					
ANR	3626251	CFGEntryNode	ENTRY		3626211		True				
ANR	3626252	CFGExitNode	EXIT		3626211		True				
ANR	3626253	Symbol	proxy		3626211						
ANR	3626254	Symbol	NULL		3626211						
ANR	3626255	Symbol	strdup		3626211						
ANR	3626256	Symbol	m_proxy		3626211						
ANR	3626257	Function	ProcFamily :: dump	1027:0:28901:29333							
ANR	3626258	FunctionDef	ProcFamily :: dump (ProcFamilyDump & fam)		3626257	0					
ANR	3626259	CompoundStatement		1029:0:28944:29333	3626257	0					
ANR	3626260	IdentifierDeclStatement	ProcFamilyMember * member = m_member_list ;	1030:1:28947:28987	3626257	0	True				
ANR	3626261	IdentifierDecl	* member = m_member_list		3626257	0					
ANR	3626262	IdentifierDeclType	ProcFamilyMember *		3626257	0					
ANR	3626263	Identifier	member		3626257	1					
ANR	3626264	AssignmentExpression	* member = m_member_list		3626257	2		=			
ANR	3626265	Identifier	m_member_list		3626257	0					
ANR	3626266	Identifier	m_member_list		3626257	1					
ANR	3626267	WhileStatement	while ( member != NULL )		3626257	1					
ANR	3626268	Condition	member != NULL	1031:8:28997:29010	3626257	0	True				
ANR	3626269	EqualityExpression	member != NULL		3626257	0		!=			
ANR	3626270	Identifier	member		3626257	0					
ANR	3626271	Identifier	NULL		3626257	1					
ANR	3626272	CompoundStatement		4:2:72:98	3626257	1					
ANR	3626273	IdentifierDeclStatement	ProcFamilyProcessDump proc ;	1032:2:29017:29043	3626257	0	True				
ANR	3626274	IdentifierDecl	proc		3626257	0					
ANR	3626275	IdentifierDeclType	ProcFamilyProcessDump		3626257	0					
ANR	3626276	Identifier	proc		3626257	1					
ANR	3626277	ExpressionStatement	proc . pid = member -> m_proc_info -> pid	1033:2:29047:29082	3626257	1	True				
ANR	3626278	AssignmentExpression	proc . pid = member -> m_proc_info -> pid		3626257	0		=			
ANR	3626279	MemberAccess	proc . pid		3626257	0					
ANR	3626280	Identifier	proc		3626257	0					
ANR	3626281	Identifier	pid		3626257	1					
ANR	3626282	PtrMemberAccess	member -> m_proc_info -> pid		3626257	1					
ANR	3626283	PtrMemberAccess	member -> m_proc_info		3626257	0					
ANR	3626284	Identifier	member		3626257	0					
ANR	3626285	Identifier	m_proc_info		3626257	1					
ANR	3626286	Identifier	pid		3626257	1					
ANR	3626287	ExpressionStatement	proc . ppid = member -> m_proc_info -> ppid	1034:2:29086:29123	3626257	2	True				
ANR	3626288	AssignmentExpression	proc . ppid = member -> m_proc_info -> ppid		3626257	0		=			
ANR	3626289	MemberAccess	proc . ppid		3626257	0					
ANR	3626290	Identifier	proc		3626257	0					
ANR	3626291	Identifier	ppid		3626257	1					
ANR	3626292	PtrMemberAccess	member -> m_proc_info -> ppid		3626257	1					
ANR	3626293	PtrMemberAccess	member -> m_proc_info		3626257	0					
ANR	3626294	Identifier	member		3626257	0					
ANR	3626295	Identifier	m_proc_info		3626257	1					
ANR	3626296	Identifier	ppid		3626257	1					
ANR	3626297	ExpressionStatement	proc . birthday = member -> m_proc_info -> birthday	1035:2:29127:29172	3626257	3	True				
ANR	3626298	AssignmentExpression	proc . birthday = member -> m_proc_info -> birthday		3626257	0		=			
ANR	3626299	MemberAccess	proc . birthday		3626257	0					
ANR	3626300	Identifier	proc		3626257	0					
ANR	3626301	Identifier	birthday		3626257	1					
ANR	3626302	PtrMemberAccess	member -> m_proc_info -> birthday		3626257	1					
ANR	3626303	PtrMemberAccess	member -> m_proc_info		3626257	0					
ANR	3626304	Identifier	member		3626257	0					
ANR	3626305	Identifier	m_proc_info		3626257	1					
ANR	3626306	Identifier	birthday		3626257	1					
ANR	3626307	ExpressionStatement	proc . user_time = member -> m_proc_info -> user_time	1036:2:29176:29223	3626257	4	True				
ANR	3626308	AssignmentExpression	proc . user_time = member -> m_proc_info -> user_time		3626257	0		=			
ANR	3626309	MemberAccess	proc . user_time		3626257	0					
ANR	3626310	Identifier	proc		3626257	0					
ANR	3626311	Identifier	user_time		3626257	1					
ANR	3626312	PtrMemberAccess	member -> m_proc_info -> user_time		3626257	1					
ANR	3626313	PtrMemberAccess	member -> m_proc_info		3626257	0					
ANR	3626314	Identifier	member		3626257	0					
ANR	3626315	Identifier	m_proc_info		3626257	1					
ANR	3626316	Identifier	user_time		3626257	1					
ANR	3626317	ExpressionStatement	proc . sys_time = member -> m_proc_info -> sys_time	1037:2:29227:29272	3626257	5	True				
ANR	3626318	AssignmentExpression	proc . sys_time = member -> m_proc_info -> sys_time		3626257	0		=			
ANR	3626319	MemberAccess	proc . sys_time		3626257	0					
ANR	3626320	Identifier	proc		3626257	0					
ANR	3626321	Identifier	sys_time		3626257	1					
ANR	3626322	PtrMemberAccess	member -> m_proc_info -> sys_time		3626257	1					
ANR	3626323	PtrMemberAccess	member -> m_proc_info		3626257	0					
ANR	3626324	Identifier	member		3626257	0					
ANR	3626325	Identifier	m_proc_info		3626257	1					
ANR	3626326	Identifier	sys_time		3626257	1					
ANR	3626327	ExpressionStatement	fam . procs . push_back ( proc )	1038:2:29276:29301	3626257	6	True				
ANR	3626328	CallExpression	fam . procs . push_back ( proc )		3626257	0					
ANR	3626329	Callee	fam . procs . push_back		3626257	0					
ANR	3626330	MemberAccess	fam . procs . push_back		3626257	0					
ANR	3626331	MemberAccess	fam . procs		3626257	0					
ANR	3626332	Identifier	fam		3626257	0					
ANR	3626333	Identifier	procs		3626257	1					
ANR	3626334	Identifier	push_back		3626257	1					
ANR	3626335	ArgumentList	proc		3626257	1					
ANR	3626336	Argument	proc		3626257	0					
ANR	3626337	Identifier	proc		3626257	0					
ANR	3626338	ExpressionStatement	member = member -> m_next	1039:2:29305:29328	3626257	7	True				
ANR	3626339	AssignmentExpression	member = member -> m_next		3626257	0		=			
ANR	3626340	Identifier	member		3626257	0					
ANR	3626341	PtrMemberAccess	member -> m_next		3626257	1					
ANR	3626342	Identifier	member		3626257	0					
ANR	3626343	Identifier	m_next		3626257	1					
ANR	3626344	ReturnType	void		3626257	1					
ANR	3626345	Identifier	ProcFamily :: dump		3626257	2					
ANR	3626346	ParameterList	ProcFamilyDump & fam		3626257	3					
ANR	3626347	Parameter	ProcFamilyDump & fam	1028:17:28923:28941	3626257	0	True				
ANR	3626348	ParameterType	ProcFamilyDump &		3626257	0					
ANR	3626349	Identifier	fam		3626257	1					
ANR	3626350	CFGEntryNode	ENTRY		3626257		True				
ANR	3626351	CFGExitNode	EXIT		3626257		True				
ANR	3626352	Symbol	m_member_list		3626257						
ANR	3626353	Symbol	proc . birthday		3626257						
ANR	3626354	Symbol	proc		3626257						
ANR	3626355	Symbol	NULL		3626257						
ANR	3626356	Symbol	member -> m_proc_info		3626257						
ANR	3626357	Symbol	fam . procs		3626257						
ANR	3626358	Symbol	member -> m_proc_info -> pid		3626257						
ANR	3626359	Symbol	* member		3626257						
ANR	3626360	Symbol	member -> m_next		3626257						
ANR	3626361	Symbol	member -> m_proc_info -> birthday		3626257						
ANR	3626362	Symbol	proc . user_time		3626257						
ANR	3626363	Symbol	fam		3626257						
ANR	3626364	Symbol	* * member		3626257						
ANR	3626365	Symbol	* member -> m_proc_info		3626257						
ANR	3626366	Symbol	proc . pid		3626257						
ANR	3626367	Symbol	proc . ppid		3626257						
ANR	3626368	Symbol	member		3626257						
ANR	3626369	Symbol	proc . sys_time		3626257						
ANR	3626370	Symbol	member -> m_proc_info -> ppid		3626257						
ANR	3626371	Symbol	member -> m_proc_info -> sys_time		3626257						
ANR	3626372	Symbol	member -> m_proc_info -> user_time		3626257						
