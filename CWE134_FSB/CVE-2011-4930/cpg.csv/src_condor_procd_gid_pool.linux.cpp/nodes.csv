command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3612430	File	data/converged/CVE-2011-4930_htcondor/src_condor_procd_gid_pool.linux.cpp								
ANR	3612431	Function	GIDPool :: GIDPool	25:0:893:1198							
ANR	3612432	FunctionDef	"GIDPool :: GIDPool (gid_t min_gid , gid_t max_gid , bool allocating)"		3612431	0					
ANR	3612433	CompoundStatement		26:0:957:1198	3612431	0					
ANR	3612434	ExpressionStatement	ASSERT ( min_gid <= max_gid )	27:1:960:986	3612431	0	True				
ANR	3612435	CallExpression	ASSERT ( min_gid <= max_gid )		3612431	0					
ANR	3612436	Callee	ASSERT		3612431	0					
ANR	3612437	Identifier	ASSERT		3612431	0					
ANR	3612438	ArgumentList	min_gid <= max_gid		3612431	1					
ANR	3612439	Argument	min_gid <= max_gid		3612431	0					
ANR	3612440	RelationalExpression	min_gid <= max_gid		3612431	0		<=			
ANR	3612441	Identifier	min_gid		3612431	0					
ANR	3612442	Identifier	max_gid		3612431	1					
ANR	3612443	ExpressionStatement	m_size = max_gid - min_gid + 1	28:1:989:1019	3612431	1	True				
ANR	3612444	AssignmentExpression	m_size = max_gid - min_gid + 1		3612431	0		=			
ANR	3612445	Identifier	m_size		3612431	0					
ANR	3612446	AdditiveExpression	max_gid - min_gid + 1		3612431	1		-			
ANR	3612447	Identifier	max_gid		3612431	0					
ANR	3612448	AdditiveExpression	min_gid + 1		3612431	1		+			
ANR	3612449	Identifier	min_gid		3612431	0					
ANR	3612450	PrimaryExpression	1		3612431	1					
ANR	3612451	ExpressionStatement	m_offset = min_gid	29:1:1022:1040	3612431	2	True				
ANR	3612452	AssignmentExpression	m_offset = min_gid		3612431	0		=			
ANR	3612453	Identifier	m_offset		3612431	0					
ANR	3612454	Identifier	min_gid		3612431	1					
ANR	3612455	Statement	m_gid_map	30:1:1043:1051	3612431	3	True				
ANR	3612456	Statement	=	30:11:1053:1053	3612431	4	True				
ANR	3612457	Statement	new	30:13:1055:1057	3612431	5	True				
ANR	3612458	Statement	ProcFamily	30:17:1059:1068	3612431	6	True				
ANR	3612459	Statement	*	30:27:1069:1069	3612431	7	True				
ANR	3612460	Statement	[	30:28:1070:1070	3612431	8	True				
ANR	3612461	Statement	m_size	30:29:1071:1076	3612431	9	True				
ANR	3612462	Statement	]	30:35:1077:1077	3612431	10	True				
ANR	3612463	ExpressionStatement		30:36:1078:1078	3612431	11	True				
ANR	3612464	ExpressionStatement	ASSERT ( m_gid_map != NULL )	31:1:1081:1106	3612431	12	True				
ANR	3612465	CallExpression	ASSERT ( m_gid_map != NULL )		3612431	0					
ANR	3612466	Callee	ASSERT		3612431	0					
ANR	3612467	Identifier	ASSERT		3612431	0					
ANR	3612468	ArgumentList	m_gid_map != NULL		3612431	1					
ANR	3612469	Argument	m_gid_map != NULL		3612431	0					
ANR	3612470	EqualityExpression	m_gid_map != NULL		3612431	0		!=			
ANR	3612471	Identifier	m_gid_map		3612431	0					
ANR	3612472	Identifier	NULL		3612431	1					
ANR	3612473	ForStatement	for ( int i = 0 ; i < m_size ; i ++ )		3612431	13					
ANR	3612474	ForInit	int i = 0 ;	32:6:1114:1123	3612431	0	True				
ANR	3612475	IdentifierDeclStatement	int i = 0 ;		3612431	0					
ANR	3612476	IdentifierDecl	i = 0		3612431	0					
ANR	3612477	IdentifierDeclType	int		3612431	0					
ANR	3612478	Identifier	i		3612431	1					
ANR	3612479	AssignmentExpression	i = 0		3612431	2		=			
ANR	3612480	Identifier	i		3612431	0					
ANR	3612481	PrimaryExpression	0		3612431	1					
ANR	3612482	Condition	i < m_size	32:17:1125:1134	3612431	1	True				
ANR	3612483	RelationalExpression	i < m_size		3612431	0		<			
ANR	3612484	Identifier	i		3612431	0					
ANR	3612485	Identifier	m_size		3612431	1					
ANR	3612486	PostIncDecOperationExpression	i ++	32:29:1137:1139	3612431	2	True				
ANR	3612487	Identifier	i		3612431	0					
ANR	3612488	IncDec	++		3612431	1					
ANR	3612489	CompoundStatement		7:34:184:184	3612431	3					
ANR	3612490	ExpressionStatement	m_gid_map [ i ] = NULL	33:2:1146:1165	3612431	0	True				
ANR	3612491	AssignmentExpression	m_gid_map [ i ] = NULL		3612431	0		=			
ANR	3612492	ArrayIndexing	m_gid_map [ i ]		3612431	0					
ANR	3612493	Identifier	m_gid_map		3612431	0					
ANR	3612494	Identifier	i		3612431	1					
ANR	3612495	Identifier	NULL		3612431	1					
ANR	3612496	ExpressionStatement	m_allocating = allocating	35:1:1171:1196	3612431	14	True				
ANR	3612497	AssignmentExpression	m_allocating = allocating		3612431	0		=			
ANR	3612498	Identifier	m_allocating		3612431	0					
ANR	3612499	Identifier	allocating		3612431	1					
ANR	3612500	Identifier	GIDPool :: GIDPool		3612431	1					
ANR	3612501	ParameterList	"gid_t min_gid , gid_t max_gid , bool allocating"		3612431	2					
ANR	3612502	Parameter	gid_t min_gid	25:17:910:922	3612431	0	True				
ANR	3612503	ParameterType	gid_t		3612431	0					
ANR	3612504	Identifier	min_gid		3612431	1					
ANR	3612505	Parameter	gid_t max_gid	25:32:925:937	3612431	1	True				
ANR	3612506	ParameterType	gid_t		3612431	0					
ANR	3612507	Identifier	max_gid		3612431	1					
ANR	3612508	Parameter	bool allocating	25:47:940:954	3612431	2	True				
ANR	3612509	ParameterType	bool		3612431	0					
ANR	3612510	Identifier	allocating		3612431	1					
ANR	3612511	CFGEntryNode	ENTRY		3612431		True				
ANR	3612512	CFGExitNode	EXIT		3612431		True				
ANR	3612513	Symbol	max_gid		3612431						
ANR	3612514	Symbol	m_offset		3612431						
ANR	3612515	Symbol	m_gid_map		3612431						
ANR	3612516	Symbol	m_size		3612431						
ANR	3612517	Symbol	NULL		3612431						
ANR	3612518	Symbol	* i		3612431						
ANR	3612519	Symbol	* m_gid_map		3612431						
ANR	3612520	Symbol	allocating		3612431						
ANR	3612521	Symbol	m_allocating		3612431						
ANR	3612522	Symbol	i		3612431						
ANR	3612523	Symbol	min_gid		3612431						
ANR	3612524	Function	GIDPool :: ~GIDPool	38:0:1201:1244							
ANR	3612525	FunctionDef	GIDPool :: ~GIDPool ()		3612524	0					
ANR	3612526	CompoundStatement		39:0:1221:1244	3612524	0					
ANR	3612527	Statement	delete	40:1:1224:1229	3612524	0	True				
ANR	3612528	Statement	[	40:7:1230:1230	3612524	1	True				
ANR	3612529	Statement	]	40:8:1231:1231	3612524	2	True				
ANR	3612530	ExpressionStatement	m_gid_map	40:10:1233:1242	3612524	3	True				
ANR	3612531	Identifier	m_gid_map		3612524	0					
ANR	3612532	Identifier	GIDPool :: ~GIDPool		3612524	1					
ANR	3612533	ParameterList			3612524	2					
ANR	3612534	CFGEntryNode	ENTRY		3612524		True				
ANR	3612535	CFGExitNode	EXIT		3612524		True				
ANR	3612536	Function	GIDPool :: allocate	46:0:1428:1670							
ANR	3612537	FunctionDef	"GIDPool :: allocate (ProcFamily * family , gid_t & gid)"		3612536	0					
ANR	3612538	CompoundStatement		48:0:1483:1670	3612536	0					
ANR	3612539	ExpressionStatement	ASSERT ( m_allocating == true )	49:1:1486:1514	3612536	0	True				
ANR	3612540	CallExpression	ASSERT ( m_allocating == true )		3612536	0					
ANR	3612541	Callee	ASSERT		3612536	0					
ANR	3612542	Identifier	ASSERT		3612536	0					
ANR	3612543	ArgumentList	m_allocating == true		3612536	1					
ANR	3612544	Argument	m_allocating == true		3612536	0					
ANR	3612545	EqualityExpression	m_allocating == true		3612536	0		==			
ANR	3612546	Identifier	m_allocating		3612536	0					
ANR	3612547	Identifier	true		3612536	1					
ANR	3612548	ForStatement	for ( int i = 0 ; i < m_size ; i ++ )		3612536	1					
ANR	3612549	ForInit	int i = 0 ;	51:6:1523:1532	3612536	0	True				
ANR	3612550	IdentifierDeclStatement	int i = 0 ;		3612536	0					
ANR	3612551	IdentifierDecl	i = 0		3612536	0					
ANR	3612552	IdentifierDeclType	int		3612536	0					
ANR	3612553	Identifier	i		3612536	1					
ANR	3612554	AssignmentExpression	i = 0		3612536	2		=			
ANR	3612555	Identifier	i		3612536	0					
ANR	3612556	PrimaryExpression	0		3612536	1					
ANR	3612557	Condition	i < m_size	51:17:1534:1543	3612536	1	True				
ANR	3612558	RelationalExpression	i < m_size		3612536	0		<			
ANR	3612559	Identifier	i		3612536	0					
ANR	3612560	Identifier	m_size		3612536	1					
ANR	3612561	PostIncDecOperationExpression	i ++	51:29:1546:1548	3612536	2	True				
ANR	3612562	Identifier	i		3612536	0					
ANR	3612563	IncDec	++		3612536	1					
ANR	3612564	CompoundStatement		4:34:67:67	3612536	3					
ANR	3612565	IfStatement	if ( m_gid_map [ i ] == NULL )		3612536	0					
ANR	3612566	Condition	m_gid_map [ i ] == NULL	52:6:1559:1578	3612536	0	True				
ANR	3612567	EqualityExpression	m_gid_map [ i ] == NULL		3612536	0		==			
ANR	3612568	ArrayIndexing	m_gid_map [ i ]		3612536	0					
ANR	3612569	Identifier	m_gid_map		3612536	0					
ANR	3612570	Identifier	i		3612536	1					
ANR	3612571	Identifier	NULL		3612536	1					
ANR	3612572	CompoundStatement		5:28:97:97	3612536	1					
ANR	3612573	ExpressionStatement	m_gid_map [ i ] = family	53:3:1586:1607	3612536	0	True				
ANR	3612574	AssignmentExpression	m_gid_map [ i ] = family		3612536	0		=			
ANR	3612575	ArrayIndexing	m_gid_map [ i ]		3612536	0					
ANR	3612576	Identifier	m_gid_map		3612536	0					
ANR	3612577	Identifier	i		3612536	1					
ANR	3612578	Identifier	family		3612536	1					
ANR	3612579	ExpressionStatement	gid = m_offset + i	54:3:1612:1630	3612536	1	True				
ANR	3612580	AssignmentExpression	gid = m_offset + i		3612536	0		=			
ANR	3612581	Identifier	gid		3612536	0					
ANR	3612582	AdditiveExpression	m_offset + i		3612536	1		+			
ANR	3612583	Identifier	m_offset		3612536	0					
ANR	3612584	Identifier	i		3612536	1					
ANR	3612585	ReturnStatement	return true ;	55:3:1635:1646	3612536	2	True				
ANR	3612586	Identifier	true		3612536	0					
ANR	3612587	ReturnStatement	return false ;	58:1:1656:1668	3612536	2	True				
ANR	3612588	Identifier	false		3612536	0					
ANR	3612589	ReturnType	bool		3612536	1					
ANR	3612590	Identifier	GIDPool :: allocate		3612536	2					
ANR	3612591	ParameterList	"ProcFamily * family , gid_t & gid"		3612536	3					
ANR	3612592	Parameter	ProcFamily * family	47:18:1451:1468	3612536	0	True				
ANR	3612593	ParameterType	ProcFamily *		3612536	0					
ANR	3612594	Identifier	family		3612536	1					
ANR	3612595	Parameter	gid_t & gid	47:38:1471:1480	3612536	1	True				
ANR	3612596	ParameterType	gid_t &		3612536	0					
ANR	3612597	Identifier	gid		3612536	1					
ANR	3612598	CFGEntryNode	ENTRY		3612536		True				
ANR	3612599	CFGExitNode	EXIT		3612536		True				
ANR	3612600	Symbol	m_gid_map		3612536						
ANR	3612601	Symbol	m_offset		3612536						
ANR	3612602	Symbol	gid		3612536						
ANR	3612603	Symbol	m_size		3612536						
ANR	3612604	Symbol	* i		3612536						
ANR	3612605	Symbol	NULL		3612536						
ANR	3612606	Symbol	* m_gid_map		3612536						
ANR	3612607	Symbol	m_allocating		3612536						
ANR	3612608	Symbol	true		3612536						
ANR	3612609	Symbol	false		3612536						
ANR	3612610	Symbol	i		3612536						
ANR	3612611	Symbol	family		3612536						
ANR	3612612	Function	GIDPool :: associate	64:0:1854:2130							
ANR	3612613	FunctionDef	"GIDPool :: associate (ProcFamily * family , gid_t gid)"		3612612	0					
ANR	3612614	CompoundStatement		66:0:1909:2130	3612612	0					
ANR	3612615	ExpressionStatement	ASSERT ( m_allocating == false )	67:1:1912:1941	3612612	0	True				
ANR	3612616	CallExpression	ASSERT ( m_allocating == false )		3612612	0					
ANR	3612617	Callee	ASSERT		3612612	0					
ANR	3612618	Identifier	ASSERT		3612612	0					
ANR	3612619	ArgumentList	m_allocating == false		3612612	1					
ANR	3612620	Argument	m_allocating == false		3612612	0					
ANR	3612621	EqualityExpression	m_allocating == false		3612612	0		==			
ANR	3612622	Identifier	m_allocating		3612612	0					
ANR	3612623	Identifier	false		3612612	1					
ANR	3612624	IdentifierDeclStatement	int index = gid - m_offset ;	69:1:1945:1971	3612612	1	True				
ANR	3612625	IdentifierDecl	index = gid - m_offset		3612612	0					
ANR	3612626	IdentifierDeclType	int		3612612	0					
ANR	3612627	Identifier	index		3612612	1					
ANR	3612628	AssignmentExpression	index = gid - m_offset		3612612	2		=			
ANR	3612629	Identifier	index		3612612	0					
ANR	3612630	AdditiveExpression	gid - m_offset		3612612	1		-			
ANR	3612631	Identifier	gid		3612612	0					
ANR	3612632	Identifier	m_offset		3612612	1					
ANR	3612633	IfStatement	if ( ( index < 0 ) || ( index >= m_size ) )		3612612	2					
ANR	3612634	Condition	( index < 0 ) || ( index >= m_size )	71:5:1979:2010	3612612	0	True				
ANR	3612635	OrExpression	( index < 0 ) || ( index >= m_size )		3612612	0		||			
ANR	3612636	RelationalExpression	index < 0		3612612	0		<			
ANR	3612637	Identifier	index		3612612	0					
ANR	3612638	PrimaryExpression	0		3612612	1					
ANR	3612639	RelationalExpression	index >= m_size		3612612	1		>=			
ANR	3612640	Identifier	index		3612612	0					
ANR	3612641	Identifier	m_size		3612612	1					
ANR	3612642	CompoundStatement		6:39:103:103	3612612	1					
ANR	3612643	ReturnStatement	return false ;	72:2:2017:2029	3612612	0	True				
ANR	3612644	Identifier	false		3612612	0					
ANR	3612645	IfStatement	if ( m_gid_map [ index ] != NULL )		3612612	3					
ANR	3612646	Condition	m_gid_map [ index ] != NULL	75:5:2040:2063	3612612	0	True				
ANR	3612647	EqualityExpression	m_gid_map [ index ] != NULL		3612612	0		!=			
ANR	3612648	ArrayIndexing	m_gid_map [ index ]		3612612	0					
ANR	3612649	Identifier	m_gid_map		3612612	0					
ANR	3612650	Identifier	index		3612612	1					
ANR	3612651	Identifier	NULL		3612612	1					
ANR	3612652	CompoundStatement		10:31:156:156	3612612	1					
ANR	3612653	ReturnStatement	return false ;	76:2:2070:2082	3612612	0	True				
ANR	3612654	Identifier	false		3612612	0					
ANR	3612655	ExpressionStatement	m_gid_map [ index ] = family	79:1:2089:2114	3612612	4	True				
ANR	3612656	AssignmentExpression	m_gid_map [ index ] = family		3612612	0		=			
ANR	3612657	ArrayIndexing	m_gid_map [ index ]		3612612	0					
ANR	3612658	Identifier	m_gid_map		3612612	0					
ANR	3612659	Identifier	index		3612612	1					
ANR	3612660	Identifier	family		3612612	1					
ANR	3612661	ReturnStatement	return true ;	80:1:2117:2128	3612612	5	True				
ANR	3612662	Identifier	true		3612612	0					
ANR	3612663	ReturnType	bool		3612612	1					
ANR	3612664	Identifier	GIDPool :: associate		3612612	2					
ANR	3612665	ParameterList	"ProcFamily * family , gid_t gid"		3612612	3					
ANR	3612666	Parameter	ProcFamily * family	65:19:1878:1895	3612612	0	True				
ANR	3612667	ParameterType	ProcFamily *		3612612	0					
ANR	3612668	Identifier	family		3612612	1					
ANR	3612669	Parameter	gid_t gid	65:39:1898:1906	3612612	1	True				
ANR	3612670	ParameterType	gid_t		3612612	0					
ANR	3612671	Identifier	gid		3612612	1					
ANR	3612672	CFGEntryNode	ENTRY		3612612		True				
ANR	3612673	CFGExitNode	EXIT		3612612		True				
ANR	3612674	Symbol	m_offset		3612612						
ANR	3612675	Symbol	m_gid_map		3612612						
ANR	3612676	Symbol	gid		3612612						
ANR	3612677	Symbol	m_size		3612612						
ANR	3612678	Symbol	NULL		3612612						
ANR	3612679	Symbol	* m_gid_map		3612612						
ANR	3612680	Symbol	* index		3612612						
ANR	3612681	Symbol	false		3612612						
ANR	3612682	Symbol	m_allocating		3612612						
ANR	3612683	Symbol	true		3612612						
ANR	3612684	Symbol	index		3612612						
ANR	3612685	Symbol	family		3612612						
ANR	3612686	Function	GIDPool :: free	83:0:2133:2304							
ANR	3612687	FunctionDef	GIDPool :: free (ProcFamily * family)		3612686	0					
ANR	3612688	CompoundStatement		85:0:2172:2304	3612686	0					
ANR	3612689	ForStatement	for ( int i = 0 ; i < m_size ; i ++ )		3612686	0					
ANR	3612690	ForInit	int i = 0 ;	86:6:2180:2189	3612686	0	True				
ANR	3612691	IdentifierDeclStatement	int i = 0 ;		3612686	0					
ANR	3612692	IdentifierDecl	i = 0		3612686	0					
ANR	3612693	IdentifierDeclType	int		3612686	0					
ANR	3612694	Identifier	i		3612686	1					
ANR	3612695	AssignmentExpression	i = 0		3612686	2		=			
ANR	3612696	Identifier	i		3612686	0					
ANR	3612697	PrimaryExpression	0		3612686	1					
ANR	3612698	Condition	i < m_size	86:17:2191:2200	3612686	1	True				
ANR	3612699	RelationalExpression	i < m_size		3612686	0		<			
ANR	3612700	Identifier	i		3612686	0					
ANR	3612701	Identifier	m_size		3612686	1					
ANR	3612702	PostIncDecOperationExpression	i ++	86:29:2203:2205	3612686	2	True				
ANR	3612703	Identifier	i		3612686	0					
ANR	3612704	IncDec	++		3612686	1					
ANR	3612705	CompoundStatement		2:34:35:35	3612686	3					
ANR	3612706	IfStatement	if ( m_gid_map [ i ] == family )		3612686	0					
ANR	3612707	Condition	m_gid_map [ i ] == family	87:6:2216:2237	3612686	0	True				
ANR	3612708	EqualityExpression	m_gid_map [ i ] == family		3612686	0		==			
ANR	3612709	ArrayIndexing	m_gid_map [ i ]		3612686	0					
ANR	3612710	Identifier	m_gid_map		3612686	0					
ANR	3612711	Identifier	i		3612686	1					
ANR	3612712	Identifier	family		3612686	1					
ANR	3612713	CompoundStatement		3:30:67:67	3612686	1					
ANR	3612714	ExpressionStatement	m_gid_map [ i ] = NULL	88:3:2245:2264	3612686	0	True				
ANR	3612715	AssignmentExpression	m_gid_map [ i ] = NULL		3612686	0		=			
ANR	3612716	ArrayIndexing	m_gid_map [ i ]		3612686	0					
ANR	3612717	Identifier	m_gid_map		3612686	0					
ANR	3612718	Identifier	i		3612686	1					
ANR	3612719	Identifier	NULL		3612686	1					
ANR	3612720	ReturnStatement	return true ;	89:3:2269:2280	3612686	1	True				
ANR	3612721	Identifier	true		3612686	0					
ANR	3612722	ReturnStatement	return false ;	92:1:2290:2302	3612686	1	True				
ANR	3612723	Identifier	false		3612686	0					
ANR	3612724	ReturnType	bool		3612686	1					
ANR	3612725	Identifier	GIDPool :: free		3612686	2					
ANR	3612726	ParameterList	ProcFamily * family		3612686	3					
ANR	3612727	Parameter	ProcFamily * family	84:14:2152:2169	3612686	0	True				
ANR	3612728	ParameterType	ProcFamily *		3612686	0					
ANR	3612729	Identifier	family		3612686	1					
ANR	3612730	CFGEntryNode	ENTRY		3612686		True				
ANR	3612731	CFGExitNode	EXIT		3612686		True				
ANR	3612732	Symbol	m_gid_map		3612686						
ANR	3612733	Symbol	m_size		3612686						
ANR	3612734	Symbol	* i		3612686						
ANR	3612735	Symbol	NULL		3612686						
ANR	3612736	Symbol	* m_gid_map		3612686						
ANR	3612737	Symbol	true		3612686						
ANR	3612738	Symbol	false		3612686						
ANR	3612739	Symbol	i		3612686						
ANR	3612740	Symbol	family		3612686						
ANR	3612741	Function	GIDPool :: get_family	95:0:2307:2466							
ANR	3612742	FunctionDef	GIDPool :: get_family (gid_t gid)		3612741	0					
ANR	3612743	CompoundStatement		97:0:2350:2466	3612741	0					
ANR	3612744	IdentifierDeclStatement	int index = gid - m_offset ;	98:1:2353:2379	3612741	0	True				
ANR	3612745	IdentifierDecl	index = gid - m_offset		3612741	0					
ANR	3612746	IdentifierDeclType	int		3612741	0					
ANR	3612747	Identifier	index		3612741	1					
ANR	3612748	AssignmentExpression	index = gid - m_offset		3612741	2		=			
ANR	3612749	Identifier	index		3612741	0					
ANR	3612750	AdditiveExpression	gid - m_offset		3612741	1		-			
ANR	3612751	Identifier	gid		3612741	0					
ANR	3612752	Identifier	m_offset		3612741	1					
ANR	3612753	IfStatement	if ( ( index < 0 ) || ( index >= m_size ) )		3612741	1					
ANR	3612754	Condition	( index < 0 ) || ( index >= m_size )	99:5:2386:2417	3612741	0	True				
ANR	3612755	OrExpression	( index < 0 ) || ( index >= m_size )		3612741	0		||			
ANR	3612756	RelationalExpression	index < 0		3612741	0		<			
ANR	3612757	Identifier	index		3612741	0					
ANR	3612758	PrimaryExpression	0		3612741	1					
ANR	3612759	RelationalExpression	index >= m_size		3612741	1		>=			
ANR	3612760	Identifier	index		3612741	0					
ANR	3612761	Identifier	m_size		3612741	1					
ANR	3612762	CompoundStatement		3:39:69:69	3612741	1					
ANR	3612763	ReturnStatement	return NULL ;	100:2:2424:2435	3612741	0	True				
ANR	3612764	Identifier	NULL		3612741	0					
ANR	3612765	ReturnStatement	return m_gid_map [ index ] ;	102:1:2441:2464	3612741	2	True				
ANR	3612766	ArrayIndexing	m_gid_map [ index ]		3612741	0					
ANR	3612767	Identifier	m_gid_map		3612741	0					
ANR	3612768	Identifier	index		3612741	1					
ANR	3612769	ReturnType	ProcFamily *		3612741	1					
ANR	3612770	Identifier	GIDPool :: get_family		3612741	2					
ANR	3612771	ParameterList	gid_t gid		3612741	3					
ANR	3612772	Parameter	gid_t gid	96:20:2339:2347	3612741	0	True				
ANR	3612773	ParameterType	gid_t		3612741	0					
ANR	3612774	Identifier	gid		3612741	1					
ANR	3612775	CFGEntryNode	ENTRY		3612741		True				
ANR	3612776	CFGExitNode	EXIT		3612741		True				
ANR	3612777	Symbol	m_offset		3612741						
ANR	3612778	Symbol	m_gid_map		3612741						
ANR	3612779	Symbol	gid		3612741						
ANR	3612780	Symbol	m_size		3612741						
ANR	3612781	Symbol	NULL		3612741						
ANR	3612782	Symbol	* m_gid_map		3612741						
ANR	3612783	Symbol	* index		3612741						
ANR	3612784	Symbol	index		3612741						
