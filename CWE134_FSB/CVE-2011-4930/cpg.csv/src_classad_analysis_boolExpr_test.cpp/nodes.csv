command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2465206	File	data/converged/CVE-2011-4930_htcondor/src_classad_analysis_boolExpr_test.cpp								
ANR	2465207	DeclStmt									
ANR	2465208	Decl							bool	"bool ( Operation :: OpKind , string & )"	GetOpName
ANR	2465209	DeclStmt									
ANR	2465210	Decl							bool	"bool ( Value :: ValueType , string & )"	GetTypeName
ANR	2465211	Function	main	27:0:971:2488							
ANR	2465212	FunctionDef	main ()		2465211	0					
ANR	2465213	CompoundStatement		27:12:983:2488	2465211	0					
ANR	2465214	IdentifierDeclStatement	PrettyPrint pp ;	28:1:986:1000	2465211	0	True				
ANR	2465215	IdentifierDecl	pp		2465211	0					
ANR	2465216	IdentifierDeclType	PrettyPrint		2465211	0					
ANR	2465217	Identifier	pp		2465211	1					
ANR	2465218	IdentifierDeclStatement	ClassAdParser parser ;	29:1:1003:1023	2465211	1	True				
ANR	2465219	IdentifierDecl	parser		2465211	0					
ANR	2465220	IdentifierDeclType	ClassAdParser		2465211	0					
ANR	2465221	Identifier	parser		2465211	1					
ANR	2465222	IdentifierDeclStatement	"string buffer = """" ;"	30:1:1026:1044	2465211	2	True				
ANR	2465223	IdentifierDecl	"buffer = """""		2465211	0					
ANR	2465224	IdentifierDeclType	string		2465211	0					
ANR	2465225	Identifier	buffer		2465211	1					
ANR	2465226	AssignmentExpression	"buffer = """""		2465211	2		=			
ANR	2465227	Identifier	buffer		2465211	0					
ANR	2465228	PrimaryExpression	""""""		2465211	1					
ANR	2465229	IdentifierDeclStatement	"string condString = ""( ( MemoryRequirements < 234 ) || ( MemoryRequirements =?= undefined ) )"" ;"	31:1:1047:1141	2465211	3	True				
ANR	2465230	IdentifierDecl	"condString = ""( ( MemoryRequirements < 234 ) || ( MemoryRequirements =?= undefined ) )"""		2465211	0					
ANR	2465231	IdentifierDeclType	string		2465211	0					
ANR	2465232	Identifier	condString		2465211	1					
ANR	2465233	AssignmentExpression	"condString = ""( ( MemoryRequirements < 234 ) || ( MemoryRequirements =?= undefined ) )"""		2465211	2		=			
ANR	2465234	Identifier	condString		2465211	0					
ANR	2465235	PrimaryExpression	"""( ( MemoryRequirements < 234 ) || ( MemoryRequirements =?= undefined ) )"""		2465211	1					
ANR	2465236	ExpressionStatement	"cout << ""-------------"" << endl"	33:1:1145:1176	2465211	4	True				
ANR	2465237	ShiftExpression	"cout << ""-------------"" << endl"		2465211	0		<<			
ANR	2465238	Identifier	cout		2465211	0					
ANR	2465239	ShiftExpression	"""-------------"" << endl"		2465211	1		<<			
ANR	2465240	PrimaryExpression	"""-------------"""		2465211	0					
ANR	2465241	Identifier	endl		2465211	1					
ANR	2465242	ExpressionStatement	"cout << ""BOOLEXPR TEST"" << endl"	34:1:1179:1210	2465211	5	True				
ANR	2465243	ShiftExpression	"cout << ""BOOLEXPR TEST"" << endl"		2465211	0		<<			
ANR	2465244	Identifier	cout		2465211	0					
ANR	2465245	ShiftExpression	"""BOOLEXPR TEST"" << endl"		2465211	1		<<			
ANR	2465246	PrimaryExpression	"""BOOLEXPR TEST"""		2465211	0					
ANR	2465247	Identifier	endl		2465211	1					
ANR	2465248	ExpressionStatement	"cout << ""-------------"" << endl"	35:1:1213:1244	2465211	6	True				
ANR	2465249	ShiftExpression	"cout << ""-------------"" << endl"		2465211	0		<<			
ANR	2465250	Identifier	cout		2465211	0					
ANR	2465251	ShiftExpression	"""-------------"" << endl"		2465211	1		<<			
ANR	2465252	PrimaryExpression	"""-------------"""		2465211	0					
ANR	2465253	Identifier	endl		2465211	1					
ANR	2465254	ExpressionStatement	"cout << ""condString = "" << condString << endl"	36:1:1247:1292	2465211	7	True				
ANR	2465255	ShiftExpression	"cout << ""condString = "" << condString << endl"		2465211	0		<<			
ANR	2465256	Identifier	cout		2465211	0					
ANR	2465257	ShiftExpression	"""condString = "" << condString << endl"		2465211	1		<<			
ANR	2465258	PrimaryExpression	"""condString = """		2465211	0					
ANR	2465259	ShiftExpression	condString << endl		2465211	1		<<			
ANR	2465260	Identifier	condString		2465211	0					
ANR	2465261	Identifier	endl		2465211	1					
ANR	2465262	ExpressionStatement	cout << endl	37:1:1295:1307	2465211	8	True				
ANR	2465263	ShiftExpression	cout << endl		2465211	0		<<			
ANR	2465264	Identifier	cout		2465211	0					
ANR	2465265	Identifier	endl		2465211	1					
ANR	2465266	IdentifierDeclStatement	ExprTree * condTree = NULL ;	39:1:1311:1336	2465211	9	True				
ANR	2465267	IdentifierDecl	* condTree = NULL		2465211	0					
ANR	2465268	IdentifierDeclType	ExprTree *		2465211	0					
ANR	2465269	Identifier	condTree		2465211	1					
ANR	2465270	AssignmentExpression	* condTree = NULL		2465211	2		=			
ANR	2465271	Identifier	NULL		2465211	0					
ANR	2465272	Identifier	NULL		2465211	1					
ANR	2465273	IfStatement	if ( ! ( condTree = parser . ParseExpression ( condString ) ) )		2465211	10					
ANR	2465274	Condition	! ( condTree = parser . ParseExpression ( condString ) )	40:5:1343:1395	2465211	0	True				
ANR	2465275	UnaryOperationExpression	! ( condTree = parser . ParseExpression ( condString ) )		2465211	0					
ANR	2465276	UnaryOperator	!		2465211	0					
ANR	2465277	AssignmentExpression	condTree = parser . ParseExpression ( condString )		2465211	1		=			
ANR	2465278	Identifier	condTree		2465211	0					
ANR	2465279	CallExpression	parser . ParseExpression ( condString )		2465211	1					
ANR	2465280	Callee	parser . ParseExpression		2465211	0					
ANR	2465281	MemberAccess	parser . ParseExpression		2465211	0					
ANR	2465282	Identifier	parser		2465211	0					
ANR	2465283	Identifier	ParseExpression		2465211	1					
ANR	2465284	ArgumentList	condString		2465211	1					
ANR	2465285	Argument	condString		2465211	0					
ANR	2465286	Identifier	condString		2465211	0					
ANR	2465287	CompoundStatement		14:61:415:415	2465211	1					
ANR	2465288	ExpressionStatement	"cerr << ""error parsing expression"" << endl"	41:2:1403:1445	2465211	0	True				
ANR	2465289	ShiftExpression	"cerr << ""error parsing expression"" << endl"		2465211	0		<<			
ANR	2465290	Identifier	cerr		2465211	0					
ANR	2465291	ShiftExpression	"""error parsing expression"" << endl"		2465211	1		<<			
ANR	2465292	PrimaryExpression	"""error parsing expression"""		2465211	0					
ANR	2465293	Identifier	endl		2465211	1					
ANR	2465294	IdentifierDeclStatement	Condition * cond = new Condition ( ) ;	44:1:1452:1486	2465211	11	True				
ANR	2465295	IdentifierDecl	* cond = new Condition ( )		2465211	0					
ANR	2465296	IdentifierDeclType	Condition *		2465211	0					
ANR	2465297	Identifier	cond		2465211	1					
ANR	2465298	AssignmentExpression	* cond = new Condition ( )		2465211	2		=			
ANR	2465299	Identifier	cond		2465211	0					
ANR	2465300	UnaryExpression	new Condition ( )		2465211	1					
ANR	2465301	IfStatement	"if ( ! ( BoolExpr :: ExprToCondition ( condTree , cond ) ) )"		2465211	12					
ANR	2465302	Condition	"! ( BoolExpr :: ExprToCondition ( condTree , cond ) )"	45:5:1493:1540	2465211	0	True				
ANR	2465303	UnaryOperationExpression	"! ( BoolExpr :: ExprToCondition ( condTree , cond ) )"		2465211	0					
ANR	2465304	UnaryOperator	!		2465211	0					
ANR	2465305	CallExpression	"BoolExpr :: ExprToCondition ( condTree , cond )"		2465211	1					
ANR	2465306	Callee	BoolExpr :: ExprToCondition		2465211	0					
ANR	2465307	Identifier	BoolExpr :: ExprToCondition		2465211	0					
ANR	2465308	ArgumentList	condTree		2465211	1					
ANR	2465309	Argument	condTree		2465211	0					
ANR	2465310	Identifier	condTree		2465211	0					
ANR	2465311	Argument	cond		2465211	1					
ANR	2465312	Identifier	cond		2465211	0					
ANR	2465313	CompoundStatement		19:56:560:560	2465211	1					
ANR	2465314	ExpressionStatement	"cerr << ""error with ExprToCondition"" << endl"	46:2:1548:1592	2465211	0	True				
ANR	2465315	ShiftExpression	"cerr << ""error with ExprToCondition"" << endl"		2465211	0		<<			
ANR	2465316	Identifier	cerr		2465211	0					
ANR	2465317	ShiftExpression	"""error with ExprToCondition"" << endl"		2465211	1		<<			
ANR	2465318	PrimaryExpression	"""error with ExprToCondition"""		2465211	0					
ANR	2465319	Identifier	endl		2465211	1					
ANR	2465320	ExpressionStatement	cond -> ToString ( buffer )	49:1:1599:1623	2465211	13	True				
ANR	2465321	CallExpression	cond -> ToString ( buffer )		2465211	0					
ANR	2465322	Callee	cond -> ToString		2465211	0					
ANR	2465323	PtrMemberAccess	cond -> ToString		2465211	0					
ANR	2465324	Identifier	cond		2465211	0					
ANR	2465325	Identifier	ToString		2465211	1					
ANR	2465326	ArgumentList	buffer		2465211	1					
ANR	2465327	Argument	buffer		2465211	0					
ANR	2465328	Identifier	buffer		2465211	0					
ANR	2465329	ExpressionStatement	"cout << ""cond.ToString( ) = "" << buffer << endl"	50:1:1626:1673	2465211	14	True				
ANR	2465330	ShiftExpression	"cout << ""cond.ToString( ) = "" << buffer << endl"		2465211	0		<<			
ANR	2465331	Identifier	cout		2465211	0					
ANR	2465332	ShiftExpression	"""cond.ToString( ) = "" << buffer << endl"		2465211	1		<<			
ANR	2465333	PrimaryExpression	"""cond.ToString( ) = """		2465211	0					
ANR	2465334	ShiftExpression	buffer << endl		2465211	1		<<			
ANR	2465335	Identifier	buffer		2465211	0					
ANR	2465336	Identifier	endl		2465211	1					
ANR	2465337	ExpressionStatement	"buffer = """""	51:1:1676:1687	2465211	15	True				
ANR	2465338	AssignmentExpression	"buffer = """""		2465211	0		=			
ANR	2465339	Identifier	buffer		2465211	0					
ANR	2465340	PrimaryExpression	""""""		2465211	1					
ANR	2465341	ExpressionStatement	cout << endl	52:1:1690:1702	2465211	16	True				
ANR	2465342	ShiftExpression	cout << endl		2465211	0		<<			
ANR	2465343	Identifier	cout		2465211	0					
ANR	2465344	Identifier	endl		2465211	1					
ANR	2465345	IdentifierDeclStatement	string attr ;	54:1:1706:1717	2465211	17	True				
ANR	2465346	IdentifierDecl	attr		2465211	0					
ANR	2465347	IdentifierDeclType	string		2465211	0					
ANR	2465348	Identifier	attr		2465211	1					
ANR	2465349	IdentifierDeclStatement	Operation :: OpKind op1 = Operation :: __NO_OP__ ;	55:1:1720:1764	2465211	18	True				
ANR	2465350	IdentifierDecl	op1 = Operation :: __NO_OP__		2465211	0					
ANR	2465351	IdentifierDeclType	Operation :: OpKind		2465211	0					
ANR	2465352	Identifier	op1		2465211	1					
ANR	2465353	AssignmentExpression	op1 = Operation :: __NO_OP__		2465211	2		=			
ANR	2465354	Identifier	Operation :: __NO_OP__		2465211	0					
ANR	2465355	Identifier	Operation :: __NO_OP__		2465211	1					
ANR	2465356	IdentifierDeclStatement	Operation :: OpKind op2 = Operation :: __NO_OP__ ;	56:1:1767:1811	2465211	19	True				
ANR	2465357	IdentifierDecl	op2 = Operation :: __NO_OP__		2465211	0					
ANR	2465358	IdentifierDeclType	Operation :: OpKind		2465211	0					
ANR	2465359	Identifier	op2		2465211	1					
ANR	2465360	AssignmentExpression	op2 = Operation :: __NO_OP__		2465211	2		=			
ANR	2465361	Identifier	Operation :: __NO_OP__		2465211	0					
ANR	2465362	Identifier	Operation :: __NO_OP__		2465211	1					
ANR	2465363	IdentifierDeclStatement	"Value val1 , val2 ;"	57:1:1814:1830	2465211	20	True				
ANR	2465364	IdentifierDecl	val1		2465211	0					
ANR	2465365	IdentifierDeclType	Value		2465211	0					
ANR	2465366	Identifier	val1		2465211	1					
ANR	2465367	IdentifierDecl	val2		2465211	1					
ANR	2465368	IdentifierDeclType	Value		2465211	0					
ANR	2465369	Identifier	val2		2465211	1					
ANR	2465370	IdentifierDeclStatement	Value :: ValueType type ;	58:1:1833:1854	2465211	21	True				
ANR	2465371	IdentifierDecl	type		2465211	0					
ANR	2465372	IdentifierDeclType	Value :: ValueType		2465211	0					
ANR	2465373	Identifier	type		2465211	1					
ANR	2465374	ExpressionStatement	cond -> GetAttr ( attr )	60:1:1858:1879	2465211	22	True				
ANR	2465375	CallExpression	cond -> GetAttr ( attr )		2465211	0					
ANR	2465376	Callee	cond -> GetAttr		2465211	0					
ANR	2465377	PtrMemberAccess	cond -> GetAttr		2465211	0					
ANR	2465378	Identifier	cond		2465211	0					
ANR	2465379	Identifier	GetAttr		2465211	1					
ANR	2465380	ArgumentList	attr		2465211	1					
ANR	2465381	Argument	attr		2465211	0					
ANR	2465382	Identifier	attr		2465211	0					
ANR	2465383	ExpressionStatement	"cout << ""attr = "" << attr << endl"	61:1:1882:1915	2465211	23	True				
ANR	2465384	ShiftExpression	"cout << ""attr = "" << attr << endl"		2465211	0		<<			
ANR	2465385	Identifier	cout		2465211	0					
ANR	2465386	ShiftExpression	"""attr = "" << attr << endl"		2465211	1		<<			
ANR	2465387	PrimaryExpression	"""attr = """		2465211	0					
ANR	2465388	ShiftExpression	attr << endl		2465211	1		<<			
ANR	2465389	Identifier	attr		2465211	0					
ANR	2465390	Identifier	endl		2465211	1					
ANR	2465391	ExpressionStatement	cond -> GetOp ( op1 )	63:1:1919:1937	2465211	24	True				
ANR	2465392	CallExpression	cond -> GetOp ( op1 )		2465211	0					
ANR	2465393	Callee	cond -> GetOp		2465211	0					
ANR	2465394	PtrMemberAccess	cond -> GetOp		2465211	0					
ANR	2465395	Identifier	cond		2465211	0					
ANR	2465396	Identifier	GetOp		2465211	1					
ANR	2465397	ArgumentList	op1		2465211	1					
ANR	2465398	Argument	op1		2465211	0					
ANR	2465399	Identifier	op1		2465211	0					
ANR	2465400	ExpressionStatement	"GetOpName ( op1 , buffer )"	64:1:1940:1964	2465211	25	True				
ANR	2465401	CallExpression	"GetOpName ( op1 , buffer )"		2465211	0					
ANR	2465402	Callee	GetOpName		2465211	0					
ANR	2465403	Identifier	GetOpName		2465211	0					
ANR	2465404	ArgumentList	op1		2465211	1					
ANR	2465405	Argument	op1		2465211	0					
ANR	2465406	Identifier	op1		2465211	0					
ANR	2465407	Argument	buffer		2465211	1					
ANR	2465408	Identifier	buffer		2465211	0					
ANR	2465409	ExpressionStatement	"cout << ""op1 = "" << buffer << endl"	65:1:1967:2001	2465211	26	True				
ANR	2465410	ShiftExpression	"cout << ""op1 = "" << buffer << endl"		2465211	0		<<			
ANR	2465411	Identifier	cout		2465211	0					
ANR	2465412	ShiftExpression	"""op1 = "" << buffer << endl"		2465211	1		<<			
ANR	2465413	PrimaryExpression	"""op1 = """		2465211	0					
ANR	2465414	ShiftExpression	buffer << endl		2465211	1		<<			
ANR	2465415	Identifier	buffer		2465211	0					
ANR	2465416	Identifier	endl		2465211	1					
ANR	2465417	ExpressionStatement	"cout << ""op1 is op number "" << ( int ) op1 << endl"	66:1:2004:2051	2465211	27	True				
ANR	2465418	ShiftExpression	"cout << ""op1 is op number "" << ( int ) op1 << endl"		2465211	0		<<			
ANR	2465419	Identifier	cout		2465211	0					
ANR	2465420	ShiftExpression	"""op1 is op number "" << ( int ) op1 << endl"		2465211	1		<<			
ANR	2465421	PrimaryExpression	"""op1 is op number """		2465211	0					
ANR	2465422	ShiftExpression	( int ) op1 << endl		2465211	1		<<			
ANR	2465423	CastExpression	( int ) op1		2465211	0					
ANR	2465424	CastTarget	int		2465211	0					
ANR	2465425	Identifier	op1		2465211	1					
ANR	2465426	Identifier	endl		2465211	1					
ANR	2465427	ExpressionStatement	"buffer = """""	67:1:2054:2065	2465211	28	True				
ANR	2465428	AssignmentExpression	"buffer = """""		2465211	0		=			
ANR	2465429	Identifier	buffer		2465211	0					
ANR	2465430	PrimaryExpression	""""""		2465211	1					
ANR	2465431	ExpressionStatement	cond -> GetOp2 ( op2 )	69:1:2069:2088	2465211	29	True				
ANR	2465432	CallExpression	cond -> GetOp2 ( op2 )		2465211	0					
ANR	2465433	Callee	cond -> GetOp2		2465211	0					
ANR	2465434	PtrMemberAccess	cond -> GetOp2		2465211	0					
ANR	2465435	Identifier	cond		2465211	0					
ANR	2465436	Identifier	GetOp2		2465211	1					
ANR	2465437	ArgumentList	op2		2465211	1					
ANR	2465438	Argument	op2		2465211	0					
ANR	2465439	Identifier	op2		2465211	0					
ANR	2465440	ExpressionStatement	"GetOpName ( op2 , buffer )"	70:1:2091:2115	2465211	30	True				
ANR	2465441	CallExpression	"GetOpName ( op2 , buffer )"		2465211	0					
ANR	2465442	Callee	GetOpName		2465211	0					
ANR	2465443	Identifier	GetOpName		2465211	0					
ANR	2465444	ArgumentList	op2		2465211	1					
ANR	2465445	Argument	op2		2465211	0					
ANR	2465446	Identifier	op2		2465211	0					
ANR	2465447	Argument	buffer		2465211	1					
ANR	2465448	Identifier	buffer		2465211	0					
ANR	2465449	ExpressionStatement	"cout << ""op2 = "" << buffer << endl"	71:1:2118:2152	2465211	31	True				
ANR	2465450	ShiftExpression	"cout << ""op2 = "" << buffer << endl"		2465211	0		<<			
ANR	2465451	Identifier	cout		2465211	0					
ANR	2465452	ShiftExpression	"""op2 = "" << buffer << endl"		2465211	1		<<			
ANR	2465453	PrimaryExpression	"""op2 = """		2465211	0					
ANR	2465454	ShiftExpression	buffer << endl		2465211	1		<<			
ANR	2465455	Identifier	buffer		2465211	0					
ANR	2465456	Identifier	endl		2465211	1					
ANR	2465457	ExpressionStatement	"buffer = """""	72:1:2155:2166	2465211	32	True				
ANR	2465458	AssignmentExpression	"buffer = """""		2465211	0		=			
ANR	2465459	Identifier	buffer		2465211	0					
ANR	2465460	PrimaryExpression	""""""		2465211	1					
ANR	2465461	ExpressionStatement	cond -> GetVal ( val1 )	74:1:2170:2190	2465211	33	True				
ANR	2465462	CallExpression	cond -> GetVal ( val1 )		2465211	0					
ANR	2465463	Callee	cond -> GetVal		2465211	0					
ANR	2465464	PtrMemberAccess	cond -> GetVal		2465211	0					
ANR	2465465	Identifier	cond		2465211	0					
ANR	2465466	Identifier	GetVal		2465211	1					
ANR	2465467	ArgumentList	val1		2465211	1					
ANR	2465468	Argument	val1		2465211	0					
ANR	2465469	Identifier	val1		2465211	0					
ANR	2465470	ExpressionStatement	"pp . Unparse ( buffer , val1 )"	75:1:2193:2219	2465211	34	True				
ANR	2465471	CallExpression	"pp . Unparse ( buffer , val1 )"		2465211	0					
ANR	2465472	Callee	pp . Unparse		2465211	0					
ANR	2465473	MemberAccess	pp . Unparse		2465211	0					
ANR	2465474	Identifier	pp		2465211	0					
ANR	2465475	Identifier	Unparse		2465211	1					
ANR	2465476	ArgumentList	buffer		2465211	1					
ANR	2465477	Argument	buffer		2465211	0					
ANR	2465478	Identifier	buffer		2465211	0					
ANR	2465479	Argument	val1		2465211	1					
ANR	2465480	Identifier	val1		2465211	0					
ANR	2465481	ExpressionStatement	"cout << ""val1 = "" << buffer << endl"	76:1:2222:2257	2465211	35	True				
ANR	2465482	ShiftExpression	"cout << ""val1 = "" << buffer << endl"		2465211	0		<<			
ANR	2465483	Identifier	cout		2465211	0					
ANR	2465484	ShiftExpression	"""val1 = "" << buffer << endl"		2465211	1		<<			
ANR	2465485	PrimaryExpression	"""val1 = """		2465211	0					
ANR	2465486	ShiftExpression	buffer << endl		2465211	1		<<			
ANR	2465487	Identifier	buffer		2465211	0					
ANR	2465488	Identifier	endl		2465211	1					
ANR	2465489	ExpressionStatement	"buffer = """""	77:1:2260:2271	2465211	36	True				
ANR	2465490	AssignmentExpression	"buffer = """""		2465211	0		=			
ANR	2465491	Identifier	buffer		2465211	0					
ANR	2465492	PrimaryExpression	""""""		2465211	1					
ANR	2465493	ExpressionStatement	cond -> GetVal2 ( val2 )	79:1:2275:2296	2465211	37	True				
ANR	2465494	CallExpression	cond -> GetVal2 ( val2 )		2465211	0					
ANR	2465495	Callee	cond -> GetVal2		2465211	0					
ANR	2465496	PtrMemberAccess	cond -> GetVal2		2465211	0					
ANR	2465497	Identifier	cond		2465211	0					
ANR	2465498	Identifier	GetVal2		2465211	1					
ANR	2465499	ArgumentList	val2		2465211	1					
ANR	2465500	Argument	val2		2465211	0					
ANR	2465501	Identifier	val2		2465211	0					
ANR	2465502	ExpressionStatement	"pp . Unparse ( buffer , val2 )"	80:1:2299:2325	2465211	38	True				
ANR	2465503	CallExpression	"pp . Unparse ( buffer , val2 )"		2465211	0					
ANR	2465504	Callee	pp . Unparse		2465211	0					
ANR	2465505	MemberAccess	pp . Unparse		2465211	0					
ANR	2465506	Identifier	pp		2465211	0					
ANR	2465507	Identifier	Unparse		2465211	1					
ANR	2465508	ArgumentList	buffer		2465211	1					
ANR	2465509	Argument	buffer		2465211	0					
ANR	2465510	Identifier	buffer		2465211	0					
ANR	2465511	Argument	val2		2465211	1					
ANR	2465512	Identifier	val2		2465211	0					
ANR	2465513	ExpressionStatement	"cout << ""val2 = "" << buffer << endl"	81:1:2328:2363	2465211	39	True				
ANR	2465514	ShiftExpression	"cout << ""val2 = "" << buffer << endl"		2465211	0		<<			
ANR	2465515	Identifier	cout		2465211	0					
ANR	2465516	ShiftExpression	"""val2 = "" << buffer << endl"		2465211	1		<<			
ANR	2465517	PrimaryExpression	"""val2 = """		2465211	0					
ANR	2465518	ShiftExpression	buffer << endl		2465211	1		<<			
ANR	2465519	Identifier	buffer		2465211	0					
ANR	2465520	Identifier	endl		2465211	1					
ANR	2465521	ExpressionStatement	"buffer = """""	82:1:2366:2377	2465211	40	True				
ANR	2465522	AssignmentExpression	"buffer = """""		2465211	0		=			
ANR	2465523	Identifier	buffer		2465211	0					
ANR	2465524	PrimaryExpression	""""""		2465211	1					
ANR	2465525	ExpressionStatement	cond -> GetType ( type )	84:1:2381:2402	2465211	41	True				
ANR	2465526	CallExpression	cond -> GetType ( type )		2465211	0					
ANR	2465527	Callee	cond -> GetType		2465211	0					
ANR	2465528	PtrMemberAccess	cond -> GetType		2465211	0					
ANR	2465529	Identifier	cond		2465211	0					
ANR	2465530	Identifier	GetType		2465211	1					
ANR	2465531	ArgumentList	type		2465211	1					
ANR	2465532	Argument	type		2465211	0					
ANR	2465533	Identifier	type		2465211	0					
ANR	2465534	ExpressionStatement	"GetTypeName ( type , buffer )"	85:1:2405:2432	2465211	42	True				
ANR	2465535	CallExpression	"GetTypeName ( type , buffer )"		2465211	0					
ANR	2465536	Callee	GetTypeName		2465211	0					
ANR	2465537	Identifier	GetTypeName		2465211	0					
ANR	2465538	ArgumentList	type		2465211	1					
ANR	2465539	Argument	type		2465211	0					
ANR	2465540	Identifier	type		2465211	0					
ANR	2465541	Argument	buffer		2465211	1					
ANR	2465542	Identifier	buffer		2465211	0					
ANR	2465543	ExpressionStatement	"cout << ""type = "" << buffer << endl"	86:1:2435:2470	2465211	43	True				
ANR	2465544	ShiftExpression	"cout << ""type = "" << buffer << endl"		2465211	0		<<			
ANR	2465545	Identifier	cout		2465211	0					
ANR	2465546	ShiftExpression	"""type = "" << buffer << endl"		2465211	1		<<			
ANR	2465547	PrimaryExpression	"""type = """		2465211	0					
ANR	2465548	ShiftExpression	buffer << endl		2465211	1		<<			
ANR	2465549	Identifier	buffer		2465211	0					
ANR	2465550	Identifier	endl		2465211	1					
ANR	2465551	ExpressionStatement	"buffer = """""	87:1:2473:2484	2465211	44	True				
ANR	2465552	AssignmentExpression	"buffer = """""		2465211	0		=			
ANR	2465553	Identifier	buffer		2465211	0					
ANR	2465554	PrimaryExpression	""""""		2465211	1					
ANR	2465555	ReturnType	int		2465211	1					
ANR	2465556	Identifier	main		2465211	2					
ANR	2465557	ParameterList			2465211	3					
ANR	2465558	CFGEntryNode	ENTRY		2465211		True				
ANR	2465559	CFGExitNode	EXIT		2465211		True				
ANR	2465560	Symbol	pp		2465211						
ANR	2465561	Symbol	NULL		2465211						
ANR	2465562	Symbol	parser . ParseExpression		2465211						
ANR	2465563	Symbol	condTree		2465211						
ANR	2465564	Symbol	val2		2465211						
ANR	2465565	Symbol	val1		2465211						
ANR	2465566	Symbol	cond		2465211						
ANR	2465567	Symbol	Operation :: __NO_OP__		2465211						
ANR	2465568	Symbol	type		2465211						
ANR	2465569	Symbol	condString		2465211						
ANR	2465570	Symbol	op2		2465211						
ANR	2465571	Symbol	op1		2465211						
ANR	2465572	Symbol	BoolExpr :: ExprToCondition		2465211						
ANR	2465573	Symbol	parser		2465211						
ANR	2465574	Symbol	buffer		2465211						
ANR	2465575	Symbol	attr		2465211						
ANR	2465576	Function	GetOpName	91:0:2491:3187							
ANR	2465577	FunctionDef	"GetOpName (Operation :: OpKind op , string & result)"		2465576	0					
ANR	2465578	CompoundStatement		93:0:2553:3187	2465576	0					
ANR	2465579	SwitchStatement	switch ( op )		2465576	0					
ANR	2465580	Condition	op	94:9:2564:2565	2465576	0	True				
ANR	2465581	Identifier	op		2465576	0					
ANR	2465582	CompoundStatement		2:14:15:15	2465576	1					
ANR	2465583	Label	case Operation :: __NO_OP__ :	95:1:2572:2597	2465576	0	True				
ANR	2465584	Identifier	Operation :: __NO_OP__		2465576	0					
ANR	2465585	CompoundStatement		3:28:45:45	2465576	1					
ANR	2465586	ExpressionStatement	"result = ""NO_OP"""	95:30:2601:2617	2465576	0	True				
ANR	2465587	AssignmentExpression	"result = ""NO_OP"""		2465576	0		=			
ANR	2465588	Identifier	result		2465576	0					
ANR	2465589	PrimaryExpression	"""NO_OP"""		2465576	1					
ANR	2465590	ReturnStatement	return true ;	95:48:2619:2630	2465576	1	True				
ANR	2465591	Identifier	true		2465576	0					
ANR	2465592	Label	case Operation :: LESS_THAN_OP :	96:1:2635:2663	2465576	2	True				
ANR	2465593	Identifier	Operation :: LESS_THAN_OP		2465576	0					
ANR	2465594	CompoundStatement		4:31:111:111	2465576	3					
ANR	2465595	ExpressionStatement	"result = ""<"""	96:33:2667:2679	2465576	0	True				
ANR	2465596	AssignmentExpression	"result = ""<"""		2465576	0		=			
ANR	2465597	Identifier	result		2465576	0					
ANR	2465598	PrimaryExpression	"""<"""		2465576	1					
ANR	2465599	ReturnStatement	return true ;	96:47:2681:2692	2465576	1	True				
ANR	2465600	Identifier	true		2465576	0					
ANR	2465601	Label	case Operation :: LESS_OR_EQUAL_OP :	97:1:2697:2729	2465576	4	True				
ANR	2465602	Identifier	Operation :: LESS_OR_EQUAL_OP		2465576	0					
ANR	2465603	CompoundStatement		5:35:177:177	2465576	5					
ANR	2465604	ExpressionStatement	"result = ""<="""	97:37:2733:2746	2465576	0	True				
ANR	2465605	AssignmentExpression	"result = ""<="""		2465576	0		=			
ANR	2465606	Identifier	result		2465576	0					
ANR	2465607	PrimaryExpression	"""<="""		2465576	1					
ANR	2465608	ReturnStatement	return true ;	97:52:2748:2759	2465576	1	True				
ANR	2465609	Identifier	true		2465576	0					
ANR	2465610	Label	case Operation :: NOT_EQUAL_OP :	98:1:2764:2792	2465576	6	True				
ANR	2465611	Identifier	Operation :: NOT_EQUAL_OP		2465576	0					
ANR	2465612	CompoundStatement		6:31:240:240	2465576	7					
ANR	2465613	ExpressionStatement	"result = ""!="""	98:33:2796:2809	2465576	0	True				
ANR	2465614	AssignmentExpression	"result = ""!="""		2465576	0		=			
ANR	2465615	Identifier	result		2465576	0					
ANR	2465616	PrimaryExpression	"""!="""		2465576	1					
ANR	2465617	ReturnStatement	return true ;	98:48:2811:2822	2465576	1	True				
ANR	2465618	Identifier	true		2465576	0					
ANR	2465619	Label	case Operation :: EQUAL_OP :	99:1:2827:2851	2465576	8	True				
ANR	2465620	Identifier	Operation :: EQUAL_OP		2465576	0					
ANR	2465621	CompoundStatement		7:27:299:299	2465576	9					
ANR	2465622	ExpressionStatement	"result = ""=="""	99:29:2855:2868	2465576	0	True				
ANR	2465623	AssignmentExpression	"result = ""=="""		2465576	0		=			
ANR	2465624	Identifier	result		2465576	0					
ANR	2465625	PrimaryExpression	"""=="""		2465576	1					
ANR	2465626	ReturnStatement	return true ;	99:44:2870:2881	2465576	1	True				
ANR	2465627	Identifier	true		2465576	0					
ANR	2465628	Label	case Operation :: GREATER_OR_EQUAL_OP :	100:1:2886:2921	2465576	10	True				
ANR	2465629	Identifier	Operation :: GREATER_OR_EQUAL_OP		2465576	0					
ANR	2465630	CompoundStatement		8:38:369:369	2465576	11					
ANR	2465631	ExpressionStatement	"result = "">="""	100:40:2925:2938	2465576	0	True				
ANR	2465632	AssignmentExpression	"result = "">="""		2465576	0		=			
ANR	2465633	Identifier	result		2465576	0					
ANR	2465634	PrimaryExpression	""">="""		2465576	1					
ANR	2465635	ReturnStatement	return true ;	100:55:2940:2951	2465576	1	True				
ANR	2465636	Identifier	true		2465576	0					
ANR	2465637	Label	case Operation :: GREATER_THAN_OP :	101:1:2956:2987	2465576	12	True				
ANR	2465638	Identifier	Operation :: GREATER_THAN_OP		2465576	0					
ANR	2465639	CompoundStatement		9:34:435:435	2465576	13					
ANR	2465640	ExpressionStatement	"result = "">"""	101:36:2991:3003	2465576	0	True				
ANR	2465641	AssignmentExpression	"result = "">"""		2465576	0		=			
ANR	2465642	Identifier	result		2465576	0					
ANR	2465643	PrimaryExpression	""">"""		2465576	1					
ANR	2465644	ReturnStatement	return true ;	101:50:3005:3016	2465576	1	True				
ANR	2465645	Identifier	true		2465576	0					
ANR	2465646	Label	case Operation :: IS_OP :	102:1:3021:3042	2465576	14	True				
ANR	2465647	Identifier	Operation :: IS_OP		2465576	0					
ANR	2465648	CompoundStatement		10:24:490:490	2465576	15					
ANR	2465649	ExpressionStatement	"result = ""is"""	102:26:3046:3059	2465576	0	True				
ANR	2465650	AssignmentExpression	"result = ""is"""		2465576	0		=			
ANR	2465651	Identifier	result		2465576	0					
ANR	2465652	PrimaryExpression	"""is"""		2465576	1					
ANR	2465653	ReturnStatement	return true ;	102:41:3061:3072	2465576	1	True				
ANR	2465654	Identifier	true		2465576	0					
ANR	2465655	Label	case Operation :: ISNT_OP :	103:1:3077:3100	2465576	16	True				
ANR	2465656	Identifier	Operation :: ISNT_OP		2465576	0					
ANR	2465657	CompoundStatement		11:26:548:548	2465576	17					
ANR	2465658	ExpressionStatement	"result = ""isnt"""	103:28:3104:3119	2465576	0	True				
ANR	2465659	AssignmentExpression	"result = ""isnt"""		2465576	0		=			
ANR	2465660	Identifier	result		2465576	0					
ANR	2465661	PrimaryExpression	"""isnt"""		2465576	1					
ANR	2465662	ReturnStatement	return true ;	103:45:3121:3132	2465576	1	True				
ANR	2465663	Identifier	true		2465576	0					
ANR	2465664	Label	default :	104:1:3137:3144	2465576	18	True				
ANR	2465665	Identifier	default		2465576	0					
ANR	2465666	CompoundStatement		12:10:592:592	2465576	19					
ANR	2465667	ExpressionStatement	"result = ""non-comp"""	104:12:3148:3167	2465576	0	True				
ANR	2465668	AssignmentExpression	"result = ""non-comp"""		2465576	0		=			
ANR	2465669	Identifier	result		2465576	0					
ANR	2465670	PrimaryExpression	"""non-comp"""		2465576	1					
ANR	2465671	ReturnStatement	return true ;	104:33:3169:3180	2465576	1	True				
ANR	2465672	Identifier	true		2465576	0					
ANR	2465673	ReturnType	static bool		2465576	1					
ANR	2465674	Identifier	GetOpName		2465576	2					
ANR	2465675	ParameterList	"Operation :: OpKind op , string & result"		2465576	3					
ANR	2465676	Parameter	Operation :: OpKind op	92:11:2514:2533	2465576	0	True				
ANR	2465677	ParameterType	Operation :: OpKind		2465576	0					
ANR	2465678	Identifier	op		2465576	1					
ANR	2465679	Parameter	string & result	92:33:2536:2549	2465576	1	True				
ANR	2465680	ParameterType	string &		2465576	0					
ANR	2465681	Identifier	result		2465576	1					
ANR	2465682	CFGEntryNode	ENTRY		2465576		True				
ANR	2465683	CFGExitNode	EXIT		2465576		True				
ANR	2465684	Symbol	result		2465576						
ANR	2465685	Symbol	op		2465576						
ANR	2465686	Symbol	true		2465576						
ANR	2465687	Function	GetTypeName	108:0:3191:4046							
ANR	2465688	FunctionDef	"GetTypeName (Value :: ValueType type , string & result)"		2465687	0					
ANR	2465689	CompoundStatement		110:0:3256:4046	2465687	0					
ANR	2465690	SwitchStatement	switch ( type )		2465687	0					
ANR	2465691	Condition	type	111:9:3267:3270	2465687	0	True				
ANR	2465692	Identifier	type		2465687	0					
ANR	2465693	CompoundStatement		2:16:17:17	2465687	1					
ANR	2465694	Label	case Value :: NULL_VALUE :	112:1:3277:3299	2465687	0	True				
ANR	2465695	Identifier	Value :: NULL_VALUE		2465687	0					
ANR	2465696	CompoundStatement		3:25:44:44	2465687	1					
ANR	2465697	ExpressionStatement	"result = ""NULL"""	112:27:3303:3318	2465687	0	True				
ANR	2465698	AssignmentExpression	"result = ""NULL"""		2465687	0		=			
ANR	2465699	Identifier	result		2465687	0					
ANR	2465700	PrimaryExpression	"""NULL"""		2465687	1					
ANR	2465701	ReturnStatement	return true ;	112:44:3320:3331	2465687	1	True				
ANR	2465702	Identifier	true		2465687	0					
ANR	2465703	Label	case Value :: ERROR_VALUE :	113:1:3336:3359	2465687	2	True				
ANR	2465704	Identifier	Value :: ERROR_VALUE		2465687	0					
ANR	2465705	CompoundStatement		4:26:104:104	2465687	3					
ANR	2465706	ExpressionStatement	"result = ""Error"""	113:28:3363:3379	2465687	0	True				
ANR	2465707	AssignmentExpression	"result = ""Error"""		2465687	0		=			
ANR	2465708	Identifier	result		2465687	0					
ANR	2465709	PrimaryExpression	"""Error"""		2465687	1					
ANR	2465710	ReturnStatement	return true ;	113:46:3381:3392	2465687	1	True				
ANR	2465711	Identifier	true		2465687	0					
ANR	2465712	Label	case Value :: UNDEFINED_VALUE :	114:1:3397:3424	2465687	4	True				
ANR	2465713	Identifier	Value :: UNDEFINED_VALUE		2465687	0					
ANR	2465714	CompoundStatement		5:30:169:169	2465687	5					
ANR	2465715	ExpressionStatement	"result = ""Undefined"""	114:32:3428:3448	2465687	0	True				
ANR	2465716	AssignmentExpression	"result = ""Undefined"""		2465687	0		=			
ANR	2465717	Identifier	result		2465687	0					
ANR	2465718	PrimaryExpression	"""Undefined"""		2465687	1					
ANR	2465719	ReturnStatement	return true ;	114:54:3450:3461	2465687	1	True				
ANR	2465720	Identifier	true		2465687	0					
ANR	2465721	Label	case Value :: BOOLEAN_VALUE :	115:1:3466:3491	2465687	6	True				
ANR	2465722	Identifier	Value :: BOOLEAN_VALUE		2465687	0					
ANR	2465723	CompoundStatement		6:28:236:236	2465687	7					
ANR	2465724	ExpressionStatement	"result = ""Boolean"""	115:30:3495:3513	2465687	0	True				
ANR	2465725	AssignmentExpression	"result = ""Boolean"""		2465687	0		=			
ANR	2465726	Identifier	result		2465687	0					
ANR	2465727	PrimaryExpression	"""Boolean"""		2465687	1					
ANR	2465728	ReturnStatement	return true ;	115:50:3515:3526	2465687	1	True				
ANR	2465729	Identifier	true		2465687	0					
ANR	2465730	Label	case Value :: INTEGER_VALUE :	116:1:3531:3556	2465687	8	True				
ANR	2465731	Identifier	Value :: INTEGER_VALUE		2465687	0					
ANR	2465732	CompoundStatement		7:28:301:301	2465687	9					
ANR	2465733	ExpressionStatement	"result = ""Integer"""	116:30:3560:3578	2465687	0	True				
ANR	2465734	AssignmentExpression	"result = ""Integer"""		2465687	0		=			
ANR	2465735	Identifier	result		2465687	0					
ANR	2465736	PrimaryExpression	"""Integer"""		2465687	1					
ANR	2465737	ReturnStatement	return true ;	116:50:3580:3591	2465687	1	True				
ANR	2465738	Identifier	true		2465687	0					
ANR	2465739	Label	case Value :: REAL_VALUE :	117:1:3596:3618	2465687	10	True				
ANR	2465740	Identifier	Value :: REAL_VALUE		2465687	0					
ANR	2465741	CompoundStatement		8:25:363:363	2465687	11					
ANR	2465742	ExpressionStatement	"result = ""Real"""	117:27:3622:3637	2465687	0	True				
ANR	2465743	AssignmentExpression	"result = ""Real"""		2465687	0		=			
ANR	2465744	Identifier	result		2465687	0					
ANR	2465745	PrimaryExpression	"""Real"""		2465687	1					
ANR	2465746	ReturnStatement	return true ;	117:44:3639:3650	2465687	1	True				
ANR	2465747	Identifier	true		2465687	0					
ANR	2465748	Label	case Value :: RELATIVE_TIME_VALUE :	118:1:3655:3686	2465687	12	True				
ANR	2465749	Identifier	Value :: RELATIVE_TIME_VALUE		2465687	0					
ANR	2465750	CompoundStatement		9:34:431:431	2465687	13					
ANR	2465751	ExpressionStatement	"result = ""Relative Time"""	118:36:3690:3714	2465687	0	True				
ANR	2465752	AssignmentExpression	"result = ""Relative Time"""		2465687	0		=			
ANR	2465753	Identifier	result		2465687	0					
ANR	2465754	PrimaryExpression	"""Relative Time"""		2465687	1					
ANR	2465755	ReturnStatement	return true ;	118:62:3716:3727	2465687	1	True				
ANR	2465756	Identifier	true		2465687	0					
ANR	2465757	Label	case Value :: ABSOLUTE_TIME_VALUE :	119:1:3732:3763	2465687	14	True				
ANR	2465758	Identifier	Value :: ABSOLUTE_TIME_VALUE		2465687	0					
ANR	2465759	CompoundStatement		10:34:508:508	2465687	15					
ANR	2465760	ExpressionStatement	"result = ""Absolute Time"""	119:36:3767:3791	2465687	0	True				
ANR	2465761	AssignmentExpression	"result = ""Absolute Time"""		2465687	0		=			
ANR	2465762	Identifier	result		2465687	0					
ANR	2465763	PrimaryExpression	"""Absolute Time"""		2465687	1					
ANR	2465764	ReturnStatement	return true ;	119:62:3793:3804	2465687	1	True				
ANR	2465765	Identifier	true		2465687	0					
ANR	2465766	Label	case Value :: STRING_VALUE :	120:1:3809:3833	2465687	16	True				
ANR	2465767	Identifier	Value :: STRING_VALUE		2465687	0					
ANR	2465768	CompoundStatement		11:27:578:578	2465687	17					
ANR	2465769	ExpressionStatement	"result = ""String"""	120:29:3837:3854	2465687	0	True				
ANR	2465770	AssignmentExpression	"result = ""String"""		2465687	0		=			
ANR	2465771	Identifier	result		2465687	0					
ANR	2465772	PrimaryExpression	"""String"""		2465687	1					
ANR	2465773	ReturnStatement	return true ;	120:48:3856:3867	2465687	1	True				
ANR	2465774	Identifier	true		2465687	0					
ANR	2465775	Label	case Value :: CLASSAD_VALUE :	121:1:3872:3897	2465687	18	True				
ANR	2465776	Identifier	Value :: CLASSAD_VALUE		2465687	0					
ANR	2465777	CompoundStatement		12:28:642:642	2465687	19					
ANR	2465778	ExpressionStatement	"result = ""ClassAd"""	121:30:3901:3919	2465687	0	True				
ANR	2465779	AssignmentExpression	"result = ""ClassAd"""		2465687	0		=			
ANR	2465780	Identifier	result		2465687	0					
ANR	2465781	PrimaryExpression	"""ClassAd"""		2465687	1					
ANR	2465782	ReturnStatement	return true ;	121:50:3921:3932	2465687	1	True				
ANR	2465783	Identifier	true		2465687	0					
ANR	2465784	Label	case Value :: LIST_VALUE :	122:1:3937:3959	2465687	20	True				
ANR	2465785	Identifier	Value :: LIST_VALUE		2465687	0					
ANR	2465786	CompoundStatement		13:25:704:704	2465687	21					
ANR	2465787	ExpressionStatement	"result = ""List"""	122:27:3963:3978	2465687	0	True				
ANR	2465788	AssignmentExpression	"result = ""List"""		2465687	0		=			
ANR	2465789	Identifier	result		2465687	0					
ANR	2465790	PrimaryExpression	"""List"""		2465687	1					
ANR	2465791	ReturnStatement	return true ;	122:44:3980:3991	2465687	1	True				
ANR	2465792	Identifier	true		2465687	0					
ANR	2465793	Label	default :	123:1:3996:4003	2465687	22	True				
ANR	2465794	Identifier	default		2465687	0					
ANR	2465795	CompoundStatement		14:11:749:749	2465687	23					
ANR	2465796	ExpressionStatement	"result = ""Unknown"""	123:13:4008:4026	2465687	0	True				
ANR	2465797	AssignmentExpression	"result = ""Unknown"""		2465687	0		=			
ANR	2465798	Identifier	result		2465687	0					
ANR	2465799	PrimaryExpression	"""Unknown"""		2465687	1					
ANR	2465800	ReturnStatement	return true ;	123:33:4028:4039	2465687	1	True				
ANR	2465801	Identifier	true		2465687	0					
ANR	2465802	ReturnType	static bool		2465687	1					
ANR	2465803	Identifier	GetTypeName		2465687	2					
ANR	2465804	ParameterList	"Value :: ValueType type , string & result"		2465687	3					
ANR	2465805	Parameter	Value :: ValueType type	109:13:3216:3236	2465687	0	True				
ANR	2465806	ParameterType	Value :: ValueType		2465687	0					
ANR	2465807	Identifier	type		2465687	1					
ANR	2465808	Parameter	string & result	109:36:3239:3252	2465687	1	True				
ANR	2465809	ParameterType	string &		2465687	0					
ANR	2465810	Identifier	result		2465687	1					
ANR	2465811	CFGEntryNode	ENTRY		2465687		True				
ANR	2465812	CFGExitNode	EXIT		2465687		True				
ANR	2465813	Symbol	result		2465687						
ANR	2465814	Symbol	true		2465687						
ANR	2465815	Symbol	type		2465687						
