command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5589881	File	data/converged/CVE-2011-4930_htcondor/winreg.windows.cpp								
ANR	5589882	ClassDef	_WinPerf_QueryResult	36:8:1270:1610							
ANR	5589883	DeclStmt									
ANR	5589884	Decl							DWORD	DWORD	idObject
ANR	5589885	DeclStmt									
ANR	5589886	Decl							DWORD	DWORD	cbAlloc
ANR	5589887	DeclStmt									
ANR	5589888	Decl							const WinPerf_Data	const WinPerf_Data *	pdata1
ANR	5589889	DeclStmt									
ANR	5589890	Decl							const WinPerf_Data	const WinPerf_Data *	pdata2
ANR	5589891	DeclStmt									
ANR	5589892	Decl							_WinPerf_QueryResult	_WinPerf_QueryResult	WinPerf_QueryResult
ANR	5589893	ClassDef	WinPerf_Query	47:0:1774:2222							
ANR	5589894	DeclStmt									
ANR	5589895	Decl							DWORD	DWORD	idKey
ANR	5589896	DeclStmt									
ANR	5589897	Decl							DWORD	DWORD	idCounter
ANR	5589898	DeclStmt									
ANR	5589899	Decl							DWORD	DWORD [ 6 ]	idAlt
ANR	5589900	DeclStmt									
ANR	5589901	Decl							DWORD	DWORD	idInst
ANR	5589902	DeclStmt									
ANR	5589903	Decl							int	int	ixInst
ANR	5589904	DeclStmt									
ANR	5589905	Decl							int	int	cchInst
ANR	5589906	ClassDef	YourString	65:0:2441:2658							
ANR	5589907	Function	YourString	68:2:2472:2493							
ANR	5589908	FunctionDef	YourString ()		5589907	0					
ANR	5589909	CompoundStatement		68:22:2492:2493	5589907	0					
ANR	5589910	Identifier	YourString		5589907	1					
ANR	5589911	ParameterList			5589907	2					
ANR	5589912	CFGEntryNode	ENTRY		5589907		True				
ANR	5589913	CFGExitNode	EXIT		5589907		True				
ANR	5589914	Function	YourString	69:2:2497:2535							
ANR	5589915	FunctionDef	YourString (const char * str)		5589914	1					
ANR	5589916	CompoundStatement		69:39:2534:2535	5589914	0					
ANR	5589917	Identifier	YourString		5589914	1					
ANR	5589918	ParameterList	const char * str		5589914	2					
ANR	5589919	Parameter	const char * str	69:13:2508:2522	5589914	0	True				
ANR	5589920	ParameterType	const char *		5589914	0					
ANR	5589921	Identifier	str		5589914	1					
ANR	5589922	CFGEntryNode	ENTRY		5589914		True				
ANR	5589923	CFGExitNode	EXIT		5589914		True				
ANR	5589924	Symbol	str		5589914						
ANR	5589925	Function	operator ==	70:2:2539:2613							
ANR	5589926	FunctionDef	operator == (const YourString & rhs)		5589925	2					
ANR	5589927	CompoundStatement		70:41:2578:2613	5589925	0					
ANR	5589928	ReturnStatement	"return ( lstrcmpi ( s , rhs . s ) == 0 ) ;"	70:1:2580:2611	5589925	0	True				
ANR	5589929	EqualityExpression	"lstrcmpi ( s , rhs . s ) == 0"		5589925	0		==			
ANR	5589930	CallExpression	"lstrcmpi ( s , rhs . s )"		5589925	0					
ANR	5589931	Callee	lstrcmpi		5589925	0					
ANR	5589932	Identifier	lstrcmpi		5589925	0					
ANR	5589933	ArgumentList	s		5589925	1					
ANR	5589934	Argument	s		5589925	0					
ANR	5589935	Identifier	s		5589925	0					
ANR	5589936	Argument	rhs . s		5589925	1					
ANR	5589937	MemberAccess	rhs . s		5589925	0					
ANR	5589938	Identifier	rhs		5589925	0					
ANR	5589939	Identifier	s		5589925	1					
ANR	5589940	PrimaryExpression	0		5589925	1					
ANR	5589941	ReturnType	bool		5589925	1					
ANR	5589942	Identifier	operator ==		5589925	2					
ANR	5589943	ParameterList	const YourString & rhs		5589925	3					
ANR	5589944	Parameter	const YourString & rhs	70:18:2555:2575	5589925	0	True				
ANR	5589945	ParameterType	const YourString &		5589925	0					
ANR	5589946	Identifier	rhs		5589925	1					
ANR	5589947	CFGEntryNode	ENTRY		5589925		True				
ANR	5589948	CFGExitNode	EXIT		5589925		True				
ANR	5589949	Symbol	s		5589925						
ANR	5589950	Symbol	lstrcmpi		5589925						
ANR	5589951	Symbol	rhs		5589925						
ANR	5589952	Symbol	rhs . s		5589925						
ANR	5589953	DeclStmt									
ANR	5589954	Decl							const char	const char *	s
ANR	5589955	Function	parse_hive_prefix	92:0:3439:4353							
ANR	5589956	FunctionDef	"parse_hive_prefix (const char * psz , int cch , int * pixPrefixSep)"		5589955	0					
ANR	5589957	CompoundStatement		93:0:3509:4353	5589955	0					
ANR	5589958	IdentifierDeclStatement	HKEY hkey = NULL ;	94:1:3512:3528	5589955	0	True				
ANR	5589959	IdentifierDecl	hkey = NULL		5589955	0					
ANR	5589960	IdentifierDeclType	HKEY		5589955	0					
ANR	5589961	Identifier	hkey		5589955	1					
ANR	5589962	AssignmentExpression	hkey = NULL		5589955	2		=			
ANR	5589963	Identifier	NULL		5589955	0					
ANR	5589964	Identifier	NULL		5589955	1					
ANR	5589965	IdentifierDeclStatement	char ach [ 5 ] = { 0 } ;	95:1:3531:3548	5589955	1	True				
ANR	5589966	IdentifierDecl	ach [ 5 ] = { 0 }		5589955	0					
ANR	5589967	IdentifierDeclType	char [ 5 ]		5589955	0					
ANR	5589968	Identifier	ach		5589955	1					
ANR	5589969	PrimaryExpression	5		5589955	2					
ANR	5589970	AssignmentExpression	ach [ 5 ] = { 0 }		5589955	3		=			
ANR	5589971	Identifier	ach		5589955	0					
ANR	5589972	InitializerList	0		5589955	1					
ANR	5589973	PrimaryExpression	0		5589955	0					
ANR	5589974	ForStatement	for ( int ii = 0 ; ii <= cch && ii < NUM_ELEMENTS ( ach ) ; ++ ii )		5589955	2					
ANR	5589975	ForInit	int ii = 0 ;	96:6:3556:3566	5589955	0	True				
ANR	5589976	IdentifierDeclStatement	int ii = 0 ;		5589955	0					
ANR	5589977	IdentifierDecl	ii = 0		5589955	0					
ANR	5589978	IdentifierDeclType	int		5589955	0					
ANR	5589979	Identifier	ii		5589955	1					
ANR	5589980	AssignmentExpression	ii = 0		5589955	2		=			
ANR	5589981	Identifier	ii		5589955	0					
ANR	5589982	PrimaryExpression	0		5589955	1					
ANR	5589983	Condition	ii <= cch && ii < NUM_ELEMENTS ( ach )	96:18:3568:3602	5589955	1	True				
ANR	5589984	AndExpression	ii <= cch && ii < NUM_ELEMENTS ( ach )		5589955	0		&&			
ANR	5589985	RelationalExpression	ii <= cch		5589955	0		<=			
ANR	5589986	Identifier	ii		5589955	0					
ANR	5589987	Identifier	cch		5589955	1					
ANR	5589988	RelationalExpression	ii < NUM_ELEMENTS ( ach )		5589955	1		<			
ANR	5589989	Identifier	ii		5589955	0					
ANR	5589990	CallExpression	NUM_ELEMENTS ( ach )		5589955	1					
ANR	5589991	Callee	NUM_ELEMENTS		5589955	0					
ANR	5589992	Identifier	NUM_ELEMENTS		5589955	0					
ANR	5589993	ArgumentList	ach		5589955	1					
ANR	5589994	Argument	ach		5589955	0					
ANR	5589995	Identifier	ach		5589955	0					
ANR	5589996	UnaryExpression	++ ii	96:55:3605:3608	5589955	2	True				
ANR	5589997	IncDec	++		5589955	0					
ANR	5589998	Identifier	ii		5589955	1					
ANR	5589999	CompoundStatement		5:1:102:102	5589955	3					
ANR	5590000	IfStatement	if ( psz [ ii ] == '\\\\' || psz [ ii ] == '\\0' )		5589955	0					
ANR	5590001	Condition	psz [ ii ] == '\\\\' || psz [ ii ] == '\\0'	98:6:3620:3676	5589955	0	True				
ANR	5590002	OrExpression	psz [ ii ] == '\\\\' || psz [ ii ] == '\\0'		5589955	0		||			
ANR	5590003	EqualityExpression	psz [ ii ] == '\\\\'		5589955	0		==			
ANR	5590004	ArrayIndexing	psz [ ii ]		5589955	0					
ANR	5590005	Identifier	psz		5589955	0					
ANR	5590006	Identifier	ii		5589955	1					
ANR	5590007	PrimaryExpression	'\\\\'		5589955	1					
ANR	5590008	EqualityExpression	psz [ ii ] == '\\0'		5589955	1		==			
ANR	5590009	ArrayIndexing	psz [ ii ]		5589955	0					
ANR	5590010	Identifier	psz		5589955	0					
ANR	5590011	Identifier	ii		5589955	1					
ANR	5590012	PrimaryExpression	'\\0'		5589955	1					
ANR	5590013	CompoundStatement		23:3:554:583	5589955	1					
ANR	5590014	Statement	static	100:3:3686:3691	5589955	0	True				
ANR	5590015	Statement	const	100:10:3693:3697	5589955	1	True				
ANR	5590016	ClassDefStatement	struct { long id ; HKEY key ; }	100:16:3699:3738	5589955	2	True				
ANR	5590017	Statement	aMap	103:5:3740:3743	5589955	3	True				
ANR	5590018	Statement	[	103:9:3744:3744	5589955	4	True				
ANR	5590019	Statement	]	103:10:3745:3745	5589955	5	True				
ANR	5590020	Statement	=	103:12:3747:3747	5589955	6	True				
ANR	5590021	CompoundStatement		11:14:239:239	5589955	7					
ANR	5590022	Statement	HKLM	104:5:3756:3759	5589955	0	True				
ANR	5590023	Statement	","	104:10:3761:3761	5589955	1	True				
ANR	5590024	Statement	HKEY_LOCAL_MACHINE	104:12:3763:3780	5589955	2	True				
ANR	5590025	Statement	","	104:30:3781:3781	5589955	3	True				
ANR	5590026	Statement	HKCC	105:5:3788:3791	5589955	4	True				
ANR	5590027	Statement	","	105:10:3793:3793	5589955	5	True				
ANR	5590028	Statement	HKEY_CURRENT_CONFIG	105:12:3795:3813	5589955	6	True				
ANR	5590029	Statement	","	105:31:3814:3814	5589955	7	True				
ANR	5590030	Statement	HKCR	106:5:3821:3824	5589955	8	True				
ANR	5590031	Statement	","	106:10:3826:3826	5589955	9	True				
ANR	5590032	Statement	HKEY_CLASSES_ROOT	106:12:3828:3844	5589955	10	True				
ANR	5590033	Statement	","	106:29:3845:3845	5589955	11	True				
ANR	5590034	Statement	HKCU	107:5:3852:3855	5589955	12	True				
ANR	5590035	Statement	","	107:10:3857:3857	5589955	13	True				
ANR	5590036	Statement	HKEY_CURRENT_USER	107:12:3859:3875	5589955	14	True				
ANR	5590037	Statement	","	107:29:3876:3876	5589955	15	True				
ANR	5590038	Statement	HKU	108:5:3883:3885	5589955	16	True				
ANR	5590039	Statement	0	108:9:3887:3887	5589955	17	True				
ANR	5590040	Statement	","	108:11:3889:3889	5589955	18	True				
ANR	5590041	Statement	HKEY_USERS	108:12:3890:3899	5589955	19	True				
ANR	5590042	Statement	","	108:22:3900:3900	5589955	20	True				
ANR	5590043	Statement	HKPD	109:5:3907:3910	5589955	21	True				
ANR	5590044	Statement	","	109:10:3912:3912	5589955	22	True				
ANR	5590045	Statement	HKEY_PERFORMANCE_DATA	109:12:3914:3934	5589955	23	True				
ANR	5590046	Statement	","	109:33:3935:3935	5589955	24	True				
ANR	5590047	ExpressionStatement		113:4:4058:4058	5589955	8	True				
ANR	5590048	IdentifierDeclStatement	long id = htonl ( * ( long * ) & ach ) ;	115:3:4064:4093	5589955	9	True				
ANR	5590049	IdentifierDecl	id = htonl ( * ( long * ) & ach )		5589955	0					
ANR	5590050	IdentifierDeclType	long		5589955	0					
ANR	5590051	Identifier	id		5589955	1					
ANR	5590052	AssignmentExpression	id = htonl ( * ( long * ) & ach )		5589955	2		=			
ANR	5590053	Identifier	id		5589955	0					
ANR	5590054	CallExpression	htonl ( * ( long * ) & ach )		5589955	1					
ANR	5590055	Callee	htonl		5589955	0					
ANR	5590056	Identifier	htonl		5589955	0					
ANR	5590057	ArgumentList	* ( long * ) & ach		5589955	1					
ANR	5590058	Argument	* ( long * ) & ach		5589955	0					
ANR	5590059	UnaryOperationExpression	* ( long * ) & ach		5589955	0					
ANR	5590060	UnaryOperator	*		5589955	0					
ANR	5590061	CastExpression	( long * ) & ach		5589955	1					
ANR	5590062	CastTarget	long *		5589955	0					
ANR	5590063	UnaryOperationExpression	& ach		5589955	1					
ANR	5590064	UnaryOperator	&		5589955	0					
ANR	5590065	Identifier	ach		5589955	1					
ANR	5590066	ForStatement	for ( int ix = 0 ; ix < NUM_ELEMENTS ( aMap ) ; ++ ix )		5589955	10					
ANR	5590067	ForInit	int ix = 0 ;	116:8:4103:4113	5589955	0	True				
ANR	5590068	IdentifierDeclStatement	int ix = 0 ;		5589955	0					
ANR	5590069	IdentifierDecl	ix = 0		5589955	0					
ANR	5590070	IdentifierDeclType	int		5589955	0					
ANR	5590071	Identifier	ix		5589955	1					
ANR	5590072	AssignmentExpression	ix = 0		5589955	2		=			
ANR	5590073	Identifier	ix		5589955	0					
ANR	5590074	PrimaryExpression	0		5589955	1					
ANR	5590075	Condition	ix < NUM_ELEMENTS ( aMap )	116:20:4115:4137	5589955	1	True				
ANR	5590076	RelationalExpression	ix < NUM_ELEMENTS ( aMap )		5589955	0		<			
ANR	5590077	Identifier	ix		5589955	0					
ANR	5590078	CallExpression	NUM_ELEMENTS ( aMap )		5589955	1					
ANR	5590079	Callee	NUM_ELEMENTS		5589955	0					
ANR	5590080	Identifier	NUM_ELEMENTS		5589955	0					
ANR	5590081	ArgumentList	aMap		5589955	1					
ANR	5590082	Argument	aMap		5589955	0					
ANR	5590083	Identifier	aMap		5589955	0					
ANR	5590084	UnaryExpression	++ ix	116:45:4140:4143	5589955	2	True				
ANR	5590085	IncDec	++		5589955	0					
ANR	5590086	Identifier	ix		5589955	1					
ANR	5590087	CompoundStatement		25:3:639:639	5589955	3					
ANR	5590088	IfStatement	if ( id == aMap [ ix ] . id )		5589955	0					
ANR	5590089	Condition	id == aMap [ ix ] . id	118:8:4159:4175	5589955	0	True				
ANR	5590090	EqualityExpression	id == aMap [ ix ] . id		5589955	0		==			
ANR	5590091	Identifier	id		5589955	0					
ANR	5590092	MemberAccess	aMap [ ix ] . id		5589955	1					
ANR	5590093	ArrayIndexing	aMap [ ix ]		5589955	0					
ANR	5590094	Identifier	aMap		5589955	0					
ANR	5590095	Identifier	ix		5589955	1					
ANR	5590096	Identifier	id		5589955	1					
ANR	5590097	CompoundStatement		27:4:672:672	5589955	1					
ANR	5590098	ExpressionStatement	hkey = aMap [ ix ] . key	120:5:4189:4208	5589955	0	True				
ANR	5590099	AssignmentExpression	hkey = aMap [ ix ] . key		5589955	0		=			
ANR	5590100	Identifier	hkey		5589955	0					
ANR	5590101	MemberAccess	aMap [ ix ] . key		5589955	1					
ANR	5590102	ArrayIndexing	aMap [ ix ]		5589955	0					
ANR	5590103	Identifier	aMap		5589955	0					
ANR	5590104	Identifier	ix		5589955	1					
ANR	5590105	Identifier	key		5589955	1					
ANR	5590106	BreakStatement	break ;	121:5:4215:4220	5589955	1	True				
ANR	5590107	IfStatement	if ( hkey && pixPrefixSep )		5589955	11					
ANR	5590108	Condition	hkey && pixPrefixSep	125:7:4245:4264	5589955	0	True				
ANR	5590109	AndExpression	hkey && pixPrefixSep		5589955	0		&&			
ANR	5590110	Identifier	hkey		5589955	0					
ANR	5590111	Identifier	pixPrefixSep		5589955	1					
ANR	5590112	ExpressionStatement	* pixPrefixSep = ii	126:4:4271:4289	5589955	1	True				
ANR	5590113	AssignmentExpression	* pixPrefixSep = ii		5589955	0		=			
ANR	5590114	UnaryOperationExpression	* pixPrefixSep		5589955	0					
ANR	5590115	UnaryOperator	*		5589955	0					
ANR	5590116	Identifier	pixPrefixSep		5589955	1					
ANR	5590117	Identifier	ii		5589955	1					
ANR	5590118	BreakStatement	break ;	127:3:4294:4299	5589955	12	True				
ANR	5590119	ExpressionStatement	ach [ ii ] = toupper ( psz [ ii ] )	129:2:4307:4333	5589955	1	True				
ANR	5590120	AssignmentExpression	ach [ ii ] = toupper ( psz [ ii ] )		5589955	0		=			
ANR	5590121	ArrayIndexing	ach [ ii ]		5589955	0					
ANR	5590122	Identifier	ach		5589955	0					
ANR	5590123	Identifier	ii		5589955	1					
ANR	5590124	CallExpression	toupper ( psz [ ii ] )		5589955	1					
ANR	5590125	Callee	toupper		5589955	0					
ANR	5590126	Identifier	toupper		5589955	0					
ANR	5590127	ArgumentList	psz [ ii ]		5589955	1					
ANR	5590128	Argument	psz [ ii ]		5589955	0					
ANR	5590129	ArrayIndexing	psz [ ii ]		5589955	0					
ANR	5590130	Identifier	psz		5589955	0					
ANR	5590131	Identifier	ii		5589955	1					
ANR	5590132	ReturnStatement	return hkey ;	132:1:4340:4351	5589955	3	True				
ANR	5590133	Identifier	hkey		5589955	0					
ANR	5590134	ReturnType	HKEY		5589955	1					
ANR	5590135	Identifier	parse_hive_prefix		5589955	2					
ANR	5590136	ParameterList	"const char * psz , int cch , int * pixPrefixSep"		5589955	3					
ANR	5590137	Parameter	const char * psz	92:23:3462:3477	5589955	0	True				
ANR	5590138	ParameterType	const char *		5589955	0					
ANR	5590139	Identifier	psz		5589955	1					
ANR	5590140	Parameter	int cch	92:41:3480:3486	5589955	1	True				
ANR	5590141	ParameterType	int		5589955	0					
ANR	5590142	Identifier	cch		5589955	1					
ANR	5590143	Parameter	int * pixPrefixSep	92:50:3489:3506	5589955	2	True				
ANR	5590144	ParameterType	int *		5589955	0					
ANR	5590145	Identifier	pixPrefixSep		5589955	1					
ANR	5590146	CFGEntryNode	ENTRY		5589955		True				
ANR	5590147	CFGExitNode	EXIT		5589955		True				
ANR	5590148	Symbol	ii		5589955						
ANR	5590149	Symbol	* psz		5589955						
ANR	5590150	Symbol	* pixPrefixSep		5589955						
ANR	5590151	Symbol	NUM_ELEMENTS		5589955						
ANR	5590152	Symbol	NULL		5589955						
ANR	5590153	Symbol	* ii		5589955						
ANR	5590154	Symbol	* ( long * ) & ach		5589955						
ANR	5590155	Symbol	toupper		5589955						
ANR	5590156	Symbol	hkey		5589955						
ANR	5590157	Symbol	ach		5589955						
ANR	5590158	Symbol	aMap [ ix ] . id		5589955						
ANR	5590159	Symbol	cch		5589955						
ANR	5590160	Symbol	* aMap		5589955						
ANR	5590161	Symbol	& ach		5589955						
ANR	5590162	Symbol	htonl		5589955						
ANR	5590163	Symbol	ix		5589955						
ANR	5590164	Symbol	* ach		5589955						
ANR	5590165	Symbol	pixPrefixSep		5589955						
ANR	5590166	Symbol	psz		5589955						
ANR	5590167	Symbol	aMap		5589955						
ANR	5590168	Symbol	* ix		5589955						
ANR	5590169	Symbol	aMap [ ix ] . key		5589955						
ANR	5590170	Symbol	id		5589955						
ANR	5590171	Function	root_key_name	138:0:4445:4983							
ANR	5590172	FunctionDef	root_key_name (HKEY hroot)		5590171	0					
ANR	5590173	CompoundStatement		139:0:4491:4983	5590171	0					
ANR	5590174	Statement	static	140:1:4494:4499	5590171	0	True				
ANR	5590175	Statement	const	140:8:4501:4505	5590171	1	True				
ANR	5590176	ClassDefStatement	struct { const char * psz ; HKEY key ; }	140:14:4507:4549	5590171	2	True				
ANR	5590177	Statement	aMap	143:3:4551:4554	5590171	3	True				
ANR	5590178	Statement	[	143:7:4555:4555	5590171	4	True				
ANR	5590179	Statement	]	143:8:4556:4556	5590171	5	True				
ANR	5590180	Statement	=	143:10:4558:4558	5590171	6	True				
ANR	5590181	CompoundStatement		5:12:68:68	5590171	7					
ANR	5590182	Statement	"""HKLM"""	144:2:4564:4569	5590171	0	True				
ANR	5590183	Statement	","	144:8:4570:4570	5590171	1	True				
ANR	5590184	Statement	HKEY_LOCAL_MACHINE	144:10:4572:4589	5590171	2	True				
ANR	5590185	Statement	","	144:28:4590:4590	5590171	3	True				
ANR	5590186	Statement	"""HKCC"""	145:2:4594:4599	5590171	4	True				
ANR	5590187	Statement	","	145:8:4600:4600	5590171	5	True				
ANR	5590188	Statement	HKEY_CURRENT_CONFIG	145:10:4602:4620	5590171	6	True				
ANR	5590189	Statement	","	145:29:4621:4621	5590171	7	True				
ANR	5590190	Statement	"""HKCU"""	146:2:4625:4630	5590171	8	True				
ANR	5590191	Statement	","	146:8:4631:4631	5590171	9	True				
ANR	5590192	Statement	HKEY_CURRENT_USER	146:10:4633:4649	5590171	10	True				
ANR	5590193	Statement	","	146:27:4650:4650	5590171	11	True				
ANR	5590194	Statement	"""HKCR"""	147:2:4654:4659	5590171	12	True				
ANR	5590195	Statement	","	147:8:4660:4660	5590171	13	True				
ANR	5590196	Statement	HKEY_CLASSES_ROOT	147:10:4662:4678	5590171	14	True				
ANR	5590197	Statement	","	147:27:4679:4679	5590171	15	True				
ANR	5590198	Statement	"""HKU\\0"""	148:2:4683:4689	5590171	16	True				
ANR	5590199	Statement	","	148:9:4690:4690	5590171	17	True				
ANR	5590200	Statement	HKEY_USERS	148:11:4692:4701	5590171	18	True				
ANR	5590201	Statement	","	148:21:4702:4702	5590171	19	True				
ANR	5590202	Statement	"""HKPD"""	149:2:4706:4711	5590171	20	True				
ANR	5590203	Statement	","	149:8:4712:4712	5590171	21	True				
ANR	5590204	Statement	HKEY_PERFORMANCE_DATA	149:10:4714:4734	5590171	22	True				
ANR	5590205	Statement	","	149:31:4735:4735	5590171	23	True				
ANR	5590206	ExpressionStatement		153:2:4850:4850	5590171	8	True				
ANR	5590207	ForStatement	for ( int ix = 0 ; ix < NUM_ELEMENTS ( aMap ) ; ++ ix )		5590171	9					
ANR	5590208	ForInit	int ix = 0 ;	155:6:4859:4869	5590171	0	True				
ANR	5590209	IdentifierDeclStatement	int ix = 0 ;		5590171	0					
ANR	5590210	IdentifierDecl	ix = 0		5590171	0					
ANR	5590211	IdentifierDeclType	int		5590171	0					
ANR	5590212	Identifier	ix		5590171	1					
ANR	5590213	AssignmentExpression	ix = 0		5590171	2		=			
ANR	5590214	Identifier	ix		5590171	0					
ANR	5590215	PrimaryExpression	0		5590171	1					
ANR	5590216	Condition	ix < NUM_ELEMENTS ( aMap )	155:18:4871:4893	5590171	1	True				
ANR	5590217	RelationalExpression	ix < NUM_ELEMENTS ( aMap )		5590171	0		<			
ANR	5590218	Identifier	ix		5590171	0					
ANR	5590219	CallExpression	NUM_ELEMENTS ( aMap )		5590171	1					
ANR	5590220	Callee	NUM_ELEMENTS		5590171	0					
ANR	5590221	Identifier	NUM_ELEMENTS		5590171	0					
ANR	5590222	ArgumentList	aMap		5590171	1					
ANR	5590223	Argument	aMap		5590171	0					
ANR	5590224	Identifier	aMap		5590171	0					
ANR	5590225	UnaryExpression	++ ix	155:43:4896:4899	5590171	2	True				
ANR	5590226	IncDec	++		5590171	0					
ANR	5590227	Identifier	ix		5590171	1					
ANR	5590228	CompoundStatement		18:1:411:411	5590171	3					
ANR	5590229	IfStatement	if ( hroot == aMap [ ix ] . key )		5590171	0					
ANR	5590230	Condition	hroot == aMap [ ix ] . key	157:6:4911:4931	5590171	0	True				
ANR	5590231	EqualityExpression	hroot == aMap [ ix ] . key		5590171	0		==			
ANR	5590232	Identifier	hroot		5590171	0					
ANR	5590233	MemberAccess	aMap [ ix ] . key		5590171	1					
ANR	5590234	ArrayIndexing	aMap [ ix ]		5590171	0					
ANR	5590235	Identifier	aMap		5590171	0					
ANR	5590236	Identifier	ix		5590171	1					
ANR	5590237	Identifier	key		5590171	1					
ANR	5590238	CompoundStatement		20:2:444:444	5590171	1					
ANR	5590239	ReturnStatement	return aMap [ ix ] . psz ;	159:3:4941:4960	5590171	0	True				
ANR	5590240	MemberAccess	aMap [ ix ] . psz		5590171	0					
ANR	5590241	ArrayIndexing	aMap [ ix ]		5590171	0					
ANR	5590242	Identifier	aMap		5590171	0					
ANR	5590243	Identifier	ix		5590171	1					
ANR	5590244	Identifier	psz		5590171	1					
ANR	5590245	ReturnStatement	return NULL ;	162:1:4970:4981	5590171	10	True				
ANR	5590246	Identifier	NULL		5590171	0					
ANR	5590247	ReturnType	static const char *		5590171	1					
ANR	5590248	Identifier	root_key_name		5590171	2					
ANR	5590249	ParameterList	HKEY hroot		5590171	3					
ANR	5590250	Parameter	HKEY hroot	138:34:4479:4488	5590171	0	True				
ANR	5590251	ParameterType	HKEY		5590171	0					
ANR	5590252	Identifier	hroot		5590171	1					
ANR	5590253	CFGEntryNode	ENTRY		5590171		True				
ANR	5590254	CFGExitNode	EXIT		5590171		True				
ANR	5590255	Symbol	NUM_ELEMENTS		5590171						
ANR	5590256	Symbol	NULL		5590171						
ANR	5590257	Symbol	hroot		5590171						
ANR	5590258	Symbol	aMap		5590171						
ANR	5590259	Symbol	aMap [ ix ] . key		5590171						
ANR	5590260	Symbol	* ix		5590171						
ANR	5590261	Symbol	* aMap		5590171						
ANR	5590262	Symbol	aMap [ ix ] . psz		5590171						
ANR	5590263	Symbol	ix		5590171						
ANR	5590264	Function	GetLastErrMessage	169:0:5081:5602							
ANR	5590265	FunctionDef	"GetLastErrMessage (int err , char * szMsg , int cchMsg)"		5590264	0					
ANR	5590266	CompoundStatement		170:0:5154:5602	5590264	0					
ANR	5590267	IdentifierDeclStatement	"int cch = FormatMessage ( FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS , NULL , err , MAKELANGID ( LANG_NEUTRAL , SUBLANG_DEFAULT ) , szMsg , cchMsg , NULL ) ;"	171:1:5157:5355	5590264	0	True				
ANR	5590268	IdentifierDecl	"cch = FormatMessage ( FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS , NULL , err , MAKELANGID ( LANG_NEUTRAL , SUBLANG_DEFAULT ) , szMsg , cchMsg , NULL )"		5590264	0					
ANR	5590269	IdentifierDeclType	int		5590264	0					
ANR	5590270	Identifier	cch		5590264	1					
ANR	5590271	AssignmentExpression	"cch = FormatMessage ( FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS , NULL , err , MAKELANGID ( LANG_NEUTRAL , SUBLANG_DEFAULT ) , szMsg , cchMsg , NULL )"		5590264	2		=			
ANR	5590272	Identifier	cch		5590264	0					
ANR	5590273	CallExpression	"FormatMessage ( FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS , NULL , err , MAKELANGID ( LANG_NEUTRAL , SUBLANG_DEFAULT ) , szMsg , cchMsg , NULL )"		5590264	1					
ANR	5590274	Callee	FormatMessage		5590264	0					
ANR	5590275	Identifier	FormatMessage		5590264	0					
ANR	5590276	ArgumentList	FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS		5590264	1					
ANR	5590277	Argument	FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS		5590264	0					
ANR	5590278	InclusiveOrExpression	FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS		5590264	0		|			
ANR	5590279	Identifier	FORMAT_MESSAGE_FROM_SYSTEM		5590264	0					
ANR	5590280	Identifier	FORMAT_MESSAGE_IGNORE_INSERTS		5590264	1					
ANR	5590281	Argument	NULL		5590264	1					
ANR	5590282	Identifier	NULL		5590264	0					
ANR	5590283	Argument	err		5590264	2					
ANR	5590284	Identifier	err		5590264	0					
ANR	5590285	Argument	"MAKELANGID ( LANG_NEUTRAL , SUBLANG_DEFAULT )"		5590264	3					
ANR	5590286	CallExpression	"MAKELANGID ( LANG_NEUTRAL , SUBLANG_DEFAULT )"		5590264	0					
ANR	5590287	Callee	MAKELANGID		5590264	0					
ANR	5590288	Identifier	MAKELANGID		5590264	0					
ANR	5590289	ArgumentList	LANG_NEUTRAL		5590264	1					
ANR	5590290	Argument	LANG_NEUTRAL		5590264	0					
ANR	5590291	Identifier	LANG_NEUTRAL		5590264	0					
ANR	5590292	Argument	SUBLANG_DEFAULT		5590264	1					
ANR	5590293	Identifier	SUBLANG_DEFAULT		5590264	0					
ANR	5590294	Argument	szMsg		5590264	4					
ANR	5590295	Identifier	szMsg		5590264	0					
ANR	5590296	Argument	cchMsg		5590264	5					
ANR	5590297	Identifier	cchMsg		5590264	0					
ANR	5590298	Argument	NULL		5590264	6					
ANR	5590299	Identifier	NULL		5590264	0					
ANR	5590300	IfStatement	if ( cch > 0 )		5590264	1					
ANR	5590301	Condition	cch > 0	179:5:5362:5368	5590264	0	True				
ANR	5590302	RelationalExpression	cch > 0		5590264	0		>			
ANR	5590303	Identifier	cch		5590264	0					
ANR	5590304	PrimaryExpression	0		5590264	1					
ANR	5590305	CompoundStatement		11:1:217:217	5590264	1					
ANR	5590306	WhileStatement	while ( cch > 0 && ( szMsg [ cch - 1 ] == '\\r' || szMsg [ cch - 1 ] == '\\n' ) )		5590264	0					
ANR	5590307	Condition	cch > 0 && ( szMsg [ cch - 1 ] == '\\r' || szMsg [ cch - 1 ] == '\\n' )	183:9:5410:5466	5590264	0	True				
ANR	5590308	AndExpression	cch > 0 && ( szMsg [ cch - 1 ] == '\\r' || szMsg [ cch - 1 ] == '\\n' )		5590264	0		&&			
ANR	5590309	RelationalExpression	cch > 0		5590264	0		>			
ANR	5590310	Identifier	cch		5590264	0					
ANR	5590311	PrimaryExpression	0		5590264	1					
ANR	5590312	OrExpression	szMsg [ cch - 1 ] == '\\r' || szMsg [ cch - 1 ] == '\\n'		5590264	1		||			
ANR	5590313	EqualityExpression	szMsg [ cch - 1 ] == '\\r'		5590264	0		==			
ANR	5590314	ArrayIndexing	szMsg [ cch - 1 ]		5590264	0					
ANR	5590315	Identifier	szMsg		5590264	0					
ANR	5590316	AdditiveExpression	cch - 1		5590264	1		-			
ANR	5590317	Identifier	cch		5590264	0					
ANR	5590318	PrimaryExpression	1		5590264	1					
ANR	5590319	PrimaryExpression	'\\r'		5590264	1					
ANR	5590320	EqualityExpression	szMsg [ cch - 1 ] == '\\n'		5590264	1		==			
ANR	5590321	ArrayIndexing	szMsg [ cch - 1 ]		5590264	0					
ANR	5590322	Identifier	szMsg		5590264	0					
ANR	5590323	AdditiveExpression	cch - 1		5590264	1		-			
ANR	5590324	Identifier	cch		5590264	0					
ANR	5590325	PrimaryExpression	1		5590264	1					
ANR	5590326	PrimaryExpression	'\\n'		5590264	1					
ANR	5590327	ExpressionStatement	szMsg [ -- cch ] = 0	184:3:5472:5488	5590264	1	True				
ANR	5590328	AssignmentExpression	szMsg [ -- cch ] = 0		5590264	0		=			
ANR	5590329	ArrayIndexing	szMsg [ -- cch ]		5590264	0					
ANR	5590330	Identifier	szMsg		5590264	0					
ANR	5590331	UnaryExpression	-- cch		5590264	1					
ANR	5590332	IncDec	--		5590264	0					
ANR	5590333	Identifier	cch		5590264	1					
ANR	5590334	PrimaryExpression	0		5590264	1					
ANR	5590335	ElseStatement	else		5590264	0					
ANR	5590336	CompoundStatement		18:1:345:345	5590264	0					
ANR	5590337	ExpressionStatement	"wsprintf ( szMsg , ""0x%X"" , err )"	189:2:5553:5581	5590264	0	True				
ANR	5590338	CallExpression	"wsprintf ( szMsg , ""0x%X"" , err )"		5590264	0					
ANR	5590339	Callee	wsprintf		5590264	0					
ANR	5590340	Identifier	wsprintf		5590264	0					
ANR	5590341	ArgumentList	szMsg		5590264	1					
ANR	5590342	Argument	szMsg		5590264	0					
ANR	5590343	Identifier	szMsg		5590264	0					
ANR	5590344	Argument	"""0x%X"""		5590264	1					
ANR	5590345	PrimaryExpression	"""0x%X"""		5590264	0					
ANR	5590346	Argument	err		5590264	2					
ANR	5590347	Identifier	err		5590264	0					
ANR	5590348	ReturnStatement	return szMsg ;	192:1:5588:5600	5590264	2	True				
ANR	5590349	Identifier	szMsg		5590264	0					
ANR	5590350	ReturnType	static const char *		5590264	1					
ANR	5590351	Identifier	GetLastErrMessage		5590264	2					
ANR	5590352	ParameterList	"int err , char * szMsg , int cchMsg"		5590264	3					
ANR	5590353	Parameter	int err	169:38:5119:5125	5590264	0	True				
ANR	5590354	ParameterType	int		5590264	0					
ANR	5590355	Identifier	err		5590264	1					
ANR	5590356	Parameter	char * szMsg	169:47:5128:5139	5590264	1	True				
ANR	5590357	ParameterType	char *		5590264	0					
ANR	5590358	Identifier	szMsg		5590264	1					
ANR	5590359	Parameter	int cchMsg	169:61:5142:5151	5590264	2	True				
ANR	5590360	ParameterType	int		5590264	0					
ANR	5590361	Identifier	cchMsg		5590264	1					
ANR	5590362	CFGEntryNode	ENTRY		5590264		True				
ANR	5590363	CFGExitNode	EXIT		5590264		True				
ANR	5590364	Symbol	FormatMessage		5590264						
ANR	5590365	Symbol	NULL		5590264						
ANR	5590366	Symbol	FORMAT_MESSAGE_IGNORE_INSERTS		5590264						
ANR	5590367	Symbol	err		5590264						
ANR	5590368	Symbol	LANG_NEUTRAL		5590264						
ANR	5590369	Symbol	cch		5590264						
ANR	5590370	Symbol	cchMsg		5590264						
ANR	5590371	Symbol	* szMsg		5590264						
ANR	5590372	Symbol	* cch		5590264						
ANR	5590373	Symbol	MAKELANGID		5590264						
ANR	5590374	Symbol	szMsg		5590264						
ANR	5590375	Symbol	SUBLANG_DEFAULT		5590264						
ANR	5590376	Symbol	FORMAT_MESSAGE_FROM_SYSTEM		5590264						
ANR	5590377	Function	get_windows_reg_value	198:0:5684:13342							
ANR	5590378	FunctionDef	"get_windows_reg_value (const char * pszRegKey , const char * pszValueName , int options)"		5590377	0					
ANR	5590379	CompoundStatement		202:0:5801:13342	5590377	0					
ANR	5590380	IdentifierDeclStatement	char * value = NULL ;	203:1:5804:5823	5590377	0	True				
ANR	5590381	IdentifierDecl	* value = NULL		5590377	0					
ANR	5590382	IdentifierDeclType	char *		5590377	0					
ANR	5590383	Identifier	value		5590377	1					
ANR	5590384	AssignmentExpression	* value = NULL		5590377	2		=			
ANR	5590385	Identifier	NULL		5590377	0					
ANR	5590386	Identifier	NULL		5590377	1					
ANR	5590387	IdentifierDeclStatement	char * pszTemp = NULL ;	204:1:5863:5884	5590377	1	True				
ANR	5590388	IdentifierDecl	* pszTemp = NULL		5590377	0					
ANR	5590389	IdentifierDeclType	char *		5590377	0					
ANR	5590390	Identifier	pszTemp		5590377	1					
ANR	5590391	AssignmentExpression	* pszTemp = NULL		5590377	2		=			
ANR	5590392	Identifier	NULL		5590377	0					
ANR	5590393	Identifier	NULL		5590377	1					
ANR	5590394	IdentifierDeclStatement	int cch = lstrlen ( pszRegKey ) ;	205:1:5926:5954	5590377	2	True				
ANR	5590395	IdentifierDecl	cch = lstrlen ( pszRegKey )		5590377	0					
ANR	5590396	IdentifierDeclType	int		5590377	0					
ANR	5590397	Identifier	cch		5590377	1					
ANR	5590398	AssignmentExpression	cch = lstrlen ( pszRegKey )		5590377	2		=			
ANR	5590399	Identifier	cch		5590377	0					
ANR	5590400	CallExpression	lstrlen ( pszRegKey )		5590377	1					
ANR	5590401	Callee	lstrlen		5590377	0					
ANR	5590402	Identifier	lstrlen		5590377	0					
ANR	5590403	ArgumentList	pszRegKey		5590377	1					
ANR	5590404	Argument	pszRegKey		5590377	0					
ANR	5590405	Identifier	pszRegKey		5590377	0					
ANR	5590406	IdentifierDeclStatement	int ixStart = 0 ;	207:1:5958:5973	5590377	3	True				
ANR	5590407	IdentifierDecl	ixStart = 0		5590377	0					
ANR	5590408	IdentifierDeclType	int		5590377	0					
ANR	5590409	Identifier	ixStart		5590377	1					
ANR	5590410	AssignmentExpression	ixStart = 0		5590377	2		=			
ANR	5590411	Identifier	ixStart		5590377	0					
ANR	5590412	PrimaryExpression	0		5590377	1					
ANR	5590413	IdentifierDeclStatement	"HKEY hroot = parse_hive_prefix ( pszRegKey , cch , & ixStart ) ;"	208:1:5977:6033	5590377	4	True				
ANR	5590414	IdentifierDecl	"hroot = parse_hive_prefix ( pszRegKey , cch , & ixStart )"		5590377	0					
ANR	5590415	IdentifierDeclType	HKEY		5590377	0					
ANR	5590416	Identifier	hroot		5590377	1					
ANR	5590417	AssignmentExpression	"hroot = parse_hive_prefix ( pszRegKey , cch , & ixStart )"		5590377	2		=			
ANR	5590418	Identifier	hroot		5590377	0					
ANR	5590419	CallExpression	"parse_hive_prefix ( pszRegKey , cch , & ixStart )"		5590377	1					
ANR	5590420	Callee	parse_hive_prefix		5590377	0					
ANR	5590421	Identifier	parse_hive_prefix		5590377	0					
ANR	5590422	ArgumentList	pszRegKey		5590377	1					
ANR	5590423	Argument	pszRegKey		5590377	0					
ANR	5590424	Identifier	pszRegKey		5590377	0					
ANR	5590425	Argument	cch		5590377	1					
ANR	5590426	Identifier	cch		5590377	0					
ANR	5590427	Argument	& ixStart		5590377	2					
ANR	5590428	UnaryOperationExpression	& ixStart		5590377	0					
ANR	5590429	UnaryOperator	&		5590377	0					
ANR	5590430	Identifier	ixStart		5590377	1					
ANR	5590431	IfStatement	if ( hroot )		5590377	5					
ANR	5590432	Condition	hroot	209:5:6040:6044	5590377	0	True				
ANR	5590433	Identifier	hroot		5590377	0					
ANR	5590434	CompoundStatement		9:1:246:246	5590377	1					
ANR	5590435	ExpressionStatement	pszRegKey += ixStart	211:2:6052:6072	5590377	0	True				
ANR	5590436	AssignmentExpression	pszRegKey += ixStart		5590377	0		+=			
ANR	5590437	Identifier	pszRegKey		5590377	0					
ANR	5590438	Identifier	ixStart		5590377	1					
ANR	5590439	IfStatement	if ( pszRegKey [ 0 ] == '\\\\' )		5590377	1					
ANR	5590440	Condition	pszRegKey [ 0 ] == '\\\\'	212:6:6080:6099	5590377	0	True				
ANR	5590441	EqualityExpression	pszRegKey [ 0 ] == '\\\\'		5590377	0		==			
ANR	5590442	ArrayIndexing	pszRegKey [ 0 ]		5590377	0					
ANR	5590443	Identifier	pszRegKey		5590377	0					
ANR	5590444	PrimaryExpression	0		5590377	1					
ANR	5590445	PrimaryExpression	'\\\\'		5590377	1					
ANR	5590446	ExpressionStatement	++ pszRegKey	213:3:6105:6116	5590377	1	True				
ANR	5590447	UnaryExpression	++ pszRegKey		5590377	0					
ANR	5590448	IncDec	++		5590377	0					
ANR	5590449	Identifier	pszRegKey		5590377	1					
ANR	5590450	IfStatement	if ( ! pszRegKey [ 0 ] && pszValueName )		5590377	2					
ANR	5590451	Condition	! pszRegKey [ 0 ] && pszValueName	217:7:6318:6347	5590377	0	True				
ANR	5590452	AndExpression	! pszRegKey [ 0 ] && pszValueName		5590377	0		&&			
ANR	5590453	UnaryOperationExpression	! pszRegKey [ 0 ]		5590377	0					
ANR	5590454	UnaryOperator	!		5590377	0					
ANR	5590455	ArrayIndexing	pszRegKey [ 0 ]		5590377	1					
ANR	5590456	Identifier	pszRegKey		5590377	0					
ANR	5590457	PrimaryExpression	0		5590377	1					
ANR	5590458	Identifier	pszValueName		5590377	1					
ANR	5590459	CompoundStatement		17:2:550:550	5590377	1					
ANR	5590460	ExpressionStatement	pszRegKey = pszValueName	219:3:6357:6381	5590377	0	True				
ANR	5590461	AssignmentExpression	pszRegKey = pszValueName		5590377	0		=			
ANR	5590462	Identifier	pszRegKey		5590377	0					
ANR	5590463	Identifier	pszValueName		5590377	1					
ANR	5590464	ExpressionStatement	"pszValueName = """""	220:3:6386:6403	5590377	1	True				
ANR	5590465	AssignmentExpression	"pszValueName = """""		5590377	0		=			
ANR	5590466	Identifier	pszValueName		5590377	0					
ANR	5590467	PrimaryExpression	""""""		5590377	1					
ANR	5590468	ElseStatement	else		5590377	0					
ANR	5590469	CompoundStatement		23:1:617:617	5590377	0					
ANR	5590470	ExpressionStatement	hroot = HKEY_LOCAL_MACHINE	225:2:6423:6449	5590377	0	True				
ANR	5590471	AssignmentExpression	hroot = HKEY_LOCAL_MACHINE		5590377	0		=			
ANR	5590472	Identifier	hroot		5590377	0					
ANR	5590473	Identifier	HKEY_LOCAL_MACHINE		5590377	1					
ANR	5590474	IfStatement	if ( HKEY_PERFORMANCE_DATA == hroot || HKEY_PERFORMANCE_TEXT == hroot || HKEY_PERFORMANCE_NLSTEXT == hroot )		5590377	6					
ANR	5590475	Condition	HKEY_PERFORMANCE_DATA == hroot || HKEY_PERFORMANCE_TEXT == hroot || HKEY_PERFORMANCE_NLSTEXT == hroot	228:5:6460:6564	5590377	0	True				
ANR	5590476	OrExpression	HKEY_PERFORMANCE_DATA == hroot || HKEY_PERFORMANCE_TEXT == hroot || HKEY_PERFORMANCE_NLSTEXT == hroot		5590377	0		||			
ANR	5590477	EqualityExpression	HKEY_PERFORMANCE_DATA == hroot		5590377	0		==			
ANR	5590478	Identifier	HKEY_PERFORMANCE_DATA		5590377	0					
ANR	5590479	Identifier	hroot		5590377	1					
ANR	5590480	OrExpression	HKEY_PERFORMANCE_TEXT == hroot || HKEY_PERFORMANCE_NLSTEXT == hroot		5590377	1		||			
ANR	5590481	EqualityExpression	HKEY_PERFORMANCE_TEXT == hroot		5590377	0		==			
ANR	5590482	Identifier	HKEY_PERFORMANCE_TEXT		5590377	0					
ANR	5590483	Identifier	hroot		5590377	1					
ANR	5590484	EqualityExpression	HKEY_PERFORMANCE_NLSTEXT == hroot		5590377	1		==			
ANR	5590485	Identifier	HKEY_PERFORMANCE_NLSTEXT		5590377	0					
ANR	5590486	Identifier	hroot		5590377	1					
ANR	5590487	CompoundStatement		30:1:766:766	5590377	1					
ANR	5590488	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""get_windows_reg_value() does not support \\""%s\\\\%s\\""\\n"" , root_key_name ( hroot ) , pszRegKey )"	232:2:6572:6693	5590377	0	True				
ANR	5590489	CallExpression	"dprintf ( D_FULLDEBUG , ""get_windows_reg_value() does not support \\""%s\\\\%s\\""\\n"" , root_key_name ( hroot ) , pszRegKey )"		5590377	0					
ANR	5590490	Callee	dprintf		5590377	0					
ANR	5590491	Identifier	dprintf		5590377	0					
ANR	5590492	ArgumentList	D_FULLDEBUG		5590377	1					
ANR	5590493	Argument	D_FULLDEBUG		5590377	0					
ANR	5590494	Identifier	D_FULLDEBUG		5590377	0					
ANR	5590495	Argument	"""get_windows_reg_value() does not support \\""%s\\\\%s\\""\\n"""		5590377	1					
ANR	5590496	PrimaryExpression	"""get_windows_reg_value() does not support \\""%s\\\\%s\\""\\n"""		5590377	0					
ANR	5590497	Argument	root_key_name ( hroot )		5590377	2					
ANR	5590498	CallExpression	root_key_name ( hroot )		5590377	0					
ANR	5590499	Callee	root_key_name		5590377	0					
ANR	5590500	Identifier	root_key_name		5590377	0					
ANR	5590501	ArgumentList	hroot		5590377	1					
ANR	5590502	Argument	hroot		5590377	0					
ANR	5590503	Identifier	hroot		5590377	0					
ANR	5590504	Argument	pszRegKey		5590377	3					
ANR	5590505	Identifier	pszRegKey		5590377	0					
ANR	5590506	ReturnStatement	return NULL ;	235:2:6697:6708	5590377	1	True				
ANR	5590507	Identifier	NULL		5590377	0					
ANR	5590508	IdentifierDeclStatement	int force = 0 ;	240:1:6789:6802	5590377	7	True				
ANR	5590509	IdentifierDecl	force = 0		5590377	0					
ANR	5590510	IdentifierDeclType	int		5590377	0					
ANR	5590511	Identifier	force		5590377	1					
ANR	5590512	AssignmentExpression	force = 0		5590377	2		=			
ANR	5590513	Identifier	force		5590377	0					
ANR	5590514	PrimaryExpression	0		5590377	1					
ANR	5590515	IfStatement	if ( ( options & WINREG_OPT_F_WOW32 ) || ( options & KEY_WOW64_32KEY ) )		5590377	8					
ANR	5590516	Condition	( options & WINREG_OPT_F_WOW32 ) || ( options & KEY_WOW64_32KEY )	241:5:6809:6869	5590377	0	True				
ANR	5590517	OrExpression	( options & WINREG_OPT_F_WOW32 ) || ( options & KEY_WOW64_32KEY )		5590377	0		||			
ANR	5590518	BitAndExpression	options & WINREG_OPT_F_WOW32		5590377	0		&			
ANR	5590519	Identifier	options		5590377	0					
ANR	5590520	Identifier	WINREG_OPT_F_WOW32		5590377	1					
ANR	5590521	BitAndExpression	options & KEY_WOW64_32KEY		5590377	1		&			
ANR	5590522	Identifier	options		5590377	0					
ANR	5590523	Identifier	KEY_WOW64_32KEY		5590377	1					
ANR	5590524	ExpressionStatement	force = KEY_WOW64_32KEY	242:2:6874:6897	5590377	1	True				
ANR	5590525	AssignmentExpression	force = KEY_WOW64_32KEY		5590377	0		=			
ANR	5590526	Identifier	force		5590377	0					
ANR	5590527	Identifier	KEY_WOW64_32KEY		5590377	1					
ANR	5590528	ElseStatement	else		5590377	0					
ANR	5590529	IfStatement	if ( ( options & WINREG_OPT_F_WOW64 ) || ( options & KEY_WOW64_64KEY ) )		5590377	0					
ANR	5590530	Condition	( options & WINREG_OPT_F_WOW64 ) || ( options & KEY_WOW64_64KEY )	243:10:6909:6969	5590377	0	True				
ANR	5590531	OrExpression	( options & WINREG_OPT_F_WOW64 ) || ( options & KEY_WOW64_64KEY )		5590377	0		||			
ANR	5590532	BitAndExpression	options & WINREG_OPT_F_WOW64		5590377	0		&			
ANR	5590533	Identifier	options		5590377	0					
ANR	5590534	Identifier	WINREG_OPT_F_WOW64		5590377	1					
ANR	5590535	BitAndExpression	options & KEY_WOW64_64KEY		5590377	1		&			
ANR	5590536	Identifier	options		5590377	0					
ANR	5590537	Identifier	KEY_WOW64_64KEY		5590377	1					
ANR	5590538	ExpressionStatement	force = KEY_WOW64_64KEY	244:2:6974:6997	5590377	1	True				
ANR	5590539	AssignmentExpression	force = KEY_WOW64_64KEY		5590377	0		=			
ANR	5590540	Identifier	force		5590377	0					
ANR	5590541	Identifier	KEY_WOW64_64KEY		5590377	1					
ANR	5590542	IdentifierDeclStatement	bool fAutoEnumValues = ( ( options & WINREG_OPT_F_AUTO_ENUM_VALUES ) != 0 ) ;	246:1:7001:7072	5590377	9	True				
ANR	5590543	IdentifierDecl	fAutoEnumValues = ( ( options & WINREG_OPT_F_AUTO_ENUM_VALUES ) != 0 )		5590377	0					
ANR	5590544	IdentifierDeclType	bool		5590377	0					
ANR	5590545	Identifier	fAutoEnumValues		5590377	1					
ANR	5590546	AssignmentExpression	fAutoEnumValues = ( ( options & WINREG_OPT_F_AUTO_ENUM_VALUES ) != 0 )		5590377	2		=			
ANR	5590547	Identifier	fAutoEnumValues		5590377	0					
ANR	5590548	EqualityExpression	( options & WINREG_OPT_F_AUTO_ENUM_VALUES ) != 0		5590377	1		!=			
ANR	5590549	BitAndExpression	options & WINREG_OPT_F_AUTO_ENUM_VALUES		5590377	0		&			
ANR	5590550	Identifier	options		5590377	0					
ANR	5590551	Identifier	WINREG_OPT_F_AUTO_ENUM_VALUES		5590377	1					
ANR	5590552	PrimaryExpression	0		5590377	1					
ANR	5590553	IdentifierDeclStatement	bool fEnumSubkeys = ( ( options & WINREG_OPT_F_ENUM_SUBKEYS ) != 0 ) ;	247:1:7075:7139	5590377	10	True				
ANR	5590554	IdentifierDecl	fEnumSubkeys = ( ( options & WINREG_OPT_F_ENUM_SUBKEYS ) != 0 )		5590377	0					
ANR	5590555	IdentifierDeclType	bool		5590377	0					
ANR	5590556	Identifier	fEnumSubkeys		5590377	1					
ANR	5590557	AssignmentExpression	fEnumSubkeys = ( ( options & WINREG_OPT_F_ENUM_SUBKEYS ) != 0 )		5590377	2		=			
ANR	5590558	Identifier	fEnumSubkeys		5590377	0					
ANR	5590559	EqualityExpression	( options & WINREG_OPT_F_ENUM_SUBKEYS ) != 0		5590377	1		!=			
ANR	5590560	BitAndExpression	options & WINREG_OPT_F_ENUM_SUBKEYS		5590377	0		&			
ANR	5590561	Identifier	options		5590377	0					
ANR	5590562	Identifier	WINREG_OPT_F_ENUM_SUBKEYS		5590377	1					
ANR	5590563	PrimaryExpression	0		5590377	1					
ANR	5590564	IdentifierDeclStatement	bool fEnumValues = ( ( options & WINREG_OPT_F_ENUM_VALUES ) != 0 ) ;	248:1:7142:7204	5590377	11	True				
ANR	5590565	IdentifierDecl	fEnumValues = ( ( options & WINREG_OPT_F_ENUM_VALUES ) != 0 )		5590377	0					
ANR	5590566	IdentifierDeclType	bool		5590377	0					
ANR	5590567	Identifier	fEnumValues		5590377	1					
ANR	5590568	AssignmentExpression	fEnumValues = ( ( options & WINREG_OPT_F_ENUM_VALUES ) != 0 )		5590377	2		=			
ANR	5590569	Identifier	fEnumValues		5590377	0					
ANR	5590570	EqualityExpression	( options & WINREG_OPT_F_ENUM_VALUES ) != 0		5590377	1		!=			
ANR	5590571	BitAndExpression	options & WINREG_OPT_F_ENUM_VALUES		5590377	0		&			
ANR	5590572	Identifier	options		5590377	0					
ANR	5590573	Identifier	WINREG_OPT_F_ENUM_VALUES		5590377	1					
ANR	5590574	PrimaryExpression	0		5590377	1					
ANR	5590575	IdentifierDeclStatement	HKEY hkey = NULL ;	252:1:7237:7253	5590377	12	True				
ANR	5590576	IdentifierDecl	hkey = NULL		5590377	0					
ANR	5590577	IdentifierDeclType	HKEY		5590377	0					
ANR	5590578	Identifier	hkey		5590377	1					
ANR	5590579	AssignmentExpression	hkey = NULL		5590377	2		=			
ANR	5590580	Identifier	NULL		5590377	0					
ANR	5590581	Identifier	NULL		5590377	1					
ANR	5590582	IdentifierDeclStatement	"LONG lres = RegOpenKeyEx ( hroot , pszRegKey , 0 , KEY_READ | force , & hkey ) ;"	253:1:7256:7326	5590377	13	True				
ANR	5590583	IdentifierDecl	"lres = RegOpenKeyEx ( hroot , pszRegKey , 0 , KEY_READ | force , & hkey )"		5590377	0					
ANR	5590584	IdentifierDeclType	LONG		5590377	0					
ANR	5590585	Identifier	lres		5590377	1					
ANR	5590586	AssignmentExpression	"lres = RegOpenKeyEx ( hroot , pszRegKey , 0 , KEY_READ | force , & hkey )"		5590377	2		=			
ANR	5590587	Identifier	lres		5590377	0					
ANR	5590588	CallExpression	"RegOpenKeyEx ( hroot , pszRegKey , 0 , KEY_READ | force , & hkey )"		5590377	1					
ANR	5590589	Callee	RegOpenKeyEx		5590377	0					
ANR	5590590	Identifier	RegOpenKeyEx		5590377	0					
ANR	5590591	ArgumentList	hroot		5590377	1					
ANR	5590592	Argument	hroot		5590377	0					
ANR	5590593	Identifier	hroot		5590377	0					
ANR	5590594	Argument	pszRegKey		5590377	1					
ANR	5590595	Identifier	pszRegKey		5590377	0					
ANR	5590596	Argument	0		5590377	2					
ANR	5590597	PrimaryExpression	0		5590377	0					
ANR	5590598	Argument	KEY_READ | force		5590377	3					
ANR	5590599	InclusiveOrExpression	KEY_READ | force		5590377	0		|			
ANR	5590600	Identifier	KEY_READ		5590377	0					
ANR	5590601	Identifier	force		5590377	1					
ANR	5590602	Argument	& hkey		5590377	4					
ANR	5590603	UnaryOperationExpression	& hkey		5590377	0					
ANR	5590604	UnaryOperator	&		5590377	0					
ANR	5590605	Identifier	hkey		5590377	1					
ANR	5590606	IfStatement	if ( ( ERROR_FILE_NOT_FOUND == lres ) && ! pszValueName )		5590377	14					
ANR	5590607	Condition	( ERROR_FILE_NOT_FOUND == lres ) && ! pszValueName	260:5:7628:7675	5590377	0	True				
ANR	5590608	AndExpression	( ERROR_FILE_NOT_FOUND == lres ) && ! pszValueName		5590377	0		&&			
ANR	5590609	EqualityExpression	ERROR_FILE_NOT_FOUND == lres		5590377	0		==			
ANR	5590610	Identifier	ERROR_FILE_NOT_FOUND		5590377	0					
ANR	5590611	Identifier	lres		5590377	1					
ANR	5590612	UnaryOperationExpression	! pszValueName		5590377	1					
ANR	5590613	UnaryOperator	!		5590377	0					
ANR	5590614	Identifier	pszValueName		5590377	1					
ANR	5590615	CompoundStatement		62:2:1958:1997	5590377	1					
ANR	5590616	ExpressionStatement	pszTemp = strdup ( pszRegKey )	262:2:7683:7710	5590377	0	True				
ANR	5590617	AssignmentExpression	pszTemp = strdup ( pszRegKey )		5590377	0		=			
ANR	5590618	Identifier	pszTemp		5590377	0					
ANR	5590619	CallExpression	strdup ( pszRegKey )		5590377	1					
ANR	5590620	Callee	strdup		5590377	0					
ANR	5590621	Identifier	strdup		5590377	0					
ANR	5590622	ArgumentList	pszRegKey		5590377	1					
ANR	5590623	Argument	pszRegKey		5590377	0					
ANR	5590624	Identifier	pszRegKey		5590377	0					
ANR	5590625	IdentifierDeclStatement	"char * pszName = strrchr ( pszTemp , '\\\\' ) ;"	263:2:7760:7799	5590377	1	True				
ANR	5590626	IdentifierDecl	"* pszName = strrchr ( pszTemp , '\\\\' )"		5590377	0					
ANR	5590627	IdentifierDeclType	char *		5590377	0					
ANR	5590628	Identifier	pszName		5590377	1					
ANR	5590629	AssignmentExpression	"* pszName = strrchr ( pszTemp , '\\\\' )"		5590377	2		=			
ANR	5590630	Identifier	pszName		5590377	0					
ANR	5590631	CallExpression	"strrchr ( pszTemp , '\\\\' )"		5590377	1					
ANR	5590632	Callee	strrchr		5590377	0					
ANR	5590633	Identifier	strrchr		5590377	0					
ANR	5590634	ArgumentList	pszTemp		5590377	1					
ANR	5590635	Argument	pszTemp		5590377	0					
ANR	5590636	Identifier	pszTemp		5590377	0					
ANR	5590637	Argument	'\\\\'		5590377	1					
ANR	5590638	PrimaryExpression	'\\\\'		5590377	0					
ANR	5590639	IfStatement	if ( pszName )		5590377	2					
ANR	5590640	Condition	pszName	264:6:7807:7813	5590377	0	True				
ANR	5590641	Identifier	pszName		5590377	0					
ANR	5590642	CompoundStatement		64:2:2016:2016	5590377	1					
ANR	5590643	ExpressionStatement	* pszName ++ = 0	266:11:7831:7845	5590377	0	True				
ANR	5590644	AssignmentExpression	* pszName ++ = 0		5590377	0		=			
ANR	5590645	UnaryOperationExpression	* pszName ++		5590377	0					
ANR	5590646	UnaryOperator	*		5590377	0					
ANR	5590647	PostIncDecOperationExpression	pszName ++		5590377	1					
ANR	5590648	Identifier	pszName		5590377	0					
ANR	5590649	IncDec	++		5590377	1					
ANR	5590650	PrimaryExpression	0		5590377	1					
ANR	5590651	ExpressionStatement	"lres = RegOpenKeyEx ( hroot , pszTemp , 0 , KEY_READ | force , & hkey )"	267:3:7850:7913	5590377	1	True				
ANR	5590652	AssignmentExpression	"lres = RegOpenKeyEx ( hroot , pszTemp , 0 , KEY_READ | force , & hkey )"		5590377	0		=			
ANR	5590653	Identifier	lres		5590377	0					
ANR	5590654	CallExpression	"RegOpenKeyEx ( hroot , pszTemp , 0 , KEY_READ | force , & hkey )"		5590377	1					
ANR	5590655	Callee	RegOpenKeyEx		5590377	0					
ANR	5590656	Identifier	RegOpenKeyEx		5590377	0					
ANR	5590657	ArgumentList	hroot		5590377	1					
ANR	5590658	Argument	hroot		5590377	0					
ANR	5590659	Identifier	hroot		5590377	0					
ANR	5590660	Argument	pszTemp		5590377	1					
ANR	5590661	Identifier	pszTemp		5590377	0					
ANR	5590662	Argument	0		5590377	2					
ANR	5590663	PrimaryExpression	0		5590377	0					
ANR	5590664	Argument	KEY_READ | force		5590377	3					
ANR	5590665	InclusiveOrExpression	KEY_READ | force		5590377	0		|			
ANR	5590666	Identifier	KEY_READ		5590377	0					
ANR	5590667	Identifier	force		5590377	1					
ANR	5590668	Argument	& hkey		5590377	4					
ANR	5590669	UnaryOperationExpression	& hkey		5590377	0					
ANR	5590670	UnaryOperator	&		5590377	0					
ANR	5590671	Identifier	hkey		5590377	1					
ANR	5590672	IfStatement	if ( ERROR_SUCCESS == lres )		5590377	2					
ANR	5590673	Condition	ERROR_SUCCESS == lres	268:7:7922:7942	5590377	0	True				
ANR	5590674	EqualityExpression	ERROR_SUCCESS == lres		5590377	0		==			
ANR	5590675	Identifier	ERROR_SUCCESS		5590377	0					
ANR	5590676	Identifier	lres		5590377	1					
ANR	5590677	CompoundStatement		68:3:2146:2146	5590377	1					
ANR	5590678	ExpressionStatement	pszRegKey = pszTemp	270:4:7954:7973	5590377	0	True				
ANR	5590679	AssignmentExpression	pszRegKey = pszTemp		5590377	0		=			
ANR	5590680	Identifier	pszRegKey		5590377	0					
ANR	5590681	Identifier	pszTemp		5590377	1					
ANR	5590682	ExpressionStatement	pszValueName = pszName	271:4:7979:8001	5590377	1	True				
ANR	5590683	AssignmentExpression	pszValueName = pszName		5590377	0		=			
ANR	5590684	Identifier	pszValueName		5590377	0					
ANR	5590685	Identifier	pszName		5590377	1					
ANR	5590686	IfStatement	if ( ERROR_SUCCESS != lres )		5590377	15					
ANR	5590687	Condition	ERROR_SUCCESS != lres	280:5:8177:8197	5590377	0	True				
ANR	5590688	EqualityExpression	ERROR_SUCCESS != lres		5590377	0		!=			
ANR	5590689	Identifier	ERROR_SUCCESS		5590377	0					
ANR	5590690	Identifier	lres		5590377	1					
ANR	5590691	CompoundStatement		80:1:2399:2399	5590377	1					
ANR	5590692	IfStatement	if ( ERROR_FILE_NOT_FOUND == lres )		5590377	0					
ANR	5590693	Condition	ERROR_FILE_NOT_FOUND == lres	282:6:8209:8236	5590377	0	True				
ANR	5590694	EqualityExpression	ERROR_FILE_NOT_FOUND == lres		5590377	0		==			
ANR	5590695	Identifier	ERROR_FILE_NOT_FOUND		5590377	0					
ANR	5590696	Identifier	lres		5590377	1					
ANR	5590697	CompoundStatement		82:2:2439:2439	5590377	1					
ANR	5590698	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""The Registry Key \\""%s\\\\%s\\"" does not exist\\n"" , root_key_name ( hroot ) , pszRegKey )"	285:3:8275:8388	5590377	0	True				
ANR	5590699	CallExpression	"dprintf ( D_FULLDEBUG , ""The Registry Key \\""%s\\\\%s\\"" does not exist\\n"" , root_key_name ( hroot ) , pszRegKey )"		5590377	0					
ANR	5590700	Callee	dprintf		5590377	0					
ANR	5590701	Identifier	dprintf		5590377	0					
ANR	5590702	ArgumentList	D_FULLDEBUG		5590377	1					
ANR	5590703	Argument	D_FULLDEBUG		5590377	0					
ANR	5590704	Identifier	D_FULLDEBUG		5590377	0					
ANR	5590705	Argument	"""The Registry Key \\""%s\\\\%s\\"" does not exist\\n"""		5590377	1					
ANR	5590706	PrimaryExpression	"""The Registry Key \\""%s\\\\%s\\"" does not exist\\n"""		5590377	0					
ANR	5590707	Argument	root_key_name ( hroot )		5590377	2					
ANR	5590708	CallExpression	root_key_name ( hroot )		5590377	0					
ANR	5590709	Callee	root_key_name		5590377	0					
ANR	5590710	Identifier	root_key_name		5590377	0					
ANR	5590711	ArgumentList	hroot		5590377	1					
ANR	5590712	Argument	hroot		5590377	0					
ANR	5590713	Identifier	hroot		5590377	0					
ANR	5590714	Argument	pszRegKey		5590377	3					
ANR	5590715	Identifier	pszRegKey		5590377	0					
ANR	5590716	ElseStatement	else		5590377	0					
ANR	5590717	CompoundStatement		91:3:2670:2690	5590377	0					
ANR	5590718	IdentifierDeclStatement	char szMsg [ MAX_PATH ] ;	292:3:8472:8492	5590377	0	True				
ANR	5590719	IdentifierDecl	szMsg [ MAX_PATH ]		5590377	0					
ANR	5590720	IdentifierDeclType	char [ MAX_PATH ]		5590377	0					
ANR	5590721	Identifier	szMsg		5590377	1					
ANR	5590722	Identifier	MAX_PATH		5590377	2					
ANR	5590723	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to open Registry Key \\""%s\\\\%s\\""\\nReason: %s\\n"" , root_key_name ( hroot ) , pszRegKey , GetLastErrMessage ( GetLastError ( ) , szMsg , NUM_ELEMENTS ( szMsg ) ) )"	293:3:8497:8683	5590377	1	True				
ANR	5590724	CallExpression	"dprintf ( D_ALWAYS , ""Failed to open Registry Key \\""%s\\\\%s\\""\\nReason: %s\\n"" , root_key_name ( hroot ) , pszRegKey , GetLastErrMessage ( GetLastError ( ) , szMsg , NUM_ELEMENTS ( szMsg ) ) )"		5590377	0					
ANR	5590725	Callee	dprintf		5590377	0					
ANR	5590726	Identifier	dprintf		5590377	0					
ANR	5590727	ArgumentList	D_ALWAYS		5590377	1					
ANR	5590728	Argument	D_ALWAYS		5590377	0					
ANR	5590729	Identifier	D_ALWAYS		5590377	0					
ANR	5590730	Argument	"""Failed to open Registry Key \\""%s\\\\%s\\""\\nReason: %s\\n"""		5590377	1					
ANR	5590731	PrimaryExpression	"""Failed to open Registry Key \\""%s\\\\%s\\""\\nReason: %s\\n"""		5590377	0					
ANR	5590732	Argument	root_key_name ( hroot )		5590377	2					
ANR	5590733	CallExpression	root_key_name ( hroot )		5590377	0					
ANR	5590734	Callee	root_key_name		5590377	0					
ANR	5590735	Identifier	root_key_name		5590377	0					
ANR	5590736	ArgumentList	hroot		5590377	1					
ANR	5590737	Argument	hroot		5590377	0					
ANR	5590738	Identifier	hroot		5590377	0					
ANR	5590739	Argument	pszRegKey		5590377	3					
ANR	5590740	Identifier	pszRegKey		5590377	0					
ANR	5590741	Argument	"GetLastErrMessage ( GetLastError ( ) , szMsg , NUM_ELEMENTS ( szMsg ) )"		5590377	4					
ANR	5590742	CallExpression	"GetLastErrMessage ( GetLastError ( ) , szMsg , NUM_ELEMENTS ( szMsg ) )"		5590377	0					
ANR	5590743	Callee	GetLastErrMessage		5590377	0					
ANR	5590744	Identifier	GetLastErrMessage		5590377	0					
ANR	5590745	ArgumentList	GetLastError ( )		5590377	1					
ANR	5590746	Argument	GetLastError ( )		5590377	0					
ANR	5590747	CallExpression	GetLastError ( )		5590377	0					
ANR	5590748	Callee	GetLastError		5590377	0					
ANR	5590749	Identifier	GetLastError		5590377	0					
ANR	5590750	ArgumentList			5590377	1					
ANR	5590751	Argument	szMsg		5590377	1					
ANR	5590752	Identifier	szMsg		5590377	0					
ANR	5590753	Argument	NUM_ELEMENTS ( szMsg )		5590377	2					
ANR	5590754	CallExpression	NUM_ELEMENTS ( szMsg )		5590377	0					
ANR	5590755	Callee	NUM_ELEMENTS		5590377	0					
ANR	5590756	Identifier	NUM_ELEMENTS		5590377	0					
ANR	5590757	ArgumentList	szMsg		5590377	1					
ANR	5590758	Argument	szMsg		5590377	0					
ANR	5590759	Identifier	szMsg		5590377	0					
ANR	5590760	ExpressionStatement	ASSERT ( ! value )	298:2:8691:8707	5590377	1	True				
ANR	5590761	CallExpression	ASSERT ( ! value )		5590377	0					
ANR	5590762	Callee	ASSERT		5590377	0					
ANR	5590763	Identifier	ASSERT		5590377	0					
ANR	5590764	ArgumentList	! value		5590377	1					
ANR	5590765	Argument	! value		5590377	0					
ANR	5590766	UnaryOperationExpression	! value		5590377	0					
ANR	5590767	UnaryOperator	!		5590377	0					
ANR	5590768	Identifier	value		5590377	1					
ANR	5590769	ElseStatement	else		5590377	0					
ANR	5590770	CompoundStatement		103:2:3027:3062	5590377	0					
ANR	5590771	IdentifierDeclStatement	ULARGE_INTEGER uli ;	302:2:8723:8741	5590377	0	True				
ANR	5590772	IdentifierDecl	uli		5590377	0					
ANR	5590773	IdentifierDeclType	ULARGE_INTEGER		5590377	0					
ANR	5590774	Identifier	uli		5590377	1					
ANR	5590775	IdentifierDeclStatement	"DWORD vtype = REG_SZ , cbData = 0 ;"	303:2:8793:8825	5590377	1	True				
ANR	5590776	IdentifierDecl	vtype = REG_SZ		5590377	0					
ANR	5590777	IdentifierDeclType	DWORD		5590377	0					
ANR	5590778	Identifier	vtype		5590377	1					
ANR	5590779	AssignmentExpression	vtype = REG_SZ		5590377	2		=			
ANR	5590780	Identifier	REG_SZ		5590377	0					
ANR	5590781	Identifier	REG_SZ		5590377	1					
ANR	5590782	IdentifierDecl	cbData = 0		5590377	1					
ANR	5590783	IdentifierDeclType	DWORD		5590377	0					
ANR	5590784	Identifier	cbData		5590377	1					
ANR	5590785	AssignmentExpression	cbData = 0		5590377	2		=			
ANR	5590786	Identifier	cbData		5590377	0					
ANR	5590787	PrimaryExpression	0		5590377	1					
ANR	5590788	IdentifierDeclStatement	const char * pszName = pszValueName ;	304:2:8829:8864	5590377	2	True				
ANR	5590789	IdentifierDecl	* pszName = pszValueName		5590377	0					
ANR	5590790	IdentifierDeclType	const char *		5590377	0					
ANR	5590791	Identifier	pszName		5590377	1					
ANR	5590792	AssignmentExpression	* pszName = pszValueName		5590377	2		=			
ANR	5590793	Identifier	pszValueName		5590377	0					
ANR	5590794	Identifier	pszValueName		5590377	1					
ANR	5590795	ExpressionStatement	"lres = RegQueryValueEx ( hkey , pszName , NULL , & vtype , NULL , & cbData )"	305:2:8910:8976	5590377	3	True				
ANR	5590796	AssignmentExpression	"lres = RegQueryValueEx ( hkey , pszName , NULL , & vtype , NULL , & cbData )"		5590377	0		=			
ANR	5590797	Identifier	lres		5590377	0					
ANR	5590798	CallExpression	"RegQueryValueEx ( hkey , pszName , NULL , & vtype , NULL , & cbData )"		5590377	1					
ANR	5590799	Callee	RegQueryValueEx		5590377	0					
ANR	5590800	Identifier	RegQueryValueEx		5590377	0					
ANR	5590801	ArgumentList	hkey		5590377	1					
ANR	5590802	Argument	hkey		5590377	0					
ANR	5590803	Identifier	hkey		5590377	0					
ANR	5590804	Argument	pszName		5590377	1					
ANR	5590805	Identifier	pszName		5590377	0					
ANR	5590806	Argument	NULL		5590377	2					
ANR	5590807	Identifier	NULL		5590377	0					
ANR	5590808	Argument	& vtype		5590377	3					
ANR	5590809	UnaryOperationExpression	& vtype		5590377	0					
ANR	5590810	UnaryOperator	&		5590377	0					
ANR	5590811	Identifier	vtype		5590377	1					
ANR	5590812	Argument	NULL		5590377	4					
ANR	5590813	Identifier	NULL		5590377	0					
ANR	5590814	Argument	& cbData		5590377	5					
ANR	5590815	UnaryOperationExpression	& cbData		5590377	0					
ANR	5590816	UnaryOperator	&		5590377	0					
ANR	5590817	Identifier	cbData		5590377	1					
ANR	5590818	IfStatement	if ( ( ERROR_FILE_NOT_FOUND == lres ) && pszName && pszName [ 0 ] )		5590377	4					
ANR	5590819	Condition	( ERROR_FILE_NOT_FOUND == lres ) && pszName && pszName [ 0 ]	311:6:9201:9255	5590377	0	True				
ANR	5590820	AndExpression	( ERROR_FILE_NOT_FOUND == lres ) && pszName && pszName [ 0 ]		5590377	0		&&			
ANR	5590821	EqualityExpression	ERROR_FILE_NOT_FOUND == lres		5590377	0		==			
ANR	5590822	Identifier	ERROR_FILE_NOT_FOUND		5590377	0					
ANR	5590823	Identifier	lres		5590377	1					
ANR	5590824	AndExpression	pszName && pszName [ 0 ]		5590377	1		&&			
ANR	5590825	Identifier	pszName		5590377	0					
ANR	5590826	ArrayIndexing	pszName [ 0 ]		5590377	1					
ANR	5590827	Identifier	pszName		5590377	0					
ANR	5590828	PrimaryExpression	0		5590377	1					
ANR	5590829	CompoundStatement		113:3:3485:3554	5590377	1					
ANR	5590830	IdentifierDeclStatement	HKEY hkeyT = NULL ;	313:3:9265:9282	5590377	0	True				
ANR	5590831	IdentifierDecl	hkeyT = NULL		5590377	0					
ANR	5590832	IdentifierDeclType	HKEY		5590377	0					
ANR	5590833	Identifier	hkeyT		5590377	1					
ANR	5590834	AssignmentExpression	hkeyT = NULL		5590377	2		=			
ANR	5590835	Identifier	NULL		5590377	0					
ANR	5590836	Identifier	NULL		5590377	1					
ANR	5590837	IdentifierDeclStatement	"LONG lResT = RegOpenKeyEx ( hkey , pszName , 0 , KEY_READ | force , & hkeyT ) ;"	314:3:9287:9356	5590377	1	True				
ANR	5590838	IdentifierDecl	"lResT = RegOpenKeyEx ( hkey , pszName , 0 , KEY_READ | force , & hkeyT )"		5590377	0					
ANR	5590839	IdentifierDeclType	LONG		5590377	0					
ANR	5590840	Identifier	lResT		5590377	1					
ANR	5590841	AssignmentExpression	"lResT = RegOpenKeyEx ( hkey , pszName , 0 , KEY_READ | force , & hkeyT )"		5590377	2		=			
ANR	5590842	Identifier	lResT		5590377	0					
ANR	5590843	CallExpression	"RegOpenKeyEx ( hkey , pszName , 0 , KEY_READ | force , & hkeyT )"		5590377	1					
ANR	5590844	Callee	RegOpenKeyEx		5590377	0					
ANR	5590845	Identifier	RegOpenKeyEx		5590377	0					
ANR	5590846	ArgumentList	hkey		5590377	1					
ANR	5590847	Argument	hkey		5590377	0					
ANR	5590848	Identifier	hkey		5590377	0					
ANR	5590849	Argument	pszName		5590377	1					
ANR	5590850	Identifier	pszName		5590377	0					
ANR	5590851	Argument	0		5590377	2					
ANR	5590852	PrimaryExpression	0		5590377	0					
ANR	5590853	Argument	KEY_READ | force		5590377	3					
ANR	5590854	InclusiveOrExpression	KEY_READ | force		5590377	0		|			
ANR	5590855	Identifier	KEY_READ		5590377	0					
ANR	5590856	Identifier	force		5590377	1					
ANR	5590857	Argument	& hkeyT		5590377	4					
ANR	5590858	UnaryOperationExpression	& hkeyT		5590377	0					
ANR	5590859	UnaryOperator	&		5590377	0					
ANR	5590860	Identifier	hkeyT		5590377	1					
ANR	5590861	IfStatement	if ( ERROR_SUCCESS == lResT )		5590377	2					
ANR	5590862	Condition	ERROR_SUCCESS == lResT	315:7:9366:9387	5590377	0	True				
ANR	5590863	EqualityExpression	ERROR_SUCCESS == lResT		5590377	0		==			
ANR	5590864	Identifier	ERROR_SUCCESS		5590377	0					
ANR	5590865	Identifier	lResT		5590377	1					
ANR	5590866	CompoundStatement		115:3:3591:3591	5590377	1					
ANR	5590867	ExpressionStatement	RegCloseKey ( hkey )	318:4:9473:9490	5590377	0	True				
ANR	5590868	CallExpression	RegCloseKey ( hkey )		5590377	0					
ANR	5590869	Callee	RegCloseKey		5590377	0					
ANR	5590870	Identifier	RegCloseKey		5590377	0					
ANR	5590871	ArgumentList	hkey		5590377	1					
ANR	5590872	Argument	hkey		5590377	0					
ANR	5590873	Identifier	hkey		5590377	0					
ANR	5590874	ExpressionStatement	hkey = hkeyT	319:4:9496:9508	5590377	1	True				
ANR	5590875	AssignmentExpression	hkey = hkeyT		5590377	0		=			
ANR	5590876	Identifier	hkey		5590377	0					
ANR	5590877	Identifier	hkeyT		5590377	1					
ANR	5590878	ExpressionStatement	pszName = NULL	321:4:9561:9575	5590377	2	True				
ANR	5590879	AssignmentExpression	pszName = NULL		5590377	0		=			
ANR	5590880	Identifier	pszName		5590377	0					
ANR	5590881	Identifier	NULL		5590377	1					
ANR	5590882	ExpressionStatement	cbData = 0	322:4:9581:9591	5590377	3	True				
ANR	5590883	AssignmentExpression	cbData = 0		5590377	0		=			
ANR	5590884	Identifier	cbData		5590377	0					
ANR	5590885	PrimaryExpression	0		5590377	1					
ANR	5590886	ExpressionStatement	"lres = RegQueryValueEx ( hkey , pszName , NULL , & vtype , NULL , & cbData )"	323:4:9597:9663	5590377	4	True				
ANR	5590887	AssignmentExpression	"lres = RegQueryValueEx ( hkey , pszName , NULL , & vtype , NULL , & cbData )"		5590377	0		=			
ANR	5590888	Identifier	lres		5590377	0					
ANR	5590889	CallExpression	"RegQueryValueEx ( hkey , pszName , NULL , & vtype , NULL , & cbData )"		5590377	1					
ANR	5590890	Callee	RegQueryValueEx		5590377	0					
ANR	5590891	Identifier	RegQueryValueEx		5590377	0					
ANR	5590892	ArgumentList	hkey		5590377	1					
ANR	5590893	Argument	hkey		5590377	0					
ANR	5590894	Identifier	hkey		5590377	0					
ANR	5590895	Argument	pszName		5590377	1					
ANR	5590896	Identifier	pszName		5590377	0					
ANR	5590897	Argument	NULL		5590377	2					
ANR	5590898	Identifier	NULL		5590377	0					
ANR	5590899	Argument	& vtype		5590377	3					
ANR	5590900	UnaryOperationExpression	& vtype		5590377	0					
ANR	5590901	UnaryOperator	&		5590377	0					
ANR	5590902	Identifier	vtype		5590377	1					
ANR	5590903	Argument	NULL		5590377	4					
ANR	5590904	Identifier	NULL		5590377	0					
ANR	5590905	Argument	& cbData		5590377	5					
ANR	5590906	UnaryOperationExpression	& cbData		5590377	0					
ANR	5590907	UnaryOperator	&		5590377	0					
ANR	5590908	Identifier	cbData		5590377	1					
ANR	5590909	IfStatement	if ( ERROR_MORE_DATA == lres || ERROR_SUCCESS == lres )		5590377	5					
ANR	5590910	Condition	ERROR_MORE_DATA == lres || ERROR_SUCCESS == lres	330:6:9800:9847	5590377	0	True				
ANR	5590911	OrExpression	ERROR_MORE_DATA == lres || ERROR_SUCCESS == lres		5590377	0		||			
ANR	5590912	EqualityExpression	ERROR_MORE_DATA == lres		5590377	0		==			
ANR	5590913	Identifier	ERROR_MORE_DATA		5590377	0					
ANR	5590914	Identifier	lres		5590377	1					
ANR	5590915	EqualityExpression	ERROR_SUCCESS == lres		5590377	1		==			
ANR	5590916	Identifier	ERROR_SUCCESS		5590377	0					
ANR	5590917	Identifier	lres		5590377	1					
ANR	5590918	CompoundStatement		130:2:4050:4050	5590377	1					
ANR	5590919	IfStatement	if ( vtype == REG_MULTI_SZ || vtype == REG_SZ || vtype == REG_EXPAND_SZ || vtype == REG_LINK || vtype == REG_BINARY )		5590377	0					
ANR	5590920	Condition	vtype == REG_MULTI_SZ || vtype == REG_SZ || vtype == REG_EXPAND_SZ || vtype == REG_LINK || vtype == REG_BINARY	332:7:9861:9970	5590377	0	True				
ANR	5590921	OrExpression	vtype == REG_MULTI_SZ || vtype == REG_SZ || vtype == REG_EXPAND_SZ || vtype == REG_LINK || vtype == REG_BINARY		5590377	0		||			
ANR	5590922	EqualityExpression	vtype == REG_MULTI_SZ		5590377	0		==			
ANR	5590923	Identifier	vtype		5590377	0					
ANR	5590924	Identifier	REG_MULTI_SZ		5590377	1					
ANR	5590925	OrExpression	vtype == REG_SZ || vtype == REG_EXPAND_SZ || vtype == REG_LINK || vtype == REG_BINARY		5590377	1		||			
ANR	5590926	EqualityExpression	vtype == REG_SZ		5590377	0		==			
ANR	5590927	Identifier	vtype		5590377	0					
ANR	5590928	Identifier	REG_SZ		5590377	1					
ANR	5590929	OrExpression	vtype == REG_EXPAND_SZ || vtype == REG_LINK || vtype == REG_BINARY		5590377	1		||			
ANR	5590930	EqualityExpression	vtype == REG_EXPAND_SZ		5590377	0		==			
ANR	5590931	Identifier	vtype		5590377	0					
ANR	5590932	Identifier	REG_EXPAND_SZ		5590377	1					
ANR	5590933	OrExpression	vtype == REG_LINK || vtype == REG_BINARY		5590377	1		||			
ANR	5590934	EqualityExpression	vtype == REG_LINK		5590377	0		==			
ANR	5590935	Identifier	vtype		5590377	0					
ANR	5590936	Identifier	REG_LINK		5590377	1					
ANR	5590937	EqualityExpression	vtype == REG_BINARY		5590377	1		==			
ANR	5590938	Identifier	vtype		5590377	0					
ANR	5590939	Identifier	REG_BINARY		5590377	1					
ANR	5590940	CompoundStatement		132:3:4174:4174	5590377	1					
ANR	5590941	ExpressionStatement	value = ( char * ) malloc ( cbData + 1 )	334:4:9982:10013	5590377	0	True				
ANR	5590942	AssignmentExpression	value = ( char * ) malloc ( cbData + 1 )		5590377	0		=			
ANR	5590943	Identifier	value		5590377	0					
ANR	5590944	CastExpression	( char * ) malloc ( cbData + 1 )		5590377	1					
ANR	5590945	CastTarget	char *		5590377	0					
ANR	5590946	CallExpression	malloc ( cbData + 1 )		5590377	1					
ANR	5590947	Callee	malloc		5590377	0					
ANR	5590948	Identifier	malloc		5590377	0					
ANR	5590949	ArgumentList	cbData + 1		5590377	1					
ANR	5590950	Argument	cbData + 1		5590377	0					
ANR	5590951	AdditiveExpression	cbData + 1		5590377	0		+			
ANR	5590952	Identifier	cbData		5590377	0					
ANR	5590953	PrimaryExpression	1		5590377	1					
ANR	5590954	ExpressionStatement	"lres = RegQueryValueEx ( hkey , pszName , NULL , & vtype , ( byte * ) value , & cbData )"	335:4:10020:10094	5590377	1	True				
ANR	5590955	AssignmentExpression	"lres = RegQueryValueEx ( hkey , pszName , NULL , & vtype , ( byte * ) value , & cbData )"		5590377	0		=			
ANR	5590956	Identifier	lres		5590377	0					
ANR	5590957	CallExpression	"RegQueryValueEx ( hkey , pszName , NULL , & vtype , ( byte * ) value , & cbData )"		5590377	1					
ANR	5590958	Callee	RegQueryValueEx		5590377	0					
ANR	5590959	Identifier	RegQueryValueEx		5590377	0					
ANR	5590960	ArgumentList	hkey		5590377	1					
ANR	5590961	Argument	hkey		5590377	0					
ANR	5590962	Identifier	hkey		5590377	0					
ANR	5590963	Argument	pszName		5590377	1					
ANR	5590964	Identifier	pszName		5590377	0					
ANR	5590965	Argument	NULL		5590377	2					
ANR	5590966	Identifier	NULL		5590377	0					
ANR	5590967	Argument	& vtype		5590377	3					
ANR	5590968	UnaryOperationExpression	& vtype		5590377	0					
ANR	5590969	UnaryOperator	&		5590377	0					
ANR	5590970	Identifier	vtype		5590377	1					
ANR	5590971	Argument	( byte * ) value		5590377	4					
ANR	5590972	CastExpression	( byte * ) value		5590377	0					
ANR	5590973	CastTarget	byte *		5590377	0					
ANR	5590974	Identifier	value		5590377	1					
ANR	5590975	Argument	& cbData		5590377	5					
ANR	5590976	UnaryOperationExpression	& cbData		5590377	0					
ANR	5590977	UnaryOperator	&		5590377	0					
ANR	5590978	Identifier	cbData		5590377	1					
ANR	5590979	ElseStatement	else		5590377	0					
ANR	5590980	CompoundStatement		137:3:4310:4310	5590377	0					
ANR	5590981	ExpressionStatement	cbData = sizeof ( uli )	339:4:10118:10138	5590377	0	True				
ANR	5590982	AssignmentExpression	cbData = sizeof ( uli )		5590377	0		=			
ANR	5590983	Identifier	cbData		5590377	0					
ANR	5590984	SizeofExpression	sizeof ( uli )		5590377	1					
ANR	5590985	Sizeof	sizeof		5590377	0					
ANR	5590986	SizeofOperand	uli		5590377	1					
ANR	5590987	ExpressionStatement	uli . QuadPart = 0	340:4:10144:10160	5590377	1	True				
ANR	5590988	AssignmentExpression	uli . QuadPart = 0		5590377	0		=			
ANR	5590989	MemberAccess	uli . QuadPart		5590377	0					
ANR	5590990	Identifier	uli		5590377	0					
ANR	5590991	Identifier	QuadPart		5590377	1					
ANR	5590992	PrimaryExpression	0		5590377	1					
ANR	5590993	ExpressionStatement	"lres = RegQueryValueEx ( hkey , pszName , NULL , & vtype , ( byte * ) & uli , & cbData )"	341:4:10210:10283	5590377	2	True				
ANR	5590994	AssignmentExpression	"lres = RegQueryValueEx ( hkey , pszName , NULL , & vtype , ( byte * ) & uli , & cbData )"		5590377	0		=			
ANR	5590995	Identifier	lres		5590377	0					
ANR	5590996	CallExpression	"RegQueryValueEx ( hkey , pszName , NULL , & vtype , ( byte * ) & uli , & cbData )"		5590377	1					
ANR	5590997	Callee	RegQueryValueEx		5590377	0					
ANR	5590998	Identifier	RegQueryValueEx		5590377	0					
ANR	5590999	ArgumentList	hkey		5590377	1					
ANR	5591000	Argument	hkey		5590377	0					
ANR	5591001	Identifier	hkey		5590377	0					
ANR	5591002	Argument	pszName		5590377	1					
ANR	5591003	Identifier	pszName		5590377	0					
ANR	5591004	Argument	NULL		5590377	2					
ANR	5591005	Identifier	NULL		5590377	0					
ANR	5591006	Argument	& vtype		5590377	3					
ANR	5591007	UnaryOperationExpression	& vtype		5590377	0					
ANR	5591008	UnaryOperator	&		5590377	0					
ANR	5591009	Identifier	vtype		5590377	1					
ANR	5591010	Argument	( byte * ) & uli		5590377	4					
ANR	5591011	CastExpression	( byte * ) & uli		5590377	0					
ANR	5591012	CastTarget	byte *		5590377	0					
ANR	5591013	UnaryOperationExpression	& uli		5590377	1					
ANR	5591014	UnaryOperator	&		5590377	0					
ANR	5591015	Identifier	uli		5590377	1					
ANR	5591016	Argument	& cbData		5590377	5					
ANR	5591017	UnaryOperationExpression	& cbData		5590377	0					
ANR	5591018	UnaryOperator	&		5590377	0					
ANR	5591019	Identifier	cbData		5590377	1					
ANR	5591020	IfStatement	if ( ERROR_FILE_NOT_FOUND == lres )		5590377	6					
ANR	5591021	Condition	ERROR_FILE_NOT_FOUND == lres	345:6:10301:10328	5590377	0	True				
ANR	5591022	EqualityExpression	ERROR_FILE_NOT_FOUND == lres		5590377	0		==			
ANR	5591023	Identifier	ERROR_FILE_NOT_FOUND		5590377	0					
ANR	5591024	Identifier	lres		5590377	1					
ANR	5591025	CompoundStatement		145:2:4531:4531	5590377	1					
ANR	5591026	IfStatement	if ( pszName && pszName [ 0 ] )		5590377	0					
ANR	5591027	Condition	pszName && pszName [ 0 ]	347:7:10342:10362	5590377	0	True				
ANR	5591028	AndExpression	pszName && pszName [ 0 ]		5590377	0		&&			
ANR	5591029	Identifier	pszName		5590377	0					
ANR	5591030	ArrayIndexing	pszName [ 0 ]		5590377	1					
ANR	5591031	Identifier	pszName		5590377	0					
ANR	5591032	PrimaryExpression	0		5590377	1					
ANR	5591033	CompoundStatement		147:3:4566:4566	5590377	1					
ANR	5591034	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""The Registry Key \\""%s\\\\%s\\"" does not have a value named \\""%s\\""\\n"" , root_key_name ( hroot ) , pszRegKey , pszName )"	351:4:10419:10563	5590377	0	True				
ANR	5591035	CallExpression	"dprintf ( D_FULLDEBUG , ""The Registry Key \\""%s\\\\%s\\"" does not have a value named \\""%s\\""\\n"" , root_key_name ( hroot ) , pszRegKey , pszName )"		5590377	0					
ANR	5591036	Callee	dprintf		5590377	0					
ANR	5591037	Identifier	dprintf		5590377	0					
ANR	5591038	ArgumentList	D_FULLDEBUG		5590377	1					
ANR	5591039	Argument	D_FULLDEBUG		5590377	0					
ANR	5591040	Identifier	D_FULLDEBUG		5590377	0					
ANR	5591041	Argument	"""The Registry Key \\""%s\\\\%s\\"" does not have a value named \\""%s\\""\\n"""		5590377	1					
ANR	5591042	PrimaryExpression	"""The Registry Key \\""%s\\\\%s\\"" does not have a value named \\""%s\\""\\n"""		5590377	0					
ANR	5591043	Argument	root_key_name ( hroot )		5590377	2					
ANR	5591044	CallExpression	root_key_name ( hroot )		5590377	0					
ANR	5591045	Callee	root_key_name		5590377	0					
ANR	5591046	Identifier	root_key_name		5590377	0					
ANR	5591047	ArgumentList	hroot		5590377	1					
ANR	5591048	Argument	hroot		5590377	0					
ANR	5591049	Identifier	hroot		5590377	0					
ANR	5591050	Argument	pszRegKey		5590377	3					
ANR	5591051	Identifier	pszRegKey		5590377	0					
ANR	5591052	Argument	pszName		5590377	4					
ANR	5591053	Identifier	pszName		5590377	0					
ANR	5591054	ElseStatement	else		5590377	0					
ANR	5591055	CompoundStatement		155:3:4779:4779	5590377	0					
ANR	5591056	ExpressionStatement	"value = strdup ( """" )"	361:4:10779:10797	5590377	0	True				
ANR	5591057	AssignmentExpression	"value = strdup ( """" )"		5590377	0		=			
ANR	5591058	Identifier	value		5590377	0					
ANR	5591059	CallExpression	"strdup ( """" )"		5590377	1					
ANR	5591060	Callee	strdup		5590377	0					
ANR	5591061	Identifier	strdup		5590377	0					
ANR	5591062	ArgumentList	""""""		5590377	1					
ANR	5591063	Argument	""""""		5590377	0					
ANR	5591064	PrimaryExpression	""""""		5590377	0					
ANR	5591065	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""The Registry Key \\""%s\\\\%s\\\\%s\\"" has no default value.\\n"" , root_key_name ( hroot ) , pszRegKey , pszValueName )"	362:4:10803:10937	5590377	1	True				
ANR	5591066	CallExpression	"dprintf ( D_FULLDEBUG , ""The Registry Key \\""%s\\\\%s\\\\%s\\"" has no default value.\\n"" , root_key_name ( hroot ) , pszRegKey , pszValueName )"		5590377	0					
ANR	5591067	Callee	dprintf		5590377	0					
ANR	5591068	Identifier	dprintf		5590377	0					
ANR	5591069	ArgumentList	D_FULLDEBUG		5590377	1					
ANR	5591070	Argument	D_FULLDEBUG		5590377	0					
ANR	5591071	Identifier	D_FULLDEBUG		5590377	0					
ANR	5591072	Argument	"""The Registry Key \\""%s\\\\%s\\\\%s\\"" has no default value.\\n"""		5590377	1					
ANR	5591073	PrimaryExpression	"""The Registry Key \\""%s\\\\%s\\\\%s\\"" has no default value.\\n"""		5590377	0					
ANR	5591074	Argument	root_key_name ( hroot )		5590377	2					
ANR	5591075	CallExpression	root_key_name ( hroot )		5590377	0					
ANR	5591076	Callee	root_key_name		5590377	0					
ANR	5591077	Identifier	root_key_name		5590377	0					
ANR	5591078	ArgumentList	hroot		5590377	1					
ANR	5591079	Argument	hroot		5590377	0					
ANR	5591080	Identifier	hroot		5590377	0					
ANR	5591081	Argument	pszRegKey		5590377	3					
ANR	5591082	Identifier	pszRegKey		5590377	0					
ANR	5591083	Argument	pszValueName		5590377	4					
ANR	5591084	Identifier	pszValueName		5590377	0					
ANR	5591085	ExpressionStatement	fEnumValues = fAutoEnumValues	364:4:10943:10972	5590377	2	True				
ANR	5591086	AssignmentExpression	fEnumValues = fAutoEnumValues		5590377	0		=			
ANR	5591087	Identifier	fEnumValues		5590377	0					
ANR	5591088	Identifier	fAutoEnumValues		5590377	1					
ANR	5591089	ElseStatement	else		5590377	0					
ANR	5591090	IfStatement	if ( ERROR_SUCCESS != lres )		5590377	0					
ANR	5591091	Condition	ERROR_SUCCESS != lres	367:11:10994:11014	5590377	0	True				
ANR	5591092	EqualityExpression	ERROR_SUCCESS != lres		5590377	0		!=			
ANR	5591093	Identifier	ERROR_SUCCESS		5590377	0					
ANR	5591094	Identifier	lres		5590377	1					
ANR	5591095	CompoundStatement		170:3:5292:5312	5590377	1					
ANR	5591096	IdentifierDeclStatement	char szMsg [ MAX_PATH ] ;	371:3:11094:11114	5590377	0	True				
ANR	5591097	IdentifierDecl	szMsg [ MAX_PATH ]		5590377	0					
ANR	5591098	IdentifierDeclType	char [ MAX_PATH ]		5590377	0					
ANR	5591099	Identifier	szMsg		5590377	1					
ANR	5591100	Identifier	MAX_PATH		5590377	2					
ANR	5591101	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to read Registry Key \\""%s\\\\%s\\\\%s\\""\\nReason: %s\\n"" , root_key_name ( hroot ) , pszRegKey , pszValueName , GetLastErrMessage ( GetLastError ( ) , szMsg , NUM_ELEMENTS ( szMsg ) ) )"	372:3:11119:11324	5590377	1	True				
ANR	5591102	CallExpression	"dprintf ( D_ALWAYS , ""Failed to read Registry Key \\""%s\\\\%s\\\\%s\\""\\nReason: %s\\n"" , root_key_name ( hroot ) , pszRegKey , pszValueName , GetLastErrMessage ( GetLastError ( ) , szMsg , NUM_ELEMENTS ( szMsg ) ) )"		5590377	0					
ANR	5591103	Callee	dprintf		5590377	0					
ANR	5591104	Identifier	dprintf		5590377	0					
ANR	5591105	ArgumentList	D_ALWAYS		5590377	1					
ANR	5591106	Argument	D_ALWAYS		5590377	0					
ANR	5591107	Identifier	D_ALWAYS		5590377	0					
ANR	5591108	Argument	"""Failed to read Registry Key \\""%s\\\\%s\\\\%s\\""\\nReason: %s\\n"""		5590377	1					
ANR	5591109	PrimaryExpression	"""Failed to read Registry Key \\""%s\\\\%s\\\\%s\\""\\nReason: %s\\n"""		5590377	0					
ANR	5591110	Argument	root_key_name ( hroot )		5590377	2					
ANR	5591111	CallExpression	root_key_name ( hroot )		5590377	0					
ANR	5591112	Callee	root_key_name		5590377	0					
ANR	5591113	Identifier	root_key_name		5590377	0					
ANR	5591114	ArgumentList	hroot		5590377	1					
ANR	5591115	Argument	hroot		5590377	0					
ANR	5591116	Identifier	hroot		5590377	0					
ANR	5591117	Argument	pszRegKey		5590377	3					
ANR	5591118	Identifier	pszRegKey		5590377	0					
ANR	5591119	Argument	pszValueName		5590377	4					
ANR	5591120	Identifier	pszValueName		5590377	0					
ANR	5591121	Argument	"GetLastErrMessage ( GetLastError ( ) , szMsg , NUM_ELEMENTS ( szMsg ) )"		5590377	5					
ANR	5591122	CallExpression	"GetLastErrMessage ( GetLastError ( ) , szMsg , NUM_ELEMENTS ( szMsg ) )"		5590377	0					
ANR	5591123	Callee	GetLastErrMessage		5590377	0					
ANR	5591124	Identifier	GetLastErrMessage		5590377	0					
ANR	5591125	ArgumentList	GetLastError ( )		5590377	1					
ANR	5591126	Argument	GetLastError ( )		5590377	0					
ANR	5591127	CallExpression	GetLastError ( )		5590377	0					
ANR	5591128	Callee	GetLastError		5590377	0					
ANR	5591129	Identifier	GetLastError		5590377	0					
ANR	5591130	ArgumentList			5590377	1					
ANR	5591131	Argument	szMsg		5590377	1					
ANR	5591132	Identifier	szMsg		5590377	0					
ANR	5591133	Argument	NUM_ELEMENTS ( szMsg )		5590377	2					
ANR	5591134	CallExpression	NUM_ELEMENTS ( szMsg )		5590377	0					
ANR	5591135	Callee	NUM_ELEMENTS		5590377	0					
ANR	5591136	Identifier	NUM_ELEMENTS		5590377	0					
ANR	5591137	ArgumentList	szMsg		5590377	1					
ANR	5591138	Argument	szMsg		5590377	0					
ANR	5591139	Identifier	szMsg		5590377	0					
ANR	5591140	ElseStatement	else		5590377	0					
ANR	5591141	CompoundStatement		180:3:5605:5621	5590377	0					
ANR	5591142	IdentifierDeclStatement	"char sz [ 10 ] = """" ;"	381:3:11407:11423	5590377	0	True				
ANR	5591143	IdentifierDecl	"sz [ 10 ] = """""		5590377	0					
ANR	5591144	IdentifierDeclType	char [ 10 ]		5590377	0					
ANR	5591145	Identifier	sz		5590377	1					
ANR	5591146	PrimaryExpression	10		5590377	2					
ANR	5591147	AssignmentExpression	"sz [ 10 ] = """""		5590377	3		=			
ANR	5591148	Identifier	sz		5590377	0					
ANR	5591149	PrimaryExpression	""""""		5590377	1					
ANR	5591150	SwitchStatement	switch ( vtype )		5590377	1					
ANR	5591151	Condition	vtype	382:11:11436:11440	5590377	0	True				
ANR	5591152	Identifier	vtype		5590377	0					
ANR	5591153	CompoundStatement		182:3:5644:5644	5590377	1					
ANR	5591154	Label	case REG_LINK :	384:3:11451:11464	5590377	0	True				
ANR	5591155	Identifier	REG_LINK		5590377	0					
ANR	5591156	Label	case REG_SZ :	385:3:11469:11480	5590377	1	True				
ANR	5591157	Identifier	REG_SZ		5590377	0					
ANR	5591158	BreakStatement	break ;	386:4:11486:11491	5590377	2	True				
ANR	5591159	Label	case REG_EXPAND_SZ :	387:3:11496:11514	5590377	3	True				
ANR	5591160	Identifier	REG_EXPAND_SZ		5590377	0					
ANR	5591161	BreakStatement	break ;	389:4:11543:11548	5590377	4	True				
ANR	5591162	Label	case REG_MULTI_SZ :	390:3:11553:11570	5590377	5	True				
ANR	5591163	Identifier	REG_MULTI_SZ		5590377	0					
ANR	5591164	BreakStatement	break ;	392:4:11599:11604	5590377	6	True				
ANR	5591165	Label	case REG_DWORD_BIG_ENDIAN :	394:3:11610:11635	5590377	7	True				
ANR	5591166	Identifier	REG_DWORD_BIG_ENDIAN		5590377	0					
ANR	5591167	ExpressionStatement	uli . LowPart = htonl ( uli . LowPart )	395:4:11641:11673	5590377	8	True				
ANR	5591168	AssignmentExpression	uli . LowPart = htonl ( uli . LowPart )		5590377	0		=			
ANR	5591169	MemberAccess	uli . LowPart		5590377	0					
ANR	5591170	Identifier	uli		5590377	0					
ANR	5591171	Identifier	LowPart		5590377	1					
ANR	5591172	CallExpression	htonl ( uli . LowPart )		5590377	1					
ANR	5591173	Callee	htonl		5590377	0					
ANR	5591174	Identifier	htonl		5590377	0					
ANR	5591175	ArgumentList	uli . LowPart		5590377	1					
ANR	5591176	Argument	uli . LowPart		5590377	0					
ANR	5591177	MemberAccess	uli . LowPart		5590377	0					
ANR	5591178	Identifier	uli		5590377	0					
ANR	5591179	Identifier	LowPart		5590377	1					
ANR	5591180	Label	case REG_DWORD :	397:3:11697:11711	5590377	9	True				
ANR	5591181	Identifier	REG_DWORD		5590377	0					
ANR	5591182	ExpressionStatement	"wsprintf ( sz , ""%u"" , uli . LowPart )"	398:4:11717:11748	5590377	10	True				
ANR	5591183	CallExpression	"wsprintf ( sz , ""%u"" , uli . LowPart )"		5590377	0					
ANR	5591184	Callee	wsprintf		5590377	0					
ANR	5591185	Identifier	wsprintf		5590377	0					
ANR	5591186	ArgumentList	sz		5590377	1					
ANR	5591187	Argument	sz		5590377	0					
ANR	5591188	Identifier	sz		5590377	0					
ANR	5591189	Argument	"""%u"""		5590377	1					
ANR	5591190	PrimaryExpression	"""%u"""		5590377	0					
ANR	5591191	Argument	uli . LowPart		5590377	2					
ANR	5591192	MemberAccess	uli . LowPart		5590377	0					
ANR	5591193	Identifier	uli		5590377	0					
ANR	5591194	Identifier	LowPart		5590377	1					
ANR	5591195	BreakStatement	break ;	399:4:11754:11759	5590377	11	True				
ANR	5591196	Label	case REG_QWORD :	401:3:11765:11779	5590377	12	True				
ANR	5591197	Identifier	REG_QWORD		5590377	0					
ANR	5591198	ExpressionStatement	"wsprintf ( sz , ""%lu"" , uli . QuadPart )"	402:4:11785:11818	5590377	13	True				
ANR	5591199	CallExpression	"wsprintf ( sz , ""%lu"" , uli . QuadPart )"		5590377	0					
ANR	5591200	Callee	wsprintf		5590377	0					
ANR	5591201	Identifier	wsprintf		5590377	0					
ANR	5591202	ArgumentList	sz		5590377	1					
ANR	5591203	Argument	sz		5590377	0					
ANR	5591204	Identifier	sz		5590377	0					
ANR	5591205	Argument	"""%lu"""		5590377	1					
ANR	5591206	PrimaryExpression	"""%lu"""		5590377	0					
ANR	5591207	Argument	uli . QuadPart		5590377	2					
ANR	5591208	MemberAccess	uli . QuadPart		5590377	0					
ANR	5591209	Identifier	uli		5590377	0					
ANR	5591210	Identifier	QuadPart		5590377	1					
ANR	5591211	BreakStatement	break ;	403:4:11824:11829	5590377	14	True				
ANR	5591212	Label	case REG_BINARY :	405:3:11835:11850	5590377	15	True				
ANR	5591213	Identifier	REG_BINARY		5590377	0					
ANR	5591214	BreakStatement	break ;	406:4:11856:11861	5590377	16	True				
ANR	5591215	IfStatement	if ( ! value )		5590377	2					
ANR	5591216	Condition	! value	409:8:11877:11883	5590377	0	True				
ANR	5591217	UnaryOperationExpression	! value		5590377	0					
ANR	5591218	UnaryOperator	!		5590377	0					
ANR	5591219	Identifier	value		5590377	1					
ANR	5591220	ExpressionStatement	value = strdup ( sz )	410:4:11891:11909	5590377	1	True				
ANR	5591221	AssignmentExpression	value = strdup ( sz )		5590377	0		=			
ANR	5591222	Identifier	value		5590377	0					
ANR	5591223	CallExpression	strdup ( sz )		5590377	1					
ANR	5591224	Callee	strdup		5590377	0					
ANR	5591225	Identifier	strdup		5590377	0					
ANR	5591226	ArgumentList	sz		5590377	1					
ANR	5591227	Argument	sz		5590377	0					
ANR	5591228	Identifier	sz		5590377	0					
ANR	5591229	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""The Registry Key \\""%s\\\\%s\\\\%s\\"" contains \\""%s\\""\\n"" , root_key_name ( hroot ) , pszRegKey , pszValueName , value )"	412:3:11915:12049	5590377	3	True				
ANR	5591230	CallExpression	"dprintf ( D_FULLDEBUG , ""The Registry Key \\""%s\\\\%s\\\\%s\\"" contains \\""%s\\""\\n"" , root_key_name ( hroot ) , pszRegKey , pszValueName , value )"		5590377	0					
ANR	5591231	Callee	dprintf		5590377	0					
ANR	5591232	Identifier	dprintf		5590377	0					
ANR	5591233	ArgumentList	D_FULLDEBUG		5590377	1					
ANR	5591234	Argument	D_FULLDEBUG		5590377	0					
ANR	5591235	Identifier	D_FULLDEBUG		5590377	0					
ANR	5591236	Argument	"""The Registry Key \\""%s\\\\%s\\\\%s\\"" contains \\""%s\\""\\n"""		5590377	1					
ANR	5591237	PrimaryExpression	"""The Registry Key \\""%s\\\\%s\\\\%s\\"" contains \\""%s\\""\\n"""		5590377	0					
ANR	5591238	Argument	root_key_name ( hroot )		5590377	2					
ANR	5591239	CallExpression	root_key_name ( hroot )		5590377	0					
ANR	5591240	Callee	root_key_name		5590377	0					
ANR	5591241	Identifier	root_key_name		5590377	0					
ANR	5591242	ArgumentList	hroot		5590377	1					
ANR	5591243	Argument	hroot		5590377	0					
ANR	5591244	Identifier	hroot		5590377	0					
ANR	5591245	Argument	pszRegKey		5590377	3					
ANR	5591246	Identifier	pszRegKey		5590377	0					
ANR	5591247	Argument	pszValueName		5590377	4					
ANR	5591248	Identifier	pszValueName		5590377	0					
ANR	5591249	Argument	value		5590377	5					
ANR	5591250	Identifier	value		5590377	0					
ANR	5591251	IfStatement	if ( DebugFlags & ( D_NORMAL | D_FULLDEBUG ) )		5590377	7					
ANR	5591252	Condition	DebugFlags & ( D_NORMAL | D_FULLDEBUG )	419:6:12153:12189	5590377	0	True				
ANR	5591253	BitAndExpression	DebugFlags & ( D_NORMAL | D_FULLDEBUG )		5590377	0		&			
ANR	5591254	Identifier	DebugFlags		5590377	0					
ANR	5591255	InclusiveOrExpression	D_NORMAL | D_FULLDEBUG		5590377	1		|			
ANR	5591256	Identifier	D_NORMAL		5590377	0					
ANR	5591257	Identifier	D_FULLDEBUG		5590377	1					
ANR	5591258	CompoundStatement		219:2:6393:6393	5590377	1					
ANR	5591259	IfStatement	if ( fEnumValues )		5590377	0					
ANR	5591260	Condition	fEnumValues	421:7:12204:12214	5590377	0	True				
ANR	5591261	Identifier	fEnumValues		5590377	0					
ANR	5591262	CompoundStatement		222:4:6424:6434	5590377	1					
ANR	5591263	IdentifierDeclStatement	int ii = 0 ;	423:4:12226:12236	5590377	0	True				
ANR	5591264	IdentifierDecl	ii = 0		5590377	0					
ANR	5591265	IdentifierDeclType	int		5590377	0					
ANR	5591266	Identifier	ii		5590377	1					
ANR	5591267	AssignmentExpression	ii = 0		5590377	2		=			
ANR	5591268	Identifier	ii		5590377	0					
ANR	5591269	PrimaryExpression	0		5590377	1					
ANR	5591270	ForStatement	for ( ii = 0 ; ii < 10000 ; ++ ii )		5590377	1					
ANR	5591271	ForInit	ii = 0 ;	424:9:12247:12253	5590377	0	True				
ANR	5591272	AssignmentExpression	ii = 0		5590377	0		=			
ANR	5591273	Identifier	ii		5590377	0					
ANR	5591274	PrimaryExpression	0		5590377	1					
ANR	5591275	Condition	ii < 10000	424:17:12255:12264	5590377	1	True				
ANR	5591276	RelationalExpression	ii < 10000		5590377	0		<			
ANR	5591277	Identifier	ii		5590377	0					
ANR	5591278	PrimaryExpression	10000		5590377	1					
ANR	5591279	UnaryExpression	++ ii	424:29:12267:12270	5590377	2	True				
ANR	5591280	IncDec	++		5590377	0					
ANR	5591281	Identifier	ii		5590377	1					
ANR	5591282	CompoundStatement		226:5:6511:6563	5590377	3					
ANR	5591283	IdentifierDeclStatement	TCHAR szName [ MAX_PATH ] ;	426:5:12284:12306	5590377	0	True				
ANR	5591284	IdentifierDecl	szName [ MAX_PATH ]		5590377	0					
ANR	5591285	IdentifierDeclType	TCHAR [ MAX_PATH ]		5590377	0					
ANR	5591286	Identifier	szName		5590377	1					
ANR	5591287	Identifier	MAX_PATH		5590377	2					
ANR	5591288	IdentifierDeclStatement	"DWORD cchName = NUM_ELEMENTS ( szName ) , vt , cbData = 0 ;"	427:5:12313:12365	5590377	1	True				
ANR	5591289	IdentifierDecl	cchName = NUM_ELEMENTS ( szName )		5590377	0					
ANR	5591290	IdentifierDeclType	DWORD		5590377	0					
ANR	5591291	Identifier	cchName		5590377	1					
ANR	5591292	AssignmentExpression	cchName = NUM_ELEMENTS ( szName )		5590377	2		=			
ANR	5591293	Identifier	cchName		5590377	0					
ANR	5591294	CallExpression	NUM_ELEMENTS ( szName )		5590377	1					
ANR	5591295	Callee	NUM_ELEMENTS		5590377	0					
ANR	5591296	Identifier	NUM_ELEMENTS		5590377	0					
ANR	5591297	ArgumentList	szName		5590377	1					
ANR	5591298	Argument	szName		5590377	0					
ANR	5591299	Identifier	szName		5590377	0					
ANR	5591300	IdentifierDecl	vt		5590377	1					
ANR	5591301	IdentifierDeclType	DWORD		5590377	0					
ANR	5591302	Identifier	vt		5590377	1					
ANR	5591303	IdentifierDecl	cbData = 0		5590377	2					
ANR	5591304	IdentifierDeclType	DWORD		5590377	0					
ANR	5591305	Identifier	cbData		5590377	1					
ANR	5591306	AssignmentExpression	cbData = 0		5590377	2		=			
ANR	5591307	Identifier	cbData		5590377	0					
ANR	5591308	PrimaryExpression	0		5590377	1					
ANR	5591309	ExpressionStatement	"lres = RegEnumValue ( hkey , ii , szName , & cchName , 0 , & vt , NULL , & cbData )"	428:5:12372:12442	5590377	2	True				
ANR	5591310	AssignmentExpression	"lres = RegEnumValue ( hkey , ii , szName , & cchName , 0 , & vt , NULL , & cbData )"		5590377	0		=			
ANR	5591311	Identifier	lres		5590377	0					
ANR	5591312	CallExpression	"RegEnumValue ( hkey , ii , szName , & cchName , 0 , & vt , NULL , & cbData )"		5590377	1					
ANR	5591313	Callee	RegEnumValue		5590377	0					
ANR	5591314	Identifier	RegEnumValue		5590377	0					
ANR	5591315	ArgumentList	hkey		5590377	1					
ANR	5591316	Argument	hkey		5590377	0					
ANR	5591317	Identifier	hkey		5590377	0					
ANR	5591318	Argument	ii		5590377	1					
ANR	5591319	Identifier	ii		5590377	0					
ANR	5591320	Argument	szName		5590377	2					
ANR	5591321	Identifier	szName		5590377	0					
ANR	5591322	Argument	& cchName		5590377	3					
ANR	5591323	UnaryOperationExpression	& cchName		5590377	0					
ANR	5591324	UnaryOperator	&		5590377	0					
ANR	5591325	Identifier	cchName		5590377	1					
ANR	5591326	Argument	0		5590377	4					
ANR	5591327	PrimaryExpression	0		5590377	0					
ANR	5591328	Argument	& vt		5590377	5					
ANR	5591329	UnaryOperationExpression	& vt		5590377	0					
ANR	5591330	UnaryOperator	&		5590377	0					
ANR	5591331	Identifier	vt		5590377	1					
ANR	5591332	Argument	NULL		5590377	6					
ANR	5591333	Identifier	NULL		5590377	0					
ANR	5591334	Argument	& cbData		5590377	7					
ANR	5591335	UnaryOperationExpression	& cbData		5590377	0					
ANR	5591336	UnaryOperator	&		5590377	0					
ANR	5591337	Identifier	cbData		5590377	1					
ANR	5591338	IfStatement	if ( ERROR_NO_MORE_ITEMS == lres )		5590377	3					
ANR	5591339	Condition	ERROR_NO_MORE_ITEMS == lres	429:9:12453:12479	5590377	0	True				
ANR	5591340	EqualityExpression	ERROR_NO_MORE_ITEMS == lres		5590377	0		==			
ANR	5591341	Identifier	ERROR_NO_MORE_ITEMS		5590377	0					
ANR	5591342	Identifier	lres		5590377	1					
ANR	5591343	BreakStatement	break ;	430:6:12488:12493	5590377	1	True				
ANR	5591344	IfStatement	if ( ! ii )		5590377	4					
ANR	5591345	Condition	! ii	431:10:12505:12508	5590377	0	True				
ANR	5591346	UnaryOperationExpression	! ii		5590377	0					
ANR	5591347	UnaryOperator	!		5590377	0					
ANR	5591348	Identifier	ii		5590377	1					
ANR	5591349	ExpressionStatement	"dprintf ( D_NORMAL | D_FULLDEBUG , "" Named values:\\n"" )"	431:16:12511:12564	5590377	1	True				
ANR	5591350	CallExpression	"dprintf ( D_NORMAL | D_FULLDEBUG , "" Named values:\\n"" )"		5590377	0					
ANR	5591351	Callee	dprintf		5590377	0					
ANR	5591352	Identifier	dprintf		5590377	0					
ANR	5591353	ArgumentList	D_NORMAL | D_FULLDEBUG		5590377	1					
ANR	5591354	Argument	D_NORMAL | D_FULLDEBUG		5590377	0					
ANR	5591355	InclusiveOrExpression	D_NORMAL | D_FULLDEBUG		5590377	0		|			
ANR	5591356	Identifier	D_NORMAL		5590377	0					
ANR	5591357	Identifier	D_FULLDEBUG		5590377	1					
ANR	5591358	Argument	""" Named values:\\n"""		5590377	1					
ANR	5591359	PrimaryExpression	""" Named values:\\n"""		5590377	0					
ANR	5591360	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""  \\""%s\\"" = %d bytes\\n"" , szName , cbData )"	432:5:12571:12633	5590377	5	True				
ANR	5591361	CallExpression	"dprintf ( D_FULLDEBUG , ""  \\""%s\\"" = %d bytes\\n"" , szName , cbData )"		5590377	0					
ANR	5591362	Callee	dprintf		5590377	0					
ANR	5591363	Identifier	dprintf		5590377	0					
ANR	5591364	ArgumentList	D_FULLDEBUG		5590377	1					
ANR	5591365	Argument	D_FULLDEBUG		5590377	0					
ANR	5591366	Identifier	D_FULLDEBUG		5590377	0					
ANR	5591367	Argument	"""  \\""%s\\"" = %d bytes\\n"""		5590377	1					
ANR	5591368	PrimaryExpression	"""  \\""%s\\"" = %d bytes\\n"""		5590377	0					
ANR	5591369	Argument	szName		5590377	2					
ANR	5591370	Identifier	szName		5590377	0					
ANR	5591371	Argument	cbData		5590377	3					
ANR	5591372	Identifier	cbData		5590377	0					
ANR	5591373	IfStatement	if ( ! ii )		5590377	2					
ANR	5591374	Condition	! ii	434:9:12650:12653	5590377	0	True				
ANR	5591375	UnaryOperationExpression	! ii		5590377	0					
ANR	5591376	UnaryOperator	!		5590377	0					
ANR	5591377	Identifier	ii		5590377	1					
ANR	5591378	ExpressionStatement	"dprintf ( D_NORMAL | D_FULLDEBUG , "" No Named values\\n"" )"	434:15:12656:12711	5590377	1	True				
ANR	5591379	CallExpression	"dprintf ( D_NORMAL | D_FULLDEBUG , "" No Named values\\n"" )"		5590377	0					
ANR	5591380	Callee	dprintf		5590377	0					
ANR	5591381	Identifier	dprintf		5590377	0					
ANR	5591382	ArgumentList	D_NORMAL | D_FULLDEBUG		5590377	1					
ANR	5591383	Argument	D_NORMAL | D_FULLDEBUG		5590377	0					
ANR	5591384	InclusiveOrExpression	D_NORMAL | D_FULLDEBUG		5590377	0		|			
ANR	5591385	Identifier	D_NORMAL		5590377	0					
ANR	5591386	Identifier	D_FULLDEBUG		5590377	1					
ANR	5591387	Argument	""" No Named values\\n"""		5590377	1					
ANR	5591388	PrimaryExpression	""" No Named values\\n"""		5590377	0					
ANR	5591389	IfStatement	if ( fEnumSubkeys )		5590377	1					
ANR	5591390	Condition	fEnumSubkeys	436:7:12725:12736	5590377	0	True				
ANR	5591391	Identifier	fEnumSubkeys		5590377	0					
ANR	5591392	CompoundStatement		237:4:6946:6956	5590377	1					
ANR	5591393	IdentifierDeclStatement	int ii = 0 ;	438:4:12748:12758	5590377	0	True				
ANR	5591394	IdentifierDecl	ii = 0		5590377	0					
ANR	5591395	IdentifierDeclType	int		5590377	0					
ANR	5591396	Identifier	ii		5590377	1					
ANR	5591397	AssignmentExpression	ii = 0		5590377	2		=			
ANR	5591398	Identifier	ii		5590377	0					
ANR	5591399	PrimaryExpression	0		5590377	1					
ANR	5591400	ForStatement	for ( ii = 0 ; ii < 10000 ; ++ ii )		5590377	1					
ANR	5591401	ForInit	ii = 0 ;	439:9:12769:12775	5590377	0	True				
ANR	5591402	AssignmentExpression	ii = 0		5590377	0		=			
ANR	5591403	Identifier	ii		5590377	0					
ANR	5591404	PrimaryExpression	0		5590377	1					
ANR	5591405	Condition	ii < 10000	439:17:12777:12786	5590377	1	True				
ANR	5591406	RelationalExpression	ii < 10000		5590377	0		<			
ANR	5591407	Identifier	ii		5590377	0					
ANR	5591408	PrimaryExpression	10000		5590377	1					
ANR	5591409	UnaryExpression	++ ii	439:29:12789:12792	5590377	2	True				
ANR	5591410	IncDec	++		5590377	0					
ANR	5591411	Identifier	ii		5590377	1					
ANR	5591412	CompoundStatement		241:5:7034:7070	5590377	3					
ANR	5591413	IdentifierDeclStatement	TCHAR szName [ MAX_PATH ] ;	441:5:12806:12828	5590377	0	True				
ANR	5591414	IdentifierDecl	szName [ MAX_PATH ]		5590377	0					
ANR	5591415	IdentifierDeclType	TCHAR [ MAX_PATH ]		5590377	0					
ANR	5591416	Identifier	szName		5590377	1					
ANR	5591417	Identifier	MAX_PATH		5590377	2					
ANR	5591418	IdentifierDeclStatement	DWORD cchName = NUM_ELEMENTS ( szName ) ;	442:5:12836:12872	5590377	1	True				
ANR	5591419	IdentifierDecl	cchName = NUM_ELEMENTS ( szName )		5590377	0					
ANR	5591420	IdentifierDeclType	DWORD		5590377	0					
ANR	5591421	Identifier	cchName		5590377	1					
ANR	5591422	AssignmentExpression	cchName = NUM_ELEMENTS ( szName )		5590377	2		=			
ANR	5591423	Identifier	cchName		5590377	0					
ANR	5591424	CallExpression	NUM_ELEMENTS ( szName )		5590377	1					
ANR	5591425	Callee	NUM_ELEMENTS		5590377	0					
ANR	5591426	Identifier	NUM_ELEMENTS		5590377	0					
ANR	5591427	ArgumentList	szName		5590377	1					
ANR	5591428	Argument	szName		5590377	0					
ANR	5591429	Identifier	szName		5590377	0					
ANR	5591430	ExpressionStatement	"lres = RegEnumKeyEx ( hkey , ii , szName , & cchName , NULL , NULL , NULL , NULL )"	443:5:12879:12950	5590377	2	True				
ANR	5591431	AssignmentExpression	"lres = RegEnumKeyEx ( hkey , ii , szName , & cchName , NULL , NULL , NULL , NULL )"		5590377	0		=			
ANR	5591432	Identifier	lres		5590377	0					
ANR	5591433	CallExpression	"RegEnumKeyEx ( hkey , ii , szName , & cchName , NULL , NULL , NULL , NULL )"		5590377	1					
ANR	5591434	Callee	RegEnumKeyEx		5590377	0					
ANR	5591435	Identifier	RegEnumKeyEx		5590377	0					
ANR	5591436	ArgumentList	hkey		5590377	1					
ANR	5591437	Argument	hkey		5590377	0					
ANR	5591438	Identifier	hkey		5590377	0					
ANR	5591439	Argument	ii		5590377	1					
ANR	5591440	Identifier	ii		5590377	0					
ANR	5591441	Argument	szName		5590377	2					
ANR	5591442	Identifier	szName		5590377	0					
ANR	5591443	Argument	& cchName		5590377	3					
ANR	5591444	UnaryOperationExpression	& cchName		5590377	0					
ANR	5591445	UnaryOperator	&		5590377	0					
ANR	5591446	Identifier	cchName		5590377	1					
ANR	5591447	Argument	NULL		5590377	4					
ANR	5591448	Identifier	NULL		5590377	0					
ANR	5591449	Argument	NULL		5590377	5					
ANR	5591450	Identifier	NULL		5590377	0					
ANR	5591451	Argument	NULL		5590377	6					
ANR	5591452	Identifier	NULL		5590377	0					
ANR	5591453	Argument	NULL		5590377	7					
ANR	5591454	Identifier	NULL		5590377	0					
ANR	5591455	IfStatement	if ( ERROR_NO_MORE_ITEMS == lres )		5590377	3					
ANR	5591456	Condition	ERROR_NO_MORE_ITEMS == lres	444:9:12961:12987	5590377	0	True				
ANR	5591457	EqualityExpression	ERROR_NO_MORE_ITEMS == lres		5590377	0		==			
ANR	5591458	Identifier	ERROR_NO_MORE_ITEMS		5590377	0					
ANR	5591459	Identifier	lres		5590377	1					
ANR	5591460	BreakStatement	break ;	445:6:12996:13001	5590377	1	True				
ANR	5591461	IfStatement	if ( ! ii )		5590377	4					
ANR	5591462	Condition	! ii	446:10:13013:13016	5590377	0	True				
ANR	5591463	UnaryOperationExpression	! ii		5590377	0					
ANR	5591464	UnaryOperator	!		5590377	0					
ANR	5591465	Identifier	ii		5590377	1					
ANR	5591466	ExpressionStatement	"dprintf ( D_NORMAL | D_FULLDEBUG , "" Subkeys:\\n"" )"	446:16:13019:13067	5590377	1	True				
ANR	5591467	CallExpression	"dprintf ( D_NORMAL | D_FULLDEBUG , "" Subkeys:\\n"" )"		5590377	0					
ANR	5591468	Callee	dprintf		5590377	0					
ANR	5591469	Identifier	dprintf		5590377	0					
ANR	5591470	ArgumentList	D_NORMAL | D_FULLDEBUG		5590377	1					
ANR	5591471	Argument	D_NORMAL | D_FULLDEBUG		5590377	0					
ANR	5591472	InclusiveOrExpression	D_NORMAL | D_FULLDEBUG		5590377	0		|			
ANR	5591473	Identifier	D_NORMAL		5590377	0					
ANR	5591474	Identifier	D_FULLDEBUG		5590377	1					
ANR	5591475	Argument	""" Subkeys:\\n"""		5590377	1					
ANR	5591476	PrimaryExpression	""" Subkeys:\\n"""		5590377	0					
ANR	5591477	ExpressionStatement	"dprintf ( D_NORMAL | D_FULLDEBUG , ""  \\""%s\\""\\n"" , szName )"	447:5:13074:13128	5590377	5	True				
ANR	5591478	CallExpression	"dprintf ( D_NORMAL | D_FULLDEBUG , ""  \\""%s\\""\\n"" , szName )"		5590377	0					
ANR	5591479	Callee	dprintf		5590377	0					
ANR	5591480	Identifier	dprintf		5590377	0					
ANR	5591481	ArgumentList	D_NORMAL | D_FULLDEBUG		5590377	1					
ANR	5591482	Argument	D_NORMAL | D_FULLDEBUG		5590377	0					
ANR	5591483	InclusiveOrExpression	D_NORMAL | D_FULLDEBUG		5590377	0		|			
ANR	5591484	Identifier	D_NORMAL		5590377	0					
ANR	5591485	Identifier	D_FULLDEBUG		5590377	1					
ANR	5591486	Argument	"""  \\""%s\\""\\n"""		5590377	1					
ANR	5591487	PrimaryExpression	"""  \\""%s\\""\\n"""		5590377	0					
ANR	5591488	Argument	szName		5590377	2					
ANR	5591489	Identifier	szName		5590377	0					
ANR	5591490	IfStatement	if ( ! ii )		5590377	2					
ANR	5591491	Condition	! ii	449:9:13145:13148	5590377	0	True				
ANR	5591492	UnaryOperationExpression	! ii		5590377	0					
ANR	5591493	UnaryOperator	!		5590377	0					
ANR	5591494	Identifier	ii		5590377	1					
ANR	5591495	ExpressionStatement	"dprintf ( D_NORMAL | D_FULLDEBUG , "" No Subkeys\\n"" )"	449:15:13151:13201	5590377	1	True				
ANR	5591496	CallExpression	"dprintf ( D_NORMAL | D_FULLDEBUG , "" No Subkeys\\n"" )"		5590377	0					
ANR	5591497	Callee	dprintf		5590377	0					
ANR	5591498	Identifier	dprintf		5590377	0					
ANR	5591499	ArgumentList	D_NORMAL | D_FULLDEBUG		5590377	1					
ANR	5591500	Argument	D_NORMAL | D_FULLDEBUG		5590377	0					
ANR	5591501	InclusiveOrExpression	D_NORMAL | D_FULLDEBUG		5590377	0		|			
ANR	5591502	Identifier	D_NORMAL		5590377	0					
ANR	5591503	Identifier	D_FULLDEBUG		5590377	1					
ANR	5591504	Argument	""" No Subkeys\\n"""		5590377	1					
ANR	5591505	PrimaryExpression	""" No Subkeys\\n"""		5590377	0					
ANR	5591506	ExpressionStatement	RegCloseKey ( hkey )	453:2:13215:13232	5590377	8	True				
ANR	5591507	CallExpression	RegCloseKey ( hkey )		5590377	0					
ANR	5591508	Callee	RegCloseKey		5590377	0					
ANR	5591509	Identifier	RegCloseKey		5590377	0					
ANR	5591510	ArgumentList	hkey		5590377	1					
ANR	5591511	Argument	hkey		5590377	0					
ANR	5591512	Identifier	hkey		5590377	0					
ANR	5591513	IfStatement	if ( pszTemp )		5590377	16					
ANR	5591514	Condition	pszTemp	456:5:13302:13308	5590377	0	True				
ANR	5591515	Identifier	pszTemp		5590377	0					
ANR	5591516	ExpressionStatement	free ( pszTemp )	456:14:13311:13324	5590377	1	True				
ANR	5591517	CallExpression	free ( pszTemp )		5590377	0					
ANR	5591518	Callee	free		5590377	0					
ANR	5591519	Identifier	free		5590377	0					
ANR	5591520	ArgumentList	pszTemp		5590377	1					
ANR	5591521	Argument	pszTemp		5590377	0					
ANR	5591522	Identifier	pszTemp		5590377	0					
ANR	5591523	ReturnStatement	return value ;	458:1:13328:13340	5590377	17	True				
ANR	5591524	Identifier	value		5590377	0					
ANR	5591525	ReturnType	char *		5590377	1					
ANR	5591526	Identifier	get_windows_reg_value		5590377	2					
ANR	5591527	ParameterList	"const char * pszRegKey , const char * pszValueName , int options"		5590377	3					
ANR	5591528	Parameter	const char * pszRegKey	199:1:5715:5736	5590377	0	True				
ANR	5591529	ParameterType	const char *		5590377	0					
ANR	5591530	Identifier	pszRegKey		5590377	1					
ANR	5591531	Parameter	const char * pszValueName	200:1:5741:5765	5590377	1	True				
ANR	5591532	ParameterType	const char *		5590377	0					
ANR	5591533	Identifier	pszValueName		5590377	1					
ANR	5591534	Parameter	int options	201:1:5770:5789	5590377	2	True				
ANR	5591535	ParameterType	int		5590377	0					
ANR	5591536	Identifier	options		5590377	1					
ANR	5591537	CFGEntryNode	ENTRY		5590377		True				
ANR	5591538	CFGExitNode	EXIT		5590377		True				
ANR	5591539	Symbol	NUM_ELEMENTS		5590377						
ANR	5591540	Symbol	fEnumValues		5590377						
ANR	5591541	Symbol	vtype		5590377						
ANR	5591542	Symbol	lres		5590377						
ANR	5591543	Symbol	ixStart		5590377						
ANR	5591544	Symbol	REG_BINARY		5590377						
ANR	5591545	Symbol	cch		5590377						
ANR	5591546	Symbol	REG_EXPAND_SZ		5590377						
ANR	5591547	Symbol	szName		5590377						
ANR	5591548	Symbol	htonl		5590377						
ANR	5591549	Symbol	ERROR_SUCCESS		5590377						
ANR	5591550	Symbol	RegQueryValueEx		5590377						
ANR	5591551	Symbol	ERROR_FILE_NOT_FOUND		5590377						
ANR	5591552	Symbol	szMsg		5590377						
ANR	5591553	Symbol	options		5590377						
ANR	5591554	Symbol	WINREG_OPT_F_ENUM_SUBKEYS		5590377						
ANR	5591555	Symbol	D_NORMAL		5590377						
ANR	5591556	Symbol	& cchName		5590377						
ANR	5591557	Symbol	pszTemp		5590377						
ANR	5591558	Symbol	pszRegKey		5590377						
ANR	5591559	Symbol	RegOpenKeyEx		5590377						
ANR	5591560	Symbol	& uli		5590377						
ANR	5591561	Symbol	ii		5590377						
ANR	5591562	Symbol	NULL		5590377						
ANR	5591563	Symbol	HKEY_LOCAL_MACHINE		5590377						
ANR	5591564	Symbol	hroot		5590377						
ANR	5591565	Symbol	uli . QuadPart		5590377						
ANR	5591566	Symbol	fEnumSubkeys		5590377						
ANR	5591567	Symbol	D_FULLDEBUG		5590377						
ANR	5591568	Symbol	DebugFlags		5590377						
ANR	5591569	Symbol	ERROR_NO_MORE_ITEMS		5590377						
ANR	5591570	Symbol	fAutoEnumValues		5590377						
ANR	5591571	Symbol	& ixStart		5590377						
ANR	5591572	Symbol	* pszName ++		5590377						
ANR	5591573	Symbol	uli		5590377						
ANR	5591574	Symbol	GetLastError		5590377						
ANR	5591575	Symbol	RegEnumKeyEx		5590377						
ANR	5591576	Symbol	root_key_name		5590377						
ANR	5591577	Symbol	force		5590377						
ANR	5591578	Symbol	vt		5590377						
ANR	5591579	Symbol	* pszName		5590377						
ANR	5591580	Symbol	GetLastErrMessage		5590377						
ANR	5591581	Symbol	WINREG_OPT_F_WOW64		5590377						
ANR	5591582	Symbol	pszValueName		5590377						
ANR	5591583	Symbol	lstrlen		5590377						
ANR	5591584	Symbol	hkey		5590377						
ANR	5591585	Symbol	REG_SZ		5590377						
ANR	5591586	Symbol	& cbData		5590377						
ANR	5591587	Symbol	& vtype		5590377						
ANR	5591588	Symbol	parse_hive_prefix		5590377						
ANR	5591589	Symbol	KEY_WOW64_32KEY		5590377						
ANR	5591590	Symbol	KEY_READ		5590377						
ANR	5591591	Symbol	uli . LowPart		5590377						
ANR	5591592	Symbol	pszName		5590377						
ANR	5591593	Symbol	REG_LINK		5590377						
ANR	5591594	Symbol	REG_MULTI_SZ		5590377						
ANR	5591595	Symbol	hkeyT		5590377						
ANR	5591596	Symbol	lResT		5590377						
ANR	5591597	Symbol	RegEnumValue		5590377						
ANR	5591598	Symbol	WINREG_OPT_F_AUTO_ENUM_VALUES		5590377						
ANR	5591599	Symbol	ERROR_MORE_DATA		5590377						
ANR	5591600	Symbol	* pszRegKey		5590377						
ANR	5591601	Symbol	HKEY_PERFORMANCE_NLSTEXT		5590377						
ANR	5591602	Symbol	cbData		5590377						
ANR	5591603	Symbol	value		5590377						
ANR	5591604	Symbol	WINREG_OPT_F_WOW32		5590377						
ANR	5591605	Symbol	KEY_WOW64_64KEY		5590377						
ANR	5591606	Symbol	malloc		5590377						
ANR	5591607	Symbol	cchName		5590377						
ANR	5591608	Symbol	sz		5590377						
ANR	5591609	Symbol	D_ALWAYS		5590377						
ANR	5591610	Symbol	& vt		5590377						
ANR	5591611	Symbol	WINREG_OPT_F_ENUM_VALUES		5590377						
ANR	5591612	Symbol	& hkeyT		5590377						
ANR	5591613	Symbol	HKEY_PERFORMANCE_DATA		5590377						
ANR	5591614	Symbol	strrchr		5590377						
ANR	5591615	Symbol	& hkey		5590377						
ANR	5591616	Symbol	strdup		5590377						
ANR	5591617	Symbol	HKEY_PERFORMANCE_TEXT		5590377						
ANR	5591618	Function	generate_reg_key_attr_name	470:0:13742:16534							
ANR	5591619	FunctionDef	"generate_reg_key_attr_name (const char * pszPrefix , const char * pszKeyName)"		5591618	0					
ANR	5591620	CompoundStatement		471:0:13825:16534	5591618	0					
ANR	5591621	IdentifierDeclStatement	int cchPrefix = pszPrefix ? strlen ( pszPrefix ) : 0 ;	472:1:13828:13877	5591618	0	True				
ANR	5591622	IdentifierDecl	cchPrefix = pszPrefix ? strlen ( pszPrefix ) : 0		5591618	0					
ANR	5591623	IdentifierDeclType	int		5591618	0					
ANR	5591624	Identifier	cchPrefix		5591618	1					
ANR	5591625	AssignmentExpression	cchPrefix = pszPrefix ? strlen ( pszPrefix ) : 0		5591618	2		=			
ANR	5591626	Identifier	cchPrefix		5591618	0					
ANR	5591627	ConditionalExpression	pszPrefix ? strlen ( pszPrefix ) : 0		5591618	1					
ANR	5591628	Condition	pszPrefix		5591618	0					
ANR	5591629	Identifier	pszPrefix		5591618	0					
ANR	5591630	CallExpression	strlen ( pszPrefix )		5591618	1					
ANR	5591631	Callee	strlen		5591618	0					
ANR	5591632	Identifier	strlen		5591618	0					
ANR	5591633	ArgumentList	pszPrefix		5591618	1					
ANR	5591634	Argument	pszPrefix		5591618	0					
ANR	5591635	Identifier	pszPrefix		5591618	0					
ANR	5591636	PrimaryExpression	0		5591618	2					
ANR	5591637	IdentifierDeclStatement	"const char * psz = strchr ( pszKeyName , '=' ) ;"	477:1:13990:14032	5591618	1	True				
ANR	5591638	IdentifierDecl	"* psz = strchr ( pszKeyName , '=' )"		5591618	0					
ANR	5591639	IdentifierDeclType	const char *		5591618	0					
ANR	5591640	Identifier	psz		5591618	1					
ANR	5591641	AssignmentExpression	"* psz = strchr ( pszKeyName , '=' )"		5591618	2		=			
ANR	5591642	Identifier	psz		5591618	0					
ANR	5591643	CallExpression	"strchr ( pszKeyName , '=' )"		5591618	1					
ANR	5591644	Callee	strchr		5591618	0					
ANR	5591645	Identifier	strchr		5591618	0					
ANR	5591646	ArgumentList	pszKeyName		5591618	1					
ANR	5591647	Argument	pszKeyName		5591618	0					
ANR	5591648	Identifier	pszKeyName		5591618	0					
ANR	5591649	Argument	'='		5591618	1					
ANR	5591650	PrimaryExpression	'='		5591618	0					
ANR	5591651	IdentifierDeclStatement	"const char * pbs = strchr ( pszKeyName , '\\\\' ) ;"	478:1:14035:14078	5591618	2	True				
ANR	5591652	IdentifierDecl	"* pbs = strchr ( pszKeyName , '\\\\' )"		5591618	0					
ANR	5591653	IdentifierDeclType	const char *		5591618	0					
ANR	5591654	Identifier	pbs		5591618	1					
ANR	5591655	AssignmentExpression	"* pbs = strchr ( pszKeyName , '\\\\' )"		5591618	2		=			
ANR	5591656	Identifier	pbs		5591618	0					
ANR	5591657	CallExpression	"strchr ( pszKeyName , '\\\\' )"		5591618	1					
ANR	5591658	Callee	strchr		5591618	0					
ANR	5591659	Identifier	strchr		5591618	0					
ANR	5591660	ArgumentList	pszKeyName		5591618	1					
ANR	5591661	Argument	pszKeyName		5591618	0					
ANR	5591662	Identifier	pszKeyName		5591618	0					
ANR	5591663	Argument	'\\\\'		5591618	1					
ANR	5591664	PrimaryExpression	'\\\\'		5591618	0					
ANR	5591665	IfStatement	if ( psz && ( ! pbs || psz < pbs ) )		5591618	3					
ANR	5591666	Condition	psz && ( ! pbs || psz < pbs )	479:5:14085:14112	5591618	0	True				
ANR	5591667	AndExpression	psz && ( ! pbs || psz < pbs )		5591618	0		&&			
ANR	5591668	Identifier	psz		5591618	0					
ANR	5591669	OrExpression	! pbs || psz < pbs		5591618	1		||			
ANR	5591670	UnaryOperationExpression	! pbs		5591618	0					
ANR	5591671	UnaryOperator	!		5591618	0					
ANR	5591672	Identifier	pbs		5591618	1					
ANR	5591673	RelationalExpression	psz < pbs		5591618	1		<			
ANR	5591674	Identifier	psz		5591618	0					
ANR	5591675	Identifier	pbs		5591618	1					
ANR	5591676	CompoundStatement		12:2:329:379	5591618	1					
ANR	5591677	IdentifierDeclStatement	int cch = ( psz - pszKeyName ) ;	481:2:14120:14151	5591618	0	True				
ANR	5591678	IdentifierDecl	cch = ( psz - pszKeyName )		5591618	0					
ANR	5591679	IdentifierDeclType	int		5591618	0					
ANR	5591680	Identifier	cch		5591618	1					
ANR	5591681	AssignmentExpression	cch = ( psz - pszKeyName )		5591618	2		=			
ANR	5591682	Identifier	cch		5591618	0					
ANR	5591683	AdditiveExpression	psz - pszKeyName		5591618	1		-			
ANR	5591684	Identifier	psz		5591618	0					
ANR	5591685	Identifier	pszKeyName		5591618	1					
ANR	5591686	IdentifierDeclStatement	char * pszAttr = ( char * ) malloc ( cchPrefix + cch + 1 ) ;	482:2:14155:14205	5591618	1	True				
ANR	5591687	IdentifierDecl	* pszAttr = ( char * ) malloc ( cchPrefix + cch + 1 )		5591618	0					
ANR	5591688	IdentifierDeclType	char *		5591618	0					
ANR	5591689	Identifier	pszAttr		5591618	1					
ANR	5591690	AssignmentExpression	* pszAttr = ( char * ) malloc ( cchPrefix + cch + 1 )		5591618	2		=			
ANR	5591691	Identifier	pszAttr		5591618	0					
ANR	5591692	CastExpression	( char * ) malloc ( cchPrefix + cch + 1 )		5591618	1					
ANR	5591693	CastTarget	char *		5591618	0					
ANR	5591694	CallExpression	malloc ( cchPrefix + cch + 1 )		5591618	1					
ANR	5591695	Callee	malloc		5591618	0					
ANR	5591696	Identifier	malloc		5591618	0					
ANR	5591697	ArgumentList	cchPrefix + cch + 1		5591618	1					
ANR	5591698	Argument	cchPrefix + cch + 1		5591618	0					
ANR	5591699	AdditiveExpression	cchPrefix + cch + 1		5591618	0		+			
ANR	5591700	Identifier	cchPrefix		5591618	0					
ANR	5591701	AdditiveExpression	cch + 1		5591618	1		+			
ANR	5591702	Identifier	cch		5591618	0					
ANR	5591703	PrimaryExpression	1		5591618	1					
ANR	5591704	IfStatement	if ( pszPrefix )		5591618	2					
ANR	5591705	Condition	pszPrefix	483:6:14213:14221	5591618	0	True				
ANR	5591706	Identifier	pszPrefix		5591618	0					
ANR	5591707	ExpressionStatement	"strcpy ( pszAttr , pszPrefix )"	484:3:14227:14253	5591618	1	True				
ANR	5591708	CallExpression	"strcpy ( pszAttr , pszPrefix )"		5591618	0					
ANR	5591709	Callee	strcpy		5591618	0					
ANR	5591710	Identifier	strcpy		5591618	0					
ANR	5591711	ArgumentList	pszAttr		5591618	1					
ANR	5591712	Argument	pszAttr		5591618	0					
ANR	5591713	Identifier	pszAttr		5591618	0					
ANR	5591714	Argument	pszPrefix		5591618	1					
ANR	5591715	Identifier	pszPrefix		5591618	0					
ANR	5591716	ExpressionStatement	"memcpy ( pszAttr + cchPrefix , pszKeyName , cch )"	485:2:14257:14301	5591618	3	True				
ANR	5591717	CallExpression	"memcpy ( pszAttr + cchPrefix , pszKeyName , cch )"		5591618	0					
ANR	5591718	Callee	memcpy		5591618	0					
ANR	5591719	Identifier	memcpy		5591618	0					
ANR	5591720	ArgumentList	pszAttr + cchPrefix		5591618	1					
ANR	5591721	Argument	pszAttr + cchPrefix		5591618	0					
ANR	5591722	AdditiveExpression	pszAttr + cchPrefix		5591618	0		+			
ANR	5591723	Identifier	pszAttr		5591618	0					
ANR	5591724	Identifier	cchPrefix		5591618	1					
ANR	5591725	Argument	pszKeyName		5591618	1					
ANR	5591726	Identifier	pszKeyName		5591618	0					
ANR	5591727	Argument	cch		5591618	2					
ANR	5591728	Identifier	cch		5591618	0					
ANR	5591729	ExpressionStatement	pszAttr [ cchPrefix + cch ] = 0	486:2:14305:14333	5591618	4	True				
ANR	5591730	AssignmentExpression	pszAttr [ cchPrefix + cch ] = 0		5591618	0		=			
ANR	5591731	ArrayIndexing	pszAttr [ cchPrefix + cch ]		5591618	0					
ANR	5591732	Identifier	pszAttr		5591618	0					
ANR	5591733	AdditiveExpression	cchPrefix + cch		5591618	1		+			
ANR	5591734	Identifier	cchPrefix		5591618	0					
ANR	5591735	Identifier	cch		5591618	1					
ANR	5591736	PrimaryExpression	0		5591618	1					
ANR	5591737	WhileStatement	while ( cch > 0 && isspace ( pszAttr [ cchPrefix + cch - 1 ] ) )		5591618	5					
ANR	5591738	Condition	cch > 0 && isspace ( pszAttr [ cchPrefix + cch - 1 ] )	487:9:14344:14387	5591618	0	True				
ANR	5591739	AndExpression	cch > 0 && isspace ( pszAttr [ cchPrefix + cch - 1 ] )		5591618	0		&&			
ANR	5591740	RelationalExpression	cch > 0		5591618	0		>			
ANR	5591741	Identifier	cch		5591618	0					
ANR	5591742	PrimaryExpression	0		5591618	1					
ANR	5591743	CallExpression	isspace ( pszAttr [ cchPrefix + cch - 1 ] )		5591618	1					
ANR	5591744	Callee	isspace		5591618	0					
ANR	5591745	Identifier	isspace		5591618	0					
ANR	5591746	ArgumentList	pszAttr [ cchPrefix + cch - 1 ]		5591618	1					
ANR	5591747	Argument	pszAttr [ cchPrefix + cch - 1 ]		5591618	0					
ANR	5591748	ArrayIndexing	pszAttr [ cchPrefix + cch - 1 ]		5591618	0					
ANR	5591749	Identifier	pszAttr		5591618	0					
ANR	5591750	AdditiveExpression	cchPrefix + cch - 1		5591618	1		+			
ANR	5591751	Identifier	cchPrefix		5591618	0					
ANR	5591752	AdditiveExpression	cch - 1		5591618	1		-			
ANR	5591753	Identifier	cch		5591618	0					
ANR	5591754	PrimaryExpression	1		5591618	1					
ANR	5591755	CompoundStatement		18:2:566:566	5591618	1					
ANR	5591756	ExpressionStatement	pszAttr [ cchPrefix + cch - 1 ] = 0	489:3:14397:14425	5591618	0	True				
ANR	5591757	AssignmentExpression	pszAttr [ cchPrefix + cch - 1 ] = 0		5591618	0		=			
ANR	5591758	ArrayIndexing	pszAttr [ cchPrefix + cch - 1 ]		5591618	0					
ANR	5591759	Identifier	pszAttr		5591618	0					
ANR	5591760	AdditiveExpression	cchPrefix + cch - 1		5591618	1		+			
ANR	5591761	Identifier	cchPrefix		5591618	0					
ANR	5591762	AdditiveExpression	cch - 1		5591618	1		-			
ANR	5591763	Identifier	cch		5591618	0					
ANR	5591764	PrimaryExpression	1		5591618	1					
ANR	5591765	PrimaryExpression	0		5591618	1					
ANR	5591766	ExpressionStatement	-- cch	490:6:14433:14438	5591618	1	True				
ANR	5591767	UnaryExpression	-- cch		5591618	0					
ANR	5591768	IncDec	--		5591618	0					
ANR	5591769	Identifier	cch		5591618	1					
ANR	5591770	ReturnStatement	return pszAttr ;	492:2:14446:14460	5591618	6	True				
ANR	5591771	Identifier	pszAttr		5591618	0					
ANR	5591772	ExpressionStatement	psz = pszKeyName + strlen ( pszKeyName )	499:1:14642:14679	5591618	4	True				
ANR	5591773	AssignmentExpression	psz = pszKeyName + strlen ( pszKeyName )		5591618	0		=			
ANR	5591774	Identifier	psz		5591618	0					
ANR	5591775	AdditiveExpression	pszKeyName + strlen ( pszKeyName )		5591618	1		+			
ANR	5591776	Identifier	pszKeyName		5591618	0					
ANR	5591777	CallExpression	strlen ( pszKeyName )		5591618	1					
ANR	5591778	Callee	strlen		5591618	0					
ANR	5591779	Identifier	strlen		5591618	0					
ANR	5591780	ArgumentList	pszKeyName		5591618	1					
ANR	5591781	Argument	pszKeyName		5591618	0					
ANR	5591782	Identifier	pszKeyName		5591618	0					
ANR	5591783	IdentifierDeclStatement	"int cSteps = ( strstr ( pszKeyName , ""HKPD\\\\"" ) == pszKeyName ) ? 2 : 3 ;"	500:1:14682:14747	5591618	5	True				
ANR	5591784	IdentifierDecl	"cSteps = ( strstr ( pszKeyName , ""HKPD\\\\"" ) == pszKeyName ) ? 2 : 3"		5591618	0					
ANR	5591785	IdentifierDeclType	int		5591618	0					
ANR	5591786	Identifier	cSteps		5591618	1					
ANR	5591787	AssignmentExpression	"cSteps = ( strstr ( pszKeyName , ""HKPD\\\\"" ) == pszKeyName ) ? 2 : 3"		5591618	2		=			
ANR	5591788	Identifier	cSteps		5591618	0					
ANR	5591789	ConditionalExpression	"( strstr ( pszKeyName , ""HKPD\\\\"" ) == pszKeyName ) ? 2 : 3"		5591618	1					
ANR	5591790	Condition	"strstr ( pszKeyName , ""HKPD\\\\"" ) == pszKeyName"		5591618	0					
ANR	5591791	EqualityExpression	"strstr ( pszKeyName , ""HKPD\\\\"" ) == pszKeyName"		5591618	0		==			
ANR	5591792	CallExpression	"strstr ( pszKeyName , ""HKPD\\\\"" )"		5591618	0					
ANR	5591793	Callee	strstr		5591618	0					
ANR	5591794	Identifier	strstr		5591618	0					
ANR	5591795	ArgumentList	pszKeyName		5591618	1					
ANR	5591796	Argument	pszKeyName		5591618	0					
ANR	5591797	Identifier	pszKeyName		5591618	0					
ANR	5591798	Argument	"""HKPD\\\\"""		5591618	1					
ANR	5591799	PrimaryExpression	"""HKPD\\\\"""		5591618	0					
ANR	5591800	Identifier	pszKeyName		5591618	1					
ANR	5591801	PrimaryExpression	2		5591618	1					
ANR	5591802	PrimaryExpression	3		5591618	2					
ANR	5591803	WhileStatement	while ( psz > pszKeyName && ( psz [ - 1 ] != '\\\\' || -- cSteps > 0 ) )		5591618	6					
ANR	5591804	Condition	psz > pszKeyName && ( psz [ - 1 ] != '\\\\' || -- cSteps > 0 )	501:8:14757:14809	5591618	0	True				
ANR	5591805	AndExpression	psz > pszKeyName && ( psz [ - 1 ] != '\\\\' || -- cSteps > 0 )		5591618	0		&&			
ANR	5591806	RelationalExpression	psz > pszKeyName		5591618	0		>			
ANR	5591807	Identifier	psz		5591618	0					
ANR	5591808	Identifier	pszKeyName		5591618	1					
ANR	5591809	OrExpression	psz [ - 1 ] != '\\\\' || -- cSteps > 0		5591618	1		||			
ANR	5591810	EqualityExpression	psz [ - 1 ] != '\\\\'		5591618	0		!=			
ANR	5591811	ArrayIndexing	psz [ - 1 ]		5591618	0					
ANR	5591812	Identifier	psz		5591618	0					
ANR	5591813	UnaryOperationExpression	- 1		5591618	1					
ANR	5591814	UnaryOperator	-		5591618	0					
ANR	5591815	PrimaryExpression	1		5591618	1					
ANR	5591816	PrimaryExpression	'\\\\'		5591618	1					
ANR	5591817	RelationalExpression	-- cSteps > 0		5591618	1		>			
ANR	5591818	UnaryExpression	-- cSteps		5591618	0					
ANR	5591819	IncDec	--		5591618	0					
ANR	5591820	Identifier	cSteps		5591618	1					
ANR	5591821	PrimaryExpression	0		5591618	1					
ANR	5591822	ExpressionStatement	-- psz	502:2:14814:14819	5591618	1	True				
ANR	5591823	UnaryExpression	-- psz		5591618	0					
ANR	5591824	IncDec	--		5591618	0					
ANR	5591825	Identifier	psz		5591618	1					
ANR	5591826	IfStatement	if ( ! cchPrefix && psz > pszKeyName && isdigit ( * psz ) )		5591618	7					
ANR	5591827	Condition	! cchPrefix && psz > pszKeyName && isdigit ( * psz )	506:6:14955:15002	5591618	0	True				
ANR	5591828	AndExpression	! cchPrefix && psz > pszKeyName && isdigit ( * psz )		5591618	0		&&			
ANR	5591829	UnaryOperationExpression	! cchPrefix		5591618	0					
ANR	5591830	UnaryOperator	!		5591618	0					
ANR	5591831	Identifier	cchPrefix		5591618	1					
ANR	5591832	AndExpression	psz > pszKeyName && isdigit ( * psz )		5591618	1		&&			
ANR	5591833	RelationalExpression	psz > pszKeyName		5591618	0		>			
ANR	5591834	Identifier	psz		5591618	0					
ANR	5591835	Identifier	pszKeyName		5591618	1					
ANR	5591836	CallExpression	isdigit ( * psz )		5591618	1					
ANR	5591837	Callee	isdigit		5591618	0					
ANR	5591838	Identifier	isdigit		5591618	0					
ANR	5591839	ArgumentList	* psz		5591618	1					
ANR	5591840	Argument	* psz		5591618	0					
ANR	5591841	UnaryOperationExpression	* psz		5591618	0					
ANR	5591842	UnaryOperator	*		5591618	0					
ANR	5591843	Identifier	psz		5591618	1					
ANR	5591844	ExpressionStatement	-- psz	507:2:15007:15012	5591618	1	True				
ANR	5591845	UnaryExpression	-- psz		5591618	0					
ANR	5591846	IncDec	--		5591618	0					
ANR	5591847	Identifier	psz		5591618	1					
ANR	5591848	IdentifierDeclStatement	int cch = strlen ( psz ) ;	512:1:15106:15127	5591618	8	True				
ANR	5591849	IdentifierDecl	cch = strlen ( psz )		5591618	0					
ANR	5591850	IdentifierDeclType	int		5591618	0					
ANR	5591851	Identifier	cch		5591618	1					
ANR	5591852	AssignmentExpression	cch = strlen ( psz )		5591618	2		=			
ANR	5591853	Identifier	cch		5591618	0					
ANR	5591854	CallExpression	strlen ( psz )		5591618	1					
ANR	5591855	Callee	strlen		5591618	0					
ANR	5591856	Identifier	strlen		5591618	0					
ANR	5591857	ArgumentList	psz		5591618	1					
ANR	5591858	Argument	psz		5591618	0					
ANR	5591859	Identifier	psz		5591618	0					
ANR	5591860	IdentifierDeclStatement	bool fPercent = false ;	513:1:15130:15151	5591618	9	True				
ANR	5591861	IdentifierDecl	fPercent = false		5591618	0					
ANR	5591862	IdentifierDeclType	bool		5591618	0					
ANR	5591863	Identifier	fPercent		5591618	1					
ANR	5591864	AssignmentExpression	fPercent = false		5591618	2		=			
ANR	5591865	Identifier	false		5591618	0					
ANR	5591866	Identifier	false		5591618	1					
ANR	5591867	IfStatement	"if ( strchr ( psz , '%' ) )"		5591618	10					
ANR	5591868	Condition	"strchr ( psz , '%' )"	514:5:15158:15173	5591618	0	True				
ANR	5591869	CallExpression	"strchr ( psz , '%' )"		5591618	0					
ANR	5591870	Callee	strchr		5591618	0					
ANR	5591871	Identifier	strchr		5591618	0					
ANR	5591872	ArgumentList	psz		5591618	1					
ANR	5591873	Argument	psz		5591618	0					
ANR	5591874	Identifier	psz		5591618	0					
ANR	5591875	Argument	'%'		5591618	1					
ANR	5591876	PrimaryExpression	'%'		5591618	0					
ANR	5591877	CompoundStatement		45:1:1351:1351	5591618	1					
ANR	5591878	ExpressionStatement	"cch += strlen ( ""Percent"" )"	516:2:15181:15205	5591618	0	True				
ANR	5591879	AssignmentExpression	"cch += strlen ( ""Percent"" )"		5591618	0		+=			
ANR	5591880	Identifier	cch		5591618	0					
ANR	5591881	CallExpression	"strlen ( ""Percent"" )"		5591618	1					
ANR	5591882	Callee	strlen		5591618	0					
ANR	5591883	Identifier	strlen		5591618	0					
ANR	5591884	ArgumentList	"""Percent"""		5591618	1					
ANR	5591885	Argument	"""Percent"""		5591618	0					
ANR	5591886	PrimaryExpression	"""Percent"""		5591618	0					
ANR	5591887	ExpressionStatement	fPercent = true	517:2:15209:15224	5591618	1	True				
ANR	5591888	AssignmentExpression	fPercent = true		5591618	0		=			
ANR	5591889	Identifier	fPercent		5591618	0					
ANR	5591890	Identifier	true		5591618	1					
ANR	5591891	IdentifierDeclStatement	bool fPerSec = false ;	520:1:15231:15251	5591618	11	True				
ANR	5591892	IdentifierDecl	fPerSec = false		5591618	0					
ANR	5591893	IdentifierDeclType	bool		5591618	0					
ANR	5591894	Identifier	fPerSec		5591618	1					
ANR	5591895	AssignmentExpression	fPerSec = false		5591618	2		=			
ANR	5591896	Identifier	false		5591618	0					
ANR	5591897	Identifier	false		5591618	1					
ANR	5591898	IfStatement	"if ( strstr ( psz , ""/sec"" ) )"		5591618	12					
ANR	5591899	Condition	"strstr ( psz , ""/sec"" )"	521:5:15258:15276	5591618	0	True				
ANR	5591900	CallExpression	"strstr ( psz , ""/sec"" )"		5591618	0					
ANR	5591901	Callee	strstr		5591618	0					
ANR	5591902	Identifier	strstr		5591618	0					
ANR	5591903	ArgumentList	psz		5591618	1					
ANR	5591904	Argument	psz		5591618	0					
ANR	5591905	Identifier	psz		5591618	0					
ANR	5591906	Argument	"""/sec"""		5591618	1					
ANR	5591907	PrimaryExpression	"""/sec"""		5591618	0					
ANR	5591908	CompoundStatement		52:1:1454:1454	5591618	1					
ANR	5591909	ExpressionStatement	"cch += strlen ( ""_Per_"" )"	523:2:15284:15306	5591618	0	True				
ANR	5591910	AssignmentExpression	"cch += strlen ( ""_Per_"" )"		5591618	0		+=			
ANR	5591911	Identifier	cch		5591618	0					
ANR	5591912	CallExpression	"strlen ( ""_Per_"" )"		5591618	1					
ANR	5591913	Callee	strlen		5591618	0					
ANR	5591914	Identifier	strlen		5591618	0					
ANR	5591915	ArgumentList	"""_Per_"""		5591618	1					
ANR	5591916	Argument	"""_Per_"""		5591618	0					
ANR	5591917	PrimaryExpression	"""_Per_"""		5591618	0					
ANR	5591918	ExpressionStatement	fPerSec = true	524:2:15310:15324	5591618	1	True				
ANR	5591919	AssignmentExpression	fPerSec = true		5591618	0		=			
ANR	5591920	Identifier	fPerSec		5591618	0					
ANR	5591921	Identifier	true		5591618	1					
ANR	5591922	IdentifierDeclStatement	char * pszAttr = ( char * ) malloc ( cchPrefix + cch + 1 ) ;	527:1:15331:15383	5591618	13	True				
ANR	5591923	IdentifierDecl	* pszAttr = ( char * ) malloc ( cchPrefix + cch + 1 )		5591618	0					
ANR	5591924	IdentifierDeclType	char *		5591618	0					
ANR	5591925	Identifier	pszAttr		5591618	1					
ANR	5591926	AssignmentExpression	* pszAttr = ( char * ) malloc ( cchPrefix + cch + 1 )		5591618	2		=			
ANR	5591927	Identifier	pszAttr		5591618	0					
ANR	5591928	CastExpression	( char * ) malloc ( cchPrefix + cch + 1 )		5591618	1					
ANR	5591929	CastTarget	char *		5591618	0					
ANR	5591930	CallExpression	malloc ( cchPrefix + cch + 1 )		5591618	1					
ANR	5591931	Callee	malloc		5591618	0					
ANR	5591932	Identifier	malloc		5591618	0					
ANR	5591933	ArgumentList	cchPrefix + cch + 1		5591618	1					
ANR	5591934	Argument	cchPrefix + cch + 1		5591618	0					
ANR	5591935	AdditiveExpression	cchPrefix + cch + 1		5591618	0		+			
ANR	5591936	Identifier	cchPrefix		5591618	0					
ANR	5591937	AdditiveExpression	cch + 1		5591618	1		+			
ANR	5591938	Identifier	cch		5591618	0					
ANR	5591939	PrimaryExpression	1		5591618	1					
ANR	5591940	IfStatement	if ( pszPrefix )		5591618	14					
ANR	5591941	Condition	pszPrefix	528:8:15393:15401	5591618	0	True				
ANR	5591942	Identifier	pszPrefix		5591618	0					
ANR	5591943	ExpressionStatement	"strcpy ( pszAttr , pszPrefix )"	529:2:15406:15432	5591618	1	True				
ANR	5591944	CallExpression	"strcpy ( pszAttr , pszPrefix )"		5591618	0					
ANR	5591945	Callee	strcpy		5591618	0					
ANR	5591946	Identifier	strcpy		5591618	0					
ANR	5591947	ArgumentList	pszAttr		5591618	1					
ANR	5591948	Argument	pszAttr		5591618	0					
ANR	5591949	Identifier	pszAttr		5591618	0					
ANR	5591950	Argument	pszPrefix		5591618	1					
ANR	5591951	Identifier	pszPrefix		5591618	0					
ANR	5591952	IfStatement	if ( cch > 1 && pszAttr [ cchPrefix + cch - 1 ] == '\\\\' )		5591618	15					
ANR	5591953	Condition	cch > 1 && pszAttr [ cchPrefix + cch - 1 ] == '\\\\'	534:5:15547:15591	5591618	0	True				
ANR	5591954	AndExpression	cch > 1 && pszAttr [ cchPrefix + cch - 1 ] == '\\\\'		5591618	0		&&			
ANR	5591955	RelationalExpression	cch > 1		5591618	0		>			
ANR	5591956	Identifier	cch		5591618	0					
ANR	5591957	PrimaryExpression	1		5591618	1					
ANR	5591958	EqualityExpression	pszAttr [ cchPrefix + cch - 1 ] == '\\\\'		5591618	1		==			
ANR	5591959	ArrayIndexing	pszAttr [ cchPrefix + cch - 1 ]		5591618	0					
ANR	5591960	Identifier	pszAttr		5591618	0					
ANR	5591961	AdditiveExpression	cchPrefix + cch - 1		5591618	1		+			
ANR	5591962	Identifier	cchPrefix		5591618	0					
ANR	5591963	AdditiveExpression	cch - 1		5591618	1		-			
ANR	5591964	Identifier	cch		5591618	0					
ANR	5591965	PrimaryExpression	1		5591618	1					
ANR	5591966	PrimaryExpression	'\\\\'		5591618	1					
ANR	5591967	ExpressionStatement	pszAttr [ cchPrefix + cch - 1 ] = 0	535:2:15596:15626	5591618	1	True				
ANR	5591968	AssignmentExpression	pszAttr [ cchPrefix + cch - 1 ] = 0		5591618	0		=			
ANR	5591969	ArrayIndexing	pszAttr [ cchPrefix + cch - 1 ]		5591618	0					
ANR	5591970	Identifier	pszAttr		5591618	0					
ANR	5591971	AdditiveExpression	cchPrefix + cch - 1		5591618	1		+			
ANR	5591972	Identifier	cchPrefix		5591618	0					
ANR	5591973	AdditiveExpression	cch - 1		5591618	1		-			
ANR	5591974	Identifier	cch		5591618	0					
ANR	5591975	PrimaryExpression	1		5591618	1					
ANR	5591976	PrimaryExpression	0		5591618	1					
ANR	5591977	IdentifierDeclStatement	char * pszT = pszAttr + cchPrefix ;	540:1:15715:15748	5591618	16	True				
ANR	5591978	IdentifierDecl	* pszT = pszAttr + cchPrefix		5591618	0					
ANR	5591979	IdentifierDeclType	char *		5591618	0					
ANR	5591980	Identifier	pszT		5591618	1					
ANR	5591981	AssignmentExpression	* pszT = pszAttr + cchPrefix		5591618	2		=			
ANR	5591982	Identifier	pszT		5591618	0					
ANR	5591983	AdditiveExpression	pszAttr + cchPrefix		5591618	1		+			
ANR	5591984	Identifier	pszAttr		5591618	0					
ANR	5591985	Identifier	cchPrefix		5591618	1					
ANR	5591986	WhileStatement	while ( * pszT = * psz )		5591618	17					
ANR	5591987	Condition	* pszT = * psz	541:8:15758:15769	5591618	0	True				
ANR	5591988	AssignmentExpression	* pszT = * psz		5591618	0		=			
ANR	5591989	UnaryOperationExpression	* pszT		5591618	0					
ANR	5591990	UnaryOperator	*		5591618	0					
ANR	5591991	Identifier	pszT		5591618	1					
ANR	5591992	UnaryOperationExpression	* psz		5591618	1					
ANR	5591993	UnaryOperator	*		5591618	0					
ANR	5591994	Identifier	psz		5591618	1					
ANR	5591995	CompoundStatement		72:1:1947:1947	5591618	1					
ANR	5591996	IfStatement	if ( fPercent && * pszT == '%' )		5591618	0					
ANR	5591997	Condition	fPercent && * pszT == '%'	543:6:15782:15805	5591618	0	True				
ANR	5591998	AndExpression	fPercent && * pszT == '%'		5591618	0		&&			
ANR	5591999	Identifier	fPercent		5591618	0					
ANR	5592000	EqualityExpression	* pszT == '%'		5591618	1		==			
ANR	5592001	UnaryOperationExpression	* pszT		5591618	0					
ANR	5592002	UnaryOperator	*		5591618	0					
ANR	5592003	Identifier	pszT		5591618	1					
ANR	5592004	PrimaryExpression	'%'		5591618	1					
ANR	5592005	CompoundStatement		74:2:1984:1984	5591618	1					
ANR	5592006	ExpressionStatement	"strcpy ( pszT , ""Percent"" )"	545:3:15815:15838	5591618	0	True				
ANR	5592007	CallExpression	"strcpy ( pszT , ""Percent"" )"		5591618	0					
ANR	5592008	Callee	strcpy		5591618	0					
ANR	5592009	Identifier	strcpy		5591618	0					
ANR	5592010	ArgumentList	pszT		5591618	1					
ANR	5592011	Argument	pszT		5591618	0					
ANR	5592012	Identifier	pszT		5591618	0					
ANR	5592013	Argument	"""Percent"""		5591618	1					
ANR	5592014	PrimaryExpression	"""Percent"""		5591618	0					
ANR	5592015	ExpressionStatement	pszT += strlen ( pszT ) - 1	546:3:15843:15865	5591618	1	True				
ANR	5592016	AssignmentExpression	pszT += strlen ( pszT ) - 1		5591618	0		+=			
ANR	5592017	Identifier	pszT		5591618	0					
ANR	5592018	AdditiveExpression	strlen ( pszT ) - 1		5591618	1		-			
ANR	5592019	CallExpression	strlen ( pszT )		5591618	0					
ANR	5592020	Callee	strlen		5591618	0					
ANR	5592021	Identifier	strlen		5591618	0					
ANR	5592022	ArgumentList	pszT		5591618	1					
ANR	5592023	Argument	pszT		5591618	0					
ANR	5592024	Identifier	pszT		5591618	0					
ANR	5592025	PrimaryExpression	1		5591618	1					
ANR	5592026	ExpressionStatement	fPercent = false	547:3:15870:15886	5591618	2	True				
ANR	5592027	AssignmentExpression	fPercent = false		5591618	0		=			
ANR	5592028	Identifier	fPercent		5591618	0					
ANR	5592029	Identifier	false		5591618	1					
ANR	5592030	ElseStatement	else		5591618	0					
ANR	5592031	IfStatement	"if ( fPerSec && * pszT == '/' && strstr ( psz , ""sec"" ) == psz + 1 )"		5591618	0					
ANR	5592032	Condition	"fPerSec && * pszT == '/' && strstr ( psz , ""sec"" ) == psz + 1"	549:11:15903:15956	5591618	0	True				
ANR	5592033	AndExpression	"fPerSec && * pszT == '/' && strstr ( psz , ""sec"" ) == psz + 1"		5591618	0		&&			
ANR	5592034	Identifier	fPerSec		5591618	0					
ANR	5592035	AndExpression	"* pszT == '/' && strstr ( psz , ""sec"" ) == psz + 1"		5591618	1		&&			
ANR	5592036	EqualityExpression	* pszT == '/'		5591618	0		==			
ANR	5592037	UnaryOperationExpression	* pszT		5591618	0					
ANR	5592038	UnaryOperator	*		5591618	0					
ANR	5592039	Identifier	pszT		5591618	1					
ANR	5592040	PrimaryExpression	'/'		5591618	1					
ANR	5592041	EqualityExpression	"strstr ( psz , ""sec"" ) == psz + 1"		5591618	1		==			
ANR	5592042	CallExpression	"strstr ( psz , ""sec"" )"		5591618	0					
ANR	5592043	Callee	strstr		5591618	0					
ANR	5592044	Identifier	strstr		5591618	0					
ANR	5592045	ArgumentList	psz		5591618	1					
ANR	5592046	Argument	psz		5591618	0					
ANR	5592047	Identifier	psz		5591618	0					
ANR	5592048	Argument	"""sec"""		5591618	1					
ANR	5592049	PrimaryExpression	"""sec"""		5591618	0					
ANR	5592050	AdditiveExpression	psz + 1		5591618	1		+			
ANR	5592051	Identifier	psz		5591618	0					
ANR	5592052	PrimaryExpression	1		5591618	1					
ANR	5592053	CompoundStatement		80:2:2135:2135	5591618	1					
ANR	5592054	ExpressionStatement	"strcpy ( pszT , ""_Per_S"" )"	551:3:15966:15988	5591618	0	True				
ANR	5592055	CallExpression	"strcpy ( pszT , ""_Per_S"" )"		5591618	0					
ANR	5592056	Callee	strcpy		5591618	0					
ANR	5592057	Identifier	strcpy		5591618	0					
ANR	5592058	ArgumentList	pszT		5591618	1					
ANR	5592059	Argument	pszT		5591618	0					
ANR	5592060	Identifier	pszT		5591618	0					
ANR	5592061	Argument	"""_Per_S"""		5591618	1					
ANR	5592062	PrimaryExpression	"""_Per_S"""		5591618	0					
ANR	5592063	ExpressionStatement	pszT += strlen ( pszT ) - 1	552:3:15993:16015	5591618	1	True				
ANR	5592064	AssignmentExpression	pszT += strlen ( pszT ) - 1		5591618	0		+=			
ANR	5592065	Identifier	pszT		5591618	0					
ANR	5592066	AdditiveExpression	strlen ( pszT ) - 1		5591618	1		-			
ANR	5592067	CallExpression	strlen ( pszT )		5591618	0					
ANR	5592068	Callee	strlen		5591618	0					
ANR	5592069	Identifier	strlen		5591618	0					
ANR	5592070	ArgumentList	pszT		5591618	1					
ANR	5592071	Argument	pszT		5591618	0					
ANR	5592072	Identifier	pszT		5591618	0					
ANR	5592073	PrimaryExpression	1		5591618	1					
ANR	5592074	ExpressionStatement	psz += 1	553:3:16020:16028	5591618	2	True				
ANR	5592075	AssignmentExpression	psz += 1		5591618	0		+=			
ANR	5592076	Identifier	psz		5591618	0					
ANR	5592077	PrimaryExpression	1		5591618	1					
ANR	5592078	ExpressionStatement	fPerSec = false	554:3:16033:16048	5591618	3	True				
ANR	5592079	AssignmentExpression	fPerSec = false		5591618	0		=			
ANR	5592080	Identifier	fPerSec		5591618	0					
ANR	5592081	Identifier	false		5591618	1					
ANR	5592082	ElseStatement	else		5591618	0					
ANR	5592083	IfStatement	if ( ! isalnum ( * pszT ) )		5591618	0					
ANR	5592084	Condition	! isalnum ( * pszT )	556:12:16066:16081	5591618	0	True				
ANR	5592085	UnaryOperationExpression	! isalnum ( * pszT )		5591618	0					
ANR	5592086	UnaryOperator	!		5591618	0					
ANR	5592087	CallExpression	isalnum ( * pszT )		5591618	1					
ANR	5592088	Callee	isalnum		5591618	0					
ANR	5592089	Identifier	isalnum		5591618	0					
ANR	5592090	ArgumentList	* pszT		5591618	1					
ANR	5592091	Argument	* pszT		5591618	0					
ANR	5592092	UnaryOperationExpression	* pszT		5591618	0					
ANR	5592093	UnaryOperator	*		5591618	0					
ANR	5592094	Identifier	pszT		5591618	1					
ANR	5592095	CompoundStatement		87:2:2260:2260	5591618	1					
ANR	5592096	IfStatement	if ( pszT > pszAttr && pszT [ - 1 ] == '_' )		5591618	0					
ANR	5592097	Condition	pszT > pszAttr && pszT [ - 1 ] == '_'	559:7:16142:16174	5591618	0	True				
ANR	5592098	AndExpression	pszT > pszAttr && pszT [ - 1 ] == '_'		5591618	0		&&			
ANR	5592099	RelationalExpression	pszT > pszAttr		5591618	0		>			
ANR	5592100	Identifier	pszT		5591618	0					
ANR	5592101	Identifier	pszAttr		5591618	1					
ANR	5592102	EqualityExpression	pszT [ - 1 ] == '_'		5591618	1		==			
ANR	5592103	ArrayIndexing	pszT [ - 1 ]		5591618	0					
ANR	5592104	Identifier	pszT		5591618	0					
ANR	5592105	UnaryOperationExpression	- 1		5591618	1					
ANR	5592106	UnaryOperator	-		5591618	0					
ANR	5592107	PrimaryExpression	1		5591618	1					
ANR	5592108	PrimaryExpression	'_'		5591618	1					
ANR	5592109	ExpressionStatement	-- pszT	560:4:16181:16187	5591618	1	True				
ANR	5592110	UnaryExpression	-- pszT		5591618	0					
ANR	5592111	IncDec	--		5591618	0					
ANR	5592112	Identifier	pszT		5591618	1					
ANR	5592113	ExpressionStatement	pszT [ 0 ] = '_'	561:3:16192:16205	5591618	1	True				
ANR	5592114	AssignmentExpression	pszT [ 0 ] = '_'		5591618	0		=			
ANR	5592115	ArrayIndexing	pszT [ 0 ]		5591618	0					
ANR	5592116	Identifier	pszT		5591618	0					
ANR	5592117	PrimaryExpression	0		5591618	1					
ANR	5592118	PrimaryExpression	'_'		5591618	1					
ANR	5592119	ExpressionStatement	++ pszT	563:2:16213:16219	5591618	1	True				
ANR	5592120	UnaryExpression	++ pszT		5591618	0					
ANR	5592121	IncDec	++		5591618	0					
ANR	5592122	Identifier	pszT		5591618	1					
ANR	5592123	ExpressionStatement	++ psz	564:2:16223:16228	5591618	2	True				
ANR	5592124	UnaryExpression	++ psz		5591618	0					
ANR	5592125	IncDec	++		5591618	0					
ANR	5592126	Identifier	psz		5591618	1					
ANR	5592127	ExpressionStatement	cch = strlen ( pszAttr )	571:1:16432:16453	5591618	18	True				
ANR	5592128	AssignmentExpression	cch = strlen ( pszAttr )		5591618	0		=			
ANR	5592129	Identifier	cch		5591618	0					
ANR	5592130	CallExpression	strlen ( pszAttr )		5591618	1					
ANR	5592131	Callee	strlen		5591618	0					
ANR	5592132	Identifier	strlen		5591618	0					
ANR	5592133	ArgumentList	pszAttr		5591618	1					
ANR	5592134	Argument	pszAttr		5591618	0					
ANR	5592135	Identifier	pszAttr		5591618	0					
ANR	5592136	IfStatement	if ( cch > 0 && pszAttr [ cch - 1 ] == '_' )		5591618	19					
ANR	5592137	Condition	cch > 0 && pszAttr [ cch - 1 ] == '_'	572:5:16460:16491	5591618	0	True				
ANR	5592138	AndExpression	cch > 0 && pszAttr [ cch - 1 ] == '_'		5591618	0		&&			
ANR	5592139	RelationalExpression	cch > 0		5591618	0		>			
ANR	5592140	Identifier	cch		5591618	0					
ANR	5592141	PrimaryExpression	0		5591618	1					
ANR	5592142	EqualityExpression	pszAttr [ cch - 1 ] == '_'		5591618	1		==			
ANR	5592143	ArrayIndexing	pszAttr [ cch - 1 ]		5591618	0					
ANR	5592144	Identifier	pszAttr		5591618	0					
ANR	5592145	AdditiveExpression	cch - 1		5591618	1		-			
ANR	5592146	Identifier	cch		5591618	0					
ANR	5592147	PrimaryExpression	1		5591618	1					
ANR	5592148	PrimaryExpression	'_'		5591618	1					
ANR	5592149	ExpressionStatement	pszAttr [ cch - 1 ] = 0	573:2:16496:16514	5591618	1	True				
ANR	5592150	AssignmentExpression	pszAttr [ cch - 1 ] = 0		5591618	0		=			
ANR	5592151	ArrayIndexing	pszAttr [ cch - 1 ]		5591618	0					
ANR	5592152	Identifier	pszAttr		5591618	0					
ANR	5592153	AdditiveExpression	cch - 1		5591618	1		-			
ANR	5592154	Identifier	cch		5591618	0					
ANR	5592155	PrimaryExpression	1		5591618	1					
ANR	5592156	PrimaryExpression	0		5591618	1					
ANR	5592157	ReturnStatement	return pszAttr ;	575:1:16518:16532	5591618	20	True				
ANR	5592158	Identifier	pszAttr		5591618	0					
ANR	5592159	ReturnType	char *		5591618	1					
ANR	5592160	Identifier	generate_reg_key_attr_name		5591618	2					
ANR	5592161	ParameterList	"const char * pszPrefix , const char * pszKeyName"		5591618	3					
ANR	5592162	Parameter	const char * pszPrefix	470:34:13776:13797	5591618	0	True				
ANR	5592163	ParameterType	const char *		5591618	0					
ANR	5592164	Identifier	pszPrefix		5591618	1					
ANR	5592165	Parameter	const char * pszKeyName	470:58:13800:13822	5591618	1	True				
ANR	5592166	ParameterType	const char *		5591618	0					
ANR	5592167	Identifier	pszKeyName		5591618	1					
ANR	5592168	CFGEntryNode	ENTRY		5591618		True				
ANR	5592169	CFGExitNode	EXIT		5591618		True				
ANR	5592170	Symbol	pszPrefix		5591618						
ANR	5592171	Symbol	pbs		5591618						
ANR	5592172	Symbol	* psz		5591618						
ANR	5592173	Symbol	* cchPrefix		5591618						
ANR	5592174	Symbol	fPercent		5591618						
ANR	5592175	Symbol	strchr		5591618						
ANR	5592176	Symbol	cch		5591618						
ANR	5592177	Symbol	* cch		5591618						
ANR	5592178	Symbol	strlen		5591618						
ANR	5592179	Symbol	psz		5591618						
ANR	5592180	Symbol	isdigit		5591618						
ANR	5592181	Symbol	* pszAttr		5591618						
ANR	5592182	Symbol	malloc		5591618						
ANR	5592183	Symbol	isalnum		5591618						
ANR	5592184	Symbol	pszAttr		5591618						
ANR	5592185	Symbol	isspace		5591618						
ANR	5592186	Symbol	false		5591618						
ANR	5592187	Symbol	pszT		5591618						
ANR	5592188	Symbol	* pszT		5591618						
ANR	5592189	Symbol	cSteps		5591618						
ANR	5592190	Symbol	strstr		5591618						
ANR	5592191	Symbol	cchPrefix		5591618						
ANR	5592192	Symbol	true		5591618						
ANR	5592193	Symbol	fPerSec		5591618						
ANR	5592194	Symbol	pszKeyName		5591618						
ANR	5592195	Function	torekHash	583:0:16622:16815							
ANR	5592196	FunctionDef	torekHash (const YourString & s)		5592195	0					
ANR	5592197	CompoundStatement		583:51:16673:16815	5592195	0					
ANR	5592198	IdentifierDeclStatement	unsigned int hash = 0 ;	584:1:16676:16697	5592195	0	True				
ANR	5592199	IdentifierDecl	hash = 0		5592195	0					
ANR	5592200	IdentifierDeclType	unsigned int		5592195	0					
ANR	5592201	Identifier	hash		5592195	1					
ANR	5592202	AssignmentExpression	hash = 0		5592195	2		=			
ANR	5592203	Identifier	hash		5592195	0					
ANR	5592204	PrimaryExpression	0		5592195	1					
ANR	5592205	IdentifierDeclStatement	const char * p = s . s ;	586:1:16701:16720	5592195	1	True				
ANR	5592206	IdentifierDecl	* p = s . s		5592195	0					
ANR	5592207	IdentifierDeclType	const char *		5592195	0					
ANR	5592208	Identifier	p		5592195	1					
ANR	5592209	AssignmentExpression	* p = s . s		5592195	2		=			
ANR	5592210	Identifier	p		5592195	0					
ANR	5592211	MemberAccess	s . s		5592195	1					
ANR	5592212	Identifier	s		5592195	0					
ANR	5592213	Identifier	s		5592195	1					
ANR	5592214	WhileStatement	while ( * p )		5592195	2					
ANR	5592215	Condition	* p	587:8:16730:16731	5592195	0	True				
ANR	5592216	UnaryOperationExpression	* p		5592195	0					
ANR	5592217	UnaryOperator	*		5592195	0					
ANR	5592218	Identifier	p		5592195	1					
ANR	5592219	CompoundStatement		5:12:60:60	5592195	1					
ANR	5592220	ExpressionStatement	hash = ( hash << 5 ) + hash + ( unsigned char ) tolower ( * p )	588:2:16738:16788	5592195	0	True				
ANR	5592221	AssignmentExpression	hash = ( hash << 5 ) + hash + ( unsigned char ) tolower ( * p )		5592195	0		=			
ANR	5592222	Identifier	hash		5592195	0					
ANR	5592223	AdditiveExpression	( hash << 5 ) + hash + ( unsigned char ) tolower ( * p )		5592195	1		+			
ANR	5592224	ShiftExpression	hash << 5		5592195	0		<<			
ANR	5592225	Identifier	hash		5592195	0					
ANR	5592226	PrimaryExpression	5		5592195	1					
ANR	5592227	AdditiveExpression	hash + ( unsigned char ) tolower ( * p )		5592195	1		+			
ANR	5592228	Identifier	hash		5592195	0					
ANR	5592229	CastExpression	( unsigned char ) tolower ( * p )		5592195	1					
ANR	5592230	CastTarget	unsigned char		5592195	0					
ANR	5592231	CallExpression	tolower ( * p )		5592195	1					
ANR	5592232	Callee	tolower		5592195	0					
ANR	5592233	Identifier	tolower		5592195	0					
ANR	5592234	ArgumentList	* p		5592195	1					
ANR	5592235	Argument	* p		5592195	0					
ANR	5592236	UnaryOperationExpression	* p		5592195	0					
ANR	5592237	UnaryOperator	*		5592195	0					
ANR	5592238	Identifier	p		5592195	1					
ANR	5592239	ExpressionStatement	p ++	589:2:16792:16795	5592195	1	True				
ANR	5592240	PostIncDecOperationExpression	p ++		5592195	0					
ANR	5592241	Identifier	p		5592195	0					
ANR	5592242	IncDec	++		5592195	1					
ANR	5592243	ReturnStatement	return hash ;	592:1:16802:16813	5592195	3	True				
ANR	5592244	Identifier	hash		5592195	0					
ANR	5592245	ReturnType	static unsigned int		5592195	1					
ANR	5592246	Identifier	torekHash		5592195	2					
ANR	5592247	ParameterList	const YourString & s		5592195	3					
ANR	5592248	Parameter	const YourString & s	583:30:16652:16670	5592195	0	True				
ANR	5592249	ParameterType	const YourString &		5592195	0					
ANR	5592250	Identifier	s		5592195	1					
ANR	5592251	CFGEntryNode	ENTRY		5592195		True				
ANR	5592252	CFGExitNode	EXIT		5592195		True				
ANR	5592253	Symbol	p		5592195						
ANR	5592254	Symbol	s		5592195						
ANR	5592255	Symbol	tolower		5592195						
ANR	5592256	Symbol	s . s		5592195						
ANR	5592257	Symbol	* p		5592195						
ANR	5592258	Symbol	hash		5592195						
ANR	5592259	Function	DWORDHash	595:0:16818:16880							
ANR	5592260	FunctionDef	DWORDHash (const DWORD & n)		5592259	0					
ANR	5592261	CompoundStatement		597:0:16867:16880	5592259	0					
ANR	5592262	ReturnStatement	return n ;	598:1:16870:16878	5592259	0	True				
ANR	5592263	Identifier	n		5592259	0					
ANR	5592264	ReturnType	static unsigned int		5592259	1					
ANR	5592265	Identifier	DWORDHash		5592259	2					
ANR	5592266	ParameterList	const DWORD & n		5592259	3					
ANR	5592267	Parameter	const DWORD & n	596:11:16849:16863	5592259	0	True				
ANR	5592268	ParameterType	const DWORD &		5592259	0					
ANR	5592269	Identifier	n		5592259	1					
ANR	5592270	CFGEntryNode	ENTRY		5592259		True				
ANR	5592271	CFGExitNode	EXIT		5592259		True				
ANR	5592272	Symbol	n		5592259						
ANR	5592273	ClassDef	<unnamed>	602:13:16931:24931							
ANR	5592274	DeclStmt									
ANR	5592275	Decl							DWORD	DWORD	type
ANR	5592276	DeclStmt									
ANR	5592277	Decl							char	char *	psz
ANR	5592278	DeclStmt									
ANR	5592279	Decl								 [ ]	aPerfTimerTypeNames
ANR	5592280	Function	dump_perf_timer_type_name_table	765:0:24934:25196							
ANR	5592281	FunctionDef	dump_perf_timer_type_name_table ()		5592280	0					
ANR	5592282	CompoundStatement		766:0:24981:25196	5592280	0					
ANR	5592283	ExpressionStatement	"dprintf ( D_ALWAYS , ""Perf Timer Type Names:\\n"" )"	767:1:24984:25029	5592280	0	True				
ANR	5592284	CallExpression	"dprintf ( D_ALWAYS , ""Perf Timer Type Names:\\n"" )"		5592280	0					
ANR	5592285	Callee	dprintf		5592280	0					
ANR	5592286	Identifier	dprintf		5592280	0					
ANR	5592287	ArgumentList	D_ALWAYS		5592280	1					
ANR	5592288	Argument	D_ALWAYS		5592280	0					
ANR	5592289	Identifier	D_ALWAYS		5592280	0					
ANR	5592290	Argument	"""Perf Timer Type Names:\\n"""		5592280	1					
ANR	5592291	PrimaryExpression	"""Perf Timer Type Names:\\n"""		5592280	0					
ANR	5592292	ForStatement	for ( int ii = 0 ; ii < NUM_ELEMENTS ( aPerfTimerTypeNames ) ; ++ ii )		5592280	1					
ANR	5592293	ForInit	int ii = 0 ;	768:6:25037:25047	5592280	0	True				
ANR	5592294	IdentifierDeclStatement	int ii = 0 ;		5592280	0					
ANR	5592295	IdentifierDecl	ii = 0		5592280	0					
ANR	5592296	IdentifierDeclType	int		5592280	0					
ANR	5592297	Identifier	ii		5592280	1					
ANR	5592298	AssignmentExpression	ii = 0		5592280	2		=			
ANR	5592299	Identifier	ii		5592280	0					
ANR	5592300	PrimaryExpression	0		5592280	1					
ANR	5592301	Condition	ii < NUM_ELEMENTS ( aPerfTimerTypeNames )	768:18:25049:25086	5592280	1	True				
ANR	5592302	RelationalExpression	ii < NUM_ELEMENTS ( aPerfTimerTypeNames )		5592280	0		<			
ANR	5592303	Identifier	ii		5592280	0					
ANR	5592304	CallExpression	NUM_ELEMENTS ( aPerfTimerTypeNames )		5592280	1					
ANR	5592305	Callee	NUM_ELEMENTS		5592280	0					
ANR	5592306	Identifier	NUM_ELEMENTS		5592280	0					
ANR	5592307	ArgumentList	aPerfTimerTypeNames		5592280	1					
ANR	5592308	Argument	aPerfTimerTypeNames		5592280	0					
ANR	5592309	Identifier	aPerfTimerTypeNames		5592280	0					
ANR	5592310	UnaryExpression	++ ii	768:58:25089:25092	5592280	2	True				
ANR	5592311	IncDec	++		5592280	0					
ANR	5592312	Identifier	ii		5592280	1					
ANR	5592313	CompoundStatement		4:1:114:114	5592280	3					
ANR	5592314	ExpressionStatement	"dprintf ( D_ALWAYS , ""0x%08X %s\\n"" , aPerfTimerTypeNames [ ii ] . type , aPerfTimerTypeNames [ ii ] . psz )"	770:2:25100:25191	5592280	0	True				
ANR	5592315	CallExpression	"dprintf ( D_ALWAYS , ""0x%08X %s\\n"" , aPerfTimerTypeNames [ ii ] . type , aPerfTimerTypeNames [ ii ] . psz )"		5592280	0					
ANR	5592316	Callee	dprintf		5592280	0					
ANR	5592317	Identifier	dprintf		5592280	0					
ANR	5592318	ArgumentList	D_ALWAYS		5592280	1					
ANR	5592319	Argument	D_ALWAYS		5592280	0					
ANR	5592320	Identifier	D_ALWAYS		5592280	0					
ANR	5592321	Argument	"""0x%08X %s\\n"""		5592280	1					
ANR	5592322	PrimaryExpression	"""0x%08X %s\\n"""		5592280	0					
ANR	5592323	Argument	aPerfTimerTypeNames [ ii ] . type		5592280	2					
ANR	5592324	MemberAccess	aPerfTimerTypeNames [ ii ] . type		5592280	0					
ANR	5592325	ArrayIndexing	aPerfTimerTypeNames [ ii ]		5592280	0					
ANR	5592326	Identifier	aPerfTimerTypeNames		5592280	0					
ANR	5592327	Identifier	ii		5592280	1					
ANR	5592328	Identifier	type		5592280	1					
ANR	5592329	Argument	aPerfTimerTypeNames [ ii ] . psz		5592280	3					
ANR	5592330	MemberAccess	aPerfTimerTypeNames [ ii ] . psz		5592280	0					
ANR	5592331	ArrayIndexing	aPerfTimerTypeNames [ ii ]		5592280	0					
ANR	5592332	Identifier	aPerfTimerTypeNames		5592280	0					
ANR	5592333	Identifier	ii		5592280	1					
ANR	5592334	Identifier	psz		5592280	1					
ANR	5592335	ReturnType	static void		5592280	1					
ANR	5592336	Identifier	dump_perf_timer_type_name_table		5592280	2					
ANR	5592337	ParameterList			5592280	3					
ANR	5592338	CFGEntryNode	ENTRY		5592280		True				
ANR	5592339	CFGExitNode	EXIT		5592280		True				
ANR	5592340	Symbol	ii		5592280						
ANR	5592341	Symbol	NUM_ELEMENTS		5592280						
ANR	5592342	Symbol	aPerfTimerTypeNames		5592280						
ANR	5592343	Symbol	aPerfTimerTypeNames [ ii ] . psz		5592280						
ANR	5592344	Symbol	* ii		5592280						
ANR	5592345	Symbol	aPerfTimerTypeNames [ ii ] . type		5592280						
ANR	5592346	Symbol	D_ALWAYS		5592280						
ANR	5592347	Symbol	* aPerfTimerTypeNames		5592280						
ANR	5592348	Function	perf_timer_type_name	773:0:25198:25418							
ANR	5592349	FunctionDef	perf_timer_type_name (DWORD type)		5592348	0					
ANR	5592350	CompoundStatement		774:0:25251:25418	5592348	0					
ANR	5592351	ForStatement	for ( int ii = 0 ; ii < NUM_ELEMENTS ( aPerfTimerTypeNames ) ; ++ ii )		5592348	0					
ANR	5592352	ForInit	int ii = 0 ;	775:6:25259:25269	5592348	0	True				
ANR	5592353	IdentifierDeclStatement	int ii = 0 ;		5592348	0					
ANR	5592354	IdentifierDecl	ii = 0		5592348	0					
ANR	5592355	IdentifierDeclType	int		5592348	0					
ANR	5592356	Identifier	ii		5592348	1					
ANR	5592357	AssignmentExpression	ii = 0		5592348	2		=			
ANR	5592358	Identifier	ii		5592348	0					
ANR	5592359	PrimaryExpression	0		5592348	1					
ANR	5592360	Condition	ii < NUM_ELEMENTS ( aPerfTimerTypeNames )	775:18:25271:25308	5592348	1	True				
ANR	5592361	RelationalExpression	ii < NUM_ELEMENTS ( aPerfTimerTypeNames )		5592348	0		<			
ANR	5592362	Identifier	ii		5592348	0					
ANR	5592363	CallExpression	NUM_ELEMENTS ( aPerfTimerTypeNames )		5592348	1					
ANR	5592364	Callee	NUM_ELEMENTS		5592348	0					
ANR	5592365	Identifier	NUM_ELEMENTS		5592348	0					
ANR	5592366	ArgumentList	aPerfTimerTypeNames		5592348	1					
ANR	5592367	Argument	aPerfTimerTypeNames		5592348	0					
ANR	5592368	Identifier	aPerfTimerTypeNames		5592348	0					
ANR	5592369	UnaryExpression	++ ii	775:58:25311:25314	5592348	2	True				
ANR	5592370	IncDec	++		5592348	0					
ANR	5592371	Identifier	ii		5592348	1					
ANR	5592372	CompoundStatement		3:1:66:66	5592348	3					
ANR	5592373	IfStatement	if ( type == aPerfTimerTypeNames [ ii ] . type )		5592348	0					
ANR	5592374	Condition	type == aPerfTimerTypeNames [ ii ] . type	777:6:25326:25361	5592348	0	True				
ANR	5592375	EqualityExpression	type == aPerfTimerTypeNames [ ii ] . type		5592348	0		==			
ANR	5592376	Identifier	type		5592348	0					
ANR	5592377	MemberAccess	aPerfTimerTypeNames [ ii ] . type		5592348	1					
ANR	5592378	ArrayIndexing	aPerfTimerTypeNames [ ii ]		5592348	0					
ANR	5592379	Identifier	aPerfTimerTypeNames		5592348	0					
ANR	5592380	Identifier	ii		5592348	1					
ANR	5592381	Identifier	type		5592348	1					
ANR	5592382	ReturnStatement	return aPerfTimerTypeNames [ ii ] . psz ;	778:3:25367:25401	5592348	1	True				
ANR	5592383	MemberAccess	aPerfTimerTypeNames [ ii ] . psz		5592348	0					
ANR	5592384	ArrayIndexing	aPerfTimerTypeNames [ ii ]		5592348	0					
ANR	5592385	Identifier	aPerfTimerTypeNames		5592348	0					
ANR	5592386	Identifier	ii		5592348	1					
ANR	5592387	Identifier	psz		5592348	1					
ANR	5592388	ReturnStatement	"return """" ;"	780:1:25407:25416	5592348	1	True				
ANR	5592389	PrimaryExpression	""""""		5592348	0					
ANR	5592390	ReturnType	static const char *		5592348	1					
ANR	5592391	Identifier	perf_timer_type_name		5592348	2					
ANR	5592392	ParameterList	DWORD type		5592348	3					
ANR	5592393	Parameter	DWORD type	773:41:25239:25248	5592348	0	True				
ANR	5592394	ParameterType	DWORD		5592348	0					
ANR	5592395	Identifier	type		5592348	1					
ANR	5592396	CFGEntryNode	ENTRY		5592348		True				
ANR	5592397	CFGExitNode	EXIT		5592348		True				
ANR	5592398	Symbol	ii		5592348						
ANR	5592399	Symbol	NUM_ELEMENTS		5592348						
ANR	5592400	Symbol	aPerfTimerTypeNames		5592348						
ANR	5592401	Symbol	aPerfTimerTypeNames [ ii ] . psz		5592348						
ANR	5592402	Symbol	* ii		5592348						
ANR	5592403	Symbol	aPerfTimerTypeNames [ ii ] . type		5592348						
ANR	5592404	Symbol	type		5592348						
ANR	5592405	Symbol	* aPerfTimerTypeNames		5592348						
ANR	5592406	ClassDef	<unnamed>	794:0:25736:26487							
ANR	5592407	DeclStmt									
ANR	5592408	Decl							int	int	WinPerf_CounterValueType
ANR	5592409	ClassDef	_WinPerf_CounterValue	813:8:26538:26811							
ANR	5592410	DeclStmt									
ANR	5592411	Decl							WinPerf_CounterValueType	WinPerf_CounterValueType	type
ANR	5592412	DeclStmt									
ANR	5592413	Decl							int	int	spare
ANR	5592414	ClassDef	<unnamed>	816:1:26635:26728							
ANR	5592415	DeclStmt									
ANR	5592416	Decl							int	int	i
ANR	5592417	DeclStmt									
ANR	5592418	Decl							UINT	UINT	u
ANR	5592419	DeclStmt									
ANR	5592420	Decl							LONGLONG	LONGLONG	ll
ANR	5592421	DeclStmt									
ANR	5592422	Decl							ULONGLONG	ULONGLONG	ul
ANR	5592423	DeclStmt									
ANR	5592424	Decl							double	double	d
ANR	5592425	DeclStmt									
ANR	5592426	Decl									value
ANR	5592427	DeclStmt									
ANR	5592428	Decl							_WinPerf_CounterValue	_WinPerf_CounterValue	WinPerf_CounterValue
ANR	5592429	ClassDef	_WinPerf_TimerDeltas	826:8:26822:27127							
ANR	5592430	DeclStmt									
ANR	5592431	Decl							LONGLONG	LONGLONG	obj
ANR	5592432	DeclStmt									
ANR	5592433	Decl							LONGLONG	LONGLONG	objabs
ANR	5592434	DeclStmt									
ANR	5592435	Decl							LONGLONG	LONGLONG	objfreq
ANR	5592436	DeclStmt									
ANR	5592437	Decl							LONGLONG	LONGLONG	head
ANR	5592438	DeclStmt									
ANR	5592439	Decl							LONGLONG	LONGLONG	headfreq
ANR	5592440	DeclStmt									
ANR	5592441	Decl							LONGLONG	LONGLONG	nanos
ANR	5592442	DeclStmt									
ANR	5592443	Decl							_WinPerf_TimerDeltas	_WinPerf_TimerDeltas	WinPerf_TimerDeltas
ANR	5592444	ClassDef	<unnamed>	838:7:27220:27680							
ANR	5592445	DeclStmt									
ANR	5592446	Decl							char	char *	pszzNames
ANR	5592447	DeclStmt									
ANR	5592448	Decl							"HashTable < YourString , const char * >"	"HashTable < YourString , const char * > *"	pPerfTable
ANR	5592449	DeclStmt									
ANR	5592450	Decl							"HashTable < DWORD , const char * >"	"HashTable < DWORD , const char * > *"	pNameTable
ANR	5592451	DeclStmt									
ANR	5592452	Decl							"HashTable < DWORD , WinPerf_QueryResult >"	"HashTable < DWORD , WinPerf_QueryResult > *"	pQueries
ANR	5592453	DeclStmt									
ANR	5592454	Decl									rl
ANR	5592455	Function	init_windows_performance_hashtable	851:0:27793:29318							
ANR	5592456	FunctionDef	init_windows_performance_hashtable ()		5592455	0					
ANR	5592457	CompoundStatement		852:0:27842:29318	5592455	0					
ANR	5592458	IfStatement	if ( rl . pPerfTable )		5592455	0					
ANR	5592459	Condition	rl . pPerfTable	853:5:27849:27861	5592455	0	True				
ANR	5592460	MemberAccess	rl . pPerfTable		5592455	0					
ANR	5592461	Identifier	rl		5592455	0					
ANR	5592462	Identifier	pPerfTable		5592455	1					
ANR	5592463	ReturnStatement	return true ;	854:2:27866:27877	5592455	1	True				
ANR	5592464	Identifier	true		5592455	0					
ANR	5592465	IdentifierDeclStatement	DWORD cbData = 0 ;	858:1:27920:27936	5592455	1	True				
ANR	5592466	IdentifierDecl	cbData = 0		5592455	0					
ANR	5592467	IdentifierDeclType	DWORD		5592455	0					
ANR	5592468	Identifier	cbData		5592455	1					
ANR	5592469	AssignmentExpression	cbData = 0		5592455	2		=			
ANR	5592470	Identifier	cbData		5592455	0					
ANR	5592471	PrimaryExpression	0		5592455	1					
ANR	5592472	IdentifierDeclStatement	DWORD vtype = REG_SZ ;	859:1:27939:27959	5592455	2	True				
ANR	5592473	IdentifierDecl	vtype = REG_SZ		5592455	0					
ANR	5592474	IdentifierDeclType	DWORD		5592455	0					
ANR	5592475	Identifier	vtype		5592455	1					
ANR	5592476	AssignmentExpression	vtype = REG_SZ		5592455	2		=			
ANR	5592477	Identifier	REG_SZ		5592455	0					
ANR	5592478	Identifier	REG_SZ		5592455	1					
ANR	5592479	IdentifierDeclStatement	"LONG lres = RegQueryValueEx ( HKEY_PERFORMANCE_TEXT , ""Counter"" , NULL , & vtype , NULL , & cbData ) ;"	860:1:27963:28053	5592455	3	True				
ANR	5592480	IdentifierDecl	"lres = RegQueryValueEx ( HKEY_PERFORMANCE_TEXT , ""Counter"" , NULL , & vtype , NULL , & cbData )"		5592455	0					
ANR	5592481	IdentifierDeclType	LONG		5592455	0					
ANR	5592482	Identifier	lres		5592455	1					
ANR	5592483	AssignmentExpression	"lres = RegQueryValueEx ( HKEY_PERFORMANCE_TEXT , ""Counter"" , NULL , & vtype , NULL , & cbData )"		5592455	2		=			
ANR	5592484	Identifier	lres		5592455	0					
ANR	5592485	CallExpression	"RegQueryValueEx ( HKEY_PERFORMANCE_TEXT , ""Counter"" , NULL , & vtype , NULL , & cbData )"		5592455	1					
ANR	5592486	Callee	RegQueryValueEx		5592455	0					
ANR	5592487	Identifier	RegQueryValueEx		5592455	0					
ANR	5592488	ArgumentList	HKEY_PERFORMANCE_TEXT		5592455	1					
ANR	5592489	Argument	HKEY_PERFORMANCE_TEXT		5592455	0					
ANR	5592490	Identifier	HKEY_PERFORMANCE_TEXT		5592455	0					
ANR	5592491	Argument	"""Counter"""		5592455	1					
ANR	5592492	PrimaryExpression	"""Counter"""		5592455	0					
ANR	5592493	Argument	NULL		5592455	2					
ANR	5592494	Identifier	NULL		5592455	0					
ANR	5592495	Argument	& vtype		5592455	3					
ANR	5592496	UnaryOperationExpression	& vtype		5592455	0					
ANR	5592497	UnaryOperator	&		5592455	0					
ANR	5592498	Identifier	vtype		5592455	1					
ANR	5592499	Argument	NULL		5592455	4					
ANR	5592500	Identifier	NULL		5592455	0					
ANR	5592501	Argument	& cbData		5592455	5					
ANR	5592502	UnaryOperationExpression	& cbData		5592455	0					
ANR	5592503	UnaryOperator	&		5592455	0					
ANR	5592504	Identifier	cbData		5592455	1					
ANR	5592505	IfStatement	if ( ERROR_SUCCESS == lres )		5592455	4					
ANR	5592506	Condition	ERROR_SUCCESS == lres	861:5:28060:28080	5592455	0	True				
ANR	5592507	EqualityExpression	ERROR_SUCCESS == lres		5592455	0		==			
ANR	5592508	Identifier	ERROR_SUCCESS		5592455	0					
ANR	5592509	Identifier	lres		5592455	1					
ANR	5592510	CompoundStatement		11:1:241:241	5592455	1					
ANR	5592511	ExpressionStatement	rl . pszzNames = ( char * ) malloc ( cbData )	863:2:28088:28124	5592455	0	True				
ANR	5592512	AssignmentExpression	rl . pszzNames = ( char * ) malloc ( cbData )		5592455	0		=			
ANR	5592513	MemberAccess	rl . pszzNames		5592455	0					
ANR	5592514	Identifier	rl		5592455	0					
ANR	5592515	Identifier	pszzNames		5592455	1					
ANR	5592516	CastExpression	( char * ) malloc ( cbData )		5592455	1					
ANR	5592517	CastTarget	char *		5592455	0					
ANR	5592518	CallExpression	malloc ( cbData )		5592455	1					
ANR	5592519	Callee	malloc		5592455	0					
ANR	5592520	Identifier	malloc		5592455	0					
ANR	5592521	ArgumentList	cbData		5592455	1					
ANR	5592522	Argument	cbData		5592455	0					
ANR	5592523	Identifier	cbData		5592455	0					
ANR	5592524	ExpressionStatement	"lres = RegQueryValueEx ( HKEY_PERFORMANCE_TEXT , ""Counter"" , NULL , & vtype , ( byte * ) rl . pszzNames , & cbData )"	864:2:28128:28228	5592455	1	True				
ANR	5592525	AssignmentExpression	"lres = RegQueryValueEx ( HKEY_PERFORMANCE_TEXT , ""Counter"" , NULL , & vtype , ( byte * ) rl . pszzNames , & cbData )"		5592455	0		=			
ANR	5592526	Identifier	lres		5592455	0					
ANR	5592527	CallExpression	"RegQueryValueEx ( HKEY_PERFORMANCE_TEXT , ""Counter"" , NULL , & vtype , ( byte * ) rl . pszzNames , & cbData )"		5592455	1					
ANR	5592528	Callee	RegQueryValueEx		5592455	0					
ANR	5592529	Identifier	RegQueryValueEx		5592455	0					
ANR	5592530	ArgumentList	HKEY_PERFORMANCE_TEXT		5592455	1					
ANR	5592531	Argument	HKEY_PERFORMANCE_TEXT		5592455	0					
ANR	5592532	Identifier	HKEY_PERFORMANCE_TEXT		5592455	0					
ANR	5592533	Argument	"""Counter"""		5592455	1					
ANR	5592534	PrimaryExpression	"""Counter"""		5592455	0					
ANR	5592535	Argument	NULL		5592455	2					
ANR	5592536	Identifier	NULL		5592455	0					
ANR	5592537	Argument	& vtype		5592455	3					
ANR	5592538	UnaryOperationExpression	& vtype		5592455	0					
ANR	5592539	UnaryOperator	&		5592455	0					
ANR	5592540	Identifier	vtype		5592455	1					
ANR	5592541	Argument	( byte * ) rl . pszzNames		5592455	4					
ANR	5592542	CastExpression	( byte * ) rl . pszzNames		5592455	0					
ANR	5592543	CastTarget	byte *		5592455	0					
ANR	5592544	MemberAccess	rl . pszzNames		5592455	1					
ANR	5592545	Identifier	rl		5592455	0					
ANR	5592546	Identifier	pszzNames		5592455	1					
ANR	5592547	Argument	& cbData		5592455	5					
ANR	5592548	UnaryOperationExpression	& cbData		5592455	0					
ANR	5592549	UnaryOperator	&		5592455	0					
ANR	5592550	Identifier	cbData		5592455	1					
ANR	5592551	IfStatement	if ( ERROR_SUCCESS != lres )		5592455	2					
ANR	5592552	Condition	ERROR_SUCCESS != lres	865:6:28236:28256	5592455	0	True				
ANR	5592553	EqualityExpression	ERROR_SUCCESS != lres		5592455	0		!=			
ANR	5592554	Identifier	ERROR_SUCCESS		5592455	0					
ANR	5592555	Identifier	lres		5592455	1					
ANR	5592556	CompoundStatement		15:2:418:418	5592455	1					
ANR	5592557	IfStatement	if ( rl . pszzNames )		5592455	0					
ANR	5592558	Condition	rl . pszzNames	867:7:28270:28281	5592455	0	True				
ANR	5592559	MemberAccess	rl . pszzNames		5592455	0					
ANR	5592560	Identifier	rl		5592455	0					
ANR	5592561	Identifier	pszzNames		5592455	1					
ANR	5592562	ExpressionStatement	free ( rl . pszzNames )	867:21:28284:28303	5592455	1	True				
ANR	5592563	CallExpression	free ( rl . pszzNames )		5592455	0					
ANR	5592564	Callee	free		5592455	0					
ANR	5592565	Identifier	free		5592455	0					
ANR	5592566	ArgumentList	rl . pszzNames		5592455	1					
ANR	5592567	Argument	rl . pszzNames		5592455	0					
ANR	5592568	MemberAccess	rl . pszzNames		5592455	0					
ANR	5592569	Identifier	rl		5592455	0					
ANR	5592570	Identifier	pszzNames		5592455	1					
ANR	5592571	ExpressionStatement	rl . pszzNames = NULL	868:3:28308:28327	5592455	1	True				
ANR	5592572	AssignmentExpression	rl . pszzNames = NULL		5592455	0		=			
ANR	5592573	MemberAccess	rl . pszzNames		5592455	0					
ANR	5592574	Identifier	rl		5592455	0					
ANR	5592575	Identifier	pszzNames		5592455	1					
ANR	5592576	Identifier	NULL		5592455	1					
ANR	5592577	IfStatement	if ( ERROR_SUCCESS != lres )		5592455	5					
ANR	5592578	Condition	ERROR_SUCCESS != lres	871:5:28341:28361	5592455	0	True				
ANR	5592579	EqualityExpression	ERROR_SUCCESS != lres		5592455	0		!=			
ANR	5592580	Identifier	ERROR_SUCCESS		5592455	0					
ANR	5592581	Identifier	lres		5592455	1					
ANR	5592582	CompoundStatement		23:2:589:609	5592455	1					
ANR	5592583	IdentifierDeclStatement	char szMsg [ MAX_PATH ] ;	874:2:28432:28452	5592455	0	True				
ANR	5592584	IdentifierDecl	szMsg [ MAX_PATH ]		5592455	0					
ANR	5592585	IdentifierDeclType	char [ MAX_PATH ]		5592455	0					
ANR	5592586	Identifier	szMsg		5592455	1					
ANR	5592587	Identifier	MAX_PATH		5592455	2					
ANR	5592588	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to read Performance Text! Reason: %s\\n"" , GetLastErrMessage ( GetLastError ( ) , szMsg , NUM_ELEMENTS ( szMsg ) ) )"	875:2:28456:28594	5592455	1	True				
ANR	5592589	CallExpression	"dprintf ( D_ALWAYS , ""Failed to read Performance Text! Reason: %s\\n"" , GetLastErrMessage ( GetLastError ( ) , szMsg , NUM_ELEMENTS ( szMsg ) ) )"		5592455	0					
ANR	5592590	Callee	dprintf		5592455	0					
ANR	5592591	Identifier	dprintf		5592455	0					
ANR	5592592	ArgumentList	D_ALWAYS		5592455	1					
ANR	5592593	Argument	D_ALWAYS		5592455	0					
ANR	5592594	Identifier	D_ALWAYS		5592455	0					
ANR	5592595	Argument	"""Failed to read Performance Text! Reason: %s\\n"""		5592455	1					
ANR	5592596	PrimaryExpression	"""Failed to read Performance Text! Reason: %s\\n"""		5592455	0					
ANR	5592597	Argument	"GetLastErrMessage ( GetLastError ( ) , szMsg , NUM_ELEMENTS ( szMsg ) )"		5592455	2					
ANR	5592598	CallExpression	"GetLastErrMessage ( GetLastError ( ) , szMsg , NUM_ELEMENTS ( szMsg ) )"		5592455	0					
ANR	5592599	Callee	GetLastErrMessage		5592455	0					
ANR	5592600	Identifier	GetLastErrMessage		5592455	0					
ANR	5592601	ArgumentList	GetLastError ( )		5592455	1					
ANR	5592602	Argument	GetLastError ( )		5592455	0					
ANR	5592603	CallExpression	GetLastError ( )		5592455	0					
ANR	5592604	Callee	GetLastError		5592455	0					
ANR	5592605	Identifier	GetLastError		5592455	0					
ANR	5592606	ArgumentList			5592455	1					
ANR	5592607	Argument	szMsg		5592455	1					
ANR	5592608	Identifier	szMsg		5592455	0					
ANR	5592609	Argument	NUM_ELEMENTS ( szMsg )		5592455	2					
ANR	5592610	CallExpression	NUM_ELEMENTS ( szMsg )		5592455	0					
ANR	5592611	Callee	NUM_ELEMENTS		5592455	0					
ANR	5592612	Identifier	NUM_ELEMENTS		5592455	0					
ANR	5592613	ArgumentList	szMsg		5592455	1					
ANR	5592614	Argument	szMsg		5592455	0					
ANR	5592615	Identifier	szMsg		5592455	0					
ANR	5592616	ElseStatement	else		5592455	0					
ANR	5592617	IfStatement	if ( REG_MULTI_SZ == vtype )		5592455	0					
ANR	5592618	Condition	REG_MULTI_SZ == vtype	879:10:28609:28629	5592455	0	True				
ANR	5592619	EqualityExpression	REG_MULTI_SZ == vtype		5592455	0		==			
ANR	5592620	Identifier	REG_MULTI_SZ		5592455	0					
ANR	5592621	Identifier	vtype		5592455	1					
ANR	5592622	CompoundStatement		29:1:790:790	5592455	1					
ANR	5592623	ExpressionStatement	"rl . pQueries = new HashTable < DWORD , WinPerf_QueryResult > ( 2 , DWORDHash , updateDuplicateKeys )"	881:2:28637:28729	5592455	0	True				
ANR	5592624	AssignmentExpression	"rl . pQueries = new HashTable < DWORD , WinPerf_QueryResult > ( 2 , DWORDHash , updateDuplicateKeys )"		5592455	0		=			
ANR	5592625	MemberAccess	rl . pQueries		5592455	0					
ANR	5592626	Identifier	rl		5592455	0					
ANR	5592627	Identifier	pQueries		5592455	1					
ANR	5592628	Expression	"2 , DWORDHash , updateDuplicateKeys"		5592455	1					
ANR	5592629	PrimaryExpression	2		5592455	0					
ANR	5592630	Expression	"DWORDHash , updateDuplicateKeys"		5592455	1					
ANR	5592631	Identifier	DWORDHash		5592455	0					
ANR	5592632	Identifier	updateDuplicateKeys		5592455	1					
ANR	5592633	ExpressionStatement	"rl . pPerfTable = new HashTable < YourString , const char * > ( 4000 , torekHash , allowDuplicateKeys )"	882:2:28733:28825	5592455	1	True				
ANR	5592634	AssignmentExpression	"rl . pPerfTable = new HashTable < YourString , const char * > ( 4000 , torekHash , allowDuplicateKeys )"		5592455	0		=			
ANR	5592635	MemberAccess	rl . pPerfTable		5592455	0					
ANR	5592636	Identifier	rl		5592455	0					
ANR	5592637	Identifier	pPerfTable		5592455	1					
ANR	5592638	Expression	"4000 , torekHash , allowDuplicateKeys"		5592455	1					
ANR	5592639	PrimaryExpression	4000		5592455	0					
ANR	5592640	Expression	"torekHash , allowDuplicateKeys"		5592455	1					
ANR	5592641	Identifier	torekHash		5592455	0					
ANR	5592642	Identifier	allowDuplicateKeys		5592455	1					
ANR	5592643	ExpressionStatement	"rl . pNameTable = new HashTable < DWORD , const char * > ( 4000 , DWORDHash , rejectDuplicateKeys )"	883:2:28829:28917	5592455	2	True				
ANR	5592644	AssignmentExpression	"rl . pNameTable = new HashTable < DWORD , const char * > ( 4000 , DWORDHash , rejectDuplicateKeys )"		5592455	0		=			
ANR	5592645	MemberAccess	rl . pNameTable		5592455	0					
ANR	5592646	Identifier	rl		5592455	0					
ANR	5592647	Identifier	pNameTable		5592455	1					
ANR	5592648	Expression	"4000 , DWORDHash , rejectDuplicateKeys"		5592455	1					
ANR	5592649	PrimaryExpression	4000		5592455	0					
ANR	5592650	Expression	"DWORDHash , rejectDuplicateKeys"		5592455	1					
ANR	5592651	Identifier	DWORDHash		5592455	0					
ANR	5592652	Identifier	rejectDuplicateKeys		5592455	1					
ANR	5592653	IfStatement	if ( rl . pPerfTable )		5592455	3					
ANR	5592654	Condition	rl . pPerfTable	884:6:28925:28937	5592455	0	True				
ANR	5592655	MemberAccess	rl . pPerfTable		5592455	0					
ANR	5592656	Identifier	rl		5592455	0					
ANR	5592657	Identifier	pPerfTable		5592455	1					
ANR	5592658	CompoundStatement		35:3:1104:1129	5592455	1					
ANR	5592659	IdentifierDeclStatement	char * psz = rl . pszzNames ;	886:3:28947:28972	5592455	0	True				
ANR	5592660	IdentifierDecl	* psz = rl . pszzNames		5592455	0					
ANR	5592661	IdentifierDeclType	char *		5592455	0					
ANR	5592662	Identifier	psz		5592455	1					
ANR	5592663	AssignmentExpression	* psz = rl . pszzNames		5592455	2		=			
ANR	5592664	Identifier	psz		5592455	0					
ANR	5592665	MemberAccess	rl . pszzNames		5592455	1					
ANR	5592666	Identifier	rl		5592455	0					
ANR	5592667	Identifier	pszzNames		5592455	1					
ANR	5592668	WhileStatement	while ( * psz )		5592455	1					
ANR	5592669	Condition	* psz	887:10:28984:28987	5592455	0	True				
ANR	5592670	UnaryOperationExpression	* psz		5592455	0					
ANR	5592671	UnaryOperator	*		5592455	0					
ANR	5592672	Identifier	psz		5592455	1					
ANR	5592673	CompoundStatement		39:4:1183:1220	5592455	1					
ANR	5592674	IdentifierDeclStatement	char * pszIndex = psz ;	889:4:28999:29020	5592455	0	True				
ANR	5592675	IdentifierDecl	* pszIndex = psz		5592455	0					
ANR	5592676	IdentifierDeclType	char *		5592455	0					
ANR	5592677	Identifier	pszIndex		5592455	1					
ANR	5592678	AssignmentExpression	* pszIndex = psz		5592455	2		=			
ANR	5592679	Identifier	psz		5592455	0					
ANR	5592680	Identifier	psz		5592455	1					
ANR	5592681	IdentifierDeclStatement	char * pszName = psz + lstrlen ( psz ) + 1 ;	890:4:29026:29063	5592455	1	True				
ANR	5592682	IdentifierDecl	* pszName = psz + lstrlen ( psz ) + 1		5592455	0					
ANR	5592683	IdentifierDeclType	char *		5592455	0					
ANR	5592684	Identifier	pszName		5592455	1					
ANR	5592685	AssignmentExpression	* pszName = psz + lstrlen ( psz ) + 1		5592455	2		=			
ANR	5592686	Identifier	pszName		5592455	0					
ANR	5592687	AdditiveExpression	psz + lstrlen ( psz ) + 1		5592455	1		+			
ANR	5592688	Identifier	psz		5592455	0					
ANR	5592689	AdditiveExpression	lstrlen ( psz ) + 1		5592455	1		+			
ANR	5592690	CallExpression	lstrlen ( psz )		5592455	0					
ANR	5592691	Callee	lstrlen		5592455	0					
ANR	5592692	Identifier	lstrlen		5592455	0					
ANR	5592693	ArgumentList	psz		5592455	1					
ANR	5592694	Argument	psz		5592455	0					
ANR	5592695	Identifier	psz		5592455	0					
ANR	5592696	PrimaryExpression	1		5592455	1					
ANR	5592697	IfStatement	if ( * pszName )		5592455	2					
ANR	5592698	Condition	* pszName	891:8:29073:29080	5592455	0	True				
ANR	5592699	UnaryOperationExpression	* pszName		5592455	0					
ANR	5592700	UnaryOperator	*		5592455	0					
ANR	5592701	Identifier	pszName		5592455	1					
ANR	5592702	ExpressionStatement	psz = pszName + lstrlen ( pszName ) + 1	891:18:29083:29117	5592455	1	True				
ANR	5592703	AssignmentExpression	psz = pszName + lstrlen ( pszName ) + 1		5592455	0		=			
ANR	5592704	Identifier	psz		5592455	0					
ANR	5592705	AdditiveExpression	pszName + lstrlen ( pszName ) + 1		5592455	1		+			
ANR	5592706	Identifier	pszName		5592455	0					
ANR	5592707	AdditiveExpression	lstrlen ( pszName ) + 1		5592455	1		+			
ANR	5592708	CallExpression	lstrlen ( pszName )		5592455	0					
ANR	5592709	Callee	lstrlen		5592455	0					
ANR	5592710	Identifier	lstrlen		5592455	0					
ANR	5592711	ArgumentList	pszName		5592455	1					
ANR	5592712	Argument	pszName		5592455	0					
ANR	5592713	Identifier	pszName		5592455	0					
ANR	5592714	PrimaryExpression	1		5592455	1					
ANR	5592715	ExpressionStatement	"rl . pPerfTable -> insert ( pszName , pszIndex )"	892:4:29123:29163	5592455	3	True				
ANR	5592716	CallExpression	"rl . pPerfTable -> insert ( pszName , pszIndex )"		5592455	0					
ANR	5592717	Callee	rl . pPerfTable -> insert		5592455	0					
ANR	5592718	PtrMemberAccess	rl . pPerfTable -> insert		5592455	0					
ANR	5592719	MemberAccess	rl . pPerfTable		5592455	0					
ANR	5592720	Identifier	rl		5592455	0					
ANR	5592721	Identifier	pPerfTable		5592455	1					
ANR	5592722	Identifier	insert		5592455	1					
ANR	5592723	ArgumentList	pszName		5592455	1					
ANR	5592724	Argument	pszName		5592455	0					
ANR	5592725	Identifier	pszName		5592455	0					
ANR	5592726	Argument	pszIndex		5592455	1					
ANR	5592727	Identifier	pszIndex		5592455	0					
ANR	5592728	IfStatement	if ( rl . pNameTable )		5592455	4					
ANR	5592729	Condition	rl . pNameTable	893:8:29173:29185	5592455	0	True				
ANR	5592730	MemberAccess	rl . pNameTable		5592455	0					
ANR	5592731	Identifier	rl		5592455	0					
ANR	5592732	Identifier	pNameTable		5592455	1					
ANR	5592733	CompoundStatement		44:5:1356:1381	5592455	1					
ANR	5592734	IdentifierDeclStatement	DWORD ix = atoi ( pszIndex ) ;	895:5:29199:29224	5592455	0	True				
ANR	5592735	IdentifierDecl	ix = atoi ( pszIndex )		5592455	0					
ANR	5592736	IdentifierDeclType	DWORD		5592455	0					
ANR	5592737	Identifier	ix		5592455	1					
ANR	5592738	AssignmentExpression	ix = atoi ( pszIndex )		5592455	2		=			
ANR	5592739	Identifier	ix		5592455	0					
ANR	5592740	CallExpression	atoi ( pszIndex )		5592455	1					
ANR	5592741	Callee	atoi		5592455	0					
ANR	5592742	Identifier	atoi		5592455	0					
ANR	5592743	ArgumentList	pszIndex		5592455	1					
ANR	5592744	Argument	pszIndex		5592455	0					
ANR	5592745	Identifier	pszIndex		5592455	0					
ANR	5592746	ExpressionStatement	"rl . pNameTable -> insert ( ix , pszName )"	896:5:29231:29265	5592455	1	True				
ANR	5592747	CallExpression	"rl . pNameTable -> insert ( ix , pszName )"		5592455	0					
ANR	5592748	Callee	rl . pNameTable -> insert		5592455	0					
ANR	5592749	PtrMemberAccess	rl . pNameTable -> insert		5592455	0					
ANR	5592750	MemberAccess	rl . pNameTable		5592455	0					
ANR	5592751	Identifier	rl		5592455	0					
ANR	5592752	Identifier	pNameTable		5592455	1					
ANR	5592753	Identifier	insert		5592455	1					
ANR	5592754	ArgumentList	ix		5592455	1					
ANR	5592755	Argument	ix		5592455	0					
ANR	5592756	Identifier	ix		5592455	0					
ANR	5592757	Argument	pszName		5592455	1					
ANR	5592758	Identifier	pszName		5592455	0					
ANR	5592759	ReturnStatement	return ( rl . pPerfTable != NULL ) ;	901:1:29286:29316	5592455	6	True				
ANR	5592760	EqualityExpression	rl . pPerfTable != NULL		5592455	0		!=			
ANR	5592761	MemberAccess	rl . pPerfTable		5592455	0					
ANR	5592762	Identifier	rl		5592455	0					
ANR	5592763	Identifier	pPerfTable		5592455	1					
ANR	5592764	Identifier	NULL		5592455	1					
ANR	5592765	ReturnType	static bool		5592455	1					
ANR	5592766	Identifier	init_windows_performance_hashtable		5592455	2					
ANR	5592767	ParameterList			5592455	3					
ANR	5592768	CFGEntryNode	ENTRY		5592455		True				
ANR	5592769	CFGExitNode	EXIT		5592455		True				
ANR	5592770	Symbol	GetLastErrMessage		5592455						
ANR	5592771	Symbol	* psz		5592455						
ANR	5592772	Symbol	NUM_ELEMENTS		5592455						
ANR	5592773	Symbol	vtype		5592455						
ANR	5592774	Symbol	lres		5592455						
ANR	5592775	Symbol	lstrlen		5592455						
ANR	5592776	Symbol	rl . pQueries		5592455						
ANR	5592777	Symbol	REG_SZ		5592455						
ANR	5592778	Symbol	& cbData		5592455						
ANR	5592779	Symbol	rl . pPerfTable		5592455						
ANR	5592780	Symbol	& vtype		5592455						
ANR	5592781	Symbol	rl . pszzNames		5592455						
ANR	5592782	Symbol	pszName		5592455						
ANR	5592783	Symbol	ERROR_SUCCESS		5592455						
ANR	5592784	Symbol	RegQueryValueEx		5592455						
ANR	5592785	Symbol	allowDuplicateKeys		5592455						
ANR	5592786	Symbol	REG_MULTI_SZ		5592455						
ANR	5592787	Symbol	psz		5592455						
ANR	5592788	Symbol	szMsg		5592455						
ANR	5592789	Symbol	updateDuplicateKeys		5592455						
ANR	5592790	Symbol	cbData		5592455						
ANR	5592791	Symbol	atoi		5592455						
ANR	5592792	Symbol	malloc		5592455						
ANR	5592793	Symbol	torekHash		5592455						
ANR	5592794	Symbol	NULL		5592455						
ANR	5592795	Symbol	D_ALWAYS		5592455						
ANR	5592796	Symbol	pszIndex		5592455						
ANR	5592797	Symbol	rl . pNameTable		5592455						
ANR	5592798	Symbol	ix		5592455						
ANR	5592799	Symbol	DWORDHash		5592455						
ANR	5592800	Symbol	GetLastError		5592455						
ANR	5592801	Symbol	true		5592455						
ANR	5592802	Symbol	rejectDuplicateKeys		5592455						
ANR	5592803	Symbol	rl		5592455						
ANR	5592804	Symbol	HKEY_PERFORMANCE_TEXT		5592455						
ANR	5592805	Symbol	* pszName		5592455						
ANR	5592806	ClassDef	WinPerf_CounterDef	915:0:30015:30152							
ANR	5592807	Function	NameIndex	918:1:30084:30150							
ANR	5592808	FunctionDef	NameIndex ()		5592807	0					
ANR	5592809	CompoundStatement		918:25:30108:30150	5592807	0					
ANR	5592810	ReturnStatement	return this -> CounterNameTitleIndex ;	919:2:30112:30146	5592807	0	True				
ANR	5592811	PtrMemberAccess	this -> CounterNameTitleIndex		5592807	0					
ANR	5592812	Identifier	this		5592807	0					
ANR	5592813	Identifier	CounterNameTitleIndex		5592807	1					
ANR	5592814	ReturnType	DWORD		5592807	1					
ANR	5592815	Identifier	NameIndex		5592807	2					
ANR	5592816	ParameterList			5592807	3					
ANR	5592817	CFGEntryNode	ENTRY		5592807		True				
ANR	5592818	CFGExitNode	EXIT		5592807		True				
ANR	5592819	Symbol	* this		5592807						
ANR	5592820	Symbol	this -> CounterNameTitleIndex		5592807						
ANR	5592821	Symbol	this		5592807						
ANR	5592822	ClassDef	WinPerf_ObjInst	923:0:30156:31664							
ANR	5592823	Function	Next	926:1:30223:30348							
ANR	5592824	FunctionDef	Next ()		5592823	0					
ANR	5592825	CompoundStatement		926:38:30260:30348	5592823	0					
ANR	5592826	ReturnStatement	return ( const WinPerf_ObjInst * ) ( ( BYTE * ) this + this -> ByteLength + CounterBytes ( ) ) ;	927:2:30265:30345	5592823	0	True				
ANR	5592827	CastExpression	( const WinPerf_ObjInst * ) ( ( BYTE * ) this + this -> ByteLength + CounterBytes ( ) )		5592823	0					
ANR	5592828	CastTarget	const WinPerf_ObjInst *		5592823	0					
ANR	5592829	AdditiveExpression	( BYTE * ) this + this -> ByteLength + CounterBytes ( )		5592823	1		+			
ANR	5592830	CastExpression	( BYTE * ) this		5592823	0					
ANR	5592831	CastTarget	BYTE *		5592823	0					
ANR	5592832	Identifier	this		5592823	1					
ANR	5592833	AdditiveExpression	this -> ByteLength + CounterBytes ( )		5592823	1		+			
ANR	5592834	PtrMemberAccess	this -> ByteLength		5592823	0					
ANR	5592835	Identifier	this		5592823	0					
ANR	5592836	Identifier	ByteLength		5592823	1					
ANR	5592837	CallExpression	CounterBytes ( )		5592823	1					
ANR	5592838	Callee	CounterBytes		5592823	0					
ANR	5592839	Identifier	CounterBytes		5592823	0					
ANR	5592840	ArgumentList			5592823	1					
ANR	5592841	ReturnType	const WinPerf_ObjInst *		5592823	1					
ANR	5592842	Identifier	Next		5592823	2					
ANR	5592843	ParameterList			5592823	3					
ANR	5592844	CFGEntryNode	ENTRY		5592823		True				
ANR	5592845	CFGExitNode	EXIT		5592823		True				
ANR	5592846	Symbol	* this		5592823						
ANR	5592847	Symbol	this		5592823						
ANR	5592848	Symbol	this -> ByteLength		5592823						
ANR	5592849	Symbol	CounterBytes		5592823						
ANR	5592850	Function	Name	929:1:30351:30496							
ANR	5592851	FunctionDef	Name ()		5592850	1					
ANR	5592852	CompoundStatement		929:38:30388:30496	5592850	0					
ANR	5592853	IfStatement	if ( this -> NameLength <= 0 )		5592850	0					
ANR	5592854	Condition	this -> NameLength <= 0	930:6:30397:30417	5592850	0	True				
ANR	5592855	RelationalExpression	this -> NameLength <= 0		5592850	0		<=			
ANR	5592856	PtrMemberAccess	this -> NameLength		5592850	0					
ANR	5592857	Identifier	this		5592850	0					
ANR	5592858	Identifier	NameLength		5592850	1					
ANR	5592859	PrimaryExpression	0		5592850	1					
ANR	5592860	ReturnStatement	return NULL ;	931:3:30423:30434	5592850	1	True				
ANR	5592861	Identifier	NULL		5592850	0					
ANR	5592862	ReturnStatement	return ( const WCHAR * ) ( ( BYTE * ) this + this -> NameOffset ) ;	932:2:30438:30492	5592850	1	True				
ANR	5592863	CastExpression	( const WCHAR * ) ( ( BYTE * ) this + this -> NameOffset )		5592850	0					
ANR	5592864	CastTarget	const WCHAR *		5592850	0					
ANR	5592865	AdditiveExpression	( BYTE * ) this + this -> NameOffset		5592850	1		+			
ANR	5592866	CastExpression	( BYTE * ) this		5592850	0					
ANR	5592867	CastTarget	BYTE *		5592850	0					
ANR	5592868	Identifier	this		5592850	1					
ANR	5592869	PtrMemberAccess	this -> NameOffset		5592850	1					
ANR	5592870	Identifier	this		5592850	0					
ANR	5592871	Identifier	NameOffset		5592850	1					
ANR	5592872	ReturnType	const WCHAR *		5592850	1					
ANR	5592873	Identifier	Name		5592850	2					
ANR	5592874	ParameterList			5592850	3					
ANR	5592875	CFGEntryNode	ENTRY		5592850		True				
ANR	5592876	CFGExitNode	EXIT		5592850		True				
ANR	5592877	Symbol	* this		5592850						
ANR	5592878	Symbol	NULL		5592850						
ANR	5592879	Symbol	this -> NameOffset		5592850						
ANR	5592880	Symbol	this -> NameLength		5592850						
ANR	5592881	Symbol	this		5592850						
ANR	5592882	Function	Matches	940:1:30812:31308							
ANR	5592883	FunctionDef	Matches (const char * psz)		5592882	2					
ANR	5592884	CompoundStatement		940:38:30849:31308	5592882	0					
ANR	5592885	IfStatement	if ( psz && * psz == '*' )		5592882	0					
ANR	5592886	Condition	psz && * psz == '*'	941:6:30857:30874	5592882	0	True				
ANR	5592887	AndExpression	psz && * psz == '*'		5592882	0		&&			
ANR	5592888	Identifier	psz		5592882	0					
ANR	5592889	EqualityExpression	* psz == '*'		5592882	1		==			
ANR	5592890	UnaryOperationExpression	* psz		5592882	0					
ANR	5592891	UnaryOperator	*		5592882	0					
ANR	5592892	Identifier	psz		5592882	1					
ANR	5592893	PrimaryExpression	'*'		5592882	1					
ANR	5592894	ReturnStatement	return true ;	942:3:30880:30891	5592882	1	True				
ANR	5592895	Identifier	true		5592882	0					
ANR	5592896	IfStatement	if ( this -> NameLength <= 0 || ! psz )		5592882	1					
ANR	5592897	Condition	this -> NameLength <= 0 || ! psz	943:6:30899:30928	5592882	0	True				
ANR	5592898	OrExpression	this -> NameLength <= 0 || ! psz		5592882	0		||			
ANR	5592899	RelationalExpression	this -> NameLength <= 0		5592882	0		<=			
ANR	5592900	PtrMemberAccess	this -> NameLength		5592882	0					
ANR	5592901	Identifier	this		5592882	0					
ANR	5592902	Identifier	NameLength		5592882	1					
ANR	5592903	PrimaryExpression	0		5592882	1					
ANR	5592904	UnaryOperationExpression	! psz		5592882	1					
ANR	5592905	UnaryOperator	!		5592882	0					
ANR	5592906	Identifier	psz		5592882	1					
ANR	5592907	ReturnStatement	return false ;	944:3:30934:30946	5592882	1	True				
ANR	5592908	Identifier	false		5592882	0					
ANR	5592909	IfStatement	if ( * psz == '(' )		5592882	2					
ANR	5592910	Condition	* psz == '('	945:6:30954:30964	5592882	0	True				
ANR	5592911	EqualityExpression	* psz == '('		5592882	0		==			
ANR	5592912	UnaryOperationExpression	* psz		5592882	0					
ANR	5592913	UnaryOperator	*		5592882	0					
ANR	5592914	Identifier	psz		5592882	1					
ANR	5592915	PrimaryExpression	'('		5592882	1					
ANR	5592916	ExpressionStatement	++ psz	946:3:30970:30975	5592882	1	True				
ANR	5592917	UnaryExpression	++ psz		5592882	0					
ANR	5592918	IncDec	++		5592882	0					
ANR	5592919	Identifier	psz		5592882	1					
ANR	5592920	IdentifierDeclStatement	const WCHAR * pwsz = ( const WCHAR * ) ( ( BYTE * ) this + this -> NameOffset ) ;	947:2:30979:31047	5592882	3	True				
ANR	5592921	IdentifierDecl	* pwsz = ( const WCHAR * ) ( ( BYTE * ) this + this -> NameOffset )		5592882	0					
ANR	5592922	IdentifierDeclType	const WCHAR *		5592882	0					
ANR	5592923	Identifier	pwsz		5592882	1					
ANR	5592924	AssignmentExpression	* pwsz = ( const WCHAR * ) ( ( BYTE * ) this + this -> NameOffset )		5592882	2		=			
ANR	5592925	Identifier	pwsz		5592882	0					
ANR	5592926	CastExpression	( const WCHAR * ) ( ( BYTE * ) this + this -> NameOffset )		5592882	1					
ANR	5592927	CastTarget	const WCHAR *		5592882	0					
ANR	5592928	AdditiveExpression	( BYTE * ) this + this -> NameOffset		5592882	1		+			
ANR	5592929	CastExpression	( BYTE * ) this		5592882	0					
ANR	5592930	CastTarget	BYTE *		5592882	0					
ANR	5592931	Identifier	this		5592882	1					
ANR	5592932	PtrMemberAccess	this -> NameOffset		5592882	1					
ANR	5592933	Identifier	this		5592882	0					
ANR	5592934	Identifier	NameOffset		5592882	1					
ANR	5592935	IfStatement	if ( ! * pwsz )		5592882	4					
ANR	5592936	Condition	! * pwsz	948:7:31057:31063	5592882	0	True				
ANR	5592937	UnaryOperationExpression	! * pwsz		5592882	0					
ANR	5592938	UnaryOperator	!		5592882	0					
ANR	5592939	UnaryOperationExpression	* pwsz		5592882	1					
ANR	5592940	UnaryOperator	*		5592882	0					
ANR	5592941	Identifier	pwsz		5592882	1					
ANR	5592942	ReturnStatement	return false ;	949:3:31069:31081	5592882	1	True				
ANR	5592943	Identifier	false		5592882	0					
ANR	5592944	WhileStatement	while ( * pwsz )		5592882	5					
ANR	5592945	Condition	* pwsz	950:9:31092:31096	5592882	0	True				
ANR	5592946	UnaryOperationExpression	* pwsz		5592882	0					
ANR	5592947	UnaryOperator	*		5592882	0					
ANR	5592948	Identifier	pwsz		5592882	1					
ANR	5592949	CompoundStatement		11:16:249:249	5592882	1					
ANR	5592950	IfStatement	if ( ! * psz || * psz == ')' )		5592882	0					
ANR	5592951	Condition	! * psz || * psz == ')'	951:8:31109:31129	5592882	0	True				
ANR	5592952	OrExpression	! * psz || * psz == ')'		5592882	0		||			
ANR	5592953	UnaryOperationExpression	! * psz		5592882	0					
ANR	5592954	UnaryOperator	!		5592882	0					
ANR	5592955	UnaryOperationExpression	* psz		5592882	1					
ANR	5592956	UnaryOperator	*		5592882	0					
ANR	5592957	Identifier	psz		5592882	1					
ANR	5592958	EqualityExpression	* psz == ')'		5592882	1		==			
ANR	5592959	UnaryOperationExpression	* psz		5592882	0					
ANR	5592960	UnaryOperator	*		5592882	0					
ANR	5592961	Identifier	psz		5592882	1					
ANR	5592962	PrimaryExpression	')'		5592882	1					
ANR	5592963	ReturnStatement	return false ;	952:4:31136:31148	5592882	1	True				
ANR	5592964	Identifier	false		5592882	0					
ANR	5592965	IfStatement	if ( tolower ( * psz ) != tolower ( * pwsz ) )		5592882	1					
ANR	5592966	Condition	tolower ( * psz ) != tolower ( * pwsz )	953:7:31157:31187	5592882	0	True				
ANR	5592967	EqualityExpression	tolower ( * psz ) != tolower ( * pwsz )		5592882	0		!=			
ANR	5592968	CallExpression	tolower ( * psz )		5592882	0					
ANR	5592969	Callee	tolower		5592882	0					
ANR	5592970	Identifier	tolower		5592882	0					
ANR	5592971	ArgumentList	* psz		5592882	1					
ANR	5592972	Argument	* psz		5592882	0					
ANR	5592973	UnaryOperationExpression	* psz		5592882	0					
ANR	5592974	UnaryOperator	*		5592882	0					
ANR	5592975	Identifier	psz		5592882	1					
ANR	5592976	CallExpression	tolower ( * pwsz )		5592882	1					
ANR	5592977	Callee	tolower		5592882	0					
ANR	5592978	Identifier	tolower		5592882	0					
ANR	5592979	ArgumentList	* pwsz		5592882	1					
ANR	5592980	Argument	* pwsz		5592882	0					
ANR	5592981	UnaryOperationExpression	* pwsz		5592882	0					
ANR	5592982	UnaryOperator	*		5592882	0					
ANR	5592983	Identifier	pwsz		5592882	1					
ANR	5592984	ReturnStatement	return false ;	954:4:31194:31206	5592882	1	True				
ANR	5592985	Identifier	false		5592882	0					
ANR	5592986	ExpressionStatement	++ psz	955:3:31211:31216	5592882	2	True				
ANR	5592987	UnaryExpression	++ psz		5592882	0					
ANR	5592988	IncDec	++		5592882	0					
ANR	5592989	Identifier	psz		5592882	1					
ANR	5592990	ExpressionStatement	++ pwsz	956:3:31221:31227	5592882	3	True				
ANR	5592991	UnaryExpression	++ pwsz		5592882	0					
ANR	5592992	IncDec	++		5592882	0					
ANR	5592993	Identifier	pwsz		5592882	1					
ANR	5592994	IfStatement	if ( * psz == '*' )		5592882	4					
ANR	5592995	Condition	* psz == '*'	957:7:31236:31246	5592882	0	True				
ANR	5592996	EqualityExpression	* psz == '*'		5592882	0		==			
ANR	5592997	UnaryOperationExpression	* psz		5592882	0					
ANR	5592998	UnaryOperator	*		5592882	0					
ANR	5592999	Identifier	psz		5592882	1					
ANR	5593000	PrimaryExpression	'*'		5592882	1					
ANR	5593001	ReturnStatement	return true ;	958:4:31253:31264	5592882	1	True				
ANR	5593002	Identifier	true		5592882	0					
ANR	5593003	ReturnStatement	return ( * psz == 0 || * psz == ')' ) ;	960:2:31272:31305	5592882	6	True				
ANR	5593004	OrExpression	* psz == 0 || * psz == ')'		5592882	0		||			
ANR	5593005	EqualityExpression	* psz == 0		5592882	0		==			
ANR	5593006	UnaryOperationExpression	* psz		5592882	0					
ANR	5593007	UnaryOperator	*		5592882	0					
ANR	5593008	Identifier	psz		5592882	1					
ANR	5593009	PrimaryExpression	0		5592882	1					
ANR	5593010	EqualityExpression	* psz == ')'		5592882	1		==			
ANR	5593011	UnaryOperationExpression	* psz		5592882	0					
ANR	5593012	UnaryOperator	*		5592882	0					
ANR	5593013	Identifier	psz		5592882	1					
ANR	5593014	PrimaryExpression	')'		5592882	1					
ANR	5593015	ReturnType	bool		5592882	1					
ANR	5593016	Identifier	Matches		5592882	2					
ANR	5593017	ParameterList	const char * psz		5592882	3					
ANR	5593018	Parameter	const char * psz	940:14:30825:30840	5592882	0	True				
ANR	5593019	ParameterType	const char *		5592882	0					
ANR	5593020	Identifier	psz		5592882	1					
ANR	5593021	CFGEntryNode	ENTRY		5592882		True				
ANR	5593022	CFGExitNode	EXIT		5592882		True				
ANR	5593023	Symbol	* this		5592882						
ANR	5593024	Symbol	* psz		5592882						
ANR	5593025	Symbol	this -> NameOffset		5592882						
ANR	5593026	Symbol	tolower		5592882						
ANR	5593027	Symbol	psz		5592882						
ANR	5593028	Symbol	* pwsz		5592882						
ANR	5593029	Symbol	true		5592882						
ANR	5593030	Symbol	this -> NameLength		5592882						
ANR	5593031	Symbol	this		5592882						
ANR	5593032	Symbol	false		5592882						
ANR	5593033	Symbol	pwsz		5592882						
ANR	5593034	Function	CounterBytes	962:1:31311:31469							
ANR	5593035	FunctionDef	CounterBytes ()		5593034	3					
ANR	5593036	CompoundStatement		962:28:31338:31469	5593034	0					
ANR	5593037	IdentifierDeclStatement	const PERF_COUNTER_BLOCK * pBlock = ( const PERF_COUNTER_BLOCK * ) ( ( BYTE * ) this + this -> ByteLength ) ;	963:2:31343:31437	5593034	0	True				
ANR	5593038	IdentifierDecl	* pBlock = ( const PERF_COUNTER_BLOCK * ) ( ( BYTE * ) this + this -> ByteLength )		5593034	0					
ANR	5593039	IdentifierDeclType	const PERF_COUNTER_BLOCK *		5593034	0					
ANR	5593040	Identifier	pBlock		5593034	1					
ANR	5593041	AssignmentExpression	* pBlock = ( const PERF_COUNTER_BLOCK * ) ( ( BYTE * ) this + this -> ByteLength )		5593034	2		=			
ANR	5593042	Identifier	pBlock		5593034	0					
ANR	5593043	CastExpression	( const PERF_COUNTER_BLOCK * ) ( ( BYTE * ) this + this -> ByteLength )		5593034	1					
ANR	5593044	CastTarget	const PERF_COUNTER_BLOCK *		5593034	0					
ANR	5593045	AdditiveExpression	( BYTE * ) this + this -> ByteLength		5593034	1		+			
ANR	5593046	CastExpression	( BYTE * ) this		5593034	0					
ANR	5593047	CastTarget	BYTE *		5593034	0					
ANR	5593048	Identifier	this		5593034	1					
ANR	5593049	PtrMemberAccess	this -> ByteLength		5593034	1					
ANR	5593050	Identifier	this		5593034	0					
ANR	5593051	Identifier	ByteLength		5593034	1					
ANR	5593052	ReturnStatement	return pBlock -> ByteLength ;	964:2:31441:31466	5593034	1	True				
ANR	5593053	PtrMemberAccess	pBlock -> ByteLength		5593034	0					
ANR	5593054	Identifier	pBlock		5593034	0					
ANR	5593055	Identifier	ByteLength		5593034	1					
ANR	5593056	ReturnType	DWORD		5593034	1					
ANR	5593057	Identifier	CounterBytes		5593034	2					
ANR	5593058	ParameterList			5593034	3					
ANR	5593059	CFGEntryNode	ENTRY		5593034		True				
ANR	5593060	CFGExitNode	EXIT		5593034		True				
ANR	5593061	Symbol	* this		5593034						
ANR	5593062	Symbol	this		5593034						
ANR	5593063	Symbol	pBlock -> ByteLength		5593034						
ANR	5593064	Symbol	this -> ByteLength		5593034						
ANR	5593065	Symbol	pBlock		5593034						
ANR	5593066	Symbol	* pBlock		5593034						
ANR	5593067	Function	CounterData	968:1:31570:31662							
ANR	5593068	FunctionDef	CounterData ()		5593067	4					
ANR	5593069	CompoundStatement		968:34:31603:31662	5593067	0					
ANR	5593070	ReturnStatement	return ( const BYTE * ) ( ( BYTE * ) this + this -> ByteLength ) ;	969:2:31607:31659	5593067	0	True				
ANR	5593071	CastExpression	( const BYTE * ) ( ( BYTE * ) this + this -> ByteLength )		5593067	0					
ANR	5593072	CastTarget	const BYTE *		5593067	0					
ANR	5593073	AdditiveExpression	( BYTE * ) this + this -> ByteLength		5593067	1		+			
ANR	5593074	CastExpression	( BYTE * ) this		5593067	0					
ANR	5593075	CastTarget	BYTE *		5593067	0					
ANR	5593076	Identifier	this		5593067	1					
ANR	5593077	PtrMemberAccess	this -> ByteLength		5593067	1					
ANR	5593078	Identifier	this		5593067	0					
ANR	5593079	Identifier	ByteLength		5593067	1					
ANR	5593080	ReturnType	const BYTE *		5593067	1					
ANR	5593081	Identifier	CounterData		5593067	2					
ANR	5593082	ParameterList			5593067	3					
ANR	5593083	CFGEntryNode	ENTRY		5593067		True				
ANR	5593084	CFGExitNode	EXIT		5593067		True				
ANR	5593085	Symbol	* this		5593067						
ANR	5593086	Symbol	this		5593067						
ANR	5593087	Symbol	this -> ByteLength		5593067						
ANR	5593088	ClassDef	WinPerf_Object	974:0:31669:34293							
ANR	5593089	Function	Next	977:1:31727:31835							
ANR	5593090	FunctionDef	Next ()		5593089	0					
ANR	5593091	CompoundStatement		977:37:31763:31835	5593089	0					
ANR	5593092	ReturnStatement	return ( const WinPerf_Object * ) ( ( BYTE * ) this + this -> TotalByteLength ) ;	977:1:31765:31833	5593089	0	True				
ANR	5593093	CastExpression	( const WinPerf_Object * ) ( ( BYTE * ) this + this -> TotalByteLength )		5593089	0					
ANR	5593094	CastTarget	const WinPerf_Object *		5593089	0					
ANR	5593095	AdditiveExpression	( BYTE * ) this + this -> TotalByteLength		5593089	1		+			
ANR	5593096	CastExpression	( BYTE * ) this		5593089	0					
ANR	5593097	CastTarget	BYTE *		5593089	0					
ANR	5593098	Identifier	this		5593089	1					
ANR	5593099	PtrMemberAccess	this -> TotalByteLength		5593089	1					
ANR	5593100	Identifier	this		5593089	0					
ANR	5593101	Identifier	TotalByteLength		5593089	1					
ANR	5593102	ReturnType	const WinPerf_Object *		5593089	1					
ANR	5593103	Identifier	Next		5593089	2					
ANR	5593104	ParameterList			5593089	3					
ANR	5593105	CFGEntryNode	ENTRY		5593089		True				
ANR	5593106	CFGExitNode	EXIT		5593089		True				
ANR	5593107	Symbol	* this		5593089						
ANR	5593108	Symbol	this		5593089						
ANR	5593109	Symbol	this -> TotalByteLength		5593089						
ANR	5593110	Function	NameIndex	978:1:31838:31910							
ANR	5593111	FunctionDef	NameIndex ()		5593110	1					
ANR	5593112	CompoundStatement		978:36:31873:31910	5593110	0					
ANR	5593113	ReturnStatement	return this -> ObjectNameTitleIndex ;	978:1:31875:31908	5593110	0	True				
ANR	5593114	PtrMemberAccess	this -> ObjectNameTitleIndex		5593110	0					
ANR	5593115	Identifier	this		5593110	0					
ANR	5593116	Identifier	ObjectNameTitleIndex		5593110	1					
ANR	5593117	ReturnType	DWORD		5593110	1					
ANR	5593118	Identifier	NameIndex		5593110	2					
ANR	5593119	ParameterList			5593110	3					
ANR	5593120	CFGEntryNode	ENTRY		5593110		True				
ANR	5593121	CFGExitNode	EXIT		5593110		True				
ANR	5593122	Symbol	* this		5593110						
ANR	5593123	Symbol	this		5593110						
ANR	5593124	Symbol	this -> ObjectNameTitleIndex		5593110						
ANR	5593125	Function	InstanceCount	980:1:31914:31982							
ANR	5593126	FunctionDef	InstanceCount ()		5593125	2					
ANR	5593127	CompoundStatement		980:40:31953:31982	5593125	0					
ANR	5593128	ReturnStatement	return this -> NumInstances ;	980:1:31955:31980	5593125	0	True				
ANR	5593129	PtrMemberAccess	this -> NumInstances		5593125	0					
ANR	5593130	Identifier	this		5593125	0					
ANR	5593131	Identifier	NumInstances		5593125	1					
ANR	5593132	ReturnType	int		5593125	1					
ANR	5593133	Identifier	InstanceCount		5593125	2					
ANR	5593134	ParameterList			5593125	3					
ANR	5593135	CFGEntryNode	ENTRY		5593125		True				
ANR	5593136	CFGExitNode	EXIT		5593125		True				
ANR	5593137	Symbol	* this		5593125						
ANR	5593138	Symbol	this		5593125						
ANR	5593139	Symbol	this -> NumInstances		5593125						
ANR	5593140	Function	FirstInstance	982:1:31986:32157							
ANR	5593141	FunctionDef	FirstInstance ()		5593140	3					
ANR	5593142	CompoundStatement		982:47:32032:32157	5593140	0					
ANR	5593143	IfStatement	if ( this -> NumInstances <= 0 )		5593140	0					
ANR	5593144	Condition	this -> NumInstances <= 0	983:6:32041:32063	5593140	0	True				
ANR	5593145	RelationalExpression	this -> NumInstances <= 0		5593140	0		<=			
ANR	5593146	PtrMemberAccess	this -> NumInstances		5593140	0					
ANR	5593147	Identifier	this		5593140	0					
ANR	5593148	Identifier	NumInstances		5593140	1					
ANR	5593149	PrimaryExpression	0		5593140	1					
ANR	5593150	ReturnStatement	return NULL ;	984:3:32069:32080	5593140	1	True				
ANR	5593151	Identifier	NULL		5593140	0					
ANR	5593152	ReturnStatement	return ( const WinPerf_ObjInst * ) ( ( BYTE * ) this + this -> DefinitionLength ) ;	985:2:32084:32154	5593140	1	True				
ANR	5593153	CastExpression	( const WinPerf_ObjInst * ) ( ( BYTE * ) this + this -> DefinitionLength )		5593140	0					
ANR	5593154	CastTarget	const WinPerf_ObjInst *		5593140	0					
ANR	5593155	AdditiveExpression	( BYTE * ) this + this -> DefinitionLength		5593140	1		+			
ANR	5593156	CastExpression	( BYTE * ) this		5593140	0					
ANR	5593157	CastTarget	BYTE *		5593140	0					
ANR	5593158	Identifier	this		5593140	1					
ANR	5593159	PtrMemberAccess	this -> DefinitionLength		5593140	1					
ANR	5593160	Identifier	this		5593140	0					
ANR	5593161	Identifier	DefinitionLength		5593140	1					
ANR	5593162	ReturnType	const WinPerf_ObjInst *		5593140	1					
ANR	5593163	Identifier	FirstInstance		5593140	2					
ANR	5593164	ParameterList			5593140	3					
ANR	5593165	CFGEntryNode	ENTRY		5593140		True				
ANR	5593166	CFGExitNode	EXIT		5593140		True				
ANR	5593167	Symbol	* this		5593140						
ANR	5593168	Symbol	NULL		5593140						
ANR	5593169	Symbol	this -> DefinitionLength		5593140						
ANR	5593170	Symbol	this		5593140						
ANR	5593171	Symbol	this -> NumInstances		5593140						
ANR	5593172	Function	Counter	989:1:32245:32483							
ANR	5593173	FunctionDef	Counter (int ix)		5593172	4					
ANR	5593174	CompoundStatement		989:50:32294:32483	5593172	0					
ANR	5593175	IfStatement	if ( ix < 0 || ix >= this -> NumCounters )		5593172	0					
ANR	5593176	Condition	ix < 0 || ix >= this -> NumCounters	990:6:32303:32335	5593172	0	True				
ANR	5593177	OrExpression	ix < 0 || ix >= this -> NumCounters		5593172	0		||			
ANR	5593178	RelationalExpression	ix < 0		5593172	0		<			
ANR	5593179	Identifier	ix		5593172	0					
ANR	5593180	PrimaryExpression	0		5593172	1					
ANR	5593181	RelationalExpression	ix >= this -> NumCounters		5593172	1		>=			
ANR	5593182	Identifier	ix		5593172	0					
ANR	5593183	PtrMemberAccess	this -> NumCounters		5593172	1					
ANR	5593184	Identifier	this		5593172	0					
ANR	5593185	Identifier	NumCounters		5593172	1					
ANR	5593186	ReturnStatement	return NULL ;	991:3:32341:32352	5593172	1	True				
ANR	5593187	Identifier	NULL		5593172	0					
ANR	5593188	IdentifierDeclStatement	const WinPerf_CounterDef * pCounter = ( const WinPerf_CounterDef * ) ( ( BYTE * ) this + this -> HeaderLength ) ;	992:2:32356:32456	5593172	1	True				
ANR	5593189	IdentifierDecl	* pCounter = ( const WinPerf_CounterDef * ) ( ( BYTE * ) this + this -> HeaderLength )		5593172	0					
ANR	5593190	IdentifierDeclType	const WinPerf_CounterDef *		5593172	0					
ANR	5593191	Identifier	pCounter		5593172	1					
ANR	5593192	AssignmentExpression	* pCounter = ( const WinPerf_CounterDef * ) ( ( BYTE * ) this + this -> HeaderLength )		5593172	2		=			
ANR	5593193	Identifier	pCounter		5593172	0					
ANR	5593194	CastExpression	( const WinPerf_CounterDef * ) ( ( BYTE * ) this + this -> HeaderLength )		5593172	1					
ANR	5593195	CastTarget	const WinPerf_CounterDef *		5593172	0					
ANR	5593196	AdditiveExpression	( BYTE * ) this + this -> HeaderLength		5593172	1		+			
ANR	5593197	CastExpression	( BYTE * ) this		5593172	0					
ANR	5593198	CastTarget	BYTE *		5593172	0					
ANR	5593199	Identifier	this		5593172	1					
ANR	5593200	PtrMemberAccess	this -> HeaderLength		5593172	1					
ANR	5593201	Identifier	this		5593172	0					
ANR	5593202	Identifier	HeaderLength		5593172	1					
ANR	5593203	ReturnStatement	return pCounter + ix ;	993:2:32460:32480	5593172	2	True				
ANR	5593204	AdditiveExpression	pCounter + ix		5593172	0		+			
ANR	5593205	Identifier	pCounter		5593172	0					
ANR	5593206	Identifier	ix		5593172	1					
ANR	5593207	ReturnType	const WinPerf_CounterDef *		5593172	1					
ANR	5593208	Identifier	Counter		5593172	2					
ANR	5593209	ParameterList	int ix		5593172	3					
ANR	5593210	Parameter	int ix	989:36:32280:32285	5593172	0	True				
ANR	5593211	ParameterType	int		5593172	0					
ANR	5593212	Identifier	ix		5593172	1					
ANR	5593213	CFGEntryNode	ENTRY		5593172		True				
ANR	5593214	CFGExitNode	EXIT		5593172		True				
ANR	5593215	Symbol	* this		5593172						
ANR	5593216	Symbol	NULL		5593172						
ANR	5593217	Symbol	this -> NumCounters		5593172						
ANR	5593218	Symbol	this -> HeaderLength		5593172						
ANR	5593219	Symbol	this		5593172						
ANR	5593220	Symbol	ix		5593172						
ANR	5593221	Symbol	pCounter		5593172						
ANR	5593222	Function	CounterData	997:1:32657:32801							
ANR	5593223	FunctionDef	CounterData ()		5593222	5					
ANR	5593224	CompoundStatement		997:34:32690:32801	5593222	0					
ANR	5593225	IfStatement	if ( this -> NumInstances > 0 )		5593222	0					
ANR	5593226	Condition	this -> NumInstances > 0	998:6:32698:32719	5593222	0	True				
ANR	5593227	RelationalExpression	this -> NumInstances > 0		5593222	0		>			
ANR	5593228	PtrMemberAccess	this -> NumInstances		5593222	0					
ANR	5593229	Identifier	this		5593222	0					
ANR	5593230	Identifier	NumInstances		5593222	1					
ANR	5593231	PrimaryExpression	0		5593222	1					
ANR	5593232	ReturnStatement	return NULL ;	999:3:32725:32736	5593222	1	True				
ANR	5593233	Identifier	NULL		5593222	0					
ANR	5593234	ReturnStatement	return ( const BYTE * ) ( ( BYTE * ) this + this -> DefinitionLength ) ;	1000:2:32740:32798	5593222	1	True				
ANR	5593235	CastExpression	( const BYTE * ) ( ( BYTE * ) this + this -> DefinitionLength )		5593222	0					
ANR	5593236	CastTarget	const BYTE *		5593222	0					
ANR	5593237	AdditiveExpression	( BYTE * ) this + this -> DefinitionLength		5593222	1		+			
ANR	5593238	CastExpression	( BYTE * ) this		5593222	0					
ANR	5593239	CastTarget	BYTE *		5593222	0					
ANR	5593240	Identifier	this		5593222	1					
ANR	5593241	PtrMemberAccess	this -> DefinitionLength		5593222	1					
ANR	5593242	Identifier	this		5593222	0					
ANR	5593243	Identifier	DefinitionLength		5593222	1					
ANR	5593244	ReturnType	const BYTE *		5593222	1					
ANR	5593245	Identifier	CounterData		5593222	2					
ANR	5593246	ParameterList			5593222	3					
ANR	5593247	CFGEntryNode	ENTRY		5593222		True				
ANR	5593248	CFGExitNode	EXIT		5593222		True				
ANR	5593249	Symbol	* this		5593222						
ANR	5593250	Symbol	NULL		5593222						
ANR	5593251	Symbol	this -> DefinitionLength		5593222						
ANR	5593252	Symbol	this		5593222						
ANR	5593253	Symbol	this -> NumInstances		5593222						
ANR	5593254	Function	Default	1003:1:32805:32990							
ANR	5593255	FunctionDef	Default ()		5593254	6					
ANR	5593256	CompoundStatement		1003:44:32848:32990	5593254	0					
ANR	5593257	IfStatement	if ( this -> DefaultCounter >= 0 && this -> DefaultCounter < this -> NumCounters )		5593254	0					
ANR	5593258	Condition	this -> DefaultCounter >= 0 && this -> DefaultCounter < this -> NumCounters	1004:6:32856:32924	5593254	0	True				
ANR	5593259	AndExpression	this -> DefaultCounter >= 0 && this -> DefaultCounter < this -> NumCounters		5593254	0		&&			
ANR	5593260	RelationalExpression	this -> DefaultCounter >= 0		5593254	0		>=			
ANR	5593261	PtrMemberAccess	this -> DefaultCounter		5593254	0					
ANR	5593262	Identifier	this		5593254	0					
ANR	5593263	Identifier	DefaultCounter		5593254	1					
ANR	5593264	PrimaryExpression	0		5593254	1					
ANR	5593265	RelationalExpression	this -> DefaultCounter < this -> NumCounters		5593254	1		<			
ANR	5593266	PtrMemberAccess	this -> DefaultCounter		5593254	0					
ANR	5593267	Identifier	this		5593254	0					
ANR	5593268	Identifier	DefaultCounter		5593254	1					
ANR	5593269	PtrMemberAccess	this -> NumCounters		5593254	1					
ANR	5593270	Identifier	this		5593254	0					
ANR	5593271	Identifier	NumCounters		5593254	1					
ANR	5593272	ReturnStatement	return this -> Counter ( this -> DefaultCounter ) ;	1005:3:32930:32972	5593254	1	True				
ANR	5593273	CallExpression	this -> Counter ( this -> DefaultCounter )		5593254	0					
ANR	5593274	Callee	this -> Counter		5593254	0					
ANR	5593275	PtrMemberAccess	this -> Counter		5593254	0					
ANR	5593276	Identifier	this		5593254	0					
ANR	5593277	Identifier	Counter		5593254	1					
ANR	5593278	ArgumentList	this -> DefaultCounter		5593254	1					
ANR	5593279	Argument	this -> DefaultCounter		5593254	0					
ANR	5593280	PtrMemberAccess	this -> DefaultCounter		5593254	0					
ANR	5593281	Identifier	this		5593254	0					
ANR	5593282	Identifier	DefaultCounter		5593254	1					
ANR	5593283	ReturnStatement	return NULL ;	1006:2:32976:32987	5593254	1	True				
ANR	5593284	Identifier	NULL		5593254	0					
ANR	5593285	ReturnType	const WinPerf_CounterDef *		5593254	1					
ANR	5593286	Identifier	Default		5593254	2					
ANR	5593287	ParameterList			5593254	3					
ANR	5593288	CFGEntryNode	ENTRY		5593254		True				
ANR	5593289	CFGExitNode	EXIT		5593254		True				
ANR	5593290	Symbol	* this		5593254						
ANR	5593291	Symbol	NULL		5593254						
ANR	5593292	Symbol	this -> NumCounters		5593254						
ANR	5593293	Symbol	this -> Counter		5593254						
ANR	5593294	Symbol	this		5593254						
ANR	5593295	Symbol	this -> DefaultCounter		5593254						
ANR	5593296	Function	Select	1010:1:33070:33563							
ANR	5593297	FunctionDef	Select (const DWORD * pidCounters)		5593296	7					
ANR	5593298	CompoundStatement		1010:68:33137:33563	5593296	0					
ANR	5593299	IdentifierDeclStatement	const WinPerf_CounterDef * pCounter = ( const WinPerf_CounterDef * ) ( ( BYTE * ) this + this -> HeaderLength ) ;	1011:2:33141:33241	5593296	0	True				
ANR	5593300	IdentifierDecl	* pCounter = ( const WinPerf_CounterDef * ) ( ( BYTE * ) this + this -> HeaderLength )		5593296	0					
ANR	5593301	IdentifierDeclType	const WinPerf_CounterDef *		5593296	0					
ANR	5593302	Identifier	pCounter		5593296	1					
ANR	5593303	AssignmentExpression	* pCounter = ( const WinPerf_CounterDef * ) ( ( BYTE * ) this + this -> HeaderLength )		5593296	2		=			
ANR	5593304	Identifier	pCounter		5593296	0					
ANR	5593305	CastExpression	( const WinPerf_CounterDef * ) ( ( BYTE * ) this + this -> HeaderLength )		5593296	1					
ANR	5593306	CastTarget	const WinPerf_CounterDef *		5593296	0					
ANR	5593307	AdditiveExpression	( BYTE * ) this + this -> HeaderLength		5593296	1		+			
ANR	5593308	CastExpression	( BYTE * ) this		5593296	0					
ANR	5593309	CastTarget	BYTE *		5593296	0					
ANR	5593310	Identifier	this		5593296	1					
ANR	5593311	PtrMemberAccess	this -> HeaderLength		5593296	1					
ANR	5593312	Identifier	this		5593296	0					
ANR	5593313	Identifier	HeaderLength		5593296	1					
ANR	5593314	WhileStatement	while ( * pidCounters )		5593296	1					
ANR	5593315	Condition	* pidCounters	1012:9:33252:33263	5593296	0	True				
ANR	5593316	UnaryOperationExpression	* pidCounters		5593296	0					
ANR	5593317	UnaryOperator	*		5593296	0					
ANR	5593318	Identifier	pidCounters		5593296	1					
ANR	5593319	CompoundStatement		3:23:128:128	5593296	1					
ANR	5593320	ForStatement	for ( UINT jj = 0 ; jj < this -> NumCounters ; ++ jj )		5593296	0					
ANR	5593321	ForInit	UINT jj = 0 ;	1013:8:33276:33287	5593296	0	True				
ANR	5593322	IdentifierDeclStatement	UINT jj = 0 ;		5593296	0					
ANR	5593323	IdentifierDecl	jj = 0		5593296	0					
ANR	5593324	IdentifierDeclType	UINT		5593296	0					
ANR	5593325	Identifier	jj		5593296	1					
ANR	5593326	AssignmentExpression	jj = 0		5593296	2		=			
ANR	5593327	Identifier	jj		5593296	0					
ANR	5593328	PrimaryExpression	0		5593296	1					
ANR	5593329	Condition	jj < this -> NumCounters	1013:21:33289:33310	5593296	1	True				
ANR	5593330	RelationalExpression	jj < this -> NumCounters		5593296	0		<			
ANR	5593331	Identifier	jj		5593296	0					
ANR	5593332	PtrMemberAccess	this -> NumCounters		5593296	1					
ANR	5593333	Identifier	this		5593296	0					
ANR	5593334	Identifier	NumCounters		5593296	1					
ANR	5593335	UnaryExpression	++ jj	1013:45:33313:33316	5593296	2	True				
ANR	5593336	IncDec	++		5593296	0					
ANR	5593337	Identifier	jj		5593296	1					
ANR	5593338	CompoundStatement		4:51:181:181	5593296	3					
ANR	5593339	IfStatement	if ( ( pCounter + jj ) -> NameIndex ( ) == * pidCounters )		5593296	0					
ANR	5593340	Condition	( pCounter + jj ) -> NameIndex ( ) == * pidCounters	1014:8:33329:33370	5593296	0	True				
ANR	5593341	EqualityExpression	( pCounter + jj ) -> NameIndex ( ) == * pidCounters		5593296	0		==			
ANR	5593342	CallExpression	( pCounter + jj ) -> NameIndex ( )		5593296	0					
ANR	5593343	Callee	( pCounter + jj ) -> NameIndex		5593296	0					
ANR	5593344	PtrMemberAccess	( pCounter + jj ) -> NameIndex		5593296	0					
ANR	5593345	AdditiveExpression	pCounter + jj		5593296	0		+			
ANR	5593346	Identifier	pCounter		5593296	0					
ANR	5593347	Identifier	jj		5593296	1					
ANR	5593348	Identifier	NameIndex		5593296	1					
ANR	5593349	ArgumentList			5593296	1					
ANR	5593350	UnaryOperationExpression	* pidCounters		5593296	1					
ANR	5593351	UnaryOperator	*		5593296	0					
ANR	5593352	Identifier	pidCounters		5593296	1					
ANR	5593353	ReturnStatement	return pCounter + jj ;	1015:5:33378:33398	5593296	1	True				
ANR	5593354	AdditiveExpression	pCounter + jj		5593296	0		+			
ANR	5593355	Identifier	pCounter		5593296	0					
ANR	5593356	Identifier	jj		5593296	1					
ANR	5593357	ExpressionStatement	++ pidCounters	1017:3:33408:33421	5593296	1	True				
ANR	5593358	UnaryExpression	++ pidCounters		5593296	0					
ANR	5593359	IncDec	++		5593296	0					
ANR	5593360	Identifier	pidCounters		5593296	1					
ANR	5593361	IfStatement	if ( this -> DefaultCounter >= 0 && this -> DefaultCounter < this -> NumCounters )		5593296	2					
ANR	5593362	Condition	this -> DefaultCounter >= 0 && this -> DefaultCounter < this -> NumCounters	1019:6:33433:33501	5593296	0	True				
ANR	5593363	AndExpression	this -> DefaultCounter >= 0 && this -> DefaultCounter < this -> NumCounters		5593296	0		&&			
ANR	5593364	RelationalExpression	this -> DefaultCounter >= 0		5593296	0		>=			
ANR	5593365	PtrMemberAccess	this -> DefaultCounter		5593296	0					
ANR	5593366	Identifier	this		5593296	0					
ANR	5593367	Identifier	DefaultCounter		5593296	1					
ANR	5593368	PrimaryExpression	0		5593296	1					
ANR	5593369	RelationalExpression	this -> DefaultCounter < this -> NumCounters		5593296	1		<			
ANR	5593370	PtrMemberAccess	this -> DefaultCounter		5593296	0					
ANR	5593371	Identifier	this		5593296	0					
ANR	5593372	Identifier	DefaultCounter		5593296	1					
ANR	5593373	PtrMemberAccess	this -> NumCounters		5593296	1					
ANR	5593374	Identifier	this		5593296	0					
ANR	5593375	Identifier	NumCounters		5593296	1					
ANR	5593376	ReturnStatement	return pCounter + this -> DefaultCounter ;	1020:3:33507:33545	5593296	1	True				
ANR	5593377	AdditiveExpression	pCounter + this -> DefaultCounter		5593296	0		+			
ANR	5593378	Identifier	pCounter		5593296	0					
ANR	5593379	PtrMemberAccess	this -> DefaultCounter		5593296	1					
ANR	5593380	Identifier	this		5593296	0					
ANR	5593381	Identifier	DefaultCounter		5593296	1					
ANR	5593382	ReturnStatement	return NULL ;	1021:2:33549:33560	5593296	3	True				
ANR	5593383	Identifier	NULL		5593296	0					
ANR	5593384	ReturnType	const WinPerf_CounterDef *		5593296	1					
ANR	5593385	Identifier	Select		5593296	2					
ANR	5593386	ParameterList	const DWORD * pidCounters		5593296	3					
ANR	5593387	Parameter	const DWORD * pidCounters	1010:35:33104:33128	5593296	0	True				
ANR	5593388	ParameterType	const DWORD *		5593296	0					
ANR	5593389	Identifier	pidCounters		5593296	1					
ANR	5593390	CFGEntryNode	ENTRY		5593296		True				
ANR	5593391	CFGExitNode	EXIT		5593296		True				
ANR	5593392	Symbol	jj		5593296						
ANR	5593393	Symbol	NULL		5593296						
ANR	5593394	Symbol	this -> NumCounters		5593296						
ANR	5593395	Symbol	* jj		5593296						
ANR	5593396	Symbol	this -> HeaderLength		5593296						
ANR	5593397	Symbol	* pidCounters		5593296						
ANR	5593398	Symbol	this		5593296						
ANR	5593399	Symbol	* pCounter		5593296						
ANR	5593400	Symbol	* this		5593296						
ANR	5593401	Symbol	pidCounters		5593296						
ANR	5593402	Symbol	( pCounter + jj ) -> NameIndex		5593296						
ANR	5593403	Symbol	this -> DefaultCounter		5593296						
ANR	5593404	Symbol	pCounter		5593296						
ANR	5593405	Function	GetRawValue	1023:1:33566:33921							
ANR	5593406	FunctionDef	"GetRawValue (const WinPerf_CounterDef * pCounter , const BYTE * data)"		5593405	8					
ANR	5593407	CompoundStatement		1026:85:33659:33921	5593405	0					
ANR	5593408	IdentifierDeclStatement	ULARGE_INTEGER uli = { 0 } ;	1027:2:33663:33687	5593405	0	True				
ANR	5593409	IdentifierDecl	uli = { 0 }		5593405	0					
ANR	5593410	IdentifierDeclType	ULARGE_INTEGER		5593405	0					
ANR	5593411	Identifier	uli		5593405	1					
ANR	5593412	AssignmentExpression	uli = { 0 }		5593405	2		=			
ANR	5593413	Identifier	uli		5593405	0					
ANR	5593414	InitializerList	0		5593405	1					
ANR	5593415	PrimaryExpression	0		5593405	0					
ANR	5593416	IfStatement	if ( pCounter -> CounterSize == 4 )		5593405	1					
ANR	5593417	Condition	pCounter -> CounterSize == 4	1028:6:33695:33720	5593405	0	True				
ANR	5593418	EqualityExpression	pCounter -> CounterSize == 4		5593405	0		==			
ANR	5593419	PtrMemberAccess	pCounter -> CounterSize		5593405	0					
ANR	5593420	Identifier	pCounter		5593405	0					
ANR	5593421	Identifier	CounterSize		5593405	1					
ANR	5593422	PrimaryExpression	4		5593405	1					
ANR	5593423	ExpressionStatement	uli . LowPart = * ( DWORD * ) ( data + pCounter -> CounterOffset )	1029:3:33726:33781	5593405	1	True				
ANR	5593424	AssignmentExpression	uli . LowPart = * ( DWORD * ) ( data + pCounter -> CounterOffset )		5593405	0		=			
ANR	5593425	MemberAccess	uli . LowPart		5593405	0					
ANR	5593426	Identifier	uli		5593405	0					
ANR	5593427	Identifier	LowPart		5593405	1					
ANR	5593428	UnaryOperationExpression	* ( DWORD * ) ( data + pCounter -> CounterOffset )		5593405	1					
ANR	5593429	UnaryOperator	*		5593405	0					
ANR	5593430	CastExpression	( DWORD * ) ( data + pCounter -> CounterOffset )		5593405	1					
ANR	5593431	CastTarget	DWORD *		5593405	0					
ANR	5593432	AdditiveExpression	data + pCounter -> CounterOffset		5593405	1		+			
ANR	5593433	Identifier	data		5593405	0					
ANR	5593434	PtrMemberAccess	pCounter -> CounterOffset		5593405	1					
ANR	5593435	Identifier	pCounter		5593405	0					
ANR	5593436	Identifier	CounterOffset		5593405	1					
ANR	5593437	ElseStatement	else		5593405	0					
ANR	5593438	IfStatement	if ( pCounter -> CounterSize >= 8 )		5593405	0					
ANR	5593439	Condition	pCounter -> CounterSize >= 8	1030:11:33794:33819	5593405	0	True				
ANR	5593440	RelationalExpression	pCounter -> CounterSize >= 8		5593405	0		>=			
ANR	5593441	PtrMemberAccess	pCounter -> CounterSize		5593405	0					
ANR	5593442	Identifier	pCounter		5593405	0					
ANR	5593443	Identifier	CounterSize		5593405	1					
ANR	5593444	PrimaryExpression	8		5593405	1					
ANR	5593445	ExpressionStatement	uli . QuadPart = * ( UNALIGNED ULONGLONG * ) ( data + pCounter -> CounterOffset )	1031:3:33825:33895	5593405	1	True				
ANR	5593446	AssignmentExpression	uli . QuadPart = * ( UNALIGNED ULONGLONG * ) ( data + pCounter -> CounterOffset )		5593405	0		=			
ANR	5593447	MemberAccess	uli . QuadPart		5593405	0					
ANR	5593448	Identifier	uli		5593405	0					
ANR	5593449	Identifier	QuadPart		5593405	1					
ANR	5593450	UnaryOperationExpression	* ( UNALIGNED ULONGLONG * ) ( data + pCounter -> CounterOffset )		5593405	1					
ANR	5593451	UnaryOperator	*		5593405	0					
ANR	5593452	CastExpression	( UNALIGNED ULONGLONG * ) ( data + pCounter -> CounterOffset )		5593405	1					
ANR	5593453	CastTarget	UNALIGNED ULONGLONG *		5593405	0					
ANR	5593454	AdditiveExpression	data + pCounter -> CounterOffset		5593405	1		+			
ANR	5593455	Identifier	data		5593405	0					
ANR	5593456	PtrMemberAccess	pCounter -> CounterOffset		5593405	1					
ANR	5593457	Identifier	pCounter		5593405	0					
ANR	5593458	Identifier	CounterOffset		5593405	1					
ANR	5593459	ReturnStatement	return uli . QuadPart ;	1032:2:33899:33918	5593405	2	True				
ANR	5593460	MemberAccess	uli . QuadPart		5593405	0					
ANR	5593461	Identifier	uli		5593405	0					
ANR	5593462	Identifier	QuadPart		5593405	1					
ANR	5593463	ReturnType	const ULONGLONG		5593405	1					
ANR	5593464	Identifier	GetRawValue		5593405	2					
ANR	5593465	ParameterList	"const WinPerf_CounterDef * pCounter , const BYTE * data"		5593405	3					
ANR	5593466	Parameter	const WinPerf_CounterDef * pCounter	1026:23:33597:33631	5593405	0	True				
ANR	5593467	ParameterType	const WinPerf_CounterDef *		5593405	0					
ANR	5593468	Identifier	pCounter		5593405	1					
ANR	5593469	Parameter	const BYTE * data	1026:60:33634:33650	5593405	1	True				
ANR	5593470	ParameterType	const BYTE *		5593405	0					
ANR	5593471	Identifier	data		5593405	1					
ANR	5593472	CFGEntryNode	ENTRY		5593405		True				
ANR	5593473	CFGExitNode	EXIT		5593405		True				
ANR	5593474	Symbol	* pCounter -> CounterOffset		5593405						
ANR	5593475	Symbol	data		5593405						
ANR	5593476	Symbol	* ( UNALIGNED ULONGLONG * ) ( data + pCounter -> CounterOffset )		5593405						
ANR	5593477	Symbol	uli . QuadPart		5593405						
ANR	5593478	Symbol	* pCounter		5593405						
ANR	5593479	Symbol	uli . LowPart		5593405						
ANR	5593480	Symbol	pCounter -> CounterOffset		5593405						
ANR	5593481	Symbol	* * pCounter		5593405						
ANR	5593482	Symbol	uli		5593405						
ANR	5593483	Symbol	pCounter -> CounterSize		5593405						
ANR	5593484	Symbol	* ( DWORD * ) ( data + pCounter -> CounterOffset )		5593405						
ANR	5593485	Symbol	* data		5593405						
ANR	5593486	Symbol	pCounter		5593405						
ANR	5593487	ClassDef	WinPerf_Data	1047:0:34297:34987							
ANR	5593488	Function	First	1050:1:34352:34511							
ANR	5593489	FunctionDef	First ()		5593488	0					
ANR	5593490	CompoundStatement		1050:38:34389:34511	5593488	0					
ANR	5593491	IfStatement	if ( this -> NumObjectTypes > 0 )		5593488	0					
ANR	5593492	Condition	this -> NumObjectTypes > 0	1051:6:34398:34421	5593488	0	True				
ANR	5593493	RelationalExpression	this -> NumObjectTypes > 0		5593488	0		>			
ANR	5593494	PtrMemberAccess	this -> NumObjectTypes		5593488	0					
ANR	5593495	Identifier	this		5593488	0					
ANR	5593496	Identifier	NumObjectTypes		5593488	1					
ANR	5593497	PrimaryExpression	0		5593488	1					
ANR	5593498	ReturnStatement	return ( const WinPerf_Object * ) ( ( BYTE * ) this + this -> HeaderLength ) ;	1052:3:34427:34492	5593488	1	True				
ANR	5593499	CastExpression	( const WinPerf_Object * ) ( ( BYTE * ) this + this -> HeaderLength )		5593488	0					
ANR	5593500	CastTarget	const WinPerf_Object *		5593488	0					
ANR	5593501	AdditiveExpression	( BYTE * ) this + this -> HeaderLength		5593488	1		+			
ANR	5593502	CastExpression	( BYTE * ) this		5593488	0					
ANR	5593503	CastTarget	BYTE *		5593488	0					
ANR	5593504	Identifier	this		5593488	1					
ANR	5593505	PtrMemberAccess	this -> HeaderLength		5593488	1					
ANR	5593506	Identifier	this		5593488	0					
ANR	5593507	Identifier	HeaderLength		5593488	1					
ANR	5593508	ReturnStatement	return NULL ;	1053:2:34497:34508	5593488	1	True				
ANR	5593509	Identifier	NULL		5593488	0					
ANR	5593510	ReturnType	const WinPerf_Object *		5593488	1					
ANR	5593511	Identifier	First		5593488	2					
ANR	5593512	ParameterList			5593488	3					
ANR	5593513	CFGEntryNode	ENTRY		5593488		True				
ANR	5593514	CFGExitNode	EXIT		5593488		True				
ANR	5593515	Symbol	* this		5593488						
ANR	5593516	Symbol	NULL		5593488						
ANR	5593517	Symbol	this -> HeaderLength		5593488						
ANR	5593518	Symbol	this -> NumObjectTypes		5593488						
ANR	5593519	Symbol	this		5593488						
ANR	5593520	Function	Find	1055:1:34514:34767							
ANR	5593521	FunctionDef	Find (DWORD idObject)		5593520	1					
ANR	5593522	CompoundStatement		1055:51:34564:34767	5593520	0					
ANR	5593523	IdentifierDeclStatement	const WinPerf_Object * pObj = First ( ) ;	1056:2:34568:34605	5593520	0	True				
ANR	5593524	IdentifierDecl	* pObj = First ( )		5593520	0					
ANR	5593525	IdentifierDeclType	const WinPerf_Object *		5593520	0					
ANR	5593526	Identifier	pObj		5593520	1					
ANR	5593527	AssignmentExpression	* pObj = First ( )		5593520	2		=			
ANR	5593528	Identifier	pObj		5593520	0					
ANR	5593529	CallExpression	First ( )		5593520	1					
ANR	5593530	Callee	First		5593520	0					
ANR	5593531	Identifier	First		5593520	0					
ANR	5593532	ArgumentList			5593520	1					
ANR	5593533	ForStatement	"for ( UINT ii = 0 ; ii < this -> NumObjectTypes ; ++ ii , pObj = pObj -> Next ( ) )"		5593520	1					
ANR	5593534	ForInit	UINT ii = 0 ;	1057:7:34614:34625	5593520	0	True				
ANR	5593535	IdentifierDeclStatement	UINT ii = 0 ;		5593520	0					
ANR	5593536	IdentifierDecl	ii = 0		5593520	0					
ANR	5593537	IdentifierDeclType	UINT		5593520	0					
ANR	5593538	Identifier	ii		5593520	1					
ANR	5593539	AssignmentExpression	ii = 0		5593520	2		=			
ANR	5593540	Identifier	ii		5593520	0					
ANR	5593541	PrimaryExpression	0		5593520	1					
ANR	5593542	Condition	ii < this -> NumObjectTypes	1057:20:34627:34651	5593520	1	True				
ANR	5593543	RelationalExpression	ii < this -> NumObjectTypes		5593520	0		<			
ANR	5593544	Identifier	ii		5593520	0					
ANR	5593545	PtrMemberAccess	this -> NumObjectTypes		5593520	1					
ANR	5593546	Identifier	this		5593520	0					
ANR	5593547	Identifier	NumObjectTypes		5593520	1					
ANR	5593548	Expression	"++ ii , pObj = pObj -> Next ( )"	1057:47:34654:34678	5593520	2	True				
ANR	5593549	UnaryExpression	++ ii		5593520	0					
ANR	5593550	IncDec	++		5593520	0					
ANR	5593551	Identifier	ii		5593520	1					
ANR	5593552	AssignmentExpression	pObj = pObj -> Next ( )		5593520	1		=			
ANR	5593553	Identifier	pObj		5593520	0					
ANR	5593554	CallExpression	pObj -> Next ( )		5593520	1					
ANR	5593555	Callee	pObj -> Next		5593520	0					
ANR	5593556	PtrMemberAccess	pObj -> Next		5593520	0					
ANR	5593557	Identifier	pObj		5593520	0					
ANR	5593558	Identifier	Next		5593520	1					
ANR	5593559	ArgumentList			5593520	1					
ANR	5593560	CompoundStatement		3:74:116:116	5593520	3					
ANR	5593561	IfStatement	if ( pObj -> ObjectNameTitleIndex == idObject )		5593520	0					
ANR	5593562	Condition	pObj -> ObjectNameTitleIndex == idObject	1058:7:34690:34727	5593520	0	True				
ANR	5593563	EqualityExpression	pObj -> ObjectNameTitleIndex == idObject		5593520	0		==			
ANR	5593564	PtrMemberAccess	pObj -> ObjectNameTitleIndex		5593520	0					
ANR	5593565	Identifier	pObj		5593520	0					
ANR	5593566	Identifier	ObjectNameTitleIndex		5593520	1					
ANR	5593567	Identifier	idObject		5593520	1					
ANR	5593568	ReturnStatement	return pObj ;	1059:4:34734:34745	5593520	1	True				
ANR	5593569	Identifier	pObj		5593520	0					
ANR	5593570	ReturnStatement	return NULL ;	1061:2:34753:34764	5593520	2	True				
ANR	5593571	Identifier	NULL		5593520	0					
ANR	5593572	ReturnType	const WinPerf_Object *		5593520	1					
ANR	5593573	Identifier	Find		5593520	2					
ANR	5593574	ParameterList	DWORD idObject		5593520	3					
ANR	5593575	Parameter	DWORD idObject	1055:29:34542:34555	5593520	0	True				
ANR	5593576	ParameterType	DWORD		5593520	0					
ANR	5593577	Identifier	idObject		5593520	1					
ANR	5593578	CFGEntryNode	ENTRY		5593520		True				
ANR	5593579	CFGExitNode	EXIT		5593520		True				
ANR	5593580	Symbol	* this		5593520						
ANR	5593581	Symbol	ii		5593520						
ANR	5593582	Symbol	pObj		5593520						
ANR	5593583	Symbol	NULL		5593520						
ANR	5593584	Symbol	pObj -> ObjectNameTitleIndex		5593520						
ANR	5593585	Symbol	this		5593520						
ANR	5593586	Symbol	this -> NumObjectTypes		5593520						
ANR	5593587	Symbol	pObj -> Next		5593520						
ANR	5593588	Symbol	idObject		5593520						
ANR	5593589	Symbol	First		5593520						
ANR	5593590	Symbol	* pObj		5593520						
ANR	5593591	Function	Length	1063:1:34770:34830							
ANR	5593592	FunctionDef	Length ()		5593591	2					
ANR	5593593	CompoundStatement		1063:20:34789:34830	5593591	0					
ANR	5593594	ReturnStatement	return ( int ) this -> NumObjectTypes ;	1064:2:34794:34826	5593591	0	True				
ANR	5593595	CastExpression	( int ) this -> NumObjectTypes		5593591	0					
ANR	5593596	CastTarget	int		5593591	0					
ANR	5593597	PtrMemberAccess	this -> NumObjectTypes		5593591	1					
ANR	5593598	Identifier	this		5593591	0					
ANR	5593599	Identifier	NumObjectTypes		5593591	1					
ANR	5593600	ReturnType	int		5593591	1					
ANR	5593601	Identifier	Length		5593591	2					
ANR	5593602	ParameterList			5593591	3					
ANR	5593603	CFGEntryNode	ENTRY		5593591		True				
ANR	5593604	CFGExitNode	EXIT		5593591		True				
ANR	5593605	Symbol	* this		5593591						
ANR	5593606	Symbol	this		5593591						
ANR	5593607	Symbol	this -> NumObjectTypes		5593591						
ANR	5593608	Function	SystemName	1066:1:34833:34985							
ANR	5593609	FunctionDef	SystemName ()		5593608	3					
ANR	5593610	CompoundStatement		1066:34:34866:34985	5593608	0					
ANR	5593611	IfStatement	if ( this -> SystemNameLength > 0 )		5593608	0					
ANR	5593612	Condition	this -> SystemNameLength > 0	1067:6:34875:34900	5593608	0	True				
ANR	5593613	RelationalExpression	this -> SystemNameLength > 0		5593608	0		>			
ANR	5593614	PtrMemberAccess	this -> SystemNameLength		5593608	0					
ANR	5593615	Identifier	this		5593608	0					
ANR	5593616	Identifier	SystemNameLength		5593608	1					
ANR	5593617	PrimaryExpression	0		5593608	1					
ANR	5593618	ReturnStatement	return ( const WCHAR * ) ( ( BYTE * ) this + this -> SystemNameOffset ) ;	1068:3:34906:34966	5593608	1	True				
ANR	5593619	CastExpression	( const WCHAR * ) ( ( BYTE * ) this + this -> SystemNameOffset )		5593608	0					
ANR	5593620	CastTarget	const WCHAR *		5593608	0					
ANR	5593621	AdditiveExpression	( BYTE * ) this + this -> SystemNameOffset		5593608	1		+			
ANR	5593622	CastExpression	( BYTE * ) this		5593608	0					
ANR	5593623	CastTarget	BYTE *		5593608	0					
ANR	5593624	Identifier	this		5593608	1					
ANR	5593625	PtrMemberAccess	this -> SystemNameOffset		5593608	1					
ANR	5593626	Identifier	this		5593608	0					
ANR	5593627	Identifier	SystemNameOffset		5593608	1					
ANR	5593628	ReturnStatement	return NULL ;	1069:2:34971:34982	5593608	1	True				
ANR	5593629	Identifier	NULL		5593608	0					
ANR	5593630	ReturnType	const WCHAR *		5593608	1					
ANR	5593631	Identifier	SystemName		5593608	2					
ANR	5593632	ParameterList			5593608	3					
ANR	5593633	CFGEntryNode	ENTRY		5593608		True				
ANR	5593634	CFGExitNode	EXIT		5593608		True				
ANR	5593635	Symbol	* this		5593608						
ANR	5593636	Symbol	NULL		5593608						
ANR	5593637	Symbol	this		5593608						
ANR	5593638	Symbol	this -> SystemNameLength		5593608						
ANR	5593639	Symbol	this -> SystemNameOffset		5593608						
ANR	5593640	Function	WinPerf_Object :: GetValue	1073:0:34991:40047							
ANR	5593641	FunctionDef	"WinPerf_Object :: GetValue (WinPerf_CounterValue & ctval , const WinPerf_CounterDef * pCounter , const WinPerf_TimerDeltas & time , const BYTE * curr , const BYTE * prev)"		5593640	0					
ANR	5593642	CompoundStatement		1079:0:35175:40047	5593640	0					
ANR	5593643	ExpressionStatement	ctval . type = WinPerf_CT_Empty	1080:1:35178:35207	5593640	0	True				
ANR	5593644	AssignmentExpression	ctval . type = WinPerf_CT_Empty		5593640	0		=			
ANR	5593645	MemberAccess	ctval . type		5593640	0					
ANR	5593646	Identifier	ctval		5593640	0					
ANR	5593647	Identifier	type		5593640	1					
ANR	5593648	Identifier	WinPerf_CT_Empty		5593640	1					
ANR	5593649	ExpressionStatement	ctval . value . ul = 0	1081:1:35210:35228	5593640	1	True				
ANR	5593650	AssignmentExpression	ctval . value . ul = 0		5593640	0		=			
ANR	5593651	MemberAccess	ctval . value . ul		5593640	0					
ANR	5593652	MemberAccess	ctval . value		5593640	0					
ANR	5593653	Identifier	ctval		5593640	0					
ANR	5593654	Identifier	value		5593640	1					
ANR	5593655	Identifier	ul		5593640	1					
ANR	5593656	PrimaryExpression	0		5593640	1					
ANR	5593657	IdentifierDeclStatement	const DWORD type = pCounter -> CounterType ;	1083:1:35232:35272	5593640	2	True				
ANR	5593658	IdentifierDecl	type = pCounter -> CounterType		5593640	0					
ANR	5593659	IdentifierDeclType	const DWORD		5593640	0					
ANR	5593660	Identifier	type		5593640	1					
ANR	5593661	AssignmentExpression	type = pCounter -> CounterType		5593640	2		=			
ANR	5593662	Identifier	type		5593640	0					
ANR	5593663	PtrMemberAccess	pCounter -> CounterType		5593640	1					
ANR	5593664	Identifier	pCounter		5593640	0					
ANR	5593665	Identifier	CounterType		5593640	1					
ANR	5593666	IfStatement	if ( type & PERF_DISPLAY_NOSHOW )		5593640	3					
ANR	5593667	Condition	type & PERF_DISPLAY_NOSHOW	1084:5:35279:35304	5593640	0	True				
ANR	5593668	BitAndExpression	type & PERF_DISPLAY_NOSHOW		5593640	0		&			
ANR	5593669	Identifier	type		5593640	0					
ANR	5593670	Identifier	PERF_DISPLAY_NOSHOW		5593640	1					
ANR	5593671	ReturnStatement	return false ;	1085:2:35309:35321	5593640	1	True				
ANR	5593672	Identifier	false		5593640	0					
ANR	5593673	ExpressionStatement	"ctval . value . ul = GetRawValue ( pCounter , curr )"	1087:1:35325:35369	5593640	4	True				
ANR	5593674	AssignmentExpression	"ctval . value . ul = GetRawValue ( pCounter , curr )"		5593640	0		=			
ANR	5593675	MemberAccess	ctval . value . ul		5593640	0					
ANR	5593676	MemberAccess	ctval . value		5593640	0					
ANR	5593677	Identifier	ctval		5593640	0					
ANR	5593678	Identifier	value		5593640	1					
ANR	5593679	Identifier	ul		5593640	1					
ANR	5593680	CallExpression	"GetRawValue ( pCounter , curr )"		5593640	1					
ANR	5593681	Callee	GetRawValue		5593640	0					
ANR	5593682	Identifier	GetRawValue		5593640	0					
ANR	5593683	ArgumentList	pCounter		5593640	1					
ANR	5593684	Argument	pCounter		5593640	0					
ANR	5593685	Identifier	pCounter		5593640	0					
ANR	5593686	Argument	curr		5593640	1					
ANR	5593687	Identifier	curr		5593640	0					
ANR	5593688	IfStatement	if ( type & PERF_DELTA_COUNTER )		5593640	5					
ANR	5593689	Condition	type & PERF_DELTA_COUNTER	1088:5:35376:35400	5593640	0	True				
ANR	5593690	BitAndExpression	type & PERF_DELTA_COUNTER		5593640	0		&			
ANR	5593691	Identifier	type		5593640	0					
ANR	5593692	Identifier	PERF_DELTA_COUNTER		5593640	1					
ANR	5593693	CompoundStatement		14:2:266:309	5593640	1					
ANR	5593694	IfStatement	if ( ! prev )		5593640	0					
ANR	5593695	Condition	! prev	1090:7:35414:35420	5593640	0	True				
ANR	5593696	UnaryOperationExpression	! prev		5593640	0					
ANR	5593697	UnaryOperator	!		5593640	0					
ANR	5593698	Identifier	prev		5593640	1					
ANR	5593699	ReturnStatement	return false ;	1091:3:35426:35438	5593640	1	True				
ANR	5593700	Identifier	false		5593640	0					
ANR	5593701	IdentifierDeclStatement	"ULONGLONG old = GetRawValue ( pCounter , prev ) ;"	1092:2:35442:35485	5593640	1	True				
ANR	5593702	IdentifierDecl	"old = GetRawValue ( pCounter , prev )"		5593640	0					
ANR	5593703	IdentifierDeclType	ULONGLONG		5593640	0					
ANR	5593704	Identifier	old		5593640	1					
ANR	5593705	AssignmentExpression	"old = GetRawValue ( pCounter , prev )"		5593640	2		=			
ANR	5593706	Identifier	old		5593640	0					
ANR	5593707	CallExpression	"GetRawValue ( pCounter , prev )"		5593640	1					
ANR	5593708	Callee	GetRawValue		5593640	0					
ANR	5593709	Identifier	GetRawValue		5593640	0					
ANR	5593710	ArgumentList	pCounter		5593640	1					
ANR	5593711	Argument	pCounter		5593640	0					
ANR	5593712	Identifier	pCounter		5593640	0					
ANR	5593713	Argument	prev		5593640	1					
ANR	5593714	Identifier	prev		5593640	0					
ANR	5593715	IfStatement	if ( ctval . value . ul >= old )		5593640	2					
ANR	5593716	Condition	ctval . value . ul >= old	1093:6:35493:35513	5593640	0	True				
ANR	5593717	RelationalExpression	ctval . value . ul >= old		5593640	0		>=			
ANR	5593718	MemberAccess	ctval . value . ul		5593640	0					
ANR	5593719	MemberAccess	ctval . value		5593640	0					
ANR	5593720	Identifier	ctval		5593640	0					
ANR	5593721	Identifier	value		5593640	1					
ANR	5593722	Identifier	ul		5593640	1					
ANR	5593723	Identifier	old		5593640	1					
ANR	5593724	ExpressionStatement	ctval . value . ul = ctval . value . ul - old	1094:3:35519:35556	5593640	1	True				
ANR	5593725	AssignmentExpression	ctval . value . ul = ctval . value . ul - old		5593640	0		=			
ANR	5593726	MemberAccess	ctval . value . ul		5593640	0					
ANR	5593727	MemberAccess	ctval . value		5593640	0					
ANR	5593728	Identifier	ctval		5593640	0					
ANR	5593729	Identifier	value		5593640	1					
ANR	5593730	Identifier	ul		5593640	1					
ANR	5593731	AdditiveExpression	ctval . value . ul - old		5593640	1		-			
ANR	5593732	MemberAccess	ctval . value . ul		5593640	0					
ANR	5593733	MemberAccess	ctval . value		5593640	0					
ANR	5593734	Identifier	ctval		5593640	0					
ANR	5593735	Identifier	value		5593640	1					
ANR	5593736	Identifier	ul		5593640	1					
ANR	5593737	Identifier	old		5593640	1					
ANR	5593738	IfStatement	if ( ( type & PERF_TYPE_ZERO ) == PERF_TYPE_NUMBER )		5593640	6					
ANR	5593739	Condition	( type & PERF_TYPE_ZERO ) == PERF_TYPE_NUMBER	1101:5:35743:35785	5593640	0	True				
ANR	5593740	EqualityExpression	( type & PERF_TYPE_ZERO ) == PERF_TYPE_NUMBER		5593640	0		==			
ANR	5593741	BitAndExpression	type & PERF_TYPE_ZERO		5593640	0		&			
ANR	5593742	Identifier	type		5593640	0					
ANR	5593743	Identifier	PERF_TYPE_ZERO		5593640	1					
ANR	5593744	Identifier	PERF_TYPE_NUMBER		5593640	1					
ANR	5593745	CompoundStatement		24:1:613:613	5593640	1					
ANR	5593746	ExpressionStatement	ctval . type = WinPerf_CT_Unsigned	1103:2:35793:35825	5593640	0	True				
ANR	5593747	AssignmentExpression	ctval . type = WinPerf_CT_Unsigned		5593640	0		=			
ANR	5593748	MemberAccess	ctval . type		5593640	0					
ANR	5593749	Identifier	ctval		5593640	0					
ANR	5593750	Identifier	type		5593640	1					
ANR	5593751	Identifier	WinPerf_CT_Unsigned		5593640	1					
ANR	5593752	IfStatement	if ( type & PERF_NUMBER_DECIMAL )		5593640	1					
ANR	5593753	Condition	type & PERF_NUMBER_DECIMAL	1104:6:35833:35858	5593640	0	True				
ANR	5593754	BitAndExpression	type & PERF_NUMBER_DECIMAL		5593640	0		&			
ANR	5593755	Identifier	type		5593640	0					
ANR	5593756	Identifier	PERF_NUMBER_DECIMAL		5593640	1					
ANR	5593757	ExpressionStatement	ctval . type = ctval . type | WinPerf_CT_Decimal	1105:3:35864:35908	5593640	1	True				
ANR	5593758	AssignmentExpression	ctval . type = ctval . type | WinPerf_CT_Decimal		5593640	0		=			
ANR	5593759	MemberAccess	ctval . type		5593640	0					
ANR	5593760	Identifier	ctval		5593640	0					
ANR	5593761	Identifier	type		5593640	1					
ANR	5593762	InclusiveOrExpression	ctval . type | WinPerf_CT_Decimal		5593640	1		|			
ANR	5593763	MemberAccess	ctval . type		5593640	0					
ANR	5593764	Identifier	ctval		5593640	0					
ANR	5593765	Identifier	type		5593640	1					
ANR	5593766	Identifier	WinPerf_CT_Decimal		5593640	1					
ANR	5593767	ElseStatement	else		5593640	0					
ANR	5593768	CompoundStatement		29:2:744:744	5593640	0					
ANR	5593769	ExpressionStatement	ctval . type = WinPerf_CT_Hex	1108:3:35925:35952	5593640	0	True				
ANR	5593770	AssignmentExpression	ctval . type = WinPerf_CT_Hex		5593640	0		=			
ANR	5593771	MemberAccess	ctval . type		5593640	0					
ANR	5593772	Identifier	ctval		5593640	0					
ANR	5593773	Identifier	type		5593640	1					
ANR	5593774	Identifier	WinPerf_CT_Hex		5593640	1					
ANR	5593775	IfStatement	if ( ! ( type & PERF_SIZE_LARGE ) )		5593640	1					
ANR	5593776	Condition	! ( type & PERF_SIZE_LARGE )	1109:8:35962:35987	5593640	0	True				
ANR	5593777	UnaryOperationExpression	! ( type & PERF_SIZE_LARGE )		5593640	0					
ANR	5593778	UnaryOperator	!		5593640	0					
ANR	5593779	BitAndExpression	type & PERF_SIZE_LARGE		5593640	1		&			
ANR	5593780	Identifier	type		5593640	0					
ANR	5593781	Identifier	PERF_SIZE_LARGE		5593640	1					
ANR	5593782	ExpressionStatement	ctval . type = ctval . type | WinPerf_CT_Short	1110:4:35994:36036	5593640	1	True				
ANR	5593783	AssignmentExpression	ctval . type = ctval . type | WinPerf_CT_Short		5593640	0		=			
ANR	5593784	MemberAccess	ctval . type		5593640	0					
ANR	5593785	Identifier	ctval		5593640	0					
ANR	5593786	Identifier	type		5593640	1					
ANR	5593787	InclusiveOrExpression	ctval . type | WinPerf_CT_Short		5593640	1		|			
ANR	5593788	MemberAccess	ctval . type		5593640	0					
ANR	5593789	Identifier	ctval		5593640	0					
ANR	5593790	Identifier	type		5593640	1					
ANR	5593791	Identifier	WinPerf_CT_Short		5593640	1					
ANR	5593792	ReturnStatement	return true ;	1112:2:36044:36055	5593640	2	True				
ANR	5593793	Identifier	true		5593640	0					
ANR	5593794	IfStatement	if ( ( type & PERF_TYPE_ZERO ) != PERF_TYPE_COUNTER )		5593640	7					
ANR	5593795	Condition	( type & PERF_TYPE_ZERO ) != PERF_TYPE_COUNTER	1118:5:36178:36221	5593640	0	True				
ANR	5593796	EqualityExpression	( type & PERF_TYPE_ZERO ) != PERF_TYPE_COUNTER		5593640	0		!=			
ANR	5593797	BitAndExpression	type & PERF_TYPE_ZERO		5593640	0		&			
ANR	5593798	Identifier	type		5593640	0					
ANR	5593799	Identifier	PERF_TYPE_ZERO		5593640	1					
ANR	5593800	Identifier	PERF_TYPE_COUNTER		5593640	1					
ANR	5593801	ReturnStatement	return false ;	1119:2:36226:36238	5593640	1	True				
ANR	5593802	Identifier	false		5593640	0					
ANR	5593803	IfStatement	if ( ( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_VALUE )		5593640	8					
ANR	5593804	Condition	( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_VALUE	1124:8:36329:36381	5593640	0	True				
ANR	5593805	EqualityExpression	( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_VALUE		5593640	0		==			
ANR	5593806	BitAndExpression	type & PERF_COUNTER_PRECISION		5593640	0		&			
ANR	5593807	Identifier	type		5593640	0					
ANR	5593808	Identifier	PERF_COUNTER_PRECISION		5593640	1					
ANR	5593809	Identifier	PERF_COUNTER_VALUE		5593640	1					
ANR	5593810	CompoundStatement		47:1:1236:1236	5593640	1					
ANR	5593811	ExpressionStatement	ctval . type = WinPerf_CT_Unsigned	1126:2:36416:36448	5593640	0	True				
ANR	5593812	AssignmentExpression	ctval . type = WinPerf_CT_Unsigned		5593640	0		=			
ANR	5593813	MemberAccess	ctval . type		5593640	0					
ANR	5593814	Identifier	ctval		5593640	0					
ANR	5593815	Identifier	type		5593640	1					
ANR	5593816	Identifier	WinPerf_CT_Unsigned		5593640	1					
ANR	5593817	IfStatement	if ( ! ( type & PERF_SIZE_LARGE ) )		5593640	1					
ANR	5593818	Condition	! ( type & PERF_SIZE_LARGE )	1127:7:36457:36482	5593640	0	True				
ANR	5593819	UnaryOperationExpression	! ( type & PERF_SIZE_LARGE )		5593640	0					
ANR	5593820	UnaryOperator	!		5593640	0					
ANR	5593821	BitAndExpression	type & PERF_SIZE_LARGE		5593640	1		&			
ANR	5593822	Identifier	type		5593640	0					
ANR	5593823	Identifier	PERF_SIZE_LARGE		5593640	1					
ANR	5593824	ExpressionStatement	ctval . type |= WinPerf_CT_Short	1128:3:36488:36518	5593640	1	True				
ANR	5593825	AssignmentExpression	ctval . type |= WinPerf_CT_Short		5593640	0		|=			
ANR	5593826	MemberAccess	ctval . type		5593640	0					
ANR	5593827	Identifier	ctval		5593640	0					
ANR	5593828	Identifier	type		5593640	1					
ANR	5593829	Identifier	WinPerf_CT_Short		5593640	1					
ANR	5593830	ElseStatement	else		5593640	0					
ANR	5593831	IfStatement	if ( ( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_RATE )		5593640	0					
ANR	5593832	Condition	( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_RATE	1130:10:36533:36584	5593640	0	True				
ANR	5593833	EqualityExpression	( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_RATE		5593640	0		==			
ANR	5593834	BitAndExpression	type & PERF_COUNTER_PRECISION		5593640	0		&			
ANR	5593835	Identifier	type		5593640	0					
ANR	5593836	Identifier	PERF_COUNTER_PRECISION		5593640	1					
ANR	5593837	Identifier	PERF_COUNTER_RATE		5593640	1					
ANR	5593838	CompoundStatement		94:2:2691:2709	5593640	1					
ANR	5593839	IdentifierDeclStatement	LONGLONG val = ctval . value . ul ;	1132:2:36619:36648	5593640	0	True				
ANR	5593840	IdentifierDecl	val = ctval . value . ul		5593640	0					
ANR	5593841	IdentifierDeclType	LONGLONG		5593640	0					
ANR	5593842	Identifier	val		5593640	1					
ANR	5593843	AssignmentExpression	val = ctval . value . ul		5593640	2		=			
ANR	5593844	Identifier	val		5593640	0					
ANR	5593845	MemberAccess	ctval . value . ul		5593640	1					
ANR	5593846	MemberAccess	ctval . value		5593640	0					
ANR	5593847	Identifier	ctval		5593640	0					
ANR	5593848	Identifier	value		5593640	1					
ANR	5593849	Identifier	ul		5593640	1					
ANR	5593850	ExpressionStatement	ctval . type = WinPerf_CT_Double	1133:2:36652:36682	5593640	1	True				
ANR	5593851	AssignmentExpression	ctval . type = WinPerf_CT_Double		5593640	0		=			
ANR	5593852	MemberAccess	ctval . type		5593640	0					
ANR	5593853	Identifier	ctval		5593640	0					
ANR	5593854	Identifier	type		5593640	1					
ANR	5593855	Identifier	WinPerf_CT_Double		5593640	1					
ANR	5593856	ExpressionStatement	ctval . value . d = 0.0	1134:2:36686:36705	5593640	2	True				
ANR	5593857	AssignmentExpression	ctval . value . d = 0.0		5593640	0		=			
ANR	5593858	MemberAccess	ctval . value . d		5593640	0					
ANR	5593859	MemberAccess	ctval . value		5593640	0					
ANR	5593860	Identifier	ctval		5593640	0					
ANR	5593861	Identifier	value		5593640	1					
ANR	5593862	Identifier	d		5593640	1					
ANR	5593863	PrimaryExpression	0.0		5593640	1					
ANR	5593864	IdentifierDeclStatement	LONGLONG freq = 1 ;	1144:2:37159:37176	5593640	3	True				
ANR	5593865	IdentifierDecl	freq = 1		5593640	0					
ANR	5593866	IdentifierDeclType	LONGLONG		5593640	0					
ANR	5593867	Identifier	freq		5593640	1					
ANR	5593868	AssignmentExpression	freq = 1		5593640	2		=			
ANR	5593869	Identifier	freq		5593640	0					
ANR	5593870	PrimaryExpression	1		5593640	1					
ANR	5593871	IfStatement	if ( ( type & PERF_DISPLAY_SECONDS ) <= PERF_DISPLAY_PER_SEC )		5593640	4					
ANR	5593872	Condition	( type & PERF_DISPLAY_SECONDS ) <= PERF_DISPLAY_PER_SEC	1145:6:37184:37236	5593640	0	True				
ANR	5593873	RelationalExpression	( type & PERF_DISPLAY_SECONDS ) <= PERF_DISPLAY_PER_SEC		5593640	0		<=			
ANR	5593874	BitAndExpression	type & PERF_DISPLAY_SECONDS		5593640	0		&			
ANR	5593875	Identifier	type		5593640	0					
ANR	5593876	Identifier	PERF_DISPLAY_SECONDS		5593640	1					
ANR	5593877	Identifier	PERF_DISPLAY_PER_SEC		5593640	1					
ANR	5593878	ExpressionStatement	freq = time . headfreq	1146:3:37265:37285	5593640	1	True				
ANR	5593879	AssignmentExpression	freq = time . headfreq		5593640	0		=			
ANR	5593880	Identifier	freq		5593640	0					
ANR	5593881	MemberAccess	time . headfreq		5593640	1					
ANR	5593882	Identifier	time		5593640	0					
ANR	5593883	Identifier	headfreq		5593640	1					
ANR	5593884	IdentifierDeclStatement	LONG pct = 1 ;	1150:2:37388:37401	5593640	5	True				
ANR	5593885	IdentifierDecl	pct = 1		5593640	0					
ANR	5593886	IdentifierDeclType	LONG		5593640	0					
ANR	5593887	Identifier	pct		5593640	1					
ANR	5593888	AssignmentExpression	pct = 1		5593640	2		=			
ANR	5593889	Identifier	pct		5593640	0					
ANR	5593890	PrimaryExpression	1		5593640	1					
ANR	5593891	IfStatement	if ( ( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_PERCENT )		5593640	6					
ANR	5593892	Condition	( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_PERCENT	1151:6:37409:37461	5593640	0	True				
ANR	5593893	EqualityExpression	( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_PERCENT		5593640	0		==			
ANR	5593894	BitAndExpression	type & PERF_DISPLAY_SECONDS		5593640	0		&			
ANR	5593895	Identifier	type		5593640	0					
ANR	5593896	Identifier	PERF_DISPLAY_SECONDS		5593640	1					
ANR	5593897	Identifier	PERF_DISPLAY_PERCENT		5593640	1					
ANR	5593898	ExpressionStatement	pct = 100	1152:3:37467:37476	5593640	1	True				
ANR	5593899	AssignmentExpression	pct = 100		5593640	0		=			
ANR	5593900	Identifier	pct		5593640	0					
ANR	5593901	PrimaryExpression	100		5593640	1					
ANR	5593902	IdentifierDeclStatement	double scale = 1.0 ;	1156:2:37531:37551	5593640	7	True				
ANR	5593903	IdentifierDecl	scale = 1.0		5593640	0					
ANR	5593904	IdentifierDeclType	double		5593640	0					
ANR	5593905	Identifier	scale		5593640	1					
ANR	5593906	AssignmentExpression	scale = 1.0		5593640	2		=			
ANR	5593907	Identifier	scale		5593640	0					
ANR	5593908	PrimaryExpression	1.0		5593640	1					
ANR	5593909	IfStatement	if ( type & PERF_TIMER_100NS )		5593640	8					
ANR	5593910	Condition	type & PERF_TIMER_100NS	1157:6:37559:37581	5593640	0	True				
ANR	5593911	BitAndExpression	type & PERF_TIMER_100NS		5593640	0		&			
ANR	5593912	Identifier	type		5593640	0					
ANR	5593913	Identifier	PERF_TIMER_100NS		5593640	1					
ANR	5593914	CompoundStatement		80:2:2411:2411	5593640	1					
ANR	5593915	IfStatement	if ( time . nanos )		5593640	0					
ANR	5593916	Condition	time . nanos	1159:7:37596:37605	5593640	0	True				
ANR	5593917	MemberAccess	time . nanos		5593640	0					
ANR	5593918	Identifier	time		5593640	0					
ANR	5593919	Identifier	nanos		5593640	1					
ANR	5593920	ExpressionStatement	scale = ( double ) freq * pct / time . nanos	1159:19:37608:37643	5593640	1	True				
ANR	5593921	AssignmentExpression	scale = ( double ) freq * pct / time . nanos		5593640	0		=			
ANR	5593922	Identifier	scale		5593640	0					
ANR	5593923	MultiplicativeExpression	( double ) freq * pct / time . nanos		5593640	1		*			
ANR	5593924	CastExpression	( double ) freq		5593640	0					
ANR	5593925	CastTarget	double		5593640	0					
ANR	5593926	Identifier	freq		5593640	1					
ANR	5593927	MultiplicativeExpression	pct / time . nanos		5593640	1		/			
ANR	5593928	Identifier	pct		5593640	0					
ANR	5593929	MemberAccess	time . nanos		5593640	1					
ANR	5593930	Identifier	time		5593640	0					
ANR	5593931	Identifier	nanos		5593640	1					
ANR	5593932	ElseStatement	else		5593640	0					
ANR	5593933	IfStatement	if ( type & PERF_OBJECT_TIMER )		5593640	0					
ANR	5593934	Condition	type & PERF_OBJECT_TIMER	1161:11:37660:37683	5593640	0	True				
ANR	5593935	BitAndExpression	type & PERF_OBJECT_TIMER		5593640	0		&			
ANR	5593936	Identifier	type		5593640	0					
ANR	5593937	Identifier	PERF_OBJECT_TIMER		5593640	1					
ANR	5593938	CompoundStatement		84:2:2513:2513	5593640	1					
ANR	5593939	IfStatement	if ( time . obj )		5593640	0					
ANR	5593940	Condition	time . obj	1163:7:37698:37705	5593640	0	True				
ANR	5593941	MemberAccess	time . obj		5593640	0					
ANR	5593942	Identifier	time		5593640	0					
ANR	5593943	Identifier	obj		5593640	1					
ANR	5593944	ExpressionStatement	scale = ( double ) freq * pct / time . obj	1163:17:37708:37741	5593640	1	True				
ANR	5593945	AssignmentExpression	scale = ( double ) freq * pct / time . obj		5593640	0		=			
ANR	5593946	Identifier	scale		5593640	0					
ANR	5593947	MultiplicativeExpression	( double ) freq * pct / time . obj		5593640	1		*			
ANR	5593948	CastExpression	( double ) freq		5593640	0					
ANR	5593949	CastTarget	double		5593640	0					
ANR	5593950	Identifier	freq		5593640	1					
ANR	5593951	MultiplicativeExpression	pct / time . obj		5593640	1		/			
ANR	5593952	Identifier	pct		5593640	0					
ANR	5593953	MemberAccess	time . obj		5593640	1					
ANR	5593954	Identifier	time		5593640	0					
ANR	5593955	Identifier	obj		5593640	1					
ANR	5593956	ElseStatement	else		5593640	0					
ANR	5593957	CompoundStatement		88:2:2580:2580	5593640	0					
ANR	5593958	IfStatement	if ( time . head )		5593640	0					
ANR	5593959	Condition	time . head	1167:7:37765:37773	5593640	0	True				
ANR	5593960	MemberAccess	time . head		5593640	0					
ANR	5593961	Identifier	time		5593640	0					
ANR	5593962	Identifier	head		5593640	1					
ANR	5593963	ExpressionStatement	scale = ( double ) freq * pct / time . head	1167:18:37776:37810	5593640	1	True				
ANR	5593964	AssignmentExpression	scale = ( double ) freq * pct / time . head		5593640	0		=			
ANR	5593965	Identifier	scale		5593640	0					
ANR	5593966	MultiplicativeExpression	( double ) freq * pct / time . head		5593640	1		*			
ANR	5593967	CastExpression	( double ) freq		5593640	0					
ANR	5593968	CastTarget	double		5593640	0					
ANR	5593969	Identifier	freq		5593640	1					
ANR	5593970	MultiplicativeExpression	pct / time . head		5593640	1		/			
ANR	5593971	Identifier	pct		5593640	0					
ANR	5593972	MemberAccess	time . head		5593640	1					
ANR	5593973	Identifier	time		5593640	0					
ANR	5593974	Identifier	head		5593640	1					
ANR	5593975	IdentifierDeclStatement	double value = 0.0 ;	1172:2:37867:37885	5593640	9	True				
ANR	5593976	IdentifierDecl	value = 0.0		5593640	0					
ANR	5593977	IdentifierDeclType	double		5593640	0					
ANR	5593978	Identifier	value		5593640	1					
ANR	5593979	AssignmentExpression	value = 0.0		5593640	2		=			
ANR	5593980	Identifier	value		5593640	0					
ANR	5593981	PrimaryExpression	0.0		5593640	1					
ANR	5593982	IfStatement	if ( type & PERF_MULTI_COUNTER )		5593640	10					
ANR	5593983	Condition	type & PERF_MULTI_COUNTER	1173:6:37893:37917	5593640	0	True				
ANR	5593984	BitAndExpression	type & PERF_MULTI_COUNTER		5593640	0		&			
ANR	5593985	Identifier	type		5593640	0					
ANR	5593986	Identifier	PERF_MULTI_COUNTER		5593640	1					
ANR	5593987	CompoundStatement		97:3:2751:2810	5593640	1					
ANR	5593988	IdentifierDeclStatement	DWORD multi = ( ( DWORD * ) ( curr + pCounter -> CounterOffset ) ) [ 2 ] ;	1175:3:37927:37986	5593640	0	True				
ANR	5593989	IdentifierDecl	multi = ( ( DWORD * ) ( curr + pCounter -> CounterOffset ) ) [ 2 ]		5593640	0					
ANR	5593990	IdentifierDeclType	DWORD		5593640	0					
ANR	5593991	Identifier	multi		5593640	1					
ANR	5593992	AssignmentExpression	multi = ( ( DWORD * ) ( curr + pCounter -> CounterOffset ) ) [ 2 ]		5593640	2		=			
ANR	5593993	Identifier	multi		5593640	0					
ANR	5593994	ArrayIndexing	( ( DWORD * ) ( curr + pCounter -> CounterOffset ) ) [ 2 ]		5593640	1					
ANR	5593995	CastExpression	( DWORD * ) ( curr + pCounter -> CounterOffset )		5593640	0					
ANR	5593996	CastTarget	DWORD *		5593640	0					
ANR	5593997	AdditiveExpression	curr + pCounter -> CounterOffset		5593640	1		+			
ANR	5593998	Identifier	curr		5593640	0					
ANR	5593999	PtrMemberAccess	pCounter -> CounterOffset		5593640	1					
ANR	5594000	Identifier	pCounter		5593640	0					
ANR	5594001	Identifier	CounterOffset		5593640	1					
ANR	5594002	PrimaryExpression	2		5593640	1					
ANR	5594003	IfStatement	if ( type & PERF_INVERSE_COUNTER )		5593640	1					
ANR	5594004	Condition	type & PERF_INVERSE_COUNTER	1176:7:37995:38021	5593640	0	True				
ANR	5594005	BitAndExpression	type & PERF_INVERSE_COUNTER		5593640	0		&			
ANR	5594006	Identifier	type		5593640	0					
ANR	5594007	Identifier	PERF_INVERSE_COUNTER		5593640	1					
ANR	5594008	ExpressionStatement	ctval . value . d = ( double ) multi * pct - val * scale	1177:4:38028:38077	5593640	1	True				
ANR	5594009	AssignmentExpression	ctval . value . d = ( double ) multi * pct - val * scale		5593640	0		=			
ANR	5594010	MemberAccess	ctval . value . d		5593640	0					
ANR	5594011	MemberAccess	ctval . value		5593640	0					
ANR	5594012	Identifier	ctval		5593640	0					
ANR	5594013	Identifier	value		5593640	1					
ANR	5594014	Identifier	d		5593640	1					
ANR	5594015	AdditiveExpression	( double ) multi * pct - val * scale		5593640	1		-			
ANR	5594016	MultiplicativeExpression	( double ) multi * pct		5593640	0		*			
ANR	5594017	CastExpression	( double ) multi		5593640	0					
ANR	5594018	CastTarget	double		5593640	0					
ANR	5594019	Identifier	multi		5593640	1					
ANR	5594020	Identifier	pct		5593640	1					
ANR	5594021	MultiplicativeExpression	val * scale		5593640	1		*			
ANR	5594022	Identifier	val		5593640	0					
ANR	5594023	Identifier	scale		5593640	1					
ANR	5594024	ElseStatement	else		5593640	0					
ANR	5594025	IfStatement	if ( multi )		5593640	0					
ANR	5594026	Condition	multi	1178:12:38091:38095	5593640	0	True				
ANR	5594027	Identifier	multi		5593640	0					
ANR	5594028	ExpressionStatement	ctval . value . d = ( val * scale ) / multi	1179:4:38102:38139	5593640	1	True				
ANR	5594029	AssignmentExpression	ctval . value . d = ( val * scale ) / multi		5593640	0		=			
ANR	5594030	MemberAccess	ctval . value . d		5593640	0					
ANR	5594031	MemberAccess	ctval . value		5593640	0					
ANR	5594032	Identifier	ctval		5593640	0					
ANR	5594033	Identifier	value		5593640	1					
ANR	5594034	Identifier	d		5593640	1					
ANR	5594035	MultiplicativeExpression	( val * scale ) / multi		5593640	1		/			
ANR	5594036	MultiplicativeExpression	val * scale		5593640	0		*			
ANR	5594037	Identifier	val		5593640	0					
ANR	5594038	Identifier	scale		5593640	1					
ANR	5594039	Identifier	multi		5593640	1					
ANR	5594040	ElseStatement	else		5593640	0					
ANR	5594041	IfStatement	if ( type & PERF_INVERSE_COUNTER )		5593640	0					
ANR	5594042	Condition	type & PERF_INVERSE_COUNTER	1181:11:38156:38182	5593640	0	True				
ANR	5594043	BitAndExpression	type & PERF_INVERSE_COUNTER		5593640	0		&			
ANR	5594044	Identifier	type		5593640	0					
ANR	5594045	Identifier	PERF_INVERSE_COUNTER		5593640	1					
ANR	5594046	CompoundStatement		104:2:3011:3011	5593640	1					
ANR	5594047	ExpressionStatement	ctval . value . d = pct - ( val * scale )	1183:3:38192:38227	5593640	0	True				
ANR	5594048	AssignmentExpression	ctval . value . d = pct - ( val * scale )		5593640	0		=			
ANR	5594049	MemberAccess	ctval . value . d		5593640	0					
ANR	5594050	MemberAccess	ctval . value		5593640	0					
ANR	5594051	Identifier	ctval		5593640	0					
ANR	5594052	Identifier	value		5593640	1					
ANR	5594053	Identifier	d		5593640	1					
ANR	5594054	AdditiveExpression	pct - ( val * scale )		5593640	1		-			
ANR	5594055	Identifier	pct		5593640	0					
ANR	5594056	MultiplicativeExpression	val * scale		5593640	1		*			
ANR	5594057	Identifier	val		5593640	0					
ANR	5594058	Identifier	scale		5593640	1					
ANR	5594059	ElseStatement	else		5593640	0					
ANR	5594060	CompoundStatement		108:2:3066:3066	5593640	0					
ANR	5594061	ExpressionStatement	ctval . value . d = val * scale	1187:3:38247:38274	5593640	0	True				
ANR	5594062	AssignmentExpression	ctval . value . d = val * scale		5593640	0		=			
ANR	5594063	MemberAccess	ctval . value . d		5593640	0					
ANR	5594064	MemberAccess	ctval . value		5593640	0					
ANR	5594065	Identifier	ctval		5593640	0					
ANR	5594066	Identifier	value		5593640	1					
ANR	5594067	Identifier	d		5593640	1					
ANR	5594068	MultiplicativeExpression	val * scale		5593640	1		*			
ANR	5594069	Identifier	val		5593640	0					
ANR	5594070	Identifier	scale		5593640	1					
ANR	5594071	ElseStatement	else		5593640	0					
ANR	5594072	IfStatement	if ( ( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_ELAPSED )		5593640	0					
ANR	5594073	Condition	( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_ELAPSED	1190:10:38293:38347	5593640	0	True				
ANR	5594074	EqualityExpression	( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_ELAPSED		5593640	0		==			
ANR	5594075	BitAndExpression	type & PERF_COUNTER_PRECISION		5593640	0		&			
ANR	5594076	Identifier	type		5593640	0					
ANR	5594077	Identifier	PERF_COUNTER_PRECISION		5593640	1					
ANR	5594078	Identifier	PERF_COUNTER_ELAPSED		5593640	1					
ANR	5594079	CompoundStatement		113:1:3209:3209	5593640	1					
ANR	5594080	ExpressionStatement	ctval . value . d = ( double ) ( time . objabs - ctval . value . ul )	1192:2:38389:38443	5593640	0	True				
ANR	5594081	AssignmentExpression	ctval . value . d = ( double ) ( time . objabs - ctval . value . ul )		5593640	0		=			
ANR	5594082	MemberAccess	ctval . value . d		5593640	0					
ANR	5594083	MemberAccess	ctval . value		5593640	0					
ANR	5594084	Identifier	ctval		5593640	0					
ANR	5594085	Identifier	value		5593640	1					
ANR	5594086	Identifier	d		5593640	1					
ANR	5594087	CastExpression	( double ) ( time . objabs - ctval . value . ul )		5593640	1					
ANR	5594088	CastTarget	double		5593640	0					
ANR	5594089	AdditiveExpression	time . objabs - ctval . value . ul		5593640	1		-			
ANR	5594090	MemberAccess	time . objabs		5593640	0					
ANR	5594091	Identifier	time		5593640	0					
ANR	5594092	Identifier	objabs		5593640	1					
ANR	5594093	MemberAccess	ctval . value . ul		5593640	1					
ANR	5594094	MemberAccess	ctval . value		5593640	0					
ANR	5594095	Identifier	ctval		5593640	0					
ANR	5594096	Identifier	value		5593640	1					
ANR	5594097	Identifier	ul		5593640	1					
ANR	5594098	IfStatement	if ( time . objfreq )		5593640	1					
ANR	5594099	Condition	time . objfreq	1193:6:38451:38462	5593640	0	True				
ANR	5594100	MemberAccess	time . objfreq		5593640	0					
ANR	5594101	Identifier	time		5593640	0					
ANR	5594102	Identifier	objfreq		5593640	1					
ANR	5594103	ExpressionStatement	ctval . value . d /= time . objfreq	1194:3:38468:38497	5593640	1	True				
ANR	5594104	AssignmentExpression	ctval . value . d /= time . objfreq		5593640	0		/=			
ANR	5594105	MemberAccess	ctval . value . d		5593640	0					
ANR	5594106	MemberAccess	ctval . value		5593640	0					
ANR	5594107	Identifier	ctval		5593640	0					
ANR	5594108	Identifier	value		5593640	1					
ANR	5594109	Identifier	d		5593640	1					
ANR	5594110	MemberAccess	time . objfreq		5593640	1					
ANR	5594111	Identifier	time		5593640	0					
ANR	5594112	Identifier	objfreq		5593640	1					
ANR	5594113	ExpressionStatement	ctval . type = WinPerf_CT_Double	1195:2:38501:38531	5593640	2	True				
ANR	5594114	AssignmentExpression	ctval . type = WinPerf_CT_Double		5593640	0		=			
ANR	5594115	MemberAccess	ctval . type		5593640	0					
ANR	5594116	Identifier	ctval		5593640	0					
ANR	5594117	Identifier	type		5593640	1					
ANR	5594118	Identifier	WinPerf_CT_Double		5593640	1					
ANR	5594119	ElseStatement	else		5593640	0					
ANR	5594120	IfStatement	if ( ( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_FRACTION )		5593640	0					
ANR	5594121	Condition	( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_FRACTION	1197:10:38546:38601	5593640	0	True				
ANR	5594122	EqualityExpression	( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_FRACTION		5593640	0		==			
ANR	5594123	BitAndExpression	type & PERF_COUNTER_PRECISION		5593640	0		&			
ANR	5594124	Identifier	type		5593640	0					
ANR	5594125	Identifier	PERF_COUNTER_PRECISION		5593640	1					
ANR	5594126	Identifier	PERF_COUNTER_FRACTION		5593640	1					
ANR	5594127	CompoundStatement		129:2:3707:3725	5593640	1					
ANR	5594128	IdentifierDeclStatement	ULONGLONG val = ctval . value . ul ;	1199:2:38609:38639	5593640	0	True				
ANR	5594129	IdentifierDecl	val = ctval . value . ul		5593640	0					
ANR	5594130	IdentifierDeclType	ULONGLONG		5593640	0					
ANR	5594131	Identifier	val		5593640	1					
ANR	5594132	AssignmentExpression	val = ctval . value . ul		5593640	2		=			
ANR	5594133	Identifier	val		5593640	0					
ANR	5594134	MemberAccess	ctval . value . ul		5593640	1					
ANR	5594135	MemberAccess	ctval . value		5593640	0					
ANR	5594136	Identifier	ctval		5593640	0					
ANR	5594137	Identifier	value		5593640	1					
ANR	5594138	Identifier	ul		5593640	1					
ANR	5594139	IdentifierDeclStatement	LONG pct = 1 ;	1202:2:38741:38754	5593640	1	True				
ANR	5594140	IdentifierDecl	pct = 1		5593640	0					
ANR	5594141	IdentifierDeclType	LONG		5593640	0					
ANR	5594142	Identifier	pct		5593640	1					
ANR	5594143	AssignmentExpression	pct = 1		5593640	2		=			
ANR	5594144	Identifier	pct		5593640	0					
ANR	5594145	PrimaryExpression	1		5593640	1					
ANR	5594146	IfStatement	if ( ( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_PERCENT )		5593640	2					
ANR	5594147	Condition	( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_PERCENT	1203:6:38762:38814	5593640	0	True				
ANR	5594148	EqualityExpression	( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_PERCENT		5593640	0		==			
ANR	5594149	BitAndExpression	type & PERF_DISPLAY_SECONDS		5593640	0		&			
ANR	5594150	Identifier	type		5593640	0					
ANR	5594151	Identifier	PERF_DISPLAY_SECONDS		5593640	1					
ANR	5594152	Identifier	PERF_DISPLAY_PERCENT		5593640	1					
ANR	5594153	ExpressionStatement	pct = 100	1204:3:38820:38829	5593640	1	True				
ANR	5594154	AssignmentExpression	pct = 100		5593640	0		=			
ANR	5594155	Identifier	pct		5593640	0					
ANR	5594156	PrimaryExpression	100		5593640	1					
ANR	5594157	IdentifierDeclStatement	const WinPerf_CounterDef * pBase = pCounter + 1 ;	1206:2:38834:38879	5593640	3	True				
ANR	5594158	IdentifierDecl	* pBase = pCounter + 1		5593640	0					
ANR	5594159	IdentifierDeclType	const WinPerf_CounterDef *		5593640	0					
ANR	5594160	Identifier	pBase		5593640	1					
ANR	5594161	AssignmentExpression	* pBase = pCounter + 1		5593640	2		=			
ANR	5594162	Identifier	pBase		5593640	0					
ANR	5594163	AdditiveExpression	pCounter + 1		5593640	1		+			
ANR	5594164	Identifier	pCounter		5593640	0					
ANR	5594165	PrimaryExpression	1		5593640	1					
ANR	5594166	IdentifierDeclStatement	double scale = 1.0 ;	1207:2:38883:38901	5593640	4	True				
ANR	5594167	IdentifierDecl	scale = 1.0		5593640	0					
ANR	5594168	IdentifierDeclType	double		5593640	0					
ANR	5594169	Identifier	scale		5593640	1					
ANR	5594170	AssignmentExpression	scale = 1.0		5593640	2		=			
ANR	5594171	Identifier	scale		5593640	0					
ANR	5594172	PrimaryExpression	1.0		5593640	1					
ANR	5594173	IfStatement	if ( ( pBase -> CounterType & PERF_COUNTER_PRECISION ) == PERF_COUNTER_BASE )		5593640	5					
ANR	5594174	Condition	( pBase -> CounterType & PERF_COUNTER_PRECISION ) == PERF_COUNTER_BASE	1208:6:38909:38974	5593640	0	True				
ANR	5594175	EqualityExpression	( pBase -> CounterType & PERF_COUNTER_PRECISION ) == PERF_COUNTER_BASE		5593640	0		==			
ANR	5594176	BitAndExpression	pBase -> CounterType & PERF_COUNTER_PRECISION		5593640	0		&			
ANR	5594177	PtrMemberAccess	pBase -> CounterType		5593640	0					
ANR	5594178	Identifier	pBase		5593640	0					
ANR	5594179	Identifier	CounterType		5593640	1					
ANR	5594180	Identifier	PERF_COUNTER_PRECISION		5593640	1					
ANR	5594181	Identifier	PERF_COUNTER_BASE		5593640	1					
ANR	5594182	CompoundStatement		132:3:3808:3849	5593640	1					
ANR	5594183	IdentifierDeclStatement	"ULONGLONG base = GetRawValue ( pBase , curr ) ;"	1210:3:38984:39025	5593640	0	True				
ANR	5594184	IdentifierDecl	"base = GetRawValue ( pBase , curr )"		5593640	0					
ANR	5594185	IdentifierDeclType	ULONGLONG		5593640	0					
ANR	5594186	Identifier	base		5593640	1					
ANR	5594187	AssignmentExpression	"base = GetRawValue ( pBase , curr )"		5593640	2		=			
ANR	5594188	Identifier	base		5593640	0					
ANR	5594189	CallExpression	"GetRawValue ( pBase , curr )"		5593640	1					
ANR	5594190	Callee	GetRawValue		5593640	0					
ANR	5594191	Identifier	GetRawValue		5593640	0					
ANR	5594192	ArgumentList	pBase		5593640	1					
ANR	5594193	Argument	pBase		5593640	0					
ANR	5594194	Identifier	pBase		5593640	0					
ANR	5594195	Argument	curr		5593640	1					
ANR	5594196	Identifier	curr		5593640	0					
ANR	5594197	IfStatement	if ( type & PERF_DELTA_COUNTER )		5593640	1					
ANR	5594198	Condition	type & PERF_DELTA_COUNTER	1211:7:39034:39058	5593640	0	True				
ANR	5594199	BitAndExpression	type & PERF_DELTA_COUNTER		5593640	0		&			
ANR	5594200	Identifier	type		5593640	0					
ANR	5594201	Identifier	PERF_DELTA_COUNTER		5593640	1					
ANR	5594202	CompoundStatement		135:4:3894:3938	5593640	1					
ANR	5594203	IdentifierDeclStatement	"ULONGLONG baseOld = GetRawValue ( pBase , prev ) ;"	1213:4:39070:39114	5593640	0	True				
ANR	5594204	IdentifierDecl	"baseOld = GetRawValue ( pBase , prev )"		5593640	0					
ANR	5594205	IdentifierDeclType	ULONGLONG		5593640	0					
ANR	5594206	Identifier	baseOld		5593640	1					
ANR	5594207	AssignmentExpression	"baseOld = GetRawValue ( pBase , prev )"		5593640	2		=			
ANR	5594208	Identifier	baseOld		5593640	0					
ANR	5594209	CallExpression	"GetRawValue ( pBase , prev )"		5593640	1					
ANR	5594210	Callee	GetRawValue		5593640	0					
ANR	5594211	Identifier	GetRawValue		5593640	0					
ANR	5594212	ArgumentList	pBase		5593640	1					
ANR	5594213	Argument	pBase		5593640	0					
ANR	5594214	Identifier	pBase		5593640	0					
ANR	5594215	Argument	prev		5593640	1					
ANR	5594216	Identifier	prev		5593640	0					
ANR	5594217	ExpressionStatement	base -= baseOld	1214:4:39120:39135	5593640	1	True				
ANR	5594218	AssignmentExpression	base -= baseOld		5593640	0		-=			
ANR	5594219	Identifier	base		5593640	0					
ANR	5594220	Identifier	baseOld		5593640	1					
ANR	5594221	IfStatement	if ( base )		5593640	2					
ANR	5594222	Condition	base	1216:7:39149:39152	5593640	0	True				
ANR	5594223	Identifier	base		5593640	0					
ANR	5594224	ExpressionStatement	scale = pct / base	1217:4:39159:39175	5593640	1	True				
ANR	5594225	AssignmentExpression	scale = pct / base		5593640	0		=			
ANR	5594226	Identifier	scale		5593640	0					
ANR	5594227	MultiplicativeExpression	pct / base		5593640	1		/			
ANR	5594228	Identifier	pct		5593640	0					
ANR	5594229	Identifier	base		5593640	1					
ANR	5594230	IfStatement	if ( PERF_AVERAGE_TIMER == type )		5593640	6					
ANR	5594231	Condition	PERF_AVERAGE_TIMER == type	1223:6:39384:39409	5593640	0	True				
ANR	5594232	EqualityExpression	PERF_AVERAGE_TIMER == type		5593640	0		==			
ANR	5594233	Identifier	PERF_AVERAGE_TIMER		5593640	0					
ANR	5594234	Identifier	type		5593640	1					
ANR	5594235	CompoundStatement		146:2:4238:4238	5593640	1					
ANR	5594236	ExpressionStatement	ctval . type = WinPerf_CT_Double	1225:3:39419:39449	5593640	0	True				
ANR	5594237	AssignmentExpression	ctval . type = WinPerf_CT_Double		5593640	0		=			
ANR	5594238	MemberAccess	ctval . type		5593640	0					
ANR	5594239	Identifier	ctval		5593640	0					
ANR	5594240	Identifier	type		5593640	1					
ANR	5594241	Identifier	WinPerf_CT_Double		5593640	1					
ANR	5594242	ExpressionStatement	ctval . value . d = val / time . headfreq * scale	1226:3:39454:39497	5593640	1	True				
ANR	5594243	AssignmentExpression	ctval . value . d = val / time . headfreq * scale		5593640	0		=			
ANR	5594244	MemberAccess	ctval . value . d		5593640	0					
ANR	5594245	MemberAccess	ctval . value		5593640	0					
ANR	5594246	Identifier	ctval		5593640	0					
ANR	5594247	Identifier	value		5593640	1					
ANR	5594248	Identifier	d		5593640	1					
ANR	5594249	MultiplicativeExpression	val / time . headfreq * scale		5593640	1		/			
ANR	5594250	Identifier	val		5593640	0					
ANR	5594251	MultiplicativeExpression	time . headfreq * scale		5593640	1		*			
ANR	5594252	MemberAccess	time . headfreq		5593640	0					
ANR	5594253	Identifier	time		5593640	0					
ANR	5594254	Identifier	headfreq		5593640	1					
ANR	5594255	Identifier	scale		5593640	1					
ANR	5594256	ElseStatement	else		5593640	0					
ANR	5594257	CompoundStatement		151:2:4336:4336	5593640	0					
ANR	5594258	ExpressionStatement	ctval . type = WinPerf_CT_Double	1230:3:39517:39547	5593640	0	True				
ANR	5594259	AssignmentExpression	ctval . type = WinPerf_CT_Double		5593640	0		=			
ANR	5594260	MemberAccess	ctval . type		5593640	0					
ANR	5594261	Identifier	ctval		5593640	0					
ANR	5594262	Identifier	type		5593640	1					
ANR	5594263	Identifier	WinPerf_CT_Double		5593640	1					
ANR	5594264	ExpressionStatement	ctval . value . d = val * scale	1231:3:39552:39579	5593640	1	True				
ANR	5594265	AssignmentExpression	ctval . value . d = val * scale		5593640	0		=			
ANR	5594266	MemberAccess	ctval . value . d		5593640	0					
ANR	5594267	MemberAccess	ctval . value		5593640	0					
ANR	5594268	Identifier	ctval		5593640	0					
ANR	5594269	Identifier	value		5593640	1					
ANR	5594270	Identifier	d		5593640	1					
ANR	5594271	MultiplicativeExpression	val * scale		5593640	1		*			
ANR	5594272	Identifier	val		5593640	0					
ANR	5594273	Identifier	scale		5593640	1					
ANR	5594274	ElseStatement	else		5593640	0					
ANR	5594275	IfStatement	if ( ( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_QUEUELEN )		5593640	0					
ANR	5594276	Condition	( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_QUEUELEN	1234:10:39598:39653	5593640	0	True				
ANR	5594277	EqualityExpression	( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_QUEUELEN		5593640	0		==			
ANR	5594278	BitAndExpression	type & PERF_COUNTER_PRECISION		5593640	0		&			
ANR	5594279	Identifier	type		5593640	0					
ANR	5594280	Identifier	PERF_COUNTER_PRECISION		5593640	1					
ANR	5594281	Identifier	PERF_COUNTER_QUEUELEN		5593640	1					
ANR	5594282	CompoundStatement		157:1:4481:4481	5593640	1					
ANR	5594283	ExpressionStatement	"EXCEPT ( ""WinReg perf counter type QUEUELEN is unimplemented."" )"	1236:2:39661:39724	5593640	0	True				
ANR	5594284	CallExpression	"EXCEPT ( ""WinReg perf counter type QUEUELEN is unimplemented."" )"		5593640	0					
ANR	5594285	Callee	EXCEPT		5593640	0					
ANR	5594286	Identifier	EXCEPT		5593640	0					
ANR	5594287	ArgumentList	"""WinReg perf counter type QUEUELEN is unimplemented."""		5593640	1					
ANR	5594288	Argument	"""WinReg perf counter type QUEUELEN is unimplemented."""		5593640	0					
ANR	5594289	PrimaryExpression	"""WinReg perf counter type QUEUELEN is unimplemented."""		5593640	0					
ANR	5594290	IfStatement	if ( ctval . type != WinPerf_CT_Empty )		5593640	9					
ANR	5594291	Condition	ctval . type != WinPerf_CT_Empty	1239:5:39735:39764	5593640	0	True				
ANR	5594292	EqualityExpression	ctval . type != WinPerf_CT_Empty		5593640	0		!=			
ANR	5594293	MemberAccess	ctval . type		5593640	0					
ANR	5594294	Identifier	ctval		5593640	0					
ANR	5594295	Identifier	type		5593640	1					
ANR	5594296	Identifier	WinPerf_CT_Empty		5593640	1					
ANR	5594297	CompoundStatement		162:1:4592:4592	5593640	1					
ANR	5594298	SwitchStatement	switch ( type & PERF_DISPLAY_SECONDS )		5593640	0					
ANR	5594299	Condition	type & PERF_DISPLAY_SECONDS	1241:10:39780:39806	5593640	0	True				
ANR	5594300	BitAndExpression	type & PERF_DISPLAY_SECONDS		5593640	0		&			
ANR	5594301	Identifier	type		5593640	0					
ANR	5594302	Identifier	PERF_DISPLAY_SECONDS		5593640	1					
ANR	5594303	CompoundStatement		164:2:4635:4635	5593640	1					
ANR	5594304	Label	case PERF_DISPLAY_PERCENT :	1243:2:39815:39840	5593640	0	True				
ANR	5594305	Identifier	PERF_DISPLAY_PERCENT		5593640	0					
ANR	5594306	ExpressionStatement	ctval . type |= WinPerf_CT_Percent	1243:29:39842:39874	5593640	1	True				
ANR	5594307	AssignmentExpression	ctval . type |= WinPerf_CT_Percent		5593640	0		|=			
ANR	5594308	MemberAccess	ctval . type		5593640	0					
ANR	5594309	Identifier	ctval		5593640	0					
ANR	5594310	Identifier	type		5593640	1					
ANR	5594311	Identifier	WinPerf_CT_Percent		5593640	1					
ANR	5594312	BreakStatement	break ;	1243:63:39876:39881	5593640	2	True				
ANR	5594313	Label	case PERF_DISPLAY_PER_SEC :	1244:2:39885:39910	5593640	3	True				
ANR	5594314	Identifier	PERF_DISPLAY_PER_SEC		5593640	0					
ANR	5594315	ExpressionStatement	ctval . type |= WinPerf_CT_PerSecond	1244:29:39912:39946	5593640	4	True				
ANR	5594316	AssignmentExpression	ctval . type |= WinPerf_CT_PerSecond		5593640	0		|=			
ANR	5594317	MemberAccess	ctval . type		5593640	0					
ANR	5594318	Identifier	ctval		5593640	0					
ANR	5594319	Identifier	type		5593640	1					
ANR	5594320	Identifier	WinPerf_CT_PerSecond		5593640	1					
ANR	5594321	BreakStatement	break ;	1244:65:39948:39953	5593640	5	True				
ANR	5594322	Label	case PERF_DISPLAY_SECONDS :	1245:2:39957:39982	5593640	6	True				
ANR	5594323	Identifier	PERF_DISPLAY_SECONDS		5593640	0					
ANR	5594324	ExpressionStatement	ctval . type |= WinPerf_CT_Seconds	1245:29:39984:40016	5593640	7	True				
ANR	5594325	AssignmentExpression	ctval . type |= WinPerf_CT_Seconds		5593640	0		|=			
ANR	5594326	MemberAccess	ctval . type		5593640	0					
ANR	5594327	Identifier	ctval		5593640	0					
ANR	5594328	Identifier	type		5593640	1					
ANR	5594329	Identifier	WinPerf_CT_Seconds		5593640	1					
ANR	5594330	BreakStatement	break ;	1245:63:40018:40023	5593640	8	True				
ANR	5594331	ReturnStatement	return true ;	1249:1:40034:40045	5593640	10	True				
ANR	5594332	Identifier	true		5593640	0					
ANR	5594333	ReturnType	bool		5593640	1					
ANR	5594334	Identifier	WinPerf_Object :: GetValue		5593640	2					
ANR	5594335	ParameterList	"WinPerf_CounterValue & ctval , const WinPerf_CounterDef * pCounter , const WinPerf_TimerDeltas & time , const BYTE * curr , const BYTE * prev"		5593640	3					
ANR	5594336	Parameter	WinPerf_CounterValue & ctval	1074:1:35023:35050	5593640	0	True				
ANR	5594337	ParameterType	WinPerf_CounterValue &		5593640	0					
ANR	5594338	Identifier	ctval		5593640	1					
ANR	5594339	Parameter	const WinPerf_CounterDef * pCounter	1075:1:35054:35088	5593640	1	True				
ANR	5594340	ParameterType	const WinPerf_CounterDef *		5593640	0					
ANR	5594341	Identifier	pCounter		5593640	1					
ANR	5594342	Parameter	const WinPerf_TimerDeltas & time	1076:1:35093:35124	5593640	2	True				
ANR	5594343	ParameterType	const WinPerf_TimerDeltas &		5593640	0					
ANR	5594344	Identifier	time		5593640	1					
ANR	5594345	Parameter	const BYTE * curr	1077:1:35129:35145	5593640	3	True				
ANR	5594346	ParameterType	const BYTE *		5593640	0					
ANR	5594347	Identifier	curr		5593640	1					
ANR	5594348	Parameter	const BYTE * prev	1078:1:35150:35166	5593640	4	True				
ANR	5594349	ParameterType	const BYTE *		5593640	0					
ANR	5594350	Identifier	prev		5593640	1					
ANR	5594351	CFGEntryNode	ENTRY		5593640		True				
ANR	5594352	CFGExitNode	EXIT		5593640		True				
ANR	5594353	Symbol	PERF_COUNTER_RATE		5593640						
ANR	5594354	Symbol	prev		5593640						
ANR	5594355	Symbol	PERF_COUNTER_PRECISION		5593640						
ANR	5594356	Symbol	PERF_COUNTER_QUEUELEN		5593640						
ANR	5594357	Symbol	type		5593640						
ANR	5594358	Symbol	pCounter -> CounterType		5593640						
ANR	5594359	Symbol	multi		5593640						
ANR	5594360	Symbol	PERF_NUMBER_DECIMAL		5593640						
ANR	5594361	Symbol	pCounter -> CounterOffset		5593640						
ANR	5594362	Symbol	PERF_COUNTER_BASE		5593640						
ANR	5594363	Symbol	PERF_TYPE_ZERO		5593640						
ANR	5594364	Symbol	time . nanos		5593640						
ANR	5594365	Symbol	PERF_INVERSE_COUNTER		5593640						
ANR	5594366	Symbol	curr		5593640						
ANR	5594367	Symbol	time . headfreq		5593640						
ANR	5594368	Symbol	PERF_DISPLAY_SECONDS		5593640						
ANR	5594369	Symbol	PERF_TYPE_NUMBER		5593640						
ANR	5594370	Symbol	val		5593640						
ANR	5594371	Symbol	time . objabs		5593640						
ANR	5594372	Symbol	time . objfreq		5593640						
ANR	5594373	Symbol	ctval . type		5593640						
ANR	5594374	Symbol	old		5593640						
ANR	5594375	Symbol	pBase		5593640						
ANR	5594376	Symbol	WinPerf_CT_Seconds		5593640						
ANR	5594377	Symbol	WinPerf_CT_Unsigned		5593640						
ANR	5594378	Symbol	PERF_DISPLAY_NOSHOW		5593640						
ANR	5594379	Symbol	time . head		5593640						
ANR	5594380	Symbol	ctval . value . ul		5593640						
ANR	5594381	Symbol	time . obj		5593640						
ANR	5594382	Symbol	PERF_COUNTER_ELAPSED		5593640						
ANR	5594383	Symbol	true		5593640						
ANR	5594384	Symbol	ctval		5593640						
ANR	5594385	Symbol	PERF_DELTA_COUNTER		5593640						
ANR	5594386	Symbol	ctval . value . d		5593640						
ANR	5594387	Symbol	baseOld		5593640						
ANR	5594388	Symbol	PERF_DISPLAY_PERCENT		5593640						
ANR	5594389	Symbol	pCounter		5593640						
ANR	5594390	Symbol	GetRawValue		5593640						
ANR	5594391	Symbol	* pBase		5593640						
ANR	5594392	Symbol	WinPerf_CT_Hex		5593640						
ANR	5594393	Symbol	PERF_SIZE_LARGE		5593640						
ANR	5594394	Symbol	freq		5593640						
ANR	5594395	Symbol	scale		5593640						
ANR	5594396	Symbol	* pCounter		5593640						
ANR	5594397	Symbol	PERF_AVERAGE_TIMER		5593640						
ANR	5594398	Symbol	PERF_COUNTER_FRACTION		5593640						
ANR	5594399	Symbol	value		5593640						
ANR	5594400	Symbol	PERF_MULTI_COUNTER		5593640						
ANR	5594401	Symbol	pct		5593640						
ANR	5594402	Symbol	WinPerf_CT_Empty		5593640						
ANR	5594403	Symbol	* pCounter -> CounterOffset		5593640						
ANR	5594404	Symbol	PERF_DISPLAY_PER_SEC		5593640						
ANR	5594405	Symbol	false		5593640						
ANR	5594406	Symbol	pBase -> CounterType		5593640						
ANR	5594407	Symbol	WinPerf_CT_Percent		5593640						
ANR	5594408	Symbol	PERF_TIMER_100NS		5593640						
ANR	5594409	Symbol	WinPerf_CT_Double		5593640						
ANR	5594410	Symbol	* * pCounter		5593640						
ANR	5594411	Symbol	WinPerf_CT_PerSecond		5593640						
ANR	5594412	Symbol	PERF_COUNTER_VALUE		5593640						
ANR	5594413	Symbol	* curr		5593640						
ANR	5594414	Symbol	WinPerf_CT_Short		5593640						
ANR	5594415	Symbol	time		5593640						
ANR	5594416	Symbol	PERF_TYPE_COUNTER		5593640						
ANR	5594417	Symbol	PERF_OBJECT_TIMER		5593640						
ANR	5594418	Symbol	ctval . value		5593640						
ANR	5594419	Symbol	WinPerf_CT_Decimal		5593640						
ANR	5594420	Symbol	base		5593640						
ANR	5594421	Function	WinPerf_Object :: PrintValue	1252:0:40050:43420							
ANR	5594422	FunctionDef	"WinPerf_Object :: PrintValue (const WinPerf_CounterDef * pCounter , const WinPerf_TimerDeltas & time , const BYTE * curr , const BYTE * prev)"		5594421	0					
ANR	5594423	CompoundStatement		1257:0:40208:43420	5594421	0					
ANR	5594424	IdentifierDeclStatement	"ULONGLONG val = GetRawValue ( pCounter , curr ) ;"	1258:1:40211:40254	5594421	0	True				
ANR	5594425	IdentifierDecl	"val = GetRawValue ( pCounter , curr )"		5594421	0					
ANR	5594426	IdentifierDeclType	ULONGLONG		5594421	0					
ANR	5594427	Identifier	val		5594421	1					
ANR	5594428	AssignmentExpression	"val = GetRawValue ( pCounter , curr )"		5594421	2		=			
ANR	5594429	Identifier	val		5594421	0					
ANR	5594430	CallExpression	"GetRawValue ( pCounter , curr )"		5594421	1					
ANR	5594431	Callee	GetRawValue		5594421	0					
ANR	5594432	Identifier	GetRawValue		5594421	0					
ANR	5594433	ArgumentList	pCounter		5594421	1					
ANR	5594434	Argument	pCounter		5594421	0					
ANR	5594435	Identifier	pCounter		5594421	0					
ANR	5594436	Argument	curr		5594421	1					
ANR	5594437	Identifier	curr		5594421	0					
ANR	5594438	IdentifierDeclStatement	char sz [ 64 ] ;	1259:1:40257:40268	5594421	1	True				
ANR	5594439	IdentifierDecl	sz [ 64 ]		5594421	0					
ANR	5594440	IdentifierDeclType	char [ 64 ]		5594421	0					
ANR	5594441	Identifier	sz		5594421	1					
ANR	5594442	PrimaryExpression	64		5594421	2					
ANR	5594443	ExpressionStatement	sz [ 0 ] = 0	1260:1:40271:40280	5594421	2	True				
ANR	5594444	AssignmentExpression	sz [ 0 ] = 0		5594421	0		=			
ANR	5594445	ArrayIndexing	sz [ 0 ]		5594421	0					
ANR	5594446	Identifier	sz		5594421	0					
ANR	5594447	PrimaryExpression	0		5594421	1					
ANR	5594448	PrimaryExpression	0		5594421	1					
ANR	5594449	IdentifierDeclStatement	const DWORD type = pCounter -> CounterType ;	1262:1:40284:40324	5594421	3	True				
ANR	5594450	IdentifierDecl	type = pCounter -> CounterType		5594421	0					
ANR	5594451	IdentifierDeclType	const DWORD		5594421	0					
ANR	5594452	Identifier	type		5594421	1					
ANR	5594453	AssignmentExpression	type = pCounter -> CounterType		5594421	2		=			
ANR	5594454	Identifier	type		5594421	0					
ANR	5594455	PtrMemberAccess	pCounter -> CounterType		5594421	1					
ANR	5594456	Identifier	pCounter		5594421	0					
ANR	5594457	Identifier	CounterType		5594421	1					
ANR	5594458	IfStatement	if ( type & PERF_DELTA_COUNTER )		5594421	4					
ANR	5594459	Condition	type & PERF_DELTA_COUNTER	1263:5:40331:40355	5594421	0	True				
ANR	5594460	BitAndExpression	type & PERF_DELTA_COUNTER		5594421	0		&			
ANR	5594461	Identifier	type		5594421	0					
ANR	5594462	Identifier	PERF_DELTA_COUNTER		5594421	1					
ANR	5594463	CompoundStatement		11:2:187:230	5594421	1					
ANR	5594464	IfStatement	if ( ! prev )		5594421	0					
ANR	5594465	Condition	! prev	1265:7:40369:40375	5594421	0	True				
ANR	5594466	UnaryOperationExpression	! prev		5594421	0					
ANR	5594467	UnaryOperator	!		5594421	0					
ANR	5594468	Identifier	prev		5594421	1					
ANR	5594469	ReturnStatement	return NULL ;	1266:3:40381:40392	5594421	1	True				
ANR	5594470	Identifier	NULL		5594421	0					
ANR	5594471	IdentifierDeclStatement	"ULONGLONG old = GetRawValue ( pCounter , prev ) ;"	1267:2:40396:40439	5594421	1	True				
ANR	5594472	IdentifierDecl	"old = GetRawValue ( pCounter , prev )"		5594421	0					
ANR	5594473	IdentifierDeclType	ULONGLONG		5594421	0					
ANR	5594474	Identifier	old		5594421	1					
ANR	5594475	AssignmentExpression	"old = GetRawValue ( pCounter , prev )"		5594421	2		=			
ANR	5594476	Identifier	old		5594421	0					
ANR	5594477	CallExpression	"GetRawValue ( pCounter , prev )"		5594421	1					
ANR	5594478	Callee	GetRawValue		5594421	0					
ANR	5594479	Identifier	GetRawValue		5594421	0					
ANR	5594480	ArgumentList	pCounter		5594421	1					
ANR	5594481	Argument	pCounter		5594421	0					
ANR	5594482	Identifier	pCounter		5594421	0					
ANR	5594483	Argument	prev		5594421	1					
ANR	5594484	Identifier	prev		5594421	0					
ANR	5594485	IfStatement	if ( val >= old )		5594421	2					
ANR	5594486	Condition	val >= old	1268:6:40447:40456	5594421	0	True				
ANR	5594487	RelationalExpression	val >= old		5594421	0		>=			
ANR	5594488	Identifier	val		5594421	0					
ANR	5594489	Identifier	old		5594421	1					
ANR	5594490	ExpressionStatement	val = val - old	1269:3:40462:40477	5594421	1	True				
ANR	5594491	AssignmentExpression	val = val - old		5594421	0		=			
ANR	5594492	Identifier	val		5594421	0					
ANR	5594493	AdditiveExpression	val - old		5594421	1		-			
ANR	5594494	Identifier	val		5594421	0					
ANR	5594495	Identifier	old		5594421	1					
ANR	5594496	ElseStatement	else		5594421	0					
ANR	5594497	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""  PrintValue: negative delta from winreg performance data."" )"	1271:3:40489:40571	5594421	0	True				
ANR	5594498	CallExpression	"dprintf ( D_FULLDEBUG , ""  PrintValue: negative delta from winreg performance data."" )"		5594421	0					
ANR	5594499	Callee	dprintf		5594421	0					
ANR	5594500	Identifier	dprintf		5594421	0					
ANR	5594501	ArgumentList	D_FULLDEBUG		5594421	1					
ANR	5594502	Argument	D_FULLDEBUG		5594421	0					
ANR	5594503	Identifier	D_FULLDEBUG		5594421	0					
ANR	5594504	Argument	"""  PrintValue: negative delta from winreg performance data."""		5594421	1					
ANR	5594505	PrimaryExpression	"""  PrintValue: negative delta from winreg performance data."""		5594421	0					
ANR	5594506	IfStatement	if ( ( type & PERF_TYPE_ZERO ) == PERF_TYPE_NUMBER || ( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_VALUE )		5594421	5					
ANR	5594507	Condition	( type & PERF_TYPE_ZERO ) == PERF_TYPE_NUMBER || ( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_VALUE	1276:5:40795:40894	5594421	0	True				
ANR	5594508	OrExpression	( type & PERF_TYPE_ZERO ) == PERF_TYPE_NUMBER || ( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_VALUE		5594421	0		||			
ANR	5594509	EqualityExpression	( type & PERF_TYPE_ZERO ) == PERF_TYPE_NUMBER		5594421	0		==			
ANR	5594510	BitAndExpression	type & PERF_TYPE_ZERO		5594421	0		&			
ANR	5594511	Identifier	type		5594421	0					
ANR	5594512	Identifier	PERF_TYPE_ZERO		5594421	1					
ANR	5594513	Identifier	PERF_TYPE_NUMBER		5594421	1					
ANR	5594514	EqualityExpression	( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_VALUE		5594421	1		==			
ANR	5594515	BitAndExpression	type & PERF_COUNTER_PRECISION		5594421	0		&			
ANR	5594516	Identifier	type		5594421	0					
ANR	5594517	Identifier	PERF_COUNTER_PRECISION		5594421	1					
ANR	5594518	Identifier	PERF_COUNTER_VALUE		5594421	1					
ANR	5594519	CompoundStatement		21:1:689:689	5594421	1					
ANR	5594520	IfStatement	if ( type & PERF_NUMBER_DECIMAL )		5594421	0					
ANR	5594521	Condition	type & PERF_NUMBER_DECIMAL	1278:6:40906:40931	5594421	0	True				
ANR	5594522	BitAndExpression	type & PERF_NUMBER_DECIMAL		5594421	0		&			
ANR	5594523	Identifier	type		5594421	0					
ANR	5594524	Identifier	PERF_NUMBER_DECIMAL		5594421	1					
ANR	5594525	ExpressionStatement	"sprintf ( sz , ""%I64d     "" , val )"	1279:3:40937:40967	5594421	1	True				
ANR	5594526	CallExpression	"sprintf ( sz , ""%I64d     "" , val )"		5594421	0					
ANR	5594527	Callee	sprintf		5594421	0					
ANR	5594528	Identifier	sprintf		5594421	0					
ANR	5594529	ArgumentList	sz		5594421	1					
ANR	5594530	Argument	sz		5594421	0					
ANR	5594531	Identifier	sz		5594421	0					
ANR	5594532	Argument	"""%I64d     """		5594421	1					
ANR	5594533	PrimaryExpression	"""%I64d     """		5594421	0					
ANR	5594534	Argument	val		5594421	2					
ANR	5594535	Identifier	val		5594421	0					
ANR	5594536	ElseStatement	else		5594421	0					
ANR	5594537	IfStatement	if ( type & PERF_SIZE_LARGE )		5594421	0					
ANR	5594538	Condition	type & PERF_SIZE_LARGE	1280:11:40980:41001	5594421	0	True				
ANR	5594539	BitAndExpression	type & PERF_SIZE_LARGE		5594421	0		&			
ANR	5594540	Identifier	type		5594421	0					
ANR	5594541	Identifier	PERF_SIZE_LARGE		5594421	1					
ANR	5594542	ExpressionStatement	"sprintf ( sz , ""0x%I64X     "" , val )"	1281:3:41007:41039	5594421	1	True				
ANR	5594543	CallExpression	"sprintf ( sz , ""0x%I64X     "" , val )"		5594421	0					
ANR	5594544	Callee	sprintf		5594421	0					
ANR	5594545	Identifier	sprintf		5594421	0					
ANR	5594546	ArgumentList	sz		5594421	1					
ANR	5594547	Argument	sz		5594421	0					
ANR	5594548	Identifier	sz		5594421	0					
ANR	5594549	Argument	"""0x%I64X     """		5594421	1					
ANR	5594550	PrimaryExpression	"""0x%I64X     """		5594421	0					
ANR	5594551	Argument	val		5594421	2					
ANR	5594552	Identifier	val		5594421	0					
ANR	5594553	ElseStatement	else		5594421	0					
ANR	5594554	ExpressionStatement	"sprintf ( sz , ""0x%X     "" , * ( DWORD * ) & val )"	1283:3:41051:41090	5594421	0	True				
ANR	5594555	CallExpression	"sprintf ( sz , ""0x%X     "" , * ( DWORD * ) & val )"		5594421	0					
ANR	5594556	Callee	sprintf		5594421	0					
ANR	5594557	Identifier	sprintf		5594421	0					
ANR	5594558	ArgumentList	sz		5594421	1					
ANR	5594559	Argument	sz		5594421	0					
ANR	5594560	Identifier	sz		5594421	0					
ANR	5594561	Argument	"""0x%X     """		5594421	1					
ANR	5594562	PrimaryExpression	"""0x%X     """		5594421	0					
ANR	5594563	Argument	* ( DWORD * ) & val		5594421	2					
ANR	5594564	UnaryOperationExpression	* ( DWORD * ) & val		5594421	0					
ANR	5594565	UnaryOperator	*		5594421	0					
ANR	5594566	CastExpression	( DWORD * ) & val		5594421	1					
ANR	5594567	CastTarget	DWORD *		5594421	0					
ANR	5594568	UnaryOperationExpression	& val		5594421	1					
ANR	5594569	UnaryOperator	&		5594421	0					
ANR	5594570	Identifier	val		5594421	1					
ANR	5594571	ElseStatement	else		5594421	0					
ANR	5594572	IfStatement	if ( ( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_RATE )		5594421	0					
ANR	5594573	Condition	( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_RATE	1285:10:41105:41156	5594421	0	True				
ANR	5594574	EqualityExpression	( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_RATE		5594421	0		==			
ANR	5594575	BitAndExpression	type & PERF_COUNTER_PRECISION		5594421	0		&			
ANR	5594576	Identifier	type		5594421	0					
ANR	5594577	Identifier	PERF_COUNTER_PRECISION		5594421	1					
ANR	5594578	Identifier	PERF_COUNTER_RATE		5594421	1					
ANR	5594579	CompoundStatement		34:2:1058:1075	5594421	1					
ANR	5594580	IdentifierDeclStatement	double scale = 1 ;	1287:2:41191:41207	5594421	0	True				
ANR	5594581	IdentifierDecl	scale = 1		5594421	0					
ANR	5594582	IdentifierDeclType	double		5594421	0					
ANR	5594583	Identifier	scale		5594421	1					
ANR	5594584	AssignmentExpression	scale = 1		5594421	2		=			
ANR	5594585	Identifier	scale		5594421	0					
ANR	5594586	PrimaryExpression	1		5594421	1					
ANR	5594587	IdentifierDeclStatement	double value = 0.0 ;	1288:2:41211:41229	5594421	1	True				
ANR	5594588	IdentifierDecl	value = 0.0		5594421	0					
ANR	5594589	IdentifierDeclType	double		5594421	0					
ANR	5594590	Identifier	value		5594421	1					
ANR	5594591	AssignmentExpression	value = 0.0		5594421	2		=			
ANR	5594592	Identifier	value		5594421	0					
ANR	5594593	PrimaryExpression	0.0		5594421	1					
ANR	5594594	IdentifierDeclStatement	"const char * pszUnits = ""    "" ;"	1289:2:41233:41263	5594421	2	True				
ANR	5594595	IdentifierDecl	"* pszUnits = ""    """		5594421	0					
ANR	5594596	IdentifierDeclType	const char *		5594421	0					
ANR	5594597	Identifier	pszUnits		5594421	1					
ANR	5594598	AssignmentExpression	"* pszUnits = ""    """		5594421	2		=			
ANR	5594599	Identifier	pszUnits		5594421	0					
ANR	5594600	PrimaryExpression	"""    """		5594421	1					
ANR	5594601	IdentifierDeclStatement	LONGLONG mult = 1 ;	1290:2:41267:41284	5594421	3	True				
ANR	5594602	IdentifierDecl	mult = 1		5594421	0					
ANR	5594603	IdentifierDeclType	LONGLONG		5594421	0					
ANR	5594604	Identifier	mult		5594421	1					
ANR	5594605	AssignmentExpression	mult = 1		5594421	2		=			
ANR	5594606	Identifier	mult		5594421	0					
ANR	5594607	PrimaryExpression	1		5594421	1					
ANR	5594608	IfStatement	if ( ( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_PERCENT )		5594421	4					
ANR	5594609	Condition	( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_PERCENT	1291:6:41292:41344	5594421	0	True				
ANR	5594610	EqualityExpression	( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_PERCENT		5594421	0		==			
ANR	5594611	BitAndExpression	type & PERF_DISPLAY_SECONDS		5594421	0		&			
ANR	5594612	Identifier	type		5594421	0					
ANR	5594613	Identifier	PERF_DISPLAY_SECONDS		5594421	1					
ANR	5594614	Identifier	PERF_DISPLAY_PERCENT		5594421	1					
ANR	5594615	CompoundStatement		36:2:1140:1140	5594421	1					
ANR	5594616	ExpressionStatement	mult = 100	1293:3:41354:41364	5594421	0	True				
ANR	5594617	AssignmentExpression	mult = 100		5594421	0		=			
ANR	5594618	Identifier	mult		5594421	0					
ANR	5594619	PrimaryExpression	100		5594421	1					
ANR	5594620	ExpressionStatement	"pszUnits = "" %   """	1294:3:41369:41387	5594421	1	True				
ANR	5594621	AssignmentExpression	"pszUnits = "" %   """		5594421	0		=			
ANR	5594622	Identifier	pszUnits		5594421	0					
ANR	5594623	PrimaryExpression	""" %   """		5594421	1					
ANR	5594624	ElseStatement	else		5594421	0					
ANR	5594625	IfStatement	if ( ( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_PER_SEC )		5594421	0					
ANR	5594626	Condition	( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_PER_SEC	1296:11:41404:41456	5594421	0	True				
ANR	5594627	EqualityExpression	( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_PER_SEC		5594421	0		==			
ANR	5594628	BitAndExpression	type & PERF_DISPLAY_SECONDS		5594421	0		&			
ANR	5594629	Identifier	type		5594421	0					
ANR	5594630	Identifier	PERF_DISPLAY_SECONDS		5594421	1					
ANR	5594631	Identifier	PERF_DISPLAY_PER_SEC		5594421	1					
ANR	5594632	CompoundStatement		41:2:1275:1275	5594421	1					
ANR	5594633	ExpressionStatement	mult = time . headfreq	1298:3:41489:41509	5594421	0	True				
ANR	5594634	AssignmentExpression	mult = time . headfreq		5594421	0		=			
ANR	5594635	Identifier	mult		5594421	0					
ANR	5594636	MemberAccess	time . headfreq		5594421	1					
ANR	5594637	Identifier	time		5594421	0					
ANR	5594638	Identifier	headfreq		5594421	1					
ANR	5594639	ExpressionStatement	"pszUnits = "" /sec"""	1299:3:41514:41532	5594421	1	True				
ANR	5594640	AssignmentExpression	"pszUnits = "" /sec"""		5594421	0		=			
ANR	5594641	Identifier	pszUnits		5594421	0					
ANR	5594642	PrimaryExpression	""" /sec"""		5594421	1					
ANR	5594643	ElseStatement	else		5594421	0					
ANR	5594644	IfStatement	if ( ( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_NO_SUFFIX )		5594421	0					
ANR	5594645	Condition	( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_NO_SUFFIX	1301:11:41549:41603	5594421	0	True				
ANR	5594646	EqualityExpression	( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_NO_SUFFIX		5594421	0		==			
ANR	5594647	BitAndExpression	type & PERF_DISPLAY_SECONDS		5594421	0		&			
ANR	5594648	Identifier	type		5594421	0					
ANR	5594649	Identifier	PERF_DISPLAY_SECONDS		5594421	1					
ANR	5594650	Identifier	PERF_DISPLAY_NO_SUFFIX		5594421	1					
ANR	5594651	CompoundStatement		46:2:1422:1422	5594421	1					
ANR	5594652	ExpressionStatement	mult = time . headfreq	1303:3:41636:41656	5594421	0	True				
ANR	5594653	AssignmentExpression	mult = time . headfreq		5594421	0		=			
ANR	5594654	Identifier	mult		5594421	0					
ANR	5594655	MemberAccess	time . headfreq		5594421	1					
ANR	5594656	Identifier	time		5594421	0					
ANR	5594657	Identifier	headfreq		5594421	1					
ANR	5594658	ElseStatement	else		5594421	0					
ANR	5594659	IfStatement	if ( ( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_SECONDS )		5594421	0					
ANR	5594660	Condition	( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_SECONDS	1305:11:41673:41725	5594421	0	True				
ANR	5594661	EqualityExpression	( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_SECONDS		5594421	0		==			
ANR	5594662	BitAndExpression	type & PERF_DISPLAY_SECONDS		5594421	0		&			
ANR	5594663	Identifier	type		5594421	0					
ANR	5594664	Identifier	PERF_DISPLAY_SECONDS		5594421	1					
ANR	5594665	Identifier	PERF_DISPLAY_SECONDS		5594421	1					
ANR	5594666	CompoundStatement		50:2:1521:1521	5594421	1					
ANR	5594667	ExpressionStatement	"pszUnits = "" sec """	1307:3:41735:41753	5594421	0	True				
ANR	5594668	AssignmentExpression	"pszUnits = "" sec """		5594421	0		=			
ANR	5594669	Identifier	pszUnits		5594421	0					
ANR	5594670	PrimaryExpression	""" sec """		5594421	1					
ANR	5594671	IfStatement	if ( type & PERF_TIMER_100NS )		5594421	5					
ANR	5594672	Condition	type & PERF_TIMER_100NS	1310:6:41766:41788	5594421	0	True				
ANR	5594673	BitAndExpression	type & PERF_TIMER_100NS		5594421	0		&			
ANR	5594674	Identifier	type		5594421	0					
ANR	5594675	Identifier	PERF_TIMER_100NS		5594421	1					
ANR	5594676	CompoundStatement		55:2:1585:1585	5594421	1					
ANR	5594677	IfStatement	if ( time . nanos )		5594421	0					
ANR	5594678	Condition	time . nanos	1312:7:41803:41812	5594421	0	True				
ANR	5594679	MemberAccess	time . nanos		5594421	0					
ANR	5594680	Identifier	time		5594421	0					
ANR	5594681	Identifier	nanos		5594421	1					
ANR	5594682	ExpressionStatement	scale = ( double ) mult / time . nanos	1312:19:41815:41846	5594421	1	True				
ANR	5594683	AssignmentExpression	scale = ( double ) mult / time . nanos		5594421	0		=			
ANR	5594684	Identifier	scale		5594421	0					
ANR	5594685	MultiplicativeExpression	( double ) mult / time . nanos		5594421	1		/			
ANR	5594686	CastExpression	( double ) mult		5594421	0					
ANR	5594687	CastTarget	double		5594421	0					
ANR	5594688	Identifier	mult		5594421	1					
ANR	5594689	MemberAccess	time . nanos		5594421	1					
ANR	5594690	Identifier	time		5594421	0					
ANR	5594691	Identifier	nanos		5594421	1					
ANR	5594692	ElseStatement	else		5594421	0					
ANR	5594693	IfStatement	if ( type & PERF_OBJECT_TIMER )		5594421	0					
ANR	5594694	Condition	type & PERF_OBJECT_TIMER	1314:11:41863:41886	5594421	0	True				
ANR	5594695	BitAndExpression	type & PERF_OBJECT_TIMER		5594421	0		&			
ANR	5594696	Identifier	type		5594421	0					
ANR	5594697	Identifier	PERF_OBJECT_TIMER		5594421	1					
ANR	5594698	CompoundStatement		59:2:1683:1683	5594421	1					
ANR	5594699	IfStatement	if ( time . obj )		5594421	0					
ANR	5594700	Condition	time . obj	1316:7:41901:41908	5594421	0	True				
ANR	5594701	MemberAccess	time . obj		5594421	0					
ANR	5594702	Identifier	time		5594421	0					
ANR	5594703	Identifier	obj		5594421	1					
ANR	5594704	ExpressionStatement	scale = ( double ) mult / time . obj	1316:17:41911:41940	5594421	1	True				
ANR	5594705	AssignmentExpression	scale = ( double ) mult / time . obj		5594421	0		=			
ANR	5594706	Identifier	scale		5594421	0					
ANR	5594707	MultiplicativeExpression	( double ) mult / time . obj		5594421	1		/			
ANR	5594708	CastExpression	( double ) mult		5594421	0					
ANR	5594709	CastTarget	double		5594421	0					
ANR	5594710	Identifier	mult		5594421	1					
ANR	5594711	MemberAccess	time . obj		5594421	1					
ANR	5594712	Identifier	time		5594421	0					
ANR	5594713	Identifier	obj		5594421	1					
ANR	5594714	ElseStatement	else		5594421	0					
ANR	5594715	CompoundStatement		63:2:1746:1746	5594421	0					
ANR	5594716	IfStatement	if ( time . head )		5594421	0					
ANR	5594717	Condition	time . head	1320:7:41964:41972	5594421	0	True				
ANR	5594718	MemberAccess	time . head		5594421	0					
ANR	5594719	Identifier	time		5594421	0					
ANR	5594720	Identifier	head		5594421	1					
ANR	5594721	ExpressionStatement	scale = ( double ) mult / time . head	1320:18:41975:42005	5594421	1	True				
ANR	5594722	AssignmentExpression	scale = ( double ) mult / time . head		5594421	0		=			
ANR	5594723	Identifier	scale		5594421	0					
ANR	5594724	MultiplicativeExpression	( double ) mult / time . head		5594421	1		/			
ANR	5594725	CastExpression	( double ) mult		5594421	0					
ANR	5594726	CastTarget	double		5594421	0					
ANR	5594727	Identifier	mult		5594421	1					
ANR	5594728	MemberAccess	time . head		5594421	1					
ANR	5594729	Identifier	time		5594421	0					
ANR	5594730	Identifier	head		5594421	1					
ANR	5594731	IfStatement	if ( type & PERF_MULTI_COUNTER )		5594421	6					
ANR	5594732	Condition	type & PERF_MULTI_COUNTER	1323:6:42018:42042	5594421	0	True				
ANR	5594733	BitAndExpression	type & PERF_MULTI_COUNTER		5594421	0		&			
ANR	5594734	Identifier	type		5594421	0					
ANR	5594735	Identifier	PERF_MULTI_COUNTER		5594421	1					
ANR	5594736	CompoundStatement		69:3:1843:1902	5594421	1					
ANR	5594737	IdentifierDeclStatement	DWORD multi = ( ( DWORD * ) ( curr + pCounter -> CounterOffset ) ) [ 2 ] ;	1325:3:42052:42111	5594421	0	True				
ANR	5594738	IdentifierDecl	multi = ( ( DWORD * ) ( curr + pCounter -> CounterOffset ) ) [ 2 ]		5594421	0					
ANR	5594739	IdentifierDeclType	DWORD		5594421	0					
ANR	5594740	Identifier	multi		5594421	1					
ANR	5594741	AssignmentExpression	multi = ( ( DWORD * ) ( curr + pCounter -> CounterOffset ) ) [ 2 ]		5594421	2		=			
ANR	5594742	Identifier	multi		5594421	0					
ANR	5594743	ArrayIndexing	( ( DWORD * ) ( curr + pCounter -> CounterOffset ) ) [ 2 ]		5594421	1					
ANR	5594744	CastExpression	( DWORD * ) ( curr + pCounter -> CounterOffset )		5594421	0					
ANR	5594745	CastTarget	DWORD *		5594421	0					
ANR	5594746	AdditiveExpression	curr + pCounter -> CounterOffset		5594421	1		+			
ANR	5594747	Identifier	curr		5594421	0					
ANR	5594748	PtrMemberAccess	pCounter -> CounterOffset		5594421	1					
ANR	5594749	Identifier	pCounter		5594421	0					
ANR	5594750	Identifier	CounterOffset		5594421	1					
ANR	5594751	PrimaryExpression	2		5594421	1					
ANR	5594752	IfStatement	if ( type & PERF_INVERSE_COUNTER )		5594421	1					
ANR	5594753	Condition	type & PERF_INVERSE_COUNTER	1326:7:42120:42146	5594421	0	True				
ANR	5594754	BitAndExpression	type & PERF_INVERSE_COUNTER		5594421	0		&			
ANR	5594755	Identifier	type		5594421	0					
ANR	5594756	Identifier	PERF_INVERSE_COUNTER		5594421	1					
ANR	5594757	ExpressionStatement	value = 100.0 * multi - val * scale	1327:4:42153:42188	5594421	1	True				
ANR	5594758	AssignmentExpression	value = 100.0 * multi - val * scale		5594421	0		=			
ANR	5594759	Identifier	value		5594421	0					
ANR	5594760	AdditiveExpression	100.0 * multi - val * scale		5594421	1		-			
ANR	5594761	MultiplicativeExpression	100.0 * multi		5594421	0		*			
ANR	5594762	PrimaryExpression	100.0		5594421	0					
ANR	5594763	Identifier	multi		5594421	1					
ANR	5594764	MultiplicativeExpression	val * scale		5594421	1		*			
ANR	5594765	Identifier	val		5594421	0					
ANR	5594766	Identifier	scale		5594421	1					
ANR	5594767	ElseStatement	else		5594421	0					
ANR	5594768	IfStatement	if ( multi )		5594421	0					
ANR	5594769	Condition	multi	1328:12:42202:42206	5594421	0	True				
ANR	5594770	Identifier	multi		5594421	0					
ANR	5594771	ExpressionStatement	value = ( val * scale ) / multi	1329:4:42213:42242	5594421	1	True				
ANR	5594772	AssignmentExpression	value = ( val * scale ) / multi		5594421	0		=			
ANR	5594773	Identifier	value		5594421	0					
ANR	5594774	MultiplicativeExpression	( val * scale ) / multi		5594421	1		/			
ANR	5594775	MultiplicativeExpression	val * scale		5594421	0		*			
ANR	5594776	Identifier	val		5594421	0					
ANR	5594777	Identifier	scale		5594421	1					
ANR	5594778	Identifier	multi		5594421	1					
ANR	5594779	ElseStatement	else		5594421	0					
ANR	5594780	IfStatement	if ( type & PERF_INVERSE_COUNTER )		5594421	0					
ANR	5594781	Condition	type & PERF_INVERSE_COUNTER	1331:11:42259:42285	5594421	0	True				
ANR	5594782	BitAndExpression	type & PERF_INVERSE_COUNTER		5594421	0		&			
ANR	5594783	Identifier	type		5594421	0					
ANR	5594784	Identifier	PERF_INVERSE_COUNTER		5594421	1					
ANR	5594785	CompoundStatement		76:2:2081:2081	5594421	1					
ANR	5594786	IfStatement	if ( ( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_PERCENT )		5594421	0					
ANR	5594787	Condition	( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_PERCENT	1333:7:42299:42351	5594421	0	True				
ANR	5594788	EqualityExpression	( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_PERCENT		5594421	0		==			
ANR	5594789	BitAndExpression	type & PERF_DISPLAY_SECONDS		5594421	0		&			
ANR	5594790	Identifier	type		5594421	0					
ANR	5594791	Identifier	PERF_DISPLAY_SECONDS		5594421	1					
ANR	5594792	Identifier	PERF_DISPLAY_PERCENT		5594421	1					
ANR	5594793	ExpressionStatement	value = 100.0 - ( val * scale )	1334:4:42358:42387	5594421	1	True				
ANR	5594794	AssignmentExpression	value = 100.0 - ( val * scale )		5594421	0		=			
ANR	5594795	Identifier	value		5594421	0					
ANR	5594796	AdditiveExpression	100.0 - ( val * scale )		5594421	1		-			
ANR	5594797	PrimaryExpression	100.0		5594421	0					
ANR	5594798	MultiplicativeExpression	val * scale		5594421	1		*			
ANR	5594799	Identifier	val		5594421	0					
ANR	5594800	Identifier	scale		5594421	1					
ANR	5594801	ElseStatement	else		5594421	0					
ANR	5594802	ExpressionStatement	value = 1.0 - ( val * scale )	1336:4:42401:42428	5594421	0	True				
ANR	5594803	AssignmentExpression	value = 1.0 - ( val * scale )		5594421	0		=			
ANR	5594804	Identifier	value		5594421	0					
ANR	5594805	AdditiveExpression	1.0 - ( val * scale )		5594421	1		-			
ANR	5594806	PrimaryExpression	1.0		5594421	0					
ANR	5594807	MultiplicativeExpression	val * scale		5594421	1		*			
ANR	5594808	Identifier	val		5594421	0					
ANR	5594809	Identifier	scale		5594421	1					
ANR	5594810	ElseStatement	else		5594421	0					
ANR	5594811	CompoundStatement		83:2:2234:2234	5594421	0					
ANR	5594812	ExpressionStatement	value = ( double ) val * scale	1341:3:42517:42544	5594421	0	True				
ANR	5594813	AssignmentExpression	value = ( double ) val * scale		5594421	0		=			
ANR	5594814	Identifier	value		5594421	0					
ANR	5594815	MultiplicativeExpression	( double ) val * scale		5594421	1		*			
ANR	5594816	CastExpression	( double ) val		5594421	0					
ANR	5594817	CastTarget	double		5594421	0					
ANR	5594818	Identifier	val		5594421	1					
ANR	5594819	Identifier	scale		5594421	1					
ANR	5594820	ExpressionStatement	"sprintf ( sz , ""%f%s"" , value , pszUnits )"	1343:2:42552:42588	5594421	7	True				
ANR	5594821	CallExpression	"sprintf ( sz , ""%f%s"" , value , pszUnits )"		5594421	0					
ANR	5594822	Callee	sprintf		5594421	0					
ANR	5594823	Identifier	sprintf		5594421	0					
ANR	5594824	ArgumentList	sz		5594421	1					
ANR	5594825	Argument	sz		5594421	0					
ANR	5594826	Identifier	sz		5594421	0					
ANR	5594827	Argument	"""%f%s"""		5594421	1					
ANR	5594828	PrimaryExpression	"""%f%s"""		5594421	0					
ANR	5594829	Argument	value		5594421	2					
ANR	5594830	Identifier	value		5594421	0					
ANR	5594831	Argument	pszUnits		5594421	3					
ANR	5594832	Identifier	pszUnits		5594421	0					
ANR	5594833	ElseStatement	else		5594421	0					
ANR	5594834	IfStatement	if ( ( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_ELAPSED )		5594421	0					
ANR	5594835	Condition	( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_ELAPSED	1345:10:42603:42657	5594421	0	True				
ANR	5594836	EqualityExpression	( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_ELAPSED		5594421	0		==			
ANR	5594837	BitAndExpression	type & PERF_COUNTER_PRECISION		5594421	0		&			
ANR	5594838	Identifier	type		5594421	0					
ANR	5594839	Identifier	PERF_COUNTER_PRECISION		5594421	1					
ANR	5594840	Identifier	PERF_COUNTER_ELAPSED		5594421	1					
ANR	5594841	CompoundStatement		91:2:2490:2532	5594421	1					
ANR	5594842	IdentifierDeclStatement	double value = ( double ) ( time . objabs - val ) ;	1347:2:42699:42741	5594421	0	True				
ANR	5594843	IdentifierDecl	value = ( double ) ( time . objabs - val )		5594421	0					
ANR	5594844	IdentifierDeclType	double		5594421	0					
ANR	5594845	Identifier	value		5594421	1					
ANR	5594846	AssignmentExpression	value = ( double ) ( time . objabs - val )		5594421	2		=			
ANR	5594847	Identifier	value		5594421	0					
ANR	5594848	CastExpression	( double ) ( time . objabs - val )		5594421	1					
ANR	5594849	CastTarget	double		5594421	0					
ANR	5594850	AdditiveExpression	time . objabs - val		5594421	1		-			
ANR	5594851	MemberAccess	time . objabs		5594421	0					
ANR	5594852	Identifier	time		5594421	0					
ANR	5594853	Identifier	objabs		5594421	1					
ANR	5594854	Identifier	val		5594421	1					
ANR	5594855	IfStatement	if ( time . objfreq )		5594421	1					
ANR	5594856	Condition	time . objfreq	1348:6:42749:42760	5594421	0	True				
ANR	5594857	MemberAccess	time . objfreq		5594421	0					
ANR	5594858	Identifier	time		5594421	0					
ANR	5594859	Identifier	objfreq		5594421	1					
ANR	5594860	ExpressionStatement	value /= time . objfreq	1349:3:42766:42787	5594421	1	True				
ANR	5594861	AssignmentExpression	value /= time . objfreq		5594421	0		/=			
ANR	5594862	Identifier	value		5594421	0					
ANR	5594863	MemberAccess	time . objfreq		5594421	1					
ANR	5594864	Identifier	time		5594421	0					
ANR	5594865	Identifier	objfreq		5594421	1					
ANR	5594866	ExpressionStatement	"sprintf ( sz , ""%f sec "" , value )"	1350:2:42791:42820	5594421	2	True				
ANR	5594867	CallExpression	"sprintf ( sz , ""%f sec "" , value )"		5594421	0					
ANR	5594868	Callee	sprintf		5594421	0					
ANR	5594869	Identifier	sprintf		5594421	0					
ANR	5594870	ArgumentList	sz		5594421	1					
ANR	5594871	Argument	sz		5594421	0					
ANR	5594872	Identifier	sz		5594421	0					
ANR	5594873	Argument	"""%f sec """		5594421	1					
ANR	5594874	PrimaryExpression	"""%f sec """		5594421	0					
ANR	5594875	Argument	value		5594421	2					
ANR	5594876	Identifier	value		5594421	0					
ANR	5594877	ElseStatement	else		5594421	0					
ANR	5594878	IfStatement	if ( ( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_FRACTION )		5594421	0					
ANR	5594879	Condition	( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_FRACTION	1352:10:42835:42890	5594421	0	True				
ANR	5594880	EqualityExpression	( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_FRACTION		5594421	0		==			
ANR	5594881	BitAndExpression	type & PERF_COUNTER_PRECISION		5594421	0		&			
ANR	5594882	Identifier	type		5594421	0					
ANR	5594883	Identifier	PERF_COUNTER_PRECISION		5594421	1					
ANR	5594884	Identifier	PERF_COUNTER_FRACTION		5594421	1					
ANR	5594885	CompoundStatement		107:2:2951:2985	5594421	1					
ANR	5594886	IdentifierDeclStatement	const WinPerf_CounterDef * pBase = pCounter + 1 ;	1354:2:42898:42943	5594421	0	True				
ANR	5594887	IdentifierDecl	* pBase = pCounter + 1		5594421	0					
ANR	5594888	IdentifierDeclType	const WinPerf_CounterDef *		5594421	0					
ANR	5594889	Identifier	pBase		5594421	1					
ANR	5594890	AssignmentExpression	* pBase = pCounter + 1		5594421	2		=			
ANR	5594891	Identifier	pBase		5594421	0					
ANR	5594892	AdditiveExpression	pCounter + 1		5594421	1		+			
ANR	5594893	Identifier	pCounter		5594421	0					
ANR	5594894	PrimaryExpression	1		5594421	1					
ANR	5594895	IdentifierDeclStatement	ULONGLONG baseCurr = 0 ;	1355:2:42947:42969	5594421	1	True				
ANR	5594896	IdentifierDecl	baseCurr = 0		5594421	0					
ANR	5594897	IdentifierDeclType	ULONGLONG		5594421	0					
ANR	5594898	Identifier	baseCurr		5594421	1					
ANR	5594899	AssignmentExpression	baseCurr = 0		5594421	2		=			
ANR	5594900	Identifier	baseCurr		5594421	0					
ANR	5594901	PrimaryExpression	0		5594421	1					
ANR	5594902	IfStatement	if ( ( pBase -> CounterType & PERF_COUNTER_PRECISION ) == PERF_COUNTER_BASE )		5594421	2					
ANR	5594903	Condition	( pBase -> CounterType & PERF_COUNTER_PRECISION ) == PERF_COUNTER_BASE	1356:6:42977:43042	5594421	0	True				
ANR	5594904	EqualityExpression	( pBase -> CounterType & PERF_COUNTER_PRECISION ) == PERF_COUNTER_BASE		5594421	0		==			
ANR	5594905	BitAndExpression	pBase -> CounterType & PERF_COUNTER_PRECISION		5594421	0		&			
ANR	5594906	PtrMemberAccess	pBase -> CounterType		5594421	0					
ANR	5594907	Identifier	pBase		5594421	0					
ANR	5594908	Identifier	CounterType		5594421	1					
ANR	5594909	Identifier	PERF_COUNTER_PRECISION		5594421	1					
ANR	5594910	Identifier	PERF_COUNTER_BASE		5594421	1					
ANR	5594911	CompoundStatement		101:2:2838:2838	5594421	1					
ANR	5594912	ExpressionStatement	"baseCurr = GetRawValue ( pBase , curr )"	1358:3:43052:43087	5594421	0	True				
ANR	5594913	AssignmentExpression	"baseCurr = GetRawValue ( pBase , curr )"		5594421	0		=			
ANR	5594914	Identifier	baseCurr		5594421	0					
ANR	5594915	CallExpression	"GetRawValue ( pBase , curr )"		5594421	1					
ANR	5594916	Callee	GetRawValue		5594421	0					
ANR	5594917	Identifier	GetRawValue		5594421	0					
ANR	5594918	ArgumentList	pBase		5594421	1					
ANR	5594919	Argument	pBase		5594421	0					
ANR	5594920	Identifier	pBase		5594421	0					
ANR	5594921	Argument	curr		5594421	1					
ANR	5594922	Identifier	curr		5594421	0					
ANR	5594923	IdentifierDeclStatement	double scale = 1.0 ;	1360:2:43095:43113	5594421	3	True				
ANR	5594924	IdentifierDecl	scale = 1.0		5594421	0					
ANR	5594925	IdentifierDeclType	double		5594421	0					
ANR	5594926	Identifier	scale		5594421	1					
ANR	5594927	AssignmentExpression	scale = 1.0		5594421	2		=			
ANR	5594928	Identifier	scale		5594421	0					
ANR	5594929	PrimaryExpression	1.0		5594421	1					
ANR	5594930	IfStatement	if ( baseCurr )		5594421	4					
ANR	5594931	Condition	baseCurr	1361:6:43121:43128	5594421	0	True				
ANR	5594932	Identifier	baseCurr		5594421	0					
ANR	5594933	ExpressionStatement	scale = 100.0 / baseCurr	1362:3:43134:43156	5594421	1	True				
ANR	5594934	AssignmentExpression	scale = 100.0 / baseCurr		5594421	0		=			
ANR	5594935	Identifier	scale		5594421	0					
ANR	5594936	MultiplicativeExpression	100.0 / baseCurr		5594421	1		/			
ANR	5594937	PrimaryExpression	100.0		5594421	0					
ANR	5594938	Identifier	baseCurr		5594421	1					
ANR	5594939	IdentifierDeclStatement	double value = ( double ) val * scale ;	1363:2:43160:43194	5594421	5	True				
ANR	5594940	IdentifierDecl	value = ( double ) val * scale		5594421	0					
ANR	5594941	IdentifierDeclType	double		5594421	0					
ANR	5594942	Identifier	value		5594421	1					
ANR	5594943	AssignmentExpression	value = ( double ) val * scale		5594421	2		=			
ANR	5594944	Identifier	value		5594421	0					
ANR	5594945	MultiplicativeExpression	( double ) val * scale		5594421	1		*			
ANR	5594946	CastExpression	( double ) val		5594421	0					
ANR	5594947	CastTarget	double		5594421	0					
ANR	5594948	Identifier	val		5594421	1					
ANR	5594949	Identifier	scale		5594421	1					
ANR	5594950	ExpressionStatement	"sprintf ( sz , ""%f     "" , value )"	1364:2:43198:43227	5594421	6	True				
ANR	5594951	CallExpression	"sprintf ( sz , ""%f     "" , value )"		5594421	0					
ANR	5594952	Callee	sprintf		5594421	0					
ANR	5594953	Identifier	sprintf		5594421	0					
ANR	5594954	ArgumentList	sz		5594421	1					
ANR	5594955	Argument	sz		5594421	0					
ANR	5594956	Identifier	sz		5594421	0					
ANR	5594957	Argument	"""%f     """		5594421	1					
ANR	5594958	PrimaryExpression	"""%f     """		5594421	0					
ANR	5594959	Argument	value		5594421	2					
ANR	5594960	Identifier	value		5594421	0					
ANR	5594961	ElseStatement	else		5594421	0					
ANR	5594962	IfStatement	if ( ( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_QUEUELEN )		5594421	0					
ANR	5594963	Condition	( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_QUEUELEN	1366:10:43242:43297	5594421	0	True				
ANR	5594964	EqualityExpression	( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_QUEUELEN		5594421	0		==			
ANR	5594965	BitAndExpression	type & PERF_COUNTER_PRECISION		5594421	0		&			
ANR	5594966	Identifier	type		5594421	0					
ANR	5594967	Identifier	PERF_COUNTER_PRECISION		5594421	1					
ANR	5594968	Identifier	PERF_COUNTER_QUEUELEN		5594421	1					
ANR	5594969	CompoundStatement		111:1:3092:3092	5594421	1					
ANR	5594970	ExpressionStatement	"EXCEPT ( ""WinReg perf counter type QUEUELEN is unimplemented."" )"	1368:2:43305:43368	5594421	0	True				
ANR	5594971	CallExpression	"EXCEPT ( ""WinReg perf counter type QUEUELEN is unimplemented."" )"		5594421	0					
ANR	5594972	Callee	EXCEPT		5594421	0					
ANR	5594973	Identifier	EXCEPT		5594421	0					
ANR	5594974	ArgumentList	"""WinReg perf counter type QUEUELEN is unimplemented."""		5594421	1					
ANR	5594975	Argument	"""WinReg perf counter type QUEUELEN is unimplemented."""		5594421	0					
ANR	5594976	PrimaryExpression	"""WinReg perf counter type QUEUELEN is unimplemented."""		5594421	0					
ANR	5594977	IfStatement	if ( sz [ 0 ] )		5594421	6					
ANR	5594978	Condition	sz [ 0 ]	1370:5:43378:43382	5594421	0	True				
ANR	5594979	ArrayIndexing	sz [ 0 ]		5594421	0					
ANR	5594980	Identifier	sz		5594421	0					
ANR	5594981	PrimaryExpression	0		5594421	1					
ANR	5594982	ReturnStatement	return strdup ( sz ) ;	1371:2:43387:43404	5594421	1	True				
ANR	5594983	CallExpression	strdup ( sz )		5594421	0					
ANR	5594984	Callee	strdup		5594421	0					
ANR	5594985	Identifier	strdup		5594421	0					
ANR	5594986	ArgumentList	sz		5594421	1					
ANR	5594987	Argument	sz		5594421	0					
ANR	5594988	Identifier	sz		5594421	0					
ANR	5594989	ReturnStatement	return NULL ;	1372:1:43407:43418	5594421	7	True				
ANR	5594990	Identifier	NULL		5594421	0					
ANR	5594991	ReturnType	char *		5594421	1					
ANR	5594992	Identifier	WinPerf_Object :: PrintValue		5594421	2					
ANR	5594993	ParameterList	"const WinPerf_CounterDef * pCounter , const WinPerf_TimerDeltas & time , const BYTE * curr , const BYTE * prev"		5594421	3					
ANR	5594994	Parameter	const WinPerf_CounterDef * pCounter	1253:1:40086:40120	5594421	0	True				
ANR	5594995	ParameterType	const WinPerf_CounterDef *		5594421	0					
ANR	5594996	Identifier	pCounter		5594421	1					
ANR	5594997	Parameter	const WinPerf_TimerDeltas & time	1254:1:40125:40156	5594421	1	True				
ANR	5594998	ParameterType	const WinPerf_TimerDeltas &		5594421	0					
ANR	5594999	Identifier	time		5594421	1					
ANR	5595000	Parameter	const BYTE * curr	1255:1:40161:40177	5594421	2	True				
ANR	5595001	ParameterType	const BYTE *		5594421	0					
ANR	5595002	Identifier	curr		5594421	1					
ANR	5595003	Parameter	const BYTE * prev	1256:1:40182:40198	5594421	3	True				
ANR	5595004	ParameterType	const BYTE *		5594421	0					
ANR	5595005	Identifier	prev		5594421	1					
ANR	5595006	CFGEntryNode	ENTRY		5594421		True				
ANR	5595007	CFGExitNode	EXIT		5594421		True				
ANR	5595008	Symbol	& val		5594421						
ANR	5595009	Symbol	mult		5594421						
ANR	5595010	Symbol	PERF_COUNTER_RATE		5594421						
ANR	5595011	Symbol	prev		5594421						
ANR	5595012	Symbol	PERF_COUNTER_PRECISION		5594421						
ANR	5595013	Symbol	PERF_COUNTER_QUEUELEN		5594421						
ANR	5595014	Symbol	type		5594421						
ANR	5595015	Symbol	* sz		5594421						
ANR	5595016	Symbol	pCounter -> CounterType		5594421						
ANR	5595017	Symbol	multi		5594421						
ANR	5595018	Symbol	PERF_NUMBER_DECIMAL		5594421						
ANR	5595019	Symbol	pCounter -> CounterOffset		5594421						
ANR	5595020	Symbol	PERF_COUNTER_BASE		5594421						
ANR	5595021	Symbol	PERF_TYPE_ZERO		5594421						
ANR	5595022	Symbol	time . nanos		5594421						
ANR	5595023	Symbol	PERF_INVERSE_COUNTER		5594421						
ANR	5595024	Symbol	curr		5594421						
ANR	5595025	Symbol	time . headfreq		5594421						
ANR	5595026	Symbol	PERF_DISPLAY_SECONDS		5594421						
ANR	5595027	Symbol	PERF_TYPE_NUMBER		5594421						
ANR	5595028	Symbol	val		5594421						
ANR	5595029	Symbol	time . objabs		5594421						
ANR	5595030	Symbol	NULL		5594421						
ANR	5595031	Symbol	time . objfreq		5594421						
ANR	5595032	Symbol	old		5594421						
ANR	5595033	Symbol	pBase		5594421						
ANR	5595034	Symbol	D_FULLDEBUG		5594421						
ANR	5595035	Symbol	time . head		5594421						
ANR	5595036	Symbol	time . obj		5594421						
ANR	5595037	Symbol	PERF_COUNTER_ELAPSED		5594421						
ANR	5595038	Symbol	PERF_DELTA_COUNTER		5594421						
ANR	5595039	Symbol	PERF_DISPLAY_PERCENT		5594421						
ANR	5595040	Symbol	pCounter		5594421						
ANR	5595041	Symbol	GetRawValue		5594421						
ANR	5595042	Symbol	* pBase		5594421						
ANR	5595043	Symbol	PERF_SIZE_LARGE		5594421						
ANR	5595044	Symbol	scale		5594421						
ANR	5595045	Symbol	* pCounter		5594421						
ANR	5595046	Symbol	PERF_COUNTER_FRACTION		5594421						
ANR	5595047	Symbol	pszUnits		5594421						
ANR	5595048	Symbol	value		5594421						
ANR	5595049	Symbol	* ( DWORD * ) & val		5594421						
ANR	5595050	Symbol	PERF_MULTI_COUNTER		5594421						
ANR	5595051	Symbol	* pCounter -> CounterOffset		5594421						
ANR	5595052	Symbol	PERF_DISPLAY_PER_SEC		5594421						
ANR	5595053	Symbol	PERF_DISPLAY_NO_SUFFIX		5594421						
ANR	5595054	Symbol	sz		5594421						
ANR	5595055	Symbol	pBase -> CounterType		5594421						
ANR	5595056	Symbol	PERF_TIMER_100NS		5594421						
ANR	5595057	Symbol	* * pCounter		5594421						
ANR	5595058	Symbol	PERF_COUNTER_VALUE		5594421						
ANR	5595059	Symbol	* curr		5594421						
ANR	5595060	Symbol	time		5594421						
ANR	5595061	Symbol	PERF_OBJECT_TIMER		5594421						
ANR	5595062	Symbol	strdup		5594421						
ANR	5595063	Symbol	baseCurr		5594421						
ANR	5595064	Function	init_WinPerf_Query	1376:0:43424:46000							
ANR	5595065	FunctionDef	"init_WinPerf_Query (const char * pszRegKey , const char * pszValueName , WinPerf_Query & query)"		5595064	0					
ANR	5595066	CompoundStatement		1380:0:43528:46000	5595064	0					
ANR	5595067	ExpressionStatement	"ZeroMemory ( & query , sizeof ( query ) )"	1381:1:43531:43564	5595064	0	True				
ANR	5595068	CallExpression	"ZeroMemory ( & query , sizeof ( query ) )"		5595064	0					
ANR	5595069	Callee	ZeroMemory		5595064	0					
ANR	5595070	Identifier	ZeroMemory		5595064	0					
ANR	5595071	ArgumentList	& query		5595064	1					
ANR	5595072	Argument	& query		5595064	0					
ANR	5595073	UnaryOperationExpression	& query		5595064	0					
ANR	5595074	UnaryOperator	&		5595064	0					
ANR	5595075	Identifier	query		5595064	1					
ANR	5595076	Argument	sizeof ( query )		5595064	1					
ANR	5595077	SizeofExpression	sizeof ( query )		5595064	0					
ANR	5595078	Sizeof	sizeof		5595064	0					
ANR	5595079	SizeofOperand	query		5595064	1					
ANR	5595080	IdentifierDeclStatement	char * pszTemp = NULL ;	1383:1:43568:43589	5595064	1	True				
ANR	5595081	IdentifierDecl	* pszTemp = NULL		5595064	0					
ANR	5595082	IdentifierDeclType	char *		5595064	0					
ANR	5595083	Identifier	pszTemp		5595064	1					
ANR	5595084	AssignmentExpression	* pszTemp = NULL		5595064	2		=			
ANR	5595085	Identifier	NULL		5595064	0					
ANR	5595086	Identifier	NULL		5595064	1					
ANR	5595087	IfStatement	"if ( ( ! pszValueName || ! pszValueName [ 0 ] ) && strchr ( pszRegKey , '\\\\' ) )"		5595064	2					
ANR	5595088	Condition	"( ! pszValueName || ! pszValueName [ 0 ] ) && strchr ( pszRegKey , '\\\\' )"	1385:5:43636:43700	5595064	0	True				
ANR	5595089	AndExpression	"( ! pszValueName || ! pszValueName [ 0 ] ) && strchr ( pszRegKey , '\\\\' )"		5595064	0		&&			
ANR	5595090	OrExpression	! pszValueName || ! pszValueName [ 0 ]		5595064	0		||			
ANR	5595091	UnaryOperationExpression	! pszValueName		5595064	0					
ANR	5595092	UnaryOperator	!		5595064	0					
ANR	5595093	Identifier	pszValueName		5595064	1					
ANR	5595094	UnaryOperationExpression	! pszValueName [ 0 ]		5595064	1					
ANR	5595095	UnaryOperator	!		5595064	0					
ANR	5595096	ArrayIndexing	pszValueName [ 0 ]		5595064	1					
ANR	5595097	Identifier	pszValueName		5595064	0					
ANR	5595098	PrimaryExpression	0		5595064	1					
ANR	5595099	CallExpression	"strchr ( pszRegKey , '\\\\' )"		5595064	1					
ANR	5595100	Callee	strchr		5595064	0					
ANR	5595101	Identifier	strchr		5595064	0					
ANR	5595102	ArgumentList	pszRegKey		5595064	1					
ANR	5595103	Argument	pszRegKey		5595064	0					
ANR	5595104	Identifier	pszRegKey		5595064	0					
ANR	5595105	Argument	'\\\\'		5595064	1					
ANR	5595106	PrimaryExpression	'\\\\'		5595064	0					
ANR	5595107	CompoundStatement		9:2:256:297	5595064	1					
ANR	5595108	ExpressionStatement	pszTemp = strdup ( pszRegKey )	1387:2:43708:43735	5595064	0	True				
ANR	5595109	AssignmentExpression	pszTemp = strdup ( pszRegKey )		5595064	0		=			
ANR	5595110	Identifier	pszTemp		5595064	0					
ANR	5595111	CallExpression	strdup ( pszRegKey )		5595064	1					
ANR	5595112	Callee	strdup		5595064	0					
ANR	5595113	Identifier	strdup		5595064	0					
ANR	5595114	ArgumentList	pszRegKey		5595064	1					
ANR	5595115	Argument	pszRegKey		5595064	0					
ANR	5595116	Identifier	pszRegKey		5595064	0					
ANR	5595117	IdentifierDeclStatement	"char * pszCounter = strchr ( pszTemp , '\\\\' ) ;"	1388:2:43785:43826	5595064	1	True				
ANR	5595118	IdentifierDecl	"* pszCounter = strchr ( pszTemp , '\\\\' )"		5595064	0					
ANR	5595119	IdentifierDeclType	char *		5595064	0					
ANR	5595120	Identifier	pszCounter		5595064	1					
ANR	5595121	AssignmentExpression	"* pszCounter = strchr ( pszTemp , '\\\\' )"		5595064	2		=			
ANR	5595122	Identifier	pszCounter		5595064	0					
ANR	5595123	CallExpression	"strchr ( pszTemp , '\\\\' )"		5595064	1					
ANR	5595124	Callee	strchr		5595064	0					
ANR	5595125	Identifier	strchr		5595064	0					
ANR	5595126	ArgumentList	pszTemp		5595064	1					
ANR	5595127	Argument	pszTemp		5595064	0					
ANR	5595128	Identifier	pszTemp		5595064	0					
ANR	5595129	Argument	'\\\\'		5595064	1					
ANR	5595130	PrimaryExpression	'\\\\'		5595064	0					
ANR	5595131	IfStatement	if ( pszCounter )		5595064	2					
ANR	5595132	Condition	pszCounter	1389:6:43834:43843	5595064	0	True				
ANR	5595133	Identifier	pszCounter		5595064	0					
ANR	5595134	CompoundStatement		11:2:319:319	5595064	1					
ANR	5595135	ExpressionStatement	* pszCounter ++ = 0	1391:11:43861:43878	5595064	0	True				
ANR	5595136	AssignmentExpression	* pszCounter ++ = 0		5595064	0		=			
ANR	5595137	UnaryOperationExpression	* pszCounter ++		5595064	0					
ANR	5595138	UnaryOperator	*		5595064	0					
ANR	5595139	PostIncDecOperationExpression	pszCounter ++		5595064	1					
ANR	5595140	Identifier	pszCounter		5595064	0					
ANR	5595141	IncDec	++		5595064	1					
ANR	5595142	PrimaryExpression	0		5595064	1					
ANR	5595143	ExpressionStatement	pszRegKey = pszTemp	1392:3:43883:43902	5595064	1	True				
ANR	5595144	AssignmentExpression	pszRegKey = pszTemp		5595064	0		=			
ANR	5595145	Identifier	pszRegKey		5595064	0					
ANR	5595146	Identifier	pszTemp		5595064	1					
ANR	5595147	ExpressionStatement	pszValueName = pszCounter	1393:3:43907:43932	5595064	2	True				
ANR	5595148	AssignmentExpression	pszValueName = pszCounter		5595064	0		=			
ANR	5595149	Identifier	pszValueName		5595064	0					
ANR	5595150	Identifier	pszCounter		5595064	1					
ANR	5595151	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""cracking key as key=\\""%s\\"", counter=\\""%s\\""\\n"" , pszRegKey , pszValueName )"	1395:2:43940:44043	5595064	3	True				
ANR	5595152	CallExpression	"dprintf ( D_FULLDEBUG , ""cracking key as key=\\""%s\\"", counter=\\""%s\\""\\n"" , pszRegKey , pszValueName )"		5595064	0					
ANR	5595153	Callee	dprintf		5595064	0					
ANR	5595154	Identifier	dprintf		5595064	0					
ANR	5595155	ArgumentList	D_FULLDEBUG		5595064	1					
ANR	5595156	Argument	D_FULLDEBUG		5595064	0					
ANR	5595157	Identifier	D_FULLDEBUG		5595064	0					
ANR	5595158	Argument	"""cracking key as key=\\""%s\\"", counter=\\""%s\\""\\n"""		5595064	1					
ANR	5595159	PrimaryExpression	"""cracking key as key=\\""%s\\"", counter=\\""%s\\""\\n"""		5595064	0					
ANR	5595160	Argument	pszRegKey		5595064	2					
ANR	5595161	Identifier	pszRegKey		5595064	0					
ANR	5595162	Argument	pszValueName		5595064	3					
ANR	5595163	Identifier	pszValueName		5595064	0					
ANR	5595164	IfStatement	"if ( strchr ( pszRegKey , '(' ) )"		5595064	3					
ANR	5595165	Condition	"strchr ( pszRegKey , '(' )"	1398:5:44053:44074	5595064	0	True				
ANR	5595166	CallExpression	"strchr ( pszRegKey , '(' )"		5595064	0					
ANR	5595167	Callee	strchr		5595064	0					
ANR	5595168	Identifier	strchr		5595064	0					
ANR	5595169	ArgumentList	pszRegKey		5595064	1					
ANR	5595170	Argument	pszRegKey		5595064	0					
ANR	5595171	Identifier	pszRegKey		5595064	0					
ANR	5595172	Argument	'('		5595064	1					
ANR	5595173	PrimaryExpression	'('		5595064	0					
ANR	5595174	CompoundStatement		24:2:674:715	5595064	1					
ANR	5595175	IdentifierDeclStatement	char * pszInst = NULL ;	1400:2:44082:44103	5595064	0	True				
ANR	5595176	IdentifierDecl	* pszInst = NULL		5595064	0					
ANR	5595177	IdentifierDeclType	char *		5595064	0					
ANR	5595178	Identifier	pszInst		5595064	1					
ANR	5595179	AssignmentExpression	* pszInst = NULL		5595064	2		=			
ANR	5595180	Identifier	NULL		5595064	0					
ANR	5595181	Identifier	NULL		5595064	1					
ANR	5595182	IfStatement	if ( ! pszTemp )		5595064	1					
ANR	5595183	Condition	! pszTemp	1401:7:44112:44120	5595064	0	True				
ANR	5595184	UnaryOperationExpression	! pszTemp		5595064	0					
ANR	5595185	UnaryOperator	!		5595064	0					
ANR	5595186	Identifier	pszTemp		5595064	1					
ANR	5595187	ExpressionStatement	pszTemp = strdup ( pszRegKey )	1402:3:44126:44153	5595064	1	True				
ANR	5595188	AssignmentExpression	pszTemp = strdup ( pszRegKey )		5595064	0		=			
ANR	5595189	Identifier	pszTemp		5595064	0					
ANR	5595190	CallExpression	strdup ( pszRegKey )		5595064	1					
ANR	5595191	Callee	strdup		5595064	0					
ANR	5595192	Identifier	strdup		5595064	0					
ANR	5595193	ArgumentList	pszRegKey		5595064	1					
ANR	5595194	Argument	pszRegKey		5595064	0					
ANR	5595195	Identifier	pszRegKey		5595064	0					
ANR	5595196	IdentifierDeclStatement	"char * pszInstance = strchr ( pszTemp , '(' ) ;"	1403:2:44203:44244	5595064	2	True				
ANR	5595197	IdentifierDecl	"* pszInstance = strchr ( pszTemp , '(' )"		5595064	0					
ANR	5595198	IdentifierDeclType	char *		5595064	0					
ANR	5595199	Identifier	pszInstance		5595064	1					
ANR	5595200	AssignmentExpression	"* pszInstance = strchr ( pszTemp , '(' )"		5595064	2		=			
ANR	5595201	Identifier	pszInstance		5595064	0					
ANR	5595202	CallExpression	"strchr ( pszTemp , '(' )"		5595064	1					
ANR	5595203	Callee	strchr		5595064	0					
ANR	5595204	Identifier	strchr		5595064	0					
ANR	5595205	ArgumentList	pszTemp		5595064	1					
ANR	5595206	Argument	pszTemp		5595064	0					
ANR	5595207	Identifier	pszTemp		5595064	0					
ANR	5595208	Argument	'('		5595064	1					
ANR	5595209	PrimaryExpression	'('		5595064	0					
ANR	5595210	IfStatement	if ( pszInstance )		5595064	3					
ANR	5595211	Condition	pszInstance	1404:6:44252:44262	5595064	0	True				
ANR	5595212	Identifier	pszInstance		5595064	0					
ANR	5595213	CompoundStatement		26:2:738:738	5595064	1					
ANR	5595214	ExpressionStatement	* pszInstance ++ = 0	1406:3:44272:44290	5595064	0	True				
ANR	5595215	AssignmentExpression	* pszInstance ++ = 0		5595064	0		=			
ANR	5595216	UnaryOperationExpression	* pszInstance ++		5595064	0					
ANR	5595217	UnaryOperator	*		5595064	0					
ANR	5595218	PostIncDecOperationExpression	pszInstance ++		5595064	1					
ANR	5595219	Identifier	pszInstance		5595064	0					
ANR	5595220	IncDec	++		5595064	1					
ANR	5595221	PrimaryExpression	0		5595064	1					
ANR	5595222	ExpressionStatement	pszInst = pszInstance	1407:3:44295:44316	5595064	1	True				
ANR	5595223	AssignmentExpression	pszInst = pszInstance		5595064	0		=			
ANR	5595224	Identifier	pszInst		5595064	0					
ANR	5595225	Identifier	pszInstance		5595064	1					
ANR	5595226	ExpressionStatement	"pszInstance = strchr ( pszInstance , ')' )"	1408:3:44321:44359	5595064	2	True				
ANR	5595227	AssignmentExpression	"pszInstance = strchr ( pszInstance , ')' )"		5595064	0		=			
ANR	5595228	Identifier	pszInstance		5595064	0					
ANR	5595229	CallExpression	"strchr ( pszInstance , ')' )"		5595064	1					
ANR	5595230	Callee	strchr		5595064	0					
ANR	5595231	Identifier	strchr		5595064	0					
ANR	5595232	ArgumentList	pszInstance		5595064	1					
ANR	5595233	Argument	pszInstance		5595064	0					
ANR	5595234	Identifier	pszInstance		5595064	0					
ANR	5595235	Argument	')'		5595064	1					
ANR	5595236	PrimaryExpression	')'		5595064	0					
ANR	5595237	IfStatement	if ( pszInstance )		5595064	3					
ANR	5595238	Condition	pszInstance	1409:7:44368:44378	5595064	0	True				
ANR	5595239	Identifier	pszInstance		5595064	0					
ANR	5595240	CompoundStatement		31:3:855:855	5595064	1					
ANR	5595241	ExpressionStatement	* pszInstance = 0	1411:4:44390:44406	5595064	0	True				
ANR	5595242	AssignmentExpression	* pszInstance = 0		5595064	0		=			
ANR	5595243	UnaryOperationExpression	* pszInstance		5595064	0					
ANR	5595244	UnaryOperator	*		5595064	0					
ANR	5595245	Identifier	pszInstance		5595064	1					
ANR	5595246	PrimaryExpression	0		5595064	1					
ANR	5595247	ExpressionStatement	query . ixInst = ( int ) ( pszInst - pszTemp )	1412:4:44412:44451	5595064	1	True				
ANR	5595248	AssignmentExpression	query . ixInst = ( int ) ( pszInst - pszTemp )		5595064	0		=			
ANR	5595249	MemberAccess	query . ixInst		5595064	0					
ANR	5595250	Identifier	query		5595064	0					
ANR	5595251	Identifier	ixInst		5595064	1					
ANR	5595252	CastExpression	( int ) ( pszInst - pszTemp )		5595064	1					
ANR	5595253	CastTarget	int		5595064	0					
ANR	5595254	AdditiveExpression	pszInst - pszTemp		5595064	1		-			
ANR	5595255	Identifier	pszInst		5595064	0					
ANR	5595256	Identifier	pszTemp		5595064	1					
ANR	5595257	ExpressionStatement	query . cchInst = ( int ) ( pszInstance - pszInst )	1413:4:44457:44501	5595064	2	True				
ANR	5595258	AssignmentExpression	query . cchInst = ( int ) ( pszInstance - pszInst )		5595064	0		=			
ANR	5595259	MemberAccess	query . cchInst		5595064	0					
ANR	5595260	Identifier	query		5595064	0					
ANR	5595261	Identifier	cchInst		5595064	1					
ANR	5595262	CastExpression	( int ) ( pszInstance - pszInst )		5595064	1					
ANR	5595263	CastTarget	int		5595064	0					
ANR	5595264	AdditiveExpression	pszInstance - pszInst		5595064	1		-			
ANR	5595265	Identifier	pszInstance		5595064	0					
ANR	5595266	Identifier	pszInst		5595064	1					
ANR	5595267	ExpressionStatement	query . idInst = atoi ( pszInst )	1414:4:44507:44535	5595064	3	True				
ANR	5595268	AssignmentExpression	query . idInst = atoi ( pszInst )		5595064	0		=			
ANR	5595269	MemberAccess	query . idInst		5595064	0					
ANR	5595270	Identifier	query		5595064	0					
ANR	5595271	Identifier	idInst		5595064	1					
ANR	5595272	CallExpression	atoi ( pszInst )		5595064	1					
ANR	5595273	Callee	atoi		5595064	0					
ANR	5595274	Identifier	atoi		5595064	0					
ANR	5595275	ArgumentList	pszInst		5595064	1					
ANR	5595276	Argument	pszInst		5595064	0					
ANR	5595277	Identifier	pszInst		5595064	0					
ANR	5595278	ExpressionStatement	pszRegKey = pszTemp	1416:3:44545:44564	5595064	4	True				
ANR	5595279	AssignmentExpression	pszRegKey = pszTemp		5595064	0		=			
ANR	5595280	Identifier	pszRegKey		5595064	0					
ANR	5595281	Identifier	pszTemp		5595064	1					
ANR	5595282	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""cracking key as key=\\""%s\\"", inst=\\""%s\\""\\n"" , pszRegKey , pszInst )"	1418:2:44572:44667	5595064	4	True				
ANR	5595283	CallExpression	"dprintf ( D_FULLDEBUG , ""cracking key as key=\\""%s\\"", inst=\\""%s\\""\\n"" , pszRegKey , pszInst )"		5595064	0					
ANR	5595284	Callee	dprintf		5595064	0					
ANR	5595285	Identifier	dprintf		5595064	0					
ANR	5595286	ArgumentList	D_FULLDEBUG		5595064	1					
ANR	5595287	Argument	D_FULLDEBUG		5595064	0					
ANR	5595288	Identifier	D_FULLDEBUG		5595064	0					
ANR	5595289	Argument	"""cracking key as key=\\""%s\\"", inst=\\""%s\\""\\n"""		5595064	1					
ANR	5595290	PrimaryExpression	"""cracking key as key=\\""%s\\"", inst=\\""%s\\""\\n"""		5595064	0					
ANR	5595291	Argument	pszRegKey		5595064	2					
ANR	5595292	Identifier	pszRegKey		5595064	0					
ANR	5595293	Argument	pszInst		5595064	3					
ANR	5595294	Identifier	pszInst		5595064	0					
ANR	5595295	IfStatement	if ( isdigit ( pszRegKey [ 0 ] ) )		5595064	4					
ANR	5595296	Condition	isdigit ( pszRegKey [ 0 ] )	1425:5:44804:44824	5595064	0	True				
ANR	5595297	CallExpression	isdigit ( pszRegKey [ 0 ] )		5595064	0					
ANR	5595298	Callee	isdigit		5595064	0					
ANR	5595299	Identifier	isdigit		5595064	0					
ANR	5595300	ArgumentList	pszRegKey [ 0 ]		5595064	1					
ANR	5595301	Argument	pszRegKey [ 0 ]		5595064	0					
ANR	5595302	ArrayIndexing	pszRegKey [ 0 ]		5595064	0					
ANR	5595303	Identifier	pszRegKey		5595064	0					
ANR	5595304	PrimaryExpression	0		5595064	1					
ANR	5595305	ExpressionStatement	query . idKey = atoi ( pszRegKey )	1426:2:44829:44858	5595064	1	True				
ANR	5595306	AssignmentExpression	query . idKey = atoi ( pszRegKey )		5595064	0		=			
ANR	5595307	MemberAccess	query . idKey		5595064	0					
ANR	5595308	Identifier	query		5595064	0					
ANR	5595309	Identifier	idKey		5595064	1					
ANR	5595310	CallExpression	atoi ( pszRegKey )		5595064	1					
ANR	5595311	Callee	atoi		5595064	0					
ANR	5595312	Identifier	atoi		5595064	0					
ANR	5595313	ArgumentList	pszRegKey		5595064	1					
ANR	5595314	Argument	pszRegKey		5595064	0					
ANR	5595315	Identifier	pszRegKey		5595064	0					
ANR	5595316	ElseStatement	else		5595064	0					
ANR	5595317	CompoundStatement		51:2:1421:1453	5595064	0					
ANR	5595318	ExpressionStatement	init_windows_performance_hashtable ( )	1429:2:44871:44907	5595064	0	True				
ANR	5595319	CallExpression	init_windows_performance_hashtable ( )		5595064	0					
ANR	5595320	Callee	init_windows_performance_hashtable		5595064	0					
ANR	5595321	Identifier	init_windows_performance_hashtable		5595064	0					
ANR	5595322	ArgumentList			5595064	1					
ANR	5595323	IdentifierDeclStatement	const char * pszPerfIndex = NULL ;	1430:2:44950:44982	5595064	1	True				
ANR	5595324	IdentifierDecl	* pszPerfIndex = NULL		5595064	0					
ANR	5595325	IdentifierDeclType	const char *		5595064	0					
ANR	5595326	Identifier	pszPerfIndex		5595064	1					
ANR	5595327	AssignmentExpression	* pszPerfIndex = NULL		5595064	2		=			
ANR	5595328	Identifier	NULL		5595064	0					
ANR	5595329	Identifier	NULL		5595064	1					
ANR	5595330	IfStatement	"if ( rl . pPerfTable && ( rl . pPerfTable -> lookup ( pszRegKey , pszPerfIndex ) >= 0 ) )"		5595064	2					
ANR	5595331	Condition	"rl . pPerfTable && ( rl . pPerfTable -> lookup ( pszRegKey , pszPerfIndex ) >= 0 )"	1431:6:44990:45063	5595064	0	True				
ANR	5595332	AndExpression	"rl . pPerfTable && ( rl . pPerfTable -> lookup ( pszRegKey , pszPerfIndex ) >= 0 )"		5595064	0		&&			
ANR	5595333	MemberAccess	rl . pPerfTable		5595064	0					
ANR	5595334	Identifier	rl		5595064	0					
ANR	5595335	Identifier	pPerfTable		5595064	1					
ANR	5595336	RelationalExpression	"rl . pPerfTable -> lookup ( pszRegKey , pszPerfIndex ) >= 0"		5595064	1		>=			
ANR	5595337	CallExpression	"rl . pPerfTable -> lookup ( pszRegKey , pszPerfIndex )"		5595064	0					
ANR	5595338	Callee	rl . pPerfTable -> lookup		5595064	0					
ANR	5595339	PtrMemberAccess	rl . pPerfTable -> lookup		5595064	0					
ANR	5595340	MemberAccess	rl . pPerfTable		5595064	0					
ANR	5595341	Identifier	rl		5595064	0					
ANR	5595342	Identifier	pPerfTable		5595064	1					
ANR	5595343	Identifier	lookup		5595064	1					
ANR	5595344	ArgumentList	pszRegKey		5595064	1					
ANR	5595345	Argument	pszRegKey		5595064	0					
ANR	5595346	Identifier	pszRegKey		5595064	0					
ANR	5595347	Argument	pszPerfIndex		5595064	1					
ANR	5595348	Identifier	pszPerfIndex		5595064	0					
ANR	5595349	PrimaryExpression	0		5595064	1					
ANR	5595350	CompoundStatement		54:2:1539:1539	5595064	1					
ANR	5595351	ExpressionStatement	query . idKey = atoi ( pszPerfIndex )	1434:3:45073:45105	5595064	0	True				
ANR	5595352	AssignmentExpression	query . idKey = atoi ( pszPerfIndex )		5595064	0		=			
ANR	5595353	MemberAccess	query . idKey		5595064	0					
ANR	5595354	Identifier	query		5595064	0					
ANR	5595355	Identifier	idKey		5595064	1					
ANR	5595356	CallExpression	atoi ( pszPerfIndex )		5595064	1					
ANR	5595357	Callee	atoi		5595064	0					
ANR	5595358	Identifier	atoi		5595064	0					
ANR	5595359	ArgumentList	pszPerfIndex		5595064	1					
ANR	5595360	Argument	pszPerfIndex		5595064	0					
ANR	5595361	Identifier	pszPerfIndex		5595064	0					
ANR	5595362	IfStatement	if ( pszValueName && pszValueName [ 0 ] )		5595064	5					
ANR	5595363	Condition	pszValueName && pszValueName [ 0 ]	1438:5:45120:45150	5595064	0	True				
ANR	5595364	AndExpression	pszValueName && pszValueName [ 0 ]		5595064	0		&&			
ANR	5595365	Identifier	pszValueName		5595064	0					
ANR	5595366	ArrayIndexing	pszValueName [ 0 ]		5595064	1					
ANR	5595367	Identifier	pszValueName		5595064	0					
ANR	5595368	PrimaryExpression	0		5595064	1					
ANR	5595369	CompoundStatement		60:1:1625:1625	5595064	1					
ANR	5595370	IfStatement	if ( isdigit ( pszValueName [ 0 ] ) )		5595064	0					
ANR	5595371	Condition	isdigit ( pszValueName [ 0 ] )	1440:6:45162:45185	5595064	0	True				
ANR	5595372	CallExpression	isdigit ( pszValueName [ 0 ] )		5595064	0					
ANR	5595373	Callee	isdigit		5595064	0					
ANR	5595374	Identifier	isdigit		5595064	0					
ANR	5595375	ArgumentList	pszValueName [ 0 ]		5595064	1					
ANR	5595376	Argument	pszValueName [ 0 ]		5595064	0					
ANR	5595377	ArrayIndexing	pszValueName [ 0 ]		5595064	0					
ANR	5595378	Identifier	pszValueName		5595064	0					
ANR	5595379	PrimaryExpression	0		5595064	1					
ANR	5595380	ExpressionStatement	query . idCounter = atoi ( pszValueName )	1441:3:45191:45227	5595064	1	True				
ANR	5595381	AssignmentExpression	query . idCounter = atoi ( pszValueName )		5595064	0		=			
ANR	5595382	MemberAccess	query . idCounter		5595064	0					
ANR	5595383	Identifier	query		5595064	0					
ANR	5595384	Identifier	idCounter		5595064	1					
ANR	5595385	CallExpression	atoi ( pszValueName )		5595064	1					
ANR	5595386	Callee	atoi		5595064	0					
ANR	5595387	Identifier	atoi		5595064	0					
ANR	5595388	ArgumentList	pszValueName		5595064	1					
ANR	5595389	Argument	pszValueName		5595064	0					
ANR	5595390	Identifier	pszValueName		5595064	0					
ANR	5595391	ElseStatement	else		5595064	0					
ANR	5595392	CompoundStatement		66:3:1794:1829	5595064	0					
ANR	5595393	ExpressionStatement	init_windows_performance_hashtable ( )	1444:3:45243:45279	5595064	0	True				
ANR	5595394	CallExpression	init_windows_performance_hashtable ( )		5595064	0					
ANR	5595395	Callee	init_windows_performance_hashtable		5595064	0					
ANR	5595396	Identifier	init_windows_performance_hashtable		5595064	0					
ANR	5595397	ArgumentList			5595064	1					
ANR	5595398	IdentifierDeclStatement	const char * pszCounterIndex = NULL ;	1445:3:45323:45358	5595064	1	True				
ANR	5595399	IdentifierDecl	* pszCounterIndex = NULL		5595064	0					
ANR	5595400	IdentifierDeclType	const char *		5595064	0					
ANR	5595401	Identifier	pszCounterIndex		5595064	1					
ANR	5595402	AssignmentExpression	* pszCounterIndex = NULL		5595064	2		=			
ANR	5595403	Identifier	NULL		5595064	0					
ANR	5595404	Identifier	NULL		5595064	1					
ANR	5595405	IfStatement	if ( rl . pPerfTable )		5595064	2					
ANR	5595406	Condition	rl . pPerfTable	1446:7:45367:45379	5595064	0	True				
ANR	5595407	MemberAccess	rl . pPerfTable		5595064	0					
ANR	5595408	Identifier	rl		5595064	0					
ANR	5595409	Identifier	pPerfTable		5595064	1					
ANR	5595410	CompoundStatement		72:4:2016:2026	5595064	1					
ANR	5595411	IdentifierDeclStatement	"void * cur = NULL , * next = NULL ;"	1450:4:45508:45539	5595064	0	True				
ANR	5595412	IdentifierDecl	* cur = NULL		5595064	0					
ANR	5595413	IdentifierDeclType	void *		5595064	0					
ANR	5595414	Identifier	cur		5595064	1					
ANR	5595415	AssignmentExpression	* cur = NULL		5595064	2		=			
ANR	5595416	Identifier	NULL		5595064	0					
ANR	5595417	Identifier	NULL		5595064	1					
ANR	5595418	IdentifierDecl	* next = NULL		5595064	1					
ANR	5595419	IdentifierDeclType	void *		5595064	0					
ANR	5595420	Identifier	next		5595064	1					
ANR	5595421	AssignmentExpression	* next = NULL		5595064	2		=			
ANR	5595422	Identifier	NULL		5595064	0					
ANR	5595423	Identifier	NULL		5595064	1					
ANR	5595424	IdentifierDeclStatement	int ix = 0 ;	1451:4:45545:45555	5595064	1	True				
ANR	5595425	IdentifierDecl	ix = 0		5595064	0					
ANR	5595426	IdentifierDeclType	int		5595064	0					
ANR	5595427	Identifier	ix		5595064	1					
ANR	5595428	AssignmentExpression	ix = 0		5595064	2		=			
ANR	5595429	Identifier	ix		5595064	0					
ANR	5595430	PrimaryExpression	0		5595064	1					
ANR	5595431	WhileStatement	"while ( rl . pPerfTable -> getNext ( pszValueName , cur , pszCounterIndex , next ) >= 0 )"		5595064	2					
ANR	5595432	Condition	"rl . pPerfTable -> getNext ( pszValueName , cur , pszCounterIndex , next ) >= 0"	1452:11:45568:45636	5595064	0	True				
ANR	5595433	RelationalExpression	"rl . pPerfTable -> getNext ( pszValueName , cur , pszCounterIndex , next ) >= 0"		5595064	0		>=			
ANR	5595434	CallExpression	"rl . pPerfTable -> getNext ( pszValueName , cur , pszCounterIndex , next )"		5595064	0					
ANR	5595435	Callee	rl . pPerfTable -> getNext		5595064	0					
ANR	5595436	PtrMemberAccess	rl . pPerfTable -> getNext		5595064	0					
ANR	5595437	MemberAccess	rl . pPerfTable		5595064	0					
ANR	5595438	Identifier	rl		5595064	0					
ANR	5595439	Identifier	pPerfTable		5595064	1					
ANR	5595440	Identifier	getNext		5595064	1					
ANR	5595441	ArgumentList	pszValueName		5595064	1					
ANR	5595442	Argument	pszValueName		5595064	0					
ANR	5595443	Identifier	pszValueName		5595064	0					
ANR	5595444	Argument	cur		5595064	1					
ANR	5595445	Identifier	cur		5595064	0					
ANR	5595446	Argument	pszCounterIndex		5595064	2					
ANR	5595447	Identifier	pszCounterIndex		5595064	0					
ANR	5595448	Argument	next		5595064	3					
ANR	5595449	Identifier	next		5595064	0					
ANR	5595450	PrimaryExpression	0		5595064	1					
ANR	5595451	CompoundStatement		74:4:2114:2114	5595064	1					
ANR	5595452	ExpressionStatement	( ( DWORD * ) & query . idCounter ) [ ix ++ ] = atoi ( pszCounterIndex )	1454:5:45650:45706	5595064	0	True				
ANR	5595453	AssignmentExpression	( ( DWORD * ) & query . idCounter ) [ ix ++ ] = atoi ( pszCounterIndex )		5595064	0		=			
ANR	5595454	ArrayIndexing	( ( DWORD * ) & query . idCounter ) [ ix ++ ]		5595064	0					
ANR	5595455	CastExpression	( DWORD * ) & query . idCounter		5595064	0					
ANR	5595456	CastTarget	DWORD *		5595064	0					
ANR	5595457	UnaryOperationExpression	& query . idCounter		5595064	1					
ANR	5595458	UnaryOperator	&		5595064	0					
ANR	5595459	MemberAccess	query . idCounter		5595064	1					
ANR	5595460	Identifier	query		5595064	0					
ANR	5595461	Identifier	idCounter		5595064	1					
ANR	5595462	PostIncDecOperationExpression	ix ++		5595064	1					
ANR	5595463	Identifier	ix		5595064	0					
ANR	5595464	IncDec	++		5595064	1					
ANR	5595465	CallExpression	atoi ( pszCounterIndex )		5595064	1					
ANR	5595466	Callee	atoi		5595064	0					
ANR	5595467	Identifier	atoi		5595064	0					
ANR	5595468	ArgumentList	pszCounterIndex		5595064	1					
ANR	5595469	Argument	pszCounterIndex		5595064	0					
ANR	5595470	Identifier	pszCounterIndex		5595064	0					
ANR	5595471	ExpressionStatement	cur = next	1455:5:45713:45723	5595064	1	True				
ANR	5595472	AssignmentExpression	cur = next		5595064	0		=			
ANR	5595473	Identifier	cur		5595064	0					
ANR	5595474	Identifier	next		5595064	1					
ANR	5595475	IfStatement	if ( query . idAlt [ NUM_ELEMENTS ( query . idAlt ) - 1 ] != 0 )		5595064	3					
ANR	5595476	Condition	query . idAlt [ NUM_ELEMENTS ( query . idAlt ) - 1 ] != 0	1457:8:45739:45783	5595064	0	True				
ANR	5595477	EqualityExpression	query . idAlt [ NUM_ELEMENTS ( query . idAlt ) - 1 ] != 0		5595064	0		!=			
ANR	5595478	ArrayIndexing	query . idAlt [ NUM_ELEMENTS ( query . idAlt ) - 1 ]		5595064	0					
ANR	5595479	MemberAccess	query . idAlt		5595064	0					
ANR	5595480	Identifier	query		5595064	0					
ANR	5595481	Identifier	idAlt		5595064	1					
ANR	5595482	AdditiveExpression	NUM_ELEMENTS ( query . idAlt ) - 1		5595064	1		-			
ANR	5595483	CallExpression	NUM_ELEMENTS ( query . idAlt )		5595064	0					
ANR	5595484	Callee	NUM_ELEMENTS		5595064	0					
ANR	5595485	Identifier	NUM_ELEMENTS		5595064	0					
ANR	5595486	ArgumentList	query . idAlt		5595064	1					
ANR	5595487	Argument	query . idAlt		5595064	0					
ANR	5595488	MemberAccess	query . idAlt		5595064	0					
ANR	5595489	Identifier	query		5595064	0					
ANR	5595490	Identifier	idAlt		5595064	1					
ANR	5595491	PrimaryExpression	1		5595064	1					
ANR	5595492	PrimaryExpression	0		5595064	1					
ANR	5595493	CompoundStatement		79:4:2261:2261	5595064	1					
ANR	5595494	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error: too many counter ids map to the same name!"" )"	1459:5:45797:45868	5595064	0	True				
ANR	5595495	CallExpression	"dprintf ( D_ALWAYS , ""Error: too many counter ids map to the same name!"" )"		5595064	0					
ANR	5595496	Callee	dprintf		5595064	0					
ANR	5595497	Identifier	dprintf		5595064	0					
ANR	5595498	ArgumentList	D_ALWAYS		5595064	1					
ANR	5595499	Argument	D_ALWAYS		5595064	0					
ANR	5595500	Identifier	D_ALWAYS		5595064	0					
ANR	5595501	Argument	"""Error: too many counter ids map to the same name!"""		5595064	1					
ANR	5595502	PrimaryExpression	"""Error: too many counter ids map to the same name!"""		5595064	0					
ANR	5595503	ExpressionStatement	query . idAlt [ NUM_ELEMENTS ( query . idAlt ) - 1 ] = 0	1460:5:45875:45919	5595064	1	True				
ANR	5595504	AssignmentExpression	query . idAlt [ NUM_ELEMENTS ( query . idAlt ) - 1 ] = 0		5595064	0		=			
ANR	5595505	ArrayIndexing	query . idAlt [ NUM_ELEMENTS ( query . idAlt ) - 1 ]		5595064	0					
ANR	5595506	MemberAccess	query . idAlt		5595064	0					
ANR	5595507	Identifier	query		5595064	0					
ANR	5595508	Identifier	idAlt		5595064	1					
ANR	5595509	AdditiveExpression	NUM_ELEMENTS ( query . idAlt ) - 1		5595064	1		-			
ANR	5595510	CallExpression	NUM_ELEMENTS ( query . idAlt )		5595064	0					
ANR	5595511	Callee	NUM_ELEMENTS		5595064	0					
ANR	5595512	Identifier	NUM_ELEMENTS		5595064	0					
ANR	5595513	ArgumentList	query . idAlt		5595064	1					
ANR	5595514	Argument	query . idAlt		5595064	0					
ANR	5595515	MemberAccess	query . idAlt		5595064	0					
ANR	5595516	Identifier	query		5595064	0					
ANR	5595517	Identifier	idAlt		5595064	1					
ANR	5595518	PrimaryExpression	1		5595064	1					
ANR	5595519	PrimaryExpression	0		5595064	1					
ANR	5595520	IfStatement	if ( pszTemp )		5595064	6					
ANR	5595521	Condition	pszTemp	1466:5:45945:45951	5595064	0	True				
ANR	5595522	Identifier	pszTemp		5595064	0					
ANR	5595523	ExpressionStatement	free ( pszTemp )	1467:2:45956:45969	5595064	1	True				
ANR	5595524	CallExpression	free ( pszTemp )		5595064	0					
ANR	5595525	Callee	free		5595064	0					
ANR	5595526	Identifier	free		5595064	0					
ANR	5595527	ArgumentList	pszTemp		5595064	1					
ANR	5595528	Argument	pszTemp		5595064	0					
ANR	5595529	Identifier	pszTemp		5595064	0					
ANR	5595530	ReturnStatement	return ( query . idKey != 0 ) ;	1469:1:45973:45998	5595064	7	True				
ANR	5595531	EqualityExpression	query . idKey != 0		5595064	0		!=			
ANR	5595532	MemberAccess	query . idKey		5595064	0					
ANR	5595533	Identifier	query		5595064	0					
ANR	5595534	Identifier	idKey		5595064	1					
ANR	5595535	PrimaryExpression	0		5595064	1					
ANR	5595536	ReturnType	bool		5595064	1					
ANR	5595537	Identifier	init_WinPerf_Query		5595064	2					
ANR	5595538	ParameterList	"const char * pszRegKey , const char * pszValueName , WinPerf_Query & query"		5595064	3					
ANR	5595539	Parameter	const char * pszRegKey	1377:1:43450:43471	5595064	0	True				
ANR	5595540	ParameterType	const char *		5595064	0					
ANR	5595541	Identifier	pszRegKey		5595064	1					
ANR	5595542	Parameter	const char * pszValueName	1378:1:43476:43500	5595064	1	True				
ANR	5595543	ParameterType	const char *		5595064	0					
ANR	5595544	Identifier	pszValueName		5595064	1					
ANR	5595545	Parameter	WinPerf_Query & query	1379:1:43505:43525	5595064	2	True				
ANR	5595546	ParameterType	WinPerf_Query &		5595064	0					
ANR	5595547	Identifier	query		5595064	1					
ANR	5595548	CFGEntryNode	ENTRY		5595064		True				
ANR	5595549	CFGExitNode	EXIT		5595064		True				
ANR	5595550	Symbol	next		5595064						
ANR	5595551	Symbol	cur		5595064						
ANR	5595552	Symbol	* pszCounter ++		5595064						
ANR	5595553	Symbol	NUM_ELEMENTS		5595064						
ANR	5595554	Symbol	query . idInst		5595064						
ANR	5595555	Symbol	pszValueName		5595064						
ANR	5595556	Symbol	strchr		5595064						
ANR	5595557	Symbol	rl . pPerfTable		5595064						
ANR	5595558	Symbol	* NUM_ELEMENTS		5595064						
ANR	5595559	Symbol	pszInstance		5595064						
ANR	5595560	Symbol	* query . idAlt		5595064						
ANR	5595561	Symbol	rl . pPerfTable -> getNext		5595064						
ANR	5595562	Symbol	query . idKey		5595064						
ANR	5595563	Symbol	pszCounter		5595064						
ANR	5595564	Symbol	* pszInstance		5595064						
ANR	5595565	Symbol	* pszRegKey		5595064						
ANR	5595566	Symbol	pszTemp		5595064						
ANR	5595567	Symbol	isdigit		5595064						
ANR	5595568	Symbol	& query . idCounter		5595064						
ANR	5595569	Symbol	* query		5595064						
ANR	5595570	Symbol	pszRegKey		5595064						
ANR	5595571	Symbol	atoi		5595064						
ANR	5595572	Symbol	pszCounterIndex		5595064						
ANR	5595573	Symbol	NULL		5595064						
ANR	5595574	Symbol	* rl		5595064						
ANR	5595575	Symbol	query		5595064						
ANR	5595576	Symbol	query . idAlt		5595064						
ANR	5595577	Symbol	pszPerfIndex		5595064						
ANR	5595578	Symbol	D_ALWAYS		5595064						
ANR	5595579	Symbol	D_FULLDEBUG		5595064						
ANR	5595580	Symbol	pszInst		5595064						
ANR	5595581	Symbol	* pszInstance ++		5595064						
ANR	5595582	Symbol	query . idCounter		5595064						
ANR	5595583	Symbol	ix		5595064						
ANR	5595584	Symbol	query . cchInst		5595064						
ANR	5595585	Symbol	rl . pPerfTable -> lookup		5595064						
ANR	5595586	Symbol	* rl . pPerfTable		5595064						
ANR	5595587	Symbol	& query		5595064						
ANR	5595588	Symbol	* pszValueName		5595064						
ANR	5595589	Symbol	rl		5595064						
ANR	5595590	Symbol	strdup		5595064						
ANR	5595591	Symbol	query . ixInst		5595064						
ANR	5595592	Function	WinPerf_CounterValue :: Print	1472:0:46003:47244							
ANR	5595593	FunctionDef	"WinPerf_CounterValue :: Print (char * psz , int cchMax , bool fIncludeUnits)"		5595592	0					
ANR	5595594	CompoundStatement		1473:0:46085:47244	5595592	0					
ANR	5595595	IdentifierDeclStatement	int cch = 0 ;	1474:1:46088:46099	5595592	0	True				
ANR	5595596	IdentifierDecl	cch = 0		5595592	0					
ANR	5595597	IdentifierDeclType	int		5595592	0					
ANR	5595598	Identifier	cch		5595592	1					
ANR	5595599	AssignmentExpression	cch = 0		5595592	2		=			
ANR	5595600	Identifier	cch		5595592	0					
ANR	5595601	PrimaryExpression	0		5595592	1					
ANR	5595602	ExpressionStatement	psz [ 0 ] = 0	1475:1:46102:46112	5595592	1	True				
ANR	5595603	AssignmentExpression	psz [ 0 ] = 0		5595592	0		=			
ANR	5595604	ArrayIndexing	psz [ 0 ]		5595592	0					
ANR	5595605	Identifier	psz		5595592	0					
ANR	5595606	PrimaryExpression	0		5595592	1					
ANR	5595607	PrimaryExpression	0		5595592	1					
ANR	5595608	IfStatement	if ( ( this -> type & WinPerf_CT_Double ) == WinPerf_CT_Double )		5595592	2					
ANR	5595609	Condition	( this -> type & WinPerf_CT_Double ) == WinPerf_CT_Double	1476:5:46119:46171	5595592	0	True				
ANR	5595610	EqualityExpression	( this -> type & WinPerf_CT_Double ) == WinPerf_CT_Double		5595592	0		==			
ANR	5595611	BitAndExpression	this -> type & WinPerf_CT_Double		5595592	0		&			
ANR	5595612	PtrMemberAccess	this -> type		5595592	0					
ANR	5595613	Identifier	this		5595592	0					
ANR	5595614	Identifier	type		5595592	1					
ANR	5595615	Identifier	WinPerf_CT_Double		5595592	1					
ANR	5595616	Identifier	WinPerf_CT_Double		5595592	1					
ANR	5595617	CompoundStatement		5:1:89:89	5595592	1					
ANR	5595618	ExpressionStatement	"cch = sprintf ( psz , ""%f"" , value . d )"	1478:2:46179:46212	5595592	0	True				
ANR	5595619	AssignmentExpression	"cch = sprintf ( psz , ""%f"" , value . d )"		5595592	0		=			
ANR	5595620	Identifier	cch		5595592	0					
ANR	5595621	CallExpression	"sprintf ( psz , ""%f"" , value . d )"		5595592	1					
ANR	5595622	Callee	sprintf		5595592	0					
ANR	5595623	Identifier	sprintf		5595592	0					
ANR	5595624	ArgumentList	psz		5595592	1					
ANR	5595625	Argument	psz		5595592	0					
ANR	5595626	Identifier	psz		5595592	0					
ANR	5595627	Argument	"""%f"""		5595592	1					
ANR	5595628	PrimaryExpression	"""%f"""		5595592	0					
ANR	5595629	Argument	value . d		5595592	2					
ANR	5595630	MemberAccess	value . d		5595592	0					
ANR	5595631	Identifier	value		5595592	0					
ANR	5595632	Identifier	d		5595592	1					
ANR	5595633	ElseStatement	else		5595592	0					
ANR	5595634	CompoundStatement		10:2:142:166	5595592	0					
ANR	5595635	IdentifierDeclStatement	"const char * pszFmt = """" ;"	1482:2:46228:46252	5595592	0	True				
ANR	5595636	IdentifierDecl	"* pszFmt = """""		5595592	0					
ANR	5595637	IdentifierDeclType	const char *		5595592	0					
ANR	5595638	Identifier	pszFmt		5595592	1					
ANR	5595639	AssignmentExpression	"* pszFmt = """""		5595592	2		=			
ANR	5595640	Identifier	pszFmt		5595592	0					
ANR	5595641	PrimaryExpression	""""""		5595592	1					
ANR	5595642	SwitchStatement	switch ( this -> type & ~WinPerf_CT_UnitsMask )		5595592	1					
ANR	5595643	Condition	this -> type & ~WinPerf_CT_UnitsMask	1483:10:46264:46297	5595592	0	True				
ANR	5595644	BitAndExpression	this -> type & ~WinPerf_CT_UnitsMask		5595592	0		&			
ANR	5595645	PtrMemberAccess	this -> type		5595592	0					
ANR	5595646	Identifier	this		5595592	0					
ANR	5595647	Identifier	type		5595592	1					
ANR	5595648	Identifier	~WinPerf_CT_UnitsMask		5595592	1					
ANR	5595649	CompoundStatement		12:2:216:216	5595592	1					
ANR	5595650	Statement	case	1485:2:46306:46309	5595592	0	True				
ANR	5595651	Statement	WinPerf_CT_Unsigned	1485:7:46311:46329	5595592	1	True				
ANR	5595652	Statement	|	1485:27:46331:46331	5595592	2	True				
ANR	5595653	Label	WinPerf_CT_Hex :	1485:29:46333:46347	5595592	3	True				
ANR	5595654	Identifier	WinPerf_CT_Hex		5595592	0					
ANR	5595655	ExpressionStatement	"pszFmt = ""%I64X"""	1485:49:46353:46369	5595592	4	True				
ANR	5595656	AssignmentExpression	"pszFmt = ""%I64X"""		5595592	0		=			
ANR	5595657	Identifier	pszFmt		5595592	0					
ANR	5595658	PrimaryExpression	"""%I64X"""		5595592	1					
ANR	5595659	BreakStatement	break ;	1485:67:46371:46376	5595592	5	True				
ANR	5595660	Statement	case	1486:2:46380:46383	5595592	6	True				
ANR	5595661	Statement	WinPerf_CT_Signed	1486:7:46385:46401	5595592	7	True				
ANR	5595662	Statement	|	1486:27:46405:46405	5595592	8	True				
ANR	5595663	Label	WinPerf_CT_Decimal :	1486:29:46407:46425	5595592	9	True				
ANR	5595664	Identifier	WinPerf_CT_Decimal		5595592	0					
ANR	5595665	ExpressionStatement	"pszFmt = ""%I64d"""	1486:49:46427:46443	5595592	10	True				
ANR	5595666	AssignmentExpression	"pszFmt = ""%I64d"""		5595592	0		=			
ANR	5595667	Identifier	pszFmt		5595592	0					
ANR	5595668	PrimaryExpression	"""%I64d"""		5595592	1					
ANR	5595669	BreakStatement	break ;	1486:67:46445:46450	5595592	11	True				
ANR	5595670	Statement	case	1487:2:46454:46457	5595592	12	True				
ANR	5595671	Statement	WinPerf_CT_Unsigned	1487:7:46459:46477	5595592	13	True				
ANR	5595672	Statement	|	1487:27:46479:46479	5595592	14	True				
ANR	5595673	Label	WinPerf_CT_Decimal :	1487:29:46481:46499	5595592	15	True				
ANR	5595674	Identifier	WinPerf_CT_Decimal		5595592	0					
ANR	5595675	ExpressionStatement	"pszFmt = ""%I64u"""	1487:49:46501:46517	5595592	16	True				
ANR	5595676	AssignmentExpression	"pszFmt = ""%I64u"""		5595592	0		=			
ANR	5595677	Identifier	pszFmt		5595592	0					
ANR	5595678	PrimaryExpression	"""%I64u"""		5595592	1					
ANR	5595679	BreakStatement	break ;	1487:67:46519:46524	5595592	17	True				
ANR	5595680	Statement	case	1489:2:46529:46532	5595592	18	True				
ANR	5595681	Statement	WinPerf_CT_Unsigned	1489:7:46534:46552	5595592	19	True				
ANR	5595682	Statement	|	1489:27:46554:46554	5595592	20	True				
ANR	5595683	Statement	WinPerf_CT_Hex	1489:29:46556:46569	5595592	21	True				
ANR	5595684	Statement	|	1489:44:46571:46571	5595592	22	True				
ANR	5595685	Label	WinPerf_CT_Short :	1489:46:46573:46589	5595592	23	True				
ANR	5595686	Identifier	WinPerf_CT_Short		5595592	0					
ANR	5595687	ExpressionStatement	"pszFmt = ""%X"""	1489:68:46595:46608	5595592	24	True				
ANR	5595688	AssignmentExpression	"pszFmt = ""%X"""		5595592	0		=			
ANR	5595689	Identifier	pszFmt		5595592	0					
ANR	5595690	PrimaryExpression	"""%X"""		5595592	1					
ANR	5595691	BreakStatement	break ;	1489:83:46610:46615	5595592	25	True				
ANR	5595692	Statement	case	1490:2:46619:46622	5595592	26	True				
ANR	5595693	Statement	WinPerf_CT_Signed	1490:7:46624:46640	5595592	27	True				
ANR	5595694	Statement	|	1490:27:46644:46644	5595592	28	True				
ANR	5595695	Statement	WinPerf_CT_Decimal	1490:29:46646:46663	5595592	29	True				
ANR	5595696	Statement	|	1490:48:46665:46665	5595592	30	True				
ANR	5595697	Label	WinPerf_CT_Short :	1490:50:46667:46683	5595592	31	True				
ANR	5595698	Identifier	WinPerf_CT_Short		5595592	0					
ANR	5595699	ExpressionStatement	"pszFmt = ""%d"""	1490:68:46685:46698	5595592	32	True				
ANR	5595700	AssignmentExpression	"pszFmt = ""%d"""		5595592	0		=			
ANR	5595701	Identifier	pszFmt		5595592	0					
ANR	5595702	PrimaryExpression	"""%d"""		5595592	1					
ANR	5595703	BreakStatement	break ;	1490:83:46700:46705	5595592	33	True				
ANR	5595704	Statement	case	1491:2:46709:46712	5595592	34	True				
ANR	5595705	Statement	WinPerf_CT_Unsigned	1491:7:46714:46732	5595592	35	True				
ANR	5595706	Statement	|	1491:27:46734:46734	5595592	36	True				
ANR	5595707	Statement	WinPerf_CT_Decimal	1491:29:46736:46753	5595592	37	True				
ANR	5595708	Statement	|	1491:48:46755:46755	5595592	38	True				
ANR	5595709	Label	WinPerf_CT_Short :	1491:50:46757:46773	5595592	39	True				
ANR	5595710	Identifier	WinPerf_CT_Short		5595592	0					
ANR	5595711	ExpressionStatement	"pszFmt = ""%u"""	1491:68:46775:46788	5595592	40	True				
ANR	5595712	AssignmentExpression	"pszFmt = ""%u"""		5595592	0		=			
ANR	5595713	Identifier	pszFmt		5595592	0					
ANR	5595714	PrimaryExpression	"""%u"""		5595592	1					
ANR	5595715	BreakStatement	break ;	1491:83:46790:46795	5595592	41	True				
ANR	5595716	ExpressionStatement	"cch = sprintf ( psz , pszFmt , value . ul )"	1493:2:46803:46839	5595592	2	True				
ANR	5595717	AssignmentExpression	"cch = sprintf ( psz , pszFmt , value . ul )"		5595592	0		=			
ANR	5595718	Identifier	cch		5595592	0					
ANR	5595719	CallExpression	"sprintf ( psz , pszFmt , value . ul )"		5595592	1					
ANR	5595720	Callee	sprintf		5595592	0					
ANR	5595721	Identifier	sprintf		5595592	0					
ANR	5595722	ArgumentList	psz		5595592	1					
ANR	5595723	Argument	psz		5595592	0					
ANR	5595724	Identifier	psz		5595592	0					
ANR	5595725	Argument	pszFmt		5595592	1					
ANR	5595726	Identifier	pszFmt		5595592	0					
ANR	5595727	Argument	value . ul		5595592	2					
ANR	5595728	MemberAccess	value . ul		5595592	0					
ANR	5595729	Identifier	value		5595592	0					
ANR	5595730	Identifier	ul		5595592	1					
ANR	5595731	IfStatement	if ( fIncludeUnits )		5595592	3					
ANR	5595732	Condition	fIncludeUnits	1496:5:46851:46863	5595592	0	True				
ANR	5595733	Identifier	fIncludeUnits		5595592	0					
ANR	5595734	CompoundStatement		26:2:785:813	5595592	1					
ANR	5595735	IdentifierDeclStatement	const char * pszUnits = NULL ;	1498:2:46871:46899	5595592	0	True				
ANR	5595736	IdentifierDecl	* pszUnits = NULL		5595592	0					
ANR	5595737	IdentifierDeclType	const char *		5595592	0					
ANR	5595738	Identifier	pszUnits		5595592	1					
ANR	5595739	AssignmentExpression	* pszUnits = NULL		5595592	2		=			
ANR	5595740	Identifier	NULL		5595592	0					
ANR	5595741	Identifier	NULL		5595592	1					
ANR	5595742	SwitchStatement	switch ( this -> type & WinPerf_CT_UnitsMask )		5595592	1					
ANR	5595743	Condition	this -> type & WinPerf_CT_UnitsMask	1499:10:46911:46943	5595592	0	True				
ANR	5595744	BitAndExpression	this -> type & WinPerf_CT_UnitsMask		5595592	0		&			
ANR	5595745	PtrMemberAccess	this -> type		5595592	0					
ANR	5595746	Identifier	this		5595592	0					
ANR	5595747	Identifier	type		5595592	1					
ANR	5595748	Identifier	WinPerf_CT_UnitsMask		5595592	1					
ANR	5595749	CompoundStatement		28:2:862:862	5595592	1					
ANR	5595750	Label	case WinPerf_CT_Seconds :	1501:2:46952:46975	5595592	0	True				
ANR	5595751	Identifier	WinPerf_CT_Seconds		5595592	0					
ANR	5595752	ExpressionStatement	"pszUnits = "" sec"""	1501:29:46979:46996	5595592	1	True				
ANR	5595753	AssignmentExpression	"pszUnits = "" sec"""		5595592	0		=			
ANR	5595754	Identifier	pszUnits		5595592	0					
ANR	5595755	PrimaryExpression	""" sec"""		5595592	1					
ANR	5595756	BreakStatement	break ;	1501:49:46999:47004	5595592	2	True				
ANR	5595757	Label	case WinPerf_CT_PerSecond :	1502:2:47008:47033	5595592	3	True				
ANR	5595758	Identifier	WinPerf_CT_PerSecond		5595592	0					
ANR	5595759	ExpressionStatement	"pszUnits = ""/sec"""	1502:29:47035:47052	5595592	4	True				
ANR	5595760	AssignmentExpression	"pszUnits = ""/sec"""		5595592	0		=			
ANR	5595761	Identifier	pszUnits		5595592	0					
ANR	5595762	PrimaryExpression	"""/sec"""		5595592	1					
ANR	5595763	BreakStatement	break ;	1502:48:47054:47059	5595592	5	True				
ANR	5595764	Label	case WinPerf_CT_Percent :	1503:2:47063:47086	5595592	6	True				
ANR	5595765	Identifier	WinPerf_CT_Percent		5595592	0					
ANR	5595766	ExpressionStatement	"pszUnits = "" %"""	1503:29:47090:47105	5595592	7	True				
ANR	5595767	AssignmentExpression	"pszUnits = "" %"""		5595592	0		=			
ANR	5595768	Identifier	pszUnits		5595592	0					
ANR	5595769	PrimaryExpression	""" %"""		5595592	1					
ANR	5595770	BreakStatement	break ;	1503:48:47109:47114	5595592	8	True				
ANR	5595771	IfStatement	if ( pszUnits )		5595592	2					
ANR	5595772	Condition	pszUnits	1505:6:47126:47133	5595592	0	True				
ANR	5595773	Identifier	pszUnits		5595592	0					
ANR	5595774	CompoundStatement		34:2:1052:1052	5595592	1					
ANR	5595775	ExpressionStatement	"strcpy ( & psz [ cch ] , pszUnits )"	1508:3:47166:47193	5595592	0	True				
ANR	5595776	CallExpression	"strcpy ( & psz [ cch ] , pszUnits )"		5595592	0					
ANR	5595777	Callee	strcpy		5595592	0					
ANR	5595778	Identifier	strcpy		5595592	0					
ANR	5595779	ArgumentList	& psz [ cch ]		5595592	1					
ANR	5595780	Argument	& psz [ cch ]		5595592	0					
ANR	5595781	UnaryOperationExpression	& psz [ cch ]		5595592	0					
ANR	5595782	UnaryOperator	&		5595592	0					
ANR	5595783	ArrayIndexing	psz [ cch ]		5595592	1					
ANR	5595784	Identifier	psz		5595592	0					
ANR	5595785	Identifier	cch		5595592	1					
ANR	5595786	Argument	pszUnits		5595592	1					
ANR	5595787	Identifier	pszUnits		5595592	0					
ANR	5595788	ExpressionStatement	cch += strlen ( pszUnits )	1509:3:47198:47221	5595592	1	True				
ANR	5595789	AssignmentExpression	cch += strlen ( pszUnits )		5595592	0		+=			
ANR	5595790	Identifier	cch		5595592	0					
ANR	5595791	CallExpression	strlen ( pszUnits )		5595592	1					
ANR	5595792	Callee	strlen		5595592	0					
ANR	5595793	Identifier	strlen		5595592	0					
ANR	5595794	ArgumentList	pszUnits		5595592	1					
ANR	5595795	Argument	pszUnits		5595592	0					
ANR	5595796	Identifier	pszUnits		5595592	0					
ANR	5595797	ReturnStatement	return cch ;	1513:1:47232:47242	5595592	4	True				
ANR	5595798	Identifier	cch		5595592	0					
ANR	5595799	ReturnType	int		5595592	1					
ANR	5595800	Identifier	WinPerf_CounterValue :: Print		5595592	2					
ANR	5595801	ParameterList	"char * psz , int cchMax , bool fIncludeUnits"		5595592	3					
ANR	5595802	Parameter	char * psz	1472:32:46035:46044	5595592	0	True				
ANR	5595803	ParameterType	char *		5595592	0					
ANR	5595804	Identifier	psz		5595592	1					
ANR	5595805	Parameter	int cchMax	1472:44:46047:46056	5595592	1	True				
ANR	5595806	ParameterType	int		5595592	0					
ANR	5595807	Identifier	cchMax		5595592	1					
ANR	5595808	Parameter	bool fIncludeUnits	1472:56:46059:46076	5595592	2	True				
ANR	5595809	ParameterType	bool		5595592	0					
ANR	5595810	Identifier	fIncludeUnits		5595592	1					
ANR	5595811	CFGEntryNode	ENTRY		5595592		True				
ANR	5595812	CFGExitNode	EXIT		5595592		True				
ANR	5595813	Symbol	value . d		5595592						
ANR	5595814	Symbol	* psz		5595592						
ANR	5595815	Symbol	NULL		5595592						
ANR	5595816	Symbol	WinPerf_CT_UnitsMask		5595592						
ANR	5595817	Symbol	this		5595592						
ANR	5595818	Symbol	cch		5595592						
ANR	5595819	Symbol	~WinPerf_CT_UnitsMask		5595592						
ANR	5595820	Symbol	value . ul		5595592						
ANR	5595821	Symbol	cchMax		5595592						
ANR	5595822	Symbol	this -> type		5595592						
ANR	5595823	Symbol	WinPerf_CT_Double		5595592						
ANR	5595824	Symbol	sprintf		5595592						
ANR	5595825	Symbol	* this		5595592						
ANR	5595826	Symbol	strlen		5595592						
ANR	5595827	Symbol	psz		5595592						
ANR	5595828	Symbol	fIncludeUnits		5595592						
ANR	5595829	Symbol	pszUnits		5595592						
ANR	5595830	Symbol	value		5595592						
ANR	5595831	Symbol	pszFmt		5595592						
ANR	5595832	Function	free_query_data	1516:0:47247:47418							
ANR	5595833	FunctionDef	free_query_data (WinPerf_QueryResult result)		5595832	0					
ANR	5595834	CompoundStatement		1516:55:47302:47418	5595832	0					
ANR	5595835	IfStatement	if ( result . pdata1 )		5595832	0					
ANR	5595836	Condition	result . pdata1	1517:5:47309:47321	5595832	0	True				
ANR	5595837	MemberAccess	result . pdata1		5595832	0					
ANR	5595838	Identifier	result		5595832	0					
ANR	5595839	Identifier	pdata1		5595832	1					
ANR	5595840	ExpressionStatement	free ( ( void * ) result . pdata1 )	1518:2:47326:47352	5595832	1	True				
ANR	5595841	CallExpression	free ( ( void * ) result . pdata1 )		5595832	0					
ANR	5595842	Callee	free		5595832	0					
ANR	5595843	Identifier	free		5595832	0					
ANR	5595844	ArgumentList	( void * ) result . pdata1		5595832	1					
ANR	5595845	Argument	( void * ) result . pdata1		5595832	0					
ANR	5595846	CastExpression	( void * ) result . pdata1		5595832	0					
ANR	5595847	CastTarget	void *		5595832	0					
ANR	5595848	MemberAccess	result . pdata1		5595832	1					
ANR	5595849	Identifier	result		5595832	0					
ANR	5595850	Identifier	pdata1		5595832	1					
ANR	5595851	IfStatement	if ( result . pdata2 )		5595832	1					
ANR	5595852	Condition	result . pdata2	1519:5:47359:47371	5595832	0	True				
ANR	5595853	MemberAccess	result . pdata2		5595832	0					
ANR	5595854	Identifier	result		5595832	0					
ANR	5595855	Identifier	pdata2		5595832	1					
ANR	5595856	ExpressionStatement	free ( ( void * ) result . pdata2 )	1520:2:47376:47402	5595832	1	True				
ANR	5595857	CallExpression	free ( ( void * ) result . pdata2 )		5595832	0					
ANR	5595858	Callee	free		5595832	0					
ANR	5595859	Identifier	free		5595832	0					
ANR	5595860	ArgumentList	( void * ) result . pdata2		5595832	1					
ANR	5595861	Argument	( void * ) result . pdata2		5595832	0					
ANR	5595862	CastExpression	( void * ) result . pdata2		5595832	0					
ANR	5595863	CastTarget	void *		5595832	0					
ANR	5595864	MemberAccess	result . pdata2		5595832	1					
ANR	5595865	Identifier	result		5595832	0					
ANR	5595866	Identifier	pdata2		5595832	1					
ANR	5595867	ReturnStatement	return true ;	1521:1:47405:47416	5595832	2	True				
ANR	5595868	Identifier	true		5595832	0					
ANR	5595869	ReturnType	static int		5595832	1					
ANR	5595870	Identifier	free_query_data		5595832	2					
ANR	5595871	ParameterList	WinPerf_QueryResult result		5595832	3					
ANR	5595872	Parameter	WinPerf_QueryResult result	1516:27:47274:47299	5595832	0	True				
ANR	5595873	ParameterType	WinPerf_QueryResult		5595832	0					
ANR	5595874	Identifier	result		5595832	1					
ANR	5595875	CFGEntryNode	ENTRY		5595832		True				
ANR	5595876	CFGExitNode	EXIT		5595832		True				
ANR	5595877	Symbol	result		5595832						
ANR	5595878	Symbol	result . pdata1		5595832						
ANR	5595879	Symbol	result . pdata2		5595832						
ANR	5595880	Symbol	true		5595832						
ANR	5595881	Function	release_all_WinPerf_results	1524:0:47421:47591							
ANR	5595882	FunctionDef	release_all_WinPerf_results ()		5595881	0					
ANR	5595883	CompoundStatement		1525:0:47456:47591	5595881	0					
ANR	5595884	IfStatement	if ( rl . pQueries )		5595881	0					
ANR	5595885	Condition	rl . pQueries	1526:8:47466:47476	5595881	0	True				
ANR	5595886	MemberAccess	rl . pQueries		5595881	0					
ANR	5595887	Identifier	rl		5595881	0					
ANR	5595888	Identifier	pQueries		5595881	1					
ANR	5595889	CompoundStatement		3:4:26:26	5595881	1					
ANR	5595890	ExpressionStatement	rl . pQueries -> walk ( free_query_data )	1528:8:47493:47527	5595881	0	True				
ANR	5595891	CallExpression	rl . pQueries -> walk ( free_query_data )		5595881	0					
ANR	5595892	Callee	rl . pQueries -> walk		5595881	0					
ANR	5595893	PtrMemberAccess	rl . pQueries -> walk		5595881	0					
ANR	5595894	MemberAccess	rl . pQueries		5595881	0					
ANR	5595895	Identifier	rl		5595881	0					
ANR	5595896	Identifier	pQueries		5595881	1					
ANR	5595897	Identifier	walk		5595881	1					
ANR	5595898	ArgumentList	free_query_data		5595881	1					
ANR	5595899	Argument	free_query_data		5595881	0					
ANR	5595900	Identifier	free_query_data		5595881	0					
ANR	5595901	ExpressionStatement	free ( rl . pQueries )	1529:8:47537:47555	5595881	1	True				
ANR	5595902	CallExpression	free ( rl . pQueries )		5595881	0					
ANR	5595903	Callee	free		5595881	0					
ANR	5595904	Identifier	free		5595881	0					
ANR	5595905	ArgumentList	rl . pQueries		5595881	1					
ANR	5595906	Argument	rl . pQueries		5595881	0					
ANR	5595907	MemberAccess	rl . pQueries		5595881	0					
ANR	5595908	Identifier	rl		5595881	0					
ANR	5595909	Identifier	pQueries		5595881	1					
ANR	5595910	ExpressionStatement	rl . pQueries = NULL	1530:8:47565:47583	5595881	2	True				
ANR	5595911	AssignmentExpression	rl . pQueries = NULL		5595881	0		=			
ANR	5595912	MemberAccess	rl . pQueries		5595881	0					
ANR	5595913	Identifier	rl		5595881	0					
ANR	5595914	Identifier	pQueries		5595881	1					
ANR	5595915	Identifier	NULL		5595881	1					
ANR	5595916	ReturnType	void		5595881	1					
ANR	5595917	Identifier	release_all_WinPerf_results		5595881	2					
ANR	5595918	ParameterList			5595881	3					
ANR	5595919	CFGEntryNode	ENTRY		5595881		True				
ANR	5595920	CFGExitNode	EXIT		5595881		True				
ANR	5595921	Symbol	NULL		5595881						
ANR	5595922	Symbol	rl . pQueries		5595881						
ANR	5595923	Symbol	rl		5595881						
ANR	5595924	Symbol	free_query_data		5595881						
ANR	5595925	Function	update_windows_performance_result	1534:0:47594:50043							
ANR	5595926	FunctionDef	update_windows_performance_result (WinPerf_QueryResult & result)		5595925	0					
ANR	5595927	CompoundStatement		1535:0:47663:50043	5595925	0					
ANR	5595928	IdentifierDeclStatement	char szKeyID [ 12 ] ;	1536:1:47666:47682	5595925	0	True				
ANR	5595929	IdentifierDecl	szKeyID [ 12 ]		5595925	0					
ANR	5595930	IdentifierDeclType	char [ 12 ]		5595925	0					
ANR	5595931	Identifier	szKeyID		5595925	1					
ANR	5595932	PrimaryExpression	12		5595925	2					
ANR	5595933	ExpressionStatement	"wsprintf ( szKeyID , ""%d"" , result . idObject )"	1537:1:47685:47725	5595925	1	True				
ANR	5595934	CallExpression	"wsprintf ( szKeyID , ""%d"" , result . idObject )"		5595925	0					
ANR	5595935	Callee	wsprintf		5595925	0					
ANR	5595936	Identifier	wsprintf		5595925	0					
ANR	5595937	ArgumentList	szKeyID		5595925	1					
ANR	5595938	Argument	szKeyID		5595925	0					
ANR	5595939	Identifier	szKeyID		5595925	0					
ANR	5595940	Argument	"""%d"""		5595925	1					
ANR	5595941	PrimaryExpression	"""%d"""		5595925	0					
ANR	5595942	Argument	result . idObject		5595925	2					
ANR	5595943	MemberAccess	result . idObject		5595925	0					
ANR	5595944	Identifier	result		5595925	0					
ANR	5595945	Identifier	idObject		5595925	1					
ANR	5595946	IdentifierDeclStatement	DWORD cbData = result . cbAlloc ;	1538:1:47728:47757	5595925	2	True				
ANR	5595947	IdentifierDecl	cbData = result . cbAlloc		5595925	0					
ANR	5595948	IdentifierDeclType	DWORD		5595925	0					
ANR	5595949	Identifier	cbData		5595925	1					
ANR	5595950	AssignmentExpression	cbData = result . cbAlloc		5595925	2		=			
ANR	5595951	Identifier	cbData		5595925	0					
ANR	5595952	MemberAccess	result . cbAlloc		5595925	1					
ANR	5595953	Identifier	result		5595925	0					
ANR	5595954	Identifier	cbAlloc		5595925	1					
ANR	5595955	IdentifierDeclStatement	DWORD vtype = REG_SZ ;	1539:1:47760:47780	5595925	3	True				
ANR	5595956	IdentifierDecl	vtype = REG_SZ		5595925	0					
ANR	5595957	IdentifierDeclType	DWORD		5595925	0					
ANR	5595958	Identifier	vtype		5595925	1					
ANR	5595959	AssignmentExpression	vtype = REG_SZ		5595925	2		=			
ANR	5595960	Identifier	REG_SZ		5595925	0					
ANR	5595961	Identifier	REG_SZ		5595925	1					
ANR	5595962	IdentifierDeclStatement	byte * pdata = ( byte * ) result . pdata1 ;	1543:1:47890:47925	5595925	4	True				
ANR	5595963	IdentifierDecl	* pdata = ( byte * ) result . pdata1		5595925	0					
ANR	5595964	IdentifierDeclType	byte *		5595925	0					
ANR	5595965	Identifier	pdata		5595925	1					
ANR	5595966	AssignmentExpression	* pdata = ( byte * ) result . pdata1		5595925	2		=			
ANR	5595967	Identifier	pdata		5595925	0					
ANR	5595968	CastExpression	( byte * ) result . pdata1		5595925	1					
ANR	5595969	CastTarget	byte *		5595925	0					
ANR	5595970	MemberAccess	result . pdata1		5595925	1					
ANR	5595971	Identifier	result		5595925	0					
ANR	5595972	Identifier	pdata1		5595925	1					
ANR	5595973	ExpressionStatement	result . pdata1 = result . pdata2	1544:1:47928:47957	5595925	5	True				
ANR	5595974	AssignmentExpression	result . pdata1 = result . pdata2		5595925	0		=			
ANR	5595975	MemberAccess	result . pdata1		5595925	0					
ANR	5595976	Identifier	result		5595925	0					
ANR	5595977	Identifier	pdata1		5595925	1					
ANR	5595978	MemberAccess	result . pdata2		5595925	1					
ANR	5595979	Identifier	result		5595925	0					
ANR	5595980	Identifier	pdata2		5595925	1					
ANR	5595981	ExpressionStatement	result . pdata2 = ( const WinPerf_Data * ) pdata	1545:1:47960:48003	5595925	6	True				
ANR	5595982	AssignmentExpression	result . pdata2 = ( const WinPerf_Data * ) pdata		5595925	0		=			
ANR	5595983	MemberAccess	result . pdata2		5595925	0					
ANR	5595984	Identifier	result		5595925	0					
ANR	5595985	Identifier	pdata2		5595925	1					
ANR	5595986	CastExpression	( const WinPerf_Data * ) pdata		5595925	1					
ANR	5595987	CastTarget	const WinPerf_Data *		5595925	0					
ANR	5595988	Identifier	pdata		5595925	1					
ANR	5595989	IdentifierDeclStatement	"LONG lres = RegQueryValueEx ( HKEY_PERFORMANCE_DATA , szKeyID , NULL , & vtype , pdata , & cbData ) ;"	1549:1:48118:48207	5595925	7	True				
ANR	5595990	IdentifierDecl	"lres = RegQueryValueEx ( HKEY_PERFORMANCE_DATA , szKeyID , NULL , & vtype , pdata , & cbData )"		5595925	0					
ANR	5595991	IdentifierDeclType	LONG		5595925	0					
ANR	5595992	Identifier	lres		5595925	1					
ANR	5595993	AssignmentExpression	"lres = RegQueryValueEx ( HKEY_PERFORMANCE_DATA , szKeyID , NULL , & vtype , pdata , & cbData )"		5595925	2		=			
ANR	5595994	Identifier	lres		5595925	0					
ANR	5595995	CallExpression	"RegQueryValueEx ( HKEY_PERFORMANCE_DATA , szKeyID , NULL , & vtype , pdata , & cbData )"		5595925	1					
ANR	5595996	Callee	RegQueryValueEx		5595925	0					
ANR	5595997	Identifier	RegQueryValueEx		5595925	0					
ANR	5595998	ArgumentList	HKEY_PERFORMANCE_DATA		5595925	1					
ANR	5595999	Argument	HKEY_PERFORMANCE_DATA		5595925	0					
ANR	5596000	Identifier	HKEY_PERFORMANCE_DATA		5595925	0					
ANR	5596001	Argument	szKeyID		5595925	1					
ANR	5596002	Identifier	szKeyID		5595925	0					
ANR	5596003	Argument	NULL		5595925	2					
ANR	5596004	Identifier	NULL		5595925	0					
ANR	5596005	Argument	& vtype		5595925	3					
ANR	5596006	UnaryOperationExpression	& vtype		5595925	0					
ANR	5596007	UnaryOperator	&		5595925	0					
ANR	5596008	Identifier	vtype		5595925	1					
ANR	5596009	Argument	pdata		5595925	4					
ANR	5596010	Identifier	pdata		5595925	0					
ANR	5596011	Argument	& cbData		5595925	5					
ANR	5596012	UnaryOperationExpression	& cbData		5595925	0					
ANR	5596013	UnaryOperator	&		5595925	0					
ANR	5596014	Identifier	cbData		5595925	1					
ANR	5596015	IfStatement	if ( ERROR_SUCCESS == lres )		5595925	8					
ANR	5596016	Condition	ERROR_SUCCESS == lres	1550:5:48214:48234	5595925	0	True				
ANR	5596017	EqualityExpression	ERROR_SUCCESS == lres		5595925	0		==			
ANR	5596018	Identifier	ERROR_SUCCESS		5595925	0					
ANR	5596019	Identifier	lres		5595925	1					
ANR	5596020	CompoundStatement		17:1:574:574	5595925	1					
ANR	5596021	ReturnStatement	return true ;	1552:2:48242:48253	5595925	0	True				
ANR	5596022	Identifier	true		5595925	0					
ANR	5596023	IfStatement	if ( ERROR_SUCCESS != lres && ERROR_MORE_DATA != lres )		5595925	9					
ANR	5596024	Condition	ERROR_SUCCESS != lres && ERROR_MORE_DATA != lres	1555:5:48264:48311	5595925	0	True				
ANR	5596025	AndExpression	ERROR_SUCCESS != lres && ERROR_MORE_DATA != lres		5595925	0		&&			
ANR	5596026	EqualityExpression	ERROR_SUCCESS != lres		5595925	0		!=			
ANR	5596027	Identifier	ERROR_SUCCESS		5595925	0					
ANR	5596028	Identifier	lres		5595925	1					
ANR	5596029	EqualityExpression	ERROR_MORE_DATA != lres		5595925	1		!=			
ANR	5596030	Identifier	ERROR_MORE_DATA		5595925	0					
ANR	5596031	Identifier	lres		5595925	1					
ANR	5596032	CompoundStatement		22:1:651:651	5595925	1					
ANR	5596033	IfStatement	if ( ERROR_FILE_NOT_FOUND == lres )		5595925	0					
ANR	5596034	Condition	ERROR_FILE_NOT_FOUND == lres	1557:6:48323:48350	5595925	0	True				
ANR	5596035	EqualityExpression	ERROR_FILE_NOT_FOUND == lres		5595925	0		==			
ANR	5596036	Identifier	ERROR_FILE_NOT_FOUND		5595925	0					
ANR	5596037	Identifier	lres		5595925	1					
ANR	5596038	CompoundStatement		24:2:691:691	5595925	1					
ANR	5596039	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""The Performance Key \\""HKPD\\\\%s\\"" does not exist\\n"" , szKeyID )"	1560:3:48389:48483	5595925	0	True				
ANR	5596040	CallExpression	"dprintf ( D_FULLDEBUG , ""The Performance Key \\""HKPD\\\\%s\\"" does not exist\\n"" , szKeyID )"		5595925	0					
ANR	5596041	Callee	dprintf		5595925	0					
ANR	5596042	Identifier	dprintf		5595925	0					
ANR	5596043	ArgumentList	D_FULLDEBUG		5595925	1					
ANR	5596044	Argument	D_FULLDEBUG		5595925	0					
ANR	5596045	Identifier	D_FULLDEBUG		5595925	0					
ANR	5596046	Argument	"""The Performance Key \\""HKPD\\\\%s\\"" does not exist\\n"""		5595925	1					
ANR	5596047	PrimaryExpression	"""The Performance Key \\""HKPD\\\\%s\\"" does not exist\\n"""		5595925	0					
ANR	5596048	Argument	szKeyID		5595925	2					
ANR	5596049	Identifier	szKeyID		5595925	0					
ANR	5596050	ElseStatement	else		5595925	0					
ANR	5596051	CompoundStatement		33:3:903:923	5595925	0					
ANR	5596052	IdentifierDeclStatement	char szMsg [ MAX_PATH ] ;	1567:3:48567:48587	5595925	0	True				
ANR	5596053	IdentifierDecl	szMsg [ MAX_PATH ]		5595925	0					
ANR	5596054	IdentifierDeclType	char [ MAX_PATH ]		5595925	0					
ANR	5596055	Identifier	szMsg		5595925	1					
ANR	5596056	Identifier	MAX_PATH		5595925	2					
ANR	5596057	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to read Performance Key \\""HKPD\\\\%s\\""\\nReason: %s\\n"" , szKeyID , GetLastErrMessage ( GetLastError ( ) , szMsg , NUM_ELEMENTS ( szMsg ) ) )"	1568:3:48592:48759	5595925	1	True				
ANR	5596058	CallExpression	"dprintf ( D_ALWAYS , ""Failed to read Performance Key \\""HKPD\\\\%s\\""\\nReason: %s\\n"" , szKeyID , GetLastErrMessage ( GetLastError ( ) , szMsg , NUM_ELEMENTS ( szMsg ) ) )"		5595925	0					
ANR	5596059	Callee	dprintf		5595925	0					
ANR	5596060	Identifier	dprintf		5595925	0					
ANR	5596061	ArgumentList	D_ALWAYS		5595925	1					
ANR	5596062	Argument	D_ALWAYS		5595925	0					
ANR	5596063	Identifier	D_ALWAYS		5595925	0					
ANR	5596064	Argument	"""Failed to read Performance Key \\""HKPD\\\\%s\\""\\nReason: %s\\n"""		5595925	1					
ANR	5596065	PrimaryExpression	"""Failed to read Performance Key \\""HKPD\\\\%s\\""\\nReason: %s\\n"""		5595925	0					
ANR	5596066	Argument	szKeyID		5595925	2					
ANR	5596067	Identifier	szKeyID		5595925	0					
ANR	5596068	Argument	"GetLastErrMessage ( GetLastError ( ) , szMsg , NUM_ELEMENTS ( szMsg ) )"		5595925	3					
ANR	5596069	CallExpression	"GetLastErrMessage ( GetLastError ( ) , szMsg , NUM_ELEMENTS ( szMsg ) )"		5595925	0					
ANR	5596070	Callee	GetLastErrMessage		5595925	0					
ANR	5596071	Identifier	GetLastErrMessage		5595925	0					
ANR	5596072	ArgumentList	GetLastError ( )		5595925	1					
ANR	5596073	Argument	GetLastError ( )		5595925	0					
ANR	5596074	CallExpression	GetLastError ( )		5595925	0					
ANR	5596075	Callee	GetLastError		5595925	0					
ANR	5596076	Identifier	GetLastError		5595925	0					
ANR	5596077	ArgumentList			5595925	1					
ANR	5596078	Argument	szMsg		5595925	1					
ANR	5596079	Identifier	szMsg		5595925	0					
ANR	5596080	Argument	NUM_ELEMENTS ( szMsg )		5595925	2					
ANR	5596081	CallExpression	NUM_ELEMENTS ( szMsg )		5595925	0					
ANR	5596082	Callee	NUM_ELEMENTS		5595925	0					
ANR	5596083	Identifier	NUM_ELEMENTS		5595925	0					
ANR	5596084	ArgumentList	szMsg		5595925	1					
ANR	5596085	Argument	szMsg		5595925	0					
ANR	5596086	Identifier	szMsg		5595925	0					
ANR	5596087	ReturnStatement	return false ;	1573:2:48767:48779	5595925	1	True				
ANR	5596088	Identifier	false		5595925	0					
ANR	5596089	IdentifierDeclStatement	const byte * pdataOld = ( const byte * ) result . pdata1 ;	1577:1:48860:48911	5595925	10	True				
ANR	5596090	IdentifierDecl	* pdataOld = ( const byte * ) result . pdata1		5595925	0					
ANR	5596091	IdentifierDeclType	const byte *		5595925	0					
ANR	5596092	Identifier	pdataOld		5595925	1					
ANR	5596093	AssignmentExpression	* pdataOld = ( const byte * ) result . pdata1		5595925	2		=			
ANR	5596094	Identifier	pdataOld		5595925	0					
ANR	5596095	CastExpression	( const byte * ) result . pdata1		5595925	1					
ANR	5596096	CastTarget	const byte *		5595925	0					
ANR	5596097	MemberAccess	result . pdata1		5595925	1					
ANR	5596098	Identifier	result		5595925	0					
ANR	5596099	Identifier	pdata1		5595925	1					
ANR	5596100	ExpressionStatement	result . pdata1 = NULL	1578:1:48914:48934	5595925	11	True				
ANR	5596101	AssignmentExpression	result . pdata1 = NULL		5595925	0		=			
ANR	5596102	MemberAccess	result . pdata1		5595925	0					
ANR	5596103	Identifier	result		5595925	0					
ANR	5596104	Identifier	pdata1		5595925	1					
ANR	5596105	Identifier	NULL		5595925	1					
ANR	5596106	ExpressionStatement	result . pdata2 = NULL	1579:1:48937:48957	5595925	12	True				
ANR	5596107	AssignmentExpression	result . pdata2 = NULL		5595925	0		=			
ANR	5596108	MemberAccess	result . pdata2		5595925	0					
ANR	5596109	Identifier	result		5595925	0					
ANR	5596110	Identifier	pdata2		5595925	1					
ANR	5596111	Identifier	NULL		5595925	1					
ANR	5596112	IdentifierDeclStatement	DWORD cbAlloc = result . cbAlloc ;	1583:1:49076:49107	5595925	13	True				
ANR	5596113	IdentifierDecl	cbAlloc = result . cbAlloc		5595925	0					
ANR	5596114	IdentifierDeclType	DWORD		5595925	0					
ANR	5596115	Identifier	cbAlloc		5595925	1					
ANR	5596116	AssignmentExpression	cbAlloc = result . cbAlloc		5595925	2		=			
ANR	5596117	Identifier	cbAlloc		5595925	0					
ANR	5596118	MemberAccess	result . cbAlloc		5595925	1					
ANR	5596119	Identifier	result		5595925	0					
ANR	5596120	Identifier	cbAlloc		5595925	1					
ANR	5596121	DoStatement	do		5595925	14					
ANR	5596122	CompoundStatement		51:1:1451:1451	5595925	0					
ANR	5596123	IfStatement	if ( cbAlloc < 0x10000 )		5595925	0					
ANR	5596124	Condition	cbAlloc < 0x10000	1586:6:49123:49139	5595925	0	True				
ANR	5596125	RelationalExpression	cbAlloc < 0x10000		5595925	0		<			
ANR	5596126	Identifier	cbAlloc		5595925	0					
ANR	5596127	PrimaryExpression	0x10000		5595925	1					
ANR	5596128	ExpressionStatement	cbAlloc *= 2	1586:25:49142:49154	5595925	1	True				
ANR	5596129	AssignmentExpression	cbAlloc *= 2		5595925	0		*=			
ANR	5596130	Identifier	cbAlloc		5595925	0					
ANR	5596131	PrimaryExpression	2		5595925	1					
ANR	5596132	ExpressionStatement	cbAlloc += ( cbAlloc > 0x200 ) ? cbAlloc : 0x200	1587:8:49164:49210	5595925	1	True				
ANR	5596133	AssignmentExpression	cbAlloc += ( cbAlloc > 0x200 ) ? cbAlloc : 0x200		5595925	0		+=			
ANR	5596134	Identifier	cbAlloc		5595925	0					
ANR	5596135	ConditionalExpression	( cbAlloc > 0x200 ) ? cbAlloc : 0x200		5595925	1					
ANR	5596136	Condition	cbAlloc > 0x200		5595925	0					
ANR	5596137	RelationalExpression	cbAlloc > 0x200		5595925	0		>			
ANR	5596138	Identifier	cbAlloc		5595925	0					
ANR	5596139	PrimaryExpression	0x200		5595925	1					
ANR	5596140	Identifier	cbAlloc		5595925	1					
ANR	5596141	PrimaryExpression	0x200		5595925	2					
ANR	5596142	IfStatement	if ( pdata )		5595925	2					
ANR	5596143	Condition	pdata	1589:6:49219:49223	5595925	0	True				
ANR	5596144	Identifier	pdata		5595925	0					
ANR	5596145	ExpressionStatement	free ( pdata )	1590:3:49230:49241	5595925	1	True				
ANR	5596146	CallExpression	free ( pdata )		5595925	0					
ANR	5596147	Callee	free		5595925	0					
ANR	5596148	Identifier	free		5595925	0					
ANR	5596149	ArgumentList	pdata		5595925	1					
ANR	5596150	Argument	pdata		5595925	0					
ANR	5596151	Identifier	pdata		5595925	0					
ANR	5596152	ExpressionStatement	pdata = ( byte * ) malloc ( cbAlloc )	1591:2:49245:49275	5595925	3	True				
ANR	5596153	AssignmentExpression	pdata = ( byte * ) malloc ( cbAlloc )		5595925	0		=			
ANR	5596154	Identifier	pdata		5595925	0					
ANR	5596155	CastExpression	( byte * ) malloc ( cbAlloc )		5595925	1					
ANR	5596156	CastTarget	byte *		5595925	0					
ANR	5596157	CallExpression	malloc ( cbAlloc )		5595925	1					
ANR	5596158	Callee	malloc		5595925	0					
ANR	5596159	Identifier	malloc		5595925	0					
ANR	5596160	ArgumentList	cbAlloc		5595925	1					
ANR	5596161	Argument	cbAlloc		5595925	0					
ANR	5596162	Identifier	cbAlloc		5595925	0					
ANR	5596163	IfStatement	if ( ! pdata )		5595925	4					
ANR	5596164	Condition	! pdata	1592:7:49284:49290	5595925	0	True				
ANR	5596165	UnaryOperationExpression	! pdata		5595925	0					
ANR	5596166	UnaryOperator	!		5595925	0					
ANR	5596167	Identifier	pdata		5595925	1					
ANR	5596168	BreakStatement	break ;	1593:3:49296:49301	5595925	1	True				
ANR	5596169	ExpressionStatement	cbData = cbAlloc	1597:2:49385:49401	5595925	5	True				
ANR	5596170	AssignmentExpression	cbData = cbAlloc		5595925	0		=			
ANR	5596171	Identifier	cbData		5595925	0					
ANR	5596172	Identifier	cbAlloc		5595925	1					
ANR	5596173	ExpressionStatement	"lres = RegQueryValueEx ( HKEY_PERFORMANCE_DATA , szKeyID , NULL , & vtype , pdata , & cbData )"	1598:2:49405:49489	5595925	6	True				
ANR	5596174	AssignmentExpression	"lres = RegQueryValueEx ( HKEY_PERFORMANCE_DATA , szKeyID , NULL , & vtype , pdata , & cbData )"		5595925	0		=			
ANR	5596175	Identifier	lres		5595925	0					
ANR	5596176	CallExpression	"RegQueryValueEx ( HKEY_PERFORMANCE_DATA , szKeyID , NULL , & vtype , pdata , & cbData )"		5595925	1					
ANR	5596177	Callee	RegQueryValueEx		5595925	0					
ANR	5596178	Identifier	RegQueryValueEx		5595925	0					
ANR	5596179	ArgumentList	HKEY_PERFORMANCE_DATA		5595925	1					
ANR	5596180	Argument	HKEY_PERFORMANCE_DATA		5595925	0					
ANR	5596181	Identifier	HKEY_PERFORMANCE_DATA		5595925	0					
ANR	5596182	Argument	szKeyID		5595925	1					
ANR	5596183	Identifier	szKeyID		5595925	0					
ANR	5596184	Argument	NULL		5595925	2					
ANR	5596185	Identifier	NULL		5595925	0					
ANR	5596186	Argument	& vtype		5595925	3					
ANR	5596187	UnaryOperationExpression	& vtype		5595925	0					
ANR	5596188	UnaryOperator	&		5595925	0					
ANR	5596189	Identifier	vtype		5595925	1					
ANR	5596190	Argument	pdata		5595925	4					
ANR	5596191	Identifier	pdata		5595925	0					
ANR	5596192	Argument	& cbData		5595925	5					
ANR	5596193	UnaryOperationExpression	& cbData		5595925	0					
ANR	5596194	UnaryOperator	&		5595925	0					
ANR	5596195	Identifier	cbData		5595925	1					
ANR	5596196	Condition	lres == ERROR_MORE_DATA	1600:10:49502:49524	5595925	1	True				
ANR	5596197	EqualityExpression	lres == ERROR_MORE_DATA		5595925	0		==			
ANR	5596198	Identifier	lres		5595925	0					
ANR	5596199	Identifier	ERROR_MORE_DATA		5595925	1					
ANR	5596200	IfStatement	if ( lres != ERROR_SUCCESS )		5595925	15					
ANR	5596201	Condition	lres != ERROR_SUCCESS	1602:5:49534:49554	5595925	0	True				
ANR	5596202	EqualityExpression	lres != ERROR_SUCCESS		5595925	0		!=			
ANR	5596203	Identifier	lres		5595925	0					
ANR	5596204	Identifier	ERROR_SUCCESS		5595925	1					
ANR	5596205	CompoundStatement		69:1:1894:1894	5595925	1					
ANR	5596206	IfStatement	if ( pdataOld )		5595925	0					
ANR	5596207	Condition	pdataOld	1604:6:49566:49573	5595925	0	True				
ANR	5596208	Identifier	pdataOld		5595925	0					
ANR	5596209	ExpressionStatement	free ( ( void * ) pdataOld )	1604:16:49576:49597	5595925	1	True				
ANR	5596210	CallExpression	free ( ( void * ) pdataOld )		5595925	0					
ANR	5596211	Callee	free		5595925	0					
ANR	5596212	Identifier	free		5595925	0					
ANR	5596213	ArgumentList	( void * ) pdataOld		5595925	1					
ANR	5596214	Argument	( void * ) pdataOld		5595925	0					
ANR	5596215	CastExpression	( void * ) pdataOld		5595925	0					
ANR	5596216	CastTarget	void *		5595925	0					
ANR	5596217	Identifier	pdataOld		5595925	1					
ANR	5596218	IfStatement	if ( pdata )		5595925	1					
ANR	5596219	Condition	pdata	1605:6:49605:49609	5595925	0	True				
ANR	5596220	Identifier	pdata		5595925	0					
ANR	5596221	ExpressionStatement	free ( pdata )	1605:13:49612:49623	5595925	1	True				
ANR	5596222	CallExpression	free ( pdata )		5595925	0					
ANR	5596223	Callee	free		5595925	0					
ANR	5596224	Identifier	free		5595925	0					
ANR	5596225	ArgumentList	pdata		5595925	1					
ANR	5596226	Argument	pdata		5595925	0					
ANR	5596227	Identifier	pdata		5595925	0					
ANR	5596228	ReturnStatement	return false ;	1606:2:49627:49639	5595925	2	True				
ANR	5596229	Identifier	false		5595925	0					
ANR	5596230	IfStatement	if ( pdataOld )		5595925	16					
ANR	5596231	Condition	pdataOld	1611:5:49728:49735	5595925	0	True				
ANR	5596232	Identifier	pdataOld		5595925	0					
ANR	5596233	CompoundStatement		79:2:2079:2117	5595925	1					
ANR	5596234	IdentifierDeclStatement	byte * pdataT = ( byte * ) malloc ( cbAlloc ) ;	1613:2:49743:49781	5595925	0	True				
ANR	5596235	IdentifierDecl	* pdataT = ( byte * ) malloc ( cbAlloc )		5595925	0					
ANR	5596236	IdentifierDeclType	byte *		5595925	0					
ANR	5596237	Identifier	pdataT		5595925	1					
ANR	5596238	AssignmentExpression	* pdataT = ( byte * ) malloc ( cbAlloc )		5595925	2		=			
ANR	5596239	Identifier	pdataT		5595925	0					
ANR	5596240	CastExpression	( byte * ) malloc ( cbAlloc )		5595925	1					
ANR	5596241	CastTarget	byte *		5595925	0					
ANR	5596242	CallExpression	malloc ( cbAlloc )		5595925	1					
ANR	5596243	Callee	malloc		5595925	0					
ANR	5596244	Identifier	malloc		5595925	0					
ANR	5596245	ArgumentList	cbAlloc		5595925	1					
ANR	5596246	Argument	cbAlloc		5595925	0					
ANR	5596247	Identifier	cbAlloc		5595925	0					
ANR	5596248	IfStatement	if ( pdataT )		5595925	1					
ANR	5596249	Condition	pdataT	1614:6:49789:49794	5595925	0	True				
ANR	5596250	Identifier	pdataT		5595925	0					
ANR	5596251	CompoundStatement		81:2:2135:2135	5595925	1					
ANR	5596252	ExpressionStatement	"CopyMemory ( pdataT , pdataOld , result . cbAlloc )"	1616:3:49804:49848	5595925	0	True				
ANR	5596253	CallExpression	"CopyMemory ( pdataT , pdataOld , result . cbAlloc )"		5595925	0					
ANR	5596254	Callee	CopyMemory		5595925	0					
ANR	5596255	Identifier	CopyMemory		5595925	0					
ANR	5596256	ArgumentList	pdataT		5595925	1					
ANR	5596257	Argument	pdataT		5595925	0					
ANR	5596258	Identifier	pdataT		5595925	0					
ANR	5596259	Argument	pdataOld		5595925	1					
ANR	5596260	Identifier	pdataOld		5595925	0					
ANR	5596261	Argument	result . cbAlloc		5595925	2					
ANR	5596262	MemberAccess	result . cbAlloc		5595925	0					
ANR	5596263	Identifier	result		5595925	0					
ANR	5596264	Identifier	cbAlloc		5595925	1					
ANR	5596265	ExpressionStatement	free ( ( void * ) pdataOld )	1617:3:49853:49875	5595925	1	True				
ANR	5596266	CallExpression	free ( ( void * ) pdataOld )		5595925	0					
ANR	5596267	Callee	free		5595925	0					
ANR	5596268	Identifier	free		5595925	0					
ANR	5596269	ArgumentList	( void * ) pdataOld		5595925	1					
ANR	5596270	Argument	( void * ) pdataOld		5595925	0					
ANR	5596271	CastExpression	( void * ) pdataOld		5595925	0					
ANR	5596272	CastTarget	void *		5595925	0					
ANR	5596273	Identifier	pdataOld		5595925	1					
ANR	5596274	ExpressionStatement	pdataOld = pdataT	1618:3:49880:49897	5595925	2	True				
ANR	5596275	AssignmentExpression	pdataOld = pdataT		5595925	0		=			
ANR	5596276	Identifier	pdataOld		5595925	0					
ANR	5596277	Identifier	pdataT		5595925	1					
ANR	5596278	ExpressionStatement	result . cbAlloc = cbAlloc	1622:1:49908:49932	5595925	17	True				
ANR	5596279	AssignmentExpression	result . cbAlloc = cbAlloc		5595925	0		=			
ANR	5596280	MemberAccess	result . cbAlloc		5595925	0					
ANR	5596281	Identifier	result		5595925	0					
ANR	5596282	Identifier	cbAlloc		5595925	1					
ANR	5596283	Identifier	cbAlloc		5595925	1					
ANR	5596284	ExpressionStatement	result . pdata1 = ( const WinPerf_Data * ) pdataOld	1623:1:49935:49981	5595925	18	True				
ANR	5596285	AssignmentExpression	result . pdata1 = ( const WinPerf_Data * ) pdataOld		5595925	0		=			
ANR	5596286	MemberAccess	result . pdata1		5595925	0					
ANR	5596287	Identifier	result		5595925	0					
ANR	5596288	Identifier	pdata1		5595925	1					
ANR	5596289	CastExpression	( const WinPerf_Data * ) pdataOld		5595925	1					
ANR	5596290	CastTarget	const WinPerf_Data *		5595925	0					
ANR	5596291	Identifier	pdataOld		5595925	1					
ANR	5596292	ExpressionStatement	result . pdata2 = ( const WinPerf_Data * ) pdata	1624:1:49984:50027	5595925	19	True				
ANR	5596293	AssignmentExpression	result . pdata2 = ( const WinPerf_Data * ) pdata		5595925	0		=			
ANR	5596294	MemberAccess	result . pdata2		5595925	0					
ANR	5596295	Identifier	result		5595925	0					
ANR	5596296	Identifier	pdata2		5595925	1					
ANR	5596297	CastExpression	( const WinPerf_Data * ) pdata		5595925	1					
ANR	5596298	CastTarget	const WinPerf_Data *		5595925	0					
ANR	5596299	Identifier	pdata		5595925	1					
ANR	5596300	ReturnStatement	return true ;	1625:1:50030:50041	5595925	20	True				
ANR	5596301	Identifier	true		5595925	0					
ANR	5596302	ReturnType	bool		5595925	1					
ANR	5596303	Identifier	update_windows_performance_result		5595925	2					
ANR	5596304	ParameterList	WinPerf_QueryResult & result		5595925	3					
ANR	5596305	Parameter	WinPerf_QueryResult & result	1534:39:47633:47660	5595925	0	True				
ANR	5596306	ParameterType	WinPerf_QueryResult &		5595925	0					
ANR	5596307	Identifier	result		5595925	1					
ANR	5596308	CFGEntryNode	ENTRY		5595925		True				
ANR	5596309	CFGExitNode	EXIT		5595925		True				
ANR	5596310	Symbol	GetLastErrMessage		5595925						
ANR	5596311	Symbol	NUM_ELEMENTS		5595925						
ANR	5596312	Symbol	pdata		5595925						
ANR	5596313	Symbol	vtype		5595925						
ANR	5596314	Symbol	lres		5595925						
ANR	5596315	Symbol	REG_SZ		5595925						
ANR	5596316	Symbol	& cbData		5595925						
ANR	5596317	Symbol	& vtype		5595925						
ANR	5596318	Symbol	result		5595925						
ANR	5596319	Symbol	ERROR_SUCCESS		5595925						
ANR	5596320	Symbol	RegQueryValueEx		5595925						
ANR	5596321	Symbol	ERROR_FILE_NOT_FOUND		5595925						
ANR	5596322	Symbol	szMsg		5595925						
ANR	5596323	Symbol	ERROR_MORE_DATA		5595925						
ANR	5596324	Symbol	cbData		5595925						
ANR	5596325	Symbol	cbAlloc		5595925						
ANR	5596326	Symbol	malloc		5595925						
ANR	5596327	Symbol	NULL		5595925						
ANR	5596328	Symbol	result . idObject		5595925						
ANR	5596329	Symbol	pdataOld		5595925						
ANR	5596330	Symbol	result . cbAlloc		5595925						
ANR	5596331	Symbol	D_ALWAYS		5595925						
ANR	5596332	Symbol	false		5595925						
ANR	5596333	Symbol	D_FULLDEBUG		5595925						
ANR	5596334	Symbol	result . pdata1		5595925						
ANR	5596335	Symbol	result . pdata2		5595925						
ANR	5596336	Symbol	HKEY_PERFORMANCE_DATA		5595925						
ANR	5596337	Symbol	GetLastError		5595925						
ANR	5596338	Symbol	pdataT		5595925						
ANR	5596339	Symbol	true		5595925						
ANR	5596340	Symbol	szKeyID		5595925						
ANR	5596341	Function	update_all_WinPerf_results	1628:0:50046:50370							
ANR	5596342	FunctionDef	update_all_WinPerf_results ()		5596341	0					
ANR	5596343	CompoundStatement		1629:0:50080:50370	5596341	0					
ANR	5596344	IfStatement	if ( rl . pQueries )		5596341	0					
ANR	5596345	Condition	rl . pQueries	1630:8:50090:50100	5596341	0	True				
ANR	5596346	MemberAccess	rl . pQueries		5596341	0					
ANR	5596347	Identifier	rl		5596341	0					
ANR	5596348	Identifier	pQueries		5596341	1					
ANR	5596349	CompoundStatement		5:8:76:102	5596341	1					
ANR	5596350	ExpressionStatement	rl . pQueries -> startIterations ( )	1632:8:50117:50147	5596341	0	True				
ANR	5596351	CallExpression	rl . pQueries -> startIterations ( )		5596341	0					
ANR	5596352	Callee	rl . pQueries -> startIterations		5596341	0					
ANR	5596353	PtrMemberAccess	rl . pQueries -> startIterations		5596341	0					
ANR	5596354	MemberAccess	rl . pQueries		5596341	0					
ANR	5596355	Identifier	rl		5596341	0					
ANR	5596356	Identifier	pQueries		5596341	1					
ANR	5596357	Identifier	startIterations		5596341	1					
ANR	5596358	ArgumentList			5596341	1					
ANR	5596359	IdentifierDeclStatement	WinPerf_QueryResult result ;	1633:8:50157:50183	5596341	1	True				
ANR	5596360	IdentifierDecl	result		5596341	0					
ANR	5596361	IdentifierDeclType	WinPerf_QueryResult		5596341	0					
ANR	5596362	Identifier	result		5596341	1					
ANR	5596363	WhileStatement	while ( rl . pQueries -> iterate ( result ) )		5596341	2					
ANR	5596364	Condition	rl . pQueries -> iterate ( result )	1634:15:50200:50227	5596341	0	True				
ANR	5596365	CallExpression	rl . pQueries -> iterate ( result )		5596341	0					
ANR	5596366	Callee	rl . pQueries -> iterate		5596341	0					
ANR	5596367	PtrMemberAccess	rl . pQueries -> iterate		5596341	0					
ANR	5596368	MemberAccess	rl . pQueries		5596341	0					
ANR	5596369	Identifier	rl		5596341	0					
ANR	5596370	Identifier	pQueries		5596341	1					
ANR	5596371	Identifier	iterate		5596341	1					
ANR	5596372	ArgumentList	result		5596341	1					
ANR	5596373	Argument	result		5596341	0					
ANR	5596374	Identifier	result		5596341	0					
ANR	5596375	CompoundStatement		7:8:158:158	5596341	1					
ANR	5596376	ExpressionStatement	update_windows_performance_result ( result )	1636:12:50253:50294	5596341	0	True				
ANR	5596377	CallExpression	update_windows_performance_result ( result )		5596341	0					
ANR	5596378	Callee	update_windows_performance_result		5596341	0					
ANR	5596379	Identifier	update_windows_performance_result		5596341	0					
ANR	5596380	ArgumentList	result		5596341	1					
ANR	5596381	Argument	result		5596341	0					
ANR	5596382	Identifier	result		5596341	0					
ANR	5596383	ExpressionStatement	"rl . pQueries -> insert ( result . idObject , result )"	1637:12:50308:50352	5596341	1	True				
ANR	5596384	CallExpression	"rl . pQueries -> insert ( result . idObject , result )"		5596341	0					
ANR	5596385	Callee	rl . pQueries -> insert		5596341	0					
ANR	5596386	PtrMemberAccess	rl . pQueries -> insert		5596341	0					
ANR	5596387	MemberAccess	rl . pQueries		5596341	0					
ANR	5596388	Identifier	rl		5596341	0					
ANR	5596389	Identifier	pQueries		5596341	1					
ANR	5596390	Identifier	insert		5596341	1					
ANR	5596391	ArgumentList	result . idObject		5596341	1					
ANR	5596392	Argument	result . idObject		5596341	0					
ANR	5596393	MemberAccess	result . idObject		5596341	0					
ANR	5596394	Identifier	result		5596341	0					
ANR	5596395	Identifier	idObject		5596341	1					
ANR	5596396	Argument	result		5596341	1					
ANR	5596397	Identifier	result		5596341	0					
ANR	5596398	ReturnType	void		5596341	1					
ANR	5596399	Identifier	update_all_WinPerf_results		5596341	2					
ANR	5596400	ParameterList			5596341	3					
ANR	5596401	CFGEntryNode	ENTRY		5596341		True				
ANR	5596402	CFGExitNode	EXIT		5596341		True				
ANR	5596403	Symbol	result		5596341						
ANR	5596404	Symbol	* rl		5596341						
ANR	5596405	Symbol	result . idObject		5596341						
ANR	5596406	Symbol	rl . pQueries		5596341						
ANR	5596407	Symbol	* rl . pQueries		5596341						
ANR	5596408	Symbol	rl		5596341						
ANR	5596409	Symbol	rl . pQueries -> iterate		5596341						
ANR	5596410	Function	update_windows_performance_value	1642:0:50373:53655							
ANR	5596411	FunctionDef	"update_windows_performance_value (const WinPerf_QueryResult & result , const WinPerf_Query & query , AttribValue * pav)"		5596410	0					
ANR	5596412	CompoundStatement		1646:0:50507:53655	5596410	0					
ANR	5596413	IfStatement	if ( ! pav )		5596410	0					
ANR	5596414	Condition	! pav	1647:6:50515:50519	5596410	0	True				
ANR	5596415	UnaryOperationExpression	! pav		5596410	0					
ANR	5596416	UnaryOperator	!		5596410	0					
ANR	5596417	Identifier	pav		5596410	1					
ANR	5596418	ReturnStatement	return false ;	1648:2:50524:50536	5596410	1	True				
ANR	5596419	Identifier	false		5596410	0					
ANR	5596420	IdentifierDeclStatement	const WinPerf_Data * pHead = result . pdata2 ;	1650:1:50540:50582	5596410	1	True				
ANR	5596421	IdentifierDecl	* pHead = result . pdata2		5596410	0					
ANR	5596422	IdentifierDeclType	const WinPerf_Data *		5596410	0					
ANR	5596423	Identifier	pHead		5596410	1					
ANR	5596424	AssignmentExpression	* pHead = result . pdata2		5596410	2		=			
ANR	5596425	Identifier	pHead		5596410	0					
ANR	5596426	MemberAccess	result . pdata2		5596410	1					
ANR	5596427	Identifier	result		5596410	0					
ANR	5596428	Identifier	pdata2		5596410	1					
ANR	5596429	IdentifierDeclStatement	const WinPerf_Object * pObj = pHead -> Find ( query . idKey ) ;	1651:1:50585:50639	5596410	2	True				
ANR	5596430	IdentifierDecl	* pObj = pHead -> Find ( query . idKey )		5596410	0					
ANR	5596431	IdentifierDeclType	const WinPerf_Object *		5596410	0					
ANR	5596432	Identifier	pObj		5596410	1					
ANR	5596433	AssignmentExpression	* pObj = pHead -> Find ( query . idKey )		5596410	2		=			
ANR	5596434	Identifier	pObj		5596410	0					
ANR	5596435	CallExpression	pHead -> Find ( query . idKey )		5596410	1					
ANR	5596436	Callee	pHead -> Find		5596410	0					
ANR	5596437	PtrMemberAccess	pHead -> Find		5596410	0					
ANR	5596438	Identifier	pHead		5596410	0					
ANR	5596439	Identifier	Find		5596410	1					
ANR	5596440	ArgumentList	query . idKey		5596410	1					
ANR	5596441	Argument	query . idKey		5596410	0					
ANR	5596442	MemberAccess	query . idKey		5596410	0					
ANR	5596443	Identifier	query		5596410	0					
ANR	5596444	Identifier	idKey		5596410	1					
ANR	5596445	IfStatement	if ( ! pObj )		5596410	3					
ANR	5596446	Condition	! pObj	1652:6:50647:50652	5596410	0	True				
ANR	5596447	UnaryOperationExpression	! pObj		5596410	0					
ANR	5596448	UnaryOperator	!		5596410	0					
ANR	5596449	Identifier	pObj		5596410	1					
ANR	5596450	ReturnStatement	return false ;	1653:2:50657:50669	5596410	1	True				
ANR	5596451	Identifier	false		5596410	0					
ANR	5596452	IdentifierDeclStatement	const WinPerf_CounterDef * pCounter = pObj -> Select ( & query . idCounter ) ;	1655:1:50673:50741	5596410	4	True				
ANR	5596453	IdentifierDecl	* pCounter = pObj -> Select ( & query . idCounter )		5596410	0					
ANR	5596454	IdentifierDeclType	const WinPerf_CounterDef *		5596410	0					
ANR	5596455	Identifier	pCounter		5596410	1					
ANR	5596456	AssignmentExpression	* pCounter = pObj -> Select ( & query . idCounter )		5596410	2		=			
ANR	5596457	Identifier	pCounter		5596410	0					
ANR	5596458	CallExpression	pObj -> Select ( & query . idCounter )		5596410	1					
ANR	5596459	Callee	pObj -> Select		5596410	0					
ANR	5596460	PtrMemberAccess	pObj -> Select		5596410	0					
ANR	5596461	Identifier	pObj		5596410	0					
ANR	5596462	Identifier	Select		5596410	1					
ANR	5596463	ArgumentList	& query . idCounter		5596410	1					
ANR	5596464	Argument	& query . idCounter		5596410	0					
ANR	5596465	UnaryOperationExpression	& query . idCounter		5596410	0					
ANR	5596466	UnaryOperator	&		5596410	0					
ANR	5596467	MemberAccess	query . idCounter		5596410	1					
ANR	5596468	Identifier	query		5596410	0					
ANR	5596469	Identifier	idCounter		5596410	1					
ANR	5596470	IfStatement	if ( ! pCounter )		5596410	5					
ANR	5596471	Condition	! pCounter	1656:6:50749:50758	5596410	0	True				
ANR	5596472	UnaryOperationExpression	! pCounter		5596410	0					
ANR	5596473	UnaryOperator	!		5596410	0					
ANR	5596474	Identifier	pCounter		5596410	1					
ANR	5596475	ReturnStatement	return false ;	1657:2:50763:50775	5596410	1	True				
ANR	5596476	Identifier	false		5596410	0					
ANR	5596477	IdentifierDeclStatement	const char * pszInst = NULL ;	1659:1:50779:50805	5596410	6	True				
ANR	5596478	IdentifierDecl	* pszInst = NULL		5596410	0					
ANR	5596479	IdentifierDeclType	const char *		5596410	0					
ANR	5596480	Identifier	pszInst		5596410	1					
ANR	5596481	AssignmentExpression	* pszInst = NULL		5596410	2		=			
ANR	5596482	Identifier	NULL		5596410	0					
ANR	5596483	Identifier	NULL		5596410	1					
ANR	5596484	IfStatement	if ( query . cchInst )		5596410	7					
ANR	5596485	Condition	query . cchInst	1660:5:50812:50824	5596410	0	True				
ANR	5596486	MemberAccess	query . cchInst		5596410	0					
ANR	5596487	Identifier	query		5596410	0					
ANR	5596488	Identifier	cchInst		5596410	1					
ANR	5596489	CompoundStatement		16:1:320:320	5596410	1					
ANR	5596490	IfStatement	if ( ! query . ixInst )		5596410	0					
ANR	5596491	Condition	! query . ixInst	1662:7:50837:50850	5596410	0	True				
ANR	5596492	UnaryOperationExpression	! query . ixInst		5596410	0					
ANR	5596493	UnaryOperator	!		5596410	0					
ANR	5596494	MemberAccess	query . ixInst		5596410	1					
ANR	5596495	Identifier	query		5596410	0					
ANR	5596496	Identifier	ixInst		5596410	1					
ANR	5596497	ExpressionStatement	pszInst = ( const char * ) ( ( & query ) + 1 )	1663:3:50856:50891	5596410	1	True				
ANR	5596498	AssignmentExpression	pszInst = ( const char * ) ( ( & query ) + 1 )		5596410	0		=			
ANR	5596499	Identifier	pszInst		5596410	0					
ANR	5596500	CastExpression	( const char * ) ( ( & query ) + 1 )		5596410	1					
ANR	5596501	CastTarget	const char *		5596410	0					
ANR	5596502	AdditiveExpression	( & query ) + 1		5596410	1		+			
ANR	5596503	UnaryOperationExpression	& query		5596410	0					
ANR	5596504	UnaryOperator	&		5596410	0					
ANR	5596505	Identifier	query		5596410	1					
ANR	5596506	PrimaryExpression	1		5596410	1					
ANR	5596507	ElseStatement	else		5596410	0					
ANR	5596508	CompoundStatement		20:2:394:394	5596410	0					
ANR	5596509	IdentifierDeclStatement	const BYTE * pbData = pObj -> CounterData ( ) ;	1671:1:51000:51041	5596410	8	True				
ANR	5596510	IdentifierDecl	* pbData = pObj -> CounterData ( )		5596410	0					
ANR	5596511	IdentifierDeclType	const BYTE *		5596410	0					
ANR	5596512	Identifier	pbData		5596410	1					
ANR	5596513	AssignmentExpression	* pbData = pObj -> CounterData ( )		5596410	2		=			
ANR	5596514	Identifier	pbData		5596410	0					
ANR	5596515	CallExpression	pObj -> CounterData ( )		5596410	1					
ANR	5596516	Callee	pObj -> CounterData		5596410	0					
ANR	5596517	PtrMemberAccess	pObj -> CounterData		5596410	0					
ANR	5596518	Identifier	pObj		5596410	0					
ANR	5596519	Identifier	CounterData		5596410	1					
ANR	5596520	ArgumentList			5596410	1					
ANR	5596521	IdentifierDeclStatement	const WinPerf_ObjInst * pInst = pObj -> FirstInstance ( ) ;	1679:1:51394:51447	5596410	9	True				
ANR	5596522	IdentifierDecl	* pInst = pObj -> FirstInstance ( )		5596410	0					
ANR	5596523	IdentifierDeclType	const WinPerf_ObjInst *		5596410	0					
ANR	5596524	Identifier	pInst		5596410	1					
ANR	5596525	AssignmentExpression	* pInst = pObj -> FirstInstance ( )		5596410	2		=			
ANR	5596526	Identifier	pInst		5596410	0					
ANR	5596527	CallExpression	pObj -> FirstInstance ( )		5596410	1					
ANR	5596528	Callee	pObj -> FirstInstance		5596410	0					
ANR	5596529	PtrMemberAccess	pObj -> FirstInstance		5596410	0					
ANR	5596530	Identifier	pObj		5596410	0					
ANR	5596531	Identifier	FirstInstance		5596410	1					
ANR	5596532	ArgumentList			5596410	1					
ANR	5596533	IdentifierDeclStatement	const WCHAR * pszDataName = NULL ;	1680:1:51450:51482	5596410	10	True				
ANR	5596534	IdentifierDecl	* pszDataName = NULL		5596410	0					
ANR	5596535	IdentifierDeclType	const WCHAR *		5596410	0					
ANR	5596536	Identifier	pszDataName		5596410	1					
ANR	5596537	AssignmentExpression	* pszDataName = NULL		5596410	2		=			
ANR	5596538	Identifier	NULL		5596410	0					
ANR	5596539	Identifier	NULL		5596410	1					
ANR	5596540	ForStatement	"for ( int ix = 1 ; ix < ( int ) pObj -> NumInstances ; ++ ix , pInst = pInst -> Next ( ) )"		5596410	11					
ANR	5596541	ForInit	int ix = 1 ;	1681:6:51490:51500	5596410	0	True				
ANR	5596542	IdentifierDeclStatement	int ix = 1 ;		5596410	0					
ANR	5596543	IdentifierDecl	ix = 1		5596410	0					
ANR	5596544	IdentifierDeclType	int		5596410	0					
ANR	5596545	Identifier	ix		5596410	1					
ANR	5596546	AssignmentExpression	ix = 1		5596410	2		=			
ANR	5596547	Identifier	ix		5596410	0					
ANR	5596548	PrimaryExpression	1		5596410	1					
ANR	5596549	Condition	ix < ( int ) pObj -> NumInstances	1681:18:51502:51529	5596410	1	True				
ANR	5596550	RelationalExpression	ix < ( int ) pObj -> NumInstances		5596410	0		<			
ANR	5596551	Identifier	ix		5596410	0					
ANR	5596552	CastExpression	( int ) pObj -> NumInstances		5596410	1					
ANR	5596553	CastTarget	int		5596410	0					
ANR	5596554	PtrMemberAccess	pObj -> NumInstances		5596410	1					
ANR	5596555	Identifier	pObj		5596410	0					
ANR	5596556	Identifier	NumInstances		5596410	1					
ANR	5596557	Expression	"++ ix , pInst = pInst -> Next ( )"	1681:48:51532:51558	5596410	2	True				
ANR	5596558	UnaryExpression	++ ix		5596410	0					
ANR	5596559	IncDec	++		5596410	0					
ANR	5596560	Identifier	ix		5596410	1					
ANR	5596561	AssignmentExpression	pInst = pInst -> Next ( )		5596410	1		=			
ANR	5596562	Identifier	pInst		5596410	0					
ANR	5596563	CallExpression	pInst -> Next ( )		5596410	1					
ANR	5596564	Callee	pInst -> Next		5596410	0					
ANR	5596565	PtrMemberAccess	pInst -> Next		5596410	0					
ANR	5596566	Identifier	pInst		5596410	0					
ANR	5596567	Identifier	Next		5596410	1					
ANR	5596568	ArgumentList			5596410	1					
ANR	5596569	CompoundStatement		37:1:1054:1054	5596410	3					
ANR	5596570	IfStatement	if ( pszInst && pInst -> Matches ( pszInst ) )		5596410	0					
ANR	5596571	Condition	pszInst && pInst -> Matches ( pszInst )	1683:6:51570:51603	5596410	0	True				
ANR	5596572	AndExpression	pszInst && pInst -> Matches ( pszInst )		5596410	0		&&			
ANR	5596573	Identifier	pszInst		5596410	0					
ANR	5596574	CallExpression	pInst -> Matches ( pszInst )		5596410	1					
ANR	5596575	Callee	pInst -> Matches		5596410	0					
ANR	5596576	PtrMemberAccess	pInst -> Matches		5596410	0					
ANR	5596577	Identifier	pInst		5596410	0					
ANR	5596578	Identifier	Matches		5596410	1					
ANR	5596579	ArgumentList	pszInst		5596410	1					
ANR	5596580	Argument	pszInst		5596410	0					
ANR	5596581	Identifier	pszInst		5596410	0					
ANR	5596582	CompoundStatement		39:2:1100:1100	5596410	1					
ANR	5596583	ExpressionStatement	pszDataName = pInst -> Name ( )	1685:3:51613:51640	5596410	0	True				
ANR	5596584	AssignmentExpression	pszDataName = pInst -> Name ( )		5596410	0		=			
ANR	5596585	Identifier	pszDataName		5596410	0					
ANR	5596586	CallExpression	pInst -> Name ( )		5596410	1					
ANR	5596587	Callee	pInst -> Name		5596410	0					
ANR	5596588	PtrMemberAccess	pInst -> Name		5596410	0					
ANR	5596589	Identifier	pInst		5596410	0					
ANR	5596590	Identifier	Name		5596410	1					
ANR	5596591	ArgumentList			5596410	1					
ANR	5596592	BreakStatement	break ;	1686:3:51645:51650	5596410	1	True				
ANR	5596593	IfStatement	if ( pInst )		5596410	12					
ANR	5596594	Condition	pInst	1689:5:51664:51668	5596410	0	True				
ANR	5596595	Identifier	pInst		5596410	0					
ANR	5596596	ExpressionStatement	pbData = pInst -> CounterData ( )	1690:2:51673:51702	5596410	1	True				
ANR	5596597	AssignmentExpression	pbData = pInst -> CounterData ( )		5596410	0		=			
ANR	5596598	Identifier	pbData		5596410	0					
ANR	5596599	CallExpression	pInst -> CounterData ( )		5596410	1					
ANR	5596600	Callee	pInst -> CounterData		5596410	0					
ANR	5596601	PtrMemberAccess	pInst -> CounterData		5596410	0					
ANR	5596602	Identifier	pInst		5596410	0					
ANR	5596603	Identifier	CounterData		5596410	1					
ANR	5596604	ArgumentList			5596410	1					
ANR	5596605	IfStatement	if ( ! pbData )		5596410	13					
ANR	5596606	Condition	! pbData	1692:6:51711:51718	5596410	0	True				
ANR	5596607	UnaryOperationExpression	! pbData		5596410	0					
ANR	5596608	UnaryOperator	!		5596410	0					
ANR	5596609	Identifier	pbData		5596410	1					
ANR	5596610	ReturnStatement	return false ;	1693:2:51723:51735	5596410	1	True				
ANR	5596611	Identifier	false		5596410	0					
ANR	5596612	IdentifierDeclStatement	WinPerf_CounterValue ctval ;	1695:1:51739:51765	5596410	14	True				
ANR	5596613	IdentifierDecl	ctval		5596410	0					
ANR	5596614	IdentifierDeclType	WinPerf_CounterValue		5596410	0					
ANR	5596615	Identifier	ctval		5596410	1					
ANR	5596616	IdentifierDeclStatement	WinPerf_TimerDeltas time ;	1696:1:51768:51792	5596410	15	True				
ANR	5596617	IdentifierDecl	time		5596410	0					
ANR	5596618	IdentifierDeclType	WinPerf_TimerDeltas		5596410	0					
ANR	5596619	Identifier	time		5596410	1					
ANR	5596620	ExpressionStatement	time . obj = pObj -> PerfTime . QuadPart	1697:1:51795:51834	5596410	16	True				
ANR	5596621	AssignmentExpression	time . obj = pObj -> PerfTime . QuadPart		5596410	0		=			
ANR	5596622	MemberAccess	time . obj		5596410	0					
ANR	5596623	Identifier	time		5596410	0					
ANR	5596624	Identifier	obj		5596410	1					
ANR	5596625	MemberAccess	pObj -> PerfTime . QuadPart		5596410	1					
ANR	5596626	PtrMemberAccess	pObj -> PerfTime		5596410	0					
ANR	5596627	Identifier	pObj		5596410	0					
ANR	5596628	Identifier	PerfTime		5596410	1					
ANR	5596629	Identifier	QuadPart		5596410	1					
ANR	5596630	ExpressionStatement	time . objabs = pObj -> PerfTime . QuadPart	1698:1:51837:51876	5596410	17	True				
ANR	5596631	AssignmentExpression	time . objabs = pObj -> PerfTime . QuadPart		5596410	0		=			
ANR	5596632	MemberAccess	time . objabs		5596410	0					
ANR	5596633	Identifier	time		5596410	0					
ANR	5596634	Identifier	objabs		5596410	1					
ANR	5596635	MemberAccess	pObj -> PerfTime . QuadPart		5596410	1					
ANR	5596636	PtrMemberAccess	pObj -> PerfTime		5596410	0					
ANR	5596637	Identifier	pObj		5596410	0					
ANR	5596638	Identifier	PerfTime		5596410	1					
ANR	5596639	Identifier	QuadPart		5596410	1					
ANR	5596640	ExpressionStatement	time . objfreq = pObj -> PerfFreq . QuadPart	1699:1:51879:51918	5596410	18	True				
ANR	5596641	AssignmentExpression	time . objfreq = pObj -> PerfFreq . QuadPart		5596410	0		=			
ANR	5596642	MemberAccess	time . objfreq		5596410	0					
ANR	5596643	Identifier	time		5596410	0					
ANR	5596644	Identifier	objfreq		5596410	1					
ANR	5596645	MemberAccess	pObj -> PerfFreq . QuadPart		5596410	1					
ANR	5596646	PtrMemberAccess	pObj -> PerfFreq		5596410	0					
ANR	5596647	Identifier	pObj		5596410	0					
ANR	5596648	Identifier	PerfFreq		5596410	1					
ANR	5596649	Identifier	QuadPart		5596410	1					
ANR	5596650	ExpressionStatement	time . head = pHead -> PerfTime . QuadPart	1700:1:51921:51961	5596410	19	True				
ANR	5596651	AssignmentExpression	time . head = pHead -> PerfTime . QuadPart		5596410	0		=			
ANR	5596652	MemberAccess	time . head		5596410	0					
ANR	5596653	Identifier	time		5596410	0					
ANR	5596654	Identifier	head		5596410	1					
ANR	5596655	MemberAccess	pHead -> PerfTime . QuadPart		5596410	1					
ANR	5596656	PtrMemberAccess	pHead -> PerfTime		5596410	0					
ANR	5596657	Identifier	pHead		5596410	0					
ANR	5596658	Identifier	PerfTime		5596410	1					
ANR	5596659	Identifier	QuadPart		5596410	1					
ANR	5596660	ExpressionStatement	time . headfreq = pHead -> PerfFreq . QuadPart	1701:1:51964:52004	5596410	20	True				
ANR	5596661	AssignmentExpression	time . headfreq = pHead -> PerfFreq . QuadPart		5596410	0		=			
ANR	5596662	MemberAccess	time . headfreq		5596410	0					
ANR	5596663	Identifier	time		5596410	0					
ANR	5596664	Identifier	headfreq		5596410	1					
ANR	5596665	MemberAccess	pHead -> PerfFreq . QuadPart		5596410	1					
ANR	5596666	PtrMemberAccess	pHead -> PerfFreq		5596410	0					
ANR	5596667	Identifier	pHead		5596410	0					
ANR	5596668	Identifier	PerfFreq		5596410	1					
ANR	5596669	Identifier	QuadPart		5596410	1					
ANR	5596670	ExpressionStatement	time . nanos = pHead -> PerfTime100nSec . QuadPart	1702:1:52007:52054	5596410	21	True				
ANR	5596671	AssignmentExpression	time . nanos = pHead -> PerfTime100nSec . QuadPart		5596410	0		=			
ANR	5596672	MemberAccess	time . nanos		5596410	0					
ANR	5596673	Identifier	time		5596410	0					
ANR	5596674	Identifier	nanos		5596410	1					
ANR	5596675	MemberAccess	pHead -> PerfTime100nSec . QuadPart		5596410	1					
ANR	5596676	PtrMemberAccess	pHead -> PerfTime100nSec		5596410	0					
ANR	5596677	Identifier	pHead		5596410	0					
ANR	5596678	Identifier	PerfTime100nSec		5596410	1					
ANR	5596679	Identifier	QuadPart		5596410	1					
ANR	5596680	IdentifierDeclStatement	const BYTE * pbDataPrev = NULL ;	1704:1:52058:52088	5596410	22	True				
ANR	5596681	IdentifierDecl	* pbDataPrev = NULL		5596410	0					
ANR	5596682	IdentifierDeclType	const BYTE *		5596410	0					
ANR	5596683	Identifier	pbDataPrev		5596410	1					
ANR	5596684	AssignmentExpression	* pbDataPrev = NULL		5596410	2		=			
ANR	5596685	Identifier	NULL		5596410	0					
ANR	5596686	Identifier	NULL		5596410	1					
ANR	5596687	IfStatement	if ( result . pdata1 && ( pCounter -> CounterType & PERF_DELTA_COUNTER ) )		5596410	23					
ANR	5596688	Condition	result . pdata1 && ( pCounter -> CounterType & PERF_DELTA_COUNTER )	1705:5:52095:52155	5596410	0	True				
ANR	5596689	AndExpression	result . pdata1 && ( pCounter -> CounterType & PERF_DELTA_COUNTER )		5596410	0		&&			
ANR	5596690	MemberAccess	result . pdata1		5596410	0					
ANR	5596691	Identifier	result		5596410	0					
ANR	5596692	Identifier	pdata1		5596410	1					
ANR	5596693	BitAndExpression	pCounter -> CounterType & PERF_DELTA_COUNTER		5596410	1		&			
ANR	5596694	PtrMemberAccess	pCounter -> CounterType		5596410	0					
ANR	5596695	Identifier	pCounter		5596410	0					
ANR	5596696	Identifier	CounterType		5596410	1					
ANR	5596697	Identifier	PERF_DELTA_COUNTER		5596410	1					
ANR	5596698	CompoundStatement		63:2:1723:1778	5596410	1					
ANR	5596699	IdentifierDeclStatement	const WinPerf_Object * pObj1 = result . pdata1 -> Find ( query . idKey ) ;	1707:2:52163:52227	5596410	0	True				
ANR	5596700	IdentifierDecl	* pObj1 = result . pdata1 -> Find ( query . idKey )		5596410	0					
ANR	5596701	IdentifierDeclType	const WinPerf_Object *		5596410	0					
ANR	5596702	Identifier	pObj1		5596410	1					
ANR	5596703	AssignmentExpression	* pObj1 = result . pdata1 -> Find ( query . idKey )		5596410	2		=			
ANR	5596704	Identifier	pObj1		5596410	0					
ANR	5596705	CallExpression	result . pdata1 -> Find ( query . idKey )		5596410	1					
ANR	5596706	Callee	result . pdata1 -> Find		5596410	0					
ANR	5596707	PtrMemberAccess	result . pdata1 -> Find		5596410	0					
ANR	5596708	MemberAccess	result . pdata1		5596410	0					
ANR	5596709	Identifier	result		5596410	0					
ANR	5596710	Identifier	pdata1		5596410	1					
ANR	5596711	Identifier	Find		5596410	1					
ANR	5596712	ArgumentList	query . idKey		5596410	1					
ANR	5596713	Argument	query . idKey		5596410	0					
ANR	5596714	MemberAccess	query . idKey		5596410	0					
ANR	5596715	Identifier	query		5596410	0					
ANR	5596716	Identifier	idKey		5596410	1					
ANR	5596717	IdentifierDeclStatement	const WinPerf_ObjInst * pInst1 = pObj1 -> FirstInstance ( ) ;	1708:2:52231:52286	5596410	1	True				
ANR	5596718	IdentifierDecl	* pInst1 = pObj1 -> FirstInstance ( )		5596410	0					
ANR	5596719	IdentifierDeclType	const WinPerf_ObjInst *		5596410	0					
ANR	5596720	Identifier	pInst1		5596410	1					
ANR	5596721	AssignmentExpression	* pInst1 = pObj1 -> FirstInstance ( )		5596410	2		=			
ANR	5596722	Identifier	pInst1		5596410	0					
ANR	5596723	CallExpression	pObj1 -> FirstInstance ( )		5596410	1					
ANR	5596724	Callee	pObj1 -> FirstInstance		5596410	0					
ANR	5596725	PtrMemberAccess	pObj1 -> FirstInstance		5596410	0					
ANR	5596726	Identifier	pObj1		5596410	0					
ANR	5596727	Identifier	FirstInstance		5596410	1					
ANR	5596728	ArgumentList			5596410	1					
ANR	5596729	ExpressionStatement	pbDataPrev = pObj1 -> CounterData ( )	1709:2:52290:52323	5596410	2	True				
ANR	5596730	AssignmentExpression	pbDataPrev = pObj1 -> CounterData ( )		5596410	0		=			
ANR	5596731	Identifier	pbDataPrev		5596410	0					
ANR	5596732	CallExpression	pObj1 -> CounterData ( )		5596410	1					
ANR	5596733	Callee	pObj1 -> CounterData		5596410	0					
ANR	5596734	PtrMemberAccess	pObj1 -> CounterData		5596410	0					
ANR	5596735	Identifier	pObj1		5596410	0					
ANR	5596736	Identifier	CounterData		5596410	1					
ANR	5596737	ArgumentList			5596410	1					
ANR	5596738	ForStatement	"for ( int ix = 1 ; ix < ( int ) pObj1 -> NumInstances ; ++ ix , pInst1 = pInst1 -> Next ( ) )"		5596410	3					
ANR	5596739	ForInit	int ix = 1 ;	1710:7:52332:52342	5596410	0	True				
ANR	5596740	IdentifierDeclStatement	int ix = 1 ;		5596410	0					
ANR	5596741	IdentifierDecl	ix = 1		5596410	0					
ANR	5596742	IdentifierDeclType	int		5596410	0					
ANR	5596743	Identifier	ix		5596410	1					
ANR	5596744	AssignmentExpression	ix = 1		5596410	2		=			
ANR	5596745	Identifier	ix		5596410	0					
ANR	5596746	PrimaryExpression	1		5596410	1					
ANR	5596747	Condition	ix < ( int ) pObj1 -> NumInstances	1710:19:52344:52372	5596410	1	True				
ANR	5596748	RelationalExpression	ix < ( int ) pObj1 -> NumInstances		5596410	0		<			
ANR	5596749	Identifier	ix		5596410	0					
ANR	5596750	CastExpression	( int ) pObj1 -> NumInstances		5596410	1					
ANR	5596751	CastTarget	int		5596410	0					
ANR	5596752	PtrMemberAccess	pObj1 -> NumInstances		5596410	1					
ANR	5596753	Identifier	pObj1		5596410	0					
ANR	5596754	Identifier	NumInstances		5596410	1					
ANR	5596755	Expression	"++ ix , pInst1 = pInst1 -> Next ( )"	1710:50:52375:52403	5596410	2	True				
ANR	5596756	UnaryExpression	++ ix		5596410	0					
ANR	5596757	IncDec	++		5596410	0					
ANR	5596758	Identifier	ix		5596410	1					
ANR	5596759	AssignmentExpression	pInst1 = pInst1 -> Next ( )		5596410	1		=			
ANR	5596760	Identifier	pInst1		5596410	0					
ANR	5596761	CallExpression	pInst1 -> Next ( )		5596410	1					
ANR	5596762	Callee	pInst1 -> Next		5596410	0					
ANR	5596763	PtrMemberAccess	pInst1 -> Next		5596410	0					
ANR	5596764	Identifier	pInst1		5596410	0					
ANR	5596765	Identifier	Next		5596410	1					
ANR	5596766	ArgumentList			5596410	1					
ANR	5596767	CompoundStatement		66:2:1900:1900	5596410	3					
ANR	5596768	IfStatement	"if ( pszInst && pInst1 -> Matches ( pszInst ) && pInst -> Name ( ) && pszDataName && ( 0 == lstrcmpW ( pInst -> Name ( ) , pszDataName ) ) )"		5596410	0					
ANR	5596769	Condition	"pszInst && pInst1 -> Matches ( pszInst ) && pInst -> Name ( ) && pszDataName && ( 0 == lstrcmpW ( pInst -> Name ( ) , pszDataName ) )"	1712:7:52417:52538	5596410	0	True				
ANR	5596770	AndExpression	"pszInst && pInst1 -> Matches ( pszInst ) && pInst -> Name ( ) && pszDataName && ( 0 == lstrcmpW ( pInst -> Name ( ) , pszDataName ) )"		5596410	0		&&			
ANR	5596771	Identifier	pszInst		5596410	0					
ANR	5596772	AndExpression	"pInst1 -> Matches ( pszInst ) && pInst -> Name ( ) && pszDataName && ( 0 == lstrcmpW ( pInst -> Name ( ) , pszDataName ) )"		5596410	1		&&			
ANR	5596773	CallExpression	pInst1 -> Matches ( pszInst )		5596410	0					
ANR	5596774	Callee	pInst1 -> Matches		5596410	0					
ANR	5596775	PtrMemberAccess	pInst1 -> Matches		5596410	0					
ANR	5596776	Identifier	pInst1		5596410	0					
ANR	5596777	Identifier	Matches		5596410	1					
ANR	5596778	ArgumentList	pszInst		5596410	1					
ANR	5596779	Argument	pszInst		5596410	0					
ANR	5596780	Identifier	pszInst		5596410	0					
ANR	5596781	AndExpression	"pInst -> Name ( ) && pszDataName && ( 0 == lstrcmpW ( pInst -> Name ( ) , pszDataName ) )"		5596410	1		&&			
ANR	5596782	CallExpression	pInst -> Name ( )		5596410	0					
ANR	5596783	Callee	pInst -> Name		5596410	0					
ANR	5596784	PtrMemberAccess	pInst -> Name		5596410	0					
ANR	5596785	Identifier	pInst		5596410	0					
ANR	5596786	Identifier	Name		5596410	1					
ANR	5596787	ArgumentList			5596410	1					
ANR	5596788	AndExpression	"pszDataName && ( 0 == lstrcmpW ( pInst -> Name ( ) , pszDataName ) )"		5596410	1		&&			
ANR	5596789	Identifier	pszDataName		5596410	0					
ANR	5596790	EqualityExpression	"0 == lstrcmpW ( pInst -> Name ( ) , pszDataName )"		5596410	1		==			
ANR	5596791	PrimaryExpression	0		5596410	0					
ANR	5596792	CallExpression	"lstrcmpW ( pInst -> Name ( ) , pszDataName )"		5596410	1					
ANR	5596793	Callee	lstrcmpW		5596410	0					
ANR	5596794	Identifier	lstrcmpW		5596410	0					
ANR	5596795	ArgumentList	pInst -> Name ( )		5596410	1					
ANR	5596796	Argument	pInst -> Name ( )		5596410	0					
ANR	5596797	CallExpression	pInst -> Name ( )		5596410	0					
ANR	5596798	Callee	pInst -> Name		5596410	0					
ANR	5596799	PtrMemberAccess	pInst -> Name		5596410	0					
ANR	5596800	Identifier	pInst		5596410	0					
ANR	5596801	Identifier	Name		5596410	1					
ANR	5596802	ArgumentList			5596410	1					
ANR	5596803	Argument	pszDataName		5596410	1					
ANR	5596804	Identifier	pszDataName		5596410	0					
ANR	5596805	BreakStatement	break ;	1715:4:52545:52550	5596410	1	True				
ANR	5596806	IfStatement	if ( pInst1 )		5596410	4					
ANR	5596807	Condition	pInst1	1717:6:52562:52567	5596410	0	True				
ANR	5596808	Identifier	pInst1		5596410	0					
ANR	5596809	ExpressionStatement	pbDataPrev = pInst1 -> CounterData ( )	1718:3:52573:52607	5596410	1	True				
ANR	5596810	AssignmentExpression	pbDataPrev = pInst1 -> CounterData ( )		5596410	0		=			
ANR	5596811	Identifier	pbDataPrev		5596410	0					
ANR	5596812	CallExpression	pInst1 -> CounterData ( )		5596410	1					
ANR	5596813	Callee	pInst1 -> CounterData		5596410	0					
ANR	5596814	PtrMemberAccess	pInst1 -> CounterData		5596410	0					
ANR	5596815	Identifier	pInst1		5596410	0					
ANR	5596816	Identifier	CounterData		5596410	1					
ANR	5596817	ArgumentList			5596410	1					
ANR	5596818	ExpressionStatement	time . obj -= pObj1 -> PerfTime . QuadPart	1720:2:52612:52653	5596410	5	True				
ANR	5596819	AssignmentExpression	time . obj -= pObj1 -> PerfTime . QuadPart		5596410	0		-=			
ANR	5596820	MemberAccess	time . obj		5596410	0					
ANR	5596821	Identifier	time		5596410	0					
ANR	5596822	Identifier	obj		5596410	1					
ANR	5596823	MemberAccess	pObj1 -> PerfTime . QuadPart		5596410	1					
ANR	5596824	PtrMemberAccess	pObj1 -> PerfTime		5596410	0					
ANR	5596825	Identifier	pObj1		5596410	0					
ANR	5596826	Identifier	PerfTime		5596410	1					
ANR	5596827	Identifier	QuadPart		5596410	1					
ANR	5596828	ExpressionStatement	time . head -= result . pdata1 -> PerfTime . QuadPart	1721:2:52657:52706	5596410	6	True				
ANR	5596829	AssignmentExpression	time . head -= result . pdata1 -> PerfTime . QuadPart		5596410	0		-=			
ANR	5596830	MemberAccess	time . head		5596410	0					
ANR	5596831	Identifier	time		5596410	0					
ANR	5596832	Identifier	head		5596410	1					
ANR	5596833	MemberAccess	result . pdata1 -> PerfTime . QuadPart		5596410	1					
ANR	5596834	PtrMemberAccess	result . pdata1 -> PerfTime		5596410	0					
ANR	5596835	MemberAccess	result . pdata1		5596410	0					
ANR	5596836	Identifier	result		5596410	0					
ANR	5596837	Identifier	pdata1		5596410	1					
ANR	5596838	Identifier	PerfTime		5596410	1					
ANR	5596839	Identifier	QuadPart		5596410	1					
ANR	5596840	ExpressionStatement	time . nanos -= result . pdata1 -> PerfTime100nSec . QuadPart	1722:2:52710:52766	5596410	7	True				
ANR	5596841	AssignmentExpression	time . nanos -= result . pdata1 -> PerfTime100nSec . QuadPart		5596410	0		-=			
ANR	5596842	MemberAccess	time . nanos		5596410	0					
ANR	5596843	Identifier	time		5596410	0					
ANR	5596844	Identifier	nanos		5596410	1					
ANR	5596845	MemberAccess	result . pdata1 -> PerfTime100nSec . QuadPart		5596410	1					
ANR	5596846	PtrMemberAccess	result . pdata1 -> PerfTime100nSec		5596410	0					
ANR	5596847	MemberAccess	result . pdata1		5596410	0					
ANR	5596848	Identifier	result		5596410	0					
ANR	5596849	Identifier	pdata1		5596410	1					
ANR	5596850	Identifier	PerfTime100nSec		5596410	1					
ANR	5596851	Identifier	QuadPart		5596410	1					
ANR	5596852	IfStatement	"if ( ! pObj -> GetValue ( ctval , pCounter , time , pbData , pbDataPrev ) )"		5596410	24					
ANR	5596853	Condition	"! pObj -> GetValue ( ctval , pCounter , time , pbData , pbDataPrev )"	1725:6:52778:52836	5596410	0	True				
ANR	5596854	UnaryOperationExpression	"! pObj -> GetValue ( ctval , pCounter , time , pbData , pbDataPrev )"		5596410	0					
ANR	5596855	UnaryOperator	!		5596410	0					
ANR	5596856	CallExpression	"pObj -> GetValue ( ctval , pCounter , time , pbData , pbDataPrev )"		5596410	1					
ANR	5596857	Callee	pObj -> GetValue		5596410	0					
ANR	5596858	PtrMemberAccess	pObj -> GetValue		5596410	0					
ANR	5596859	Identifier	pObj		5596410	0					
ANR	5596860	Identifier	GetValue		5596410	1					
ANR	5596861	ArgumentList	ctval		5596410	1					
ANR	5596862	Argument	ctval		5596410	0					
ANR	5596863	Identifier	ctval		5596410	0					
ANR	5596864	Argument	pCounter		5596410	1					
ANR	5596865	Identifier	pCounter		5596410	0					
ANR	5596866	Argument	time		5596410	2					
ANR	5596867	Identifier	time		5596410	0					
ANR	5596868	Argument	pbData		5596410	3					
ANR	5596869	Identifier	pbData		5596410	0					
ANR	5596870	Argument	pbDataPrev		5596410	4					
ANR	5596871	Identifier	pbDataPrev		5596410	0					
ANR	5596872	ReturnStatement	return false ;	1726:2:52841:52853	5596410	1	True				
ANR	5596873	Identifier	false		5596410	0					
ANR	5596874	ExpressionStatement	pav -> value . ll = ctval . value . ll	1728:1:52857:52887	5596410	25	True				
ANR	5596875	AssignmentExpression	pav -> value . ll = ctval . value . ll		5596410	0		=			
ANR	5596876	MemberAccess	pav -> value . ll		5596410	0					
ANR	5596877	PtrMemberAccess	pav -> value		5596410	0					
ANR	5596878	Identifier	pav		5596410	0					
ANR	5596879	Identifier	value		5596410	1					
ANR	5596880	Identifier	ll		5596410	1					
ANR	5596881	MemberAccess	ctval . value . ll		5596410	1					
ANR	5596882	MemberAccess	ctval . value		5596410	0					
ANR	5596883	Identifier	ctval		5596410	0					
ANR	5596884	Identifier	value		5596410	1					
ANR	5596885	Identifier	ll		5596410	1					
ANR	5596886	ExpressionStatement	pav -> vtype = AttribValue_DataType_Int	1729:1:52890:52927	5596410	26	True				
ANR	5596887	AssignmentExpression	pav -> vtype = AttribValue_DataType_Int		5596410	0		=			
ANR	5596888	PtrMemberAccess	pav -> vtype		5596410	0					
ANR	5596889	Identifier	pav		5596410	0					
ANR	5596890	Identifier	vtype		5596410	1					
ANR	5596891	Identifier	AttribValue_DataType_Int		5596410	1					
ANR	5596892	IfStatement	if ( ( ctval . type & WinPerf_CT_Double ) == WinPerf_CT_Double )		5596410	27					
ANR	5596893	Condition	( ctval . type & WinPerf_CT_Double ) == WinPerf_CT_Double	1730:5:52934:52986	5596410	0	True				
ANR	5596894	EqualityExpression	( ctval . type & WinPerf_CT_Double ) == WinPerf_CT_Double		5596410	0		==			
ANR	5596895	BitAndExpression	ctval . type & WinPerf_CT_Double		5596410	0		&			
ANR	5596896	MemberAccess	ctval . type		5596410	0					
ANR	5596897	Identifier	ctval		5596410	0					
ANR	5596898	Identifier	type		5596410	1					
ANR	5596899	Identifier	WinPerf_CT_Double		5596410	1					
ANR	5596900	Identifier	WinPerf_CT_Double		5596410	1					
ANR	5596901	ExpressionStatement	pav -> vtype = AttribValue_DataType_Double	1731:2:52991:53031	5596410	1	True				
ANR	5596902	AssignmentExpression	pav -> vtype = AttribValue_DataType_Double		5596410	0		=			
ANR	5596903	PtrMemberAccess	pav -> vtype		5596410	0					
ANR	5596904	Identifier	pav		5596410	0					
ANR	5596905	Identifier	vtype		5596410	1					
ANR	5596906	Identifier	AttribValue_DataType_Double		5596410	1					
ANR	5596907	IfStatement	if ( ( ctval . type & ( WinPerf_CT_Double | WinPerf_CT_Short ) ) == WinPerf_CT_Signed )		5596410	28					
ANR	5596908	Condition	( ctval . type & ( WinPerf_CT_Double | WinPerf_CT_Short ) ) == WinPerf_CT_Signed	1736:5:53174:53247	5596410	0	True				
ANR	5596909	EqualityExpression	( ctval . type & ( WinPerf_CT_Double | WinPerf_CT_Short ) ) == WinPerf_CT_Signed		5596410	0		==			
ANR	5596910	BitAndExpression	ctval . type & ( WinPerf_CT_Double | WinPerf_CT_Short )		5596410	0		&			
ANR	5596911	MemberAccess	ctval . type		5596410	0					
ANR	5596912	Identifier	ctval		5596410	0					
ANR	5596913	Identifier	type		5596410	1					
ANR	5596914	InclusiveOrExpression	WinPerf_CT_Double | WinPerf_CT_Short		5596410	1		|			
ANR	5596915	Identifier	WinPerf_CT_Double		5596410	0					
ANR	5596916	Identifier	WinPerf_CT_Short		5596410	1					
ANR	5596917	Identifier	WinPerf_CT_Signed		5596410	1					
ANR	5596918	CompoundStatement		92:1:2743:2743	5596410	1					
ANR	5596919	IfStatement	if ( ctval . value . ll > 0x7FFFFFFF || ctval . value . ll < 0x8000000 )		5596410	0					
ANR	5596920	Condition	ctval . value . ll > 0x7FFFFFFF || ctval . value . ll < 0x8000000	1738:6:53259:53315	5596410	0	True				
ANR	5596921	OrExpression	ctval . value . ll > 0x7FFFFFFF || ctval . value . ll < 0x8000000		5596410	0		||			
ANR	5596922	RelationalExpression	ctval . value . ll > 0x7FFFFFFF		5596410	0		>			
ANR	5596923	MemberAccess	ctval . value . ll		5596410	0					
ANR	5596924	MemberAccess	ctval . value		5596410	0					
ANR	5596925	Identifier	ctval		5596410	0					
ANR	5596926	Identifier	value		5596410	1					
ANR	5596927	Identifier	ll		5596410	1					
ANR	5596928	PrimaryExpression	0x7FFFFFFF		5596410	1					
ANR	5596929	RelationalExpression	ctval . value . ll < 0x8000000		5596410	1		<			
ANR	5596930	MemberAccess	ctval . value . ll		5596410	0					
ANR	5596931	MemberAccess	ctval . value		5596410	0					
ANR	5596932	Identifier	ctval		5596410	0					
ANR	5596933	Identifier	value		5596410	1					
ANR	5596934	Identifier	ll		5596410	1					
ANR	5596935	PrimaryExpression	0x8000000		5596410	1					
ANR	5596936	CompoundStatement		94:2:2812:2812	5596410	1					
ANR	5596937	ExpressionStatement	pav -> value . d = ( double ) ctval . value . ll	1740:3:53325:53362	5596410	0	True				
ANR	5596938	AssignmentExpression	pav -> value . d = ( double ) ctval . value . ll		5596410	0		=			
ANR	5596939	MemberAccess	pav -> value . d		5596410	0					
ANR	5596940	PtrMemberAccess	pav -> value		5596410	0					
ANR	5596941	Identifier	pav		5596410	0					
ANR	5596942	Identifier	value		5596410	1					
ANR	5596943	Identifier	d		5596410	1					
ANR	5596944	CastExpression	( double ) ctval . value . ll		5596410	1					
ANR	5596945	CastTarget	double		5596410	0					
ANR	5596946	MemberAccess	ctval . value . ll		5596410	1					
ANR	5596947	MemberAccess	ctval . value		5596410	0					
ANR	5596948	Identifier	ctval		5596410	0					
ANR	5596949	Identifier	value		5596410	1					
ANR	5596950	Identifier	ll		5596410	1					
ANR	5596951	ExpressionStatement	pav -> vtype = AttribValue_DataType_Double	1741:3:53367:53407	5596410	1	True				
ANR	5596952	AssignmentExpression	pav -> vtype = AttribValue_DataType_Double		5596410	0		=			
ANR	5596953	PtrMemberAccess	pav -> vtype		5596410	0					
ANR	5596954	Identifier	pav		5596410	0					
ANR	5596955	Identifier	vtype		5596410	1					
ANR	5596956	Identifier	AttribValue_DataType_Double		5596410	1					
ANR	5596957	ElseStatement	else		5596410	0					
ANR	5596958	IfStatement	if ( ( ctval . type & ( WinPerf_CT_Double | WinPerf_CT_Short ) ) == WinPerf_CT_Unsigned )		5596410	0					
ANR	5596959	Condition	( ctval . type & ( WinPerf_CT_Double | WinPerf_CT_Short ) ) == WinPerf_CT_Unsigned	1744:10:53426:53501	5596410	0	True				
ANR	5596960	EqualityExpression	( ctval . type & ( WinPerf_CT_Double | WinPerf_CT_Short ) ) == WinPerf_CT_Unsigned		5596410	0		==			
ANR	5596961	BitAndExpression	ctval . type & ( WinPerf_CT_Double | WinPerf_CT_Short )		5596410	0		&			
ANR	5596962	MemberAccess	ctval . type		5596410	0					
ANR	5596963	Identifier	ctval		5596410	0					
ANR	5596964	Identifier	type		5596410	1					
ANR	5596965	InclusiveOrExpression	WinPerf_CT_Double | WinPerf_CT_Short		5596410	1		|			
ANR	5596966	Identifier	WinPerf_CT_Double		5596410	0					
ANR	5596967	Identifier	WinPerf_CT_Short		5596410	1					
ANR	5596968	Identifier	WinPerf_CT_Unsigned		5596410	1					
ANR	5596969	CompoundStatement		100:1:2997:2997	5596410	1					
ANR	5596970	IfStatement	if ( ctval . value . ul > 0x7FFFFFFF )		5596410	0					
ANR	5596971	Condition	ctval . value . ul > 0x7FFFFFFF	1746:6:53513:53539	5596410	0	True				
ANR	5596972	RelationalExpression	ctval . value . ul > 0x7FFFFFFF		5596410	0		>			
ANR	5596973	MemberAccess	ctval . value . ul		5596410	0					
ANR	5596974	MemberAccess	ctval . value		5596410	0					
ANR	5596975	Identifier	ctval		5596410	0					
ANR	5596976	Identifier	value		5596410	1					
ANR	5596977	Identifier	ul		5596410	1					
ANR	5596978	PrimaryExpression	0x7FFFFFFF		5596410	1					
ANR	5596979	CompoundStatement		102:2:3036:3036	5596410	1					
ANR	5596980	ExpressionStatement	pav -> value . d = ( double ) ctval . value . ul	1748:3:53549:53586	5596410	0	True				
ANR	5596981	AssignmentExpression	pav -> value . d = ( double ) ctval . value . ul		5596410	0		=			
ANR	5596982	MemberAccess	pav -> value . d		5596410	0					
ANR	5596983	PtrMemberAccess	pav -> value		5596410	0					
ANR	5596984	Identifier	pav		5596410	0					
ANR	5596985	Identifier	value		5596410	1					
ANR	5596986	Identifier	d		5596410	1					
ANR	5596987	CastExpression	( double ) ctval . value . ul		5596410	1					
ANR	5596988	CastTarget	double		5596410	0					
ANR	5596989	MemberAccess	ctval . value . ul		5596410	1					
ANR	5596990	MemberAccess	ctval . value		5596410	0					
ANR	5596991	Identifier	ctval		5596410	0					
ANR	5596992	Identifier	value		5596410	1					
ANR	5596993	Identifier	ul		5596410	1					
ANR	5596994	ExpressionStatement	pav -> vtype = AttribValue_DataType_Double	1749:3:53591:53631	5596410	1	True				
ANR	5596995	AssignmentExpression	pav -> vtype = AttribValue_DataType_Double		5596410	0		=			
ANR	5596996	PtrMemberAccess	pav -> vtype		5596410	0					
ANR	5596997	Identifier	pav		5596410	0					
ANR	5596998	Identifier	vtype		5596410	1					
ANR	5596999	Identifier	AttribValue_DataType_Double		5596410	1					
ANR	5597000	ReturnStatement	return true ;	1753:1:53642:53653	5596410	29	True				
ANR	5597001	Identifier	true		5596410	0					
ANR	5597002	ReturnType	static bool		5596410	1					
ANR	5597003	Identifier	update_windows_performance_value		5596410	2					
ANR	5597004	ParameterList	"const WinPerf_QueryResult & result , const WinPerf_Query & query , AttribValue * pav"		5596410	3					
ANR	5597005	Parameter	const WinPerf_QueryResult & result	1643:1:50420:50453	5596410	0	True				
ANR	5597006	ParameterType	const WinPerf_QueryResult &		5596410	0					
ANR	5597007	Identifier	result		5596410	1					
ANR	5597008	Parameter	const WinPerf_Query & query	1644:1:50458:50484	5596410	1	True				
ANR	5597009	ParameterType	const WinPerf_Query &		5596410	0					
ANR	5597010	Identifier	query		5596410	1					
ANR	5597011	Parameter	AttribValue * pav	1645:1:50489:50504	5596410	2	True				
ANR	5597012	ParameterType	AttribValue *		5596410	0					
ANR	5597013	Identifier	pav		5596410	1					
ANR	5597014	CFGEntryNode	ENTRY		5596410		True				
ANR	5597015	CFGExitNode	EXIT		5596410		True				
ANR	5597016	Symbol	pObj -> NumInstances		5596410						
ANR	5597017	Symbol	pHead -> PerfFreq . QuadPart		5596410						
ANR	5597018	Symbol	pInst1 -> CounterData		5596410						
ANR	5597019	Symbol	result . pdata1 -> PerfTime100nSec		5596410						
ANR	5597020	Symbol	* pObj1		5596410						
ANR	5597021	Symbol	pObj -> PerfTime . QuadPart		5596410						
ANR	5597022	Symbol	pInst1 -> Matches		5596410						
ANR	5597023	Symbol	pCounter -> CounterType		5596410						
ANR	5597024	Symbol	* result . pdata1		5596410						
ANR	5597025	Symbol	pObj1 -> PerfTime . QuadPart		5596410						
ANR	5597026	Symbol	result . pdata1 -> PerfTime		5596410						
ANR	5597027	Symbol	pHead -> PerfTime . QuadPart		5596410						
ANR	5597028	Symbol	pObj1 -> FirstInstance		5596410						
ANR	5597029	Symbol	time . nanos		5596410						
ANR	5597030	Symbol	pbData		5596410						
ANR	5597031	Symbol	query . idKey		5596410						
ANR	5597032	Symbol	pInst		5596410						
ANR	5597033	Symbol	pObj -> FirstInstance		5596410						
ANR	5597034	Symbol	time . headfreq		5596410						
ANR	5597035	Symbol	pObj -> PerfFreq		5596410						
ANR	5597036	Symbol	time . objabs		5596410						
ANR	5597037	Symbol	NULL		5596410						
ANR	5597038	Symbol	pObj -> PerfTime		5596410						
ANR	5597039	Symbol	pObj -> GetValue		5596410						
ANR	5597040	Symbol	pav		5596410						
ANR	5597041	Symbol	time . objfreq		5596410						
ANR	5597042	Symbol	ctval . type		5596410						
ANR	5597043	Symbol	query		5596410						
ANR	5597044	Symbol	ctval . value . ll		5596410						
ANR	5597045	Symbol	WinPerf_CT_Unsigned		5596410						
ANR	5597046	Symbol	pObj1 -> NumInstances		5596410						
ANR	5597047	Symbol	ix		5596410						
ANR	5597048	Symbol	result . pdata1 -> Find		5596410						
ANR	5597049	Symbol	pav -> value . d		5596410						
ANR	5597050	Symbol	time . head		5596410						
ANR	5597051	Symbol	result . pdata1		5596410						
ANR	5597052	Symbol	ctval . value . ul		5596410						
ANR	5597053	Symbol	result . pdata2		5596410						
ANR	5597054	Symbol	time . obj		5596410						
ANR	5597055	Symbol	pObj -> CounterData		5596410						
ANR	5597056	Symbol	pInst1 -> Next		5596410						
ANR	5597057	Symbol	query . cchInst		5596410						
ANR	5597058	Symbol	pHead -> PerfTime		5596410						
ANR	5597059	Symbol	pInst -> Matches		5596410						
ANR	5597060	Symbol	true		5596410						
ANR	5597061	Symbol	ctval		5596410						
ANR	5597062	Symbol	pHead -> PerfTime100nSec . QuadPart		5596410						
ANR	5597063	Symbol	PERF_DELTA_COUNTER		5596410						
ANR	5597064	Symbol	pav -> value		5596410						
ANR	5597065	Symbol	pHead		5596410						
ANR	5597066	Symbol	query . ixInst		5596410						
ANR	5597067	Symbol	AttribValue_DataType_Double		5596410						
ANR	5597068	Symbol	* pObj		5596410						
ANR	5597069	Symbol	pCounter		5596410						
ANR	5597070	Symbol	pbDataPrev		5596410						
ANR	5597071	Symbol	lstrcmpW		5596410						
ANR	5597072	Symbol	result . pdata1 -> PerfTime . QuadPart		5596410						
ANR	5597073	Symbol	pInst -> Next		5596410						
ANR	5597074	Symbol	pInst1		5596410						
ANR	5597075	Symbol	* pInst		5596410						
ANR	5597076	Symbol	pObj1 -> CounterData		5596410						
ANR	5597077	Symbol	* pCounter		5596410						
ANR	5597078	Symbol	* pav		5596410						
ANR	5597079	Symbol	result		5596410						
ANR	5597080	Symbol	pObj		5596410						
ANR	5597081	Symbol	* result		5596410						
ANR	5597082	Symbol	* pHead		5596410						
ANR	5597083	Symbol	AttribValue_DataType_Int		5596410						
ANR	5597084	Symbol	pHead -> Find		5596410						
ANR	5597085	Symbol	pHead -> PerfFreq		5596410						
ANR	5597086	Symbol	& query . idCounter		5596410						
ANR	5597087	Symbol	pav -> value . ll		5596410						
ANR	5597088	Symbol	* pInst1		5596410						
ANR	5597089	Symbol	result . pdata1 -> PerfTime100nSec . QuadPart		5596410						
ANR	5597090	Symbol	pInst -> Name		5596410						
ANR	5597091	Symbol	pInst -> CounterData		5596410						
ANR	5597092	Symbol	pObj -> PerfFreq . QuadPart		5596410						
ANR	5597093	Symbol	pObj1		5596410						
ANR	5597094	Symbol	pObj -> Select		5596410						
ANR	5597095	Symbol	false		5596410						
ANR	5597096	Symbol	pszInst		5596410						
ANR	5597097	Symbol	pszDataName		5596410						
ANR	5597098	Symbol	WinPerf_CT_Double		5596410						
ANR	5597099	Symbol	pObj1 -> PerfTime		5596410						
ANR	5597100	Symbol	pav -> vtype		5596410						
ANR	5597101	Symbol	pHead -> PerfTime100nSec		5596410						
ANR	5597102	Symbol	WinPerf_CT_Short		5596410						
ANR	5597103	Symbol	& query		5596410						
ANR	5597104	Symbol	WinPerf_CT_Signed		5596410						
ANR	5597105	Symbol	time		5596410						
ANR	5597106	Symbol	ctval . value		5596410						
ANR	5597107	Function	update_WinPerf_Value	1756:0:53658:54036							
ANR	5597108	FunctionDef	update_WinPerf_Value (AttribValue * pav)		5597107	0					
ANR	5597109	CompoundStatement		1757:0:53702:54036	5597107	0					
ANR	5597110	IfStatement	if ( ! pav )		5597107	0					
ANR	5597111	Condition	! pav	1758:9:53713:53717	5597107	0	True				
ANR	5597112	UnaryOperationExpression	! pav		5597107	0					
ANR	5597113	UnaryOperator	!		5597107	0					
ANR	5597114	Identifier	pav		5597107	1					
ANR	5597115	ReturnStatement	return false ;	1759:8:53728:53740	5597107	1	True				
ANR	5597116	Identifier	false		5597107	0					
ANR	5597117	IdentifierDeclStatement	WinPerf_Query * pquery = ( WinPerf_Query * ) pav -> pquery ;	1761:4:53747:53800	5597107	1	True				
ANR	5597118	IdentifierDecl	* pquery = ( WinPerf_Query * ) pav -> pquery		5597107	0					
ANR	5597119	IdentifierDeclType	WinPerf_Query *		5597107	0					
ANR	5597120	Identifier	pquery		5597107	1					
ANR	5597121	AssignmentExpression	* pquery = ( WinPerf_Query * ) pav -> pquery		5597107	2		=			
ANR	5597122	Identifier	pquery		5597107	0					
ANR	5597123	CastExpression	( WinPerf_Query * ) pav -> pquery		5597107	1					
ANR	5597124	CastTarget	WinPerf_Query *		5597107	0					
ANR	5597125	PtrMemberAccess	pav -> pquery		5597107	1					
ANR	5597126	Identifier	pav		5597107	0					
ANR	5597127	Identifier	pquery		5597107	1					
ANR	5597128	IfStatement	if ( pquery && rl . pQueries )		5597107	2					
ANR	5597129	Condition	pquery && rl . pQueries	1762:8:53810:53830	5597107	0	True				
ANR	5597130	AndExpression	pquery && rl . pQueries		5597107	0		&&			
ANR	5597131	Identifier	pquery		5597107	0					
ANR	5597132	MemberAccess	rl . pQueries		5597107	1					
ANR	5597133	Identifier	rl		5597107	0					
ANR	5597134	Identifier	pQueries		5597107	1					
ANR	5597135	CompoundStatement		8:8:144:170	5597107	1					
ANR	5597136	IdentifierDeclStatement	WinPerf_QueryResult result ;	1764:8:53847:53873	5597107	0	True				
ANR	5597137	IdentifierDecl	result		5597107	0					
ANR	5597138	IdentifierDeclType	WinPerf_QueryResult		5597107	0					
ANR	5597139	Identifier	result		5597107	1					
ANR	5597140	IfStatement	"if ( rl . pQueries -> lookup ( pquery -> idKey , result ) >= 0 )"		5597107	1					
ANR	5597141	Condition	"rl . pQueries -> lookup ( pquery -> idKey , result ) >= 0"	1765:12:53887:53933	5597107	0	True				
ANR	5597142	RelationalExpression	"rl . pQueries -> lookup ( pquery -> idKey , result ) >= 0"		5597107	0		>=			
ANR	5597143	CallExpression	"rl . pQueries -> lookup ( pquery -> idKey , result )"		5597107	0					
ANR	5597144	Callee	rl . pQueries -> lookup		5597107	0					
ANR	5597145	PtrMemberAccess	rl . pQueries -> lookup		5597107	0					
ANR	5597146	MemberAccess	rl . pQueries		5597107	0					
ANR	5597147	Identifier	rl		5597107	0					
ANR	5597148	Identifier	pQueries		5597107	1					
ANR	5597149	Identifier	lookup		5597107	1					
ANR	5597150	ArgumentList	pquery -> idKey		5597107	1					
ANR	5597151	Argument	pquery -> idKey		5597107	0					
ANR	5597152	PtrMemberAccess	pquery -> idKey		5597107	0					
ANR	5597153	Identifier	pquery		5597107	0					
ANR	5597154	Identifier	idKey		5597107	1					
ANR	5597155	Argument	result		5597107	1					
ANR	5597156	Identifier	result		5597107	0					
ANR	5597157	PrimaryExpression	0		5597107	1					
ANR	5597158	ReturnStatement	"return update_windows_performance_value ( result , * pquery , pav ) ;"	1766:12:53948:54009	5597107	1	True				
ANR	5597159	CallExpression	"update_windows_performance_value ( result , * pquery , pav )"		5597107	0					
ANR	5597160	Callee	update_windows_performance_value		5597107	0					
ANR	5597161	Identifier	update_windows_performance_value		5597107	0					
ANR	5597162	ArgumentList	result		5597107	1					
ANR	5597163	Argument	result		5597107	0					
ANR	5597164	Identifier	result		5597107	0					
ANR	5597165	Argument	* pquery		5597107	1					
ANR	5597166	UnaryOperationExpression	* pquery		5597107	0					
ANR	5597167	UnaryOperator	*		5597107	0					
ANR	5597168	Identifier	pquery		5597107	1					
ANR	5597169	Argument	pav		5597107	2					
ANR	5597170	Identifier	pav		5597107	0					
ANR	5597171	ReturnStatement	return false ;	1769:4:54022:54034	5597107	3	True				
ANR	5597172	Identifier	false		5597107	0					
ANR	5597173	ReturnType	bool		5597107	1					
ANR	5597174	Identifier	update_WinPerf_Value		5597107	2					
ANR	5597175	ParameterList	AttribValue * pav		5597107	3					
ANR	5597176	Parameter	AttribValue * pav	1756:26:53684:53699	5597107	0	True				
ANR	5597177	ParameterType	AttribValue *		5597107	0					
ANR	5597178	Identifier	pav		5597107	1					
ANR	5597179	CFGEntryNode	ENTRY		5597107		True				
ANR	5597180	CFGExitNode	EXIT		5597107		True				
ANR	5597181	Symbol	* rl		5597107						
ANR	5597182	Symbol	pav		5597107						
ANR	5597183	Symbol	rl . pQueries		5597107						
ANR	5597184	Symbol	false		5597107						
ANR	5597185	Symbol	* pquery		5597107						
ANR	5597186	Symbol	pav -> pquery		5597107						
ANR	5597187	Symbol	* pav		5597107						
ANR	5597188	Symbol	update_windows_performance_value		5597107						
ANR	5597189	Symbol	result		5597107						
ANR	5597190	Symbol	rl . pQueries -> lookup		5597107						
ANR	5597191	Symbol	pquery		5597107						
ANR	5597192	Symbol	* rl . pQueries		5597107						
ANR	5597193	Symbol	rl		5597107						
ANR	5597194	Symbol	pquery -> idKey		5597107						
ANR	5597195	Function	add_WinPerf_Query	1773:0:54040:55870							
ANR	5597196	FunctionDef	"add_WinPerf_Query (const char * pszAttr , const char * pkey)"		5597195	0					
ANR	5597197	CompoundStatement		1776:0:54122:55870	5597195	0					
ANR	5597198	IdentifierDeclStatement	WinPerf_Query query ;	1777:1:54125:54144	5597195	0	True				
ANR	5597199	IdentifierDecl	query		5597195	0					
ANR	5597200	IdentifierDeclType	WinPerf_Query		5597195	0					
ANR	5597201	Identifier	query		5597195	1					
ANR	5597202	IfStatement	"if ( ! init_WinPerf_Query ( pkey , NULL , query ) )"		5597195	1					
ANR	5597203	Condition	"! init_WinPerf_Query ( pkey , NULL , query )"	1778:6:54152:54190	5597195	0	True				
ANR	5597204	UnaryOperationExpression	"! init_WinPerf_Query ( pkey , NULL , query )"		5597195	0					
ANR	5597205	UnaryOperator	!		5597195	0					
ANR	5597206	CallExpression	"init_WinPerf_Query ( pkey , NULL , query )"		5597195	1					
ANR	5597207	Callee	init_WinPerf_Query		5597195	0					
ANR	5597208	Identifier	init_WinPerf_Query		5597195	0					
ANR	5597209	ArgumentList	pkey		5597195	1					
ANR	5597210	Argument	pkey		5597195	0					
ANR	5597211	Identifier	pkey		5597195	0					
ANR	5597212	Argument	NULL		5597195	1					
ANR	5597213	Identifier	NULL		5597195	0					
ANR	5597214	Argument	query		5597195	2					
ANR	5597215	Identifier	query		5597195	0					
ANR	5597216	ReturnStatement	return NULL ;	1779:7:54201:54212	5597195	1	True				
ANR	5597217	Identifier	NULL		5597195	0					
ANR	5597218	IdentifierDeclStatement	int cbQuery = sizeof ( query ) + query . cchInst + 1 ;	1786:1:54469:54515	5597195	2	True				
ANR	5597219	IdentifierDecl	cbQuery = sizeof ( query ) + query . cchInst + 1		5597195	0					
ANR	5597220	IdentifierDeclType	int		5597195	0					
ANR	5597221	Identifier	cbQuery		5597195	1					
ANR	5597222	AssignmentExpression	cbQuery = sizeof ( query ) + query . cchInst + 1		5597195	2		=			
ANR	5597223	Identifier	cbQuery		5597195	0					
ANR	5597224	AdditiveExpression	sizeof ( query ) + query . cchInst + 1		5597195	1		+			
ANR	5597225	SizeofExpression	sizeof ( query )		5597195	0					
ANR	5597226	Sizeof	sizeof		5597195	0					
ANR	5597227	SizeofOperand	query		5597195	1					
ANR	5597228	AdditiveExpression	query . cchInst + 1		5597195	1		+			
ANR	5597229	MemberAccess	query . cchInst		5597195	0					
ANR	5597230	Identifier	query		5597195	0					
ANR	5597231	Identifier	cchInst		5597195	1					
ANR	5597232	PrimaryExpression	1		5597195	1					
ANR	5597233	IdentifierDeclStatement	int cchAttr = strlen ( pszAttr ) + 1 ;	1787:1:54518:54552	5597195	3	True				
ANR	5597234	IdentifierDecl	cchAttr = strlen ( pszAttr ) + 1		5597195	0					
ANR	5597235	IdentifierDeclType	int		5597195	0					
ANR	5597236	Identifier	cchAttr		5597195	1					
ANR	5597237	AssignmentExpression	cchAttr = strlen ( pszAttr ) + 1		5597195	2		=			
ANR	5597238	Identifier	cchAttr		5597195	0					
ANR	5597239	AdditiveExpression	strlen ( pszAttr ) + 1		5597195	1		+			
ANR	5597240	CallExpression	strlen ( pszAttr )		5597195	0					
ANR	5597241	Callee	strlen		5597195	0					
ANR	5597242	Identifier	strlen		5597195	0					
ANR	5597243	ArgumentList	pszAttr		5597195	1					
ANR	5597244	Argument	pszAttr		5597195	0					
ANR	5597245	Identifier	pszAttr		5597195	0					
ANR	5597246	PrimaryExpression	1		5597195	1					
ANR	5597247	IdentifierDeclStatement	int cb = sizeof ( AttribValue ) + cbQuery + cchAttr ;	1788:1:54555:54603	5597195	4	True				
ANR	5597248	IdentifierDecl	cb = sizeof ( AttribValue ) + cbQuery + cchAttr		5597195	0					
ANR	5597249	IdentifierDeclType	int		5597195	0					
ANR	5597250	Identifier	cb		5597195	1					
ANR	5597251	AssignmentExpression	cb = sizeof ( AttribValue ) + cbQuery + cchAttr		5597195	2		=			
ANR	5597252	Identifier	cb		5597195	0					
ANR	5597253	AdditiveExpression	sizeof ( AttribValue ) + cbQuery + cchAttr		5597195	1		+			
ANR	5597254	SizeofExpression	sizeof ( AttribValue )		5597195	0					
ANR	5597255	Sizeof	sizeof		5597195	0					
ANR	5597256	SizeofOperand	AttribValue		5597195	1					
ANR	5597257	AdditiveExpression	cbQuery + cchAttr		5597195	1		+			
ANR	5597258	Identifier	cbQuery		5597195	0					
ANR	5597259	Identifier	cchAttr		5597195	1					
ANR	5597260	IdentifierDeclStatement	AttribValue * pav = ( AttribValue * ) malloc ( cb ) ;	1789:1:54606:54650	5597195	5	True				
ANR	5597261	IdentifierDecl	* pav = ( AttribValue * ) malloc ( cb )		5597195	0					
ANR	5597262	IdentifierDeclType	AttribValue *		5597195	0					
ANR	5597263	Identifier	pav		5597195	1					
ANR	5597264	AssignmentExpression	* pav = ( AttribValue * ) malloc ( cb )		5597195	2		=			
ANR	5597265	Identifier	pav		5597195	0					
ANR	5597266	CastExpression	( AttribValue * ) malloc ( cb )		5597195	1					
ANR	5597267	CastTarget	AttribValue *		5597195	0					
ANR	5597268	CallExpression	malloc ( cb )		5597195	1					
ANR	5597269	Callee	malloc		5597195	0					
ANR	5597270	Identifier	malloc		5597195	0					
ANR	5597271	ArgumentList	cb		5597195	1					
ANR	5597272	Argument	cb		5597195	0					
ANR	5597273	Identifier	cb		5597195	0					
ANR	5597274	IfStatement	if ( pav )		5597195	6					
ANR	5597275	Condition	pav	1790:5:54657:54659	5597195	0	True				
ANR	5597276	Identifier	pav		5597195	0					
ANR	5597277	CompoundStatement		34:2:1036:1093	5597195	1					
ANR	5597278	ExpressionStatement	pav -> cb = cb	1792:2:54671:54683	5597195	0	True				
ANR	5597279	AssignmentExpression	pav -> cb = cb		5597195	0		=			
ANR	5597280	PtrMemberAccess	pav -> cb		5597195	0					
ANR	5597281	Identifier	pav		5597195	0					
ANR	5597282	Identifier	cb		5597195	1					
ANR	5597283	Identifier	cb		5597195	1					
ANR	5597284	ExpressionStatement	"strcpy ( ( char * ) ( pav + 1 ) , pszAttr )"	1793:2:54687:54718	5597195	1	True				
ANR	5597285	CallExpression	"strcpy ( ( char * ) ( pav + 1 ) , pszAttr )"		5597195	0					
ANR	5597286	Callee	strcpy		5597195	0					
ANR	5597287	Identifier	strcpy		5597195	0					
ANR	5597288	ArgumentList	( char * ) ( pav + 1 )		5597195	1					
ANR	5597289	Argument	( char * ) ( pav + 1 )		5597195	0					
ANR	5597290	CastExpression	( char * ) ( pav + 1 )		5597195	0					
ANR	5597291	CastTarget	char *		5597195	0					
ANR	5597292	AdditiveExpression	pav + 1		5597195	1		+			
ANR	5597293	Identifier	pav		5597195	0					
ANR	5597294	PrimaryExpression	1		5597195	1					
ANR	5597295	Argument	pszAttr		5597195	1					
ANR	5597296	Identifier	pszAttr		5597195	0					
ANR	5597297	ExpressionStatement	pav -> pszAttr = ( char * ) ( pav + 1 )	1794:2:54722:54751	5597195	2	True				
ANR	5597298	AssignmentExpression	pav -> pszAttr = ( char * ) ( pav + 1 )		5597195	0		=			
ANR	5597299	PtrMemberAccess	pav -> pszAttr		5597195	0					
ANR	5597300	Identifier	pav		5597195	0					
ANR	5597301	Identifier	pszAttr		5597195	1					
ANR	5597302	CastExpression	( char * ) ( pav + 1 )		5597195	1					
ANR	5597303	CastTarget	char *		5597195	0					
ANR	5597304	AdditiveExpression	pav + 1		5597195	1		+			
ANR	5597305	Identifier	pav		5597195	0					
ANR	5597306	PrimaryExpression	1		5597195	1					
ANR	5597307	ExpressionStatement	pav -> vtype = AttribValue_DataType_Double	1796:2:54756:54796	5597195	3	True				
ANR	5597308	AssignmentExpression	pav -> vtype = AttribValue_DataType_Double		5597195	0		=			
ANR	5597309	PtrMemberAccess	pav -> vtype		5597195	0					
ANR	5597310	Identifier	pav		5597195	0					
ANR	5597311	Identifier	vtype		5597195	1					
ANR	5597312	Identifier	AttribValue_DataType_Double		5597195	1					
ANR	5597313	ExpressionStatement	pav -> value . d = 0.0	1797:2:54800:54818	5597195	4	True				
ANR	5597314	AssignmentExpression	pav -> value . d = 0.0		5597195	0		=			
ANR	5597315	MemberAccess	pav -> value . d		5597195	0					
ANR	5597316	PtrMemberAccess	pav -> value		5597195	0					
ANR	5597317	Identifier	pav		5597195	0					
ANR	5597318	Identifier	value		5597195	1					
ANR	5597319	Identifier	d		5597195	1					
ANR	5597320	PrimaryExpression	0.0		5597195	1					
ANR	5597321	IdentifierDeclStatement	WinPerf_Query * pquery = ( WinPerf_Query * ) ( pav -> pszAttr + cchAttr ) ;	1798:2:54822:54888	5597195	5	True				
ANR	5597322	IdentifierDecl	* pquery = ( WinPerf_Query * ) ( pav -> pszAttr + cchAttr )		5597195	0					
ANR	5597323	IdentifierDeclType	WinPerf_Query *		5597195	0					
ANR	5597324	Identifier	pquery		5597195	1					
ANR	5597325	AssignmentExpression	* pquery = ( WinPerf_Query * ) ( pav -> pszAttr + cchAttr )		5597195	2		=			
ANR	5597326	Identifier	pquery		5597195	0					
ANR	5597327	CastExpression	( WinPerf_Query * ) ( pav -> pszAttr + cchAttr )		5597195	1					
ANR	5597328	CastTarget	WinPerf_Query *		5597195	0					
ANR	5597329	AdditiveExpression	pav -> pszAttr + cchAttr		5597195	1		+			
ANR	5597330	PtrMemberAccess	pav -> pszAttr		5597195	0					
ANR	5597331	Identifier	pav		5597195	0					
ANR	5597332	Identifier	pszAttr		5597195	1					
ANR	5597333	Identifier	cchAttr		5597195	1					
ANR	5597334	ExpressionStatement	* pquery = query	1799:2:54892:54907	5597195	6	True				
ANR	5597335	AssignmentExpression	* pquery = query		5597195	0		=			
ANR	5597336	UnaryOperationExpression	* pquery		5597195	0					
ANR	5597337	UnaryOperator	*		5597195	0					
ANR	5597338	Identifier	pquery		5597195	1					
ANR	5597339	Identifier	query		5597195	1					
ANR	5597340	ExpressionStatement	pquery -> ixInst = 0	1800:2:54911:54929	5597195	7	True				
ANR	5597341	AssignmentExpression	pquery -> ixInst = 0		5597195	0		=			
ANR	5597342	PtrMemberAccess	pquery -> ixInst		5597195	0					
ANR	5597343	Identifier	pquery		5597195	0					
ANR	5597344	Identifier	ixInst		5597195	1					
ANR	5597345	PrimaryExpression	0		5597195	1					
ANR	5597346	IfStatement	if ( pquery -> cchInst )		5597195	8					
ANR	5597347	Condition	pquery -> cchInst	1801:6:54937:54951	5597195	0	True				
ANR	5597348	PtrMemberAccess	pquery -> cchInst		5597195	0					
ANR	5597349	Identifier	pquery		5597195	0					
ANR	5597350	Identifier	cchInst		5597195	1					
ANR	5597351	CompoundStatement		27:8:840:840	5597195	1					
ANR	5597352	ExpressionStatement	"strncpy ( ( char * ) ( pquery + 1 ) , pkey + query . ixInst , query . cchInst )"	1803:3:54968:55030	5597195	0	True				
ANR	5597353	CallExpression	"strncpy ( ( char * ) ( pquery + 1 ) , pkey + query . ixInst , query . cchInst )"		5597195	0					
ANR	5597354	Callee	strncpy		5597195	0					
ANR	5597355	Identifier	strncpy		5597195	0					
ANR	5597356	ArgumentList	( char * ) ( pquery + 1 )		5597195	1					
ANR	5597357	Argument	( char * ) ( pquery + 1 )		5597195	0					
ANR	5597358	CastExpression	( char * ) ( pquery + 1 )		5597195	0					
ANR	5597359	CastTarget	char *		5597195	0					
ANR	5597360	AdditiveExpression	pquery + 1		5597195	1		+			
ANR	5597361	Identifier	pquery		5597195	0					
ANR	5597362	PrimaryExpression	1		5597195	1					
ANR	5597363	Argument	pkey + query . ixInst		5597195	1					
ANR	5597364	AdditiveExpression	pkey + query . ixInst		5597195	0		+			
ANR	5597365	Identifier	pkey		5597195	0					
ANR	5597366	MemberAccess	query . ixInst		5597195	1					
ANR	5597367	Identifier	query		5597195	0					
ANR	5597368	Identifier	ixInst		5597195	1					
ANR	5597369	Argument	query . cchInst		5597195	2					
ANR	5597370	MemberAccess	query . cchInst		5597195	0					
ANR	5597371	Identifier	query		5597195	0					
ANR	5597372	Identifier	cchInst		5597195	1					
ANR	5597373	ExpressionStatement	( ( char * ) ( pquery + 1 ) ) [ query . cchInst ] = 0	1804:3:55035:55073	5597195	1	True				
ANR	5597374	AssignmentExpression	( ( char * ) ( pquery + 1 ) ) [ query . cchInst ] = 0		5597195	0		=			
ANR	5597375	ArrayIndexing	( ( char * ) ( pquery + 1 ) ) [ query . cchInst ]		5597195	0					
ANR	5597376	CastExpression	( char * ) ( pquery + 1 )		5597195	0					
ANR	5597377	CastTarget	char *		5597195	0					
ANR	5597378	AdditiveExpression	pquery + 1		5597195	1		+			
ANR	5597379	Identifier	pquery		5597195	0					
ANR	5597380	PrimaryExpression	1		5597195	1					
ANR	5597381	MemberAccess	query . cchInst		5597195	1					
ANR	5597382	Identifier	query		5597195	0					
ANR	5597383	Identifier	cchInst		5597195	1					
ANR	5597384	PrimaryExpression	0		5597195	1					
ANR	5597385	ExpressionStatement	pav -> pquery = ( void * ) pquery	1806:2:55081:55108	5597195	9	True				
ANR	5597386	AssignmentExpression	pav -> pquery = ( void * ) pquery		5597195	0		=			
ANR	5597387	PtrMemberAccess	pav -> pquery		5597195	0					
ANR	5597388	Identifier	pav		5597195	0					
ANR	5597389	Identifier	pquery		5597195	1					
ANR	5597390	CastExpression	( void * ) pquery		5597195	1					
ANR	5597391	CastTarget	void *		5597195	0					
ANR	5597392	Identifier	pquery		5597195	1					
ANR	5597393	IdentifierDeclStatement	"WinPerf_QueryResult result = { query . idKey , 0 , NULL , NULL } ;"	1809:2:55159:55216	5597195	10	True				
ANR	5597394	IdentifierDecl	"result = { query . idKey , 0 , NULL , NULL }"		5597195	0					
ANR	5597395	IdentifierDeclType	WinPerf_QueryResult		5597195	0					
ANR	5597396	Identifier	result		5597195	1					
ANR	5597397	AssignmentExpression	"result = { query . idKey , 0 , NULL , NULL }"		5597195	2		=			
ANR	5597398	Identifier	result		5597195	0					
ANR	5597399	InitializerList	query . idKey		5597195	1					
ANR	5597400	MemberAccess	query . idKey		5597195	0					
ANR	5597401	Identifier	query		5597195	0					
ANR	5597402	Identifier	idKey		5597195	1					
ANR	5597403	PrimaryExpression	0		5597195	1					
ANR	5597404	Identifier	NULL		5597195	2					
ANR	5597405	Identifier	NULL		5597195	3					
ANR	5597406	ExpressionStatement	"rl . pQueries -> insert ( query . idKey , result )"	1810:2:55220:55260	5597195	11	True				
ANR	5597407	CallExpression	"rl . pQueries -> insert ( query . idKey , result )"		5597195	0					
ANR	5597408	Callee	rl . pQueries -> insert		5597195	0					
ANR	5597409	PtrMemberAccess	rl . pQueries -> insert		5597195	0					
ANR	5597410	MemberAccess	rl . pQueries		5597195	0					
ANR	5597411	Identifier	rl		5597195	0					
ANR	5597412	Identifier	pQueries		5597195	1					
ANR	5597413	Identifier	insert		5597195	1					
ANR	5597414	ArgumentList	query . idKey		5597195	1					
ANR	5597415	Argument	query . idKey		5597195	0					
ANR	5597416	MemberAccess	query . idKey		5597195	0					
ANR	5597417	Identifier	query		5597195	0					
ANR	5597418	Identifier	idKey		5597195	1					
ANR	5597419	Argument	result		5597195	1					
ANR	5597420	Identifier	result		5597195	0					
ANR	5597421	ReturnStatement	return pav ;	1834:4:55858:55868	5597195	7	True				
ANR	5597422	Identifier	pav		5597195	0					
ANR	5597423	ReturnType	AttribValue *		5597195	1					
ANR	5597424	Identifier	add_WinPerf_Query		5597195	2					
ANR	5597425	ParameterList	"const char * pszAttr , const char * pkey"		5597195	3					
ANR	5597426	Parameter	const char * pszAttr	1774:4:54077:54096	5597195	0	True				
ANR	5597427	ParameterType	const char *		5597195	0					
ANR	5597428	Identifier	pszAttr		5597195	1					
ANR	5597429	Parameter	const char * pkey	1775:4:54103:54119	5597195	1	True				
ANR	5597430	ParameterType	const char *		5597195	0					
ANR	5597431	Identifier	pkey		5597195	1					
ANR	5597432	CFGEntryNode	ENTRY		5597195		True				
ANR	5597433	CFGExitNode	EXIT		5597195		True				
ANR	5597434	Symbol	pav -> pszAttr		5597195						
ANR	5597435	Symbol	pquery -> ixInst		5597195						
ANR	5597436	Symbol	* query . cchInst		5597195						
ANR	5597437	Symbol	cbQuery		5597195						
ANR	5597438	Symbol	rl . pQueries		5597195						
ANR	5597439	Symbol	cchAttr		5597195						
ANR	5597440	Symbol	* pquery		5597195						
ANR	5597441	Symbol	pav -> pquery		5597195						
ANR	5597442	Symbol	* pav		5597195						
ANR	5597443	Symbol	result		5597195						
ANR	5597444	Symbol	strlen		5597195						
ANR	5597445	Symbol	pquery		5597195						
ANR	5597446	Symbol	query . idKey		5597195						
ANR	5597447	Symbol	pkey		5597195						
ANR	5597448	Symbol	* query		5597195						
ANR	5597449	Symbol	pquery -> cchInst		5597195						
ANR	5597450	Symbol	cb		5597195						
ANR	5597451	Symbol	pav -> cb		5597195						
ANR	5597452	Symbol	malloc		5597195						
ANR	5597453	Symbol	NULL		5597195						
ANR	5597454	Symbol	pav		5597195						
ANR	5597455	Symbol	pszAttr		5597195						
ANR	5597456	Symbol	query		5597195						
ANR	5597457	Symbol	pav -> value . d		5597195						
ANR	5597458	Symbol	pav -> vtype		5597195						
ANR	5597459	Symbol	query . cchInst		5597195						
ANR	5597460	Symbol	init_WinPerf_Query		5597195						
ANR	5597461	Symbol	rl		5597195						
ANR	5597462	Symbol	pav -> value		5597195						
ANR	5597463	Symbol	AttribValue_DataType_Double		5597195						
ANR	5597464	Symbol	query . ixInst		5597195						
