command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	933774	File	data/converged/CVE-2011-4930_htcondor/condor_q.cpp								
ANR	933775	DeclStmt									
ANR	933776	Decl							ClassAd	"ClassAd * ( const char * constraint , JobQueueSnapshot * jqSnapshot )"	getDBNextJobByConstraint
ANR	933777	DeclStmt									
ANR	933778	Decl							const char	const char * [ ]	intKeywords
ANR	933779	DeclStmt									
ANR	933780	Decl							const char	const char * [ ]	strKeywords
ANR	933781	DeclStmt									
ANR	933782	Decl							const char	const char * [ ]	fltKeywords
ANR	933783	Function	CondorQ :: CondorQ	69:0:1928:2645							
ANR	933784	FunctionDef	CondorQ :: CondorQ ()		933783	0					
ANR	933785	CompoundStatement		71:0:1954:2645	933783	0					
ANR	933786	ExpressionStatement	connect_timeout = 20	72:1:1957:1977	933783	0	True				
ANR	933787	AssignmentExpression	connect_timeout = 20		933783	0		=			
ANR	933788	Identifier	connect_timeout		933783	0					
ANR	933789	PrimaryExpression	20		933783	1					
ANR	933790	ExpressionStatement	query . setNumIntegerCats ( CQ_INT_THRESHOLD )	73:1:1981:2023	933783	1	True				
ANR	933791	CallExpression	query . setNumIntegerCats ( CQ_INT_THRESHOLD )		933783	0					
ANR	933792	Callee	query . setNumIntegerCats		933783	0					
ANR	933793	MemberAccess	query . setNumIntegerCats		933783	0					
ANR	933794	Identifier	query		933783	0					
ANR	933795	Identifier	setNumIntegerCats		933783	1					
ANR	933796	ArgumentList	CQ_INT_THRESHOLD		933783	1					
ANR	933797	Argument	CQ_INT_THRESHOLD		933783	0					
ANR	933798	Identifier	CQ_INT_THRESHOLD		933783	0					
ANR	933799	ExpressionStatement	query . setNumStringCats ( CQ_STR_THRESHOLD )	74:1:2026:2067	933783	2	True				
ANR	933800	CallExpression	query . setNumStringCats ( CQ_STR_THRESHOLD )		933783	0					
ANR	933801	Callee	query . setNumStringCats		933783	0					
ANR	933802	MemberAccess	query . setNumStringCats		933783	0					
ANR	933803	Identifier	query		933783	0					
ANR	933804	Identifier	setNumStringCats		933783	1					
ANR	933805	ArgumentList	CQ_STR_THRESHOLD		933783	1					
ANR	933806	Argument	CQ_STR_THRESHOLD		933783	0					
ANR	933807	Identifier	CQ_STR_THRESHOLD		933783	0					
ANR	933808	ExpressionStatement	query . setNumFloatCats ( CQ_FLT_THRESHOLD )	75:1:2070:2110	933783	3	True				
ANR	933809	CallExpression	query . setNumFloatCats ( CQ_FLT_THRESHOLD )		933783	0					
ANR	933810	Callee	query . setNumFloatCats		933783	0					
ANR	933811	MemberAccess	query . setNumFloatCats		933783	0					
ANR	933812	Identifier	query		933783	0					
ANR	933813	Identifier	setNumFloatCats		933783	1					
ANR	933814	ArgumentList	CQ_FLT_THRESHOLD		933783	1					
ANR	933815	Argument	CQ_FLT_THRESHOLD		933783	0					
ANR	933816	Identifier	CQ_FLT_THRESHOLD		933783	0					
ANR	933817	Statement	query	76:1:2113:2117	933783	4	True				
ANR	933818	Statement	.	76:6:2118:2118	933783	5	True				
ANR	933819	Statement	setIntegerKwList	76:7:2119:2134	933783	6	True				
ANR	933820	Statement	(	76:24:2136:2136	933783	7	True				
ANR	933821	Statement	const_cast	76:25:2137:2146	933783	8	True				
ANR	933822	Statement	<	76:35:2147:2147	933783	9	True				
ANR	933823	Statement	char	76:36:2148:2151	933783	10	True				
ANR	933824	Statement	*	76:41:2153:2153	933783	11	True				
ANR	933825	Statement	*	76:42:2154:2154	933783	12	True				
ANR	933826	Statement	>	76:43:2155:2155	933783	13	True				
ANR	933827	Statement	(	76:44:2156:2156	933783	14	True				
ANR	933828	Statement	intKeywords	76:45:2157:2167	933783	15	True				
ANR	933829	Statement	)	76:56:2168:2168	933783	16	True				
ANR	933830	Statement	)	76:57:2169:2169	933783	17	True				
ANR	933831	ExpressionStatement		76:58:2170:2170	933783	18	True				
ANR	933832	Statement	query	77:1:2173:2177	933783	19	True				
ANR	933833	Statement	.	77:6:2178:2178	933783	20	True				
ANR	933834	Statement	setStringKwList	77:7:2179:2193	933783	21	True				
ANR	933835	Statement	(	77:23:2195:2195	933783	22	True				
ANR	933836	Statement	const_cast	77:24:2196:2205	933783	23	True				
ANR	933837	Statement	<	77:34:2206:2206	933783	24	True				
ANR	933838	Statement	char	77:35:2207:2210	933783	25	True				
ANR	933839	Statement	*	77:40:2212:2212	933783	26	True				
ANR	933840	Statement	*	77:41:2213:2213	933783	27	True				
ANR	933841	Statement	>	77:42:2214:2214	933783	28	True				
ANR	933842	Statement	(	77:43:2215:2215	933783	29	True				
ANR	933843	Statement	strKeywords	77:44:2216:2226	933783	30	True				
ANR	933844	Statement	)	77:55:2227:2227	933783	31	True				
ANR	933845	Statement	)	77:56:2228:2228	933783	32	True				
ANR	933846	ExpressionStatement		77:57:2229:2229	933783	33	True				
ANR	933847	Statement	query	78:1:2232:2236	933783	34	True				
ANR	933848	Statement	.	78:6:2237:2237	933783	35	True				
ANR	933849	Statement	setFloatKwList	78:7:2238:2251	933783	36	True				
ANR	933850	Statement	(	78:22:2253:2253	933783	37	True				
ANR	933851	Statement	const_cast	78:23:2254:2263	933783	38	True				
ANR	933852	Statement	<	78:33:2264:2264	933783	39	True				
ANR	933853	Statement	char	78:34:2265:2268	933783	40	True				
ANR	933854	Statement	*	78:39:2270:2270	933783	41	True				
ANR	933855	Statement	*	78:40:2271:2271	933783	42	True				
ANR	933856	Statement	>	78:41:2272:2272	933783	43	True				
ANR	933857	Statement	(	78:42:2273:2273	933783	44	True				
ANR	933858	Statement	fltKeywords	78:43:2274:2284	933783	45	True				
ANR	933859	Statement	)	78:54:2285:2285	933783	46	True				
ANR	933860	Statement	)	78:55:2286:2286	933783	47	True				
ANR	933861	ExpressionStatement		78:56:2287:2287	933783	48	True				
ANR	933862	ExpressionStatement	clusterprocarraysize = 128	80:1:2291:2317	933783	49	True				
ANR	933863	AssignmentExpression	clusterprocarraysize = 128		933783	0		=			
ANR	933864	Identifier	clusterprocarraysize		933783	0					
ANR	933865	PrimaryExpression	128		933783	1					
ANR	933866	ExpressionStatement	clusterarray = ( int * ) malloc ( clusterprocarraysize * sizeof ( int ) )	81:1:2320:2385	933783	50	True				
ANR	933867	AssignmentExpression	clusterarray = ( int * ) malloc ( clusterprocarraysize * sizeof ( int ) )		933783	0		=			
ANR	933868	Identifier	clusterarray		933783	0					
ANR	933869	CastExpression	( int * ) malloc ( clusterprocarraysize * sizeof ( int ) )		933783	1					
ANR	933870	CastTarget	int *		933783	0					
ANR	933871	CallExpression	malloc ( clusterprocarraysize * sizeof ( int ) )		933783	1					
ANR	933872	Callee	malloc		933783	0					
ANR	933873	Identifier	malloc		933783	0					
ANR	933874	ArgumentList	clusterprocarraysize * sizeof ( int )		933783	1					
ANR	933875	Argument	clusterprocarraysize * sizeof ( int )		933783	0					
ANR	933876	MultiplicativeExpression	clusterprocarraysize * sizeof ( int )		933783	0		*			
ANR	933877	Identifier	clusterprocarraysize		933783	0					
ANR	933878	SizeofExpression	sizeof ( int )		933783	1					
ANR	933879	Sizeof	sizeof		933783	0					
ANR	933880	SizeofOperand	int		933783	1					
ANR	933881	ExpressionStatement	procarray = ( int * ) malloc ( clusterprocarraysize * sizeof ( int ) )	82:1:2388:2450	933783	51	True				
ANR	933882	AssignmentExpression	procarray = ( int * ) malloc ( clusterprocarraysize * sizeof ( int ) )		933783	0		=			
ANR	933883	Identifier	procarray		933783	0					
ANR	933884	CastExpression	( int * ) malloc ( clusterprocarraysize * sizeof ( int ) )		933783	1					
ANR	933885	CastTarget	int *		933783	0					
ANR	933886	CallExpression	malloc ( clusterprocarraysize * sizeof ( int ) )		933783	1					
ANR	933887	Callee	malloc		933783	0					
ANR	933888	Identifier	malloc		933783	0					
ANR	933889	ArgumentList	clusterprocarraysize * sizeof ( int )		933783	1					
ANR	933890	Argument	clusterprocarraysize * sizeof ( int )		933783	0					
ANR	933891	MultiplicativeExpression	clusterprocarraysize * sizeof ( int )		933783	0		*			
ANR	933892	Identifier	clusterprocarraysize		933783	0					
ANR	933893	SizeofExpression	sizeof ( int )		933783	1					
ANR	933894	Sizeof	sizeof		933783	0					
ANR	933895	SizeofOperand	int		933783	1					
ANR	933896	IdentifierDeclStatement	int i ;	83:1:2453:2458	933783	52	True				
ANR	933897	IdentifierDecl	i		933783	0					
ANR	933898	IdentifierDeclType	int		933783	0					
ANR	933899	Identifier	i		933783	1					
ANR	933900	ForStatement	for ( i = 0 ; i < clusterprocarraysize ; i ++ )		933783	53					
ANR	933901	ForInit	i = 0 ;	84:5:2465:2468	933783	0	True				
ANR	933902	AssignmentExpression	i = 0		933783	0		=			
ANR	933903	Identifier	i		933783	0					
ANR	933904	PrimaryExpression	0		933783	1					
ANR	933905	Condition	i < clusterprocarraysize	84:10:2470:2493	933783	1	True				
ANR	933906	RelationalExpression	i < clusterprocarraysize		933783	0		<			
ANR	933907	Identifier	i		933783	0					
ANR	933908	Identifier	clusterprocarraysize		933783	1					
ANR	933909	PostIncDecOperationExpression	i ++	84:36:2496:2498	933783	2	True				
ANR	933910	Identifier	i		933783	0					
ANR	933911	IncDec	++		933783	1					
ANR	933912	CompoundStatement		14:41:546:546	933783	3					
ANR	933913	ExpressionStatement	clusterarray [ i ] = - 1	85:2:2506:2526	933783	0	True				
ANR	933914	AssignmentExpression	clusterarray [ i ] = - 1		933783	0		=			
ANR	933915	ArrayIndexing	clusterarray [ i ]		933783	0					
ANR	933916	Identifier	clusterarray		933783	0					
ANR	933917	Identifier	i		933783	1					
ANR	933918	UnaryOperationExpression	- 1		933783	1					
ANR	933919	UnaryOperator	-		933783	0					
ANR	933920	PrimaryExpression	1		933783	1					
ANR	933921	ExpressionStatement	procarray [ i ] = - 1	86:2:2530:2547	933783	1	True				
ANR	933922	AssignmentExpression	procarray [ i ] = - 1		933783	0		=			
ANR	933923	ArrayIndexing	procarray [ i ]		933783	0					
ANR	933924	Identifier	procarray		933783	0					
ANR	933925	Identifier	i		933783	1					
ANR	933926	UnaryOperationExpression	- 1		933783	1					
ANR	933927	UnaryOperator	-		933783	0					
ANR	933928	PrimaryExpression	1		933783	1					
ANR	933929	ExpressionStatement	numclusters = 0	88:1:2553:2568	933783	54	True				
ANR	933930	AssignmentExpression	numclusters = 0		933783	0		=			
ANR	933931	Identifier	numclusters		933783	0					
ANR	933932	PrimaryExpression	0		933783	1					
ANR	933933	ExpressionStatement	numprocs = 0	89:1:2571:2583	933783	55	True				
ANR	933934	AssignmentExpression	numprocs = 0		933783	0		=			
ANR	933935	Identifier	numprocs		933783	0					
ANR	933936	PrimaryExpression	0		933783	1					
ANR	933937	ExpressionStatement	owner [ 0 ] = '\\0'	91:1:2587:2602	933783	56	True				
ANR	933938	AssignmentExpression	owner [ 0 ] = '\\0'		933783	0		=			
ANR	933939	ArrayIndexing	owner [ 0 ]		933783	0					
ANR	933940	Identifier	owner		933783	0					
ANR	933941	PrimaryExpression	0		933783	1					
ANR	933942	PrimaryExpression	'\\0'		933783	1					
ANR	933943	ExpressionStatement	schedd [ 0 ] = '\\0'	92:1:2605:2621	933783	57	True				
ANR	933944	AssignmentExpression	schedd [ 0 ] = '\\0'		933783	0		=			
ANR	933945	ArrayIndexing	schedd [ 0 ]		933783	0					
ANR	933946	Identifier	schedd		933783	0					
ANR	933947	PrimaryExpression	0		933783	1					
ANR	933948	PrimaryExpression	'\\0'		933783	1					
ANR	933949	ExpressionStatement	scheddBirthdate = 0	93:1:2624:2643	933783	58	True				
ANR	933950	AssignmentExpression	scheddBirthdate = 0		933783	0		=			
ANR	933951	Identifier	scheddBirthdate		933783	0					
ANR	933952	PrimaryExpression	0		933783	1					
ANR	933953	Identifier	CondorQ :: CondorQ		933783	1					
ANR	933954	ParameterList			933783	2					
ANR	933955	CFGEntryNode	ENTRY		933783		True				
ANR	933956	CFGExitNode	EXIT		933783		True				
ANR	933957	Symbol	CQ_INT_THRESHOLD		933783						
ANR	933958	Symbol	numclusters		933783						
ANR	933959	Symbol	owner		933783						
ANR	933960	Symbol	malloc		933783						
ANR	933961	Symbol	connect_timeout		933783						
ANR	933962	Symbol	CQ_STR_THRESHOLD		933783						
ANR	933963	Symbol	procarray		933783						
ANR	933964	Symbol	* clusterarray		933783						
ANR	933965	Symbol	query		933783						
ANR	933966	Symbol	i		933783						
ANR	933967	Symbol	* owner		933783						
ANR	933968	Symbol	schedd		933783						
ANR	933969	Symbol	numprocs		933783						
ANR	933970	Symbol	scheddBirthdate		933783						
ANR	933971	Symbol	clusterarray		933783						
ANR	933972	Symbol	* i		933783						
ANR	933973	Symbol	CQ_FLT_THRESHOLD		933783						
ANR	933974	Symbol	* procarray		933783						
ANR	933975	Symbol	clusterprocarraysize		933783						
ANR	933976	Symbol	* schedd		933783						
ANR	933977	Function	CondorQ :: ~CondorQ	97:0:2649:2712							
ANR	933978	FunctionDef	CondorQ :: ~CondorQ ()		933977	0					
ANR	933979	CompoundStatement		99:0:2671:2712	933977	0					
ANR	933980	ExpressionStatement	free ( clusterarray )	100:1:2674:2692	933977	0	True				
ANR	933981	CallExpression	free ( clusterarray )		933977	0					
ANR	933982	Callee	free		933977	0					
ANR	933983	Identifier	free		933977	0					
ANR	933984	ArgumentList	clusterarray		933977	1					
ANR	933985	Argument	clusterarray		933977	0					
ANR	933986	Identifier	clusterarray		933977	0					
ANR	933987	ExpressionStatement	free ( procarray )	101:1:2695:2710	933977	1	True				
ANR	933988	CallExpression	free ( procarray )		933977	0					
ANR	933989	Callee	free		933977	0					
ANR	933990	Identifier	free		933977	0					
ANR	933991	ArgumentList	procarray		933977	1					
ANR	933992	Argument	procarray		933977	0					
ANR	933993	Identifier	procarray		933977	0					
ANR	933994	Identifier	CondorQ :: ~CondorQ		933977	1					
ANR	933995	ParameterList			933977	2					
ANR	933996	CFGEntryNode	ENTRY		933977		True				
ANR	933997	CFGExitNode	EXIT		933977		True				
ANR	933998	Symbol	clusterarray		933977						
ANR	933999	Symbol	procarray		933977						
ANR	934000	Function	CondorQ :: init	105:0:2716:2826							
ANR	934001	FunctionDef	CondorQ :: init ()		934000	0					
ANR	934002	CompoundStatement		107:0:2738:2826	934000	0					
ANR	934003	ExpressionStatement	"connect_timeout = param_integer ( ""Q_QUERY_TIMEOUT"" , connect_timeout )"	108:1:2741:2810	934000	0	True				
ANR	934004	AssignmentExpression	"connect_timeout = param_integer ( ""Q_QUERY_TIMEOUT"" , connect_timeout )"		934000	0		=			
ANR	934005	Identifier	connect_timeout		934000	0					
ANR	934006	CallExpression	"param_integer ( ""Q_QUERY_TIMEOUT"" , connect_timeout )"		934000	1					
ANR	934007	Callee	param_integer		934000	0					
ANR	934008	Identifier	param_integer		934000	0					
ANR	934009	ArgumentList	"""Q_QUERY_TIMEOUT"""		934000	1					
ANR	934010	Argument	"""Q_QUERY_TIMEOUT"""		934000	0					
ANR	934011	PrimaryExpression	"""Q_QUERY_TIMEOUT"""		934000	0					
ANR	934012	Argument	connect_timeout		934000	1					
ANR	934013	Identifier	connect_timeout		934000	0					
ANR	934014	ReturnStatement	return true ;	109:1:2813:2824	934000	1	True				
ANR	934015	Identifier	true		934000	0					
ANR	934016	ReturnType	bool		934000	1					
ANR	934017	Identifier	CondorQ :: init		934000	2					
ANR	934018	ParameterList			934000	3					
ANR	934019	CFGEntryNode	ENTRY		934000		True				
ANR	934020	CFGExitNode	EXIT		934000		True				
ANR	934021	Symbol	connect_timeout		934000						
ANR	934022	Symbol	true		934000						
ANR	934023	Symbol	param_integer		934000						
ANR	934024	Function	CondorQ :: addDBConstraint	113:0:2830:3907							
ANR	934025	FunctionDef	"CondorQ :: addDBConstraint (CondorQIntCategories cat , int value)"		934024	0					
ANR	934026	CompoundStatement		115:0:2899:3907	934024	0					
ANR	934027	IdentifierDeclStatement	int i ;	116:1:2902:2907	934024	0	True				
ANR	934028	IdentifierDecl	i		934024	0					
ANR	934029	IdentifierDeclType	int		934024	0					
ANR	934030	Identifier	i		934024	1					
ANR	934031	SwitchStatement	switch ( cat )		934024	1					
ANR	934032	Condition	cat	119:9:3005:3007	934024	0	True				
ANR	934033	Identifier	cat		934024	0					
ANR	934034	CompoundStatement		5:14:110:110	934024	1					
ANR	934035	Label	case CQ_CLUSTER_ID :	120:1:3013:3031	934024	0	True				
ANR	934036	Identifier	CQ_CLUSTER_ID		934024	0					
ANR	934037	ExpressionStatement	clusterarray [ numclusters ] = value	121:2:3035:3068	934024	1	True				
ANR	934038	AssignmentExpression	clusterarray [ numclusters ] = value		934024	0		=			
ANR	934039	ArrayIndexing	clusterarray [ numclusters ]		934024	0					
ANR	934040	Identifier	clusterarray		934024	0					
ANR	934041	Identifier	numclusters		934024	1					
ANR	934042	Identifier	value		934024	1					
ANR	934043	ExpressionStatement	numclusters ++	122:2:3072:3085	934024	2	True				
ANR	934044	PostIncDecOperationExpression	numclusters ++		934024	0					
ANR	934045	Identifier	numclusters		934024	0					
ANR	934046	IncDec	++		934024	1					
ANR	934047	IfStatement	if ( numclusters == clusterprocarraysize - 1 )		934024	3					
ANR	934048	Condition	numclusters == clusterprocarraysize - 1	123:5:3092:3128	934024	0	True				
ANR	934049	EqualityExpression	numclusters == clusterprocarraysize - 1		934024	0		==			
ANR	934050	Identifier	numclusters		934024	0					
ANR	934051	AdditiveExpression	clusterprocarraysize - 1		934024	1		-			
ANR	934052	Identifier	clusterprocarraysize		934024	0					
ANR	934053	PrimaryExpression	1		934024	1					
ANR	934054	CompoundStatement		9:44:231:231	934024	1					
ANR	934055	ExpressionStatement	"clusterarray = ( int * ) realloc ( clusterarray , clusterprocarraysize * 2 * sizeof ( int ) )"	124:5:3138:3228	934024	0	True				
ANR	934056	AssignmentExpression	"clusterarray = ( int * ) realloc ( clusterarray , clusterprocarraysize * 2 * sizeof ( int ) )"		934024	0		=			
ANR	934057	Identifier	clusterarray		934024	0					
ANR	934058	CastExpression	"( int * ) realloc ( clusterarray , clusterprocarraysize * 2 * sizeof ( int ) )"		934024	1					
ANR	934059	CastTarget	int *		934024	0					
ANR	934060	CallExpression	"realloc ( clusterarray , clusterprocarraysize * 2 * sizeof ( int ) )"		934024	1					
ANR	934061	Callee	realloc		934024	0					
ANR	934062	Identifier	realloc		934024	0					
ANR	934063	ArgumentList	clusterarray		934024	1					
ANR	934064	Argument	clusterarray		934024	0					
ANR	934065	Identifier	clusterarray		934024	0					
ANR	934066	Argument	clusterprocarraysize * 2 * sizeof ( int )		934024	1					
ANR	934067	MultiplicativeExpression	clusterprocarraysize * 2 * sizeof ( int )		934024	0		*			
ANR	934068	Identifier	clusterprocarraysize		934024	0					
ANR	934069	MultiplicativeExpression	2 * sizeof ( int )		934024	1		*			
ANR	934070	PrimaryExpression	2		934024	0					
ANR	934071	SizeofExpression	sizeof ( int )		934024	1					
ANR	934072	Sizeof	sizeof		934024	0					
ANR	934073	SizeofOperand	int		934024	1					
ANR	934074	ExpressionStatement	"procarray = ( int * ) realloc ( procarray , clusterprocarraysize * 2 * sizeof ( int ) )"	126:5:3235:3319	934024	1	True				
ANR	934075	AssignmentExpression	"procarray = ( int * ) realloc ( procarray , clusterprocarraysize * 2 * sizeof ( int ) )"		934024	0		=			
ANR	934076	Identifier	procarray		934024	0					
ANR	934077	CastExpression	"( int * ) realloc ( procarray , clusterprocarraysize * 2 * sizeof ( int ) )"		934024	1					
ANR	934078	CastTarget	int *		934024	0					
ANR	934079	CallExpression	"realloc ( procarray , clusterprocarraysize * 2 * sizeof ( int ) )"		934024	1					
ANR	934080	Callee	realloc		934024	0					
ANR	934081	Identifier	realloc		934024	0					
ANR	934082	ArgumentList	procarray		934024	1					
ANR	934083	Argument	procarray		934024	0					
ANR	934084	Identifier	procarray		934024	0					
ANR	934085	Argument	clusterprocarraysize * 2 * sizeof ( int )		934024	1					
ANR	934086	MultiplicativeExpression	clusterprocarraysize * 2 * sizeof ( int )		934024	0		*			
ANR	934087	Identifier	clusterprocarraysize		934024	0					
ANR	934088	MultiplicativeExpression	2 * sizeof ( int )		934024	1		*			
ANR	934089	PrimaryExpression	2		934024	0					
ANR	934090	SizeofExpression	sizeof ( int )		934024	1					
ANR	934091	Sizeof	sizeof		934024	0					
ANR	934092	SizeofOperand	int		934024	1					
ANR	934093	ForStatement	for ( i = clusterprocarraysize ; i < clusterprocarraysize * 2 ; i ++ )		934024	2					
ANR	934094	ForInit	i = clusterprocarraysize ;	128:9:3330:3352	934024	0	True				
ANR	934095	AssignmentExpression	i = clusterprocarraysize		934024	0		=			
ANR	934096	Identifier	i		934024	0					
ANR	934097	Identifier	clusterprocarraysize		934024	1					
ANR	934098	Condition	i < clusterprocarraysize * 2	129:4:3359:3386	934024	1	True				
ANR	934099	RelationalExpression	i < clusterprocarraysize * 2		934024	0		<			
ANR	934100	Identifier	i		934024	0					
ANR	934101	MultiplicativeExpression	clusterprocarraysize * 2		934024	1		*			
ANR	934102	Identifier	clusterprocarraysize		934024	0					
ANR	934103	PrimaryExpression	2		934024	1					
ANR	934104	PostIncDecOperationExpression	i ++	129:34:3389:3391	934024	2	True				
ANR	934105	Identifier	i		934024	0					
ANR	934106	IncDec	++		934024	1					
ANR	934107	CompoundStatement		15:39:494:494	934024	3					
ANR	934108	ExpressionStatement	clusterarray [ i ] = - 1	130:8:3404:3424	934024	0	True				
ANR	934109	AssignmentExpression	clusterarray [ i ] = - 1		934024	0		=			
ANR	934110	ArrayIndexing	clusterarray [ i ]		934024	0					
ANR	934111	Identifier	clusterarray		934024	0					
ANR	934112	Identifier	i		934024	1					
ANR	934113	UnaryOperationExpression	- 1		934024	1					
ANR	934114	UnaryOperator	-		934024	0					
ANR	934115	PrimaryExpression	1		934024	1					
ANR	934116	ExpressionStatement	procarray [ i ] = - 1	131:8:3434:3451	934024	1	True				
ANR	934117	AssignmentExpression	procarray [ i ] = - 1		934024	0		=			
ANR	934118	ArrayIndexing	procarray [ i ]		934024	0					
ANR	934119	Identifier	procarray		934024	0					
ANR	934120	Identifier	i		934024	1					
ANR	934121	UnaryOperationExpression	- 1		934024	1					
ANR	934122	UnaryOperator	-		934024	0					
ANR	934123	PrimaryExpression	1		934024	1					
ANR	934124	ExpressionStatement	clusterprocarraysize *= 2	133:5:3465:3490	934024	3	True				
ANR	934125	AssignmentExpression	clusterprocarraysize *= 2		934024	0		*=			
ANR	934126	Identifier	clusterprocarraysize		934024	0					
ANR	934127	PrimaryExpression	2		934024	1					
ANR	934128	BreakStatement	break ;	135:2:3499:3504	934024	4	True				
ANR	934129	Label	case CQ_PROC_ID :	136:1:3507:3522	934024	5	True				
ANR	934130	Identifier	CQ_PROC_ID		934024	0					
ANR	934131	ExpressionStatement	procarray [ numclusters - 1 ] = value	142:2:3817:3849	934024	6	True				
ANR	934132	AssignmentExpression	procarray [ numclusters - 1 ] = value		934024	0		=			
ANR	934133	ArrayIndexing	procarray [ numclusters - 1 ]		934024	0					
ANR	934134	Identifier	procarray		934024	0					
ANR	934135	AdditiveExpression	numclusters - 1		934024	1		-			
ANR	934136	Identifier	numclusters		934024	0					
ANR	934137	PrimaryExpression	1		934024	1					
ANR	934138	Identifier	value		934024	1					
ANR	934139	ExpressionStatement	numprocs ++	143:2:3853:3863	934024	7	True				
ANR	934140	PostIncDecOperationExpression	numprocs ++		934024	0					
ANR	934141	Identifier	numprocs		934024	0					
ANR	934142	IncDec	++		934024	1					
ANR	934143	BreakStatement	break ;	144:2:3867:3872	934024	8	True				
ANR	934144	Label	default :	145:1:3875:3882	934024	9	True				
ANR	934145	Identifier	default		934024	0					
ANR	934146	BreakStatement	break ;	146:2:3886:3891	934024	10	True				
ANR	934147	ReturnStatement	return 1 ;	148:1:3897:3905	934024	2	True				
ANR	934148	PrimaryExpression	1		934024	0					
ANR	934149	ReturnType	int		934024	1					
ANR	934150	Identifier	CondorQ :: addDBConstraint		934024	2					
ANR	934151	ParameterList	"CondorQIntCategories cat , int value"		934024	3					
ANR	934152	Parameter	CondorQIntCategories cat	114:17:2861:2884	934024	0	True				
ANR	934153	ParameterType	CondorQIntCategories		934024	0					
ANR	934154	Identifier	cat		934024	1					
ANR	934155	Parameter	int value	114:43:2887:2895	934024	1	True				
ANR	934156	ParameterType	int		934024	0					
ANR	934157	Identifier	value		934024	1					
ANR	934158	CFGEntryNode	ENTRY		934024		True				
ANR	934159	CFGExitNode	EXIT		934024		True				
ANR	934160	Symbol	numclusters		934024						
ANR	934161	Symbol	procarray		934024						
ANR	934162	Symbol	* clusterarray		934024						
ANR	934163	Symbol	i		934024						
ANR	934164	Symbol	realloc		934024						
ANR	934165	Symbol	numprocs		934024						
ANR	934166	Symbol	clusterarray		934024						
ANR	934167	Symbol	* i		934024						
ANR	934168	Symbol	* procarray		934024						
ANR	934169	Symbol	cat		934024						
ANR	934170	Symbol	clusterprocarraysize		934024						
ANR	934171	Symbol	* numclusters		934024						
ANR	934172	Symbol	value		934024						
ANR	934173	Function	CondorQ :: add	151:0:3910:4007							
ANR	934174	FunctionDef	"CondorQ :: add (CondorQIntCategories cat , int value)"		934173	0					
ANR	934175	CompoundStatement		153:0:3966:4007	934173	0					
ANR	934176	ReturnStatement	"return query . addInteger ( cat , value ) ;"	154:1:3969:4005	934173	0	True				
ANR	934177	CallExpression	"query . addInteger ( cat , value )"		934173	0					
ANR	934178	Callee	query . addInteger		934173	0					
ANR	934179	MemberAccess	query . addInteger		934173	0					
ANR	934180	Identifier	query		934173	0					
ANR	934181	Identifier	addInteger		934173	1					
ANR	934182	ArgumentList	cat		934173	1					
ANR	934183	Argument	cat		934173	0					
ANR	934184	Identifier	cat		934173	0					
ANR	934185	Argument	value		934173	1					
ANR	934186	Identifier	value		934173	0					
ANR	934187	ReturnType	int		934173	1					
ANR	934188	Identifier	CondorQ :: add		934173	2					
ANR	934189	ParameterList	"CondorQIntCategories cat , int value"		934173	3					
ANR	934190	Parameter	CondorQIntCategories cat	152:5:3929:3952	934173	0	True				
ANR	934191	ParameterType	CondorQIntCategories		934173	0					
ANR	934192	Identifier	cat		934173	1					
ANR	934193	Parameter	int value	152:31:3955:3963	934173	1	True				
ANR	934194	ParameterType	int		934173	0					
ANR	934195	Identifier	value		934173	1					
ANR	934196	CFGEntryNode	ENTRY		934173		True				
ANR	934197	CFGExitNode	EXIT		934173		True				
ANR	934198	Symbol	query . addInteger		934173						
ANR	934199	Symbol	cat		934173						
ANR	934200	Symbol	query		934173						
ANR	934201	Symbol	value		934173						
ANR	934202	Function	CondorQ :: add	158:0:4011:4223							
ANR	934203	FunctionDef	"CondorQ :: add (CondorQStrCategories cat , const char * value)"		934202	0					
ANR	934204	CompoundStatement		160:0:4075:4223	934202	0					
ANR	934205	SwitchStatement	switch ( cat )		934202	0					
ANR	934206	Condition	cat	161:9:4088:4090	934202	0	True				
ANR	934207	Identifier	cat		934202	0					
ANR	934208	CompoundStatement		2:14:17:17	934202	1					
ANR	934209	Label	case CQ_OWNER :	162:1:4096:4109	934202	0	True				
ANR	934210	Identifier	CQ_OWNER		934202	0					
ANR	934211	ExpressionStatement	"strncpy ( owner , value , MAXOWNERLEN - 1 )"	163:2:4113:4151	934202	1	True				
ANR	934212	CallExpression	"strncpy ( owner , value , MAXOWNERLEN - 1 )"		934202	0					
ANR	934213	Callee	strncpy		934202	0					
ANR	934214	Identifier	strncpy		934202	0					
ANR	934215	ArgumentList	owner		934202	1					
ANR	934216	Argument	owner		934202	0					
ANR	934217	Identifier	owner		934202	0					
ANR	934218	Argument	value		934202	1					
ANR	934219	Identifier	value		934202	0					
ANR	934220	Argument	MAXOWNERLEN - 1		934202	2					
ANR	934221	AdditiveExpression	MAXOWNERLEN - 1		934202	0		-			
ANR	934222	Identifier	MAXOWNERLEN		934202	0					
ANR	934223	PrimaryExpression	1		934202	1					
ANR	934224	BreakStatement	break ;	164:2:4155:4160	934202	2	True				
ANR	934225	Label	default :	165:1:4163:4170	934202	3	True				
ANR	934226	Identifier	default		934202	0					
ANR	934227	BreakStatement	break ;	166:2:4174:4179	934202	4	True				
ANR	934228	ReturnStatement	"return query . addString ( cat , value ) ;"	169:1:4186:4221	934202	1	True				
ANR	934229	CallExpression	"query . addString ( cat , value )"		934202	0					
ANR	934230	Callee	query . addString		934202	0					
ANR	934231	MemberAccess	query . addString		934202	0					
ANR	934232	Identifier	query		934202	0					
ANR	934233	Identifier	addString		934202	1					
ANR	934234	ArgumentList	cat		934202	1					
ANR	934235	Argument	cat		934202	0					
ANR	934236	Identifier	cat		934202	0					
ANR	934237	Argument	value		934202	1					
ANR	934238	Identifier	value		934202	0					
ANR	934239	ReturnType	int		934202	1					
ANR	934240	Identifier	CondorQ :: add		934202	2					
ANR	934241	ParameterList	"CondorQStrCategories cat , const char * value"		934202	3					
ANR	934242	Parameter	CondorQStrCategories cat	159:5:4030:4053	934202	0	True				
ANR	934243	ParameterType	CondorQStrCategories		934202	0					
ANR	934244	Identifier	cat		934202	1					
ANR	934245	Parameter	const char * value	159:31:4056:4072	934202	1	True				
ANR	934246	ParameterType	const char *		934202	0					
ANR	934247	Identifier	value		934202	1					
ANR	934248	CFGEntryNode	ENTRY		934202		True				
ANR	934249	CFGExitNode	EXIT		934202		True				
ANR	934250	Symbol	owner		934202						
ANR	934251	Symbol	cat		934202						
ANR	934252	Symbol	query		934202						
ANR	934253	Symbol	query . addString		934202						
ANR	934254	Symbol	MAXOWNERLEN		934202						
ANR	934255	Symbol	value		934202						
ANR	934256	Function	CondorQ :: add	173:0:4227:4324							
ANR	934257	FunctionDef	"CondorQ :: add (CondorQFltCategories cat , float value)"		934256	0					
ANR	934258	CompoundStatement		175:0:4285:4324	934256	0					
ANR	934259	ReturnStatement	"return query . addFloat ( cat , value ) ;"	176:1:4288:4322	934256	0	True				
ANR	934260	CallExpression	"query . addFloat ( cat , value )"		934256	0					
ANR	934261	Callee	query . addFloat		934256	0					
ANR	934262	MemberAccess	query . addFloat		934256	0					
ANR	934263	Identifier	query		934256	0					
ANR	934264	Identifier	addFloat		934256	1					
ANR	934265	ArgumentList	cat		934256	1					
ANR	934266	Argument	cat		934256	0					
ANR	934267	Identifier	cat		934256	0					
ANR	934268	Argument	value		934256	1					
ANR	934269	Identifier	value		934256	0					
ANR	934270	ReturnType	int		934256	1					
ANR	934271	Identifier	CondorQ :: add		934256	2					
ANR	934272	ParameterList	"CondorQFltCategories cat , float value"		934256	3					
ANR	934273	Parameter	CondorQFltCategories cat	174:5:4246:4269	934256	0	True				
ANR	934274	ParameterType	CondorQFltCategories		934256	0					
ANR	934275	Identifier	cat		934256	1					
ANR	934276	Parameter	float value	174:31:4272:4282	934256	1	True				
ANR	934277	ParameterType	float		934256	0					
ANR	934278	Identifier	value		934256	1					
ANR	934279	CFGEntryNode	ENTRY		934256		True				
ANR	934280	CFGExitNode	EXIT		934256		True				
ANR	934281	Symbol	query . addFloat		934256						
ANR	934282	Symbol	cat		934256						
ANR	934283	Symbol	query		934256						
ANR	934284	Symbol	value		934256						
ANR	934285	Function	CondorQ :: addOR	180:0:4328:4405							
ANR	934286	FunctionDef	CondorQ :: addOR (const char * value)		934285	0					
ANR	934287	CompoundStatement		182:0:4368:4405	934285	0					
ANR	934288	ReturnStatement	return query . addCustomOR ( value ) ;	183:1:4371:4403	934285	0	True				
ANR	934289	CallExpression	query . addCustomOR ( value )		934285	0					
ANR	934290	Callee	query . addCustomOR		934285	0					
ANR	934291	MemberAccess	query . addCustomOR		934285	0					
ANR	934292	Identifier	query		934285	0					
ANR	934293	Identifier	addCustomOR		934285	1					
ANR	934294	ArgumentList	value		934285	1					
ANR	934295	Argument	value		934285	0					
ANR	934296	Identifier	value		934285	0					
ANR	934297	ReturnType	int		934285	1					
ANR	934298	Identifier	CondorQ :: addOR		934285	2					
ANR	934299	ParameterList	const char * value		934285	3					
ANR	934300	Parameter	const char * value	181:7:4349:4365	934285	0	True				
ANR	934301	ParameterType	const char *		934285	0					
ANR	934302	Identifier	value		934285	1					
ANR	934303	CFGEntryNode	ENTRY		934285		True				
ANR	934304	CFGExitNode	EXIT		934285		True				
ANR	934305	Symbol	query . addCustomOR		934285						
ANR	934306	Symbol	query		934285						
ANR	934307	Symbol	value		934285						
ANR	934308	Function	CondorQ :: addAND	186:0:4408:4487							
ANR	934309	FunctionDef	CondorQ :: addAND (const char * value)		934308	0					
ANR	934310	CompoundStatement		188:0:4449:4487	934308	0					
ANR	934311	ReturnStatement	return query . addCustomAND ( value ) ;	189:1:4452:4485	934308	0	True				
ANR	934312	CallExpression	query . addCustomAND ( value )		934308	0					
ANR	934313	Callee	query . addCustomAND		934308	0					
ANR	934314	MemberAccess	query . addCustomAND		934308	0					
ANR	934315	Identifier	query		934308	0					
ANR	934316	Identifier	addCustomAND		934308	1					
ANR	934317	ArgumentList	value		934308	1					
ANR	934318	Argument	value		934308	0					
ANR	934319	Identifier	value		934308	0					
ANR	934320	ReturnType	int		934308	1					
ANR	934321	Identifier	CondorQ :: addAND		934308	2					
ANR	934322	ParameterList	const char * value		934308	3					
ANR	934323	Parameter	const char * value	187:8:4430:4446	934308	0	True				
ANR	934324	ParameterType	const char *		934308	0					
ANR	934325	Identifier	value		934308	1					
ANR	934326	CFGEntryNode	ENTRY		934308		True				
ANR	934327	CFGExitNode	EXIT		934308		True				
ANR	934328	Symbol	query		934308						
ANR	934329	Symbol	value		934308						
ANR	934330	Symbol	query . addCustomAND		934308						
ANR	934331	Function	CondorQ :: addSchedd	192:0:4490:4592							
ANR	934332	FunctionDef	CondorQ :: addSchedd (const char * value)		934331	0					
ANR	934333	CompoundStatement		194:0:4534:4592	934331	0					
ANR	934334	ExpressionStatement	"strncpy ( schedd , value , MAXSCHEDDLEN - 1 )"	195:1:4539:4579	934331	0	True				
ANR	934335	CallExpression	"strncpy ( schedd , value , MAXSCHEDDLEN - 1 )"		934331	0					
ANR	934336	Callee	strncpy		934331	0					
ANR	934337	Identifier	strncpy		934331	0					
ANR	934338	ArgumentList	schedd		934331	1					
ANR	934339	Argument	schedd		934331	0					
ANR	934340	Identifier	schedd		934331	0					
ANR	934341	Argument	value		934331	1					
ANR	934342	Identifier	value		934331	0					
ANR	934343	Argument	MAXSCHEDDLEN - 1		934331	2					
ANR	934344	AdditiveExpression	MAXSCHEDDLEN - 1		934331	0		-			
ANR	934345	Identifier	MAXSCHEDDLEN		934331	0					
ANR	934346	PrimaryExpression	1		934331	1					
ANR	934347	ReturnStatement	return 0 ;	196:1:4582:4590	934331	1	True				
ANR	934348	PrimaryExpression	0		934331	0					
ANR	934349	ReturnType	int		934331	1					
ANR	934350	Identifier	CondorQ :: addSchedd		934331	2					
ANR	934351	ParameterList	const char * value		934331	3					
ANR	934352	Parameter	const char * value	193:11:4515:4531	934331	0	True				
ANR	934353	ParameterType	const char *		934331	0					
ANR	934354	Identifier	value		934331	1					
ANR	934355	CFGEntryNode	ENTRY		934331		True				
ANR	934356	CFGExitNode	EXIT		934331		True				
ANR	934357	Symbol	schedd		934331						
ANR	934358	Symbol	value		934331						
ANR	934359	Symbol	MAXSCHEDDLEN		934331						
ANR	934360	Function	CondorQ :: addScheddBirthdate	199:0:4595:4684							
ANR	934361	FunctionDef	CondorQ :: addScheddBirthdate (time_t value)		934360	0					
ANR	934362	CompoundStatement		201:0:4643:4684	934360	0					
ANR	934363	ExpressionStatement	scheddBirthdate = value	202:1:4648:4671	934360	0	True				
ANR	934364	AssignmentExpression	scheddBirthdate = value		934360	0		=			
ANR	934365	Identifier	scheddBirthdate		934360	0					
ANR	934366	Identifier	value		934360	1					
ANR	934367	ReturnStatement	return 0 ;	203:1:4674:4682	934360	1	True				
ANR	934368	PrimaryExpression	0		934360	0					
ANR	934369	ReturnType	int		934360	1					
ANR	934370	Identifier	CondorQ :: addScheddBirthdate		934360	2					
ANR	934371	ParameterList	time_t value		934360	3					
ANR	934372	Parameter	time_t value	200:20:4629:4640	934360	0	True				
ANR	934373	ParameterType	time_t		934360	0					
ANR	934374	Identifier	value		934360	1					
ANR	934375	CFGEntryNode	ENTRY		934360		True				
ANR	934376	CFGExitNode	EXIT		934360		True				
ANR	934377	Symbol	value		934360						
ANR	934378	Symbol	scheddBirthdate		934360						
ANR	934379	Function	CondorQ :: fetchQueue	207:0:4688:5753							
ANR	934380	FunctionDef	"CondorQ :: fetchQueue (ClassAdList & list , StringList & attrs , ClassAd * ad , CondorError * errstack)"		934379	0					
ANR	934381	CompoundStatement		209:0:4788:5753	934379	0					
ANR	934382	IdentifierDeclStatement	Qmgr_connection * qmgr ;	210:1:4791:4812	934379	0	True				
ANR	934383	IdentifierDecl	* qmgr		934379	0					
ANR	934384	IdentifierDeclType	Qmgr_connection *		934379	0					
ANR	934385	Identifier	qmgr		934379	1					
ANR	934386	IdentifierDeclStatement	ExprTree * tree ;	211:1:4815:4830	934379	1	True				
ANR	934387	IdentifierDecl	* tree		934379	0					
ANR	934388	IdentifierDeclType	ExprTree *		934379	0					
ANR	934389	Identifier	tree		934379	1					
ANR	934390	IdentifierDeclStatement	int result ;	212:1:4833:4849	934379	2	True				
ANR	934391	IdentifierDecl	result		934379	0					
ANR	934392	IdentifierDeclType	int		934379	0					
ANR	934393	Identifier	result		934379	1					
ANR	934394	IdentifierDeclStatement	char scheddString [ 32 ] ;	213:1:4852:4879	934379	3	True				
ANR	934395	IdentifierDecl	scheddString [ 32 ]		934379	0					
ANR	934396	IdentifierDeclType	char [ 32 ]		934379	0					
ANR	934397	Identifier	scheddString		934379	1					
ANR	934398	PrimaryExpression	32		934379	2					
ANR	934399	IdentifierDeclStatement	const char * constraint ;	214:1:4882:4906	934379	4	True				
ANR	934400	IdentifierDecl	* constraint		934379	0					
ANR	934401	IdentifierDeclType	const char *		934379	0					
ANR	934402	Identifier	constraint		934379	1					
ANR	934403	IdentifierDeclStatement	bool useFastPath = false ;	216:1:4910:4934	934379	5	True				
ANR	934404	IdentifierDecl	useFastPath = false		934379	0					
ANR	934405	IdentifierDeclType	bool		934379	0					
ANR	934406	Identifier	useFastPath		934379	1					
ANR	934407	AssignmentExpression	useFastPath = false		934379	2		=			
ANR	934408	Identifier	false		934379	0					
ANR	934409	Identifier	false		934379	1					
ANR	934410	IfStatement	if ( ( result = query . makeQuery ( tree ) ) != Q_OK )		934379	6					
ANR	934411	Condition	( result = query . makeQuery ( tree ) ) != Q_OK	219:5:4964:5004	934379	0	True				
ANR	934412	EqualityExpression	( result = query . makeQuery ( tree ) ) != Q_OK		934379	0		!=			
ANR	934413	AssignmentExpression	result = query . makeQuery ( tree )		934379	0		=			
ANR	934414	Identifier	result		934379	0					
ANR	934415	CallExpression	query . makeQuery ( tree )		934379	1					
ANR	934416	Callee	query . makeQuery		934379	0					
ANR	934417	MemberAccess	query . makeQuery		934379	0					
ANR	934418	Identifier	query		934379	0					
ANR	934419	Identifier	makeQuery		934379	1					
ANR	934420	ArgumentList	tree		934379	1					
ANR	934421	Argument	tree		934379	0					
ANR	934422	Identifier	tree		934379	0					
ANR	934423	Identifier	Q_OK		934379	1					
ANR	934424	ReturnStatement	return result ;	220:2:5009:5022	934379	1	True				
ANR	934425	Identifier	result		934379	0					
ANR	934426	ExpressionStatement	constraint = ExprTreeToString ( tree )	221:1:5025:5062	934379	7	True				
ANR	934427	AssignmentExpression	constraint = ExprTreeToString ( tree )		934379	0		=			
ANR	934428	Identifier	constraint		934379	0					
ANR	934429	CallExpression	ExprTreeToString ( tree )		934379	1					
ANR	934430	Callee	ExprTreeToString		934379	0					
ANR	934431	Identifier	ExprTreeToString		934379	0					
ANR	934432	ArgumentList	tree		934379	1					
ANR	934433	Argument	tree		934379	0					
ANR	934434	Identifier	tree		934379	0					
ANR	934435	Statement	delete	222:1:5065:5070	934379	8	True				
ANR	934436	ExpressionStatement	tree	222:8:5072:5076	934379	9	True				
ANR	934437	Identifier	tree		934379	0					
ANR	934438	ExpressionStatement	init ( )	225:1:5109:5115	934379	10	True				
ANR	934439	CallExpression	init ( )		934379	0					
ANR	934440	Callee	init		934379	0					
ANR	934441	Identifier	init		934379	0					
ANR	934442	ArgumentList			934379	1					
ANR	934443	IfStatement	if ( ad == 0 )		934379	11					
ANR	934444	Condition	ad == 0	226:5:5164:5170	934379	0	True				
ANR	934445	EqualityExpression	ad == 0		934379	0		==			
ANR	934446	Identifier	ad		934379	0					
ANR	934447	PrimaryExpression	0		934379	1					
ANR	934448	CompoundStatement		19:1:385:385	934379	1					
ANR	934449	IfStatement	"if ( ! ( qmgr = ConnectQ ( 0 , connect_timeout , true , errstack ) ) )"		934379	0					
ANR	934450	Condition	"! ( qmgr = ConnectQ ( 0 , connect_timeout , true , errstack ) )"	229:6:5198:5252	934379	0	True				
ANR	934451	UnaryOperationExpression	"! ( qmgr = ConnectQ ( 0 , connect_timeout , true , errstack ) )"		934379	0					
ANR	934452	UnaryOperator	!		934379	0					
ANR	934453	AssignmentExpression	"qmgr = ConnectQ ( 0 , connect_timeout , true , errstack )"		934379	1		=			
ANR	934454	Identifier	qmgr		934379	0					
ANR	934455	CallExpression	"ConnectQ ( 0 , connect_timeout , true , errstack )"		934379	1					
ANR	934456	Callee	ConnectQ		934379	0					
ANR	934457	Identifier	ConnectQ		934379	0					
ANR	934458	ArgumentList	0		934379	1					
ANR	934459	Argument	0		934379	0					
ANR	934460	PrimaryExpression	0		934379	0					
ANR	934461	Argument	connect_timeout		934379	1					
ANR	934462	Identifier	connect_timeout		934379	0					
ANR	934463	Argument	true		934379	2					
ANR	934464	Identifier	true		934379	0					
ANR	934465	Argument	errstack		934379	3					
ANR	934466	Identifier	errstack		934379	0					
ANR	934467	CompoundStatement		21:64:467:467	934379	1					
ANR	934468	ExpressionStatement	"errstack -> push ( ""TEST"" , 0 , ""FOO"" )"	230:3:5261:5293	934379	0	True				
ANR	934469	CallExpression	"errstack -> push ( ""TEST"" , 0 , ""FOO"" )"		934379	0					
ANR	934470	Callee	errstack -> push		934379	0					
ANR	934471	PtrMemberAccess	errstack -> push		934379	0					
ANR	934472	Identifier	errstack		934379	0					
ANR	934473	Identifier	push		934379	1					
ANR	934474	ArgumentList	"""TEST"""		934379	1					
ANR	934475	Argument	"""TEST"""		934379	0					
ANR	934476	PrimaryExpression	"""TEST"""		934379	0					
ANR	934477	Argument	0		934379	1					
ANR	934478	PrimaryExpression	0		934379	0					
ANR	934479	Argument	"""FOO"""		934379	2					
ANR	934480	PrimaryExpression	"""FOO"""		934379	0					
ANR	934481	ReturnStatement	return Q_SCHEDD_COMMUNICATION_ERROR ;	231:3:5298:5333	934379	1	True				
ANR	934482	Identifier	Q_SCHEDD_COMMUNICATION_ERROR		934379	0					
ANR	934483	ExpressionStatement	useFastPath = true	233:2:5341:5359	934379	1	True				
ANR	934484	AssignmentExpression	useFastPath = true		934379	0		=			
ANR	934485	Identifier	useFastPath		934379	0					
ANR	934486	Identifier	true		934379	1					
ANR	934487	ElseStatement	else		934379	0					
ANR	934488	CompoundStatement		28:1:582:582	934379	0					
ANR	934489	IfStatement	"if ( ! ad -> LookupString ( ATTR_SCHEDD_IP_ADDR , scheddString ) )"		934379	0					
ANR	934490	Condition	"! ad -> LookupString ( ATTR_SCHEDD_IP_ADDR , scheddString )"	238:6:5421:5473	934379	0	True				
ANR	934491	UnaryOperationExpression	"! ad -> LookupString ( ATTR_SCHEDD_IP_ADDR , scheddString )"		934379	0					
ANR	934492	UnaryOperator	!		934379	0					
ANR	934493	CallExpression	"ad -> LookupString ( ATTR_SCHEDD_IP_ADDR , scheddString )"		934379	1					
ANR	934494	Callee	ad -> LookupString		934379	0					
ANR	934495	PtrMemberAccess	ad -> LookupString		934379	0					
ANR	934496	Identifier	ad		934379	0					
ANR	934497	Identifier	LookupString		934379	1					
ANR	934498	ArgumentList	ATTR_SCHEDD_IP_ADDR		934379	1					
ANR	934499	Argument	ATTR_SCHEDD_IP_ADDR		934379	0					
ANR	934500	Identifier	ATTR_SCHEDD_IP_ADDR		934379	0					
ANR	934501	Argument	scheddString		934379	1					
ANR	934502	Identifier	scheddString		934379	0					
ANR	934503	ReturnStatement	return Q_NO_SCHEDD_IP_ADDR ;	239:3:5479:5505	934379	1	True				
ANR	934504	Identifier	Q_NO_SCHEDD_IP_ADDR		934379	0					
ANR	934505	IfStatement	"if ( ! ( qmgr = ConnectQ ( scheddString , connect_timeout , true , errstack ) ) )"		934379	1					
ANR	934506	Condition	"! ( qmgr = ConnectQ ( scheddString , connect_timeout , true , errstack ) )"	241:6:5514:5579	934379	0	True				
ANR	934507	UnaryOperationExpression	"! ( qmgr = ConnectQ ( scheddString , connect_timeout , true , errstack ) )"		934379	0					
ANR	934508	UnaryOperator	!		934379	0					
ANR	934509	AssignmentExpression	"qmgr = ConnectQ ( scheddString , connect_timeout , true , errstack )"		934379	1		=			
ANR	934510	Identifier	qmgr		934379	0					
ANR	934511	CallExpression	"ConnectQ ( scheddString , connect_timeout , true , errstack )"		934379	1					
ANR	934512	Callee	ConnectQ		934379	0					
ANR	934513	Identifier	ConnectQ		934379	0					
ANR	934514	ArgumentList	scheddString		934379	1					
ANR	934515	Argument	scheddString		934379	0					
ANR	934516	Identifier	scheddString		934379	0					
ANR	934517	Argument	connect_timeout		934379	1					
ANR	934518	Identifier	connect_timeout		934379	0					
ANR	934519	Argument	true		934379	2					
ANR	934520	Identifier	true		934379	0					
ANR	934521	Argument	errstack		934379	3					
ANR	934522	Identifier	errstack		934379	0					
ANR	934523	ReturnStatement	return Q_SCHEDD_COMMUNICATION_ERROR ;	242:3:5586:5621	934379	1	True				
ANR	934524	Identifier	Q_SCHEDD_COMMUNICATION_ERROR		934379	0					
ANR	934525	ExpressionStatement	"getAndFilterAds ( constraint , attrs , list , useFastPath )"	247:1:5661:5715	934379	12	True				
ANR	934526	CallExpression	"getAndFilterAds ( constraint , attrs , list , useFastPath )"		934379	0					
ANR	934527	Callee	getAndFilterAds		934379	0					
ANR	934528	Identifier	getAndFilterAds		934379	0					
ANR	934529	ArgumentList	constraint		934379	1					
ANR	934530	Argument	constraint		934379	0					
ANR	934531	Identifier	constraint		934379	0					
ANR	934532	Argument	attrs		934379	1					
ANR	934533	Identifier	attrs		934379	0					
ANR	934534	Argument	list		934379	2					
ANR	934535	Identifier	list		934379	0					
ANR	934536	Argument	useFastPath		934379	3					
ANR	934537	Identifier	useFastPath		934379	0					
ANR	934538	ExpressionStatement	DisconnectQ ( qmgr )	249:1:5719:5737	934379	13	True				
ANR	934539	CallExpression	DisconnectQ ( qmgr )		934379	0					
ANR	934540	Callee	DisconnectQ		934379	0					
ANR	934541	Identifier	DisconnectQ		934379	0					
ANR	934542	ArgumentList	qmgr		934379	1					
ANR	934543	Argument	qmgr		934379	0					
ANR	934544	Identifier	qmgr		934379	0					
ANR	934545	ReturnStatement	return Q_OK ;	250:1:5740:5751	934379	14	True				
ANR	934546	Identifier	Q_OK		934379	0					
ANR	934547	ReturnType	int		934379	1					
ANR	934548	Identifier	CondorQ :: fetchQueue		934379	2					
ANR	934549	ParameterList	"ClassAdList & list , StringList & attrs , ClassAd * ad , CondorError * errstack"		934379	3					
ANR	934550	Parameter	ClassAdList & list	208:12:4714:4730	934379	0	True				
ANR	934551	ParameterType	ClassAdList &		934379	0					
ANR	934552	Identifier	list		934379	1					
ANR	934553	Parameter	StringList & attrs	208:31:4733:4749	934379	1	True				
ANR	934554	ParameterType	StringList &		934379	0					
ANR	934555	Identifier	attrs		934379	1					
ANR	934556	Parameter	ClassAd * ad	208:50:4752:4762	934379	2	True				
ANR	934557	ParameterType	ClassAd *		934379	0					
ANR	934558	Identifier	ad		934379	1					
ANR	934559	Parameter	CondorError * errstack	208:63:4765:4785	934379	3	True				
ANR	934560	ParameterType	CondorError *		934379	0					
ANR	934561	Identifier	errstack		934379	1					
ANR	934562	CFGEntryNode	ENTRY		934379		True				
ANR	934563	CFGExitNode	EXIT		934379		True				
ANR	934564	Symbol	ad -> LookupString		934379						
ANR	934565	Symbol	ad		934379						
ANR	934566	Symbol	connect_timeout		934379						
ANR	934567	Symbol	query		934379						
ANR	934568	Symbol	tree		934379						
ANR	934569	Symbol	false		934379						
ANR	934570	Symbol	query . makeQuery		934379						
ANR	934571	Symbol	ExprTreeToString		934379						
ANR	934572	Symbol	Q_SCHEDD_COMMUNICATION_ERROR		934379						
ANR	934573	Symbol	Q_NO_SCHEDD_IP_ADDR		934379						
ANR	934574	Symbol	* ad		934379						
ANR	934575	Symbol	list		934379						
ANR	934576	Symbol	Q_OK		934379						
ANR	934577	Symbol	scheddString		934379						
ANR	934578	Symbol	attrs		934379						
ANR	934579	Symbol	result		934379						
ANR	934580	Symbol	ATTR_SCHEDD_IP_ADDR		934379						
ANR	934581	Symbol	qmgr		934379						
ANR	934582	Symbol	ConnectQ		934379						
ANR	934583	Symbol	errstack		934379						
ANR	934584	Symbol	true		934379						
ANR	934585	Symbol	constraint		934379						
ANR	934586	Symbol	useFastPath		934379						
ANR	934587	Function	CondorQ :: fetchQueueFromHost	253:0:5756:6818							
ANR	934588	FunctionDef	"CondorQ :: fetchQueueFromHost (ClassAdList & list , StringList & attrs , const char * host , char const * schedd_version , CondorError * errstack)"		934587	0					
ANR	934589	CompoundStatement		255:0:5897:6818	934587	0					
ANR	934590	IdentifierDeclStatement	Qmgr_connection * qmgr ;	256:1:5900:5921	934587	0	True				
ANR	934591	IdentifierDecl	* qmgr		934587	0					
ANR	934592	IdentifierDeclType	Qmgr_connection *		934587	0					
ANR	934593	Identifier	qmgr		934587	1					
ANR	934594	IdentifierDeclStatement	ExprTree * tree ;	257:1:5924:5939	934587	1	True				
ANR	934595	IdentifierDecl	* tree		934587	0					
ANR	934596	IdentifierDeclType	ExprTree *		934587	0					
ANR	934597	Identifier	tree		934587	1					
ANR	934598	IdentifierDeclStatement	const char * constraint ;	258:1:5942:5965	934587	2	True				
ANR	934599	IdentifierDecl	* constraint		934587	0					
ANR	934600	IdentifierDeclType	const char *		934587	0					
ANR	934601	Identifier	constraint		934587	1					
ANR	934602	IdentifierDeclStatement	int result ;	259:1:5968:5984	934587	3	True				
ANR	934603	IdentifierDecl	result		934587	0					
ANR	934604	IdentifierDeclType	int		934587	0					
ANR	934605	Identifier	result		934587	1					
ANR	934606	IfStatement	if ( ( result = query . makeQuery ( tree ) ) != Q_OK )		934587	4					
ANR	934607	Condition	( result = query . makeQuery ( tree ) ) != Q_OK	262:5:6014:6054	934587	0	True				
ANR	934608	EqualityExpression	( result = query . makeQuery ( tree ) ) != Q_OK		934587	0		!=			
ANR	934609	AssignmentExpression	result = query . makeQuery ( tree )		934587	0		=			
ANR	934610	Identifier	result		934587	0					
ANR	934611	CallExpression	query . makeQuery ( tree )		934587	1					
ANR	934612	Callee	query . makeQuery		934587	0					
ANR	934613	MemberAccess	query . makeQuery		934587	0					
ANR	934614	Identifier	query		934587	0					
ANR	934615	Identifier	makeQuery		934587	1					
ANR	934616	ArgumentList	tree		934587	1					
ANR	934617	Argument	tree		934587	0					
ANR	934618	Identifier	tree		934587	0					
ANR	934619	Identifier	Q_OK		934587	1					
ANR	934620	ReturnStatement	return result ;	263:2:6059:6072	934587	1	True				
ANR	934621	Identifier	result		934587	0					
ANR	934622	ExpressionStatement	constraint = ExprTreeToString ( tree )	264:1:6075:6112	934587	5	True				
ANR	934623	AssignmentExpression	constraint = ExprTreeToString ( tree )		934587	0		=			
ANR	934624	Identifier	constraint		934587	0					
ANR	934625	CallExpression	ExprTreeToString ( tree )		934587	1					
ANR	934626	Callee	ExprTreeToString		934587	0					
ANR	934627	Identifier	ExprTreeToString		934587	0					
ANR	934628	ArgumentList	tree		934587	1					
ANR	934629	Argument	tree		934587	0					
ANR	934630	Identifier	tree		934587	0					
ANR	934631	Statement	delete	265:1:6115:6120	934587	6	True				
ANR	934632	ExpressionStatement	tree	265:8:6122:6126	934587	7	True				
ANR	934633	Identifier	tree		934587	0					
ANR	934634	ExpressionStatement	init ( )	274:1:6367:6373	934587	8	True				
ANR	934635	CallExpression	init ( )		934587	0					
ANR	934636	Callee	init		934587	0					
ANR	934637	Identifier	init		934587	0					
ANR	934638	ArgumentList			934587	1					
ANR	934639	IfStatement	"if ( ! ( qmgr = ConnectQ ( host , connect_timeout , true , errstack ) ) )"		934587	9					
ANR	934640	Condition	"! ( qmgr = ConnectQ ( host , connect_timeout , true , errstack ) )"	275:5:6422:6479	934587	0	True				
ANR	934641	UnaryOperationExpression	"! ( qmgr = ConnectQ ( host , connect_timeout , true , errstack ) )"		934587	0					
ANR	934642	UnaryOperator	!		934587	0					
ANR	934643	AssignmentExpression	"qmgr = ConnectQ ( host , connect_timeout , true , errstack )"		934587	1		=			
ANR	934644	Identifier	qmgr		934587	0					
ANR	934645	CallExpression	"ConnectQ ( host , connect_timeout , true , errstack )"		934587	1					
ANR	934646	Callee	ConnectQ		934587	0					
ANR	934647	Identifier	ConnectQ		934587	0					
ANR	934648	ArgumentList	host		934587	1					
ANR	934649	Argument	host		934587	0					
ANR	934650	Identifier	host		934587	0					
ANR	934651	Argument	connect_timeout		934587	1					
ANR	934652	Identifier	connect_timeout		934587	0					
ANR	934653	Argument	true		934587	2					
ANR	934654	Identifier	true		934587	0					
ANR	934655	Argument	errstack		934587	3					
ANR	934656	Identifier	errstack		934587	0					
ANR	934657	ReturnStatement	return Q_SCHEDD_COMMUNICATION_ERROR ;	276:2:6485:6520	934587	1	True				
ANR	934658	Identifier	Q_SCHEDD_COMMUNICATION_ERROR		934587	0					
ANR	934659	IdentifierDeclStatement	bool useFastPath = false ;	278:1:6524:6548	934587	10	True				
ANR	934660	IdentifierDecl	useFastPath = false		934587	0					
ANR	934661	IdentifierDeclType	bool		934587	0					
ANR	934662	Identifier	useFastPath		934587	1					
ANR	934663	AssignmentExpression	useFastPath = false		934587	2		=			
ANR	934664	Identifier	false		934587	0					
ANR	934665	Identifier	false		934587	1					
ANR	934666	IfStatement	if ( schedd_version && * schedd_version )		934587	11					
ANR	934667	Condition	schedd_version && * schedd_version	279:5:6555:6587	934587	0	True				
ANR	934668	AndExpression	schedd_version && * schedd_version		934587	0		&&			
ANR	934669	Identifier	schedd_version		934587	0					
ANR	934670	UnaryOperationExpression	* schedd_version		934587	1					
ANR	934671	UnaryOperator	*		934587	0					
ANR	934672	Identifier	schedd_version		934587	1					
ANR	934673	CompoundStatement		26:2:697:732	934587	1					
ANR	934674	IdentifierDeclStatement	CondorVersionInfo v ( schedd_version ) ;	280:2:6595:6630	934587	0	True				
ANR	934675	IdentifierDecl	v ( schedd_version )		934587	0					
ANR	934676	IdentifierDeclType	CondorVersionInfo		934587	0					
ANR	934677	Identifier	v		934587	1					
ANR	934678	Identifier	schedd_version		934587	2					
ANR	934679	ExpressionStatement	"useFastPath = v . built_since_version ( 6 , 9 , 3 )"	281:2:6634:6676	934587	1	True				
ANR	934680	AssignmentExpression	"useFastPath = v . built_since_version ( 6 , 9 , 3 )"		934587	0		=			
ANR	934681	Identifier	useFastPath		934587	0					
ANR	934682	CallExpression	"v . built_since_version ( 6 , 9 , 3 )"		934587	1					
ANR	934683	Callee	v . built_since_version		934587	0					
ANR	934684	MemberAccess	v . built_since_version		934587	0					
ANR	934685	Identifier	v		934587	0					
ANR	934686	Identifier	built_since_version		934587	1					
ANR	934687	ArgumentList	6		934587	1					
ANR	934688	Argument	6		934587	0					
ANR	934689	PrimaryExpression	6		934587	0					
ANR	934690	Argument	9		934587	1					
ANR	934691	PrimaryExpression	9		934587	0					
ANR	934692	Argument	3		934587	2					
ANR	934693	PrimaryExpression	3		934587	0					
ANR	934694	ExpressionStatement	"result = getAndFilterAds ( constraint , attrs , list , useFastPath )"	285:1:6715:6778	934587	12	True				
ANR	934695	AssignmentExpression	"result = getAndFilterAds ( constraint , attrs , list , useFastPath )"		934587	0		=			
ANR	934696	Identifier	result		934587	0					
ANR	934697	CallExpression	"getAndFilterAds ( constraint , attrs , list , useFastPath )"		934587	1					
ANR	934698	Callee	getAndFilterAds		934587	0					
ANR	934699	Identifier	getAndFilterAds		934587	0					
ANR	934700	ArgumentList	constraint		934587	1					
ANR	934701	Argument	constraint		934587	0					
ANR	934702	Identifier	constraint		934587	0					
ANR	934703	Argument	attrs		934587	1					
ANR	934704	Identifier	attrs		934587	0					
ANR	934705	Argument	list		934587	2					
ANR	934706	Identifier	list		934587	0					
ANR	934707	Argument	useFastPath		934587	3					
ANR	934708	Identifier	useFastPath		934587	0					
ANR	934709	ExpressionStatement	DisconnectQ ( qmgr )	287:1:6782:6800	934587	13	True				
ANR	934710	CallExpression	DisconnectQ ( qmgr )		934587	0					
ANR	934711	Callee	DisconnectQ		934587	0					
ANR	934712	Identifier	DisconnectQ		934587	0					
ANR	934713	ArgumentList	qmgr		934587	1					
ANR	934714	Argument	qmgr		934587	0					
ANR	934715	Identifier	qmgr		934587	0					
ANR	934716	ReturnStatement	return result ;	288:1:6803:6816	934587	14	True				
ANR	934717	Identifier	result		934587	0					
ANR	934718	ReturnType	int		934587	1					
ANR	934719	Identifier	CondorQ :: fetchQueueFromHost		934587	2					
ANR	934720	ParameterList	"ClassAdList & list , StringList & attrs , const char * host , char const * schedd_version , CondorError * errstack"		934587	3					
ANR	934721	Parameter	ClassAdList & list	254:20:5790:5806	934587	0	True				
ANR	934722	ParameterType	ClassAdList &		934587	0					
ANR	934723	Identifier	list		934587	1					
ANR	934724	Parameter	StringList & attrs	254:39:5809:5825	934587	1	True				
ANR	934725	ParameterType	StringList &		934587	0					
ANR	934726	Identifier	attrs		934587	1					
ANR	934727	Parameter	const char * host	254:58:5828:5843	934587	2	True				
ANR	934728	ParameterType	const char *		934587	0					
ANR	934729	Identifier	host		934587	1					
ANR	934730	Parameter	char const * schedd_version	254:76:5846:5871	934587	3	True				
ANR	934731	ParameterType	char const *		934587	0					
ANR	934732	Identifier	schedd_version		934587	1					
ANR	934733	Parameter	CondorError * errstack	254:104:5874:5894	934587	4	True				
ANR	934734	ParameterType	CondorError *		934587	0					
ANR	934735	Identifier	errstack		934587	1					
ANR	934736	CFGEntryNode	ENTRY		934587		True				
ANR	934737	CFGExitNode	EXIT		934587		True				
ANR	934738	Symbol	* schedd_version		934587						
ANR	934739	Symbol	connect_timeout		934587						
ANR	934740	Symbol	schedd_version		934587						
ANR	934741	Symbol	query		934587						
ANR	934742	Symbol	tree		934587						
ANR	934743	Symbol	query . makeQuery		934587						
ANR	934744	Symbol	ExprTreeToString		934587						
ANR	934745	Symbol	Q_SCHEDD_COMMUNICATION_ERROR		934587						
ANR	934746	Symbol	false		934587						
ANR	934747	Symbol	list		934587						
ANR	934748	Symbol	Q_OK		934587						
ANR	934749	Symbol	attrs		934587						
ANR	934750	Symbol	result		934587						
ANR	934751	Symbol	qmgr		934587						
ANR	934752	Symbol	ConnectQ		934587						
ANR	934753	Symbol	errstack		934587						
ANR	934754	Symbol	v		934587						
ANR	934755	Symbol	getAndFilterAds		934587						
ANR	934756	Symbol	host		934587						
ANR	934757	Symbol	true		934587						
ANR	934758	Symbol	constraint		934587						
ANR	934759	Symbol	useFastPath		934587						
ANR	934760	Symbol	v . built_since_version		934587						
ANR	934761	DeclStmt									
ANR	934762	Decl							int	int	result
ANR	934763	DeclStmt									
ANR	934764	Decl							JobQueueSnapshot	JobQueueSnapshot *	jqSnapshot
ANR	934765	DeclStmt									
ANR	934766	Decl							const char	const char *	constraint
ANR	934767	DeclStmt									
ANR	934768	Decl							ClassAd	ClassAd *	ad
ANR	934769	DeclStmt									
ANR	934770	Decl							QuillErrCode	QuillErrCode	rv
ANR	934771	DeclStmt									
ANR	934772	Decl							ExprTree	ExprTree *	tree
ANR	934773	Function	CondorQ :: fetchQueueFromHostAndProcess	351:0:8005:8976							
ANR	934774	FunctionDef	"CondorQ :: fetchQueueFromHostAndProcess (const char * host , StringList & attrs , process_function process_func , bool useFastPath , CondorError * errstack)"		934773	0					
ANR	934775	CompoundStatement		357:0:8198:8976	934773	0					
ANR	934776	IdentifierDeclStatement	Qmgr_connection * qmgr ;	358:1:8201:8222	934773	0	True				
ANR	934777	IdentifierDecl	* qmgr		934773	0					
ANR	934778	IdentifierDeclType	Qmgr_connection *		934773	0					
ANR	934779	Identifier	qmgr		934773	1					
ANR	934780	IdentifierDeclStatement	ExprTree * tree ;	359:1:8225:8240	934773	1	True				
ANR	934781	IdentifierDecl	* tree		934773	0					
ANR	934782	IdentifierDeclType	ExprTree *		934773	0					
ANR	934783	Identifier	tree		934773	1					
ANR	934784	IdentifierDeclStatement	const char * constraint ;	360:1:8243:8267	934773	2	True				
ANR	934785	IdentifierDecl	* constraint		934773	0					
ANR	934786	IdentifierDeclType	const char *		934773	0					
ANR	934787	Identifier	constraint		934773	1					
ANR	934788	IdentifierDeclStatement	int result ;	361:1:8270:8286	934773	3	True				
ANR	934789	IdentifierDecl	result		934773	0					
ANR	934790	IdentifierDeclType	int		934773	0					
ANR	934791	Identifier	result		934773	1					
ANR	934792	IfStatement	if ( ( result = query . makeQuery ( tree ) ) != Q_OK )		934773	4					
ANR	934793	Condition	( result = query . makeQuery ( tree ) ) != Q_OK	364:5:8316:8356	934773	0	True				
ANR	934794	EqualityExpression	( result = query . makeQuery ( tree ) ) != Q_OK		934773	0		!=			
ANR	934795	AssignmentExpression	result = query . makeQuery ( tree )		934773	0		=			
ANR	934796	Identifier	result		934773	0					
ANR	934797	CallExpression	query . makeQuery ( tree )		934773	1					
ANR	934798	Callee	query . makeQuery		934773	0					
ANR	934799	MemberAccess	query . makeQuery		934773	0					
ANR	934800	Identifier	query		934773	0					
ANR	934801	Identifier	makeQuery		934773	1					
ANR	934802	ArgumentList	tree		934773	1					
ANR	934803	Argument	tree		934773	0					
ANR	934804	Identifier	tree		934773	0					
ANR	934805	Identifier	Q_OK		934773	1					
ANR	934806	ReturnStatement	return result ;	365:2:8361:8374	934773	1	True				
ANR	934807	Identifier	result		934773	0					
ANR	934808	ExpressionStatement	constraint = ExprTreeToString ( tree )	366:1:8377:8414	934773	5	True				
ANR	934809	AssignmentExpression	constraint = ExprTreeToString ( tree )		934773	0		=			
ANR	934810	Identifier	constraint		934773	0					
ANR	934811	CallExpression	ExprTreeToString ( tree )		934773	1					
ANR	934812	Callee	ExprTreeToString		934773	0					
ANR	934813	Identifier	ExprTreeToString		934773	0					
ANR	934814	ArgumentList	tree		934773	1					
ANR	934815	Argument	tree		934773	0					
ANR	934816	Identifier	tree		934773	0					
ANR	934817	Statement	delete	367:1:8417:8422	934773	6	True				
ANR	934818	ExpressionStatement	tree	367:8:8424:8428	934773	7	True				
ANR	934819	Identifier	tree		934773	0					
ANR	934820	ExpressionStatement	init ( )	376:1:8669:8675	934773	8	True				
ANR	934821	CallExpression	init ( )		934773	0					
ANR	934822	Callee	init		934773	0					
ANR	934823	Identifier	init		934773	0					
ANR	934824	ArgumentList			934773	1					
ANR	934825	IfStatement	"if ( ! ( qmgr = ConnectQ ( host , connect_timeout , true , errstack ) ) )"		934773	9					
ANR	934826	Condition	"! ( qmgr = ConnectQ ( host , connect_timeout , true , errstack ) )"	377:5:8724:8781	934773	0	True				
ANR	934827	UnaryOperationExpression	"! ( qmgr = ConnectQ ( host , connect_timeout , true , errstack ) )"		934773	0					
ANR	934828	UnaryOperator	!		934773	0					
ANR	934829	AssignmentExpression	"qmgr = ConnectQ ( host , connect_timeout , true , errstack )"		934773	1		=			
ANR	934830	Identifier	qmgr		934773	0					
ANR	934831	CallExpression	"ConnectQ ( host , connect_timeout , true , errstack )"		934773	1					
ANR	934832	Callee	ConnectQ		934773	0					
ANR	934833	Identifier	ConnectQ		934773	0					
ANR	934834	ArgumentList	host		934773	1					
ANR	934835	Argument	host		934773	0					
ANR	934836	Identifier	host		934773	0					
ANR	934837	Argument	connect_timeout		934773	1					
ANR	934838	Identifier	connect_timeout		934773	0					
ANR	934839	Argument	true		934773	2					
ANR	934840	Identifier	true		934773	0					
ANR	934841	Argument	errstack		934773	3					
ANR	934842	Identifier	errstack		934773	0					
ANR	934843	ReturnStatement	return Q_SCHEDD_COMMUNICATION_ERROR ;	378:2:8787:8822	934773	1	True				
ANR	934844	Identifier	Q_SCHEDD_COMMUNICATION_ERROR		934773	0					
ANR	934845	ExpressionStatement	"result = getFilterAndProcessAds ( constraint , attrs , process_func , useFastPath )"	381:1:8858:8936	934773	10	True				
ANR	934846	AssignmentExpression	"result = getFilterAndProcessAds ( constraint , attrs , process_func , useFastPath )"		934773	0		=			
ANR	934847	Identifier	result		934773	0					
ANR	934848	CallExpression	"getFilterAndProcessAds ( constraint , attrs , process_func , useFastPath )"		934773	1					
ANR	934849	Callee	getFilterAndProcessAds		934773	0					
ANR	934850	Identifier	getFilterAndProcessAds		934773	0					
ANR	934851	ArgumentList	constraint		934773	1					
ANR	934852	Argument	constraint		934773	0					
ANR	934853	Identifier	constraint		934773	0					
ANR	934854	Argument	attrs		934773	1					
ANR	934855	Identifier	attrs		934773	0					
ANR	934856	Argument	process_func		934773	2					
ANR	934857	Identifier	process_func		934773	0					
ANR	934858	Argument	useFastPath		934773	3					
ANR	934859	Identifier	useFastPath		934773	0					
ANR	934860	ExpressionStatement	DisconnectQ ( qmgr )	383:1:8940:8958	934773	11	True				
ANR	934861	CallExpression	DisconnectQ ( qmgr )		934773	0					
ANR	934862	Callee	DisconnectQ		934773	0					
ANR	934863	Identifier	DisconnectQ		934773	0					
ANR	934864	ArgumentList	qmgr		934773	1					
ANR	934865	Argument	qmgr		934773	0					
ANR	934866	Identifier	qmgr		934773	0					
ANR	934867	ReturnStatement	return result ;	384:1:8961:8974	934773	12	True				
ANR	934868	Identifier	result		934773	0					
ANR	934869	ReturnType	int		934773	1					
ANR	934870	Identifier	CondorQ :: fetchQueueFromHostAndProcess		934773	2					
ANR	934871	ParameterList	"const char * host , StringList & attrs , process_function process_func , bool useFastPath , CondorError * errstack"		934773	3					
ANR	934872	Parameter	const char * host	352:40:8049:8064	934773	0	True				
ANR	934873	ParameterType	const char *		934773	0					
ANR	934874	Identifier	host		934773	1					
ANR	934875	Parameter	StringList & attrs	353:10:8077:8093	934773	1	True				
ANR	934876	ParameterType	StringList &		934773	0					
ANR	934877	Identifier	attrs		934773	1					
ANR	934878	Parameter	process_function process_func	354:10:8106:8134	934773	2	True				
ANR	934879	ParameterType	process_function		934773	0					
ANR	934880	Identifier	process_func		934773	1					
ANR	934881	Parameter	bool useFastPath	355:10:8147:8162	934773	3	True				
ANR	934882	ParameterType	bool		934773	0					
ANR	934883	Identifier	useFastPath		934773	1					
ANR	934884	Parameter	CondorError * errstack	356:10:8175:8195	934773	4	True				
ANR	934885	ParameterType	CondorError *		934773	0					
ANR	934886	Identifier	errstack		934773	1					
ANR	934887	CFGEntryNode	ENTRY		934773		True				
ANR	934888	CFGExitNode	EXIT		934773		True				
ANR	934889	Symbol	getFilterAndProcessAds		934773						
ANR	934890	Symbol	connect_timeout		934773						
ANR	934891	Symbol	query		934773						
ANR	934892	Symbol	tree		934773						
ANR	934893	Symbol	query . makeQuery		934773						
ANR	934894	Symbol	ExprTreeToString		934773						
ANR	934895	Symbol	Q_SCHEDD_COMMUNICATION_ERROR		934773						
ANR	934896	Symbol	Q_OK		934773						
ANR	934897	Symbol	attrs		934773						
ANR	934898	Symbol	result		934773						
ANR	934899	Symbol	qmgr		934773						
ANR	934900	Symbol	ConnectQ		934773						
ANR	934901	Symbol	errstack		934773						
ANR	934902	Symbol	host		934773						
ANR	934903	Symbol	true		934773						
ANR	934904	Symbol	constraint		934773						
ANR	934905	Symbol	process_func		934773						
ANR	934906	Symbol	useFastPath		934773						
ANR	934907	DeclStmt									
ANR	934908	Decl							int	int	result
ANR	934909	DeclStmt									
ANR	934910	Decl							JobQueueSnapshot	JobQueueSnapshot *	jqSnapshot
ANR	934911	DeclStmt									
ANR	934912	Decl							const char	const char *	constraint
ANR	934913	DeclStmt									
ANR	934914	Decl							ClassAd	ClassAd *	ad
ANR	934915	DeclStmt									
ANR	934916	Decl							QuillErrCode	QuillErrCode	rv
ANR	934917	DeclStmt									
ANR	934918	Decl							ExprTree	ExprTree *	tree
ANR	934919	Function	CondorQ :: rawDBQuery	454:0:10320:11809							
ANR	934920	FunctionDef	"CondorQ :: rawDBQuery (const char * dbconn , CondorQQueryType qType)"		934919	0					
ANR	934921	CompoundStatement		456:0:10389:11809	934919	0					
ANR	934922	ExpressionStatement	( void ) dbconn	458:1:10420:10433	934919	0	True				
ANR	934923	CastExpression	( void ) dbconn		934919	0					
ANR	934924	CastTarget	void		934919	0					
ANR	934925	Identifier	dbconn		934919	1					
ANR	934926	ExpressionStatement	( void ) qType	459:1:10436:10448	934919	1	True				
ANR	934927	CastExpression	( void ) qType		934919	0					
ANR	934928	CastTarget	void		934919	0					
ANR	934929	Identifier	qType		934919	1					
ANR	934930	ReturnType	void		934919	1					
ANR	934931	Identifier	CondorQ :: rawDBQuery		934919	2					
ANR	934932	ParameterList	"const char * dbconn , CondorQQueryType qType"		934919	3					
ANR	934933	Parameter	const char * dbconn	455:20:10345:10362	934919	0	True				
ANR	934934	ParameterType	const char *		934919	0					
ANR	934935	Identifier	dbconn		934919	1					
ANR	934936	Parameter	CondorQQueryType qType	455:40:10365:10386	934919	1	True				
ANR	934937	ParameterType	CondorQQueryType		934919	0					
ANR	934938	Identifier	qType		934919	1					
ANR	934939	CFGEntryNode	ENTRY		934919		True				
ANR	934940	CFGExitNode	EXIT		934919		True				
ANR	934941	Symbol	dbconn		934919						
ANR	934942	Symbol	qType		934919						
ANR	934943	Function	CondorQ :: getFilterAndProcessAds	532:0:11812:13022							
ANR	934944	FunctionDef	"CondorQ :: getFilterAndProcessAds (const char * constraint , StringList & attrs , process_function process_func , bool useAll)"		934943	0					
ANR	934945	CompoundStatement		537:0:11964:13022	934943	0					
ANR	934946	IdentifierDeclStatement	ClassAd * ad ;	538:1:11967:11978	934943	0	True				
ANR	934947	IdentifierDecl	* ad		934943	0					
ANR	934948	IdentifierDeclType	ClassAd *		934943	0					
ANR	934949	Identifier	ad		934943	1					
ANR	934950	IfStatement	if ( useAll )		934943	1					
ANR	934951	Condition	useAll	540:5:11986:11991	934943	0	True				
ANR	934952	Identifier	useAll		934943	0					
ANR	934953	CompoundStatement		6:2:75:124	934943	1					
ANR	934954	IdentifierDeclStatement	char * attrs_str = attrs . print_to_delimed_string ( ) ;	542:2:12040:12089	934943	0	True				
ANR	934955	IdentifierDecl	* attrs_str = attrs . print_to_delimed_string ( )		934943	0					
ANR	934956	IdentifierDeclType	char *		934943	0					
ANR	934957	Identifier	attrs_str		934943	1					
ANR	934958	AssignmentExpression	* attrs_str = attrs . print_to_delimed_string ( )		934943	2		=			
ANR	934959	Identifier	attrs_str		934943	0					
ANR	934960	CallExpression	attrs . print_to_delimed_string ( )		934943	1					
ANR	934961	Callee	attrs . print_to_delimed_string		934943	0					
ANR	934962	MemberAccess	attrs . print_to_delimed_string		934943	0					
ANR	934963	Identifier	attrs		934943	0					
ANR	934964	Identifier	print_to_delimed_string		934943	1					
ANR	934965	ArgumentList			934943	1					
ANR	934966	ExpressionStatement	"GetAllJobsByConstraint_Start ( constraint , attrs_str )"	543:2:12093:12144	934943	1	True				
ANR	934967	CallExpression	"GetAllJobsByConstraint_Start ( constraint , attrs_str )"		934943	0					
ANR	934968	Callee	GetAllJobsByConstraint_Start		934943	0					
ANR	934969	Identifier	GetAllJobsByConstraint_Start		934943	0					
ANR	934970	ArgumentList	constraint		934943	1					
ANR	934971	Argument	constraint		934943	0					
ANR	934972	Identifier	constraint		934943	0					
ANR	934973	Argument	attrs_str		934943	1					
ANR	934974	Identifier	attrs_str		934943	0					
ANR	934975	ExpressionStatement	free ( attrs_str )	544:2:12148:12163	934943	2	True				
ANR	934976	CallExpression	free ( attrs_str )		934943	0					
ANR	934977	Callee	free		934943	0					
ANR	934978	Identifier	free		934943	0					
ANR	934979	ArgumentList	attrs_str		934943	1					
ANR	934980	Argument	attrs_str		934943	0					
ANR	934981	Identifier	attrs_str		934943	0					
ANR	934982	WhileStatement	while ( true )		934943	3					
ANR	934983	Condition	true	546:9:12175:12178	934943	0	True				
ANR	934984	Identifier	true		934943	0					
ANR	934985	CompoundStatement		10:16:217:217	934943	1					
ANR	934986	Statement	ad	547:3:12187:12188	934943	0	True				
ANR	934987	Statement	=	547:6:12190:12190	934943	1	True				
ANR	934988	Statement	new	547:8:12192:12194	934943	2	True				
ANR	934989	ExpressionStatement	ClassAd	547:12:12196:12203	934943	3	True				
ANR	934990	Identifier	ClassAd		934943	0					
ANR	934991	IfStatement	if ( GetAllJobsByConstraint_Next ( * ad ) != 0 )		934943	4					
ANR	934992	Condition	GetAllJobsByConstraint_Next ( * ad ) != 0	548:7:12212:12250	934943	0	True				
ANR	934993	EqualityExpression	GetAllJobsByConstraint_Next ( * ad ) != 0		934943	0		!=			
ANR	934994	CallExpression	GetAllJobsByConstraint_Next ( * ad )		934943	0					
ANR	934995	Callee	GetAllJobsByConstraint_Next		934943	0					
ANR	934996	Identifier	GetAllJobsByConstraint_Next		934943	0					
ANR	934997	ArgumentList	* ad		934943	1					
ANR	934998	Argument	* ad		934943	0					
ANR	934999	UnaryOperationExpression	* ad		934943	0					
ANR	935000	UnaryOperator	*		934943	0					
ANR	935001	Identifier	ad		934943	1					
ANR	935002	PrimaryExpression	0		934943	1					
ANR	935003	CompoundStatement		12:49:289:289	934943	1					
ANR	935004	Statement	delete	549:4:12260:12265	934943	0	True				
ANR	935005	ExpressionStatement	ad	549:11:12267:12269	934943	1	True				
ANR	935006	Identifier	ad		934943	0					
ANR	935007	BreakStatement	break ;	550:4:12275:12280	934943	2	True				
ANR	935008	IfStatement	if ( ( * process_func ) ( ad ) )		934943	5					
ANR	935009	Condition	( * process_func ) ( ad )	552:8:12295:12317	934943	0	True				
ANR	935010	CallExpression	( * process_func ) ( ad )		934943	0					
ANR	935011	Callee	* process_func		934943	0					
ANR	935012	UnaryOperationExpression	* process_func		934943	0					
ANR	935013	UnaryOperator	*		934943	0					
ANR	935014	Identifier	process_func		934943	1					
ANR	935015	ArgumentList	ad		934943	1					
ANR	935016	Argument	ad		934943	0					
ANR	935017	Identifier	ad		934943	0					
ANR	935018	CompoundStatement		16:34:356:356	934943	1					
ANR	935019	Statement	delete	553:4:12327:12332	934943	0	True				
ANR	935020	ExpressionStatement	ad	553:10:12333:12337	934943	1	True				
ANR	935021	Identifier	ad		934943	0					
ANR	935022	ElseStatement	else		934943	0					
ANR	935023	CompoundStatement		20:8:391:391	934943	0					
ANR	935024	IfStatement	"if ( ( ad = GetNextJobByConstraint ( constraint , 1 ) ) != NULL )"		934943	0					
ANR	935025	Condition	"( ad = GetNextJobByConstraint ( constraint , 1 ) ) != NULL"	559:5:12398:12449	934943	0	True				
ANR	935026	EqualityExpression	"( ad = GetNextJobByConstraint ( constraint , 1 ) ) != NULL"		934943	0		!=			
ANR	935027	AssignmentExpression	"ad = GetNextJobByConstraint ( constraint , 1 )"		934943	0		=			
ANR	935028	Identifier	ad		934943	0					
ANR	935029	CallExpression	"GetNextJobByConstraint ( constraint , 1 )"		934943	1					
ANR	935030	Callee	GetNextJobByConstraint		934943	0					
ANR	935031	Identifier	GetNextJobByConstraint		934943	0					
ANR	935032	ArgumentList	constraint		934943	1					
ANR	935033	Argument	constraint		934943	0					
ANR	935034	Identifier	constraint		934943	0					
ANR	935035	Argument	1		934943	1					
ANR	935036	PrimaryExpression	1		934943	0					
ANR	935037	Identifier	NULL		934943	1					
ANR	935038	CompoundStatement		23:59:487:487	934943	1					
ANR	935039	IfStatement	if ( ( * process_func ) ( ad ) )		934943	0					
ANR	935040	Condition	( * process_func ) ( ad )	561:7:12511:12533	934943	0	True				
ANR	935041	CallExpression	( * process_func ) ( ad )		934943	0					
ANR	935042	Callee	* process_func		934943	0					
ANR	935043	UnaryOperationExpression	* process_func		934943	0					
ANR	935044	UnaryOperator	*		934943	0					
ANR	935045	Identifier	process_func		934943	1					
ANR	935046	ArgumentList	ad		934943	1					
ANR	935047	Argument	ad		934943	0					
ANR	935048	Identifier	ad		934943	0					
ANR	935049	CompoundStatement		25:33:572:572	934943	1					
ANR	935050	Statement	delete	562:3:12542:12547	934943	0	True				
ANR	935051	ExpressionStatement	ad	562:9:12548:12552	934943	1	True				
ANR	935052	Identifier	ad		934943	0					
ANR	935053	WhileStatement	"while ( ( ad = GetNextJobByConstraint ( constraint , 0 ) ) != NULL )"		934943	1					
ANR	935054	Condition	"( ad = GetNextJobByConstraint ( constraint , 0 ) ) != NULL"	565:8:12567:12618	934943	0	True				
ANR	935055	EqualityExpression	"( ad = GetNextJobByConstraint ( constraint , 0 ) ) != NULL"		934943	0		!=			
ANR	935056	AssignmentExpression	"ad = GetNextJobByConstraint ( constraint , 0 )"		934943	0		=			
ANR	935057	Identifier	ad		934943	0					
ANR	935058	CallExpression	"GetNextJobByConstraint ( constraint , 0 )"		934943	1					
ANR	935059	Callee	GetNextJobByConstraint		934943	0					
ANR	935060	Identifier	GetNextJobByConstraint		934943	0					
ANR	935061	ArgumentList	constraint		934943	1					
ANR	935062	Argument	constraint		934943	0					
ANR	935063	Identifier	constraint		934943	0					
ANR	935064	Argument	0		934943	1					
ANR	935065	PrimaryExpression	0		934943	0					
ANR	935066	Identifier	NULL		934943	1					
ANR	935067	CompoundStatement		29:62:656:656	934943	1					
ANR	935068	IfStatement	if ( ( * process_func ) ( ad ) )		934943	0					
ANR	935069	Condition	( * process_func ) ( ad )	567:8:12682:12704	934943	0	True				
ANR	935070	CallExpression	( * process_func ) ( ad )		934943	0					
ANR	935071	Callee	* process_func		934943	0					
ANR	935072	UnaryOperationExpression	* process_func		934943	0					
ANR	935073	UnaryOperator	*		934943	0					
ANR	935074	Identifier	process_func		934943	1					
ANR	935075	ArgumentList	ad		934943	1					
ANR	935076	Argument	ad		934943	0					
ANR	935077	Identifier	ad		934943	0					
ANR	935078	CompoundStatement		31:34:743:743	934943	1					
ANR	935079	Statement	delete	568:4:12714:12719	934943	0	True				
ANR	935080	ExpressionStatement	ad	568:10:12720:12724	934943	1	True				
ANR	935081	Identifier	ad		934943	0					
ANR	935082	IfStatement	if ( errno == ETIMEDOUT )		934943	2					
ANR	935083	Condition	errno == ETIMEDOUT	578:6:12942:12959	934943	0	True				
ANR	935084	EqualityExpression	errno == ETIMEDOUT		934943	0		==			
ANR	935085	Identifier	errno		934943	0					
ANR	935086	Identifier	ETIMEDOUT		934943	1					
ANR	935087	CompoundStatement		42:27:998:998	934943	1					
ANR	935088	ReturnStatement	return Q_SCHEDD_COMMUNICATION_ERROR ;	579:2:12967:13002	934943	0	True				
ANR	935089	Identifier	Q_SCHEDD_COMMUNICATION_ERROR		934943	0					
ANR	935090	ReturnStatement	return Q_OK ;	582:1:13009:13020	934943	3	True				
ANR	935091	Identifier	Q_OK		934943	0					
ANR	935092	ReturnType	int		934943	1					
ANR	935093	Identifier	CondorQ :: getFilterAndProcessAds		934943	2					
ANR	935094	ParameterList	"const char * constraint , StringList & attrs , process_function process_func , bool useAll"		934943	3					
ANR	935095	Parameter	const char * constraint	533:33:11849:11870	934943	0	True				
ANR	935096	ParameterType	const char *		934943	0					
ANR	935097	Identifier	constraint		934943	1					
ANR	935098	Parameter	StringList & attrs	534:9:11882:11898	934943	1	True				
ANR	935099	ParameterType	StringList &		934943	0					
ANR	935100	Identifier	attrs		934943	1					
ANR	935101	Parameter	process_function process_func	535:9:11910:11938	934943	2	True				
ANR	935102	ParameterType	process_function		934943	0					
ANR	935103	Identifier	process_func		934943	1					
ANR	935104	Parameter	bool useAll	536:9:11950:11960	934943	3	True				
ANR	935105	ParameterType	bool		934943	0					
ANR	935106	Identifier	useAll		934943	1					
ANR	935107	CFGEntryNode	ENTRY		934943		True				
ANR	935108	CFGExitNode	EXIT		934943		True				
ANR	935109	Symbol	attrs . print_to_delimed_string		934943						
ANR	935110	Symbol	errno		934943						
ANR	935111	Symbol	ad		934943						
ANR	935112	Symbol	NULL		934943						
ANR	935113	Symbol	* process_func		934943						
ANR	935114	Symbol	attrs_str		934943						
ANR	935115	Symbol	Q_SCHEDD_COMMUNICATION_ERROR		934943						
ANR	935116	Symbol	* ad		934943						
ANR	935117	Symbol	Q_OK		934943						
ANR	935118	Symbol	attrs		934943						
ANR	935119	Symbol	useAll		934943						
ANR	935120	Symbol	ETIMEDOUT		934943						
ANR	935121	Symbol	GetAllJobsByConstraint_Next		934943						
ANR	935122	Symbol	true		934943						
ANR	935123	Symbol	constraint		934943						
ANR	935124	Symbol	GetNextJobByConstraint		934943						
ANR	935125	Symbol	process_func		934943						
ANR	935126	Function	CondorQ :: getAndFilterAds	586:0:13026:13784							
ANR	935127	FunctionDef	"CondorQ :: getAndFilterAds (const char * constraint , StringList & attrs , ClassAdList & list , bool useAllJobs)"		935126	0					
ANR	935128	CompoundStatement		591:0:13159:13784	935126	0					
ANR	935129	IfStatement	if ( useAllJobs )		935126	0					
ANR	935130	Condition	useAllJobs	592:5:13166:13175	935126	0	True				
ANR	935131	Identifier	useAllJobs		935126	0					
ANR	935132	CompoundStatement		3:1:21:70	935126	1					
ANR	935133	IdentifierDeclStatement	char * attrs_str = attrs . print_to_delimed_string ( ) ;	593:1:13181:13230	935126	0	True				
ANR	935134	IdentifierDecl	* attrs_str = attrs . print_to_delimed_string ( )		935126	0					
ANR	935135	IdentifierDeclType	char *		935126	0					
ANR	935136	Identifier	attrs_str		935126	1					
ANR	935137	AssignmentExpression	* attrs_str = attrs . print_to_delimed_string ( )		935126	2		=			
ANR	935138	Identifier	attrs_str		935126	0					
ANR	935139	CallExpression	attrs . print_to_delimed_string ( )		935126	1					
ANR	935140	Callee	attrs . print_to_delimed_string		935126	0					
ANR	935141	MemberAccess	attrs . print_to_delimed_string		935126	0					
ANR	935142	Identifier	attrs		935126	0					
ANR	935143	Identifier	print_to_delimed_string		935126	1					
ANR	935144	ArgumentList			935126	1					
ANR	935145	ExpressionStatement	"GetAllJobsByConstraint ( constraint , attrs_str , list )"	594:1:13233:13284	935126	1	True				
ANR	935146	CallExpression	"GetAllJobsByConstraint ( constraint , attrs_str , list )"		935126	0					
ANR	935147	Callee	GetAllJobsByConstraint		935126	0					
ANR	935148	Identifier	GetAllJobsByConstraint		935126	0					
ANR	935149	ArgumentList	constraint		935126	1					
ANR	935150	Argument	constraint		935126	0					
ANR	935151	Identifier	constraint		935126	0					
ANR	935152	Argument	attrs_str		935126	1					
ANR	935153	Identifier	attrs_str		935126	0					
ANR	935154	Argument	list		935126	2					
ANR	935155	Identifier	list		935126	0					
ANR	935156	ExpressionStatement	free ( attrs_str )	595:1:13287:13302	935126	2	True				
ANR	935157	CallExpression	free ( attrs_str )		935126	0					
ANR	935158	Callee	free		935126	0					
ANR	935159	Identifier	free		935126	0					
ANR	935160	ArgumentList	attrs_str		935126	1					
ANR	935161	Argument	attrs_str		935126	0					
ANR	935162	Identifier	attrs_str		935126	0					
ANR	935163	ElseStatement	else		935126	0					
ANR	935164	CompoundStatement		8:1:156:168	935126	0					
ANR	935165	IdentifierDeclStatement	ClassAd * ad ;	598:1:13316:13328	935126	0	True				
ANR	935166	IdentifierDecl	* ad		935126	0					
ANR	935167	IdentifierDeclType	ClassAd *		935126	0					
ANR	935168	Identifier	ad		935126	1					
ANR	935169	IfStatement	"if ( ( ad = GetNextJobByConstraint ( constraint , 1 ) ) != NULL )"		935126	1					
ANR	935170	Condition	"( ad = GetNextJobByConstraint ( constraint , 1 ) ) != NULL"	599:5:13335:13386	935126	0	True				
ANR	935171	EqualityExpression	"( ad = GetNextJobByConstraint ( constraint , 1 ) ) != NULL"		935126	0		!=			
ANR	935172	AssignmentExpression	"ad = GetNextJobByConstraint ( constraint , 1 )"		935126	0		=			
ANR	935173	Identifier	ad		935126	0					
ANR	935174	CallExpression	"GetNextJobByConstraint ( constraint , 1 )"		935126	1					
ANR	935175	Callee	GetNextJobByConstraint		935126	0					
ANR	935176	Identifier	GetNextJobByConstraint		935126	0					
ANR	935177	ArgumentList	constraint		935126	1					
ANR	935178	Argument	constraint		935126	0					
ANR	935179	Identifier	constraint		935126	0					
ANR	935180	Argument	1		935126	1					
ANR	935181	PrimaryExpression	1		935126	0					
ANR	935182	Identifier	NULL		935126	1					
ANR	935183	CompoundStatement		9:59:229:229	935126	1					
ANR	935184	ExpressionStatement	list . Insert ( ad )	600:2:13393:13408	935126	0	True				
ANR	935185	CallExpression	list . Insert ( ad )		935126	0					
ANR	935186	Callee	list . Insert		935126	0					
ANR	935187	MemberAccess	list . Insert		935126	0					
ANR	935188	Identifier	list		935126	0					
ANR	935189	Identifier	Insert		935126	1					
ANR	935190	ArgumentList	ad		935126	1					
ANR	935191	Argument	ad		935126	0					
ANR	935192	Identifier	ad		935126	0					
ANR	935193	WhileStatement	"while ( ( ad = GetNextJobByConstraint ( constraint , 0 ) ) != NULL )"		935126	1					
ANR	935194	Condition	"( ad = GetNextJobByConstraint ( constraint , 0 ) ) != NULL"	601:8:13418:13469	935126	0	True				
ANR	935195	EqualityExpression	"( ad = GetNextJobByConstraint ( constraint , 0 ) ) != NULL"		935126	0		!=			
ANR	935196	AssignmentExpression	"ad = GetNextJobByConstraint ( constraint , 0 )"		935126	0		=			
ANR	935197	Identifier	ad		935126	0					
ANR	935198	CallExpression	"GetNextJobByConstraint ( constraint , 0 )"		935126	1					
ANR	935199	Callee	GetNextJobByConstraint		935126	0					
ANR	935200	Identifier	GetNextJobByConstraint		935126	0					
ANR	935201	ArgumentList	constraint		935126	1					
ANR	935202	Argument	constraint		935126	0					
ANR	935203	Identifier	constraint		935126	0					
ANR	935204	Argument	0		935126	1					
ANR	935205	PrimaryExpression	0		935126	0					
ANR	935206	Identifier	NULL		935126	1					
ANR	935207	CompoundStatement		11:62:312:312	935126	1					
ANR	935208	ExpressionStatement	list . Insert ( ad )	602:3:13477:13492	935126	0	True				
ANR	935209	CallExpression	list . Insert ( ad )		935126	0					
ANR	935210	Callee	list . Insert		935126	0					
ANR	935211	MemberAccess	list . Insert		935126	0					
ANR	935212	Identifier	list		935126	0					
ANR	935213	Identifier	Insert		935126	1					
ANR	935214	ArgumentList	ad		935126	1					
ANR	935215	Argument	ad		935126	0					
ANR	935216	Identifier	ad		935126	0					
ANR	935217	IfStatement	if ( errno == ETIMEDOUT )		935126	1					
ANR	935218	Condition	errno == ETIMEDOUT	610:6:13704:13721	935126	0	True				
ANR	935219	EqualityExpression	errno == ETIMEDOUT		935126	0		==			
ANR	935220	Identifier	errno		935126	0					
ANR	935221	Identifier	ETIMEDOUT		935126	1					
ANR	935222	CompoundStatement		20:27:565:565	935126	1					
ANR	935223	ReturnStatement	return Q_SCHEDD_COMMUNICATION_ERROR ;	611:2:13729:13764	935126	0	True				
ANR	935224	Identifier	Q_SCHEDD_COMMUNICATION_ERROR		935126	0					
ANR	935225	ReturnStatement	return Q_OK ;	614:1:13771:13782	935126	2	True				
ANR	935226	Identifier	Q_OK		935126	0					
ANR	935227	ReturnType	int		935126	1					
ANR	935228	Identifier	CondorQ :: getAndFilterAds		935126	2					
ANR	935229	ParameterList	"const char * constraint , StringList & attrs , ClassAdList & list , bool useAllJobs"		935126	3					
ANR	935230	Parameter	const char * constraint	587:26:13056:13077	935126	0	True				
ANR	935231	ParameterType	const char *		935126	0					
ANR	935232	Identifier	constraint		935126	1					
ANR	935233	Parameter	StringList & attrs	588:8:13088:13104	935126	1	True				
ANR	935234	ParameterType	StringList &		935126	0					
ANR	935235	Identifier	attrs		935126	1					
ANR	935236	Parameter	ClassAdList & list	589:8:13115:13131	935126	2	True				
ANR	935237	ParameterType	ClassAdList &		935126	0					
ANR	935238	Identifier	list		935126	1					
ANR	935239	Parameter	bool useAllJobs	590:8:13142:13156	935126	3	True				
ANR	935240	ParameterType	bool		935126	0					
ANR	935241	Identifier	useAllJobs		935126	1					
ANR	935242	CFGEntryNode	ENTRY		935126		True				
ANR	935243	CFGExitNode	EXIT		935126		True				
ANR	935244	Symbol	attrs . print_to_delimed_string		935126						
ANR	935245	Symbol	errno		935126						
ANR	935246	Symbol	ad		935126						
ANR	935247	Symbol	NULL		935126						
ANR	935248	Symbol	attrs_str		935126						
ANR	935249	Symbol	Q_SCHEDD_COMMUNICATION_ERROR		935126						
ANR	935250	Symbol	useAllJobs		935126						
ANR	935251	Symbol	list		935126						
ANR	935252	Symbol	Q_OK		935126						
ANR	935253	Symbol	attrs		935126						
ANR	935254	Symbol	ETIMEDOUT		935126						
ANR	935255	Symbol	constraint		935126						
ANR	935256	Symbol	GetNextJobByConstraint		935126						
ANR	935257	DeclStmt									
ANR	935258	Decl							int	int	cluster1
ANR	935259	Decl							int	int	cluster2
ANR	935260	Decl							int	int	proc1
ANR	935261	Decl							int	int	proc2
ANR	935262	Function	encode_status	636:0:14291:14602							
ANR	935263	FunctionDef	encode_status (int status)		935262	0					
ANR	935264	CompoundStatement		638:0:14324:14602	935262	0					
ANR	935265	SwitchStatement	switch ( status )		935262	0					
ANR	935266	Condition	status	639:9:14335:14340	935262	0	True				
ANR	935267	Identifier	status		935262	0					
ANR	935268	CompoundStatement		2:18:19:19	935262	1					
ANR	935269	Label	case IDLE :	640:3:14349:14358	935262	0	True				
ANR	935270	Identifier	IDLE		935262	0					
ANR	935271	ReturnStatement	return 'I' ;	641:2:14362:14372	935262	1	True				
ANR	935272	PrimaryExpression	'I'		935262	0					
ANR	935273	Label	case RUNNING :	642:3:14377:14389	935262	2	True				
ANR	935274	Identifier	RUNNING		935262	0					
ANR	935275	ReturnStatement	return 'R' ;	643:2:14393:14403	935262	3	True				
ANR	935276	PrimaryExpression	'R'		935262	0					
ANR	935277	Label	case COMPLETED :	644:3:14408:14422	935262	4	True				
ANR	935278	Identifier	COMPLETED		935262	0					
ANR	935279	ReturnStatement	return 'C' ;	645:2:14426:14436	935262	5	True				
ANR	935280	PrimaryExpression	'C'		935262	0					
ANR	935281	Label	case REMOVED :	646:3:14441:14453	935262	6	True				
ANR	935282	Identifier	REMOVED		935262	0					
ANR	935283	ReturnStatement	return 'X' ;	647:2:14457:14467	935262	7	True				
ANR	935284	PrimaryExpression	'X'		935262	0					
ANR	935285	Label	case HELD :	648:3:14472:14481	935262	8	True				
ANR	935286	Identifier	HELD		935262	0					
ANR	935287	ReturnStatement	return 'H' ;	649:2:14485:14495	935262	9	True				
ANR	935288	PrimaryExpression	'H'		935262	0					
ANR	935289	Label	case TRANSFERRING_OUTPUT :	650:3:14500:14524	935262	10	True				
ANR	935290	Identifier	TRANSFERRING_OUTPUT		935262	0					
ANR	935291	ReturnStatement	return '>' ;	651:2:14528:14538	935262	11	True				
ANR	935292	PrimaryExpression	'>'		935262	0					
ANR	935293	Label	case SUSPENDED :	652:3:14543:14557	935262	12	True				
ANR	935294	Identifier	SUSPENDED		935262	0					
ANR	935295	ReturnStatement	return 'S' ;	653:2:14561:14571	935262	13	True				
ANR	935296	PrimaryExpression	'S'		935262	0					
ANR	935297	Label	default :	654:3:14576:14583	935262	14	True				
ANR	935298	Identifier	default		935262	0					
ANR	935299	ReturnStatement	return ' ' ;	655:2:14587:14597	935262	15	True				
ANR	935300	PrimaryExpression	' '		935262	0					
ANR	935301	ReturnType	char		935262	1					
ANR	935302	Identifier	encode_status		935262	2					
ANR	935303	ParameterList	int status		935262	3					
ANR	935304	Parameter	int status	637:15:14311:14320	935262	0	True				
ANR	935305	ParameterType	int		935262	0					
ANR	935306	Identifier	status		935262	1					
ANR	935307	CFGEntryNode	ENTRY		935262		True				
ANR	935308	CFGExitNode	EXIT		935262		True				
ANR	935309	Symbol	status		935262						
ANR	935310	Function	short_print	665:0:14844:15201							
ANR	935311	FunctionDef	"short_print (int cluster , int proc , const char * owner , int date , int time , int status , int prio , int image_size , const char * cmd)"		935310	0					
ANR	935312	CompoundStatement		676:3:14990:15201	935310	0					
ANR	935313	ExpressionStatement	"printf ( ""%4d.%-3d %-14s %-11s %-12s %-2c %-3d %-4.1f %-18.18s\\n"" , cluster , proc , owner , format_date ( ( time_t ) date ) , format_time ( time ) , encode_status ( status ) , prio , image_size / 1024.0 , cmd )"	677:1:14993:15199	935310	0	True				
ANR	935314	CallExpression	"printf ( ""%4d.%-3d %-14s %-11s %-12s %-2c %-3d %-4.1f %-18.18s\\n"" , cluster , proc , owner , format_date ( ( time_t ) date ) , format_time ( time ) , encode_status ( status ) , prio , image_size / 1024.0 , cmd )"		935310	0					
ANR	935315	Callee	printf		935310	0					
ANR	935316	Identifier	printf		935310	0					
ANR	935317	ArgumentList	"""%4d.%-3d %-14s %-11s %-12s %-2c %-3d %-4.1f %-18.18s\\n"""		935310	1					
ANR	935318	Argument	"""%4d.%-3d %-14s %-11s %-12s %-2c %-3d %-4.1f %-18.18s\\n"""		935310	0					
ANR	935319	PrimaryExpression	"""%4d.%-3d %-14s %-11s %-12s %-2c %-3d %-4.1f %-18.18s\\n"""		935310	0					
ANR	935320	Argument	cluster		935310	1					
ANR	935321	Identifier	cluster		935310	0					
ANR	935322	Argument	proc		935310	2					
ANR	935323	Identifier	proc		935310	0					
ANR	935324	Argument	owner		935310	3					
ANR	935325	Identifier	owner		935310	0					
ANR	935326	Argument	format_date ( ( time_t ) date )		935310	4					
ANR	935327	CallExpression	format_date ( ( time_t ) date )		935310	0					
ANR	935328	Callee	format_date		935310	0					
ANR	935329	Identifier	format_date		935310	0					
ANR	935330	ArgumentList	( time_t ) date		935310	1					
ANR	935331	Argument	( time_t ) date		935310	0					
ANR	935332	CastExpression	( time_t ) date		935310	0					
ANR	935333	CastTarget	time_t		935310	0					
ANR	935334	Identifier	date		935310	1					
ANR	935335	Argument	format_time ( time )		935310	5					
ANR	935336	CallExpression	format_time ( time )		935310	0					
ANR	935337	Callee	format_time		935310	0					
ANR	935338	Identifier	format_time		935310	0					
ANR	935339	ArgumentList	time		935310	1					
ANR	935340	Argument	time		935310	0					
ANR	935341	Identifier	time		935310	0					
ANR	935342	Argument	encode_status ( status )		935310	6					
ANR	935343	CallExpression	encode_status ( status )		935310	0					
ANR	935344	Callee	encode_status		935310	0					
ANR	935345	Identifier	encode_status		935310	0					
ANR	935346	ArgumentList	status		935310	1					
ANR	935347	Argument	status		935310	0					
ANR	935348	Identifier	status		935310	0					
ANR	935349	Argument	prio		935310	7					
ANR	935350	Identifier	prio		935310	0					
ANR	935351	Argument	image_size / 1024.0		935310	8					
ANR	935352	MultiplicativeExpression	image_size / 1024.0		935310	0		/			
ANR	935353	Identifier	image_size		935310	0					
ANR	935354	PrimaryExpression	1024.0		935310	1					
ANR	935355	Argument	cmd		935310	9					
ANR	935356	Identifier	cmd		935310	0					
ANR	935357	ReturnType	void		935310	1					
ANR	935358	Identifier	short_print		935310	2					
ANR	935359	ParameterList	"int cluster , int proc , const char * owner , int date , int time , int status , int prio , int image_size , const char * cmd"		935310	3					
ANR	935360	Parameter	int cluster	667:1:14863:14873	935310	0	True				
ANR	935361	ParameterType	int		935310	0					
ANR	935362	Identifier	cluster		935310	1					
ANR	935363	Parameter	int proc	668:1:14877:14884	935310	1	True				
ANR	935364	ParameterType	int		935310	0					
ANR	935365	Identifier	proc		935310	1					
ANR	935366	Parameter	const char * owner	669:1:14888:14904	935310	2	True				
ANR	935367	ParameterType	const char *		935310	0					
ANR	935368	Identifier	owner		935310	1					
ANR	935369	Parameter	int date	670:1:14908:14915	935310	3	True				
ANR	935370	ParameterType	int		935310	0					
ANR	935371	Identifier	date		935310	1					
ANR	935372	Parameter	int time	671:1:14919:14926	935310	4	True				
ANR	935373	ParameterType	int		935310	0					
ANR	935374	Identifier	time		935310	1					
ANR	935375	Parameter	int status	672:1:14930:14939	935310	5	True				
ANR	935376	ParameterType	int		935310	0					
ANR	935377	Identifier	status		935310	1					
ANR	935378	Parameter	int prio	673:1:14943:14950	935310	6	True				
ANR	935379	ParameterType	int		935310	0					
ANR	935380	Identifier	prio		935310	1					
ANR	935381	Parameter	int image_size	674:1:14954:14967	935310	7	True				
ANR	935382	ParameterType	int		935310	0					
ANR	935383	Identifier	image_size		935310	1					
ANR	935384	Parameter	const char * cmd	675:1:14971:14985	935310	8	True				
ANR	935385	ParameterType	const char *		935310	0					
ANR	935386	Identifier	cmd		935310	1					
ANR	935387	CFGEntryNode	ENTRY		935310		True				
ANR	935388	CFGExitNode	EXIT		935310		True				
ANR	935389	Symbol	owner		935310						
ANR	935390	Symbol	date		935310						
ANR	935391	Symbol	cluster		935310						
ANR	935392	Symbol	proc		935310						
ANR	935393	Symbol	encode_status		935310						
ANR	935394	Symbol	image_size		935310						
ANR	935395	Symbol	format_time		935310						
ANR	935396	Symbol	time		935310						
ANR	935397	Symbol	cmd		935310						
ANR	935398	Symbol	prio		935310						
ANR	935399	Symbol	status		935310						
ANR	935400	Symbol	format_date		935310						
ANR	935401	Function	getDBNextJobByConstraint	692:0:15232:15614							
ANR	935402	FunctionDef	"getDBNextJobByConstraint (const char * constraint , JobQueueSnapshot * jqSnapshot)"		935401	0					
ANR	935403	CompoundStatement		693:0:15320:15614	935401	0					
ANR	935404	IdentifierDeclStatement	ClassAd * ad ;	694:1:15323:15334	935401	0	True				
ANR	935405	IdentifierDecl	* ad		935401	0					
ANR	935406	IdentifierDeclType	ClassAd *		935401	0					
ANR	935407	Identifier	ad		935401	1					
ANR	935408	WhileStatement	while ( jqSnapshot -> iterateAllClassAds ( ad ) != DONE_JOBS_CURSOR )		935401	1					
ANR	935409	Condition	jqSnapshot -> iterateAllClassAds ( ad ) != DONE_JOBS_CURSOR	696:7:15345:15398	935401	0	True				
ANR	935410	EqualityExpression	jqSnapshot -> iterateAllClassAds ( ad ) != DONE_JOBS_CURSOR		935401	0		!=			
ANR	935411	CallExpression	jqSnapshot -> iterateAllClassAds ( ad )		935401	0					
ANR	935412	Callee	jqSnapshot -> iterateAllClassAds		935401	0					
ANR	935413	PtrMemberAccess	jqSnapshot -> iterateAllClassAds		935401	0					
ANR	935414	Identifier	jqSnapshot		935401	0					
ANR	935415	Identifier	iterateAllClassAds		935401	1					
ANR	935416	ArgumentList	ad		935401	1					
ANR	935417	Argument	ad		935401	0					
ANR	935418	Identifier	ad		935401	0					
ANR	935419	Identifier	DONE_JOBS_CURSOR		935401	1					
ANR	935420	CompoundStatement		4:63:80:80	935401	1					
ANR	935421	IfStatement	"if ( ( ! constraint || ! constraint [ 0 ] || EvalBool ( ad , constraint ) ) )"		935401	0					
ANR	935422	Condition	"! constraint || ! constraint [ 0 ] || EvalBool ( ad , constraint )"	697:6:15409:15467	935401	0	True				
ANR	935423	OrExpression	"! constraint || ! constraint [ 0 ] || EvalBool ( ad , constraint )"		935401	0		||			
ANR	935424	UnaryOperationExpression	! constraint		935401	0					
ANR	935425	UnaryOperator	!		935401	0					
ANR	935426	Identifier	constraint		935401	1					
ANR	935427	OrExpression	"! constraint [ 0 ] || EvalBool ( ad , constraint )"		935401	1		||			
ANR	935428	UnaryOperationExpression	! constraint [ 0 ]		935401	0					
ANR	935429	UnaryOperator	!		935401	0					
ANR	935430	ArrayIndexing	constraint [ 0 ]		935401	1					
ANR	935431	Identifier	constraint		935401	0					
ANR	935432	PrimaryExpression	0		935401	1					
ANR	935433	CallExpression	"EvalBool ( ad , constraint )"		935401	1					
ANR	935434	Callee	EvalBool		935401	0					
ANR	935435	Identifier	EvalBool		935401	0					
ANR	935436	ArgumentList	ad		935401	1					
ANR	935437	Argument	ad		935401	0					
ANR	935438	Identifier	ad		935401	0					
ANR	935439	Argument	constraint		935401	1					
ANR	935440	Identifier	constraint		935401	0					
ANR	935441	CompoundStatement		5:67:149:149	935401	1					
ANR	935442	ReturnStatement	return ad ;	698:3:15475:15484	935401	0	True				
ANR	935443	Identifier	ad		935401	0					
ANR	935444	IfStatement	if ( ad != ( ClassAd * ) 0 )		935401	1					
ANR	935445	Condition	ad != ( ClassAd * ) 0	701:6:15507:15525	935401	0	True				
ANR	935446	EqualityExpression	ad != ( ClassAd * ) 0		935401	0		!=			
ANR	935447	Identifier	ad		935401	0					
ANR	935448	CastExpression	( ClassAd * ) 0		935401	1					
ANR	935449	CastTarget	ClassAd *		935401	0					
ANR	935450	PrimaryExpression	0		935401	1					
ANR	935451	CompoundStatement		9:27:207:207	935401	1					
ANR	935452	ExpressionStatement	ad -> Clear ( )	702:3:15533:15544	935401	0	True				
ANR	935453	CallExpression	ad -> Clear ( )		935401	0					
ANR	935454	Callee	ad -> Clear		935401	0					
ANR	935455	PtrMemberAccess	ad -> Clear		935401	0					
ANR	935456	Identifier	ad		935401	0					
ANR	935457	Identifier	Clear		935401	1					
ANR	935458	ArgumentList			935401	1					
ANR	935459	Statement	delete	703:3:15549:15554	935401	1	True				
ANR	935460	ExpressionStatement	ad	703:10:15556:15558	935401	2	True				
ANR	935461	Identifier	ad		935401	0					
ANR	935462	ExpressionStatement	ad = ( ClassAd * ) 0	704:3:15563:15581	935401	3	True				
ANR	935463	AssignmentExpression	ad = ( ClassAd * ) 0		935401	0		=			
ANR	935464	Identifier	ad		935401	0					
ANR	935465	CastExpression	( ClassAd * ) 0		935401	1					
ANR	935466	CastTarget	ClassAd *		935401	0					
ANR	935467	PrimaryExpression	0		935401	1					
ANR	935468	ReturnStatement	return ( ClassAd * ) 0 ;	708:1:15592:15612	935401	2	True				
ANR	935469	CastExpression	( ClassAd * ) 0		935401	0					
ANR	935470	CastTarget	ClassAd *		935401	0					
ANR	935471	PrimaryExpression	0		935401	1					
ANR	935472	ReturnType	ClassAd *		935401	1					
ANR	935473	Identifier	getDBNextJobByConstraint		935401	2					
ANR	935474	ParameterList	"const char * constraint , JobQueueSnapshot * jqSnapshot"		935401	3					
ANR	935475	Parameter	const char * constraint	692:34:15266:15287	935401	0	True				
ANR	935476	ParameterType	const char *		935401	0					
ANR	935477	Identifier	constraint		935401	1					
ANR	935478	Parameter	JobQueueSnapshot * jqSnapshot	692:58:15290:15317	935401	1	True				
ANR	935479	ParameterType	JobQueueSnapshot *		935401	0					
ANR	935480	Identifier	jqSnapshot		935401	1					
ANR	935481	CFGEntryNode	ENTRY		935401		True				
ANR	935482	CFGExitNode	EXIT		935401		True				
ANR	935483	Symbol	* constraint		935401						
ANR	935484	Symbol	ad		935401						
ANR	935485	Symbol	jqSnapshot -> iterateAllClassAds		935401						
ANR	935486	Symbol	jqSnapshot		935401						
ANR	935487	Symbol	DONE_JOBS_CURSOR		935401						
ANR	935488	Symbol	constraint		935401						
ANR	935489	Symbol	EvalBool		935401						
ANR	935490	Symbol	* jqSnapshot		935401						
