command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4850019	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_process_control.WINDOWS.cpp								
ANR	4850020	DeclStmt									
ANR	4850021	Decl							char	char *	soft_kill_binary
ANR	4850022	Function	set_windows_soft_kill_binary	30:0:1024:1207							
ANR	4850023	FunctionDef	set_windows_soft_kill_binary (char * binary)		4850022	0					
ANR	4850024	CompoundStatement		32:0:1072:1207	4850022	0					
ANR	4850025	IfStatement	if ( soft_kill_binary != NULL )		4850022	0					
ANR	4850026	Condition	soft_kill_binary != NULL	33:5:1079:1102	4850022	0	True				
ANR	4850027	EqualityExpression	soft_kill_binary != NULL		4850022	0		!=			
ANR	4850028	Identifier	soft_kill_binary		4850022	0					
ANR	4850029	Identifier	NULL		4850022	1					
ANR	4850030	CompoundStatement		2:31:32:32	4850022	1					
ANR	4850031	ExpressionStatement	free ( soft_kill_binary )	34:2:1109:1131	4850022	0	True				
ANR	4850032	CallExpression	free ( soft_kill_binary )		4850022	0					
ANR	4850033	Callee	free		4850022	0					
ANR	4850034	Identifier	free		4850022	0					
ANR	4850035	ArgumentList	soft_kill_binary		4850022	1					
ANR	4850036	Argument	soft_kill_binary		4850022	0					
ANR	4850037	Identifier	soft_kill_binary		4850022	0					
ANR	4850038	ExpressionStatement	soft_kill_binary = strdup ( binary )	36:1:1137:1170	4850022	1	True				
ANR	4850039	AssignmentExpression	soft_kill_binary = strdup ( binary )		4850022	0		=			
ANR	4850040	Identifier	soft_kill_binary		4850022	0					
ANR	4850041	CallExpression	strdup ( binary )		4850022	1					
ANR	4850042	Callee	strdup		4850022	0					
ANR	4850043	Identifier	strdup		4850022	0					
ANR	4850044	ArgumentList	binary		4850022	1					
ANR	4850045	Argument	binary		4850022	0					
ANR	4850046	Identifier	binary		4850022	0					
ANR	4850047	ExpressionStatement	ASSERT ( soft_kill_binary != NULL )	37:1:1173:1205	4850022	2	True				
ANR	4850048	CallExpression	ASSERT ( soft_kill_binary != NULL )		4850022	0					
ANR	4850049	Callee	ASSERT		4850022	0					
ANR	4850050	Identifier	ASSERT		4850022	0					
ANR	4850051	ArgumentList	soft_kill_binary != NULL		4850022	1					
ANR	4850052	Argument	soft_kill_binary != NULL		4850022	0					
ANR	4850053	EqualityExpression	soft_kill_binary != NULL		4850022	0		!=			
ANR	4850054	Identifier	soft_kill_binary		4850022	0					
ANR	4850055	Identifier	NULL		4850022	1					
ANR	4850056	ReturnType	void		4850022	1					
ANR	4850057	Identifier	set_windows_soft_kill_binary		4850022	2					
ANR	4850058	ParameterList	char * binary		4850022	3					
ANR	4850059	Parameter	char * binary	31:29:1058:1069	4850022	0	True				
ANR	4850060	ParameterType	char *		4850022	0					
ANR	4850061	Identifier	binary		4850022	1					
ANR	4850062	CFGEntryNode	ENTRY		4850022		True				
ANR	4850063	CFGExitNode	EXIT		4850022		True				
ANR	4850064	Symbol	soft_kill_binary		4850022						
ANR	4850065	Symbol	NULL		4850022						
ANR	4850066	Symbol	binary		4850022						
ANR	4850067	Symbol	strdup		4850022						
ANR	4850068	Function	windows_soft_kill	40:0:1210:3894							
ANR	4850069	FunctionDef	windows_soft_kill (DWORD pid)		4850068	0					
ANR	4850070	CompoundStatement		42:0:1244:3894	4850068	0					
ANR	4850071	IfStatement	if ( soft_kill_binary == NULL )		4850068	0					
ANR	4850072	Condition	soft_kill_binary == NULL	52:5:1602:1625	4850068	0	True				
ANR	4850073	EqualityExpression	soft_kill_binary == NULL		4850068	0		==			
ANR	4850074	Identifier	soft_kill_binary		4850068	0					
ANR	4850075	Identifier	NULL		4850068	1					
ANR	4850076	CompoundStatement		11:31:383:383	4850068	1					
ANR	4850077	ExpressionStatement	"dprintf ( D_ALWAYS , ""windows_soft_kill error: softkill binary not set\\n"" )"	53:2:1632:1713	4850068	0	True				
ANR	4850078	CallExpression	"dprintf ( D_ALWAYS , ""windows_soft_kill error: softkill binary not set\\n"" )"		4850068	0					
ANR	4850079	Callee	dprintf		4850068	0					
ANR	4850080	Identifier	dprintf		4850068	0					
ANR	4850081	ArgumentList	D_ALWAYS		4850068	1					
ANR	4850082	Argument	D_ALWAYS		4850068	0					
ANR	4850083	Identifier	D_ALWAYS		4850068	0					
ANR	4850084	Argument	"""windows_soft_kill error: softkill binary not set\\n"""		4850068	1					
ANR	4850085	PrimaryExpression	"""windows_soft_kill error: softkill binary not set\\n"""		4850068	0					
ANR	4850086	ReturnStatement	return false ;	55:2:1717:1729	4850068	1	True				
ANR	4850087	Identifier	false		4850068	0					
ANR	4850088	IdentifierDeclStatement	char command_line [ 1024 ] ;	60:1:1801:1824	4850068	1	True				
ANR	4850089	IdentifierDecl	command_line [ 1024 ]		4850068	0					
ANR	4850090	IdentifierDeclType	char [ 1024 ]		4850068	0					
ANR	4850091	Identifier	command_line		4850068	1					
ANR	4850092	PrimaryExpression	1024		4850068	2					
ANR	4850093	ExpressionStatement	command_line [ 1023 ] = '\\0'	61:1:1827:1852	4850068	2	True				
ANR	4850094	AssignmentExpression	command_line [ 1023 ] = '\\0'		4850068	0		=			
ANR	4850095	ArrayIndexing	command_line [ 1023 ]		4850068	0					
ANR	4850096	Identifier	command_line		4850068	0					
ANR	4850097	PrimaryExpression	1023		4850068	1					
ANR	4850098	PrimaryExpression	'\\0'		4850068	1					
ANR	4850099	IdentifierDeclStatement	"int ret = _snprintf ( command_line , 1024 , ""\\""%s\\"" %u debug.txt"" , soft_kill_binary , pid ) ;"	62:1:1855:2012	4850068	3	True				
ANR	4850100	IdentifierDecl	"ret = _snprintf ( command_line , 1024 , ""\\""%s\\"" %u debug.txt"" , soft_kill_binary , pid )"		4850068	0					
ANR	4850101	IdentifierDeclType	int		4850068	0					
ANR	4850102	Identifier	ret		4850068	1					
ANR	4850103	AssignmentExpression	"ret = _snprintf ( command_line , 1024 , ""\\""%s\\"" %u debug.txt"" , soft_kill_binary , pid )"		4850068	2		=			
ANR	4850104	Identifier	ret		4850068	0					
ANR	4850105	CallExpression	"_snprintf ( command_line , 1024 , ""\\""%s\\"" %u debug.txt"" , soft_kill_binary , pid )"		4850068	1					
ANR	4850106	Callee	_snprintf		4850068	0					
ANR	4850107	Identifier	_snprintf		4850068	0					
ANR	4850108	ArgumentList	command_line		4850068	1					
ANR	4850109	Argument	command_line		4850068	0					
ANR	4850110	Identifier	command_line		4850068	0					
ANR	4850111	Argument	1024		4850068	1					
ANR	4850112	PrimaryExpression	1024		4850068	0					
ANR	4850113	Argument	"""\\""%s\\"" %u debug.txt"""		4850068	2					
ANR	4850114	PrimaryExpression	"""\\""%s\\"" %u debug.txt"""		4850068	0					
ANR	4850115	Argument	soft_kill_binary		4850068	3					
ANR	4850116	Identifier	soft_kill_binary		4850068	0					
ANR	4850117	Argument	pid		4850068	4					
ANR	4850118	Identifier	pid		4850068	0					
ANR	4850119	IfStatement	if ( ret < 0 )		4850068	4					
ANR	4850120	Condition	ret < 0	67:5:2019:2025	4850068	0	True				
ANR	4850121	RelationalExpression	ret < 0		4850068	0		<			
ANR	4850122	Identifier	ret		4850068	0					
ANR	4850123	PrimaryExpression	0		4850068	1					
ANR	4850124	CompoundStatement		26:14:783:783	4850068	1					
ANR	4850125	ExpressionStatement	"dprintf ( D_ALWAYS , ""windows:soft_kill: snprintf error: %s (%d)\\n"" , strerror ( errno ) , errno )"	68:2:2032:2151	4850068	0	True				
ANR	4850126	CallExpression	"dprintf ( D_ALWAYS , ""windows:soft_kill: snprintf error: %s (%d)\\n"" , strerror ( errno ) , errno )"		4850068	0					
ANR	4850127	Callee	dprintf		4850068	0					
ANR	4850128	Identifier	dprintf		4850068	0					
ANR	4850129	ArgumentList	D_ALWAYS		4850068	1					
ANR	4850130	Argument	D_ALWAYS		4850068	0					
ANR	4850131	Identifier	D_ALWAYS		4850068	0					
ANR	4850132	Argument	"""windows:soft_kill: snprintf error: %s (%d)\\n"""		4850068	1					
ANR	4850133	PrimaryExpression	"""windows:soft_kill: snprintf error: %s (%d)\\n"""		4850068	0					
ANR	4850134	Argument	strerror ( errno )		4850068	2					
ANR	4850135	CallExpression	strerror ( errno )		4850068	0					
ANR	4850136	Callee	strerror		4850068	0					
ANR	4850137	Identifier	strerror		4850068	0					
ANR	4850138	ArgumentList	errno		4850068	1					
ANR	4850139	Argument	errno		4850068	0					
ANR	4850140	Identifier	errno		4850068	0					
ANR	4850141	Argument	errno		4850068	3					
ANR	4850142	Identifier	errno		4850068	0					
ANR	4850143	ReturnStatement	return false ;	72:2:2155:2167	4850068	1	True				
ANR	4850144	Identifier	false		4850068	0					
ANR	4850145	IfStatement	if ( command_line [ 1023 ] != '\\0' )		4850068	5					
ANR	4850146	Condition	command_line [ 1023 ] != '\\0'	74:5:2177:2202	4850068	0	True				
ANR	4850147	EqualityExpression	command_line [ 1023 ] != '\\0'		4850068	0		!=			
ANR	4850148	ArrayIndexing	command_line [ 1023 ]		4850068	0					
ANR	4850149	Identifier	command_line		4850068	0					
ANR	4850150	PrimaryExpression	1023		4850068	1					
ANR	4850151	PrimaryExpression	'\\0'		4850068	1					
ANR	4850152	CompoundStatement		33:33:960:960	4850068	1					
ANR	4850153	ExpressionStatement	"dprintf ( D_ALWAYS , ""windows_soft_kill: command line too long\\n"" )"	75:2:2209:2282	4850068	0	True				
ANR	4850154	CallExpression	"dprintf ( D_ALWAYS , ""windows_soft_kill: command line too long\\n"" )"		4850068	0					
ANR	4850155	Callee	dprintf		4850068	0					
ANR	4850156	Identifier	dprintf		4850068	0					
ANR	4850157	ArgumentList	D_ALWAYS		4850068	1					
ANR	4850158	Argument	D_ALWAYS		4850068	0					
ANR	4850159	Identifier	D_ALWAYS		4850068	0					
ANR	4850160	Argument	"""windows_soft_kill: command line too long\\n"""		4850068	1					
ANR	4850161	PrimaryExpression	"""windows_soft_kill: command line too long\\n"""		4850068	0					
ANR	4850162	ReturnStatement	return false ;	77:2:2286:2298	4850068	1	True				
ANR	4850163	Identifier	false		4850068	0					
ANR	4850164	IdentifierDeclStatement	STARTUPINFO si ;	82:1:2363:2377	4850068	6	True				
ANR	4850165	IdentifierDecl	si		4850068	0					
ANR	4850166	IdentifierDeclType	STARTUPINFO		4850068	0					
ANR	4850167	Identifier	si		4850068	1					
ANR	4850168	ExpressionStatement	"memset ( & si , 0 , sizeof ( STARTUPINFO ) )"	83:1:2380:2415	4850068	7	True				
ANR	4850169	CallExpression	"memset ( & si , 0 , sizeof ( STARTUPINFO ) )"		4850068	0					
ANR	4850170	Callee	memset		4850068	0					
ANR	4850171	Identifier	memset		4850068	0					
ANR	4850172	ArgumentList	& si		4850068	1					
ANR	4850173	Argument	& si		4850068	0					
ANR	4850174	UnaryOperationExpression	& si		4850068	0					
ANR	4850175	UnaryOperator	&		4850068	0					
ANR	4850176	Identifier	si		4850068	1					
ANR	4850177	Argument	0		4850068	1					
ANR	4850178	PrimaryExpression	0		4850068	0					
ANR	4850179	Argument	sizeof ( STARTUPINFO )		4850068	2					
ANR	4850180	SizeofExpression	sizeof ( STARTUPINFO )		4850068	0					
ANR	4850181	Sizeof	sizeof		4850068	0					
ANR	4850182	SizeofOperand	STARTUPINFO		4850068	1					
ANR	4850183	IdentifierDeclStatement	PROCESS_INFORMATION pi ;	84:1:2418:2440	4850068	8	True				
ANR	4850184	IdentifierDecl	pi		4850068	0					
ANR	4850185	IdentifierDeclType	PROCESS_INFORMATION		4850068	0					
ANR	4850186	Identifier	pi		4850068	1					
ANR	4850187	IfStatement	"if ( CreateProcess ( NULL , command_line , NULL , NULL , FALSE , 0 , NULL , NULL , & si , & pi ) == FALSE )"		4850068	9					
ANR	4850188	Condition	"CreateProcess ( NULL , command_line , NULL , NULL , FALSE , 0 , NULL , NULL , & si , & pi ) == FALSE"	85:5:2447:2969	4850068	0	True				
ANR	4850189	EqualityExpression	"CreateProcess ( NULL , command_line , NULL , NULL , FALSE , 0 , NULL , NULL , & si , & pi ) == FALSE"		4850068	0		==			
ANR	4850190	CallExpression	"CreateProcess ( NULL , command_line , NULL , NULL , FALSE , 0 , NULL , NULL , & si , & pi )"		4850068	0					
ANR	4850191	Callee	CreateProcess		4850068	0					
ANR	4850192	Identifier	CreateProcess		4850068	0					
ANR	4850193	ArgumentList	NULL		4850068	1					
ANR	4850194	Argument	NULL		4850068	0					
ANR	4850195	Identifier	NULL		4850068	0					
ANR	4850196	Argument	command_line		4850068	1					
ANR	4850197	Identifier	command_line		4850068	0					
ANR	4850198	Argument	NULL		4850068	2					
ANR	4850199	Identifier	NULL		4850068	0					
ANR	4850200	Argument	NULL		4850068	3					
ANR	4850201	Identifier	NULL		4850068	0					
ANR	4850202	Argument	FALSE		4850068	4					
ANR	4850203	Identifier	FALSE		4850068	0					
ANR	4850204	Argument	0		4850068	5					
ANR	4850205	PrimaryExpression	0		4850068	0					
ANR	4850206	Argument	NULL		4850068	6					
ANR	4850207	Identifier	NULL		4850068	0					
ANR	4850208	Argument	NULL		4850068	7					
ANR	4850209	Identifier	NULL		4850068	0					
ANR	4850210	Argument	& si		4850068	8					
ANR	4850211	UnaryOperationExpression	& si		4850068	0					
ANR	4850212	UnaryOperator	&		4850068	0					
ANR	4850213	Identifier	si		4850068	1					
ANR	4850214	Argument	& pi		4850068	9					
ANR	4850215	UnaryOperationExpression	& pi		4850068	0					
ANR	4850216	UnaryOperator	&		4850068	0					
ANR	4850217	Identifier	pi		4850068	1					
ANR	4850218	Identifier	FALSE		4850068	1					
ANR	4850219	CompoundStatement		54:1:1728:1728	4850068	1					
ANR	4850220	ExpressionStatement	"dprintf ( D_ALWAYS , ""windows_soft_kill: CreateProcess error: %u\\n"" , GetLastError ( ) )"	96:2:2977:3078	4850068	0	True				
ANR	4850221	CallExpression	"dprintf ( D_ALWAYS , ""windows_soft_kill: CreateProcess error: %u\\n"" , GetLastError ( ) )"		4850068	0					
ANR	4850222	Callee	dprintf		4850068	0					
ANR	4850223	Identifier	dprintf		4850068	0					
ANR	4850224	ArgumentList	D_ALWAYS		4850068	1					
ANR	4850225	Argument	D_ALWAYS		4850068	0					
ANR	4850226	Identifier	D_ALWAYS		4850068	0					
ANR	4850227	Argument	"""windows_soft_kill: CreateProcess error: %u\\n"""		4850068	1					
ANR	4850228	PrimaryExpression	"""windows_soft_kill: CreateProcess error: %u\\n"""		4850068	0					
ANR	4850229	Argument	GetLastError ( )		4850068	2					
ANR	4850230	CallExpression	GetLastError ( )		4850068	0					
ANR	4850231	Callee	GetLastError		4850068	0					
ANR	4850232	Identifier	GetLastError		4850068	0					
ANR	4850233	ArgumentList			4850068	1					
ANR	4850234	ReturnStatement	return false ;	99:2:3082:3094	4850068	1	True				
ANR	4850235	Identifier	false		4850068	0					
ANR	4850236	ExpressionStatement	CloseHandle ( pi . hThread )	101:1:3100:3123	4850068	10	True				
ANR	4850237	CallExpression	CloseHandle ( pi . hThread )		4850068	0					
ANR	4850238	Callee	CloseHandle		4850068	0					
ANR	4850239	Identifier	CloseHandle		4850068	0					
ANR	4850240	ArgumentList	pi . hThread		4850068	1					
ANR	4850241	Argument	pi . hThread		4850068	0					
ANR	4850242	MemberAccess	pi . hThread		4850068	0					
ANR	4850243	Identifier	pi		4850068	0					
ANR	4850244	Identifier	hThread		4850068	1					
ANR	4850245	IfStatement	"if ( WaitForSingleObject ( pi . hProcess , INFINITE ) != WAIT_OBJECT_0 )"		4850068	11					
ANR	4850246	Condition	"WaitForSingleObject ( pi . hProcess , INFINITE ) != WAIT_OBJECT_0"	106:5:3218:3276	4850068	0	True				
ANR	4850247	EqualityExpression	"WaitForSingleObject ( pi . hProcess , INFINITE ) != WAIT_OBJECT_0"		4850068	0		!=			
ANR	4850248	CallExpression	"WaitForSingleObject ( pi . hProcess , INFINITE )"		4850068	0					
ANR	4850249	Callee	WaitForSingleObject		4850068	0					
ANR	4850250	Identifier	WaitForSingleObject		4850068	0					
ANR	4850251	ArgumentList	pi . hProcess		4850068	1					
ANR	4850252	Argument	pi . hProcess		4850068	0					
ANR	4850253	MemberAccess	pi . hProcess		4850068	0					
ANR	4850254	Identifier	pi		4850068	0					
ANR	4850255	Identifier	hProcess		4850068	1					
ANR	4850256	Argument	INFINITE		4850068	1					
ANR	4850257	Identifier	INFINITE		4850068	0					
ANR	4850258	Identifier	WAIT_OBJECT_0		4850068	1					
ANR	4850259	CompoundStatement		65:66:2034:2034	4850068	1					
ANR	4850260	ExpressionStatement	"dprintf ( D_ALWAYS , ""windows_soft_kill: WaitForSingleObject error: %u\\n"" , GetLastError ( ) )"	107:2:3283:3390	4850068	0	True				
ANR	4850261	CallExpression	"dprintf ( D_ALWAYS , ""windows_soft_kill: WaitForSingleObject error: %u\\n"" , GetLastError ( ) )"		4850068	0					
ANR	4850262	Callee	dprintf		4850068	0					
ANR	4850263	Identifier	dprintf		4850068	0					
ANR	4850264	ArgumentList	D_ALWAYS		4850068	1					
ANR	4850265	Argument	D_ALWAYS		4850068	0					
ANR	4850266	Identifier	D_ALWAYS		4850068	0					
ANR	4850267	Argument	"""windows_soft_kill: WaitForSingleObject error: %u\\n"""		4850068	1					
ANR	4850268	PrimaryExpression	"""windows_soft_kill: WaitForSingleObject error: %u\\n"""		4850068	0					
ANR	4850269	Argument	GetLastError ( )		4850068	2					
ANR	4850270	CallExpression	GetLastError ( )		4850068	0					
ANR	4850271	Callee	GetLastError		4850068	0					
ANR	4850272	Identifier	GetLastError		4850068	0					
ANR	4850273	ArgumentList			4850068	1					
ANR	4850274	IdentifierDeclStatement	DWORD exit_code ;	111:1:3396:3411	4850068	12	True				
ANR	4850275	IdentifierDecl	exit_code		4850068	0					
ANR	4850276	IdentifierDeclType	DWORD		4850068	0					
ANR	4850277	Identifier	exit_code		4850068	1					
ANR	4850278	IdentifierDeclStatement	"BOOL result = GetExitCodeProcess ( pi . hProcess , & exit_code ) ;"	112:1:3414:3471	4850068	13	True				
ANR	4850279	IdentifierDecl	"result = GetExitCodeProcess ( pi . hProcess , & exit_code )"		4850068	0					
ANR	4850280	IdentifierDeclType	BOOL		4850068	0					
ANR	4850281	Identifier	result		4850068	1					
ANR	4850282	AssignmentExpression	"result = GetExitCodeProcess ( pi . hProcess , & exit_code )"		4850068	2		=			
ANR	4850283	Identifier	result		4850068	0					
ANR	4850284	CallExpression	"GetExitCodeProcess ( pi . hProcess , & exit_code )"		4850068	1					
ANR	4850285	Callee	GetExitCodeProcess		4850068	0					
ANR	4850286	Identifier	GetExitCodeProcess		4850068	0					
ANR	4850287	ArgumentList	pi . hProcess		4850068	1					
ANR	4850288	Argument	pi . hProcess		4850068	0					
ANR	4850289	MemberAccess	pi . hProcess		4850068	0					
ANR	4850290	Identifier	pi		4850068	0					
ANR	4850291	Identifier	hProcess		4850068	1					
ANR	4850292	Argument	& exit_code		4850068	1					
ANR	4850293	UnaryOperationExpression	& exit_code		4850068	0					
ANR	4850294	UnaryOperator	&		4850068	0					
ANR	4850295	Identifier	exit_code		4850068	1					
ANR	4850296	IdentifierDeclStatement	DWORD error = GetLastError ( ) ;	113:1:3474:3502	4850068	14	True				
ANR	4850297	IdentifierDecl	error = GetLastError ( )		4850068	0					
ANR	4850298	IdentifierDeclType	DWORD		4850068	0					
ANR	4850299	Identifier	error		4850068	1					
ANR	4850300	AssignmentExpression	error = GetLastError ( )		4850068	2		=			
ANR	4850301	Identifier	error		4850068	0					
ANR	4850302	CallExpression	GetLastError ( )		4850068	1					
ANR	4850303	Callee	GetLastError		4850068	0					
ANR	4850304	Identifier	GetLastError		4850068	0					
ANR	4850305	ArgumentList			4850068	1					
ANR	4850306	ExpressionStatement	CloseHandle ( pi . hProcess )	114:1:3505:3529	4850068	15	True				
ANR	4850307	CallExpression	CloseHandle ( pi . hProcess )		4850068	0					
ANR	4850308	Callee	CloseHandle		4850068	0					
ANR	4850309	Identifier	CloseHandle		4850068	0					
ANR	4850310	ArgumentList	pi . hProcess		4850068	1					
ANR	4850311	Argument	pi . hProcess		4850068	0					
ANR	4850312	MemberAccess	pi . hProcess		4850068	0					
ANR	4850313	Identifier	pi		4850068	0					
ANR	4850314	Identifier	hProcess		4850068	1					
ANR	4850315	IfStatement	if ( result == FALSE )		4850068	16					
ANR	4850316	Condition	result == FALSE	115:5:3536:3550	4850068	0	True				
ANR	4850317	EqualityExpression	result == FALSE		4850068	0		==			
ANR	4850318	Identifier	result		4850068	0					
ANR	4850319	Identifier	FALSE		4850068	1					
ANR	4850320	CompoundStatement		74:22:2308:2308	4850068	1					
ANR	4850321	ExpressionStatement	"dprintf ( D_ALWAYS , ""windows_soft_kill: GetExitCodeProcess error: %u\\n"" , GetLastError ( ) )"	116:2:3557:3663	4850068	0	True				
ANR	4850322	CallExpression	"dprintf ( D_ALWAYS , ""windows_soft_kill: GetExitCodeProcess error: %u\\n"" , GetLastError ( ) )"		4850068	0					
ANR	4850323	Callee	dprintf		4850068	0					
ANR	4850324	Identifier	dprintf		4850068	0					
ANR	4850325	ArgumentList	D_ALWAYS		4850068	1					
ANR	4850326	Argument	D_ALWAYS		4850068	0					
ANR	4850327	Identifier	D_ALWAYS		4850068	0					
ANR	4850328	Argument	"""windows_soft_kill: GetExitCodeProcess error: %u\\n"""		4850068	1					
ANR	4850329	PrimaryExpression	"""windows_soft_kill: GetExitCodeProcess error: %u\\n"""		4850068	0					
ANR	4850330	Argument	GetLastError ( )		4850068	2					
ANR	4850331	CallExpression	GetLastError ( )		4850068	0					
ANR	4850332	Callee	GetLastError		4850068	0					
ANR	4850333	Identifier	GetLastError		4850068	0					
ANR	4850334	ArgumentList			4850068	1					
ANR	4850335	ReturnStatement	return false ;	119:2:3667:3679	4850068	1	True				
ANR	4850336	Identifier	false		4850068	0					
ANR	4850337	IfStatement	if ( exit_code != SOFTKILL_SUCCESS )		4850068	17					
ANR	4850338	Condition	exit_code != SOFTKILL_SUCCESS	121:5:3689:3717	4850068	0	True				
ANR	4850339	EqualityExpression	exit_code != SOFTKILL_SUCCESS		4850068	0		!=			
ANR	4850340	Identifier	exit_code		4850068	0					
ANR	4850341	Identifier	SOFTKILL_SUCCESS		4850068	1					
ANR	4850342	CompoundStatement		80:36:2475:2475	4850068	1					
ANR	4850343	ExpressionStatement	"dprintf ( D_ALWAYS , ""windows_soft_kill: error code from condor_softkill: %u\\n"" , exit_code )"	122:2:3724:3832	4850068	0	True				
ANR	4850344	CallExpression	"dprintf ( D_ALWAYS , ""windows_soft_kill: error code from condor_softkill: %u\\n"" , exit_code )"		4850068	0					
ANR	4850345	Callee	dprintf		4850068	0					
ANR	4850346	Identifier	dprintf		4850068	0					
ANR	4850347	ArgumentList	D_ALWAYS		4850068	1					
ANR	4850348	Argument	D_ALWAYS		4850068	0					
ANR	4850349	Identifier	D_ALWAYS		4850068	0					
ANR	4850350	Argument	"""windows_soft_kill: error code from condor_softkill: %u\\n"""		4850068	1					
ANR	4850351	PrimaryExpression	"""windows_soft_kill: error code from condor_softkill: %u\\n"""		4850068	0					
ANR	4850352	Argument	exit_code		4850068	2					
ANR	4850353	Identifier	exit_code		4850068	0					
ANR	4850354	ReturnStatement	return false ;	125:2:3836:3848	4850068	1	True				
ANR	4850355	Identifier	false		4850068	0					
ANR	4850356	ReturnStatement	return true ;	130:1:3881:3892	4850068	18	True				
ANR	4850357	Identifier	true		4850068	0					
ANR	4850358	ReturnType	bool		4850068	1					
ANR	4850359	Identifier	windows_soft_kill		4850068	2					
ANR	4850360	ParameterList	DWORD pid		4850068	3					
ANR	4850361	Parameter	DWORD pid	41:18:1233:1241	4850068	0	True				
ANR	4850362	ParameterType	DWORD		4850068	0					
ANR	4850363	Identifier	pid		4850068	1					
ANR	4850364	CFGEntryNode	ENTRY		4850068		True				
ANR	4850365	CFGExitNode	EXIT		4850068		True				
ANR	4850366	Symbol	& si		4850068						
ANR	4850367	Symbol	_snprintf		4850068						
ANR	4850368	Symbol	& exit_code		4850068						
ANR	4850369	Symbol	* command_line		4850068						
ANR	4850370	Symbol	pid		4850068						
ANR	4850371	Symbol	pi . hThread		4850068						
ANR	4850372	Symbol	error		4850068						
ANR	4850373	Symbol	WaitForSingleObject		4850068						
ANR	4850374	Symbol	result		4850068						
ANR	4850375	Symbol	si		4850068						
ANR	4850376	Symbol	WAIT_OBJECT_0		4850068						
ANR	4850377	Symbol	GetExitCodeProcess		4850068						
ANR	4850378	Symbol	soft_kill_binary		4850068						
ANR	4850379	Symbol	ret		4850068						
ANR	4850380	Symbol	CreateProcess		4850068						
ANR	4850381	Symbol	errno		4850068						
ANR	4850382	Symbol	& pi		4850068						
ANR	4850383	Symbol	NULL		4850068						
ANR	4850384	Symbol	pi . hProcess		4850068						
ANR	4850385	Symbol	D_ALWAYS		4850068						
ANR	4850386	Symbol	false		4850068						
ANR	4850387	Symbol	INFINITE		4850068						
ANR	4850388	Symbol	strerror		4850068						
ANR	4850389	Symbol	GetLastError		4850068						
ANR	4850390	Symbol	exit_code		4850068						
ANR	4850391	Symbol	true		4850068						
ANR	4850392	Symbol	pi		4850068						
ANR	4850393	Symbol	SOFTKILL_SUCCESS		4850068						
ANR	4850394	Symbol	FALSE		4850068						
ANR	4850395	Symbol	command_line		4850068						
ANR	4850396	Function	windows_hard_kill	133:0:3897:4394							
ANR	4850397	FunctionDef	windows_hard_kill (DWORD pid)		4850396	0					
ANR	4850398	CompoundStatement		135:0:3931:4394	4850396	0					
ANR	4850399	IdentifierDeclStatement	"HANDLE process = OpenProcess ( PROCESS_TERMINATE , FALSE , pid ) ;"	136:1:3934:3993	4850396	0	True				
ANR	4850400	IdentifierDecl	"process = OpenProcess ( PROCESS_TERMINATE , FALSE , pid )"		4850396	0					
ANR	4850401	IdentifierDeclType	HANDLE		4850396	0					
ANR	4850402	Identifier	process		4850396	1					
ANR	4850403	AssignmentExpression	"process = OpenProcess ( PROCESS_TERMINATE , FALSE , pid )"		4850396	2		=			
ANR	4850404	Identifier	process		4850396	0					
ANR	4850405	CallExpression	"OpenProcess ( PROCESS_TERMINATE , FALSE , pid )"		4850396	1					
ANR	4850406	Callee	OpenProcess		4850396	0					
ANR	4850407	Identifier	OpenProcess		4850396	0					
ANR	4850408	ArgumentList	PROCESS_TERMINATE		4850396	1					
ANR	4850409	Argument	PROCESS_TERMINATE		4850396	0					
ANR	4850410	Identifier	PROCESS_TERMINATE		4850396	0					
ANR	4850411	Argument	FALSE		4850396	1					
ANR	4850412	Identifier	FALSE		4850396	0					
ANR	4850413	Argument	pid		4850396	2					
ANR	4850414	Identifier	pid		4850396	0					
ANR	4850415	IfStatement	if ( process == NULL )		4850396	1					
ANR	4850416	Condition	process == NULL	137:5:4000:4014	4850396	0	True				
ANR	4850417	EqualityExpression	process == NULL		4850396	0		==			
ANR	4850418	Identifier	process		4850396	0					
ANR	4850419	Identifier	NULL		4850396	1					
ANR	4850420	CompoundStatement		3:22:85:85	4850396	1					
ANR	4850421	ExpressionStatement	"dprintf ( D_ALWAYS , ""windows_hard_kill: OpenProcess error: %u\\n"" , GetLastError ( ) )"	138:2:4021:4120	4850396	0	True				
ANR	4850422	CallExpression	"dprintf ( D_ALWAYS , ""windows_hard_kill: OpenProcess error: %u\\n"" , GetLastError ( ) )"		4850396	0					
ANR	4850423	Callee	dprintf		4850396	0					
ANR	4850424	Identifier	dprintf		4850396	0					
ANR	4850425	ArgumentList	D_ALWAYS		4850396	1					
ANR	4850426	Argument	D_ALWAYS		4850396	0					
ANR	4850427	Identifier	D_ALWAYS		4850396	0					
ANR	4850428	Argument	"""windows_hard_kill: OpenProcess error: %u\\n"""		4850396	1					
ANR	4850429	PrimaryExpression	"""windows_hard_kill: OpenProcess error: %u\\n"""		4850396	0					
ANR	4850430	Argument	GetLastError ( )		4850396	2					
ANR	4850431	CallExpression	GetLastError ( )		4850396	0					
ANR	4850432	Callee	GetLastError		4850396	0					
ANR	4850433	Identifier	GetLastError		4850396	0					
ANR	4850434	ArgumentList			4850396	1					
ANR	4850435	ReturnStatement	return false ;	141:2:4124:4136	4850396	1	True				
ANR	4850436	Identifier	false		4850396	0					
ANR	4850437	IdentifierDeclStatement	"BOOL ok = TerminateProcess ( process , 0 ) ;"	143:1:4142:4180	4850396	2	True				
ANR	4850438	IdentifierDecl	"ok = TerminateProcess ( process , 0 )"		4850396	0					
ANR	4850439	IdentifierDeclType	BOOL		4850396	0					
ANR	4850440	Identifier	ok		4850396	1					
ANR	4850441	AssignmentExpression	"ok = TerminateProcess ( process , 0 )"		4850396	2		=			
ANR	4850442	Identifier	ok		4850396	0					
ANR	4850443	CallExpression	"TerminateProcess ( process , 0 )"		4850396	1					
ANR	4850444	Callee	TerminateProcess		4850396	0					
ANR	4850445	Identifier	TerminateProcess		4850396	0					
ANR	4850446	ArgumentList	process		4850396	1					
ANR	4850447	Argument	process		4850396	0					
ANR	4850448	Identifier	process		4850396	0					
ANR	4850449	Argument	0		4850396	1					
ANR	4850450	PrimaryExpression	0		4850396	0					
ANR	4850451	IdentifierDeclStatement	DWORD err = GetLastError ( ) ;	144:1:4183:4209	4850396	3	True				
ANR	4850452	IdentifierDecl	err = GetLastError ( )		4850396	0					
ANR	4850453	IdentifierDeclType	DWORD		4850396	0					
ANR	4850454	Identifier	err		4850396	1					
ANR	4850455	AssignmentExpression	err = GetLastError ( )		4850396	2		=			
ANR	4850456	Identifier	err		4850396	0					
ANR	4850457	CallExpression	GetLastError ( )		4850396	1					
ANR	4850458	Callee	GetLastError		4850396	0					
ANR	4850459	Identifier	GetLastError		4850396	0					
ANR	4850460	ArgumentList			4850396	1					
ANR	4850461	ExpressionStatement	CloseHandle ( process )	145:1:4212:4232	4850396	4	True				
ANR	4850462	CallExpression	CloseHandle ( process )		4850396	0					
ANR	4850463	Callee	CloseHandle		4850396	0					
ANR	4850464	Identifier	CloseHandle		4850396	0					
ANR	4850465	ArgumentList	process		4850396	1					
ANR	4850466	Argument	process		4850396	0					
ANR	4850467	Identifier	process		4850396	0					
ANR	4850468	IfStatement	if ( ok == FALSE )		4850396	5					
ANR	4850469	Condition	ok == FALSE	146:5:4239:4249	4850396	0	True				
ANR	4850470	EqualityExpression	ok == FALSE		4850396	0		==			
ANR	4850471	Identifier	ok		4850396	0					
ANR	4850472	Identifier	FALSE		4850396	1					
ANR	4850473	CompoundStatement		12:18:320:320	4850396	1					
ANR	4850474	ExpressionStatement	"dprintf ( D_ALWAYS , ""windows_hard_kill: TerminateProcess error: %u\\n"" , ( unsigned ) err )"	147:2:4256:4359	4850396	0	True				
ANR	4850475	CallExpression	"dprintf ( D_ALWAYS , ""windows_hard_kill: TerminateProcess error: %u\\n"" , ( unsigned ) err )"		4850396	0					
ANR	4850476	Callee	dprintf		4850396	0					
ANR	4850477	Identifier	dprintf		4850396	0					
ANR	4850478	ArgumentList	D_ALWAYS		4850396	1					
ANR	4850479	Argument	D_ALWAYS		4850396	0					
ANR	4850480	Identifier	D_ALWAYS		4850396	0					
ANR	4850481	Argument	"""windows_hard_kill: TerminateProcess error: %u\\n"""		4850396	1					
ANR	4850482	PrimaryExpression	"""windows_hard_kill: TerminateProcess error: %u\\n"""		4850396	0					
ANR	4850483	Argument	( unsigned ) err		4850396	2					
ANR	4850484	CastExpression	( unsigned ) err		4850396	0					
ANR	4850485	CastTarget	unsigned		4850396	0					
ANR	4850486	Identifier	err		4850396	1					
ANR	4850487	ReturnStatement	return false ;	150:2:4363:4375	4850396	1	True				
ANR	4850488	Identifier	false		4850396	0					
ANR	4850489	ReturnStatement	return true ;	152:1:4381:4392	4850396	6	True				
ANR	4850490	Identifier	true		4850396	0					
ANR	4850491	ReturnType	bool		4850396	1					
ANR	4850492	Identifier	windows_hard_kill		4850396	2					
ANR	4850493	ParameterList	DWORD pid		4850396	3					
ANR	4850494	Parameter	DWORD pid	134:18:3920:3928	4850396	0	True				
ANR	4850495	ParameterType	DWORD		4850396	0					
ANR	4850496	Identifier	pid		4850396	1					
ANR	4850497	CFGEntryNode	ENTRY		4850396		True				
ANR	4850498	CFGExitNode	EXIT		4850396		True				
ANR	4850499	Symbol	TerminateProcess		4850396						
ANR	4850500	Symbol	process		4850396						
ANR	4850501	Symbol	PROCESS_TERMINATE		4850396						
ANR	4850502	Symbol	NULL		4850396						
ANR	4850503	Symbol	err		4850396						
ANR	4850504	Symbol	D_ALWAYS		4850396						
ANR	4850505	Symbol	false		4850396						
ANR	4850506	Symbol	pid		4850396						
ANR	4850507	Symbol	GetLastError		4850396						
ANR	4850508	Symbol	true		4850396						
ANR	4850509	Symbol	FALSE		4850396						
ANR	4850510	Symbol	ok		4850396						
ANR	4850511	Symbol	OpenProcess		4850396						
ANR	4850512	Function	hash_func	158:0:4504:4563							
ANR	4850513	FunctionDef	hash_func (const DWORD & n)		4850512	0					
ANR	4850514	CompoundStatement		160:0:4550:4563	4850512	0					
ANR	4850515	ReturnStatement	return n ;	161:1:4553:4561	4850512	0	True				
ANR	4850516	Identifier	n		4850512	0					
ANR	4850517	ReturnType	static unsigned int		4850512	1					
ANR	4850518	Identifier	hash_func		4850512	2					
ANR	4850519	ParameterList	const DWORD & n		4850512	3					
ANR	4850520	Parameter	const DWORD & n	159:10:4534:4547	4850512	0	True				
ANR	4850521	ParameterType	const DWORD &		4850512	0					
ANR	4850522	Identifier	n		4850512	1					
ANR	4850523	CFGEntryNode	ENTRY		4850512		True				
ANR	4850524	CFGExitNode	EXIT		4850512		True				
ANR	4850525	Symbol	n		4850512						
ANR	4850526	DeclStmt									
ANR	4850527	Decl							CSysinfo	CSysinfo	sys_info
ANR	4850528	ClassDef	SuspendedThread	170:0:4724:4949							
ANR	4850529	DeclStmt									
ANR	4850530	Decl							HANDLE	HANDLE	handle
ANR	4850531	DeclStmt									
ANR	4850532	Decl							int	int	num_suspends
ANR	4850533	DeclStmt									
ANR	4850534	Decl							"HashTable < DWORD , SuspendedThread * >"	"HashTable < DWORD , SuspendedThread * >"	SuspendedProcess
ANR	4850535	DeclStmt									
ANR	4850536	Decl							"HashTable < DWORD , SuspendedProcess * >"	"HashTable < DWORD , SuspendedProcess * >"	suspended_processes
ANR	4850537	Function	windows_suspend	192:0:5294:7885							
ANR	4850538	FunctionDef	windows_suspend (DWORD pid)		4850537	0					
ANR	4850539	CompoundStatement		194:0:5326:7885	4850537	0					
ANR	4850540	IdentifierDeclStatement	SuspendedProcess * sp ;	198:1:5463:5483	4850537	0	True				
ANR	4850541	IdentifierDecl	* sp		4850537	0					
ANR	4850542	IdentifierDeclType	SuspendedProcess *		4850537	0					
ANR	4850543	Identifier	sp		4850537	1					
ANR	4850544	IdentifierDeclStatement	"int ret = suspended_processes . lookup ( pid , sp ) ;"	199:1:5486:5531	4850537	1	True				
ANR	4850545	IdentifierDecl	"ret = suspended_processes . lookup ( pid , sp )"		4850537	0					
ANR	4850546	IdentifierDeclType	int		4850537	0					
ANR	4850547	Identifier	ret		4850537	1					
ANR	4850548	AssignmentExpression	"ret = suspended_processes . lookup ( pid , sp )"		4850537	2		=			
ANR	4850549	Identifier	ret		4850537	0					
ANR	4850550	CallExpression	"suspended_processes . lookup ( pid , sp )"		4850537	1					
ANR	4850551	Callee	suspended_processes . lookup		4850537	0					
ANR	4850552	MemberAccess	suspended_processes . lookup		4850537	0					
ANR	4850553	Identifier	suspended_processes		4850537	0					
ANR	4850554	Identifier	lookup		4850537	1					
ANR	4850555	ArgumentList	pid		4850537	1					
ANR	4850556	Argument	pid		4850537	0					
ANR	4850557	Identifier	pid		4850537	0					
ANR	4850558	Argument	sp		4850537	1					
ANR	4850559	Identifier	sp		4850537	0					
ANR	4850560	ExpressionStatement	ASSERT ( ret == - 1 )	200:1:5534:5551	4850537	2	True				
ANR	4850561	CallExpression	ASSERT ( ret == - 1 )		4850537	0					
ANR	4850562	Callee	ASSERT		4850537	0					
ANR	4850563	Identifier	ASSERT		4850537	0					
ANR	4850564	ArgumentList	ret == - 1		4850537	1					
ANR	4850565	Argument	ret == - 1		4850537	0					
ANR	4850566	EqualityExpression	ret == - 1		4850537	0		==			
ANR	4850567	Identifier	ret		4850537	0					
ANR	4850568	UnaryOperationExpression	- 1		4850537	1					
ANR	4850569	UnaryOperator	-		4850537	0					
ANR	4850570	PrimaryExpression	1		4850537	1					
ANR	4850571	ExpressionStatement	"sp = new SuspendedProcess ( 11 , hash_func )"	201:1:5554:5594	4850537	3	True				
ANR	4850572	AssignmentExpression	"sp = new SuspendedProcess ( 11 , hash_func )"		4850537	0		=			
ANR	4850573	Identifier	sp		4850537	0					
ANR	4850574	Expression	"11 , hash_func"		4850537	1					
ANR	4850575	PrimaryExpression	11		4850537	0					
ANR	4850576	Identifier	hash_func		4850537	1					
ANR	4850577	ExpressionStatement	ASSERT ( sp != NULL )	202:1:5597:5615	4850537	4	True				
ANR	4850578	CallExpression	ASSERT ( sp != NULL )		4850537	0					
ANR	4850579	Callee	ASSERT		4850537	0					
ANR	4850580	Identifier	ASSERT		4850537	0					
ANR	4850581	ArgumentList	sp != NULL		4850537	1					
ANR	4850582	Argument	sp != NULL		4850537	0					
ANR	4850583	EqualityExpression	sp != NULL		4850537	0		!=			
ANR	4850584	Identifier	sp		4850537	0					
ANR	4850585	Identifier	NULL		4850537	1					
ANR	4850586	ExpressionStatement	"ret = suspended_processes . insert ( pid , sp )"	203:1:5618:5659	4850537	5	True				
ANR	4850587	AssignmentExpression	"ret = suspended_processes . insert ( pid , sp )"		4850537	0		=			
ANR	4850588	Identifier	ret		4850537	0					
ANR	4850589	CallExpression	"suspended_processes . insert ( pid , sp )"		4850537	1					
ANR	4850590	Callee	suspended_processes . insert		4850537	0					
ANR	4850591	MemberAccess	suspended_processes . insert		4850537	0					
ANR	4850592	Identifier	suspended_processes		4850537	0					
ANR	4850593	Identifier	insert		4850537	1					
ANR	4850594	ArgumentList	pid		4850537	1					
ANR	4850595	Argument	pid		4850537	0					
ANR	4850596	Identifier	pid		4850537	0					
ANR	4850597	Argument	sp		4850537	1					
ANR	4850598	Identifier	sp		4850537	0					
ANR	4850599	ExpressionStatement	ASSERT ( ret != - 1 )	204:1:5662:5679	4850537	6	True				
ANR	4850600	CallExpression	ASSERT ( ret != - 1 )		4850537	0					
ANR	4850601	Callee	ASSERT		4850537	0					
ANR	4850602	Identifier	ASSERT		4850537	0					
ANR	4850603	ArgumentList	ret != - 1		4850537	1					
ANR	4850604	Argument	ret != - 1		4850537	0					
ANR	4850605	EqualityExpression	ret != - 1		4850537	0		!=			
ANR	4850606	Identifier	ret		4850537	0					
ANR	4850607	UnaryOperationExpression	- 1		4850537	1					
ANR	4850608	UnaryOperator	-		4850537	0					
ANR	4850609	PrimaryExpression	1		4850537	1					
ANR	4850610	IdentifierDeclStatement	bool finished = false ;	209:1:5805:5826	4850537	7	True				
ANR	4850611	IdentifierDecl	finished = false		4850537	0					
ANR	4850612	IdentifierDeclType	bool		4850537	0					
ANR	4850613	Identifier	finished		4850537	1					
ANR	4850614	AssignmentExpression	finished = false		4850537	2		=			
ANR	4850615	Identifier	false		4850537	0					
ANR	4850616	Identifier	false		4850537	1					
ANR	4850617	WhileStatement	while ( ! finished )		4850537	8					
ANR	4850618	Condition	! finished	210:8:5836:5844	4850537	0	True				
ANR	4850619	UnaryOperationExpression	! finished		4850537	0					
ANR	4850620	UnaryOperator	!		4850537	0					
ANR	4850621	Identifier	finished		4850537	1					
ANR	4850622	CompoundStatement		27:2:711:758	4850537	1					
ANR	4850623	ExpressionStatement	finished = true	215:2:5938:5953	4850537	0	True				
ANR	4850624	AssignmentExpression	finished = true		4850537	0		=			
ANR	4850625	Identifier	finished		4850537	0					
ANR	4850626	Identifier	true		4850537	1					
ANR	4850627	IdentifierDeclStatement	ExtArray < DWORD > tid_array ;	219:2:6009:6034	4850537	1	True				
ANR	4850628	IdentifierDecl	tid_array		4850537	0					
ANR	4850629	IdentifierDeclType	ExtArray < DWORD >		4850537	0					
ANR	4850630	Identifier	tid_array		4850537	1					
ANR	4850631	IdentifierDeclStatement	"int num_tids = sys_info . GetTIDs ( pid , tid_array ) ;"	220:2:6038:6085	4850537	2	True				
ANR	4850632	IdentifierDecl	"num_tids = sys_info . GetTIDs ( pid , tid_array )"		4850537	0					
ANR	4850633	IdentifierDeclType	int		4850537	0					
ANR	4850634	Identifier	num_tids		4850537	1					
ANR	4850635	AssignmentExpression	"num_tids = sys_info . GetTIDs ( pid , tid_array )"		4850537	2		=			
ANR	4850636	Identifier	num_tids		4850537	0					
ANR	4850637	CallExpression	"sys_info . GetTIDs ( pid , tid_array )"		4850537	1					
ANR	4850638	Callee	sys_info . GetTIDs		4850537	0					
ANR	4850639	MemberAccess	sys_info . GetTIDs		4850537	0					
ANR	4850640	Identifier	sys_info		4850537	0					
ANR	4850641	Identifier	GetTIDs		4850537	1					
ANR	4850642	ArgumentList	pid		4850537	1					
ANR	4850643	Argument	pid		4850537	0					
ANR	4850644	Identifier	pid		4850537	0					
ANR	4850645	Argument	tid_array		4850537	1					
ANR	4850646	Identifier	tid_array		4850537	0					
ANR	4850647	IfStatement	if ( num_tids == 0 )		4850537	3					
ANR	4850648	Condition	num_tids == 0	221:6:6093:6105	4850537	0	True				
ANR	4850649	EqualityExpression	num_tids == 0		4850537	0		==			
ANR	4850650	Identifier	num_tids		4850537	0					
ANR	4850651	PrimaryExpression	0		4850537	1					
ANR	4850652	CompoundStatement		28:21:781:781	4850537	1					
ANR	4850653	ExpressionStatement	"EXCEPT ( ""windows_suspend_process failed: can't get threads for pid %u"" , pid )"	224:3:6162:6247	4850537	0	True				
ANR	4850654	CallExpression	"EXCEPT ( ""windows_suspend_process failed: can't get threads for pid %u"" , pid )"		4850537	0					
ANR	4850655	Callee	EXCEPT		4850537	0					
ANR	4850656	Identifier	EXCEPT		4850537	0					
ANR	4850657	ArgumentList	"""windows_suspend_process failed: can't get threads for pid %u"""		4850537	1					
ANR	4850658	Argument	"""windows_suspend_process failed: can't get threads for pid %u"""		4850537	0					
ANR	4850659	PrimaryExpression	"""windows_suspend_process failed: can't get threads for pid %u"""		4850537	0					
ANR	4850660	Argument	pid		4850537	1					
ANR	4850661	Identifier	pid		4850537	0					
ANR	4850662	ForStatement	for ( int i = 0 ; i < num_tids ; i ++ )		4850537	4					
ANR	4850663	ForInit	int i = 0 ;	230:7:6329:6338	4850537	0	True				
ANR	4850664	IdentifierDeclStatement	int i = 0 ;		4850537	0					
ANR	4850665	IdentifierDecl	i = 0		4850537	0					
ANR	4850666	IdentifierDeclType	int		4850537	0					
ANR	4850667	Identifier	i		4850537	1					
ANR	4850668	AssignmentExpression	i = 0		4850537	2		=			
ANR	4850669	Identifier	i		4850537	0					
ANR	4850670	PrimaryExpression	0		4850537	1					
ANR	4850671	Condition	i < num_tids	230:18:6340:6351	4850537	1	True				
ANR	4850672	RelationalExpression	i < num_tids		4850537	0		<			
ANR	4850673	Identifier	i		4850537	0					
ANR	4850674	Identifier	num_tids		4850537	1					
ANR	4850675	PostIncDecOperationExpression	i ++	230:32:6354:6356	4850537	2	True				
ANR	4850676	Identifier	i		4850537	0					
ANR	4850677	IncDec	++		4850537	1					
ANR	4850678	CompoundStatement		72:3:1934:1974	4850537	3					
ANR	4850679	IdentifierDeclStatement	SuspendedThread * st ;	234:3:6425:6444	4850537	0	True				
ANR	4850680	IdentifierDecl	* st		4850537	0					
ANR	4850681	IdentifierDeclType	SuspendedThread *		4850537	0					
ANR	4850682	Identifier	st		4850537	1					
ANR	4850683	ExpressionStatement	"ret = sp -> lookup ( tid_array [ i ] , st )"	235:3:6449:6483	4850537	1	True				
ANR	4850684	AssignmentExpression	"ret = sp -> lookup ( tid_array [ i ] , st )"		4850537	0		=			
ANR	4850685	Identifier	ret		4850537	0					
ANR	4850686	CallExpression	"sp -> lookup ( tid_array [ i ] , st )"		4850537	1					
ANR	4850687	Callee	sp -> lookup		4850537	0					
ANR	4850688	PtrMemberAccess	sp -> lookup		4850537	0					
ANR	4850689	Identifier	sp		4850537	0					
ANR	4850690	Identifier	lookup		4850537	1					
ANR	4850691	ArgumentList	tid_array [ i ]		4850537	1					
ANR	4850692	Argument	tid_array [ i ]		4850537	0					
ANR	4850693	ArrayIndexing	tid_array [ i ]		4850537	0					
ANR	4850694	Identifier	tid_array		4850537	0					
ANR	4850695	Identifier	i		4850537	1					
ANR	4850696	Argument	st		4850537	1					
ANR	4850697	Identifier	st		4850537	0					
ANR	4850698	IfStatement	if ( ret == - 1 )		4850537	2					
ANR	4850699	Condition	ret == - 1	236:7:6492:6500	4850537	0	True				
ANR	4850700	EqualityExpression	ret == - 1		4850537	0		==			
ANR	4850701	Identifier	ret		4850537	0					
ANR	4850702	UnaryOperationExpression	- 1		4850537	1					
ANR	4850703	UnaryOperator	-		4850537	0					
ANR	4850704	PrimaryExpression	1		4850537	1					
ANR	4850705	CompoundStatement		47:4:1241:1311	4850537	1					
ANR	4850706	IdentifierDeclStatement	"HANDLE handle = OpenThread ( THREAD_SUSPEND_RESUME , FALSE , tid_array [ i ] ) ;"	240:4:6568:6638	4850537	0	True				
ANR	4850707	IdentifierDecl	"handle = OpenThread ( THREAD_SUSPEND_RESUME , FALSE , tid_array [ i ] )"		4850537	0					
ANR	4850708	IdentifierDeclType	HANDLE		4850537	0					
ANR	4850709	Identifier	handle		4850537	1					
ANR	4850710	AssignmentExpression	"handle = OpenThread ( THREAD_SUSPEND_RESUME , FALSE , tid_array [ i ] )"		4850537	2		=			
ANR	4850711	Identifier	handle		4850537	0					
ANR	4850712	CallExpression	"OpenThread ( THREAD_SUSPEND_RESUME , FALSE , tid_array [ i ] )"		4850537	1					
ANR	4850713	Callee	OpenThread		4850537	0					
ANR	4850714	Identifier	OpenThread		4850537	0					
ANR	4850715	ArgumentList	THREAD_SUSPEND_RESUME		4850537	1					
ANR	4850716	Argument	THREAD_SUSPEND_RESUME		4850537	0					
ANR	4850717	Identifier	THREAD_SUSPEND_RESUME		4850537	0					
ANR	4850718	Argument	FALSE		4850537	1					
ANR	4850719	Identifier	FALSE		4850537	0					
ANR	4850720	Argument	tid_array [ i ]		4850537	2					
ANR	4850721	ArrayIndexing	tid_array [ i ]		4850537	0					
ANR	4850722	Identifier	tid_array		4850537	0					
ANR	4850723	Identifier	i		4850537	1					
ANR	4850724	IfStatement	if ( handle == NULL )		4850537	1					
ANR	4850725	Condition	handle == NULL	241:8:6648:6661	4850537	0	True				
ANR	4850726	EqualityExpression	handle == NULL		4850537	0		==			
ANR	4850727	Identifier	handle		4850537	0					
ANR	4850728	Identifier	NULL		4850537	1					
ANR	4850729	CompoundStatement		48:24:1337:1337	4850537	1					
ANR	4850730	ExpressionStatement	finished = false	246:5:6816:6832	4850537	0	True				
ANR	4850731	AssignmentExpression	finished = false		4850537	0		=			
ANR	4850732	Identifier	finished		4850537	0					
ANR	4850733	Identifier	false		4850537	1					
ANR	4850734	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""windows_suspend_process: OpenThread error: %u\\n"" , GetLastError ( ) )"	247:5:6839:6952	4850537	1	True				
ANR	4850735	CallExpression	"dprintf ( D_FULLDEBUG , ""windows_suspend_process: OpenThread error: %u\\n"" , GetLastError ( ) )"		4850537	0					
ANR	4850736	Callee	dprintf		4850537	0					
ANR	4850737	Identifier	dprintf		4850537	0					
ANR	4850738	ArgumentList	D_FULLDEBUG		4850537	1					
ANR	4850739	Argument	D_FULLDEBUG		4850537	0					
ANR	4850740	Identifier	D_FULLDEBUG		4850537	0					
ANR	4850741	Argument	"""windows_suspend_process: OpenThread error: %u\\n"""		4850537	1					
ANR	4850742	PrimaryExpression	"""windows_suspend_process: OpenThread error: %u\\n"""		4850537	0					
ANR	4850743	Argument	GetLastError ( )		4850537	2					
ANR	4850744	CallExpression	GetLastError ( )		4850537	0					
ANR	4850745	Callee	GetLastError		4850537	0					
ANR	4850746	Identifier	GetLastError		4850537	0					
ANR	4850747	ArgumentList			4850537	1					
ANR	4850748	ContinueStatement	continue ;	250:5:6959:6967	4850537	2	True				
ANR	4850749	Statement	st	255:4:7053:7054	4850537	2	True				
ANR	4850750	Statement	=	255:7:7056:7056	4850537	3	True				
ANR	4850751	Statement	new	255:9:7058:7060	4850537	4	True				
ANR	4850752	ExpressionStatement	SuspendedThread	255:13:7062:7077	4850537	5	True				
ANR	4850753	Identifier	SuspendedThread		4850537	0					
ANR	4850754	ExpressionStatement	ASSERT ( st != NULL )	256:4:7083:7101	4850537	6	True				
ANR	4850755	CallExpression	ASSERT ( st != NULL )		4850537	0					
ANR	4850756	Callee	ASSERT		4850537	0					
ANR	4850757	Identifier	ASSERT		4850537	0					
ANR	4850758	ArgumentList	st != NULL		4850537	1					
ANR	4850759	Argument	st != NULL		4850537	0					
ANR	4850760	EqualityExpression	st != NULL		4850537	0		!=			
ANR	4850761	Identifier	st		4850537	0					
ANR	4850762	Identifier	NULL		4850537	1					
ANR	4850763	ExpressionStatement	st -> handle = handle	257:4:7107:7126	4850537	7	True				
ANR	4850764	AssignmentExpression	st -> handle = handle		4850537	0		=			
ANR	4850765	PtrMemberAccess	st -> handle		4850537	0					
ANR	4850766	Identifier	st		4850537	0					
ANR	4850767	Identifier	handle		4850537	1					
ANR	4850768	Identifier	handle		4850537	1					
ANR	4850769	ExpressionStatement	st -> num_suspends = 0	258:4:7132:7152	4850537	8	True				
ANR	4850770	AssignmentExpression	st -> num_suspends = 0		4850537	0		=			
ANR	4850771	PtrMemberAccess	st -> num_suspends		4850537	0					
ANR	4850772	Identifier	st		4850537	0					
ANR	4850773	Identifier	num_suspends		4850537	1					
ANR	4850774	PrimaryExpression	0		4850537	1					
ANR	4850775	ExpressionStatement	"ret = sp -> insert ( tid_array [ i ] , st )"	259:4:7158:7192	4850537	9	True				
ANR	4850776	AssignmentExpression	"ret = sp -> insert ( tid_array [ i ] , st )"		4850537	0		=			
ANR	4850777	Identifier	ret		4850537	0					
ANR	4850778	CallExpression	"sp -> insert ( tid_array [ i ] , st )"		4850537	1					
ANR	4850779	Callee	sp -> insert		4850537	0					
ANR	4850780	PtrMemberAccess	sp -> insert		4850537	0					
ANR	4850781	Identifier	sp		4850537	0					
ANR	4850782	Identifier	insert		4850537	1					
ANR	4850783	ArgumentList	tid_array [ i ]		4850537	1					
ANR	4850784	Argument	tid_array [ i ]		4850537	0					
ANR	4850785	ArrayIndexing	tid_array [ i ]		4850537	0					
ANR	4850786	Identifier	tid_array		4850537	0					
ANR	4850787	Identifier	i		4850537	1					
ANR	4850788	Argument	st		4850537	1					
ANR	4850789	Identifier	st		4850537	0					
ANR	4850790	ExpressionStatement	ASSERT ( ret != - 1 )	260:4:7198:7215	4850537	10	True				
ANR	4850791	CallExpression	ASSERT ( ret != - 1 )		4850537	0					
ANR	4850792	Callee	ASSERT		4850537	0					
ANR	4850793	Identifier	ASSERT		4850537	0					
ANR	4850794	ArgumentList	ret != - 1		4850537	1					
ANR	4850795	Argument	ret != - 1		4850537	0					
ANR	4850796	EqualityExpression	ret != - 1		4850537	0		!=			
ANR	4850797	Identifier	ret		4850537	0					
ANR	4850798	UnaryOperationExpression	- 1		4850537	1					
ANR	4850799	UnaryOperator	-		4850537	0					
ANR	4850800	PrimaryExpression	1		4850537	1					
ANR	4850801	IdentifierDeclStatement	DWORD result = SuspendThread ( st -> handle ) ;	265:3:7261:7301	4850537	3	True				
ANR	4850802	IdentifierDecl	result = SuspendThread ( st -> handle )		4850537	0					
ANR	4850803	IdentifierDeclType	DWORD		4850537	0					
ANR	4850804	Identifier	result		4850537	1					
ANR	4850805	AssignmentExpression	result = SuspendThread ( st -> handle )		4850537	2		=			
ANR	4850806	Identifier	result		4850537	0					
ANR	4850807	CallExpression	SuspendThread ( st -> handle )		4850537	1					
ANR	4850808	Callee	SuspendThread		4850537	0					
ANR	4850809	Identifier	SuspendThread		4850537	0					
ANR	4850810	ArgumentList	st -> handle		4850537	1					
ANR	4850811	Argument	st -> handle		4850537	0					
ANR	4850812	PtrMemberAccess	st -> handle		4850537	0					
ANR	4850813	Identifier	st		4850537	0					
ANR	4850814	Identifier	handle		4850537	1					
ANR	4850815	IfStatement	if ( result == ( DWORD ) - 1 )		4850537	4					
ANR	4850816	Condition	result == ( DWORD ) - 1	266:7:7310:7328	4850537	0	True				
ANR	4850817	EqualityExpression	result == ( DWORD ) - 1		4850537	0		==			
ANR	4850818	Identifier	result		4850537	0					
ANR	4850819	CastExpression	( DWORD ) - 1		4850537	1					
ANR	4850820	CastTarget	DWORD		4850537	0					
ANR	4850821	UnaryOperationExpression	- 1		4850537	1					
ANR	4850822	UnaryOperator	-		4850537	0					
ANR	4850823	PrimaryExpression	1		4850537	1					
ANR	4850824	CompoundStatement		73:28:2004:2004	4850537	1					
ANR	4850825	ExpressionStatement	finished = false	270:4:7398:7414	4850537	0	True				
ANR	4850826	AssignmentExpression	finished = false		4850537	0		=			
ANR	4850827	Identifier	finished		4850537	0					
ANR	4850828	Identifier	false		4850537	1					
ANR	4850829	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""windows_suspend_process: SuspendThread error: %u\\n"" , GetLastError ( ) )"	271:4:7420:7522	4850537	1	True				
ANR	4850830	CallExpression	"dprintf ( D_FULLDEBUG , ""windows_suspend_process: SuspendThread error: %u\\n"" , GetLastError ( ) )"		4850537	0					
ANR	4850831	Callee	dprintf		4850537	0					
ANR	4850832	Identifier	dprintf		4850537	0					
ANR	4850833	ArgumentList	D_FULLDEBUG		4850537	1					
ANR	4850834	Argument	D_FULLDEBUG		4850537	0					
ANR	4850835	Identifier	D_FULLDEBUG		4850537	0					
ANR	4850836	Argument	"""windows_suspend_process: SuspendThread error: %u\\n"""		4850537	1					
ANR	4850837	PrimaryExpression	"""windows_suspend_process: SuspendThread error: %u\\n"""		4850537	0					
ANR	4850838	Argument	GetLastError ( )		4850537	2					
ANR	4850839	CallExpression	GetLastError ( )		4850537	0					
ANR	4850840	Callee	GetLastError		4850537	0					
ANR	4850841	Identifier	GetLastError		4850537	0					
ANR	4850842	ArgumentList			4850537	1					
ANR	4850843	ContinueStatement	continue ;	274:4:7528:7536	4850537	2	True				
ANR	4850844	IfStatement	if ( result == 0 )		4850537	5					
ANR	4850845	Condition	result == 0	281:7:7730:7740	4850537	0	True				
ANR	4850846	EqualityExpression	result == 0		4850537	0		==			
ANR	4850847	Identifier	result		4850537	0					
ANR	4850848	PrimaryExpression	0		4850537	1					
ANR	4850849	CompoundStatement		88:20:2416:2416	4850537	1					
ANR	4850850	ExpressionStatement	finished = false	282:4:7749:7765	4850537	0	True				
ANR	4850851	AssignmentExpression	finished = false		4850537	0		=			
ANR	4850852	Identifier	finished		4850537	0					
ANR	4850853	Identifier	false		4850537	1					
ANR	4850854	ExpressionStatement	st -> num_suspends ++	287:3:7843:7861	4850537	6	True				
ANR	4850855	PostIncDecOperationExpression	st -> num_suspends ++		4850537	0					
ANR	4850856	PtrMemberAccess	st -> num_suspends		4850537	0					
ANR	4850857	Identifier	st		4850537	0					
ANR	4850858	Identifier	num_suspends		4850537	1					
ANR	4850859	IncDec	++		4850537	1					
ANR	4850860	ReturnStatement	return true ;	291:1:7872:7883	4850537	9	True				
ANR	4850861	Identifier	true		4850537	0					
ANR	4850862	ReturnType	bool		4850537	1					
ANR	4850863	Identifier	windows_suspend		4850537	2					
ANR	4850864	ParameterList	DWORD pid		4850537	3					
ANR	4850865	Parameter	DWORD pid	193:16:5315:5323	4850537	0	True				
ANR	4850866	ParameterType	DWORD		4850537	0					
ANR	4850867	Identifier	pid		4850537	1					
ANR	4850868	CFGEntryNode	ENTRY		4850537		True				
ANR	4850869	CFGExitNode	EXIT		4850537		True				
ANR	4850870	Symbol	* sp		4850537						
ANR	4850871	Symbol	sys_info		4850537						
ANR	4850872	Symbol	st -> num_suspends		4850537						
ANR	4850873	Symbol	* st		4850537						
ANR	4850874	Symbol	pid		4850537						
ANR	4850875	Symbol	st -> handle		4850537						
ANR	4850876	Symbol	result		4850537						
ANR	4850877	Symbol	sp -> insert		4850537						
ANR	4850878	Symbol	* tid_array		4850537						
ANR	4850879	Symbol	tid_array		4850537						
ANR	4850880	Symbol	sp		4850537						
ANR	4850881	Symbol	ret		4850537						
ANR	4850882	Symbol	st		4850537						
ANR	4850883	Symbol	NULL		4850537						
ANR	4850884	Symbol	THREAD_SUSPEND_RESUME		4850537						
ANR	4850885	Symbol	false		4850537						
ANR	4850886	Symbol	i		4850537						
ANR	4850887	Symbol	finished		4850537						
ANR	4850888	Symbol	handle		4850537						
ANR	4850889	Symbol	D_FULLDEBUG		4850537						
ANR	4850890	Symbol	suspended_processes . insert		4850537						
ANR	4850891	Symbol	OpenThread		4850537						
ANR	4850892	Symbol	sys_info . GetTIDs		4850537						
ANR	4850893	Symbol	* i		4850537						
ANR	4850894	Symbol	num_tids		4850537						
ANR	4850895	Symbol	GetLastError		4850537						
ANR	4850896	Symbol	suspended_processes		4850537						
ANR	4850897	Symbol	suspended_processes . lookup		4850537						
ANR	4850898	Symbol	true		4850537						
ANR	4850899	Symbol	SuspendThread		4850537						
ANR	4850900	Symbol	FALSE		4850537						
ANR	4850901	Symbol	hash_func		4850537						
ANR	4850902	Symbol	sp -> lookup		4850537						
ANR	4850903	Function	windows_continue	294:0:7888:9097							
ANR	4850904	FunctionDef	windows_continue (DWORD pid)		4850903	0					
ANR	4850905	CompoundStatement		296:0:7921:9097	4850903	0					
ANR	4850906	IdentifierDeclStatement	SuspendedProcess * sp ;	299:1:7992:8012	4850903	0	True				
ANR	4850907	IdentifierDecl	* sp		4850903	0					
ANR	4850908	IdentifierDeclType	SuspendedProcess *		4850903	0					
ANR	4850909	Identifier	sp		4850903	1					
ANR	4850910	IdentifierDeclStatement	"int ret = suspended_processes . lookup ( pid , sp ) ;"	300:1:8015:8060	4850903	1	True				
ANR	4850911	IdentifierDecl	"ret = suspended_processes . lookup ( pid , sp )"		4850903	0					
ANR	4850912	IdentifierDeclType	int		4850903	0					
ANR	4850913	Identifier	ret		4850903	1					
ANR	4850914	AssignmentExpression	"ret = suspended_processes . lookup ( pid , sp )"		4850903	2		=			
ANR	4850915	Identifier	ret		4850903	0					
ANR	4850916	CallExpression	"suspended_processes . lookup ( pid , sp )"		4850903	1					
ANR	4850917	Callee	suspended_processes . lookup		4850903	0					
ANR	4850918	MemberAccess	suspended_processes . lookup		4850903	0					
ANR	4850919	Identifier	suspended_processes		4850903	0					
ANR	4850920	Identifier	lookup		4850903	1					
ANR	4850921	ArgumentList	pid		4850903	1					
ANR	4850922	Argument	pid		4850903	0					
ANR	4850923	Identifier	pid		4850903	0					
ANR	4850924	Argument	sp		4850903	1					
ANR	4850925	Identifier	sp		4850903	0					
ANR	4850926	IfStatement	if ( ret == - 1 )		4850903	2					
ANR	4850927	Condition	ret == - 1	305:5:8220:8228	4850903	0	True				
ANR	4850928	EqualityExpression	ret == - 1		4850903	0		==			
ANR	4850929	Identifier	ret		4850903	0					
ANR	4850930	UnaryOperationExpression	- 1		4850903	1					
ANR	4850931	UnaryOperator	-		4850903	0					
ANR	4850932	PrimaryExpression	1		4850903	1					
ANR	4850933	ReturnStatement	return false ;	306:4:8235:8247	4850903	1	True				
ANR	4850934	Identifier	false		4850903	0					
ANR	4850935	IdentifierDeclStatement	SuspendedThread * st ;	308:1:8251:8270	4850903	3	True				
ANR	4850936	IdentifierDecl	* st		4850903	0					
ANR	4850937	IdentifierDeclType	SuspendedThread *		4850903	0					
ANR	4850938	Identifier	st		4850903	1					
ANR	4850939	ExpressionStatement	sp -> startIterations ( )	309:1:8273:8294	4850903	4	True				
ANR	4850940	CallExpression	sp -> startIterations ( )		4850903	0					
ANR	4850941	Callee	sp -> startIterations		4850903	0					
ANR	4850942	PtrMemberAccess	sp -> startIterations		4850903	0					
ANR	4850943	Identifier	sp		4850903	0					
ANR	4850944	Identifier	startIterations		4850903	1					
ANR	4850945	ArgumentList			4850903	1					
ANR	4850946	WhileStatement	while ( sp -> iterate ( st ) )		4850903	5					
ANR	4850947	Condition	sp -> iterate ( st )	310:8:8304:8318	4850903	0	True				
ANR	4850948	CallExpression	sp -> iterate ( st )		4850903	0					
ANR	4850949	Callee	sp -> iterate		4850903	0					
ANR	4850950	PtrMemberAccess	sp -> iterate		4850903	0					
ANR	4850951	Identifier	sp		4850903	0					
ANR	4850952	Identifier	iterate		4850903	1					
ANR	4850953	ArgumentList	st		4850903	1					
ANR	4850954	Argument	st		4850903	0					
ANR	4850955	Identifier	st		4850903	0					
ANR	4850956	CompoundStatement		15:25:399:399	4850903	1					
ANR	4850957	ForStatement	for ( int i = 0 ; i < st -> num_suspends ; i ++ )		4850903	0					
ANR	4850958	ForInit	int i = 0 ;	315:7:8427:8436	4850903	0	True				
ANR	4850959	IdentifierDeclStatement	int i = 0 ;		4850903	0					
ANR	4850960	IdentifierDecl	i = 0		4850903	0					
ANR	4850961	IdentifierDeclType	int		4850903	0					
ANR	4850962	Identifier	i		4850903	1					
ANR	4850963	AssignmentExpression	i = 0		4850903	2		=			
ANR	4850964	Identifier	i		4850903	0					
ANR	4850965	PrimaryExpression	0		4850903	1					
ANR	4850966	Condition	i < st -> num_suspends	315:18:8438:8457	4850903	1	True				
ANR	4850967	RelationalExpression	i < st -> num_suspends		4850903	0		<			
ANR	4850968	Identifier	i		4850903	0					
ANR	4850969	PtrMemberAccess	st -> num_suspends		4850903	1					
ANR	4850970	Identifier	st		4850903	0					
ANR	4850971	Identifier	num_suspends		4850903	1					
ANR	4850972	PostIncDecOperationExpression	i ++	315:40:8460:8462	4850903	2	True				
ANR	4850973	Identifier	i		4850903	0					
ANR	4850974	IncDec	++		4850903	1					
ANR	4850975	CompoundStatement		20:45:543:543	4850903	3					
ANR	4850976	IfStatement	if ( ResumeThread ( st -> handle ) == ( DWORD ) - 1 )		4850903	0					
ANR	4850977	Condition	ResumeThread ( st -> handle ) == ( DWORD ) - 1	316:7:8474:8510	4850903	0	True				
ANR	4850978	EqualityExpression	ResumeThread ( st -> handle ) == ( DWORD ) - 1		4850903	0		==			
ANR	4850979	CallExpression	ResumeThread ( st -> handle )		4850903	0					
ANR	4850980	Callee	ResumeThread		4850903	0					
ANR	4850981	Identifier	ResumeThread		4850903	0					
ANR	4850982	ArgumentList	st -> handle		4850903	1					
ANR	4850983	Argument	st -> handle		4850903	0					
ANR	4850984	PtrMemberAccess	st -> handle		4850903	0					
ANR	4850985	Identifier	st		4850903	0					
ANR	4850986	Identifier	handle		4850903	1					
ANR	4850987	CastExpression	( DWORD ) - 1		4850903	1					
ANR	4850988	CastTarget	DWORD		4850903	0					
ANR	4850989	UnaryOperationExpression	- 1		4850903	1					
ANR	4850990	UnaryOperator	-		4850903	0					
ANR	4850991	PrimaryExpression	1		4850903	1					
ANR	4850992	CompoundStatement		21:46:591:591	4850903	1					
ANR	4850993	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""windows_continue_process: ResumeThread error: %u\\n"" , GetLastError ( ) )"	317:4:8519:8633	4850903	0	True				
ANR	4850994	CallExpression	"dprintf ( D_FULLDEBUG , ""windows_continue_process: ResumeThread error: %u\\n"" , GetLastError ( ) )"		4850903	0					
ANR	4850995	Callee	dprintf		4850903	0					
ANR	4850996	Identifier	dprintf		4850903	0					
ANR	4850997	ArgumentList	D_FULLDEBUG		4850903	1					
ANR	4850998	Argument	D_FULLDEBUG		4850903	0					
ANR	4850999	Identifier	D_FULLDEBUG		4850903	0					
ANR	4851000	Argument	"""windows_continue_process: ResumeThread error: %u\\n"""		4850903	1					
ANR	4851001	PrimaryExpression	"""windows_continue_process: ResumeThread error: %u\\n"""		4850903	0					
ANR	4851002	Argument	GetLastError ( )		4850903	2					
ANR	4851003	CallExpression	GetLastError ( )		4850903	0					
ANR	4851004	Callee	GetLastError		4850903	0					
ANR	4851005	Identifier	GetLastError		4850903	0					
ANR	4851006	ArgumentList			4850903	1					
ANR	4851007	IfStatement	if ( CloseHandle ( st -> handle ) == FALSE )		4850903	1					
ANR	4851008	Condition	CloseHandle ( st -> handle ) == FALSE	325:6:8693:8724	4850903	0	True				
ANR	4851009	EqualityExpression	CloseHandle ( st -> handle ) == FALSE		4850903	0		==			
ANR	4851010	CallExpression	CloseHandle ( st -> handle )		4850903	0					
ANR	4851011	Callee	CloseHandle		4850903	0					
ANR	4851012	Identifier	CloseHandle		4850903	0					
ANR	4851013	ArgumentList	st -> handle		4850903	1					
ANR	4851014	Argument	st -> handle		4850903	0					
ANR	4851015	PtrMemberAccess	st -> handle		4850903	0					
ANR	4851016	Identifier	st		4850903	0					
ANR	4851017	Identifier	handle		4850903	1					
ANR	4851018	Identifier	FALSE		4850903	1					
ANR	4851019	CompoundStatement		30:40:805:805	4850903	1					
ANR	4851020	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""windows_continue_process: CloseHandle error: %u\\n"" , GetLastError ( ) )"	326:3:8732:8843	4850903	0	True				
ANR	4851021	CallExpression	"dprintf ( D_FULLDEBUG , ""windows_continue_process: CloseHandle error: %u\\n"" , GetLastError ( ) )"		4850903	0					
ANR	4851022	Callee	dprintf		4850903	0					
ANR	4851023	Identifier	dprintf		4850903	0					
ANR	4851024	ArgumentList	D_FULLDEBUG		4850903	1					
ANR	4851025	Argument	D_FULLDEBUG		4850903	0					
ANR	4851026	Identifier	D_FULLDEBUG		4850903	0					
ANR	4851027	Argument	"""windows_continue_process: CloseHandle error: %u\\n"""		4850903	1					
ANR	4851028	PrimaryExpression	"""windows_continue_process: CloseHandle error: %u\\n"""		4850903	0					
ANR	4851029	Argument	GetLastError ( )		4850903	2					
ANR	4851030	CallExpression	GetLastError ( )		4850903	0					
ANR	4851031	Callee	GetLastError		4850903	0					
ANR	4851032	Identifier	GetLastError		4850903	0					
ANR	4851033	ArgumentList			4850903	1					
ANR	4851034	Statement	delete	333:2:8899:8904	4850903	2	True				
ANR	4851035	ExpressionStatement	st	333:9:8906:8908	4850903	3	True				
ANR	4851036	Identifier	st		4850903	0					
ANR	4851037	Statement	delete	339:1:9011:9016	4850903	6	True				
ANR	4851038	ExpressionStatement	sp	339:8:9018:9020	4850903	7	True				
ANR	4851039	Identifier	sp		4850903	0					
ANR	4851040	ExpressionStatement	ret = suspended_processes . remove ( pid )	340:1:9023:9060	4850903	8	True				
ANR	4851041	AssignmentExpression	ret = suspended_processes . remove ( pid )		4850903	0		=			
ANR	4851042	Identifier	ret		4850903	0					
ANR	4851043	CallExpression	suspended_processes . remove ( pid )		4850903	1					
ANR	4851044	Callee	suspended_processes . remove		4850903	0					
ANR	4851045	MemberAccess	suspended_processes . remove		4850903	0					
ANR	4851046	Identifier	suspended_processes		4850903	0					
ANR	4851047	Identifier	remove		4850903	1					
ANR	4851048	ArgumentList	pid		4850903	1					
ANR	4851049	Argument	pid		4850903	0					
ANR	4851050	Identifier	pid		4850903	0					
ANR	4851051	ExpressionStatement	ASSERT ( ret != - 1 )	341:1:9063:9080	4850903	9	True				
ANR	4851052	CallExpression	ASSERT ( ret != - 1 )		4850903	0					
ANR	4851053	Callee	ASSERT		4850903	0					
ANR	4851054	Identifier	ASSERT		4850903	0					
ANR	4851055	ArgumentList	ret != - 1		4850903	1					
ANR	4851056	Argument	ret != - 1		4850903	0					
ANR	4851057	EqualityExpression	ret != - 1		4850903	0		!=			
ANR	4851058	Identifier	ret		4850903	0					
ANR	4851059	UnaryOperationExpression	- 1		4850903	1					
ANR	4851060	UnaryOperator	-		4850903	0					
ANR	4851061	PrimaryExpression	1		4850903	1					
ANR	4851062	ReturnStatement	return true ;	343:1:9084:9095	4850903	10	True				
ANR	4851063	Identifier	true		4850903	0					
ANR	4851064	ReturnType	bool		4850903	1					
ANR	4851065	Identifier	windows_continue		4850903	2					
ANR	4851066	ParameterList	DWORD pid		4850903	3					
ANR	4851067	Parameter	DWORD pid	295:17:7910:7918	4850903	0	True				
ANR	4851068	ParameterType	DWORD		4850903	0					
ANR	4851069	Identifier	pid		4850903	1					
ANR	4851070	CFGEntryNode	ENTRY		4850903		True				
ANR	4851071	CFGExitNode	EXIT		4850903		True				
ANR	4851072	Symbol	ret		4850903						
ANR	4851073	Symbol	* sp		4850903						
ANR	4851074	Symbol	st		4850903						
ANR	4851075	Symbol	st -> num_suspends		4850903						
ANR	4851076	Symbol	* st		4850903						
ANR	4851077	Symbol	CloseHandle		4850903						
ANR	4851078	Symbol	false		4850903						
ANR	4851079	Symbol	i		4850903						
ANR	4851080	Symbol	pid		4850903						
ANR	4851081	Symbol	D_FULLDEBUG		4850903						
ANR	4851082	Symbol	st -> handle		4850903						
ANR	4851083	Symbol	suspended_processes . remove		4850903						
ANR	4851084	Symbol	ResumeThread		4850903						
ANR	4851085	Symbol	GetLastError		4850903						
ANR	4851086	Symbol	suspended_processes		4850903						
ANR	4851087	Symbol	suspended_processes . lookup		4850903						
ANR	4851088	Symbol	true		4850903						
ANR	4851089	Symbol	FALSE		4850903						
ANR	4851090	Symbol	sp		4850903						
ANR	4851091	Symbol	sp -> iterate		4850903						
