command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1349782	File	data/converged/CVE-2011-4930_htcondor/fileindex2.cpp								
ANR	1349783	Function	FileIndex :: FileIndex	29:0:953:1091							
ANR	1349784	FunctionDef	FileIndex :: FileIndex ()		1349783	0					
ANR	1349785	CompoundStatement		30:0:976:1091	1349783	0					
ANR	1349786	IdentifierDeclStatement	int index ;	31:2:980:989	1349783	0	True				
ANR	1349787	IdentifierDecl	index		1349783	0					
ANR	1349788	IdentifierDeclType	int		1349783	0					
ANR	1349789	Identifier	index		1349783	1					
ANR	1349790	ExpressionStatement	capacity_used = 0.0	33:2:994:1013	1349783	1	True				
ANR	1349791	AssignmentExpression	capacity_used = 0.0		1349783	0		=			
ANR	1349792	Identifier	capacity_used		1349783	0					
ANR	1349793	PrimaryExpression	0.0		1349783	1					
ANR	1349794	ForStatement	for ( index = 0 ; index < MAX_HASH_SIZE ; index ++ )		1349783	2					
ANR	1349795	ForInit	index = 0 ;	34:7:1022:1029	1349783	0	True				
ANR	1349796	AssignmentExpression	index = 0		1349783	0		=			
ANR	1349797	Identifier	index		1349783	0					
ANR	1349798	PrimaryExpression	0		1349783	1					
ANR	1349799	Condition	index < MAX_HASH_SIZE	34:16:1031:1049	1349783	1	True				
ANR	1349800	RelationalExpression	index < MAX_HASH_SIZE		1349783	0		<			
ANR	1349801	Identifier	index		1349783	0					
ANR	1349802	Identifier	MAX_HASH_SIZE		1349783	1					
ANR	1349803	PostIncDecOperationExpression	index ++	34:37:1052:1058	1349783	2	True				
ANR	1349804	Identifier	index		1349783	0					
ANR	1349805	IncDec	++		1349783	1					
ANR	1349806	ExpressionStatement	hash_table [ index ] = NULL	35:4:1065:1089	1349783	3	True				
ANR	1349807	AssignmentExpression	hash_table [ index ] = NULL		1349783	0		=			
ANR	1349808	ArrayIndexing	hash_table [ index ]		1349783	0					
ANR	1349809	Identifier	hash_table		1349783	0					
ANR	1349810	Identifier	index		1349783	1					
ANR	1349811	Identifier	NULL		1349783	1					
ANR	1349812	Identifier	FileIndex :: FileIndex		1349783	1					
ANR	1349813	ParameterList			1349783	2					
ANR	1349814	CFGEntryNode	ENTRY		1349783		True				
ANR	1349815	CFGExitNode	EXIT		1349783		True				
ANR	1349816	Symbol	hash_table		1349783						
ANR	1349817	Symbol	NULL		1349783						
ANR	1349818	Symbol	MAX_HASH_SIZE		1349783						
ANR	1349819	Symbol	* index		1349783						
ANR	1349820	Symbol	* hash_table		1349783						
ANR	1349821	Symbol	index		1349783						
ANR	1349822	Symbol	capacity_used		1349783						
ANR	1349823	Function	FileIndex :: ~FileIndex	39:0:1095:1139							
ANR	1349824	FunctionDef	FileIndex :: ~FileIndex ()		1349823	0					
ANR	1349825	CompoundStatement		40:0:1119:1139	1349823	0					
ANR	1349826	ExpressionStatement	DestroyIndex ( )	41:2:1123:1137	1349823	0	True				
ANR	1349827	CallExpression	DestroyIndex ( )		1349823	0					
ANR	1349828	Callee	DestroyIndex		1349823	0					
ANR	1349829	Identifier	DestroyIndex		1349823	0					
ANR	1349830	ArgumentList			1349823	1					
ANR	1349831	Identifier	FileIndex :: ~FileIndex		1349823	1					
ANR	1349832	ParameterList			1349823	2					
ANR	1349833	CFGEntryNode	ENTRY		1349823		True				
ANR	1349834	CFGExitNode	EXIT		1349823		True				
ANR	1349835	Function	FileIndex :: Hash	45:0:1143:1360							
ANR	1349836	FunctionDef	FileIndex :: Hash (struct in_addr machine_IP)		1349835	0					
ANR	1349837	CompoundStatement		46:0:1190:1360	1349835	0					
ANR	1349838	IdentifierDeclStatement	int val ;	47:2:1194:1203	1349835	0	True				
ANR	1349839	IdentifierDecl	val		1349835	0					
ANR	1349840	IdentifierDeclType	int		1349835	0					
ANR	1349841	Identifier	val		1349835	1					
ANR	1349842	IdentifierDeclStatement	unsigned char * c_ptr ;	48:2:1207:1227	1349835	1	True				
ANR	1349843	IdentifierDecl	* c_ptr		1349835	0					
ANR	1349844	IdentifierDeclType	unsigned char *		1349835	0					
ANR	1349845	Identifier	c_ptr		1349835	1					
ANR	1349846	ExpressionStatement	c_ptr = ( unsigned char * ) & machine_IP . s_addr	50:2:1232:1275	1349835	2	True				
ANR	1349847	AssignmentExpression	c_ptr = ( unsigned char * ) & machine_IP . s_addr		1349835	0		=			
ANR	1349848	Identifier	c_ptr		1349835	0					
ANR	1349849	CastExpression	( unsigned char * ) & machine_IP . s_addr		1349835	1					
ANR	1349850	CastTarget	unsigned char *		1349835	0					
ANR	1349851	UnaryOperationExpression	& machine_IP . s_addr		1349835	1					
ANR	1349852	UnaryOperator	&		1349835	0					
ANR	1349853	MemberAccess	machine_IP . s_addr		1349835	1					
ANR	1349854	Identifier	machine_IP		1349835	0					
ANR	1349855	Identifier	s_addr		1349835	1					
ANR	1349856	ExpressionStatement	val = * c_ptr + * ( c_ptr + 1 ) + * ( c_ptr + 2 ) + * ( c_ptr + 3 )	51:2:1279:1330	1349835	3	True				
ANR	1349857	AssignmentExpression	val = * c_ptr + * ( c_ptr + 1 ) + * ( c_ptr + 2 ) + * ( c_ptr + 3 )		1349835	0		=			
ANR	1349858	Identifier	val		1349835	0					
ANR	1349859	AdditiveExpression	* c_ptr + * ( c_ptr + 1 ) + * ( c_ptr + 2 ) + * ( c_ptr + 3 )		1349835	1		+			
ANR	1349860	UnaryOperationExpression	* c_ptr		1349835	0					
ANR	1349861	UnaryOperator	*		1349835	0					
ANR	1349862	Identifier	c_ptr		1349835	1					
ANR	1349863	AdditiveExpression	* ( c_ptr + 1 ) + * ( c_ptr + 2 ) + * ( c_ptr + 3 )		1349835	1		+			
ANR	1349864	UnaryOperationExpression	* ( c_ptr + 1 )		1349835	0					
ANR	1349865	UnaryOperator	*		1349835	0					
ANR	1349866	AdditiveExpression	c_ptr + 1		1349835	1		+			
ANR	1349867	Identifier	c_ptr		1349835	0					
ANR	1349868	PrimaryExpression	1		1349835	1					
ANR	1349869	AdditiveExpression	* ( c_ptr + 2 ) + * ( c_ptr + 3 )		1349835	1		+			
ANR	1349870	UnaryOperationExpression	* ( c_ptr + 2 )		1349835	0					
ANR	1349871	UnaryOperator	*		1349835	0					
ANR	1349872	AdditiveExpression	c_ptr + 2		1349835	1		+			
ANR	1349873	Identifier	c_ptr		1349835	0					
ANR	1349874	PrimaryExpression	2		1349835	1					
ANR	1349875	UnaryOperationExpression	* ( c_ptr + 3 )		1349835	1					
ANR	1349876	UnaryOperator	*		1349835	0					
ANR	1349877	AdditiveExpression	c_ptr + 3		1349835	1		+			
ANR	1349878	Identifier	c_ptr		1349835	0					
ANR	1349879	PrimaryExpression	3		1349835	1					
ANR	1349880	ReturnStatement	return val % MAX_HASH_SIZE ;	52:2:1334:1358	1349835	4	True				
ANR	1349881	MultiplicativeExpression	val % MAX_HASH_SIZE		1349835	0		%			
ANR	1349882	Identifier	val		1349835	0					
ANR	1349883	Identifier	MAX_HASH_SIZE		1349835	1					
ANR	1349884	ReturnType	int		1349835	1					
ANR	1349885	Identifier	FileIndex :: Hash		1349835	2					
ANR	1349886	ParameterList	struct in_addr machine_IP		1349835	3					
ANR	1349887	Parameter	struct in_addr machine_IP	45:20:1163:1187	1349835	0	True				
ANR	1349888	ParameterType	struct in_addr		1349835	0					
ANR	1349889	Identifier	machine_IP		1349835	1					
ANR	1349890	CFGEntryNode	ENTRY		1349835		True				
ANR	1349891	CFGExitNode	EXIT		1349835		True				
ANR	1349892	Symbol	val		1349835						
ANR	1349893	Symbol	machine_IP		1349835						
ANR	1349894	Symbol	MAX_HASH_SIZE		1349835						
ANR	1349895	Symbol	& machine_IP		1349835						
ANR	1349896	Symbol	* ( c_ptr + 1 )		1349835						
ANR	1349897	Symbol	* ( c_ptr + 2 )		1349835						
ANR	1349898	Symbol	* ( c_ptr + 3 )		1349835						
ANR	1349899	Symbol	* c_ptr		1349835						
ANR	1349900	Symbol	c_ptr		1349835						
ANR	1349901	Symbol	& machine_IP . s_addr		1349835						
ANR	1349902	Function	FileIndex :: FindOrAddMachine	56:0:1364:2902							
ANR	1349903	FunctionDef	"FileIndex :: FindOrAddMachine (struct in_addr machine_IP , int AddFlag)"		1349902	0					
ANR	1349904	CompoundStatement		58:0:1499:2902	1349902	0					
ANR	1349905	IdentifierDeclStatement	int hash_bucket ;	59:2:1503:1528	1349902	0	True				
ANR	1349906	IdentifierDecl	hash_bucket		1349902	0					
ANR	1349907	IdentifierDeclType	int		1349902	0					
ANR	1349908	Identifier	hash_bucket		1349902	1					
ANR	1349909	IdentifierDeclStatement	int temp ;	60:2:1532:1550	1349902	1	True				
ANR	1349910	IdentifierDecl	temp		1349902	0					
ANR	1349911	IdentifierDeclType	int		1349902	0					
ANR	1349912	Identifier	temp		1349902	1					
ANR	1349913	IdentifierDeclStatement	machine_node * trail = NULL ;	61:2:1554:1578	1349902	2	True				
ANR	1349914	IdentifierDecl	* trail = NULL		1349902	0					
ANR	1349915	IdentifierDeclType	machine_node *		1349902	0					
ANR	1349916	Identifier	trail		1349902	1					
ANR	1349917	AssignmentExpression	* trail = NULL		1349902	2		=			
ANR	1349918	Identifier	NULL		1349902	0					
ANR	1349919	Identifier	NULL		1349902	1					
ANR	1349920	IdentifierDeclStatement	machine_node * ptr ;	62:2:1582:1599	1349902	3	True				
ANR	1349921	IdentifierDecl	* ptr		1349902	0					
ANR	1349922	IdentifierDeclType	machine_node *		1349902	0					
ANR	1349923	Identifier	ptr		1349902	1					
ANR	1349924	IdentifierDeclStatement	char pathname [ MAX_PATHNAME_LENGTH ] ;	63:2:1603:1646	1349902	4	True				
ANR	1349925	IdentifierDecl	pathname [ MAX_PATHNAME_LENGTH ]		1349902	0					
ANR	1349926	IdentifierDeclType	char [ MAX_PATHNAME_LENGTH ]		1349902	0					
ANR	1349927	Identifier	pathname		1349902	1					
ANR	1349928	Identifier	MAX_PATHNAME_LENGTH		1349902	2					
ANR	1349929	ExpressionStatement	hash_bucket = Hash ( machine_IP )	65:2:1651:1681	1349902	5	True				
ANR	1349930	AssignmentExpression	hash_bucket = Hash ( machine_IP )		1349902	0		=			
ANR	1349931	Identifier	hash_bucket		1349902	0					
ANR	1349932	CallExpression	Hash ( machine_IP )		1349902	1					
ANR	1349933	Callee	Hash		1349902	0					
ANR	1349934	Identifier	Hash		1349902	0					
ANR	1349935	ArgumentList	machine_IP		1349902	1					
ANR	1349936	Argument	machine_IP		1349902	0					
ANR	1349937	Identifier	machine_IP		1349902	0					
ANR	1349938	ExpressionStatement	ptr = hash_table [ hash_bucket ]	66:2:1685:1714	1349902	6	True				
ANR	1349939	AssignmentExpression	ptr = hash_table [ hash_bucket ]		1349902	0		=			
ANR	1349940	Identifier	ptr		1349902	0					
ANR	1349941	ArrayIndexing	hash_table [ hash_bucket ]		1349902	1					
ANR	1349942	Identifier	hash_table		1349902	0					
ANR	1349943	Identifier	hash_bucket		1349902	1					
ANR	1349944	WhileStatement	while ( ( ptr != NULL ) && ( ptr -> machine_IP . s_addr != machine_IP . s_addr ) )		1349902	7					
ANR	1349945	Condition	( ptr != NULL ) && ( ptr -> machine_IP . s_addr != machine_IP . s_addr )	67:9:1725:1786	1349902	0	True				
ANR	1349946	AndExpression	( ptr != NULL ) && ( ptr -> machine_IP . s_addr != machine_IP . s_addr )		1349902	0		&&			
ANR	1349947	EqualityExpression	ptr != NULL		1349902	0		!=			
ANR	1349948	Identifier	ptr		1349902	0					
ANR	1349949	Identifier	NULL		1349902	1					
ANR	1349950	EqualityExpression	ptr -> machine_IP . s_addr != machine_IP . s_addr		1349902	1		!=			
ANR	1349951	MemberAccess	ptr -> machine_IP . s_addr		1349902	0					
ANR	1349952	PtrMemberAccess	ptr -> machine_IP		1349902	0					
ANR	1349953	Identifier	ptr		1349902	0					
ANR	1349954	Identifier	machine_IP		1349902	1					
ANR	1349955	Identifier	s_addr		1349902	1					
ANR	1349956	MemberAccess	machine_IP . s_addr		1349902	1					
ANR	1349957	Identifier	machine_IP		1349902	0					
ANR	1349958	Identifier	s_addr		1349902	1					
ANR	1349959	CompoundStatement		11:4:293:293	1349902	1					
ANR	1349960	ExpressionStatement	trail = ptr	69:6:1801:1812	1349902	0	True				
ANR	1349961	AssignmentExpression	trail = ptr		1349902	0		=			
ANR	1349962	Identifier	trail		1349902	0					
ANR	1349963	Identifier	ptr		1349902	1					
ANR	1349964	ExpressionStatement	temp = ( ptr -> machine_IP . s_addr < machine_IP . s_addr )	70:6:1820:1871	1349902	1	True				
ANR	1349965	AssignmentExpression	temp = ( ptr -> machine_IP . s_addr < machine_IP . s_addr )		1349902	0		=			
ANR	1349966	Identifier	temp		1349902	0					
ANR	1349967	RelationalExpression	ptr -> machine_IP . s_addr < machine_IP . s_addr		1349902	1		<			
ANR	1349968	MemberAccess	ptr -> machine_IP . s_addr		1349902	0					
ANR	1349969	PtrMemberAccess	ptr -> machine_IP		1349902	0					
ANR	1349970	Identifier	ptr		1349902	0					
ANR	1349971	Identifier	machine_IP		1349902	1					
ANR	1349972	Identifier	s_addr		1349902	1					
ANR	1349973	MemberAccess	machine_IP . s_addr		1349902	1					
ANR	1349974	Identifier	machine_IP		1349902	0					
ANR	1349975	Identifier	s_addr		1349902	1					
ANR	1349976	IfStatement	if ( temp )		1349902	2					
ANR	1349977	Condition	temp	71:10:1883:1886	1349902	0	True				
ANR	1349978	Identifier	temp		1349902	0					
ANR	1349979	ExpressionStatement	ptr = ptr -> right	72:8:1897:1913	1349902	1	True				
ANR	1349980	AssignmentExpression	ptr = ptr -> right		1349902	0		=			
ANR	1349981	Identifier	ptr		1349902	0					
ANR	1349982	PtrMemberAccess	ptr -> right		1349902	1					
ANR	1349983	Identifier	ptr		1349902	0					
ANR	1349984	Identifier	right		1349902	1					
ANR	1349985	ElseStatement	else		1349902	0					
ANR	1349986	ExpressionStatement	ptr = ptr -> left	74:8:1934:1949	1349902	0	True				
ANR	1349987	AssignmentExpression	ptr = ptr -> left		1349902	0		=			
ANR	1349988	Identifier	ptr		1349902	0					
ANR	1349989	PtrMemberAccess	ptr -> left		1349902	1					
ANR	1349990	Identifier	ptr		1349902	0					
ANR	1349991	Identifier	left		1349902	1					
ANR	1349992	IfStatement	if ( AddFlag == ADD )		1349902	8					
ANR	1349993	Condition	AddFlag == ADD	76:6:1963:1976	1349902	0	True				
ANR	1349994	EqualityExpression	AddFlag == ADD		1349902	0		==			
ANR	1349995	Identifier	AddFlag		1349902	0					
ANR	1349996	Identifier	ADD		1349902	1					
ANR	1349997	CompoundStatement		20:4:483:483	1349902	1					
ANR	1349998	IfStatement	if ( ptr == NULL )		1349902	0					
ANR	1349999	Condition	ptr == NULL	78:10:1995:2005	1349902	0	True				
ANR	1350000	EqualityExpression	ptr == NULL		1349902	0		==			
ANR	1350001	Identifier	ptr		1349902	0					
ANR	1350002	Identifier	NULL		1349902	1					
ANR	1350003	CompoundStatement		22:8:516:516	1349902	1					
ANR	1350004	Statement	ptr	80:10:2028:2030	1349902	0	True				
ANR	1350005	Statement	=	80:14:2032:2032	1349902	1	True				
ANR	1350006	Statement	new	80:16:2034:2036	1349902	2	True				
ANR	1350007	ExpressionStatement	machine_node	80:20:2038:2050	1349902	3	True				
ANR	1350008	Identifier	machine_node		1349902	0					
ANR	1350009	IfStatement	if ( ptr == NULL )		1349902	4					
ANR	1350010	Condition	ptr == NULL	81:14:2066:2076	1349902	0	True				
ANR	1350011	EqualityExpression	ptr == NULL		1349902	0		==			
ANR	1350012	Identifier	ptr		1349902	0					
ANR	1350013	Identifier	NULL		1349902	1					
ANR	1350014	CompoundStatement		25:12:591:591	1349902	1					
ANR	1350015	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: cannot allocate sufficient dynamic memory\\n"" )"	83:14:2107:2178	1349902	0	True				
ANR	1350016	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: cannot allocate sufficient dynamic memory\\n"" )"		1349902	0					
ANR	1350017	Callee	dprintf		1349902	0					
ANR	1350018	Identifier	dprintf		1349902	0					
ANR	1350019	ArgumentList	D_ALWAYS		1349902	1					
ANR	1350020	Argument	D_ALWAYS		1349902	0					
ANR	1350021	Identifier	D_ALWAYS		1349902	0					
ANR	1350022	Argument	"""ERROR: cannot allocate sufficient dynamic memory\\n"""		1349902	1					
ANR	1350023	PrimaryExpression	"""ERROR: cannot allocate sufficient dynamic memory\\n"""		1349902	0					
ANR	1350024	ExpressionStatement	exit ( DYNAMIC_ALLOCATION )	84:14:2194:2218	1349902	1	True				
ANR	1350025	CallExpression	exit ( DYNAMIC_ALLOCATION )		1349902	0					
ANR	1350026	Callee	exit		1349902	0					
ANR	1350027	Identifier	exit		1349902	0					
ANR	1350028	ArgumentList	DYNAMIC_ALLOCATION		1349902	1					
ANR	1350029	Argument	DYNAMIC_ALLOCATION		1349902	0					
ANR	1350030	Identifier	DYNAMIC_ALLOCATION		1349902	0					
ANR	1350031	ExpressionStatement	ptr -> left = NULL	86:10:2244:2260	1349902	5	True				
ANR	1350032	AssignmentExpression	ptr -> left = NULL		1349902	0		=			
ANR	1350033	PtrMemberAccess	ptr -> left		1349902	0					
ANR	1350034	Identifier	ptr		1349902	0					
ANR	1350035	Identifier	left		1349902	1					
ANR	1350036	Identifier	NULL		1349902	1					
ANR	1350037	ExpressionStatement	ptr -> right = NULL	87:10:2272:2289	1349902	6	True				
ANR	1350038	AssignmentExpression	ptr -> right = NULL		1349902	0		=			
ANR	1350039	PtrMemberAccess	ptr -> right		1349902	0					
ANR	1350040	Identifier	ptr		1349902	0					
ANR	1350041	Identifier	right		1349902	1					
ANR	1350042	Identifier	NULL		1349902	1					
ANR	1350043	ExpressionStatement	ptr -> machine_IP = machine_IP	88:10:2301:2329	1349902	7	True				
ANR	1350044	AssignmentExpression	ptr -> machine_IP = machine_IP		1349902	0		=			
ANR	1350045	PtrMemberAccess	ptr -> machine_IP		1349902	0					
ANR	1350046	Identifier	ptr		1349902	0					
ANR	1350047	Identifier	machine_IP		1349902	1					
ANR	1350048	Identifier	machine_IP		1349902	1					
ANR	1350049	ExpressionStatement	ptr -> owner_root = NULL	89:10:2341:2363	1349902	8	True				
ANR	1350050	AssignmentExpression	ptr -> owner_root = NULL		1349902	0		=			
ANR	1350051	PtrMemberAccess	ptr -> owner_root		1349902	0					
ANR	1350052	Identifier	ptr		1349902	0					
ANR	1350053	Identifier	owner_root		1349902	1					
ANR	1350054	Identifier	NULL		1349902	1					
ANR	1350055	IfStatement	if ( trail == NULL )		1349902	9					
ANR	1350056	Condition	trail == NULL	90:14:2379:2391	1349902	0	True				
ANR	1350057	EqualityExpression	trail == NULL		1349902	0		==			
ANR	1350058	Identifier	trail		1349902	0					
ANR	1350059	Identifier	NULL		1349902	1					
ANR	1350060	ExpressionStatement	hash_table [ hash_bucket ] = ptr	91:12:2406:2435	1349902	1	True				
ANR	1350061	AssignmentExpression	hash_table [ hash_bucket ] = ptr		1349902	0		=			
ANR	1350062	ArrayIndexing	hash_table [ hash_bucket ]		1349902	0					
ANR	1350063	Identifier	hash_table		1349902	0					
ANR	1350064	Identifier	hash_bucket		1349902	1					
ANR	1350065	Identifier	ptr		1349902	1					
ANR	1350066	ElseStatement	else		1349902	0					
ANR	1350067	IfStatement	if ( temp )		1349902	0					
ANR	1350068	Condition	temp	92:19:2456:2459	1349902	0	True				
ANR	1350069	Identifier	temp		1349902	0					
ANR	1350070	ExpressionStatement	trail -> right = ptr	93:12:2474:2492	1349902	1	True				
ANR	1350071	AssignmentExpression	trail -> right = ptr		1349902	0		=			
ANR	1350072	PtrMemberAccess	trail -> right		1349902	0					
ANR	1350073	Identifier	trail		1349902	0					
ANR	1350074	Identifier	right		1349902	1					
ANR	1350075	Identifier	ptr		1349902	1					
ANR	1350076	ElseStatement	else		1349902	0					
ANR	1350077	ExpressionStatement	trail -> left = ptr	95:12:2521:2538	1349902	0	True				
ANR	1350078	AssignmentExpression	trail -> left = ptr		1349902	0		=			
ANR	1350079	PtrMemberAccess	trail -> left		1349902	0					
ANR	1350080	Identifier	trail		1349902	0					
ANR	1350081	Identifier	left		1349902	1					
ANR	1350082	Identifier	ptr		1349902	1					
ANR	1350083	ExpressionStatement	"sprintf ( pathname , ""%s%s"" , LOCAL_DRIVE_PREFIX , inet_ntoa ( machine_IP ) )"	96:10:2550:2618	1349902	10	True				
ANR	1350084	CallExpression	"sprintf ( pathname , ""%s%s"" , LOCAL_DRIVE_PREFIX , inet_ntoa ( machine_IP ) )"		1349902	0					
ANR	1350085	Callee	sprintf		1349902	0					
ANR	1350086	Identifier	sprintf		1349902	0					
ANR	1350087	ArgumentList	pathname		1349902	1					
ANR	1350088	Argument	pathname		1349902	0					
ANR	1350089	Identifier	pathname		1349902	0					
ANR	1350090	Argument	"""%s%s"""		1349902	1					
ANR	1350091	PrimaryExpression	"""%s%s"""		1349902	0					
ANR	1350092	Argument	LOCAL_DRIVE_PREFIX		1349902	2					
ANR	1350093	Identifier	LOCAL_DRIVE_PREFIX		1349902	0					
ANR	1350094	Argument	inet_ntoa ( machine_IP )		1349902	3					
ANR	1350095	CallExpression	inet_ntoa ( machine_IP )		1349902	0					
ANR	1350096	Callee	inet_ntoa		1349902	0					
ANR	1350097	Identifier	inet_ntoa		1349902	0					
ANR	1350098	ArgumentList	machine_IP		1349902	1					
ANR	1350099	Argument	machine_IP		1349902	0					
ANR	1350100	Identifier	machine_IP		1349902	0					
ANR	1350101	ExpressionStatement	errno = 0	97:3:2623:2632	1349902	11	True				
ANR	1350102	AssignmentExpression	errno = 0		1349902	0		=			
ANR	1350103	Identifier	errno		1349902	0					
ANR	1350104	PrimaryExpression	0		1349902	1					
ANR	1350105	IfStatement	"if ( mkdir ( pathname , ( mode_t ) INT_MAX ) != 0 )"		1349902	12					
ANR	1350106	Condition	"mkdir ( pathname , ( mode_t ) INT_MAX ) != 0"	98:14:2648:2685	1349902	0	True				
ANR	1350107	EqualityExpression	"mkdir ( pathname , ( mode_t ) INT_MAX ) != 0"		1349902	0		!=			
ANR	1350108	CallExpression	"mkdir ( pathname , ( mode_t ) INT_MAX )"		1349902	0					
ANR	1350109	Callee	mkdir		1349902	0					
ANR	1350110	Identifier	mkdir		1349902	0					
ANR	1350111	ArgumentList	pathname		1349902	1					
ANR	1350112	Argument	pathname		1349902	0					
ANR	1350113	Identifier	pathname		1349902	0					
ANR	1350114	Argument	( mode_t ) INT_MAX		1349902	1					
ANR	1350115	CastExpression	( mode_t ) INT_MAX		1349902	0					
ANR	1350116	CastTarget	mode_t		1349902	0					
ANR	1350117	Identifier	INT_MAX		1349902	1					
ANR	1350118	PrimaryExpression	0		1349902	1					
ANR	1350119	IfStatement	if ( errno != EEXIST )		1349902	1					
ANR	1350120	Condition	errno != EEXIST	99:16:2704:2718	1349902	0	True				
ANR	1350121	EqualityExpression	errno != EEXIST		1349902	0		!=			
ANR	1350122	Identifier	errno		1349902	0					
ANR	1350123	Identifier	EEXIST		1349902	1					
ANR	1350124	CompoundStatement		43:14:1235:1235	1349902	1					
ANR	1350125	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: cannot make directory '%s'\\n"" , pathname )"	101:16:2753:2819	1349902	0	True				
ANR	1350126	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: cannot make directory '%s'\\n"" , pathname )"		1349902	0					
ANR	1350127	Callee	dprintf		1349902	0					
ANR	1350128	Identifier	dprintf		1349902	0					
ANR	1350129	ArgumentList	D_ALWAYS		1349902	1					
ANR	1350130	Argument	D_ALWAYS		1349902	0					
ANR	1350131	Identifier	D_ALWAYS		1349902	0					
ANR	1350132	Argument	"""ERROR: cannot make directory '%s'\\n"""		1349902	1					
ANR	1350133	PrimaryExpression	"""ERROR: cannot make directory '%s'\\n"""		1349902	0					
ANR	1350134	Argument	pathname		1349902	2					
ANR	1350135	Identifier	pathname		1349902	0					
ANR	1350136	ExpressionStatement	exit ( MKDIR_ERROR )	102:16:2837:2854	1349902	1	True				
ANR	1350137	CallExpression	exit ( MKDIR_ERROR )		1349902	0					
ANR	1350138	Callee	exit		1349902	0					
ANR	1350139	Identifier	exit		1349902	0					
ANR	1350140	ArgumentList	MKDIR_ERROR		1349902	1					
ANR	1350141	Argument	MKDIR_ERROR		1349902	0					
ANR	1350142	Identifier	MKDIR_ERROR		1349902	0					
ANR	1350143	ReturnStatement	return ptr ;	106:2:2890:2900	1349902	9	True				
ANR	1350144	Identifier	ptr		1349902	0					
ANR	1350145	ReturnType	machine_node *		1349902	1					
ANR	1350146	Identifier	FileIndex :: FindOrAddMachine		1349902	2					
ANR	1350147	ParameterList	"struct in_addr machine_IP , int AddFlag"		1349902	3					
ANR	1350148	Parameter	struct in_addr machine_IP	56:42:1406:1430	1349902	0	True				
ANR	1350149	ParameterType	struct in_addr		1349902	0					
ANR	1350150	Identifier	machine_IP		1349902	1					
ANR	1350151	Parameter	int AddFlag	57:42:1475:1496	1349902	1	True				
ANR	1350152	ParameterType	int		1349902	0					
ANR	1350153	Identifier	AddFlag		1349902	1					
ANR	1350154	CFGEntryNode	ENTRY		1349902		True				
ANR	1350155	CFGExitNode	EXIT		1349902		True				
ANR	1350156	Symbol	ADD		1349902						
ANR	1350157	Symbol	EEXIST		1349902						
ANR	1350158	Symbol	hash_table		1349902						
ANR	1350159	Symbol	hash_bucket		1349902						
ANR	1350160	Symbol	LOCAL_DRIVE_PREFIX		1349902						
ANR	1350161	Symbol	MKDIR_ERROR		1349902						
ANR	1350162	Symbol	* hash_table		1349902						
ANR	1350163	Symbol	ptr -> machine_IP		1349902						
ANR	1350164	Symbol	ptr -> left		1349902						
ANR	1350165	Symbol	Hash		1349902						
ANR	1350166	Symbol	trail		1349902						
ANR	1350167	Symbol	DYNAMIC_ALLOCATION		1349902						
ANR	1350168	Symbol	* ptr		1349902						
ANR	1350169	Symbol	INT_MAX		1349902						
ANR	1350170	Symbol	machine_IP . s_addr		1349902						
ANR	1350171	Symbol	ptr -> right		1349902						
ANR	1350172	Symbol	mkdir		1349902						
ANR	1350173	Symbol	temp		1349902						
ANR	1350174	Symbol	errno		1349902						
ANR	1350175	Symbol	NULL		1349902						
ANR	1350176	Symbol	machine_IP		1349902						
ANR	1350177	Symbol	D_ALWAYS		1349902						
ANR	1350178	Symbol	* trail		1349902						
ANR	1350179	Symbol	inet_ntoa		1349902						
ANR	1350180	Symbol	ptr		1349902						
ANR	1350181	Symbol	pathname		1349902						
ANR	1350182	Symbol	trail -> right		1349902						
ANR	1350183	Symbol	AddFlag		1349902						
ANR	1350184	Symbol	* hash_bucket		1349902						
ANR	1350185	Symbol	ptr -> owner_root		1349902						
ANR	1350186	Symbol	trail -> left		1349902						
ANR	1350187	Symbol	ptr -> machine_IP . s_addr		1349902						
ANR	1350188	Function	FileIndex :: FindOrAddOwner	110:0:2906:4455							
ANR	1350189	FunctionDef	"FileIndex :: FindOrAddOwner (machine_node * m , const char * owner_name , int AddFlag)"		1350188	0					
ANR	1350190	CompoundStatement		113:0:3086:4455	1350188	0					
ANR	1350191	IdentifierDeclStatement	owner_node * trail = NULL ;	114:2:3090:3112	1350188	0	True				
ANR	1350192	IdentifierDecl	* trail = NULL		1350188	0					
ANR	1350193	IdentifierDeclType	owner_node *		1350188	0					
ANR	1350194	Identifier	trail		1350188	1					
ANR	1350195	AssignmentExpression	* trail = NULL		1350188	2		=			
ANR	1350196	Identifier	NULL		1350188	0					
ANR	1350197	Identifier	NULL		1350188	1					
ANR	1350198	IdentifierDeclStatement	owner_node * ptr ;	115:2:3116:3131	1350188	1	True				
ANR	1350199	IdentifierDecl	* ptr		1350188	0					
ANR	1350200	IdentifierDeclType	owner_node *		1350188	0					
ANR	1350201	Identifier	ptr		1350188	1					
ANR	1350202	IdentifierDeclStatement	int temp ;	116:2:3135:3151	1350188	2	True				
ANR	1350203	IdentifierDecl	temp		1350188	0					
ANR	1350204	IdentifierDeclType	int		1350188	0					
ANR	1350205	Identifier	temp		1350188	1					
ANR	1350206	IdentifierDeclStatement	char pathname [ MAX_PATHNAME_LENGTH ] ;	117:2:3155:3196	1350188	3	True				
ANR	1350207	IdentifierDecl	pathname [ MAX_PATHNAME_LENGTH ]		1350188	0					
ANR	1350208	IdentifierDeclType	char [ MAX_PATHNAME_LENGTH ]		1350188	0					
ANR	1350209	Identifier	pathname		1350188	1					
ANR	1350210	Identifier	MAX_PATHNAME_LENGTH		1350188	2					
ANR	1350211	ExpressionStatement	ptr = m -> owner_root	119:2:3201:3220	1350188	4	True				
ANR	1350212	AssignmentExpression	ptr = m -> owner_root		1350188	0		=			
ANR	1350213	Identifier	ptr		1350188	0					
ANR	1350214	PtrMemberAccess	m -> owner_root		1350188	1					
ANR	1350215	Identifier	m		1350188	0					
ANR	1350216	Identifier	owner_root		1350188	1					
ANR	1350217	WhileStatement	"while ( ( ptr != NULL ) && ( ( temp = strncmp ( owner_name , ptr -> owner_name , MAX_NAME_LENGTH ) ) != 0 ) )"		1350188	5					
ANR	1350218	Condition	"( ptr != NULL ) && ( ( temp = strncmp ( owner_name , ptr -> owner_name , MAX_NAME_LENGTH ) ) != 0 )"	120:9:3231:3355	1350188	0	True				
ANR	1350219	AndExpression	"( ptr != NULL ) && ( ( temp = strncmp ( owner_name , ptr -> owner_name , MAX_NAME_LENGTH ) ) != 0 )"		1350188	0		&&			
ANR	1350220	EqualityExpression	ptr != NULL		1350188	0		!=			
ANR	1350221	Identifier	ptr		1350188	0					
ANR	1350222	Identifier	NULL		1350188	1					
ANR	1350223	EqualityExpression	"( temp = strncmp ( owner_name , ptr -> owner_name , MAX_NAME_LENGTH ) ) != 0"		1350188	1		!=			
ANR	1350224	AssignmentExpression	"temp = strncmp ( owner_name , ptr -> owner_name , MAX_NAME_LENGTH )"		1350188	0		=			
ANR	1350225	Identifier	temp		1350188	0					
ANR	1350226	CallExpression	"strncmp ( owner_name , ptr -> owner_name , MAX_NAME_LENGTH )"		1350188	1					
ANR	1350227	Callee	strncmp		1350188	0					
ANR	1350228	Identifier	strncmp		1350188	0					
ANR	1350229	ArgumentList	owner_name		1350188	1					
ANR	1350230	Argument	owner_name		1350188	0					
ANR	1350231	Identifier	owner_name		1350188	0					
ANR	1350232	Argument	ptr -> owner_name		1350188	1					
ANR	1350233	PtrMemberAccess	ptr -> owner_name		1350188	0					
ANR	1350234	Identifier	ptr		1350188	0					
ANR	1350235	Identifier	owner_name		1350188	1					
ANR	1350236	Argument	MAX_NAME_LENGTH		1350188	2					
ANR	1350237	Identifier	MAX_NAME_LENGTH		1350188	0					
ANR	1350238	PrimaryExpression	0		1350188	1					
ANR	1350239	CompoundStatement		10:4:275:275	1350188	1					
ANR	1350240	ExpressionStatement	trail = ptr	123:6:3370:3381	1350188	0	True				
ANR	1350241	AssignmentExpression	trail = ptr		1350188	0		=			
ANR	1350242	Identifier	trail		1350188	0					
ANR	1350243	Identifier	ptr		1350188	1					
ANR	1350244	IfStatement	if ( temp < 0 )		1350188	1					
ANR	1350245	Condition	temp < 0	124:10:3393:3400	1350188	0	True				
ANR	1350246	RelationalExpression	temp < 0		1350188	0		<			
ANR	1350247	Identifier	temp		1350188	0					
ANR	1350248	PrimaryExpression	0		1350188	1					
ANR	1350249	ExpressionStatement	ptr = ptr -> left	125:8:3411:3426	1350188	1	True				
ANR	1350250	AssignmentExpression	ptr = ptr -> left		1350188	0		=			
ANR	1350251	Identifier	ptr		1350188	0					
ANR	1350252	PtrMemberAccess	ptr -> left		1350188	1					
ANR	1350253	Identifier	ptr		1350188	0					
ANR	1350254	Identifier	left		1350188	1					
ANR	1350255	ElseStatement	else		1350188	0					
ANR	1350256	ExpressionStatement	ptr = ptr -> right	127:8:3447:3463	1350188	0	True				
ANR	1350257	AssignmentExpression	ptr = ptr -> right		1350188	0		=			
ANR	1350258	Identifier	ptr		1350188	0					
ANR	1350259	PtrMemberAccess	ptr -> right		1350188	1					
ANR	1350260	Identifier	ptr		1350188	0					
ANR	1350261	Identifier	right		1350188	1					
ANR	1350262	IfStatement	if ( AddFlag == ADD )		1350188	6					
ANR	1350263	Condition	AddFlag == ADD	129:6:3477:3490	1350188	0	True				
ANR	1350264	EqualityExpression	AddFlag == ADD		1350188	0		==			
ANR	1350265	Identifier	AddFlag		1350188	0					
ANR	1350266	Identifier	ADD		1350188	1					
ANR	1350267	CompoundStatement		18:4:410:410	1350188	1					
ANR	1350268	IfStatement	if ( ptr == NULL )		1350188	0					
ANR	1350269	Condition	ptr == NULL	131:10:3509:3519	1350188	0	True				
ANR	1350270	EqualityExpression	ptr == NULL		1350188	0		==			
ANR	1350271	Identifier	ptr		1350188	0					
ANR	1350272	Identifier	NULL		1350188	1					
ANR	1350273	CompoundStatement		20:8:443:443	1350188	1					
ANR	1350274	Statement	ptr	133:10:3542:3544	1350188	0	True				
ANR	1350275	Statement	=	133:14:3546:3546	1350188	1	True				
ANR	1350276	Statement	new	133:16:3548:3550	1350188	2	True				
ANR	1350277	ExpressionStatement	owner_node	133:20:3552:3562	1350188	3	True				
ANR	1350278	Identifier	owner_node		1350188	0					
ANR	1350279	IfStatement	if ( ptr == NULL )		1350188	4					
ANR	1350280	Condition	ptr == NULL	134:14:3578:3588	1350188	0	True				
ANR	1350281	EqualityExpression	ptr == NULL		1350188	0		==			
ANR	1350282	Identifier	ptr		1350188	0					
ANR	1350283	Identifier	NULL		1350188	1					
ANR	1350284	CompoundStatement		23:12:516:516	1350188	1					
ANR	1350285	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: cannot allocate sufficient dynamic memory\\n"" )"	136:14:3619:3690	1350188	0	True				
ANR	1350286	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: cannot allocate sufficient dynamic memory\\n"" )"		1350188	0					
ANR	1350287	Callee	dprintf		1350188	0					
ANR	1350288	Identifier	dprintf		1350188	0					
ANR	1350289	ArgumentList	D_ALWAYS		1350188	1					
ANR	1350290	Argument	D_ALWAYS		1350188	0					
ANR	1350291	Identifier	D_ALWAYS		1350188	0					
ANR	1350292	Argument	"""ERROR: cannot allocate sufficient dynamic memory\\n"""		1350188	1					
ANR	1350293	PrimaryExpression	"""ERROR: cannot allocate sufficient dynamic memory\\n"""		1350188	0					
ANR	1350294	ExpressionStatement	exit ( DYNAMIC_ALLOCATION )	137:14:3706:3730	1350188	1	True				
ANR	1350295	CallExpression	exit ( DYNAMIC_ALLOCATION )		1350188	0					
ANR	1350296	Callee	exit		1350188	0					
ANR	1350297	Identifier	exit		1350188	0					
ANR	1350298	ArgumentList	DYNAMIC_ALLOCATION		1350188	1					
ANR	1350299	Argument	DYNAMIC_ALLOCATION		1350188	0					
ANR	1350300	Identifier	DYNAMIC_ALLOCATION		1350188	0					
ANR	1350301	ExpressionStatement	ptr -> left = NULL	139:10:3756:3772	1350188	5	True				
ANR	1350302	AssignmentExpression	ptr -> left = NULL		1350188	0		=			
ANR	1350303	PtrMemberAccess	ptr -> left		1350188	0					
ANR	1350304	Identifier	ptr		1350188	0					
ANR	1350305	Identifier	left		1350188	1					
ANR	1350306	Identifier	NULL		1350188	1					
ANR	1350307	ExpressionStatement	ptr -> right = NULL	140:10:3784:3801	1350188	6	True				
ANR	1350308	AssignmentExpression	ptr -> right = NULL		1350188	0		=			
ANR	1350309	PtrMemberAccess	ptr -> right		1350188	0					
ANR	1350310	Identifier	ptr		1350188	0					
ANR	1350311	Identifier	right		1350188	1					
ANR	1350312	Identifier	NULL		1350188	1					
ANR	1350313	ExpressionStatement	"strncpy ( ptr -> owner_name , owner_name , MAX_NAME_LENGTH )"	141:10:3813:3866	1350188	7	True				
ANR	1350314	CallExpression	"strncpy ( ptr -> owner_name , owner_name , MAX_NAME_LENGTH )"		1350188	0					
ANR	1350315	Callee	strncpy		1350188	0					
ANR	1350316	Identifier	strncpy		1350188	0					
ANR	1350317	ArgumentList	ptr -> owner_name		1350188	1					
ANR	1350318	Argument	ptr -> owner_name		1350188	0					
ANR	1350319	PtrMemberAccess	ptr -> owner_name		1350188	0					
ANR	1350320	Identifier	ptr		1350188	0					
ANR	1350321	Identifier	owner_name		1350188	1					
ANR	1350322	Argument	owner_name		1350188	1					
ANR	1350323	Identifier	owner_name		1350188	0					
ANR	1350324	Argument	MAX_NAME_LENGTH		1350188	2					
ANR	1350325	Identifier	MAX_NAME_LENGTH		1350188	0					
ANR	1350326	ExpressionStatement	ptr -> file_root = NULL	142:10:3878:3899	1350188	8	True				
ANR	1350327	AssignmentExpression	ptr -> file_root = NULL		1350188	0		=			
ANR	1350328	PtrMemberAccess	ptr -> file_root		1350188	0					
ANR	1350329	Identifier	ptr		1350188	0					
ANR	1350330	Identifier	file_root		1350188	1					
ANR	1350331	Identifier	NULL		1350188	1					
ANR	1350332	IfStatement	if ( trail == NULL )		1350188	9					
ANR	1350333	Condition	trail == NULL	143:14:3915:3927	1350188	0	True				
ANR	1350334	EqualityExpression	trail == NULL		1350188	0		==			
ANR	1350335	Identifier	trail		1350188	0					
ANR	1350336	Identifier	NULL		1350188	1					
ANR	1350337	ExpressionStatement	m -> owner_root = ptr	144:12:3942:3961	1350188	1	True				
ANR	1350338	AssignmentExpression	m -> owner_root = ptr		1350188	0		=			
ANR	1350339	PtrMemberAccess	m -> owner_root		1350188	0					
ANR	1350340	Identifier	m		1350188	0					
ANR	1350341	Identifier	owner_root		1350188	1					
ANR	1350342	Identifier	ptr		1350188	1					
ANR	1350343	ElseStatement	else		1350188	0					
ANR	1350344	IfStatement	if ( temp < 0 )		1350188	0					
ANR	1350345	Condition	temp < 0	145:19:3982:3989	1350188	0	True				
ANR	1350346	RelationalExpression	temp < 0		1350188	0		<			
ANR	1350347	Identifier	temp		1350188	0					
ANR	1350348	PrimaryExpression	0		1350188	1					
ANR	1350349	ExpressionStatement	trail -> left = ptr	146:12:4004:4021	1350188	1	True				
ANR	1350350	AssignmentExpression	trail -> left = ptr		1350188	0		=			
ANR	1350351	PtrMemberAccess	trail -> left		1350188	0					
ANR	1350352	Identifier	trail		1350188	0					
ANR	1350353	Identifier	left		1350188	1					
ANR	1350354	Identifier	ptr		1350188	1					
ANR	1350355	ElseStatement	else		1350188	0					
ANR	1350356	ExpressionStatement	trail -> right = ptr	148:12:4050:4068	1350188	0	True				
ANR	1350357	AssignmentExpression	trail -> right = ptr		1350188	0		=			
ANR	1350358	PtrMemberAccess	trail -> right		1350188	0					
ANR	1350359	Identifier	trail		1350188	0					
ANR	1350360	Identifier	right		1350188	1					
ANR	1350361	Identifier	ptr		1350188	1					
ANR	1350362	ExpressionStatement	"sprintf ( pathname , ""%s%s/%s"" , LOCAL_DRIVE_PREFIX , inet_ntoa ( m -> machine_IP ) , owner_name )"	149:10:4080:4171	1350188	10	True				
ANR	1350363	CallExpression	"sprintf ( pathname , ""%s%s/%s"" , LOCAL_DRIVE_PREFIX , inet_ntoa ( m -> machine_IP ) , owner_name )"		1350188	0					
ANR	1350364	Callee	sprintf		1350188	0					
ANR	1350365	Identifier	sprintf		1350188	0					
ANR	1350366	ArgumentList	pathname		1350188	1					
ANR	1350367	Argument	pathname		1350188	0					
ANR	1350368	Identifier	pathname		1350188	0					
ANR	1350369	Argument	"""%s%s/%s"""		1350188	1					
ANR	1350370	PrimaryExpression	"""%s%s/%s"""		1350188	0					
ANR	1350371	Argument	LOCAL_DRIVE_PREFIX		1350188	2					
ANR	1350372	Identifier	LOCAL_DRIVE_PREFIX		1350188	0					
ANR	1350373	Argument	inet_ntoa ( m -> machine_IP )		1350188	3					
ANR	1350374	CallExpression	inet_ntoa ( m -> machine_IP )		1350188	0					
ANR	1350375	Callee	inet_ntoa		1350188	0					
ANR	1350376	Identifier	inet_ntoa		1350188	0					
ANR	1350377	ArgumentList	m -> machine_IP		1350188	1					
ANR	1350378	Argument	m -> machine_IP		1350188	0					
ANR	1350379	PtrMemberAccess	m -> machine_IP		1350188	0					
ANR	1350380	Identifier	m		1350188	0					
ANR	1350381	Identifier	machine_IP		1350188	1					
ANR	1350382	Argument	owner_name		1350188	4					
ANR	1350383	Identifier	owner_name		1350188	0					
ANR	1350384	ExpressionStatement	errno = 0	151:3:4176:4185	1350188	11	True				
ANR	1350385	AssignmentExpression	errno = 0		1350188	0		=			
ANR	1350386	Identifier	errno		1350188	0					
ANR	1350387	PrimaryExpression	0		1350188	1					
ANR	1350388	IfStatement	"if ( mkdir ( pathname , ( mode_t ) INT_MAX ) != 0 )"		1350188	12					
ANR	1350389	Condition	"mkdir ( pathname , ( mode_t ) INT_MAX ) != 0"	152:14:4201:4238	1350188	0	True				
ANR	1350390	EqualityExpression	"mkdir ( pathname , ( mode_t ) INT_MAX ) != 0"		1350188	0		!=			
ANR	1350391	CallExpression	"mkdir ( pathname , ( mode_t ) INT_MAX )"		1350188	0					
ANR	1350392	Callee	mkdir		1350188	0					
ANR	1350393	Identifier	mkdir		1350188	0					
ANR	1350394	ArgumentList	pathname		1350188	1					
ANR	1350395	Argument	pathname		1350188	0					
ANR	1350396	Identifier	pathname		1350188	0					
ANR	1350397	Argument	( mode_t ) INT_MAX		1350188	1					
ANR	1350398	CastExpression	( mode_t ) INT_MAX		1350188	0					
ANR	1350399	CastTarget	mode_t		1350188	0					
ANR	1350400	Identifier	INT_MAX		1350188	1					
ANR	1350401	PrimaryExpression	0		1350188	1					
ANR	1350402	IfStatement	if ( errno != EEXIST )		1350188	1					
ANR	1350403	Condition	errno != EEXIST	153:16:4257:4271	1350188	0	True				
ANR	1350404	EqualityExpression	errno != EEXIST		1350188	0		!=			
ANR	1350405	Identifier	errno		1350188	0					
ANR	1350406	Identifier	EEXIST		1350188	1					
ANR	1350407	CompoundStatement		42:14:1201:1201	1350188	1					
ANR	1350408	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: cannot make directory '%s'\\n"" , pathname )"	155:16:4306:4372	1350188	0	True				
ANR	1350409	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: cannot make directory '%s'\\n"" , pathname )"		1350188	0					
ANR	1350410	Callee	dprintf		1350188	0					
ANR	1350411	Identifier	dprintf		1350188	0					
ANR	1350412	ArgumentList	D_ALWAYS		1350188	1					
ANR	1350413	Argument	D_ALWAYS		1350188	0					
ANR	1350414	Identifier	D_ALWAYS		1350188	0					
ANR	1350415	Argument	"""ERROR: cannot make directory '%s'\\n"""		1350188	1					
ANR	1350416	PrimaryExpression	"""ERROR: cannot make directory '%s'\\n"""		1350188	0					
ANR	1350417	Argument	pathname		1350188	2					
ANR	1350418	Identifier	pathname		1350188	0					
ANR	1350419	ExpressionStatement	exit ( MKDIR_ERROR )	156:16:4390:4407	1350188	1	True				
ANR	1350420	CallExpression	exit ( MKDIR_ERROR )		1350188	0					
ANR	1350421	Callee	exit		1350188	0					
ANR	1350422	Identifier	exit		1350188	0					
ANR	1350423	ArgumentList	MKDIR_ERROR		1350188	1					
ANR	1350424	Argument	MKDIR_ERROR		1350188	0					
ANR	1350425	Identifier	MKDIR_ERROR		1350188	0					
ANR	1350426	ReturnStatement	return ptr ;	160:2:4443:4453	1350188	7	True				
ANR	1350427	Identifier	ptr		1350188	0					
ANR	1350428	ReturnType	owner_node *		1350188	1					
ANR	1350429	Identifier	FileIndex :: FindOrAddOwner		1350188	2					
ANR	1350430	ParameterList	"machine_node * m , const char * owner_name , int AddFlag"		1350188	3					
ANR	1350431	Parameter	machine_node * m	110:38:2944:2958	1350188	0	True				
ANR	1350432	ParameterType	machine_node *		1350188	0					
ANR	1350433	Identifier	m		1350188	1					
ANR	1350434	Parameter	const char * owner_name	111:38:2999:3022	1350188	1	True				
ANR	1350435	ParameterType	const char *		1350188	0					
ANR	1350436	Identifier	owner_name		1350188	1					
ANR	1350437	Parameter	int AddFlag	112:38:3063:3083	1350188	2	True				
ANR	1350438	ParameterType	int		1350188	0					
ANR	1350439	Identifier	AddFlag		1350188	1					
ANR	1350440	CFGEntryNode	ENTRY		1350188		True				
ANR	1350441	CFGExitNode	EXIT		1350188		True				
ANR	1350442	Symbol	ADD		1350188						
ANR	1350443	Symbol	EEXIST		1350188						
ANR	1350444	Symbol	ptr -> owner_name		1350188						
ANR	1350445	Symbol	LOCAL_DRIVE_PREFIX		1350188						
ANR	1350446	Symbol	MKDIR_ERROR		1350188						
ANR	1350447	Symbol	m -> owner_root		1350188						
ANR	1350448	Symbol	ptr -> left		1350188						
ANR	1350449	Symbol	trail		1350188						
ANR	1350450	Symbol	strncmp		1350188						
ANR	1350451	Symbol	DYNAMIC_ALLOCATION		1350188						
ANR	1350452	Symbol	* ptr		1350188						
ANR	1350453	Symbol	INT_MAX		1350188						
ANR	1350454	Symbol	ptr -> right		1350188						
ANR	1350455	Symbol	mkdir		1350188						
ANR	1350456	Symbol	temp		1350188						
ANR	1350457	Symbol	errno		1350188						
ANR	1350458	Symbol	owner_name		1350188						
ANR	1350459	Symbol	NULL		1350188						
ANR	1350460	Symbol	D_ALWAYS		1350188						
ANR	1350461	Symbol	* trail		1350188						
ANR	1350462	Symbol	inet_ntoa		1350188						
ANR	1350463	Symbol	m		1350188						
ANR	1350464	Symbol	MAX_NAME_LENGTH		1350188						
ANR	1350465	Symbol	ptr		1350188						
ANR	1350466	Symbol	pathname		1350188						
ANR	1350467	Symbol	trail -> right		1350188						
ANR	1350468	Symbol	AddFlag		1350188						
ANR	1350469	Symbol	* m		1350188						
ANR	1350470	Symbol	m -> machine_IP		1350188						
ANR	1350471	Symbol	trail -> left		1350188						
ANR	1350472	Symbol	ptr -> file_root		1350188						
ANR	1350473	Function	FileIndex :: FindOrAddFile	164:0:4459:5376							
ANR	1350474	FunctionDef	"FileIndex :: FindOrAddFile (file_node * & file_root , const char * file_name , int AddFlag)"		1350473	0					
ANR	1350475	CompoundStatement		167:0:4578:5376	1350473	0					
ANR	1350476	IdentifierDeclStatement	file_node * trail = NULL ;	168:2:4582:4603	1350473	0	True				
ANR	1350477	IdentifierDecl	* trail = NULL		1350473	0					
ANR	1350478	IdentifierDeclType	file_node *		1350473	0					
ANR	1350479	Identifier	trail		1350473	1					
ANR	1350480	AssignmentExpression	* trail = NULL		1350473	2		=			
ANR	1350481	Identifier	NULL		1350473	0					
ANR	1350482	Identifier	NULL		1350473	1					
ANR	1350483	IdentifierDeclStatement	file_node * ptr ;	169:2:4607:4621	1350473	1	True				
ANR	1350484	IdentifierDecl	* ptr		1350473	0					
ANR	1350485	IdentifierDeclType	file_node *		1350473	0					
ANR	1350486	Identifier	ptr		1350473	1					
ANR	1350487	IdentifierDeclStatement	int temp ;	170:2:4625:4640	1350473	2	True				
ANR	1350488	IdentifierDecl	temp		1350473	0					
ANR	1350489	IdentifierDeclType	int		1350473	0					
ANR	1350490	Identifier	temp		1350473	1					
ANR	1350491	ExpressionStatement	ptr = file_root	172:2:4645:4660	1350473	3	True				
ANR	1350492	AssignmentExpression	ptr = file_root		1350473	0		=			
ANR	1350493	Identifier	ptr		1350473	0					
ANR	1350494	Identifier	file_root		1350473	1					
ANR	1350495	WhileStatement	"while ( ( ptr != NULL ) && ( ( temp = strncmp ( file_name , ptr -> file_name , MAX_CONDOR_FILENAME_LENGTH ) ) != 0 ) )"		1350473	4					
ANR	1350496	Condition	"( ptr != NULL ) && ( ( temp = strncmp ( file_name , ptr -> file_name , MAX_CONDOR_FILENAME_LENGTH ) ) != 0 )"	173:9:4671:4770	1350473	0	True				
ANR	1350497	AndExpression	"( ptr != NULL ) && ( ( temp = strncmp ( file_name , ptr -> file_name , MAX_CONDOR_FILENAME_LENGTH ) ) != 0 )"		1350473	0		&&			
ANR	1350498	EqualityExpression	ptr != NULL		1350473	0		!=			
ANR	1350499	Identifier	ptr		1350473	0					
ANR	1350500	Identifier	NULL		1350473	1					
ANR	1350501	EqualityExpression	"( temp = strncmp ( file_name , ptr -> file_name , MAX_CONDOR_FILENAME_LENGTH ) ) != 0"		1350473	1		!=			
ANR	1350502	AssignmentExpression	"temp = strncmp ( file_name , ptr -> file_name , MAX_CONDOR_FILENAME_LENGTH )"		1350473	0		=			
ANR	1350503	Identifier	temp		1350473	0					
ANR	1350504	CallExpression	"strncmp ( file_name , ptr -> file_name , MAX_CONDOR_FILENAME_LENGTH )"		1350473	1					
ANR	1350505	Callee	strncmp		1350473	0					
ANR	1350506	Identifier	strncmp		1350473	0					
ANR	1350507	ArgumentList	file_name		1350473	1					
ANR	1350508	Argument	file_name		1350473	0					
ANR	1350509	Identifier	file_name		1350473	0					
ANR	1350510	Argument	ptr -> file_name		1350473	1					
ANR	1350511	PtrMemberAccess	ptr -> file_name		1350473	0					
ANR	1350512	Identifier	ptr		1350473	0					
ANR	1350513	Identifier	file_name		1350473	1					
ANR	1350514	Argument	MAX_CONDOR_FILENAME_LENGTH		1350473	2					
ANR	1350515	Identifier	MAX_CONDOR_FILENAME_LENGTH		1350473	0					
ANR	1350516	PrimaryExpression	0		1350473	1					
ANR	1350517	CompoundStatement		9:4:198:198	1350473	1					
ANR	1350518	ExpressionStatement	trail = ptr	176:6:4785:4796	1350473	0	True				
ANR	1350519	AssignmentExpression	trail = ptr		1350473	0		=			
ANR	1350520	Identifier	trail		1350473	0					
ANR	1350521	Identifier	ptr		1350473	1					
ANR	1350522	IfStatement	if ( temp < 0 )		1350473	1					
ANR	1350523	Condition	temp < 0	177:10:4808:4815	1350473	0	True				
ANR	1350524	RelationalExpression	temp < 0		1350473	0		<			
ANR	1350525	Identifier	temp		1350473	0					
ANR	1350526	PrimaryExpression	0		1350473	1					
ANR	1350527	ExpressionStatement	ptr = ptr -> left	178:1:4819:4834	1350473	1	True				
ANR	1350528	AssignmentExpression	ptr = ptr -> left		1350473	0		=			
ANR	1350529	Identifier	ptr		1350473	0					
ANR	1350530	PtrMemberAccess	ptr -> left		1350473	1					
ANR	1350531	Identifier	ptr		1350473	0					
ANR	1350532	Identifier	left		1350473	1					
ANR	1350533	ElseStatement	else		1350473	0					
ANR	1350534	ExpressionStatement	ptr = ptr -> right	180:1:4848:4864	1350473	0	True				
ANR	1350535	AssignmentExpression	ptr = ptr -> right		1350473	0		=			
ANR	1350536	Identifier	ptr		1350473	0					
ANR	1350537	PtrMemberAccess	ptr -> right		1350473	1					
ANR	1350538	Identifier	ptr		1350473	0					
ANR	1350539	Identifier	right		1350473	1					
ANR	1350540	IfStatement	if ( AddFlag == ADD )		1350473	5					
ANR	1350541	Condition	AddFlag == ADD	182:6:4878:4891	1350473	0	True				
ANR	1350542	EqualityExpression	AddFlag == ADD		1350473	0		==			
ANR	1350543	Identifier	AddFlag		1350473	0					
ANR	1350544	Identifier	ADD		1350473	1					
ANR	1350545	CompoundStatement		17:4:319:319	1350473	1					
ANR	1350546	IfStatement	if ( ptr == NULL )		1350473	0					
ANR	1350547	Condition	ptr == NULL	184:10:4910:4920	1350473	0	True				
ANR	1350548	EqualityExpression	ptr == NULL		1350473	0		==			
ANR	1350549	Identifier	ptr		1350473	0					
ANR	1350550	Identifier	NULL		1350473	1					
ANR	1350551	CompoundStatement		19:1:345:345	1350473	1					
ANR	1350552	Statement	ptr	186:3:4929:4931	1350473	0	True				
ANR	1350553	Statement	=	186:7:4933:4933	1350473	1	True				
ANR	1350554	Statement	new	186:9:4935:4937	1350473	2	True				
ANR	1350555	ExpressionStatement	file_node	186:13:4939:4948	1350473	3	True				
ANR	1350556	Identifier	file_node		1350473	0					
ANR	1350557	IfStatement	if ( ptr == NULL )		1350473	4					
ANR	1350558	Condition	ptr == NULL	187:7:4957:4967	1350473	0	True				
ANR	1350559	EqualityExpression	ptr == NULL		1350473	0		==			
ANR	1350560	Identifier	ptr		1350473	0					
ANR	1350561	Identifier	NULL		1350473	1					
ANR	1350562	CompoundStatement		22:5:396:396	1350473	1					
ANR	1350563	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: cannot allocate sufficient dynamic memory\\n"" )"	189:4:4981:5052	1350473	0	True				
ANR	1350564	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: cannot allocate sufficient dynamic memory\\n"" )"		1350473	0					
ANR	1350565	Callee	dprintf		1350473	0					
ANR	1350566	Identifier	dprintf		1350473	0					
ANR	1350567	ArgumentList	D_ALWAYS		1350473	1					
ANR	1350568	Argument	D_ALWAYS		1350473	0					
ANR	1350569	Identifier	D_ALWAYS		1350473	0					
ANR	1350570	Argument	"""ERROR: cannot allocate sufficient dynamic memory\\n"""		1350473	1					
ANR	1350571	PrimaryExpression	"""ERROR: cannot allocate sufficient dynamic memory\\n"""		1350473	0					
ANR	1350572	ExpressionStatement	exit ( DYNAMIC_ALLOCATION )	190:7:5061:5085	1350473	1	True				
ANR	1350573	CallExpression	exit ( DYNAMIC_ALLOCATION )		1350473	0					
ANR	1350574	Callee	exit		1350473	0					
ANR	1350575	Identifier	exit		1350473	0					
ANR	1350576	ArgumentList	DYNAMIC_ALLOCATION		1350473	1					
ANR	1350577	Argument	DYNAMIC_ALLOCATION		1350473	0					
ANR	1350578	Identifier	DYNAMIC_ALLOCATION		1350473	0					
ANR	1350579	ExpressionStatement	ptr -> left = NULL	192:3:5097:5113	1350473	5	True				
ANR	1350580	AssignmentExpression	ptr -> left = NULL		1350473	0		=			
ANR	1350581	PtrMemberAccess	ptr -> left		1350473	0					
ANR	1350582	Identifier	ptr		1350473	0					
ANR	1350583	Identifier	left		1350473	1					
ANR	1350584	Identifier	NULL		1350473	1					
ANR	1350585	ExpressionStatement	ptr -> right = NULL	193:3:5118:5135	1350473	6	True				
ANR	1350586	AssignmentExpression	ptr -> right = NULL		1350473	0		=			
ANR	1350587	PtrMemberAccess	ptr -> right		1350473	0					
ANR	1350588	Identifier	ptr		1350473	0					
ANR	1350589	Identifier	right		1350473	1					
ANR	1350590	Identifier	NULL		1350473	1					
ANR	1350591	ExpressionStatement	"strncpy ( ptr -> file_name , file_name , MAX_CONDOR_FILENAME_LENGTH )"	194:3:5140:5202	1350473	7	True				
ANR	1350592	CallExpression	"strncpy ( ptr -> file_name , file_name , MAX_CONDOR_FILENAME_LENGTH )"		1350473	0					
ANR	1350593	Callee	strncpy		1350473	0					
ANR	1350594	Identifier	strncpy		1350473	0					
ANR	1350595	ArgumentList	ptr -> file_name		1350473	1					
ANR	1350596	Argument	ptr -> file_name		1350473	0					
ANR	1350597	PtrMemberAccess	ptr -> file_name		1350473	0					
ANR	1350598	Identifier	ptr		1350473	0					
ANR	1350599	Identifier	file_name		1350473	1					
ANR	1350600	Argument	file_name		1350473	1					
ANR	1350601	Identifier	file_name		1350473	0					
ANR	1350602	Argument	MAX_CONDOR_FILENAME_LENGTH		1350473	2					
ANR	1350603	Identifier	MAX_CONDOR_FILENAME_LENGTH		1350473	0					
ANR	1350604	ExpressionStatement	ptr -> file_data = NULL	195:3:5207:5228	1350473	8	True				
ANR	1350605	AssignmentExpression	ptr -> file_data = NULL		1350473	0		=			
ANR	1350606	PtrMemberAccess	ptr -> file_data		1350473	0					
ANR	1350607	Identifier	ptr		1350473	0					
ANR	1350608	Identifier	file_data		1350473	1					
ANR	1350609	Identifier	NULL		1350473	1					
ANR	1350610	IfStatement	if ( trail == NULL )		1350473	9					
ANR	1350611	Condition	trail == NULL	196:7:5237:5249	1350473	0	True				
ANR	1350612	EqualityExpression	trail == NULL		1350473	0		==			
ANR	1350613	Identifier	trail		1350473	0					
ANR	1350614	Identifier	NULL		1350473	1					
ANR	1350615	ExpressionStatement	file_root = ptr	197:5:5257:5272	1350473	1	True				
ANR	1350616	AssignmentExpression	file_root = ptr		1350473	0		=			
ANR	1350617	Identifier	file_root		1350473	0					
ANR	1350618	Identifier	ptr		1350473	1					
ANR	1350619	ElseStatement	else		1350473	0					
ANR	1350620	IfStatement	if ( temp < 0 )		1350473	0					
ANR	1350621	Condition	temp < 0	198:12:5286:5293	1350473	0	True				
ANR	1350622	RelationalExpression	temp < 0		1350473	0		<			
ANR	1350623	Identifier	temp		1350473	0					
ANR	1350624	PrimaryExpression	0		1350473	1					
ANR	1350625	ExpressionStatement	trail -> left = ptr	199:5:5301:5318	1350473	1	True				
ANR	1350626	AssignmentExpression	trail -> left = ptr		1350473	0		=			
ANR	1350627	PtrMemberAccess	trail -> left		1350473	0					
ANR	1350628	Identifier	trail		1350473	0					
ANR	1350629	Identifier	left		1350473	1					
ANR	1350630	Identifier	ptr		1350473	1					
ANR	1350631	ElseStatement	else		1350473	0					
ANR	1350632	ExpressionStatement	trail -> right = ptr	201:5:5333:5351	1350473	0	True				
ANR	1350633	AssignmentExpression	trail -> right = ptr		1350473	0		=			
ANR	1350634	PtrMemberAccess	trail -> right		1350473	0					
ANR	1350635	Identifier	trail		1350473	0					
ANR	1350636	Identifier	right		1350473	1					
ANR	1350637	Identifier	ptr		1350473	1					
ANR	1350638	ReturnStatement	return ptr ;	204:2:5364:5374	1350473	6	True				
ANR	1350639	Identifier	ptr		1350473	0					
ANR	1350640	ReturnType	file_node *		1350473	1					
ANR	1350641	Identifier	FileIndex :: FindOrAddFile		1350473	2					
ANR	1350642	ParameterList	"file_node * & file_root , const char * file_name , int AddFlag"		1350473	3					
ANR	1350643	Parameter	file_node * & file_root	164:36:4495:4515	1350473	0	True				
ANR	1350644	ParameterType	file_node * &		1350473	0					
ANR	1350645	Identifier	file_root		1350473	1					
ANR	1350646	Parameter	const char * file_name	165:8:4526:4546	1350473	1	True				
ANR	1350647	ParameterType	const char *		1350473	0					
ANR	1350648	Identifier	file_name		1350473	1					
ANR	1350649	Parameter	int AddFlag	166:8:4557:4575	1350473	2	True				
ANR	1350650	ParameterType	int		1350473	0					
ANR	1350651	Identifier	AddFlag		1350473	1					
ANR	1350652	CFGEntryNode	ENTRY		1350473		True				
ANR	1350653	CFGExitNode	EXIT		1350473		True				
ANR	1350654	Symbol	ADD		1350473						
ANR	1350655	Symbol	ptr -> file_data		1350473						
ANR	1350656	Symbol	temp		1350473						
ANR	1350657	Symbol	NULL		1350473						
ANR	1350658	Symbol	ptr -> file_name		1350473						
ANR	1350659	Symbol	file_name		1350473						
ANR	1350660	Symbol	MAX_CONDOR_FILENAME_LENGTH		1350473						
ANR	1350661	Symbol	D_ALWAYS		1350473						
ANR	1350662	Symbol	* trail		1350473						
ANR	1350663	Symbol	ptr -> left		1350473						
ANR	1350664	Symbol	file_root		1350473						
ANR	1350665	Symbol	ptr		1350473						
ANR	1350666	Symbol	trail -> right		1350473						
ANR	1350667	Symbol	AddFlag		1350473						
ANR	1350668	Symbol	trail		1350473						
ANR	1350669	Symbol	strncmp		1350473						
ANR	1350670	Symbol	DYNAMIC_ALLOCATION		1350473						
ANR	1350671	Symbol	* ptr		1350473						
ANR	1350672	Symbol	ptr -> right		1350473						
ANR	1350673	Symbol	trail -> left		1350473						
ANR	1350674	Function	FileIndex :: Exists	208:0:5380:5997							
ANR	1350675	FunctionDef	"FileIndex :: Exists (struct in_addr machine_IP , const char * owner_name , const char * file_name)"		1350674	0					
ANR	1350676	CompoundStatement		211:0:5526:5997	1350674	0					
ANR	1350677	IdentifierDeclStatement	machine_node * m ;	212:2:5530:5545	1350674	0	True				
ANR	1350678	IdentifierDecl	* m		1350674	0					
ANR	1350679	IdentifierDeclType	machine_node *		1350674	0					
ANR	1350680	Identifier	m		1350674	1					
ANR	1350681	IdentifierDeclStatement	owner_node * o ;	213:2:5549:5564	1350674	1	True				
ANR	1350682	IdentifierDecl	* o		1350674	0					
ANR	1350683	IdentifierDeclType	owner_node *		1350674	0					
ANR	1350684	Identifier	o		1350674	1					
ANR	1350685	IdentifierDeclStatement	file_node * f ;	214:2:5568:5583	1350674	2	True				
ANR	1350686	IdentifierDecl	* f		1350674	0					
ANR	1350687	IdentifierDeclType	file_node *		1350674	0					
ANR	1350688	Identifier	f		1350674	1					
ANR	1350689	ExpressionStatement	"m = FindOrAddMachine ( machine_IP , 0 )"	216:2:5588:5623	1350674	3	True				
ANR	1350690	AssignmentExpression	"m = FindOrAddMachine ( machine_IP , 0 )"		1350674	0		=			
ANR	1350691	Identifier	m		1350674	0					
ANR	1350692	CallExpression	"FindOrAddMachine ( machine_IP , 0 )"		1350674	1					
ANR	1350693	Callee	FindOrAddMachine		1350674	0					
ANR	1350694	Identifier	FindOrAddMachine		1350674	0					
ANR	1350695	ArgumentList	machine_IP		1350674	1					
ANR	1350696	Argument	machine_IP		1350674	0					
ANR	1350697	Identifier	machine_IP		1350674	0					
ANR	1350698	Argument	0		1350674	1					
ANR	1350699	PrimaryExpression	0		1350674	0					
ANR	1350700	IfStatement	if ( m == NULL )		1350674	4					
ANR	1350701	Condition	m == NULL	217:6:5631:5639	1350674	0	True				
ANR	1350702	EqualityExpression	m == NULL		1350674	0		==			
ANR	1350703	Identifier	m		1350674	0					
ANR	1350704	Identifier	NULL		1350674	1					
ANR	1350705	ReturnStatement	return DOES_NOT_EXIST ;	218:4:5646:5667	1350674	1	True				
ANR	1350706	Identifier	DOES_NOT_EXIST		1350674	0					
ANR	1350707	ExpressionStatement	"o = FindOrAddOwner ( m , owner_name , 0 )"	219:2:5671:5707	1350674	5	True				
ANR	1350708	AssignmentExpression	"o = FindOrAddOwner ( m , owner_name , 0 )"		1350674	0		=			
ANR	1350709	Identifier	o		1350674	0					
ANR	1350710	CallExpression	"FindOrAddOwner ( m , owner_name , 0 )"		1350674	1					
ANR	1350711	Callee	FindOrAddOwner		1350674	0					
ANR	1350712	Identifier	FindOrAddOwner		1350674	0					
ANR	1350713	ArgumentList	m		1350674	1					
ANR	1350714	Argument	m		1350674	0					
ANR	1350715	Identifier	m		1350674	0					
ANR	1350716	Argument	owner_name		1350674	1					
ANR	1350717	Identifier	owner_name		1350674	0					
ANR	1350718	Argument	0		1350674	2					
ANR	1350719	PrimaryExpression	0		1350674	0					
ANR	1350720	IfStatement	if ( o == NULL )		1350674	6					
ANR	1350721	Condition	o == NULL	220:6:5715:5723	1350674	0	True				
ANR	1350722	EqualityExpression	o == NULL		1350674	0		==			
ANR	1350723	Identifier	o		1350674	0					
ANR	1350724	Identifier	NULL		1350674	1					
ANR	1350725	ReturnStatement	return DOES_NOT_EXIST ;	221:4:5730:5751	1350674	1	True				
ANR	1350726	Identifier	DOES_NOT_EXIST		1350674	0					
ANR	1350727	ExpressionStatement	"f = FindOrAddFile ( o -> file_root , file_name , 0 )"	222:2:5755:5800	1350674	7	True				
ANR	1350728	AssignmentExpression	"f = FindOrAddFile ( o -> file_root , file_name , 0 )"		1350674	0		=			
ANR	1350729	Identifier	f		1350674	0					
ANR	1350730	CallExpression	"FindOrAddFile ( o -> file_root , file_name , 0 )"		1350674	1					
ANR	1350731	Callee	FindOrAddFile		1350674	0					
ANR	1350732	Identifier	FindOrAddFile		1350674	0					
ANR	1350733	ArgumentList	o -> file_root		1350674	1					
ANR	1350734	Argument	o -> file_root		1350674	0					
ANR	1350735	PtrMemberAccess	o -> file_root		1350674	0					
ANR	1350736	Identifier	o		1350674	0					
ANR	1350737	Identifier	file_root		1350674	1					
ANR	1350738	Argument	file_name		1350674	1					
ANR	1350739	Identifier	file_name		1350674	0					
ANR	1350740	Argument	0		1350674	2					
ANR	1350741	PrimaryExpression	0		1350674	0					
ANR	1350742	IfStatement	if ( f == NULL )		1350674	8					
ANR	1350743	Condition	f == NULL	223:6:5808:5816	1350674	0	True				
ANR	1350744	EqualityExpression	f == NULL		1350674	0		==			
ANR	1350745	Identifier	f		1350674	0					
ANR	1350746	Identifier	NULL		1350674	1					
ANR	1350747	ReturnStatement	return DOES_NOT_EXIST ;	224:4:5823:5844	1350674	1	True				
ANR	1350748	Identifier	DOES_NOT_EXIST		1350674	0					
ANR	1350749	IfStatement	if ( f -> file_data == NULL )		1350674	9					
ANR	1350750	Condition	f -> file_data == NULL	225:6:5852:5871	1350674	0	True				
ANR	1350751	EqualityExpression	f -> file_data == NULL		1350674	0		==			
ANR	1350752	PtrMemberAccess	f -> file_data		1350674	0					
ANR	1350753	Identifier	f		1350674	0					
ANR	1350754	Identifier	file_data		1350674	1					
ANR	1350755	Identifier	NULL		1350674	1					
ANR	1350756	CompoundStatement		16:4:351:351	1350674	1					
ANR	1350757	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: IMDS index is inconsistent\\n"" )"	227:6:5886:5942	1350674	0	True				
ANR	1350758	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: IMDS index is inconsistent\\n"" )"		1350674	0					
ANR	1350759	Callee	dprintf		1350674	0					
ANR	1350760	Identifier	dprintf		1350674	0					
ANR	1350761	ArgumentList	D_ALWAYS		1350674	1					
ANR	1350762	Argument	D_ALWAYS		1350674	0					
ANR	1350763	Identifier	D_ALWAYS		1350674	0					
ANR	1350764	Argument	"""ERROR: IMDS index is inconsistent\\n"""		1350674	1					
ANR	1350765	PrimaryExpression	"""ERROR: IMDS index is inconsistent\\n"""		1350674	0					
ANR	1350766	ExpressionStatement	exit ( IMDS_INDEX_ERROR )	228:6:5950:5972	1350674	1	True				
ANR	1350767	CallExpression	exit ( IMDS_INDEX_ERROR )		1350674	0					
ANR	1350768	Callee	exit		1350674	0					
ANR	1350769	Identifier	exit		1350674	0					
ANR	1350770	ArgumentList	IMDS_INDEX_ERROR		1350674	1					
ANR	1350771	Argument	IMDS_INDEX_ERROR		1350674	0					
ANR	1350772	Identifier	IMDS_INDEX_ERROR		1350674	0					
ANR	1350773	ReturnStatement	return EXISTS ;	230:2:5982:5995	1350674	10	True				
ANR	1350774	Identifier	EXISTS		1350674	0					
ANR	1350775	ReturnType	int		1350674	1					
ANR	1350776	Identifier	FileIndex :: Exists		1350674	2					
ANR	1350777	ParameterList	"struct in_addr machine_IP , const char * owner_name , const char * file_name"		1350674	3					
ANR	1350778	Parameter	struct in_addr machine_IP	208:22:5402:5426	1350674	0	True				
ANR	1350779	ParameterType	struct in_addr		1350674	0					
ANR	1350780	Identifier	machine_IP		1350674	1					
ANR	1350781	Parameter	const char * owner_name	209:22:5451:5475	1350674	1	True				
ANR	1350782	ParameterType	const char *		1350674	0					
ANR	1350783	Identifier	owner_name		1350674	1					
ANR	1350784	Parameter	const char * file_name	210:22:5500:5523	1350674	2	True				
ANR	1350785	ParameterType	const char *		1350674	0					
ANR	1350786	Identifier	file_name		1350674	1					
ANR	1350787	CFGEntryNode	ENTRY		1350674		True				
ANR	1350788	CFGExitNode	EXIT		1350674		True				
ANR	1350789	Symbol	owner_name		1350674						
ANR	1350790	Symbol	NULL		1350674						
ANR	1350791	Symbol	FindOrAddMachine		1350674						
ANR	1350792	Symbol	EXISTS		1350674						
ANR	1350793	Symbol	machine_IP		1350674						
ANR	1350794	Symbol	file_name		1350674						
ANR	1350795	Symbol	f		1350674						
ANR	1350796	Symbol	o -> file_root		1350674						
ANR	1350797	Symbol	FindOrAddFile		1350674						
ANR	1350798	Symbol	D_ALWAYS		1350674						
ANR	1350799	Symbol	FindOrAddOwner		1350674						
ANR	1350800	Symbol	m		1350674						
ANR	1350801	Symbol	o		1350674						
ANR	1350802	Symbol	DOES_NOT_EXIST		1350674						
ANR	1350803	Symbol	* f		1350674						
ANR	1350804	Symbol	f -> file_data		1350674						
ANR	1350805	Symbol	* o		1350674						
ANR	1350806	Symbol	IMDS_INDEX_ERROR		1350674						
ANR	1350807	Function	FileIndex :: DestroyFileTree	234:0:6001:6224							
ANR	1350808	FunctionDef	FileIndex :: DestroyFileTree (file_node * & file_root)		1350807	0					
ANR	1350809	CompoundStatement		235:0:6056:6224	1350807	0					
ANR	1350810	IfStatement	if ( file_root != NULL )		1350807	0					
ANR	1350811	Condition	file_root != NULL	236:6:6064:6080	1350807	0	True				
ANR	1350812	EqualityExpression	file_root != NULL		1350807	0		!=			
ANR	1350813	Identifier	file_root		1350807	0					
ANR	1350814	Identifier	NULL		1350807	1					
ANR	1350815	CompoundStatement		3:4:30:30	1350807	1					
ANR	1350816	ExpressionStatement	DestroyFileTree ( file_root -> left )	238:6:6095:6127	1350807	0	True				
ANR	1350817	CallExpression	DestroyFileTree ( file_root -> left )		1350807	0					
ANR	1350818	Callee	DestroyFileTree		1350807	0					
ANR	1350819	Identifier	DestroyFileTree		1350807	0					
ANR	1350820	ArgumentList	file_root -> left		1350807	1					
ANR	1350821	Argument	file_root -> left		1350807	0					
ANR	1350822	PtrMemberAccess	file_root -> left		1350807	0					
ANR	1350823	Identifier	file_root		1350807	0					
ANR	1350824	Identifier	left		1350807	1					
ANR	1350825	ExpressionStatement	DestroyFileTree ( file_root -> right )	239:6:6135:6168	1350807	1	True				
ANR	1350826	CallExpression	DestroyFileTree ( file_root -> right )		1350807	0					
ANR	1350827	Callee	DestroyFileTree		1350807	0					
ANR	1350828	Identifier	DestroyFileTree		1350807	0					
ANR	1350829	ArgumentList	file_root -> right		1350807	1					
ANR	1350830	Argument	file_root -> right		1350807	0					
ANR	1350831	PtrMemberAccess	file_root -> right		1350807	0					
ANR	1350832	Identifier	file_root		1350807	0					
ANR	1350833	Identifier	right		1350807	1					
ANR	1350834	Statement	delete	240:6:6176:6181	1350807	2	True				
ANR	1350835	ExpressionStatement	file_root	240:13:6183:6192	1350807	3	True				
ANR	1350836	Identifier	file_root		1350807	0					
ANR	1350837	ExpressionStatement	file_root = NULL	241:6:6200:6216	1350807	4	True				
ANR	1350838	AssignmentExpression	file_root = NULL		1350807	0		=			
ANR	1350839	Identifier	file_root		1350807	0					
ANR	1350840	Identifier	NULL		1350807	1					
ANR	1350841	ReturnType	void		1350807	1					
ANR	1350842	Identifier	FileIndex :: DestroyFileTree		1350807	2					
ANR	1350843	ParameterList	file_node * & file_root		1350807	3					
ANR	1350844	Parameter	file_node * & file_root	234:32:6033:6053	1350807	0	True				
ANR	1350845	ParameterType	file_node * &		1350807	0					
ANR	1350846	Identifier	file_root		1350807	1					
ANR	1350847	CFGEntryNode	ENTRY		1350807		True				
ANR	1350848	CFGExitNode	EXIT		1350807		True				
ANR	1350849	Symbol	* file_root		1350807						
ANR	1350850	Symbol	NULL		1350807						
ANR	1350851	Symbol	file_root -> right		1350807						
ANR	1350852	Symbol	file_root -> left		1350807						
ANR	1350853	Symbol	file_root		1350807						
ANR	1350854	Function	FileIndex :: DestroyOwnerTree	246:0:6228:6507							
ANR	1350855	FunctionDef	FileIndex :: DestroyOwnerTree (owner_node * & owner_root)		1350854	0					
ANR	1350856	CompoundStatement		247:0:6286:6507	1350854	0					
ANR	1350857	IfStatement	if ( owner_root != NULL )		1350854	0					
ANR	1350858	Condition	owner_root != NULL	248:6:6294:6311	1350854	0	True				
ANR	1350859	EqualityExpression	owner_root != NULL		1350854	0		!=			
ANR	1350860	Identifier	owner_root		1350854	0					
ANR	1350861	Identifier	NULL		1350854	1					
ANR	1350862	CompoundStatement		3:4:31:31	1350854	1					
ANR	1350863	ExpressionStatement	DestroyOwnerTree ( owner_root -> left )	250:6:6326:6360	1350854	0	True				
ANR	1350864	CallExpression	DestroyOwnerTree ( owner_root -> left )		1350854	0					
ANR	1350865	Callee	DestroyOwnerTree		1350854	0					
ANR	1350866	Identifier	DestroyOwnerTree		1350854	0					
ANR	1350867	ArgumentList	owner_root -> left		1350854	1					
ANR	1350868	Argument	owner_root -> left		1350854	0					
ANR	1350869	PtrMemberAccess	owner_root -> left		1350854	0					
ANR	1350870	Identifier	owner_root		1350854	0					
ANR	1350871	Identifier	left		1350854	1					
ANR	1350872	ExpressionStatement	DestroyOwnerTree ( owner_root -> right )	251:6:6368:6403	1350854	1	True				
ANR	1350873	CallExpression	DestroyOwnerTree ( owner_root -> right )		1350854	0					
ANR	1350874	Callee	DestroyOwnerTree		1350854	0					
ANR	1350875	Identifier	DestroyOwnerTree		1350854	0					
ANR	1350876	ArgumentList	owner_root -> right		1350854	1					
ANR	1350877	Argument	owner_root -> right		1350854	0					
ANR	1350878	PtrMemberAccess	owner_root -> right		1350854	0					
ANR	1350879	Identifier	owner_root		1350854	0					
ANR	1350880	Identifier	right		1350854	1					
ANR	1350881	ExpressionStatement	DestroyFileTree ( owner_root -> file_root )	252:6:6411:6449	1350854	2	True				
ANR	1350882	CallExpression	DestroyFileTree ( owner_root -> file_root )		1350854	0					
ANR	1350883	Callee	DestroyFileTree		1350854	0					
ANR	1350884	Identifier	DestroyFileTree		1350854	0					
ANR	1350885	ArgumentList	owner_root -> file_root		1350854	1					
ANR	1350886	Argument	owner_root -> file_root		1350854	0					
ANR	1350887	PtrMemberAccess	owner_root -> file_root		1350854	0					
ANR	1350888	Identifier	owner_root		1350854	0					
ANR	1350889	Identifier	file_root		1350854	1					
ANR	1350890	Statement	delete	253:6:6457:6462	1350854	3	True				
ANR	1350891	ExpressionStatement	owner_root	253:13:6464:6474	1350854	4	True				
ANR	1350892	Identifier	owner_root		1350854	0					
ANR	1350893	ExpressionStatement	owner_root = NULL	254:6:6482:6499	1350854	5	True				
ANR	1350894	AssignmentExpression	owner_root = NULL		1350854	0		=			
ANR	1350895	Identifier	owner_root		1350854	0					
ANR	1350896	Identifier	NULL		1350854	1					
ANR	1350897	ReturnType	void		1350854	1					
ANR	1350898	Identifier	FileIndex :: DestroyOwnerTree		1350854	2					
ANR	1350899	ParameterList	owner_node * & owner_root		1350854	3					
ANR	1350900	Parameter	owner_node * & owner_root	246:33:6261:6283	1350854	0	True				
ANR	1350901	ParameterType	owner_node * &		1350854	0					
ANR	1350902	Identifier	owner_root		1350854	1					
ANR	1350903	CFGEntryNode	ENTRY		1350854		True				
ANR	1350904	CFGExitNode	EXIT		1350854		True				
ANR	1350905	Symbol	NULL		1350854						
ANR	1350906	Symbol	owner_root -> file_root		1350854						
ANR	1350907	Symbol	* owner_root		1350854						
ANR	1350908	Symbol	owner_root		1350854						
ANR	1350909	Symbol	owner_root -> right		1350854						
ANR	1350910	Symbol	owner_root -> left		1350854						
ANR	1350911	Function	FileIndex :: DestroyMachineTree	259:0:6511:6814							
ANR	1350912	FunctionDef	FileIndex :: DestroyMachineTree (machine_node * & machine_root)		1350911	0					
ANR	1350913	CompoundStatement		260:0:6575:6814	1350911	0					
ANR	1350914	IfStatement	if ( machine_root != NULL )		1350911	0					
ANR	1350915	Condition	machine_root != NULL	261:6:6583:6602	1350911	0	True				
ANR	1350916	EqualityExpression	machine_root != NULL		1350911	0		!=			
ANR	1350917	Identifier	machine_root		1350911	0					
ANR	1350918	Identifier	NULL		1350911	1					
ANR	1350919	CompoundStatement		3:4:33:33	1350911	1					
ANR	1350920	ExpressionStatement	DestroyMachineTree ( machine_root -> left )	263:6:6617:6655	1350911	0	True				
ANR	1350921	CallExpression	DestroyMachineTree ( machine_root -> left )		1350911	0					
ANR	1350922	Callee	DestroyMachineTree		1350911	0					
ANR	1350923	Identifier	DestroyMachineTree		1350911	0					
ANR	1350924	ArgumentList	machine_root -> left		1350911	1					
ANR	1350925	Argument	machine_root -> left		1350911	0					
ANR	1350926	PtrMemberAccess	machine_root -> left		1350911	0					
ANR	1350927	Identifier	machine_root		1350911	0					
ANR	1350928	Identifier	left		1350911	1					
ANR	1350929	ExpressionStatement	DestroyMachineTree ( machine_root -> right )	264:6:6663:6702	1350911	1	True				
ANR	1350930	CallExpression	DestroyMachineTree ( machine_root -> right )		1350911	0					
ANR	1350931	Callee	DestroyMachineTree		1350911	0					
ANR	1350932	Identifier	DestroyMachineTree		1350911	0					
ANR	1350933	ArgumentList	machine_root -> right		1350911	1					
ANR	1350934	Argument	machine_root -> right		1350911	0					
ANR	1350935	PtrMemberAccess	machine_root -> right		1350911	0					
ANR	1350936	Identifier	machine_root		1350911	0					
ANR	1350937	Identifier	right		1350911	1					
ANR	1350938	ExpressionStatement	DestroyOwnerTree ( machine_root -> owner_root )	265:6:6710:6752	1350911	2	True				
ANR	1350939	CallExpression	DestroyOwnerTree ( machine_root -> owner_root )		1350911	0					
ANR	1350940	Callee	DestroyOwnerTree		1350911	0					
ANR	1350941	Identifier	DestroyOwnerTree		1350911	0					
ANR	1350942	ArgumentList	machine_root -> owner_root		1350911	1					
ANR	1350943	Argument	machine_root -> owner_root		1350911	0					
ANR	1350944	PtrMemberAccess	machine_root -> owner_root		1350911	0					
ANR	1350945	Identifier	machine_root		1350911	0					
ANR	1350946	Identifier	owner_root		1350911	1					
ANR	1350947	Statement	delete	266:6:6760:6765	1350911	3	True				
ANR	1350948	ExpressionStatement	machine_root	266:13:6767:6779	1350911	4	True				
ANR	1350949	Identifier	machine_root		1350911	0					
ANR	1350950	ExpressionStatement	machine_root = NULL	267:6:6787:6806	1350911	5	True				
ANR	1350951	AssignmentExpression	machine_root = NULL		1350911	0		=			
ANR	1350952	Identifier	machine_root		1350911	0					
ANR	1350953	Identifier	NULL		1350911	1					
ANR	1350954	ReturnType	void		1350911	1					
ANR	1350955	Identifier	FileIndex :: DestroyMachineTree		1350911	2					
ANR	1350956	ParameterList	machine_node * & machine_root		1350911	3					
ANR	1350957	Parameter	machine_node * & machine_root	259:35:6546:6572	1350911	0	True				
ANR	1350958	ParameterType	machine_node * &		1350911	0					
ANR	1350959	Identifier	machine_root		1350911	1					
ANR	1350960	CFGEntryNode	ENTRY		1350911		True				
ANR	1350961	CFGExitNode	EXIT		1350911		True				
ANR	1350962	Symbol	NULL		1350911						
ANR	1350963	Symbol	* machine_root		1350911						
ANR	1350964	Symbol	machine_root -> right		1350911						
ANR	1350965	Symbol	machine_root		1350911						
ANR	1350966	Symbol	machine_root -> owner_root		1350911						
ANR	1350967	Symbol	machine_root -> left		1350911						
ANR	1350968	Function	FileIndex :: DestroyIndex	272:0:6818:6959							
ANR	1350969	FunctionDef	FileIndex :: DestroyIndex ()		1350968	0					
ANR	1350970	CompoundStatement		273:0:6849:6959	1350968	0					
ANR	1350971	IdentifierDeclStatement	int bucket ;	274:2:6853:6863	1350968	0	True				
ANR	1350972	IdentifierDecl	bucket		1350968	0					
ANR	1350973	IdentifierDeclType	int		1350968	0					
ANR	1350974	Identifier	bucket		1350968	1					
ANR	1350975	ForStatement	for ( bucket = 0 ; bucket < MAX_HASH_SIZE ; bucket ++ )		1350968	1					
ANR	1350976	ForInit	bucket = 0 ;	276:7:6873:6881	1350968	0	True				
ANR	1350977	AssignmentExpression	bucket = 0		1350968	0		=			
ANR	1350978	Identifier	bucket		1350968	0					
ANR	1350979	PrimaryExpression	0		1350968	1					
ANR	1350980	Condition	bucket < MAX_HASH_SIZE	276:17:6883:6902	1350968	1	True				
ANR	1350981	RelationalExpression	bucket < MAX_HASH_SIZE		1350968	0		<			
ANR	1350982	Identifier	bucket		1350968	0					
ANR	1350983	Identifier	MAX_HASH_SIZE		1350968	1					
ANR	1350984	PostIncDecOperationExpression	bucket ++	276:39:6905:6912	1350968	2	True				
ANR	1350985	Identifier	bucket		1350968	0					
ANR	1350986	IncDec	++		1350968	1					
ANR	1350987	ExpressionStatement	DestroyMachineTree ( hash_table [ bucket ] )	277:4:6919:6957	1350968	3	True				
ANR	1350988	CallExpression	DestroyMachineTree ( hash_table [ bucket ] )		1350968	0					
ANR	1350989	Callee	DestroyMachineTree		1350968	0					
ANR	1350990	Identifier	DestroyMachineTree		1350968	0					
ANR	1350991	ArgumentList	hash_table [ bucket ]		1350968	1					
ANR	1350992	Argument	hash_table [ bucket ]		1350968	0					
ANR	1350993	ArrayIndexing	hash_table [ bucket ]		1350968	0					
ANR	1350994	Identifier	hash_table		1350968	0					
ANR	1350995	Identifier	bucket		1350968	1					
ANR	1350996	ReturnType	void		1350968	1					
ANR	1350997	Identifier	FileIndex :: DestroyIndex		1350968	2					
ANR	1350998	ParameterList			1350968	3					
ANR	1350999	CFGEntryNode	ENTRY		1350968		True				
ANR	1351000	CFGExitNode	EXIT		1350968		True				
ANR	1351001	Symbol	bucket		1350968						
ANR	1351002	Symbol	hash_table		1350968						
ANR	1351003	Symbol	* bucket		1350968						
ANR	1351004	Symbol	MAX_HASH_SIZE		1350968						
ANR	1351005	Symbol	* hash_table		1350968						
ANR	1351006	Function	FileIndex :: AddNewFile	281:0:6963:7362							
ANR	1351007	FunctionDef	"FileIndex :: AddNewFile (struct in_addr machine_IP , const char * owner_name , const char * file_name , file_info_node * file_info_ptr)"		1351006	0					
ANR	1351008	CompoundStatement		285:0:7118:7362	1351006	0					
ANR	1351009	IdentifierDeclStatement	machine_node * m ;	286:2:7122:7137	1351006	0	True				
ANR	1351010	IdentifierDecl	* m		1351006	0					
ANR	1351011	IdentifierDeclType	machine_node *		1351006	0					
ANR	1351012	Identifier	m		1351006	1					
ANR	1351013	IdentifierDeclStatement	owner_node * o ;	287:2:7141:7156	1351006	1	True				
ANR	1351014	IdentifierDecl	* o		1351006	0					
ANR	1351015	IdentifierDeclType	owner_node *		1351006	0					
ANR	1351016	Identifier	o		1351006	1					
ANR	1351017	IdentifierDeclStatement	file_node * f ;	288:2:7160:7175	1351006	2	True				
ANR	1351018	IdentifierDecl	* f		1351006	0					
ANR	1351019	IdentifierDeclType	file_node *		1351006	0					
ANR	1351020	Identifier	f		1351006	1					
ANR	1351021	ExpressionStatement	"m = FindOrAddMachine ( machine_IP , ADD )"	290:2:7180:7217	1351006	3	True				
ANR	1351022	AssignmentExpression	"m = FindOrAddMachine ( machine_IP , ADD )"		1351006	0		=			
ANR	1351023	Identifier	m		1351006	0					
ANR	1351024	CallExpression	"FindOrAddMachine ( machine_IP , ADD )"		1351006	1					
ANR	1351025	Callee	FindOrAddMachine		1351006	0					
ANR	1351026	Identifier	FindOrAddMachine		1351006	0					
ANR	1351027	ArgumentList	machine_IP		1351006	1					
ANR	1351028	Argument	machine_IP		1351006	0					
ANR	1351029	Identifier	machine_IP		1351006	0					
ANR	1351030	Argument	ADD		1351006	1					
ANR	1351031	Identifier	ADD		1351006	0					
ANR	1351032	ExpressionStatement	"o = FindOrAddOwner ( m , owner_name , ADD )"	291:2:7221:7259	1351006	4	True				
ANR	1351033	AssignmentExpression	"o = FindOrAddOwner ( m , owner_name , ADD )"		1351006	0		=			
ANR	1351034	Identifier	o		1351006	0					
ANR	1351035	CallExpression	"FindOrAddOwner ( m , owner_name , ADD )"		1351006	1					
ANR	1351036	Callee	FindOrAddOwner		1351006	0					
ANR	1351037	Identifier	FindOrAddOwner		1351006	0					
ANR	1351038	ArgumentList	m		1351006	1					
ANR	1351039	Argument	m		1351006	0					
ANR	1351040	Identifier	m		1351006	0					
ANR	1351041	Argument	owner_name		1351006	1					
ANR	1351042	Identifier	owner_name		1351006	0					
ANR	1351043	Argument	ADD		1351006	2					
ANR	1351044	Identifier	ADD		1351006	0					
ANR	1351045	ExpressionStatement	"f = FindOrAddFile ( o -> file_root , file_name , ADD )"	292:2:7263:7310	1351006	5	True				
ANR	1351046	AssignmentExpression	"f = FindOrAddFile ( o -> file_root , file_name , ADD )"		1351006	0		=			
ANR	1351047	Identifier	f		1351006	0					
ANR	1351048	CallExpression	"FindOrAddFile ( o -> file_root , file_name , ADD )"		1351006	1					
ANR	1351049	Callee	FindOrAddFile		1351006	0					
ANR	1351050	Identifier	FindOrAddFile		1351006	0					
ANR	1351051	ArgumentList	o -> file_root		1351006	1					
ANR	1351052	Argument	o -> file_root		1351006	0					
ANR	1351053	PtrMemberAccess	o -> file_root		1351006	0					
ANR	1351054	Identifier	o		1351006	0					
ANR	1351055	Identifier	file_root		1351006	1					
ANR	1351056	Argument	file_name		1351006	1					
ANR	1351057	Identifier	file_name		1351006	0					
ANR	1351058	Argument	ADD		1351006	2					
ANR	1351059	Identifier	ADD		1351006	0					
ANR	1351060	ExpressionStatement	f -> file_data = file_info_ptr	293:2:7314:7342	1351006	6	True				
ANR	1351061	AssignmentExpression	f -> file_data = file_info_ptr		1351006	0		=			
ANR	1351062	PtrMemberAccess	f -> file_data		1351006	0					
ANR	1351063	Identifier	f		1351006	0					
ANR	1351064	Identifier	file_data		1351006	1					
ANR	1351065	Identifier	file_info_ptr		1351006	1					
ANR	1351066	ReturnStatement	return CREATED ;	294:2:7346:7360	1351006	7	True				
ANR	1351067	Identifier	CREATED		1351006	0					
ANR	1351068	ReturnType	int		1351006	1					
ANR	1351069	Identifier	FileIndex :: AddNewFile		1351006	2					
ANR	1351070	ParameterList	"struct in_addr machine_IP , const char * owner_name , const char * file_name , file_info_node * file_info_ptr"		1351006	3					
ANR	1351071	Parameter	struct in_addr machine_IP	281:26:6989:7014	1351006	0	True				
ANR	1351072	ParameterType	struct in_addr		1351006	0					
ANR	1351073	Identifier	machine_IP		1351006	1					
ANR	1351074	Parameter	const char * owner_name	282:5:7022:7047	1351006	1	True				
ANR	1351075	ParameterType	const char *		1351006	0					
ANR	1351076	Identifier	owner_name		1351006	1					
ANR	1351077	Parameter	const char * file_name	283:5:7055:7079	1351006	2	True				
ANR	1351078	ParameterType	const char *		1351006	0					
ANR	1351079	Identifier	file_name		1351006	1					
ANR	1351080	Parameter	file_info_node * file_info_ptr	284:5:7087:7115	1351006	3	True				
ANR	1351081	ParameterType	file_info_node *		1351006	0					
ANR	1351082	Identifier	file_info_ptr		1351006	1					
ANR	1351083	CFGEntryNode	ENTRY		1351006		True				
ANR	1351084	CFGExitNode	EXIT		1351006		True				
ANR	1351085	Symbol	ADD		1351006						
ANR	1351086	Symbol	owner_name		1351006						
ANR	1351087	Symbol	FindOrAddMachine		1351006						
ANR	1351088	Symbol	machine_IP		1351006						
ANR	1351089	Symbol	file_name		1351006						
ANR	1351090	Symbol	f		1351006						
ANR	1351091	Symbol	o -> file_root		1351006						
ANR	1351092	Symbol	FindOrAddFile		1351006						
ANR	1351093	Symbol	file_info_ptr		1351006						
ANR	1351094	Symbol	FindOrAddOwner		1351006						
ANR	1351095	Symbol	m		1351006						
ANR	1351096	Symbol	o		1351006						
ANR	1351097	Symbol	* f		1351006						
ANR	1351098	Symbol	CREATED		1351006						
ANR	1351099	Symbol	f -> file_data		1351006						
ANR	1351100	Symbol	* o		1351006						
ANR	1351101	Function	FileIndex :: GetFileNode	298:0:7366:7803							
ANR	1351102	FunctionDef	"FileIndex :: GetFileNode (struct in_addr machine_IP , const char * owner_name , const char * file_name)"		1351101	0					
ANR	1351103	CompoundStatement		301:0:7492:7803	1351101	0					
ANR	1351104	IdentifierDeclStatement	machine_node * m ;	302:2:7496:7511	1351101	0	True				
ANR	1351105	IdentifierDecl	* m		1351101	0					
ANR	1351106	IdentifierDeclType	machine_node *		1351101	0					
ANR	1351107	Identifier	m		1351101	1					
ANR	1351108	IdentifierDeclStatement	owner_node * o ;	303:2:7515:7530	1351101	1	True				
ANR	1351109	IdentifierDecl	* o		1351101	0					
ANR	1351110	IdentifierDeclType	owner_node *		1351101	0					
ANR	1351111	Identifier	o		1351101	1					
ANR	1351112	IdentifierDeclStatement	file_node * f ;	304:2:7534:7549	1351101	2	True				
ANR	1351113	IdentifierDecl	* f		1351101	0					
ANR	1351114	IdentifierDeclType	file_node *		1351101	0					
ANR	1351115	Identifier	f		1351101	1					
ANR	1351116	ExpressionStatement	"m = FindOrAddMachine ( machine_IP , 0 )"	306:2:7554:7589	1351101	3	True				
ANR	1351117	AssignmentExpression	"m = FindOrAddMachine ( machine_IP , 0 )"		1351101	0		=			
ANR	1351118	Identifier	m		1351101	0					
ANR	1351119	CallExpression	"FindOrAddMachine ( machine_IP , 0 )"		1351101	1					
ANR	1351120	Callee	FindOrAddMachine		1351101	0					
ANR	1351121	Identifier	FindOrAddMachine		1351101	0					
ANR	1351122	ArgumentList	machine_IP		1351101	1					
ANR	1351123	Argument	machine_IP		1351101	0					
ANR	1351124	Identifier	machine_IP		1351101	0					
ANR	1351125	Argument	0		1351101	1					
ANR	1351126	PrimaryExpression	0		1351101	0					
ANR	1351127	IfStatement	if ( m == NULL )		1351101	4					
ANR	1351128	Condition	m == NULL	307:6:7597:7605	1351101	0	True				
ANR	1351129	EqualityExpression	m == NULL		1351101	0		==			
ANR	1351130	Identifier	m		1351101	0					
ANR	1351131	Identifier	NULL		1351101	1					
ANR	1351132	ReturnStatement	return NULL ;	308:4:7612:7623	1351101	1	True				
ANR	1351133	Identifier	NULL		1351101	0					
ANR	1351134	ExpressionStatement	"o = FindOrAddOwner ( m , owner_name , 0 )"	309:2:7627:7663	1351101	5	True				
ANR	1351135	AssignmentExpression	"o = FindOrAddOwner ( m , owner_name , 0 )"		1351101	0		=			
ANR	1351136	Identifier	o		1351101	0					
ANR	1351137	CallExpression	"FindOrAddOwner ( m , owner_name , 0 )"		1351101	1					
ANR	1351138	Callee	FindOrAddOwner		1351101	0					
ANR	1351139	Identifier	FindOrAddOwner		1351101	0					
ANR	1351140	ArgumentList	m		1351101	1					
ANR	1351141	Argument	m		1351101	0					
ANR	1351142	Identifier	m		1351101	0					
ANR	1351143	Argument	owner_name		1351101	1					
ANR	1351144	Identifier	owner_name		1351101	0					
ANR	1351145	Argument	0		1351101	2					
ANR	1351146	PrimaryExpression	0		1351101	0					
ANR	1351147	IfStatement	if ( o == NULL )		1351101	6					
ANR	1351148	Condition	o == NULL	310:6:7671:7679	1351101	0	True				
ANR	1351149	EqualityExpression	o == NULL		1351101	0		==			
ANR	1351150	Identifier	o		1351101	0					
ANR	1351151	Identifier	NULL		1351101	1					
ANR	1351152	ReturnStatement	return NULL ;	311:4:7686:7697	1351101	1	True				
ANR	1351153	Identifier	NULL		1351101	0					
ANR	1351154	ExpressionStatement	"f = FindOrAddFile ( o -> file_root , file_name , 0 )"	312:2:7701:7746	1351101	7	True				
ANR	1351155	AssignmentExpression	"f = FindOrAddFile ( o -> file_root , file_name , 0 )"		1351101	0		=			
ANR	1351156	Identifier	f		1351101	0					
ANR	1351157	CallExpression	"FindOrAddFile ( o -> file_root , file_name , 0 )"		1351101	1					
ANR	1351158	Callee	FindOrAddFile		1351101	0					
ANR	1351159	Identifier	FindOrAddFile		1351101	0					
ANR	1351160	ArgumentList	o -> file_root		1351101	1					
ANR	1351161	Argument	o -> file_root		1351101	0					
ANR	1351162	PtrMemberAccess	o -> file_root		1351101	0					
ANR	1351163	Identifier	o		1351101	0					
ANR	1351164	Identifier	file_root		1351101	1					
ANR	1351165	Argument	file_name		1351101	1					
ANR	1351166	Identifier	file_name		1351101	0					
ANR	1351167	Argument	0		1351101	2					
ANR	1351168	PrimaryExpression	0		1351101	0					
ANR	1351169	IfStatement	if ( f == NULL )		1351101	8					
ANR	1351170	Condition	f == NULL	313:6:7754:7762	1351101	0	True				
ANR	1351171	EqualityExpression	f == NULL		1351101	0		==			
ANR	1351172	Identifier	f		1351101	0					
ANR	1351173	Identifier	NULL		1351101	1					
ANR	1351174	ReturnStatement	return NULL ;	314:4:7769:7780	1351101	1	True				
ANR	1351175	Identifier	NULL		1351101	0					
ANR	1351176	ElseStatement	else		1351101	0					
ANR	1351177	ReturnStatement	return f ;	316:4:7793:7801	1351101	0	True				
ANR	1351178	Identifier	f		1351101	0					
ANR	1351179	ReturnType	file_node *		1351101	1					
ANR	1351180	Identifier	FileIndex :: GetFileNode		1351101	2					
ANR	1351181	ParameterList	"struct in_addr machine_IP , const char * owner_name , const char * file_name"		1351101	3					
ANR	1351182	Parameter	struct in_addr machine_IP	298:34:7400:7424	1351101	0	True				
ANR	1351183	ParameterType	struct in_addr		1351101	0					
ANR	1351184	Identifier	machine_IP		1351101	1					
ANR	1351185	Parameter	const char * owner_name	299:6:7433:7457	1351101	1	True				
ANR	1351186	ParameterType	const char *		1351101	0					
ANR	1351187	Identifier	owner_name		1351101	1					
ANR	1351188	Parameter	const char * file_name	300:6:7466:7489	1351101	2	True				
ANR	1351189	ParameterType	const char *		1351101	0					
ANR	1351190	Identifier	file_name		1351101	1					
ANR	1351191	CFGEntryNode	ENTRY		1351101		True				
ANR	1351192	CFGExitNode	EXIT		1351101		True				
ANR	1351193	Symbol	owner_name		1351101						
ANR	1351194	Symbol	NULL		1351101						
ANR	1351195	Symbol	FindOrAddMachine		1351101						
ANR	1351196	Symbol	machine_IP		1351101						
ANR	1351197	Symbol	file_name		1351101						
ANR	1351198	Symbol	f		1351101						
ANR	1351199	Symbol	o -> file_root		1351101						
ANR	1351200	Symbol	FindOrAddFile		1351101						
ANR	1351201	Symbol	* o		1351101						
ANR	1351202	Symbol	FindOrAddOwner		1351101						
ANR	1351203	Symbol	m		1351101						
ANR	1351204	Symbol	o		1351101						
ANR	1351205	Function	FileIndex :: GetFileInfo	320:0:7807:8087							
ANR	1351206	FunctionDef	"FileIndex :: GetFileInfo (struct in_addr machine_IP , const char * owner_name , const char * file_name)"		1351205	0					
ANR	1351207	CompoundStatement		323:0:7948:8087	1351205	0					
ANR	1351208	IdentifierDeclStatement	file_node * f ;	324:2:7952:7964	1351205	0	True				
ANR	1351209	IdentifierDecl	* f		1351205	0					
ANR	1351210	IdentifierDeclType	file_node *		1351205	0					
ANR	1351211	Identifier	f		1351205	1					
ANR	1351212	ExpressionStatement	"f = GetFileNode ( machine_IP , owner_name , file_name )"	326:2:7969:8019	1351205	1	True				
ANR	1351213	AssignmentExpression	"f = GetFileNode ( machine_IP , owner_name , file_name )"		1351205	0		=			
ANR	1351214	Identifier	f		1351205	0					
ANR	1351215	CallExpression	"GetFileNode ( machine_IP , owner_name , file_name )"		1351205	1					
ANR	1351216	Callee	GetFileNode		1351205	0					
ANR	1351217	Identifier	GetFileNode		1351205	0					
ANR	1351218	ArgumentList	machine_IP		1351205	1					
ANR	1351219	Argument	machine_IP		1351205	0					
ANR	1351220	Identifier	machine_IP		1351205	0					
ANR	1351221	Argument	owner_name		1351205	1					
ANR	1351222	Identifier	owner_name		1351205	0					
ANR	1351223	Argument	file_name		1351205	2					
ANR	1351224	Identifier	file_name		1351205	0					
ANR	1351225	IfStatement	if ( f == NULL )		1351205	2					
ANR	1351226	Condition	f == NULL	327:6:8027:8035	1351205	0	True				
ANR	1351227	EqualityExpression	f == NULL		1351205	0		==			
ANR	1351228	Identifier	f		1351205	0					
ANR	1351229	Identifier	NULL		1351205	1					
ANR	1351230	ReturnStatement	return NULL ;	328:4:8042:8053	1351205	1	True				
ANR	1351231	Identifier	NULL		1351205	0					
ANR	1351232	ElseStatement	else		1351205	0					
ANR	1351233	ReturnStatement	return f -> file_data ;	330:4:8066:8085	1351205	0	True				
ANR	1351234	PtrMemberAccess	f -> file_data		1351205	0					
ANR	1351235	Identifier	f		1351205	0					
ANR	1351236	Identifier	file_data		1351205	1					
ANR	1351237	ReturnType	file_info_node *		1351205	1					
ANR	1351238	Identifier	FileIndex :: GetFileInfo		1351205	2					
ANR	1351239	ParameterList	"struct in_addr machine_IP , const char * owner_name , const char * file_name"		1351205	3					
ANR	1351240	Parameter	struct in_addr machine_IP	320:39:7846:7870	1351205	0	True				
ANR	1351241	ParameterType	struct in_addr		1351205	0					
ANR	1351242	Identifier	machine_IP		1351205	1					
ANR	1351243	Parameter	const char * owner_name	321:11:7884:7908	1351205	1	True				
ANR	1351244	ParameterType	const char *		1351205	0					
ANR	1351245	Identifier	owner_name		1351205	1					
ANR	1351246	Parameter	const char * file_name	322:11:7922:7945	1351205	2	True				
ANR	1351247	ParameterType	const char *		1351205	0					
ANR	1351248	Identifier	file_name		1351205	1					
ANR	1351249	CFGEntryNode	ENTRY		1351205		True				
ANR	1351250	CFGExitNode	EXIT		1351205		True				
ANR	1351251	Symbol	* f		1351205						
ANR	1351252	Symbol	owner_name		1351205						
ANR	1351253	Symbol	NULL		1351205						
ANR	1351254	Symbol	machine_IP		1351205						
ANR	1351255	Symbol	file_name		1351205						
ANR	1351256	Symbol	f		1351205						
ANR	1351257	Symbol	f -> file_data		1351205						
ANR	1351258	Symbol	GetFileNode		1351205						
ANR	1351259	Function	FileIndex :: RenameFile	334:0:8091:8611							
ANR	1351260	FunctionDef	"FileIndex :: RenameFile (struct in_addr machine_IP , const char * owner_name , const char * file_name , const char * new_file_name , file_info_node * file_info_ptr)"		1351259	0					
ANR	1351261	CompoundStatement		339:0:8294:8611	1351259	0					
ANR	1351262	IdentifierDeclStatement	int A_code ;	340:1:8297:8307	1351259	0	True				
ANR	1351263	IdentifierDecl	A_code		1351259	0					
ANR	1351264	IdentifierDeclType	int		1351259	0					
ANR	1351265	Identifier	A_code		1351259	1					
ANR	1351266	IfStatement	"if ( Exists ( machine_IP , owner_name , file_name ) != EXISTS )"		1351259	1					
ANR	1351267	Condition	"Exists ( machine_IP , owner_name , file_name ) != EXISTS"	342:5:8316:8366	1351259	0	True				
ANR	1351268	EqualityExpression	"Exists ( machine_IP , owner_name , file_name ) != EXISTS"		1351259	0		!=			
ANR	1351269	CallExpression	"Exists ( machine_IP , owner_name , file_name )"		1351259	0					
ANR	1351270	Callee	Exists		1351259	0					
ANR	1351271	Identifier	Exists		1351259	0					
ANR	1351272	ArgumentList	machine_IP		1351259	1					
ANR	1351273	Argument	machine_IP		1351259	0					
ANR	1351274	Identifier	machine_IP		1351259	0					
ANR	1351275	Argument	owner_name		1351259	1					
ANR	1351276	Identifier	owner_name		1351259	0					
ANR	1351277	Argument	file_name		1351259	2					
ANR	1351278	Identifier	file_name		1351259	0					
ANR	1351279	Identifier	EXISTS		1351259	1					
ANR	1351280	ReturnStatement	return DOES_NOT_EXIST ;	343:2:8371:8392	1351259	1	True				
ANR	1351281	Identifier	DOES_NOT_EXIST		1351259	0					
ANR	1351282	ExpressionStatement	"A_code = AddNewFile ( machine_IP , owner_name , new_file_name , file_info_ptr )"	344:1:8395:8468	1351259	2	True				
ANR	1351283	AssignmentExpression	"A_code = AddNewFile ( machine_IP , owner_name , new_file_name , file_info_ptr )"		1351259	0		=			
ANR	1351284	Identifier	A_code		1351259	0					
ANR	1351285	CallExpression	"AddNewFile ( machine_IP , owner_name , new_file_name , file_info_ptr )"		1351259	1					
ANR	1351286	Callee	AddNewFile		1351259	0					
ANR	1351287	Identifier	AddNewFile		1351259	0					
ANR	1351288	ArgumentList	machine_IP		1351259	1					
ANR	1351289	Argument	machine_IP		1351259	0					
ANR	1351290	Identifier	machine_IP		1351259	0					
ANR	1351291	Argument	owner_name		1351259	1					
ANR	1351292	Identifier	owner_name		1351259	0					
ANR	1351293	Argument	new_file_name		1351259	2					
ANR	1351294	Identifier	new_file_name		1351259	0					
ANR	1351295	Argument	file_info_ptr		1351259	3					
ANR	1351296	Identifier	file_info_ptr		1351259	0					
ANR	1351297	IfStatement	if ( A_code == EXISTS )		1351259	3					
ANR	1351298	Condition	A_code == EXISTS	345:5:8475:8490	1351259	0	True				
ANR	1351299	EqualityExpression	A_code == EXISTS		1351259	0		==			
ANR	1351300	Identifier	A_code		1351259	0					
ANR	1351301	Identifier	EXISTS		1351259	1					
ANR	1351302	ReturnStatement	return FILE_ALREADY_EXISTS ;	346:2:8495:8521	1351259	1	True				
ANR	1351303	Identifier	FILE_ALREADY_EXISTS		1351259	0					
ANR	1351304	ExpressionStatement	"( void ) DeleteFile ( machine_IP , owner_name , file_name )"	347:1:8524:8576	1351259	4	True				
ANR	1351305	CastExpression	"( void ) DeleteFile ( machine_IP , owner_name , file_name )"		1351259	0					
ANR	1351306	CastTarget	void		1351259	0					
ANR	1351307	CallExpression	"DeleteFile ( machine_IP , owner_name , file_name )"		1351259	1					
ANR	1351308	Callee	DeleteFile		1351259	0					
ANR	1351309	Identifier	DeleteFile		1351259	0					
ANR	1351310	ArgumentList	machine_IP		1351259	1					
ANR	1351311	Argument	machine_IP		1351259	0					
ANR	1351312	Identifier	machine_IP		1351259	0					
ANR	1351313	Argument	owner_name		1351259	1					
ANR	1351314	Identifier	owner_name		1351259	0					
ANR	1351315	Argument	file_name		1351259	2					
ANR	1351316	Identifier	file_name		1351259	0					
ANR	1351317	ReturnStatement	return 0 ;	349:1:8601:8609	1351259	5	True				
ANR	1351318	PrimaryExpression	0		1351259	0					
ANR	1351319	ReturnType	int		1351259	1					
ANR	1351320	Identifier	FileIndex :: RenameFile		1351259	2					
ANR	1351321	ParameterList	"struct in_addr machine_IP , const char * owner_name , const char * file_name , const char * new_file_name , file_info_node * file_info_ptr"		1351259	3					
ANR	1351322	Parameter	struct in_addr machine_IP	334:26:8117:8142	1351259	0	True				
ANR	1351323	ParameterType	struct in_addr		1351259	0					
ANR	1351324	Identifier	machine_IP		1351259	1					
ANR	1351325	Parameter	const char * owner_name	335:8:8153:8178	1351259	1	True				
ANR	1351326	ParameterType	const char *		1351259	0					
ANR	1351327	Identifier	owner_name		1351259	1					
ANR	1351328	Parameter	const char * file_name	336:8:8189:8213	1351259	2	True				
ANR	1351329	ParameterType	const char *		1351259	0					
ANR	1351330	Identifier	file_name		1351259	1					
ANR	1351331	Parameter	const char * new_file_name	337:8:8224:8252	1351259	3	True				
ANR	1351332	ParameterType	const char *		1351259	0					
ANR	1351333	Identifier	new_file_name		1351259	1					
ANR	1351334	Parameter	file_info_node * file_info_ptr	338:8:8263:8291	1351259	4	True				
ANR	1351335	ParameterType	file_info_node *		1351259	0					
ANR	1351336	Identifier	file_info_ptr		1351259	1					
ANR	1351337	CFGEntryNode	ENTRY		1351259		True				
ANR	1351338	CFGExitNode	EXIT		1351259		True				
ANR	1351339	Symbol	DOES_NOT_EXIST		1351259						
ANR	1351340	Symbol	owner_name		1351259						
ANR	1351341	Symbol	new_file_name		1351259						
ANR	1351342	Symbol	EXISTS		1351259						
ANR	1351343	Symbol	machine_IP		1351259						
ANR	1351344	Symbol	file_name		1351259						
ANR	1351345	Symbol	Exists		1351259						
ANR	1351346	Symbol	FILE_ALREADY_EXISTS		1351259						
ANR	1351347	Symbol	file_info_ptr		1351259						
ANR	1351348	Symbol	A_code		1351259						
ANR	1351349	Symbol	AddNewFile		1351259						
ANR	1351350	Function	FileIndex :: DeleteFile	353:0:8615:14257							
ANR	1351351	FunctionDef	"FileIndex :: DeleteFile (struct in_addr machine_IP , const char * owner_name , const char * file_name)"		1351350	0					
ANR	1351352	CompoundStatement		356:0:8737:14257	1351350	0					
ANR	1351353	IdentifierDeclStatement	machine_node * machine_trail = NULL ;	357:1:8740:8772	1351350	0	True				
ANR	1351354	IdentifierDecl	* machine_trail = NULL		1351350	0					
ANR	1351355	IdentifierDeclType	machine_node *		1351350	0					
ANR	1351356	Identifier	machine_trail		1351350	1					
ANR	1351357	AssignmentExpression	* machine_trail = NULL		1351350	2		=			
ANR	1351358	Identifier	NULL		1351350	0					
ANR	1351359	Identifier	NULL		1351350	1					
ANR	1351360	IdentifierDeclStatement	machine_node * machine_ptr ;	358:1:8775:8800	1351350	1	True				
ANR	1351361	IdentifierDecl	* machine_ptr		1351350	0					
ANR	1351362	IdentifierDeclType	machine_node *		1351350	0					
ANR	1351363	Identifier	machine_ptr		1351350	1					
ANR	1351364	IdentifierDeclStatement	int m_temp ;	359:1:8803:8823	1351350	2	True				
ANR	1351365	IdentifierDecl	m_temp		1351350	0					
ANR	1351366	IdentifierDeclType	int		1351350	0					
ANR	1351367	Identifier	m_temp		1351350	1					
ANR	1351368	IdentifierDeclStatement	machine_node * machine_rep_trail = NULL ;	360:1:8826:8862	1351350	3	True				
ANR	1351369	IdentifierDecl	* machine_rep_trail = NULL		1351350	0					
ANR	1351370	IdentifierDeclType	machine_node *		1351350	0					
ANR	1351371	Identifier	machine_rep_trail		1351350	1					
ANR	1351372	AssignmentExpression	* machine_rep_trail = NULL		1351350	2		=			
ANR	1351373	Identifier	NULL		1351350	0					
ANR	1351374	Identifier	NULL		1351350	1					
ANR	1351375	IdentifierDeclStatement	machine_node * machine_rep_ptr ;	361:1:8865:8894	1351350	4	True				
ANR	1351376	IdentifierDecl	* machine_rep_ptr		1351350	0					
ANR	1351377	IdentifierDeclType	machine_node *		1351350	0					
ANR	1351378	Identifier	machine_rep_ptr		1351350	1					
ANR	1351379	IdentifierDeclStatement	owner_node * owner_trail = NULL ;	362:1:8897:8927	1351350	5	True				
ANR	1351380	IdentifierDecl	* owner_trail = NULL		1351350	0					
ANR	1351381	IdentifierDeclType	owner_node *		1351350	0					
ANR	1351382	Identifier	owner_trail		1351350	1					
ANR	1351383	AssignmentExpression	* owner_trail = NULL		1351350	2		=			
ANR	1351384	Identifier	NULL		1351350	0					
ANR	1351385	Identifier	NULL		1351350	1					
ANR	1351386	IdentifierDeclStatement	owner_node * owner_ptr ;	363:1:8930:8953	1351350	6	True				
ANR	1351387	IdentifierDecl	* owner_ptr		1351350	0					
ANR	1351388	IdentifierDeclType	owner_node *		1351350	0					
ANR	1351389	Identifier	owner_ptr		1351350	1					
ANR	1351390	IdentifierDeclStatement	int o_temp ;	364:1:8956:8976	1351350	7	True				
ANR	1351391	IdentifierDecl	o_temp		1351350	0					
ANR	1351392	IdentifierDeclType	int		1351350	0					
ANR	1351393	Identifier	o_temp		1351350	1					
ANR	1351394	IdentifierDeclStatement	owner_node * owner_rep_trail = NULL ;	365:1:8979:9013	1351350	8	True				
ANR	1351395	IdentifierDecl	* owner_rep_trail = NULL		1351350	0					
ANR	1351396	IdentifierDeclType	owner_node *		1351350	0					
ANR	1351397	Identifier	owner_rep_trail		1351350	1					
ANR	1351398	AssignmentExpression	* owner_rep_trail = NULL		1351350	2		=			
ANR	1351399	Identifier	NULL		1351350	0					
ANR	1351400	Identifier	NULL		1351350	1					
ANR	1351401	IdentifierDeclStatement	owner_node * owner_rep_ptr ;	366:1:9016:9043	1351350	9	True				
ANR	1351402	IdentifierDecl	* owner_rep_ptr		1351350	0					
ANR	1351403	IdentifierDeclType	owner_node *		1351350	0					
ANR	1351404	Identifier	owner_rep_ptr		1351350	1					
ANR	1351405	IdentifierDeclStatement	file_node * file_trail = NULL ;	367:1:9046:9075	1351350	10	True				
ANR	1351406	IdentifierDecl	* file_trail = NULL		1351350	0					
ANR	1351407	IdentifierDeclType	file_node *		1351350	0					
ANR	1351408	Identifier	file_trail		1351350	1					
ANR	1351409	AssignmentExpression	* file_trail = NULL		1351350	2		=			
ANR	1351410	Identifier	NULL		1351350	0					
ANR	1351411	Identifier	NULL		1351350	1					
ANR	1351412	IdentifierDeclStatement	file_node * file_ptr ;	368:1:9078:9100	1351350	11	True				
ANR	1351413	IdentifierDecl	* file_ptr		1351350	0					
ANR	1351414	IdentifierDeclType	file_node *		1351350	0					
ANR	1351415	Identifier	file_ptr		1351350	1					
ANR	1351416	IdentifierDeclStatement	int f_temp ;	369:1:9103:9123	1351350	12	True				
ANR	1351417	IdentifierDecl	f_temp		1351350	0					
ANR	1351418	IdentifierDeclType	int		1351350	0					
ANR	1351419	Identifier	f_temp		1351350	1					
ANR	1351420	IdentifierDeclStatement	file_node * file_rep_trail = NULL ;	370:1:9126:9159	1351350	13	True				
ANR	1351421	IdentifierDecl	* file_rep_trail = NULL		1351350	0					
ANR	1351422	IdentifierDeclType	file_node *		1351350	0					
ANR	1351423	Identifier	file_rep_trail		1351350	1					
ANR	1351424	AssignmentExpression	* file_rep_trail = NULL		1351350	2		=			
ANR	1351425	Identifier	NULL		1351350	0					
ANR	1351426	Identifier	NULL		1351350	1					
ANR	1351427	IdentifierDeclStatement	file_node * file_rep_ptr ;	371:1:9162:9188	1351350	14	True				
ANR	1351428	IdentifierDecl	* file_rep_ptr		1351350	0					
ANR	1351429	IdentifierDeclType	file_node *		1351350	0					
ANR	1351430	Identifier	file_rep_ptr		1351350	1					
ANR	1351431	IdentifierDeclStatement	int hash_bucket ;	372:1:9191:9216	1351350	15	True				
ANR	1351432	IdentifierDecl	hash_bucket		1351350	0					
ANR	1351433	IdentifierDeclType	int		1351350	0					
ANR	1351434	Identifier	hash_bucket		1351350	1					
ANR	1351435	IdentifierDeclStatement	int retCode = 0 ;	374:1:9261:9284	1351350	16	True				
ANR	1351436	IdentifierDecl	retCode = 0		1351350	0					
ANR	1351437	IdentifierDeclType	int		1351350	0					
ANR	1351438	Identifier	retCode		1351350	1					
ANR	1351439	AssignmentExpression	retCode = 0		1351350	2		=			
ANR	1351440	Identifier	retCode		1351350	0					
ANR	1351441	PrimaryExpression	0		1351350	1					
ANR	1351442	IdentifierDeclStatement	char machine_name [ MAX_MACHINE_NAME_LENGTH ] ;	375:1:9287:9338	1351350	17	True				
ANR	1351443	IdentifierDecl	machine_name [ MAX_MACHINE_NAME_LENGTH ]		1351350	0					
ANR	1351444	IdentifierDeclType	char [ MAX_MACHINE_NAME_LENGTH ]		1351350	0					
ANR	1351445	Identifier	machine_name		1351350	1					
ANR	1351446	Identifier	MAX_MACHINE_NAME_LENGTH		1351350	2					
ANR	1351447	IdentifierDeclStatement	char pathname [ MAX_PATHNAME_LENGTH ] ;	376:1:9341:9384	1351350	18	True				
ANR	1351448	IdentifierDecl	pathname [ MAX_PATHNAME_LENGTH ]		1351350	0					
ANR	1351449	IdentifierDeclType	char [ MAX_PATHNAME_LENGTH ]		1351350	0					
ANR	1351450	Identifier	pathname		1351350	1					
ANR	1351451	Identifier	MAX_PATHNAME_LENGTH		1351350	2					
ANR	1351452	ExpressionStatement	hash_bucket = Hash ( machine_IP )	378:1:9389:9419	1351350	19	True				
ANR	1351453	AssignmentExpression	hash_bucket = Hash ( machine_IP )		1351350	0		=			
ANR	1351454	Identifier	hash_bucket		1351350	0					
ANR	1351455	CallExpression	Hash ( machine_IP )		1351350	1					
ANR	1351456	Callee	Hash		1351350	0					
ANR	1351457	Identifier	Hash		1351350	0					
ANR	1351458	ArgumentList	machine_IP		1351350	1					
ANR	1351459	Argument	machine_IP		1351350	0					
ANR	1351460	Identifier	machine_IP		1351350	0					
ANR	1351461	ExpressionStatement	machine_ptr = hash_table [ hash_bucket ]	379:1:9422:9459	1351350	20	True				
ANR	1351462	AssignmentExpression	machine_ptr = hash_table [ hash_bucket ]		1351350	0		=			
ANR	1351463	Identifier	machine_ptr		1351350	0					
ANR	1351464	ArrayIndexing	hash_table [ hash_bucket ]		1351350	1					
ANR	1351465	Identifier	hash_table		1351350	0					
ANR	1351466	Identifier	hash_bucket		1351350	1					
ANR	1351467	WhileStatement	while ( ( machine_ptr != NULL ) && ( machine_ptr -> machine_IP . s_addr != machine_IP . s_addr ) )		1351350	21					
ANR	1351468	Condition	( machine_ptr != NULL ) && ( machine_ptr -> machine_IP . s_addr != machine_IP . s_addr )	380:8:9469:9552	1351350	0	True				
ANR	1351469	AndExpression	( machine_ptr != NULL ) && ( machine_ptr -> machine_IP . s_addr != machine_IP . s_addr )		1351350	0		&&			
ANR	1351470	EqualityExpression	machine_ptr != NULL		1351350	0		!=			
ANR	1351471	Identifier	machine_ptr		1351350	0					
ANR	1351472	Identifier	NULL		1351350	1					
ANR	1351473	EqualityExpression	machine_ptr -> machine_IP . s_addr != machine_IP . s_addr		1351350	1		!=			
ANR	1351474	MemberAccess	machine_ptr -> machine_IP . s_addr		1351350	0					
ANR	1351475	PtrMemberAccess	machine_ptr -> machine_IP		1351350	0					
ANR	1351476	Identifier	machine_ptr		1351350	0					
ANR	1351477	Identifier	machine_IP		1351350	1					
ANR	1351478	Identifier	s_addr		1351350	1					
ANR	1351479	MemberAccess	machine_IP . s_addr		1351350	1					
ANR	1351480	Identifier	machine_IP		1351350	0					
ANR	1351481	Identifier	s_addr		1351350	1					
ANR	1351482	CompoundStatement		26:60:817:817	1351350	1					
ANR	1351483	ExpressionStatement	machine_trail = machine_ptr	382:2:9559:9586	1351350	0	True				
ANR	1351484	AssignmentExpression	machine_trail = machine_ptr		1351350	0		=			
ANR	1351485	Identifier	machine_trail		1351350	0					
ANR	1351486	Identifier	machine_ptr		1351350	1					
ANR	1351487	ExpressionStatement	m_temp = ( machine_IP . s_addr < machine_ptr -> machine_IP . s_addr )	383:2:9590:9651	1351350	1	True				
ANR	1351488	AssignmentExpression	m_temp = ( machine_IP . s_addr < machine_ptr -> machine_IP . s_addr )		1351350	0		=			
ANR	1351489	Identifier	m_temp		1351350	0					
ANR	1351490	RelationalExpression	machine_IP . s_addr < machine_ptr -> machine_IP . s_addr		1351350	1		<			
ANR	1351491	MemberAccess	machine_IP . s_addr		1351350	0					
ANR	1351492	Identifier	machine_IP		1351350	0					
ANR	1351493	Identifier	s_addr		1351350	1					
ANR	1351494	MemberAccess	machine_ptr -> machine_IP . s_addr		1351350	1					
ANR	1351495	PtrMemberAccess	machine_ptr -> machine_IP		1351350	0					
ANR	1351496	Identifier	machine_ptr		1351350	0					
ANR	1351497	Identifier	machine_IP		1351350	1					
ANR	1351498	Identifier	s_addr		1351350	1					
ANR	1351499	IfStatement	if ( m_temp )		1351350	2					
ANR	1351500	Condition	m_temp	384:6:9659:9664	1351350	0	True				
ANR	1351501	Identifier	m_temp		1351350	0					
ANR	1351502	ExpressionStatement	machine_ptr = machine_ptr -> left	385:3:9670:9701	1351350	1	True				
ANR	1351503	AssignmentExpression	machine_ptr = machine_ptr -> left		1351350	0		=			
ANR	1351504	Identifier	machine_ptr		1351350	0					
ANR	1351505	PtrMemberAccess	machine_ptr -> left		1351350	1					
ANR	1351506	Identifier	machine_ptr		1351350	0					
ANR	1351507	Identifier	left		1351350	1					
ANR	1351508	ElseStatement	else		1351350	0					
ANR	1351509	ExpressionStatement	machine_ptr = machine_ptr -> right	387:3:9713:9745	1351350	0	True				
ANR	1351510	AssignmentExpression	machine_ptr = machine_ptr -> right		1351350	0		=			
ANR	1351511	Identifier	machine_ptr		1351350	0					
ANR	1351512	PtrMemberAccess	machine_ptr -> right		1351350	1					
ANR	1351513	Identifier	machine_ptr		1351350	0					
ANR	1351514	Identifier	right		1351350	1					
ANR	1351515	IfStatement	if ( machine_ptr == NULL )		1351350	22					
ANR	1351516	Condition	machine_ptr == NULL	389:5:9758:9776	1351350	0	True				
ANR	1351517	EqualityExpression	machine_ptr == NULL		1351350	0		==			
ANR	1351518	Identifier	machine_ptr		1351350	0					
ANR	1351519	Identifier	NULL		1351350	1					
ANR	1351520	CompoundStatement		34:26:1041:1041	1351350	1					
ANR	1351521	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: IMDS inconsistency; file exists but cannot be found\\n"" )"	390:2:9783:9864	1351350	0	True				
ANR	1351522	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: IMDS inconsistency; file exists but cannot be found\\n"" )"		1351350	0					
ANR	1351523	Callee	dprintf		1351350	0					
ANR	1351524	Identifier	dprintf		1351350	0					
ANR	1351525	ArgumentList	D_ALWAYS		1351350	1					
ANR	1351526	Argument	D_ALWAYS		1351350	0					
ANR	1351527	Identifier	D_ALWAYS		1351350	0					
ANR	1351528	Argument	"""ERROR: IMDS inconsistency; file exists but cannot be found\\n"""		1351350	1					
ANR	1351529	PrimaryExpression	"""ERROR: IMDS inconsistency; file exists but cannot be found\\n"""		1351350	0					
ANR	1351530	ExpressionStatement	exit ( IMDS_INDEX_ERROR )	391:2:9868:9890	1351350	1	True				
ANR	1351531	CallExpression	exit ( IMDS_INDEX_ERROR )		1351350	0					
ANR	1351532	Callee	exit		1351350	0					
ANR	1351533	Identifier	exit		1351350	0					
ANR	1351534	ArgumentList	IMDS_INDEX_ERROR		1351350	1					
ANR	1351535	Argument	IMDS_INDEX_ERROR		1351350	0					
ANR	1351536	Identifier	IMDS_INDEX_ERROR		1351350	0					
ANR	1351537	ExpressionStatement	owner_ptr = machine_ptr -> owner_root	393:1:9899:9934	1351350	23	True				
ANR	1351538	AssignmentExpression	owner_ptr = machine_ptr -> owner_root		1351350	0		=			
ANR	1351539	Identifier	owner_ptr		1351350	0					
ANR	1351540	PtrMemberAccess	machine_ptr -> owner_root		1351350	1					
ANR	1351541	Identifier	machine_ptr		1351350	0					
ANR	1351542	Identifier	owner_root		1351350	1					
ANR	1351543	WhileStatement	"while ( ( owner_ptr != NULL ) && ( ( o_temp = strncmp ( owner_name , owner_ptr -> owner_name , MAX_NAME_LENGTH ) ) != 0 ) )"		1351350	24					
ANR	1351544	Condition	"( owner_ptr != NULL ) && ( ( o_temp = strncmp ( owner_name , owner_ptr -> owner_name , MAX_NAME_LENGTH ) ) != 0 )"	394:8:9944:10073	1351350	0	True				
ANR	1351545	AndExpression	"( owner_ptr != NULL ) && ( ( o_temp = strncmp ( owner_name , owner_ptr -> owner_name , MAX_NAME_LENGTH ) ) != 0 )"		1351350	0		&&			
ANR	1351546	EqualityExpression	owner_ptr != NULL		1351350	0		!=			
ANR	1351547	Identifier	owner_ptr		1351350	0					
ANR	1351548	Identifier	NULL		1351350	1					
ANR	1351549	EqualityExpression	"( o_temp = strncmp ( owner_name , owner_ptr -> owner_name , MAX_NAME_LENGTH ) ) != 0"		1351350	1		!=			
ANR	1351550	AssignmentExpression	"o_temp = strncmp ( owner_name , owner_ptr -> owner_name , MAX_NAME_LENGTH )"		1351350	0		=			
ANR	1351551	Identifier	o_temp		1351350	0					
ANR	1351552	CallExpression	"strncmp ( owner_name , owner_ptr -> owner_name , MAX_NAME_LENGTH )"		1351350	1					
ANR	1351553	Callee	strncmp		1351350	0					
ANR	1351554	Identifier	strncmp		1351350	0					
ANR	1351555	ArgumentList	owner_name		1351350	1					
ANR	1351556	Argument	owner_name		1351350	0					
ANR	1351557	Identifier	owner_name		1351350	0					
ANR	1351558	Argument	owner_ptr -> owner_name		1351350	1					
ANR	1351559	PtrMemberAccess	owner_ptr -> owner_name		1351350	0					
ANR	1351560	Identifier	owner_ptr		1351350	0					
ANR	1351561	Identifier	owner_name		1351350	1					
ANR	1351562	Argument	MAX_NAME_LENGTH		1351350	2					
ANR	1351563	Identifier	MAX_NAME_LENGTH		1351350	0					
ANR	1351564	PrimaryExpression	0		1351350	1					
ANR	1351565	CompoundStatement		41:40:1338:1338	1351350	1					
ANR	1351566	ExpressionStatement	owner_trail = owner_ptr	397:2:10080:10103	1351350	0	True				
ANR	1351567	AssignmentExpression	owner_trail = owner_ptr		1351350	0		=			
ANR	1351568	Identifier	owner_trail		1351350	0					
ANR	1351569	Identifier	owner_ptr		1351350	1					
ANR	1351570	IfStatement	if ( o_temp < 0 )		1351350	1					
ANR	1351571	Condition	o_temp < 0	398:6:10111:10120	1351350	0	True				
ANR	1351572	RelationalExpression	o_temp < 0		1351350	0		<			
ANR	1351573	Identifier	o_temp		1351350	0					
ANR	1351574	PrimaryExpression	0		1351350	1					
ANR	1351575	ExpressionStatement	owner_ptr = owner_ptr -> left	399:3:10126:10153	1351350	1	True				
ANR	1351576	AssignmentExpression	owner_ptr = owner_ptr -> left		1351350	0		=			
ANR	1351577	Identifier	owner_ptr		1351350	0					
ANR	1351578	PtrMemberAccess	owner_ptr -> left		1351350	1					
ANR	1351579	Identifier	owner_ptr		1351350	0					
ANR	1351580	Identifier	left		1351350	1					
ANR	1351581	ElseStatement	else		1351350	0					
ANR	1351582	ExpressionStatement	owner_ptr = owner_ptr -> right	401:3:10165:10193	1351350	0	True				
ANR	1351583	AssignmentExpression	owner_ptr = owner_ptr -> right		1351350	0		=			
ANR	1351584	Identifier	owner_ptr		1351350	0					
ANR	1351585	PtrMemberAccess	owner_ptr -> right		1351350	1					
ANR	1351586	Identifier	owner_ptr		1351350	0					
ANR	1351587	Identifier	right		1351350	1					
ANR	1351588	IfStatement	if ( owner_ptr == NULL )		1351350	25					
ANR	1351589	Condition	owner_ptr == NULL	403:5:10206:10222	1351350	0	True				
ANR	1351590	EqualityExpression	owner_ptr == NULL		1351350	0		==			
ANR	1351591	Identifier	owner_ptr		1351350	0					
ANR	1351592	Identifier	NULL		1351350	1					
ANR	1351593	CompoundStatement		48:24:1487:1487	1351350	1					
ANR	1351594	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: IMDS inconsistency; file exists but cannot be found\\n"" )"	404:2:10229:10310	1351350	0	True				
ANR	1351595	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: IMDS inconsistency; file exists but cannot be found\\n"" )"		1351350	0					
ANR	1351596	Callee	dprintf		1351350	0					
ANR	1351597	Identifier	dprintf		1351350	0					
ANR	1351598	ArgumentList	D_ALWAYS		1351350	1					
ANR	1351599	Argument	D_ALWAYS		1351350	0					
ANR	1351600	Identifier	D_ALWAYS		1351350	0					
ANR	1351601	Argument	"""ERROR: IMDS inconsistency; file exists but cannot be found\\n"""		1351350	1					
ANR	1351602	PrimaryExpression	"""ERROR: IMDS inconsistency; file exists but cannot be found\\n"""		1351350	0					
ANR	1351603	ExpressionStatement	exit ( IMDS_INDEX_ERROR )	405:2:10314:10336	1351350	1	True				
ANR	1351604	CallExpression	exit ( IMDS_INDEX_ERROR )		1351350	0					
ANR	1351605	Callee	exit		1351350	0					
ANR	1351606	Identifier	exit		1351350	0					
ANR	1351607	ArgumentList	IMDS_INDEX_ERROR		1351350	1					
ANR	1351608	Argument	IMDS_INDEX_ERROR		1351350	0					
ANR	1351609	Identifier	IMDS_INDEX_ERROR		1351350	0					
ANR	1351610	ExpressionStatement	file_ptr = owner_ptr -> file_root	407:1:10345:10376	1351350	26	True				
ANR	1351611	AssignmentExpression	file_ptr = owner_ptr -> file_root		1351350	0		=			
ANR	1351612	Identifier	file_ptr		1351350	0					
ANR	1351613	PtrMemberAccess	owner_ptr -> file_root		1351350	1					
ANR	1351614	Identifier	owner_ptr		1351350	0					
ANR	1351615	Identifier	file_root		1351350	1					
ANR	1351616	WhileStatement	"while ( ( file_ptr != NULL ) && ( ( f_temp = strncmp ( file_name , file_ptr -> file_name , MAX_CONDOR_FILENAME_LENGTH ) ) != 0 ) )"		1351350	27					
ANR	1351617	Condition	"( file_ptr != NULL ) && ( ( f_temp = strncmp ( file_name , file_ptr -> file_name , MAX_CONDOR_FILENAME_LENGTH ) ) != 0 )"	408:8:10386:10531	1351350	0	True				
ANR	1351618	AndExpression	"( file_ptr != NULL ) && ( ( f_temp = strncmp ( file_name , file_ptr -> file_name , MAX_CONDOR_FILENAME_LENGTH ) ) != 0 )"		1351350	0		&&			
ANR	1351619	EqualityExpression	file_ptr != NULL		1351350	0		!=			
ANR	1351620	Identifier	file_ptr		1351350	0					
ANR	1351621	Identifier	NULL		1351350	1					
ANR	1351622	EqualityExpression	"( f_temp = strncmp ( file_name , file_ptr -> file_name , MAX_CONDOR_FILENAME_LENGTH ) ) != 0"		1351350	1		!=			
ANR	1351623	AssignmentExpression	"f_temp = strncmp ( file_name , file_ptr -> file_name , MAX_CONDOR_FILENAME_LENGTH )"		1351350	0		=			
ANR	1351624	Identifier	f_temp		1351350	0					
ANR	1351625	CallExpression	"strncmp ( file_name , file_ptr -> file_name , MAX_CONDOR_FILENAME_LENGTH )"		1351350	1					
ANR	1351626	Callee	strncmp		1351350	0					
ANR	1351627	Identifier	strncmp		1351350	0					
ANR	1351628	ArgumentList	file_name		1351350	1					
ANR	1351629	Argument	file_name		1351350	0					
ANR	1351630	Identifier	file_name		1351350	0					
ANR	1351631	Argument	file_ptr -> file_name		1351350	1					
ANR	1351632	PtrMemberAccess	file_ptr -> file_name		1351350	0					
ANR	1351633	Identifier	file_ptr		1351350	0					
ANR	1351634	Identifier	file_name		1351350	1					
ANR	1351635	Argument	MAX_CONDOR_FILENAME_LENGTH		1351350	2					
ANR	1351636	Identifier	MAX_CONDOR_FILENAME_LENGTH		1351350	0					
ANR	1351637	PrimaryExpression	0		1351350	1					
ANR	1351638	CompoundStatement		56:17:1796:1796	1351350	1					
ANR	1351639	ExpressionStatement	file_trail = file_ptr	412:2:10538:10559	1351350	0	True				
ANR	1351640	AssignmentExpression	file_trail = file_ptr		1351350	0		=			
ANR	1351641	Identifier	file_trail		1351350	0					
ANR	1351642	Identifier	file_ptr		1351350	1					
ANR	1351643	IfStatement	if ( f_temp < 0 )		1351350	1					
ANR	1351644	Condition	f_temp < 0	413:6:10567:10576	1351350	0	True				
ANR	1351645	RelationalExpression	f_temp < 0		1351350	0		<			
ANR	1351646	Identifier	f_temp		1351350	0					
ANR	1351647	PrimaryExpression	0		1351350	1					
ANR	1351648	ExpressionStatement	file_ptr = file_ptr -> left	414:3:10582:10607	1351350	1	True				
ANR	1351649	AssignmentExpression	file_ptr = file_ptr -> left		1351350	0		=			
ANR	1351650	Identifier	file_ptr		1351350	0					
ANR	1351651	PtrMemberAccess	file_ptr -> left		1351350	1					
ANR	1351652	Identifier	file_ptr		1351350	0					
ANR	1351653	Identifier	left		1351350	1					
ANR	1351654	ElseStatement	else		1351350	0					
ANR	1351655	ExpressionStatement	file_ptr = file_ptr -> right	416:3:10619:10645	1351350	0	True				
ANR	1351656	AssignmentExpression	file_ptr = file_ptr -> right		1351350	0		=			
ANR	1351657	Identifier	file_ptr		1351350	0					
ANR	1351658	PtrMemberAccess	file_ptr -> right		1351350	1					
ANR	1351659	Identifier	file_ptr		1351350	0					
ANR	1351660	Identifier	right		1351350	1					
ANR	1351661	IfStatement	if ( file_ptr == NULL )		1351350	28					
ANR	1351662	Condition	file_ptr == NULL	418:5:10658:10673	1351350	0	True				
ANR	1351663	EqualityExpression	file_ptr == NULL		1351350	0		==			
ANR	1351664	Identifier	file_ptr		1351350	0					
ANR	1351665	Identifier	NULL		1351350	1					
ANR	1351666	CompoundStatement		63:23:1938:1938	1351350	1					
ANR	1351667	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: IMDS inconsistency; file exists but cannot be found\\n"" )"	419:2:10680:10761	1351350	0	True				
ANR	1351668	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: IMDS inconsistency; file exists but cannot be found\\n"" )"		1351350	0					
ANR	1351669	Callee	dprintf		1351350	0					
ANR	1351670	Identifier	dprintf		1351350	0					
ANR	1351671	ArgumentList	D_ALWAYS		1351350	1					
ANR	1351672	Argument	D_ALWAYS		1351350	0					
ANR	1351673	Identifier	D_ALWAYS		1351350	0					
ANR	1351674	Argument	"""ERROR: IMDS inconsistency; file exists but cannot be found\\n"""		1351350	1					
ANR	1351675	PrimaryExpression	"""ERROR: IMDS inconsistency; file exists but cannot be found\\n"""		1351350	0					
ANR	1351676	ExpressionStatement	exit ( IMDS_INDEX_ERROR )	420:2:10765:10787	1351350	1	True				
ANR	1351677	CallExpression	exit ( IMDS_INDEX_ERROR )		1351350	0					
ANR	1351678	Callee	exit		1351350	0					
ANR	1351679	Identifier	exit		1351350	0					
ANR	1351680	ArgumentList	IMDS_INDEX_ERROR		1351350	1					
ANR	1351681	Argument	IMDS_INDEX_ERROR		1351350	0					
ANR	1351682	Identifier	IMDS_INDEX_ERROR		1351350	0					
ANR	1351683	ExpressionStatement	"file_ptr -> file_data -> data . machine_IP . to_ip_string ( machine_name , sizeof ( machine_name ) )"	423:1:10797:10882	1351350	29	True				
ANR	1351684	CallExpression	"file_ptr -> file_data -> data . machine_IP . to_ip_string ( machine_name , sizeof ( machine_name ) )"		1351350	0					
ANR	1351685	Callee	file_ptr -> file_data -> data . machine_IP . to_ip_string		1351350	0					
ANR	1351686	MemberAccess	file_ptr -> file_data -> data . machine_IP . to_ip_string		1351350	0					
ANR	1351687	MemberAccess	file_ptr -> file_data -> data . machine_IP		1351350	0					
ANR	1351688	PtrMemberAccess	file_ptr -> file_data -> data		1351350	0					
ANR	1351689	PtrMemberAccess	file_ptr -> file_data		1351350	0					
ANR	1351690	Identifier	file_ptr		1351350	0					
ANR	1351691	Identifier	file_data		1351350	1					
ANR	1351692	Identifier	data		1351350	1					
ANR	1351693	Identifier	machine_IP		1351350	1					
ANR	1351694	Identifier	to_ip_string		1351350	1					
ANR	1351695	ArgumentList	machine_name		1351350	1					
ANR	1351696	Argument	machine_name		1351350	0					
ANR	1351697	Identifier	machine_name		1351350	0					
ANR	1351698	Argument	sizeof ( machine_name )		1351350	1					
ANR	1351699	SizeofExpression	sizeof ( machine_name )		1351350	0					
ANR	1351700	Sizeof	sizeof		1351350	0					
ANR	1351701	SizeofOperand	machine_name		1351350	1					
ANR	1351702	ExpressionStatement	"sprintf ( pathname , ""%s%s/%s/%s"" , LOCAL_DRIVE_PREFIX , machine_name , owner_name , file_name )"	425:1:10886:10978	1351350	30	True				
ANR	1351703	CallExpression	"sprintf ( pathname , ""%s%s/%s/%s"" , LOCAL_DRIVE_PREFIX , machine_name , owner_name , file_name )"		1351350	0					
ANR	1351704	Callee	sprintf		1351350	0					
ANR	1351705	Identifier	sprintf		1351350	0					
ANR	1351706	ArgumentList	pathname		1351350	1					
ANR	1351707	Argument	pathname		1351350	0					
ANR	1351708	Identifier	pathname		1351350	0					
ANR	1351709	Argument	"""%s%s/%s/%s"""		1351350	1					
ANR	1351710	PrimaryExpression	"""%s%s/%s/%s"""		1351350	0					
ANR	1351711	Argument	LOCAL_DRIVE_PREFIX		1351350	2					
ANR	1351712	Identifier	LOCAL_DRIVE_PREFIX		1351350	0					
ANR	1351713	Argument	machine_name		1351350	3					
ANR	1351714	Identifier	machine_name		1351350	0					
ANR	1351715	Argument	owner_name		1351350	4					
ANR	1351716	Identifier	owner_name		1351350	0					
ANR	1351717	Argument	file_name		1351350	5					
ANR	1351718	Identifier	file_name		1351350	0					
ANR	1351719	ExpressionStatement	"dprintf ( D_ALWAYS , ""    Deleting file: %s\\n"" , pathname )"	427:1:10981:11035	1351350	31	True				
ANR	1351720	CallExpression	"dprintf ( D_ALWAYS , ""    Deleting file: %s\\n"" , pathname )"		1351350	0					
ANR	1351721	Callee	dprintf		1351350	0					
ANR	1351722	Identifier	dprintf		1351350	0					
ANR	1351723	ArgumentList	D_ALWAYS		1351350	1					
ANR	1351724	Argument	D_ALWAYS		1351350	0					
ANR	1351725	Identifier	D_ALWAYS		1351350	0					
ANR	1351726	Argument	"""    Deleting file: %s\\n"""		1351350	1					
ANR	1351727	PrimaryExpression	"""    Deleting file: %s\\n"""		1351350	0					
ANR	1351728	Argument	pathname		1351350	2					
ANR	1351729	Identifier	pathname		1351350	0					
ANR	1351730	IfStatement	if ( unlink ( pathname ) )		1351350	32					
ANR	1351731	Condition	unlink ( pathname )	428:5:11042:11057	1351350	0	True				
ANR	1351732	CallExpression	unlink ( pathname )		1351350	0					
ANR	1351733	Callee	unlink		1351350	0					
ANR	1351734	Identifier	unlink		1351350	0					
ANR	1351735	ArgumentList	pathname		1351350	1					
ANR	1351736	Argument	pathname		1351350	0					
ANR	1351737	Identifier	pathname		1351350	0					
ANR	1351738	CompoundStatement		73:23:2322:2322	1351350	1					
ANR	1351739	ExpressionStatement	retCode = CANNOT_DELETE_FILE	429:2:11064:11092	1351350	0	True				
ANR	1351740	AssignmentExpression	retCode = CANNOT_DELETE_FILE		1351350	0		=			
ANR	1351741	Identifier	retCode		1351350	0					
ANR	1351742	Identifier	CANNOT_DELETE_FILE		1351350	1					
ANR	1351743	ExpressionStatement	file_rep_ptr = file_ptr -> left	432:1:11099:11128	1351350	33	True				
ANR	1351744	AssignmentExpression	file_rep_ptr = file_ptr -> left		1351350	0		=			
ANR	1351745	Identifier	file_rep_ptr		1351350	0					
ANR	1351746	PtrMemberAccess	file_ptr -> left		1351350	1					
ANR	1351747	Identifier	file_ptr		1351350	0					
ANR	1351748	Identifier	left		1351350	1					
ANR	1351749	IfStatement	if ( file_rep_ptr == NULL )		1351350	34					
ANR	1351750	Condition	file_rep_ptr == NULL	433:5:11135:11154	1351350	0	True				
ANR	1351751	EqualityExpression	file_rep_ptr == NULL		1351350	0		==			
ANR	1351752	Identifier	file_rep_ptr		1351350	0					
ANR	1351753	Identifier	NULL		1351350	1					
ANR	1351754	CompoundStatement		78:27:2419:2419	1351350	1					
ANR	1351755	IfStatement	if ( file_trail == NULL )		1351350	0					
ANR	1351756	Condition	file_trail == NULL	434:6:11165:11182	1351350	0	True				
ANR	1351757	EqualityExpression	file_trail == NULL		1351350	0		==			
ANR	1351758	Identifier	file_trail		1351350	0					
ANR	1351759	Identifier	NULL		1351350	1					
ANR	1351760	ExpressionStatement	owner_ptr -> file_root = file_ptr -> right	435:3:11188:11226	1351350	1	True				
ANR	1351761	AssignmentExpression	owner_ptr -> file_root = file_ptr -> right		1351350	0		=			
ANR	1351762	PtrMemberAccess	owner_ptr -> file_root		1351350	0					
ANR	1351763	Identifier	owner_ptr		1351350	0					
ANR	1351764	Identifier	file_root		1351350	1					
ANR	1351765	PtrMemberAccess	file_ptr -> right		1351350	1					
ANR	1351766	Identifier	file_ptr		1351350	0					
ANR	1351767	Identifier	right		1351350	1					
ANR	1351768	ElseStatement	else		1351350	0					
ANR	1351769	IfStatement	if ( file_trail -> left == file_ptr )		1351350	0					
ANR	1351770	Condition	file_trail -> left == file_ptr	436:11:11239:11266	1351350	0	True				
ANR	1351771	EqualityExpression	file_trail -> left == file_ptr		1351350	0		==			
ANR	1351772	PtrMemberAccess	file_trail -> left		1351350	0					
ANR	1351773	Identifier	file_trail		1351350	0					
ANR	1351774	Identifier	left		1351350	1					
ANR	1351775	Identifier	file_ptr		1351350	1					
ANR	1351776	ExpressionStatement	file_trail -> left = file_ptr -> right	437:3:11272:11306	1351350	1	True				
ANR	1351777	AssignmentExpression	file_trail -> left = file_ptr -> right		1351350	0		=			
ANR	1351778	PtrMemberAccess	file_trail -> left		1351350	0					
ANR	1351779	Identifier	file_trail		1351350	0					
ANR	1351780	Identifier	left		1351350	1					
ANR	1351781	PtrMemberAccess	file_ptr -> right		1351350	1					
ANR	1351782	Identifier	file_ptr		1351350	0					
ANR	1351783	Identifier	right		1351350	1					
ANR	1351784	ElseStatement	else		1351350	0					
ANR	1351785	ExpressionStatement	file_trail -> right = file_ptr -> right	439:3:11318:11353	1351350	0	True				
ANR	1351786	AssignmentExpression	file_trail -> right = file_ptr -> right		1351350	0		=			
ANR	1351787	PtrMemberAccess	file_trail -> right		1351350	0					
ANR	1351788	Identifier	file_trail		1351350	0					
ANR	1351789	Identifier	right		1351350	1					
ANR	1351790	PtrMemberAccess	file_ptr -> right		1351350	1					
ANR	1351791	Identifier	file_ptr		1351350	0					
ANR	1351792	Identifier	right		1351350	1					
ANR	1351793	ElseStatement	else		1351350	0					
ANR	1351794	CompoundStatement		85:11:2628:2628	1351350	0					
ANR	1351795	WhileStatement	while ( file_rep_ptr -> right != NULL )		1351350	0					
ANR	1351796	Condition	file_rep_ptr -> right != NULL	441:9:11377:11403	1351350	0	True				
ANR	1351797	EqualityExpression	file_rep_ptr -> right != NULL		1351350	0		!=			
ANR	1351798	PtrMemberAccess	file_rep_ptr -> right		1351350	0					
ANR	1351799	Identifier	file_rep_ptr		1351350	0					
ANR	1351800	Identifier	right		1351350	1					
ANR	1351801	Identifier	NULL		1351350	1					
ANR	1351802	CompoundStatement		86:38:2668:2668	1351350	1					
ANR	1351803	ExpressionStatement	file_rep_trail = file_rep_ptr	442:3:11411:11440	1351350	0	True				
ANR	1351804	AssignmentExpression	file_rep_trail = file_rep_ptr		1351350	0		=			
ANR	1351805	Identifier	file_rep_trail		1351350	0					
ANR	1351806	Identifier	file_rep_ptr		1351350	1					
ANR	1351807	ExpressionStatement	file_rep_ptr = file_rep_ptr -> right	443:3:11445:11479	1351350	1	True				
ANR	1351808	AssignmentExpression	file_rep_ptr = file_rep_ptr -> right		1351350	0		=			
ANR	1351809	Identifier	file_rep_ptr		1351350	0					
ANR	1351810	PtrMemberAccess	file_rep_ptr -> right		1351350	1					
ANR	1351811	Identifier	file_rep_ptr		1351350	0					
ANR	1351812	Identifier	right		1351350	1					
ANR	1351813	IfStatement	if ( file_rep_trail == NULL )		1351350	1					
ANR	1351814	Condition	file_rep_trail == NULL	445:6:11491:11512	1351350	0	True				
ANR	1351815	EqualityExpression	file_rep_trail == NULL		1351350	0		==			
ANR	1351816	Identifier	file_rep_trail		1351350	0					
ANR	1351817	Identifier	NULL		1351350	1					
ANR	1351818	ExpressionStatement	file_rep_ptr -> right = file_ptr -> right	446:3:11518:11555	1351350	1	True				
ANR	1351819	AssignmentExpression	file_rep_ptr -> right = file_ptr -> right		1351350	0		=			
ANR	1351820	PtrMemberAccess	file_rep_ptr -> right		1351350	0					
ANR	1351821	Identifier	file_rep_ptr		1351350	0					
ANR	1351822	Identifier	right		1351350	1					
ANR	1351823	PtrMemberAccess	file_ptr -> right		1351350	1					
ANR	1351824	Identifier	file_ptr		1351350	0					
ANR	1351825	Identifier	right		1351350	1					
ANR	1351826	ElseStatement	else		1351350	0					
ANR	1351827	CompoundStatement		92:7:2826:2826	1351350	0					
ANR	1351828	ExpressionStatement	file_rep_trail -> right = file_rep_ptr -> left	448:3:11569:11611	1351350	0	True				
ANR	1351829	AssignmentExpression	file_rep_trail -> right = file_rep_ptr -> left		1351350	0		=			
ANR	1351830	PtrMemberAccess	file_rep_trail -> right		1351350	0					
ANR	1351831	Identifier	file_rep_trail		1351350	0					
ANR	1351832	Identifier	right		1351350	1					
ANR	1351833	PtrMemberAccess	file_rep_ptr -> left		1351350	1					
ANR	1351834	Identifier	file_rep_ptr		1351350	0					
ANR	1351835	Identifier	left		1351350	1					
ANR	1351836	ExpressionStatement	file_rep_ptr -> left = file_ptr -> left	449:3:11616:11651	1351350	1	True				
ANR	1351837	AssignmentExpression	file_rep_ptr -> left = file_ptr -> left		1351350	0		=			
ANR	1351838	PtrMemberAccess	file_rep_ptr -> left		1351350	0					
ANR	1351839	Identifier	file_rep_ptr		1351350	0					
ANR	1351840	Identifier	left		1351350	1					
ANR	1351841	PtrMemberAccess	file_ptr -> left		1351350	1					
ANR	1351842	Identifier	file_ptr		1351350	0					
ANR	1351843	Identifier	left		1351350	1					
ANR	1351844	ExpressionStatement	file_rep_ptr -> right = file_ptr -> right	450:3:11656:11693	1351350	2	True				
ANR	1351845	AssignmentExpression	file_rep_ptr -> right = file_ptr -> right		1351350	0		=			
ANR	1351846	PtrMemberAccess	file_rep_ptr -> right		1351350	0					
ANR	1351847	Identifier	file_rep_ptr		1351350	0					
ANR	1351848	Identifier	right		1351350	1					
ANR	1351849	PtrMemberAccess	file_ptr -> right		1351350	1					
ANR	1351850	Identifier	file_ptr		1351350	0					
ANR	1351851	Identifier	right		1351350	1					
ANR	1351852	IfStatement	if ( file_trail == NULL )		1351350	2					
ANR	1351853	Condition	file_trail == NULL	452:6:11705:11722	1351350	0	True				
ANR	1351854	EqualityExpression	file_trail == NULL		1351350	0		==			
ANR	1351855	Identifier	file_trail		1351350	0					
ANR	1351856	Identifier	NULL		1351350	1					
ANR	1351857	ExpressionStatement	owner_ptr -> file_root = file_rep_ptr	453:3:11728:11763	1351350	1	True				
ANR	1351858	AssignmentExpression	owner_ptr -> file_root = file_rep_ptr		1351350	0		=			
ANR	1351859	PtrMemberAccess	owner_ptr -> file_root		1351350	0					
ANR	1351860	Identifier	owner_ptr		1351350	0					
ANR	1351861	Identifier	file_root		1351350	1					
ANR	1351862	Identifier	file_rep_ptr		1351350	1					
ANR	1351863	ElseStatement	else		1351350	0					
ANR	1351864	IfStatement	if ( file_trail -> left == file_ptr )		1351350	0					
ANR	1351865	Condition	file_trail -> left == file_ptr	454:11:11776:11803	1351350	0	True				
ANR	1351866	EqualityExpression	file_trail -> left == file_ptr		1351350	0		==			
ANR	1351867	PtrMemberAccess	file_trail -> left		1351350	0					
ANR	1351868	Identifier	file_trail		1351350	0					
ANR	1351869	Identifier	left		1351350	1					
ANR	1351870	Identifier	file_ptr		1351350	1					
ANR	1351871	ExpressionStatement	file_trail -> left = file_rep_ptr	455:3:11809:11840	1351350	1	True				
ANR	1351872	AssignmentExpression	file_trail -> left = file_rep_ptr		1351350	0		=			
ANR	1351873	PtrMemberAccess	file_trail -> left		1351350	0					
ANR	1351874	Identifier	file_trail		1351350	0					
ANR	1351875	Identifier	left		1351350	1					
ANR	1351876	Identifier	file_rep_ptr		1351350	1					
ANR	1351877	ElseStatement	else		1351350	0					
ANR	1351878	ExpressionStatement	file_trail -> right = file_rep_ptr	457:3:11852:11884	1351350	0	True				
ANR	1351879	AssignmentExpression	file_trail -> right = file_rep_ptr		1351350	0		=			
ANR	1351880	PtrMemberAccess	file_trail -> right		1351350	0					
ANR	1351881	Identifier	file_trail		1351350	0					
ANR	1351882	Identifier	right		1351350	1					
ANR	1351883	Identifier	file_rep_ptr		1351350	1					
ANR	1351884	Statement	delete	459:1:11893:11898	1351350	35	True				
ANR	1351885	ExpressionStatement	file_ptr	459:8:11900:11908	1351350	36	True				
ANR	1351886	Identifier	file_ptr		1351350	0					
ANR	1351887	IfStatement	if ( owner_ptr -> file_root == NULL )		1351350	37					
ANR	1351888	Condition	owner_ptr -> file_root == NULL	460:5:11915:11942	1351350	0	True				
ANR	1351889	EqualityExpression	owner_ptr -> file_root == NULL		1351350	0		==			
ANR	1351890	PtrMemberAccess	owner_ptr -> file_root		1351350	0					
ANR	1351891	Identifier	owner_ptr		1351350	0					
ANR	1351892	Identifier	file_root		1351350	1					
ANR	1351893	Identifier	NULL		1351350	1					
ANR	1351894	CompoundStatement		105:35:3207:3207	1351350	1					
ANR	1351895	ExpressionStatement	owner_rep_ptr = owner_ptr -> left	461:2:11949:11980	1351350	0	True				
ANR	1351896	AssignmentExpression	owner_rep_ptr = owner_ptr -> left		1351350	0		=			
ANR	1351897	Identifier	owner_rep_ptr		1351350	0					
ANR	1351898	PtrMemberAccess	owner_ptr -> left		1351350	1					
ANR	1351899	Identifier	owner_ptr		1351350	0					
ANR	1351900	Identifier	left		1351350	1					
ANR	1351901	IfStatement	if ( owner_rep_ptr == NULL )		1351350	1					
ANR	1351902	Condition	owner_rep_ptr == NULL	462:6:11988:12008	1351350	0	True				
ANR	1351903	EqualityExpression	owner_rep_ptr == NULL		1351350	0		==			
ANR	1351904	Identifier	owner_rep_ptr		1351350	0					
ANR	1351905	Identifier	NULL		1351350	1					
ANR	1351906	CompoundStatement		107:29:3273:3273	1351350	1					
ANR	1351907	IfStatement	if ( owner_trail == NULL )		1351350	0					
ANR	1351908	Condition	owner_trail == NULL	463:7:12020:12038	1351350	0	True				
ANR	1351909	EqualityExpression	owner_trail == NULL		1351350	0		==			
ANR	1351910	Identifier	owner_trail		1351350	0					
ANR	1351911	Identifier	NULL		1351350	1					
ANR	1351912	ExpressionStatement	machine_ptr -> owner_root = owner_ptr -> right	464:4:12045:12087	1351350	1	True				
ANR	1351913	AssignmentExpression	machine_ptr -> owner_root = owner_ptr -> right		1351350	0		=			
ANR	1351914	PtrMemberAccess	machine_ptr -> owner_root		1351350	0					
ANR	1351915	Identifier	machine_ptr		1351350	0					
ANR	1351916	Identifier	owner_root		1351350	1					
ANR	1351917	PtrMemberAccess	owner_ptr -> right		1351350	1					
ANR	1351918	Identifier	owner_ptr		1351350	0					
ANR	1351919	Identifier	right		1351350	1					
ANR	1351920	ElseStatement	else		1351350	0					
ANR	1351921	IfStatement	if ( owner_trail -> left == owner_ptr )		1351350	0					
ANR	1351922	Condition	owner_trail -> left == owner_ptr	465:12:12101:12130	1351350	0	True				
ANR	1351923	EqualityExpression	owner_trail -> left == owner_ptr		1351350	0		==			
ANR	1351924	PtrMemberAccess	owner_trail -> left		1351350	0					
ANR	1351925	Identifier	owner_trail		1351350	0					
ANR	1351926	Identifier	left		1351350	1					
ANR	1351927	Identifier	owner_ptr		1351350	1					
ANR	1351928	ExpressionStatement	owner_trail -> left = owner_ptr -> right	466:4:12137:12173	1351350	1	True				
ANR	1351929	AssignmentExpression	owner_trail -> left = owner_ptr -> right		1351350	0		=			
ANR	1351930	PtrMemberAccess	owner_trail -> left		1351350	0					
ANR	1351931	Identifier	owner_trail		1351350	0					
ANR	1351932	Identifier	left		1351350	1					
ANR	1351933	PtrMemberAccess	owner_ptr -> right		1351350	1					
ANR	1351934	Identifier	owner_ptr		1351350	0					
ANR	1351935	Identifier	right		1351350	1					
ANR	1351936	ElseStatement	else		1351350	0					
ANR	1351937	ExpressionStatement	owner_trail -> right = owner_ptr -> right	468:4:12187:12224	1351350	0	True				
ANR	1351938	AssignmentExpression	owner_trail -> right = owner_ptr -> right		1351350	0		=			
ANR	1351939	PtrMemberAccess	owner_trail -> right		1351350	0					
ANR	1351940	Identifier	owner_trail		1351350	0					
ANR	1351941	Identifier	right		1351350	1					
ANR	1351942	PtrMemberAccess	owner_ptr -> right		1351350	1					
ANR	1351943	Identifier	owner_ptr		1351350	0					
ANR	1351944	Identifier	right		1351350	1					
ANR	1351945	ElseStatement	else		1351350	0					
ANR	1351946	CompoundStatement		115:7:3499:3499	1351350	0					
ANR	1351947	WhileStatement	while ( owner_rep_ptr -> right != NULL )		1351350	0					
ANR	1351948	Condition	owner_rep_ptr -> right != NULL	471:10:12249:12276	1351350	0	True				
ANR	1351949	EqualityExpression	owner_rep_ptr -> right != NULL		1351350	0		!=			
ANR	1351950	PtrMemberAccess	owner_rep_ptr -> right		1351350	0					
ANR	1351951	Identifier	owner_rep_ptr		1351350	0					
ANR	1351952	Identifier	right		1351350	1					
ANR	1351953	Identifier	NULL		1351350	1					
ANR	1351954	CompoundStatement		116:40:3541:3541	1351350	1					
ANR	1351955	ExpressionStatement	owner_rep_trail = owner_rep_ptr	472:4:12285:12316	1351350	0	True				
ANR	1351956	AssignmentExpression	owner_rep_trail = owner_rep_ptr		1351350	0		=			
ANR	1351957	Identifier	owner_rep_trail		1351350	0					
ANR	1351958	Identifier	owner_rep_ptr		1351350	1					
ANR	1351959	ExpressionStatement	owner_rep_ptr = owner_rep_ptr -> right	473:4:12322:12358	1351350	1	True				
ANR	1351960	AssignmentExpression	owner_rep_ptr = owner_rep_ptr -> right		1351350	0		=			
ANR	1351961	Identifier	owner_rep_ptr		1351350	0					
ANR	1351962	PtrMemberAccess	owner_rep_ptr -> right		1351350	1					
ANR	1351963	Identifier	owner_rep_ptr		1351350	0					
ANR	1351964	Identifier	right		1351350	1					
ANR	1351965	IfStatement	if ( owner_rep_trail == NULL )		1351350	1					
ANR	1351966	Condition	owner_rep_trail == NULL	475:7:12372:12394	1351350	0	True				
ANR	1351967	EqualityExpression	owner_rep_trail == NULL		1351350	0		==			
ANR	1351968	Identifier	owner_rep_trail		1351350	0					
ANR	1351969	Identifier	NULL		1351350	1					
ANR	1351970	ExpressionStatement	owner_rep_ptr -> right = owner_ptr -> right	476:4:12401:12440	1351350	1	True				
ANR	1351971	AssignmentExpression	owner_rep_ptr -> right = owner_ptr -> right		1351350	0		=			
ANR	1351972	PtrMemberAccess	owner_rep_ptr -> right		1351350	0					
ANR	1351973	Identifier	owner_rep_ptr		1351350	0					
ANR	1351974	Identifier	right		1351350	1					
ANR	1351975	PtrMemberAccess	owner_ptr -> right		1351350	1					
ANR	1351976	Identifier	owner_ptr		1351350	0					
ANR	1351977	Identifier	right		1351350	1					
ANR	1351978	ElseStatement	else		1351350	0					
ANR	1351979	CompoundStatement		122:8:3712:3712	1351350	0					
ANR	1351980	ExpressionStatement	owner_rep_trail -> right = owner_rep_ptr -> left	478:4:12456:12500	1351350	0	True				
ANR	1351981	AssignmentExpression	owner_rep_trail -> right = owner_rep_ptr -> left		1351350	0		=			
ANR	1351982	PtrMemberAccess	owner_rep_trail -> right		1351350	0					
ANR	1351983	Identifier	owner_rep_trail		1351350	0					
ANR	1351984	Identifier	right		1351350	1					
ANR	1351985	PtrMemberAccess	owner_rep_ptr -> left		1351350	1					
ANR	1351986	Identifier	owner_rep_ptr		1351350	0					
ANR	1351987	Identifier	left		1351350	1					
ANR	1351988	ExpressionStatement	owner_rep_ptr -> left = owner_ptr -> left	479:4:12506:12543	1351350	1	True				
ANR	1351989	AssignmentExpression	owner_rep_ptr -> left = owner_ptr -> left		1351350	0		=			
ANR	1351990	PtrMemberAccess	owner_rep_ptr -> left		1351350	0					
ANR	1351991	Identifier	owner_rep_ptr		1351350	0					
ANR	1351992	Identifier	left		1351350	1					
ANR	1351993	PtrMemberAccess	owner_ptr -> left		1351350	1					
ANR	1351994	Identifier	owner_ptr		1351350	0					
ANR	1351995	Identifier	left		1351350	1					
ANR	1351996	ExpressionStatement	owner_rep_ptr -> right = owner_ptr -> right	480:4:12549:12588	1351350	2	True				
ANR	1351997	AssignmentExpression	owner_rep_ptr -> right = owner_ptr -> right		1351350	0		=			
ANR	1351998	PtrMemberAccess	owner_rep_ptr -> right		1351350	0					
ANR	1351999	Identifier	owner_rep_ptr		1351350	0					
ANR	1352000	Identifier	right		1351350	1					
ANR	1352001	PtrMemberAccess	owner_ptr -> right		1351350	1					
ANR	1352002	Identifier	owner_ptr		1351350	0					
ANR	1352003	Identifier	right		1351350	1					
ANR	1352004	IfStatement	if ( owner_trail == NULL )		1351350	2					
ANR	1352005	Condition	owner_trail == NULL	482:7:12602:12620	1351350	0	True				
ANR	1352006	EqualityExpression	owner_trail == NULL		1351350	0		==			
ANR	1352007	Identifier	owner_trail		1351350	0					
ANR	1352008	Identifier	NULL		1351350	1					
ANR	1352009	ExpressionStatement	machine_ptr -> owner_root = owner_rep_ptr	483:4:12627:12666	1351350	1	True				
ANR	1352010	AssignmentExpression	machine_ptr -> owner_root = owner_rep_ptr		1351350	0		=			
ANR	1352011	PtrMemberAccess	machine_ptr -> owner_root		1351350	0					
ANR	1352012	Identifier	machine_ptr		1351350	0					
ANR	1352013	Identifier	owner_root		1351350	1					
ANR	1352014	Identifier	owner_rep_ptr		1351350	1					
ANR	1352015	ElseStatement	else		1351350	0					
ANR	1352016	IfStatement	if ( owner_trail -> left == owner_ptr )		1351350	0					
ANR	1352017	Condition	owner_trail -> left == owner_ptr	484:12:12680:12709	1351350	0	True				
ANR	1352018	EqualityExpression	owner_trail -> left == owner_ptr		1351350	0		==			
ANR	1352019	PtrMemberAccess	owner_trail -> left		1351350	0					
ANR	1352020	Identifier	owner_trail		1351350	0					
ANR	1352021	Identifier	left		1351350	1					
ANR	1352022	Identifier	owner_ptr		1351350	1					
ANR	1352023	ExpressionStatement	owner_trail -> left = owner_rep_ptr	485:4:12716:12749	1351350	1	True				
ANR	1352024	AssignmentExpression	owner_trail -> left = owner_rep_ptr		1351350	0		=			
ANR	1352025	PtrMemberAccess	owner_trail -> left		1351350	0					
ANR	1352026	Identifier	owner_trail		1351350	0					
ANR	1352027	Identifier	left		1351350	1					
ANR	1352028	Identifier	owner_rep_ptr		1351350	1					
ANR	1352029	ElseStatement	else		1351350	0					
ANR	1352030	ExpressionStatement	owner_trail -> right = owner_rep_ptr	487:4:12763:12797	1351350	0	True				
ANR	1352031	AssignmentExpression	owner_trail -> right = owner_rep_ptr		1351350	0		=			
ANR	1352032	PtrMemberAccess	owner_trail -> right		1351350	0					
ANR	1352033	Identifier	owner_trail		1351350	0					
ANR	1352034	Identifier	right		1351350	1					
ANR	1352035	Identifier	owner_rep_ptr		1351350	1					
ANR	1352036	Statement	delete	489:2:12805:12810	1351350	2	True				
ANR	1352037	ExpressionStatement	owner_ptr	489:9:12812:12821	1351350	3	True				
ANR	1352038	Identifier	owner_ptr		1351350	0					
ANR	1352039	IfStatement	if ( machine_ptr -> owner_root == NULL )		1351350	4					
ANR	1352040	Condition	machine_ptr -> owner_root == NULL	490:6:12829:12859	1351350	0	True				
ANR	1352041	EqualityExpression	machine_ptr -> owner_root == NULL		1351350	0		==			
ANR	1352042	PtrMemberAccess	machine_ptr -> owner_root		1351350	0					
ANR	1352043	Identifier	machine_ptr		1351350	0					
ANR	1352044	Identifier	owner_root		1351350	1					
ANR	1352045	Identifier	NULL		1351350	1					
ANR	1352046	CompoundStatement		135:39:4124:4124	1351350	1					
ANR	1352047	ExpressionStatement	"sprintf ( pathname , ""%s%s/%s"" , LOCAL_DRIVE_PREFIX , machine_name , owner_name )"	491:3:12867:12947	1351350	0	True				
ANR	1352048	CallExpression	"sprintf ( pathname , ""%s%s/%s"" , LOCAL_DRIVE_PREFIX , machine_name , owner_name )"		1351350	0					
ANR	1352049	Callee	sprintf		1351350	0					
ANR	1352050	Identifier	sprintf		1351350	0					
ANR	1352051	ArgumentList	pathname		1351350	1					
ANR	1352052	Argument	pathname		1351350	0					
ANR	1352053	Identifier	pathname		1351350	0					
ANR	1352054	Argument	"""%s%s/%s"""		1351350	1					
ANR	1352055	PrimaryExpression	"""%s%s/%s"""		1351350	0					
ANR	1352056	Argument	LOCAL_DRIVE_PREFIX		1351350	2					
ANR	1352057	Identifier	LOCAL_DRIVE_PREFIX		1351350	0					
ANR	1352058	Argument	machine_name		1351350	3					
ANR	1352059	Identifier	machine_name		1351350	0					
ANR	1352060	Argument	owner_name		1351350	4					
ANR	1352061	Identifier	owner_name		1351350	0					
ANR	1352062	IfStatement	if ( rmdir ( pathname ) != 0 )		1351350	1					
ANR	1352063	Condition	rmdir ( pathname ) != 0	493:7:12956:12975	1351350	0	True				
ANR	1352064	EqualityExpression	rmdir ( pathname ) != 0		1351350	0		!=			
ANR	1352065	CallExpression	rmdir ( pathname )		1351350	0					
ANR	1352066	Callee	rmdir		1351350	0					
ANR	1352067	Identifier	rmdir		1351350	0					
ANR	1352068	ArgumentList	pathname		1351350	1					
ANR	1352069	Argument	pathname		1351350	0					
ANR	1352070	Identifier	pathname		1351350	0					
ANR	1352071	PrimaryExpression	0		1351350	1					
ANR	1352072	ExpressionStatement		494:44:13022:13022	1351350	1	True				
ANR	1352073	ExpressionStatement	machine_rep_ptr = machine_ptr -> left	495:3:13027:13062	1351350	2	True				
ANR	1352074	AssignmentExpression	machine_rep_ptr = machine_ptr -> left		1351350	0		=			
ANR	1352075	Identifier	machine_rep_ptr		1351350	0					
ANR	1352076	PtrMemberAccess	machine_ptr -> left		1351350	1					
ANR	1352077	Identifier	machine_ptr		1351350	0					
ANR	1352078	Identifier	left		1351350	1					
ANR	1352079	IfStatement	if ( machine_rep_ptr == NULL )		1351350	3					
ANR	1352080	Condition	machine_rep_ptr == NULL	496:7:13071:13093	1351350	0	True				
ANR	1352081	EqualityExpression	machine_rep_ptr == NULL		1351350	0		==			
ANR	1352082	Identifier	machine_rep_ptr		1351350	0					
ANR	1352083	Identifier	NULL		1351350	1					
ANR	1352084	CompoundStatement		141:32:4358:4358	1351350	1					
ANR	1352085	IfStatement	if ( machine_trail == NULL )		1351350	0					
ANR	1352086	Condition	machine_trail == NULL	497:8:13106:13126	1351350	0	True				
ANR	1352087	EqualityExpression	machine_trail == NULL		1351350	0		==			
ANR	1352088	Identifier	machine_trail		1351350	0					
ANR	1352089	Identifier	NULL		1351350	1					
ANR	1352090	ExpressionStatement	hash_table [ hash_bucket ] = machine_ptr -> right	498:5:13134:13178	1351350	1	True				
ANR	1352091	AssignmentExpression	hash_table [ hash_bucket ] = machine_ptr -> right		1351350	0		=			
ANR	1352092	ArrayIndexing	hash_table [ hash_bucket ]		1351350	0					
ANR	1352093	Identifier	hash_table		1351350	0					
ANR	1352094	Identifier	hash_bucket		1351350	1					
ANR	1352095	PtrMemberAccess	machine_ptr -> right		1351350	1					
ANR	1352096	Identifier	machine_ptr		1351350	0					
ANR	1352097	Identifier	right		1351350	1					
ANR	1352098	ElseStatement	else		1351350	0					
ANR	1352099	IfStatement	if ( machine_trail -> left == machine_ptr )		1351350	0					
ANR	1352100	Condition	machine_trail -> left == machine_ptr	499:13:13193:13226	1351350	0	True				
ANR	1352101	EqualityExpression	machine_trail -> left == machine_ptr		1351350	0		==			
ANR	1352102	PtrMemberAccess	machine_trail -> left		1351350	0					
ANR	1352103	Identifier	machine_trail		1351350	0					
ANR	1352104	Identifier	left		1351350	1					
ANR	1352105	Identifier	machine_ptr		1351350	1					
ANR	1352106	ExpressionStatement	machine_trail -> left = machine_ptr -> right	500:5:13234:13274	1351350	1	True				
ANR	1352107	AssignmentExpression	machine_trail -> left = machine_ptr -> right		1351350	0		=			
ANR	1352108	PtrMemberAccess	machine_trail -> left		1351350	0					
ANR	1352109	Identifier	machine_trail		1351350	0					
ANR	1352110	Identifier	left		1351350	1					
ANR	1352111	PtrMemberAccess	machine_ptr -> right		1351350	1					
ANR	1352112	Identifier	machine_ptr		1351350	0					
ANR	1352113	Identifier	right		1351350	1					
ANR	1352114	ElseStatement	else		1351350	0					
ANR	1352115	ExpressionStatement	machine_trail -> right = machine_ptr -> right	502:5:13290:13331	1351350	0	True				
ANR	1352116	AssignmentExpression	machine_trail -> right = machine_ptr -> right		1351350	0		=			
ANR	1352117	PtrMemberAccess	machine_trail -> right		1351350	0					
ANR	1352118	Identifier	machine_trail		1351350	0					
ANR	1352119	Identifier	right		1351350	1					
ANR	1352120	PtrMemberAccess	machine_ptr -> right		1351350	1					
ANR	1352121	Identifier	machine_ptr		1351350	0					
ANR	1352122	Identifier	right		1351350	1					
ANR	1352123	ElseStatement	else		1351350	0					
ANR	1352124	CompoundStatement		148:10:4605:4605	1351350	0					
ANR	1352125	WhileStatement	while ( machine_rep_ptr -> right != NULL )		1351350	0					
ANR	1352126	Condition	machine_rep_ptr -> right != NULL	504:11:13356:13385	1351350	0	True				
ANR	1352127	EqualityExpression	machine_rep_ptr -> right != NULL		1351350	0		!=			
ANR	1352128	PtrMemberAccess	machine_rep_ptr -> right		1351350	0					
ANR	1352129	Identifier	machine_rep_ptr		1351350	0					
ANR	1352130	Identifier	right		1351350	1					
ANR	1352131	Identifier	NULL		1351350	1					
ANR	1352132	CompoundStatement		149:43:4650:4650	1351350	1					
ANR	1352133	ExpressionStatement	machine_rep_trail = machine_rep_ptr	505:5:13395:13430	1351350	0	True				
ANR	1352134	AssignmentExpression	machine_rep_trail = machine_rep_ptr		1351350	0		=			
ANR	1352135	Identifier	machine_rep_trail		1351350	0					
ANR	1352136	Identifier	machine_rep_ptr		1351350	1					
ANR	1352137	ExpressionStatement	machine_rep_ptr = machine_rep_ptr -> right	506:5:13437:13477	1351350	1	True				
ANR	1352138	AssignmentExpression	machine_rep_ptr = machine_rep_ptr -> right		1351350	0		=			
ANR	1352139	Identifier	machine_rep_ptr		1351350	0					
ANR	1352140	PtrMemberAccess	machine_rep_ptr -> right		1351350	1					
ANR	1352141	Identifier	machine_rep_ptr		1351350	0					
ANR	1352142	Identifier	right		1351350	1					
ANR	1352143	IfStatement	if ( machine_rep_trail == NULL )		1351350	1					
ANR	1352144	Condition	machine_rep_trail == NULL	508:8:13493:13517	1351350	0	True				
ANR	1352145	EqualityExpression	machine_rep_trail == NULL		1351350	0		==			
ANR	1352146	Identifier	machine_rep_trail		1351350	0					
ANR	1352147	Identifier	NULL		1351350	1					
ANR	1352148	ExpressionStatement	machine_rep_ptr -> right = machine_ptr -> right	509:5:13525:13568	1351350	1	True				
ANR	1352149	AssignmentExpression	machine_rep_ptr -> right = machine_ptr -> right		1351350	0		=			
ANR	1352150	PtrMemberAccess	machine_rep_ptr -> right		1351350	0					
ANR	1352151	Identifier	machine_rep_ptr		1351350	0					
ANR	1352152	Identifier	right		1351350	1					
ANR	1352153	PtrMemberAccess	machine_ptr -> right		1351350	1					
ANR	1352154	Identifier	machine_ptr		1351350	0					
ANR	1352155	Identifier	right		1351350	1					
ANR	1352156	ElseStatement	else		1351350	0					
ANR	1352157	CompoundStatement		155:9:4841:4841	1351350	0					
ANR	1352158	ExpressionStatement	machine_rep_trail -> right = machine_rep_ptr -> left	511:5:13586:13634	1351350	0	True				
ANR	1352159	AssignmentExpression	machine_rep_trail -> right = machine_rep_ptr -> left		1351350	0		=			
ANR	1352160	PtrMemberAccess	machine_rep_trail -> right		1351350	0					
ANR	1352161	Identifier	machine_rep_trail		1351350	0					
ANR	1352162	Identifier	right		1351350	1					
ANR	1352163	PtrMemberAccess	machine_rep_ptr -> left		1351350	1					
ANR	1352164	Identifier	machine_rep_ptr		1351350	0					
ANR	1352165	Identifier	left		1351350	1					
ANR	1352166	ExpressionStatement	machine_rep_ptr -> left = machine_ptr -> left	512:5:13641:13682	1351350	1	True				
ANR	1352167	AssignmentExpression	machine_rep_ptr -> left = machine_ptr -> left		1351350	0		=			
ANR	1352168	PtrMemberAccess	machine_rep_ptr -> left		1351350	0					
ANR	1352169	Identifier	machine_rep_ptr		1351350	0					
ANR	1352170	Identifier	left		1351350	1					
ANR	1352171	PtrMemberAccess	machine_ptr -> left		1351350	1					
ANR	1352172	Identifier	machine_ptr		1351350	0					
ANR	1352173	Identifier	left		1351350	1					
ANR	1352174	ExpressionStatement	machine_rep_ptr -> right = machine_ptr -> right	513:5:13689:13732	1351350	2	True				
ANR	1352175	AssignmentExpression	machine_rep_ptr -> right = machine_ptr -> right		1351350	0		=			
ANR	1352176	PtrMemberAccess	machine_rep_ptr -> right		1351350	0					
ANR	1352177	Identifier	machine_rep_ptr		1351350	0					
ANR	1352178	Identifier	right		1351350	1					
ANR	1352179	PtrMemberAccess	machine_ptr -> right		1351350	1					
ANR	1352180	Identifier	machine_ptr		1351350	0					
ANR	1352181	Identifier	right		1351350	1					
ANR	1352182	IfStatement	if ( machine_trail == NULL )		1351350	2					
ANR	1352183	Condition	machine_trail == NULL	515:8:13748:13768	1351350	0	True				
ANR	1352184	EqualityExpression	machine_trail == NULL		1351350	0		==			
ANR	1352185	Identifier	machine_trail		1351350	0					
ANR	1352186	Identifier	NULL		1351350	1					
ANR	1352187	ExpressionStatement	hash_table [ hash_bucket ] = machine_rep_ptr	516:5:13776:13817	1351350	1	True				
ANR	1352188	AssignmentExpression	hash_table [ hash_bucket ] = machine_rep_ptr		1351350	0		=			
ANR	1352189	ArrayIndexing	hash_table [ hash_bucket ]		1351350	0					
ANR	1352190	Identifier	hash_table		1351350	0					
ANR	1352191	Identifier	hash_bucket		1351350	1					
ANR	1352192	Identifier	machine_rep_ptr		1351350	1					
ANR	1352193	ElseStatement	else		1351350	0					
ANR	1352194	IfStatement	if ( machine_trail -> left == machine_ptr )		1351350	0					
ANR	1352195	Condition	machine_trail -> left == machine_ptr	517:13:13832:13865	1351350	0	True				
ANR	1352196	EqualityExpression	machine_trail -> left == machine_ptr		1351350	0		==			
ANR	1352197	PtrMemberAccess	machine_trail -> left		1351350	0					
ANR	1352198	Identifier	machine_trail		1351350	0					
ANR	1352199	Identifier	left		1351350	1					
ANR	1352200	Identifier	machine_ptr		1351350	1					
ANR	1352201	ExpressionStatement	machine_trail -> left = machine_rep_ptr	518:5:13873:13910	1351350	1	True				
ANR	1352202	AssignmentExpression	machine_trail -> left = machine_rep_ptr		1351350	0		=			
ANR	1352203	PtrMemberAccess	machine_trail -> left		1351350	0					
ANR	1352204	Identifier	machine_trail		1351350	0					
ANR	1352205	Identifier	left		1351350	1					
ANR	1352206	Identifier	machine_rep_ptr		1351350	1					
ANR	1352207	ElseStatement	else		1351350	0					
ANR	1352208	ExpressionStatement	machine_trail -> right = machine_rep_ptr	520:5:13926:13964	1351350	0	True				
ANR	1352209	AssignmentExpression	machine_trail -> right = machine_rep_ptr		1351350	0		=			
ANR	1352210	PtrMemberAccess	machine_trail -> right		1351350	0					
ANR	1352211	Identifier	machine_trail		1351350	0					
ANR	1352212	Identifier	right		1351350	1					
ANR	1352213	Identifier	machine_rep_ptr		1351350	1					
ANR	1352214	Statement	delete	522:3:13974:13979	1351350	4	True				
ANR	1352215	ExpressionStatement	machine_ptr	522:10:13981:13992	1351350	5	True				
ANR	1352216	Identifier	machine_ptr		1351350	0					
ANR	1352217	IfStatement	if ( ( hash_table [ hash_bucket ] == NULL ) && ( retCode != CANNOT_DELETE_DIRECTORY ) )		1351350	6					
ANR	1352218	Condition	( hash_table [ hash_bucket ] == NULL ) && ( retCode != CANNOT_DELETE_DIRECTORY )	523:7:14001:14078	1351350	0	True				
ANR	1352219	AndExpression	( hash_table [ hash_bucket ] == NULL ) && ( retCode != CANNOT_DELETE_DIRECTORY )		1351350	0		&&			
ANR	1352220	EqualityExpression	hash_table [ hash_bucket ] == NULL		1351350	0		==			
ANR	1352221	ArrayIndexing	hash_table [ hash_bucket ]		1351350	0					
ANR	1352222	Identifier	hash_table		1351350	0					
ANR	1352223	Identifier	hash_bucket		1351350	1					
ANR	1352224	Identifier	NULL		1351350	1					
ANR	1352225	EqualityExpression	retCode != CANNOT_DELETE_DIRECTORY		1351350	1		!=			
ANR	1352226	Identifier	retCode		1351350	0					
ANR	1352227	Identifier	CANNOT_DELETE_DIRECTORY		1351350	1					
ANR	1352228	CompoundStatement		169:42:5343:5343	1351350	1					
ANR	1352229	ExpressionStatement	"sprintf ( pathname , ""%s%s"" , LOCAL_DRIVE_PREFIX , machine_name )"	525:4:14087:14146	1351350	0	True				
ANR	1352230	CallExpression	"sprintf ( pathname , ""%s%s"" , LOCAL_DRIVE_PREFIX , machine_name )"		1351350	0					
ANR	1352231	Callee	sprintf		1351350	0					
ANR	1352232	Identifier	sprintf		1351350	0					
ANR	1352233	ArgumentList	pathname		1351350	1					
ANR	1352234	Argument	pathname		1351350	0					
ANR	1352235	Identifier	pathname		1351350	0					
ANR	1352236	Argument	"""%s%s"""		1351350	1					
ANR	1352237	PrimaryExpression	"""%s%s"""		1351350	0					
ANR	1352238	Argument	LOCAL_DRIVE_PREFIX		1351350	2					
ANR	1352239	Identifier	LOCAL_DRIVE_PREFIX		1351350	0					
ANR	1352240	Argument	machine_name		1351350	3					
ANR	1352241	Identifier	machine_name		1351350	0					
ANR	1352242	IfStatement	if ( rmdir ( pathname ) != 0 )		1351350	1					
ANR	1352243	Condition	rmdir ( pathname ) != 0	526:8:14156:14175	1351350	0	True				
ANR	1352244	EqualityExpression	rmdir ( pathname ) != 0		1351350	0		!=			
ANR	1352245	CallExpression	rmdir ( pathname )		1351350	0					
ANR	1352246	Callee	rmdir		1351350	0					
ANR	1352247	Identifier	rmdir		1351350	0					
ANR	1352248	ArgumentList	pathname		1351350	1					
ANR	1352249	Argument	pathname		1351350	0					
ANR	1352250	Identifier	pathname		1351350	0					
ANR	1352251	PrimaryExpression	0		1351350	1					
ANR	1352252	ExpressionStatement		527:45:14223:14223	1351350	1	True				
ANR	1352253	ReturnStatement	return retCode ;	531:1:14241:14255	1351350	38	True				
ANR	1352254	Identifier	retCode		1351350	0					
ANR	1352255	ReturnType	int		1351350	1					
ANR	1352256	Identifier	FileIndex :: DeleteFile		1351350	2					
ANR	1352257	ParameterList	"struct in_addr machine_IP , const char * owner_name , const char * file_name"		1351350	3					
ANR	1352258	Parameter	struct in_addr machine_IP	353:26:8641:8665	1351350	0	True				
ANR	1352259	ParameterType	struct in_addr		1351350	0					
ANR	1352260	Identifier	machine_IP		1351350	1					
ANR	1352261	Parameter	const char * owner_name	354:8:8676:8700	1351350	1	True				
ANR	1352262	ParameterType	const char *		1351350	0					
ANR	1352263	Identifier	owner_name		1351350	1					
ANR	1352264	Parameter	const char * file_name	355:8:8711:8734	1351350	2	True				
ANR	1352265	ParameterType	const char *		1351350	0					
ANR	1352266	Identifier	file_name		1351350	1					
ANR	1352267	CFGEntryNode	ENTRY		1351350		True				
ANR	1352268	CFGExitNode	EXIT		1351350		True				
ANR	1352269	Symbol	owner_ptr -> file_root		1351350						
ANR	1352270	Symbol	hash_bucket		1351350						
ANR	1352271	Symbol	file_ptr		1351350						
ANR	1352272	Symbol	machine_rep_ptr -> right		1351350						
ANR	1352273	Symbol	rmdir		1351350						
ANR	1352274	Symbol	machine_name		1351350						
ANR	1352275	Symbol	Hash		1351350						
ANR	1352276	Symbol	owner_rep_ptr -> left		1351350						
ANR	1352277	Symbol	owner_trail -> right		1351350						
ANR	1352278	Symbol	strncmp		1351350						
ANR	1352279	Symbol	file_ptr -> file_data -> data . machine_IP		1351350						
ANR	1352280	Symbol	machine_ptr -> owner_root		1351350						
ANR	1352281	Symbol	* * file_ptr		1351350						
ANR	1352282	Symbol	file_ptr -> file_name		1351350						
ANR	1352283	Symbol	file_rep_trail -> right		1351350						
ANR	1352284	Symbol	m_temp		1351350						
ANR	1352285	Symbol	machine_IP . s_addr		1351350						
ANR	1352286	Symbol	IMDS_INDEX_ERROR		1351350						
ANR	1352287	Symbol	* file_trail		1351350						
ANR	1352288	Symbol	owner_rep_ptr		1351350						
ANR	1352289	Symbol	owner_name		1351350						
ANR	1352290	Symbol	NULL		1351350						
ANR	1352291	Symbol	* file_rep_ptr		1351350						
ANR	1352292	Symbol	machine_IP		1351350						
ANR	1352293	Symbol	file_rep_trail		1351350						
ANR	1352294	Symbol	MAX_CONDOR_FILENAME_LENGTH		1351350						
ANR	1352295	Symbol	* owner_ptr		1351350						
ANR	1352296	Symbol	* file_ptr		1351350						
ANR	1352297	Symbol	owner_rep_trail		1351350						
ANR	1352298	Symbol	file_trail -> right		1351350						
ANR	1352299	Symbol	pathname		1351350						
ANR	1352300	Symbol	machine_ptr -> left		1351350						
ANR	1352301	Symbol	machine_trail		1351350						
ANR	1352302	Symbol	* file_rep_trail		1351350						
ANR	1352303	Symbol	machine_rep_trail		1351350						
ANR	1352304	Symbol	owner_ptr -> right		1351350						
ANR	1352305	Symbol	* hash_bucket		1351350						
ANR	1352306	Symbol	* machine_ptr		1351350						
ANR	1352307	Symbol	machine_rep_ptr		1351350						
ANR	1352308	Symbol	owner_trail		1351350						
ANR	1352309	Symbol	CANNOT_DELETE_DIRECTORY		1351350						
ANR	1352310	Symbol	machine_rep_ptr -> left		1351350						
ANR	1352311	Symbol	hash_table		1351350						
ANR	1352312	Symbol	owner_rep_trail -> right		1351350						
ANR	1352313	Symbol	machine_ptr -> machine_IP		1351350						
ANR	1352314	Symbol	LOCAL_DRIVE_PREFIX		1351350						
ANR	1352315	Symbol	owner_rep_ptr -> right		1351350						
ANR	1352316	Symbol	* hash_table		1351350						
ANR	1352317	Symbol	file_ptr -> file_data -> data		1351350						
ANR	1352318	Symbol	retCode		1351350						
ANR	1352319	Symbol	file_trail -> left		1351350						
ANR	1352320	Symbol	file_rep_ptr -> left		1351350						
ANR	1352321	Symbol	owner_trail -> left		1351350						
ANR	1352322	Symbol	file_ptr -> file_data		1351350						
ANR	1352323	Symbol	* owner_rep_ptr		1351350						
ANR	1352324	Symbol	* machine_rep_ptr		1351350						
ANR	1352325	Symbol	machine_trail -> left		1351350						
ANR	1352326	Symbol	machine_trail -> right		1351350						
ANR	1352327	Symbol	owner_ptr -> owner_name		1351350						
ANR	1352328	Symbol	file_rep_ptr -> right		1351350						
ANR	1352329	Symbol	file_ptr -> left		1351350						
ANR	1352330	Symbol	file_trail		1351350						
ANR	1352331	Symbol	file_rep_ptr		1351350						
ANR	1352332	Symbol	file_name		1351350						
ANR	1352333	Symbol	D_ALWAYS		1351350						
ANR	1352334	Symbol	owner_ptr -> left		1351350						
ANR	1352335	Symbol	* file_ptr -> file_data		1351350						
ANR	1352336	Symbol	machine_ptr -> machine_IP . s_addr		1351350						
ANR	1352337	Symbol	* owner_rep_trail		1351350						
ANR	1352338	Symbol	* machine_trail		1351350						
ANR	1352339	Symbol	MAX_NAME_LENGTH		1351350						
ANR	1352340	Symbol	owner_ptr		1351350						
ANR	1352341	Symbol	machine_ptr		1351350						
ANR	1352342	Symbol	f_temp		1351350						
ANR	1352343	Symbol	machine_ptr -> right		1351350						
ANR	1352344	Symbol	unlink		1351350						
ANR	1352345	Symbol	file_ptr -> right		1351350						
ANR	1352346	Symbol	CANNOT_DELETE_FILE		1351350						
ANR	1352347	Symbol	* owner_trail		1351350						
ANR	1352348	Symbol	o_temp		1351350						
ANR	1352349	Symbol	machine_rep_trail -> right		1351350						
ANR	1352350	Symbol	* machine_rep_trail		1351350						
ANR	1352351	Function	FileIndex :: RemoveFile	535:0:14261:14521							
ANR	1352352	FunctionDef	"FileIndex :: RemoveFile (struct in_addr machine_IP , const char * owner_name , const char * file_name)"		1352351	0					
ANR	1352353	CompoundStatement		538:0:14377:14521	1352351	0					
ANR	1352354	IfStatement	"if ( Exists ( machine_IP , owner_name , file_name ) != EXISTS )"		1352351	0					
ANR	1352355	Condition	"Exists ( machine_IP , owner_name , file_name ) != EXISTS"	539:6:14385:14435	1352351	0	True				
ANR	1352356	EqualityExpression	"Exists ( machine_IP , owner_name , file_name ) != EXISTS"		1352351	0		!=			
ANR	1352357	CallExpression	"Exists ( machine_IP , owner_name , file_name )"		1352351	0					
ANR	1352358	Callee	Exists		1352351	0					
ANR	1352359	Identifier	Exists		1352351	0					
ANR	1352360	ArgumentList	machine_IP		1352351	1					
ANR	1352361	Argument	machine_IP		1352351	0					
ANR	1352362	Identifier	machine_IP		1352351	0					
ANR	1352363	Argument	owner_name		1352351	1					
ANR	1352364	Identifier	owner_name		1352351	0					
ANR	1352365	Argument	file_name		1352351	2					
ANR	1352366	Identifier	file_name		1352351	0					
ANR	1352367	Identifier	EXISTS		1352351	1					
ANR	1352368	ReturnStatement	return DOES_NOT_EXIST ;	540:4:14442:14463	1352351	1	True				
ANR	1352369	Identifier	DOES_NOT_EXIST		1352351	0					
ANR	1352370	ReturnStatement	"return DeleteFile ( machine_IP , owner_name , file_name ) ;"	541:2:14467:14519	1352351	1	True				
ANR	1352371	CallExpression	"DeleteFile ( machine_IP , owner_name , file_name )"		1352351	0					
ANR	1352372	Callee	DeleteFile		1352351	0					
ANR	1352373	Identifier	DeleteFile		1352351	0					
ANR	1352374	ArgumentList	machine_IP		1352351	1					
ANR	1352375	Argument	machine_IP		1352351	0					
ANR	1352376	Identifier	machine_IP		1352351	0					
ANR	1352377	Argument	owner_name		1352351	1					
ANR	1352378	Identifier	owner_name		1352351	0					
ANR	1352379	Argument	file_name		1352351	2					
ANR	1352380	Identifier	file_name		1352351	0					
ANR	1352381	ReturnType	int		1352351	1					
ANR	1352382	Identifier	FileIndex :: RemoveFile		1352351	2					
ANR	1352383	ParameterList	"struct in_addr machine_IP , const char * owner_name , const char * file_name"		1352351	3					
ANR	1352384	Parameter	struct in_addr machine_IP	535:26:14287:14311	1352351	0	True				
ANR	1352385	ParameterType	struct in_addr		1352351	0					
ANR	1352386	Identifier	machine_IP		1352351	1					
ANR	1352387	Parameter	const char * owner_name	536:5:14319:14343	1352351	1	True				
ANR	1352388	ParameterType	const char *		1352351	0					
ANR	1352389	Identifier	owner_name		1352351	1					
ANR	1352390	Parameter	const char * file_name	537:5:14351:14374	1352351	2	True				
ANR	1352391	ParameterType	const char *		1352351	0					
ANR	1352392	Identifier	file_name		1352351	1					
ANR	1352393	CFGEntryNode	ENTRY		1352351		True				
ANR	1352394	CFGExitNode	EXIT		1352351		True				
ANR	1352395	Symbol	DOES_NOT_EXIST		1352351						
ANR	1352396	Symbol	owner_name		1352351						
ANR	1352397	Symbol	EXISTS		1352351						
ANR	1352398	Symbol	machine_IP		1352351						
ANR	1352399	Symbol	file_name		1352351						
ANR	1352400	Symbol	Exists		1352351						
ANR	1352401	Symbol	DeleteFile		1352351						
ANR	1352402	Function	FileIndex :: FIDump	545:0:14525:15214							
ANR	1352403	FunctionDef	FileIndex :: FIDump (file_node * f_ptr)		1352402	0					
ANR	1352404	CompoundStatement		546:0:14566:15214	1352402	0					
ANR	1352405	IfStatement	if ( f_ptr != NULL )		1352402	0					
ANR	1352406	Condition	f_ptr != NULL	547:6:14574:14586	1352402	0	True				
ANR	1352407	EqualityExpression	f_ptr != NULL		1352402	0		!=			
ANR	1352408	Identifier	f_ptr		1352402	0					
ANR	1352409	Identifier	NULL		1352402	1					
ANR	1352410	CompoundStatement		3:4:26:26	1352402	1					
ANR	1352411	ExpressionStatement	FIDump ( f_ptr -> left )	549:6:14601:14620	1352402	0	True				
ANR	1352412	CallExpression	FIDump ( f_ptr -> left )		1352402	0					
ANR	1352413	Callee	FIDump		1352402	0					
ANR	1352414	Identifier	FIDump		1352402	0					
ANR	1352415	ArgumentList	f_ptr -> left		1352402	1					
ANR	1352416	Argument	f_ptr -> left		1352402	0					
ANR	1352417	PtrMemberAccess	f_ptr -> left		1352402	0					
ANR	1352418	Identifier	f_ptr		1352402	0					
ANR	1352419	Identifier	left		1352402	1					
ANR	1352420	ExpressionStatement	"cout << ""\\t\\t\\tFile Name: "" << f_ptr -> file_data -> data . file_name << endl"	550:6:14628:14699	1352402	1	True				
ANR	1352421	ShiftExpression	"cout << ""\\t\\t\\tFile Name: "" << f_ptr -> file_data -> data . file_name << endl"		1352402	0		<<			
ANR	1352422	Identifier	cout		1352402	0					
ANR	1352423	ShiftExpression	"""\\t\\t\\tFile Name: "" << f_ptr -> file_data -> data . file_name << endl"		1352402	1		<<			
ANR	1352424	PrimaryExpression	"""\\t\\t\\tFile Name: """		1352402	0					
ANR	1352425	ShiftExpression	f_ptr -> file_data -> data . file_name << endl		1352402	1		<<			
ANR	1352426	MemberAccess	f_ptr -> file_data -> data . file_name		1352402	0					
ANR	1352427	PtrMemberAccess	f_ptr -> file_data -> data		1352402	0					
ANR	1352428	PtrMemberAccess	f_ptr -> file_data		1352402	0					
ANR	1352429	Identifier	f_ptr		1352402	0					
ANR	1352430	Identifier	file_data		1352402	1					
ANR	1352431	Identifier	data		1352402	1					
ANR	1352432	Identifier	file_name		1352402	1					
ANR	1352433	Identifier	endl		1352402	1					
ANR	1352434	ExpressionStatement	"cout << ""\\t\\t\\tFile Size: "" << f_ptr -> file_data -> data . size << endl"	551:6:14707:14773	1352402	2	True				
ANR	1352435	ShiftExpression	"cout << ""\\t\\t\\tFile Size: "" << f_ptr -> file_data -> data . size << endl"		1352402	0		<<			
ANR	1352436	Identifier	cout		1352402	0					
ANR	1352437	ShiftExpression	"""\\t\\t\\tFile Size: "" << f_ptr -> file_data -> data . size << endl"		1352402	1		<<			
ANR	1352438	PrimaryExpression	"""\\t\\t\\tFile Size: """		1352402	0					
ANR	1352439	ShiftExpression	f_ptr -> file_data -> data . size << endl		1352402	1		<<			
ANR	1352440	MemberAccess	f_ptr -> file_data -> data . size		1352402	0					
ANR	1352441	PtrMemberAccess	f_ptr -> file_data -> data		1352402	0					
ANR	1352442	PtrMemberAccess	f_ptr -> file_data		1352402	0					
ANR	1352443	Identifier	f_ptr		1352402	0					
ANR	1352444	Identifier	file_data		1352402	1					
ANR	1352445	Identifier	data		1352402	1					
ANR	1352446	Identifier	size		1352402	1					
ANR	1352447	Identifier	endl		1352402	1					
ANR	1352448	ExpressionStatement	"cout << ""\\t\\t\\tStatus:    """	552:6:14781:14808	1352402	3	True				
ANR	1352449	ShiftExpression	"cout << ""\\t\\t\\tStatus:    """		1352402	0		<<			
ANR	1352450	Identifier	cout		1352402	0					
ANR	1352451	PrimaryExpression	"""\\t\\t\\tStatus:    """		1352402	1					
ANR	1352452	SwitchStatement	switch ( f_ptr -> file_data -> data . state )		1352402	4					
ANR	1352453	Condition	f_ptr -> file_data -> data . state	553:14:14824:14851	1352402	0	True				
ANR	1352454	MemberAccess	f_ptr -> file_data -> data . state		1352402	0					
ANR	1352455	PtrMemberAccess	f_ptr -> file_data -> data		1352402	0					
ANR	1352456	PtrMemberAccess	f_ptr -> file_data		1352402	0					
ANR	1352457	Identifier	f_ptr		1352402	0					
ANR	1352458	Identifier	file_data		1352402	1					
ANR	1352459	Identifier	data		1352402	1					
ANR	1352460	Identifier	state		1352402	1					
ANR	1352461	CompoundStatement		9:1:288:288	1352402	1					
ANR	1352462	Label	case NOT_PRESENT :	555:1:14858:14874	1352402	0	True				
ANR	1352463	Identifier	NOT_PRESENT		1352402	0					
ANR	1352464	ExpressionStatement	"cout << ""not present on server"" << endl"	556:3:14880:14919	1352402	1	True				
ANR	1352465	ShiftExpression	"cout << ""not present on server"" << endl"		1352402	0		<<			
ANR	1352466	Identifier	cout		1352402	0					
ANR	1352467	ShiftExpression	"""not present on server"" << endl"		1352402	1		<<			
ANR	1352468	PrimaryExpression	"""not present on server"""		1352402	0					
ANR	1352469	Identifier	endl		1352402	1					
ANR	1352470	BreakStatement	break ;	557:3:14924:14929	1352402	2	True				
ANR	1352471	Label	case ON_SERVER :	558:1:14932:14946	1352402	3	True				
ANR	1352472	Identifier	ON_SERVER		1352402	0					
ANR	1352473	ExpressionStatement	"cout << ""on checkpoint server"" << endl"	559:3:14951:14989	1352402	4	True				
ANR	1352474	ShiftExpression	"cout << ""on checkpoint server"" << endl"		1352402	0		<<			
ANR	1352475	Identifier	cout		1352402	0					
ANR	1352476	ShiftExpression	"""on checkpoint server"" << endl"		1352402	1		<<			
ANR	1352477	PrimaryExpression	"""on checkpoint server"""		1352402	0					
ANR	1352478	Identifier	endl		1352402	1					
ANR	1352479	BreakStatement	break ;	560:3:14994:14999	1352402	5	True				
ANR	1352480	Label	case LOADING :	561:1:15002:15014	1352402	6	True				
ANR	1352481	Identifier	LOADING		1352402	0					
ANR	1352482	ExpressionStatement	"cout << ""loading"" << endl"	562:3:15019:15044	1352402	7	True				
ANR	1352483	ShiftExpression	"cout << ""loading"" << endl"		1352402	0		<<			
ANR	1352484	Identifier	cout		1352402	0					
ANR	1352485	ShiftExpression	"""loading"" << endl"		1352402	1		<<			
ANR	1352486	PrimaryExpression	"""loading"""		1352402	0					
ANR	1352487	Identifier	endl		1352402	1					
ANR	1352488	BreakStatement	break ;	563:3:15049:15054	1352402	8	True				
ANR	1352489	Label	case XMITTING :	564:1:15057:15070	1352402	9	True				
ANR	1352490	Identifier	XMITTING		1352402	0					
ANR	1352491	ExpressionStatement	"cout << ""transmitting"" << endl"	565:3:15075:15105	1352402	10	True				
ANR	1352492	ShiftExpression	"cout << ""transmitting"" << endl"		1352402	0		<<			
ANR	1352493	Identifier	cout		1352402	0					
ANR	1352494	ShiftExpression	"""transmitting"" << endl"		1352402	1		<<			
ANR	1352495	PrimaryExpression	"""transmitting"""		1352402	0					
ANR	1352496	Identifier	endl		1352402	1					
ANR	1352497	BreakStatement	break ;	566:3:15110:15115	1352402	11	True				
ANR	1352498	Label	default :	567:1:15118:15125	1352402	12	True				
ANR	1352499	Identifier	default		1352402	0					
ANR	1352500	ExpressionStatement	"cout << ""unknown"" << endl"	568:3:15130:15155	1352402	13	True				
ANR	1352501	ShiftExpression	"cout << ""unknown"" << endl"		1352402	0		<<			
ANR	1352502	Identifier	cout		1352402	0					
ANR	1352503	ShiftExpression	"""unknown"" << endl"		1352402	1		<<			
ANR	1352504	PrimaryExpression	"""unknown"""		1352402	0					
ANR	1352505	Identifier	endl		1352402	1					
ANR	1352506	ExpressionStatement	cout << endl	570:6:15166:15178	1352402	5	True				
ANR	1352507	ShiftExpression	cout << endl		1352402	0		<<			
ANR	1352508	Identifier	cout		1352402	0					
ANR	1352509	Identifier	endl		1352402	1					
ANR	1352510	ExpressionStatement	FIDump ( f_ptr -> right )	571:6:15186:15206	1352402	6	True				
ANR	1352511	CallExpression	FIDump ( f_ptr -> right )		1352402	0					
ANR	1352512	Callee	FIDump		1352402	0					
ANR	1352513	Identifier	FIDump		1352402	0					
ANR	1352514	ArgumentList	f_ptr -> right		1352402	1					
ANR	1352515	Argument	f_ptr -> right		1352402	0					
ANR	1352516	PtrMemberAccess	f_ptr -> right		1352402	0					
ANR	1352517	Identifier	f_ptr		1352402	0					
ANR	1352518	Identifier	right		1352402	1					
ANR	1352519	ReturnType	void		1352402	1					
ANR	1352520	Identifier	FileIndex :: FIDump		1352402	2					
ANR	1352521	ParameterList	file_node * f_ptr		1352402	3					
ANR	1352522	Parameter	file_node * f_ptr	545:23:14548:14563	1352402	0	True				
ANR	1352523	ParameterType	file_node *		1352402	0					
ANR	1352524	Identifier	f_ptr		1352402	1					
ANR	1352525	CFGEntryNode	ENTRY		1352402		True				
ANR	1352526	CFGExitNode	EXIT		1352402		True				
ANR	1352527	Symbol	NULL		1352402						
ANR	1352528	Symbol	* * f_ptr		1352402						
ANR	1352529	Symbol	f_ptr -> file_data		1352402						
ANR	1352530	Symbol	f_ptr -> left		1352402						
ANR	1352531	Symbol	* f_ptr		1352402						
ANR	1352532	Symbol	f_ptr -> file_data -> data		1352402						
ANR	1352533	Symbol	f_ptr -> right		1352402						
ANR	1352534	Symbol	* f_ptr -> file_data		1352402						
ANR	1352535	Symbol	f_ptr -> file_data -> data . state		1352402						
ANR	1352536	Symbol	f_ptr		1352402						
ANR	1352537	Function	FileIndex :: OIDump	576:0:15218:15440							
ANR	1352538	FunctionDef	FileIndex :: OIDump (owner_node * o_ptr)		1352537	0					
ANR	1352539	CompoundStatement		577:0:15260:15440	1352537	0					
ANR	1352540	IfStatement	if ( o_ptr != NULL )		1352537	0					
ANR	1352541	Condition	o_ptr != NULL	578:6:15268:15280	1352537	0	True				
ANR	1352542	EqualityExpression	o_ptr != NULL		1352537	0		!=			
ANR	1352543	Identifier	o_ptr		1352537	0					
ANR	1352544	Identifier	NULL		1352537	1					
ANR	1352545	CompoundStatement		3:4:26:26	1352537	1					
ANR	1352546	ExpressionStatement	OIDump ( o_ptr -> left )	580:6:15295:15314	1352537	0	True				
ANR	1352547	CallExpression	OIDump ( o_ptr -> left )		1352537	0					
ANR	1352548	Callee	OIDump		1352537	0					
ANR	1352549	Identifier	OIDump		1352537	0					
ANR	1352550	ArgumentList	o_ptr -> left		1352537	1					
ANR	1352551	Argument	o_ptr -> left		1352537	0					
ANR	1352552	PtrMemberAccess	o_ptr -> left		1352537	0					
ANR	1352553	Identifier	o_ptr		1352537	0					
ANR	1352554	Identifier	left		1352537	1					
ANR	1352555	ExpressionStatement	"cout << ""\\t\\tOwner: "" << o_ptr -> owner_name << endl"	581:6:15322:15372	1352537	1	True				
ANR	1352556	ShiftExpression	"cout << ""\\t\\tOwner: "" << o_ptr -> owner_name << endl"		1352537	0		<<			
ANR	1352557	Identifier	cout		1352537	0					
ANR	1352558	ShiftExpression	"""\\t\\tOwner: "" << o_ptr -> owner_name << endl"		1352537	1		<<			
ANR	1352559	PrimaryExpression	"""\\t\\tOwner: """		1352537	0					
ANR	1352560	ShiftExpression	o_ptr -> owner_name << endl		1352537	1		<<			
ANR	1352561	PtrMemberAccess	o_ptr -> owner_name		1352537	0					
ANR	1352562	Identifier	o_ptr		1352537	0					
ANR	1352563	Identifier	owner_name		1352537	1					
ANR	1352564	Identifier	endl		1352537	1					
ANR	1352565	ExpressionStatement	FIDump ( o_ptr -> file_root )	582:6:15380:15404	1352537	2	True				
ANR	1352566	CallExpression	FIDump ( o_ptr -> file_root )		1352537	0					
ANR	1352567	Callee	FIDump		1352537	0					
ANR	1352568	Identifier	FIDump		1352537	0					
ANR	1352569	ArgumentList	o_ptr -> file_root		1352537	1					
ANR	1352570	Argument	o_ptr -> file_root		1352537	0					
ANR	1352571	PtrMemberAccess	o_ptr -> file_root		1352537	0					
ANR	1352572	Identifier	o_ptr		1352537	0					
ANR	1352573	Identifier	file_root		1352537	1					
ANR	1352574	ExpressionStatement	OIDump ( o_ptr -> right )	583:6:15412:15432	1352537	3	True				
ANR	1352575	CallExpression	OIDump ( o_ptr -> right )		1352537	0					
ANR	1352576	Callee	OIDump		1352537	0					
ANR	1352577	Identifier	OIDump		1352537	0					
ANR	1352578	ArgumentList	o_ptr -> right		1352537	1					
ANR	1352579	Argument	o_ptr -> right		1352537	0					
ANR	1352580	PtrMemberAccess	o_ptr -> right		1352537	0					
ANR	1352581	Identifier	o_ptr		1352537	0					
ANR	1352582	Identifier	right		1352537	1					
ANR	1352583	ReturnType	void		1352537	1					
ANR	1352584	Identifier	FileIndex :: OIDump		1352537	2					
ANR	1352585	ParameterList	owner_node * o_ptr		1352537	3					
ANR	1352586	Parameter	owner_node * o_ptr	576:23:15241:15257	1352537	0	True				
ANR	1352587	ParameterType	owner_node *		1352537	0					
ANR	1352588	Identifier	o_ptr		1352537	1					
ANR	1352589	CFGEntryNode	ENTRY		1352537		True				
ANR	1352590	CFGExitNode	EXIT		1352537		True				
ANR	1352591	Symbol	o_ptr -> right		1352537						
ANR	1352592	Symbol	* o_ptr		1352537						
ANR	1352593	Symbol	NULL		1352537						
ANR	1352594	Symbol	o_ptr		1352537						
ANR	1352595	Symbol	o_ptr -> file_root		1352537						
ANR	1352596	Symbol	o_ptr -> left		1352537						
ANR	1352597	Function	FileIndex :: MIDump	589:0:15445:15681							
ANR	1352598	FunctionDef	FileIndex :: MIDump (machine_node * m_ptr)		1352597	0					
ANR	1352599	CompoundStatement		590:0:15489:15681	1352597	0					
ANR	1352600	IfStatement	if ( m_ptr != NULL )		1352597	0					
ANR	1352601	Condition	m_ptr != NULL	591:6:15497:15509	1352597	0	True				
ANR	1352602	EqualityExpression	m_ptr != NULL		1352597	0		!=			
ANR	1352603	Identifier	m_ptr		1352597	0					
ANR	1352604	Identifier	NULL		1352597	1					
ANR	1352605	CompoundStatement		3:4:26:26	1352597	1					
ANR	1352606	ExpressionStatement	MIDump ( m_ptr -> left )	593:6:15524:15543	1352597	0	True				
ANR	1352607	CallExpression	MIDump ( m_ptr -> left )		1352597	0					
ANR	1352608	Callee	MIDump		1352597	0					
ANR	1352609	Identifier	MIDump		1352597	0					
ANR	1352610	ArgumentList	m_ptr -> left		1352597	1					
ANR	1352611	Argument	m_ptr -> left		1352597	0					
ANR	1352612	PtrMemberAccess	m_ptr -> left		1352597	0					
ANR	1352613	Identifier	m_ptr		1352597	0					
ANR	1352614	Identifier	left		1352597	1					
ANR	1352615	ExpressionStatement	"cout << ""\\tMachine: "" << inet_ntoa ( m_ptr -> machine_IP ) << endl"	594:6:15551:15612	1352597	1	True				
ANR	1352616	ShiftExpression	"cout << ""\\tMachine: "" << inet_ntoa ( m_ptr -> machine_IP ) << endl"		1352597	0		<<			
ANR	1352617	Identifier	cout		1352597	0					
ANR	1352618	ShiftExpression	"""\\tMachine: "" << inet_ntoa ( m_ptr -> machine_IP ) << endl"		1352597	1		<<			
ANR	1352619	PrimaryExpression	"""\\tMachine: """		1352597	0					
ANR	1352620	ShiftExpression	inet_ntoa ( m_ptr -> machine_IP ) << endl		1352597	1		<<			
ANR	1352621	CallExpression	inet_ntoa ( m_ptr -> machine_IP )		1352597	0					
ANR	1352622	Callee	inet_ntoa		1352597	0					
ANR	1352623	Identifier	inet_ntoa		1352597	0					
ANR	1352624	ArgumentList	m_ptr -> machine_IP		1352597	1					
ANR	1352625	Argument	m_ptr -> machine_IP		1352597	0					
ANR	1352626	PtrMemberAccess	m_ptr -> machine_IP		1352597	0					
ANR	1352627	Identifier	m_ptr		1352597	0					
ANR	1352628	Identifier	machine_IP		1352597	1					
ANR	1352629	Identifier	endl		1352597	1					
ANR	1352630	ExpressionStatement	OIDump ( m_ptr -> owner_root )	595:6:15620:15645	1352597	2	True				
ANR	1352631	CallExpression	OIDump ( m_ptr -> owner_root )		1352597	0					
ANR	1352632	Callee	OIDump		1352597	0					
ANR	1352633	Identifier	OIDump		1352597	0					
ANR	1352634	ArgumentList	m_ptr -> owner_root		1352597	1					
ANR	1352635	Argument	m_ptr -> owner_root		1352597	0					
ANR	1352636	PtrMemberAccess	m_ptr -> owner_root		1352597	0					
ANR	1352637	Identifier	m_ptr		1352597	0					
ANR	1352638	Identifier	owner_root		1352597	1					
ANR	1352639	ExpressionStatement	MIDump ( m_ptr -> right )	596:6:15653:15673	1352597	3	True				
ANR	1352640	CallExpression	MIDump ( m_ptr -> right )		1352597	0					
ANR	1352641	Callee	MIDump		1352597	0					
ANR	1352642	Identifier	MIDump		1352597	0					
ANR	1352643	ArgumentList	m_ptr -> right		1352597	1					
ANR	1352644	Argument	m_ptr -> right		1352597	0					
ANR	1352645	PtrMemberAccess	m_ptr -> right		1352597	0					
ANR	1352646	Identifier	m_ptr		1352597	0					
ANR	1352647	Identifier	right		1352597	1					
ANR	1352648	ReturnType	void		1352597	1					
ANR	1352649	Identifier	FileIndex :: MIDump		1352597	2					
ANR	1352650	ParameterList	machine_node * m_ptr		1352597	3					
ANR	1352651	Parameter	machine_node * m_ptr	589:23:15468:15486	1352597	0	True				
ANR	1352652	ParameterType	machine_node *		1352597	0					
ANR	1352653	Identifier	m_ptr		1352597	1					
ANR	1352654	CFGEntryNode	ENTRY		1352597		True				
ANR	1352655	CFGExitNode	EXIT		1352597		True				
ANR	1352656	Symbol	m_ptr		1352597						
ANR	1352657	Symbol	m_ptr -> right		1352597						
ANR	1352658	Symbol	NULL		1352597						
ANR	1352659	Symbol	m_ptr -> left		1352597						
ANR	1352660	Symbol	* m_ptr		1352597						
ANR	1352661	Symbol	m_ptr -> owner_root		1352597						
ANR	1352662	Symbol	m_ptr -> machine_IP		1352597						
ANR	1352663	Function	FileIndex :: IndexDump	601:0:15685:16117							
ANR	1352664	FunctionDef	FileIndex :: IndexDump ()		1352663	0					
ANR	1352665	CompoundStatement		602:0:15713:16117	1352663	0					
ANR	1352666	IdentifierDeclStatement	int count ;	603:2:15717:15726	1352663	0	True				
ANR	1352667	IdentifierDecl	count		1352663	0					
ANR	1352668	IdentifierDeclType	int		1352663	0					
ANR	1352669	Identifier	count		1352663	1					
ANR	1352670	ExpressionStatement	"MakeLine ( '=' , '-' )"	605:2:15731:15749	1352663	1	True				
ANR	1352671	CallExpression	"MakeLine ( '=' , '-' )"		1352663	0					
ANR	1352672	Callee	MakeLine		1352663	0					
ANR	1352673	Identifier	MakeLine		1352663	0					
ANR	1352674	ArgumentList	'='		1352663	1					
ANR	1352675	Argument	'='		1352663	0					
ANR	1352676	PrimaryExpression	'='		1352663	0					
ANR	1352677	Argument	'-'		1352663	1					
ANR	1352678	PrimaryExpression	'-'		1352663	0					
ANR	1352679	ExpressionStatement	"cout << ""Start of File Index Dump"" << endl"	606:2:15753:15795	1352663	2	True				
ANR	1352680	ShiftExpression	"cout << ""Start of File Index Dump"" << endl"		1352663	0		<<			
ANR	1352681	Identifier	cout		1352663	0					
ANR	1352682	ShiftExpression	"""Start of File Index Dump"" << endl"		1352663	1		<<			
ANR	1352683	PrimaryExpression	"""Start of File Index Dump"""		1352663	0					
ANR	1352684	Identifier	endl		1352663	1					
ANR	1352685	ExpressionStatement	"MakeLine ( '-' , '-' )"	607:2:15799:15817	1352663	3	True				
ANR	1352686	CallExpression	"MakeLine ( '-' , '-' )"		1352663	0					
ANR	1352687	Callee	MakeLine		1352663	0					
ANR	1352688	Identifier	MakeLine		1352663	0					
ANR	1352689	ArgumentList	'-'		1352663	1					
ANR	1352690	Argument	'-'		1352663	0					
ANR	1352691	PrimaryExpression	'-'		1352663	0					
ANR	1352692	Argument	'-'		1352663	1					
ANR	1352693	PrimaryExpression	'-'		1352663	0					
ANR	1352694	ForStatement	for ( count = 0 ; count < MAX_HASH_SIZE ; count ++ )		1352663	4					
ANR	1352695	ForInit	count = 0 ;	608:7:15826:15833	1352663	0	True				
ANR	1352696	AssignmentExpression	count = 0		1352663	0		=			
ANR	1352697	Identifier	count		1352663	0					
ANR	1352698	PrimaryExpression	0		1352663	1					
ANR	1352699	Condition	count < MAX_HASH_SIZE	608:16:15835:15853	1352663	1	True				
ANR	1352700	RelationalExpression	count < MAX_HASH_SIZE		1352663	0		<			
ANR	1352701	Identifier	count		1352663	0					
ANR	1352702	Identifier	MAX_HASH_SIZE		1352663	1					
ANR	1352703	PostIncDecOperationExpression	count ++	608:37:15856:15862	1352663	2	True				
ANR	1352704	Identifier	count		1352663	0					
ANR	1352705	IncDec	++		1352663	1					
ANR	1352706	IfStatement	if ( hash_table [ count ] != NULL )		1352663	3					
ANR	1352707	Condition	hash_table [ count ] != NULL	609:8:15873:15897	1352663	0	True				
ANR	1352708	EqualityExpression	hash_table [ count ] != NULL		1352663	0		!=			
ANR	1352709	ArrayIndexing	hash_table [ count ]		1352663	0					
ANR	1352710	Identifier	hash_table		1352663	0					
ANR	1352711	Identifier	count		1352663	1					
ANR	1352712	Identifier	NULL		1352663	1					
ANR	1352713	CompoundStatement		9:6:192:192	1352663	1					
ANR	1352714	ExpressionStatement	"cout << endl << ""*** Bucket #"" << count << "": ***"" << endl"	611:1:15909:15967	1352663	0	True				
ANR	1352715	ShiftExpression	"cout << endl << ""*** Bucket #"" << count << "": ***"" << endl"		1352663	0		<<			
ANR	1352716	Identifier	cout		1352663	0					
ANR	1352717	ShiftExpression	"endl << ""*** Bucket #"" << count << "": ***"" << endl"		1352663	1		<<			
ANR	1352718	Identifier	endl		1352663	0					
ANR	1352719	ShiftExpression	"""*** Bucket #"" << count << "": ***"" << endl"		1352663	1		<<			
ANR	1352720	PrimaryExpression	"""*** Bucket #"""		1352663	0					
ANR	1352721	ShiftExpression	"count << "": ***"" << endl"		1352663	1		<<			
ANR	1352722	Identifier	count		1352663	0					
ANR	1352723	ShiftExpression	""": ***"" << endl"		1352663	1		<<			
ANR	1352724	PrimaryExpression	""": ***"""		1352663	0					
ANR	1352725	Identifier	endl		1352663	1					
ANR	1352726	ExpressionStatement	MIDump ( hash_table [ count ] )	612:1:15970:15995	1352663	1	True				
ANR	1352727	CallExpression	MIDump ( hash_table [ count ] )		1352663	0					
ANR	1352728	Callee	MIDump		1352663	0					
ANR	1352729	Identifier	MIDump		1352663	0					
ANR	1352730	ArgumentList	hash_table [ count ]		1352663	1					
ANR	1352731	Argument	hash_table [ count ]		1352663	0					
ANR	1352732	ArrayIndexing	hash_table [ count ]		1352663	0					
ANR	1352733	Identifier	hash_table		1352663	0					
ANR	1352734	Identifier	count		1352663	1					
ANR	1352735	ExpressionStatement	"MakeLine ( '-' , '-' )"	614:2:16007:16025	1352663	5	True				
ANR	1352736	CallExpression	"MakeLine ( '-' , '-' )"		1352663	0					
ANR	1352737	Callee	MakeLine		1352663	0					
ANR	1352738	Identifier	MakeLine		1352663	0					
ANR	1352739	ArgumentList	'-'		1352663	1					
ANR	1352740	Argument	'-'		1352663	0					
ANR	1352741	PrimaryExpression	'-'		1352663	0					
ANR	1352742	Argument	'-'		1352663	1					
ANR	1352743	PrimaryExpression	'-'		1352663	0					
ANR	1352744	ExpressionStatement	"cout << ""End of File Index Dump"" << endl"	615:2:16029:16069	1352663	6	True				
ANR	1352745	ShiftExpression	"cout << ""End of File Index Dump"" << endl"		1352663	0		<<			
ANR	1352746	Identifier	cout		1352663	0					
ANR	1352747	ShiftExpression	"""End of File Index Dump"" << endl"		1352663	1		<<			
ANR	1352748	PrimaryExpression	"""End of File Index Dump"""		1352663	0					
ANR	1352749	Identifier	endl		1352663	1					
ANR	1352750	ExpressionStatement	"MakeLine ( '=' , '-' )"	616:2:16073:16091	1352663	7	True				
ANR	1352751	CallExpression	"MakeLine ( '=' , '-' )"		1352663	0					
ANR	1352752	Callee	MakeLine		1352663	0					
ANR	1352753	Identifier	MakeLine		1352663	0					
ANR	1352754	ArgumentList	'='		1352663	1					
ANR	1352755	Argument	'='		1352663	0					
ANR	1352756	PrimaryExpression	'='		1352663	0					
ANR	1352757	Argument	'-'		1352663	1					
ANR	1352758	PrimaryExpression	'-'		1352663	0					
ANR	1352759	ExpressionStatement	cout << endl << endl	617:2:16095:16115	1352663	8	True				
ANR	1352760	ShiftExpression	cout << endl << endl		1352663	0		<<			
ANR	1352761	Identifier	cout		1352663	0					
ANR	1352762	ShiftExpression	endl << endl		1352663	1		<<			
ANR	1352763	Identifier	endl		1352663	0					
ANR	1352764	Identifier	endl		1352663	1					
ANR	1352765	ReturnType	void		1352663	1					
ANR	1352766	Identifier	FileIndex :: IndexDump		1352663	2					
ANR	1352767	ParameterList			1352663	3					
ANR	1352768	CFGEntryNode	ENTRY		1352663		True				
ANR	1352769	CFGExitNode	EXIT		1352663		True				
ANR	1352770	Symbol	* count		1352663						
ANR	1352771	Symbol	hash_table		1352663						
ANR	1352772	Symbol	NULL		1352663						
ANR	1352773	Symbol	MAX_HASH_SIZE		1352663						
ANR	1352774	Symbol	count		1352663						
ANR	1352775	Symbol	* hash_table		1352663						
