command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3656966	File	data/converged/CVE-2011-4930_htcondor/src_condor_release_examples_io.c								
ANR	3656967	DeclStmt									
ANR	3656968	Decl							int	int [ 4096 ]	Data
ANR	3656969	DeclStmt									
ANR	3656970	Decl							void	"void ( int * data , unsigned len )"	init_data
ANR	3656971	DeclStmt									
ANR	3656972	Decl							void	"void ( int data [ ] , int fd , unsigned len )"	do_it
ANR	3656973	Function	main	43:0:1416:2031							
ANR	3656974	FunctionDef	"main (int argc , char * argv [ ])"		3656973	0					
ANR	3656975	CompoundStatement		44:0:1447:2031	3656973	0					
ANR	3656976	IdentifierDeclStatement	int fd ;	45:1:1450:1457	3656973	0	True				
ANR	3656977	IdentifierDecl	fd		3656973	0					
ANR	3656978	IdentifierDeclType	int		3656973	0					
ANR	3656979	Identifier	fd		3656973	1					
ANR	3656980	IdentifierDeclStatement	int i ;	46:1:1460:1466	3656973	1	True				
ANR	3656981	IdentifierDecl	i		3656973	0					
ANR	3656982	IdentifierDeclType	int		3656973	0					
ANR	3656983	Identifier	i		3656973	1					
ANR	3656984	IdentifierDeclStatement	int count ;	47:1:1469:1479	3656973	2	True				
ANR	3656985	IdentifierDecl	count		3656973	0					
ANR	3656986	IdentifierDeclType	int		3656973	0					
ANR	3656987	Identifier	count		3656973	1					
ANR	3656988	IfStatement	if ( argc != 2 )		3656973	3					
ANR	3656989	Condition	argc != 2	49:5:1487:1495	3656973	0	True				
ANR	3656990	EqualityExpression	argc != 2		3656973	0		!=			
ANR	3656991	Identifier	argc		3656973	0					
ANR	3656992	PrimaryExpression	2		3656973	1					
ANR	3656993	CompoundStatement		6:17:51:51	3656973	1					
ANR	3656994	ExpressionStatement	"fprintf ( stderr , ""Usage %s seconds\\n"" , argv [ 0 ] )"	50:2:1503:1551	3656973	0	True				
ANR	3656995	CallExpression	"fprintf ( stderr , ""Usage %s seconds\\n"" , argv [ 0 ] )"		3656973	0					
ANR	3656996	Callee	fprintf		3656973	0					
ANR	3656997	Identifier	fprintf		3656973	0					
ANR	3656998	ArgumentList	stderr		3656973	1					
ANR	3656999	Argument	stderr		3656973	0					
ANR	3657000	Identifier	stderr		3656973	0					
ANR	3657001	Argument	"""Usage %s seconds\\n"""		3656973	1					
ANR	3657002	PrimaryExpression	"""Usage %s seconds\\n"""		3656973	0					
ANR	3657003	Argument	argv [ 0 ]		3656973	2					
ANR	3657004	ArrayIndexing	argv [ 0 ]		3656973	0					
ANR	3657005	Identifier	argv		3656973	0					
ANR	3657006	PrimaryExpression	0		3656973	1					
ANR	3657007	ExpressionStatement	exit ( 1 )	51:2:1555:1564	3656973	1	True				
ANR	3657008	CallExpression	exit ( 1 )		3656973	0					
ANR	3657009	Callee	exit		3656973	0					
ANR	3657010	Identifier	exit		3656973	0					
ANR	3657011	ArgumentList	1		3656973	1					
ANR	3657012	Argument	1		3656973	0					
ANR	3657013	PrimaryExpression	1		3656973	0					
ANR	3657014	ExpressionStatement	count = atoi ( argv [ 1 ] )	54:1:1571:1594	3656973	4	True				
ANR	3657015	AssignmentExpression	count = atoi ( argv [ 1 ] )		3656973	0		=			
ANR	3657016	Identifier	count		3656973	0					
ANR	3657017	CallExpression	atoi ( argv [ 1 ] )		3656973	1					
ANR	3657018	Callee	atoi		3656973	0					
ANR	3657019	Identifier	atoi		3656973	0					
ANR	3657020	ArgumentList	argv [ 1 ]		3656973	1					
ANR	3657021	Argument	argv [ 1 ]		3656973	0					
ANR	3657022	ArrayIndexing	argv [ 1 ]		3656973	0					
ANR	3657023	Identifier	argv		3656973	0					
ANR	3657024	PrimaryExpression	1		3656973	1					
ANR	3657025	IfStatement	if ( count <= 0 )		3656973	5					
ANR	3657026	Condition	count <= 0	55:5:1601:1610	3656973	0	True				
ANR	3657027	RelationalExpression	count <= 0		3656973	0		<=			
ANR	3657028	Identifier	count		3656973	0					
ANR	3657029	PrimaryExpression	0		3656973	1					
ANR	3657030	CompoundStatement		12:18:166:166	3656973	1					
ANR	3657031	ExpressionStatement	"fprintf ( stderr , ""Seconds must be positive\\n"" )"	56:2:1618:1665	3656973	0	True				
ANR	3657032	CallExpression	"fprintf ( stderr , ""Seconds must be positive\\n"" )"		3656973	0					
ANR	3657033	Callee	fprintf		3656973	0					
ANR	3657034	Identifier	fprintf		3656973	0					
ANR	3657035	ArgumentList	stderr		3656973	1					
ANR	3657036	Argument	stderr		3656973	0					
ANR	3657037	Identifier	stderr		3656973	0					
ANR	3657038	Argument	"""Seconds must be positive\\n"""		3656973	1					
ANR	3657039	PrimaryExpression	"""Seconds must be positive\\n"""		3656973	0					
ANR	3657040	ExpressionStatement	exit ( 1 )	57:2:1669:1678	3656973	1	True				
ANR	3657041	CallExpression	exit ( 1 )		3656973	0					
ANR	3657042	Callee	exit		3656973	0					
ANR	3657043	Identifier	exit		3656973	0					
ANR	3657044	ArgumentList	1		3656973	1					
ANR	3657045	Argument	1		3656973	0					
ANR	3657046	PrimaryExpression	1		3656973	0					
ANR	3657047	IfStatement	"if ( ( fd = open ( ""tmp"" , O_CREAT | O_TRUNC | O_RDWR , 0664 ) ) < 0 )"		3656973	6					
ANR	3657048	Condition	"( fd = open ( ""tmp"" , O_CREAT | O_TRUNC | O_RDWR , 0664 ) ) < 0"	60:5:1689:1736	3656973	0	True				
ANR	3657049	RelationalExpression	"( fd = open ( ""tmp"" , O_CREAT | O_TRUNC | O_RDWR , 0664 ) ) < 0"		3656973	0		<			
ANR	3657050	AssignmentExpression	"fd = open ( ""tmp"" , O_CREAT | O_TRUNC | O_RDWR , 0664 )"		3656973	0		=			
ANR	3657051	Identifier	fd		3656973	0					
ANR	3657052	CallExpression	"open ( ""tmp"" , O_CREAT | O_TRUNC | O_RDWR , 0664 )"		3656973	1					
ANR	3657053	Callee	open		3656973	0					
ANR	3657054	Identifier	open		3656973	0					
ANR	3657055	ArgumentList	"""tmp"""		3656973	1					
ANR	3657056	Argument	"""tmp"""		3656973	0					
ANR	3657057	PrimaryExpression	"""tmp"""		3656973	0					
ANR	3657058	Argument	O_CREAT | O_TRUNC | O_RDWR		3656973	1					
ANR	3657059	InclusiveOrExpression	O_CREAT | O_TRUNC | O_RDWR		3656973	0		|			
ANR	3657060	Identifier	O_CREAT		3656973	0					
ANR	3657061	InclusiveOrExpression	O_TRUNC | O_RDWR		3656973	1		|			
ANR	3657062	Identifier	O_TRUNC		3656973	0					
ANR	3657063	Identifier	O_RDWR		3656973	1					
ANR	3657064	Argument	0664		3656973	2					
ANR	3657065	PrimaryExpression	0664		3656973	0					
ANR	3657066	PrimaryExpression	0		3656973	1					
ANR	3657067	CompoundStatement		17:56:292:292	3656973	1					
ANR	3657068	ExpressionStatement	"perror ( ""tmp"" )"	61:2:1744:1759	3656973	0	True				
ANR	3657069	CallExpression	"perror ( ""tmp"" )"		3656973	0					
ANR	3657070	Callee	perror		3656973	0					
ANR	3657071	Identifier	perror		3656973	0					
ANR	3657072	ArgumentList	"""tmp"""		3656973	1					
ANR	3657073	Argument	"""tmp"""		3656973	0					
ANR	3657074	PrimaryExpression	"""tmp"""		3656973	0					
ANR	3657075	ExpressionStatement	exit ( 1 )	62:2:1763:1772	3656973	1	True				
ANR	3657076	CallExpression	exit ( 1 )		3656973	0					
ANR	3657077	Callee	exit		3656973	0					
ANR	3657078	Identifier	exit		3656973	0					
ANR	3657079	ArgumentList	1		3656973	1					
ANR	3657080	Argument	1		3656973	0					
ANR	3657081	PrimaryExpression	1		3656973	0					
ANR	3657082	ExpressionStatement	"init_data ( Data , sizeof ( Data ) )"	65:1:1779:1810	3656973	7	True				
ANR	3657083	CallExpression	"init_data ( Data , sizeof ( Data ) )"		3656973	0					
ANR	3657084	Callee	init_data		3656973	0					
ANR	3657085	Identifier	init_data		3656973	0					
ANR	3657086	ArgumentList	Data		3656973	1					
ANR	3657087	Argument	Data		3656973	0					
ANR	3657088	Identifier	Data		3656973	0					
ANR	3657089	Argument	sizeof ( Data )		3656973	1					
ANR	3657090	SizeofExpression	sizeof ( Data )		3656973	0					
ANR	3657091	Sizeof	sizeof		3656973	0					
ANR	3657092	SizeofOperand	Data		3656973	1					
ANR	3657093	ForStatement	for ( i = 0 ; i < count ; i ++ )		3656973	8					
ANR	3657094	ForInit	i = 0 ;	67:6:1819:1822	3656973	0	True				
ANR	3657095	AssignmentExpression	i = 0		3656973	0		=			
ANR	3657096	Identifier	i		3656973	0					
ANR	3657097	PrimaryExpression	0		3656973	1					
ANR	3657098	Condition	i < count	67:11:1824:1832	3656973	1	True				
ANR	3657099	RelationalExpression	i < count		3656973	0		<			
ANR	3657100	Identifier	i		3656973	0					
ANR	3657101	Identifier	count		3656973	1					
ANR	3657102	PostIncDecOperationExpression	i ++	67:22:1835:1837	3656973	2	True				
ANR	3657103	Identifier	i		3656973	0					
ANR	3657104	IncDec	++		3656973	1					
ANR	3657105	CompoundStatement		24:28:393:393	3656973	3					
ANR	3657106	ExpressionStatement	"do_it ( Data , fd , sizeof ( Data ) )"	68:2:1845:1876	3656973	0	True				
ANR	3657107	CallExpression	"do_it ( Data , fd , sizeof ( Data ) )"		3656973	0					
ANR	3657108	Callee	do_it		3656973	0					
ANR	3657109	Identifier	do_it		3656973	0					
ANR	3657110	ArgumentList	Data		3656973	1					
ANR	3657111	Argument	Data		3656973	0					
ANR	3657112	Identifier	Data		3656973	0					
ANR	3657113	Argument	fd		3656973	1					
ANR	3657114	Identifier	fd		3656973	0					
ANR	3657115	Argument	sizeof ( Data )		3656973	2					
ANR	3657116	SizeofExpression	sizeof ( Data )		3656973	0					
ANR	3657117	Sizeof	sizeof		3656973	0					
ANR	3657118	SizeofOperand	Data		3656973	1					
ANR	3657119	ExpressionStatement	"printf ( ""%d "" , i )"	69:2:1880:1898	3656973	1	True				
ANR	3657120	CallExpression	"printf ( ""%d "" , i )"		3656973	0					
ANR	3657121	Callee	printf		3656973	0					
ANR	3657122	Identifier	printf		3656973	0					
ANR	3657123	ArgumentList	"""%d """		3656973	1					
ANR	3657124	Argument	"""%d """		3656973	0					
ANR	3657125	PrimaryExpression	"""%d """		3656973	0					
ANR	3657126	Argument	i		3656973	1					
ANR	3657127	Identifier	i		3656973	0					
ANR	3657128	ExpressionStatement	fflush ( stdout )	70:2:1902:1918	3656973	2	True				
ANR	3657129	CallExpression	fflush ( stdout )		3656973	0					
ANR	3657130	Callee	fflush		3656973	0					
ANR	3657131	Identifier	fflush		3656973	0					
ANR	3657132	ArgumentList	stdout		3656973	1					
ANR	3657133	Argument	stdout		3656973	0					
ANR	3657134	Identifier	stdout		3656973	0					
ANR	3657135	ExpressionStatement	"printf ( ""\\nNormal End Of Job\\n"" )"	72:1:1924:1957	3656973	9	True				
ANR	3657136	CallExpression	"printf ( ""\\nNormal End Of Job\\n"" )"		3656973	0					
ANR	3657137	Callee	printf		3656973	0					
ANR	3657138	Identifier	printf		3656973	0					
ANR	3657139	ArgumentList	"""\\nNormal End Of Job\\n"""		3656973	1					
ANR	3657140	Argument	"""\\nNormal End Of Job\\n"""		3656973	0					
ANR	3657141	PrimaryExpression	"""\\nNormal End Of Job\\n"""		3656973	0					
ANR	3657142	ExpressionStatement	"printf ( ""Be sure the job checkpointed at least once.\\n"" )"	73:1:1960:2017	3656973	10	True				
ANR	3657143	CallExpression	"printf ( ""Be sure the job checkpointed at least once.\\n"" )"		3656973	0					
ANR	3657144	Callee	printf		3656973	0					
ANR	3657145	Identifier	printf		3656973	0					
ANR	3657146	ArgumentList	"""Be sure the job checkpointed at least once.\\n"""		3656973	1					
ANR	3657147	Argument	"""Be sure the job checkpointed at least once.\\n"""		3656973	0					
ANR	3657148	PrimaryExpression	"""Be sure the job checkpointed at least once.\\n"""		3656973	0					
ANR	3657149	ExpressionStatement	exit ( 0 )	74:1:2020:2029	3656973	11	True				
ANR	3657150	CallExpression	exit ( 0 )		3656973	0					
ANR	3657151	Callee	exit		3656973	0					
ANR	3657152	Identifier	exit		3656973	0					
ANR	3657153	ArgumentList	0		3656973	1					
ANR	3657154	Argument	0		3656973	0					
ANR	3657155	PrimaryExpression	0		3656973	0					
ANR	3657156	Identifier	main		3656973	1					
ANR	3657157	ParameterList	"int argc , char * argv [ ]"		3656973	2					
ANR	3657158	Parameter	int argc	43:6:1422:1429	3656973	0	True				
ANR	3657159	ParameterType	int		3656973	0					
ANR	3657160	Identifier	argc		3656973	1					
ANR	3657161	Parameter	char * argv [ ]	43:16:1432:1443	3656973	1	True				
ANR	3657162	ParameterType	char * [ ]		3656973	0					
ANR	3657163	Identifier	argv		3656973	1					
ANR	3657164	CFGEntryNode	ENTRY		3656973		True				
ANR	3657165	CFGExitNode	EXIT		3656973		True				
ANR	3657166	Symbol	argc		3656973						
ANR	3657167	Symbol	atoi		3656973						
ANR	3657168	Symbol	stdout		3656973						
ANR	3657169	Symbol	O_CREAT		3656973						
ANR	3657170	Symbol	count		3656973						
ANR	3657171	Symbol	i		3656973						
ANR	3657172	Symbol	* argv		3656973						
ANR	3657173	Symbol	Data		3656973						
ANR	3657174	Symbol	stderr		3656973						
ANR	3657175	Symbol	argv		3656973						
ANR	3657176	Symbol	O_RDWR		3656973						
ANR	3657177	Symbol	O_TRUNC		3656973						
ANR	3657178	Symbol	fd		3656973						
ANR	3657179	Symbol	open		3656973						
ANR	3657180	Function	init_data	77:0:2034:2164							
ANR	3657181	FunctionDef	"init_data (int data [ ] , unsigned len)"		3657180	0					
ANR	3657182	CompoundStatement		79:0:2077:2164	3657180	0					
ANR	3657183	IdentifierDeclStatement	"int i , lim ;"	80:1:2080:2091	3657180	0	True				
ANR	3657184	IdentifierDecl	i		3657180	0					
ANR	3657185	IdentifierDeclType	int		3657180	0					
ANR	3657186	Identifier	i		3657180	1					
ANR	3657187	IdentifierDecl	lim		3657180	1					
ANR	3657188	IdentifierDeclType	int		3657180	0					
ANR	3657189	Identifier	lim		3657180	1					
ANR	3657190	ExpressionStatement	lim = len / sizeof ( int )	82:1:2095:2118	3657180	1	True				
ANR	3657191	AssignmentExpression	lim = len / sizeof ( int )		3657180	0		=			
ANR	3657192	Identifier	lim		3657180	0					
ANR	3657193	MultiplicativeExpression	len / sizeof ( int )		3657180	1		/			
ANR	3657194	Identifier	len		3657180	0					
ANR	3657195	SizeofExpression	sizeof ( int )		3657180	1					
ANR	3657196	Sizeof	sizeof		3657180	0					
ANR	3657197	SizeofOperand	int		3657180	1					
ANR	3657198	ForStatement	for ( i = 0 ; i < lim ; i ++ )		3657180	2					
ANR	3657199	ForInit	i = 0 ;	83:6:2126:2129	3657180	0	True				
ANR	3657200	AssignmentExpression	i = 0		3657180	0		=			
ANR	3657201	Identifier	i		3657180	0					
ANR	3657202	PrimaryExpression	0		3657180	1					
ANR	3657203	Condition	i < lim	83:11:2131:2135	3657180	1	True				
ANR	3657204	RelationalExpression	i < lim		3657180	0		<			
ANR	3657205	Identifier	i		3657180	0					
ANR	3657206	Identifier	lim		3657180	1					
ANR	3657207	PostIncDecOperationExpression	i ++	83:18:2138:2140	3657180	2	True				
ANR	3657208	Identifier	i		3657180	0					
ANR	3657209	IncDec	++		3657180	1					
ANR	3657210	CompoundStatement		5:24:66:66	3657180	3					
ANR	3657211	ExpressionStatement	data [ i ] = i	84:2:2148:2159	3657180	0	True				
ANR	3657212	AssignmentExpression	data [ i ] = i		3657180	0		=			
ANR	3657213	ArrayIndexing	data [ i ]		3657180	0					
ANR	3657214	Identifier	data		3657180	0					
ANR	3657215	Identifier	i		3657180	1					
ANR	3657216	Identifier	i		3657180	1					
ANR	3657217	ReturnType	void		3657180	1					
ANR	3657218	Identifier	init_data		3657180	2					
ANR	3657219	ParameterList	"int data [ ] , unsigned len"		3657180	3					
ANR	3657220	Parameter	int data [ ]	78:11:2050:2059	3657180	0	True				
ANR	3657221	ParameterType	int [ ]		3657180	0					
ANR	3657222	Identifier	data		3657180	1					
ANR	3657223	Parameter	unsigned len	78:23:2062:2073	3657180	1	True				
ANR	3657224	ParameterType	unsigned		3657180	0					
ANR	3657225	Identifier	len		3657180	1					
ANR	3657226	CFGEntryNode	ENTRY		3657180		True				
ANR	3657227	CFGExitNode	EXIT		3657180		True				
ANR	3657228	Symbol	lim		3657180						
ANR	3657229	Symbol	* i		3657180						
ANR	3657230	Symbol	data		3657180						
ANR	3657231	Symbol	len		3657180						
ANR	3657232	Symbol	i		3657180						
ANR	3657233	Symbol	* data		3657180						
ANR	3657234	Function	do_it	88:0:2167:2670							
ANR	3657235	FunctionDef	"do_it (int data [ ] , int fd , unsigned len)"		3657234	0					
ANR	3657236	CompoundStatement		90:0:2214:2670	3657234	0					
ANR	3657237	IdentifierDeclStatement	char * buf = malloc ( len ) ;	91:1:2217:2240	3657234	0	True				
ANR	3657238	IdentifierDecl	* buf = malloc ( len )		3657234	0					
ANR	3657239	IdentifierDeclType	char *		3657234	0					
ANR	3657240	Identifier	buf		3657234	1					
ANR	3657241	AssignmentExpression	* buf = malloc ( len )		3657234	2		=			
ANR	3657242	Identifier	buf		3657234	0					
ANR	3657243	CallExpression	malloc ( len )		3657234	1					
ANR	3657244	Callee	malloc		3657234	0					
ANR	3657245	Identifier	malloc		3657234	0					
ANR	3657246	ArgumentList	len		3657234	1					
ANR	3657247	Argument	len		3657234	0					
ANR	3657248	Identifier	len		3657234	0					
ANR	3657249	IdentifierDeclStatement	int i ;	92:1:2243:2249	3657234	1	True				
ANR	3657250	IdentifierDecl	i		3657234	0					
ANR	3657251	IdentifierDeclType	int		3657234	0					
ANR	3657252	Identifier	i		3657234	1					
ANR	3657253	ForStatement	for ( i = 0 ; i < 100 ; i ++ )		3657234	2					
ANR	3657254	ForInit	i = 0 ;	94:6:2258:2261	3657234	0	True				
ANR	3657255	AssignmentExpression	i = 0		3657234	0		=			
ANR	3657256	Identifier	i		3657234	0					
ANR	3657257	PrimaryExpression	0		3657234	1					
ANR	3657258	Condition	i < 100	94:11:2263:2267	3657234	1	True				
ANR	3657259	RelationalExpression	i < 100		3657234	0		<			
ANR	3657260	Identifier	i		3657234	0					
ANR	3657261	PrimaryExpression	100		3657234	1					
ANR	3657262	PostIncDecOperationExpression	i ++	94:18:2270:2272	3657234	2	True				
ANR	3657263	Identifier	i		3657234	0					
ANR	3657264	IncDec	++		3657234	1					
ANR	3657265	CompoundStatement		5:24:61:61	3657234	3					
ANR	3657266	IfStatement	"if ( lseek ( fd , 0 , 0 ) < 0 )"		3657234	0					
ANR	3657267	Condition	"lseek ( fd , 0 , 0 ) < 0"	95:6:2284:2300	3657234	0	True				
ANR	3657268	RelationalExpression	"lseek ( fd , 0 , 0 ) < 0"		3657234	0		<			
ANR	3657269	CallExpression	"lseek ( fd , 0 , 0 )"		3657234	0					
ANR	3657270	Callee	lseek		3657234	0					
ANR	3657271	Identifier	lseek		3657234	0					
ANR	3657272	ArgumentList	fd		3657234	1					
ANR	3657273	Argument	fd		3657234	0					
ANR	3657274	Identifier	fd		3657234	0					
ANR	3657275	Argument	0		3657234	1					
ANR	3657276	PrimaryExpression	0		3657234	0					
ANR	3657277	Argument	0		3657234	2					
ANR	3657278	PrimaryExpression	0		3657234	0					
ANR	3657279	PrimaryExpression	0		3657234	1					
ANR	3657280	CompoundStatement		6:26:89:89	3657234	1					
ANR	3657281	ExpressionStatement	"perror ( ""lseek"" )"	96:3:2309:2326	3657234	0	True				
ANR	3657282	CallExpression	"perror ( ""lseek"" )"		3657234	0					
ANR	3657283	Callee	perror		3657234	0					
ANR	3657284	Identifier	perror		3657234	0					
ANR	3657285	ArgumentList	"""lseek"""		3657234	1					
ANR	3657286	Argument	"""lseek"""		3657234	0					
ANR	3657287	PrimaryExpression	"""lseek"""		3657234	0					
ANR	3657288	ExpressionStatement	exit ( 1 )	97:3:2331:2340	3657234	1	True				
ANR	3657289	CallExpression	exit ( 1 )		3657234	0					
ANR	3657290	Callee	exit		3657234	0					
ANR	3657291	Identifier	exit		3657234	0					
ANR	3657292	ArgumentList	1		3657234	1					
ANR	3657293	Argument	1		3657234	0					
ANR	3657294	PrimaryExpression	1		3657234	0					
ANR	3657295	IfStatement	"if ( write ( fd , data , len ) < len )"		3657234	1					
ANR	3657296	Condition	"write ( fd , data , len ) < len"	99:6:2352:2375	3657234	0	True				
ANR	3657297	RelationalExpression	"write ( fd , data , len ) < len"		3657234	0		<			
ANR	3657298	CallExpression	"write ( fd , data , len )"		3657234	0					
ANR	3657299	Callee	write		3657234	0					
ANR	3657300	Identifier	write		3657234	0					
ANR	3657301	ArgumentList	fd		3657234	1					
ANR	3657302	Argument	fd		3657234	0					
ANR	3657303	Identifier	fd		3657234	0					
ANR	3657304	Argument	data		3657234	1					
ANR	3657305	Identifier	data		3657234	0					
ANR	3657306	Argument	len		3657234	2					
ANR	3657307	Identifier	len		3657234	0					
ANR	3657308	Identifier	len		3657234	1					
ANR	3657309	CompoundStatement		10:33:164:164	3657234	1					
ANR	3657310	ExpressionStatement	"perror ( ""write"" )"	100:3:2384:2401	3657234	0	True				
ANR	3657311	CallExpression	"perror ( ""write"" )"		3657234	0					
ANR	3657312	Callee	perror		3657234	0					
ANR	3657313	Identifier	perror		3657234	0					
ANR	3657314	ArgumentList	"""write"""		3657234	1					
ANR	3657315	Argument	"""write"""		3657234	0					
ANR	3657316	PrimaryExpression	"""write"""		3657234	0					
ANR	3657317	ExpressionStatement	exit ( 1 )	101:3:2406:2415	3657234	1	True				
ANR	3657318	CallExpression	exit ( 1 )		3657234	0					
ANR	3657319	Callee	exit		3657234	0					
ANR	3657320	Identifier	exit		3657234	0					
ANR	3657321	ArgumentList	1		3657234	1					
ANR	3657322	Argument	1		3657234	0					
ANR	3657323	PrimaryExpression	1		3657234	0					
ANR	3657324	IfStatement	"if ( lseek ( fd , 0 , 0 ) < 0 )"		3657234	2					
ANR	3657325	Condition	"lseek ( fd , 0 , 0 ) < 0"	103:6:2427:2443	3657234	0	True				
ANR	3657326	RelationalExpression	"lseek ( fd , 0 , 0 ) < 0"		3657234	0		<			
ANR	3657327	CallExpression	"lseek ( fd , 0 , 0 )"		3657234	0					
ANR	3657328	Callee	lseek		3657234	0					
ANR	3657329	Identifier	lseek		3657234	0					
ANR	3657330	ArgumentList	fd		3657234	1					
ANR	3657331	Argument	fd		3657234	0					
ANR	3657332	Identifier	fd		3657234	0					
ANR	3657333	Argument	0		3657234	1					
ANR	3657334	PrimaryExpression	0		3657234	0					
ANR	3657335	Argument	0		3657234	2					
ANR	3657336	PrimaryExpression	0		3657234	0					
ANR	3657337	PrimaryExpression	0		3657234	1					
ANR	3657338	CompoundStatement		14:26:232:232	3657234	1					
ANR	3657339	ExpressionStatement	"perror ( ""lseek"" )"	104:3:2452:2469	3657234	0	True				
ANR	3657340	CallExpression	"perror ( ""lseek"" )"		3657234	0					
ANR	3657341	Callee	perror		3657234	0					
ANR	3657342	Identifier	perror		3657234	0					
ANR	3657343	ArgumentList	"""lseek"""		3657234	1					
ANR	3657344	Argument	"""lseek"""		3657234	0					
ANR	3657345	PrimaryExpression	"""lseek"""		3657234	0					
ANR	3657346	ExpressionStatement	exit ( 1 )	105:3:2474:2483	3657234	1	True				
ANR	3657347	CallExpression	exit ( 1 )		3657234	0					
ANR	3657348	Callee	exit		3657234	0					
ANR	3657349	Identifier	exit		3657234	0					
ANR	3657350	ArgumentList	1		3657234	1					
ANR	3657351	Argument	1		3657234	0					
ANR	3657352	PrimaryExpression	1		3657234	0					
ANR	3657353	IfStatement	"if ( read ( fd , buf , len ) != len )"		3657234	3					
ANR	3657354	Condition	"read ( fd , buf , len ) != len"	107:6:2495:2517	3657234	0	True				
ANR	3657355	EqualityExpression	"read ( fd , buf , len ) != len"		3657234	0		!=			
ANR	3657356	CallExpression	"read ( fd , buf , len )"		3657234	0					
ANR	3657357	Callee	read		3657234	0					
ANR	3657358	Identifier	read		3657234	0					
ANR	3657359	ArgumentList	fd		3657234	1					
ANR	3657360	Argument	fd		3657234	0					
ANR	3657361	Identifier	fd		3657234	0					
ANR	3657362	Argument	buf		3657234	1					
ANR	3657363	Identifier	buf		3657234	0					
ANR	3657364	Argument	len		3657234	2					
ANR	3657365	Identifier	len		3657234	0					
ANR	3657366	Identifier	len		3657234	1					
ANR	3657367	CompoundStatement		18:32:306:306	3657234	1					
ANR	3657368	ExpressionStatement	"perror ( ""read"" )"	108:3:2526:2543	3657234	0	True				
ANR	3657369	CallExpression	"perror ( ""read"" )"		3657234	0					
ANR	3657370	Callee	perror		3657234	0					
ANR	3657371	Identifier	perror		3657234	0					
ANR	3657372	ArgumentList	"""read"""		3657234	1					
ANR	3657373	Argument	"""read"""		3657234	0					
ANR	3657374	PrimaryExpression	"""read"""		3657234	0					
ANR	3657375	ExpressionStatement	exit ( 1 )	109:3:2548:2557	3657234	1	True				
ANR	3657376	CallExpression	exit ( 1 )		3657234	0					
ANR	3657377	Callee	exit		3657234	0					
ANR	3657378	Identifier	exit		3657234	0					
ANR	3657379	ArgumentList	1		3657234	1					
ANR	3657380	Argument	1		3657234	0					
ANR	3657381	PrimaryExpression	1		3657234	0					
ANR	3657382	IfStatement	"if ( memcmp ( buf , data , len ) != MATCH )"		3657234	4					
ANR	3657383	Condition	"memcmp ( buf , data , len ) != MATCH"	111:6:2569:2597	3657234	0	True				
ANR	3657384	EqualityExpression	"memcmp ( buf , data , len ) != MATCH"		3657234	0		!=			
ANR	3657385	CallExpression	"memcmp ( buf , data , len )"		3657234	0					
ANR	3657386	Callee	memcmp		3657234	0					
ANR	3657387	Identifier	memcmp		3657234	0					
ANR	3657388	ArgumentList	buf		3657234	1					
ANR	3657389	Argument	buf		3657234	0					
ANR	3657390	Identifier	buf		3657234	0					
ANR	3657391	Argument	data		3657234	1					
ANR	3657392	Identifier	data		3657234	0					
ANR	3657393	Argument	len		3657234	2					
ANR	3657394	Identifier	len		3657234	0					
ANR	3657395	Identifier	MATCH		3657234	1					
ANR	3657396	CompoundStatement		22:38:386:386	3657234	1					
ANR	3657397	ExpressionStatement	"printf ( ""Data Mismatch\\n"" )"	112:3:2606:2633	3657234	0	True				
ANR	3657398	CallExpression	"printf ( ""Data Mismatch\\n"" )"		3657234	0					
ANR	3657399	Callee	printf		3657234	0					
ANR	3657400	Identifier	printf		3657234	0					
ANR	3657401	ArgumentList	"""Data Mismatch\\n"""		3657234	1					
ANR	3657402	Argument	"""Data Mismatch\\n"""		3657234	0					
ANR	3657403	PrimaryExpression	"""Data Mismatch\\n"""		3657234	0					
ANR	3657404	ExpressionStatement	exit ( 1 )	113:3:2638:2647	3657234	1	True				
ANR	3657405	CallExpression	exit ( 1 )		3657234	0					
ANR	3657406	Callee	exit		3657234	0					
ANR	3657407	Identifier	exit		3657234	0					
ANR	3657408	ArgumentList	1		3657234	1					
ANR	3657409	Argument	1		3657234	0					
ANR	3657410	PrimaryExpression	1		3657234	0					
ANR	3657411	ExpressionStatement	free ( buf )	116:1:2657:2668	3657234	3	True				
ANR	3657412	CallExpression	free ( buf )		3657234	0					
ANR	3657413	Callee	free		3657234	0					
ANR	3657414	Identifier	free		3657234	0					
ANR	3657415	ArgumentList	buf		3657234	1					
ANR	3657416	Argument	buf		3657234	0					
ANR	3657417	Identifier	buf		3657234	0					
ANR	3657418	ReturnType	void		3657234	1					
ANR	3657419	Identifier	do_it		3657234	2					
ANR	3657420	ParameterList	"int data [ ] , int fd , unsigned len"		3657234	3					
ANR	3657421	Parameter	int data [ ]	89:7:2179:2188	3657234	0	True				
ANR	3657422	ParameterType	int [ ]		3657234	0					
ANR	3657423	Identifier	data		3657234	1					
ANR	3657424	Parameter	int fd	89:19:2191:2196	3657234	1	True				
ANR	3657425	ParameterType	int		3657234	0					
ANR	3657426	Identifier	fd		3657234	1					
ANR	3657427	Parameter	unsigned len	89:27:2199:2210	3657234	2	True				
ANR	3657428	ParameterType	unsigned		3657234	0					
ANR	3657429	Identifier	len		3657234	1					
ANR	3657430	CFGEntryNode	ENTRY		3657234		True				
ANR	3657431	CFGExitNode	EXIT		3657234		True				
ANR	3657432	Symbol	malloc		3657234						
ANR	3657433	Symbol	buf		3657234						
ANR	3657434	Symbol	lseek		3657234						
ANR	3657435	Symbol	read		3657234						
ANR	3657436	Symbol	memcmp		3657234						
ANR	3657437	Symbol	data		3657234						
ANR	3657438	Symbol	len		3657234						
ANR	3657439	Symbol	i		3657234						
ANR	3657440	Symbol	write		3657234						
ANR	3657441	Symbol	fd		3657234						
ANR	3657442	Symbol	MATCH		3657234						
