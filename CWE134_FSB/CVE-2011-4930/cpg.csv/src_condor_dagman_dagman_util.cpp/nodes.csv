command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3129576	File	data/converged/CVE-2011-4930_htcondor/src_condor_dagman_dagman_util.cpp								
ANR	3129577	Function	util_popen	34:0:1231:1941							
ANR	3129578	FunctionDef	util_popen (ArgList & args)		3129577	0					
ANR	3129579	CompoundStatement		34:31:1262:1941	3129577	0					
ANR	3129580	IdentifierDeclStatement	MyString cmd ;	35:1:1265:1277	3129577	0	True				
ANR	3129581	IdentifierDecl	cmd		3129577	0					
ANR	3129582	IdentifierDeclType	MyString		3129577	0					
ANR	3129583	Identifier	cmd		3129577	1					
ANR	3129584	ExpressionStatement	args . GetArgsStringForDisplay ( & cmd )	36:1:1300:1336	3129577	1	True				
ANR	3129585	CallExpression	args . GetArgsStringForDisplay ( & cmd )		3129577	0					
ANR	3129586	Callee	args . GetArgsStringForDisplay		3129577	0					
ANR	3129587	MemberAccess	args . GetArgsStringForDisplay		3129577	0					
ANR	3129588	Identifier	args		3129577	0					
ANR	3129589	Identifier	GetArgsStringForDisplay		3129577	1					
ANR	3129590	ArgumentList	& cmd		3129577	1					
ANR	3129591	Argument	& cmd		3129577	0					
ANR	3129592	UnaryOperationExpression	& cmd		3129577	0					
ANR	3129593	UnaryOperator	&		3129577	0					
ANR	3129594	Identifier	cmd		3129577	1					
ANR	3129595	ExpressionStatement	"debug_printf ( DEBUG_VERBOSE , ""Running: %s\\n"" , cmd . Value ( ) )"	37:4:1342:1401	3129577	2	True				
ANR	3129596	CallExpression	"debug_printf ( DEBUG_VERBOSE , ""Running: %s\\n"" , cmd . Value ( ) )"		3129577	0					
ANR	3129597	Callee	debug_printf		3129577	0					
ANR	3129598	Identifier	debug_printf		3129577	0					
ANR	3129599	ArgumentList	DEBUG_VERBOSE		3129577	1					
ANR	3129600	Argument	DEBUG_VERBOSE		3129577	0					
ANR	3129601	Identifier	DEBUG_VERBOSE		3129577	0					
ANR	3129602	Argument	"""Running: %s\\n"""		3129577	1					
ANR	3129603	PrimaryExpression	"""Running: %s\\n"""		3129577	0					
ANR	3129604	Argument	cmd . Value ( )		3129577	2					
ANR	3129605	CallExpression	cmd . Value ( )		3129577	0					
ANR	3129606	Callee	cmd . Value		3129577	0					
ANR	3129607	MemberAccess	cmd . Value		3129577	0					
ANR	3129608	Identifier	cmd		3129577	0					
ANR	3129609	Identifier	Value		3129577	1					
ANR	3129610	ArgumentList			3129577	1					
ANR	3129611	IdentifierDeclStatement	"FILE * fp = my_popen ( args , ""r"" , TRUE ) ;"	39:1:1405:1443	3129577	3	True				
ANR	3129612	IdentifierDecl	"* fp = my_popen ( args , ""r"" , TRUE )"		3129577	0					
ANR	3129613	IdentifierDeclType	FILE *		3129577	0					
ANR	3129614	Identifier	fp		3129577	1					
ANR	3129615	AssignmentExpression	"* fp = my_popen ( args , ""r"" , TRUE )"		3129577	2		=			
ANR	3129616	Identifier	fp		3129577	0					
ANR	3129617	CallExpression	"my_popen ( args , ""r"" , TRUE )"		3129577	1					
ANR	3129618	Callee	my_popen		3129577	0					
ANR	3129619	Identifier	my_popen		3129577	0					
ANR	3129620	ArgumentList	args		3129577	1					
ANR	3129621	Argument	args		3129577	0					
ANR	3129622	Identifier	args		3129577	0					
ANR	3129623	Argument	"""r"""		3129577	1					
ANR	3129624	PrimaryExpression	"""r"""		3129577	0					
ANR	3129625	Argument	TRUE		3129577	2					
ANR	3129626	Identifier	TRUE		3129577	0					
ANR	3129627	IdentifierDeclStatement	int r = 0 ;	41:4:1450:1459	3129577	4	True				
ANR	3129628	IdentifierDecl	r = 0		3129577	0					
ANR	3129629	IdentifierDeclType	int		3129577	0					
ANR	3129630	Identifier	r		3129577	1					
ANR	3129631	AssignmentExpression	r = 0		3129577	2		=			
ANR	3129632	Identifier	r		3129577	0					
ANR	3129633	PrimaryExpression	0		3129577	1					
ANR	3129634	IfStatement	if ( fp == NULL || ( r = my_pclose ( fp ) & 0xff ) != 0 )		3129577	5					
ANR	3129635	Condition	fp == NULL || ( r = my_pclose ( fp ) & 0xff ) != 0	42:8:1469:1513	3129577	0	True				
ANR	3129636	OrExpression	fp == NULL || ( r = my_pclose ( fp ) & 0xff ) != 0		3129577	0		||			
ANR	3129637	EqualityExpression	fp == NULL		3129577	0		==			
ANR	3129638	Identifier	fp		3129577	0					
ANR	3129639	Identifier	NULL		3129577	1					
ANR	3129640	EqualityExpression	( r = my_pclose ( fp ) & 0xff ) != 0		3129577	1		!=			
ANR	3129641	AssignmentExpression	r = my_pclose ( fp ) & 0xff		3129577	0		=			
ANR	3129642	Identifier	r		3129577	0					
ANR	3129643	BitAndExpression	my_pclose ( fp ) & 0xff		3129577	1		&			
ANR	3129644	CallExpression	my_pclose ( fp )		3129577	0					
ANR	3129645	Callee	my_pclose		3129577	0					
ANR	3129646	Identifier	my_pclose		3129577	0					
ANR	3129647	ArgumentList	fp		3129577	1					
ANR	3129648	Argument	fp		3129577	0					
ANR	3129649	Identifier	fp		3129577	0					
ANR	3129650	PrimaryExpression	0xff		3129577	1					
ANR	3129651	PrimaryExpression	0		3129577	1					
ANR	3129652	CompoundStatement		9:55:253:253	3129577	1					
ANR	3129653	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""Warning: failure: %s\\n"" , cmd . Value ( ) )"	43:2:1520:1586	3129577	0	True				
ANR	3129654	CallExpression	"debug_printf ( DEBUG_QUIET , ""Warning: failure: %s\\n"" , cmd . Value ( ) )"		3129577	0					
ANR	3129655	Callee	debug_printf		3129577	0					
ANR	3129656	Identifier	debug_printf		3129577	0					
ANR	3129657	ArgumentList	DEBUG_QUIET		3129577	1					
ANR	3129658	Argument	DEBUG_QUIET		3129577	0					
ANR	3129659	Identifier	DEBUG_QUIET		3129577	0					
ANR	3129660	Argument	"""Warning: failure: %s\\n"""		3129577	1					
ANR	3129661	PrimaryExpression	"""Warning: failure: %s\\n"""		3129577	0					
ANR	3129662	Argument	cmd . Value ( )		3129577	2					
ANR	3129663	CallExpression	cmd . Value ( )		3129577	0					
ANR	3129664	Callee	cmd . Value		3129577	0					
ANR	3129665	MemberAccess	cmd . Value		3129577	0					
ANR	3129666	Identifier	cmd		3129577	0					
ANR	3129667	Identifier	Value		3129577	1					
ANR	3129668	ArgumentList			3129577	1					
ANR	3129669	IfStatement	if ( fp != NULL )		3129577	1					
ANR	3129670	Condition	fp != NULL	44:6:1594:1603	3129577	0	True				
ANR	3129671	EqualityExpression	fp != NULL		3129577	0		!=			
ANR	3129672	Identifier	fp		3129577	0					
ANR	3129673	Identifier	NULL		3129577	1					
ANR	3129674	CompoundStatement		11:19:344:344	3129577	1					
ANR	3129675	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""\\t(my_pclose() returned %d (errno %d, %s))\\n"" , r , errno , strerror ( errno ) )"	45:3:1612:1729	3129577	0	True				
ANR	3129676	CallExpression	"debug_printf ( DEBUG_QUIET , ""\\t(my_pclose() returned %d (errno %d, %s))\\n"" , r , errno , strerror ( errno ) )"		3129577	0					
ANR	3129677	Callee	debug_printf		3129577	0					
ANR	3129678	Identifier	debug_printf		3129577	0					
ANR	3129679	ArgumentList	DEBUG_QUIET		3129577	1					
ANR	3129680	Argument	DEBUG_QUIET		3129577	0					
ANR	3129681	Identifier	DEBUG_QUIET		3129577	0					
ANR	3129682	Argument	"""\\t(my_pclose() returned %d (errno %d, %s))\\n"""		3129577	1					
ANR	3129683	PrimaryExpression	"""\\t(my_pclose() returned %d (errno %d, %s))\\n"""		3129577	0					
ANR	3129684	Argument	r		3129577	2					
ANR	3129685	Identifier	r		3129577	0					
ANR	3129686	Argument	errno		3129577	3					
ANR	3129687	Identifier	errno		3129577	0					
ANR	3129688	Argument	strerror ( errno )		3129577	4					
ANR	3129689	CallExpression	strerror ( errno )		3129577	0					
ANR	3129690	Callee	strerror		3129577	0					
ANR	3129691	Identifier	strerror		3129577	0					
ANR	3129692	ArgumentList	errno		3129577	1					
ANR	3129693	Argument	errno		3129577	0					
ANR	3129694	Identifier	errno		3129577	0					
ANR	3129695	ElseStatement	else		3129577	0					
ANR	3129696	CompoundStatement		15:9:477:477	3129577	0					
ANR	3129697	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""\\t(my_popen() returned NULL (errno %d, %s))\\n"" , errno , strerror ( errno ) )"	49:3:1745:1860	3129577	0	True				
ANR	3129698	CallExpression	"debug_printf ( DEBUG_QUIET , ""\\t(my_popen() returned NULL (errno %d, %s))\\n"" , errno , strerror ( errno ) )"		3129577	0					
ANR	3129699	Callee	debug_printf		3129577	0					
ANR	3129700	Identifier	debug_printf		3129577	0					
ANR	3129701	ArgumentList	DEBUG_QUIET		3129577	1					
ANR	3129702	Argument	DEBUG_QUIET		3129577	0					
ANR	3129703	Identifier	DEBUG_QUIET		3129577	0					
ANR	3129704	Argument	"""\\t(my_popen() returned NULL (errno %d, %s))\\n"""		3129577	1					
ANR	3129705	PrimaryExpression	"""\\t(my_popen() returned NULL (errno %d, %s))\\n"""		3129577	0					
ANR	3129706	Argument	errno		3129577	2					
ANR	3129707	Identifier	errno		3129577	0					
ANR	3129708	Argument	strerror ( errno )		3129577	3					
ANR	3129709	CallExpression	strerror ( errno )		3129577	0					
ANR	3129710	Callee	strerror		3129577	0					
ANR	3129711	Identifier	strerror		3129577	0					
ANR	3129712	ArgumentList	errno		3129577	1					
ANR	3129713	Argument	errno		3129577	0					
ANR	3129714	Identifier	errno		3129577	0					
ANR	3129715	ExpressionStatement	r = - 1	52:3:1865:1871	3129577	1	True				
ANR	3129716	AssignmentExpression	r = - 1		3129577	0		=			
ANR	3129717	Identifier	r		3129577	0					
ANR	3129718	UnaryOperationExpression	- 1		3129577	1					
ANR	3129719	UnaryOperator	-		3129577	0					
ANR	3129720	PrimaryExpression	1		3129577	1					
ANR	3129721	ExpressionStatement	check_warning_strictness ( DAG_STRICT_1 )	54:2:1879:1919	3129577	2	True				
ANR	3129722	CallExpression	check_warning_strictness ( DAG_STRICT_1 )		3129577	0					
ANR	3129723	Callee	check_warning_strictness		3129577	0					
ANR	3129724	Identifier	check_warning_strictness		3129577	0					
ANR	3129725	ArgumentList	DAG_STRICT_1		3129577	1					
ANR	3129726	Argument	DAG_STRICT_1		3129577	0					
ANR	3129727	Identifier	DAG_STRICT_1		3129577	0					
ANR	3129728	ReturnStatement	return r ;	56:4:1931:1939	3129577	6	True				
ANR	3129729	Identifier	r		3129577	0					
ANR	3129730	ReturnType	int		3129577	1					
ANR	3129731	Identifier	util_popen		3129577	2					
ANR	3129732	ParameterList	ArgList & args		3129577	3					
ANR	3129733	Parameter	ArgList & args	34:16:1247:1259	3129577	0	True				
ANR	3129734	ParameterType	ArgList &		3129577	0					
ANR	3129735	Identifier	args		3129577	1					
ANR	3129736	CFGEntryNode	ENTRY		3129577		True				
ANR	3129737	CFGExitNode	EXIT		3129577		True				
ANR	3129738	Symbol	errno		3129577						
ANR	3129739	Symbol	cmd . Value		3129577						
ANR	3129740	Symbol	NULL		3129577						
ANR	3129741	Symbol	& cmd		3129577						
ANR	3129742	Symbol	TRUE		3129577						
ANR	3129743	Symbol	fp		3129577						
ANR	3129744	Symbol	my_popen		3129577						
ANR	3129745	Symbol	DEBUG_QUIET		3129577						
ANR	3129746	Symbol	args		3129577						
ANR	3129747	Symbol	strerror		3129577						
ANR	3129748	Symbol	r		3129577						
ANR	3129749	Symbol	DAG_STRICT_1		3129577						
ANR	3129750	Symbol	cmd		3129577						
ANR	3129751	Symbol	DEBUG_VERBOSE		3129577						
ANR	3129752	Symbol	my_pclose		3129577						
ANR	3129753	Function	util_create_lock_file	61:0:2025:4623							
ANR	3129754	FunctionDef	"util_create_lock_file (const char * lockFileName , bool abortDuplicates)"		3129753	0					
ANR	3129755	CompoundStatement		61:74:2099:4623	3129753	0					
ANR	3129756	IdentifierDeclStatement	int result = 0 ;	62:1:2102:2116	3129753	0	True				
ANR	3129757	IdentifierDecl	result = 0		3129753	0					
ANR	3129758	IdentifierDeclType	int		3129753	0					
ANR	3129759	Identifier	result		3129753	1					
ANR	3129760	AssignmentExpression	result = 0		3129753	2		=			
ANR	3129761	Identifier	result		3129753	0					
ANR	3129762	PrimaryExpression	0		3129753	1					
ANR	3129763	IdentifierDeclStatement	"FILE * fp = safe_fopen_wrapper_follow ( lockFileName , ""w"" ) ;"	64:1:2120:2177	3129753	1	True				
ANR	3129764	IdentifierDecl	"* fp = safe_fopen_wrapper_follow ( lockFileName , ""w"" )"		3129753	0					
ANR	3129765	IdentifierDeclType	FILE *		3129753	0					
ANR	3129766	Identifier	fp		3129753	1					
ANR	3129767	AssignmentExpression	"* fp = safe_fopen_wrapper_follow ( lockFileName , ""w"" )"		3129753	2		=			
ANR	3129768	Identifier	fp		3129753	0					
ANR	3129769	CallExpression	"safe_fopen_wrapper_follow ( lockFileName , ""w"" )"		3129753	1					
ANR	3129770	Callee	safe_fopen_wrapper_follow		3129753	0					
ANR	3129771	Identifier	safe_fopen_wrapper_follow		3129753	0					
ANR	3129772	ArgumentList	lockFileName		3129753	1					
ANR	3129773	Argument	lockFileName		3129753	0					
ANR	3129774	Identifier	lockFileName		3129753	0					
ANR	3129775	Argument	"""w"""		3129753	1					
ANR	3129776	PrimaryExpression	"""w"""		3129753	0					
ANR	3129777	IfStatement	if ( fp == NULL )		3129753	2					
ANR	3129778	Condition	fp == NULL	65:6:2185:2194	3129753	0	True				
ANR	3129779	EqualityExpression	fp == NULL		3129753	0		==			
ANR	3129780	Identifier	fp		3129753	0					
ANR	3129781	Identifier	NULL		3129753	1					
ANR	3129782	CompoundStatement		5:19:98:98	3129753	1					
ANR	3129783	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""ERROR: could not open lock file %s for writing.\\n"" , lockFileName )"	66:2:2202:2305	3129753	0	True				
ANR	3129784	CallExpression	"debug_printf ( DEBUG_QUIET , ""ERROR: could not open lock file %s for writing.\\n"" , lockFileName )"		3129753	0					
ANR	3129785	Callee	debug_printf		3129753	0					
ANR	3129786	Identifier	debug_printf		3129753	0					
ANR	3129787	ArgumentList	DEBUG_QUIET		3129753	1					
ANR	3129788	Argument	DEBUG_QUIET		3129753	0					
ANR	3129789	Identifier	DEBUG_QUIET		3129753	0					
ANR	3129790	Argument	"""ERROR: could not open lock file %s for writing.\\n"""		3129753	1					
ANR	3129791	PrimaryExpression	"""ERROR: could not open lock file %s for writing.\\n"""		3129753	0					
ANR	3129792	Argument	lockFileName		3129753	2					
ANR	3129793	Identifier	lockFileName		3129753	0					
ANR	3129794	ExpressionStatement	result = - 1	69:2:2309:2320	3129753	1	True				
ANR	3129795	AssignmentExpression	result = - 1		3129753	0		=			
ANR	3129796	Identifier	result		3129753	0					
ANR	3129797	UnaryOperationExpression	- 1		3129753	1					
ANR	3129798	UnaryOperator	-		3129753	0					
ANR	3129799	PrimaryExpression	1		3129753	1					
ANR	3129800	IdentifierDeclStatement	ProcessId * procId = NULL ;	75:1:2371:2395	3129753	3	True				
ANR	3129801	IdentifierDecl	* procId = NULL		3129753	0					
ANR	3129802	IdentifierDeclType	ProcessId *		3129753	0					
ANR	3129803	Identifier	procId		3129753	1					
ANR	3129804	AssignmentExpression	* procId = NULL		3129753	2		=			
ANR	3129805	Identifier	NULL		3129753	0					
ANR	3129806	Identifier	NULL		3129753	1					
ANR	3129807	IfStatement	if ( result == 0 && abortDuplicates )		3129753	4					
ANR	3129808	Condition	result == 0 && abortDuplicates	76:6:2403:2432	3129753	0	True				
ANR	3129809	AndExpression	result == 0 && abortDuplicates		3129753	0		&&			
ANR	3129810	EqualityExpression	result == 0		3129753	0		==			
ANR	3129811	Identifier	result		3129753	0					
ANR	3129812	PrimaryExpression	0		3129753	1					
ANR	3129813	Identifier	abortDuplicates		3129753	1					
ANR	3129814	CompoundStatement		17:2:340:350	3129753	1					
ANR	3129815	IdentifierDeclStatement	int status ;	77:2:2440:2450	3129753	0	True				
ANR	3129816	IdentifierDecl	status		3129753	0					
ANR	3129817	IdentifierDeclType	int		3129753	0					
ANR	3129818	Identifier	status		3129753	1					
ANR	3129819	IfStatement	"if ( ProcAPI :: createProcessId ( daemonCore -> getpid ( ) , procId , status ) != PROCAPI_SUCCESS )"		3129753	1					
ANR	3129820	Condition	"ProcAPI :: createProcessId ( daemonCore -> getpid ( ) , procId , status ) != PROCAPI_SUCCESS"	78:7:2459:2546	3129753	0	True				
ANR	3129821	EqualityExpression	"ProcAPI :: createProcessId ( daemonCore -> getpid ( ) , procId , status ) != PROCAPI_SUCCESS"		3129753	0		!=			
ANR	3129822	CallExpression	"ProcAPI :: createProcessId ( daemonCore -> getpid ( ) , procId , status )"		3129753	0					
ANR	3129823	Callee	ProcAPI :: createProcessId		3129753	0					
ANR	3129824	Identifier	ProcAPI :: createProcessId		3129753	0					
ANR	3129825	ArgumentList	daemonCore -> getpid ( )		3129753	1					
ANR	3129826	Argument	daemonCore -> getpid ( )		3129753	0					
ANR	3129827	CallExpression	daemonCore -> getpid ( )		3129753	0					
ANR	3129828	Callee	daemonCore -> getpid		3129753	0					
ANR	3129829	PtrMemberAccess	daemonCore -> getpid		3129753	0					
ANR	3129830	Identifier	daemonCore		3129753	0					
ANR	3129831	Identifier	getpid		3129753	1					
ANR	3129832	ArgumentList			3129753	1					
ANR	3129833	Argument	procId		3129753	1					
ANR	3129834	Identifier	procId		3129753	0					
ANR	3129835	Argument	status		3129753	2					
ANR	3129836	Identifier	status		3129753	0					
ANR	3129837	Identifier	PROCAPI_SUCCESS		3129753	1					
ANR	3129838	CompoundStatement		19:35:450:450	3129753	1					
ANR	3129839	Statement	debug_printf	80:3:2555:2566	3129753	0	True				
ANR	3129840	Statement	(	80:15:2567:2567	3129753	1	True				
ANR	3129841	Statement	DEBUG_QUIET	80:17:2569:2579	3129753	2	True				
ANR	3129842	Statement	","	80:28:2580:2580	3129753	3	True				
ANR	3129843	Statement	"""ERROR: ProcAPI::createProcessId() """	80:30:2582:2617	3129753	4	True				
ANR	3129844	Statement	"""failed; %d\\n"""	81:6:2625:2638	3129753	5	True				
ANR	3129845	Statement	","	81:20:2639:2639	3129753	6	True				
ANR	3129846	Statement	status	81:22:2641:2646	3129753	7	True				
ANR	3129847	Statement	)	81:29:2648:2648	3129753	8	True				
ANR	3129848	ExpressionStatement		81:30:2649:2649	3129753	9	True				
ANR	3129849	ExpressionStatement	result = - 1	82:3:2654:2665	3129753	10	True				
ANR	3129850	AssignmentExpression	result = - 1		3129753	0		=			
ANR	3129851	Identifier	result		3129753	0					
ANR	3129852	UnaryOperationExpression	- 1		3129753	1					
ANR	3129853	UnaryOperator	-		3129753	0					
ANR	3129854	PrimaryExpression	1		3129753	1					
ANR	3129855	IfStatement	if ( result == 0 && abortDuplicates )		3129753	5					
ANR	3129856	Condition	result == 0 && abortDuplicates	89:6:2728:2757	3129753	0	True				
ANR	3129857	AndExpression	result == 0 && abortDuplicates		3129753	0		&&			
ANR	3129858	EqualityExpression	result == 0		3129753	0		==			
ANR	3129859	Identifier	result		3129753	0					
ANR	3129860	PrimaryExpression	0		3129753	1					
ANR	3129861	Identifier	abortDuplicates		3129753	1					
ANR	3129862	CompoundStatement		29:39:661:661	3129753	1					
ANR	3129863	IfStatement	if ( procId -> write ( fp ) != ProcessId :: SUCCESS )		3129753	0					
ANR	3129864	Condition	procId -> write ( fp ) != ProcessId :: SUCCESS	90:7:2770:2810	3129753	0	True				
ANR	3129865	EqualityExpression	procId -> write ( fp ) != ProcessId :: SUCCESS		3129753	0		!=			
ANR	3129866	CallExpression	procId -> write ( fp )		3129753	0					
ANR	3129867	Callee	procId -> write		3129753	0					
ANR	3129868	PtrMemberAccess	procId -> write		3129753	0					
ANR	3129869	Identifier	procId		3129753	0					
ANR	3129870	Identifier	write		3129753	1					
ANR	3129871	ArgumentList	fp		3129753	1					
ANR	3129872	Argument	fp		3129753	0					
ANR	3129873	Identifier	fp		3129753	0					
ANR	3129874	Identifier	ProcessId :: SUCCESS		3129753	1					
ANR	3129875	CompoundStatement		30:51:714:714	3129753	1					
ANR	3129876	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""ERROR: ProcessId::write() failed\\n"" )"	91:3:2819:2883	3129753	0	True				
ANR	3129877	CallExpression	"debug_printf ( DEBUG_QUIET , ""ERROR: ProcessId::write() failed\\n"" )"		3129753	0					
ANR	3129878	Callee	debug_printf		3129753	0					
ANR	3129879	Identifier	debug_printf		3129753	0					
ANR	3129880	ArgumentList	DEBUG_QUIET		3129753	1					
ANR	3129881	Argument	DEBUG_QUIET		3129753	0					
ANR	3129882	Identifier	DEBUG_QUIET		3129753	0					
ANR	3129883	Argument	"""ERROR: ProcessId::write() failed\\n"""		3129753	1					
ANR	3129884	PrimaryExpression	"""ERROR: ProcessId::write() failed\\n"""		3129753	0					
ANR	3129885	ExpressionStatement	result = - 1	92:3:2888:2899	3129753	1	True				
ANR	3129886	AssignmentExpression	result = - 1		3129753	0		=			
ANR	3129887	Identifier	result		3129753	0					
ANR	3129888	UnaryOperationExpression	- 1		3129753	1					
ANR	3129889	UnaryOperator	-		3129753	0					
ANR	3129890	PrimaryExpression	1		3129753	1					
ANR	3129891	IfStatement	if ( result == 0 && abortDuplicates )		3129753	6					
ANR	3129892	Condition	result == 0 && abortDuplicates	99:6:2982:3011	3129753	0	True				
ANR	3129893	AndExpression	result == 0 && abortDuplicates		3129753	0		&&			
ANR	3129894	EqualityExpression	result == 0		3129753	0		==			
ANR	3129895	Identifier	result		3129753	0					
ANR	3129896	PrimaryExpression	0		3129753	1					
ANR	3129897	Identifier	abortDuplicates		3129753	1					
ANR	3129898	CompoundStatement		41:2:981:1022	3129753	1					
ANR	3129899	IdentifierDeclStatement	const int maxSleepTime = 60 ;	100:2:3019:3046	3129753	0	True				
ANR	3129900	IdentifierDecl	maxSleepTime = 60		3129753	0					
ANR	3129901	IdentifierDeclType	const int		3129753	0					
ANR	3129902	Identifier	maxSleepTime		3129753	1					
ANR	3129903	AssignmentExpression	maxSleepTime = 60		3129753	2		=			
ANR	3129904	Identifier	maxSleepTime		3129753	0					
ANR	3129905	PrimaryExpression	60		3129753	1					
ANR	3129906	IdentifierDeclStatement	int sleepTime = procId -> computeWaitTime ( ) ;	101:2:3081:3122	3129753	1	True				
ANR	3129907	IdentifierDecl	sleepTime = procId -> computeWaitTime ( )		3129753	0					
ANR	3129908	IdentifierDeclType	int		3129753	0					
ANR	3129909	Identifier	sleepTime		3129753	1					
ANR	3129910	AssignmentExpression	sleepTime = procId -> computeWaitTime ( )		3129753	2		=			
ANR	3129911	Identifier	sleepTime		3129753	0					
ANR	3129912	CallExpression	procId -> computeWaitTime ( )		3129753	1					
ANR	3129913	Callee	procId -> computeWaitTime		3129753	0					
ANR	3129914	PtrMemberAccess	procId -> computeWaitTime		3129753	0					
ANR	3129915	Identifier	procId		3129753	0					
ANR	3129916	Identifier	computeWaitTime		3129753	1					
ANR	3129917	ArgumentList			3129753	1					
ANR	3129918	IfStatement	if ( sleepTime > maxSleepTime )		3129753	2					
ANR	3129919	Condition	sleepTime > maxSleepTime	103:7:3132:3155	3129753	0	True				
ANR	3129920	RelationalExpression	sleepTime > maxSleepTime		3129753	0		>			
ANR	3129921	Identifier	sleepTime		3129753	0					
ANR	3129922	Identifier	maxSleepTime		3129753	1					
ANR	3129923	CompoundStatement		43:34:1059:1059	3129753	1					
ANR	3129924	Statement	debug_printf	104:3:3164:3175	3129753	0	True				
ANR	3129925	Statement	(	104:15:3176:3176	3129753	1	True				
ANR	3129926	Statement	DEBUG_QUIET	104:17:3178:3188	3129753	2	True				
ANR	3129927	Statement	","	104:28:3189:3189	3129753	3	True				
ANR	3129928	Statement	"""Warning: ProcessId computed sleep """	104:30:3191:3226	3129753	4	True				
ANR	3129929	Statement	"""time (%d) exceeds maximum (%d); skipping sleep/"""	105:6:3234:3282	3129753	5	True				
ANR	3129930	Statement	"""confirm step\\n"""	106:6:3290:3305	3129753	6	True				
ANR	3129931	Statement	","	106:22:3306:3306	3129753	7	True				
ANR	3129932	Statement	sleepTime	106:24:3308:3316	3129753	8	True				
ANR	3129933	Statement	","	106:33:3317:3317	3129753	9	True				
ANR	3129934	Statement	maxSleepTime	106:35:3319:3330	3129753	10	True				
ANR	3129935	Statement	)	106:48:3332:3332	3129753	11	True				
ANR	3129936	ExpressionStatement		106:49:3333:3333	3129753	12	True				
ANR	3129937	ExpressionStatement	check_warning_strictness ( DAG_STRICT_3 )	107:3:3338:3378	3129753	13	True				
ANR	3129938	CallExpression	check_warning_strictness ( DAG_STRICT_3 )		3129753	0					
ANR	3129939	Callee	check_warning_strictness		3129753	0					
ANR	3129940	Identifier	check_warning_strictness		3129753	0					
ANR	3129941	ArgumentList	DAG_STRICT_3		3129753	1					
ANR	3129942	Argument	DAG_STRICT_3		3129753	0					
ANR	3129943	Identifier	DAG_STRICT_3		3129753	0					
ANR	3129944	ElseStatement	else		3129753	0					
ANR	3129945	CompoundStatement		61:3:1580:1590	3129753	0					
ANR	3129946	Statement	debug_printf	109:3:3394:3405	3129753	0	True				
ANR	3129947	Statement	(	109:15:3406:3406	3129753	1	True				
ANR	3129948	Statement	DEBUG_NORMAL	109:17:3408:3419	3129753	2	True				
ANR	3129949	Statement	","	109:29:3420:3420	3129753	3	True				
ANR	3129950	Statement	"""Sleeping for %d seconds to """	109:31:3422:3450	3129753	4	True				
ANR	3129951	Statement	"""ensure ProcessId uniqueness\\n"""	110:6:3458:3488	3129753	5	True				
ANR	3129952	Statement	","	110:37:3489:3489	3129753	6	True				
ANR	3129953	Statement	sleepTime	110:39:3491:3499	3129753	7	True				
ANR	3129954	Statement	)	110:49:3501:3501	3129753	8	True				
ANR	3129955	ExpressionStatement		110:50:3502:3502	3129753	9	True				
ANR	3129956	ExpressionStatement	sleep ( sleepTime )	113:3:3527:3545	3129753	10	True				
ANR	3129957	CallExpression	sleep ( sleepTime )		3129753	0					
ANR	3129958	Callee	sleep		3129753	0					
ANR	3129959	Identifier	sleep		3129753	0					
ANR	3129960	ArgumentList	sleepTime		3129753	1					
ANR	3129961	Argument	sleepTime		3129753	0					
ANR	3129962	Identifier	sleepTime		3129753	0					
ANR	3129963	IdentifierDeclStatement	int status ;	121:3:3680:3690	3129753	11	True				
ANR	3129964	IdentifierDecl	status		3129753	0					
ANR	3129965	IdentifierDeclType	int		3129753	0					
ANR	3129966	Identifier	status		3129753	1					
ANR	3129967	IfStatement	"if ( ProcAPI :: confirmProcessId ( * procId , status ) != PROCAPI_SUCCESS )"		3129753	12					
ANR	3129968	Condition	"ProcAPI :: confirmProcessId ( * procId , status ) != PROCAPI_SUCCESS"	122:8:3700:3768	3129753	0	True				
ANR	3129969	EqualityExpression	"ProcAPI :: confirmProcessId ( * procId , status ) != PROCAPI_SUCCESS"		3129753	0		!=			
ANR	3129970	CallExpression	"ProcAPI :: confirmProcessId ( * procId , status )"		3129753	0					
ANR	3129971	Callee	ProcAPI :: confirmProcessId		3129753	0					
ANR	3129972	Identifier	ProcAPI :: confirmProcessId		3129753	0					
ANR	3129973	ArgumentList	* procId		3129753	1					
ANR	3129974	Argument	* procId		3129753	0					
ANR	3129975	UnaryOperationExpression	* procId		3129753	0					
ANR	3129976	UnaryOperator	*		3129753	0					
ANR	3129977	Identifier	procId		3129753	1					
ANR	3129978	Argument	status		3129753	1					
ANR	3129979	Identifier	status		3129753	0					
ANR	3129980	Identifier	PROCAPI_SUCCESS		3129753	1					
ANR	3129981	CompoundStatement		63:24:1672:1672	3129753	1					
ANR	3129982	Statement	debug_printf	124:4:3778:3789	3129753	0	True				
ANR	3129983	Statement	(	124:16:3790:3790	3129753	1	True				
ANR	3129984	Statement	DEBUG_QUIET	124:18:3792:3802	3129753	2	True				
ANR	3129985	Statement	","	124:29:3803:3803	3129753	3	True				
ANR	3129986	Statement	"""Warning: ProcAPI::"""	124:31:3805:3824	3129753	4	True				
ANR	3129987	Statement	"""confirmProcessId() failed; %d\\n"""	125:7:3833:3865	3129753	5	True				
ANR	3129988	Statement	","	125:40:3866:3866	3129753	6	True				
ANR	3129989	Statement	status	125:42:3868:3873	3129753	7	True				
ANR	3129990	Statement	)	125:49:3875:3875	3129753	8	True				
ANR	3129991	ExpressionStatement		125:50:3876:3876	3129753	9	True				
ANR	3129992	ExpressionStatement	check_warning_strictness ( DAG_STRICT_3 )	126:4:3882:3922	3129753	10	True				
ANR	3129993	CallExpression	check_warning_strictness ( DAG_STRICT_3 )		3129753	0					
ANR	3129994	Callee	check_warning_strictness		3129753	0					
ANR	3129995	Identifier	check_warning_strictness		3129753	0					
ANR	3129996	ArgumentList	DAG_STRICT_3		3129753	1					
ANR	3129997	Argument	DAG_STRICT_3		3129753	0					
ANR	3129998	Identifier	DAG_STRICT_3		3129753	0					
ANR	3129999	ElseStatement	else		3129753	0					
ANR	3130000	CompoundStatement		67:10:1834:1834	3129753	0					
ANR	3130001	IfStatement	if ( ! procId -> isConfirmed ( ) )		3129753	0					
ANR	3130002	Condition	! procId -> isConfirmed ( )	128:9:3945:3966	3129753	0	True				
ANR	3130003	UnaryOperationExpression	! procId -> isConfirmed ( )		3129753	0					
ANR	3130004	UnaryOperator	!		3129753	0					
ANR	3130005	CallExpression	procId -> isConfirmed ( )		3129753	1					
ANR	3130006	Callee	procId -> isConfirmed		3129753	0					
ANR	3130007	PtrMemberAccess	procId -> isConfirmed		3129753	0					
ANR	3130008	Identifier	procId		3129753	0					
ANR	3130009	Identifier	isConfirmed		3129753	1					
ANR	3130010	ArgumentList			3129753	1					
ANR	3130011	CompoundStatement		68:34:1870:1870	3129753	1					
ANR	3130012	Statement	debug_printf	129:5:3977:3988	3129753	0	True				
ANR	3130013	Statement	(	129:17:3989:3989	3129753	1	True				
ANR	3130014	Statement	DEBUG_QUIET	129:19:3991:4001	3129753	2	True				
ANR	3130015	Statement	","	129:30:4002:4002	3129753	3	True				
ANR	3130016	Statement	"""Warning: ProcessId not """	129:32:4004:4028	3129753	4	True				
ANR	3130017	Statement	"""confirmed unique\\n"""	130:8:4038:4057	3129753	5	True				
ANR	3130018	Statement	)	130:29:4059:4059	3129753	6	True				
ANR	3130019	ExpressionStatement		130:30:4060:4060	3129753	7	True				
ANR	3130020	ExpressionStatement	check_warning_strictness ( DAG_STRICT_3 )	131:5:4067:4107	3129753	8	True				
ANR	3130021	CallExpression	check_warning_strictness ( DAG_STRICT_3 )		3129753	0					
ANR	3130022	Callee	check_warning_strictness		3129753	0					
ANR	3130023	Identifier	check_warning_strictness		3129753	0					
ANR	3130024	ArgumentList	DAG_STRICT_3		3129753	1					
ANR	3130025	Argument	DAG_STRICT_3		3129753	0					
ANR	3130026	Identifier	DAG_STRICT_3		3129753	0					
ANR	3130027	ElseStatement	else		3129753	0					
ANR	3130028	CompoundStatement		72:11:2020:2020	3129753	0					
ANR	3130029	IfStatement	if ( procId -> writeConfirmationOnly ( fp ) != ProcessId :: SUCCESS )		3129753	0					
ANR	3130030	Condition	procId -> writeConfirmationOnly ( fp ) != ProcessId :: SUCCESS	137:10:4188:4252	3129753	0	True				
ANR	3130031	EqualityExpression	procId -> writeConfirmationOnly ( fp ) != ProcessId :: SUCCESS		3129753	0		!=			
ANR	3130032	CallExpression	procId -> writeConfirmationOnly ( fp )		3129753	0					
ANR	3130033	Callee	procId -> writeConfirmationOnly		3129753	0					
ANR	3130034	PtrMemberAccess	procId -> writeConfirmationOnly		3129753	0					
ANR	3130035	Identifier	procId		3129753	0					
ANR	3130036	Identifier	writeConfirmationOnly		3129753	1					
ANR	3130037	ArgumentList	fp		3129753	1					
ANR	3130038	Argument	fp		3129753	0					
ANR	3130039	Identifier	fp		3129753	0					
ANR	3130040	Identifier	ProcessId :: SUCCESS		3129753	1					
ANR	3130041	CompoundStatement		78:29:2156:2156	3129753	1					
ANR	3130042	Statement	debug_printf	139:6:4264:4275	3129753	0	True				
ANR	3130043	Statement	(	139:18:4276:4276	3129753	1	True				
ANR	3130044	Statement	DEBUG_QUIET	139:20:4278:4288	3129753	2	True				
ANR	3130045	Statement	","	139:31:4289:4289	3129753	3	True				
ANR	3130046	Statement	"""ERROR: ProcessId::"""	139:33:4291:4310	3129753	4	True				
ANR	3130047	Statement	"""writeConfirmationOnly() failed\\n"""	140:9:4321:4354	3129753	5	True				
ANR	3130048	Statement	)	140:43:4355:4355	3129753	6	True				
ANR	3130049	ExpressionStatement		140:44:4356:4356	3129753	7	True				
ANR	3130050	ExpressionStatement	result = - 1	141:6:4364:4375	3129753	8	True				
ANR	3130051	AssignmentExpression	result = - 1		3129753	0		=			
ANR	3130052	Identifier	result		3129753	0					
ANR	3130053	UnaryOperationExpression	- 1		3129753	1					
ANR	3130054	UnaryOperator	-		3129753	0					
ANR	3130055	PrimaryExpression	1		3129753	1					
ANR	3130056	Statement	delete	148:1:4404:4409	3129753	7	True				
ANR	3130057	ExpressionStatement	procId	148:8:4411:4417	3129753	8	True				
ANR	3130058	Identifier	procId		3129753	0					
ANR	3130059	IfStatement	if ( fp != NULL )		3129753	9					
ANR	3130060	Condition	fp != NULL	150:6:4426:4435	3129753	0	True				
ANR	3130061	EqualityExpression	fp != NULL		3129753	0		!=			
ANR	3130062	Identifier	fp		3129753	0					
ANR	3130063	Identifier	NULL		3129753	1					
ANR	3130064	CompoundStatement		90:19:2339:2339	3129753	1					
ANR	3130065	IfStatement	if ( fclose ( fp ) != 0 )		3129753	0					
ANR	3130066	Condition	fclose ( fp ) != 0	151:7:4448:4464	3129753	0	True				
ANR	3130067	EqualityExpression	fclose ( fp ) != 0		3129753	0		!=			
ANR	3130068	CallExpression	fclose ( fp )		3129753	0					
ANR	3130069	Callee	fclose		3129753	0					
ANR	3130070	Identifier	fclose		3129753	0					
ANR	3130071	ArgumentList	fp		3129753	1					
ANR	3130072	Argument	fp		3129753	0					
ANR	3130073	Identifier	fp		3129753	0					
ANR	3130074	PrimaryExpression	0		3129753	1					
ANR	3130075	CompoundStatement		91:27:2368:2368	3129753	1					
ANR	3130076	Statement	debug_printf	152:3:4473:4484	3129753	0	True				
ANR	3130077	Statement	(	152:15:4485:4485	3129753	1	True				
ANR	3130078	Statement	DEBUG_QUIET	152:17:4487:4497	3129753	2	True				
ANR	3130079	Statement	","	152:28:4498:4498	3129753	3	True				
ANR	3130080	Statement	"""ERROR: closing lock """	152:30:4500:4521	3129753	4	True				
ANR	3130081	Statement	"""file failed with errno %d (%s)\\n"""	153:6:4529:4562	3129753	5	True				
ANR	3130082	Statement	","	153:40:4563:4563	3129753	6	True				
ANR	3130083	Statement	errno	153:42:4565:4569	3129753	7	True				
ANR	3130084	Statement	","	153:47:4570:4570	3129753	8	True				
ANR	3130085	Statement	strerror	154:6:4578:4585	3129753	9	True				
ANR	3130086	Statement	(	154:14:4586:4586	3129753	10	True				
ANR	3130087	Statement	errno	154:16:4588:4592	3129753	11	True				
ANR	3130088	Statement	)	154:22:4594:4594	3129753	12	True				
ANR	3130089	Statement	)	154:24:4596:4596	3129753	13	True				
ANR	3130090	ExpressionStatement		154:25:4597:4597	3129753	14	True				
ANR	3130091	ReturnStatement	return result ;	158:1:4608:4621	3129753	10	True				
ANR	3130092	Identifier	result		3129753	0					
ANR	3130093	ReturnType	int		3129753	1					
ANR	3130094	Identifier	util_create_lock_file		3129753	2					
ANR	3130095	ParameterList	"const char * lockFileName , bool abortDuplicates"		3129753	3					
ANR	3130096	Parameter	const char * lockFileName	61:26:2051:2074	3129753	0	True				
ANR	3130097	ParameterType	const char *		3129753	0					
ANR	3130098	Identifier	lockFileName		3129753	1					
ANR	3130099	Parameter	bool abortDuplicates	61:52:2077:2096	3129753	1	True				
ANR	3130100	ParameterType	bool		3129753	0					
ANR	3130101	Identifier	abortDuplicates		3129753	1					
ANR	3130102	CFGEntryNode	ENTRY		3129753		True				
ANR	3130103	CFGExitNode	EXIT		3129753		True				
ANR	3130104	Symbol	procId -> computeWaitTime		3129753						
ANR	3130105	Symbol	procId		3129753						
ANR	3130106	Symbol	daemonCore -> getpid		3129753						
ANR	3130107	Symbol	procId -> isConfirmed		3129753						
ANR	3130108	Symbol	abortDuplicates		3129753						
ANR	3130109	Symbol	fp		3129753						
ANR	3130110	Symbol	DEBUG_QUIET		3129753						
ANR	3130111	Symbol	result		3129753						
ANR	3130112	Symbol	DAG_STRICT_3		3129753						
ANR	3130113	Symbol	* procId		3129753						
ANR	3130114	Symbol	daemonCore		3129753						
ANR	3130115	Symbol	safe_fopen_wrapper_follow		3129753						
ANR	3130116	Symbol	ProcessId :: SUCCESS		3129753						
ANR	3130117	Symbol	ProcAPI :: createProcessId		3129753						
ANR	3130118	Symbol	NULL		3129753						
ANR	3130119	Symbol	fclose		3129753						
ANR	3130120	Symbol	maxSleepTime		3129753						
ANR	3130121	Symbol	PROCAPI_SUCCESS		3129753						
ANR	3130122	Symbol	lockFileName		3129753						
ANR	3130123	Symbol	ProcAPI :: confirmProcessId		3129753						
ANR	3130124	Symbol	procId -> write		3129753						
ANR	3130125	Symbol	* daemonCore		3129753						
ANR	3130126	Symbol	sleepTime		3129753						
ANR	3130127	Symbol	procId -> writeConfirmationOnly		3129753						
ANR	3130128	Symbol	status		3129753						
ANR	3130129	Function	util_check_lock_file	163:0:4707:6552							
ANR	3130130	FunctionDef	util_check_lock_file (const char * lockFileName)		3130129	0					
ANR	3130131	CompoundStatement		163:51:4758:6552	3130129	0					
ANR	3130132	IdentifierDeclStatement	int result = 0 ;	164:1:4761:4775	3130129	0	True				
ANR	3130133	IdentifierDecl	result = 0		3130129	0					
ANR	3130134	IdentifierDeclType	int		3130129	0					
ANR	3130135	Identifier	result		3130129	1					
ANR	3130136	AssignmentExpression	result = 0		3130129	2		=			
ANR	3130137	Identifier	result		3130129	0					
ANR	3130138	PrimaryExpression	0		3130129	1					
ANR	3130139	IdentifierDeclStatement	"FILE * fp = safe_fopen_wrapper_follow ( lockFileName , ""r"" ) ;"	166:1:4779:4836	3130129	1	True				
ANR	3130140	IdentifierDecl	"* fp = safe_fopen_wrapper_follow ( lockFileName , ""r"" )"		3130129	0					
ANR	3130141	IdentifierDeclType	FILE *		3130129	0					
ANR	3130142	Identifier	fp		3130129	1					
ANR	3130143	AssignmentExpression	"* fp = safe_fopen_wrapper_follow ( lockFileName , ""r"" )"		3130129	2		=			
ANR	3130144	Identifier	fp		3130129	0					
ANR	3130145	CallExpression	"safe_fopen_wrapper_follow ( lockFileName , ""r"" )"		3130129	1					
ANR	3130146	Callee	safe_fopen_wrapper_follow		3130129	0					
ANR	3130147	Identifier	safe_fopen_wrapper_follow		3130129	0					
ANR	3130148	ArgumentList	lockFileName		3130129	1					
ANR	3130149	Argument	lockFileName		3130129	0					
ANR	3130150	Identifier	lockFileName		3130129	0					
ANR	3130151	Argument	"""r"""		3130129	1					
ANR	3130152	PrimaryExpression	"""r"""		3130129	0					
ANR	3130153	IfStatement	if ( fp == NULL )		3130129	2					
ANR	3130154	Condition	fp == NULL	167:6:4844:4853	3130129	0	True				
ANR	3130155	EqualityExpression	fp == NULL		3130129	0		==			
ANR	3130156	Identifier	fp		3130129	0					
ANR	3130157	Identifier	NULL		3130129	1					
ANR	3130158	CompoundStatement		5:19:98:98	3130129	1					
ANR	3130159	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""ERROR: could not open lock file %s for reading.\\n"" , lockFileName )"	168:2:4861:4965	3130129	0	True				
ANR	3130160	CallExpression	"debug_printf ( DEBUG_QUIET , ""ERROR: could not open lock file %s for reading.\\n"" , lockFileName )"		3130129	0					
ANR	3130161	Callee	debug_printf		3130129	0					
ANR	3130162	Identifier	debug_printf		3130129	0					
ANR	3130163	ArgumentList	DEBUG_QUIET		3130129	1					
ANR	3130164	Argument	DEBUG_QUIET		3130129	0					
ANR	3130165	Identifier	DEBUG_QUIET		3130129	0					
ANR	3130166	Argument	"""ERROR: could not open lock file %s for reading.\\n"""		3130129	1					
ANR	3130167	PrimaryExpression	"""ERROR: could not open lock file %s for reading.\\n"""		3130129	0					
ANR	3130168	Argument	lockFileName		3130129	2					
ANR	3130169	Identifier	lockFileName		3130129	0					
ANR	3130170	ExpressionStatement	result = - 1	171:2:4969:4980	3130129	1	True				
ANR	3130171	AssignmentExpression	result = - 1		3130129	0		=			
ANR	3130172	Identifier	result		3130129	0					
ANR	3130173	UnaryOperationExpression	- 1		3130129	1					
ANR	3130174	UnaryOperator	-		3130129	0					
ANR	3130175	PrimaryExpression	1		3130129	1					
ANR	3130176	IdentifierDeclStatement	ProcessId * procId = NULL ;	174:1:4987:5011	3130129	3	True				
ANR	3130177	IdentifierDecl	* procId = NULL		3130129	0					
ANR	3130178	IdentifierDeclType	ProcessId *		3130129	0					
ANR	3130179	Identifier	procId		3130129	1					
ANR	3130180	AssignmentExpression	* procId = NULL		3130129	2		=			
ANR	3130181	Identifier	NULL		3130129	0					
ANR	3130182	Identifier	NULL		3130129	1					
ANR	3130183	IfStatement	if ( result != - 1 )		3130129	4					
ANR	3130184	Condition	result != - 1	175:6:5019:5030	3130129	0	True				
ANR	3130185	EqualityExpression	result != - 1		3130129	0		!=			
ANR	3130186	Identifier	result		3130129	0					
ANR	3130187	UnaryOperationExpression	- 1		3130129	1					
ANR	3130188	UnaryOperator	-		3130129	0					
ANR	3130189	PrimaryExpression	1		3130129	1					
ANR	3130190	CompoundStatement		14:2:279:289	3130129	1					
ANR	3130191	IdentifierDeclStatement	int status ;	176:2:5038:5048	3130129	0	True				
ANR	3130192	IdentifierDecl	status		3130129	0					
ANR	3130193	IdentifierDeclType	int		3130129	0					
ANR	3130194	Identifier	status		3130129	1					
ANR	3130195	ExpressionStatement	"procId = new ProcessId ( fp , status )"	177:2:5052:5088	3130129	1	True				
ANR	3130196	AssignmentExpression	"procId = new ProcessId ( fp , status )"		3130129	0		=			
ANR	3130197	Identifier	procId		3130129	0					
ANR	3130198	Expression	"fp , status"		3130129	1					
ANR	3130199	Identifier	fp		3130129	0					
ANR	3130200	Identifier	status		3130129	1					
ANR	3130201	IfStatement	if ( status != ProcessId :: SUCCESS )		3130129	2					
ANR	3130202	Condition	status != ProcessId :: SUCCESS	178:7:5097:5124	3130129	0	True				
ANR	3130203	EqualityExpression	status != ProcessId :: SUCCESS		3130129	0		!=			
ANR	3130204	Identifier	status		3130129	0					
ANR	3130205	Identifier	ProcessId :: SUCCESS		3130129	1					
ANR	3130206	CompoundStatement		16:38:369:369	3130129	1					
ANR	3130207	Statement	debug_printf	179:3:5133:5144	3130129	0	True				
ANR	3130208	Statement	(	179:15:5145:5145	3130129	1	True				
ANR	3130209	Statement	DEBUG_QUIET	179:17:5147:5157	3130129	2	True				
ANR	3130210	Statement	","	179:28:5158:5158	3130129	3	True				
ANR	3130211	Statement	"""ERROR: unable to create ProcessId """	179:30:5160:5195	3130129	4	True				
ANR	3130212	Statement	"""object from lock file %s\\n"""	180:6:5203:5230	3130129	5	True				
ANR	3130213	Statement	","	180:34:5231:5231	3130129	6	True				
ANR	3130214	Statement	lockFileName	180:36:5233:5244	3130129	7	True				
ANR	3130215	Statement	)	180:49:5246:5246	3130129	8	True				
ANR	3130216	ExpressionStatement		180:50:5247:5247	3130129	9	True				
ANR	3130217	ExpressionStatement	result = - 1	181:3:5252:5263	3130129	10	True				
ANR	3130218	AssignmentExpression	result = - 1		3130129	0		=			
ANR	3130219	Identifier	result		3130129	0					
ANR	3130220	UnaryOperationExpression	- 1		3130129	1					
ANR	3130221	UnaryOperator	-		3130129	0					
ANR	3130222	PrimaryExpression	1		3130129	1					
ANR	3130223	IfStatement	if ( result != - 1 )		3130129	5					
ANR	3130224	Condition	result != - 1	185:6:5279:5290	3130129	0	True				
ANR	3130225	EqualityExpression	result != - 1		3130129	0		!=			
ANR	3130226	Identifier	result		3130129	0					
ANR	3130227	UnaryOperationExpression	- 1		3130129	1					
ANR	3130228	UnaryOperator	-		3130129	0					
ANR	3130229	PrimaryExpression	1		3130129	1					
ANR	3130230	CompoundStatement		25:2:553:606	3130129	1					
ANR	3130231	IdentifierDeclStatement	int status ;	186:2:5298:5308	3130129	0	True				
ANR	3130232	IdentifierDecl	status		3130129	0					
ANR	3130233	IdentifierDeclType	int		3130129	0					
ANR	3130234	Identifier	status		3130129	1					
ANR	3130235	IdentifierDeclStatement	"int aliveResult = ProcAPI :: isAlive ( * procId , status ) ;"	187:2:5312:5365	3130129	1	True				
ANR	3130236	IdentifierDecl	"aliveResult = ProcAPI :: isAlive ( * procId , status )"		3130129	0					
ANR	3130237	IdentifierDeclType	int		3130129	0					
ANR	3130238	Identifier	aliveResult		3130129	1					
ANR	3130239	AssignmentExpression	"aliveResult = ProcAPI :: isAlive ( * procId , status )"		3130129	2		=			
ANR	3130240	Identifier	aliveResult		3130129	0					
ANR	3130241	CallExpression	"ProcAPI :: isAlive ( * procId , status )"		3130129	1					
ANR	3130242	Callee	ProcAPI :: isAlive		3130129	0					
ANR	3130243	Identifier	ProcAPI :: isAlive		3130129	0					
ANR	3130244	ArgumentList	* procId		3130129	1					
ANR	3130245	Argument	* procId		3130129	0					
ANR	3130246	UnaryOperationExpression	* procId		3130129	0					
ANR	3130247	UnaryOperator	*		3130129	0					
ANR	3130248	Identifier	procId		3130129	1					
ANR	3130249	Argument	status		3130129	1					
ANR	3130250	Identifier	status		3130129	0					
ANR	3130251	IfStatement	if ( aliveResult != PROCAPI_SUCCESS )		3130129	2					
ANR	3130252	Condition	aliveResult != PROCAPI_SUCCESS	188:7:5374:5403	3130129	0	True				
ANR	3130253	EqualityExpression	aliveResult != PROCAPI_SUCCESS		3130129	0		!=			
ANR	3130254	Identifier	aliveResult		3130129	0					
ANR	3130255	Identifier	PROCAPI_SUCCESS		3130129	1					
ANR	3130256	CompoundStatement		26:40:648:648	3130129	1					
ANR	3130257	Statement	debug_printf	189:3:5412:5423	3130129	0	True				
ANR	3130258	Statement	(	189:15:5424:5424	3130129	1	True				
ANR	3130259	Statement	DEBUG_QUIET	189:17:5426:5436	3130129	2	True				
ANR	3130260	Statement	","	189:28:5437:5437	3130129	3	True				
ANR	3130261	Statement	"""ERROR: failed to determine """	189:30:5439:5467	3130129	4	True				
ANR	3130262	Statement	"""whether DAGMan that wrote lock file is alive\\n"""	190:6:5475:5522	3130129	5	True				
ANR	3130263	Statement	)	190:55:5524:5524	3130129	6	True				
ANR	3130264	ExpressionStatement		190:56:5525:5525	3130129	7	True				
ANR	3130265	ExpressionStatement	result = - 1	191:3:5530:5541	3130129	8	True				
ANR	3130266	AssignmentExpression	result = - 1		3130129	0		=			
ANR	3130267	Identifier	result		3130129	0					
ANR	3130268	UnaryOperationExpression	- 1		3130129	1					
ANR	3130269	UnaryOperator	-		3130129	0					
ANR	3130270	PrimaryExpression	1		3130129	1					
ANR	3130271	ElseStatement	else		3130129	0					
ANR	3130272	CompoundStatement		30:9:793:793	3130129	0					
ANR	3130273	IfStatement	if ( status == PROCAPI_ALIVE )		3130129	0					
ANR	3130274	Condition	status == PROCAPI_ALIVE	194:8:5563:5585	3130129	0	True				
ANR	3130275	EqualityExpression	status == PROCAPI_ALIVE		3130129	0		==			
ANR	3130276	Identifier	status		3130129	0					
ANR	3130277	Identifier	PROCAPI_ALIVE		3130129	1					
ANR	3130278	CompoundStatement		32:34:830:830	3130129	1					
ANR	3130279	Statement	debug_printf	195:4:5595:5606	3130129	0	True				
ANR	3130280	Statement	(	195:16:5607:5607	3130129	1	True				
ANR	3130281	Statement	DEBUG_NORMAL	195:18:5609:5620	3130129	2	True				
ANR	3130282	Statement	","	195:30:5621:5621	3130129	3	True				
ANR	3130283	Statement	"""Duplicate DAGMan PID %d is alive; this DAGMan """	196:6:5629:5676	3130129	4	True				
ANR	3130284	Statement	"""should abort.\\n"""	197:6:5684:5700	3130129	5	True				
ANR	3130285	Statement	","	197:23:5701:5701	3130129	6	True				
ANR	3130286	Statement	procId	197:25:5703:5708	3130129	7	True				
ANR	3130287	Statement	->	197:31:5709:5710	3130129	8	True				
ANR	3130288	Statement	getPid	197:33:5711:5716	3130129	9	True				
ANR	3130289	Statement	(	197:39:5717:5717	3130129	10	True				
ANR	3130290	Statement	)	197:40:5718:5718	3130129	11	True				
ANR	3130291	Statement	)	197:42:5720:5720	3130129	12	True				
ANR	3130292	ExpressionStatement		197:43:5721:5721	3130129	13	True				
ANR	3130293	ExpressionStatement	result = 1	198:4:5727:5737	3130129	14	True				
ANR	3130294	AssignmentExpression	result = 1		3130129	0		=			
ANR	3130295	Identifier	result		3130129	0					
ANR	3130296	PrimaryExpression	1		3130129	1					
ANR	3130297	ElseStatement	else		3130129	0					
ANR	3130298	IfStatement	if ( status == PROCAPI_DEAD )		3130129	0					
ANR	3130299	Condition	status == PROCAPI_DEAD	200:15:5755:5776	3130129	0	True				
ANR	3130300	EqualityExpression	status == PROCAPI_DEAD		3130129	0		==			
ANR	3130301	Identifier	status		3130129	0					
ANR	3130302	Identifier	PROCAPI_DEAD		3130129	1					
ANR	3130303	CompoundStatement		38:40:1021:1021	3130129	1					
ANR	3130304	Statement	debug_printf	201:4:5786:5797	3130129	0	True				
ANR	3130305	Statement	(	201:16:5798:5798	3130129	1	True				
ANR	3130306	Statement	DEBUG_NORMAL	201:18:5800:5811	3130129	2	True				
ANR	3130307	Statement	","	201:30:5812:5812	3130129	3	True				
ANR	3130308	Statement	"""Duplicate DAGMan PID %d is no longer alive; """	202:6:5820:5865	3130129	4	True				
ANR	3130309	Statement	"""this DAGMan should continue.\\n"""	203:6:5873:5904	3130129	5	True				
ANR	3130310	Statement	","	203:38:5905:5905	3130129	6	True				
ANR	3130311	Statement	procId	204:6:5913:5918	3130129	7	True				
ANR	3130312	Statement	->	204:12:5919:5920	3130129	8	True				
ANR	3130313	Statement	getPid	204:14:5921:5926	3130129	9	True				
ANR	3130314	Statement	(	204:20:5927:5927	3130129	10	True				
ANR	3130315	Statement	)	204:21:5928:5928	3130129	11	True				
ANR	3130316	Statement	)	204:23:5930:5930	3130129	12	True				
ANR	3130317	ExpressionStatement		204:24:5931:5931	3130129	13	True				
ANR	3130318	ExpressionStatement	result = 0	205:4:5937:5947	3130129	14	True				
ANR	3130319	AssignmentExpression	result = 0		3130129	0		=			
ANR	3130320	Identifier	result		3130129	0					
ANR	3130321	PrimaryExpression	0		3130129	1					
ANR	3130322	ElseStatement	else		3130129	0					
ANR	3130323	IfStatement	if ( status == PROCAPI_UNCERTAIN )		3130129	0					
ANR	3130324	Condition	status == PROCAPI_UNCERTAIN	207:15:5965:5991	3130129	0	True				
ANR	3130325	EqualityExpression	status == PROCAPI_UNCERTAIN		3130129	0		==			
ANR	3130326	Identifier	status		3130129	0					
ANR	3130327	Identifier	PROCAPI_UNCERTAIN		3130129	1					
ANR	3130328	CompoundStatement		45:45:1236:1236	3130129	1					
ANR	3130329	Statement	debug_printf	208:4:6001:6012	3130129	0	True				
ANR	3130330	Statement	(	208:16:6013:6013	3130129	1	True				
ANR	3130331	Statement	DEBUG_NORMAL	208:18:6015:6026	3130129	2	True				
ANR	3130332	Statement	","	208:30:6027:6027	3130129	3	True				
ANR	3130333	Statement	"""Duplicate DAGMan PID %d *may* be alive; this """	209:6:6035:6081	3130129	4	True				
ANR	3130334	Statement	"""DAGMan is continuing, but this will cause """	210:6:6089:6132	3130129	5	True				
ANR	3130335	Statement	"""problems if the duplicate DAGMan is alive.\\n"""	211:6:6140:6185	3130129	6	True				
ANR	3130336	Statement	","	211:52:6186:6186	3130129	7	True				
ANR	3130337	Statement	procId	212:6:6194:6199	3130129	8	True				
ANR	3130338	Statement	->	212:12:6200:6201	3130129	9	True				
ANR	3130339	Statement	getPid	212:14:6202:6207	3130129	10	True				
ANR	3130340	Statement	(	212:20:6208:6208	3130129	11	True				
ANR	3130341	Statement	)	212:21:6209:6209	3130129	12	True				
ANR	3130342	Statement	)	212:23:6211:6211	3130129	13	True				
ANR	3130343	ExpressionStatement		212:24:6212:6212	3130129	14	True				
ANR	3130344	ExpressionStatement	result = 0	213:4:6218:6228	3130129	15	True				
ANR	3130345	AssignmentExpression	result = 0		3130129	0		=			
ANR	3130346	Identifier	result		3130129	0					
ANR	3130347	PrimaryExpression	0		3130129	1					
ANR	3130348	ElseStatement	else		3130129	0					
ANR	3130349	CompoundStatement		53:10:1482:1482	3130129	0					
ANR	3130350	ExpressionStatement	"EXCEPT ( ""Illegal ProcAPI::isAlive() status value: %d"" , status )"	216:4:6247:6317	3130129	0	True				
ANR	3130351	CallExpression	"EXCEPT ( ""Illegal ProcAPI::isAlive() status value: %d"" , status )"		3130129	0					
ANR	3130352	Callee	EXCEPT		3130129	0					
ANR	3130353	Identifier	EXCEPT		3130129	0					
ANR	3130354	ArgumentList	"""Illegal ProcAPI::isAlive() status value: %d"""		3130129	1					
ANR	3130355	Argument	"""Illegal ProcAPI::isAlive() status value: %d"""		3130129	0					
ANR	3130356	PrimaryExpression	"""Illegal ProcAPI::isAlive() status value: %d"""		3130129	0					
ANR	3130357	Argument	status		3130129	1					
ANR	3130358	Identifier	status		3130129	0					
ANR	3130359	Statement	delete	222:1:6333:6338	3130129	6	True				
ANR	3130360	ExpressionStatement	procId	222:8:6340:6346	3130129	7	True				
ANR	3130361	Identifier	procId		3130129	0					
ANR	3130362	IfStatement	if ( fp != NULL )		3130129	8					
ANR	3130363	Condition	fp != NULL	224:6:6355:6364	3130129	0	True				
ANR	3130364	EqualityExpression	fp != NULL		3130129	0		!=			
ANR	3130365	Identifier	fp		3130129	0					
ANR	3130366	Identifier	NULL		3130129	1					
ANR	3130367	CompoundStatement		62:19:1609:1609	3130129	1					
ANR	3130368	IfStatement	if ( fclose ( fp ) != 0 )		3130129	0					
ANR	3130369	Condition	fclose ( fp ) != 0	225:7:6377:6393	3130129	0	True				
ANR	3130370	EqualityExpression	fclose ( fp ) != 0		3130129	0		!=			
ANR	3130371	CallExpression	fclose ( fp )		3130129	0					
ANR	3130372	Callee	fclose		3130129	0					
ANR	3130373	Identifier	fclose		3130129	0					
ANR	3130374	ArgumentList	fp		3130129	1					
ANR	3130375	Argument	fp		3130129	0					
ANR	3130376	Identifier	fp		3130129	0					
ANR	3130377	PrimaryExpression	0		3130129	1					
ANR	3130378	CompoundStatement		63:27:1638:1638	3130129	1					
ANR	3130379	Statement	debug_printf	226:3:6402:6413	3130129	0	True				
ANR	3130380	Statement	(	226:15:6414:6414	3130129	1	True				
ANR	3130381	Statement	DEBUG_QUIET	226:17:6416:6426	3130129	2	True				
ANR	3130382	Statement	","	226:28:6427:6427	3130129	3	True				
ANR	3130383	Statement	"""ERROR: closing lock """	226:30:6429:6450	3130129	4	True				
ANR	3130384	Statement	"""file failed with errno %d (%s)\\n"""	227:6:6458:6491	3130129	5	True				
ANR	3130385	Statement	","	227:40:6492:6492	3130129	6	True				
ANR	3130386	Statement	errno	227:42:6494:6498	3130129	7	True				
ANR	3130387	Statement	","	227:47:6499:6499	3130129	8	True				
ANR	3130388	Statement	strerror	228:6:6507:6514	3130129	9	True				
ANR	3130389	Statement	(	228:14:6515:6515	3130129	10	True				
ANR	3130390	Statement	errno	228:16:6517:6521	3130129	11	True				
ANR	3130391	Statement	)	228:22:6523:6523	3130129	12	True				
ANR	3130392	Statement	)	228:24:6525:6525	3130129	13	True				
ANR	3130393	ExpressionStatement		228:25:6526:6526	3130129	14	True				
ANR	3130394	ReturnStatement	return result ;	232:1:6537:6550	3130129	9	True				
ANR	3130395	Identifier	result		3130129	0					
ANR	3130396	ReturnType	int		3130129	1					
ANR	3130397	Identifier	util_check_lock_file		3130129	2					
ANR	3130398	ParameterList	const char * lockFileName		3130129	3					
ANR	3130399	Parameter	const char * lockFileName	163:25:4732:4755	3130129	0	True				
ANR	3130400	ParameterType	const char *		3130129	0					
ANR	3130401	Identifier	lockFileName		3130129	1					
ANR	3130402	CFGEntryNode	ENTRY		3130129		True				
ANR	3130403	CFGExitNode	EXIT		3130129		True				
ANR	3130404	Symbol	PROCAPI_UNCERTAIN		3130129						
ANR	3130405	Symbol	NULL		3130129						
ANR	3130406	Symbol	fclose		3130129						
ANR	3130407	Symbol	procId		3130129						
ANR	3130408	Symbol	PROCAPI_SUCCESS		3130129						
ANR	3130409	Symbol	fp		3130129						
ANR	3130410	Symbol	aliveResult		3130129						
ANR	3130411	Symbol	ProcAPI :: isAlive		3130129						
ANR	3130412	Symbol	lockFileName		3130129						
ANR	3130413	Symbol	DEBUG_QUIET		3130129						
ANR	3130414	Symbol	PROCAPI_ALIVE		3130129						
ANR	3130415	Symbol	result		3130129						
ANR	3130416	Symbol	* procId		3130129						
ANR	3130417	Symbol	PROCAPI_DEAD		3130129						
ANR	3130418	Symbol	safe_fopen_wrapper_follow		3130129						
ANR	3130419	Symbol	status		3130129						
ANR	3130420	Symbol	ProcessId :: SUCCESS		3130129						
