command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4604883	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_condor_arglist.cpp								
ANR	4604884	Function	append_arg	27:0:951:1622							
ANR	4604885	FunctionDef	"append_arg (char const * arg , MyString & result)"		4604884	0					
ANR	4604886	CompoundStatement		27:50:1001:1622	4604884	0					
ANR	4604887	IfStatement	if ( result . Length ( ) )		4604884	0					
ANR	4604888	Condition	result . Length ( )	28:4:1007:1021	4604884	0	True				
ANR	4604889	CallExpression	result . Length ( )		4604884	0					
ANR	4604890	Callee	result . Length		4604884	0					
ANR	4604891	MemberAccess	result . Length		4604884	0					
ANR	4604892	Identifier	result		4604884	0					
ANR	4604893	Identifier	Length		4604884	1					
ANR	4604894	ArgumentList			4604884	1					
ANR	4604895	CompoundStatement		2:21:22:22	4604884	1					
ANR	4604896	ExpressionStatement	"result += "" """	29:2:1028:1041	4604884	0	True				
ANR	4604897	AssignmentExpression	"result += "" """		4604884	0		+=			
ANR	4604898	Identifier	result		4604884	0					
ANR	4604899	PrimaryExpression	""" """		4604884	1					
ANR	4604900	ExpressionStatement	ASSERT ( arg )	31:1:1047:1058	4604884	1	True				
ANR	4604901	CallExpression	ASSERT ( arg )		4604884	0					
ANR	4604902	Callee	ASSERT		4604884	0					
ANR	4604903	Identifier	ASSERT		4604884	0					
ANR	4604904	ArgumentList	arg		4604884	1					
ANR	4604905	Argument	arg		4604884	0					
ANR	4604906	Identifier	arg		4604884	0					
ANR	4604907	IfStatement	if ( ! * arg )		4604884	2					
ANR	4604908	Condition	! * arg	32:4:1064:1068	4604884	0	True				
ANR	4604909	UnaryOperationExpression	! * arg		4604884	0					
ANR	4604910	UnaryOperator	!		4604884	0					
ANR	4604911	UnaryOperationExpression	* arg		4604884	1					
ANR	4604912	UnaryOperator	*		4604884	0					
ANR	4604913	Identifier	arg		4604884	1					
ANR	4604914	CompoundStatement		6:11:69:69	4604884	1					
ANR	4604915	ExpressionStatement	"result += ""''"""	33:2:1075:1089	4604884	0	True				
ANR	4604916	AssignmentExpression	"result += ""''"""		4604884	0		+=			
ANR	4604917	Identifier	result		4604884	0					
ANR	4604918	PrimaryExpression	"""''"""		4604884	1					
ANR	4604919	WhileStatement	while ( * arg )		4604884	3					
ANR	4604920	Condition	* arg	35:7:1113:1116	4604884	0	True				
ANR	4604921	UnaryOperationExpression	* arg		4604884	0					
ANR	4604922	UnaryOperator	*		4604884	0					
ANR	4604923	Identifier	arg		4604884	1					
ANR	4604924	CompoundStatement		9:13:117:117	4604884	1					
ANR	4604925	SwitchStatement	switch ( * arg )		4604884	0					
ANR	4604926	Condition	* arg	36:9:1130:1133	4604884	0	True				
ANR	4604927	UnaryOperationExpression	* arg		4604884	0					
ANR	4604928	UnaryOperator	*		4604884	0					
ANR	4604929	Identifier	arg		4604884	1					
ANR	4604930	CompoundStatement		10:15:134:134	4604884	1					
ANR	4604931	Label	case ' ' :	37:2:1140:1148	4604884	0	True				
ANR	4604932	Label	case '\\t' :	38:2:1152:1161	4604884	1	True				
ANR	4604933	Label	case '\\n' :	39:2:1165:1174	4604884	2	True				
ANR	4604934	Label	case '\\r' :	40:2:1178:1187	4604884	3	True				
ANR	4604935	Label	case '\\'' :	41:2:1191:1200	4604884	4	True				
ANR	4604936	IfStatement	if ( result . Length ( ) && result [ result . Length ( ) - 1 ] == '\\'' )		4604884	5					
ANR	4604937	Condition	result . Length ( ) && result [ result . Length ( ) - 1 ] == '\\''	42:6:1208:1259	4604884	0	True				
ANR	4604938	AndExpression	result . Length ( ) && result [ result . Length ( ) - 1 ] == '\\''		4604884	0		&&			
ANR	4604939	CallExpression	result . Length ( )		4604884	0					
ANR	4604940	Callee	result . Length		4604884	0					
ANR	4604941	MemberAccess	result . Length		4604884	0					
ANR	4604942	Identifier	result		4604884	0					
ANR	4604943	Identifier	Length		4604884	1					
ANR	4604944	ArgumentList			4604884	1					
ANR	4604945	EqualityExpression	result [ result . Length ( ) - 1 ] == '\\''		4604884	1		==			
ANR	4604946	ArrayIndexing	result [ result . Length ( ) - 1 ]		4604884	0					
ANR	4604947	Identifier	result		4604884	0					
ANR	4604948	AdditiveExpression	result . Length ( ) - 1		4604884	1		-			
ANR	4604949	CallExpression	result . Length ( )		4604884	0					
ANR	4604950	Callee	result . Length		4604884	0					
ANR	4604951	MemberAccess	result . Length		4604884	0					
ANR	4604952	Identifier	result		4604884	0					
ANR	4604953	Identifier	Length		4604884	1					
ANR	4604954	ArgumentList			4604884	1					
ANR	4604955	PrimaryExpression	1		4604884	1					
ANR	4604956	PrimaryExpression	'\\''		4604884	1					
ANR	4604957	CompoundStatement		16:60:260:260	4604884	1					
ANR	4604958	ExpressionStatement	"result . setChar ( result . Length ( ) - 1 , '\\0' )"	45:4:1370:1408	4604884	0	True				
ANR	4604959	CallExpression	"result . setChar ( result . Length ( ) - 1 , '\\0' )"		4604884	0					
ANR	4604960	Callee	result . setChar		4604884	0					
ANR	4604961	MemberAccess	result . setChar		4604884	0					
ANR	4604962	Identifier	result		4604884	0					
ANR	4604963	Identifier	setChar		4604884	1					
ANR	4604964	ArgumentList	result . Length ( ) - 1		4604884	1					
ANR	4604965	Argument	result . Length ( ) - 1		4604884	0					
ANR	4604966	AdditiveExpression	result . Length ( ) - 1		4604884	0		-			
ANR	4604967	CallExpression	result . Length ( )		4604884	0					
ANR	4604968	Callee	result . Length		4604884	0					
ANR	4604969	MemberAccess	result . Length		4604884	0					
ANR	4604970	Identifier	result		4604884	0					
ANR	4604971	Identifier	Length		4604884	1					
ANR	4604972	ArgumentList			4604884	1					
ANR	4604973	PrimaryExpression	1		4604884	1					
ANR	4604974	Argument	'\\0'		4604884	1					
ANR	4604975	PrimaryExpression	'\\0'		4604884	0					
ANR	4604976	ElseStatement	else		4604884	0					
ANR	4604977	CompoundStatement		21:8:421:421	4604884	0					
ANR	4604978	ExpressionStatement	result += '\\''	48:4:1429:1443	4604884	0	True				
ANR	4604979	AssignmentExpression	result += '\\''		4604884	0		+=			
ANR	4604980	Identifier	result		4604884	0					
ANR	4604981	PrimaryExpression	'\\''		4604884	1					
ANR	4604982	IfStatement	if ( * arg == '\\'' )		4604884	6					
ANR	4604983	Condition	* arg == '\\''	50:6:1456:1467	4604884	0	True				
ANR	4604984	EqualityExpression	* arg == '\\''		4604884	0		==			
ANR	4604985	UnaryOperationExpression	* arg		4604884	0					
ANR	4604986	UnaryOperator	*		4604884	0					
ANR	4604987	Identifier	arg		4604884	1					
ANR	4604988	PrimaryExpression	'\\''		4604884	1					
ANR	4604989	CompoundStatement		24:20:468:468	4604884	1					
ANR	4604990	ExpressionStatement	result += '\\''	51:4:1476:1490	4604884	0	True				
ANR	4604991	AssignmentExpression	result += '\\''		4604884	0		+=			
ANR	4604992	Identifier	result		4604884	0					
ANR	4604993	PrimaryExpression	'\\''		4604884	1					
ANR	4604994	ExpressionStatement	result += * ( arg ++ )	53:3:1532:1550	4604884	7	True				
ANR	4604995	AssignmentExpression	result += * ( arg ++ )		4604884	0		+=			
ANR	4604996	Identifier	result		4604884	0					
ANR	4604997	UnaryOperationExpression	* ( arg ++ )		4604884	1					
ANR	4604998	UnaryOperator	*		4604884	0					
ANR	4604999	PostIncDecOperationExpression	arg ++		4604884	1					
ANR	4605000	Identifier	arg		4604884	0					
ANR	4605001	IncDec	++		4604884	1					
ANR	4605002	ExpressionStatement	result += '\\''	54:3:1555:1569	4604884	8	True				
ANR	4605003	AssignmentExpression	result += '\\''		4604884	0		+=			
ANR	4605004	Identifier	result		4604884	0					
ANR	4605005	PrimaryExpression	'\\''		4604884	1					
ANR	4605006	BreakStatement	break ;	55:3:1574:1579	4604884	9	True				
ANR	4605007	Label	default :	56:2:1583:1590	4604884	10	True				
ANR	4605008	Identifier	default		4604884	0					
ANR	4605009	ExpressionStatement	result += * ( arg ++ )	57:3:1595:1613	4604884	11	True				
ANR	4605010	AssignmentExpression	result += * ( arg ++ )		4604884	0		+=			
ANR	4605011	Identifier	result		4604884	0					
ANR	4605012	UnaryOperationExpression	* ( arg ++ )		4604884	1					
ANR	4605013	UnaryOperator	*		4604884	0					
ANR	4605014	PostIncDecOperationExpression	arg ++		4604884	1					
ANR	4605015	Identifier	arg		4604884	0					
ANR	4605016	IncDec	++		4604884	1					
ANR	4605017	ReturnType	void		4604884	1					
ANR	4605018	Identifier	append_arg		4604884	2					
ANR	4605019	ParameterList	"char const * arg , MyString & result"		4604884	3					
ANR	4605020	Parameter	char const * arg	27:16:967:981	4604884	0	True				
ANR	4605021	ParameterType	char const *		4604884	0					
ANR	4605022	Identifier	arg		4604884	1					
ANR	4605023	Parameter	MyString & result	27:32:983:998	4604884	1	True				
ANR	4605024	ParameterType	MyString &		4604884	0					
ANR	4605025	Identifier	result		4604884	1					
ANR	4605026	CFGEntryNode	ENTRY		4604884		True				
ANR	4605027	CFGExitNode	EXIT		4604884		True				
ANR	4605028	Symbol	result		4604884						
ANR	4605029	Symbol	* ( arg ++ )		4604884						
ANR	4605030	Symbol	* result		4604884						
ANR	4605031	Symbol	arg		4604884						
ANR	4605032	Symbol	result . Length		4604884						
ANR	4605033	Symbol	* result . Length		4604884						
ANR	4605034	Symbol	* arg		4604884						
ANR	4605035	Function	join_args	62:0:1625:1895							
ANR	4605036	FunctionDef	"join_args (SimpleList < MyString > const & args_list , MyString * result , int start_arg)"		4605035	0					
ANR	4605037	CompoundStatement		63:0:1710:1895	4605035	0					
ANR	4605038	IdentifierDeclStatement	SimpleListIterator < MyString > it ( args_list ) ;	64:1:1713:1755	4605035	0	True				
ANR	4605039	IdentifierDecl	it ( args_list )		4605035	0					
ANR	4605040	IdentifierDeclType	SimpleListIterator < MyString >		4605035	0					
ANR	4605041	Identifier	it		4605035	1					
ANR	4605042	Identifier	args_list		4605035	2					
ANR	4605043	ExpressionStatement	ASSERT ( result )	65:1:1758:1772	4605035	1	True				
ANR	4605044	CallExpression	ASSERT ( result )		4605035	0					
ANR	4605045	Callee	ASSERT		4605035	0					
ANR	4605046	Identifier	ASSERT		4605035	0					
ANR	4605047	ArgumentList	result		4605035	1					
ANR	4605048	Argument	result		4605035	0					
ANR	4605049	Identifier	result		4605035	0					
ANR	4605050	IdentifierDeclStatement	MyString * arg = NULL ;	66:1:1775:1793	4605035	2	True				
ANR	4605051	IdentifierDecl	* arg = NULL		4605035	0					
ANR	4605052	IdentifierDeclType	MyString *		4605035	0					
ANR	4605053	Identifier	arg		4605035	1					
ANR	4605054	AssignmentExpression	* arg = NULL		4605035	2		=			
ANR	4605055	Identifier	NULL		4605035	0					
ANR	4605056	Identifier	NULL		4605035	1					
ANR	4605057	ForStatement	for ( int i = 0 ; it . Next ( arg ) ; i ++ )		4605035	3					
ANR	4605058	ForInit	int i = 0 ;	67:5:1800:1807	4605035	0	True				
ANR	4605059	IdentifierDeclStatement	int i = 0 ;		4605035	0					
ANR	4605060	IdentifierDecl	i = 0		4605035	0					
ANR	4605061	IdentifierDeclType	int		4605035	0					
ANR	4605062	Identifier	i		4605035	1					
ANR	4605063	AssignmentExpression	i = 0		4605035	2		=			
ANR	4605064	Identifier	i		4605035	0					
ANR	4605065	PrimaryExpression	0		4605035	1					
ANR	4605066	Condition	it . Next ( arg )	67:13:1808:1819	4605035	1	True				
ANR	4605067	CallExpression	it . Next ( arg )		4605035	0					
ANR	4605068	Callee	it . Next		4605035	0					
ANR	4605069	MemberAccess	it . Next		4605035	0					
ANR	4605070	Identifier	it		4605035	0					
ANR	4605071	Identifier	Next		4605035	1					
ANR	4605072	ArgumentList	arg		4605035	1					
ANR	4605073	Argument	arg		4605035	0					
ANR	4605074	Identifier	arg		4605035	0					
ANR	4605075	PostIncDecOperationExpression	i ++	67:26:1821:1823	4605035	2	True				
ANR	4605076	Identifier	i		4605035	0					
ANR	4605077	IncDec	++		4605035	1					
ANR	4605078	CompoundStatement		5:31:115:115	4605035	3					
ANR	4605079	IfStatement	if ( i < start_arg )		4605035	0					
ANR	4605080	Condition	i < start_arg	68:5:1833:1843	4605035	0	True				
ANR	4605081	RelationalExpression	i < start_arg		4605035	0		<			
ANR	4605082	Identifier	i		4605035	0					
ANR	4605083	Identifier	start_arg		4605035	1					
ANR	4605084	ContinueStatement	continue ;	68:18:1846:1854	4605035	1	True				
ANR	4605085	ExpressionStatement	"append_arg ( arg -> Value ( ) , * result )"	69:2:1858:1890	4605035	1	True				
ANR	4605086	CallExpression	"append_arg ( arg -> Value ( ) , * result )"		4605035	0					
ANR	4605087	Callee	append_arg		4605035	0					
ANR	4605088	Identifier	append_arg		4605035	0					
ANR	4605089	ArgumentList	arg -> Value ( )		4605035	1					
ANR	4605090	Argument	arg -> Value ( )		4605035	0					
ANR	4605091	CallExpression	arg -> Value ( )		4605035	0					
ANR	4605092	Callee	arg -> Value		4605035	0					
ANR	4605093	PtrMemberAccess	arg -> Value		4605035	0					
ANR	4605094	Identifier	arg		4605035	0					
ANR	4605095	Identifier	Value		4605035	1					
ANR	4605096	ArgumentList			4605035	1					
ANR	4605097	Argument	* result		4605035	1					
ANR	4605098	UnaryOperationExpression	* result		4605035	0					
ANR	4605099	UnaryOperator	*		4605035	0					
ANR	4605100	Identifier	result		4605035	1					
ANR	4605101	ReturnType	void		4605035	1					
ANR	4605102	Identifier	join_args		4605035	2					
ANR	4605103	ParameterList	"SimpleList < MyString > const & args_list , MyString * result , int start_arg"		4605035	3					
ANR	4605104	Parameter	SimpleList < MyString > const & args_list	62:15:1640:1676	4605035	0	True				
ANR	4605105	ParameterType	SimpleList < MyString > const &		4605035	0					
ANR	4605106	Identifier	args_list		4605035	1					
ANR	4605107	Parameter	MyString * result	62:53:1678:1693	4605035	1	True				
ANR	4605108	ParameterType	MyString *		4605035	0					
ANR	4605109	Identifier	result		4605035	1					
ANR	4605110	Parameter	int start_arg	62:70:1695:1707	4605035	2	True				
ANR	4605111	ParameterType	int		4605035	0					
ANR	4605112	Identifier	start_arg		4605035	1					
ANR	4605113	CFGEntryNode	ENTRY		4605035		True				
ANR	4605114	CFGExitNode	EXIT		4605035		True				
ANR	4605115	Symbol	args_list		4605035						
ANR	4605116	Symbol	result		4605035						
ANR	4605117	Symbol	arg -> Value		4605035						
ANR	4605118	Symbol	it . Next		4605035						
ANR	4605119	Symbol	start_arg		4605035						
ANR	4605120	Symbol	NULL		4605035						
ANR	4605121	Symbol	* result		4605035						
ANR	4605122	Symbol	arg		4605035						
ANR	4605123	Symbol	i		4605035						
ANR	4605124	Symbol	it		4605035						
ANR	4605125	Symbol	* arg		4605035						
ANR	4605126	DeclStmt									
ANR	4605127	Decl							int	int	i
ANR	4605128	Function	split_args	82:0:2125:3213							
ANR	4605129	FunctionDef	"split_args (char const * args , SimpleList < MyString > * args_list , MyString * error_msg)"		4605128	0					
ANR	4605130	CompoundStatement		86:0:2220:3213	4605128	0					
ANR	4605131	IdentifierDeclStatement	"MyString buf = """" ;"	87:1:2223:2240	4605128	0	True				
ANR	4605132	IdentifierDecl	"buf = """""		4605128	0					
ANR	4605133	IdentifierDeclType	MyString		4605128	0					
ANR	4605134	Identifier	buf		4605128	1					
ANR	4605135	AssignmentExpression	"buf = """""		4605128	2		=			
ANR	4605136	Identifier	buf		4605128	0					
ANR	4605137	PrimaryExpression	""""""		4605128	1					
ANR	4605138	IdentifierDeclStatement	bool parsed_token = false ;	88:1:2243:2268	4605128	1	True				
ANR	4605139	IdentifierDecl	parsed_token = false		4605128	0					
ANR	4605140	IdentifierDeclType	bool		4605128	0					
ANR	4605141	Identifier	parsed_token		4605128	1					
ANR	4605142	AssignmentExpression	parsed_token = false		4605128	2		=			
ANR	4605143	Identifier	false		4605128	0					
ANR	4605144	Identifier	false		4605128	1					
ANR	4605145	IfStatement	if ( ! args )		4605128	2					
ANR	4605146	Condition	! args	90:4:2275:2279	4605128	0	True				
ANR	4605147	UnaryOperationExpression	! args		4605128	0					
ANR	4605148	UnaryOperator	!		4605128	0					
ANR	4605149	Identifier	args		4605128	1					
ANR	4605150	ReturnStatement	return true ;	90:11:2282:2293	4605128	1	True				
ANR	4605151	Identifier	true		4605128	0					
ANR	4605152	WhileStatement	while ( * args )		4605128	3					
ANR	4605153	Condition	* args	92:7:2303:2307	4605128	0	True				
ANR	4605154	UnaryOperationExpression	* args		4605128	0					
ANR	4605155	UnaryOperator	*		4605128	0					
ANR	4605156	Identifier	args		4605128	1					
ANR	4605157	CompoundStatement		7:14:89:89	4605128	1					
ANR	4605158	SwitchStatement	switch ( * args )		4605128	0					
ANR	4605159	Condition	* args	93:9:2321:2325	4605128	0	True				
ANR	4605160	UnaryOperationExpression	* args		4605128	0					
ANR	4605161	UnaryOperator	*		4605128	0					
ANR	4605162	Identifier	args		4605128	1					
ANR	4605163	CompoundStatement		8:16:107:107	4605128	1					
ANR	4605164	Label	case '\\'' :	94:2:2332:2341	4605128	0	True				
ANR	4605165	CompoundStatement		10:3:127:153	4605128	1					
ANR	4605166	IdentifierDeclStatement	char const * quote = args ++ ;	95:3:2348:2374	4605128	0	True				
ANR	4605167	IdentifierDecl	* quote = args ++		4605128	0					
ANR	4605168	IdentifierDeclType	char const *		4605128	0					
ANR	4605169	Identifier	quote		4605128	1					
ANR	4605170	AssignmentExpression	* quote = args ++		4605128	2		=			
ANR	4605171	Identifier	quote		4605128	0					
ANR	4605172	PostIncDecOperationExpression	args ++		4605128	1					
ANR	4605173	Identifier	args		4605128	0					
ANR	4605174	IncDec	++		4605128	1					
ANR	4605175	ExpressionStatement	parsed_token = true	96:3:2379:2398	4605128	1	True				
ANR	4605176	AssignmentExpression	parsed_token = true		4605128	0		=			
ANR	4605177	Identifier	parsed_token		4605128	0					
ANR	4605178	Identifier	true		4605128	1					
ANR	4605179	WhileStatement	while ( * args )		4605128	2					
ANR	4605180	Condition	* args	97:9:2409:2413	4605128	0	True				
ANR	4605181	UnaryOperationExpression	* args		4605128	0					
ANR	4605182	UnaryOperator	*		4605128	0					
ANR	4605183	Identifier	args		4605128	1					
ANR	4605184	CompoundStatement		12:16:195:195	4605128	1					
ANR	4605185	IfStatement	if ( * args == * quote )		4605128	0					
ANR	4605186	Condition	* args == * quote	98:7:2425:2439	4605128	0	True				
ANR	4605187	EqualityExpression	* args == * quote		4605128	0		==			
ANR	4605188	UnaryOperationExpression	* args		4605128	0					
ANR	4605189	UnaryOperator	*		4605128	0					
ANR	4605190	Identifier	args		4605128	1					
ANR	4605191	UnaryOperationExpression	* quote		4605128	1					
ANR	4605192	UnaryOperator	*		4605128	0					
ANR	4605193	Identifier	quote		4605128	1					
ANR	4605194	CompoundStatement		13:24:221:221	4605128	1					
ANR	4605195	IfStatement	if ( args [ 1 ] == * quote )		4605128	0					
ANR	4605196	Condition	args [ 1 ] == * quote	99:8:2452:2468	4605128	0	True				
ANR	4605197	EqualityExpression	args [ 1 ] == * quote		4605128	0		==			
ANR	4605198	ArrayIndexing	args [ 1 ]		4605128	0					
ANR	4605199	Identifier	args		4605128	0					
ANR	4605200	PrimaryExpression	1		4605128	1					
ANR	4605201	UnaryOperationExpression	* quote		4605128	1					
ANR	4605202	UnaryOperator	*		4605128	0					
ANR	4605203	Identifier	quote		4605128	1					
ANR	4605204	CompoundStatement		14:27:250:250	4605128	1					
ANR	4605205	ExpressionStatement	buf += * ( args ++ )	102:6:2573:2589	4605128	0	True				
ANR	4605206	AssignmentExpression	buf += * ( args ++ )		4605128	0		+=			
ANR	4605207	Identifier	buf		4605128	0					
ANR	4605208	UnaryOperationExpression	* ( args ++ )		4605128	1					
ANR	4605209	UnaryOperator	*		4605128	0					
ANR	4605210	PostIncDecOperationExpression	args ++		4605128	1					
ANR	4605211	Identifier	args		4605128	0					
ANR	4605212	IncDec	++		4605128	1					
ANR	4605213	ExpressionStatement	args ++	103:6:2597:2603	4605128	1	True				
ANR	4605214	PostIncDecOperationExpression	args ++		4605128	0					
ANR	4605215	Identifier	args		4605128	0					
ANR	4605216	IncDec	++		4605128	1					
ANR	4605217	ElseStatement	else		4605128	0					
ANR	4605218	CompoundStatement		20:10:401:401	4605128	0					
ANR	4605219	BreakStatement	break ;	106:6:2630:2635	4605128	0	True				
ANR	4605220	ElseStatement	else		4605128	0					
ANR	4605221	CompoundStatement		24:9:438:438	4605128	0					
ANR	4605222	ExpressionStatement	buf += * ( args ++ )	110:5:2666:2682	4605128	0	True				
ANR	4605223	AssignmentExpression	buf += * ( args ++ )		4605128	0		+=			
ANR	4605224	Identifier	buf		4605128	0					
ANR	4605225	UnaryOperationExpression	* ( args ++ )		4605128	1					
ANR	4605226	UnaryOperator	*		4605128	0					
ANR	4605227	PostIncDecOperationExpression	args ++		4605128	1					
ANR	4605228	Identifier	args		4605128	0					
ANR	4605229	IncDec	++		4605128	1					
ANR	4605230	IfStatement	if ( ! * args )		4605128	3					
ANR	4605231	Condition	! * args	113:6:2701:2706	4605128	0	True				
ANR	4605232	UnaryOperationExpression	! * args		4605128	0					
ANR	4605233	UnaryOperator	!		4605128	0					
ANR	4605234	UnaryOperationExpression	* args		4605128	1					
ANR	4605235	UnaryOperator	*		4605128	0					
ANR	4605236	Identifier	args		4605128	1					
ANR	4605237	CompoundStatement		28:14:488:488	4605128	1					
ANR	4605238	IfStatement	if ( error_msg )		4605128	0					
ANR	4605239	Condition	error_msg	114:7:2718:2726	4605128	0	True				
ANR	4605240	Identifier	error_msg		4605128	0					
ANR	4605241	CompoundStatement		29:18:508:508	4605128	1					
ANR	4605242	ExpressionStatement	"error_msg -> sprintf ( ""Unbalanced quote starting here: %s"" , quote )"	115:5:2736:2798	4605128	0	True				
ANR	4605243	CallExpression	"error_msg -> sprintf ( ""Unbalanced quote starting here: %s"" , quote )"		4605128	0					
ANR	4605244	Callee	error_msg -> sprintf		4605128	0					
ANR	4605245	PtrMemberAccess	error_msg -> sprintf		4605128	0					
ANR	4605246	Identifier	error_msg		4605128	0					
ANR	4605247	Identifier	sprintf		4605128	1					
ANR	4605248	ArgumentList	"""Unbalanced quote starting here: %s"""		4605128	1					
ANR	4605249	Argument	"""Unbalanced quote starting here: %s"""		4605128	0					
ANR	4605250	PrimaryExpression	"""Unbalanced quote starting here: %s"""		4605128	0					
ANR	4605251	Argument	quote		4605128	1					
ANR	4605252	Identifier	quote		4605128	0					
ANR	4605253	ReturnStatement	return false ;	117:4:2810:2822	4605128	1	True				
ANR	4605254	Identifier	false		4605128	0					
ANR	4605255	ExpressionStatement	args ++	119:3:2832:2838	4605128	4	True				
ANR	4605256	PostIncDecOperationExpression	args ++		4605128	0					
ANR	4605257	Identifier	args		4605128	0					
ANR	4605258	IncDec	++		4605128	1					
ANR	4605259	BreakStatement	break ;	120:3:2867:2872	4605128	5	True				
ANR	4605260	Label	case ' ' :	122:2:2880:2888	4605128	2	True				
ANR	4605261	Label	case '\\t' :	123:2:2892:2901	4605128	3	True				
ANR	4605262	Label	case '\\n' :	124:2:2905:2914	4605128	4	True				
ANR	4605263	Label	case '\\r' :	125:2:2918:2927	4605128	5	True				
ANR	4605264	CompoundStatement		40:13:708:708	4605128	6					
ANR	4605265	ExpressionStatement	args ++	126:3:2934:2940	4605128	0	True				
ANR	4605266	PostIncDecOperationExpression	args ++		4605128	0					
ANR	4605267	Identifier	args		4605128	0					
ANR	4605268	IncDec	++		4605128	1					
ANR	4605269	IfStatement	if ( parsed_token )		4605128	1					
ANR	4605270	Condition	parsed_token	127:6:2966:2977	4605128	0	True				
ANR	4605271	Identifier	parsed_token		4605128	0					
ANR	4605272	CompoundStatement		42:20:759:759	4605128	1					
ANR	4605273	ExpressionStatement	parsed_token = false	128:4:2986:3006	4605128	0	True				
ANR	4605274	AssignmentExpression	parsed_token = false		4605128	0		=			
ANR	4605275	Identifier	parsed_token		4605128	0					
ANR	4605276	Identifier	false		4605128	1					
ANR	4605277	ExpressionStatement	ASSERT ( args_list -> Append ( buf ) )	129:4:3012:3042	4605128	1	True				
ANR	4605278	CallExpression	ASSERT ( args_list -> Append ( buf ) )		4605128	0					
ANR	4605279	Callee	ASSERT		4605128	0					
ANR	4605280	Identifier	ASSERT		4605128	0					
ANR	4605281	ArgumentList	args_list -> Append ( buf )		4605128	1					
ANR	4605282	Argument	args_list -> Append ( buf )		4605128	0					
ANR	4605283	CallExpression	args_list -> Append ( buf )		4605128	0					
ANR	4605284	Callee	args_list -> Append		4605128	0					
ANR	4605285	PtrMemberAccess	args_list -> Append		4605128	0					
ANR	4605286	Identifier	args_list		4605128	0					
ANR	4605287	Identifier	Append		4605128	1					
ANR	4605288	ArgumentList	buf		4605128	1					
ANR	4605289	Argument	buf		4605128	0					
ANR	4605290	Identifier	buf		4605128	0					
ANR	4605291	ExpressionStatement	"buf = """""	130:4:3048:3056	4605128	2	True				
ANR	4605292	AssignmentExpression	"buf = """""		4605128	0		=			
ANR	4605293	Identifier	buf		4605128	0					
ANR	4605294	PrimaryExpression	""""""		4605128	1					
ANR	4605295	BreakStatement	break ;	132:3:3066:3071	4605128	2	True				
ANR	4605296	Label	default :	134:2:3079:3086	4605128	7	True				
ANR	4605297	Identifier	default		4605128	0					
ANR	4605298	ExpressionStatement	parsed_token = true	135:3:3091:3110	4605128	8	True				
ANR	4605299	AssignmentExpression	parsed_token = true		4605128	0		=			
ANR	4605300	Identifier	parsed_token		4605128	0					
ANR	4605301	Identifier	true		4605128	1					
ANR	4605302	ExpressionStatement	buf += * ( args ++ )	136:3:3115:3131	4605128	9	True				
ANR	4605303	AssignmentExpression	buf += * ( args ++ )		4605128	0		+=			
ANR	4605304	Identifier	buf		4605128	0					
ANR	4605305	UnaryOperationExpression	* ( args ++ )		4605128	1					
ANR	4605306	UnaryOperator	*		4605128	0					
ANR	4605307	PostIncDecOperationExpression	args ++		4605128	1					
ANR	4605308	Identifier	args		4605128	0					
ANR	4605309	IncDec	++		4605128	1					
ANR	4605310	BreakStatement	break ;	137:3:3136:3141	4605128	10	True				
ANR	4605311	IfStatement	if ( parsed_token )		4605128	4					
ANR	4605312	Condition	parsed_token	140:4:3154:3165	4605128	0	True				
ANR	4605313	Identifier	parsed_token		4605128	0					
ANR	4605314	CompoundStatement		55:18:947:947	4605128	1					
ANR	4605315	ExpressionStatement	args_list -> Append ( buf )	141:2:3172:3194	4605128	0	True				
ANR	4605316	CallExpression	args_list -> Append ( buf )		4605128	0					
ANR	4605317	Callee	args_list -> Append		4605128	0					
ANR	4605318	PtrMemberAccess	args_list -> Append		4605128	0					
ANR	4605319	Identifier	args_list		4605128	0					
ANR	4605320	Identifier	Append		4605128	1					
ANR	4605321	ArgumentList	buf		4605128	1					
ANR	4605322	Argument	buf		4605128	0					
ANR	4605323	Identifier	buf		4605128	0					
ANR	4605324	ReturnStatement	return true ;	143:1:3200:3211	4605128	5	True				
ANR	4605325	Identifier	true		4605128	0					
ANR	4605326	ReturnType	bool		4605128	1					
ANR	4605327	Identifier	split_args		4605128	2					
ANR	4605328	ParameterList	"char const * args , SimpleList < MyString > * args_list , MyString * error_msg"		4605128	3					
ANR	4605329	Parameter	char const * args	83:2:2144:2159	4605128	0	True				
ANR	4605330	ParameterType	char const *		4605128	0					
ANR	4605331	Identifier	args		4605128	1					
ANR	4605332	Parameter	SimpleList < MyString > * args_list	84:2:2164:2194	4605128	1	True				
ANR	4605333	ParameterType	SimpleList < MyString > *		4605128	0					
ANR	4605334	Identifier	args_list		4605128	1					
ANR	4605335	Parameter	MyString * error_msg	85:2:2199:2217	4605128	2	True				
ANR	4605336	ParameterType	MyString *		4605128	0					
ANR	4605337	Identifier	error_msg		4605128	1					
ANR	4605338	CFGEntryNode	ENTRY		4605128		True				
ANR	4605339	CFGExitNode	EXIT		4605128		True				
ANR	4605340	Symbol	args_list		4605128						
ANR	4605341	Symbol	parsed_token		4605128						
ANR	4605342	Symbol	error_msg		4605128						
ANR	4605343	Symbol	false		4605128						
ANR	4605344	Symbol	* args		4605128						
ANR	4605345	Symbol	args		4605128						
ANR	4605346	Symbol	buf		4605128						
ANR	4605347	Symbol	quote		4605128						
ANR	4605348	Symbol	args_list -> Append		4605128						
ANR	4605349	Symbol	* quote		4605128						
ANR	4605350	Symbol	* ( args ++ )		4605128						
ANR	4605351	Symbol	true		4605128						
ANR	4605352	Symbol	* args_list		4605128						
ANR	4605353	Function	ArgListToArgsArray	146:0:3216:3577							
ANR	4605354	FunctionDef	ArgListToArgsArray (SimpleList < MyString > const & args_list)		4605353	0					
ANR	4605355	CompoundStatement		148:0:3289:3577	4605353	0					
ANR	4605356	IdentifierDeclStatement	SimpleListIterator < MyString > it ( args_list ) ;	149:1:3292:3334	4605353	0	True				
ANR	4605357	IdentifierDecl	it ( args_list )		4605353	0					
ANR	4605358	IdentifierDeclType	SimpleListIterator < MyString >		4605353	0					
ANR	4605359	Identifier	it		4605353	1					
ANR	4605360	Identifier	args_list		4605353	2					
ANR	4605361	IdentifierDeclStatement	MyString * arg ;	150:1:3337:3350	4605353	1	True				
ANR	4605362	IdentifierDecl	* arg		4605353	0					
ANR	4605363	IdentifierDeclType	MyString *		4605353	0					
ANR	4605364	Identifier	arg		4605353	1					
ANR	4605365	IdentifierDeclStatement	int i ;	151:1:3353:3358	4605353	2	True				
ANR	4605366	IdentifierDecl	i		4605353	0					
ANR	4605367	IdentifierDeclType	int		4605353	0					
ANR	4605368	Identifier	i		4605353	1					
ANR	4605369	Statement	char	152:1:3361:3364	4605353	3	True				
ANR	4605370	Statement	*	152:6:3366:3366	4605353	4	True				
ANR	4605371	Statement	*	152:7:3367:3367	4605353	5	True				
ANR	4605372	Statement	args_array	152:8:3368:3377	4605353	6	True				
ANR	4605373	Statement	=	152:19:3379:3379	4605353	7	True				
ANR	4605374	Statement	new	152:21:3381:3383	4605353	8	True				
ANR	4605375	Statement	char	152:25:3385:3388	4605353	9	True				
ANR	4605376	Statement	*	152:30:3390:3390	4605353	10	True				
ANR	4605377	Statement	[	152:31:3391:3391	4605353	11	True				
ANR	4605378	Statement	args_list	152:32:3392:3400	4605353	12	True				
ANR	4605379	Statement	.	152:41:3401:3401	4605353	13	True				
ANR	4605380	Statement	Number	152:42:3402:3407	4605353	14	True				
ANR	4605381	Statement	(	152:48:3408:3408	4605353	15	True				
ANR	4605382	Statement	)	152:49:3409:3409	4605353	16	True				
ANR	4605383	Statement	+	152:50:3410:3410	4605353	17	True				
ANR	4605384	Statement	1	152:51:3411:3411	4605353	18	True				
ANR	4605385	Statement	]	152:52:3412:3412	4605353	19	True				
ANR	4605386	ExpressionStatement		152:53:3413:3413	4605353	20	True				
ANR	4605387	ExpressionStatement	ASSERT ( args_array )	153:1:3416:3434	4605353	21	True				
ANR	4605388	CallExpression	ASSERT ( args_array )		4605353	0					
ANR	4605389	Callee	ASSERT		4605353	0					
ANR	4605390	Identifier	ASSERT		4605353	0					
ANR	4605391	ArgumentList	args_array		4605353	1					
ANR	4605392	Argument	args_array		4605353	0					
ANR	4605393	Identifier	args_array		4605353	0					
ANR	4605394	ForStatement	for ( i = 0 ; it . Next ( arg ) ; i ++ )		4605353	22					
ANR	4605395	ForInit	i = 0 ;	154:5:3441:3444	4605353	0	True				
ANR	4605396	AssignmentExpression	i = 0		4605353	0		=			
ANR	4605397	Identifier	i		4605353	0					
ANR	4605398	PrimaryExpression	0		4605353	1					
ANR	4605399	Condition	it . Next ( arg )	154:9:3445:3456	4605353	1	True				
ANR	4605400	CallExpression	it . Next ( arg )		4605353	0					
ANR	4605401	Callee	it . Next		4605353	0					
ANR	4605402	MemberAccess	it . Next		4605353	0					
ANR	4605403	Identifier	it		4605353	0					
ANR	4605404	Identifier	Next		4605353	1					
ANR	4605405	ArgumentList	arg		4605353	1					
ANR	4605406	Argument	arg		4605353	0					
ANR	4605407	Identifier	arg		4605353	0					
ANR	4605408	PostIncDecOperationExpression	i ++	154:22:3458:3460	4605353	2	True				
ANR	4605409	Identifier	i		4605353	0					
ANR	4605410	IncDec	++		4605353	1					
ANR	4605411	CompoundStatement		7:27:173:173	4605353	3					
ANR	4605412	ExpressionStatement	args_array [ i ] = strnewp ( arg -> Value ( ) )	155:2:3467:3504	4605353	0	True				
ANR	4605413	AssignmentExpression	args_array [ i ] = strnewp ( arg -> Value ( ) )		4605353	0		=			
ANR	4605414	ArrayIndexing	args_array [ i ]		4605353	0					
ANR	4605415	Identifier	args_array		4605353	0					
ANR	4605416	Identifier	i		4605353	1					
ANR	4605417	CallExpression	strnewp ( arg -> Value ( ) )		4605353	1					
ANR	4605418	Callee	strnewp		4605353	0					
ANR	4605419	Identifier	strnewp		4605353	0					
ANR	4605420	ArgumentList	arg -> Value ( )		4605353	1					
ANR	4605421	Argument	arg -> Value ( )		4605353	0					
ANR	4605422	CallExpression	arg -> Value ( )		4605353	0					
ANR	4605423	Callee	arg -> Value		4605353	0					
ANR	4605424	PtrMemberAccess	arg -> Value		4605353	0					
ANR	4605425	Identifier	arg		4605353	0					
ANR	4605426	Identifier	Value		4605353	1					
ANR	4605427	ArgumentList			4605353	1					
ANR	4605428	ExpressionStatement	ASSERT ( args_array [ i ] )	156:2:3508:3529	4605353	1	True				
ANR	4605429	CallExpression	ASSERT ( args_array [ i ] )		4605353	0					
ANR	4605430	Callee	ASSERT		4605353	0					
ANR	4605431	Identifier	ASSERT		4605353	0					
ANR	4605432	ArgumentList	args_array [ i ]		4605353	1					
ANR	4605433	Argument	args_array [ i ]		4605353	0					
ANR	4605434	ArrayIndexing	args_array [ i ]		4605353	0					
ANR	4605435	Identifier	args_array		4605353	0					
ANR	4605436	Identifier	i		4605353	1					
ANR	4605437	ExpressionStatement	args_array [ i ] = NULL	158:1:3535:3555	4605353	23	True				
ANR	4605438	AssignmentExpression	args_array [ i ] = NULL		4605353	0		=			
ANR	4605439	ArrayIndexing	args_array [ i ]		4605353	0					
ANR	4605440	Identifier	args_array		4605353	0					
ANR	4605441	Identifier	i		4605353	1					
ANR	4605442	Identifier	NULL		4605353	1					
ANR	4605443	ReturnStatement	return args_array ;	159:1:3558:3575	4605353	24	True				
ANR	4605444	Identifier	args_array		4605353	0					
ANR	4605445	ReturnType	static char * *		4605353	1					
ANR	4605446	Identifier	ArgListToArgsArray		4605353	2					
ANR	4605447	ParameterList	SimpleList < MyString > const & args_list		4605353	3					
ANR	4605448	Parameter	SimpleList < MyString > const & args_list	147:19:3250:3286	4605353	0	True				
ANR	4605449	ParameterType	SimpleList < MyString > const &		4605353	0					
ANR	4605450	Identifier	args_list		4605353	1					
ANR	4605451	CFGEntryNode	ENTRY		4605353		True				
ANR	4605452	CFGExitNode	EXIT		4605353		True				
ANR	4605453	Symbol	args_list		4605353						
ANR	4605454	Symbol	arg -> Value		4605353						
ANR	4605455	Symbol	it . Next		4605353						
ANR	4605456	Symbol	* i		4605353						
ANR	4605457	Symbol	NULL		4605353						
ANR	4605458	Symbol	arg		4605353						
ANR	4605459	Symbol	i		4605353						
ANR	4605460	Symbol	strnewp		4605353						
ANR	4605461	Symbol	* args_array		4605353						
ANR	4605462	Symbol	it		4605353						
ANR	4605463	Symbol	args_array		4605353						
ANR	4605464	Symbol	* arg		4605353						
ANR	4605465	Function	split_args	162:0:3580:3851							
ANR	4605466	FunctionDef	"split_args (char const * args , char * * * args_array , MyString * error_msg)"		4605465	0					
ANR	4605467	CompoundStatement		162:73:3653:3851	4605465	0					
ANR	4605468	IdentifierDeclStatement	SimpleList < MyString > args_list ;	163:1:3656:3686	4605465	0	True				
ANR	4605469	IdentifierDecl	args_list		4605465	0					
ANR	4605470	IdentifierDeclType	SimpleList < MyString >		4605465	0					
ANR	4605471	Identifier	args_list		4605465	1					
ANR	4605472	IfStatement	"if ( ! split_args ( args , & args_list , error_msg ) )"		4605465	1					
ANR	4605473	Condition	"! split_args ( args , & args_list , error_msg )"	164:4:3692:3729	4605465	0	True				
ANR	4605474	UnaryOperationExpression	"! split_args ( args , & args_list , error_msg )"		4605465	0					
ANR	4605475	UnaryOperator	!		4605465	0					
ANR	4605476	CallExpression	"split_args ( args , & args_list , error_msg )"		4605465	1					
ANR	4605477	Callee	split_args		4605465	0					
ANR	4605478	Identifier	split_args		4605465	0					
ANR	4605479	ArgumentList	args		4605465	1					
ANR	4605480	Argument	args		4605465	0					
ANR	4605481	Identifier	args		4605465	0					
ANR	4605482	Argument	& args_list		4605465	1					
ANR	4605483	UnaryOperationExpression	& args_list		4605465	0					
ANR	4605484	UnaryOperator	&		4605465	0					
ANR	4605485	Identifier	args_list		4605465	1					
ANR	4605486	Argument	error_msg		4605465	2					
ANR	4605487	Identifier	error_msg		4605465	0					
ANR	4605488	CompoundStatement		3:44:78:78	4605465	1					
ANR	4605489	ExpressionStatement	* args_array = NULL	165:2:3736:3754	4605465	0	True				
ANR	4605490	AssignmentExpression	* args_array = NULL		4605465	0		=			
ANR	4605491	UnaryOperationExpression	* args_array		4605465	0					
ANR	4605492	UnaryOperator	*		4605465	0					
ANR	4605493	Identifier	args_array		4605465	1					
ANR	4605494	Identifier	NULL		4605465	1					
ANR	4605495	ReturnStatement	return false ;	166:2:3758:3770	4605465	1	True				
ANR	4605496	Identifier	false		4605465	0					
ANR	4605497	ExpressionStatement	* args_array = ArgListToArgsArray ( args_list )	169:1:3777:3820	4605465	2	True				
ANR	4605498	AssignmentExpression	* args_array = ArgListToArgsArray ( args_list )		4605465	0		=			
ANR	4605499	UnaryOperationExpression	* args_array		4605465	0					
ANR	4605500	UnaryOperator	*		4605465	0					
ANR	4605501	Identifier	args_array		4605465	1					
ANR	4605502	CallExpression	ArgListToArgsArray ( args_list )		4605465	1					
ANR	4605503	Callee	ArgListToArgsArray		4605465	0					
ANR	4605504	Identifier	ArgListToArgsArray		4605465	0					
ANR	4605505	ArgumentList	args_list		4605465	1					
ANR	4605506	Argument	args_list		4605465	0					
ANR	4605507	Identifier	args_list		4605465	0					
ANR	4605508	ReturnStatement	return * args_array != NULL ;	170:1:3823:3849	4605465	3	True				
ANR	4605509	EqualityExpression	* args_array != NULL		4605465	0		!=			
ANR	4605510	UnaryOperationExpression	* args_array		4605465	0					
ANR	4605511	UnaryOperator	*		4605465	0					
ANR	4605512	Identifier	args_array		4605465	1					
ANR	4605513	Identifier	NULL		4605465	1					
ANR	4605514	ReturnType	bool		4605465	1					
ANR	4605515	Identifier	split_args		4605465	2					
ANR	4605516	ParameterList	"char const * args , char * * * args_array , MyString * error_msg"		4605465	3					
ANR	4605517	Parameter	char const * args	162:16:3596:3611	4605465	0	True				
ANR	4605518	ParameterType	char const *		4605465	0					
ANR	4605519	Identifier	args		4605465	1					
ANR	4605520	Parameter	char * * * args_array	162:33:3613:3630	4605465	1	True				
ANR	4605521	ParameterType	char * * *		4605465	0					
ANR	4605522	Identifier	args_array		4605465	1					
ANR	4605523	Parameter	MyString * error_msg	162:52:3632:3650	4605465	2	True				
ANR	4605524	ParameterType	MyString *		4605465	0					
ANR	4605525	Identifier	error_msg		4605465	1					
ANR	4605526	CFGEntryNode	ENTRY		4605465		True				
ANR	4605527	CFGExitNode	EXIT		4605465		True				
ANR	4605528	Symbol	args		4605465						
ANR	4605529	Symbol	args_list		4605465						
ANR	4605530	Symbol	error_msg		4605465						
ANR	4605531	Symbol	NULL		4605465						
ANR	4605532	Symbol	split_args		4605465						
ANR	4605533	Symbol	& args_list		4605465						
ANR	4605534	Symbol	false		4605465						
ANR	4605535	Symbol	* args_array		4605465						
ANR	4605536	Symbol	ArgListToArgsArray		4605465						
ANR	4605537	Symbol	args_array		4605465						
ANR	4605538	Function	deleteStringArray	173:0:3854:3985							
ANR	4605539	FunctionDef	deleteStringArray (char * * array)		4605538	0					
ANR	4605540	CompoundStatement		175:0:3891:3985	4605538	0					
ANR	4605541	IfStatement	if ( ! array )		4605538	0					
ANR	4605542	Condition	! array	176:4:3897:3902	4605538	0	True				
ANR	4605543	UnaryOperationExpression	! array		4605538	0					
ANR	4605544	UnaryOperator	!		4605538	0					
ANR	4605545	Identifier	array		4605538	1					
ANR	4605546	ReturnStatement	return ;	176:12:3905:3911	4605538	1	True				
ANR	4605547	ForStatement	for ( int i = 0 ; array [ i ] ; i ++ )		4605538	1					
ANR	4605548	ForInit	int i = 0 ;	177:5:3918:3925	4605538	0	True				
ANR	4605549	IdentifierDeclStatement	int i = 0 ;		4605538	0					
ANR	4605550	IdentifierDecl	i = 0		4605538	0					
ANR	4605551	IdentifierDeclType	int		4605538	0					
ANR	4605552	Identifier	i		4605538	1					
ANR	4605553	AssignmentExpression	i = 0		4605538	2		=			
ANR	4605554	Identifier	i		4605538	0					
ANR	4605555	PrimaryExpression	0		4605538	1					
ANR	4605556	Condition	array [ i ]	177:13:3926:3933	4605538	1	True				
ANR	4605557	ArrayIndexing	array [ i ]		4605538	0					
ANR	4605558	Identifier	array		4605538	0					
ANR	4605559	Identifier	i		4605538	1					
ANR	4605560	PostIncDecOperationExpression	i ++	177:22:3935:3937	4605538	2	True				
ANR	4605561	Identifier	i		4605538	0					
ANR	4605562	IncDec	++		4605538	1					
ANR	4605563	CompoundStatement		3:27:48:48	4605538	3					
ANR	4605564	Statement	delete	178:2:3944:3949	4605538	0	True				
ANR	4605565	Statement	[	178:9:3951:3951	4605538	1	True				
ANR	4605566	Statement	]	178:10:3952:3952	4605538	2	True				
ANR	4605567	ExpressionStatement	array [ i ]	178:12:3954:3962	4605538	3	True				
ANR	4605568	ArrayIndexing	array [ i ]		4605538	0					
ANR	4605569	Identifier	array		4605538	0					
ANR	4605570	Identifier	i		4605538	1					
ANR	4605571	Statement	delete	180:1:3968:3973	4605538	2	True				
ANR	4605572	Statement	[	180:8:3975:3975	4605538	3	True				
ANR	4605573	Statement	]	180:9:3976:3976	4605538	4	True				
ANR	4605574	ExpressionStatement	array	180:11:3978:3983	4605538	5	True				
ANR	4605575	Identifier	array		4605538	0					
ANR	4605576	ReturnType	void		4605538	1					
ANR	4605577	Identifier	deleteStringArray		4605538	2					
ANR	4605578	ParameterList	char * * array		4605538	3					
ANR	4605579	Parameter	char * * array	174:18:3877:3888	4605538	0	True				
ANR	4605580	ParameterType	char * *		4605538	0					
ANR	4605581	Identifier	array		4605538	1					
ANR	4605582	CFGEntryNode	ENTRY		4605538		True				
ANR	4605583	CFGExitNode	EXIT		4605538		True				
ANR	4605584	Symbol	* i		4605538						
ANR	4605585	Symbol	array		4605538						
ANR	4605586	Symbol	i		4605538						
ANR	4605587	Symbol	* array		4605538						
ANR	4605588	Function	ArgList :: Count	184:0:3989:4046							
ANR	4605589	FunctionDef	ArgList :: Count ()		4605588	0					
ANR	4605590	CompoundStatement		185:23:4016:4046	4605588	0					
ANR	4605591	ReturnStatement	return args_list . Number ( ) ;	186:1:4019:4044	4605588	0	True				
ANR	4605592	CallExpression	args_list . Number ( )		4605588	0					
ANR	4605593	Callee	args_list . Number		4605588	0					
ANR	4605594	MemberAccess	args_list . Number		4605588	0					
ANR	4605595	Identifier	args_list		4605588	0					
ANR	4605596	Identifier	Number		4605588	1					
ANR	4605597	ArgumentList			4605588	1					
ANR	4605598	ReturnType	int		4605588	1					
ANR	4605599	Identifier	ArgList :: Count		4605588	2					
ANR	4605600	ParameterList			4605588	3					
ANR	4605601	CFGEntryNode	ENTRY		4605588		True				
ANR	4605602	CFGExitNode	EXIT		4605588		True				
ANR	4605603	Symbol	args_list		4605588						
ANR	4605604	Symbol	args_list . Number		4605588						
ANR	4605605	Function	ArgList :: Clear	188:0:4048:4132							
ANR	4605606	FunctionDef	ArgList :: Clear ()		4605605	0					
ANR	4605607	CompoundStatement		189:17:4070:4132	4605605	0					
ANR	4605608	ExpressionStatement	args_list . Clear ( )	190:1:4073:4090	4605605	0	True				
ANR	4605609	CallExpression	args_list . Clear ( )		4605605	0					
ANR	4605610	Callee	args_list . Clear		4605605	0					
ANR	4605611	MemberAccess	args_list . Clear		4605605	0					
ANR	4605612	Identifier	args_list		4605605	0					
ANR	4605613	Identifier	Clear		4605605	1					
ANR	4605614	ArgumentList			4605605	1					
ANR	4605615	ExpressionStatement	input_was_unknown_platform_v1 = false	191:1:4093:4130	4605605	1	True				
ANR	4605616	AssignmentExpression	input_was_unknown_platform_v1 = false		4605605	0		=			
ANR	4605617	Identifier	input_was_unknown_platform_v1		4605605	0					
ANR	4605618	Identifier	false		4605605	1					
ANR	4605619	ReturnType	void		4605605	1					
ANR	4605620	Identifier	ArgList :: Clear		4605605	2					
ANR	4605621	ParameterList			4605605	3					
ANR	4605622	CFGEntryNode	ENTRY		4605605		True				
ANR	4605623	CFGExitNode	EXIT		4605605		True				
ANR	4605624	Symbol	args_list		4605605						
ANR	4605625	Symbol	input_was_unknown_platform_v1		4605605						
ANR	4605626	Symbol	false		4605605						
ANR	4605627	Function	ArgList :: GetArg	194:0:4135:4328							
ANR	4605628	FunctionDef	ArgList :: GetArg (int n)		4605627	0					
ANR	4605629	CompoundStatement		195:29:4177:4328	4605627	0					
ANR	4605630	IdentifierDeclStatement	SimpleListIterator < MyString > it ( args_list ) ;	196:1:4180:4222	4605627	0	True				
ANR	4605631	IdentifierDecl	it ( args_list )		4605627	0					
ANR	4605632	IdentifierDeclType	SimpleListIterator < MyString >		4605627	0					
ANR	4605633	Identifier	it		4605627	1					
ANR	4605634	Identifier	args_list		4605627	2					
ANR	4605635	IdentifierDeclStatement	MyString * arg ;	197:1:4225:4238	4605627	1	True				
ANR	4605636	IdentifierDecl	* arg		4605627	0					
ANR	4605637	IdentifierDeclType	MyString *		4605627	0					
ANR	4605638	Identifier	arg		4605627	1					
ANR	4605639	IdentifierDeclStatement	int i ;	198:1:4241:4246	4605627	2	True				
ANR	4605640	IdentifierDecl	i		4605627	0					
ANR	4605641	IdentifierDeclType	int		4605627	0					
ANR	4605642	Identifier	i		4605627	1					
ANR	4605643	ForStatement	for ( i = 0 ; it . Next ( arg ) ; i ++ )		4605627	3					
ANR	4605644	ForInit	i = 0 ;	199:5:4253:4256	4605627	0	True				
ANR	4605645	AssignmentExpression	i = 0		4605627	0		=			
ANR	4605646	Identifier	i		4605627	0					
ANR	4605647	PrimaryExpression	0		4605627	1					
ANR	4605648	Condition	it . Next ( arg )	199:9:4257:4268	4605627	1	True				
ANR	4605649	CallExpression	it . Next ( arg )		4605627	0					
ANR	4605650	Callee	it . Next		4605627	0					
ANR	4605651	MemberAccess	it . Next		4605627	0					
ANR	4605652	Identifier	it		4605627	0					
ANR	4605653	Identifier	Next		4605627	1					
ANR	4605654	ArgumentList	arg		4605627	1					
ANR	4605655	Argument	arg		4605627	0					
ANR	4605656	Identifier	arg		4605627	0					
ANR	4605657	PostIncDecOperationExpression	i ++	199:22:4270:4272	4605627	2	True				
ANR	4605658	Identifier	i		4605627	0					
ANR	4605659	IncDec	++		4605627	1					
ANR	4605660	CompoundStatement		5:27:97:97	4605627	3					
ANR	4605661	IfStatement	if ( i == n )		4605627	0					
ANR	4605662	Condition	i == n	200:5:4282:4287	4605627	0	True				
ANR	4605663	EqualityExpression	i == n		4605627	0		==			
ANR	4605664	Identifier	i		4605627	0					
ANR	4605665	Identifier	n		4605627	1					
ANR	4605666	ReturnStatement	return arg -> Value ( ) ;	200:13:4290:4309	4605627	1	True				
ANR	4605667	CallExpression	arg -> Value ( )		4605627	0					
ANR	4605668	Callee	arg -> Value		4605627	0					
ANR	4605669	PtrMemberAccess	arg -> Value		4605627	0					
ANR	4605670	Identifier	arg		4605627	0					
ANR	4605671	Identifier	Value		4605627	1					
ANR	4605672	ArgumentList			4605627	1					
ANR	4605673	ReturnStatement	return NULL ;	202:1:4315:4326	4605627	4	True				
ANR	4605674	Identifier	NULL		4605627	0					
ANR	4605675	ReturnType	char const *		4605627	1					
ANR	4605676	Identifier	ArgList :: GetArg		4605627	2					
ANR	4605677	ParameterList	int n		4605627	3					
ANR	4605678	Parameter	int n	195:16:4164:4168	4605627	0	True				
ANR	4605679	ParameterType	int		4605627	0					
ANR	4605680	Identifier	n		4605627	1					
ANR	4605681	CFGEntryNode	ENTRY		4605627		True				
ANR	4605682	CFGExitNode	EXIT		4605627		True				
ANR	4605683	Symbol	arg -> Value		4605627						
ANR	4605684	Symbol	it . Next		4605627						
ANR	4605685	Symbol	NULL		4605627						
ANR	4605686	Symbol	arg		4605627						
ANR	4605687	Symbol	i		4605627						
ANR	4605688	Symbol	it		4605627						
ANR	4605689	Symbol	n		4605627						
ANR	4605690	Symbol	* arg		4605627						
ANR	4605691	Function	ArgList :: AppendArg	205:0:4331:4433							
ANR	4605692	FunctionDef	ArgList :: AppendArg (MyString arg)		4605691	0					
ANR	4605693	CompoundStatement		206:33:4369:4433	4605691	0					
ANR	4605694	ExpressionStatement	ASSERT ( arg . Value ( ) )	207:1:4372:4391	4605691	0	True				
ANR	4605695	CallExpression	ASSERT ( arg . Value ( ) )		4605691	0					
ANR	4605696	Callee	ASSERT		4605691	0					
ANR	4605697	Identifier	ASSERT		4605691	0					
ANR	4605698	ArgumentList	arg . Value ( )		4605691	1					
ANR	4605699	Argument	arg . Value ( )		4605691	0					
ANR	4605700	CallExpression	arg . Value ( )		4605691	0					
ANR	4605701	Callee	arg . Value		4605691	0					
ANR	4605702	MemberAccess	arg . Value		4605691	0					
ANR	4605703	Identifier	arg		4605691	0					
ANR	4605704	Identifier	Value		4605691	1					
ANR	4605705	ArgumentList			4605691	1					
ANR	4605706	ExpressionStatement	ASSERT ( args_list . Append ( arg . Value ( ) ) )	208:1:4394:4431	4605691	1	True				
ANR	4605707	CallExpression	ASSERT ( args_list . Append ( arg . Value ( ) ) )		4605691	0					
ANR	4605708	Callee	ASSERT		4605691	0					
ANR	4605709	Identifier	ASSERT		4605691	0					
ANR	4605710	ArgumentList	args_list . Append ( arg . Value ( ) )		4605691	1					
ANR	4605711	Argument	args_list . Append ( arg . Value ( ) )		4605691	0					
ANR	4605712	CallExpression	args_list . Append ( arg . Value ( ) )		4605691	0					
ANR	4605713	Callee	args_list . Append		4605691	0					
ANR	4605714	MemberAccess	args_list . Append		4605691	0					
ANR	4605715	Identifier	args_list		4605691	0					
ANR	4605716	Identifier	Append		4605691	1					
ANR	4605717	ArgumentList	arg . Value ( )		4605691	1					
ANR	4605718	Argument	arg . Value ( )		4605691	0					
ANR	4605719	CallExpression	arg . Value ( )		4605691	0					
ANR	4605720	Callee	arg . Value		4605691	0					
ANR	4605721	MemberAccess	arg . Value		4605691	0					
ANR	4605722	Identifier	arg		4605691	0					
ANR	4605723	Identifier	Value		4605691	1					
ANR	4605724	ArgumentList			4605691	1					
ANR	4605725	ReturnType	void		4605691	1					
ANR	4605726	Identifier	ArgList :: AppendArg		4605691	2					
ANR	4605727	ParameterList	MyString arg		4605691	3					
ANR	4605728	Parameter	MyString arg	206:19:4355:4366	4605691	0	True				
ANR	4605729	ParameterType	MyString		4605691	0					
ANR	4605730	Identifier	arg		4605691	1					
ANR	4605731	CFGEntryNode	ENTRY		4605691		True				
ANR	4605732	CFGExitNode	EXIT		4605691		True				
ANR	4605733	Symbol	args_list		4605691						
ANR	4605734	Symbol	arg		4605691						
ANR	4605735	Symbol	arg . Value		4605691						
ANR	4605736	Symbol	args_list . Append		4605691						
ANR	4605737	Function	ArgList :: AppendArg	211:0:4436:4525							
ANR	4605738	FunctionDef	ArgList :: AppendArg (char const * arg)		4605737	0					
ANR	4605739	CompoundStatement		212:36:4477:4525	4605737	0					
ANR	4605740	ExpressionStatement	ASSERT ( arg )	213:1:4480:4491	4605737	0	True				
ANR	4605741	CallExpression	ASSERT ( arg )		4605737	0					
ANR	4605742	Callee	ASSERT		4605737	0					
ANR	4605743	Identifier	ASSERT		4605737	0					
ANR	4605744	ArgumentList	arg		4605737	1					
ANR	4605745	Argument	arg		4605737	0					
ANR	4605746	Identifier	arg		4605737	0					
ANR	4605747	ExpressionStatement	ASSERT ( args_list . Append ( arg ) )	214:1:4494:4523	4605737	1	True				
ANR	4605748	CallExpression	ASSERT ( args_list . Append ( arg ) )		4605737	0					
ANR	4605749	Callee	ASSERT		4605737	0					
ANR	4605750	Identifier	ASSERT		4605737	0					
ANR	4605751	ArgumentList	args_list . Append ( arg )		4605737	1					
ANR	4605752	Argument	args_list . Append ( arg )		4605737	0					
ANR	4605753	CallExpression	args_list . Append ( arg )		4605737	0					
ANR	4605754	Callee	args_list . Append		4605737	0					
ANR	4605755	MemberAccess	args_list . Append		4605737	0					
ANR	4605756	Identifier	args_list		4605737	0					
ANR	4605757	Identifier	Append		4605737	1					
ANR	4605758	ArgumentList	arg		4605737	1					
ANR	4605759	Argument	arg		4605737	0					
ANR	4605760	Identifier	arg		4605737	0					
ANR	4605761	ReturnType	void		4605737	1					
ANR	4605762	Identifier	ArgList :: AppendArg		4605737	2					
ANR	4605763	ParameterList	char const * arg		4605737	3					
ANR	4605764	Parameter	char const * arg	212:19:4460:4474	4605737	0	True				
ANR	4605765	ParameterType	char const *		4605737	0					
ANR	4605766	Identifier	arg		4605737	1					
ANR	4605767	CFGEntryNode	ENTRY		4605737		True				
ANR	4605768	CFGExitNode	EXIT		4605737		True				
ANR	4605769	Symbol	args_list		4605737						
ANR	4605770	Symbol	arg		4605737						
ANR	4605771	Symbol	args_list . Append		4605737						
ANR	4605772	Function	ArgList :: AppendArg	217:0:4528:4625							
ANR	4605773	FunctionDef	ArgList :: AppendArg (int arg)		4605772	0					
ANR	4605774	CompoundStatement		218:28:4561:4625	4605772	0					
ANR	4605775	IdentifierDeclStatement	char buf [ 100 ] ;	219:1:4564:4577	4605772	0	True				
ANR	4605776	IdentifierDecl	buf [ 100 ]		4605772	0					
ANR	4605777	IdentifierDeclType	char [ 100 ]		4605772	0					
ANR	4605778	Identifier	buf		4605772	1					
ANR	4605779	PrimaryExpression	100		4605772	2					
ANR	4605780	ExpressionStatement	"snprintf ( buf , 100 , ""%d"" , arg )"	220:1:4580:4606	4605772	1	True				
ANR	4605781	CallExpression	"snprintf ( buf , 100 , ""%d"" , arg )"		4605772	0					
ANR	4605782	Callee	snprintf		4605772	0					
ANR	4605783	Identifier	snprintf		4605772	0					
ANR	4605784	ArgumentList	buf		4605772	1					
ANR	4605785	Argument	buf		4605772	0					
ANR	4605786	Identifier	buf		4605772	0					
ANR	4605787	Argument	100		4605772	1					
ANR	4605788	PrimaryExpression	100		4605772	0					
ANR	4605789	Argument	"""%d"""		4605772	2					
ANR	4605790	PrimaryExpression	"""%d"""		4605772	0					
ANR	4605791	Argument	arg		4605772	3					
ANR	4605792	Identifier	arg		4605772	0					
ANR	4605793	ExpressionStatement	AppendArg ( buf )	221:1:4609:4623	4605772	2	True				
ANR	4605794	CallExpression	AppendArg ( buf )		4605772	0					
ANR	4605795	Callee	AppendArg		4605772	0					
ANR	4605796	Identifier	AppendArg		4605772	0					
ANR	4605797	ArgumentList	buf		4605772	1					
ANR	4605798	Argument	buf		4605772	0					
ANR	4605799	Identifier	buf		4605772	0					
ANR	4605800	ReturnType	void		4605772	1					
ANR	4605801	Identifier	ArgList :: AppendArg		4605772	2					
ANR	4605802	ParameterList	int arg		4605772	3					
ANR	4605803	Parameter	int arg	218:19:4552:4558	4605772	0	True				
ANR	4605804	ParameterType	int		4605772	0					
ANR	4605805	Identifier	arg		4605772	1					
ANR	4605806	CFGEntryNode	ENTRY		4605772		True				
ANR	4605807	CFGExitNode	EXIT		4605772		True				
ANR	4605808	Symbol	buf		4605772						
ANR	4605809	Symbol	arg		4605772						
ANR	4605810	Function	ArgList :: RemoveArg	224:0:4628:4818							
ANR	4605811	FunctionDef	ArgList :: RemoveArg (int pos)		4605810	0					
ANR	4605812	CompoundStatement		225:28:4661:4818	4605810	0					
ANR	4605813	IdentifierDeclStatement	MyString arg ;	226:1:4664:4676	4605810	0	True				
ANR	4605814	IdentifierDecl	arg		4605810	0					
ANR	4605815	IdentifierDeclType	MyString		4605810	0					
ANR	4605816	Identifier	arg		4605810	1					
ANR	4605817	ExpressionStatement	ASSERT ( pos >= 0 && pos < Count ( ) )	227:1:4679:4712	4605810	1	True				
ANR	4605818	CallExpression	ASSERT ( pos >= 0 && pos < Count ( ) )		4605810	0					
ANR	4605819	Callee	ASSERT		4605810	0					
ANR	4605820	Identifier	ASSERT		4605810	0					
ANR	4605821	ArgumentList	pos >= 0 && pos < Count ( )		4605810	1					
ANR	4605822	Argument	pos >= 0 && pos < Count ( )		4605810	0					
ANR	4605823	AndExpression	pos >= 0 && pos < Count ( )		4605810	0		&&			
ANR	4605824	RelationalExpression	pos >= 0		4605810	0		>=			
ANR	4605825	Identifier	pos		4605810	0					
ANR	4605826	PrimaryExpression	0		4605810	1					
ANR	4605827	RelationalExpression	pos < Count ( )		4605810	1		<			
ANR	4605828	Identifier	pos		4605810	0					
ANR	4605829	CallExpression	Count ( )		4605810	1					
ANR	4605830	Callee	Count		4605810	0					
ANR	4605831	Identifier	Count		4605810	0					
ANR	4605832	ArgumentList			4605810	1					
ANR	4605833	ExpressionStatement	args_list . Rewind ( )	228:1:4715:4733	4605810	2	True				
ANR	4605834	CallExpression	args_list . Rewind ( )		4605810	0					
ANR	4605835	Callee	args_list . Rewind		4605810	0					
ANR	4605836	MemberAccess	args_list . Rewind		4605810	0					
ANR	4605837	Identifier	args_list		4605810	0					
ANR	4605838	Identifier	Rewind		4605810	1					
ANR	4605839	ArgumentList			4605810	1					
ANR	4605840	ForStatement	for ( int i = 0 ; i <= pos ; i ++ )		4605810	3					
ANR	4605841	ForInit	int i = 0 ;	229:5:4740:4747	4605810	0	True				
ANR	4605842	IdentifierDeclStatement	int i = 0 ;		4605810	0					
ANR	4605843	IdentifierDecl	i = 0		4605810	0					
ANR	4605844	IdentifierDeclType	int		4605810	0					
ANR	4605845	Identifier	i		4605810	1					
ANR	4605846	AssignmentExpression	i = 0		4605810	2		=			
ANR	4605847	Identifier	i		4605810	0					
ANR	4605848	PrimaryExpression	0		4605810	1					
ANR	4605849	Condition	i <= pos	229:13:4748:4755	4605810	1	True				
ANR	4605850	RelationalExpression	i <= pos		4605810	0		<=			
ANR	4605851	Identifier	i		4605810	0					
ANR	4605852	Identifier	pos		4605810	1					
ANR	4605853	PostIncDecOperationExpression	i ++	229:22:4757:4759	4605810	2	True				
ANR	4605854	Identifier	i		4605810	0					
ANR	4605855	IncDec	++		4605810	1					
ANR	4605856	CompoundStatement		5:27:100:100	4605810	3					
ANR	4605857	ExpressionStatement	args_list . Next ( arg )	230:2:4766:4785	4605810	0	True				
ANR	4605858	CallExpression	args_list . Next ( arg )		4605810	0					
ANR	4605859	Callee	args_list . Next		4605810	0					
ANR	4605860	MemberAccess	args_list . Next		4605810	0					
ANR	4605861	Identifier	args_list		4605810	0					
ANR	4605862	Identifier	Next		4605810	1					
ANR	4605863	ArgumentList	arg		4605810	1					
ANR	4605864	Argument	arg		4605810	0					
ANR	4605865	Identifier	arg		4605810	0					
ANR	4605866	ExpressionStatement	args_list . DeleteCurrent ( )	232:1:4791:4816	4605810	4	True				
ANR	4605867	CallExpression	args_list . DeleteCurrent ( )		4605810	0					
ANR	4605868	Callee	args_list . DeleteCurrent		4605810	0					
ANR	4605869	MemberAccess	args_list . DeleteCurrent		4605810	0					
ANR	4605870	Identifier	args_list		4605810	0					
ANR	4605871	Identifier	DeleteCurrent		4605810	1					
ANR	4605872	ArgumentList			4605810	1					
ANR	4605873	ReturnType	void		4605810	1					
ANR	4605874	Identifier	ArgList :: RemoveArg		4605810	2					
ANR	4605875	ParameterList	int pos		4605810	3					
ANR	4605876	Parameter	int pos	225:19:4652:4658	4605810	0	True				
ANR	4605877	ParameterType	int		4605810	0					
ANR	4605878	Identifier	pos		4605810	1					
ANR	4605879	CFGEntryNode	ENTRY		4605810		True				
ANR	4605880	CFGExitNode	EXIT		4605810		True				
ANR	4605881	Symbol	args_list		4605810						
ANR	4605882	Symbol	pos		4605810						
ANR	4605883	Symbol	arg		4605810						
ANR	4605884	Symbol	i		4605810						
ANR	4605885	Symbol	Count		4605810						
ANR	4605886	Function	ArgList :: InsertArg	235:0:4821:5170							
ANR	4605887	FunctionDef	"ArgList :: InsertArg (char const * arg , int pos)"		4605886	0					
ANR	4605888	CompoundStatement		236:44:4870:5170	4605886	0					
ANR	4605889	ExpressionStatement	ASSERT ( pos >= 0 && pos <= Count ( ) )	237:1:4873:4907	4605886	0	True				
ANR	4605890	CallExpression	ASSERT ( pos >= 0 && pos <= Count ( ) )		4605886	0					
ANR	4605891	Callee	ASSERT		4605886	0					
ANR	4605892	Identifier	ASSERT		4605886	0					
ANR	4605893	ArgumentList	pos >= 0 && pos <= Count ( )		4605886	1					
ANR	4605894	Argument	pos >= 0 && pos <= Count ( )		4605886	0					
ANR	4605895	AndExpression	pos >= 0 && pos <= Count ( )		4605886	0		&&			
ANR	4605896	RelationalExpression	pos >= 0		4605886	0		>=			
ANR	4605897	Identifier	pos		4605886	0					
ANR	4605898	PrimaryExpression	0		4605886	1					
ANR	4605899	RelationalExpression	pos <= Count ( )		4605886	1		<=			
ANR	4605900	Identifier	pos		4605886	0					
ANR	4605901	CallExpression	Count ( )		4605886	1					
ANR	4605902	Callee	Count		4605886	0					
ANR	4605903	Identifier	Count		4605886	0					
ANR	4605904	ArgumentList			4605886	1					
ANR	4605905	IdentifierDeclStatement	int i ;	239:1:4911:4916	4605886	1	True				
ANR	4605906	IdentifierDecl	i		4605886	0					
ANR	4605907	IdentifierDeclType	int		4605886	0					
ANR	4605908	Identifier	i		4605886	1					
ANR	4605909	IdentifierDeclStatement	char * * args_array = GetStringArray ( ) ;	240:1:4919:4955	4605886	2	True				
ANR	4605910	IdentifierDecl	* * args_array = GetStringArray ( )		4605886	0					
ANR	4605911	IdentifierDeclType	char * *		4605886	0					
ANR	4605912	Identifier	args_array		4605886	1					
ANR	4605913	AssignmentExpression	* * args_array = GetStringArray ( )		4605886	2		=			
ANR	4605914	Identifier	args_array		4605886	0					
ANR	4605915	CallExpression	GetStringArray ( )		4605886	1					
ANR	4605916	Callee	GetStringArray		4605886	0					
ANR	4605917	Identifier	GetStringArray		4605886	0					
ANR	4605918	ArgumentList			4605886	1					
ANR	4605919	ExpressionStatement	args_list . Clear ( )	242:1:4959:4976	4605886	3	True				
ANR	4605920	CallExpression	args_list . Clear ( )		4605886	0					
ANR	4605921	Callee	args_list . Clear		4605886	0					
ANR	4605922	MemberAccess	args_list . Clear		4605886	0					
ANR	4605923	Identifier	args_list		4605886	0					
ANR	4605924	Identifier	Clear		4605886	1					
ANR	4605925	ArgumentList			4605886	1					
ANR	4605926	ForStatement	for ( i = 0 ; args_array [ i ] ; i ++ )		4605886	4					
ANR	4605927	ForInit	i = 0 ;	243:5:4983:4986	4605886	0	True				
ANR	4605928	AssignmentExpression	i = 0		4605886	0		=			
ANR	4605929	Identifier	i		4605886	0					
ANR	4605930	PrimaryExpression	0		4605886	1					
ANR	4605931	Condition	args_array [ i ]	243:9:4987:4999	4605886	1	True				
ANR	4605932	ArrayIndexing	args_array [ i ]		4605886	0					
ANR	4605933	Identifier	args_array		4605886	0					
ANR	4605934	Identifier	i		4605886	1					
ANR	4605935	PostIncDecOperationExpression	i ++	243:23:5001:5003	4605886	2	True				
ANR	4605936	Identifier	i		4605886	0					
ANR	4605937	IncDec	++		4605886	1					
ANR	4605938	CompoundStatement		8:28:135:135	4605886	3					
ANR	4605939	IfStatement	if ( i == pos )		4605886	0					
ANR	4605940	Condition	i == pos	244:5:5013:5020	4605886	0	True				
ANR	4605941	EqualityExpression	i == pos		4605886	0		==			
ANR	4605942	Identifier	i		4605886	0					
ANR	4605943	Identifier	pos		4605886	1					
ANR	4605944	CompoundStatement		9:15:152:152	4605886	1					
ANR	4605945	ExpressionStatement	args_list . Append ( arg )	245:3:5028:5049	4605886	0	True				
ANR	4605946	CallExpression	args_list . Append ( arg )		4605886	0					
ANR	4605947	Callee	args_list . Append		4605886	0					
ANR	4605948	MemberAccess	args_list . Append		4605886	0					
ANR	4605949	Identifier	args_list		4605886	0					
ANR	4605950	Identifier	Append		4605886	1					
ANR	4605951	ArgumentList	arg		4605886	1					
ANR	4605952	Argument	arg		4605886	0					
ANR	4605953	Identifier	arg		4605886	0					
ANR	4605954	ExpressionStatement	args_list . Append ( args_array [ i ] )	247:2:5057:5088	4605886	1	True				
ANR	4605955	CallExpression	args_list . Append ( args_array [ i ] )		4605886	0					
ANR	4605956	Callee	args_list . Append		4605886	0					
ANR	4605957	MemberAccess	args_list . Append		4605886	0					
ANR	4605958	Identifier	args_list		4605886	0					
ANR	4605959	Identifier	Append		4605886	1					
ANR	4605960	ArgumentList	args_array [ i ]		4605886	1					
ANR	4605961	Argument	args_array [ i ]		4605886	0					
ANR	4605962	ArrayIndexing	args_array [ i ]		4605886	0					
ANR	4605963	Identifier	args_array		4605886	0					
ANR	4605964	Identifier	i		4605886	1					
ANR	4605965	IfStatement	if ( i == pos )		4605886	5					
ANR	4605966	Condition	i == pos	249:4:5097:5104	4605886	0	True				
ANR	4605967	EqualityExpression	i == pos		4605886	0		==			
ANR	4605968	Identifier	i		4605886	0					
ANR	4605969	Identifier	pos		4605886	1					
ANR	4605970	CompoundStatement		14:14:236:236	4605886	1					
ANR	4605971	ExpressionStatement	args_list . Append ( arg )	250:2:5111:5132	4605886	0	True				
ANR	4605972	CallExpression	args_list . Append ( arg )		4605886	0					
ANR	4605973	Callee	args_list . Append		4605886	0					
ANR	4605974	MemberAccess	args_list . Append		4605886	0					
ANR	4605975	Identifier	args_list		4605886	0					
ANR	4605976	Identifier	Append		4605886	1					
ANR	4605977	ArgumentList	arg		4605886	1					
ANR	4605978	Argument	arg		4605886	0					
ANR	4605979	Identifier	arg		4605886	0					
ANR	4605980	ExpressionStatement	deleteStringArray ( args_array )	253:1:5139:5168	4605886	6	True				
ANR	4605981	CallExpression	deleteStringArray ( args_array )		4605886	0					
ANR	4605982	Callee	deleteStringArray		4605886	0					
ANR	4605983	Identifier	deleteStringArray		4605886	0					
ANR	4605984	ArgumentList	args_array		4605886	1					
ANR	4605985	Argument	args_array		4605886	0					
ANR	4605986	Identifier	args_array		4605886	0					
ANR	4605987	ReturnType	void		4605886	1					
ANR	4605988	Identifier	ArgList :: InsertArg		4605886	2					
ANR	4605989	ParameterList	"char const * arg , int pos"		4605886	3					
ANR	4605990	Parameter	char const * arg	236:19:4845:4859	4605886	0	True				
ANR	4605991	ParameterType	char const *		4605886	0					
ANR	4605992	Identifier	arg		4605886	1					
ANR	4605993	Parameter	int pos	236:35:4861:4867	4605886	1	True				
ANR	4605994	ParameterType	int		4605886	0					
ANR	4605995	Identifier	pos		4605886	1					
ANR	4605996	CFGEntryNode	ENTRY		4605886		True				
ANR	4605997	CFGExitNode	EXIT		4605886		True				
ANR	4605998	Symbol	args_list		4605886						
ANR	4605999	Symbol	* i		4605886						
ANR	4606000	Symbol	pos		4605886						
ANR	4606001	Symbol	arg		4605886						
ANR	4606002	Symbol	i		4605886						
ANR	4606003	Symbol	* args_array		4605886						
ANR	4606004	Symbol	Count		4605886						
ANR	4606005	Symbol	args_array		4605886						
ANR	4606006	Symbol	GetStringArray		4605886						
ANR	4606007	Function	ArgList :: GetStringArray	256:0:5173:5254							
ANR	4606008	FunctionDef	ArgList :: GetStringArray ()		4606007	0					
ANR	4606009	CompoundStatement		257:32:5213:5254	4606007	0					
ANR	4606010	ReturnStatement	return ArgListToArgsArray ( args_list ) ;	258:1:5216:5252	4606007	0	True				
ANR	4606011	CallExpression	ArgListToArgsArray ( args_list )		4606007	0					
ANR	4606012	Callee	ArgListToArgsArray		4606007	0					
ANR	4606013	Identifier	ArgListToArgsArray		4606007	0					
ANR	4606014	ArgumentList	args_list		4606007	1					
ANR	4606015	Argument	args_list		4606007	0					
ANR	4606016	Identifier	args_list		4606007	0					
ANR	4606017	ReturnType	char * *		4606007	1					
ANR	4606018	Identifier	ArgList :: GetStringArray		4606007	2					
ANR	4606019	ParameterList			4606007	3					
ANR	4606020	CFGEntryNode	ENTRY		4606007		True				
ANR	4606021	CFGExitNode	EXIT		4606007		True				
ANR	4606022	Symbol	args_list		4606007						
ANR	4606023	Symbol	ArgListToArgsArray		4606007						
ANR	4606024	Function	ArgList :: AppendArgsV1RawOrV2Quoted	261:0:5257:5677							
ANR	4606025	FunctionDef	"ArgList :: AppendArgsV1RawOrV2Quoted (char const * args , MyString * error_msg)"		4606024	0					
ANR	4606026	CompoundStatement		263:0:5335:5677	4606024	0					
ANR	4606027	IfStatement	if ( IsV2QuotedString ( args ) )		4606024	0					
ANR	4606028	Condition	IsV2QuotedString ( args )	264:4:5341:5362	4606024	0	True				
ANR	4606029	CallExpression	IsV2QuotedString ( args )		4606024	0					
ANR	4606030	Callee	IsV2QuotedString		4606024	0					
ANR	4606031	Identifier	IsV2QuotedString		4606024	0					
ANR	4606032	ArgumentList	args		4606024	1					
ANR	4606033	Argument	args		4606024	0					
ANR	4606034	Identifier	args		4606024	0					
ANR	4606035	CompoundStatement		4:2:103:114	4606024	1					
ANR	4606036	IdentifierDeclStatement	MyString v2 ;	266:2:5439:5450	4606024	0	True				
ANR	4606037	IdentifierDecl	v2		4606024	0					
ANR	4606038	IdentifierDeclType	MyString		4606024	0					
ANR	4606039	Identifier	v2		4606024	1					
ANR	4606040	IfStatement	"if ( ! V2QuotedToV2Raw ( args , & v2 , error_msg ) )"		4606024	1					
ANR	4606041	Condition	"! V2QuotedToV2Raw ( args , & v2 , error_msg )"	267:5:5457:5492	4606024	0	True				
ANR	4606042	UnaryOperationExpression	"! V2QuotedToV2Raw ( args , & v2 , error_msg )"		4606024	0					
ANR	4606043	UnaryOperator	!		4606024	0					
ANR	4606044	CallExpression	"V2QuotedToV2Raw ( args , & v2 , error_msg )"		4606024	1					
ANR	4606045	Callee	V2QuotedToV2Raw		4606024	0					
ANR	4606046	Identifier	V2QuotedToV2Raw		4606024	0					
ANR	4606047	ArgumentList	args		4606024	1					
ANR	4606048	Argument	args		4606024	0					
ANR	4606049	Identifier	args		4606024	0					
ANR	4606050	Argument	& v2		4606024	1					
ANR	4606051	UnaryOperationExpression	& v2		4606024	0					
ANR	4606052	UnaryOperator	&		4606024	0					
ANR	4606053	Identifier	v2		4606024	1					
ANR	4606054	Argument	error_msg		4606024	2					
ANR	4606055	Identifier	error_msg		4606024	0					
ANR	4606056	CompoundStatement		5:43:159:159	4606024	1					
ANR	4606057	ReturnStatement	return false ;	268:3:5500:5512	4606024	0	True				
ANR	4606058	Identifier	false		4606024	0					
ANR	4606059	ReturnStatement	"return AppendArgsV2Raw ( v2 . Value ( ) , error_msg ) ;"	270:2:5520:5564	4606024	2	True				
ANR	4606060	CallExpression	"AppendArgsV2Raw ( v2 . Value ( ) , error_msg )"		4606024	0					
ANR	4606061	Callee	AppendArgsV2Raw		4606024	0					
ANR	4606062	Identifier	AppendArgsV2Raw		4606024	0					
ANR	4606063	ArgumentList	v2 . Value ( )		4606024	1					
ANR	4606064	Argument	v2 . Value ( )		4606024	0					
ANR	4606065	CallExpression	v2 . Value ( )		4606024	0					
ANR	4606066	Callee	v2 . Value		4606024	0					
ANR	4606067	MemberAccess	v2 . Value		4606024	0					
ANR	4606068	Identifier	v2		4606024	0					
ANR	4606069	Identifier	Value		4606024	1					
ANR	4606070	ArgumentList			4606024	1					
ANR	4606071	Argument	error_msg		4606024	1					
ANR	4606072	Identifier	error_msg		4606024	0					
ANR	4606073	ReturnStatement	"return AppendArgsV1Raw ( args , error_msg ) ;"	275:1:5637:5675	4606024	1	True				
ANR	4606074	CallExpression	"AppendArgsV1Raw ( args , error_msg )"		4606024	0					
ANR	4606075	Callee	AppendArgsV1Raw		4606024	0					
ANR	4606076	Identifier	AppendArgsV1Raw		4606024	0					
ANR	4606077	ArgumentList	args		4606024	1					
ANR	4606078	Argument	args		4606024	0					
ANR	4606079	Identifier	args		4606024	0					
ANR	4606080	Argument	error_msg		4606024	1					
ANR	4606081	Identifier	error_msg		4606024	0					
ANR	4606082	ReturnType	bool		4606024	1					
ANR	4606083	Identifier	ArgList :: AppendArgsV1RawOrV2Quoted		4606024	2					
ANR	4606084	ParameterList	"char const * args , MyString * error_msg"		4606024	3					
ANR	4606085	Parameter	char const * args	262:35:5297:5312	4606024	0	True				
ANR	4606086	ParameterType	char const *		4606024	0					
ANR	4606087	Identifier	args		4606024	1					
ANR	4606088	Parameter	MyString * error_msg	262:52:5314:5332	4606024	1	True				
ANR	4606089	ParameterType	MyString *		4606024	0					
ANR	4606090	Identifier	error_msg		4606024	1					
ANR	4606091	CFGEntryNode	ENTRY		4606024		True				
ANR	4606092	CFGExitNode	EXIT		4606024		True				
ANR	4606093	Symbol	args		4606024						
ANR	4606094	Symbol	AppendArgsV2Raw		4606024						
ANR	4606095	Symbol	V2QuotedToV2Raw		4606024						
ANR	4606096	Symbol	error_msg		4606024						
ANR	4606097	Symbol	AppendArgsV1Raw		4606024						
ANR	4606098	Symbol	& v2		4606024						
ANR	4606099	Symbol	IsV2QuotedString		4606024						
ANR	4606100	Symbol	false		4606024						
ANR	4606101	Symbol	v2 . Value		4606024						
ANR	4606102	Symbol	v2		4606024						
ANR	4606103	Function	ArgList :: AppendArgsV1WackedOrV2Quoted	278:0:5680:6195							
ANR	4606104	FunctionDef	"ArgList :: AppendArgsV1WackedOrV2Quoted (char const * args , MyString * error_msg)"		4606103	0					
ANR	4606105	CompoundStatement		280:0:5761:6195	4606103	0					
ANR	4606106	IfStatement	if ( IsV2QuotedString ( args ) )		4606103	0					
ANR	4606107	Condition	IsV2QuotedString ( args )	281:4:5767:5788	4606103	0	True				
ANR	4606108	CallExpression	IsV2QuotedString ( args )		4606103	0					
ANR	4606109	Callee	IsV2QuotedString		4606103	0					
ANR	4606110	Identifier	IsV2QuotedString		4606103	0					
ANR	4606111	ArgumentList	args		4606103	1					
ANR	4606112	Argument	args		4606103	0					
ANR	4606113	Identifier	args		4606103	0					
ANR	4606114	CompoundStatement		4:2:103:114	4606103	1					
ANR	4606115	IdentifierDeclStatement	MyString v2 ;	283:2:5865:5876	4606103	0	True				
ANR	4606116	IdentifierDecl	v2		4606103	0					
ANR	4606117	IdentifierDeclType	MyString		4606103	0					
ANR	4606118	Identifier	v2		4606103	1					
ANR	4606119	IfStatement	"if ( ! V2QuotedToV2Raw ( args , & v2 , error_msg ) )"		4606103	1					
ANR	4606120	Condition	"! V2QuotedToV2Raw ( args , & v2 , error_msg )"	284:5:5883:5918	4606103	0	True				
ANR	4606121	UnaryOperationExpression	"! V2QuotedToV2Raw ( args , & v2 , error_msg )"		4606103	0					
ANR	4606122	UnaryOperator	!		4606103	0					
ANR	4606123	CallExpression	"V2QuotedToV2Raw ( args , & v2 , error_msg )"		4606103	1					
ANR	4606124	Callee	V2QuotedToV2Raw		4606103	0					
ANR	4606125	Identifier	V2QuotedToV2Raw		4606103	0					
ANR	4606126	ArgumentList	args		4606103	1					
ANR	4606127	Argument	args		4606103	0					
ANR	4606128	Identifier	args		4606103	0					
ANR	4606129	Argument	& v2		4606103	1					
ANR	4606130	UnaryOperationExpression	& v2		4606103	0					
ANR	4606131	UnaryOperator	&		4606103	0					
ANR	4606132	Identifier	v2		4606103	1					
ANR	4606133	Argument	error_msg		4606103	2					
ANR	4606134	Identifier	error_msg		4606103	0					
ANR	4606135	CompoundStatement		5:43:159:159	4606103	1					
ANR	4606136	ReturnStatement	return false ;	285:3:5926:5938	4606103	0	True				
ANR	4606137	Identifier	false		4606103	0					
ANR	4606138	ReturnStatement	"return AppendArgsV2Raw ( v2 . Value ( ) , error_msg ) ;"	287:2:5946:5990	4606103	2	True				
ANR	4606139	CallExpression	"AppendArgsV2Raw ( v2 . Value ( ) , error_msg )"		4606103	0					
ANR	4606140	Callee	AppendArgsV2Raw		4606103	0					
ANR	4606141	Identifier	AppendArgsV2Raw		4606103	0					
ANR	4606142	ArgumentList	v2 . Value ( )		4606103	1					
ANR	4606143	Argument	v2 . Value ( )		4606103	0					
ANR	4606144	CallExpression	v2 . Value ( )		4606103	0					
ANR	4606145	Callee	v2 . Value		4606103	0					
ANR	4606146	MemberAccess	v2 . Value		4606103	0					
ANR	4606147	Identifier	v2		4606103	0					
ANR	4606148	Identifier	Value		4606103	1					
ANR	4606149	ArgumentList			4606103	1					
ANR	4606150	Argument	error_msg		4606103	1					
ANR	4606151	Identifier	error_msg		4606103	0					
ANR	4606152	IdentifierDeclStatement	MyString v1 ;	292:1:6071:6082	4606103	1	True				
ANR	4606153	IdentifierDecl	v1		4606103	0					
ANR	4606154	IdentifierDeclType	MyString		4606103	0					
ANR	4606155	Identifier	v1		4606103	1					
ANR	4606156	IfStatement	"if ( ! V1WackedToV1Raw ( args , & v1 , error_msg ) )"		4606103	2					
ANR	4606157	Condition	"! V1WackedToV1Raw ( args , & v1 , error_msg )"	293:4:6088:6123	4606103	0	True				
ANR	4606158	UnaryOperationExpression	"! V1WackedToV1Raw ( args , & v1 , error_msg )"		4606103	0					
ANR	4606159	UnaryOperator	!		4606103	0					
ANR	4606160	CallExpression	"V1WackedToV1Raw ( args , & v1 , error_msg )"		4606103	1					
ANR	4606161	Callee	V1WackedToV1Raw		4606103	0					
ANR	4606162	Identifier	V1WackedToV1Raw		4606103	0					
ANR	4606163	ArgumentList	args		4606103	1					
ANR	4606164	Argument	args		4606103	0					
ANR	4606165	Identifier	args		4606103	0					
ANR	4606166	Argument	& v1		4606103	1					
ANR	4606167	UnaryOperationExpression	& v1		4606103	0					
ANR	4606168	UnaryOperator	&		4606103	0					
ANR	4606169	Identifier	v1		4606103	1					
ANR	4606170	Argument	error_msg		4606103	2					
ANR	4606171	Identifier	error_msg		4606103	0					
ANR	4606172	CompoundStatement		14:42:364:364	4606103	1					
ANR	4606173	ReturnStatement	return false ;	294:2:6130:6142	4606103	0	True				
ANR	4606174	Identifier	false		4606103	0					
ANR	4606175	ReturnStatement	"return AppendArgsV1Raw ( v1 . Value ( ) , error_msg ) ;"	297:1:6149:6193	4606103	3	True				
ANR	4606176	CallExpression	"AppendArgsV1Raw ( v1 . Value ( ) , error_msg )"		4606103	0					
ANR	4606177	Callee	AppendArgsV1Raw		4606103	0					
ANR	4606178	Identifier	AppendArgsV1Raw		4606103	0					
ANR	4606179	ArgumentList	v1 . Value ( )		4606103	1					
ANR	4606180	Argument	v1 . Value ( )		4606103	0					
ANR	4606181	CallExpression	v1 . Value ( )		4606103	0					
ANR	4606182	Callee	v1 . Value		4606103	0					
ANR	4606183	MemberAccess	v1 . Value		4606103	0					
ANR	4606184	Identifier	v1		4606103	0					
ANR	4606185	Identifier	Value		4606103	1					
ANR	4606186	ArgumentList			4606103	1					
ANR	4606187	Argument	error_msg		4606103	1					
ANR	4606188	Identifier	error_msg		4606103	0					
ANR	4606189	ReturnType	bool		4606103	1					
ANR	4606190	Identifier	ArgList :: AppendArgsV1WackedOrV2Quoted		4606103	2					
ANR	4606191	ParameterList	"char const * args , MyString * error_msg"		4606103	3					
ANR	4606192	Parameter	char const * args	279:38:5723:5738	4606103	0	True				
ANR	4606193	ParameterType	char const *		4606103	0					
ANR	4606194	Identifier	args		4606103	1					
ANR	4606195	Parameter	MyString * error_msg	279:55:5740:5758	4606103	1	True				
ANR	4606196	ParameterType	MyString *		4606103	0					
ANR	4606197	Identifier	error_msg		4606103	1					
ANR	4606198	CFGEntryNode	ENTRY		4606103		True				
ANR	4606199	CFGExitNode	EXIT		4606103		True				
ANR	4606200	Symbol	AppendArgsV2Raw		4606103						
ANR	4606201	Symbol	error_msg		4606103						
ANR	4606202	Symbol	AppendArgsV1Raw		4606103						
ANR	4606203	Symbol	& v1		4606103						
ANR	4606204	Symbol	v1 . Value		4606103						
ANR	4606205	Symbol	& v2		4606103						
ANR	4606206	Symbol	V1WackedToV1Raw		4606103						
ANR	4606207	Symbol	IsV2QuotedString		4606103						
ANR	4606208	Symbol	false		4606103						
ANR	4606209	Symbol	args		4606103						
ANR	4606210	Symbol	V2QuotedToV2Raw		4606103						
ANR	4606211	Symbol	v2 . Value		4606103						
ANR	4606212	Symbol	v1		4606103						
ANR	4606213	Symbol	v2		4606103						
ANR	4606214	Function	ArgList :: AppendArgsV2Quoted	300:0:6198:6528							
ANR	4606215	FunctionDef	"ArgList :: AppendArgsV2Quoted (char const * args , MyString * error_msg)"		4606214	0					
ANR	4606216	CompoundStatement		302:0:6269:6528	4606214	0					
ANR	4606217	IfStatement	if ( ! IsV2QuotedString ( args ) )		4606214	0					
ANR	4606218	Condition	! IsV2QuotedString ( args )	303:4:6275:6297	4606214	0	True				
ANR	4606219	UnaryOperationExpression	! IsV2QuotedString ( args )		4606214	0					
ANR	4606220	UnaryOperator	!		4606214	0					
ANR	4606221	CallExpression	IsV2QuotedString ( args )		4606214	1					
ANR	4606222	Callee	IsV2QuotedString		4606214	0					
ANR	4606223	Identifier	IsV2QuotedString		4606214	0					
ANR	4606224	ArgumentList	args		4606214	1					
ANR	4606225	Argument	args		4606214	0					
ANR	4606226	Identifier	args		4606214	0					
ANR	4606227	CompoundStatement		2:29:30:30	4606214	1					
ANR	4606228	ExpressionStatement	"AddErrorMessage ( ""Expecting double-quoted input string (V2 format)."" , error_msg )"	304:2:6304:6382	4606214	0	True				
ANR	4606229	CallExpression	"AddErrorMessage ( ""Expecting double-quoted input string (V2 format)."" , error_msg )"		4606214	0					
ANR	4606230	Callee	AddErrorMessage		4606214	0					
ANR	4606231	Identifier	AddErrorMessage		4606214	0					
ANR	4606232	ArgumentList	"""Expecting double-quoted input string (V2 format)."""		4606214	1					
ANR	4606233	Argument	"""Expecting double-quoted input string (V2 format)."""		4606214	0					
ANR	4606234	PrimaryExpression	"""Expecting double-quoted input string (V2 format)."""		4606214	0					
ANR	4606235	Argument	error_msg		4606214	1					
ANR	4606236	Identifier	error_msg		4606214	0					
ANR	4606237	ReturnStatement	return false ;	305:2:6386:6398	4606214	1	True				
ANR	4606238	Identifier	false		4606214	0					
ANR	4606239	IdentifierDeclStatement	MyString v2 ;	308:1:6405:6416	4606214	1	True				
ANR	4606240	IdentifierDecl	v2		4606214	0					
ANR	4606241	IdentifierDeclType	MyString		4606214	0					
ANR	4606242	Identifier	v2		4606214	1					
ANR	4606243	IfStatement	"if ( ! V2QuotedToV2Raw ( args , & v2 , error_msg ) )"		4606214	2					
ANR	4606244	Condition	"! V2QuotedToV2Raw ( args , & v2 , error_msg )"	309:4:6422:6457	4606214	0	True				
ANR	4606245	UnaryOperationExpression	"! V2QuotedToV2Raw ( args , & v2 , error_msg )"		4606214	0					
ANR	4606246	UnaryOperator	!		4606214	0					
ANR	4606247	CallExpression	"V2QuotedToV2Raw ( args , & v2 , error_msg )"		4606214	1					
ANR	4606248	Callee	V2QuotedToV2Raw		4606214	0					
ANR	4606249	Identifier	V2QuotedToV2Raw		4606214	0					
ANR	4606250	ArgumentList	args		4606214	1					
ANR	4606251	Argument	args		4606214	0					
ANR	4606252	Identifier	args		4606214	0					
ANR	4606253	Argument	& v2		4606214	1					
ANR	4606254	UnaryOperationExpression	& v2		4606214	0					
ANR	4606255	UnaryOperator	&		4606214	0					
ANR	4606256	Identifier	v2		4606214	1					
ANR	4606257	Argument	error_msg		4606214	2					
ANR	4606258	Identifier	error_msg		4606214	0					
ANR	4606259	CompoundStatement		8:42:190:190	4606214	1					
ANR	4606260	ReturnStatement	return false ;	310:2:6464:6476	4606214	0	True				
ANR	4606261	Identifier	false		4606214	0					
ANR	4606262	ReturnStatement	"return AppendArgsV2Raw ( v2 . Value ( ) , error_msg ) ;"	312:1:6482:6526	4606214	3	True				
ANR	4606263	CallExpression	"AppendArgsV2Raw ( v2 . Value ( ) , error_msg )"		4606214	0					
ANR	4606264	Callee	AppendArgsV2Raw		4606214	0					
ANR	4606265	Identifier	AppendArgsV2Raw		4606214	0					
ANR	4606266	ArgumentList	v2 . Value ( )		4606214	1					
ANR	4606267	Argument	v2 . Value ( )		4606214	0					
ANR	4606268	CallExpression	v2 . Value ( )		4606214	0					
ANR	4606269	Callee	v2 . Value		4606214	0					
ANR	4606270	MemberAccess	v2 . Value		4606214	0					
ANR	4606271	Identifier	v2		4606214	0					
ANR	4606272	Identifier	Value		4606214	1					
ANR	4606273	ArgumentList			4606214	1					
ANR	4606274	Argument	error_msg		4606214	1					
ANR	4606275	Identifier	error_msg		4606214	0					
ANR	4606276	ReturnType	bool		4606214	1					
ANR	4606277	Identifier	ArgList :: AppendArgsV2Quoted		4606214	2					
ANR	4606278	ParameterList	"char const * args , MyString * error_msg"		4606214	3					
ANR	4606279	Parameter	char const * args	301:28:6231:6246	4606214	0	True				
ANR	4606280	ParameterType	char const *		4606214	0					
ANR	4606281	Identifier	args		4606214	1					
ANR	4606282	Parameter	MyString * error_msg	301:45:6248:6266	4606214	1	True				
ANR	4606283	ParameterType	MyString *		4606214	0					
ANR	4606284	Identifier	error_msg		4606214	1					
ANR	4606285	CFGEntryNode	ENTRY		4606214		True				
ANR	4606286	CFGExitNode	EXIT		4606214		True				
ANR	4606287	Symbol	args		4606214						
ANR	4606288	Symbol	AppendArgsV2Raw		4606214						
ANR	4606289	Symbol	V2QuotedToV2Raw		4606214						
ANR	4606290	Symbol	error_msg		4606214						
ANR	4606291	Symbol	& v2		4606214						
ANR	4606292	Symbol	IsV2QuotedString		4606214						
ANR	4606293	Symbol	false		4606214						
ANR	4606294	Symbol	v2 . Value		4606214						
ANR	4606295	Symbol	v2		4606214						
ANR	4606296	Function	ArgList :: AppendArgsV1Raw_win32	315:0:6531:8208							
ANR	4606297	FunctionDef	"ArgList :: AppendArgsV1Raw_win32 (char const * args , MyString * error_msg)"		4606296	0					
ANR	4606298	CompoundStatement		317:0:6605:8208	4606296	0					
ANR	4606299	WhileStatement	while ( * args )		4606296	0					
ANR	4606300	Condition	* args	321:7:6712:6716	4606296	0	True				
ANR	4606301	UnaryOperationExpression	* args		4606296	0					
ANR	4606302	UnaryOperator	*		4606296	0					
ANR	4606303	Identifier	args		4606296	1					
ANR	4606304	CompoundStatement		7:2:149:166	4606296	1					
ANR	4606305	IdentifierDeclStatement	char const * begin_arg = args ;	322:2:6723:6751	4606296	0	True				
ANR	4606306	IdentifierDecl	* begin_arg = args		4606296	0					
ANR	4606307	IdentifierDeclType	char const *		4606296	0					
ANR	4606308	Identifier	begin_arg		4606296	1					
ANR	4606309	AssignmentExpression	* begin_arg = args		4606296	2		=			
ANR	4606310	Identifier	args		4606296	0					
ANR	4606311	Identifier	args		4606296	1					
ANR	4606312	IdentifierDeclStatement	"MyString buf = """" ;"	323:2:6755:6772	4606296	1	True				
ANR	4606313	IdentifierDecl	"buf = """""		4606296	0					
ANR	4606314	IdentifierDeclType	MyString		4606296	0					
ANR	4606315	Identifier	buf		4606296	1					
ANR	4606316	AssignmentExpression	"buf = """""		4606296	2		=			
ANR	4606317	Identifier	buf		4606296	0					
ANR	4606318	PrimaryExpression	""""""		4606296	1					
ANR	4606319	WhileStatement	while ( * args )		4606296	2					
ANR	4606320	Condition	* args	324:8:6782:6786	4606296	0	True				
ANR	4606321	UnaryOperationExpression	* args		4606296	0					
ANR	4606322	UnaryOperator	*		4606296	0					
ANR	4606323	Identifier	args		4606296	1					
ANR	4606324	CompoundStatement		8:15:183:183	4606296	1					
ANR	4606325	IfStatement	if ( * args == ' ' || * args == '\\t' || * args == '\\n' || * args == '\\r' )		4606296	0					
ANR	4606326	Condition	* args == ' ' || * args == '\\t' || * args == '\\n' || * args == '\\r'	325:6:6797:6867	4606296	0	True				
ANR	4606327	OrExpression	* args == ' ' || * args == '\\t' || * args == '\\n' || * args == '\\r'		4606296	0		||			
ANR	4606328	EqualityExpression	* args == ' '		4606296	0		==			
ANR	4606329	UnaryOperationExpression	* args		4606296	0					
ANR	4606330	UnaryOperator	*		4606296	0					
ANR	4606331	Identifier	args		4606296	1					
ANR	4606332	PrimaryExpression	' '		4606296	1					
ANR	4606333	OrExpression	* args == '\\t' || * args == '\\n' || * args == '\\r'		4606296	1		||			
ANR	4606334	EqualityExpression	* args == '\\t'		4606296	0		==			
ANR	4606335	UnaryOperationExpression	* args		4606296	0					
ANR	4606336	UnaryOperator	*		4606296	0					
ANR	4606337	Identifier	args		4606296	1					
ANR	4606338	PrimaryExpression	'\\t'		4606296	1					
ANR	4606339	OrExpression	* args == '\\n' || * args == '\\r'		4606296	1		||			
ANR	4606340	EqualityExpression	* args == '\\n'		4606296	0		==			
ANR	4606341	UnaryOperationExpression	* args		4606296	0					
ANR	4606342	UnaryOperator	*		4606296	0					
ANR	4606343	Identifier	args		4606296	1					
ANR	4606344	PrimaryExpression	'\\n'		4606296	1					
ANR	4606345	EqualityExpression	* args == '\\r'		4606296	1		==			
ANR	4606346	UnaryOperationExpression	* args		4606296	0					
ANR	4606347	UnaryOperator	*		4606296	0					
ANR	4606348	Identifier	args		4606296	1					
ANR	4606349	PrimaryExpression	'\\r'		4606296	1					
ANR	4606350	CompoundStatement		10:38:264:264	4606296	1					
ANR	4606351	BreakStatement	break ;	327:4:6876:6881	4606296	0	True				
ANR	4606352	ElseStatement	else		4606296	0					
ANR	4606353	IfStatement	"if ( * args != '""' )"		4606296	0					
ANR	4606354	Condition	"* args != '""'"	329:11:6899:6910	4606296	0	True				
ANR	4606355	EqualityExpression	"* args != '""'"		4606296	0		!=			
ANR	4606356	UnaryOperationExpression	* args		4606296	0					
ANR	4606357	UnaryOperator	*		4606296	0					
ANR	4606358	Identifier	args		4606296	1					
ANR	4606359	PrimaryExpression	"'""'"		4606296	1					
ANR	4606360	CompoundStatement		13:25:307:307	4606296	1					
ANR	4606361	ExpressionStatement	buf += * ( args ++ )	330:4:6919:6935	4606296	0	True				
ANR	4606362	AssignmentExpression	buf += * ( args ++ )		4606296	0		+=			
ANR	4606363	Identifier	buf		4606296	0					
ANR	4606364	UnaryOperationExpression	* ( args ++ )		4606296	1					
ANR	4606365	UnaryOperator	*		4606296	0					
ANR	4606366	PostIncDecOperationExpression	args ++		4606296	1					
ANR	4606367	Identifier	args		4606296	0					
ANR	4606368	IncDec	++		4606296	1					
ANR	4606369	ElseStatement	else		4606296	0					
ANR	4606370	CompoundStatement		18:4:373:403	4606296	0					
ANR	4606371	IdentifierDeclStatement	char const * begin_quote = args ;	334:4:6979:7009	4606296	0	True				
ANR	4606372	IdentifierDecl	* begin_quote = args		4606296	0					
ANR	4606373	IdentifierDeclType	char const *		4606296	0					
ANR	4606374	Identifier	begin_quote		4606296	1					
ANR	4606375	AssignmentExpression	* begin_quote = args		4606296	2		=			
ANR	4606376	Identifier	args		4606296	0					
ANR	4606377	Identifier	args		4606296	1					
ANR	4606378	ExpressionStatement	args ++	335:4:7015:7021	4606296	1	True				
ANR	4606379	PostIncDecOperationExpression	args ++		4606296	0					
ANR	4606380	Identifier	args		4606296	0					
ANR	4606381	IncDec	++		4606296	1					
ANR	4606382	WhileStatement	while ( * args )		4606296	2					
ANR	4606383	Condition	* args	337:10:7048:7052	4606296	0	True				
ANR	4606384	UnaryOperationExpression	* args		4606296	0					
ANR	4606385	UnaryOperator	*		4606296	0					
ANR	4606386	Identifier	args		4606296	1					
ANR	4606387	CompoundStatement		22:5:456:475	4606296	1					
ANR	4606388	IdentifierDeclStatement	int backslashes = 0 ;	338:5:7062:7081	4606296	0	True				
ANR	4606389	IdentifierDecl	backslashes = 0		4606296	0					
ANR	4606390	IdentifierDeclType	int		4606296	0					
ANR	4606391	Identifier	backslashes		4606296	1					
ANR	4606392	AssignmentExpression	backslashes = 0		4606296	2		=			
ANR	4606393	Identifier	backslashes		4606296	0					
ANR	4606394	PrimaryExpression	0		4606296	1					
ANR	4606395	WhileStatement	while ( * args == '\\\\' )		4606296	1					
ANR	4606396	Condition	* args == '\\\\'	339:11:7094:7106	4606296	0	True				
ANR	4606397	EqualityExpression	* args == '\\\\'		4606296	0		==			
ANR	4606398	UnaryOperationExpression	* args		4606296	0					
ANR	4606399	UnaryOperator	*		4606296	0					
ANR	4606400	Identifier	args		4606296	1					
ANR	4606401	PrimaryExpression	'\\\\'		4606296	1					
ANR	4606402	CompoundStatement		23:26:503:503	4606296	1					
ANR	4606403	ExpressionStatement	backslashes ++	340:6:7117:7130	4606296	0	True				
ANR	4606404	PostIncDecOperationExpression	backslashes ++		4606296	0					
ANR	4606405	Identifier	backslashes		4606296	0					
ANR	4606406	IncDec	++		4606296	1					
ANR	4606407	ExpressionStatement	args ++	341:6:7138:7144	4606296	1	True				
ANR	4606408	PostIncDecOperationExpression	args ++		4606296	0					
ANR	4606409	Identifier	args		4606296	0					
ANR	4606410	IncDec	++		4606296	1					
ANR	4606411	IfStatement	"if ( backslashes && * args == '""' )"		4606296	2					
ANR	4606412	Condition	"backslashes && * args == '""'"	343:8:7161:7187	4606296	0	True				
ANR	4606413	AndExpression	"backslashes && * args == '""'"		4606296	0		&&			
ANR	4606414	Identifier	backslashes		4606296	0					
ANR	4606415	EqualityExpression	"* args == '""'"		4606296	1		==			
ANR	4606416	UnaryOperationExpression	* args		4606296	0					
ANR	4606417	UnaryOperator	*		4606296	0					
ANR	4606418	Identifier	args		4606296	1					
ANR	4606419	PrimaryExpression	"'""'"		4606296	1					
ANR	4606420	CompoundStatement		27:37:584:584	4606296	1					
ANR	4606421	WhileStatement	while ( backslashes >= 2 )		4606296	0					
ANR	4606422	Condition	backslashes >= 2	348:12:7364:7379	4606296	0	True				
ANR	4606423	RelationalExpression	backslashes >= 2		4606296	0		>=			
ANR	4606424	Identifier	backslashes		4606296	0					
ANR	4606425	PrimaryExpression	2		4606296	1					
ANR	4606426	CompoundStatement		32:30:776:776	4606296	1					
ANR	4606427	ExpressionStatement	backslashes -= 2	349:7:7391:7407	4606296	0	True				
ANR	4606428	AssignmentExpression	backslashes -= 2		4606296	0		-=			
ANR	4606429	Identifier	backslashes		4606296	0					
ANR	4606430	PrimaryExpression	2		4606296	1					
ANR	4606431	ExpressionStatement	buf += '\\\\'	350:7:7416:7427	4606296	1	True				
ANR	4606432	AssignmentExpression	buf += '\\\\'		4606296	0		+=			
ANR	4606433	Identifier	buf		4606296	0					
ANR	4606434	PrimaryExpression	'\\\\'		4606296	1					
ANR	4606435	IfStatement	if ( backslashes )		4606296	1					
ANR	4606436	Condition	backslashes	352:9:7446:7456	4606296	0	True				
ANR	4606437	Identifier	backslashes		4606296	0					
ANR	4606438	CompoundStatement		36:22:853:853	4606296	1					
ANR	4606439	ExpressionStatement	buf += * ( args ++ )	353:7:7468:7484	4606296	0	True				
ANR	4606440	AssignmentExpression	buf += * ( args ++ )		4606296	0		+=			
ANR	4606441	Identifier	buf		4606296	0					
ANR	4606442	UnaryOperationExpression	* ( args ++ )		4606296	1					
ANR	4606443	UnaryOperator	*		4606296	0					
ANR	4606444	PostIncDecOperationExpression	args ++		4606296	1					
ANR	4606445	Identifier	args		4606296	0					
ANR	4606446	IncDec	++		4606296	1					
ANR	4606447	ElseStatement	else		4606296	0					
ANR	4606448	CompoundStatement		39:11:915:915	4606296	0					
ANR	4606449	BreakStatement	break ;	356:7:7530:7535	4606296	0	True				
ANR	4606450	ElseStatement	else		4606296	0					
ANR	4606451	IfStatement	if ( backslashes )		4606296	0					
ANR	4606452	Condition	backslashes	359:13:7582:7592	4606296	0	True				
ANR	4606453	Identifier	backslashes		4606296	0					
ANR	4606454	CompoundStatement		43:26:989:989	4606296	1					
ANR	4606455	WhileStatement	while ( backslashes -- )		4606296	0					
ANR	4606456	Condition	backslashes --	361:12:7638:7650	4606296	0	True				
ANR	4606457	PostIncDecOperationExpression	backslashes --		4606296	0					
ANR	4606458	Identifier	backslashes		4606296	0					
ANR	4606459	IncDec	--		4606296	1					
ANR	4606460	CompoundStatement		45:27:1047:1047	4606296	1					
ANR	4606461	ExpressionStatement	buf += '\\\\'	362:7:7662:7673	4606296	0	True				
ANR	4606462	AssignmentExpression	buf += '\\\\'		4606296	0		+=			
ANR	4606463	Identifier	buf		4606296	0					
ANR	4606464	PrimaryExpression	'\\\\'		4606296	1					
ANR	4606465	ElseStatement	else		4606296	0					
ANR	4606466	IfStatement	"if ( * args == '""' )"		4606296	0					
ANR	4606467	Condition	"* args == '""'"	365:13:7703:7714	4606296	0	True				
ANR	4606468	EqualityExpression	"* args == '""'"		4606296	0		==			
ANR	4606469	UnaryOperationExpression	* args		4606296	0					
ANR	4606470	UnaryOperator	*		4606296	0					
ANR	4606471	Identifier	args		4606296	1					
ANR	4606472	PrimaryExpression	"'""'"		4606296	1					
ANR	4606473	CompoundStatement		49:27:1111:1111	4606296	1					
ANR	4606474	BreakStatement	break ;	366:6:7725:7730	4606296	0	True				
ANR	4606475	ElseStatement	else		4606296	0					
ANR	4606476	CompoundStatement		52:10:1160:1160	4606296	0					
ANR	4606477	ExpressionStatement	buf += * ( args ++ )	369:6:7774:7790	4606296	0	True				
ANR	4606478	AssignmentExpression	buf += * ( args ++ )		4606296	0		+=			
ANR	4606479	Identifier	buf		4606296	0					
ANR	4606480	UnaryOperationExpression	* ( args ++ )		4606296	1					
ANR	4606481	UnaryOperator	*		4606296	0					
ANR	4606482	PostIncDecOperationExpression	args ++		4606296	1					
ANR	4606483	Identifier	args		4606296	0					
ANR	4606484	IncDec	++		4606296	1					
ANR	4606485	IfStatement	"if ( * args != '""' )"		4606296	3					
ANR	4606486	Condition	"* args != '""'"	373:7:7813:7824	4606296	0	True				
ANR	4606487	EqualityExpression	"* args != '""'"		4606296	0		!=			
ANR	4606488	UnaryOperationExpression	* args		4606296	0					
ANR	4606489	UnaryOperator	*		4606296	0					
ANR	4606490	Identifier	args		4606296	1					
ANR	4606491	PrimaryExpression	"'""'"		4606296	1					
ANR	4606492	CompoundStatement		58:5:1228:1240	4606296	1					
ANR	4606493	IdentifierDeclStatement	MyString msg ;	374:5:7834:7846	4606296	0	True				
ANR	4606494	IdentifierDecl	msg		4606296	0					
ANR	4606495	IdentifierDeclType	MyString		4606296	0					
ANR	4606496	Identifier	msg		4606296	1					
ANR	4606497	ExpressionStatement	"msg . sprintf ( ""Unterminated quote in windows argument string starting here: %s"" , begin_quote )"	375:5:7853:7943	4606296	1	True				
ANR	4606498	CallExpression	"msg . sprintf ( ""Unterminated quote in windows argument string starting here: %s"" , begin_quote )"		4606296	0					
ANR	4606499	Callee	msg . sprintf		4606296	0					
ANR	4606500	MemberAccess	msg . sprintf		4606296	0					
ANR	4606501	Identifier	msg		4606296	0					
ANR	4606502	Identifier	sprintf		4606296	1					
ANR	4606503	ArgumentList	"""Unterminated quote in windows argument string starting here: %s"""		4606296	1					
ANR	4606504	Argument	"""Unterminated quote in windows argument string starting here: %s"""		4606296	0					
ANR	4606505	PrimaryExpression	"""Unterminated quote in windows argument string starting here: %s"""		4606296	0					
ANR	4606506	Argument	begin_quote		4606296	1					
ANR	4606507	Identifier	begin_quote		4606296	0					
ANR	4606508	ExpressionStatement	"AddErrorMessage ( msg . Value ( ) , error_msg )"	376:5:7950:7988	4606296	2	True				
ANR	4606509	CallExpression	"AddErrorMessage ( msg . Value ( ) , error_msg )"		4606296	0					
ANR	4606510	Callee	AddErrorMessage		4606296	0					
ANR	4606511	Identifier	AddErrorMessage		4606296	0					
ANR	4606512	ArgumentList	msg . Value ( )		4606296	1					
ANR	4606513	Argument	msg . Value ( )		4606296	0					
ANR	4606514	CallExpression	msg . Value ( )		4606296	0					
ANR	4606515	Callee	msg . Value		4606296	0					
ANR	4606516	MemberAccess	msg . Value		4606296	0					
ANR	4606517	Identifier	msg		4606296	0					
ANR	4606518	Identifier	Value		4606296	1					
ANR	4606519	ArgumentList			4606296	1					
ANR	4606520	Argument	error_msg		4606296	1					
ANR	4606521	Identifier	error_msg		4606296	0					
ANR	4606522	ReturnStatement	return false ;	377:5:7995:8007	4606296	3	True				
ANR	4606523	Identifier	false		4606296	0					
ANR	4606524	ExpressionStatement	args ++	379:4:8019:8025	4606296	4	True				
ANR	4606525	PostIncDecOperationExpression	args ++		4606296	0					
ANR	4606526	Identifier	args		4606296	0					
ANR	4606527	IncDec	++		4606296	1					
ANR	4606528	IfStatement	if ( args > begin_arg )		4606296	3					
ANR	4606529	Condition	args > begin_arg	382:5:8041:8056	4606296	0	True				
ANR	4606530	RelationalExpression	args > begin_arg		4606296	0		>			
ANR	4606531	Identifier	args		4606296	0					
ANR	4606532	Identifier	begin_arg		4606296	1					
ANR	4606533	CompoundStatement		66:23:1453:1453	4606296	1					
ANR	4606534	ExpressionStatement	ASSERT ( args_list . Append ( buf ) )	383:3:8064:8093	4606296	0	True				
ANR	4606535	CallExpression	ASSERT ( args_list . Append ( buf ) )		4606296	0					
ANR	4606536	Callee	ASSERT		4606296	0					
ANR	4606537	Identifier	ASSERT		4606296	0					
ANR	4606538	ArgumentList	args_list . Append ( buf )		4606296	1					
ANR	4606539	Argument	args_list . Append ( buf )		4606296	0					
ANR	4606540	CallExpression	args_list . Append ( buf )		4606296	0					
ANR	4606541	Callee	args_list . Append		4606296	0					
ANR	4606542	MemberAccess	args_list . Append		4606296	0					
ANR	4606543	Identifier	args_list		4606296	0					
ANR	4606544	Identifier	Append		4606296	1					
ANR	4606545	ArgumentList	buf		4606296	1					
ANR	4606546	Argument	buf		4606296	0					
ANR	4606547	Identifier	buf		4606296	0					
ANR	4606548	WhileStatement	while ( * args == ' ' || * args == '\\t' || * args == '\\n' || * args == '\\r' )		4606296	4					
ANR	4606549	Condition	* args == ' ' || * args == '\\t' || * args == '\\n' || * args == '\\r'	385:8:8107:8169	4606296	0	True				
ANR	4606550	OrExpression	* args == ' ' || * args == '\\t' || * args == '\\n' || * args == '\\r'		4606296	0		||			
ANR	4606551	EqualityExpression	* args == ' '		4606296	0		==			
ANR	4606552	UnaryOperationExpression	* args		4606296	0					
ANR	4606553	UnaryOperator	*		4606296	0					
ANR	4606554	Identifier	args		4606296	1					
ANR	4606555	PrimaryExpression	' '		4606296	1					
ANR	4606556	OrExpression	* args == '\\t' || * args == '\\n' || * args == '\\r'		4606296	1		||			
ANR	4606557	EqualityExpression	* args == '\\t'		4606296	0		==			
ANR	4606558	UnaryOperationExpression	* args		4606296	0					
ANR	4606559	UnaryOperator	*		4606296	0					
ANR	4606560	Identifier	args		4606296	1					
ANR	4606561	PrimaryExpression	'\\t'		4606296	1					
ANR	4606562	OrExpression	* args == '\\n' || * args == '\\r'		4606296	1		||			
ANR	4606563	EqualityExpression	* args == '\\n'		4606296	0		==			
ANR	4606564	UnaryOperationExpression	* args		4606296	0					
ANR	4606565	UnaryOperator	*		4606296	0					
ANR	4606566	Identifier	args		4606296	1					
ANR	4606567	PrimaryExpression	'\\n'		4606296	1					
ANR	4606568	EqualityExpression	* args == '\\r'		4606296	1		==			
ANR	4606569	UnaryOperationExpression	* args		4606296	0					
ANR	4606570	UnaryOperator	*		4606296	0					
ANR	4606571	Identifier	args		4606296	1					
ANR	4606572	PrimaryExpression	'\\r'		4606296	1					
ANR	4606573	CompoundStatement		70:2:1568:1568	4606296	1					
ANR	4606574	ExpressionStatement	args ++	387:3:8179:8185	4606296	0	True				
ANR	4606575	PostIncDecOperationExpression	args ++		4606296	0					
ANR	4606576	Identifier	args		4606296	0					
ANR	4606577	IncDec	++		4606296	1					
ANR	4606578	ReturnStatement	return true ;	390:1:8195:8206	4606296	1	True				
ANR	4606579	Identifier	true		4606296	0					
ANR	4606580	ReturnType	bool		4606296	1					
ANR	4606581	Identifier	ArgList :: AppendArgsV1Raw_win32		4606296	2					
ANR	4606582	ParameterList	"char const * args , MyString * error_msg"		4606296	3					
ANR	4606583	Parameter	char const * args	316:31:6567:6582	4606296	0	True				
ANR	4606584	ParameterType	char const *		4606296	0					
ANR	4606585	Identifier	args		4606296	1					
ANR	4606586	Parameter	MyString * error_msg	316:48:6584:6602	4606296	1	True				
ANR	4606587	ParameterType	MyString *		4606296	0					
ANR	4606588	Identifier	error_msg		4606296	1					
ANR	4606589	CFGEntryNode	ENTRY		4606296		True				
ANR	4606590	CFGExitNode	EXIT		4606296		True				
ANR	4606591	Symbol	msg		4606296						
ANR	4606592	Symbol	args_list		4606296						
ANR	4606593	Symbol	error_msg		4606296						
ANR	4606594	Symbol	begin_quote		4606296						
ANR	4606595	Symbol	false		4606296						
ANR	4606596	Symbol	* args		4606296						
ANR	4606597	Symbol	msg . Value		4606296						
ANR	4606598	Symbol	args		4606296						
ANR	4606599	Symbol	begin_arg		4606296						
ANR	4606600	Symbol	buf		4606296						
ANR	4606601	Symbol	* ( args ++ )		4606296						
ANR	4606602	Symbol	true		4606296						
ANR	4606603	Symbol	args_list . Append		4606296						
ANR	4606604	Symbol	backslashes		4606296						
ANR	4606605	DeclStmt									
ANR	4606606	Decl							MyString	MyString	buf
ANR	4606607	DeclStmt									
ANR	4606608	Decl							bool	bool	parsed_token
ANR	4606609	Function	ArgList :: AppendArgsV1Raw	425:0:8711:10055							
ANR	4606610	FunctionDef	"ArgList :: AppendArgsV1Raw (char const * args , MyString * error_msg)"		4606609	0					
ANR	4606611	CompoundStatement		427:0:8779:10055	4606609	0					
ANR	4606612	IfStatement	if ( ! args )		4606609	0					
ANR	4606613	Condition	! args	428:4:8785:8789	4606609	0	True				
ANR	4606614	UnaryOperationExpression	! args		4606609	0					
ANR	4606615	UnaryOperator	!		4606609	0					
ANR	4606616	Identifier	args		4606609	1					
ANR	4606617	ReturnStatement	return true ;	428:11:8792:8803	4606609	1	True				
ANR	4606618	Identifier	true		4606609	0					
ANR	4606619	IfStatement	if ( v1_syntax == WIN32_ARGV1_SYNTAX )		4606609	1					
ANR	4606620	Condition	v1_syntax == WIN32_ARGV1_SYNTAX	430:4:8810:8840	4606609	0	True				
ANR	4606621	EqualityExpression	v1_syntax == WIN32_ARGV1_SYNTAX		4606609	0		==			
ANR	4606622	Identifier	v1_syntax		4606609	0					
ANR	4606623	Identifier	WIN32_ARGV1_SYNTAX		4606609	1					
ANR	4606624	CompoundStatement		4:37:63:63	4606609	1					
ANR	4606625	ReturnStatement	"return AppendArgsV1Raw_win32 ( args , error_msg ) ;"	431:2:8847:8891	4606609	0	True				
ANR	4606626	CallExpression	"AppendArgsV1Raw_win32 ( args , error_msg )"		4606609	0					
ANR	4606627	Callee	AppendArgsV1Raw_win32		4606609	0					
ANR	4606628	Identifier	AppendArgsV1Raw_win32		4606609	0					
ANR	4606629	ArgumentList	args		4606609	1					
ANR	4606630	Argument	args		4606609	0					
ANR	4606631	Identifier	args		4606609	0					
ANR	4606632	Argument	error_msg		4606609	1					
ANR	4606633	Identifier	error_msg		4606609	0					
ANR	4606634	ElseStatement	else		4606609	0					
ANR	4606635	IfStatement	if ( v1_syntax == UNIX_ARGV1_SYNTAX )		4606609	0					
ANR	4606636	Condition	v1_syntax == UNIX_ARGV1_SYNTAX	433:9:8905:8934	4606609	0	True				
ANR	4606637	EqualityExpression	v1_syntax == UNIX_ARGV1_SYNTAX		4606609	0		==			
ANR	4606638	Identifier	v1_syntax		4606609	0					
ANR	4606639	Identifier	UNIX_ARGV1_SYNTAX		4606609	1					
ANR	4606640	CompoundStatement		7:41:157:157	4606609	1					
ANR	4606641	ReturnStatement	"return AppendArgsV1Raw_unix ( args , error_msg ) ;"	434:2:8941:8984	4606609	0	True				
ANR	4606642	CallExpression	"AppendArgsV1Raw_unix ( args , error_msg )"		4606609	0					
ANR	4606643	Callee	AppendArgsV1Raw_unix		4606609	0					
ANR	4606644	Identifier	AppendArgsV1Raw_unix		4606609	0					
ANR	4606645	ArgumentList	args		4606609	1					
ANR	4606646	Argument	args		4606609	0					
ANR	4606647	Identifier	args		4606609	0					
ANR	4606648	Argument	error_msg		4606609	1					
ANR	4606649	Identifier	error_msg		4606609	0					
ANR	4606650	ElseStatement	else		4606609	0					
ANR	4606651	IfStatement	if ( v1_syntax == UNKNOWN_ARGV1_SYNTAX )		4606609	0					
ANR	4606652	Condition	v1_syntax == UNKNOWN_ARGV1_SYNTAX	436:9:8998:9030	4606609	0	True				
ANR	4606653	EqualityExpression	v1_syntax == UNKNOWN_ARGV1_SYNTAX		4606609	0		==			
ANR	4606654	Identifier	v1_syntax		4606609	0					
ANR	4606655	Identifier	UNKNOWN_ARGV1_SYNTAX		4606609	1					
ANR	4606656	CompoundStatement		10:44:253:253	4606609	1					
ANR	4606657	ExpressionStatement	input_was_unknown_platform_v1 = true	454:2:9875:9911	4606609	0	True				
ANR	4606658	AssignmentExpression	input_was_unknown_platform_v1 = true		4606609	0		=			
ANR	4606659	Identifier	input_was_unknown_platform_v1		4606609	0					
ANR	4606660	Identifier	true		4606609	1					
ANR	4606661	ReturnStatement	"return AppendArgsV1Raw_unix ( args , error_msg ) ;"	455:2:9915:9958	4606609	1	True				
ANR	4606662	CallExpression	"AppendArgsV1Raw_unix ( args , error_msg )"		4606609	0					
ANR	4606663	Callee	AppendArgsV1Raw_unix		4606609	0					
ANR	4606664	Identifier	AppendArgsV1Raw_unix		4606609	0					
ANR	4606665	ArgumentList	args		4606609	1					
ANR	4606666	Argument	args		4606609	0					
ANR	4606667	Identifier	args		4606609	0					
ANR	4606668	Argument	error_msg		4606609	1					
ANR	4606669	Identifier	error_msg		4606609	0					
ANR	4606670	ElseStatement	else		4606609	0					
ANR	4606671	CompoundStatement		31:6:1189:1189	4606609	0					
ANR	4606672	ExpressionStatement	"EXCEPT ( ""Unexpected v1_syntax=%d in AppendArgsV1Raw"" , v1_syntax )"	458:2:9973:10035	4606609	0	True				
ANR	4606673	CallExpression	"EXCEPT ( ""Unexpected v1_syntax=%d in AppendArgsV1Raw"" , v1_syntax )"		4606609	0					
ANR	4606674	Callee	EXCEPT		4606609	0					
ANR	4606675	Identifier	EXCEPT		4606609	0					
ANR	4606676	ArgumentList	"""Unexpected v1_syntax=%d in AppendArgsV1Raw"""		4606609	1					
ANR	4606677	Argument	"""Unexpected v1_syntax=%d in AppendArgsV1Raw"""		4606609	0					
ANR	4606678	PrimaryExpression	"""Unexpected v1_syntax=%d in AppendArgsV1Raw"""		4606609	0					
ANR	4606679	Argument	v1_syntax		4606609	1					
ANR	4606680	Identifier	v1_syntax		4606609	0					
ANR	4606681	ReturnStatement	return false ;	460:1:10041:10053	4606609	2	True				
ANR	4606682	Identifier	false		4606609	0					
ANR	4606683	ReturnType	bool		4606609	1					
ANR	4606684	Identifier	ArgList :: AppendArgsV1Raw		4606609	2					
ANR	4606685	ParameterList	"char const * args , MyString * error_msg"		4606609	3					
ANR	4606686	Parameter	char const * args	426:25:8741:8756	4606609	0	True				
ANR	4606687	ParameterType	char const *		4606609	0					
ANR	4606688	Identifier	args		4606609	1					
ANR	4606689	Parameter	MyString * error_msg	426:42:8758:8776	4606609	1	True				
ANR	4606690	ParameterType	MyString *		4606609	0					
ANR	4606691	Identifier	error_msg		4606609	1					
ANR	4606692	CFGEntryNode	ENTRY		4606609		True				
ANR	4606693	CFGExitNode	EXIT		4606609		True				
ANR	4606694	Symbol	args		4606609						
ANR	4606695	Symbol	input_was_unknown_platform_v1		4606609						
ANR	4606696	Symbol	error_msg		4606609						
ANR	4606697	Symbol	AppendArgsV1Raw_win32		4606609						
ANR	4606698	Symbol	true		4606609						
ANR	4606699	Symbol	false		4606609						
ANR	4606700	Symbol	v1_syntax		4606609						
ANR	4606701	Symbol	UNIX_ARGV1_SYNTAX		4606609						
ANR	4606702	Symbol	UNKNOWN_ARGV1_SYNTAX		4606609						
ANR	4606703	Symbol	WIN32_ARGV1_SYNTAX		4606609						
ANR	4606704	Symbol	AppendArgsV1Raw_unix		4606609						
ANR	4606705	Function	ArgList :: AppendArgsV2Raw	463:0:10058:10175							
ANR	4606706	FunctionDef	"ArgList :: AppendArgsV2Raw (char const * args , MyString * error_msg)"		4606705	0					
ANR	4606707	CompoundStatement		465:0:10126:10175	4606705	0					
ANR	4606708	ReturnStatement	"return split_args ( args , & args_list , error_msg ) ;"	466:1:10129:10173	4606705	0	True				
ANR	4606709	CallExpression	"split_args ( args , & args_list , error_msg )"		4606705	0					
ANR	4606710	Callee	split_args		4606705	0					
ANR	4606711	Identifier	split_args		4606705	0					
ANR	4606712	ArgumentList	args		4606705	1					
ANR	4606713	Argument	args		4606705	0					
ANR	4606714	Identifier	args		4606705	0					
ANR	4606715	Argument	& args_list		4606705	1					
ANR	4606716	UnaryOperationExpression	& args_list		4606705	0					
ANR	4606717	UnaryOperator	&		4606705	0					
ANR	4606718	Identifier	args_list		4606705	1					
ANR	4606719	Argument	error_msg		4606705	2					
ANR	4606720	Identifier	error_msg		4606705	0					
ANR	4606721	ReturnType	bool		4606705	1					
ANR	4606722	Identifier	ArgList :: AppendArgsV2Raw		4606705	2					
ANR	4606723	ParameterList	"char const * args , MyString * error_msg"		4606705	3					
ANR	4606724	Parameter	char const * args	464:25:10088:10103	4606705	0	True				
ANR	4606725	ParameterType	char const *		4606705	0					
ANR	4606726	Identifier	args		4606705	1					
ANR	4606727	Parameter	MyString * error_msg	464:42:10105:10123	4606705	1	True				
ANR	4606728	ParameterType	MyString *		4606705	0					
ANR	4606729	Identifier	error_msg		4606705	1					
ANR	4606730	CFGEntryNode	ENTRY		4606705		True				
ANR	4606731	CFGExitNode	EXIT		4606705		True				
ANR	4606732	Symbol	args		4606705						
ANR	4606733	Symbol	error_msg		4606705						
ANR	4606734	Symbol	split_args		4606705						
ANR	4606735	Symbol	& args_list		4606705						
ANR	4606736	DeclStmt									
ANR	4606737	Decl							const char	const char	RAW_V2_ARGS_MARKER
ANR	4606738	Function	ArgList :: AppendArgsV1or2Raw	475:0:10460:10692							
ANR	4606739	FunctionDef	"ArgList :: AppendArgsV1or2Raw (char const * args , MyString * error_msg)"		4606738	0					
ANR	4606740	CompoundStatement		477:0:10531:10692	4606738	0					
ANR	4606741	IfStatement	if ( ! args )		4606738	0					
ANR	4606742	Condition	! args	478:4:10537:10541	4606738	0	True				
ANR	4606743	UnaryOperationExpression	! args		4606738	0					
ANR	4606744	UnaryOperator	!		4606738	0					
ANR	4606745	Identifier	args		4606738	1					
ANR	4606746	ReturnStatement	return true ;	478:11:10544:10555	4606738	1	True				
ANR	4606747	Identifier	true		4606738	0					
ANR	4606748	IfStatement	if ( * args == RAW_V2_ARGS_MARKER )		4606738	1					
ANR	4606749	Condition	* args == RAW_V2_ARGS_MARKER	479:4:10561:10587	4606738	0	True				
ANR	4606750	EqualityExpression	* args == RAW_V2_ARGS_MARKER		4606738	0		==			
ANR	4606751	UnaryOperationExpression	* args		4606738	0					
ANR	4606752	UnaryOperator	*		4606738	0					
ANR	4606753	Identifier	args		4606738	1					
ANR	4606754	Identifier	RAW_V2_ARGS_MARKER		4606738	1					
ANR	4606755	CompoundStatement		3:33:58:58	4606738	1					
ANR	4606756	ReturnStatement	"return AppendArgsV2Raw ( args + 1 , error_msg ) ;"	480:2:10594:10634	4606738	0	True				
ANR	4606757	CallExpression	"AppendArgsV2Raw ( args + 1 , error_msg )"		4606738	0					
ANR	4606758	Callee	AppendArgsV2Raw		4606738	0					
ANR	4606759	Identifier	AppendArgsV2Raw		4606738	0					
ANR	4606760	ArgumentList	args + 1		4606738	1					
ANR	4606761	Argument	args + 1		4606738	0					
ANR	4606762	AdditiveExpression	args + 1		4606738	0		+			
ANR	4606763	Identifier	args		4606738	0					
ANR	4606764	PrimaryExpression	1		4606738	1					
ANR	4606765	Argument	error_msg		4606738	1					
ANR	4606766	Identifier	error_msg		4606738	0					
ANR	4606767	ElseStatement	else		4606738	0					
ANR	4606768	CompoundStatement		6:6:113:113	4606738	0					
ANR	4606769	ReturnStatement	"return AppendArgsV1Raw ( args , error_msg ) ;"	483:2:10649:10687	4606738	0	True				
ANR	4606770	CallExpression	"AppendArgsV1Raw ( args , error_msg )"		4606738	0					
ANR	4606771	Callee	AppendArgsV1Raw		4606738	0					
ANR	4606772	Identifier	AppendArgsV1Raw		4606738	0					
ANR	4606773	ArgumentList	args		4606738	1					
ANR	4606774	Argument	args		4606738	0					
ANR	4606775	Identifier	args		4606738	0					
ANR	4606776	Argument	error_msg		4606738	1					
ANR	4606777	Identifier	error_msg		4606738	0					
ANR	4606778	ReturnType	bool		4606738	1					
ANR	4606779	Identifier	ArgList :: AppendArgsV1or2Raw		4606738	2					
ANR	4606780	ParameterList	"char const * args , MyString * error_msg"		4606738	3					
ANR	4606781	Parameter	char const * args	476:28:10493:10508	4606738	0	True				
ANR	4606782	ParameterType	char const *		4606738	0					
ANR	4606783	Identifier	args		4606738	1					
ANR	4606784	Parameter	MyString * error_msg	476:45:10510:10528	4606738	1	True				
ANR	4606785	ParameterType	MyString *		4606738	0					
ANR	4606786	Identifier	error_msg		4606738	1					
ANR	4606787	CFGEntryNode	ENTRY		4606738		True				
ANR	4606788	CFGExitNode	EXIT		4606738		True				
ANR	4606789	Symbol	args		4606738						
ANR	4606790	Symbol	AppendArgsV2Raw		4606738						
ANR	4606791	Symbol	error_msg		4606738						
ANR	4606792	Symbol	RAW_V2_ARGS_MARKER		4606738						
ANR	4606793	Symbol	AppendArgsV1Raw		4606738						
ANR	4606794	Symbol	true		4606738						
ANR	4606795	Symbol	* args		4606738						
ANR	4606796	Function	ArgList :: AppendArgsFromArgList	487:0:10695:10948							
ANR	4606797	FunctionDef	ArgList :: AppendArgsFromArgList (ArgList const & args)		4606796	0					
ANR	4606798	CompoundStatement		489:0:10752:10948	4606796	0					
ANR	4606799	ExpressionStatement	input_was_unknown_platform_v1 = args . input_was_unknown_platform_v1	490:1:10755:10821	4606796	0	True				
ANR	4606800	AssignmentExpression	input_was_unknown_platform_v1 = args . input_was_unknown_platform_v1		4606796	0		=			
ANR	4606801	Identifier	input_was_unknown_platform_v1		4606796	0					
ANR	4606802	MemberAccess	args . input_was_unknown_platform_v1		4606796	1					
ANR	4606803	Identifier	args		4606796	0					
ANR	4606804	Identifier	input_was_unknown_platform_v1		4606796	1					
ANR	4606805	IdentifierDeclStatement	SimpleListIterator < MyString > it ( args . args_list ) ;	492:1:10825:10872	4606796	1	True				
ANR	4606806	IdentifierDecl	it ( args . args_list )		4606796	0					
ANR	4606807	IdentifierDeclType	SimpleListIterator < MyString >		4606796	0					
ANR	4606808	Identifier	it		4606796	1					
ANR	4606809	MemberAccess	args . args_list		4606796	2					
ANR	4606810	Identifier	args		4606796	0					
ANR	4606811	Identifier	args_list		4606796	1					
ANR	4606812	IdentifierDeclStatement	MyString * arg = NULL ;	493:1:10875:10893	4606796	2	True				
ANR	4606813	IdentifierDecl	* arg = NULL		4606796	0					
ANR	4606814	IdentifierDeclType	MyString *		4606796	0					
ANR	4606815	Identifier	arg		4606796	1					
ANR	4606816	AssignmentExpression	* arg = NULL		4606796	2		=			
ANR	4606817	Identifier	NULL		4606796	0					
ANR	4606818	Identifier	NULL		4606796	1					
ANR	4606819	WhileStatement	while ( it . Next ( arg ) )		4606796	3					
ANR	4606820	Condition	it . Next ( arg )	494:7:10902:10913	4606796	0	True				
ANR	4606821	CallExpression	it . Next ( arg )		4606796	0					
ANR	4606822	Callee	it . Next		4606796	0					
ANR	4606823	MemberAccess	it . Next		4606796	0					
ANR	4606824	Identifier	it		4606796	0					
ANR	4606825	Identifier	Next		4606796	1					
ANR	4606826	ArgumentList	arg		4606796	1					
ANR	4606827	Argument	arg		4606796	0					
ANR	4606828	Identifier	arg		4606796	0					
ANR	4606829	CompoundStatement		6:21:163:163	4606796	1					
ANR	4606830	ExpressionStatement	AppendArg ( arg -> Value ( ) )	495:2:10920:10943	4606796	0	True				
ANR	4606831	CallExpression	AppendArg ( arg -> Value ( ) )		4606796	0					
ANR	4606832	Callee	AppendArg		4606796	0					
ANR	4606833	Identifier	AppendArg		4606796	0					
ANR	4606834	ArgumentList	arg -> Value ( )		4606796	1					
ANR	4606835	Argument	arg -> Value ( )		4606796	0					
ANR	4606836	CallExpression	arg -> Value ( )		4606796	0					
ANR	4606837	Callee	arg -> Value		4606796	0					
ANR	4606838	PtrMemberAccess	arg -> Value		4606796	0					
ANR	4606839	Identifier	arg		4606796	0					
ANR	4606840	Identifier	Value		4606796	1					
ANR	4606841	ArgumentList			4606796	1					
ANR	4606842	ReturnType	void		4606796	1					
ANR	4606843	Identifier	ArgList :: AppendArgsFromArgList		4606796	2					
ANR	4606844	ParameterList	ArgList const & args		4606796	3					
ANR	4606845	Parameter	ArgList const & args	488:31:10731:10749	4606796	0	True				
ANR	4606846	ParameterType	ArgList const &		4606796	0					
ANR	4606847	Identifier	args		4606796	1					
ANR	4606848	CFGEntryNode	ENTRY		4606796		True				
ANR	4606849	CFGExitNode	EXIT		4606796		True				
ANR	4606850	Symbol	args		4606796						
ANR	4606851	Symbol	arg -> Value		4606796						
ANR	4606852	Symbol	input_was_unknown_platform_v1		4606796						
ANR	4606853	Symbol	it . Next		4606796						
ANR	4606854	Symbol	args . input_was_unknown_platform_v1		4606796						
ANR	4606855	Symbol	NULL		4606796						
ANR	4606856	Symbol	arg		4606796						
ANR	4606857	Symbol	it		4606796						
ANR	4606858	Symbol	* arg		4606796						
ANR	4606859	Function	ArgList :: GetArgsStringForDisplay	499:0:10951:11321							
ANR	4606860	FunctionDef	"ArgList :: GetArgsStringForDisplay (ClassAd const * ad , MyString * result)"		4606859	0					
ANR	4606861	CompoundStatement		501:0:11025:11321	4606859	0					
ANR	4606862	IdentifierDeclStatement	char * args1 = NULL ;	502:1:11028:11046	4606859	0	True				
ANR	4606863	IdentifierDecl	* args1 = NULL		4606859	0					
ANR	4606864	IdentifierDeclType	char *		4606859	0					
ANR	4606865	Identifier	args1		4606859	1					
ANR	4606866	AssignmentExpression	* args1 = NULL		4606859	2		=			
ANR	4606867	Identifier	NULL		4606859	0					
ANR	4606868	Identifier	NULL		4606859	1					
ANR	4606869	IdentifierDeclStatement	char * args2 = NULL ;	503:1:11049:11067	4606859	1	True				
ANR	4606870	IdentifierDecl	* args2 = NULL		4606859	0					
ANR	4606871	IdentifierDeclType	char *		4606859	0					
ANR	4606872	Identifier	args2		4606859	1					
ANR	4606873	AssignmentExpression	* args2 = NULL		4606859	2		=			
ANR	4606874	Identifier	NULL		4606859	0					
ANR	4606875	Identifier	NULL		4606859	1					
ANR	4606876	ExpressionStatement	ASSERT ( result )	504:1:11070:11084	4606859	2	True				
ANR	4606877	CallExpression	ASSERT ( result )		4606859	0					
ANR	4606878	Callee	ASSERT		4606859	0					
ANR	4606879	Identifier	ASSERT		4606859	0					
ANR	4606880	ArgumentList	result		4606859	1					
ANR	4606881	Argument	result		4606859	0					
ANR	4606882	Identifier	result		4606859	0					
ANR	4606883	IfStatement	"if ( ad -> LookupString ( ATTR_JOB_ARGUMENTS2 , & args2 ) == 1 )"		4606859	3					
ANR	4606884	Condition	"ad -> LookupString ( ATTR_JOB_ARGUMENTS2 , & args2 ) == 1"	505:5:11091:11140	4606859	0	True				
ANR	4606885	EqualityExpression	"ad -> LookupString ( ATTR_JOB_ARGUMENTS2 , & args2 ) == 1"		4606859	0		==			
ANR	4606886	CallExpression	"ad -> LookupString ( ATTR_JOB_ARGUMENTS2 , & args2 )"		4606859	0					
ANR	4606887	Callee	ad -> LookupString		4606859	0					
ANR	4606888	PtrMemberAccess	ad -> LookupString		4606859	0					
ANR	4606889	Identifier	ad		4606859	0					
ANR	4606890	Identifier	LookupString		4606859	1					
ANR	4606891	ArgumentList	ATTR_JOB_ARGUMENTS2		4606859	1					
ANR	4606892	Argument	ATTR_JOB_ARGUMENTS2		4606859	0					
ANR	4606893	Identifier	ATTR_JOB_ARGUMENTS2		4606859	0					
ANR	4606894	Argument	& args2		4606859	1					
ANR	4606895	UnaryOperationExpression	& args2		4606859	0					
ANR	4606896	UnaryOperator	&		4606859	0					
ANR	4606897	Identifier	args2		4606859	1					
ANR	4606898	PrimaryExpression	1		4606859	1					
ANR	4606899	CompoundStatement		5:58:118:118	4606859	1					
ANR	4606900	ExpressionStatement	( * result ) = args2	506:2:11148:11165	4606859	0	True				
ANR	4606901	AssignmentExpression	( * result ) = args2		4606859	0		=			
ANR	4606902	UnaryOperationExpression	* result		4606859	0					
ANR	4606903	UnaryOperator	*		4606859	0					
ANR	4606904	Identifier	result		4606859	1					
ANR	4606905	Identifier	args2		4606859	1					
ANR	4606906	ElseStatement	else		4606859	0					
ANR	4606907	IfStatement	"if ( ad -> LookupString ( ATTR_JOB_ARGUMENTS1 , & args1 ) == 1 )"		4606859	0					
ANR	4606908	Condition	"ad -> LookupString ( ATTR_JOB_ARGUMENTS1 , & args1 ) == 1"	508:10:11180:11229	4606859	0	True				
ANR	4606909	EqualityExpression	"ad -> LookupString ( ATTR_JOB_ARGUMENTS1 , & args1 ) == 1"		4606859	0		==			
ANR	4606910	CallExpression	"ad -> LookupString ( ATTR_JOB_ARGUMENTS1 , & args1 )"		4606859	0					
ANR	4606911	Callee	ad -> LookupString		4606859	0					
ANR	4606912	PtrMemberAccess	ad -> LookupString		4606859	0					
ANR	4606913	Identifier	ad		4606859	0					
ANR	4606914	Identifier	LookupString		4606859	1					
ANR	4606915	ArgumentList	ATTR_JOB_ARGUMENTS1		4606859	1					
ANR	4606916	Argument	ATTR_JOB_ARGUMENTS1		4606859	0					
ANR	4606917	Identifier	ATTR_JOB_ARGUMENTS1		4606859	0					
ANR	4606918	Argument	& args1		4606859	1					
ANR	4606919	UnaryOperationExpression	& args1		4606859	0					
ANR	4606920	UnaryOperator	&		4606859	0					
ANR	4606921	Identifier	args1		4606859	1					
ANR	4606922	PrimaryExpression	1		4606859	1					
ANR	4606923	CompoundStatement		8:63:207:207	4606859	1					
ANR	4606924	ExpressionStatement	( * result ) = args1	509:2:11237:11254	4606859	0	True				
ANR	4606925	AssignmentExpression	( * result ) = args1		4606859	0		=			
ANR	4606926	UnaryOperationExpression	* result		4606859	0					
ANR	4606927	UnaryOperator	*		4606859	0					
ANR	4606928	Identifier	result		4606859	1					
ANR	4606929	Identifier	args1		4606859	1					
ANR	4606930	IfStatement	if ( args1 )		4606859	4					
ANR	4606931	Condition	args1	511:4:11263:11267	4606859	0	True				
ANR	4606932	Identifier	args1		4606859	0					
ANR	4606933	CompoundStatement		11:11:244:244	4606859	1					
ANR	4606934	ExpressionStatement	free ( args1 )	512:2:11274:11285	4606859	0	True				
ANR	4606935	CallExpression	free ( args1 )		4606859	0					
ANR	4606936	Callee	free		4606859	0					
ANR	4606937	Identifier	free		4606859	0					
ANR	4606938	ArgumentList	args1		4606859	1					
ANR	4606939	Argument	args1		4606859	0					
ANR	4606940	Identifier	args1		4606859	0					
ANR	4606941	IfStatement	if ( args2 )		4606859	5					
ANR	4606942	Condition	args2	514:4:11294:11298	4606859	0	True				
ANR	4606943	Identifier	args2		4606859	0					
ANR	4606944	CompoundStatement		14:11:275:275	4606859	1					
ANR	4606945	ExpressionStatement	free ( args2 )	515:2:11305:11316	4606859	0	True				
ANR	4606946	CallExpression	free ( args2 )		4606859	0					
ANR	4606947	Callee	free		4606859	0					
ANR	4606948	Identifier	free		4606859	0					
ANR	4606949	ArgumentList	args2		4606859	1					
ANR	4606950	Argument	args2		4606859	0					
ANR	4606951	Identifier	args2		4606859	0					
ANR	4606952	ReturnType	void		4606859	1					
ANR	4606953	Identifier	ArgList :: GetArgsStringForDisplay		4606859	2					
ANR	4606954	ParameterList	"ClassAd const * ad , MyString * result"		4606859	3					
ANR	4606955	Parameter	ClassAd const * ad	500:33:10989:11005	4606859	0	True				
ANR	4606956	ParameterType	ClassAd const *		4606859	0					
ANR	4606957	Identifier	ad		4606859	1					
ANR	4606958	Parameter	MyString * result	500:51:11007:11022	4606859	1	True				
ANR	4606959	ParameterType	MyString *		4606859	0					
ANR	4606960	Identifier	result		4606859	1					
ANR	4606961	CFGEntryNode	ENTRY		4606859		True				
ANR	4606962	CFGExitNode	EXIT		4606859		True				
ANR	4606963	Symbol	result		4606859						
ANR	4606964	Symbol	ad -> LookupString		4606859						
ANR	4606965	Symbol	ad		4606859						
ANR	4606966	Symbol	NULL		4606859						
ANR	4606967	Symbol	* result		4606859						
ANR	4606968	Symbol	args1		4606859						
ANR	4606969	Symbol	args2		4606859						
ANR	4606970	Symbol	* ad		4606859						
ANR	4606971	Symbol	ATTR_JOB_ARGUMENTS2		4606859						
ANR	4606972	Symbol	ATTR_JOB_ARGUMENTS1		4606859						
ANR	4606973	Symbol	& args1		4606859						
ANR	4606974	Symbol	& args2		4606859						
ANR	4606975	Function	ArgList :: AppendArgsFromClassAd	519:0:11324:11963							
ANR	4606976	FunctionDef	"ArgList :: AppendArgsFromClassAd (ClassAd const * ad , MyString * error_msg)"		4606975	0					
ANR	4606977	CompoundStatement		521:0:11399:11963	4606975	0					
ANR	4606978	IdentifierDeclStatement	char * args1 = NULL ;	522:1:11402:11420	4606975	0	True				
ANR	4606979	IdentifierDecl	* args1 = NULL		4606975	0					
ANR	4606980	IdentifierDeclType	char *		4606975	0					
ANR	4606981	Identifier	args1		4606975	1					
ANR	4606982	AssignmentExpression	* args1 = NULL		4606975	2		=			
ANR	4606983	Identifier	NULL		4606975	0					
ANR	4606984	Identifier	NULL		4606975	1					
ANR	4606985	IdentifierDeclStatement	char * args2 = NULL ;	523:1:11423:11441	4606975	1	True				
ANR	4606986	IdentifierDecl	* args2 = NULL		4606975	0					
ANR	4606987	IdentifierDeclType	char *		4606975	0					
ANR	4606988	Identifier	args2		4606975	1					
ANR	4606989	AssignmentExpression	* args2 = NULL		4606975	2		=			
ANR	4606990	Identifier	NULL		4606975	0					
ANR	4606991	Identifier	NULL		4606975	1					
ANR	4606992	IdentifierDeclStatement	bool success = false ;	524:1:11444:11464	4606975	2	True				
ANR	4606993	IdentifierDecl	success = false		4606975	0					
ANR	4606994	IdentifierDeclType	bool		4606975	0					
ANR	4606995	Identifier	success		4606975	1					
ANR	4606996	AssignmentExpression	success = false		4606975	2		=			
ANR	4606997	Identifier	false		4606975	0					
ANR	4606998	Identifier	false		4606975	1					
ANR	4606999	IfStatement	"if ( ad -> LookupString ( ATTR_JOB_ARGUMENTS2 , & args2 ) == 1 )"		4606975	3					
ANR	4607000	Condition	"ad -> LookupString ( ATTR_JOB_ARGUMENTS2 , & args2 ) == 1"	526:5:11472:11521	4606975	0	True				
ANR	4607001	EqualityExpression	"ad -> LookupString ( ATTR_JOB_ARGUMENTS2 , & args2 ) == 1"		4606975	0		==			
ANR	4607002	CallExpression	"ad -> LookupString ( ATTR_JOB_ARGUMENTS2 , & args2 )"		4606975	0					
ANR	4607003	Callee	ad -> LookupString		4606975	0					
ANR	4607004	PtrMemberAccess	ad -> LookupString		4606975	0					
ANR	4607005	Identifier	ad		4606975	0					
ANR	4607006	Identifier	LookupString		4606975	1					
ANR	4607007	ArgumentList	ATTR_JOB_ARGUMENTS2		4606975	1					
ANR	4607008	Argument	ATTR_JOB_ARGUMENTS2		4606975	0					
ANR	4607009	Identifier	ATTR_JOB_ARGUMENTS2		4606975	0					
ANR	4607010	Argument	& args2		4606975	1					
ANR	4607011	UnaryOperationExpression	& args2		4606975	0					
ANR	4607012	UnaryOperator	&		4606975	0					
ANR	4607013	Identifier	args2		4606975	1					
ANR	4607014	PrimaryExpression	1		4606975	1					
ANR	4607015	CompoundStatement		6:58:125:125	4606975	1					
ANR	4607016	ExpressionStatement	"success = AppendArgsV2Raw ( args2 , error_msg )"	527:2:11529:11571	4606975	0	True				
ANR	4607017	AssignmentExpression	"success = AppendArgsV2Raw ( args2 , error_msg )"		4606975	0		=			
ANR	4607018	Identifier	success		4606975	0					
ANR	4607019	CallExpression	"AppendArgsV2Raw ( args2 , error_msg )"		4606975	1					
ANR	4607020	Callee	AppendArgsV2Raw		4606975	0					
ANR	4607021	Identifier	AppendArgsV2Raw		4606975	0					
ANR	4607022	ArgumentList	args2		4606975	1					
ANR	4607023	Argument	args2		4606975	0					
ANR	4607024	Identifier	args2		4606975	0					
ANR	4607025	Argument	error_msg		4606975	1					
ANR	4607026	Identifier	error_msg		4606975	0					
ANR	4607027	ElseStatement	else		4606975	0					
ANR	4607028	IfStatement	"if ( ad -> LookupString ( ATTR_JOB_ARGUMENTS1 , & args1 ) == 1 )"		4606975	0					
ANR	4607029	Condition	"ad -> LookupString ( ATTR_JOB_ARGUMENTS1 , & args1 ) == 1"	529:10:11586:11635	4606975	0	True				
ANR	4607030	EqualityExpression	"ad -> LookupString ( ATTR_JOB_ARGUMENTS1 , & args1 ) == 1"		4606975	0		==			
ANR	4607031	CallExpression	"ad -> LookupString ( ATTR_JOB_ARGUMENTS1 , & args1 )"		4606975	0					
ANR	4607032	Callee	ad -> LookupString		4606975	0					
ANR	4607033	PtrMemberAccess	ad -> LookupString		4606975	0					
ANR	4607034	Identifier	ad		4606975	0					
ANR	4607035	Identifier	LookupString		4606975	1					
ANR	4607036	ArgumentList	ATTR_JOB_ARGUMENTS1		4606975	1					
ANR	4607037	Argument	ATTR_JOB_ARGUMENTS1		4606975	0					
ANR	4607038	Identifier	ATTR_JOB_ARGUMENTS1		4606975	0					
ANR	4607039	Argument	& args1		4606975	1					
ANR	4607040	UnaryOperationExpression	& args1		4606975	0					
ANR	4607041	UnaryOperator	&		4606975	0					
ANR	4607042	Identifier	args1		4606975	1					
ANR	4607043	PrimaryExpression	1		4606975	1					
ANR	4607044	CompoundStatement		9:63:239:239	4606975	1					
ANR	4607045	ExpressionStatement	"success = AppendArgsV1Raw ( args1 , error_msg )"	530:2:11643:11685	4606975	0	True				
ANR	4607046	AssignmentExpression	"success = AppendArgsV1Raw ( args1 , error_msg )"		4606975	0		=			
ANR	4607047	Identifier	success		4606975	0					
ANR	4607048	CallExpression	"AppendArgsV1Raw ( args1 , error_msg )"		4606975	1					
ANR	4607049	Callee	AppendArgsV1Raw		4606975	0					
ANR	4607050	Identifier	AppendArgsV1Raw		4606975	0					
ANR	4607051	ArgumentList	args1		4606975	1					
ANR	4607052	Argument	args1		4606975	0					
ANR	4607053	Identifier	args1		4606975	0					
ANR	4607054	Argument	error_msg		4606975	1					
ANR	4607055	Identifier	error_msg		4606975	0					
ANR	4607056	ElseStatement	else		4606975	0					
ANR	4607057	CompoundStatement		12:6:296:296	4606975	0					
ANR	4607058	ExpressionStatement	success = true	536:2:11877:11891	4606975	0	True				
ANR	4607059	AssignmentExpression	success = true		4606975	0		=			
ANR	4607060	Identifier	success		4606975	0					
ANR	4607061	Identifier	true		4606975	1					
ANR	4607062	IfStatement	if ( args1 )		4606975	4					
ANR	4607063	Condition	args1	539:4:11901:11905	4606975	0	True				
ANR	4607064	Identifier	args1		4606975	0					
ANR	4607065	ExpressionStatement	free ( args1 )	539:11:11908:11919	4606975	1	True				
ANR	4607066	CallExpression	free ( args1 )		4606975	0					
ANR	4607067	Callee	free		4606975	0					
ANR	4607068	Identifier	free		4606975	0					
ANR	4607069	ArgumentList	args1		4606975	1					
ANR	4607070	Argument	args1		4606975	0					
ANR	4607071	Identifier	args1		4606975	0					
ANR	4607072	IfStatement	if ( args2 )		4606975	5					
ANR	4607073	Condition	args2	540:4:11925:11929	4606975	0	True				
ANR	4607074	Identifier	args2		4606975	0					
ANR	4607075	ExpressionStatement	free ( args2 )	540:11:11932:11943	4606975	1	True				
ANR	4607076	CallExpression	free ( args2 )		4606975	0					
ANR	4607077	Callee	free		4606975	0					
ANR	4607078	Identifier	free		4606975	0					
ANR	4607079	ArgumentList	args2		4606975	1					
ANR	4607080	Argument	args2		4606975	0					
ANR	4607081	Identifier	args2		4606975	0					
ANR	4607082	ReturnStatement	return success ;	542:1:11947:11961	4606975	6	True				
ANR	4607083	Identifier	success		4606975	0					
ANR	4607084	ReturnType	bool		4606975	1					
ANR	4607085	Identifier	ArgList :: AppendArgsFromClassAd		4606975	2					
ANR	4607086	ParameterList	"ClassAd const * ad , MyString * error_msg"		4606975	3					
ANR	4607087	Parameter	ClassAd const * ad	520:31:11360:11376	4606975	0	True				
ANR	4607088	ParameterType	ClassAd const *		4606975	0					
ANR	4607089	Identifier	ad		4606975	1					
ANR	4607090	Parameter	MyString * error_msg	520:49:11378:11396	4606975	1	True				
ANR	4607091	ParameterType	MyString *		4606975	0					
ANR	4607092	Identifier	error_msg		4606975	1					
ANR	4607093	CFGEntryNode	ENTRY		4606975		True				
ANR	4607094	CFGExitNode	EXIT		4606975		True				
ANR	4607095	Symbol	ad -> LookupString		4606975						
ANR	4607096	Symbol	AppendArgsV2Raw		4606975						
ANR	4607097	Symbol	ad		4606975						
ANR	4607098	Symbol	error_msg		4606975						
ANR	4607099	Symbol	NULL		4606975						
ANR	4607100	Symbol	AppendArgsV1Raw		4606975						
ANR	4607101	Symbol	false		4606975						
ANR	4607102	Symbol	* ad		4606975						
ANR	4607103	Symbol	ATTR_JOB_ARGUMENTS2		4606975						
ANR	4607104	Symbol	ATTR_JOB_ARGUMENTS1		4606975						
ANR	4607105	Symbol	& args1		4606975						
ANR	4607106	Symbol	& args2		4606975						
ANR	4607107	Symbol	success		4606975						
ANR	4607108	Symbol	args1		4606975						
ANR	4607109	Symbol	true		4606975						
ANR	4607110	Symbol	args2		4606975						
ANR	4607111	Function	ArgList :: CondorVersionRequiresV1	545:0:11966:12132							
ANR	4607112	FunctionDef	ArgList :: CondorVersionRequiresV1 (CondorVersionInfo const & condor_version)		4607111	0					
ANR	4607113	CompoundStatement		547:0:12045:12132	4607111	0					
ANR	4607114	ReturnStatement	"return ! condor_version . built_since_version ( 6 , 7 , 15 ) ;"	549:1:12080:12130	4607111	0	True				
ANR	4607115	UnaryOperationExpression	"! condor_version . built_since_version ( 6 , 7 , 15 )"		4607111	0					
ANR	4607116	UnaryOperator	!		4607111	0					
ANR	4607117	CallExpression	"condor_version . built_since_version ( 6 , 7 , 15 )"		4607111	1					
ANR	4607118	Callee	condor_version . built_since_version		4607111	0					
ANR	4607119	MemberAccess	condor_version . built_since_version		4607111	0					
ANR	4607120	Identifier	condor_version		4607111	0					
ANR	4607121	Identifier	built_since_version		4607111	1					
ANR	4607122	ArgumentList	6		4607111	1					
ANR	4607123	Argument	6		4607111	0					
ANR	4607124	PrimaryExpression	6		4607111	0					
ANR	4607125	Argument	7		4607111	1					
ANR	4607126	PrimaryExpression	7		4607111	0					
ANR	4607127	Argument	15		4607111	2					
ANR	4607128	PrimaryExpression	15		4607111	0					
ANR	4607129	ReturnType	bool		4607111	1					
ANR	4607130	Identifier	ArgList :: CondorVersionRequiresV1		4607111	2					
ANR	4607131	ParameterList	CondorVersionInfo const & condor_version		4607111	3					
ANR	4607132	Parameter	CondorVersionInfo const & condor_version	546:33:12004:12042	4607111	0	True				
ANR	4607133	ParameterType	CondorVersionInfo const &		4607111	0					
ANR	4607134	Identifier	condor_version		4607111	1					
ANR	4607135	CFGEntryNode	ENTRY		4607111		True				
ANR	4607136	CFGExitNode	EXIT		4607111		True				
ANR	4607137	Symbol	condor_version		4607111						
ANR	4607138	Symbol	condor_version . built_since_version		4607111						
ANR	4607139	Function	ArgList :: InsertArgsIntoClassAd	552:0:12135:14306							
ANR	4607140	FunctionDef	"ArgList :: InsertArgsIntoClassAd (ClassAd * ad , CondorVersionInfo * condor_version , MyString * error_msg)"		4607139	0					
ANR	4607141	CompoundStatement		554:0:12238:14306	4607139	0					
ANR	4607142	IdentifierDeclStatement	bool has_args1 = ad -> LookupExpr ( ATTR_JOB_ARGUMENTS1 ) != NULL ;	555:1:12241:12301	4607139	0	True				
ANR	4607143	IdentifierDecl	has_args1 = ad -> LookupExpr ( ATTR_JOB_ARGUMENTS1 ) != NULL		4607139	0					
ANR	4607144	IdentifierDeclType	bool		4607139	0					
ANR	4607145	Identifier	has_args1		4607139	1					
ANR	4607146	AssignmentExpression	has_args1 = ad -> LookupExpr ( ATTR_JOB_ARGUMENTS1 ) != NULL		4607139	2		=			
ANR	4607147	Identifier	has_args1		4607139	0					
ANR	4607148	EqualityExpression	ad -> LookupExpr ( ATTR_JOB_ARGUMENTS1 ) != NULL		4607139	1		!=			
ANR	4607149	CallExpression	ad -> LookupExpr ( ATTR_JOB_ARGUMENTS1 )		4607139	0					
ANR	4607150	Callee	ad -> LookupExpr		4607139	0					
ANR	4607151	PtrMemberAccess	ad -> LookupExpr		4607139	0					
ANR	4607152	Identifier	ad		4607139	0					
ANR	4607153	Identifier	LookupExpr		4607139	1					
ANR	4607154	ArgumentList	ATTR_JOB_ARGUMENTS1		4607139	1					
ANR	4607155	Argument	ATTR_JOB_ARGUMENTS1		4607139	0					
ANR	4607156	Identifier	ATTR_JOB_ARGUMENTS1		4607139	0					
ANR	4607157	Identifier	NULL		4607139	1					
ANR	4607158	IdentifierDeclStatement	bool has_args2 = ad -> LookupExpr ( ATTR_JOB_ARGUMENTS2 ) != NULL ;	556:1:12304:12364	4607139	1	True				
ANR	4607159	IdentifierDecl	has_args2 = ad -> LookupExpr ( ATTR_JOB_ARGUMENTS2 ) != NULL		4607139	0					
ANR	4607160	IdentifierDeclType	bool		4607139	0					
ANR	4607161	Identifier	has_args2		4607139	1					
ANR	4607162	AssignmentExpression	has_args2 = ad -> LookupExpr ( ATTR_JOB_ARGUMENTS2 ) != NULL		4607139	2		=			
ANR	4607163	Identifier	has_args2		4607139	0					
ANR	4607164	EqualityExpression	ad -> LookupExpr ( ATTR_JOB_ARGUMENTS2 ) != NULL		4607139	1		!=			
ANR	4607165	CallExpression	ad -> LookupExpr ( ATTR_JOB_ARGUMENTS2 )		4607139	0					
ANR	4607166	Callee	ad -> LookupExpr		4607139	0					
ANR	4607167	PtrMemberAccess	ad -> LookupExpr		4607139	0					
ANR	4607168	Identifier	ad		4607139	0					
ANR	4607169	Identifier	LookupExpr		4607139	1					
ANR	4607170	ArgumentList	ATTR_JOB_ARGUMENTS2		4607139	1					
ANR	4607171	Argument	ATTR_JOB_ARGUMENTS2		4607139	0					
ANR	4607172	Identifier	ATTR_JOB_ARGUMENTS2		4607139	0					
ANR	4607173	Identifier	NULL		4607139	1					
ANR	4607174	IdentifierDeclStatement	bool requires_v1 = false ;	558:1:12368:12392	4607139	2	True				
ANR	4607175	IdentifierDecl	requires_v1 = false		4607139	0					
ANR	4607176	IdentifierDeclType	bool		4607139	0					
ANR	4607177	Identifier	requires_v1		4607139	1					
ANR	4607178	AssignmentExpression	requires_v1 = false		4607139	2		=			
ANR	4607179	Identifier	false		4607139	0					
ANR	4607180	Identifier	false		4607139	1					
ANR	4607181	IdentifierDeclStatement	bool condor_version_requires_v1 = false ;	559:1:12395:12434	4607139	3	True				
ANR	4607182	IdentifierDecl	condor_version_requires_v1 = false		4607139	0					
ANR	4607183	IdentifierDeclType	bool		4607139	0					
ANR	4607184	Identifier	condor_version_requires_v1		4607139	1					
ANR	4607185	AssignmentExpression	condor_version_requires_v1 = false		4607139	2		=			
ANR	4607186	Identifier	false		4607139	0					
ANR	4607187	Identifier	false		4607139	1					
ANR	4607188	IfStatement	if ( condor_version )		4607139	4					
ANR	4607189	Condition	condor_version	560:4:12440:12453	4607139	0	True				
ANR	4607190	Identifier	condor_version		4607139	0					
ANR	4607191	CompoundStatement		7:20:217:217	4607139	1					
ANR	4607192	ExpressionStatement	requires_v1 = CondorVersionRequiresV1 ( * condor_version )	561:2:12460:12514	4607139	0	True				
ANR	4607193	AssignmentExpression	requires_v1 = CondorVersionRequiresV1 ( * condor_version )		4607139	0		=			
ANR	4607194	Identifier	requires_v1		4607139	0					
ANR	4607195	CallExpression	CondorVersionRequiresV1 ( * condor_version )		4607139	1					
ANR	4607196	Callee	CondorVersionRequiresV1		4607139	0					
ANR	4607197	Identifier	CondorVersionRequiresV1		4607139	0					
ANR	4607198	ArgumentList	* condor_version		4607139	1					
ANR	4607199	Argument	* condor_version		4607139	0					
ANR	4607200	UnaryOperationExpression	* condor_version		4607139	0					
ANR	4607201	UnaryOperator	*		4607139	0					
ANR	4607202	Identifier	condor_version		4607139	1					
ANR	4607203	ExpressionStatement	condor_version_requires_v1 = true	562:2:12518:12551	4607139	1	True				
ANR	4607204	AssignmentExpression	condor_version_requires_v1 = true		4607139	0		=			
ANR	4607205	Identifier	condor_version_requires_v1		4607139	0					
ANR	4607206	Identifier	true		4607139	1					
ANR	4607207	ElseStatement	else		4607139	0					
ANR	4607208	IfStatement	if ( input_was_unknown_platform_v1 )		4607139	0					
ANR	4607209	Condition	input_was_unknown_platform_v1	564:9:12565:12593	4607139	0	True				
ANR	4607210	Identifier	input_was_unknown_platform_v1		4607139	0					
ANR	4607211	CompoundStatement		11:40:357:357	4607139	1					
ANR	4607212	ExpressionStatement	requires_v1 = true	565:2:12600:12618	4607139	0	True				
ANR	4607213	AssignmentExpression	requires_v1 = true		4607139	0		=			
ANR	4607214	Identifier	requires_v1		4607139	0					
ANR	4607215	Identifier	true		4607139	1					
ANR	4607216	IfStatement	if ( ! requires_v1 )		4607139	5					
ANR	4607217	Condition	! requires_v1	568:5:12629:12640	4607139	0	True				
ANR	4607218	UnaryOperationExpression	! requires_v1		4607139	0					
ANR	4607219	UnaryOperator	!		4607139	0					
ANR	4607220	Identifier	requires_v1		4607139	1					
ANR	4607221	CompoundStatement		17:2:410:424	4607139	1					
ANR	4607222	IdentifierDeclStatement	MyString args2 ;	570:2:12649:12663	4607139	0	True				
ANR	4607223	IdentifierDecl	args2		4607139	0					
ANR	4607224	IdentifierDeclType	MyString		4607139	0					
ANR	4607225	Identifier	args2		4607139	1					
ANR	4607226	IfStatement	"if ( ! GetArgsStringV2Raw ( & args2 , error_msg ) )"		4607139	1					
ANR	4607227	Condition	"! GetArgsStringV2Raw ( & args2 , error_msg )"	571:5:12670:12706	4607139	0	True				
ANR	4607228	UnaryOperationExpression	"! GetArgsStringV2Raw ( & args2 , error_msg )"		4607139	0					
ANR	4607229	UnaryOperator	!		4607139	0					
ANR	4607230	CallExpression	"GetArgsStringV2Raw ( & args2 , error_msg )"		4607139	1					
ANR	4607231	Callee	GetArgsStringV2Raw		4607139	0					
ANR	4607232	Identifier	GetArgsStringV2Raw		4607139	0					
ANR	4607233	ArgumentList	& args2		4607139	1					
ANR	4607234	Argument	& args2		4607139	0					
ANR	4607235	UnaryOperationExpression	& args2		4607139	0					
ANR	4607236	UnaryOperator	&		4607139	0					
ANR	4607237	Identifier	args2		4607139	1					
ANR	4607238	Argument	error_msg		4607139	1					
ANR	4607239	Identifier	error_msg		4607139	0					
ANR	4607240	ReturnStatement	return false ;	571:44:12709:12721	4607139	1	True				
ANR	4607241	Identifier	false		4607139	0					
ANR	4607242	ExpressionStatement	"ad -> Assign ( ATTR_JOB_ARGUMENTS2 , args2 . Value ( ) )"	572:2:12725:12770	4607139	2	True				
ANR	4607243	CallExpression	"ad -> Assign ( ATTR_JOB_ARGUMENTS2 , args2 . Value ( ) )"		4607139	0					
ANR	4607244	Callee	ad -> Assign		4607139	0					
ANR	4607245	PtrMemberAccess	ad -> Assign		4607139	0					
ANR	4607246	Identifier	ad		4607139	0					
ANR	4607247	Identifier	Assign		4607139	1					
ANR	4607248	ArgumentList	ATTR_JOB_ARGUMENTS2		4607139	1					
ANR	4607249	Argument	ATTR_JOB_ARGUMENTS2		4607139	0					
ANR	4607250	Identifier	ATTR_JOB_ARGUMENTS2		4607139	0					
ANR	4607251	Argument	args2 . Value ( )		4607139	1					
ANR	4607252	CallExpression	args2 . Value ( )		4607139	0					
ANR	4607253	Callee	args2 . Value		4607139	0					
ANR	4607254	MemberAccess	args2 . Value		4607139	0					
ANR	4607255	Identifier	args2		4607139	0					
ANR	4607256	Identifier	Value		4607139	1					
ANR	4607257	ArgumentList			4607139	1					
ANR	4607258	ElseStatement	else		4607139	0					
ANR	4607259	IfStatement	if ( has_args2 )		4607139	0					
ANR	4607260	Condition	has_args2	574:9:12784:12792	4607139	0	True				
ANR	4607261	Identifier	has_args2		4607139	0					
ANR	4607262	CompoundStatement		21:20:556:556	4607139	1					
ANR	4607263	ExpressionStatement	ad -> Delete ( ATTR_JOB_ARGUMENTS2 )	575:2:12799:12830	4607139	0	True				
ANR	4607264	CallExpression	ad -> Delete ( ATTR_JOB_ARGUMENTS2 )		4607139	0					
ANR	4607265	Callee	ad -> Delete		4607139	0					
ANR	4607266	PtrMemberAccess	ad -> Delete		4607139	0					
ANR	4607267	Identifier	ad		4607139	0					
ANR	4607268	Identifier	Delete		4607139	1					
ANR	4607269	ArgumentList	ATTR_JOB_ARGUMENTS2		4607139	1					
ANR	4607270	Argument	ATTR_JOB_ARGUMENTS2		4607139	0					
ANR	4607271	Identifier	ATTR_JOB_ARGUMENTS2		4607139	0					
ANR	4607272	IfStatement	if ( requires_v1 )		4607139	6					
ANR	4607273	Condition	requires_v1	578:4:12840:12850	4607139	0	True				
ANR	4607274	Identifier	requires_v1		4607139	0					
ANR	4607275	CompoundStatement		26:2:618:632	4607139	1					
ANR	4607276	IdentifierDeclStatement	MyString args1 ;	579:2:12857:12871	4607139	0	True				
ANR	4607277	IdentifierDecl	args1		4607139	0					
ANR	4607278	IdentifierDeclType	MyString		4607139	0					
ANR	4607279	Identifier	args1		4607139	1					
ANR	4607280	IfStatement	"if ( GetArgsStringV1Raw ( & args1 , error_msg ) )"		4607139	1					
ANR	4607281	Condition	"GetArgsStringV1Raw ( & args1 , error_msg )"	581:5:12879:12914	4607139	0	True				
ANR	4607282	CallExpression	"GetArgsStringV1Raw ( & args1 , error_msg )"		4607139	0					
ANR	4607283	Callee	GetArgsStringV1Raw		4607139	0					
ANR	4607284	Identifier	GetArgsStringV1Raw		4607139	0					
ANR	4607285	ArgumentList	& args1		4607139	1					
ANR	4607286	Argument	& args1		4607139	0					
ANR	4607287	UnaryOperationExpression	& args1		4607139	0					
ANR	4607288	UnaryOperator	&		4607139	0					
ANR	4607289	Identifier	args1		4607139	1					
ANR	4607290	Argument	error_msg		4607139	1					
ANR	4607291	Identifier	error_msg		4607139	0					
ANR	4607292	CompoundStatement		28:43:678:678	4607139	1					
ANR	4607293	ExpressionStatement	"ad -> Assign ( ATTR_JOB_ARGUMENTS1 , args1 . Value ( ) )"	582:3:12922:12967	4607139	0	True				
ANR	4607294	CallExpression	"ad -> Assign ( ATTR_JOB_ARGUMENTS1 , args1 . Value ( ) )"		4607139	0					
ANR	4607295	Callee	ad -> Assign		4607139	0					
ANR	4607296	PtrMemberAccess	ad -> Assign		4607139	0					
ANR	4607297	Identifier	ad		4607139	0					
ANR	4607298	Identifier	Assign		4607139	1					
ANR	4607299	ArgumentList	ATTR_JOB_ARGUMENTS1		4607139	1					
ANR	4607300	Argument	ATTR_JOB_ARGUMENTS1		4607139	0					
ANR	4607301	Identifier	ATTR_JOB_ARGUMENTS1		4607139	0					
ANR	4607302	Argument	args1 . Value ( )		4607139	1					
ANR	4607303	CallExpression	args1 . Value ( )		4607139	0					
ANR	4607304	Callee	args1 . Value		4607139	0					
ANR	4607305	MemberAccess	args1 . Value		4607139	0					
ANR	4607306	Identifier	args1		4607139	0					
ANR	4607307	Identifier	Value		4607139	1					
ANR	4607308	ArgumentList			4607139	1					
ANR	4607309	ElseStatement	else		4607139	0					
ANR	4607310	CompoundStatement		31:7:741:741	4607139	0					
ANR	4607311	IfStatement	if ( condor_version_requires_v1 && ! input_was_unknown_platform_v1 )		4607139	0					
ANR	4607312	Condition	condor_version_requires_v1 && ! input_was_unknown_platform_v1	585:6:12988:13047	4607139	0	True				
ANR	4607313	AndExpression	condor_version_requires_v1 && ! input_was_unknown_platform_v1		4607139	0		&&			
ANR	4607314	Identifier	condor_version_requires_v1		4607139	0					
ANR	4607315	UnaryOperationExpression	! input_was_unknown_platform_v1		4607139	1					
ANR	4607316	UnaryOperator	!		4607139	0					
ANR	4607317	Identifier	input_was_unknown_platform_v1		4607139	1					
ANR	4607318	CompoundStatement		32:68:811:811	4607139	1					
ANR	4607319	ExpressionStatement	ad -> Delete ( ATTR_JOB_ARGUMENTS1 )	601:4:13789:13820	4607139	0	True				
ANR	4607320	CallExpression	ad -> Delete ( ATTR_JOB_ARGUMENTS1 )		4607139	0					
ANR	4607321	Callee	ad -> Delete		4607139	0					
ANR	4607322	PtrMemberAccess	ad -> Delete		4607139	0					
ANR	4607323	Identifier	ad		4607139	0					
ANR	4607324	Identifier	Delete		4607139	1					
ANR	4607325	ArgumentList	ATTR_JOB_ARGUMENTS1		4607139	1					
ANR	4607326	Argument	ATTR_JOB_ARGUMENTS1		4607139	0					
ANR	4607327	Identifier	ATTR_JOB_ARGUMENTS1		4607139	0					
ANR	4607328	ExpressionStatement	ad -> Delete ( ATTR_JOB_ARGUMENTS2 )	602:4:13826:13857	4607139	1	True				
ANR	4607329	CallExpression	ad -> Delete ( ATTR_JOB_ARGUMENTS2 )		4607139	0					
ANR	4607330	Callee	ad -> Delete		4607139	0					
ANR	4607331	PtrMemberAccess	ad -> Delete		4607139	0					
ANR	4607332	Identifier	ad		4607139	0					
ANR	4607333	Identifier	Delete		4607139	1					
ANR	4607334	ArgumentList	ATTR_JOB_ARGUMENTS2		4607139	1					
ANR	4607335	Argument	ATTR_JOB_ARGUMENTS2		4607139	0					
ANR	4607336	Identifier	ATTR_JOB_ARGUMENTS2		4607139	0					
ANR	4607337	IfStatement	if ( error_msg )		4607139	2					
ANR	4607338	Condition	error_msg	603:7:13866:13874	4607139	0	True				
ANR	4607339	Identifier	error_msg		4607139	0					
ANR	4607340	CompoundStatement		50:18:1638:1638	4607139	1					
ANR	4607341	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Failed to convert arguments to V1 syntax: %s\\n"" , error_msg -> Value ( ) )"	604:5:13884:13972	4607139	0	True				
ANR	4607342	CallExpression	"dprintf ( D_FULLDEBUG , ""Failed to convert arguments to V1 syntax: %s\\n"" , error_msg -> Value ( ) )"		4607139	0					
ANR	4607343	Callee	dprintf		4607139	0					
ANR	4607344	Identifier	dprintf		4607139	0					
ANR	4607345	ArgumentList	D_FULLDEBUG		4607139	1					
ANR	4607346	Argument	D_FULLDEBUG		4607139	0					
ANR	4607347	Identifier	D_FULLDEBUG		4607139	0					
ANR	4607348	Argument	"""Failed to convert arguments to V1 syntax: %s\\n"""		4607139	1					
ANR	4607349	PrimaryExpression	"""Failed to convert arguments to V1 syntax: %s\\n"""		4607139	0					
ANR	4607350	Argument	error_msg -> Value ( )		4607139	2					
ANR	4607351	CallExpression	error_msg -> Value ( )		4607139	0					
ANR	4607352	Callee	error_msg -> Value		4607139	0					
ANR	4607353	PtrMemberAccess	error_msg -> Value		4607139	0					
ANR	4607354	Identifier	error_msg		4607139	0					
ANR	4607355	Identifier	Value		4607139	1					
ANR	4607356	ArgumentList			4607139	1					
ANR	4607357	ElseStatement	else		4607139	0					
ANR	4607358	CompoundStatement		54:8:1754:1754	4607139	0					
ANR	4607359	ExpressionStatement	"AddErrorMessage ( ""Failed to convert arguments to V1 syntax."" , error_msg )"	611:4:14130:14200	4607139	0	True				
ANR	4607360	CallExpression	"AddErrorMessage ( ""Failed to convert arguments to V1 syntax."" , error_msg )"		4607139	0					
ANR	4607361	Callee	AddErrorMessage		4607139	0					
ANR	4607362	Identifier	AddErrorMessage		4607139	0					
ANR	4607363	ArgumentList	"""Failed to convert arguments to V1 syntax."""		4607139	1					
ANR	4607364	Argument	"""Failed to convert arguments to V1 syntax."""		4607139	0					
ANR	4607365	PrimaryExpression	"""Failed to convert arguments to V1 syntax."""		4607139	0					
ANR	4607366	Argument	error_msg		4607139	1					
ANR	4607367	Identifier	error_msg		4607139	0					
ANR	4607368	ReturnStatement	return false ;	612:4:14206:14218	4607139	1	True				
ANR	4607369	Identifier	false		4607139	0					
ANR	4607370	ElseStatement	else		4607139	0					
ANR	4607371	IfStatement	if ( has_args1 )		4607139	0					
ANR	4607372	Condition	has_args1	616:9:14241:14249	4607139	0	True				
ANR	4607373	Identifier	has_args1		4607139	0					
ANR	4607374	CompoundStatement		63:20:2013:2013	4607139	1					
ANR	4607375	ExpressionStatement	ad -> Delete ( ATTR_JOB_ARGUMENTS1 )	617:2:14256:14287	4607139	0	True				
ANR	4607376	CallExpression	ad -> Delete ( ATTR_JOB_ARGUMENTS1 )		4607139	0					
ANR	4607377	Callee	ad -> Delete		4607139	0					
ANR	4607378	PtrMemberAccess	ad -> Delete		4607139	0					
ANR	4607379	Identifier	ad		4607139	0					
ANR	4607380	Identifier	Delete		4607139	1					
ANR	4607381	ArgumentList	ATTR_JOB_ARGUMENTS1		4607139	1					
ANR	4607382	Argument	ATTR_JOB_ARGUMENTS1		4607139	0					
ANR	4607383	Identifier	ATTR_JOB_ARGUMENTS1		4607139	0					
ANR	4607384	ReturnStatement	return true ;	619:1:14293:14304	4607139	7	True				
ANR	4607385	Identifier	true		4607139	0					
ANR	4607386	ReturnType	bool		4607139	1					
ANR	4607387	Identifier	ArgList :: InsertArgsIntoClassAd		4607139	2					
ANR	4607388	ParameterList	"ClassAd * ad , CondorVersionInfo * condor_version , MyString * error_msg"		4607139	3					
ANR	4607389	Parameter	ClassAd * ad	553:31:12171:12181	4607139	0	True				
ANR	4607390	ParameterType	ClassAd *		4607139	0					
ANR	4607391	Identifier	ad		4607139	1					
ANR	4607392	Parameter	CondorVersionInfo * condor_version	553:43:12183:12215	4607139	1	True				
ANR	4607393	ParameterType	CondorVersionInfo *		4607139	0					
ANR	4607394	Identifier	condor_version		4607139	1					
ANR	4607395	Parameter	MyString * error_msg	553:77:12217:12235	4607139	2	True				
ANR	4607396	ParameterType	MyString *		4607139	0					
ANR	4607397	Identifier	error_msg		4607139	1					
ANR	4607398	CFGEntryNode	ENTRY		4607139		True				
ANR	4607399	CFGExitNode	EXIT		4607139		True				
ANR	4607400	Symbol	requires_v1		4607139						
ANR	4607401	Symbol	* error_msg		4607139						
ANR	4607402	Symbol	* ad		4607139						
ANR	4607403	Symbol	condor_version		4607139						
ANR	4607404	Symbol	condor_version_requires_v1		4607139						
ANR	4607405	Symbol	GetArgsStringV2Raw		4607139						
ANR	4607406	Symbol	args1 . Value		4607139						
ANR	4607407	Symbol	args2 . Value		4607139						
ANR	4607408	Symbol	CondorVersionRequiresV1		4607139						
ANR	4607409	Symbol	ad -> LookupExpr		4607139						
ANR	4607410	Symbol	input_was_unknown_platform_v1		4607139						
ANR	4607411	Symbol	ad		4607139						
ANR	4607412	Symbol	error_msg		4607139						
ANR	4607413	Symbol	NULL		4607139						
ANR	4607414	Symbol	has_args2		4607139						
ANR	4607415	Symbol	* condor_version		4607139						
ANR	4607416	Symbol	false		4607139						
ANR	4607417	Symbol	ATTR_JOB_ARGUMENTS2		4607139						
ANR	4607418	Symbol	D_FULLDEBUG		4607139						
ANR	4607419	Symbol	ATTR_JOB_ARGUMENTS1		4607139						
ANR	4607420	Symbol	& args1		4607139						
ANR	4607421	Symbol	& args2		4607139						
ANR	4607422	Symbol	true		4607139						
ANR	4607423	Symbol	args1		4607139						
ANR	4607424	Symbol	args2		4607139						
ANR	4607425	Symbol	has_args1		4607139						
ANR	4607426	Symbol	error_msg -> Value		4607139						
ANR	4607427	Symbol	GetArgsStringV1Raw		4607139						
ANR	4607428	Function	ArgList :: IsSafeArgV1Value	622:0:14309:14700							
ANR	4607429	FunctionDef	ArgList :: IsSafeArgV1Value (char const * str)		4607428	0					
ANR	4607430	CompoundStatement		624:0:14363:14700	4607428	0					
ANR	4607431	IfStatement	if ( ! str )		4607428	0					
ANR	4607432	Condition	! str	628:4:14507:14510	4607428	0	True				
ANR	4607433	UnaryOperationExpression	! str		4607428	0					
ANR	4607434	UnaryOperator	!		4607428	0					
ANR	4607435	Identifier	str		4607428	1					
ANR	4607436	ReturnStatement	return false ;	628:10:14513:14525	4607428	1	True				
ANR	4607437	Identifier	false		4607428	0					
ANR	4607438	IdentifierDeclStatement	"const char * specials = "" \\t\\r\\n"" ;"	630:1:14529:14561	4607428	1	True				
ANR	4607439	IdentifierDecl	"* specials = "" \\t\\r\\n"""		4607428	0					
ANR	4607440	IdentifierDeclType	const char *		4607428	0					
ANR	4607441	Identifier	specials		4607428	1					
ANR	4607442	AssignmentExpression	"* specials = "" \\t\\r\\n"""		4607428	2		=			
ANR	4607443	Identifier	specials		4607428	0					
ANR	4607444	PrimaryExpression	""" \\t\\r\\n"""		4607428	1					
ANR	4607445	IdentifierDeclStatement	"size_t safe_length = strcspn ( str , specials ) ;"	632:1:14565:14607	4607428	2	True				
ANR	4607446	IdentifierDecl	"safe_length = strcspn ( str , specials )"		4607428	0					
ANR	4607447	IdentifierDeclType	size_t		4607428	0					
ANR	4607448	Identifier	safe_length		4607428	1					
ANR	4607449	AssignmentExpression	"safe_length = strcspn ( str , specials )"		4607428	2		=			
ANR	4607450	Identifier	safe_length		4607428	0					
ANR	4607451	CallExpression	"strcspn ( str , specials )"		4607428	1					
ANR	4607452	Callee	strcspn		4607428	0					
ANR	4607453	Identifier	strcspn		4607428	0					
ANR	4607454	ArgumentList	str		4607428	1					
ANR	4607455	Argument	str		4607428	0					
ANR	4607456	Identifier	str		4607428	0					
ANR	4607457	Argument	specials		4607428	1					
ANR	4607458	Identifier	specials		4607428	0					
ANR	4607459	ReturnStatement	return ! str [ safe_length ] ;	635:1:14674:14698	4607428	3	True				
ANR	4607460	UnaryOperationExpression	! str [ safe_length ]		4607428	0					
ANR	4607461	UnaryOperator	!		4607428	0					
ANR	4607462	ArrayIndexing	str [ safe_length ]		4607428	1					
ANR	4607463	Identifier	str		4607428	0					
ANR	4607464	Identifier	safe_length		4607428	1					
ANR	4607465	ReturnType	bool		4607428	1					
ANR	4607466	Identifier	ArgList :: IsSafeArgV1Value		4607428	2					
ANR	4607467	ParameterList	char const * str		4607428	3					
ANR	4607468	Parameter	char const * str	623:26:14340:14354	4607428	0	True				
ANR	4607469	ParameterType	char const *		4607428	0					
ANR	4607470	Identifier	str		4607428	1					
ANR	4607471	CFGEntryNode	ENTRY		4607428		True				
ANR	4607472	CFGExitNode	EXIT		4607428		True				
ANR	4607473	Symbol	str		4607428						
ANR	4607474	Symbol	safe_length		4607428						
ANR	4607475	Symbol	specials		4607428						
ANR	4607476	Symbol	false		4607428						
ANR	4607477	Symbol	* str		4607428						
ANR	4607478	Symbol	strcspn		4607428						
ANR	4607479	Symbol	* safe_length		4607428						
ANR	4607480	Function	ArgList :: GetArgsStringV1Raw	638:0:14703:15155							
ANR	4607481	FunctionDef	"ArgList :: GetArgsStringV1Raw (MyString * result , MyString * error_msg)"		4607480	0					
ANR	4607482	CompoundStatement		640:0:14780:15155	4607480	0					
ANR	4607483	IdentifierDeclStatement	SimpleListIterator < MyString > it ( args_list ) ;	641:1:14783:14825	4607480	0	True				
ANR	4607484	IdentifierDecl	it ( args_list )		4607480	0					
ANR	4607485	IdentifierDeclType	SimpleListIterator < MyString >		4607480	0					
ANR	4607486	Identifier	it		4607480	1					
ANR	4607487	Identifier	args_list		4607480	2					
ANR	4607488	IdentifierDeclStatement	MyString * arg = NULL ;	642:1:14828:14846	4607480	1	True				
ANR	4607489	IdentifierDecl	* arg = NULL		4607480	0					
ANR	4607490	IdentifierDeclType	MyString *		4607480	0					
ANR	4607491	Identifier	arg		4607480	1					
ANR	4607492	AssignmentExpression	* arg = NULL		4607480	2		=			
ANR	4607493	Identifier	NULL		4607480	0					
ANR	4607494	Identifier	NULL		4607480	1					
ANR	4607495	ExpressionStatement	ASSERT ( result )	643:1:14849:14863	4607480	2	True				
ANR	4607496	CallExpression	ASSERT ( result )		4607480	0					
ANR	4607497	Callee	ASSERT		4607480	0					
ANR	4607498	Identifier	ASSERT		4607480	0					
ANR	4607499	ArgumentList	result		4607480	1					
ANR	4607500	Argument	result		4607480	0					
ANR	4607501	Identifier	result		4607480	0					
ANR	4607502	WhileStatement	while ( it . Next ( arg ) )		4607480	3					
ANR	4607503	Condition	it . Next ( arg )	644:7:14872:14883	4607480	0	True				
ANR	4607504	CallExpression	it . Next ( arg )		4607480	0					
ANR	4607505	Callee	it . Next		4607480	0					
ANR	4607506	MemberAccess	it . Next		4607480	0					
ANR	4607507	Identifier	it		4607480	0					
ANR	4607508	Identifier	Next		4607480	1					
ANR	4607509	ArgumentList	arg		4607480	1					
ANR	4607510	Argument	arg		4607480	0					
ANR	4607511	Identifier	arg		4607480	0					
ANR	4607512	CompoundStatement		5:21:105:105	4607480	1					
ANR	4607513	IfStatement	if ( ! IsSafeArgV1Value ( arg -> Value ( ) ) )		4607480	0					
ANR	4607514	Condition	! IsSafeArgV1Value ( arg -> Value ( ) )	645:5:14893:14923	4607480	0	True				
ANR	4607515	UnaryOperationExpression	! IsSafeArgV1Value ( arg -> Value ( ) )		4607480	0					
ANR	4607516	UnaryOperator	!		4607480	0					
ANR	4607517	CallExpression	IsSafeArgV1Value ( arg -> Value ( ) )		4607480	1					
ANR	4607518	Callee	IsSafeArgV1Value		4607480	0					
ANR	4607519	Identifier	IsSafeArgV1Value		4607480	0					
ANR	4607520	ArgumentList	arg -> Value ( )		4607480	1					
ANR	4607521	Argument	arg -> Value ( )		4607480	0					
ANR	4607522	CallExpression	arg -> Value ( )		4607480	0					
ANR	4607523	Callee	arg -> Value		4607480	0					
ANR	4607524	PtrMemberAccess	arg -> Value		4607480	0					
ANR	4607525	Identifier	arg		4607480	0					
ANR	4607526	Identifier	Value		4607480	1					
ANR	4607527	ArgumentList			4607480	1					
ANR	4607528	CompoundStatement		6:38:145:145	4607480	1					
ANR	4607529	IfStatement	if ( error_msg )		4607480	0					
ANR	4607530	Condition	error_msg	646:6:14934:14942	4607480	0	True				
ANR	4607531	Identifier	error_msg		4607480	0					
ANR	4607532	CompoundStatement		7:17:164:164	4607480	1					
ANR	4607533	ExpressionStatement	"error_msg -> sprintf ( ""Cannot represent '%s' in V1 arguments syntax."" , arg -> Value ( ) )"	647:4:14951:15031	4607480	0	True				
ANR	4607534	CallExpression	"error_msg -> sprintf ( ""Cannot represent '%s' in V1 arguments syntax."" , arg -> Value ( ) )"		4607480	0					
ANR	4607535	Callee	error_msg -> sprintf		4607480	0					
ANR	4607536	PtrMemberAccess	error_msg -> sprintf		4607480	0					
ANR	4607537	Identifier	error_msg		4607480	0					
ANR	4607538	Identifier	sprintf		4607480	1					
ANR	4607539	ArgumentList	"""Cannot represent '%s' in V1 arguments syntax."""		4607480	1					
ANR	4607540	Argument	"""Cannot represent '%s' in V1 arguments syntax."""		4607480	0					
ANR	4607541	PrimaryExpression	"""Cannot represent '%s' in V1 arguments syntax."""		4607480	0					
ANR	4607542	Argument	arg -> Value ( )		4607480	1					
ANR	4607543	CallExpression	arg -> Value ( )		4607480	0					
ANR	4607544	Callee	arg -> Value		4607480	0					
ANR	4607545	PtrMemberAccess	arg -> Value		4607480	0					
ANR	4607546	Identifier	arg		4607480	0					
ANR	4607547	Identifier	Value		4607480	1					
ANR	4607548	ArgumentList			4607480	1					
ANR	4607549	ReturnStatement	return false ;	649:3:15041:15053	4607480	1	True				
ANR	4607550	Identifier	false		4607480	0					
ANR	4607551	IfStatement	if ( result -> Length ( ) )		4607480	1					
ANR	4607552	Condition	result -> Length ( )	651:5:15064:15079	4607480	0	True				
ANR	4607553	CallExpression	result -> Length ( )		4607480	0					
ANR	4607554	Callee	result -> Length		4607480	0					
ANR	4607555	PtrMemberAccess	result -> Length		4607480	0					
ANR	4607556	Identifier	result		4607480	0					
ANR	4607557	Identifier	Length		4607480	1					
ANR	4607558	ArgumentList			4607480	1					
ANR	4607559	CompoundStatement		12:23:301:301	4607480	1					
ANR	4607560	ExpressionStatement	"( * result ) += "" """	652:3:15087:15103	4607480	0	True				
ANR	4607561	AssignmentExpression	"( * result ) += "" """		4607480	0		+=			
ANR	4607562	UnaryOperationExpression	* result		4607480	0					
ANR	4607563	UnaryOperator	*		4607480	0					
ANR	4607564	Identifier	result		4607480	1					
ANR	4607565	PrimaryExpression	""" """		4607480	1					
ANR	4607566	ExpressionStatement	( * result ) += arg -> Value ( )	654:2:15111:15136	4607480	2	True				
ANR	4607567	AssignmentExpression	( * result ) += arg -> Value ( )		4607480	0		+=			
ANR	4607568	UnaryOperationExpression	* result		4607480	0					
ANR	4607569	UnaryOperator	*		4607480	0					
ANR	4607570	Identifier	result		4607480	1					
ANR	4607571	CallExpression	arg -> Value ( )		4607480	1					
ANR	4607572	Callee	arg -> Value		4607480	0					
ANR	4607573	PtrMemberAccess	arg -> Value		4607480	0					
ANR	4607574	Identifier	arg		4607480	0					
ANR	4607575	Identifier	Value		4607480	1					
ANR	4607576	ArgumentList			4607480	1					
ANR	4607577	ReturnStatement	return true ;	656:1:15142:15153	4607480	4	True				
ANR	4607578	Identifier	true		4607480	0					
ANR	4607579	ReturnType	bool		4607480	1					
ANR	4607580	Identifier	ArgList :: GetArgsStringV1Raw		4607480	2					
ANR	4607581	ParameterList	"MyString * result , MyString * error_msg"		4607480	3					
ANR	4607582	Parameter	MyString * result	639:28:14736:14751	4607480	0	True				
ANR	4607583	ParameterType	MyString *		4607480	0					
ANR	4607584	Identifier	result		4607480	1					
ANR	4607585	Parameter	MyString * error_msg	639:45:14753:14771	4607480	1	True				
ANR	4607586	ParameterType	MyString *		4607480	0					
ANR	4607587	Identifier	error_msg		4607480	1					
ANR	4607588	CFGEntryNode	ENTRY		4607480		True				
ANR	4607589	CFGExitNode	EXIT		4607480		True				
ANR	4607590	Symbol	error_msg		4607480						
ANR	4607591	Symbol	NULL		4607480						
ANR	4607592	Symbol	IsSafeArgV1Value		4607480						
ANR	4607593	Symbol	result -> Length		4607480						
ANR	4607594	Symbol	false		4607480						
ANR	4607595	Symbol	it		4607480						
ANR	4607596	Symbol	result		4607480						
ANR	4607597	Symbol	arg -> Value		4607480						
ANR	4607598	Symbol	it . Next		4607480						
ANR	4607599	Symbol	* result		4607480						
ANR	4607600	Symbol	arg		4607480						
ANR	4607601	Symbol	true		4607480						
ANR	4607602	Symbol	* arg		4607480						
ANR	4607603	Function	ArgList :: GetArgsStringV2Quoted	659:0:15158:15364							
ANR	4607604	FunctionDef	"ArgList :: GetArgsStringV2Quoted (MyString * result , MyString * error_msg)"		4607603	0					
ANR	4607605	CompoundStatement		661:0:15232:15364	4607603	0					
ANR	4607606	IdentifierDeclStatement	MyString v2_raw ;	662:1:15235:15250	4607603	0	True				
ANR	4607607	IdentifierDecl	v2_raw		4607603	0					
ANR	4607608	IdentifierDeclType	MyString		4607603	0					
ANR	4607609	Identifier	v2_raw		4607603	1					
ANR	4607610	IfStatement	"if ( ! GetArgsStringV2Raw ( & v2_raw , error_msg ) )"		4607603	1					
ANR	4607611	Condition	"! GetArgsStringV2Raw ( & v2_raw , error_msg )"	663:4:15256:15293	4607603	0	True				
ANR	4607612	UnaryOperationExpression	"! GetArgsStringV2Raw ( & v2_raw , error_msg )"		4607603	0					
ANR	4607613	UnaryOperator	!		4607603	0					
ANR	4607614	CallExpression	"GetArgsStringV2Raw ( & v2_raw , error_msg )"		4607603	1					
ANR	4607615	Callee	GetArgsStringV2Raw		4607603	0					
ANR	4607616	Identifier	GetArgsStringV2Raw		4607603	0					
ANR	4607617	ArgumentList	& v2_raw		4607603	1					
ANR	4607618	Argument	& v2_raw		4607603	0					
ANR	4607619	UnaryOperationExpression	& v2_raw		4607603	0					
ANR	4607620	UnaryOperator	&		4607603	0					
ANR	4607621	Identifier	v2_raw		4607603	1					
ANR	4607622	Argument	error_msg		4607603	1					
ANR	4607623	Identifier	error_msg		4607603	0					
ANR	4607624	CompoundStatement		3:44:63:63	4607603	1					
ANR	4607625	ReturnStatement	return false ;	664:2:15300:15312	4607603	0	True				
ANR	4607626	Identifier	false		4607603	0					
ANR	4607627	ExpressionStatement	"V2RawToV2Quoted ( v2_raw , result )"	666:1:15318:15348	4607603	2	True				
ANR	4607628	CallExpression	"V2RawToV2Quoted ( v2_raw , result )"		4607603	0					
ANR	4607629	Callee	V2RawToV2Quoted		4607603	0					
ANR	4607630	Identifier	V2RawToV2Quoted		4607603	0					
ANR	4607631	ArgumentList	v2_raw		4607603	1					
ANR	4607632	Argument	v2_raw		4607603	0					
ANR	4607633	Identifier	v2_raw		4607603	0					
ANR	4607634	Argument	result		4607603	1					
ANR	4607635	Identifier	result		4607603	0					
ANR	4607636	ReturnStatement	return true ;	667:1:15351:15362	4607603	3	True				
ANR	4607637	Identifier	true		4607603	0					
ANR	4607638	ReturnType	bool		4607603	1					
ANR	4607639	Identifier	ArgList :: GetArgsStringV2Quoted		4607603	2					
ANR	4607640	ParameterList	"MyString * result , MyString * error_msg"		4607603	3					
ANR	4607641	Parameter	MyString * result	660:31:15194:15209	4607603	0	True				
ANR	4607642	ParameterType	MyString *		4607603	0					
ANR	4607643	Identifier	result		4607603	1					
ANR	4607644	Parameter	MyString * error_msg	660:48:15211:15229	4607603	1	True				
ANR	4607645	ParameterType	MyString *		4607603	0					
ANR	4607646	Identifier	error_msg		4607603	1					
ANR	4607647	CFGEntryNode	ENTRY		4607603		True				
ANR	4607648	CFGExitNode	EXIT		4607603		True				
ANR	4607649	Symbol	result		4607603						
ANR	4607650	Symbol	GetArgsStringV2Raw		4607603						
ANR	4607651	Symbol	& v2_raw		4607603						
ANR	4607652	Symbol	error_msg		4607603						
ANR	4607653	Symbol	false		4607603						
ANR	4607654	Symbol	true		4607603						
ANR	4607655	Symbol	v2_raw		4607603						
ANR	4607656	Function	ArgList :: GetArgsStringV1WackedOrV2Quoted	670:0:15367:15624							
ANR	4607657	FunctionDef	"ArgList :: GetArgsStringV1WackedOrV2Quoted (MyString * result , MyString * error_msg)"		4607656	0					
ANR	4607658	CompoundStatement		672:0:15451:15624	4607656	0					
ANR	4607659	IdentifierDeclStatement	MyString v1_raw ;	673:1:15454:15469	4607656	0	True				
ANR	4607660	IdentifierDecl	v1_raw		4607656	0					
ANR	4607661	IdentifierDeclType	MyString		4607656	0					
ANR	4607662	Identifier	v1_raw		4607656	1					
ANR	4607663	IfStatement	"if ( GetArgsStringV1Raw ( & v1_raw , NULL ) )"		4607656	1					
ANR	4607664	Condition	"GetArgsStringV1Raw ( & v1_raw , NULL )"	674:4:15475:15506	4607656	0	True				
ANR	4607665	CallExpression	"GetArgsStringV1Raw ( & v1_raw , NULL )"		4607656	0					
ANR	4607666	Callee	GetArgsStringV1Raw		4607656	0					
ANR	4607667	Identifier	GetArgsStringV1Raw		4607656	0					
ANR	4607668	ArgumentList	& v1_raw		4607656	1					
ANR	4607669	Argument	& v1_raw		4607656	0					
ANR	4607670	UnaryOperationExpression	& v1_raw		4607656	0					
ANR	4607671	UnaryOperator	&		4607656	0					
ANR	4607672	Identifier	v1_raw		4607656	1					
ANR	4607673	Argument	NULL		4607656	1					
ANR	4607674	Identifier	NULL		4607656	0					
ANR	4607675	CompoundStatement		3:38:57:57	4607656	1					
ANR	4607676	ExpressionStatement	"V1RawToV1Wacked ( v1_raw , result )"	675:2:15513:15543	4607656	0	True				
ANR	4607677	CallExpression	"V1RawToV1Wacked ( v1_raw , result )"		4607656	0					
ANR	4607678	Callee	V1RawToV1Wacked		4607656	0					
ANR	4607679	Identifier	V1RawToV1Wacked		4607656	0					
ANR	4607680	ArgumentList	v1_raw		4607656	1					
ANR	4607681	Argument	v1_raw		4607656	0					
ANR	4607682	Identifier	v1_raw		4607656	0					
ANR	4607683	Argument	result		4607656	1					
ANR	4607684	Identifier	result		4607656	0					
ANR	4607685	ReturnStatement	return true ;	676:2:15547:15558	4607656	1	True				
ANR	4607686	Identifier	true		4607656	0					
ANR	4607687	ElseStatement	else		4607656	0					
ANR	4607688	CompoundStatement		7:6:117:117	4607656	0					
ANR	4607689	ReturnStatement	"return GetArgsStringV2Quoted ( result , error_msg ) ;"	679:2:15573:15619	4607656	0	True				
ANR	4607690	CallExpression	"GetArgsStringV2Quoted ( result , error_msg )"		4607656	0					
ANR	4607691	Callee	GetArgsStringV2Quoted		4607656	0					
ANR	4607692	Identifier	GetArgsStringV2Quoted		4607656	0					
ANR	4607693	ArgumentList	result		4607656	1					
ANR	4607694	Argument	result		4607656	0					
ANR	4607695	Identifier	result		4607656	0					
ANR	4607696	Argument	error_msg		4607656	1					
ANR	4607697	Identifier	error_msg		4607656	0					
ANR	4607698	ReturnType	bool		4607656	1					
ANR	4607699	Identifier	ArgList :: GetArgsStringV1WackedOrV2Quoted		4607656	2					
ANR	4607700	ParameterList	"MyString * result , MyString * error_msg"		4607656	3					
ANR	4607701	Parameter	MyString * result	671:41:15413:15428	4607656	0	True				
ANR	4607702	ParameterType	MyString *		4607656	0					
ANR	4607703	Identifier	result		4607656	1					
ANR	4607704	Parameter	MyString * error_msg	671:58:15430:15448	4607656	1	True				
ANR	4607705	ParameterType	MyString *		4607656	0					
ANR	4607706	Identifier	error_msg		4607656	1					
ANR	4607707	CFGEntryNode	ENTRY		4607656		True				
ANR	4607708	CFGExitNode	EXIT		4607656		True				
ANR	4607709	Symbol	result		4607656						
ANR	4607710	Symbol	& v1_raw		4607656						
ANR	4607711	Symbol	error_msg		4607656						
ANR	4607712	Symbol	NULL		4607656						
ANR	4607713	Symbol	GetArgsStringV2Quoted		4607656						
ANR	4607714	Symbol	true		4607656						
ANR	4607715	Symbol	GetArgsStringV1Raw		4607656						
ANR	4607716	Symbol	v1_raw		4607656						
ANR	4607717	Function	ArgList :: V2RawToV2Quoted	683:0:15627:15770							
ANR	4607718	FunctionDef	"ArgList :: V2RawToV2Quoted (MyString const & v2_raw , MyString * result)"		4607717	0					
ANR	4607719	CompoundStatement		685:0:15698:15770	4607717	0					
ANR	4607720	ExpressionStatement	"result -> sprintf_cat ( ""\\""%s\\"""" , v2_raw . EscapeChars ( ""\\"""" , '\\""' ) . Value ( ) )"	686:1:15701:15768	4607717	0	True				
ANR	4607721	CallExpression	"result -> sprintf_cat ( ""\\""%s\\"""" , v2_raw . EscapeChars ( ""\\"""" , '\\""' ) . Value ( ) )"		4607717	0					
ANR	4607722	Callee	result -> sprintf_cat		4607717	0					
ANR	4607723	PtrMemberAccess	result -> sprintf_cat		4607717	0					
ANR	4607724	Identifier	result		4607717	0					
ANR	4607725	Identifier	sprintf_cat		4607717	1					
ANR	4607726	ArgumentList	"""\\""%s\\"""""		4607717	1					
ANR	4607727	Argument	"""\\""%s\\"""""		4607717	0					
ANR	4607728	PrimaryExpression	"""\\""%s\\"""""		4607717	0					
ANR	4607729	Argument	"v2_raw . EscapeChars ( ""\\"""" , '\\""' ) . Value ( )"		4607717	1					
ANR	4607730	CallExpression	"v2_raw . EscapeChars ( ""\\"""" , '\\""' ) . Value ( )"		4607717	0					
ANR	4607731	Callee	"v2_raw . EscapeChars ( ""\\"""" , '\\""' ) . Value"		4607717	0					
ANR	4607732	MemberAccess	"v2_raw . EscapeChars ( ""\\"""" , '\\""' ) . Value"		4607717	0					
ANR	4607733	CallExpression	"v2_raw . EscapeChars ( ""\\"""" , '\\""' )"		4607717	0					
ANR	4607734	Callee	v2_raw . EscapeChars		4607717	0					
ANR	4607735	MemberAccess	v2_raw . EscapeChars		4607717	0					
ANR	4607736	Identifier	v2_raw		4607717	0					
ANR	4607737	Identifier	EscapeChars		4607717	1					
ANR	4607738	ArgumentList	"""\\"""""		4607717	1					
ANR	4607739	Argument	"""\\"""""		4607717	0					
ANR	4607740	PrimaryExpression	"""\\"""""		4607717	0					
ANR	4607741	Argument	"'\\""'"		4607717	1					
ANR	4607742	PrimaryExpression	"'\\""'"		4607717	0					
ANR	4607743	Identifier	Value		4607717	1					
ANR	4607744	ArgumentList			4607717	1					
ANR	4607745	ReturnType	void		4607717	1					
ANR	4607746	Identifier	ArgList :: V2RawToV2Quoted		4607717	2					
ANR	4607747	ParameterList	"MyString const & v2_raw , MyString * result"		4607717	3					
ANR	4607748	Parameter	MyString const & v2_raw	684:25:15657:15678	4607717	0	True				
ANR	4607749	ParameterType	MyString const &		4607717	0					
ANR	4607750	Identifier	v2_raw		4607717	1					
ANR	4607751	Parameter	MyString * result	684:48:15680:15695	4607717	1	True				
ANR	4607752	ParameterType	MyString *		4607717	0					
ANR	4607753	Identifier	result		4607717	1					
ANR	4607754	CFGEntryNode	ENTRY		4607717		True				
ANR	4607755	CFGExitNode	EXIT		4607717		True				
ANR	4607756	Symbol	result		4607717						
ANR	4607757	Symbol	v2_raw		4607717						
ANR	4607758	Symbol	v2_raw . EscapeChars		4607717						
ANR	4607759	Symbol	"v2_raw . EscapeChars ( ""\\"""" , '\\""' ) . Value"		4607717						
ANR	4607760	Function	ArgList :: V1RawToV1Wacked	689:0:15773:15891							
ANR	4607761	FunctionDef	"ArgList :: V1RawToV1Wacked (MyString const & v1_raw , MyString * result)"		4607760	0					
ANR	4607762	CompoundStatement		691:0:15844:15891	4607760	0					
ANR	4607763	ExpressionStatement	"( * result ) += v1_raw . EscapeChars ( ""\\"""" , '\\\\' )"	692:1:15847:15889	4607760	0	True				
ANR	4607764	AssignmentExpression	"( * result ) += v1_raw . EscapeChars ( ""\\"""" , '\\\\' )"		4607760	0		+=			
ANR	4607765	UnaryOperationExpression	* result		4607760	0					
ANR	4607766	UnaryOperator	*		4607760	0					
ANR	4607767	Identifier	result		4607760	1					
ANR	4607768	CallExpression	"v1_raw . EscapeChars ( ""\\"""" , '\\\\' )"		4607760	1					
ANR	4607769	Callee	v1_raw . EscapeChars		4607760	0					
ANR	4607770	MemberAccess	v1_raw . EscapeChars		4607760	0					
ANR	4607771	Identifier	v1_raw		4607760	0					
ANR	4607772	Identifier	EscapeChars		4607760	1					
ANR	4607773	ArgumentList	"""\\"""""		4607760	1					
ANR	4607774	Argument	"""\\"""""		4607760	0					
ANR	4607775	PrimaryExpression	"""\\"""""		4607760	0					
ANR	4607776	Argument	'\\\\'		4607760	1					
ANR	4607777	PrimaryExpression	'\\\\'		4607760	0					
ANR	4607778	ReturnType	void		4607760	1					
ANR	4607779	Identifier	ArgList :: V1RawToV1Wacked		4607760	2					
ANR	4607780	ParameterList	"MyString const & v1_raw , MyString * result"		4607760	3					
ANR	4607781	Parameter	MyString const & v1_raw	690:25:15803:15824	4607760	0	True				
ANR	4607782	ParameterType	MyString const &		4607760	0					
ANR	4607783	Identifier	v1_raw		4607760	1					
ANR	4607784	Parameter	MyString * result	690:48:15826:15841	4607760	1	True				
ANR	4607785	ParameterType	MyString *		4607760	0					
ANR	4607786	Identifier	result		4607760	1					
ANR	4607787	CFGEntryNode	ENTRY		4607760		True				
ANR	4607788	CFGExitNode	EXIT		4607760		True				
ANR	4607789	Symbol	result		4607760						
ANR	4607790	Symbol	* result		4607760						
ANR	4607791	Symbol	v1_raw . EscapeChars		4607760						
ANR	4607792	Symbol	v1_raw		4607760						
ANR	4607793	Function	ArgList :: GetArgsStringForDisplay	702:0:16049:16171							
ANR	4607794	FunctionDef	"ArgList :: GetArgsStringForDisplay (MyString * result , int start_arg)"		4607793	0					
ANR	4607795	CompoundStatement		704:0:16125:16171	4607793	0					
ANR	4607796	ExpressionStatement	"GetArgsStringV2Raw ( result , NULL , start_arg )"	705:1:16128:16169	4607793	0	True				
ANR	4607797	CallExpression	"GetArgsStringV2Raw ( result , NULL , start_arg )"		4607793	0					
ANR	4607798	Callee	GetArgsStringV2Raw		4607793	0					
ANR	4607799	Identifier	GetArgsStringV2Raw		4607793	0					
ANR	4607800	ArgumentList	result		4607793	1					
ANR	4607801	Argument	result		4607793	0					
ANR	4607802	Identifier	result		4607793	0					
ANR	4607803	Argument	NULL		4607793	1					
ANR	4607804	Identifier	NULL		4607793	0					
ANR	4607805	Argument	start_arg		4607793	2					
ANR	4607806	Identifier	start_arg		4607793	0					
ANR	4607807	ReturnType	void		4607793	1					
ANR	4607808	Identifier	ArgList :: GetArgsStringForDisplay		4607793	2					
ANR	4607809	ParameterList	"MyString * result , int start_arg"		4607793	3					
ANR	4607810	Parameter	MyString * result	703:33:16087:16102	4607793	0	True				
ANR	4607811	ParameterType	MyString *		4607793	0					
ANR	4607812	Identifier	result		4607793	1					
ANR	4607813	Parameter	int start_arg	703:50:16104:16116	4607793	1	True				
ANR	4607814	ParameterType	int		4607793	0					
ANR	4607815	Identifier	start_arg		4607793	1					
ANR	4607816	CFGEntryNode	ENTRY		4607793		True				
ANR	4607817	CFGExitNode	EXIT		4607793		True				
ANR	4607818	Symbol	result		4607793						
ANR	4607819	Symbol	start_arg		4607793						
ANR	4607820	Symbol	NULL		4607793						
ANR	4607821	Function	ArgList :: GetArgsStringV1or2Raw	709:0:16175:16616							
ANR	4607822	FunctionDef	"ArgList :: GetArgsStringV1or2Raw (MyString * result , MyString * error_msg)"		4607821	0					
ANR	4607823	CompoundStatement		711:0:16255:16616	4607821	0					
ANR	4607824	ExpressionStatement	ASSERT ( result )	712:1:16258:16272	4607821	0	True				
ANR	4607825	CallExpression	ASSERT ( result )		4607821	0					
ANR	4607826	Callee	ASSERT		4607821	0					
ANR	4607827	Identifier	ASSERT		4607821	0					
ANR	4607828	ArgumentList	result		4607821	1					
ANR	4607829	Argument	result		4607821	0					
ANR	4607830	Identifier	result		4607821	0					
ANR	4607831	IdentifierDeclStatement	int old_len = result -> Length ( ) ;	713:1:16275:16305	4607821	1	True				
ANR	4607832	IdentifierDecl	old_len = result -> Length ( )		4607821	0					
ANR	4607833	IdentifierDeclType	int		4607821	0					
ANR	4607834	Identifier	old_len		4607821	1					
ANR	4607835	AssignmentExpression	old_len = result -> Length ( )		4607821	2		=			
ANR	4607836	Identifier	old_len		4607821	0					
ANR	4607837	CallExpression	result -> Length ( )		4607821	1					
ANR	4607838	Callee	result -> Length		4607821	0					
ANR	4607839	PtrMemberAccess	result -> Length		4607821	0					
ANR	4607840	Identifier	result		4607821	0					
ANR	4607841	Identifier	Length		4607821	1					
ANR	4607842	ArgumentList			4607821	1					
ANR	4607843	IfStatement	"if ( GetArgsStringV1Raw ( result , NULL ) )"		4607821	2					
ANR	4607844	Condition	"GetArgsStringV1Raw ( result , NULL )"	715:4:16312:16342	4607821	0	True				
ANR	4607845	CallExpression	"GetArgsStringV1Raw ( result , NULL )"		4607821	0					
ANR	4607846	Callee	GetArgsStringV1Raw		4607821	0					
ANR	4607847	Identifier	GetArgsStringV1Raw		4607821	0					
ANR	4607848	ArgumentList	result		4607821	1					
ANR	4607849	Argument	result		4607821	0					
ANR	4607850	Identifier	result		4607821	0					
ANR	4607851	Argument	NULL		4607821	1					
ANR	4607852	Identifier	NULL		4607821	0					
ANR	4607853	CompoundStatement		5:37:89:89	4607821	1					
ANR	4607854	ReturnStatement	return true ;	716:2:16349:16360	4607821	0	True				
ANR	4607855	Identifier	true		4607821	0					
ANR	4607856	IfStatement	if ( result -> Length ( ) > old_len )		4607821	3					
ANR	4607857	Condition	result -> Length ( ) > old_len	721:4:16410:16435	4607821	0	True				
ANR	4607858	RelationalExpression	result -> Length ( ) > old_len		4607821	0		>			
ANR	4607859	CallExpression	result -> Length ( )		4607821	0					
ANR	4607860	Callee	result -> Length		4607821	0					
ANR	4607861	PtrMemberAccess	result -> Length		4607821	0					
ANR	4607862	Identifier	result		4607821	0					
ANR	4607863	Identifier	Length		4607821	1					
ANR	4607864	ArgumentList			4607821	1					
ANR	4607865	Identifier	old_len		4607821	1					
ANR	4607866	CompoundStatement		11:32:182:182	4607821	1					
ANR	4607867	ExpressionStatement	"result -> setChar ( old_len , '\\0' )"	723:2:16501:16530	4607821	0	True				
ANR	4607868	CallExpression	"result -> setChar ( old_len , '\\0' )"		4607821	0					
ANR	4607869	Callee	result -> setChar		4607821	0					
ANR	4607870	PtrMemberAccess	result -> setChar		4607821	0					
ANR	4607871	Identifier	result		4607821	0					
ANR	4607872	Identifier	setChar		4607821	1					
ANR	4607873	ArgumentList	old_len		4607821	1					
ANR	4607874	Argument	old_len		4607821	0					
ANR	4607875	Identifier	old_len		4607821	0					
ANR	4607876	Argument	'\\0'		4607821	1					
ANR	4607877	PrimaryExpression	'\\0'		4607821	0					
ANR	4607878	ExpressionStatement	( * result ) += RAW_V2_ARGS_MARKER	726:1:16537:16568	4607821	4	True				
ANR	4607879	AssignmentExpression	( * result ) += RAW_V2_ARGS_MARKER		4607821	0		+=			
ANR	4607880	UnaryOperationExpression	* result		4607821	0					
ANR	4607881	UnaryOperator	*		4607821	0					
ANR	4607882	Identifier	result		4607821	1					
ANR	4607883	Identifier	RAW_V2_ARGS_MARKER		4607821	1					
ANR	4607884	ReturnStatement	"return GetArgsStringV2Raw ( result , error_msg ) ;"	727:1:16571:16614	4607821	5	True				
ANR	4607885	CallExpression	"GetArgsStringV2Raw ( result , error_msg )"		4607821	0					
ANR	4607886	Callee	GetArgsStringV2Raw		4607821	0					
ANR	4607887	Identifier	GetArgsStringV2Raw		4607821	0					
ANR	4607888	ArgumentList	result		4607821	1					
ANR	4607889	Argument	result		4607821	0					
ANR	4607890	Identifier	result		4607821	0					
ANR	4607891	Argument	error_msg		4607821	1					
ANR	4607892	Identifier	error_msg		4607821	0					
ANR	4607893	ReturnType	bool		4607821	1					
ANR	4607894	Identifier	ArgList :: GetArgsStringV1or2Raw		4607821	2					
ANR	4607895	ParameterList	"MyString * result , MyString * error_msg"		4607821	3					
ANR	4607896	Parameter	MyString * result	710:31:16211:16226	4607821	0	True				
ANR	4607897	ParameterType	MyString *		4607821	0					
ANR	4607898	Identifier	result		4607821	1					
ANR	4607899	Parameter	MyString * error_msg	710:48:16228:16246	4607821	1	True				
ANR	4607900	ParameterType	MyString *		4607821	0					
ANR	4607901	Identifier	error_msg		4607821	1					
ANR	4607902	CFGEntryNode	ENTRY		4607821		True				
ANR	4607903	CFGExitNode	EXIT		4607821		True				
ANR	4607904	Symbol	result		4607821						
ANR	4607905	Symbol	old_len		4607821						
ANR	4607906	Symbol	GetArgsStringV2Raw		4607821						
ANR	4607907	Symbol	error_msg		4607821						
ANR	4607908	Symbol	NULL		4607821						
ANR	4607909	Symbol	RAW_V2_ARGS_MARKER		4607821						
ANR	4607910	Symbol	* result		4607821						
ANR	4607911	Symbol	result -> Length		4607821						
ANR	4607912	Symbol	true		4607821						
ANR	4607913	Symbol	GetArgsStringV1Raw		4607821						
ANR	4607914	Function	ArgList :: GetArgsStringV1or2Raw	730:0:16619:16825							
ANR	4607915	FunctionDef	"ArgList :: GetArgsStringV1or2Raw (ClassAd const * ad , MyString * result , MyString * error_msg)"		4607914	0					
ANR	4607916	CompoundStatement		732:0:16711:16825	4607914	0					
ANR	4607917	IfStatement	"if ( ! AppendArgsFromClassAd ( ad , error_msg ) )"		4607914	0					
ANR	4607918	Condition	"! AppendArgsFromClassAd ( ad , error_msg )"	733:4:16717:16752	4607914	0	True				
ANR	4607919	UnaryOperationExpression	"! AppendArgsFromClassAd ( ad , error_msg )"		4607914	0					
ANR	4607920	UnaryOperator	!		4607914	0					
ANR	4607921	CallExpression	"AppendArgsFromClassAd ( ad , error_msg )"		4607914	1					
ANR	4607922	Callee	AppendArgsFromClassAd		4607914	0					
ANR	4607923	Identifier	AppendArgsFromClassAd		4607914	0					
ANR	4607924	ArgumentList	ad		4607914	1					
ANR	4607925	Argument	ad		4607914	0					
ANR	4607926	Identifier	ad		4607914	0					
ANR	4607927	Argument	error_msg		4607914	1					
ANR	4607928	Identifier	error_msg		4607914	0					
ANR	4607929	CompoundStatement		2:42:43:43	4607914	1					
ANR	4607930	ReturnStatement	return false ;	734:2:16759:16771	4607914	0	True				
ANR	4607931	Identifier	false		4607914	0					
ANR	4607932	ReturnStatement	"return GetArgsStringV1or2Raw ( result , error_msg ) ;"	736:1:16777:16823	4607914	1	True				
ANR	4607933	CallExpression	"GetArgsStringV1or2Raw ( result , error_msg )"		4607914	0					
ANR	4607934	Callee	GetArgsStringV1or2Raw		4607914	0					
ANR	4607935	Identifier	GetArgsStringV1or2Raw		4607914	0					
ANR	4607936	ArgumentList	result		4607914	1					
ANR	4607937	Argument	result		4607914	0					
ANR	4607938	Identifier	result		4607914	0					
ANR	4607939	Argument	error_msg		4607914	1					
ANR	4607940	Identifier	error_msg		4607914	0					
ANR	4607941	ReturnType	bool		4607914	1					
ANR	4607942	Identifier	ArgList :: GetArgsStringV1or2Raw		4607914	2					
ANR	4607943	ParameterList	"ClassAd const * ad , MyString * result , MyString * error_msg"		4607914	3					
ANR	4607944	Parameter	ClassAd const * ad	731:31:16655:16671	4607914	0	True				
ANR	4607945	ParameterType	ClassAd const *		4607914	0					
ANR	4607946	Identifier	ad		4607914	1					
ANR	4607947	Parameter	MyString * result	731:49:16673:16688	4607914	1	True				
ANR	4607948	ParameterType	MyString *		4607914	0					
ANR	4607949	Identifier	result		4607914	1					
ANR	4607950	Parameter	MyString * error_msg	731:66:16690:16708	4607914	2	True				
ANR	4607951	ParameterType	MyString *		4607914	0					
ANR	4607952	Identifier	error_msg		4607914	1					
ANR	4607953	CFGEntryNode	ENTRY		4607914		True				
ANR	4607954	CFGExitNode	EXIT		4607914		True				
ANR	4607955	Symbol	result		4607914						
ANR	4607956	Symbol	ad		4607914						
ANR	4607957	Symbol	error_msg		4607914						
ANR	4607958	Symbol	false		4607914						
ANR	4607959	Symbol	GetArgsStringV1or2Raw		4607914						
ANR	4607960	Symbol	AppendArgsFromClassAd		4607914						
ANR	4607961	Function	ArgList :: AddErrorMessage	739:0:16828:17042							
ANR	4607962	FunctionDef	"ArgList :: AddErrorMessage (char const * msg , MyString * error_buf)"		4607961	0					
ANR	4607963	CompoundStatement		741:0:16895:17042	4607961	0					
ANR	4607964	IfStatement	if ( ! error_buf )		4607961	0					
ANR	4607965	Condition	! error_buf	742:4:16901:16910	4607961	0	True				
ANR	4607966	UnaryOperationExpression	! error_buf		4607961	0					
ANR	4607967	UnaryOperator	!		4607961	0					
ANR	4607968	Identifier	error_buf		4607961	1					
ANR	4607969	ReturnStatement	return ;	742:16:16913:16919	4607961	1	True				
ANR	4607970	IfStatement	if ( error_buf -> Length ( ) )		4607961	1					
ANR	4607971	Condition	error_buf -> Length ( )	744:4:16926:16944	4607961	0	True				
ANR	4607972	CallExpression	error_buf -> Length ( )		4607961	0					
ANR	4607973	Callee	error_buf -> Length		4607961	0					
ANR	4607974	PtrMemberAccess	error_buf -> Length		4607961	0					
ANR	4607975	Identifier	error_buf		4607961	0					
ANR	4607976	Identifier	Length		4607961	1					
ANR	4607977	ArgumentList			4607961	1					
ANR	4607978	CompoundStatement		4:25:51:51	4607961	1					
ANR	4607979	ExpressionStatement	"( * error_buf ) += ""\\n"""	746:2:16995:17015	4607961	0	True				
ANR	4607980	AssignmentExpression	"( * error_buf ) += ""\\n"""		4607961	0		+=			
ANR	4607981	UnaryOperationExpression	* error_buf		4607961	0					
ANR	4607982	UnaryOperator	*		4607961	0					
ANR	4607983	Identifier	error_buf		4607961	1					
ANR	4607984	PrimaryExpression	"""\\n"""		4607961	1					
ANR	4607985	ExpressionStatement	( * error_buf ) += msg	748:1:17021:17040	4607961	2	True				
ANR	4607986	AssignmentExpression	( * error_buf ) += msg		4607961	0		+=			
ANR	4607987	UnaryOperationExpression	* error_buf		4607961	0					
ANR	4607988	UnaryOperator	*		4607961	0					
ANR	4607989	Identifier	error_buf		4607961	1					
ANR	4607990	Identifier	msg		4607961	1					
ANR	4607991	ReturnType	void		4607961	1					
ANR	4607992	Identifier	ArgList :: AddErrorMessage		4607961	2					
ANR	4607993	ParameterList	"char const * msg , MyString * error_buf"		4607961	3					
ANR	4607994	Parameter	char const * msg	740:25:16858:16872	4607961	0	True				
ANR	4607995	ParameterType	char const *		4607961	0					
ANR	4607996	Identifier	msg		4607961	1					
ANR	4607997	Parameter	MyString * error_buf	740:41:16874:16892	4607961	1	True				
ANR	4607998	ParameterType	MyString *		4607961	0					
ANR	4607999	Identifier	error_buf		4607961	1					
ANR	4608000	CFGEntryNode	ENTRY		4607961		True				
ANR	4608001	CFGExitNode	EXIT		4607961		True				
ANR	4608002	Symbol	msg		4607961						
ANR	4608003	Symbol	error_buf		4607961						
ANR	4608004	Symbol	error_buf -> Length		4607961						
ANR	4608005	Symbol	* error_buf		4607961						
ANR	4608006	Function	ArgList :: ArgList	751:0:17045:17141							
ANR	4608007	FunctionDef	ArgList :: ArgList ()		4608006	0					
ANR	4608008	CompoundStatement		752:0:17064:17141	4608006	0					
ANR	4608009	ExpressionStatement	input_was_unknown_platform_v1 = false	753:1:17067:17104	4608006	0	True				
ANR	4608010	AssignmentExpression	input_was_unknown_platform_v1 = false		4608006	0		=			
ANR	4608011	Identifier	input_was_unknown_platform_v1		4608006	0					
ANR	4608012	Identifier	false		4608006	1					
ANR	4608013	ExpressionStatement	v1_syntax = UNKNOWN_ARGV1_SYNTAX	754:1:17107:17139	4608006	1	True				
ANR	4608014	AssignmentExpression	v1_syntax = UNKNOWN_ARGV1_SYNTAX		4608006	0		=			
ANR	4608015	Identifier	v1_syntax		4608006	0					
ANR	4608016	Identifier	UNKNOWN_ARGV1_SYNTAX		4608006	1					
ANR	4608017	Identifier	ArgList :: ArgList		4608006	1					
ANR	4608018	ParameterList			4608006	2					
ANR	4608019	CFGEntryNode	ENTRY		4608006		True				
ANR	4608020	CFGExitNode	EXIT		4608006		True				
ANR	4608021	Symbol	input_was_unknown_platform_v1		4608006						
ANR	4608022	Symbol	false		4608006						
ANR	4608023	Symbol	v1_syntax		4608006						
ANR	4608024	Symbol	UNKNOWN_ARGV1_SYNTAX		4608006						
ANR	4608025	Function	ArgList :: ~ArgList	757:0:17144:17166							
ANR	4608026	FunctionDef	ArgList :: ~ArgList ()		4608025	0					
ANR	4608027	CompoundStatement		758:0:17164:17166	4608025	0					
ANR	4608028	Identifier	ArgList :: ~ArgList		4608025	1					
ANR	4608029	ParameterList			4608025	2					
ANR	4608030	CFGEntryNode	ENTRY		4608025		True				
ANR	4608031	CFGExitNode	EXIT		4608025		True				
ANR	4608032	DeclStmt									
ANR	4608033	Decl							SimpleListIterator < MyString >	SimpleListIterator < MyString > ( args_list )	it
ANR	4608034	DeclStmt									
ANR	4608035	Decl							MyString	MyString *	arg
ANR	4608036	DeclStmt									
ANR	4608037	Decl							int	int	i
ANR	4608038	DeclStmt									
ANR	4608039	Decl							char const	char const *	argstr
ANR	4608040	DeclStmt									
ANR	4608041	Decl							int	int	n
ANR	4608042	Function	ArgList :: IsV2QuotedString	830:0:18911:19074							
ANR	4608043	FunctionDef	ArgList :: IsV2QuotedString (char const * str)		4608042	0					
ANR	4608044	CompoundStatement		832:0:18959:19074	4608042	0					
ANR	4608045	IfStatement	if ( ! str )		4608042	0					
ANR	4608046	Condition	! str	833:4:18965:18968	4608042	0	True				
ANR	4608047	UnaryOperationExpression	! str		4608042	0					
ANR	4608048	UnaryOperator	!		4608042	0					
ANR	4608049	Identifier	str		4608042	1					
ANR	4608050	ReturnStatement	return false ;	833:10:18971:18983	4608042	1	True				
ANR	4608051	Identifier	false		4608042	0					
ANR	4608052	WhileStatement	while ( isspace ( * str ) )		4608042	1					
ANR	4608053	Condition	isspace ( * str )	836:7:19023:19035	4608042	0	True				
ANR	4608054	CallExpression	isspace ( * str )		4608042	0					
ANR	4608055	Callee	isspace		4608042	0					
ANR	4608056	Identifier	isspace		4608042	0					
ANR	4608057	ArgumentList	* str		4608042	1					
ANR	4608058	Argument	* str		4608042	0					
ANR	4608059	UnaryOperationExpression	* str		4608042	0					
ANR	4608060	UnaryOperator	*		4608042	0					
ANR	4608061	Identifier	str		4608042	1					
ANR	4608062	CompoundStatement		5:22:78:78	4608042	1					
ANR	4608063	ExpressionStatement	str ++	837:2:19042:19047	4608042	0	True				
ANR	4608064	PostIncDecOperationExpression	str ++		4608042	0					
ANR	4608065	Identifier	str		4608042	0					
ANR	4608066	IncDec	++		4608042	1					
ANR	4608067	ReturnStatement	"return * str == '""' ;"	840:1:19054:19072	4608042	2	True				
ANR	4608068	EqualityExpression	"* str == '""'"		4608042	0		==			
ANR	4608069	UnaryOperationExpression	* str		4608042	0					
ANR	4608070	UnaryOperator	*		4608042	0					
ANR	4608071	Identifier	str		4608042	1					
ANR	4608072	PrimaryExpression	"'""'"		4608042	1					
ANR	4608073	ReturnType	bool		4608042	1					
ANR	4608074	Identifier	ArgList :: IsV2QuotedString		4608042	2					
ANR	4608075	ParameterList	char const * str		4608042	3					
ANR	4608076	Parameter	char const * str	831:26:18942:18956	4608042	0	True				
ANR	4608077	ParameterType	char const *		4608042	0					
ANR	4608078	Identifier	str		4608042	1					
ANR	4608079	CFGEntryNode	ENTRY		4608042		True				
ANR	4608080	CFGExitNode	EXIT		4608042		True				
ANR	4608081	Symbol	str		4608042						
ANR	4608082	Symbol	false		4608042						
ANR	4608083	Symbol	isspace		4608042						
ANR	4608084	Symbol	* str		4608042						
ANR	4608085	Function	ArgList :: V2QuotedToV2Raw	843:0:19077:20201							
ANR	4608086	FunctionDef	"ArgList :: V2QuotedToV2Raw (char const * v1_input , MyString * v2_raw , MyString * errmsg)"		4608085	0					
ANR	4608087	CompoundStatement		845:0:19163:20201	4608085	0					
ANR	4608088	IfStatement	if ( ! v1_input )		4608085	0					
ANR	4608089	Condition	! v1_input	846:4:19169:19177	4608085	0	True				
ANR	4608090	UnaryOperationExpression	! v1_input		4608085	0					
ANR	4608091	UnaryOperator	!		4608085	0					
ANR	4608092	Identifier	v1_input		4608085	1					
ANR	4608093	ReturnStatement	return true ;	846:15:19180:19191	4608085	1	True				
ANR	4608094	Identifier	true		4608085	0					
ANR	4608095	ExpressionStatement	ASSERT ( v2_raw )	847:1:19194:19208	4608085	1	True				
ANR	4608096	CallExpression	ASSERT ( v2_raw )		4608085	0					
ANR	4608097	Callee	ASSERT		4608085	0					
ANR	4608098	Identifier	ASSERT		4608085	0					
ANR	4608099	ArgumentList	v2_raw		4608085	1					
ANR	4608100	Argument	v2_raw		4608085	0					
ANR	4608101	Identifier	v2_raw		4608085	0					
ANR	4608102	WhileStatement	while ( isspace ( * v1_input ) )		4608085	2					
ANR	4608103	Condition	isspace ( * v1_input )	850:7:19248:19265	4608085	0	True				
ANR	4608104	CallExpression	isspace ( * v1_input )		4608085	0					
ANR	4608105	Callee	isspace		4608085	0					
ANR	4608106	Identifier	isspace		4608085	0					
ANR	4608107	ArgumentList	* v1_input		4608085	1					
ANR	4608108	Argument	* v1_input		4608085	0					
ANR	4608109	UnaryOperationExpression	* v1_input		4608085	0					
ANR	4608110	UnaryOperator	*		4608085	0					
ANR	4608111	Identifier	v1_input		4608085	1					
ANR	4608112	CompoundStatement		6:27:104:104	4608085	1					
ANR	4608113	ExpressionStatement	v1_input ++	851:2:19272:19282	4608085	0	True				
ANR	4608114	PostIncDecOperationExpression	v1_input ++		4608085	0					
ANR	4608115	Identifier	v1_input		4608085	0					
ANR	4608116	IncDec	++		4608085	1					
ANR	4608117	ExpressionStatement	ASSERT ( IsV2QuotedString ( v1_input ) )	854:1:19289:19323	4608085	3	True				
ANR	4608118	CallExpression	ASSERT ( IsV2QuotedString ( v1_input ) )		4608085	0					
ANR	4608119	Callee	ASSERT		4608085	0					
ANR	4608120	Identifier	ASSERT		4608085	0					
ANR	4608121	ArgumentList	IsV2QuotedString ( v1_input )		4608085	1					
ANR	4608122	Argument	IsV2QuotedString ( v1_input )		4608085	0					
ANR	4608123	CallExpression	IsV2QuotedString ( v1_input )		4608085	0					
ANR	4608124	Callee	IsV2QuotedString		4608085	0					
ANR	4608125	Identifier	IsV2QuotedString		4608085	0					
ANR	4608126	ArgumentList	v1_input		4608085	1					
ANR	4608127	Argument	v1_input		4608085	0					
ANR	4608128	Identifier	v1_input		4608085	0					
ANR	4608129	ExpressionStatement	"ASSERT ( * v1_input == '""' )"	855:1:19326:19350	4608085	4	True				
ANR	4608130	CallExpression	"ASSERT ( * v1_input == '""' )"		4608085	0					
ANR	4608131	Callee	ASSERT		4608085	0					
ANR	4608132	Identifier	ASSERT		4608085	0					
ANR	4608133	ArgumentList	"* v1_input == '""'"		4608085	1					
ANR	4608134	Argument	"* v1_input == '""'"		4608085	0					
ANR	4608135	EqualityExpression	"* v1_input == '""'"		4608085	0		==			
ANR	4608136	UnaryOperationExpression	* v1_input		4608085	0					
ANR	4608137	UnaryOperator	*		4608085	0					
ANR	4608138	Identifier	v1_input		4608085	1					
ANR	4608139	PrimaryExpression	"'""'"		4608085	1					
ANR	4608140	ExpressionStatement	v1_input ++	856:1:19353:19363	4608085	5	True				
ANR	4608141	PostIncDecOperationExpression	v1_input ++		4608085	0					
ANR	4608142	Identifier	v1_input		4608085	0					
ANR	4608143	IncDec	++		4608085	1					
ANR	4608144	IdentifierDeclStatement	const char * quote_terminated = NULL ;	858:1:19367:19402	4608085	6	True				
ANR	4608145	IdentifierDecl	* quote_terminated = NULL		4608085	0					
ANR	4608146	IdentifierDeclType	const char *		4608085	0					
ANR	4608147	Identifier	quote_terminated		4608085	1					
ANR	4608148	AssignmentExpression	* quote_terminated = NULL		4608085	2		=			
ANR	4608149	Identifier	NULL		4608085	0					
ANR	4608150	Identifier	NULL		4608085	1					
ANR	4608151	WhileStatement	while ( * v1_input )		4608085	7					
ANR	4608152	Condition	* v1_input	859:7:19411:19419	4608085	0	True				
ANR	4608153	UnaryOperationExpression	* v1_input		4608085	0					
ANR	4608154	UnaryOperator	*		4608085	0					
ANR	4608155	Identifier	v1_input		4608085	1					
ANR	4608156	CompoundStatement		15:18:258:258	4608085	1					
ANR	4608157	IfStatement	"if ( * v1_input == '""' )"		4608085	0					
ANR	4608158	Condition	"* v1_input == '""'"	860:5:19429:19444	4608085	0	True				
ANR	4608159	EqualityExpression	"* v1_input == '""'"		4608085	0		==			
ANR	4608160	UnaryOperationExpression	* v1_input		4608085	0					
ANR	4608161	UnaryOperator	*		4608085	0					
ANR	4608162	Identifier	v1_input		4608085	1					
ANR	4608163	PrimaryExpression	"'""'"		4608085	1					
ANR	4608164	CompoundStatement		16:23:283:283	4608085	1					
ANR	4608165	ExpressionStatement	v1_input ++	861:3:19452:19462	4608085	0	True				
ANR	4608166	PostIncDecOperationExpression	v1_input ++		4608085	0					
ANR	4608167	Identifier	v1_input		4608085	0					
ANR	4608168	IncDec	++		4608085	1					
ANR	4608169	IfStatement	"if ( * v1_input == '""' )"		4608085	1					
ANR	4608170	Condition	"* v1_input == '""'"	862:6:19470:19485	4608085	0	True				
ANR	4608171	EqualityExpression	"* v1_input == '""'"		4608085	0		==			
ANR	4608172	UnaryOperationExpression	* v1_input		4608085	0					
ANR	4608173	UnaryOperator	*		4608085	0					
ANR	4608174	Identifier	v1_input		4608085	1					
ANR	4608175	PrimaryExpression	"'""'"		4608085	1					
ANR	4608176	CompoundStatement		18:24:324:324	4608085	1					
ANR	4608177	ExpressionStatement	( * v2_raw ) += * ( v1_input ++ )	864:4:19540:19566	4608085	0	True				
ANR	4608178	AssignmentExpression	( * v2_raw ) += * ( v1_input ++ )		4608085	0		+=			
ANR	4608179	UnaryOperationExpression	* v2_raw		4608085	0					
ANR	4608180	UnaryOperator	*		4608085	0					
ANR	4608181	Identifier	v2_raw		4608085	1					
ANR	4608182	UnaryOperationExpression	* ( v1_input ++ )		4608085	1					
ANR	4608183	UnaryOperator	*		4608085	0					
ANR	4608184	PostIncDecOperationExpression	v1_input ++		4608085	1					
ANR	4608185	Identifier	v1_input		4608085	0					
ANR	4608186	IncDec	++		4608085	1					
ANR	4608187	ElseStatement	else		4608085	0					
ANR	4608188	CompoundStatement		22:8:417:417	4608085	0					
ANR	4608189	ExpressionStatement	quote_terminated = v1_input - 1	867:4:19587:19616	4608085	0	True				
ANR	4608190	AssignmentExpression	quote_terminated = v1_input - 1		4608085	0		=			
ANR	4608191	Identifier	quote_terminated		4608085	0					
ANR	4608192	AdditiveExpression	v1_input - 1		4608085	1		-			
ANR	4608193	Identifier	v1_input		4608085	0					
ANR	4608194	PrimaryExpression	1		4608085	1					
ANR	4608195	BreakStatement	break ;	868:4:19622:19627	4608085	1	True				
ANR	4608196	ElseStatement	else		4608085	0					
ANR	4608197	CompoundStatement		27:7:481:481	4608085	0					
ANR	4608198	ExpressionStatement	( * v2_raw ) += * ( v1_input ++ )	872:3:19650:19676	4608085	0	True				
ANR	4608199	AssignmentExpression	( * v2_raw ) += * ( v1_input ++ )		4608085	0		+=			
ANR	4608200	UnaryOperationExpression	* v2_raw		4608085	0					
ANR	4608201	UnaryOperator	*		4608085	0					
ANR	4608202	Identifier	v2_raw		4608085	1					
ANR	4608203	UnaryOperationExpression	* ( v1_input ++ )		4608085	1					
ANR	4608204	UnaryOperator	*		4608085	0					
ANR	4608205	PostIncDecOperationExpression	v1_input ++		4608085	1					
ANR	4608206	Identifier	v1_input		4608085	0					
ANR	4608207	IncDec	++		4608085	1					
ANR	4608208	IfStatement	if ( ! quote_terminated )		4608085	8					
ANR	4608209	Condition	! quote_terminated	876:4:19690:19706	4608085	0	True				
ANR	4608210	UnaryOperationExpression	! quote_terminated		4608085	0					
ANR	4608211	UnaryOperator	!		4608085	0					
ANR	4608212	Identifier	quote_terminated		4608085	1					
ANR	4608213	CompoundStatement		32:23:545:545	4608085	1					
ANR	4608214	ExpressionStatement	"AddErrorMessage ( ""Unterminated double-quote."" , errmsg )"	877:2:19713:19765	4608085	0	True				
ANR	4608215	CallExpression	"AddErrorMessage ( ""Unterminated double-quote."" , errmsg )"		4608085	0					
ANR	4608216	Callee	AddErrorMessage		4608085	0					
ANR	4608217	Identifier	AddErrorMessage		4608085	0					
ANR	4608218	ArgumentList	"""Unterminated double-quote."""		4608085	1					
ANR	4608219	Argument	"""Unterminated double-quote."""		4608085	0					
ANR	4608220	PrimaryExpression	"""Unterminated double-quote."""		4608085	0					
ANR	4608221	Argument	errmsg		4608085	1					
ANR	4608222	Identifier	errmsg		4608085	0					
ANR	4608223	ReturnStatement	return false ;	878:2:19769:19781	4608085	1	True				
ANR	4608224	Identifier	false		4608085	0					
ANR	4608225	WhileStatement	while ( isspace ( * v1_input ) )		4608085	9					
ANR	4608226	Condition	isspace ( * v1_input )	882:7:19825:19842	4608085	0	True				
ANR	4608227	CallExpression	isspace ( * v1_input )		4608085	0					
ANR	4608228	Callee	isspace		4608085	0					
ANR	4608229	Identifier	isspace		4608085	0					
ANR	4608230	ArgumentList	* v1_input		4608085	1					
ANR	4608231	Argument	* v1_input		4608085	0					
ANR	4608232	UnaryOperationExpression	* v1_input		4608085	0					
ANR	4608233	UnaryOperator	*		4608085	0					
ANR	4608234	Identifier	v1_input		4608085	1					
ANR	4608235	CompoundStatement		38:27:681:681	4608085	1					
ANR	4608236	ExpressionStatement	v1_input ++	883:2:19849:19859	4608085	0	True				
ANR	4608237	PostIncDecOperationExpression	v1_input ++		4608085	0					
ANR	4608238	Identifier	v1_input		4608085	0					
ANR	4608239	IncDec	++		4608085	1					
ANR	4608240	IfStatement	if ( * v1_input )		4608085	10					
ANR	4608241	Condition	* v1_input	886:4:19869:19877	4608085	0	True				
ANR	4608242	UnaryOperationExpression	* v1_input		4608085	0					
ANR	4608243	UnaryOperator	*		4608085	0					
ANR	4608244	Identifier	v1_input		4608085	1					
ANR	4608245	CompoundStatement		42:15:716:716	4608085	1					
ANR	4608246	IfStatement	if ( errmsg )		4608085	0					
ANR	4608247	Condition	errmsg	887:5:19887:19892	4608085	0	True				
ANR	4608248	Identifier	errmsg		4608085	0					
ANR	4608249	CompoundStatement		44:3:736:748	4608085	1					
ANR	4608250	IdentifierDeclStatement	MyString msg ;	888:3:19900:19912	4608085	0	True				
ANR	4608251	IdentifierDecl	msg		4608085	0					
ANR	4608252	IdentifierDeclType	MyString		4608085	0					
ANR	4608253	Identifier	msg		4608085	1					
ANR	4608254	Statement	msg	889:3:19917:19919	4608085	1	True				
ANR	4608255	Statement	.	889:6:19920:19920	4608085	2	True				
ANR	4608256	Statement	sprintf	889:7:19921:19927	4608085	3	True				
ANR	4608257	Statement	(	889:14:19928:19928	4608085	4	True				
ANR	4608258	Statement	"""Unexpected characters following double-quote.  """	890:4:19934:19982	4608085	5	True				
ANR	4608259	Statement	"""Did you forget to escape the double-quote by repeating it?  """	891:4:19988:20049	4608085	6	True				
ANR	4608260	Statement	"""Here is the quote and trailing characters: %s\\n"""	892:4:20055:20103	4608085	7	True				
ANR	4608261	Statement	","	892:53:20104:20104	4608085	8	True				
ANR	4608262	Statement	quote_terminated	892:54:20105:20120	4608085	9	True				
ANR	4608263	Statement	)	892:70:20121:20121	4608085	10	True				
ANR	4608264	ExpressionStatement		892:71:20122:20122	4608085	11	True				
ANR	4608265	ExpressionStatement	"AddErrorMessage ( msg . Value ( ) , errmsg )"	893:3:20127:20162	4608085	12	True				
ANR	4608266	CallExpression	"AddErrorMessage ( msg . Value ( ) , errmsg )"		4608085	0					
ANR	4608267	Callee	AddErrorMessage		4608085	0					
ANR	4608268	Identifier	AddErrorMessage		4608085	0					
ANR	4608269	ArgumentList	msg . Value ( )		4608085	1					
ANR	4608270	Argument	msg . Value ( )		4608085	0					
ANR	4608271	CallExpression	msg . Value ( )		4608085	0					
ANR	4608272	Callee	msg . Value		4608085	0					
ANR	4608273	MemberAccess	msg . Value		4608085	0					
ANR	4608274	Identifier	msg		4608085	0					
ANR	4608275	Identifier	Value		4608085	1					
ANR	4608276	ArgumentList			4608085	1					
ANR	4608277	Argument	errmsg		4608085	1					
ANR	4608278	Identifier	errmsg		4608085	0					
ANR	4608279	ReturnStatement	return false ;	895:2:20170:20182	4608085	1	True				
ANR	4608280	Identifier	false		4608085	0					
ANR	4608281	ReturnStatement	return true ;	897:1:20188:20199	4608085	11	True				
ANR	4608282	Identifier	true		4608085	0					
ANR	4608283	ReturnType	bool		4608085	1					
ANR	4608284	Identifier	ArgList :: V2QuotedToV2Raw		4608085	2					
ANR	4608285	ParameterList	"char const * v1_input , MyString * v2_raw , MyString * errmsg"		4608085	3					
ANR	4608286	Parameter	char const * v1_input	844:25:19107:19126	4608085	0	True				
ANR	4608287	ParameterType	char const *		4608085	0					
ANR	4608288	Identifier	v1_input		4608085	1					
ANR	4608289	Parameter	MyString * v2_raw	844:46:19128:19143	4608085	1	True				
ANR	4608290	ParameterType	MyString *		4608085	0					
ANR	4608291	Identifier	v2_raw		4608085	1					
ANR	4608292	Parameter	MyString * errmsg	844:63:19145:19160	4608085	2	True				
ANR	4608293	ParameterType	MyString *		4608085	0					
ANR	4608294	Identifier	errmsg		4608085	1					
ANR	4608295	CFGEntryNode	ENTRY		4608085		True				
ANR	4608296	CFGExitNode	EXIT		4608085		True				
ANR	4608297	Symbol	msg		4608085						
ANR	4608298	Symbol	NULL		4608085						
ANR	4608299	Symbol	quote_terminated		4608085						
ANR	4608300	Symbol	isspace		4608085						
ANR	4608301	Symbol	IsV2QuotedString		4608085						
ANR	4608302	Symbol	false		4608085						
ANR	4608303	Symbol	errmsg		4608085						
ANR	4608304	Symbol	v2_raw		4608085						
ANR	4608305	Symbol	msg . Value		4608085						
ANR	4608306	Symbol	* v1_input		4608085						
ANR	4608307	Symbol	v1_input		4608085						
ANR	4608308	Symbol	true		4608085						
ANR	4608309	Symbol	* ( v1_input ++ )		4608085						
ANR	4608310	Symbol	* v2_raw		4608085						
ANR	4608311	Function	ArgList :: V1WackedToV1Raw	900:0:20204:20786							
ANR	4608312	FunctionDef	"ArgList :: V1WackedToV1Raw (char const * v1_input , MyString * v1_raw , MyString * errmsg)"		4608311	0					
ANR	4608313	CompoundStatement		902:0:20290:20786	4608311	0					
ANR	4608314	IfStatement	if ( ! v1_input )		4608311	0					
ANR	4608315	Condition	! v1_input	903:4:20296:20304	4608311	0	True				
ANR	4608316	UnaryOperationExpression	! v1_input		4608311	0					
ANR	4608317	UnaryOperator	!		4608311	0					
ANR	4608318	Identifier	v1_input		4608311	1					
ANR	4608319	ReturnStatement	return true ;	903:15:20307:20318	4608311	1	True				
ANR	4608320	Identifier	true		4608311	0					
ANR	4608321	ExpressionStatement	ASSERT ( v1_raw )	904:1:20321:20335	4608311	1	True				
ANR	4608322	CallExpression	ASSERT ( v1_raw )		4608311	0					
ANR	4608323	Callee	ASSERT		4608311	0					
ANR	4608324	Identifier	ASSERT		4608311	0					
ANR	4608325	ArgumentList	v1_raw		4608311	1					
ANR	4608326	Argument	v1_raw		4608311	0					
ANR	4608327	Identifier	v1_raw		4608311	0					
ANR	4608328	ExpressionStatement	ASSERT ( ! IsV2QuotedString ( v1_input ) )	905:1:20338:20373	4608311	2	True				
ANR	4608329	CallExpression	ASSERT ( ! IsV2QuotedString ( v1_input ) )		4608311	0					
ANR	4608330	Callee	ASSERT		4608311	0					
ANR	4608331	Identifier	ASSERT		4608311	0					
ANR	4608332	ArgumentList	! IsV2QuotedString ( v1_input )		4608311	1					
ANR	4608333	Argument	! IsV2QuotedString ( v1_input )		4608311	0					
ANR	4608334	UnaryOperationExpression	! IsV2QuotedString ( v1_input )		4608311	0					
ANR	4608335	UnaryOperator	!		4608311	0					
ANR	4608336	CallExpression	IsV2QuotedString ( v1_input )		4608311	1					
ANR	4608337	Callee	IsV2QuotedString		4608311	0					
ANR	4608338	Identifier	IsV2QuotedString		4608311	0					
ANR	4608339	ArgumentList	v1_input		4608311	1					
ANR	4608340	Argument	v1_input		4608311	0					
ANR	4608341	Identifier	v1_input		4608311	0					
ANR	4608342	WhileStatement	while ( * v1_input )		4608311	3					
ANR	4608343	Condition	* v1_input	907:7:20383:20391	4608311	0	True				
ANR	4608344	UnaryOperationExpression	* v1_input		4608311	0					
ANR	4608345	UnaryOperator	*		4608311	0					
ANR	4608346	Identifier	v1_input		4608311	1					
ANR	4608347	CompoundStatement		6:18:103:103	4608311	1					
ANR	4608348	IfStatement	"if ( * v1_input == '""' )"		4608311	0					
ANR	4608349	Condition	"* v1_input == '""'"	908:5:20401:20416	4608311	0	True				
ANR	4608350	EqualityExpression	"* v1_input == '""'"		4608311	0		==			
ANR	4608351	UnaryOperationExpression	* v1_input		4608311	0					
ANR	4608352	UnaryOperator	*		4608311	0					
ANR	4608353	Identifier	v1_input		4608311	1					
ANR	4608354	PrimaryExpression	"'""'"		4608311	1					
ANR	4608355	CompoundStatement		7:23:128:128	4608311	1					
ANR	4608356	IfStatement	if ( errmsg )		4608311	0					
ANR	4608357	Condition	errmsg	909:6:20427:20432	4608311	0	True				
ANR	4608358	Identifier	errmsg		4608311	0					
ANR	4608359	CompoundStatement		9:4:150:162	4608311	1					
ANR	4608360	IdentifierDeclStatement	MyString msg ;	910:4:20441:20453	4608311	0	True				
ANR	4608361	IdentifierDecl	msg		4608311	0					
ANR	4608362	IdentifierDeclType	MyString		4608311	0					
ANR	4608363	Identifier	msg		4608311	1					
ANR	4608364	ExpressionStatement	"msg . sprintf ( ""Found illegal unescaped double-quote: %s"" , v1_input )"	911:4:20459:20523	4608311	1	True				
ANR	4608365	CallExpression	"msg . sprintf ( ""Found illegal unescaped double-quote: %s"" , v1_input )"		4608311	0					
ANR	4608366	Callee	msg . sprintf		4608311	0					
ANR	4608367	MemberAccess	msg . sprintf		4608311	0					
ANR	4608368	Identifier	msg		4608311	0					
ANR	4608369	Identifier	sprintf		4608311	1					
ANR	4608370	ArgumentList	"""Found illegal unescaped double-quote: %s"""		4608311	1					
ANR	4608371	Argument	"""Found illegal unescaped double-quote: %s"""		4608311	0					
ANR	4608372	PrimaryExpression	"""Found illegal unescaped double-quote: %s"""		4608311	0					
ANR	4608373	Argument	v1_input		4608311	1					
ANR	4608374	Identifier	v1_input		4608311	0					
ANR	4608375	ExpressionStatement	"AddErrorMessage ( msg . Value ( ) , errmsg )"	912:4:20529:20564	4608311	2	True				
ANR	4608376	CallExpression	"AddErrorMessage ( msg . Value ( ) , errmsg )"		4608311	0					
ANR	4608377	Callee	AddErrorMessage		4608311	0					
ANR	4608378	Identifier	AddErrorMessage		4608311	0					
ANR	4608379	ArgumentList	msg . Value ( )		4608311	1					
ANR	4608380	Argument	msg . Value ( )		4608311	0					
ANR	4608381	CallExpression	msg . Value ( )		4608311	0					
ANR	4608382	Callee	msg . Value		4608311	0					
ANR	4608383	MemberAccess	msg . Value		4608311	0					
ANR	4608384	Identifier	msg		4608311	0					
ANR	4608385	Identifier	Value		4608311	1					
ANR	4608386	ArgumentList			4608311	1					
ANR	4608387	Argument	errmsg		4608311	1					
ANR	4608388	Identifier	errmsg		4608311	0					
ANR	4608389	ReturnStatement	return false ;	914:3:20574:20586	4608311	1	True				
ANR	4608390	Identifier	false		4608311	0					
ANR	4608391	ElseStatement	else		4608311	0					
ANR	4608392	IfStatement	"if ( v1_input [ 0 ] == '\\\\' && v1_input [ 1 ] == '""' )"		4608311	0					
ANR	4608393	Condition	"v1_input [ 0 ] == '\\\\' && v1_input [ 1 ] == '""'"	916:10:20602:20642	4608311	0	True				
ANR	4608394	AndExpression	"v1_input [ 0 ] == '\\\\' && v1_input [ 1 ] == '""'"		4608311	0		&&			
ANR	4608395	EqualityExpression	v1_input [ 0 ] == '\\\\'		4608311	0		==			
ANR	4608396	ArrayIndexing	v1_input [ 0 ]		4608311	0					
ANR	4608397	Identifier	v1_input		4608311	0					
ANR	4608398	PrimaryExpression	0		4608311	1					
ANR	4608399	PrimaryExpression	'\\\\'		4608311	1					
ANR	4608400	EqualityExpression	"v1_input [ 1 ] == '""'"		4608311	1		==			
ANR	4608401	ArrayIndexing	v1_input [ 1 ]		4608311	0					
ANR	4608402	Identifier	v1_input		4608311	0					
ANR	4608403	PrimaryExpression	1		4608311	1					
ANR	4608404	PrimaryExpression	"'""'"		4608311	1					
ANR	4608405	CompoundStatement		15:53:354:354	4608311	1					
ANR	4608406	ExpressionStatement	v1_input ++	918:3:20678:20688	4608311	0	True				
ANR	4608407	PostIncDecOperationExpression	v1_input ++		4608311	0					
ANR	4608408	Identifier	v1_input		4608311	0					
ANR	4608409	IncDec	++		4608311	1					
ANR	4608410	ExpressionStatement	( * v1_raw ) += * ( v1_input ++ )	919:3:20693:20719	4608311	1	True				
ANR	4608411	AssignmentExpression	( * v1_raw ) += * ( v1_input ++ )		4608311	0		+=			
ANR	4608412	UnaryOperationExpression	* v1_raw		4608311	0					
ANR	4608413	UnaryOperator	*		4608311	0					
ANR	4608414	Identifier	v1_raw		4608311	1					
ANR	4608415	UnaryOperationExpression	* ( v1_input ++ )		4608311	1					
ANR	4608416	UnaryOperator	*		4608311	0					
ANR	4608417	PostIncDecOperationExpression	v1_input ++		4608311	1					
ANR	4608418	Identifier	v1_input		4608311	0					
ANR	4608419	IncDec	++		4608311	1					
ANR	4608420	ElseStatement	else		4608311	0					
ANR	4608421	CompoundStatement		20:7:441:441	4608311	0					
ANR	4608422	ExpressionStatement	( * v1_raw ) += * ( v1_input ++ )	922:3:20737:20763	4608311	0	True				
ANR	4608423	AssignmentExpression	( * v1_raw ) += * ( v1_input ++ )		4608311	0		+=			
ANR	4608424	UnaryOperationExpression	* v1_raw		4608311	0					
ANR	4608425	UnaryOperator	*		4608311	0					
ANR	4608426	Identifier	v1_raw		4608311	1					
ANR	4608427	UnaryOperationExpression	* ( v1_input ++ )		4608311	1					
ANR	4608428	UnaryOperator	*		4608311	0					
ANR	4608429	PostIncDecOperationExpression	v1_input ++		4608311	1					
ANR	4608430	Identifier	v1_input		4608311	0					
ANR	4608431	IncDec	++		4608311	1					
ANR	4608432	ReturnStatement	return true ;	925:1:20773:20784	4608311	4	True				
ANR	4608433	Identifier	true		4608311	0					
ANR	4608434	ReturnType	bool		4608311	1					
ANR	4608435	Identifier	ArgList :: V1WackedToV1Raw		4608311	2					
ANR	4608436	ParameterList	"char const * v1_input , MyString * v1_raw , MyString * errmsg"		4608311	3					
ANR	4608437	Parameter	char const * v1_input	901:25:20234:20253	4608311	0	True				
ANR	4608438	ParameterType	char const *		4608311	0					
ANR	4608439	Identifier	v1_input		4608311	1					
ANR	4608440	Parameter	MyString * v1_raw	901:46:20255:20270	4608311	1	True				
ANR	4608441	ParameterType	MyString *		4608311	0					
ANR	4608442	Identifier	v1_raw		4608311	1					
ANR	4608443	Parameter	MyString * errmsg	901:63:20272:20287	4608311	2	True				
ANR	4608444	ParameterType	MyString *		4608311	0					
ANR	4608445	Identifier	errmsg		4608311	1					
ANR	4608446	CFGEntryNode	ENTRY		4608311		True				
ANR	4608447	CFGExitNode	EXIT		4608311		True				
ANR	4608448	Symbol	msg		4608311						
ANR	4608449	Symbol	* v1_input		4608311						
ANR	4608450	Symbol	v1_input		4608311						
ANR	4608451	Symbol	true		4608311						
ANR	4608452	Symbol	IsV2QuotedString		4608311						
ANR	4608453	Symbol	false		4608311						
ANR	4608454	Symbol	* ( v1_input ++ )		4608311						
ANR	4608455	Symbol	errmsg		4608311						
ANR	4608456	Symbol	* v1_raw		4608311						
ANR	4608457	Symbol	v1_raw		4608311						
ANR	4608458	Symbol	msg . Value		4608311						
ANR	4608459	Function	ArgList :: SetArgV1Syntax	928:0:20789:20885							
ANR	4608460	FunctionDef	ArgList :: SetArgV1Syntax (ArgV1Syntax v1_syntax_param)		4608459	0					
ANR	4608461	CompoundStatement		930:0:20847:20885	4608459	0					
ANR	4608462	ExpressionStatement	this -> v1_syntax = v1_syntax_param	931:1:20850:20883	4608459	0	True				
ANR	4608463	AssignmentExpression	this -> v1_syntax = v1_syntax_param		4608459	0		=			
ANR	4608464	PtrMemberAccess	this -> v1_syntax		4608459	0					
ANR	4608465	Identifier	this		4608459	0					
ANR	4608466	Identifier	v1_syntax		4608459	1					
ANR	4608467	Identifier	v1_syntax_param		4608459	1					
ANR	4608468	ReturnType	void		4608459	1					
ANR	4608469	Identifier	ArgList :: SetArgV1Syntax		4608459	2					
ANR	4608470	ParameterList	ArgV1Syntax v1_syntax_param		4608459	3					
ANR	4608471	Parameter	ArgV1Syntax v1_syntax_param	929:24:20818:20844	4608459	0	True				
ANR	4608472	ParameterType	ArgV1Syntax		4608459	0					
ANR	4608473	Identifier	v1_syntax_param		4608459	1					
ANR	4608474	CFGEntryNode	ENTRY		4608459		True				
ANR	4608475	CFGExitNode	EXIT		4608459		True				
ANR	4608476	Symbol	* this		4608459						
ANR	4608477	Symbol	this		4608459						
ANR	4608478	Symbol	v1_syntax_param		4608459						
ANR	4608479	Symbol	this -> v1_syntax		4608459						
ANR	4608480	Function	ArgList :: SetArgV1SyntaxToCurrentPlatform	934:0:20888:21029							
ANR	4608481	FunctionDef	ArgList :: SetArgV1SyntaxToCurrentPlatform ()		4608480	0					
ANR	4608482	CompoundStatement		936:0:20936:21029	4608480	0					
ANR	4608483	ExpressionStatement	v1_syntax = WIN32_ARGV1_SYNTAX	938:1:20952:20982	4608480	0	True				
ANR	4608484	AssignmentExpression	v1_syntax = WIN32_ARGV1_SYNTAX		4608480	0		=			
ANR	4608485	Identifier	v1_syntax		4608480	0					
ANR	4608486	Identifier	WIN32_ARGV1_SYNTAX		4608480	1					
ANR	4608487	ReturnType	void		4608480	1					
ANR	4608488	Identifier	ArgList :: SetArgV1SyntaxToCurrentPlatform		4608480	2					
ANR	4608489	ParameterList			4608480	3					
ANR	4608490	CFGEntryNode	ENTRY		4608480		True				
ANR	4608491	CFGExitNode	EXIT		4608480		True				
ANR	4608492	Symbol	v1_syntax		4608480						
ANR	4608493	Symbol	WIN32_ARGV1_SYNTAX		4608480						
ANR	4608494	Function	ArgList :: GetArgsStringSystem	944:0:21032:21507							
ANR	4608495	FunctionDef	"ArgList :: GetArgsStringSystem (MyString * result , int skip_args , MyString * error_msg)"		4608494	0					
ANR	4608496	CompoundStatement		946:0:21124:21507	4608494	0					
ANR	4608497	ReturnStatement	"return GetArgsStringWin32 ( result , skip_args , error_msg ) ;"	948:1:21140:21193	4608494	0	True				
ANR	4608498	CallExpression	"GetArgsStringWin32 ( result , skip_args , error_msg )"		4608494	0					
ANR	4608499	Callee	GetArgsStringWin32		4608494	0					
ANR	4608500	Identifier	GetArgsStringWin32		4608494	0					
ANR	4608501	ArgumentList	result		4608494	1					
ANR	4608502	Argument	result		4608494	0					
ANR	4608503	Identifier	result		4608494	0					
ANR	4608504	Argument	skip_args		4608494	1					
ANR	4608505	Identifier	skip_args		4608494	0					
ANR	4608506	Argument	error_msg		4608494	2					
ANR	4608507	Identifier	error_msg		4608494	0					
ANR	4608508	ReturnType	bool		4608494	1					
ANR	4608509	Identifier	ArgList :: GetArgsStringSystem		4608494	2					
ANR	4608510	ParameterList	"MyString * result , int skip_args , MyString * error_msg"		4608494	3					
ANR	4608511	Parameter	MyString * result	945:29:21066:21081	4608494	0	True				
ANR	4608512	ParameterType	MyString *		4608494	0					
ANR	4608513	Identifier	result		4608494	1					
ANR	4608514	Parameter	int skip_args	945:46:21083:21095	4608494	1	True				
ANR	4608515	ParameterType	int		4608494	0					
ANR	4608516	Identifier	skip_args		4608494	1					
ANR	4608517	Parameter	MyString * error_msg	945:60:21097:21115	4608494	2	True				
ANR	4608518	ParameterType	MyString *		4608494	0					
ANR	4608519	Identifier	error_msg		4608494	1					
ANR	4608520	CFGEntryNode	ENTRY		4608494		True				
ANR	4608521	CFGExitNode	EXIT		4608494		True				
ANR	4608522	Symbol	result		4608494						
ANR	4608523	Symbol	error_msg		4608494						
ANR	4608524	Symbol	GetArgsStringWin32		4608494						
ANR	4608525	Symbol	skip_args		4608494						
