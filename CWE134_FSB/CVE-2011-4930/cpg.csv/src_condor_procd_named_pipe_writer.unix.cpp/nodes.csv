command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3620999	File	data/converged/CVE-2011-4930_htcondor/src_condor_procd_named_pipe_writer.unix.cpp								
ANR	3621000	Function	NamedPipeWriter :: initialize	26:0:939:1767							
ANR	3621001	FunctionDef	NamedPipeWriter :: initialize (const char * addr)		3621000	0					
ANR	3621002	CompoundStatement		28:0:990:1767	3621000	0					
ANR	3621003	ExpressionStatement	"m_pipe = safe_open_wrapper_follow ( addr , O_WRONLY | O_NONBLOCK )"	31:1:1044:1106	3621000	0	True				
ANR	3621004	AssignmentExpression	"m_pipe = safe_open_wrapper_follow ( addr , O_WRONLY | O_NONBLOCK )"		3621000	0		=			
ANR	3621005	Identifier	m_pipe		3621000	0					
ANR	3621006	CallExpression	"safe_open_wrapper_follow ( addr , O_WRONLY | O_NONBLOCK )"		3621000	1					
ANR	3621007	Callee	safe_open_wrapper_follow		3621000	0					
ANR	3621008	Identifier	safe_open_wrapper_follow		3621000	0					
ANR	3621009	ArgumentList	addr		3621000	1					
ANR	3621010	Argument	addr		3621000	0					
ANR	3621011	Identifier	addr		3621000	0					
ANR	3621012	Argument	O_WRONLY | O_NONBLOCK		3621000	1					
ANR	3621013	InclusiveOrExpression	O_WRONLY | O_NONBLOCK		3621000	0		|			
ANR	3621014	Identifier	O_WRONLY		3621000	0					
ANR	3621015	Identifier	O_NONBLOCK		3621000	1					
ANR	3621016	IfStatement	if ( m_pipe == - 1 )		3621000	1					
ANR	3621017	Condition	m_pipe == - 1	32:5:1113:1124	3621000	0	True				
ANR	3621018	EqualityExpression	m_pipe == - 1		3621000	0		==			
ANR	3621019	Identifier	m_pipe		3621000	0					
ANR	3621020	UnaryOperationExpression	- 1		3621000	1					
ANR	3621021	UnaryOperator	-		3621000	0					
ANR	3621022	PrimaryExpression	1		3621000	1					
ANR	3621023	CompoundStatement		5:19:136:136	3621000	1					
ANR	3621024	ExpressionStatement	"dprintf ( D_ALWAYS , ""error opening %s: %s (%d)\\n"" , addr , strerror ( errno ) , errno )"	33:2:1131:1249	3621000	0	True				
ANR	3621025	CallExpression	"dprintf ( D_ALWAYS , ""error opening %s: %s (%d)\\n"" , addr , strerror ( errno ) , errno )"		3621000	0					
ANR	3621026	Callee	dprintf		3621000	0					
ANR	3621027	Identifier	dprintf		3621000	0					
ANR	3621028	ArgumentList	D_ALWAYS		3621000	1					
ANR	3621029	Argument	D_ALWAYS		3621000	0					
ANR	3621030	Identifier	D_ALWAYS		3621000	0					
ANR	3621031	Argument	"""error opening %s: %s (%d)\\n"""		3621000	1					
ANR	3621032	PrimaryExpression	"""error opening %s: %s (%d)\\n"""		3621000	0					
ANR	3621033	Argument	addr		3621000	2					
ANR	3621034	Identifier	addr		3621000	0					
ANR	3621035	Argument	strerror ( errno )		3621000	3					
ANR	3621036	CallExpression	strerror ( errno )		3621000	0					
ANR	3621037	Callee	strerror		3621000	0					
ANR	3621038	Identifier	strerror		3621000	0					
ANR	3621039	ArgumentList	errno		3621000	1					
ANR	3621040	Argument	errno		3621000	0					
ANR	3621041	Identifier	errno		3621000	0					
ANR	3621042	Argument	errno		3621000	4					
ANR	3621043	Identifier	errno		3621000	0					
ANR	3621044	ReturnStatement	return false ;	38:2:1253:1265	3621000	1	True				
ANR	3621045	Identifier	false		3621000	0					
ANR	3621046	IdentifierDeclStatement	"int flags = fcntl ( m_pipe , F_GETFL ) ;"	43:1:1311:1345	3621000	2	True				
ANR	3621047	IdentifierDecl	"flags = fcntl ( m_pipe , F_GETFL )"		3621000	0					
ANR	3621048	IdentifierDeclType	int		3621000	0					
ANR	3621049	Identifier	flags		3621000	1					
ANR	3621050	AssignmentExpression	"flags = fcntl ( m_pipe , F_GETFL )"		3621000	2		=			
ANR	3621051	Identifier	flags		3621000	0					
ANR	3621052	CallExpression	"fcntl ( m_pipe , F_GETFL )"		3621000	1					
ANR	3621053	Callee	fcntl		3621000	0					
ANR	3621054	Identifier	fcntl		3621000	0					
ANR	3621055	ArgumentList	m_pipe		3621000	1					
ANR	3621056	Argument	m_pipe		3621000	0					
ANR	3621057	Identifier	m_pipe		3621000	0					
ANR	3621058	Argument	F_GETFL		3621000	1					
ANR	3621059	Identifier	F_GETFL		3621000	0					
ANR	3621060	IfStatement	if ( flags == - 1 )		3621000	3					
ANR	3621061	Condition	flags == - 1	44:5:1352:1362	3621000	0	True				
ANR	3621062	EqualityExpression	flags == - 1		3621000	0		==			
ANR	3621063	Identifier	flags		3621000	0					
ANR	3621064	UnaryOperationExpression	- 1		3621000	1					
ANR	3621065	UnaryOperator	-		3621000	0					
ANR	3621066	PrimaryExpression	1		3621000	1					
ANR	3621067	CompoundStatement		17:18:374:374	3621000	1					
ANR	3621068	ExpressionStatement	"dprintf ( D_ALWAYS , ""fcntl error: %s (%d)\\n"" , strerror ( errno ) , errno )"	45:2:1369:1466	3621000	0	True				
ANR	3621069	CallExpression	"dprintf ( D_ALWAYS , ""fcntl error: %s (%d)\\n"" , strerror ( errno ) , errno )"		3621000	0					
ANR	3621070	Callee	dprintf		3621000	0					
ANR	3621071	Identifier	dprintf		3621000	0					
ANR	3621072	ArgumentList	D_ALWAYS		3621000	1					
ANR	3621073	Argument	D_ALWAYS		3621000	0					
ANR	3621074	Identifier	D_ALWAYS		3621000	0					
ANR	3621075	Argument	"""fcntl error: %s (%d)\\n"""		3621000	1					
ANR	3621076	PrimaryExpression	"""fcntl error: %s (%d)\\n"""		3621000	0					
ANR	3621077	Argument	strerror ( errno )		3621000	2					
ANR	3621078	CallExpression	strerror ( errno )		3621000	0					
ANR	3621079	Callee	strerror		3621000	0					
ANR	3621080	Identifier	strerror		3621000	0					
ANR	3621081	ArgumentList	errno		3621000	1					
ANR	3621082	Argument	errno		3621000	0					
ANR	3621083	Identifier	errno		3621000	0					
ANR	3621084	Argument	errno		3621000	3					
ANR	3621085	Identifier	errno		3621000	0					
ANR	3621086	ExpressionStatement	close ( m_pipe )	49:2:1470:1483	3621000	1	True				
ANR	3621087	CallExpression	close ( m_pipe )		3621000	0					
ANR	3621088	Callee	close		3621000	0					
ANR	3621089	Identifier	close		3621000	0					
ANR	3621090	ArgumentList	m_pipe		3621000	1					
ANR	3621091	Argument	m_pipe		3621000	0					
ANR	3621092	Identifier	m_pipe		3621000	0					
ANR	3621093	ExpressionStatement	m_pipe = - 1	50:2:1487:1498	3621000	2	True				
ANR	3621094	AssignmentExpression	m_pipe = - 1		3621000	0		=			
ANR	3621095	Identifier	m_pipe		3621000	0					
ANR	3621096	UnaryOperationExpression	- 1		3621000	1					
ANR	3621097	UnaryOperator	-		3621000	0					
ANR	3621098	PrimaryExpression	1		3621000	1					
ANR	3621099	ReturnStatement	return false ;	51:2:1502:1514	3621000	3	True				
ANR	3621100	Identifier	false		3621000	0					
ANR	3621101	IfStatement	"if ( fcntl ( m_pipe , F_SETFL , flags & ~O_NONBLOCK ) == - 1 )"		3621000	4					
ANR	3621102	Condition	"fcntl ( m_pipe , F_SETFL , flags & ~O_NONBLOCK ) == - 1"	53:5:1524:1572	3621000	0	True				
ANR	3621103	EqualityExpression	"fcntl ( m_pipe , F_SETFL , flags & ~O_NONBLOCK ) == - 1"		3621000	0		==			
ANR	3621104	CallExpression	"fcntl ( m_pipe , F_SETFL , flags & ~O_NONBLOCK )"		3621000	0					
ANR	3621105	Callee	fcntl		3621000	0					
ANR	3621106	Identifier	fcntl		3621000	0					
ANR	3621107	ArgumentList	m_pipe		3621000	1					
ANR	3621108	Argument	m_pipe		3621000	0					
ANR	3621109	Identifier	m_pipe		3621000	0					
ANR	3621110	Argument	F_SETFL		3621000	1					
ANR	3621111	Identifier	F_SETFL		3621000	0					
ANR	3621112	Argument	flags & ~O_NONBLOCK		3621000	2					
ANR	3621113	BitAndExpression	flags & ~O_NONBLOCK		3621000	0		&			
ANR	3621114	Identifier	flags		3621000	0					
ANR	3621115	Identifier	~O_NONBLOCK		3621000	1					
ANR	3621116	UnaryOperationExpression	- 1		3621000	1					
ANR	3621117	UnaryOperator	-		3621000	0					
ANR	3621118	PrimaryExpression	1		3621000	1					
ANR	3621119	CompoundStatement		26:56:584:584	3621000	1					
ANR	3621120	ExpressionStatement	"dprintf ( D_ALWAYS , ""fcntl error: %s (%d)\\n"" , strerror ( errno ) , errno )"	54:2:1579:1676	3621000	0	True				
ANR	3621121	CallExpression	"dprintf ( D_ALWAYS , ""fcntl error: %s (%d)\\n"" , strerror ( errno ) , errno )"		3621000	0					
ANR	3621122	Callee	dprintf		3621000	0					
ANR	3621123	Identifier	dprintf		3621000	0					
ANR	3621124	ArgumentList	D_ALWAYS		3621000	1					
ANR	3621125	Argument	D_ALWAYS		3621000	0					
ANR	3621126	Identifier	D_ALWAYS		3621000	0					
ANR	3621127	Argument	"""fcntl error: %s (%d)\\n"""		3621000	1					
ANR	3621128	PrimaryExpression	"""fcntl error: %s (%d)\\n"""		3621000	0					
ANR	3621129	Argument	strerror ( errno )		3621000	2					
ANR	3621130	CallExpression	strerror ( errno )		3621000	0					
ANR	3621131	Callee	strerror		3621000	0					
ANR	3621132	Identifier	strerror		3621000	0					
ANR	3621133	ArgumentList	errno		3621000	1					
ANR	3621134	Argument	errno		3621000	0					
ANR	3621135	Identifier	errno		3621000	0					
ANR	3621136	Argument	errno		3621000	3					
ANR	3621137	Identifier	errno		3621000	0					
ANR	3621138	ExpressionStatement	close ( m_pipe )	58:2:1680:1693	3621000	1	True				
ANR	3621139	CallExpression	close ( m_pipe )		3621000	0					
ANR	3621140	Callee	close		3621000	0					
ANR	3621141	Identifier	close		3621000	0					
ANR	3621142	ArgumentList	m_pipe		3621000	1					
ANR	3621143	Argument	m_pipe		3621000	0					
ANR	3621144	Identifier	m_pipe		3621000	0					
ANR	3621145	ExpressionStatement	m_pipe = - 1	59:2:1697:1708	3621000	2	True				
ANR	3621146	AssignmentExpression	m_pipe = - 1		3621000	0		=			
ANR	3621147	Identifier	m_pipe		3621000	0					
ANR	3621148	UnaryOperationExpression	- 1		3621000	1					
ANR	3621149	UnaryOperator	-		3621000	0					
ANR	3621150	PrimaryExpression	1		3621000	1					
ANR	3621151	ReturnStatement	return false ;	60:2:1712:1724	3621000	3	True				
ANR	3621152	Identifier	false		3621000	0					
ANR	3621153	ExpressionStatement	m_initialized = true	63:1:1731:1751	3621000	5	True				
ANR	3621154	AssignmentExpression	m_initialized = true		3621000	0		=			
ANR	3621155	Identifier	m_initialized		3621000	0					
ANR	3621156	Identifier	true		3621000	1					
ANR	3621157	ReturnStatement	return true ;	64:1:1754:1765	3621000	6	True				
ANR	3621158	Identifier	true		3621000	0					
ANR	3621159	ReturnType	bool		3621000	1					
ANR	3621160	Identifier	NamedPipeWriter :: initialize		3621000	2					
ANR	3621161	ParameterList	const char * addr		3621000	3					
ANR	3621162	Parameter	const char * addr	27:28:972:987	3621000	0	True				
ANR	3621163	ParameterType	const char *		3621000	0					
ANR	3621164	Identifier	addr		3621000	1					
ANR	3621165	CFGEntryNode	ENTRY		3621000		True				
ANR	3621166	CFGExitNode	EXIT		3621000		True				
ANR	3621167	Symbol	m_initialized		3621000						
ANR	3621168	Symbol	errno		3621000						
ANR	3621169	Symbol	safe_open_wrapper_follow		3621000						
ANR	3621170	Symbol	fcntl		3621000						
ANR	3621171	Symbol	O_NONBLOCK		3621000						
ANR	3621172	Symbol	D_ALWAYS		3621000						
ANR	3621173	Symbol	false		3621000						
ANR	3621174	Symbol	flags		3621000						
ANR	3621175	Symbol	~O_NONBLOCK		3621000						
ANR	3621176	Symbol	F_SETFL		3621000						
ANR	3621177	Symbol	m_pipe		3621000						
ANR	3621178	Symbol	strerror		3621000						
ANR	3621179	Symbol	true		3621000						
ANR	3621180	Symbol	F_GETFL		3621000						
ANR	3621181	Symbol	addr		3621000						
ANR	3621182	Symbol	O_WRONLY		3621000						
ANR	3621183	Function	NamedPipeWriter :: ~NamedPipeWriter	67:0:1771:1935							
ANR	3621184	FunctionDef	NamedPipeWriter :: ~NamedPipeWriter ()		3621183	0					
ANR	3621185	CompoundStatement		68:0:1807:1935	3621183	0					
ANR	3621186	IfStatement	if ( ! m_initialized )		3621183	0					
ANR	3621187	Condition	! m_initialized	71:5:1861:1874	3621183	0	True				
ANR	3621188	UnaryOperationExpression	! m_initialized		3621183	0					
ANR	3621189	UnaryOperator	!		3621183	0					
ANR	3621190	Identifier	m_initialized		3621183	1					
ANR	3621191	CompoundStatement		4:21:69:69	3621183	1					
ANR	3621192	ReturnStatement	return ;	72:2:1881:1887	3621183	0	True				
ANR	3621193	ExpressionStatement	close ( m_pipe )	77:1:1920:1933	3621183	1	True				
ANR	3621194	CallExpression	close ( m_pipe )		3621183	0					
ANR	3621195	Callee	close		3621183	0					
ANR	3621196	Identifier	close		3621183	0					
ANR	3621197	ArgumentList	m_pipe		3621183	1					
ANR	3621198	Argument	m_pipe		3621183	0					
ANR	3621199	Identifier	m_pipe		3621183	0					
ANR	3621200	Identifier	NamedPipeWriter :: ~NamedPipeWriter		3621183	1					
ANR	3621201	ParameterList			3621183	2					
ANR	3621202	CFGEntryNode	ENTRY		3621183		True				
ANR	3621203	CFGExitNode	EXIT		3621183		True				
ANR	3621204	Symbol	m_initialized		3621183						
ANR	3621205	Symbol	m_pipe		3621183						
ANR	3621206	Function	NamedPipeWriter :: set_watchdog	80:0:1938:2052							
ANR	3621207	FunctionDef	NamedPipeWriter :: set_watchdog (NamedPipeWatchdog * watchdog)		3621206	0					
ANR	3621208	CompoundStatement		82:0:2002:2052	3621206	0					
ANR	3621209	ExpressionStatement	ASSERT ( m_initialized )	83:1:2005:2026	3621206	0	True				
ANR	3621210	CallExpression	ASSERT ( m_initialized )		3621206	0					
ANR	3621211	Callee	ASSERT		3621206	0					
ANR	3621212	Identifier	ASSERT		3621206	0					
ANR	3621213	ArgumentList	m_initialized		3621206	1					
ANR	3621214	Argument	m_initialized		3621206	0					
ANR	3621215	Identifier	m_initialized		3621206	0					
ANR	3621216	ExpressionStatement	m_watchdog = watchdog	84:1:2029:2050	3621206	1	True				
ANR	3621217	AssignmentExpression	m_watchdog = watchdog		3621206	0		=			
ANR	3621218	Identifier	m_watchdog		3621206	0					
ANR	3621219	Identifier	watchdog		3621206	1					
ANR	3621220	ReturnType	void		3621206	1					
ANR	3621221	Identifier	NamedPipeWriter :: set_watchdog		3621206	2					
ANR	3621222	ParameterList	NamedPipeWatchdog * watchdog		3621206	3					
ANR	3621223	Parameter	NamedPipeWatchdog * watchdog	81:30:1973:1999	3621206	0	True				
ANR	3621224	ParameterType	NamedPipeWatchdog *		3621206	0					
ANR	3621225	Identifier	watchdog		3621206	1					
ANR	3621226	CFGEntryNode	ENTRY		3621206		True				
ANR	3621227	CFGExitNode	EXIT		3621206		True				
ANR	3621228	Symbol	m_initialized		3621206						
ANR	3621229	Symbol	watchdog		3621206						
ANR	3621230	Symbol	m_watchdog		3621206						
ANR	3621231	Function	NamedPipeWriter :: write_data	87:0:2055:3604							
ANR	3621232	FunctionDef	"NamedPipeWriter :: write_data (void * buffer , int len)"		3621231	0					
ANR	3621233	CompoundStatement		89:0:2111:3604	3621231	0					
ANR	3621234	ExpressionStatement	ASSERT ( m_initialized )	90:1:2114:2135	3621231	0	True				
ANR	3621235	CallExpression	ASSERT ( m_initialized )		3621231	0					
ANR	3621236	Callee	ASSERT		3621231	0					
ANR	3621237	Identifier	ASSERT		3621231	0					
ANR	3621238	ArgumentList	m_initialized		3621231	1					
ANR	3621239	Argument	m_initialized		3621231	0					
ANR	3621240	Identifier	m_initialized		3621231	0					
ANR	3621241	ExpressionStatement	ASSERT ( len <= PIPE_BUF )	96:1:2298:2321	3621231	1	True				
ANR	3621242	CallExpression	ASSERT ( len <= PIPE_BUF )		3621231	0					
ANR	3621243	Callee	ASSERT		3621231	0					
ANR	3621244	Identifier	ASSERT		3621231	0					
ANR	3621245	ArgumentList	len <= PIPE_BUF		3621231	1					
ANR	3621246	Argument	len <= PIPE_BUF		3621231	0					
ANR	3621247	RelationalExpression	len <= PIPE_BUF		3621231	0		<=			
ANR	3621248	Identifier	len		3621231	0					
ANR	3621249	Identifier	PIPE_BUF		3621231	1					
ANR	3621250	IfStatement	if ( m_watchdog != NULL )		3621231	2					
ANR	3621251	Condition	m_watchdog != NULL	103:5:2530:2547	3621231	0	True				
ANR	3621252	EqualityExpression	m_watchdog != NULL		3621231	0		!=			
ANR	3621253	Identifier	m_watchdog		3621231	0					
ANR	3621254	Identifier	NULL		3621231	1					
ANR	3621255	CompoundStatement		24:2:733:802	3621231	1					
ANR	3621256	IdentifierDeclStatement	fd_set write_fd_set ;	104:2:2554:2573	3621231	0	True				
ANR	3621257	IdentifierDecl	write_fd_set		3621231	0					
ANR	3621258	IdentifierDeclType	fd_set		3621231	0					
ANR	3621259	Identifier	write_fd_set		3621231	1					
ANR	3621260	ExpressionStatement	FD_ZERO ( & write_fd_set )	105:2:2577:2599	3621231	1	True				
ANR	3621261	CallExpression	FD_ZERO ( & write_fd_set )		3621231	0					
ANR	3621262	Callee	FD_ZERO		3621231	0					
ANR	3621263	Identifier	FD_ZERO		3621231	0					
ANR	3621264	ArgumentList	& write_fd_set		3621231	1					
ANR	3621265	Argument	& write_fd_set		3621231	0					
ANR	3621266	UnaryOperationExpression	& write_fd_set		3621231	0					
ANR	3621267	UnaryOperator	&		3621231	0					
ANR	3621268	Identifier	write_fd_set		3621231	1					
ANR	3621269	ExpressionStatement	"FD_SET ( m_pipe , & write_fd_set )"	106:2:2603:2632	3621231	2	True				
ANR	3621270	CallExpression	"FD_SET ( m_pipe , & write_fd_set )"		3621231	0					
ANR	3621271	Callee	FD_SET		3621231	0					
ANR	3621272	Identifier	FD_SET		3621231	0					
ANR	3621273	ArgumentList	m_pipe		3621231	1					
ANR	3621274	Argument	m_pipe		3621231	0					
ANR	3621275	Identifier	m_pipe		3621231	0					
ANR	3621276	Argument	& write_fd_set		3621231	1					
ANR	3621277	UnaryOperationExpression	& write_fd_set		3621231	0					
ANR	3621278	UnaryOperator	&		3621231	0					
ANR	3621279	Identifier	write_fd_set		3621231	1					
ANR	3621280	IdentifierDeclStatement	int watchdog_pipe = m_watchdog -> get_file_descriptor ( ) ;	107:2:2636:2689	3621231	3	True				
ANR	3621281	IdentifierDecl	watchdog_pipe = m_watchdog -> get_file_descriptor ( )		3621231	0					
ANR	3621282	IdentifierDeclType	int		3621231	0					
ANR	3621283	Identifier	watchdog_pipe		3621231	1					
ANR	3621284	AssignmentExpression	watchdog_pipe = m_watchdog -> get_file_descriptor ( )		3621231	2		=			
ANR	3621285	Identifier	watchdog_pipe		3621231	0					
ANR	3621286	CallExpression	m_watchdog -> get_file_descriptor ( )		3621231	1					
ANR	3621287	Callee	m_watchdog -> get_file_descriptor		3621231	0					
ANR	3621288	PtrMemberAccess	m_watchdog -> get_file_descriptor		3621231	0					
ANR	3621289	Identifier	m_watchdog		3621231	0					
ANR	3621290	Identifier	get_file_descriptor		3621231	1					
ANR	3621291	ArgumentList			3621231	1					
ANR	3621292	IdentifierDeclStatement	fd_set read_fd_set ;	108:2:2693:2711	3621231	4	True				
ANR	3621293	IdentifierDecl	read_fd_set		3621231	0					
ANR	3621294	IdentifierDeclType	fd_set		3621231	0					
ANR	3621295	Identifier	read_fd_set		3621231	1					
ANR	3621296	ExpressionStatement	FD_ZERO ( & read_fd_set )	109:2:2715:2736	3621231	5	True				
ANR	3621297	CallExpression	FD_ZERO ( & read_fd_set )		3621231	0					
ANR	3621298	Callee	FD_ZERO		3621231	0					
ANR	3621299	Identifier	FD_ZERO		3621231	0					
ANR	3621300	ArgumentList	& read_fd_set		3621231	1					
ANR	3621301	Argument	& read_fd_set		3621231	0					
ANR	3621302	UnaryOperationExpression	& read_fd_set		3621231	0					
ANR	3621303	UnaryOperator	&		3621231	0					
ANR	3621304	Identifier	read_fd_set		3621231	1					
ANR	3621305	ExpressionStatement	"FD_SET ( watchdog_pipe , & read_fd_set )"	110:2:2740:2775	3621231	6	True				
ANR	3621306	CallExpression	"FD_SET ( watchdog_pipe , & read_fd_set )"		3621231	0					
ANR	3621307	Callee	FD_SET		3621231	0					
ANR	3621308	Identifier	FD_SET		3621231	0					
ANR	3621309	ArgumentList	watchdog_pipe		3621231	1					
ANR	3621310	Argument	watchdog_pipe		3621231	0					
ANR	3621311	Identifier	watchdog_pipe		3621231	0					
ANR	3621312	Argument	& read_fd_set		3621231	1					
ANR	3621313	UnaryOperationExpression	& read_fd_set		3621231	0					
ANR	3621314	UnaryOperator	&		3621231	0					
ANR	3621315	Identifier	read_fd_set		3621231	1					
ANR	3621316	IdentifierDeclStatement	int max_fd = ( m_pipe > watchdog_pipe ) ? m_pipe : watchdog_pipe ;	111:2:2779:2841	3621231	7	True				
ANR	3621317	IdentifierDecl	max_fd = ( m_pipe > watchdog_pipe ) ? m_pipe : watchdog_pipe		3621231	0					
ANR	3621318	IdentifierDeclType	int		3621231	0					
ANR	3621319	Identifier	max_fd		3621231	1					
ANR	3621320	AssignmentExpression	max_fd = ( m_pipe > watchdog_pipe ) ? m_pipe : watchdog_pipe		3621231	2		=			
ANR	3621321	Identifier	max_fd		3621231	0					
ANR	3621322	ConditionalExpression	( m_pipe > watchdog_pipe ) ? m_pipe : watchdog_pipe		3621231	1					
ANR	3621323	Condition	m_pipe > watchdog_pipe		3621231	0					
ANR	3621324	RelationalExpression	m_pipe > watchdog_pipe		3621231	0		>			
ANR	3621325	Identifier	m_pipe		3621231	0					
ANR	3621326	Identifier	watchdog_pipe		3621231	1					
ANR	3621327	Identifier	m_pipe		3621231	1					
ANR	3621328	Identifier	watchdog_pipe		3621231	2					
ANR	3621329	IdentifierDeclStatement	"int ret = select ( max_fd + 1 , & read_fd_set , & write_fd_set , NULL , NULL ) ;"	112:2:2845:2914	3621231	8	True				
ANR	3621330	IdentifierDecl	"ret = select ( max_fd + 1 , & read_fd_set , & write_fd_set , NULL , NULL )"		3621231	0					
ANR	3621331	IdentifierDeclType	int		3621231	0					
ANR	3621332	Identifier	ret		3621231	1					
ANR	3621333	AssignmentExpression	"ret = select ( max_fd + 1 , & read_fd_set , & write_fd_set , NULL , NULL )"		3621231	2		=			
ANR	3621334	Identifier	ret		3621231	0					
ANR	3621335	CallExpression	"select ( max_fd + 1 , & read_fd_set , & write_fd_set , NULL , NULL )"		3621231	1					
ANR	3621336	Callee	select		3621231	0					
ANR	3621337	Identifier	select		3621231	0					
ANR	3621338	ArgumentList	max_fd + 1		3621231	1					
ANR	3621339	Argument	max_fd + 1		3621231	0					
ANR	3621340	AdditiveExpression	max_fd + 1		3621231	0		+			
ANR	3621341	Identifier	max_fd		3621231	0					
ANR	3621342	PrimaryExpression	1		3621231	1					
ANR	3621343	Argument	& read_fd_set		3621231	1					
ANR	3621344	UnaryOperationExpression	& read_fd_set		3621231	0					
ANR	3621345	UnaryOperator	&		3621231	0					
ANR	3621346	Identifier	read_fd_set		3621231	1					
ANR	3621347	Argument	& write_fd_set		3621231	2					
ANR	3621348	UnaryOperationExpression	& write_fd_set		3621231	0					
ANR	3621349	UnaryOperator	&		3621231	0					
ANR	3621350	Identifier	write_fd_set		3621231	1					
ANR	3621351	Argument	NULL		3621231	3					
ANR	3621352	Identifier	NULL		3621231	0					
ANR	3621353	Argument	NULL		3621231	4					
ANR	3621354	Identifier	NULL		3621231	0					
ANR	3621355	IfStatement	if ( ret == - 1 )		3621231	9					
ANR	3621356	Condition	ret == - 1	113:6:2922:2930	3621231	0	True				
ANR	3621357	EqualityExpression	ret == - 1		3621231	0		==			
ANR	3621358	Identifier	ret		3621231	0					
ANR	3621359	UnaryOperationExpression	- 1		3621231	1					
ANR	3621360	UnaryOperator	-		3621231	0					
ANR	3621361	PrimaryExpression	1		3621231	1					
ANR	3621362	CompoundStatement		25:17:821:821	3621231	1					
ANR	3621363	ExpressionStatement	"dprintf ( D_ALWAYS , ""select error: %s (%d)\\n"" , strerror ( errno ) , errno )"	114:3:2938:3039	3621231	0	True				
ANR	3621364	CallExpression	"dprintf ( D_ALWAYS , ""select error: %s (%d)\\n"" , strerror ( errno ) , errno )"		3621231	0					
ANR	3621365	Callee	dprintf		3621231	0					
ANR	3621366	Identifier	dprintf		3621231	0					
ANR	3621367	ArgumentList	D_ALWAYS		3621231	1					
ANR	3621368	Argument	D_ALWAYS		3621231	0					
ANR	3621369	Identifier	D_ALWAYS		3621231	0					
ANR	3621370	Argument	"""select error: %s (%d)\\n"""		3621231	1					
ANR	3621371	PrimaryExpression	"""select error: %s (%d)\\n"""		3621231	0					
ANR	3621372	Argument	strerror ( errno )		3621231	2					
ANR	3621373	CallExpression	strerror ( errno )		3621231	0					
ANR	3621374	Callee	strerror		3621231	0					
ANR	3621375	Identifier	strerror		3621231	0					
ANR	3621376	ArgumentList	errno		3621231	1					
ANR	3621377	Argument	errno		3621231	0					
ANR	3621378	Identifier	errno		3621231	0					
ANR	3621379	Argument	errno		3621231	3					
ANR	3621380	Identifier	errno		3621231	0					
ANR	3621381	ReturnStatement	return false ;	118:3:3044:3056	3621231	1	True				
ANR	3621382	Identifier	false		3621231	0					
ANR	3621383	IfStatement	"if ( FD_ISSET ( watchdog_pipe , & read_fd_set ) )"		3621231	10					
ANR	3621384	Condition	"FD_ISSET ( watchdog_pipe , & read_fd_set )"	120:6:3068:3104	3621231	0	True				
ANR	3621385	CallExpression	"FD_ISSET ( watchdog_pipe , & read_fd_set )"		3621231	0					
ANR	3621386	Callee	FD_ISSET		3621231	0					
ANR	3621387	Identifier	FD_ISSET		3621231	0					
ANR	3621388	ArgumentList	watchdog_pipe		3621231	1					
ANR	3621389	Argument	watchdog_pipe		3621231	0					
ANR	3621390	Identifier	watchdog_pipe		3621231	0					
ANR	3621391	Argument	& read_fd_set		3621231	1					
ANR	3621392	UnaryOperationExpression	& read_fd_set		3621231	0					
ANR	3621393	UnaryOperator	&		3621231	0					
ANR	3621394	Identifier	read_fd_set		3621231	1					
ANR	3621395	CompoundStatement		32:45:995:995	3621231	1					
ANR	3621396	Statement	dprintf	121:3:3112:3118	3621231	0	True				
ANR	3621397	Statement	(	121:10:3119:3119	3621231	1	True				
ANR	3621398	Statement	D_ALWAYS	121:11:3120:3127	3621231	2	True				
ANR	3621399	Statement	","	121:19:3128:3128	3621231	3	True				
ANR	3621400	Statement	"""error writing to named pipe: """	122:11:3141:3171	3621231	4	True				
ANR	3621401	Statement	"""watchdog pipe has closed\\n"""	123:15:3188:3215	3621231	5	True				
ANR	3621402	Statement	)	123:43:3216:3216	3621231	6	True				
ANR	3621403	ExpressionStatement		123:44:3217:3217	3621231	7	True				
ANR	3621404	ReturnStatement	return false ;	124:3:3222:3234	3621231	8	True				
ANR	3621405	Identifier	false		3621231	0					
ANR	3621406	IdentifierDeclStatement	"int bytes = write ( m_pipe , buffer , len ) ;"	130:1:3266:3304	3621231	3	True				
ANR	3621407	IdentifierDecl	"bytes = write ( m_pipe , buffer , len )"		3621231	0					
ANR	3621408	IdentifierDeclType	int		3621231	0					
ANR	3621409	Identifier	bytes		3621231	1					
ANR	3621410	AssignmentExpression	"bytes = write ( m_pipe , buffer , len )"		3621231	2		=			
ANR	3621411	Identifier	bytes		3621231	0					
ANR	3621412	CallExpression	"write ( m_pipe , buffer , len )"		3621231	1					
ANR	3621413	Callee	write		3621231	0					
ANR	3621414	Identifier	write		3621231	0					
ANR	3621415	ArgumentList	m_pipe		3621231	1					
ANR	3621416	Argument	m_pipe		3621231	0					
ANR	3621417	Identifier	m_pipe		3621231	0					
ANR	3621418	Argument	buffer		3621231	1					
ANR	3621419	Identifier	buffer		3621231	0					
ANR	3621420	Argument	len		3621231	2					
ANR	3621421	Identifier	len		3621231	0					
ANR	3621422	IfStatement	if ( bytes != len )		3621231	4					
ANR	3621423	Condition	bytes != len	131:5:3311:3322	3621231	0	True				
ANR	3621424	EqualityExpression	bytes != len		3621231	0		!=			
ANR	3621425	Identifier	bytes		3621231	0					
ANR	3621426	Identifier	len		3621231	1					
ANR	3621427	CompoundStatement		43:19:1213:1213	3621231	1					
ANR	3621428	IfStatement	if ( bytes == - 1 )		3621231	0					
ANR	3621429	Condition	bytes == - 1	132:6:3333:3343	3621231	0	True				
ANR	3621430	EqualityExpression	bytes == - 1		3621231	0		==			
ANR	3621431	Identifier	bytes		3621231	0					
ANR	3621432	UnaryOperationExpression	- 1		3621231	1					
ANR	3621433	UnaryOperator	-		3621231	0					
ANR	3621434	PrimaryExpression	1		3621231	1					
ANR	3621435	CompoundStatement		44:19:1234:1234	3621231	1					
ANR	3621436	ExpressionStatement	"dprintf ( D_ALWAYS , ""write error: %s (%d)\\n"" , strerror ( errno ) , errno )"	133:3:3351:3451	3621231	0	True				
ANR	3621437	CallExpression	"dprintf ( D_ALWAYS , ""write error: %s (%d)\\n"" , strerror ( errno ) , errno )"		3621231	0					
ANR	3621438	Callee	dprintf		3621231	0					
ANR	3621439	Identifier	dprintf		3621231	0					
ANR	3621440	ArgumentList	D_ALWAYS		3621231	1					
ANR	3621441	Argument	D_ALWAYS		3621231	0					
ANR	3621442	Identifier	D_ALWAYS		3621231	0					
ANR	3621443	Argument	"""write error: %s (%d)\\n"""		3621231	1					
ANR	3621444	PrimaryExpression	"""write error: %s (%d)\\n"""		3621231	0					
ANR	3621445	Argument	strerror ( errno )		3621231	2					
ANR	3621446	CallExpression	strerror ( errno )		3621231	0					
ANR	3621447	Callee	strerror		3621231	0					
ANR	3621448	Identifier	strerror		3621231	0					
ANR	3621449	ArgumentList	errno		3621231	1					
ANR	3621450	Argument	errno		3621231	0					
ANR	3621451	Identifier	errno		3621231	0					
ANR	3621452	Argument	errno		3621231	3					
ANR	3621453	Identifier	errno		3621231	0					
ANR	3621454	ElseStatement	else		3621231	0					
ANR	3621455	CompoundStatement		50:7:1352:1352	3621231	0					
ANR	3621456	ExpressionStatement	"dprintf ( D_ALWAYS , ""error: wrote %d of %d bytes\\n"" , bytes , len )"	139:3:3469:3564	3621231	0	True				
ANR	3621457	CallExpression	"dprintf ( D_ALWAYS , ""error: wrote %d of %d bytes\\n"" , bytes , len )"		3621231	0					
ANR	3621458	Callee	dprintf		3621231	0					
ANR	3621459	Identifier	dprintf		3621231	0					
ANR	3621460	ArgumentList	D_ALWAYS		3621231	1					
ANR	3621461	Argument	D_ALWAYS		3621231	0					
ANR	3621462	Identifier	D_ALWAYS		3621231	0					
ANR	3621463	Argument	"""error: wrote %d of %d bytes\\n"""		3621231	1					
ANR	3621464	PrimaryExpression	"""error: wrote %d of %d bytes\\n"""		3621231	0					
ANR	3621465	Argument	bytes		3621231	2					
ANR	3621466	Identifier	bytes		3621231	0					
ANR	3621467	Argument	len		3621231	3					
ANR	3621468	Identifier	len		3621231	0					
ANR	3621469	ReturnStatement	return false ;	144:2:3572:3584	3621231	1	True				
ANR	3621470	Identifier	false		3621231	0					
ANR	3621471	ReturnStatement	return true ;	147:1:3591:3602	3621231	5	True				
ANR	3621472	Identifier	true		3621231	0					
ANR	3621473	ReturnType	bool		3621231	1					
ANR	3621474	Identifier	NamedPipeWriter :: write_data		3621231	2					
ANR	3621475	ParameterList	"void * buffer , int len"		3621231	3					
ANR	3621476	Parameter	void * buffer	88:28:2088:2099	3621231	0	True				
ANR	3621477	ParameterType	void *		3621231	0					
ANR	3621478	Identifier	buffer		3621231	1					
ANR	3621479	Parameter	int len	88:42:2102:2108	3621231	1	True				
ANR	3621480	ParameterType	int		3621231	0					
ANR	3621481	Identifier	len		3621231	1					
ANR	3621482	CFGEntryNode	ENTRY		3621231		True				
ANR	3621483	CFGExitNode	EXIT		3621231		True				
ANR	3621484	Symbol	m_initialized		3621231						
ANR	3621485	Symbol	PIPE_BUF		3621231						
ANR	3621486	Symbol	select		3621231						
ANR	3621487	Symbol	read_fd_set		3621231						
ANR	3621488	Symbol	write_fd_set		3621231						
ANR	3621489	Symbol	m_watchdog -> get_file_descriptor		3621231						
ANR	3621490	Symbol	len		3621231						
ANR	3621491	Symbol	FD_ISSET		3621231						
ANR	3621492	Symbol	buffer		3621231						
ANR	3621493	Symbol	write		3621231						
ANR	3621494	Symbol	ret		3621231						
ANR	3621495	Symbol	errno		3621231						
ANR	3621496	Symbol	NULL		3621231						
ANR	3621497	Symbol	& write_fd_set		3621231						
ANR	3621498	Symbol	watchdog_pipe		3621231						
ANR	3621499	Symbol	D_ALWAYS		3621231						
ANR	3621500	Symbol	false		3621231						
ANR	3621501	Symbol	m_pipe		3621231						
ANR	3621502	Symbol	strerror		3621231						
ANR	3621503	Symbol	* m_watchdog		3621231						
ANR	3621504	Symbol	max_fd		3621231						
ANR	3621505	Symbol	bytes		3621231						
ANR	3621506	Symbol	m_watchdog		3621231						
ANR	3621507	Symbol	& read_fd_set		3621231						
ANR	3621508	Symbol	true		3621231						
