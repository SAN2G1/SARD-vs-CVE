command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1930728	File	data/converged/CVE-2011-4930_htcondor/ntsysinfo.WINDOWS.cpp								
ANR	1930729	DeclStmt									
ANR	1930730	Decl							int	int	CSysinfo :: reference_count
ANR	1930731	DeclStmt									
ANR	1930732	Decl							HINSTANCE	HINSTANCE	CSysinfo :: hNtDll
ANR	1930733	DeclStmt									
ANR	1930734	Decl							HINSTANCE	HINSTANCE	CSysinfo :: hKernel32Dll
ANR	1930735	DeclStmt									
ANR	1930736	Decl							CSysinfo :: FPNtQueryInformationProcess	CSysinfo :: FPNtQueryInformationProcess	CSysinfo :: NtQueryInformationProcess
ANR	1930737	DeclStmt									
ANR	1930738	Decl							CSysinfo :: FPNtQuerySystemInformation	CSysinfo :: FPNtQuerySystemInformation	CSysinfo :: NtQuerySystemInformation
ANR	1930739	DeclStmt									
ANR	1930740	Decl							CSysinfo :: FPNtOpenThread	CSysinfo :: FPNtOpenThread	CSysinfo :: NtOpenThread
ANR	1930741	DeclStmt									
ANR	1930742	Decl							CSysinfo :: FPNtClose	CSysinfo :: FPNtClose	CSysinfo :: NtClose
ANR	1930743	DeclStmt									
ANR	1930744	Decl							CSysinfo :: FPCreateToolhelp32Snapshot	CSysinfo :: FPCreateToolhelp32Snapshot	CSysinfo :: CreateToolhelp32Snapshot
ANR	1930745	DeclStmt									
ANR	1930746	Decl							CSysinfo :: FPThread32First	CSysinfo :: FPThread32First	CSysinfo :: Thread32First
ANR	1930747	DeclStmt									
ANR	1930748	Decl							CSysinfo :: FPThread32Next	CSysinfo :: FPThread32Next	CSysinfo :: Thread32Next
ANR	1930749	DeclStmt									
ANR	1930750	Decl							bool	bool	CSysinfo :: IsWin2k
ANR	1930751	DeclStmt									
ANR	1930752	Decl							DWORD	DWORD *	CSysinfo :: memptr
ANR	1930753	DeclStmt									
ANR	1930754	Decl							DWORD	DWORD	CSysinfo :: memptr_size
ANR	1930755	Function	CSysinfo :: CSysinfo	52:0:2167:4236							
ANR	1930756	FunctionDef	CSysinfo :: CSysinfo ()		1930755	0					
ANR	1930757	CompoundStatement		53:0:2188:4236	1930755	0					
ANR	1930758	IfStatement	if ( reference_count == 0 )		1930755	0					
ANR	1930759	Condition	reference_count == 0	54:6:2196:2215	1930755	0	True				
ANR	1930760	EqualityExpression	reference_count == 0		1930755	0		==			
ANR	1930761	Identifier	reference_count		1930755	0					
ANR	1930762	PrimaryExpression	0		1930755	1					
ANR	1930763	CompoundStatement		38:2:1022:1040	1930755	1					
ANR	1930764	ExpressionStatement	"hNtDll = LoadLibrary ( ""ntdll.dll"" )"	56:2:2224:2257	1930755	0	True				
ANR	1930765	AssignmentExpression	"hNtDll = LoadLibrary ( ""ntdll.dll"" )"		1930755	0		=			
ANR	1930766	Identifier	hNtDll		1930755	0					
ANR	1930767	CallExpression	"LoadLibrary ( ""ntdll.dll"" )"		1930755	1					
ANR	1930768	Callee	LoadLibrary		1930755	0					
ANR	1930769	Identifier	LoadLibrary		1930755	0					
ANR	1930770	ArgumentList	"""ntdll.dll"""		1930755	1					
ANR	1930771	Argument	"""ntdll.dll"""		1930755	0					
ANR	1930772	PrimaryExpression	"""ntdll.dll"""		1930755	0					
ANR	1930773	IfStatement	if ( ! hNtDll )		1930755	1					
ANR	1930774	Condition	! hNtDll	58:7:2267:2273	1930755	0	True				
ANR	1930775	UnaryOperationExpression	! hNtDll		1930755	0					
ANR	1930776	UnaryOperator	!		1930755	0					
ANR	1930777	Identifier	hNtDll		1930755	1					
ANR	1930778	CompoundStatement		6:17:88:88	1930755	1					
ANR	1930779	ExpressionStatement	"EXCEPT ( ""cannot load ntdll.dll library"" )"	59:3:2282:2321	1930755	0	True				
ANR	1930780	CallExpression	"EXCEPT ( ""cannot load ntdll.dll library"" )"		1930755	0					
ANR	1930781	Callee	EXCEPT		1930755	0					
ANR	1930782	Identifier	EXCEPT		1930755	0					
ANR	1930783	ArgumentList	"""cannot load ntdll.dll library"""		1930755	1					
ANR	1930784	Argument	"""cannot load ntdll.dll library"""		1930755	0					
ANR	1930785	PrimaryExpression	"""cannot load ntdll.dll library"""		1930755	0					
ANR	1930786	ExpressionStatement	"NtQueryInformationProcess = ( FPNtQueryInformationProcess ) GetProcAddress ( hNtDll , ""NtQueryInformationProcess"" )"	62:2:2330:2442	1930755	2	True				
ANR	1930787	AssignmentExpression	"NtQueryInformationProcess = ( FPNtQueryInformationProcess ) GetProcAddress ( hNtDll , ""NtQueryInformationProcess"" )"		1930755	0		=			
ANR	1930788	Identifier	NtQueryInformationProcess		1930755	0					
ANR	1930789	CastExpression	"( FPNtQueryInformationProcess ) GetProcAddress ( hNtDll , ""NtQueryInformationProcess"" )"		1930755	1					
ANR	1930790	CastTarget	FPNtQueryInformationProcess		1930755	0					
ANR	1930791	CallExpression	"GetProcAddress ( hNtDll , ""NtQueryInformationProcess"" )"		1930755	1					
ANR	1930792	Callee	GetProcAddress		1930755	0					
ANR	1930793	Identifier	GetProcAddress		1930755	0					
ANR	1930794	ArgumentList	hNtDll		1930755	1					
ANR	1930795	Argument	hNtDll		1930755	0					
ANR	1930796	Identifier	hNtDll		1930755	0					
ANR	1930797	Argument	"""NtQueryInformationProcess"""		1930755	1					
ANR	1930798	PrimaryExpression	"""NtQueryInformationProcess"""		1930755	0					
ANR	1930799	IfStatement	if ( ! NtQueryInformationProcess )		1930755	3					
ANR	1930800	Condition	! NtQueryInformationProcess	64:7:2451:2476	1930755	0	True				
ANR	1930801	UnaryOperationExpression	! NtQueryInformationProcess		1930755	0					
ANR	1930802	UnaryOperator	!		1930755	0					
ANR	1930803	Identifier	NtQueryInformationProcess		1930755	1					
ANR	1930804	CompoundStatement		12:36:291:291	1930755	1					
ANR	1930805	ExpressionStatement	"EXCEPT ( ""cannot get address for NtQueryInformationProcess"" )"	65:3:2485:2543	1930755	0	True				
ANR	1930806	CallExpression	"EXCEPT ( ""cannot get address for NtQueryInformationProcess"" )"		1930755	0					
ANR	1930807	Callee	EXCEPT		1930755	0					
ANR	1930808	Identifier	EXCEPT		1930755	0					
ANR	1930809	ArgumentList	"""cannot get address for NtQueryInformationProcess"""		1930755	1					
ANR	1930810	Argument	"""cannot get address for NtQueryInformationProcess"""		1930755	0					
ANR	1930811	PrimaryExpression	"""cannot get address for NtQueryInformationProcess"""		1930755	0					
ANR	1930812	ExpressionStatement	"NtQuerySystemInformation = ( FPNtQuerySystemInformation ) GetProcAddress ( hNtDll , ""NtQuerySystemInformation"" )"	67:2:2551:2660	1930755	4	True				
ANR	1930813	AssignmentExpression	"NtQuerySystemInformation = ( FPNtQuerySystemInformation ) GetProcAddress ( hNtDll , ""NtQuerySystemInformation"" )"		1930755	0		=			
ANR	1930814	Identifier	NtQuerySystemInformation		1930755	0					
ANR	1930815	CastExpression	"( FPNtQuerySystemInformation ) GetProcAddress ( hNtDll , ""NtQuerySystemInformation"" )"		1930755	1					
ANR	1930816	CastTarget	FPNtQuerySystemInformation		1930755	0					
ANR	1930817	CallExpression	"GetProcAddress ( hNtDll , ""NtQuerySystemInformation"" )"		1930755	1					
ANR	1930818	Callee	GetProcAddress		1930755	0					
ANR	1930819	Identifier	GetProcAddress		1930755	0					
ANR	1930820	ArgumentList	hNtDll		1930755	1					
ANR	1930821	Argument	hNtDll		1930755	0					
ANR	1930822	Identifier	hNtDll		1930755	0					
ANR	1930823	Argument	"""NtQuerySystemInformation"""		1930755	1					
ANR	1930824	PrimaryExpression	"""NtQuerySystemInformation"""		1930755	0					
ANR	1930825	IfStatement	if ( ! NtQuerySystemInformation )		1930755	5					
ANR	1930826	Condition	! NtQuerySystemInformation	69:7:2669:2693	1930755	0	True				
ANR	1930827	UnaryOperationExpression	! NtQuerySystemInformation		1930755	0					
ANR	1930828	UnaryOperator	!		1930755	0					
ANR	1930829	Identifier	NtQuerySystemInformation		1930755	1					
ANR	1930830	CompoundStatement		17:35:508:508	1930755	1					
ANR	1930831	ExpressionStatement	"EXCEPT ( ""cannot get address for NtQuerySystemInformation"" )"	70:3:2702:2759	1930755	0	True				
ANR	1930832	CallExpression	"EXCEPT ( ""cannot get address for NtQuerySystemInformation"" )"		1930755	0					
ANR	1930833	Callee	EXCEPT		1930755	0					
ANR	1930834	Identifier	EXCEPT		1930755	0					
ANR	1930835	ArgumentList	"""cannot get address for NtQuerySystemInformation"""		1930755	1					
ANR	1930836	Argument	"""cannot get address for NtQuerySystemInformation"""		1930755	0					
ANR	1930837	PrimaryExpression	"""cannot get address for NtQuerySystemInformation"""		1930755	0					
ANR	1930838	ExpressionStatement	"NtOpenThread = ( FPNtOpenThread ) GetProcAddress ( hNtDll , ""NtOpenThread"" )"	72:2:2767:2840	1930755	6	True				
ANR	1930839	AssignmentExpression	"NtOpenThread = ( FPNtOpenThread ) GetProcAddress ( hNtDll , ""NtOpenThread"" )"		1930755	0		=			
ANR	1930840	Identifier	NtOpenThread		1930755	0					
ANR	1930841	CastExpression	"( FPNtOpenThread ) GetProcAddress ( hNtDll , ""NtOpenThread"" )"		1930755	1					
ANR	1930842	CastTarget	FPNtOpenThread		1930755	0					
ANR	1930843	CallExpression	"GetProcAddress ( hNtDll , ""NtOpenThread"" )"		1930755	1					
ANR	1930844	Callee	GetProcAddress		1930755	0					
ANR	1930845	Identifier	GetProcAddress		1930755	0					
ANR	1930846	ArgumentList	hNtDll		1930755	1					
ANR	1930847	Argument	hNtDll		1930755	0					
ANR	1930848	Identifier	hNtDll		1930755	0					
ANR	1930849	Argument	"""NtOpenThread"""		1930755	1					
ANR	1930850	PrimaryExpression	"""NtOpenThread"""		1930755	0					
ANR	1930851	IfStatement	if ( ! NtOpenThread )		1930755	7					
ANR	1930852	Condition	! NtOpenThread	74:7:2849:2861	1930755	0	True				
ANR	1930853	UnaryOperationExpression	! NtOpenThread		1930755	0					
ANR	1930854	UnaryOperator	!		1930755	0					
ANR	1930855	Identifier	NtOpenThread		1930755	1					
ANR	1930856	CompoundStatement		22:23:676:676	1930755	1					
ANR	1930857	ExpressionStatement	"EXCEPT ( ""cannot get address for NtOpenThread"" )"	75:3:2870:2915	1930755	0	True				
ANR	1930858	CallExpression	"EXCEPT ( ""cannot get address for NtOpenThread"" )"		1930755	0					
ANR	1930859	Callee	EXCEPT		1930755	0					
ANR	1930860	Identifier	EXCEPT		1930755	0					
ANR	1930861	ArgumentList	"""cannot get address for NtOpenThread"""		1930755	1					
ANR	1930862	Argument	"""cannot get address for NtOpenThread"""		1930755	0					
ANR	1930863	PrimaryExpression	"""cannot get address for NtOpenThread"""		1930755	0					
ANR	1930864	ExpressionStatement	"NtClose = ( FPNtClose ) GetProcAddress ( hNtDll , ""NtClose"" )"	77:2:2923:2981	1930755	8	True				
ANR	1930865	AssignmentExpression	"NtClose = ( FPNtClose ) GetProcAddress ( hNtDll , ""NtClose"" )"		1930755	0		=			
ANR	1930866	Identifier	NtClose		1930755	0					
ANR	1930867	CastExpression	"( FPNtClose ) GetProcAddress ( hNtDll , ""NtClose"" )"		1930755	1					
ANR	1930868	CastTarget	FPNtClose		1930755	0					
ANR	1930869	CallExpression	"GetProcAddress ( hNtDll , ""NtClose"" )"		1930755	1					
ANR	1930870	Callee	GetProcAddress		1930755	0					
ANR	1930871	Identifier	GetProcAddress		1930755	0					
ANR	1930872	ArgumentList	hNtDll		1930755	1					
ANR	1930873	Argument	hNtDll		1930755	0					
ANR	1930874	Identifier	hNtDll		1930755	0					
ANR	1930875	Argument	"""NtClose"""		1930755	1					
ANR	1930876	PrimaryExpression	"""NtClose"""		1930755	0					
ANR	1930877	IfStatement	if ( ! NtClose )		1930755	9					
ANR	1930878	Condition	! NtClose	79:7:2990:2997	1930755	0	True				
ANR	1930879	UnaryOperationExpression	! NtClose		1930755	0					
ANR	1930880	UnaryOperator	!		1930755	0					
ANR	1930881	Identifier	NtClose		1930755	1					
ANR	1930882	CompoundStatement		27:18:812:812	1930755	1					
ANR	1930883	ExpressionStatement	"EXCEPT ( ""cannot get address for NtClose"" )"	80:3:3006:3046	1930755	0	True				
ANR	1930884	CallExpression	"EXCEPT ( ""cannot get address for NtClose"" )"		1930755	0					
ANR	1930885	Callee	EXCEPT		1930755	0					
ANR	1930886	Identifier	EXCEPT		1930755	0					
ANR	1930887	ArgumentList	"""cannot get address for NtClose"""		1930755	1					
ANR	1930888	Argument	"""cannot get address for NtClose"""		1930755	0					
ANR	1930889	PrimaryExpression	"""cannot get address for NtClose"""		1930755	0					
ANR	1930890	ExpressionStatement	"memptr = ( DWORD * ) VirtualAlloc ( NULL , memptr_size , MEM_COMMIT , PAGE_READWRITE )"	83:2:3055:3152	1930755	10	True				
ANR	1930891	AssignmentExpression	"memptr = ( DWORD * ) VirtualAlloc ( NULL , memptr_size , MEM_COMMIT , PAGE_READWRITE )"		1930755	0		=			
ANR	1930892	Identifier	memptr		1930755	0					
ANR	1930893	CastExpression	"( DWORD * ) VirtualAlloc ( NULL , memptr_size , MEM_COMMIT , PAGE_READWRITE )"		1930755	1					
ANR	1930894	CastTarget	DWORD *		1930755	0					
ANR	1930895	CallExpression	"VirtualAlloc ( NULL , memptr_size , MEM_COMMIT , PAGE_READWRITE )"		1930755	1					
ANR	1930896	Callee	VirtualAlloc		1930755	0					
ANR	1930897	Identifier	VirtualAlloc		1930755	0					
ANR	1930898	ArgumentList	NULL		1930755	1					
ANR	1930899	Argument	NULL		1930755	0					
ANR	1930900	Identifier	NULL		1930755	0					
ANR	1930901	Argument	memptr_size		1930755	1					
ANR	1930902	Identifier	memptr_size		1930755	0					
ANR	1930903	Argument	MEM_COMMIT		1930755	2					
ANR	1930904	Identifier	MEM_COMMIT		1930755	0					
ANR	1930905	Argument	PAGE_READWRITE		1930755	3					
ANR	1930906	Identifier	PAGE_READWRITE		1930755	0					
ANR	1930907	IdentifierDeclStatement	OSVERSIONINFO info ;	90:2:3211:3229	1930755	11	True				
ANR	1930908	IdentifierDecl	info		1930755	0					
ANR	1930909	IdentifierDeclType	OSVERSIONINFO		1930755	0					
ANR	1930910	Identifier	info		1930755	1					
ANR	1930911	ExpressionStatement	info . dwOSVersionInfoSize = sizeof ( OSVERSIONINFO )	91:2:3233:3281	1930755	12	True				
ANR	1930912	AssignmentExpression	info . dwOSVersionInfoSize = sizeof ( OSVERSIONINFO )		1930755	0		=			
ANR	1930913	MemberAccess	info . dwOSVersionInfoSize		1930755	0					
ANR	1930914	Identifier	info		1930755	0					
ANR	1930915	Identifier	dwOSVersionInfoSize		1930755	1					
ANR	1930916	SizeofExpression	sizeof ( OSVERSIONINFO )		1930755	1					
ANR	1930917	Sizeof	sizeof		1930755	0					
ANR	1930918	SizeofOperand	OSVERSIONINFO		1930755	1					
ANR	1930919	IfStatement	if ( GetVersionEx ( & info ) > 0 )		1930755	13					
ANR	1930920	Condition	GetVersionEx ( & info ) > 0	92:6:3289:3311	1930755	0	True				
ANR	1930921	RelationalExpression	GetVersionEx ( & info ) > 0		1930755	0		>			
ANR	1930922	CallExpression	GetVersionEx ( & info )		1930755	0					
ANR	1930923	Callee	GetVersionEx		1930755	0					
ANR	1930924	Identifier	GetVersionEx		1930755	0					
ANR	1930925	ArgumentList	& info		1930755	1					
ANR	1930926	Argument	& info		1930755	0					
ANR	1930927	UnaryOperationExpression	& info		1930755	0					
ANR	1930928	UnaryOperator	&		1930755	0					
ANR	1930929	Identifier	info		1930755	1					
ANR	1930930	PrimaryExpression	0		1930755	1					
ANR	1930931	CompoundStatement		40:31:1125:1125	1930755	1					
ANR	1930932	IfStatement	if ( info . dwPlatformId == VER_PLATFORM_WIN32_NT && info . dwMajorVersion >= 5 )		1930755	0					
ANR	1930933	Condition	info . dwPlatformId == VER_PLATFORM_WIN32_NT && info . dwMajorVersion >= 5	93:8:3324:3400	1930755	0	True				
ANR	1930934	AndExpression	info . dwPlatformId == VER_PLATFORM_WIN32_NT && info . dwMajorVersion >= 5		1930755	0		&&			
ANR	1930935	EqualityExpression	info . dwPlatformId == VER_PLATFORM_WIN32_NT		1930755	0		==			
ANR	1930936	MemberAccess	info . dwPlatformId		1930755	0					
ANR	1930937	Identifier	info		1930755	0					
ANR	1930938	Identifier	dwPlatformId		1930755	1					
ANR	1930939	Identifier	VER_PLATFORM_WIN32_NT		1930755	1					
ANR	1930940	RelationalExpression	info . dwMajorVersion >= 5		1930755	1		>=			
ANR	1930941	MemberAccess	info . dwMajorVersion		1930755	0					
ANR	1930942	Identifier	info		1930755	0					
ANR	1930943	Identifier	dwMajorVersion		1930755	1					
ANR	1930944	PrimaryExpression	5		1930755	1					
ANR	1930945	CompoundStatement		43:3:1219:1219	1930755	1					
ANR	1930946	ExpressionStatement	IsWin2k = true	96:4:3414:3428	1930755	0	True				
ANR	1930947	AssignmentExpression	IsWin2k = true		1930755	0		=			
ANR	1930948	Identifier	IsWin2k		1930755	0					
ANR	1930949	Identifier	true		1930755	1					
ANR	1930950	IfStatement	if ( IsWin2k )		1930755	14					
ANR	1930951	Condition	IsWin2k	101:7:3503:3509	1930755	0	True				
ANR	1930952	Identifier	IsWin2k		1930755	0					
ANR	1930953	CompoundStatement		49:17:1324:1324	1930755	1					
ANR	1930954	ExpressionStatement	"hKernel32Dll = LoadLibrary ( ""kernel32.dll"" )"	102:3:3518:3560	1930755	0	True				
ANR	1930955	AssignmentExpression	"hKernel32Dll = LoadLibrary ( ""kernel32.dll"" )"		1930755	0		=			
ANR	1930956	Identifier	hKernel32Dll		1930755	0					
ANR	1930957	CallExpression	"LoadLibrary ( ""kernel32.dll"" )"		1930755	1					
ANR	1930958	Callee	LoadLibrary		1930755	0					
ANR	1930959	Identifier	LoadLibrary		1930755	0					
ANR	1930960	ArgumentList	"""kernel32.dll"""		1930755	1					
ANR	1930961	Argument	"""kernel32.dll"""		1930755	0					
ANR	1930962	PrimaryExpression	"""kernel32.dll"""		1930755	0					
ANR	1930963	IfStatement	if ( ! hKernel32Dll )		1930755	1					
ANR	1930964	Condition	! hKernel32Dll	103:8:3570:3582	1930755	0	True				
ANR	1930965	UnaryOperationExpression	! hKernel32Dll		1930755	0					
ANR	1930966	UnaryOperator	!		1930755	0					
ANR	1930967	Identifier	hKernel32Dll		1930755	1					
ANR	1930968	CompoundStatement		51:24:1397:1397	1930755	1					
ANR	1930969	ExpressionStatement	"EXCEPT ( ""cannot load kernel32.dll library"" )"	104:4:3592:3634	1930755	0	True				
ANR	1930970	CallExpression	"EXCEPT ( ""cannot load kernel32.dll library"" )"		1930755	0					
ANR	1930971	Callee	EXCEPT		1930755	0					
ANR	1930972	Identifier	EXCEPT		1930755	0					
ANR	1930973	ArgumentList	"""cannot load kernel32.dll library"""		1930755	1					
ANR	1930974	Argument	"""cannot load kernel32.dll library"""		1930755	0					
ANR	1930975	PrimaryExpression	"""cannot load kernel32.dll library"""		1930755	0					
ANR	1930976	ExpressionStatement	"CreateToolhelp32Snapshot = ( FPCreateToolhelp32Snapshot ) GetProcAddress ( hKernel32Dll , ""CreateToolhelp32Snapshot"" )"	107:3:3645:3761	1930755	2	True				
ANR	1930977	AssignmentExpression	"CreateToolhelp32Snapshot = ( FPCreateToolhelp32Snapshot ) GetProcAddress ( hKernel32Dll , ""CreateToolhelp32Snapshot"" )"		1930755	0		=			
ANR	1930978	Identifier	CreateToolhelp32Snapshot		1930755	0					
ANR	1930979	CastExpression	"( FPCreateToolhelp32Snapshot ) GetProcAddress ( hKernel32Dll , ""CreateToolhelp32Snapshot"" )"		1930755	1					
ANR	1930980	CastTarget	FPCreateToolhelp32Snapshot		1930755	0					
ANR	1930981	CallExpression	"GetProcAddress ( hKernel32Dll , ""CreateToolhelp32Snapshot"" )"		1930755	1					
ANR	1930982	Callee	GetProcAddress		1930755	0					
ANR	1930983	Identifier	GetProcAddress		1930755	0					
ANR	1930984	ArgumentList	hKernel32Dll		1930755	1					
ANR	1930985	Argument	hKernel32Dll		1930755	0					
ANR	1930986	Identifier	hKernel32Dll		1930755	0					
ANR	1930987	Argument	"""CreateToolhelp32Snapshot"""		1930755	1					
ANR	1930988	PrimaryExpression	"""CreateToolhelp32Snapshot"""		1930755	0					
ANR	1930989	IfStatement	if ( ! CreateToolhelp32Snapshot )		1930755	3					
ANR	1930990	Condition	! CreateToolhelp32Snapshot	109:8:3771:3795	1930755	0	True				
ANR	1930991	UnaryOperationExpression	! CreateToolhelp32Snapshot		1930755	0					
ANR	1930992	UnaryOperator	!		1930755	0					
ANR	1930993	Identifier	CreateToolhelp32Snapshot		1930755	1					
ANR	1930994	CompoundStatement		57:36:1610:1610	1930755	1					
ANR	1930995	ExpressionStatement	"EXCEPT ( ""cannot get address for CreateToolhelp32Snapshot"" )"	110:4:3805:3862	1930755	0	True				
ANR	1930996	CallExpression	"EXCEPT ( ""cannot get address for CreateToolhelp32Snapshot"" )"		1930755	0					
ANR	1930997	Callee	EXCEPT		1930755	0					
ANR	1930998	Identifier	EXCEPT		1930755	0					
ANR	1930999	ArgumentList	"""cannot get address for CreateToolhelp32Snapshot"""		1930755	1					
ANR	1931000	Argument	"""cannot get address for CreateToolhelp32Snapshot"""		1930755	0					
ANR	1931001	PrimaryExpression	"""cannot get address for CreateToolhelp32Snapshot"""		1930755	0					
ANR	1931002	ExpressionStatement	"Thread32First = ( FPThread32First ) GetProcAddress ( hKernel32Dll , ""Thread32First"" )"	112:3:3872:3955	1930755	4	True				
ANR	1931003	AssignmentExpression	"Thread32First = ( FPThread32First ) GetProcAddress ( hKernel32Dll , ""Thread32First"" )"		1930755	0		=			
ANR	1931004	Identifier	Thread32First		1930755	0					
ANR	1931005	CastExpression	"( FPThread32First ) GetProcAddress ( hKernel32Dll , ""Thread32First"" )"		1930755	1					
ANR	1931006	CastTarget	FPThread32First		1930755	0					
ANR	1931007	CallExpression	"GetProcAddress ( hKernel32Dll , ""Thread32First"" )"		1930755	1					
ANR	1931008	Callee	GetProcAddress		1930755	0					
ANR	1931009	Identifier	GetProcAddress		1930755	0					
ANR	1931010	ArgumentList	hKernel32Dll		1930755	1					
ANR	1931011	Argument	hKernel32Dll		1930755	0					
ANR	1931012	Identifier	hKernel32Dll		1930755	0					
ANR	1931013	Argument	"""Thread32First"""		1930755	1					
ANR	1931014	PrimaryExpression	"""Thread32First"""		1930755	0					
ANR	1931015	IfStatement	if ( ! Thread32First )		1930755	5					
ANR	1931016	Condition	! Thread32First	114:8:3965:3978	1930755	0	True				
ANR	1931017	UnaryOperationExpression	! Thread32First		1930755	0					
ANR	1931018	UnaryOperator	!		1930755	0					
ANR	1931019	Identifier	Thread32First		1930755	1					
ANR	1931020	CompoundStatement		62:25:1793:1793	1930755	1					
ANR	1931021	ExpressionStatement	"EXCEPT ( ""cannot get address for Thread32First"" )"	115:4:3988:4034	1930755	0	True				
ANR	1931022	CallExpression	"EXCEPT ( ""cannot get address for Thread32First"" )"		1930755	0					
ANR	1931023	Callee	EXCEPT		1930755	0					
ANR	1931024	Identifier	EXCEPT		1930755	0					
ANR	1931025	ArgumentList	"""cannot get address for Thread32First"""		1930755	1					
ANR	1931026	Argument	"""cannot get address for Thread32First"""		1930755	0					
ANR	1931027	PrimaryExpression	"""cannot get address for Thread32First"""		1930755	0					
ANR	1931028	ExpressionStatement	"Thread32Next = ( FPThread32Next ) GetProcAddress ( hKernel32Dll , ""Thread32Next"" )"	117:3:4044:4124	1930755	6	True				
ANR	1931029	AssignmentExpression	"Thread32Next = ( FPThread32Next ) GetProcAddress ( hKernel32Dll , ""Thread32Next"" )"		1930755	0		=			
ANR	1931030	Identifier	Thread32Next		1930755	0					
ANR	1931031	CastExpression	"( FPThread32Next ) GetProcAddress ( hKernel32Dll , ""Thread32Next"" )"		1930755	1					
ANR	1931032	CastTarget	FPThread32Next		1930755	0					
ANR	1931033	CallExpression	"GetProcAddress ( hKernel32Dll , ""Thread32Next"" )"		1930755	1					
ANR	1931034	Callee	GetProcAddress		1930755	0					
ANR	1931035	Identifier	GetProcAddress		1930755	0					
ANR	1931036	ArgumentList	hKernel32Dll		1930755	1					
ANR	1931037	Argument	hKernel32Dll		1930755	0					
ANR	1931038	Identifier	hKernel32Dll		1930755	0					
ANR	1931039	Argument	"""Thread32Next"""		1930755	1					
ANR	1931040	PrimaryExpression	"""Thread32Next"""		1930755	0					
ANR	1931041	IfStatement	if ( ! Thread32Next )		1930755	7					
ANR	1931042	Condition	! Thread32Next	119:8:4134:4146	1930755	0	True				
ANR	1931043	UnaryOperationExpression	! Thread32Next		1930755	0					
ANR	1931044	UnaryOperator	!		1930755	0					
ANR	1931045	Identifier	Thread32Next		1930755	1					
ANR	1931046	CompoundStatement		67:24:1961:1961	1930755	1					
ANR	1931047	ExpressionStatement	"EXCEPT ( ""cannot get address for Thread32Next"" )"	120:4:4156:4201	1930755	0	True				
ANR	1931048	CallExpression	"EXCEPT ( ""cannot get address for Thread32Next"" )"		1930755	0					
ANR	1931049	Callee	EXCEPT		1930755	0					
ANR	1931050	Identifier	EXCEPT		1930755	0					
ANR	1931051	ArgumentList	"""cannot get address for Thread32Next"""		1930755	1					
ANR	1931052	Argument	"""cannot get address for Thread32Next"""		1930755	0					
ANR	1931053	PrimaryExpression	"""cannot get address for Thread32Next"""		1930755	0					
ANR	1931054	ExpressionStatement	reference_count ++	125:1:4217:4234	1930755	1	True				
ANR	1931055	PostIncDecOperationExpression	reference_count ++		1930755	0					
ANR	1931056	Identifier	reference_count		1930755	0					
ANR	1931057	IncDec	++		1930755	1					
ANR	1931058	Identifier	CSysinfo :: CSysinfo		1930755	1					
ANR	1931059	ParameterList			1930755	2					
ANR	1931060	CFGEntryNode	ENTRY		1930755		True				
ANR	1931061	CFGExitNode	EXIT		1930755		True				
ANR	1931062	Symbol	MEM_COMMIT		1930755						
ANR	1931063	Symbol	info . dwMajorVersion		1930755						
ANR	1931064	Symbol	hKernel32Dll		1930755						
ANR	1931065	Symbol	Thread32Next		1930755						
ANR	1931066	Symbol	NtClose		1930755						
ANR	1931067	Symbol	info . dwOSVersionInfoSize		1930755						
ANR	1931068	Symbol	memptr_size		1930755						
ANR	1931069	Symbol	hNtDll		1930755						
ANR	1931070	Symbol	GetVersionEx		1930755						
ANR	1931071	Symbol	NtQueryInformationProcess		1930755						
ANR	1931072	Symbol	VER_PLATFORM_WIN32_NT		1930755						
ANR	1931073	Symbol	LoadLibrary		1930755						
ANR	1931074	Symbol	GetProcAddress		1930755						
ANR	1931075	Symbol	NtQuerySystemInformation		1930755						
ANR	1931076	Symbol	NtOpenThread		1930755						
ANR	1931077	Symbol	info		1930755						
ANR	1931078	Symbol	CreateToolhelp32Snapshot		1930755						
ANR	1931079	Symbol	NULL		1930755						
ANR	1931080	Symbol	VirtualAlloc		1930755						
ANR	1931081	Symbol	& info		1930755						
ANR	1931082	Symbol	PAGE_READWRITE		1930755						
ANR	1931083	Symbol	info . dwPlatformId		1930755						
ANR	1931084	Symbol	IsWin2k		1930755						
ANR	1931085	Symbol	true		1930755						
ANR	1931086	Symbol	memptr		1930755						
ANR	1931087	Symbol	reference_count		1930755						
ANR	1931088	Symbol	Thread32First		1930755						
ANR	1931089	Function	CSysinfo :: ~CSysinfo	128:0:4239:4421							
ANR	1931090	FunctionDef	CSysinfo :: ~CSysinfo ()		1931089	0					
ANR	1931091	CompoundStatement		129:0:4261:4421	1931089	0					
ANR	1931092	ExpressionStatement	reference_count --	130:1:4264:4281	1931089	0	True				
ANR	1931093	PostIncDecOperationExpression	reference_count --		1931089	0					
ANR	1931094	Identifier	reference_count		1931089	0					
ANR	1931095	IncDec	--		1931089	1					
ANR	1931096	IfStatement	if ( reference_count == 0 )		1931089	1					
ANR	1931097	Condition	reference_count == 0	131:6:4289:4308	1931089	0	True				
ANR	1931098	EqualityExpression	reference_count == 0		1931089	0		==			
ANR	1931099	Identifier	reference_count		1931089	0					
ANR	1931100	PrimaryExpression	0		1931089	1					
ANR	1931101	CompoundStatement		3:29:50:50	1931089	1					
ANR	1931102	ExpressionStatement	FreeLibrary ( hNtDll )	132:2:4316:4335	1931089	0	True				
ANR	1931103	CallExpression	FreeLibrary ( hNtDll )		1931089	0					
ANR	1931104	Callee	FreeLibrary		1931089	0					
ANR	1931105	Identifier	FreeLibrary		1931089	0					
ANR	1931106	ArgumentList	hNtDll		1931089	1					
ANR	1931107	Argument	hNtDll		1931089	0					
ANR	1931108	Identifier	hNtDll		1931089	0					
ANR	1931109	IfStatement	if ( memptr )		1931089	1					
ANR	1931110	Condition	memptr	133:7:4344:4349	1931089	0	True				
ANR	1931111	Identifier	memptr		1931089	0					
ANR	1931112	CompoundStatement		5:16:91:91	1931089	1					
ANR	1931113	ExpressionStatement	"VirtualFree ( memptr , 0 , MEM_RELEASE )"	134:3:4358:4394	1931089	0	True				
ANR	1931114	CallExpression	"VirtualFree ( memptr , 0 , MEM_RELEASE )"		1931089	0					
ANR	1931115	Callee	VirtualFree		1931089	0					
ANR	1931116	Identifier	VirtualFree		1931089	0					
ANR	1931117	ArgumentList	memptr		1931089	1					
ANR	1931118	Argument	memptr		1931089	0					
ANR	1931119	Identifier	memptr		1931089	0					
ANR	1931120	Argument	0		1931089	1					
ANR	1931121	PrimaryExpression	0		1931089	0					
ANR	1931122	Argument	MEM_RELEASE		1931089	2					
ANR	1931123	Identifier	MEM_RELEASE		1931089	0					
ANR	1931124	ExpressionStatement	memptr = NULL	135:3:4399:4412	1931089	1	True				
ANR	1931125	AssignmentExpression	memptr = NULL		1931089	0		=			
ANR	1931126	Identifier	memptr		1931089	0					
ANR	1931127	Identifier	NULL		1931089	1					
ANR	1931128	Identifier	CSysinfo :: ~CSysinfo		1931089	1					
ANR	1931129	ParameterList			1931089	2					
ANR	1931130	CFGEntryNode	ENTRY		1931089		True				
ANR	1931131	CFGExitNode	EXIT		1931089		True				
ANR	1931132	Symbol	NULL		1931089						
ANR	1931133	Symbol	memptr		1931089						
ANR	1931134	Symbol	MEM_RELEASE		1931089						
ANR	1931135	Symbol	reference_count		1931089						
ANR	1931136	Symbol	hNtDll		1931089						
ANR	1931137	Function	CSysinfo :: GetPIDs	140:0:4424:5713							
ANR	1931138	FunctionDef	CSysinfo :: GetPIDs (ExtArray < pid_t > & dest)		1931137	0					
ANR	1931139	CompoundStatement		141:0:4471:5713	1931137	0					
ANR	1931140	IdentifierDeclStatement	int s = 0 ;	144:1:4552:4559	1931137	0	True				
ANR	1931141	IdentifierDecl	s = 0		1931137	0					
ANR	1931142	IdentifierDeclType	int		1931137	0					
ANR	1931143	Identifier	s		1931137	1					
ANR	1931144	AssignmentExpression	s = 0		1931137	2		=			
ANR	1931145	Identifier	s		1931137	0					
ANR	1931146	PrimaryExpression	0		1931137	1					
ANR	1931147	IdentifierDeclStatement	pid_t curpid = 0 ;	145:1:4562:4578	1931137	1	True				
ANR	1931148	IdentifierDecl	curpid = 0		1931137	0					
ANR	1931149	IdentifierDeclType	pid_t		1931137	0					
ANR	1931150	Identifier	curpid		1931137	1					
ANR	1931151	AssignmentExpression	curpid = 0		1931137	2		=			
ANR	1931152	Identifier	curpid		1931137	0					
ANR	1931153	PrimaryExpression	0		1931137	1					
ANR	1931154	IdentifierDeclStatement	DWORD * startblock = memptr ;	146:1:4581:4607	1931137	2	True				
ANR	1931155	IdentifierDecl	* startblock = memptr		1931137	0					
ANR	1931156	IdentifierDeclType	DWORD *		1931137	0					
ANR	1931157	Identifier	startblock		1931137	1					
ANR	1931158	AssignmentExpression	* startblock = memptr		1931137	2		=			
ANR	1931159	Identifier	memptr		1931137	0					
ANR	1931160	Identifier	memptr		1931137	1					
ANR	1931161	ExpressionStatement	Refresh ( )	147:1:4610:4619	1931137	3	True				
ANR	1931162	CallExpression	Refresh ( )		1931137	0					
ANR	1931163	Callee	Refresh		1931137	0					
ANR	1931164	Identifier	Refresh		1931137	0					
ANR	1931165	ArgumentList			1931137	1					
ANR	1931166	WhileStatement	while ( startblock )		1931137	4					
ANR	1931167	Condition	startblock	148:8:4630:4639	1931137	0	True				
ANR	1931168	Identifier	startblock		1931137	0					
ANR	1931169	CompoundStatement		9:1:171:171	1931137	1					
ANR	1931170	ExpressionStatement	curpid = * ( startblock + 17 )	150:2:4647:4674	1931137	0	True				
ANR	1931171	AssignmentExpression	curpid = * ( startblock + 17 )		1931137	0		=			
ANR	1931172	Identifier	curpid		1931137	0					
ANR	1931173	UnaryOperationExpression	* ( startblock + 17 )		1931137	1					
ANR	1931174	UnaryOperator	*		1931137	0					
ANR	1931175	AdditiveExpression	startblock + 17		1931137	1		+			
ANR	1931176	Identifier	startblock		1931137	0					
ANR	1931177	PrimaryExpression	17		1931137	1					
ANR	1931178	ExpressionStatement	dest [ s ++ ] = curpid	151:2:4678:4696	1931137	1	True				
ANR	1931179	AssignmentExpression	dest [ s ++ ] = curpid		1931137	0		=			
ANR	1931180	ArrayIndexing	dest [ s ++ ]		1931137	0					
ANR	1931181	Identifier	dest		1931137	0					
ANR	1931182	PostIncDecOperationExpression	s ++		1931137	1					
ANR	1931183	Identifier	s		1931137	0					
ANR	1931184	IncDec	++		1931137	1					
ANR	1931185	Identifier	curpid		1931137	1					
ANR	1931186	ExpressionStatement	startblock = NextBlock ( startblock )	152:2:4700:4735	1931137	2	True				
ANR	1931187	AssignmentExpression	startblock = NextBlock ( startblock )		1931137	0		=			
ANR	1931188	Identifier	startblock		1931137	0					
ANR	1931189	CallExpression	NextBlock ( startblock )		1931137	1					
ANR	1931190	Callee	NextBlock		1931137	0					
ANR	1931191	Identifier	NextBlock		1931137	0					
ANR	1931192	ArgumentList	startblock		1931137	1					
ANR	1931193	Argument	startblock		1931137	0					
ANR	1931194	Identifier	startblock		1931137	0					
ANR	1931195	IfStatement	if ( startblock == ( DWORD * ) 1 )		1931137	3					
ANR	1931196	Condition	startblock == ( DWORD * ) 1	153:7:4744:4766	1931137	0	True				
ANR	1931197	EqualityExpression	startblock == ( DWORD * ) 1		1931137	0		==			
ANR	1931198	Identifier	startblock		1931137	0					
ANR	1931199	CastExpression	( DWORD * ) 1		1931137	1					
ANR	1931200	CastTarget	DWORD *		1931137	0					
ANR	1931201	PrimaryExpression	1		1931137	1					
ANR	1931202	CompoundStatement		13:33:298:298	1931137	1					
ANR	1931203	ExpressionStatement	startblock = memptr	154:3:4775:4794	1931137	0	True				
ANR	1931204	AssignmentExpression	startblock = memptr		1931137	0		=			
ANR	1931205	Identifier	startblock		1931137	0					
ANR	1931206	Identifier	memptr		1931137	1					
ANR	1931207	ExpressionStatement	s = 0	155:3:4799:4804	1931137	1	True				
ANR	1931208	AssignmentExpression	s = 0		1931137	0		=			
ANR	1931209	Identifier	s		1931137	0					
ANR	1931210	PrimaryExpression	0		1931137	1					
ANR	1931211	ReturnStatement	return ( s ) ;	158:1:4814:4824	1931137	5	True				
ANR	1931212	Identifier	s		1931137	0					
ANR	1931213	IdentifierDeclStatement	HANDLE hProcessSnap ;	160:1:4834:4853	1931137	6	True				
ANR	1931214	IdentifierDecl	hProcessSnap		1931137	0					
ANR	1931215	IdentifierDeclType	HANDLE		1931137	0					
ANR	1931216	Identifier	hProcessSnap		1931137	1					
ANR	1931217	IdentifierDeclStatement	PROCESSENTRY32 pe32 ;	161:1:4856:4875	1931137	7	True				
ANR	1931218	IdentifierDecl	pe32		1931137	0					
ANR	1931219	IdentifierDeclType	PROCESSENTRY32		1931137	0					
ANR	1931220	Identifier	pe32		1931137	1					
ANR	1931221	IdentifierDeclStatement	int s ;	162:1:4878:4883	1931137	8	True				
ANR	1931222	IdentifierDecl	s		1931137	0					
ANR	1931223	IdentifierDeclType	int		1931137	0					
ANR	1931224	Identifier	s		1931137	1					
ANR	1931225	ExpressionStatement	s = 0	164:1:4887:4892	1931137	9	True				
ANR	1931226	AssignmentExpression	s = 0		1931137	0		=			
ANR	1931227	Identifier	s		1931137	0					
ANR	1931228	PrimaryExpression	0		1931137	1					
ANR	1931229	ExpressionStatement	"hProcessSnap = CreateToolhelp32Snapshot ( TH32CS_SNAPPROCESS , 0 )"	167:1:4948:5012	1931137	10	True				
ANR	1931230	AssignmentExpression	"hProcessSnap = CreateToolhelp32Snapshot ( TH32CS_SNAPPROCESS , 0 )"		1931137	0		=			
ANR	1931231	Identifier	hProcessSnap		1931137	0					
ANR	1931232	CallExpression	"CreateToolhelp32Snapshot ( TH32CS_SNAPPROCESS , 0 )"		1931137	1					
ANR	1931233	Callee	CreateToolhelp32Snapshot		1931137	0					
ANR	1931234	Identifier	CreateToolhelp32Snapshot		1931137	0					
ANR	1931235	ArgumentList	TH32CS_SNAPPROCESS		1931137	1					
ANR	1931236	Argument	TH32CS_SNAPPROCESS		1931137	0					
ANR	1931237	Identifier	TH32CS_SNAPPROCESS		1931137	0					
ANR	1931238	Argument	0		1931137	1					
ANR	1931239	PrimaryExpression	0		1931137	0					
ANR	1931240	IfStatement	if ( hProcessSnap == INVALID_HANDLE_VALUE )		1931137	11					
ANR	1931241	Condition	hProcessSnap == INVALID_HANDLE_VALUE	169:5:5021:5056	1931137	0	True				
ANR	1931242	EqualityExpression	hProcessSnap == INVALID_HANDLE_VALUE		1931137	0		==			
ANR	1931243	Identifier	hProcessSnap		1931137	0					
ANR	1931244	Identifier	INVALID_HANDLE_VALUE		1931137	1					
ANR	1931245	CompoundStatement		30:1:589:589	1931137	1					
ANR	1931246	ReturnStatement	return 0 ;	171:2:5065:5073	1931137	0	True				
ANR	1931247	PrimaryExpression	0		1931137	0					
ANR	1931248	ExpressionStatement	pe32 . dwSize = sizeof ( PROCESSENTRY32 )	175:1:5132:5170	1931137	12	True				
ANR	1931249	AssignmentExpression	pe32 . dwSize = sizeof ( PROCESSENTRY32 )		1931137	0		=			
ANR	1931250	MemberAccess	pe32 . dwSize		1931137	0					
ANR	1931251	Identifier	pe32		1931137	0					
ANR	1931252	Identifier	dwSize		1931137	1					
ANR	1931253	SizeofExpression	sizeof ( PROCESSENTRY32 )		1931137	1					
ANR	1931254	Sizeof	sizeof		1931137	0					
ANR	1931255	SizeofOperand	PROCESSENTRY32		1931137	1					
ANR	1931256	IfStatement	"if ( ! Process32First ( hProcessSnap , & pe32 ) )"		1931137	13					
ANR	1931257	Condition	"! Process32First ( hProcessSnap , & pe32 )"	179:5:5258:5295	1931137	0	True				
ANR	1931258	UnaryOperationExpression	"! Process32First ( hProcessSnap , & pe32 )"		1931137	0					
ANR	1931259	UnaryOperator	!		1931137	0					
ANR	1931260	CallExpression	"Process32First ( hProcessSnap , & pe32 )"		1931137	1					
ANR	1931261	Callee	Process32First		1931137	0					
ANR	1931262	Identifier	Process32First		1931137	0					
ANR	1931263	ArgumentList	hProcessSnap		1931137	1					
ANR	1931264	Argument	hProcessSnap		1931137	0					
ANR	1931265	Identifier	hProcessSnap		1931137	0					
ANR	1931266	Argument	& pe32		1931137	1					
ANR	1931267	UnaryOperationExpression	& pe32		1931137	0					
ANR	1931268	UnaryOperator	&		1931137	0					
ANR	1931269	Identifier	pe32		1931137	1					
ANR	1931270	CompoundStatement		40:1:828:828	1931137	1					
ANR	1931271	ExpressionStatement	CloseHandle ( hProcessSnap )	181:2:5304:5331	1931137	0	True				
ANR	1931272	CallExpression	CloseHandle ( hProcessSnap )		1931137	0					
ANR	1931273	Callee	CloseHandle		1931137	0					
ANR	1931274	Identifier	CloseHandle		1931137	0					
ANR	1931275	ArgumentList	hProcessSnap		1931137	1					
ANR	1931276	Argument	hProcessSnap		1931137	0					
ANR	1931277	Identifier	hProcessSnap		1931137	0					
ANR	1931278	ReturnStatement	return 0 ;	182:2:5373:5381	1931137	1	True				
ANR	1931279	PrimaryExpression	0		1931137	0					
ANR	1931280	DoStatement	do		1931137	14					
ANR	1931281	CompoundStatement		47:4:1021:1021	1931137	0					
ANR	1931282	ExpressionStatement	dest [ s ++ ] = pe32 . th32ProcessID	188:2:5497:5527	1931137	0	True				
ANR	1931283	AssignmentExpression	dest [ s ++ ] = pe32 . th32ProcessID		1931137	0		=			
ANR	1931284	ArrayIndexing	dest [ s ++ ]		1931137	0					
ANR	1931285	Identifier	dest		1931137	0					
ANR	1931286	PostIncDecOperationExpression	s ++		1931137	1					
ANR	1931287	Identifier	s		1931137	0					
ANR	1931288	IncDec	++		1931137	1					
ANR	1931289	MemberAccess	pe32 . th32ProcessID		1931137	1					
ANR	1931290	Identifier	pe32		1931137	0					
ANR	1931291	Identifier	th32ProcessID		1931137	1					
ANR	1931292	Condition	"Process32Next ( hProcessSnap , & pe32 )"	189:10:5539:5574	1931137	1	True				
ANR	1931293	CallExpression	"Process32Next ( hProcessSnap , & pe32 )"		1931137	0					
ANR	1931294	Callee	Process32Next		1931137	0					
ANR	1931295	Identifier	Process32Next		1931137	0					
ANR	1931296	ArgumentList	hProcessSnap		1931137	1					
ANR	1931297	Argument	hProcessSnap		1931137	0					
ANR	1931298	Identifier	hProcessSnap		1931137	0					
ANR	1931299	Argument	& pe32		1931137	1					
ANR	1931300	UnaryOperationExpression	& pe32		1931137	0					
ANR	1931301	UnaryOperator	&		1931137	0					
ANR	1931302	Identifier	pe32		1931137	1					
ANR	1931303	ExpressionStatement	CloseHandle ( hProcessSnap )	192:2:5633:5660	1931137	15	True				
ANR	1931304	CallExpression	CloseHandle ( hProcessSnap )		1931137	0					
ANR	1931305	Callee	CloseHandle		1931137	0					
ANR	1931306	Identifier	CloseHandle		1931137	0					
ANR	1931307	ArgumentList	hProcessSnap		1931137	1					
ANR	1931308	Argument	hProcessSnap		1931137	0					
ANR	1931309	Identifier	hProcessSnap		1931137	0					
ANR	1931310	ReturnStatement	return s ;	194:2:5667:5675	1931137	16	True				
ANR	1931311	Identifier	s		1931137	0					
ANR	1931312	ReturnType	int		1931137	1					
ANR	1931313	Identifier	CSysinfo :: GetPIDs		1931137	2					
ANR	1931314	ParameterList	ExtArray < pid_t > & dest		1931137	3					
ANR	1931315	Parameter	ExtArray < pid_t > & dest	140:23:4447:4468	1931137	0	True				
ANR	1931316	ParameterType	ExtArray < pid_t > &		1931137	0					
ANR	1931317	Identifier	dest		1931137	1					
ANR	1931318	CFGEntryNode	ENTRY		1931137		True				
ANR	1931319	CFGExitNode	EXIT		1931137		True				
ANR	1931320	Symbol	pe32		1931137						
ANR	1931321	Symbol	CreateToolhelp32Snapshot		1931137						
ANR	1931322	Symbol	& pe32		1931137						
ANR	1931323	Symbol	* dest		1931137						
ANR	1931324	Symbol	pe32 . dwSize		1931137						
ANR	1931325	Symbol	startblock		1931137						
ANR	1931326	Symbol	dest		1931137						
ANR	1931327	Symbol	* ( startblock + 17 )		1931137						
ANR	1931328	Symbol	INVALID_HANDLE_VALUE		1931137						
ANR	1931329	Symbol	pe32 . th32ProcessID		1931137						
ANR	1931330	Symbol	s		1931137						
ANR	1931331	Symbol	TH32CS_SNAPPROCESS		1931137						
ANR	1931332	Symbol	hProcessSnap		1931137						
ANR	1931333	Symbol	Process32First		1931137						
ANR	1931334	Symbol	NextBlock		1931137						
ANR	1931335	Symbol	memptr		1931137						
ANR	1931336	Symbol	* startblock		1931137						
ANR	1931337	Symbol	curpid		1931137						
ANR	1931338	Symbol	Process32Next		1931137						
ANR	1931339	Function	CSysinfo :: NumThreads	197:0:5716:5861							
ANR	1931340	FunctionDef	CSysinfo :: NumThreads (pid_t pid)		1931339	0					
ANR	1931341	CompoundStatement		198:0:5755:5861	1931339	0					
ANR	1931342	IdentifierDeclStatement	DWORD * block ;	199:1:5758:5770	1931339	0	True				
ANR	1931343	IdentifierDecl	* block		1931339	0					
ANR	1931344	IdentifierDeclType	DWORD *		1931339	0					
ANR	1931345	Identifier	block		1931339	1					
ANR	1931346	ExpressionStatement	Refresh ( )	200:1:5773:5782	1931339	1	True				
ANR	1931347	CallExpression	Refresh ( )		1931339	0					
ANR	1931348	Callee	Refresh		1931339	0					
ANR	1931349	Identifier	Refresh		1931339	0					
ANR	1931350	ArgumentList			1931339	1					
ANR	1931351	ExpressionStatement	block = FindBlock ( pid )	201:1:5785:5808	1931339	2	True				
ANR	1931352	AssignmentExpression	block = FindBlock ( pid )		1931339	0		=			
ANR	1931353	Identifier	block		1931339	0					
ANR	1931354	CallExpression	FindBlock ( pid )		1931339	1					
ANR	1931355	Callee	FindBlock		1931339	0					
ANR	1931356	Identifier	FindBlock		1931339	0					
ANR	1931357	ArgumentList	pid		1931339	1					
ANR	1931358	Argument	pid		1931339	0					
ANR	1931359	Identifier	pid		1931339	0					
ANR	1931360	IfStatement	if ( block )		1931339	3					
ANR	1931361	Condition	block	202:5:5815:5819	1931339	0	True				
ANR	1931362	Identifier	block		1931339	0					
ANR	1931363	ReturnStatement	return * ( block + 1 ) ;	203:2:5824:5841	1931339	1	True				
ANR	1931364	UnaryOperationExpression	* ( block + 1 )		1931339	0					
ANR	1931365	UnaryOperator	*		1931339	0					
ANR	1931366	AdditiveExpression	block + 1		1931339	1		+			
ANR	1931367	Identifier	block		1931339	0					
ANR	1931368	PrimaryExpression	1		1931339	1					
ANR	1931369	ElseStatement	else		1931339	0					
ANR	1931370	ReturnStatement	return 0 ;	205:2:5851:5859	1931339	0	True				
ANR	1931371	PrimaryExpression	0		1931339	0					
ANR	1931372	ReturnType	DWORD		1931339	1					
ANR	1931373	Identifier	CSysinfo :: NumThreads		1931339	2					
ANR	1931374	ParameterList	pid_t pid		1931339	3					
ANR	1931375	Parameter	pid_t pid	197:28:5744:5752	1931339	0	True				
ANR	1931376	ParameterType	pid_t		1931339	0					
ANR	1931377	Identifier	pid		1931339	1					
ANR	1931378	CFGEntryNode	ENTRY		1931339		True				
ANR	1931379	CFGExitNode	EXIT		1931339		True				
ANR	1931380	Symbol	* ( block + 1 )		1931339						
ANR	1931381	Symbol	pid		1931339						
ANR	1931382	Symbol	block		1931339						
ANR	1931383	Symbol	FindBlock		1931339						
ANR	1931384	Symbol	* block		1931339						
ANR	1931385	Function	CSysinfo :: GetProcessName	208:0:5864:6363							
ANR	1931386	FunctionDef	"CSysinfo :: GetProcessName (pid_t pid , char * dest , int sz)"		1931385	0					
ANR	1931387	CompoundStatement		209:0:5926:6363	1931385	0					
ANR	1931388	IdentifierDeclStatement	DWORD * block ;	213:1:6016:6028	1931385	0	True				
ANR	1931389	IdentifierDecl	* block		1931385	0					
ANR	1931390	IdentifierDeclType	DWORD *		1931385	0					
ANR	1931391	Identifier	block		1931385	1					
ANR	1931392	ExpressionStatement	Refresh ( )	214:1:6031:6040	1931385	1	True				
ANR	1931393	CallExpression	Refresh ( )		1931385	0					
ANR	1931394	Callee	Refresh		1931385	0					
ANR	1931395	Identifier	Refresh		1931385	0					
ANR	1931396	ArgumentList			1931385	1					
ANR	1931397	ExpressionStatement	block = FindBlock ( pid )	215:1:6043:6066	1931385	2	True				
ANR	1931398	AssignmentExpression	block = FindBlock ( pid )		1931385	0		=			
ANR	1931399	Identifier	block		1931385	0					
ANR	1931400	CallExpression	FindBlock ( pid )		1931385	1					
ANR	1931401	Callee	FindBlock		1931385	0					
ANR	1931402	Identifier	FindBlock		1931385	0					
ANR	1931403	ArgumentList	pid		1931385	1					
ANR	1931404	Argument	pid		1931385	0					
ANR	1931405	Identifier	pid		1931385	0					
ANR	1931406	IfStatement	if ( ! block )		1931385	3					
ANR	1931407	Condition	! block	216:5:6073:6078	1931385	0	True				
ANR	1931408	UnaryOperationExpression	! block		1931385	0					
ANR	1931409	UnaryOperator	!		1931385	0					
ANR	1931410	Identifier	block		1931385	1					
ANR	1931411	CompoundStatement		9:1:155:155	1931385	1					
ANR	1931412	ExpressionStatement	dest [ 0 ] = '\\0'	218:2:6086:6100	1931385	0	True				
ANR	1931413	AssignmentExpression	dest [ 0 ] = '\\0'		1931385	0		=			
ANR	1931414	ArrayIndexing	dest [ 0 ]		1931385	0					
ANR	1931415	Identifier	dest		1931385	0					
ANR	1931416	PrimaryExpression	0		1931385	1					
ANR	1931417	PrimaryExpression	'\\0'		1931385	1					
ANR	1931418	ReturnStatement	return FALSE ;	219:2:6104:6116	1931385	1	True				
ANR	1931419	Identifier	FALSE		1931385	0					
ANR	1931420	ExpressionStatement	"MakeAnsiString ( ( WORD * ) ( * ( block + 15 ) ) , dest )"	221:1:6122:6165	1931385	4	True				
ANR	1931421	CallExpression	"MakeAnsiString ( ( WORD * ) ( * ( block + 15 ) ) , dest )"		1931385	0					
ANR	1931422	Callee	MakeAnsiString		1931385	0					
ANR	1931423	Identifier	MakeAnsiString		1931385	0					
ANR	1931424	ArgumentList	( WORD * ) ( * ( block + 15 ) )		1931385	1					
ANR	1931425	Argument	( WORD * ) ( * ( block + 15 ) )		1931385	0					
ANR	1931426	CastExpression	( WORD * ) ( * ( block + 15 ) )		1931385	0					
ANR	1931427	CastTarget	WORD *		1931385	0					
ANR	1931428	UnaryOperationExpression	* ( block + 15 )		1931385	1					
ANR	1931429	UnaryOperator	*		1931385	0					
ANR	1931430	AdditiveExpression	block + 15		1931385	1		+			
ANR	1931431	Identifier	block		1931385	0					
ANR	1931432	PrimaryExpression	15		1931385	1					
ANR	1931433	Argument	dest		1931385	1					
ANR	1931434	Identifier	dest		1931385	0					
ANR	1931435	IdentifierDeclStatement	HANDLE Hnd ;	223:1:6175:6185	1931385	5	True				
ANR	1931436	IdentifierDecl	Hnd		1931385	0					
ANR	1931437	IdentifierDeclType	HANDLE		1931385	0					
ANR	1931438	Identifier	Hnd		1931385	1					
ANR	1931439	IfStatement	"if ( ! ( Hnd = OpenProcess ( PROCESS_QUERY_INFORMATION , FALSE , pid ) ) )"		1931385	6					
ANR	1931440	Condition	"! ( Hnd = OpenProcess ( PROCESS_QUERY_INFORMATION , FALSE , pid ) )"	225:5:6193:6252	1931385	0	True				
ANR	1931441	UnaryOperationExpression	"! ( Hnd = OpenProcess ( PROCESS_QUERY_INFORMATION , FALSE , pid ) )"		1931385	0					
ANR	1931442	UnaryOperator	!		1931385	0					
ANR	1931443	AssignmentExpression	"Hnd = OpenProcess ( PROCESS_QUERY_INFORMATION , FALSE , pid )"		1931385	1		=			
ANR	1931444	Identifier	Hnd		1931385	0					
ANR	1931445	CallExpression	"OpenProcess ( PROCESS_QUERY_INFORMATION , FALSE , pid )"		1931385	1					
ANR	1931446	Callee	OpenProcess		1931385	0					
ANR	1931447	Identifier	OpenProcess		1931385	0					
ANR	1931448	ArgumentList	PROCESS_QUERY_INFORMATION		1931385	1					
ANR	1931449	Argument	PROCESS_QUERY_INFORMATION		1931385	0					
ANR	1931450	Identifier	PROCESS_QUERY_INFORMATION		1931385	0					
ANR	1931451	Argument	FALSE		1931385	1					
ANR	1931452	Identifier	FALSE		1931385	0					
ANR	1931453	Argument	pid		1931385	2					
ANR	1931454	Identifier	pid		1931385	0					
ANR	1931455	CompoundStatement		17:67:328:328	1931385	1					
ANR	1931456	ReturnStatement	return FALSE ;	226:2:6259:6271	1931385	0	True				
ANR	1931457	Identifier	FALSE		1931385	0					
ANR	1931458	IfStatement	"if ( ! GetModuleBaseName ( Hnd , NULL , dest , sz ) )"		1931385	7					
ANR	1931459	Condition	"! GetModuleBaseName ( Hnd , NULL , dest , sz )"	229:6:6283:6322	1931385	0	True				
ANR	1931460	UnaryOperationExpression	"! GetModuleBaseName ( Hnd , NULL , dest , sz )"		1931385	0					
ANR	1931461	UnaryOperator	!		1931385	0					
ANR	1931462	CallExpression	"GetModuleBaseName ( Hnd , NULL , dest , sz )"		1931385	1					
ANR	1931463	Callee	GetModuleBaseName		1931385	0					
ANR	1931464	Identifier	GetModuleBaseName		1931385	0					
ANR	1931465	ArgumentList	Hnd		1931385	1					
ANR	1931466	Argument	Hnd		1931385	0					
ANR	1931467	Identifier	Hnd		1931385	0					
ANR	1931468	Argument	NULL		1931385	1					
ANR	1931469	Identifier	NULL		1931385	0					
ANR	1931470	Argument	dest		1931385	2					
ANR	1931471	Identifier	dest		1931385	0					
ANR	1931472	Argument	sz		1931385	3					
ANR	1931473	Identifier	sz		1931385	0					
ANR	1931474	CompoundStatement		21:49:399:399	1931385	1					
ANR	1931475	ReturnStatement	return FALSE ;	230:2:6330:6342	1931385	0	True				
ANR	1931476	Identifier	FALSE		1931385	0					
ANR	1931477	ReturnStatement	return TRUE ;	233:1:6350:6361	1931385	8	True				
ANR	1931478	Identifier	TRUE		1931385	0					
ANR	1931479	ReturnType	BOOL		1931385	1					
ANR	1931480	Identifier	CSysinfo :: GetProcessName		1931385	2					
ANR	1931481	ParameterList	"pid_t pid , char * dest , int sz"		1931385	3					
ANR	1931482	Parameter	pid_t pid	208:31:5895:5903	1931385	0	True				
ANR	1931483	ParameterType	pid_t		1931385	0					
ANR	1931484	Identifier	pid		1931385	1					
ANR	1931485	Parameter	char * dest	208:42:5906:5915	1931385	1	True				
ANR	1931486	ParameterType	char *		1931385	0					
ANR	1931487	Identifier	dest		1931385	1					
ANR	1931488	Parameter	int sz	208:54:5918:5923	1931385	2	True				
ANR	1931489	ParameterType	int		1931385	0					
ANR	1931490	Identifier	sz		1931385	1					
ANR	1931491	CFGEntryNode	ENTRY		1931385		True				
ANR	1931492	CFGExitNode	EXIT		1931385		True				
ANR	1931493	Symbol	GetModuleBaseName		1931385						
ANR	1931494	Symbol	NULL		1931385						
ANR	1931495	Symbol	* dest		1931385						
ANR	1931496	Symbol	sz		1931385						
ANR	1931497	Symbol	TRUE		1931385						
ANR	1931498	Symbol	pid		1931385						
ANR	1931499	Symbol	dest		1931385						
ANR	1931500	Symbol	FindBlock		1931385						
ANR	1931501	Symbol	* ( block + 15 )		1931385						
ANR	1931502	Symbol	* block		1931385						
ANR	1931503	Symbol	block		1931385						
ANR	1931504	Symbol	FALSE		1931385						
ANR	1931505	Symbol	PROCESS_QUERY_INFORMATION		1931385						
ANR	1931506	Symbol	OpenProcess		1931385						
ANR	1931507	Symbol	Hnd		1931385						
ANR	1931508	Function	CSysinfo :: GetHandleCount	236:0:6366:6508							
ANR	1931509	FunctionDef	CSysinfo :: GetHandleCount (pid_t pid)		1931508	0					
ANR	1931510	CompoundStatement		237:0:6409:6508	1931508	0					
ANR	1931511	IdentifierDeclStatement	DWORD * block ;	238:1:6412:6424	1931508	0	True				
ANR	1931512	IdentifierDecl	* block		1931508	0					
ANR	1931513	IdentifierDeclType	DWORD *		1931508	0					
ANR	1931514	Identifier	block		1931508	1					
ANR	1931515	ExpressionStatement	Refresh ( )	239:1:6427:6436	1931508	1	True				
ANR	1931516	CallExpression	Refresh ( )		1931508	0					
ANR	1931517	Callee	Refresh		1931508	0					
ANR	1931518	Identifier	Refresh		1931508	0					
ANR	1931519	ArgumentList			1931508	1					
ANR	1931520	ExpressionStatement	block = FindBlock ( pid )	240:1:6439:6462	1931508	2	True				
ANR	1931521	AssignmentExpression	block = FindBlock ( pid )		1931508	0		=			
ANR	1931522	Identifier	block		1931508	0					
ANR	1931523	CallExpression	FindBlock ( pid )		1931508	1					
ANR	1931524	Callee	FindBlock		1931508	0					
ANR	1931525	Identifier	FindBlock		1931508	0					
ANR	1931526	ArgumentList	pid		1931508	1					
ANR	1931527	Argument	pid		1931508	0					
ANR	1931528	Identifier	pid		1931508	0					
ANR	1931529	IfStatement	if ( ! block )		1931508	3					
ANR	1931530	Condition	! block	241:5:6469:6474	1931508	0	True				
ANR	1931531	UnaryOperationExpression	! block		1931508	0					
ANR	1931532	UnaryOperator	!		1931508	0					
ANR	1931533	Identifier	block		1931508	1					
ANR	1931534	ReturnStatement	return 0 ;	242:2:6479:6487	1931508	1	True				
ANR	1931535	PrimaryExpression	0		1931508	0					
ANR	1931536	ReturnStatement	return block [ 19 ] ;	243:1:6490:6506	1931508	4	True				
ANR	1931537	ArrayIndexing	block [ 19 ]		1931508	0					
ANR	1931538	Identifier	block		1931508	0					
ANR	1931539	PrimaryExpression	19		1931508	1					
ANR	1931540	ReturnType	DWORD		1931508	1					
ANR	1931541	Identifier	CSysinfo :: GetHandleCount		1931508	2					
ANR	1931542	ParameterList	pid_t pid		1931508	3					
ANR	1931543	Parameter	pid_t pid	236:32:6398:6406	1931508	0	True				
ANR	1931544	ParameterType	pid_t		1931508	0					
ANR	1931545	Identifier	pid		1931508	1					
ANR	1931546	CFGEntryNode	ENTRY		1931508		True				
ANR	1931547	CFGExitNode	EXIT		1931508		True				
ANR	1931548	Symbol	pid		1931508						
ANR	1931549	Symbol	block		1931508						
ANR	1931550	Symbol	FindBlock		1931508						
ANR	1931551	Symbol	* block		1931508						
ANR	1931552	Function	Debug_Subst_Hex_ODS	253:0:6851:7455							
ANR	1931553	FunctionDef	"Debug_Subst_Hex_ODS (const TCHAR * pmsg , const DWORD * pHex , int cHex)"		1931552	0					
ANR	1931554	CompoundStatement		254:0:6933:7455	1931552	0					
ANR	1931555	IdentifierDeclStatement	TCHAR sz [ 200 ] ;	255:3:6938:6951	1931552	0	True				
ANR	1931556	IdentifierDecl	sz [ 200 ]		1931552	0					
ANR	1931557	IdentifierDeclType	TCHAR [ 200 ]		1931552	0					
ANR	1931558	Identifier	sz		1931552	1					
ANR	1931559	PrimaryExpression	200		1931552	2					
ANR	1931560	IdentifierDeclStatement	UINT cch = lstrlen ( pmsg ) + 1 ;	256:3:6956:6983	1931552	1	True				
ANR	1931561	IdentifierDecl	cch = lstrlen ( pmsg ) + 1		1931552	0					
ANR	1931562	IdentifierDeclType	UINT		1931552	0					
ANR	1931563	Identifier	cch		1931552	1					
ANR	1931564	AssignmentExpression	cch = lstrlen ( pmsg ) + 1		1931552	2		=			
ANR	1931565	Identifier	cch		1931552	0					
ANR	1931566	AdditiveExpression	lstrlen ( pmsg ) + 1		1931552	1		+			
ANR	1931567	CallExpression	lstrlen ( pmsg )		1931552	0					
ANR	1931568	Callee	lstrlen		1931552	0					
ANR	1931569	Identifier	lstrlen		1931552	0					
ANR	1931570	ArgumentList	pmsg		1931552	1					
ANR	1931571	Argument	pmsg		1931552	0					
ANR	1931572	Identifier	pmsg		1931552	0					
ANR	1931573	PrimaryExpression	1		1931552	1					
ANR	1931574	ExpressionStatement	"CopyMemory ( sz , pmsg , cch * sizeof ( TCHAR ) )"	257:3:6988:7027	1931552	2	True				
ANR	1931575	CallExpression	"CopyMemory ( sz , pmsg , cch * sizeof ( TCHAR ) )"		1931552	0					
ANR	1931576	Callee	CopyMemory		1931552	0					
ANR	1931577	Identifier	CopyMemory		1931552	0					
ANR	1931578	ArgumentList	sz		1931552	1					
ANR	1931579	Argument	sz		1931552	0					
ANR	1931580	Identifier	sz		1931552	0					
ANR	1931581	Argument	pmsg		1931552	1					
ANR	1931582	Identifier	pmsg		1931552	0					
ANR	1931583	Argument	cch * sizeof ( TCHAR )		1931552	2					
ANR	1931584	MultiplicativeExpression	cch * sizeof ( TCHAR )		1931552	0		*			
ANR	1931585	Identifier	cch		1931552	0					
ANR	1931586	SizeofExpression	sizeof ( TCHAR )		1931552	1					
ANR	1931587	Sizeof	sizeof		1931552	0					
ANR	1931588	SizeofOperand	TCHAR		1931552	1					
ANR	1931589	IdentifierDeclStatement	TCHAR * psz = sz + cch ;	259:3:7033:7055	1931552	3	True				
ANR	1931590	IdentifierDecl	* psz = sz + cch		1931552	0					
ANR	1931591	IdentifierDeclType	TCHAR *		1931552	0					
ANR	1931592	Identifier	psz		1931552	1					
ANR	1931593	AssignmentExpression	* psz = sz + cch		1931552	2		=			
ANR	1931594	Identifier	psz		1931552	0					
ANR	1931595	AdditiveExpression	sz + cch		1931552	1		+			
ANR	1931596	Identifier	sz		1931552	0					
ANR	1931597	Identifier	cch		1931552	1					
ANR	1931598	ForStatement	for ( int ix = cHex - 1 ; ix >= 0 ; -- ix )		1931552	4					
ANR	1931599	ForInit	int ix = cHex - 1 ;	261:8:7066:7081	1931552	0	True				
ANR	1931600	IdentifierDeclStatement	int ix = cHex - 1 ;		1931552	0					
ANR	1931601	IdentifierDecl	ix = cHex - 1		1931552	0					
ANR	1931602	IdentifierDeclType	int		1931552	0					
ANR	1931603	Identifier	ix		1931552	1					
ANR	1931604	AssignmentExpression	ix = cHex - 1		1931552	2		=			
ANR	1931605	Identifier	ix		1931552	0					
ANR	1931606	AdditiveExpression	cHex - 1		1931552	1		-			
ANR	1931607	Identifier	cHex		1931552	0					
ANR	1931608	PrimaryExpression	1		1931552	1					
ANR	1931609	Condition	ix >= 0	261:25:7083:7089	1931552	1	True				
ANR	1931610	RelationalExpression	ix >= 0		1931552	0		>=			
ANR	1931611	Identifier	ix		1931552	0					
ANR	1931612	PrimaryExpression	0		1931552	1					
ANR	1931613	UnaryExpression	-- ix	261:34:7092:7095	1931552	2	True				
ANR	1931614	IncDec	--		1931552	0					
ANR	1931615	Identifier	ix		1931552	1					
ANR	1931616	CompoundStatement		9:6:170:170	1931552	3					
ANR	1931617	WhileStatement	while ( psz > sz && * psz != '0' )		1931552	0					
ANR	1931618	Condition	psz > sz && * psz != '0'	263:13:7119:7141	1931552	0	True				
ANR	1931619	AndExpression	psz > sz && * psz != '0'		1931552	0		&&			
ANR	1931620	RelationalExpression	psz > sz		1931552	0		>			
ANR	1931621	Identifier	psz		1931552	0					
ANR	1931622	Identifier	sz		1931552	1					
ANR	1931623	EqualityExpression	* psz != '0'		1931552	1		!=			
ANR	1931624	UnaryOperationExpression	* psz		1931552	0					
ANR	1931625	UnaryOperator	*		1931552	0					
ANR	1931626	Identifier	psz		1931552	1					
ANR	1931627	PrimaryExpression	'0'		1931552	1					
ANR	1931628	ExpressionStatement	-- psz	264:9:7154:7159	1931552	1	True				
ANR	1931629	UnaryExpression	-- psz		1931552	0					
ANR	1931630	IncDec	--		1931552	0					
ANR	1931631	Identifier	psz		1931552	1					
ANR	1931632	ForStatement	for ( DWORD dw = pHex [ ix ] ; dw && psz >= sz ; dw = dw >> 4 )		1931552	1					
ANR	1931633	ForInit	DWORD dw = pHex [ ix ] ;	265:11:7173:7192	1931552	0	True				
ANR	1931634	IdentifierDeclStatement	DWORD dw = pHex [ ix ] ;		1931552	0					
ANR	1931635	IdentifierDecl	dw = pHex [ ix ]		1931552	0					
ANR	1931636	IdentifierDeclType	DWORD		1931552	0					
ANR	1931637	Identifier	dw		1931552	1					
ANR	1931638	AssignmentExpression	dw = pHex [ ix ]		1931552	2		=			
ANR	1931639	Identifier	dw		1931552	0					
ANR	1931640	ArrayIndexing	pHex [ ix ]		1931552	1					
ANR	1931641	Identifier	pHex		1931552	0					
ANR	1931642	Identifier	ix		1931552	1					
ANR	1931643	Condition	dw && psz >= sz	265:32:7194:7208	1931552	1	True				
ANR	1931644	AndExpression	dw && psz >= sz		1931552	0		&&			
ANR	1931645	Identifier	dw		1931552	0					
ANR	1931646	RelationalExpression	psz >= sz		1931552	1		>=			
ANR	1931647	Identifier	psz		1931552	0					
ANR	1931648	Identifier	sz		1931552	1					
ANR	1931649	AssignmentExpression	dw = dw >> 4	265:49:7211:7222	1931552	2	True	=			
ANR	1931650	Identifier	dw		1931552	0					
ANR	1931651	ShiftExpression	dw >> 4		1931552	1		>>			
ANR	1931652	Identifier	dw		1931552	0					
ANR	1931653	PrimaryExpression	4		1931552	1					
ANR	1931654	CompoundStatement		14:9:313:334	1931552	3					
ANR	1931655	IdentifierDeclStatement	TCHAR ch = ( dw & 0xF ) ;	267:9:7247:7268	1931552	0	True				
ANR	1931656	IdentifierDecl	ch = ( dw & 0xF )		1931552	0					
ANR	1931657	IdentifierDeclType	TCHAR		1931552	0					
ANR	1931658	Identifier	ch		1931552	1					
ANR	1931659	AssignmentExpression	ch = ( dw & 0xF )		1931552	2		=			
ANR	1931660	Identifier	ch		1931552	0					
ANR	1931661	BitAndExpression	dw & 0xF		1931552	1		&			
ANR	1931662	Identifier	dw		1931552	0					
ANR	1931663	PrimaryExpression	0xF		1931552	1					
ANR	1931664	ExpressionStatement	* psz = ( TCHAR ) ( ( ch < 10 ) ? ( ch + '0' ) : ( ch - 10 + 'A' ) )	268:9:7280:7335	1931552	1	True				
ANR	1931665	AssignmentExpression	* psz = ( TCHAR ) ( ( ch < 10 ) ? ( ch + '0' ) : ( ch - 10 + 'A' ) )		1931552	0		=			
ANR	1931666	UnaryOperationExpression	* psz		1931552	0					
ANR	1931667	UnaryOperator	*		1931552	0					
ANR	1931668	Identifier	psz		1931552	1					
ANR	1931669	CastExpression	( TCHAR ) ( ( ch < 10 ) ? ( ch + '0' ) : ( ch - 10 + 'A' ) )		1931552	1					
ANR	1931670	CastTarget	TCHAR		1931552	0					
ANR	1931671	ConditionalExpression	( ch < 10 ) ? ( ch + '0' ) : ( ch - 10 + 'A' )		1931552	1					
ANR	1931672	Condition	ch < 10		1931552	0					
ANR	1931673	RelationalExpression	ch < 10		1931552	0		<			
ANR	1931674	Identifier	ch		1931552	0					
ANR	1931675	PrimaryExpression	10		1931552	1					
ANR	1931676	AdditiveExpression	ch + '0'		1931552	1		+			
ANR	1931677	Identifier	ch		1931552	0					
ANR	1931678	PrimaryExpression	'0'		1931552	1					
ANR	1931679	AdditiveExpression	ch - 10 + 'A'		1931552	2		-			
ANR	1931680	Identifier	ch		1931552	0					
ANR	1931681	AdditiveExpression	10 + 'A'		1931552	1		+			
ANR	1931682	PrimaryExpression	10		1931552	0					
ANR	1931683	PrimaryExpression	'A'		1931552	1					
ANR	1931684	ExpressionStatement	-- psz	269:9:7347:7352	1931552	2	True				
ANR	1931685	UnaryExpression	-- psz		1931552	0					
ANR	1931686	IncDec	--		1931552	0					
ANR	1931687	Identifier	psz		1931552	1					
ANR	1931688	WhileStatement	while ( psz > sz && * psz != ' ' )		1931552	2					
ANR	1931689	Condition	psz > sz && * psz != ' '	271:13:7378:7400	1931552	0	True				
ANR	1931690	AndExpression	psz > sz && * psz != ' '		1931552	0		&&			
ANR	1931691	RelationalExpression	psz > sz		1931552	0		>			
ANR	1931692	Identifier	psz		1931552	0					
ANR	1931693	Identifier	sz		1931552	1					
ANR	1931694	EqualityExpression	* psz != ' '		1931552	1		!=			
ANR	1931695	UnaryOperationExpression	* psz		1931552	0					
ANR	1931696	UnaryOperator	*		1931552	0					
ANR	1931697	Identifier	psz		1931552	1					
ANR	1931698	PrimaryExpression	' '		1931552	1					
ANR	1931699	ExpressionStatement	-- psz	272:9:7413:7418	1931552	1	True				
ANR	1931700	UnaryExpression	-- psz		1931552	0					
ANR	1931701	IncDec	--		1931552	0					
ANR	1931702	Identifier	psz		1931552	1					
ANR	1931703	ExpressionStatement	OutputDebugString ( sz )	274:3:7432:7453	1931552	5	True				
ANR	1931704	CallExpression	OutputDebugString ( sz )		1931552	0					
ANR	1931705	Callee	OutputDebugString		1931552	0					
ANR	1931706	Identifier	OutputDebugString		1931552	0					
ANR	1931707	ArgumentList	sz		1931552	1					
ANR	1931708	Argument	sz		1931552	0					
ANR	1931709	Identifier	sz		1931552	0					
ANR	1931710	ReturnType	static void		1931552	1					
ANR	1931711	Identifier	Debug_Subst_Hex_ODS		1931552	2					
ANR	1931712	ParameterList	"const TCHAR * pmsg , const DWORD * pHex , int cHex"		1931552	3					
ANR	1931713	Parameter	const TCHAR * pmsg	253:32:6883:6900	1931552	0	True				
ANR	1931714	ParameterType	const TCHAR *		1931552	0					
ANR	1931715	Identifier	pmsg		1931552	1					
ANR	1931716	Parameter	const DWORD * pHex	253:52:6903:6920	1931552	1	True				
ANR	1931717	ParameterType	const DWORD *		1931552	0					
ANR	1931718	Identifier	pHex		1931552	1					
ANR	1931719	Parameter	int cHex	253:72:6923:6930	1931552	2	True				
ANR	1931720	ParameterType	int		1931552	0					
ANR	1931721	Identifier	cHex		1931552	1					
ANR	1931722	CFGEntryNode	ENTRY		1931552		True				
ANR	1931723	CFGExitNode	EXIT		1931552		True				
ANR	1931724	Symbol	* psz		1931552						
ANR	1931725	Symbol	* pHex		1931552						
ANR	1931726	Symbol	pmsg		1931552						
ANR	1931727	Symbol	ch		1931552						
ANR	1931728	Symbol	lstrlen		1931552						
ANR	1931729	Symbol	sz		1931552						
ANR	1931730	Symbol	cch		1931552						
ANR	1931731	Symbol	ix		1931552						
ANR	1931732	Symbol	dw		1931552						
ANR	1931733	Symbol	cHex		1931552						
ANR	1931734	Symbol	psz		1931552						
ANR	1931735	Symbol	* ix		1931552						
ANR	1931736	Symbol	pHex		1931552						
ANR	1931737	ClassDef	_PROCESS_BASIC_INFORMATION	278:8:7499:7731							
ANR	1931738	DeclStmt									
ANR	1931739	Decl							ULONG_PTR	ULONG_PTR	ExitStatus
ANR	1931740	DeclStmt									
ANR	1931741	Decl							PVOID	PVOID	PebBaseAddress
ANR	1931742	DeclStmt									
ANR	1931743	Decl							ULONG_PTR	ULONG_PTR	AffinityMask
ANR	1931744	DeclStmt									
ANR	1931745	Decl							ULONG_PTR	ULONG_PTR	BasePriority
ANR	1931746	DeclStmt									
ANR	1931747	Decl							ULONG_PTR	ULONG_PTR	UniqueProcessId
ANR	1931748	DeclStmt									
ANR	1931749	Decl							ULONG_PTR	ULONG_PTR	InheritedFromUniqueProcessId
ANR	1931750	DeclStmt									
ANR	1931751	Decl							_PROCESS_BASIC_INFORMATION	_PROCESS_BASIC_INFORMATION	PROCESS_BASIC_INFORMATION
ANR	1931752	Function	CSysinfo :: GetParentPID	287:0:7734:9568							
ANR	1931753	FunctionDef	CSysinfo :: GetParentPID (pid_t pid)		1931752	0					
ANR	1931754	CompoundStatement		288:0:7775:9568	1931752	0					
ANR	1931755	IdentifierDeclStatement	DWORD * block ;	293:1:7889:7901	1931752	0	True				
ANR	1931756	IdentifierDecl	* block		1931752	0					
ANR	1931757	IdentifierDeclType	DWORD *		1931752	0					
ANR	1931758	Identifier	block		1931752	1					
ANR	1931759	ExpressionStatement	Refresh ( )	294:1:7904:7913	1931752	1	True				
ANR	1931760	CallExpression	Refresh ( )		1931752	0					
ANR	1931761	Callee	Refresh		1931752	0					
ANR	1931762	Identifier	Refresh		1931752	0					
ANR	1931763	ArgumentList			1931752	1					
ANR	1931764	ExpressionStatement	block = FindBlock ( pid )	295:1:7916:7939	1931752	2	True				
ANR	1931765	AssignmentExpression	block = FindBlock ( pid )		1931752	0		=			
ANR	1931766	Identifier	block		1931752	0					
ANR	1931767	CallExpression	FindBlock ( pid )		1931752	1					
ANR	1931768	Callee	FindBlock		1931752	0					
ANR	1931769	Identifier	FindBlock		1931752	0					
ANR	1931770	ArgumentList	pid		1931752	1					
ANR	1931771	Argument	pid		1931752	0					
ANR	1931772	Identifier	pid		1931752	0					
ANR	1931773	IfStatement	if ( ! block )		1931752	3					
ANR	1931774	Condition	! block	296:5:7946:7951	1931752	0	True				
ANR	1931775	UnaryOperationExpression	! block		1931752	0					
ANR	1931776	UnaryOperator	!		1931752	0					
ANR	1931777	Identifier	block		1931752	1					
ANR	1931778	ReturnStatement	return 0 ;	297:2:7956:7964	1931752	1	True				
ANR	1931779	PrimaryExpression	0		1931752	0					
ANR	1931780	ReturnStatement	return block [ 18 ] ;	298:1:7967:7983	1931752	4	True				
ANR	1931781	ArrayIndexing	block [ 18 ]		1931752	0					
ANR	1931782	Identifier	block		1931752	0					
ANR	1931783	PrimaryExpression	18		1931752	1					
ANR	1931784	ReturnType	DWORD		1931752	1					
ANR	1931785	Identifier	CSysinfo :: GetParentPID		1931752	2					
ANR	1931786	ParameterList	pid_t pid		1931752	3					
ANR	1931787	Parameter	pid_t pid	287:30:7764:7772	1931752	0	True				
ANR	1931788	ParameterType	pid_t		1931752	0					
ANR	1931789	Identifier	pid		1931752	1					
ANR	1931790	CFGEntryNode	ENTRY		1931752		True				
ANR	1931791	CFGExitNode	EXIT		1931752		True				
ANR	1931792	Symbol	pid		1931752						
ANR	1931793	Symbol	block		1931752						
ANR	1931794	Symbol	FindBlock		1931752						
ANR	1931795	Symbol	* block		1931752						
ANR	1931796	Function	CSysinfo :: GetProcessEntry	352:0:9571:10522							
ANR	1931797	FunctionDef	"CSysinfo :: GetProcessEntry (pid_t pid , PROCESSENTRY32 & pe32)"		1931796	0					
ANR	1931798	CompoundStatement		353:60:9635:10522	1931796	0					
ANR	1931799	IdentifierDeclStatement	HANDLE hProcessSnap ;	355:1:9640:9659	1931796	0	True				
ANR	1931800	IdentifierDecl	hProcessSnap		1931796	0					
ANR	1931801	IdentifierDeclType	HANDLE		1931796	0					
ANR	1931802	Identifier	hProcessSnap		1931796	1					
ANR	1931803	IdentifierDeclStatement	int result ;	356:1:9662:9672	1931796	1	True				
ANR	1931804	IdentifierDecl	result		1931796	0					
ANR	1931805	IdentifierDeclType	int		1931796	0					
ANR	1931806	Identifier	result		1931796	1					
ANR	1931807	ExpressionStatement	result = FALSE	358:1:9676:9690	1931796	2	True				
ANR	1931808	AssignmentExpression	result = FALSE		1931796	0		=			
ANR	1931809	Identifier	result		1931796	0					
ANR	1931810	Identifier	FALSE		1931796	1					
ANR	1931811	ExpressionStatement	"hProcessSnap = CreateToolhelp32Snapshot ( TH32CS_SNAPPROCESS , 0 )"	361:1:9746:9810	1931796	3	True				
ANR	1931812	AssignmentExpression	"hProcessSnap = CreateToolhelp32Snapshot ( TH32CS_SNAPPROCESS , 0 )"		1931796	0		=			
ANR	1931813	Identifier	hProcessSnap		1931796	0					
ANR	1931814	CallExpression	"CreateToolhelp32Snapshot ( TH32CS_SNAPPROCESS , 0 )"		1931796	1					
ANR	1931815	Callee	CreateToolhelp32Snapshot		1931796	0					
ANR	1931816	Identifier	CreateToolhelp32Snapshot		1931796	0					
ANR	1931817	ArgumentList	TH32CS_SNAPPROCESS		1931796	1					
ANR	1931818	Argument	TH32CS_SNAPPROCESS		1931796	0					
ANR	1931819	Identifier	TH32CS_SNAPPROCESS		1931796	0					
ANR	1931820	Argument	0		1931796	1					
ANR	1931821	PrimaryExpression	0		1931796	0					
ANR	1931822	IfStatement	if ( hProcessSnap == INVALID_HANDLE_VALUE )		1931796	4					
ANR	1931823	Condition	hProcessSnap == INVALID_HANDLE_VALUE	363:5:9819:9854	1931796	0	True				
ANR	1931824	EqualityExpression	hProcessSnap == INVALID_HANDLE_VALUE		1931796	0		==			
ANR	1931825	Identifier	hProcessSnap		1931796	0					
ANR	1931826	Identifier	INVALID_HANDLE_VALUE		1931796	1					
ANR	1931827	CompoundStatement		12:1:223:223	1931796	1					
ANR	1931828	ReturnStatement	return FALSE ;	365:2:9863:9875	1931796	0	True				
ANR	1931829	Identifier	FALSE		1931796	0					
ANR	1931830	ExpressionStatement	pe32 . dwSize = sizeof ( PROCESSENTRY32 )	369:1:9934:9972	1931796	5	True				
ANR	1931831	AssignmentExpression	pe32 . dwSize = sizeof ( PROCESSENTRY32 )		1931796	0		=			
ANR	1931832	MemberAccess	pe32 . dwSize		1931796	0					
ANR	1931833	Identifier	pe32		1931796	0					
ANR	1931834	Identifier	dwSize		1931796	1					
ANR	1931835	SizeofExpression	sizeof ( PROCESSENTRY32 )		1931796	1					
ANR	1931836	Sizeof	sizeof		1931796	0					
ANR	1931837	SizeofOperand	PROCESSENTRY32		1931796	1					
ANR	1931838	IfStatement	"if ( ! Process32First ( hProcessSnap , & pe32 ) )"		1931796	6					
ANR	1931839	Condition	"! Process32First ( hProcessSnap , & pe32 )"	373:5:10060:10097	1931796	0	True				
ANR	1931840	UnaryOperationExpression	"! Process32First ( hProcessSnap , & pe32 )"		1931796	0					
ANR	1931841	UnaryOperator	!		1931796	0					
ANR	1931842	CallExpression	"Process32First ( hProcessSnap , & pe32 )"		1931796	1					
ANR	1931843	Callee	Process32First		1931796	0					
ANR	1931844	Identifier	Process32First		1931796	0					
ANR	1931845	ArgumentList	hProcessSnap		1931796	1					
ANR	1931846	Argument	hProcessSnap		1931796	0					
ANR	1931847	Identifier	hProcessSnap		1931796	0					
ANR	1931848	Argument	& pe32		1931796	1					
ANR	1931849	UnaryOperationExpression	& pe32		1931796	0					
ANR	1931850	UnaryOperator	&		1931796	0					
ANR	1931851	Identifier	pe32		1931796	1					
ANR	1931852	CompoundStatement		22:1:466:466	1931796	1					
ANR	1931853	ExpressionStatement	CloseHandle ( hProcessSnap )	375:2:10106:10133	1931796	0	True				
ANR	1931854	CallExpression	CloseHandle ( hProcessSnap )		1931796	0					
ANR	1931855	Callee	CloseHandle		1931796	0					
ANR	1931856	Identifier	CloseHandle		1931796	0					
ANR	1931857	ArgumentList	hProcessSnap		1931796	1					
ANR	1931858	Argument	hProcessSnap		1931796	0					
ANR	1931859	Identifier	hProcessSnap		1931796	0					
ANR	1931860	ReturnStatement	return FALSE ;	376:2:10175:10187	1931796	1	True				
ANR	1931861	Identifier	FALSE		1931796	0					
ANR	1931862	DoStatement	do		1931796	7					
ANR	1931863	CompoundStatement		29:4:638:638	1931796	0					
ANR	1931864	IfStatement	if ( pe32 . th32ProcessID == pid )		1931796	0					
ANR	1931865	Condition	pe32 . th32ProcessID == pid	382:7:10283:10307	1931796	0	True				
ANR	1931866	EqualityExpression	pe32 . th32ProcessID == pid		1931796	0		==			
ANR	1931867	MemberAccess	pe32 . th32ProcessID		1931796	0					
ANR	1931868	Identifier	pe32		1931796	0					
ANR	1931869	Identifier	th32ProcessID		1931796	1					
ANR	1931870	Identifier	pid		1931796	1					
ANR	1931871	CompoundStatement		30:35:675:675	1931796	1					
ANR	1931872	ExpressionStatement	result = TRUE	384:3:10340:10353	1931796	0	True				
ANR	1931873	AssignmentExpression	result = TRUE		1931796	0		=			
ANR	1931874	Identifier	result		1931796	0					
ANR	1931875	Identifier	TRUE		1931796	1					
ANR	1931876	BreakStatement	break ;	385:3:10358:10363	1931796	1	True				
ANR	1931877	Condition	"Process32Next ( hProcessSnap , & pe32 )"	387:10:10379:10414	1931796	1	True				
ANR	1931878	CallExpression	"Process32Next ( hProcessSnap , & pe32 )"		1931796	0					
ANR	1931879	Callee	Process32Next		1931796	0					
ANR	1931880	Identifier	Process32Next		1931796	0					
ANR	1931881	ArgumentList	hProcessSnap		1931796	1					
ANR	1931882	Argument	hProcessSnap		1931796	0					
ANR	1931883	Identifier	hProcessSnap		1931796	0					
ANR	1931884	Argument	& pe32		1931796	1					
ANR	1931885	UnaryOperationExpression	& pe32		1931796	0					
ANR	1931886	UnaryOperator	&		1931796	0					
ANR	1931887	Identifier	pe32		1931796	1					
ANR	1931888	ExpressionStatement	CloseHandle ( hProcessSnap )	390:2:10473:10500	1931796	8	True				
ANR	1931889	CallExpression	CloseHandle ( hProcessSnap )		1931796	0					
ANR	1931890	Callee	CloseHandle		1931796	0					
ANR	1931891	Identifier	CloseHandle		1931796	0					
ANR	1931892	ArgumentList	hProcessSnap		1931796	1					
ANR	1931893	Argument	hProcessSnap		1931796	0					
ANR	1931894	Identifier	hProcessSnap		1931796	0					
ANR	1931895	ReturnStatement	return result ;	392:2:10507:10520	1931796	9	True				
ANR	1931896	Identifier	result		1931796	0					
ANR	1931897	ReturnType	int		1931796	1					
ANR	1931898	Identifier	CSysinfo :: GetProcessEntry		1931796	2					
ANR	1931899	ParameterList	"pid_t pid , PROCESSENTRY32 & pe32"		1931796	3					
ANR	1931900	Parameter	pid_t pid	353:26:9601:9609	1931796	0	True				
ANR	1931901	ParameterType	pid_t		1931796	0					
ANR	1931902	Identifier	pid		1931796	1					
ANR	1931903	Parameter	PROCESSENTRY32 & pe32	353:37:9612:9631	1931796	1	True				
ANR	1931904	ParameterType	PROCESSENTRY32 &		1931796	0					
ANR	1931905	Identifier	pe32		1931796	1					
ANR	1931906	CFGEntryNode	ENTRY		1931796		True				
ANR	1931907	CFGExitNode	EXIT		1931796		True				
ANR	1931908	Symbol	pe32		1931796						
ANR	1931909	Symbol	CreateToolhelp32Snapshot		1931796						
ANR	1931910	Symbol	& pe32		1931796						
ANR	1931911	Symbol	pe32 . dwSize		1931796						
ANR	1931912	Symbol	TRUE		1931796						
ANR	1931913	Symbol	pid		1931796						
ANR	1931914	Symbol	INVALID_HANDLE_VALUE		1931796						
ANR	1931915	Symbol	result		1931796						
ANR	1931916	Symbol	pe32 . th32ProcessID		1931796						
ANR	1931917	Symbol	TH32CS_SNAPPROCESS		1931796						
ANR	1931918	Symbol	hProcessSnap		1931796						
ANR	1931919	Symbol	Process32First		1931796						
ANR	1931920	Symbol	FALSE		1931796						
ANR	1931921	Symbol	Process32Next		1931796						
ANR	1931922	Function	CSysinfo :: Explore	396:0:10531:10720							
ANR	1931923	FunctionDef	CSysinfo :: Explore (pid_t pid)		1931922	0					
ANR	1931924	CompoundStatement		397:0:10565:10720	1931922	0					
ANR	1931925	IdentifierDeclStatement	DWORD * block ;	398:1:10568:10580	1931922	0	True				
ANR	1931926	IdentifierDecl	* block		1931922	0					
ANR	1931927	IdentifierDeclType	DWORD *		1931922	0					
ANR	1931928	Identifier	block		1931922	1					
ANR	1931929	IdentifierDeclStatement	int i ;	399:1:10583:10588	1931922	1	True				
ANR	1931930	IdentifierDecl	i		1931922	0					
ANR	1931931	IdentifierDeclType	int		1931922	0					
ANR	1931932	Identifier	i		1931922	1					
ANR	1931933	ExpressionStatement	Refresh ( )	401:1:10592:10601	1931922	2	True				
ANR	1931934	CallExpression	Refresh ( )		1931922	0					
ANR	1931935	Callee	Refresh		1931922	0					
ANR	1931936	Identifier	Refresh		1931922	0					
ANR	1931937	ArgumentList			1931922	1					
ANR	1931938	ExpressionStatement	block = FindBlock ( pid )	402:1:10604:10627	1931922	3	True				
ANR	1931939	AssignmentExpression	block = FindBlock ( pid )		1931922	0		=			
ANR	1931940	Identifier	block		1931922	0					
ANR	1931941	CallExpression	FindBlock ( pid )		1931922	1					
ANR	1931942	Callee	FindBlock		1931922	0					
ANR	1931943	Identifier	FindBlock		1931922	0					
ANR	1931944	ArgumentList	pid		1931922	1					
ANR	1931945	Argument	pid		1931922	0					
ANR	1931946	Identifier	pid		1931922	0					
ANR	1931947	IfStatement	if ( ! block )		1931922	4					
ANR	1931948	Condition	! block	403:5:10634:10639	1931922	0	True				
ANR	1931949	UnaryOperationExpression	! block		1931922	0					
ANR	1931950	UnaryOperator	!		1931922	0					
ANR	1931951	Identifier	block		1931922	1					
ANR	1931952	ReturnStatement	return ;	404:2:10644:10650	1931922	1	True				
ANR	1931953	ForStatement	for ( i = 0 ; i < 43 ; i ++ )		1931922	5					
ANR	1931954	ForInit	i = 0 ;	406:6:10659:10662	1931922	0	True				
ANR	1931955	AssignmentExpression	i = 0		1931922	0		=			
ANR	1931956	Identifier	i		1931922	0					
ANR	1931957	PrimaryExpression	0		1931922	1					
ANR	1931958	Condition	i < 43	406:10:10663:10666	1931922	1	True				
ANR	1931959	RelationalExpression	i < 43		1931922	0		<			
ANR	1931960	Identifier	i		1931922	0					
ANR	1931961	PrimaryExpression	43		1931922	1					
ANR	1931962	PostIncDecOperationExpression	i ++	406:15:10668:10670	1931922	2	True				
ANR	1931963	Identifier	i		1931922	0					
ANR	1931964	IncDec	++		1931922	1					
ANR	1931965	CompoundStatement		10:20:107:107	1931922	3					
ANR	1931966	ExpressionStatement	"printf ( ""Offset %d - %d \\n"" , i , block [ i ] )"	407:2:10677:10715	1931922	0	True				
ANR	1931967	CallExpression	"printf ( ""Offset %d - %d \\n"" , i , block [ i ] )"		1931922	0					
ANR	1931968	Callee	printf		1931922	0					
ANR	1931969	Identifier	printf		1931922	0					
ANR	1931970	ArgumentList	"""Offset %d - %d \\n"""		1931922	1					
ANR	1931971	Argument	"""Offset %d - %d \\n"""		1931922	0					
ANR	1931972	PrimaryExpression	"""Offset %d - %d \\n"""		1931922	0					
ANR	1931973	Argument	i		1931922	1					
ANR	1931974	Identifier	i		1931922	0					
ANR	1931975	Argument	block [ i ]		1931922	2					
ANR	1931976	ArrayIndexing	block [ i ]		1931922	0					
ANR	1931977	Identifier	block		1931922	0					
ANR	1931978	Identifier	i		1931922	1					
ANR	1931979	ReturnType	void		1931922	1					
ANR	1931980	Identifier	CSysinfo :: Explore		1931922	2					
ANR	1931981	ParameterList	pid_t pid		1931922	3					
ANR	1931982	Parameter	pid_t pid	396:23:10554:10562	1931922	0	True				
ANR	1931983	ParameterType	pid_t		1931922	0					
ANR	1931984	Identifier	pid		1931922	1					
ANR	1931985	CFGEntryNode	ENTRY		1931922		True				
ANR	1931986	CFGExitNode	EXIT		1931922		True				
ANR	1931987	Symbol	* i		1931922						
ANR	1931988	Symbol	i		1931922						
ANR	1931989	Symbol	pid		1931922						
ANR	1931990	Symbol	block		1931922						
ANR	1931991	Symbol	FindBlock		1931922						
ANR	1931992	Symbol	* block		1931922						
ANR	1931993	Function	CSysinfo :: GetTIDs	416:0:10837:12280							
ANR	1931994	FunctionDef	"CSysinfo :: GetTIDs (pid_t pid , ExtArray < DWORD > & tids)"		1931993	0					
ANR	1931995	CompoundStatement		417:0:10895:12280	1931993	0					
ANR	1931996	IdentifierDeclStatement	DWORD s = 0 ;	418:1:10898:10909	1931993	0	True				
ANR	1931997	IdentifierDecl	s = 0		1931993	0					
ANR	1931998	IdentifierDeclType	DWORD		1931993	0					
ANR	1931999	Identifier	s		1931993	1					
ANR	1932000	AssignmentExpression	s = 0		1931993	2		=			
ANR	1932001	Identifier	s		1931993	0					
ANR	1932002	PrimaryExpression	0		1931993	1					
ANR	1932003	IfStatement	if ( ! IsWin2k )		1931993	1					
ANR	1932004	Condition	! IsWin2k	420:6:10918:10925	1931993	0	True				
ANR	1932005	UnaryOperationExpression	! IsWin2k		1931993	0					
ANR	1932006	UnaryOperator	!		1931993	0					
ANR	1932007	Identifier	IsWin2k		1931993	1					
ANR	1932008	CompoundStatement		6:2:109:121	1931993	1					
ANR	1932009	IdentifierDeclStatement	DWORD * block ;	422:2:11005:11017	1931993	0	True				
ANR	1932010	IdentifierDecl	* block		1931993	0					
ANR	1932011	IdentifierDeclType	DWORD *		1931993	0					
ANR	1932012	Identifier	block		1931993	1					
ANR	1932013	ExpressionStatement	Refresh ( )	423:2:11021:11030	1931993	1	True				
ANR	1932014	CallExpression	Refresh ( )		1931993	0					
ANR	1932015	Callee	Refresh		1931993	0					
ANR	1932016	Identifier	Refresh		1931993	0					
ANR	1932017	ArgumentList			1931993	1					
ANR	1932018	ExpressionStatement	block = FindBlock ( pid )	424:2:11034:11057	1931993	2	True				
ANR	1932019	AssignmentExpression	block = FindBlock ( pid )		1931993	0		=			
ANR	1932020	Identifier	block		1931993	0					
ANR	1932021	CallExpression	FindBlock ( pid )		1931993	1					
ANR	1932022	Callee	FindBlock		1931993	0					
ANR	1932023	Identifier	FindBlock		1931993	0					
ANR	1932024	ArgumentList	pid		1931993	1					
ANR	1932025	Argument	pid		1931993	0					
ANR	1932026	Identifier	pid		1931993	0					
ANR	1932027	IfStatement	if ( ! block )		1931993	3					
ANR	1932028	Condition	! block	425:6:11065:11070	1931993	0	True				
ANR	1932029	UnaryOperationExpression	! block		1931993	0					
ANR	1932030	UnaryOperator	!		1931993	0					
ANR	1932031	Identifier	block		1931993	1					
ANR	1932032	ReturnStatement	return 0 ;	426:3:11076:11084	1931993	1	True				
ANR	1932033	PrimaryExpression	0		1931993	0					
ANR	1932034	ForStatement	for ( s = 0 ; s < * ( block + 1 ) ; s ++ )		1931993	4					
ANR	1932035	ForInit	s = 0 ;	427:7:11093:11096	1931993	0	True				
ANR	1932036	AssignmentExpression	s = 0		1931993	0		=			
ANR	1932037	Identifier	s		1931993	0					
ANR	1932038	PrimaryExpression	0		1931993	1					
ANR	1932039	Condition	s < * ( block + 1 )	427:12:11098:11111	1931993	1	True				
ANR	1932040	RelationalExpression	s < * ( block + 1 )		1931993	0		<			
ANR	1932041	Identifier	s		1931993	0					
ANR	1932042	UnaryOperationExpression	* ( block + 1 )		1931993	1					
ANR	1932043	UnaryOperator	*		1931993	0					
ANR	1932044	AdditiveExpression	block + 1		1931993	1		+			
ANR	1932045	Identifier	block		1931993	0					
ANR	1932046	PrimaryExpression	1		1931993	1					
ANR	1932047	PostIncDecOperationExpression	s ++	427:28:11114:11116	1931993	2	True				
ANR	1932048	Identifier	s		1931993	0					
ANR	1932049	IncDec	++		1931993	1					
ANR	1932050	CompoundStatement		12:2:225:225	1931993	3					
ANR	1932051	ExpressionStatement	tids [ s ] = * ( block + 43 + s * 16 )	429:3:11126:11152	1931993	0	True				
ANR	1932052	AssignmentExpression	tids [ s ] = * ( block + 43 + s * 16 )		1931993	0		=			
ANR	1932053	ArrayIndexing	tids [ s ]		1931993	0					
ANR	1932054	Identifier	tids		1931993	0					
ANR	1932055	Identifier	s		1931993	1					
ANR	1932056	UnaryOperationExpression	* ( block + 43 + s * 16 )		1931993	1					
ANR	1932057	UnaryOperator	*		1931993	0					
ANR	1932058	AdditiveExpression	block + 43 + s * 16		1931993	1		+			
ANR	1932059	Identifier	block		1931993	0					
ANR	1932060	AdditiveExpression	43 + s * 16		1931993	1		+			
ANR	1932061	PrimaryExpression	43		1931993	0					
ANR	1932062	MultiplicativeExpression	s * 16		1931993	1		*			
ANR	1932063	Identifier	s		1931993	0					
ANR	1932064	PrimaryExpression	16		1931993	1					
ANR	1932065	ReturnStatement	return ( int ) s ;	432:2:11222:11235	1931993	5	True				
ANR	1932066	CastExpression	( int ) s		1931993	0					
ANR	1932067	CastTarget	int		1931993	0					
ANR	1932068	Identifier	s		1931993	1					
ANR	1932069	IdentifierDeclStatement	HANDLE hThreadSnap = NULL ;	437:1:11317:11349	1931993	2	True				
ANR	1932070	IdentifierDecl	hThreadSnap = NULL		1931993	0					
ANR	1932071	IdentifierDeclType	HANDLE		1931993	0					
ANR	1932072	Identifier	hThreadSnap		1931993	1					
ANR	1932073	AssignmentExpression	hThreadSnap = NULL		1931993	2		=			
ANR	1932074	Identifier	NULL		1931993	0					
ANR	1932075	Identifier	NULL		1931993	1					
ANR	1932076	IdentifierDeclStatement	THREADENTRY32 te32 = { 0 } ;	438:4:11356:11387	1931993	3	True				
ANR	1932077	IdentifierDecl	te32 = { 0 }		1931993	0					
ANR	1932078	IdentifierDeclType	THREADENTRY32		1931993	0					
ANR	1932079	Identifier	te32		1931993	1					
ANR	1932080	AssignmentExpression	te32 = { 0 }		1931993	2		=			
ANR	1932081	Identifier	te32		1931993	0					
ANR	1932082	InitializerList	0		1931993	1					
ANR	1932083	PrimaryExpression	0		1931993	0					
ANR	1932084	ExpressionStatement	"hThreadSnap = CreateToolhelp32Snapshot ( TH32CS_SNAPTHREAD , 0 )"	442:4:11461:11521	1931993	4	True				
ANR	1932085	AssignmentExpression	"hThreadSnap = CreateToolhelp32Snapshot ( TH32CS_SNAPTHREAD , 0 )"		1931993	0		=			
ANR	1932086	Identifier	hThreadSnap		1931993	0					
ANR	1932087	CallExpression	"CreateToolhelp32Snapshot ( TH32CS_SNAPTHREAD , 0 )"		1931993	1					
ANR	1932088	Callee	CreateToolhelp32Snapshot		1931993	0					
ANR	1932089	Identifier	CreateToolhelp32Snapshot		1931993	0					
ANR	1932090	ArgumentList	TH32CS_SNAPTHREAD		1931993	1					
ANR	1932091	Argument	TH32CS_SNAPTHREAD		1931993	0					
ANR	1932092	Identifier	TH32CS_SNAPTHREAD		1931993	0					
ANR	1932093	Argument	0		1931993	1					
ANR	1932094	PrimaryExpression	0		1931993	0					
ANR	1932095	IfStatement	if ( hThreadSnap == ( HANDLE ) - 1 )		1931993	5					
ANR	1932096	Condition	hThreadSnap == ( HANDLE ) - 1	443:8:11532:11556	1931993	0	True				
ANR	1932097	EqualityExpression	hThreadSnap == ( HANDLE ) - 1		1931993	0		==			
ANR	1932098	Identifier	hThreadSnap		1931993	0					
ANR	1932099	CastExpression	( HANDLE ) - 1		1931993	1					
ANR	1932100	CastTarget	HANDLE		1931993	0					
ANR	1932101	UnaryOperationExpression	- 1		1931993	1					
ANR	1932102	UnaryOperator	-		1931993	0					
ANR	1932103	PrimaryExpression	1		1931993	1					
ANR	1932104	CompoundStatement		28:1:665:665	1931993	1					
ANR	1932105	ReturnStatement	return 0 ;	446:8:11635:11643	1931993	0	True				
ANR	1932106	PrimaryExpression	0		1931993	0					
ANR	1932107	ExpressionStatement	te32 . dwSize = sizeof ( THREADENTRY32 )	451:4:11714:11749	1931993	6	True				
ANR	1932108	AssignmentExpression	te32 . dwSize = sizeof ( THREADENTRY32 )		1931993	0		=			
ANR	1932109	MemberAccess	te32 . dwSize		1931993	0					
ANR	1932110	Identifier	te32		1931993	0					
ANR	1932111	Identifier	dwSize		1931993	1					
ANR	1932112	SizeofExpression	sizeof ( THREADENTRY32 )		1931993	1					
ANR	1932113	Sizeof	sizeof		1931993	0					
ANR	1932114	SizeofOperand	THREADENTRY32		1931993	1					
ANR	1932115	IfStatement	"if ( Thread32First ( hThreadSnap , & te32 ) )"		1931993	7					
ANR	1932116	Condition	"Thread32First ( hThreadSnap , & te32 )"	456:8:11917:11949	1931993	0	True				
ANR	1932117	CallExpression	"Thread32First ( hThreadSnap , & te32 )"		1931993	0					
ANR	1932118	Callee	Thread32First		1931993	0					
ANR	1932119	Identifier	Thread32First		1931993	0					
ANR	1932120	ArgumentList	hThreadSnap		1931993	1					
ANR	1932121	Argument	hThreadSnap		1931993	0					
ANR	1932122	Identifier	hThreadSnap		1931993	0					
ANR	1932123	Argument	& te32		1931993	1					
ANR	1932124	UnaryOperationExpression	& te32		1931993	0					
ANR	1932125	UnaryOperator	&		1931993	0					
ANR	1932126	Identifier	te32		1931993	1					
ANR	1932127	CompoundStatement		41:4:1061:1061	1931993	1					
ANR	1932128	DoStatement	do		1931993	0					
ANR	1932129	CompoundStatement		43:8:1084:1084	1931993	0					
ANR	1932130	IfStatement	if ( te32 . th32OwnerProcessID == pid )		1931993	0					
ANR	1932131	Condition	te32 . th32OwnerProcessID == pid	460:16:11999:12028	1931993	0	True				
ANR	1932132	EqualityExpression	te32 . th32OwnerProcessID == pid		1931993	0		==			
ANR	1932133	MemberAccess	te32 . th32OwnerProcessID		1931993	0					
ANR	1932134	Identifier	te32		1931993	0					
ANR	1932135	Identifier	th32OwnerProcessID		1931993	1					
ANR	1932136	Identifier	pid		1931993	1					
ANR	1932137	CompoundStatement		45:12:1148:1148	1931993	1					
ANR	1932138	ExpressionStatement	tids [ s ] = te32 . th32ThreadID	462:4:12051:12078	1931993	0	True				
ANR	1932139	AssignmentExpression	tids [ s ] = te32 . th32ThreadID		1931993	0		=			
ANR	1932140	ArrayIndexing	tids [ s ]		1931993	0					
ANR	1932141	Identifier	tids		1931993	0					
ANR	1932142	Identifier	s		1931993	1					
ANR	1932143	MemberAccess	te32 . th32ThreadID		1931993	1					
ANR	1932144	Identifier	te32		1931993	0					
ANR	1932145	Identifier	th32ThreadID		1931993	1					
ANR	1932146	ExpressionStatement	s ++	463:4:12085:12088	1931993	1	True				
ANR	1932147	PostIncDecOperationExpression	s ++		1931993	0					
ANR	1932148	Identifier	s		1931993	0					
ANR	1932149	IncDec	++		1931993	1					
ANR	1932150	Condition	"Thread32Next ( hThreadSnap , & te32 )"	466:15:12131:12162	1931993	1	True				
ANR	1932151	CallExpression	"Thread32Next ( hThreadSnap , & te32 )"		1931993	0					
ANR	1932152	Callee	Thread32Next		1931993	0					
ANR	1932153	Identifier	Thread32Next		1931993	0					
ANR	1932154	ArgumentList	hThreadSnap		1931993	1					
ANR	1932155	Argument	hThreadSnap		1931993	0					
ANR	1932156	Identifier	hThreadSnap		1931993	0					
ANR	1932157	Argument	& te32		1931993	1					
ANR	1932158	UnaryOperationExpression	& te32		1931993	0					
ANR	1932159	UnaryOperator	&		1931993	0					
ANR	1932160	Identifier	te32		1931993	1					
ANR	1932161	ExpressionStatement	CloseHandle ( hThreadSnap )	470:1:12232:12257	1931993	8	True				
ANR	1932162	CallExpression	CloseHandle ( hThreadSnap )		1931993	0					
ANR	1932163	Callee	CloseHandle		1931993	0					
ANR	1932164	Identifier	CloseHandle		1931993	0					
ANR	1932165	ArgumentList	hThreadSnap		1931993	1					
ANR	1932166	Argument	hThreadSnap		1931993	0					
ANR	1932167	Identifier	hThreadSnap		1931993	0					
ANR	1932168	ReturnStatement	return ( int ) s ;	472:1:12263:12276	1931993	9	True				
ANR	1932169	CastExpression	( int ) s		1931993	0					
ANR	1932170	CastTarget	int		1931993	0					
ANR	1932171	Identifier	s		1931993	1					
ANR	1932172	ReturnType	int		1931993	1					
ANR	1932173	Identifier	CSysinfo :: GetTIDs		1931993	2					
ANR	1932174	ParameterList	"pid_t pid , ExtArray < DWORD > & tids"		1931993	3					
ANR	1932175	Parameter	pid_t pid	416:23:10860:10868	1931993	0	True				
ANR	1932176	ParameterType	pid_t		1931993	0					
ANR	1932177	Identifier	pid		1931993	1					
ANR	1932178	Parameter	ExtArray < DWORD > & tids	416:34:10871:10892	1931993	1	True				
ANR	1932179	ParameterType	ExtArray < DWORD > &		1931993	0					
ANR	1932180	Identifier	tids		1931993	1					
ANR	1932181	CFGEntryNode	ENTRY		1931993		True				
ANR	1932182	CFGExitNode	EXIT		1931993		True				
ANR	1932183	Symbol	CreateToolhelp32Snapshot		1931993						
ANR	1932184	Symbol	NULL		1931993						
ANR	1932185	Symbol	hThreadSnap		1931993						
ANR	1932186	Symbol	* ( block + 43 + s * 16 )		1931993						
ANR	1932187	Symbol	te32		1931993						
ANR	1932188	Symbol	Thread32Next		1931993						
ANR	1932189	Symbol	pid		1931993						
ANR	1932190	Symbol	FindBlock		1931993						
ANR	1932191	Symbol	te32 . th32ThreadID		1931993						
ANR	1932192	Symbol	* block		1931993						
ANR	1932193	Symbol	tids		1931993						
ANR	1932194	Symbol	s		1931993						
ANR	1932195	Symbol	IsWin2k		1931993						
ANR	1932196	Symbol	* ( block + 1 )		1931993						
ANR	1932197	Symbol	te32 . dwSize		1931993						
ANR	1932198	Symbol	TH32CS_SNAPTHREAD		1931993						
ANR	1932199	Symbol	te32 . th32OwnerProcessID		1931993						
ANR	1932200	Symbol	block		1931993						
ANR	1932201	Symbol	& te32		1931993						
ANR	1932202	Symbol	* s		1931993						
ANR	1932203	Symbol	Thread32First		1931993						
ANR	1932204	Symbol	* tids		1931993						
ANR	1932205	Function	CSysinfo :: FindThreadProcess	475:0:12283:12632							
ANR	1932206	FunctionDef	CSysinfo :: FindThreadProcess (DWORD find_tid)		1932205	0					
ANR	1932207	CompoundStatement		476:0:12334:12632	1932205	0					
ANR	1932208	IdentifierDeclStatement	ExtArray < pid_t > pids ( 256 ) ;	477:1:12337:12362	1932205	0	True				
ANR	1932209	IdentifierDecl	pids ( 256 )		1932205	0					
ANR	1932210	IdentifierDeclType	ExtArray < pid_t >		1932205	0					
ANR	1932211	Identifier	pids		1932205	1					
ANR	1932212	PrimaryExpression	256		1932205	2					
ANR	1932213	IdentifierDeclStatement	ExtArray < DWORD > tids ;	478:1:12365:12385	1932205	1	True				
ANR	1932214	IdentifierDecl	tids		1932205	0					
ANR	1932215	IdentifierDeclType	ExtArray < DWORD >		1932205	0					
ANR	1932216	Identifier	tids		1932205	1					
ANR	1932217	IdentifierDeclStatement	int num_pids ;	479:1:12388:12400	1932205	2	True				
ANR	1932218	IdentifierDecl	num_pids		1932205	0					
ANR	1932219	IdentifierDeclType	int		1932205	0					
ANR	1932220	Identifier	num_pids		1932205	1					
ANR	1932221	IdentifierDeclStatement	int num_tids ;	480:1:12403:12415	1932205	3	True				
ANR	1932222	IdentifierDecl	num_tids		1932205	0					
ANR	1932223	IdentifierDeclType	int		1932205	0					
ANR	1932224	Identifier	num_tids		1932205	1					
ANR	1932225	ExpressionStatement	num_pids = GetPIDs ( pids )	482:1:12420:12445	1932205	4	True				
ANR	1932226	AssignmentExpression	num_pids = GetPIDs ( pids )		1932205	0		=			
ANR	1932227	Identifier	num_pids		1932205	0					
ANR	1932228	CallExpression	GetPIDs ( pids )		1932205	1					
ANR	1932229	Callee	GetPIDs		1932205	0					
ANR	1932230	Identifier	GetPIDs		1932205	0					
ANR	1932231	ArgumentList	pids		1932205	1					
ANR	1932232	Argument	pids		1932205	0					
ANR	1932233	Identifier	pids		1932205	0					
ANR	1932234	ForStatement	for ( int s = 0 ; s < num_pids ; s ++ )		1932205	5					
ANR	1932235	ForInit	int s = 0 ;	483:6:12453:12460	1932205	0	True				
ANR	1932236	IdentifierDeclStatement	int s = 0 ;		1932205	0					
ANR	1932237	IdentifierDecl	s = 0		1932205	0					
ANR	1932238	IdentifierDeclType	int		1932205	0					
ANR	1932239	Identifier	s		1932205	1					
ANR	1932240	AssignmentExpression	s = 0		1932205	2		=			
ANR	1932241	Identifier	s		1932205	0					
ANR	1932242	PrimaryExpression	0		1932205	1					
ANR	1932243	Condition	s < num_pids	483:15:12462:12471	1932205	1	True				
ANR	1932244	RelationalExpression	s < num_pids		1932205	0		<			
ANR	1932245	Identifier	s		1932205	0					
ANR	1932246	Identifier	num_pids		1932205	1					
ANR	1932247	PostIncDecOperationExpression	s ++	483:27:12474:12476	1932205	2	True				
ANR	1932248	Identifier	s		1932205	0					
ANR	1932249	IncDec	++		1932205	1					
ANR	1932250	CompoundStatement		9:1:145:145	1932205	3					
ANR	1932251	ExpressionStatement	"num_tids = GetTIDs ( pids [ s ] , tids )"	485:2:12484:12518	1932205	0	True				
ANR	1932252	AssignmentExpression	"num_tids = GetTIDs ( pids [ s ] , tids )"		1932205	0		=			
ANR	1932253	Identifier	num_tids		1932205	0					
ANR	1932254	CallExpression	"GetTIDs ( pids [ s ] , tids )"		1932205	1					
ANR	1932255	Callee	GetTIDs		1932205	0					
ANR	1932256	Identifier	GetTIDs		1932205	0					
ANR	1932257	ArgumentList	pids [ s ]		1932205	1					
ANR	1932258	Argument	pids [ s ]		1932205	0					
ANR	1932259	ArrayIndexing	pids [ s ]		1932205	0					
ANR	1932260	Identifier	pids		1932205	0					
ANR	1932261	Identifier	s		1932205	1					
ANR	1932262	Argument	tids		1932205	1					
ANR	1932263	Identifier	tids		1932205	0					
ANR	1932264	ForStatement	for ( int l = 0 ; l < num_tids ; l ++ )		1932205	1					
ANR	1932265	ForInit	int l = 0 ;	486:7:12527:12534	1932205	0	True				
ANR	1932266	IdentifierDeclStatement	int l = 0 ;		1932205	0					
ANR	1932267	IdentifierDecl	l = 0		1932205	0					
ANR	1932268	IdentifierDeclType	int		1932205	0					
ANR	1932269	Identifier	l		1932205	1					
ANR	1932270	AssignmentExpression	l = 0		1932205	2		=			
ANR	1932271	Identifier	l		1932205	0					
ANR	1932272	PrimaryExpression	0		1932205	1					
ANR	1932273	Condition	l < num_tids	486:16:12536:12545	1932205	1	True				
ANR	1932274	RelationalExpression	l < num_tids		1932205	0		<			
ANR	1932275	Identifier	l		1932205	0					
ANR	1932276	Identifier	num_tids		1932205	1					
ANR	1932277	PostIncDecOperationExpression	l ++	486:28:12548:12550	1932205	2	True				
ANR	1932278	Identifier	l		1932205	0					
ANR	1932279	IncDec	++		1932205	1					
ANR	1932280	CompoundStatement		12:2:220:220	1932205	3					
ANR	1932281	IfStatement	if ( find_tid == tids [ l ] )		1932205	0					
ANR	1932282	Condition	find_tid == tids [ l ]	488:7:12564:12582	1932205	0	True				
ANR	1932283	EqualityExpression	find_tid == tids [ l ]		1932205	0		==			
ANR	1932284	Identifier	find_tid		1932205	0					
ANR	1932285	ArrayIndexing	tids [ l ]		1932205	1					
ANR	1932286	Identifier	tids		1932205	0					
ANR	1932287	Identifier	l		1932205	1					
ANR	1932288	ReturnStatement	return pids [ s ] ;	489:4:12589:12603	1932205	1	True				
ANR	1932289	ArrayIndexing	pids [ s ]		1932205	0					
ANR	1932290	Identifier	pids		1932205	0					
ANR	1932291	Identifier	s		1932205	1					
ANR	1932292	ReturnStatement	return 0xffffffff ;	492:1:12613:12630	1932205	6	True				
ANR	1932293	PrimaryExpression	0xffffffff		1932205	0					
ANR	1932294	ReturnType	pid_t		1932205	1					
ANR	1932295	Identifier	CSysinfo :: FindThreadProcess		1932205	2					
ANR	1932296	ParameterList	DWORD find_tid		1932205	3					
ANR	1932297	Parameter	DWORD find_tid	475:35:12318:12331	1932205	0	True				
ANR	1932298	ParameterType	DWORD		1932205	0					
ANR	1932299	Identifier	find_tid		1932205	1					
ANR	1932300	CFGEntryNode	ENTRY		1932205		True				
ANR	1932301	CFGExitNode	EXIT		1932205		True				
ANR	1932302	Symbol	find_tid		1932205						
ANR	1932303	Symbol	GetPIDs		1932205						
ANR	1932304	Symbol	GetTIDs		1932205						
ANR	1932305	Symbol	num_pids		1932205						
ANR	1932306	Symbol	l		1932205						
ANR	1932307	Symbol	tids		1932205						
ANR	1932308	Symbol	s		1932205						
ANR	1932309	Symbol	num_tids		1932205						
ANR	1932310	Symbol	* l		1932205						
ANR	1932311	Symbol	pids		1932205						
ANR	1932312	Symbol	* pids		1932205						
ANR	1932313	Symbol	* s		1932205						
ANR	1932314	Symbol	* tids		1932205						
ANR	1932315	Function	CSysinfo :: OpenThread	495:0:12635:12916							
ANR	1932316	FunctionDef	"CSysinfo :: OpenThread (DWORD tid , DWORD accessflag)"		1932315	0					
ANR	1932317	CompoundStatement		496:0:12693:12916	1932315	0					
ANR	1932318	IdentifierDeclStatement	HANDLE hThread = NULL ;	497:1:12696:12717	1932315	0	True				
ANR	1932319	IdentifierDecl	hThread = NULL		1932315	0					
ANR	1932320	IdentifierDeclType	HANDLE		1932315	0					
ANR	1932321	Identifier	hThread		1932315	1					
ANR	1932322	AssignmentExpression	hThread = NULL		1932315	2		=			
ANR	1932323	Identifier	NULL		1932315	0					
ANR	1932324	Identifier	NULL		1932315	1					
ANR	1932325	IdentifierDeclStatement	"DWORD struct1 [ ] = { 0x18 , 0 , 0 , 0 , 0 , 0 } ;"	498:1:12720:12759	1932315	1	True				
ANR	1932326	IdentifierDecl	"struct1 [ ] = { 0x18 , 0 , 0 , 0 , 0 , 0 }"		1932315	0					
ANR	1932327	IdentifierDeclType	DWORD [ ]		1932315	0					
ANR	1932328	Identifier	struct1		1932315	1					
ANR	1932329	AssignmentExpression	"struct1 [ ] = { 0x18 , 0 , 0 , 0 , 0 , 0 }"		1932315	2		=			
ANR	1932330	Identifier	struct1		1932315	0					
ANR	1932331	InitializerList	0x18		1932315	1					
ANR	1932332	PrimaryExpression	0x18		1932315	0					
ANR	1932333	PrimaryExpression	0		1932315	1					
ANR	1932334	PrimaryExpression	0		1932315	2					
ANR	1932335	PrimaryExpression	0		1932315	3					
ANR	1932336	PrimaryExpression	0		1932315	4					
ANR	1932337	PrimaryExpression	0		1932315	5					
ANR	1932338	IdentifierDeclStatement	"DWORD struct2 [ ] = { 0 , tid } ;"	499:1:12782:12807	1932315	2	True				
ANR	1932339	IdentifierDecl	"struct2 [ ] = { 0 , tid }"		1932315	0					
ANR	1932340	IdentifierDeclType	DWORD [ ]		1932315	0					
ANR	1932341	Identifier	struct2		1932315	1					
ANR	1932342	AssignmentExpression	"struct2 [ ] = { 0 , tid }"		1932315	2		=			
ANR	1932343	Identifier	struct2		1932315	0					
ANR	1932344	InitializerList	0		1932315	1					
ANR	1932345	PrimaryExpression	0		1932315	0					
ANR	1932346	Identifier	tid		1932315	1					
ANR	1932347	ExpressionStatement	"NtOpenThread ( & hThread , accessflag , struct1 , struct2 )"	500:1:12822:12896	1932315	3	True				
ANR	1932348	CallExpression	"NtOpenThread ( & hThread , accessflag , struct1 , struct2 )"		1932315	0					
ANR	1932349	Callee	NtOpenThread		1932315	0					
ANR	1932350	Identifier	NtOpenThread		1932315	0					
ANR	1932351	ArgumentList	& hThread		1932315	1					
ANR	1932352	Argument	& hThread		1932315	0					
ANR	1932353	UnaryOperationExpression	& hThread		1932315	0					
ANR	1932354	UnaryOperator	&		1932315	0					
ANR	1932355	Identifier	hThread		1932315	1					
ANR	1932356	Argument	accessflag		1932315	1					
ANR	1932357	Identifier	accessflag		1932315	0					
ANR	1932358	Argument	struct1		1932315	2					
ANR	1932359	Identifier	struct1		1932315	0					
ANR	1932360	Argument	struct2		1932315	3					
ANR	1932361	Identifier	struct2		1932315	0					
ANR	1932362	ReturnStatement	return hThread ;	505:1:12900:12914	1932315	4	True				
ANR	1932363	Identifier	hThread		1932315	0					
ANR	1932364	ReturnType	HANDLE		1932315	1					
ANR	1932365	Identifier	CSysinfo :: OpenThread		1932315	2					
ANR	1932366	ParameterList	"DWORD tid , DWORD accessflag"		1932315	3					
ANR	1932367	Parameter	DWORD tid	495:29:12664:12672	1932315	0	True				
ANR	1932368	ParameterType	DWORD		1932315	0					
ANR	1932369	Identifier	tid		1932315	1					
ANR	1932370	Parameter	DWORD accessflag	495:40:12675:12690	1932315	1	True				
ANR	1932371	ParameterType	DWORD		1932315	0					
ANR	1932372	Identifier	accessflag		1932315	1					
ANR	1932373	CFGEntryNode	ENTRY		1932315		True				
ANR	1932374	CFGExitNode	EXIT		1932315		True				
ANR	1932375	Symbol	NULL		1932315						
ANR	1932376	Symbol	& hThread		1932315						
ANR	1932377	Symbol	accessflag		1932315						
ANR	1932378	Symbol	struct2		1932315						
ANR	1932379	Symbol	struct1		1932315						
ANR	1932380	Symbol	hThread		1932315						
ANR	1932381	Symbol	tid		1932315						
ANR	1932382	Function	CSysinfo :: CloseThread	508:0:12919:12985							
ANR	1932383	FunctionDef	CSysinfo :: CloseThread (HANDLE hthread)		1932382	0					
ANR	1932384	CompoundStatement		509:0:12963:12985	1932382	0					
ANR	1932385	ExpressionStatement	NtClose ( hthread )	510:1:12966:12983	1932382	0	True				
ANR	1932386	CallExpression	NtClose ( hthread )		1932382	0					
ANR	1932387	Callee	NtClose		1932382	0					
ANR	1932388	Identifier	NtClose		1932382	0					
ANR	1932389	ArgumentList	hthread		1932382	1					
ANR	1932390	Argument	hthread		1932382	0					
ANR	1932391	Identifier	hthread		1932382	0					
ANR	1932392	ReturnType	void		1932382	1					
ANR	1932393	Identifier	CSysinfo :: CloseThread		1932382	2					
ANR	1932394	ParameterList	HANDLE hthread		1932382	3					
ANR	1932395	Parameter	HANDLE hthread	508:28:12947:12960	1932382	0	True				
ANR	1932396	ParameterType	HANDLE		1932382	0					
ANR	1932397	Identifier	hthread		1932382	1					
ANR	1932398	CFGEntryNode	ENTRY		1932382		True				
ANR	1932399	CFGExitNode	EXIT		1932382		True				
ANR	1932400	Symbol	hthread		1932382						
ANR	1932401	Function	CSysinfo :: NextBlock	516:0:13057:14400							
ANR	1932402	FunctionDef	CSysinfo :: NextBlock (DWORD * oldblock)		1932401	0					
ANR	1932403	CompoundStatement		517:0:13102:14400	1932401	0					
ANR	1932404	IdentifierDeclStatement	DWORD offset = * oldblock ;	518:1:13105:13129	1932401	0	True				
ANR	1932405	IdentifierDecl	offset = * oldblock		1932401	0					
ANR	1932406	IdentifierDeclType	DWORD		1932401	0					
ANR	1932407	Identifier	offset		1932401	1					
ANR	1932408	AssignmentExpression	offset = * oldblock		1932401	2		=			
ANR	1932409	Identifier	offset		1932401	0					
ANR	1932410	UnaryOperationExpression	* oldblock		1932401	1					
ANR	1932411	UnaryOperator	*		1932401	0					
ANR	1932412	Identifier	oldblock		1932401	1					
ANR	1932413	IdentifierDeclStatement	DWORD * p_nextblock ;	519:1:13132:13150	1932401	1	True				
ANR	1932414	IdentifierDecl	* p_nextblock		1932401	0					
ANR	1932415	IdentifierDeclType	DWORD *		1932401	0					
ANR	1932416	Identifier	p_nextblock		1932401	1					
ANR	1932417	IdentifierDeclStatement	DWORD next_offset ;	520:1:13153:13170	1932401	2	True				
ANR	1932418	IdentifierDecl	next_offset		1932401	0					
ANR	1932419	IdentifierDeclType	DWORD		1932401	0					
ANR	1932420	Identifier	next_offset		1932401	1					
ANR	1932421	IdentifierDeclStatement	bool need_resize = false ;	521:1:13173:13197	1932401	3	True				
ANR	1932422	IdentifierDecl	need_resize = false		1932401	0					
ANR	1932423	IdentifierDeclType	bool		1932401	0					
ANR	1932424	Identifier	need_resize		1932401	1					
ANR	1932425	AssignmentExpression	need_resize = false		1932401	2		=			
ANR	1932426	Identifier	false		1932401	0					
ANR	1932427	Identifier	false		1932401	1					
ANR	1932428	IdentifierDeclStatement	DWORD offset_into_buf ;	522:1:13200:13221	1932401	4	True				
ANR	1932429	IdentifierDecl	offset_into_buf		1932401	0					
ANR	1932430	IdentifierDeclType	DWORD		1932401	0					
ANR	1932431	Identifier	offset_into_buf		1932401	1					
ANR	1932432	Statement	static	523:1:13224:13229	1932401	5	True				
ANR	1932433	IdentifierDeclStatement	DWORD largest_offset = 3000 ;	523:8:13231:13258	1932401	6	True				
ANR	1932434	IdentifierDecl	largest_offset = 3000		1932401	0					
ANR	1932435	IdentifierDeclType	DWORD		1932401	0					
ANR	1932436	Identifier	largest_offset		1932401	1					
ANR	1932437	AssignmentExpression	largest_offset = 3000		1932401	2		=			
ANR	1932438	Identifier	largest_offset		1932401	0					
ANR	1932439	PrimaryExpression	3000		1932401	1					
ANR	1932440	IfStatement	if ( offset > largest_offset )		1932401	7					
ANR	1932441	Condition	offset > largest_offset	525:6:13267:13289	1932401	0	True				
ANR	1932442	RelationalExpression	offset > largest_offset		1932401	0		>			
ANR	1932443	Identifier	offset		1932401	0					
ANR	1932444	Identifier	largest_offset		1932401	1					
ANR	1932445	ExpressionStatement	largest_offset = offset	526:2:13295:13318	1932401	1	True				
ANR	1932446	AssignmentExpression	largest_offset = offset		1932401	0		=			
ANR	1932447	Identifier	largest_offset		1932401	0					
ANR	1932448	Identifier	offset		1932401	1					
ANR	1932449	ExpressionStatement	p_nextblock = ( DWORD * ) ( ( DWORD ) oldblock + offset )	528:1:13322:13370	1932401	8	True				
ANR	1932450	AssignmentExpression	p_nextblock = ( DWORD * ) ( ( DWORD ) oldblock + offset )		1932401	0		=			
ANR	1932451	Identifier	p_nextblock		1932401	0					
ANR	1932452	CastExpression	( DWORD * ) ( ( DWORD ) oldblock + offset )		1932401	1					
ANR	1932453	CastTarget	DWORD *		1932401	0					
ANR	1932454	AdditiveExpression	( DWORD ) oldblock + offset		1932401	1		+			
ANR	1932455	CastExpression	( DWORD ) oldblock		1932401	0					
ANR	1932456	CastTarget	DWORD		1932401	0					
ANR	1932457	Identifier	oldblock		1932401	1					
ANR	1932458	Identifier	offset		1932401	1					
ANR	1932459	ExpressionStatement	offset_into_buf = ( DWORD ) p_nextblock - ( DWORD ) memptr + 1	529:1:13373:13429	1932401	9	True				
ANR	1932460	AssignmentExpression	offset_into_buf = ( DWORD ) p_nextblock - ( DWORD ) memptr + 1		1932401	0		=			
ANR	1932461	Identifier	offset_into_buf		1932401	0					
ANR	1932462	AdditiveExpression	( DWORD ) p_nextblock - ( DWORD ) memptr + 1		1932401	1		-			
ANR	1932463	CastExpression	( DWORD ) p_nextblock		1932401	0					
ANR	1932464	CastTarget	DWORD		1932401	0					
ANR	1932465	Identifier	p_nextblock		1932401	1					
ANR	1932466	AdditiveExpression	( DWORD ) memptr + 1		1932401	1		+			
ANR	1932467	CastExpression	( DWORD ) memptr		1932401	0					
ANR	1932468	CastTarget	DWORD		1932401	0					
ANR	1932469	Identifier	memptr		1932401	1					
ANR	1932470	PrimaryExpression	1		1932401	1					
ANR	1932471	IfStatement	if ( ! offset )		1932401	10					
ANR	1932472	Condition	! offset	531:5:13437:13443	1932401	0	True				
ANR	1932473	UnaryOperationExpression	! offset		1932401	0					
ANR	1932474	UnaryOperator	!		1932401	0					
ANR	1932475	Identifier	offset		1932401	1					
ANR	1932476	CompoundStatement		15:14:343:343	1932401	1					
ANR	1932477	IfStatement	if ( ( offset_into_buf + largest_offset ) > memptr_size )		1932401	0					
ANR	1932478	Condition	( offset_into_buf + largest_offset ) > memptr_size	532:7:13455:13502	1932401	0	True				
ANR	1932479	RelationalExpression	( offset_into_buf + largest_offset ) > memptr_size		1932401	0		>			
ANR	1932480	AdditiveExpression	offset_into_buf + largest_offset		1932401	0		+			
ANR	1932481	Identifier	offset_into_buf		1932401	0					
ANR	1932482	Identifier	largest_offset		1932401	1					
ANR	1932483	Identifier	memptr_size		1932401	1					
ANR	1932484	ExpressionStatement	need_resize = true	533:3:13508:13526	1932401	1	True				
ANR	1932485	AssignmentExpression	need_resize = true		1932401	0		=			
ANR	1932486	Identifier	need_resize		1932401	0					
ANR	1932487	Identifier	true		1932401	1					
ANR	1932488	ElseStatement	else		1932401	0					
ANR	1932489	ReturnStatement	return NULL ;	535:3:13538:13549	1932401	0	True				
ANR	1932490	Identifier	NULL		1932401	0					
ANR	1932491	ElseStatement	else		1932401	0					
ANR	1932492	CompoundStatement		20:8:456:456	1932401	0					
ANR	1932493	IfStatement	if ( ( offset_into_buf + sizeof ( next_offset ) ) > memptr_size )		1932401	0					
ANR	1932494	Condition	( offset_into_buf + sizeof ( next_offset ) ) > memptr_size	539:7:13699:13751	1932401	0	True				
ANR	1932495	RelationalExpression	( offset_into_buf + sizeof ( next_offset ) ) > memptr_size		1932401	0		>			
ANR	1932496	AdditiveExpression	offset_into_buf + sizeof ( next_offset )		1932401	0		+			
ANR	1932497	Identifier	offset_into_buf		1932401	0					
ANR	1932498	SizeofExpression	sizeof ( next_offset )		1932401	1					
ANR	1932499	Sizeof	sizeof		1932401	0					
ANR	1932500	SizeofOperand	next_offset		1932401	1					
ANR	1932501	Identifier	memptr_size		1932401	1					
ANR	1932502	CompoundStatement		24:2:653:653	1932401	1					
ANR	1932503	ExpressionStatement	need_resize = true	541:3:13761:13779	1932401	0	True				
ANR	1932504	AssignmentExpression	need_resize = true		1932401	0		=			
ANR	1932505	Identifier	need_resize		1932401	0					
ANR	1932506	Identifier	true		1932401	1					
ANR	1932507	ElseStatement	else		1932401	0					
ANR	1932508	CompoundStatement		26:9:687:687	1932401	0					
ANR	1932509	ExpressionStatement	next_offset = * p_nextblock	543:3:13795:13821	1932401	0	True				
ANR	1932510	AssignmentExpression	next_offset = * p_nextblock		1932401	0		=			
ANR	1932511	Identifier	next_offset		1932401	0					
ANR	1932512	UnaryOperationExpression	* p_nextblock		1932401	1					
ANR	1932513	UnaryOperator	*		1932401	0					
ANR	1932514	Identifier	p_nextblock		1932401	1					
ANR	1932515	IfStatement	if ( next_offset > largest_offset )		1932401	1					
ANR	1932516	Condition	next_offset > largest_offset	545:8:13832:13859	1932401	0	True				
ANR	1932517	RelationalExpression	next_offset > largest_offset		1932401	0		>			
ANR	1932518	Identifier	next_offset		1932401	0					
ANR	1932519	Identifier	largest_offset		1932401	1					
ANR	1932520	ExpressionStatement	largest_offset = next_offset	546:4:13866:13894	1932401	1	True				
ANR	1932521	AssignmentExpression	largest_offset = next_offset		1932401	0		=			
ANR	1932522	Identifier	largest_offset		1932401	0					
ANR	1932523	Identifier	next_offset		1932401	1					
ANR	1932524	IfStatement	if ( ( offset_into_buf + next_offset ) > memptr_size )		1932401	2					
ANR	1932525	Condition	( offset_into_buf + next_offset ) > memptr_size	548:8:13905:13949	1932401	0	True				
ANR	1932526	RelationalExpression	( offset_into_buf + next_offset ) > memptr_size		1932401	0		>			
ANR	1932527	AdditiveExpression	offset_into_buf + next_offset		1932401	0		+			
ANR	1932528	Identifier	offset_into_buf		1932401	0					
ANR	1932529	Identifier	next_offset		1932401	1					
ANR	1932530	Identifier	memptr_size		1932401	1					
ANR	1932531	CompoundStatement		32:55:849:849	1932401	1					
ANR	1932532	ExpressionStatement	need_resize = true	549:4:13958:13976	1932401	0	True				
ANR	1932533	AssignmentExpression	need_resize = true		1932401	0		=			
ANR	1932534	Identifier	need_resize		1932401	0					
ANR	1932535	Identifier	true		1932401	1					
ANR	1932536	IfStatement	if ( need_resize )		1932401	11					
ANR	1932537	Condition	need_resize	554:6:13998:14008	1932401	0	True				
ANR	1932538	Identifier	need_resize		1932401	0					
ANR	1932539	CompoundStatement		38:20:909:909	1932401	1					
ANR	1932540	ExpressionStatement	"VirtualFree ( memptr , 0 , MEM_RELEASE )"	555:2:14016:14052	1932401	0	True				
ANR	1932541	CallExpression	"VirtualFree ( memptr , 0 , MEM_RELEASE )"		1932401	0					
ANR	1932542	Callee	VirtualFree		1932401	0					
ANR	1932543	Identifier	VirtualFree		1932401	0					
ANR	1932544	ArgumentList	memptr		1932401	1					
ANR	1932545	Argument	memptr		1932401	0					
ANR	1932546	Identifier	memptr		1932401	0					
ANR	1932547	Argument	0		1932401	1					
ANR	1932548	PrimaryExpression	0		1932401	0					
ANR	1932549	Argument	MEM_RELEASE		1932401	2					
ANR	1932550	Identifier	MEM_RELEASE		1932401	0					
ANR	1932551	ExpressionStatement	memptr_size += 0x10000	556:2:14056:14078	1932401	1	True				
ANR	1932552	AssignmentExpression	memptr_size += 0x10000		1932401	0		+=			
ANR	1932553	Identifier	memptr_size		1932401	0					
ANR	1932554	PrimaryExpression	0x10000		1932401	1					
ANR	1932555	ExpressionStatement	"memptr = ( DWORD * ) VirtualAlloc ( NULL , memptr_size , MEM_COMMIT , PAGE_READWRITE )"	557:2:14119:14216	1932401	2	True				
ANR	1932556	AssignmentExpression	"memptr = ( DWORD * ) VirtualAlloc ( NULL , memptr_size , MEM_COMMIT , PAGE_READWRITE )"		1932401	0		=			
ANR	1932557	Identifier	memptr		1932401	0					
ANR	1932558	CastExpression	"( DWORD * ) VirtualAlloc ( NULL , memptr_size , MEM_COMMIT , PAGE_READWRITE )"		1932401	1					
ANR	1932559	CastTarget	DWORD *		1932401	0					
ANR	1932560	CallExpression	"VirtualAlloc ( NULL , memptr_size , MEM_COMMIT , PAGE_READWRITE )"		1932401	1					
ANR	1932561	Callee	VirtualAlloc		1932401	0					
ANR	1932562	Identifier	VirtualAlloc		1932401	0					
ANR	1932563	ArgumentList	NULL		1932401	1					
ANR	1932564	Argument	NULL		1932401	0					
ANR	1932565	Identifier	NULL		1932401	0					
ANR	1932566	Argument	memptr_size		1932401	1					
ANR	1932567	Identifier	memptr_size		1932401	0					
ANR	1932568	Argument	MEM_COMMIT		1932401	2					
ANR	1932569	Identifier	MEM_COMMIT		1932401	0					
ANR	1932570	Argument	PAGE_READWRITE		1932401	3					
ANR	1932571	Identifier	PAGE_READWRITE		1932401	0					
ANR	1932572	ExpressionStatement	Refresh ( )	561:2:14221:14230	1932401	3	True				
ANR	1932573	CallExpression	Refresh ( )		1932401	0					
ANR	1932574	Callee	Refresh		1932401	0					
ANR	1932575	Identifier	Refresh		1932401	0					
ANR	1932576	ArgumentList			1932401	1					
ANR	1932577	ReturnStatement	return ( ( DWORD * ) 1 ) ;	564:2:14351:14371	1932401	4	True				
ANR	1932578	CastExpression	( DWORD * ) 1		1932401	0					
ANR	1932579	CastTarget	DWORD *		1932401	0					
ANR	1932580	PrimaryExpression	1		1932401	1					
ANR	1932581	ReturnStatement	return ( p_nextblock ) ;	567:1:14378:14398	1932401	12	True				
ANR	1932582	Identifier	p_nextblock		1932401	0					
ANR	1932583	ReturnType	DWORD *		1932401	1					
ANR	1932584	Identifier	CSysinfo :: NextBlock		1932401	2					
ANR	1932585	ParameterList	DWORD * oldblock		1932401	3					
ANR	1932586	Parameter	DWORD * oldblock	516:28:13085:13099	1932401	0	True				
ANR	1932587	ParameterType	DWORD *		1932401	0					
ANR	1932588	Identifier	oldblock		1932401	1					
ANR	1932589	CFGEntryNode	ENTRY		1932401		True				
ANR	1932590	CFGExitNode	EXIT		1932401		True				
ANR	1932591	Symbol	* p_nextblock		1932401						
ANR	1932592	Symbol	NULL		1932401						
ANR	1932593	Symbol	VirtualAlloc		1932401						
ANR	1932594	Symbol	offset		1932401						
ANR	1932595	Symbol	MEM_COMMIT		1932401						
ANR	1932596	Symbol	* oldblock		1932401						
ANR	1932597	Symbol	p_nextblock		1932401						
ANR	1932598	Symbol	false		1932401						
ANR	1932599	Symbol	largest_offset		1932401						
ANR	1932600	Symbol	memptr_size		1932401						
ANR	1932601	Symbol	need_resize		1932401						
ANR	1932602	Symbol	offset_into_buf		1932401						
ANR	1932603	Symbol	PAGE_READWRITE		1932401						
ANR	1932604	Symbol	true		1932401						
ANR	1932605	Symbol	oldblock		1932401						
ANR	1932606	Symbol	memptr		1932401						
ANR	1932607	Symbol	MEM_RELEASE		1932401						
ANR	1932608	Symbol	next_offset		1932401						
ANR	1932609	Function	CSysinfo :: Refresh	570:0:14403:14500							
ANR	1932610	FunctionDef	CSysinfo :: Refresh ()		1932609	0					
ANR	1932611	CompoundStatement		571:0:14442:14500	1932609	0					
ANR	1932612	ExpressionStatement	"NtQuerySystemInformation ( 5 , memptr , memptr_size , 0 )"	572:1:14445:14497	1932609	0	True				
ANR	1932613	CallExpression	"NtQuerySystemInformation ( 5 , memptr , memptr_size , 0 )"		1932609	0					
ANR	1932614	Callee	NtQuerySystemInformation		1932609	0					
ANR	1932615	Identifier	NtQuerySystemInformation		1932609	0					
ANR	1932616	ArgumentList	5		1932609	1					
ANR	1932617	Argument	5		1932609	0					
ANR	1932618	PrimaryExpression	5		1932609	0					
ANR	1932619	Argument	memptr		1932609	1					
ANR	1932620	Identifier	memptr		1932609	0					
ANR	1932621	Argument	memptr_size		1932609	2					
ANR	1932622	Identifier	memptr_size		1932609	0					
ANR	1932623	Argument	0		1932609	3					
ANR	1932624	PrimaryExpression	0		1932609	0					
ANR	1932625	ReturnType	__inline void		1932609	1					
ANR	1932626	Identifier	CSysinfo :: Refresh		1932609	2					
ANR	1932627	ParameterList			1932609	3					
ANR	1932628	CFGEntryNode	ENTRY		1932609		True				
ANR	1932629	CFGExitNode	EXIT		1932609		True				
ANR	1932630	Symbol	memptr_size		1932609						
ANR	1932631	Symbol	memptr		1932609						
ANR	1932632	Function	CSysinfo :: MakeAnsiString	575:0:14503:14693							
ANR	1932633	FunctionDef	"CSysinfo :: MakeAnsiString (WORD * unistring , char * ansistring)"		1932632	0					
ANR	1932634	CompoundStatement		576:0:14578:14693	1932632	0					
ANR	1932635	IdentifierDeclStatement	int s = 0 ;	577:1:14581:14588	1932632	0	True				
ANR	1932636	IdentifierDecl	s = 0		1932632	0					
ANR	1932637	IdentifierDeclType	int		1932632	0					
ANR	1932638	Identifier	s		1932632	1					
ANR	1932639	AssignmentExpression	s = 0		1932632	2		=			
ANR	1932640	Identifier	s		1932632	0					
ANR	1932641	PrimaryExpression	0		1932632	1					
ANR	1932642	IfStatement	if ( unistring )		1932632	1					
ANR	1932643	Condition	unistring	578:5:14595:14603	1932632	0	True				
ANR	1932644	Identifier	unistring		1932632	0					
ANR	1932645	WhileStatement	while ( unistring [ s ] )		1932632	1					
ANR	1932646	Condition	unistring [ s ]	579:9:14615:14626	1932632	0	True				
ANR	1932647	ArrayIndexing	unistring [ s ]		1932632	0					
ANR	1932648	Identifier	unistring		1932632	0					
ANR	1932649	Identifier	s		1932632	1					
ANR	1932650	ExpressionStatement	ansistring [ s ] = ( char ) unistring [ s ++ ]	580:3:14632:14668	1932632	1	True				
ANR	1932651	AssignmentExpression	ansistring [ s ] = ( char ) unistring [ s ++ ]		1932632	0		=			
ANR	1932652	ArrayIndexing	ansistring [ s ]		1932632	0					
ANR	1932653	Identifier	ansistring		1932632	0					
ANR	1932654	Identifier	s		1932632	1					
ANR	1932655	CastExpression	( char ) unistring [ s ++ ]		1932632	1					
ANR	1932656	CastTarget	char		1932632	0					
ANR	1932657	ArrayIndexing	unistring [ s ++ ]		1932632	1					
ANR	1932658	Identifier	unistring		1932632	0					
ANR	1932659	PostIncDecOperationExpression	s ++		1932632	1					
ANR	1932660	Identifier	s		1932632	0					
ANR	1932661	IncDec	++		1932632	1					
ANR	1932662	ExpressionStatement	ansistring [ s ] = '\\0'	581:1:14671:14691	1932632	2	True				
ANR	1932663	AssignmentExpression	ansistring [ s ] = '\\0'		1932632	0		=			
ANR	1932664	ArrayIndexing	ansistring [ s ]		1932632	0					
ANR	1932665	Identifier	ansistring		1932632	0					
ANR	1932666	Identifier	s		1932632	1					
ANR	1932667	PrimaryExpression	'\\0'		1932632	1					
ANR	1932668	ReturnType	__inline void		1932632	1					
ANR	1932669	Identifier	CSysinfo :: MakeAnsiString		1932632	2					
ANR	1932670	ParameterList	"WORD * unistring , char * ansistring"		1932632	3					
ANR	1932671	Parameter	WORD * unistring	575:40:14543:14557	1932632	0	True				
ANR	1932672	ParameterType	WORD *		1932632	0					
ANR	1932673	Identifier	unistring		1932632	1					
ANR	1932674	Parameter	char * ansistring	575:57:14560:14575	1932632	1	True				
ANR	1932675	ParameterType	char *		1932632	0					
ANR	1932676	Identifier	ansistring		1932632	1					
ANR	1932677	CFGEntryNode	ENTRY		1932632		True				
ANR	1932678	CFGExitNode	EXIT		1932632		True				
ANR	1932679	Symbol	ansistring		1932632						
ANR	1932680	Symbol	s		1932632						
ANR	1932681	Symbol	* unistring		1932632						
ANR	1932682	Symbol	unistring		1932632						
ANR	1932683	Symbol	* ansistring		1932632						
ANR	1932684	Symbol	* s		1932632						
ANR	1932685	Function	CSysinfo :: FindBlock	584:0:14696:14964							
ANR	1932686	FunctionDef	CSysinfo :: FindBlock (DWORD pid)		1932685	0					
ANR	1932687	CompoundStatement		585:0:14744:14964	1932685	0					
ANR	1932688	IdentifierDeclStatement	DWORD * startblock = memptr ;	586:1:14747:14773	1932685	0	True				
ANR	1932689	IdentifierDecl	* startblock = memptr		1932685	0					
ANR	1932690	IdentifierDeclType	DWORD *		1932685	0					
ANR	1932691	Identifier	startblock		1932685	1					
ANR	1932692	AssignmentExpression	* startblock = memptr		1932685	2		=			
ANR	1932693	Identifier	memptr		1932685	0					
ANR	1932694	Identifier	memptr		1932685	1					
ANR	1932695	WhileStatement	while ( startblock )		1932685	1					
ANR	1932696	Condition	startblock	587:8:14783:14792	1932685	0	True				
ANR	1932697	Identifier	startblock		1932685	0					
ANR	1932698	CompoundStatement		4:1:51:51	1932685	1					
ANR	1932699	IfStatement	if ( * ( startblock + 17 ) == pid )		1932685	0					
ANR	1932700	Condition	* ( startblock + 17 ) == pid	589:6:14804:14826	1932685	0	True				
ANR	1932701	EqualityExpression	* ( startblock + 17 ) == pid		1932685	0		==			
ANR	1932702	UnaryOperationExpression	* ( startblock + 17 )		1932685	0					
ANR	1932703	UnaryOperator	*		1932685	0					
ANR	1932704	AdditiveExpression	startblock + 17		1932685	1		+			
ANR	1932705	Identifier	startblock		1932685	0					
ANR	1932706	PrimaryExpression	17		1932685	1					
ANR	1932707	Identifier	pid		1932685	1					
ANR	1932708	ReturnStatement	return startblock ;	590:3:14832:14849	1932685	1	True				
ANR	1932709	Identifier	startblock		1932685	0					
ANR	1932710	ExpressionStatement	startblock = NextBlock ( startblock )	591:2:14853:14888	1932685	1	True				
ANR	1932711	AssignmentExpression	startblock = NextBlock ( startblock )		1932685	0		=			
ANR	1932712	Identifier	startblock		1932685	0					
ANR	1932713	CallExpression	NextBlock ( startblock )		1932685	1					
ANR	1932714	Callee	NextBlock		1932685	0					
ANR	1932715	Identifier	NextBlock		1932685	0					
ANR	1932716	ArgumentList	startblock		1932685	1					
ANR	1932717	Argument	startblock		1932685	0					
ANR	1932718	Identifier	startblock		1932685	0					
ANR	1932719	IfStatement	if ( startblock == ( DWORD * ) 1 )		1932685	2					
ANR	1932720	Condition	startblock == ( DWORD * ) 1	592:7:14897:14919	1932685	0	True				
ANR	1932721	EqualityExpression	startblock == ( DWORD * ) 1		1932685	0		==			
ANR	1932722	Identifier	startblock		1932685	0					
ANR	1932723	CastExpression	( DWORD * ) 1		1932685	1					
ANR	1932724	CastTarget	DWORD *		1932685	0					
ANR	1932725	PrimaryExpression	1		1932685	1					
ANR	1932726	ExpressionStatement	startblock = memptr	593:3:14926:14945	1932685	1	True				
ANR	1932727	AssignmentExpression	startblock = memptr		1932685	0		=			
ANR	1932728	Identifier	startblock		1932685	0					
ANR	1932729	Identifier	memptr		1932685	1					
ANR	1932730	ReturnStatement	return NULL ;	595:1:14951:14962	1932685	2	True				
ANR	1932731	Identifier	NULL		1932685	0					
ANR	1932732	ReturnType	__inline DWORD *		1932685	1					
ANR	1932733	Identifier	CSysinfo :: FindBlock		1932685	2					
ANR	1932734	ParameterList	DWORD pid		1932685	3					
ANR	1932735	Parameter	DWORD pid	584:37:14733:14741	1932685	0	True				
ANR	1932736	ParameterType	DWORD		1932685	0					
ANR	1932737	Identifier	pid		1932685	1					
ANR	1932738	CFGEntryNode	ENTRY		1932685		True				
ANR	1932739	CFGExitNode	EXIT		1932685		True				
ANR	1932740	Symbol	NULL		1932685						
ANR	1932741	Symbol	startblock		1932685						
ANR	1932742	Symbol	NextBlock		1932685						
ANR	1932743	Symbol	pid		1932685						
ANR	1932744	Symbol	memptr		1932685						
ANR	1932745	Symbol	* startblock		1932685						
ANR	1932746	Symbol	* ( startblock + 17 )		1932685						
ANR	1932747	Function	CSysinfo :: GetProcessBirthday	602:0:15203:16132							
ANR	1932748	FunctionDef	"CSysinfo :: GetProcessBirthday (pid_t pid , FILETIME * ft)"		1932747	0					
ANR	1932749	CompoundStatement		603:54:15262:16132	1932747	0					
ANR	1932750	IdentifierDeclStatement	HANDLE pidHnd ;	605:1:15266:15279	1932747	0	True				
ANR	1932751	IdentifierDecl	pidHnd		1932747	0					
ANR	1932752	IdentifierDeclType	HANDLE		1932747	0					
ANR	1932753	Identifier	pidHnd		1932747	1					
ANR	1932754	IdentifierDeclStatement	"FILETIME crtime , extime , kerntime , usertime ;"	606:1:15282:15325	1932747	1	True				
ANR	1932755	IdentifierDecl	crtime		1932747	0					
ANR	1932756	IdentifierDeclType	FILETIME		1932747	0					
ANR	1932757	Identifier	crtime		1932747	1					
ANR	1932758	IdentifierDecl	extime		1932747	1					
ANR	1932759	IdentifierDeclType	FILETIME		1932747	0					
ANR	1932760	Identifier	extime		1932747	1					
ANR	1932761	IdentifierDecl	kerntime		1932747	2					
ANR	1932762	IdentifierDeclType	FILETIME		1932747	0					
ANR	1932763	Identifier	kerntime		1932747	1					
ANR	1932764	IdentifierDecl	usertime		1932747	3					
ANR	1932765	IdentifierDeclType	FILETIME		1932747	0					
ANR	1932766	Identifier	usertime		1932747	1					
ANR	1932767	IdentifierDeclStatement	BOOL result ;	607:1:15328:15339	1932747	2	True				
ANR	1932768	IdentifierDecl	result		1932747	0					
ANR	1932769	IdentifierDeclType	BOOL		1932747	0					
ANR	1932770	Identifier	result		1932747	1					
ANR	1932771	ExpressionStatement	"ZeroMemory ( & crtime , sizeof ( FILETIME ) )"	609:1:15343:15380	1932747	3	True				
ANR	1932772	CallExpression	"ZeroMemory ( & crtime , sizeof ( FILETIME ) )"		1932747	0					
ANR	1932773	Callee	ZeroMemory		1932747	0					
ANR	1932774	Identifier	ZeroMemory		1932747	0					
ANR	1932775	ArgumentList	& crtime		1932747	1					
ANR	1932776	Argument	& crtime		1932747	0					
ANR	1932777	UnaryOperationExpression	& crtime		1932747	0					
ANR	1932778	UnaryOperator	&		1932747	0					
ANR	1932779	Identifier	crtime		1932747	1					
ANR	1932780	Argument	sizeof ( FILETIME )		1932747	1					
ANR	1932781	SizeofExpression	sizeof ( FILETIME )		1932747	0					
ANR	1932782	Sizeof	sizeof		1932747	0					
ANR	1932783	SizeofOperand	FILETIME		1932747	1					
ANR	1932784	ExpressionStatement	"ZeroMemory ( & extime , sizeof ( FILETIME ) )"	610:1:15383:15420	1932747	4	True				
ANR	1932785	CallExpression	"ZeroMemory ( & extime , sizeof ( FILETIME ) )"		1932747	0					
ANR	1932786	Callee	ZeroMemory		1932747	0					
ANR	1932787	Identifier	ZeroMemory		1932747	0					
ANR	1932788	ArgumentList	& extime		1932747	1					
ANR	1932789	Argument	& extime		1932747	0					
ANR	1932790	UnaryOperationExpression	& extime		1932747	0					
ANR	1932791	UnaryOperator	&		1932747	0					
ANR	1932792	Identifier	extime		1932747	1					
ANR	1932793	Argument	sizeof ( FILETIME )		1932747	1					
ANR	1932794	SizeofExpression	sizeof ( FILETIME )		1932747	0					
ANR	1932795	Sizeof	sizeof		1932747	0					
ANR	1932796	SizeofOperand	FILETIME		1932747	1					
ANR	1932797	ExpressionStatement	"ZeroMemory ( & kerntime , sizeof ( FILETIME ) )"	611:1:15423:15462	1932747	5	True				
ANR	1932798	CallExpression	"ZeroMemory ( & kerntime , sizeof ( FILETIME ) )"		1932747	0					
ANR	1932799	Callee	ZeroMemory		1932747	0					
ANR	1932800	Identifier	ZeroMemory		1932747	0					
ANR	1932801	ArgumentList	& kerntime		1932747	1					
ANR	1932802	Argument	& kerntime		1932747	0					
ANR	1932803	UnaryOperationExpression	& kerntime		1932747	0					
ANR	1932804	UnaryOperator	&		1932747	0					
ANR	1932805	Identifier	kerntime		1932747	1					
ANR	1932806	Argument	sizeof ( FILETIME )		1932747	1					
ANR	1932807	SizeofExpression	sizeof ( FILETIME )		1932747	0					
ANR	1932808	Sizeof	sizeof		1932747	0					
ANR	1932809	SizeofOperand	FILETIME		1932747	1					
ANR	1932810	ExpressionStatement	"ZeroMemory ( & usertime , sizeof ( FILETIME ) )"	612:1:15465:15504	1932747	6	True				
ANR	1932811	CallExpression	"ZeroMemory ( & usertime , sizeof ( FILETIME ) )"		1932747	0					
ANR	1932812	Callee	ZeroMemory		1932747	0					
ANR	1932813	Identifier	ZeroMemory		1932747	0					
ANR	1932814	ArgumentList	& usertime		1932747	1					
ANR	1932815	Argument	& usertime		1932747	0					
ANR	1932816	UnaryOperationExpression	& usertime		1932747	0					
ANR	1932817	UnaryOperator	&		1932747	0					
ANR	1932818	Identifier	usertime		1932747	1					
ANR	1932819	Argument	sizeof ( FILETIME )		1932747	1					
ANR	1932820	SizeofExpression	sizeof ( FILETIME )		1932747	0					
ANR	1932821	Sizeof	sizeof		1932747	0					
ANR	1932822	SizeofOperand	FILETIME		1932747	1					
ANR	1932823	ExpressionStatement	"pidHnd = OpenProcess ( PROCESS_QUERY_INFORMATION , FALSE , pid )"	614:1:15508:15576	1932747	7	True				
ANR	1932824	AssignmentExpression	"pidHnd = OpenProcess ( PROCESS_QUERY_INFORMATION , FALSE , pid )"		1932747	0		=			
ANR	1932825	Identifier	pidHnd		1932747	0					
ANR	1932826	CallExpression	"OpenProcess ( PROCESS_QUERY_INFORMATION , FALSE , pid )"		1932747	1					
ANR	1932827	Callee	OpenProcess		1932747	0					
ANR	1932828	Identifier	OpenProcess		1932747	0					
ANR	1932829	ArgumentList	PROCESS_QUERY_INFORMATION		1932747	1					
ANR	1932830	Argument	PROCESS_QUERY_INFORMATION		1932747	0					
ANR	1932831	Identifier	PROCESS_QUERY_INFORMATION		1932747	0					
ANR	1932832	Argument	FALSE		1932747	1					
ANR	1932833	Identifier	FALSE		1932747	0					
ANR	1932834	Argument	pid		1932747	2					
ANR	1932835	Identifier	pid		1932747	0					
ANR	1932836	IfStatement	if ( pidHnd == NULL )		1932747	8					
ANR	1932837	Condition	pidHnd == NULL	618:6:15585:15598	1932747	0	True				
ANR	1932838	EqualityExpression	pidHnd == NULL		1932747	0		==			
ANR	1932839	Identifier	pidHnd		1932747	0					
ANR	1932840	Identifier	NULL		1932747	1					
ANR	1932841	CompoundStatement		16:23:339:339	1932747	1					
ANR	1932842	Statement	dprintf	619:2:15606:15612	1932747	0	True				
ANR	1932843	Statement	(	619:9:15613:15613	1932747	1	True				
ANR	1932844	Statement	D_ALWAYS	619:10:15614:15621	1932747	2	True				
ANR	1932845	Statement	","	619:18:15622:15622	1932747	3	True				
ANR	1932846	Statement	"""CSysinfo::GetProcessBirthday() - OpenProcess() """	619:20:15624:15672	1932747	4	True				
ANR	1932847	Statement	"""failed with err=%d\\n"""	620:6:15680:15701	1932747	5	True				
ANR	1932848	Statement	","	620:28:15702:15702	1932747	6	True				
ANR	1932849	Statement	GetLastError	620:30:15704:15715	1932747	7	True				
ANR	1932850	Statement	(	620:42:15716:15716	1932747	8	True				
ANR	1932851	Statement	)	620:43:15717:15717	1932747	9	True				
ANR	1932852	Statement	)	620:44:15718:15718	1932747	10	True				
ANR	1932853	ExpressionStatement		620:45:15719:15719	1932747	11	True				
ANR	1932854	ReturnStatement	return false ;	621:2:15724:15736	1932747	12	True				
ANR	1932855	Identifier	false		1932747	0					
ANR	1932856	ExpressionStatement	"result = GetProcessTimes ( pidHnd , & crtime , & extime , & kerntime , & usertime )"	625:1:15744:15816	1932747	9	True				
ANR	1932857	AssignmentExpression	"result = GetProcessTimes ( pidHnd , & crtime , & extime , & kerntime , & usertime )"		1932747	0		=			
ANR	1932858	Identifier	result		1932747	0					
ANR	1932859	CallExpression	"GetProcessTimes ( pidHnd , & crtime , & extime , & kerntime , & usertime )"		1932747	1					
ANR	1932860	Callee	GetProcessTimes		1932747	0					
ANR	1932861	Identifier	GetProcessTimes		1932747	0					
ANR	1932862	ArgumentList	pidHnd		1932747	1					
ANR	1932863	Argument	pidHnd		1932747	0					
ANR	1932864	Identifier	pidHnd		1932747	0					
ANR	1932865	Argument	& crtime		1932747	1					
ANR	1932866	UnaryOperationExpression	& crtime		1932747	0					
ANR	1932867	UnaryOperator	&		1932747	0					
ANR	1932868	Identifier	crtime		1932747	1					
ANR	1932869	Argument	& extime		1932747	2					
ANR	1932870	UnaryOperationExpression	& extime		1932747	0					
ANR	1932871	UnaryOperator	&		1932747	0					
ANR	1932872	Identifier	extime		1932747	1					
ANR	1932873	Argument	& kerntime		1932747	3					
ANR	1932874	UnaryOperationExpression	& kerntime		1932747	0					
ANR	1932875	UnaryOperator	&		1932747	0					
ANR	1932876	Identifier	kerntime		1932747	1					
ANR	1932877	Argument	& usertime		1932747	4					
ANR	1932878	UnaryOperationExpression	& usertime		1932747	0					
ANR	1932879	UnaryOperator	&		1932747	0					
ANR	1932880	Identifier	usertime		1932747	1					
ANR	1932881	IfStatement	if ( result == 0 )		1932747	10					
ANR	1932882	Condition	result == 0	627:6:15825:15835	1932747	0	True				
ANR	1932883	EqualityExpression	result == 0		1932747	0		==			
ANR	1932884	Identifier	result		1932747	0					
ANR	1932885	PrimaryExpression	0		1932747	1					
ANR	1932886	CompoundStatement		25:20:576:576	1932747	1					
ANR	1932887	Statement	dprintf	628:2:15843:15849	1932747	0	True				
ANR	1932888	Statement	(	628:9:15850:15850	1932747	1	True				
ANR	1932889	Statement	D_ALWAYS	628:10:15851:15858	1932747	2	True				
ANR	1932890	Statement	","	628:18:15859:15859	1932747	3	True				
ANR	1932891	Statement	"""CSysinfo::GetProcessBirthday() - GetProcessTimes() """	628:20:15861:15913	1932747	4	True				
ANR	1932892	Statement	"""failed with err=%d\\n"""	629:6:15921:15942	1932747	5	True				
ANR	1932893	Statement	","	629:28:15943:15943	1932747	6	True				
ANR	1932894	Statement	GetLastError	629:30:15945:15956	1932747	7	True				
ANR	1932895	Statement	(	629:42:15957:15957	1932747	8	True				
ANR	1932896	Statement	)	629:43:15958:15958	1932747	9	True				
ANR	1932897	Statement	)	629:44:15959:15959	1932747	10	True				
ANR	1932898	ExpressionStatement		629:45:15960:15960	1932747	11	True				
ANR	1932899	ExpressionStatement	CloseHandle ( pidHnd )	630:2:15965:15984	1932747	12	True				
ANR	1932900	CallExpression	CloseHandle ( pidHnd )		1932747	0					
ANR	1932901	Callee	CloseHandle		1932747	0					
ANR	1932902	Identifier	CloseHandle		1932747	0					
ANR	1932903	ArgumentList	pidHnd		1932747	1					
ANR	1932904	Argument	pidHnd		1932747	0					
ANR	1932905	Identifier	pidHnd		1932747	0					
ANR	1932906	ReturnStatement	return false ;	631:2:15988:16000	1932747	13	True				
ANR	1932907	Identifier	false		1932747	0					
ANR	1932908	ExpressionStatement	ft -> dwLowDateTime = crtime . dwLowDateTime	634:1:16007:16047	1932747	11	True				
ANR	1932909	AssignmentExpression	ft -> dwLowDateTime = crtime . dwLowDateTime		1932747	0		=			
ANR	1932910	PtrMemberAccess	ft -> dwLowDateTime		1932747	0					
ANR	1932911	Identifier	ft		1932747	0					
ANR	1932912	Identifier	dwLowDateTime		1932747	1					
ANR	1932913	MemberAccess	crtime . dwLowDateTime		1932747	1					
ANR	1932914	Identifier	crtime		1932747	0					
ANR	1932915	Identifier	dwLowDateTime		1932747	1					
ANR	1932916	ExpressionStatement	ft -> dwHighDateTime = crtime . dwHighDateTime	635:1:16050:16092	1932747	12	True				
ANR	1932917	AssignmentExpression	ft -> dwHighDateTime = crtime . dwHighDateTime		1932747	0		=			
ANR	1932918	PtrMemberAccess	ft -> dwHighDateTime		1932747	0					
ANR	1932919	Identifier	ft		1932747	0					
ANR	1932920	Identifier	dwHighDateTime		1932747	1					
ANR	1932921	MemberAccess	crtime . dwHighDateTime		1932747	1					
ANR	1932922	Identifier	crtime		1932747	0					
ANR	1932923	Identifier	dwHighDateTime		1932747	1					
ANR	1932924	ExpressionStatement	CloseHandle ( pidHnd )	637:1:16097:16116	1932747	13	True				
ANR	1932925	CallExpression	CloseHandle ( pidHnd )		1932747	0					
ANR	1932926	Callee	CloseHandle		1932747	0					
ANR	1932927	Identifier	CloseHandle		1932747	0					
ANR	1932928	ArgumentList	pidHnd		1932747	1					
ANR	1932929	Argument	pidHnd		1932747	0					
ANR	1932930	Identifier	pidHnd		1932747	0					
ANR	1932931	ReturnStatement	return true ;	638:1:16119:16130	1932747	14	True				
ANR	1932932	Identifier	true		1932747	0					
ANR	1932933	ReturnType	bool		1932747	1					
ANR	1932934	Identifier	CSysinfo :: GetProcessBirthday		1932747	2					
ANR	1932935	ParameterList	"pid_t pid , FILETIME * ft"		1932747	3					
ANR	1932936	Parameter	pid_t pid	603:29:15237:15245	1932747	0	True				
ANR	1932937	ParameterType	pid_t		1932747	0					
ANR	1932938	Identifier	pid		1932747	1					
ANR	1932939	Parameter	FILETIME * ft	603:40:15248:15259	1932747	1	True				
ANR	1932940	ParameterType	FILETIME *		1932747	0					
ANR	1932941	Identifier	ft		1932747	1					
ANR	1932942	CFGEntryNode	ENTRY		1932747		True				
ANR	1932943	CFGExitNode	EXIT		1932747		True				
ANR	1932944	Symbol	ft -> dwLowDateTime		1932747						
ANR	1932945	Symbol	kerntime		1932747						
ANR	1932946	Symbol	NULL		1932747						
ANR	1932947	Symbol	& extime		1932747						
ANR	1932948	Symbol	crtime . dwHighDateTime		1932747						
ANR	1932949	Symbol	pidHnd		1932747						
ANR	1932950	Symbol	false		1932747						
ANR	1932951	Symbol	& kerntime		1932747						
ANR	1932952	Symbol	pid		1932747						
ANR	1932953	Symbol	extime		1932747						
ANR	1932954	Symbol	ft -> dwHighDateTime		1932747						
ANR	1932955	Symbol	ft		1932747						
ANR	1932956	Symbol	crtime		1932747						
ANR	1932957	Symbol	result		1932747						
ANR	1932958	Symbol	crtime . dwLowDateTime		1932747						
ANR	1932959	Symbol	& usertime		1932747						
ANR	1932960	Symbol	usertime		1932747						
ANR	1932961	Symbol	& crtime		1932747						
ANR	1932962	Symbol	* ft		1932747						
ANR	1932963	Symbol	GetProcessTimes		1932747						
ANR	1932964	Symbol	true		1932747						
ANR	1932965	Symbol	FALSE		1932747						
ANR	1932966	Symbol	PROCESS_QUERY_INFORMATION		1932747						
ANR	1932967	Symbol	OpenProcess		1932747						
ANR	1932968	Function	CSysinfo :: ComparePidAge	646:0:16285:16752							
ANR	1932969	FunctionDef	"CSysinfo :: ComparePidAge (pid_t pid1 , pid_t pid2)"		1932968	0					
ANR	1932970	CompoundStatement		647:49:16338:16752	1932968	0					
ANR	1932971	IdentifierDeclStatement	"FILETIME ft1 , ft2 ;"	649:1:16342:16359	1932968	0	True				
ANR	1932972	IdentifierDecl	ft1		1932968	0					
ANR	1932973	IdentifierDeclType	FILETIME		1932968	0					
ANR	1932974	Identifier	ft1		1932968	1					
ANR	1932975	IdentifierDecl	ft2		1932968	1					
ANR	1932976	IdentifierDeclType	FILETIME		1932968	0					
ANR	1932977	Identifier	ft2		1932968	1					
ANR	1932978	ExpressionStatement	"ZeroMemory ( & ft1 , sizeof ( FILETIME ) )"	651:1:16363:16397	1932968	1	True				
ANR	1932979	CallExpression	"ZeroMemory ( & ft1 , sizeof ( FILETIME ) )"		1932968	0					
ANR	1932980	Callee	ZeroMemory		1932968	0					
ANR	1932981	Identifier	ZeroMemory		1932968	0					
ANR	1932982	ArgumentList	& ft1		1932968	1					
ANR	1932983	Argument	& ft1		1932968	0					
ANR	1932984	UnaryOperationExpression	& ft1		1932968	0					
ANR	1932985	UnaryOperator	&		1932968	0					
ANR	1932986	Identifier	ft1		1932968	1					
ANR	1932987	Argument	sizeof ( FILETIME )		1932968	1					
ANR	1932988	SizeofExpression	sizeof ( FILETIME )		1932968	0					
ANR	1932989	Sizeof	sizeof		1932968	0					
ANR	1932990	SizeofOperand	FILETIME		1932968	1					
ANR	1932991	ExpressionStatement	"ZeroMemory ( & ft2 , sizeof ( FILETIME ) )"	652:1:16400:16434	1932968	2	True				
ANR	1932992	CallExpression	"ZeroMemory ( & ft2 , sizeof ( FILETIME ) )"		1932968	0					
ANR	1932993	Callee	ZeroMemory		1932968	0					
ANR	1932994	Identifier	ZeroMemory		1932968	0					
ANR	1932995	ArgumentList	& ft2		1932968	1					
ANR	1932996	Argument	& ft2		1932968	0					
ANR	1932997	UnaryOperationExpression	& ft2		1932968	0					
ANR	1932998	UnaryOperator	&		1932968	0					
ANR	1932999	Identifier	ft2		1932968	1					
ANR	1933000	Argument	sizeof ( FILETIME )		1932968	1					
ANR	1933001	SizeofExpression	sizeof ( FILETIME )		1932968	0					
ANR	1933002	Sizeof	sizeof		1932968	0					
ANR	1933003	SizeofOperand	FILETIME		1932968	1					
ANR	1933004	IfStatement	"if ( ! GetProcessBirthday ( pid1 , & ft1 ) )"		1932968	3					
ANR	1933005	Condition	"! GetProcessBirthday ( pid1 , & ft1 )"	654:5:16442:16473	1932968	0	True				
ANR	1933006	UnaryOperationExpression	"! GetProcessBirthday ( pid1 , & ft1 )"		1932968	0					
ANR	1933007	UnaryOperator	!		1932968	0					
ANR	1933008	CallExpression	"GetProcessBirthday ( pid1 , & ft1 )"		1932968	1					
ANR	1933009	Callee	GetProcessBirthday		1932968	0					
ANR	1933010	Identifier	GetProcessBirthday		1932968	0					
ANR	1933011	ArgumentList	pid1		1932968	1					
ANR	1933012	Argument	pid1		1932968	0					
ANR	1933013	Identifier	pid1		1932968	0					
ANR	1933014	Argument	& ft1		1932968	1					
ANR	1933015	UnaryOperationExpression	& ft1		1932968	0					
ANR	1933016	UnaryOperator	&		1932968	0					
ANR	1933017	Identifier	ft1		1932968	1					
ANR	1933018	CompoundStatement		8:39:137:137	1932968	1					
ANR	1933019	ExpressionStatement	"dprintf ( D_ALWAYS , ""Should never happen: ComparePidAge(%d) failed\\n"" , pid1 )"	655:2:16480:16558	1932968	0	True				
ANR	1933020	CallExpression	"dprintf ( D_ALWAYS , ""Should never happen: ComparePidAge(%d) failed\\n"" , pid1 )"		1932968	0					
ANR	1933021	Callee	dprintf		1932968	0					
ANR	1933022	Identifier	dprintf		1932968	0					
ANR	1933023	ArgumentList	D_ALWAYS		1932968	1					
ANR	1933024	Argument	D_ALWAYS		1932968	0					
ANR	1933025	Identifier	D_ALWAYS		1932968	0					
ANR	1933026	Argument	"""Should never happen: ComparePidAge(%d) failed\\n"""		1932968	1					
ANR	1933027	PrimaryExpression	"""Should never happen: ComparePidAge(%d) failed\\n"""		1932968	0					
ANR	1933028	Argument	pid1		1932968	2					
ANR	1933029	Identifier	pid1		1932968	0					
ANR	1933030	ReturnStatement	return 0 ;	657:2:16562:16570	1932968	1	True				
ANR	1933031	PrimaryExpression	0		1932968	0					
ANR	1933032	IfStatement	"if ( ! GetProcessBirthday ( pid2 , & ft2 ) )"		1932968	4					
ANR	1933033	Condition	"! GetProcessBirthday ( pid2 , & ft2 )"	660:5:16581:16612	1932968	0	True				
ANR	1933034	UnaryOperationExpression	"! GetProcessBirthday ( pid2 , & ft2 )"		1932968	0					
ANR	1933035	UnaryOperator	!		1932968	0					
ANR	1933036	CallExpression	"GetProcessBirthday ( pid2 , & ft2 )"		1932968	1					
ANR	1933037	Callee	GetProcessBirthday		1932968	0					
ANR	1933038	Identifier	GetProcessBirthday		1932968	0					
ANR	1933039	ArgumentList	pid2		1932968	1					
ANR	1933040	Argument	pid2		1932968	0					
ANR	1933041	Identifier	pid2		1932968	0					
ANR	1933042	Argument	& ft2		1932968	1					
ANR	1933043	UnaryOperationExpression	& ft2		1932968	0					
ANR	1933044	UnaryOperator	&		1932968	0					
ANR	1933045	Identifier	ft2		1932968	1					
ANR	1933046	CompoundStatement		14:39:276:276	1932968	1					
ANR	1933047	ExpressionStatement	"dprintf ( D_ALWAYS , ""Should never happen: ComparePidAge(%d) failed\\n"" , pid2 )"	661:2:16619:16697	1932968	0	True				
ANR	1933048	CallExpression	"dprintf ( D_ALWAYS , ""Should never happen: ComparePidAge(%d) failed\\n"" , pid2 )"		1932968	0					
ANR	1933049	Callee	dprintf		1932968	0					
ANR	1933050	Identifier	dprintf		1932968	0					
ANR	1933051	ArgumentList	D_ALWAYS		1932968	1					
ANR	1933052	Argument	D_ALWAYS		1932968	0					
ANR	1933053	Identifier	D_ALWAYS		1932968	0					
ANR	1933054	Argument	"""Should never happen: ComparePidAge(%d) failed\\n"""		1932968	1					
ANR	1933055	PrimaryExpression	"""Should never happen: ComparePidAge(%d) failed\\n"""		1932968	0					
ANR	1933056	Argument	pid2		1932968	2					
ANR	1933057	Identifier	pid2		1932968	0					
ANR	1933058	ReturnStatement	return 0 ;	663:2:16701:16709	1932968	1	True				
ANR	1933059	PrimaryExpression	0		1932968	0					
ANR	1933060	ReturnStatement	"return CompareFileTime ( & ft1 , & ft2 ) ;"	666:1:16716:16750	1932968	5	True				
ANR	1933061	CallExpression	"CompareFileTime ( & ft1 , & ft2 )"		1932968	0					
ANR	1933062	Callee	CompareFileTime		1932968	0					
ANR	1933063	Identifier	CompareFileTime		1932968	0					
ANR	1933064	ArgumentList	& ft1		1932968	1					
ANR	1933065	Argument	& ft1		1932968	0					
ANR	1933066	UnaryOperationExpression	& ft1		1932968	0					
ANR	1933067	UnaryOperator	&		1932968	0					
ANR	1933068	Identifier	ft1		1932968	1					
ANR	1933069	Argument	& ft2		1932968	1					
ANR	1933070	UnaryOperationExpression	& ft2		1932968	0					
ANR	1933071	UnaryOperator	&		1932968	0					
ANR	1933072	Identifier	ft2		1932968	1					
ANR	1933073	ReturnType	int		1932968	1					
ANR	1933074	Identifier	CSysinfo :: ComparePidAge		1932968	2					
ANR	1933075	ParameterList	"pid_t pid1 , pid_t pid2"		1932968	3					
ANR	1933076	Parameter	pid_t pid1	647:24:16313:16322	1932968	0	True				
ANR	1933077	ParameterType	pid_t		1932968	0					
ANR	1933078	Identifier	pid1		1932968	1					
ANR	1933079	Parameter	pid_t pid2	647:36:16325:16334	1932968	1	True				
ANR	1933080	ParameterType	pid_t		1932968	0					
ANR	1933081	Identifier	pid2		1932968	1					
ANR	1933082	CFGEntryNode	ENTRY		1932968		True				
ANR	1933083	CFGExitNode	EXIT		1932968		True				
ANR	1933084	Symbol	pid1		1932968						
ANR	1933085	Symbol	ft1		1932968						
ANR	1933086	Symbol	pid2		1932968						
ANR	1933087	Symbol	ft2		1932968						
ANR	1933088	Symbol	CompareFileTime		1932968						
ANR	1933089	Symbol	D_ALWAYS		1932968						
ANR	1933090	Symbol	& ft2		1932968						
ANR	1933091	Symbol	& ft1		1932968						
ANR	1933092	Symbol	GetProcessBirthday		1932968						
