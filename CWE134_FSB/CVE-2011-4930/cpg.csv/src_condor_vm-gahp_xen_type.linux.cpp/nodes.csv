command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5039591	File	data/converged/CVE-2011-4930_htcondor/src_condor_vm-gahp_xen_type.linux.cpp								
ANR	5039592	DeclStmt									
ANR	5039593	Decl							define XEN_CKPT_TIMESTAMP_FILE XEN_MEM_SAVED_FILE XEN_CKPT_TIMESTAMP_FILE_SUFFIX extern VMGahp	define XEN_CKPT_TIMESTAMP_FILE XEN_MEM_SAVED_FILE XEN_CKPT_TIMESTAMP_FILE_SUFFIX extern VMGahp *	vmgahp
ANR	5039594	Function	VirshType :: VirshType	48:0:1600:1881							
ANR	5039595	FunctionDef	"VirshType :: VirshType (const char * workingpath , ClassAd * ad)"		5039594	0					
ANR	5039596	CompoundStatement		49:0:1696:1881	5039594	0					
ANR	5039597	ExpressionStatement	m_cputime_before_suspend = 0	50:1:1699:1727	5039594	0	True				
ANR	5039598	AssignmentExpression	m_cputime_before_suspend = 0		5039594	0		=			
ANR	5039599	Identifier	m_cputime_before_suspend		5039594	0					
ANR	5039600	PrimaryExpression	0		5039594	1					
ANR	5039601	ExpressionStatement	m_xen_hw_vt = false	51:1:1730:1749	5039594	1	True				
ANR	5039602	AssignmentExpression	m_xen_hw_vt = false		5039594	0		=			
ANR	5039603	Identifier	m_xen_hw_vt		5039594	0					
ANR	5039604	Identifier	false		5039594	1					
ANR	5039605	ExpressionStatement	m_allow_hw_vt_suspend = false	52:1:1752:1781	5039594	2	True				
ANR	5039606	AssignmentExpression	m_allow_hw_vt_suspend = false		5039594	0		=			
ANR	5039607	Identifier	m_allow_hw_vt_suspend		5039594	0					
ANR	5039608	Identifier	false		5039594	1					
ANR	5039609	ExpressionStatement	m_restart_with_ckpt = false	53:1:1784:1811	5039594	3	True				
ANR	5039610	AssignmentExpression	m_restart_with_ckpt = false		5039594	0		=			
ANR	5039611	Identifier	m_restart_with_ckpt		5039594	0					
ANR	5039612	Identifier	false		5039594	1					
ANR	5039613	ExpressionStatement	m_has_transferred_disk_file = false	54:1:1814:1849	5039594	4	True				
ANR	5039614	AssignmentExpression	m_has_transferred_disk_file = false		5039594	0		=			
ANR	5039615	Identifier	m_has_transferred_disk_file		5039594	0					
ANR	5039616	Identifier	false		5039594	1					
ANR	5039617	ExpressionStatement	m_libvirt_connection = NULL	55:1:1852:1879	5039594	5	True				
ANR	5039618	AssignmentExpression	m_libvirt_connection = NULL		5039594	0		=			
ANR	5039619	Identifier	m_libvirt_connection		5039594	0					
ANR	5039620	Identifier	NULL		5039594	1					
ANR	5039621	Identifier	VirshType :: VirshType		5039594	1					
ANR	5039622	ParameterList	"const char * workingpath , ClassAd * ad"		5039594	2					
ANR	5039623	Parameter	const char * workingpath	48:21:1621:1643	5039594	0	True				
ANR	5039624	ParameterType	const char *		5039594	0					
ANR	5039625	Identifier	workingpath		5039594	1					
ANR	5039626	Parameter	ClassAd * ad	48:45:1645:1655	5039594	1	True				
ANR	5039627	ParameterType	ClassAd *		5039594	0					
ANR	5039628	Identifier	ad		5039594	1					
ANR	5039629	CFGEntryNode	ENTRY		5039594		True				
ANR	5039630	CFGExitNode	EXIT		5039594		True				
ANR	5039631	Symbol	m_restart_with_ckpt		5039594						
ANR	5039632	Symbol	ad		5039594						
ANR	5039633	Symbol	m_libvirt_connection		5039594						
ANR	5039634	Symbol	NULL		5039594						
ANR	5039635	Symbol	m_cputime_before_suspend		5039594						
ANR	5039636	Symbol	workingpath		5039594						
ANR	5039637	Symbol	m_allow_hw_vt_suspend		5039594						
ANR	5039638	Symbol	false		5039594						
ANR	5039639	Symbol	m_xen_hw_vt		5039594						
ANR	5039640	Symbol	m_has_transferred_disk_file		5039594						
ANR	5039641	Function	VirshType :: ~VirshType	58:0:1884:2223							
ANR	5039642	FunctionDef	VirshType :: ~VirshType ()		5039641	0					
ANR	5039643	CompoundStatement		59:0:1908:2223	5039641	0					
ANR	5039644	IdentifierDeclStatement	priv_state old_priv = set_user_priv ( ) ;	60:1:1911:1948	5039641	0	True				
ANR	5039645	IdentifierDecl	old_priv = set_user_priv ( )		5039641	0					
ANR	5039646	IdentifierDeclType	priv_state		5039641	0					
ANR	5039647	Identifier	old_priv		5039641	1					
ANR	5039648	AssignmentExpression	old_priv = set_user_priv ( )		5039641	2		=			
ANR	5039649	Identifier	old_priv		5039641	0					
ANR	5039650	CallExpression	set_user_priv ( )		5039641	1					
ANR	5039651	Callee	set_user_priv		5039641	0					
ANR	5039652	Identifier	set_user_priv		5039641	0					
ANR	5039653	ArgumentList			5039641	1					
ANR	5039654	ExpressionStatement	Shutdown ( )	61:1:1951:1961	5039641	1	True				
ANR	5039655	CallExpression	Shutdown ( )		5039641	0					
ANR	5039656	Callee	Shutdown		5039641	0					
ANR	5039657	Identifier	Shutdown		5039641	0					
ANR	5039658	ArgumentList			5039641	1					
ANR	5039659	ExpressionStatement	set_priv ( old_priv )	62:1:1964:1984	5039641	2	True				
ANR	5039660	CallExpression	set_priv ( old_priv )		5039641	0					
ANR	5039661	Callee	set_priv		5039641	0					
ANR	5039662	Identifier	set_priv		5039641	0					
ANR	5039663	ArgumentList	old_priv		5039641	1					
ANR	5039664	Argument	old_priv		5039641	0					
ANR	5039665	Identifier	old_priv		5039641	0					
ANR	5039666	IfStatement	if ( getVMStatus ( ) != VM_STOPPED )		5039641	3					
ANR	5039667	Condition	getVMStatus ( ) != VM_STOPPED	64:5:1992:2018	5039641	0	True				
ANR	5039668	EqualityExpression	getVMStatus ( ) != VM_STOPPED		5039641	0		!=			
ANR	5039669	CallExpression	getVMStatus ( )		5039641	0					
ANR	5039670	Callee	getVMStatus		5039641	0					
ANR	5039671	Identifier	getVMStatus		5039641	0					
ANR	5039672	ArgumentList			5039641	1					
ANR	5039673	Identifier	VM_STOPPED		5039641	1					
ANR	5039674	CompoundStatement		6:35:113:113	5039641	1					
ANR	5039675	ExpressionStatement	killVM ( )	66:2:2053:2061	5039641	0	True				
ANR	5039676	CallExpression	killVM ( )		5039641	0					
ANR	5039677	Callee	killVM		5039641	0					
ANR	5039678	Identifier	killVM		5039641	0					
ANR	5039679	ArgumentList			5039641	1					
ANR	5039680	ExpressionStatement	setVMStatus ( VM_STOPPED )	68:1:2067:2090	5039641	4	True				
ANR	5039681	CallExpression	setVMStatus ( VM_STOPPED )		5039641	0					
ANR	5039682	Callee	setVMStatus		5039641	0					
ANR	5039683	Identifier	setVMStatus		5039641	0					
ANR	5039684	ArgumentList	VM_STOPPED		5039641	1					
ANR	5039685	Argument	VM_STOPPED		5039641	0					
ANR	5039686	Identifier	VM_STOPPED		5039641	0					
ANR	5039687	IdentifierDeclStatement	XenDisk * disk = NULL ;	70:1:2094:2114	5039641	5	True				
ANR	5039688	IdentifierDecl	* disk = NULL		5039641	0					
ANR	5039689	IdentifierDeclType	XenDisk *		5039641	0					
ANR	5039690	Identifier	disk		5039641	1					
ANR	5039691	AssignmentExpression	* disk = NULL		5039641	2		=			
ANR	5039692	Identifier	NULL		5039641	0					
ANR	5039693	Identifier	NULL		5039641	1					
ANR	5039694	ExpressionStatement	m_disk_list . Rewind ( )	71:1:2117:2137	5039641	6	True				
ANR	5039695	CallExpression	m_disk_list . Rewind ( )		5039641	0					
ANR	5039696	Callee	m_disk_list . Rewind		5039641	0					
ANR	5039697	MemberAccess	m_disk_list . Rewind		5039641	0					
ANR	5039698	Identifier	m_disk_list		5039641	0					
ANR	5039699	Identifier	Rewind		5039641	1					
ANR	5039700	ArgumentList			5039641	1					
ANR	5039701	WhileStatement	while ( m_disk_list . Next ( disk ) )		5039641	7					
ANR	5039702	Condition	m_disk_list . Next ( disk )	72:8:2147:2168	5039641	0	True				
ANR	5039703	CallExpression	m_disk_list . Next ( disk )		5039641	0					
ANR	5039704	Callee	m_disk_list . Next		5039641	0					
ANR	5039705	MemberAccess	m_disk_list . Next		5039641	0					
ANR	5039706	Identifier	m_disk_list		5039641	0					
ANR	5039707	Identifier	Next		5039641	1					
ANR	5039708	ArgumentList	disk		5039641	1					
ANR	5039709	Argument	disk		5039641	0					
ANR	5039710	Identifier	disk		5039641	0					
ANR	5039711	CompoundStatement		14:33:263:263	5039641	1					
ANR	5039712	ExpressionStatement	m_disk_list . DeleteCurrent ( )	73:2:2176:2203	5039641	0	True				
ANR	5039713	CallExpression	m_disk_list . DeleteCurrent ( )		5039641	0					
ANR	5039714	Callee	m_disk_list . DeleteCurrent		5039641	0					
ANR	5039715	MemberAccess	m_disk_list . DeleteCurrent		5039641	0					
ANR	5039716	Identifier	m_disk_list		5039641	0					
ANR	5039717	Identifier	DeleteCurrent		5039641	1					
ANR	5039718	ArgumentList			5039641	1					
ANR	5039719	Statement	delete	74:2:2207:2212	5039641	1	True				
ANR	5039720	ExpressionStatement	disk	74:9:2214:2218	5039641	2	True				
ANR	5039721	Identifier	disk		5039641	0					
ANR	5039722	Identifier	VirshType :: ~VirshType		5039641	1					
ANR	5039723	ParameterList			5039641	2					
ANR	5039724	CFGEntryNode	ENTRY		5039641		True				
ANR	5039725	CFGExitNode	EXIT		5039641		True				
ANR	5039726	Symbol	old_priv		5039641						
ANR	5039727	Symbol	disk		5039641						
ANR	5039728	Symbol	NULL		5039641						
ANR	5039729	Symbol	m_disk_list		5039641						
ANR	5039730	Symbol	m_disk_list . Next		5039641						
ANR	5039731	Symbol	getVMStatus		5039641						
ANR	5039732	Symbol	set_user_priv		5039641						
ANR	5039733	Symbol	VM_STOPPED		5039641						
ANR	5039734	Function	VirshType :: Config	78:0:2226:3227							
ANR	5039735	FunctionDef	VirshType :: Config ()		5039734	0					
ANR	5039736	CompoundStatement		80:0:2251:3227	5039734	0					
ANR	5039737	IdentifierDeclStatement	char * config_value = NULL ;	81:1:2254:2279	5039734	0	True				
ANR	5039738	IdentifierDecl	* config_value = NULL		5039734	0					
ANR	5039739	IdentifierDeclType	char *		5039734	0					
ANR	5039740	Identifier	config_value		5039734	1					
ANR	5039741	AssignmentExpression	* config_value = NULL		5039734	2		=			
ANR	5039742	Identifier	NULL		5039734	0					
ANR	5039743	Identifier	NULL		5039734	1					
ANR	5039744	ExpressionStatement	"config_value = param ( ""VM_NETWORKING_BRIDGE_INTERFACE"" )"	83:1:2283:2337	5039734	1	True				
ANR	5039745	AssignmentExpression	"config_value = param ( ""VM_NETWORKING_BRIDGE_INTERFACE"" )"		5039734	0		=			
ANR	5039746	Identifier	config_value		5039734	0					
ANR	5039747	CallExpression	"param ( ""VM_NETWORKING_BRIDGE_INTERFACE"" )"		5039734	1					
ANR	5039748	Callee	param		5039734	0					
ANR	5039749	Identifier	param		5039734	0					
ANR	5039750	ArgumentList	"""VM_NETWORKING_BRIDGE_INTERFACE"""		5039734	1					
ANR	5039751	Argument	"""VM_NETWORKING_BRIDGE_INTERFACE"""		5039734	0					
ANR	5039752	PrimaryExpression	"""VM_NETWORKING_BRIDGE_INTERFACE"""		5039734	0					
ANR	5039753	IfStatement	if ( config_value )		5039734	2					
ANR	5039754	Condition	config_value	84:5:2344:2355	5039734	0	True				
ANR	5039755	Identifier	config_value		5039734	0					
ANR	5039756	CompoundStatement		5:20:107:107	5039734	1					
ANR	5039757	ExpressionStatement	m_vm_bridge_interface = delete_quotation_marks ( config_value ) . Value ( )	85:2:2363:2431	5039734	0	True				
ANR	5039758	AssignmentExpression	m_vm_bridge_interface = delete_quotation_marks ( config_value ) . Value ( )		5039734	0		=			
ANR	5039759	Identifier	m_vm_bridge_interface		5039734	0					
ANR	5039760	CallExpression	delete_quotation_marks ( config_value ) . Value ( )		5039734	1					
ANR	5039761	Callee	delete_quotation_marks ( config_value ) . Value		5039734	0					
ANR	5039762	MemberAccess	delete_quotation_marks ( config_value ) . Value		5039734	0					
ANR	5039763	CallExpression	delete_quotation_marks ( config_value )		5039734	0					
ANR	5039764	Callee	delete_quotation_marks		5039734	0					
ANR	5039765	Identifier	delete_quotation_marks		5039734	0					
ANR	5039766	ArgumentList	config_value		5039734	1					
ANR	5039767	Argument	config_value		5039734	0					
ANR	5039768	Identifier	config_value		5039734	0					
ANR	5039769	Identifier	Value		5039734	1					
ANR	5039770	ArgumentList			5039734	1					
ANR	5039771	ExpressionStatement	free ( config_value )	86:2:2435:2453	5039734	1	True				
ANR	5039772	CallExpression	free ( config_value )		5039734	0					
ANR	5039773	Callee	free		5039734	0					
ANR	5039774	Identifier	free		5039734	0					
ANR	5039775	ArgumentList	config_value		5039734	1					
ANR	5039776	Argument	config_value		5039734	0					
ANR	5039777	Identifier	config_value		5039734	0					
ANR	5039778	ElseStatement	else		5039734	0					
ANR	5039779	IfStatement	"if ( vmgahp -> m_gahp_config -> m_vm_networking_types . contains ( ""bridge"" ) == true )"		5039734	0					
ANR	5039780	Condition	"vmgahp -> m_gahp_config -> m_vm_networking_types . contains ( ""bridge"" ) == true"	87:12:2467:2537	5039734	0	True				
ANR	5039781	EqualityExpression	"vmgahp -> m_gahp_config -> m_vm_networking_types . contains ( ""bridge"" ) == true"		5039734	0		==			
ANR	5039782	CallExpression	"vmgahp -> m_gahp_config -> m_vm_networking_types . contains ( ""bridge"" )"		5039734	0					
ANR	5039783	Callee	vmgahp -> m_gahp_config -> m_vm_networking_types . contains		5039734	0					
ANR	5039784	MemberAccess	vmgahp -> m_gahp_config -> m_vm_networking_types . contains		5039734	0					
ANR	5039785	PtrMemberAccess	vmgahp -> m_gahp_config -> m_vm_networking_types		5039734	0					
ANR	5039786	PtrMemberAccess	vmgahp -> m_gahp_config		5039734	0					
ANR	5039787	Identifier	vmgahp		5039734	0					
ANR	5039788	Identifier	m_gahp_config		5039734	1					
ANR	5039789	Identifier	m_vm_networking_types		5039734	1					
ANR	5039790	Identifier	contains		5039734	1					
ANR	5039791	ArgumentList	"""bridge"""		5039734	1					
ANR	5039792	Argument	"""bridge"""		5039734	0					
ANR	5039793	PrimaryExpression	"""bridge"""		5039734	0					
ANR	5039794	Identifier	true		5039734	1					
ANR	5039795	CompoundStatement		8:85:288:288	5039734	1					
ANR	5039796	Statement	vmprintf	88:2:2544:2551	5039734	0	True				
ANR	5039797	Statement	(	88:10:2552:2552	5039734	1	True				
ANR	5039798	Statement	D_ALWAYS	88:12:2554:2561	5039734	2	True				
ANR	5039799	Statement	","	88:20:2562:2562	5039734	3	True				
ANR	5039800	Statement	"""ERROR: 'VM_NETWORKING_TYPE' contains """	88:22:2564:2602	5039734	4	True				
ANR	5039801	Statement	"""'bridge' but VM_NETWORKING_BRIDGE_INTERFACE """	89:4:2608:2653	5039734	5	True				
ANR	5039802	Statement	"""isn't defined, so 'bridge' """	90:4:2659:2687	5039734	6	True				
ANR	5039803	Statement	"""networking is disabled\\n"""	91:4:2693:2718	5039734	7	True				
ANR	5039804	Statement	)	91:30:2719:2719	5039734	8	True				
ANR	5039805	ExpressionStatement		91:31:2720:2720	5039734	9	True				
ANR	5039806	ExpressionStatement	"vmgahp -> m_gahp_config -> m_vm_networking_types . remove ( ""bridge"" )"	92:2:2724:2785	5039734	10	True				
ANR	5039807	CallExpression	"vmgahp -> m_gahp_config -> m_vm_networking_types . remove ( ""bridge"" )"		5039734	0					
ANR	5039808	Callee	vmgahp -> m_gahp_config -> m_vm_networking_types . remove		5039734	0					
ANR	5039809	MemberAccess	vmgahp -> m_gahp_config -> m_vm_networking_types . remove		5039734	0					
ANR	5039810	PtrMemberAccess	vmgahp -> m_gahp_config -> m_vm_networking_types		5039734	0					
ANR	5039811	PtrMemberAccess	vmgahp -> m_gahp_config		5039734	0					
ANR	5039812	Identifier	vmgahp		5039734	0					
ANR	5039813	Identifier	m_gahp_config		5039734	1					
ANR	5039814	Identifier	m_vm_networking_types		5039734	1					
ANR	5039815	Identifier	remove		5039734	1					
ANR	5039816	ArgumentList	"""bridge"""		5039734	1					
ANR	5039817	Argument	"""bridge"""		5039734	0					
ANR	5039818	PrimaryExpression	"""bridge"""		5039734	0					
ANR	5039819	IfStatement	if ( vmgahp -> m_gahp_config -> m_vm_networking_types . isEmpty ( ) )		5039734	11					
ANR	5039820	Condition	vmgahp -> m_gahp_config -> m_vm_networking_types . isEmpty ( )	93:6:2793:2846	5039734	0	True				
ANR	5039821	CallExpression	vmgahp -> m_gahp_config -> m_vm_networking_types . isEmpty ( )		5039734	0					
ANR	5039822	Callee	vmgahp -> m_gahp_config -> m_vm_networking_types . isEmpty		5039734	0					
ANR	5039823	MemberAccess	vmgahp -> m_gahp_config -> m_vm_networking_types . isEmpty		5039734	0					
ANR	5039824	PtrMemberAccess	vmgahp -> m_gahp_config -> m_vm_networking_types		5039734	0					
ANR	5039825	PtrMemberAccess	vmgahp -> m_gahp_config		5039734	0					
ANR	5039826	Identifier	vmgahp		5039734	0					
ANR	5039827	Identifier	m_gahp_config		5039734	1					
ANR	5039828	Identifier	m_vm_networking_types		5039734	1					
ANR	5039829	Identifier	isEmpty		5039734	1					
ANR	5039830	ArgumentList			5039734	1					
ANR	5039831	CompoundStatement		14:63:598:598	5039734	1					
ANR	5039832	Statement	vmprintf	94:3:2855:2862	5039734	0	True				
ANR	5039833	Statement	(	94:11:2863:2863	5039734	1	True				
ANR	5039834	Statement	D_ALWAYS	94:13:2865:2872	5039734	2	True				
ANR	5039835	Statement	","	94:21:2873:2873	5039734	3	True				
ANR	5039836	Statement	"""ERROR: 'VM_NETWORKING' is true """	94:23:2875:2907	5039734	4	True				
ANR	5039837	Statement	"""but 'VM_NETWORKING_TYPE' contains """	95:5:2914:2949	5039734	5	True				
ANR	5039838	Statement	"""no valid entries, so 'VM_NETWORKING' """	96:5:2956:2994	5039734	6	True				
ANR	5039839	Statement	"""is disabled\\n"""	97:5:3001:3015	5039734	7	True				
ANR	5039840	Statement	)	97:20:3016:3016	5039734	8	True				
ANR	5039841	ExpressionStatement		97:21:3017:3017	5039734	9	True				
ANR	5039842	ExpressionStatement	vmgahp -> m_gahp_config -> m_vm_networking = false	98:3:3022:3068	5039734	10	True				
ANR	5039843	AssignmentExpression	vmgahp -> m_gahp_config -> m_vm_networking = false		5039734	0		=			
ANR	5039844	PtrMemberAccess	vmgahp -> m_gahp_config -> m_vm_networking		5039734	0					
ANR	5039845	PtrMemberAccess	vmgahp -> m_gahp_config		5039734	0					
ANR	5039846	Identifier	vmgahp		5039734	0					
ANR	5039847	Identifier	m_gahp_config		5039734	1					
ANR	5039848	Identifier	m_vm_networking		5039734	1					
ANR	5039849	Identifier	false		5039734	1					
ANR	5039850	ElseStatement	else		5039734	0					
ANR	5039851	CompoundStatement		20:9:827:827	5039734	0					
ANR	5039852	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Setting default networking type to 'nat'\\n"" )"	100:3:3084:3154	5039734	0	True				
ANR	5039853	CallExpression	"vmprintf ( D_ALWAYS , ""Setting default networking type to 'nat'\\n"" )"		5039734	0					
ANR	5039854	Callee	vmprintf		5039734	0					
ANR	5039855	Identifier	vmprintf		5039734	0					
ANR	5039856	ArgumentList	D_ALWAYS		5039734	1					
ANR	5039857	Argument	D_ALWAYS		5039734	0					
ANR	5039858	Identifier	D_ALWAYS		5039734	0					
ANR	5039859	Argument	"""Setting default networking type to 'nat'\\n"""		5039734	1					
ANR	5039860	PrimaryExpression	"""Setting default networking type to 'nat'\\n"""		5039734	0					
ANR	5039861	ExpressionStatement	"vmgahp -> m_gahp_config -> m_vm_default_networking_type = ""nat"""	102:3:3159:3218	5039734	1	True				
ANR	5039862	AssignmentExpression	"vmgahp -> m_gahp_config -> m_vm_default_networking_type = ""nat"""		5039734	0		=			
ANR	5039863	PtrMemberAccess	vmgahp -> m_gahp_config -> m_vm_default_networking_type		5039734	0					
ANR	5039864	PtrMemberAccess	vmgahp -> m_gahp_config		5039734	0					
ANR	5039865	Identifier	vmgahp		5039734	0					
ANR	5039866	Identifier	m_gahp_config		5039734	1					
ANR	5039867	Identifier	m_vm_default_networking_type		5039734	1					
ANR	5039868	PrimaryExpression	"""nat"""		5039734	1					
ANR	5039869	ReturnType	void		5039734	1					
ANR	5039870	Identifier	VirshType :: Config		5039734	2					
ANR	5039871	ParameterList			5039734	3					
ANR	5039872	CFGEntryNode	ENTRY		5039734		True				
ANR	5039873	CFGExitNode	EXIT		5039734		True				
ANR	5039874	Symbol	config_value		5039734						
ANR	5039875	Symbol	m_vm_bridge_interface		5039734						
ANR	5039876	Symbol	NULL		5039734						
ANR	5039877	Symbol	vmgahp -> m_gahp_config -> m_vm_networking_types . isEmpty		5039734						
ANR	5039878	Symbol	vmgahp -> m_gahp_config -> m_vm_networking_types		5039734						
ANR	5039879	Symbol	false		5039734						
ANR	5039880	Symbol	D_ALWAYS		5039734						
ANR	5039881	Symbol	delete_quotation_marks		5039734						
ANR	5039882	Symbol	vmgahp -> m_gahp_config -> m_vm_default_networking_type		5039734						
ANR	5039883	Symbol	* vmgahp		5039734						
ANR	5039884	Symbol	vmgahp -> m_gahp_config -> m_vm_networking		5039734						
ANR	5039885	Symbol	* vmgahp -> m_gahp_config		5039734						
ANR	5039886	Symbol	param		5039734						
ANR	5039887	Symbol	vmgahp		5039734						
ANR	5039888	Symbol	delete_quotation_marks ( config_value ) . Value		5039734						
ANR	5039889	Symbol	true		5039734						
ANR	5039890	Symbol	vmgahp -> m_gahp_config -> m_vm_networking_types . contains		5039734						
ANR	5039891	Symbol	* * vmgahp		5039734						
ANR	5039892	Symbol	vmgahp -> m_gahp_config		5039734						
ANR	5039893	Function	VirshType :: Start	107:0:3230:5221							
ANR	5039894	FunctionDef	VirshType :: Start ()		5039893	0					
ANR	5039895	CompoundStatement		109:0:3254:5221	5039893	0					
ANR	5039896	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::Start\\n"" )"	110:1:3257:3307	5039893	0	True				
ANR	5039897	CallExpression	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::Start\\n"" )"		5039893	0					
ANR	5039898	Callee	vmprintf		5039893	0					
ANR	5039899	Identifier	vmprintf		5039893	0					
ANR	5039900	ArgumentList	D_FULLDEBUG		5039893	1					
ANR	5039901	Argument	D_FULLDEBUG		5039893	0					
ANR	5039902	Identifier	D_FULLDEBUG		5039893	0					
ANR	5039903	Argument	"""Inside VirshType::Start\\n"""		5039893	1					
ANR	5039904	PrimaryExpression	"""Inside VirshType::Start\\n"""		5039893	0					
ANR	5039905	IfStatement	if ( ( m_configfile . Length ( ) == 0 ) )		5039893	1					
ANR	5039906	Condition	m_configfile . Length ( ) == 0	112:5:3315:3342	5039893	0	True				
ANR	5039907	EqualityExpression	m_configfile . Length ( ) == 0		5039893	0		==			
ANR	5039908	CallExpression	m_configfile . Length ( )		5039893	0					
ANR	5039909	Callee	m_configfile . Length		5039893	0					
ANR	5039910	MemberAccess	m_configfile . Length		5039893	0					
ANR	5039911	Identifier	m_configfile		5039893	0					
ANR	5039912	Identifier	Length		5039893	1					
ANR	5039913	ArgumentList			5039893	1					
ANR	5039914	PrimaryExpression	0		5039893	1					
ANR	5039915	CompoundStatement		4:35:90:90	5039893	1					
ANR	5039916	ExpressionStatement	m_result_msg = VMGAHP_ERR_INTERNAL	114:9:3357:3391	5039893	0	True				
ANR	5039917	AssignmentExpression	m_result_msg = VMGAHP_ERR_INTERNAL		5039893	0		=			
ANR	5039918	Identifier	m_result_msg		5039893	0					
ANR	5039919	Identifier	VMGAHP_ERR_INTERNAL		5039893	1					
ANR	5039920	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""Config file was not set configfile: %s\\n"" , m_configfile . Value ( ) )"	115:2:3395:3482	5039893	1	True				
ANR	5039921	CallExpression	"vmprintf ( D_FULLDEBUG , ""Config file was not set configfile: %s\\n"" , m_configfile . Value ( ) )"		5039893	0					
ANR	5039922	Callee	vmprintf		5039893	0					
ANR	5039923	Identifier	vmprintf		5039893	0					
ANR	5039924	ArgumentList	D_FULLDEBUG		5039893	1					
ANR	5039925	Argument	D_FULLDEBUG		5039893	0					
ANR	5039926	Identifier	D_FULLDEBUG		5039893	0					
ANR	5039927	Argument	"""Config file was not set configfile: %s\\n"""		5039893	1					
ANR	5039928	PrimaryExpression	"""Config file was not set configfile: %s\\n"""		5039893	0					
ANR	5039929	Argument	m_configfile . Value ( )		5039893	2					
ANR	5039930	CallExpression	m_configfile . Value ( )		5039893	0					
ANR	5039931	Callee	m_configfile . Value		5039893	0					
ANR	5039932	MemberAccess	m_configfile . Value		5039893	0					
ANR	5039933	Identifier	m_configfile		5039893	0					
ANR	5039934	Identifier	Value		5039893	1					
ANR	5039935	ArgumentList			5039893	1					
ANR	5039936	ReturnStatement	return false ;	116:2:3486:3498	5039893	2	True				
ANR	5039937	Identifier	false		5039893	0					
ANR	5039938	IfStatement	if ( getVMStatus ( ) != VM_STOPPED )		5039893	2					
ANR	5039939	Condition	getVMStatus ( ) != VM_STOPPED	119:5:3509:3535	5039893	0	True				
ANR	5039940	EqualityExpression	getVMStatus ( ) != VM_STOPPED		5039893	0		!=			
ANR	5039941	CallExpression	getVMStatus ( )		5039893	0					
ANR	5039942	Callee	getVMStatus		5039893	0					
ANR	5039943	Identifier	getVMStatus		5039893	0					
ANR	5039944	ArgumentList			5039893	1					
ANR	5039945	Identifier	VM_STOPPED		5039893	1					
ANR	5039946	CompoundStatement		11:35:284:284	5039893	1					
ANR	5039947	ExpressionStatement	m_result_msg = VMGAHP_ERR_VM_INVALID_OPERATION	120:2:3543:3589	5039893	0	True				
ANR	5039948	AssignmentExpression	m_result_msg = VMGAHP_ERR_VM_INVALID_OPERATION		5039893	0		=			
ANR	5039949	Identifier	m_result_msg		5039893	0					
ANR	5039950	Identifier	VMGAHP_ERR_VM_INVALID_OPERATION		5039893	1					
ANR	5039951	ReturnStatement	return false ;	121:2:3593:3605	5039893	1	True				
ANR	5039952	Identifier	false		5039893	0					
ANR	5039953	IfStatement	if ( m_restart_with_ckpt )		5039893	3					
ANR	5039954	Condition	m_restart_with_ckpt	124:5:3616:3634	5039893	0	True				
ANR	5039955	Identifier	m_restart_with_ckpt		5039893	0					
ANR	5039956	CompoundStatement		17:2:387:406	5039893	1					
ANR	5039957	IdentifierDeclStatement	bool res = Resume ( ) ;	125:2:3642:3661	5039893	0	True				
ANR	5039958	IdentifierDecl	res = Resume ( )		5039893	0					
ANR	5039959	IdentifierDeclType	bool		5039893	0					
ANR	5039960	Identifier	res		5039893	1					
ANR	5039961	AssignmentExpression	res = Resume ( )		5039893	2		=			
ANR	5039962	Identifier	res		5039893	0					
ANR	5039963	CallExpression	Resume ( )		5039893	1					
ANR	5039964	Callee	Resume		5039893	0					
ANR	5039965	Identifier	Resume		5039893	0					
ANR	5039966	ArgumentList			5039893	1					
ANR	5039967	IfStatement	if ( res )		5039893	1					
ANR	5039968	Condition	res	126:6:3669:3671	5039893	0	True				
ANR	5039969	Identifier	res		5039893	0					
ANR	5039970	CompoundStatement		18:12:420:420	5039893	1					
ANR	5039971	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Succeeded to restart with checkpointed files\\n"" )"	128:3:3696:3764	5039893	0	True				
ANR	5039972	CallExpression	"vmprintf ( D_ALWAYS , ""Succeeded to restart with checkpointed files\\n"" )"		5039893	0					
ANR	5039973	Callee	vmprintf		5039893	0					
ANR	5039974	Identifier	vmprintf		5039893	0					
ANR	5039975	ArgumentList	D_ALWAYS		5039893	1					
ANR	5039976	Argument	D_ALWAYS		5039893	0					
ANR	5039977	Identifier	D_ALWAYS		5039893	0					
ANR	5039978	Argument	"""Succeeded to restart with checkpointed files\\n"""		5039893	1					
ANR	5039979	PrimaryExpression	"""Succeeded to restart with checkpointed files\\n"""		5039893	0					
ANR	5039980	ExpressionStatement	updateAllWriteDiskTimestamp ( time ( NULL ) )	131:3:3837:3876	5039893	1	True				
ANR	5039981	CallExpression	updateAllWriteDiskTimestamp ( time ( NULL ) )		5039893	0					
ANR	5039982	Callee	updateAllWriteDiskTimestamp		5039893	0					
ANR	5039983	Identifier	updateAllWriteDiskTimestamp		5039893	0					
ANR	5039984	ArgumentList	time ( NULL )		5039893	1					
ANR	5039985	Argument	time ( NULL )		5039893	0					
ANR	5039986	CallExpression	time ( NULL )		5039893	0					
ANR	5039987	Callee	time		5039893	0					
ANR	5039988	Identifier	time		5039893	0					
ANR	5039989	ArgumentList	NULL		5039893	1					
ANR	5039990	Argument	NULL		5039893	0					
ANR	5039991	Identifier	NULL		5039893	0					
ANR	5039992	ExpressionStatement	m_start_time . getTime ( )	132:3:3881:3903	5039893	2	True				
ANR	5039993	CallExpression	m_start_time . getTime ( )		5039893	0					
ANR	5039994	Callee	m_start_time . getTime		5039893	0					
ANR	5039995	MemberAccess	m_start_time . getTime		5039893	0					
ANR	5039996	Identifier	m_start_time		5039893	0					
ANR	5039997	Identifier	getTime		5039893	1					
ANR	5039998	ArgumentList			5039893	1					
ANR	5039999	ReturnStatement	return true ;	133:3:3908:3919	5039893	3	True				
ANR	5040000	Identifier	true		5039893	0					
ANR	5040001	ElseStatement	else		5039893	0					
ANR	5040002	CompoundStatement		26:8:674:674	5039893	0					
ANR	5040003	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Failed to restart with checkpointed files\\n"" )"	136:3:3982:4047	5039893	0	True				
ANR	5040004	CallExpression	"vmprintf ( D_ALWAYS , ""Failed to restart with checkpointed files\\n"" )"		5039893	0					
ANR	5040005	Callee	vmprintf		5039893	0					
ANR	5040006	Identifier	vmprintf		5039893	0					
ANR	5040007	ArgumentList	D_ALWAYS		5039893	1					
ANR	5040008	Argument	D_ALWAYS		5039893	0					
ANR	5040009	Identifier	D_ALWAYS		5039893	0					
ANR	5040010	Argument	"""Failed to restart with checkpointed files\\n"""		5039893	1					
ANR	5040011	PrimaryExpression	"""Failed to restart with checkpointed files\\n"""		5039893	0					
ANR	5040012	ExpressionStatement	"vmprintf ( D_ALWAYS , ""So, we will try to create a new configuration file\\n"" )"	137:3:4052:4126	5039893	1	True				
ANR	5040013	CallExpression	"vmprintf ( D_ALWAYS , ""So, we will try to create a new configuration file\\n"" )"		5039893	0					
ANR	5040014	Callee	vmprintf		5039893	0					
ANR	5040015	Identifier	vmprintf		5039893	0					
ANR	5040016	ArgumentList	D_ALWAYS		5039893	1					
ANR	5040017	Argument	D_ALWAYS		5039893	0					
ANR	5040018	Identifier	D_ALWAYS		5039893	0					
ANR	5040019	Argument	"""So, we will try to create a new configuration file\\n"""		5039893	1					
ANR	5040020	PrimaryExpression	"""So, we will try to create a new configuration file\\n"""		5039893	0					
ANR	5040021	ExpressionStatement	deleteNonTransferredFiles ( )	139:3:4132:4159	5039893	2	True				
ANR	5040022	CallExpression	deleteNonTransferredFiles ( )		5039893	0					
ANR	5040023	Callee	deleteNonTransferredFiles		5039893	0					
ANR	5040024	Identifier	deleteNonTransferredFiles		5039893	0					
ANR	5040025	ArgumentList			5039893	1					
ANR	5040026	ExpressionStatement	"m_configfile = """""	140:3:4164:4181	5039893	3	True				
ANR	5040027	AssignmentExpression	"m_configfile = """""		5039893	0		=			
ANR	5040028	Identifier	m_configfile		5039893	0					
ANR	5040029	PrimaryExpression	""""""		5039893	1					
ANR	5040030	ExpressionStatement	"m_suspendfile = """""	141:3:4186:4204	5039893	4	True				
ANR	5040031	AssignmentExpression	"m_suspendfile = """""		5039893	0		=			
ANR	5040032	Identifier	m_suspendfile		5039893	0					
ANR	5040033	PrimaryExpression	""""""		5039893	1					
ANR	5040034	ExpressionStatement	m_restart_with_ckpt = false	142:3:4209:4236	5039893	5	True				
ANR	5040035	AssignmentExpression	m_restart_with_ckpt = false		5039893	0		=			
ANR	5040036	Identifier	m_restart_with_ckpt		5039893	0					
ANR	5040037	Identifier	false		5039893	1					
ANR	5040038	IfStatement	if ( this -> CreateConfigFile ( ) == false )		5039893	6					
ANR	5040039	Condition	this -> CreateConfigFile ( ) == false	144:7:4246:4278	5039893	0	True				
ANR	5040040	EqualityExpression	this -> CreateConfigFile ( ) == false		5039893	0		==			
ANR	5040041	CallExpression	this -> CreateConfigFile ( )		5039893	0					
ANR	5040042	Callee	this -> CreateConfigFile		5039893	0					
ANR	5040043	PtrMemberAccess	this -> CreateConfigFile		5039893	0					
ANR	5040044	Identifier	this		5039893	0					
ANR	5040045	Identifier	CreateConfigFile		5039893	1					
ANR	5040046	ArgumentList			5039893	1					
ANR	5040047	Identifier	false		5039893	1					
ANR	5040048	CompoundStatement		36:43:1027:1027	5039893	1					
ANR	5040049	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Failed to create a new configuration files\\n"" )"	145:4:4288:4354	5039893	0	True				
ANR	5040050	CallExpression	"vmprintf ( D_ALWAYS , ""Failed to create a new configuration files\\n"" )"		5039893	0					
ANR	5040051	Callee	vmprintf		5039893	0					
ANR	5040052	Identifier	vmprintf		5039893	0					
ANR	5040053	ArgumentList	D_ALWAYS		5039893	1					
ANR	5040054	Argument	D_ALWAYS		5039893	0					
ANR	5040055	Identifier	D_ALWAYS		5039893	0					
ANR	5040056	Argument	"""Failed to create a new configuration files\\n"""		5039893	1					
ANR	5040057	PrimaryExpression	"""Failed to create a new configuration files\\n"""		5039893	0					
ANR	5040058	ReturnStatement	return false ;	146:4:4360:4372	5039893	1	True				
ANR	5040059	Identifier	false		5039893	0					
ANR	5040060	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""Trying XML: %s\\n"" , m_xml . Value ( ) )"	153:1:4454:4510	5039893	4	True				
ANR	5040061	CallExpression	"vmprintf ( D_FULLDEBUG , ""Trying XML: %s\\n"" , m_xml . Value ( ) )"		5039893	0					
ANR	5040062	Callee	vmprintf		5039893	0					
ANR	5040063	Identifier	vmprintf		5039893	0					
ANR	5040064	ArgumentList	D_FULLDEBUG		5039893	1					
ANR	5040065	Argument	D_FULLDEBUG		5039893	0					
ANR	5040066	Identifier	D_FULLDEBUG		5039893	0					
ANR	5040067	Argument	"""Trying XML: %s\\n"""		5039893	1					
ANR	5040068	PrimaryExpression	"""Trying XML: %s\\n"""		5039893	0					
ANR	5040069	Argument	m_xml . Value ( )		5039893	2					
ANR	5040070	CallExpression	m_xml . Value ( )		5039893	0					
ANR	5040071	Callee	m_xml . Value		5039893	0					
ANR	5040072	MemberAccess	m_xml . Value		5039893	0					
ANR	5040073	Identifier	m_xml		5039893	0					
ANR	5040074	Identifier	Value		5039893	1					
ANR	5040075	ArgumentList			5039893	1					
ANR	5040076	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	154:1:4513:4546	5039893	5	True				
ANR	5040077	IdentifierDecl	priv = set_root_priv ( )		5039893	0					
ANR	5040078	IdentifierDeclType	priv_state		5039893	0					
ANR	5040079	Identifier	priv		5039893	1					
ANR	5040080	AssignmentExpression	priv = set_root_priv ( )		5039893	2		=			
ANR	5040081	Identifier	priv		5039893	0					
ANR	5040082	CallExpression	set_root_priv ( )		5039893	1					
ANR	5040083	Callee	set_root_priv		5039893	0					
ANR	5040084	Identifier	set_root_priv		5039893	0					
ANR	5040085	ArgumentList			5039893	1					
ANR	5040086	IdentifierDeclStatement	"virDomainPtr vm = virDomainCreateXML ( m_libvirt_connection , m_xml . Value ( ) , 0 ) ;"	155:1:4549:4625	5039893	6	True				
ANR	5040087	IdentifierDecl	"vm = virDomainCreateXML ( m_libvirt_connection , m_xml . Value ( ) , 0 )"		5039893	0					
ANR	5040088	IdentifierDeclType	virDomainPtr		5039893	0					
ANR	5040089	Identifier	vm		5039893	1					
ANR	5040090	AssignmentExpression	"vm = virDomainCreateXML ( m_libvirt_connection , m_xml . Value ( ) , 0 )"		5039893	2		=			
ANR	5040091	Identifier	vm		5039893	0					
ANR	5040092	CallExpression	"virDomainCreateXML ( m_libvirt_connection , m_xml . Value ( ) , 0 )"		5039893	1					
ANR	5040093	Callee	virDomainCreateXML		5039893	0					
ANR	5040094	Identifier	virDomainCreateXML		5039893	0					
ANR	5040095	ArgumentList	m_libvirt_connection		5039893	1					
ANR	5040096	Argument	m_libvirt_connection		5039893	0					
ANR	5040097	Identifier	m_libvirt_connection		5039893	0					
ANR	5040098	Argument	m_xml . Value ( )		5039893	1					
ANR	5040099	CallExpression	m_xml . Value ( )		5039893	0					
ANR	5040100	Callee	m_xml . Value		5039893	0					
ANR	5040101	MemberAccess	m_xml . Value		5039893	0					
ANR	5040102	Identifier	m_xml		5039893	0					
ANR	5040103	Identifier	Value		5039893	1					
ANR	5040104	ArgumentList			5039893	1					
ANR	5040105	Argument	0		5039893	2					
ANR	5040106	PrimaryExpression	0		5039893	0					
ANR	5040107	ExpressionStatement	set_priv ( priv )	156:1:4628:4642	5039893	7	True				
ANR	5040108	CallExpression	set_priv ( priv )		5039893	0					
ANR	5040109	Callee	set_priv		5039893	0					
ANR	5040110	Identifier	set_priv		5039893	0					
ANR	5040111	ArgumentList	priv		5039893	1					
ANR	5040112	Argument	priv		5039893	0					
ANR	5040113	Identifier	priv		5039893	0					
ANR	5040114	IfStatement	if ( vm == NULL )		5039893	8					
ANR	5040115	Condition	vm == NULL	158:4:4649:4658	5039893	0	True				
ANR	5040116	EqualityExpression	vm == NULL		5039893	0		==			
ANR	5040117	Identifier	vm		5039893	0					
ANR	5040118	Identifier	NULL		5039893	1					
ANR	5040119	CompoundStatement		54:5:1492:1551	5039893	1					
ANR	5040120	IdentifierDeclStatement	virErrorPtr err = virConnGetLastError ( m_libvirt_connection ) ;	162:5:4747:4806	5039893	0	True				
ANR	5040121	IdentifierDecl	err = virConnGetLastError ( m_libvirt_connection )		5039893	0					
ANR	5040122	IdentifierDeclType	virErrorPtr		5039893	0					
ANR	5040123	Identifier	err		5039893	1					
ANR	5040124	AssignmentExpression	err = virConnGetLastError ( m_libvirt_connection )		5039893	2		=			
ANR	5040125	Identifier	err		5039893	0					
ANR	5040126	CallExpression	virConnGetLastError ( m_libvirt_connection )		5039893	1					
ANR	5040127	Callee	virConnGetLastError		5039893	0					
ANR	5040128	Identifier	virConnGetLastError		5039893	0					
ANR	5040129	ArgumentList	m_libvirt_connection		5039893	1					
ANR	5040130	Argument	m_libvirt_connection		5039893	0					
ANR	5040131	Identifier	m_libvirt_connection		5039893	0					
ANR	5040132	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Failed to create libvirt domain: %s\\n"" , ( err ? err -> message : ""No reason found"" ) )"	163:5:4813:4914	5039893	1	True				
ANR	5040133	CallExpression	"vmprintf ( D_ALWAYS , ""Failed to create libvirt domain: %s\\n"" , ( err ? err -> message : ""No reason found"" ) )"		5039893	0					
ANR	5040134	Callee	vmprintf		5039893	0					
ANR	5040135	Identifier	vmprintf		5039893	0					
ANR	5040136	ArgumentList	D_ALWAYS		5039893	1					
ANR	5040137	Argument	D_ALWAYS		5039893	0					
ANR	5040138	Identifier	D_ALWAYS		5039893	0					
ANR	5040139	Argument	"""Failed to create libvirt domain: %s\\n"""		5039893	1					
ANR	5040140	PrimaryExpression	"""Failed to create libvirt domain: %s\\n"""		5039893	0					
ANR	5040141	Argument	"err ? err -> message : ""No reason found"""		5039893	2					
ANR	5040142	ConditionalExpression	"err ? err -> message : ""No reason found"""		5039893	0					
ANR	5040143	Condition	err		5039893	0					
ANR	5040144	Identifier	err		5039893	0					
ANR	5040145	PtrMemberAccess	err -> message		5039893	1					
ANR	5040146	Identifier	err		5039893	0					
ANR	5040147	Identifier	message		5039893	1					
ANR	5040148	PrimaryExpression	"""No reason found"""		5039893	2					
ANR	5040149	ReturnStatement	return false ;	165:5:4947:4959	5039893	2	True				
ANR	5040150	Identifier	false		5039893	0					
ANR	5040151	ExpressionStatement	priv = set_root_priv ( )	169:1:4969:4991	5039893	9	True				
ANR	5040152	AssignmentExpression	priv = set_root_priv ( )		5039893	0		=			
ANR	5040153	Identifier	priv		5039893	0					
ANR	5040154	CallExpression	set_root_priv ( )		5039893	1					
ANR	5040155	Callee	set_root_priv		5039893	0					
ANR	5040156	Identifier	set_root_priv		5039893	0					
ANR	5040157	ArgumentList			5039893	1					
ANR	5040158	ExpressionStatement	virDomainFree ( vm )	170:1:4994:5011	5039893	10	True				
ANR	5040159	CallExpression	virDomainFree ( vm )		5039893	0					
ANR	5040160	Callee	virDomainFree		5039893	0					
ANR	5040161	Identifier	virDomainFree		5039893	0					
ANR	5040162	ArgumentList	vm		5039893	1					
ANR	5040163	Argument	vm		5039893	0					
ANR	5040164	Identifier	vm		5039893	0					
ANR	5040165	ExpressionStatement	set_priv ( priv )	171:1:5014:5028	5039893	11	True				
ANR	5040166	CallExpression	set_priv ( priv )		5039893	0					
ANR	5040167	Callee	set_priv		5039893	0					
ANR	5040168	Identifier	set_priv		5039893	0					
ANR	5040169	ArgumentList	priv		5039893	1					
ANR	5040170	Argument	priv		5039893	0					
ANR	5040171	Identifier	priv		5039893	0					
ANR	5040172	ExpressionStatement	setVMStatus ( VM_RUNNING )	173:1:5032:5055	5039893	12	True				
ANR	5040173	CallExpression	setVMStatus ( VM_RUNNING )		5039893	0					
ANR	5040174	Callee	setVMStatus		5039893	0					
ANR	5040175	Identifier	setVMStatus		5039893	0					
ANR	5040176	ArgumentList	VM_RUNNING		5039893	1					
ANR	5040177	Argument	VM_RUNNING		5039893	0					
ANR	5040178	Identifier	VM_RUNNING		5039893	0					
ANR	5040179	ExpressionStatement	m_start_time . getTime ( )	174:1:5058:5080	5039893	13	True				
ANR	5040180	CallExpression	m_start_time . getTime ( )		5039893	0					
ANR	5040181	Callee	m_start_time . getTime		5039893	0					
ANR	5040182	MemberAccess	m_start_time . getTime		5039893	0					
ANR	5040183	Identifier	m_start_time		5039893	0					
ANR	5040184	Identifier	getTime		5039893	1					
ANR	5040185	ArgumentList			5039893	1					
ANR	5040186	ExpressionStatement	m_cpu_time = 0	175:1:5083:5097	5039893	14	True				
ANR	5040187	AssignmentExpression	m_cpu_time = 0		5039893	0		=			
ANR	5040188	Identifier	m_cpu_time		5039893	0					
ANR	5040189	PrimaryExpression	0		5039893	1					
ANR	5040190	ExpressionStatement	updateAllWriteDiskTimestamp ( time ( NULL ) )	178:1:5166:5205	5039893	15	True				
ANR	5040191	CallExpression	updateAllWriteDiskTimestamp ( time ( NULL ) )		5039893	0					
ANR	5040192	Callee	updateAllWriteDiskTimestamp		5039893	0					
ANR	5040193	Identifier	updateAllWriteDiskTimestamp		5039893	0					
ANR	5040194	ArgumentList	time ( NULL )		5039893	1					
ANR	5040195	Argument	time ( NULL )		5039893	0					
ANR	5040196	CallExpression	time ( NULL )		5039893	0					
ANR	5040197	Callee	time		5039893	0					
ANR	5040198	Identifier	time		5039893	0					
ANR	5040199	ArgumentList	NULL		5039893	1					
ANR	5040200	Argument	NULL		5039893	0					
ANR	5040201	Identifier	NULL		5039893	0					
ANR	5040202	ReturnStatement	return true ;	179:1:5208:5219	5039893	16	True				
ANR	5040203	Identifier	true		5039893	0					
ANR	5040204	ReturnType	bool		5039893	1					
ANR	5040205	Identifier	VirshType :: Start		5039893	2					
ANR	5040206	ParameterList			5039893	3					
ANR	5040207	CFGEntryNode	ENTRY		5039893		True				
ANR	5040208	CFGExitNode	EXIT		5039893		True				
ANR	5040209	Symbol	m_result_msg		5039893						
ANR	5040210	Symbol	VMGAHP_ERR_INTERNAL		5039893						
ANR	5040211	Symbol	m_cpu_time		5039893						
ANR	5040212	Symbol	getVMStatus		5039893						
ANR	5040213	Symbol	m_configfile		5039893						
ANR	5040214	Symbol	virConnGetLastError		5039893						
ANR	5040215	Symbol	m_xml . Value		5039893						
ANR	5040216	Symbol	m_libvirt_connection		5039893						
ANR	5040217	Symbol	m_configfile . Value		5039893						
ANR	5040218	Symbol	priv		5039893						
ANR	5040219	Symbol	virDomainCreateXML		5039893						
ANR	5040220	Symbol	VM_RUNNING		5039893						
ANR	5040221	Symbol	res		5039893						
ANR	5040222	Symbol	m_start_time		5039893						
ANR	5040223	Symbol	this -> CreateConfigFile		5039893						
ANR	5040224	Symbol	NULL		5039893						
ANR	5040225	Symbol	err		5039893						
ANR	5040226	Symbol	err -> message		5039893						
ANR	5040227	Symbol	VMGAHP_ERR_VM_INVALID_OPERATION		5039893						
ANR	5040228	Symbol	m_suspendfile		5039893						
ANR	5040229	Symbol	m_configfile . Length		5039893						
ANR	5040230	Symbol	false		5039893						
ANR	5040231	Symbol	D_ALWAYS		5039893						
ANR	5040232	Symbol	this		5039893						
ANR	5040233	Symbol	m_xml		5039893						
ANR	5040234	Symbol	VM_STOPPED		5039893						
ANR	5040235	Symbol	D_FULLDEBUG		5039893						
ANR	5040236	Symbol	set_root_priv		5039893						
ANR	5040237	Symbol	* this		5039893						
ANR	5040238	Symbol	* err		5039893						
ANR	5040239	Symbol	m_restart_with_ckpt		5039893						
ANR	5040240	Symbol	vm		5039893						
ANR	5040241	Symbol	true		5039893						
ANR	5040242	Symbol	time		5039893						
ANR	5040243	Symbol	Resume		5039893						
ANR	5040244	Function	VirshType :: Shutdown	182:0:5224:7441							
ANR	5040245	FunctionDef	VirshType :: Shutdown ()		5040244	0					
ANR	5040246	CompoundStatement		184:0:5251:7441	5040244	0					
ANR	5040247	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::Shutdown\\n"" )"	185:1:5254:5307	5040244	0	True				
ANR	5040248	CallExpression	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::Shutdown\\n"" )"		5040244	0					
ANR	5040249	Callee	vmprintf		5040244	0					
ANR	5040250	Identifier	vmprintf		5040244	0					
ANR	5040251	ArgumentList	D_FULLDEBUG		5040244	1					
ANR	5040252	Argument	D_FULLDEBUG		5040244	0					
ANR	5040253	Identifier	D_FULLDEBUG		5040244	0					
ANR	5040254	Argument	"""Inside VirshType::Shutdown\\n"""		5040244	1					
ANR	5040255	PrimaryExpression	"""Inside VirshType::Shutdown\\n"""		5040244	0					
ANR	5040256	IfStatement	if ( ( m_configfile . Length ( ) == 0 ) )		5040244	1					
ANR	5040257	Condition	m_configfile . Length ( ) == 0	187:5:5315:5342	5040244	0	True				
ANR	5040258	EqualityExpression	m_configfile . Length ( ) == 0		5040244	0		==			
ANR	5040259	CallExpression	m_configfile . Length ( )		5040244	0					
ANR	5040260	Callee	m_configfile . Length		5040244	0					
ANR	5040261	MemberAccess	m_configfile . Length		5040244	0					
ANR	5040262	Identifier	m_configfile		5040244	0					
ANR	5040263	Identifier	Length		5040244	1					
ANR	5040264	ArgumentList			5040244	1					
ANR	5040265	PrimaryExpression	0		5040244	1					
ANR	5040266	CompoundStatement		4:36:94:94	5040244	1					
ANR	5040267	ExpressionStatement	m_result_msg = VMGAHP_ERR_INTERNAL	188:2:5350:5384	5040244	0	True				
ANR	5040268	AssignmentExpression	m_result_msg = VMGAHP_ERR_INTERNAL		5040244	0		=			
ANR	5040269	Identifier	m_result_msg		5040244	0					
ANR	5040270	Identifier	VMGAHP_ERR_INTERNAL		5040244	1					
ANR	5040271	ReturnStatement	return false ;	189:2:5388:5400	5040244	1	True				
ANR	5040272	Identifier	false		5040244	0					
ANR	5040273	IfStatement	if ( getVMStatus ( ) == VM_STOPPED )		5040244	2					
ANR	5040274	Condition	getVMStatus ( ) == VM_STOPPED	192:5:5411:5437	5040244	0	True				
ANR	5040275	EqualityExpression	getVMStatus ( ) == VM_STOPPED		5040244	0		==			
ANR	5040276	CallExpression	getVMStatus ( )		5040244	0					
ANR	5040277	Callee	getVMStatus		5040244	0					
ANR	5040278	Identifier	getVMStatus		5040244	0					
ANR	5040279	ArgumentList			5040244	1					
ANR	5040280	Identifier	VM_STOPPED		5040244	1					
ANR	5040281	CompoundStatement		9:35:189:189	5040244	1					
ANR	5040282	IfStatement	if ( m_self_shutdown )		5040244	0					
ANR	5040283	Condition	m_self_shutdown	193:6:5449:5463	5040244	0	True				
ANR	5040284	Identifier	m_self_shutdown		5040244	0					
ANR	5040285	CompoundStatement		10:24:215:215	5040244	1					
ANR	5040286	IfStatement	if ( m_vm_no_output_vm )		5040244	0					
ANR	5040287	Condition	m_vm_no_output_vm	194:7:5476:5492	5040244	0	True				
ANR	5040288	Identifier	m_vm_no_output_vm		5040244	0					
ANR	5040289	CompoundStatement		11:27:244:244	5040244	1					
ANR	5040290	ExpressionStatement	m_delete_working_files = true	197:4:5612:5641	5040244	0	True				
ANR	5040291	AssignmentExpression	m_delete_working_files = true		5040244	0		=			
ANR	5040292	Identifier	m_delete_working_files		5040244	0					
ANR	5040293	Identifier	true		5040244	1					
ANR	5040294	ExpressionStatement	m_is_checkpointed = false	198:4:5647:5672	5040244	1	True				
ANR	5040295	AssignmentExpression	m_is_checkpointed = false		5040244	0		=			
ANR	5040296	Identifier	m_is_checkpointed		5040244	0					
ANR	5040297	Identifier	false		5040244	1					
ANR	5040298	ElseStatement	else		5040244	0					
ANR	5040299	CompoundStatement		28:4:715:735	5040244	0					
ANR	5040300	IfStatement	if ( ! m_suspendfile . IsEmpty ( ) )		5040244	0					
ANR	5040301	Condition	! m_suspendfile . IsEmpty ( )	200:8:5693:5716	5040244	0	True				
ANR	5040302	UnaryOperationExpression	! m_suspendfile . IsEmpty ( )		5040244	0					
ANR	5040303	UnaryOperator	!		5040244	0					
ANR	5040304	CallExpression	m_suspendfile . IsEmpty ( )		5040244	1					
ANR	5040305	Callee	m_suspendfile . IsEmpty		5040244	0					
ANR	5040306	MemberAccess	m_suspendfile . IsEmpty		5040244	0					
ANR	5040307	Identifier	m_suspendfile		5040244	0					
ANR	5040308	Identifier	IsEmpty		5040244	1					
ANR	5040309	ArgumentList			5040244	1					
ANR	5040310	CompoundStatement		17:35:468:468	5040244	1					
ANR	5040311	ExpressionStatement	unlink ( m_suspendfile . Value ( ) )	201:5:5727:5756	5040244	0	True				
ANR	5040312	CallExpression	unlink ( m_suspendfile . Value ( ) )		5040244	0					
ANR	5040313	Callee	unlink		5040244	0					
ANR	5040314	Identifier	unlink		5040244	0					
ANR	5040315	ArgumentList	m_suspendfile . Value ( )		5040244	1					
ANR	5040316	Argument	m_suspendfile . Value ( )		5040244	0					
ANR	5040317	CallExpression	m_suspendfile . Value ( )		5040244	0					
ANR	5040318	Callee	m_suspendfile . Value		5040244	0					
ANR	5040319	MemberAccess	m_suspendfile . Value		5040244	0					
ANR	5040320	Identifier	m_suspendfile		5040244	0					
ANR	5040321	Identifier	Value		5040244	1					
ANR	5040322	ArgumentList			5040244	1					
ANR	5040323	ExpressionStatement	"m_suspendfile = """""	203:4:5768:5786	5040244	1	True				
ANR	5040324	AssignmentExpression	"m_suspendfile = """""		5040244	0		=			
ANR	5040325	Identifier	m_suspendfile		5040244	0					
ANR	5040326	PrimaryExpression	""""""		5040244	1					
ANR	5040327	IfStatement	if ( ! m_configfile . IsEmpty ( ) )		5040244	2					
ANR	5040328	Condition	! m_configfile . IsEmpty ( )	206:8:5849:5871	5040244	0	True				
ANR	5040329	UnaryOperationExpression	! m_configfile . IsEmpty ( )		5040244	0					
ANR	5040330	UnaryOperator	!		5040244	0					
ANR	5040331	CallExpression	m_configfile . IsEmpty ( )		5040244	1					
ANR	5040332	Callee	m_configfile . IsEmpty		5040244	0					
ANR	5040333	MemberAccess	m_configfile . IsEmpty		5040244	0					
ANR	5040334	Identifier	m_configfile		5040244	0					
ANR	5040335	Identifier	IsEmpty		5040244	1					
ANR	5040336	ArgumentList			5040244	1					
ANR	5040337	CompoundStatement		23:34:623:623	5040244	1					
ANR	5040338	ExpressionStatement	unlink ( m_configfile . Value ( ) )	207:5:5882:5910	5040244	0	True				
ANR	5040339	CallExpression	unlink ( m_configfile . Value ( ) )		5040244	0					
ANR	5040340	Callee	unlink		5040244	0					
ANR	5040341	Identifier	unlink		5040244	0					
ANR	5040342	ArgumentList	m_configfile . Value ( )		5040244	1					
ANR	5040343	Argument	m_configfile . Value ( )		5040244	0					
ANR	5040344	CallExpression	m_configfile . Value ( )		5040244	0					
ANR	5040345	Callee	m_configfile . Value		5040244	0					
ANR	5040346	MemberAccess	m_configfile . Value		5040244	0					
ANR	5040347	Identifier	m_configfile		5040244	0					
ANR	5040348	Identifier	Value		5040244	1					
ANR	5040349	ArgumentList			5040244	1					
ANR	5040350	IdentifierDeclStatement	MyString tmpfilename ;	211:4:5967:5987	5040244	3	True				
ANR	5040351	IdentifierDecl	tmpfilename		5040244	0					
ANR	5040352	IdentifierDeclType	MyString		5040244	0					
ANR	5040353	Identifier	tmpfilename		5040244	1					
ANR	5040354	ExpressionStatement	"tmpfilename . sprintf ( ""%s%c%s"" , m_workingpath . Value ( ) , DIR_DELIM_CHAR , XEN_CKPT_TIMESTAMP_FILE )"	212:4:5993:6092	5040244	4	True				
ANR	5040355	CallExpression	"tmpfilename . sprintf ( ""%s%c%s"" , m_workingpath . Value ( ) , DIR_DELIM_CHAR , XEN_CKPT_TIMESTAMP_FILE )"		5040244	0					
ANR	5040356	Callee	tmpfilename . sprintf		5040244	0					
ANR	5040357	MemberAccess	tmpfilename . sprintf		5040244	0					
ANR	5040358	Identifier	tmpfilename		5040244	0					
ANR	5040359	Identifier	sprintf		5040244	1					
ANR	5040360	ArgumentList	"""%s%c%s"""		5040244	1					
ANR	5040361	Argument	"""%s%c%s"""		5040244	0					
ANR	5040362	PrimaryExpression	"""%s%c%s"""		5040244	0					
ANR	5040363	Argument	m_workingpath . Value ( )		5040244	1					
ANR	5040364	CallExpression	m_workingpath . Value ( )		5040244	0					
ANR	5040365	Callee	m_workingpath . Value		5040244	0					
ANR	5040366	MemberAccess	m_workingpath . Value		5040244	0					
ANR	5040367	Identifier	m_workingpath		5040244	0					
ANR	5040368	Identifier	Value		5040244	1					
ANR	5040369	ArgumentList			5040244	1					
ANR	5040370	Argument	DIR_DELIM_CHAR		5040244	2					
ANR	5040371	Identifier	DIR_DELIM_CHAR		5040244	0					
ANR	5040372	Argument	XEN_CKPT_TIMESTAMP_FILE		5040244	3					
ANR	5040373	Identifier	XEN_CKPT_TIMESTAMP_FILE		5040244	0					
ANR	5040374	ExpressionStatement	unlink ( tmpfilename . Value ( ) )	214:4:6098:6125	5040244	5	True				
ANR	5040375	CallExpression	unlink ( tmpfilename . Value ( ) )		5040244	0					
ANR	5040376	Callee	unlink		5040244	0					
ANR	5040377	Identifier	unlink		5040244	0					
ANR	5040378	ArgumentList	tmpfilename . Value ( )		5040244	1					
ANR	5040379	Argument	tmpfilename . Value ( )		5040244	0					
ANR	5040380	CallExpression	tmpfilename . Value ( )		5040244	0					
ANR	5040381	Callee	tmpfilename . Value		5040244	0					
ANR	5040382	MemberAccess	tmpfilename . Value		5040244	0					
ANR	5040383	Identifier	tmpfilename		5040244	0					
ANR	5040384	Identifier	Value		5040244	1					
ANR	5040385	ArgumentList			5040244	1					
ANR	5040386	ExpressionStatement	updateLocalWriteDiskTimestamp ( time ( NULL ) )	217:4:6202:6243	5040244	6	True				
ANR	5040387	CallExpression	updateLocalWriteDiskTimestamp ( time ( NULL ) )		5040244	0					
ANR	5040388	Callee	updateLocalWriteDiskTimestamp		5040244	0					
ANR	5040389	Identifier	updateLocalWriteDiskTimestamp		5040244	0					
ANR	5040390	ArgumentList	time ( NULL )		5040244	1					
ANR	5040391	Argument	time ( NULL )		5040244	0					
ANR	5040392	CallExpression	time ( NULL )		5040244	0					
ANR	5040393	Callee	time		5040244	0					
ANR	5040394	Identifier	time		5040244	0					
ANR	5040395	ArgumentList	NULL		5040244	1					
ANR	5040396	Argument	NULL		5040244	0					
ANR	5040397	Identifier	NULL		5040244	0					
ANR	5040398	ExpressionStatement	m_self_shutdown = false	222:2:6348:6371	5040244	1	True				
ANR	5040399	AssignmentExpression	m_self_shutdown = false		5040244	0		=			
ANR	5040400	Identifier	m_self_shutdown		5040244	0					
ANR	5040401	Identifier	false		5040244	1					
ANR	5040402	ReturnStatement	return true ;	223:2:6375:6386	5040244	2	True				
ANR	5040403	Identifier	true		5040244	0					
ANR	5040404	ExpressionStatement	ResumeFromSoftSuspend ( )	230:1:6496:6519	5040244	3	True				
ANR	5040405	CallExpression	ResumeFromSoftSuspend ( )		5040244	0					
ANR	5040406	Callee	ResumeFromSoftSuspend		5040244	0					
ANR	5040407	Identifier	ResumeFromSoftSuspend		5040244	0					
ANR	5040408	ArgumentList			5040244	1					
ANR	5040409	IfStatement	if ( getVMStatus ( ) == VM_RUNNING )		5040244	4					
ANR	5040410	Condition	getVMStatus ( ) == VM_RUNNING	232:5:6527:6553	5040244	0	True				
ANR	5040411	EqualityExpression	getVMStatus ( ) == VM_RUNNING		5040244	0		==			
ANR	5040412	CallExpression	getVMStatus ( )		5040244	0					
ANR	5040413	Callee	getVMStatus		5040244	0					
ANR	5040414	Identifier	getVMStatus		5040244	0					
ANR	5040415	ArgumentList			5040244	1					
ANR	5040416	Identifier	VM_RUNNING		5040244	1					
ANR	5040417	CompoundStatement		51:16:1360:1441	5040244	1					
ANR	5040418	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	233:2:6561:6594	5040244	0	True				
ANR	5040419	IdentifierDecl	priv = set_root_priv ( )		5040244	0					
ANR	5040420	IdentifierDeclType	priv_state		5040244	0					
ANR	5040421	Identifier	priv		5040244	1					
ANR	5040422	AssignmentExpression	priv = set_root_priv ( )		5040244	2		=			
ANR	5040423	Identifier	priv		5040244	0					
ANR	5040424	CallExpression	set_root_priv ( )		5040244	1					
ANR	5040425	Callee	set_root_priv		5040244	0					
ANR	5040426	Identifier	set_root_priv		5040244	0					
ANR	5040427	ArgumentList			5040244	1					
ANR	5040428	IdentifierDeclStatement	"virDomainPtr dom = virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) ) ;"	234:16:6612:6693	5040244	1	True				
ANR	5040429	IdentifierDecl	"dom = virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) )"		5040244	0					
ANR	5040430	IdentifierDeclType	virDomainPtr		5040244	0					
ANR	5040431	Identifier	dom		5040244	1					
ANR	5040432	AssignmentExpression	"dom = virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) )"		5040244	2		=			
ANR	5040433	Identifier	dom		5040244	0					
ANR	5040434	CallExpression	"virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) )"		5040244	1					
ANR	5040435	Callee	virDomainLookupByName		5040244	0					
ANR	5040436	Identifier	virDomainLookupByName		5040244	0					
ANR	5040437	ArgumentList	m_libvirt_connection		5040244	1					
ANR	5040438	Argument	m_libvirt_connection		5040244	0					
ANR	5040439	Identifier	m_libvirt_connection		5040244	0					
ANR	5040440	Argument	m_vm_name . Value ( )		5040244	1					
ANR	5040441	CallExpression	m_vm_name . Value ( )		5040244	0					
ANR	5040442	Callee	m_vm_name . Value		5040244	0					
ANR	5040443	MemberAccess	m_vm_name . Value		5040244	0					
ANR	5040444	Identifier	m_vm_name		5040244	0					
ANR	5040445	Identifier	Value		5040244	1					
ANR	5040446	ArgumentList			5040244	1					
ANR	5040447	ExpressionStatement	set_priv ( priv )	235:2:6697:6711	5040244	2	True				
ANR	5040448	CallExpression	set_priv ( priv )		5040244	0					
ANR	5040449	Callee	set_priv		5040244	0					
ANR	5040450	Identifier	set_priv		5040244	0					
ANR	5040451	ArgumentList	priv		5040244	1					
ANR	5040452	Argument	priv		5040244	0					
ANR	5040453	Identifier	priv		5040244	0					
ANR	5040454	IfStatement	if ( dom == NULL )		5040244	3					
ANR	5040455	Condition	dom == NULL	236:5:6718:6728	5040244	0	True				
ANR	5040456	EqualityExpression	dom == NULL		5040244	0		==			
ANR	5040457	Identifier	dom		5040244	0					
ANR	5040458	Identifier	NULL		5040244	1					
ANR	5040459	CompoundStatement		55:6:1491:1550	5040244	1					
ANR	5040460	IdentifierDeclStatement	virErrorPtr err = virConnGetLastError ( m_libvirt_connection ) ;	238:6:6743:6802	5040244	0	True				
ANR	5040461	IdentifierDecl	err = virConnGetLastError ( m_libvirt_connection )		5040244	0					
ANR	5040462	IdentifierDeclType	virErrorPtr		5040244	0					
ANR	5040463	Identifier	err		5040244	1					
ANR	5040464	AssignmentExpression	err = virConnGetLastError ( m_libvirt_connection )		5040244	2		=			
ANR	5040465	Identifier	err		5040244	0					
ANR	5040466	CallExpression	virConnGetLastError ( m_libvirt_connection )		5040244	1					
ANR	5040467	Callee	virConnGetLastError		5040244	0					
ANR	5040468	Identifier	virConnGetLastError		5040244	0					
ANR	5040469	ArgumentList	m_libvirt_connection		5040244	1					
ANR	5040470	Argument	m_libvirt_connection		5040244	0					
ANR	5040471	Identifier	m_libvirt_connection		5040244	0					
ANR	5040472	IfStatement	if ( err && err -> code != VIR_ERR_NO_DOMAIN )		5040244	1					
ANR	5040473	Condition	err && err -> code != VIR_ERR_NO_DOMAIN	239:10:6814:6850	5040244	0	True				
ANR	5040474	AndExpression	err && err -> code != VIR_ERR_NO_DOMAIN		5040244	0		&&			
ANR	5040475	Identifier	err		5040244	0					
ANR	5040476	EqualityExpression	err -> code != VIR_ERR_NO_DOMAIN		5040244	1		!=			
ANR	5040477	PtrMemberAccess	err -> code		5040244	0					
ANR	5040478	Identifier	err		5040244	0					
ANR	5040479	Identifier	code		5040244	1					
ANR	5040480	Identifier	VIR_ERR_NO_DOMAIN		5040244	1					
ANR	5040481	CompoundStatement		57:8:1609:1609	5040244	1					
ANR	5040482	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Error finding domain %s: %s\\n"" , m_vm_name . Value ( ) , ( err ? err -> message : ""No reason found"" ) )"	241:3:6866:6978	5040244	0	True				
ANR	5040483	CallExpression	"vmprintf ( D_ALWAYS , ""Error finding domain %s: %s\\n"" , m_vm_name . Value ( ) , ( err ? err -> message : ""No reason found"" ) )"		5040244	0					
ANR	5040484	Callee	vmprintf		5040244	0					
ANR	5040485	Identifier	vmprintf		5040244	0					
ANR	5040486	ArgumentList	D_ALWAYS		5040244	1					
ANR	5040487	Argument	D_ALWAYS		5040244	0					
ANR	5040488	Identifier	D_ALWAYS		5040244	0					
ANR	5040489	Argument	"""Error finding domain %s: %s\\n"""		5040244	1					
ANR	5040490	PrimaryExpression	"""Error finding domain %s: %s\\n"""		5040244	0					
ANR	5040491	Argument	m_vm_name . Value ( )		5040244	2					
ANR	5040492	CallExpression	m_vm_name . Value ( )		5040244	0					
ANR	5040493	Callee	m_vm_name . Value		5040244	0					
ANR	5040494	MemberAccess	m_vm_name . Value		5040244	0					
ANR	5040495	Identifier	m_vm_name		5040244	0					
ANR	5040496	Identifier	Value		5040244	1					
ANR	5040497	ArgumentList			5040244	1					
ANR	5040498	Argument	"err ? err -> message : ""No reason found"""		5040244	3					
ANR	5040499	ConditionalExpression	"err ? err -> message : ""No reason found"""		5040244	0					
ANR	5040500	Condition	err		5040244	0					
ANR	5040501	Identifier	err		5040244	0					
ANR	5040502	PtrMemberAccess	err -> message		5040244	1					
ANR	5040503	Identifier	err		5040244	0					
ANR	5040504	Identifier	message		5040244	1					
ANR	5040505	PrimaryExpression	"""No reason found"""		5040244	2					
ANR	5040506	ReturnStatement	return false ;	242:3:6983:6995	5040244	1	True				
ANR	5040507	Identifier	false		5040244	0					
ANR	5040508	ElseStatement	else		5040244	0					
ANR	5040509	CompoundStatement		65:6:1810:1845	5040244	0					
ANR	5040510	ExpressionStatement	priv = set_root_priv ( )	247:6:7032:7054	5040244	0	True				
ANR	5040511	AssignmentExpression	priv = set_root_priv ( )		5040244	0		=			
ANR	5040512	Identifier	priv		5040244	0					
ANR	5040513	CallExpression	set_root_priv ( )		5040244	1					
ANR	5040514	Callee	set_root_priv		5040244	0					
ANR	5040515	Identifier	set_root_priv		5040244	0					
ANR	5040516	ArgumentList			5040244	1					
ANR	5040517	IdentifierDeclStatement	int result = virDomainShutdown ( dom ) ;	248:6:7062:7097	5040244	1	True				
ANR	5040518	IdentifierDecl	result = virDomainShutdown ( dom )		5040244	0					
ANR	5040519	IdentifierDeclType	int		5040244	0					
ANR	5040520	Identifier	result		5040244	1					
ANR	5040521	AssignmentExpression	result = virDomainShutdown ( dom )		5040244	2		=			
ANR	5040522	Identifier	result		5040244	0					
ANR	5040523	CallExpression	virDomainShutdown ( dom )		5040244	1					
ANR	5040524	Callee	virDomainShutdown		5040244	0					
ANR	5040525	Identifier	virDomainShutdown		5040244	0					
ANR	5040526	ArgumentList	dom		5040244	1					
ANR	5040527	Argument	dom		5040244	0					
ANR	5040528	Identifier	dom		5040244	0					
ANR	5040529	ExpressionStatement	virDomainFree ( dom )	249:6:7105:7123	5040244	2	True				
ANR	5040530	CallExpression	virDomainFree ( dom )		5040244	0					
ANR	5040531	Callee	virDomainFree		5040244	0					
ANR	5040532	Identifier	virDomainFree		5040244	0					
ANR	5040533	ArgumentList	dom		5040244	1					
ANR	5040534	Argument	dom		5040244	0					
ANR	5040535	Identifier	dom		5040244	0					
ANR	5040536	ExpressionStatement	set_priv ( priv )	250:6:7131:7145	5040244	3	True				
ANR	5040537	CallExpression	set_priv ( priv )		5040244	0					
ANR	5040538	Callee	set_priv		5040244	0					
ANR	5040539	Identifier	set_priv		5040244	0					
ANR	5040540	ArgumentList	priv		5040244	1					
ANR	5040541	Argument	priv		5040244	0					
ANR	5040542	Identifier	priv		5040244	0					
ANR	5040543	IfStatement	if ( result != 0 )		5040244	4					
ANR	5040544	Condition	result != 0	251:10:7157:7167	5040244	0	True				
ANR	5040545	EqualityExpression	result != 0		5040244	0		!=			
ANR	5040546	Identifier	result		5040244	0					
ANR	5040547	PrimaryExpression	0		5040244	1					
ANR	5040548	CompoundStatement		68:24:1919:1919	5040244	1					
ANR	5040549	ExpressionStatement	killVM ( )	254:7:7241:7249	5040244	0	True				
ANR	5040550	CallExpression	killVM ( )		5040244	0					
ANR	5040551	Callee	killVM		5040244	0					
ANR	5040552	Identifier	killVM		5040244	0					
ANR	5040553	ArgumentList			5040244	1					
ANR	5040554	ExpressionStatement	m_delete_working_files = true	258:2:7313:7342	5040244	4	True				
ANR	5040555	AssignmentExpression	m_delete_working_files = true		5040244	0		=			
ANR	5040556	Identifier	m_delete_working_files		5040244	0					
ANR	5040557	Identifier	true		5040244	1					
ANR	5040558	ExpressionStatement	m_is_checkpointed = false	259:2:7346:7371	5040244	5	True				
ANR	5040559	AssignmentExpression	m_is_checkpointed = false		5040244	0		=			
ANR	5040560	Identifier	m_is_checkpointed		5040244	0					
ANR	5040561	Identifier	false		5040244	1					
ANR	5040562	ExpressionStatement	setVMStatus ( VM_STOPPED )	262:1:7378:7401	5040244	5	True				
ANR	5040563	CallExpression	setVMStatus ( VM_STOPPED )		5040244	0					
ANR	5040564	Callee	setVMStatus		5040244	0					
ANR	5040565	Identifier	setVMStatus		5040244	0					
ANR	5040566	ArgumentList	VM_STOPPED		5040244	1					
ANR	5040567	Argument	VM_STOPPED		5040244	0					
ANR	5040568	Identifier	VM_STOPPED		5040244	0					
ANR	5040569	ExpressionStatement	m_stop_time . getTime ( )	263:1:7404:7425	5040244	6	True				
ANR	5040570	CallExpression	m_stop_time . getTime ( )		5040244	0					
ANR	5040571	Callee	m_stop_time . getTime		5040244	0					
ANR	5040572	MemberAccess	m_stop_time . getTime		5040244	0					
ANR	5040573	Identifier	m_stop_time		5040244	0					
ANR	5040574	Identifier	getTime		5040244	1					
ANR	5040575	ArgumentList			5040244	1					
ANR	5040576	ReturnStatement	return true ;	264:1:7428:7439	5040244	7	True				
ANR	5040577	Identifier	true		5040244	0					
ANR	5040578	ReturnType	bool		5040244	1					
ANR	5040579	Identifier	VirshType :: Shutdown		5040244	2					
ANR	5040580	ParameterList			5040244	3					
ANR	5040581	CFGEntryNode	ENTRY		5040244		True				
ANR	5040582	CFGExitNode	EXIT		5040244		True				
ANR	5040583	Symbol	m_result_msg		5040244						
ANR	5040584	Symbol	VMGAHP_ERR_INTERNAL		5040244						
ANR	5040585	Symbol	m_vm_name		5040244						
ANR	5040586	Symbol	m_workingpath . Value		5040244						
ANR	5040587	Symbol	dom		5040244						
ANR	5040588	Symbol	err -> code		5040244						
ANR	5040589	Symbol	getVMStatus		5040244						
ANR	5040590	Symbol	m_configfile		5040244						
ANR	5040591	Symbol	m_suspendfile . IsEmpty		5040244						
ANR	5040592	Symbol	VIR_ERR_NO_DOMAIN		5040244						
ANR	5040593	Symbol	m_suspendfile . Value		5040244						
ANR	5040594	Symbol	m_configfile . IsEmpty		5040244						
ANR	5040595	Symbol	tmpfilename . Value		5040244						
ANR	5040596	Symbol	virConnGetLastError		5040244						
ANR	5040597	Symbol	result		5040244						
ANR	5040598	Symbol	m_stop_time		5040244						
ANR	5040599	Symbol	m_libvirt_connection		5040244						
ANR	5040600	Symbol	tmpfilename		5040244						
ANR	5040601	Symbol	m_configfile . Value		5040244						
ANR	5040602	Symbol	virDomainShutdown		5040244						
ANR	5040603	Symbol	priv		5040244						
ANR	5040604	Symbol	VM_RUNNING		5040244						
ANR	5040605	Symbol	m_self_shutdown		5040244						
ANR	5040606	Symbol	XEN_CKPT_TIMESTAMP_FILE		5040244						
ANR	5040607	Symbol	NULL		5040244						
ANR	5040608	Symbol	m_delete_working_files		5040244						
ANR	5040609	Symbol	err		5040244						
ANR	5040610	Symbol	err -> message		5040244						
ANR	5040611	Symbol	m_suspendfile		5040244						
ANR	5040612	Symbol	m_configfile . Length		5040244						
ANR	5040613	Symbol	DIR_DELIM_CHAR		5040244						
ANR	5040614	Symbol	false		5040244						
ANR	5040615	Symbol	D_ALWAYS		5040244						
ANR	5040616	Symbol	VM_STOPPED		5040244						
ANR	5040617	Symbol	virDomainLookupByName		5040244						
ANR	5040618	Symbol	D_FULLDEBUG		5040244						
ANR	5040619	Symbol	set_root_priv		5040244						
ANR	5040620	Symbol	m_vm_name . Value		5040244						
ANR	5040621	Symbol	* err		5040244						
ANR	5040622	Symbol	m_workingpath		5040244						
ANR	5040623	Symbol	m_is_checkpointed		5040244						
ANR	5040624	Symbol	true		5040244						
ANR	5040625	Symbol	time		5040244						
ANR	5040626	Symbol	m_vm_no_output_vm		5040244						
ANR	5040627	Function	VirshType :: Checkpoint	267:0:7444:8602							
ANR	5040628	FunctionDef	VirshType :: Checkpoint ()		5040627	0					
ANR	5040629	CompoundStatement		269:0:7473:8602	5040627	0					
ANR	5040630	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::Checkpoint\\n"" )"	270:1:7476:7531	5040627	0	True				
ANR	5040631	CallExpression	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::Checkpoint\\n"" )"		5040627	0					
ANR	5040632	Callee	vmprintf		5040627	0					
ANR	5040633	Identifier	vmprintf		5040627	0					
ANR	5040634	ArgumentList	D_FULLDEBUG		5040627	1					
ANR	5040635	Argument	D_FULLDEBUG		5040627	0					
ANR	5040636	Identifier	D_FULLDEBUG		5040627	0					
ANR	5040637	Argument	"""Inside VirshType::Checkpoint\\n"""		5040627	1					
ANR	5040638	PrimaryExpression	"""Inside VirshType::Checkpoint\\n"""		5040627	0					
ANR	5040639	IfStatement	if ( ( m_configfile . Length ( ) == 0 ) )		5040627	1					
ANR	5040640	Condition	m_configfile . Length ( ) == 0	272:5:7539:7566	5040627	0	True				
ANR	5040641	EqualityExpression	m_configfile . Length ( ) == 0		5040627	0		==			
ANR	5040642	CallExpression	m_configfile . Length ( )		5040627	0					
ANR	5040643	Callee	m_configfile . Length		5040627	0					
ANR	5040644	MemberAccess	m_configfile . Length		5040627	0					
ANR	5040645	Identifier	m_configfile		5040627	0					
ANR	5040646	Identifier	Length		5040627	1					
ANR	5040647	ArgumentList			5040627	1					
ANR	5040648	PrimaryExpression	0		5040627	1					
ANR	5040649	CompoundStatement		4:35:95:95	5040627	1					
ANR	5040650	ExpressionStatement	m_result_msg = VMGAHP_ERR_INTERNAL	273:2:7573:7607	5040627	0	True				
ANR	5040651	AssignmentExpression	m_result_msg = VMGAHP_ERR_INTERNAL		5040627	0		=			
ANR	5040652	Identifier	m_result_msg		5040627	0					
ANR	5040653	Identifier	VMGAHP_ERR_INTERNAL		5040627	1					
ANR	5040654	ReturnStatement	return false ;	274:2:7611:7623	5040627	1	True				
ANR	5040655	Identifier	false		5040627	0					
ANR	5040656	IfStatement	if ( getVMStatus ( ) == VM_STOPPED )		5040627	2					
ANR	5040657	Condition	getVMStatus ( ) == VM_STOPPED	277:5:7634:7660	5040627	0	True				
ANR	5040658	EqualityExpression	getVMStatus ( ) == VM_STOPPED		5040627	0		==			
ANR	5040659	CallExpression	getVMStatus ( )		5040627	0					
ANR	5040660	Callee	getVMStatus		5040627	0					
ANR	5040661	Identifier	getVMStatus		5040627	0					
ANR	5040662	ArgumentList			5040627	1					
ANR	5040663	Identifier	VM_STOPPED		5040627	1					
ANR	5040664	CompoundStatement		9:35:190:190	5040627	1					
ANR	5040665	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Checkpoint is called for a stopped VM\\n"" )"	278:2:7668:7729	5040627	0	True				
ANR	5040666	CallExpression	"vmprintf ( D_ALWAYS , ""Checkpoint is called for a stopped VM\\n"" )"		5040627	0					
ANR	5040667	Callee	vmprintf		5040627	0					
ANR	5040668	Identifier	vmprintf		5040627	0					
ANR	5040669	ArgumentList	D_ALWAYS		5040627	1					
ANR	5040670	Argument	D_ALWAYS		5040627	0					
ANR	5040671	Identifier	D_ALWAYS		5040627	0					
ANR	5040672	Argument	"""Checkpoint is called for a stopped VM\\n"""		5040627	1					
ANR	5040673	PrimaryExpression	"""Checkpoint is called for a stopped VM\\n"""		5040627	0					
ANR	5040674	ExpressionStatement	m_result_msg = VMGAHP_ERR_VM_INVALID_OPERATION	279:2:7733:7779	5040627	1	True				
ANR	5040675	AssignmentExpression	m_result_msg = VMGAHP_ERR_VM_INVALID_OPERATION		5040627	0		=			
ANR	5040676	Identifier	m_result_msg		5040627	0					
ANR	5040677	Identifier	VMGAHP_ERR_VM_INVALID_OPERATION		5040627	1					
ANR	5040678	ReturnStatement	return false ;	280:2:7783:7795	5040627	2	True				
ANR	5040679	Identifier	false		5040627	0					
ANR	5040680	IfStatement	if ( ! m_vm_checkpoint )		5040627	3					
ANR	5040681	Condition	! m_vm_checkpoint	283:5:7806:7821	5040627	0	True				
ANR	5040682	UnaryOperationExpression	! m_vm_checkpoint		5040627	0					
ANR	5040683	UnaryOperator	!		5040627	0					
ANR	5040684	Identifier	m_vm_checkpoint		5040627	1					
ANR	5040685	CompoundStatement		15:24:351:351	5040627	1					
ANR	5040686	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Checkpoint is not supported.\\n"" )"	284:2:7829:7881	5040627	0	True				
ANR	5040687	CallExpression	"vmprintf ( D_ALWAYS , ""Checkpoint is not supported.\\n"" )"		5040627	0					
ANR	5040688	Callee	vmprintf		5040627	0					
ANR	5040689	Identifier	vmprintf		5040627	0					
ANR	5040690	ArgumentList	D_ALWAYS		5040627	1					
ANR	5040691	Argument	D_ALWAYS		5040627	0					
ANR	5040692	Identifier	D_ALWAYS		5040627	0					
ANR	5040693	Argument	"""Checkpoint is not supported.\\n"""		5040627	1					
ANR	5040694	PrimaryExpression	"""Checkpoint is not supported.\\n"""		5040627	0					
ANR	5040695	ExpressionStatement	m_result_msg = VMGAHP_ERR_VM_NO_SUPPORT_CHECKPOINT	285:2:7885:7935	5040627	1	True				
ANR	5040696	AssignmentExpression	m_result_msg = VMGAHP_ERR_VM_NO_SUPPORT_CHECKPOINT		5040627	0		=			
ANR	5040697	Identifier	m_result_msg		5040627	0					
ANR	5040698	Identifier	VMGAHP_ERR_VM_NO_SUPPORT_CHECKPOINT		5040627	1					
ANR	5040699	ReturnStatement	return false ;	286:2:7939:7951	5040627	2	True				
ANR	5040700	Identifier	false		5040627	0					
ANR	5040701	IfStatement	if ( m_xen_hw_vt && ! m_allow_hw_vt_suspend )		5040627	4					
ANR	5040702	Condition	m_xen_hw_vt && ! m_allow_hw_vt_suspend	289:5:7962:7998	5040627	0	True				
ANR	5040703	AndExpression	m_xen_hw_vt && ! m_allow_hw_vt_suspend		5040627	0		&&			
ANR	5040704	Identifier	m_xen_hw_vt		5040627	0					
ANR	5040705	UnaryOperationExpression	! m_allow_hw_vt_suspend		5040627	1					
ANR	5040706	UnaryOperator	!		5040627	0					
ANR	5040707	Identifier	m_allow_hw_vt_suspend		5040627	1					
ANR	5040708	CompoundStatement		21:45:528:528	5040627	1					
ANR	5040709	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Checkpoint of Hardware VT is not supported.\\n"" )"	293:2:8143:8210	5040627	0	True				
ANR	5040710	CallExpression	"vmprintf ( D_ALWAYS , ""Checkpoint of Hardware VT is not supported.\\n"" )"		5040627	0					
ANR	5040711	Callee	vmprintf		5040627	0					
ANR	5040712	Identifier	vmprintf		5040627	0					
ANR	5040713	ArgumentList	D_ALWAYS		5040627	1					
ANR	5040714	Argument	D_ALWAYS		5040627	0					
ANR	5040715	Identifier	D_ALWAYS		5040627	0					
ANR	5040716	Argument	"""Checkpoint of Hardware VT is not supported.\\n"""		5040627	1					
ANR	5040717	PrimaryExpression	"""Checkpoint of Hardware VT is not supported.\\n"""		5040627	0					
ANR	5040718	ExpressionStatement	m_result_msg = VMGAHP_ERR_VM_NO_SUPPORT_CHECKPOINT	294:2:8214:8264	5040627	1	True				
ANR	5040719	AssignmentExpression	m_result_msg = VMGAHP_ERR_VM_NO_SUPPORT_CHECKPOINT		5040627	0		=			
ANR	5040720	Identifier	m_result_msg		5040627	0					
ANR	5040721	Identifier	VMGAHP_ERR_VM_NO_SUPPORT_CHECKPOINT		5040627	1					
ANR	5040722	ReturnStatement	return false ;	295:2:8268:8280	5040627	2	True				
ANR	5040723	Identifier	false		5040627	0					
ANR	5040724	ExpressionStatement	ResumeFromSoftSuspend ( )	299:1:8334:8357	5040627	5	True				
ANR	5040725	CallExpression	ResumeFromSoftSuspend ( )		5040627	0					
ANR	5040726	Callee	ResumeFromSoftSuspend		5040627	0					
ANR	5040727	Identifier	ResumeFromSoftSuspend		5040627	0					
ANR	5040728	ArgumentList			5040627	1					
ANR	5040729	IfStatement	if ( createCkptFiles ( ) == false )		5040627	6					
ANR	5040730	Condition	createCkptFiles ( ) == false	302:5:8419:8444	5040627	0	True				
ANR	5040731	EqualityExpression	createCkptFiles ( ) == false		5040627	0		==			
ANR	5040732	CallExpression	createCkptFiles ( )		5040627	0					
ANR	5040733	Callee	createCkptFiles		5040627	0					
ANR	5040734	Identifier	createCkptFiles		5040627	0					
ANR	5040735	ArgumentList			5040627	1					
ANR	5040736	Identifier	false		5040627	1					
ANR	5040737	CompoundStatement		34:34:974:974	5040627	1					
ANR	5040738	ExpressionStatement	m_result_msg = VMGAHP_ERR_VM_CANNOT_CREATE_CKPT_FILES	303:2:8452:8505	5040627	0	True				
ANR	5040739	AssignmentExpression	m_result_msg = VMGAHP_ERR_VM_CANNOT_CREATE_CKPT_FILES		5040627	0		=			
ANR	5040740	Identifier	m_result_msg		5040627	0					
ANR	5040741	Identifier	VMGAHP_ERR_VM_CANNOT_CREATE_CKPT_FILES		5040627	1					
ANR	5040742	ExpressionStatement	"vmprintf ( D_ALWAYS , ""failed to create checkpoint files\\n"" )"	304:2:8509:8566	5040627	1	True				
ANR	5040743	CallExpression	"vmprintf ( D_ALWAYS , ""failed to create checkpoint files\\n"" )"		5040627	0					
ANR	5040744	Callee	vmprintf		5040627	0					
ANR	5040745	Identifier	vmprintf		5040627	0					
ANR	5040746	ArgumentList	D_ALWAYS		5040627	1					
ANR	5040747	Argument	D_ALWAYS		5040627	0					
ANR	5040748	Identifier	D_ALWAYS		5040627	0					
ANR	5040749	Argument	"""failed to create checkpoint files\\n"""		5040627	1					
ANR	5040750	PrimaryExpression	"""failed to create checkpoint files\\n"""		5040627	0					
ANR	5040751	ReturnStatement	return false ;	305:2:8570:8582	5040627	2	True				
ANR	5040752	Identifier	false		5040627	0					
ANR	5040753	ReturnStatement	return true ;	308:1:8589:8600	5040627	7	True				
ANR	5040754	Identifier	true		5040627	0					
ANR	5040755	ReturnType	bool		5040627	1					
ANR	5040756	Identifier	VirshType :: Checkpoint		5040627	2					
ANR	5040757	ParameterList			5040627	3					
ANR	5040758	CFGEntryNode	ENTRY		5040627		True				
ANR	5040759	CFGExitNode	EXIT		5040627		True				
ANR	5040760	Symbol	m_result_msg		5040627						
ANR	5040761	Symbol	VMGAHP_ERR_INTERNAL		5040627						
ANR	5040762	Symbol	VMGAHP_ERR_VM_INVALID_OPERATION		5040627						
ANR	5040763	Symbol	m_configfile . Length		5040627						
ANR	5040764	Symbol	false		5040627						
ANR	5040765	Symbol	getVMStatus		5040627						
ANR	5040766	Symbol	D_ALWAYS		5040627						
ANR	5040767	Symbol	m_configfile		5040627						
ANR	5040768	Symbol	VM_STOPPED		5040627						
ANR	5040769	Symbol	D_FULLDEBUG		5040627						
ANR	5040770	Symbol	m_vm_checkpoint		5040627						
ANR	5040771	Symbol	m_allow_hw_vt_suspend		5040627						
ANR	5040772	Symbol	createCkptFiles		5040627						
ANR	5040773	Symbol	m_xen_hw_vt		5040627						
ANR	5040774	Symbol	true		5040627						
ANR	5040775	Symbol	VMGAHP_ERR_VM_NO_SUPPORT_CHECKPOINT		5040627						
ANR	5040776	Symbol	VMGAHP_ERR_VM_CANNOT_CREATE_CKPT_FILES		5040627						
ANR	5040777	Function	VirshType :: CreateVirshConfigFile	314:0:8759:11545							
ANR	5040778	FunctionDef	VirshType :: CreateVirshConfigFile (const char * filename)		5040777	0					
ANR	5040779	CompoundStatement		315:0:8819:11545	5040777	0					
ANR	5040780	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""In VirshType::CreateVirshConfigFile\\n"" )"	316:2:8823:8885	5040777	0	True				
ANR	5040781	CallExpression	"vmprintf ( D_FULLDEBUG , ""In VirshType::CreateVirshConfigFile\\n"" )"		5040777	0					
ANR	5040782	Callee	vmprintf		5040777	0					
ANR	5040783	Identifier	vmprintf		5040777	0					
ANR	5040784	ArgumentList	D_FULLDEBUG		5040777	1					
ANR	5040785	Argument	D_FULLDEBUG		5040777	0					
ANR	5040786	Identifier	D_FULLDEBUG		5040777	0					
ANR	5040787	Argument	"""In VirshType::CreateVirshConfigFile\\n"""		5040777	1					
ANR	5040788	PrimaryExpression	"""In VirshType::CreateVirshConfigFile\\n"""		5040777	0					
ANR	5040789	IdentifierDeclStatement	"char * tmp = param ( ""LIBVIRT_XML_SCRIPT"" ) ;"	318:2:8913:8953	5040777	1	True				
ANR	5040790	IdentifierDecl	"* tmp = param ( ""LIBVIRT_XML_SCRIPT"" )"		5040777	0					
ANR	5040791	IdentifierDeclType	char *		5040777	0					
ANR	5040792	Identifier	tmp		5040777	1					
ANR	5040793	AssignmentExpression	"* tmp = param ( ""LIBVIRT_XML_SCRIPT"" )"		5040777	2		=			
ANR	5040794	Identifier	tmp		5040777	0					
ANR	5040795	CallExpression	"param ( ""LIBVIRT_XML_SCRIPT"" )"		5040777	1					
ANR	5040796	Callee	param		5040777	0					
ANR	5040797	Identifier	param		5040777	0					
ANR	5040798	ArgumentList	"""LIBVIRT_XML_SCRIPT"""		5040777	1					
ANR	5040799	Argument	"""LIBVIRT_XML_SCRIPT"""		5040777	0					
ANR	5040800	PrimaryExpression	"""LIBVIRT_XML_SCRIPT"""		5040777	0					
ANR	5040801	IfStatement	if ( tmp == NULL )		5040777	2					
ANR	5040802	Condition	tmp == NULL	319:5:8960:8970	5040777	0	True				
ANR	5040803	EqualityExpression	tmp == NULL		5040777	0		==			
ANR	5040804	Identifier	tmp		5040777	0					
ANR	5040805	Identifier	NULL		5040777	1					
ANR	5040806	CompoundStatement		6:4:157:157	5040777	1					
ANR	5040807	ExpressionStatement	"vmprintf ( D_ALWAYS , ""LIBVIRT_XML_SCRIPT not defined\\n"" )"	321:6:8985:9039	5040777	0	True				
ANR	5040808	CallExpression	"vmprintf ( D_ALWAYS , ""LIBVIRT_XML_SCRIPT not defined\\n"" )"		5040777	0					
ANR	5040809	Callee	vmprintf		5040777	0					
ANR	5040810	Identifier	vmprintf		5040777	0					
ANR	5040811	ArgumentList	D_ALWAYS		5040777	1					
ANR	5040812	Argument	D_ALWAYS		5040777	0					
ANR	5040813	Identifier	D_ALWAYS		5040777	0					
ANR	5040814	Argument	"""LIBVIRT_XML_SCRIPT not defined\\n"""		5040777	1					
ANR	5040815	PrimaryExpression	"""LIBVIRT_XML_SCRIPT not defined\\n"""		5040777	0					
ANR	5040816	ReturnStatement	return false ;	322:6:9047:9059	5040777	1	True				
ANR	5040817	Identifier	false		5040777	0					
ANR	5040818	IdentifierDeclStatement	ArgList args ;	325:2:9107:9119	5040777	3	True				
ANR	5040819	IdentifierDecl	args		5040777	0					
ANR	5040820	IdentifierDeclType	ArgList		5040777	0					
ANR	5040821	Identifier	args		5040777	1					
ANR	5040822	ExpressionStatement	args . AppendArg ( tmp )	326:2:9123:9142	5040777	4	True				
ANR	5040823	CallExpression	args . AppendArg ( tmp )		5040777	0					
ANR	5040824	Callee	args . AppendArg		5040777	0					
ANR	5040825	MemberAccess	args . AppendArg		5040777	0					
ANR	5040826	Identifier	args		5040777	0					
ANR	5040827	Identifier	AppendArg		5040777	1					
ANR	5040828	ArgumentList	tmp		5040777	1					
ANR	5040829	Argument	tmp		5040777	0					
ANR	5040830	Identifier	tmp		5040777	0					
ANR	5040831	ExpressionStatement	free ( tmp )	327:2:9146:9155	5040777	5	True				
ANR	5040832	CallExpression	free ( tmp )		5040777	0					
ANR	5040833	Callee	free		5040777	0					
ANR	5040834	Identifier	free		5040777	0					
ANR	5040835	ArgumentList	tmp		5040777	1					
ANR	5040836	Argument	tmp		5040777	0					
ANR	5040837	Identifier	tmp		5040777	0					
ANR	5040838	ExpressionStatement	"tmp = param ( ""LIBVIRT_XML_SCRIPT_ARGS"" )"	334:2:9445:9483	5040777	6	True				
ANR	5040839	AssignmentExpression	"tmp = param ( ""LIBVIRT_XML_SCRIPT_ARGS"" )"		5040777	0		=			
ANR	5040840	Identifier	tmp		5040777	0					
ANR	5040841	CallExpression	"param ( ""LIBVIRT_XML_SCRIPT_ARGS"" )"		5040777	1					
ANR	5040842	Callee	param		5040777	0					
ANR	5040843	Identifier	param		5040777	0					
ANR	5040844	ArgumentList	"""LIBVIRT_XML_SCRIPT_ARGS"""		5040777	1					
ANR	5040845	Argument	"""LIBVIRT_XML_SCRIPT_ARGS"""		5040777	0					
ANR	5040846	PrimaryExpression	"""LIBVIRT_XML_SCRIPT_ARGS"""		5040777	0					
ANR	5040847	IfStatement	if ( tmp != NULL )		5040777	7					
ANR	5040848	Condition	tmp != NULL	335:5:9490:9500	5040777	0	True				
ANR	5040849	EqualityExpression	tmp != NULL		5040777	0		!=			
ANR	5040850	Identifier	tmp		5040777	0					
ANR	5040851	Identifier	NULL		5040777	1					
ANR	5040852	CompoundStatement		23:6:695:712	5040777	1					
ANR	5040853	IdentifierDeclStatement	MyString errormsg ;	337:6:9515:9532	5040777	0	True				
ANR	5040854	IdentifierDecl	errormsg		5040777	0					
ANR	5040855	IdentifierDeclType	MyString		5040777	0					
ANR	5040856	Identifier	errormsg		5040777	1					
ANR	5040857	ExpressionStatement	"args . AppendArgsV1RawOrV2Quoted ( tmp , & errormsg )"	338:6:9540:9585	5040777	1	True				
ANR	5040858	CallExpression	"args . AppendArgsV1RawOrV2Quoted ( tmp , & errormsg )"		5040777	0					
ANR	5040859	Callee	args . AppendArgsV1RawOrV2Quoted		5040777	0					
ANR	5040860	MemberAccess	args . AppendArgsV1RawOrV2Quoted		5040777	0					
ANR	5040861	Identifier	args		5040777	0					
ANR	5040862	Identifier	AppendArgsV1RawOrV2Quoted		5040777	1					
ANR	5040863	ArgumentList	tmp		5040777	1					
ANR	5040864	Argument	tmp		5040777	0					
ANR	5040865	Identifier	tmp		5040777	0					
ANR	5040866	Argument	& errormsg		5040777	1					
ANR	5040867	UnaryOperationExpression	& errormsg		5040777	0					
ANR	5040868	UnaryOperator	&		5040777	0					
ANR	5040869	Identifier	errormsg		5040777	1					
ANR	5040870	ExpressionStatement	free ( tmp )	339:6:9593:9602	5040777	2	True				
ANR	5040871	CallExpression	free ( tmp )		5040777	0					
ANR	5040872	Callee	free		5040777	0					
ANR	5040873	Identifier	free		5040777	0					
ANR	5040874	ArgumentList	tmp		5040777	1					
ANR	5040875	Argument	tmp		5040777	0					
ANR	5040876	Identifier	tmp		5040777	0					
ANR	5040877	IdentifierDeclStatement	"StringList input_strings , output_strings , error_strings ;"	341:2:9612:9667	5040777	8	True				
ANR	5040878	IdentifierDecl	input_strings		5040777	0					
ANR	5040879	IdentifierDeclType	StringList		5040777	0					
ANR	5040880	Identifier	input_strings		5040777	1					
ANR	5040881	IdentifierDecl	output_strings		5040777	1					
ANR	5040882	IdentifierDeclType	StringList		5040777	0					
ANR	5040883	Identifier	output_strings		5040777	1					
ANR	5040884	IdentifierDecl	error_strings		5040777	2					
ANR	5040885	IdentifierDeclType	StringList		5040777	0					
ANR	5040886	Identifier	error_strings		5040777	1					
ANR	5040887	IdentifierDeclStatement	MyString classad_string ;	342:2:9671:9694	5040777	9	True				
ANR	5040888	IdentifierDecl	classad_string		5040777	0					
ANR	5040889	IdentifierDeclType	MyString		5040777	0					
ANR	5040890	Identifier	classad_string		5040777	1					
ANR	5040891	ExpressionStatement	m_classAd . sPrint ( classad_string )	343:2:9698:9730	5040777	10	True				
ANR	5040892	CallExpression	m_classAd . sPrint ( classad_string )		5040777	0					
ANR	5040893	Callee	m_classAd . sPrint		5040777	0					
ANR	5040894	MemberAccess	m_classAd . sPrint		5040777	0					
ANR	5040895	Identifier	m_classAd		5040777	0					
ANR	5040896	Identifier	sPrint		5040777	1					
ANR	5040897	ArgumentList	classad_string		5040777	1					
ANR	5040898	Argument	classad_string		5040777	0					
ANR	5040899	Identifier	classad_string		5040777	0					
ANR	5040900	ExpressionStatement	classad_string += VMPARAM_XEN_BOOTLOADER	344:2:9734:9774	5040777	11	True				
ANR	5040901	AssignmentExpression	classad_string += VMPARAM_XEN_BOOTLOADER		5040777	0		+=			
ANR	5040902	Identifier	classad_string		5040777	0					
ANR	5040903	Identifier	VMPARAM_XEN_BOOTLOADER		5040777	1					
ANR	5040904	ExpressionStatement	"classad_string += "" = \\"""""	345:2:9778:9803	5040777	12	True				
ANR	5040905	AssignmentExpression	"classad_string += "" = \\"""""		5040777	0		+=			
ANR	5040906	Identifier	classad_string		5040777	0					
ANR	5040907	PrimaryExpression	""" = \\"""""		5040777	1					
ANR	5040908	ExpressionStatement	classad_string += m_xen_bootloader	346:2:9807:9841	5040777	13	True				
ANR	5040909	AssignmentExpression	classad_string += m_xen_bootloader		5040777	0		+=			
ANR	5040910	Identifier	classad_string		5040777	0					
ANR	5040911	Identifier	m_xen_bootloader		5040777	1					
ANR	5040912	ExpressionStatement	"classad_string += ""\\""\\n"""	347:2:9845:9869	5040777	14	True				
ANR	5040913	AssignmentExpression	"classad_string += ""\\""\\n"""		5040777	0		+=			
ANR	5040914	Identifier	classad_string		5040777	0					
ANR	5040915	PrimaryExpression	"""\\""\\n"""		5040777	1					
ANR	5040916	IfStatement	if ( classad_string . find ( VMPARAM_XEN_INITRD ) < 1 )		5040777	15					
ANR	5040917	Condition	classad_string . find ( VMPARAM_XEN_INITRD ) < 1	348:5:9876:9918	5040777	0	True				
ANR	5040918	RelationalExpression	classad_string . find ( VMPARAM_XEN_INITRD ) < 1		5040777	0		<			
ANR	5040919	CallExpression	classad_string . find ( VMPARAM_XEN_INITRD )		5040777	0					
ANR	5040920	Callee	classad_string . find		5040777	0					
ANR	5040921	MemberAccess	classad_string . find		5040777	0					
ANR	5040922	Identifier	classad_string		5040777	0					
ANR	5040923	Identifier	find		5040777	1					
ANR	5040924	ArgumentList	VMPARAM_XEN_INITRD		5040777	1					
ANR	5040925	Argument	VMPARAM_XEN_INITRD		5040777	0					
ANR	5040926	Identifier	VMPARAM_XEN_INITRD		5040777	0					
ANR	5040927	PrimaryExpression	1		5040777	1					
ANR	5040928	CompoundStatement		35:4:1105:1105	5040777	1					
ANR	5040929	ExpressionStatement	classad_string += VMPARAM_XEN_INITRD	350:6:9933:9969	5040777	0	True				
ANR	5040930	AssignmentExpression	classad_string += VMPARAM_XEN_INITRD		5040777	0		+=			
ANR	5040931	Identifier	classad_string		5040777	0					
ANR	5040932	Identifier	VMPARAM_XEN_INITRD		5040777	1					
ANR	5040933	ExpressionStatement	"classad_string += "" = \\"""""	351:6:9977:10002	5040777	1	True				
ANR	5040934	AssignmentExpression	"classad_string += "" = \\"""""		5040777	0		+=			
ANR	5040935	Identifier	classad_string		5040777	0					
ANR	5040936	PrimaryExpression	""" = \\"""""		5040777	1					
ANR	5040937	ExpressionStatement	classad_string += m_xen_initrd_file	352:6:10010:10045	5040777	2	True				
ANR	5040938	AssignmentExpression	classad_string += m_xen_initrd_file		5040777	0		+=			
ANR	5040939	Identifier	classad_string		5040777	0					
ANR	5040940	Identifier	m_xen_initrd_file		5040777	1					
ANR	5040941	ExpressionStatement	"classad_string += ""\\""\\n"""	353:6:10053:10077	5040777	3	True				
ANR	5040942	AssignmentExpression	"classad_string += ""\\""\\n"""		5040777	0		+=			
ANR	5040943	Identifier	classad_string		5040777	0					
ANR	5040944	PrimaryExpression	"""\\""\\n"""		5040777	1					
ANR	5040945	IfStatement	if ( ! m_vm_bridge_interface . empty ( ) )		5040777	16					
ANR	5040946	Condition	! m_vm_bridge_interface . empty ( )	355:5:10090:10119	5040777	0	True				
ANR	5040947	UnaryOperationExpression	! m_vm_bridge_interface . empty ( )		5040777	0					
ANR	5040948	UnaryOperator	!		5040777	0					
ANR	5040949	CallExpression	m_vm_bridge_interface . empty ( )		5040777	1					
ANR	5040950	Callee	m_vm_bridge_interface . empty		5040777	0					
ANR	5040951	MemberAccess	m_vm_bridge_interface . empty		5040777	0					
ANR	5040952	Identifier	m_vm_bridge_interface		5040777	0					
ANR	5040953	Identifier	empty		5040777	1					
ANR	5040954	ArgumentList			5040777	1					
ANR	5040955	CompoundStatement		42:4:1306:1306	5040777	1					
ANR	5040956	ExpressionStatement	classad_string += VMPARAM_BRIDGE_INTERFACE	357:6:10134:10176	5040777	0	True				
ANR	5040957	AssignmentExpression	classad_string += VMPARAM_BRIDGE_INTERFACE		5040777	0		+=			
ANR	5040958	Identifier	classad_string		5040777	0					
ANR	5040959	Identifier	VMPARAM_BRIDGE_INTERFACE		5040777	1					
ANR	5040960	ExpressionStatement	"classad_string += "" = \\"""""	358:6:10184:10209	5040777	1	True				
ANR	5040961	AssignmentExpression	"classad_string += "" = \\"""""		5040777	0		+=			
ANR	5040962	Identifier	classad_string		5040777	0					
ANR	5040963	PrimaryExpression	""" = \\"""""		5040777	1					
ANR	5040964	ExpressionStatement	classad_string += m_vm_bridge_interface . c_str ( )	359:6:10217:10264	5040777	2	True				
ANR	5040965	AssignmentExpression	classad_string += m_vm_bridge_interface . c_str ( )		5040777	0		+=			
ANR	5040966	Identifier	classad_string		5040777	0					
ANR	5040967	CallExpression	m_vm_bridge_interface . c_str ( )		5040777	1					
ANR	5040968	Callee	m_vm_bridge_interface . c_str		5040777	0					
ANR	5040969	MemberAccess	m_vm_bridge_interface . c_str		5040777	0					
ANR	5040970	Identifier	m_vm_bridge_interface		5040777	0					
ANR	5040971	Identifier	c_str		5040777	1					
ANR	5040972	ArgumentList			5040777	1					
ANR	5040973	ExpressionStatement	"classad_string += ""\\""\\n"""	360:6:10272:10296	5040777	3	True				
ANR	5040974	AssignmentExpression	"classad_string += ""\\""\\n"""		5040777	0		+=			
ANR	5040975	Identifier	classad_string		5040777	0					
ANR	5040976	PrimaryExpression	"""\\""\\n"""		5040777	1					
ANR	5040977	IfStatement	if ( classad_string . find ( ATTR_JOB_VM_NETWORKING_TYPE ) < 1 )		5040777	17					
ANR	5040978	Condition	classad_string . find ( ATTR_JOB_VM_NETWORKING_TYPE ) < 1	362:5:10309:10360	5040777	0	True				
ANR	5040979	RelationalExpression	classad_string . find ( ATTR_JOB_VM_NETWORKING_TYPE ) < 1		5040777	0		<			
ANR	5040980	CallExpression	classad_string . find ( ATTR_JOB_VM_NETWORKING_TYPE )		5040777	0					
ANR	5040981	Callee	classad_string . find		5040777	0					
ANR	5040982	MemberAccess	classad_string . find		5040777	0					
ANR	5040983	Identifier	classad_string		5040777	0					
ANR	5040984	Identifier	find		5040777	1					
ANR	5040985	ArgumentList	ATTR_JOB_VM_NETWORKING_TYPE		5040777	1					
ANR	5040986	Argument	ATTR_JOB_VM_NETWORKING_TYPE		5040777	0					
ANR	5040987	Identifier	ATTR_JOB_VM_NETWORKING_TYPE		5040777	0					
ANR	5040988	PrimaryExpression	1		5040777	1					
ANR	5040989	CompoundStatement		49:4:1547:1547	5040777	1					
ANR	5040990	ExpressionStatement	classad_string += ATTR_JOB_VM_NETWORKING_TYPE	364:6:10375:10420	5040777	0	True				
ANR	5040991	AssignmentExpression	classad_string += ATTR_JOB_VM_NETWORKING_TYPE		5040777	0		+=			
ANR	5040992	Identifier	classad_string		5040777	0					
ANR	5040993	Identifier	ATTR_JOB_VM_NETWORKING_TYPE		5040777	1					
ANR	5040994	ExpressionStatement	"classad_string += "" = \\"""""	365:6:10428:10453	5040777	1	True				
ANR	5040995	AssignmentExpression	"classad_string += "" = \\"""""		5040777	0		+=			
ANR	5040996	Identifier	classad_string		5040777	0					
ANR	5040997	PrimaryExpression	""" = \\"""""		5040777	1					
ANR	5040998	ExpressionStatement	classad_string += m_vm_networking_type . Value ( )	366:6:10461:10507	5040777	2	True				
ANR	5040999	AssignmentExpression	classad_string += m_vm_networking_type . Value ( )		5040777	0		+=			
ANR	5041000	Identifier	classad_string		5040777	0					
ANR	5041001	CallExpression	m_vm_networking_type . Value ( )		5040777	1					
ANR	5041002	Callee	m_vm_networking_type . Value		5040777	0					
ANR	5041003	MemberAccess	m_vm_networking_type . Value		5040777	0					
ANR	5041004	Identifier	m_vm_networking_type		5040777	0					
ANR	5041005	Identifier	Value		5040777	1					
ANR	5041006	ArgumentList			5040777	1					
ANR	5041007	ExpressionStatement	"classad_string += ""\\""\\n"""	367:6:10515:10539	5040777	3	True				
ANR	5041008	AssignmentExpression	"classad_string += ""\\""\\n"""		5040777	0		+=			
ANR	5041009	Identifier	classad_string		5040777	0					
ANR	5041010	PrimaryExpression	"""\\""\\n"""		5040777	1					
ANR	5041011	ExpressionStatement	input_strings . append ( classad_string . Value ( ) )	369:2:10549:10593	5040777	18	True				
ANR	5041012	CallExpression	input_strings . append ( classad_string . Value ( ) )		5040777	0					
ANR	5041013	Callee	input_strings . append		5040777	0					
ANR	5041014	MemberAccess	input_strings . append		5040777	0					
ANR	5041015	Identifier	input_strings		5040777	0					
ANR	5041016	Identifier	append		5040777	1					
ANR	5041017	ArgumentList	classad_string . Value ( )		5040777	1					
ANR	5041018	Argument	classad_string . Value ( )		5040777	0					
ANR	5041019	CallExpression	classad_string . Value ( )		5040777	0					
ANR	5041020	Callee	classad_string . Value		5040777	0					
ANR	5041021	MemberAccess	classad_string . Value		5040777	0					
ANR	5041022	Identifier	classad_string		5040777	0					
ANR	5041023	Identifier	Value		5040777	1					
ANR	5041024	ArgumentList			5040777	1					
ANR	5041025	ExpressionStatement	tmp = input_strings . print_to_string ( )	371:2:10600:10637	5040777	19	True				
ANR	5041026	AssignmentExpression	tmp = input_strings . print_to_string ( )		5040777	0		=			
ANR	5041027	Identifier	tmp		5040777	0					
ANR	5041028	CallExpression	input_strings . print_to_string ( )		5040777	1					
ANR	5041029	Callee	input_strings . print_to_string		5040777	0					
ANR	5041030	MemberAccess	input_strings . print_to_string		5040777	0					
ANR	5041031	Identifier	input_strings		5040777	0					
ANR	5041032	Identifier	print_to_string		5040777	1					
ANR	5041033	ArgumentList			5040777	1					
ANR	5041034	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""LIBVIRT_XML_SCRIPT_ARGS input_strings= %s\\n"" , tmp )"	372:2:10641:10714	5040777	20	True				
ANR	5041035	CallExpression	"vmprintf ( D_FULLDEBUG , ""LIBVIRT_XML_SCRIPT_ARGS input_strings= %s\\n"" , tmp )"		5040777	0					
ANR	5041036	Callee	vmprintf		5040777	0					
ANR	5041037	Identifier	vmprintf		5040777	0					
ANR	5041038	ArgumentList	D_FULLDEBUG		5040777	1					
ANR	5041039	Argument	D_FULLDEBUG		5040777	0					
ANR	5041040	Identifier	D_FULLDEBUG		5040777	0					
ANR	5041041	Argument	"""LIBVIRT_XML_SCRIPT_ARGS input_strings= %s\\n"""		5040777	1					
ANR	5041042	PrimaryExpression	"""LIBVIRT_XML_SCRIPT_ARGS input_strings= %s\\n"""		5040777	0					
ANR	5041043	Argument	tmp		5040777	2					
ANR	5041044	Identifier	tmp		5040777	0					
ANR	5041045	ExpressionStatement	free ( tmp )	373:2:10718:10727	5040777	21	True				
ANR	5041046	CallExpression	free ( tmp )		5040777	0					
ANR	5041047	Callee	free		5040777	0					
ANR	5041048	Identifier	free		5040777	0					
ANR	5041049	ArgumentList	tmp		5040777	1					
ANR	5041050	Argument	tmp		5040777	0					
ANR	5041051	Identifier	tmp		5040777	0					
ANR	5041052	IdentifierDeclStatement	"int ret = systemCommand ( args , PRIV_ROOT , & output_strings , & input_strings , & error_strings , false ) ;"	375:2:10732:10828	5040777	22	True				
ANR	5041053	IdentifierDecl	"ret = systemCommand ( args , PRIV_ROOT , & output_strings , & input_strings , & error_strings , false )"		5040777	0					
ANR	5041054	IdentifierDeclType	int		5040777	0					
ANR	5041055	Identifier	ret		5040777	1					
ANR	5041056	AssignmentExpression	"ret = systemCommand ( args , PRIV_ROOT , & output_strings , & input_strings , & error_strings , false )"		5040777	2		=			
ANR	5041057	Identifier	ret		5040777	0					
ANR	5041058	CallExpression	"systemCommand ( args , PRIV_ROOT , & output_strings , & input_strings , & error_strings , false )"		5040777	1					
ANR	5041059	Callee	systemCommand		5040777	0					
ANR	5041060	Identifier	systemCommand		5040777	0					
ANR	5041061	ArgumentList	args		5040777	1					
ANR	5041062	Argument	args		5040777	0					
ANR	5041063	Identifier	args		5040777	0					
ANR	5041064	Argument	PRIV_ROOT		5040777	1					
ANR	5041065	Identifier	PRIV_ROOT		5040777	0					
ANR	5041066	Argument	& output_strings		5040777	2					
ANR	5041067	UnaryOperationExpression	& output_strings		5040777	0					
ANR	5041068	UnaryOperator	&		5040777	0					
ANR	5041069	Identifier	output_strings		5040777	1					
ANR	5041070	Argument	& input_strings		5040777	3					
ANR	5041071	UnaryOperationExpression	& input_strings		5040777	0					
ANR	5041072	UnaryOperator	&		5040777	0					
ANR	5041073	Identifier	input_strings		5040777	1					
ANR	5041074	Argument	& error_strings		5040777	4					
ANR	5041075	UnaryOperationExpression	& error_strings		5040777	0					
ANR	5041076	UnaryOperator	&		5040777	0					
ANR	5041077	Identifier	error_strings		5040777	1					
ANR	5041078	Argument	false		5040777	5					
ANR	5041079	Identifier	false		5040777	0					
ANR	5041080	ExpressionStatement	error_strings . rewind ( )	376:2:10832:10854	5040777	23	True				
ANR	5041081	CallExpression	error_strings . rewind ( )		5040777	0					
ANR	5041082	Callee	error_strings . rewind		5040777	0					
ANR	5041083	MemberAccess	error_strings . rewind		5040777	0					
ANR	5041084	Identifier	error_strings		5040777	0					
ANR	5041085	Identifier	rewind		5040777	1					
ANR	5041086	ArgumentList			5040777	1					
ANR	5041087	IfStatement	if ( ret != 0 )		5040777	24					
ANR	5041088	Condition	ret != 0	377:5:10861:10868	5040777	0	True				
ANR	5041089	EqualityExpression	ret != 0		5040777	0		!=			
ANR	5041090	Identifier	ret		5040777	0					
ANR	5041091	PrimaryExpression	0		5040777	1					
ANR	5041092	CompoundStatement		64:4:2055:2055	5040777	1					
ANR	5041093	ExpressionStatement	"vmprintf ( D_ALWAYS , ""XML helper script could not be executed\\n"" )"	379:6:10883:10946	5040777	0	True				
ANR	5041094	CallExpression	"vmprintf ( D_ALWAYS , ""XML helper script could not be executed\\n"" )"		5040777	0					
ANR	5041095	Callee	vmprintf		5040777	0					
ANR	5041096	Identifier	vmprintf		5040777	0					
ANR	5041097	ArgumentList	D_ALWAYS		5040777	1					
ANR	5041098	Argument	D_ALWAYS		5040777	0					
ANR	5041099	Identifier	D_ALWAYS		5040777	0					
ANR	5041100	Argument	"""XML helper script could not be executed\\n"""		5040777	1					
ANR	5041101	PrimaryExpression	"""XML helper script could not be executed\\n"""		5040777	0					
ANR	5041102	ExpressionStatement	output_strings . rewind ( )	380:6:10954:10977	5040777	1	True				
ANR	5041103	CallExpression	output_strings . rewind ( )		5040777	0					
ANR	5041104	Callee	output_strings . rewind		5040777	0					
ANR	5041105	MemberAccess	output_strings . rewind		5040777	0					
ANR	5041106	Identifier	output_strings		5040777	0					
ANR	5041107	Identifier	rewind		5040777	1					
ANR	5041108	ArgumentList			5040777	1					
ANR	5041109	WhileStatement	while ( ( tmp = error_strings . next ( ) ) != NULL )		5040777	2					
ANR	5041110	Condition	( tmp = error_strings . next ( ) ) != NULL	384:12:11148:11183	5040777	0	True				
ANR	5041111	EqualityExpression	( tmp = error_strings . next ( ) ) != NULL		5040777	0		!=			
ANR	5041112	AssignmentExpression	tmp = error_strings . next ( )		5040777	0		=			
ANR	5041113	Identifier	tmp		5040777	0					
ANR	5041114	CallExpression	error_strings . next ( )		5040777	1					
ANR	5041115	Callee	error_strings . next		5040777	0					
ANR	5041116	MemberAccess	error_strings . next		5040777	0					
ANR	5041117	Identifier	error_strings		5040777	0					
ANR	5041118	Identifier	next		5040777	1					
ANR	5041119	ArgumentList			5040777	1					
ANR	5041120	Identifier	NULL		5040777	1					
ANR	5041121	CompoundStatement		71:1:2367:2367	5040777	1					
ANR	5041122	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""Helper stderr output: %s\\n"" , tmp )"	386:3:11192:11248	5040777	0	True				
ANR	5041123	CallExpression	"vmprintf ( D_FULLDEBUG , ""Helper stderr output: %s\\n"" , tmp )"		5040777	0					
ANR	5041124	Callee	vmprintf		5040777	0					
ANR	5041125	Identifier	vmprintf		5040777	0					
ANR	5041126	ArgumentList	D_FULLDEBUG		5040777	1					
ANR	5041127	Argument	D_FULLDEBUG		5040777	0					
ANR	5041128	Identifier	D_FULLDEBUG		5040777	0					
ANR	5041129	Argument	"""Helper stderr output: %s\\n"""		5040777	1					
ANR	5041130	PrimaryExpression	"""Helper stderr output: %s\\n"""		5040777	0					
ANR	5041131	Argument	tmp		5040777	2					
ANR	5041132	Identifier	tmp		5040777	0					
ANR	5041133	ReturnStatement	return false ;	388:6:11259:11271	5040777	3	True				
ANR	5041134	Identifier	false		5040777	0					
ANR	5041135	ExpressionStatement	error_strings . rewind ( )	390:2:11281:11303	5040777	25	True				
ANR	5041136	CallExpression	error_strings . rewind ( )		5040777	0					
ANR	5041137	Callee	error_strings . rewind		5040777	0					
ANR	5041138	MemberAccess	error_strings . rewind		5040777	0					
ANR	5041139	Identifier	error_strings		5040777	0					
ANR	5041140	Identifier	rewind		5040777	1					
ANR	5041141	ArgumentList			5040777	1					
ANR	5041142	WhileStatement	while ( ( tmp = error_strings . next ( ) ) != NULL )		5040777	26					
ANR	5041143	Condition	( tmp = error_strings . next ( ) ) != NULL	391:8:11313:11348	5040777	0	True				
ANR	5041144	EqualityExpression	( tmp = error_strings . next ( ) ) != NULL		5040777	0		!=			
ANR	5041145	AssignmentExpression	tmp = error_strings . next ( )		5040777	0		=			
ANR	5041146	Identifier	tmp		5040777	0					
ANR	5041147	CallExpression	error_strings . next ( )		5040777	1					
ANR	5041148	Callee	error_strings . next		5040777	0					
ANR	5041149	MemberAccess	error_strings . next		5040777	0					
ANR	5041150	Identifier	error_strings		5040777	0					
ANR	5041151	Identifier	next		5040777	1					
ANR	5041152	ArgumentList			5040777	1					
ANR	5041153	Identifier	NULL		5040777	1					
ANR	5041154	CompoundStatement		78:4:2535:2535	5040777	1					
ANR	5041155	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Helper stderr output: %s\\n"" , tmp )"	393:6:11363:11416	5040777	0	True				
ANR	5041156	CallExpression	"vmprintf ( D_ALWAYS , ""Helper stderr output: %s\\n"" , tmp )"		5040777	0					
ANR	5041157	Callee	vmprintf		5040777	0					
ANR	5041158	Identifier	vmprintf		5040777	0					
ANR	5041159	ArgumentList	D_ALWAYS		5040777	1					
ANR	5041160	Argument	D_ALWAYS		5040777	0					
ANR	5041161	Identifier	D_ALWAYS		5040777	0					
ANR	5041162	Argument	"""Helper stderr output: %s\\n"""		5040777	1					
ANR	5041163	PrimaryExpression	"""Helper stderr output: %s\\n"""		5040777	0					
ANR	5041164	Argument	tmp		5040777	2					
ANR	5041165	Identifier	tmp		5040777	0					
ANR	5041166	ExpressionStatement	output_strings . rewind ( )	395:2:11426:11449	5040777	27	True				
ANR	5041167	CallExpression	output_strings . rewind ( )		5040777	0					
ANR	5041168	Callee	output_strings . rewind		5040777	0					
ANR	5041169	MemberAccess	output_strings . rewind		5040777	0					
ANR	5041170	Identifier	output_strings		5040777	0					
ANR	5041171	Identifier	rewind		5040777	1					
ANR	5041172	ArgumentList			5040777	1					
ANR	5041173	WhileStatement	while ( ( tmp = output_strings . next ( ) ) != NULL )		5040777	28					
ANR	5041174	Condition	( tmp = output_strings . next ( ) ) != NULL	396:8:11459:11495	5040777	0	True				
ANR	5041175	EqualityExpression	( tmp = output_strings . next ( ) ) != NULL		5040777	0		!=			
ANR	5041176	AssignmentExpression	tmp = output_strings . next ( )		5040777	0		=			
ANR	5041177	Identifier	tmp		5040777	0					
ANR	5041178	CallExpression	output_strings . next ( )		5040777	1					
ANR	5041179	Callee	output_strings . next		5040777	0					
ANR	5041180	MemberAccess	output_strings . next		5040777	0					
ANR	5041181	Identifier	output_strings		5040777	0					
ANR	5041182	Identifier	next		5040777	1					
ANR	5041183	ArgumentList			5040777	1					
ANR	5041184	Identifier	NULL		5040777	1					
ANR	5041185	CompoundStatement		83:4:2682:2682	5040777	1					
ANR	5041186	ExpressionStatement	m_xml += tmp	398:6:11510:11522	5040777	0	True				
ANR	5041187	AssignmentExpression	m_xml += tmp		5040777	0		+=			
ANR	5041188	Identifier	m_xml		5040777	0					
ANR	5041189	Identifier	tmp		5040777	1					
ANR	5041190	ReturnStatement	return true ;	400:2:11532:11543	5040777	29	True				
ANR	5041191	Identifier	true		5040777	0					
ANR	5041192	ReturnType	bool		5040777	1					
ANR	5041193	Identifier	VirshType :: CreateVirshConfigFile		5040777	2					
ANR	5041194	ParameterList	const char * filename		5040777	3					
ANR	5041195	Parameter	const char * filename	314:38:8797:8816	5040777	0	True				
ANR	5041196	ParameterType	const char *		5040777	0					
ANR	5041197	Identifier	filename		5040777	1					
ANR	5041198	CFGEntryNode	ENTRY		5040777		True				
ANR	5041199	CFGExitNode	EXIT		5040777		True				
ANR	5041200	Symbol	m_xen_bootloader		5040777						
ANR	5041201	Symbol	m_vm_bridge_interface		5040777						
ANR	5041202	Symbol	classad_string . Value		5040777						
ANR	5041203	Symbol	error_strings . next		5040777						
ANR	5041204	Symbol	systemCommand		5040777						
ANR	5041205	Symbol	classad_string		5040777						
ANR	5041206	Symbol	errormsg		5040777						
ANR	5041207	Symbol	VMPARAM_BRIDGE_INTERFACE		5040777						
ANR	5041208	Symbol	classad_string . find		5040777						
ANR	5041209	Symbol	param		5040777						
ANR	5041210	Symbol	tmp		5040777						
ANR	5041211	Symbol	output_strings		5040777						
ANR	5041212	Symbol	error_strings		5040777						
ANR	5041213	Symbol	input_strings		5040777						
ANR	5041214	Symbol	& errormsg		5040777						
ANR	5041215	Symbol	& output_strings		5040777						
ANR	5041216	Symbol	output_strings . next		5040777						
ANR	5041217	Symbol	input_strings . print_to_string		5040777						
ANR	5041218	Symbol	ret		5040777						
ANR	5041219	Symbol	m_vm_bridge_interface . c_str		5040777						
ANR	5041220	Symbol	NULL		5040777						
ANR	5041221	Symbol	D_ALWAYS		5040777						
ANR	5041222	Symbol	false		5040777						
ANR	5041223	Symbol	m_xml		5040777						
ANR	5041224	Symbol	m_vm_networking_type		5040777						
ANR	5041225	Symbol	D_FULLDEBUG		5040777						
ANR	5041226	Symbol	args		5040777						
ANR	5041227	Symbol	filename		5040777						
ANR	5041228	Symbol	VMPARAM_XEN_INITRD		5040777						
ANR	5041229	Symbol	m_vm_bridge_interface . empty		5040777						
ANR	5041230	Symbol	& error_strings		5040777						
ANR	5041231	Symbol	& input_strings		5040777						
ANR	5041232	Symbol	ATTR_JOB_VM_NETWORKING_TYPE		5040777						
ANR	5041233	Symbol	true		5040777						
ANR	5041234	Symbol	PRIV_ROOT		5040777						
ANR	5041235	Symbol	VMPARAM_XEN_BOOTLOADER		5040777						
ANR	5041236	Symbol	m_xen_initrd_file		5040777						
ANR	5041237	Symbol	m_vm_networking_type . Value		5040777						
ANR	5041238	Symbol	m_classAd		5040777						
ANR	5041239	Function	VirshType :: ResumeFromSoftSuspend	403:0:11548:12436							
ANR	5041240	FunctionDef	VirshType :: ResumeFromSoftSuspend ()		5041239	0					
ANR	5041241	CompoundStatement		405:0:11592:12436	5041239	0					
ANR	5041242	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::ResumeFromSoftSuspend\\n"" )"	406:1:11595:11661	5041239	0	True				
ANR	5041243	CallExpression	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::ResumeFromSoftSuspend\\n"" )"		5041239	0					
ANR	5041244	Callee	vmprintf		5041239	0					
ANR	5041245	Identifier	vmprintf		5041239	0					
ANR	5041246	ArgumentList	D_FULLDEBUG		5041239	1					
ANR	5041247	Argument	D_FULLDEBUG		5041239	0					
ANR	5041248	Identifier	D_FULLDEBUG		5041239	0					
ANR	5041249	Argument	"""Inside VirshType::ResumeFromSoftSuspend\\n"""		5041239	1					
ANR	5041250	PrimaryExpression	"""Inside VirshType::ResumeFromSoftSuspend\\n"""		5041239	0					
ANR	5041251	IfStatement	if ( ( m_configfile . Length ( ) == 0 ) )		5041239	1					
ANR	5041252	Condition	m_configfile . Length ( ) == 0	407:5:11668:11695	5041239	0	True				
ANR	5041253	EqualityExpression	m_configfile . Length ( ) == 0		5041239	0		==			
ANR	5041254	CallExpression	m_configfile . Length ( )		5041239	0					
ANR	5041255	Callee	m_configfile . Length		5041239	0					
ANR	5041256	MemberAccess	m_configfile . Length		5041239	0					
ANR	5041257	Identifier	m_configfile		5041239	0					
ANR	5041258	Identifier	Length		5041239	1					
ANR	5041259	ArgumentList			5041239	1					
ANR	5041260	PrimaryExpression	0		5041239	1					
ANR	5041261	CompoundStatement		3:35:105:105	5041239	1					
ANR	5041262	ReturnStatement	return false ;	408:2:11702:11714	5041239	0	True				
ANR	5041263	Identifier	false		5041239	0					
ANR	5041264	IfStatement	if ( m_is_soft_suspended )		5041239	2					
ANR	5041265	Condition	m_is_soft_suspended	411:5:11725:11743	5041239	0	True				
ANR	5041266	Identifier	m_is_soft_suspended		5041239	0					
ANR	5041267	CompoundStatement		20:2:563:596	5041239	1					
ANR	5041268	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	413:2:11752:11785	5041239	0	True				
ANR	5041269	IdentifierDecl	priv = set_root_priv ( )		5041239	0					
ANR	5041270	IdentifierDeclType	priv_state		5041239	0					
ANR	5041271	Identifier	priv		5041239	1					
ANR	5041272	AssignmentExpression	priv = set_root_priv ( )		5041239	2		=			
ANR	5041273	Identifier	priv		5041239	0					
ANR	5041274	CallExpression	set_root_priv ( )		5041239	1					
ANR	5041275	Callee	set_root_priv		5041239	0					
ANR	5041276	Identifier	set_root_priv		5041239	0					
ANR	5041277	ArgumentList			5041239	1					
ANR	5041278	IdentifierDeclStatement	"virDomainPtr dom = virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) ) ;"	414:2:11789:11870	5041239	1	True				
ANR	5041279	IdentifierDecl	"dom = virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) )"		5041239	0					
ANR	5041280	IdentifierDeclType	virDomainPtr		5041239	0					
ANR	5041281	Identifier	dom		5041239	1					
ANR	5041282	AssignmentExpression	"dom = virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) )"		5041239	2		=			
ANR	5041283	Identifier	dom		5041239	0					
ANR	5041284	CallExpression	"virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) )"		5041239	1					
ANR	5041285	Callee	virDomainLookupByName		5041239	0					
ANR	5041286	Identifier	virDomainLookupByName		5041239	0					
ANR	5041287	ArgumentList	m_libvirt_connection		5041239	1					
ANR	5041288	Argument	m_libvirt_connection		5041239	0					
ANR	5041289	Identifier	m_libvirt_connection		5041239	0					
ANR	5041290	Argument	m_vm_name . Value ( )		5041239	1					
ANR	5041291	CallExpression	m_vm_name . Value ( )		5041239	0					
ANR	5041292	Callee	m_vm_name . Value		5041239	0					
ANR	5041293	MemberAccess	m_vm_name . Value		5041239	0					
ANR	5041294	Identifier	m_vm_name		5041239	0					
ANR	5041295	Identifier	Value		5041239	1					
ANR	5041296	ArgumentList			5041239	1					
ANR	5041297	ExpressionStatement	set_priv ( priv )	415:2:11874:11888	5041239	2	True				
ANR	5041298	CallExpression	set_priv ( priv )		5041239	0					
ANR	5041299	Callee	set_priv		5041239	0					
ANR	5041300	Identifier	set_priv		5041239	0					
ANR	5041301	ArgumentList	priv		5041239	1					
ANR	5041302	Argument	priv		5041239	0					
ANR	5041303	Identifier	priv		5041239	0					
ANR	5041304	IfStatement	if ( dom == NULL )		5041239	3					
ANR	5041305	Condition	dom == NULL	416:5:11895:11905	5041239	0	True				
ANR	5041306	EqualityExpression	dom == NULL		5041239	0		==			
ANR	5041307	Identifier	dom		5041239	0					
ANR	5041308	Identifier	NULL		5041239	1					
ANR	5041309	CompoundStatement		14:6:327:386	5041239	1					
ANR	5041310	IdentifierDeclStatement	virErrorPtr err = virConnGetLastError ( m_libvirt_connection ) ;	418:6:11920:11979	5041239	0	True				
ANR	5041311	IdentifierDecl	err = virConnGetLastError ( m_libvirt_connection )		5041239	0					
ANR	5041312	IdentifierDeclType	virErrorPtr		5041239	0					
ANR	5041313	Identifier	err		5041239	1					
ANR	5041314	AssignmentExpression	err = virConnGetLastError ( m_libvirt_connection )		5041239	2		=			
ANR	5041315	Identifier	err		5041239	0					
ANR	5041316	CallExpression	virConnGetLastError ( m_libvirt_connection )		5041239	1					
ANR	5041317	Callee	virConnGetLastError		5041239	0					
ANR	5041318	Identifier	virConnGetLastError		5041239	0					
ANR	5041319	ArgumentList	m_libvirt_connection		5041239	1					
ANR	5041320	Argument	m_libvirt_connection		5041239	0					
ANR	5041321	Identifier	m_libvirt_connection		5041239	0					
ANR	5041322	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Error finding domain %s: %s\\n"" , m_vm_name . Value ( ) , ( err ? err -> message : ""No reason found"" ) )"	419:6:11987:12099	5041239	1	True				
ANR	5041323	CallExpression	"vmprintf ( D_ALWAYS , ""Error finding domain %s: %s\\n"" , m_vm_name . Value ( ) , ( err ? err -> message : ""No reason found"" ) )"		5041239	0					
ANR	5041324	Callee	vmprintf		5041239	0					
ANR	5041325	Identifier	vmprintf		5041239	0					
ANR	5041326	ArgumentList	D_ALWAYS		5041239	1					
ANR	5041327	Argument	D_ALWAYS		5041239	0					
ANR	5041328	Identifier	D_ALWAYS		5041239	0					
ANR	5041329	Argument	"""Error finding domain %s: %s\\n"""		5041239	1					
ANR	5041330	PrimaryExpression	"""Error finding domain %s: %s\\n"""		5041239	0					
ANR	5041331	Argument	m_vm_name . Value ( )		5041239	2					
ANR	5041332	CallExpression	m_vm_name . Value ( )		5041239	0					
ANR	5041333	Callee	m_vm_name . Value		5041239	0					
ANR	5041334	MemberAccess	m_vm_name . Value		5041239	0					
ANR	5041335	Identifier	m_vm_name		5041239	0					
ANR	5041336	Identifier	Value		5041239	1					
ANR	5041337	ArgumentList			5041239	1					
ANR	5041338	Argument	"err ? err -> message : ""No reason found"""		5041239	3					
ANR	5041339	ConditionalExpression	"err ? err -> message : ""No reason found"""		5041239	0					
ANR	5041340	Condition	err		5041239	0					
ANR	5041341	Identifier	err		5041239	0					
ANR	5041342	PtrMemberAccess	err -> message		5041239	1					
ANR	5041343	Identifier	err		5041239	0					
ANR	5041344	Identifier	message		5041239	1					
ANR	5041345	PrimaryExpression	"""No reason found"""		5041239	2					
ANR	5041346	ReturnStatement	return false ;	420:6:12107:12119	5041239	2	True				
ANR	5041347	Identifier	false		5041239	0					
ANR	5041348	ExpressionStatement	priv = set_root_priv ( )	423:2:12130:12152	5041239	4	True				
ANR	5041349	AssignmentExpression	priv = set_root_priv ( )		5041239	0		=			
ANR	5041350	Identifier	priv		5041239	0					
ANR	5041351	CallExpression	set_root_priv ( )		5041239	1					
ANR	5041352	Callee	set_root_priv		5041239	0					
ANR	5041353	Identifier	set_root_priv		5041239	0					
ANR	5041354	ArgumentList			5041239	1					
ANR	5041355	IdentifierDeclStatement	int result = virDomainResume ( dom ) ;	424:2:12156:12189	5041239	5	True				
ANR	5041356	IdentifierDecl	result = virDomainResume ( dom )		5041239	0					
ANR	5041357	IdentifierDeclType	int		5041239	0					
ANR	5041358	Identifier	result		5041239	1					
ANR	5041359	AssignmentExpression	result = virDomainResume ( dom )		5041239	2		=			
ANR	5041360	Identifier	result		5041239	0					
ANR	5041361	CallExpression	virDomainResume ( dom )		5041239	1					
ANR	5041362	Callee	virDomainResume		5041239	0					
ANR	5041363	Identifier	virDomainResume		5041239	0					
ANR	5041364	ArgumentList	dom		5041239	1					
ANR	5041365	Argument	dom		5041239	0					
ANR	5041366	Identifier	dom		5041239	0					
ANR	5041367	ExpressionStatement	virDomainFree ( dom )	425:2:12193:12211	5041239	6	True				
ANR	5041368	CallExpression	virDomainFree ( dom )		5041239	0					
ANR	5041369	Callee	virDomainFree		5041239	0					
ANR	5041370	Identifier	virDomainFree		5041239	0					
ANR	5041371	ArgumentList	dom		5041239	1					
ANR	5041372	Argument	dom		5041239	0					
ANR	5041373	Identifier	dom		5041239	0					
ANR	5041374	ExpressionStatement	set_priv ( priv )	426:2:12215:12229	5041239	7	True				
ANR	5041375	CallExpression	set_priv ( priv )		5041239	0					
ANR	5041376	Callee	set_priv		5041239	0					
ANR	5041377	Identifier	set_priv		5041239	0					
ANR	5041378	ArgumentList	priv		5041239	1					
ANR	5041379	Argument	priv		5041239	0					
ANR	5041380	Identifier	priv		5041239	0					
ANR	5041381	IfStatement	if ( result != 0 )		5041239	8					
ANR	5041382	Condition	result != 0	427:6:12237:12247	5041239	0	True				
ANR	5041383	EqualityExpression	result != 0		5041239	0		!=			
ANR	5041384	Identifier	result		5041239	0					
ANR	5041385	PrimaryExpression	0		5041239	1					
ANR	5041386	CompoundStatement		23:20:658:658	5041239	1					
ANR	5041387	Statement	vmprintf	429:3:12278:12285	5041239	0	True				
ANR	5041388	Statement	(	429:11:12286:12286	5041239	1	True				
ANR	5041389	Statement	D_ALWAYS	429:12:12287:12294	5041239	2	True				
ANR	5041390	Statement	","	429:20:12295:12295	5041239	3	True				
ANR	5041391	Statement	"""Unpausing VM failed in """	429:22:12297:12321	5041239	4	True				
ANR	5041392	Statement	"""VirshType::ResumeFromSoftSuspend\\n"""	430:5:12328:12363	5041239	5	True				
ANR	5041393	Statement	)	430:41:12364:12364	5041239	6	True				
ANR	5041394	ExpressionStatement		430:42:12365:12365	5041239	7	True				
ANR	5041395	ReturnStatement	return false ;	431:3:12370:12382	5041239	8	True				
ANR	5041396	Identifier	false		5041239	0					
ANR	5041397	ExpressionStatement	m_is_soft_suspended = false	433:2:12390:12417	5041239	9	True				
ANR	5041398	AssignmentExpression	m_is_soft_suspended = false		5041239	0		=			
ANR	5041399	Identifier	m_is_soft_suspended		5041239	0					
ANR	5041400	Identifier	false		5041239	1					
ANR	5041401	ReturnStatement	return true ;	435:1:12423:12434	5041239	3	True				
ANR	5041402	Identifier	true		5041239	0					
ANR	5041403	ReturnType	bool		5041239	1					
ANR	5041404	Identifier	VirshType :: ResumeFromSoftSuspend		5041239	2					
ANR	5041405	ParameterList			5041239	3					
ANR	5041406	CFGEntryNode	ENTRY		5041239		True				
ANR	5041407	CFGExitNode	EXIT		5041239		True				
ANR	5041408	Symbol	m_vm_name		5041239						
ANR	5041409	Symbol	dom		5041239						
ANR	5041410	Symbol	NULL		5041239						
ANR	5041411	Symbol	err		5041239						
ANR	5041412	Symbol	err -> message		5041239						
ANR	5041413	Symbol	m_configfile . Length		5041239						
ANR	5041414	Symbol	false		5041239						
ANR	5041415	Symbol	D_ALWAYS		5041239						
ANR	5041416	Symbol	m_configfile		5041239						
ANR	5041417	Symbol	virDomainLookupByName		5041239						
ANR	5041418	Symbol	D_FULLDEBUG		5041239						
ANR	5041419	Symbol	set_root_priv		5041239						
ANR	5041420	Symbol	virDomainResume		5041239						
ANR	5041421	Symbol	m_vm_name . Value		5041239						
ANR	5041422	Symbol	virConnGetLastError		5041239						
ANR	5041423	Symbol	* err		5041239						
ANR	5041424	Symbol	result		5041239						
ANR	5041425	Symbol	m_libvirt_connection		5041239						
ANR	5041426	Symbol	m_is_soft_suspended		5041239						
ANR	5041427	Symbol	true		5041239						
ANR	5041428	Symbol	priv		5041239						
ANR	5041429	Function	VirshType :: SoftSuspend	438:0:12439:13479							
ANR	5041430	FunctionDef	VirshType :: SoftSuspend ()		5041429	0					
ANR	5041431	CompoundStatement		440:0:12469:13479	5041429	0					
ANR	5041432	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::SoftSuspend\\n"" )"	441:1:12472:12528	5041429	0	True				
ANR	5041433	CallExpression	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::SoftSuspend\\n"" )"		5041429	0					
ANR	5041434	Callee	vmprintf		5041429	0					
ANR	5041435	Identifier	vmprintf		5041429	0					
ANR	5041436	ArgumentList	D_FULLDEBUG		5041429	1					
ANR	5041437	Argument	D_FULLDEBUG		5041429	0					
ANR	5041438	Identifier	D_FULLDEBUG		5041429	0					
ANR	5041439	Argument	"""Inside VirshType::SoftSuspend\\n"""		5041429	1					
ANR	5041440	PrimaryExpression	"""Inside VirshType::SoftSuspend\\n"""		5041429	0					
ANR	5041441	IfStatement	if ( ( m_configfile . Length ( ) == 0 ) )		5041429	1					
ANR	5041442	Condition	m_configfile . Length ( ) == 0	443:5:12536:12563	5041429	0	True				
ANR	5041443	EqualityExpression	m_configfile . Length ( ) == 0		5041429	0		==			
ANR	5041444	CallExpression	m_configfile . Length ( )		5041429	0					
ANR	5041445	Callee	m_configfile . Length		5041429	0					
ANR	5041446	MemberAccess	m_configfile . Length		5041429	0					
ANR	5041447	Identifier	m_configfile		5041429	0					
ANR	5041448	Identifier	Length		5041429	1					
ANR	5041449	ArgumentList			5041429	1					
ANR	5041450	PrimaryExpression	0		5041429	1					
ANR	5041451	CompoundStatement		4:35:96:96	5041429	1					
ANR	5041452	ExpressionStatement	m_result_msg = VMGAHP_ERR_INTERNAL	444:2:12570:12604	5041429	0	True				
ANR	5041453	AssignmentExpression	m_result_msg = VMGAHP_ERR_INTERNAL		5041429	0		=			
ANR	5041454	Identifier	m_result_msg		5041429	0					
ANR	5041455	Identifier	VMGAHP_ERR_INTERNAL		5041429	1					
ANR	5041456	ReturnStatement	return false ;	445:2:12608:12620	5041429	1	True				
ANR	5041457	Identifier	false		5041429	0					
ANR	5041458	IfStatement	if ( m_is_soft_suspended )		5041429	2					
ANR	5041459	Condition	m_is_soft_suspended	448:5:12631:12649	5041429	0	True				
ANR	5041460	Identifier	m_is_soft_suspended		5041429	0					
ANR	5041461	CompoundStatement		9:27:183:183	5041429	1					
ANR	5041462	ReturnStatement	return true ;	449:2:12657:12668	5041429	0	True				
ANR	5041463	Identifier	true		5041429	0					
ANR	5041464	IfStatement	if ( getVMStatus ( ) != VM_RUNNING )		5041429	3					
ANR	5041465	Condition	getVMStatus ( ) != VM_RUNNING	452:5:12679:12705	5041429	0	True				
ANR	5041466	EqualityExpression	getVMStatus ( ) != VM_RUNNING		5041429	0		!=			
ANR	5041467	CallExpression	getVMStatus ( )		5041429	0					
ANR	5041468	Callee	getVMStatus		5041429	0					
ANR	5041469	Identifier	getVMStatus		5041429	0					
ANR	5041470	ArgumentList			5041429	1					
ANR	5041471	Identifier	VM_RUNNING		5041429	1					
ANR	5041472	CompoundStatement		13:35:239:239	5041429	1					
ANR	5041473	ExpressionStatement	m_result_msg = VMGAHP_ERR_VM_INVALID_OPERATION	453:2:12713:12759	5041429	0	True				
ANR	5041474	AssignmentExpression	m_result_msg = VMGAHP_ERR_VM_INVALID_OPERATION		5041429	0		=			
ANR	5041475	Identifier	m_result_msg		5041429	0					
ANR	5041476	Identifier	VMGAHP_ERR_VM_INVALID_OPERATION		5041429	1					
ANR	5041477	ReturnStatement	return false ;	454:2:12763:12775	5041429	1	True				
ANR	5041478	Identifier	false		5041429	0					
ANR	5041479	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	457:1:12782:12815	5041429	4	True				
ANR	5041480	IdentifierDecl	priv = set_root_priv ( )		5041429	0					
ANR	5041481	IdentifierDeclType	priv_state		5041429	0					
ANR	5041482	Identifier	priv		5041429	1					
ANR	5041483	AssignmentExpression	priv = set_root_priv ( )		5041429	2		=			
ANR	5041484	Identifier	priv		5041429	0					
ANR	5041485	CallExpression	set_root_priv ( )		5041429	1					
ANR	5041486	Callee	set_root_priv		5041429	0					
ANR	5041487	Identifier	set_root_priv		5041429	0					
ANR	5041488	ArgumentList			5041429	1					
ANR	5041489	IdentifierDeclStatement	"virDomainPtr dom = virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) ) ;"	458:1:12818:12899	5041429	5	True				
ANR	5041490	IdentifierDecl	"dom = virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) )"		5041429	0					
ANR	5041491	IdentifierDeclType	virDomainPtr		5041429	0					
ANR	5041492	Identifier	dom		5041429	1					
ANR	5041493	AssignmentExpression	"dom = virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) )"		5041429	2		=			
ANR	5041494	Identifier	dom		5041429	0					
ANR	5041495	CallExpression	"virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) )"		5041429	1					
ANR	5041496	Callee	virDomainLookupByName		5041429	0					
ANR	5041497	Identifier	virDomainLookupByName		5041429	0					
ANR	5041498	ArgumentList	m_libvirt_connection		5041429	1					
ANR	5041499	Argument	m_libvirt_connection		5041429	0					
ANR	5041500	Identifier	m_libvirt_connection		5041429	0					
ANR	5041501	Argument	m_vm_name . Value ( )		5041429	1					
ANR	5041502	CallExpression	m_vm_name . Value ( )		5041429	0					
ANR	5041503	Callee	m_vm_name . Value		5041429	0					
ANR	5041504	MemberAccess	m_vm_name . Value		5041429	0					
ANR	5041505	Identifier	m_vm_name		5041429	0					
ANR	5041506	Identifier	Value		5041429	1					
ANR	5041507	ArgumentList			5041429	1					
ANR	5041508	ExpressionStatement	set_priv ( priv )	459:1:12902:12916	5041429	6	True				
ANR	5041509	CallExpression	set_priv ( priv )		5041429	0					
ANR	5041510	Callee	set_priv		5041429	0					
ANR	5041511	Identifier	set_priv		5041429	0					
ANR	5041512	ArgumentList	priv		5041429	1					
ANR	5041513	Argument	priv		5041429	0					
ANR	5041514	Identifier	priv		5041429	0					
ANR	5041515	IfStatement	if ( dom == NULL )		5041429	7					
ANR	5041516	Condition	dom == NULL	460:4:12922:12932	5041429	0	True				
ANR	5041517	EqualityExpression	dom == NULL		5041429	0		==			
ANR	5041518	Identifier	dom		5041429	0					
ANR	5041519	Identifier	NULL		5041429	1					
ANR	5041520	CompoundStatement		23:5:475:534	5041429	1					
ANR	5041521	IdentifierDeclStatement	virErrorPtr err = virConnGetLastError ( m_libvirt_connection ) ;	462:5:12945:13004	5041429	0	True				
ANR	5041522	IdentifierDecl	err = virConnGetLastError ( m_libvirt_connection )		5041429	0					
ANR	5041523	IdentifierDeclType	virErrorPtr		5041429	0					
ANR	5041524	Identifier	err		5041429	1					
ANR	5041525	AssignmentExpression	err = virConnGetLastError ( m_libvirt_connection )		5041429	2		=			
ANR	5041526	Identifier	err		5041429	0					
ANR	5041527	CallExpression	virConnGetLastError ( m_libvirt_connection )		5041429	1					
ANR	5041528	Callee	virConnGetLastError		5041429	0					
ANR	5041529	Identifier	virConnGetLastError		5041429	0					
ANR	5041530	ArgumentList	m_libvirt_connection		5041429	1					
ANR	5041531	Argument	m_libvirt_connection		5041429	0					
ANR	5041532	Identifier	m_libvirt_connection		5041429	0					
ANR	5041533	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Error finding domain %s: %s\\n"" , m_vm_name . Value ( ) , ( err ? err -> message : ""No reason found"" ) )"	463:5:13011:13123	5041429	1	True				
ANR	5041534	CallExpression	"vmprintf ( D_ALWAYS , ""Error finding domain %s: %s\\n"" , m_vm_name . Value ( ) , ( err ? err -> message : ""No reason found"" ) )"		5041429	0					
ANR	5041535	Callee	vmprintf		5041429	0					
ANR	5041536	Identifier	vmprintf		5041429	0					
ANR	5041537	ArgumentList	D_ALWAYS		5041429	1					
ANR	5041538	Argument	D_ALWAYS		5041429	0					
ANR	5041539	Identifier	D_ALWAYS		5041429	0					
ANR	5041540	Argument	"""Error finding domain %s: %s\\n"""		5041429	1					
ANR	5041541	PrimaryExpression	"""Error finding domain %s: %s\\n"""		5041429	0					
ANR	5041542	Argument	m_vm_name . Value ( )		5041429	2					
ANR	5041543	CallExpression	m_vm_name . Value ( )		5041429	0					
ANR	5041544	Callee	m_vm_name . Value		5041429	0					
ANR	5041545	MemberAccess	m_vm_name . Value		5041429	0					
ANR	5041546	Identifier	m_vm_name		5041429	0					
ANR	5041547	Identifier	Value		5041429	1					
ANR	5041548	ArgumentList			5041429	1					
ANR	5041549	Argument	"err ? err -> message : ""No reason found"""		5041429	3					
ANR	5041550	ConditionalExpression	"err ? err -> message : ""No reason found"""		5041429	0					
ANR	5041551	Condition	err		5041429	0					
ANR	5041552	Identifier	err		5041429	0					
ANR	5041553	PtrMemberAccess	err -> message		5041429	1					
ANR	5041554	Identifier	err		5041429	0					
ANR	5041555	Identifier	message		5041429	1					
ANR	5041556	PrimaryExpression	"""No reason found"""		5041429	2					
ANR	5041557	ReturnStatement	return false ;	464:5:13130:13142	5041429	2	True				
ANR	5041558	Identifier	false		5041429	0					
ANR	5041559	IdentifierDeclStatement	int result = virDomainSuspend ( dom ) ;	467:1:13151:13185	5041429	8	True				
ANR	5041560	IdentifierDecl	result = virDomainSuspend ( dom )		5041429	0					
ANR	5041561	IdentifierDeclType	int		5041429	0					
ANR	5041562	Identifier	result		5041429	1					
ANR	5041563	AssignmentExpression	result = virDomainSuspend ( dom )		5041429	2		=			
ANR	5041564	Identifier	result		5041429	0					
ANR	5041565	CallExpression	virDomainSuspend ( dom )		5041429	1					
ANR	5041566	Callee	virDomainSuspend		5041429	0					
ANR	5041567	Identifier	virDomainSuspend		5041429	0					
ANR	5041568	ArgumentList	dom		5041429	1					
ANR	5041569	Argument	dom		5041429	0					
ANR	5041570	Identifier	dom		5041429	0					
ANR	5041571	ExpressionStatement	virDomainFree ( dom )	468:1:13188:13206	5041429	9	True				
ANR	5041572	CallExpression	virDomainFree ( dom )		5041429	0					
ANR	5041573	Callee	virDomainFree		5041429	0					
ANR	5041574	Identifier	virDomainFree		5041429	0					
ANR	5041575	ArgumentList	dom		5041429	1					
ANR	5041576	Argument	dom		5041429	0					
ANR	5041577	Identifier	dom		5041429	0					
ANR	5041578	IfStatement	if ( result == 0 )		5041429	10					
ANR	5041579	Condition	result == 0	469:5:13213:13223	5041429	0	True				
ANR	5041580	EqualityExpression	result == 0		5041429	0		==			
ANR	5041581	Identifier	result		5041429	0					
ANR	5041582	PrimaryExpression	0		5041429	1					
ANR	5041583	CompoundStatement		30:19:757:757	5041429	1					
ANR	5041584	ExpressionStatement	m_is_soft_suspended = true	471:2:13252:13278	5041429	0	True				
ANR	5041585	AssignmentExpression	m_is_soft_suspended = true		5041429	0		=			
ANR	5041586	Identifier	m_is_soft_suspended		5041429	0					
ANR	5041587	Identifier	true		5041429	1					
ANR	5041588	ReturnStatement	return true ;	472:2:13282:13293	5041429	1	True				
ANR	5041589	Identifier	true		5041429	0					
ANR	5041590	ExpressionStatement	"vmprintf ( D_ALWAYS , ""SoftSuspend failed, so try hard Suspend instead!.\\n"" )"	477:1:13385:13458	5041429	11	True				
ANR	5041591	CallExpression	"vmprintf ( D_ALWAYS , ""SoftSuspend failed, so try hard Suspend instead!.\\n"" )"		5041429	0					
ANR	5041592	Callee	vmprintf		5041429	0					
ANR	5041593	Identifier	vmprintf		5041429	0					
ANR	5041594	ArgumentList	D_ALWAYS		5041429	1					
ANR	5041595	Argument	D_ALWAYS		5041429	0					
ANR	5041596	Identifier	D_ALWAYS		5041429	0					
ANR	5041597	Argument	"""SoftSuspend failed, so try hard Suspend instead!.\\n"""		5041429	1					
ANR	5041598	PrimaryExpression	"""SoftSuspend failed, so try hard Suspend instead!.\\n"""		5041429	0					
ANR	5041599	ReturnStatement	return Suspend ( ) ;	478:1:13461:13477	5041429	12	True				
ANR	5041600	CallExpression	Suspend ( )		5041429	0					
ANR	5041601	Callee	Suspend		5041429	0					
ANR	5041602	Identifier	Suspend		5041429	0					
ANR	5041603	ArgumentList			5041429	1					
ANR	5041604	ReturnType	bool		5041429	1					
ANR	5041605	Identifier	VirshType :: SoftSuspend		5041429	2					
ANR	5041606	ParameterList			5041429	3					
ANR	5041607	CFGEntryNode	ENTRY		5041429		True				
ANR	5041608	CFGExitNode	EXIT		5041429		True				
ANR	5041609	Symbol	m_result_msg		5041429						
ANR	5041610	Symbol	VMGAHP_ERR_INTERNAL		5041429						
ANR	5041611	Symbol	m_vm_name		5041429						
ANR	5041612	Symbol	dom		5041429						
ANR	5041613	Symbol	getVMStatus		5041429						
ANR	5041614	Symbol	m_configfile		5041429						
ANR	5041615	Symbol	Suspend		5041429						
ANR	5041616	Symbol	virConnGetLastError		5041429						
ANR	5041617	Symbol	result		5041429						
ANR	5041618	Symbol	m_libvirt_connection		5041429						
ANR	5041619	Symbol	virDomainSuspend		5041429						
ANR	5041620	Symbol	priv		5041429						
ANR	5041621	Symbol	VM_RUNNING		5041429						
ANR	5041622	Symbol	NULL		5041429						
ANR	5041623	Symbol	err		5041429						
ANR	5041624	Symbol	err -> message		5041429						
ANR	5041625	Symbol	VMGAHP_ERR_VM_INVALID_OPERATION		5041429						
ANR	5041626	Symbol	m_configfile . Length		5041429						
ANR	5041627	Symbol	false		5041429						
ANR	5041628	Symbol	D_ALWAYS		5041429						
ANR	5041629	Symbol	virDomainLookupByName		5041429						
ANR	5041630	Symbol	D_FULLDEBUG		5041429						
ANR	5041631	Symbol	set_root_priv		5041429						
ANR	5041632	Symbol	m_vm_name . Value		5041429						
ANR	5041633	Symbol	* err		5041429						
ANR	5041634	Symbol	m_is_soft_suspended		5041429						
ANR	5041635	Symbol	true		5041429						
ANR	5041636	Function	VirshType :: Suspend	481:0:13482:15024							
ANR	5041637	FunctionDef	VirshType :: Suspend ()		5041636	0					
ANR	5041638	CompoundStatement		483:0:13508:15024	5041636	0					
ANR	5041639	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::Suspend\\n"" )"	484:1:13511:13563	5041636	0	True				
ANR	5041640	CallExpression	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::Suspend\\n"" )"		5041636	0					
ANR	5041641	Callee	vmprintf		5041636	0					
ANR	5041642	Identifier	vmprintf		5041636	0					
ANR	5041643	ArgumentList	D_FULLDEBUG		5041636	1					
ANR	5041644	Argument	D_FULLDEBUG		5041636	0					
ANR	5041645	Identifier	D_FULLDEBUG		5041636	0					
ANR	5041646	Argument	"""Inside VirshType::Suspend\\n"""		5041636	1					
ANR	5041647	PrimaryExpression	"""Inside VirshType::Suspend\\n"""		5041636	0					
ANR	5041648	IfStatement	if ( ( m_configfile . Length ( ) == 0 ) )		5041636	1					
ANR	5041649	Condition	m_configfile . Length ( ) == 0	486:5:13571:13598	5041636	0	True				
ANR	5041650	EqualityExpression	m_configfile . Length ( ) == 0		5041636	0		==			
ANR	5041651	CallExpression	m_configfile . Length ( )		5041636	0					
ANR	5041652	Callee	m_configfile . Length		5041636	0					
ANR	5041653	MemberAccess	m_configfile . Length		5041636	0					
ANR	5041654	Identifier	m_configfile		5041636	0					
ANR	5041655	Identifier	Length		5041636	1					
ANR	5041656	ArgumentList			5041636	1					
ANR	5041657	PrimaryExpression	0		5041636	1					
ANR	5041658	CompoundStatement		4:36:93:93	5041636	1					
ANR	5041659	ExpressionStatement	m_result_msg = VMGAHP_ERR_INTERNAL	487:2:13606:13640	5041636	0	True				
ANR	5041660	AssignmentExpression	m_result_msg = VMGAHP_ERR_INTERNAL		5041636	0		=			
ANR	5041661	Identifier	m_result_msg		5041636	0					
ANR	5041662	Identifier	VMGAHP_ERR_INTERNAL		5041636	1					
ANR	5041663	ReturnStatement	return false ;	488:2:13644:13656	5041636	1	True				
ANR	5041664	Identifier	false		5041636	0					
ANR	5041665	IfStatement	if ( getVMStatus ( ) == VM_SUSPENDED )		5041636	2					
ANR	5041666	Condition	getVMStatus ( ) == VM_SUSPENDED	491:5:13667:13695	5041636	0	True				
ANR	5041667	EqualityExpression	getVMStatus ( ) == VM_SUSPENDED		5041636	0		==			
ANR	5041668	CallExpression	getVMStatus ( )		5041636	0					
ANR	5041669	Callee	getVMStatus		5041636	0					
ANR	5041670	Identifier	getVMStatus		5041636	0					
ANR	5041671	ArgumentList			5041636	1					
ANR	5041672	Identifier	VM_SUSPENDED		5041636	1					
ANR	5041673	CompoundStatement		9:37:190:190	5041636	1					
ANR	5041674	ReturnStatement	return true ;	492:2:13703:13714	5041636	0	True				
ANR	5041675	Identifier	true		5041636	0					
ANR	5041676	IfStatement	if ( getVMStatus ( ) != VM_RUNNING )		5041636	3					
ANR	5041677	Condition	getVMStatus ( ) != VM_RUNNING	495:5:13725:13751	5041636	0	True				
ANR	5041678	EqualityExpression	getVMStatus ( ) != VM_RUNNING		5041636	0		!=			
ANR	5041679	CallExpression	getVMStatus ( )		5041636	0					
ANR	5041680	Callee	getVMStatus		5041636	0					
ANR	5041681	Identifier	getVMStatus		5041636	0					
ANR	5041682	ArgumentList			5041636	1					
ANR	5041683	Identifier	VM_RUNNING		5041636	1					
ANR	5041684	CompoundStatement		13:35:246:246	5041636	1					
ANR	5041685	ExpressionStatement	m_result_msg = VMGAHP_ERR_VM_INVALID_OPERATION	496:2:13759:13805	5041636	0	True				
ANR	5041686	AssignmentExpression	m_result_msg = VMGAHP_ERR_VM_INVALID_OPERATION		5041636	0		=			
ANR	5041687	Identifier	m_result_msg		5041636	0					
ANR	5041688	Identifier	VMGAHP_ERR_VM_INVALID_OPERATION		5041636	1					
ANR	5041689	ReturnStatement	return false ;	497:2:13809:13821	5041636	1	True				
ANR	5041690	Identifier	false		5041636	0					
ANR	5041691	IfStatement	if ( m_xen_hw_vt && ! m_allow_hw_vt_suspend )		5041636	4					
ANR	5041692	Condition	m_xen_hw_vt && ! m_allow_hw_vt_suspend	500:5:13832:13868	5041636	0	True				
ANR	5041693	AndExpression	m_xen_hw_vt && ! m_allow_hw_vt_suspend		5041636	0		&&			
ANR	5041694	Identifier	m_xen_hw_vt		5041636	0					
ANR	5041695	UnaryOperationExpression	! m_allow_hw_vt_suspend		5041636	1					
ANR	5041696	UnaryOperator	!		5041636	0					
ANR	5041697	Identifier	m_allow_hw_vt_suspend		5041636	1					
ANR	5041698	CompoundStatement		18:45:363:363	5041636	1					
ANR	5041699	ExpressionStatement	m_result_msg = VMGAHP_ERR_VM_NO_SUPPORT_SUSPEND	503:2:13975:14022	5041636	0	True				
ANR	5041700	AssignmentExpression	m_result_msg = VMGAHP_ERR_VM_NO_SUPPORT_SUSPEND		5041636	0		=			
ANR	5041701	Identifier	m_result_msg		5041636	0					
ANR	5041702	Identifier	VMGAHP_ERR_VM_NO_SUPPORT_SUSPEND		5041636	1					
ANR	5041703	ReturnStatement	return false ;	504:2:14026:14038	5041636	1	True				
ANR	5041704	Identifier	false		5041636	0					
ANR	5041705	ExpressionStatement	ResumeFromSoftSuspend ( )	508:1:14093:14116	5041636	5	True				
ANR	5041706	CallExpression	ResumeFromSoftSuspend ( )		5041636	0					
ANR	5041707	Callee	ResumeFromSoftSuspend		5041636	0					
ANR	5041708	Identifier	ResumeFromSoftSuspend		5041636	0					
ANR	5041709	ArgumentList			5041636	1					
ANR	5041710	IdentifierDeclStatement	MyString tmpfilename ;	510:1:14120:14140	5041636	6	True				
ANR	5041711	IdentifierDecl	tmpfilename		5041636	0					
ANR	5041712	IdentifierDeclType	MyString		5041636	0					
ANR	5041713	Identifier	tmpfilename		5041636	1					
ANR	5041714	ExpressionStatement	makeNameofSuspendfile ( tmpfilename )	511:1:14143:14177	5041636	7	True				
ANR	5041715	CallExpression	makeNameofSuspendfile ( tmpfilename )		5041636	0					
ANR	5041716	Callee	makeNameofSuspendfile		5041636	0					
ANR	5041717	Identifier	makeNameofSuspendfile		5041636	0					
ANR	5041718	ArgumentList	tmpfilename		5041636	1					
ANR	5041719	Argument	tmpfilename		5041636	0					
ANR	5041720	Identifier	tmpfilename		5041636	0					
ANR	5041721	ExpressionStatement	unlink ( tmpfilename . Value ( ) )	512:1:14180:14207	5041636	8	True				
ANR	5041722	CallExpression	unlink ( tmpfilename . Value ( ) )		5041636	0					
ANR	5041723	Callee	unlink		5041636	0					
ANR	5041724	Identifier	unlink		5041636	0					
ANR	5041725	ArgumentList	tmpfilename . Value ( )		5041636	1					
ANR	5041726	Argument	tmpfilename . Value ( )		5041636	0					
ANR	5041727	CallExpression	tmpfilename . Value ( )		5041636	0					
ANR	5041728	Callee	tmpfilename . Value		5041636	0					
ANR	5041729	MemberAccess	tmpfilename . Value		5041636	0					
ANR	5041730	Identifier	tmpfilename		5041636	0					
ANR	5041731	Identifier	Value		5041636	1					
ANR	5041732	ArgumentList			5041636	1					
ANR	5041733	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	514:1:14211:14244	5041636	9	True				
ANR	5041734	IdentifierDecl	priv = set_root_priv ( )		5041636	0					
ANR	5041735	IdentifierDeclType	priv_state		5041636	0					
ANR	5041736	Identifier	priv		5041636	1					
ANR	5041737	AssignmentExpression	priv = set_root_priv ( )		5041636	2		=			
ANR	5041738	Identifier	priv		5041636	0					
ANR	5041739	CallExpression	set_root_priv ( )		5041636	1					
ANR	5041740	Callee	set_root_priv		5041636	0					
ANR	5041741	Identifier	set_root_priv		5041636	0					
ANR	5041742	ArgumentList			5041636	1					
ANR	5041743	IdentifierDeclStatement	"virDomainPtr dom = virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) ) ;"	515:1:14247:14328	5041636	10	True				
ANR	5041744	IdentifierDecl	"dom = virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) )"		5041636	0					
ANR	5041745	IdentifierDeclType	virDomainPtr		5041636	0					
ANR	5041746	Identifier	dom		5041636	1					
ANR	5041747	AssignmentExpression	"dom = virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) )"		5041636	2		=			
ANR	5041748	Identifier	dom		5041636	0					
ANR	5041749	CallExpression	"virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) )"		5041636	1					
ANR	5041750	Callee	virDomainLookupByName		5041636	0					
ANR	5041751	Identifier	virDomainLookupByName		5041636	0					
ANR	5041752	ArgumentList	m_libvirt_connection		5041636	1					
ANR	5041753	Argument	m_libvirt_connection		5041636	0					
ANR	5041754	Identifier	m_libvirt_connection		5041636	0					
ANR	5041755	Argument	m_vm_name . Value ( )		5041636	1					
ANR	5041756	CallExpression	m_vm_name . Value ( )		5041636	0					
ANR	5041757	Callee	m_vm_name . Value		5041636	0					
ANR	5041758	MemberAccess	m_vm_name . Value		5041636	0					
ANR	5041759	Identifier	m_vm_name		5041636	0					
ANR	5041760	Identifier	Value		5041636	1					
ANR	5041761	ArgumentList			5041636	1					
ANR	5041762	ExpressionStatement	set_priv ( priv )	516:1:14331:14345	5041636	11	True				
ANR	5041763	CallExpression	set_priv ( priv )		5041636	0					
ANR	5041764	Callee	set_priv		5041636	0					
ANR	5041765	Identifier	set_priv		5041636	0					
ANR	5041766	ArgumentList	priv		5041636	1					
ANR	5041767	Argument	priv		5041636	0					
ANR	5041768	Identifier	priv		5041636	0					
ANR	5041769	IfStatement	if ( dom == NULL )		5041636	12					
ANR	5041770	Condition	dom == NULL	517:4:14351:14361	5041636	0	True				
ANR	5041771	EqualityExpression	dom == NULL		5041636	0		==			
ANR	5041772	Identifier	dom		5041636	0					
ANR	5041773	Identifier	NULL		5041636	1					
ANR	5041774	CompoundStatement		37:5:865:924	5041636	1					
ANR	5041775	IdentifierDeclStatement	virErrorPtr err = virConnGetLastError ( m_libvirt_connection ) ;	519:5:14374:14433	5041636	0	True				
ANR	5041776	IdentifierDecl	err = virConnGetLastError ( m_libvirt_connection )		5041636	0					
ANR	5041777	IdentifierDeclType	virErrorPtr		5041636	0					
ANR	5041778	Identifier	err		5041636	1					
ANR	5041779	AssignmentExpression	err = virConnGetLastError ( m_libvirt_connection )		5041636	2		=			
ANR	5041780	Identifier	err		5041636	0					
ANR	5041781	CallExpression	virConnGetLastError ( m_libvirt_connection )		5041636	1					
ANR	5041782	Callee	virConnGetLastError		5041636	0					
ANR	5041783	Identifier	virConnGetLastError		5041636	0					
ANR	5041784	ArgumentList	m_libvirt_connection		5041636	1					
ANR	5041785	Argument	m_libvirt_connection		5041636	0					
ANR	5041786	Identifier	m_libvirt_connection		5041636	0					
ANR	5041787	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Error finding domain %s: %s\\n"" , m_vm_name . Value ( ) , ( err ? err -> message : ""No reason found"" ) )"	520:5:14440:14552	5041636	1	True				
ANR	5041788	CallExpression	"vmprintf ( D_ALWAYS , ""Error finding domain %s: %s\\n"" , m_vm_name . Value ( ) , ( err ? err -> message : ""No reason found"" ) )"		5041636	0					
ANR	5041789	Callee	vmprintf		5041636	0					
ANR	5041790	Identifier	vmprintf		5041636	0					
ANR	5041791	ArgumentList	D_ALWAYS		5041636	1					
ANR	5041792	Argument	D_ALWAYS		5041636	0					
ANR	5041793	Identifier	D_ALWAYS		5041636	0					
ANR	5041794	Argument	"""Error finding domain %s: %s\\n"""		5041636	1					
ANR	5041795	PrimaryExpression	"""Error finding domain %s: %s\\n"""		5041636	0					
ANR	5041796	Argument	m_vm_name . Value ( )		5041636	2					
ANR	5041797	CallExpression	m_vm_name . Value ( )		5041636	0					
ANR	5041798	Callee	m_vm_name . Value		5041636	0					
ANR	5041799	MemberAccess	m_vm_name . Value		5041636	0					
ANR	5041800	Identifier	m_vm_name		5041636	0					
ANR	5041801	Identifier	Value		5041636	1					
ANR	5041802	ArgumentList			5041636	1					
ANR	5041803	Argument	"err ? err -> message : ""No reason found"""		5041636	3					
ANR	5041804	ConditionalExpression	"err ? err -> message : ""No reason found"""		5041636	0					
ANR	5041805	Condition	err		5041636	0					
ANR	5041806	Identifier	err		5041636	0					
ANR	5041807	PtrMemberAccess	err -> message		5041636	1					
ANR	5041808	Identifier	err		5041636	0					
ANR	5041809	Identifier	message		5041636	1					
ANR	5041810	PrimaryExpression	"""No reason found"""		5041636	2					
ANR	5041811	ReturnStatement	return false ;	521:5:14559:14571	5041636	2	True				
ANR	5041812	Identifier	false		5041636	0					
ANR	5041813	ExpressionStatement	priv = set_root_priv ( )	524:1:14580:14602	5041636	13	True				
ANR	5041814	AssignmentExpression	priv = set_root_priv ( )		5041636	0		=			
ANR	5041815	Identifier	priv		5041636	0					
ANR	5041816	CallExpression	set_root_priv ( )		5041636	1					
ANR	5041817	Callee	set_root_priv		5041636	0					
ANR	5041818	Identifier	set_root_priv		5041636	0					
ANR	5041819	ArgumentList			5041636	1					
ANR	5041820	IdentifierDeclStatement	"int result = virDomainSave ( dom , tmpfilename . Value ( ) ) ;"	525:1:14605:14657	5041636	14	True				
ANR	5041821	IdentifierDecl	"result = virDomainSave ( dom , tmpfilename . Value ( ) )"		5041636	0					
ANR	5041822	IdentifierDeclType	int		5041636	0					
ANR	5041823	Identifier	result		5041636	1					
ANR	5041824	AssignmentExpression	"result = virDomainSave ( dom , tmpfilename . Value ( ) )"		5041636	2		=			
ANR	5041825	Identifier	result		5041636	0					
ANR	5041826	CallExpression	"virDomainSave ( dom , tmpfilename . Value ( ) )"		5041636	1					
ANR	5041827	Callee	virDomainSave		5041636	0					
ANR	5041828	Identifier	virDomainSave		5041636	0					
ANR	5041829	ArgumentList	dom		5041636	1					
ANR	5041830	Argument	dom		5041636	0					
ANR	5041831	Identifier	dom		5041636	0					
ANR	5041832	Argument	tmpfilename . Value ( )		5041636	1					
ANR	5041833	CallExpression	tmpfilename . Value ( )		5041636	0					
ANR	5041834	Callee	tmpfilename . Value		5041636	0					
ANR	5041835	MemberAccess	tmpfilename . Value		5041636	0					
ANR	5041836	Identifier	tmpfilename		5041636	0					
ANR	5041837	Identifier	Value		5041636	1					
ANR	5041838	ArgumentList			5041636	1					
ANR	5041839	ExpressionStatement	virDomainFree ( dom )	526:1:14660:14678	5041636	15	True				
ANR	5041840	CallExpression	virDomainFree ( dom )		5041636	0					
ANR	5041841	Callee	virDomainFree		5041636	0					
ANR	5041842	Identifier	virDomainFree		5041636	0					
ANR	5041843	ArgumentList	dom		5041636	1					
ANR	5041844	Argument	dom		5041636	0					
ANR	5041845	Identifier	dom		5041636	0					
ANR	5041846	ExpressionStatement	set_priv ( priv )	527:1:14681:14695	5041636	16	True				
ANR	5041847	CallExpression	set_priv ( priv )		5041636	0					
ANR	5041848	Callee	set_priv		5041636	0					
ANR	5041849	Identifier	set_priv		5041636	0					
ANR	5041850	ArgumentList	priv		5041636	1					
ANR	5041851	Argument	priv		5041636	0					
ANR	5041852	Identifier	priv		5041636	0					
ANR	5041853	IfStatement	if ( result != 0 )		5041636	17					
ANR	5041854	Condition	result != 0	528:5:14702:14712	5041636	0	True				
ANR	5041855	EqualityExpression	result != 0		5041636	0		!=			
ANR	5041856	Identifier	result		5041636	0					
ANR	5041857	PrimaryExpression	0		5041636	1					
ANR	5041858	CompoundStatement		46:19:1207:1207	5041636	1					
ANR	5041859	ExpressionStatement	unlink ( tmpfilename . Value ( ) )	533:2:14844:14871	5041636	0	True				
ANR	5041860	CallExpression	unlink ( tmpfilename . Value ( ) )		5041636	0					
ANR	5041861	Callee	unlink		5041636	0					
ANR	5041862	Identifier	unlink		5041636	0					
ANR	5041863	ArgumentList	tmpfilename . Value ( )		5041636	1					
ANR	5041864	Argument	tmpfilename . Value ( )		5041636	0					
ANR	5041865	CallExpression	tmpfilename . Value ( )		5041636	0					
ANR	5041866	Callee	tmpfilename . Value		5041636	0					
ANR	5041867	MemberAccess	tmpfilename . Value		5041636	0					
ANR	5041868	Identifier	tmpfilename		5041636	0					
ANR	5041869	Identifier	Value		5041636	1					
ANR	5041870	ArgumentList			5041636	1					
ANR	5041871	ReturnStatement	return false ;	534:2:14875:14887	5041636	1	True				
ANR	5041872	Identifier	false		5041636	0					
ANR	5041873	ExpressionStatement	m_suspendfile = tmpfilename	537:1:14894:14921	5041636	18	True				
ANR	5041874	AssignmentExpression	m_suspendfile = tmpfilename		5041636	0		=			
ANR	5041875	Identifier	m_suspendfile		5041636	0					
ANR	5041876	Identifier	tmpfilename		5041636	1					
ANR	5041877	ExpressionStatement	setVMStatus ( VM_SUSPENDED )	539:1:14925:14950	5041636	19	True				
ANR	5041878	CallExpression	setVMStatus ( VM_SUSPENDED )		5041636	0					
ANR	5041879	Callee	setVMStatus		5041636	0					
ANR	5041880	Identifier	setVMStatus		5041636	0					
ANR	5041881	ArgumentList	VM_SUSPENDED		5041636	1					
ANR	5041882	Argument	VM_SUSPENDED		5041636	0					
ANR	5041883	Identifier	VM_SUSPENDED		5041636	0					
ANR	5041884	ExpressionStatement	m_cputime_before_suspend += m_cpu_time	540:1:14953:14991	5041636	20	True				
ANR	5041885	AssignmentExpression	m_cputime_before_suspend += m_cpu_time		5041636	0		+=			
ANR	5041886	Identifier	m_cputime_before_suspend		5041636	0					
ANR	5041887	Identifier	m_cpu_time		5041636	1					
ANR	5041888	ExpressionStatement	m_cpu_time = 0	541:1:14994:15008	5041636	21	True				
ANR	5041889	AssignmentExpression	m_cpu_time = 0		5041636	0		=			
ANR	5041890	Identifier	m_cpu_time		5041636	0					
ANR	5041891	PrimaryExpression	0		5041636	1					
ANR	5041892	ReturnStatement	return true ;	542:1:15011:15022	5041636	22	True				
ANR	5041893	Identifier	true		5041636	0					
ANR	5041894	ReturnType	bool		5041636	1					
ANR	5041895	Identifier	VirshType :: Suspend		5041636	2					
ANR	5041896	ParameterList			5041636	3					
ANR	5041897	CFGEntryNode	ENTRY		5041636		True				
ANR	5041898	CFGExitNode	EXIT		5041636		True				
ANR	5041899	Symbol	m_result_msg		5041636						
ANR	5041900	Symbol	VMGAHP_ERR_INTERNAL		5041636						
ANR	5041901	Symbol	m_vm_name		5041636						
ANR	5041902	Symbol	dom		5041636						
ANR	5041903	Symbol	m_cpu_time		5041636						
ANR	5041904	Symbol	getVMStatus		5041636						
ANR	5041905	Symbol	m_configfile		5041636						
ANR	5041906	Symbol	tmpfilename . Value		5041636						
ANR	5041907	Symbol	virConnGetLastError		5041636						
ANR	5041908	Symbol	result		5041636						
ANR	5041909	Symbol	m_libvirt_connection		5041636						
ANR	5041910	Symbol	tmpfilename		5041636						
ANR	5041911	Symbol	m_allow_hw_vt_suspend		5041636						
ANR	5041912	Symbol	priv		5041636						
ANR	5041913	Symbol	VM_RUNNING		5041636						
ANR	5041914	Symbol	NULL		5041636						
ANR	5041915	Symbol	err		5041636						
ANR	5041916	Symbol	err -> message		5041636						
ANR	5041917	Symbol	VMGAHP_ERR_VM_INVALID_OPERATION		5041636						
ANR	5041918	Symbol	virDomainSave		5041636						
ANR	5041919	Symbol	m_suspendfile		5041636						
ANR	5041920	Symbol	m_configfile . Length		5041636						
ANR	5041921	Symbol	false		5041636						
ANR	5041922	Symbol	D_ALWAYS		5041636						
ANR	5041923	Symbol	virDomainLookupByName		5041636						
ANR	5041924	Symbol	D_FULLDEBUG		5041636						
ANR	5041925	Symbol	set_root_priv		5041636						
ANR	5041926	Symbol	m_vm_name . Value		5041636						
ANR	5041927	Symbol	* err		5041636						
ANR	5041928	Symbol	m_cputime_before_suspend		5041636						
ANR	5041929	Symbol	VM_SUSPENDED		5041636						
ANR	5041930	Symbol	VMGAHP_ERR_VM_NO_SUPPORT_SUSPEND		5041636						
ANR	5041931	Symbol	true		5041636						
ANR	5041932	Symbol	m_xen_hw_vt		5041636						
ANR	5041933	Function	VirshType :: Resume	545:0:15027:16109							
ANR	5041934	FunctionDef	VirshType :: Resume ()		5041933	0					
ANR	5041935	CompoundStatement		547:0:15052:16109	5041933	0					
ANR	5041936	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::Resume\\n"" )"	548:1:15055:15106	5041933	0	True				
ANR	5041937	CallExpression	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::Resume\\n"" )"		5041933	0					
ANR	5041938	Callee	vmprintf		5041933	0					
ANR	5041939	Identifier	vmprintf		5041933	0					
ANR	5041940	ArgumentList	D_FULLDEBUG		5041933	1					
ANR	5041941	Argument	D_FULLDEBUG		5041933	0					
ANR	5041942	Identifier	D_FULLDEBUG		5041933	0					
ANR	5041943	Argument	"""Inside VirshType::Resume\\n"""		5041933	1					
ANR	5041944	PrimaryExpression	"""Inside VirshType::Resume\\n"""		5041933	0					
ANR	5041945	IfStatement	if ( ( m_configfile . Length ( ) == 0 ) )		5041933	1					
ANR	5041946	Condition	m_configfile . Length ( ) == 0	550:4:15113:15140	5041933	0	True				
ANR	5041947	EqualityExpression	m_configfile . Length ( ) == 0		5041933	0		==			
ANR	5041948	CallExpression	m_configfile . Length ( )		5041933	0					
ANR	5041949	Callee	m_configfile . Length		5041933	0					
ANR	5041950	MemberAccess	m_configfile . Length		5041933	0					
ANR	5041951	Identifier	m_configfile		5041933	0					
ANR	5041952	Identifier	Length		5041933	1					
ANR	5041953	ArgumentList			5041933	1					
ANR	5041954	PrimaryExpression	0		5041933	1					
ANR	5041955	CompoundStatement		4:34:90:90	5041933	1					
ANR	5041956	ExpressionStatement	m_result_msg = VMGAHP_ERR_INTERNAL	551:2:15147:15181	5041933	0	True				
ANR	5041957	AssignmentExpression	m_result_msg = VMGAHP_ERR_INTERNAL		5041933	0		=			
ANR	5041958	Identifier	m_result_msg		5041933	0					
ANR	5041959	Identifier	VMGAHP_ERR_INTERNAL		5041933	1					
ANR	5041960	ReturnStatement	return false ;	552:2:15185:15197	5041933	1	True				
ANR	5041961	Identifier	false		5041933	0					
ANR	5041962	ExpressionStatement	ResumeFromSoftSuspend ( )	556:1:15252:15275	5041933	2	True				
ANR	5041963	CallExpression	ResumeFromSoftSuspend ( )		5041933	0					
ANR	5041964	Callee	ResumeFromSoftSuspend		5041933	0					
ANR	5041965	Identifier	ResumeFromSoftSuspend		5041933	0					
ANR	5041966	ArgumentList			5041933	1					
ANR	5041967	IfStatement	if ( getVMStatus ( ) == VM_RUNNING )		5041933	3					
ANR	5041968	Condition	getVMStatus ( ) == VM_RUNNING	558:5:15283:15309	5041933	0	True				
ANR	5041969	EqualityExpression	getVMStatus ( ) == VM_RUNNING		5041933	0		==			
ANR	5041970	CallExpression	getVMStatus ( )		5041933	0					
ANR	5041971	Callee	getVMStatus		5041933	0					
ANR	5041972	Identifier	getVMStatus		5041933	0					
ANR	5041973	ArgumentList			5041933	1					
ANR	5041974	Identifier	VM_RUNNING		5041933	1					
ANR	5041975	CompoundStatement		12:35:260:260	5041933	1					
ANR	5041976	ReturnStatement	return true ;	559:2:15317:15328	5041933	0	True				
ANR	5041977	Identifier	true		5041933	0					
ANR	5041978	IfStatement	if ( ! m_restart_with_ckpt && ( getVMStatus ( ) != VM_SUSPENDED ) )		5041933	4					
ANR	5041979	Condition	! m_restart_with_ckpt && ( getVMStatus ( ) != VM_SUSPENDED )	562:5:15339:15397	5041933	0	True				
ANR	5041980	AndExpression	! m_restart_with_ckpt && ( getVMStatus ( ) != VM_SUSPENDED )		5041933	0		&&			
ANR	5041981	UnaryOperationExpression	! m_restart_with_ckpt		5041933	0					
ANR	5041982	UnaryOperator	!		5041933	0					
ANR	5041983	Identifier	m_restart_with_ckpt		5041933	1					
ANR	5041984	EqualityExpression	getVMStatus ( ) != VM_SUSPENDED		5041933	1		!=			
ANR	5041985	CallExpression	getVMStatus ( )		5041933	0					
ANR	5041986	Callee	getVMStatus		5041933	0					
ANR	5041987	Identifier	getVMStatus		5041933	0					
ANR	5041988	ArgumentList			5041933	1					
ANR	5041989	Identifier	VM_SUSPENDED		5041933	1					
ANR	5041990	CompoundStatement		17:38:348:348	5041933	1					
ANR	5041991	ExpressionStatement	m_result_msg = VMGAHP_ERR_VM_INVALID_OPERATION	564:2:15405:15451	5041933	0	True				
ANR	5041992	AssignmentExpression	m_result_msg = VMGAHP_ERR_VM_INVALID_OPERATION		5041933	0		=			
ANR	5041993	Identifier	m_result_msg		5041933	0					
ANR	5041994	Identifier	VMGAHP_ERR_VM_INVALID_OPERATION		5041933	1					
ANR	5041995	ReturnStatement	return false ;	565:2:15455:15467	5041933	1	True				
ANR	5041996	Identifier	false		5041933	0					
ANR	5041997	ExpressionStatement	m_restart_with_ckpt = false	567:1:15473:15500	5041933	5	True				
ANR	5041998	AssignmentExpression	m_restart_with_ckpt = false		5041933	0		=			
ANR	5041999	Identifier	m_restart_with_ckpt		5041933	0					
ANR	5042000	Identifier	false		5041933	1					
ANR	5042001	ExpressionStatement	m_is_checkpointed = false	569:1:15504:15529	5041933	6	True				
ANR	5042002	AssignmentExpression	m_is_checkpointed = false		5041933	0		=			
ANR	5042003	Identifier	m_is_checkpointed		5041933	0					
ANR	5042004	Identifier	false		5041933	1					
ANR	5042005	IfStatement	"if ( check_vm_read_access_file ( m_suspendfile . Value ( ) , true ) == false )"		5041933	7					
ANR	5042006	Condition	"check_vm_read_access_file ( m_suspendfile . Value ( ) , true ) == false"	571:5:15537:15599	5041933	0	True				
ANR	5042007	EqualityExpression	"check_vm_read_access_file ( m_suspendfile . Value ( ) , true ) == false"		5041933	0		==			
ANR	5042008	CallExpression	"check_vm_read_access_file ( m_suspendfile . Value ( ) , true )"		5041933	0					
ANR	5042009	Callee	check_vm_read_access_file		5041933	0					
ANR	5042010	Identifier	check_vm_read_access_file		5041933	0					
ANR	5042011	ArgumentList	m_suspendfile . Value ( )		5041933	1					
ANR	5042012	Argument	m_suspendfile . Value ( )		5041933	0					
ANR	5042013	CallExpression	m_suspendfile . Value ( )		5041933	0					
ANR	5042014	Callee	m_suspendfile . Value		5041933	0					
ANR	5042015	MemberAccess	m_suspendfile . Value		5041933	0					
ANR	5042016	Identifier	m_suspendfile		5041933	0					
ANR	5042017	Identifier	Value		5041933	1					
ANR	5042018	ArgumentList			5041933	1					
ANR	5042019	Argument	true		5041933	1					
ANR	5042020	Identifier	true		5041933	0					
ANR	5042021	Identifier	false		5041933	1					
ANR	5042022	CompoundStatement		25:71:550:550	5041933	1					
ANR	5042023	ExpressionStatement	m_result_msg = VMGAHP_ERR_VM_INVALID_SUSPEND_FILE	572:2:15607:15656	5041933	0	True				
ANR	5042024	AssignmentExpression	m_result_msg = VMGAHP_ERR_VM_INVALID_SUSPEND_FILE		5041933	0		=			
ANR	5042025	Identifier	m_result_msg		5041933	0					
ANR	5042026	Identifier	VMGAHP_ERR_VM_INVALID_SUSPEND_FILE		5041933	1					
ANR	5042027	ReturnStatement	return false ;	573:2:15660:15672	5041933	1	True				
ANR	5042028	Identifier	false		5041933	0					
ANR	5042029	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	576:1:15679:15712	5041933	8	True				
ANR	5042030	IdentifierDecl	priv = set_root_priv ( )		5041933	0					
ANR	5042031	IdentifierDeclType	priv_state		5041933	0					
ANR	5042032	Identifier	priv		5041933	1					
ANR	5042033	AssignmentExpression	priv = set_root_priv ( )		5041933	2		=			
ANR	5042034	Identifier	priv		5041933	0					
ANR	5042035	CallExpression	set_root_priv ( )		5041933	1					
ANR	5042036	Callee	set_root_priv		5041933	0					
ANR	5042037	Identifier	set_root_priv		5041933	0					
ANR	5042038	ArgumentList			5041933	1					
ANR	5042039	IdentifierDeclStatement	"int result = virDomainRestore ( m_libvirt_connection , m_suspendfile . Value ( ) ) ;"	577:1:15715:15789	5041933	9	True				
ANR	5042040	IdentifierDecl	"result = virDomainRestore ( m_libvirt_connection , m_suspendfile . Value ( ) )"		5041933	0					
ANR	5042041	IdentifierDeclType	int		5041933	0					
ANR	5042042	Identifier	result		5041933	1					
ANR	5042043	AssignmentExpression	"result = virDomainRestore ( m_libvirt_connection , m_suspendfile . Value ( ) )"		5041933	2		=			
ANR	5042044	Identifier	result		5041933	0					
ANR	5042045	CallExpression	"virDomainRestore ( m_libvirt_connection , m_suspendfile . Value ( ) )"		5041933	1					
ANR	5042046	Callee	virDomainRestore		5041933	0					
ANR	5042047	Identifier	virDomainRestore		5041933	0					
ANR	5042048	ArgumentList	m_libvirt_connection		5041933	1					
ANR	5042049	Argument	m_libvirt_connection		5041933	0					
ANR	5042050	Identifier	m_libvirt_connection		5041933	0					
ANR	5042051	Argument	m_suspendfile . Value ( )		5041933	1					
ANR	5042052	CallExpression	m_suspendfile . Value ( )		5041933	0					
ANR	5042053	Callee	m_suspendfile . Value		5041933	0					
ANR	5042054	MemberAccess	m_suspendfile . Value		5041933	0					
ANR	5042055	Identifier	m_suspendfile		5041933	0					
ANR	5042056	Identifier	Value		5041933	1					
ANR	5042057	ArgumentList			5041933	1					
ANR	5042058	ExpressionStatement	set_priv ( priv )	578:1:15792:15806	5041933	10	True				
ANR	5042059	CallExpression	set_priv ( priv )		5041933	0					
ANR	5042060	Callee	set_priv		5041933	0					
ANR	5042061	Identifier	set_priv		5041933	0					
ANR	5042062	ArgumentList	priv		5041933	1					
ANR	5042063	Argument	priv		5041933	0					
ANR	5042064	Identifier	priv		5041933	0					
ANR	5042065	IfStatement	if ( result != 0 )		5041933	11					
ANR	5042066	Condition	result != 0	580:5:15814:15824	5041933	0	True				
ANR	5042067	EqualityExpression	result != 0		5041933	0		!=			
ANR	5042068	Identifier	result		5041933	0					
ANR	5042069	PrimaryExpression	0		5041933	1					
ANR	5042070	CompoundStatement		34:19:775:775	5041933	1					
ANR	5042071	ReturnStatement	return false ;	585:2:15956:15968	5041933	0	True				
ANR	5042072	Identifier	false		5041933	0					
ANR	5042073	ExpressionStatement	setVMStatus ( VM_RUNNING )	588:1:15975:15998	5041933	12	True				
ANR	5042074	CallExpression	setVMStatus ( VM_RUNNING )		5041933	0					
ANR	5042075	Callee	setVMStatus		5041933	0					
ANR	5042076	Identifier	setVMStatus		5041933	0					
ANR	5042077	ArgumentList	VM_RUNNING		5041933	1					
ANR	5042078	Argument	VM_RUNNING		5041933	0					
ANR	5042079	Identifier	VM_RUNNING		5041933	0					
ANR	5042080	ExpressionStatement	m_cpu_time = 0	589:1:16001:16015	5041933	13	True				
ANR	5042081	AssignmentExpression	m_cpu_time = 0		5041933	0		=			
ANR	5042082	Identifier	m_cpu_time		5041933	0					
ANR	5042083	PrimaryExpression	0		5041933	1					
ANR	5042084	ExpressionStatement	unlink ( m_suspendfile . Value ( ) )	592:1:16043:16072	5041933	14	True				
ANR	5042085	CallExpression	unlink ( m_suspendfile . Value ( ) )		5041933	0					
ANR	5042086	Callee	unlink		5041933	0					
ANR	5042087	Identifier	unlink		5041933	0					
ANR	5042088	ArgumentList	m_suspendfile . Value ( )		5041933	1					
ANR	5042089	Argument	m_suspendfile . Value ( )		5041933	0					
ANR	5042090	CallExpression	m_suspendfile . Value ( )		5041933	0					
ANR	5042091	Callee	m_suspendfile . Value		5041933	0					
ANR	5042092	MemberAccess	m_suspendfile . Value		5041933	0					
ANR	5042093	Identifier	m_suspendfile		5041933	0					
ANR	5042094	Identifier	Value		5041933	1					
ANR	5042095	ArgumentList			5041933	1					
ANR	5042096	ExpressionStatement	"m_suspendfile = """""	593:1:16075:16093	5041933	15	True				
ANR	5042097	AssignmentExpression	"m_suspendfile = """""		5041933	0		=			
ANR	5042098	Identifier	m_suspendfile		5041933	0					
ANR	5042099	PrimaryExpression	""""""		5041933	1					
ANR	5042100	ReturnStatement	return true ;	594:1:16096:16107	5041933	16	True				
ANR	5042101	Identifier	true		5041933	0					
ANR	5042102	ReturnType	bool		5041933	1					
ANR	5042103	Identifier	VirshType :: Resume		5041933	2					
ANR	5042104	ParameterList			5041933	3					
ANR	5042105	CFGEntryNode	ENTRY		5041933		True				
ANR	5042106	CFGExitNode	EXIT		5041933		True				
ANR	5042107	Symbol	m_result_msg		5041933						
ANR	5042108	Symbol	VMGAHP_ERR_INTERNAL		5041933						
ANR	5042109	Symbol	VMGAHP_ERR_VM_INVALID_OPERATION		5041933						
ANR	5042110	Symbol	m_suspendfile		5041933						
ANR	5042111	Symbol	m_cpu_time		5041933						
ANR	5042112	Symbol	m_configfile . Length		5041933						
ANR	5042113	Symbol	false		5041933						
ANR	5042114	Symbol	getVMStatus		5041933						
ANR	5042115	Symbol	m_configfile		5041933						
ANR	5042116	Symbol	D_FULLDEBUG		5041933						
ANR	5042117	Symbol	set_root_priv		5041933						
ANR	5042118	Symbol	m_suspendfile . Value		5041933						
ANR	5042119	Symbol	VMGAHP_ERR_VM_INVALID_SUSPEND_FILE		5041933						
ANR	5042120	Symbol	result		5041933						
ANR	5042121	Symbol	m_restart_with_ckpt		5041933						
ANR	5042122	Symbol	m_libvirt_connection		5041933						
ANR	5042123	Symbol	VM_SUSPENDED		5041933						
ANR	5042124	Symbol	virDomainRestore		5041933						
ANR	5042125	Symbol	m_is_checkpointed		5041933						
ANR	5042126	Symbol	true		5041933						
ANR	5042127	Symbol	priv		5041933						
ANR	5042128	Symbol	VM_RUNNING		5041933						
ANR	5042129	Symbol	check_vm_read_access_file		5041933						
ANR	5042130	Function	VirshType :: Status	597:0:16112:19641							
ANR	5042131	FunctionDef	VirshType :: Status ()		5042130	0					
ANR	5042132	CompoundStatement		599:0:16137:19641	5042130	0					
ANR	5042133	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::Status\\n"" )"	600:1:16140:16191	5042130	0	True				
ANR	5042134	CallExpression	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::Status\\n"" )"		5042130	0					
ANR	5042135	Callee	vmprintf		5042130	0					
ANR	5042136	Identifier	vmprintf		5042130	0					
ANR	5042137	ArgumentList	D_FULLDEBUG		5042130	1					
ANR	5042138	Argument	D_FULLDEBUG		5042130	0					
ANR	5042139	Identifier	D_FULLDEBUG		5042130	0					
ANR	5042140	Argument	"""Inside VirshType::Status\\n"""		5042130	1					
ANR	5042141	PrimaryExpression	"""Inside VirshType::Status\\n"""		5042130	0					
ANR	5042142	IfStatement	if ( ( m_configfile . Length ( ) == 0 ) )		5042130	1					
ANR	5042143	Condition	m_configfile . Length ( ) == 0	602:5:16199:16226	5042130	0	True				
ANR	5042144	EqualityExpression	m_configfile . Length ( ) == 0		5042130	0		==			
ANR	5042145	CallExpression	m_configfile . Length ( )		5042130	0					
ANR	5042146	Callee	m_configfile . Length		5042130	0					
ANR	5042147	MemberAccess	m_configfile . Length		5042130	0					
ANR	5042148	Identifier	m_configfile		5042130	0					
ANR	5042149	Identifier	Length		5042130	1					
ANR	5042150	ArgumentList			5042130	1					
ANR	5042151	PrimaryExpression	0		5042130	1					
ANR	5042152	CompoundStatement		4:35:91:91	5042130	1					
ANR	5042153	ExpressionStatement	m_result_msg = VMGAHP_ERR_INTERNAL	603:3:16234:16268	5042130	0	True				
ANR	5042154	AssignmentExpression	m_result_msg = VMGAHP_ERR_INTERNAL		5042130	0		=			
ANR	5042155	Identifier	m_result_msg		5042130	0					
ANR	5042156	Identifier	VMGAHP_ERR_INTERNAL		5042130	1					
ANR	5042157	ReturnStatement	return false ;	604:3:16273:16285	5042130	1	True				
ANR	5042158	Identifier	false		5042130	0					
ANR	5042159	ExpressionStatement	"m_result_msg = """""	607:2:16294:16311	5042130	2	True				
ANR	5042160	AssignmentExpression	"m_result_msg = """""		5042130	0		=			
ANR	5042161	Identifier	m_result_msg		5042130	0					
ANR	5042162	PrimaryExpression	""""""		5042130	1					
ANR	5042163	IfStatement	if ( m_vm_networking )		5042130	3					
ANR	5042164	Condition	m_vm_networking	609:6:16320:16334	5042130	0	True				
ANR	5042165	Identifier	m_vm_networking		5042130	0					
ANR	5042166	CompoundStatement		11:24:200:200	5042130	1					
ANR	5042167	IfStatement	if ( m_vm_mac . IsEmpty ( ) == false )		5042130	0					
ANR	5042168	Condition	m_vm_mac . IsEmpty ( ) == false	610:7:16347:16373	5042130	0	True				
ANR	5042169	EqualityExpression	m_vm_mac . IsEmpty ( ) == false		5042130	0		==			
ANR	5042170	CallExpression	m_vm_mac . IsEmpty ( )		5042130	0					
ANR	5042171	Callee	m_vm_mac . IsEmpty		5042130	0					
ANR	5042172	MemberAccess	m_vm_mac . IsEmpty		5042130	0					
ANR	5042173	Identifier	m_vm_mac		5042130	0					
ANR	5042174	Identifier	IsEmpty		5042130	1					
ANR	5042175	ArgumentList			5042130	1					
ANR	5042176	Identifier	false		5042130	1					
ANR	5042177	CompoundStatement		12:37:239:239	5042130	1					
ANR	5042178	IfStatement	if ( m_result_msg . IsEmpty ( ) == false )		5042130	0					
ANR	5042179	Condition	m_result_msg . IsEmpty ( ) == false	611:8:16387:16417	5042130	0	True				
ANR	5042180	EqualityExpression	m_result_msg . IsEmpty ( ) == false		5042130	0		==			
ANR	5042181	CallExpression	m_result_msg . IsEmpty ( )		5042130	0					
ANR	5042182	Callee	m_result_msg . IsEmpty		5042130	0					
ANR	5042183	MemberAccess	m_result_msg . IsEmpty		5042130	0					
ANR	5042184	Identifier	m_result_msg		5042130	0					
ANR	5042185	Identifier	IsEmpty		5042130	1					
ANR	5042186	ArgumentList			5042130	1					
ANR	5042187	Identifier	false		5042130	1					
ANR	5042188	CompoundStatement		13:42:283:283	5042130	1					
ANR	5042189	ExpressionStatement	"m_result_msg += "" """	612:5:16428:16447	5042130	0	True				
ANR	5042190	AssignmentExpression	"m_result_msg += "" """		5042130	0		+=			
ANR	5042191	Identifier	m_result_msg		5042130	0					
ANR	5042192	PrimaryExpression	""" """		5042130	1					
ANR	5042193	ExpressionStatement	m_result_msg += VMGAHP_STATUS_COMMAND_MAC	614:4:16459:16500	5042130	1	True				
ANR	5042194	AssignmentExpression	m_result_msg += VMGAHP_STATUS_COMMAND_MAC		5042130	0		+=			
ANR	5042195	Identifier	m_result_msg		5042130	0					
ANR	5042196	Identifier	VMGAHP_STATUS_COMMAND_MAC		5042130	1					
ANR	5042197	ExpressionStatement	"m_result_msg += ""="""	615:4:16506:16525	5042130	2	True				
ANR	5042198	AssignmentExpression	"m_result_msg += ""="""		5042130	0		+=			
ANR	5042199	Identifier	m_result_msg		5042130	0					
ANR	5042200	PrimaryExpression	"""="""		5042130	1					
ANR	5042201	ExpressionStatement	m_result_msg += m_vm_mac	616:4:16531:16555	5042130	3	True				
ANR	5042202	AssignmentExpression	m_result_msg += m_vm_mac		5042130	0		+=			
ANR	5042203	Identifier	m_result_msg		5042130	0					
ANR	5042204	Identifier	m_vm_mac		5042130	1					
ANR	5042205	IfStatement	if ( m_vm_ip . IsEmpty ( ) == false )		5042130	1					
ANR	5042206	Condition	m_vm_ip . IsEmpty ( ) == false	619:7:16570:16595	5042130	0	True				
ANR	5042207	EqualityExpression	m_vm_ip . IsEmpty ( ) == false		5042130	0		==			
ANR	5042208	CallExpression	m_vm_ip . IsEmpty ( )		5042130	0					
ANR	5042209	Callee	m_vm_ip . IsEmpty		5042130	0					
ANR	5042210	MemberAccess	m_vm_ip . IsEmpty		5042130	0					
ANR	5042211	Identifier	m_vm_ip		5042130	0					
ANR	5042212	Identifier	IsEmpty		5042130	1					
ANR	5042213	ArgumentList			5042130	1					
ANR	5042214	Identifier	false		5042130	1					
ANR	5042215	CompoundStatement		21:36:461:461	5042130	1					
ANR	5042216	IfStatement	if ( m_result_msg . IsEmpty ( ) == false )		5042130	0					
ANR	5042217	Condition	m_result_msg . IsEmpty ( ) == false	620:8:16609:16639	5042130	0	True				
ANR	5042218	EqualityExpression	m_result_msg . IsEmpty ( ) == false		5042130	0		==			
ANR	5042219	CallExpression	m_result_msg . IsEmpty ( )		5042130	0					
ANR	5042220	Callee	m_result_msg . IsEmpty		5042130	0					
ANR	5042221	MemberAccess	m_result_msg . IsEmpty		5042130	0					
ANR	5042222	Identifier	m_result_msg		5042130	0					
ANR	5042223	Identifier	IsEmpty		5042130	1					
ANR	5042224	ArgumentList			5042130	1					
ANR	5042225	Identifier	false		5042130	1					
ANR	5042226	CompoundStatement		22:42:505:505	5042130	1					
ANR	5042227	ExpressionStatement	"m_result_msg += "" """	621:5:16650:16669	5042130	0	True				
ANR	5042228	AssignmentExpression	"m_result_msg += "" """		5042130	0		+=			
ANR	5042229	Identifier	m_result_msg		5042130	0					
ANR	5042230	PrimaryExpression	""" """		5042130	1					
ANR	5042231	ExpressionStatement	m_result_msg += VMGAHP_STATUS_COMMAND_IP	623:4:16681:16721	5042130	1	True				
ANR	5042232	AssignmentExpression	m_result_msg += VMGAHP_STATUS_COMMAND_IP		5042130	0		+=			
ANR	5042233	Identifier	m_result_msg		5042130	0					
ANR	5042234	Identifier	VMGAHP_STATUS_COMMAND_IP		5042130	1					
ANR	5042235	ExpressionStatement	"m_result_msg += ""="""	624:4:16727:16746	5042130	2	True				
ANR	5042236	AssignmentExpression	"m_result_msg += ""="""		5042130	0		+=			
ANR	5042237	Identifier	m_result_msg		5042130	0					
ANR	5042238	PrimaryExpression	"""="""		5042130	1					
ANR	5042239	ExpressionStatement	m_result_msg += m_vm_ip	625:4:16752:16775	5042130	3	True				
ANR	5042240	AssignmentExpression	m_result_msg += m_vm_ip		5042130	0		+=			
ANR	5042241	Identifier	m_result_msg		5042130	0					
ANR	5042242	Identifier	m_vm_ip		5042130	1					
ANR	5042243	IfStatement	if ( m_result_msg . IsEmpty ( ) == false )		5042130	4					
ANR	5042244	Condition	m_result_msg . IsEmpty ( ) == false	629:6:16793:16823	5042130	0	True				
ANR	5042245	EqualityExpression	m_result_msg . IsEmpty ( ) == false		5042130	0		==			
ANR	5042246	CallExpression	m_result_msg . IsEmpty ( )		5042130	0					
ANR	5042247	Callee	m_result_msg . IsEmpty		5042130	0					
ANR	5042248	MemberAccess	m_result_msg . IsEmpty		5042130	0					
ANR	5042249	Identifier	m_result_msg		5042130	0					
ANR	5042250	Identifier	IsEmpty		5042130	1					
ANR	5042251	ArgumentList			5042130	1					
ANR	5042252	Identifier	false		5042130	1					
ANR	5042253	CompoundStatement		31:40:689:689	5042130	1					
ANR	5042254	ExpressionStatement	"m_result_msg += "" """	630:3:16832:16851	5042130	0	True				
ANR	5042255	AssignmentExpression	"m_result_msg += "" """		5042130	0		+=			
ANR	5042256	Identifier	m_result_msg		5042130	0					
ANR	5042257	PrimaryExpression	""" """		5042130	1					
ANR	5042258	ExpressionStatement	m_result_msg += VMGAHP_STATUS_COMMAND_STATUS	633:2:16860:16904	5042130	5	True				
ANR	5042259	AssignmentExpression	m_result_msg += VMGAHP_STATUS_COMMAND_STATUS		5042130	0		+=			
ANR	5042260	Identifier	m_result_msg		5042130	0					
ANR	5042261	Identifier	VMGAHP_STATUS_COMMAND_STATUS		5042130	1					
ANR	5042262	ExpressionStatement	"m_result_msg += ""="""	634:2:16908:16927	5042130	6	True				
ANR	5042263	AssignmentExpression	"m_result_msg += ""="""		5042130	0		+=			
ANR	5042264	Identifier	m_result_msg		5042130	0					
ANR	5042265	PrimaryExpression	"""="""		5042130	1					
ANR	5042266	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	636:1:16931:16964	5042130	7	True				
ANR	5042267	IdentifierDecl	priv = set_root_priv ( )		5042130	0					
ANR	5042268	IdentifierDeclType	priv_state		5042130	0					
ANR	5042269	Identifier	priv		5042130	1					
ANR	5042270	AssignmentExpression	priv = set_root_priv ( )		5042130	2		=			
ANR	5042271	Identifier	priv		5042130	0					
ANR	5042272	CallExpression	set_root_priv ( )		5042130	1					
ANR	5042273	Callee	set_root_priv		5042130	0					
ANR	5042274	Identifier	set_root_priv		5042130	0					
ANR	5042275	ArgumentList			5042130	1					
ANR	5042276	IdentifierDeclStatement	"virDomainPtr dom = virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) ) ;"	637:1:16967:17048	5042130	8	True				
ANR	5042277	IdentifierDecl	"dom = virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) )"		5042130	0					
ANR	5042278	IdentifierDeclType	virDomainPtr		5042130	0					
ANR	5042279	Identifier	dom		5042130	1					
ANR	5042280	AssignmentExpression	"dom = virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) )"		5042130	2		=			
ANR	5042281	Identifier	dom		5042130	0					
ANR	5042282	CallExpression	"virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) )"		5042130	1					
ANR	5042283	Callee	virDomainLookupByName		5042130	0					
ANR	5042284	Identifier	virDomainLookupByName		5042130	0					
ANR	5042285	ArgumentList	m_libvirt_connection		5042130	1					
ANR	5042286	Argument	m_libvirt_connection		5042130	0					
ANR	5042287	Identifier	m_libvirt_connection		5042130	0					
ANR	5042288	Argument	m_vm_name . Value ( )		5042130	1					
ANR	5042289	CallExpression	m_vm_name . Value ( )		5042130	0					
ANR	5042290	Callee	m_vm_name . Value		5042130	0					
ANR	5042291	MemberAccess	m_vm_name . Value		5042130	0					
ANR	5042292	Identifier	m_vm_name		5042130	0					
ANR	5042293	Identifier	Value		5042130	1					
ANR	5042294	ArgumentList			5042130	1					
ANR	5042295	ExpressionStatement	set_priv ( priv )	638:1:17051:17065	5042130	9	True				
ANR	5042296	CallExpression	set_priv ( priv )		5042130	0					
ANR	5042297	Callee	set_priv		5042130	0					
ANR	5042298	Identifier	set_priv		5042130	0					
ANR	5042299	ArgumentList	priv		5042130	1					
ANR	5042300	Argument	priv		5042130	0					
ANR	5042301	Identifier	priv		5042130	0					
ANR	5042302	IfStatement	if ( dom == NULL )		5042130	10					
ANR	5042303	Condition	dom == NULL	639:4:17071:17081	5042130	0	True				
ANR	5042304	EqualityExpression	dom == NULL		5042130	0		==			
ANR	5042305	Identifier	dom		5042130	0					
ANR	5042306	Identifier	NULL		5042130	1					
ANR	5042307	CompoundStatement		43:2:951:1010	5042130	1					
ANR	5042308	IdentifierDeclStatement	virErrorPtr err = virConnGetLastError ( m_libvirt_connection ) ;	641:2:17089:17148	5042130	0	True				
ANR	5042309	IdentifierDecl	err = virConnGetLastError ( m_libvirt_connection )		5042130	0					
ANR	5042310	IdentifierDeclType	virErrorPtr		5042130	0					
ANR	5042311	Identifier	err		5042130	1					
ANR	5042312	AssignmentExpression	err = virConnGetLastError ( m_libvirt_connection )		5042130	2		=			
ANR	5042313	Identifier	err		5042130	0					
ANR	5042314	CallExpression	virConnGetLastError ( m_libvirt_connection )		5042130	1					
ANR	5042315	Callee	virConnGetLastError		5042130	0					
ANR	5042316	Identifier	virConnGetLastError		5042130	0					
ANR	5042317	ArgumentList	m_libvirt_connection		5042130	1					
ANR	5042318	Argument	m_libvirt_connection		5042130	0					
ANR	5042319	Identifier	m_libvirt_connection		5042130	0					
ANR	5042320	IfStatement	if ( err )		5042130	1					
ANR	5042321	Condition	err	643:10:17161:17163	5042130	0	True				
ANR	5042322	Identifier	err		5042130	0					
ANR	5042323	CompoundStatement		46:2:1031:1031	5042130	1					
ANR	5042324	SwitchStatement	switch ( err -> code )		5042130	0					
ANR	5042325	Condition	err -> code	645:11:17182:17190	5042130	0	True				
ANR	5042326	PtrMemberAccess	err -> code		5042130	0					
ANR	5042327	Identifier	err		5042130	0					
ANR	5042328	Identifier	code		5042130	1					
ANR	5042329	CompoundStatement		48:3:1058:1058	5042130	1					
ANR	5042330	Statement	case	647:4:17202:17205	5042130	0	True				
ANR	5042331	Statement	(	647:9:17207:17207	5042130	1	True				
ANR	5042332	Statement	VIR_ERR_NO_DOMAIN	647:10:17208:17224	5042130	2	True				
ANR	5042333	Statement	)	647:27:17225:17225	5042130	3	True				
ANR	5042334	Statement	:	647:28:17226:17226	5042130	4	True				
ANR	5042335	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""Couldn't find domain %s, assuming it was shutdown\\n"" , m_vm_name . Value ( ) )"	649:5:17288:17383	5042130	5	True				
ANR	5042336	CallExpression	"vmprintf ( D_FULLDEBUG , ""Couldn't find domain %s, assuming it was shutdown\\n"" , m_vm_name . Value ( ) )"		5042130	0					
ANR	5042337	Callee	vmprintf		5042130	0					
ANR	5042338	Identifier	vmprintf		5042130	0					
ANR	5042339	ArgumentList	D_FULLDEBUG		5042130	1					
ANR	5042340	Argument	D_FULLDEBUG		5042130	0					
ANR	5042341	Identifier	D_FULLDEBUG		5042130	0					
ANR	5042342	Argument	"""Couldn't find domain %s, assuming it was shutdown\\n"""		5042130	1					
ANR	5042343	PrimaryExpression	"""Couldn't find domain %s, assuming it was shutdown\\n"""		5042130	0					
ANR	5042344	Argument	m_vm_name . Value ( )		5042130	2					
ANR	5042345	CallExpression	m_vm_name . Value ( )		5042130	0					
ANR	5042346	Callee	m_vm_name . Value		5042130	0					
ANR	5042347	MemberAccess	m_vm_name . Value		5042130	0					
ANR	5042348	Identifier	m_vm_name		5042130	0					
ANR	5042349	Identifier	Value		5042130	1					
ANR	5042350	ArgumentList			5042130	1					
ANR	5042351	IfStatement	if ( getVMStatus ( ) == VM_RUNNING )		5042130	6					
ANR	5042352	Condition	getVMStatus ( ) == VM_RUNNING	650:8:17393:17419	5042130	0	True				
ANR	5042353	EqualityExpression	getVMStatus ( ) == VM_RUNNING		5042130	0		==			
ANR	5042354	CallExpression	getVMStatus ( )		5042130	0					
ANR	5042355	Callee	getVMStatus		5042130	0					
ANR	5042356	Identifier	getVMStatus		5042130	0					
ANR	5042357	ArgumentList			5042130	1					
ANR	5042358	Identifier	VM_RUNNING		5042130	1					
ANR	5042359	CompoundStatement		52:37:1284:1284	5042130	1					
ANR	5042360	ExpressionStatement	m_self_shutdown = true	651:6:17430:17452	5042130	0	True				
ANR	5042361	AssignmentExpression	m_self_shutdown = true		5042130	0		=			
ANR	5042362	Identifier	m_self_shutdown		5042130	0					
ANR	5042363	Identifier	true		5042130	1					
ANR	5042364	IfStatement	if ( getVMStatus ( ) != VM_STOPPED )		5042130	7					
ANR	5042365	Condition	getVMStatus ( ) != VM_STOPPED	653:8:17469:17495	5042130	0	True				
ANR	5042366	EqualityExpression	getVMStatus ( ) != VM_STOPPED		5042130	0		!=			
ANR	5042367	CallExpression	getVMStatus ( )		5042130	0					
ANR	5042368	Callee	getVMStatus		5042130	0					
ANR	5042369	Identifier	getVMStatus		5042130	0					
ANR	5042370	ArgumentList			5042130	1					
ANR	5042371	Identifier	VM_STOPPED		5042130	1					
ANR	5042372	CompoundStatement		55:37:1360:1360	5042130	1					
ANR	5042373	ExpressionStatement	setVMStatus ( VM_STOPPED )	654:6:17506:17529	5042130	0	True				
ANR	5042374	CallExpression	setVMStatus ( VM_STOPPED )		5042130	0					
ANR	5042375	Callee	setVMStatus		5042130	0					
ANR	5042376	Identifier	setVMStatus		5042130	0					
ANR	5042377	ArgumentList	VM_STOPPED		5042130	1					
ANR	5042378	Argument	VM_STOPPED		5042130	0					
ANR	5042379	Identifier	VM_STOPPED		5042130	0					
ANR	5042380	ExpressionStatement	m_stop_time . getTime ( )	655:6:17537:17558	5042130	1	True				
ANR	5042381	CallExpression	m_stop_time . getTime ( )		5042130	0					
ANR	5042382	Callee	m_stop_time . getTime		5042130	0					
ANR	5042383	MemberAccess	m_stop_time . getTime		5042130	0					
ANR	5042384	Identifier	m_stop_time		5042130	0					
ANR	5042385	Identifier	getTime		5042130	1					
ANR	5042386	ArgumentList			5042130	1					
ANR	5042387	ExpressionStatement	"m_result_msg += ""Stopped"""	657:5:17572:17597	5042130	8	True				
ANR	5042388	AssignmentExpression	"m_result_msg += ""Stopped"""		5042130	0		+=			
ANR	5042389	Identifier	m_result_msg		5042130	0					
ANR	5042390	PrimaryExpression	"""Stopped"""		5042130	1					
ANR	5042391	ReturnStatement	return true ;	658:5:17604:17615	5042130	9	True				
ANR	5042392	Identifier	true		5042130	0					
ANR	5042393	BreakStatement	break ;	659:4:17621:17626	5042130	10	True				
ANR	5042394	Statement	case	660:4:17632:17635	5042130	11	True				
ANR	5042395	Statement	(	660:9:17637:17637	5042130	12	True				
ANR	5042396	Statement	VIR_ERR_SYSTEM_ERROR	660:10:17638:17657	5042130	13	True				
ANR	5042397	Statement	)	660:30:17658:17658	5042130	14	True				
ANR	5042398	Statement	:	660:31:17659:17659	5042130	15	True				
ANR	5042399	ExpressionStatement	"vmprintf ( D_ALWAYS , ""libvirt communication error detected, attempting to reconnect...\\n"" )"	661:5:17669:17757	5042130	16	True				
ANR	5042400	CallExpression	"vmprintf ( D_ALWAYS , ""libvirt communication error detected, attempting to reconnect...\\n"" )"		5042130	0					
ANR	5042401	Callee	vmprintf		5042130	0					
ANR	5042402	Identifier	vmprintf		5042130	0					
ANR	5042403	ArgumentList	D_ALWAYS		5042130	1					
ANR	5042404	Argument	D_ALWAYS		5042130	0					
ANR	5042405	Identifier	D_ALWAYS		5042130	0					
ANR	5042406	Argument	"""libvirt communication error detected, attempting to reconnect...\\n"""		5042130	1					
ANR	5042407	PrimaryExpression	"""libvirt communication error detected, attempting to reconnect...\\n"""		5042130	0					
ANR	5042408	ExpressionStatement	this -> Connect ( )	662:5:17764:17779	5042130	17	True				
ANR	5042409	CallExpression	this -> Connect ( )		5042130	0					
ANR	5042410	Callee	this -> Connect		5042130	0					
ANR	5042411	PtrMemberAccess	this -> Connect		5042130	0					
ANR	5042412	Identifier	this		5042130	0					
ANR	5042413	Identifier	Connect		5042130	1					
ANR	5042414	ArgumentList			5042130	1					
ANR	5042415	IfStatement	"if ( NULL == ( dom = virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) ) ) )"		5042130	18					
ANR	5042416	Condition	"NULL == ( dom = virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) ) )"	663:10:17791:17871	5042130	0	True				
ANR	5042417	EqualityExpression	"NULL == ( dom = virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) ) )"		5042130	0		==			
ANR	5042418	Identifier	NULL		5042130	0					
ANR	5042419	AssignmentExpression	"dom = virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) )"		5042130	1		=			
ANR	5042420	Identifier	dom		5042130	0					
ANR	5042421	CallExpression	"virDomainLookupByName ( m_libvirt_connection , m_vm_name . Value ( ) )"		5042130	1					
ANR	5042422	Callee	virDomainLookupByName		5042130	0					
ANR	5042423	Identifier	virDomainLookupByName		5042130	0					
ANR	5042424	ArgumentList	m_libvirt_connection		5042130	1					
ANR	5042425	Argument	m_libvirt_connection		5042130	0					
ANR	5042426	Identifier	m_libvirt_connection		5042130	0					
ANR	5042427	Argument	m_vm_name . Value ( )		5042130	1					
ANR	5042428	CallExpression	m_vm_name . Value ( )		5042130	0					
ANR	5042429	Callee	m_vm_name . Value		5042130	0					
ANR	5042430	MemberAccess	m_vm_name . Value		5042130	0					
ANR	5042431	Identifier	m_vm_name		5042130	0					
ANR	5042432	Identifier	Value		5042130	1					
ANR	5042433	ArgumentList			5042130	1					
ANR	5042434	CompoundStatement		66:5:1742:1742	5042130	1					
ANR	5042435	ExpressionStatement	"vmprintf ( D_ALWAYS , ""could not reconnect to libvirt... marking vm as stopped (should exit)\\n"" )"	665:6:17888:17981	5042130	0	True				
ANR	5042436	CallExpression	"vmprintf ( D_ALWAYS , ""could not reconnect to libvirt... marking vm as stopped (should exit)\\n"" )"		5042130	0					
ANR	5042437	Callee	vmprintf		5042130	0					
ANR	5042438	Identifier	vmprintf		5042130	0					
ANR	5042439	ArgumentList	D_ALWAYS		5042130	1					
ANR	5042440	Argument	D_ALWAYS		5042130	0					
ANR	5042441	Identifier	D_ALWAYS		5042130	0					
ANR	5042442	Argument	"""could not reconnect to libvirt... marking vm as stopped (should exit)\\n"""		5042130	1					
ANR	5042443	PrimaryExpression	"""could not reconnect to libvirt... marking vm as stopped (should exit)\\n"""		5042130	0					
ANR	5042444	IfStatement	if ( getVMStatus ( ) == VM_RUNNING )		5042130	1					
ANR	5042445	Condition	getVMStatus ( ) == VM_RUNNING	666:9:17992:18018	5042130	0	True				
ANR	5042446	EqualityExpression	getVMStatus ( ) == VM_RUNNING		5042130	0		==			
ANR	5042447	CallExpression	getVMStatus ( )		5042130	0					
ANR	5042448	Callee	getVMStatus		5042130	0					
ANR	5042449	Identifier	getVMStatus		5042130	0					
ANR	5042450	ArgumentList			5042130	1					
ANR	5042451	Identifier	VM_RUNNING		5042130	1					
ANR	5042452	CompoundStatement		68:38:1883:1883	5042130	1					
ANR	5042453	ExpressionStatement	m_self_shutdown = true	667:7:18030:18052	5042130	0	True				
ANR	5042454	AssignmentExpression	m_self_shutdown = true		5042130	0		=			
ANR	5042455	Identifier	m_self_shutdown		5042130	0					
ANR	5042456	Identifier	true		5042130	1					
ANR	5042457	IfStatement	if ( getVMStatus ( ) != VM_STOPPED )		5042130	2					
ANR	5042458	Condition	getVMStatus ( ) != VM_STOPPED	669:9:18071:18097	5042130	0	True				
ANR	5042459	EqualityExpression	getVMStatus ( ) != VM_STOPPED		5042130	0		!=			
ANR	5042460	CallExpression	getVMStatus ( )		5042130	0					
ANR	5042461	Callee	getVMStatus		5042130	0					
ANR	5042462	Identifier	getVMStatus		5042130	0					
ANR	5042463	ArgumentList			5042130	1					
ANR	5042464	Identifier	VM_STOPPED		5042130	1					
ANR	5042465	CompoundStatement		71:38:1962:1962	5042130	1					
ANR	5042466	ExpressionStatement	setVMStatus ( VM_STOPPED )	670:7:18109:18132	5042130	0	True				
ANR	5042467	CallExpression	setVMStatus ( VM_STOPPED )		5042130	0					
ANR	5042468	Callee	setVMStatus		5042130	0					
ANR	5042469	Identifier	setVMStatus		5042130	0					
ANR	5042470	ArgumentList	VM_STOPPED		5042130	1					
ANR	5042471	Argument	VM_STOPPED		5042130	0					
ANR	5042472	Identifier	VM_STOPPED		5042130	0					
ANR	5042473	ExpressionStatement	m_stop_time . getTime ( )	671:7:18141:18162	5042130	1	True				
ANR	5042474	CallExpression	m_stop_time . getTime ( )		5042130	0					
ANR	5042475	Callee	m_stop_time . getTime		5042130	0					
ANR	5042476	MemberAccess	m_stop_time . getTime		5042130	0					
ANR	5042477	Identifier	m_stop_time		5042130	0					
ANR	5042478	Identifier	getTime		5042130	1					
ANR	5042479	ArgumentList			5042130	1					
ANR	5042480	ExpressionStatement	"m_result_msg += ""Stopped"""	673:6:18178:18203	5042130	3	True				
ANR	5042481	AssignmentExpression	"m_result_msg += ""Stopped"""		5042130	0		+=			
ANR	5042482	Identifier	m_result_msg		5042130	0					
ANR	5042483	PrimaryExpression	"""Stopped"""		5042130	1					
ANR	5042484	ReturnStatement	return true ;	674:6:18211:18222	5042130	4	True				
ANR	5042485	Identifier	true		5042130	0					
ANR	5042486	ElseStatement	else		5042130	0					
ANR	5042487	CompoundStatement		79:5:2108:2108	5042130	0					
ANR	5042488	ExpressionStatement	"vmprintf ( D_ALWAYS , ""libvirt has successfully reconnected!\\n"" )"	678:6:18254:18315	5042130	0	True				
ANR	5042489	CallExpression	"vmprintf ( D_ALWAYS , ""libvirt has successfully reconnected!\\n"" )"		5042130	0					
ANR	5042490	Callee	vmprintf		5042130	0					
ANR	5042491	Identifier	vmprintf		5042130	0					
ANR	5042492	ArgumentList	D_ALWAYS		5042130	1					
ANR	5042493	Argument	D_ALWAYS		5042130	0					
ANR	5042494	Identifier	D_ALWAYS		5042130	0					
ANR	5042495	Argument	"""libvirt has successfully reconnected!\\n"""		5042130	1					
ANR	5042496	PrimaryExpression	"""libvirt has successfully reconnected!\\n"""		5042130	0					
ANR	5042497	BreakStatement	break ;	680:4:18328:18333	5042130	19	True				
ANR	5042498	Label	default :	681:3:18338:18345	5042130	20	True				
ANR	5042499	Identifier	default		5042130	0					
ANR	5042500	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Error finding domain %s(%d): %s\\n"" , m_vm_name . Value ( ) , err -> code , err -> message )"	682:4:18351:18451	5042130	21	True				
ANR	5042501	CallExpression	"vmprintf ( D_ALWAYS , ""Error finding domain %s(%d): %s\\n"" , m_vm_name . Value ( ) , err -> code , err -> message )"		5042130	0					
ANR	5042502	Callee	vmprintf		5042130	0					
ANR	5042503	Identifier	vmprintf		5042130	0					
ANR	5042504	ArgumentList	D_ALWAYS		5042130	1					
ANR	5042505	Argument	D_ALWAYS		5042130	0					
ANR	5042506	Identifier	D_ALWAYS		5042130	0					
ANR	5042507	Argument	"""Error finding domain %s(%d): %s\\n"""		5042130	1					
ANR	5042508	PrimaryExpression	"""Error finding domain %s(%d): %s\\n"""		5042130	0					
ANR	5042509	Argument	m_vm_name . Value ( )		5042130	2					
ANR	5042510	CallExpression	m_vm_name . Value ( )		5042130	0					
ANR	5042511	Callee	m_vm_name . Value		5042130	0					
ANR	5042512	MemberAccess	m_vm_name . Value		5042130	0					
ANR	5042513	Identifier	m_vm_name		5042130	0					
ANR	5042514	Identifier	Value		5042130	1					
ANR	5042515	ArgumentList			5042130	1					
ANR	5042516	Argument	err -> code		5042130	3					
ANR	5042517	PtrMemberAccess	err -> code		5042130	0					
ANR	5042518	Identifier	err		5042130	0					
ANR	5042519	Identifier	code		5042130	1					
ANR	5042520	Argument	err -> message		5042130	4					
ANR	5042521	PtrMemberAccess	err -> message		5042130	0					
ANR	5042522	Identifier	err		5042130	0					
ANR	5042523	Identifier	message		5042130	1					
ANR	5042524	ReturnStatement	return false ;	683:4:18457:18469	5042130	22	True				
ANR	5042525	Identifier	false		5042130	0					
ANR	5042526	ElseStatement	else		5042130	0					
ANR	5042527	CompoundStatement		89:2:2351:2351	5042130	0					
ANR	5042528	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Error finding domain, no error returned from libvirt\\n"" )"	688:3:18494:18571	5042130	0	True				
ANR	5042529	CallExpression	"vmprintf ( D_ALWAYS , ""Error finding domain, no error returned from libvirt\\n"" )"		5042130	0					
ANR	5042530	Callee	vmprintf		5042130	0					
ANR	5042531	Identifier	vmprintf		5042130	0					
ANR	5042532	ArgumentList	D_ALWAYS		5042130	1					
ANR	5042533	Argument	D_ALWAYS		5042130	0					
ANR	5042534	Identifier	D_ALWAYS		5042130	0					
ANR	5042535	Argument	"""Error finding domain, no error returned from libvirt\\n"""		5042130	1					
ANR	5042536	PrimaryExpression	"""Error finding domain, no error returned from libvirt\\n"""		5042130	0					
ANR	5042537	ReturnStatement	return false ;	689:3:18576:18588	5042130	1	True				
ANR	5042538	Identifier	false		5042130	0					
ANR	5042539	IdentifierDeclStatement	virDomainInfo _info ;	694:1:18600:18619	5042130	11	True				
ANR	5042540	IdentifierDecl	_info		5042130	0					
ANR	5042541	IdentifierDeclType	virDomainInfo		5042130	0					
ANR	5042542	Identifier	_info		5042130	1					
ANR	5042543	IdentifierDeclStatement	virDomainInfoPtr info = & _info ;	695:1:18622:18652	5042130	12	True				
ANR	5042544	IdentifierDecl	info = & _info		5042130	0					
ANR	5042545	IdentifierDeclType	virDomainInfoPtr		5042130	0					
ANR	5042546	Identifier	info		5042130	1					
ANR	5042547	AssignmentExpression	info = & _info		5042130	2		=			
ANR	5042548	Identifier	info		5042130	0					
ANR	5042549	UnaryOperationExpression	& _info		5042130	1					
ANR	5042550	UnaryOperator	&		5042130	0					
ANR	5042551	Identifier	_info		5042130	1					
ANR	5042552	IfStatement	"if ( virDomainGetInfo ( dom , info ) < 0 )"		5042130	13					
ANR	5042553	Condition	"virDomainGetInfo ( dom , info ) < 0"	696:4:18658:18688	5042130	0	True				
ANR	5042554	RelationalExpression	"virDomainGetInfo ( dom , info ) < 0"		5042130	0		<			
ANR	5042555	CallExpression	"virDomainGetInfo ( dom , info )"		5042130	0					
ANR	5042556	Callee	virDomainGetInfo		5042130	0					
ANR	5042557	Identifier	virDomainGetInfo		5042130	0					
ANR	5042558	ArgumentList	dom		5042130	1					
ANR	5042559	Argument	dom		5042130	0					
ANR	5042560	Identifier	dom		5042130	0					
ANR	5042561	Argument	info		5042130	1					
ANR	5042562	Identifier	info		5042130	0					
ANR	5042563	PrimaryExpression	0		5042130	1					
ANR	5042564	CompoundStatement		100:5:2563:2622	5042130	1					
ANR	5042565	IdentifierDeclStatement	virErrorPtr err = virConnGetLastError ( m_libvirt_connection ) ;	698:5:18701:18760	5042130	0	True				
ANR	5042566	IdentifierDecl	err = virConnGetLastError ( m_libvirt_connection )		5042130	0					
ANR	5042567	IdentifierDeclType	virErrorPtr		5042130	0					
ANR	5042568	Identifier	err		5042130	1					
ANR	5042569	AssignmentExpression	err = virConnGetLastError ( m_libvirt_connection )		5042130	2		=			
ANR	5042570	Identifier	err		5042130	0					
ANR	5042571	CallExpression	virConnGetLastError ( m_libvirt_connection )		5042130	1					
ANR	5042572	Callee	virConnGetLastError		5042130	0					
ANR	5042573	Identifier	virConnGetLastError		5042130	0					
ANR	5042574	ArgumentList	m_libvirt_connection		5042130	1					
ANR	5042575	Argument	m_libvirt_connection		5042130	0					
ANR	5042576	Identifier	m_libvirt_connection		5042130	0					
ANR	5042577	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Error finding domain info %s: %s\\n"" , m_vm_name . Value ( ) , ( err ? err -> message : ""No reason found"" ) )"	699:5:18767:18884	5042130	1	True				
ANR	5042578	CallExpression	"vmprintf ( D_ALWAYS , ""Error finding domain info %s: %s\\n"" , m_vm_name . Value ( ) , ( err ? err -> message : ""No reason found"" ) )"		5042130	0					
ANR	5042579	Callee	vmprintf		5042130	0					
ANR	5042580	Identifier	vmprintf		5042130	0					
ANR	5042581	ArgumentList	D_ALWAYS		5042130	1					
ANR	5042582	Argument	D_ALWAYS		5042130	0					
ANR	5042583	Identifier	D_ALWAYS		5042130	0					
ANR	5042584	Argument	"""Error finding domain info %s: %s\\n"""		5042130	1					
ANR	5042585	PrimaryExpression	"""Error finding domain info %s: %s\\n"""		5042130	0					
ANR	5042586	Argument	m_vm_name . Value ( )		5042130	2					
ANR	5042587	CallExpression	m_vm_name . Value ( )		5042130	0					
ANR	5042588	Callee	m_vm_name . Value		5042130	0					
ANR	5042589	MemberAccess	m_vm_name . Value		5042130	0					
ANR	5042590	Identifier	m_vm_name		5042130	0					
ANR	5042591	Identifier	Value		5042130	1					
ANR	5042592	ArgumentList			5042130	1					
ANR	5042593	Argument	"err ? err -> message : ""No reason found"""		5042130	3					
ANR	5042594	ConditionalExpression	"err ? err -> message : ""No reason found"""		5042130	0					
ANR	5042595	Condition	err		5042130	0					
ANR	5042596	Identifier	err		5042130	0					
ANR	5042597	PtrMemberAccess	err -> message		5042130	1					
ANR	5042598	Identifier	err		5042130	0					
ANR	5042599	Identifier	message		5042130	1					
ANR	5042600	PrimaryExpression	"""No reason found"""		5042130	2					
ANR	5042601	ReturnStatement	return false ;	700:5:18891:18903	5042130	2	True				
ANR	5042602	Identifier	false		5042130	0					
ANR	5042603	IfStatement	if ( info -> state == VIR_DOMAIN_RUNNING || info -> state == VIR_DOMAIN_BLOCKED )		5042130	14					
ANR	5042604	Condition	info -> state == VIR_DOMAIN_RUNNING || info -> state == VIR_DOMAIN_BLOCKED	702:4:18914:18983	5042130	0	True				
ANR	5042605	OrExpression	info -> state == VIR_DOMAIN_RUNNING || info -> state == VIR_DOMAIN_BLOCKED		5042130	0		||			
ANR	5042606	EqualityExpression	info -> state == VIR_DOMAIN_RUNNING		5042130	0		==			
ANR	5042607	PtrMemberAccess	info -> state		5042130	0					
ANR	5042608	Identifier	info		5042130	0					
ANR	5042609	Identifier	state		5042130	1					
ANR	5042610	Identifier	VIR_DOMAIN_RUNNING		5042130	1					
ANR	5042611	EqualityExpression	info -> state == VIR_DOMAIN_BLOCKED		5042130	1		==			
ANR	5042612	PtrMemberAccess	info -> state		5042130	0					
ANR	5042613	Identifier	info		5042130	0					
ANR	5042614	Identifier	state		5042130	1					
ANR	5042615	Identifier	VIR_DOMAIN_BLOCKED		5042130	1					
ANR	5042616	CompoundStatement		105:3:2851:2851	5042130	1					
ANR	5042617	ExpressionStatement	setVMStatus ( VM_RUNNING )	704:5:18996:19019	5042130	0	True				
ANR	5042618	CallExpression	setVMStatus ( VM_RUNNING )		5042130	0					
ANR	5042619	Callee	setVMStatus		5042130	0					
ANR	5042620	Identifier	setVMStatus		5042130	0					
ANR	5042621	ArgumentList	VM_RUNNING		5042130	1					
ANR	5042622	Argument	VM_RUNNING		5042130	0					
ANR	5042623	Identifier	VM_RUNNING		5042130	0					
ANR	5042624	ExpressionStatement	m_cpu_time = info -> cpuTime / 1000000000.0	706:5:19073:19114	5042130	1	True				
ANR	5042625	AssignmentExpression	m_cpu_time = info -> cpuTime / 1000000000.0		5042130	0		=			
ANR	5042626	Identifier	m_cpu_time		5042130	0					
ANR	5042627	MultiplicativeExpression	info -> cpuTime / 1000000000.0		5042130	1		/			
ANR	5042628	PtrMemberAccess	info -> cpuTime		5042130	0					
ANR	5042629	Identifier	info		5042130	0					
ANR	5042630	Identifier	cpuTime		5042130	1					
ANR	5042631	PrimaryExpression	1000000000.0		5042130	1					
ANR	5042632	ExpressionStatement	"m_result_msg += ""Running"""	707:5:19121:19146	5042130	2	True				
ANR	5042633	AssignmentExpression	"m_result_msg += ""Running"""		5042130	0		+=			
ANR	5042634	Identifier	m_result_msg		5042130	0					
ANR	5042635	PrimaryExpression	"""Running"""		5042130	1					
ANR	5042636	ExpressionStatement	virDomainFree ( dom )	708:5:19153:19171	5042130	3	True				
ANR	5042637	CallExpression	virDomainFree ( dom )		5042130	0					
ANR	5042638	Callee	virDomainFree		5042130	0					
ANR	5042639	Identifier	virDomainFree		5042130	0					
ANR	5042640	ArgumentList	dom		5042130	1					
ANR	5042641	Argument	dom		5042130	0					
ANR	5042642	Identifier	dom		5042130	0					
ANR	5042643	ReturnStatement	return true ;	709:5:19178:19189	5042130	4	True				
ANR	5042644	Identifier	true		5042130	0					
ANR	5042645	ElseStatement	else		5042130	0					
ANR	5042646	IfStatement	if ( info -> state == VIR_DOMAIN_PAUSED )		5042130	0					
ANR	5042647	Condition	info -> state == VIR_DOMAIN_PAUSED	711:9:19205:19236	5042130	0	True				
ANR	5042648	EqualityExpression	info -> state == VIR_DOMAIN_PAUSED		5042130	0		==			
ANR	5042649	PtrMemberAccess	info -> state		5042130	0					
ANR	5042650	Identifier	info		5042130	0					
ANR	5042651	Identifier	state		5042130	1					
ANR	5042652	Identifier	VIR_DOMAIN_PAUSED		5042130	1					
ANR	5042653	CompoundStatement		114:3:3104:3104	5042130	1					
ANR	5042654	ExpressionStatement	"m_result_msg += ""Suspended"""	713:5:19249:19276	5042130	0	True				
ANR	5042655	AssignmentExpression	"m_result_msg += ""Suspended"""		5042130	0		+=			
ANR	5042656	Identifier	m_result_msg		5042130	0					
ANR	5042657	PrimaryExpression	"""Suspended"""		5042130	1					
ANR	5042658	ExpressionStatement	virDomainFree ( dom )	714:5:19283:19301	5042130	1	True				
ANR	5042659	CallExpression	virDomainFree ( dom )		5042130	0					
ANR	5042660	Callee	virDomainFree		5042130	0					
ANR	5042661	Identifier	virDomainFree		5042130	0					
ANR	5042662	ArgumentList	dom		5042130	1					
ANR	5042663	Argument	dom		5042130	0					
ANR	5042664	Identifier	dom		5042130	0					
ANR	5042665	ReturnStatement	return true ;	715:5:19308:19319	5042130	2	True				
ANR	5042666	Identifier	true		5042130	0					
ANR	5042667	ElseStatement	else		5042130	0					
ANR	5042668	CompoundStatement		120:3:3197:3197	5042130	0					
ANR	5042669	IfStatement	if ( getVMStatus ( ) == VM_RUNNING )		5042130	0					
ANR	5042670	Condition	getVMStatus ( ) == VM_RUNNING	719:8:19345:19371	5042130	0	True				
ANR	5042671	EqualityExpression	getVMStatus ( ) == VM_RUNNING		5042130	0		==			
ANR	5042672	CallExpression	getVMStatus ( )		5042130	0					
ANR	5042673	Callee	getVMStatus		5042130	0					
ANR	5042674	Identifier	getVMStatus		5042130	0					
ANR	5042675	ArgumentList			5042130	1					
ANR	5042676	Identifier	VM_RUNNING		5042130	1					
ANR	5042677	CompoundStatement		122:7:3243:3243	5042130	1					
ANR	5042678	ExpressionStatement	m_self_shutdown = true	721:2:19385:19407	5042130	0	True				
ANR	5042679	AssignmentExpression	m_self_shutdown = true		5042130	0		=			
ANR	5042680	Identifier	m_self_shutdown		5042130	0					
ANR	5042681	Identifier	true		5042130	1					
ANR	5042682	IfStatement	if ( getVMStatus ( ) != VM_STOPPED )		5042130	1					
ANR	5042683	Condition	getVMStatus ( ) != VM_STOPPED	723:8:19426:19452	5042130	0	True				
ANR	5042684	EqualityExpression	getVMStatus ( ) != VM_STOPPED		5042130	0		!=			
ANR	5042685	CallExpression	getVMStatus ( )		5042130	0					
ANR	5042686	Callee	getVMStatus		5042130	0					
ANR	5042687	Identifier	getVMStatus		5042130	0					
ANR	5042688	ArgumentList			5042130	1					
ANR	5042689	Identifier	VM_STOPPED		5042130	1					
ANR	5042690	CompoundStatement		126:7:3324:3324	5042130	1					
ANR	5042691	ExpressionStatement	setVMStatus ( VM_STOPPED )	725:2:19466:19489	5042130	0	True				
ANR	5042692	CallExpression	setVMStatus ( VM_STOPPED )		5042130	0					
ANR	5042693	Callee	setVMStatus		5042130	0					
ANR	5042694	Identifier	setVMStatus		5042130	0					
ANR	5042695	ArgumentList	VM_STOPPED		5042130	1					
ANR	5042696	Argument	VM_STOPPED		5042130	0					
ANR	5042697	Identifier	VM_STOPPED		5042130	0					
ANR	5042698	ExpressionStatement	m_stop_time . getTime ( )	726:2:19493:19514	5042130	1	True				
ANR	5042699	CallExpression	m_stop_time . getTime ( )		5042130	0					
ANR	5042700	Callee	m_stop_time . getTime		5042130	0					
ANR	5042701	MemberAccess	m_stop_time . getTime		5042130	0					
ANR	5042702	Identifier	m_stop_time		5042130	0					
ANR	5042703	Identifier	getTime		5042130	1					
ANR	5042704	ArgumentList			5042130	1					
ANR	5042705	ExpressionStatement	"m_result_msg += ""Stopped"""	728:5:19530:19555	5042130	2	True				
ANR	5042706	AssignmentExpression	"m_result_msg += ""Stopped"""		5042130	0		+=			
ANR	5042707	Identifier	m_result_msg		5042130	0					
ANR	5042708	PrimaryExpression	"""Stopped"""		5042130	1					
ANR	5042709	ExpressionStatement	virDomainFree ( dom )	729:5:19562:19580	5042130	3	True				
ANR	5042710	CallExpression	virDomainFree ( dom )		5042130	0					
ANR	5042711	Callee	virDomainFree		5042130	0					
ANR	5042712	Identifier	virDomainFree		5042130	0					
ANR	5042713	ArgumentList	dom		5042130	1					
ANR	5042714	Argument	dom		5042130	0					
ANR	5042715	Identifier	dom		5042130	0					
ANR	5042716	ReturnStatement	return true ;	730:5:19587:19598	5042130	4	True				
ANR	5042717	Identifier	true		5042130	0					
ANR	5042718	ExpressionStatement	virDomainFree ( dom )	732:1:19606:19624	5042130	15	True				
ANR	5042719	CallExpression	virDomainFree ( dom )		5042130	0					
ANR	5042720	Callee	virDomainFree		5042130	0					
ANR	5042721	Identifier	virDomainFree		5042130	0					
ANR	5042722	ArgumentList	dom		5042130	1					
ANR	5042723	Argument	dom		5042130	0					
ANR	5042724	Identifier	dom		5042130	0					
ANR	5042725	ReturnStatement	return false ;	733:1:19627:19639	5042130	16	True				
ANR	5042726	Identifier	false		5042130	0					
ANR	5042727	ReturnType	bool		5042130	1					
ANR	5042728	Identifier	VirshType :: Status		5042130	2					
ANR	5042729	ParameterList			5042130	3					
ANR	5042730	CFGEntryNode	ENTRY		5042130		True				
ANR	5042731	CFGExitNode	EXIT		5042130		True				
ANR	5042732	Symbol	m_result_msg		5042130						
ANR	5042733	Symbol	info -> state		5042130						
ANR	5042734	Symbol	VMGAHP_ERR_INTERNAL		5042130						
ANR	5042735	Symbol	m_vm_mac		5042130						
ANR	5042736	Symbol	m_vm_mac . IsEmpty		5042130						
ANR	5042737	Symbol	m_vm_name		5042130						
ANR	5042738	Symbol	dom		5042130						
ANR	5042739	Symbol	err -> code		5042130						
ANR	5042740	Symbol	m_cpu_time		5042130						
ANR	5042741	Symbol	m_result_msg . IsEmpty		5042130						
ANR	5042742	Symbol	m_vm_ip		5042130						
ANR	5042743	Symbol	getVMStatus		5042130						
ANR	5042744	Symbol	m_configfile		5042130						
ANR	5042745	Symbol	VMGAHP_STATUS_COMMAND_IP		5042130						
ANR	5042746	Symbol	virConnGetLastError		5042130						
ANR	5042747	Symbol	VMGAHP_STATUS_COMMAND_MAC		5042130						
ANR	5042748	Symbol	m_stop_time		5042130						
ANR	5042749	Symbol	m_libvirt_connection		5042130						
ANR	5042750	Symbol	VIR_DOMAIN_PAUSED		5042130						
ANR	5042751	Symbol	priv		5042130						
ANR	5042752	Symbol	VM_RUNNING		5042130						
ANR	5042753	Symbol	VIR_DOMAIN_BLOCKED		5042130						
ANR	5042754	Symbol	info		5042130						
ANR	5042755	Symbol	m_self_shutdown		5042130						
ANR	5042756	Symbol	& _info		5042130						
ANR	5042757	Symbol	_info		5042130						
ANR	5042758	Symbol	VIR_DOMAIN_RUNNING		5042130						
ANR	5042759	Symbol	NULL		5042130						
ANR	5042760	Symbol	err		5042130						
ANR	5042761	Symbol	err -> message		5042130						
ANR	5042762	Symbol	info -> cpuTime		5042130						
ANR	5042763	Symbol	m_configfile . Length		5042130						
ANR	5042764	Symbol	false		5042130						
ANR	5042765	Symbol	D_ALWAYS		5042130						
ANR	5042766	Symbol	this		5042130						
ANR	5042767	Symbol	virDomainLookupByName		5042130						
ANR	5042768	Symbol	VM_STOPPED		5042130						
ANR	5042769	Symbol	D_FULLDEBUG		5042130						
ANR	5042770	Symbol	set_root_priv		5042130						
ANR	5042771	Symbol	m_vm_name . Value		5042130						
ANR	5042772	Symbol	* err		5042130						
ANR	5042773	Symbol	virDomainGetInfo		5042130						
ANR	5042774	Symbol	m_vm_networking		5042130						
ANR	5042775	Symbol	VMGAHP_STATUS_COMMAND_STATUS		5042130						
ANR	5042776	Symbol	true		5042130						
ANR	5042777	Symbol	m_vm_ip . IsEmpty		5042130						
ANR	5042778	Symbol	* info		5042130						
ANR	5042779	Function	virshIOError	739:0:19712:19921							
ANR	5042780	FunctionDef	"virshIOError (const char * filename , FILE * fp)"		5042779	0					
ANR	5042781	CompoundStatement		740:0:19764:19921	5042779	0					
ANR	5042782	ExpressionStatement	"vmprintf ( D_ALWAYS , ""failed to fprintf in CreateVirshConfigFile(%s:%s)\\n"" , filename , strerror ( errno ) )"	741:1:19767:19870	5042779	0	True				
ANR	5042783	CallExpression	"vmprintf ( D_ALWAYS , ""failed to fprintf in CreateVirshConfigFile(%s:%s)\\n"" , filename , strerror ( errno ) )"		5042779	0					
ANR	5042784	Callee	vmprintf		5042779	0					
ANR	5042785	Identifier	vmprintf		5042779	0					
ANR	5042786	ArgumentList	D_ALWAYS		5042779	1					
ANR	5042787	Argument	D_ALWAYS		5042779	0					
ANR	5042788	Identifier	D_ALWAYS		5042779	0					
ANR	5042789	Argument	"""failed to fprintf in CreateVirshConfigFile(%s:%s)\\n"""		5042779	1					
ANR	5042790	PrimaryExpression	"""failed to fprintf in CreateVirshConfigFile(%s:%s)\\n"""		5042779	0					
ANR	5042791	Argument	filename		5042779	2					
ANR	5042792	Identifier	filename		5042779	0					
ANR	5042793	Argument	strerror ( errno )		5042779	3					
ANR	5042794	CallExpression	strerror ( errno )		5042779	0					
ANR	5042795	Callee	strerror		5042779	0					
ANR	5042796	Identifier	strerror		5042779	0					
ANR	5042797	ArgumentList	errno		5042779	1					
ANR	5042798	Argument	errno		5042779	0					
ANR	5042799	Identifier	errno		5042779	0					
ANR	5042800	IfStatement	if ( fp )		5042779	1					
ANR	5042801	Condition	fp	743:5:19877:19878	5042779	0	True				
ANR	5042802	Identifier	fp		5042779	0					
ANR	5042803	CompoundStatement		4:10:117:117	5042779	1					
ANR	5042804	ExpressionStatement	fclose ( fp )	744:2:19886:19896	5042779	0	True				
ANR	5042805	CallExpression	fclose ( fp )		5042779	0					
ANR	5042806	Callee	fclose		5042779	0					
ANR	5042807	Identifier	fclose		5042779	0					
ANR	5042808	ArgumentList	fp		5042779	1					
ANR	5042809	Argument	fp		5042779	0					
ANR	5042810	Identifier	fp		5042779	0					
ANR	5042811	ExpressionStatement	unlink ( filename )	746:1:19902:19918	5042779	2	True				
ANR	5042812	CallExpression	unlink ( filename )		5042779	0					
ANR	5042813	Callee	unlink		5042779	0					
ANR	5042814	Identifier	unlink		5042779	0					
ANR	5042815	ArgumentList	filename		5042779	1					
ANR	5042816	Argument	filename		5042779	0					
ANR	5042817	Identifier	filename		5042779	0					
ANR	5042818	ReturnType	void		5042779	1					
ANR	5042819	Identifier	virshIOError		5042779	2					
ANR	5042820	ParameterList	"const char * filename , FILE * fp"		5042779	3					
ANR	5042821	Parameter	const char * filename	739:18:19730:19750	5042779	0	True				
ANR	5042822	ParameterType	const char *		5042779	0					
ANR	5042823	Identifier	filename		5042779	1					
ANR	5042824	Parameter	FILE * fp	739:41:19753:19761	5042779	1	True				
ANR	5042825	ParameterType	FILE *		5042779	0					
ANR	5042826	Identifier	fp		5042779	1					
ANR	5042827	CFGEntryNode	ENTRY		5042779		True				
ANR	5042828	CFGExitNode	EXIT		5042779		True				
ANR	5042829	Symbol	strerror		5042779						
ANR	5042830	Symbol	errno		5042779						
ANR	5042831	Symbol	filename		5042779						
ANR	5042832	Symbol	D_ALWAYS		5042779						
ANR	5042833	Symbol	fp		5042779						
ANR	5042834	Function	KVMType :: CreateVirshConfigFile	750:0:19924:21430							
ANR	5042835	FunctionDef	KVMType :: CreateVirshConfigFile (const char * filename)		5042834	0					
ANR	5042836	CompoundStatement		751:0:19983:21430	5042834	0					
ANR	5042837	IdentifierDeclStatement	MyString disk_string ;	752:1:19986:20006	5042834	0	True				
ANR	5042838	IdentifierDecl	disk_string		5042834	0					
ANR	5042839	IdentifierDeclType	MyString		5042834	0					
ANR	5042840	Identifier	disk_string		5042834	1					
ANR	5042841	IfStatement	if ( ! filename )		5042834	1					
ANR	5042842	Condition	! filename	754:4:20013:20021	5042834	0	True				
ANR	5042843	UnaryOperationExpression	! filename		5042834	0					
ANR	5042844	UnaryOperator	!		5042834	0					
ANR	5042845	Identifier	filename		5042834	1					
ANR	5042846	ReturnStatement	return false ;	754:15:20024:20036	5042834	1	True				
ANR	5042847	Identifier	false		5042834	0					
ANR	5042848	IfStatement	if ( ! VirshType :: CreateVirshConfigFile ( filename ) )		5042834	2					
ANR	5042849	Condition	! VirshType :: CreateVirshConfigFile ( filename )	759:5:20161:20203	5042834	0	True				
ANR	5042850	UnaryOperationExpression	! VirshType :: CreateVirshConfigFile ( filename )		5042834	0					
ANR	5042851	UnaryOperator	!		5042834	0					
ANR	5042852	CallExpression	VirshType :: CreateVirshConfigFile ( filename )		5042834	1					
ANR	5042853	Callee	VirshType :: CreateVirshConfigFile		5042834	0					
ANR	5042854	Identifier	VirshType :: CreateVirshConfigFile		5042834	0					
ANR	5042855	ArgumentList	filename		5042834	1					
ANR	5042856	Argument	filename		5042834	0					
ANR	5042857	Identifier	filename		5042834	0					
ANR	5042858	CompoundStatement		10:1:223:223	5042834	1					
ANR	5042859	ExpressionStatement	"vmprintf ( D_ALWAYS , ""KVMType::CreateVirshConfigFile no XML found, generating defaults\\n"" )"	761:2:20211:20299	5042834	0	True				
ANR	5042860	CallExpression	"vmprintf ( D_ALWAYS , ""KVMType::CreateVirshConfigFile no XML found, generating defaults\\n"" )"		5042834	0					
ANR	5042861	Callee	vmprintf		5042834	0					
ANR	5042862	Identifier	vmprintf		5042834	0					
ANR	5042863	ArgumentList	D_ALWAYS		5042834	1					
ANR	5042864	Argument	D_ALWAYS		5042834	0					
ANR	5042865	Identifier	D_ALWAYS		5042834	0					
ANR	5042866	Argument	"""KVMType::CreateVirshConfigFile no XML found, generating defaults\\n"""		5042834	1					
ANR	5042867	PrimaryExpression	"""KVMType::CreateVirshConfigFile no XML found, generating defaults\\n"""		5042834	0					
ANR	5042868	ExpressionStatement	"m_xml += ""<domain type='kvm'>"""	763:2:20304:20334	5042834	1	True				
ANR	5042869	AssignmentExpression	"m_xml += ""<domain type='kvm'>"""		5042834	0		+=			
ANR	5042870	Identifier	m_xml		5042834	0					
ANR	5042871	PrimaryExpression	"""<domain type='kvm'>"""		5042834	1					
ANR	5042872	ExpressionStatement	"m_xml += ""<name>"""	764:2:20338:20355	5042834	2	True				
ANR	5042873	AssignmentExpression	"m_xml += ""<name>"""		5042834	0		+=			
ANR	5042874	Identifier	m_xml		5042834	0					
ANR	5042875	PrimaryExpression	"""<name>"""		5042834	1					
ANR	5042876	ExpressionStatement	m_xml += m_vm_name	765:2:20359:20377	5042834	3	True				
ANR	5042877	AssignmentExpression	m_xml += m_vm_name		5042834	0		+=			
ANR	5042878	Identifier	m_xml		5042834	0					
ANR	5042879	Identifier	m_vm_name		5042834	1					
ANR	5042880	ExpressionStatement	"m_xml += ""</name>"""	766:2:20381:20399	5042834	4	True				
ANR	5042881	AssignmentExpression	"m_xml += ""</name>"""		5042834	0		+=			
ANR	5042882	Identifier	m_xml		5042834	0					
ANR	5042883	PrimaryExpression	"""</name>"""		5042834	1					
ANR	5042884	ExpressionStatement	"m_xml += ""<memory>"""	767:2:20403:20422	5042834	5	True				
ANR	5042885	AssignmentExpression	"m_xml += ""<memory>"""		5042834	0		+=			
ANR	5042886	Identifier	m_xml		5042834	0					
ANR	5042887	PrimaryExpression	"""<memory>"""		5042834	1					
ANR	5042888	ExpressionStatement	m_xml += m_vm_mem * 1024	768:2:20426:20450	5042834	6	True				
ANR	5042889	AssignmentExpression	m_xml += m_vm_mem * 1024		5042834	0		+=			
ANR	5042890	Identifier	m_xml		5042834	0					
ANR	5042891	MultiplicativeExpression	m_vm_mem * 1024		5042834	1		*			
ANR	5042892	Identifier	m_vm_mem		5042834	0					
ANR	5042893	PrimaryExpression	1024		5042834	1					
ANR	5042894	ExpressionStatement	"m_xml += ""</memory>"""	769:2:20454:20474	5042834	7	True				
ANR	5042895	AssignmentExpression	"m_xml += ""</memory>"""		5042834	0		+=			
ANR	5042896	Identifier	m_xml		5042834	0					
ANR	5042897	PrimaryExpression	"""</memory>"""		5042834	1					
ANR	5042898	ExpressionStatement	"m_xml += ""<vcpu>"""	770:2:20478:20495	5042834	8	True				
ANR	5042899	AssignmentExpression	"m_xml += ""<vcpu>"""		5042834	0		+=			
ANR	5042900	Identifier	m_xml		5042834	0					
ANR	5042901	PrimaryExpression	"""<vcpu>"""		5042834	1					
ANR	5042902	ExpressionStatement	m_xml += m_vcpus	771:2:20499:20515	5042834	9	True				
ANR	5042903	AssignmentExpression	m_xml += m_vcpus		5042834	0		+=			
ANR	5042904	Identifier	m_xml		5042834	0					
ANR	5042905	Identifier	m_vcpus		5042834	1					
ANR	5042906	ExpressionStatement	"m_xml += ""</vcpu>"""	772:2:20519:20537	5042834	10	True				
ANR	5042907	AssignmentExpression	"m_xml += ""</vcpu>"""		5042834	0		+=			
ANR	5042908	Identifier	m_xml		5042834	0					
ANR	5042909	PrimaryExpression	"""</vcpu>"""		5042834	1					
ANR	5042910	ExpressionStatement	"m_xml += ""<os><type>hvm</type></os>"""	773:2:20541:20577	5042834	11	True				
ANR	5042911	AssignmentExpression	"m_xml += ""<os><type>hvm</type></os>"""		5042834	0		+=			
ANR	5042912	Identifier	m_xml		5042834	0					
ANR	5042913	PrimaryExpression	"""<os><type>hvm</type></os>"""		5042834	1					
ANR	5042914	ExpressionStatement	"m_xml += ""<devices>"""	774:2:20581:20601	5042834	12	True				
ANR	5042915	AssignmentExpression	"m_xml += ""<devices>"""		5042834	0		+=			
ANR	5042916	Identifier	m_xml		5042834	0					
ANR	5042917	PrimaryExpression	"""<devices>"""		5042834	1					
ANR	5042918	ExpressionStatement	"m_xml += ""<console type='pty'><source path='/dev/ptmx'/></console>"""	775:2:20605:20672	5042834	13	True				
ANR	5042919	AssignmentExpression	"m_xml += ""<console type='pty'><source path='/dev/ptmx'/></console>"""		5042834	0		+=			
ANR	5042920	Identifier	m_xml		5042834	0					
ANR	5042921	PrimaryExpression	"""<console type='pty'><source path='/dev/ptmx'/></console>"""		5042834	1					
ANR	5042922	IfStatement	if ( m_vm_networking )		5042834	14					
ANR	5042923	Condition	m_vm_networking	776:6:20680:20694	5042834	0	True				
ANR	5042924	Identifier	m_vm_networking		5042834	0					
ANR	5042925	CompoundStatement		27:3:717:717	5042834	1					
ANR	5042926	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""mac address is %s\\n"" , m_vm_job_mac . Value ( ) )"	778:3:20706:20772	5042834	0	True				
ANR	5042927	CallExpression	"vmprintf ( D_FULLDEBUG , ""mac address is %s\\n"" , m_vm_job_mac . Value ( ) )"		5042834	0					
ANR	5042928	Callee	vmprintf		5042834	0					
ANR	5042929	Identifier	vmprintf		5042834	0					
ANR	5042930	ArgumentList	D_FULLDEBUG		5042834	1					
ANR	5042931	Argument	D_FULLDEBUG		5042834	0					
ANR	5042932	Identifier	D_FULLDEBUG		5042834	0					
ANR	5042933	Argument	"""mac address is %s\\n"""		5042834	1					
ANR	5042934	PrimaryExpression	"""mac address is %s\\n"""		5042834	0					
ANR	5042935	Argument	m_vm_job_mac . Value ( )		5042834	2					
ANR	5042936	CallExpression	m_vm_job_mac . Value ( )		5042834	0					
ANR	5042937	Callee	m_vm_job_mac . Value		5042834	0					
ANR	5042938	MemberAccess	m_vm_job_mac . Value		5042834	0					
ANR	5042939	Identifier	m_vm_job_mac		5042834	0					
ANR	5042940	Identifier	Value		5042834	1					
ANR	5042941	ArgumentList			5042834	1					
ANR	5042942	IfStatement	"if ( m_vm_networking_type . find ( ""nat"" ) >= 0 )"		5042834	1					
ANR	5042943	Condition	"m_vm_networking_type . find ( ""nat"" ) >= 0"	779:7:20781:20817	5042834	0	True				
ANR	5042944	RelationalExpression	"m_vm_networking_type . find ( ""nat"" ) >= 0"		5042834	0		>=			
ANR	5042945	CallExpression	"m_vm_networking_type . find ( ""nat"" )"		5042834	0					
ANR	5042946	Callee	m_vm_networking_type . find		5042834	0					
ANR	5042947	MemberAccess	m_vm_networking_type . find		5042834	0					
ANR	5042948	Identifier	m_vm_networking_type		5042834	0					
ANR	5042949	Identifier	find		5042834	1					
ANR	5042950	ArgumentList	"""nat"""		5042834	1					
ANR	5042951	Argument	"""nat"""		5042834	0					
ANR	5042952	PrimaryExpression	"""nat"""		5042834	0					
ANR	5042953	PrimaryExpression	0		5042834	1					
ANR	5042954	CompoundStatement		29:47:837:837	5042834	1					
ANR	5042955	ExpressionStatement	"m_xml += ""<interface type='network'><source network='default'/></interface>"""	780:3:20826:20902	5042834	0	True				
ANR	5042956	AssignmentExpression	"m_xml += ""<interface type='network'><source network='default'/></interface>"""		5042834	0		+=			
ANR	5042957	Identifier	m_xml		5042834	0					
ANR	5042958	PrimaryExpression	"""<interface type='network'><source network='default'/></interface>"""		5042834	1					
ANR	5042959	ElseStatement	else		5042834	0					
ANR	5042960	IfStatement	"if ( m_vm_networking_type . find ( ""bridge"" ) >= 0 )"		5042834	0					
ANR	5042961	Condition	"m_vm_networking_type . find ( ""bridge"" ) >= 0"	782:12:20921:20960	5042834	0	True				
ANR	5042962	RelationalExpression	"m_vm_networking_type . find ( ""bridge"" ) >= 0"		5042834	0		>=			
ANR	5042963	CallExpression	"m_vm_networking_type . find ( ""bridge"" )"		5042834	0					
ANR	5042964	Callee	m_vm_networking_type . find		5042834	0					
ANR	5042965	MemberAccess	m_vm_networking_type . find		5042834	0					
ANR	5042966	Identifier	m_vm_networking_type		5042834	0					
ANR	5042967	Identifier	find		5042834	1					
ANR	5042968	ArgumentList	"""bridge"""		5042834	1					
ANR	5042969	Argument	"""bridge"""		5042834	0					
ANR	5042970	PrimaryExpression	"""bridge"""		5042834	0					
ANR	5042971	PrimaryExpression	0		5042834	1					
ANR	5042972	CompoundStatement		33:3:983:983	5042834	1					
ANR	5042973	ExpressionStatement	"m_xml += ""<interface type='bridge'>"""	784:3:20972:21008	5042834	0	True				
ANR	5042974	AssignmentExpression	"m_xml += ""<interface type='bridge'>"""		5042834	0		+=			
ANR	5042975	Identifier	m_xml		5042834	0					
ANR	5042976	PrimaryExpression	"""<interface type='bridge'>"""		5042834	1					
ANR	5042977	IfStatement	if ( ! m_vm_bridge_interface . empty ( ) )		5042834	1					
ANR	5042978	Condition	! m_vm_bridge_interface . empty ( )	785:7:21017:21046	5042834	0	True				
ANR	5042979	UnaryOperationExpression	! m_vm_bridge_interface . empty ( )		5042834	0					
ANR	5042980	UnaryOperator	!		5042834	0					
ANR	5042981	CallExpression	m_vm_bridge_interface . empty ( )		5042834	1					
ANR	5042982	Callee	m_vm_bridge_interface . empty		5042834	0					
ANR	5042983	MemberAccess	m_vm_bridge_interface . empty		5042834	0					
ANR	5042984	Identifier	m_vm_bridge_interface		5042834	0					
ANR	5042985	Identifier	empty		5042834	1					
ANR	5042986	ArgumentList			5042834	1					
ANR	5042987	CompoundStatement		35:39:1065:1065	5042834	1					
ANR	5042988	ExpressionStatement	"m_xml += ""<source bridge='"""	786:4:21055:21082	5042834	0	True				
ANR	5042989	AssignmentExpression	"m_xml += ""<source bridge='"""		5042834	0		+=			
ANR	5042990	Identifier	m_xml		5042834	0					
ANR	5042991	PrimaryExpression	"""<source bridge='"""		5042834	1					
ANR	5042992	ExpressionStatement	m_xml += m_vm_bridge_interface . c_str ( )	787:4:21088:21126	5042834	1	True				
ANR	5042993	AssignmentExpression	m_xml += m_vm_bridge_interface . c_str ( )		5042834	0		+=			
ANR	5042994	Identifier	m_xml		5042834	0					
ANR	5042995	CallExpression	m_vm_bridge_interface . c_str ( )		5042834	1					
ANR	5042996	Callee	m_vm_bridge_interface . c_str		5042834	0					
ANR	5042997	MemberAccess	m_vm_bridge_interface . c_str		5042834	0					
ANR	5042998	Identifier	m_vm_bridge_interface		5042834	0					
ANR	5042999	Identifier	c_str		5042834	1					
ANR	5043000	ArgumentList			5042834	1					
ANR	5043001	ExpressionStatement	"m_xml += ""'/>"""	788:4:21132:21146	5042834	2	True				
ANR	5043002	AssignmentExpression	"m_xml += ""'/>"""		5042834	0		+=			
ANR	5043003	Identifier	m_xml		5042834	0					
ANR	5043004	PrimaryExpression	"""'/>"""		5042834	1					
ANR	5043005	IfStatement	if ( ! m_vm_job_mac . IsEmpty ( ) )		5042834	2					
ANR	5043006	Condition	! m_vm_job_mac . IsEmpty ( )	790:6:21159:21181	5042834	0	True				
ANR	5043007	UnaryOperationExpression	! m_vm_job_mac . IsEmpty ( )		5042834	0					
ANR	5043008	UnaryOperator	!		5042834	0					
ANR	5043009	CallExpression	m_vm_job_mac . IsEmpty ( )		5042834	1					
ANR	5043010	Callee	m_vm_job_mac . IsEmpty		5042834	0					
ANR	5043011	MemberAccess	m_vm_job_mac . IsEmpty		5042834	0					
ANR	5043012	Identifier	m_vm_job_mac		5042834	0					
ANR	5043013	Identifier	IsEmpty		5042834	1					
ANR	5043014	ArgumentList			5042834	1					
ANR	5043015	CompoundStatement		41:4:1204:1204	5042834	1					
ANR	5043016	ExpressionStatement	"m_xml += ""<mac address='"""	792:4:21194:21219	5042834	0	True				
ANR	5043017	AssignmentExpression	"m_xml += ""<mac address='"""		5042834	0		+=			
ANR	5043018	Identifier	m_xml		5042834	0					
ANR	5043019	PrimaryExpression	"""<mac address='"""		5042834	1					
ANR	5043020	ExpressionStatement	m_xml += m_vm_job_mac	793:4:21225:21246	5042834	1	True				
ANR	5043021	AssignmentExpression	m_xml += m_vm_job_mac		5042834	0		+=			
ANR	5043022	Identifier	m_xml		5042834	0					
ANR	5043023	Identifier	m_vm_job_mac		5042834	1					
ANR	5043024	ExpressionStatement	"m_xml += ""'/>"""	794:4:21252:21266	5042834	2	True				
ANR	5043025	AssignmentExpression	"m_xml += ""'/>"""		5042834	0		+=			
ANR	5043026	Identifier	m_xml		5042834	0					
ANR	5043027	PrimaryExpression	"""'/>"""		5042834	1					
ANR	5043028	ExpressionStatement	"m_xml += ""</interface>"""	796:3:21277:21300	5042834	3	True				
ANR	5043029	AssignmentExpression	"m_xml += ""</interface>"""		5042834	0		+=			
ANR	5043030	Identifier	m_xml		5042834	0					
ANR	5043031	PrimaryExpression	"""</interface>"""		5042834	1					
ANR	5043032	ExpressionStatement	disk_string = makeVirshDiskString ( )	799:2:21314:21349	5042834	15	True				
ANR	5043033	AssignmentExpression	disk_string = makeVirshDiskString ( )		5042834	0		=			
ANR	5043034	Identifier	disk_string		5042834	0					
ANR	5043035	CallExpression	makeVirshDiskString ( )		5042834	1					
ANR	5043036	Callee	makeVirshDiskString		5042834	0					
ANR	5043037	Identifier	makeVirshDiskString		5042834	0					
ANR	5043038	ArgumentList			5042834	1					
ANR	5043039	ExpressionStatement	m_xml += disk_string	801:2:21354:21374	5042834	16	True				
ANR	5043040	AssignmentExpression	m_xml += disk_string		5042834	0		+=			
ANR	5043041	Identifier	m_xml		5042834	0					
ANR	5043042	Identifier	disk_string		5042834	1					
ANR	5043043	ExpressionStatement	"m_xml += ""</devices></domain>"""	802:2:21378:21408	5042834	17	True				
ANR	5043044	AssignmentExpression	"m_xml += ""</devices></domain>"""		5042834	0		+=			
ANR	5043045	Identifier	m_xml		5042834	0					
ANR	5043046	PrimaryExpression	"""</devices></domain>"""		5042834	1					
ANR	5043047	ReturnStatement	return true ;	807:1:21417:21428	5042834	3	True				
ANR	5043048	Identifier	true		5042834	0					
ANR	5043049	ReturnType	bool		5042834	1					
ANR	5043050	Identifier	KVMType :: CreateVirshConfigFile		5042834	2					
ANR	5043051	ParameterList	const char * filename		5042834	3					
ANR	5043052	Parameter	const char * filename	750:36:19960:19980	5042834	0	True				
ANR	5043053	ParameterType	const char *		5042834	0					
ANR	5043054	Identifier	filename		5042834	1					
ANR	5043055	CFGEntryNode	ENTRY		5042834		True				
ANR	5043056	CFGExitNode	EXIT		5042834		True				
ANR	5043057	Symbol	m_vm_name		5042834						
ANR	5043058	Symbol	m_vm_bridge_interface		5042834						
ANR	5043059	Symbol	m_vm_bridge_interface . c_str		5042834						
ANR	5043060	Symbol	m_vm_job_mac . IsEmpty		5042834						
ANR	5043061	Symbol	disk_string		5042834						
ANR	5043062	Symbol	m_vm_mem		5042834						
ANR	5043063	Symbol	m_vm_networking_type . find		5042834						
ANR	5043064	Symbol	false		5042834						
ANR	5043065	Symbol	D_ALWAYS		5042834						
ANR	5043066	Symbol	m_xml		5042834						
ANR	5043067	Symbol	m_vm_job_mac		5042834						
ANR	5043068	Symbol	m_vm_networking_type		5042834						
ANR	5043069	Symbol	VirshType :: CreateVirshConfigFile		5042834						
ANR	5043070	Symbol	D_FULLDEBUG		5042834						
ANR	5043071	Symbol	filename		5042834						
ANR	5043072	Symbol	m_vm_job_mac . Value		5042834						
ANR	5043073	Symbol	m_vm_bridge_interface . empty		5042834						
ANR	5043074	Symbol	m_vm_networking		5042834						
ANR	5043075	Symbol	true		5042834						
ANR	5043076	Symbol	m_vcpus		5042834						
ANR	5043077	Symbol	makeVirshDiskString		5042834						
ANR	5043078	Function	XenType :: CreateVirshConfigFile	811:0:21434:23589							
ANR	5043079	FunctionDef	XenType :: CreateVirshConfigFile (const char * filename)		5043078	0					
ANR	5043080	CompoundStatement		813:0:21492:23589	5043078	0					
ANR	5043081	IdentifierDeclStatement	MyString disk_string ;	814:1:21495:21515	5043078	0	True				
ANR	5043082	IdentifierDecl	disk_string		5043078	0					
ANR	5043083	IdentifierDeclType	MyString		5043078	0					
ANR	5043084	Identifier	disk_string		5043078	1					
ANR	5043085	IfStatement	if ( ! filename )		5043078	1					
ANR	5043086	Condition	! filename	816:5:21523:21531	5043078	0	True				
ANR	5043087	UnaryOperationExpression	! filename		5043078	0					
ANR	5043088	UnaryOperator	!		5043078	0					
ANR	5043089	Identifier	filename		5043078	1					
ANR	5043090	ReturnStatement	return false ;	816:17:21535:21547	5043078	1	True				
ANR	5043091	Identifier	false		5043078	0					
ANR	5043092	IfStatement	if ( ! VirshType :: CreateVirshConfigFile ( filename ) )		5043078	2					
ANR	5043093	Condition	! VirshType :: CreateVirshConfigFile ( filename )	818:5:21555:21597	5043078	0	True				
ANR	5043094	UnaryOperationExpression	! VirshType :: CreateVirshConfigFile ( filename )		5043078	0					
ANR	5043095	UnaryOperator	!		5043078	0					
ANR	5043096	CallExpression	VirshType :: CreateVirshConfigFile ( filename )		5043078	1					
ANR	5043097	Callee	VirshType :: CreateVirshConfigFile		5043078	0					
ANR	5043098	Identifier	VirshType :: CreateVirshConfigFile		5043078	0					
ANR	5043099	ArgumentList	filename		5043078	1					
ANR	5043100	Argument	filename		5043078	0					
ANR	5043101	Identifier	filename		5043078	0					
ANR	5043102	CompoundStatement		7:1:108:108	5043078	1					
ANR	5043103	ExpressionStatement	"vmprintf ( D_ALWAYS , ""XenType::CreateVirshConfigFile no XML found, generating defaults\\n"" )"	820:2:21605:21693	5043078	0	True				
ANR	5043104	CallExpression	"vmprintf ( D_ALWAYS , ""XenType::CreateVirshConfigFile no XML found, generating defaults\\n"" )"		5043078	0					
ANR	5043105	Callee	vmprintf		5043078	0					
ANR	5043106	Identifier	vmprintf		5043078	0					
ANR	5043107	ArgumentList	D_ALWAYS		5043078	1					
ANR	5043108	Argument	D_ALWAYS		5043078	0					
ANR	5043109	Identifier	D_ALWAYS		5043078	0					
ANR	5043110	Argument	"""XenType::CreateVirshConfigFile no XML found, generating defaults\\n"""		5043078	1					
ANR	5043111	PrimaryExpression	"""XenType::CreateVirshConfigFile no XML found, generating defaults\\n"""		5043078	0					
ANR	5043112	ExpressionStatement	"m_xml += ""<domain type='xen'>"""	822:2:21698:21728	5043078	1	True				
ANR	5043113	AssignmentExpression	"m_xml += ""<domain type='xen'>"""		5043078	0		+=			
ANR	5043114	Identifier	m_xml		5043078	0					
ANR	5043115	PrimaryExpression	"""<domain type='xen'>"""		5043078	1					
ANR	5043116	ExpressionStatement	"m_xml += ""<name>"""	823:2:21732:21749	5043078	2	True				
ANR	5043117	AssignmentExpression	"m_xml += ""<name>"""		5043078	0		+=			
ANR	5043118	Identifier	m_xml		5043078	0					
ANR	5043119	PrimaryExpression	"""<name>"""		5043078	1					
ANR	5043120	ExpressionStatement	m_xml += m_vm_name	824:2:21753:21771	5043078	3	True				
ANR	5043121	AssignmentExpression	m_xml += m_vm_name		5043078	0		+=			
ANR	5043122	Identifier	m_xml		5043078	0					
ANR	5043123	Identifier	m_vm_name		5043078	1					
ANR	5043124	ExpressionStatement	"m_xml += ""</name>"""	825:2:21775:21793	5043078	4	True				
ANR	5043125	AssignmentExpression	"m_xml += ""</name>"""		5043078	0		+=			
ANR	5043126	Identifier	m_xml		5043078	0					
ANR	5043127	PrimaryExpression	"""</name>"""		5043078	1					
ANR	5043128	ExpressionStatement	"m_xml += ""<memory>"""	826:2:21797:21816	5043078	5	True				
ANR	5043129	AssignmentExpression	"m_xml += ""<memory>"""		5043078	0		+=			
ANR	5043130	Identifier	m_xml		5043078	0					
ANR	5043131	PrimaryExpression	"""<memory>"""		5043078	1					
ANR	5043132	ExpressionStatement	m_xml += m_vm_mem * 1024	827:2:21820:21844	5043078	6	True				
ANR	5043133	AssignmentExpression	m_xml += m_vm_mem * 1024		5043078	0		+=			
ANR	5043134	Identifier	m_xml		5043078	0					
ANR	5043135	MultiplicativeExpression	m_vm_mem * 1024		5043078	1		*			
ANR	5043136	Identifier	m_vm_mem		5043078	0					
ANR	5043137	PrimaryExpression	1024		5043078	1					
ANR	5043138	ExpressionStatement	"m_xml += ""</memory>"""	828:2:21848:21868	5043078	7	True				
ANR	5043139	AssignmentExpression	"m_xml += ""</memory>"""		5043078	0		+=			
ANR	5043140	Identifier	m_xml		5043078	0					
ANR	5043141	PrimaryExpression	"""</memory>"""		5043078	1					
ANR	5043142	ExpressionStatement	"m_xml += ""<vcpu>"""	829:2:21872:21889	5043078	8	True				
ANR	5043143	AssignmentExpression	"m_xml += ""<vcpu>"""		5043078	0		+=			
ANR	5043144	Identifier	m_xml		5043078	0					
ANR	5043145	PrimaryExpression	"""<vcpu>"""		5043078	1					
ANR	5043146	ExpressionStatement	m_xml += m_vcpus	830:2:21893:21909	5043078	9	True				
ANR	5043147	AssignmentExpression	m_xml += m_vcpus		5043078	0		+=			
ANR	5043148	Identifier	m_xml		5043078	0					
ANR	5043149	Identifier	m_vcpus		5043078	1					
ANR	5043150	ExpressionStatement	"m_xml += ""</vcpu>"""	831:2:21913:21931	5043078	10	True				
ANR	5043151	AssignmentExpression	"m_xml += ""</vcpu>"""		5043078	0		+=			
ANR	5043152	Identifier	m_xml		5043078	0					
ANR	5043153	PrimaryExpression	"""</vcpu>"""		5043078	1					
ANR	5043154	ExpressionStatement	"m_xml += ""<os><type>linux</type>"""	832:2:21935:21968	5043078	11	True				
ANR	5043155	AssignmentExpression	"m_xml += ""<os><type>linux</type>"""		5043078	0		+=			
ANR	5043156	Identifier	m_xml		5043078	0					
ANR	5043157	PrimaryExpression	"""<os><type>linux</type>"""		5043078	1					
ANR	5043158	IfStatement	if ( m_xen_kernel_file . IsEmpty ( ) == false )		5043078	12					
ANR	5043159	Condition	m_xen_kernel_file . IsEmpty ( ) == false	834:6:21977:22012	5043078	0	True				
ANR	5043160	EqualityExpression	m_xen_kernel_file . IsEmpty ( ) == false		5043078	0		==			
ANR	5043161	CallExpression	m_xen_kernel_file . IsEmpty ( )		5043078	0					
ANR	5043162	Callee	m_xen_kernel_file . IsEmpty		5043078	0					
ANR	5043163	MemberAccess	m_xen_kernel_file . IsEmpty		5043078	0					
ANR	5043164	Identifier	m_xen_kernel_file		5043078	0					
ANR	5043165	Identifier	IsEmpty		5043078	1					
ANR	5043166	ArgumentList			5043078	1					
ANR	5043167	Identifier	false		5043078	1					
ANR	5043168	CompoundStatement		22:45:523:523	5043078	1					
ANR	5043169	ExpressionStatement	"m_xml += ""<kernel>"""	835:3:22021:22040	5043078	0	True				
ANR	5043170	AssignmentExpression	"m_xml += ""<kernel>"""		5043078	0		+=			
ANR	5043171	Identifier	m_xml		5043078	0					
ANR	5043172	PrimaryExpression	"""<kernel>"""		5043078	1					
ANR	5043173	ExpressionStatement	m_xml += m_xen_kernel_file	836:3:22045:22071	5043078	1	True				
ANR	5043174	AssignmentExpression	m_xml += m_xen_kernel_file		5043078	0		+=			
ANR	5043175	Identifier	m_xml		5043078	0					
ANR	5043176	Identifier	m_xen_kernel_file		5043078	1					
ANR	5043177	ExpressionStatement	"m_xml += ""</kernel>"""	837:3:22076:22096	5043078	2	True				
ANR	5043178	AssignmentExpression	"m_xml += ""</kernel>"""		5043078	0		+=			
ANR	5043179	Identifier	m_xml		5043078	0					
ANR	5043180	PrimaryExpression	"""</kernel>"""		5043078	1					
ANR	5043181	IfStatement	if ( m_xen_initrd_file . IsEmpty ( ) == false )		5043078	3					
ANR	5043182	Condition	m_xen_initrd_file . IsEmpty ( ) == false	838:7:22105:22140	5043078	0	True				
ANR	5043183	EqualityExpression	m_xen_initrd_file . IsEmpty ( ) == false		5043078	0		==			
ANR	5043184	CallExpression	m_xen_initrd_file . IsEmpty ( )		5043078	0					
ANR	5043185	Callee	m_xen_initrd_file . IsEmpty		5043078	0					
ANR	5043186	MemberAccess	m_xen_initrd_file . IsEmpty		5043078	0					
ANR	5043187	Identifier	m_xen_initrd_file		5043078	0					
ANR	5043188	Identifier	IsEmpty		5043078	1					
ANR	5043189	ArgumentList			5043078	1					
ANR	5043190	Identifier	false		5043078	1					
ANR	5043191	CompoundStatement		26:46:651:651	5043078	1					
ANR	5043192	ExpressionStatement	"m_xml += ""<initrd>"""	839:4:22150:22169	5043078	0	True				
ANR	5043193	AssignmentExpression	"m_xml += ""<initrd>"""		5043078	0		+=			
ANR	5043194	Identifier	m_xml		5043078	0					
ANR	5043195	PrimaryExpression	"""<initrd>"""		5043078	1					
ANR	5043196	ExpressionStatement	m_xml += m_xen_initrd_file	840:4:22175:22201	5043078	1	True				
ANR	5043197	AssignmentExpression	m_xml += m_xen_initrd_file		5043078	0		+=			
ANR	5043198	Identifier	m_xml		5043078	0					
ANR	5043199	Identifier	m_xen_initrd_file		5043078	1					
ANR	5043200	ExpressionStatement	"m_xml += ""</initrd>"""	841:4:22207:22227	5043078	2	True				
ANR	5043201	AssignmentExpression	"m_xml += ""</initrd>"""		5043078	0		+=			
ANR	5043202	Identifier	m_xml		5043078	0					
ANR	5043203	PrimaryExpression	"""</initrd>"""		5043078	1					
ANR	5043204	IfStatement	if ( m_xen_root . IsEmpty ( ) == false )		5043078	4					
ANR	5043205	Condition	m_xen_root . IsEmpty ( ) == false	843:7:22241:22269	5043078	0	True				
ANR	5043206	EqualityExpression	m_xen_root . IsEmpty ( ) == false		5043078	0		==			
ANR	5043207	CallExpression	m_xen_root . IsEmpty ( )		5043078	0					
ANR	5043208	Callee	m_xen_root . IsEmpty		5043078	0					
ANR	5043209	MemberAccess	m_xen_root . IsEmpty		5043078	0					
ANR	5043210	Identifier	m_xen_root		5043078	0					
ANR	5043211	Identifier	IsEmpty		5043078	1					
ANR	5043212	ArgumentList			5043078	1					
ANR	5043213	Identifier	false		5043078	1					
ANR	5043214	CompoundStatement		31:39:780:780	5043078	1					
ANR	5043215	ExpressionStatement	"m_xml += ""<root>"""	844:4:22279:22296	5043078	0	True				
ANR	5043216	AssignmentExpression	"m_xml += ""<root>"""		5043078	0		+=			
ANR	5043217	Identifier	m_xml		5043078	0					
ANR	5043218	PrimaryExpression	"""<root>"""		5043078	1					
ANR	5043219	ExpressionStatement	m_xml += m_xen_root	845:4:22302:22321	5043078	1	True				
ANR	5043220	AssignmentExpression	m_xml += m_xen_root		5043078	0		+=			
ANR	5043221	Identifier	m_xml		5043078	0					
ANR	5043222	Identifier	m_xen_root		5043078	1					
ANR	5043223	ExpressionStatement	"m_xml += ""</root>"""	846:4:22327:22345	5043078	2	True				
ANR	5043224	AssignmentExpression	"m_xml += ""</root>"""		5043078	0		+=			
ANR	5043225	Identifier	m_xml		5043078	0					
ANR	5043226	PrimaryExpression	"""</root>"""		5043078	1					
ANR	5043227	IfStatement	if ( m_xen_kernel_params . IsEmpty ( ) == false )		5043078	5					
ANR	5043228	Condition	m_xen_kernel_params . IsEmpty ( ) == false	849:7:22360:22397	5043078	0	True				
ANR	5043229	EqualityExpression	m_xen_kernel_params . IsEmpty ( ) == false		5043078	0		==			
ANR	5043230	CallExpression	m_xen_kernel_params . IsEmpty ( )		5043078	0					
ANR	5043231	Callee	m_xen_kernel_params . IsEmpty		5043078	0					
ANR	5043232	MemberAccess	m_xen_kernel_params . IsEmpty		5043078	0					
ANR	5043233	Identifier	m_xen_kernel_params		5043078	0					
ANR	5043234	Identifier	IsEmpty		5043078	1					
ANR	5043235	ArgumentList			5043078	1					
ANR	5043236	Identifier	false		5043078	1					
ANR	5043237	CompoundStatement		37:48:908:908	5043078	1					
ANR	5043238	ExpressionStatement	"m_xml += ""<cmdline>"""	850:4:22407:22427	5043078	0	True				
ANR	5043239	AssignmentExpression	"m_xml += ""<cmdline>"""		5043078	0		+=			
ANR	5043240	Identifier	m_xml		5043078	0					
ANR	5043241	PrimaryExpression	"""<cmdline>"""		5043078	1					
ANR	5043242	ExpressionStatement	m_xml += m_xen_kernel_params	851:4:22433:22461	5043078	1	True				
ANR	5043243	AssignmentExpression	m_xml += m_xen_kernel_params		5043078	0		+=			
ANR	5043244	Identifier	m_xml		5043078	0					
ANR	5043245	Identifier	m_xen_kernel_params		5043078	1					
ANR	5043246	ExpressionStatement	"m_xml += ""</cmdline>"""	852:4:22467:22488	5043078	2	True				
ANR	5043247	AssignmentExpression	"m_xml += ""</cmdline>"""		5043078	0		+=			
ANR	5043248	Identifier	m_xml		5043078	0					
ANR	5043249	PrimaryExpression	"""</cmdline>"""		5043078	1					
ANR	5043250	ExpressionStatement	"m_xml += ""</os>"""	856:2:22502:22518	5043078	13	True				
ANR	5043251	AssignmentExpression	"m_xml += ""</os>"""		5043078	0		+=			
ANR	5043252	Identifier	m_xml		5043078	0					
ANR	5043253	PrimaryExpression	"""</os>"""		5043078	1					
ANR	5043254	IfStatement	"if ( strcasecmp ( m_xen_kernel_submit_param . Value ( ) , XEN_KERNEL_INCLUDED ) == 0 )"		5043078	14					
ANR	5043255	Condition	"strcasecmp ( m_xen_kernel_submit_param . Value ( ) , XEN_KERNEL_INCLUDED ) == 0"	857:6:22526:22596	5043078	0	True				
ANR	5043256	EqualityExpression	"strcasecmp ( m_xen_kernel_submit_param . Value ( ) , XEN_KERNEL_INCLUDED ) == 0"		5043078	0		==			
ANR	5043257	CallExpression	"strcasecmp ( m_xen_kernel_submit_param . Value ( ) , XEN_KERNEL_INCLUDED )"		5043078	0					
ANR	5043258	Callee	strcasecmp		5043078	0					
ANR	5043259	Identifier	strcasecmp		5043078	0					
ANR	5043260	ArgumentList	m_xen_kernel_submit_param . Value ( )		5043078	1					
ANR	5043261	Argument	m_xen_kernel_submit_param . Value ( )		5043078	0					
ANR	5043262	CallExpression	m_xen_kernel_submit_param . Value ( )		5043078	0					
ANR	5043263	Callee	m_xen_kernel_submit_param . Value		5043078	0					
ANR	5043264	MemberAccess	m_xen_kernel_submit_param . Value		5043078	0					
ANR	5043265	Identifier	m_xen_kernel_submit_param		5043078	0					
ANR	5043266	Identifier	Value		5043078	1					
ANR	5043267	ArgumentList			5043078	1					
ANR	5043268	Argument	XEN_KERNEL_INCLUDED		5043078	1					
ANR	5043269	Identifier	XEN_KERNEL_INCLUDED		5043078	0					
ANR	5043270	PrimaryExpression	0		5043078	1					
ANR	5043271	CompoundStatement		45:79:1106:1106	5043078	1					
ANR	5043272	ExpressionStatement	"m_xml += ""<bootloader>"""	858:3:22604:22627	5043078	0	True				
ANR	5043273	AssignmentExpression	"m_xml += ""<bootloader>"""		5043078	0		+=			
ANR	5043274	Identifier	m_xml		5043078	0					
ANR	5043275	PrimaryExpression	"""<bootloader>"""		5043078	1					
ANR	5043276	ExpressionStatement	m_xml += m_xen_bootloader	859:3:22632:22657	5043078	1	True				
ANR	5043277	AssignmentExpression	m_xml += m_xen_bootloader		5043078	0		+=			
ANR	5043278	Identifier	m_xml		5043078	0					
ANR	5043279	Identifier	m_xen_bootloader		5043078	1					
ANR	5043280	ExpressionStatement	"m_xml += ""</bootloader>"""	860:3:22662:22686	5043078	2	True				
ANR	5043281	AssignmentExpression	"m_xml += ""</bootloader>"""		5043078	0		+=			
ANR	5043282	Identifier	m_xml		5043078	0					
ANR	5043283	PrimaryExpression	"""</bootloader>"""		5043078	1					
ANR	5043284	ExpressionStatement	"m_xml += ""<devices>"""	862:2:22694:22714	5043078	15	True				
ANR	5043285	AssignmentExpression	"m_xml += ""<devices>"""		5043078	0		+=			
ANR	5043286	Identifier	m_xml		5043078	0					
ANR	5043287	PrimaryExpression	"""<devices>"""		5043078	1					
ANR	5043288	ExpressionStatement	"m_xml += ""<console type='pty'><source path='/dev/ptmx'/></console>"""	863:2:22718:22785	5043078	16	True				
ANR	5043289	AssignmentExpression	"m_xml += ""<console type='pty'><source path='/dev/ptmx'/></console>"""		5043078	0		+=			
ANR	5043290	Identifier	m_xml		5043078	0					
ANR	5043291	PrimaryExpression	"""<console type='pty'><source path='/dev/ptmx'/></console>"""		5043078	1					
ANR	5043292	IfStatement	if ( m_vm_networking )		5043078	17					
ANR	5043293	Condition	m_vm_networking	864:6:22793:22807	5043078	0	True				
ANR	5043294	Identifier	m_vm_networking		5043078	0					
ANR	5043295	CompoundStatement		52:24:1318:1318	5043078	1					
ANR	5043296	IfStatement	"if ( m_vm_networking_type . find ( ""nat"" ) >= 0 )"		5043078	0					
ANR	5043297	Condition	"m_vm_networking_type . find ( ""nat"" ) >= 0"	865:7:22820:22856	5043078	0	True				
ANR	5043298	RelationalExpression	"m_vm_networking_type . find ( ""nat"" ) >= 0"		5043078	0		>=			
ANR	5043299	CallExpression	"m_vm_networking_type . find ( ""nat"" )"		5043078	0					
ANR	5043300	Callee	m_vm_networking_type . find		5043078	0					
ANR	5043301	MemberAccess	m_vm_networking_type . find		5043078	0					
ANR	5043302	Identifier	m_vm_networking_type		5043078	0					
ANR	5043303	Identifier	find		5043078	1					
ANR	5043304	ArgumentList	"""nat"""		5043078	1					
ANR	5043305	Argument	"""nat"""		5043078	0					
ANR	5043306	PrimaryExpression	"""nat"""		5043078	0					
ANR	5043307	PrimaryExpression	0		5043078	1					
ANR	5043308	CompoundStatement		53:47:1367:1367	5043078	1					
ANR	5043309	ExpressionStatement	"m_xml += ""<interface type='network'><source network='default'/></interface>"""	866:4:22866:22942	5043078	0	True				
ANR	5043310	AssignmentExpression	"m_xml += ""<interface type='network'><source network='default'/></interface>"""		5043078	0		+=			
ANR	5043311	Identifier	m_xml		5043078	0					
ANR	5043312	PrimaryExpression	"""<interface type='network'><source network='default'/></interface>"""		5043078	1					
ANR	5043313	ElseStatement	else		5043078	0					
ANR	5043314	IfStatement	"if ( m_vm_networking_type . find ( ""bridge"" ) >= 0 )"		5043078	0					
ANR	5043315	Condition	"m_vm_networking_type . find ( ""bridge"" ) >= 0"	867:14:22958:22997	5043078	0	True				
ANR	5043316	RelationalExpression	"m_vm_networking_type . find ( ""bridge"" ) >= 0"		5043078	0		>=			
ANR	5043317	CallExpression	"m_vm_networking_type . find ( ""bridge"" )"		5043078	0					
ANR	5043318	Callee	m_vm_networking_type . find		5043078	0					
ANR	5043319	MemberAccess	m_vm_networking_type . find		5043078	0					
ANR	5043320	Identifier	m_vm_networking_type		5043078	0					
ANR	5043321	Identifier	find		5043078	1					
ANR	5043322	ArgumentList	"""bridge"""		5043078	1					
ANR	5043323	Argument	"""bridge"""		5043078	0					
ANR	5043324	PrimaryExpression	"""bridge"""		5043078	0					
ANR	5043325	PrimaryExpression	0		5043078	1					
ANR	5043326	CompoundStatement		55:56:1507:1507	5043078	1					
ANR	5043327	ExpressionStatement	"m_xml += ""<interface type='bridge'>"""	868:4:23006:23042	5043078	0	True				
ANR	5043328	AssignmentExpression	"m_xml += ""<interface type='bridge'>"""		5043078	0		+=			
ANR	5043329	Identifier	m_xml		5043078	0					
ANR	5043330	PrimaryExpression	"""<interface type='bridge'>"""		5043078	1					
ANR	5043331	IfStatement	if ( ! m_vm_bridge_interface . empty ( ) )		5043078	1					
ANR	5043332	Condition	! m_vm_bridge_interface . empty ( )	869:8:23052:23081	5043078	0	True				
ANR	5043333	UnaryOperationExpression	! m_vm_bridge_interface . empty ( )		5043078	0					
ANR	5043334	UnaryOperator	!		5043078	0					
ANR	5043335	CallExpression	m_vm_bridge_interface . empty ( )		5043078	1					
ANR	5043336	Callee	m_vm_bridge_interface . empty		5043078	0					
ANR	5043337	MemberAccess	m_vm_bridge_interface . empty		5043078	0					
ANR	5043338	Identifier	m_vm_bridge_interface		5043078	0					
ANR	5043339	Identifier	empty		5043078	1					
ANR	5043340	ArgumentList			5043078	1					
ANR	5043341	CompoundStatement		57:40:1591:1591	5043078	1					
ANR	5043342	ExpressionStatement	"m_xml += ""<source bridge='"""	870:5:23091:23118	5043078	0	True				
ANR	5043343	AssignmentExpression	"m_xml += ""<source bridge='"""		5043078	0		+=			
ANR	5043344	Identifier	m_xml		5043078	0					
ANR	5043345	PrimaryExpression	"""<source bridge='"""		5043078	1					
ANR	5043346	ExpressionStatement	m_xml += m_vm_bridge_interface . c_str ( )	871:5:23125:23163	5043078	1	True				
ANR	5043347	AssignmentExpression	m_xml += m_vm_bridge_interface . c_str ( )		5043078	0		+=			
ANR	5043348	Identifier	m_xml		5043078	0					
ANR	5043349	CallExpression	m_vm_bridge_interface . c_str ( )		5043078	1					
ANR	5043350	Callee	m_vm_bridge_interface . c_str		5043078	0					
ANR	5043351	MemberAccess	m_vm_bridge_interface . c_str		5043078	0					
ANR	5043352	Identifier	m_vm_bridge_interface		5043078	0					
ANR	5043353	Identifier	c_str		5043078	1					
ANR	5043354	ArgumentList			5043078	1					
ANR	5043355	ExpressionStatement	"m_xml += ""'/>"""	872:5:23170:23184	5043078	2	True				
ANR	5043356	AssignmentExpression	"m_xml += ""'/>"""		5043078	0		+=			
ANR	5043357	Identifier	m_xml		5043078	0					
ANR	5043358	PrimaryExpression	"""'/>"""		5043078	1					
ANR	5043359	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""mac address is %s"" , m_vm_job_mac . Value ( ) )"	874:4:23196:23260	5043078	2	True				
ANR	5043360	CallExpression	"vmprintf ( D_FULLDEBUG , ""mac address is %s"" , m_vm_job_mac . Value ( ) )"		5043078	0					
ANR	5043361	Callee	vmprintf		5043078	0					
ANR	5043362	Identifier	vmprintf		5043078	0					
ANR	5043363	ArgumentList	D_FULLDEBUG		5043078	1					
ANR	5043364	Argument	D_FULLDEBUG		5043078	0					
ANR	5043365	Identifier	D_FULLDEBUG		5043078	0					
ANR	5043366	Argument	"""mac address is %s"""		5043078	1					
ANR	5043367	PrimaryExpression	"""mac address is %s"""		5043078	0					
ANR	5043368	Argument	m_vm_job_mac . Value ( )		5043078	2					
ANR	5043369	CallExpression	m_vm_job_mac . Value ( )		5043078	0					
ANR	5043370	Callee	m_vm_job_mac . Value		5043078	0					
ANR	5043371	MemberAccess	m_vm_job_mac . Value		5043078	0					
ANR	5043372	Identifier	m_vm_job_mac		5043078	0					
ANR	5043373	Identifier	Value		5043078	1					
ANR	5043374	ArgumentList			5043078	1					
ANR	5043375	IfStatement	if ( ! m_vm_job_mac . IsEmpty ( ) )		5043078	3					
ANR	5043376	Condition	! m_vm_job_mac . IsEmpty ( )	875:7:23269:23291	5043078	0	True				
ANR	5043377	UnaryOperationExpression	! m_vm_job_mac . IsEmpty ( )		5043078	0					
ANR	5043378	UnaryOperator	!		5043078	0					
ANR	5043379	CallExpression	m_vm_job_mac . IsEmpty ( )		5043078	1					
ANR	5043380	Callee	m_vm_job_mac . IsEmpty		5043078	0					
ANR	5043381	MemberAccess	m_vm_job_mac . IsEmpty		5043078	0					
ANR	5043382	Identifier	m_vm_job_mac		5043078	0					
ANR	5043383	Identifier	IsEmpty		5043078	1					
ANR	5043384	ArgumentList			5043078	1					
ANR	5043385	CompoundStatement		64:4:1805:1805	5043078	1					
ANR	5043386	ExpressionStatement	"m_xml += ""<mac address='"""	877:5:23305:23330	5043078	0	True				
ANR	5043387	AssignmentExpression	"m_xml += ""<mac address='"""		5043078	0		+=			
ANR	5043388	Identifier	m_xml		5043078	0					
ANR	5043389	PrimaryExpression	"""<mac address='"""		5043078	1					
ANR	5043390	ExpressionStatement	m_xml += m_vm_job_mac	878:5:23337:23358	5043078	1	True				
ANR	5043391	AssignmentExpression	m_xml += m_vm_job_mac		5043078	0		+=			
ANR	5043392	Identifier	m_xml		5043078	0					
ANR	5043393	Identifier	m_vm_job_mac		5043078	1					
ANR	5043394	ExpressionStatement	"m_xml += ""'/>"""	879:5:23365:23379	5043078	2	True				
ANR	5043395	AssignmentExpression	"m_xml += ""'/>"""		5043078	0		+=			
ANR	5043396	Identifier	m_xml		5043078	0					
ANR	5043397	PrimaryExpression	"""'/>"""		5043078	1					
ANR	5043398	ExpressionStatement	"m_xml += ""</interface>"""	881:4:23391:23414	5043078	4	True				
ANR	5043399	AssignmentExpression	"m_xml += ""</interface>"""		5043078	0		+=			
ANR	5043400	Identifier	m_xml		5043078	0					
ANR	5043401	PrimaryExpression	"""</interface>"""		5043078	1					
ANR	5043402	ExpressionStatement	disk_string = makeVirshDiskString ( )	886:2:23476:23511	5043078	18	True				
ANR	5043403	AssignmentExpression	disk_string = makeVirshDiskString ( )		5043078	0		=			
ANR	5043404	Identifier	disk_string		5043078	0					
ANR	5043405	CallExpression	makeVirshDiskString ( )		5043078	1					
ANR	5043406	Callee	makeVirshDiskString		5043078	0					
ANR	5043407	Identifier	makeVirshDiskString		5043078	0					
ANR	5043408	ArgumentList			5043078	1					
ANR	5043409	ExpressionStatement	m_xml += disk_string	887:2:23515:23535	5043078	19	True				
ANR	5043410	AssignmentExpression	m_xml += disk_string		5043078	0		+=			
ANR	5043411	Identifier	m_xml		5043078	0					
ANR	5043412	Identifier	disk_string		5043078	1					
ANR	5043413	ExpressionStatement	"m_xml += ""</devices></domain>"""	888:2:23539:23569	5043078	20	True				
ANR	5043414	AssignmentExpression	"m_xml += ""</devices></domain>"""		5043078	0		+=			
ANR	5043415	Identifier	m_xml		5043078	0					
ANR	5043416	PrimaryExpression	"""</devices></domain>"""		5043078	1					
ANR	5043417	ReturnStatement	return true ;	891:1:23576:23587	5043078	3	True				
ANR	5043418	Identifier	true		5043078	0					
ANR	5043419	ReturnType	bool		5043078	1					
ANR	5043420	Identifier	XenType :: CreateVirshConfigFile		5043078	2					
ANR	5043421	ParameterList	const char * filename		5043078	3					
ANR	5043422	Parameter	const char * filename	812:31:21470:21489	5043078	0	True				
ANR	5043423	ParameterType	const char *		5043078	0					
ANR	5043424	Identifier	filename		5043078	1					
ANR	5043425	CFGEntryNode	ENTRY		5043078		True				
ANR	5043426	CFGExitNode	EXIT		5043078		True				
ANR	5043427	Symbol	m_vm_name		5043078						
ANR	5043428	Symbol	m_xen_root . IsEmpty		5043078						
ANR	5043429	Symbol	m_xen_bootloader		5043078						
ANR	5043430	Symbol	m_vm_bridge_interface		5043078						
ANR	5043431	Symbol	m_vm_job_mac . IsEmpty		5043078						
ANR	5043432	Symbol	m_xen_kernel_submit_param		5043078						
ANR	5043433	Symbol	m_vm_mem		5043078						
ANR	5043434	Symbol	m_vm_networking_type . find		5043078						
ANR	5043435	Symbol	m_vm_job_mac		5043078						
ANR	5043436	Symbol	m_xen_initrd_file . IsEmpty		5043078						
ANR	5043437	Symbol	XEN_KERNEL_INCLUDED		5043078						
ANR	5043438	Symbol	m_xen_kernel_submit_param . Value		5043078						
ANR	5043439	Symbol	m_xen_kernel_file		5043078						
ANR	5043440	Symbol	m_xen_kernel_params		5043078						
ANR	5043441	Symbol	strcasecmp		5043078						
ANR	5043442	Symbol	makeVirshDiskString		5043078						
ANR	5043443	Symbol	m_xen_root		5043078						
ANR	5043444	Symbol	m_vm_bridge_interface . c_str		5043078						
ANR	5043445	Symbol	disk_string		5043078						
ANR	5043446	Symbol	m_xen_kernel_file . IsEmpty		5043078						
ANR	5043447	Symbol	false		5043078						
ANR	5043448	Symbol	D_ALWAYS		5043078						
ANR	5043449	Symbol	m_xml		5043078						
ANR	5043450	Symbol	m_vm_networking_type		5043078						
ANR	5043451	Symbol	VirshType :: CreateVirshConfigFile		5043078						
ANR	5043452	Symbol	D_FULLDEBUG		5043078						
ANR	5043453	Symbol	filename		5043078						
ANR	5043454	Symbol	m_vm_bridge_interface . empty		5043078						
ANR	5043455	Symbol	m_vm_job_mac . Value		5043078						
ANR	5043456	Symbol	m_xen_kernel_params . IsEmpty		5043078						
ANR	5043457	Symbol	m_vm_networking		5043078						
ANR	5043458	Symbol	true		5043078						
ANR	5043459	Symbol	m_xen_initrd_file		5043078						
ANR	5043460	Symbol	m_vcpus		5043078						
ANR	5043461	Function	VirshType :: CreateXenVMConfigFile	894:0:23592:23741							
ANR	5043462	FunctionDef	VirshType :: CreateXenVMConfigFile (const char * filename)		5043461	0					
ANR	5043463	CompoundStatement		896:0:23652:23741	5043461	0					
ANR	5043464	IfStatement	if ( ! filename )		5043461	0					
ANR	5043465	Condition	! filename	897:5:23659:23667	5043461	0	True				
ANR	5043466	UnaryOperationExpression	! filename		5043461	0					
ANR	5043467	UnaryOperator	!		5043461	0					
ANR	5043468	Identifier	filename		5043461	1					
ANR	5043469	CompoundStatement		2:17:18:18	5043461	1					
ANR	5043470	ReturnStatement	return false ;	898:2:23675:23687	5043461	0	True				
ANR	5043471	Identifier	false		5043461	0					
ANR	5043472	ReturnStatement	return CreateVirshConfigFile ( filename ) ;	901:8:23701:23739	5043461	1	True				
ANR	5043473	CallExpression	CreateVirshConfigFile ( filename )		5043461	0					
ANR	5043474	Callee	CreateVirshConfigFile		5043461	0					
ANR	5043475	Identifier	CreateVirshConfigFile		5043461	0					
ANR	5043476	ArgumentList	filename		5043461	1					
ANR	5043477	Argument	filename		5043461	0					
ANR	5043478	Identifier	filename		5043461	0					
ANR	5043479	ReturnType	bool		5043461	1					
ANR	5043480	Identifier	VirshType :: CreateXenVMConfigFile		5043461	2					
ANR	5043481	ParameterList	const char * filename		5043461	3					
ANR	5043482	Parameter	const char * filename	895:33:23630:23649	5043461	0	True				
ANR	5043483	ParameterType	const char *		5043461	0					
ANR	5043484	Identifier	filename		5043461	1					
ANR	5043485	CFGEntryNode	ENTRY		5043461		True				
ANR	5043486	CFGExitNode	EXIT		5043461		True				
ANR	5043487	Symbol	filename		5043461						
ANR	5043488	Symbol	CreateVirshConfigFile		5043461						
ANR	5043489	Symbol	false		5043461						
ANR	5043490	Function	VirshType :: Connect	904:0:23744:24159							
ANR	5043491	FunctionDef	VirshType :: Connect ()		5043490	0					
ANR	5043492	CompoundStatement		905:0:23770:24159	5043490	0					
ANR	5043493	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	906:1:23773:23806	5043490	0	True				
ANR	5043494	IdentifierDecl	priv = set_root_priv ( )		5043490	0					
ANR	5043495	IdentifierDeclType	priv_state		5043490	0					
ANR	5043496	Identifier	priv		5043490	1					
ANR	5043497	AssignmentExpression	priv = set_root_priv ( )		5043490	2		=			
ANR	5043498	Identifier	priv		5043490	0					
ANR	5043499	CallExpression	set_root_priv ( )		5043490	1					
ANR	5043500	Callee	set_root_priv		5043490	0					
ANR	5043501	Identifier	set_root_priv		5043490	0					
ANR	5043502	ArgumentList			5043490	1					
ANR	5043503	IfStatement	if ( m_libvirt_connection )		5043490	1					
ANR	5043504	Condition	m_libvirt_connection	908:6:23815:23834	5043490	0	True				
ANR	5043505	Identifier	m_libvirt_connection		5043490	0					
ANR	5043506	CompoundStatement		5:1:68:68	5043490	1					
ANR	5043507	ExpressionStatement	virConnectClose ( m_libvirt_connection )	910:2:23843:23882	5043490	0	True				
ANR	5043508	CallExpression	virConnectClose ( m_libvirt_connection )		5043490	0					
ANR	5043509	Callee	virConnectClose		5043490	0					
ANR	5043510	Identifier	virConnectClose		5043490	0					
ANR	5043511	ArgumentList	m_libvirt_connection		5043490	1					
ANR	5043512	Argument	m_libvirt_connection		5043490	0					
ANR	5043513	Identifier	m_libvirt_connection		5043490	0					
ANR	5043514	ExpressionStatement	m_libvirt_connection = virConnectOpen ( m_sessionID . c_str ( ) )	913:4:23892:23952	5043490	2	True				
ANR	5043515	AssignmentExpression	m_libvirt_connection = virConnectOpen ( m_sessionID . c_str ( ) )		5043490	0		=			
ANR	5043516	Identifier	m_libvirt_connection		5043490	0					
ANR	5043517	CallExpression	virConnectOpen ( m_sessionID . c_str ( ) )		5043490	1					
ANR	5043518	Callee	virConnectOpen		5043490	0					
ANR	5043519	Identifier	virConnectOpen		5043490	0					
ANR	5043520	ArgumentList	m_sessionID . c_str ( )		5043490	1					
ANR	5043521	Argument	m_sessionID . c_str ( )		5043490	0					
ANR	5043522	CallExpression	m_sessionID . c_str ( )		5043490	0					
ANR	5043523	Callee	m_sessionID . c_str		5043490	0					
ANR	5043524	MemberAccess	m_sessionID . c_str		5043490	0					
ANR	5043525	Identifier	m_sessionID		5043490	0					
ANR	5043526	Identifier	c_str		5043490	1					
ANR	5043527	ArgumentList			5043490	1					
ANR	5043528	ExpressionStatement	set_priv ( priv )	914:4:23958:23972	5043490	3	True				
ANR	5043529	CallExpression	set_priv ( priv )		5043490	0					
ANR	5043530	Callee	set_priv		5043490	0					
ANR	5043531	Identifier	set_priv		5043490	0					
ANR	5043532	ArgumentList	priv		5043490	1					
ANR	5043533	Argument	priv		5043490	0					
ANR	5043534	Identifier	priv		5043490	0					
ANR	5043535	IfStatement	if ( m_libvirt_connection == NULL )		5043490	4					
ANR	5043536	Condition	m_libvirt_connection == NULL	916:7:23982:24009	5043490	0	True				
ANR	5043537	EqualityExpression	m_libvirt_connection == NULL		5043490	0		==			
ANR	5043538	Identifier	m_libvirt_connection		5043490	0					
ANR	5043539	Identifier	NULL		5043490	1					
ANR	5043540	CompoundStatement		14:2:250:285	5043490	1					
ANR	5043541	IdentifierDeclStatement	virErrorPtr err = virGetLastError ( ) ;	918:2:24021:24056	5043490	0	True				
ANR	5043542	IdentifierDecl	err = virGetLastError ( )		5043490	0					
ANR	5043543	IdentifierDeclType	virErrorPtr		5043490	0					
ANR	5043544	Identifier	err		5043490	1					
ANR	5043545	AssignmentExpression	err = virGetLastError ( )		5043490	2		=			
ANR	5043546	Identifier	err		5043490	0					
ANR	5043547	CallExpression	virGetLastError ( )		5043490	1					
ANR	5043548	Callee	virGetLastError		5043490	0					
ANR	5043549	Identifier	virGetLastError		5043490	0					
ANR	5043550	ArgumentList			5043490	1					
ANR	5043551	ExpressionStatement	"EXCEPT ( ""Failed to create libvirt connection: %s"" , ( err ? err -> message : ""No reason found"" ) )"	919:2:24060:24151	5043490	1	True				
ANR	5043552	CallExpression	"EXCEPT ( ""Failed to create libvirt connection: %s"" , ( err ? err -> message : ""No reason found"" ) )"		5043490	0					
ANR	5043553	Callee	EXCEPT		5043490	0					
ANR	5043554	Identifier	EXCEPT		5043490	0					
ANR	5043555	ArgumentList	"""Failed to create libvirt connection: %s"""		5043490	1					
ANR	5043556	Argument	"""Failed to create libvirt connection: %s"""		5043490	0					
ANR	5043557	PrimaryExpression	"""Failed to create libvirt connection: %s"""		5043490	0					
ANR	5043558	Argument	"err ? err -> message : ""No reason found"""		5043490	1					
ANR	5043559	ConditionalExpression	"err ? err -> message : ""No reason found"""		5043490	0					
ANR	5043560	Condition	err		5043490	0					
ANR	5043561	Identifier	err		5043490	0					
ANR	5043562	PtrMemberAccess	err -> message		5043490	1					
ANR	5043563	Identifier	err		5043490	0					
ANR	5043564	Identifier	message		5043490	1					
ANR	5043565	PrimaryExpression	"""No reason found"""		5043490	2					
ANR	5043566	ReturnType	void		5043490	1					
ANR	5043567	Identifier	VirshType :: Connect		5043490	2					
ANR	5043568	ParameterList			5043490	3					
ANR	5043569	CFGEntryNode	ENTRY		5043490		True				
ANR	5043570	CFGExitNode	EXIT		5043490		True				
ANR	5043571	Symbol	* err		5043490						
ANR	5043572	Symbol	m_sessionID . c_str		5043490						
ANR	5043573	Symbol	m_libvirt_connection		5043490						
ANR	5043574	Symbol	NULL		5043490						
ANR	5043575	Symbol	m_sessionID		5043490						
ANR	5043576	Symbol	err		5043490						
ANR	5043577	Symbol	err -> message		5043490						
ANR	5043578	Symbol	virGetLastError		5043490						
ANR	5043579	Symbol	virConnectOpen		5043490						
ANR	5043580	Symbol	set_root_priv		5043490						
ANR	5043581	Symbol	priv		5043490						
ANR	5043582	Function	VirshType :: parseXenDiskParam	923:0:24162:26984							
ANR	5043583	FunctionDef	VirshType :: parseXenDiskParam (const char * format)		5043582	0					
ANR	5043584	CompoundStatement		925:0:24216:26984	5043582	0					
ANR	5043585	IfStatement	if ( ! format || ( format [ 0 ] == '\\0' ) )		5043582	0					
ANR	5043586	Condition	! format || ( format [ 0 ] == '\\0' )	926:5:24223:24252	5043582	0	True				
ANR	5043587	OrExpression	! format || ( format [ 0 ] == '\\0' )		5043582	0		||			
ANR	5043588	UnaryOperationExpression	! format		5043582	0					
ANR	5043589	UnaryOperator	!		5043582	0					
ANR	5043590	Identifier	format		5043582	1					
ANR	5043591	EqualityExpression	format [ 0 ] == '\\0'		5043582	1		==			
ANR	5043592	ArrayIndexing	format [ 0 ]		5043582	0					
ANR	5043593	Identifier	format		5043582	0					
ANR	5043594	PrimaryExpression	0		5043582	1					
ANR	5043595	PrimaryExpression	'\\0'		5043582	1					
ANR	5043596	CompoundStatement		2:38:39:39	5043582	1					
ANR	5043597	ReturnStatement	return false ;	927:2:24260:24272	5043582	0	True				
ANR	5043598	Identifier	false		5043582	0					
ANR	5043599	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""format = %s\\n"" , format )"	930:4:24282:24328	5043582	1	True				
ANR	5043600	CallExpression	"vmprintf ( D_FULLDEBUG , ""format = %s\\n"" , format )"		5043582	0					
ANR	5043601	Callee	vmprintf		5043582	0					
ANR	5043602	Identifier	vmprintf		5043582	0					
ANR	5043603	ArgumentList	D_FULLDEBUG		5043582	1					
ANR	5043604	Argument	D_FULLDEBUG		5043582	0					
ANR	5043605	Identifier	D_FULLDEBUG		5043582	0					
ANR	5043606	Argument	"""format = %s\\n"""		5043582	1					
ANR	5043607	PrimaryExpression	"""format = %s\\n"""		5043582	0					
ANR	5043608	Argument	format		5043582	2					
ANR	5043609	Identifier	format		5043582	0					
ANR	5043610	IdentifierDeclStatement	StringList working_files ;	932:1:24332:24356	5043582	2	True				
ANR	5043611	IdentifierDecl	working_files		5043582	0					
ANR	5043612	IdentifierDeclType	StringList		5043582	0					
ANR	5043613	Identifier	working_files		5043582	1					
ANR	5043614	ExpressionStatement	"find_all_files_in_dir ( m_workingpath . Value ( ) , working_files , true )"	933:1:24359:24424	5043582	3	True				
ANR	5043615	CallExpression	"find_all_files_in_dir ( m_workingpath . Value ( ) , working_files , true )"		5043582	0					
ANR	5043616	Callee	find_all_files_in_dir		5043582	0					
ANR	5043617	Identifier	find_all_files_in_dir		5043582	0					
ANR	5043618	ArgumentList	m_workingpath . Value ( )		5043582	1					
ANR	5043619	Argument	m_workingpath . Value ( )		5043582	0					
ANR	5043620	CallExpression	m_workingpath . Value ( )		5043582	0					
ANR	5043621	Callee	m_workingpath . Value		5043582	0					
ANR	5043622	MemberAccess	m_workingpath . Value		5043582	0					
ANR	5043623	Identifier	m_workingpath		5043582	0					
ANR	5043624	Identifier	Value		5043582	1					
ANR	5043625	ArgumentList			5043582	1					
ANR	5043626	Argument	working_files		5043582	1					
ANR	5043627	Identifier	working_files		5043582	0					
ANR	5043628	Argument	true		5043582	2					
ANR	5043629	Identifier	true		5043582	0					
ANR	5043630	IdentifierDeclStatement	"StringList disk_files ( format , "","" ) ;"	935:1:24428:24462	5043582	4	True				
ANR	5043631	IdentifierDecl	"disk_files ( format , "","" )"		5043582	0					
ANR	5043632	IdentifierDeclType	StringList		5043582	0					
ANR	5043633	Identifier	disk_files		5043582	1					
ANR	5043634	Expression	"format , "","""		5043582	2					
ANR	5043635	Identifier	format		5043582	0					
ANR	5043636	PrimaryExpression	""","""		5043582	1					
ANR	5043637	IfStatement	if ( disk_files . isEmpty ( ) )		5043582	5					
ANR	5043638	Condition	disk_files . isEmpty ( )	936:5:24469:24488	5043582	0	True				
ANR	5043639	CallExpression	disk_files . isEmpty ( )		5043582	0					
ANR	5043640	Callee	disk_files . isEmpty		5043582	0					
ANR	5043641	MemberAccess	disk_files . isEmpty		5043582	0					
ANR	5043642	Identifier	disk_files		5043582	0					
ANR	5043643	Identifier	isEmpty		5043582	1					
ANR	5043644	ArgumentList			5043582	1					
ANR	5043645	CompoundStatement		12:28:275:275	5043582	1					
ANR	5043646	ReturnStatement	return false ;	937:2:24496:24508	5043582	0	True				
ANR	5043647	Identifier	false		5043582	0					
ANR	5043648	ExpressionStatement	disk_files . rewind ( )	940:1:24515:24534	5043582	6	True				
ANR	5043649	CallExpression	disk_files . rewind ( )		5043582	0					
ANR	5043650	Callee	disk_files . rewind		5043582	0					
ANR	5043651	MemberAccess	disk_files . rewind		5043582	0					
ANR	5043652	Identifier	disk_files		5043582	0					
ANR	5043653	Identifier	rewind		5043582	1					
ANR	5043654	ArgumentList			5043582	1					
ANR	5043655	IdentifierDeclStatement	const char * one_disk = NULL ;	941:1:24537:24564	5043582	7	True				
ANR	5043656	IdentifierDecl	* one_disk = NULL		5043582	0					
ANR	5043657	IdentifierDeclType	const char *		5043582	0					
ANR	5043658	Identifier	one_disk		5043582	1					
ANR	5043659	AssignmentExpression	* one_disk = NULL		5043582	2		=			
ANR	5043660	Identifier	NULL		5043582	0					
ANR	5043661	Identifier	NULL		5043582	1					
ANR	5043662	WhileStatement	while ( ( one_disk = disk_files . next ( ) ) != NULL )		5043582	8					
ANR	5043663	Condition	( one_disk = disk_files . next ( ) ) != NULL	942:8:24574:24612	5043582	0	True				
ANR	5043664	EqualityExpression	( one_disk = disk_files . next ( ) ) != NULL		5043582	0		!=			
ANR	5043665	AssignmentExpression	one_disk = disk_files . next ( )		5043582	0		=			
ANR	5043666	Identifier	one_disk		5043582	0					
ANR	5043667	CallExpression	disk_files . next ( )		5043582	1					
ANR	5043668	Callee	disk_files . next		5043582	0					
ANR	5043669	MemberAccess	disk_files . next		5043582	0					
ANR	5043670	Identifier	disk_files		5043582	0					
ANR	5043671	Identifier	next		5043582	1					
ANR	5043672	ArgumentList			5043582	1					
ANR	5043673	Identifier	NULL		5043582	1					
ANR	5043674	CompoundStatement		67:2:1557:1601	5043582	1					
ANR	5043675	IdentifierDeclStatement	"StringList single_disk_file ( one_disk , "":"" ) ;"	944:2:24643:24685	5043582	0	True				
ANR	5043676	IdentifierDecl	"single_disk_file ( one_disk , "":"" )"		5043582	0					
ANR	5043677	IdentifierDeclType	StringList		5043582	0					
ANR	5043678	Identifier	single_disk_file		5043582	1					
ANR	5043679	Expression	"one_disk , "":"""		5043582	2					
ANR	5043680	Identifier	one_disk		5043582	0					
ANR	5043681	PrimaryExpression	""":"""		5043582	1					
ANR	5043682	IdentifierDeclStatement	int iNumParams = single_disk_file . number ( ) ;	945:8:24695:24737	5043582	1	True				
ANR	5043683	IdentifierDecl	iNumParams = single_disk_file . number ( )		5043582	0					
ANR	5043684	IdentifierDeclType	int		5043582	0					
ANR	5043685	Identifier	iNumParams		5043582	1					
ANR	5043686	AssignmentExpression	iNumParams = single_disk_file . number ( )		5043582	2		=			
ANR	5043687	Identifier	iNumParams		5043582	0					
ANR	5043688	CallExpression	single_disk_file . number ( )		5043582	1					
ANR	5043689	Callee	single_disk_file . number		5043582	0					
ANR	5043690	MemberAccess	single_disk_file . number		5043582	0					
ANR	5043691	Identifier	single_disk_file		5043582	0					
ANR	5043692	Identifier	number		5043582	1					
ANR	5043693	ArgumentList			5043582	1					
ANR	5043694	IfStatement	if ( iNumParams < 3 || iNumParams > 4 )		5043582	2					
ANR	5043695	Condition	iNumParams < 3 || iNumParams > 4	946:6:24745:24776	5043582	0	True				
ANR	5043696	OrExpression	iNumParams < 3 || iNumParams > 4		5043582	0		||			
ANR	5043697	RelationalExpression	iNumParams < 3		5043582	0		<			
ANR	5043698	Identifier	iNumParams		5043582	0					
ANR	5043699	PrimaryExpression	3		5043582	1					
ANR	5043700	RelationalExpression	iNumParams > 4		5043582	1		>			
ANR	5043701	Identifier	iNumParams		5043582	0					
ANR	5043702	PrimaryExpression	4		5043582	1					
ANR	5043703	CompoundStatement		23:8:572:572	5043582	1					
ANR	5043704	ReturnStatement	return false ;	948:3:24794:24806	5043582	0	True				
ANR	5043705	Identifier	false		5043582	0					
ANR	5043706	ExpressionStatement	single_disk_file . rewind ( )	951:2:24815:24840	5043582	3	True				
ANR	5043707	CallExpression	single_disk_file . rewind ( )		5043582	0					
ANR	5043708	Callee	single_disk_file . rewind		5043582	0					
ANR	5043709	MemberAccess	single_disk_file . rewind		5043582	0					
ANR	5043710	Identifier	single_disk_file		5043582	0					
ANR	5043711	Identifier	rewind		5043582	1					
ANR	5043712	ArgumentList			5043582	1					
ANR	5043713	IdentifierDeclStatement	MyString dfile = single_disk_file . next ( ) ;	954:2:24870:24910	5043582	4	True				
ANR	5043714	IdentifierDecl	dfile = single_disk_file . next ( )		5043582	0					
ANR	5043715	IdentifierDeclType	MyString		5043582	0					
ANR	5043716	Identifier	dfile		5043582	1					
ANR	5043717	AssignmentExpression	dfile = single_disk_file . next ( )		5043582	2		=			
ANR	5043718	Identifier	dfile		5043582	0					
ANR	5043719	CallExpression	single_disk_file . next ( )		5043582	1					
ANR	5043720	Callee	single_disk_file . next		5043582	0					
ANR	5043721	MemberAccess	single_disk_file . next		5043582	0					
ANR	5043722	Identifier	single_disk_file		5043582	0					
ANR	5043723	Identifier	next		5043582	1					
ANR	5043724	ArgumentList			5043582	1					
ANR	5043725	IfStatement	if ( dfile . IsEmpty ( ) )		5043582	5					
ANR	5043726	Condition	dfile . IsEmpty ( )	955:6:24918:24932	5043582	0	True				
ANR	5043727	CallExpression	dfile . IsEmpty ( )		5043582	0					
ANR	5043728	Callee	dfile . IsEmpty		5043582	0					
ANR	5043729	MemberAccess	dfile . IsEmpty		5043582	0					
ANR	5043730	Identifier	dfile		5043582	0					
ANR	5043731	Identifier	IsEmpty		5043582	1					
ANR	5043732	ArgumentList			5043582	1					
ANR	5043733	CompoundStatement		31:24:719:719	5043582	1					
ANR	5043734	ReturnStatement	return false ;	956:3:24941:24953	5043582	0	True				
ANR	5043735	Identifier	false		5043582	0					
ANR	5043736	ExpressionStatement	dfile . trim ( )	958:2:24961:24973	5043582	6	True				
ANR	5043737	CallExpression	dfile . trim ( )		5043582	0					
ANR	5043738	Callee	dfile . trim		5043582	0					
ANR	5043739	MemberAccess	dfile . trim		5043582	0					
ANR	5043740	Identifier	dfile		5043582	0					
ANR	5043741	Identifier	trim		5043582	1					
ANR	5043742	ArgumentList			5043582	1					
ANR	5043743	IdentifierDeclStatement	const char * tmp_base_name = condor_basename ( dfile . Value ( ) ) ;	960:2:24978:25036	5043582	7	True				
ANR	5043744	IdentifierDecl	* tmp_base_name = condor_basename ( dfile . Value ( ) )		5043582	0					
ANR	5043745	IdentifierDeclType	const char *		5043582	0					
ANR	5043746	Identifier	tmp_base_name		5043582	1					
ANR	5043747	AssignmentExpression	* tmp_base_name = condor_basename ( dfile . Value ( ) )		5043582	2		=			
ANR	5043748	Identifier	tmp_base_name		5043582	0					
ANR	5043749	CallExpression	condor_basename ( dfile . Value ( ) )		5043582	1					
ANR	5043750	Callee	condor_basename		5043582	0					
ANR	5043751	Identifier	condor_basename		5043582	0					
ANR	5043752	ArgumentList	dfile . Value ( )		5043582	1					
ANR	5043753	Argument	dfile . Value ( )		5043582	0					
ANR	5043754	CallExpression	dfile . Value ( )		5043582	0					
ANR	5043755	Callee	dfile . Value		5043582	0					
ANR	5043756	MemberAccess	dfile . Value		5043582	0					
ANR	5043757	Identifier	dfile		5043582	0					
ANR	5043758	Identifier	Value		5043582	1					
ANR	5043759	ArgumentList			5043582	1					
ANR	5043760	IfStatement	if ( ! tmp_base_name )		5043582	8					
ANR	5043761	Condition	! tmp_base_name	961:6:25044:25057	5043582	0	True				
ANR	5043762	UnaryOperationExpression	! tmp_base_name		5043582	0					
ANR	5043763	UnaryOperator	!		5043582	0					
ANR	5043764	Identifier	tmp_base_name		5043582	1					
ANR	5043765	CompoundStatement		37:23:844:844	5043582	1					
ANR	5043766	ReturnStatement	return false ;	962:3:25066:25078	5043582	0	True				
ANR	5043767	Identifier	false		5043582	0					
ANR	5043768	IdentifierDeclStatement	MyString disk_file ;	966:2:25143:25161	5043582	9	True				
ANR	5043769	IdentifierDecl	disk_file		5043582	0					
ANR	5043770	IdentifierDeclType	MyString		5043582	0					
ANR	5043771	Identifier	disk_file		5043582	1					
ANR	5043772	IfStatement	"if ( filelist_contains_file ( dfile . Value ( ) , & working_files , true ) )"		5043582	10					
ANR	5043773	Condition	"filelist_contains_file ( dfile . Value ( ) , & working_files , true )"	967:6:25169:25232	5043582	0	True				
ANR	5043774	CallExpression	"filelist_contains_file ( dfile . Value ( ) , & working_files , true )"		5043582	0					
ANR	5043775	Callee	filelist_contains_file		5043582	0					
ANR	5043776	Identifier	filelist_contains_file		5043582	0					
ANR	5043777	ArgumentList	dfile . Value ( )		5043582	1					
ANR	5043778	Argument	dfile . Value ( )		5043582	0					
ANR	5043779	CallExpression	dfile . Value ( )		5043582	0					
ANR	5043780	Callee	dfile . Value		5043582	0					
ANR	5043781	MemberAccess	dfile . Value		5043582	0					
ANR	5043782	Identifier	dfile		5043582	0					
ANR	5043783	Identifier	Value		5043582	1					
ANR	5043784	ArgumentList			5043582	1					
ANR	5043785	Argument	& working_files		5043582	1					
ANR	5043786	UnaryOperationExpression	& working_files		5043582	0					
ANR	5043787	UnaryOperator	&		5043582	0					
ANR	5043788	Identifier	working_files		5043582	1					
ANR	5043789	Argument	true		5043582	2					
ANR	5043790	Identifier	true		5043582	0					
ANR	5043791	CompoundStatement		44:29:1019:1019	5043582	1					
ANR	5043792	ExpressionStatement	disk_file = m_workingpath	970:3:25267:25292	5043582	0	True				
ANR	5043793	AssignmentExpression	disk_file = m_workingpath		5043582	0		=			
ANR	5043794	Identifier	disk_file		5043582	0					
ANR	5043795	Identifier	m_workingpath		5043582	1					
ANR	5043796	ExpressionStatement	disk_file += DIR_DELIM_CHAR	971:3:25297:25324	5043582	1	True				
ANR	5043797	AssignmentExpression	disk_file += DIR_DELIM_CHAR		5043582	0		+=			
ANR	5043798	Identifier	disk_file		5043582	0					
ANR	5043799	Identifier	DIR_DELIM_CHAR		5043582	1					
ANR	5043800	ExpressionStatement	disk_file += tmp_base_name	972:3:25329:25355	5043582	2	True				
ANR	5043801	AssignmentExpression	disk_file += tmp_base_name		5043582	0		+=			
ANR	5043802	Identifier	disk_file		5043582	0					
ANR	5043803	Identifier	tmp_base_name		5043582	1					
ANR	5043804	ExpressionStatement	m_has_transferred_disk_file = true	974:3:25361:25395	5043582	3	True				
ANR	5043805	AssignmentExpression	m_has_transferred_disk_file = true		5043582	0		=			
ANR	5043806	Identifier	m_has_transferred_disk_file		5043582	0					
ANR	5043807	Identifier	true		5043582	1					
ANR	5043808	ElseStatement	else		5043582	0					
ANR	5043809	CompoundStatement		51:8:1188:1188	5043582	0					
ANR	5043810	IfStatement	if ( fullpath ( dfile . Value ( ) ) == false )		5043582	0					
ANR	5043811	Condition	fullpath ( dfile . Value ( ) ) == false	977:7:25445:25476	5043582	0	True				
ANR	5043812	EqualityExpression	fullpath ( dfile . Value ( ) ) == false		5043582	0		==			
ANR	5043813	CallExpression	fullpath ( dfile . Value ( ) )		5043582	0					
ANR	5043814	Callee	fullpath		5043582	0					
ANR	5043815	Identifier	fullpath		5043582	0					
ANR	5043816	ArgumentList	dfile . Value ( )		5043582	1					
ANR	5043817	Argument	dfile . Value ( )		5043582	0					
ANR	5043818	CallExpression	dfile . Value ( )		5043582	0					
ANR	5043819	Callee	dfile . Value		5043582	0					
ANR	5043820	MemberAccess	dfile . Value		5043582	0					
ANR	5043821	Identifier	dfile		5043582	0					
ANR	5043822	Identifier	Value		5043582	1					
ANR	5043823	ArgumentList			5043582	1					
ANR	5043824	Identifier	false		5043582	1					
ANR	5043825	CompoundStatement		53:41:1262:1262	5043582	1					
ANR	5043826	Statement	vmprintf	978:4:25485:25492	5043582	0	True				
ANR	5043827	Statement	(	978:12:25493:25493	5043582	1	True				
ANR	5043828	Statement	D_ALWAYS	978:13:25494:25501	5043582	2	True				
ANR	5043829	Statement	","	978:21:25502:25502	5043582	3	True				
ANR	5043830	Statement	"""File(%s) for xen disk """	978:23:25504:25527	5043582	4	True				
ANR	5043831	Statement	"""should have full path name\\n"""	979:6:25535:25564	5043582	5	True				
ANR	5043832	Statement	","	979:36:25565:25565	5043582	6	True				
ANR	5043833	Statement	dfile	979:38:25567:25571	5043582	7	True				
ANR	5043834	Statement	.	979:43:25572:25572	5043582	8	True				
ANR	5043835	Statement	Value	979:44:25573:25577	5043582	9	True				
ANR	5043836	Statement	(	979:49:25578:25578	5043582	10	True				
ANR	5043837	Statement	)	979:50:25579:25579	5043582	11	True				
ANR	5043838	Statement	)	979:51:25580:25580	5043582	12	True				
ANR	5043839	ExpressionStatement		979:52:25581:25581	5043582	13	True				
ANR	5043840	ReturnStatement	return false ;	980:4:25587:25599	5043582	14	True				
ANR	5043841	Identifier	false		5043582	0					
ANR	5043842	ExpressionStatement	disk_file = dfile	982:3:25609:25626	5043582	1	True				
ANR	5043843	AssignmentExpression	disk_file = dfile		5043582	0		=			
ANR	5043844	Identifier	disk_file		5043582	0					
ANR	5043845	Identifier	dfile		5043582	1					
ANR	5043846	IdentifierDeclStatement	MyString disk_device = single_disk_file . next ( ) ;	986:2:25652:25698	5043582	11	True				
ANR	5043847	IdentifierDecl	disk_device = single_disk_file . next ( )		5043582	0					
ANR	5043848	IdentifierDeclType	MyString		5043582	0					
ANR	5043849	Identifier	disk_device		5043582	1					
ANR	5043850	AssignmentExpression	disk_device = single_disk_file . next ( )		5043582	2		=			
ANR	5043851	Identifier	disk_device		5043582	0					
ANR	5043852	CallExpression	single_disk_file . next ( )		5043582	1					
ANR	5043853	Callee	single_disk_file . next		5043582	0					
ANR	5043854	MemberAccess	single_disk_file . next		5043582	0					
ANR	5043855	Identifier	single_disk_file		5043582	0					
ANR	5043856	Identifier	next		5043582	1					
ANR	5043857	ArgumentList			5043582	1					
ANR	5043858	ExpressionStatement	disk_device . trim ( )	987:2:25702:25720	5043582	12	True				
ANR	5043859	CallExpression	disk_device . trim ( )		5043582	0					
ANR	5043860	Callee	disk_device . trim		5043582	0					
ANR	5043861	MemberAccess	disk_device . trim		5043582	0					
ANR	5043862	Identifier	disk_device		5043582	0					
ANR	5043863	Identifier	trim		5043582	1					
ANR	5043864	ArgumentList			5043582	1					
ANR	5043865	ExpressionStatement	disk_device . lower_case ( )	988:2:25724:25748	5043582	13	True				
ANR	5043866	CallExpression	disk_device . lower_case ( )		5043582	0					
ANR	5043867	Callee	disk_device . lower_case		5043582	0					
ANR	5043868	MemberAccess	disk_device . lower_case		5043582	0					
ANR	5043869	Identifier	disk_device		5043582	0					
ANR	5043870	Identifier	lower_case		5043582	1					
ANR	5043871	ArgumentList			5043582	1					
ANR	5043872	IdentifierDeclStatement	MyString disk_perm = single_disk_file . next ( ) ;	991:2:25774:25818	5043582	14	True				
ANR	5043873	IdentifierDecl	disk_perm = single_disk_file . next ( )		5043582	0					
ANR	5043874	IdentifierDeclType	MyString		5043582	0					
ANR	5043875	Identifier	disk_perm		5043582	1					
ANR	5043876	AssignmentExpression	disk_perm = single_disk_file . next ( )		5043582	2		=			
ANR	5043877	Identifier	disk_perm		5043582	0					
ANR	5043878	CallExpression	single_disk_file . next ( )		5043582	1					
ANR	5043879	Callee	single_disk_file . next		5043582	0					
ANR	5043880	MemberAccess	single_disk_file . next		5043582	0					
ANR	5043881	Identifier	single_disk_file		5043582	0					
ANR	5043882	Identifier	next		5043582	1					
ANR	5043883	ArgumentList			5043582	1					
ANR	5043884	ExpressionStatement	disk_perm . trim ( )	992:2:25822:25838	5043582	15	True				
ANR	5043885	CallExpression	disk_perm . trim ( )		5043582	0					
ANR	5043886	Callee	disk_perm . trim		5043582	0					
ANR	5043887	MemberAccess	disk_perm . trim		5043582	0					
ANR	5043888	Identifier	disk_perm		5043582	0					
ANR	5043889	Identifier	trim		5043582	1					
ANR	5043890	ArgumentList			5043582	1					
ANR	5043891	IfStatement	"if ( ! strcasecmp ( disk_perm . Value ( ) , ""w"" ) || ! strcasecmp ( disk_perm . Value ( ) , ""rw"" ) )"		5043582	16					
ANR	5043892	Condition	"! strcasecmp ( disk_perm . Value ( ) , ""w"" ) || ! strcasecmp ( disk_perm . Value ( ) , ""rw"" )"	994:6:25847:25921	5043582	0	True				
ANR	5043893	OrExpression	"! strcasecmp ( disk_perm . Value ( ) , ""w"" ) || ! strcasecmp ( disk_perm . Value ( ) , ""rw"" )"		5043582	0		||			
ANR	5043894	UnaryOperationExpression	"! strcasecmp ( disk_perm . Value ( ) , ""w"" )"		5043582	0					
ANR	5043895	UnaryOperator	!		5043582	0					
ANR	5043896	CallExpression	"strcasecmp ( disk_perm . Value ( ) , ""w"" )"		5043582	1					
ANR	5043897	Callee	strcasecmp		5043582	0					
ANR	5043898	Identifier	strcasecmp		5043582	0					
ANR	5043899	ArgumentList	disk_perm . Value ( )		5043582	1					
ANR	5043900	Argument	disk_perm . Value ( )		5043582	0					
ANR	5043901	CallExpression	disk_perm . Value ( )		5043582	0					
ANR	5043902	Callee	disk_perm . Value		5043582	0					
ANR	5043903	MemberAccess	disk_perm . Value		5043582	0					
ANR	5043904	Identifier	disk_perm		5043582	0					
ANR	5043905	Identifier	Value		5043582	1					
ANR	5043906	ArgumentList			5043582	1					
ANR	5043907	Argument	"""w"""		5043582	1					
ANR	5043908	PrimaryExpression	"""w"""		5043582	0					
ANR	5043909	UnaryOperationExpression	"! strcasecmp ( disk_perm . Value ( ) , ""rw"" )"		5043582	1					
ANR	5043910	UnaryOperator	!		5043582	0					
ANR	5043911	CallExpression	"strcasecmp ( disk_perm . Value ( ) , ""rw"" )"		5043582	1					
ANR	5043912	Callee	strcasecmp		5043582	0					
ANR	5043913	Identifier	strcasecmp		5043582	0					
ANR	5043914	ArgumentList	disk_perm . Value ( )		5043582	1					
ANR	5043915	Argument	disk_perm . Value ( )		5043582	0					
ANR	5043916	CallExpression	disk_perm . Value ( )		5043582	0					
ANR	5043917	Callee	disk_perm . Value		5043582	0					
ANR	5043918	MemberAccess	disk_perm . Value		5043582	0					
ANR	5043919	Identifier	disk_perm		5043582	0					
ANR	5043920	Identifier	Value		5043582	1					
ANR	5043921	ArgumentList			5043582	1					
ANR	5043922	Argument	"""rw"""		5043582	1					
ANR	5043923	PrimaryExpression	"""rw"""		5043582	0					
ANR	5043924	CompoundStatement		71:8:1716:1716	5043582	1					
ANR	5043925	IfStatement	"if ( check_vm_write_access_file ( disk_file . Value ( ) , false ) == false )"		5043582	0					
ANR	5043926	Condition	"check_vm_write_access_file ( disk_file . Value ( ) , false ) == false"	997:7:25984:26044	5043582	0	True				
ANR	5043927	EqualityExpression	"check_vm_write_access_file ( disk_file . Value ( ) , false ) == false"		5043582	0		==			
ANR	5043928	CallExpression	"check_vm_write_access_file ( disk_file . Value ( ) , false )"		5043582	0					
ANR	5043929	Callee	check_vm_write_access_file		5043582	0					
ANR	5043930	Identifier	check_vm_write_access_file		5043582	0					
ANR	5043931	ArgumentList	disk_file . Value ( )		5043582	1					
ANR	5043932	Argument	disk_file . Value ( )		5043582	0					
ANR	5043933	CallExpression	disk_file . Value ( )		5043582	0					
ANR	5043934	Callee	disk_file . Value		5043582	0					
ANR	5043935	MemberAccess	disk_file . Value		5043582	0					
ANR	5043936	Identifier	disk_file		5043582	0					
ANR	5043937	Identifier	Value		5043582	1					
ANR	5043938	ArgumentList			5043582	1					
ANR	5043939	Argument	false		5043582	1					
ANR	5043940	Identifier	false		5043582	0					
ANR	5043941	Identifier	false		5043582	1					
ANR	5043942	CompoundStatement		73:71:1831:1831	5043582	1					
ANR	5043943	ExpressionStatement	"vmprintf ( D_ALWAYS , ""xen disk image file('%s') cannot be modified\\n"" , disk_file . Value ( ) )"	998:4:26054:26150	5043582	0	True				
ANR	5043944	CallExpression	"vmprintf ( D_ALWAYS , ""xen disk image file('%s') cannot be modified\\n"" , disk_file . Value ( ) )"		5043582	0					
ANR	5043945	Callee	vmprintf		5043582	0					
ANR	5043946	Identifier	vmprintf		5043582	0					
ANR	5043947	ArgumentList	D_ALWAYS		5043582	1					
ANR	5043948	Argument	D_ALWAYS		5043582	0					
ANR	5043949	Identifier	D_ALWAYS		5043582	0					
ANR	5043950	Argument	"""xen disk image file('%s') cannot be modified\\n"""		5043582	1					
ANR	5043951	PrimaryExpression	"""xen disk image file('%s') cannot be modified\\n"""		5043582	0					
ANR	5043952	Argument	disk_file . Value ( )		5043582	2					
ANR	5043953	CallExpression	disk_file . Value ( )		5043582	0					
ANR	5043954	Callee	disk_file . Value		5043582	0					
ANR	5043955	MemberAccess	disk_file . Value		5043582	0					
ANR	5043956	Identifier	disk_file		5043582	0					
ANR	5043957	Identifier	Value		5043582	1					
ANR	5043958	ArgumentList			5043582	1					
ANR	5043959	ReturnStatement	return false ;	1000:4:26156:26168	5043582	1	True				
ANR	5043960	Identifier	false		5043582	0					
ANR	5043961	ElseStatement	else		5043582	0					
ANR	5043962	CompoundStatement		79:8:1975:1975	5043582	0					
ANR	5043963	IfStatement	"if ( check_vm_read_access_file ( disk_file . Value ( ) , false ) == false )"		5043582	0					
ANR	5043964	Condition	"check_vm_read_access_file ( disk_file . Value ( ) , false ) == false"	1005:7:26243:26302	5043582	0	True				
ANR	5043965	EqualityExpression	"check_vm_read_access_file ( disk_file . Value ( ) , false ) == false"		5043582	0		==			
ANR	5043966	CallExpression	"check_vm_read_access_file ( disk_file . Value ( ) , false )"		5043582	0					
ANR	5043967	Callee	check_vm_read_access_file		5043582	0					
ANR	5043968	Identifier	check_vm_read_access_file		5043582	0					
ANR	5043969	ArgumentList	disk_file . Value ( )		5043582	1					
ANR	5043970	Argument	disk_file . Value ( )		5043582	0					
ANR	5043971	CallExpression	disk_file . Value ( )		5043582	0					
ANR	5043972	Callee	disk_file . Value		5043582	0					
ANR	5043973	MemberAccess	disk_file . Value		5043582	0					
ANR	5043974	Identifier	disk_file		5043582	0					
ANR	5043975	Identifier	Value		5043582	1					
ANR	5043976	ArgumentList			5043582	1					
ANR	5043977	Argument	false		5043582	1					
ANR	5043978	Identifier	false		5043582	0					
ANR	5043979	Identifier	false		5043582	1					
ANR	5043980	CompoundStatement		81:70:2089:2089	5043582	1					
ANR	5043981	ExpressionStatement	"vmprintf ( D_ALWAYS , ""xen disk image file('%s') cannot be read\\n"" , disk_file . Value ( ) )"	1006:4:26312:26401	5043582	0	True				
ANR	5043982	CallExpression	"vmprintf ( D_ALWAYS , ""xen disk image file('%s') cannot be read\\n"" , disk_file . Value ( ) )"		5043582	0					
ANR	5043983	Callee	vmprintf		5043582	0					
ANR	5043984	Identifier	vmprintf		5043582	0					
ANR	5043985	ArgumentList	D_ALWAYS		5043582	1					
ANR	5043986	Argument	D_ALWAYS		5043582	0					
ANR	5043987	Identifier	D_ALWAYS		5043582	0					
ANR	5043988	Argument	"""xen disk image file('%s') cannot be read\\n"""		5043582	1					
ANR	5043989	PrimaryExpression	"""xen disk image file('%s') cannot be read\\n"""		5043582	0					
ANR	5043990	Argument	disk_file . Value ( )		5043582	2					
ANR	5043991	CallExpression	disk_file . Value ( )		5043582	0					
ANR	5043992	Callee	disk_file . Value		5043582	0					
ANR	5043993	MemberAccess	disk_file . Value		5043582	0					
ANR	5043994	Identifier	disk_file		5043582	0					
ANR	5043995	Identifier	Value		5043582	1					
ANR	5043996	ArgumentList			5043582	1					
ANR	5043997	ReturnStatement	return false ;	1008:4:26407:26419	5043582	1	True				
ANR	5043998	Identifier	false		5043582	0					
ANR	5043999	Statement	XenDisk	1012:2:26433:26439	5043582	17	True				
ANR	5044000	Statement	*	1012:10:26441:26441	5043582	18	True				
ANR	5044001	Statement	newdisk	1012:11:26442:26448	5043582	19	True				
ANR	5044002	Statement	=	1012:19:26450:26450	5043582	20	True				
ANR	5044003	Statement	new	1012:21:26452:26454	5043582	21	True				
ANR	5044004	ExpressionStatement	XenDisk	1012:25:26456:26463	5043582	22	True				
ANR	5044005	Identifier	XenDisk		5043582	0					
ANR	5044006	ExpressionStatement	ASSERT ( newdisk )	1013:2:26467:26482	5043582	23	True				
ANR	5044007	CallExpression	ASSERT ( newdisk )		5043582	0					
ANR	5044008	Callee	ASSERT		5043582	0					
ANR	5044009	Identifier	ASSERT		5043582	0					
ANR	5044010	ArgumentList	newdisk		5043582	1					
ANR	5044011	Argument	newdisk		5043582	0					
ANR	5044012	Identifier	newdisk		5043582	0					
ANR	5044013	ExpressionStatement	newdisk -> filename = disk_file	1014:2:26486:26515	5043582	24	True				
ANR	5044014	AssignmentExpression	newdisk -> filename = disk_file		5043582	0		=			
ANR	5044015	PtrMemberAccess	newdisk -> filename		5043582	0					
ANR	5044016	Identifier	newdisk		5043582	0					
ANR	5044017	Identifier	filename		5043582	1					
ANR	5044018	Identifier	disk_file		5043582	1					
ANR	5044019	ExpressionStatement	newdisk -> device = disk_device	1015:2:26519:26548	5043582	25	True				
ANR	5044020	AssignmentExpression	newdisk -> device = disk_device		5043582	0		=			
ANR	5044021	PtrMemberAccess	newdisk -> device		5043582	0					
ANR	5044022	Identifier	newdisk		5043582	0					
ANR	5044023	Identifier	device		5043582	1					
ANR	5044024	Identifier	disk_device		5043582	1					
ANR	5044025	ExpressionStatement	newdisk -> permission = disk_perm	1016:2:26552:26583	5043582	26	True				
ANR	5044026	AssignmentExpression	newdisk -> permission = disk_perm		5043582	0		=			
ANR	5044027	PtrMemberAccess	newdisk -> permission		5043582	0					
ANR	5044028	Identifier	newdisk		5043582	0					
ANR	5044029	Identifier	permission		5043582	1					
ANR	5044030	Identifier	disk_perm		5043582	1					
ANR	5044031	IfStatement	if ( iNumParams == 4 )		5043582	27					
ANR	5044032	Condition	iNumParams == 4	1019:12:26653:26667	5043582	0	True				
ANR	5044033	EqualityExpression	iNumParams == 4		5043582	0		==			
ANR	5044034	Identifier	iNumParams		5043582	0					
ANR	5044035	PrimaryExpression	4		5043582	1					
ANR	5044036	CompoundStatement		96:8:2462:2462	5043582	1					
ANR	5044037	ExpressionStatement	newdisk -> format = single_disk_file . next ( )	1021:12:26693:26734	5043582	0	True				
ANR	5044038	AssignmentExpression	newdisk -> format = single_disk_file . next ( )		5043582	0		=			
ANR	5044039	PtrMemberAccess	newdisk -> format		5043582	0					
ANR	5044040	Identifier	newdisk		5043582	0					
ANR	5044041	Identifier	format		5043582	1					
ANR	5044042	CallExpression	single_disk_file . next ( )		5043582	1					
ANR	5044043	Callee	single_disk_file . next		5043582	0					
ANR	5044044	MemberAccess	single_disk_file . next		5043582	0					
ANR	5044045	Identifier	single_disk_file		5043582	0					
ANR	5044046	Identifier	next		5043582	1					
ANR	5044047	ArgumentList			5043582	1					
ANR	5044048	ExpressionStatement	newdisk -> format . trim ( )	1022:12:26748:26770	5043582	1	True				
ANR	5044049	CallExpression	newdisk -> format . trim ( )		5043582	0					
ANR	5044050	Callee	newdisk -> format . trim		5043582	0					
ANR	5044051	MemberAccess	newdisk -> format . trim		5043582	0					
ANR	5044052	PtrMemberAccess	newdisk -> format		5043582	0					
ANR	5044053	Identifier	newdisk		5043582	0					
ANR	5044054	Identifier	format		5043582	1					
ANR	5044055	Identifier	trim		5043582	1					
ANR	5044056	ArgumentList			5043582	1					
ANR	5044057	ExpressionStatement	newdisk -> format . lower_case ( )	1023:12:26784:26812	5043582	2	True				
ANR	5044058	CallExpression	newdisk -> format . lower_case ( )		5043582	0					
ANR	5044059	Callee	newdisk -> format . lower_case		5043582	0					
ANR	5044060	MemberAccess	newdisk -> format . lower_case		5043582	0					
ANR	5044061	PtrMemberAccess	newdisk -> format		5043582	0					
ANR	5044062	Identifier	newdisk		5043582	0					
ANR	5044063	Identifier	format		5043582	1					
ANR	5044064	Identifier	lower_case		5043582	1					
ANR	5044065	ArgumentList			5043582	1					
ANR	5044066	ExpressionStatement	m_disk_list . Append ( newdisk )	1026:2:26835:26862	5043582	28	True				
ANR	5044067	CallExpression	m_disk_list . Append ( newdisk )		5043582	0					
ANR	5044068	Callee	m_disk_list . Append		5043582	0					
ANR	5044069	MemberAccess	m_disk_list . Append		5043582	0					
ANR	5044070	Identifier	m_disk_list		5043582	0					
ANR	5044071	Identifier	Append		5043582	1					
ANR	5044072	ArgumentList	newdisk		5043582	1					
ANR	5044073	Argument	newdisk		5043582	0					
ANR	5044074	Identifier	newdisk		5043582	0					
ANR	5044075	IfStatement	if ( m_disk_list . Number ( ) == 0 )		5043582	9					
ANR	5044076	Condition	m_disk_list . Number ( ) == 0	1029:5:26873:26897	5043582	0	True				
ANR	5044077	EqualityExpression	m_disk_list . Number ( ) == 0		5043582	0		==			
ANR	5044078	CallExpression	m_disk_list . Number ( )		5043582	0					
ANR	5044079	Callee	m_disk_list . Number		5043582	0					
ANR	5044080	MemberAccess	m_disk_list . Number		5043582	0					
ANR	5044081	Identifier	m_disk_list		5043582	0					
ANR	5044082	Identifier	Number		5043582	1					
ANR	5044083	ArgumentList			5043582	1					
ANR	5044084	PrimaryExpression	0		5043582	1					
ANR	5044085	CompoundStatement		105:33:2684:2684	5043582	1					
ANR	5044086	ExpressionStatement	"vmprintf ( D_ALWAYS , ""No valid Virsh disk\\n"" )"	1030:2:26905:26948	5043582	0	True				
ANR	5044087	CallExpression	"vmprintf ( D_ALWAYS , ""No valid Virsh disk\\n"" )"		5043582	0					
ANR	5044088	Callee	vmprintf		5043582	0					
ANR	5044089	Identifier	vmprintf		5043582	0					
ANR	5044090	ArgumentList	D_ALWAYS		5043582	1					
ANR	5044091	Argument	D_ALWAYS		5043582	0					
ANR	5044092	Identifier	D_ALWAYS		5043582	0					
ANR	5044093	Argument	"""No valid Virsh disk\\n"""		5043582	1					
ANR	5044094	PrimaryExpression	"""No valid Virsh disk\\n"""		5043582	0					
ANR	5044095	ReturnStatement	return false ;	1031:2:26952:26964	5043582	1	True				
ANR	5044096	Identifier	false		5043582	0					
ANR	5044097	ReturnStatement	return true ;	1034:1:26971:26982	5043582	10	True				
ANR	5044098	Identifier	true		5043582	0					
ANR	5044099	ReturnType	bool		5043582	1					
ANR	5044100	Identifier	VirshType :: parseXenDiskParam		5043582	2					
ANR	5044101	ParameterList	const char * format		5043582	3					
ANR	5044102	Parameter	const char * format	924:29:24196:24213	5043582	0	True				
ANR	5044103	ParameterType	const char *		5043582	0					
ANR	5044104	Identifier	format		5043582	1					
ANR	5044105	CFGEntryNode	ENTRY		5043582		True				
ANR	5044106	CFGExitNode	EXIT		5043582		True				
ANR	5044107	Symbol	m_workingpath . Value		5043582						
ANR	5044108	Symbol	one_disk		5043582						
ANR	5044109	Symbol	m_disk_list		5043582						
ANR	5044110	Symbol	m_disk_list . Number		5043582						
ANR	5044111	Symbol	& working_files		5043582						
ANR	5044112	Symbol	disk_files . isEmpty		5043582						
ANR	5044113	Symbol	dfile		5043582						
ANR	5044114	Symbol	newdisk -> format		5043582						
ANR	5044115	Symbol	single_disk_file . next		5043582						
ANR	5044116	Symbol	disk_device		5043582						
ANR	5044117	Symbol	newdisk -> permission		5043582						
ANR	5044118	Symbol	disk_files . next		5043582						
ANR	5044119	Symbol	fullpath		5043582						
ANR	5044120	Symbol	dfile . Value		5043582						
ANR	5044121	Symbol	disk_file		5043582						
ANR	5044122	Symbol	disk_files		5043582						
ANR	5044123	Symbol	tmp_base_name		5043582						
ANR	5044124	Symbol	disk_perm		5043582						
ANR	5044125	Symbol	single_disk_file		5043582						
ANR	5044126	Symbol	strcasecmp		5043582						
ANR	5044127	Symbol	m_has_transferred_disk_file		5043582						
ANR	5044128	Symbol	NULL		5043582						
ANR	5044129	Symbol	* newdisk		5043582						
ANR	5044130	Symbol	DIR_DELIM_CHAR		5043582						
ANR	5044131	Symbol	format		5043582						
ANR	5044132	Symbol	false		5043582						
ANR	5044133	Symbol	D_ALWAYS		5043582						
ANR	5044134	Symbol	D_FULLDEBUG		5043582						
ANR	5044135	Symbol	filelist_contains_file		5043582						
ANR	5044136	Symbol	dfile . IsEmpty		5043582						
ANR	5044137	Symbol	working_files		5043582						
ANR	5044138	Symbol	m_workingpath		5043582						
ANR	5044139	Symbol	disk_perm . Value		5043582						
ANR	5044140	Symbol	* format		5043582						
ANR	5044141	Symbol	disk_file . Value		5043582						
ANR	5044142	Symbol	true		5043582						
ANR	5044143	Symbol	single_disk_file . number		5043582						
ANR	5044144	Symbol	iNumParams		5043582						
ANR	5044145	Symbol	check_vm_write_access_file		5043582						
ANR	5044146	Symbol	condor_basename		5043582						
ANR	5044147	Symbol	check_vm_read_access_file		5043582						
ANR	5044148	Symbol	newdisk		5043582						
ANR	5044149	Symbol	newdisk -> filename		5043582						
ANR	5044150	Symbol	newdisk -> device		5043582						
ANR	5044151	Function	VirshType :: makeVirshDiskString	1039:0:27048:27973							
ANR	5044152	FunctionDef	VirshType :: makeVirshDiskString ()		5044151	0					
ANR	5044153	CompoundStatement		1041:0:27094:27973	5044151	0					
ANR	5044154	IdentifierDeclStatement	MyString xendisk ;	1042:1:27097:27113	5044151	0	True				
ANR	5044155	IdentifierDecl	xendisk		5044151	0					
ANR	5044156	IdentifierDeclType	MyString		5044151	0					
ANR	5044157	Identifier	xendisk		5044151	1					
ANR	5044158	ExpressionStatement	"xendisk = """""	1043:1:27116:27128	5044151	1	True				
ANR	5044159	AssignmentExpression	"xendisk = """""		5044151	0		=			
ANR	5044160	Identifier	xendisk		5044151	0					
ANR	5044161	PrimaryExpression	""""""		5044151	1					
ANR	5044162	IdentifierDeclStatement	bool first_disk = true ;	1044:1:27131:27153	5044151	2	True				
ANR	5044163	IdentifierDecl	first_disk = true		5044151	0					
ANR	5044164	IdentifierDeclType	bool		5044151	0					
ANR	5044165	Identifier	first_disk		5044151	1					
ANR	5044166	AssignmentExpression	first_disk = true		5044151	2		=			
ANR	5044167	Identifier	true		5044151	0					
ANR	5044168	Identifier	true		5044151	1					
ANR	5044169	IdentifierDeclStatement	XenDisk * vdisk = NULL ;	1046:1:27157:27178	5044151	3	True				
ANR	5044170	IdentifierDecl	* vdisk = NULL		5044151	0					
ANR	5044171	IdentifierDeclType	XenDisk *		5044151	0					
ANR	5044172	Identifier	vdisk		5044151	1					
ANR	5044173	AssignmentExpression	* vdisk = NULL		5044151	2		=			
ANR	5044174	Identifier	NULL		5044151	0					
ANR	5044175	Identifier	NULL		5044151	1					
ANR	5044176	ExpressionStatement	m_disk_list . Rewind ( )	1047:1:27181:27201	5044151	4	True				
ANR	5044177	CallExpression	m_disk_list . Rewind ( )		5044151	0					
ANR	5044178	Callee	m_disk_list . Rewind		5044151	0					
ANR	5044179	MemberAccess	m_disk_list . Rewind		5044151	0					
ANR	5044180	Identifier	m_disk_list		5044151	0					
ANR	5044181	Identifier	Rewind		5044151	1					
ANR	5044182	ArgumentList			5044151	1					
ANR	5044183	WhileStatement	while ( m_disk_list . Next ( vdisk ) )		5044151	5					
ANR	5044184	Condition	m_disk_list . Next ( vdisk )	1048:8:27211:27233	5044151	0	True				
ANR	5044185	CallExpression	m_disk_list . Next ( vdisk )		5044151	0					
ANR	5044186	Callee	m_disk_list . Next		5044151	0					
ANR	5044187	MemberAccess	m_disk_list . Next		5044151	0					
ANR	5044188	Identifier	m_disk_list		5044151	0					
ANR	5044189	Identifier	Next		5044151	1					
ANR	5044190	ArgumentList	vdisk		5044151	1					
ANR	5044191	Argument	vdisk		5044151	0					
ANR	5044192	Identifier	vdisk		5044151	0					
ANR	5044193	CompoundStatement		8:34:142:142	5044151	1					
ANR	5044194	IfStatement	if ( ! first_disk )		5044151	0					
ANR	5044195	Condition	! first_disk	1049:6:27245:27255	5044151	0	True				
ANR	5044196	UnaryOperationExpression	! first_disk		5044151	0					
ANR	5044197	UnaryOperator	!		5044151	0					
ANR	5044198	Identifier	first_disk		5044151	1					
ANR	5044199	CompoundStatement		9:20:164:164	5044151	1					
ANR	5044200	ExpressionStatement	"xendisk += ""</disk>"""	1050:3:27264:27284	5044151	0	True				
ANR	5044201	AssignmentExpression	"xendisk += ""</disk>"""		5044151	0		+=			
ANR	5044202	Identifier	xendisk		5044151	0					
ANR	5044203	PrimaryExpression	"""</disk>"""		5044151	1					
ANR	5044204	ExpressionStatement	first_disk = false	1052:2:27292:27310	5044151	1	True				
ANR	5044205	AssignmentExpression	first_disk = false		5044151	0		=			
ANR	5044206	Identifier	first_disk		5044151	0					
ANR	5044207	Identifier	false		5044151	1					
ANR	5044208	IfStatement	"if ( strstr ( vdisk -> filename . Value ( ) , "".iso"" ) )"		5044151	2					
ANR	5044209	Condition	"strstr ( vdisk -> filename . Value ( ) , "".iso"" )"	1053:13:27325:27364	5044151	0	True				
ANR	5044210	CallExpression	"strstr ( vdisk -> filename . Value ( ) , "".iso"" )"		5044151	0					
ANR	5044211	Callee	strstr		5044151	0					
ANR	5044212	Identifier	strstr		5044151	0					
ANR	5044213	ArgumentList	vdisk -> filename . Value ( )		5044151	1					
ANR	5044214	Argument	vdisk -> filename . Value ( )		5044151	0					
ANR	5044215	CallExpression	vdisk -> filename . Value ( )		5044151	0					
ANR	5044216	Callee	vdisk -> filename . Value		5044151	0					
ANR	5044217	MemberAccess	vdisk -> filename . Value		5044151	0					
ANR	5044218	PtrMemberAccess	vdisk -> filename		5044151	0					
ANR	5044219	Identifier	vdisk		5044151	0					
ANR	5044220	Identifier	filename		5044151	1					
ANR	5044221	Identifier	Value		5044151	1					
ANR	5044222	ArgumentList			5044151	1					
ANR	5044223	Argument	""".iso"""		5044151	1					
ANR	5044224	PrimaryExpression	""".iso"""		5044151	0					
ANR	5044225	CompoundStatement		14:8:281:281	5044151	1					
ANR	5044226	ExpressionStatement	"xendisk += ""<disk type='file' device='cdrom'>"""	1055:12:27390:27436	5044151	0	True				
ANR	5044227	AssignmentExpression	"xendisk += ""<disk type='file' device='cdrom'>"""		5044151	0		+=			
ANR	5044228	Identifier	xendisk		5044151	0					
ANR	5044229	PrimaryExpression	"""<disk type='file' device='cdrom'>"""		5044151	1					
ANR	5044230	ElseStatement	else		5044151	0					
ANR	5044231	CompoundStatement		18:8:374:374	5044151	0					
ANR	5044232	ExpressionStatement	"xendisk += ""<disk type='file'>"""	1059:12:27483:27514	5044151	0	True				
ANR	5044233	AssignmentExpression	"xendisk += ""<disk type='file'>"""		5044151	0		+=			
ANR	5044234	Identifier	xendisk		5044151	0					
ANR	5044235	PrimaryExpression	"""<disk type='file'>"""		5044151	1					
ANR	5044236	IfStatement	if ( vdisk -> format . Length ( ) )		5044151	3					
ANR	5044237	Condition	vdisk -> format . Length ( )	1062:12:27539:27560	5044151	0	True				
ANR	5044238	CallExpression	vdisk -> format . Length ( )		5044151	0					
ANR	5044239	Callee	vdisk -> format . Length		5044151	0					
ANR	5044240	MemberAccess	vdisk -> format . Length		5044151	0					
ANR	5044241	PtrMemberAccess	vdisk -> format		5044151	0					
ANR	5044242	Identifier	vdisk		5044151	0					
ANR	5044243	Identifier	format		5044151	1					
ANR	5044244	Identifier	Length		5044151	1					
ANR	5044245	ArgumentList			5044151	1					
ANR	5044246	CompoundStatement		23:8:476:476	5044151	1					
ANR	5044247	ExpressionStatement	"xendisk += ""<driver name='qemu' type='"""	1064:11:27584:27623	5044151	0	True				
ANR	5044248	AssignmentExpression	"xendisk += ""<driver name='qemu' type='"""		5044151	0		+=			
ANR	5044249	Identifier	xendisk		5044151	0					
ANR	5044250	PrimaryExpression	"""<driver name='qemu' type='"""		5044151	1					
ANR	5044251	ExpressionStatement	xendisk += vdisk -> format	1065:11:27636:27660	5044151	1	True				
ANR	5044252	AssignmentExpression	xendisk += vdisk -> format		5044151	0		+=			
ANR	5044253	Identifier	xendisk		5044151	0					
ANR	5044254	PtrMemberAccess	vdisk -> format		5044151	1					
ANR	5044255	Identifier	vdisk		5044151	0					
ANR	5044256	Identifier	format		5044151	1					
ANR	5044257	ExpressionStatement	"xendisk += ""'/>"""	1066:11:27673:27689	5044151	2	True				
ANR	5044258	AssignmentExpression	"xendisk += ""'/>"""		5044151	0		+=			
ANR	5044259	Identifier	xendisk		5044151	0					
ANR	5044260	PrimaryExpression	"""'/>"""		5044151	1					
ANR	5044261	ExpressionStatement	"xendisk += ""<source file='"""	1069:2:27704:27731	5044151	4	True				
ANR	5044262	AssignmentExpression	"xendisk += ""<source file='"""		5044151	0		+=			
ANR	5044263	Identifier	xendisk		5044151	0					
ANR	5044264	PrimaryExpression	"""<source file='"""		5044151	1					
ANR	5044265	ExpressionStatement	xendisk += vdisk -> filename	1070:2:27735:27761	5044151	5	True				
ANR	5044266	AssignmentExpression	xendisk += vdisk -> filename		5044151	0		+=			
ANR	5044267	Identifier	xendisk		5044151	0					
ANR	5044268	PtrMemberAccess	vdisk -> filename		5044151	1					
ANR	5044269	Identifier	vdisk		5044151	0					
ANR	5044270	Identifier	filename		5044151	1					
ANR	5044271	ExpressionStatement	"xendisk += ""'/>"""	1071:2:27765:27781	5044151	6	True				
ANR	5044272	AssignmentExpression	"xendisk += ""'/>"""		5044151	0		+=			
ANR	5044273	Identifier	xendisk		5044151	0					
ANR	5044274	PrimaryExpression	"""'/>"""		5044151	1					
ANR	5044275	ExpressionStatement	"xendisk += ""<target dev='"""	1072:2:27785:27811	5044151	7	True				
ANR	5044276	AssignmentExpression	"xendisk += ""<target dev='"""		5044151	0		+=			
ANR	5044277	Identifier	xendisk		5044151	0					
ANR	5044278	PrimaryExpression	"""<target dev='"""		5044151	1					
ANR	5044279	ExpressionStatement	xendisk += vdisk -> device	1073:2:27815:27839	5044151	8	True				
ANR	5044280	AssignmentExpression	xendisk += vdisk -> device		5044151	0		+=			
ANR	5044281	Identifier	xendisk		5044151	0					
ANR	5044282	PtrMemberAccess	vdisk -> device		5044151	1					
ANR	5044283	Identifier	vdisk		5044151	0					
ANR	5044284	Identifier	device		5044151	1					
ANR	5044285	ExpressionStatement	"xendisk += ""'/>"""	1074:2:27843:27859	5044151	9	True				
ANR	5044286	AssignmentExpression	"xendisk += ""'/>"""		5044151	0		+=			
ANR	5044287	Identifier	xendisk		5044151	0					
ANR	5044288	PrimaryExpression	"""'/>"""		5044151	1					
ANR	5044289	IfStatement	"if ( vdisk -> permission == ""r"" )"		5044151	10					
ANR	5044290	Condition	"vdisk -> permission == ""r"""	1076:6:27868:27891	5044151	0	True				
ANR	5044291	EqualityExpression	"vdisk -> permission == ""r"""		5044151	0		==			
ANR	5044292	PtrMemberAccess	vdisk -> permission		5044151	0					
ANR	5044293	Identifier	vdisk		5044151	0					
ANR	5044294	Identifier	permission		5044151	1					
ANR	5044295	PrimaryExpression	"""r"""		5044151	1					
ANR	5044296	CompoundStatement		36:32:799:799	5044151	1					
ANR	5044297	ExpressionStatement	"xendisk += ""<readonly/>"""	1077:3:27899:27923	5044151	0	True				
ANR	5044298	AssignmentExpression	"xendisk += ""<readonly/>"""		5044151	0		+=			
ANR	5044299	Identifier	xendisk		5044151	0					
ANR	5044300	PrimaryExpression	"""<readonly/>"""		5044151	1					
ANR	5044301	ExpressionStatement	"xendisk += ""</disk>"""	1080:1:27933:27953	5044151	6	True				
ANR	5044302	AssignmentExpression	"xendisk += ""</disk>"""		5044151	0		+=			
ANR	5044303	Identifier	xendisk		5044151	0					
ANR	5044304	PrimaryExpression	"""</disk>"""		5044151	1					
ANR	5044305	ReturnStatement	return xendisk ;	1082:1:27957:27971	5044151	7	True				
ANR	5044306	Identifier	xendisk		5044151	0					
ANR	5044307	ReturnType	MyString		5044151	1					
ANR	5044308	Identifier	VirshType :: makeVirshDiskString		5044151	2					
ANR	5044309	ParameterList			5044151	3					
ANR	5044310	CFGEntryNode	ENTRY		5044151		True				
ANR	5044311	CFGExitNode	EXIT		5044151		True				
ANR	5044312	Symbol	vdisk -> device		5044151						
ANR	5044313	Symbol	vdisk -> permission		5044151						
ANR	5044314	Symbol	vdisk -> format . Length		5044151						
ANR	5044315	Symbol	NULL		5044151						
ANR	5044316	Symbol	m_disk_list		5044151						
ANR	5044317	Symbol	false		5044151						
ANR	5044318	Symbol	vdisk -> filename . Value		5044151						
ANR	5044319	Symbol	first_disk		5044151						
ANR	5044320	Symbol	* vdisk		5044151						
ANR	5044321	Symbol	vdisk -> format		5044151						
ANR	5044322	Symbol	strstr		5044151						
ANR	5044323	Symbol	m_disk_list . Next		5044151						
ANR	5044324	Symbol	vdisk -> filename		5044151						
ANR	5044325	Symbol	true		5044151						
ANR	5044326	Symbol	xendisk		5044151						
ANR	5044327	Symbol	vdisk		5044151						
ANR	5044328	Function	VirshType :: writableXenDisk	1085:0:27976:28399							
ANR	5044329	FunctionDef	VirshType :: writableXenDisk (const char * file)		5044328	0					
ANR	5044330	CompoundStatement		1087:0:28026:28399	5044328	0					
ANR	5044331	IfStatement	if ( ! file )		5044328	0					
ANR	5044332	Condition	! file	1088:5:28033:28037	5044328	0	True				
ANR	5044333	UnaryOperationExpression	! file		5044328	0					
ANR	5044334	UnaryOperator	!		5044328	0					
ANR	5044335	Identifier	file		5044328	1					
ANR	5044336	CompoundStatement		2:13:14:14	5044328	1					
ANR	5044337	ReturnStatement	return false ;	1089:2:28045:28057	5044328	0	True				
ANR	5044338	Identifier	false		5044328	0					
ANR	5044339	IdentifierDeclStatement	XenDisk * vdisk = NULL ;	1092:1:28064:28085	5044328	1	True				
ANR	5044340	IdentifierDecl	* vdisk = NULL		5044328	0					
ANR	5044341	IdentifierDeclType	XenDisk *		5044328	0					
ANR	5044342	Identifier	vdisk		5044328	1					
ANR	5044343	AssignmentExpression	* vdisk = NULL		5044328	2		=			
ANR	5044344	Identifier	NULL		5044328	0					
ANR	5044345	Identifier	NULL		5044328	1					
ANR	5044346	ExpressionStatement	m_disk_list . Rewind ( )	1093:1:28088:28108	5044328	2	True				
ANR	5044347	CallExpression	m_disk_list . Rewind ( )		5044328	0					
ANR	5044348	Callee	m_disk_list . Rewind		5044328	0					
ANR	5044349	MemberAccess	m_disk_list . Rewind		5044328	0					
ANR	5044350	Identifier	m_disk_list		5044328	0					
ANR	5044351	Identifier	Rewind		5044328	1					
ANR	5044352	ArgumentList			5044328	1					
ANR	5044353	WhileStatement	while ( m_disk_list . Next ( vdisk ) )		5044328	3					
ANR	5044354	Condition	m_disk_list . Next ( vdisk )	1094:8:28118:28140	5044328	0	True				
ANR	5044355	CallExpression	m_disk_list . Next ( vdisk )		5044328	0					
ANR	5044356	Callee	m_disk_list . Next		5044328	0					
ANR	5044357	MemberAccess	m_disk_list . Next		5044328	0					
ANR	5044358	Identifier	m_disk_list		5044328	0					
ANR	5044359	Identifier	Next		5044328	1					
ANR	5044360	ArgumentList	vdisk		5044328	1					
ANR	5044361	Argument	vdisk		5044328	0					
ANR	5044362	Identifier	vdisk		5044328	0					
ANR	5044363	CompoundStatement		8:34:117:117	5044328	1					
ANR	5044364	IfStatement	"if ( ! strcasecmp ( basename ( file ) , basename ( vdisk -> filename . Value ( ) ) ) )"		5044328	0					
ANR	5044365	Condition	"! strcasecmp ( basename ( file ) , basename ( vdisk -> filename . Value ( ) ) )"	1095:6:28152:28213	5044328	0	True				
ANR	5044366	UnaryOperationExpression	"! strcasecmp ( basename ( file ) , basename ( vdisk -> filename . Value ( ) ) )"		5044328	0					
ANR	5044367	UnaryOperator	!		5044328	0					
ANR	5044368	CallExpression	"strcasecmp ( basename ( file ) , basename ( vdisk -> filename . Value ( ) ) )"		5044328	1					
ANR	5044369	Callee	strcasecmp		5044328	0					
ANR	5044370	Identifier	strcasecmp		5044328	0					
ANR	5044371	ArgumentList	basename ( file )		5044328	1					
ANR	5044372	Argument	basename ( file )		5044328	0					
ANR	5044373	CallExpression	basename ( file )		5044328	0					
ANR	5044374	Callee	basename		5044328	0					
ANR	5044375	Identifier	basename		5044328	0					
ANR	5044376	ArgumentList	file		5044328	1					
ANR	5044377	Argument	file		5044328	0					
ANR	5044378	Identifier	file		5044328	0					
ANR	5044379	Argument	basename ( vdisk -> filename . Value ( ) )		5044328	1					
ANR	5044380	CallExpression	basename ( vdisk -> filename . Value ( ) )		5044328	0					
ANR	5044381	Callee	basename		5044328	0					
ANR	5044382	Identifier	basename		5044328	0					
ANR	5044383	ArgumentList	vdisk -> filename . Value ( )		5044328	1					
ANR	5044384	Argument	vdisk -> filename . Value ( )		5044328	0					
ANR	5044385	CallExpression	vdisk -> filename . Value ( )		5044328	0					
ANR	5044386	Callee	vdisk -> filename . Value		5044328	0					
ANR	5044387	MemberAccess	vdisk -> filename . Value		5044328	0					
ANR	5044388	PtrMemberAccess	vdisk -> filename		5044328	0					
ANR	5044389	Identifier	vdisk		5044328	0					
ANR	5044390	Identifier	filename		5044328	1					
ANR	5044391	Identifier	Value		5044328	1					
ANR	5044392	ArgumentList			5044328	1					
ANR	5044393	CompoundStatement		9:71:190:190	5044328	1					
ANR	5044394	IfStatement	"if ( ! strcasecmp ( vdisk -> permission . Value ( ) , ""w"" ) || ! strcasecmp ( vdisk -> permission . Value ( ) , ""rw"" ) )"		5044328	0					
ANR	5044395	Condition	"! strcasecmp ( vdisk -> permission . Value ( ) , ""w"" ) || ! strcasecmp ( vdisk -> permission . Value ( ) , ""rw"" )"	1096:7:28226:28321	5044328	0	True				
ANR	5044396	OrExpression	"! strcasecmp ( vdisk -> permission . Value ( ) , ""w"" ) || ! strcasecmp ( vdisk -> permission . Value ( ) , ""rw"" )"		5044328	0		||			
ANR	5044397	UnaryOperationExpression	"! strcasecmp ( vdisk -> permission . Value ( ) , ""w"" )"		5044328	0					
ANR	5044398	UnaryOperator	!		5044328	0					
ANR	5044399	CallExpression	"strcasecmp ( vdisk -> permission . Value ( ) , ""w"" )"		5044328	1					
ANR	5044400	Callee	strcasecmp		5044328	0					
ANR	5044401	Identifier	strcasecmp		5044328	0					
ANR	5044402	ArgumentList	vdisk -> permission . Value ( )		5044328	1					
ANR	5044403	Argument	vdisk -> permission . Value ( )		5044328	0					
ANR	5044404	CallExpression	vdisk -> permission . Value ( )		5044328	0					
ANR	5044405	Callee	vdisk -> permission . Value		5044328	0					
ANR	5044406	MemberAccess	vdisk -> permission . Value		5044328	0					
ANR	5044407	PtrMemberAccess	vdisk -> permission		5044328	0					
ANR	5044408	Identifier	vdisk		5044328	0					
ANR	5044409	Identifier	permission		5044328	1					
ANR	5044410	Identifier	Value		5044328	1					
ANR	5044411	ArgumentList			5044328	1					
ANR	5044412	Argument	"""w"""		5044328	1					
ANR	5044413	PrimaryExpression	"""w"""		5044328	0					
ANR	5044414	UnaryOperationExpression	"! strcasecmp ( vdisk -> permission . Value ( ) , ""rw"" )"		5044328	1					
ANR	5044415	UnaryOperator	!		5044328	0					
ANR	5044416	CallExpression	"strcasecmp ( vdisk -> permission . Value ( ) , ""rw"" )"		5044328	1					
ANR	5044417	Callee	strcasecmp		5044328	0					
ANR	5044418	Identifier	strcasecmp		5044328	0					
ANR	5044419	ArgumentList	vdisk -> permission . Value ( )		5044328	1					
ANR	5044420	Argument	vdisk -> permission . Value ( )		5044328	0					
ANR	5044421	CallExpression	vdisk -> permission . Value ( )		5044328	0					
ANR	5044422	Callee	vdisk -> permission . Value		5044328	0					
ANR	5044423	MemberAccess	vdisk -> permission . Value		5044328	0					
ANR	5044424	PtrMemberAccess	vdisk -> permission		5044328	0					
ANR	5044425	Identifier	vdisk		5044328	0					
ANR	5044426	Identifier	permission		5044328	1					
ANR	5044427	Identifier	Value		5044328	1					
ANR	5044428	ArgumentList			5044328	1					
ANR	5044429	Argument	"""rw"""		5044328	1					
ANR	5044430	PrimaryExpression	"""rw"""		5044328	0					
ANR	5044431	CompoundStatement		11:51:297:297	5044328	1					
ANR	5044432	ReturnStatement	return true ;	1098:4:28330:28341	5044328	0	True				
ANR	5044433	Identifier	true		5044328	0					
ANR	5044434	ElseStatement	else		5044328	0					
ANR	5044435	CompoundStatement		13:9:325:325	5044328	0					
ANR	5044436	ReturnStatement	return false ;	1100:4:28358:28370	5044328	0	True				
ANR	5044437	Identifier	false		5044328	0					
ANR	5044438	ReturnStatement	return false ;	1104:1:28385:28397	5044328	4	True				
ANR	5044439	Identifier	false		5044328	0					
ANR	5044440	ReturnType	bool		5044328	1					
ANR	5044441	Identifier	VirshType :: writableXenDisk		5044328	2					
ANR	5044442	ParameterList	const char * file		5044328	3					
ANR	5044443	Parameter	const char * file	1086:27:28008:28023	5044328	0	True				
ANR	5044444	ParameterType	const char *		5044328	0					
ANR	5044445	Identifier	file		5044328	1					
ANR	5044446	CFGEntryNode	ENTRY		5044328		True				
ANR	5044447	CFGExitNode	EXIT		5044328		True				
ANR	5044448	Symbol	vdisk -> permission		5044328						
ANR	5044449	Symbol	NULL		5044328						
ANR	5044450	Symbol	m_disk_list		5044328						
ANR	5044451	Symbol	false		5044328						
ANR	5044452	Symbol	vdisk -> filename . Value		5044328						
ANR	5044453	Symbol	file		5044328						
ANR	5044454	Symbol	basename		5044328						
ANR	5044455	Symbol	* vdisk		5044328						
ANR	5044456	Symbol	m_disk_list . Next		5044328						
ANR	5044457	Symbol	vdisk -> filename		5044328						
ANR	5044458	Symbol	vdisk -> permission . Value		5044328						
ANR	5044459	Symbol	true		5044328						
ANR	5044460	Symbol	strcasecmp		5044328						
ANR	5044461	Symbol	vdisk		5044328						
ANR	5044462	Function	VirshType :: updateLocalWriteDiskTimestamp	1107:0:28402:29041							
ANR	5044463	FunctionDef	VirshType :: updateLocalWriteDiskTimestamp (time_t timestamp)		5044462	0					
ANR	5044464	CompoundStatement		1109:0:28466:29041	5044462	0					
ANR	5044465	IdentifierDeclStatement	char * tmp_file = NULL ;	1110:1:28469:28490	5044462	0	True				
ANR	5044466	IdentifierDecl	* tmp_file = NULL		5044462	0					
ANR	5044467	IdentifierDeclType	char *		5044462	0					
ANR	5044468	Identifier	tmp_file		5044462	1					
ANR	5044469	AssignmentExpression	* tmp_file = NULL		5044462	2		=			
ANR	5044470	Identifier	NULL		5044462	0					
ANR	5044471	Identifier	NULL		5044462	1					
ANR	5044472	IdentifierDeclStatement	StringList working_files ;	1111:1:28493:28517	5044462	1	True				
ANR	5044473	IdentifierDecl	working_files		5044462	0					
ANR	5044474	IdentifierDeclType	StringList		5044462	0					
ANR	5044475	Identifier	working_files		5044462	1					
ANR	5044476	IdentifierDeclStatement	struct utimbuf timewrap ;	1112:1:28520:28543	5044462	2	True				
ANR	5044477	IdentifierDecl	timewrap		5044462	0					
ANR	5044478	IdentifierDeclType	struct utimbuf		5044462	0					
ANR	5044479	Identifier	timewrap		5044462	1					
ANR	5044480	ExpressionStatement	"find_all_files_in_dir ( m_workingpath . Value ( ) , working_files , true )"	1114:1:28547:28612	5044462	3	True				
ANR	5044481	CallExpression	"find_all_files_in_dir ( m_workingpath . Value ( ) , working_files , true )"		5044462	0					
ANR	5044482	Callee	find_all_files_in_dir		5044462	0					
ANR	5044483	Identifier	find_all_files_in_dir		5044462	0					
ANR	5044484	ArgumentList	m_workingpath . Value ( )		5044462	1					
ANR	5044485	Argument	m_workingpath . Value ( )		5044462	0					
ANR	5044486	CallExpression	m_workingpath . Value ( )		5044462	0					
ANR	5044487	Callee	m_workingpath . Value		5044462	0					
ANR	5044488	MemberAccess	m_workingpath . Value		5044462	0					
ANR	5044489	Identifier	m_workingpath		5044462	0					
ANR	5044490	Identifier	Value		5044462	1					
ANR	5044491	ArgumentList			5044462	1					
ANR	5044492	Argument	working_files		5044462	1					
ANR	5044493	Identifier	working_files		5044462	0					
ANR	5044494	Argument	true		5044462	2					
ANR	5044495	Identifier	true		5044462	0					
ANR	5044496	ExpressionStatement	working_files . rewind ( )	1116:1:28616:28638	5044462	4	True				
ANR	5044497	CallExpression	working_files . rewind ( )		5044462	0					
ANR	5044498	Callee	working_files . rewind		5044462	0					
ANR	5044499	MemberAccess	working_files . rewind		5044462	0					
ANR	5044500	Identifier	working_files		5044462	0					
ANR	5044501	Identifier	rewind		5044462	1					
ANR	5044502	ArgumentList			5044462	1					
ANR	5044503	WhileStatement	while ( ( tmp_file = working_files . next ( ) ) != NULL )		5044462	5					
ANR	5044504	Condition	( tmp_file = working_files . next ( ) ) != NULL	1117:8:28648:28688	5044462	0	True				
ANR	5044505	EqualityExpression	( tmp_file = working_files . next ( ) ) != NULL		5044462	0		!=			
ANR	5044506	AssignmentExpression	tmp_file = working_files . next ( )		5044462	0		=			
ANR	5044507	Identifier	tmp_file		5044462	0					
ANR	5044508	CallExpression	working_files . next ( )		5044462	1					
ANR	5044509	Callee	working_files . next		5044462	0					
ANR	5044510	MemberAccess	working_files . next		5044462	0					
ANR	5044511	Identifier	working_files		5044462	0					
ANR	5044512	Identifier	next		5044462	1					
ANR	5044513	ArgumentList			5044462	1					
ANR	5044514	Identifier	NULL		5044462	1					
ANR	5044515	CompoundStatement		9:52:225:225	5044462	1					
ANR	5044516	IfStatement	if ( writableXenDisk ( tmp_file ) )		5044462	0					
ANR	5044517	Condition	writableXenDisk ( tmp_file )	1122:6:28908:28932	5044462	0	True				
ANR	5044518	CallExpression	writableXenDisk ( tmp_file )		5044462	0					
ANR	5044519	Callee	writableXenDisk		5044462	0					
ANR	5044520	Identifier	writableXenDisk		5044462	0					
ANR	5044521	ArgumentList	tmp_file		5044462	1					
ANR	5044522	Argument	tmp_file		5044462	0					
ANR	5044523	Identifier	tmp_file		5044462	0					
ANR	5044524	CompoundStatement		14:34:469:469	5044462	1					
ANR	5044525	ExpressionStatement	timewrap . actime = timestamp	1123:3:28941:28968	5044462	0	True				
ANR	5044526	AssignmentExpression	timewrap . actime = timestamp		5044462	0		=			
ANR	5044527	MemberAccess	timewrap . actime		5044462	0					
ANR	5044528	Identifier	timewrap		5044462	0					
ANR	5044529	Identifier	actime		5044462	1					
ANR	5044530	Identifier	timestamp		5044462	1					
ANR	5044531	ExpressionStatement	timewrap . modtime = timestamp	1124:3:28973:29001	5044462	1	True				
ANR	5044532	AssignmentExpression	timewrap . modtime = timestamp		5044462	0		=			
ANR	5044533	MemberAccess	timewrap . modtime		5044462	0					
ANR	5044534	Identifier	timewrap		5044462	0					
ANR	5044535	Identifier	modtime		5044462	1					
ANR	5044536	Identifier	timestamp		5044462	1					
ANR	5044537	ExpressionStatement	"utime ( tmp_file , & timewrap )"	1125:3:29006:29032	5044462	2	True				
ANR	5044538	CallExpression	"utime ( tmp_file , & timewrap )"		5044462	0					
ANR	5044539	Callee	utime		5044462	0					
ANR	5044540	Identifier	utime		5044462	0					
ANR	5044541	ArgumentList	tmp_file		5044462	1					
ANR	5044542	Argument	tmp_file		5044462	0					
ANR	5044543	Identifier	tmp_file		5044462	0					
ANR	5044544	Argument	& timewrap		5044462	1					
ANR	5044545	UnaryOperationExpression	& timewrap		5044462	0					
ANR	5044546	UnaryOperator	&		5044462	0					
ANR	5044547	Identifier	timewrap		5044462	1					
ANR	5044548	ReturnType	void		5044462	1					
ANR	5044549	Identifier	VirshType :: updateLocalWriteDiskTimestamp		5044462	2					
ANR	5044550	ParameterList	time_t timestamp		5044462	3					
ANR	5044551	Parameter	time_t timestamp	1108:41:28448:28463	5044462	0	True				
ANR	5044552	ParameterType	time_t		5044462	0					
ANR	5044553	Identifier	timestamp		5044462	1					
ANR	5044554	CFGEntryNode	ENTRY		5044462		True				
ANR	5044555	CFGExitNode	EXIT		5044462		True				
ANR	5044556	Symbol	working_files . next		5044462						
ANR	5044557	Symbol	NULL		5044462						
ANR	5044558	Symbol	m_workingpath . Value		5044462						
ANR	5044559	Symbol	& timewrap		5044462						
ANR	5044560	Symbol	timewrap		5044462						
ANR	5044561	Symbol	timewrap . actime		5044462						
ANR	5044562	Symbol	working_files		5044462						
ANR	5044563	Symbol	m_workingpath		5044462						
ANR	5044564	Symbol	true		5044462						
ANR	5044565	Symbol	writableXenDisk		5044462						
ANR	5044566	Symbol	tmp_file		5044462						
ANR	5044567	Symbol	timewrap . modtime		5044462						
ANR	5044568	Symbol	timestamp		5044462						
ANR	5044569	Function	VirshType :: updateAllWriteDiskTimestamp	1130:0:29044:29471							
ANR	5044570	FunctionDef	VirshType :: updateAllWriteDiskTimestamp (time_t timestamp)		5044569	0					
ANR	5044571	CompoundStatement		1132:0:29106:29471	5044569	0					
ANR	5044572	IdentifierDeclStatement	struct utimbuf timewrap ;	1133:1:29109:29132	5044569	0	True				
ANR	5044573	IdentifierDecl	timewrap		5044569	0					
ANR	5044574	IdentifierDeclType	struct utimbuf		5044569	0					
ANR	5044575	Identifier	timewrap		5044569	1					
ANR	5044576	IdentifierDeclStatement	XenDisk * vdisk = NULL ;	1135:1:29136:29157	5044569	1	True				
ANR	5044577	IdentifierDecl	* vdisk = NULL		5044569	0					
ANR	5044578	IdentifierDeclType	XenDisk *		5044569	0					
ANR	5044579	Identifier	vdisk		5044569	1					
ANR	5044580	AssignmentExpression	* vdisk = NULL		5044569	2		=			
ANR	5044581	Identifier	NULL		5044569	0					
ANR	5044582	Identifier	NULL		5044569	1					
ANR	5044583	ExpressionStatement	m_disk_list . Rewind ( )	1136:1:29160:29180	5044569	2	True				
ANR	5044584	CallExpression	m_disk_list . Rewind ( )		5044569	0					
ANR	5044585	Callee	m_disk_list . Rewind		5044569	0					
ANR	5044586	MemberAccess	m_disk_list . Rewind		5044569	0					
ANR	5044587	Identifier	m_disk_list		5044569	0					
ANR	5044588	Identifier	Rewind		5044569	1					
ANR	5044589	ArgumentList			5044569	1					
ANR	5044590	WhileStatement	while ( m_disk_list . Next ( vdisk ) )		5044569	3					
ANR	5044591	Condition	m_disk_list . Next ( vdisk )	1137:8:29190:29212	5044569	0	True				
ANR	5044592	CallExpression	m_disk_list . Next ( vdisk )		5044569	0					
ANR	5044593	Callee	m_disk_list . Next		5044569	0					
ANR	5044594	MemberAccess	m_disk_list . Next		5044569	0					
ANR	5044595	Identifier	m_disk_list		5044569	0					
ANR	5044596	Identifier	Next		5044569	1					
ANR	5044597	ArgumentList	vdisk		5044569	1					
ANR	5044598	Argument	vdisk		5044569	0					
ANR	5044599	Identifier	vdisk		5044569	0					
ANR	5044600	CompoundStatement		6:34:109:109	5044569	1					
ANR	5044601	IfStatement	"if ( ! strcasecmp ( vdisk -> permission . Value ( ) , ""w"" ) || ! strcasecmp ( vdisk -> permission . Value ( ) , ""rw"" ) )"		5044569	0					
ANR	5044602	Condition	"! strcasecmp ( vdisk -> permission . Value ( ) , ""w"" ) || ! strcasecmp ( vdisk -> permission . Value ( ) , ""rw"" )"	1138:6:29224:29318	5044569	0	True				
ANR	5044603	OrExpression	"! strcasecmp ( vdisk -> permission . Value ( ) , ""w"" ) || ! strcasecmp ( vdisk -> permission . Value ( ) , ""rw"" )"		5044569	0		||			
ANR	5044604	UnaryOperationExpression	"! strcasecmp ( vdisk -> permission . Value ( ) , ""w"" )"		5044569	0					
ANR	5044605	UnaryOperator	!		5044569	0					
ANR	5044606	CallExpression	"strcasecmp ( vdisk -> permission . Value ( ) , ""w"" )"		5044569	1					
ANR	5044607	Callee	strcasecmp		5044569	0					
ANR	5044608	Identifier	strcasecmp		5044569	0					
ANR	5044609	ArgumentList	vdisk -> permission . Value ( )		5044569	1					
ANR	5044610	Argument	vdisk -> permission . Value ( )		5044569	0					
ANR	5044611	CallExpression	vdisk -> permission . Value ( )		5044569	0					
ANR	5044612	Callee	vdisk -> permission . Value		5044569	0					
ANR	5044613	MemberAccess	vdisk -> permission . Value		5044569	0					
ANR	5044614	PtrMemberAccess	vdisk -> permission		5044569	0					
ANR	5044615	Identifier	vdisk		5044569	0					
ANR	5044616	Identifier	permission		5044569	1					
ANR	5044617	Identifier	Value		5044569	1					
ANR	5044618	ArgumentList			5044569	1					
ANR	5044619	Argument	"""w"""		5044569	1					
ANR	5044620	PrimaryExpression	"""w"""		5044569	0					
ANR	5044621	UnaryOperationExpression	"! strcasecmp ( vdisk -> permission . Value ( ) , ""rw"" )"		5044569	1					
ANR	5044622	UnaryOperator	!		5044569	0					
ANR	5044623	CallExpression	"strcasecmp ( vdisk -> permission . Value ( ) , ""rw"" )"		5044569	1					
ANR	5044624	Callee	strcasecmp		5044569	0					
ANR	5044625	Identifier	strcasecmp		5044569	0					
ANR	5044626	ArgumentList	vdisk -> permission . Value ( )		5044569	1					
ANR	5044627	Argument	vdisk -> permission . Value ( )		5044569	0					
ANR	5044628	CallExpression	vdisk -> permission . Value ( )		5044569	0					
ANR	5044629	Callee	vdisk -> permission . Value		5044569	0					
ANR	5044630	MemberAccess	vdisk -> permission . Value		5044569	0					
ANR	5044631	PtrMemberAccess	vdisk -> permission		5044569	0					
ANR	5044632	Identifier	vdisk		5044569	0					
ANR	5044633	Identifier	permission		5044569	1					
ANR	5044634	Identifier	Value		5044569	1					
ANR	5044635	ArgumentList			5044569	1					
ANR	5044636	Argument	"""rw"""		5044569	1					
ANR	5044637	PrimaryExpression	"""rw"""		5044569	0					
ANR	5044638	CompoundStatement		8:50:214:214	5044569	1					
ANR	5044639	ExpressionStatement	timewrap . actime = timestamp	1141:3:29356:29383	5044569	0	True				
ANR	5044640	AssignmentExpression	timewrap . actime = timestamp		5044569	0		=			
ANR	5044641	MemberAccess	timewrap . actime		5044569	0					
ANR	5044642	Identifier	timewrap		5044569	0					
ANR	5044643	Identifier	actime		5044569	1					
ANR	5044644	Identifier	timestamp		5044569	1					
ANR	5044645	ExpressionStatement	timewrap . modtime = timestamp	1142:3:29388:29416	5044569	1	True				
ANR	5044646	AssignmentExpression	timewrap . modtime = timestamp		5044569	0		=			
ANR	5044647	MemberAccess	timewrap . modtime		5044569	0					
ANR	5044648	Identifier	timewrap		5044569	0					
ANR	5044649	Identifier	modtime		5044569	1					
ANR	5044650	Identifier	timestamp		5044569	1					
ANR	5044651	ExpressionStatement	"utime ( vdisk -> filename . Value ( ) , & timewrap )"	1143:3:29421:29462	5044569	2	True				
ANR	5044652	CallExpression	"utime ( vdisk -> filename . Value ( ) , & timewrap )"		5044569	0					
ANR	5044653	Callee	utime		5044569	0					
ANR	5044654	Identifier	utime		5044569	0					
ANR	5044655	ArgumentList	vdisk -> filename . Value ( )		5044569	1					
ANR	5044656	Argument	vdisk -> filename . Value ( )		5044569	0					
ANR	5044657	CallExpression	vdisk -> filename . Value ( )		5044569	0					
ANR	5044658	Callee	vdisk -> filename . Value		5044569	0					
ANR	5044659	MemberAccess	vdisk -> filename . Value		5044569	0					
ANR	5044660	PtrMemberAccess	vdisk -> filename		5044569	0					
ANR	5044661	Identifier	vdisk		5044569	0					
ANR	5044662	Identifier	filename		5044569	1					
ANR	5044663	Identifier	Value		5044569	1					
ANR	5044664	ArgumentList			5044569	1					
ANR	5044665	Argument	& timewrap		5044569	1					
ANR	5044666	UnaryOperationExpression	& timewrap		5044569	0					
ANR	5044667	UnaryOperator	&		5044569	0					
ANR	5044668	Identifier	timewrap		5044569	1					
ANR	5044669	ReturnType	void		5044569	1					
ANR	5044670	Identifier	VirshType :: updateAllWriteDiskTimestamp		5044569	2					
ANR	5044671	ParameterList	time_t timestamp		5044569	3					
ANR	5044672	Parameter	time_t timestamp	1131:39:29088:29103	5044569	0	True				
ANR	5044673	ParameterType	time_t		5044569	0					
ANR	5044674	Identifier	timestamp		5044569	1					
ANR	5044675	CFGEntryNode	ENTRY		5044569		True				
ANR	5044676	CFGExitNode	EXIT		5044569		True				
ANR	5044677	Symbol	vdisk -> permission		5044569						
ANR	5044678	Symbol	NULL		5044569						
ANR	5044679	Symbol	& timewrap		5044569						
ANR	5044680	Symbol	m_disk_list		5044569						
ANR	5044681	Symbol	vdisk -> filename . Value		5044569						
ANR	5044682	Symbol	timewrap		5044569						
ANR	5044683	Symbol	timewrap . actime		5044569						
ANR	5044684	Symbol	* vdisk		5044569						
ANR	5044685	Symbol	m_disk_list . Next		5044569						
ANR	5044686	Symbol	vdisk -> filename		5044569						
ANR	5044687	Symbol	vdisk -> permission . Value		5044569						
ANR	5044688	Symbol	strcasecmp		5044569						
ANR	5044689	Symbol	vdisk		5044569						
ANR	5044690	Symbol	timewrap . modtime		5044569						
ANR	5044691	Symbol	timestamp		5044569						
ANR	5044692	Function	VirshType :: createCkptFiles	1148:0:29474:30737							
ANR	5044693	FunctionDef	VirshType :: createCkptFiles ()		5044692	0					
ANR	5044694	CompoundStatement		1150:0:29512:30737	5044692	0					
ANR	5044695	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::createCkptFiles\\n"" )"	1151:1:29515:29575	5044692	0	True				
ANR	5044696	CallExpression	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::createCkptFiles\\n"" )"		5044692	0					
ANR	5044697	Callee	vmprintf		5044692	0					
ANR	5044698	Identifier	vmprintf		5044692	0					
ANR	5044699	ArgumentList	D_FULLDEBUG		5044692	1					
ANR	5044700	Argument	D_FULLDEBUG		5044692	0					
ANR	5044701	Identifier	D_FULLDEBUG		5044692	0					
ANR	5044702	Argument	"""Inside VirshType::createCkptFiles\\n"""		5044692	1					
ANR	5044703	PrimaryExpression	"""Inside VirshType::createCkptFiles\\n"""		5044692	0					
ANR	5044704	IfStatement	if ( getVMStatus ( ) == VM_STOPPED )		5044692	1					
ANR	5044705	Condition	getVMStatus ( ) == VM_STOPPED	1154:5:29628:29654	5044692	0	True				
ANR	5044706	EqualityExpression	getVMStatus ( ) == VM_STOPPED		5044692	0		==			
ANR	5044707	CallExpression	getVMStatus ( )		5044692	0					
ANR	5044708	Callee	getVMStatus		5044692	0					
ANR	5044709	Identifier	getVMStatus		5044692	0					
ANR	5044710	ArgumentList			5044692	1					
ANR	5044711	Identifier	VM_STOPPED		5044692	1					
ANR	5044712	CompoundStatement		5:35:145:145	5044692	1					
ANR	5044713	ExpressionStatement	"vmprintf ( D_ALWAYS , ""createCkptFiles is called for a stopped VM\\n"" )"	1155:2:29662:29728	5044692	0	True				
ANR	5044714	CallExpression	"vmprintf ( D_ALWAYS , ""createCkptFiles is called for a stopped VM\\n"" )"		5044692	0					
ANR	5044715	Callee	vmprintf		5044692	0					
ANR	5044716	Identifier	vmprintf		5044692	0					
ANR	5044717	ArgumentList	D_ALWAYS		5044692	1					
ANR	5044718	Argument	D_ALWAYS		5044692	0					
ANR	5044719	Identifier	D_ALWAYS		5044692	0					
ANR	5044720	Argument	"""createCkptFiles is called for a stopped VM\\n"""		5044692	1					
ANR	5044721	PrimaryExpression	"""createCkptFiles is called for a stopped VM\\n"""		5044692	0					
ANR	5044722	ReturnStatement	return false ;	1156:2:29732:29744	5044692	1	True				
ANR	5044723	Identifier	false		5044692	0					
ANR	5044724	IfStatement	if ( getVMStatus ( ) == VM_RUNNING )		5044692	2					
ANR	5044725	Condition	getVMStatus ( ) == VM_RUNNING	1159:5:29755:29781	5044692	0	True				
ANR	5044726	EqualityExpression	getVMStatus ( ) == VM_RUNNING		5044692	0		==			
ANR	5044727	CallExpression	getVMStatus ( )		5044692	0					
ANR	5044728	Callee	getVMStatus		5044692	0					
ANR	5044729	Identifier	getVMStatus		5044692	0					
ANR	5044730	ArgumentList			5044692	1					
ANR	5044731	Identifier	VM_RUNNING		5044692	1					
ANR	5044732	CompoundStatement		10:35:272:272	5044692	1					
ANR	5044733	IfStatement	if ( Suspend ( ) == false )		5044692	0					
ANR	5044734	Condition	Suspend ( ) == false	1160:6:29793:29810	5044692	0	True				
ANR	5044735	EqualityExpression	Suspend ( ) == false		5044692	0		==			
ANR	5044736	CallExpression	Suspend ( )		5044692	0					
ANR	5044737	Callee	Suspend		5044692	0					
ANR	5044738	Identifier	Suspend		5044692	0					
ANR	5044739	ArgumentList			5044692	1					
ANR	5044740	Identifier	false		5044692	1					
ANR	5044741	CompoundStatement		11:27:301:301	5044692	1					
ANR	5044742	ReturnStatement	return false ;	1161:3:29819:29831	5044692	0	True				
ANR	5044743	Identifier	false		5044692	0					
ANR	5044744	IfStatement	if ( getVMStatus ( ) == VM_SUSPENDED )		5044692	3					
ANR	5044745	Condition	getVMStatus ( ) == VM_SUSPENDED	1165:5:29846:29874	5044692	0	True				
ANR	5044746	EqualityExpression	getVMStatus ( ) == VM_SUSPENDED		5044692	0		==			
ANR	5044747	CallExpression	getVMStatus ( )		5044692	0					
ANR	5044748	Callee	getVMStatus		5044692	0					
ANR	5044749	Identifier	getVMStatus		5044692	0					
ANR	5044750	ArgumentList			5044692	1					
ANR	5044751	Identifier	VM_SUSPENDED		5044692	1					
ANR	5044752	CompoundStatement		22:2:527:584	5044692	1					
ANR	5044753	IdentifierDeclStatement	time_t current_time = time ( NULL ) ;	1167:2:29911:29943	5044692	0	True				
ANR	5044754	IdentifierDecl	current_time = time ( NULL )		5044692	0					
ANR	5044755	IdentifierDeclType	time_t		5044692	0					
ANR	5044756	Identifier	current_time		5044692	1					
ANR	5044757	AssignmentExpression	current_time = time ( NULL )		5044692	2		=			
ANR	5044758	Identifier	current_time		5044692	0					
ANR	5044759	CallExpression	time ( NULL )		5044692	1					
ANR	5044760	Callee	time		5044692	0					
ANR	5044761	Identifier	time		5044692	0					
ANR	5044762	ArgumentList	NULL		5044692	1					
ANR	5044763	Argument	NULL		5044692	0					
ANR	5044764	Identifier	NULL		5044692	0					
ANR	5044765	IdentifierDeclStatement	MyString timestampfile ( m_suspendfile ) ;	1168:2:29947:29984	5044692	1	True				
ANR	5044766	IdentifierDecl	timestampfile ( m_suspendfile )		5044692	0					
ANR	5044767	IdentifierDeclType	MyString		5044692	0					
ANR	5044768	Identifier	timestampfile		5044692	1					
ANR	5044769	Identifier	m_suspendfile		5044692	2					
ANR	5044770	ExpressionStatement	timestampfile += XEN_CKPT_TIMESTAMP_FILE_SUFFIX	1169:2:29988:30035	5044692	2	True				
ANR	5044771	AssignmentExpression	timestampfile += XEN_CKPT_TIMESTAMP_FILE_SUFFIX		5044692	0		+=			
ANR	5044772	Identifier	timestampfile		5044692	0					
ANR	5044773	Identifier	XEN_CKPT_TIMESTAMP_FILE_SUFFIX		5044692	1					
ANR	5044774	IdentifierDeclStatement	"FILE * fp = safe_fopen_wrapper ( timestampfile . Value ( ) , ""w"" ) ;"	1171:2:30040:30097	5044692	3	True				
ANR	5044775	IdentifierDecl	"* fp = safe_fopen_wrapper ( timestampfile . Value ( ) , ""w"" )"		5044692	0					
ANR	5044776	IdentifierDeclType	FILE *		5044692	0					
ANR	5044777	Identifier	fp		5044692	1					
ANR	5044778	AssignmentExpression	"* fp = safe_fopen_wrapper ( timestampfile . Value ( ) , ""w"" )"		5044692	2		=			
ANR	5044779	Identifier	fp		5044692	0					
ANR	5044780	CallExpression	"safe_fopen_wrapper ( timestampfile . Value ( ) , ""w"" )"		5044692	1					
ANR	5044781	Callee	safe_fopen_wrapper		5044692	0					
ANR	5044782	Identifier	safe_fopen_wrapper		5044692	0					
ANR	5044783	ArgumentList	timestampfile . Value ( )		5044692	1					
ANR	5044784	Argument	timestampfile . Value ( )		5044692	0					
ANR	5044785	CallExpression	timestampfile . Value ( )		5044692	0					
ANR	5044786	Callee	timestampfile . Value		5044692	0					
ANR	5044787	MemberAccess	timestampfile . Value		5044692	0					
ANR	5044788	Identifier	timestampfile		5044692	0					
ANR	5044789	Identifier	Value		5044692	1					
ANR	5044790	ArgumentList			5044692	1					
ANR	5044791	Argument	"""w"""		5044692	1					
ANR	5044792	PrimaryExpression	"""w"""		5044692	0					
ANR	5044793	IfStatement	if ( ! fp )		5044692	4					
ANR	5044794	Condition	! fp	1172:6:30105:30107	5044692	0	True				
ANR	5044795	UnaryOperationExpression	! fp		5044692	0					
ANR	5044796	UnaryOperator	!		5044692	0					
ANR	5044797	Identifier	fp		5044692	1					
ANR	5044798	CompoundStatement		23:12:598:598	5044692	1					
ANR	5044799	Statement	vmprintf	1173:3:30116:30123	5044692	0	True				
ANR	5044800	Statement	(	1173:11:30124:30124	5044692	1	True				
ANR	5044801	Statement	D_ALWAYS	1173:12:30125:30132	5044692	2	True				
ANR	5044802	Statement	","	1173:20:30133:30133	5044692	3	True				
ANR	5044803	Statement	"""failed to safe_fopen_wrapper file(%s) for """	1173:22:30135:30178	5044692	4	True				
ANR	5044804	Statement	"""checkpoint timestamp : safe_fopen_wrapper returns %s\\n"""	1174:5:30185:30240	5044692	5	True				
ANR	5044805	Statement	","	1174:61:30241:30241	5044692	6	True				
ANR	5044806	Statement	timestampfile	1175:5:30248:30260	5044692	7	True				
ANR	5044807	Statement	.	1175:18:30261:30261	5044692	8	True				
ANR	5044808	Statement	Value	1175:19:30262:30266	5044692	9	True				
ANR	5044809	Statement	(	1175:24:30267:30267	5044692	10	True				
ANR	5044810	Statement	)	1175:25:30268:30268	5044692	11	True				
ANR	5044811	Statement	","	1175:26:30269:30269	5044692	12	True				
ANR	5044812	Statement	strerror	1175:28:30271:30278	5044692	13	True				
ANR	5044813	Statement	(	1175:36:30279:30279	5044692	14	True				
ANR	5044814	Statement	errno	1175:37:30280:30284	5044692	15	True				
ANR	5044815	Statement	)	1175:42:30285:30285	5044692	16	True				
ANR	5044816	Statement	)	1175:43:30286:30286	5044692	17	True				
ANR	5044817	ExpressionStatement		1175:44:30287:30287	5044692	18	True				
ANR	5044818	ExpressionStatement	Resume ( )	1176:3:30292:30300	5044692	19	True				
ANR	5044819	CallExpression	Resume ( )		5044692	0					
ANR	5044820	Callee	Resume		5044692	0					
ANR	5044821	Identifier	Resume		5044692	0					
ANR	5044822	ArgumentList			5044692	1					
ANR	5044823	ReturnStatement	return false ;	1177:3:30305:30317	5044692	20	True				
ANR	5044824	Identifier	false		5044692	0					
ANR	5044825	IfStatement	"if ( fprintf ( fp , ""%d\\n"" , ( int ) current_time ) < 0 )"		5044692	5					
ANR	5044826	Condition	"fprintf ( fp , ""%d\\n"" , ( int ) current_time ) < 0"	1179:6:30329:30370	5044692	0	True				
ANR	5044827	RelationalExpression	"fprintf ( fp , ""%d\\n"" , ( int ) current_time ) < 0"		5044692	0		<			
ANR	5044828	CallExpression	"fprintf ( fp , ""%d\\n"" , ( int ) current_time )"		5044692	0					
ANR	5044829	Callee	fprintf		5044692	0					
ANR	5044830	Identifier	fprintf		5044692	0					
ANR	5044831	ArgumentList	fp		5044692	1					
ANR	5044832	Argument	fp		5044692	0					
ANR	5044833	Identifier	fp		5044692	0					
ANR	5044834	Argument	"""%d\\n"""		5044692	1					
ANR	5044835	PrimaryExpression	"""%d\\n"""		5044692	0					
ANR	5044836	Argument	( int ) current_time		5044692	2					
ANR	5044837	CastExpression	( int ) current_time		5044692	0					
ANR	5044838	CastTarget	int		5044692	0					
ANR	5044839	Identifier	current_time		5044692	1					
ANR	5044840	PrimaryExpression	0		5044692	1					
ANR	5044841	CompoundStatement		30:51:861:861	5044692	1					
ANR	5044842	ExpressionStatement	fclose ( fp )	1180:3:30379:30389	5044692	0	True				
ANR	5044843	CallExpression	fclose ( fp )		5044692	0					
ANR	5044844	Callee	fclose		5044692	0					
ANR	5044845	Identifier	fclose		5044692	0					
ANR	5044846	ArgumentList	fp		5044692	1					
ANR	5044847	Argument	fp		5044692	0					
ANR	5044848	Identifier	fp		5044692	0					
ANR	5044849	ExpressionStatement	unlink ( timestampfile . Value ( ) )	1181:3:30394:30423	5044692	1	True				
ANR	5044850	CallExpression	unlink ( timestampfile . Value ( ) )		5044692	0					
ANR	5044851	Callee	unlink		5044692	0					
ANR	5044852	Identifier	unlink		5044692	0					
ANR	5044853	ArgumentList	timestampfile . Value ( )		5044692	1					
ANR	5044854	Argument	timestampfile . Value ( )		5044692	0					
ANR	5044855	CallExpression	timestampfile . Value ( )		5044692	0					
ANR	5044856	Callee	timestampfile . Value		5044692	0					
ANR	5044857	MemberAccess	timestampfile . Value		5044692	0					
ANR	5044858	Identifier	timestampfile		5044692	0					
ANR	5044859	Identifier	Value		5044692	1					
ANR	5044860	ArgumentList			5044692	1					
ANR	5044861	Statement	vmprintf	1182:3:30428:30435	5044692	2	True				
ANR	5044862	Statement	(	1182:11:30436:30436	5044692	3	True				
ANR	5044863	Statement	D_ALWAYS	1182:12:30437:30444	5044692	4	True				
ANR	5044864	Statement	","	1182:20:30445:30445	5044692	5	True				
ANR	5044865	Statement	"""failed to fprintf for checkpoint timestamp """	1182:22:30447:30491	5044692	6	True				
ANR	5044866	Statement	"""file(%s:%s)\\n"""	1183:5:30498:30512	5044692	7	True				
ANR	5044867	Statement	","	1183:20:30513:30513	5044692	8	True				
ANR	5044868	Statement	timestampfile	1183:22:30515:30527	5044692	9	True				
ANR	5044869	Statement	.	1183:35:30528:30528	5044692	10	True				
ANR	5044870	Statement	Value	1183:36:30529:30533	5044692	11	True				
ANR	5044871	Statement	(	1183:41:30534:30534	5044692	12	True				
ANR	5044872	Statement	)	1183:42:30535:30535	5044692	13	True				
ANR	5044873	Statement	","	1183:43:30536:30536	5044692	14	True				
ANR	5044874	Statement	strerror	1183:45:30538:30545	5044692	15	True				
ANR	5044875	Statement	(	1183:53:30546:30546	5044692	16	True				
ANR	5044876	Statement	errno	1183:54:30547:30551	5044692	17	True				
ANR	5044877	Statement	)	1183:59:30552:30552	5044692	18	True				
ANR	5044878	Statement	)	1183:60:30553:30553	5044692	19	True				
ANR	5044879	ExpressionStatement		1183:61:30554:30554	5044692	20	True				
ANR	5044880	ExpressionStatement	Resume ( )	1184:3:30559:30567	5044692	21	True				
ANR	5044881	CallExpression	Resume ( )		5044692	0					
ANR	5044882	Callee	Resume		5044692	0					
ANR	5044883	Identifier	Resume		5044692	0					
ANR	5044884	ArgumentList			5044692	1					
ANR	5044885	ReturnStatement	return false ;	1185:3:30572:30584	5044692	22	True				
ANR	5044886	Identifier	false		5044692	0					
ANR	5044887	ExpressionStatement	fclose ( fp )	1187:2:30592:30602	5044692	6	True				
ANR	5044888	CallExpression	fclose ( fp )		5044692	0					
ANR	5044889	Callee	fclose		5044692	0					
ANR	5044890	Identifier	fclose		5044692	0					
ANR	5044891	ArgumentList	fp		5044692	1					
ANR	5044892	Argument	fp		5044692	0					
ANR	5044893	Identifier	fp		5044692	0					
ANR	5044894	ExpressionStatement	updateAllWriteDiskTimestamp ( current_time )	1188:2:30606:30647	5044692	7	True				
ANR	5044895	CallExpression	updateAllWriteDiskTimestamp ( current_time )		5044692	0					
ANR	5044896	Callee	updateAllWriteDiskTimestamp		5044692	0					
ANR	5044897	Identifier	updateAllWriteDiskTimestamp		5044692	0					
ANR	5044898	ArgumentList	current_time		5044692	1					
ANR	5044899	Argument	current_time		5044692	0					
ANR	5044900	Identifier	current_time		5044692	0					
ANR	5044901	ExpressionStatement	m_is_checkpointed = true	1191:2:30677:30701	5044692	8	True				
ANR	5044902	AssignmentExpression	m_is_checkpointed = true		5044692	0		=			
ANR	5044903	Identifier	m_is_checkpointed		5044692	0					
ANR	5044904	Identifier	true		5044692	1					
ANR	5044905	ReturnStatement	return true ;	1192:2:30705:30716	5044692	9	True				
ANR	5044906	Identifier	true		5044692	0					
ANR	5044907	ReturnStatement	return false ;	1195:1:30723:30735	5044692	4	True				
ANR	5044908	Identifier	false		5044692	0					
ANR	5044909	ReturnType	bool		5044692	1					
ANR	5044910	Identifier	VirshType :: createCkptFiles		5044692	2					
ANR	5044911	ParameterList			5044692	3					
ANR	5044912	CFGEntryNode	ENTRY		5044692		True				
ANR	5044913	CFGExitNode	EXIT		5044692		True				
ANR	5044914	Symbol	timestampfile		5044692						
ANR	5044915	Symbol	NULL		5044692						
ANR	5044916	Symbol	XEN_CKPT_TIMESTAMP_FILE_SUFFIX		5044692						
ANR	5044917	Symbol	safe_fopen_wrapper		5044692						
ANR	5044918	Symbol	getVMStatus		5044692						
ANR	5044919	Symbol	D_ALWAYS		5044692						
ANR	5044920	Symbol	false		5044692						
ANR	5044921	Symbol	VM_STOPPED		5044692						
ANR	5044922	Symbol	Suspend		5044692						
ANR	5044923	Symbol	D_FULLDEBUG		5044692						
ANR	5044924	Symbol	fp		5044692						
ANR	5044925	Symbol	fprintf		5044692						
ANR	5044926	Symbol	VM_SUSPENDED		5044692						
ANR	5044927	Symbol	m_is_checkpointed		5044692						
ANR	5044928	Symbol	true		5044692						
ANR	5044929	Symbol	time		5044692						
ANR	5044930	Symbol	VM_RUNNING		5044692						
ANR	5044931	Symbol	current_time		5044692						
ANR	5044932	Symbol	timestampfile . Value		5044692						
ANR	5044933	Function	KVMType :: checkXenParams	1198:0:30740:31265							
ANR	5044934	FunctionDef	KVMType :: checkXenParams (VMGahpConfig * config)		5044933	0					
ANR	5044935	CompoundStatement		1199:0:30792:31265	5044933	0					
ANR	5044936	IdentifierDeclStatement	MyString fixedvalue ;	1200:2:30796:30815	5044933	0	True				
ANR	5044937	IdentifierDecl	fixedvalue		5044933	0					
ANR	5044938	IdentifierDeclType	MyString		5044933	0					
ANR	5044939	Identifier	fixedvalue		5044933	1					
ANR	5044940	IfStatement	if ( ! config )		5044933	1					
ANR	5044941	Condition	! config	1201:6:30823:30829	5044933	0	True				
ANR	5044942	UnaryOperationExpression	! config		5044933	0					
ANR	5044943	UnaryOperator	!		5044933	0					
ANR	5044944	Identifier	config		5044933	1					
ANR	5044945	CompoundStatement		3:16:40:40	5044933	1					
ANR	5044946	ReturnStatement	return false ;	1202:4:30839:30851	5044933	0	True				
ANR	5044947	Identifier	false		5044933	0					
ANR	5044948	IfStatement	"if ( check_vm_read_access_file ( ""/dev/kvm"" , true ) == false )"		5044933	2					
ANR	5044949	Condition	"check_vm_read_access_file ( ""/dev/kvm"" , true ) == false"	1206:5:30920:30971	5044933	0	True				
ANR	5044950	EqualityExpression	"check_vm_read_access_file ( ""/dev/kvm"" , true ) == false"		5044933	0		==			
ANR	5044951	CallExpression	"check_vm_read_access_file ( ""/dev/kvm"" , true )"		5044933	0					
ANR	5044952	Callee	check_vm_read_access_file		5044933	0					
ANR	5044953	Identifier	check_vm_read_access_file		5044933	0					
ANR	5044954	ArgumentList	"""/dev/kvm"""		5044933	1					
ANR	5044955	Argument	"""/dev/kvm"""		5044933	0					
ANR	5044956	PrimaryExpression	"""/dev/kvm"""		5044933	0					
ANR	5044957	Argument	true		5044933	1					
ANR	5044958	Identifier	true		5044933	0					
ANR	5044959	Identifier	false		5044933	1					
ANR	5044960	CompoundStatement		8:59:181:181	5044933	1					
ANR	5044961	ExpressionStatement	"vmprintf ( D_ALWAYS , ""\\nFile Permission Error: Cannot read /dev/kvm as root\\n"" )"	1207:4:30980:31057	5044933	0	True				
ANR	5044962	CallExpression	"vmprintf ( D_ALWAYS , ""\\nFile Permission Error: Cannot read /dev/kvm as root\\n"" )"		5044933	0					
ANR	5044963	Callee	vmprintf		5044933	0					
ANR	5044964	Identifier	vmprintf		5044933	0					
ANR	5044965	ArgumentList	D_ALWAYS		5044933	1					
ANR	5044966	Argument	D_ALWAYS		5044933	0					
ANR	5044967	Identifier	D_ALWAYS		5044933	0					
ANR	5044968	Argument	"""\\nFile Permission Error: Cannot read /dev/kvm as root\\n"""		5044933	1					
ANR	5044969	PrimaryExpression	"""\\nFile Permission Error: Cannot read /dev/kvm as root\\n"""		5044933	0					
ANR	5044970	ReturnStatement	return false ;	1208:4:31063:31075	5044933	1	True				
ANR	5044971	Identifier	false		5044933	0					
ANR	5044972	IfStatement	"if ( check_vm_write_access_file ( ""/dev/kvm"" , true ) == false )"		5044933	3					
ANR	5044973	Condition	"check_vm_write_access_file ( ""/dev/kvm"" , true ) == false"	1210:5:31086:31138	5044933	0	True				
ANR	5044974	EqualityExpression	"check_vm_write_access_file ( ""/dev/kvm"" , true ) == false"		5044933	0		==			
ANR	5044975	CallExpression	"check_vm_write_access_file ( ""/dev/kvm"" , true )"		5044933	0					
ANR	5044976	Callee	check_vm_write_access_file		5044933	0					
ANR	5044977	Identifier	check_vm_write_access_file		5044933	0					
ANR	5044978	ArgumentList	"""/dev/kvm"""		5044933	1					
ANR	5044979	Argument	"""/dev/kvm"""		5044933	0					
ANR	5044980	PrimaryExpression	"""/dev/kvm"""		5044933	0					
ANR	5044981	Argument	true		5044933	1					
ANR	5044982	Identifier	true		5044933	0					
ANR	5044983	Identifier	false		5044933	1					
ANR	5044984	CompoundStatement		12:60:348:348	5044933	1					
ANR	5044985	ExpressionStatement	"vmprintf ( D_ALWAYS , ""\\nFile Permission Error: Cannot write /dev/kvm as root\\n"" )"	1211:4:31147:31225	5044933	0	True				
ANR	5044986	CallExpression	"vmprintf ( D_ALWAYS , ""\\nFile Permission Error: Cannot write /dev/kvm as root\\n"" )"		5044933	0					
ANR	5044987	Callee	vmprintf		5044933	0					
ANR	5044988	Identifier	vmprintf		5044933	0					
ANR	5044989	ArgumentList	D_ALWAYS		5044933	1					
ANR	5044990	Argument	D_ALWAYS		5044933	0					
ANR	5044991	Identifier	D_ALWAYS		5044933	0					
ANR	5044992	Argument	"""\\nFile Permission Error: Cannot write /dev/kvm as root\\n"""		5044933	1					
ANR	5044993	PrimaryExpression	"""\\nFile Permission Error: Cannot write /dev/kvm as root\\n"""		5044933	0					
ANR	5044994	ReturnStatement	return false ;	1212:4:31231:31243	5044933	1	True				
ANR	5044995	Identifier	false		5044933	0					
ANR	5044996	ReturnStatement	return true ;	1214:2:31251:31262	5044933	4	True				
ANR	5044997	Identifier	true		5044933	0					
ANR	5044998	ReturnType	bool		5044933	1					
ANR	5044999	Identifier	KVMType :: checkXenParams		5044933	2					
ANR	5045000	ParameterList	VMGahpConfig * config		5044933	3					
ANR	5045001	Parameter	VMGahpConfig * config	1198:29:30769:30789	5044933	0	True				
ANR	5045002	ParameterType	VMGahpConfig *		5044933	0					
ANR	5045003	Identifier	config		5044933	1					
ANR	5045004	CFGEntryNode	ENTRY		5044933		True				
ANR	5045005	CFGExitNode	EXIT		5044933		True				
ANR	5045006	Symbol	fixedvalue		5044933						
ANR	5045007	Symbol	false		5044933						
ANR	5045008	Symbol	true		5044933						
ANR	5045009	Symbol	D_ALWAYS		5044933						
ANR	5045010	Symbol	check_vm_write_access_file		5044933						
ANR	5045011	Symbol	config		5044933						
ANR	5045012	Symbol	check_vm_read_access_file		5044933						
ANR	5045013	Function	KVMType :: killVMFast	1218:0:31268:31554							
ANR	5045014	FunctionDef	KVMType :: killVMFast (const char * vmname)		5045013	0					
ANR	5045015	CompoundStatement		1220:0:31313:31554	5045013	0					
ANR	5045016	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""Inside KVMType::killVMFast\\n"" )"	1221:1:31316:31369	5045013	0	True				
ANR	5045017	CallExpression	"vmprintf ( D_FULLDEBUG , ""Inside KVMType::killVMFast\\n"" )"		5045013	0					
ANR	5045018	Callee	vmprintf		5045013	0					
ANR	5045019	Identifier	vmprintf		5045013	0					
ANR	5045020	ArgumentList	D_FULLDEBUG		5045013	1					
ANR	5045021	Argument	D_FULLDEBUG		5045013	0					
ANR	5045022	Identifier	D_FULLDEBUG		5045013	0					
ANR	5045023	Argument	"""Inside KVMType::killVMFast\\n"""		5045013	1					
ANR	5045024	PrimaryExpression	"""Inside KVMType::killVMFast\\n"""		5045013	0					
ANR	5045025	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	1222:1:31372:31405	5045013	1	True				
ANR	5045026	IdentifierDecl	priv = set_root_priv ( )		5045013	0					
ANR	5045027	IdentifierDeclType	priv_state		5045013	0					
ANR	5045028	Identifier	priv		5045013	1					
ANR	5045029	AssignmentExpression	priv = set_root_priv ( )		5045013	2		=			
ANR	5045030	Identifier	priv		5045013	0					
ANR	5045031	CallExpression	set_root_priv ( )		5045013	1					
ANR	5045032	Callee	set_root_priv		5045013	0					
ANR	5045033	Identifier	set_root_priv		5045013	0					
ANR	5045034	ArgumentList			5045013	1					
ANR	5045035	IdentifierDeclStatement	"virConnectPtr libvirt_connection = virConnectOpen ( ""qemu:///session"" ) ;"	1223:1:31408:31476	5045013	2	True				
ANR	5045036	IdentifierDecl	"libvirt_connection = virConnectOpen ( ""qemu:///session"" )"		5045013	0					
ANR	5045037	IdentifierDeclType	virConnectPtr		5045013	0					
ANR	5045038	Identifier	libvirt_connection		5045013	1					
ANR	5045039	AssignmentExpression	"libvirt_connection = virConnectOpen ( ""qemu:///session"" )"		5045013	2		=			
ANR	5045040	Identifier	libvirt_connection		5045013	0					
ANR	5045041	CallExpression	"virConnectOpen ( ""qemu:///session"" )"		5045013	1					
ANR	5045042	Callee	virConnectOpen		5045013	0					
ANR	5045043	Identifier	virConnectOpen		5045013	0					
ANR	5045044	ArgumentList	"""qemu:///session"""		5045013	1					
ANR	5045045	Argument	"""qemu:///session"""		5045013	0					
ANR	5045046	PrimaryExpression	"""qemu:///session"""		5045013	0					
ANR	5045047	ExpressionStatement	set_priv ( priv )	1224:1:31479:31493	5045013	3	True				
ANR	5045048	CallExpression	set_priv ( priv )		5045013	0					
ANR	5045049	Callee	set_priv		5045013	0					
ANR	5045050	Identifier	set_priv		5045013	0					
ANR	5045051	ArgumentList	priv		5045013	1					
ANR	5045052	Argument	priv		5045013	0					
ANR	5045053	Identifier	priv		5045013	0					
ANR	5045054	ReturnStatement	"return VirshType :: killVMFast ( vmname , libvirt_connection ) ;"	1225:1:31496:31552	5045013	4	True				
ANR	5045055	CallExpression	"VirshType :: killVMFast ( vmname , libvirt_connection )"		5045013	0					
ANR	5045056	Callee	VirshType :: killVMFast		5045013	0					
ANR	5045057	Identifier	VirshType :: killVMFast		5045013	0					
ANR	5045058	ArgumentList	vmname		5045013	1					
ANR	5045059	Argument	vmname		5045013	0					
ANR	5045060	Identifier	vmname		5045013	0					
ANR	5045061	Argument	libvirt_connection		5045013	1					
ANR	5045062	Identifier	libvirt_connection		5045013	0					
ANR	5045063	ReturnType	bool		5045013	1					
ANR	5045064	Identifier	KVMType :: killVMFast		5045013	2					
ANR	5045065	ParameterList	const char * vmname		5045013	3					
ANR	5045066	Parameter	const char * vmname	1219:20:31293:31310	5045013	0	True				
ANR	5045067	ParameterType	const char *		5045013	0					
ANR	5045068	Identifier	vmname		5045013	1					
ANR	5045069	CFGEntryNode	ENTRY		5045013		True				
ANR	5045070	CFGExitNode	EXIT		5045013		True				
ANR	5045071	Symbol	libvirt_connection		5045013						
ANR	5045072	Symbol	virConnectOpen		5045013						
ANR	5045073	Symbol	VirshType :: killVMFast		5045013						
ANR	5045074	Symbol	D_FULLDEBUG		5045013						
ANR	5045075	Symbol	set_root_priv		5045013						
ANR	5045076	Symbol	priv		5045013						
ANR	5045077	Symbol	vmname		5045013						
ANR	5045078	Function	XenType :: checkXenParams	1228:0:31557:32252							
ANR	5045079	FunctionDef	XenType :: checkXenParams (VMGahpConfig * config)		5045078	0					
ANR	5045080	CompoundStatement		1230:0:31608:32252	5045078	0					
ANR	5045081	IdentifierDeclStatement	char * config_value = NULL ;	1231:1:31611:31636	5045078	0	True				
ANR	5045082	IdentifierDecl	* config_value = NULL		5045078	0					
ANR	5045083	IdentifierDeclType	char *		5045078	0					
ANR	5045084	Identifier	config_value		5045078	1					
ANR	5045085	AssignmentExpression	* config_value = NULL		5045078	2		=			
ANR	5045086	Identifier	NULL		5045078	0					
ANR	5045087	Identifier	NULL		5045078	1					
ANR	5045088	IdentifierDeclStatement	MyString fixedvalue ;	1232:1:31639:31658	5045078	1	True				
ANR	5045089	IdentifierDecl	fixedvalue		5045078	0					
ANR	5045090	IdentifierDeclType	MyString		5045078	0					
ANR	5045091	Identifier	fixedvalue		5045078	1					
ANR	5045092	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""In XenType::checkXenParams()\\n"" )"	1233:1:31661:31716	5045078	2	True				
ANR	5045093	CallExpression	"vmprintf ( D_FULLDEBUG , ""In XenType::checkXenParams()\\n"" )"		5045078	0					
ANR	5045094	Callee	vmprintf		5045078	0					
ANR	5045095	Identifier	vmprintf		5045078	0					
ANR	5045096	ArgumentList	D_FULLDEBUG		5045078	1					
ANR	5045097	Argument	D_FULLDEBUG		5045078	0					
ANR	5045098	Identifier	D_FULLDEBUG		5045078	0					
ANR	5045099	Argument	"""In XenType::checkXenParams()\\n"""		5045078	1					
ANR	5045100	PrimaryExpression	"""In XenType::checkXenParams()\\n"""		5045078	0					
ANR	5045101	IfStatement	if ( ! config )		5045078	3					
ANR	5045102	Condition	! config	1234:5:31723:31729	5045078	0	True				
ANR	5045103	UnaryOperationExpression	! config		5045078	0					
ANR	5045104	UnaryOperator	!		5045078	0					
ANR	5045105	Identifier	config		5045078	1					
ANR	5045106	CompoundStatement		5:15:124:124	5045078	1					
ANR	5045107	ReturnStatement	return false ;	1235:2:31737:31749	5045078	0	True				
ANR	5045108	Identifier	false		5045078	0					
ANR	5045109	ExpressionStatement	"config_value = param ( ""XEN_BOOTLOADER"" )"	1239:1:31802:31840	5045078	4	True				
ANR	5045110	AssignmentExpression	"config_value = param ( ""XEN_BOOTLOADER"" )"		5045078	0		=			
ANR	5045111	Identifier	config_value		5045078	0					
ANR	5045112	CallExpression	"param ( ""XEN_BOOTLOADER"" )"		5045078	1					
ANR	5045113	Callee	param		5045078	0					
ANR	5045114	Identifier	param		5045078	0					
ANR	5045115	ArgumentList	"""XEN_BOOTLOADER"""		5045078	1					
ANR	5045116	Argument	"""XEN_BOOTLOADER"""		5045078	0					
ANR	5045117	PrimaryExpression	"""XEN_BOOTLOADER"""		5045078	0					
ANR	5045118	IfStatement	if ( ! config_value )		5045078	5					
ANR	5045119	Condition	! config_value	1240:5:31847:31859	5045078	0	True				
ANR	5045120	UnaryOperationExpression	! config_value		5045078	0					
ANR	5045121	UnaryOperator	!		5045078	0					
ANR	5045122	Identifier	config_value		5045078	1					
ANR	5045123	CompoundStatement		11:21:254:254	5045078	1					
ANR	5045124	ExpressionStatement	"vmprintf ( D_ALWAYS , ""\\nERROR: You should define Xen bootloader\\n"" )"	1241:2:31867:31932	5045078	0	True				
ANR	5045125	CallExpression	"vmprintf ( D_ALWAYS , ""\\nERROR: You should define Xen bootloader\\n"" )"		5045078	0					
ANR	5045126	Callee	vmprintf		5045078	0					
ANR	5045127	Identifier	vmprintf		5045078	0					
ANR	5045128	ArgumentList	D_ALWAYS		5045078	1					
ANR	5045129	Argument	D_ALWAYS		5045078	0					
ANR	5045130	Identifier	D_ALWAYS		5045078	0					
ANR	5045131	Argument	"""\\nERROR: You should define Xen bootloader\\n"""		5045078	1					
ANR	5045132	PrimaryExpression	"""\\nERROR: You should define Xen bootloader\\n"""		5045078	0					
ANR	5045133	ReturnStatement	return false ;	1242:2:31936:31948	5045078	1	True				
ANR	5045134	Identifier	false		5045078	0					
ANR	5045135	ExpressionStatement	fixedvalue = delete_quotation_marks ( config_value )	1244:1:31954:32003	5045078	6	True				
ANR	5045136	AssignmentExpression	fixedvalue = delete_quotation_marks ( config_value )		5045078	0		=			
ANR	5045137	Identifier	fixedvalue		5045078	0					
ANR	5045138	CallExpression	delete_quotation_marks ( config_value )		5045078	1					
ANR	5045139	Callee	delete_quotation_marks		5045078	0					
ANR	5045140	Identifier	delete_quotation_marks		5045078	0					
ANR	5045141	ArgumentList	config_value		5045078	1					
ANR	5045142	Argument	config_value		5045078	0					
ANR	5045143	Identifier	config_value		5045078	0					
ANR	5045144	ExpressionStatement	free ( config_value )	1245:1:32006:32024	5045078	7	True				
ANR	5045145	CallExpression	free ( config_value )		5045078	0					
ANR	5045146	Callee	free		5045078	0					
ANR	5045147	Identifier	free		5045078	0					
ANR	5045148	ArgumentList	config_value		5045078	1					
ANR	5045149	Argument	config_value		5045078	0					
ANR	5045150	Identifier	config_value		5045078	0					
ANR	5045151	IfStatement	"if ( check_vm_read_access_file ( fixedvalue . Value ( ) , true ) == false )"		5045078	8					
ANR	5045152	Condition	"check_vm_read_access_file ( fixedvalue . Value ( ) , true ) == false"	1248:5:32063:32122	5045078	0	True				
ANR	5045153	EqualityExpression	"check_vm_read_access_file ( fixedvalue . Value ( ) , true ) == false"		5045078	0		==			
ANR	5045154	CallExpression	"check_vm_read_access_file ( fixedvalue . Value ( ) , true )"		5045078	0					
ANR	5045155	Callee	check_vm_read_access_file		5045078	0					
ANR	5045156	Identifier	check_vm_read_access_file		5045078	0					
ANR	5045157	ArgumentList	fixedvalue . Value ( )		5045078	1					
ANR	5045158	Argument	fixedvalue . Value ( )		5045078	0					
ANR	5045159	CallExpression	fixedvalue . Value ( )		5045078	0					
ANR	5045160	Callee	fixedvalue . Value		5045078	0					
ANR	5045161	MemberAccess	fixedvalue . Value		5045078	0					
ANR	5045162	Identifier	fixedvalue		5045078	0					
ANR	5045163	Identifier	Value		5045078	1					
ANR	5045164	ArgumentList			5045078	1					
ANR	5045165	Argument	true		5045078	1					
ANR	5045166	Identifier	true		5045078	0					
ANR	5045167	Identifier	false		5045078	1					
ANR	5045168	CompoundStatement		19:68:517:517	5045078	1					
ANR	5045169	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Xen bootloader file '%s' cannot be read\\n"" , fixedvalue . Value ( ) )"	1249:2:32130:32217	5045078	0	True				
ANR	5045170	CallExpression	"vmprintf ( D_ALWAYS , ""Xen bootloader file '%s' cannot be read\\n"" , fixedvalue . Value ( ) )"		5045078	0					
ANR	5045171	Callee	vmprintf		5045078	0					
ANR	5045172	Identifier	vmprintf		5045078	0					
ANR	5045173	ArgumentList	D_ALWAYS		5045078	1					
ANR	5045174	Argument	D_ALWAYS		5045078	0					
ANR	5045175	Identifier	D_ALWAYS		5045078	0					
ANR	5045176	Argument	"""Xen bootloader file '%s' cannot be read\\n"""		5045078	1					
ANR	5045177	PrimaryExpression	"""Xen bootloader file '%s' cannot be read\\n"""		5045078	0					
ANR	5045178	Argument	fixedvalue . Value ( )		5045078	2					
ANR	5045179	CallExpression	fixedvalue . Value ( )		5045078	0					
ANR	5045180	Callee	fixedvalue . Value		5045078	0					
ANR	5045181	MemberAccess	fixedvalue . Value		5045078	0					
ANR	5045182	Identifier	fixedvalue		5045078	0					
ANR	5045183	Identifier	Value		5045078	1					
ANR	5045184	ArgumentList			5045078	1					
ANR	5045185	ReturnStatement	return false ;	1251:2:32221:32233	5045078	1	True				
ANR	5045186	Identifier	false		5045078	0					
ANR	5045187	ReturnStatement	return true ;	1253:1:32239:32250	5045078	9	True				
ANR	5045188	Identifier	true		5045078	0					
ANR	5045189	ReturnType	bool		5045078	1					
ANR	5045190	Identifier	XenType :: checkXenParams		5045078	2					
ANR	5045191	ParameterList	VMGahpConfig * config		5045078	3					
ANR	5045192	Parameter	VMGahpConfig * config	1229:24:31586:31605	5045078	0	True				
ANR	5045193	ParameterType	VMGahpConfig *		5045078	0					
ANR	5045194	Identifier	config		5045078	1					
ANR	5045195	CFGEntryNode	ENTRY		5045078		True				
ANR	5045196	CFGExitNode	EXIT		5045078		True				
ANR	5045197	Symbol	config_value		5045078						
ANR	5045198	Symbol	NULL		5045078						
ANR	5045199	Symbol	fixedvalue		5045078						
ANR	5045200	Symbol	param		5045078						
ANR	5045201	Symbol	fixedvalue . Value		5045078						
ANR	5045202	Symbol	false		5045078						
ANR	5045203	Symbol	D_ALWAYS		5045078						
ANR	5045204	Symbol	true		5045078						
ANR	5045205	Symbol	D_FULLDEBUG		5045078						
ANR	5045206	Symbol	delete_quotation_marks		5045078						
ANR	5045207	Symbol	config		5045078						
ANR	5045208	Symbol	check_vm_read_access_file		5045078						
ANR	5045209	Function	XenType :: killVMFast	1256:0:32255:32533							
ANR	5045210	FunctionDef	XenType :: killVMFast (const char * vmname)		5045209	0					
ANR	5045211	CompoundStatement		1258:0:32300:32533	5045209	0					
ANR	5045212	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""Inside XenType::killVMFast\\n"" )"	1259:1:32303:32356	5045209	0	True				
ANR	5045213	CallExpression	"vmprintf ( D_FULLDEBUG , ""Inside XenType::killVMFast\\n"" )"		5045209	0					
ANR	5045214	Callee	vmprintf		5045209	0					
ANR	5045215	Identifier	vmprintf		5045209	0					
ANR	5045216	ArgumentList	D_FULLDEBUG		5045209	1					
ANR	5045217	Argument	D_FULLDEBUG		5045209	0					
ANR	5045218	Identifier	D_FULLDEBUG		5045209	0					
ANR	5045219	Argument	"""Inside XenType::killVMFast\\n"""		5045209	1					
ANR	5045220	PrimaryExpression	"""Inside XenType::killVMFast\\n"""		5045209	0					
ANR	5045221	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	1260:1:32359:32392	5045209	1	True				
ANR	5045222	IdentifierDecl	priv = set_root_priv ( )		5045209	0					
ANR	5045223	IdentifierDeclType	priv_state		5045209	0					
ANR	5045224	Identifier	priv		5045209	1					
ANR	5045225	AssignmentExpression	priv = set_root_priv ( )		5045209	2		=			
ANR	5045226	Identifier	priv		5045209	0					
ANR	5045227	CallExpression	set_root_priv ( )		5045209	1					
ANR	5045228	Callee	set_root_priv		5045209	0					
ANR	5045229	Identifier	set_root_priv		5045209	0					
ANR	5045230	ArgumentList			5045209	1					
ANR	5045231	IdentifierDeclStatement	"virConnectPtr libvirt_connection = virConnectOpen ( ""xen:///"" ) ;"	1261:1:32395:32455	5045209	2	True				
ANR	5045232	IdentifierDecl	"libvirt_connection = virConnectOpen ( ""xen:///"" )"		5045209	0					
ANR	5045233	IdentifierDeclType	virConnectPtr		5045209	0					
ANR	5045234	Identifier	libvirt_connection		5045209	1					
ANR	5045235	AssignmentExpression	"libvirt_connection = virConnectOpen ( ""xen:///"" )"		5045209	2		=			
ANR	5045236	Identifier	libvirt_connection		5045209	0					
ANR	5045237	CallExpression	"virConnectOpen ( ""xen:///"" )"		5045209	1					
ANR	5045238	Callee	virConnectOpen		5045209	0					
ANR	5045239	Identifier	virConnectOpen		5045209	0					
ANR	5045240	ArgumentList	"""xen:///"""		5045209	1					
ANR	5045241	Argument	"""xen:///"""		5045209	0					
ANR	5045242	PrimaryExpression	"""xen:///"""		5045209	0					
ANR	5045243	ExpressionStatement	set_priv ( priv )	1262:1:32458:32472	5045209	3	True				
ANR	5045244	CallExpression	set_priv ( priv )		5045209	0					
ANR	5045245	Callee	set_priv		5045209	0					
ANR	5045246	Identifier	set_priv		5045209	0					
ANR	5045247	ArgumentList	priv		5045209	1					
ANR	5045248	Argument	priv		5045209	0					
ANR	5045249	Identifier	priv		5045209	0					
ANR	5045250	ReturnStatement	"return VirshType :: killVMFast ( vmname , libvirt_connection ) ;"	1263:1:32475:32531	5045209	4	True				
ANR	5045251	CallExpression	"VirshType :: killVMFast ( vmname , libvirt_connection )"		5045209	0					
ANR	5045252	Callee	VirshType :: killVMFast		5045209	0					
ANR	5045253	Identifier	VirshType :: killVMFast		5045209	0					
ANR	5045254	ArgumentList	vmname		5045209	1					
ANR	5045255	Argument	vmname		5045209	0					
ANR	5045256	Identifier	vmname		5045209	0					
ANR	5045257	Argument	libvirt_connection		5045209	1					
ANR	5045258	Identifier	libvirt_connection		5045209	0					
ANR	5045259	ReturnType	bool		5045209	1					
ANR	5045260	Identifier	XenType :: killVMFast		5045209	2					
ANR	5045261	ParameterList	const char * vmname		5045209	3					
ANR	5045262	Parameter	const char * vmname	1257:20:32280:32297	5045209	0	True				
ANR	5045263	ParameterType	const char *		5045209	0					
ANR	5045264	Identifier	vmname		5045209	1					
ANR	5045265	CFGEntryNode	ENTRY		5045209		True				
ANR	5045266	CFGExitNode	EXIT		5045209		True				
ANR	5045267	Symbol	libvirt_connection		5045209						
ANR	5045268	Symbol	virConnectOpen		5045209						
ANR	5045269	Symbol	VirshType :: killVMFast		5045209						
ANR	5045270	Symbol	D_FULLDEBUG		5045209						
ANR	5045271	Symbol	set_root_priv		5045209						
ANR	5045272	Symbol	priv		5045209						
ANR	5045273	Symbol	vmname		5045209						
ANR	5045274	Function	VirshType :: makeNameofSuspendfile	1266:0:32536:32679							
ANR	5045275	FunctionDef	VirshType :: makeNameofSuspendfile (MyString & name)		5045274	0					
ANR	5045276	CompoundStatement		1268:0:32590:32679	5045274	0					
ANR	5045277	ExpressionStatement	"name . sprintf ( ""%s%c%s"" , m_workingpath . Value ( ) , DIR_DELIM_CHAR , XEN_MEM_SAVED_FILE )"	1269:1:32593:32677	5045274	0	True				
ANR	5045278	CallExpression	"name . sprintf ( ""%s%c%s"" , m_workingpath . Value ( ) , DIR_DELIM_CHAR , XEN_MEM_SAVED_FILE )"		5045274	0					
ANR	5045279	Callee	name . sprintf		5045274	0					
ANR	5045280	MemberAccess	name . sprintf		5045274	0					
ANR	5045281	Identifier	name		5045274	0					
ANR	5045282	Identifier	sprintf		5045274	1					
ANR	5045283	ArgumentList	"""%s%c%s"""		5045274	1					
ANR	5045284	Argument	"""%s%c%s"""		5045274	0					
ANR	5045285	PrimaryExpression	"""%s%c%s"""		5045274	0					
ANR	5045286	Argument	m_workingpath . Value ( )		5045274	1					
ANR	5045287	CallExpression	m_workingpath . Value ( )		5045274	0					
ANR	5045288	Callee	m_workingpath . Value		5045274	0					
ANR	5045289	MemberAccess	m_workingpath . Value		5045274	0					
ANR	5045290	Identifier	m_workingpath		5045274	0					
ANR	5045291	Identifier	Value		5045274	1					
ANR	5045292	ArgumentList			5045274	1					
ANR	5045293	Argument	DIR_DELIM_CHAR		5045274	2					
ANR	5045294	Identifier	DIR_DELIM_CHAR		5045274	0					
ANR	5045295	Argument	XEN_MEM_SAVED_FILE		5045274	3					
ANR	5045296	Identifier	XEN_MEM_SAVED_FILE		5045274	0					
ANR	5045297	ReturnType	void		5045274	1					
ANR	5045298	Identifier	VirshType :: makeNameofSuspendfile		5045274	2					
ANR	5045299	ParameterList	MyString & name		5045274	3					
ANR	5045300	Parameter	MyString & name	1267:33:32574:32587	5045274	0	True				
ANR	5045301	ParameterType	MyString &		5045274	0					
ANR	5045302	Identifier	name		5045274	1					
ANR	5045303	CFGEntryNode	ENTRY		5045274		True				
ANR	5045304	CFGExitNode	EXIT		5045274		True				
ANR	5045305	Symbol	m_workingpath		5045274						
ANR	5045306	Symbol	m_workingpath . Value		5045274						
ANR	5045307	Symbol	XEN_MEM_SAVED_FILE		5045274						
ANR	5045308	Symbol	DIR_DELIM_CHAR		5045274						
ANR	5045309	Symbol	name		5045274						
ANR	5045310	Function	VirshType :: checkCkptSuspendFile	1276:0:32835:34481							
ANR	5045311	FunctionDef	VirshType :: checkCkptSuspendFile (const char * file)		5045310	0					
ANR	5045312	CompoundStatement		1278:0:32890:34481	5045310	0					
ANR	5045313	IfStatement	if ( ! file || file [ 0 ] == '\\0' )		5045310	0					
ANR	5045314	Condition	! file || file [ 0 ] == '\\0'	1279:5:32897:32920	5045310	0	True				
ANR	5045315	OrExpression	! file || file [ 0 ] == '\\0'		5045310	0		||			
ANR	5045316	UnaryOperationExpression	! file		5045310	0					
ANR	5045317	UnaryOperator	!		5045310	0					
ANR	5045318	Identifier	file		5045310	1					
ANR	5045319	EqualityExpression	file [ 0 ] == '\\0'		5045310	1		==			
ANR	5045320	ArrayIndexing	file [ 0 ]		5045310	0					
ANR	5045321	Identifier	file		5045310	0					
ANR	5045322	PrimaryExpression	0		5045310	1					
ANR	5045323	PrimaryExpression	'\\0'		5045310	1					
ANR	5045324	CompoundStatement		2:32:33:33	5045310	1					
ANR	5045325	ReturnStatement	return false ;	1280:2:32928:32940	5045310	0	True				
ANR	5045326	Identifier	false		5045310	0					
ANR	5045327	IdentifierDeclStatement	MyString timestampfile ( file ) ;	1284:1:32971:32999	5045310	1	True				
ANR	5045328	IdentifierDecl	timestampfile ( file )		5045310	0					
ANR	5045329	IdentifierDeclType	MyString		5045310	0					
ANR	5045330	Identifier	timestampfile		5045310	1					
ANR	5045331	Identifier	file		5045310	2					
ANR	5045332	ExpressionStatement	timestampfile += XEN_CKPT_TIMESTAMP_FILE_SUFFIX	1285:1:33002:33049	5045310	2	True				
ANR	5045333	AssignmentExpression	timestampfile += XEN_CKPT_TIMESTAMP_FILE_SUFFIX		5045310	0		+=			
ANR	5045334	Identifier	timestampfile		5045310	0					
ANR	5045335	Identifier	XEN_CKPT_TIMESTAMP_FILE_SUFFIX		5045310	1					
ANR	5045336	IdentifierDeclStatement	"FILE * fp = safe_fopen_wrapper ( timestampfile . Value ( ) , ""r"" ) ;"	1287:1:33053:33110	5045310	3	True				
ANR	5045337	IdentifierDecl	"* fp = safe_fopen_wrapper ( timestampfile . Value ( ) , ""r"" )"		5045310	0					
ANR	5045338	IdentifierDeclType	FILE *		5045310	0					
ANR	5045339	Identifier	fp		5045310	1					
ANR	5045340	AssignmentExpression	"* fp = safe_fopen_wrapper ( timestampfile . Value ( ) , ""r"" )"		5045310	2		=			
ANR	5045341	Identifier	fp		5045310	0					
ANR	5045342	CallExpression	"safe_fopen_wrapper ( timestampfile . Value ( ) , ""r"" )"		5045310	1					
ANR	5045343	Callee	safe_fopen_wrapper		5045310	0					
ANR	5045344	Identifier	safe_fopen_wrapper		5045310	0					
ANR	5045345	ArgumentList	timestampfile . Value ( )		5045310	1					
ANR	5045346	Argument	timestampfile . Value ( )		5045310	0					
ANR	5045347	CallExpression	timestampfile . Value ( )		5045310	0					
ANR	5045348	Callee	timestampfile . Value		5045310	0					
ANR	5045349	MemberAccess	timestampfile . Value		5045310	0					
ANR	5045350	Identifier	timestampfile		5045310	0					
ANR	5045351	Identifier	Value		5045310	1					
ANR	5045352	ArgumentList			5045310	1					
ANR	5045353	Argument	"""r"""		5045310	1					
ANR	5045354	PrimaryExpression	"""r"""		5045310	0					
ANR	5045355	IfStatement	if ( ! fp )		5045310	4					
ANR	5045356	Condition	! fp	1288:5:33117:33119	5045310	0	True				
ANR	5045357	UnaryOperationExpression	! fp		5045310	0					
ANR	5045358	UnaryOperator	!		5045310	0					
ANR	5045359	Identifier	fp		5045310	1					
ANR	5045360	CompoundStatement		11:11:232:232	5045310	1					
ANR	5045361	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Cannot find the timestamp file\\n"" )"	1289:2:33127:33181	5045310	0	True				
ANR	5045362	CallExpression	"vmprintf ( D_ALWAYS , ""Cannot find the timestamp file\\n"" )"		5045310	0					
ANR	5045363	Callee	vmprintf		5045310	0					
ANR	5045364	Identifier	vmprintf		5045310	0					
ANR	5045365	ArgumentList	D_ALWAYS		5045310	1					
ANR	5045366	Argument	D_ALWAYS		5045310	0					
ANR	5045367	Identifier	D_ALWAYS		5045310	0					
ANR	5045368	Argument	"""Cannot find the timestamp file\\n"""		5045310	1					
ANR	5045369	PrimaryExpression	"""Cannot find the timestamp file\\n"""		5045310	0					
ANR	5045370	ReturnStatement	return false ;	1290:2:33185:33197	5045310	1	True				
ANR	5045371	Identifier	false		5045310	0					
ANR	5045372	IdentifierDeclStatement	char buffer [ 128 ] ;	1293:1:33204:33220	5045310	5	True				
ANR	5045373	IdentifierDecl	buffer [ 128 ]		5045310	0					
ANR	5045374	IdentifierDeclType	char [ 128 ]		5045310	0					
ANR	5045375	Identifier	buffer		5045310	1					
ANR	5045376	PrimaryExpression	128		5045310	2					
ANR	5045377	IfStatement	"if ( fgets ( buffer , sizeof ( buffer ) , fp ) == NULL )"		5045310	6					
ANR	5045378	Condition	"fgets ( buffer , sizeof ( buffer ) , fp ) == NULL"	1294:5:33227:33267	5045310	0	True				
ANR	5045379	EqualityExpression	"fgets ( buffer , sizeof ( buffer ) , fp ) == NULL"		5045310	0		==			
ANR	5045380	CallExpression	"fgets ( buffer , sizeof ( buffer ) , fp )"		5045310	0					
ANR	5045381	Callee	fgets		5045310	0					
ANR	5045382	Identifier	fgets		5045310	0					
ANR	5045383	ArgumentList	buffer		5045310	1					
ANR	5045384	Argument	buffer		5045310	0					
ANR	5045385	Identifier	buffer		5045310	0					
ANR	5045386	Argument	sizeof ( buffer )		5045310	1					
ANR	5045387	SizeofExpression	sizeof ( buffer )		5045310	0					
ANR	5045388	Sizeof	sizeof		5045310	0					
ANR	5045389	SizeofOperand	buffer		5045310	1					
ANR	5045390	Argument	fp		5045310	2					
ANR	5045391	Identifier	fp		5045310	0					
ANR	5045392	Identifier	NULL		5045310	1					
ANR	5045393	CompoundStatement		17:49:380:380	5045310	1					
ANR	5045394	ExpressionStatement	fclose ( fp )	1295:2:33275:33285	5045310	0	True				
ANR	5045395	CallExpression	fclose ( fp )		5045310	0					
ANR	5045396	Callee	fclose		5045310	0					
ANR	5045397	Identifier	fclose		5045310	0					
ANR	5045398	ArgumentList	fp		5045310	1					
ANR	5045399	Argument	fp		5045310	0					
ANR	5045400	Identifier	fp		5045310	0					
ANR	5045401	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Invalid timestamp file\\n"" )"	1296:2:33289:33335	5045310	1	True				
ANR	5045402	CallExpression	"vmprintf ( D_ALWAYS , ""Invalid timestamp file\\n"" )"		5045310	0					
ANR	5045403	Callee	vmprintf		5045310	0					
ANR	5045404	Identifier	vmprintf		5045310	0					
ANR	5045405	ArgumentList	D_ALWAYS		5045310	1					
ANR	5045406	Argument	D_ALWAYS		5045310	0					
ANR	5045407	Identifier	D_ALWAYS		5045310	0					
ANR	5045408	Argument	"""Invalid timestamp file\\n"""		5045310	1					
ANR	5045409	PrimaryExpression	"""Invalid timestamp file\\n"""		5045310	0					
ANR	5045410	ReturnStatement	return false ;	1297:2:33339:33351	5045310	2	True				
ANR	5045411	Identifier	false		5045310	0					
ANR	5045412	ExpressionStatement	fclose ( fp )	1299:1:33357:33367	5045310	7	True				
ANR	5045413	CallExpression	fclose ( fp )		5045310	0					
ANR	5045414	Callee	fclose		5045310	0					
ANR	5045415	Identifier	fclose		5045310	0					
ANR	5045416	ArgumentList	fp		5045310	1					
ANR	5045417	Argument	fp		5045310	0					
ANR	5045418	Identifier	fp		5045310	0					
ANR	5045419	IdentifierDeclStatement	MyString tmp_str ;	1301:1:33371:33387	5045310	8	True				
ANR	5045420	IdentifierDecl	tmp_str		5045310	0					
ANR	5045421	IdentifierDeclType	MyString		5045310	0					
ANR	5045422	Identifier	tmp_str		5045310	1					
ANR	5045423	ExpressionStatement	tmp_str = buffer	1302:1:33390:33406	5045310	9	True				
ANR	5045424	AssignmentExpression	tmp_str = buffer		5045310	0		=			
ANR	5045425	Identifier	tmp_str		5045310	0					
ANR	5045426	Identifier	buffer		5045310	1					
ANR	5045427	IfStatement	if ( tmp_str . IsEmpty ( ) )		5045310	10					
ANR	5045428	Condition	tmp_str . IsEmpty ( )	1303:5:33413:33429	5045310	0	True				
ANR	5045429	CallExpression	tmp_str . IsEmpty ( )		5045310	0					
ANR	5045430	Callee	tmp_str . IsEmpty		5045310	0					
ANR	5045431	MemberAccess	tmp_str . IsEmpty		5045310	0					
ANR	5045432	Identifier	tmp_str		5045310	0					
ANR	5045433	Identifier	IsEmpty		5045310	1					
ANR	5045434	ArgumentList			5045310	1					
ANR	5045435	CompoundStatement		26:25:542:542	5045310	1					
ANR	5045436	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Invalid timestamp file\\n"" )"	1304:2:33437:33483	5045310	0	True				
ANR	5045437	CallExpression	"vmprintf ( D_ALWAYS , ""Invalid timestamp file\\n"" )"		5045310	0					
ANR	5045438	Callee	vmprintf		5045310	0					
ANR	5045439	Identifier	vmprintf		5045310	0					
ANR	5045440	ArgumentList	D_ALWAYS		5045310	1					
ANR	5045441	Argument	D_ALWAYS		5045310	0					
ANR	5045442	Identifier	D_ALWAYS		5045310	0					
ANR	5045443	Argument	"""Invalid timestamp file\\n"""		5045310	1					
ANR	5045444	PrimaryExpression	"""Invalid timestamp file\\n"""		5045310	0					
ANR	5045445	ReturnStatement	return false ;	1305:2:33487:33499	5045310	1	True				
ANR	5045446	Identifier	false		5045310	0					
ANR	5045447	ExpressionStatement	tmp_str . trim ( )	1307:1:33505:33519	5045310	11	True				
ANR	5045448	CallExpression	tmp_str . trim ( )		5045310	0					
ANR	5045449	Callee	tmp_str . trim		5045310	0					
ANR	5045450	MemberAccess	tmp_str . trim		5045310	0					
ANR	5045451	Identifier	tmp_str		5045310	0					
ANR	5045452	Identifier	trim		5045310	1					
ANR	5045453	ArgumentList			5045310	1					
ANR	5045454	IdentifierDeclStatement	time_t timestamp ;	1309:1:33523:33539	5045310	12	True				
ANR	5045455	IdentifierDecl	timestamp		5045310	0					
ANR	5045456	IdentifierDeclType	time_t		5045310	0					
ANR	5045457	Identifier	timestamp		5045310	1					
ANR	5045458	ExpressionStatement	timestamp = ( time_t ) atoi ( tmp_str . Value ( ) )	1310:1:33542:33583	5045310	13	True				
ANR	5045459	AssignmentExpression	timestamp = ( time_t ) atoi ( tmp_str . Value ( ) )		5045310	0		=			
ANR	5045460	Identifier	timestamp		5045310	0					
ANR	5045461	CastExpression	( time_t ) atoi ( tmp_str . Value ( ) )		5045310	1					
ANR	5045462	CastTarget	time_t		5045310	0					
ANR	5045463	CallExpression	atoi ( tmp_str . Value ( ) )		5045310	1					
ANR	5045464	Callee	atoi		5045310	0					
ANR	5045465	Identifier	atoi		5045310	0					
ANR	5045466	ArgumentList	tmp_str . Value ( )		5045310	1					
ANR	5045467	Argument	tmp_str . Value ( )		5045310	0					
ANR	5045468	CallExpression	tmp_str . Value ( )		5045310	0					
ANR	5045469	Callee	tmp_str . Value		5045310	0					
ANR	5045470	MemberAccess	tmp_str . Value		5045310	0					
ANR	5045471	Identifier	tmp_str		5045310	0					
ANR	5045472	Identifier	Value		5045310	1					
ANR	5045473	ArgumentList			5045310	1					
ANR	5045474	IfStatement	if ( timestamp <= 0 )		5045310	14					
ANR	5045475	Condition	timestamp <= 0	1311:5:33590:33603	5045310	0	True				
ANR	5045476	RelationalExpression	timestamp <= 0		5045310	0		<=			
ANR	5045477	Identifier	timestamp		5045310	0					
ANR	5045478	PrimaryExpression	0		5045310	1					
ANR	5045479	CompoundStatement		34:22:716:716	5045310	1					
ANR	5045480	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Invalid timestamp file\\n"" )"	1312:2:33611:33657	5045310	0	True				
ANR	5045481	CallExpression	"vmprintf ( D_ALWAYS , ""Invalid timestamp file\\n"" )"		5045310	0					
ANR	5045482	Callee	vmprintf		5045310	0					
ANR	5045483	Identifier	vmprintf		5045310	0					
ANR	5045484	ArgumentList	D_ALWAYS		5045310	1					
ANR	5045485	Argument	D_ALWAYS		5045310	0					
ANR	5045486	Identifier	D_ALWAYS		5045310	0					
ANR	5045487	Argument	"""Invalid timestamp file\\n"""		5045310	1					
ANR	5045488	PrimaryExpression	"""Invalid timestamp file\\n"""		5045310	0					
ANR	5045489	ReturnStatement	return false ;	1313:2:33661:33673	5045310	1	True				
ANR	5045490	Identifier	false		5045310	0					
ANR	5045491	IdentifierDeclStatement	XenDisk * vdisk = NULL ;	1316:1:33680:33701	5045310	15	True				
ANR	5045492	IdentifierDecl	* vdisk = NULL		5045310	0					
ANR	5045493	IdentifierDeclType	XenDisk *		5045310	0					
ANR	5045494	Identifier	vdisk		5045310	1					
ANR	5045495	AssignmentExpression	* vdisk = NULL		5045310	2		=			
ANR	5045496	Identifier	NULL		5045310	0					
ANR	5045497	Identifier	NULL		5045310	1					
ANR	5045498	ExpressionStatement	m_disk_list . Rewind ( )	1317:1:33704:33724	5045310	16	True				
ANR	5045499	CallExpression	m_disk_list . Rewind ( )		5045310	0					
ANR	5045500	Callee	m_disk_list . Rewind		5045310	0					
ANR	5045501	MemberAccess	m_disk_list . Rewind		5045310	0					
ANR	5045502	Identifier	m_disk_list		5045310	0					
ANR	5045503	Identifier	Rewind		5045310	1					
ANR	5045504	ArgumentList			5045310	1					
ANR	5045505	WhileStatement	while ( m_disk_list . Next ( vdisk ) )		5045310	17					
ANR	5045506	Condition	m_disk_list . Next ( vdisk )	1318:8:33734:33756	5045310	0	True				
ANR	5045507	CallExpression	m_disk_list . Next ( vdisk )		5045310	0					
ANR	5045508	Callee	m_disk_list . Next		5045310	0					
ANR	5045509	MemberAccess	m_disk_list . Next		5045310	0					
ANR	5045510	Identifier	m_disk_list		5045310	0					
ANR	5045511	Identifier	Next		5045310	1					
ANR	5045512	ArgumentList	vdisk		5045310	1					
ANR	5045513	Argument	vdisk		5045310	0					
ANR	5045514	Identifier	vdisk		5045310	0					
ANR	5045515	CompoundStatement		41:34:869:869	5045310	1					
ANR	5045516	IfStatement	"if ( ! strcasecmp ( vdisk -> permission . Value ( ) , ""w"" ) || ! strcasecmp ( vdisk -> permission . Value ( ) , ""rw"" ) )"		5045310	0					
ANR	5045517	Condition	"! strcasecmp ( vdisk -> permission . Value ( ) , ""w"" ) || ! strcasecmp ( vdisk -> permission . Value ( ) , ""rw"" )"	1319:6:33768:33862	5045310	0	True				
ANR	5045518	OrExpression	"! strcasecmp ( vdisk -> permission . Value ( ) , ""w"" ) || ! strcasecmp ( vdisk -> permission . Value ( ) , ""rw"" )"		5045310	0		||			
ANR	5045519	UnaryOperationExpression	"! strcasecmp ( vdisk -> permission . Value ( ) , ""w"" )"		5045310	0					
ANR	5045520	UnaryOperator	!		5045310	0					
ANR	5045521	CallExpression	"strcasecmp ( vdisk -> permission . Value ( ) , ""w"" )"		5045310	1					
ANR	5045522	Callee	strcasecmp		5045310	0					
ANR	5045523	Identifier	strcasecmp		5045310	0					
ANR	5045524	ArgumentList	vdisk -> permission . Value ( )		5045310	1					
ANR	5045525	Argument	vdisk -> permission . Value ( )		5045310	0					
ANR	5045526	CallExpression	vdisk -> permission . Value ( )		5045310	0					
ANR	5045527	Callee	vdisk -> permission . Value		5045310	0					
ANR	5045528	MemberAccess	vdisk -> permission . Value		5045310	0					
ANR	5045529	PtrMemberAccess	vdisk -> permission		5045310	0					
ANR	5045530	Identifier	vdisk		5045310	0					
ANR	5045531	Identifier	permission		5045310	1					
ANR	5045532	Identifier	Value		5045310	1					
ANR	5045533	ArgumentList			5045310	1					
ANR	5045534	Argument	"""w"""		5045310	1					
ANR	5045535	PrimaryExpression	"""w"""		5045310	0					
ANR	5045536	UnaryOperationExpression	"! strcasecmp ( vdisk -> permission . Value ( ) , ""rw"" )"		5045310	1					
ANR	5045537	UnaryOperator	!		5045310	0					
ANR	5045538	CallExpression	"strcasecmp ( vdisk -> permission . Value ( ) , ""rw"" )"		5045310	1					
ANR	5045539	Callee	strcasecmp		5045310	0					
ANR	5045540	Identifier	strcasecmp		5045310	0					
ANR	5045541	ArgumentList	vdisk -> permission . Value ( )		5045310	1					
ANR	5045542	Argument	vdisk -> permission . Value ( )		5045310	0					
ANR	5045543	CallExpression	vdisk -> permission . Value ( )		5045310	0					
ANR	5045544	Callee	vdisk -> permission . Value		5045310	0					
ANR	5045545	MemberAccess	vdisk -> permission . Value		5045310	0					
ANR	5045546	PtrMemberAccess	vdisk -> permission		5045310	0					
ANR	5045547	Identifier	vdisk		5045310	0					
ANR	5045548	Identifier	permission		5045310	1					
ANR	5045549	Identifier	Value		5045310	1					
ANR	5045550	ArgumentList			5045310	1					
ANR	5045551	Argument	"""rw"""		5045310	1					
ANR	5045552	PrimaryExpression	"""rw"""		5045310	0					
ANR	5045553	CompoundStatement		47:3:1082:1103	5045310	1					
ANR	5045554	IdentifierDeclStatement	time_t disk_mtime ;	1323:3:33951:33968	5045310	0	True				
ANR	5045555	IdentifierDecl	disk_mtime		5045310	0					
ANR	5045556	IdentifierDeclType	time_t		5045310	0					
ANR	5045557	Identifier	disk_mtime		5045310	1					
ANR	5045558	IdentifierDeclStatement	struct stat disk_stat ;	1324:3:33973:33994	5045310	1	True				
ANR	5045559	IdentifierDecl	disk_stat		5045310	0					
ANR	5045560	IdentifierDeclType	struct stat		5045310	0					
ANR	5045561	Identifier	disk_stat		5045310	1					
ANR	5045562	IfStatement	"if ( stat ( vdisk -> filename . Value ( ) , & disk_stat ) < 0 )"		5045310	2					
ANR	5045563	Condition	"stat ( vdisk -> filename . Value ( ) , & disk_stat ) < 0"	1325:7:34003:34048	5045310	0	True				
ANR	5045564	RelationalExpression	"stat ( vdisk -> filename . Value ( ) , & disk_stat ) < 0"		5045310	0		<			
ANR	5045565	CallExpression	"stat ( vdisk -> filename . Value ( ) , & disk_stat )"		5045310	0					
ANR	5045566	Callee	stat		5045310	0					
ANR	5045567	Identifier	stat		5045310	0					
ANR	5045568	ArgumentList	vdisk -> filename . Value ( )		5045310	1					
ANR	5045569	Argument	vdisk -> filename . Value ( )		5045310	0					
ANR	5045570	CallExpression	vdisk -> filename . Value ( )		5045310	0					
ANR	5045571	Callee	vdisk -> filename . Value		5045310	0					
ANR	5045572	MemberAccess	vdisk -> filename . Value		5045310	0					
ANR	5045573	PtrMemberAccess	vdisk -> filename		5045310	0					
ANR	5045574	Identifier	vdisk		5045310	0					
ANR	5045575	Identifier	filename		5045310	1					
ANR	5045576	Identifier	Value		5045310	1					
ANR	5045577	ArgumentList			5045310	1					
ANR	5045578	Argument	& disk_stat		5045310	1					
ANR	5045579	UnaryOperationExpression	& disk_stat		5045310	0					
ANR	5045580	UnaryOperator	&		5045310	0					
ANR	5045581	Identifier	disk_stat		5045310	1					
ANR	5045582	PrimaryExpression	0		5045310	1					
ANR	5045583	CompoundStatement		48:56:1161:1161	5045310	1					
ANR	5045584	ExpressionStatement	"vmprintf ( D_ALWAYS , ""\\nERROR: Failed to access \\""%s\\"":%s\\n"" , vdisk -> filename . Value ( ) , strerror ( errno ) )"	1326:4:34058:34165	5045310	0	True				
ANR	5045585	CallExpression	"vmprintf ( D_ALWAYS , ""\\nERROR: Failed to access \\""%s\\"":%s\\n"" , vdisk -> filename . Value ( ) , strerror ( errno ) )"		5045310	0					
ANR	5045586	Callee	vmprintf		5045310	0					
ANR	5045587	Identifier	vmprintf		5045310	0					
ANR	5045588	ArgumentList	D_ALWAYS		5045310	1					
ANR	5045589	Argument	D_ALWAYS		5045310	0					
ANR	5045590	Identifier	D_ALWAYS		5045310	0					
ANR	5045591	Argument	"""\\nERROR: Failed to access \\""%s\\"":%s\\n"""		5045310	1					
ANR	5045592	PrimaryExpression	"""\\nERROR: Failed to access \\""%s\\"":%s\\n"""		5045310	0					
ANR	5045593	Argument	vdisk -> filename . Value ( )		5045310	2					
ANR	5045594	CallExpression	vdisk -> filename . Value ( )		5045310	0					
ANR	5045595	Callee	vdisk -> filename . Value		5045310	0					
ANR	5045596	MemberAccess	vdisk -> filename . Value		5045310	0					
ANR	5045597	PtrMemberAccess	vdisk -> filename		5045310	0					
ANR	5045598	Identifier	vdisk		5045310	0					
ANR	5045599	Identifier	filename		5045310	1					
ANR	5045600	Identifier	Value		5045310	1					
ANR	5045601	ArgumentList			5045310	1					
ANR	5045602	Argument	strerror ( errno )		5045310	3					
ANR	5045603	CallExpression	strerror ( errno )		5045310	0					
ANR	5045604	Callee	strerror		5045310	0					
ANR	5045605	Identifier	strerror		5045310	0					
ANR	5045606	ArgumentList	errno		5045310	1					
ANR	5045607	Argument	errno		5045310	0					
ANR	5045608	Identifier	errno		5045310	0					
ANR	5045609	ReturnStatement	return false ;	1328:4:34171:34183	5045310	1	True				
ANR	5045610	Identifier	false		5045310	0					
ANR	5045611	ExpressionStatement	disk_mtime = disk_stat . st_mtime	1330:3:34193:34224	5045310	3	True				
ANR	5045612	AssignmentExpression	disk_mtime = disk_stat . st_mtime		5045310	0		=			
ANR	5045613	Identifier	disk_mtime		5045310	0					
ANR	5045614	MemberAccess	disk_stat . st_mtime		5045310	1					
ANR	5045615	Identifier	disk_stat		5045310	0					
ANR	5045616	Identifier	st_mtime		5045310	1					
ANR	5045617	IfStatement	if ( disk_mtime != timestamp )		5045310	4					
ANR	5045618	Condition	disk_mtime != timestamp	1333:7:34248:34270	5045310	0	True				
ANR	5045619	EqualityExpression	disk_mtime != timestamp		5045310	0		!=			
ANR	5045620	Identifier	disk_mtime		5045310	0					
ANR	5045621	Identifier	timestamp		5045310	1					
ANR	5045622	CompoundStatement		56:33:1383:1383	5045310	1					
ANR	5045623	Statement	vmprintf	1334:4:34280:34287	5045310	0	True				
ANR	5045624	Statement	(	1334:12:34288:34288	5045310	1	True				
ANR	5045625	Statement	D_ALWAYS	1334:13:34289:34296	5045310	2	True				
ANR	5045626	Statement	","	1334:21:34297:34297	5045310	3	True				
ANR	5045627	Statement	"""Checkpoint timestamp mismatch: """	1334:23:34299:34331	5045310	4	True				
ANR	5045628	Statement	"""timestamp of suspend file=%d, mtime of disk file=%d\\n"""	1335:6:34339:34393	5045310	5	True				
ANR	5045629	Statement	","	1335:61:34394:34394	5045310	6	True				
ANR	5045630	Statement	(	1336:6:34402:34402	5045310	7	True				
ANR	5045631	Statement	int	1336:7:34403:34405	5045310	8	True				
ANR	5045632	Statement	)	1336:10:34406:34406	5045310	9	True				
ANR	5045633	Statement	timestamp	1336:11:34407:34415	5045310	10	True				
ANR	5045634	Statement	","	1336:20:34416:34416	5045310	11	True				
ANR	5045635	Statement	(	1336:22:34418:34418	5045310	12	True				
ANR	5045636	Statement	int	1336:23:34419:34421	5045310	13	True				
ANR	5045637	Statement	)	1336:26:34422:34422	5045310	14	True				
ANR	5045638	Statement	disk_mtime	1336:27:34423:34432	5045310	15	True				
ANR	5045639	Statement	)	1336:37:34433:34433	5045310	16	True				
ANR	5045640	ExpressionStatement		1336:38:34434:34434	5045310	17	True				
ANR	5045641	ReturnStatement	return false ;	1337:4:34440:34452	5045310	18	True				
ANR	5045642	Identifier	false		5045310	0					
ANR	5045643	ReturnStatement	return true ;	1342:1:34468:34479	5045310	18	True				
ANR	5045644	Identifier	true		5045310	0					
ANR	5045645	ReturnType	bool		5045310	1					
ANR	5045646	Identifier	VirshType :: checkCkptSuspendFile		5045310	2					
ANR	5045647	ParameterList	const char * file		5045310	3					
ANR	5045648	Parameter	const char * file	1277:32:32872:32887	5045310	0	True				
ANR	5045649	ParameterType	const char *		5045310	0					
ANR	5045650	Identifier	file		5045310	1					
ANR	5045651	CFGEntryNode	ENTRY		5045310		True				
ANR	5045652	CFGExitNode	EXIT		5045310		True				
ANR	5045653	Symbol	XEN_CKPT_TIMESTAMP_FILE_SUFFIX		5045310						
ANR	5045654	Symbol	m_disk_list		5045310						
ANR	5045655	Symbol	fp		5045310						
ANR	5045656	Symbol	tmp_str . IsEmpty		5045310						
ANR	5045657	Symbol	fgets		5045310						
ANR	5045658	Symbol	file		5045310						
ANR	5045659	Symbol	* vdisk		5045310						
ANR	5045660	Symbol	& disk_stat		5045310						
ANR	5045661	Symbol	vdisk -> filename		5045310						
ANR	5045662	Symbol	vdisk -> permission . Value		5045310						
ANR	5045663	Symbol	buffer		5045310						
ANR	5045664	Symbol	strcasecmp		5045310						
ANR	5045665	Symbol	timestamp		5045310						
ANR	5045666	Symbol	timestampfile		5045310						
ANR	5045667	Symbol	atoi		5045310						
ANR	5045668	Symbol	vdisk -> permission		5045310						
ANR	5045669	Symbol	stat		5045310						
ANR	5045670	Symbol	errno		5045310						
ANR	5045671	Symbol	NULL		5045310						
ANR	5045672	Symbol	tmp_str		5045310						
ANR	5045673	Symbol	disk_stat . st_mtime		5045310						
ANR	5045674	Symbol	safe_fopen_wrapper		5045310						
ANR	5045675	Symbol	false		5045310						
ANR	5045676	Symbol	D_ALWAYS		5045310						
ANR	5045677	Symbol	tmp_str . Value		5045310						
ANR	5045678	Symbol	vdisk -> filename . Value		5045310						
ANR	5045679	Symbol	* file		5045310						
ANR	5045680	Symbol	disk_mtime		5045310						
ANR	5045681	Symbol	strerror		5045310						
ANR	5045682	Symbol	m_disk_list . Next		5045310						
ANR	5045683	Symbol	true		5045310						
ANR	5045684	Symbol	disk_stat		5045310						
ANR	5045685	Symbol	timestampfile . Value		5045310						
ANR	5045686	Symbol	vdisk		5045310						
ANR	5045687	Function	VirshType :: findCkptConfigAndSuspendFile	1345:0:34484:35789							
ANR	5045688	FunctionDef	"VirshType :: findCkptConfigAndSuspendFile (MyString & vmconfig , MyString & suspendfile)"		5045687	0					
ANR	5045689	CompoundStatement		1347:0:34572:35789	5045687	0					
ANR	5045690	IfStatement	if ( m_transfer_intermediate_files . isEmpty ( ) )		5045687	0					
ANR	5045691	Condition	m_transfer_intermediate_files . isEmpty ( )	1348:5:34579:34617	5045687	0	True				
ANR	5045692	CallExpression	m_transfer_intermediate_files . isEmpty ( )		5045687	0					
ANR	5045693	Callee	m_transfer_intermediate_files . isEmpty		5045687	0					
ANR	5045694	MemberAccess	m_transfer_intermediate_files . isEmpty		5045687	0					
ANR	5045695	Identifier	m_transfer_intermediate_files		5045687	0					
ANR	5045696	Identifier	isEmpty		5045687	1					
ANR	5045697	ArgumentList			5045687	1					
ANR	5045698	CompoundStatement		2:47:48:48	5045687	1					
ANR	5045699	ReturnStatement	return false ;	1349:2:34625:34637	5045687	0	True				
ANR	5045700	Identifier	false		5045687	0					
ANR	5045701	ExpressionStatement	"vmconfig = """""	1352:1:34644:34657	5045687	1	True				
ANR	5045702	AssignmentExpression	"vmconfig = """""		5045687	0		=			
ANR	5045703	Identifier	vmconfig		5045687	0					
ANR	5045704	PrimaryExpression	""""""		5045687	1					
ANR	5045705	ExpressionStatement	"suspendfile = """""	1353:1:34660:34676	5045687	2	True				
ANR	5045706	AssignmentExpression	"suspendfile = """""		5045687	0		=			
ANR	5045707	Identifier	suspendfile		5045687	0					
ANR	5045708	PrimaryExpression	""""""		5045687	1					
ANR	5045709	IdentifierDeclStatement	MyString tmpconfig ;	1355:1:34680:34698	5045687	3	True				
ANR	5045710	IdentifierDecl	tmpconfig		5045687	0					
ANR	5045711	IdentifierDeclType	MyString		5045687	0					
ANR	5045712	Identifier	tmpconfig		5045687	1					
ANR	5045713	IdentifierDeclStatement	MyString tmpsuspendfile ;	1356:1:34701:34724	5045687	4	True				
ANR	5045714	IdentifierDecl	tmpsuspendfile		5045687	0					
ANR	5045715	IdentifierDeclType	MyString		5045687	0					
ANR	5045716	Identifier	tmpsuspendfile		5045687	1					
ANR	5045717	IfStatement	"if ( filelist_contains_file ( XEN_CONFIG_FILE_NAME , & m_transfer_intermediate_files , true ) )"		5045687	5					
ANR	5045718	Condition	"filelist_contains_file ( XEN_CONFIG_FILE_NAME , & m_transfer_intermediate_files , true )"	1358:5:34732:34818	5045687	0	True				
ANR	5045719	CallExpression	"filelist_contains_file ( XEN_CONFIG_FILE_NAME , & m_transfer_intermediate_files , true )"		5045687	0					
ANR	5045720	Callee	filelist_contains_file		5045687	0					
ANR	5045721	Identifier	filelist_contains_file		5045687	0					
ANR	5045722	ArgumentList	XEN_CONFIG_FILE_NAME		5045687	1					
ANR	5045723	Argument	XEN_CONFIG_FILE_NAME		5045687	0					
ANR	5045724	Identifier	XEN_CONFIG_FILE_NAME		5045687	0					
ANR	5045725	Argument	& m_transfer_intermediate_files		5045687	1					
ANR	5045726	UnaryOperationExpression	& m_transfer_intermediate_files		5045687	0					
ANR	5045727	UnaryOperator	&		5045687	0					
ANR	5045728	Identifier	m_transfer_intermediate_files		5045687	1					
ANR	5045729	Argument	true		5045687	2					
ANR	5045730	Identifier	true		5045687	0					
ANR	5045731	CompoundStatement		13:44:249:249	5045687	1					
ANR	5045732	ExpressionStatement	"tmpconfig . sprintf ( ""%s%c%s"" , m_workingpath . Value ( ) , DIR_DELIM_CHAR , XEN_CONFIG_FILE_NAME )"	1361:2:34880:34971	5045687	0	True				
ANR	5045733	CallExpression	"tmpconfig . sprintf ( ""%s%c%s"" , m_workingpath . Value ( ) , DIR_DELIM_CHAR , XEN_CONFIG_FILE_NAME )"		5045687	0					
ANR	5045734	Callee	tmpconfig . sprintf		5045687	0					
ANR	5045735	MemberAccess	tmpconfig . sprintf		5045687	0					
ANR	5045736	Identifier	tmpconfig		5045687	0					
ANR	5045737	Identifier	sprintf		5045687	1					
ANR	5045738	ArgumentList	"""%s%c%s"""		5045687	1					
ANR	5045739	Argument	"""%s%c%s"""		5045687	0					
ANR	5045740	PrimaryExpression	"""%s%c%s"""		5045687	0					
ANR	5045741	Argument	m_workingpath . Value ( )		5045687	1					
ANR	5045742	CallExpression	m_workingpath . Value ( )		5045687	0					
ANR	5045743	Callee	m_workingpath . Value		5045687	0					
ANR	5045744	MemberAccess	m_workingpath . Value		5045687	0					
ANR	5045745	Identifier	m_workingpath		5045687	0					
ANR	5045746	Identifier	Value		5045687	1					
ANR	5045747	ArgumentList			5045687	1					
ANR	5045748	Argument	DIR_DELIM_CHAR		5045687	2					
ANR	5045749	Identifier	DIR_DELIM_CHAR		5045687	0					
ANR	5045750	Argument	XEN_CONFIG_FILE_NAME		5045687	3					
ANR	5045751	Identifier	XEN_CONFIG_FILE_NAME		5045687	0					
ANR	5045752	IdentifierDeclStatement	MyString tmp_name ;	1365:1:34978:34995	5045687	6	True				
ANR	5045753	IdentifierDecl	tmp_name		5045687	0					
ANR	5045754	IdentifierDeclType	MyString		5045687	0					
ANR	5045755	Identifier	tmp_name		5045687	1					
ANR	5045756	ExpressionStatement	makeNameofSuspendfile ( tmp_name )	1366:1:34998:35029	5045687	7	True				
ANR	5045757	CallExpression	makeNameofSuspendfile ( tmp_name )		5045687	0					
ANR	5045758	Callee	makeNameofSuspendfile		5045687	0					
ANR	5045759	Identifier	makeNameofSuspendfile		5045687	0					
ANR	5045760	ArgumentList	tmp_name		5045687	1					
ANR	5045761	Argument	tmp_name		5045687	0					
ANR	5045762	Identifier	tmp_name		5045687	0					
ANR	5045763	IfStatement	"if ( filelist_contains_file ( tmp_name . Value ( ) , & m_transfer_intermediate_files , true ) )"		5045687	8					
ANR	5045764	Condition	"filelist_contains_file ( tmp_name . Value ( ) , & m_transfer_intermediate_files , true )"	1368:5:35037:35118	5045687	0	True				
ANR	5045765	CallExpression	"filelist_contains_file ( tmp_name . Value ( ) , & m_transfer_intermediate_files , true )"		5045687	0					
ANR	5045766	Callee	filelist_contains_file		5045687	0					
ANR	5045767	Identifier	filelist_contains_file		5045687	0					
ANR	5045768	ArgumentList	tmp_name . Value ( )		5045687	1					
ANR	5045769	Argument	tmp_name . Value ( )		5045687	0					
ANR	5045770	CallExpression	tmp_name . Value ( )		5045687	0					
ANR	5045771	Callee	tmp_name . Value		5045687	0					
ANR	5045772	MemberAccess	tmp_name . Value		5045687	0					
ANR	5045773	Identifier	tmp_name		5045687	0					
ANR	5045774	Identifier	Value		5045687	1					
ANR	5045775	ArgumentList			5045687	1					
ANR	5045776	Argument	& m_transfer_intermediate_files		5045687	1					
ANR	5045777	UnaryOperationExpression	& m_transfer_intermediate_files		5045687	0					
ANR	5045778	UnaryOperator	&		5045687	0					
ANR	5045779	Identifier	m_transfer_intermediate_files		5045687	1					
ANR	5045780	Argument	true		5045687	2					
ANR	5045781	Identifier	true		5045687	0					
ANR	5045782	CompoundStatement		23:44:549:549	5045687	1					
ANR	5045783	ExpressionStatement	tmpsuspendfile = tmp_name	1371:2:35186:35211	5045687	0	True				
ANR	5045784	AssignmentExpression	tmpsuspendfile = tmp_name		5045687	0		=			
ANR	5045785	Identifier	tmpsuspendfile		5045687	0					
ANR	5045786	Identifier	tmp_name		5045687	1					
ANR	5045787	IfStatement	"if ( check_vm_read_access_file ( tmpsuspendfile . Value ( ) , true ) == false )"		5045687	1					
ANR	5045788	Condition	"check_vm_read_access_file ( tmpsuspendfile . Value ( ) , true ) == false"	1372:6:35219:35282	5045687	0	True				
ANR	5045789	EqualityExpression	"check_vm_read_access_file ( tmpsuspendfile . Value ( ) , true ) == false"		5045687	0		==			
ANR	5045790	CallExpression	"check_vm_read_access_file ( tmpsuspendfile . Value ( ) , true )"		5045687	0					
ANR	5045791	Callee	check_vm_read_access_file		5045687	0					
ANR	5045792	Identifier	check_vm_read_access_file		5045687	0					
ANR	5045793	ArgumentList	tmpsuspendfile . Value ( )		5045687	1					
ANR	5045794	Argument	tmpsuspendfile . Value ( )		5045687	0					
ANR	5045795	CallExpression	tmpsuspendfile . Value ( )		5045687	0					
ANR	5045796	Callee	tmpsuspendfile . Value		5045687	0					
ANR	5045797	MemberAccess	tmpsuspendfile . Value		5045687	0					
ANR	5045798	Identifier	tmpsuspendfile		5045687	0					
ANR	5045799	Identifier	Value		5045687	1					
ANR	5045800	ArgumentList			5045687	1					
ANR	5045801	Argument	true		5045687	1					
ANR	5045802	Identifier	true		5045687	0					
ANR	5045803	Identifier	false		5045687	1					
ANR	5045804	CompoundStatement		26:72:712:712	5045687	1					
ANR	5045805	ReturnStatement	return false ;	1373:3:35290:35302	5045687	0	True				
ANR	5045806	Identifier	false		5045687	0					
ANR	5045807	IfStatement	if ( ( tmpconfig . Length ( ) > 0 ) && ( tmpsuspendfile . Length ( ) > 0 ) )		5045687	9					
ANR	5045808	Condition	( tmpconfig . Length ( ) > 0 ) && ( tmpsuspendfile . Length ( ) > 0 )	1377:5:35317:35377	5045687	0	True				
ANR	5045809	AndExpression	( tmpconfig . Length ( ) > 0 ) && ( tmpsuspendfile . Length ( ) > 0 )		5045687	0		&&			
ANR	5045810	RelationalExpression	tmpconfig . Length ( ) > 0		5045687	0		>			
ANR	5045811	CallExpression	tmpconfig . Length ( )		5045687	0					
ANR	5045812	Callee	tmpconfig . Length		5045687	0					
ANR	5045813	MemberAccess	tmpconfig . Length		5045687	0					
ANR	5045814	Identifier	tmpconfig		5045687	0					
ANR	5045815	Identifier	Length		5045687	1					
ANR	5045816	ArgumentList			5045687	1					
ANR	5045817	PrimaryExpression	0		5045687	1					
ANR	5045818	RelationalExpression	tmpsuspendfile . Length ( ) > 0		5045687	1		>			
ANR	5045819	CallExpression	tmpsuspendfile . Length ( )		5045687	0					
ANR	5045820	Callee	tmpsuspendfile . Length		5045687	0					
ANR	5045821	MemberAccess	tmpsuspendfile . Length		5045687	0					
ANR	5045822	Identifier	tmpsuspendfile		5045687	0					
ANR	5045823	Identifier	Length		5045687	1					
ANR	5045824	ArgumentList			5045687	1					
ANR	5045825	PrimaryExpression	0		5045687	1					
ANR	5045826	CompoundStatement		32:35:807:807	5045687	1					
ANR	5045827	IfStatement	if ( checkCkptSuspendFile ( tmpsuspendfile . Value ( ) ) )		5045687	0					
ANR	5045828	Condition	checkCkptSuspendFile ( tmpsuspendfile . Value ( ) )	1384:6:35644:35687	5045687	0	True				
ANR	5045829	CallExpression	checkCkptSuspendFile ( tmpsuspendfile . Value ( ) )		5045687	0					
ANR	5045830	Callee	checkCkptSuspendFile		5045687	0					
ANR	5045831	Identifier	checkCkptSuspendFile		5045687	0					
ANR	5045832	ArgumentList	tmpsuspendfile . Value ( )		5045687	1					
ANR	5045833	Argument	tmpsuspendfile . Value ( )		5045687	0					
ANR	5045834	CallExpression	tmpsuspendfile . Value ( )		5045687	0					
ANR	5045835	Callee	tmpsuspendfile . Value		5045687	0					
ANR	5045836	MemberAccess	tmpsuspendfile . Value		5045687	0					
ANR	5045837	Identifier	tmpsuspendfile		5045687	0					
ANR	5045838	Identifier	Value		5045687	1					
ANR	5045839	ArgumentList			5045687	1					
ANR	5045840	CompoundStatement		38:53:1118:1118	5045687	1					
ANR	5045841	ExpressionStatement	vmconfig = tmpconfig	1385:3:35696:35716	5045687	0	True				
ANR	5045842	AssignmentExpression	vmconfig = tmpconfig		5045687	0		=			
ANR	5045843	Identifier	vmconfig		5045687	0					
ANR	5045844	Identifier	tmpconfig		5045687	1					
ANR	5045845	ExpressionStatement	suspendfile = tmpsuspendfile	1386:3:35721:35749	5045687	1	True				
ANR	5045846	AssignmentExpression	suspendfile = tmpsuspendfile		5045687	0		=			
ANR	5045847	Identifier	suspendfile		5045687	0					
ANR	5045848	Identifier	tmpsuspendfile		5045687	1					
ANR	5045849	ReturnStatement	return true ;	1387:3:35754:35765	5045687	2	True				
ANR	5045850	Identifier	true		5045687	0					
ANR	5045851	ReturnStatement	return false ;	1390:1:35775:35787	5045687	10	True				
ANR	5045852	Identifier	false		5045687	0					
ANR	5045853	ReturnType	bool		5045687	1					
ANR	5045854	Identifier	VirshType :: findCkptConfigAndSuspendFile		5045687	2					
ANR	5045855	ParameterList	"MyString & vmconfig , MyString & suspendfile"		5045687	3					
ANR	5045856	Parameter	MyString & vmconfig	1346:40:34529:34546	5045687	0	True				
ANR	5045857	ParameterType	MyString &		5045687	0					
ANR	5045858	Identifier	vmconfig		5045687	1					
ANR	5045859	Parameter	MyString & suspendfile	1346:60:34549:34569	5045687	1	True				
ANR	5045860	ParameterType	MyString &		5045687	0					
ANR	5045861	Identifier	suspendfile		5045687	1					
ANR	5045862	CFGEntryNode	ENTRY		5045687		True				
ANR	5045863	CFGExitNode	EXIT		5045687		True				
ANR	5045864	Symbol	m_transfer_intermediate_files		5045687						
ANR	5045865	Symbol	XEN_CONFIG_FILE_NAME		5045687						
ANR	5045866	Symbol	tmpconfig		5045687						
ANR	5045867	Symbol	tmpsuspendfile . Value		5045687						
ANR	5045868	Symbol	m_workingpath . Value		5045687						
ANR	5045869	Symbol	tmp_name . Value		5045687						
ANR	5045870	Symbol	DIR_DELIM_CHAR		5045687						
ANR	5045871	Symbol	vmconfig		5045687						
ANR	5045872	Symbol	false		5045687						
ANR	5045873	Symbol	tmpsuspendfile		5045687						
ANR	5045874	Symbol	tmpsuspendfile . Length		5045687						
ANR	5045875	Symbol	& m_transfer_intermediate_files		5045687						
ANR	5045876	Symbol	filelist_contains_file		5045687						
ANR	5045877	Symbol	tmp_name		5045687						
ANR	5045878	Symbol	tmpconfig . Length		5045687						
ANR	5045879	Symbol	suspendfile		5045687						
ANR	5045880	Symbol	m_workingpath		5045687						
ANR	5045881	Symbol	m_transfer_intermediate_files . isEmpty		5045687						
ANR	5045882	Symbol	true		5045687						
ANR	5045883	Symbol	check_vm_read_access_file		5045687						
ANR	5045884	Symbol	checkCkptSuspendFile		5045687						
ANR	5045885	Function	VirshType :: killVM	1393:0:35792:36067							
ANR	5045886	FunctionDef	VirshType :: killVM ()		5045885	0					
ANR	5045887	CompoundStatement		1395:0:35817:36067	5045885	0					
ANR	5045888	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::killVM\\n"" )"	1396:1:35820:35871	5045885	0	True				
ANR	5045889	CallExpression	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::killVM\\n"" )"		5045885	0					
ANR	5045890	Callee	vmprintf		5045885	0					
ANR	5045891	Identifier	vmprintf		5045885	0					
ANR	5045892	ArgumentList	D_FULLDEBUG		5045885	1					
ANR	5045893	Argument	D_FULLDEBUG		5045885	0					
ANR	5045894	Identifier	D_FULLDEBUG		5045885	0					
ANR	5045895	Argument	"""Inside VirshType::killVM\\n"""		5045885	1					
ANR	5045896	PrimaryExpression	"""Inside VirshType::killVM\\n"""		5045885	0					
ANR	5045897	IfStatement	if ( ( m_vm_name . Length ( ) == 0 ) )		5045885	1					
ANR	5045898	Condition	m_vm_name . Length ( ) == 0	1398:5:35879:35905	5045885	0	True				
ANR	5045899	EqualityExpression	m_vm_name . Length ( ) == 0		5045885	0		==			
ANR	5045900	CallExpression	m_vm_name . Length ( )		5045885	0					
ANR	5045901	Callee	m_vm_name . Length		5045885	0					
ANR	5045902	MemberAccess	m_vm_name . Length		5045885	0					
ANR	5045903	Identifier	m_vm_name		5045885	0					
ANR	5045904	Identifier	Length		5045885	1					
ANR	5045905	ArgumentList			5045885	1					
ANR	5045906	PrimaryExpression	0		5045885	1					
ANR	5045907	CompoundStatement		4:35:91:91	5045885	1					
ANR	5045908	ReturnStatement	return false ;	1399:2:35913:35925	5045885	0	True				
ANR	5045909	Identifier	false		5045885	0					
ANR	5045910	ExpressionStatement	ResumeFromSoftSuspend ( )	1403:1:35980:36003	5045885	2	True				
ANR	5045911	CallExpression	ResumeFromSoftSuspend ( )		5045885	0					
ANR	5045912	Callee	ResumeFromSoftSuspend		5045885	0					
ANR	5045913	Identifier	ResumeFromSoftSuspend		5045885	0					
ANR	5045914	ArgumentList			5045885	1					
ANR	5045915	ReturnStatement	"return killVMFast ( m_vm_name . Value ( ) , m_libvirt_connection ) ;"	1405:1:36007:36065	5045885	3	True				
ANR	5045916	CallExpression	"killVMFast ( m_vm_name . Value ( ) , m_libvirt_connection )"		5045885	0					
ANR	5045917	Callee	killVMFast		5045885	0					
ANR	5045918	Identifier	killVMFast		5045885	0					
ANR	5045919	ArgumentList	m_vm_name . Value ( )		5045885	1					
ANR	5045920	Argument	m_vm_name . Value ( )		5045885	0					
ANR	5045921	CallExpression	m_vm_name . Value ( )		5045885	0					
ANR	5045922	Callee	m_vm_name . Value		5045885	0					
ANR	5045923	MemberAccess	m_vm_name . Value		5045885	0					
ANR	5045924	Identifier	m_vm_name		5045885	0					
ANR	5045925	Identifier	Value		5045885	1					
ANR	5045926	ArgumentList			5045885	1					
ANR	5045927	Argument	m_libvirt_connection		5045885	1					
ANR	5045928	Identifier	m_libvirt_connection		5045885	0					
ANR	5045929	ReturnType	bool		5045885	1					
ANR	5045930	Identifier	VirshType :: killVM		5045885	2					
ANR	5045931	ParameterList			5045885	3					
ANR	5045932	CFGEntryNode	ENTRY		5045885		True				
ANR	5045933	CFGExitNode	EXIT		5045885		True				
ANR	5045934	Symbol	m_vm_name . Value		5045885						
ANR	5045935	Symbol	m_vm_name		5045885						
ANR	5045936	Symbol	killVMFast		5045885						
ANR	5045937	Symbol	m_libvirt_connection		5045885						
ANR	5045938	Symbol	m_vm_name . Length		5045885						
ANR	5045939	Symbol	false		5045885						
ANR	5045940	Symbol	D_FULLDEBUG		5045885						
ANR	5045941	Function	VirshType :: killVMFast	1408:0:36070:36815							
ANR	5045942	FunctionDef	"VirshType :: killVMFast (const char * vmname , virConnectPtr libvirt_con)"		5045941	0					
ANR	5045943	CompoundStatement		1410:0:36144:36815	5045941	0					
ANR	5045944	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::killVMFast\\n"" )"	1411:1:36147:36202	5045941	0	True				
ANR	5045945	CallExpression	"vmprintf ( D_FULLDEBUG , ""Inside VirshType::killVMFast\\n"" )"		5045941	0					
ANR	5045946	Callee	vmprintf		5045941	0					
ANR	5045947	Identifier	vmprintf		5045941	0					
ANR	5045948	ArgumentList	D_FULLDEBUG		5045941	1					
ANR	5045949	Argument	D_FULLDEBUG		5045941	0					
ANR	5045950	Identifier	D_FULLDEBUG		5045941	0					
ANR	5045951	Argument	"""Inside VirshType::killVMFast\\n"""		5045941	1					
ANR	5045952	PrimaryExpression	"""Inside VirshType::killVMFast\\n"""		5045941	0					
ANR	5045953	IfStatement	if ( ! vmname || ( vmname [ 0 ] == '\\0' ) )		5045941	1					
ANR	5045954	Condition	! vmname || ( vmname [ 0 ] == '\\0' )	1413:5:36210:36239	5045941	0	True				
ANR	5045955	OrExpression	! vmname || ( vmname [ 0 ] == '\\0' )		5045941	0		||			
ANR	5045956	UnaryOperationExpression	! vmname		5045941	0					
ANR	5045957	UnaryOperator	!		5045941	0					
ANR	5045958	Identifier	vmname		5045941	1					
ANR	5045959	EqualityExpression	vmname [ 0 ] == '\\0'		5045941	1		==			
ANR	5045960	ArrayIndexing	vmname [ 0 ]		5045941	0					
ANR	5045961	Identifier	vmname		5045941	0					
ANR	5045962	PrimaryExpression	0		5045941	1					
ANR	5045963	PrimaryExpression	'\\0'		5045941	1					
ANR	5045964	CompoundStatement		4:38:98:98	5045941	1					
ANR	5045965	ReturnStatement	return false ;	1414:2:36247:36259	5045941	0	True				
ANR	5045966	Identifier	false		5045941	0					
ANR	5045967	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	1417:1:36266:36299	5045941	2	True				
ANR	5045968	IdentifierDecl	priv = set_root_priv ( )		5045941	0					
ANR	5045969	IdentifierDeclType	priv_state		5045941	0					
ANR	5045970	Identifier	priv		5045941	1					
ANR	5045971	AssignmentExpression	priv = set_root_priv ( )		5045941	2		=			
ANR	5045972	Identifier	priv		5045941	0					
ANR	5045973	CallExpression	set_root_priv ( )		5045941	1					
ANR	5045974	Callee	set_root_priv		5045941	0					
ANR	5045975	Identifier	set_root_priv		5045941	0					
ANR	5045976	ArgumentList			5045941	1					
ANR	5045977	IdentifierDeclStatement	"virDomainPtr dom = virDomainLookupByName ( libvirt_con , vmname ) ;"	1418:1:36302:36363	5045941	3	True				
ANR	5045978	IdentifierDecl	"dom = virDomainLookupByName ( libvirt_con , vmname )"		5045941	0					
ANR	5045979	IdentifierDeclType	virDomainPtr		5045941	0					
ANR	5045980	Identifier	dom		5045941	1					
ANR	5045981	AssignmentExpression	"dom = virDomainLookupByName ( libvirt_con , vmname )"		5045941	2		=			
ANR	5045982	Identifier	dom		5045941	0					
ANR	5045983	CallExpression	"virDomainLookupByName ( libvirt_con , vmname )"		5045941	1					
ANR	5045984	Callee	virDomainLookupByName		5045941	0					
ANR	5045985	Identifier	virDomainLookupByName		5045941	0					
ANR	5045986	ArgumentList	libvirt_con		5045941	1					
ANR	5045987	Argument	libvirt_con		5045941	0					
ANR	5045988	Identifier	libvirt_con		5045941	0					
ANR	5045989	Argument	vmname		5045941	1					
ANR	5045990	Identifier	vmname		5045941	0					
ANR	5045991	ExpressionStatement	set_priv ( priv )	1419:1:36366:36380	5045941	4	True				
ANR	5045992	CallExpression	set_priv ( priv )		5045941	0					
ANR	5045993	Callee	set_priv		5045941	0					
ANR	5045994	Identifier	set_priv		5045941	0					
ANR	5045995	ArgumentList	priv		5045941	1					
ANR	5045996	Argument	priv		5045941	0					
ANR	5045997	Identifier	priv		5045941	0					
ANR	5045998	IfStatement	if ( dom == NULL )		5045941	5					
ANR	5045999	Condition	dom == NULL	1420:4:36386:36396	5045941	0	True				
ANR	5046000	EqualityExpression	dom == NULL		5045941	0		==			
ANR	5046001	Identifier	dom		5045941	0					
ANR	5046002	Identifier	NULL		5045941	1					
ANR	5046003	CompoundStatement		13:5:264:314	5045941	1					
ANR	5046004	IdentifierDeclStatement	virErrorPtr err = virConnGetLastError ( libvirt_con ) ;	1422:5:36409:36459	5045941	0	True				
ANR	5046005	IdentifierDecl	err = virConnGetLastError ( libvirt_con )		5045941	0					
ANR	5046006	IdentifierDeclType	virErrorPtr		5045941	0					
ANR	5046007	Identifier	err		5045941	1					
ANR	5046008	AssignmentExpression	err = virConnGetLastError ( libvirt_con )		5045941	2		=			
ANR	5046009	Identifier	err		5045941	0					
ANR	5046010	CallExpression	virConnGetLastError ( libvirt_con )		5045941	1					
ANR	5046011	Callee	virConnGetLastError		5045941	0					
ANR	5046012	Identifier	virConnGetLastError		5045941	0					
ANR	5046013	ArgumentList	libvirt_con		5045941	1					
ANR	5046014	Argument	libvirt_con		5045941	0					
ANR	5046015	Identifier	libvirt_con		5045941	0					
ANR	5046016	IfStatement	if ( err && err -> code != VIR_ERR_NO_DOMAIN )		5045941	1					
ANR	5046017	Condition	err && err -> code != VIR_ERR_NO_DOMAIN	1423:9:36470:36506	5045941	0	True				
ANR	5046018	AndExpression	err && err -> code != VIR_ERR_NO_DOMAIN		5045941	0		&&			
ANR	5046019	Identifier	err		5045941	0					
ANR	5046020	EqualityExpression	err -> code != VIR_ERR_NO_DOMAIN		5045941	1		!=			
ANR	5046021	PtrMemberAccess	err -> code		5045941	0					
ANR	5046022	Identifier	err		5045941	0					
ANR	5046023	Identifier	code		5045941	1					
ANR	5046024	Identifier	VIR_ERR_NO_DOMAIN		5045941	1					
ANR	5046025	CompoundStatement		15:7:371:371	5045941	1					
ANR	5046026	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Error finding domain %s: %s\\n"" , vmname , ( err ? err -> message : ""No reason found"" ) )"	1425:2:36520:36621	5045941	0	True				
ANR	5046027	CallExpression	"vmprintf ( D_ALWAYS , ""Error finding domain %s: %s\\n"" , vmname , ( err ? err -> message : ""No reason found"" ) )"		5045941	0					
ANR	5046028	Callee	vmprintf		5045941	0					
ANR	5046029	Identifier	vmprintf		5045941	0					
ANR	5046030	ArgumentList	D_ALWAYS		5045941	1					
ANR	5046031	Argument	D_ALWAYS		5045941	0					
ANR	5046032	Identifier	D_ALWAYS		5045941	0					
ANR	5046033	Argument	"""Error finding domain %s: %s\\n"""		5045941	1					
ANR	5046034	PrimaryExpression	"""Error finding domain %s: %s\\n"""		5045941	0					
ANR	5046035	Argument	vmname		5045941	2					
ANR	5046036	Identifier	vmname		5045941	0					
ANR	5046037	Argument	"err ? err -> message : ""No reason found"""		5045941	3					
ANR	5046038	ConditionalExpression	"err ? err -> message : ""No reason found"""		5045941	0					
ANR	5046039	Condition	err		5045941	0					
ANR	5046040	Identifier	err		5045941	0					
ANR	5046041	PtrMemberAccess	err -> message		5045941	1					
ANR	5046042	Identifier	err		5045941	0					
ANR	5046043	Identifier	message		5045941	1					
ANR	5046044	PrimaryExpression	"""No reason found"""		5045941	2					
ANR	5046045	ReturnStatement	return false ;	1426:2:36625:36637	5045941	1	True				
ANR	5046046	Identifier	false		5045941	0					
ANR	5046047	ElseStatement	else		5045941	0					
ANR	5046048	CompoundStatement		20:7:520:520	5045941	0					
ANR	5046049	ReturnStatement	return true ;	1430:2:36669:36680	5045941	0	True				
ANR	5046050	Identifier	true		5045941	0					
ANR	5046051	ExpressionStatement	priv = set_root_priv ( )	1434:1:36698:36720	5045941	6	True				
ANR	5046052	AssignmentExpression	priv = set_root_priv ( )		5045941	0		=			
ANR	5046053	Identifier	priv		5045941	0					
ANR	5046054	CallExpression	set_root_priv ( )		5045941	1					
ANR	5046055	Callee	set_root_priv		5045941	0					
ANR	5046056	Identifier	set_root_priv		5045941	0					
ANR	5046057	ArgumentList			5045941	1					
ANR	5046058	IdentifierDeclStatement	bool ret = ( virDomainDestroy ( dom ) == 0 ) ;	1435:1:36723:36762	5045941	7	True				
ANR	5046059	IdentifierDecl	ret = ( virDomainDestroy ( dom ) == 0 )		5045941	0					
ANR	5046060	IdentifierDeclType	bool		5045941	0					
ANR	5046061	Identifier	ret		5045941	1					
ANR	5046062	AssignmentExpression	ret = ( virDomainDestroy ( dom ) == 0 )		5045941	2		=			
ANR	5046063	Identifier	ret		5045941	0					
ANR	5046064	EqualityExpression	virDomainDestroy ( dom ) == 0		5045941	1		==			
ANR	5046065	CallExpression	virDomainDestroy ( dom )		5045941	0					
ANR	5046066	Callee	virDomainDestroy		5045941	0					
ANR	5046067	Identifier	virDomainDestroy		5045941	0					
ANR	5046068	ArgumentList	dom		5045941	1					
ANR	5046069	Argument	dom		5045941	0					
ANR	5046070	Identifier	dom		5045941	0					
ANR	5046071	PrimaryExpression	0		5045941	1					
ANR	5046072	ExpressionStatement	virDomainFree ( dom )	1436:1:36765:36783	5045941	8	True				
ANR	5046073	CallExpression	virDomainFree ( dom )		5045941	0					
ANR	5046074	Callee	virDomainFree		5045941	0					
ANR	5046075	Identifier	virDomainFree		5045941	0					
ANR	5046076	ArgumentList	dom		5045941	1					
ANR	5046077	Argument	dom		5045941	0					
ANR	5046078	Identifier	dom		5045941	0					
ANR	5046079	ExpressionStatement	set_priv ( priv )	1437:1:36786:36800	5045941	9	True				
ANR	5046080	CallExpression	set_priv ( priv )		5045941	0					
ANR	5046081	Callee	set_priv		5045941	0					
ANR	5046082	Identifier	set_priv		5045941	0					
ANR	5046083	ArgumentList	priv		5045941	1					
ANR	5046084	Argument	priv		5045941	0					
ANR	5046085	Identifier	priv		5045941	0					
ANR	5046086	ReturnStatement	return ret ;	1438:1:36803:36813	5045941	10	True				
ANR	5046087	Identifier	ret		5045941	0					
ANR	5046088	ReturnType	bool		5045941	1					
ANR	5046089	Identifier	VirshType :: killVMFast		5045941	2					
ANR	5046090	ParameterList	"const char * vmname , virConnectPtr libvirt_con"		5045941	3					
ANR	5046091	Parameter	const char * vmname	1409:22:36097:36114	5045941	0	True				
ANR	5046092	ParameterType	const char *		5045941	0					
ANR	5046093	Identifier	vmname		5045941	1					
ANR	5046094	Parameter	virConnectPtr libvirt_con	1409:42:36117:36141	5045941	1	True				
ANR	5046095	ParameterType	virConnectPtr		5045941	0					
ANR	5046096	Identifier	libvirt_con		5045941	1					
ANR	5046097	CFGEntryNode	ENTRY		5045941		True				
ANR	5046098	CFGExitNode	EXIT		5045941		True				
ANR	5046099	Symbol	ret		5045941						
ANR	5046100	Symbol	libvirt_con		5045941						
ANR	5046101	Symbol	dom		5045941						
ANR	5046102	Symbol	NULL		5045941						
ANR	5046103	Symbol	err		5045941						
ANR	5046104	Symbol	err -> message		5045941						
ANR	5046105	Symbol	err -> code		5045941						
ANR	5046106	Symbol	false		5045941						
ANR	5046107	Symbol	D_ALWAYS		5045941						
ANR	5046108	Symbol	virDomainLookupByName		5045941						
ANR	5046109	Symbol	D_FULLDEBUG		5045941						
ANR	5046110	Symbol	set_root_priv		5045941						
ANR	5046111	Symbol	vmname		5045941						
ANR	5046112	Symbol	VIR_ERR_NO_DOMAIN		5045941						
ANR	5046113	Symbol	* vmname		5045941						
ANR	5046114	Symbol	virConnGetLastError		5045941						
ANR	5046115	Symbol	* err		5045941						
ANR	5046116	Symbol	virDomainDestroy		5045941						
ANR	5046117	Symbol	true		5045941						
ANR	5046118	Symbol	priv		5045941						
ANR	5046119	Function	XenType :: XenType	1441:0:36818:36991							
ANR	5046120	FunctionDef	"XenType :: XenType (const char * workingpath , ClassAd * ad)"		5046119	0					
ANR	5046121	CompoundStatement		1443:0:36906:36991	5046119	0					
ANR	5046122	ExpressionStatement	"m_sessionID = ""xen:///"""	1445:2:36911:36932	5046119	0	True				
ANR	5046123	AssignmentExpression	"m_sessionID = ""xen:///"""		5046119	0		=			
ANR	5046124	Identifier	m_sessionID		5046119	0					
ANR	5046125	PrimaryExpression	"""xen:///"""		5046119	1					
ANR	5046126	ExpressionStatement	this -> Connect ( )	1446:2:36936:36951	5046119	1	True				
ANR	5046127	CallExpression	this -> Connect ( )		5046119	0					
ANR	5046128	Callee	this -> Connect		5046119	0					
ANR	5046129	PtrMemberAccess	this -> Connect		5046119	0					
ANR	5046130	Identifier	this		5046119	0					
ANR	5046131	Identifier	Connect		5046119	1					
ANR	5046132	ArgumentList			5046119	1					
ANR	5046133	ExpressionStatement	m_vmtype = CONDOR_VM_UNIVERSE_XEN	1447:2:36955:36988	5046119	2	True				
ANR	5046134	AssignmentExpression	m_vmtype = CONDOR_VM_UNIVERSE_XEN		5046119	0		=			
ANR	5046135	Identifier	m_vmtype		5046119	0					
ANR	5046136	Identifier	CONDOR_VM_UNIVERSE_XEN		5046119	1					
ANR	5046137	Identifier	XenType :: XenType		5046119	1					
ANR	5046138	ParameterList	"const char * workingpath , ClassAd * ad"		5046119	2					
ANR	5046139	Parameter	const char * workingpath	1441:17:36835:36858	5046119	0	True				
ANR	5046140	ParameterType	const char *		5046119	0					
ANR	5046141	Identifier	workingpath		5046119	1					
ANR	5046142	Parameter	ClassAd * ad	1441:43:36861:36872	5046119	1	True				
ANR	5046143	ParameterType	ClassAd *		5046119	0					
ANR	5046144	Identifier	ad		5046119	1					
ANR	5046145	CFGEntryNode	ENTRY		5046119		True				
ANR	5046146	CFGExitNode	EXIT		5046119		True				
ANR	5046147	Symbol	m_vmtype		5046119						
ANR	5046148	Symbol	ad		5046119						
ANR	5046149	Symbol	m_sessionID		5046119						
ANR	5046150	Symbol	workingpath		5046119						
ANR	5046151	Symbol	CONDOR_VM_UNIVERSE_XEN		5046119						
ANR	5046152	Symbol	this		5046119						
ANR	5046153	Function	XenType :: CreateConfigFile	1451:0:36994:43002							
ANR	5046154	FunctionDef	XenType :: CreateConfigFile ()		5046153	0					
ANR	5046155	CompoundStatement		1452:0:37027:43002	5046153	0					
ANR	5046156	IdentifierDeclStatement	char * config_value = NULL ;	1453:1:37030:37055	5046153	0	True				
ANR	5046157	IdentifierDecl	* config_value = NULL		5046153	0					
ANR	5046158	IdentifierDeclType	char *		5046153	0					
ANR	5046159	Identifier	config_value		5046153	1					
ANR	5046160	AssignmentExpression	* config_value = NULL		5046153	2		=			
ANR	5046161	Identifier	NULL		5046153	0					
ANR	5046162	Identifier	NULL		5046153	1					
ANR	5046163	IdentifierDeclStatement	priv_state priv ;	1454:1:37058:37073	5046153	1	True				
ANR	5046164	IdentifierDecl	priv		5046153	0					
ANR	5046165	IdentifierDeclType	priv_state		5046153	0					
ANR	5046166	Identifier	priv		5046153	1					
ANR	5046167	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""In XenType::CreateConfigFile()\\n"" )"	1456:1:37077:37134	5046153	2	True				
ANR	5046168	CallExpression	"vmprintf ( D_FULLDEBUG , ""In XenType::CreateConfigFile()\\n"" )"		5046153	0					
ANR	5046169	Callee	vmprintf		5046153	0					
ANR	5046170	Identifier	vmprintf		5046153	0					
ANR	5046171	ArgumentList	D_FULLDEBUG		5046153	1					
ANR	5046172	Argument	D_FULLDEBUG		5046153	0					
ANR	5046173	Identifier	D_FULLDEBUG		5046153	0					
ANR	5046174	Argument	"""In XenType::CreateConfigFile()\\n"""		5046153	1					
ANR	5046175	PrimaryExpression	"""In XenType::CreateConfigFile()\\n"""		5046153	0					
ANR	5046176	IfStatement	if ( parseCommonParamFromClassAd ( true ) == false )		5046153	3					
ANR	5046177	Condition	parseCommonParamFromClassAd ( true ) == false	1459:5:37210:37251	5046153	0	True				
ANR	5046178	EqualityExpression	parseCommonParamFromClassAd ( true ) == false		5046153	0		==			
ANR	5046179	CallExpression	parseCommonParamFromClassAd ( true )		5046153	0					
ANR	5046180	Callee	parseCommonParamFromClassAd		5046153	0					
ANR	5046181	Identifier	parseCommonParamFromClassAd		5046153	0					
ANR	5046182	ArgumentList	true		5046153	1					
ANR	5046183	Argument	true		5046153	0					
ANR	5046184	Identifier	true		5046153	0					
ANR	5046185	Identifier	false		5046153	1					
ANR	5046186	CompoundStatement		8:50:227:227	5046153	1					
ANR	5046187	ReturnStatement	return false ;	1460:2:37259:37271	5046153	0	True				
ANR	5046188	Identifier	false		5046153	0					
ANR	5046189	IfStatement	if ( m_vm_mem < 32 )		5046153	4					
ANR	5046190	Condition	m_vm_mem < 32	1463:5:37282:37294	5046153	0	True				
ANR	5046191	RelationalExpression	m_vm_mem < 32		5046153	0		<			
ANR	5046192	Identifier	m_vm_mem		5046153	0					
ANR	5046193	PrimaryExpression	32		5046153	1					
ANR	5046194	CompoundStatement		12:21:270:270	5046153	1					
ANR	5046195	ExpressionStatement	m_vm_mem = 32	1465:2:37363:37376	5046153	0	True				
ANR	5046196	AssignmentExpression	m_vm_mem = 32		5046153	0		=			
ANR	5046197	Identifier	m_vm_mem		5046153	0					
ANR	5046198	PrimaryExpression	32		5046153	1					
ANR	5046199	IfStatement	"if ( m_classAd . LookupString ( VMPARAM_XEN_KERNEL , m_xen_kernel_submit_param ) != 1 )"		5046153	5					
ANR	5046200	Condition	"m_classAd . LookupString ( VMPARAM_XEN_KERNEL , m_xen_kernel_submit_param ) != 1"	1469:5:37426:37500	5046153	0	True				
ANR	5046201	EqualityExpression	"m_classAd . LookupString ( VMPARAM_XEN_KERNEL , m_xen_kernel_submit_param ) != 1"		5046153	0		!=			
ANR	5046202	CallExpression	"m_classAd . LookupString ( VMPARAM_XEN_KERNEL , m_xen_kernel_submit_param )"		5046153	0					
ANR	5046203	Callee	m_classAd . LookupString		5046153	0					
ANR	5046204	MemberAccess	m_classAd . LookupString		5046153	0					
ANR	5046205	Identifier	m_classAd		5046153	0					
ANR	5046206	Identifier	LookupString		5046153	1					
ANR	5046207	ArgumentList	VMPARAM_XEN_KERNEL		5046153	1					
ANR	5046208	Argument	VMPARAM_XEN_KERNEL		5046153	0					
ANR	5046209	Identifier	VMPARAM_XEN_KERNEL		5046153	0					
ANR	5046210	Argument	m_xen_kernel_submit_param		5046153	1					
ANR	5046211	Identifier	m_xen_kernel_submit_param		5046153	0					
ANR	5046212	PrimaryExpression	1		5046153	1					
ANR	5046213	CompoundStatement		18:83:476:476	5046153	1					
ANR	5046214	ExpressionStatement	"vmprintf ( D_ALWAYS , ""%s cannot be found in job classAd\\n"" , VMPARAM_XEN_KERNEL )"	1470:2:37508:37592	5046153	0	True				
ANR	5046215	CallExpression	"vmprintf ( D_ALWAYS , ""%s cannot be found in job classAd\\n"" , VMPARAM_XEN_KERNEL )"		5046153	0					
ANR	5046216	Callee	vmprintf		5046153	0					
ANR	5046217	Identifier	vmprintf		5046153	0					
ANR	5046218	ArgumentList	D_ALWAYS		5046153	1					
ANR	5046219	Argument	D_ALWAYS		5046153	0					
ANR	5046220	Identifier	D_ALWAYS		5046153	0					
ANR	5046221	Argument	"""%s cannot be found in job classAd\\n"""		5046153	1					
ANR	5046222	PrimaryExpression	"""%s cannot be found in job classAd\\n"""		5046153	0					
ANR	5046223	Argument	VMPARAM_XEN_KERNEL		5046153	2					
ANR	5046224	Identifier	VMPARAM_XEN_KERNEL		5046153	0					
ANR	5046225	ExpressionStatement	m_result_msg = VMGAHP_ERR_JOBCLASSAD_XEN_NO_KERNEL_PARAM	1472:2:37596:37652	5046153	1	True				
ANR	5046226	AssignmentExpression	m_result_msg = VMGAHP_ERR_JOBCLASSAD_XEN_NO_KERNEL_PARAM		5046153	0		=			
ANR	5046227	Identifier	m_result_msg		5046153	0					
ANR	5046228	Identifier	VMGAHP_ERR_JOBCLASSAD_XEN_NO_KERNEL_PARAM		5046153	1					
ANR	5046229	ReturnStatement	return false ;	1473:2:37656:37668	5046153	2	True				
ANR	5046230	Identifier	false		5046153	0					
ANR	5046231	ExpressionStatement	m_xen_kernel_submit_param . trim ( )	1475:1:37674:37706	5046153	6	True				
ANR	5046232	CallExpression	m_xen_kernel_submit_param . trim ( )		5046153	0					
ANR	5046233	Callee	m_xen_kernel_submit_param . trim		5046153	0					
ANR	5046234	MemberAccess	m_xen_kernel_submit_param . trim		5046153	0					
ANR	5046235	Identifier	m_xen_kernel_submit_param		5046153	0					
ANR	5046236	Identifier	trim		5046153	1					
ANR	5046237	ArgumentList			5046153	1					
ANR	5046238	IfStatement	"if ( strcasecmp ( m_xen_kernel_submit_param . Value ( ) , XEN_KERNEL_INCLUDED ) == 0 )"		5046153	7					
ANR	5046239	Condition	"strcasecmp ( m_xen_kernel_submit_param . Value ( ) , XEN_KERNEL_INCLUDED ) == 0"	1477:4:37713:37783	5046153	0	True				
ANR	5046240	EqualityExpression	"strcasecmp ( m_xen_kernel_submit_param . Value ( ) , XEN_KERNEL_INCLUDED ) == 0"		5046153	0		==			
ANR	5046241	CallExpression	"strcasecmp ( m_xen_kernel_submit_param . Value ( ) , XEN_KERNEL_INCLUDED )"		5046153	0					
ANR	5046242	Callee	strcasecmp		5046153	0					
ANR	5046243	Identifier	strcasecmp		5046153	0					
ANR	5046244	ArgumentList	m_xen_kernel_submit_param . Value ( )		5046153	1					
ANR	5046245	Argument	m_xen_kernel_submit_param . Value ( )		5046153	0					
ANR	5046246	CallExpression	m_xen_kernel_submit_param . Value ( )		5046153	0					
ANR	5046247	Callee	m_xen_kernel_submit_param . Value		5046153	0					
ANR	5046248	MemberAccess	m_xen_kernel_submit_param . Value		5046153	0					
ANR	5046249	Identifier	m_xen_kernel_submit_param		5046153	0					
ANR	5046250	Identifier	Value		5046153	1					
ANR	5046251	ArgumentList			5046153	1					
ANR	5046252	Argument	XEN_KERNEL_INCLUDED		5046153	1					
ANR	5046253	Identifier	XEN_KERNEL_INCLUDED		5046153	0					
ANR	5046254	PrimaryExpression	0		5046153	1					
ANR	5046255	CompoundStatement		27:1:760:760	5046153	1					
ANR	5046256	ExpressionStatement	"vmprintf ( D_ALWAYS , ""VMGahp will use xen bootloader\\n"" )"	1480:3:37860:37914	5046153	0	True				
ANR	5046257	CallExpression	"vmprintf ( D_ALWAYS , ""VMGahp will use xen bootloader\\n"" )"		5046153	0					
ANR	5046258	Callee	vmprintf		5046153	0					
ANR	5046259	Identifier	vmprintf		5046153	0					
ANR	5046260	ArgumentList	D_ALWAYS		5046153	1					
ANR	5046261	Argument	D_ALWAYS		5046153	0					
ANR	5046262	Identifier	D_ALWAYS		5046153	0					
ANR	5046263	Argument	"""VMGahp will use xen bootloader\\n"""		5046153	1					
ANR	5046264	PrimaryExpression	"""VMGahp will use xen bootloader\\n"""		5046153	0					
ANR	5046265	ExpressionStatement	"config_value = param ( ""XEN_BOOTLOADER"" )"	1481:3:37919:37959	5046153	1	True				
ANR	5046266	AssignmentExpression	"config_value = param ( ""XEN_BOOTLOADER"" )"		5046153	0		=			
ANR	5046267	Identifier	config_value		5046153	0					
ANR	5046268	CallExpression	"param ( ""XEN_BOOTLOADER"" )"		5046153	1					
ANR	5046269	Callee	param		5046153	0					
ANR	5046270	Identifier	param		5046153	0					
ANR	5046271	ArgumentList	"""XEN_BOOTLOADER"""		5046153	1					
ANR	5046272	Argument	"""XEN_BOOTLOADER"""		5046153	0					
ANR	5046273	PrimaryExpression	"""XEN_BOOTLOADER"""		5046153	0					
ANR	5046274	IfStatement	if ( ! config_value )		5046153	2					
ANR	5046275	Condition	! config_value	1482:7:37968:37980	5046153	0	True				
ANR	5046276	UnaryOperationExpression	! config_value		5046153	0					
ANR	5046277	UnaryOperator	!		5046153	0					
ANR	5046278	Identifier	config_value		5046153	1					
ANR	5046279	CompoundStatement		31:23:956:956	5046153	1					
ANR	5046280	Statement	vmprintf	1483:4:37990:37997	5046153	0	True				
ANR	5046281	Statement	(	1483:12:37998:37998	5046153	1	True				
ANR	5046282	Statement	D_ALWAYS	1483:13:37999:38006	5046153	2	True				
ANR	5046283	Statement	","	1483:21:38007:38007	5046153	3	True				
ANR	5046284	Statement	"""xen bootloader is not defined """	1483:23:38009:38040	5046153	4	True				
ANR	5046285	Statement	"""in vmgahp config file\\n"""	1484:6:38048:38072	5046153	5	True				
ANR	5046286	Statement	)	1484:31:38073:38073	5046153	6	True				
ANR	5046287	ExpressionStatement		1484:32:38074:38074	5046153	7	True				
ANR	5046288	ExpressionStatement	m_result_msg = VMGAHP_ERR_CRITICAL	1485:4:38080:38114	5046153	8	True				
ANR	5046289	AssignmentExpression	m_result_msg = VMGAHP_ERR_CRITICAL		5046153	0		=			
ANR	5046290	Identifier	m_result_msg		5046153	0					
ANR	5046291	Identifier	VMGAHP_ERR_CRITICAL		5046153	1					
ANR	5046292	ReturnStatement	return false ;	1486:4:38120:38132	5046153	9	True				
ANR	5046293	Identifier	false		5046153	0					
ANR	5046294	ElseStatement	else		5046153	0					
ANR	5046295	CompoundStatement		36:9:1115:1115	5046153	0					
ANR	5046296	ExpressionStatement	m_xen_bootloader = delete_quotation_marks ( config_value )	1488:4:38149:38204	5046153	0	True				
ANR	5046297	AssignmentExpression	m_xen_bootloader = delete_quotation_marks ( config_value )		5046153	0		=			
ANR	5046298	Identifier	m_xen_bootloader		5046153	0					
ANR	5046299	CallExpression	delete_quotation_marks ( config_value )		5046153	1					
ANR	5046300	Callee	delete_quotation_marks		5046153	0					
ANR	5046301	Identifier	delete_quotation_marks		5046153	0					
ANR	5046302	ArgumentList	config_value		5046153	1					
ANR	5046303	Argument	config_value		5046153	0					
ANR	5046304	Identifier	config_value		5046153	0					
ANR	5046305	ExpressionStatement	free ( config_value )	1489:4:38210:38228	5046153	1	True				
ANR	5046306	CallExpression	free ( config_value )		5046153	0					
ANR	5046307	Callee	free		5046153	0					
ANR	5046308	Identifier	free		5046153	0					
ANR	5046309	ArgumentList	config_value		5046153	1					
ANR	5046310	Argument	config_value		5046153	0					
ANR	5046311	Identifier	config_value		5046153	0					
ANR	5046312	ElseStatement	else		5046153	0					
ANR	5046313	IfStatement	"if ( strcasecmp ( m_xen_kernel_submit_param . Value ( ) , XEN_KERNEL_HW_VT ) == 0 )"		5046153	0					
ANR	5046314	Condition	"strcasecmp ( m_xen_kernel_submit_param . Value ( ) , XEN_KERNEL_HW_VT ) == 0"	1492:10:38251:38318	5046153	0	True				
ANR	5046315	EqualityExpression	"strcasecmp ( m_xen_kernel_submit_param . Value ( ) , XEN_KERNEL_HW_VT ) == 0"		5046153	0		==			
ANR	5046316	CallExpression	"strcasecmp ( m_xen_kernel_submit_param . Value ( ) , XEN_KERNEL_HW_VT )"		5046153	0					
ANR	5046317	Callee	strcasecmp		5046153	0					
ANR	5046318	Identifier	strcasecmp		5046153	0					
ANR	5046319	ArgumentList	m_xen_kernel_submit_param . Value ( )		5046153	1					
ANR	5046320	Argument	m_xen_kernel_submit_param . Value ( )		5046153	0					
ANR	5046321	CallExpression	m_xen_kernel_submit_param . Value ( )		5046153	0					
ANR	5046322	Callee	m_xen_kernel_submit_param . Value		5046153	0					
ANR	5046323	MemberAccess	m_xen_kernel_submit_param . Value		5046153	0					
ANR	5046324	Identifier	m_xen_kernel_submit_param		5046153	0					
ANR	5046325	Identifier	Value		5046153	1					
ANR	5046326	ArgumentList			5046153	1					
ANR	5046327	Argument	XEN_KERNEL_HW_VT		5046153	1					
ANR	5046328	Identifier	XEN_KERNEL_HW_VT		5046153	0					
ANR	5046329	PrimaryExpression	0		5046153	1					
ANR	5046330	CompoundStatement		41:80:1293:1293	5046153	1					
ANR	5046331	ExpressionStatement	"vmprintf ( D_ALWAYS , ""This VM requires hardware virtualization\\n"" )"	1493:2:38325:38389	5046153	0	True				
ANR	5046332	CallExpression	"vmprintf ( D_ALWAYS , ""This VM requires hardware virtualization\\n"" )"		5046153	0					
ANR	5046333	Callee	vmprintf		5046153	0					
ANR	5046334	Identifier	vmprintf		5046153	0					
ANR	5046335	ArgumentList	D_ALWAYS		5046153	1					
ANR	5046336	Argument	D_ALWAYS		5046153	0					
ANR	5046337	Identifier	D_ALWAYS		5046153	0					
ANR	5046338	Argument	"""This VM requires hardware virtualization\\n"""		5046153	1					
ANR	5046339	PrimaryExpression	"""This VM requires hardware virtualization\\n"""		5046153	0					
ANR	5046340	IfStatement	if ( ! m_vm_hardware_vt )		5046153	1					
ANR	5046341	Condition	! m_vm_hardware_vt	1494:6:38397:38413	5046153	0	True				
ANR	5046342	UnaryOperationExpression	! m_vm_hardware_vt		5046153	0					
ANR	5046343	UnaryOperator	!		5046153	0					
ANR	5046344	Identifier	m_vm_hardware_vt		5046153	1					
ANR	5046345	CompoundStatement		43:26:1389:1389	5046153	1					
ANR	5046346	ExpressionStatement	m_result_msg = VMGAHP_ERR_JOBCLASSAD_MISMATCHED_HARDWARE_VT	1495:3:38422:38481	5046153	0	True				
ANR	5046347	AssignmentExpression	m_result_msg = VMGAHP_ERR_JOBCLASSAD_MISMATCHED_HARDWARE_VT		5046153	0		=			
ANR	5046348	Identifier	m_result_msg		5046153	0					
ANR	5046349	Identifier	VMGAHP_ERR_JOBCLASSAD_MISMATCHED_HARDWARE_VT		5046153	1					
ANR	5046350	ReturnStatement	return false ;	1496:3:38486:38498	5046153	1	True				
ANR	5046351	Identifier	false		5046153	0					
ANR	5046352	ExpressionStatement	m_xen_hw_vt = true	1498:2:38506:38524	5046153	2	True				
ANR	5046353	AssignmentExpression	m_xen_hw_vt = true		5046153	0		=			
ANR	5046354	Identifier	m_xen_hw_vt		5046153	0					
ANR	5046355	Identifier	true		5046153	1					
ANR	5046356	ExpressionStatement	"m_allow_hw_vt_suspend = param_boolean ( ""XEN_ALLOW_HARDWARE_VT_SUSPEND"" , false )"	1499:2:38528:38608	5046153	3	True				
ANR	5046357	AssignmentExpression	"m_allow_hw_vt_suspend = param_boolean ( ""XEN_ALLOW_HARDWARE_VT_SUSPEND"" , false )"		5046153	0		=			
ANR	5046358	Identifier	m_allow_hw_vt_suspend		5046153	0					
ANR	5046359	CallExpression	"param_boolean ( ""XEN_ALLOW_HARDWARE_VT_SUSPEND"" , false )"		5046153	1					
ANR	5046360	Callee	param_boolean		5046153	0					
ANR	5046361	Identifier	param_boolean		5046153	0					
ANR	5046362	ArgumentList	"""XEN_ALLOW_HARDWARE_VT_SUSPEND"""		5046153	1					
ANR	5046363	Argument	"""XEN_ALLOW_HARDWARE_VT_SUSPEND"""		5046153	0					
ANR	5046364	PrimaryExpression	"""XEN_ALLOW_HARDWARE_VT_SUSPEND"""		5046153	0					
ANR	5046365	Argument	false		5046153	1					
ANR	5046366	Identifier	false		5046153	0					
ANR	5046367	ElseStatement	else		5046153	0					
ANR	5046368	CompoundStatement		59:2:1966:1987	5046153	0					
ANR	5046369	IfStatement	"if ( check_vm_read_access_file ( m_xen_kernel_submit_param . Value ( ) , false ) == false )"		5046153	0					
ANR	5046370	Condition	"check_vm_read_access_file ( m_xen_kernel_submit_param . Value ( ) , false ) == false"	1504:6:38725:38800	5046153	0	True				
ANR	5046371	EqualityExpression	"check_vm_read_access_file ( m_xen_kernel_submit_param . Value ( ) , false ) == false"		5046153	0		==			
ANR	5046372	CallExpression	"check_vm_read_access_file ( m_xen_kernel_submit_param . Value ( ) , false )"		5046153	0					
ANR	5046373	Callee	check_vm_read_access_file		5046153	0					
ANR	5046374	Identifier	check_vm_read_access_file		5046153	0					
ANR	5046375	ArgumentList	m_xen_kernel_submit_param . Value ( )		5046153	1					
ANR	5046376	Argument	m_xen_kernel_submit_param . Value ( )		5046153	0					
ANR	5046377	CallExpression	m_xen_kernel_submit_param . Value ( )		5046153	0					
ANR	5046378	Callee	m_xen_kernel_submit_param . Value		5046153	0					
ANR	5046379	MemberAccess	m_xen_kernel_submit_param . Value		5046153	0					
ANR	5046380	Identifier	m_xen_kernel_submit_param		5046153	0					
ANR	5046381	Identifier	Value		5046153	1					
ANR	5046382	ArgumentList			5046153	1					
ANR	5046383	Argument	false		5046153	1					
ANR	5046384	Identifier	false		5046153	0					
ANR	5046385	Identifier	false		5046153	1					
ANR	5046386	CompoundStatement		53:84:1775:1775	5046153	1					
ANR	5046387	ExpressionStatement	"vmprintf ( D_ALWAYS , ""xen kernel file '%s' cannot be read\\n"" , m_xen_kernel_submit_param . Value ( ) )"	1505:3:38808:38907	5046153	0	True				
ANR	5046388	CallExpression	"vmprintf ( D_ALWAYS , ""xen kernel file '%s' cannot be read\\n"" , m_xen_kernel_submit_param . Value ( ) )"		5046153	0					
ANR	5046389	Callee	vmprintf		5046153	0					
ANR	5046390	Identifier	vmprintf		5046153	0					
ANR	5046391	ArgumentList	D_ALWAYS		5046153	1					
ANR	5046392	Argument	D_ALWAYS		5046153	0					
ANR	5046393	Identifier	D_ALWAYS		5046153	0					
ANR	5046394	Argument	"""xen kernel file '%s' cannot be read\\n"""		5046153	1					
ANR	5046395	PrimaryExpression	"""xen kernel file '%s' cannot be read\\n"""		5046153	0					
ANR	5046396	Argument	m_xen_kernel_submit_param . Value ( )		5046153	2					
ANR	5046397	CallExpression	m_xen_kernel_submit_param . Value ( )		5046153	0					
ANR	5046398	Callee	m_xen_kernel_submit_param . Value		5046153	0					
ANR	5046399	MemberAccess	m_xen_kernel_submit_param . Value		5046153	0					
ANR	5046400	Identifier	m_xen_kernel_submit_param		5046153	0					
ANR	5046401	Identifier	Value		5046153	1					
ANR	5046402	ArgumentList			5046153	1					
ANR	5046403	ExpressionStatement	m_result_msg = VMGAHP_ERR_JOBCLASSAD_XEN_KERNEL_NOT_FOUND	1507:3:38912:38969	5046153	1	True				
ANR	5046404	AssignmentExpression	m_result_msg = VMGAHP_ERR_JOBCLASSAD_XEN_KERNEL_NOT_FOUND		5046153	0		=			
ANR	5046405	Identifier	m_result_msg		5046153	0					
ANR	5046406	Identifier	VMGAHP_ERR_JOBCLASSAD_XEN_KERNEL_NOT_FOUND		5046153	1					
ANR	5046407	ReturnStatement	return false ;	1508:3:38974:38986	5046153	2	True				
ANR	5046408	Identifier	false		5046153	0					
ANR	5046409	IdentifierDeclStatement	MyString tmp_fullname ;	1510:2:38994:39015	5046153	1	True				
ANR	5046410	IdentifierDecl	tmp_fullname		5046153	0					
ANR	5046411	IdentifierDeclType	MyString		5046153	0					
ANR	5046412	Identifier	tmp_fullname		5046153	1					
ANR	5046413	IfStatement	"if ( isTransferedFile ( m_xen_kernel_submit_param . Value ( ) , tmp_fullname ) )"		5046153	2					
ANR	5046414	Condition	"isTransferedFile ( m_xen_kernel_submit_param . Value ( ) , tmp_fullname )"	1511:6:39023:39092	5046153	0	True				
ANR	5046415	CallExpression	"isTransferedFile ( m_xen_kernel_submit_param . Value ( ) , tmp_fullname )"		5046153	0					
ANR	5046416	Callee	isTransferedFile		5046153	0					
ANR	5046417	Identifier	isTransferedFile		5046153	0					
ANR	5046418	ArgumentList	m_xen_kernel_submit_param . Value ( )		5046153	1					
ANR	5046419	Argument	m_xen_kernel_submit_param . Value ( )		5046153	0					
ANR	5046420	CallExpression	m_xen_kernel_submit_param . Value ( )		5046153	0					
ANR	5046421	Callee	m_xen_kernel_submit_param . Value		5046153	0					
ANR	5046422	MemberAccess	m_xen_kernel_submit_param . Value		5046153	0					
ANR	5046423	Identifier	m_xen_kernel_submit_param		5046153	0					
ANR	5046424	Identifier	Value		5046153	1					
ANR	5046425	ArgumentList			5046153	1					
ANR	5046426	Argument	tmp_fullname		5046153	1					
ANR	5046427	Identifier	tmp_fullname		5046153	0					
ANR	5046428	CompoundStatement		61:21:2068:2068	5046153	1					
ANR	5046429	ExpressionStatement	m_xen_kernel_submit_param = tmp_fullname	1515:3:39158:39198	5046153	0	True				
ANR	5046430	AssignmentExpression	m_xen_kernel_submit_param = tmp_fullname		5046153	0		=			
ANR	5046431	Identifier	m_xen_kernel_submit_param		5046153	0					
ANR	5046432	Identifier	tmp_fullname		5046153	1					
ANR	5046433	ExpressionStatement	m_xen_kernel_file = m_xen_kernel_submit_param	1518:2:39207:39252	5046153	3	True				
ANR	5046434	AssignmentExpression	m_xen_kernel_file = m_xen_kernel_submit_param		5046153	0		=			
ANR	5046435	Identifier	m_xen_kernel_file		5046153	0					
ANR	5046436	Identifier	m_xen_kernel_submit_param		5046153	1					
ANR	5046437	IfStatement	"if ( m_classAd . LookupString ( VMPARAM_XEN_INITRD , m_xen_initrd_file ) == 1 )"		5046153	4					
ANR	5046438	Condition	"m_classAd . LookupString ( VMPARAM_XEN_INITRD , m_xen_initrd_file ) == 1"	1520:6:39261:39331	5046153	0	True				
ANR	5046439	EqualityExpression	"m_classAd . LookupString ( VMPARAM_XEN_INITRD , m_xen_initrd_file ) == 1"		5046153	0		==			
ANR	5046440	CallExpression	"m_classAd . LookupString ( VMPARAM_XEN_INITRD , m_xen_initrd_file )"		5046153	0					
ANR	5046441	Callee	m_classAd . LookupString		5046153	0					
ANR	5046442	MemberAccess	m_classAd . LookupString		5046153	0					
ANR	5046443	Identifier	m_classAd		5046153	0					
ANR	5046444	Identifier	LookupString		5046153	1					
ANR	5046445	ArgumentList	VMPARAM_XEN_INITRD		5046153	1					
ANR	5046446	Argument	VMPARAM_XEN_INITRD		5046153	0					
ANR	5046447	Identifier	VMPARAM_XEN_INITRD		5046153	0					
ANR	5046448	Argument	m_xen_initrd_file		5046153	1					
ANR	5046449	Identifier	m_xen_initrd_file		5046153	0					
ANR	5046450	PrimaryExpression	1		5046153	1					
ANR	5046451	CompoundStatement		70:12:2307:2307	5046153	1					
ANR	5046452	ExpressionStatement	m_xen_initrd_file . trim ( )	1523:3:39386:39410	5046153	0	True				
ANR	5046453	CallExpression	m_xen_initrd_file . trim ( )		5046153	0					
ANR	5046454	Callee	m_xen_initrd_file . trim		5046153	0					
ANR	5046455	MemberAccess	m_xen_initrd_file . trim		5046153	0					
ANR	5046456	Identifier	m_xen_initrd_file		5046153	0					
ANR	5046457	Identifier	trim		5046153	1					
ANR	5046458	ArgumentList			5046153	1					
ANR	5046459	IfStatement	"if ( check_vm_read_access_file ( m_xen_initrd_file . Value ( ) , false ) == false )"		5046153	1					
ANR	5046460	Condition	"check_vm_read_access_file ( m_xen_initrd_file . Value ( ) , false ) == false"	1524:7:39419:39486	5046153	0	True				
ANR	5046461	EqualityExpression	"check_vm_read_access_file ( m_xen_initrd_file . Value ( ) , false ) == false"		5046153	0		==			
ANR	5046462	CallExpression	"check_vm_read_access_file ( m_xen_initrd_file . Value ( ) , false )"		5046153	0					
ANR	5046463	Callee	check_vm_read_access_file		5046153	0					
ANR	5046464	Identifier	check_vm_read_access_file		5046153	0					
ANR	5046465	ArgumentList	m_xen_initrd_file . Value ( )		5046153	1					
ANR	5046466	Argument	m_xen_initrd_file . Value ( )		5046153	0					
ANR	5046467	CallExpression	m_xen_initrd_file . Value ( )		5046153	0					
ANR	5046468	Callee	m_xen_initrd_file . Value		5046153	0					
ANR	5046469	MemberAccess	m_xen_initrd_file . Value		5046153	0					
ANR	5046470	Identifier	m_xen_initrd_file		5046153	0					
ANR	5046471	Identifier	Value		5046153	1					
ANR	5046472	ArgumentList			5046153	1					
ANR	5046473	Argument	false		5046153	1					
ANR	5046474	Identifier	false		5046153	0					
ANR	5046475	Identifier	false		5046153	1					
ANR	5046476	CompoundStatement		73:77:2461:2461	5046153	1					
ANR	5046477	ExpressionStatement	"vmprintf ( D_ALWAYS , ""xen ramdisk file '%s' cannot be read\\n"" , m_xen_initrd_file . Value ( ) )"	1526:4:39554:39647	5046153	0	True				
ANR	5046478	CallExpression	"vmprintf ( D_ALWAYS , ""xen ramdisk file '%s' cannot be read\\n"" , m_xen_initrd_file . Value ( ) )"		5046153	0					
ANR	5046479	Callee	vmprintf		5046153	0					
ANR	5046480	Identifier	vmprintf		5046153	0					
ANR	5046481	ArgumentList	D_ALWAYS		5046153	1					
ANR	5046482	Argument	D_ALWAYS		5046153	0					
ANR	5046483	Identifier	D_ALWAYS		5046153	0					
ANR	5046484	Argument	"""xen ramdisk file '%s' cannot be read\\n"""		5046153	1					
ANR	5046485	PrimaryExpression	"""xen ramdisk file '%s' cannot be read\\n"""		5046153	0					
ANR	5046486	Argument	m_xen_initrd_file . Value ( )		5046153	2					
ANR	5046487	CallExpression	m_xen_initrd_file . Value ( )		5046153	0					
ANR	5046488	Callee	m_xen_initrd_file . Value		5046153	0					
ANR	5046489	MemberAccess	m_xen_initrd_file . Value		5046153	0					
ANR	5046490	Identifier	m_xen_initrd_file		5046153	0					
ANR	5046491	Identifier	Value		5046153	1					
ANR	5046492	ArgumentList			5046153	1					
ANR	5046493	ExpressionStatement	m_result_msg = VMGAHP_ERR_JOBCLASSAD_XEN_INITRD_NOT_FOUND	1528:4:39653:39710	5046153	1	True				
ANR	5046494	AssignmentExpression	m_result_msg = VMGAHP_ERR_JOBCLASSAD_XEN_INITRD_NOT_FOUND		5046153	0		=			
ANR	5046495	Identifier	m_result_msg		5046153	0					
ANR	5046496	Identifier	VMGAHP_ERR_JOBCLASSAD_XEN_INITRD_NOT_FOUND		5046153	1					
ANR	5046497	ReturnStatement	return false ;	1529:4:39716:39728	5046153	2	True				
ANR	5046498	Identifier	false		5046153	0					
ANR	5046499	IfStatement	"if ( isTransferedFile ( m_xen_initrd_file . Value ( ) , tmp_fullname ) )"		5046153	2					
ANR	5046500	Condition	"isTransferedFile ( m_xen_initrd_file . Value ( ) , tmp_fullname )"	1531:7:39742:39804	5046153	0	True				
ANR	5046501	CallExpression	"isTransferedFile ( m_xen_initrd_file . Value ( ) , tmp_fullname )"		5046153	0					
ANR	5046502	Callee	isTransferedFile		5046153	0					
ANR	5046503	Identifier	isTransferedFile		5046153	0					
ANR	5046504	ArgumentList	m_xen_initrd_file . Value ( )		5046153	1					
ANR	5046505	Argument	m_xen_initrd_file . Value ( )		5046153	0					
ANR	5046506	CallExpression	m_xen_initrd_file . Value ( )		5046153	0					
ANR	5046507	Callee	m_xen_initrd_file . Value		5046153	0					
ANR	5046508	MemberAccess	m_xen_initrd_file . Value		5046153	0					
ANR	5046509	Identifier	m_xen_initrd_file		5046153	0					
ANR	5046510	Identifier	Value		5046153	1					
ANR	5046511	ArgumentList			5046153	1					
ANR	5046512	Argument	tmp_fullname		5046153	1					
ANR	5046513	Identifier	tmp_fullname		5046153	0					
ANR	5046514	CompoundStatement		81:22:2780:2780	5046153	1					
ANR	5046515	ExpressionStatement	m_xen_initrd_file = tmp_fullname	1535:4:39873:39905	5046153	0	True				
ANR	5046516	AssignmentExpression	m_xen_initrd_file = tmp_fullname		5046153	0		=			
ANR	5046517	Identifier	m_xen_initrd_file		5046153	0					
ANR	5046518	Identifier	tmp_fullname		5046153	1					
ANR	5046519	IfStatement	if ( m_xen_kernel_file . IsEmpty ( ) == false )		5046153	8					
ANR	5046520	Condition	m_xen_kernel_file . IsEmpty ( ) == false	1540:5:39925:39960	5046153	0	True				
ANR	5046521	EqualityExpression	m_xen_kernel_file . IsEmpty ( ) == false		5046153	0		==			
ANR	5046522	CallExpression	m_xen_kernel_file . IsEmpty ( )		5046153	0					
ANR	5046523	Callee	m_xen_kernel_file . IsEmpty		5046153	0					
ANR	5046524	MemberAccess	m_xen_kernel_file . IsEmpty		5046153	0					
ANR	5046525	Identifier	m_xen_kernel_file		5046153	0					
ANR	5046526	Identifier	IsEmpty		5046153	1					
ANR	5046527	ArgumentList			5046153	1					
ANR	5046528	Identifier	false		5046153	1					
ANR	5046529	CompoundStatement		89:44:2936:2936	5046153	1					
ANR	5046530	IfStatement	"if ( m_classAd . LookupString ( VMPARAM_XEN_ROOT , m_xen_root ) != 1 )"		5046153	0					
ANR	5046531	Condition	"m_classAd . LookupString ( VMPARAM_XEN_ROOT , m_xen_root ) != 1"	1542:6:40010:40066	5046153	0	True				
ANR	5046532	EqualityExpression	"m_classAd . LookupString ( VMPARAM_XEN_ROOT , m_xen_root ) != 1"		5046153	0		!=			
ANR	5046533	CallExpression	"m_classAd . LookupString ( VMPARAM_XEN_ROOT , m_xen_root )"		5046153	0					
ANR	5046534	Callee	m_classAd . LookupString		5046153	0					
ANR	5046535	MemberAccess	m_classAd . LookupString		5046153	0					
ANR	5046536	Identifier	m_classAd		5046153	0					
ANR	5046537	Identifier	LookupString		5046153	1					
ANR	5046538	ArgumentList	VMPARAM_XEN_ROOT		5046153	1					
ANR	5046539	Argument	VMPARAM_XEN_ROOT		5046153	0					
ANR	5046540	Identifier	VMPARAM_XEN_ROOT		5046153	0					
ANR	5046541	Argument	m_xen_root		5046153	1					
ANR	5046542	Identifier	m_xen_root		5046153	0					
ANR	5046543	PrimaryExpression	1		5046153	1					
ANR	5046544	CompoundStatement		91:66:3042:3042	5046153	1					
ANR	5046545	ExpressionStatement	"vmprintf ( D_ALWAYS , ""%s cannot be found in job classAd\\n"" , VMPARAM_XEN_ROOT )"	1543:3:40075:40155	5046153	0	True				
ANR	5046546	CallExpression	"vmprintf ( D_ALWAYS , ""%s cannot be found in job classAd\\n"" , VMPARAM_XEN_ROOT )"		5046153	0					
ANR	5046547	Callee	vmprintf		5046153	0					
ANR	5046548	Identifier	vmprintf		5046153	0					
ANR	5046549	ArgumentList	D_ALWAYS		5046153	1					
ANR	5046550	Argument	D_ALWAYS		5046153	0					
ANR	5046551	Identifier	D_ALWAYS		5046153	0					
ANR	5046552	Argument	"""%s cannot be found in job classAd\\n"""		5046153	1					
ANR	5046553	PrimaryExpression	"""%s cannot be found in job classAd\\n"""		5046153	0					
ANR	5046554	Argument	VMPARAM_XEN_ROOT		5046153	2					
ANR	5046555	Identifier	VMPARAM_XEN_ROOT		5046153	0					
ANR	5046556	ExpressionStatement	m_result_msg = VMGAHP_ERR_JOBCLASSAD_XEN_NO_ROOT_DEVICE_PARAM	1545:3:40160:40221	5046153	1	True				
ANR	5046557	AssignmentExpression	m_result_msg = VMGAHP_ERR_JOBCLASSAD_XEN_NO_ROOT_DEVICE_PARAM		5046153	0		=			
ANR	5046558	Identifier	m_result_msg		5046153	0					
ANR	5046559	Identifier	VMGAHP_ERR_JOBCLASSAD_XEN_NO_ROOT_DEVICE_PARAM		5046153	1					
ANR	5046560	ReturnStatement	return false ;	1546:3:40226:40238	5046153	2	True				
ANR	5046561	Identifier	false		5046153	0					
ANR	5046562	ExpressionStatement	m_xen_root . trim ( )	1548:2:40246:40263	5046153	1	True				
ANR	5046563	CallExpression	m_xen_root . trim ( )		5046153	0					
ANR	5046564	Callee	m_xen_root . trim		5046153	0					
ANR	5046565	MemberAccess	m_xen_root . trim		5046153	0					
ANR	5046566	Identifier	m_xen_root		5046153	0					
ANR	5046567	Identifier	trim		5046153	1					
ANR	5046568	ArgumentList			5046153	1					
ANR	5046569	IdentifierDeclStatement	MyString xen_disk ;	1551:1:40270:40287	5046153	9	True				
ANR	5046570	IdentifierDecl	xen_disk		5046153	0					
ANR	5046571	IdentifierDeclType	MyString		5046153	0					
ANR	5046572	Identifier	xen_disk		5046153	1					
ANR	5046573	IfStatement	"if ( m_classAd . LookupString ( VMPARAM_VM_DISK , xen_disk ) != 1 )"		5046153	10					
ANR	5046574	Condition	"m_classAd . LookupString ( VMPARAM_VM_DISK , xen_disk ) != 1"	1553:5:40331:40384	5046153	0	True				
ANR	5046575	EqualityExpression	"m_classAd . LookupString ( VMPARAM_VM_DISK , xen_disk ) != 1"		5046153	0		!=			
ANR	5046576	CallExpression	"m_classAd . LookupString ( VMPARAM_VM_DISK , xen_disk )"		5046153	0					
ANR	5046577	Callee	m_classAd . LookupString		5046153	0					
ANR	5046578	MemberAccess	m_classAd . LookupString		5046153	0					
ANR	5046579	Identifier	m_classAd		5046153	0					
ANR	5046580	Identifier	LookupString		5046153	1					
ANR	5046581	ArgumentList	VMPARAM_VM_DISK		5046153	1					
ANR	5046582	Argument	VMPARAM_VM_DISK		5046153	0					
ANR	5046583	Identifier	VMPARAM_VM_DISK		5046153	0					
ANR	5046584	Argument	xen_disk		5046153	1					
ANR	5046585	Identifier	xen_disk		5046153	0					
ANR	5046586	PrimaryExpression	1		5046153	1					
ANR	5046587	CompoundStatement		102:62:3360:3360	5046153	1					
ANR	5046588	ExpressionStatement	"vmprintf ( D_ALWAYS , ""%s cannot be found in job classAd\\n"" , VMPARAM_VM_DISK )"	1554:2:40392:40470	5046153	0	True				
ANR	5046589	CallExpression	"vmprintf ( D_ALWAYS , ""%s cannot be found in job classAd\\n"" , VMPARAM_VM_DISK )"		5046153	0					
ANR	5046590	Callee	vmprintf		5046153	0					
ANR	5046591	Identifier	vmprintf		5046153	0					
ANR	5046592	ArgumentList	D_ALWAYS		5046153	1					
ANR	5046593	Argument	D_ALWAYS		5046153	0					
ANR	5046594	Identifier	D_ALWAYS		5046153	0					
ANR	5046595	Argument	"""%s cannot be found in job classAd\\n"""		5046153	1					
ANR	5046596	PrimaryExpression	"""%s cannot be found in job classAd\\n"""		5046153	0					
ANR	5046597	Argument	VMPARAM_VM_DISK		5046153	2					
ANR	5046598	Identifier	VMPARAM_VM_DISK		5046153	0					
ANR	5046599	ExpressionStatement	m_result_msg = VMGAHP_ERR_JOBCLASSAD_XEN_NO_DISK_PARAM	1556:2:40474:40528	5046153	1	True				
ANR	5046600	AssignmentExpression	m_result_msg = VMGAHP_ERR_JOBCLASSAD_XEN_NO_DISK_PARAM		5046153	0		=			
ANR	5046601	Identifier	m_result_msg		5046153	0					
ANR	5046602	Identifier	VMGAHP_ERR_JOBCLASSAD_XEN_NO_DISK_PARAM		5046153	1					
ANR	5046603	ReturnStatement	return false ;	1557:2:40532:40544	5046153	2	True				
ANR	5046604	Identifier	false		5046153	0					
ANR	5046605	ExpressionStatement	xen_disk . trim ( )	1559:1:40550:40565	5046153	11	True				
ANR	5046606	CallExpression	xen_disk . trim ( )		5046153	0					
ANR	5046607	Callee	xen_disk . trim		5046153	0					
ANR	5046608	MemberAccess	xen_disk . trim		5046153	0					
ANR	5046609	Identifier	xen_disk		5046153	0					
ANR	5046610	Identifier	trim		5046153	1					
ANR	5046611	ArgumentList			5046153	1					
ANR	5046612	ExpressionStatement	priv = set_root_priv ( )	1563:1:40645:40667	5046153	12	True				
ANR	5046613	AssignmentExpression	priv = set_root_priv ( )		5046153	0		=			
ANR	5046614	Identifier	priv		5046153	0					
ANR	5046615	CallExpression	set_root_priv ( )		5046153	1					
ANR	5046616	Callee	set_root_priv		5046153	0					
ANR	5046617	Identifier	set_root_priv		5046153	0					
ANR	5046618	ArgumentList			5046153	1					
ANR	5046619	IfStatement	if ( parseXenDiskParam ( xen_disk . Value ( ) ) == false )		5046153	13					
ANR	5046620	Condition	parseXenDiskParam ( xen_disk . Value ( ) ) == false	1565:5:40675:40718	5046153	0	True				
ANR	5046621	EqualityExpression	parseXenDiskParam ( xen_disk . Value ( ) ) == false		5046153	0		==			
ANR	5046622	CallExpression	parseXenDiskParam ( xen_disk . Value ( ) )		5046153	0					
ANR	5046623	Callee	parseXenDiskParam		5046153	0					
ANR	5046624	Identifier	parseXenDiskParam		5046153	0					
ANR	5046625	ArgumentList	xen_disk . Value ( )		5046153	1					
ANR	5046626	Argument	xen_disk . Value ( )		5046153	0					
ANR	5046627	CallExpression	xen_disk . Value ( )		5046153	0					
ANR	5046628	Callee	xen_disk . Value		5046153	0					
ANR	5046629	MemberAccess	xen_disk . Value		5046153	0					
ANR	5046630	Identifier	xen_disk		5046153	0					
ANR	5046631	Identifier	Value		5046153	1					
ANR	5046632	ArgumentList			5046153	1					
ANR	5046633	Identifier	false		5046153	1					
ANR	5046634	CompoundStatement		114:52:3694:3694	5046153	1					
ANR	5046635	ExpressionStatement	"vmprintf ( D_ALWAYS , ""xen disk format(%s) is incorrect\\n"" , xen_disk . Value ( ) )"	1566:2:40726:40804	5046153	0	True				
ANR	5046636	CallExpression	"vmprintf ( D_ALWAYS , ""xen disk format(%s) is incorrect\\n"" , xen_disk . Value ( ) )"		5046153	0					
ANR	5046637	Callee	vmprintf		5046153	0					
ANR	5046638	Identifier	vmprintf		5046153	0					
ANR	5046639	ArgumentList	D_ALWAYS		5046153	1					
ANR	5046640	Argument	D_ALWAYS		5046153	0					
ANR	5046641	Identifier	D_ALWAYS		5046153	0					
ANR	5046642	Argument	"""xen disk format(%s) is incorrect\\n"""		5046153	1					
ANR	5046643	PrimaryExpression	"""xen disk format(%s) is incorrect\\n"""		5046153	0					
ANR	5046644	Argument	xen_disk . Value ( )		5046153	2					
ANR	5046645	CallExpression	xen_disk . Value ( )		5046153	0					
ANR	5046646	Callee	xen_disk . Value		5046153	0					
ANR	5046647	MemberAccess	xen_disk . Value		5046153	0					
ANR	5046648	Identifier	xen_disk		5046153	0					
ANR	5046649	Identifier	Value		5046153	1					
ANR	5046650	ArgumentList			5046153	1					
ANR	5046651	ExpressionStatement	m_result_msg = VMGAHP_ERR_JOBCLASSAD_XEN_INVALID_DISK_PARAM	1568:2:40808:40867	5046153	1	True				
ANR	5046652	AssignmentExpression	m_result_msg = VMGAHP_ERR_JOBCLASSAD_XEN_INVALID_DISK_PARAM		5046153	0		=			
ANR	5046653	Identifier	m_result_msg		5046153	0					
ANR	5046654	Identifier	VMGAHP_ERR_JOBCLASSAD_XEN_INVALID_DISK_PARAM		5046153	1					
ANR	5046655	ExpressionStatement	set_priv ( priv )	1569:2:40871:40885	5046153	2	True				
ANR	5046656	CallExpression	set_priv ( priv )		5046153	0					
ANR	5046657	Callee	set_priv		5046153	0					
ANR	5046658	Identifier	set_priv		5046153	0					
ANR	5046659	ArgumentList	priv		5046153	1					
ANR	5046660	Argument	priv		5046153	0					
ANR	5046661	Identifier	priv		5046153	0					
ANR	5046662	ReturnStatement	return false ;	1570:2:40889:40901	5046153	3	True				
ANR	5046663	Identifier	false		5046153	0					
ANR	5046664	ExpressionStatement	set_priv ( priv )	1572:1:40907:40921	5046153	14	True				
ANR	5046665	CallExpression	set_priv ( priv )		5046153	0					
ANR	5046666	Callee	set_priv		5046153	0					
ANR	5046667	Identifier	set_priv		5046153	0					
ANR	5046668	ArgumentList	priv		5046153	1					
ANR	5046669	Argument	priv		5046153	0					
ANR	5046670	Identifier	priv		5046153	0					
ANR	5046671	IfStatement	"if ( m_classAd . LookupString ( VMPARAM_XEN_KERNEL_PARAMS , m_xen_kernel_params ) == 1 )"		5046153	15					
ANR	5046672	Condition	"m_classAd . LookupString ( VMPARAM_XEN_KERNEL_PARAMS , m_xen_kernel_params ) == 1"	1575:5:40974:41048	5046153	0	True				
ANR	5046673	EqualityExpression	"m_classAd . LookupString ( VMPARAM_XEN_KERNEL_PARAMS , m_xen_kernel_params ) == 1"		5046153	0		==			
ANR	5046674	CallExpression	"m_classAd . LookupString ( VMPARAM_XEN_KERNEL_PARAMS , m_xen_kernel_params )"		5046153	0					
ANR	5046675	Callee	m_classAd . LookupString		5046153	0					
ANR	5046676	MemberAccess	m_classAd . LookupString		5046153	0					
ANR	5046677	Identifier	m_classAd		5046153	0					
ANR	5046678	Identifier	LookupString		5046153	1					
ANR	5046679	ArgumentList	VMPARAM_XEN_KERNEL_PARAMS		5046153	1					
ANR	5046680	Argument	VMPARAM_XEN_KERNEL_PARAMS		5046153	0					
ANR	5046681	Identifier	VMPARAM_XEN_KERNEL_PARAMS		5046153	0					
ANR	5046682	Argument	m_xen_kernel_params		5046153	1					
ANR	5046683	Identifier	m_xen_kernel_params		5046153	0					
ANR	5046684	PrimaryExpression	1		5046153	1					
ANR	5046685	CompoundStatement		124:83:4024:4024	5046153	1					
ANR	5046686	ExpressionStatement	m_xen_kernel_params . trim ( )	1576:2:41056:41082	5046153	0	True				
ANR	5046687	CallExpression	m_xen_kernel_params . trim ( )		5046153	0					
ANR	5046688	Callee	m_xen_kernel_params . trim		5046153	0					
ANR	5046689	MemberAccess	m_xen_kernel_params . trim		5046153	0					
ANR	5046690	Identifier	m_xen_kernel_params		5046153	0					
ANR	5046691	Identifier	trim		5046153	1					
ANR	5046692	ArgumentList			5046153	1					
ANR	5046693	IfStatement	if ( m_transfer_intermediate_files . isEmpty ( ) == false )		5046153	16					
ANR	5046694	Condition	m_transfer_intermediate_files . isEmpty ( ) == false	1580:5:41161:41208	5046153	0	True				
ANR	5046695	EqualityExpression	m_transfer_intermediate_files . isEmpty ( ) == false		5046153	0		==			
ANR	5046696	CallExpression	m_transfer_intermediate_files . isEmpty ( )		5046153	0					
ANR	5046697	Callee	m_transfer_intermediate_files . isEmpty		5046153	0					
ANR	5046698	MemberAccess	m_transfer_intermediate_files . isEmpty		5046153	0					
ANR	5046699	Identifier	m_transfer_intermediate_files		5046153	0					
ANR	5046700	Identifier	isEmpty		5046153	1					
ANR	5046701	ArgumentList			5046153	1					
ANR	5046702	Identifier	false		5046153	1					
ANR	5046703	CompoundStatement		133:2:4292:4318	5046153	1					
ANR	5046704	IdentifierDeclStatement	MyString ckpt_config_file ;	1583:2:41291:41316	5046153	0	True				
ANR	5046705	IdentifierDecl	ckpt_config_file		5046153	0					
ANR	5046706	IdentifierDeclType	MyString		5046153	0					
ANR	5046707	Identifier	ckpt_config_file		5046153	1					
ANR	5046708	IdentifierDeclStatement	MyString ckpt_suspend_file ;	1584:2:41320:41346	5046153	1	True				
ANR	5046709	IdentifierDecl	ckpt_suspend_file		5046153	0					
ANR	5046710	IdentifierDeclType	MyString		5046153	0					
ANR	5046711	Identifier	ckpt_suspend_file		5046153	1					
ANR	5046712	IfStatement	"if ( findCkptConfigAndSuspendFile ( ckpt_config_file , ckpt_suspend_file ) == false )"		5046153	2					
ANR	5046713	Condition	"findCkptConfigAndSuspendFile ( ckpt_config_file , ckpt_suspend_file ) == false"	1585:6:41354:41431	5046153	0	True				
ANR	5046714	EqualityExpression	"findCkptConfigAndSuspendFile ( ckpt_config_file , ckpt_suspend_file ) == false"		5046153	0		==			
ANR	5046715	CallExpression	"findCkptConfigAndSuspendFile ( ckpt_config_file , ckpt_suspend_file )"		5046153	0					
ANR	5046716	Callee	findCkptConfigAndSuspendFile		5046153	0					
ANR	5046717	Identifier	findCkptConfigAndSuspendFile		5046153	0					
ANR	5046718	ArgumentList	ckpt_config_file		5046153	1					
ANR	5046719	Argument	ckpt_config_file		5046153	0					
ANR	5046720	Identifier	ckpt_config_file		5046153	0					
ANR	5046721	Argument	ckpt_suspend_file		5046153	1					
ANR	5046722	Identifier	ckpt_suspend_file		5046153	0					
ANR	5046723	Identifier	false		5046153	1					
ANR	5046724	CompoundStatement		135:15:4407:4407	5046153	1					
ANR	5046725	Statement	vmprintf	1587:3:41440:41447	5046153	0	True				
ANR	5046726	Statement	(	1587:11:41448:41448	5046153	1	True				
ANR	5046727	Statement	D_ALWAYS	1587:12:41449:41456	5046153	2	True				
ANR	5046728	Statement	","	1587:20:41457:41457	5046153	3	True				
ANR	5046729	Statement	"""Checkpoint files exist but """	1587:22:41459:41487	5046153	4	True				
ANR	5046730	Statement	"""cannot find the correct config file and suspend file\\n"""	1588:5:41494:41549	5046153	5	True				
ANR	5046731	Statement	)	1588:61:41550:41550	5046153	6	True				
ANR	5046732	ExpressionStatement		1588:62:41551:41551	5046153	7	True				
ANR	5046733	ExpressionStatement	deleteNonTransferredFiles ( )	1590:3:41614:41641	5046153	8	True				
ANR	5046734	CallExpression	deleteNonTransferredFiles ( )		5046153	0					
ANR	5046735	Callee	deleteNonTransferredFiles		5046153	0					
ANR	5046736	Identifier	deleteNonTransferredFiles		5046153	0					
ANR	5046737	ArgumentList			5046153	1					
ANR	5046738	ExpressionStatement	m_restart_with_ckpt = false	1591:3:41646:41673	5046153	9	True				
ANR	5046739	AssignmentExpression	m_restart_with_ckpt = false		5046153	0		=			
ANR	5046740	Identifier	m_restart_with_ckpt		5046153	0					
ANR	5046741	Identifier	false		5046153	1					
ANR	5046742	ElseStatement	else		5046153	0					
ANR	5046743	CompoundStatement		141:8:4655:4655	5046153	0					
ANR	5046744	ExpressionStatement	m_configfile = ckpt_config_file	1593:3:41688:41719	5046153	0	True				
ANR	5046745	AssignmentExpression	m_configfile = ckpt_config_file		5046153	0		=			
ANR	5046746	Identifier	m_configfile		5046153	0					
ANR	5046747	Identifier	ckpt_config_file		5046153	1					
ANR	5046748	ExpressionStatement	m_suspendfile = ckpt_suspend_file	1594:3:41724:41757	5046153	1	True				
ANR	5046749	AssignmentExpression	m_suspendfile = ckpt_suspend_file		5046153	0		=			
ANR	5046750	Identifier	m_suspendfile		5046153	0					
ANR	5046751	Identifier	ckpt_suspend_file		5046153	1					
ANR	5046752	Statement	vmprintf	1595:3:41762:41769	5046153	2	True				
ANR	5046753	Statement	(	1595:11:41770:41770	5046153	3	True				
ANR	5046754	Statement	D_ALWAYS	1595:12:41771:41778	5046153	4	True				
ANR	5046755	Statement	","	1595:20:41779:41779	5046153	5	True				
ANR	5046756	Statement	"""Found checkpointed files, """	1595:22:41781:41808	5046153	6	True				
ANR	5046757	Statement	"""so we start using them\\n"""	1596:5:41815:41840	5046153	7	True				
ANR	5046758	Statement	)	1596:31:41841:41841	5046153	8	True				
ANR	5046759	ExpressionStatement		1596:32:41842:41842	5046153	9	True				
ANR	5046760	ExpressionStatement	m_restart_with_ckpt = true	1597:3:41847:41873	5046153	10	True				
ANR	5046761	AssignmentExpression	m_restart_with_ckpt = true		5046153	0		=			
ANR	5046762	Identifier	m_restart_with_ckpt		5046153	0					
ANR	5046763	Identifier	true		5046153	1					
ANR	5046764	ReturnStatement	return true ;	1598:3:41878:41889	5046153	11	True				
ANR	5046765	Identifier	true		5046153	0					
ANR	5046766	IfStatement	if ( m_vm_checkpoint )		5046153	17					
ANR	5046767	Condition	m_vm_checkpoint	1603:5:41962:41976	5046153	0	True				
ANR	5046768	Identifier	m_vm_checkpoint		5046153	0					
ANR	5046769	CompoundStatement		152:23:4952:4952	5046153	1					
ANR	5046770	IfStatement	if ( m_has_transferred_disk_file )		5046153	0					
ANR	5046771	Condition	m_has_transferred_disk_file	1608:6:42180:42206	5046153	0	True				
ANR	5046772	Identifier	m_has_transferred_disk_file		5046153	0					
ANR	5046773	CompoundStatement		157:36:5182:5182	5046153	1					
ANR	5046774	Statement	vmprintf	1612:3:42373:42380	5046153	0	True				
ANR	5046775	Statement	(	1612:11:42381:42381	5046153	1	True				
ANR	5046776	Statement	D_ALWAYS	1612:12:42382:42389	5046153	2	True				
ANR	5046777	Statement	","	1612:20:42390:42390	5046153	3	True				
ANR	5046778	Statement	"""To use vm checkpint in Virsh, """	1612:22:42392:42423	5046153	4	True				
ANR	5046779	Statement	"""all disk and iso files should be """	1613:5:42430:42464	5046153	5	True				
ANR	5046780	Statement	"""in a shared file system\\n"""	1614:5:42471:42497	5046153	6	True				
ANR	5046781	Statement	)	1614:32:42498:42498	5046153	7	True				
ANR	5046782	ExpressionStatement		1614:33:42499:42499	5046153	8	True				
ANR	5046783	ExpressionStatement	m_result_msg = VMGAHP_ERR_JOBCLASSAD_XEN_MISMATCHED_CHECKPOINT	1615:3:42504:42566	5046153	9	True				
ANR	5046784	AssignmentExpression	m_result_msg = VMGAHP_ERR_JOBCLASSAD_XEN_MISMATCHED_CHECKPOINT		5046153	0		=			
ANR	5046785	Identifier	m_result_msg		5046153	0					
ANR	5046786	Identifier	VMGAHP_ERR_JOBCLASSAD_XEN_MISMATCHED_CHECKPOINT		5046153	1					
ANR	5046787	ReturnStatement	return false ;	1616:3:42571:42583	5046153	10	True				
ANR	5046788	Identifier	false		5046153	0					
ANR	5046789	IdentifierDeclStatement	MyString tmp_config_name ;	1622:1:42623:42647	5046153	18	True				
ANR	5046790	IdentifierDecl	tmp_config_name		5046153	0					
ANR	5046791	IdentifierDeclType	MyString		5046153	0					
ANR	5046792	Identifier	tmp_config_name		5046153	1					
ANR	5046793	ExpressionStatement	"tmp_config_name . sprintf ( ""%s%c%s"" , m_workingpath . Value ( ) , DIR_DELIM_CHAR , XEN_CONFIG_FILE_NAME )"	1623:1:42650:42746	5046153	19	True				
ANR	5046794	CallExpression	"tmp_config_name . sprintf ( ""%s%c%s"" , m_workingpath . Value ( ) , DIR_DELIM_CHAR , XEN_CONFIG_FILE_NAME )"		5046153	0					
ANR	5046795	Callee	tmp_config_name . sprintf		5046153	0					
ANR	5046796	MemberAccess	tmp_config_name . sprintf		5046153	0					
ANR	5046797	Identifier	tmp_config_name		5046153	0					
ANR	5046798	Identifier	sprintf		5046153	1					
ANR	5046799	ArgumentList	"""%s%c%s"""		5046153	1					
ANR	5046800	Argument	"""%s%c%s"""		5046153	0					
ANR	5046801	PrimaryExpression	"""%s%c%s"""		5046153	0					
ANR	5046802	Argument	m_workingpath . Value ( )		5046153	1					
ANR	5046803	CallExpression	m_workingpath . Value ( )		5046153	0					
ANR	5046804	Callee	m_workingpath . Value		5046153	0					
ANR	5046805	MemberAccess	m_workingpath . Value		5046153	0					
ANR	5046806	Identifier	m_workingpath		5046153	0					
ANR	5046807	Identifier	Value		5046153	1					
ANR	5046808	ArgumentList			5046153	1					
ANR	5046809	Argument	DIR_DELIM_CHAR		5046153	2					
ANR	5046810	Identifier	DIR_DELIM_CHAR		5046153	0					
ANR	5046811	Argument	XEN_CONFIG_FILE_NAME		5046153	3					
ANR	5046812	Identifier	XEN_CONFIG_FILE_NAME		5046153	0					
ANR	5046813	ExpressionStatement	"vmprintf ( D_ALWAYS , ""CreateXenVMConfigFile\\n"" )"	1626:1:42750:42795	5046153	20	True				
ANR	5046814	CallExpression	"vmprintf ( D_ALWAYS , ""CreateXenVMConfigFile\\n"" )"		5046153	0					
ANR	5046815	Callee	vmprintf		5046153	0					
ANR	5046816	Identifier	vmprintf		5046153	0					
ANR	5046817	ArgumentList	D_ALWAYS		5046153	1					
ANR	5046818	Argument	D_ALWAYS		5046153	0					
ANR	5046819	Identifier	D_ALWAYS		5046153	0					
ANR	5046820	Argument	"""CreateXenVMConfigFile\\n"""		5046153	1					
ANR	5046821	PrimaryExpression	"""CreateXenVMConfigFile\\n"""		5046153	0					
ANR	5046822	IfStatement	if ( CreateXenVMConfigFile ( tmp_config_name . Value ( ) ) == false )		5046153	21					
ANR	5046823	Condition	CreateXenVMConfigFile ( tmp_config_name . Value ( ) ) == false	1628:5:42803:42860	5046153	0	True				
ANR	5046824	EqualityExpression	CreateXenVMConfigFile ( tmp_config_name . Value ( ) ) == false		5046153	0		==			
ANR	5046825	CallExpression	CreateXenVMConfigFile ( tmp_config_name . Value ( ) )		5046153	0					
ANR	5046826	Callee	CreateXenVMConfigFile		5046153	0					
ANR	5046827	Identifier	CreateXenVMConfigFile		5046153	0					
ANR	5046828	ArgumentList	tmp_config_name . Value ( )		5046153	1					
ANR	5046829	Argument	tmp_config_name . Value ( )		5046153	0					
ANR	5046830	CallExpression	tmp_config_name . Value ( )		5046153	0					
ANR	5046831	Callee	tmp_config_name . Value		5046153	0					
ANR	5046832	MemberAccess	tmp_config_name . Value		5046153	0					
ANR	5046833	Identifier	tmp_config_name		5046153	0					
ANR	5046834	Identifier	Value		5046153	1					
ANR	5046835	ArgumentList			5046153	1					
ANR	5046836	Identifier	false		5046153	1					
ANR	5046837	CompoundStatement		178:14:5836:5836	5046153	1					
ANR	5046838	ExpressionStatement	m_result_msg = VMGAHP_ERR_CRITICAL	1630:2:42868:42902	5046153	0	True				
ANR	5046839	AssignmentExpression	m_result_msg = VMGAHP_ERR_CRITICAL		5046153	0		=			
ANR	5046840	Identifier	m_result_msg		5046153	0					
ANR	5046841	Identifier	VMGAHP_ERR_CRITICAL		5046153	1					
ANR	5046842	ReturnStatement	return false ;	1631:2:42906:42918	5046153	1	True				
ANR	5046843	Identifier	false		5046153	0					
ANR	5046844	ExpressionStatement	m_configfile = tmp_config_name . Value ( )	1635:1:42948:42986	5046153	22	True				
ANR	5046845	AssignmentExpression	m_configfile = tmp_config_name . Value ( )		5046153	0		=			
ANR	5046846	Identifier	m_configfile		5046153	0					
ANR	5046847	CallExpression	tmp_config_name . Value ( )		5046153	1					
ANR	5046848	Callee	tmp_config_name . Value		5046153	0					
ANR	5046849	MemberAccess	tmp_config_name . Value		5046153	0					
ANR	5046850	Identifier	tmp_config_name		5046153	0					
ANR	5046851	Identifier	Value		5046153	1					
ANR	5046852	ArgumentList			5046153	1					
ANR	5046853	ReturnStatement	return true ;	1636:1:42989:43000	5046153	23	True				
ANR	5046854	Identifier	true		5046153	0					
ANR	5046855	ReturnType	bool		5046153	1					
ANR	5046856	Identifier	XenType :: CreateConfigFile		5046153	2					
ANR	5046857	ParameterList			5046153	3					
ANR	5046858	CFGEntryNode	ENTRY		5046153		True				
ANR	5046859	CFGExitNode	EXIT		5046153		True				
ANR	5046860	Symbol	m_result_msg		5046153						
ANR	5046861	Symbol	VMGAHP_ERR_JOBCLASSAD_XEN_MISMATCHED_CHECKPOINT		5046153						
ANR	5046862	Symbol	isTransferedFile		5046153						
ANR	5046863	Symbol	m_workingpath . Value		5046153						
ANR	5046864	Symbol	tmp_fullname		5046153						
ANR	5046865	Symbol	m_xen_kernel_submit_param		5046153						
ANR	5046866	Symbol	m_vm_mem		5046153						
ANR	5046867	Symbol	delete_quotation_marks		5046153						
ANR	5046868	Symbol	xen_disk . Value		5046153						
ANR	5046869	Symbol	XEN_KERNEL_INCLUDED		5046153						
ANR	5046870	Symbol	m_xen_kernel_submit_param . Value		5046153						
ANR	5046871	Symbol	m_xen_kernel_file		5046153						
ANR	5046872	Symbol	VMPARAM_XEN_ROOT		5046153						
ANR	5046873	Symbol	m_xen_kernel_params		5046153						
ANR	5046874	Symbol	m_allow_hw_vt_suspend		5046153						
ANR	5046875	Symbol	m_vm_checkpoint		5046153						
ANR	5046876	Symbol	VMGAHP_ERR_JOBCLASSAD_XEN_INITRD_NOT_FOUND		5046153						
ANR	5046877	Symbol	VMGAHP_ERR_JOBCLASSAD_XEN_INVALID_DISK_PARAM		5046153						
ANR	5046878	Symbol	VMGAHP_ERR_JOBCLASSAD_XEN_NO_KERNEL_PARAM		5046153						
ANR	5046879	Symbol	priv		5046153						
ANR	5046880	Symbol	VMGAHP_ERR_JOBCLASSAD_XEN_KERNEL_NOT_FOUND		5046153						
ANR	5046881	Symbol	strcasecmp		5046153						
ANR	5046882	Symbol	VMGAHP_ERR_JOBCLASSAD_MISMATCHED_HARDWARE_VT		5046153						
ANR	5046883	Symbol	m_transfer_intermediate_files		5046153						
ANR	5046884	Symbol	XEN_CONFIG_FILE_NAME		5046153						
ANR	5046885	Symbol	NULL		5046153						
ANR	5046886	Symbol	m_classAd . LookupString		5046153						
ANR	5046887	Symbol	m_xen_kernel_file . IsEmpty		5046153						
ANR	5046888	Symbol	VMPARAM_XEN_KERNEL		5046153						
ANR	5046889	Symbol	D_FULLDEBUG		5046153						
ANR	5046890	Symbol	param_boolean		5046153						
ANR	5046891	Symbol	VMGAHP_ERR_JOBCLASSAD_XEN_NO_ROOT_DEVICE_PARAM		5046153						
ANR	5046892	Symbol	m_restart_with_ckpt		5046153						
ANR	5046893	Symbol	VMPARAM_XEN_INITRD		5046153						
ANR	5046894	Symbol	tmp_config_name . Value		5046153						
ANR	5046895	Symbol	true		5046153						
ANR	5046896	Symbol	XEN_KERNEL_HW_VT		5046153						
ANR	5046897	Symbol	parseXenDiskParam		5046153						
ANR	5046898	Symbol	config_value		5046153						
ANR	5046899	Symbol	parseCommonParamFromClassAd		5046153						
ANR	5046900	Symbol	m_xen_bootloader		5046153						
ANR	5046901	Symbol	VMGAHP_ERR_JOBCLASSAD_XEN_NO_DISK_PARAM		5046153						
ANR	5046902	Symbol	VMGAHP_ERR_CRITICAL		5046153						
ANR	5046903	Symbol	ckpt_suspend_file		5046153						
ANR	5046904	Symbol	m_configfile		5046153						
ANR	5046905	Symbol	findCkptConfigAndSuspendFile		5046153						
ANR	5046906	Symbol	param		5046153						
ANR	5046907	Symbol	m_transfer_intermediate_files . isEmpty		5046153						
ANR	5046908	Symbol	m_vm_hardware_vt		5046153						
ANR	5046909	Symbol	m_has_transferred_disk_file		5046153						
ANR	5046910	Symbol	m_xen_root		5046153						
ANR	5046911	Symbol	VMPARAM_VM_DISK		5046153						
ANR	5046912	Symbol	tmp_config_name		5046153						
ANR	5046913	Symbol	m_suspendfile		5046153						
ANR	5046914	Symbol	DIR_DELIM_CHAR		5046153						
ANR	5046915	Symbol	false		5046153						
ANR	5046916	Symbol	D_ALWAYS		5046153						
ANR	5046917	Symbol	set_root_priv		5046153						
ANR	5046918	Symbol	ckpt_config_file		5046153						
ANR	5046919	Symbol	CreateXenVMConfigFile		5046153						
ANR	5046920	Symbol	m_workingpath		5046153						
ANR	5046921	Symbol	m_xen_hw_vt		5046153						
ANR	5046922	Symbol	m_xen_initrd_file		5046153						
ANR	5046923	Symbol	xen_disk		5046153						
ANR	5046924	Symbol	VMPARAM_XEN_KERNEL_PARAMS		5046153						
ANR	5046925	Symbol	m_classAd		5046153						
ANR	5046926	Symbol	m_xen_initrd_file . Value		5046153						
ANR	5046927	Symbol	check_vm_read_access_file		5046153						
ANR	5046928	Function	KVMType :: KVMType	1640:0:43006:43184							
ANR	5046929	FunctionDef	"KVMType :: KVMType (const char * workingpath , ClassAd * ad)"		5046928	0					
ANR	5046930	CompoundStatement		1642:0:43094:43184	5046928	0					
ANR	5046931	ExpressionStatement	"m_sessionID = ""qemu:///session"""	1644:1:43098:43127	5046928	0	True				
ANR	5046932	AssignmentExpression	"m_sessionID = ""qemu:///session"""		5046928	0		=			
ANR	5046933	Identifier	m_sessionID		5046928	0					
ANR	5046934	PrimaryExpression	"""qemu:///session"""		5046928	1					
ANR	5046935	ExpressionStatement	this -> Connect ( )	1645:1:43130:43145	5046928	1	True				
ANR	5046936	CallExpression	this -> Connect ( )		5046928	0					
ANR	5046937	Callee	this -> Connect		5046928	0					
ANR	5046938	PtrMemberAccess	this -> Connect		5046928	0					
ANR	5046939	Identifier	this		5046928	0					
ANR	5046940	Identifier	Connect		5046928	1					
ANR	5046941	ArgumentList			5046928	1					
ANR	5046942	ExpressionStatement	m_vmtype = CONDOR_VM_UNIVERSE_KVM	1646:1:43148:43181	5046928	2	True				
ANR	5046943	AssignmentExpression	m_vmtype = CONDOR_VM_UNIVERSE_KVM		5046928	0		=			
ANR	5046944	Identifier	m_vmtype		5046928	0					
ANR	5046945	Identifier	CONDOR_VM_UNIVERSE_KVM		5046928	1					
ANR	5046946	Identifier	KVMType :: KVMType		5046928	1					
ANR	5046947	ParameterList	"const char * workingpath , ClassAd * ad"		5046928	2					
ANR	5046948	Parameter	const char * workingpath	1640:17:43023:43046	5046928	0	True				
ANR	5046949	ParameterType	const char *		5046928	0					
ANR	5046950	Identifier	workingpath		5046928	1					
ANR	5046951	Parameter	ClassAd * ad	1640:43:43049:43060	5046928	1	True				
ANR	5046952	ParameterType	ClassAd *		5046928	0					
ANR	5046953	Identifier	ad		5046928	1					
ANR	5046954	CFGEntryNode	ENTRY		5046928		True				
ANR	5046955	CFGExitNode	EXIT		5046928		True				
ANR	5046956	Symbol	m_vmtype		5046928						
ANR	5046957	Symbol	ad		5046928						
ANR	5046958	Symbol	m_sessionID		5046928						
ANR	5046959	Symbol	CONDOR_VM_UNIVERSE_KVM		5046928						
ANR	5046960	Symbol	workingpath		5046928						
ANR	5046961	Symbol	this		5046928						
ANR	5046962	Function	KVMType :: CreateConfigFile	1650:0:43187:46013							
ANR	5046963	FunctionDef	KVMType :: CreateConfigFile ()		5046962	0					
ANR	5046964	CompoundStatement		1652:0:43220:46013	5046962	0					
ANR	5046965	IdentifierDeclStatement	priv_state priv ;	1653:1:43223:43238	5046962	0	True				
ANR	5046966	IdentifierDecl	priv		5046962	0					
ANR	5046967	IdentifierDeclType	priv_state		5046962	0					
ANR	5046968	Identifier	priv		5046962	1					
ANR	5046969	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""In KVMType::CreateConfigFile()\\n"" )"	1655:1:43242:43299	5046962	1	True				
ANR	5046970	CallExpression	"vmprintf ( D_FULLDEBUG , ""In KVMType::CreateConfigFile()\\n"" )"		5046962	0					
ANR	5046971	Callee	vmprintf		5046962	0					
ANR	5046972	Identifier	vmprintf		5046962	0					
ANR	5046973	ArgumentList	D_FULLDEBUG		5046962	1					
ANR	5046974	Argument	D_FULLDEBUG		5046962	0					
ANR	5046975	Identifier	D_FULLDEBUG		5046962	0					
ANR	5046976	Argument	"""In KVMType::CreateConfigFile()\\n"""		5046962	1					
ANR	5046977	PrimaryExpression	"""In KVMType::CreateConfigFile()\\n"""		5046962	0					
ANR	5046978	IfStatement	if ( parseCommonParamFromClassAd ( true ) == false )		5046962	2					
ANR	5046979	Condition	parseCommonParamFromClassAd ( true ) == false	1658:5:43375:43416	5046962	0	True				
ANR	5046980	EqualityExpression	parseCommonParamFromClassAd ( true ) == false		5046962	0		==			
ANR	5046981	CallExpression	parseCommonParamFromClassAd ( true )		5046962	0					
ANR	5046982	Callee	parseCommonParamFromClassAd		5046962	0					
ANR	5046983	Identifier	parseCommonParamFromClassAd		5046962	0					
ANR	5046984	ArgumentList	true		5046962	1					
ANR	5046985	Argument	true		5046962	0					
ANR	5046986	Identifier	true		5046962	0					
ANR	5046987	Identifier	false		5046962	1					
ANR	5046988	CompoundStatement		7:50:199:199	5046962	1					
ANR	5046989	ReturnStatement	return false ;	1659:2:43424:43436	5046962	0	True				
ANR	5046990	Identifier	false		5046962	0					
ANR	5046991	IfStatement	if ( m_vm_mem < 32 )		5046962	3					
ANR	5046992	Condition	m_vm_mem < 32	1662:5:43447:43459	5046962	0	True				
ANR	5046993	RelationalExpression	m_vm_mem < 32		5046962	0		<			
ANR	5046994	Identifier	m_vm_mem		5046962	0					
ANR	5046995	PrimaryExpression	32		5046962	1					
ANR	5046996	CompoundStatement		11:21:242:242	5046962	1					
ANR	5046997	ExpressionStatement	m_vm_mem = 32	1664:2:43528:43541	5046962	0	True				
ANR	5046998	AssignmentExpression	m_vm_mem = 32		5046962	0		=			
ANR	5046999	Identifier	m_vm_mem		5046962	0					
ANR	5047000	PrimaryExpression	32		5046962	1					
ANR	5047001	IdentifierDeclStatement	MyString kvm_disk ;	1667:1:43548:43565	5046962	4	True				
ANR	5047002	IdentifierDecl	kvm_disk		5046962	0					
ANR	5047003	IdentifierDeclType	MyString		5046962	0					
ANR	5047004	Identifier	kvm_disk		5046962	1					
ANR	5047005	IfStatement	"if ( m_classAd . LookupString ( VMPARAM_VM_DISK , kvm_disk ) != 1 )"		5046962	5					
ANR	5047006	Condition	"m_classAd . LookupString ( VMPARAM_VM_DISK , kvm_disk ) != 1"	1669:5:43609:43662	5046962	0	True				
ANR	5047007	EqualityExpression	"m_classAd . LookupString ( VMPARAM_VM_DISK , kvm_disk ) != 1"		5046962	0		!=			
ANR	5047008	CallExpression	"m_classAd . LookupString ( VMPARAM_VM_DISK , kvm_disk )"		5046962	0					
ANR	5047009	Callee	m_classAd . LookupString		5046962	0					
ANR	5047010	MemberAccess	m_classAd . LookupString		5046962	0					
ANR	5047011	Identifier	m_classAd		5046962	0					
ANR	5047012	Identifier	LookupString		5046962	1					
ANR	5047013	ArgumentList	VMPARAM_VM_DISK		5046962	1					
ANR	5047014	Argument	VMPARAM_VM_DISK		5046962	0					
ANR	5047015	Identifier	VMPARAM_VM_DISK		5046962	0					
ANR	5047016	Argument	kvm_disk		5046962	1					
ANR	5047017	Identifier	kvm_disk		5046962	0					
ANR	5047018	PrimaryExpression	1		5046962	1					
ANR	5047019	CompoundStatement		18:62:445:445	5046962	1					
ANR	5047020	ExpressionStatement	"vmprintf ( D_ALWAYS , ""%s cannot be found in job classAd\\n"" , VMPARAM_VM_DISK )"	1670:2:43670:43748	5046962	0	True				
ANR	5047021	CallExpression	"vmprintf ( D_ALWAYS , ""%s cannot be found in job classAd\\n"" , VMPARAM_VM_DISK )"		5046962	0					
ANR	5047022	Callee	vmprintf		5046962	0					
ANR	5047023	Identifier	vmprintf		5046962	0					
ANR	5047024	ArgumentList	D_ALWAYS		5046962	1					
ANR	5047025	Argument	D_ALWAYS		5046962	0					
ANR	5047026	Identifier	D_ALWAYS		5046962	0					
ANR	5047027	Argument	"""%s cannot be found in job classAd\\n"""		5046962	1					
ANR	5047028	PrimaryExpression	"""%s cannot be found in job classAd\\n"""		5046962	0					
ANR	5047029	Argument	VMPARAM_VM_DISK		5046962	2					
ANR	5047030	Identifier	VMPARAM_VM_DISK		5046962	0					
ANR	5047031	ExpressionStatement	m_result_msg = VMGAHP_ERR_JOBCLASSAD_XEN_NO_DISK_PARAM	1672:2:43752:43806	5046962	1	True				
ANR	5047032	AssignmentExpression	m_result_msg = VMGAHP_ERR_JOBCLASSAD_XEN_NO_DISK_PARAM		5046962	0		=			
ANR	5047033	Identifier	m_result_msg		5046962	0					
ANR	5047034	Identifier	VMGAHP_ERR_JOBCLASSAD_XEN_NO_DISK_PARAM		5046962	1					
ANR	5047035	ReturnStatement	return false ;	1673:2:43810:43822	5046962	2	True				
ANR	5047036	Identifier	false		5046962	0					
ANR	5047037	ExpressionStatement	kvm_disk . trim ( )	1675:1:43828:43843	5046962	6	True				
ANR	5047038	CallExpression	kvm_disk . trim ( )		5046962	0					
ANR	5047039	Callee	kvm_disk . trim		5046962	0					
ANR	5047040	MemberAccess	kvm_disk . trim		5046962	0					
ANR	5047041	Identifier	kvm_disk		5046962	0					
ANR	5047042	Identifier	trim		5046962	1					
ANR	5047043	ArgumentList			5046962	1					
ANR	5047044	ExpressionStatement	priv = set_root_priv ( )	1679:1:43923:43945	5046962	7	True				
ANR	5047045	AssignmentExpression	priv = set_root_priv ( )		5046962	0		=			
ANR	5047046	Identifier	priv		5046962	0					
ANR	5047047	CallExpression	set_root_priv ( )		5046962	1					
ANR	5047048	Callee	set_root_priv		5046962	0					
ANR	5047049	Identifier	set_root_priv		5046962	0					
ANR	5047050	ArgumentList			5046962	1					
ANR	5047051	IfStatement	if ( parseXenDiskParam ( kvm_disk . Value ( ) ) == false )		5046962	8					
ANR	5047052	Condition	parseXenDiskParam ( kvm_disk . Value ( ) ) == false	1681:5:43953:43996	5046962	0	True				
ANR	5047053	EqualityExpression	parseXenDiskParam ( kvm_disk . Value ( ) ) == false		5046962	0		==			
ANR	5047054	CallExpression	parseXenDiskParam ( kvm_disk . Value ( ) )		5046962	0					
ANR	5047055	Callee	parseXenDiskParam		5046962	0					
ANR	5047056	Identifier	parseXenDiskParam		5046962	0					
ANR	5047057	ArgumentList	kvm_disk . Value ( )		5046962	1					
ANR	5047058	Argument	kvm_disk . Value ( )		5046962	0					
ANR	5047059	CallExpression	kvm_disk . Value ( )		5046962	0					
ANR	5047060	Callee	kvm_disk . Value		5046962	0					
ANR	5047061	MemberAccess	kvm_disk . Value		5046962	0					
ANR	5047062	Identifier	kvm_disk		5046962	0					
ANR	5047063	Identifier	Value		5046962	1					
ANR	5047064	ArgumentList			5046962	1					
ANR	5047065	Identifier	false		5046962	1					
ANR	5047066	CompoundStatement		30:52:779:779	5046962	1					
ANR	5047067	ExpressionStatement	"vmprintf ( D_ALWAYS , ""kvm disk format(%s) is incorrect\\n"" , kvm_disk . Value ( ) )"	1682:2:44004:44082	5046962	0	True				
ANR	5047068	CallExpression	"vmprintf ( D_ALWAYS , ""kvm disk format(%s) is incorrect\\n"" , kvm_disk . Value ( ) )"		5046962	0					
ANR	5047069	Callee	vmprintf		5046962	0					
ANR	5047070	Identifier	vmprintf		5046962	0					
ANR	5047071	ArgumentList	D_ALWAYS		5046962	1					
ANR	5047072	Argument	D_ALWAYS		5046962	0					
ANR	5047073	Identifier	D_ALWAYS		5046962	0					
ANR	5047074	Argument	"""kvm disk format(%s) is incorrect\\n"""		5046962	1					
ANR	5047075	PrimaryExpression	"""kvm disk format(%s) is incorrect\\n"""		5046962	0					
ANR	5047076	Argument	kvm_disk . Value ( )		5046962	2					
ANR	5047077	CallExpression	kvm_disk . Value ( )		5046962	0					
ANR	5047078	Callee	kvm_disk . Value		5046962	0					
ANR	5047079	MemberAccess	kvm_disk . Value		5046962	0					
ANR	5047080	Identifier	kvm_disk		5046962	0					
ANR	5047081	Identifier	Value		5046962	1					
ANR	5047082	ArgumentList			5046962	1					
ANR	5047083	ExpressionStatement	m_result_msg = VMGAHP_ERR_JOBCLASSAD_KVM_INVALID_DISK_PARAM	1684:2:44086:44145	5046962	1	True				
ANR	5047084	AssignmentExpression	m_result_msg = VMGAHP_ERR_JOBCLASSAD_KVM_INVALID_DISK_PARAM		5046962	0		=			
ANR	5047085	Identifier	m_result_msg		5046962	0					
ANR	5047086	Identifier	VMGAHP_ERR_JOBCLASSAD_KVM_INVALID_DISK_PARAM		5046962	1					
ANR	5047087	ExpressionStatement	set_priv ( priv )	1685:2:44149:44163	5046962	2	True				
ANR	5047088	CallExpression	set_priv ( priv )		5046962	0					
ANR	5047089	Callee	set_priv		5046962	0					
ANR	5047090	Identifier	set_priv		5046962	0					
ANR	5047091	ArgumentList	priv		5046962	1					
ANR	5047092	Argument	priv		5046962	0					
ANR	5047093	Identifier	priv		5046962	0					
ANR	5047094	ReturnStatement	return false ;	1686:2:44167:44179	5046962	3	True				
ANR	5047095	Identifier	false		5046962	0					
ANR	5047096	ExpressionStatement	set_priv ( priv )	1688:1:44185:44199	5046962	9	True				
ANR	5047097	CallExpression	set_priv ( priv )		5046962	0					
ANR	5047098	Callee	set_priv		5046962	0					
ANR	5047099	Identifier	set_priv		5046962	0					
ANR	5047100	ArgumentList	priv		5046962	1					
ANR	5047101	Argument	priv		5046962	0					
ANR	5047102	Identifier	priv		5046962	0					
ANR	5047103	IfStatement	if ( m_transfer_intermediate_files . isEmpty ( ) == false )		5046962	10					
ANR	5047104	Condition	m_transfer_intermediate_files . isEmpty ( ) == false	1691:5:44275:44322	5046962	0	True				
ANR	5047105	EqualityExpression	m_transfer_intermediate_files . isEmpty ( ) == false		5046962	0		==			
ANR	5047106	CallExpression	m_transfer_intermediate_files . isEmpty ( )		5046962	0					
ANR	5047107	Callee	m_transfer_intermediate_files . isEmpty		5046962	0					
ANR	5047108	MemberAccess	m_transfer_intermediate_files . isEmpty		5046962	0					
ANR	5047109	Identifier	m_transfer_intermediate_files		5046962	0					
ANR	5047110	Identifier	isEmpty		5046962	1					
ANR	5047111	ArgumentList			5046962	1					
ANR	5047112	Identifier	false		5046962	1					
ANR	5047113	CompoundStatement		44:2:1213:1239	5046962	1					
ANR	5047114	IdentifierDeclStatement	MyString ckpt_config_file ;	1694:2:44405:44430	5046962	0	True				
ANR	5047115	IdentifierDecl	ckpt_config_file		5046962	0					
ANR	5047116	IdentifierDeclType	MyString		5046962	0					
ANR	5047117	Identifier	ckpt_config_file		5046962	1					
ANR	5047118	IdentifierDeclStatement	MyString ckpt_suspend_file ;	1695:2:44434:44460	5046962	1	True				
ANR	5047119	IdentifierDecl	ckpt_suspend_file		5046962	0					
ANR	5047120	IdentifierDeclType	MyString		5046962	0					
ANR	5047121	Identifier	ckpt_suspend_file		5046962	1					
ANR	5047122	IfStatement	"if ( findCkptConfigAndSuspendFile ( ckpt_config_file , ckpt_suspend_file ) == false )"		5046962	2					
ANR	5047123	Condition	"findCkptConfigAndSuspendFile ( ckpt_config_file , ckpt_suspend_file ) == false"	1696:6:44468:44545	5046962	0	True				
ANR	5047124	EqualityExpression	"findCkptConfigAndSuspendFile ( ckpt_config_file , ckpt_suspend_file ) == false"		5046962	0		==			
ANR	5047125	CallExpression	"findCkptConfigAndSuspendFile ( ckpt_config_file , ckpt_suspend_file )"		5046962	0					
ANR	5047126	Callee	findCkptConfigAndSuspendFile		5046962	0					
ANR	5047127	Identifier	findCkptConfigAndSuspendFile		5046962	0					
ANR	5047128	ArgumentList	ckpt_config_file		5046962	1					
ANR	5047129	Argument	ckpt_config_file		5046962	0					
ANR	5047130	Identifier	ckpt_config_file		5046962	0					
ANR	5047131	Argument	ckpt_suspend_file		5046962	1					
ANR	5047132	Identifier	ckpt_suspend_file		5046962	0					
ANR	5047133	Identifier	false		5046962	1					
ANR	5047134	CompoundStatement		46:15:1328:1328	5046962	1					
ANR	5047135	Statement	vmprintf	1698:3:44554:44561	5046962	0	True				
ANR	5047136	Statement	(	1698:11:44562:44562	5046962	1	True				
ANR	5047137	Statement	D_ALWAYS	1698:12:44563:44570	5046962	2	True				
ANR	5047138	Statement	","	1698:20:44571:44571	5046962	3	True				
ANR	5047139	Statement	"""Checkpoint files exist but """	1698:22:44573:44601	5046962	4	True				
ANR	5047140	Statement	"""cannot find the correct config file and suspend file\\n"""	1699:5:44608:44663	5046962	5	True				
ANR	5047141	Statement	)	1699:61:44664:44664	5046962	6	True				
ANR	5047142	ExpressionStatement		1699:62:44665:44665	5046962	7	True				
ANR	5047143	ExpressionStatement	deleteNonTransferredFiles ( )	1701:3:44728:44755	5046962	8	True				
ANR	5047144	CallExpression	deleteNonTransferredFiles ( )		5046962	0					
ANR	5047145	Callee	deleteNonTransferredFiles		5046962	0					
ANR	5047146	Identifier	deleteNonTransferredFiles		5046962	0					
ANR	5047147	ArgumentList			5046962	1					
ANR	5047148	ExpressionStatement	m_restart_with_ckpt = false	1702:3:44760:44787	5046962	9	True				
ANR	5047149	AssignmentExpression	m_restart_with_ckpt = false		5046962	0		=			
ANR	5047150	Identifier	m_restart_with_ckpt		5046962	0					
ANR	5047151	Identifier	false		5046962	1					
ANR	5047152	ElseStatement	else		5046962	0					
ANR	5047153	CompoundStatement		52:8:1576:1576	5046962	0					
ANR	5047154	ExpressionStatement	m_configfile = ckpt_config_file	1704:3:44802:44833	5046962	0	True				
ANR	5047155	AssignmentExpression	m_configfile = ckpt_config_file		5046962	0		=			
ANR	5047156	Identifier	m_configfile		5046962	0					
ANR	5047157	Identifier	ckpt_config_file		5046962	1					
ANR	5047158	ExpressionStatement	m_suspendfile = ckpt_suspend_file	1705:3:44838:44871	5046962	1	True				
ANR	5047159	AssignmentExpression	m_suspendfile = ckpt_suspend_file		5046962	0		=			
ANR	5047160	Identifier	m_suspendfile		5046962	0					
ANR	5047161	Identifier	ckpt_suspend_file		5046962	1					
ANR	5047162	Statement	vmprintf	1706:3:44876:44883	5046962	2	True				
ANR	5047163	Statement	(	1706:11:44884:44884	5046962	3	True				
ANR	5047164	Statement	D_ALWAYS	1706:12:44885:44892	5046962	4	True				
ANR	5047165	Statement	","	1706:20:44893:44893	5046962	5	True				
ANR	5047166	Statement	"""Found checkpointed files, """	1706:22:44895:44922	5046962	6	True				
ANR	5047167	Statement	"""so we start using them\\n"""	1707:5:44929:44954	5046962	7	True				
ANR	5047168	Statement	)	1707:31:44955:44955	5046962	8	True				
ANR	5047169	ExpressionStatement		1707:32:44956:44956	5046962	9	True				
ANR	5047170	ExpressionStatement	m_restart_with_ckpt = true	1708:3:44961:44987	5046962	10	True				
ANR	5047171	AssignmentExpression	m_restart_with_ckpt = true		5046962	0		=			
ANR	5047172	Identifier	m_restart_with_ckpt		5046962	0					
ANR	5047173	Identifier	true		5046962	1					
ANR	5047174	ReturnStatement	return true ;	1709:3:44992:45003	5046962	11	True				
ANR	5047175	Identifier	true		5046962	0					
ANR	5047176	IfStatement	if ( m_vm_checkpoint )		5046962	11					
ANR	5047177	Condition	m_vm_checkpoint	1714:5:45076:45090	5046962	0	True				
ANR	5047178	Identifier	m_vm_checkpoint		5046962	0					
ANR	5047179	CompoundStatement		63:23:1873:1873	5046962	1					
ANR	5047180	IfStatement	if ( m_has_transferred_disk_file )		5046962	0					
ANR	5047181	Condition	m_has_transferred_disk_file	1717:6:45191:45217	5046962	0	True				
ANR	5047182	Identifier	m_has_transferred_disk_file		5046962	0					
ANR	5047183	CompoundStatement		66:36:2000:2000	5046962	1					
ANR	5047184	Statement	vmprintf	1721:3:45384:45391	5046962	0	True				
ANR	5047185	Statement	(	1721:11:45392:45392	5046962	1	True				
ANR	5047186	Statement	D_ALWAYS	1721:12:45393:45400	5046962	2	True				
ANR	5047187	Statement	","	1721:20:45401:45401	5046962	3	True				
ANR	5047188	Statement	"""To use vm checkpint in Virsh, """	1721:22:45403:45434	5046962	4	True				
ANR	5047189	Statement	"""all disk and iso files should be """	1722:5:45441:45475	5046962	5	True				
ANR	5047190	Statement	"""in a shared file system\\n"""	1723:5:45482:45508	5046962	6	True				
ANR	5047191	Statement	)	1723:32:45509:45509	5046962	7	True				
ANR	5047192	ExpressionStatement		1723:33:45510:45510	5046962	8	True				
ANR	5047193	ExpressionStatement	m_result_msg = VMGAHP_ERR_JOBCLASSAD_KVM_MISMATCHED_CHECKPOINT	1724:3:45515:45577	5046962	9	True				
ANR	5047194	AssignmentExpression	m_result_msg = VMGAHP_ERR_JOBCLASSAD_KVM_MISMATCHED_CHECKPOINT		5046962	0		=			
ANR	5047195	Identifier	m_result_msg		5046962	0					
ANR	5047196	Identifier	VMGAHP_ERR_JOBCLASSAD_KVM_MISMATCHED_CHECKPOINT		5046962	1					
ANR	5047197	ReturnStatement	return false ;	1725:3:45582:45594	5046962	10	True				
ANR	5047198	Identifier	false		5046962	0					
ANR	5047199	IdentifierDeclStatement	MyString tmp_config_name ;	1731:1:45634:45658	5046962	12	True				
ANR	5047200	IdentifierDecl	tmp_config_name		5046962	0					
ANR	5047201	IdentifierDeclType	MyString		5046962	0					
ANR	5047202	Identifier	tmp_config_name		5046962	1					
ANR	5047203	ExpressionStatement	"tmp_config_name . sprintf ( ""%s%c%s"" , m_workingpath . Value ( ) , DIR_DELIM_CHAR , XEN_CONFIG_FILE_NAME )"	1732:1:45661:45757	5046962	13	True				
ANR	5047204	CallExpression	"tmp_config_name . sprintf ( ""%s%c%s"" , m_workingpath . Value ( ) , DIR_DELIM_CHAR , XEN_CONFIG_FILE_NAME )"		5046962	0					
ANR	5047205	Callee	tmp_config_name . sprintf		5046962	0					
ANR	5047206	MemberAccess	tmp_config_name . sprintf		5046962	0					
ANR	5047207	Identifier	tmp_config_name		5046962	0					
ANR	5047208	Identifier	sprintf		5046962	1					
ANR	5047209	ArgumentList	"""%s%c%s"""		5046962	1					
ANR	5047210	Argument	"""%s%c%s"""		5046962	0					
ANR	5047211	PrimaryExpression	"""%s%c%s"""		5046962	0					
ANR	5047212	Argument	m_workingpath . Value ( )		5046962	1					
ANR	5047213	CallExpression	m_workingpath . Value ( )		5046962	0					
ANR	5047214	Callee	m_workingpath . Value		5046962	0					
ANR	5047215	MemberAccess	m_workingpath . Value		5046962	0					
ANR	5047216	Identifier	m_workingpath		5046962	0					
ANR	5047217	Identifier	Value		5046962	1					
ANR	5047218	ArgumentList			5046962	1					
ANR	5047219	Argument	DIR_DELIM_CHAR		5046962	2					
ANR	5047220	Identifier	DIR_DELIM_CHAR		5046962	0					
ANR	5047221	Argument	XEN_CONFIG_FILE_NAME		5046962	3					
ANR	5047222	Identifier	XEN_CONFIG_FILE_NAME		5046962	0					
ANR	5047223	ExpressionStatement	"vmprintf ( D_ALWAYS , ""CreateKvmVMConfigFile\\n"" )"	1735:1:45761:45806	5046962	14	True				
ANR	5047224	CallExpression	"vmprintf ( D_ALWAYS , ""CreateKvmVMConfigFile\\n"" )"		5046962	0					
ANR	5047225	Callee	vmprintf		5046962	0					
ANR	5047226	Identifier	vmprintf		5046962	0					
ANR	5047227	ArgumentList	D_ALWAYS		5046962	1					
ANR	5047228	Argument	D_ALWAYS		5046962	0					
ANR	5047229	Identifier	D_ALWAYS		5046962	0					
ANR	5047230	Argument	"""CreateKvmVMConfigFile\\n"""		5046962	1					
ANR	5047231	PrimaryExpression	"""CreateKvmVMConfigFile\\n"""		5046962	0					
ANR	5047232	IfStatement	if ( CreateXenVMConfigFile ( tmp_config_name . Value ( ) ) == false )		5046962	15					
ANR	5047233	Condition	CreateXenVMConfigFile ( tmp_config_name . Value ( ) ) == false	1737:5:45814:45871	5046962	0	True				
ANR	5047234	EqualityExpression	CreateXenVMConfigFile ( tmp_config_name . Value ( ) ) == false		5046962	0		==			
ANR	5047235	CallExpression	CreateXenVMConfigFile ( tmp_config_name . Value ( ) )		5046962	0					
ANR	5047236	Callee	CreateXenVMConfigFile		5046962	0					
ANR	5047237	Identifier	CreateXenVMConfigFile		5046962	0					
ANR	5047238	ArgumentList	tmp_config_name . Value ( )		5046962	1					
ANR	5047239	Argument	tmp_config_name . Value ( )		5046962	0					
ANR	5047240	CallExpression	tmp_config_name . Value ( )		5046962	0					
ANR	5047241	Callee	tmp_config_name . Value		5046962	0					
ANR	5047242	MemberAccess	tmp_config_name . Value		5046962	0					
ANR	5047243	Identifier	tmp_config_name		5046962	0					
ANR	5047244	Identifier	Value		5046962	1					
ANR	5047245	ArgumentList			5046962	1					
ANR	5047246	Identifier	false		5046962	1					
ANR	5047247	CompoundStatement		87:14:2654:2654	5046962	1					
ANR	5047248	ExpressionStatement	m_result_msg = VMGAHP_ERR_CRITICAL	1739:2:45879:45913	5046962	0	True				
ANR	5047249	AssignmentExpression	m_result_msg = VMGAHP_ERR_CRITICAL		5046962	0		=			
ANR	5047250	Identifier	m_result_msg		5046962	0					
ANR	5047251	Identifier	VMGAHP_ERR_CRITICAL		5046962	1					
ANR	5047252	ReturnStatement	return false ;	1740:2:45917:45929	5046962	1	True				
ANR	5047253	Identifier	false		5046962	0					
ANR	5047254	ExpressionStatement	m_configfile = tmp_config_name . Value ( )	1744:1:45959:45997	5046962	16	True				
ANR	5047255	AssignmentExpression	m_configfile = tmp_config_name . Value ( )		5046962	0		=			
ANR	5047256	Identifier	m_configfile		5046962	0					
ANR	5047257	CallExpression	tmp_config_name . Value ( )		5046962	1					
ANR	5047258	Callee	tmp_config_name . Value		5046962	0					
ANR	5047259	MemberAccess	tmp_config_name . Value		5046962	0					
ANR	5047260	Identifier	tmp_config_name		5046962	0					
ANR	5047261	Identifier	Value		5046962	1					
ANR	5047262	ArgumentList			5046962	1					
ANR	5047263	ReturnStatement	return true ;	1745:1:46000:46011	5046962	17	True				
ANR	5047264	Identifier	true		5046962	0					
ANR	5047265	ReturnType	bool		5046962	1					
ANR	5047266	Identifier	KVMType :: CreateConfigFile		5046962	2					
ANR	5047267	ParameterList			5046962	3					
ANR	5047268	CFGEntryNode	ENTRY		5046962		True				
ANR	5047269	CFGExitNode	EXIT		5046962		True				
ANR	5047270	Symbol	m_result_msg		5046962						
ANR	5047271	Symbol	parseCommonParamFromClassAd		5046962						
ANR	5047272	Symbol	m_workingpath . Value		5046962						
ANR	5047273	Symbol	m_vm_mem		5046962						
ANR	5047274	Symbol	VMGAHP_ERR_JOBCLASSAD_XEN_NO_DISK_PARAM		5046962						
ANR	5047275	Symbol	ckpt_suspend_file		5046962						
ANR	5047276	Symbol	VMGAHP_ERR_CRITICAL		5046962						
ANR	5047277	Symbol	m_configfile		5046962						
ANR	5047278	Symbol	findCkptConfigAndSuspendFile		5046962						
ANR	5047279	Symbol	VMGAHP_ERR_JOBCLASSAD_KVM_MISMATCHED_CHECKPOINT		5046962						
ANR	5047280	Symbol	m_transfer_intermediate_files . isEmpty		5046962						
ANR	5047281	Symbol	m_vm_checkpoint		5046962						
ANR	5047282	Symbol	priv		5046962						
ANR	5047283	Symbol	m_has_transferred_disk_file		5046962						
ANR	5047284	Symbol	VMPARAM_VM_DISK		5046962						
ANR	5047285	Symbol	m_transfer_intermediate_files		5046962						
ANR	5047286	Symbol	XEN_CONFIG_FILE_NAME		5046962						
ANR	5047287	Symbol	tmp_config_name		5046962						
ANR	5047288	Symbol	m_classAd . LookupString		5046962						
ANR	5047289	Symbol	kvm_disk . Value		5046962						
ANR	5047290	Symbol	m_suspendfile		5046962						
ANR	5047291	Symbol	DIR_DELIM_CHAR		5046962						
ANR	5047292	Symbol	false		5046962						
ANR	5047293	Symbol	D_ALWAYS		5046962						
ANR	5047294	Symbol	D_FULLDEBUG		5046962						
ANR	5047295	Symbol	set_root_priv		5046962						
ANR	5047296	Symbol	ckpt_config_file		5046962						
ANR	5047297	Symbol	CreateXenVMConfigFile		5046962						
ANR	5047298	Symbol	m_restart_with_ckpt		5046962						
ANR	5047299	Symbol	m_workingpath		5046962						
ANR	5047300	Symbol	VMGAHP_ERR_JOBCLASSAD_KVM_INVALID_DISK_PARAM		5046962						
ANR	5047301	Symbol	tmp_config_name . Value		5046962						
ANR	5047302	Symbol	true		5046962						
ANR	5047303	Symbol	parseXenDiskParam		5046962						
ANR	5047304	Symbol	kvm_disk		5046962						
ANR	5047305	Symbol	m_classAd		5046962						
